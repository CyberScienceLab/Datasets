push mov sub movl movl jmp mov add mov mov add mov mov add mov mov cmp jae mov movsbl sar mov mov mov mov mov movsbl shl and mov mov add cmp jae mov movsbl sar movzbl or mov mov movsbl shl and sar mov mov add cmp jae mov movsbl sar movzbl or mov mov movsbl and mov mov mov mov jmp mov movb movzbl mov mov mov mov jmp mov movb mov movb movzbl mov mov mov mov jmp mov movb mov pop ret push mov movsbl cmp jl movsbl cmp jg movsbl sub jmp movsbl cmp jl movsbl cmp jg movsbl sub jmp movsbl cmp jl movsbl cmp jg movsbl add jmp movsbl cmp jne mov jmp movsbl cmp jne mov jmp xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl jmp mov add mov mov mov sub mov test je mov add mov mov movzbl push call add movsbl shl and mov mov movzbl push call add mov movsbl sar movsbl or mov mov movsbl cmp je movsbl and shl mov mov movzbl push call add mov movsbl sar movsbl or mov mov movsbl cmp je movsbl shl and mov mov movzbl push call add movsbl movsbl or mov jmp mov sub mov movb movl jmp mov sub mov movb mov mov movl mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov jmp mov mov pop ret int3 int3 push mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov cmpl jne mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne cmpl jl cmpl jge mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne cmpl jl cmpl jge mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne cmpl jl cmpl jge mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne cmpl jl cmpl jge mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne cmpl jl cmpl jge mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne cmpl jl cmpl jge mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl jmp mov sub mov cmpl jl mov add mov sar and je cmpl jne movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov mov add mov jmp mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov mov add mov jmp mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov mov add mov jmp mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov mov add mov jmp mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp jmp cmpl jne movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov mov add mov jmp mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov pop ret int3 int3 push mov sub push movl movl movl movl movl movl movl mov mov mov test je movl movl movl jmp mov add mov cmpl jge movl jmp mov add mov cmpl jge movl jmp mov add mov cmpl jge movl jmp mov add mov cmpl jge mov shl mov shl lea mov shl add mov movl mov shl mov shl lea mov shl add mov movl jmp jmp jmp jmp push push push call push call push push call add mov cmpl jne jmp push mov push mov push call add movl movl mov push call add mov mov add mov mov and sar mov mov mov add mov mov and mov mov mov add mov mov mov mov mov add mov mov push call add test jne mov cmp jge cmpl jne movl mov shl mov shl lea mov shl add mov cmpl jne mov shl mov shl lea mov shl add mov mov mov mov sub mov imul mov shl mov shl lea mov shl add mov mov mov mov add mov mov shl mov shl lea mov shl add mov mov add mov shl mov shl mov shl lea add mov mov jmp mov sub mov shl mov shl lea mov shl add mov mov imul mov shl mov shl lea mov shl add mov mov mov mov shl mov shl lea mov shl add mov mov add mov shl mov shl mov shl lea add mov mov mov push call add mov mov add mov mov and sar mov mov mov add mov mov and mov mov mov add mov mov mov mov mov add mov jmp mov push call add test jne mov push call add mov jmp movl mov push call add movl jmp mov add mov cmpl jge mov movl jmp movl jmp mov add mov cmpl jge movl jmp mov add mov cmpl jge movl jmp mov add mov cmpl jge movl jmp mov add mov cmpl jge mov shl mov shl lea mov shl add mov cmpl jl mov and shl mov mov and shl or mov mov and shl or mov mov or mov cmpl jne mov mov mov mov mov mov add mov jmp movl jmp mov add mov mov cmp jge mov mov cmp jne mov mov jmp jmp mov cmp jne mov mov mov mov mov mov add mov movl jmp mov add mov mov shl mov shl lea mov shl add mov mov cmp jge mov shl mov shl lea mov shl add mov mov imul mov mov mov mov jmp jmp jmp jmp jmp cmpl jl cmpl jl cmpl jge jmp jmp mov sub mov mov mov jmp movl movl movl jmp mov add mov cmpl jge mov cmpl je cmpl jne mov mov mov cmp jge mov mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov jmp mov add mov sub mov mov cmp jge mov mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov mov jmp mov cmp jge mov add mov sub mov mov cmp jge mov mov mov cmp jl mov cmp jl mov cmp jl mov cmp jl movl movb movl mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl mov cmp jl movl movb movl mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl mov cmp jl movl movb movl mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl mov cmp jl movl movb movl mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl mov cmp jl movl movb movl mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb cmpl jl cmpl jge movl cmpl jl cmpl jge movl cmpl jl cmpl jge movl cmpl jl cmpl jge movl cmpl jl cmpl jge movl cmpl jl cmpl jge movl cmpl jl cmpl jge movl movl mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov add mov movl mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov sub mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov add mov movl movl jmp mov add mov cmpl jge mov cmpl je cmpl jne mov mov mov mov cmpl jle mov movb mov add mov mov add mov mov push mov push call add movl jmp mov add mov mov cmp jge mov mov push call add mov add mov jmp mov mov push call add jmp mov movb mov add mov mov add mov mov mov push call add jmp mov add mov sub mov cmpl jle mov movb mov add mov mov add mov mov push mov push call add mov add mov jmp mov add mov mov cmp jge mov mov push call add mov add mov jmp mov mov push call add jmp mov movb mov add mov mov add mov mov mov push call add mov mov jmp mov cmp jge mov add mov sub mov mov movb mov add mov mov add mov mov push mov push call add mov add mov jmp mov add mov mov cmp jge mov mov push call add mov add mov jmp movl mov cmp jge movl mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov add mov jmp movl mov cmp jge movl mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov add mov jmp movl cmpl jge cmpl jne cmpl jne movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov jmp jmp movl jmp mov add mov mov cmp jge movl jmp mov add mov mov cmp jge mov mov mov cmp jne jmp jmp mov cmp jne mov mov mov mov mov add mov jmp movl movl jmp mov add mov mov cmp jge movl jmp mov add mov mov cmp jge mov mov mov cmp jne jmp jmp mov cmp jne jmp mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp movl mov cmp jge movl mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov add mov jmp movl cmpl jne mov imul movl mov imul movl mov imul movl mov imul movl mov imul movl mov imul movl mov add mov jmp mov sub imul mov imul mov mov mov imul movl mov sub imul mov imul mov mov mov imul movl mov sub imul mov imul mov mov mov imul movl mov add mov mov cltd and add sar add mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push push cmpl jge mov add mov call movl movl movl movl movl movl movl movl movl movl movl movl cmpl je movl mov push call add mov mov add mov jmp mov sub mov jmp mov sub mov cmpl jl mov imul mov imul mov cmp jne mov add imul mov imul mov mov jmp movl jmp mov add mov mov cmp jge jmp movl movl jmp mov add mov mov cmp jge movl jmp mov sub mov cmpl jl mov sub mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov jmp jmp movl mov cmp jge movl mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov add mov jmp cmpl jge xor jmp lea push push call push push push lea push call push push call add mov mov push mov push push push call add mov push call add push push push lea push call push push call add mov mov push mov push push push call add mov push call add push push push lea push call push push call add mov mov push mov push push push call add mov push call add push push push lea push call push push call add mov mov push mov push push push call add mov push call add push push push lea push call push push call add mov mov push mov push push push call add mov push call add call push call add push call add push call add push call add push call add mov mov mov mov mov mov lea jmp dec dec dec dec xor pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 push mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push push call add mov cmpl jne xor jmp push mov push mov push call add movl mov mov mov push call add mov mov push call add test jne mov push call add mov add mov mov push call add cmp jne jmp mov push call add mov jmp mov push call add movl movl mov cmp jge movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov mov mov mov mov add mov jmp push push call add mov cmpl jne xor jmp push mov push mov push call add movl mov mov mov push call add mov mov push call add test jne mov push call add mov add mov mov push call add cmp jne jmp mov push call add mov jmp mov push call add movl movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov movl mov mov mov mov mov cmp jge movl jmp mov add mov mov cmp jge mov add movzbl mov movzbl cmp jne jmp jmp jmp mov cmp jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movzbl test je mov push push mov add push call add add mov mov mov mov mov add mov jmp movl jmp mov add mov mov cmp jge mov add movzbl mov movzbl cmp jne jmp jmp jmp mov cmp jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movzbl test je mov push push mov add push call add add mov mov mov mov mov add mov jmp movl jmp mov add mov mov cmp jge mov add movzbl mov movzbl cmp jne jmp jmp jmp mov cmp jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movzbl test je mov push push mov add push call add add mov mov mov mov mov add mov jmp movl jmp mov add mov mov cmp jge mov add movzbl mov movzbl cmp jne jmp jmp jmp mov cmp jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movzbl test je mov push push mov add push call add add mov mov mov mov mov add mov jmp movl jmp mov add mov mov cmp jge mov add movzbl mov movzbl cmp jne jmp jmp jmp mov cmp jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movzbl test je mov push push mov add push call add add mov mov mov mov mov add mov jmp push push call add mov cmpl jne xor jmp push mov push mov push call add movl mov mov mov push call add mov mov push call add test jne mov push call add mov add mov mov push call add cmp jne jmp mov push call add mov jmp mov push call add movl movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov add mov mov mov movl movl mov mov mov cmp jge mov cltd and add sar cmp jge mov movzbl test jne mov add mov cmpl jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov cmpl jne mov movzbl test jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov jmp mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov cmpl jne mov movzbl test jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov jmp mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov cmpl jne mov movzbl test jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov jmp mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov cmpl jne mov movzbl test jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov jmp mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov cmpl jne mov movzbl test jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov jmp mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov cmpl jne mov movzbl test jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov jmp mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov shl mov mov mov jmp mov add mov mov add cmp jge mov mov mov mov mov add mov jmp mov mov movl jmp mov sub mov cmpl jl mov mov mov sub mov shl sar and je mov movb mov add mov jmp mov movb mov add mov jmp mov add mov jmp mov movzbl test je mov add mov movl jmp mov sub mov cmpl jl mov mov mov sub mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov jmp mov add mov jmp movl movl mov cmp jge mov cmp jge movl mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov add mov mov add mov mov push push mov add push call add add mov jmp push mov add push call add xor mov xor call mov pop ret int3 int3 int3 int3 int3 int3 push mov sub push push call add mov cmpl jne xor jmp mov push call add mov mov push call add test jne mov push call add mov add mov mov push call add mov jmp mov push call add movl movl mov cmp jge movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov mov mov mov add mov jmp push push call add mov cmpl jne xor jmp movl mov push call add test jne mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov movl mov shl or mov mov shl or mov mov shl or mov mov or mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov movl mov shl or mov mov shl or mov mov shl or mov mov or mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov movl mov shl or mov mov shl or mov mov shl or mov mov or mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov movl mov shl or mov mov shl or mov mov shl or mov mov or mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov movl mov shl or mov mov shl or mov mov shl or mov mov or mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov movl mov shl or mov mov shl or mov mov shl or mov mov or mov mov imul mov mov mov imul mov mov mov imul mov mov mov imul mov mov mov imul mov mov mov imul mov mov mov add mov jmp mov push call add movl jmp mov add mov mov sub cmp jge mov imul mov push mov imul mov push mov imul mov push mov imul mov push mov imul mov push mov imul mov push call add jmp movl mov add mov mov mov mov addl cmpb jne mov sub mov mov push push push call add xor mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov movl jmp mov add mov cmpl jge mov movb jmp mov mov cmpl jne mov add mov push call add mov mov mov mov movl mov movl movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov mov mov mov addl cmpb jne mov sub mov je mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movsbl cmp jne lea mov mov add mov mov mov mov addl cmpb jne mov sub mov cmpl jne movsbl cmp jne mov add cmp jle mov mov mov mov mov add mov mov mov mov addl cmpb jne mov sub mov je mov mov mov mov movl mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp call jmp jmp movsbl cmp jne mov add cmp jle mov mov mov mov mov add mov mov mov mov addl cmpb jne mov sub mov je mov mov mov mov movl mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp call jmp jmp xor jmp jmp movsbl cmp jne jmp jmp movsbl cmp je movsbl cmp jne jmp jmp xor mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push push lea mov addb lea mov lea mov lea mov lea mov lea mov push push push mov push call push push push mov push call mov push call add mov push mov push call add test jne xor jmp push mov push call mov push push push lea push call test je lea push mov push mov push call test jne lea push call lea push call jmp mov pop pop mov pop ret push mov sub movl movl movl movl movl mov mov push mov push call mov push push call mov movl movl movl push mov push call mov lea push call mov pop ret push mov push mov mov push push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov mov cmpl je cmpl je cmpl je jmp mov and movzwl mov mov shr and movzwl mov mov mov cmpl je cmpl je jmp push push mov push push mov push call jmp mov push call jmp mov push mov push mov push mov push call jmp jmp lea push mov push call mov lea push mov push call jmp push call jmp mov push mov push mov push mov push call jmp xor mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov cmpl je cmpl je jmp mov jmp mov and movzwl cmp je mov and movzwl cmp jne mov and movzwl push mov push call mov jmp xor mov pop ret jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp cmp jne repz jmp mov push mov sub push xor cmp jne call push push push push push movl call add or jmp mov cmp je push mov mov lea push push pushl lea push movl movl call add decl mov js mov mov jmp lea push push call pop pop mov pop pop leave ret mov push mov lea push pushl pushl pushl call add pop ret mov push mov lea push push pushl pushl pushl call add pop ret mov push mov lea push pushl pushl pushl pushl call add pop ret mov push mov lea push push pushl pushl pushl pushl call add pop ret mov push mov lea push pushl pushl pushl pushl pushl call add pop ret mov push mov lea push push pushl pushl pushl call add pop ret mov push mov lea push pushl pushl pushl pushl call add pop ret mov push mov lea push pushl call pop pop pop ret mov push mov lea push pushl call pop pop pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push pushl pushl call add pop ret mov push mov mov push xor cmp jne call push push push push push movl call add xor jmp mov and pop pop ret mov push mov mov push xor cmp jne call push push push push push movl call add xor jmp mov and pop pop ret mov push mov pushl call test jne call jmp xor test je push call pop or pop ret xor pop ret mov push mov pop jmp push push call xor mov xor mov cmp setne cmp jne call movl push push push push push call add xor jmp xor mov cmp setne cmp je xor cmp setne cmp je call mov cmp jne call movl jmp mov cmp jne call movl push lea push push call add jmp push pushl push push call add mov movl call mov call ret pushl call pop ret mov push mov push pushl pushl call add pop ret mov push mov push push mov xor cmp jne call push pop push push push push push mov call add mov jmp push pushl pushl call add mov cmp je xor jmp call mov pop pop pop ret mov push mov sub push push push xor cmp je cmp je mov cmp jne call push push push push push movl call add xor pop pop pop leave ret mov cmp je or xor divl cmp ja mov imul testl mov mov mov je mov mov jmp movl test je mov and je mov test je jl mov cmp jb mov push pushl pushl call sub add add sub add jmp cmp jb test je push call pop test jne cmpl mov je xor mov divl sub push pushl push call pop push call add cmp je mov cmp ja mov add sub cmp jb mov jmp mov movsbl push push call pop pop cmp je incl mov dec mov test jg movl test jne mov jmp orl mov sub xor divl jmp orl mov jmp push push call xor cmp je cmp je xor cmp setne cmp jne call movl push push push push push call add xor call ret pushl call pop mov pushl pushl pushl pushl call add mov movl call mov jmp pushl call pop ret mov push mov sub push push mov xor cmp jne call push push push push push movl call add or jmp push call cmp pop mov jge mov push push push call add cmp mov jl mov test jne sub jmp mov mov push mov sub mov test je mov mov sar mov and shl testb je mov cmp jae mov cmpb jne incl xor inc cmp jb cmp jne mov jmp test js call movl jmp testb je mov cmp jne mov jmp mov mov sub add sar and lea mov mov shl testb je push push pushl call add cmp jne mov mov add jmp cmpb jne incl inc cmp jb testl jmp push pushl pushl call add test jge or jmp mov cmp ja mov test je test je mov mov mov testb je incl mov sub mov mov add pop pop pop leave ret push push call xor xor cmp setne cmp jne call movl push push push push push call add or jmp pushl call pop mov pushl call pop mov movl call mov call ret pushl call pop ret mov push mov push mov mov test jne call movl or jmp and cmpl mov jne push call add andl pop push call mov pop test jns and mov jmp test je test je test jne movl pushl pushl push call pop push call xor add cmp setne dec mov pop pop ret push push call xor xor cmp setne cmp jne call movl push push push push push call add or jmp mov cmp je cmp je cmp jne pushl call pop mov push pushl pushl call add mov movl call mov call ret pushl call pop ret mov push mov push push mov push xor or cmp jne call push push push push push movl call add or jmp testb je push call push mov call push call push call add test jge or jmp mov cmp je push call pop mov mov mov pop pop pop pop ret push push call orl xor mov xor cmp setne cmp jne call movl push push push push push call add or jmp testb je mov mov call ret push call pop mov push call pop mov movl call jmp mov push call pop ret push push call xor mov xor mov cmp setne cmp jne call movl push push push push push call add or jmp push call pop mov testb jne push call pop cmp je cmp je mov sar mov and shl add jmp mov testb jne cmp je cmp je mov sar and shl add jmp mov testb je call movl push push push push push call add orl cmp jne decl js mov movzbl inc mov jmp push call pop mov movl call mov call ret mov push call pop ret push push call xor mov xor mov cmp setne cmp jne call movl push push push push push call add or jmp push call pop mov testb jne push call pop cmp je cmp je mov sar mov and shl add jmp mov testb jne cmp je cmp je mov sar and shl add jmp mov testb je call movl push push push push push call add orl cmp jne decl js mov movzbl inc mov jmp push call pop mov movl call mov call ret mov push call pop ret mov push mov mov decl js mov movzbl inc mov pop ret push call pop pop ret mov push push push mov call movl mov pop ret movl jmp mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret mov push mov sub jmp pushl call pop test je pushl call pop test je leave ret testb mov jne orl mov call push call pop push lea call push lea push call int3 mov push mov cmpl jne call pushl call push call pop pop pop ret mov cmp jne mov cmpl jne mov cmp jne cmpl jbe xor cmp setne mov ret xor ret push push call xor mov lea push call push pop mov mov cmp jne mov cmpl jne mov cmp jne cmpl jbe xor cmp setne mov jmp mov xor inc push call pop test jne push call pop call test jne push call pop call mov call test jge push call pop call mov call mov call test jge push call pop call test jge push call pop push call pop cmp je push call pop call test je movzwl jmp push pop push push push push call mov cmp jne push call call mov jmp mov mov mov mov push push call pop pop ret mov mov mov cmpl jne push call call movl mov jmp xor inc ret mov movl mov call ret call jmp mov push mov sub mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl mov mov mov mov call mov push call pop push call push call cmpl jne push call pop push call push call leave ret mov push mov push push mov push call mov mov pop test jne call movl orl or jmp test je call movl jmp push xor test je mov test je mov and mov mov mov and or mov mov mov test jne call add cmp je call add cmp jne pushl call pop test jne push call pop testl push je mov mov lea mov mov sub dec cmp mov jle push push pushl call add mov jmp or mov or jmp mov cmp je cmp je mov and mov sar shl add jmp mov testb je push push push push call and add cmp je mov mov mov jmp xor inc push lea push pushl call add mov cmp je orl or jmp mov and pop pop pop leave ret mov push mov mov push mov movb test jne call mov mov mov mov mov mov cmp je mov test jne call mov mov cmp je mov mov test jne call mov mov testb jne orl movb jmp mov mov mov mov mov pop pop ret cmpb je mov andl ret mov ret testb je cmpl je decl js mov mov incl movzbl jmp movsbl push push call pop pop cmp jne or ret incl ret mov push mov push mov jmp mov mov decl call cmpl je cmpl jg pop pop ret mov push mov testb push push mov mov je cmpl jne mov add jmp mov decl mov call inc cmpl jne call cmpl jne mov mov call cmpl jg pop pop pop ret mov push mov mov addl mov mov pop ret mov push mov mov addl mov mov mov pop ret mov push mov mov addl mov mov pop ret mov push mov sub mov xor mov push mov push mov xor push mov pushl lea mov mov mov mov mov mov mov mov mov call test jne call movl xor push push push push push call add cmpb je mov andl or jmp testb jne push call pop mov cmp je cmp je mov and mov sar shl add jmp mov testb jne cmp je cmp je mov and sar shl add jmp mov testb jne xor cmp je mov mov mov mov mov test je inc cmpl mov jl mov sub cmp ja movsbl movsbl and xor jmp xor xor movsbl push sar pop mov cmp ja jmp orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne orl jmp orl jmp orl jmp orl jmp orl jmp cmp jne add mov mov cmp mov jge orl negl jmp mov imul movsbl lea mov jmp mov jmp cmp jne add mov mov cmp mov jge orl jmp mov imul movsbl lea mov jmp cmp je cmp je cmp je cmp jne orl jmp cmpb jne inc orl mov jmp orl jmp orl jmp mov cmp jne cmpb jne inc inc orl mov jmp cmp jne cmpb jne inc inc andl mov jmp cmp je cmp je cmp je cmp je cmp je cmp je mov lea push movzbl push mov call pop test mov pop je mov lea call mov inc mov test je mov lea call jmp movsbl cmp jg je cmp jg je sub je dec dec je dec dec je dec dec jne add movl mov orl cmp lea mov mov mov jge movl jmp testl jne orl jmp testl jne orl mov cmp jne mov add testl mov mov mov je cmp jne mov mov mov movl jmp sub je dec dec je sub je dec dec jne add testl mov je movzwl push push lea push lea push call add test je movl jmp mov mov movl lea mov jmp mov add mov cmp je mov cmp je testl movswl mov je cltd sub sar movl jmp mov jmp mov mov push call pop jmp cmp jg je cmp jl cmp jle cmp je cmp je cmp jne testb movl je orl jmp mov add mov call test je testb je mov mov jmp mov mov movl jmp orl movl mov test je mov mov add jmp jne cmp jne movl jmp cmp jle mov cmpl jle mov add push call mov pop mov test je mov mov mov jmp movl xor mov add mov mov mov lea push pushl movsbl pushl mov push pushl lea push push pushl call pop call mov add and je cmp jne lea push push pushl call pop call pop pop cmpb jne cmp jne lea push push pushl call pop call pop pop cmpb jne orl inc mov push jmp movl mov jmp sub je dec dec je sub jne movl testb movl je mov add movb mov movl jmp test jne add test je mov test je movswl jmp movzwl cltd jmp mov test je cltd jmp xor mov test je cmp jg jl cmp jae neg adc neg orl testl mov mov jne xor cmpl jge movl jmp andl mov cmp jle mov mov or jne and lea mov decl test jg mov or je mov cltd push push push push call add cmp mov mov mov jle add mov dec jmp lea sub inc testl mov mov je test je mov cmpb je decl mov movb inc jmp dec cmp je inc inc cmp jne sub sar jmp cmp jne mov mov mov jmp dec cmpb je inc cmp jne sub mov cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub testb jne pushl lea push push call add pushl mov lea lea call testb pop je testb jne push push push lea call add cmpl mov je test jle mov mov movzwl decl push push lea push lea inc push inc call add test jne cmp je pushl lea lea call cmpl pop jne jmp orl jmp mov push lea call pop cmpl jl testb je push push push lea call add cmpl je pushl call andl pop mov mov mov test je mov mov mov jmp cmpb je mov andl mov mov pop pop xor pop call leave ret nop sbb inc add inc add add leave inc add lret inc lret jne inc add mov mov pop ret mov push mov sub mov xor mov andl push push lea push push call lea mov lea add mov mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov lea movl mov mov mov mov movl movl mov call push mov call lea push call test jne test jne push call pop push call push call mov xor pop call leave ret mov push mov push pushl call pushl mov call pop pop mov mov pop pop ret pushl call pop ret mov push mov pop jmp mov push mov pushl call pop test je pop jmp push call pop pop jmp xor push push push push push call add ret mov push mov pop jmp mov push mov mov xor cmp je inc cmp jb lea cmp ja push pop pop ret mov pop ret add push pop cmp sbb and add pop ret call test jne mov ret add ret call test jne mov ret add ret mov push mov push call mov push mov call pop mov call mov pop pop ret mov push mov call test jne push pop pop ret call mov mov xor pop ret mov push mov push mov xor cmp jne push push push push push call add push pop jmp call mov mov xor pop pop ret mov push mov call test jne push pop pop ret call mov mov xor pop ret mov push mov push mov xor cmp jne push push push push push call add push pop jmp call mov mov xor pop pop ret mov push mov sub push xor cmp jne call push push push push push movl call add or jmp mov cmp je push pushl mov pushl mov pushl lea push movl movl call add decl mov js mov mov jmp lea push push call pop pop mov pop pop leave ret mov push mov pushl push pushl pushl call add pop ret mov push mov sub push xor cmp jne call push push push push push movl call add or jmp pushl lea pushl movl pushl movl push mov mov call add pop leave ret mov push mov pushl push pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov sub push xor cmp jne call push push push push push movl call add or jmp push mov push mov cmp je cmp jne call push push push push push movl call add or jmp mov mov cmp ja mov pushl lea pushl movl pushl mov push mov call add mov cmp je cmp jl decl js mov mov jmp lea push push call pop pop cmp je mov jmp xor cmp mov setge dec dec pop pop pop leave ret mov push mov pushl push pushl pushl pushl push call add test jge or pop ret mov push mov pushl pushl pushl pushl pushl push call add test jge or pop ret mov push mov push xor cmp jne call push push push push push movl call add or jmp push mov cmp je cmp ja call movl jmp pushl pushl pushl pushl push push call add cmp jge mov cmp jne call movl push push push push push call add or pop pop pop ret mov push mov pushl push pushl pushl pushl call add pop ret mov push mov push push xor cmp jne call push push push push push movl call add or jmp push mov push cmp jne cmp jne cmp jne xor jmp cmp je mov cmp ja call movl jmp call pushl pushl pushl cmp jbe mov mov inc push push push call add cmp jne call cmpl jne call mov jmp mov push push push mov call add mov cmp jne cmpl jne call cmpl jne call mov mov jmp cmp jge mov cmp jne call movl push push push push push call add or pop pop pop leave ret mov push mov pushl push pushl pushl pushl pushl call add pop ret mov push mov pushl push pushl pushl pushl push call add test jge or pop ret mov push mov pushl pushl pushl pushl pushl push call add test jge or pop ret mov ret mov push push pop test jne mov jmp cmp jge mov mov push push call pop pop mov test jne push push mov call pop pop mov test jne push pop pop ret xor mov jmp mov mov add add cmp jl push pop xor mov push mov sar mov mov and shl mov cmp je cmp je test jne mov add inc cmp jl pop xor pop ret call cmpb je call pushl call pop ret mov push mov push mov mov cmp jb cmp ja mov sub sar add push call orl pop jmp add push call pop pop ret mov push mov mov cmp jge add push call mov orl pop pop ret mov add push call pop ret mov push mov mov mov cmp jb cmp ja andl sub sar add push call pop pop ret add push call pop ret mov push mov mov cmp mov jge andl add push call pop pop ret add push call pop ret mov push mov sub mov push xor push mov mov mov mov mov jmp inc cmpb je mov cmp je cmp je cmp je call push push push push push movl call add xor jmp movl jmp orl mov jmp movl orl xor inc inc mov push cmp je lea mov cmp je movsbl cmp jg je sub je sub je dec je sub je sub je sub jne cmp jne orl movl jmp or jmp testb jne orl jmp movl jmp testb jne mov and or mov mov and or mov jmp cmp jne orl movl jmp sub je sub je dec je sub je sub jne testl jne or jmp cmp jne andl movl jmp cmp jne or movl jmp testl jne orl jmp testl je xor jmp orl inc mov cmp jne cmp je jmp inc cmpb je push push push call add test jne add jmp inc cmpb je cmpb jne inc cmpb je push push push call add test jne add orl jmp push push push call add test jne add orl jmp push push push call add test jne add orl jmp inc cmpb je cmp je call push push push push push movl call add jmp push pushl lea pushl pushl push call add test je xor jmp mov incl mov mov mov mov mov mov mov mov pop pop pop leave ret push push call xor xor mov push call pop mov xor mov cmp jge mov lea cmp je mov mov test jne test jne lea cmp ja lea push call pop test je mov pushl push call pop pop mov mov testb je push push call pop pop inc jmp mov mov jmp shl push call pop mov mov mov add cmp je push mov add push call pop pop test mov jne pushl call pop mov mov jmp mov add push call mov mov mov mov cmp je andl mov mov mov mov orl movl call mov call ret mov push call pop ret int3 push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov ret mov mov pop pop pop pop pop mov pop push ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp je mov add xor call mov mov add xor jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov sub push mov push mov xor push mov movb movl lea cmp je mov add xor call mov mov add xor call mov testb jne mov lea mov mov mov mov cmp je lea lea mov lea mov mov mov test je mov call movb test jl jg mov mov cmp jne cmpb je mov cmp je mov add xor call mov mov add xor call mov pop pop pop mov pop ret movl jmp mov cmpl jne cmpl je push call add test je mov push push call add mov call mov cmp je push push mov mov call mov mov mov mov cmp je mov add xor call mov mov add xor call mov mov mov call mov cmp je push push mov call jmp push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret push mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret mov mov mov push call xor xor xor xor xor jmp push mov push push push push push push push call pop pop pop pop ret push mov push push pushl call add pop ret mov push mov mov call mov xor mov mov push xor mov mov mov cmp jne xor jmp cmp jne call mov call push push push push push movl call add or jmp push push mov mov sar lea mov and shl add mov add sar mov mov cmp je cmp jne mov not test jne call xor mov call push push push push push movl call add jmp testb je push push push pushl call add pushl call pop test je mov testb je call mov xor cmp lea sete push mov pushl mov call test je xor cmp je test je call mov mov xor mov cmp jbe mov mov test jne mov mov xor cmp sete mov mov add cmpl je mov mov mov andl push lea push jmp movsbl push call pop test je mov sub add xor inc cmp jbe push lea push push call add cmp je inc incl jmp push push lea push call add cmp je xor push push push lea push push lea push push pushl inc incl call mov test je push lea push push lea push mov mov pushl call test je mov mov add cmp mov jl cmpl je push lea push push lea push mov mov movb pushl call test je cmpl jl incl incl jmp cmp je cmp jne movzwl xor cmp sete inc inc addl mov mov cmp je cmp jne pushl call pop cmp jne addl cmpl je push pop push mov call pop cmp jne incl incl mov cmp jb jmp mov mov incl mov mov mov jmp xor mov add testb je mov mov test jne mov cmp jbe jmp mov mov andl sub lea cmp jae mov incl mov inc cmp jne incl movb inc incl mov inc incl cmpl jb mov lea sub push lea push push lea push mov pushl call test je mov add cmp jl mov sub cmp jb jmp mov cmp jne cmp jbe jmp mov mov andl sub lea cmp jae mov addl movzwl inc inc cmp jne addl push pop mov inc inc addl addl mov inc inc cmpl jb mov lea sub push lea push push lea push mov pushl call test je mov add cmp jl mov sub cmp jb jmp cmp jbe mov andl sub push lea pop cmp jae mov movzwl add add cmp jne push pop mov add add add mov add cmpl jb xor push push push lea push lea sub cltd sub sar push mov push push push call mov cmp je push lea push mov sub push lea push mov mov pushl call test je add cmp jg jmp call mov cmp jg mov sub mov cmp jb jmp push lea push pushl pushl pushl call test je mov andl mov jmp call mov cmpl jne cmpl je push pop cmp jne call movl call mov jmp pushl call pop jmp mov mov testb je mov cmpb jne xor jmp call movl call andl or jmp mov sub pop pop mov xor pop call leave ret push push call mov cmp jne call andl call movl or jmp xor cmp jl cmp jb call mov call movl push push push push push call add jmp mov sar lea mov and shl mov movsbl and je push call pop mov mov testb je pushl pushl pushl call add mov jmp call movl call mov orl movl call mov call ret pushl call pop ret mov push mov mov push xor cmp jne call push push push push push movl call add or jmp mov pop pop ret mov push mov push push mov mov mov and xor cmp jne test je mov push mov sub test jle push push push call pop push call add cmp jne mov test jns and mov jmp orl or pop mov andl mov pop mov pop pop ret mov push mov push mov test jne push call pop jmp push call pop test je or jmp testl je push call push call pop neg pop sbb jmp xor pop pop ret push push call xor mov mov push call pop mov xor mov cmp jge mov lea cmp je mov testb je push push call pop pop xor inc mov mov mov mov test je cmp jne push call pop cmp je incl jmp cmp jne test je push call pop cmp jne or mov call inc jmp xor mov mov pushl push call pop pop ret movl call cmpl mov je mov call ret push call pop ret push push call xor cmp jne push call pop jmp pushl call pop mov pushl call pop mov movl call mov call ret pushl call pop ret push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmpl je push push and and cmp pop pop jne pop pop pop jmp test jne shr and cmp jb rep jmp nop mov mov sub jb and add jmp jmp nop jmp nop test inc add out inc add out inc add rorl inc add add jmp add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov add shr add cmp jb rep jmp lea jnp inc add inc add inc add inc add inc add inc add inc add out inc add inc (bad) in inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov xchg out inc add inc add or leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop xor inc add inc add inc add rorl add jmp cmp jb std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea aam inc add lock add lock add lock add lock add lock add inc add icebp inc add inc (bad) sbb inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov xor inc add icebp inc add inc add add leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret push push call xor mov lea push call movl push push pop push call pop pop cmp je mov mov lea jmp movb orl movb mov movb movb movb mov movb add mov add cmp jb cmp je mov cmp je mov lea lea mov mov cmp jl mov movl jmp push push call pop pop test je mov lea mov addl lea jmp movb orl movb andl andb movb movb andl movb add mov add cmp jb incl cmp jl jmp mov andl test jle mov mov cmp je cmp je mov test je test jne push call test je mov mov sar and shl add mov mov mov mov mov push lea push call pop pop test je incl incl inc addl cmp jl xor mov shl add mov cmp je cmp je orb jmp movb test jne push pop jmp mov dec neg sbb add push call mov cmp je test je push call test je mov and cmp jne orb jmp cmp jne orb push lea push call pop pop test je incl jmp orb movl inc cmp jl pushl call xor jmp xor inc ret mov movl or call ret mov push push mov mov test je lea jmp cmpl je lea push call mov add add cmp jb pushl call andl pop add cmp jl pop pop ret mov push mov push mov push call pop cmp jne call movl or jmp push pushl push pushl push call mov cmp jne call jmp xor test je push call pop or jmp mov sar mov and shl lea andb mov pop pop pop ret push push call mov cmp jne call andl call movl or jmp xor cmp jl cmp jb call mov call movl push push push push push call add jmp mov sar lea mov and shl mov movsbl and je push call pop mov mov testb je pushl pushl pushl call add mov jmp call movl call mov orl movl call mov call ret pushl call pop ret push push call mov test je cmpl jne push call pop andl push call pop mov test je push push call pop pop movl call cmpl jne pushl jmp push call pop ret push push pushl call test jne call mov call push call mov pop call ret mov push mov push mov push push call pop cmp je mov cmp jne testb jne cmp jne testb je push call push mov call pop pop cmp je push call pop push call test jne call mov jmp xor push call mov sar mov and shl pop movb test je push call pop or jmp xor pop pop pop ret push push call mov cmp jne call andl call movl or jmp xor cmp jl cmp jb call mov call movl push push push push push call add jmp mov sar lea mov and shl mov movsbl and je push call pop mov mov testb je pushl call pop mov jmp call movl orl movl call mov call ret pushl call pop ret mov push mov push mov mov test je test je pushl call andl xor pop mov mov mov pop pop ret mov push mov push mov push xor cmp jne call push push push push push movl call add jmp mov test je test jne test je or mov jmp or mov test jne push call pop jmp mov mov pushl pushl push call pop push call add mov cmp je cmp je testb jne push call pop cmp je push call pop cmp je push call sar push lea call and pop shl add pop jmp mov mov and cmp jne orl cmpl jne mov test je test jne movl mov decl movzbl inc mov jmp neg sbb and add or mov or pop pop pop ret mov andl andl movl ret mov push mov push mov push push mov movl mov test je push call mov inc push call pop pop mov test je pushl push push call add jmp andl movl mov pop pop pop pop ret mov push mov mov mov movl mov andl mov pop ret mov push mov push mov push mov movl mov mov test mov push je test je push call mov inc push call pop pop mov test je pushl push push call add jmp andl jmp mov pop mov pop pop pop ret mov push mov push mov push push mov cmp je mov mov test mov je test je push call mov inc push call pop pop mov test je pushl push push call add jmp andl jmp mov mov pop pop pop pop ret cmpl movl je pushl call pop ret mov test jne mov ret mov push mov push lea push mov call movl mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret movl jmp mov push mov push lea push mov call movl mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret movl jmp mov push mov push pushl mov call movl mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret movl jmp mov push mov push mov call testb je push call pop mov pop pop ret mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov pushl push call pop pop pop ret mov push movl call pop ret mov push mov push mov call testb je push call pop mov pop pop ret mov push mov pushl push call pop pop pop ret mov push call pop ret mov push mov mov add push add push call neg pop sbb pop inc pop ret mov push mov mov add push add push call neg pop sbb pop neg pop ret mov push mov mov add push add push call pop pop xor test setg mov pop ret lea ret mov movl ret mov ret mov push mov pop jmp mov push mov push push push push pushl call pushl mov mov call mov pop pop cmp jb mov sub lea cmp jb push call mov lea pop cmp jae mov cmp jae mov add cmp jb push pushl call pop pop test jne lea cmp jb push pushl call pop pop test je sar push lea call pop mov pushl call mov add push call pop mov mov pop jmp xor pop pop pop leave ret mov push push push call mov push call add mov mov test jne push pop pop ret andl xor pop ret push push call call andl pushl call pop mov movl call mov call ret call ret mov push mov pushl call neg sbb neg pop dec pop ret push push call andl mov cmp ja push call pop andl push call pop mov movl call mov call ret push call pop ret mov push mov cmpl jne call push call push call pop pop mov cmp jne mov test jne inc push push pushl call pop ret push mov cmp jne push call pop test jne test jne inc add and push push pushl call pop pop ret mov push mov push mov cmp ja push push mov cmpl jne call push call push call pop pop mov cmp jne test je mov jmp xor inc push jmp cmp jne push call pop test jne test jne inc add and push push pushl call mov test jne push pop cmp je pushl call pop test je mov jmp call mov call mov pop mov pop jmp push call pop call movl xor pop pop ret mov push mov mov mov pop ret mov push mov push push call pushl call pushl mov call push mov call add mov pop pop ret push call pop ret pushl call pop ret mov push mov pushl call pop test je pushl call pop test je xor inc pop ret xor pop ret mov push mov sub mov push push push pop mov lea rep mov mov pop mov pop test je testb je movl lea push pushl pushl pushl call leave ret mov push mov mov mov cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne call xor pop ret push call xor ret mov push mov push mov push call pushl call add cmp ja test je pop pop ret mov push mov call pushl call pushl call push call add pop ret mov push mov push call test je push push call test je pushl call pop ret mov push mov pushl call pop pushl call int3 push call pop ret push call pop ret mov push mov push mov jmp mov test je call add cmp jb pop pop ret mov push mov push mov xor jmp test jne mov test je call add cmp jb pop pop ret mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp mov cmp je mov xor pop pop ret mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp mov cmp je mov xor pop pop ret mov push mov cmpl je push call pop test je pushl call pop call push push call pop pop test jne push call mov movl call cmpl pop je push call pop test je push push push call xor pop ret push push call push call pop andl xor inc cmp je mov mov mov cmpl jne pushl call pop mov mov test je pushl call pop mov mov mov mov sub mov cmp jb call cmp je cmp jb pushl call mov call mov call pushl call mov pushl call add cmp jne cmp je mov mov mov mov mov mov jmp push mov call pop push mov call pop movl call cmpl jne mov push call pop pushl call xor inc cmpl je push call pop ret call ret mov push mov push push pushl call add pop ret mov push mov push push pushl call add pop ret push push push call add ret push push push call add ret mov push call mov push call push call push call push call push call push call push call push call push call add mov pop ret mov push mov cmpl je pushl pushl pushl pushl pushl call add pop ret mov push mov push push push mov push push xor xor mov cmp je inc mov cmp jb cmp jae push call pop cmp je push call pop test jne cmpl je cmp je push mov push mov push call add test je push push push push push call add push mov push push movb call test jne push push push call add test je xor push push push push push call add push call inc pop cmp jbe push call sub add push mov push sub push push call add test je xor push push push push push call add jmp xor push push push call add test je push push push push push call add mov pushl push push call add test je push push push push push call add push push push call add jmp push call mov cmp je cmp je push lea push lea pushl call pop push pushl push call pop pop pop leave ret mov push mov xor mov cmp je inc cmp jb xor pop ret mov pop ret push call pop cmp je push call pop test jne cmpl jne push call push call pop pop ret ret mov push mov mov mov push cmp je mov imul add add cmp jb imul add pop cmp jae cmp je xor pop ret mov push mov push push push call mov test je mov mov push mov mov push cmp je mov imul add add cmp jb imul add cmp jae cmp jne mov jmp xor test je mov mov test jne xor jmp cmp jne andl xor inc jmp cmp je mov mov mov mov mov cmp jne mov mov mov add cmp jge imul mov andl mov mov inc add add cmp jl mov mov mov cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl pushl push call pop mov jmp andl push call mov pop mov or pop pop pop leave ret mov push mov mov cmp jne pushl push call pop pop pop ret xor pop ret mov push push xor cmp jne call mov test jne mov mov cmp ja test je test je cmp jne xor test sete mov movzbl push call pop test je inc inc jmp cmp ja inc mov test jne pop mov pop ret cmpl jne call push mov push xor test jne or jmp cmp je inc push call pop lea mov test jne push inc push call mov pop pop mov test je mov push jmp push call mov inc cmpb pop je push push call pop pop mov test je push push push call add test je xor push push push push push call add add add cmpb jne pushl call andl andl movl xor pop pop pop pop ret pushl call andl or jmp mov push mov mov mov pop ret mov push mov push mov push xor push mov mov mov movl cmp je mov addl mov mov cmpb jne xor cmp mov sete inc mov jmp incl test je mov mov inc mov mov movzbl push inc call pop test je incl cmpl je mov mov incl mov inc mov mov test je cmpl jne cmp je cmp jne test je movb andl cmpb je mov cmp je cmp jne inc jmp dec jmp cmpb je cmpl je mov addl mov incl xor inc xor jmp inc inc cmpb je cmpb jne test jne cmpl je lea cmpb jne mov jmp xor xor cmp sete mov shr test je dec test je movb inc incl test jne mov mov test je cmpl jne cmp je cmp je test je movsbl push test je call pop test je mov mov incl mov inc incl mov mov incl mov jmp call pop test je inc incl incl mov inc jmp test je movb inc mov incl mov jmp mov pop pop test je andl incl leave ret mov push mov sub push xor push push cmp jne call push mov push push mov call mov mov cmp je mov cmp jne mov mov lea push push push lea call mov add cmp jae mov cmp jae mov shl lea cmp jb push call mov pop cmp je mov lea push add push push lea call mov add dec mov mov xor jmp or pop pop pop leave ret mov push mov mov sub push push mov push xor xor cmp jne call mov cmp je movl jmp call cmp jne push pop mov jmp mov cmp jne cmp jne call mov cmp jne xor jmp mov cmp je inc inc cmp jne inc inc cmp jne mov push push push sub push sar inc push push push push mov call mov cmp je push call pop mov cmp je push push pushl push pushl push push push call test jne pushl call pop mov mov push call mov jmp cmp je cmp jne call mov cmp je cmp je inc cmp jne inc cmp jne sub inc push mov call mov pop cmp jne push call jmp pushl push push call add push call mov pop pop pop leave ret mov push mov mov push mov cmp jae mov test je call add cmp jb pop pop ret mov push mov mov push mov cmp jae mov test je call add cmp jb pop pop ret mov push mov pushl call test jne pop jmp pop ret mov push mov push pushl mov call test je mov cmp je push pushl call call test je mov jmp mov push call test jne push call pop test je push push call test je pushl call mov mov pop pop ret push call pop ret mov push mov push pushl mov call test je mov cmp je push pushl call call test je mov jmp mov push call test jne push call pop test je push push call test je pushl call mov mov pop pop ret call ret mov push mov pushl pushl call call pop ret mov ret mov push pushl call mov test jne pushl call pop mov push pushl call mov pop ret mov push mov pushl pushl pushl call pop call pop ret mov cmp je push pushl call pop call orl mov cmp je push call orl jmp push push call mov push call test jne push call pop mov mov movl xor inc mov test je push push mov call mov push pushl call mov mov movb movb movl push call pop andl pushl call movl call push call pop mov mov mov test jne mov mov pushl call pop movl call call ret xor inc mov push call pop ret push call pop ret mov push push call pushl mov call call mov test jne push push call mov pop pop test je push pushl pushl call pop call test je push push call pop pop call orl mov jmp push call pop xor push call pop mov pop ret mov push call mov test jne push call pop mov pop ret push push call mov test je mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov cmp je push call pop push call pop andl mov test je push call test jne cmp je push call pop movl call push call pop movl mov test je push call pop cmp je cmp je cmpl jne push call pop movl call push call pop call ret mov push call pop ret mov push call pop ret mov push mov cmpl je cmpl jne push pushl mov call test je pushl pushl call call mov pop push pushl pushl call pop call pushl call mov cmp je push push call pop ret jmp jmp mov push push mov push call test jne push call pop mov test je mov push push call push push mov call push push mov call push push mov call cmpl mov mov je cmpl je cmpl je test jne mov mov mov movl mov mov call mov cmp je pushl push call test je call pushl call pushl mov call pushl mov call pushl mov call add mov call test je push pushl call pop call mov cmp je push push call mov pop pop test je push pushl pushl call pop call test je push push call pop pop call orl mov xor inc jmp call xor pop pop ret xor inc ret mov push mov xor cmp push sete push push call mov test jne pop ret xor inc mov pop ret cmpl jne push xor cmp push mov jle push mov add push push pushl call pushl push pushl call add inc cmp jl pop pushl push pushl call pop pop pushl call andl ret mov ret mov push mov sub mov andl andl push push mov mov cmp je test je not mov jmp push lea push call mov xor call xor call xor call xor lea push call mov xor xor cmp jne mov jmp test jne mov shl or mov not mov pop pop pop leave ret andl ret mov push mov push push mov push mov mov mov push push mov call or pop cmp jne call movl mov mov jmp pushl lea push pushl push call mov cmp jne call test je push call pop jmp mov sar mov and shl lea andb mov mov pop pop leave ret push push call or mov mov mov cmp jne call andl call movl mov mov jmp xor cmp jl cmp jb call mov call movl push push push push push call add jmp mov sar lea mov and shl mov movsbl and jne call mov call movl push push push push push call add or mov jmp push call pop mov mov testb je pushl pushl pushl pushl call add mov mov jmp call movl call mov orl orl movl call mov mov call ret pushl call pop ret mov push mov incl push call pop mov mov test je orl movl jmp orl lea mov movl mov andl mov pop ret mov push mov mov cmp jne call movl xor pop ret push xor cmp jl cmp jb call push push push push push movl call add xor jmp mov and sar mov shl movsbl and pop pop ret sub je sub je sub je dec je xor ret mov ret mov ret mov ret mov ret mov push push mov push xor lea push push call xor movzwl mov mov mov mov shl or lea stos stos stos mov add lea sub mov mov mov inc dec jne lea mov mov mov inc dec jne pop pop ret mov push mov sub mov xor mov push push lea push pushl call mov test je xor mov inc cmp jb mov movb test je lea movzbl movzbl cmp ja sub inc push lea push push call add inc mov inc test jne push pushl lea pushl push push lea push push push call xor push pushl lea push push push lea push push pushl push call add push pushl lea push push push lea push push pushl push call add xor movzwl test je orb mov jmp test je orb mov mov jmp movb inc cmp jb jmp lea movl xor sub mov lea add lea cmp ja orb mov add jmp cmp ja orb mov sub mov jmp movb inc cmp jb mov pop xor pop call leave ret push push call call mov mov test je cmpl je mov test jne push call pop mov call ret push call pop andl mov mov cmp je test je push call test jne cmp je push call pop mov mov mov mov push call movl call jmp mov push call pop ret mov push mov sub push xor push lea call mov cmp jne movl call cmp je mov andl jmp cmp jne movl call jmp cmp jne mov mov movl jmp cmp je mov andl mov pop leave ret mov push mov sub mov xor mov push mov push mov push call mov xor mov cmp jne mov call xor jmp mov xor cmp je incl add cmp jb cmp je cmp je movzwl push call test je lea push push call test je push lea push push call xor inc add mov mov cmp jbe cmpb je lea mov test je movzbl movzbl jmp push lea push push call mov add imul mov lea mov jmp mov test je movzbl movzbl jmp mov mov or movzbl inc cmp jbe mov inc inc cmpb jne mov incl add cmpl mov jb mov mov movl call push mov lea lea pop mov inc mov inc inc inc dec jne mov call jmp orb inc cmp jbe inc inc cmpb jne lea mov orb inc dec jne mov call mov mov jmp mov xor movzwl mov shl or lea stos stos stos jmp cmp jne or mov pop pop xor pop call leave ret mov push mov sub push lea call mov cmpl je cmpb mov je mov andl leave ret cmpb je mov andl xor leave ret push push call orl call mov mov call mov mov call mov cmp je push call pop mov test je mov mov mov rep andl push pushl call pop pop mov test jne mov pushl call test jne mov cmp je push call pop mov push mov call testb jne testb jne push call pop andl mov mov mov mov mov mov xor mov cmp jge mov mov inc jmp xor mov cmp jge mov mov inc jmp xor mov cmp jge mov mov inc jmp pushl call test jne mov cmp je push call pop mov push call movl call jmp push call pop ret jmp cmp jne cmp je push call pop call movl jmp andl mov call ret cmpl jne push call pop movl xor ret mov ret mov ret mov push mov push push mov mov xor push cmp je cmp je mov cmp je cmp jne mov cmp je cmp jne push call pushl call pop pop mov cmp je cmp jne push call pushl call pop pop pushl call pushl call pop pop mov cmp je cmp jne mov sub push call mov mov sub push call mov sub push call pushl call add lea mov cmp je cmp jne push call pushl call pop pop lea movl cmpl je mov cmp je cmp jne push call pop cmp je mov cmp je cmp jne push call pop add decl jne push call pop pop pop pop pop ret mov push mov push push mov push mov push call mov test je push call mov test je push call mov test je push call mov test je push call lea movl cmpl je mov test je push call cmpl je mov test je push call add decl jne mov add push call pop pop pop pop ret mov push mov push mov test je push push mov push call mov test je push call mov test je push call mov test je push call mov test je push call lea movl cmpl je mov test je push call cmpl je mov test je push call add decl jne mov add push call pop pop mov pop pop ret mov push mov test je test je cmp je push push pop mov rep andl push call pop pop pop ret test je test je push mov cmp je push mov call pop test je push call cmpl pop jne cmp je push call pop mov pop ret xor ret push push call call mov mov test je cmpl je call mov test jne push call pop mov call ret push call pop andl lea mov call mov movl call jmp push call pop mov ret mov push mov push push call mov test push pop sete inc mov mov cmp je xor cmp je cmp je cmp je call push push push push push movl call add or jmp and jmp or mov jmp orl mov pop pop pop ret mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov ret push push call mov test je push call pop andl mov test je push call test jne mov cmp je push call pop movl call cmpl je push call pop movl pushl call pop mov test je cmpl jne cmp je push call pop movl call mov mov mov push call pop call ret mov push call pop ret mov push call pop ret mov push mov pop jmp push push call call mov push push call pop pop mov mov test jne call movl xor jmp call call mov mov mov mov push call pop andl pushl call pop movl call push call pop movl pushl call movl call mov call ret mov push call pop ret mov push call pop ret jmp xor ret mov push mov push push mov xor cmp jle push lea add pushl pushl pushl call add test je push push push push push call add dec jne pop pop pop pop ret mov push mov push push push mov push xor push push call mov mov add test jne xor jmp cmp jne lea cmp je push push lea push push call add test je push push push push push call add mov jmp push push mov call cmp jmp cmpl lea mov jne cmp jae cmp je push push push pushl jmp cmpl jne cmp jae cmp je push mov push push add jmp cmpl jne cmp jae test je cmp jne push mov push push sub push call add test je xor push push push push push call add cmp je test je incl lea push push call test pop pop jne or pop pop pop pop ret mov push mov push push mov push pushl pushl call add xor test je push push push push push call add lea cmp je push push push pushl pushl call add lea cmp pop pop je push push push pushl pushl call add pop ret mov push mov sub push xor inc push mov call pop mov test je push lea movb mov mov lea lea pushl mov push pushl push push push call mov add mov movl push push push call add test je xor push push push push push call add pushl mov pushl call pop pop test je andl incl mov addl shl lea lea pushl mov mov push pushl push push push call add cmpl jl cmpl jne mov mov test je push call test jne pushl call pop mov test je push call test jne pushl call pop mov andl andl mov mov mov jmp pushl call mov mov xor pop cmp je push call test jne pushl call pop mov cmp je push call test jne pushl call pop mov mov mov mov mov pop pop leave ret mov push mov sub mov xor mov mov push push mov push mov mov mov mov mov call add lea mov lea lea add mov mov test je cmpl je cmpl je cmpb jne cmpb jne push pushl pushl call add xor test je push push push push push call add cmp je xor mov mov mov mov cmp je mov mov jmp push call mov pop mov cmp jae push pushl call pop pop test je push pushl call pop pop test je andl lea push push call pop pop test jne lea push push push call add test je movzwl mov mov lea push push pushl call add cmpb je mov cmp jb mov mov inc push push push pushl call add test je xor push push push push push call add jmp xor cmp je push push pushl call add cmp je push pushl pushl call add pushl pushl pushl call add test je push push push push push call add mov jmp xor mov pop pop xor pop call leave ret mov push mov sub mov xor mov push push mov call pushl mov lea push lea push push lea push push add call add test jne xor jmp mov shl lea pushl lea push call pop pop test je lea push call add push mov call pop pop mov test je mov mov mov lea add imul mov mov mov lea push push mov lea push call mov lea push mov mov mov add add push push call add test je xor push push push push push call add mov mov add mov movzwl mov push lea push pushl call add cmpl jne mov andl mov mov mov mov mov mov cmp je mov incl mov mov mov mov mov mov add cmpl mov jl jmp mov test je lea mov mov mov mov mov mov mov cmpl jne push pushl lea pushl push push push push push call add test je xor mov and inc cmp jb push pushl lea push call add neg sbb inc mov jmp andl mov mov mov mov cmpl jne mov mov mov imul push call pop test je mov pushl mov call mov pop mov mov mov mov jmp cmpl je mov add shl lea pushl call test jne pushl call pushl call andl pop pop mov mov add shl movl mov mov mov pop xor pop call leave ret mov push mov sub mov xor mov mov push push xor mov push mov cmp je cmp je push call pop jmp shl mov jmp movl mov cmp je cmpb jne cmpb jne cmpb jne mov push push call mov pop pop test je sub mov je cmpb je movl mov jmp mov push push pushl call add test jne pushl call pop cmp je incl add cmp jle inc push push call mov xor pop pop cmp jne cmpb jne cmpl jg push push lea push push call add test je push push push push push call add pushl mov lea movb call pop test je incl add cmpb je inc cmpb jne xor cmp je mov jmp xor jmp push push push push lea push push call add cmp je lea test je pushl lea push call pop pop test je push lea call pop test jne and jmp incl inc add cmp jle xor cmp jne cmp je call mov pop pop xor pop call leave ret mov push mov cmpl push push ja cmpl je xor inc push push call mov pop pop test jne call movl xor pop pop pop ret push push call pop pop mov test jne push call pop jmp push push call pop pop mov test jne pushl call push call pop jmp mov mov call pushl mov mov call pop test jne pushl call pushl call push call add jmp pushl mov pushl call pop pop test je pushl call pushl call pushl call push call add xor jmp mov mov mov mov mov jmp mov push mov pop jmp push push call xor mov cmpl jbe call movl push push push push push call add xor jmp call mov mov call orl mov push push call pop pop mov mov cmp je push call pop movl mov mov call mov call pushl mov mov call pop mov cmp je cmp je push pushl call pop pop test je movl push call pop movl lea mov call push call pop testb jne testb jne mov mov call push mov add push push call add call andl call jmp mov mov xor push call pop ret mov push call pop ret jmp push call push call pop pop movl call mov call ret mov andl ret mov push push xor lea pushl call add pop mov cmp jb pop pop ret mov push mov push mov push call add cmp jbe or mov pop pop ret mov push mov mov mov mov pop ret mov push mov push push xor pushl call mov pop test jne cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov push push xor push pushl pushl call mov add test jne cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov push push xor pushl pushl call mov pop pop test jne cmp je cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov push push xor pushl pushl pushl call mov add test jne cmp je cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret push push call xor xor cmp setne cmp jne call movl push push push push push call add or jmp call push pop add push push call pop pop mov call add push call pop mov lea push push pushl call add push call mov call add push push call add movl call mov call ret call add push push call pop pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push push pushl call add pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push push pushl call add pop ret mov push mov mov mov or xor cmp sete neg sbb and mov pop ret mov or xor cmp sete mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test je mov add test je test jne add lea lea mov mov add xor xor add test je mov test je test je test je test je jmp lea mov sub ret lea mov sub ret lea mov sub ret lea mov sub ret mov push mov sub push push mov xor push mov cmp jne cmp jbe mov cmp je mov xor jmp mov cmp je orl cmp jbe call push pop push push push push push mov call add mov jmp pushl lea call mov cmp jne mov mov cmp jbe cmp je cmp jbe push push push call add call movl call mov cmp je mov andl pop pop pop leave ret cmp je cmp ja call push pop push push push push push mov call add cmp je mov andl jmp mov mov cmp je movl cmp je mov andl jmp lea push push push push push lea push push mov pushl call cmp je cmp jne mov cmp je mov jmp call cmp jne cmp je cmp jbe push push push call add jmp mov push mov push pushl pushl pushl pushl call add pop ret mov push mov sub pushl orl lea call lea push pushl mov pushl lea pushl push call add test jne mov jmp or cmpb je mov andl leave ret mov push mov push orl push pushl call push pushl lea push call add test jne mov leave ret or leave ret mov push mov sub pushl lea call movzbl mov mov movzwl and cmpb je mov andl leave ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov mov cmp sbb neg pop ret mov push mov pushl push pushl call add test jne cmpw je pop ret xor inc pop ret mov push mov push pushl call pop pop test jne cmpw je pop ret xor inc pop ret mov push mov pushl push pushl call add test jne cmpw je pop ret xor inc pop ret mov push mov push pushl call pop pop test jne cmpw je pop ret xor inc pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov test je xor mov test jne cmp jb cmpl je jmp push mov cmp jb neg and je sub mov add sub jne mov shl add mov shl add mov and shr je rep test je mov add sub jne mov pop ret mov ret mov push mov push mov push mov mov cmp je cmp je cmp je cmp je xor jmp xor inc cmp je cmp je xor jmp xor inc test jne test jne mov cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp jne cmp je cmp je cmp je cmp je cmp je cmp je xor jmp xor inc cmp je cmp je cmp je cmp je cmp je cmp je xor jmp xor inc cmp jne mov mov xor test jne xor test jne mov xor cmp sete jmp cmp jne mov mov mov and neg sbb and neg neg sbb neg cmp jne xor inc jmp xor jmp xor cmp sete mov pop pop pop ret testb je cmpl je decl js mov mov incl movzbl jmp movsbl push push call pop pop cmp jne or ret incl ret mov push mov push mov jmp mov mov decl call cmpl je cmpl jg pop pop ret mov push mov testb push push mov mov je cmpl jne mov add jmp mov decl mov call inc cmpl jne call cmpl jne mov mov call cmpl jg pop pop pop ret mov push mov mov addl mov mov mov pop ret mov push mov sub mov xor mov mov push mov push mov push pushl xor lea mov mov mov mov mov mov mov call orl mov cmp jne call push push push push push movl call add cmpb je mov andl or jmp testb jne push call pop mov cmp je cmp je mov and mov sar shl add jmp mov testb jne cmp je cmp je mov and sar shl add jmp mov testb jne cmp je mov mov mov cmpl jne cmp je xor mov orl orl orl mov mov mov mov mov mov mov test je mov jmp mov inc xor cmp mov jl mov sub cmp ja movsbl movzbl and jmp xor mov imul movzbl xor shr inc mov cmp jne cmpb je cmpl jne push lea push push call add test jle mov cmpb jne cmp jne push lea push push call add mov jmp mov mov cmp jne push lea push push call mov add dec lea mov mov cmp jne cmp jl cmpb jne cmp jge cmp jle mov mov mov mov jmp cmp je cmp ja jmp cmp jne cmp je cmp jne cmpl jne jmp orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne orl jmp orl jmp or jmp orl jmp orl jmp cmp jne cmp jne addl mov mov jmp push lea push push call mov add dec lea mov cmp jne cmp jl cmpb jne cmpl jge cmp jle mov shl lea cmp je pushl push push jmp shl mov mov cmp mov jge orl negl jmp mov imul movsbl lea mov jmp mov jmp cmp jne cmp jne addl mov mov jmp push lea push push call mov add dec lea mov cmp je shl mov mov cmp mov jge orl jmp mov movb mov mov jmp mov imul movsbl lea mov jmp cmp je cmp je cmp je cmp jne orl jmp cmpb jne inc orl mov jmp orl jmp orl jmp mov cmp jne cmpb jne inc inc orl mov jmp cmp jne cmpb jne inc inc andl mov jmp cmp je cmp je cmp je cmp je cmp je cmp je mov lea push movzbl push mov call pop test mov pop je mov lea call mov mov incl test je mov lea call jmp orl jmp movsbl cmp jg je cmp jg je sub je push pop sub je sub je sub jne add mov mov orl cmp jne cmp jne cmpl ja mov shl lea cmp jne movl mov jmp testl jne orl jmp testl jne orl mov cmp jne mov cmp jne addl mov mov jmp sub je dec dec je sub je dec dec jne push pop testl je cmp jne addl mov movzwl jmp cmpl ja mov shl cmp jne lea cmp jne mov jmp pushl pushl push jmp mov movzwl push push lea push lea push call add test je mov jmp cmp jne addl mov movzwl jmp cmpl ja mov shl cmp je mov movzwl mov mov lea mov jmp cmp jne addl mov mov jmp cmpl ja mov shl cmp je mov mov cmp je mov cmp je testl movswl mov je cltd sub sar mov jmp mov jmp mov mov push call pop jmp cmp jg je cmp jl cmp jle cmp je cmp je cmp jne testb movl je orl jmp cmp jne addl mov mov jmp cmpl ja mov shl cmp jne lea cmp je pushl pushl push jmp mov mov call test je testb je mov mov jmp mov mov mov jmp orl movl mov test je cmp jne mov mov mov add mov jmp pushl pushl push push call add test je jmp cmp lea mov mov mov jge movl jmp jne cmp jne mov cmp jne mov add mov jmp cmp jle mov mov cmp jle mov add push call mov pop mov cmp je mov mov jmp cmpl ja mov shl mov add mov mov mov mov lea push pushl movsbl pushl push pushl lea pushl push pushl call pop call mov add and je cmp jne lea push pushl pushl call pop call pop pop cmpb jne cmp jne lea push pushl pushl call pop call pop pop mov cmpb jne orl incl pushl jmp movl movl jmp sub je dec dec je sub jne movl testb movl je mov add movb mov movl jmp cmpl ja mov shl cmp jne lea cmp jne movl jmp pushl pushl push jmp test je cmp je cmpl ja mov shl cmp jne lea cmp jne movl jmp pushl pushl push jmp mov mov mov jmp test je test je cmp jne addl mov movswl jmp cmpl ja mov shl cmp je mov movswl jmp cmp jne addl mov movzwl jmp cmpl ja mov shl cmp je mov movzwl jmp test je cmp jne addl mov mov jmp cmpl ja mov shl cmp je mov mov cltd jmp cmp jne addl mov mov jmp cmpl ja mov shl cmp jne lea cmp jne mov jmp pushl pushl push push call add test je jmp mov mov xor testb je cmp jg jl cmp jae neg adc neg orl testl mov mov jne xor cmpl jge movl jmp andl mov cmp jle mov mov or jne and lea mov decl test jg mov or je mov cltd push push push push call add cmp mov mov mov jle add mov dec jmp lea sub inc testl mov mov je test je mov cmpb je decl mov movb inc jmp mov cmp ja shl cmp je mov mov testl mov je cmp jne mov mov mov mov jmp movl mov mov mov jmp dec cmp je inc inc cmp jne sub sar jmp cmp jne mov mov mov jmp dec cmpb je inc cmp jne sub mov cmpl jne cmpl je cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub test jne pushl lea push push call add pushl mov lea lea call testb pop je testb jne push push push lea call add cmpl mov je test jle mov mov movzwl decl push push lea push lea inc push inc call add test jne cmp je pushl lea lea call cmpl pop jne jmp orl jmp mov push lea call pop cmpl jl testb je push push push lea call add cmpl je pushl call andl pop mov mov mov test jne xor cmp je cmpl jne cmpl jne cmp jne xor cmp jl mov lea mov dec je dec je dec je dec je dec je dec je dec dec jne mov add jmp mov add inc add cmp mov jle incl cmpl jge xor jmp cmpb je mov andl mov mov pop pop xor pop call leave ret nop aaa aas inc add inc add aas inc add inc inc add inc inc add inc inc add inc or je cmpl je decl js mov mov incl movzbl jmp movsbl push push call pop pop cmp jne or ret incl ret mov push mov push mov jmp mov mov decl call cmpl je cmpl jg pop pop ret mov push mov testb push push mov mov je cmpl jne mov add jmp mov decl mov call inc cmpl jne call cmpl jne mov mov call cmpl jg pop pop pop ret mov push mov sub mov xor mov push mov push mov xor push mov pushl lea mov mov mov mov mov mov mov mov mov call test jne call movl xor push push push push push call add cmpb je mov andl or jmp testb jne push call pop mov cmp je cmp je mov and mov sar shl add jmp mov testb jne cmp je cmp je mov and sar shl add jmp mov testb jne xor cmp je mov mov mov mov mov mov test je inc xor cmp mov jl mov sub cmp ja movsbl movzbl and mov imul movzbl push shr pop mov cmp je push pop cmp ja jmp xor orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne or jmp orl jmp orl jmp orl jmp orl jmp cmp jne add mov mov mov test jge orl negl jmp mov imul movsbl lea mov jmp andl jmp cmp jne add mov mov mov test jge orl jmp mov imul movsbl lea mov jmp cmp je cmp je cmp je cmp jne orl jmp cmpb jne inc orl mov jmp orl jmp orl jmp mov cmp jne cmpb jne inc inc orl mov jmp cmp jne cmpb jne inc inc andl mov jmp cmp je cmp je cmp je cmp je cmp je cmp je andl andl lea push movzbl push call pop test mov pop je mov lea call mov inc mov test je mov lea call jmp movsbl cmp jg je cmp jg je sub je dec dec je dec dec je dec dec jne add movl mov orl cmpl lea mov mov mov jge movl jmp testl jne orl jmp testl jne orl mov cmp jne mov add testl mov mov mov je test jne mov mov mov movl jmp sub je dec dec je sub je dec dec jne add testl mov je movzwl push push lea push lea push call add test je movl jmp mov mov movl lea mov jmp mov add mov test je mov test je testl movswl mov je cltd sub sar movl jmp andl jmp mov mov push call pop jmp cmp jg je cmp jl cmp jle cmp je cmp je cmp jne testb mov je orl jmp mov add mov call test je testb je mov mov jmp mov mov movl jmp orl movl mov test je add mov mov jmp jne cmp jne movl jmp cmp jle mov cmpl jle mov add push call mov pop mov push test je mov mov mov jmp movl pop add mov mov mov mov lea push pushl movsbl pushl mov push pushl lea push push pushl call pop call mov add and je cmpl jne lea push push pushl call pop call pop pop cmpb jne test jne lea push push pushl call pop call pop pop cmpb jne orl inc mov push jmp mov mov jmp sub je dec dec je sub jne movl testb movl je mov add movb mov movl jmp test jne add test je mov test je movswl jmp movzwl cltd jmp mov test je cltd jmp xor mov test je test jg jl test jae neg adc neg orl testl mov mov jne xor cmpl jge movl jmp andl mov cmp jle mov mov or jne and lea mov decl test jg mov or je mov cltd push push push push call add cmp mov mov mov jle add mov dec jmp lea sub inc testl mov mov je test je mov cmpb je decl mov movb inc jmp dec cmpw je inc inc test jne sub sar jmp test jne mov mov mov jmp dec cmpb je inc test jne sub mov cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub testb jne pushl lea push push call add pushl mov lea lea call testb pop je testb jne push push push lea call add cmpl mov je test jle mov mov movzwl decl push push lea push lea inc push inc call add test jne cmp je pushl lea lea call cmpl pop jne jmp orl jmp mov push lea call pop cmpl jl testb je push push push lea call add cmpl je pushl call andl pop mov mov mov test je mov mov jmp xor cmp je cmpl je call push push push push movl push jmp cmpb je mov andl mov mov pop pop xor pop call leave ret mov jo inc add inc add push inc add inc add inc add push inc add push call xor mov push call pop mov push pop mov cmp jge mov shl mov add cmp je mov testb je push call pop cmp je incl cmp jl mov mov add push call mov pushl call pop mov mov inc jmp movl call mov call ret push call pop ret mov push push xor mov cmpl jne lea mov push pushl add call pop pop test je inc cmp jl xor inc pop pop ret andl xor jmp mov push mov push mov push mov test je cmpl je push call push call andl pop add cmp jl mov pop mov test je cmpl jne push call add cmp jl pop pop ret mov push mov mov pushl call pop ret pushl push call push call pop ret push push call xor inc mov xor cmp jne call push call push call pop pop mov lea cmp je mov jmp push call pop mov cmp jne call movl xor jmp push call pop mov cmp jne push push call pop pop test jne push call pop call movl mov jmp mov jmp push call pop movl call mov call ret push call pop ret mov push mov mov push lea cmpl jne push call pop test jne push call pop pushl call pop pop ret mov push mov sub push xor testb push push mov mov mov movl mov je mov movb jmp movl mov lea push call pop test je push push push push push call add mov mov test jne test jne cmp je orb mov and sub mov mov je dec je dec je call mov orl call push pop push push push push push mov call add jmp mov jmp test je test jne movl jmp mov mov push pop sub je sub je sub je sub je sub jne cmp sete mov jmp movl jmp movl jmp movl jmp mov mov mov and mov cmp mov jg je cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp cmp je cmp je cmp jne movl mov movl test je mov not and test js movl test je orl orl orl test je or test je orl jmp movl jmp test je orl call mov cmp jne call mov orl call movl jmp mov mov push pushl movl pushl lea push pushl pushl pushl call mov cmp jne mov mov and cmp jne testb je andl push pushl lea pushl push pushl pushl pushl call mov cmp jne mov mov sar mov and shl lea andb call push call pop call mov jmp pushl call cmp jne mov mov sar mov and shl lea andb call mov push call pop pushl call cmp jne call movl jmp cmp jne orb jmp cmp jne orb pushl pushl call mov mov and sar mov pop shl pop mov or mov mov mov and sar mov shl lea andb mov andb mov jne test je testb je push or push pushl call add mov cmp jne call cmpl je pushl call jmp push lea push pushl mov call add test jne cmpb jne mov cltd push push pushl call add cmp je push push pushl call add cmp je testb je mov mov test jne mov and jne or jmp or mov and cmp je cmp je cmp je cmp je cmp je cmp je cmp jne movb jmp mov mov and cmp jne movb jmp mov testl je testb mov jne mov mov and cmp je cmp je cmp jne mov cmp jbe cmp jbe cmp jbe cmp jne movsbl xor dec je dec jne movl movl jmp push push push pushl call add or je push push push pushl call and add cmp je push lea push pushl call add cmp je cmp je cmp jne cmpl jne movb jmp mov cmp jbe cmp jbe cmp ja push push push pushl call add or je push push push pushl call add and cmp jne jmp mov and cmp jne pushl call pop call push pop mov mov jmp cmp jne push push pushl call add cmp je movb jmp push push pushl call add jmp movl movl mov sub push lea push pushl call add cmp je add cmp jg mov mov sar mov and shl lea mov xor and xor mov mov sar mov and shl lea mov mov shr shl and or mov cmp jne testb je mov mov and sar mov shl lea orb mov mov mov and cmp jne testb je pushl call push pushl lea push push pushl and push pushl call cmp jne call push call mov mov and sar mov shl lea andb pushl call pop jmp mov mov sar mov and shl mov mov pop pop pop leave ret push push call orl xor mov xor cmp setne cmp jne call movl push push push push push call add or jmp mov pushl push pushl pushl lea push lea call add mov movl call mov cmp je call mov jmp xor cmp je cmp je mov sar mov and shl mov lea andb pushl call pop ret mov call ret push push call xor mov xor mov cmp setne cmp jne call push pop mov push push push push push call add mov jmp orl xor cmp setne cmp je cmp je mov and neg sbb inc je mov pushl pushl pushl pushl lea push mov call add mov movl call mov cmp je orl call ret xor mov cmp je cmp je mov mov sar and shl mov lea andb pushl call pop ret mov push mov push orl push lea push pushl pushl pushl pushl call add test je or leave ret mov leave ret mov push mov push pushl pushl pushl pushl pushl call add pop ret mov push mov sub push pushl lea call xor cmp jne cmp je mov andl xor jmp mov cmp jne pushl pushl pushl call add cmp je mov andl jmp cmp jne call push push push push push movl call add cmp je mov andl mov jmp push mov cmp jne call push push push push push movl call add cmp je mov andl mov jmp push mov movzbw decl incl movzwl movzbl testb mov je cmp jne movzbl testb mov jne movzwl mov jmp mov mov cmp jne mov jmp shl movzbw or incl movzwl mov mov cmp jb cmp ja add jmp cmp jb cmp ja add jmp movzwl lea testb je movzbw movzwl jmp movzwl mov mov movzbw movzwl movzbl inc testb mov je cmp jne mov jmp mov decl cmp je shl movzbw or movzwl inc mov cmp jb cmp ja add jmp cmp jb cmp ja add jmp movzwl lea testb je movzbw movzwl jmp movzwl mov mov cmp jne cmp je cmp jne cmp je mov andl xor pop pop pop leave ret sbb and dec cmp je mov andl jmp mov push mov push pushl pushl pushl call add pop ret mov push mov sub push xor cmp jne xor jmp push pushl lea call mov cmp jne pushl pushl pushl call add cmp je mov andl jmp cmp jne call push push push push push movl call add cmp je mov andl mov jmp push mov cmp jne call push push push push push movl call add cmp je mov andl mov jmp mov movzbw decl incl movzwl movzbl testb je cmp jne movzbl xor testb je cmp je mov andl xor pop pop pop leave ret mov mov cmp jne xor jmp shl movzbw or incl movzwl movzbw movzwl movzbl inc testb je cmp jne xor jmp mov decl cmp je movzbw shl or inc movzwl cmp jne cmp je cmp jne jmp sbb and dec cmp je mov andl jmp mov push mov push pushl pushl pushl call add pop ret mov push mov mov mov pop ret push push call andl pushl pushl call mov jmp mov mov mov mov xor cmp sete mov ret mov cmpl jne push call andl movl mov call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov cmp je xor pop ret mov add cmpl jne xor mov cmp sete mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov add movzwl push push movzwl xor push lea test jbe mov mov cmp jb mov add cmp jb inc add cmp jb xor pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov push push push mov push sub push push push mov xor xor push lea mov mov movl push call add test je mov sub push push call add test je mov shr not and movl mov mov pop pop pop pop mov pop ret mov mov mov xor cmp sete mov ret mov movl xor mov mov pop pop pop pop mov pop ret int3 int3 int3 push mov push push push push push push push pushl call pop pop pop pop mov pop ret mov testl mov je mov mov xor call push mov mov push mov push call add pop mov mov mov mov ret push push push mov push push push push pushl mov xor push lea mov mov mov mov cmp je cmpl je cmp jbe lea mov mov mov cmpl jne push mov call mov call jmp mov mov add pop pop pop ret xor mov cmpl jne mov mov cmp jne mov ret push push mov jmp push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret mov push mov sub mov xor mov push xor cmp je cmpl jne call mov cmp jne mov jmp push lea push push lea push push call test jne cmpl jne call cmp jne mov push push push lea push push lea push push call push call mov cmp je push lea push push lea push push call test je mov mov xor pop call leave ret movl jmp push push call xor mov xor cmp setne cmp jne call mov call movl push push push push push call add or jmp pushl call mov push call pop pop mov mov decl test je mov movzwl addl push call pop mov cmp jne orl movl call mov call ret push call pop ret push push call push call pop andl pushl call pop movzwl mov movl call mov call ret push call pop ret mov push mov sub push push mov xor cmp je cmp je cmp jne mov cmp je xor mov xor pop pop leave ret pushl lea call mov cmp jne mov cmp je movzbw mov cmp je mov andl xor inc jmp lea push movzbl push call pop pop test je mov mov cmp jle cmp jl xor cmp setne push pushl push push push pushl call test mov jne mov cmp jb cmp je mov cmp je mov andl jmp call movl cmp je mov andl or jmp xor cmp setne push pushl mov push push push pushl call test jne jmp mov push mov push pushl pushl pushl call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub sbb not and mov and cmp jb mov pop xchg mov mov ret sub test jmp mov push mov mov push push test jl cmp jae mov sar mov and lea mov shl cmpl jne cmpl push mov jne sub je dec je dec jne push push jmp push push jmp push push call mov mov xor pop jmp call movl call andl or pop pop pop ret mov push mov mov push xor cmp push push jl cmp jae mov sar mov lea mov and shl add testb je cmpl je cmpl jne sub je dec je dec jne push push jmp push push jmp push push call mov orl xor jmp call movl call mov or pop pop pop pop ret mov push mov mov cmp jne call andl call movl or pop ret push xor cmp jl cmp jae mov and sar mov shl add testb jne call mov call push push push push push movl call add or jmp mov pop pop ret push push call mov mov sar mov and shl add movl xor cmp jne push call pop mov cmp jne push lea push call pop pop test jne mov incl movl call cmp je mov sar and shl mov lea push call mov call ret xor mov push call pop ret mov push mov mov mov and sar mov shl lea push call pop ret push push call orl xor mov push call pop test jne or jmp push call pop mov mov cmp jge mov test je mov mov add cmp jae testb jne cmpl jne push call pop xor inc mov cmpl jne push lea push call pop pop test jne mov jmp incl andl call cmpl jne lea push call testb je push call add jmp mov mov push call pop ret cmpl jne movb orl sub sar mov shl add mov cmpl jne inc jmp push push call pop pop mov test je lea mov addl mov add cmp jae movb orl movb andl add mov jmp shl mov mov sar mov and shl mov movb push call pop test jne orl movl call mov call ret push call pop ret push push call xor mov xor testb je add testl je or testb je or pushl call cmp jne call push call pop or call ret cmp jne or jmp cmp jne or call mov mov cmp jne call movl call mov jmp mov pushl push call pop pop or mov sar lea mov and shl mov mov mov lea andb mov lea andb movl movl call cmp je mov jmp mov xor cmp jne mov sar mov and shl mov lea andb push call pop ret push push call mov cmp jne call movl or jmp xor cmp jl cmp jb call movl push push push push push call add jmp mov sar lea mov and shl mov movsbl and je push call pop mov mov testb je pushl call pop push call test jne call mov jmp mov cmp je call mov mov call movl orl movl call mov call ret pushl call pop ret push mov sub mov mov mov mov mov shr jmp lea movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne mov mov mov pop ret push mov sub mov mov mov mov mov cltd mov mov xor sub and xor sub cltd mov xor sub and xor sub mov or jne mov mov and mov cmp je sub push push push call add mov mov test je mov mov add sub mov add sub mov mov mov mov rep mov jmp cmp jne neg add mov mov mov mov rep mov add mov add mov sub push push push call add mov jmp mov mov mov mov shr rep mov and rep mov mov mov mov mov pop ret push push call andl movapd movl jmp mov mov mov cmp je cmp je xor ret xor inc ret mov andl movl mov call ret mov push mov sub xor push mov mov mov push pushf pop mov xor push popf pushf pop sub je push popf xor cpuid mov mov mov mov mov cpuid mov mov pop testl je call test je xor inc jmp xor pop leave ret call mov xor ret cmpl jne xor ret mov sub neg sbb not and ret mov push mov mov lea push cmp jbe call xor push push push push push movl call add push pop jmp xor cmp jne call jmp mov xor pop pop ret mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp cmp je mov mov xor pop pop ret mov push mov push push pushl call mov test jne pop ret mov andl andl mov xor mov movl inc pop ret mov push mov mov mov imul add jmp mov sub cmp jb add cmp jb xor pop ret mov push mov sub mov mov push mov push mov sub add shr mov imul lea mov mov dec mov test jne push lea mov mov mov mov mov mov test jne sar dec cmp jbe push pop mov cmp jne mov cmp jae mov shr lea not and decb jne mov and jmp lea shr lea not and decb jne mov and mov mov mov mov add mov mov mov mov mov mov mov sar dec cmp jbe push pop mov and mov jne sub mov sar push mov dec pop cmp jbe mov add mov sar dec mov cmp jbe mov cmp je mov mov cmp jne mov cmp jae mov shr not and decb jne mov and jmp lea shr not and decb jne mov and mov mov mov mov mov mov mov mov mov jmp mov cmpl jne cmp je mov lea mov mov mov mov mov mov mov cmp jne mov mov inc mov cmp jae cmpb jne mov mov shr mov or mov mov shr lea or jmp cmpb jne lea mov shr mov or lea mov shr lea or mov mov mov mov decl jne mov test je mov mov push shl add mov push push call mov mov mov shr or mov mov mov andl mov mov decb mov mov cmpb jne andl mov cmpl jne push push pushl call mov pushl push pushl call mov mov imul mov sub lea push lea push push call mov add decl cmp jbe subl mov mov mov mov mov pop pop pop leave ret mov push mov push xor cmp jne add imul push pushl push pushl call cmp jne xor jmp addl mov mov imul add push push pushl call mov cmp je push push push push call mov cmp jne pushl push pushl call jmp orl mov mov incl mov orl mov pop pop ret mov push mov push push mov mov push push mov push xor jmp add inc test jge mov imul lea push mov pop mov mov add dec jne push mov push shl add push push call test jne or jmp lea mov cmp ja mov sub shr lea inc orl orl lea mov lea movl mov movl add dec jne mov mov add lea mov mov lea mov mov andl xor inc mov mov mov inc test mov mov jne or mov mov shr not and mov pop pop pop leave ret mov push mov sub mov mov push push mov push mov mov sub add shr mov imul lea mov mov and dec cmp lea mov mov mov jle test jne add cmp jg mov sar dec mov cmp jbe push pop mov mov cmp jne mov cmp jae shr mov lea not and decb jne mov and jmp add shr mov lea not and decb jne mov and mov mov mov mov mov mov mov sub add cmpl jle mov mov sar dec lea cmp jbe push pop mov lea mov mov mov mov mov mov mov mov mov cmp jne mov mov inc mov cmp jae cmpb jne mov mov shr mov or lea mov jmp cmpb jne lea mov shr mov or lea lea mov shr or mov mov lea mov mov jmp mov lea mov mov jmp xor jmp jge mov sub lea mov lea mov sar dec mov mov cmp jbe push pop testb jne mov sar dec cmp jbe push pop mov cmp jne mov cmp jae mov shr lea not and decb jne mov and jmp lea shr lea not and decb jne mov and mov mov mov mov mov mov mov mov add mov sar dec cmp jbe push pop mov lea mov mov mov mov mov mov mov cmp jne mov mov inc mov cmp jae cmpb jne mov mov shr mov or lea mov jmp cmpb jne lea mov shr mov or lea lea mov shr or mov mov mov xor inc pop pop pop leave ret mov test je mov push shl add push push call mov mov mov shr or mov mov mov andl mov mov decb mov mov cmpb jne andl mov cmpl jne cmpl jle pushl push pushl call mov mov imul mov sub lea push lea push push call add decl andl ret mov push mov mov sub push xor cmp jne or jmp cmp push mov push mov mov jle mov cmp je mov mov lea mov mov lea mov mov mov mov mov push xor cmp pop lea mov mov mov rep jl cmp je mov add cmpl lea jne cmpl jne mov mov test je dec cmp jg incl jmp mov sar dec cmp jle push pop lea incl cmp jl test jne cmp jg lea cmp jne mov cmp jb jne add inc cmp jl mov mov cmp jne xor andl lea mov mov mov cmp je mov cmp je mov cmp jb add cmp jae mov and add lea cmp je cmp je mov and add mov cmp jne cmp je mov sar dec cmp jle push pop cmp jne mov cmp jne incl mov mov cmp jne cmpl je cmp mov jge mov shr or or jmp lea shr or or mov cmp jne mov cmp jne cmp jne inc cmp mov jl mov mov xor mov cmp jne mov cmp jne addl addl shll incl add cmpl mov jl mov cmp jne mov cmp jne add incl mov cmp mov jl xor pop pop pop leave ret push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push pop jmp mov push mov push xor cmp jne xor jmp mov cmp jne mov cmp jbe call push push push push push movl call add jmp mov xor inc jmp push mov cmp je cmp jne cmp ja push call pop test jne call push push push push push movl call add jmp mov movl xor inc jmp call movl xor pop pop pop ret mov push mov sub mov mov imul add add and mov sar push dec cmp push push jge or shr orl jmp add or xor shr mov mov mov jmp mov mov and and or jne add mov cmp jb cmp jne mov jmp mov mov and and or jne add mov cmp jb cmp jne jmp cmpl jne add mov cmp jb cmp jne mov jmp cmpl jne add mov cmp jb cmp jne call mov mov test jne xor jmp push call pop mov mov mov cmpl je mov mov mov mov cmp je mov mov and and or jne andl mov lea mov and and or jne incl mov add jmp mov mov imul lea mov mov xor and jne mov and push pop jmp add inc test jge mov mov mov sub mov sar dec cmp mov jle push pop cmp je mov cmp jne cmp mov jge mov shr mov lea not mov and mov decb jne mov mov and jmp lea shr mov lea lea not and decb mov jne mov mov and jmp mov cmpl mov mov mov mov mov mov je mov lea mov mov mov mov mov mov mov cmp jne mov mov inc cmp mov jge cmpb jne mov mov shr or mov mov shr mov or jmp cmpb jne lea mov shr or mov lea lea mov shr or mov test je mov mov jmp mov mov add lea mov mov mov mov lea mov test jne cmp jne mov cmp jne andl mov mov lea pop pop pop leave ret mov push mov sub mov push mov push pop mov mov cmp jne call andl call movl or jmp push xor cmp jl cmp jb call mov call push push push push push movl call add or jmp mov sar push lea mov and shl add mov test jne call mov call movl jmp cmp ja mov cmp je test jne cmp je mov add sar mov movsbl dec push pop je dec jne mov not test je and mov mov mov jmp mov not test jne call mov call movl push push push push push call add jmp mov shr mov cmp jb mov pushl call pop mov cmp jne call movl call movl or jmp push push push pushl call mov mov mov add mov mov add testb je mov cmp je cmp je mov mov inc decl movl movb cmp je mov mov cmp je cmp je mov mov inc decl cmpb movl movb jne mov mov cmp je cmp je mov mov inc decl movl movb push lea push pushl push mov pushl call test je mov cmp jl cmp ja mov add lea testb je cmpb je cmp je mov cmpb jne orb jmp andb mov mov add mov mov cmp jae mov mov cmp je cmp je mov inc inc mov jmp mov dec cmp jae lea cmpb jne inc inc mov movb jmp mov jmp incl push lea push push lea push mov pushl call test jne call test jne cmpl je mov testb je cmpb je movb mov mov mov jmp cmp jne cmpb je push push push pushl call add cmpb je movb inc mov cmp jb jmp mov lea testb jne orb jmp mov mov inc mov sub cmpb mov jne test je dec mov test js inc jmp xor inc movzbl jmp cmp jg cmp jb dec movzbl inc cmpb je mov movzbl movsbl test jne call movl jmp inc cmp jne add jmp mov add testb je inc cmp mov jl mov mov mov inc cmp jne mov mov mov inc sub jmp neg cltd push push push pushl call add mov sub shr push pushl push pushl push push call mov test jne call push call pop orl mov cmp je push call pop mov cmp jne mov jmp mov mov xor cmp setne add mov mov jmp cmp je mov cmpw jne orb jmp andb mov mov add mov mov cmp jae mov movzwl cmp je cmp je mov inc inc inc inc mov jmp mov add cmp jae lea cmpw jne add mov push jmp mov jmp addl push lea push push lea push mov pushl call test jne call test jne cmpl je mov testb je cmpw je push pop mov mov mov mov mov mov mov mov movb jmp cmp jne cmpw je push push push pushl call add cmpw je push pop mov inc inc mov cmp jb jmp mov lea testb jne orb jmp mov mov inc inc sub mov jmp call push pop cmp jne call movl call mov jmp cmp jne mov jmp xor pop pop pop leave ret push push call mov cmp jne call andl call movl or jmp xor cmp jl cmp jb call mov call movl push push push push push call add jmp mov sar lea mov and shl mov movsbl and je mov cmp sbb inc jne call mov call movl jmp push call pop mov mov testb je pushl pushl pushl call add mov jmp call movl call mov orl movl call mov call ret pushl call pop ret mov push mov mov push xor push push cmp je mov cmp ja call push pop mov push push push push push call add mov jmp mov cmp jne mov jmp mov mov mov inc inc cmp je dec jne cmp jne mov call push pop mov mov jmp xor pop pop pop pop ret push push call push call pop andl mov mov test je mov mov mov test je cmp jne mov mov push call pop pushl call pop andl movl call call ret mov jmp push call pop ret push push call mov xor cmp jne push push push push lea push push call add mov cmp jne xor jmp push call pop mov jmp dec mov add cmpb jne mov cmp ja dec push call pop mov cmp jne push call pop mov test je add push call pop mov test je pushl push push call add xor cmp je push push push push push call add mov mov mov mov mov mov jmp push call pop pushl call pop movl call mov call ret mov push call pop ret push push call push call pop andl mov mov test je mov mov mov test je cmp jne mov mov push call pop pushl call pop andl movl call call ret mov jmp push call pop ret mov push mov cmpw jne movl pushl push push pushl pushl pushl call add pop ret push push call xor mov cmp jne push call pop mov cmp jne push push add push push call add mov mov cmp jne push lea push push call add xor jmp push call pop mov mov mov dec mov test jbe lea cmpb jne movb jmp push call pop mov cmp je lea push call pop mov test je pushl push push call add xor cmp je push push push push push call add mov mov mov mov mov mov mov jmp push call pop pushl call pop mov movl call mov call ret mov push call pop ret push push call push call pop andl mov mov test je mov pushl call push call pop pop mov jmp movl call call ret push call pop ret int3 int3 int3 int3 int3 int3 mov mov test jne mov cmp jne or je cmp jne or je shr cmp jne or je cmp jne add add or jne mov xor ret nop sbb shl add ret test je mov add cmp jne add or je test je mov add cmp jne or je cmp jne or je add jmp push push call xor mov xor cmp setne cmp jne call movl push push push push push call add or jmp cmpl jne push call pop mov push call pop mov cmp je mov sub mov jmp mov movl call cmp jne push push pushl call mov mov call ret xor mov mov push call pop ret push push call call mov test je andl call jmp xor inc ret mov movl call call ret call mov test je call jmp push push call pushl call pop test je andl call jmp xor inc ret mov movl call int3 push call pop mov ret mov push mov mov mov mov mov mov pop ret push push call xor push call pop mov cmp jne mov pushl call mov movl jmp mov pushl call mov movl pop cmp je cmp je call mov movl call cmp jne xor jmp xor push call pop ret cmpl je pushl call pop xor inc call ret mov push mov mov mov push cmp je mov imul add add cmp jb imul add pop cmp jae cmp je xor pop ret pushl call pop ret call add ret call add ret push push call andl mov mov cmp je cmp je push pop cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp jne call mov test je mov cmp jne pushl call pop mov test je pushl push push call add pushl mov call pop test je mov mov cmp je jmp mov add mov imul add cmp jae cmp je jmp push call pop andl cmp je cmp jne cmpl jne push push call xor inc cmp jne mov jmp call mov call mov movl mov mov sub je sub je sub je sub je dec jne pushl call pop mov cmp je push call mov jmp pushl call pop mov cmp je push call mov jmp pushl call pop mov cmp je push call mov jmp pushl call pop mov cmp je push call mov pop movl call cmpl jne mov mov jmp mov push call pop ret cmp je cmp je cmp je cmp jle cmp jle call movl xor push push push push push call add or call ret push push call xor mov mov mov cmp jg je mov push pop sub je sub je sub je sub jne call mov mov test jne or jmp mov mov jmp pushl mov call mov add mov jmp mov sub je sub je dec je call movl xor push push push push push call add jmp mov mov jmp mov mov jmp mov mov movl push call mov pop xor cmpl je cmp jne push call cmp je push call pop xor mov cmp je cmp je cmp jne mov mov mov cmp jne mov mov movl cmp jne mov mov mov mov add cmp jge mov imul mov mov incl jmp call mov movl call cmp jne pushl push call pop jmp mov mov cmpl je push call pop ret push call pop cmp je cmp je cmp jne mov mov cmp jne mov mov xor call ret mov push mov mov mov pop ret mov push mov push push push pushl call mov mov xor pop cmp jne call push pop push push push push push mov call add mov jmp push mov cmp jne push call mov cmp jne call push pop push push push push push mov call add mov jmp push push call mov cmp jne call mov mov call push call push push push push push mov call add call push call pop jmp push call pop mov call push push mov call cmp je pushl call push pushl call test jne call movl call mov jmp xor pop pop pop leave ret mov push mov sub mov xor mov mov push push mov xor cmpl push mov mov jne push push lea mov push pushl mov pushl push call mov add cmp jne call cmp jne push push push pushl pushl pushl call add mov cmp je xor inc push push call mov pop pop cmp je push pushl mov push pushl pushl pushl call mov add cmp je push push call pop pop mov mov cmp jne cmp je push call pop or mov pop pop xor pop call leave ret lea push push push push call add test je push push push push push call add cmp je push call pop xor jmp cmp jne push push mov push pushl pushl push call add test je mov mov movzbl push call pop test je mov mov imul add sub inc inc cmp mov jl jmp mov push mov mov mov pop ret mov push mov sub push push push call andl cmpl mov jne push call mov test je mov push push call test je push call movl push mov call push call movl push mov call push call movl push mov call push call pop mov test je push push call push call pop mov mov cmp je cmp je push call pushl mov call pop pop mov test je test je call test je lea push push lea push push push call test je testb jne orl jmp mov cmp je push call pop test je call mov test je mov cmp je push call pop test je pushl call mov pushl call pop test je pushl pushl pushl pushl call jmp xor pop pop pop leave ret mov push mov mov push xor push push cmp je mov cmp ja call push pop mov push push push push push call add mov jmp mov cmp jne mov jmp mov cmp je inc dec jne cmp je mov mov inc inc cmp je dec jne cmp jne mov call push pop mov mov jmp xor pop pop pop pop ret mov push mov push push mov xor push cmp jne cmp jne cmp jne xor pop pop pop pop ret cmp je mov cmp ja call push pop mov push push push push push call add mov jmp cmp jne mov jmp mov cmp jne mov jmp cmpl mov jne mov mov inc inc cmp je dec jne jmp mov mov inc inc cmp je dec je decl jne cmp jne mov cmp jne cmpl jne mov push mov pop jmp mov call push pop mov mov jmp mov push mov mov push xor cmp jl cmp jle cmp jne mov jmp mov mov jmp call push push push push push movl call add or pop pop ret mov push mov mov mov pop ret mov ret mov push mov sub pushl lea call movzbl mov mov test jne cmpl je mov mov movzwl and jmp xor test je xor inc cmpb je mov andl leave ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov sub pushl lea call mov test je cmpl jne push push pushl pushl call add cmpb je mov andl leave ret cmpb je mov andl xor leave ret mov push mov push pushl call pop pop pop ret mov push mov mov test je mov mov add pop ret mov push mov mov test je sub cmpl jne push call pop pop ret mov push mov mov jmp dec cmpb je inc test jne dec mov sub dec pop ret mov push mov sub mov xor mov push push xor push mov cmp jne push push xor inc push push push push call test je mov jmp call cmp jne movl cmp jle mov mov dec cmp je inc cmp jne or mov sub dec cmp jge inc mov mov cmp je cmp je cmp jne mov cmp jne mov mov mov mov xor cmp push push pushl setne pushl lea push pushl call mov cmp je jle push xor pop div cmp jb lea cmp ja call mov cmp je movl jmp push call pop cmp je movl add mov jmp mov cmp je push pushl pushl pushl push pushl call test je mov push push push pushl pushl pushl call mov mov cmp je testl je cmp je cmp jg pushl pushl push pushl pushl pushl call jmp cmp jle push xor pop div cmp jb lea cmp ja call mov cmp je movl add jmp push call pop cmp je movl add mov jmp xor cmp je pushl push push pushl pushl pushl call test je push push cmp jne push push jmp pushl pushl pushl push push pushl call mov push call pop pushl call mov pop jmp mov mov cmp jne mov mov mov cmp jne mov mov mov pushl call pop mov cmp jne xor jmp cmp je push push lea push pushl push pushl call add mov cmp je mov push push pushl push pushl pushl call mov cmp jne xor jmp jle cmp ja add cmp ja call mov cmp je movl add jmp push call pop cmp je movl add mov jmp xor cmp je pushl push push call add pushl push pushl pushl pushl pushl call mov cmp jne xor jmp pushl lea pushl push push pushl pushl call mov mov add neg sbb and push call pop jmp pushl pushl pushl pushl pushl pushl call mov cmp je pushl call pop mov cmp je cmp je push call pop mov lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl pushl pushl call add cmpb je mov andl leave ret mov push mov push push mov xor mov mov push push xor push mov cmp jne lea push xor inc push push push call test je mov jmp call cmp jne push pop mov jmp mov cmp je cmp je cmp jne mov cmp jne mov mov mov mov xor cmp push push pushl setne pushl lea push pushl call mov cmp je jle cmp ja lea cmp ja call mov cmp je movl jmp push call pop cmp je movl add mov test je lea push push push call add push push pushl pushl push pushl call test je pushl push push pushl call mov push call mov pop jmp xor cmp jne mov mov mov cmp jne mov mov mov pushl call pop cmp jne xor jmp cmp je push push lea push pushl push pushl call mov add cmp je mov pushl pushl pushl pushl pushl call mov cmp je push call pop mov lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl pushl call add cmpb je mov andl leave ret mov ret call mov mov cmp je mov test jne call mov ret mov push mov sub movzwl movzwl mov mov test jne or leave ret andl push push mov lea push push push xor inc lea push push call mov lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call push push pushl or lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl push lea push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push mov push lea push push call add or mov pop mov pop leave ret mov push mov push mov test je pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pop pop ret mov push mov push push push mov cmpl mov je push push call mov pop pop test jne xor inc jmp mov call test je push call push call pop pop jmp movl jmp mov add mov cmp je add push call mov xor pop pop pop pop ret xor cmp je push push mov cmp jl cmp jg sub mov inc cmp jne pop pop ret cmp jne mov lea mov mov mov cmp jne jmp mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret mov push mov sub push mov push xor push mov mov cmp jne cmp jne mov mov movl jmp push push call mov pop pop mov cmp jne xor inc jmp mov push pop push rep call xor pop mov cmp jne pushl call pop jmp mov cmp je push call pop mov cmp jne xor inc pushl call pushl call pop pop mov jmp mov mov movzwl push push push lea push push call mov lea push push push lea push push call or lea push push push mov lea push push call add or je push call pop or jmp mov mov jmp mov cmp jl cmp jg sub mov inc cmpb jne jmp cmp jne mov lea mov mov mov cmpb jne jmp mov mov mov mov mov mov mov mov mov xor inc mov mov test je mov mov mov test je push call mov test je push call test jne pushl call pushl call pop pop mov mov mov mov mov mov xor pop pop pop leave ret xor cmp je push push mov cmp jl cmp jg sub mov inc cmp jne pop pop ret cmp jne mov lea mov mov mov cmp jne jmp mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret mov push mov sub push push mov push xor mov mov mov cmp jne cmp jne mov mov mov jmp push push call mov pop pop cmp jne xor inc jmp push call pop mov cmp jne push call pop jmp mov cmp je push call pop mov cmp jne push call pushl call pop jmp mov movzwl lea push push push lea push push call mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or je push call push call pushl call pushl call add jmp mov jmp mov cmp jl cmp jg sub mov inc cmpb jne jmp cmp jne mov lea mov mov mov cmpb jne jmp push pop mov mov rep mov mov add mov mov mov mov mov mov mov mov mov mov xor inc xor mov cmp je mov mov mov cmp je push call mov cmp je push call test jne pushl call pushl call pop pop mov mov mov mov mov xor pop pop pop leave ret mov push mov sub mov xor mov push xor push mov push mov mov mov mov mov mov mov cmp je lea cmp jne push movzwl push push lea push push call add test jne push call push mov push mov call push push mov call push push mov call push push mov call add mov cmp je cmp je cmp je cmp je cmp je mov mov xor mov mov inc cmp jl lea push pushl call test je cmpl ja movzwl cmp mov jle cmp je lea mov cmp je movzbl movzbl jmp mov movb movzbl inc cmp jle inc inc cmp jne mov push push pushl add push push pushl mov push push call add test je mov mov push pushl mov push add push push inc push push pushl push call add test je mov push pushl add push push mov push inc push push pushl push call add test je mov mov lea xor cmpl mov mov mov lea mov mov mov mov lea mov mov jle cmp je lea mov mov cmp je movzbl movzbl cmp mov jg lea jmp mov incl mov mov inc inc mov mov movzbl cmp jle mov inc inc mov cmp jne push lea push push call push lea push push call mov push lea push push call mov add cmp je push call test jne mov sub push call mov mov sub push call mov sub push call pushl call add mov movl mov mov mov mov mov mov mov mov mov mov mov pushl call pop mov jmp pushl call pushl call pushl call pushl call xor add inc jmp lea mov cmp je push call mov mov movl movl movl movl xor mov pop pop xor pop call leave ret call mov mov cmp je mov test jne call mov ret mov push mov mov test jne pop jmp mov mov pop ret call mov mov cmp je mov test jne call mov ret call mov mov cmp je mov test jne call mov ret call mov mov cmp je mov test jne call add ret xor ret mov push mov sub push push push pushl lea xor call mov mov mov mov shl pushl call pushl mov call add incl cmpl pop pop mov lea jb lea push call mov pop mov test je andl mov movb pushl mov inc sub lea push push call add test je xor push push push push push call add push call add mov movb pushl mov inc sub lea push push call add test je xor push push push push push call add push call add incl cmpl pop jb movb cmpb pop pop pop je mov andl mov leave ret push call pop ret mov push mov sub push push push pushl lea xor call mov mov lea mov movl pushl call pushl mov call mov pop pop mov add add decl lea mov jne lea push call mov pop mov test je add movl mov movb pushl inc sub lea push push call add test je xor push push push push push call add push call add mov movb pushl inc sub lea push push call add test je xor push push push push push call add push call add add decl pop jne movb cmpb pop pop pop je mov andl mov leave ret push call pop ret mov push mov sub push push push pushl lea xor call mov mov mov mov shl pushl call pushl mov call add incl cmpl pop pop mov lea jb lea mov movl mov pushl call pushl mov call addl pop pop mov add decl lea jne pushl call pushl mov call pushl add lea call pushl lea call pushl lea call lea push mov call mov add test je push push push lea call andl lea mov add sub mov mov mov mov pushl mov sub add push push call add test je xor push push push push push call add push call mov lea mov mov pushl mov sub add push push call add test je xor push push push push push call add push call incl addl cmpl pop lea jb lea mov lea mov movl jmp mov mov mov pushl mov sub add push push call add test je xor push push push push push call add push call lea mov mov mov pushl mov sub add push push call add test je xor push push push push push call add push call addl addl decl pop lea jne mov sub add mov pushl push push call add test je xor push push push push push call add push call lea mov sub add mov pushl push push call add test je xor push push push push push call add push call lea mov sub add mov pushl push push call add test je xor push push push push push call add push call lea mov sub add mov pushl push push call add test je xor push push push push push call add push call lea mov sub add mov pushl push push call add test je xor push push push push push call add cmpb je mov andl pop pop mov pop leave ret push call pop ret cmpl push mov je push mov test je mov mov incl inc decl cmpl jne pop pop ret cmpl mov push jbe push cltd pop idiv add mov inc decl mov test jle cmp ja mov mov dec mov mov mov dec mov inc cmp jb pop ret mov push mov push push push mov xor mov cmp je cmpl mov jbe push cltd pop idiv add mov inc decl mov test jle cmp ja mov mov dec mov mov mov dec mov inc cmp jb jmp cmp jae dec lea test je push cltd pop idiv mov add incl mov dec cmp jne mov add sub jmp mov pop pop leave ret mov push mov push push movsbl cmp push push mov mov jg je cmp jg je sub je sub je sub je sub je dec je sub jne mov xor cmp jl cmp jg jmp mov xor cmp jl cmp jg mov mov jmp mov xor cmp jl cmp jg mov mov jmp mov movb mov incl decl jmp mov xor cmp jl cmp jg cltd push pop idiv mov cmp jne push pop jmp sub je push pop sub je dec dec je dec dec je dec jne pushl pushl jmp mov xor cmp jl cmp jg cmp je lea jmp mov xor cmp jl cmp jg mov mov cmp jl cmp jg cmp jge xor jmp push cltd pop idiv cmp jl inc jmp mov xor cmp jl cmp jmp mov jmp mov cmp jl cmp jle call xor jmp cltd push pop idiv pushl push add imul add jmp cmp jg je sub je sub je dec je dec je dec je sub jne mov xor cmp jl cmp jg pushl lea push jmp mov cmp jl cmp jg mov pushl push pop mov mov call pop jmp pushl xor pushl push push cmp je push pushl call add test je mov cmp je mov pushl movb mov incl decl push push push push pushl call add test jne jmp push jmp mov xor cmp jl cmp jg mov mov jmp mov xor cmp jl cmp jle call push push push push push movl call add xor jmp mov mov jmp mov xor cmp jl cmp jg lea jmp sub je sub je dec je dec je dec jne call call mov xor cmp mov setne mov mov mov jmp mov xor cmp jl pushl cltd push pop idiv mov jmp pushl xor pushl push push cmp je push jmp push jmp mov xor cmp jl cmp jg pushl xor inc jmp mov xor cmp jl cmp jg cmp mov jg mov jmp mov mov call xor inc pop pop pop leave ret mov push mov sub mov xor mov mov push push mov xor sub push je dec je mov jmp mov jmp mov cmpl mov je cmpl mov jne mov mov add push mov mov inc mov mov mov mov mov mov mov mov push xor push mov lea push push pushl mov mov call mov cmp je add cmp jg call mov cmp je movl jmp push call pop cmp je movl add mov cmp je pushl mov push push lea push push pushl call dec test jle mov mov cmpl jbe mov mov mov mov incl mov inc decl dec test jg pushl call pop xor inc lea pop pop pop mov xor call leave ret mov test je mov mov cmpl je xor mov mov inc inc cmp je mov movsbl cmp jg je cmp je cmp je cmp je cmp je cmp je pushl push call pop pop test je cmpl jbe lea cmpb je mov mov mov incl decl mov mov mov mov incl inc decl mov test jne jmp mov dec je dec je dec je dec jne mov jmp mov jmp movl mov jmp mov dec je dec je jmp movl mov jmp push push call pop pop test jne add jmp push push call pop pop test jne add mov mov jmp add test je mov test je cmpl je cmp je pushl movsbl push call pop pop test je cmpl jbe lea cmpb je mov mov mov incl decl mov mov mov mov incl inc decl mov test jne jmp inc jmp mov dec je dec je dec je dec jne mov jmp mov jmp movl mov jmp mov sub je sub je sub je dec je sub jne mov dec dec je dec dec jne mov jmp mov jmp mov cmpl mov jg mov jmp mov cmp jne cmpl jbe movsbl pushl push call pop pop test je cmpl jbe lea cmpb je mov mov mov incl decl mov mov mov mov incl decl jmp cmpl jbe pushl movsbl push call pop pop test je cmpl jbe lea cmpb je mov mov mov incl decl mov mov mov mov incl inc decl mov test jne jmp mov dec je dec je jmp movl mov jmp mov dec je dec je jmp movl mov jmp mov dec je dec je jmp movl mov pushl mov pushl mov push pushl call add test je mov jmp xor jmp mov push mov sub mov push pushl xor lea mov mov call mov cmp jne call push push push push push movl call add cmp je mov andl xor jmp push mov cmp jne call push push push push push movl call add cmp je mov andl xor jmp push mov mov cmp je mov cmp jne mov mov mov mov cmp jbe mov cmp je cmp je lea movsbl push push call pop pop test je xor inc cmp jbe lea cmp je mov mov mov incl decl mov mov mov mov incl inc decl jmp mov cmp je inc xor cmpb jne inc inc push pushl lea push lea push mov lea call add test je inc cmp ja cmp jbe mov mov sub mov cmp je mov andl jmp mov mov mov cmp jne cmp ja call movl jmp cmp jbe movl jmp call push push push push push movl call add cmp je mov andl xor pop pop pop leave ret mov push mov pushl push pushl pushl pushl pushl call add pop ret mov push mov push push pushl pushl pushl pushl call add pop ret mov push mov push pushl pushl pushl pushl pushl call add pop ret call mov cmp je mov test jne call mov ret int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov or lea add mov or je add bt jae mov add pop leave ret mov push mov xor push xor inc cmp jl push push test je mov add cltd sub mov mov sar lea pushl mov pushl call pop pop test jne mov add mov jmp jge dec mov jmp lea cmp jle pop pop xor test sete pop mov pop ret orl call mov mov ret mov push mov sub mov xor mov push mov test je cmpb je push push call pop pop test je push push call pop pop test jne push lea push push pushl call test je lea push call pop mov xor pop call leave ret push lea push push pushl call test jne xor jmp lea push push call pop pop test jne call jmp mov push mov xor mov cmp je inc inc cmp jb xor inc pop ret xor pop ret mov push xor jmp mov sub inc cmp ja add jmp mov sub cmp ja add movsbl shl lea mov test jne mov pop ret xor mov inc cmp jl cmp jle sub cmp ja inc jmp ret mov push mov sub mov xor mov push push mov call mov mov add call mov push lea push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne push call pop test je orl mov mov mov shr not and mov pop xor pop call leave ret mov push mov sub mov xor mov push push lea push mov and push or push mov call test jne xor jmp lea call cmp je cmpl je mov push mov call push mov call pop cmp pop je xor inc mov xor pop call leave ret mov push mov sub mov xor mov push push push mov call mov mov add call mov mov push lea push mov neg sbb and add push push call test jne andl xor inc jmp lea push pushl call pop pop test jne push lea push mov neg sbb and add push push call test je lea push pushl call pop pop test jne orl mov jmp testb jne mov test je push lea push pushl call add test jne pushl orl mov call pop cmp jne mov jmp mov test jne push call pop test je or mov mov mov mov and cmp je push lea push mov neg sbb and add push push call test je lea push pushl call pop xor pop test jne orl mov cmp je or mov jmp cmp je pushl call pop cmp jne push jmp cmp jne cmp je lea push pushl call pop pop test jne push push mov call pop pop test je orl cmp jne mov mov shr not and mov pop pop xor pop call leave ret mov push mov sub mov xor mov push push mov call mov mov add call mov push lea push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne cmp jne push jmp cmpl jne cmpl je lea push pushl call pop pop test jne push push mov call pop pop test je orl mov mov mov shr not and mov pop xor pop call leave ret pushl call sub neg pop sbb push inc push mov call testb jne andl ret pushl call pushl sub neg sbb inc mov call sub neg sbb andl inc cmpl pop pop mov je push pop jmp mov call push push mov call mov test je test je test jne andl ret pushl call sub neg sbb inc pop mov je push pop jmp mov call push push mov call testb jne andl ret mov push mov push push push call mov mov add test jne orl jmp lea lea mov mov test je cmpb je push push push call add mov andl test je cmpb je mov test je cmpb je call jmp call cmpl jne push push push call add test je mov test je cmpb je call jmp call jmp mov test je cmpb je push call sub neg pop sbb push inc push mov call testb jne andl jmp movl call mov mov cmpl je mov sub neg sbb and mov call mov mov test je cmp je cmp je movzwl push call test je push pushl call test je mov test je mov mov mov mov mov mov test je mov mov cmp jne push push push call add test je xor push push push push push call add jmp push push push pushl call test je push lea push push pushl call test je push push sub push pushl call add xor inc jmp xor pop pop pop pop ret test je xor test setg lea mov ret movzbl movzbl sub je xor test setg lea mov ret mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov ret xor ret mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov ret xor ret mov push push mov jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne add add sub cmp jae add add cmp ja jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne xor pop pop ret mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne movzbl movzbl sub je xor test setg lea mov jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp lea (bad) fildl and jecxz add out add fiaddl lcall add inc add inc add fiadd jmp inc add in add flds test inc add add inc add add faddl jmp in add fadds outsb faddl pop loopne add in add fadds loop inc add fild mov inc add fildl inc fild sub inc add push push mov mov sub je dec je dec je dec je dec je mov mov push push pop jmp mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne add add sub cmp jae add add cmp ja jmp mov jmp mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test je mov jmp movzbl movzbl sub je xor test setg lea mov jmp xor test jne xor pop jmp mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne movzbl movzbl sub je xor test setg lea mov jmp mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne jmp mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne movzbl movzbl sub je xor test setg lea test je mov jmp mov mov movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp mov mov movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl jmp mov mov movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl jmp mov mov movzbl movzbl jmp xor pop pop pop ret pop lock add inc add inc add inc add out inc add inc add sti inc add inc add inc add testl mov repnz add cli inc add out inc add repnz add testb cli inc add icebp inc add stc inc add in inc add lock add hlt inc add in inc add inc add inc add call in push andl push mov test jne xor jmp push cmp jb lea test jbe mov mov mov add add test je cmp jne mov test je cmp jne mov test je cmp jne mov test je cmp jne addl cmp jb jmp movzbl movzbl jmp movzbl movzbl jmp movzbl movzbl jmp movzbl movzbl jmp mov mov jmp mov test je cmp jne inc inc incl cmp jb xor pop pop leave ret movzbl movzbl sub jmp int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov mov mov or je add bt jae lea add pop leave ret push call pop ret push push call mov xor cmp jbe push pop xor div cmp sbb inc jne call movl push push push push push call add xor jmp imul mov mov cmp jne xor inc xor mov cmp ja cmpl jne add and mov mov cmp ja push call pop mov pushl call pop mov movl call mov cmp je pushl push push call add cmp jne push push pushl call mov cmp jne cmp je push call pop test jne mov cmp je movl jmp xor mov push call pop ret cmp jne mov cmp je movl mov call ret push push call mov test jne pushl call pop jmp mov test jne push call pop jmp cmpl jne xor mov cmp ja push call pop mov push call pop mov cmp je cmp ja push push push call add test je mov jmp push call pop mov cmp je mov dec cmp jb mov push push pushl call push call mov push push call add cmp jne cmp jne xor inc mov add and mov push push pushl call mov cmp je mov dec cmp jb mov push push pushl call push pushl call add movl call cmpl jne test jne inc add and mov push push push pushl call mov jmp mov mov push call pop ret mov test jne cmp je push call pop test jne call cmp jne mov call push call pop mov jmp test jne call cmp je movl jmp test jne inc push push push pushl call mov test jne cmp je push call pop test je cmp jbe push call pop call movl xor call ret call jmp test jne call mov call push call mov pop mov jmp mov push mov mov push xor cmp jbe push xor pop div cmp jae call push push push push push movl call add xor jmp imul push push mov cmp je pushl call pop mov push pushl call mov pop pop test je cmp jae sub push push add push call add mov pop pop pop pop ret mov push mov push mov push call push call pop pop test je call add cmp jne xor jmp call add cmp jne xor inc incl testl jne push push lea cmpl mov jne push call pop mov test jne lea push mov mov pop mov mov jmp mov mov mov mov mov orl xor pop inc pop jmp xor pop pop ret mov push mov cmpl je push mov testl je push call andl andl andl andl pop pop pop ret push push call call mov add mov xor xor cmp setne cmp jne call movl push push push push push call add or jmp push call pop mov push call mov pushl pushl pushl push call mov push push call add movl call mov call ret mov push call pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov mov sub cmp jne andl jmp mov cmp jae movzwl mov mov and movzwl mov jmp pushl lea call mov pushl pushl lea push push lea push lea push push call add test jne and cmpb je mov andl movzwl movzwl and leave ret mov push mov push mov cmp jne xor leave ret mov cmp jae movzwl mov movzwl movzwl and leave ret cmpl jne pushl lea pushl push push lea push push push call add push pushl pushl call add leave ret mov push mov pop jmp push mov sub mov mov mov shr pxor jmp lea nop movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea dec jne mov mov pop ret push mov sub mov mov cltd mov xor sub and xor sub test jne mov mov and mov cmp je sub push push call add mov mov test je add sub mov xor mov mov rep mov jmp neg add mov xor mov mov rep mov mov mov add sub push push push call add mov mov mov pop ret mov push mov sub push push pushl lea call mov mov xor cmp je mov cmp jne call push push push push push movl call add cmpb je mov andl xor jmp cmp je cmpl jl cmpl jg mov push mov mov lea cmpl jle lea push movzbl push push call mov add jmp mov movzbl movzwl and test je mov inc jmp cmp jne orl jmp cmp jne mov inc mov test jl cmp je cmp jg test jne cmp je movl jmp mov cmp je cmp je movl jmp movl jmp cmp jne cmp jne mov cmp je cmp jne inc mov inc mov mov xor divl movzbl movzwl test je movsbl sub jmp test je mov sub cmp movsbl ja sub add cmp jae orl cmp jb jne cmp jbe orl cmpl jne mov dec test jne cmpl je mov andl jmp mov imul add mov mov inc jmp mov test jne test jne and je cmpl ja test jne cmp jbe call testb movl je orl jmp testb push pop setne add mov mov test je mov testb je negl cmpb je mov andl mov jmp mov test je mov cmpb je mov andl xor pop pop pop leave ret mov push mov xor push pushl pushl pushl cmp jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov cmpl push pushl pushl pushl jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov sub push push push xor push push push pushl mov mov call mov and add mov cmp je push push push pushl call mov and add cmp je mov mov sub sbb js jg cmp jbe mov push push call push call mov test jne call movl call mov pop pop pop leave ret push pushl call pop pop mov test jl jg cmp jb mov jmp mov push pushl pushl call add cmp je cltd sub sbb js jg test ja mov pushl pushl call pop pop pushl push call push call xor jmp call cmpl jne call movl or mov jmp cmp jg jl cmp jae push pushl pushl pushl call and add cmp je pushl call pop push call neg sbb neg dec cltd mov and mov cmp jne call movl call mov call mov mov and cmp je push pushl pushl pushl call and add cmp je xor jmp push push call mov cmp jne call andl push pop jmp xor cmp jl cmp jb call mov call push pop mov push push push push push call add mov jmp mov sar lea mov and shl mov movsbl and je cmp jg jl cmp jae call mov call push pop mov mov jmp push call pop mov mov testb je pushl pushl pushl call add mov jmp call push pop mov mov movl call mov call ret pushl call pop ret mov push mov mov cltd push push pushl call add neg sbb pop ret mov push mov push mov push mov mov sar lea mov and shl lea mov add push movzbl movsbl and sar cmp je cmp je cmp je cmp je cmp jne orb mov lea mov and or mov jmp orb mov lea mov and or jmp andb jmp orb mov lea andb test pop pop pop jne mov pop ret neg sbb and add pop ret mov push mov mov cmp je cmp je cmp je call movl xor push push push push push call add push pop pop ret push push call xor pop ret mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp mov mov xor pop pop ret push push call mov cmp je cmp je cmp je cmp je cmp je call movl xor push push push push push call add or jmp mov cmp jne call movl jmp xor cmp jl cmp jb call movl jmp mov sar lea mov and shl mov movsbl and je push call pop mov mov testb je pushl pushl call pop pop mov jmp call movl orl movl call mov call ret pushl call pop ret mov push mov sub push xor push push cmp je pushl lea call cmp jne call push push push push push movl call add cmp je mov andl mov jmp mov cmp je mov cmp jbe call push push push push push movl call add cmp je mov andl mov jmp mov cmp jne pushl push pushl call add cmp je mov andl jmp mov movzbl lea push push call incl mov movzbl lea push push call add inc decl je cmp je cmp je sub mov jmp xor pop pop pop leave ret mov push mov push xor cmp jne cmp jne call push push push push push movl call add mov jmp cmp je cmpl ja pop pop jmp push pushl pushl pushl call add pop pop ret xor push push push push push push push call mov ret xor push push push push push push push call mov ret mov push mov cmp je cmp je push call mov cmp je cmp je push call pop ret mov push mov mov mov inc inc test jne sub sar dec pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmpl je push push and and cmp pop pop jne pop pop pop jmp test jne shr and cmp jb rep jmp nop mov mov sub jb and add jmp jmp nop jmp nop sub inc add add inc add rorl inc add add jmp add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov add shr add cmp jb rep jmp lea sti adc call adc fcoms inc add adc enter rclb add inc mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov adc inc add inc add adc cmp inc add leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop mov inc add adc add inc add mov sub shr sub cmp jb std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea push adc pop adc adc insb adc je inc add add inc add inc (bad) sbb inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov mov inc add adc fcoml inc add leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret mov andl ret mov push mov mov mov mov mov xor mov mov mov pop ret mov push mov cmpl je jmp mov mov pushl mov call pop mov mov test jne pop ret mov mov test jne xor ret cmp jl cmp jg movsbl sub inc mov ret xor jmp test je cmp jl cmp jg movsbl shl inc lea mov mov cmp jne mov inc mov cmp je or ret mov push push mov push xor cmpb jne inc mov mov mov cmp jl cmp jle cmp jne xor inc mov movsbl cmp jg je test je cmp jne lea cmpb jne mov inc mov movsbl cmp jg je sub je sub je dec dec jmp cmp jl cmp jle cmp jle cmp jne inc mov jmp movsbl sub mov inc or mov test je or jmp and cmp jge mov mov test je and or jmp and mov and je cmp je cmp je mov jmp test je and jmp and jmp test je and or jmp and or jmp test je and or jmp and or and sub je dec dec je dec dec je dec dec jne and or jmp and or jmp test je and or jmp and jmp cmp jle cmp jle cmp jne and or jmp mov jmp inc mov mov cmp jl cmp jg movsbl lea mov call or jmp mov jmp mov dec jmp or jmp sub je dec je dec je sub jne inc mov mov cmp mov jl cmp jg movsbl mov or sub mov test je and or jmp and test je and or jmp and or test je or jmp and and sub je dec dec je dec dec jne test je and jmp and jmp test je and or jmp and or jmp test je and or jmp and or jmp xor test sete add mov jmp and or jmp and or jmp or inc mov jmp mov cmp jl cmp jg movsbl inc add and mov cmp ja jmp mov test je and or jmp and test je and or jmp and or jmp mov test je and or jmp and test je and or jmp and or jmp mov test je and or jmp and test je and jmp and jmp and or jmp and or jmp and or jmp and or jmp and or jmp and or jmp cmp jne inc mov mov jmp xor test setne add mov mov pop pop pop ret nop inc sbb test inc add sbb cmc sbb or sbb sbb inc add sbb aaa sbb mov not and ret mov shr not and ret mov shr not and ret mov shr not and ret mov shr not and ret mov shr not and ret mov and xor cmp setne mov ret mov shr not and ret mov shr not and ret mov shr not and ret mov and ret mov and ret mov and ret mov shr not and ret mov and ret mov shr not and ret mov push mov mov not test mov mov jne inc inc pop ret mov push mov push push mov add and cmpl mov je push call pop jmp test ja push pop mov push cmp jae mov cmp ja push push mov call test je andl jmp xor test je mov test je mov jmp mov sub mov mov jmp xor jmp sub mov mov mov lea pop pop pop pop ret mov andl movb andl ret mov push mov mov mov mov mov mov mov pop ret xor cmpb setle ret xor cmp sete ret movsbl ret mov orl ret mov shr and ret xor cmp je testl je inc ret cmpl je orl ret xor cmp je testl je inc ret orl ret mov shr and ret mov shr and ret orl ret mov shr and ret orl ret mov shr and ret orl ret mov shr and ret orl ret mov test jne xor ret mov jmp mov test jne xor ret mov jmp mov push mov mov test jne mov pop ret mov pop jmp mov push mov mov cmpb je mov mov cmp jle mov pop ret mov push mov mov mov mov mov mov mov pop ret xor cmpl sete ret mov orl ret mov movl ret mov push mov mov mov movl mov pop ret xor inc ret mov ret mov push mov mov cmp jae mov mov inc pop ret mov push mov mov mov movl test je mov cmp je cmp jne xor mov pop ret mov test je mov test je mov mov jmp xor ret mov test je mov test je mov mov jmp xor ret mov push mov mov test je pop jmp mov pop ret mov push mov mov mov mov dec neg sbb and add movl mov pop ret mov ret cmpl setne dec and ret mov push mov xor inc test jne or mov xor mov mov mov mov mov movl mov movl mov mov movl mov mov cmp ja imul add pop ret mov pop ret mov push mov mov mov orl mov mov movl mov pop ret mov push mov cmpl jge mov mov push push mov call mov mov mov call add pop mov pop mov pop ret mov push mov mov mov call test jne mov mov pop jmp pop ret mov push mov push pushl mov mov pushl mov call cmp jae pushl mov mov push call pop pop ret xor cmp je inc inc cmpb jne ret mov push mov test jbe sub mov mov inc dec jne pop ret mov push mov cmpl jne xor pop ret mov test je cmp jne inc inc decl jne movzbl movzbl sub pop ret mov push mov mov mov orl lea orl mov mov mov test je push mov mov mov pop jmp andl andl mov mov mov mov mov mov movb pop ret mov push mov sub xor mov and and push lea push push lea push pushl mov mov call mov add leave ret mov push mov sub mov and and push xor lea push push lea push pushl mov mov call mov add leave ret mov push mov pushl mov pushl call pop ret mov push mov mov push mov push mov sub cmp jle mov test jbe mov mov sub mov push mov mov inc dec jne pop lea pop pop pop ret mov push mov cmpl push mov je push push mov call test je pushl mov call jmp xor test mov setne dec and mov jmp andl movb andl mov pop pop ret mov push mov push mov mov andl cmp je cmp je xor jmp mov andl mov cmp jne push call pop mov test jne movb mov pop pop ret mov push mov push mov mov push mov push test je test jne mov call lea push push mov call mov test je jmp mov mov lea push push call movb jmp test je movb pop mov pop leave ret mov push mov cmpl push mov je push push mov call test je pushl mov pushl call jmp xor mov test jne movb pop pop ret mov push mov push mov andl movb andl cmpl je push push mov call test je pushl mov call jmp xor mov test jne movb mov pop pop ret mov push mov mov push mov andl mov cmp jne push call pop mov test jne movb jmp andl mov pop pop ret mov push mov push mov cmpl je push mov cmpl je push push mov call test je mov mov mov mov jmp xor test je incl mov mov pop mov pop pop ret mov push mov mov cmp ja mov cmp je cmp jg mov mov mov mov mov mov jmp push jmp push mov call mov pop ret mov push mov push push mov mov movl test je cmpl je push push mov call mov mov test je test jbe mov sub mov mov inc dec jne jmp andl andl pop mov pop pop ret mov ret mov test je mov mov ret xor ret mov push mov pushl pushl pushl pushl call add pop ret mov push mov cmpl jne push push pushl pushl call add jmp mov pop ret mov push mov mov cmpb pushl jne mov incl call jmp pushl call pop pop mov pop ret mov push mov pushl call mov pop pop ret mov push mov push mov cmpb jg cmpl mov je cmp je cmp je test je push call pop push mov call jmp push call mov pop pop ret mov push mov push mov cmpl je push call jmp push mov test je mov test je sub je dec push mov je push call test je pushl mov push call jmp push call test je mov movl mov jmp xor mov test jne movb jmp movb pop pop pop ret mov push mov xor push mov mov andl mov cmp je push lea push call mov pop pop ret mov push mov mov xor push mov mov andl mov cmp je xor cmp je inc cmp jne push push mov call mov pop pop ret mov push mov push mov xor push mov mov andl mov mov cmp je cmp je mov mov mov cmp je cmp je cmp je cmp je cmp je cmp je cmp jl cmp jle cmp jl cmp jle cmp jl cmp jle cmp jb cmp jbe testl je inc inc mov mov cmpb jne push pushl mov call mov mov test je inc mov cmp je andl movb jmp cmpb jne movb jmp movb mov pop pop pop ret mov push mov sub mov xor mov push xor push mov push mov andl lea mov mov push push pushl dec pushl call add mov or mov mov mov jne lea sub push push mov call mov pop mov pop xor pop call leave ret mov push mov sub mov xor mov mov push mov xor mov andl cmp push lea mov mov mov jg jl cmp jae mov neg adc movb neg mov push jmp xor push push push pushl dec call add mov mov mov mov or mov jne pop cmp je dec movb lea sub push push mov call mov pop mov xor pop call leave ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov push mov cmpb jg mov mov test jne movsbl push mov call jmp cmpl jne push mov call jmp push mov call mov pop pop ret mov push mov push mov cmpb jg push mov test je cmpl jne push call jmp mov test je cmp je movsbl push call jmp push push mov call test je push mov call jmp xor push mov call pop mov pop pop ret mov push mov xor push mov mov andl mov cmp je push lea push call mov pop pop ret mov push mov mov xor push mov mov andl mov xor cmp je inc cmp jne push push mov call mov pop pop ret mov push mov push push mov mov test je movsbl sub incl cmp ja mov andl andl shr not test je and sub je push pop sub je sub je sub je sub je sub jne push jmp push jmp push jmp push jmp push jmp push call add push lea call mov mov mov mov mov leave ret push jmp push mov call mov leave ret mov push mov mov mov mov test je cmp je push jmp incl push call jmp push call mov pop ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov push mov cmpb jg push mov test je cmpl jne push call jmp push push mov call test je movl mov jmp xor push mov call pop mov pop pop ret mov push mov push mov cmpb jg push push mov xor cmp je cmp je cmp jne push call jmp push push mov call cmp je xor cmp je inc cmp jne push push mov call jmp xor push mov call pop pop mov pop pop ret mov push mov sub push xor push mov mov andl movl mov cmp jne push mov mov cmp je cmp je cmp je mov jmp push mov call mov mov cmp je movsbl sub cmp ja mov push lea inc push mov call push mov call jmp andl lea push lea push mov call mov sub cmp pop pop jle mov cmpl je lea push call lea push mov call cmp jne push mov call cmp je jmp push mov call pop mov pop pop leave ret mov push mov push push mov mov push mov mov mov push mov mov call lea push call pop push mov call push mov call mov cmpb jne incl mov pop leave ret mov push mov push push pushl lea pushl pushl call mov call mov leave ret mov push mov push push pushl lea pushl pushl call mov call mov leave ret mov push mov push push pushl lea pushl pushl call mov call mov leave ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov sub push mov xor cmpb mov jne inc movl mov mov cmp jne mov push call mov jmp cmp jl cmp jg movsbl sub cltd inc push mov push cmp je lea call push pushl lea push call add jmp lea call mov mov mov mov mov mov jmp push push xor jmp test je cmp jl cmp jg movsbl sub push cltd push mov push mov push mov call add mov adc inc mov mov mov mov cmp jne mov inc mov cmp je push mov call mov jmp push jmp xor push push cmp je cmp je lea call jmp lea call jmp cmp je lea call push pushl lea push call add jmp lea call mov mov mov mov mov mov pop pop pop leave ret mov push mov sub mov mov andl andl test je movsbl add cmp ja jmp push jmp push jmp push jmp push lea call mov movsbl incl sub je dec dec je dec dec je dec dec jne lea push lea push push call mov mov add jmp mov mov mov mov mov leave ret push jmp push mov call mov leave ret xchg sub add sub add sub add inc add call in mov movsbl sub sub je dec dec je lea push call pop mov test jne mov mov test je cmp je cmp je mov push call jmp mov incl shr not test mov jne mov push lea push lea call mov mov mov mov mov mov leave ret incl mov mov mov mov leave ret mov incl shr not test mov jne mov push jmp incl push mov call mov leave ret mov push mov mov mov sub test je cmp jne incl mov mov xor and mov mov leave ret push pushl lea push call push lea push push call add jmp push pushl lea push push push lea call mov call mov call mov leave ret mov push mov sub andl push push mov xor inc mov mov movsbl mov sub mov je dec je dec je cmp je mov cmp je cmp jne add shl movsbl inc push lea inc mov cmp jbe push lea call push push lea call push lea push lea call mov mov mov mov push lea push lea call mov mov mov mov cmpb mov pop jne incl jmp push lea push lea call mov mov mov mov mov cmp je incl jmp push lea call mov mov mov or mov mov jmp push jmp mov movb jmp cmp je push mov call mov jmp mov push lea movb call jmp cmp jne mov cmpb setne dec and add mov mov incl mov andl mov pop pop leave ret mov push mov mov sub push xor cmp je call cmp mov jge mov cmp jne lea push push lea lea jmp andl push push mov mov mov test je push lea call jmp mov decl test je mov cmp je push lea push lea push push call push lea push push call add mov call push lea call cmpb jle cmp je lea push lea push test je mov jmp push lea push push lea push push call add mov call mov call mov mov mov mov lea push lea push call mov mov pop pop mov or pop mov mov pop jmp mov push cmp je lea push push lea push push lea push push lea push push call add mov call jmp lea push lea lea push push push call mov call mov call push pushl call mov pop pop pop leave ret mov push mov sub push pushl lea push push call push lea push push call add mov call mov leave ret mov push mov push pushl call mov pop pop pop ret mov push mov push pushl call mov pop pop pop ret mov push mov push pushl call mov pop pop pop ret mov push mov mov mov sub push push mov xor mov mov inc cmp mov jg mov cmpb je lea push call pop push lea push push lea push lea call mov call push mov call cmp jg mov cmpb je push jmp mov mov test je cmp je push lea push lea push call push lea push push call add mov call push mov call mov cmpb jne inc mov cmp jg cmpb je push mov call cmp jle cmp jg mov cmpb jne push mov call push mov call mov cmpb jne incl jmp cmp jg push lea push push call add push mov call mov pop pop leave ret mov push mov sub pushl lea call mov mov incl cmp jne mov mov incl cmp jne incl lea push push call lea push push call mov mov add test je cmp je inc mov mov test jne cmpb jne dec mov push jmp mov inc mov mov mov mov mov leave ret push mov call mov leave ret mov push mov push push mov mov test jne mov push call jmp push cmp jne incl lea push call push push pushl call add jmp pushl call pop pop mov leave ret mov push mov sub mov xor mov mov push mov incl push movsbl cmp push mov jg je sub je sub je dec je dec jne lea push call lea push call cmpb pop pop jg cmpb jg push lea push lea call test jne push mov call jmp mov mov cmp jne mov mov movb jmp movb lea push push push lea push lea push lea call mov call mov call jmp mov cmpb jne incl push mov call jmp lea push call pop push push push lea call jmp push call jmp decl push jmp cmp je jle cmp jle cmp je cmp jne push lea push push call lea push call mov mov mov add mov jmp lea push call testl pop je push lea push lea call lea push call push call pop pop test je push jmp push lea push push cmp jne push lea push call add mov call jmp push lea jmp push lea call cmp jl cmp jg lea push call pop push lea call push lea call sub je dec je dec je dec je dec jne lea push call pop push lea call push lea call lea push call pop push lea call push lea call lea push call pop push lea call push push lea call jmp push call pop mov mov pop pop xor pop call leave ret mov push mov mov xor sub cmp je cmp je cmpb jne inc mov mov cmp jne mov push call jmp push push pushl call jmp cmpb jne pushl inc pushl mov call pop pop jmp push mov lea push push call mov pop pop pop test je lea push push lea push call mov mov mov add jmp test je lea push push jmp mov mov mov mov mov leave ret pushl push pushl call add mov leave ret mov push mov pushl pushl call mov pop pop pop ret mov push mov sub mov xor mov push xor push mov mov andl mov movb movl cmp jne push mov mov mov cmp je cmp je cmp je mov jmp push mov call mov mov movsbl sub cmp ja inc mov push mov lea push call jmp and mov mov cmp jne inc mov push lea call jmp cmp jne inc cmp je mov lea push call jmp cmp jne lea push call testl pop je push lea push lea call lea push call push call pop pop cmp je push jmp push lea push lea push lea push push call add mov call jmp push lea push lea push lea jmp and lea push lea push mov call pop pop mov mov mov mov mov sub cmp jle mov cmpl je lea push call lea push mov call cmp je pop mov mov pop mov xor pop call leave ret mov push mov sub mov movsbl push xor mov and and push xor inc cmp mov mov mov jg je cmp je cmp jle cmp jle cmp jg movsbl pushl lea call cmp je lea push lea push push call mov mov add mov mov mov mov mov mov mov pop pop leave ret and mov cmp je lea push call push lea push push call add push lea call mov cmp je mov call cmp jne push lea call push lea call mov cmp je movb mov cmp jne mov mov mov mov jmp inc mov push mov lea push push call mov mov add mov mov mov cmp je cmpb jne lea push lea push push call mov mov add mov mov cmp je lea push lea call jmp dec mov push mov call mov jmp cmp je jle cmp jle cmp jne movsbl inc cmp mov jg cmp jge cmp jg je cmp je cmp jle cmp jle cmp jg movsbl pushl mov call jmp movsbl pushl jmp movsbl pushl lea call mov or mov mov mov jmp cmp je cmp jle cmp jle cmp jne push push lea push call mov add or jmp movsbl inc mov cmp je cmp jne push push jmp cmp jg cmp jge sub je dec je dec jne movsbl pushl lea call mov mov cmp jne push pushl lea call jmp movsbl sub js cmp jae pushl lea call mov movsbl incl cmp je cmp je add cmp jbe decl jmp lea push lea push lea call push lea push lea push call pop mov call push lea call push lea push lea push call pop mov call push lea call push lea push lea push call pop mov call push lea call push lea push lea push push call pop pop mov call push lea call push pushl lea call jmp lea push push call pop pop lea push pushl lea push lea push push lea push lea call mov call mov jmp movsbl pushl lea call push lea push push call mov mov add mov mov cmp je test je push jmp lea push pushl lea call jmp cmp jl cmp jle cmp jle cmp jle cmp jne movsbl inc cmp mov jl cmp jle cmp jle cmp jg movsbl pushl jmp movsbl pushl lea call mov cmpb jne lea push call pop push lea call mov cmpb jne incl jmp lea push call pop push lea call push lea call mov mov mov mov jmp movsbl pushl jmp movsbl pushl jmp xor inc movsbl pushl lea call cmp je cmp je orl jmp mov push mov mov sub cmpb jne cmpb jne orl orl orl push mov push mov lea mov lea push mov inc mov inc lea mov mov cmpb movb jne inc mov lea push lea push push call jmp push lea push push call mov mov add mov mov test jne movb cmpb jne lea push call push lea push push call add push lea call mov test je mov call cmp jne push lea call push lea call cmpb je mov cmpb je incl mov mov mov mov mov pop mov mov pop mov pop leave ret mov push call mov leave ret mov push mov sub mov xor mov mov push mov movsbl push mov sub mov cmp ja mov incl push push call mov jmp andl mov and cmp jne lea push push call pop pop mov mov mov mov mov mov inc mov cmp je dec xor mov cmp setne inc push lea call jmp mov push mov push mov call pop test jne addl jmp mov mov push mov call pop test jne addl lea push call testl pop je push lea push lea call lea push call push call pop pop lea test je push call jmp push call push lea push lea push lea jmp push lea call push lea push lea push lea push push call add mov call push lea call jmp cmpb je cmp jne mov xor and incl mov mov jmp push push lea call mov mov mov mov pop cmpb je mov cmpl je lea push call mov mov mov mov mov mov pop xor pop call leave ret mov push mov sub push push mov push xor push lea push mov andl push mov call add push mov call mov cmp jne mov mov cmp je cmp je push lea push push lea push lea push call pop mov call mov call push mov call mov mov cmp jne incl jmp cmp je push jmp cmp jne push mov call jmp push lea push push lea push push lea call mov call mov call push mov call pop mov pop pop leave ret mov push mov pushl call mov pop pop ret mov push mov mov sub push push mov shr xor not inc and je test je xor mov movsbl andl mov and incl sub je sub je dec je dec je dec je dec je dec jne push jmp push jmp lea push mov call push lea push push call mov mov add mov mov jmp push jmp push jmp push lea call andl and test je mov mov mov mov lea push call pop lea push lea call mov mov mov mov mov jmp mov decl push call mov pop pop leave ret mov push mov mov cmpb jne inc cmpb jne push pushl call pop pop jmp push push pushl mov call jmp push push pushl call add mov pop ret mov push mov sub push call add push lea call mov cmpb je movsbl inc mov mov sub je dec dec je sub jne mov push call mov leave ret lea push call pop push lea call jmp push lea call jmp push lea call push lea call mov mov mov mov mov leave ret mov push mov sub push push push xor mov and mov call mov mov xor inc cmp je testl mov jne mov cmp jne mov push call mov jmp cmp jne push push pushl call add jmp cmp jne mov mov mov mov jmp mov andl mov mov je xor mov and cmpl sete mov test mov je and jmp and test je mov and cmp je cmpl mov je and jmp and test je mov and cmp je cmp je test je mov mov shr not test je shr not test je lea push call push lea push push call mov mov mov add mov jmp lea push call pop push lea call mov mov mov test je and jmp and test je cmp jne lea push call pop mov push lea push push lea push call mov call push lea call lea push call mov pop test jne push lea push lea push lea push push call add mov call push lea call push lea call lea push call mov pop mov shr not test je mov shr not test je test jne lea push lea push push lea push lea push lea push push call add mov call mov call mov mov mov mov jmp and and and and and xor mov mov mov mov mov mov cmp je and jmp and cmp je cmp je mov and cmp jne lea push call mov mov mov lea push mov call mov mov mov lea push mov call add jmp cmp je mov and cmp jne lea push call pop mov mov mov mov lea push call pop mov mov mov mov xor cmp je cmpl je mov and cmp je mov and cmp lea push je call pop mov mov mov mov jmp call pop push lea call mov mov shr not test je shr not test je lea push lea push lea push call pop mov call mov mov mov mov jmp lea push call pop push lea call mov cmpl je cmpl je testl jne push lea push push call add push lea call jmp mov mov mov mov and xor mov cmp je lea push push call push lea push push call add push lea call testl je mov mov mov mov jmp xor push push mov call cmp je mov movb andl mov lea push push call pop pop mov mov mov mov mov mov test je and jmp and test je test je mov and cmp jne push lea push lea push lea push push lea push lea push lea push push lea push lea push lea push push call add mov call mov call mov call mov call jmp test je mov and cmp jne push lea push lea push lea push push call add mov call push lea call jmp push lea call push lea push lea call push lea call push lea push lea push call push lea push push call add mov call push lea call test je mov and cmp je lea push lea call mov shr not test lea push je call pop push lea call jmp call pop push lea call mov shr not test je test je mov mov mov mov mov mov mov mov jmp pushl lea call mov mov test jne mov and cmp jne lea push pushl call pop pop jmp test jne mov and cmp je test jne mov and cmp jne push pushl lea push call pop push lea push push lea push lea call mov call mov call jmp test jne mov and cmp jne lea push pushl call jmp test je mov and sub jmp mov and neg sbb inc test mov mov je and jmp and test je mov mov and sub neg sbb inc neg sbb test je push jmp cmpl mov je and sub jmp and neg sbb inc test mov je and jmp and test je mov mov and sub neg sbb inc neg sbb test je push jmp cmpl mov je and sub jmp and neg sbb inc test mov je and jmp and test je mov mov and sub neg sbb inc neg sbb test je push lea call jmp cmpl jne mov and cmp je cmpl je mov and sub jmp mov and neg sbb inc test mov je and jmp and test je mov mov and xor cmp sete neg sbb test jne mov xor cmp sete neg sbb test je lea push lea push push call add jmp lea push lea push call pop pop jmp mov mov xor mov mov cmp je and sub jmp and neg sbb inc cmp je mov shr not test je mov cmp je and sub jmp and neg sbb inc cmp je cmp je mov and sub neg sbb inc jmp xor inc cmp je lea push lea push push call mov mov mov add mov mov test je mov and cmp je test je mov and sub jmp mov and neg sbb inc test mov je and jmp and test je mov test je and sub jmp and neg sbb inc test je mov and cmp je mov test je and sub jmp and neg sbb inc test je mov and cmp je mov test je and sub jmp and neg sbb inc test je mov and cmp jne lea push lea push push call mov mov mov add mov mov shr not test je cmpl mov je and sub jmp and neg sbb inc test je cmpl mov je and xor cmp sete mov jmp and sub neg sbb inc test je lea push push jmp cmpl mov je and sub jmp and neg sbb inc test je cmpl mov je and xor cmp sete mov jmp and sub neg sbb inc test je lea push push jmp cmpl mov je and sub jmp and neg sbb inc test je cmpl je push test pop sete jmp mov and neg sbb inc test je lea push push lea push call mov mov mov add mov cmpl mov je and sub jmp and neg sbb inc test mov je and jmp and test je testl jne lea push lea push push call mov mov mov add mov test je lea push lea push push call mov mov mov add mov mov mov mov pop pop pop leave ret mov push mov sub push push mov push test je andl lea push push call or pop pop mov mov mov mov mov jmp mov mov cmp jne inc mov cmp jne cmp jne lea push call mov pop jmp inc mov cmpb jne jmp lea push call mov mov xor inc pop test je test je mov jmp andl mov shr and cmp jle mov mov mov jmp mov mov test je cmp je lea push call cmpl pop je cmpb je lea push lea push lea movb call mov mov mov cmpb mov mov je lea push call pop mov mov mov mov lea push lea push lea jmp lea push lea push lea push push lea call mov call mov mov mov mov cmpl je test je or mov mov test je or mov test je mov test jne mov mov test je cmp je push jmp incl test je cmpl jne test jne andl andl lea push lea push call pop pop jmp lea push pushl call pop pop jmp test jne push mov call mov pop pop pop leave ret mov push mov sub push xor push mov push mov andl mov mov mov jmp mov mov cmp je cmp je cmp je cmp je cmp je push lea push push call add push mov call cmp je push lea push push call add push mov call mov mov cmpb jne inc mov movsbl sub je dec je sub je dec dec je sub push je lea push lea push call pop jmp lea push push lea push push lea inc push push mov call add mov call mov call push mov call movb jmp lea cmpb jne cmpb jne mov push lea push push lea push push call add mov call push mov call mov cmpb jne incl jmp push lea push push lea push lea push call push lea push push call add mov call jmp push push lea call push lea push push call add push mov call mov cmpl je lea push call jmp lea push dec push mov lea jmp lea push push lea push push push call add mov call push mov call cmp je mov mov cmp je cmp je push jmp cmp jne push mov call jmp push lea push push lea push push lea call mov call mov call push mov call pop mov pop pop leave ret mov push mov mov mov sub test jne pushl push pushl call add mov leave ret cmp jl cmp jle cmp je mov push call jmp push movsbl sub inc mov cmp jne mov test je movsbl sub inc cmp mov jl cmp jmp pushl push pushl call add jmp test jl cmp jle or cmp jne mov push call mov jmp andl andl push mov mov push mov mov mov and mov je lea push lea push push call mov mov mov mov add cmpb lea mov push je lea push lea push call push lea push push call add mov call jmp lea push push call add mov mov mov mov mov mov test je cmp jne mov incl and cmp lea push je call pop mov mov mov mov test je mov shr not test je lea push lea push lea push call push lea push push call add mov call mov mov mov mov jmp call pop push lea call jmp push jmp lea push push pushl call add jmp lea push call pop push lea call mov shr not test je lea push lea push lea push call pop mov call mov mov mov mov jmp lea push call pop push lea call xor cmp je push lea push lea push lea push push call add mov call mov mov mov mov push push mov call cmp je movb andl mov mov jmp xor lea push push call pop pop push lea push lea push call push lea push push call add mov call push lea call mov and cmp je cmp je lea push lea call mov shr not test lea push je call pop push lea call jmp call pop push lea call cmp je mov mov mov mov mov mov mov mov mov jmp push mov call mov pop pop pop leave ret mov push mov sub mov mov push push mov and push xor mov movb test je cmp jne pushl lea push lea push lea push call mov add cmp je mov mov mov mov jmp mov mov xor cmp setl and movsbl push mov dec and add sub and mov pop mov sub je dec je sub jne mov shr not test je push call add cmpl lea push je lea push lea push push call mov call mov mov mov mov jmp mov shr not test je push call add cmpl lea push je lea push push lea push call mov call mov mov mov mov jmp mov mov shr not test je shr not test je push call add cmpl lea push je lea push lea jmp call incl mov cmpb jne pushl lea push lea push lea push call mov add test jne mov mov xor cmp setl movsbl dec and add sub jmp mov mov mov jmp cmpb je inc mov cmp ja pushl lea call lea push lea push lea call mov mov xor mov mov cmp je lea push lea push push lea push lea call mov call mov mov mov mov cmp je lea push lea push push lea push lea call mov call mov mov mov mov test je cmp je push jmp cmpb je lea push lea push push call mov mov mov mov add cmpb lea push mov lea je push lea push call pop mov call jmp push push call add mov mov mov mov jmp mov cmpb je lea push call pop push lea call mov mov test jne push lea call jmp incl cmp jne mov shr not test mov je and cmp jne cmp jne lea push lea push lea push call pop mov call mov mov mov mov jmp and cmp jne lea push call pop push lea call test je lea push lea push push call mov mov add mov mov test je lea push lea push push call mov mov add mov mov xor mov cmp jne mov cmp je mov test jne mov cmp je push lea push push lea push push lea push push call add mov call mov call jmp test je mov mov mov mov jmp mov cmp je push lea push push call add push lea call mov or cmpb je or mov mov mov jmp cmp jne mov cmp je testl jne mov cmp je push pushl lea push push push lea push push call add mov call mov call jmp push push pushl call add jmp mov cmp jne push mov call mov pop pop pop leave ret mov push mov sub mov mov and xor and and mov test je cmpb jne mov cmp jne addl lea push call push lea push push call add jmp cmp jne lea push push call pop pop mov mov cmp jne mov mov lea push call pop mov mov cmp jne xor leave ret cmp je testl jne mov cmpb jne mov mov jmp pushl lea call mov test jne mov test je mov call inc mov add and push call pop mov test je pushl lea push call mov mov jmp cmp jne inc mov inc jmp inc cmpb je jmp mov inc inc mov test jne mov mov mov leave ret mov push mov push push mov mov push xor push cmp je cmp jl cmp jle cmp jne pushl lea call mov mov cmp je cmp je testl jne push lea call cmp je push lea call lea push pushl call pop pop mov jmp push pushl lea pushl pushl push call xor cmpb sete push lea push pushl call add jmp push lea call pushl lea call mov cmp je push lea call push mov cmp je cmp je push lea call push lea call mov mov mov mov mov pop pop pop leave ret mov push mov push pushl pushl pushl call mov add pop ret mov push mov push pushl pushl pushl call mov add pop ret mov push mov push pushl pushl pushl call mov add pop ret push push call mov xor cmp jne xor jmp push call pop test je push call pop mov mov mov mov mov mov mov movzwl push push pushl pushl pushl lea call lea call mov mov call movl call mov call ret push call pop ret push push call mov xor cmp jne xor jmp push call pop test je push call pop mov mov mov mov mov mov mov pushl pushl pushl pushl pushl lea call lea call mov mov call movl call mov call ret push call pop ret mov push mov mov mov sub push push push test je incl andl movzbl mov and mov or cmp movb jg je sub cmp ja movzbl jmp push jmp push jmp push jmp push jmp push jmp cmp je jle cmp jle cmp je cmp jne mov mov incl mov movzbl cmp jg cmp jge cmp jg cmp jge test je cmp jne pushl lea push call push push pushl call add jmp decl push lea call jmp push jmp cmp jl cmp jle cmp jg push jmp push jmp push jmp cmp jl cmp jle cmp je cmp je cmp je add cmp ja lea decl push call mov pop mov mov mov test jne mov mov mov jmp push jmp push pop mov mov and xor mov mov mov mov cmp jne push lea push lea push lea mov or push call add test jne push lea call mov mov mov mov jmp push jmp push jmp push jmp push lea call jmp mov and jmp lea jmp push lea call push lea call cmp jne mov sub je push pop sub je sub je sub je sub je sub jne movzbl sub je sub je sub je sub je sub jne lea push push lea jmp lea push push lea jmp lea push push lea push call mov mov add mov mov mov cmpl je push lea push push call add push lea call mov mov mov mov mov jmp cmp jne test je push lea call test je push lea call jmp test je push lea call lea push lea push pushl call jmp pushl push pushl call add mov pop pop pop leave ret cmpsl popa inc add popa inc add popa inc add popa inc add add add add add add mov sub mov movsbl push xor mov and sub push mov je sub je sub mov je dec je push pushl call pop pop jmp push lea call cmp je push lea call mov mov incl mov lea push lea push pushl or mov call jmp mov cmp je cmp je mov push call jmp inc inc mov movsbl sub je sub je dec je dec jne and push lea push push pushl lea inc push mov mov call push pushl call add jmp push pushl inc pushl mov call jmp pushl inc pushl mov call jmp pushl push pushl call add mov pop pop leave ret mov push mov sub pushl lea call mov mov xor cmp je cmp je cmp je lea push pushl call pop pop jmp incl cmp jne mov push call jmp lea push push pushl call jmp incl andl push lea push push mov lea push lea push call mov mov mov mov lea push pushl call add jmp lea push push pushl call add mov leave ret mov push mov sub push push push mov call test je andl movb andl mov jmp xor push pushl call lea push call add pushl lea push push lea push lea call mov call push mov call mov pop leave ret mov push mov sub mov xor mov testb push je push call pop call test je push call pop testb je mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov lea mov movl mov mov push mov lea push push call lea add mov lea push movl mov mov call lea push call push call int3 mov push mov mov mov mov and not and or mov pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov cmpl sbb neg pop ret mov push mov mov and pop ret mov push mov pushl pushl call pop pop test jne cmpl je pop ret xor inc pop ret mov push mov pushl call pop test jne cmpl je pop ret xor inc pop ret mov push mov pushl pushl call pop pop test jne cmpl je pop ret xor inc pop ret mov push mov movzbl push call pop test jne cmpb je pop ret xor inc pop ret mov push mov pushl pushl pushl pushl call pop ret mov push mov sub pushl lea call pushl pushl pushl pushl call cmpb je mov andl leave ret mov push mov push push mov xor mov mov push mov push push xor xor inc cmp jne push push push push call test je mov jmp call cmp jne push pop mov jmp mov cmp je cmp je cmp jne cmp jne mov mov mov mov push push pushl pushl call mov mov cmp jne xor jmp jle push xor pop div cmp jb lea cmp ja call mov cmp je movl add jmp push call pop cmp je movl add mov jmp xor cmp je pushl push pushl pushl call test je push push cmp jne push push jmp pushl pushl push push push pushl call mov push call pop mov jmp pushl pushl pushl pushl call lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl push call add cmpb je mov andl leave ret mov push mov sub mov xor mov push lea push push pushl movb call test jne or jmp lea push call pop mov xor call leave ret mov push mov sub mov xor mov mov mov mov mov push mov mov push mov mov push xor mov mov mov cmp je mov lea push push call mov test je cmpl jne lea push pushl call test je cmpl jne mov movl cmp jne pushl call mov pop inc cmp jle cmp ja lea cmp ja call mov cmp je movl jmp push push pushl pushl push pushl call mov cmp jne xor jmp push call pop cmp je movl add mov jmp mov cmp je lea push push pushl call add push pushl pushl pushl push pushl call test je mov cmp je push push pushl push push pushl push pushl call test je mov jmp mov cmp jne push push push push push pushl push pushl call mov cmp je push push call pop pop mov cmp je push push push push push pushl push pushl call cmp jne pushl call pop mov jmp cmpl je mov mov pushl call pop mov lea pop pop pop mov xor call leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub and add sbb or pop jmp push lea sub and add sbb or pop jmp mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp mov mov xor pop pop ret mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp mov mov xor pop pop ret mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp mov mov xor pop pop ret mov push mov mov push xor push cmp je cmp jbe cmp je mov push mov cmp je mov cmp je cmp je call push pop push push push push push mov call add mov jmp cmp je call push pop push push push push push mov call add mov jmp lea pushl call inc pop mov cmp jne xor jmp cmp jbe push pop jmp pushl pushl pushl call add pop pop pop pop ret mov ret mov ret mov ret mov ret mov push mov call mov mov pop ret mov push mov call mov mov pop ret mov push mov call mov mov pop ret push push call xor mov mov mov mov mov mov push call pop mov call mov lea push call pop cmp je push push push push push call add lea push call pop cmp je push push push push push call add lea push call pop cmp je push push push push push call add call mov mov or mov mov push call pop mov mov cmp je cmp je mov cmp je push push call pop pop test je mov cmp je push call pop push call inc push call pop pop mov cmp je push push call pop inc push pushl call add cmp je push push push push push call add jmp mov cmp je push call pop mov push call cmp je xor inc mov mov imul mov cmp je mov imul add mov cmp je mov cmp je mov sub imul mov jmp mov mov lea push push push mov pushl push push push pushl mov call test je cmp jne mov mov mov jmp mov mov mov lea push push push mov pushl push push push pushl call test je cmp jne mov mov mov jmp mov mov mov movl pushl call pushl call pushl call add movl call cmp jne push push push mov pushl call add test je push push push push push call add add cmpb jne movl inc push call pop imul mov mov cmp je cmp jl cmp jg inc jmp xor mov push call pop ret cmpb jne inc push call pop imul add jmp cmp jg inc mov cmp jge cmpb jne inc push call pop add jmp cmp jg inc mov cmp jge cmp je negl movsbl mov cmp je push push push pushl call add test je push push push push push call add jmp mov mov mov call mov mov call mov call ret mov push mov sub andl cmpl push push push mov mov mov jne and jns dec or inc mov jne mov push cltd pop idiv test jne lea cltd mov idiv test je mov shl mov jmp mov shl mov mov lea cltd lea mov idiv push pop inc push mov mov cltd idiv mov mov sub mov lea cltd and add sar mov imul add add lea cltd pop idiv mov imul sub add cmp jg lea jmp add cmpl jne cmpl jne mov push cltd pop idiv test jne lea cltd mov idiv test je mov mov jmp mov mov cmp jle sub jmp and jns dec or inc jne mov push cltd pop idiv test jne lea cltd mov idiv test je mov jmp mov add imul add imul add imul add cmpl jne mov mov mov jmp lea push mov mov call pop test je xor push push push push push call add mov imul add jns addl decl jmp mov cmp jl sub incl mov pop pop pop leave ret mov push mov sub push lea xor push mov call pop test je push push push push push call add cmp jne xor jmp mov push xor inc cmp jne cmp je cmp je movzwl movzwl push movzwl push movzwl push cmp jne movzwl push push movzwl push push push jmp movzwl push push push push push movzwl push call movzwl movzwl add push movzwl push movzwl push cmp jne movzwl push push movzwl push pushl push jmp movzwl push push push pushl push movzwl push call add jmp cmp push pop push pop movl mov jge push pop mov movl movl push push push push push push push push push push pop call mov push push push push push pushl pushl push push push pop call add mov mov cmp mov jge cmp jl cmp jg cmp jle cmp jge mov pop pop leave ret cmp jl cmp jg cmp jle cmp jge xor jmp mov imul add imul add imul cmp jne xor cmp setge jmp xor cmp setl mov jmp push push call xor cmp jne push call pop mov cmp jne call incl movl call call ret push call pop ret push push call push call pop andl call movl call call ret push call pop ret push push call push call pop andl mov call mov movl call mov call ret push call pop ret mov push mov mov push mov push movzbl lea inc cmp ja add movzbl lea inc cmp ja add test je cmp je pop sub pop pop ret mov push mov sub push pushl lea call xor cmp jne call push push push push push movl call add cmp je mov andl mov jmp push mov cmp jne call push push push push push movl call add cmp je mov andl mov jmp mov cmp jne push pushl call pop pop jmp push mov movzbl lea push push call incl mov movzbl lea push push call add inc cmp je cmp je sub mov pop cmp je mov andl pop pop leave ret mov push mov push xor cmp jne cmp jne call push push push push push movl call add mov jmp cmp je pop pop jmp push pushl pushl call add pop pop ret mov push mov push push pushl call add pop ret mov push mov pushl push push pushl call add pop ret mov push mov pop jmp mov push mov pop jmp mov push mov push push pushl call add pop ret mov push mov pushl push push pushl call add pop ret mov push mov push push push mov xor cmp jne call push pop push push push push push mov call add mov jmp push cmp ja call push pop push push push push push mov call add mov jmp xor cmp mov setne inc cmp ja call push jmp mov add cmp ja mov mov cmp je movb lea movl neg mov xor divl cmp jbe add jmp add mov inc incl xor cmp jbe mov cmp jb mov cmp jb mov jmp mov dec mov mov mov dec mov inc cmp jb xor pop pop pop leave ret mov push mov cmpl mov jne test jge push push jmp push pushl pushl mov call pop ret mov push mov xor cmpl jne cmp jge inc mov push pushl mov pushl call pop ret mov push mov mov mov push pushl pushl call pop ret mov push mov sub push xor push cmp jne call push pop mov push push push push push call add mov jmp cmp jbe xor cmp mov setne inc cmp ja call push jmp mov add cmp ja mov mov mov mov cmp je neg adc movb lea movl neg mov mov pushl pushl push push call mov mov mov mov cmp jbe add jmp add mov mov inc inc mov test ja test jbe cmp jb mov cmp jb movb call push pop mov mov xor jmp movb dec mov mov mov mov dec mov inc mov cmp jb xor pop pop leave ret mov push mov xor cmpl jne cmp jg jl cmp jae xor inc push mov push pushl pushl pushl pushl call pop pop ret mov push mov push mov push pushl pushl pushl pushl call pop pop ret mov push mov cmpl jge xor pop ret pushl pushl pushl pushl call pop ret mov push mov sub pushl lea call cmpl jge xor jmp pushl pushl pushl pushl call cmpb je mov andl leave ret mov push mov sub push pushl lea call mov lea cmp ja mov mov movzwl jmp mov sarl lea push mov and push call pop pop test je mov push mov mov movb pop jmp xor mov movb inc mov push pushl pushl lea push push lea push lea push push call add test jne cmp je mov andl xor jmp movzwl and cmpb je mov andl pop leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl pushl call add pop ret mov push mov mov add pop ret mov push mov sub push push pushl lea call mov mov cmp jae mov cmpl jle lea push push push call mov add jmp mov movzwl and test je mov movzbl jmp cmpb je mov andl mov jmp mov cmpl jle mov sarl lea push mov and push call pop pop test je mov push mov mov movb pop jmp call movl xor mov movb inc mov push pushl lea push push push lea push push pushl lea push call add test je cmp movzbl je movzbl shl or cmpb je mov andl pop pop leave ret mov push mov cmpl jne mov lea cmp ja add pop ret push pushl call pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov or je mov mov mov mov mov lea mov or mov je or je add add cmp jb cmp ja add cmp jb cmp ja add cmp jne sub jne xor cmp je mov jb neg mov pop pop pop leave ret pushl call pop test je call push call push push call add jmp mov push mov push pushl call pushl mov call pop pop mov mov pop pop ret pushl call pop ret int3 mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret mov push mov cmpl push mov jne xor jmp push test jne cmp je call test jne mov test je cmpl je pushl call pop mov jmp push call pop cmp jbe mov cmpb jne push pushl push call add test je add mov test jne xor pop pop pop ret mov lea jmp mov push mov push push mov xor cmp jne call push pop push push push push push mov call add mov jmp mov mov cmp je cmp ja jmp cmp jne cmp je mov push pushl call mov pop cmp je push call inc pop mov cmp je cmp jbe push pop jmp push pushl pushl call add test je push push push push push call add xor pop pop pop pop ret mov push mov push push push xor cmp jne call push pop push push push push push mov call add mov jmp mov mov cmp je mov cmp je pushl call pop mov cmp je push call mov inc push push call add mov cmp jne call movl call mov jmp pushl push push call add test je push push push push push call add mov cmp je mov xor pop pop leave ret push push call xor xor cmp setne cmp jne call movl push push push push push call add xor jmp mov push pushl call pop pop cmp sbb neg je push call pop mov pushl call pop mov movl call mov call ret push call pop ret push push call push call pop xor mov xor mov cmp setne cmp jne call push pop mov push push push push push call add mov jmp mov mov cmp je cmp ja cmp jne cmp jne xor inc jmp xor cmp je cmp je mov pushl call pop mov cmp je push call pop inc mov cmp je cmp jbe movl jmp push pushl pushl call add cmp je push push push push push call add mov movl call mov call ret push call pop ret push push call push call pop xor mov xor mov cmp setne cmp jne call push pop mov push push push push push call add mov jmp mov mov cmp je mov xor cmp setne cmp je pushl call pop mov cmp je push call mov inc push push call add mov cmp jne call movl call mov mov jmp pushl push push call add cmp je push push push push push call add mov cmp je mov mov movl call mov call ret push call pop ret mov push mov sub push push pushl lea call mov mov xor cmp je mov cmp jne call push push push push push movl call add cmp je mov andl xor xor jmp cmp je cmpl jl cmpl jg push mov mov mov mov inc cmpl mov jle lea push movzbl push push call mov add jmp movzbl mov movzwl and cmp jne cmpb mov jne orl jmp cmpb jne mov inc mov mov push pop cmp jne cmpb je movl jmp mov cmp je cmp je movl jmp mov cmp jne cmpb jne mov cmp je cmp jne inc mov inc mov mov mov cltd push mov push push push mov call mov mov mov mov mov mov movzbl movzwl test je movsbl sub jmp test je mov sub cmp movsbl ja sub lea cmp jae mov orl cmp jb ja mov cmp jb mov cmp jne cmp jne xor cmp jb ja cmp jbe orl cmpl jne mov decl test jne xor cmp je mov mov mov mov jmp push pushl pushl push call xor add adc mov mov mov mov incl mov jmp mov mov test jne test jne and je cmp ja jb cmpl ja test jne cmp jb ja cmpl jbe call testb movl je orl orl jmp testb je andl mov jmp orl mov mov pop test je mov mov testb je mov mov neg adc neg mov mov cmpb je mov andl mov mov pop pop leave ret mov push mov xor push pushl pushl pushl cmp jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov cmpl push pushl pushl pushl jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov sub push pushl lea call mov xor cmp jne cmp je mov andl xor jmp cmp jne call push push push push push movl call add cmp je mov andl mov jmp cmp je push mov cmp jbe call push push push push push movl call add jmp mov cmp jne pushl push pushl pushl call add jmp pushl push pushl push pushl push pushl lea push call add cmp jne cmp je mov andl mov jmp add cmp je mov andl pop pop leave ret mov push mov push pushl pushl pushl call add pop ret mov push mov push push push push xor push mov mov mov cmp je mov push push push push push push push push call mov cmp je push push call pop pop mov cmp je push push pushl push push pushl push push call test je lea push push call pop pop test jge cmp je pushl call pop mov add mov cmp jne xor pop pop pop leave ret or jmp pushl call pop jmp mov push mov push andl push lea push pushl pushl call mov add test jne cmp je call test je call mov mov mov pop leave ret mov push mov xor cmp jbe mov cmpb je inc inc cmp jb pop ret mov push mov mov jmp dec cmpb je inc test jne dec mov sub dec pop ret mov push mov sub mov xor mov mov push push push xor mov mov mov mov cmp jne push mov push push push push push call test je movl jmp call cmp jne movl cmp jle pushl mov call pop mov mov cmp jle mov push call mov pop mov jmp cmpl jge xor jmp cmp jl mov cmp je cmp je xor inc cmp jne mov cmp jne mov mov mov cmp je cmp jne cmp jne push pop jmp cmp jg cmp jle push jmp lea push pushl call test je cmp jle cmpl jb cmpb lea je mov test je mov cmp jb cmp jbe inc inc cmpb jne jmp cmp jle cmpl jae xor inc jmp cmpb lea je mov test je mov mov cmp jb cmp jbe inc inc cmpb jne jmp mov push push pushl push push pushl call mov mov cmp je mov test jle push xor pop div cmp jb lea cmp ja call mov test je movl jmp push call pop test je movl add mov jmp andl cmpl je push pushl pushl pushl push pushl call test je push push pushl pushl push pushl call mov test je jle push xor pop div cmp jb lea cmp ja call mov test je movl add jmp push call pop test je movl add mov jmp xor test je push push pushl pushl push pushl call test je push push pushl pushl pushl pushl call mov push call pop pushl call mov pop jmp xor xor cmp jne mov mov mov cmp jne mov mov mov pushl call mov pop cmp je cmp je push push lea push pushl push pushl call mov add test je push push lea push pushl push pushl call mov add test jne push call pop jmp mov mov pushl pushl pushl pushl pushl pushl call mov test je push call push call pop pop mov lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl mov pushl lea pushl pushl pushl pushl call add cmpb je mov andl leave ret mov push mov sub push pushl lea call mov xor cmp jne cmp je mov andl xor jmp cmp jne call push push push push push movl call add cmp je mov andl mov jmp cmp je push mov cmp jbe call push push push push push movl call add jmp mov mov cmp jne lea push push pushl pushl call add jmp pushl lea push pushl push pushl push push push call add cmp jne call movl cmp je mov andl mov jmp add cmp je mov andl pop pop leave ret mov push mov cmpl jne pop jmp push pushl pushl pushl call add pop ret mov push mov push mov jmp push push pushl call add test jne mov mov cmp je test je add mov test jne mov sub sar neg pop pop ret mov sub sar jmp mov push mov push push mov xor mov test je cmp je add inc cmpl jne push inc push push call mov pop pop mov test jne push call jmp push call mov add add pop mov test jne and mov pop pop leave ret mov push mov sub mov push xor mov cmp jne call push push push push push movl call add or jmp push mov push mov cmp je push push call mov pop pop mov cmp je cmp je xor cmp sete mov mov cmp jne call mov cmp jne cmp je cmp je call test je call movl or pop pop pop leave ret cmp jne push call pop mov cmp je mov cmp jne push call pop mov cmp je mov mov mov cmp je sub pushl call mov cmp pop jl cmp je lea pushl call pop cmp jne mov mov mov mov jmp mov mov mov inc lea cmp jne cmp jae push push pushl call add cmp je jmp cmp jne cmp jge neg lea cmp jl cmp jae push push pushl call add cmp je mov lea mov mov mov mov mov cmp je mov push push call inc pop inc push call mov pop pop cmp je push push call inc pop inc push push call add test je push push push push push call add mov mov sub add mov inc neg sbb not and push push call test jne orl call movl push call pop cmp je pushl call mov pop mov mov jmp pushl call mov pop mov xor jmp mov push mov push xor cmp jne xor jmp push push pushl call mov inc push call mov pop pop cmp je pushl push push call add test je push push push push push call add mov jmp xor pop pop pop pop ret mov push mov sub push pushl lea call mov xor cmp jne call push push push push push movl call add cmp je mov andl xor jmp push mov cmp jne pushl push call pop pop jmp movzbl testb je inc mov cmp je movzwl movzbl shl or cmp jne dec jmp movzwl cmp je inc movzbw movzwl cmp jne movzwl cmp jne cmp je mov andl jmp cmp je mov andl xor pop pop leave ret mov push mov push pushl pushl call add pop ret int3 int3 int3 int3 int3 lea pop ret lea lea xor mov push mov shl mov test je mov add cmp je test je test jne or push mov shl push or mov mov mov mov xor add add xor xor xor xor add and jne and je and jne and jne pop pop pop xor ret mov cmp je test je cmp je test je shr cmp je test je cmp je test je jmp pop pop lea pop ret lea pop pop pop ret lea pop pop pop ret lea pop pop pop ret jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp movl mov jmp lock inc add add add aas inc push bound pop popa insb insb outsl arpl je inc inc add inc add add add aas inc push gs gs imul inc inc add add add inc mov and inc add inc add add add add add add add add add add add add add add sbb add add add add add add add add add add add or add or add or add or add or add pop add add add add add add add push add add add add add add add add add add add add add add add add add add add add add add add add add or add add add add add adc add push add add add add add add add add add or add insb add add add add add add add sbb add jb add or add push add add add add add add add add add add add add add xchg add add add add add add add add add cmpsl add add add add add add add add add add add add add add pop add or add or add or add (bad) mov add add add mov add add add adc add add add add add add add add add (bad) (bad) incl add add mov inc add add add aas inc push bound pop arpl je jae fs inc add add inc add add add aas inc push bound pop je jo imul add add add inc add add add aas inc push pop pop outsb outsl outsb pop jb je pop outsl bound arpl je inc inc add mov inc add add add aas inc push je jo pop imul addl add add add add add add add add add add test add add add add add add add add inc add add add cmpsl inc add add add cmpsb inc add add add add test add dec cmpsb inc add add add inc add add in movsl inc add add add movsl inc add add add inc add add add movsl inc add add add movsb inc add add add add add add je inc add add mov add pusha mov add push mov add pop add add add or add (bad) (bad) (bad) (bad) (bad) (bad) (bad) call add adc adc adc adc adc adc adc adc adc adc adc adc adc add add add and and and and and and and and and and and and and add arpl addr16 insl outsb outsl jo jb je jbe js jp add add add inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop add adc adc adc adc adc adc adc adc adc adc adc adc adc add add add and and and and and and and and and and and and and add arpl addr16 insl outsb outsl jo jb je jbe js jp add add add inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop add in add add movsb add add jns and add add add cmpsb fild add add add add add add add cmp add add mov add cmp add inc incb add add add mov add cmp add inc incb add add add mov in call add add add add mov add add push ficompl and pop fisubrl xor adc add xor incb add add inc add (bad) (bad) incl add add add add add or inc add jmp add jmp add jmp add jmp add add add add add out inc add lods inc add mov add inc add jmp add add add jmp add in add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add lock add and inc add inc add add inc add add inc add inc add mov add mov add mov add inc add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add inc add mov add mov add mov add mov add add inc add add inc add add inc add inc add mov add add add add add add add inc add add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add jg jg jg cmp inc add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add icebp (bad) incl add add push add push add out inc add (bad) (bad) incl add add add add (bad) (bad) incl add add add add (bad) (bad) lcall add add add add add js add xchg add add add add add add add add add add add insl add add (bad) (bad) lcall add add add add add ja add xchg add add add repnz add add add add add add insb add add insl jo jno je je add cs popa jb add cs popa jb add cs popa jb add cs popa jb add fs popa jb arpl popa jb add cs popa jb add cs popa jb add cs popa jb add fs popa jb add add add add adc rolb inc add add rorb addb add or push add pop add push inc xor mov add pop add or add adc xchg add daa add inc push add shrb orb add sbb aam (bad) aaa add push inc je mov add pop sarb add inc test and adc rolb adc add add rorb adc movsb add or push add push inc mov mov add pop add sbb push xor add sbb push mov add sbb in xor add push (bad) ja rcrb hlt pop mov add xadd add inc add xor adc rolb or rorb or dec add xchg add es xor mov add lahf add or push add sub or shrb or pop add push (bad) mov shrb je mov add pop sarb or bound adc rol inc xor or add ror xorb or sbb xlat push (bad) ss mov mov add fild add inc pop adc ror and or shl and inc push push xorb pusha in pop push add enter add pusha jnp loopne and pop fmuls add (bad) adc or inc inc add xor add xor sbb xorb rorb or shlb orl inc (bad) push adc loope or (bad) sbb or arpl js add adc mov mov ret xorb mov fcomps cmp rorb ja or repnz mov mov (bad) dec adc inc sub pusha dec inc pop or (bad) sbb and bound and or nop popf add daa cmpl add or push ret nop movsl add add adc test inc push and cwtl push add pop pop and mov mov test loopne or push (bad) mov mov or xor int3 push jo add or inc fmull mov sub mov inc in xor ja rcrb pop mov add or pusha inc mov adc sbb add push addb sbb add or pusha ret xchg xor mov fadds adcl sarb add mov sub sbbl add das add xor add push loopne add inc inc jp loopne push inc or or adc add lret or or adc xchg push add mov inc popf or addr16 adc xchg sbb adc xor xchg xor cmpsl add add lock lods xor inc ret pop sbb fadds or inc (bad) inc sbb push fdivl add rorb dec pop rcr call clc outsb ret js rcr add aaa loope push or test loop adc rol sub rcll mov inc lret push pusha and lcall xorb shr mov adc lods or popa xlat push shrb xchg or push pop fs mov rclb mov shrb push lock inc jl add pusha or pop add push adc add movaps xchg push jo pop mov push jp mov mov mov and test ds cld pop lock pop fcompl orl cmp enter push jo add add pop pop inc jle aam rolb cmp mov andb or adc (bad) rolb add test add adc addl sbb add or or pop add sbb les pusha xor test subb sbb clc inc and add adc and orb inc add push or test mov add or add sbb or inc bound test inc (bad) sbb or or adc mov nop aaa mov rcrl js ret bound mov add inc (bad) sbb inc sbb mov loopne test aas or dec les popa adc adc test add sub mov or mov mov adc add add push mov pusha (bad) les rclb mov cwtl mov mov inc (bad) cmp mov cld sbb aas or nop add or and adc xor or and or nop mov jnp test (bad) mov shll jo loop pop add sahf add cmp or addb mov rcl and subb pusha push pop pusha jg test and adcb adc xor dec bound push les push mov inc lock adc lock cmp sub add mov orb add and and add adc add xor xchg or xchg adc adc test and push or (bad) mov (bad) xor jo and inc mov mov inc (bad) daa add xchg mov pop inc mov or popf inc outsb daa pusha cmp test (bad) ja call add or add sahf orl and inc mov fcomps ds adc push pop dec shrl icebp push test cmp das adc mov inc test adc xor sub or adc mov push add push ret adcb push bound or mov cmp push call mov (bad) clc push mov add or add mov or rolb mov dec add icebp sets scas pop inc cli andl adc ret push adc cmpsb rol and adc mov add sub jne js pusha push pop pusha jg add js adcb adc mov rolb pop add or sbb and in add movsl adc and add add or bound xor add push loopne add stos add roll arpl sbb add dec rorb adc cs daa xchg mov inc test push sub rolb pop sbb iret mov and adc or xor mov test rcr lock push mov mov inc pop add push and inc adc xor lock inc dec or inc mov push loop adc jno or push xchg (bad) sbb and push or dec or popa xor mov pop sub pop mov pop ret orb or push or adc movl and inc cmp sub pop mov pop and mov xor loopne push jo lds adc (bad) push cwtl pop add sub pop shrl add rcrb push loopne add pop xchg dec xchg pop mov ret ljmp and mov add cs mov sbb jb adc ret cmp add pop mov mov or loopne add (bad) jae dec pop loop add pusha or pop pop push addb jno add sbb xor and nop pop jo (bad) mov add push and add sbbb pop mov inc enter subl jo ret xor add addr16 and mov bound sbb call rclb add mov xor outsl or imul sbb mov add inc dec pop sarl push jle call icebp adc clc pop jecxz sbb and adc nop inc add adc sub adc bound mov pusha xchg or popa inc or adc push or ljmp inc push inc or push orl orl or pop or push inc mov rol inc outsb sbb pop and xorb bound dec popa bound sbb loopne subl arpl or adc jnp mov rorl sbb xor (bad) push add sbb loopne adc sar inc arpl push add mov arpl call lock jl add adc enter adc inc andb xor add or push jo add fs add cmove xor or adc adc and add lret add inc add push push adc add mov xor sub ss fmuls and or int3 (bad) push mov jns loopne cmp loopne mov adc sbbl xor jecxz add and adc mov bound sbb iret inc push xor lahf mov rolb push push pop lea inc inc adc add inc push mov add lea sub mov mov popa fldl sub pop addl ret mov mov mov nop cmp les js and dec subl dec sbb (bad) cwtl or cmpsb addl dec sbb push mov dec push jnp test sub loopne lea orb push mov sbbb add or pusha add sbb add lea inc adc test mov adc mov sbb out jno mov rcrb pop add push add rcrb or addb cltd push into add lret xor dec sbb inc pushf add test dec and push mov mov or add test push add orl adc add inc (bad) pop sbb mov jne mov inc inc pop mov xor adc inc cld adc cmp inc fiadd outsb aaa xchg pushf add inc mov inc test mov add pusha and xchg or adc or add sbb aas (bad) hlt mov movl adcb push mov and add loopne xchg push mov add sbb push pop mov sub (bad) or adc sbb arpl adc jno jb cwtl xchg pop sbb shrl repz jge clc or bound (bad) mov lock and test add jno adc rolb inc xchg adcb mov pusha push pop pusha cmp sbbb sbb add sbb roll or add clc sbb in or push leave sbbb add rclb rolb xor rorb or mov orl sbb add push xor dec or ret loope add (bad) push sub add orl das popa ss dec ret pop out fidivr nop xlat add xor fldl xor inc int aam loopne add dec inc clc sbb mov roll adc cs jo xchg ror pop sbb sbbl or inc mov xchg and mov inc push cmp test pop pusha xchg or push bound sbb cmp inc aam and dec cmp sbb sbb sub (bad) lret (bad) les adc add sub movsb cmp mov push mov (bad) jb roll pop ret clc pop pop insb push xor test mov jb mov add sarb rol addl jb mov and adcl or jge ljmp xor push cmp add (bad) xor xor add add add pop rolb insb add in push add inc mov or add test ret adc xorl inc lock enter mov pop mov push adc add and add add and adc (bad) aaa add stos add loope add add sbb subl mov add adc mov add xchg push and xchg push repnz (bad) xor lods jns insl add (bad) pop cmp mov push js (bad) cmp push lcall rorb xchg xor lock ret adc cmovl mov test inc pop sbb add cmc test or mov loopne add and add adc xor cmc (bad) jle xor mov pusha xchg sbb and out mov adc xchg add (bad) mov addl or and adc sub or test loop adc ja jb mov add push adcb push add inc sbb testl (bad) js loopne sbb and xchg das popa cmc or clc test and jo fs sbb rolb add adc rolb inc xchg adcb repnz psubsb xchg push loope shld pop js xchg lgdtl pop jge out add sti les les pusha cmc adc arpl (bad) sbb add enter adc aas push addb add or bound and sbb xorb rorb in add sti (bad) loopne inc inc add icebp rorb or dec or inc stos add or or inc cmp adc vpperm call or add aas rcrl pop and movsb pop lock faddl icebp xchg mov decl leave add add cmp sbb bound nop and and and add mov cmpb add jp sarb pushf addl (bad) or rol and addb push add and dec add adc js add xor in mov add sub jno pop pop inc mov sbbl cmp and mov loopne or push inc jl roll pop rcrl pop dec cmp lock jl popa loopne and or and adc or inc bound xchg xor mov mov or push jge push inc sarb push loopne or pop and rorb push add inc add call push pop rolb cmp mov add add adc add popa adc push sarb icebp mov js add add push cmp addl pop add sbb add push inc push add and adc rcll adc inc pop or (bad) sbb adc orl jb or sbb pop cmp and or inc ret clc push add clc int3 xchg inc lcall orb inc add adc inc mov cld inc mov (bad) fmull in or das sarl or (bad) jb xor adc pop rolb adc and inc mov dec and ret fsubs push daa enter es adc mov dec cmp push add push subl pop sbbl lock sbbb loope pop nop inc les mov add push jns inc mov xor push or aad lods pop inc cli test dec movsb push or adc push push adc add add jo (bad) inc or popa sub adc shrl push or cmp pusha or dec mov lods add xchg pop xchg add push inc ds mov and pop mov rclb sbbb push ret mov add or add and and adc fs into sbb add mov sbbb or or popa pop inc xor mov fs add sbb mov int3 pop les add inc fidiv rcrb test popa scas or xor xor mov je and add sbb in or dec add or xchg adc lock rorl nop inc adc inc sbb or mov es xchg push mov and sbb cmp inc (bad) and mov sbb sub add inc mov add mov pusha nop jo loope or sbb out inc mov nop sbb test sub adc push push sbb adc popl and push (bad) adc cmc mov add js pop push pop and push push mov shrl dec mov fdivrs rolb jae xchg add rcl and sbb mov loop xchg add mov inc cmp sbb and pop test adc inc arpl cld dec push xchg add or outsb add mov andl push xor sub dec add inc sbb and rol and xchg mov xorb and xrelease mov adc popa scas and sbb pop or dec bound insl xor sarb clc dec add mov push jg adc das add and or (bad) sub mov or xor xor sbb or add outsl mov add and add adc pop adc dec or xchg movsb xchg sbb dec jb adc add add or nop insb sub fldl sbb sub add test pusha and pop ret mov xchg sbb or or ret xchg sub mov cmp xorl or dec mov rol pusha rcll push bswap cmp enter add shl pop add or pusha add pop pusha stc inc and push or or xchg dec pop inc xchg push cmpb pop sbb cmp mov xor inc mov rorb dec add adc add mov pop or add sbb fadds loopne add ja add mov mov loopne adcl fildl xor mov rorl sbb pop adc push pusha addr16 sbb xchg fcoml inc ret pop sbb pop or fs dec inc clc sbb sarb fiadd outsb or inc test das add push pop mov cmp and or mov fs and jno mov mov inc mov lock or add addb add xor (bad) mov or xorl and jle loop test fisttp add ret inc lock movsb (bad) mov lds sbb loopne es xor or gs xor pop les in mov or dec sbb shll mov bound bswap cmp enter adcb mov sbbb or arpl or adc xchg push shlb pop or pop add sbb add jo cmp and and and push or add add push or or push mov je mov inc (bad) xor rorl test add or mov adc push sbbb faddl icebp xchg mov stos add (bad) outsl adc mov test inc outsb pop xchg add lock test cld inc mov mov loope daa add add and in xchg add add jo add inc mov and rcrb and (bad) insb sub dec mov adc aam add ret inc push mov inc and cmpsb or inc add mov mov inc jo mov out (bad) in inc pop daa sub popa test pusha and pop ret rorb mov and xchg dec jb add inc int or push push cmp inc repnz ljmp popa jle popa cmp sbb add cmpsl add and add dec and pop inc cmp lock inc into pop loope add adcl dec adc bound lock push jnp fcompl test stc mov add sub push xor and and add jo xchg dec or adc test or adc push das add cmp push xor aam add daa mov mov add andl add sbb rcr in push test call ror add mov sbb mov xchg cmp or inc adc rolb lahf mov ret xchg jg pop pop mov leave (bad) sbb adc xor pusha sub test inc andb dec inc addb jo or or orl adc sub pop xchg xchg pop loopne or js mov inc mov test cmp xchg pushf mov inc andl push mov inc in mov xchg movsb ljmp rol xchg mov cmp adc add or call push pop rolb mov ret cwtl cmp sub push inc add test clc addb jno add mov or cwtl add or bound and sbb add adc push pusha and sub popa xchg sbb inc int3 add lret adc or dec adc stos inc adc or add test orl and adc inc add push icebp xchg xchg fs insb inc pusha das mov mov mov dec inc je mov add and inc add outsb mov pop sarb push jo loope adc and push rclb ret and or (bad) sub push and (bad) inc movsb inc and icebp aas inc push adc popa (bad) push adc inc push sub jmp lahf sub je or sbb or push test jno pop pop adc mov gs add inc bound mov rorb in test mov push or addr16 and (bad) push inc bound adc xchg push jb test sbb dec es sub mov enter sub mov arpl test add push loopne adc ds mov adc (bad) push add adc ret cmp or and cld add add xor jb adc test inc sub rorb cmc add or add adc inc cmp sub test or aam inc add or rcrb pop add or and sub xor push push dec rorb mov test or xorb inc add inc sub add dec inc pop sbb cmp xchg lds sbb adc or loopne inc jp rolb lock rolb and and xchg inc adc cmp rclb and mov sbbl jnp rcll mov xchg or cmp ret lods or jecxz sub sub (bad) mov ret js mov adc sub sub pop mov cmp add or push xchg arpl and repnz test pusha movsb rcll in and push push test aad mov lods pop xor cmc sub ss pop bound sub lret add jno nop sbb out push push (bad) inc add sbb add adc mov pop hlt test in sub popa sub je add jno ret js or lods add or add or pop mov lret pusha lret stos adcl adcl lret adc xor je add inc adc das mov add test adc loopne mov imul jl bound inc adc pop xchg pop mov or dec inc clc sbb sarb dec roll nop xchg xchg pop mov jo dec push addl add adc push js subl jo gs sub testb and inc adc xchg sbb sub popa dec add or inc nop push fdivs jb mov cmpb adc sub mov and mov and int3 sub mov adc popa out mov nop cmc lea fs fcoms mov mov clc xor stc mov scas and test (bad) (bad) pop bound push sub cmp enter adc sbb push or xor jl nop scas and andl and xor nop or insb adc add jle cmp call jno adcl gs push mov rorb adc xor nop sub push or sub rolb mov and mov and mov add dec cli push loopne xchg pusha imul pop xor mov jo inc outsb push mov add sub pusha lret or (bad) and adc inc cld sub aas xchg or pusha sbbl pop popa jmp sbb loopne les loopne mov inc in pop clc and cmp les cmp ret dec and js ret test popa lret add aas mov sbb pop test adc jle rcll sub inc add add or adc sbb aam add sub lea (bad) mov (bad) mov jno leave cs mov loop push call mov add add sub push nop sbb pop or and fmull push icebp xor and ror xchg push mov inc sub mov out jb adc sbb mov and inc negb push outsl andl jg mov or pop sbb add cs add sbb (bad) rcl rorb pusha mov sahf sub push nop xchg rcrb and and add mov cmpb push add and add or or and mov dec loopne or add xor sahf sub xor roll mov repz push xor outsl or pop nop lea test loope sub push pop dec loope xchg push mov xor or inc add or dec dec adc mov loopne or pop movsb pop adc adc inc mov mov inc inc (bad) adc add dec xor dec or inc inc xchg add aas mov lock xchg fcoms (bad) sub pop xchg fldl dec inc inc mov or (bad) push mov add push push push les rclb cmp sub pop (bad) call shrl adc pop rol adcb pop add les adc jo xor ret jno js push vmread jo popa jno mov mov xchg pusha mov inc or int3 jno jno fdivrs ljmp ret stc inc ret add lock cmp enter add sbb je mov dec nop test lock add or shrb jo shlb sbb in add adc add inc add ret cs adc or adc test or adc add xchg ljmp and stos xchg pop mov outsb add dec dec dec mov loope or pop (bad) in mov mov imul and add and jl shrb aas add and insb mov lods inc mov dec nop pop inc inc mov adc mov xchg xor sahf push sub sub sbb dec lea and jbe addl das add subl mov add mov push movsl (bad) mov and lret enter (bad) in inc mov jl shrb mov cmp sbb enter enter les pop jp cs jb lea inc xchg push loopne les cmpb dec mov das popa cmc push stc jp cld pop popa jo add loope sbb jle (bad) push inc add pop imul add lock addb adc les andl inc addb pusha add nop push addl adc xchg sbb add push add loope mov and inc sbb xchg cmp ljmp jecxz sbb or pop nop (bad) adc and or pop mov xorl xchg insb dec test cli pop loop pop cld rolb and or pop rcr lock add addb jo in and adc push ret lods inc mov addl and bound xchg or dec sbb adc and push sbb inc or or adc dec add pusha ret sub loopne add adc pop rol jo lds int3 sub loop mov and push xor add or out xor popa outsb push pusha popf adc popa pop dec fsubl cwtl mov sub push shrb das loope xor jecxz add push xor clc popa cmp js and lock test cmpl xorb shrb sbb pop or add flds xchg call cwtl inc inc sbb and pop push test add sbb popa mov pop inc mov or push fiaddl loopne mov dec xchg xor mov mov jo add mov jbe fsubrs inc pop nop cmp mov cli pop loope cwtl nop jae jg sbb mov jno mov xchg (bad) and dec sbb inc (bad) adc xchg sbb inc cwtl pushf inc and sahf or add lds movb addl lds and orl xchg test pushf pop ret aam data16 push loopne test rcrl das cmpl pop loop or (bad) cmp loopne xchg les cwtl js outsb cmp adc xor adc xchg cltd fs inc sbb xor loop mov mov lds leave dec inc xor cwtl call mov cld pop repz pop fadd cmp pop cmpl or xorb enter leave nop test loopne pusha cmc adc fs adc xor mov add and in add adc sub rcll add or inc pop adc inc inc add lret add add mov adc cltd cmp aaa mov add add mov mov flds inc adc cmp add mov add pop loopne xchg enter adc xchg dec xchg sbb cmp adc jb and rcll add mov sub es push dec xor les push sbb xchg or sbb adc and out sbb cs add pop add adc mov ret push inc bound dec lret adc out or push xchg bound xor cltd pusha lret and (bad) xor inc sbb mov push mov push pop or icebp dec xchg sbb add cwtl dec aam nop mov bswap cmp push push popa jb adc xchg ds popf xor xchg dec lock shrb push adc add push mov test push xor xchg or xchg add dec into sub sub add mov add stc xchg add pop inc aaa add lcall sub inc sbb sbb pop or mov dec or adc or mov hlt dec add push sbb pop test lock adc xchg inc inc cmp in add lds loope test push jg cmp inc xchg xor add xor xchg call cwtl mov cwtl test xchg add mov adc mov xchg adc push mov mov xchg add xor pop popa pop sub popf add sbb iret or (bad) cmp test mov jo (bad) mov mov xchg sbb mov arpl dec sbb xor mov add jp dec aam mov mov movsl enter xchg arpl test icebp sahf sarl adc add xor repz jge in sbb lahf mov push inc and adc mov add add sbbb sbb sbb xor and sub mov ret add mov adcb adc inc sbb add or cmpb inc (bad) dec or jno lcall push shrb cld xchg movsb and or das mov sbb scas add mov test xor xor ret adc add mov xchg in xchg test (bad) push rolb mov icebp movsb dec xchg sbb dec add adc sub pop movsb ret inc dec mov cmpsb outsl xor addl pusha test cs daa adc in add addr16 (bad) in inc mov shlb add push adcb imul pop int3 pop dec push dec mov mov cmpsb (bad) js ret dec subl ja popa cmpsl lea or mov pop sub test inc pop (bad) in pusha aam adc arpl test xor addr16 sbb cmp sbb rolb mov add popa pop mov and inc and pop shrl add push mov leave scas adc (bad) sbb rolb adc adcl lret adc push xchg and or push les add or jae add inc push imul pop in and imul fdivl pop lea (bad) inc add mov imul adc or push faddl enter inc add push call loope mov pop loop cwtl nop psraw dec mov or sahf inc dec or xchg pusha je mov and xor lock mov les pop (bad) nop fadds aad mov push jmp xor mov dec or pop nop push mov mov and fsubrs inc mov cmp (bad) cs mov adc xchg arpl sub rcl or mov push pop pop inc xor xchg test int3 imul mov fidivl pop bound dec and or (bad) loopne sbb (bad) inc add mov sar nop insb xchg or push arpl adc lock mov addb (bad) mov add sub orb adc add xor add stos add or xchg rcll inc and es sbb pop add dec mov les push push xor outsl sbb inc pop inc adc movsb mov and add push gs rorl mov and lods adc xor push adc add rorb dec pop rcr lock xor mov pusha and add mov sbb mov dec inc rclb ret adc and sahf or mov inc jb dec or ds addr16 mov js icebp inc sbb adc xor or sbb inc cmpsl sbb insl xor adc mov sbbl lret push call loopne xchg and push push loope xchg test add jo or or movups stos inc and mov mov sub pop or adc sbb push mov mov fsts cld pop repnz pop fcomps adc dec jl adc push or pusha push sbb cmpsb sbb fdivrs mov lea or fwait js loope aaa add push add pop add pop and push adc es sub or add (bad) xor mov inc ror (bad) stos fwait test sbb pop cmp inc xlat or push jecxz sbb mov je sub scas mov outsb push stos add and and je ret hlt int jle pop orb mov cld sbb mov sbb jecxz cwtl fsub leave adc add data16 mov and int adc push jo dec sub mov push push or adc push les rcrl test es call loopne xchg and fcoms jl add js rcrl sbb fcoms jb xchg adc data16 sbb imul pop or or fs in adc adc pusha mov sbb movl (bad) pop arpl enter or mov sbb mov add adc rolb nop add sbb int3 inc or rorb repz dec fild int outsl lock test add cmp addb leave or mov mov addl add andb sbb push loopne or push cmpb add or push cmp add daa adc or or inc inc aam pusha sub fadds pop and iret or and rol and push or pop ret jo aaa push test inc stc or jo xchg rorb or ds mov mov mov scas inc inc sub vcomiss ret int3 add mov mov inc sbbb add loop mov sbb xor cwtl cmp mov pop lds or mov loope sbb add adc andb inc loop mov addl or sbb pusha loop or enter cmp xor cs mov jo rol call add add sub movl adc push test inc es movsb sbb jecxz fmull nop les sbb sbb jno fld ret xorl pop add movsb pop adc ror xor inc add add (bad) mov push std aaa clc pop addb jbe or cmp add dec out and and inc inc push dec adc adc add jo add jle add (bad) add and sbb mov add add or inc sbb subb inc xor enter ret push xchg or xor repz or push mov xchg fsub add and xchg jge aam inc mov insb add xor xchg pushf mov fsubrs cmp cmp inc bnd and sub test loopne inc cld sub mov addb inc jl add xchg jo ret mov and add add and jbe mov add test cmp ret push xchg add adc iret adc mov jb jmp mov dec inc (bad) aaa pushf (bad) out inc adc xchg orl push loope push shrb sub stos xchg mov mov mov sbb cmp shrb pushf rolb adcl nop jecxz jb mov data16 sbb mov negb push and flds rcrb in push and shl addb cmp or mov or mov gs cs fiaddl push push or call mov mov inc cmp test mov sbb inc sbb subb movsb inc mov inc push jb xchg or xor inc cmp dec xchg je mov cmp mov icebp int3 adc and and adc pop push cmp xchg add sbb or addr16 sub lret sub fwait pushf push leave arpl cmp inc stos adc lea mov mov ret or mov dec mov jno xchg mov mov loope pushf fsubr xchg push js push mov in inc pop sub ret mov inc push add fadds cli push loopne adc pop push sub sbb les inc xor mov add sbbb or (bad) adc shrb add pop add pop inc ret sbb adc push repnz mov mov inc add adc and ror enter xchg loop add and pop (bad) in cmp mov or and push sbb add or jo lcall add jno nop add rcl and xchg insb add in pop jno push (bad) xor inc or cmp dec pop xor invd add ljmp jo sbb add addl add imul subb inc add sbb fadds loopne add adc xchg dec or addl mov popa or mov roll insb gs pop rclb sbb subb mov nop inc mov push adc repnz into ficomp sarl andb rorl popf les pushf (bad) call int3 (bad) sub and addb pop add out andl fs rclb cmp xchg rcrl sub ffree and ret mov sub xchg or cltd (bad) push pop mov into sub nop jmp subl ljmp add inc inc adc mov mov out subb jo xchg popa push push call mov add cmp xor sbb roll sub fimul dec sbb and lock orl xor lock mov fdivrs (bad) arpl daa adc loopne push pop xorb pop and addb xor add dec and pop inc xchg adc mov mov add cmp ret add dec mov repnz mov clc mov adc aam and adc ds or add test adc aam loope add andb sbb int3 push (bad) aaa add (bad) addb stos orb adc pushf add test dec or add roll push lock push xor inc xchg rcr sarl sbb daa and mov and inc outsb daa inc nop add icebp inc mov sub inc adc mov loop dec or inc (bad) dec inc mov add or (bad) sub add sbb and ret add and out pop inc add sbb or push add add sub (bad) mov push push rcrl movl cmp ja jb mov (bad) clc pop add or jo (bad) xor inc xchg adc xor sbb sbb xchg cmp inc push pop inc mov mov jecxz sub xor mov cmp and or jge and sar sahf dec sbb subl sub add mov push xor or (bad) in sub add add pop in sbb add add jbe hlt repnz sarl inc xchg mov js add adc in inc jae mov mov pushf mov aaa add dec add (bad) xor nop or push pusha sbb adc (bad) mov leave sbbl adc xor xchg push sbbl add xchg push xor xchg add sbb or push xor stc or pop xor mov test add loopne push adc and cmp inc clc sbb loopne or dec xor in add lret inc push sub cltd mov daa inc ds mov or adc inc add jns mov (bad) add adc jb and fs adc mov xchg jns push (bad) mov shrb stos xchg mov mov inc andl push add cmp bound es into subl ud2 mov and addr16 pop (bad) es push mov jle stc popl mov dec lock mov movb jae adc rolb inc cmp and imul xor popl add popf movsb imul add xchg dec inc inc xchg roll or add add sbb add inc dec add add add nop push orl adc push xchg or add shrb add sbb add inc (bad) mov js (bad) cld je aaa subl xor sbb jns xor call loope mov outsb mov add adc add mov jns fxch mov pop sarb hlt and mov jo xchg jg adc loopne add and or mov xor push pop (bad) sub js add push lods sub lods or lea lods and or jne fistl sub (bad) mov (bad) mov orb adc jno mov rcrb sub fiadd or out test cmp ficomp push imul mov sub dec bound stos add or pop cmpl inc (bad) push inc add adc rolb inc jle adc mov pop hlt sbb and or xor push (bad) and adc pop imul add push pusha xor jo nop push cmp pusha inc add addl das adc or inc inc test push sub add xchg adc add lods leave in jnp xor scas cmp push mov mov imul adc and loope inc js rclb cmp loopne inc jb and add call in in cmc inc mov dec iret add rcll xor dec add shl mov ffreep jbe addl or lea push sub (bad) (bad) insb sub cmp or add inc loopne sahf in pop xorb adc pop inc mov jp loope add wbinvd xchg iret js push imul sbb cmp js mov cwtl sub jl sbb jecxz test movsl inc push (bad) ss (bad) add or sbb loopne sbb pop adc (bad) push inc add add add cltd mov add cld add ret push inc clc and test sub (bad) clc pusha pop adc arpl in add jl aam cmpsl and inc mov pop adc add add sbbb sbb int3 push (bad) aaa add in adc xor nopl or cltd adcb add add push jecxz push mov rol nop xor mov (bad) pop lock shlb jo add and xchg loopne daa enter inc cmp mov pop and inc xor inc sub test inc pop mov test pop cmp dec or mov ret jno repnz (bad) sbb and and and lret add dec shrl loopne mov loop or nop pushf sbb jnp popf add adc or push pop push sub int adc (bad) mov jne test or mov add pushf sbb pop test mov rcrb cmp int clc xor xchg add add sbb int3 cmpsb jl dec sbbl or inc out and mov mov xorl xor mulb notb push repz add andl lock add jbe cmp rclb xorl fs roll clc shld add hlt add (bad) ds addl sub bound and adc (bad) aaa add push inc in add and or andl adc jo xchg or inc cmpsb add loopne (bad) or push (bad) sbb loop addl mov out add ret lock pusha mov pop fsubrs in test mov dec or xchg mov add mov xchg adc (bad) add and add push out add inc rol call mov (bad) xor and cli jb out add ss and sbb aas add into bound mov jnp cwtl sub jle gs adc clc les inc pop xchg mov mov cmp loope adc pop les mov xchg sbb xor insb pop xchg sbb and xchg repz mov inc pop pop sbb mov xor mov jle imul mov jno pop fmuls fsubrl nop aaa leave movsb jle roll fdivrs add rolb xchg add inc enter add lock pmaxub jns les push sbb fadds adc xchg les movsb aas xchg fcmove out mov andb inc mov pop shlb add sbbb sbb int3 pop and push es mov sbb rcll adc adcb inc (bad) in jl sub (bad) stc push xor or push xor mull xchg pop loopne add fmull dec loope or incl adc int clc jg pop test dec ret int3 add cmp call call push xchg (bad) dec addr16 or dec and xchg test lock pusha adc mov cmp sbbl lahf (bad) xor js add cwtl mov add or or inc and inc pusha adc cmpsb (bad) mov rorl clc enter out (bad) in inc mov mov xor in push add and or lds push mov arpl and inc xchg push jb cmpl out inc inc ret ret and adc and pop and add ljmp inc sti or xor fild test push lock cmp add rolb mov or sub add xchg ljmp (bad) ja inc aas mov rolb mov sbb add aam rorl and adcb dec mov inc int3 shrb pop or pop add sbb add mov mov nop push add or (bad) add dec and add sbb lret jnp xor inc mov addl add or (bad) fcoml add and add mov sub inc mov lock adc clc dec roll adc loopne fs sbb add inc xchg pusha pusha add add and sub inc sbb mov lds push adc fisttp test inc add mov add and sbb add aad add test pusha push or xchg ret pop push inc pop cmp cwtl lods inc popa fisttpl mov mov add inc leave sbb addb inc and sbb lea js loope sbb mov cmp mov or test popa movl dec pop popa es dec roll sbb mov insb scas orl push inc jno adc ret cmp add and add dec rolb add (bad) add push xor (bad) testl psraw mov or pop add sbb add nop and adc adc js bound scas and int push mov ret rorl pop or push in lock inc ret xor test ret adc jns push dec or rcrl cmpps or xchg nop xor jo push or (bad) and inc movsb add mov js dec push pushf in sub pop fild sbb scas sbb add push or or ljmp imul push or jne fildl or and add add and and adcb loope or xor push and adc sbb push mov mov or icebp test repz pusha cli test ds xchg mov ret jle push push mov add dec and pop inc or movsb (bad) pusha jne insb xchg sub jb iret inc inc xor sbb adc and mov bound test inc sbb adc test mov dec jge jbe insb shrb jo add xor add pop add pop mov inc xchg leave sbbl pusha mov sub pop inc movl mov pusha sub scas or addr16 xor mov inc sbb xor adc xchg xchg test lret mov call rcrb ret mov mov cmp add mov fldl add adc xor rorb test es xchg or push out dec push push or jl mov test inc push add inc push add push inc pop or or loope and push ret mov push push mov or pop add clc pop add xor nop mov loope adc xor adc add pop (bad) call push mov mov mov jo test arpl mov push sarb adc xor jle lret add je inc ljmp add sahf test xor mov nop fs lock xor xchg inc ss xchg jg les andb ljmp push push pop mov rclb pop add push pusha xor test subb sbb mov add xchg jecxz test mov sbbb rclb adc int adc inc or mov ljmp mov inc and xor add or push (bad) jo cmpl sbb fsubs loopne add inc aaa fs adc sub add ds fsubs inc dec bound (bad) adc jne sub iret push sbb in mov lock jbe and iret or adc pop dec mov add inc icebp inc test inc addl add and mov xsavec add sub (bad) cmp inc jno add jecxz push push call loopne (bad) clc pop loopne or pop les add push add push ret popa or sbb sub loope push pop xchg cs adc sub (bad) ss inc jo bswap add adcb rolb inc add add es and add nop push xor add mov add xchg add (bad) pop imul sbb les pusha add jno add or inc xchg inc ret cmp add dec fiaddl lea loopne inc and loope push jl and sbb inc adc das (bad) sub mov (bad) ss fadds int3 inc mov add jo popl inc and or cli sbb add add and cmp loop inc inc mov xor and and inc and popa xor mov lock or add xor roll inc sub adc mov push addb rcrb adc loopne xchg cmp movsl mov lods or and sub fldl sbb pop rol jmp adc inc inc cmp and lcall mov add mov inc xchg or add icebp push mov (bad) negb push mov notb add outsl xchg inc sbb orl cmp add xor mov addb mov rcl and add leave in sub popa sub js add add jnp test and push inc adc push or and push add pop add and add sbbb or test es mov mov pop adc mov pusha aad push or subb dec add sbb sub and cmp into loopne lock sbb jno push insb dec test je mov out add and xor rolb jo add inc enter inc and and iret sbb adc inc xchg mov fiadd adc jmp sub mov or sub adc sub adc test adc ja jb mov pop js rcrl das dec push or adc loope or mov int3 sub arpl and adc repz shrl jno jnp mov dec (bad) pop loopne or add bswap clc rolb and add xor rcl mov add sbbl cmp or xchg cmp lret cmp push mov xor cwtl dec inc in or push (bad) dec adc adc xor cwtl or push and inc inc add icebp lds xor sbb add or adcl push test sbb iret push jge test add sbb adcl and jl cmpsl mov pop sub xlat xchg stc or xor jmp and aam andl inc cmp push cmpb test or pushf or and pop or add adc add mov or mov xor and bound or sub adc mov push sub and or les rclb cmp gs mov rcrb pop popa fimul shrb addl or sbb and imul rcrl popa loop or subl add pop (bad) icebp add inc cmp roll (bad) push inc add pop inc or dec push mov and push adc cmove add sub jecxz add arpl out xor adc adc cmp xchg insb call inc inc dec add pusha cmp sub inc push test and add adc dec and push mov mov (bad) scas or addr16 and xchg mov push pusha mov aad call inc (bad) sbb xorl sbb fisubrl xchg sahf and mov test xor test popa inc repnz mov nop sub cmpb and sub fisttp cmp inc test ret jo add inc mov inc sahf iret push or dec or out inc std cmp andl mov add subl or lea lods or and add cmp push (bad) mov cli sbb lods or test mov jbe loopne (bad) clc sbb cwtl or pop or push xor mov movb inc aam jno or push pusha lret xor loop repz mov pusha mov dec pop add bswap cmp enter add add pop pop inc xchg (bad) mov mov addb rcrb lock xchg add adc cmp jl mov add aas push hlt add inc in sub pop or sbb add add adc mov leave sbbl rclb add or inc loopne inc and loope push jl test add ss (bad) sbb xchg add into adc mov mov xchg (bad) aam and or pop iret adc jno sbb (bad) and add roll adc cmp and or jo or cmc inc out pusha mov sbb add std inc or cltd (bad) push adc xor sub (bad) cmpb arpl mov mov enter add push add or (bad) adc jno test mov mov clc sbb into or xor rolb fwait adc dec cmpl jnp and mov adc xchg and lods and mov notb bound mov mov add sub jno adc rolb inc or fdivrs and adc inc aas sbbb sbb enter inc xchg push xchg add or addb lods add add call popa xor mov inc add adc push add pop add pusha xor adc jo push push enter pusha or subb and adcb inc xorb pusha bound popa pop ret inc fs cvttps2pi pop inc push rorl push mov mov in and and sbb lock adc xchg add push add das jmp lock fmull (bad) mov cld inc mov test and add inc cmpsl decb sbb pop add pop jecxz add and and and sbb and xor lock add adc (bad) or mov push or adc out push sub movsl mov adc push test enter push call mov add sub add test xchg pop js test jl push lds jl inc jns test push adc das addr16 mov (bad) jne mov movsl xor inc sbb cmpsl add add andl sub ds add js xchg mov add xor test inc mov dec inc punpcklwd lock aas adc and or or add or or aam or (bad) arpl adc mov add mov lds inc adc xor sub rcl subl dec mov sbb (bad) loope or and inc pop insb push loop or scas or push loope jns and dec push mov subl xchg or iret or shr inc and outsl test or test dec daa inc mov or adc push push xor dec or xchg ret mov push push les adcb sub lret or mov in inc mov lcall add push clc pop ret rclb or or mov test sahf inc adc xchg inc arpl dec lahf pushf xchg and inc push and test jno lahf sub dec mov das mov or xchg movsl cmovne xor dec mov and (bad) add add rolb inc add mov mov sbb arpl lock inc sub adc sub pop add jl nop push ret adc test xor test or add and and pop mov inc test loope add mov andb fwait inc rclb (bad) subl loopne xchg leave iret adc and mov xchg lds sbb sub inc adc add push sbbb inc data16 pop push mov fwait mov and add and out and cmp xchg add outsl test (bad) aaa aam or sub xchg xor inc mov pop cmp and pop dec mov sub jno add add inc jo mov stos out das sbb sbb pop adc push add or test or fs push add cld jbe xchg or les dec jnp xchg push js push adcb push and add nop pop add mov test mov mov lods or das out inc adc pushf dec push rolb mov cmp inc add pop pop stc roll adc loop and sub mov add dec inc or ret adc adc and add andb sbb add pop pop lock fs mov sub dec or (bad) sbb subb je rcrl inc repz add dec inc mov pop push xor sbb and jge cmp pushf ret adc sbb and mov inc jp adc test add inc push sbb addr16 jae es and mov sub dec mov stc cmp mov pusha dec shll lds ret shr les ljmp inc push push jo xchg imul jo loope or cmp add adc sbb into or pop ret shrb dec add inc inc cmp push andl nop pop add sub and dec lcall popa jl push pop inc mov jno sbb test mov or push jbe cmp mov (bad) imul add sbb lret add xor popf lods inc pusha and and push push mov pop hlt or inc (bad) push add shrb nop or push pusha sbb add jo add addb cltd inc mov push daa sbb mov mov mov inc faddl adc add mov insb test dec fiaddl jge dec push mov mov or (bad) sarb sti and inc (bad) out add xchg or popa inc repnz cmp add mov add dec and mov jno iret add dec mov test push dec dec loopne nop push or mov rcll mov xchg adc sub adc in xchg cmp mov adc pop inc fiadd sub cmp loop jp orl adc xor mov notb test gs ret push push and dec inc andb ljmp repz xchg sbb in adc dec sub lock cmp and xchg inc rorb xchg sbb jne add pusha cmp movsb nop inc scas xor push push aam inc invd add pusha pop sbb cmp mov xor loop inc cmp adc mov jbe mov enter push test push repnz lock push add pop add and add sbbb or mov push or pop inc (bad) cmp movsb add push loop or inc xchg push xor push pop dec inc mov sbbb out loop and xchg subl xchg jl mov xchg in and nop push or and cmp jo pushf adc push cwtl into or jge loope call dec jmp in add arpl sub mov or jae insb (bad) mov and adc cmpl orb adc jl push (bad) mov push push pop fs in xchg cmp push subl pop and mov or inc ret sbb lret (bad) push add add mov push push sub and in dec and inc sarb (bad) mov adc add sub push inc xor and cmp nop jno xchg ds mov lods pop loope and scas dec or adc jae movsb sub inc sub add test mov hlt mov adc sbb js add inc sub pusha or add sbb les inc xor fmuls (bad) add pop add sbb std xchg sbb sar addl mov rorb dec test sub jb mov or movsl or dec adc push test push or sub inc mov sub pusha pop push sub and pop cmp or inc xor popf mov ret mov leave push dec (bad) xor sbb js dec jo mov es stc imul fs add pop inc jp ret lds add ret adcb xchg pop or inc xchg and xchg loopne inc mov inc dec inc (bad) aaa pop push adc push pop insb push and fisubr inc popf xchg cmp and jnp test xchg ds push movsb or jmp mov (bad) movsb mov sbb stos xchg xor and and daa and movsb xchg movsb mov test dec jno adc add mov sbb call mov fadds xor xchg xor add push dec (bad) xchg push fwait and mov (bad) xor nop dec rcrb push jbe add imul mov mov es or xchg mov add leave ret shlb orl adc lcall xchg jo jo add mov adc xor gs adc push nop adc movsl sub imul rorl mov mov hlt test shrl push dec cwtl inc push test aam mov sub leave shrb mov add (bad) mov rcrl cmc dec pop dec rcll adc lods mov mov js loop dec enter xchg fdivs roll push xchg and dec movsl jge add lret adc and dec and int3 xchg jb and dec pop out jp push mov xchg sub sub push subl imull outsb dec js mov and sarb loop and movsl rclb pop push in push nop insb movsl (bad) leave js mov adc jnp decb dec or pop add mov adc xchg inc sub jb movsl in das mov dec ljmp mov and xor xchg jmp (bad) dec sbb mov dec test dec and cmp nop sub xchg xchg adc and add add and push iret mov add or add or or sbb test subb push cmp and dec bound scas add xchg add push inc and jno mov inc cltd inc mov inc and or cltd mov pop or dec divb andb adc cmpsl aam sub xorl xorl (bad) pop lret mov and bound loop aam cmpsb cmp sub and adc sbb jae add dec sbb pop (bad) in push dec ret cmp (bad) in leave lret pop rcrl jo jmp xchg sub nop xchg xchg les or xor test and lock dec test (bad) dec push xor ret push pop lds sub scas and add (bad) outsb adc and (bad) and popf xchg jl sub sbb test mov pop sub jp push mov xchg sub sub push subl imull cltd sub xchg cltd mov add and js cmp pop and push pop xor negb inc cli fstenv mov dec jg sbbb push add or test andl xor push dec js data16 jno xchg push inc popa xchg add mov xor fcomp add and mov (bad) pushf or sbb rolb cwtl js gs xor push shll pop les add xchg and mov inc clc sub outsl add jp rorb and sahf test in dec test inc or ret (bad) nop ffreep jbe add jl sub dec mov adcb cmp add adc xor notb iret lahf adc in push and andl adc sbb xorb (bad) xor mov and pop cmpsb lcall mov lock sbb mov sub jne sub pop pop jnp negb loope fwait hlt pop or popaw mov test pop add pop mov xor add or shlb insl ret enter mov outsb and cld lcall xor aaa mov ds pusha add dec xchg ret dec xchg test mov je movsb sbb test and daa addb add insb sbb popa into rolb test sbb mov mov pop addr16 inc jo mov dec sbb mov mov add or add or or or xchg movsb cmp inc cmp test (bad) adcl and mov or or icebp add dec jo xchg andl and jns jl mov add dec adc popf mov pop xor push mov xchg fdivs out xor add mov sbb mov inc pop dec orb adc xlat pop jo jmp inc inc pop sarb clc push test sbb pop sarl mov push repnz adc adc push ret cwtl jo pop adc loope or xchg mov push bound cmpsb push stos arpl loope mov xchg (bad) fildl push enter sbb inc add push (bad) lea fsubl pop and gs push pop rorl icebp add jne push in es add es (bad) mov inc push test je ret repnz js add (bad) adc rorl bound aaa mov push jp and jmp xor pop mov add lcall hlt rolb add or xchg jo mov nop adc add add and cwtl insb push xorb dec jo mov xchg adc fnop cmp test adc or xor push pop xchg xchg movsl movsl xor imul push in xor (bad) xor into dec mov and or loop les inc push loop dec sub nop popf xor xor dec sbb inc dec (bad) repnz add cmp xchg pop and clc mov or xor inc (bad) lock sarb movl (bad) pop cmpsb mov sub movsb add adc imul xchg lea arpl loope mov xchg les mov enter cmp inc dec dec mov les push mov jmp xor push les or add ljmp test dec dec inc dec xchg aam test jne (bad) adc in push in jecxz dec lret pusha cmp pushf push and popf adc movsl int test and pushf lea (bad) xchg cmp pminsw es mov std daa (bad) lret sub add mov daa and add test pusha sub jo shlb sbb int3 ret pusha xor jo xchg xchg test pusha aas sbb adc mov leave mov test add fs lea rorl adc and add mov insl sbb and scas dec dec push xchg xchg xchg (bad) xor dec dec cmp je xor movsl clc push or mov mov sbb testb xchg adc and mov inc cli jge or inc rcrl jbe mov subl mov jecxz xor fdiv xchg mov push orb cmc inc mov xchg jb dec es movsl pop sbb xor and sub ficom push nop mul cmp cmp rcrl sbb outsl loop dec xchg movsl push rcrb (bad) test sub ja (bad) lea cmpsl xor sub push xchg test dec pop sub les xchg hlt push test push ficoml (bad) pop pop inc cmpsl pop cmp mov pop fwait sbb test sub add xor inc add mov jno imul mov fldcw or push add mov add or add or or or icebp mov or add fs and pop or cwtl or inc mov mov orl jo or push scas inc or jo sahf test in add and icebp add fadds or push mov xchg or imul enter add inc and xor mov aad add mov ss das (bad) jo add dec jnp lods daa fs add aas or and cmp dec push or aam pop dec sub jg (bad) popa inc inc xchg and mov dec sub (bad) or aam or add pop push (bad) xchg mov rcl sahf xchg jnp mov pop jnp ficompl pop rorl dec jo cmp jecxz dec push push smsw pop adc ret mov leave std rcr rcll sbb jo adc test lahf push push adc out loopne dec repnz cwtl lea call fcoms add bound jl popa cmpsl loopne call mov (bad) cld xorl test clc xor ret lock add inc sub xor pop adc stos push push cmp bound and adcl or push mov xchg mov inc push push test (bad) cmpsb outsb add (bad) sub rolb pop and test enter (bad) xor dec inc rclb cmp cwtl push fiaddl movaps or pop cmp adc lea ds cmp movsb pop adc mov jp and dec mov adc sub xor mov movsb and push pop es or sbb mov shrb adc test pop xchg pusha mov inc inc lods push cwtl push inc mov inc movsb rclb adc or push add mov adc lods inc pusha sbb pop inc cmpsb mov jno in inc xchg and (bad) dec mov in test push or bound push cmp jo hlt adc sbb movsl and dec sub (bad) jo sbb (bad) dec ljmp test add mov incb sub movsl sub pop inc add push rolb xchg movsl xchg sub pop push loope lret call les inc xor mov mov mov addb dec xchg ss mov sbb push mov ljmp rcrb add loopne dec cwtl addr16 movsl in test push or push les sub imul ret (bad) xor dec sbb push int3 cmpsb jne daa pusha push data16 dec pusha or push xor lods inc adc lcall add fwait push fmull dec ljmp or or push pushf mov xor mov push mov int3 mov je enter sbb daa push (bad) push push add (bad) test xchg dec repnz push int3 xchg jae and and inc dec adc push (bad) mov add out cmpsl test test dec (bad) sahf xchg imulb ds or bound and test push pop out lcall cmp xchg push test fbld push xor inc inc stos rorb xchg repnz mov mov adc pop repnz mov mov or cmpsb mov inc sub pusha or add sbb les inc xor test add gs add or clc dec push push lret push gs adc inc int3 add inc xorl loopne adc dec out add mov push pop push add mov test subb movsl push sub test popa push and loop xchg ss adc fcoms jmp sar pop cmc add push repnz (bad) repnz add inc sbb jo pop sbb jmp adc in add lahf xchg inc insl adc ljmp cmp inc add lret mov pop xor movsb push sub xor mov nop cmpsl mov xchg test mov fdivs inc les test and push stos mov lds cvtps2pd sbb mov inc stos leave inc test pop add push addl pusha jmp dec cld dec inc es stos lds adc fisub sbb fdivl inc xor adc imulb xor ret push mov and (bad) sub xor mov pop stos fsts add xor loope or enter orb push add push pusha arpl or stos sub inc (bad) cld sbb add add insl bound mov cmp xor sub and lods mov sbb stos mov cmp and and lcall and and sbb cmp aaa sbb cwtl lcall loope inc mov test inc leave test das cvtpi2ps sub or int3 in sub or jmp pop or lods lret push es in test dec cltd in lds mov test fs xchg push pop aam push bound inc bound mov dec or dec pop inc sarl (bad) mov mov push push or int3 in insb insl push sub into (bad) sub push adc xchg loopne rorl and adc xlat pop data16 jbe icebp and ja inc adc inc push rcll pop push rorl or pop push cltd popa mov test mov xchg call jo in loopne out adc or in mov pop adc inc les popf and add ljmp sub out sub lret jno and ret jnp mov test loopne push mov repnz imul es xchg dec dec sub lods lods dec xchg xchg cmpsb push testw and add mov xchg ret dec xor les sub repnz mov nop and xor or xchg in and mov inc test push push pop fisttpll pop sbb enter shr mov push cwtl mov xchg (bad) push mov mov and xchg enter sbb fstp fistl push adc (bad) rorb jo stos fadds push push jno jb xor ja push jb inc jo jns dec dec adc push push js adc mov fisub stos mov leave sub fisttp rclb or mov in data16 daa and rol test fnop fsubl fwait icebp and mov (bad) stc adc and (bad) (bad) lcall data16 xor je outsb dec dec bound push dec xor inc push ja insl cmp inc je inc dec push dec inc imul xor popa push and mov and dec inc outsl imul inc insl mov int push or add dec lea sub and hlt test adc pushf fstl rorb ret jecxz xor in addr16 cmpsl dec dec mov cwtl xchg fwait (bad) push and or ss xor clc nop aam repnz push inc inc and jno mov (bad) (bad) (bad) (bad) inc mov adc (bad) cld dec lea (bad) jmp inc jae lcall xchg and ret aas adc dec dec dec aas stc push push int inc mov mov adc nop push jg nop pop jl cs les fcomip xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push movsl je je gs data16 push ret add adc repnz ja adc aaa mov push mov xchg test adc jne inc test daa jbe and fimul fiadd xchg adc enter and loope or gs mov or mov xor popa popa inc das xor movsb sbb sbb cmp mov adc inc loope xchg mov (bad) hlt bound out push fs and cmpsb cmp mov mov mov push inc xor nop (bad) aam cwtl pusha lcall cmp adc (bad) repnz mov xchg mov push out jb es cmp out int3 mov nop lods in jo scas sahf xchg test fmull fimul pop adc adc enter sub sub or cs jle xchg cmc push inc and xor cltd cltd mov and xchg mov and sbb jae cld dec dec sub dec lods out or dec fsts xchg rcrl fs insl push loop data16 aam (bad) lahf rclb rcrb xor inc inc xchg xor cltd sbb fsts js nop fldenv lds data16 (bad) pop out bound xchg push inc mov sahf stos out (bad) xchg inc xchg xchg inc push sub pushf mov nop xchg test (bad) inc adc cmp jae inc dec mov (bad) xor or test mov sub xchg xchg push fs xchg cmp cmp movsl xor xor ss adc xchg pop pop inc test int fsts (bad) cltd inc fldenv (bad) loop stos movsb lcall and jb cmp sub or cld mov inc sub mov test sub dec ljmp cltd inc xor dec int3 cmpsb dec push addr16 imul adc pop lcall mov dec dec dec bound loop xor mov pop jb pop adc push sub adc mov xor xchg imul cmp dec pop jp push gs push push xor ja int3 rclb xor mov and notb repnz (bad) cmc xchg pop inc repz xor repnz inc jbe movsb hlt xchg movsb xor xchg and in jb repnz inc test xchg jb lds repnz hlt xchg je mov xor add repnz xchg movsl jae repnz push adc aam jae repnz jne jne xchg and pop inc cmc addr16 repnz adc push fs xor push adc cmpsb jne push xchg jae inc xchg and repnz xchg je repz movsb jne jae and inc data16 adc inc jbe push es repnz daa je push ret adc je mov xor add repnz adc xchg and repnz daa je and and repz inc jbe inc cmpsb hlt xchg je mov xor add repnz xchg movsl jae repnz push adc aam jae repnz jne jne xchg and pop inc and repnz inc jbe and repnz les push repnz inc jbe xor jae repnz inc xchg jne push jbe ret adc push push push test repnz push jb and notl repnz xor xchg movsb jbe repnz xchg and xor in xor xor cmpsb ja pop addl adc notb push xchg add adc adc inc cmpsb jne push xchg push adc xchg inc push je add notb mull xor adc in xchg mov inc je test divl jbe xchg aam push ja cmpsb inc gs mul jne adc cltd movsl and sarb inc sarl ret xchg mov (bad) xchg mov mov repnz push fsubrs mov ficom (bad) into nop (bad) xchg cmpsb mov xchg (bad) mov xchg movsl jns rcl push dec repnz lcall lods mov and adc push gs xor push adc cmpsb jne push xchg jae inc xchg and cltd mov mov cmp and sbb xor popa xor enter fstps roll adc adc cmp mov cmp in jb je ret fmuls (bad) and mov (bad) cmpl popa jle test xchg pop int3 pusha fsubp stos mov stos sbb fisttpl sbb push xchg int adc adc push cltd fst pop or push push push int3 (bad) sahf rol xchg out es add daa mov sub push imul or fcomps xchg lcall adc fimull push xchg pop ficom sbb push inc test inc adc jb lods movsb mov mov stos mov (bad) inc out hlt adc sbb les pop repnz xchg fs jo into (bad) nop call mov bound nop push rcrl mov and mov mov mov or imul data16 dec cmpsl xor mov cmpsl mov test add sbb xchg adc imul gs cmp je dec insl jbe inc push push inc imul adc push pushf repnz stos movsb mov xchg sub xor (bad) jp cmp ret sub jns xor adc dec fimull pop nop lods adc int3 out sub sub adc enter hlt ret loopne int3 rcrb xchg inc sbb pop mov push mov jb push out xor and fstl dec test pop insl ss dec xor mov data16 inc jbe adc xchg sbb add mov out dec out sub dec sub inc dec enter xorl bound jp mov or adc (bad) ret lods sub inc inc jp and pop xor or bound xchg cmp xchg addr16 xor or std cmp aad popf adc add cmpsb mov inc cwtl loope flds ret mov ljmp adc fwait add gs inc dec push push push push dec adc movsb cmp stos stos mov cwtl inc out inc into jmp lods dec sub outsb jae inc and sbb lea sbb adc sbb ffree shlb or and mov movsl gs aad popa and sbb push pop int3 or add (bad) arpl add nop push mov into add (bad) and jb sub sbb (bad) dec dec jb mov adc int test adc xchg dec pop push xchg sbb nop call mov mov xor lods cmp adc xor xor pop and sub adc sbb icebp sub mov sbb and pop xor ret into inc fs add lcall and xchg sbb sbb cwtl mov lods sub mov dec or xchg adc cmpsl sbb inc test push pusha dec dec cld dec int3 inc arpl arpl inc push push imul cmp cmp push adc mov xchg adc icebp xor xor scas adc dec xor sub leave cmp xchg sbb mov push adc mov sbb fst or pop lea mov lea rcl cwtl mov pop push jb movsl sbb mov adc les adc int bound stc adc push pop loop push dec inc push jbe insw inc sub push pop adc fs mov cltd movsl aad mov lcall lret sbb xorl dec stos or mov xor lods or (bad) gs cmpsb je xchg cmp sub adc es dec or sbb xchg icebp cmp or adc dec mov imul xor arpl mov push cwtl xchg sbb ret mov xchg int3 pop or adc clc mov sub (bad) fsubrp pop mov jg xor and aam and adc cmp inc mov lea clc lcall and and inc das adc nop pop test sbb nop fstps int inc push push xlat outsl and xchg pop adc cld dec stos mov cmp les mov imul sub dec sub sub dec sub sub imul sub or outsl dec jmp cs sub out leave dec mov or sub sub cs sub out leave dec mov or dec push sub in mov ljmp in mov test sub leave (bad) push stos or inc or sub leave insb outsb call jmp (bad) sub dec sub sub sub leave dec in or sub lods call cs insl dec dec call sub sub into in or inc sub ljmp ljmp sub es mov in insl or lods push xchg or into call sub out lret in cs dec sub sub dec jmp sub jmp mov mov out dec sub mov mov cs push cs mov push call inc sub into jmp or dec push ljmp lret push leave mov scas jmp or dec out stos sub or sub dec sub or mov sub cmpsl or stos dec iret push or inc in mov dec call out mov dec out mov mov es or mov insb ljmp push dec call or scas or jmp sub in or dec sub ljmp or sub cs sub es mov or sub stos pop or mov leave (bad) cmovle cs sub imul sub mov dec in ljmp or sub (bad) data16 test sub call mov call sub sub scas call lret push sub or mov or push sub push or sub push scas call sub es sub or sub mov dec push mov in es sub mov call out mov or dec push mov sub push push sub sub or inc imul test push or push call sub dec call es out sub or in sub in push jmp or iret or call sub sub dec imul dec test jmp call call push jmp cs out stos push mov sub dec sub push lods sub out or push imul push insl call sub or out dec in mov imul imul sub imul imul jmp inc mov or pop push dec es call insl das inc leave lret or insl dec or lret add sub ljmp sub ljmp or sub imul sub or lods out jmp sub leave cs sub imul out sub test imul call sub or call dec (bad) out gs dec int3 call es sub push dec (bad) sub in outsb push mov sub dec dec push insb sub imul test stos sub or (bad) in lods lods call sub or sub or sub leave in out mov sub enter sub test sub es push imul lret mov add dec push test sub in call sub or sub push dec dec out es push jmp sub sub dec sub push lods or imul imul stos sub dec dec stos sub call sub call sub test dec or sub mov or dec jmp into in in in mov in test or out or lea sub in inc in mov sub test sub test sub int3 inc call sub dec in or lea sub push in imul (bad) sub dec sub sub and mov mov sbb cmp sub imul daa or outsl dec jmp cs sub out leave dec mov or sub sub aas loop inc xor jnp inc jns (bad) jp fwait fwait and push jnp sub jp shrb or shrl sub inc inc mov lcall nop pop push sbb pop push xchg jno mov into lods call movsb daa je cmc push stos arpl mov popa mov (bad) stos dec or sbb cmp mov dec bound adc cmp cmp pop inc pop bound mov mov popa pushf loope xor fadd cmp mov and sub clc fcomp fwait (bad) cltd adc adc lret int pop xchg int3 fcoml sbb pushf aad pop adc dec adc rcll pop mov pop lcall int xchg aam rclb xchg or push mov dec (bad) stos dec cwtl int3 test movsl push adc mov hlt xchg add (bad) push test in test push addl data16 inc popa and popa sub push aaa inc xor test xor cmp and sub pushf aaa and xchg cmpsb mov sbb cmpsl lcall cmp push xor insb cmp adc xor and xor (bad) stos and stos test sub cmc and cmp popf fptan cmp mov mov test sub call mov call imul mov mov pop in dec push jae test inc xchg mov xchg (bad) addr16 xlat xor pop dec test dec cmp dec inc inc xor addl and dec push (bad) imul lea and cmp xor xchg mov xor mov mov aas les scas test shll cwtl movsb mov and mov cmp mov lods mov sub jbe inc dec inc sub pop inc dec inc dec inc addr16 (bad) shlb jb or inc sbb cmp jg push dec imul dec jae inc mov leave mov mov and mov int popa cs mov inc and mov sub lods sub and xchg xchg in push ss repz gs icebp and (bad) mov and int3 into out mov shlb fs mov sub dec inc jns rcr push bound xor push cltd lea popf xchg xor xchg or lret imul push arpl push dec (bad) out inc adc test mov call in cltd imul sub js cltd (bad) daa inc jb lods movsb mov mov sub test lock test rcrb push push nop aad inc call adc xchg dec mov inc push stc sbb xchg inc mov es push sub sbb sub repnz mov ds movsb and mov sub add scas shrl cmpsb sub mov bound adc mov xchg xchg mov je dec leave icebp movsl enter cltd cltd movsl sub push and xchg xchg sub mov sbb jle xor mov movsl sub lods sub mov jl,pn out aas mov sbb jl leave pop push jno lcall sbb movsb mov mov sub dec push int xchg adc adc pop out addr16 inc outsl inc adc xchg jno mov inc ds test sub cltd enter mov sbb push fwait popf mov ja xchg fidivl and nop int add cmp pop bound shlb mov mov mov enter nop insb test movsb movsb mov inc push les movsl je jno es aad movsl push sbb arpl jle cmc dec inc jbe inc add fwait sub aam into sbb (bad) dec push mov xchg or sbb adc data16 xor imul sub and push or inc adc mov inc xchg inc sub jno sub dec jo mov daa les mov lret xchg push dec mov sahf adc sub icebp adc loop data16 xchg push loop cmp mov sbb test and inc (bad) cltd adc sahf xchg add mov mov mov or dec dec insl shrl and or mov loopne mov inc out sub xor jnp mov (bad) rcrb adc sub cmp (bad) xchg and and xchg movsb inc xor adc push xchg movsb inc je adc push xchg movsb inc mov adc adc xchg mov cmpsl je les adc (bad) testl push push xchg add repz inc hlt and xor adc xor inc adc xchg mov es add adc push (bad) xchg add push je cmc ja xor adc xor repz repz mov push xchg add xchg push addl test and adc adc push je push ss add and jbe adc xor inc divl xchg hlt adc divl xor xchg movsb les xchg xor xchg adc xchg fs mov adc inc adc and ret je pop xor xchg arpl aam xchg in push test xchg add cmpsb hlt hlt adc adc jbe push ret add push movsl push xchg push mulb movsl push test push xchg inc fs xchg xor movsb adc adc testl xchg push je in adc divb push and fs inc fs inc addr16 pop je adc xor inc gs adc adc adc xchg xor inc inc xor adc xchg adc adc test notb push je adc inc jecxz jne movsb inc adc adc adc cmpsl jae xchg push push adc les (bad) push (bad) gs xchg ret test cmpsb inc fs hlt les adc xchg out hlt adc test divl je mov xchg daa xchg movsl es inc inc addr16 add add xchg xor inc adc adc adc cmpsl jbe adc push push je adc aad and fs inc inc xchg xor test ret adc adc jae addl adc adc inc test je xchg inc test je xchg inc test je xchg in cmc add xchg test in adc adc (bad) in and and hlt xchg repnz movsb push movsb push je inc push inc jae cmc inc inc adc and push jbe adc mulw fs repz adc push movsb xchg jne adc jne fs xor push adc jae movsl push push adc mov adc jbe xor arpl xorl div adc xchg out hlt adc test hlt adc push je test ja xchg inc push xchg push xchg push xor xchg push xchg push xchg jbe movsl test and test hlt adc inc push inc push xchg and push adc adc and (bad) inc je je aad je and xchg addr16 push je inc inc addr16 add add xchg xor inc adc adc adc cmpsl jbe adc push xchg and adc je and data16 inc push test (bad) div inc (bad) repnz addl push xchg cmpsl xchg aam push xchg push jae test mov je test inc test je xchg in cmc add xchg push mov adc adc adc xchg xor push adc add jbe adc push adc mov xor test addr16 mov adc adc xchg add xchg repnz mov push xchg jbe arpl gs je es (bad) div repnz mov ss push xchg inc xchg push je adc inc movsl addl movsb ret (bad) repnz xchg add gs xchg adc inc adc adc hlt movsb and jbe adc push adc testl adcl arpl roll push adc test fs inc add push aad xchg test adc in xor push xrelease mov adc adc movb je adc (bad) hlt xchg repz xchg inc push je movsb in ret test je movsb in and in jae push je xchg push test adc (bad) mov add push notl movsl cmpsb test adc out hlt push xchg push mull movsl jbe test adc test adc je adc divb adc push inc jecxz push je xchg adc adc push je adc fs xchg adc and adc mov hlt aad xchg adc jbe xor ss adc hlt and divb cmpsb je push adc inc gs je movsb in inc jne je hlt inc xor xchg xchg adc push je ja les adc xchg inc adc adc adc adc push je mov pop test pushw movsb and fs notb push adc adc push je jbe jbe lds je notb cmpsl je push xchg push adc adc push je movsb inc mov xor testb andl push xchg adc jae in xchg mov inc je test mov cmpsb xchg xchg je es ja and xchg adc add mov cmc adc test add dec and movsl imul inc jns push xchg sbb push sbb xchg lcall adc int3 aad dec ficom push dec stos mov pusha (bad) jo fiadd data16 loope pushf int3 (bad) xor cmp out cld lea stos pop push inc dec push data16 xor mov pop jmp sbb mov rcr sarb fisub inc pusha nop in aam (bad) repnz xchg xchg (bad) mov int3 xchg (bad) inc xor inc enter sub xchg sub imul sub or dec sub dec lods or xor mov cmpsl mov pusha xchg (bad) mov test popa xor rcrl adc add ret sbb dec mov leave pop mov stos cmp jb mov int3 xchg push mov mov repz je and inc roll jns mov sbb xchg push pop adc aam fcmovnu pop jae mov enter outsb daa movsl push (bad) enter sub dec dec int test xchg int3 test int call sub imul adc movsl or mov in mov aam pop push dec shll mov xchg (bad) cmp cltd lea dec mov insb inc mov adc inc dec ret rorb jbe mov pop movsb mov mov push or adc or mov clc xchg or pop cltd sub test mov cmp pop fs push adc jae or imul in out test lret or mov inc push cmpsb cwtl mov mov aas and jns inc adc and mov add inc ja (bad) incb xchg and or rcll ret mov mov ficom pop push mov lock ret stos adc stos (bad) mov je test dec jmp inc xchg push mov stos bound cbtw rolb sbb push dec jo pop (bad) call arpl and jne out ljmp scas sub xor jp mov xchg push pop adc sub mov pop mov test adc and movsb lds push and xor sub or dec adc nop push rcll jo bound test inc xor lcall or fistpl pop into pop dec or les jb mov pop movsb dec imul and push mov cmp mov fisub fiadd idivb push sbb dec adc xchg adc mov sbb call xchg adc (bad) (bad) adc adc insl and and (bad) xchg and mov xchg xor lods roll pushw movsb and xor cld (bad) out in sub sbb push mov ret and (bad) lods mov mov pop movaps sub sub lret out inc inc mov sub mov test mov mov test and aaa aam mov pushf cwtl (bad) mov arpl xchg or xchg aad jns lret rorl (bad) stc adc push pushf lcall mov add sbb sbb xor cmp movsl cld dec inc repnz inc push outsl and rorl enter (bad) and rorl into jmp push xor mov bound sub jnp cmp (bad) arpl or xor adc test fisub je pushf rol test mov xor and pop pushf nop pop mov cmpsl mov inc ljmp pop and or les and fldl mov (bad) mov jae and cltd mov fs or sbb out xor cmpsl xor xor mov mov cmp mov roll outsb loop repz movb pop sub or inc and push xor mov ror sbb inc int3 mov (bad) call (bad) sub leave sub fcomps icebp sub push xchg jp cltd ficoml mov inc add jb mov out inc push push outsl (bad) shrb dec aas (bad) inc push es xchg mov test inc or (bad) icebp aaa test rcl inc adcl sub (bad) push movsb ss dec outsb loop jbe fsts mov push and xchg je in xchg mov and je adc inc data16 jbe xchg push je push movsl xchg xchg (bad) xchg jae repnz and adc lds adc cmc add adc adc and test xor repz repz arpl inc test inc adc xor out fs xchg repnz adc adc adc ret test andl inc aam adc adc xchg inc fs fs inc fs inc pop xchg and xchg adc fs and adc jb test mov pop data16 and adc jbe xchg xchg (bad) test hlt movsb and xchg ss je movsb and xchg test inc and aad adc adc push je out push inc push repnz adc xchg addr16 (bad) jbe inc push xchg push movsl xchg xchg (bad) cmc inc adc je push je out push mov adc xchg hlt out fs xchg repnz push movsl xchg xchg mov repnz push add xchg xor xchg jb repz adc xchg testw out push mov adc xchg push out push mov push movsl xchg xchg vgatherqpd repnz push xchg adc hlt mulb testb xchg push je adc test inc mov push push je testb hlt data16 test push xor xlat xor gs cmpsl jae je je pop xor xchg adc fs hlt push inc test test movsl push xchg push add and xchg inc loop xchg inc bound xor and jne push pop xchg xor xchg mov inc je xor es jae push push adc test inc mov adc jbe loop xor je inc add xlat jne pop xor xchg adc xchg cmpsl pop je push aam adc gs hlt out add xchg fs jne je cmpsl jbe adc arpl divb (bad) mov mov inc adc hlt inc cmpsb divl push je inc push jne (bad) xchg adc inc not add repnz and xchg push xchg adc xchg adc mov je adc and push daa xor data16 je and adc data16 testl repnz test pop xchg je inc jbe test test test hlt data16 xchg adc jbe add repnz test cmpsb inc push test repz push fs mov adc adc xchg hlt movsb and add ss push xorl adc jbe je push xchg jbe je adc pop test adc adc inc aam test test adc inc cmpsb addr16 pop (bad) div xchg arpl repz adc push xchg push jae xor jne test xchg inc jecxz mov adc push xchg adc adc adc adc in gs addr16 jne push push adc in cmpsb xchg adc xor and inc pop xchg ret ret xchg xchg add jbe xchg xchg in je in je pop and cmc movsl and xchg push aaa xchg ret adc movsb les gs and adc (bad) ja mov addl xchg add test inc data16 cmpsb addr16 xchg push cmpsl inc hlt adc adc lds aaa arpl push xor push push xchg inc movsl add xchg push cmpsl add adc adc lds je adc les xor and inc fs adc adc les and xchg inc push aam and jne jne cmc add xor add gs xchg adc mov es pop inc jne xor roll mov jb and addr16 cmpsl xchg push push ja addl (bad) and inc test data16 inc mov xor push xor test inc movb mov and inc adc xlat cmpsl je xor inc xchg xchg and je xchg repnz aad movsb test repnz inc adc gs xchg adc (bad) cmc jbe je repz arpl hlt xchg in xor xchg and mov inc arpl repnz inc jecxz xchg inc xchg xchg inc add add xchg (bad) mulb xchg in es inc jne je hlt jecxz xor cmpsl xchg (bad) and aad fs je and push adc xor and (bad) cmpsl jbe je push aaa and adc (bad) xor adc pop xor data16 inc inc inc hlt xchg repnz addl test xchg test cmpsl arpl adc push jb xor inc inc inc les xor and inc push xor adc adc xchg xchg movsl es jne hlt push movsl push push and les inc inc inc repz adc adc inc and xchg push je lock and ja dec push imul push inc inc inc inc push push insb fs push addr16 inc addr16 aam mov pop int3 pop pop stos sahf shrb pop mov mov sbb mov adc or xor sbbl mov inc inc call test adc xchg es lcall xchg andl inc fcmovnb roll fs inc fs inc pop xchg and xchg adc fs sub testl adc mov push adc mov enter fs push aaa js dec push popa inc inc dec push addr16 dec push das cmp inc insl imul mov sbb (bad) mov sbb dec dec repnz xchg xchg int3 pop mov mov fimul fmuls cmc or in dec jp and (bad) xchg xchg push js xchg jp inc addr16 cmpsb xchg push lret or sub xchg sub push enter inc push inc test dec mov popf adc push push aad push push xchg mov aam mov push or mov push and jbe loop xor je inc add xlat jno mov jo inc xor push pop mov pushf ljmp in xchg jno mov fs mov adc pop rorl movsb lret lods pop insl imul outsl insl push xor or sub call xchg xchg lods jmp or aad int push les fsubp insb xchg adc xchg sbb inc popa cmp test nop enter mov cmpsb xchg and and mov movsl int in in mov sub inc sub pushf or dec sub sbb scas imul inc inc push xor stos inc push je in mov inc pop inc push xor inc je cmpsb gs vmovntdq (bad) in out call xor cmp ret xchg mov sbb xchg pop (bad) mov enter into insb in ljmp pop fdivrs cmpsb adc test stos mov mov sub stos push ja push jb inc dec pop data16 xchg ret sub adc rcll sbb or mov push rclb xchg inc fimull dec inc test (bad) loop xor push jp xor jae push icebp cmp nop (bad) fnsave and pop fsubrs fldenv adc add xor lds jb mov rol mov int xor mov cmp test test mov in dec mov dec sub mov fwait xor sbb jae xor or pusha xchg mov inc inc (bad) out mov adc and and cmp adc arpl sub inc addr16 sub lret push mov call cmpsb lock loop inc mov bound sbb mov xor fs je and mov or mov mov mov cmpsl xor sub movsb xor or or stos and push xor mov jae push push inc repz xchg mov enter fsts xchg mov shrl sub mov mov push mov push xor dec inc aas mov push adc and adc imul cmp inc xchg inc push inc xchg out repz inc mov clc cltd cltd jg (bad) sahf call out test sub mov aam es into dec sub out outsb push sub outsl pop (bad) (bad) (bad) into scas (bad) push stos loopne repnz bound mov cmp or int3 bound enter int arpl and pop aas xchg cmp lds mov dec sub pushf (bad) jb and movsb adc sub mov ret les adc lea cmp pop int3 out push ror nop (bad) es repnz sub mov js and stos mov sub inc dec dec dec lahf (bad) stc sbb fwait fs jae adc sub push inc adc and adc nop pop enter (bad) loop push mov dec leave or es adc xor sarl stos or cltd popf int xchg test push pop and jb dec sub sub addr16 test inc sub dec push mov and ret mov stos cmp sub xchg (bad) mov xor (bad) aam mov jmp xor fs adc les xor and mov lea mov pop nop pop adc and jnp jle inc inc push xchg push icebp sub stos xchg mov fwait xchg xchg xchg mov mov daa pop test sbb and movsb and sbb mov mov stos xor cmp xor mov mov fwait and mov mov sbb mov cwtl and pushf aaa and sbb sub mov and sub xor pop xchg pushf cmp xchg mov xchg mov mov and mov mov cltd stos cmpsb fwait movsb sbb xchg xchg mov stos cmp mov mov and xchg cwtl lods aaa mov cwtl mov sbb mov pop mov mov sub xchg pushf stos mov and sub test mov mov and and movsb cwtl mov and movsb mov sbb test mov sub mov mov and xchg lcall xchg mov xchg mov mov sub cmp cwtl and mov lods and xor and sbb xor xchg cltd lods xor and mov mov and cmpsl and cmp mov cmp xor mov mov and sbb sub and mov and cmpsl sub mov cmpsl mov xor mov sub cmp mov test stos cwtl mov mov mov mov and cmp cwtl sbb mov mov stos stos movsb cwtl movsb and xor fwait and sub and sub and mov cmp cwtl stos cmpsb sbb sub xor test and mov xor mov and xchg cmpsb mov movsb test and xchg cmpsl and mov and mov movsb cltd sub mov sbb mov lods test mov sub cmp mov cltd and mov mov sbb sub mov lcall cmpsb pushf movsl movsl sub test mov mov mov mov mov mov xor xor sub test cltd sbb mov daa cmp cmpsl aaa cmp cmp mov mov mov sbb aaa aaa cltd xor sub cltd daa mov cmpsl cmp mov mov sbb cmp mov test cmp mov mov sub mov sub adc mov lods fwait sub movsb mov sbb mov sbb pop lods and ss cwtl sub movsl and sbb xor test sub mov pushf mov sub daa lcall mov cltd mov and and cmp sub cmpsl mov mov sub mov xor sbb sbb xor mov sbb and xor and pushf and cmpsl pushf xor sbb mov stos mov test mov movsb mov fwait sub mov and mov mov mov mov pushf and cmp mov and mov mov mov sbb mov stos cwtl mov mov movsb test mov mov test mov sbb lods and xor mov mov mov adc sub mov es ss adc mov sub sub mov mov mov and sub cmp cmpsl stos mov pop cltd test mov mov mov sub and mov mov mov cmp mov lcall sub mov and xor mov xor sub cmpsl mov cwtl xor cwtl and and sub and and cltd mov sbb movsb mov mov mov fwait and stos mov lcall and test mov cmpsb xor fwait daa xor and mov and mov mov and es mov stos mov and sub xor mov cltd xchg xchg mov sbb orb sub xchg xchg mov mov daa pop test sbb and movsb and sbb mov mov xor cmp xor mov mov fwait and mov mov sbb mov cwtl and adc adc sbb or or pop lret push dec push xchg sbb push sbb fisttpl rorl (bad) push mov orl or in or mov test aad je push xor xor adc push fs repz fs repnz adc adc dec and inc pop xchg in push and je xchg jbe test or jo enter add movsb xchg rcrl mov xchg test fiadd xchg mov rcll mov movsl adc call rorl jne jbe xor xor and or movsb in cmpsl je inc jecxz arpl in inc fldcw fstpl rol mov mov xchg mov test test xchg lods push cwtl lret pushf lods into into outsb sahf fsubl mov mov xchg int3 mov movsb loop (bad) mov mov mov les jne fs xchg add aaa fs and and adc sub and cmp xor cmp test xchg mov inc mov xchg adc add cmpsl and jmp push xor stos or js push and dec inc jno pop xor inc addr16 cltd push cmp mov or movsb pop outsl inc ja dec mov in sub inc adc test inc enter icebp xor andl dec push xor roll cmp in or aam lea nop fnop mov adc leave xchg mov push push xchg xchg fs aas and adc and lret mov stos mov mov adc in dec add test aad fs popa and movsl sbb frstor test mov fdivrs mov inc add movsb addl repz mov adc and fwait mov adc mov mov pop xor xchg int xor mov bound dec pop xor insb pop arpl xor push aaa adc cs and adcl roll jno and data16 and cmpsl pushf xor sbb movsl and mov mov test mov les adc into mov inc sub inc jb mov int dec sub push pop mov dec out pushf mov out lods lcall lcall push adc cmpsb mov test xor adcl paddb jl mov sbb mov (bad) addr16 je enter xchg adc xchg test out mov insb hlt loopne les and xor mov ss mov xor mov leave sbbb mov outsb in jno movsb mov and sbb dec dec lahf and cmp int3 lret or inc inc xchg fnstenv scas loop push xor xor (bad) adc lcall mov inc testl push sahf adc xchg dec fimul xchg mov nop enter mov fimull sub int rcll imul jl imul sbb dec aaa loop outsl movsb and xor cwtl stos lcall loopne inc and cmp xor outsb jo test test cmpsb xchg test cmpsb pushf test mov push jno and inc push les cmc push in xchg sbb movsb mov sub and cltd push push sahf or cmp cwtl sbb mov fwait mov push and dec mov cmp int3 int popa popa mov scas push xor daa in inc push ret and mov mov and xchg lcall xchg mov shll sbb or and mov in cmp and xchg adc lcall jae outsb aaa enter xchg enter rolb es dec sub dec pop mov lods inc insl loop inc stc or rorl das les enter stos xchg add mov dec jl enter js fmull fs adc test in and xor pop rclb call arpl sub lods mov data16 jns push mov mov xchg xor cmpsl sub push inc les les mov adc sub adc and adc pop pop data16 lods stos sahf xchg test mov out test sahf xchg test (bad) (bad) (bad) pop lock stos push mov mov test in xchg (bad) movb fsubr out (bad) lods bound lcall stos (bad) mov pop mov int3 into out fs pop mov fcomps mov mov hlt pop pop rolb pushf hlt cmpsb (bad) (bad) test push aam out xchg (bad) mov (bad) pushf (bad) (bad) (bad) (bad) (bad) lcall into lret (bad) into (bad) (bad) lods fcmovu (bad) ret nop ror test pop pop jo (bad) into (bad) (bad) insb lcall jo mov mov push pop pop bound (bad) (bad) xchg data16 lcall pop pop stos mov fdivs ljmp aam mov pop int3 pop pop stos mov fdivs mov mov pop pop bound (bad) (bad) xchg in jo cmpsb sahf xchg test out xchg lcall test mov int3 mov out test pop int3 fisubr bound sahf rcrb lock mov (bad) xchg lcall (bad) in pop pop pop pop pushf ljmp into pusha data16 push mov push pop pop pop pop pushf push (bad) jo into (bad) (bad) shlb pusha mov push shlb (bad) (bad) repnz xchg mov (bad) mov (bad) mov movsb test fmul xchg mov xchg lcall xchg enter pop push into ljmp lcall lods fsubl mov mov fsubs xchg call bound push pushf (bad) out (bad) (bad) (bad) xchg out ret pushf (bad) pop xchg out (bad) movsb mov mov test (bad) jo fmulp rcrb mov loopne test mov nop mov mov fdivl mov mov ljmp stos mov rol test in jb test shlb nop mov out mov push pop pop pop pop enter out movsb mov ret pop enter movsb into scas cwtl hlt push into loopne out (bad) (bad) insb push xchg (bad) xchg call xchg stos mov mov xchg test (bad) mov loop jb outsb mov fdivp test nop test test (bad) (bad) xchg out mov shlb (bad) (bad) mov push repnz sahf mov mov mov stos lcall in nop enter enter enter enter (bad) (bad) (bad) (bad) out mov mov (bad) (bad) (bad) (bad) mov ljmp loop push in in pusha stos lcall rolb stos lods enter mov mov aam mov xchg mov mov xchg pushf jb (bad) pushf bound (bad) enter mov push pop aam enter lock mov xchg xchg (bad) mov hlt out xchg fmuls nop mov mov mov movsb mov mov aam mov hlt shlb test (bad) xchg pusha mov repnz xchg lcall mov out xchg fmuls nop mov mov mov movsb mov mov aam mov mov mov test (bad) xchg pusha mov repnz xchg lcall into (bad) lods fsubl (bad) xchg fiadd mov pop pop rcrb mov mov (bad) mov shlb nop mov lods cmpsb sahf xchg test out xchg repnz mov xchg repnz into xchg data16 mov (bad) enter mov shlb ret mov jb mov nop lods test fcmove mov push pop pop bound shlb xchg bound mov xchg movsb mov fisub in mov mov mov scas mov mov mov jb pop jb stos pop jo insb sahf mov nop stos mov mov push stos mov (bad) mov repnz pushf lods rclb test into xchg mov mov mov xchg ror aam pop pop push pushf ror in pop pop jb insb (bad) hlt scas (bad) (bad) xchg int3 mov (bad) hlt out sahf fiaddl stos (bad) mov ror aam pop pop jb pop lock (bad) push movb rclb (bad) xchg mov pop pop bound shlb int3 aam pop pop jb pop lock fimul lods pop cltd test mov cmpsl movsl and movsb mov cwtl and xchg mov enter sub cs out or cmpsb lea sub or mov or push cvtpi2ps or (bad) sub imul dec sub out dec test pop sub jmp sub or and xchg out hlt adc cmc movsb mull and sub sbb cmpsb or adc dec sub (bad) in gs addr16 ja push jne data16 hlt push push je xchg xrelease or xchg lods stos mov push pop pop bound fs je adc (bad) movsl xchg test bound test stos and mov stos jg rcrb in dec dec jp mov lods in test cmpsb and mov cmpsb lcall sub xchg xor fwait dec imul dec inc and pop enter jo (bad) mov cmpsb fwait and shlb and lds adc xchg add add xchg adc push pop rclb rorb test outsb test bound test xchg xchg in and mov push mov mov lods fsubl mov mov fsubs xchg call inc adc sbb push test mov sub lds mov jo fmulp rclb xchg loopne test jo nop mov arpl in push xchg adc xchg jecxz add cmpsl mov xor lods aaa mov cmpsl sbb and mov test xchg push lret int3 or int sbb mov movsl xor sub stos cmpsb cmp insb push inc pop test adc inc hlt xor xchg and sub and xchg adc and nop test mov cwtl jo adc roll xlat loop bound jp and adc adc rcrl fimul adc xor push jns movsl cmp mov add (bad) sbb and adc lcall cltd xchg inc test sbb and sbb sbb rcll jmp (bad) or dec inc inc xchg adc call sub test ffreep hlt rclb in (bad) xchg popa adc (bad) decl (bad) or int das sub outsb in jno cltd fs dec addr16 in outsb push popa xchg adc mov andl xchg je je sbb push test xchg xchg pushf mov inc push das inc pop enter shlb repz push popa sub or adc les inc xor addr16 les mov ret push leave push push push dec enter test fs sub (bad) lahf and adc xchg xchg mov test push (bad) hlt scas and or daa and cmpsb sub push js cwtl (bad) nop (bad) rclb adc inc data16 lahf les rcrb hlt lods iret mov mov mov pop and call inc cmpsl addr16 xchg into aas in outsl inc addr16 push push mov push in xor mov jae xor enter popf in jno inc incb in jg (bad) lahf xor and or sub repz jle movsl dec call adc mov loop push or lret xchg inc fimull sub les (bad) (bad) cld (bad) sarl movsb test popf or enter push (bad) mov in dec push pop jmp adc out xlat inc aam (bad) stc adc or into jno (bad) dec mov pop dec gs push adc sbb push inc xor lret dec pop icebp sub loop dec out insl push inc xor jmp xor inc push push xchg xor imul inc and and mov inc dec imul pop das xor push and (bad) sub aaa push adc cltd fsts test add leave es xor in dec insb inc adc aaa loop pop adc cltd mov nop pop xchg adc mov and es dec je mov and testb in xor adcl bnd xchg je inc adc inc xor adc adc movsl push push mov xchg test inc xor adc adc push je adc (bad) repnz test mov test xchg add addr16 xchg xchg add movsb pop adcl push cmpsb xchg adc testl inc and push mull addr16 repz test inc push test repz divl addr16 repz in xor test hlt fs xchg test inc xor adc je adc mov xchg mov repnz bound adc xor xchg (bad) and gs cmpsb xchg adc xchg inc test adc je adc inc (bad) testb aad mov notl adc inc les xchg inc jbe les adc arpl in adc adc addr16 ret push arpl xor and and adc adc inc gs je push adc xorl test test pop je adc jbe movsl xchg data16 repnz push mulb repnz data16 repnz push add and xchg and test repnz testb xor xchg addr16 mov push gs xchg adc data16 inc push mov push inc push test inc aam adc pop mov inc jae out addr16 repz adc (bad) repnz test mov aaa push movsb xor je jb xor push addr16 push xchg addr16 je aaa je adc notb xchg in xchg repnz push divb mulb notb jb push inc adc adc xchg push fs xor xrelease repz push addr16 push xchg addr16 movsb aam je adc cmc xchg jae jb push gs adc divl rcll push inc adc xchg xchg data16 xchg daa adcl movsl xchg xchg push je adc adc hlt and mov repnz test push test adc and add fs arpl hlt data16 cmpsb test addr16 movsl test addr16 adc fs fs adc xchg adc mov inc testb hlt data16 test push test testl xchg inc push loop mull fs cmpsb je jecxz jbe jae inc ja repnz inc add adc push pop inc adc data16 xchg jne and and xchg add inc mov arpl repnz inc jbe jecxz mov daa xchg xchg mov xchg adc jne aam push xchg push xchg fs hlt gs cmpsb xchg adc inc test inc push mov test push mov xchg adc data16 jbe adc inc add xchg test cmpsl jbe je push push and testb and (bad) cmpsb mov je adc test (bad) data16 loop repz les notb mulb push xchg jbe xor xrelease hlt xchg adc push testb xchg adc adc ja ss push movsl test fs inc test addr16 adc adc movsl test repnz jne addr16 movsl push jbe push add add aam push test xor adc lds adc in ss movsl es addr16 test (bad) xchg push xchg inc adc push fs adc xchg in push movsb test push inc push jbe xchg xchg ss arpl adc adc inc div push hlt adc xchg inc xchg push xchg adc and hlt xchg xchg hlt (bad) data16 test xchg fs push and add test test inc push out inc jbe adc fs in push and xchg movsl push notb je mov adc (bad) gs in test ja xor and xchg adc push (bad) inc arpl inc xor push je xchg test mov adc inc movsl push xchg je adc adc ret xchg jbe ja ss push xchg xor (bad) testl add inc inc repz xor adc xor jae push repz adc xchg adc push (bad) inc arpl test xchg xchg push xchg gs movsb adc and mov jbe in xchg adc adc ret adc cmpsb push xor testl xchg push xchg inc adc push fs adc xchg in push movsb test push inc notb xchg push ss arpl adc adc inc divl jbe adc xchg adc xor test inc ss lds inc xchg movsl es adc mov jbe in xchg adc adc inc arpl je mov xor es je addl adc mov mov mov stos stos adc pop xchg fwait cmp mov mov mov movsb lods and into mov mov mov enter mov mov pusha mov pushf mov ljmp movb (bad) lock stos aam mov fsubrp enter (bad) enter (bad) mov pop pop push mov out in pop pop bound ret nop nop push push cltd adc rcrl nop aam adc pop push (bad) mov mov mov xchg push arpl jp lods sub leave or or addr16 aad mov mov and add sub dec sub popa stos mov sbb or mov pop lret pop cmp lret cmpsb sub or or push cs call jae cmpsl mov fwait cmp mov pop dec nop leave sbb inc inc testb loop ja pop xor jbe ss push ss (bad) adc enter inc jp outsl dec fs xor push jp xor mov ljmpw xchg les je cltd shr or lret inc ja mulb hlt xor xchg jb push inc sbb leave es cmp xor cld lea insb repnz pushf cmp cmp sarl lea es aam xchg daa adcl movsl xchg popf shlb inc and cltd pop xor inc test sub sbb les inc dec push data16 in xor inc and mov enter xchg sbb push xor ret cmp push aad mov inc dec fldenv fstps or or xchg outsb sub mov int dec sub sub scas dec dec dec jmp push jo inc sub stos and mov sbb xor lods and stos int3 movsb ficoml xchg lea (bad) xor aaa adc in push daa or mov dec in in inc bound xchg push enter push jmp or sub int insb sub movsl inc inc movsl test dec lret and inc hlt xchg adc push testb cmpsl mov out xor inc pop dec adc inc popf (bad) icebp sub loop inc adc jb mov dec inc push push sbb or sbb xchg sbb lret pusha xchg sbb inc push imul popf movsl and inc popa sub mov inc jae dec ret push mov and jp xor ret xchg jmp imul dec leave or mov dec dec and pop xor mov push dec push js aaa ja push jp xor cmp aad and or rorl int dec call mov jp mov popa leave mov add lea xor jns adc nop dec and and adc aam test xchg xor adc lcall mov inc notb ja xchg adc sahf push test icebp cmp cmp sub enter lods inc movsl inc sbb jbe pop les jnp int3 sub das or fs sbb jp into inc inc inc and and movsb notb cwtl sbb insl sub aad movsl inc cltd mov (bad) and xchg and mov pop in push xor roll adc mov ss into push adc data16 cltd xchg adc xor imul adc or decl inc dec aam test clc xchg sbb cld dec mov jmp xchg sub bound and push sub or dec adc movsb cmp and dec mov clc nop push les fs jne adc adc jno sub in mov and and and adc cmpsl and cmpsb lock adc and bound inc adc ljmp and pop push push adc adc mov out dec add adc fs repz xor and adc in cmp mov mov clc xchg adc dec dec addr16 inc les shrb clc xchg xchg decl lea lcall mov and mov xor arpl cwtl into pusha mov (bad) (bad) mov mov insb test out movsb xchg xchg push pop pop test mov jb pop pop pop cwtl test ret aam push cmpsb cwtl fs test mov mov mov test scas insb pushf int3 aam pop jo mov test insb lcall mov (bad) loopne mov fsubrp lret pop out mov (bad) nop fimul xchg mov mov sahf rclb into jo lcall mov int3 repnz pop pop lcall xchg lcall push lcall out mov data16 pushf movsb xchg mov cwtl into pushf mov (bad) mov in pusha (bad) (bad) mov (bad) xchg xchg xchg xchg (bad) (bad) xchg mov mov jo mov (bad) rclb enter cwtl enter lods pop jb test xchg lock push movb xchg (bad) mov (bad) nop in aam (bad) mov outsb mov jb lret xchg mov (bad) (bad) (bad) (bad) (bad) stos mov (bad) (bad) (bad) test into (bad) (bad) insb test test fadd hlt out xchg fmuls xchg rorb mov mov mov mov mov data16 rclb enter enter ret (bad) mov (bad) test mov xchg movsb (bad) repnz movsb les xchg movsb (bad) cmpsb xchg movsb (bad) rclb mov loopne (bad) (bad) mov push (bad) (bad) ljmp push pusha xchg call sahf rolb mov (bad) mov loop out (bad) (bad) insb lcall push (bad) xchg pusha mov (bad) (bad) into pop into mov (bad) in ljmp push (bad) mov xchg aam mov stos mov pop mov xchg stos mov stos xchg bound scas in ret ficom fiadd test pop enter enter insb lcall lock hlt pop enter push fiadd (bad) (bad) (bad) lcall mov (bad) (bad) xchg ret mov xchg (bad) aam scas (bad) stos mov jb pusha (bad) (bad) insb xchg outsb in pop pop jo enter rorb xchg ret ret mov les xchg movsb ret lock stos scas ficom lods sahf test mov mov (bad) int3 jb pusha xchg out int3 sahf test mov stos enter (bad) xchg mov mov shrb mov stos mov fs pushf pop pop bound pusha mov mov xchg mov mov mov mov pop int3 pop pop stos xchg bound xchg call (bad) aam pop pop (bad) les mov into mov int3 hlt pop insb pushf stos (bad) (bad) (bad) xchg fdivs ret xchg mov xchg stos mov stos xchg out enter (bad) mov scas push lods fdivs (bad) into (bad) (bad) ret loop fisub mov mov mov lods fdivs (bad) mov into ret pushf movsb enter jb pushf movsb (bad) lock lods fdivs ret pushf movsb enter jb pushf movsb les lods fdivs ret pushf movsb enter jb pushf movsb (bad) lock lods fdivs scas bound mov mov (bad) out (bad) xchg out les fsubs nop movsb lcall jb out mov pop bound (bad) enter enter mov lret (bad) out (bad) xchg (bad) (bad) (bad) mov movb mov push out lcall pusha xchg jb in jo cmpsb sahf xchg test nop mov mov push push test nop mov into stos mov les push xchg push lret mov lret (bad) out (bad) test (bad) (bad) mov (bad) aam pusha hlt fsubs nop mov into stos mov les push xchg push lret mov lret (bad) out (bad) (bad) fiadd enter pusha hlt fsubs nop mov into stos mov les push xchg push lret mov lret (bad) out (bad) mov pop enter pusha hlt fsubs nop mov into stos mov les push xchg push lret mov lret (bad) out (bad) mov pop dec and inc addr16 inc pop push inc dec inc pop push ss push imul cmp inc push pop push jne dec xor mov jb pop inc les jno mov test xor fsts adc mov leave ljmp cltd loope fnstcw cltd test push imul sbb sub bound inc push imul outsl jbe push das das ja dec cltd and mov push cmpsl mov cmp cltd pushf loope xor push xor xor mov fcmovbe xchg ror sbb push push push dec adc xchg sbb dec fimul and arpl jae and adc xchg inc mull jae adc inc (bad) xor xor add arpl adc adc jae sbb into sub dec aad sbb mov or in inc mov push mov sbb mov cmp push bound ret je gs addr16 arpl mov mov xchg dec sub inc mov mov adc add mov jmp int iret sub xor xchg js lea sbb stos movsl sub mov test and pop sbb pop adc stos inc dec pop push imul pop mov xchg (bad) out inc push je xor xchg cwtl and dec imul imul shll or xor sub or inc pop es xor enter imul mov xchg push sbb push push rcrl xchg push dec push pushf rcll mov pop enter test cwtl mov xchg mov fs inc icebp sbb fiadd adc and (bad) enter lcall cmp and or mov dec dec cld mov dec mov sbb mov pop or leave call fs dec dec (bad) sub cwtl cwtl and pushf mov lods inc push das pop dec pop pop push imul xor inc imul int (bad) gs cmp pusha xchg mov and mov stos cmpsb xchg mov outsb inc inc outsl les enter iret adc (bad) xchg dec or xor icebp sub mov mov test add (bad) les imul gs adc (bad) mov clc fwait aad std inc jp mov iret adc pop icebp xor (bad) fsubs and sub (bad) out (bad) enter lret xchg and inc movb shrl loopne daa and xor dec das xor into out insb mov sbb popf push mov and mov icebp aaa mov fldenv (bad) in (bad) (bad) (bad) (bad) (bad) (bad) (bad) daa movsb (bad) adc aaa inc mov enter enter mov push test pop insb jbe ja xor jp adc inc adc ret test xchg mov sbb mov xor mov and inc push into jmp sub sbb movsb adc mov sub stos push sbb rcll xchg (bad) fs outsb outsl jno and mov jp enter arpl out lahf les sbb cmp and cmp sub dec adc sub sarl jb mov sub push inc data16 cmpsb jl sub xchg xchg jbe je inc aas clc xchg cltd xor sub xor adc leave or pop clc xchg cltd cmp or inc dec push ss adc xchg flds jbe push call hlt pop in inc jae xchg pop lret jmp pop mov push xor cmp mov xlat and and pop cltd cltd or fldl add test mov push adc lea pop adc fistl loop push cltd cmp xor mov into lret (bad) into inc sub push imul mov insb xchg insb imul andl adc mov sub dec lahf mov ret adc push add xor and mov sub push push sub mov xchg or and jno pushf enter cltd repz or ja dec dec inc int3 (bad) lret lcall cmpsl mov (bad) and push sub in adc adc mov inc inc repnz sbb mov cmpsb and mov and mov and cmpsb sub test mov test pop xchg xchg pushf mov mov mov stos stos and sub cmp cmpsl stos sbb and mov sub sbb sub mov sub xor xchg xchg lcall sub pop xchg mov cltd lcall lcall stos xor mov mov sub xor stos adc mov stos mov mov sbb lods sbb xchg mov fwait xor xchg mov lods cltd fwait sub pushf pop xchg xchg movsl sub cmp cmp cmp xchg pushf lods sbb xchg pushf xchg xchg pushf cmp mov aaa and xchg mov xchg xchg mov pushf mov sbb cwtl sub xor and pop xchg xchg cmpsb sub cmp sub mov sub mov sub xor mov mov sub xor sbb mov mov mov sub xor mov daa and and sub and movsb mov and aaa mov daa and mov movsl aaa mov and mov and movsb cmpsl xor xor stos mov cmp xchg cltd stos movsb mov and cmp cmpsb fwait and cmp xchg pushf lods sbb xchg cmpsb xor cmp cmp stos aaa mov lcall sub test adc pop xchg fwait cmp pop movsb mov xor sub xor mov sub and xor mov test mov mov aaa cwtl xchg cltd xchg xchg lcall fwait sub stos xor mov sub xchg mov pop cltd test pop mov aaa pop xchg mov mov mov sbb and xor xor mov xchg pushf cwtl mov sub mov xor xchg xchg lcall xor cmp cmpsl lods sub xor pop mov sub pop cltd stos test cltd stos cmpsb xchg cltd stos movsb stos adc pop xchg mov mov cmpsl and movsb cmp mov and movsb test mov test movsb mov mov and cmp mov stos cmp sub cmp movsb mov sbb mov sbb sub mov lods xor mov sub mov lods aaa mov sub mov lods sbb sub mov lods mov adc movsb cwtl sbb sub mov sub xor test mov mov lods mov mov daa mov mov and mov sub sub lods sbb sbb xor mov sbb movsb mov cmpsb sub xor and mov and mov pushf lods and sbb sbb cmpsl cmp xor cmp mov cltd xchg test xor cmpsl stos sbb xchg xchg xchg xchg mov sub mov mov movsl sub mov test mov xchg xchg fwait and mov mov mov sub xor and xor cmp lods pop mov mov sub mov and stos pushf aaa and sub mov pushf and cltd cmp xchg mov mov and mov movsb and mov mov sbb mov sub fwait mov mov xor cmp movsl and mov mov sub mov sub cmp fwait and xchg mov mov test mov movsl and mov lcall movsl sub test mov mov sbb cltd test mov sub test stos movsb cwtl mov mov test lods and movsl sub test mov mov movsl and pop mov mov sbb aaa mov mov movsl and test stos aaa cltd and mov test movsb sub sbb mov and and xor pushf cmpsb sub test mov mov mov xchg mov mov mov sbb and sbb and mov and cmp xor cmp movsb and sub cmpsb lods mov mov cmpsb daa xor cmpsl sub test stos movsb mov movsl and pop cwtl mov and and and test mov cmp mov mov mov mov stos and adc adc adc popf rcrb rorl xchg sbb nop rcll aam pop pop aam lea into pop popf (bad) rclb pop pushf aad xchg xchg adc lea adc (bad) into or pop ficoml or add cwtl xchg push push jbe das das xor xor cmp push sub ss xor sub xor mov pop mov mov daa sbb sbb push pop into adc pop sbb mov pop or rcr rcr push or fs inc out sub lret inc stos test pushf or mov xchg and mov or jnp pop jno jns inc test or add mov inc dec ss xor dec sub sub mov inc xor into scas mov inc dec in xor cltd and rcrb xchg pop adc push xchg les mov dec clc xchg fnsetpm(287 dec addr16 addr16 in pop add in push sub cmpsl inc jl enter sbb int3 iret sub and and lret dec stos mov xchg popf frstor lods or jbe movsl inc dec nop roll jne jns push adc test mov (bad) insb cmpsb int3 pop mov push imul pop pop imul inc sbb out inc or xchg inc insb inc inc cmp cmpsl pushf sub cwtl xchg fstps add and sbb push or into call test jbe fs mov push dec stos and enter in mov inc xor addr16 test rclb nop pop xchg adc dec pop sahf pop rclb xchg rorl push xchg rcll adc test les adc mov mov inc mov aad enter xchg inc inc inc add mov mov or js adc enter xchg es or xchg inc cmc sub jae imul daa mov sbb adc mov rcrl push adc mov imul sub or adc cmp outsl enter pushf mov sub jp push push cmp jp cltd push dec movsb lret mov xor mov mov and int cltd fcoml cltd ror sahf or sub test sub jmp mov es and mov pushf and adc cmp and xchg mov inc xor inc dec inc push adc pop repz mov lods stos outsb loop xor push xchg push nop movsb push aaa inc push call cmpsl test mov xor or dec push inc push jnp ret mov sbb adc push xchg roll dec inc inc push push out dec push inc push outsl xchg xor xbegin test mov test hlt and sbb pop mov adc mov mov jns inc jbe arpl inc adc sub inc into nop and jno xor push adcl xchg adc mov cmp inc sub fs icebp xor gs (bad) test test and inc aad adc into and sbb push sbb loop inc cltd cltd and cmp xchg rolb stc push push push mov mov cmpsb lcall xchg xchg cmp push pop or mov mov pop adc xchg jb gs andl pop mov ret cld mov push mov sarl dec (bad) jbe pop arpl (bad) lret adc daa mov lods dec stos add les ja sbb or call jp and outsb gs test subl repnz push push or jl dec xchg out das inc jbe (bad) out mov imul in push jg js adc cmp xor xor push inc inc dec and dec sub je adc mov mov ret inc jns or xchg js pop mov mov stos fiadd xor loop xor call lahf adc push call mov ret adc sahf or and inc mov icebp and adc jg adc dec inc cmpsl and inc adc int3 aam inc or cld dec imul lods jb and mov and (bad) xchg dec in pop mov and int dec decl jp xor or sub stos iret icebp and cmp dec fcoms les daa je mov mov push push adc xor mov dec insb lcall push les adc mov les (bad) inc push icebp xor jo movsb jb xor outsb push inc call aaa and mov xchg sbb inc loope icebp sub jno mov nop push fimull cmc js lret in inc xor mov sbb fwait mov out dec sub stos sbb mov push int3 dec sarb dec dec call sub or jb imul mov or or mov cltd lret adc or jb test xor sbb jns stos dec arpl pop xor mov xchg xor jns mov xor jnp mov mov lcall inc mov (bad) shll mov sbb and mov jns shll ret jns sub mov xor mov or or mov sub or xorl ret xor mov push or adc or or xchg xor mov jp ret mov mov mov mov mov mov or adc push imul (bad) dec or ret pop jnp jns stos add adc dec xchg xor mov jae sub mov mov mov lcall jnp jns jns stos lret and xchg lcall inc mov jns stos lret dec mov mov dec sbbl pop jnp jns jns stos push jnp xchg jnp jns jns shll xorl and push jnp xor push and mov or mov jns jns rol ret mov mov xchg or or sbb or mov lcall or xchg mov push inc jnp sub arpl push push mov dec (bad) stos dec dec rcrl or leave mov stos cmp test mov dec or cmpl inc mov adc dec mov or or xchg pop adc or and mov sbb mov adc or cmp xchg inc jp pop dec or stos or lcall or jp cmp mov ret sbb ret push stos ret cmp xchg dec ret dec or mov mov mov fwait dec xchg mov adc mov sbb (bad) or xor mov adc mov dec or jp or or mov mov mov rolb push cmp or mov push mov and and lcall cmp or or mov rorb stos add adc dec push lcall mov ret jp push cmp or adc adc mov jae cmpl or sbb jp mov stos add adc dec imul or or or sbb mov mov stos mov and xor or dec mov mov dec (bad) popa jns inc xor inc leave jns jns inc push (bad) bound jp push stos shll mov or jnp ret stos sub dec lret dec and leave mov cmp jp inc stos push mov mov mov and jns xor jnp and sub jns dec mov lcall lret jnp ret dec (bad) lret stos ret pop dec (bad) lret mov scas and mov mov sub and sub mov and daa sub cwtl cmpsl cmpsl sub sub mov lods xor movsb mov adc pop pushf cwtl xchg movsb cltd and test pop (bad) adc xchg or adc mov xchg xchg rcrl adc pop or push or sub sub imul cmp xor sub pop pushf mov and sbb mov sbb pop int push push jp jns sbb xor mov push inc adc or or mov ret mov bound js mov push xchg adc adc and imul dec push push cmp dec dec inc inc dec decl stos aas mov xchg adc mov sbb adc xchg mov mov lret or dec push adc loop outsl test sbb cmp mov and cmpsb sbb xor mov movsl and mov cmpsl and xor lahf mov mov aam mov stos mov test xchg push inc sbb (bad) sbb rclb or nop pushf dec pushf loop bound sub imul inc enter rolb add mov dec or push xor or sub inc jae adc xchg push mov fs (bad) cmpsl jbe je cmc ss and sub dec es arpl clc xchg xchg bound loop ja cmp lods rcrl adc rcrb pushf mov jne sub sub test inc push inc mov mov outsl or push test into xchg jg cmpsb lahf xor or inc and je je gs addr16 cmpsb insb xchg cs push (bad) popa jns inc xor inc int3 dec or fiadd xchg popa xor push lea sub pop rclb nop push adc mov xchg mov inc push cmp jne aaa dec xor jns dec mov cmp fldl push dec iret add les and mov roll and leave mov mov xor or push bound xor mov mov cwtl in out push xor xor xor pop jp dec xor adc xchg xchg xchg dec (bad) xchg icebp xor icebp xor (bad) hlt rclb shlb lods and lret push inc es test or or clc popf shr dec inc daa push call dec icebp daa stos and sbb pushf adc in add mov or push cwtl test adc cltd adc push arpl hlt in and jp nop enter out push shlb pop xchg cltd fs xor ret ror inc bound xchg sub jp cli inc sbb jnp xor xchg sub dec ljmp adc or or imul dec jb outsb xchg and sbb xchg mov (bad) and mov dec pop inc das push icebp and mov in jmp out leave sub insl lret push les jno dec dec inc dec insb dec dec dec arpl inc inc rcll sbb push xchg sbb adc pop (bad) mov sub or adc nop lods test shlb cld leave out (bad) or dec push dec adc cmp adc rcl pop rclb adc es xchg repnz lea jb mov add in push loop pop adc push and mov mov cmpsb mov lock sahf fs aad add sbb das cwtl rcl dec movsl mov mov xchg add (bad) and test jae xor mov and mov mov xchg mov xor and mov lods and arpl mov mov movsb out dec ss push adc adc (bad) out (bad) enter dec xchg dec (bad) scas bound adc push and outsb daa inc (bad) and jg add lea xor mov ret pop daa fs sub sub mov xchg mov inc sbb and push sub sub add ja dec jno imul enter push int3 pushf daa xchg or mov push call mov mov mov mov sahf push pop xchg cltd fnstenv test and mov mov push sbb fdiv sbb jle mov xchg dec and call push pop adc adc imul xchg sbb or sub cmp fwait mov shrl lret adc mov sub or jp jns fwait pop sbb adcl xchg cmp or imul push adc adc or or mov or ret and sbb or imul push adc or pop pop adc lcall dec mov pop (bad) sub cmp fwait mov shrl lret sbb mov adc pop adc sub and mov or lret imul push sbb adc or or stos dec or stos dec or jae sub sbb mov dec mov mov sbb jae popa mov bound or jno sbb or popa xchg sbb or sbb sarl xchg jp jns xor mov sbb and lret bound adc push xchg sbb pop fwait stos inc sbb sbb mov sbb xchg sbb sarl sbb and and (bad) mov and mov ret roll cmp mov jp sbb pop xor xchg ret stos jno shrb and mov cmp or sbb sbb pop cmp (bad) adc or inc xchg sbb or push sub mov pop mov (bad) mov or mov jnp push or or fwait mov dec mov mov and rorb fwait mov pop cmp and mov sbbl (bad) or dec andl jp or sub jns and xchg sbb sub xchg mov (bad) mov adc jp lret mov mov stos jno lret inc adcl imul inc dec or pop xor pop push imul ret inc mov mov subl dec dec xor push sbb (bad) or mov jnp jns jns mov dec xor push adc (bad) or mov jnp addl jp or or mov dec popa ret push inc xchg sbb or push sub mov pop mov (bad) mov or mov jnp push or or fwait mov dec mov mov and rorb fwait mov pop cmp and mov (bad) lret cmpl or mov jnp lret xor mov push mov jp or sub cmp or sbb sbb pop cmp jp shll cmp dec jp dec pop mov ret sbb mov jnp push or or fwait mov dec mov mov and or fwait mov pop cmp xor mov (bad) lret cmpl or mov jp and jns pop inc rorb or or mov or ret and sbb or imul push adc sbb or or pop pop adc sbb xchg sbb or sub cmp fwait mov shrl lret adc andl adc rol cmp mov sbb xor sbb or mov pop ret mov ret dec jnp mov xor jp jnp jns mov fwait sbb or or jnp mov jns jns andl stos cmp jnp test or jp adc jnp mov dec xor sbb stos jno push xchg inc jns lret mov add adc jnp mov mov inc mov xchg rorl (bad) stos lcall (bad) mov mov (bad) ret jns arpl pop cmp inc push mov jae xor pop sub mov ret or mov mov adc mov jnp push (bad) cmp lret dec xor jp adc or adc mov stos lcall mov jp sbb or cmpl fwait cmp or pop and pop mov or mov jns jns sbb xchg rorl pop pop dec inc lcall rol dec addl jb sbb sub xchg mov mov xor jp and mov jnp xor push (bad) lret ret mov mov mov ret jb dec jns lret jp or xchg nop aam push pop push adc ror adc fxch fstp rcll rcll push nop nop mov rorb dec xchg ficom nop pop rcl dec int3 (bad) rcr dec sbb dec aad lcall adc adcl pop pop or ret and pop aad inc (bad) fwait adc xchg xchg test lcall inc and rol in dec sbb movsb mov mov xchg or mov and mov lret sub dec sub out or push enter sbb loop inc mov lea pop bound pop jb mov aam xchg fs mov gs jne xchg (bad) shrl cmp daa aaa and fstps xchg int3 fstl icebp aaa xor js push mov xor (bad) sbb mov pusha mov sub push inc das jmp xchg movsl push inc xor repz push xor or push add and jp imul push or out lea adc fwait out dec jns pop inc rorl sub push or jp and rclb adc pop rol or mov sub mov inc mov pop xor mov popa mov and sub les adc lret int3 xchg jecxz and rcll lcall rorl movsb xor and mov cmp out xor xchg and xchg and adc push lahf mov mov arpl adc adc pop push add xchg (bad) (bad) (bad) (bad) inc mov inc adc mov and cld dec sub inc inc outsl inc pop xor adc sub outsl push imul adc jns es pop xchg mov jg mov jg mov addr16 dec inc inc inc pop cmp roll (bad) dec call aam adc test jnp mov xor jp jnp jle cmp pop jae cltd mov push sbb xchg test hlt and adc xchg sbb jo xchg push xchg inc push pop push push add lahf and mov or inc cmovbe sub or imul popa push test inc bound adc adc fmull inc dec mov ret or movsl adc fcmovu test inc and and mov mov mov bound repnz pushf fimul das push addr16 arpl xor pop and pop lret push sub rclb (bad) push sub xchg sub jl es or inc inc inc incl and aaa mov cmpsl mov cmp fs dec dec cmp pushf dec or cmp mov mov mov inc mov inc xor (bad) push xchg into cwtl mov xor mov test xchg cwtl xchg adc mov (bad) sub dec xor and push adc les inc dec mov dec push push push je jp xor lea in inc fs les adc nop roll xor and mov mov lret cmp popa rcll int xor dec lea and test mov sub mov adc adc dec int3 mov xor sbb dec test push xor sbb les mov cltd sbb push xor inc inc adc gs inc xchg jecxz lcall push xchg or pop and jl inc in ja ja pop js or sbb rorb mov xchg sbb cmpsl or pop pop dec (bad) clc xchg pop movsb xor inc loop inc and mov push popf in addr16 jno mov nop int xor and jmp adc and test xor insb inc xor inc mov aas mov movsb rcll aaa xor sbb dec in inc xchg cmp mov or in dec int and xchg out mov stos jnp mov or mov mov (bad) loop jae movsb int3 int mov pop icebp cmp mov nop cwtl lcall mov and les sub jns push mov xchg lcall push addr16 cld dec sub (bad) lret lods sub mov inc dec mov xchg mov sub adc movsb dec imul cld dec dec stc adc (bad) andl fwait roll ficoml xchg jmp test add fs test xor inc jecxz adc (bad) and sbb popf sarb aas and sbb jbe adc mov and inc ret cmp mov and cmpsl outsl inc push dec enter pop and and movsb bound adc mov pop push and jle xor dec dec xchg and mov or or jns sub pop pop jo mov loop inc dec dec ja inc inc inc push imul push cmp inc inc dec insb inc dec inc inc inc sub push push inc inc outsl bound das das das cmp inc js ss dec inc inc dec xor dec push inc inc inc inc push push dec addr16 jno inc inc cmp push push imul inc inc inc inc dec push inc inc inc push push cmp dec dec inc inc dec xor inc js push xor push ja inc push dec insb arpl jp inc push push push push inc dec fs push imul jbe das das sub push arpl inc inc ja inc outsl dec gs das das xor inc inc xor inc inc addr16 inc push push imul das fs push addr16 push imul inc inc push cmp dec inc js das js pop xor inc inc imul push xor dec pop inc popa addr16 xor imul inc inc inc push push cmp dec dec inc inc dec xor dec inc inc inc inc inc push das js push xor inc inc imul inc inc inc dec dec push ja inc push dec xor dec inc inc inc inc inc push push push imul inc inc inc inc das inc gs push push inc jno dec xor dec ja inc inc inc push push push imul push push push imul inc inc inc outsl addr16 inc inc inc dec xor inc inc inc inc inc inc push push push imul inc inc inc das inc bound push push inc push push push imul inc inc inc xor inc dec inc inc dec xor inc jp dec dec pop das das das pop inc dec inc imul push inc inc popa inc push inc inc inc inc dec push ja inc push dec xor dec inc inc inc inc inc push das js ja push inc inc imul xor ja inc push inc inc inc inc dec jae push dec dec inc inc push cmp inc jns push inc inc inc push dec xor dec ja inc inc inc push das cmp ss dec inc inc dec xor dec push inc inc inc inc push push dec imul cmp push push imul inc inc inc inc dec push inc inc inc push push das push push push imul inc inc inc inc dec push inc inc inc push push cmp dec dec inc inc dec xor dec inc inc inc inc inc push das js push xor inc inc imul inc inc inc dec dec push ja inc push dec xor dec inc inc inc inc inc push push push imul inc inc inc inc das inc gs push push inc jno dec xor dec ja inc inc inc push push push imul push push push imul inc inc inc outsl addr16 inc inc inc dec xor inc inc inc inc inc inc push push push imul inc inc inc das inc bound push push inc dec push ja inc push dec xor dec push push inc inc inc push das cmp push ja inc push dec xor dec push push inc inc inc push das js addr16 inc inc popa inc push inc inc inc inc dec push push inc inc push dec xor dec addr16 inc inc inc push das js cmp inc xor xor dec inc push inc inc inc push push push imul inc inc inc inc das xor push inc inc inc push dec push inc addr16 inc push ja pop dec imul popa inc push inc inc inc inc dec push ja inc push push cmp dec inc jp inc push inc push ja sub jbe das das das cmp dec inc push das inc push push push push inc outsl inc inc inc inc inc dec xor dec ja inc inc inc push das xor dec push cmp dec inc inc inc dec pop inc inc xor xor data16 das pop ret and mov mov cmp sbb mov and test sub cmp xor movsl and cwtl leave adc and push push cmp push pushf loope xor xchg add or mov movsl and lds or cmpsb sub les inc ja stos dec arpl inc sarl xchg push inc mov pop mov mov popa pop bound cmp and mov adc xchg nop pop (bad) aam inc test sub adc je testl xchg xchg inc xor loop dec adc icebp sub hlt push and daa adc inc push cmpsb jb cmp fisttpll mov adc icebp ss inc bound cld dec lcallw xor jp jl dec test push inc inc push and or inc jl dec cmp scas icebp xor mov and out in stos test cmp cmpsb mov mov lea push cs clc mov jg gs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc xchg lea sub push test inc mov into movsl mov xchg add clc nop push mov stos cwtl aam int3 mov (bad) jo pop jmp inc push inc push inc sub jbe das les clc mov les xchg adc pusha pop int and adc push xor mov cmpsl mov (bad) aam inc and xchg sahf add scas in dec imul mov es insb adc int3 into jmp bound movsb and mov or mov sbb xor mov and push shlb inc inc inc enter mov add cmp cmp adc adc pop mov cld dec test es scas (bad) out popf adc mov adc fcoml dec test mov mov sbb xchg rclb and lret dec cmpsb addr16 jbe imul inc dec popa inc adc pop test fs (bad) mov (bad) and fwait les xchg popf sbb aas les bound sbbl cmp and dec inc popa dec cmp imul xchg into and jmp out push mov loop inc and push xor cmp dec adc lcall loop xor cmp mov jae stos push xchg nop mov (bad) shlb popa lea pop movsb lods in and lods jmp mov dec xor mov insb gs nop fstps aad (bad) cmovbe lods js rolb loop xor xchg nop mov xor xchg adc (bad) icebp sub xchg scas inc and inc adc cmpsl cmp rclb pop popf into sbb adc inc addr16 xchg sbb loope shll inc scas adc pop and jp pop mov xchg cmp stos mov inc (bad) clc popf push jle xchg jg mov test repnz xor in outsl xor (bad) and (bad) hlt mov adc push push adc inc push (bad) idivl adc dec or sbb icebp and loop pop mov data16 sub adc sbb sbb or insl pop push imul addr16 xchg test adc daa or in cmp xchg dec mov sub mov or les cmp xchg mov inc imul mov int inc rorb inc cmp and sub fs dec push dec mov sbb icebp and repnz and pushf mov sub jg adc fcomps loop inc adc and cltd leave mov or shlb testw cmp adc (bad) sub pop insl in dec ja and lea and enter pop arpl cmp dec stos dec sub les and mov outsb mov inc inc dec fs pop les jb sbb cwtl jg lret lahf les inc xchg xchg les xchg pop adc rcrb mov (bad) push pop rclb xchg push sbb (bad) adc push sbb fxch fstp aad fstpl rclb push pop pop rclb lea adc rclb push push pop adc push push or ficoml push push push push or push push rclb or xchg adc sahf lcall push xchg pop xchg push push push push or adc push pushf rcrb sbb adc mov push dec push lea rcll pop aam or sbb xchg fst adc dec dec popf fcom push push push adc int3 xchg or dec xchg lea push push mov fmul push xchg rclb pop push push push pop dec or sbb rcll pushf dec lret lret lret rclb mov dec fwait rorb pop mov cltd lcall cltd sbb pop rorb push or rcrb rcr xchg or mov aad fcmovnbe ficoml int3 dec fwait rorb pop mov dec ficompl (bad) push push adc (bad) sbb or dec sbb rcrl rcrl adc rcrb xchg aad pop pushf (bad) pop or pop fsts push pop rcl adc push xchg adc nop lea sbb push push adc push push push pop pop xchg cltd int rcll pop mov sbb push pop pop rorl rcll push push dec lret into push dec ficom push pop xchg push sbb (bad) adc nop push push or cltd lret (bad) sbb pop push popf rorb cwtl popf rcll push ficoml adc push sbb (bad) aad xchg push aad lret lret lret aad dec xchg lea lret int3 push or cltd adc adc push pushf push fcmovnu adc pop rorl int3 dec adc sbb sbb nop push push or push xchg or push or push push pop fsts push pop rcl adc sbb xchg lcall or xchg lcall rcrb rclb xchg lcall or pop int3 xchg popf aam mov int3 push rcrl lret into push dec into pop pop or lea push pop rorb xchg (bad) pop xchg mov ficoml lret lret int fmull lcall rclb push rcrl lret into push pop xchg push rorl mov aad push dec push rcr lret int3 adc lret ficoml push push sbb pop rclb push rcll sbb or int3 fwait ror into pop sbb push or sbb push pop push pop rorl rcrb rorb rcrb pop aad aam lcall rclb push sbb adc push push push fcoms cwtl rorl pop adc push rclb rorb xchg (bad) pop xchg push sbb (bad) adc nop push fimull pop xchg push sbb (bad) aad xchg push adc lret lret aad dec xchg lea lret int3 push or pop int3 cltd or lret fstpl int3 (bad) lcall int3 mov lret fcomps mov dec fwait rorb pop push push sbb lret lret into push dec int3 (bad) or int rcll sbb push sbb adc lret lret lret lret fstps lcall push push fimull lea push pop adc push adc xchg pop sbb push dec rcll lret lret int sbb lcall inc pop ret movsb mov and mov mov cmp cmpsl mov aaa mov and sub cmp aaa mov xor mov mov add sbb dec sub push mov insl or inc inc xor inc bound dec push push jp push push inc dec push gs push push pop inc push push das pop inc aaa fs xor ja andl inc inc adc ret xor or pop aam or sbb xchg fst adc rclb push adc int3 xchg or xchg push xchg test fsubp jb sahf xchg test adc xor adc test xchg test cmpsl adc mov mov pop cwtl cltd aaa mov cltd movsl xor pushf fisttpll xchg movsl xchg inc popf dec rcll add fdivrl push mov mov mov loope lcall and mov lcall lret mov int3 in scas push mov fs xor bound nop lea nop mov mov mov lods into push adc adc push push dec jb pop icebp cld (bad) or leave call test jb je inc push xchg addr16 xor cltd add push loop push and stos dec xchg xor mov cltd adc or push and cltd sbb sbb mov outsb and enter or outsb das xchg sbb movsb enter mov mov aam mov push ret xchg adc xchg mov stc or jb rcrb push dec sub sbb bound int3 mov mov call cltd sbb cmp cld dec call jne xor dec push lods test jo xchg test (bad) mov icebp sub popa cld dec or loop fs mov lcall inc call sub sarl outsl mov add pop loop push mov and fwait xor ds (bad) mov je xchg push jae sbb xor xchg fs adc hlt xor adc xchg mov inc xor xchg test dec jns push aam xchg xchg inc inc aaa dec inc inc dec inc push push insb outsl inc push inc imul mov mov imul add or lea add test inc inc adc loop inc adc addr16 xor push xchg sbb sub (bad) sub mov lds inc inc add dec inc jp pop xor inc inc push dec les jl or and sub and ret push sub data16 mov out lods incb push fs aaa xor int push fistl rclb fs or mov lret (bad) sub pushf mov inc dec jns les mov push repnz cwtl cwtl mov xchg popf fstps ficompl (bad) and js pop jae xor lods cmp sbb xor popf ror inc inc push (bad) out dec or push xchg xchg cmp stos push xor es dec test call cmp cld dec dec lahf (bad) decl push xchg push dec cld dec sub aas icebp xor dec ljmp or sbb mov xor stos sub pop repnz xchg mov and and cltd and mov movsl dec xchg xchg call jae dec push mov adc sbb xor cld dec dec cli push jns inc roll cld dec sub push pop inc ja popa cmpsl adc nop fnstcw xor and or lret sub sarb mov sub pop es adc push xor pop adc cwtl sar sbb xchg push repz les mov daa and mov sub repnz lea jnp int and dec in (bad) xor inc lret adc and cmp lret int xchg sbb mov mov lea js adc or icebp xor mov inc js pop push inc pop les mov sbb and cwtl push jno cmpsb enter jecxz xchg push mov fwait xchg movsb push pop aad (bad) (bad) sub push mov push dec sub cltd adc or push mov jmp je enter aad mov push dec cmp push outsl push imul xchg pop xor mov cmpsb movsb aaa movsb cmp mov test into xchg int3 pushf pushf push movsb fisubl xor or ret or cmpsb shrl inc push xchg sbb stos out les jns and adc mov insb clc xchg adc and fs lea push ficompl dec fisub testl testl mov adc xchg hlt in adc add adc add fs in adc push daa xchg xor adc gs je pop xor fs arpl divl push push ret and add movsl push test les adc mov adc push inc fs hlt adc xchg les xchg add inc xchg ret xchg movsb xchg adc movsb ret push mov adc add and adc inc test inc pop inc mov push xchg test ss test notb xorl xchg xorl xchg test xchg inc mov push xchg push inc push ss adc addr16 adc adc adc addr16 xor adc adc push es push push mov adc gs cmpsb movsl adc ja movsl adc fs (bad) repz push lds adc adc ja xor lds hlt gs cmpsb movsl adc data16 hlt (bad) inc ret cmpsl fs adc ss xchg adc mov (bad) xchg push test adc push je addl adc push adc xchg lds hlt in adc adc adcl daa xchg xor inc je and test repnz fs xchg and xor xchg je adc test inc mov push xchg cmc push hlt mov repnz inc push inc notl mov mov xor notb notb inc repnz test data16 movl notb hlt mov ret inc inc push movsb inc inc testl adc push cmc aaa xchg adc xorl (bad) jne jbe push data16 adc and daa mov push push data16 adc jne pop (bad) xchg adc in xchg adc arpl add mulb adc hlt adc cmpsl cmpsb xor gs xor cmpsl inc push (bad) and and push mov adc xor repnz fs xchg gs je repz push mov adc xor fs adc push push ja repz xchg inc push movsb and adc xchg not arpl in cmpsb xchg andl jne xor repnz cmpsb hlt pop je adc xchg test inc xchg fs hlt gs movsl adc adc repz inc test adc movsb xor adc test inc add push xchg add xchg adc movsb and push repz add adc adc mov test (bad) push inc xor data16 push ja test xchg mov inc je and mov mov xor notb cmc daa xchg lds je les xchg push xchg add fs cmpsl push xchg inc pop (bad) repnz aaa add mov in test adc cmpsb mov adc adc jbe push adc cmpsb mov adc hlt cmpsb cmpsb movsl adc adc adc inc bound addl daa xchg addr16 addr16 xchg add test repz push xchg adc hlt xchg xor movsl addl cmpsl adc fs cmc push pop xchg addr16 fs mov push push xchg adc add mov sbb pop xchg cwtl xchg mov and movsb mov mov daa cmpsl and in sbb stos add sbb push lea pop rclb rorl xchg xchg xchg aad fst or push or adc lcall sbb push lcall xchg pop rclb adc adc pop xchg dec push sahf xchg or push pop aam push pop adc push adc adc cltd sbb (bad) mov mov xchg sub mov dec push bound ja cltd adcl lea rcll dec pop adc cmp mov or es inc push xor test sbb xor sub mov test or add js movsb and xchg lods inc mov inc push dec fs das das jp inc fs push jns dec jae dec cmp imul push jno push inc insl xor sbb (bad) or lds cwtl (bad) test sub imul or leave inc popf adc or mov gs rorl cmpl jns jns mov pop pop pop (bad) sbb jnp addl or cmp inc adc xchg push mov or in in lods adc test fwait mov lods cmp pop test fs dec data16 push inc adc mov jecxz roll lea ljmp dec push push push in dec mov push mov xchg adc mov in out dec imul push inc out int3 vmovntps dec inc dec push dec insb pop cmp insl inc xor dec dec ss xor addr16 xor adc xchg push les cltd push es inc inc das inc push xchg or push xchg lea push nop in pop xor adc xchg push bound adc lds lods lods mov push inc and xor iret sub sub xor xorl aam pop es dec push dec addr16 repnz pop out stos (bad) loopne nop insb push xchg cmpsb mov xchg mov imul pop dec lcall adc rclb mov or das dec mov inc movsb cmpsl sbb imul cltd test xor sbb cmp dec out pop cltd lods sub sub mov sub cwtl lcall push lahf cld iret sub int3 call int3 fisubr rcl sbb (bad) mov xchg mov cltd or jb call push movsb xor and xor push aam xchg and dec mov int3 pushw in xchg push mov xchg push (bad) stos ret adc xor cmp cltd popf inc dec test dec das dec call in out sub mov lods jno mov xchg push fwait pop xchg jb mov sub adc flds or xchg fcmovbe mov mov pop sbb mov jae and call xor cmpsb movsb mov xor sub enter xchg and sbb jl test daa mov push stc adc into adc push lret sub daa or bound leave cmpsl sub out xchg push dec sub adcl imul mov lcall xchg xchg xchg movsb lret repnz out inc xchg movsl xchg sbb sarl sbb xchg dec dec test or inc mov clc xchg pop ds add adc inc mov repnz mov mov gs adc push jne ss xor loop dec adc cwtl xchg push dec inc addr16 push enter lock loope sbb inc sub sub adc and scas jo mov xchg les push insl mov cmp dec out sbb ficompl bound mov xchg mov lret cmpsb sub xchg arpl dec inc loop xor inc xor dec push xor enter and (bad) xor (bad) or (bad) leave stos out xor mov les gs inc xchg les xchg xchg and cltd pop fstp lds fwait sahf jge movsl cmp dec dec push rorb leave mov mov mov test stos cld leave or in push loop push (bad) int3 lret jno cmp xor inc adc das inc movsl xor xor inc dec push nop leave pop xchg inc adc mov icebp sub jno test fcom (bad) imul out push nop rolb xor mov mov cmp ficoml dec dec (bad) pop clc xchg xchg dec cmp push insb ja dec dec insb push push das das das cmp push push xor xor inc dec das bound insb pop push das das das cmp push push arpl dec dec pop popa jns pop bound push push das das das cmp inc inc inc js push outsl das das das das inc addr16 inc inc dec insl bound das das cmp arpl das das xor push addr16 dec inc inc inc das push push push aaa ja push insl popa addr16 dec das das cmp ja push popa imul imul push dec push popa jns push inc push push ss bound das sub imul js popa addr16 push das xor push inc jp das das sub imul imul dec dec insb pop push das das das cmp addr16 push das xor push dec xor das das sub inc dec push arpl inc inc inc das push push push fs cmp das das xor jno xor pop jp das das imul push arpl outsl inc push push cmp dec pop inc inc xor xor data16 das outsl popa jns push addr16 inc ss dec dec pop imul addr16 inc inc dec inc outsl jb dec inc imul push dec imul addr16 imul jae arpl push dec inc inc inc inc dec push push jns inc dec imul dec dec push imul inc sub inc inc inc inc dec jae imul imul pop ja jp inc imul je inc dec push das popa push inc inc inc push cmp xor push xor inc inc cmp push pop addr16 inc inc inc outsl addr16 insb inc inc push cmp ss ss das sub inc sub ja inc inc dec je inc dec je inc inc outsl inc ss jns das das sub pop das fs inc dec push imul addr16 jp xor ss jbe imul inc dec cmp dec push popa inc dec addr16 xor je inc inc dec inc das xor xor xor sub cmp imul inc arpl dec jp outsl inc das jp jno push cmp xor inc insb inc inc push cmp inc dec push jb das das push sub jns das das imul das das xor inc fs je jne imul jae das das xor popa inc push inc push addr16 das fs outsl js inc inc inc dec push inc inc dec pop inc fs push dec push addr16 push imul dec jae das sub pop das fs dec dec inc push push inc push addr16 jp xor push pop push fs inc inc addr16 inc push inc inc push jo addr16 ss jo push inc popa inc dec inc inc xor gs dec cmp push imul xor das jp jno inc dec push popa dec addr16 push addr16 das fs push dec jno das das xor push xor gs jns das das sub dec push dec push dec insl pop jb dec inc ss dec das das sub imul inc inc ss dec jp jp inc cmp dec imul das xor push xor je inc push cmp dec dec outsl inc push inc aaa inc sub data16 das das ss jae imul xor ja addr16 dec push pop outsl inc xor jno jbe das push pop dec ss xor das sub dec xor outsl inc insb inc dec jp push jns das das outsl popa jns push addr16 inc ss dec dec pop inc inc ja sub ja inc inc dec inc outsl jb dec inc imul jns push xor inc imul arpl das xor dec dec push cmp dec xor inc inc outsl push jo das das xor dec inc dec dec outsl inc insb inc dec push arpl je jb das xor dec inc dec dec outsl inc outsl insb fs dec pop inc inc xor pop inc inc inc inc imul xor jp dec push xor inc inc imul dec jb das xor inc dec push cmp dec xor inc inc outsl inc pop das das das xor inc inc dec dec outsl inc insb inc dec push arpl arpl das das xor inc inc dec dec outsl inc outsl insb fs pop inc imul push imul insb inc xor inc inc outsl xor das das xor inc xor dec xor dec addr16 jns das das imul cmp dec je inc dec xor dec imul imul pop outsl ja addr16 dec push pop outsl dec jne push js das push gs ss dec xor push push das das sub dec xor inc cmp outsl inc push inc cmp dec inc data16 das das das cmp jp xor inc inc outsl push cmp das das cmp jp dec jno sub jo das das imul addr16 inc dec inc inc das xor das xor ss jno das das sub data16 pop pop push xor dec je das das das xor ss dec dec das das sub jp dec push xor inc xor bound das cmp jns imul jae inc dec push push pop insl push dec inc push inc inc inc inc inc bound dec xor jae inc inc dec push inc sub dec and das das cmp push push xor xor inc dec das bound insb pop push das fsubrs mov mov movsl sub mov and sub jo (bad) (bad) inc addl nop pop int3 (bad) xchg fcmove les xor out push mov test stos stos es out lods lods sub stos es cmp push fs mov cmpsb xchg cmpsb (bad) cmpsb cwtl test push shlb insb nop les xchg rcll and xchg cwtl mov test and and push xor sbb int in mov (bad) jmp sbb push int rclb (bad) pop cltd cmpsb push ja ja push fdivs mov and and mov mov and mov pop push ret sub mov cmp or pop cmp pop dec or push and mov stos sub mov into inc cmpsl adc sub cltd and mov cltd adc inc adc mov (bad) hlt mov push rcl xchg or inc inc or jp dec xor push dec dec adc sahf shlb cmp mov dec call and fld inc push ja je inc dec je inc inc outsl inc adc movsl push pop dec sarl cmp cmp mov xchg sbb fcmovu sbb and mov daa mov sbb lods xchg or rcll in lods int dec sub dec push xor mov or xchg pushf fs xor pop lods popf inc in inc jbe andl dec call jmp push fisub dec mov mov push popf dec inc lret sub leave leave out jl mov jmp mov rcll xor sbb and xor gs push (bad) ja jae cmp test lods dec inc inc xor gs dec cmp push pop aam mov mov dec enter sahf jecxz xor mov out insb mov nop mov mov mov xor (bad) push inc adc xchg shll ret push lods mov or fnsave inc call fdiv sub stc sbb xor es movsl adc sub scas decl ja repnz stos (bad) enter and mov dec push cmp dec xor inc adc nop shll mov xor movsb les lea and fcomip and cld dec int push push aad adc stos adc cmpsl cmp mov icebp sub movsb lods in and cwtl movsb lock es movsb and xchg fldl pop icebp sbb clc xchg sbb cmp cmp adc enter mov mov fs push cmp lret and popf adc push inc adc or adc xchg adc and sarl jno mov inc test cmp xchg int3 aad lea or sub adc mov mov in dec popa push push push inc push int3 loope inc in and inc mov out inc shlw xchg movsl or and bound adc loop push adc xchg fs cli xchg (bad) hlt sbb and lcall stc or jb and jg aad adc dec dec das push adc push inc xchg and iret push rcrl cwtl sub lcall loope adc cmp ds xor fs arpl adc push xor ret mov fisub in inc or xor mov dec mov sahf push and arpl mov frstor gs push dec mov push aam arpl sub xchg mov and sub xchg mov xchg mov and mov adc xchg cmp jno and adc ficom test enter in inc xchg inc xchg dec adc or loop aaa in cmp icebp cmp dec jg push sub cwtl dec or mov pop inc mov lods enter cmp mov pop gs bound jp imul adc lahf repnz fwait and sbb aad sub mov and pushf adc (bad) fisub pushf xchg or mov daa mov push dec js adc or mov loop imul fs dec inc push inc nop fldl2t dec mov inc ss es mov mov mov cmpsb mov movsl and mov xchg cltd stos movsb mov mov aaa xchg mov mov xor cmp mov mov mov mov xchg mov mov xor movsl and mov mov cmpsb mov mov cltd stos movsb stos cmp xor mov sub mov movsl xor mov aaa movsl mov cmp sbb sbb and mov mov and stos cmp mov mov cmp cmp xchg mov mov mov stos cmp xchg mov mov mov xor mov mov mov sub mov sub mov mov aaa mov mov sbb and mov mov mov pop mov test mov sub cmp pop xchg mov mov mov xor mov mov sub and and sub sub mov test cwtl mov mov mov mov mov sub cmp and and and cmpsl lods and mov lods xor sub mov mov mov test mov pop mov sub movsl and xor mov lcall movsb mov xor mov xor mov sub lods mov mov stos mov sub sbb movsl movsl sub test mov mov mov movsl and and movsl and test mov xor mov test mov mov sub mov and lcall fwait mov mov and mov xchg xchg cmpsb sub mov movsl sub test mov es mov xor mov lods mov cwtl es xchg cwtl sub mov and test and pop xchg xchg xchg mov and mov sbb movsb fwait xchg mov pop xchg xchg lcall mov mov sub and and cmpsb xor test mov mov test sub mov mov movsl and mov xor mov mov mov movsl lcall and pop mov mov xor test stos cmp mov mov and mov mov mov xchg cltd test mov sub xor test cmp and pop xchg lcall xor sub mov mov mov mov pop cltd test mov sbb cmpsb mov cwtl sub mov and sbb and sbb mov mov aaa mov xchg mov mov and mov mov mov mov sub xchg xchg mov xor mov mov xchg xchg mov mov mov mov cmp aaa mov cmp mov mov sub mov xor mov mov sbb and mov mov mov mov mov mov mov sub and mov sub xchg test xchg mov xor test and mov mov cmp mov and movsb aaa stos test cmp fwait mov mov cmp mov movsl test test mov mov xchg test xchg stos stos and mov mov sub test mov mov aaa mov mov xchg xchg mov xchg test xchg mov cmp mov test mov fwait mov xor cwtl and cmp movsl and sub and and cmp sub cmp xor mov mov xchg mov sbb stos mov mov mov cmp mov mov mov cmp cmpsb mov cltd sub and lods and mov mov test mov cmpsb daa and cmpsb xor mov and and and and and and and mov mov mov cmp mov mov mov mov ja sub push dec inc inc dec fs dec inc push inc inc inc insb pop data16 xchg shlb (bad) mov pop pop rcrb mov mov and aam or cmp rorl lea sarl xor pushf int3 leave push es inc addr16 inc push int3 lods in jo (bad) sahf inc adc inc push or stos sub push mov xchg out pop pop push xchg and mov in mov test mov fcmovbe push push popf pop adc sbb sub inc xor (bad) into in cltd or add push or test inc inc push xor adc dec jb sbb or mov (bad) and sbb or push adc xor addl pop adc (bad) les xchg movsl and adc push xor or adc enter sub xchg mov push lret aam int sbb or pop jp or xor inc notb xchg push dec dec ljmp add dec test or push cltd or or dec mov pop mov lods call xchg fucom and stos lods out and sbb movsl movsl inc sub jae cltd sub and cmc or sub out inc inc bound sbb mov inc adc add leave cmpsb out dec imul call sbb mov adc dec push mov lods mov adc das xor cmp movsb addr16 push nop lods mov lods enter lret rcll inc cmp fcmovbe movsb xchg mov sub jne nop scas mov adc dec mov stc sbb sbb mov movsb movsb and mov adc xor dec outsl je (bad) es and mov enter jb xchg sbb ljmp dec dec js push jl sub cmp lea in faddl sbb dec test cltd inc popa test inc xchg lcall insb lock fisub add xor mov data16 xchg push and loop xor mov push int and subl mov mov and rcrl push sbb or push outsl (bad) lock xor scas inc push jbe (bad) push mov movsl cld dec insb mov stos jg insb jae das das sub mov mov fnstsw jns xchg push sbb (bad) popf stos jne xor pop jbe xor mov xchg push add push jl mov in fmull adc mov insb lods adc inc inc addr16 (bad) xor bound adc xor addr16 loop xor mov and rcrl and xorl dec bound xor mov shll arpl mov loop push enter insb jmp movsb cs jnp xchg gs cmpsl jae je je push mov ja notb movsl add xor mov xchg sbb rcll dec cmp or mov test mov out sub jns (bad) rorb cmp sub aam test sahf pop xor mov hlt jb adc nop xchg es push dec cmp cmpl lcall and sbb adc stos add dec inc inc les mov and fmuls mov and lods cmc or sub cmpsb push pop les gs mov inc dec (bad) je les mov dec imul enter xchg mov mov pop sbb fsts loop push loop inc adc frstor adc test test fs inc fs xor sub (bad) rclb leave loop outsl mov adc dec int3 fcoms icebp ss (bad) into inc adc jbe mov and dec sbb or loop pop les and sbb cmp xchg int les xchg xchg jl stos cmp pop adc mov es xor cmp js adc xor lcall insl xor inc xor inc das jp xor push xor inc inc das ja xor inc dec push fs xor inc inc inc inc das xor inc inc dec xor inc inc pop das js addr16 inc inc push outsl push sub jp inc aaa pop inc das xor push fs xor inc inc inc inc das xor inc inc dec xor inc inc pop das js addr16 inc inc push aaa insl dec jb dec inc ss sub das cmp das cmp sub push inc dec inc inc inc dec inc arpl dec inc das xor ja addr16 dec push pop xor inc das das das das push xor fs das inc push push addr16 push inc dec push push push dec push inc inc jno push outsl inc popa dec bound inc ss push inc inc addr16 imul pop jns push addr16 inc ss dec inc ja xor outsl pop imul push jo jp das ss dec jb dec inc push cmp inc push xor dec popa sub xor dec xor das das pop insb das dec ja push dec aaa dec push imul jb popa dec jp push push inc imul inc inc inc inc push pop dec imul inc inc dec push jae inc dec push push push imul jo data16 das dec cmp pop inc push inc push push imul popa push imul inc inc dec fs push dec ss jns das das das inc push inc push inc inc insb push das inc pop push push push inc outsl dec jne das das xor xor bound gs das das xor dec inc xor push das push push bound sub das xor dec push cmp das cmp inc push xor das das jb jne jbe das das das push push bound das pop das das xor inc popa inc push push inc inc push inc push inc inc push insb arpl push popa jno das das das xor inc dec push jne das das imul arpl push inc jno das das das xor inc dec push jne das das xor push push cmp fs aaa outsl dec popa push das das cmp dec inc push jb jbe das xor dec dec inc js jae inc imul inc inc inc inc inc push xor insb pop arpl imul push inc jp inc inc pop dec inc inc inc inc inc inc push inc push dec dec push inc inc inc inc inc inc aaa inc addr16 inc inc inc push push insb gs fs push dec ss push inc das das cmp xor cmp ja inc inc inc dec pop push push inc inc inc push inc imul cmp push outsl dec pop bound das ss push outsl inc dec inc dec cmp push inc inc dec dec push push push push inc dec inc push arpl dec das inc push inc push push inc push popa push inc inc inc inc inc outsl push inc inc inc inc inc fs popa inc inc inc inc inc inc outsl insb inc js inc push cmp dec inc inc inc dec jbe das js xor inc inc dec das arpl inc dec inc inc inc inc pop push xor inc inc inc inc push jbe push dec cmp push inc inc jno push addr16 inc push inc inc push push imul outsl push pop inc das das xor ja sub addr16 inc inc inc outsl inc popa inc push inc inc inc inc push das cmp popa addr16 outsl dec addr16 inc inc inc bound xor fs popa inc xor inc inc push das cmp push inc push ja inc outsl push push inc inc inc bound xor fs popa inc jae inc inc inc push das cmp das js inc xor inc inc push push imul dec push inc push xor push jno das das push inc push ja xor pop inc inc inc inc push dec jae inc inc inc pop push dec addr16 jno das das imul dec inc xor xor inc inc inc imul addr16 inc inc inc inc imul dec fs dec push inc push addr16 addr16 das fs push imul imul dec jne das das dec pop ja inc dec push push das xor dec push cmp dec inc inc das fs push jae inc imul inc push imul push dec xor inc inc push push imul das inc popa inc imul push push push xor ss popa pop das das sub push xor dec data16 fs push imul push imul inc push das das push push imul jne das das popa dec inc push inc inc inc das inc push push imul push arpl ja dec inc push push push bound das das cmp dec xor cmp dec dec inc inc dec insl inc das jbe das push xor ja inc inc inc bound xor bound inc push inc push push inc jb xor inc dec inc inc push das js addr16 inc inc addr16 imul inc inc push cmp fs aaa outsl sub pop das das das cmp dec inc jp addr16 outsb das das xor dec dec inc push inc inc inc inc pop push inc pop dec imul inc inc inc inc jne xor pop jbe addr16 inc inc inc inc xor inc inc dec push push xor cmp dec inc inc inc imul pop pop imul das das push push das pop imul inc popa inc inc fs addr16 dec push das cmp cmp fs push inc jb das das xor xor inc sub ja inc inc dec je dec push dec inc push sub jno das das imul xor push outsl cmp das das xor inc sub inc inc xor push inc addr16 inc popa dec push das pop ret xor pop aam pop push push xchg mov lret rcll sbb nop popf adc push xchg or or dec push mov nop xchg or adc push push fwait aam rcll (bad) xchg mov jg rorb (bad) in test es out gs cmovns xchg adc hlt and adc jbe es jns roll test or pop mov sub push push rcll push dec rcll push pushf push push fcmovnbe cwtl push fnop xchg pop ror nop push push push pop rcr push fimul enter call inc dec inc ja xor adc sbb hlt pop pop insb mov aaa mov daa mov mov cwtl mov cmp and sbb rcrb rclb rcr mov hlt mov sbb fldt and xchg pop xor fs movsl test mov divb xchg lret stos push ret sub jmp xor rcrl repnz jne xor or jp shlb cmp rcl lds xchg fdivrl lcall push pop and icebp sub in fstps in ljmp mov call inc inc mov rclb pop sbb pop data16 cmpsb addr16 repz cmp or test adc dec out push push cmp and pop nop in sub dec push jae push and sub mov in fdivs push repnz shl pop fs hlt (bad) and ljmp sbb fmul pushf gs fs xor dec cmpsl add mov (bad) push sahf adc push fimull mov aam ret subl cmpsl sub inc mov (bad) mov adc sbb mov nop pop mov es mov inc adc nop push or addr16 cwtl inc sahf pop inc test xchg mov lods in pop test cmp adc out (bad) push mov push adc dec in sub add outsl dec les adc inc mov xor push inc xor cli and cmp loop pop mov mov sub mov and dec fs mov addr16 mov sub test sub lods xchg les mov xor mov xchg sbb dec and xchg sahf rolb xchg dec adc lcall sub sub cs sub enter in and clc xchg xchg inc jb xor inc les xchg adc pop mov sarl fs test adc ret push bound lcall mov and sub xchg lea push shl imul and dec (bad) inc adc push dec sbb push or xchg or fs dec je xchg push lods mov and lds xchg bound mov mov lret or xchg fmull xchg push repnz or mov mov and adc jo mov cmp push sbb fnstcw dec ja (bad) hlt jae push cld mov int mov cmpsl or or mov or fs push pop xchg lret int3 inc jmp mov in les xor (bad) (bad) (bad) stc adc lea adc adc decl daa sub inc lock (bad) (bad) and fist or (bad) cmpsb cmp mov and test xchg loop inc push adc dec imul or adc decl pop (bad) adc mov pop mov pop lret mov mov pop outsb (bad) test repnz dec sbb aad cmp push lds xor imul insl outsl repnz adc sbb mov adc in insl push out dec imul mov in ja das mov dec mov pop mov fs sub sub (bad) out push jne inc gs and sub decl adc sbb or xchg sarb repnz movsb sbb repnz mov cld dec test (bad) clc xchg xchg bound incb push addr16 cmpsb cld dec in (bad) xor addr16 dec or (bad) es mov mov push (bad) (bad) (bad) decl es je (bad) jne es adc adc je movsb out (bad) push jne je in xor cmc inc adc jbe push je in xor cmc xchg jbe push je (bad) repz adc inc xor adc push cmc test arpl hlt es je (bad) jne es push je push je xchg mull repnz (bad) inc push movsb daa je adc adc xchg add jbe push movsl push push mov fs adc jbe xor push xchg push movsl push push mov fs push je push je xchg repz je inc add repnz je inc add repnz mov divl xchg xrelease es add repz es and les xchg mov inc jae xchg je hlt movsb adc adc movsb push movsb adc inc je hlt push xchg repnz hlt xchg mov repnz arpl arpl adc je adc and (bad) testl push mov xchg push xor adc divb repnz jbe addr16 xor xor xor xchg adc adc test adc movsl adc gs testb push movsb and and xchg inc je movsb xor inc fs inc gs arpl hlt and mov mov je and xchg xchg adc xor xrelease xchg je jne gs arpl repnz inc push inc adc adc cmpsl push data16 push je ja test adc movsl adc gs testb push movsb and daa push (bad) jbe push je cmpsl xchg inc fs inc lds es es push xchg push je adc gs testb push movsb and and aaa (bad) jbe push je push test adc inc and adc xor roll inc gs addr16 inc inc jb je ja push mov fs lds adc jb repz add mov es adc mulb divb je inc inc xchg adc notb xor repnz mov aad movsl fs and adc repnz xor mulw adc repnz les xor je push xor repnz xchg test inc pop add adc push adc daa test je testb push xor hlt mov repnz inc adc inc inc test adc push je hlt movsb adc adc xchg cmpsb inc repnz push notb notb xchg test inc and testb repnz gs fs (bad) repnz and adc repz test hlt movsb and inc add in je inc je xor adc xor repz arpl adc testb push je hlt je fs fs fs adc xrelease movsl push xchg pop addl adc adc ja in pushw jne in xor hlt push adc push lds je jne mov aaa push repnz push mov adc cmpsl je fs and adc movsb and es xor movsl inc gs (bad) repz (bad) testl dec ja inc outsl inc inc js sahf aam in int3 pop pop ret into mov xchg test mov int das pop jbe addr16 jb pushf test shrl popa sub leave mov cmc or lods mov or or call dec sub imul mov pop data16 icebp cmp fs dec addr16 out dec push jae pop out nop in mov fidiv mov je inc scas dec or xchg adc dec pop lcall xchg adc cwtl mov nop loope loope inc and and ret jno leave sub in xchg cmp inc jp mov cmp in inc gs (bad) testl dec pop enter xchg push mov fsubrp out (bad) mov ror or loope flds or mov test mov mov sbbb xchg test xchg enter push lods fadds bound xchg pop enter test mov popa push xor xor pop adc enter test push data16 push mov hlt repnz sub adc mov xor mov lods enter into xchg inc cmp enter out sahf out and adc and sub pushf lods push rorb adc rcll adc adc fcmove (bad) lret aam sbb xor sarb shl popf add es rorl rclb sbb inc cltd cltd mov dec mov cltd sbb fwait lret (bad) shrb adc mov lock inc gs loope inc hlt mov cld dec xchg xchg movsl sub sub push fcoms inc inc out repz and sub mov sub xor enter mov out (bad) or mov inc fs adc cmp push dec push push daa xchg xchg rorl adc bound aaa push icebp xor inc xor sub xchg shlb mov int lret sub inc inc les nop fnstcw sbb push pop jnp inc adc or xchg dec xor jp add xor (bad) hlt and sahf xchg inc dec push push stos loop dec adc insb xchg test jge sbb adcl xor rorb jbe cmpsb mov sbb clc nop ror ret fnop (bad) mov lods loop jae or aam fcoms fstpt pop test xchg adc xchg fwait loop push adc xor insb repnz cmp cltd mov and test test int3 test shrb dec je sub jne cmp sub int3 cwtl push and aad enter pop loop push loop dec and sub cmp arpl fs xor pop (bad) push pop icebp xor adc mov test nop (bad) sub enter xchg daa jbe and les and cs dec or pop inc xchg test push xchg bound movsb and shll xchg pop dec int adc es mov enter cs or arpl inc add dec scas adc les xchg psrad les mov sub in inc push imul inc insb jns nop push push aas enter rorl sub call mov inc push repz cltd push mov fwait test mov inc adc sub pushl imul fsts stos mov add test sub icebp pop pushf adc imul aaa je arpl sarb cmpsb inc cmc push and xor ss loop push icebp sbb mov adc cmpsb call fwait les sahf pop jl out (bad) cmp sub cltd mov adc xor xor mov and mov in in mov cwtl jns xchg sbb mov imul mov cmp mov dec ret aaa int3 sahf pushf movsb lret adc xchg aam sbb daa mov cmp dec cmp adc ss push popa mov popf aad and push dec movaps lea sub lcall or int outsb xchg out and roll mov cmpsb cmpsb push xor jbe adc and test xchg push fstl dec stos and lcall shr mov movsl lods pusha fnstsw sarl dec imul cmpsl sub in adc (bad) and shrb xchg mov sbb mov mov cltd or inc and outsl mov inc and mov cld inc sub dec test mov jb pop movlps mov adc ret adc and pop shl xor push les loop ja cmp bound xchg mov or lret lret into or adc nop rclb (bad) push rcll push push or fxch adc pop xchg push popf lret lret lret lret aad dec xchg mov or or dec into dec push rorb aam lret lret int3 cltd into adc push push push push or fxch adc pop xchg push popf lret lret lret lret aad dec xchg mov or or dec or mov rcrl lret into pop aad ficoml rclb or pop aam push adc aam lret lret int3 push rcrl lret into push dec into pop push adc adc adc rclb xchg rclb or push adc adc sbb popf mov lret int adc mov pop rcll or push push dec push rcl nop rclb xchg sbb push fwait xchg pop pop push adc pop rcrb rclb mov mov fcmovne push pop aam rcl popf rclb sbb pop mov xchg rcl nop rclb xchg push sbb push push push xchg push push pop sbb or fimull pop int (bad) pop rcl xchg xchg pop pop aam rcrb pop (bad) xchg push nop dec adc aad pop pop push sbb (bad) push lcall dec push adc sbb lret into push xchg (bad) push adc xchg fistl rclb push adc nop push pop xchg aam aam adc (bad) rorl nop aam adc adc dec pop push int fwait push sbb xchg lcall aam push push xchg adc fwait push xchg fcomps fwait rclb nop rclb popf xchg rclb xchg dec sbb (bad) rcrl sbb mov rclb push push rcll adc push ficompl pop pop adc adc push xchg or cwtl nop (bad) pop rcl or pop push dec adc fnop push push push pop push rcrb pop rclb sbb push push push fwait pop rcr push push push push push push or adc xchg or adc push pop push push or into push mov fstl nop rcrb adc pop adc push push push push fisttpl aam adc nop push pop xchg adc dec pop push pop fstl adc sbb or cwtl rcr aam rcl popf rcrb mov adc nop push push push adc pop int sbb dec or sbb mov pop sbb ficom push push into dec dec fisttpll fnop ficoml dec xchg xchg aam or int3 push rcll push push sbb dec adc push adc nop push push dec dec push push adc rclb dec adc adc rclb dec aam adc rclb push popf rcrl aad rcrl rorl nop push push push push push dec push push aad rclb xchg sbb push cltd lret adc push push push fxch adc (bad) push pop rclb dec lret into pop aad (bad) nop rclb pop popf xchg rclb ficoml lret fcoms pop push pop rclb aam rcrl rcll lcall pushf push fcmovnu rcll dec nop push rorl into pop ficoml (bad) nop rclb pop pushf xchg rclb sbb lret lret fcoms fistl xchg fcmovne adc aam rcrl int push or int3 lcall pushf push adc push push dec xchg xchg rorl lret into pop ficom (bad) nop rclb pop popf push rclb pop lret lret lret rcrb lea mov pop adc or cmp pop sub stos cmpl push lret xchg stos dec xchg xor inc mov jns jns mov dec and das mov (bad) and inc sbb dec xchg lods xchg xchg add inc lahf and adc xchg adc xchg push les inc inc out or sub call imul push mov hlt in pop pop push xchg in cmp lods in aad mov in sub mov mov stos dec or jp cmp jnp sbb push fimull pop xchg out in in jo push (bad) xchg in mov out scas mov push cmp mov mov and and mov inc jp jae inc dec inc cmp xor popa insl push outsl dec data16 pop push push mov fcoml in pop gs add mov mov pop pop cmp cmp jno jno mov mov lret int or cmp sbb xor sub and fs sub mov call push pop lds xor sub and lcall push inc data16 jne imul push jae test inc and int call inc loop outsl lods imul xor je adc lea dec enter repnz int3 rcll mov inc arpl out xchg shrb pusha loope in fucom mov andl sbb lods stos cwtl aam shrb inc xor xchg and mov inc mov jbe pop sub inc jbe ja push dec aaa dec dec jae inc push inc mov int3 lods into push mov mov lods mov in in cmpsb inc push ss push inc mov es lods mov insl or inc inc insl mov push repnz cmpsl mov insb cmp xchg in xor adc push repz imul and (bad) ljmp inc enter mov jp daa adc inc or mov inc adc (bad) hlt mov es (bad) and or lret sub pushf dec lret sbb out dec cmp push xchg movsl call rorl loop dec and adc inc jo adc popf mov shlb data16 and xchg lahf mov out loope icebp sbb cmp stos mov leave mov push adc fs dec addr16 stc adc push sub mov mov pushf aaa and sub cmp test in fs or shrl lods lret jne (bad) cmc outsl mov inc and cmp xchg test sbb pop fcmovne pushf cwtl (bad) test outsb mov test into add adcl inc push test xor mov outsb repnz es pushf adc dec push mov fsubp test addr16 movsl and mov xchg imul cltd pushf rcrb pop roll lods repnz test push pop xor outsl je xor and push inc into test mov addr16 pushw inc jp dec adc or cmp cmp mov xor xchg aam test sbb jl or and insb lea dec push ljmp dec int3 aad and pushf and les es lahf adc iret mov jne loop xor imul mov inc lret xchg loope pop icebp xor and cltd fnop sahf adc xchg adc adc xchg xor (bad) (bad) (bad) and data16 (bad) decl sbb jg xor (bad) cld dec sub (bad) incb xchg out mov or lret clc xchg push inc test cld lret or insl inc les les mov or or and pop pop clc xchg pop enter test aam push loop dec stc sbb rclb icebp daa xor dec fs mov loop cmp cltd shll arpl adc pop inc enter aas push sbb lcall cltd cmpsl (bad) decl es pop (bad) clc cltd dec in xor das loop bound xor das das das imul inc addr16 outsb das fs outsl aaa imul dec inc pop xor dec ja push dec aaa dec addr16 xor inc ss dec push inc inc inc push push xor bound push inc addr16 inc xor inc inc sub addr16 inc inc dec dec aaa inc inc inc push push inc inc inc inc inc dec addr16 inc dec push data16 inc dec inc inc inc dec xor inc jbe das cmp inc inc inc dec fs outsl inc inc insb inc inc dec xor inc jbe das xor push push push push inc das dec imul fs push push inc dec push das cmp inc push das xor xor dec inc inc dec push inc inc dec xor dec jbe das xor push das cmp cmp dec arpl push addr16 dec push das das das dec arpl push addr16 outsl inc inc push das xor inc inc dec xor dec jbe das xor push das cmp cmp inc xor inc sub das das xor dec inc dec inc push push das pop cmp push pop xor das das das push dec xor inc jbe das xor outsl xor inc dec push das cmp inc push das xor inc inc dec xor dec jbe das xor push das cmp cmp fs push das cmp inc insb inc inc inc inc das xor inc inc dec xor dec jbe das xor push das cmp cmp jbe insb inc inc dec xor inc jbe das xor jb inc inc inc inc inc push pop xor das das das js inc inc push inc insb xor pop jne push inc inc inc dec je inc dec jbe inc cmp inc jbe dec cmp inc outsl jbe imul inc dec push push das das das outsl jae pop das das xor cmp inc inc inc dec xor dec jbe das xor aaa outsb das inc ja inc dec cmp inc outsl xor dec jbe das xor xor inc das dec jae imul cmp pop xor das das das push dec xor dec jbe das xor xor push das cmp addr16 push cmp inc inc dec pop inc insw aaa das inc push push imul push inc inc dec push push dec cmp imul das das xor inc sub das das xor push das cmp cmp inc inc push inc inc dec xor push jbe das cmp inc inc inc dec fs dec push das cmp pop pop xor das das das push dec imul push insl inc ja push bound xor das das das imul inc addr16 outsb das fs outsl aaa imul dec inc pop xor dec ja push dec aaa dec push imul dec jae inc inc inc inc dec dec imul inc addr16 pop jo dec inc inc inc dec dec pop push push outsl arpl inc inc inc imul inc jo das das sub dec inc inc inc dec pop inc inc xor ss inc inc inc das ja pop jo dec inc imul imul inc inc xor dec ss das das sub dec inc inc inc dec je inc dec insb inc dec inc push dec push push inc dec fs push arpl pop dec outsl inc dec inc imul inc dec inc push push xor inc push dec xor inc inc push ss jb das das cmp pop push inc inc xor insl inc inc inc inc imul jbe inc xor dec inc ja dec xor ret xor inc sub das das imul into pop fcompl (bad) fisubr imul (bad) aam (bad) mov outsb xchg out bound xchg bound mov (bad) mov xchg xor fs mov xchg pushf outsb xchg (bad) xchg jae adc and in mov lret into push push push push push xchg cltd sbb aad cwtl mov xor test cmp mov dec es dec push lret jns adc push xchg sbb movsl and inc adc jl out dec mov pop mov cwtl ficomp enter xchg inc dec call xor cmp pop sub sub cmp (bad) fisub mov decl (bad) stc push fstl pop or push and cmp stos push inc insb xor pop jne push mov push inc dec jbe inc cmp inc jbe dec cmp inc outsl pop shlb mov int3 aam mov pusha mov dec cmp cld inc es ja sbb adc rcr rcrl push dec into or (bad) push aas loop xor xor pop in test fdivrl and sub cwtl adc or adc mov mov dec gs dec imul fimull and dec (bad) (bad) test and and mov movsb adc mov (bad) daa cmpsb sub mov mov movsl aaa mov xchg add fs jae mov movsl mov nop mov xchg test es nop push mov mov lret mov insb inc and inc xor test hlt push xor cmp push js xchg les and adc sbb push add insl mov ja adc push aam inc je inc ja addl adc fs movsl movsb test popf shrb adc mov sbb stos mov mov xor cmpsb iret mov and adc push dec adc popa dec pop inc and push jbe divb mov addr16 js jb pop (bad) arpl pop xor andl xchg jb arpl and ret sbb xchg adc test movsl xor dec daa xchg sub loope into xchg dec lods sub xor push cmpsb xchg call push mov mov push xor dec call mov mov xchg push aad sbb xchg cli xchg xchg lcall sub inc and popa lret sub jne sub lods in push enter dec or aam rclb sub push push inc inc xor sub and lea jmp jl dec pop icebp cmp js (bad) mov xchg js adc or push adc pop xchg inc xchg pushf mov out push adc xchg and loop outsl in inc xor cmc or lret arpl pusha xchg (bad) and mov cltd leave leave mov push jbe movsb aad inc adc and and or xchg sbb int fnstsw cmpsb jb movsb mov mov test sbb lds xor dec nop rcrl rclb fs jp inc adc mov pop jo lock and xchg (bad) push sbb jne enter call icebp cmp adc fsub int3 mov in inc jl dec and and lcall xchg nop dec fcoms mov push (bad) sub mov xchg mov mov gs (bad) lock inc cmc cmpxchg dec je dec inc jbe imul call mov mov jae add push pop fstl inc push xor insb dec aad sub sub xor sub pop inc adc cmp mov push push lcall jno mov divps popa daa sub cld dec ljmp mov jg sbb enter (bad) and mov inc mov ret test xor xor mov dec imul or mov inc xchg or xchg sub pop adc bound mov pop mov lcall insb insb xchg cwtl cmpsb adcl insb mov inc xchg in xchg and les inc test inc sub test and mov repnz adc push inc or dec inc inc cltd rcll or adc jp xor push mov lcall and test push mov dec popa pop mov sub jbe loop push push sbb and push inc sub inc push and xor ret add mov clc fwait sarb and fstl mov inc stos jae push inc dec dec push imul push outsl push imul push xor inc inc jns insb dec inc dec jae push dec imul pop arpl inc dec inc inc inc inc imul inc push push inc inc dec push imul push pop dec imul arpl dec dec inc pop jbe imul dec dec inc cmp push inc imul je dec dec arpl ja inc inc dec je inc dec pop inc fs push dec push imul push pop inc imul pop dec dec cmp inc pop je inc inc push dec imul imul je dec dec je inc dec je inc inc jbe inc xor inc inc push inc inc js inc dec inc inc inc inc imul pop pop inc inc inc inc inc dec insb jno dec insl push das data16 das imul ja inc dec xor inc inc inc js inc inc inc inc inc inc imul inc xor jbe pop xor dec push imul push pop dec dec cmp push addr16 dec inc pop je dec dec jbe ja dec pop imul dec push push bound push dec inc inc inc inc dec push addr16 inc ja push dec imul xor xor push push dec insb inc inc dec je inc inc inc jp pop insb inc inc dec je dec dec outsl dec imul push xor inc inc xor push inc dec jae imul imul dec inc inc inc inc inc imul inc xor jbe pop xor dec inc imul addr16 dec push addr16 dec push imul pop jbe imul dec dec inc cmp push inc imul je dec dec imul pop inc push xor dec pop xor dec push imul push pop inc imul pop dec dec cmp inc pop je inc inc push dec pop xor dec inc dec jae push dec imul pop arpl addr16 imul inc inc addr16 inc inc inc xor addr16 inc inc inc jbe imul dec dec inc inc inc inc imul pop pop inc inc inc inc inc dec fs inc inc inc inc inc inc inc pop insb xor jbe das das xor imul inc dec inc inc inc inc pop xor inc inc inc inc bound cmp bound das das das das push cmp xor inc ss inc inc push jae inc inc imul push inc inc sub inc inc push jb inc inc dec push ja inc inc inc jae inc inc fs inc inc inc dec inc js inc inc jb push inc inc arpl dec inc inc dec xor inc inc dec push inc push push imul je dec inc push imul jno inc outsl dec popa cmp inc dec push ss cmp inc inc inc js inc inc imul imul imul imul push inc push arpl push jp push je push inc push ja inc xor inc inc dec jae gs inc inc inc dec outsl inc dec addr16 push push inc inc inc inc push ja inc sub inc inc inc inc dec je dec inc push aaa sub dec pop xor das das das cmp xor dec dec dec insb pop inc inc jbe fs jb push jns xor inc imul imul push jns inc xor inc imul push xor js push imul inc inc inc inc dec push inc push pop imul jbe push cmp inc inc inc push bound push imul xor ret xor mov xor mov and xor mov mov movsb mov mov sub mov mov sbb push sbb pushf rclb adc sbb adc push xchg push pop push je rcll je je jbe xchg xchg adc pop sbb jnp cmp sbb sbb xchg push adc aad aas cld into mov push dec clc xchg adc mov push mov sub and lock mov mov test pop pop cltd (bad) adc pop cmpsl and mov sbb cmpsb jle mov sub lea in sub sub add aad rcrl dec sbb xchg sbb popf int aad rcrb out inc inc jp pop loop dec mov inc mov insb push cld dec sub dec or daa xchg mov (bad) (bad) call shll bound xor xor enter mov cmpsb mov mov adc mov bound adc outsl and adc mov adc fs adc xchg adc addr16 adc pop ss repnz mov inc scas out adc xor or rclb or aam dec push xor and sub imul sub out es push ss cmp cmp mov test test (bad) stos bound call lods out push mov lcall in call movsl xor test cmpsl mov rcrb dec lret push in push aaa das adc adc mov nop movsb repnz (bad) xlat xor jp mov pop cltd xchg add adc rclb int3 aad fs inc pop inc xchg push or mov ret lret cltd mov (bad) mov loopne pop into xchg int3 insb cmpsb mov sbb and push xor and leave jnp shlb pop mov dec jnp sub cmp cltd rol jb loop push dec inc jno push dec das push jns ret sub adc xchg (bad) mov (bad) shrb xchg in inc mov (bad) clc lcall fsts sbb sbb mov mov movsb and sbb and mov lret mov into cs int or push insb and fld mov and push pop sub dec push dec dec dec dec je dec inc outsl inc push push enter pushf adc cmpsb add push cld mov push xor push loop dec nop sarl mov mov popa dec xchg adc dec lret pushf xchg int3 pusha xchg aam movsb mov scas dec push inc push jae pop ss inc addr16 push addr16 cltd mov cltd cmp test dec in add cltd dec loope mov arpl mov lcall dec push jp push jbe push outsb dec imul inc xor dec dec dec push push dec push imul lcall adc je adc dec cmp inc xor dec inc dec push lret imul out int3 xchg sahf rolb ja nop lcall push dec stos push gs dec outsb icebp cmp sub lods inc xchg fisub bound xchg mov divl lcall push pop les cwtl call xchg enter mov mov adc mov mov dec dec push sub lcall (bad) mov repnz and push push int3 out test cmpsb in icebp adc inc cltd (bad) leave in inc inc dec dec dec enter and xchg mov mov fwait jg mov jb adc das pop adc aas adc cmpsl enter fs addl mov inc xchg (bad) enter daa xor and dec sbb xchg js adc cmp xchg fs inc aaa push adc xchg fxtract movsl mov in push inc repnz lcall add dec dec pop daa cmpsb jg ret cmp mov sub fiadd je jle add inc ds xchg sub mov fisubl rorl fwait rorl pslld movsb sub xchg or inc and jmp cmp call inc and ret inc lcall or stos cmp sub sbb adc jmp add call mov and xor mov imul and (bad) and or dec inc je inc sub rcl rcll xor cs in mov test mov cmovle cmp adc into lcall test fstl leave movsl fcomp rclb sahf push int push add cmp loop xor dec xor arpl xchg pop movsl mov cmpsl or loop repz dec mov adc js push cld dec mov and push sub jmp pop xor cltd jns lret pop cmp mov ret jns inc inc xchg inc mov or stos ret xor pop jp mov pop jns jns ret lcall pop push sbb sbb ror jnp sbb mov cmp dec orl ret or sub dec addl imul jno dec lret jb mov arpl mov sub (bad) mov bound mov jb sub adc mov sub dec stos andl stos sub or mov or or imul push cltd stos sub or mov or or arpl mov sub dec ret dec ret dec ret stos or or sbb push push sbb sub addl mov push sbb pop push sbb test lcall jnp or dec (bad) lret ret jns jae or lret dec xchg mov cmp dec andl or rcrl inc sbb mov dec ret mov or or or sbb push inc xchg imul or dec push mov bound jb adc adc mov sbb xchg (bad) dec bound rorb push dec mov fwait xor sub push or subl sbb dec xchg mov xor mov xorl or bound jnp cmp xor push xchg bound jns mov mov inc sbb addl or or bound push bound cltd (bad) cmp mov or or jns pop xor ret mov mov or or cmp lcall mov mov stos jnp jp jnp cltd jnp jns dec mov lcall ret mov cltd jns jns bound ret mov mov or or pop and mov dec mov pop pop lret stos xor jnp shll dec (bad) rcrl lret bound mov cmp xor dec ret or ret bound inc stos mov sbb jp mov ret popa xchg and mov cmpl cltd cltd xchg adc pop cmp or mov ret mov push sbb pop xor ret dec mov or lret dec (bad) jae dec mov dec andl (bad) ret inc sbb mov mov jp mov push or or cmp jnp mov mov mov jns pop mov pop push lret mov jns (bad) mov sbb arpl rcrb arpl lret mov push mov pop sbb mov arpl dec addl jnp dec lcall dec (bad) jb pop jp xchg ror arpl or rclb dec mov xor jb push mov ret cmp sbb adc mov dec sub ret xchg or or ret dec (bad) imul mov dec sarl mov mov imul pop adc sub and cmpl inc sbb lret arpl dec mov pusha dec and mov sub cltd movsb and xor mov sbb xchg stos sbb xchg xchg movsb sub cmpsl test movsl and and mov movsl and and mov movsb cwtl xor and sub xor mov data16 xchg jb test hlt loop in cwtl into push mov mov lods push pushf test xchg fcmovbe push mov mov adc adc daa adc adc lea or dec push xor stos or adc cwtl fisttpl (bad) test daa add and pop jecxz and mov (bad) (bad) push pop adc nop pop fstl rcll push or aad pop int3 nop push bound cmpsb xor mov cmp sbb stos inc push push push mov and and ret dec push adc adc push rcll xchg sbb sbb adc (bad) xchg push adc pop push adc sbb dec push pop popf aad rclb xchg xchg int mov mov inc inc dec push insb push outsl outsb das xor das xor push adc push movsl inc enter push and xchg xor sbb popa frstor dec cs dec or call xor or aad push mov mov cs sub inc inc and imul bound fwait dec mov pop pop lret dec das adc cmpsl les les dec insb arpl pop insb xor bound jbe pop outsl push outsl inc inc xor xor inc push jns sub mov mov lds (bad) pop xchg and xor dec mov jb pop push push mov rorb xor dec movsl xor mov pop mov mov gs lods fcomp mov lea dec dec sub in lods push sub or bound adc lret aad xchg fwait push cwtl push pop push xchg xchg pop adc call test adc sub pop ret jmp ljmp dec jp inc adc cmpsb daa xchg adc jnp adc sub and shll dec in dec push jp sarl (bad) pop stos mov sbb xchg adc push adc dec sub je and push dec push sub or dec sub xor jbe jne les adc and inc out rcrl lods sub and test mov dec test addr16 xor inc and xchg cwtl xchg adc bound inc mov dec cmp inc adc sub sub xor and pushf mov out xchg movsb movsb sub pop xchg jle and add addl inc leave (bad) xor les sub xchg (bad) out jae xor push push test xchg addr16 adc hlt push jg xchg pop mov into test mov inc xor adc aam sub and xor popf test pop adc sahf sbb cmpsb xchg pusha mov repz mov fwait ror fnop imul out sub (bad) rcrb push imul mov popf pop daa daa or rcr push icebp and lods adc dec dec lret lods sub int3 in ss mov lcall adc fistl push xchg push inc nop shll cmp and pop dec sub push imul and push xor das dec sub dec je nop fabs and sub int inc (bad) jno lcall popf push repnz mov mov xchg (bad) out in fs push ss adc adc stos incb mov xor movsl or dec sub mov stos outsl icebp sub xor (bad) xor push ss sub (bad) aas icebp sub fs push nop dec or jo cld dec mov push (bad) ljmp mov mov decl mov test jle gs xchg dec push fld xchg dec gs and add xchg push test adc inc inc jbe push insb inc push ss push pop incb mulb (bad) lret mov push lea inc adc mov and mov jbe xchg leave dec and jae push loop push xor test cld inc sub mov je es xchg cmp pop and lret cmp mov js dec dec mov push push pop dec sbbl pusha cltd nop clc cltd or enter fbld stos inc dec or dec mov adc and hlt test inc dec loop inc imul inc addr16 inc inc dec push dec inc inc insl dec push inc push push imul jo inc arpl dec inc push inc imul dec dec push inc push addr16 dec push inc push pop imul je dec dec jo dec inc dec inc xor inc dec sub push inc inc inc dec jo dec inc addr16 inc jb inc xor pop inc inc inc inc imul inc push inc inc inc dec jo inc push dec ss push inc push push inc inc inc ja dec inc imul ss outsb push inc imul ss outsb push imul ss outsb push js imul push dec ss outsb push outsl imul ss outsb push imul push dec ss outsb push push imul ss outsb push dec imul ss outsb push inc dec cmp dec jbe push jbe das jbe das dec cmp ja dec inc inc inc inc aaa xor arpl push imul xor jbe imul jo inc jbe dec inc inc jno push inc push outsl imul pop dec dec je dec inc push push dec das pop insl imul imul ja sub inc push push push dec insb inc dec inc push push push das sub push addr16 sub inc outsl jbe pop xor inc inc dec dec push push push dec push push outsl je dec inc push pop dec das sub inc addr16 inc inc dec je bound inc push inc inc arpl push ss inc xor push insl jns pop inc push addr16 push push pop inc inc inc inc jp dec pop bound jo ja inc push inc imul inc sub jns pop je push dec je push dec je pop dec je push dec push imul jne pop inc inc inc imul dec push jp das imul cmp je dec dec je dec inc push inc pop outsl imul pop je push dec je push inc popa dec push insl push insl imul pop imul sub outsb inc dec push insb jns bound push dec je gs jbe dec cmp push xor push pop dec je dec inc jbe dec push pop inc inc inc inc aaa xor sub ss inc inc inc inc fs xor jne dec das data16 das cmp imul pop addr16 addr16 fs inc jbe inc inc inc inc inc inc fs push inc sub xor je pop dec je popa inc jbe imul inc inc fs dec bound push outsb inc inc sub push outsl push inc inc inc inc xor push inc inc dec push insl push dec push insl jns push outsb inc dec outsb jo push inc inc inc dec bound cmp jbe pop imul inc pop inc inc dec inc jo xor push inc push pop pop outsl imul jne imul inc dec jne insl inc pop inc inc inc pop das das ja inc imul pop inc addr16 inc imul dec dec insb jo push inc inc inc inc xor cmp inc inc jp outsl jno cmp inc inc inc bound push inc inc inc pop push inc inc pop xor jo inc inc inc inc jp push pop das das ja inc dec cmp imul dec ja jae dec data16 das inc inc inc inc ss arpl outsl jno cmp inc inc dec jbe pop jbe inc push inc inc dec push inc inc dec push addr16 inc inc inc dec push insl js dec cmp jns je arpl inc inc inc inc inc xor addr16 xor inc das outsl insb push bound inc arpl dec pop inc inc dec xor dec pop inc jbe fs dec push imul insb inc dec pushw push xor push dec imul sub inc imul arpl xor inc push inc popa dec push inc inc dec push imul ja popa dec push inc inc dec push imul push insl imul imul je arpl dec push outsb inc xor je pop dec xor inc inc inc push arpl inc inc inc inc inc inc inc xor jne dec insb dec pop inc sub push xor das xor push push dec pop push inc gs push push inc ja jae dec cmp jns outsl inc push push inc push ss inc push inc inc inc dec inc outsl je pop inc inc dec push insb push outsl inc jbe das das xor dec cmp imul inc push push inc inc jo xor das xor inc pop dec pop inc inc xor jns inc inc inc imul pop ja xor pop inc addr16 inc imul push outsb inc pop inc inc dec push insl js push dec inc inc inc dec push inc push inc inc inc dec insb jo push inc inc inc dec inc inc inc dec push inc push push imul cmp inc inc inc push push inc push inc inc inc dec insl push insl inc pop inc inc inc bound inc dec jne insb inc pop inc inc dec jne insl inc pop inc inc inc imul pop push jns xor cmp je dec dec jbe inc cmp push inc imul inc jb push dec push push jne push imul push imul jp das sub push dec push insl push dec push insl js push pop insb push pop dec jae imul push push dec arpl inc inc jo push jp dec and pop lcall mov and stos and mov xchg mov cmp cwtl mov cmpsl pushf and xchg popf dec sub inc movsb int lods xor rcll popf adc roll lcall sub (bad) mov adc push dec mov mov sbb mov push xchg push dec (bad) fsubrl sub lods fisub ja push adc and fsubrs in or popf and lds lea int adc inc movsb lods shl and sub mov xor cmp mov lods ss sub enter out and dec mov pop jmp push push push lods mov mov test test lret out xchg push pop adc addr16 jbe inc add inc sbb and lret sub or stos or sub jp dec pop bound mov inc sbb addl and push adc inc cmc push xchg inc jne xchg inc mov in je inc je xchg push mov and xor test cmpsl xchg movsb adc adc xchg adc push adc lock inc xor mov sbb arpl push adc (bad) mov xchg enter imul movsb sbb xchg cmpsl mov and enter push movsb loop outsl rcrb push push rcrl fs push inc adc adc sbb fstps adc aad jbe push and lcall inc dec push insl push dec and pop mov aad xchg fs xchg push jbe and add push xchg xchg inc cmp rcll add test stos cs (bad) repnz mov sbb push cmp stos cltd or add mov lds add sub imul mov test test cmp out xchg int and cwtl fiadd inc (bad) mov sub or or icebp xor xchg int3 fucom and imul gs add mov mov lea dec test mov lret inc leave mov push insb dec pushw push xor push dec adc xchg dec xor mov push push push insl popa dec mov mov or pop insb mov sub jb and popa (bad) sbb sub mov nop rorl xchg or jmp insb enter inc inc ja jae xor xchg lret imul xchg les xchg xchg mov adc sbb aam mov xchg mov and pop ja xor pop clc fwait nop mov imul xchg pop and jg or (bad) and xor mov scas in dec insb inc mov pop adc xchg pop inc push inc ret test or arpl jb sub es js xchg mov and int3 dec push xor lea in push pop hlt xchg fs addl mov mov (bad) and pinsrw push (bad) and push sbb jg lcall outsl les addr16 cmpsl je add sub and inc dec xchg test xor lret or out enter int3 int3 in mov int3 lret sub or push lods push sub cmp cmp and movsb mov sub gs ja push inc icebp cmp dec inc or push mov test sbb and lret ret and mov dec test xor xchg dec mov inc mov (bad) mov and or or (bad) sub mov mov sahf pop adc int3 pop (bad) dec in inc cmp out push and sbb mov and xchg and lea xchg cmp into aas loop arpl mov ljmp inc inc loop dec adc mov insb int3 outsb pop mov pop adc or daa cmp mov movsb mov les aad popf xchg push lea adc aaa jne daa jne cmpsl sub add xchg inc xor loope dec pop nop mov cltd mov or inc dec sub dec inc (bad) (bad) jb cmpsb inc push lahf dec jbe push xor cmp insb xor arpl jb js les and dec outsl add data16 push mov or xchg ror addl inc stos or subl sbb pop xchg push pop rclb aam aad dec push push xchg adc lcall xchg dec xchg popf int push push rcll dec push pop rcl pop adc push adc dec sbb rcll push xchg xchg int int adc rcrl adc push xchg pop aam popf rorb pop (bad) push push push push sbb adc push adc pop (bad) push push push push sbb sbb sbb adc push adc pop rcll push push sbb aam lret lret int or nop lcall dec adc rcll push push push adc push dec lret rorl push push push adc lcall rclb sbb aad sbb adc nop xchg push push sbb rorl aam rclb adc or fstl lea mov rclb adc adc rorl adc sbb dec ficom pop adc xchg pop sbb nop cltd aam adc rclb pop rclb push pop rorl lret lret nop aam pop sbb push rclb rcll sbb aam sbb push push push rcll pop push adc into push mov pop adc push pop push xchg rcrl push or popf xchg pop push xchg pop aam adc into adc nop pop pop xchg ficompl fistl adc pop fsts adc adc aam pop dec fstp aam nop xchg adc xchg ficompl rcrl push dec sbb fxch adc push into pop push xchg nop aam pop push xchg pop aam adc dec or pushf nop xchg pop adc adc xchg fimull ficoml fcmovbe adc pop rclb pop pop dec adc lret rorb into pop push xchg nop aam pop fstp fmull popf pop rcr dec sbb xchg ficoml fcmovbe adc xchg or rclb dec fstp rcll pop adc pop rclb push push push into sbb pop fstl nop pop fstl rcll push adc pop xchg popf fstps into or fstl or adc fcmovu dec sbb push adc aam push dec sbb adc push pop dec sbb push lret (bad) push adc xchg pop push sbb or xchg push rclb push pop rcll adc lret fimull dec dec pop fcomps lea rorl lret lret nop aam pop lret int3 adc ficomp push pop dec adc rcll or or rclb dec sbb ficompl xchg adc aam push push push push push push pop xchg lcall adc nop xchg push or rcl or dec xchg xchg nop aam pop fstl rcrl push push or sbb sbb pop aam or aam adc or adc push push rorl push sbb push push push push push or push push dec rcrb pop (bad) push push push pop or xchg pop sbb xchg push sbb xchg push sbb or push push nop push push rcll pop mov push push adc pop adc adc push or rclb (bad) fxch int3 adc or push push push push push push push pop rcll nop push push push push (bad) pop dec fstp rcl pop or xchg pop push adc pop ficoml sbb fistl adc ficomp push pop dec sbb adc cltd rclb dec push pop sahf push pop rclb adc or pop xchg cltd into adc adc aam push push push push push push pop lea sbb push nop nop sahf pop xchg pop adc rcrb sbb rclb lret sbb rcll push pop adc adc nop dec sbb pop (bad) pop adc xchg pop ficoml fcmovnu adc push fcmovnbe adc xchg sbb rcll rclb push sbb rcll dec pop int push push pop dec sbb pop sbb push push push push pop adc push pop fistl pop fisttpll rcll xchg pop aad xchg push push push pop fstl push pop fcom push popf rclb push ficompl into adc pop push push pop rcl push adc adc push pop push push push pop sbb push push dec popf ficoml nop aam pop dec aam aam pop adc xchg pop adc rcrb pop lret popf fstps cltd lret lcall push push push sbb rcll push push push pop dec adc ficompl xchg int adc xchg rcrl rclb push push pop xchg xchg dec sbb fimul pop aad push push push push push rclb dec push pop rcll rcr dec push rcrl cltd adc pop dec sbb adc push sbb fcmovbe push adc lcall nop rclb adc nop aam adc rcl xchg push push lcall pop rcl pop adc push or push xchg adc xchg rcrb ror fcoml pop ficom adc pop rcrl fstl adc push sbb xchg push push push push push or adc push pop adc xchg aam rorl adc pop into dec pop fcomps xchg sbb dec and sub test stos movsb cwtl stos movsl and sub and lcall lea stos iret or push in push leave imul enter mov or dec cs insb jmp sub test xchg dec dec sub cs test inc (bad) repnz loop inc movsb adc lcall or xchg mov out jb outsb push into and and daa sub movsb stos sbb sub sbb and xchg imul mov sub sub mov les test mov es sbb push pop adc xchg pop sbb into mov inc xor test mov gs (bad) mov cmpsb push sbb mov adc push hlt movsl push xchg mov xchg sbb pop push push xchg xchg push into push mov pop adc push pop push xchg rcrl push or popf xchg imul or push inc imul mov jmp adc adc loop xor imul push mov imul pop je dec inc (bad) shrb push xchg test hlt repnz and dec and mov push popf pop shl dec inc rclb or icebp and or dec dec cmp outsl jbe adc nop popf nop mov sbb repnz cwtl out lret jo scas cwtl repnz stos xchg repnz lcall xor mov cmpsb cmp sbb mov sub fldenv bound push addr16 xor mov adc xchg mov sahf (bad) hlt ret pop xor mov xor mov movsl popf test imul mov sarl dec push inc xor sub and ret or or sbb mov out (bad) shl and cli inc inc mov dec adc inc push cwtl in and and ds test jb cmp jb mov cmp pushf dec scas hlt out and adc jbe adc in push sbb jg dec mov cmpsl xchg xchg sub mov popf and fcomp inc es cmp and and xchg push aad movsb inc dec dec jbe imul je inc inc dec dec mov mov fisub xchg loopne aaa jbe inc push jl outsl cmp sub stos mov cmpsb mov repnz mov mov lret insb push cmp sbb (bad) adc inc into (bad) and cwtl dec call pop push inc repnz cmpsb and cmovns mov int push pop adc dec mov (bad) ficom dec enter fbstp sub xor or rcll and mov bound andl hlt test imul mov cltd adc xchg aam insb test sub into and ret sub (bad) (bad) clc fwait adc cs push pop adc mov mov test inc je sub push aas adc and or nop pop sar xchg adc push push mov mov dec into in mov dec cmp dec or inc das dec mov xchg mov test adc ja push pop mov je dec jb stos into stos test push inc dec push js inc in inc imul adc xchg sub loope adc rcrb xchg mov push pop icebp mov into shrb adc inc mov orl adc movsl dec lea sub adc lods lret xchg sub inc sub adc mov icebp xor inc xchg iret icebp aaa sub (bad) cs and (bad) xchg rcll sbb xchg cmp sub mov and and daa icebp xor jno inc cld dec lret adc lcall push sbb pop in xor adc sub es inc sub sub roll inc test cwtl sbb lcall and xor movsl and xor cmp movsb mov and sub lods mov mov movsl and stos stos daa movsl sub and mov sub mov xor cmp and mov movsb sub movsb mov mov mov cmpsb xor test mov mov and lods mov mov mov sub mov movsb test mov sub mov xor cmp movsl and sub test mov mov cmpsb xor mov cmpsb sub test cmpsb sub test mov mov stos mov stos lcall mov sub sub cmpsl cmpsb sub test mov cmp and mov movsl xor sbb and and test mov xor xor cwtl test stos and and mov sub sub cmpsl cmpsb sub test mov movsb mov movsb movsb mov and mov movsb mov mov movsl and cmp and mov mov mov sub mov movsb test mov sub mov xor sub movsb movsb mov and mov movsb mov lods mov mov pushf xor movsl pushf adc sub lcall movsl and movsl sub pushf and and lods sub mov xor sub movsl and and mov mov and mov movsl xor cmpsb movsb mov and and movsl and sub mov mov stos lcall daa daa mov cmp cmpsb lods sbb and and stos mov cmpsb cmpsb mov sub stos mov pop stos xor mov and mov test cwtl cmp movsb movsb mov and mov movsl sub test mov mov sub mov lcall mov and daa mov cmpsb cmp cmpsb lods sbb and and mov stos mov sub mov sbb mov cmpsb sub test movsl sub mov sub test and xor mov daa daa mov xor cmpsb lods sbb and mov mov stos test stos movsl and and and movsl and sub mov and mov movsb mov and mov movsl sub test mov mov sub mov sbb stos lcall xor stos lods sbb and and stos mov cmp stos stos es stos xor mov and mov stos mov cmp mov sbb sub mov sub test test pushf xor and mov mov sub sub lcall cmpsb xor cmpsb lods sbb and and mov and sbb mov movsl sub test mov mov sub mov cmp mov lcall daa mov cmpsb sub cmpsb lods sbb and mov mov movsl and and cltd mov es and movsl and mov movsb mov sub movsb test mov and cmpsb sub test mov mov mov cwtl test mov stos sub mov mov sub sub sbb xchg mov movsl sub sub mov cwtl and and lods sub mov cmp cmpsb movsb mov cmp mov test test and cmpsb sub test mov test mov movsb mov and mov movsl sub test mov and movsb mov sbb sbb lods mov cmp mov mov pushf sub movsl and sub test mov and es mov movsl xor aaa mov and sub movsb mov mov stos movsb mov mov mov cwtl and and lods sub mov xor test mov and sbbb and mov mov pushf sub movsl and xor cmp movsb mov and sub lods mov fnstcw sub pop cmp mov add sbb xchg popa pop aad loope adc movsb rcr dec xor pop popa jbe dec push push imul imul arpl inc dec dec addr16 addr16 jno push dec push inc push dec push pop insb xor ss cmpsb scas cld dec jmp sbb sbb imul xchg push dec fcoml nop aam pop or push fs inc dec push dec addr16 push xor dec dec dec imul lods sbb xor sub and and mov or popa mov add xchg data16 daa movsl adc xchg xchg roll xchg adc movsl test test mov and frstor pop xchg pop mov cmpsb hlt and dec jmp jae xor dec dec stos lret test inc or jmp dec ljmp sbb inc jns cmp mov gs test jbe adc cmp mov scas cmp push pop sbb fcoms out in sbb adc cltd or jmp stos mov bound jp dec lcall push popf dec xor inc mov adc push adc push xor adc or fstl or mov mov dec popf inc pop enter iret (bad) and cltd push inc in sub cltd inc (bad) loope xor xor adc push sub les loop push les aaa adc push sub (bad) and cld dec dec loop dec clc fwait adc (bad) (bad) (bad) daa test push stos bound lea mov cmp mov es lock lods fsubs (bad) daa inc sarl data16 fs gs call fwait scas push movsl push xchg outsb es pop dec decl cmp dec fiadd dec mov or (bad) push ss and (bad) sar (bad) (bad) and lret pop dec dec push sbb adc daa cmpsl sub movsb xor sbb shll (bad) roll mov scas mov sub imul inc dec xor inc inc push bound adc xor out xchg dec das or and mov stos xor mov lcall movsl mov lods mov lea pop push enterw (bad) and mov dec (bad) cltd sahf lea sbb lret loop jbe pop xor data16 xchg or imul xor int3 pushf repnz shr xchg movsl adc or cmp jb xor dec ja push push imul inc jns dec imul (bad) (bad) repz jp xor js mov pop and adc cmpsl mov loop aaa icebp xor cwtl mov jle and push lret cmp xor jl or ja xor push adc ja adc loope fldenv fdivrs push mov sbb mov cmp inc inc cmp jmp mov ret movsb dec call xor fs outsl popa ja xor aam xchg mov mov icebp xor xchg sbb cltd sarl sbb pop in xor imul test jae inc dec push dec int3 call sbb mov aas lcall rorl and or stc nop xchg pop or dec add adcl sub dec in outsb repnz stc sbb jae push push les jno cmpsb les sub nop into pop (bad) pushf int3 ficoml push sbb xor jae int3 movb adc mov mov dec dec inc addr16 pop jb push dec pop jb insb cmp sub js icebp sub xor xchg icebp and pop mov or sub mov loop xor or xchg int mov cld dec lea xor or push adc (bad) fsubrp mov adc xchg lcall pushl mov bound jb inc or jno sbb test adc push push cmpsb insb test or xchg mov mov mov (bad) xchg into (bad) sahf mov push mov mov lock (bad) (bad) movsb push into lcall ljmp mov (bad) movsb (bad) (bad) mov in mov jo les call mov xchg shl (bad) scas (bad) (bad) mov mov mov mov test xchg (bad) mov pusha mov (bad) (bad) lods ljmp shrb pusha mov (bad) (bad) shrb out into (bad) (bad) xchg jb mov (bad) cmpsb mov into ljmp movsb (bad) test mov (bad) (bad) (bad) nop push shlb stos pusha push xchg xchg (bad) (bad) rcr ret into (bad) (bad) rolb push xchg mov xchg in test in scas (bad) (bad) xchg movsb shlb (bad) xchg fmuls call mov xchg call mov (bad) mov pusha mov (bad) (bad) mov fisubrl (bad) sahf out pusha push test xchg (bad) (bad) into jo mov mov pusha mov (bad) (bad) shrb pusha mov (bad) (bad) lcall insb insb (bad) mov (bad) (bad) (bad) in aam xchg fmulp aam mov (bad) mov pop out (bad) (bad) rcrb test push mov in in scas (bad) (bad) xchg fsub (bad) scas (bad) (bad) xchg int3 shlb hlt repnz sahf out mov (bad) mov xchg int3 shlb cwtl test cmpsb cwtl in in scas (bad) (bad) test in mov hlt push test pusha push rclb (bad) test (bad) mov out mov (bad) (bad) insb lock test mov scas (bad) (bad) (bad) mov (bad) sahf call mov fimul xchg mov mov test (bad) (bad) (bad) test mov in mov xchg xchg (bad) xchg xchg lods mov out test mov call xchg int3 fadds xchg mov jo (bad) (bad) xchg rcl (bad) cwtl (bad) (bad) test (bad) mov push (bad) stos lods (bad) fsubp into mov int3 (bad) movb test sahf loopne mov (bad) xchg mov test jo loopne push in xchg enter (bad) push in movsb aam pusha mov mov (bad) xchg test mov lods shlb (bad) xchg mov lods stos (bad) (bad) fmulp in hlt pop pop push fmuls jo cwtl aam mov mov (bad) (bad) xchg into pop (bad) pushf aam movb pushf mov xchg mov fisubrl (bad) xchg call lret mov (bad) xchg into (bad) mov call xchg lods shlb cmpsb shl ret into (bad) (bad) rolb stos shrb pusha mov (bad) (bad) mov mov push (bad) test xchg jo fisubl rorb fsub mov fcmovbe mov out mov (bad) (bad) insb lock test mov scas (bad) (bad) xchg aam mov fmulp sahf call push lods ljmp into jo lcall xchg into pop (bad) pushf aam (bad) mov fsub cwtl fs ljmp fcmove out mov (bad) xchg call inc dec jno jae pop inc inc dec arpl je fs xchg rcr insb lock (bad) (bad) movsb push aam inc inc repnz inc inc dec push push pusha mov in mov jo les push (bad) mov xchg shl (bad) scas test inc popf imul test into lods out into loop xor shrb out xchg jb mov (bad) cmpsb mov into ljmp movsb (bad) test pop mov adc push inc xchg adc xor inc jbe aam xchg pop jg imul push xor dec mov bound fs xchg mov and jne imul dec or dec dec push insb inc adc xchg (bad) hlt cmp jae inc mov fist dec dec mov xchg dec push fwait pop pop push or pop push lods adc popf xchg pop fstps mov sbb lret (bad) rcrb test push cmpsl addr16 int imul push push sub cmp mov lret xor inc inc push int3 dec sub inc inc imul mov fsub cld mov xchg sub mov push sub mov and test fsts lods sub sub cmp cltd test xchg inc add dec ret bound or lds xor or push mov mov loop push adc sbb jne jo mov inc inc outsl push inc inc jae jno cmp inc xor mov int3 in lds or dec test mov rorl sub sbb adc in hlt pop pop push imul and nop aam fxch fcmovbe lcall push imul pop loop pop int3 xchg mov movsl roll iret in inc popa xor mov sub loop push clc popf aam adc xor imul adc popw loop inc test outsl je inc dec push push imul dec data16 and sub js fdivrl cld dec lea xor js sbb xor stos xchg inc xchg pop xor test jae jne mov sbb push movsb push adc and adc mov xchg xor nop fldcw mov or popf int into push out xchg push mov pusha test xchg xchg inc lahf mov push inc adc push inc xchg inc mov (bad) and push pop fwait and inc push pop jae inc loop inc cltd inc fstp popa jmp mov sbb pop test sbb sub mov sbb data16 les sub mov dec sub sub popa imul jno aam into stos cltd sub rcl into and inc mov xor mov dec lret inc add jne xor fwait and bound mov sub xor in insb addr16 push test (bad) lods lret xchg mov adc inc inc repnz aad pop pop adc sub ficompl cmp (bad) jno jb ljmp adc mov mov fs les dec data16 push rorb rclb adc fs shrb and mov sbb jns rcr sbb sbb cmp (bad) clc xchg xchg (bad) repnz popf das enter adcl lods push into fiadd dec out inc dec dec push (bad) (bad) es nop xchg sbb pop repnz cmpsl xor sub call in push movlps adc xchg aam xchg out test sub inc les jmp dec dec fs xchg xor push dec dec sub sub lea pop dec sbb mov jecxz mov sub sub sub out mov insl jae test scas jo and push sbb cmpsb and jp xor popa inc cld mov mov pop rolb and insb dec xchg cmp movsl pop es jno mov test mov ret adc sbb fstl lods inc call cmpl xor mov cmpsl pushf sub and sub test cltd mov movsl sub mov lods movsb mov ss lcall mov pushf sbb xchg fwait xor test mov cmp lods aaa mov and mov pop xchg mov pop mov mov cwtl sub mov movsl cmpsb xor test cmpsb pushf and mov sub mov mov cmp cmp test mov mov mov cmpsl and movsl and cmpsb sub test mov and movsl and movsl sub test mov xchg xchg xchg mov mov pop mov mov lods pop lods aaa cmpsl pushf sub mov and movsb sub test test sbb mov mov movsb cwtl and cmpsl mov and adc cmpsb and movsl mov xor cltd es test mov mov mov cmpsb and test cmpsb pushf and mov sub sub test mov movsl cmpsl cmp and mov cmpsl and daa pop mov test cwtl xor test movsb and daa mov mov sbb mov and pushf xor and mov mov and test adc mov mov movsl and mov stos sbb sub test test and mov xor test cmpsl and cmp xchg cwtl and test mov mov mov pushf sub mov and mov and mov mov mov cmp sub xor sub mov mov and mov mov xor xor lods aaa mov pop mov cmp sub mov xor mov xor mov sbb mov mov and xor stos lods mov xchg mov mov mov daa mov and cmp test xor test movsb cmpsb cmpsl test movsl and mov and stos aaa mov cmpsb xor sub xor mov xor stos cmp stos movsb mov cltd and mov mov and lcall stos xor pushf mov sub movsb cmpsb xor cmpsb pushf movsl movsl mov stos ss mov stos mov mov mov xor cmpsl sbb lcall mov mov mov mov sub mov mov test stos mov mov sub xchg movsb sub test xchg xchg xchg xchg xchg lcall mov and movsl mov mov mov xor sbb and and pushf sub mov mov movsl and sub test mov mov mov and sub mov sbb and and and and xor mov and and ss lcall mov fwait test mov sub pop mov cmp mov sub and pop mov test mov sub mov mov aaa fwait mov mov mov mov cmpsl mov mov mov movsb mov mov mov test movsb and xchg xchg cwtl cwtl mov cmp mov and mov daa sub sub xor test stos sbb cmpsl mov movsb test mov xor xchg xchg xchg xchg cmpsb sbb sub cwtl sbb lods xor mov mov mov mov mov and adc mov xor lods mov mov lods mov mov mov mov cmp sub pushf sbb xor lods aaa mov mov cmpsl mov xchg xchg xchg xchg stos sbb lods movsl xor and cmp sub xor mov mov sub mov sub cwtl sbb lods xor mov mov mov mov mov and adc mov xor lods mov mov lods mov mov mov mov cmp sub pushf sbb xor lods aaa mov mov dec and pushf xor cmpsl pushf sub and sub test cltd mov movsl sub mov movsb mov ss lcall mov aam mov fnstenv xchg or in imul mov fdivrs popf sbb pop inc dec dec dec bound push dec cmp mov mov xchg (bad) push in lock mov xlat int3 pushf xchg call push pop cmp push dec insb dec adc push enter test stc adc or test adc inc push movsl adc sbb sub test push in sub sub xor mov or imul lods sub ja mov repz xchg ret mov adc pushf dec stos (bad) rol dec push ja inc dec dec jb dec push hlt cmpsl inc loop push fs jne xor sub sahf shrb push (bad) aam (bad) daa xor cmpsb inc add mull mov ja je adc and xor (bad) ja adc sbb rclb fmuls test adc mov ficompl mov test lret or sub out push imul movsl and cmp nop test in scas lods outsb push and lods mov or in lret push push movsb mov xor mov dec xor mov xchg push pop nop rcrb inc cltd fldl loope test xchg sbb andl xor ret jp sub clc xchg fwait icebp xor dec xchg test lods out and leave sbb add aad adc mov jno mov mov je rcll fiaddl mov jp bound mov pop dec and jno test test push inc add call mov sub int or dec or test and outsl les push lret xchg adc push cmp mov xchg mov dec test inc xchg lds cmc dec push push inc dec dec das jo adc mov (bad) cltd ror sbb aam les sbb adc adc leave adc mov mov ljmp popf nop jno stos out push jns imul and loope fstp popa push aaa icebp cmp sahf adc and xchg mov int3 daa inc scas les arpl testl pop add push bound sbb (bad) out xor data16 push xchg inc icebp cmp roll aad (bad) jp mov stos sub inc pop ret (bad) xor mov imul mov arpl push xor pop dec push push push push clc mov inc mov and jb mov (bad) (bad) (bad) (bad) (bad) call (bad) cld lret in imul out inc dec dec push push movsl or xchg pop stc sbb dec or out in es cs jl mov sbb popa movsb xor mov (bad) push xor pop (bad) decl mov (bad) clc xchg sarb call jmp push ss sbb mov xchg add mov and pop dec or dec sub mov enter popa inc mov es and jg sbbl sbb mov int mov push nop lods aad fisub inc pop dec es mov (bad) fdivs rclb fs xchg fcmovbe lock mov sub adc cmp pushl shrl mov push inc mov in insb es enter cld lea sub and adc mov inc ja (bad) (bad) jmp or stos aas adc imul rcll (bad) jg mov mov or pop mov inc inc push adc es sbb or ret adc jle bound inc ljmp xchg or dec cmp jp mov lret (bad) push dec jnp ret or xchg mov cmp mov test or sub push lcall or dec mov shll push lcall stos jno sbb bound bound ret subl lret jnp or or adc stos bound mov sarl dec mov sub cmp dec (bad) xor or imul xchg sbb or mov or or or xor roll bound popa pop mov cmp cmp lcall mov lcall sbb mov lret (bad) push dec jnp ret or xchg mov cmp mov test or sub push lcall or dec mov shll push lcall stos jno sbb bound bound ret arpl mov or shll imul dec lret dec (bad) xor or dec mov or cmp jnp popa mov mov mov cmp cmp lcall mov lcall sbb mov mov dec jnp ret or xchg jnp mov cmpl xor mov or cmp adc or dec mov shll adc dec adc (bad) xor or sarl mov jnp inc or or cmp popa leave sbbl mov cmp sub mov (bad) sbb or and jp push ret or sbb bound ror imul lcall jp or or sbb pop rcll lcall jp or mov pop sub or sbb dec mov dec fwait cmp xor or dec adc stos dec mov dec imul sub dec ret cmp dec cmpl dec mov or mov bound cmp stos sub adc ror sbbl mov push mov cltd ret mov dec mov xchg cmp cmp or imul cmp or (bad) mov dec bound arpl mov pop mov sbb mov sbbl push adc mov dec lcall xor or dec adc stos dec fwait cmp ret push dec bound mov dec ret dec or stos dec mov or mov bound cmp stos sub adc shrl ret mov push lcall imul mov mov cmp or sbb mov push push pop bound mov mov cmp or dec stos dec mov and mov or mov or or mov push lret dec stos sbb sbb or dec jnp mov sbb lret bound mov sub lcall or dec inc and sub lcall lret mov xchg lret sub push sub lcall adc mov dec stos cmp or lret xchg rcll or bound mov mov xor xor or dec mov rcl jnp mov or adc stos bound mov sarl dec mov dec stos dec mov dec subl dec jp mov sbb lret bound mov sbb lcall or dec inc and arpl adc ror lret mov xchg lret sub push sbb lcall adc mov dec stos cmp or lret xchg shrl mov leave mov lret cmp push pop bound mov xor (bad) sbb and mov dec (bad) adc mov lret dec mov roll mov stos imul sbb mov fwait or mov cmp or or or xchg sbb or mov mov or sbb sbb pop xor xor sub adc mov ret mov xor mov and or pop push sbb pop push sbb xchg sbb dec imul cmp mov mov mov and or dec stos sbb xor or imul bound push or inc adc adc pop popa andl lcall fwait lret jnp dec mov popa mov or cmp dec arpl je inc dec je inc inc push dec imul inc push xor xor cmp mov inc inc and je xor xlat push and or push sub stos cs (bad) dec imul int sbb pop dec ficomp adc push push fcoms popf push adc (bad) mov (bad) xchg mov sub inc xchg or dec (bad) fwait dec xchg daa mov pop mov xchg xor lods mov or inc mov push jecxz movsb lods xor jg (bad) (bad) (bad) inc fcomp call (bad) or in imul out (bad) dec xchg mov cmp cld dec stos aas in outsl insb ja inc mov cmp aam pushf xor mov cwtl jl sub mov sub dec xchg add dec outsb stc xchg push int int3 adc or fcmovnbe sbb dec xchg add imul xchg push sahf jo push mov mov push sbb sub xor int3 shlb stos shl xchg movsl or (bad) es adc pushf movsl mov sub inc ja cli test jbe push and movsl pushf bound int3 aam mov cmp movsl and into xchg mov fldcw cli ret adc cmc xchg addr16 icebp and les les addr16 xchg icebp xor insl repz (bad) ljmp jb cmpsb sbb int3 xchg pop push rcll dec rcrb test push sub lcall or sub dec sub sub push xor or shrb adc cmp test xor jb and mov cmp pop (bad) stc xchg or test push inc movb cmp inc inc fs (bad) daa cmpsb rcrl aaa test pushf lcall mov and rorl sarl lods adc inc xor repnz adc (bad) mov dec test and inc mov or sub jbe das das xor pop insb jne js push imul cli test je dec ljmp jae shrb mov out mov xchg xchg adc pop push xor dec enter xor dec xor push inc xchg fs (bad) and int3 out dec (bad) lods fcoms mov call mov bound xchg (bad) call lret imul pop incb mov out out jbe je push and jnp sbb test adc fs (bad) (bad) mov je xor inc adc lcall dec call xchg xchg aas mov rcll pop cmpsl call mov xchg sbb mov mov mov xchg les (bad) es mov or dec push adc push test mov int and sbb mov adc call mov (bad) call mov (bad) mov call push out (bad) jo test hlt daa adc and xchg jp addr16 push in mov lret es sub flds dec sub imul loop xor clc sahf push mov xchg pusha cmp pushf aad xchg rcrl push and mov int3 out fsubrl xor aad dec lret (bad) (bad) (bad) cld dec into (bad) dec or bound mov pop adc jns (bad) ljmp test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl shlb mov into and cmpsl test (bad) mov rclw adc sbb and (bad) or mov adcl lods dec int (bad) aad xchg xchg adc push push or test (bad) and cmpsl or sub enter sub jbe les mov shlb (bad) xchg movsb scas lcall fiaddl lret push fcompl pusha lret out push cwtl movsb xchg xchg call xchg mov (bad) shlb xchg shlb stos shl shr mov (bad) (bad) lods fmulp (bad) mov call xchg stos test cmpsb shl xchg mov (bad) (bad) rolb stos mov test xchg rcrb xchg (bad) test out push out pusha shlb xchg shlb stos shl shr mov (bad) (bad) rolb stos lcall lock (bad) (bad) shrb xchg out mov (bad) xchg ljmp xchg mov xchg call mov mov xchg xchg movsb xchg cwtl (bad) cwtl mov mov rclb push call mov test (bad) mov call xchg stos test cmpsb shl xchg mov (bad) (bad) rolb stos mov test xchg rcrb xchg (bad) test out hlt mov push mov call out mov mov (bad) xchg into (bad) lcall xchg stos test out mov (bad) xchg ficoml (bad) mov mov xchg xchg enter lods (bad) (bad) fmulp mov call mov (bad) cmpsb mov xchg call nop shl out scas (bad) (bad) (bad) xchg (bad) (bad) (bad) (bad) enter test cmpsb cwtl lods into rclb lods shlb xchg lods mov (bad) jo hlt pusha fsubp stos rolb stos shlb xchg shr test shlb cwtl int3 shlb movsb lcall cwtl test rclb (bad) push cwtl test movsb test stos push xchg ror xchg pusha nop push call test bound xchg rcl rclb mov movsb mov shlb mov sahf mov (bad) xchg xchg movsb xchg loop mov xchg xchg mov mov (bad) repnz nop mov (bad) test rclb lods xchg movsb shlb (bad) mov (bad) (bad) (bad) xchg fsubs mov xchg into push out mov shlb (bad) xchg mov cwtl int3 xchg into shlb mov pusha jo (bad) repnz cwtl mov repnz test mov out shrb scas pushf xchg fmuls pusha mov mov out scas cwtl test out in (bad) lcall mov nop push into mov (bad) mov mov xchg into mov faddl pushf jo xchg xchg mov movsb (bad) (bad) (bad) (bad) shlb (bad) xchg xchg call xchg movsb rolb cwtl nop push jo shlb xchg xchg jo xchg cwtl out mov (bad) mov fsubrs mov enter xchg hlt repnz cmpsb rcl into movsb rcr (bad) mov (bad) mov call scas xchg xchg out shlb (bad) shrb call stos xchg mov cwtl lods aam mov test outsb pusha mov mov in xchg cmpsb lret dec and enter (bad) xchg movsb scas lcall fiaddl lret push fcompl inc xchg push test push xchg inc and add fs xchg push je and push xchg push xchg je je adc push xchg inc adc xchg inc je push mov push and add rolb mov test xchg rcrb mov mov rorb loop push int3 fadds adc xchg fistl sarb pushf mov into enter mov arpl sub lods inc rcl daa adc decl jp dec dec cmp inc outsl call imul bound jmp imul inc push dec push xor fs das das das xor inc dec inc jns js push inc ja cltd push and xchg adc sub movsl and pop mov imul inc or xor xor imul enter dec jns push dec cmp xor push mov and imul push xor dec inc pop mov push mov lds popa mov dec dec inc es mov push imul test fs cmc push cmp xor fs or xor into in push fwait adc fcoms sub adc xchg xor sub pop inc and sub (bad) jno cmp adc pop adc dec int3 push adc into sbb lea fcompl inc imul movsl xor gs xor adc push dec push xchg orl dec inc addr16 inc xor push (bad) and add lea dec mov or and and xchg movsb fs jne fs cmpsl xchg inc xor repz mov pushf and xchg aaa popa sbb jmp sub dec int push out xor xchg push xor sbb clc xchg mov push dec pop fcoms aam push lea rorb int3 (bad) hlt repnz xchg icebp and cmp mov mov dec ret mov nop bound mov jae sbb bound sub jno mov pusha xchg cmp add repnz sbb mov mov xor adc pop xchg xor cmp cmp xchg mov xchg sbb and rorl daa stc adc xchg adc push nop fstps scas nop in adc cs ja dec nop fsts scas repnz daa movsb rcrl push popf rorb pop push push push push push inc repnz inc xor dec dec mov push push xchg cmp dec inc les in dec push outsl enter jae ficoml dec out icebp and (bad) (bad) (bad) (bad) push xor and icebp xor (bad) and jl sub inc inc inc xor xor sub xor dec xchg lcall inc xchg cmp es (bad) (bad) (bad) (bad) (bad) (bad) cld dec mov sub fldenv adc repnz mov dec xor dec cmp cmp cltd rorl mov push mov sbb or sbb pop mov in fisttp inc movsl and daa mov das adc pop (bad) xchg loop dec mov mov les dec inc pop push loop dec (bad) inc stos lret repnz mov (bad) (bad) (bad) cmpsb (bad) (bad) call mov sbb lcall mov and cmp dec lret (bad) inc push pop ret mov or sbb push xchg sbb pop xor or mov or dec (bad) mov dec (bad) dec sbb sub mov or mov sbb push mov mov or mov push mov jns inc or pop or or inc xchg ret push pop stos stos dec or sbb sbb lret cmp pop bound fwait mov roll or or push xchg mov lcall arpl mov or sbb ret xor popa mov cmp mov push adc inc or pop or or inc xchg ret push push stos dec or mov sub dec push mov inc lret mov sbb dec sbbl pop ret mov adc dec pop mov jnp mov sbb or cmp mov mov sub push bound cmpl dec dec arpl inc dec fwait xor mov bound mov dec push mov sbb mov mov mov or and or xor popa mov cmp mov adc mov xchg sbb xor stos mov mov push sbb lcall cmp or mov push (bad) sub and bound mov sbb mov pop pop dec fwait xor ret rorl ret mov sub mov or push mov or dec (bad) sub xor sub mov and adc and mov imul sbb or or push sbb jnp test mov arpl lret bound dec mov arpl cmp and mov or push mov or dec (bad) sub xor sub mov and adc and mov dec mov push xchg dec sbb inc lret mov ret add mov (bad) dec mov bound mov bound adc mov mov sub push bound (bad) mov dec bound dec arpl inc dec fwait xor xchg push xchg mov cmp or xor dec stos sbb cltd lret mov xorl or xor popa mov cmp mov sarl or rorb sub or mov or mov pop or and xor pop stos or xchg mov or push sbb pop push sbb adc sbb sbb jp xor mov (bad) sub push mov sbb pop push sbb test sbb mov ret and push adc or or or sbb or lret cmp mov and mov jns mov stos push adc bound lret mov mov sub jb dec cmpl stos cmp or adc stos sub or or dec jp and sbb jnp mov pop xor roll sbb or sub dec mov ret popa mov mov jns mov xor rolb ret cmp (bad) dec or jns bound mov ret (bad) sub dec mov ret popa mov mov push sbb pop push sbb pop dec inc lcall stos push or mov mov mov or lret or sbb pop mov xor push xor xchg cmp mov ret dec push xor xchg fwait dec ret mov ret lcall ret mov ret or or sbb sbb or mov or dec imul or sbb sbb or cmp mov dec xchg stos push stos lcall fwait inc mov xor push sbb adc or arpl mov dec mov lret sub mov inc sub or or push arpl mov stos mov or or jb sbb push adc mov sbb lcall mov push xchg sbb push mov pop imul push push or or or fwait jp stos adc mov and mov push sbb xchg adc stos push adc popa mov mov or mov stos push mov sbb pop jb dec ret (bad) jno push stos cmp mov push mov sbb stos or or or cmpsb sub test mov sbb cmpsl pushf mov mov cmp sub fwait mov pushf mov mov fwait cmp xchg xchg cmpsb sub mov mov or imul cmpsb bound mov fisttp popa push das das das dec adc bound inc xchg ret push pop stos stos dec or push into (bad) lock cwtl movsb out rcrb lock (bad) mov lods sub sub dec xor inc int mov pop (bad) adc add lds (bad) rcll dec (bad) out xlat in dec pop push jbe xor cmp xchg test sub ss movsb mov sub mov cmpsl daa mov and or pop adc push push sarl xchg pop dec bound dec dec arpl inc dec fwait xor mov out push and xor dec push dec pushl cmpl push fs inc in inc push out xor push push je adc inc jb daa cmpsb movsb movsb and cmp js sbb inc or dec pop ja inc xor dec xchg xor test mov and lret sub mov and pop adc push daa inc fmull call ror nop xchg pop adc ror ret mov lods (bad) (bad) clc xchg lcall mov les and xor cld dec mov and inc xchg daa and push mov daa (bad) mov xchg (bad) (bad) cwtl mov mov mov (bad) pushf int3 bound xchg mov cmp and inc push dec dec int sub dec push imul int3 in ljmp jg adc aam enter jno xor or xchg ror call push pop inc scas xor cltd sbb mov push push inc outsl inc dec inc jno xor push gs inc loope movsl adc mov cmp lea sbb mov sbb lds fmull push jp adc dec mov (bad) repz sub mov and and adc xchg test xchg pop in push imul dec inc jns adc dec inc mov xchg sub dec sub xchg xor pushf jb and call lcall ljmp lods xchg adcw inc ret add sbb addr16 mov xchg fisttpl mov mov nop push inc faddl xor test cmpsb and daa stos or push mov in test xor imul adc in xchg ss pop push and xchg adc test cmp and in jb inc enter aam (bad) lock pushf mov lock xchg hlt pushf push jne sub stos and arpl lcall jp and xchg sub xchg adc or or mov adc daa es inc push pop test test mov xor cwtl cmp and lods (bad) enter cmp sbb sbb or mov xor mov loop pop (bad) aam cltd inc jmp mov int3 dec stos mov out outsb out mov stos jmp push loop inc les (bad) nop pop cld (bad) sub outsl mov adc enter lods xor es push icebp and jg cmp andl adc enter ss adc cmpsb or daa xchg jge shrb leave movsb lret add xchg arpl inc jns adc sub pop xchg push add mov push push pop xchg push add test xchg jne push cmp data16 popf cltd lds test dec les inc xchg in fisttp and sub mov inc repnz and push sbb in dec dec inc jbe ja xor mov xor mov cld dec push adc xchg stc adc int3 adc jno inc test sarl sbb test mov adc cmpsb jl in iret inc dec sub sbb (bad) rcr (bad) push cltd ficoml lcall cltd movsl mov mov or data16 lcall push sarl hlt test insl dec dec dec clc mov ljmp ret cmp pop jb jnp sbb mov out das push xor inc test mov outsb hlt in loope cmpsb shr enter in mov or and or sbb pushf lods sbb (bad) stc sbb xchg jle jecxz cmp mov sub in js int dec cmpsb xchg cmp or adc mov dec in in icebp sub sahf push mov aad xor adc jle push jbe cltd sbb popf cli inc or mov mov xchg mov pusha lret icebp es inc dec dec stc sbb sahf and push inc inc xor jb pop inc cltd sbb fnstsw adc push and inc inc push inc inc xor push jns pop push push cmp push inc inc inc push inc pop xor inc addr16 aaa cmp dec push jns pop push arpl dec push das push jns inc js imul je ja push sub xor imul dec dec push js cmp dec inc jbe xor das das das das push jns inc js imul je ja push sub dec push dec js dec pop insl inc dec inc inc dec aaa cmp das das das imul dec das push jns inc js imul je ja push sub pop push popa imul dec dec push js xor dec inc das xor cmp imul xor arpl das jbe xor inc inc inc push push addr16 sub data16 das das xor push dec inc fs das xor cmp imul xor arpl imul imul imul jae inc inc dec inc inc dec je dec inc imul imul xor inc dec imul push imul inc js inc dec push imul ja dec pop imul xor dec dec pop inc push dec push push popa dec fs push pop imul je dec dec je inc inc jbe imul cmp push jb dec je inc inc jbe dec sub inc outsl jbe push xor cmp inc aaa fs push push inc push addr16 inc inc inc inc dec je inc inc jbe inc cmp push push push dec push jp inc ja push push imul fs das cmp push jp inc js jns push push dec jp jbe imul jbe ja imul push dec push inc push pop imul dec inc js dec imul imul dec dec inc push cmp inc dec inc push push inc xor inc inc inc inc inc imul dec outsl dec cmp fs push pop fs dec dec arpl dec inc push arpl jae dec sub dec push js aaa ss pop inc imul push push xor dec push je inc dec fs dec inc inc inc inc inc inc inc imul push inc xor dec inc dec insb pop inc dec je dec dec pop inc fs inc dec push jp push push insb dec das xor inc push dec push inc inc dec insb dec dec dec je dec inc inc dec jp jbe imul dec jp push push inc imul push push imul push push cmp push dec push inc push pop imul je dec inc inc pop outsl insb push inc dec insb inc dec dec je dec inc push inc imul imul imul imul imul aaa inc push dec push inc push jae xor dec inc dec push imul dec push push inc push imul je dec dec insb inc dec inc inc dec push push ja das outsl insb jae inc push xor xor push jb pop je dec inc jbe imul dec dec inc imul dec inc imul dec dec inc jns inc dec xor xor imul xor dec dec push xor inc inc insl dec push inc push push dec cmp push push inc dec cmp dec xor popa inc ja addr16 xor inc sub jns pop insb jae inc imul push imul dec dec cmp dec dec ss dec dec ss xor inc je inc inc inc inc push dec imul jb pop insb dec dec inc push ja inc xor bound sub (bad) mov test mov sub stos and mov lcall xchg fwait pushf mov cmp mov and cmpsl xor sub test cmpsb cmp sbb lods sub sub xchg cltd stos mov cwtl cmp sub mov xchg xchg (bad) jmp scas push or push jg and lds push cmpsb mov pushf sub sbb pop mov call sub dec das xor push dec inc fs pushl jp pop push sbb xchg out (bad) mov xchg (bad) rclb xlat xor sbb test js inc dec enter (bad) daa jae sub lods sub xor mov cmp cmpsb movsb mov sbb stos rcrl push adc sbb mov push mull xchg add inc jecxz test inc push movsb test mov scas mov scas xchg movsb rolb cwtl mov nop mov mov bound adc push inc sbb lret mov dec pushf mov dec in movsb cmp push dec rcrb push sbb (bad) les je fs bound cld mov dec outsl push sub xchg adc adc xchg push push fimull outsb mov mov mov enter push or sub or mov mov mov or int xor inc push dec loop inc jmp inc lret dec or or jno out dec push push sub gs lds adc call mov adc (bad) inc push xor jno mov and mov sbb nop aam test fsubs test xchg in mov cltd cmpsl loop dec cld lret leave or adc lcall jo in xchg pusha push ret (bad) into cwtl (bad) (bad) scas mov movsb repnz sbb pop inc imul sub and adc adc mov fstps cmpsb out and mov mov cltd cld dec int3 (bad) std inc or loopne inc test movsl fucom nop lods sbb sub xor (bad) in cltd xor lret rorb dec dec pop and push push xchg sbb pop inc and sbbl cwtl nop stc sbb push pop xchg sbb xchg adc jmp enter and movsb sub push iret repnz mov cmp mov xor adc rcrb int3 (bad) hlt repnz pushf daa or xchg sub divl aas rclb or cs xchg xchg arpl adc jmp mov push icebp cmp push rcrb int3 movsb pusha mov enter and movsl sbb sbb and mov xchg add in dec mov mov es adc cmp sbb clc xchg (bad) icebp sub xor xchg inc les bound les push jb movsb and data16 dec sub icebp cmp enter nop inc movsb aad push and inc dec das dec push addr16 adc rcr and mov sbb dec out inc insb push and cs in (bad) and js push jae and les mov push inc test mov inc mov es xchg sbb cmpsb fwait cltd sub and jb outsl adc xor lret dec adc pop adc in pushf shlb sub les aad loop ja xor jg jp mov dec mov xchg xchg or cmp clc xchg push push dec rcl adc pop push cwtl aam rcll push fstl sbb rcrb rcll lcall int adc push aam rclb aam rclb pushf aad pop push sbb push adc xchg pop push sbb dec push dec lret fistl aam fcoml push push rorb push push sahf push or or mov fwait sbb sbb (bad) push adc int push or push push sbb pop or push push or sbb push mov rcrb pop aam push dec adc push rclb pop dec or xchg pop rcl push push pop rcrb sbb push push rorl adc pop aam dec ficom rcrb nop push push sbb xchg adc push push push aam ficom push pop adc mov push pop adc nop push cltd rclb push pop mov pop rcr push pop push aam rcl push popf rcl aam rcll lea rcrl sbb rcrl sbb pop push pop xchg adc or push aad nop pop adc push aam lcall adc pop rcrb pop ficoml adc adc pop aam adc or dec or xchg pop rcl push push pop rcl adc pop fcoms lea rcrb sbb pop aam adc or dec or xchg pop rcl push push pop xchg pop rclb ficoml nop push pop rclb push push rcll dec rcrb nop push adc push push sbb mov push dec adc nop push cltd rclb push rcll dec fcmovu push push aam push pop adc pop push xchg xchg dec fcmovnu dec adc int pop adc ficom xchg dec fstp push push aam adc pop popf xchg rclb adc lret adc ficoml xchg dec into sbb aam rorb xchg push push push push push push push adc ficom nop pop adc nop pop adc push push xchg push rcll push adc nop push pop adc pop rcl pop pop fcoms lea pop sahf pop rcl pop pop fcoms lea rclb adc push pop adc pop rcl xchg aam rcl (bad) sbb push lcall push ficoml rcr dec adc rcrb adc push sbb sbb push push adc rcr lret sbb fcmovbe pop fxch into dec or push aad rcrb nop push pop mov dec pop mov xchg dec pop rcl push push pop xchg pop rcrb sbb pop rclb push push or pop lret adc sbb push rcll dec ficom rcrb nop push xchg adc dec rcrb nop push rclb push push rcl cltd rcrl push pop adc dec adc push pop rcrb pop aam nop push push or dec fsts sbb sbb push xchg push push rcll rcrl push pop adc dec sbb rcrb adc adc pop aam push pop aam nop pop aam push rclb rorb xchg fisttpl aam sbb sbb push xchg push push aam pop (bad) push adc rclb rcl cltd rcl push popf rcl aam rclb lea rorl fst rorl aam aam fistpl mov lret lret into dec or push aad rcrb nop push dec push nop push adc xchg push push mov aad push pop adc nop push pop rclb push push pop nop pop adc push push int3 rcl push push pop dec adc rclb pop adc push push adc dec push pop push push aam rcrb pop lcall pop dec adc rcll adc adc adc dec adc push aam adc pop cltd ficoml xchg dec adc adc rclb aam nop xchg dec adc push push push dec rclb aam sbb sbb push xchg push push rorl into push push xchg push push push push aad push dec nop pop adc push push rcll pop sbb sbb rorb adc dec sbb pop sahf pop rcl xchg aam rcl cltd rcl push popf rcl aam rcl push popf rcl adc pop sbb sbb rorb adc dec sbb rcrb adc pop fcoml rclb adc push pop adc pop rcl or push rorl fwait sbb aam rcrl rcll push or xchg or lea push or or push push rorl adc aam fcmovnbe push push push push rorl pop cltd lcall rcrl cltd push or push push rorl rorb xchg lcall push push push push push push dec lret push fimull rcrl push popf xchg sbb into push dec int3 (bad) push or push push xchg xchg (bad) push adc cwtl push xchg sahf adc or nop push push push dec dec rcr sbb aad push popf rclb sbb push dec or push (bad) xchg pop rclb fcoms lret fcmovbe push dec int3 aad dec nop xchg pop nop push push rclb xchg cwtl fwait rcrb fwait pop xchg xchg or adc pop xchg adc dec pop sahf pop rcl or push pushf push xchg fcmovnu int pop fcmovnbe push push rorl adc push push push push adc rcrl pop int3 xchg or pop rcl mov push cwtl pop sbb push sbb rcll cltd rcrb rorl sbb rcr adc push (bad) push adc push dec xchg fstp push push push rcll cltd popf rorb aad dec xchg sbb lcall push or mov lret lret nop push push push pop dec push sbb nop fstp adc adc push push adc dec into push lcall fisttpll lret lret lret lret fsts int3 xchg fwait adc aam pop xchg pop xchg pop xchg pop xchg pop xchg pop xchg pop xchg pop xchg push xchg pop pushf aad pop push sbb push adc xchg pop push sbb dec push dec lret fistl aam fcoml push push rorb push push sahf push or or mov fwait sbb sbb (bad) push adc int push or push push sbb pop or push push or sbb push mov rcrb pop aam push dec adc push rclb pop dec or xchg adc pop rcrb sbb push push rorl adc pop aam dec ficom nop pop adc cltd push push push push push aam ficom push pop adc int3 adc nop pop adc push push pop mov pop rcr push pop push aam rcl push popf rcl aam rcll lea rcrl sbb rcrl sbb pop push pop xchg adc or push aad push pop adc push aam lcall adc pop rcrb pop ficoml adc adc pop aam adc or dec or xchg adc pop rcl adc pop fcoms lea rcrb sbb pop aam adc or dec or and sub test sub mov and mov xor sub cmpsl test movsl and addr16 inc pop xchg lds push gs xchg (bad) jne gs test xchg repnz ja adc adc xor mov adc movsb daa xchg addl add and movb mov add daa sbb lods ss sbb mov sbb int fnsave sbb inc movsl add inc aad and mov or and mov movsb repnz mov mov mov mov aad mov dec dec xor and into nop movsb (bad) aam mov mov (bad) lret into mov and and loope cmp rolb mov or or push or (bad) xchg dec cmp dec adc int or sub loop dec les (bad) jmp push imul mov and andl and in cmp (bad) aad rcll (bad) pusha cmpsb sahf outsb xchg fmuls mov jbe dec adc inc imul loop hlt xchg add movsl sbb or enter icebp sub rcrb pop sahf pop (bad) (bad) cli inc jp lcall dec pop lret sub adc cmpsb pop movsl cmp and xor cltd and inc jb xor loop je sub in mov or sub insb dec adc and and pop icebp es push jne mov mov (bad) and aas (bad) incb inc xchg cwtl xchg (bad) icebp and and and mov dec adc les xor movsl jno and ds xchg xor (bad) aam adc lods dec test dec dec decl push and mov pop enter lret dec call jp mov adc or push rorl fwait sbb into inc fs lods sub (bad) mov jo push mov mov shr int3 and push cmpsb je ss andl sub adc sbb adc mov mov cmc and mov or test adc daa cmpl cwtl xchg cmpsl mov and mov cmp sbb cmpsl mov and movsb sub movsb mov aam xor mov dec and inc insl push aaa cmp inc add dec pop jno inc outsl addr16 imul jns mov scas xchg jb stos mov rcl mov out xchg into (bad) hlt out mov ret fmulp xchg xchg mov sbb inc jb inc xchg adc or xchg scas outsb xor xchg repz xchg mov repnz int3 mov jo fs xchg mov mov (bad) (bad) (bad) (bad) call (bad) cld mov test mov and mov or ret or mov inc bound (bad) (bad) daa xchg jno cmpsb inc xchg adc inc pop (bad) (bad) (bad) (bad) (bad) (bad) decl fiadd adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc sbb dec push mov jg les adc (bad) (bad) (bad) cld dec jmp push jmp imul sub dec call call test ljmp in daa push lret pop add push sub push ljmp test enter sub dec test push test sub sub sub dec enter sub or sub sub mov dec daa or test or dec mov mov mov dec daa or dec sub imul sub sub and pop or ljmp sub sub imul test test sub ljmp or pop or or lea or mov iret sub jmp push jmp jmp sub imul imul or mov call sub sub mov push imul call sub das push call test out (bad) cs push mov and in dec or sub mov sub imul dec outsb push or scas dec sub dec dec jmp mov dec sub sub dec test cmpsb sub lret sub sub or dec dec dec sub enter or call sub or ljmp and or int iret femms in inc xchg test sub sub imul jmp in out mov sub lds leave outsb call test into jmp imul sub sub test out imul push stos push mov jmp mov out imul push enter sub push lods dec sub dec dec out mov sub sub sub mov or sub jmp xchg in sub or or lods inc or sub sub cs push test sub xchg int3 dec out mov sub cs in call in or sub sub sub sub or jmp xchg cs push imul sub jmp sub dec in sub (bad) out mov sub imul sub dec imul imul ljmp sub mov call sub inc or out mov imul mov sub sub or test sub dec ljmp sub sub push outsl or scas imul out mov dec sub enter push test sub xchg sub push out test out ljmp or test sub imul sub sub imul sub lret push imul mov test sub sub sub sub jmp mov test sub sub in lods dec sub sub push data16 or or out dec in cs call mov mov sub dec int jmp dec lret sub test imul test call test jmp push sub jmp sub or push sub scas push leave int3 out sub mov sub sub sub dec sub dec vmovaps or in push int sub sub dec cmpsb or in push lods or enter sub push into call in in mov mov and push or dec mov enter jmp daa sub inc or mov or int push sub out enter sub and dec sub sub sub dec imul push xchg sub sub (bad) push in mov in out mov imul xchg (bad) outsb or push ljmp dec dec sub out in call jmp xchg int3 sub in in sub or or lods dec movsl in in jmp enter push test sub xchg cs imul call es or xchg int dec call imul scas dec scas dec scas dec scas dec scas dec scas dec scas dec scas dec lods sub test or or dec push sub int push enter and movsb sub cmpsl movsl test sub lret je jbe hlt inc ja mov jbe and repnz andl notl push and xchg adc adc adc adc mov adc adc mov push and inc test pop imul insb inc push jns push dec xor imul inc push push dec adc lods dec test (bad) ss xchg xor loope and xchg xor roll add mov sub pop lcall nop push repnz mov movsl aaa and lcall mov cmpsl cmpsl sub daa les jle adc cmp mov mov sbb xchg pop pushf aad sbb sbb xchg adc and rorb and adc push enter jmp mov xor es cmpsb cwtl nop flds movb cmpsl and aaa or and xor xor sub adc popf inc add lods loope movsb (bad) and dec inc cwtl xchg push dec mov rol movsb mov mov fsubrl sbbl fmull push inc dec push pop das xor push xor push outsl inc dec push inc inc dec jae xor adc enter fs dec arpl xor or push xchg push dec xchg adc cmp push sbb nop test xchg int3 sub jecxz mov xchg adc push mov xor and jnp sbb scas stc sbb jb lods mov in gs arpl outsb xchg cwtl loope imul jno movsl sbb sub mov sub jmp sub pushf adc rclb adc imul out xor je xor sbb addr16 cmpsb cwtl mov shrl dec or scas imul loop jae jb push stos imul jns cmp adc sbb adc pop pop rorb test rcrb ret test xchg mov and mov data16 sbb adc aaa and jnp push mov push data16 lret (bad) pop xchg or jns lcall mov stc adc (bad) or xchg (bad) insl inc and movsb int3 repnz mov data16 jae ss addr16 xchg xchg xchg aad (bad) cmc adc sub add xchg adc and pushf sub dec bound mov mov mov pusha xchg and cmpsb adc in add inc mov push sub out iret sub es in mov mov ret xor xchg add xchg arpl and cltd test mov aaa add xchg pop les dec in jg push push loop dec push sub and mov movsb inc xor mov je les and mov aaa cld dec sub inc adc movsb xchg inc mov xchg sahf into hlt bound xlat xor mov push or aam push pop cltd xchg cltd lret sbb pop fmull pop adc sub lea mov and sahf pushf dec push adc loop and mov adc dec dec mov adc mov aas xchg push cmp inc dec push inc inc inc and pop mov xor mov imul out lods (bad) xor xchg movsb adc and imul inc mov test arpl push inc push pop inc iret (bad) (bad) and (bad) loop ja dec push adc dec stos lahf int3 mov gs int3 push inc or cld dec push mov and jg dec test adc inc fsubr icebp xor inc (bad) adc mov mov xor push imul (bad) out es push and loop aaa adc xchg jne xor stos cmp or imul les es decl inc (bad) (bad) test sbb aaa jg and pop mov (bad) cmpsl push sbb jmp dec inc inc (bad) stos push ss (bad) clc cltd push jle mov decl pop (bad) (bad) test es (bad) call pop xlat (bad) decl (bad) jmp push cld dec insb jg xchg ja push movsl sbb sbb test es mov xchg in cmp and dec mov adc lea push movsl addr16 dec inc ds (bad) jmp push insl dec mov inc sub cmpsb xor movsb cmp jbe outsl outsl cltd loope mov jns inc pop and sbb mov pop or popa sub inc push and jns fcmovne push push pop test es sub push in repz adc cwtl shl dec outsb inc cwtl in icebp sbb (bad) into in adc in in call lret dec lods lods outsb inc or sub sub insb into in out test lds or mov call int3 in dec lods lods out inc or sub sub insb into in out test lds or mov call into in dec lods scas outsb inc or sub sub insb into in out test lds push scas push (bad) sub push in mov inc jmp in dec sub outsb iret sub dec scas inc or movsl call gs iret sub or in in or (bad) enter jmp inc ljmp inc or movsl call gs iret sub or gs or (bad) enter jmp inc in cs sub dec scas inc or movsl call gs iret sub or gs or (bad) enter jmp inc out cs sub dec scas inc or movsl call gs iret es jmp push dec xchg in sub in mov or mov sub lea inc or mov insl or sub enter and in leave stos push in out in dec push stos push lea inc or mov insl or sub enter and in enter in in dec push sub lea inc or mov insl or sub enter and in (bad) out (bad) gs in dec push stos push lea inc or lret sub jge mov (bad) inc lods leave push xchg lods enter pop xor sub cltd fnstsw xor mov push rorl das call stos outsl adc push push (bad) nop jo out lcall push outsb pop pop push call jb daa xchg lds xchg inc and test hlt movsl gs lret adc mov aaa push push xor sbb frstor push mov fisubl ja xchg pop mov fbld mov jnp xchg dec mov mov and andl inc pop jp (bad) xor loope cmp xor orb mov mov mov stc or dec sqrtps stos jg arpl lea add and data16 push add popa push aaa test dec push aas call xor nop gs sub jl push jg (bad) shrb addl adc (bad) into in in push das les (bad) cld mov in sbb popa inc mov mov test dec push jbe sbb dec push mov movsb dec xchg pop test jae adc pop inc in xor mov fst int dec dec xor mov cmp lods sbb mov fldl jmp sub cltd or or pop xor xor xor dec (bad) push and das jmp ror jle push sbb jl stos xor mov clc lea pop jb incb addr16 clc lea push loop jns repnz fwait fwait loop outsl mov (bad) enter outsl mov ret aas jmp inc fwait sarl lcall and cld dec inc repnz iret jmp jbe clc xchg sbb outsb and and (bad) decl mov repnz xchg mov add in les adc xchg (bad) decl or mov inc (bad) call inc scas les jmp push mov dec jmp das xor lret dec push sub loop xor and pop pop decl test js or incb mov push and jg incb data16 inc into int and (bad) (bad) clc xchg or inc in imul xchg and mov les (bad) (bad) and (bad) inc nop xlat (bad) jmp dec insb (bad) incb xchg and es xor dec lods (bad) jb mov fisub aaa das (bad) clc lea lahf (bad) (bad) cld dec inc icebp sbb call inc daa loop jns clc xchg or and (bad) (bad) (bad) (bad) call (bad) (bad) cld dec dec pop adc inc xchg pop les cs inc data16 enter int loope (bad) clc xchg aad mov decl inc (bad) jmp mov sub sub inc stos fld jb (bad) cld dec test inc push aam mov test adc (bad) decl jns clc xchg or and jmp inc mov xchg (bad) cld dec dec loop insl enter addr16 and sbb mov inc adc sarb clc lea (bad) and scas mov cmpsl jmp das jp mov adc orb das xor jns pop push push das cmp outsb inc imul xor mov pusha fidiv xchg lods mov dec ror jns or fnstenv mov xor sub cmp cmp sub dec xor push push mov push inc dec das imul sub push das das ja xor mov mov call sbb icebp xor push dec out jb push xor popa pop bound sub xor fmull dec push fstps pop test and dec out icebp aaa mov mov mov mov push daa ja sub out lcall push mov xchg mov sahf bound push mov incb xor mov mov stc sbb push jno cmp jmp push mov adc pop push sub mov inc mov dec dec (bad) mov icebp mov out xchg arpl and test push jg dec or dec xchg sbb (bad) call stos sahf and adc (bad) push and and clc xchg or incb hlt inc call inc lahf inc out in icebp and jg mov fisub jg icebp sub icebp adc mov adc (bad) decl (bad) and cltd sbb mov les clc xchg adc test push pop xchg test pop push push inc in xchg inc adc adc test sbb bswap rol (bad) mov adc xor pop add inc les call adc and nop test push into jmp sub insl dec test xor dec imul adc push ror aas repnz gs daa jbe cld mov cs lods mov jle inc je or mov and sub loope cltd popa mov adc or cltd inc inc add and adc sub test imul and mov pop test push and notb test js inc inc dec cmp bound pushf nop loop pop mov push and and adc lret adc cmp xchg inc jo inc adc xchg and xor or add inc inc xor mov sbb aaa dec adc mov sub addr16 pop data16 xchg insb (bad) (bad) fsubs stc adc fldt aad sbb push rcrb rcrl ficom xor sub xor loope mov pusha (bad) mov mov pop push inc adc or mov adc lret out xor stos dec adc or inc inc sbb sahf les pop xchg adc daa movsl xor test sbb daa sub and or push or sbb outsl dec adc xor sub mov sub das dec push or int inc enter pop mov xchg mov je or imul popa addr16 and or push pop pop (bad) jno cmp inc push testl sub push cltd pop xchg mov or push movsb stos dec jno insb insb push push inc pop outsl enter in pop mov sahf mov (bad) enter insb test adc and xchg les fs leave xchg fcom rcll cltd push sub cmp sub mov int3 enter outsb pop mov enter sub cmp jo adc and or stos push push lcall popa dec adc (bad) and or or addr16 pop cmp and push je xchg sub insb aaa dec xor or lahf stc xchg rcll rclb adc (bad) push push push push push (bad) push fwait or push xchg int push pop adc xchg lcall mov aad xchg dec xchg fcomp adc xchg xchg fcomp adc lret lret fcmovnbe fst push push push push mov push mov into dec push rcr rcr pop aad rcr nop push push push fwait xchg adc ficom push dec ficom adc push push pop sbb mov pop push rcrb rorl rcll push xchg dec xchg adc push push rclb push pop rclb push xchg lcall push cltd cltd sahf push cltd sbb push sbb adc fwait int3 cwtl nop push push push push push (bad) push sbb mov push (bad) push sbb pop xchg sbb adc cltd into dec aad adc adc push sbb pop xchg lcall push push (bad) push sbb pop cltd fwait nop fwait push or pop xchg push (bad) push sbb dec (bad) fwait push or dec fcom dec mov push dec mov rclb push push pop or int or rcrb dec rcrb push sbb xchg lcall push cltd cltd xchg rcrb sbb push sbb push pop adc into sbb or pop pop xchg fistl lea dec fcmovnu mov aam xchg push xchg or or pop xchg sbb nop rcrl fwait aam sbb sbb pop mov (bad) mov lret lret fxch adc pop dec adc fcmovnu sbb or or pop adc adc push rclb nop fstl fimull fimull fimull into or pop pushf xchg pop popf xchg sbb push adc push pop or adc push rcrb lea fimull push dec or fimull push dec push sbb dec adc sbb push xchg xchg lea lret adc adc pop pushf xchg fcmovnu or adc push rcrb xchg push pop xchg popf fstps into or aam adc fcmovu dec adc into sbb sbb sbb cltd sbb push (bad) aam rcrl rcll rclb push fwait or push fwait push push pop nop sahf or sbb push push push push push (bad) lcall rcll push or nop push push adc pop into push adc push pop rclb adc adc dec adc or push push adc sahf mov lret lret lret fimull int dec adc push push adc dec into push lcall ficomp cltd sahf push xchg cltd xchg rclb lcall push rclb push mov cltd adc adc xchg rclb pop push xchg cltd pop push xchg sbb push push push dec ficompl xchg push sbb or mov push push push push push mov sbb lret lret ficompl rorb push fnop rorl cwtl sahf pop aam fistpl lret lret int mov fcmovbe push push dec adc sbb push lcall fwait (bad) xchg push push pop pop xchg (bad) dec sbb push dec into pop push popf rclb sbb aam aam rcl or push dec adc sbb pop rorl int3 pop mov pop sbb mov rcrb dec rclb push push (bad) popf lcall lret ficom push pop sbb mov pop fwait int3 adc push push fwait push popf rclb pop push sahf sahf push push push xchg dec ficom sbb adc rorb aam aam push push push pop dec adc rcrl pop rcrl fimull lret lret lret int3 pop xchg sbb push lcall fwait (bad) xchg push push pop pop xchg (bad) dec sbb push dec into pop push popf rclb sbb aam aam rcl or push dec adc sbb pop rorl int3 pop mov pop sbb mov rcrb dec rclb push push (bad) popf lcall lret ficom push pop sbb mov pop fwait aad push push push push fwait push popf rclb pop push pop sahf push push push xchg dec ficom sbb adc rorb aam aam push push push pop dec adc rorl ficom push pop (bad) push pop dec into push lret ficom push dec ficom push pop dec rcl mov pop mov xchg dec sbb (bad) or lret into push lcall fwait (bad) xchg push push dec ficom push pop dec push cltd pop int lcall fimull dec ficom push dec xchg sbb push mov push rcll adc rorl fcmovnbe ficompl aam rcl or push dec adc adc rcll push rcll adc rorl int xchg pop nop push push pushf push adc rclb push push dec xchg fcom push push push lret adc rcll rcrl popf pop push rclb adc rcrl (bad) adc push push push pop mov sbb lcall fcoms sahf push push push xchg pop pop or int push push dec into push rcrb push push fwait aam adc dec push or sbb mov push push push inc pop ret mov mov mov test mov pop mov lods mov stos lods xor and mov push xchg fcomp adc lret lret fcmovnbe fst nop push push mov push mov into dec push rcr rcr pop aad rcr xchg adc xchg adc ficom push dec ficom adc push push inc jne inc dec ja imul push imul dec fs dec inc insb outsb outsl jns ja inc dec dec push imul imul imul push dec push push inc inc ss data16 outsl xor and lods mov mov mov xor mov in push loop xchg test les cmp dec jb mov xchg sbb cltd sbb mov inc inc insb xor je sub cmp dec jbe pop arpl outsb test lcall jo xor je inc inc push dec dec cmp xor cmp imul dec das outsl jb outsl push outsb inc jp ss das jno xor pop cmpsb xor and xor ss daa cmp and mov sub into adc pop dec adc rcr enter mov mov xchg lods lret fs mov lods data16 shlb xchg lret dec sub lret mov dec sub push sbb and cmp add int movsb lds add inc push adc add mov mov cmp daa jbe mov sub mov push (bad) xor dec push fs outsl dec popa dec addr16 and mov push adc adcb aad dec mov and cmp and and and mov enter cltd mov pop xor sarl mov push adc xor movsl sbb stos mov mov adc push or gs imul sub and clc nop xchg or test repnz mov repz idivb int dec mov pop or pop push mov xlat xor leave (bad) xor in jbe push enter xorl jae dec ror and (bad) (bad) fisub mov es sub jno test inc xchg xor lcall (bad) (bad) (bad) decl mov repz decl jne adc decl inc push xor mov inc sub pop inc nop (bad) jo lret mov and jnp jle push mov cld dec mov loop insb and lret rorl insb int3 xchg in test mov and lret adc movsl int3 stos nop lods ljmp xchg mov (bad) hlt pop pusha lret shlb inc xchg xorl inc xchg sub jp dec lret adc and mov xchg adc pop sbb insl inc pop and sarl sarb fisttpll (bad) shlb in inc cmc xchg sbb inc fcoml es inc push xchg dec mov dec jmp sub data16 xchg xchg les inc (bad) or and adc repnz lods adc xor push jb adc lcall scas test lods pop inc movsb hlt and adc mov loope and jnp (bad) daa fs rcr (bad) sbb imul call test mov xchg cmp enter test push add ffreep mov mov mov inc stc sbb movsb loop push in arpl repnz les adc insb dec sub xor icebp adc and jnp mov ss arpl aam xchg iret decl push sub inc ja cmp movsb sub mov loop ja loop inc (bad) in and adc lea test dec (bad) push and sub cld dec sub and les dec stos sbb xchg shl xor pop cmp mov imul ficomp adc cmp cmpsb rcr sahf inc adc rorl fwait (bad) jle aaa fs mov stos jle gs and pop mov sbbl push clc xchg int ss arpl cmp sub lcall jg test repz lcall mov push insb popa dec cld dec or or rcrl sbb nop bound jmp dec or inc or (bad) (bad) call adc xor es dec push ds mov dec push (bad) enter lods dec dec cmp cmpsl mov and pop out jp inc push dec xchg gs pop fisttpl and les push or pop sbb xchg pop pushf aad sbb mov dec push adc dec push rcr lret rcrl push pop dec ficoml xchg (bad) push or adc int xchg pop or sahf lcall push push pop xchg popf mov nop push dec xchg int push push push push sbb xchg push dec push rclb push sbb sbb or push dec pop (bad) pop xchg push or pop sbb push cltd fstl rcrl int3 sbb push push push adc pop dec dec adc into or popf rcrl fcmovnu adc push push push pop rclb rclb push cltd push adc nop (bad) dec nop push push rcrl adc xchg dec adc push or rclb mov fcmovnbe dec xchg push pop nop push push xchg lcall popf push popf rclb (bad) pop adc adc sbb ficom (bad) push cltd sbb nop dec sbb adc lret lret fcmovnbe xchg push push push push sbb dec adc mov cltd pop push aam rorl rcll push rorl adc int xchg push adc adc dec lret adc push sbb push pushf push xchg ficoml cltd rclb fcom rorl int3 push rorl nop push push push push cltd mov xchg xchg sbb or adc mov xchg xchg sbb rcrb push push rorb push push mov xchg push adc lea sbb rorl int3 push rorl fnop push dec int3 aad dec nop pushf (bad) nop push push or xchg ficomp aam rcrl rorl fisttpl rclb push dec into push rcrl adc sbb xchg pop pushf fcoms push push push push or xchg xchg sbb rcrl push push push push push push xchg dec ficom sbb adc rorb aam aam sbb rorl int3 push rorl rcr xchg dec lret lret lret aad mov push adc nop push pop sbb rcr xchg push cltd rclb fcom pushf push rcr fwait adc rorl int3 push rorl adc rcrl pop fcoms rclb lret into push rcrl sbb dec fsts push dec adc mov xchg pop pushf aad fisttpll rcll dec popf lret rclb xchg sahf push adc lret into push rcrl sbb dec fsts push dec rorl mov xchg pop pushf (bad) mov adc push push push push adc cwtl push sbb adc rcrl ficoml push push push fwait push popf rclb lret int3 aad dec ficom or push fstps rcll sahf lcall aam nop push ficompl lret lret lret aad fwait push popf rclb xchg push push push sbb pop push or int pop int adc sbb aam nop push ficompl mov lret lret (bad) mov fcmovbe push push push fwait or int3 lcall xchg adc push xchg lcall rcrb rcrb aam push rclb adc rcrl adc sbb nop push push pushf push rcr lcall push fwait or push pop mov rcl pop rclb push push push push push rclb pop rcl aam nop ficompl dec push rclb mov push push sbb mov push push push or xchg fimull fistpl pop push or pop push dec xchg push or adc mov xchg aad aam rcrl ficompl mov int3 pop push push adc dec rcrb dec push pop or adc xchg pop or rcrl fwait (bad) cltd cltd mov ficomp or lret ficomp stos sub lcall sub cmp mov cmp cmpsl mov cmpsb mov mov sub lcall xor mov sub sbb sub movsl and movsb cltd and mov inc cmp and and sbb into out ljmp call add add (bad) repz mov je out and testl jae mov nop (bad) test in push bound mov mov fcompl data16 push aam xchg out and mov stos arpl jnp and sub mov cmpl mov shll push inc push lds dec dec adc inc inc or sbb sub sub imul push dec addr16 push arpl das xor aaa inc gs in push push imul adc fs cwtl test xchg mov enter mov cwtl fnstsw and int inc in xchg and inc js in dec push jns test je adc adc mov sbb (bad) adc adc or js aam push mov adc dec push ds adc cwtl jo out shr adc es jns inc icebp sub in ja inc enter mov cmp daa xchg lcall imul mov shll jmp dec cmp movsl mov nop fcoms xchg bound xor dec cltd mov pop aam loop push (bad) out pop xlat xor cmp mov cmp add add fs addl cmp dec jp jae jp or xchg (bad) imul test and adc inc (bad) aam adc lea dec adc inc dec test mov sbb xchg xor arpl ss data16 cmpsb fs mov inc repz xor mov aaa int3 pop push xor adc iret and mov xchg xchg stc xchg push push (bad) or enter lret cld dec into hlt cmpsb xchg xor cmc movsb repz les inc xchg cmpsb adc adc sbb push dec push std and lds and sub jmp ss jp adc rcll rcrl xchg mov stos dec mov and cmpsb divl adc push adc mov xor xchg dec les pop aad mov dec mov js fstps clc xchg dec xor lods cld lea jp data16 fisub inc gs jp jp imul bound dec push ja inc inc jbe xor ret jp inc stos inc or xchg xor cltd inc enter inc sahf mov imul rcrb je cmp dec inc push jmp mov mov leave or je pop xor push xchg lcall cmp xchg inc pop je inc inc push push clc xchg sbb movsb into xchg hlt hlt lcall into es add cli jb dec mov jp mov mov push aaa das outsb cltd lods add iret sub leave sub imul enter inc mov xchg mov int3 (bad) or jno sbb inc cmp sahf push mov bound adc (bad) adc pusha lea pop xor in xchg dec addr16 insb push xor xor (bad) mov sbb push bound cltd adc rcrl sbb scas fisub xchg and mov push dec dec push addr16 and mov push mov and out imul les loop js aad xchg jo stos out out mov repnz mov dec insb movsb hlt pop cld inc inc sub out xchg inc mov (bad) push int dec adc stos lods aaa mov mov push and aad add loopne push adc leave mov sub int roll mov cltd test (bad) or enter cmp or int3 mov int mov dec insb dec sub sbb in cmpsl les notl (bad) icebp call jnp lcall lret mov jmp cmpsl mov add sub pop adc dec in and push mov xor xor dec mov xchg inc adc jle push and sub mov in cmp xor push jne addr16 dec push push xor inc fs pop das fs push push inc insl inc ja push push imul jbe das das das outsl outsb push cmp dec imul pop push inc inc inc dec dec inc sub jbe inc inc bound jp inc inc inc outsb outsl addr16 dec arpl inc inc inc inc inc push inc pop insb xor jp imul inc inc ja inc inc dec push imul inc ja inc inc ja push dec cmp inc inc inc inc inc inc fs inc inc inc inc dec xor inc inc inc inc inc inc dec jo push inc inc inc inc inc imul sub push push addr16 inc das dec cmp ja push jo inc inc inc addr16 push outsl imul inc xor push imul inc inc inc das inc dec push push jno inc inc inc push cmp inc jne dec push dec das imul jbe ja xor outsl je dec inc push jb arpl push data16 push inc dec cmp push dec cmp ja inc inc jbe ja outsl dec popa dec addr16 addr16 outsl cmp das das sub cmp das imul inc xor dec insb das inc inc das xor dec dec cmp ja je ss fs das push aaa das das das das outsl inc push push inc inc dec addr16 das push das das ja addr16 push das das imul inc xor das push bound das cmp inc push dec push dec inc ss outsb aaa das das das das dec pop imul das dec das das xor ja push push xor inc push das push ss jp inc inc inc imul pop cmp jbe das das sub das das das das jp bound inc inc ss outsb js das cmp xor push addr16 inc dec popa push inc inc inc inc xor push outsl inc dec push pop sub fs js fs dec jp dec dec xor inc push inc inc dec dec xor addr16 inc inc dec dec xor inc addr16 inc dec dec xor push push inc inc dec dec dec das xor imul inc inc inc inc push das push pop arpl inc outsl dec je das das jp inc inc aaa dec imul push dec imul inc xor inc dec ja xor inc dec jne jno insb ja inc dec inc cmp push pop arpl ss inc push inc inc inc dec outsl push inc pop addr16 push inc cmp cmp inc dec push inc inc inc dec xor inc push inc inc imul inc push outsb pop xor aaa inc imul jns aaa inc ja inc inc inc push inc inc push inc imul dec push das cmp xor das js cmp inc inc jbe inc inc inc inc inc inc ja sub ja inc inc inc push inc imul das das xor js dec xor pop jne jbe das js pop cmp jbe das dec dec push inc fs ss outsb gs ss das cmp jae push je dec aaa jns arpl cmp push dec xor data16 das das cmp inc dec outsl pop cmp xor inc inc inc dec dec inc xor ja pop pop popa addr16 das fs push das das das fs push push xor inc das push aaa das das xor inc push outsl inc ss push xor inc jp xor fs dec push das cmp inc gs push das cmp das cmp inc inc push outsl gs ja inc dec push inc push inc push das fs dec push das cmp inc gs push das cmp inc inc inc inc inc inc das fs ss push dec inc inc inc inc js push jp inc sub push pop cmp jbe das cmp inc fs ss push inc pop fs dec jno inc data16 das das das jb bound outsb push push addr16 ja dec push inc dec push pop cmp push das das imul inc inc dec jae js push inc dec push inc inc inc inc inc inc dec cmp jne push push pop fs push inc inc js pop imul das das outsb das das das das jp dec dec pop pop imul das das imul push dec dec push inc inc inc inc push push push outsl addr16 jae fs inc push inc xor inc dec jb addr16 dec addr16 inc sub xor dec inc push inc inc imul js inc inc push push jbe arpl dec push data16 dec cmp bound inc cmp inc inc dec ja outsl dec popa push addr16 addr16 outsl dec jbe das das sub cmp das imul insb inc inc dec push dec arpl xor jae dec push pop imul pop xor outsl addr16 jb das das cmp cmp push jbe das das cmp inc xor inc inc push pop dec insb das inc inc dec xor fs aaa dec pop push xor pop xor push das js inc xor inc inc push xor sub push inc inc dec push dec push jne inc ss das das push popa inc pop popa inc dec inc imul pop popa inc dec inc imul push imul inc das push aaa das das das das outsl inc push inc inc inc dec jne imul xor push outsb inc imul jns aaa inc inc push dec cmp push xor inc inc push das das sub pop jns push addr16 inc das jbe xor arpl dec xor inc inc inc inc das dec and mov sbb push mov adc pop adc ficompl xchg push push push fwait push popf rclb sbb dec xchg sbb fcmovnu xchg dec adc pop (bad) xchg xchg push adc rclb int3 pop pushf xchg xchg cwtl fwait (bad) push movsb outsb outsl addr16 imul and sub mov adc xor (bad) test mov push imul inc ja inc inc xor and mov rclb inc push inc xchg movsl fstpl sbb push int3 into mov pop lcall and mov push mov pop aad fsts stc adc sbb push mov pop or scas leave int test sbb adc dec in imul mov or lahf inc cmp xor pushf mov mov inc inc and xor aaa cmpsl ss mov and sub inc (bad) cmc add xchg aad (bad) sahf into lahf and and inc (bad) loop mov mov stos inc fs jns xchg sbb mov push push xor mov popf rcll sbb fimul pop in adc sbb mov les test lock xchg cmpsb repz mov sub adc ret cmp jae or dec xchg pop popf rcll cmp bound mov rcrb fiadd push pop aad inc xchg call and cmp rolb xor inc dec ja xor inc dec jne jno insb ja inc and ret and int test sub sub and test lea imul inc inc sub sub lods sbb lcall rorl xchg xchg push inc test sub xor inc mov loope loopne lods mov call addr16 mov mov lea sub aam jns or dec jp test repnz stos and mov call into lcall adc sub xchg mov repz inc and jp or push out addr16 dec sub xchg sub lds sbb das inc inc xor cmpsl or in sub test gs xchg and popa xor jp incb adc cmp or aam mov aam mov into and lret and dec mov xor int3 les mov mov cmp imul xrelease addr16 inc jle addl fwait mov push dec dec pop (bad) shrb mov fmulp addr16 adc xor leave dec popf xor test xchg and inc addl xchg inc je xchg xor push divl xchg flds int xor loope (bad) sub enter inc dec and or pop dec sbb mov adc sbb clc cltd sbb mov mov lret mov adc pushf loop lret adc xchg fwait cmpsl sub fidiv sub inc inc (bad) mov jne xor movsb sub out popa inc pop popa inc (bad) (bad) cmc mov or dec inc clc nop xchg bound les daa xor aaa and inc xor mov mov int rcll push xchg nop mov lahf cwtl aam and lea call test fs lret mov inc sbb sbbl mov imul and cltd movsb push dec inc pop repnz lcall (bad) or sub cmp mov les bound mov rcl cltd popf call dec lds dec icebp and fs xor adc and leave test adc data16 dec dec cmp aam les repnz mov and imul inc or dec gs sbb lcall mov inc movsl test test adc fsub loopne inc adc je mov les and jno movsb mov sbb ficoml call push xchg mov sub inc je xor or sbb shlb call je xor and dec and insl dec adc cltd adc xchg mov pop fimul test mov and stos xor mov fstps test and push (bad) inc (bad) inc and cmp cltd fisubl scas lods fmul or imul mov mov ja jb arpl mov or mov ljmp test rcl mov jp dec pushw test hlt je inc les xor dec sarl jp xor das inc cmp xor sbb mov es dec dec sbb push sbb adc adc sbb inc stos pop adc mov int pop mov mov test adc pop into js push stc sbb pop push test and or xchg dec dec sbb mov mov cmp mov cmp test mov mov movsb lcall and movsb mov sub test sbb mov cmpsb test aaa mov test mov and movsb mov sbb mov and mov mov lods xor mov movsl sub test mov movsb sbb mov mov mov mov mov mov mov mov mov daa movsl and movsb lods and mov sbb mov mov fwait daa mov pop xchg pushf lods xor sbb mov xchg lods cmp sub pop mov mov mov cmp mov and test and cltd stos mov mov cmp and aaa pop xchg pushf lods sbb mov mov and sbb mov aaa fwait mov pop xchg pushf daa mov test mov cmp mov mov xor sbb mov cmpsb cmpsl cmpsb pop cwtl stos cmpsb sbb stos movsb mov xor pushf mov sbb cmp and mov mov xor and mov test mov mov xor xor sub xchg xchg xchg fwait mov and sub and mov mov xor xor sub xchg xchg xchg fwait mov and and mov cltd cmp mov lcall pushf and sub xchg xchg pushf lods sub mov xor test mov lcall cmpsb xor and daa sub xchg xchg xchg cmpsb xor mov xchg mov mov and cmpsl mov lcall sub pushf xor fwait es xchg xchg xchg mov mov mov xchg lcall cwtl mov mov cmp cmp mov test cmpsl mov xor aaa mov mov xchg cwtl mov xor sbb movsb mov movsb mov cmp mov sbb lods mov sbb mov mov fwait and ss xchg pushf lods daa stos pop pushf xor and fwait mov test mov pop xchg cwtl mov cmp and stos sub cmpsl xor xor cmp cmp mov cmpsb daa sub xor test sub cltd cwtl and pop xchg stos mov xor mov mov pop cwtl mov movsb cmp lods and pushf mov xor test mov movsb sub mov xor mov xor pop cwtl mov mov cmpsb mov and mov lods mov movsb mov and cmpsl sub xchg mov cmpsb sub sub mov es cwtl sbb xor cmpsb xor test mov and pop cwtl mov mov cwtl cltd mov xor mov and xor xor cmpsb mov sub mov and mov mov mov mov cmpsl sub sbb mov sub xor mov mov pop cwtl mov movsb cmp lods and pushf mov sub mov mov mov cmp mov sub cmp stos mov mov movsl mov mov and test and sub mov xor mov xor mov xchg pushf lods xor sbb cwtl daa sbb mov daa sub test stos sbb adc xor sub aaa test lcall mov mov sub mov xchg stos lods mov mov mov xor fwait mov cmpsl cmp cmp mov mov and cmpsl adc and mov sbb pop xchg mov mov sbb and pushf lods xor xor lcall cmp sub ss mov mov cmp mov xchg xchg lcall pop test xchg xchg xchg xchg mov mov mov xor sub xor stos and pushf stos xor mov mov mov mov mov xor mov fwait and xor sub cmpsl cmpsb pop cwtl stos cmpsb sbb sub xor sub sub cmp test movsb mov sbb push fwait push push cltd popf rcrb adc int push aam rcl adc ficompl rorb rclb adc adc aad lcall xchg cltd push rorl rclb push push fcoms adc push fcmovbe push xchg push rcl or lds jmp xchg dec sub sub es push dec in insl sub push dec jbe les inc dec xor outsl ja dec push rorl sub push sub test hlt movsb and mov daa mov (bad) mov mov xchg fs fs ss data16 das das cmp push xor inc inc sub sub pop mov push mov jp jno gs inc dec sub test pop cltd stos mov mov cmp fs ss dec outsb nop fldcw or dec sub and sbb ror (bad) out lret out call jns pushf dec fstps repnz or mov mov mov dec mov jb mov jo pusha (bad) hlt pusha out les inc jbe movb rorl dec push sub out test test xorl cmp mov test sbb mov fs mov (bad) into mov sbb and out inc adc mov push mov sbb push dec inc lods (bad) es xchg sbb push insl and inc pushf mov call dec adc es dec insl mov iret inc cmp sub mov mov mov ljmp pushf dec stos add xor jnp xor jl mov push stos xor xor mov xchg shl adc into inc aaa cmpsb mov or dec push cltd sub fmull xchg and mov xor ret mov fwait rcrl xchg inc inc jae (bad) cmc gs addr16 lret push dec mov push mov aad lret inc sbb ljmp and mov nop rcrl xor decb fs inc inc mov ficoml push fs dec inc xor popa inc (bad) cwtl and adcl dec pop aas movsb or push pop push int3 dec rcrl dec into push lcall arpl adc sub aaa mov (bad) inc lret stc sbb or movsb mov rorb push dec imul jbe adc inc push add xor les imul es inc xor and dec aam aad sbb or sub dec lcall sbb mov inc sarl inc xchg mov mov scas and pop mov cmp mov es mov adc cmp into shll cmp fcmovnu int fwait popf bound and mov dec test cmp mov mov xor xor mov xor mov inc mov or sarl movb inc dec adc xor pushf lods popf and int and or and and sbb mov lcall push test movsl add and inc hlt in in adc and xchg scas and popa daa daa call mov jne (bad) xor xor dec mov test mov test cmp pushf mov and pinsrw in sub dec push inc adc es je xchg sbb xchg lods mov push mov push adc mov and sub adc addl jne arpl sub adc and xor mov call mov adc pop nop inc insb icebp adc mov cltd mov and dec jae imul les and or adc dec push loop push adc xchg data16 xchg jno mov inc inc les daa inc loop test cmp dec push adc xor nop (bad) inc xor cmp and cmpsl xchg cmc xchg adc xor push enter sbb cmp dec mov xor sbb xor ds movsl add icebp sub arpl das js and inc pusha (bad) adc push pop and mov enter shl push call adc dec sub outsl les loop dec and (bad) dec (bad) adc xchg pop test je and bound mov cld int3 outsl inc lods cmpsb jae xor mov inc mov test xchg insb insb imul ret arpl fcoml lcall lcall leave mov xor xchg mov jnp mov jnp mov mov xor mov and fwait popa jns stos sbb shll xor jnp lcall or or dec mov dec ret cmp mov leave leave mov mov xor xor jns mov cmp leave mov or mov or mov add adc dec mov jp cltd andl jno and mov jns mov xchg xor mov jp stos lret and and jns lret ret or sub xor arpl rcl sub push or or sbb jns mov lcall mov jnp sub xor jns stos jnp test stos pop jns stos cmp stos sbb stos leave jns stos test jns stos imul sbb or xor bound ret lret sbb jns mov xor and jae cmp mov (bad) arpl push stos push mov and inc and lret ret mov mov jns or stos sarb cmp mov ret ret sbb jns mov or or and jns mov pop lret adc jnp mov jb xor jnp push jns mov dec bound sbb or or andl sbb or sbb xor mov bound ret lret sbb jns mov lcall sbb sub dec ret jns mov and mov or and dec arpl imul or or mov mov adc mov dec push stos ret jp dec mov jp or or jns jp mov xor pop stos dec or pop dec xchg xor ret xor xchg xor mov ret push ret xor xchg xor mov mov adc or push stos rol xor jb xor push stos ret jnp cmp mov or and sbb xor sub andl sub xor and inc and imul pop lcall lret xor bound ret mov cmp jp sbb push mov cmp or xor (bad) xor dec dec andl sub dec or cmp push xchg sub xchg jp inc mov mov pop adc and and jnp cmp jns mov sarl mov roll jns pop cmp or or jns and and mov (bad) jp or sarl imul shrb imul mov bound ret or or and jp and mov push adc lcall mov pop sub and mov and lcall inc ret jns sarl ret mov sbb or or (bad) cmp sbb ret jnp xor or rcrl or adc or sbb push jp and mov cmp sub and stos pop stos inc cltd lret cmp sub mov inc mov pop lret or arpl mov mov mov push pop jp mov dec jae sbb or lret mov lret cmp xorl sbb sarl leave jp rclb push cltd lret cmp xorl and xchg xchg adc cltd lret dec xchg jnp or or sub (bad) dec mov (bad) sbb dec pop lret adc push xor lret mov dec jnp rcrl mov cmp (bad) imul jnp mov sbb lret xor mov and dec xchg lret bound mov jns and or xchg mov mov lcall (bad) stos mov pop push xchg xor sarl dec mov mov stos dec mov mov inc sub leave ret or (bad) dec dec sbbl bound xchg or lret mov sub jns jns cmp mov (bad) stos dec dec cltd cltd ret dec pop mov mov lret mov dec (bad) stos dec dec mov jae adc adc sub jno push dec mov cmp shrb and test mov (bad) lcall adc (bad) or mov jns sub or sbb or push stos mov ret mov ret dec jns mov pop ret mov (bad) mov dec and mov sub mov adc test lds fsts cmp in int mov push pusha rorb or push dec out or sub into in sub push in out sub daa mov sub and outsl push dec das xor inc jbe xor adc adcb inc add xor hlt movsb sub mov andl jno adc lea out out sub pop cmpl jns rorl or sub xor arpl rcl sub push or or sbb xchg rorl dec imul or or sub lods bound icebp sub test adc test push data16 xor popa adc aam adc fst adc push adc or push mov lock (bad) movsb enter mov mov mov loop into test out out lods mov xor bound push inc cmpsb sub test mov lcall and mov xchg pushf stos xor mov repnz inc inc testl ret and movsb and and sbb imul popf sbb bound sbb rcll inc into fwait rcll xchg adc nop cltd xchg pop rorb fisubr mov jne aam je adc shlb outsb inc dec outsl inc push gs dec cmp adc lcall adc test push inc mov and loope sub inc push ss cmp xchg xchg lret mov and adc or in movl mov rcrl (bad) mov mov xchg add ss add test mov pop push xor icebp and inc dec cmp and mov or mov xchg icebp xor mov cmp sarl sahf or pop in inc repnz mov mov (bad) jb test icebp sbb cltd or loope aaa xchg jmp dec xor inc and loope adc inc xchg les test adc mov test enter mov es dec test xchg xor jbe adc sub nop loope fnsave dec shll inc int3 dec test inc xor outsl inc dec dec inc dec addr16 xor xchg cmp iret movsb cmp mov and (bad) adc inc arpl imul adc pop jp mov dec ja pop cmp xorl xchg or push adc int3 pusha (bad) into arpl fcoms sbb dec mov cmpsb ret adc inc xchg hlt xchg shlw jle xchg movsl push ja mov arpl mov add div and inc or or (bad) sub cs sub lock dec enter cmp mov and cmp inc cmp outsb data16 mov in ss jmp (bad) sub sub inc add xor popf inc movsl fisttpll jmp sub xchg xchg call into and movsl add jne jne adc add andl lods or push xor imull cmp mov push inc test aad xchg or push xchg daa jae cwtl xchg bound jo (bad) ljmp adc pushf push dec les add mov mov out adc push dec push push aam in inc jae mov dec out push inc dec jae inc ja test test call and sbb nop bound push or push loop inc enter mov cmp and test xchg bound movsb sub mov mov mov dec dec jae mov mov xchg in daa test and xchg adcl dec mov nop popf fdivs cmp push push or and decl dec push inc mov ljmp bound inc inc adc stos sbb mov sbb inc push inc cmp dec adc mov aam pushf loop jne daa adc lea mov xchg or xor out outsb incb je mov mov popa push cmp and je and mov inc inc jne mov pop lcall xchg adc es scas enter mov and mov movb xor or aad inc pushf into nop (bad) hlt out mov cmpl bound popf push fs jne xchg int3 in push pushf in movsb (bad) pop (bad) outsb bound (bad) ret lcall pop adc lcall and sbb into inc add cmpsb sahf inc data16 pushf dec test ja rcll sbb cmp dec inc inc mov or push sbb mov (bad) int3 dec inc sub jmp sub sub sub or sub or push es out sub jmp or sub sub sub es dec in jmp dec sub lods data16 in test sub sub push mov sub or push insl enter sub iret dec add gs imul out jmp data16 push test sub push dec mov in test sub sub inc push mov (bad) sub sub or (bad) or push dec call sub test jmp insb dec inc cmovle in mov mov sub sub push mov jmp imul push call or in sub mov push ljmp push sub or sub sub daa or or dec inc sub in lds in sub sub in sub sub dec or insl add in and sub test sub add mov push ljmp dec out cmpsb out add dec test sub into sub lret lods test mov sub into jmp mov es insl int in push into jmp or test dec sub call sub jmp inc lods movl push dec add lods insl dec imul enter lret sub test sub test sub das dec call es lods dec imul and dec lret sub sub or imul mov mov sub xchg lods push sub lea dec es or lea stos pop or xchg dec call mov sub mov jmp in test or in sub sub das sub in dec out dec out lea sub dec dec or inc or or es or dec das sub sub mov push sub data16 or or push insb in mov call sub mov mov cs or dec pop or sub cmpsb lret sub sub inc or jmp out jmp call or sub push sub sub sub sub call das dec or jmp and lods call insb inc dec ljmp and mov sub sub mov call or cmpsl cs dec into ljmp iret dec inc lret sub dec mov dec or inc or sub test or jmp push mov call sub sub or or or or mov dec sub and call or es push mov sub mov dec dec (bad) or sub inc ljmp imul sub dec dec or inc or or call sub in in in or inc or sub test inc call test in in or into jmp sub and out (bad) cs insb in jmp dec int test inc push call call in sub sub sub mov push sub insl insl imul out test sub sub imul call sub call lea (bad) sub push xchg daa sub jmp in or mov or stos or in out inc das dec insl out mov sub push movsl out enter dec inc scas jmp push out jmp es test vpaddsw jmp mov jmp enter mov push leave lods (bad) and dec int (bad) das or sub imul call push jmp lods dec sub jmp xchg imul stos cmpsb sub mov sub or dec enter in sub out xchg mov push sub mov out leave leave jmp push mov jmp sub call or sub in call dec sub sub in xchg test ljmp push or call leave or insb int3 mov test sub es or stos sub push daa or call lret cs add test mov and mov sbb and mov sub test push out nop stos nop lock mov ror mov mov ficom (bad) mov (bad) fmul mov int3 pop test pusha mov scas mov mov (bad) call mov pop jb lods hlt mov out xlat push pop outsl xor dec das das xor xor xor xor mov sbb adc and mov jns mov push mov mov ret push popa pop mov mov dec jp or push bound xchg adc cmp mov xor mov inc jp (bad) mov int3 ret cmpsb cmpsb sahf mov push mov stos mov jo pop insb ret and ret inc xchg mov jnp pop jno fwait push cltd adc mov xchg push jne test (bad) repz (bad) icebp xor adc testb sub push fadd sub ffree push lods xor adc lds adc lds xchg lds movsl and data16 in fs jecxz mov and test pushf and stos mov int sahf and mov mov sbb mov push mov mov imul lret test inc jp arpl (bad) rorl ficom les dec and adc inc push dec gs cmp push inc dec arpl push pop inc inc insb inc inc dec push dec imul push dec inc dec imul cmp xor fs adc pop push or hlt divl (bad) divl aaa sub movsl movsl sub mov cmp xor xor mov and cltd cwtl mov or ljmp cmp sbb in addr16 push jo push jae dec push inc sub xor pop push dec push inc push jbe inc xor test lret and je or lcall mov mov lods sub call das push and popa and pushf enter out mov pushf jb (bad) cwtl mov (bad) push dec inc push push inc dec cmp push data16 adc push ret rclb and push push inc and adc sbb sub adc mov inc push inc data16 xchg and xchg inc mov xor jae xchg push aam xchg out adc or mov and lret and out and add pop int3 stos lcall jo adc sahf mov inc dec imul insb jne adc out push data16 je push test icebp and mov mov xchg lcall xor sbb loope pushf rcll or int3 (bad) outsb out data16 inc mov xor mov dec dec push (bad) lret fnstsw movsb cmp outsl and dec subl rcll (bad) adc xchg cltd cmp cmp sub sbb or iret or daa sub mov cmp xchg and stos xor test out daa fs or fisttpll mov push pop and ret nop mov xchg movsl xchg repnz cmp xchg adc pop or mov into outsb push and or into leave or insb lret sub jmp test or stos sub sbb rcll repnz inc sahf xchg and mov adc xchg push mov test cwtl xchg xchg push push mov fmul xchg call pop mov jb inc xor mov call cwtl frstor or sbb into push nop sub inc xor and inc hlt sar xchg xchg or cmp mov es mov push mov inc cmp dec les adc mov loop push adc bound or xor jno mov xchg les aaa xor jae jb push xor addr16 movsb je xor test hlt sub out aam movsl sbb sbb cltd repnz mov mov xchg add inc sbb insb jg mov sbb in sub dec pop or addr16 xchg pushf iret mov enter mov out and xchg xchg ja in xor add enter in xor push sub xor mov mov call adc mov xchg pop lcall les hlt and daa and xor nop fimul ret dec popf loope dec ljmp sarl sbb imul or and mov mov xchg imul out xor lret cmp mov mov mov xchg or adc xchg inc inc into inc push in jae and repnz and (bad) cmpsl and and and inc test push aaa bound les mov cwtl mov aam movsb int3 hlt push pop pop pop pop into jo pop insb lcall rcrb scas ljmp push enter (bad) mov cwtl push mov mov out push cwtl test (bad) enter pusha xchg mov push (bad) in mov mov sahf cwtl pop (bad) push (bad) cwtl push cwtl mov push mov nop rol test in pop mov sahf pop push jo jb out push in out jo push mov push stos out mov (bad) mov jo repnz test (bad) xchg (bad) rol test fsubs lcall jb into test out push in out push out mov mov int3 into (bad) into fs (bad) mov mov (bad) mov hlt in nop enter out data16 aam mov (bad) sahf call mov mov mov shlb int3 out hlt enter mov (bad) hlt jo jo mov mov mov lcall mov push pusha mov lcall outsb jb stos nop in (bad) pop fisubl push lret out into mov lods mov (bad) xchg (bad) jb ret lods lock in xchg out ficomp mov call call pop sahf jo fs (bad) into scas mov outsb movsb mov test push into loopne int3 pop pop lock (bad) lcall enter int3 fsubp rolb mov stos (bad) (bad) (bad) (bad) mov rcrb xchg enter jb stos mov jb xchg mov cmpsb mov test mov jb mov pushf bound push fsubs xchg call mov nop (bad) retw fimul mov xchg int3 int3 hlt pop enter nop out fiadd movsb lret movsb int3 hlt push pop pop pop pop insb mov (bad) (bad) xchg data16 xchg lods bound pop pop push in int3 enter ret pop pushf lret mov (bad) mov mov mov int3 enter mov into test (bad) (bad) fisubr mov mov (bad) push mov in pop pop pop push in nop mov mov lock (bad) lcall mov pop pop jo pop push fimul (bad) (bad) test mov (bad) outsb lock lcall mov pop pop jo cwtl pop bound jo xchg xchg movsb movsb call enter test xchg (bad) shrb jo (bad) mov (bad) mov mov (bad) (bad) test (bad) lock pop push hlt out mov xchg mov xchg (bad) (bad) mov cwtl pop bound into mov rolb (bad) hlt insb mov mov mov pop pop test push aam hlt pop pop pop into repnz scas mov mov mov (bad) nop hlt (bad) in rolb shr ret nop mov mov mov mov into int3 push (bad) int3 sahf mov scas jo cwtl pop bound mov movsb test mov enter mov ficomp mov jb pop pop hlt mov jb mov out (bad) xchg (bad) enter mov fs insb xchg repnz pop jb pop out (bad) (bad) (bad) sahf shl fs pop pop scas lods ficompl pushf mov xchg (bad) sahf movsb push test push mov pop pop scas mov push mov shrb pop pop lock (bad) lcall mov stos scas ficom (bad) (bad) test movsb push cwtl mov into mov (bad) (bad) lods push rcr mov (bad) (bad) scas lods fimull push aam hlt in pop pop scas lret outsb in pop pop lock (bad) lcall data16 insb out ljmp push aam hlt in pop pop scas (bad) enter outsb pop pop pop pop fiadd xchg call int3 data16 ficom pop pop jb out push in out pusha stos xchg lods fisub lock test mov into test bound pop pop (bad) fimull rclb pop pop (bad) fcompl in jo fs test push in out out pusha ficomp xchg (bad) fisub test repnz mov movsb shlb xchg xchg bound (bad) (bad) test mov test in jo enter pop lods mov out push out mov shlb mov mov push xchg mov in mov mov (bad) into (bad) (bad) aam out test fcomps mov pushf pop mov push mov xchg (bad) (bad) mov sub mov sub cmp xor xor pop mov mov mov xchg mov mov cmpsb adc mov sub mov cmpsb pop cwtl and and and adc sub cwtl mov or loope adc fcom cmp imul mov fdivrs cmp aad loope in (bad) fdivrs xor add dec inc mov push fstpl dec stos or call push insl insl jae sbb or dec dec popf and mov dec les pop cmp pop jbe aaa insl push dec jne xor jns (bad) mov rcll leave lret ret sbb jnp cmp xor ret push inc mov mov and cmpsl mov cmp xor cmp and inc xor dec imul pop ja inc aaa cmp push dec jbe das insl dec jbe inc xor jp push and lcall add xlat xor push jb ret stos push adc rorl push sbb sbb sbb pushf jb cwtl (bad) into scas mov outsb inc jbe je and mov sbb adc fldl inc (bad) xor mov test mov xor mov rol dec jmp stos and stos push ret sub fwait or adc or int3 pushf bound mov bound xor aad movsb adc xor push jne hlt jne fwait push cltd cltd sahf mov aam nop out fiadd inc and mov movsb pop data16 xchg gs divl cli inc and mov and scas sub xor nop enter mov dec xor push push push inc and mov cld xchg stos add je inc inc outsl inc ss xor adc inc and and mov lods ror mov xorl pushf and movsb movsb call movsb insb pushf test sbb sbb cltd lea loope and fxch enter hlt and bound mov mov shll fs xor mov adc sub or lret ljmp mov xchg and js cwtl stc lcall cltd gs es sub fs sub int3 mov push je and xchg push inc push and and aas dec push das das xor ss xor lret jns mov les insl dec and jb and mov stos mov jnp push mov adc cmp stos mov mov xor xchg je jns sbb clc xchg push or push in gs cmpsl xor nop int (bad) dec push mov xor scas (bad) enter and sbb test ss mov imul sbb xor fisub test mov popf test stos daa nop sarl es jb push push inc and int3 jl insb in test call jb les or pop or jbe jbe popa arpl inc adc xchg nop bound lcall sub xor cmp adc mov in rcrl test mov insb fs push bound mov mov xorl pushf rcll sbb inc xchg outsl adc dec adc push mov test push xor xchg xchg mov test (bad) dec xchg jae inc dec mov jb xchg push stos mov dec ror mov push and jne xor test xchg lds xchg lds sub cmp pushf dec lret pop std sub lea (bad) adc and mov nop mov inc adc nop push repz and test mov mov js push mov outsb (bad) frstor leave mov data16 enter mov dec stos add and mov subl sbb sub mov mov pop and mov popl je adc cld mov int3 es cmp push js sbb (bad) mov jo adc (bad) pop adc insl sub dec sub sbb mov imul and add stos sbb mov mov outsl xor dec mov dec stos mov stos mov dec xor cmpsl sub dec out rcrb fstl popf aaa xor mov mov cmp data16 and fs les insl or dec inc (bad) es sbb adc push push adc inc xchg nop out dec jae dec push mov and ljmp cmpsl mov mov fstpl es jb sub pop jb les testb push out or stos stos test sbb mov mov pop mov test fwait mov pushf and xor mov daa sub mov sub mov and cmpsb cwtl cmpsb sub mov test mov pop cmpsl xor mov test movsl sub fwait mov mov aaa mov mov and xor mov and sub pop mov and mov movsb mov lcall mov mov sbb mov mov cmpsb sub mov cmp sbb mov sub cmp sub sub mov mov and sbb lods mov mov mov test test mov lods sbb mov and and and mov mov mov and cmpsl sbb mov pushf sub daa mov and test mov mov movsb and pop mov daa cmpsb cmp mov cmpsb mov mov test cmpsl and test mov and and cmp cmpsl xor xchg xchg movsb sub mov mov mov and mov lods sub xor lods sbb cwtl sub and xor sub mov movsl sub mov movsl sub sbb test cmp movsl test test mov sub mov stos xor mov and aaa mov mov cmp sbb xor movsb stos and cmp stos sub cmp cwtl sbb cwtl and xor and cltd cwtl es mov sub xor sbb xchg cmpsb cmp mov and movsb mov mov mov sub sbb mov sbb mov and xor mov mov mov sbb cmp mov cwtl sbb lods mov adc sbb xor cltd lcall pushf and sub mov movsb movsb es adc xor sub mov mov and mov movsl aaa mov lods sbb sub sbb daa adc test sbb cmpsb test mov lods sub movsb stos xor and cwtl pushf and sbb mov pushf and lods xor sub xor xor cmp and cltd pushf xor sbb mov sbb cmpsb cmpsb mov mov and cmp sbb cwtl xor movsb mov sub and and sub and sub xor mov daa and mov pop movsb movsb es movsb sbb and fwait mov cmpsl sub xor sbb test and mov pop mov mov movsb cwtl test cmp cwtl adc mov sub and mov sub mov sbb mov mov stos cmpsb mov sbb movsb mov mov mov mov mov lods mov xor test xchg cmpsl mov and and daa mov xchg cmpsl cmp xor and cmpsl mov movsb cwtl mov xchg mov and mov daa mov sbb mov mov pop mov cmpsl cmp xor mov mov cltd lods sbb mov and sbb mov sbb cmpsl cwtl sbb mov movsl fwait mov movsb test movsb movsb lods xor sbb and stos sbb mov sub movsb test cwtl cmpsl lcall mov and cmp mov test and sub mov sub mov cmpsb xor test cmpsb xor mov sub test cmpsb xor and xor and pop mov daa mov lcall sbb cmpsl and and sub test cmpsb sub mov sub mov stos sbb mov sub mov mov cmp mov aaa mov mov sbb mov mov test daa fwait cmp mov mov and mov cmpsl sub xor sbb lods xor test and cmpsl orb sub sbb cmpsl xor mov test fwait mov pushf and xor and mov mov in mov adc sub in inc cld mov push push push dec call fistl adc nop nop push pop adc adc or sbb xchg or xchg sbb fcmovbe push dec ficom adc push push dec lea adc or or xchg cli rcrb and sbbl mov lret mov stos mov bound inc mov sub sbb xchg pop lcall sbb leave pop lret mov or or or lcall (bad) in sub mov imul sub push daa sub call hlt movsb adc xchg inc je push inc jg mov sub sub out or and sbb rcrl pop pop xchg sbb xchg pop aam push push xchg dec aam rcrl push fst and pop inc cmp xor xchg xchg movsb sub lods inc addl adc inc movsl sub sbb cwtl adc cltd popf or cmpsb (bad) cmpsb xchg inc xchg in js push xchg xchg rcll xchg lea push adc aam sbb pushf aam dec xchg inc je test add inc mov adc jbe inc and hlt adc xor xchg xchg addr16 imul fst inc pusha xchg fs adc xchg dec cltd (bad) imul xchg stos mov and inc xor mov sahf pop pop xchg nop nop data16 push push inc xchg push cltd dec xor pop mov lock xchg test and sub mov jmp dec xchg arpl xchg mov xor xchg add xor xchg mov and sub nop xchg nop lcall push inc inc inc cmp dec push das insb xor je inc inc inc pop ss adc shlb adc sub cwtl cmp mov inc sub push inc (bad) stc sbb rorb xchg jo test xor mov mov dec lods rcrb and push dec sbb int sbb push pop sbb adc adc rorb rcrb fs ss add lods fiadd in sub xchg movsb das jb dec and mov or sub cmp aad mov adc dec shlb das dec loop inc adc test sbb sbb shlb dec ja mov int3 (bad) sub movsl out sub jle in jo pop push loop bound movsb int mov mov and or inc aaa push and mov push leave sub dec or xor cmpsb cmp and cmp mov shrl adc inc dec or cltd sbb jg insb cltd adc sbbb push jg push aaa xor mov (bad) push push out mov mov in sahf in out mov shlb mov sub in lret sbb cmp es mov adc or imul inc and cmp sbb inc mov push mov fmul jb push mov lcall mov les inc daa gs pop int3 sahf repnz lods push xchg fisub jbe arpl aaa xor ror push (bad) call xchg lds fucom les ss inc or push cmp les loope inc xchg cmc add lcall flds or dec xchg mov sbb pop push inc mov stos lret pop es inc dec mov inc and in push sbb leave mov jae jp mov dec ljmp cmp dec jbe (bad) loopne and push xchg jno cwtl inc movsb mov mov ljmp sub shrl and pop inc lea in out push sbb movsb adc inc pop mov mov out sub mov inc pop test add mov xchg rorb shlb dec adc ja rcrb cmp mov adc test (bad) imul es jg addr16 push (bad) inc in push in cmp adc mov aaa adc adc stos pushf and adc and (bad) adc pop and mov sahf push adc or xchg test nop jno sbb (bad) xchg daa ja into imul ss dec push popa dec js inc insb inc mov jp xchg or xor or push cltd in or sbb xchg pop loope adc or or roll movsb (bad) and adc in adc mov xor movsb int xor adc inc mov mov fstl in inc lds mov add mov aad inc lods roll add fnstenv inc sarb loope lods test mov rcll fldenv adc dec xchg add jmp and pop push lds mov mov and pop sub push leave cmp mov mov xchg inc fucom int mov dec adc sbb loope or int lods fldenv cmp push fldenv lods sub or cmp mov gs push pushf fsub int sbb movsl popa push xor pushf lods mov movsl popa push xor cmp adc inc inc or fucom int popf movsb roll adc sbb loope or int lods (bad) lods test mov popa pushf fstps lods adc or dec cltd call mov add xchg add sbb mov inc sbb loope mov adc imul xchg in inc popf adc inc inc or dec movsb int xor test xor int3 int mov mov add inc popa dec push inc popf or xor mov add add sbb fcomp mov rcr mov popf xchg pop in loope loope cmp adc lds cltd mov gs mov mov and loope add add int sbb mov imul xchg in inc popf adc inc inc or mov or push inc popf or cmp mov add and pushf mov lds lods sbb cmp mov add add popf int mov test mov mov int pop fnstenv fldenv loope loope cmp adc mov fldenv fsub sub xor and cmp popa lea xor and xor mov pop sub in rcll add test inc mov inc fldenv lods cmp mov test mov push adc mov add call sub mov call sub mov push in mov adc mov (bad) call mov sub mov mov int3 mov mov mov popa adc cwtl mov mov inc int3 mov leave mov in mov popa fdivrl rcll push rcll cwtl mov or inc int3 mov in int3 mov mov inc int3 mov leave inc call adc mov mov add lods mov loope int3 rcll add leave inc loope and and sbb lds mov inc inc or xor or and add or mov inc inc or pusha loopne push adc loope loopne mov and sub rcr mov mov adc test imul sbb lea add mov mov mov inc mov mov mov roll or mov or xor jmp and fxch movsb rol aad lds cmp adc popa lea adc gs push adc popa fnstenv adc aad or xor mov adc xor jmp xor mov and shll adc xchg or sbb pop adc xchg loope test lds in mov popf xor or add shl or or xor popa mov xchg fsub jmp xor jmp and fxch test aad lods or or cmp sub add int sbb pop pop fstps mov pusha rorb mov mov xor mov pushf aaa and mov aaa cltd and daa sbb pop xchg mov cwtl and xor sbb daa mov sbb cltd pop xchg mov movsb int xor adc inc mov mov fstl in inc fs test repz ret xchg push xchg add xchg je adc hlt push lds add xchg cmpsb xchg xorl push mov xor les inc test ss mov jp dec or andl mov jnp mov jp (bad) sub dec ret or xchg jb adc xor jnp push xchg sub jae (bad) add sbb pop arpl bound mov mov jnp mov xchg pop mov xchg and pushf loope gs push pushf fsub int sbb xor cmpl adc mov inc popf adc inc inc or inc sub mov insb mov lock push adc int3 test (bad) sub ljmp insb xor shlb mov sahf inc mov xor stos (bad) popa jg loope mov es or push inc xor dec addr16 inc inc inc insl inc ja sub jbe das das sub xor cwtl int xchg pop in (bad) or leave jmp in jne xchg mov mov pop mov push call loop insb call mov push or adc xor and in push push cwtl out nop mov into enter es and or popf into addr16 movsb mov jno stos mov mov or icebp sbb adc adc adc (bad) sahf cltd xchg and sub lret sub bound cltd in rcll add movsl xchg pop test test cmpsl jb sub mov ret inc xor loop fs fmul xchg mov inc dec dec int3 jno mov pusha sarb in fldl mov mov ret xchg (bad) jne dec dec push adc cmp or scas push pushf dec sub sub xchg shrl mov sub xchg orl mov and enter stos loop dec nop leave sbb and sarl les inc gs cmpsb pushf dec pop push and and mov lcall mov inc cmpsb movsb dec lcall jb and test jbe dec jns mov cwtl fnop mov push dec jmp jmp es dec repnz cmpsl test sbb and and adc sbb dec and dec pop jbe pop stos sbb push (bad) sarb mov mov push xchg adc fsts xchg xchg xchg xchg rcrl adc lea push rcrb and out aam test xor adc xchg ss inc je sbb fsubs jae cld int3 cs lods in jb mov das and (bad) fcoms stc lcall cltd (bad) jno pop loop inc adc push inc adc push and inc jne push inc push inc int3 mov (bad) out imul inc mov mov mov sahf daa xor and out push ja jbe and cmp dec je cmp dec inc push out bound push fs sbb sbb xchg test adc dec out and jl cs lods dec cmpsb push push push inc dec xchg sbb in mov out or or pop push inc adc pop mov dec (bad) je xchg xor cmp stc cltd cltd sbb adc push out call (bad) jo loop fcom in mov rclb xor test inc insb mov xor and push push inc (bad) cltd mov xchg adc or jae pop adc adc dec or mov xchg sarl and push inc adc mov out scas mov cmpsb jae jbe jns icebp cmp xor hlt cmp inc cwtl xchg aad or sub fist mov or push call jae mov dec mov sbb and daa or cmp xchg (bad) out mov (bad) insb insb lret (bad) js mov lret test aaa stos call cmp or xchg xor lods xor xor sub jmp (bad) mov test in dec push incb test and scas icebp xor les lret xor and add test sub movsb mov sbb sub mov mov and and and mov mov cmpsb sub xor and test sub movsb cmpsl sbb cmp xchg mov sub fwait and xchg mov xor mov mov movsl sub mov xchg pushf stos xor mov stos test mov xchg xchg cwtl mov cmp movsb xchg pushf mov sbb sub and pushf and cmp lcall sbb cmp test and cwtl lods sub cwtl test mov and cmpsb sub test stos sub aaa mov mov mov mov mov sub mov test mov sub cmpsb sub test mov mov mov cmp xor mov xchg mov cmp xor test pushf aaa sub mov sub xor movsb mov cmpsb mov mov es mov cmpsb sub pushf and mov movsb fwait and cmp mov mov mov sub cmp xor cmp and lods mov and sub mov mov pop xchg xchg xchg pushf stos xor xor cltd mov stos fwait and xchg xchg xchg xchg mov xor sub movsl and movsl and mov cmpsb sub test mov mov mov cmp pop mov mov mov lcall mov xor xor mov cmp movsb mov xchg pushf mov mov lcall cmp pushf daa mov mov xor pop xchg xchg lods sub xor mov mov mov stos and cmp cmp test stos mov pop mov test fwait sub cmp mov mov xor mov mov sub sub xor lods sbb mov xor stos sub movsl fwait es pop xchg pushf lods sbb xchg fwait xchg xchg xchg mov mov xor pushf xor pop xchg cwtl mov and mov mov mov lods lods xor lods cltd mov mov xchg mov sub xchg mov xchg mov sbb mov sub xchg mov xchg mov sbb lods aaa mov xchg xchg cltd xor xchg xchg pushf mov and pop xchg lods aaa mov xchg xchg cltd xor xchg xchg pushf mov and pop xchg mov xchg mov xchg lcall and mov xchg pushf xor xchg mov mov sbb xchg xchg cmpsb sub mov sbb sbb sbb cmp mov mov pop xchg mov lods sub test xchg mov sub xchg mov xchg mov stos mov mov mov sbb xchg pushf sub mov sub xchg test xchg mov stos mov xchg mov mov mov mov xchg stos test sub cmpsl mov mov xchg xchg xchg cmpsb mov pushf stos xor mov sub xor sub xor daa sub xchg mov mov sub sub sub and mov xor mov mov sub and mov test mov mov movsl cmpsl sbb and xor test and mov and sbb and mov mov and sub mov stos sbb mov mov and cmp mov movsb mov and mov sbb stos cwtl test mov and mov mov mov stos test cwtl mov xchg mov xchg mov mov sbb mov mov mov sub test mov sbb cmp fwait mov cmp mov fwait and daa pushf daa sbb mov mov mov movsb mov sbb lods cwtl and mov pop xchg xchg lcall pop cltd stos test cltd stos cmpsb mov movsb pop mov xor and sub sub test sub cmpsl mov and xor pop xchg lcall xor sub daa stos sbb mov mov and cmp mov and xor movsb sub mov xor aaa mov mov sbb mov sbb fwait test ss sub dec and and mov mov mov adc xchg adc rclb push push sbb push rcrl cltd pop push cltd cltd push push adc adc pop sbb aam adc xchg adc adc sahf mov lret out imul bound das inc imul jns push push imul inc xor mov xchg adc push pop rcrl aad xchg mov pop push popf rclb or aad dec into push xchg lcall adc adc cltd sbb ror push rclb push into push adc sbb pop push xchg push dec push xchg sbb rcll adc xchg rcll xchg xchg xchg push push xchg fcoml into push nop push aad rcll adc movsl push mov imul movsb cmp xor cmpsb xor cmp sub adc pushf aaa sub mov sub xor int int3 jmp cmpsb pop dec popa inc inc inc rcrb adc sbb mov movsb fwait and adc rcl aam xchg imul lret or and adc and sbb dec adc dec xchg xor xor pop bound dec mov addr16 xchg fadd pop xor inc and lea mov xor mov push insb fs dec outsl jp inc push bound dec jp push das dec inc bound xor jno cmp pushf daa mov adcl (bad) xchg test test inc adc hlt push adc inc jne adc and inc and or xchg es lds (bad) testb lds inc jbe je (bad) jg (bad) xor ror mov adc or mov sbbb xchg mov adc sbb int3 fsubl test fs inc inc inc mov lret fldenv imul sub or mov push dec out sub push gs dec sub cmp dec xor repnz mov out movsb mov mov xor xor sub das cmp dec push and sub mov adc mov adc and sub dec push outsl push adc mov or jo lcall xor jecxz dec scas jae mov clc xchg push add lahf xor mov xchg cmp sub dec and inc sub loop pop push imul xor push pop xor inc push xor and jb cwtl mov xchg lcall mov lea rorl push inc push dec dec xor (bad) pop mov sub ja push dec (bad) into test mov mov lcall inc dec jae cmp xor xchg dec lea inc dec push inc int3 jb mov jb jno mov int cmp fs dec push inc cmp push inc inc dec inc xor push dec lds inc (bad) loope adc or and cltd cmp cmp or dec lret sub or or push outsl outsl jo xchg push inc stos fwait enter add pop mov les fwait pushf mov xor and and mov sbb adc sub dec hlt fdivp out adc dec dec test xor xor inc bound or push pop mov cmp sahf pop and and mov ret (bad) xchg and (bad) int3 pop pushf ficompl outsb mov scas push jecxz (bad) xor movsl push adc lret jae mov (bad) enter outsl call xor xchg hlt sbb mov mov and fs inc ss (bad) enter lret xchg and jnp jl sub inc xor xchg sbb mull dec push sarl cltd sbb xchg xor mov push cmp inc test jne mov xchg ds das xor mov dec mov lods inc scas pop xchg adc xchg xchg dec xchg cwtl dec mov xchg adc and sarl cmp mov jle fs dec (bad) ret enter push mov les and lcall call mov dec mov xor mov (bad) es mov cmp and outsl std and test in dec sub data16 and enter fcomps enter outsl adc or outsb inc (bad) and inc or adc les xor jno fwait jmp push (bad) les dec lret sbb sbb pop xchg cwtl mov lods xor cmpsb sbb mov daa pushf daa sbb sbb sbb and sbb xor xchg cltd aaa stos lods aaa mov stos cwtl cmpsl sub cwtl test mov stos pop xchg lcall fwait cmp and mov xor sub and fwait xchg cltd stos cmp movsl and cwtl sbb pushf cmp and test xchg mov movsl sub sbb mov xor cmp cmp es es sub mov and stos movsb mov movsl and sbb lods test mov and sbb lcall and sbb lods test mov and and pushf sub xor pushf stos xor mov sbb cmp sub mov and test sub cmp cmp mov xor mov mov and mov mov cmpsl sub and xchg mov cmp mov sub cmp test pushf cmpsl sbb sbb mov mov sub movsl mov mov test cmp xor sbb and and and stos sub sbb and mov xchg cltd stos cmpsb xor stos test cwtl sub lods and sbb xchg xchg xchg mov sbb xchg cltd aaa mov lods mov mov movsb cmp mov mov cmp mov and stos mov mov movsl mov and test mov mov cmpsb pop lcall and and and mov movsb mov cmp stos sub cmp stos xor test mov and mov lods sbb mov mov movsb mov test sub daa mov and test mov sbb and cltd mov cmpsb sub cmp pushf xchg xchg xchg mov cwtl stos cmpsb sbb sub xor sub sub and sub xor sub sub xor lods sub lods xor sub mov cltd cmpsb mov sbb cmpsl cwtl sub and sub xor cltd mov stos and cwtl mov mov cmpsl mov and xor cmpsl sub mov xchg cltd stos cmpsb xchg pushf mov cmp mov lods sub xor lods xor mov adc xchg cltd lods sub and cmpsb sbb and lcall mov mov xor mov mov mov mov mov sbb cmpsb mov mov cmpsl mov pop mov cmp cmp test stos xor mov and pushf and sbb mov aaa mov cwtl mov mov cmp mov mov lods xor xor test mov test and cltd lods xor pop xchg xchg mov xchg cltd lods xor xchg cltd lods sub mov pop mov mov cwtl sbb mov adc fwait cltd cltd test sub mov mov cmp sub sbb lcall pop mov test mov mov sbb and mov lcall xor sbb xor mov xchg mov pushf sub mov sbb ss pop xchg pushf lods sub and and sub mov mov and sub aaa mov and xchg cwtl mov xor mov sbb test cwtl and daa sbb xor pop xchg pushf lods xor sub mov lods and sbb test pop xchg pushf aaa and lods cwtl cmpsb movsl and xor cmp cmpsb cmp stos mov sub test movsl pushf xor sbb mov cmp and and stos cmpsb sbb sub sub xchg mov sub and and and mov mov mov mov mov movsl mov mov fwait cmpsl mov mov mov mov mov mov mov fwait and xchg movsb and test mov sbb pushf and fwait and cmp and stos sbb stos movsb mov adc or int3 pop sbb rcl adc jmp enter inc inc sub out (bad) or xchg mov int dec mov repz jne divb inc and jns mov mov mov lret xchg or dec adc xchg jnp mov addl pop lcall sbb cmp mov mov aad xchg bound xchg mov mov ljmp fsubr enter fwait loop push adc mov mov stos dec mov push or sbb lcall or mov mov lods mov loop inc adc dec dec call pushf loope popf popa int adc mov jmp and test repnz jecxz push inc and test mov and sub mov nop ficom int leave dec test or add imul mov imul and inc and mov sbb mov dec push mov sbb ficoml adc xchg sbb lea in mov xor dec test movsb bound adc sub push xor (bad) les sahf fsubrs out mov jne mov and xor addr16 inc and sub mov sbb pop aam int rcl aas cld inc sub inc dec xor jge into push out lcall jp pop insb inc das inc inc xor mov mov imul sub or leave call adc inc mov sbb sbb mov add cwtl iret dec lods in addr16 movsl pop xor mov xchg es adc movsl sub or inc xchg movsl es sub movsl push popa inc movsl fisttpll pop repz nop int cmp int3 (bad) hlt lods jo xlat inc sbb cwtl mov mov cmpsl jmp inc push je inc xchg in push test and dec xor fs xor sub loop sub mov cwtl lods xor sbb scas push inc arpl inc inc sub add (bad) and dec enter movb inc mov xor and jns sbb pop mov leave lcall jb pushf es mov aam sahf sbb jns sbb popf rcl test xor inc dec insb inc pop (bad) (bad) mov ret popa addr16 das and andl sub or sbb xor roll mov xor dec popa xchg add cltd nop mov int3 mov fs mov dec mov fcmovu test insb and fldenv xchg or aas adc mov sub in push jb test (bad) test cmp push or pop test adc orb mov or xchg lret inc and xor pop mov add xchg mov (bad) mov movsb in xchg xchg mov movsb mov pop pop lods mov out pop add adc push inc les and lcall cmp iret nop mov or pop xchg fiadd les daa lods mov fldenv mov stc or outsl cmp int3 mov xchg enter cmc in push mov pushf sbb cmp jp mov fmull pop and shll daa loop dec adc mov adc xor into pop in dec addr16 in xor out cs mov test das push das push nop mov fwait xlat jmp dec jp inc cmp pop push inc mov fucomp mov lods or lods inc enter insl dec fs push (bad) mov mov adcl xor xor les les loop xor inc mov push push push inc push inc inc fs and into xorl mov daa je into call fiadd test inc je hlt pop adc cltd cmp out jae sbb xor inc fs dec daa push mov adc mov jns adc aam dec cmp xchg push adc jp mov dec dec push in jp pop mov mov dec dec ffreep fdivs mov aam adc add dec xchg in push pop dec les adc jns adc push push xor imul psllw xor mov in sub adc jo pop mov mov mov jmp sbb mov mov mov (bad) (bad) xchg (bad) (bad) mov (bad) pop mov lods out stos mov mov lret pop in pop pop scas scas fiadd push mov xchg mov mov shlb cmpsb xchg mov rcrb in pop pop scas scas into xchg test stos push stos mov mov lcall stos bound ret (bad) nop bound sahf aam test jb scas push sahf cwtl test mov mov into test mov stos shlb jo jo fisub bound cwtl stos xchg cmpsb shlb (bad) stos ljmp into jo xchg mov call cwtl lods xchg push (bad) lcall movsb xchg loop fcmovbe (bad) int3 stos mov (bad) (bad) (bad) (bad) (bad) xchg mov lcall (bad) test (bad) (bad) (bad) xchg call cwtl scas (bad) rcrb pop in jb sahf ficomp enter enter enter pushf nop ret cwtl sahf xchg test mov lcall test fs test pusha cmpsb hlt xchg (bad) (bad) shlb hlt xchg (bad) (bad) insb outsb lret xchg pushf (bad) (bad) (bad) (bad) (bad) xchg mov lret lcall mov xchg stos mov stos mov out push mov into test bound mov bound mov xchg xchg shrb out lods lods mov scas lods in xchg sahf cwtl pop bound xchg ret pop enter movsb out lcall mov hlt lcall hlt lcall hlt lcall xchg (bad) mov (bad) jb (bad) aam xchg in mov jo repnz xchg xchg (bad) jo mov xchg out shlb pusha (bad) mov mov insb (bad) hlt lcall call cwtl out nop stos (bad) pusha out (bad) mov out hlt pusha in int3 lock jb cwtl movsb xchg cwtl jo in mov mov xchg (bad) jo data16 mov in push out (bad) mov repnz movsb xchg movsb fs loop enter mov pusha jb sahf cwtl jo enter cmpsb cwtl repnz call pushw mov outsb lods xchg repnz call xchg mov (bad) mov mov stos xchg (bad) hlt data16 int3 mov jb (bad) (bad) jo cwtl pusha push rcrb mov hlt lcall hlt lcall rcrb xchg cwtl test mov cwtl movsb xchg xchg push mov xchg (bad) aam mov mov cwtl movsb xchg mov in xchg bound out mov aam data16 mov push cwtl movsb movsb xchg pop hlt in nop enter lcall fidiv in pop (bad) enter enter (bad) scas (bad) (bad) (bad) (bad) insb nop mov pop pop push mov test (bad) enter movsb int3 cmpsb mov jo loopne (bad) mov mov pusha stos (bad) fdiv xchg into pushaw stos xchg nop pop mov pusha data16 push data16 mov test outsb (bad) (bad) (bad) (bad) (bad) (bad) mov mov stos mov stos (bad) push fs ficom repnz pop pop shlb out jo lcall into (bad) (bad) (bad) (bad) mov call push (bad) xchg rol test mov int3 movsb push in nop into mov ret movsb into xchg (bad) push bnd int3 movsb push mov mov cwtl (bad) mov into test mov into (bad) mov push mov test fimul xchg lock stos stos xchg (bad) (bad) (bad) sahf out ror (bad) jo nop mov pusha xchg enter into (bad) (bad) (bad) mov xchg (bad) enter (bad) (bad) (bad) (bad) mov xchg mov test mov insb xchg test lock scas nop stos mov ljmp cwtl aam pop pop pop pop lcall mov call out mov (bad) into mov insb test in pop int3 test nop mov (bad) insb scas mov in out data16 push mov pushf mov pusha mov mov mov xchg fmul mov mov into pusha pusha mov xchg pushf jb (bad) test push push fiadd pushaw mov shlb lcall call jo insb jb mov data16 (bad) jb insb push pop pop int3 insb into mov mov fwait and mov movsb mov xchg test xchg xchg mov mov stos sub mov pop mov add lods out fs inc addr16 dec inc das inc pop inc push push push cltd add les stc cltd rclb stos imul dec inc inc inc dec outsb inc jp dec push pop jbe push xor push push push popa addr16 outsl outsb dec xor push cmp inc dec push inc push dec pop push cmp xor insb dec dec dec push inc push inc cmp inc inc inc and arpl adc xor inc push movsb shrl inc mov pop xor or add push pushf into jo xchg mov call cwtl lods xchg adc inc pop jns xchg adc push push xor dec pop xor fs dec inc pop rclb rclb dec adc xchg rorb (bad) repnz jnp jno mov jnp or mov and jb inc or bound push mov stos cmp fwait lret rcll mov test lcall sbb pop dec imul mov lcall mov mov push push jns adc cwtl mov jae in push xor bound cmp cwtl call lcall rcll xchg push rcrl nop loop dec enter xchg enter andl xor sub dec enter sub test movl insl daa or dec mov push and shlb int or sub ja inc dec movsb cmp xor jmp xchg cs cmp mov imul inc pushf dec mov dec enter rcll ret push inc mov addr16 push arpl aaa cltd xchg frstor andl dec mov rcrb mov popf cltd xchg pop into data16 xor pop xchg loope fisttpll mov or mov test and inc fs adc in inc xor repz mov outsb lretw add dec push push enter nop pushf xchg xchg lcall fidiv in inc inc test cmp mov mov xchg push mov test orl push inc pop dec inc cmp and sbb push xchg xor outsb jp xchg sub mov imul inc addr16 insl jae add popa int add leave fmul mov test lock into mov push mov sub arpl inc pop outsl push sub cmp dec call jns xor movsl cmp and and into pop icebp xor and movsb sub mov mov pushf xor sbb mov and and dec arpl test cmc add push inc cmp jmp or or push bound xchg xor xor dec sub jae and jns lahf and lret fsts das or lret and je dec push jo dec push inc jns je xor cmp mov adc mov shll adc int3 dec xchg sub dec mov inc mov lea xor adc sub push pop imul ss sub dec lods loop cmp or fwait push test (bad) and adc mov bound cmc push xchg icebp sub les dec sub ret adc js sarb adc xor or lods add inc mov sub int3 in push dec test inc dec icebp movsb pushl adc xor sub and test dec or pop adc jae and or cmp and cltd mov sbb push fstl mov pop nop fsubr dec or sub or sub movb iret push imul push out mov dec lea mov jne cwtl in add int3 dec or mov push loop imul sarl adc adcl mov in enter repz mov nop aam mov in pop pop push pop fsubrl mov lcall loope adc xchg push cltd (bad) adc inc arpl pop sahf es cs lock scas hlt mov xchg and xor cmp sub push lods xchg cmp (bad) int pop mov push stos inc mov sub cmpsl adc mov das push movsb daa cmpsl sub cwtl mov ret pushf dec or xchg cltd in dec push push xor push push stos sbb rcll adc inc lcall mov imul mov push inc and mov mov or and fs and dec es insb dec stos xor and cmp xchg ja and aaa icebp sub push pop xchg bound inc lret (bad) (bad) call mov and push inc mov xchg fs adc ret je je gs xchg add adc xchg push addl adc adc xchg xor movsb mov adc adc push xchg add add xchg and xchg mov daa xchg xor xchg adc test repnz ret je je gs movsb xchg xor adc adc xchg ret adc (bad) inc bound daa adc add adc notb notb add push jb inc xchg xchg add xchg push push push movsb xchg xor xchg inc inc hlt xchg mov movsb xchg mov adc adc adc xchg push jae in xor and inc je test (bad) arpl roll testb testb testb testb testb hlt push xchg xchg add xchg xchg les arpl bound hlt ret je je and xchg add xorl mul repnz adc add adc xor xchg adc xor push and adc inc test push xchg ret je je pop xor fs es jbe adc and inc mov movsb and xchg inc in xchg mov roll adc adc inc cmpsb inc je addl and mov xchg es push movsl push xor movsl es xor and push xor and push xchg lds push xchg lds fs cmpsb gs jae addl ret xor cmpsb gs data16 adc xor es xchg in inc xchg adc inc test ss adc adc xchg add test xchg add test xchg repnz je adc adc xor es xor es test xchg add inc cmc inc and (bad) xchg adc inc data16 inc es mov addl adc push xchg je lds and adc adc inc and xchg inc arpl adc adc inc addr16 cmpsl jae (bad) cmc gs addr16 xchg add je roll add cmpsb cmpsb repnz and adc mov fs (bad) inc adc adc adc adc cmpsl je inc es inc push push je lds es lds and mov adc add fs add adc notb push jae push jbe add jbe adc push ret push xchg repz mov adc jbe push push je adc jbe push movsl push addl adc adc mov repnz test xchg lds addr16 lds xchg inc inc add adc cmpsl jae (bad) cmc gs addr16 arpl xchg xor inc test xor xchg les xchg push addr16 and mull adc push test inc (bad) xor adc lds adc adc inc xchg xor inc data16 jb inc push loop inc pop xchg lds push xchg inc gs je data16 adc and inc xor and inc inc fs xchg repnz jecxz es je inc (bad) cmpsl daa je adc xchg (bad) cmpsl jae (bad) cmc gs addr16 add inc adc xchg mov adc add repnz je je adc xor es repnz jbe adc adc xchg fs ret xor xchg repz xchg mov repz mov push aam adc adc xor xchg jbe jne push addl inc adc xchg test inc movsb adc je xor xchg repz xchg mov jae aam repnz inc push jae xor je adc and push xchg xchg adc add xchg xchg xchg adc adc xchg xor fs repnz je je adc inc and xchg inc xchg and xchg mov jne jecxz and and test inc gs add repnz inc jne movsl xor inc and mull gs addr16 jne cmc xchg je inc cmpsb push je movsl push ss roll movsl es and gs and add fs xchg (bad) mov les jne test adc adc les xchg adc fs movsb adc adc adc fs testb repz xchg fs xchg add aam adc adc xchg test pop arpl adc adc adc movsb pop xchg adc adc xchg ja mov xchg pop xor pop test jae (bad) cmc gs addr16 jbe xchg add inc adc data16 mov aaa add adc adc xchg push addl push aad inc les arpl test xchg je xchg inc push test gs adc mov movsl push addl add adc test hlt fs (bad) in xor inc aad mov xchg aam test and sbb mov and cwtl stos cmpsb sbb sub mov lods sbb and mov mov mov jmp or dec pop add sub sub sub or ljmp adc ljmp lds sub sub sub inc dec imul (bad) mov push mov adc popf sbb rcrb (bad) (bad) leave stos sbb stos pushf aaa and xchg mov sub xor adc xchg push push xchg or sbb or fs cltd test add or push xor inc sub insb pop arpl enter adc mov jns xchg jp mov leave xchg xor data16 mov xchg push pop mov lret rorl rcll ficoml dec pop pop inc xor adc nop dec cwtl mov xor mov xor lods and fs dec dec movsb push push imul lret push xor xchg lds test and pop mov cltd lcall xor inc fsubrp xor inc xchg sbb pop mov xor mov rcrl sarb roll xchg cltd adc xchg (bad) inc repnz es mov addl pop les and enter mov and ss nop repnz xchg out push xor orb push mov inc (bad) inc adc sbb pop popf rcll xchg fstpl pop rcl and cld mov push xor movsb enter mov cmp sub xchg jbe adc push into inc gs mov mov xchg imul or or sub dec dec push push xor cmp je adc addr16 and lea cs xchg sbb ret adc push xor and addl jb xchg adc lcall and je cwtl rcll rorl cmp ja push inc adc aaa repnz mov flds ret lods dec dec jmp in lea push les ss aad inc adc xor xor mov and dec jp inc loop push adc adc adc inc inc inc push xchg lahf mov sbb dec xor sbb sbb inc test adc shr adc sub insl (bad) clc xchg nop dec mov cmpsb push jmp cmp xchg cld mov leave add push imul dec xchg sbb sub sub loope xor (bad) call xchg xor fstp les clc popf fxtract cmpsb inc adc data16 mov aaa add sbb sub and in es push adc orb and mov xchg aam test mov and decl icebp xor (bad) sbb adc push movsb sub mov loop outsl loop insl and xchg rolb ror push cmpl adc loopne pop sbb es scas (bad) les inc push push sub lret sub js xchg dec and and cmp rclb lret lcall inc out xor lcall pushf fisubl push iret or int out push cmp xchg xchg adcl sub and mov mov pop adc jo aam ror mov fiadd inc (bad) stc lcall mov inc jbe xchg xchg movsb jbe pop push les addl test enter xchg es aaa cmpsl mov icebp sub push es enter and xor jl mov popa outsl pop das (bad) ficom (bad) ret add stos jmp or iret sub sub inc and adc dec ljmp popa fldenv in mov push enter xchg dec push xor push dec outsl dec push inc dec dec (bad) adcl ja adc daa movsl test rcll sahf adc mov es or int3 fcoms xchg mov shll (bad) daa push outsl mov pop dec push push push jne pop jae rclb dec fsts (bad) call (bad) xlat adc dec ljmp stc mov sub out lret enter in cs xchg ljmp data16 mov or sub into call mov mov or or sub sub dec sub or mov dec dec sub or dec ljmp out inc in out in es out sub dec call mov dec das dec call and or out mov in call inc enter in imul push out or scas lea test out or dec stos sub in sub (bad) out into in or in mov sub sub sub jmp dec dec ljmp cs sub sub or mov or push leave or test in (bad) cs inc inc mov sub sub movsl insl dec (bad) push in out sub ljmp call dec out or call leavew mov dec sub sub dec stos sub mov or mov dec (bad) out call dec in in jmp dec sub or and out enter sub ljmp sub sub daa sub xchg dec sub dec inc leave insl xchg or sub into call mov mov or lret or mov ljmp out insl ljmp dec or mov push mov jmp mov lret dec dec dec cmpsb push lods (bad) cs leave or das inc inc mov test mov in mov out push out in sub mov mov in mov test cs imul es lods in inc in mov call dec enter out push mov enter out in into ljmp stos stos es sub lret or int3 mov mov or insb into ljmp inc leave dec sub sub push out out sub in (bad) sub es sub lret push sub out stos es lret in push mov or in jmp mov in sub jmp xchg in call and out stos and out test in in (bad) mov mov ljmp in push mov in mov lret dec or call movsl in or call leave mov lods lret sub lea sub outsb int int3 dec inc in dec ljmp sub or pop das inc in mov test sub enter inc mov in push dec (bad) push lods push cs or mov dec dec push call dec dec inc push lret in sub xchg imul push or daa or data16 push dec sub or sub sub push int sub sub cs test push test or and out stos lods dec (bad) mov leave lret push enter in push into jmp push insl call sub sub sub mov test push outsb or sub es or mov sub test sub stos stos or sub call dec imul lea sub dec dec jmp or xchg sub or sub jmp in jmp sub test lret push sub sub mov dec addr16 sub mov call or push mov mov dec or mov dec lods inc dec push int3 dec in or in test sub or cmpsl or out sub inc or enter or dec dec imul in or sub test sub push data16 out or push into ljmp daa or sub stos lods mov imul es insb insl lea sub imul es or mov in mov imul mov push sub sub push or mov sub or sub sub sub mov mov dec imul or imul and sub or call or test data16 call lea lea push mov inc or call or test inc ljmp or sub mov imul (bad) and andl fwait push push aad push xchg aad fcmove or test or sub into call mov mov or or sub sub dec sub or mov dec dec sub or dec ljmp out inc in out in es out sub dec call push push jp inc and or pop inc sub aad or (bad) (bad) mov and xorl inc movsl test es add adc inc xchg movsl push xchg es jbe xchg inc mull xchg add xor sbb dec cmp imul cmp dec dec cmp cmp inc pop push dec das sub dec cmp pop push push inc inc inc dec push ss gs push adc mov sub movsl insl dec (bad) push sub pop roll dec fs ja inc and mov xchg lret fs ret mov mov pop pop out (bad) mov addr16 inc jno popa addr16 cmp cmp outsl jbe inc inc inc sbb stos mov stos movsb mov out enter mov sbb inc call xor cmp stos sub cmp stos xor test mov and movsb mov adc adc aad ret mov push pop mov xchg push sbb adc push xchg sbb fmull jno stos or cmp xchg jbe xor fcomps inc aam gs xchg add cs mov jne lcall icebp and cltd or rorb cmp nop (bad) jo movsb insb xchg xchg ret in inc imul dec push test stos es lret inc movsl xor loope popa test popf pusha rcrl xchg sbb insb test (bad) out (bad) es hlt inc lret and inc xchg sub pop nop daa ja dec test cmp push push mov insb mov out int3 pop mov or enter inc xchg push and stos pop (bad) and mov cmp stos and int xchg mov sub sub push addl mov dec dec fmuls (bad) (bad) cmpsl xchg movsl push and xchg push test sub adc or inc sub adc cmp mov jmp push insl call mov (bad) call sbb mov movsb out aam mov inc mov xor es and rorl add xor cwtl (bad) popf cmp sbb adc mov test xchg iret and adc mov inc inc push inc adc add push and daa mov (bad) dec (bad) mov lret sbb cmpl repnz test inc or dec ja inc xor sub fwait cmp adc mov in dec inc dec mov mov sbb rolb es sub sbb mov loopne pusha shll aad pop push adc push mov imul xor cmpsl mov and mov je fwait or mov xor cmp enter xchg and add pop stos sub ss fwait adc das inc inc cmp cld lea in cld dec das sbb push inc adc aaa push dec jbe dec xor inc xchg dec mov in int3 outsb test or movlps xor ljmp push lahf les sbb jb popf aam rclb (bad) (bad) xchg xchg pop fisttpll dec insb xor cmp or mov sub jne gs pop (bad) hlt and fs ss je xchg inc jno and pop aad or cwtl push into inc pop out aam cmp mov push pop sub adc adc fistl (bad) jae xor and sbb or jo push insb and pop or int cmp aam test or pop or or loop push cld mov sub cld dec sub pop imul sub inc pop xor popa sub (bad) in mov mov enter cmpsl and repnz add push sbb mov mov and or or rcrl lods and leave xor aad test pushf int3 shll and inc add int xor frstor lods push fldl cltd sbb inc add int movsb mov and fs int rcll or inc mov cltd fmul xor aad lods cwtl mov fisttpll int add or add loope mov mov movsb rorl add fisttpll sbb dec mov mov enter adc push mov adc fstl movsl pop (bad) xor movsb loope mov mov sbb mov adc or or rcrl lods and shr sbb xchg pop loope adc in fisttpll aad add push pusha loope rcll lds movsb int3 (bad) xor pop mov sbb dec mov jmp lea pushf loope push cmp rol sbb inc mov push push lds dec les push movsb loope leave pop mov fsts xchg aad adc add int in cmp lds inc mov adc lds and cmp sbb adc mov inc xor or rcll aad add fsts or fstp int adc sbb lds lds cmp push inc movsb loopne mov mov and in xor lds mov rcr mov pushf lods fstp mov popf add sbb sbb pop movsb int xor pusha lds dec test cwtl in or (bad) sbb add adc xchg dec fnstcw mov lds push movsl push test mov sbb gs push dec add in mov dec and inc add xor frstor loope and push adc add push popa inc push inc in sbb sbb sub adc or movsl or leave pop and pushf aad xchg add adc push rcrl sbb sarl mov push add pusha mov in dec xchg or add and push inc fldenv lods adc or leave and lds and sbb sbb in sbb int push mov sub mov or cltd popa test test mov mov and inc shrl dec cltd pushf mov lds lods sbb in and inc in adc inc in or fdivrs popa lea shll inc roll inc push mov int fs int xor int and xor mov inc in and inc in sbb inc in adc lds cwtl mov mov xchg dec call mov xchg inc call mov mov sbb adc loope add inc in sbb inc in adc inc in or mov inc lea cmp mov add add imul or sbb and pop mov pop pop mov mov mov sbb adc in fisttpll test lds adc or lds adc dec xchg test lea adc popa cltd test nop lods cmp sbb adc inc add popa or loope dec cmp popa add inc or adc inc inc or sbb xor mov mov pop mov or mov (bad) sub loope xchg popa lea or cmp mov pop movsb lods loope movsb mov add mov mov add mov mov mov xchg fstpl in movsb lods loope pop rcl in and popa add push add or inc rcl lds and (bad) xchg or fldl dec push aad imul pop mov frstor inc adc sub sbb in lea dec dec or or fstpl rcl popf or or sub leave jmp in popa lea xor and int movsl fldl shll inc gs pop cmp mov mov mov add cmp mov test add add xor fstpl add fstpl adc adc add cwtl mov inc movsb (bad) and popf add loope adc aad or int and flds push lods add loope pushf leave pusha loope adc lds and pushf mov push fstl xchg movsb fld cwtl mov or add popf adc and popa popf loopne pusha loope inc add aad add mov or inc add inc or inc push mov add add in fnstsw mov xor movsl adc fldl movsb (bad) and movsl popa popa lods fcom mov dec cltd call mov add dec dec rorl mov mov fsts mov and fstps in mov sub add push sarl add (bad) or xchg or cmp add shll and popa inc inc popf cltd lods mov xchg add and lds sarl shll add popf inc mov mov or popf add adc adc dec and adc adc nop xchg push mov in mov test sub call mov in push dec (bad) push lods lods dec sub (bad) jae add adc and je add jns stos imul imul dec imul or xor or and mov sub cmp fwait mov adc mov adc cmpl mov int3 pop pop lock mov movsb ljmp int3 mov (bad) xor push or mov mov mov cmp dec mov adc fwait adc bound out mov lods pusha lcall outsl inc jbe das das xor inc adc call arpl inc jno mov pop lret sbb inc mov adc stos xchg stos bound xor mov sub pop cltd mov and mov stos sahf pop call pushf ljmp sub mov mov mov ljmp test out repnz jb xchg fcomps nop lds sbb hlt fmuls fs je xor mov lock mov test mov and cwtl xchg xchg les xchg add xchg push pop adc ss dec bound movsl cmp mov mov test mov and movsb mov aaa stos lods sbb sbb mov xchg push sbb stc adc (bad) in pop int3 shrb int3 in nop insb mov (bad) inc xor inc and mov xchg popa push dec and mov dec subl xchg inc test xor (bad) mov dec scas in jb dec inc sbb mov lock test inc dec xor jae xor outsl dec cltd xchg cltd mov pusha mov fs jno mov ds fs inc xchg adc and or inc outsl inc (bad) in mov jp movsl xor loope popa test test sub jmp dec mov and enter push mov add test adc inc dec addr16 jbe mov sahf mov xchg sub dec lods bound stc or dec push jmp push mov das (bad) es insb mov (bad) push and jns push and fnop push jae test in frstor inc cmp and lret and je cmpsb inc xor lcall push adc pop mov push pushf pop into jb mov hlt out mov jae ret sbb nop mov sbb hlt shlb inc pop push (bad) outsl repz mov xor popf rcr rclb inc dec sub imul sbb adc sahf mov dec inc outsb les and xor push and mov mov loope aad fstpl xchg imul fs xor aas adc mov ljmp dec mov push push insl inc out push pop inc inc outsb inc sbb mov mov and insb call dec dec in dec addr16 enter cmc call lcall push and push dec jp sub dec scas les inc push enter int sbb test jmp mov repz fwait and mov jo cwtl loope adc aad dec push ret pop mov stos rorl adc addr16 push insb rorl in mov inc or fstps nop lea inc test inc xchg xchg aaa (bad) sub mov and pop xchg xchg pop push nop (bad) hlt inc test or daa ss mov inc je ja xchg fsub imul adc mov ss loop xor inc jg or xchg iret sub test icebp xor cmp jno xchg mov fstl inc nop push jne jne inc cmp pop inc adc push adc cmpsb xchg mov lock push mov test xchg es xchg je push js adc mov xchg xor xchg movsl and xor lcall movsb dec lods jb lcall xor mov cld dec call leave loop push adc dec les inc dec enter inc pushf mov adc test sub js shlb dec adc pop inc out mov inc mov stc sbb pop xchg or enter push js push js (bad) repnz and inc pop loop dec adc sub lock repnz rcrl loop xor and xchg pop loop pop cld mov adc xchg mov add ret mov (bad) aam xor cmp or daa or bound in push cmp mov sbb ss sub jmp sub dec mov in mov sub sub push insl test in sub imul enter in imul sub push sub stos stos sub out lods gs stos sub int3 int jmp mov test sub int call mov add out lea test in out sub sub xchg leave xchg mov lds sub sub sub dec in push in dec dec mov test sub xchg test ljmp enter or out add sub push in or sub push call movl dec stos sub dec pop or xchg imul or sub sub sub enter sub imul out add dec push mov sub mov imul and ljmp in es push sub sub leave or in in mov call dec or test sub sub sub cs enter dec dec stos dec mov xchg sub ljmp imul sub (bad) das dec sub or sub ljmp es vpminsw sub sub cs dec dec out imul in sub imul jmp leave outsb sub in cmovbe cs test mov push sub sub call mov sub sub out push sub sub sub and test sub push lods or inc mov or into out inc inc or mov sub xchg push es stos sub sub int into call call lret outsb ljmp sub sub sub sub sub mov sub dec gs dec dec lods leave mov sub sub or sub imul sub ljmp scas sub sub sub lret ljmp jmp or xchg sub or sub lods push int3 and or lods out or in call push or sub or into dec enter jmp insb ljmp sub sub call sub test sub ljmp movsl out push out imul push cs ljmp sub lods out or in in out sub push int dec or inc or lret jmp dec dec jmp or dec inc in (bad) or sub sub test jmp in push sub sub push in in or gs in or dec call dec or in out dec jmp add jmp push call inc in mov sub sub sub or int or push das sub or lods out pop or xchg enter out test sub insl or out vpaddsb or sub sub imul jmp and leave insb inc in out dec ljmp xchg or in in dec jmp enter or vcvttpd2dq es call lods inc in or (bad) in in in in dec vmovntdq scas dec call dec or vpmulhw lods and outsl sub dec test mov mov (bad) sub or in in out sub data16 sub sub test into scas push out dec int in in (bad) sub pop sub int in mov sub sub and sub es sub sub int3 inc in mov vcvttpd2dq or sub ljmp in or jmp xchg enter out xchg imul sub and sub sub int push stos add mov sub sub sub add in in dec dec sub sub sub enter in push test push dec ljmp in mov in mov in mov in mov in mov in mov in mov or enter in push into call call xchg jmp sub dec lods ljmp push insl dec stos push mov enter and xor movsl sub sub mov xor xchg lcall movsb mov sbb mov mov xchg movsl mov jne xchg adc rclb inc cmpsb fs test xchg push push adc pop cltd stos mov sub and aaa mov inc adc and adc mov rcrl fnstsw and rcl mov cmp fs push js or sbb mov xchg imul gs in dec dec mov dec push push gs aaa push addr16 inc inc jbe inc inc push inc imul jo push inc je inc dec cmp imul push inc inc inc push popa addr16 pop ss data16 pop and adc int3 mov cmpsb mov pop test pop nop movsb movsl mov or int3 mov repz clc pushf or mov sbb mov fwait mov pop xchg movsl sbb xchg pushf xchg or icebp sub jbe xor push aam cmpsb es and push adc adc fs push je movsb aad inc adc xchg adc test xchg adc xchg jecxz movsb adc cmpsb sbb sbb and mov (bad) xchg in pop enter insb xchg scas (bad) pushf loop mov out pushf pusha xchg (bad) daa push inc sbb sbb mov je and fs inc and mov jo inc push arpl push mov imul inc xor xor dec push jns push data16 xor dec push jno push sbb push push dec scas lods fimull push xchg xchg (bad) out movsl loop push mov mov mov aam cltd mov or mov xchg push push nop push pop adc mov push jle adc es andl xchg adc jae test mov (bad) and dec (bad) inc push xor cmp mov adc xchg ds je and (bad) xchg sbb mov cltd fdivrl lea mov pop hlt cmpsb inc daa mov cmc gs push and sbb out push dec cltd call ss jp inc inc inc imul ss mov xchg ret data16 imul mov mov push pushf push adc pop push adc adc cmp dec mov inc cmp inc xor push popa sub or cwtl (bad) repz mov xor data16 jb dec xor push adc xchg push adc rcll cld test in push es pop lcall inc gs adc adc xchg push add mov les push mulw data16 cmp and adc nop call pop enter insb dec imul mov mov mov jmp dec int and addr16 shrb jns adc aam rolb loopne or inc leave popf push aad push roll or mov jmp js icebp cmp jg and adc xchg push or (bad) enter int sub cwtl cmpsb fwait cmpsl sbb sbb cmpsb sub and inc xchg xchg test rcrb xchg aam or dec add in in inc outsl inc les int3 push call ret les and pop jae sbb push inc or lods jo mov mov daa inc mov cmp xor aaa cmp xor jle repz aam mov xchg pushf dec sub adcl inc dec push cmp loop xor insb cmpsl adc xor or xorl in dec adc xchg pop inc push inc inc mov sub sub and xchg dec push push xchg or insb inc (bad) int3 sahf es xor icebp cmp data16 outsl insl ja add lcall cmp xor sbb shl ss std sub lods popf or xchg test popf les faddl pop dec or leave stos or sub fmul inc dec xor sbb orl iret adc imul sbb and xlat enter mov xchg push dec add mov cmpsb in sub and mov and dec push and jmp test push insl in out lea fisub dec lock mov (bad) int3 and in outsl push das repz sbb sbb xchg sbb (bad) and js mov rclb dec adc push rcll sahf push or lret into sbb sbb sbb sbb rcrl sahf push push mov lret aam push push push cwtl ficompl mov int3 pop push pop rorb cltd fnop push push push fimull int sbb lret fcmovne push dec lret lret int pop ficoml push push push ficompl int3 int3 sbb push pop adc nop push push push push xchg mov mov (bad) or aad int push sbb lret lret adc sbb int3 pop mov adc or adc fistl or int adc push dec xchg adc pop into dec lret lret fimull pop int3 (bad) push push push pop pop rorb rclb rcll lret into dec push xchg push dec push push push dec dec rcll fsts or adc adc lret lret lret adc sbb xchg dec lret lret int int adc push push push mov cltd pop adc lret lret (bad) or pop sahf pop rcl or push rorl adc push push sbb pop cltd mov ficomp rclb dec push cltd push sbb push push push pop mov xchg pop pushf aad push xchg or lret lret push pop rcl push push push pop dec adc adc xchg sahf cwtl cltd push lret lret lret rorb xchg push cltd adc rcll push sbb push mov push push push push push mov pop (bad) push dec push dec int3 or push into pop rcrb push dec rcrl push push nop nop xchg (bad) mov dec adc sbb push push push push push rcrl xchg popf rcrb or dec int3 push or adc or adc fstpl adc push push fstpl int3 (bad) push push adc pop mov or adc adc rclb xchg rcl sbb pop rorl push adc push xchg xchg push pop lcall push pop sbb mov adc int3 cltd adc xchg lret int3 aad lret int3 aad aad push dec push xchg push dec push push push dec push adc adc (bad) mov aad lret int3 aad lret int3 aad aad push dec push xchg push dec push push push dec push adc mov int adc adc push push mov int3 dec rcrl xchg pop xchg pop xchg pop xchg pop xchg pop xchg pop xchg pop xchg pop xchg xchg rorl xchg xchg xchg lcall push pop push push push sbb push cltd mov pop adc rcr into dec aam lret aad sbb pop dec dec pop sbb push xchg pop pushf cltd fstps push pop adc int pop rclb push xchg sbb into pop mov int3 dec push xchg into sbb or push rorl adc push xchg sbb cwtl cltd push mov push dec pop push fcoml rclb mov int3 lcall xchg xchg adc into push lcall dec push adc fcoml xchg xchg aad pop sbb xchg pop xchg pop xchg pop xchg pop xchg pop xchg pop xchg pop mov xchg pop pushf aad xchg adc sbb aad aam dec (bad) rcrl rclb push pop or rorb (bad) dec sbb fstpl nop rcr mov fsts dec adc lret ror rorb adc int push adc dec push push push dec push dec into sbb fwait rcl pop mov int adc push adc mov aam aam push push push pop fsts xchg rorl fstl adc sbb sahf lea sbb push adc lret int sahf adc rorb adc push adc adc sbb pop or lret fxch adc pop sbb mov or adc push push push push rorb pop fstl (bad) or lret into pop pop push push push push push push cwtl xchg sbb cltd push dec adc pop xchg pop xchg pop xchg pop xchg pop xchg pop xchg pop xchg pop xchg pop xchg pop mov xchg pop pushf fcomps pop rcl sbb rclb push push rcll push xchg rcll push push push push push push sbb push xchg xchg aad xchg xchg pop lcall adc xchg pop xchg push sbb push push push push pop push (bad) sbb dec aad pop dec push push pop push xchg sbb pop rclb adc mov aam xchg adc push push push push xchg xchg or pop lcall ficoml rclb push push pop adc pop adc (bad) dec aad push sahf dec dec sbb push dec rclb (bad) rcrl rclb push adc xchg dec adc push pop (bad) sbb int fsts push dec into adc int3 fxch fcmovbe push push adc popf pop rcll push push nop pop into adc into sbb adc adc pop cltd int cltd push sahf pop adc push rcrl adc lret ficoml sbb dec fcoms push lcall adc rcll push pop fmul pop push push adc rcl adc adc push push into pop aam adc push adc popf rclb push push push mov push push sbb adc pop sbb push sbb rclb push rcll push xchg pop dec or int sbb lret lret lret adc rorb dec adc push push pop adc nop fstl (bad) pop mov int adc push adc adc push pop or push or mov lret int or or and xor lcall cmp pop xchg xchg pushf xor sub test mov lock push mov les notb push aam adc add mov add outsl cmp jns imul out xor mov xchg inc in xchg aam movsb sbb leave mov jnp and stos pop mov mov adc sbb les test enter fsubs push cmp dec dec imul (bad) lret push inc lret imul sbbl (bad) in and and out push ss inc aaa dec sub inc outsl dec xchg cmp mov nop test lret ficompl mov push repnz sahf cwtl inc je je inc dec popa ret sub adc add sarl dec ret ret sbb jae jp lret mov test and mov cwtl sub daa cmp rclb xchg xchg push cltd adc adc xchg sbb pushf push mov push push push lods out push daa sub out imul call cmpsb sub sbb daa sbb and mov lret pop xor popf sbb cmp dec movsl loope test mov pop push sbb in push dec imul jmp iret sub or dec dec push push sub adc stos (bad) stos mov mov add dec jae push and mov mov sub (bad) sub out push jmp inc int sbb dec sub pushf loope xor mov rcl mov inc dec int xor dec leave mov mov in in int3 (bad) orl call pop loope or xor movsb and xchg rcll adc lcall and roll xchg adc and mov test cltd pop pop aad fsub icebp cmp cltd enter inc (bad) cmpsb jp mov push lret jnp rcrb sbb adc sahf pop inc lds or push and and jmp data16 dec xor (bad) xor and (bad) leave call mov leave imul sub test xchg mov sub or ljmp sub adc sbb jnp mov pop xor push adc cld dec dec inc dec gs cmp xor xor mov dec dec jle lcall mov (bad) inc aad addl mov lods cmp xor lods aaa mov rclb push pop push xchg sbb pop in jp dec xor cmp xor stos xor cltd sub sbb cmp or dec es dec (bad) call push sub lret out aaa cmp xor pop sub scas std sub enter mov xor sub and lcall xor test and loope lods cmp fisub xor adc fcmove rcll into pop aam adc nop movsb int (bad) lock adc push data16 daa and mov sbb mov add jbe pusha enter inc xor or push inc int3 (bad) push mov xor sbb xor test fisub sub gs jb cltd mov and lods cmp mov and or xor cs xchg leave mov into add jno xor ss inc jbe data16 jo ja jae and lret inc push inc and xor jl mov test in jno mov movsl inc inc adc mov es xor sbb lcall xor fs js adc mov mov cs inc sub push enter lcall cld dec pop xor xor ss bound clc popf popf mov mov fist dec lods icebp and jo adc xor cmpsl jg sbb dec and fisub push outsl movsl sbb mov mov inc lods (bad) and xor imul pop and test cmp movsl push xor sbb in jb movsl cmp jmp insl sub or out int les loop jne xorl cmp lods mov mov stos fs jae adc rcrb repnz rcl scas mov and mov lock sub lds leave sbb fs rolb push mulb jae xor adc adc mov adc fcom adc or mov sub mov stos cmp sbb hlt aam fs out dec in xchg sbb cmp lods cmpsb nop mov mov in fisttpll aad add push pusha loope lds pusha mov int3 (bad) xor (bad) lods cmp loope xor rcll lds push pop rol sbb sbb inc fnstenv popf cmp dec xchg in dec cltd or cmp add mov add push leave pushf mov adc popa xchg mov sbb and (bad) lds roll sbb mov dec xchg dec adc adc test imul (bad) imul jmp and movsb shll leave or mov ror pusha (bad) shr jmp xor mov pop movsb lods in push dec dec push pop mov inc mov rcl adc fldl2t xchg dec fnstsw mov mov cmp lds and inc adc fldenv add popa inc loopne int rcrl adc push movsl or lods or and aad inc loopne adc mov mov movsl inc movsl xor xchg fsts or sbb cmp pushf lods lods in cltd leave add mov and ror shll and popf adc lds loope add cmp mov shl xchg inc pusha mov sbb add aad mov pop lds mov adc (bad) aad popa lea xor sbb inc rol and and flds mov and mov add dec inc in inc popf dec xor mov add sub or sbb int push cmp in or adc add fdivrs leave sub inc mov cmp adc inc fnstenv dec inc mov xor movsl dec test or and lods int3 lods fldcw fstl popf xor in dec inc test sub dec sub dec lods xor and xor fchs loope rcr sub fldl adc lds (bad) xor popa mov sub mov xor inc int sub and sub in dec dec dec push movsb vmulpd xchg cmp mov fstl popf fs pop mov dec xchg dec inc test inc int and (bad) and pop mov xchg movsl adc movsb int inc movsl push xor sbb mov in lds lds leave sbb mov fnstcw leave inc mov or inc inc xor or sbb inc push cmp mov push movsb ror pusha (bad) mov adc fnstenv fucomp inc cmp int inc mov xor jmp lds xor loope frstor adc frstor rcrl pop xor inc inc in test leave mov mov sub dec sub inc inc movsb roll add dec and cltd fs lds leave add inc lea add movsl xor inc movsb roll adc in sbb adc loope (bad) movsb loope int or movsl xor fsts adc xchg shll movsb in xor inc movsb lds sbb adc in push leave add push int3 loope (bad) in inc lods and inc lods sbb in in test dec int and lods adc movsl rcll pop or int dec or inc lods sbb aad mov movsl adc popf or push movsb in xor and push and in int3 leave and lds add push or sbb aad and inc shrb call and inc mov xor xor movsb mov in dec dec or mov mov inc and roll fdivrl rcl in adc cmp aam or imul or lods and and lds mov pop pop mov pop pop mov sub mov or loopne mov lds inc in in inc sub or or sbb or or push inc add push sbb add cmp inc xor adc cmp shrl mov add and in mov inc mov cmp dec lods mov add in movsb lods fucomp fstl mov xor mov mov mov sub xor lods sbb cwtl mov xor mov pop cltd stos test cltd cwtl es cltd mov and cmpsl sub cmp cmpsb pushf mov sub sbb sub and fwait xor sub mov stos cmpsl mov and mov mov cmp xchg mov xor and and cmp sbb mov sbb sbb mov mov mov mov sub mov mov stos cmp sub sbb pop lcall sbb fxch nop popf lret aad adc push or push sahf xchg popf fstl mov into sbb inc and inc adc inc push and sbb sbb xchg cltd aaa stos lods aaa mov in outsl dec arpl push inc inc dec jbe ss push inc pop inc xor xor push inc inc jbe imul inc ss jp inc dec push push js inc jne push jbe popa imul cmp inc dec cmp inc push push addr16 sub outsl push dec jae xor sub jns data16 xor push pop addr16 push inc outsl aaa xor das jo (bad) stos bnd cmp fwait cmp rorl ret push dec or popa or push or mov int3 (bad) push repz arpl mull ret xor push xor dec das xor aaa inc inc dec push push ja push dec inc push xor dec push insb inc ss push insb inc dec adc inc xchg (bad) mov push mov lcall adc push ja fs xor push push xor (bad) sbb adc or jnp jnp jl mov xchg dec xor loop insl cltd movsl pop popf adc and xchg mov mov fldcw xor jae adc or js roll mov jb test cwtl pusha out mov pop pop out adc sub sbb sbb sub mov adc mov pop inc adc or mov imul xor adc mov es adc and mov cwtl cwtl pushf and sbb xor mov aam inc jae arpl divb mov bound inc mov push pop and sbb test (bad) xor pusha (bad) mov adc sub jmp movsl int inc inc add movsb ficomp hlt outsb mov mov and sub movsb sbb mov cltd aaa test mov rclb pop nop pop xchg xchg xchg and push pop and nop aam loop inc adc cltd adc inc inc push push mov es mov mov out (bad) jo data16 xchg loope xchg scas arpl push inc xchg cmp adc test adc nop xchg adc fwait dec mov mov call xchg fs test mov mov mov int3 ret mov cwtl repnz push lret test orl xor or or adc jb stos dec inc push and xchg and or cmp mov vcvtsi2sdl sub leave push mov dec in or add push xor xor push ss outsl arpl adc lcall adc ret xchg jl data16 dec sub and inc inc enter xchg enter mov cmp or adc xchg jns push push int3 mov jg xchg push pop sbb adc dec dec rcrl mov cmp addr16 mov sbb cltd aam into xchg and sub push and xor mov call cmpl nop push inc fcomps mov leave mov call test sub cmp inc and or mov pop stos xchg inc pop xchg mov mov jae sub cltd adc and mov cmp mov pop sub out pop dec imul mov ss add inc push mov fs xchg mov xchg lret pop and dec mov popf mov dec inc loop xor mov dec dec cmp or xor sub push sbb fsts sub movsl and mov cmp in sahf and ds mov xchg int cmp es jae test cmpsb outsb nop out aam xchg test mov push lret pop or push roll loope sub shll (bad) push adc inc inc sub mov or loopne cs sbb js aam xchg inc cmp subps and stc sbb sbb xchg (bad) mov mov sbb xchg lret xchg daa es ss mov xchg leave push aam inc call addr16 inc inc inc sbb ror bnd cwtl lcall movsl adc rcl stos cmp sub pop shll dec mov mov sbb push outsl xor pop jbe insl pop push imul cmp xchg sarb mov and push sarl les and mov mov cmp cmp cmp pop mov daa nop fstpl dec xchg pop cmp dec mov jmp mov int3 outsb in leave pop les xor popf adc out divb sub test pushf sbb mov sbb sub and sbb mov sbb movsb test and cmpsl sub sbb mov cmp and mov cmpsb cmp sbb cmp xor and stos and test cmpsl ss mov mov mov cmp sbb mov sub cmp xor movsb cwtl mov xor daa movsb pushf adc cmpsb cmp sub mov sbb stos daa cmpsb xor and sbb cmpsl sbb mov sub sbb cmp mov cmpsl sub mov movsl pushf sbb cwtl and movsb mov and fwait cmp xor sub mov mov mov sub cmp mov and and sub and fwait cmp mov movsb mov xor cmp and xor and sub and movsb cmpsl and xchg cmpsb cmp sub cmp sub and mov sub test sub cwtl cwtl and sub sbb mov cmp and and sub cmp es xchg cwtl sub lcall xor mov mov and mov mov mov lods mov xor xor test and sub movsb mov cmpsl and movsb cwtl xor cmpsl mov and test mov xchg xchg pushf xchg mov lods mov cmp xor and stos and test cmpsl ss mov mov mov cmp sbb mov mov cwtl mov daa and cmpsb cmp stos cltd mov sbb mov sbb xor cmpsb sub cmp mov mov xor sbb and cmp mov cmpsl sub mov movsl pushf sbb cwtl and movsb mov and fwait cmp xor sub mov pushf and mov sbb and cwtl and cwtl adc mov and mov pushf mov and mov cmpsb sub mov sbb and sub movsb mov and mov mov and lods sub mov pop stos sub cmp cwtl sub mov cmpsb sbb xor movsb mov daa sbb daa sbb and mov cltd mov cltd pushf and mov movsb xor xor mov xchg xchg pushf cwtl movsl cmp and mov cwtl mov xor sub and mov cmpsl xor mov mov sub and sub mov sbb xor sub stos aaa cwtl cmpsl mov lods test movsb cmp mov sbb and xor movsl sub sub mov mov cmp sbb mov es and cwtl adc xor and xchg mov mov movsb test xchg pushf test pushf pushf movsl mov fwait cmp xor movsb test and sbb cmp cmp test mov mov mov mov stos daa mov sbb pop mov sub test sub and mov xor mov es sbb stos sub lods sub and cmpsb and sbb mov mov and and mov mov movsb mov and cwtl sub daa and and pushf test movsb test cmpsb sub sub mov mov xor cwtl mov xor xor test mov mov fwait and mov xor sub sbb es and cmp movsb mov mov mov mov mov sub mov xor xor mov xor cmp sub mov mov and xor and sub cltd sub lcall sub cmp movsl stos sub sbb mov sub mov sub sbb cmp stos cltd mov sbb mov mov cwtl adc mov xor mov xor sub xor daa cmpsb add mov sbb movsb mov sbb sub and sbb mov sbb movsb test and cmpsl sub cmp and pushf and and mov cmpsb cmp sbb cmp xor and stos and test cmpsl ss xchg imul push dec xchg jne pop add adc inc xor push ss xor roll hlt xchg (bad) mov push pop adc dec data16 cbtw shrb mov and xchg daa movsl sbb rcl fldl sub test rcr shll and xchg sub (bad) pop adc xchg loop insb mov data16 aam scas into mov mov mov and or fmull pop cltd aad inc je fs push xchg xchg ss xchg test mov je sbb xchg or or test insb out inc mov push out add inc adc lds push xchg addr16 inc inc xchg aaa movsb ret inc cmpsl mov xchg fs mov xchg cwtl call ficompl stos xchg into data16 nop hlt test pop test (bad) out fiaddl mov in aam mov lcall in mov xlat dec push outsl push jo dec pop push gs dec nop rorl lods push (bad) cmc xor xor cmpsb push inc repnz mov adc nop lds or sub in sub inc call cltd cltd mov xchg (bad) (bad) (bad) call adc xchg (bad) and sbb push and sub xor inc dec je xor pop xchg inc push lea push sub lret cs insb in out jae sbb leave and and cmp adc mov in jb jp inc dec dec addr16 inc gs movsb sub mov adc in sub inc mov dec mov sub or dec jmp xor cmpsl and mov mov inc pop adc mov adc int3 test bound call sbb repnz mov or push dec xor mov dec mov push dec das cmp leave lret mov es and and movsb sbb sub bound and rclb mov movsl pop pushf ficom dec rcl mov inc dec dec jp inc mov stos xor ret inc adc xchg lods cwtl mov xor xor adc loop push xchg loopne shll dec (bad) dec xchg sbb push pop push add orl xor xor int3 into hlt out mov or iret adc xchg inc adc (bad) xchg fld adc gs inc inc test adc push sbb xchg out mov repnz xor xchg mov imul loop push les dec dec and inc mov xchg cmp push and adc jo adc out lret inc ss jbe daa pushf repz dec push (bad) mov enter push and nop imul jne es movsl and int dec stos or mov int3 cmpsb shrb dec cmp sub or dec daa aas mov dec dec jb imul out cmp jbe xor inc dec sub xor adc movsb xchg and repz xchg arpl and mov push push dec loop das adc inc inc sub and sub test adc xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call test lret push and cld enter data16 inc jp mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc sahf push xor push cmpsl je inc push xlat jb movsl mov xchg cltd fldl (bad) (bad) call adc popa dec push push in push outsl clc cltd sarl (bad) int3 pop loop xor inc cmpsb lods push push (bad) mov enter hlt mov int3 scas cmpsb out pushf xchg call aam pusha data16 jb (bad) repnz rolb (bad) in mov out pusha push xchg into into pop fadds test repnz lods lret scas mov out into pop (bad) into enter test repnz mov cwtl pop bound out xchg mov lcall cwtl movsb mov call xchg movsb mov cwtl movsb mov fdivs aam data16 shrb mov lods fs shrb (bad) shrb (bad) shrb stos sahf lods pusha (bad) enter mov test bound (bad) (bad) (bad) (bad) insb xchg loop pop pop push mov test sahf test (bad) (bad) shlb mov ror xchg jo nop mov pusha xchg mov mov hlt xchg push mov jo (bad) (bad) mov xchg (bad) aam stos mov insb test (bad) push mov fimul data16 pushf xchg xchg out shrb jo (bad) (bad) (bad) shr (bad) insb (bad) mov mov into lods mov jo mov insb xchg pusha nop stos rclb insb (bad) lcall (bad) xchg ret mov pusha scas lcall ljmp mov xchg out (bad) insb test xchg enter push mov call xchg shrb jo (bad) (bad) (bad) shr (bad) insb (bad) mov mov into test in out in xchg jo mov (bad) sahf out pusha ljmp jo mov lods push mov push (bad) mov repnz test ljmp insb mov pop pop pop push xchg repnz mov lcall mov push out shrb jo (bad) (bad) (bad) shr (bad) insb (bad) mov pop pop pop hlt in mov ficompl pop pop shlb out movsb mov xchg enter mov out push lock int3 les pop movsb les nop movsb push out pop pusha scas out ror xchg xchg fsubrp pushf xchg xchg out shrb jo (bad) (bad) (bad) shr (bad) insb (bad) mov pop pop pop hlt out in xchg (bad) jo mov mov pop pop pop push mov les (bad) mov (bad) enter test jb out fiadd enter mov scas mov les pop movsb les nop movsb pop jb out fiadd int3 lret ljmp (bad) mov outsb pop pop pop jb test pop pop aam in shrb rolb push mov ficom pop jo in out mov pusha xchg mov xchg enter insb (bad) lcall pop jb xchg pop pop into pusha fs ficom pop in pop pop ret loopne pop outsb pop pop push out ror xchg xchg cmpsb out lock mov in xchg in into sahf (bad) lock mov out out push ljmp nop movsb nop mov (bad) into push into in stos in shrb xchg xchg cmpsb nop cmpsb repnz jb mov ret shlb mov rcrb loop mov push les jb lods jo pop push jb pop pop movsb les mov les lret (bad) (bad) insb (bad) fsub xchg fcoms mov jo int3 pop pop insb outsb insb xchg enter repnz mov mov xchg xchg push push jo bound push lods (bad) stos (bad) (bad) test mov xchg lret test fsubs stos fs insb out out sahf mov pop pop pop push in int3 int3 nop loopne pop pop pop pop pop jb call mov mov xchg bound les mov (bad) (bad) xchg pusha fisub lods ficoml into mov test out pushf mov nop stos mov lods (bad) stos (bad) (bad) (bad) mov (bad) (bad) (bad) jb sahf in pop pop out push lcall fadds into push fmul shrb xchg mov (bad) (bad) test int3 int3 mov ret mov ret insb scas (bad) push movsb movsb bound fmuls (bad) push mov into xchg (bad) (bad) sahf out shlb mov ret int3 ret into jo stos into push (bad) nop shrb xchg mov (bad) (bad) test out (bad) out mov mov mov (bad) xchg sahf mov in hlt aam fs pop pusha fs aam fs xchg mov out shrb mov shrb mov rcrb insb pop data16 (bad) mov aam ficom (bad) (bad) cwtl pop pop int3 out (bad) (bad) aam mov mov mov in nop mov rorb mov and mov lcall mov test mov xor pushf pushf mov cmp movsb xor mov sub sub mov mov mov mov cltd sub mov movsl sub sub insb loop dec dec jns inc push cmp arpl das xor dec push jae dec inc pop bound imul (bad) xchg mov imul or lret dec pusha sahf adc fdivs test xchg test sbb or mov adc popf rorl fsts fcmovnbe (bad) xchg or pushf test bound je jp mov mov jns pop and adc jp cmp dec push push push xchg (bad) pop rorb push adc pop fwait or rcrl dec adc adc pushf pushf ficom rorl aam aam push dec adc xchg or xchg dec pop popf xchg push push pop pop ficoml xchg adc push lcall aad pushf mov pop adc jno xor mov sbb test cmp sub and mov aad aad sub rcrl and sub lods sub dec or in call pop adc cltd sbb jno decl leave leave push (bad) xchg or inc lods cmp push loope adc shl add pop lods adc mov test je in adc push push and gs cmc add aad inc push xor mov push popa pop lcall inc mull repnz sub test aad loope adc fnop mov (bad) popf and int mov dec fs cmp inc mov xchg xchg and (bad) lret sub push outsl dec push imul inc jbe dec jae adc mov dec dec (bad) inc (bad) es cmp mov cmp lea inc bound jae inc adc xor adc xchg push inc enter rcr push jmp and inc addr16 and sbb sar test out adc mov and cmpsl mov xor mov pushf mov cwtl xor sbb mov outsl sub rcrb push nop push sbb lcall push push xor inc cmp ja cmp xor push inc enter out nop insb (bad) fsub xchg fcoms pushf pop mov fcomp mov out mov mov xchg xchg push push jo bound push lods (bad) stos inc and xor test fsubs mov test xchg stc sbb mov sub cmpl xor xor adc mov ja xor inc inc insb push insl dec xor cmp nop dec push cwtl push mov adc pop aam mov jb sahf xchg pop out push lcall (bad) fmul dec dec cmp push and xor mov cmpsb test xchg dec test adc and sub in daa xchg roll cmp dec lret inc push mov call pop jne out jns outsl jbe xor popa or lcall loop push adc enter push adc dec ror mov into adc es push outsl dec insl loop ja push xchg xor lcall adc jbe icebp sbb les nop lret fwait cwtl mov cmpsl dec movsb (bad) rclb xchg or in mov xchg xor rcrb mov push xchg (bad) push adc arpl sbb adc daa fs and mov xchg push dec xchg push data16 lahf out inc arpl movsb xor xor loop cmp pop jns jns xor ret adc rorb xchg call pop lcall and cmp dec jns dec inc inc aaa cmp dec das inc jp cmp dec movl and jb fwait nop dec ljmp cltd fcom push repz mov xor xor ja imul cmp ja imul push das inc cmp ja (bad) enter inc xchg test arpl call xchg jle and add cwtl cltd adc fstp lea push arpl push je jne adc dec dec xor xor in xchg data16 adc xor mov pop loop inc mov imul inc ss mov fs jb push adc stos pop and pop movsb insb insl dec push loop inc mov and dec inc adc movb popf rcrl push and cwtl pushf sbb js jp inc nop lods push frstor sub dec sub and dec cmpsl push es loop sbb aaa mov test dec xor mov pop movsb js fiadd pushf mov lea adc sbb mov movsl addr16 jb pushf aaa and pop int inc adc int test inc inc dec dec xor and push xor xchg or lea outsl push push jp pop insb inc das inc dec dec pop push js push xor xor xor cmp insb pop jno dec push imul addr16 inc inc dec cmp xor cmp inc inc inc dec pop popa inc inc push fs dec js pop push jp pop inc xor inc push fs dec js pop push jp pop inc xor inc push bound imul dec pop inc xor inc push outsb dec js pop popa sub pop inc xor dec push pop ja inc inc inc inc imul dec fs bound ja je ja inc push ja imul xor outsl pop push fs sub outsb push jb cmp dec jp push pop push dec inc xor imul addr16 outsl imul inc js dec inc inc arpl inc inc inc dec push ja jp inc inc jo addr16 inc dec push data16 inc pop push push inc xor inc inc inc inc dec cmp pop outsl imul inc inc dec inc aaa cmp inc push das inc inc inc inc inc push dec push dec popa dec inc jno addr16 jb push popa inc jns push push addr16 inc inc inc inc fs jne das xor popa dec addr16 addr16 jb push jbe fs inc inc das xor popa dec inc jno addr16 dec push ja jno insb inc outsl pop xor das xor inc inc inc push xor inc xor push push insb pop push ss xor das sub push inc push ja inc ss outsl imul inc inc inc outsl push push dec addr16 das das das cmp dec das popa inc ja push dec push insb pop push push insb bound popa jb das xor inc inc dec pop inc inc ja jp dec insb js ja inc inc aaa dec imul inc dec inc inc inc inc ss dec js dec outsl inc dec xor xor push pop xor inc jp jbe jp sub push je inc jp push sub xor dec push gs xor inc push bound insb imul push outsl insb xor outsl insb dec outsb dec pop bound arpl inc inc push xor dec js inc push bound push arpl jae push inc inc inc push pop js imul inc sub inc jns sub ja inc inc inc jbe inc inc dec dec outsb dec jbe imul inc inc inc inc insl dec push push ja pop xor popa push dec push arpl das xor inc imul push inc push dec imul ja push xor imul jno das dec jp pop dec insl inc dec inc inc inc dec insb xor aaa das data16 inc dec cmp xor xor sub das jb das data16 inc pop push dec inc xor jae addr16 inc pop push push inc xor push addr16 inc jbe xor inc inc inc insl dec das xor push inc inc sub cmp inc pop aaa das outsb arpl das popa dec fs gs jo ja inc inc inc push xor jbe fs cmp xor das das das das xor dec pop pop imul fs xor push inc pop outsl insb inc ss je push inc inc pop push push fs dec dec cmp inc dec das das das das xor dec pop inc inc fs push xor dec pop push outsl push pop xor pop inc inc push inc inc inc dec je jno je ja push dec imul sub xor gs inc ja imul pop imul imul inc dec push jbe push jb imul push dec dec cmp inc inc jbe arpl dec push popa push inc inc inc inc inc xor imul inc das dec push inc pop jbe inc xor inc outsl dec je inc dec das push bound bound data16 jne push bound push jbe inc jno cmp dec dec cmp inc das push dec dec inc jae inc inc inc popa inc das xor cmp pop xor inc inc inc addr16 push je xor imul pop ja cmp ja dec jo ja inc imul xor outsl inc cmp ja dec dec das das cmp dec insb inc sub inc das xor dec pop outsl pop das data16 inc js das das inc inc inc insl push outsl jbe cmp addr16 je inc inc sub inc cmp xor cmp dec je sub xor dec je cmp je dec dec push inc das inc dec push inc inc xor das push ss jbe push dec insb xor dec insb dec cmp push dec push push jae inc push insl xor ja bound addr16 inc inc imul xor js dec push inc inc xor das das inc push inc inc sub inc inc push inc xor dec cmp jbe xor dec insb cmp inc data16 fs jns pop pop inc jne das das inc inc inc insl dec push xor fs fs imul dec pop jbe inc sub dec das xor ss das push dec xor xor inc inc inc pop aaa sub inc jno inc inc inc inc push inc dec cmp push push xor push pop imul imul push addr16 dec inc inc dec inc das data16 dec ss push xor xor push das sub push ss inc ss jp inc inc dec push data16 inc pop push dec inc xor push addr16 inc das xor dec and sub and mov cmp stos sbb cwtl mov and stos cmpsb sub xor cmp xor pushf xor sbb sbb cmpsb and test xor and cmp dec or lcall outsb dec mov and fisttpll test stos mov enter mov out test fs jbe xor mov sub mov mov movsl cmp cmp sbb mov rorb mov mov mov adc mov xchg push or cmp and stos or dec or mov fsts test sub mov in sub sub sub mov cs out cmpsb in sub test addr16 inc xor sub push jno insb inc outsl pop xor das xor inc inc inc push xor inc xor push push insb dec ss xor das sub movsl mov mov mov and mov stos cmpsl mov xor xor or fstps mov inc dec dec inc ja jp dec insb js ja inc aaa dec imul inc dec adc adc mov inc leave flds or cmp add sub or mov bound insb adc bound stos jnp leave mov dec ret adc rcrb sbb adc xor movsl sub xor stos mov sub cmp adc adc mov or cmp inc xor jne movsb and cmpsl test cmp lods test sub mov sub test mov movsl add sbb loop xor xor xor jno das dec jp pop dec insl in dec aaa das rorl or fxch int3 lret fdivrl lret push fnop enter repz push sbbl fstpl outsb pop fadd mov push xchg shlb inc inc enter nop and lcall nop dec dec test hlt mov imul mov dec sub or sub in icebp cmp or inc nop call lods out (bad) inc xchg gs test aam pop dec mov push mov xor cmp test sbb mov mov test cmpsl pushf and fsts movsb xor imul cmp ret (bad) mov mov mov add daa arpl je jecxz test mulb and sub dec into nop stos jmp out xor mov cltd add dec in (bad) and or mov sahf or mov pop fstl inc xor adc or push push into test or test call inc lea leave push ds cmc push ja sub les adc les mov jno and loope leave mov xchg data16 dec jns pop pop inc jne loop adc imul jae adc xchg adc aam mov outsb cs dec lea test jne pushf mov sub push xor or adc and pop jbe adc inc push adc xlat icebp and movsl movsl sub jle inc cmc add cmpsb sbb test and mov nop popf xchg add fwait loop inc mov inc (bad) (bad) cmc adc cmpsl mov mov mov adc outsb lds xchg aad push inc and mov (bad) (bad) int3 insb sahf fadd pop int shlb stos les dec xor push lea cmp loop pop cld dec data16 and push xchg es loope and and adc push aam data16 inc sbb daa les adc adc int3 fwait xchg push dec fdiv test (bad) clc mov adc fwait dec fstp push sbb jno xor dec mov and lea sbb or sbb test sbb repnz cmp and lret enter les and xchg xchg push and es push inc push arpl push adc and xchg xchg mov sub mov push and aas adc adc push xor fwait int3 mov dec rdtsc sbb or and sub and or mov xor dec imul daa nop aad lods push inc inc push aam daa jne inc cmpsl and sub mov dec mov mov mov test stc adc cmp sbb and dec push xchg and loop push adc mov mov xchg (bad) inc xchg xchg test sub sbb mov dec fwait aad call ljmp jo (bad) mov mov mov (bad) into (bad) (bad) (bad) xchg mov cmpsb cwtl test test mov mov out in mov pusha mov out lret (bad) jo cwtl out int3 jb in xchg fmul push fmuls int3 mov lcall pop (bad) (bad) (bad) (bad) int3 rcl cwtl movsb lret mov cmpsb cwtl test test (bad) lret push out in mov pusha mov out lret pusha lret out stos insb xchg mov cmpsb xchg movsb lret jb pop mov stos movb data16 shrb (bad) mov (bad) (bad) xchg movsb lret enter int3 (bad) cmpsb fsub ret mov xchg mov mov (bad) (bad) cwtl repnz lods insb xchg in out out lret (bad) jb cwtl (bad) fsubrp test test xchg out lret aam out cmpsb shlb mov lret xchg cwtl movsb lret jb pusha jo aam push push fcompl test fcoml test out lcall xchg mov enter shlb xchg aam mov jo jb repnz mov lret (bad) jo cwtl repnz mov xchg call pushf insb lcall into lcall insb test jo into cwtl mov xchg pushf jb (bad) xchg lret mov cwtl pop pop pop pop cmpsb push out (bad) int3 mov mov movsb xchg (bad) outsb sahf mov xchg lock lcall nop mov into sahf bound (bad) out movsb mov lcall out push push repnz mov (bad) mov scas lcall push (bad) insb aam pop jo mov mov out enter sahf jb hlt jb call mov jo hlt pusha fcmovb xchg mov (bad) (bad) mov fsubrs out mov repnz xchg out test mov int3 pop pop hlt mov mov jb lcall (bad) test out out movsb pusha (bad) push les into jo mov enter xacquire (bad) xchg mov cwtl ljmp aam fadd push (bad) (bad) xchg (bad) (bad) nop mov (bad) (bad) mov mov hlt fsubl bound (bad) (bad) (bad) insb out out pushf (bad) (bad) into (bad) (bad) sahf out mov xchg (bad) (bad) (bad) mov int3 (bad) (bad) (bad) (bad) mov lock jb lcall (bad) stos pushf (bad) test hlt out mov mov (bad) (bad) (bad) test (bad) (bad) xchg (bad) (bad) mov mov fs into movsb pusha test (bad) (bad) jb xchg xchg (bad) stos pushf (bad) (bad) into (bad) (bad) mov mov mov (bad) (bad) mov (bad) (bad) (bad) xchg (bad) nop mov cwtl repnz (bad) (bad) out (bad) (bad) xchg jo pusha nop hlt in mov repnz bound (bad) (bad) (bad) insb out out pushf (bad) mov mov (bad) xchg (bad) (bad) (bad) (bad) bound pusha lods push into int3 fiadd enter push into (bad) (bad) (bad) (bad) xchg pusha xchg in movsb enter (bad) xchg (bad) (bad) (bad) lcall mov mov rclb mov movsb test fmul les push lcall pusha (bad) fisub test ficom enter repnz test out lock push les into jo test lcall into (bad) (bad) xchg ljmp (bad) (bad) (bad) xchg jo pop (bad) (bad) lcall mov test hlt pusha (bad) xchg into outsb lock in ficom (bad) (bad) sahf out into (bad) fiadd xchg jo pusha mov xchg (bad) (bad) nop stos sahf into (bad) fiadd insb out ret into (bad) (bad) (bad) into mov out (bad) mov test nop xchg (bad) (bad) (bad) mov xchg call nop jb (bad) aam shlb xchg movsb mov push mov into (bad) (bad) (bad) xchg in mov (bad) in pop pop jo call int3 hlt mov int3 repnz jo bound lcall pusha (bad) fisub test ficom enter repnz test out lock push les into jo test lcall into (bad) (bad) xchg ljmp xchg jb (bad) mov les (bad) test mov mov movsb ret into (bad) mov ficom (bad) (bad) sahf out into (bad) fiadd into lret (bad) out (bad) (bad) enter push mov test ficom test (bad) fiadd jb lcall (bad) ret into (bad) (bad) test repnz out aam fs and adc loope add mov xchg sbb add or popa xchg dec xor push dec imul fldenv shll xchg lods cltd add add cmp and inc fldenv popa mov fstps mov iret movsl xor mov sbb pop test into xchg mov pusha lret out stos insb xchg and arpl push xor movsl data16 push xchg arpl xchg push jae xchg sbb int3 mov insl mov or adc ss dec jns je ss jbe dec xor inc cmp xor inc push push dec dec addr16 ja imul xor (bad) mov (bad) aam push push fcompl lcall mov pop into test out lcall xchg mov enter test movsl jae repz cmpsl xchg and sbb dec or inc fmulp es mov ret adc adc daa daa and and mov and loope and xchg jecxz inc adc mov mov pop xchg scas sub cmp sub mov fwait cmpsl lods sub cltd rcll mov jmp sub xor add shll sub sub push dec pop xor pop xor jp jbe imul outsb inc addr16 jae fs push dec xor lret jnp xor rcrl roll sub or pop lods xor or mov imul bound dec inc push inc jo jbe das das jp lret lcall xchg mov mov (bad) test out out movsb pusha (bad) push les into jo mov push rorl inc inc inc xor aad and arpl pop xchg push push push adc test orl aaa jp push dec dec cmp adc inc or xor mov cs mov mov cwtl lock test sbb test dec dec ja bound dec push inc jne cltd or mov fist daa jbe dec dec xor cld dec sub gs cltd nop les in roll nop xchg jo pusha nop hlt in mov cmpsb xor call or nop int or daa or pop inc adc mov xchg mov ficompl int3 repnz xor pushf stos xor mov sub xchg mov pusha int3 rcll popa xchg inc xor mov outsl dec loop adc or ret mov xor pop adc jle push mov sbb iret pop dec out dec stos push (bad) jmp fnop clc mov imul outsl jmp cs imul ja push push xor push xchg mov cltd repnz mov nop movsb int3 hlt mov int3 repnz (bad) (bad) lcall pushf out mov xchg fstps cltd or or inc aas (bad) cld lret sub push xor imul fldcw push push mov mov xor enter xchg in addr16 jo les test mov (bad) repnz push cmp imul mov (bad) and cmp and xor and mov inc sub ss int3 mov pop pop arpl mov or pop adcl mov mov mov rolb aam dec dec pop adc loop sub mov clc xchg adc jae daa fs and cld lret sub add and xor inc outsl enter lahf call mov (bad) push (bad) stos outsl repnz xchg test xor and pusha loope push inc push lds in cltd and icebp xor or lcall dec aam data16 and sbb adc sub or cmp sbb fmul pushf leave popa int3 dec int3 and and mov and pop mov repz xchg cmp loop inc (bad) ljmp xchg push mov and inc cmp dec ror call xor dec int3 (bad) dec inc inc jp push faddl movsb jno mov mov adc xchg daa sbb dec adc or insl les in outsl imul aaa xor adc mov daa addr16 mov faddl push sub adc pop fistl jle repz mov sub mov imul imul dec inc mov inc out or popl or (bad) lret call push lea into scas call push sub insb call in out sub cs call lret dec test out iret or daa sub inc int or sub sub or xchg or sub sub or es dec dec into int es test out enter or push and or test or or lret dec enter or push push sub stos enter lods or insl cs or sub mov sub sub jmp or cs lea leave es sub push call imul dec imul or dec mov inc in call es gs data16 sub in lret in in es outsb out lea gs data16 mov sub cmpsl cs in es outsb out sub out lds dec mov sub scas dec test in jmp xchg sub push dec or or test dec push test in es or lret (bad) (bad) data16 enter sub test test in stos or ljmp vcvttpd2dq or lret gs data16 mov push test in stos push out or mov in dec vcvttpd2dq or lret gs insl or sub or out sub and out sub lret gs imul in mov push gs imul in out push dec lods inc gs dec imul in mov or gs xchg imul stos sub in test out dec sub mov push in inc in xchg es test (bad) in test das dec sub mov mov out es mov (bad) in test call inc in xchg es in mov dec (bad) in test call inc in xchg das sub mov dec (bad) in or sub or sub push in out mov imul (bad) in (bad) enter or xchg enter stos dec mov in test or mov out inc mov inc in insl push dec (bad) in test out sub mov dec inc in xchg es (bad) in test call inc in xchg dec push gs insl int dec (bad) in test call inc in xchg es in test call inc in xchg sub in enter in test out sub mov inc in inc in xchg test insl scas lret in dec dec ljmp sub out lds mov and stos stos add cs test in test out test sub mov or add cs xchg dec (bad) in dec or xchg or out lds dec sub mov dec or cmpsb lret (bad) lea in enter in dec or lret (bad) mov mov push mov in dec or es (bad) imul int add out and or sub out out in addr16 and or sub out out out ljmp or and imul sub push inc in insl (bad) mov in dec sub and test out out out dec int3 stos push inc in sub gs out call in mov vpaddsw or int3 outsl or mov test xchg cs push in test call add outsb or or call in imul imul mov mov es in sub in mov mov out mov mov sub (bad) ljmp and push dec push in out in push outsb mov dec sub dec dec out vpminsw mov dec sub sub sub or sub test leave ljmp mov dec test in imul dec sub imul sub test lret sub out xchg enter cs in push test sub cs mov or lret lds dec or sub int push loopne add sub movsb cmp movsb mov and sub and mov and movsl and sbb and mov sub mov mov mov cmpsb movsb mov mov xchg xchg pushf and xchg mov sbb adc sub mov movsb mov mov sbb and mov mov (bad) rol rcrl lods or xor pop xor jp jbe push ss das das cmp popa addr16 inc inc dec push dec cmp inc pop push sub inc xor pop inc inc inc movsl xor mov movsl sub and sbb movsl sub mov mov and and sub dec mov mov cltd adc push xchg je xor inc (bad) cmc add pop mov loope leave mov and or enter xor push jo xor mov xchg sbb ss enter xchg rcrl (bad) mull and and mov fldcw add adc aad inc xchg mov mov in vcvttpd2dq or lret jb and and les push xor cmpsb mov push inc mov xchg or cmp jp jp sbb xor sub adc gs cmp xor leave push cmpsb mov cmpsb add xor xor inc inc dec insl push push jbe stos adc aam push in inc out xor dec insb sub and xchg in mov movsb and leave cmp cmpsl ja popf cwtl mov cmpsl mov jmp or sub adc inc arpl inc mul fs mov enter in inc push inc adc lcall jns pop pop test xor cmp and sub (bad) (bad) and data16 or fistl sahf lds inc push pop jae xchg (bad) icebp xor push adc dec sarb xor xor fisubrl jl test cmp das xchg lds test nop movsb ret insb cwtl fsub mov dec dec (bad) and and xchg fs popf shll insl jp mov and push push sbb lcall popa scas and jno sbb adc loop xor inc adc sbb sub test fnsetpm(287 xor push adc xchg or and (bad) loope es dec and adc xchg or push mov and mov mov and pop mov jnp sub sub push xchg adc inc mov pop dec mov sbb test test pop gs xor imul dec (bad) sarl cmp dec push arpl aaa dec inc inc adc jo xchg fs pop inc push adc int3 dec cs mov stos (bad) and and lods fcmovbe out and mov repnz xor adc pop popf popf int popf sbb push mov sub sbb dec shlb xor or xor and push loop inc mov lret push inc les add sbb and enter fstl adc sub in xor dec adc sbb icebp cmp imul adc xchg clc nop xchg icebp xor or cltd pop les loop push fmul popf lds cmp bound cltd cmp popf movsl (bad) cwtl push cwtl push pop fs bound push sbb sbb mov mov dec int3 les dec push mov sbb das int3 (bad) xchg (bad) mov mov outsl jno adc or sub dec jb aaa cmpsb cltd fs inc imul jmp push gs addr16 arpl ja inc cwtl in aad movsl lret cltd sbb or call sub (bad) xor test xchg xor mov push jle cmpsl cmpsb xor dec sub pushf sbb and xor imul sbb dec mov imul in inc dec push mov inc movsb cmpsl mov es lahf mov in xor int fisubl xchg jl in repnz sub mov lea dec sub les push xor movsl (bad) (bad) mov dec dec sbb mov leave or mov rorb mov cld dec dec pop adc stos (bad) fimul pushf aad sbb (bad) lret (bad) sbb and adc xchg adc stos and cmp popf pop jns push push sbb xchg adc repnz inc inc mov pinsrw inc jg mov adc sbb sub mov daa adc and les sbbl dec lret lods jb mov pop aam and adc (bad) and fcom mov repnz adc icebp and sub inc push mov xchg push loop gs fwait adc jns mov imul push cmp xor ljmp sub mov lds inc cmpsl test and jl or mov aam mov daa push sahf inc xchg adc cwtl mov mov dec jl dec xchg pop mov xor mov or enter adc mov sub clc lcall jns xchg pop lcall leave jmp scas icebp sbb and addr16 data16 es cld dec push fs adc mov pop fstps mov int adc lea stos pop adc iret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov or add popf and or mov ljmp jne inc dec xor inc inc dec push dec sub dec adc pop dec lea pop dec adc mov movsb inc inc push dec adc lods and adc or mov loop imul pop ret fldenv inc and inc xchg inc nop pushf bound or (bad) inc nop pop loop inc and add and xor les lcall and dec stos or fcom push inc call xchg adc dec or inc xor mov and and adc rclb adc sub dec pop inc or mov xchg cmp dec jno xor sbb das inc mov cs imul ret aam adc int3 (bad) pusha xchg mov jno push dec and mov pop rol movsb lcall jo loop imul and inc aad jb and mov and push and adc push pop jno mov es test lret les and cmp and jl sub mov and les pop push loop push inc in mov cld dec lea pushf mov out cmpsb test dec inc test out dec test cmp or sahf and fnop mov into and adc (bad) pop (bad) clc nop mov in imul shlb nop shl imul and les lret xchg das clc xchg sbb dec or sub mov les push xor mov dec push xor (bad) es xchg or call and dec adc in fs inc adc inc push push (bad) dec mov js xchg mov push mov enter loop dec loop inc mov cmp in and sub dec dec bound mov and clc (bad) aam adc adc addl dec scas lahf xchg adc pop or jp jo enter pusha and pop (bad) cld lea inc adc mov mov lds adc popf pop into adc mov pushf pop rcrb rcl fstl lcall inc inc and xchg mov cmp and and cmpsl cmp movsb ss stos mov mov mov cwtl cmpsb sub cmpsb mov stos xor xor mov mov stos jg jne adc (bad) (bad) jmp and aas (bad) clc xchg adc dec sub loop push push sub (bad) daa xor and sbb (bad) (bad) (bad) (bad) (bad) (bad) call stos (bad) (bad) (bad) (bad) (bad) jmp arpl cld dec call (bad) (bad) (bad) (bad) cld dec dec repnz mov je and mov pop adc adc pushf dec dec cmp sub aaa and and mov jnp adc dec loop push mov lahf mov (bad) ror les aas loop loopw ss lahf mov (bad) daa xchg mov les adc mov inc push sbb icebp and (bad) jmp xchg aas loop loopw gs lahf mov es into mov dec (bad) adc inc inc mov push sub and (bad) adc nop xchg mov jo test add and test aam nop lea push loop inc cld dec sub and inc mov mov mov decl shlb jne and dec xchg adc nop dec bound loop cmp and stos dec (bad) out mov pop jle pop test pop clc nop fidivr push decl das icebp and inc xchg out les adc xchg inc into cld dec sub and scas out les adc mov inc icebp xor cwtl rolb loop ja inc outsb mov fisttp jle inc call arpl inc pop mov fisttp jle and mov clc nop aam push ja loope dec mov mov and push sbb inc mov and jg and clc cltd popf call jnp (bad) (bad) call or cmp dec xor mov push and or aas adc push dec out cld dec lea and dec test dec and and mov or push sbb mov xchg push inc (bad) cltd adc mov pop les movsl push je jne je jbe (bad) xor imul outsl dec incb xor repnz in push xor dec pusha sahf mov push (bad) cld mov (bad) (bad) push les xor test inc fs fs xchg jl imul sbb rcrb mov movsl cld int sub or sbb xchg fidivr push and cmp call (bad) (bad) (bad) (bad) cld enter mov jmp inc js and dec scas pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push cmp dec sub loop dec icebp cmp and fnop (bad) mov xor mov adc aas mov (bad) (bad) (bad) (bad) and jle adc les popa push xor xor inc js push jne inc inc inc bound inc xor popa dec push addr16 imul inc inc jns inc xor jae push push push jae pop dec addr16 call or int dec sub mov and push pop mov push mov dec sub and mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sub stos cmp dec adc test inc mov nop push loop ja inc push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp or adc faddl ljmp push and or (bad) inc inc aaa inc cmp adc mov cmp stos and mov dec outsb clc xchg sbb es dec hlt movsl lds fs popa sbb dec dec inc adc sbb roll sbb jae lret push dec arpl xor pop push push les imul daa aas cld dec jmp mov xor test sub leave push cs mov jp inc push xor xor push push xor pop inc inc push xor push imul jo push inc xor xor push insb dec push push push pop pop push inc insb popa push xor pop insb cmp push dec push inc push insl pop xor popa insl je bound jbe dec inc jns xor outsb fs pop jo dec xor data16 cmp inc inc inc inc inc inc inc dec dec xor push jo push push addr16 pop dec jns xor inc inc inc dec inc addr16 inc push inc js push xor pop pop dec jns xor inc addr16 inc inc inc dec dec push imul pop dec jns xor inc addr16 inc inc inc inc inc push xor inc push push xor pop pop dec jns xor inc addr16 inc inc inc inc inc inc inc dec xor dec xor inc bound push popa push dec push bound outsl pop pop dec bound imul push fs push insb bound xor push jbe inc js pop push push addr16 push arpl jne inc insb je push inc jae push dec jns pop dec xor pop xor jns insl push push inc js dec addr16 bound push pop xor jne inc inc push inc inc xor push addr16 pop inc ja inc insb push pop push jo xor arpl jp pop inc ja xor dec dec push insb pop push xor insl cmp inc xor insl push addr16 push xor je pop push jo xor inc inc inc inc inc inc inc push dec push jp ja dec dec push inc inc fs push insb bound xor push jbe dec push jp push inc dec push xor inc dec jbe inc push addr16 outsb dec jbe push inc xor insb jp inc inc jp xor pop insl js dec inc push xor insb jne jns jne pop push jo insl push addr16 xor imul jo insl insb xor inc jae pop jo fs insb jbe addr16 popa inc insb jp inc insb jne inc insb push pop push insb arpl push pop jns jo imul dec inc inc ja inc js pop xor popa push cmp imul arpl je xor dec inc js popa xor gs inc xor push arpl jp push js dec inc cmp inc dec push bound addr16 push xor push push dec dec push inc xor xor ja push js pop inc inc outsl dec xor arpl addr16 outsb push jne xor bound xor pop outsb dec jbe push inc push fs insb xor inc push xor xor push jbe imul arpl je inc push jae inc xor push xor inc push outsl inc inc inc dec xor dec jns push outsl je inc xor insb bound xor addr16 inc push pop insl cmp inc js pop xor pop push inc jo insl pop jbe insl xor inc insb jbe xor inc inc inc inc inc inc inc push push ja jp dec inc imul xor xor inc inc xor inc jo insl insb xor inc jae pop jo dec dec push outsl pop push inc inc push insb push bound jns push inc xor inc jne inc cmp xor inc insb push outsl popa pop dec addr16 push xor push dec inc inc addr16 outsb push outsb dec inc insb jne dec insb jbe pop dec addr16 pop inc ja inc insb push pop push jo xor inc inc dec xor dec ja push outsl je inc dec push push inc inc jne xor popa push xor push pop push push dec inc addr16 inc push push ja push dec inc imul push dec dec push jbe inc insb jne pop push jo push js gs push addr16 inc push push inc inc inc inc inc inc dec xor dec xor je inc xor insb bound xor addr16 inc push pop insl cmp inc js xor inc insb jne pop push jo push js gs inc xor cmp push outsl inc inc inc inc inc push push ja push dec inc imul xor push jne xor popa inc inc jp inc inc push push inc insl bound dec arpl push imul addr16 push xor push pop pop push jo xor inc addr16 inc inc inc inc push dec push jns push xor push inc ja pop dec insb dec dec pop jo outsb push xor ja pop outsb push jne xor bound xor pop xor bound dec inc inc inc inc push push ja push dec inc imul xor push jne xor popa inc inc jp inc inc push push inc insl bound dec addr16 xor jne pop push push popa pop push addr16 inc imul inc inc inc inc inc push dec push js push xor push inc xor inc imul cmp xor bound push xor insb dec inc push insb fs insb push push xor inc inc inc inc inc dec xor inc xor push outsl je dec push jne pop push xor push addr16 inc push push arpl jbe xor inc inc inc inc inc dec xor inc xor je dec push jne pop push xor push bound jae inc insb xor dec insb pop push push bound push jns insb arpl jbe xor inc inc inc inc inc dec xor inc xor je inc xor insb bound xor addr16 inc push pop insl cmp dec push outsl jge mov stos cwtl mov mov stos movsl xor lods sbb xor lcall cltd test sbb lods cmp mov sbb mov or dec lret dec lods jmp or inc imul dec push inc js push xor les dec dec push imul sub adc dec push rcrl xor inc rorl movsl or pop cmp mov sub and mov dec mov inc or or sub push ret and dec sub fistl loop xor xor jns insl push push js dec addr16 bound push aam int mov inc mov fmull push cmpsb and inc out xchg daa cmpsb inc mov lods les mov mov dec cwtl lea and cmpsl xor cwtl and jle addr16 sub fisubl in and push test fbld ror adc cltd or mov insb sub or sub (bad) and push sub sbb lea adc xor and jno int3 es into insb stos jle inc ja add call mov pop test pushf lock pushf out rcl iret adc lahf icebp sbb inc xor or mov xchg bound push outsl je test and clc xchg popf mov cs insl es pop push xor (bad) (bad) repz cmp or mov lods lahf adc scas inc push push ss and xor cmp jb ja jmp dec push push inc loop jo arpl or lcall mov arpl xchg dec (bad) jmp fs decl xchg or icebp sub inc mov inc pop xchg in and shrl es (bad) inc mov les and and repnz (bad) call rorb push jmp inc xor clc cwtl push cmp pop cwtl pop jg inc xor push and icebp xor or in (bad) aas adc (bad) inc pushf arpl (bad) (bad) (bad) call or pushf out and iret clc cltd adc dec aas jmp pop xor (bad) clc mov cmp mov mov and xor cltd sub mov aaa movsl mov or xor inc je call push jg or adc pop nop rcr pop in inc inc ja inc mov pop mov inc xchg nop aam adc (bad) loop push cld dec push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp or or clc xchg shlb inc (bad) (bad) decl sub sub pop (bad) jmp test sub aas (bad) cld mov sub (bad) (bad) (bad) decl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc nop push (bad) (bad) (bad) (bad) and lahf (bad) (bad) (bad) (bad) incb push and mov (bad) and xor js push (bad) (bad) decl (bad) (bad) (bad) cld dec push sbb (bad) (bad) push and (bad) (bad) inc into xchg movsb into push lret mov cwtl aam fs aam data16 cmc push lds push rcll inc out mov notb cmpsl add jbe add pop pop pop push aaa adc xor ja xor pop inc es inc push daa adc ret and (bad) or scas or dec movaps dec iret dec gs lret or daa sub int3 data16 xchg (bad) mov or xchg scas dec inc jmp call push pop sub inc gs mov out inc and sub sub dec in jmp test mov test stos push int imul dec in dec or test sub imul outsl cs mov mov dec enter iret dec out in dec or xchg sub dec dec mov (bad) in sub push dec dec out scas and ret sbb andl rcrl mov popa lret cmp mov mov rcll mov mov inc xor sbb and xor pop xor jp inc lret or dec push dec mov pop mov pop mov popa stos dec shrl stos sbb mov jp cmp mov arpl or stos xchg mov jns mov arpl test xchg jp mov push cmp ret push push lret fwait mov rcrl mov cltd or xor xchg and sub stos sbbl adc jnp mov test arpl lret xchg leave jnp test xchg inc je je jae xor xchg push xchg xchg xchg adc movsb xchg and leave or push mov test sub xchg mov test mov fldenv int test fxch xor (bad) xchg rcl mov fstp xor lods fsub adc (bad) inc adc in mov cmp int3 mov push lds popa pop (bad) in push int fstpl shrb cltd mov fnstsw loopne flds in mov lods inc mov in fsub add or popf sub inc roll or pop sbb mov xchg and add lods sub mov sub movsb loope xor adc jmp int3 loope push sarb inc rorl lods xchg and push adc cmp push mov push pop pop imul kmovb in inc push sub dec adc mov xor push sbb dec push lds pop mov gs pop rcr and lods cwtl rorl adc movsl and in test imul imul sub dec mov lds leave leave sub aad fisttpll rcl test aad mov aam in fxch mov adc xor test xor sarl dec shl pop (bad) fs xchg leave mov cmp xchg int3 lods adc aad mov fsubrs mov call in test lods fnop loopne cwtl fdivrl mov mov xor add imul or xchg popa mov xchg inc or push dec in imul add push inc add add fs pop shll pop in add aad xchg mov shll pop in add in xchg sbb movsl imul fstl mov in add pop mov add pop loopne add adc push add inc popa or test add gs sub add mov sub add adc pop mov dec sbb aad xchg popf or int add add fisttpll sub dec mov lds lea and in adc or push leave sbb xchg popa sub add mov sbb add and mov dec mov add pop dec aad popa cmp add pop pop jmp add mov mov push int aad sbb or popa inc add add inc or pop inc add add popf or pop roll mov int popa dec mov adc movsl test or xchg sbb in fldl adc in and gs sub dec sbb sub lea dec (bad) add sub inc leave loope mov xor in popa lods mov inc mov jmp mov or lea in and or dec aad sbb pop jmp lea dec (bad) add in gs fstpl xchg sbb dec mov imul lea mov inc popf xchg mov test and and aad int in pop cmp mov and mov mov rorl or xchg sbb in and gs cmp lea lods popf fs int in pop cmp mov and mov mov rorl add leave imul popf fs dec or xchg and lds (bad) sbb dec (bad) sbb aad mov test imul lods imul test and movsl add add xchg pop aad mov test test shll rcll imul add pop popf popf xchg mov test and popa cmp lea lods popf fs int in pop cmp mov and mov mov rorl or imul popf fs dec or xchg and lds (bad) sbb dec (bad) add sbb gs xchg mov or cmp mov and jmp fs (bad) sbb dec (bad) add lds imul test and mov pop test and popa sub sub add fisttpll pop lds imul rcrl int in dec lea and int pop cmp xchg or loope xchg sbb loope mov pop in dec lea mov and sbb lea imul roll mov int (bad) add mov cmp imul cmp mov pop test and int lds sbb cmp imul or dec inc add sbb or and and mov lea lea lods popf fs int in pop cmp mov and (bad) lea test cmp mov and mov fs int in pop cmp mov and mov mov rorl or xchg mov test and int in pop cmp mov and mov mov rorl or imul popf fs int in pop cmp mov and mov mov rorl add leave test rcll dec rorl mov pop pop aad or add popf xchg mov test and popa cmp mov pop test and popa sub sub or xchg sbb in sbb dec in pop cmp mov and mov mov rorl add leave imul popf fs int in pop cmp mov and mov mov rorl add test lea loope xchg sbb or lea in sub add popf imul or xchg and lds (bad) sbb jmp sub add leave imul popf imul lea xchg and lds (bad) add imul mov dec in pop cmp mov and popf mov dec in pop aad sub add popf mov popf mov dec mov and popa sub add and mov fldl popf xchg mov mov add mov loope sub add leave imul add in add add add inc inc add inc test add add add add add add add gs add add add roll add add add inc add add add add rol add add add add add fldl add add sbb dec (bad) add add add add add fldl add sbb dec mov or lea pusha (bad) in mov xchg aad pop inc add imul test pusha (bad) in xchg and cmp cmp lea fldl pusha leave imul add int mov gs loope add int shrl mov add int mov mov or imul cltd gs jmp add add add or add inc and or add add rorl and or inc popf adc shll add popf adc add add popf or add add inc and add add add popf or or and or inc popf or add add popf or add add popf or add add popf or add add popf or or and or inc popf or imul or pop add inc and or shll add popf or inc add frstor inc popf add or and or inc popf add add add popf add add add popf adc or imul or imul or imul or add add fstpl inc popf or add add popf or dec add fstpl inc popf add add add popf adc or dec or inc popf or add add popf add add add popf adc mov and inc popf or xor popf inc inc popf or imul test pop leave mov imul mov mov dec pop mov pop in leave sub imul mov int shll dec rorl add rcll jmp xchg sbb or lea pop fldl popa dec or rcll aad mov lea mov sbb xchg adc cmp push test dec xor shrl or inc popf or pop aad mov aad xchg pop pop popa imul sbb gs inc add gs aad imul or popa mov xchg pop aad xchg pop loope xchg pop xchg push imul cmp test daa inc es inc push daa adc ret and ja add xchg and xchg (bad) in xchg xchg push inc lds in jae xchg movsl mov ss jbe inc hlt xchg push push data16 daa and push jb inc addl and mov jecxz mov mov adc adc inc and push je jbe movsb ss aam adc push and xor test xchg jne mulb and push xchg mov xor mov mov ja (bad) xchg xchg xchg movsb in push and cmpsb jae mulb inc cmc adc fs es xchg xor push adc inc adc and gs test adc xchg xchg jne push movsb inc and fs push test inc push push add push adc inc xchg jne add adcl arpl jbe hlt push test aam xchg inc xchg out repnz mov mov les xchg cmpsb xlat pop push ss data16 mov xchg xrelease pop pop daa and daa push and aaa and pop inc adc push (bad) shll ja xchg addr16 pop jbe les aad ja xchg cmpsb xor add test add gs es and ss xor mov push es mul adc cmpsl inc ja divl fs mov xchg mulb mov in push jae and xor adc adc fstpl mov mov mov lcall jecxz adc push lds aad pushf xchg lret push and lret dec xchg push inc lods out hlt adc mov pusha fs inc ja pop into push sub stos test nop sahf pop push fst pop pop dec push inc mov dec inc and (bad) loopne (bad) xchg lcall aad test xchg popf or int pop and mov mov push sbb mov mov gs roll movb imul outsb dec jo xor xor int3 test and mov pop outsb and dec fs testb leave sbb mov (bad) sbb rclb or xchg out adcl rclb cwtl ficom jl insb (bad) gs ss xor dec dec push push addr16 xor adc xchg sahf inc (bad) faddl push shrl cltd cmp and je xchg xchg (bad) xchg mov adc in push dec loop outsb loop inc mov mov cmp xchg into inc xchg jbe mov out les incb and xor mov or nop pushf aas xchg xchg pop aad (bad) shl (bad) and jg mov dec dec add jo insl (bad) es (bad) (bad) cld mov sub push and mov (bad) cld dec xchg loop push mov addr16 or js clc xchg push aas mov mov dec dec ret (bad) lock jmp push xor cwtl nop les and adc mov stc adc push aam inc inc push inc loop insb loop jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc xchg mov out and dec push sub movsb mov and mov mov stos xor movsb mov test sbb sbb xor movsb mov mov mov sbb sbb mov test sbb sbb xor movsb mov mov daa xor xor xor mov lods cmp xor xor pushf mov mov and cmp sbb mov lods cltd test xor xor mov sub sbb lods sub cmp ss lods and sbb mov mov movsb sub ss test cmp sub mov mov test mov cmp xor stos mov xor and sbb mov xor sub mov cmpsl xor and sbb sub mov ss mov sub mov ss mov mov mov mov sub and mov mov mov mov mov mov mov mov mov mov mov mov xor sbb mov sub mov mov mov sbb mov mov mov mov and mov mov mov mov sub xor mov mov mov mov mov mov mov and and xor lods sbb mov mov lods sub mov xor mov mov daa and cmp and xor sub xor mov sbb xor mov sbb xor and xor mov xor and xor daa xor mov mov cmp mov mov mov mov mov mov lods mov and test mov mov mov mov sub mov xor and movsl and mov mov mov cmpsb test sub and mov mov lcall mov mov mov mov mov mov mov mov lods mov and movsb sub and mov mov mov mov mov mov mov mov mov sbb sbb mov mov mov mov aaa mov and movsb sub and stos mov sub sbb stos and movsb sub and test mov mov mov lcall mov mov mov mov movsl mov test sub and mov mov mov mov mov mov and mov mov xor mov mov sbb sub mov mov mov sub mov mov and sub mov mov mov mov mov mov mov mov mov mov and mov mov mov mov cmpsl mov sub and mov cmpsl and mov and cwtl and cmpsb and test mov and sub sub sub cmp lods and xor mov xor mov sub cltd sub sbb sbb stos lcall lods sub xor sbb test and xor sub movsb sub mov sub and test sub stos lcall sub aaa sub mov daa and mov mov stos and and mov sub sub stos mov stos sub sub and lods sub lods stos lcall lods and daa sub ss mov mov sub cltd test and mov mov cmp lods sub xor sbb mov mov mov mov mov lods and mov and mov cmp sub and sub mov xor cltd sub sub stos mov mov xor sub sbb mov sub daa test mov mov xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg test sbb xchg mov sub cmpsl mov cmp xchg xchg xchg xchg mov cmpsb mov and mov sub and stos mov xchg xchg xchg xchg mov cmp and mov mov xor mov test cwtl cmp mov pop xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg stos mov lcall inc cmp inc insb xor dec push fs push push sub xor cmpsl sbb sbb mov rorb inc inc xor enter jmp cmc mov or dec sub or bound and ror es fsubrl lods sub mov mov mov lods cltd test pushf mov jg push jo insl arpl mov mov xchg fwait aas stc sbb pop mov adc sbb adc mov dec int ja mov dec sub and xor adc and mov lods inc test dec test cmp adc movsb dec outsl push aaa pushf (bad) int3 (bad) mov add dec mov xor into loopne pop aas adc push inc mov dec shlb sub cmp inc jb xor pop dec xchg ffree xchg iret adc rcl sahf jl dec dec or dec push mov in sub push adc scas and mov mov and push and enter push dec into jg imul dec mov xor cmp sahf test adc push push push push pop adc mov mov and sub xor adc inc push test inc cmp inc addr16 and ret andl adc je and mov pop into or push fs dec ja adc movsb dec mov mov and fwait adc adc jns dec icebp sub les adc inc inc (bad) decl adc xor sbb jb aas (bad) cld dec dec mov and jle je and movsb cmp or into mov clc cltd sarb adc and sub test bound loop inc mov push push enter gs lcall icebp sub dec test xchg jecxz lcall sbb pusha test inc inc push data16 adc xchg push and les mov xchg in lret pop pop cmp push test dec and lcall loope stos out push popa dec push inc adc and mov mov dec pop fwait adc push daa test xor or inc dec dec loop inc icebp and cld lret dec dec sub dec push inc push cmpsb pusha lock test jb stos lods mov sbb pop lds cmpsb inc cmpsb (bad) inc icebp cmp or aam dec sbb mov fs push xchg xlat movsl adc xor jns or lret (bad) (bad) push sub sbb xchg mov jp pop mov sarl dec test (bad) mov aaa ja in jae adc and call (bad) cmp sbb mov dec dec lret es mov mull xor push (bad) movsb pop test movsl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp push ja push xchg dec fisttpll cmp or enter hlt inc mov aaa jl dec sub pop mov mov call loop push cld mov inc cmp inc jo test clc nop nop mov or xchg xor popa sbb push and xchg cmp xchg pushf stc adc xchg xchg decl mov sub (bad) arpl arpl enter imul ja xchg das enter out (bad) clc mov and jg cld dec mov (bad) clc xchg fprem nop dec mov imul xchg pushf dec insl sbb lret les sub and cmp dec (bad) adc mov je aas les clc nop xchg loop ja dec int3 clc xchg sarb daa xor in ja inc les loop les (bad) (bad) stc adc inc xor (bad) clc xchg cltd (bad) (bad) clc nop lcall pop (bad) (bad) inc test (bad) and cld dec push les sub pop mov adc (bad) cld dec cs (bad) clc xchg xchg jg call mov cld dec dec (bad) clc xchg push jg clc nop dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push and (bad) (bad) and outsl (bad) (bad) call (bad) (bad) (bad) (bad) (bad) (bad) inc into (bad) jge stos xor mov lods test xor mov mov test es inc xchg je arpl and xchg fnop pop push push adc push dec (bad) mov orl inc imul inc insb decl push ss pop decl pop je fs je push je and push sub mov pop pop mov (bad) adc jl mov dec jno test and or or mov inc jl dec cmp dec jmp arpl cmp dec sbb inc jb mov (bad) call jnp es (bad) (bad) (bad) jmp inc xor cld dec dec inc push inc pop addr16 test (bad) decl aas cld dec dec cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) es pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) and lahf stc push sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc test clc xchg push jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp push ja and (bad) (bad) mov stos repnz mov push aam cbtw test aam mov call sahf xchg lcall (bad) inc push xor xchg (bad) call mov hlt mov and or lret sub ja xchg sahf push xchg aam cwtl fwait xchg popf push xchg adc aas les mov adc inc or adc lahf loop pop les dec push inc xor (bad) iret (bad) clc nop xchg xor daa jl mov dec adc mov and jg les xor sahf nop mov movsb fsubs addr16 xchg das (bad) (bad) (bad) and scas (bad) (bad) (bad) cld dec es adc (bad) (bad) (bad) (bad) (bad) call adc les nop pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) and jmp inc dec (bad) (bad) (bad) decl daa mov movsl adc cwtl xchg pop decl jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc adc xor xor inc xchg mov imul enter (bad) (bad) decl (bad) (bad) (bad) (bad) (bad) (bad) jmp dec push loop ja cmp lcall cltd inc jmp addr16 jge cs ja jne inc push inc bound jae inc stos inc jns dec push inc bound imul or adc je ret xor enter stos mov rolb je dec sbb push mov inc jne push nop lcall adc loop inc clc mov dec test (bad) mov adc fnop lea inc jae (bad) lock xchg js push jl dec ret adc sub enter nop xchg in push inc dec xchg pop fisttpll inc and mov xchg mov daa das adc adc (bad) icebp and (bad) dec mov test jmp lret mov out mov loop inc adc mov mov adc mov pop call ret push jl dec cmp mov sub xor mov mov dec (bad) and pushf dec dec pop nop lcall dec (bad) (bad) clc cltd sbb (bad) (bad) call sarl and cmpsb cmp cwtl pop call mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp push ja mov cmpsl (bad) clc nop cwtl (bad) (bad) (bad) (bad) push and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc lret clc xchg adc mov mov adc (bad) enter test adc (bad) (bad) (bad) (bad) (bad) es pop (bad) (bad) (bad) (bad) (bad) (bad) inc test clc xchg xchg jg or adc outsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) and out (bad) (bad) decl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl arpl insb fs cmp push xor xor jne xchg and xchg stos test mov cltd adc test sub xchg cwtl xchg lcall popa pop sti xchg push inc jne xchg es add xor push mov jae aaa sub stos cltd or dec rorb cmp push les call or and (bad) (bad) decl (bad) and sbb call (bad) (bad) call inc cmc adc pop (bad) (bad) (bad) clc xchg sbb jg (bad) (bad) jmp push push (bad) (bad) jmp stos pop ret sub jo and mov (bad) (bad) inc mov (bad) (bad) cld dec dec (bad) (bad) (bad) (bad) (bad) jmp cmp bound mov mov and mov cmp and inc inc xor lret stos jb or or push or mov (bad) mov addr16 gs into call xchg push push inc inc xchg sub scas adc imul cld dec sub arpl enter arpl sbb adc dec stos dec mov ss lcall je and adc adc xchg push push and and sbb jmp jmp mov imul cmp and sub dec lret es iret dec inc das sub int mov iret sub dec sub int dec aam and and push ja (bad) jns rcrb adc nop ficom rclb aad xchg mov mov mov xchg mov mov in (bad) iret dec inc push push xor push jb mov and mov dec pop adc pushf mov test movsb lcall pushf into mov (bad) es adc sbb in insl push push dec arpl dec jns inc js arpl jp insl insb ja xor ret or adc adc enter adc int3 enter mov jmp sbb fstl call sbb aam rcrb int3 aas les and pop mov dec pop cld dec imul dec les (bad) and (bad) (bad) stc lcall loop dec mov cs dec imul inc and xor sub icebp and xlat adc cld dec out bound (bad) (bad) cld dec es (bad) and and adc adc jmp pop jp pop sbb fcoml mov mov call sub rcll test and sbb sbb aam mov incb movsb fs mov stos icebp sbb jg (bad) popa (bad) dec ret test call cld inc dec pop xchg cmp pop pop jmp sub adc (bad) decl dec pop icebp cmp jg repnz lods and icebp sub decl stos xor or addr16 decl mov adc inc mov (bad) incb jbe add sbb add xchg and sub mov ret push and push and (bad) (bad) mov xchg popa and cmpsb mov cmp les ret pop adc test (bad) cld xchg out dec mov jmp jns push je dec dec stos pop popf (bad) (bad) clc cwtl pop (bad) (bad) (bad) clc mov call sbb mov decl push daa je and jg (bad) jmp inc xor loop js in inc inc inc (bad) (bad) (bad) clc lcall (bad) (bad) (bad) (bad) cld dec cmpsb pop cld inc dec lahf mov adc push and and inc loopne (bad) lock (bad) inc pop lret cld dec lods jg cld dec mov (bad) (bad) cld dec dec jle cmpsb mov call (bad) (bad) (bad) inc pushf xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov jb hlt (bad) mov mov xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pop pop pop pop pop (bad) aam mov (bad) (bad) (bad) mov push (bad) (bad) (bad) (bad) (bad) (bad) test hlt (bad) mov mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pop pop pop pop pop out (bad) (bad) (bad) (bad) mov pop pop pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov (bad) (bad) (bad) (bad) mov xchg mov lock xchg mov (bad) (bad) (bad) (bad) pushf mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov push sahf hlt (bad) mov mov test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pop pop pop pop pop insb mov rolb (bad) (bad) (bad) xchg (bad) pusha mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov pop pop pop call xchg test mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov pop xchg hlt (bad) mov mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jge or test xchg lods cmp imul addr16 push inc push cltd or pop (bad) (bad) (bad) adc test nop popf cmp test inc inc (bad) jmp das ja adc push flds clc nop push stos adc adc rclb push lcall dec inc enter mov icebp adc pop (bad) incb gs or dec sub inc dec inc xor (bad) inc call adc jp loop pop (bad) jmp das cmp cld dec es (bad) cld inc out jl xchg inc adcl sub (bad) jmp cmp xor jp loop dec loop sub mov lret cld dec mov and arpl (bad) (bad) call lret lahf adc (bad) and inc bound sbb dec xor sub xor (bad) ficomp adc pop inc (bad) inc pop stos les loop inc mov mov daa xor xchg mov push and adc and xchg call push jg jnp or sbb fsubs inc aaa push test (bad) call loop inc in dec dec xor jmp push das jmp and rclb jp imul movb pop es outsl clc xchg rorl xchg xchg adc or call mov enter pop push pop fwait adc test incb push aam sub les test and sub inc adc movsb js adc clc xchg lcall in dec push push adc jl out mov sub inc jb and mov cmp clc xchg (bad) xor cmpsb mov jle and and lcall mov and cmp cld inc test (bad) and lods mov dec jno mov je cmp adc bound mov and fcoms adc pop dec enter jb xor and mov push mov xchg jg push mov mov test dec push and clc pushf adc adc dec dec inc inc jae dec adc pop dec int inc dec inc inc adc outsl decl xchg xor mov test imul jl insl jno and mov xchg xchg add (bad) mov or test mov daa add xchg adc mov adc sub dec movsb inc inc push inc adc cld dec test xor repnz xor into and mov mov sbb jns nop frstor inc cld dec dec push and mov inc les adc dec or xor inc les dec in dec dec push sub and push push adc inc xor cs and js fisubl jg mov sub (bad) and mov ret xchg sbb inc decl pop mov xchg push and sub inc cld dec or xchg push sbb (bad) lock xchg mov bound adc pop mov and les adc dec dec ret decl pop (bad) daa push pop (bad) repnz xchg test and jbe test (bad) ss xchg outsl dec dec out cmovl or xchg sub xchg adc pushf sbb int3 pop sub int3 aam inc lods jmp mov xchg push xchg aam mov xor and insl test xchg mov cmp arpl push jo lods aam mov lret daa cmp inc inc push xor xchg imul push xor int3 push repz les and test xor arpl push dec int3 stos (bad) fsubrp test sub push inc adc xchg fwait clc sahf sbb xor lods les lea mov cmp dec sub and inc adc xor dec jns xor les adc xchg xchg or test push sub dec fsubr (bad) xlat xchg lea mov sub xor ret pushf out popf add inc mov inc call icebp sbb adc dec dec xor sbb cmp and xor insl dec mov (bad) (bad) and sbbb sub ss lods lods and mov sub sub stos test cmp sbb test mov mov xor and sbb and daa cmp mov ss and cmp cmp xor cmp or push dec xor bound jo push push inc push inc dec push adc push and popa sub mov dec call push js or jb inc inc xor stos or fwait sbb imul xchg stos inc sbb adc mov xchg imul sub sbbl jno sbb xchg mov arpl dec ret movsb and daa and xor sbb adc dec xor xor xor out inc addr16 push insl repz inc push jne cmp dec mov xor dec adc sub and jae add xchg and loop pop adc mov ret call hlt and sbb aam test stos lcall pop inc dec push inc push inc adc xor (bad) fsubl jle cmc sbb dec ret adc icebp and loop push popf cwtl fxch call fistl xor xor cmp dec cmp inc mov and adc xchg dec loop inc and xchg mov and adc (bad) mov xchg pop in enter nop push bound cld dec pop daa inc jae sub sbb enter adc daa sbbl mov push or icebp cmp call mov inc ja push enter iret inc xor les sub xchg xor and out (bad) xchg movb int les shll inc arpl and stos mov dec dec clc xchg xchg clc xchg push js sbb (bad) scas mov pop call adc fwait xchg xchg add test push jne lods aam xchg xchg push push dec dec (bad) cmp and dec push icebp sub jg sub mov (bad) clc nop (bad) (bad) (bad) push daa sbb inc and movsb adc sub xchg push push adc adc xchg inc xchg jmp (bad) enterw push dec inc sub inc movsb shlb iret adc and movsb dec iret ds icebp xor lahf adc cmp dec shrb sbb xchg xchg adc cmp adc outsl cltd pop adc enter gs dec sub arpl outsl enter loope and loop inc jmp imul stc sbb push xchg inc pushf out inc cmpsb adc dec inc push and bound (bad) cld dec adc stos jmp inc outsl adc (bad) enter pop loop xor stos mov cltd sbb test stos jbe movsl adc cmp sub mov mov or loop pop mov xor pushf dec lods (bad) clc cltd adc dec inc les mov icebp sub icebp xor lods loope sub les mov les cwtl popf rolb in je inc mov iret loop addr16 clc lea inc mov insl cld dec push sahf xchg jg sub dec jl push dec insl and or xbegin mov icebp sub (bad) es das clc cwtl fnop nop xchg js dec mov fwait mov or and les xor or push dec lea xor jg jp inc push push and dec bound lods cwtl les push bound mov loop mov and sub and repnz jae pop jo push xor fs dec jo dec insb inc pop pop dec push insl insb ja inc cmp inc inc sub dec insb pop xor bound xor je gs arpl inc dec push pop pop push push pop push dec xor insb xor push insb arpl dec jns pop inc xor dec inc pop push dec jae dec inc inc push push xor push pop push inc push inc inc push inc inc inc imul push xor arpl inc jae inc cmp pop push push inc pop xor push inc dec push pop push fs bound je insl inc jae push push pop inc dec dec inc push insl push outsb push xor push xor push xor fs dec jo dec imul dec push pop push fs arpl jne xor push pop push inc push xor push inc push jne xor push xor inc inc dec inc insb dec insb pop xor fs xor insb inc gs arpl addr16 push pop push fs bound jp push je gs inc xor insb dec insb pop xor fs pop push push pop push addr16 insb dec insb fs push jne dec dec jo pop dec dec bound push inc arpl dec inc inc push xor arpl dec pop pop push dec pop pop dec outsl push inc inc jns push xor push inc inc arpl ja inc inc push pop push jo insl push inc bound xor xor inc inc js inc inc arpl ja inc dec insb bound push bound xor xor cmp xor arpl inc arpl push pop pop dec outsl inc dec dec inc push xor arpl inc pop pop dec xor cmp popa inc inc inc js inc inc arpl ja inc push inc pop pop push push push imul push dec jns insl push jae inc inc inc ja inc push push inc fs fs pop jbe inc push insb arpl fs push push push inc push dec push inc dec jns insl push jae inc inc dec inc inc insb dec push inc pop jns xor push fs dec jo insl arpl inc inc inc bound dec jns push inc xor insb jne xor bound insb inc inc inc cmp dec jbe push xor push pop push inc inc popa ja inc bound push jne push xor push pop push inc inc pop ja inc bound push push pop push xor insl push insb inc inc cmp push dec jns insl push jae inc inc jp push push xor push inc arpl push inc push ja push pop push jo inc push jbe xor popa push xor push push inc dec push push inc push jne inc js inc inc inc dec inc inc fs push xor pop pop dec xor arpl insb jbe imul cmp push inc xor cmp ja dec inc inc fs push xor pop push push dec pop push xor outsb imul push push push push inc dec dec jp jne inc js inc inc inc bound fs fs dec jbe pop inc xor jns xor pop push dec xor je push arpl inc dec insb pop xor dec jp jne inc js inc dec outsl inc push push xor jne pop push dec pop pop push dec pop pop dec xor push jp inc cmp xor bound jbe ja inc push xor push xor imul inc push xor pop jp jns insl push jae inc inc inc xor inc arpl ja inc push jne dec dec jbe inc push push inc push push inc inc dec push push push inc push dec jp jne inc js inc inc cmp xor push xor je push inc jne inc js bound inc pop ret lods cmp sub and and mov cmp mov and xor stos sbb stos xor sbb imul stos movsb arpl dec jns inc xor dec inc pop push dec jae dec inc inc push push xor fwait or nop push push push push push lcall sahf cwtl int3 adc and mov movsb xor xor sub sub xchg xchg pop pop pusha leave test lods stos int sub rclb out push arpl jne dec popa mov inc inc push inc and lcall xchg loop dec and sub xchg (bad) fs adc aam stos sub sub imul mov bound or mov xchg inc push xchg dec lret jp cmp lret or jbe xor and sbb cwtl adc push call mov enter orl mov mov cmp jb cmpsb mov push xchg mov lods sbb push xor into nop out (bad) test and adc mov adc enter bound sub cwtl mov inc xor arpl enter and mov mov mov cmp repz jae cmp cld mov push call daa gs xor sbb dec push adc stos dec out push imul stos cmpsb sub ds push scas adc test push bound mov inc fmull les dec jne (bad) (bad) mov bound xchg inc and sbb xchg mov cltd cld dec call sub (bad) and dec push push xor imul jp sbb enter stos loop inc xchg inc enter into mov adc sub mov mov sbb addr16 push adc push sbb mov xchg (bad) lock and mov sub mov call dec into (bad) and (bad) dec data16 sub sbb movsl es sbb stos (bad) pop dec dec mov (bad) mov adc push pop repnz mov inc or lock mov sub or push sbb xor mov enter mov inc and lret add outsl inc xor mov arpl lods stos lret fyl2x xor in inc dec push inc jb and cmp (bad) loop push adc push xchg sahf mov sbb (bad) mov icebp cmp jb xor cld inc test js int3 mov and sbb dec cmp or aas (bad) cld dec into loop inc les cltd or mov cld dec inc mov call adc xchg lcall mov call mov (bad) (bad) (bad) pushl push mov dec mov mov xchg sahf jl lods loop insb (bad) stc cwtl ficoml cwtl push jmp rcrb adc enter mov xchg inc popf gs nop roll gs inc jae into into and jno cmp arpl jo dec dec loop imul aas adc xor or push mov or dec push sub add push aas int3 xchg out cmpsb test scas les (bad) decl insl cld dec dec pop mov icebp and inc in adc adc icebp sbb adc loop dec loop push mov (bad) (bad) call adc icebp and dec call dec sub jmp inc ja cld dec dec cld dec sub aam (bad) (bad) and jg lret mov icebp and and mov mov mov mov mov movsl and mov mov mov mov mov movsb mov mov mov mov mov mov mov mov mov mov mov mov mov mov and mov mov mov mov mov movsl and mov mov mov mov mov movsb mov mov mov mov mov mov mov mov mov mov mov mov mov mov and mov mov mov mov mov movsl and mov mov mov mov mov movsb mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov and mov mov mov mov mov movsb mov mov mov mov mov mov mov mov mov mov mov mov mov mov and mov mov mov mov mov movsl and mov mov mov mov mov movsb mov mov mov mov mov mov mov mov mov mov mov mov mov mov and mov mov mov mov mov movsl and mov mov mov mov mov movsb mov mov mov mov mov mov mov mov mov mov mov mov mov mov and mov mov mov mov mov movsb mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov and mov mov mov mov mov movsb mov mov mov mov mov mov mov mov jge mov mov movsl xchg popf add or adc mov and or test inc inc loop push in inc push inc adc mov mov movsb or les stos mov or nop pop clc nop push jmp inc inc loop inc les clc popf sarb adc (bad) bound mov mov mov xchg popf clc nop pushf clc nop push cld dec test dec sub and inc stos cmp pop clc nop push loop push loop push mov xchg add loope mov jle ss nop nop clc nop push jmp inc popa icebp aaa mov mov clc xchg fprem xchg adc loop jno mov (bad) and xchg cltd call stos mov inc xor dec dec push and icebp and inc in (bad) clc xchg cltd clc xchg sbb loop loopw decl scas les les adc nop pop mov inc cmp mov icebp and loop inc (bad) clc cltd fnop nop pop mov inc inc decl mov and das clc lea (bad) call cmp int mov (bad) and push and psubb (bad) adc iret jmp inc push icebp and jno mov (bad) repnz (bad) clc xchg xchg js fdivrl push (bad) cld dec dec lahf icebp ss (bad) and pop clc cwtl xchg js pop aas loop push loop dec decl and inc dec clc cwtl fnop nop pop mov cld dec or decl mov and and jg mov nop push aas call sbb dec dec lahf decl and inc pushf out les loop ja inc outsb (bad) cld dec imul (bad) and jle ss clc cltd popf clc nop dec jmp inc ja inc jbe mov lahf push sub icebp and inc out mov sar (bad) (bad) clc nop xchg jg imul aaa decl dec (bad) es and (bad) inc xchg jmp inc inc loop push mov push and (bad) clc xchg nop js sbb loop inc loop arpl cld dec inc pop icebp sbb icebp and xchg adc adc outsl cld dec cs decl stos (bad) and jle inc outsl clc xchg pop clc nop pop jg inc loopw inc decl and (bad) lret (bad) insl (bad) clc nop pushf jg je (bad) cld dec insb cld dec xchg icebp sub icebp and les jmp dec loopw je mov push and inc fsubl clc xchg sbb loop loopw jne mov lahf mov pop (bad) (bad) and dec clc cwtl aam nop pop aas call adc (bad) cld mov sub and xchg add lea mov push and adc test (bad) xchg and lods dec push adc clc nop lea mov push adc push add movsl les loop jp mov mov nop nop js xchg mov sub test dec dec adc xchg adc inc mov inc mov xor js xchg js pop cmp push fnop jg xchg ss cld dec or insb push sub (bad) es and sahf and call ja inc je inc inc icebp cmp push and jg xchg pop clc nop push and adc outsl mov (bad) daa xchg adc inc xchg call cmp or dec dec pop icebp ss mov inc mov mov loop dec decl push xor icebp and test adc dec dec (bad) decl (bad) and outsl les adc inc outsb icebp and or jle xor clc lcall inc push mov mov and mov xchg jno mov sub mov clc fwait sarl adc push cld dec into icebp and out adc pinsrw inc dec or and (bad) es nop pop (bad) and aas adc adc inc push mov inc testb and jbe jne add push jae xchg je push inc xor xor inc jbe mov mov fwait sbb xchg mov xchg lcall pop (bad) xchg sbb push pop push lcall inc push in outsl sub push insb movsb sub sbb xor xchg dec or dec addr16 (bad) adc fwait aas (bad) (bad) cld int jmp in popl jne and repz mov xor mov enter mov pop xor lret push pop xchg pushf sbb aam add fcos push sub icebp and les adc daa loop data16 xor xchg cmpsb sbb test sub ss adc in cld inc imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call dec pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc pushf (bad) xchg mov ret loop fs pop leave nop int aad lahf stos and test sub sub mov cmpsl stos sbb pop pop mov int aas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov leave mov int3 (bad) scas int3 imul outsb fs jp nop test stos mov mov xchg cmpsb pusha lock test jb stos lods xchg test mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call shrb sub or int imul and into data16 divb sbb int xchg cltd rorl test jb aad cld mov (bad) mov loop inc (bad) (bad) (bad) cld dec sub stos insl sub call push ja jmp xor fsubrs nop test fs ret jmp mov jecxz hlt jo inc mov (bad) (bad) (bad) (bad) (bad) jmp push bound (bad) incb adc push inc insl arpl adc sbb pop rclb adc adc sub in inc inc jbe nop push sbb out test call jne sbb or push pop inc loop inc adc sbb sub mov and adc inc inc mov es and (bad) scas clc nop push aas adc je stos cmp sub daa sub and jno mov nop xchg jmp push ja inc pop mov es clc nop cltd (bad) call cmp adc and int3 icebp sub and adc adc xchg dec dec cld dec mov es clc nop (bad) inc es daa mov test aaa mov ret mov iret xchg and or and loop xor or lea pushf loop mov dec sub pop test and cmp inc cmp xchg inc mov icebp and les sbb adc lret rcl nop lea dec mov (bad) and icebp pop lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc push or adc push (bad) decb js bound inc inc ja pop mov (bad) xlat adc popf rol xchg sbb loop dec mov and push and pinsrw or enter add mov inc (bad) lahf loop inc loop xor cmp clc cwtl lcall adc xchg movsb xchg xchg pop push and mov pushf xchg (bad) int3 cmc inc lcall and sub (bad) (bad) (bad) (bad) jmp adc (bad) (bad) stc sbb into push icebp and (bad) (bad) (bad) and sbb bound inc decl pushf test push mov inc mov mov and lahf adc adc (bad) daa add decl mov and and push es and cmp rcl nop les pushf shl inc push jmp inc arpl pop xor addr16 inc adc mov inc xchg push mov mov inc fwait xor ret push pop jae inc andl sarb stos or xchg jns andl lret jp adc stos lcall or xchg push ret jnp mov ret addl mov imul adc sbb jno jnp sbb push jnp and lcall aad jmp shrl xor adc adc dec mov push dec mov ror mov rcll mov cmp or fstl int mov out cmpsb hlt fisubl mov xchg out bound pushf pushf (bad) movsb (bad) lock hlt cmpsb nop nop in movsb stos dec es sub aaa mov cmp daa xchg mov mov into push push sahf push or cwtl push pop rcll mov sahf adc sbb xchg dec xchg fwait push adc dec or cmpsb dec jmp cmpsb movsb rcll xchg push arpl fs inc push ja (bad) xor push cmpsl data16 and rolb roll mov pop mov ret mov adc pushf rcll test sub or (bad) mov cs sub push dec cmpsb push mov push or add insl xor es cmpsl mov and mov mov adc adc mov push push fisttpll sbb movsl push xor and jbe xchg and inc movsl add xchg push out data16 divb xchg xchg mov push or cwtl fcom mov mov sbb dec test rcr enter mov bnd in pusha fs mov xchg in pusha call fisubrl shrb xor fs xor ss push jp ss data16 jae xor inc dec dec je popa js dec insb xor jo insb inc cmp dec inc sub cwtl mov and or pop fcompl dec rclb sbb pop rcll popf lea int lea sbb adc xchg fcoml nop pop sbb push push fwait dec push adc enter ret push xchg jbe adcl add sbb sub lods push into lods outsl or mov in ss adc add xchg push inc sbb cmp cmp adc sub mov scas imul mov jne es xchg inc push xchg daa data16 and jne push inc bound ret inc sub mov mov imul and lret push adc ret arpl and mov inc and dec push test cltd dec leave lods and ljmp repnz fsubr nop (bad) jecxz sub mov xor movsl aaa xchg mov xor movsl cmp call enter movl xchg add and mov xor test add xchg inc je in jne cmpsb movsl inc xchg repz es xor addl xor inc inc mov and (bad) jno dec dec mov mov jnp and and test jo push xchg mov hlt mov inc jb dec xor jne das adc enter inc push mulb ja push inc movsl push push xchg xchg jae inc divb pop add xor inc cmpsl jbe xchg test jb andl lret and mov mov (bad) and adc shlb pop ret ret mov cmp or (bad) mov mov push push insl (bad) leave dec int3 insl dec int sub sub dec outsb push push sub das sub femms mov lret insb test add jmp jmp cmpsb xchg mov sub or sub enter imul push in das dec (bad) push scas out push sub dec outsl dec outsl or or dec push imul sub imul push push or or sub lods push dec dec call sub sub int dec into out lret imul sub lods push scas out inc and or inc cmpsb dec cmpsb stos dec outsb outsb int3 mov add dec mov sub cs push in xchg imul dec scas sub xchg sub push lods (bad) ljmp cmpsb dec in iret das or dec imul insl push das sub in push sub mov cs data16 sub outsl or dec insb stos or iret or (bad) lret push lea lret dec push scas in sub or lret or ljmp test test ljmp inc sub dec dec lods dec push dec mov dec mov stos in push test cmpsl or outsb lods scas mov sub cs or mov test dec outsl dec dec in dec jmp insl dec addr16 cmpsb outsb out lds int out imul cs pop es scas in cmpsb mov sub in leave mov (bad) call pop ret mov jmp sub leave dec int3 insl dec int sub sub dec outsb push push sub das sub femms mov lret insb test add jmp jmp cmpsb xchg mov sub or sub enter imul push in das dec (bad) push scas out push sub dec outsl dec outsl or or dec push imul sub imul stos lcall cmp (bad) lret pop sub jp lcall fwait jae xchg jae mov jb push mov mov sub or popa stos mov mov inc xchg (bad) adc fwait fwait mov cmp jp xor dec cmp inc lret popa mov lods mov fsubr fs loop cmpsb mov push shrb lods push int3 fisubl repnz xchg xchg (bad) repnz shlb ficomp mov (bad) insb fidivl out (bad) stos rcr mov lret les lods insb mov lock cwtl aam lods scas xchg xchg mov fs mov cmpsb cmpsb pushf mov scas mov les movsb cmpsl sbb aaa mov cmp sub cmp mov and xor cwtl movsl mov mov cmp sub mov cmpsb mov sub and out imul cs pop es scas in cmpsb mov sub in leave mov (bad) call test dec ja sbb popf push dec mov sbb (bad) sbb push push push push xchg int rcrl ficom cmpsb mov cmc test je cmpsl xor addr16 jae push jbe inc xor fadd mov movsl leave popf push dec lods aam jmp lds dec xor rol shrl mov (bad) testb xchg insb mov test mov shll imul arpl adc adc or xchg jo mov mov mov lcall push lods dec dec dec insb es leave out addr16 inc push sbb lret jp popa pop jp ret mov pop (bad) xchg int3 shlb mov cmp mov sub pushf and xchg mov xchg cmpsl and in (bad) stos (bad) inc jmp lods dec int jb ror lcall (bad) sbb dec sbb into test ljmp lods movsb and inc popa loope fstl add rcl lds (bad) pop mov add inc dec inc xor push ja push aaa popa sub push xor xor push js jp push push push imul aaa cmp je dec pop inc dec dec dec mov cs das or inc dec movsb inc cmp sbb xor test out out pop push call pop (bad) xchg insb lret retw and and mov insl mov int3 dec (bad) jmp addr16 dec insl inc sbb sbb (bad) xchg adc fcompl adc cwtl ror (bad) xchg cmpsl xchg mov movb add and xor xchg adc xchg repz inc sub pop test test cmp push arpl dec push addr16 sub xor inc xor insb inc xor xor popa jns inc das dec push imul sub js outsb push outsb addr16 jns and sbb jp dec outsb aaa je outsb xor addr16 pop cmp xor xor inc xchg lea aam xchg into adc movsb lret mov mov lods lods sub adc test sub xor mov cltd cmp sbb dec arpl imul jne dec xor push dec sub jo pop mov or int3 dec mov dec jmp or lea mov push push jne imul aad int3 push adc push mov inc mov (bad) pop and push (bad) xor adc inc into es xchg sub and or lods scas int lods enter in enter bound jb dec push jnp xchg mov xchg cltd pop cmpl sub sbb dec insb dec jp jae imul push jae xor fwait adc int3 (bad) push push pop rcrl push pop pop push data16 xor dec mov mov sub sub lret (bad) jnp mov pop push outsb outsb pop movb push cmpsb xchg pushf ret ljmp mov lods lret lock mov lock fnsave mov mov adcl xor imul outsb inc inc mov mov cltd adc sbb sbb push sbb aad pop push xchg and stos cmpsl mov or dec in dec call lret bound pop mov lret mov nop xchg es jecxz and xor mov adc imul xchg sbb hlt pushf nop scas test data16 mov pushf test test mov or int iret dec loop ret sub mov lcall xchg xorl push mov ficoml ljmp ret fdivs mov repnz test pop dec sbb pusha mov pop pop shlb push jae push sub pop ficoml test mov movsb xor or into dec or dec mov cltd sbb xchg push push push insl fs inc sub cmp enter (bad) inc out and mov mov or test es daa outsl or int3 ljmp push cmpl pop or mov mov lock cwtl push enter movsb sbb movsb cltd and int dec sub call sbb xchg fs sub push push inc ja das inc inc xchg into adc popf push xchg aam xchg nop push push pop rcrl sbb pushf adc pushf xchg pop xchg cmpsb notl repz and dec sbb rcrb loop (bad) push cwtl mov test mov (bad) (bad) xor push arpl dec push inc popa push and mov fwait sbb inc mov rorb sub stos rorl (bad) ret mov push aam adc mov arpl add mov pop and push push xchg xchg addl push push push inc inc lds ja addr16 push jbe and lea push and adc adc pop cmp test sub and cmp movsb mov movsl and cmpsl or jmp xchg into int3 dec daa or xor mov and mov fwait mov sub lods xor xchg mov pushf and xor test out addr16 xchg xor in mov aad sbb push jne gs cmp jns push inc pop cmp xor jbe mov sbb push fcompl adc sbb xor push adc stos and push imul xchg add xor cmpsl inc add sbb xor xchg lds or addr16 mov ja test rcrl test and xchg bound xor jp pop adc out int3 fs mov xor sbb mov sub jno dec imul xchg adc or xchg push xchg push aam xchg adc (bad) xchg cmp mov pop dec lcall dec dec jns xor js xor in add and xor push dec aad dec dec or inc fwait push mov popa sbb or jno mov (bad) xor xor sbb mov dec leave test leave imul lods dec out into dec lods imul jmp or pop es jmp ss mov or add xor inc push xchg ficoml mov xchg xchg shll mov subl mov int3 scas or dec jmp push lods sub jb adc int push mov aaa fs sbb xchg push into pop xchg into sbb sbb scas fsubrl inc not hlt adc gs sbb mov imul xor jns push dec fs jb mov sub xor sbb enter leave leave dec out or int mov enter mov arpl dec mov mov push xchg movsl in cmp add outsl dec lret or mov enter or cs int3 xchg push sub mov imul outsb cs imul sub inc or ljmp insb dec jmp lods sub lea test movsl insb cmpsl push sub sub and push insl dec cmpsb dec sub outsb scas test pop push das and sub out or jmp cmpsb mov lret or das or int insb imul out scas dec mov dec (bad) out sub dec insl sub dec stos lods mov gs or scas sub dec or dec imul mov int or dec in into out in test or lret lods insl lea dec cs sub test test sub dec dec sub dec int3 insb dec das dec daa sub (bad) leave mov dec or push imul jmp es dec lds scas or dec mov out or enter dec jmp scas or lods dec dec push dec push dec mov cs sub lea or mov or scas or dec iret dec (bad) sub lret inc or mov dec sub lea or mov mov int3 sub lods movb es or dec or sub test stos dec imul leave stos iret dec cmpsl or enter dec in or or imul mov out mov dec dec outsb mov int inc inc dec or leave lea imul jmp dec scas jmp push push sub es add or into in leave mov mov call lea dec sub enter and scas int3 in dec push out test stos pop push dec sub enter add (bad) int mov lret mov sub enter or lret test sub sub sub mov jmp insb jmp sub push dec into jmp push dec sub insb out inc out in lods int3 dec sub push test sub call sub mov dec mov das dec ljmp imul out sub scas scas es test inc insb mov dec or dec test enter (bad) mov test xchg insb dec call insb mov test out push sub dec ljmp mov scas or cs or insl push push or sub call sub mov call outsb in push insl es in das or out dec int cmovne out dec dec inc mov sub imul cs imul insb outsb insl enter pop push or es mov sub dec cs int push cmpsb or mov sub lret outsl sub dec scas enter outsb es mov ljmp xchg mov stos or stos sub sub outsb and sub ficom lcall rcrl cwtl lret (bad) pop sbb rcrl pop pop push dec adc int cmpsb sub dec imul sub inc or ljmp insb dec jmp lods sub lea test movsl insb cmpsl push sub sub and movsb push es push aaa push push xorl addl push adc adc test adc push mov test lds xor push es xor mov mov (bad) (bad) sbb pop pushf cltd push pop adc sbb pop pop xchg sahf adc ficoml cltd xchg cltd fwait dec adc fistpl push adc lea sbb xchg push xchg cwtl pop sbb xchg sbb push (bad) push dec push sbb sbb fcomps dec dec test leave mov dec or push imul jmp es dec lds scas or dec mov out or enter dec jmp xchg and push push test daa inc adc fs (bad) xchg add test aam add xchg push arpl cmpsl arpl mov (bad) push mov movsl adc inc ret xchg inc push add test and xor xchg stos imul sub cltd pop mov cltd mov adcl arpl xor cmp xchg popa or add pop jmp push cltd int add mov data16 mov cmpsb cmpsb cmc inc inc and rcrl arpl xchg ret arpl rcrl rol stos cmp cmp (bad) int movsl lods enter lds (bad) int3 out pop insb pushf insb pop mov (bad) push call in mov mov push push out (bad) lret push push lcall faddl repnz mov mov xchg cwtl test jb fsubl ret stos and cmp imul rcrl popf gs popf cmp xor inc leave cltd frstor mov out fs outsb lret mov inc push cmp push outsl popa push jo and lret popf pop iret dec ljmp imul out sub scas scas es test inc insb mov dec or dec test enter (bad) mov test xchg insb dec call dec inc inc popa and stos and mov stos sbb test and mov lods mov cmpsb mov xor and test mov test sub ss stos cwtl xor dec lret pop sbb adc fwait push push mov int pushf sahf lea lcall pop push pop pushf rclb xchg pushf aam (bad) xchg xchg mov adc dec dec es mov sub pop xor data16 push push xchg movsb xor adc add inc ss xchg adc xlat fs jbe popa mov mov stos xchg and bound adc aad xchg mov and lods fmulp (bad) loop test pusha mov mov xchg push ss repz mov cmp xchg mov ret xchg imul mov pop mov mov fwait inc sub mov test imul push jae gs push push xor dec inc cmp sbb lods and fcoml xchg adc inc outsb dec push xchg inc push fs arpl mov pop push daa jbe ss xor adc push lds cmpsb gs inc in lcall mov lods mov dec and mov das outsb push sub xor xor aaa push jno inc xor xor adc nop into adc in scas enter enter or jmp xchg push (bad) cmpsb adc adc sbbl mov sbb hlt mov mov test jbe push inc sbb mov sub insl imul imul inc mov push les pop je hlt inc push lret or inc inc mov in add dec mov inc dec addr16 push addr16 ja xor popf pop mov int push inc pop inc enter stos mov inc inc inc inc push adc movsl adc test rorl call or test inc xor repnz (bad) (bad) jmp lcall nop rcrb dec and mov stos leave lret int3 insb dec or add adc pop fcompl xor jae sbb cmp xchg pop push or leave lret cmpsb sub dec push dec xor cmp mov lcall mov and mov aad mov les sbb fistpl xor pop (bad) (bad) clc mov push lret shlb xchg sbb (bad) scas (bad) (bad) incl and mov aad sub mov dec sbb mov mov push out jns jo imul cmp jg (bad) (bad) (bad) (bad) inc test daa jbe (bad) (bad) call inc push mov or ljmp and imul cld mov pop inc xor lods mov sbb xor push xor mov daa push and mov icebp sub (bad) loop outsl cld dec dec aas (bad) call sarl icebp and aas (bad) (bad) inc test xor (bad) (bad) (bad) and insl clc xchg push bound (bad) (bad) (bad) (bad) jmp fs (bad) (bad) (bad) (bad) (bad) decl test je dec cltd sbb adc push and cli inc add fstl test popf or fmuls and or (bad) lret dec or js pop push inc sub sbb stos sub push lahf loop dec mov lods test outsb inc cwtl in rcr test insb ret mov push sahf loopne aam xchg aaa jo gs dec xor dec xor inc bound cmp and xor pop mov test mov cmpsb and test sbb mov push fmuls aad sbb adc rcll popa xor stos cmpsb sbb cmpsb mov xor pushf mov test hlt pusha mov movsb nop rcr popa mov dec push jns push imul adc jb mov stos xchg inc push testl pop fisttpl mov or pushf into repnz jp push arpl dec xor push fs jb inc inc pop dec push sbb xor movsb sub and sub cmp aad and dec pop inc dec adc loope xor sbb mov dec inc push push xor jo gs adc sub loope fstpl or push aaa mov sub mov mov xor xor cwtl and sbb lods xchg mov sub mov mov mov lods sub and mov stos sbb test mov sub fwait xor test mov mov xor sbb xor sbb sbb sub sub stos mov lcall cmpsb cmp sbb mov sub xor pushf mov stos sub sub sbb mov mov pop cmpsl cmp sbb test mov cwtl and mov mov cmpsl sbb and and lods mov es cmp mov cmp mov lods cmp mov mov aaa xor mov mov and cmp xor xor mov mov mov mov cmp daa xchg mov mov mov cmp sbb stos mov sbb pushf cltd cwtl cmp sub mov and sub cmpsl mov test mov xor cmp and mov xor test daa and aaa pushf xor mov sub xor sub stos sub mov and sub cmp sbb es sbb lcall lcall lods fwait cmp sub mov cmpsb sub mov pop mov sub cmp and test xchg sub jmp int3 sub out sub push int3 imul mov test imul sub call jmp test dec push lods mov dec enter sub or pop sub dec dec push dec push into dec and lods iret dec leave or sub sub leave movl mov xchg call data16 dec mov sub out test xchg dec or dec push dec or movb mov es test int test inc (bad) push test mov or das dec int3 lret cs sub jmp or outsb sub sub mov lret cmp imul mov mov dec or rcll inc jp mov sub adcl fwait pop dec push sbb xor jb (bad) fiaddl (bad) jb insb (bad) out out into into outsb aam nop daa xchg mov mov mov cmp sbb stos mov sbb pushf cltd cwtl cmp sub mov xor dec inc dec xor push insl jo adc sbb cwtl hlt out outsb (bad) fmul jo (bad) repnz cmp and and aaa pushf xor mov sub xor sub stos sub mov and sub cmp sbb mov sub movsl insb int enter mov sbb mov mov lret push sbb lock ficom (bad) fstl pusha mov and xor leave adc xor dec xor outsl inc push arpl pop dec cmp xor aaa xor jne pop insl sub popa dec jae dec dec inc outsl dec insl jbe inc push bound xor arpl inc dec dec xor dec xchg push xchg cwtl lea daa xchg cmp mov sub imul and push pop imul jns outsl xor inc jo je jno inc inc pop ja dec addr16 jb push arpl push rcl fmull dec or (bad) adc jae xchg (bad) roll ss and jae addl inc xor imul xor test adc sub sbb lds jbe xchg push (bad) hlt xchg xchg test adc repnz mov jne aad pop xor push bound leave mov rol mov popa inc mov push pushf fst and adc adc or gs imul xor xor imul popa aaa arpl and cmp fs test in loopne mov outsb data16 out int3 loopne outsb stos out nop mov in divw je inc daa cwtl and mov mov leave leave push int3 stos leave xchg sub shrl or or xchg stos pop xchg ret mov mov movsb (bad) and jne push cmpsb push test add add inc jo inc push das das xor leave ret pop sub das push push pop push arpl xor imul cmp inc adc cmpsl sahf mov xor xor xor sub adc xchg sbb dec push and stos addl es dec dec xor and inc mov push jg hlt sub sub xchg push gs push and push adc xor adc mov nop push jno mov das call adc aaa mov fs nop lods popf mov stc adc mov movsb pop xor ret mov bound inc sbb lcall lcall (bad) sbb mov (bad) in xchg mov scas lea and pushf movsl xor sub mov xor sub enter push and or enter dec into push push push cmp je adc adc push jp repnz lret insb rolb cmpsb (bad) push int3 enter lock pushf fs data16 fcmove push push call mov push push sahf push aam rcrl shll xchg push push cmc add test add arpl push (bad) mulb inc push and (bad) jmp jb inc pop xor dec inc inc push push pop inc dec push inc push sbb xchg rcll fmull jae aaa push adc lds fsub xchg ret fidivl mov out mov shlb fs scas ficom adc mov mov mov mov sbb mov cmp movsl mov pop (bad) and sarb jecxz mov sbb (bad) pop mov sbbl lret (bad) mov sbb sub and lods cmp cmp sbb mov mov out scas outsl or into test sbb imul mov adc mov push mov and jno push dec fmul pop sub rcrb pop or push pop xor popa mov arpl adc stos bound stos shll stos mov push xor xor jae sub adc sahf sbb pushf ficom push push movsl add mov bound mov roll mov sub mov push cmp js xor push cltd or (bad) xor dec ss push push inc and lcall push push in dec insb test inc mov and or xchg stos dec inc mov leave adc xchg sahf adc push xor test fxch or (bad) and adc sub push shl pop mov sub or leave or push jb xor pop inc dec and aam nop loopne (bad) mov mov test pop stos xchg lcall scas test lcall mov add call addr16 and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc xchg adcl or inc push cld dec push lahf push cmp pop inc insb cmp mov jg clc nop pop call and xchg push pop push push push jg lcall adc sub inc xchg dec inc or xor sbb repnz xchg xchg (bad) (bad) (bad) call mov loop push mov mov fisubl xchg adc xchg aam adc mov inc test adc mov and les aaa jg dec cs test arpl enter psllw in push inc jo test decl and scas call jmp push addr16 and lahf decl icebp xor call or mov test icebp and or mov mov mov mov and mov mov cltd push add popw je movsb adc nop xchg loop addr16 inc inc addr16 push inc inc dec adc nop xchg mov add sub dec inc popa inc inc insb xchg xchg inc or es or sub enter loopne inc sbb sub cmp icebp and dec mov test mov sar adc mov test clc xchg fprem nop pop in push inc jo pop inc or adc xchg inc and (bad) (bad) out adc movlps (bad) (bad) incb adc pop cwtl popf icebp and and sub adc (bad) inc xchg addr16 enter (bad) and clc nop push and das loop ja mov dec mov jb and call pop ds (bad) xor jmp bound in jbe insl (bad) mov insl cld int3 dec cmpsb in lods sub sub inc insl (bad) (bad) (bad) (bad) (bad) cld dec push and xchg or xchg jmp call inc insl aaa popa adc adc xchg and fsub popf add push int3 inc imul insb scas out les aaa imul insl addr16 adc mov push in aam movsb mov je xchg ja nop mov outsb into mov inc pop aaa daa xchg sub inc (bad) repz and and jmp icebp sub dec loopne insb into es inc sub les inc xor push push and cmp in jns jbe push jl cs mov adc pushf mov test mov jno adc dec adc mov sub mov dec rcrl (bad) es cmp mov cs inc loop and pop dec inc bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc lcall mov mov jp pop sbb lret jb mov inc imul pop push push inc addr16 dec push rclb rcrl xchg xchg dec adc scas dec inc push jb inc inc xor push push push inc js addr16 push inc inc jno push jae dec push push push inc ja pop dec outsl push inc push push push push inc fs inc push sbb cmpsl test sub mov cwtl rcll (bad) rcl sbb sbb lock lods mov mov pushf aam mov aam fs into jo mov mov cmpsb xchg (bad) out xchg xchg mov cwtl test lret out aam xchg out lock lods mov pusha enter push test pusha enter lods lcall pop mov movsb lcall rorb cwtl cmpsb pusha call cwtl cmpsb pusha pusha mov test lods mov lods mov pushf into (bad) mov fsubs mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) into (bad) mov (bad) mov (bad) mov (bad) (bad) mov (bad) (bad) (bad) mov (bad) (bad) mov test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jp incb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) insb into xchg (bad) (bad) (bad) mov (bad) nop xchg (bad) ret ljmp test (bad) mov (bad) mov test into test (bad) (bad) (bad) (bad) lock xchg (bad) (bad) (bad) mov (bad) mov out (bad) mov out (bad) (bad) (bad) (bad) test (bad) mov (bad) mov (bad) mov movb (bad) lret sahf (bad) mov fadds (bad) test (bad) into (bad) into (bad) mov ret aam nop xchg (bad) (bad) out test (bad) nop (bad) (bad) (bad) out test mov hlt (bad) xchg (bad) xchg (bad) test out (bad) ljmp test (bad) test (bad) (bad) mov (bad) (bad) les mov hlt (bad) mov loopne nop (bad) (bad) enter (bad) mov (bad) into (bad) (bad) (bad) (bad) (bad) (bad) cmpsb into test (bad) nop mov mov (bad) fiadd mov (bad) (bad) lods mov mov pusha (bad) mov test mov (bad) mov test (bad) nop stos (bad) les xchg (bad) (bad) (bad) (bad) (bad) (bad) mov test mov stos (bad) lods into test (bad) nop xchg (bad) (bad) out test (bad) mov (bad) into (bad) (bad) (bad) (bad) (bad) (bad) lcall (bad) lcall (bad) lcall (bad) lcall (bad) stos into (bad) mov (bad) mov (bad) nop mov repnz mov mov test (bad) mov mov test (bad) mov xchg (bad) mov rolb (bad) test (bad) test (bad) test (bad) nop mov into (bad) mov fadds mov stos (bad) (bad) into (bad) (bad) (bad) (bad) (bad) (bad) cmpsb into (bad) test (bad) mov (bad) mov (bad) mov test (bad) mov out (bad) nop (bad) (bad) (bad) into test (bad) mov (bad) ret pusha (bad) (bad) (bad) (bad) mov nop (bad) (bad) lret repnz mov (bad) mov test (bad) nop mov fiadd mov xchg (bad) lcall (bad) (bad) (bad) (bad) (bad) sbb and stos and cmp cmpsl mov and xor movsl and test sub test sub test and mov and mov mov test add jae movsb andl sub cmp es test test mov and and xor rolb push inc dec dec push dec push (bad) nop into (bad) mov fsubs pop (bad) (bad) (bad) lcall add mov adc mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add inc add add add add add add add add add add add add or adc or fcom popf adc mov test popf add add add popf add add (bad) fld popf or add add popf add add add popf add lods aad add add popf adc mov movsl add popf adc mov int in add add add add popf add add add popf add add add popf add add add popf or add add popf adc lods fcom add add popf add add fnstenv lods add popf add add add popf or aad add add popf adc mov lds popf add add add popf add add add popf add add add popf add add fcomp lods add popf add add add popf add add fxch lods add popf add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add or add jmp xor jmp and dec lods shrl lods shrl gs dec adc dec adc sub gs push or sub mov dec pop add sbb or adc adc xor dec push inc or adc cmp inc inc int cmp pop adc lea adc inc pop dec or pop sbb cmp roll in adc sbb inc or test rcl or sub adc fs cmp dec adc cmp lods sub inc dec sub or push inc xor fstl adc loope pop adc rcll fadd imul inc loope xor call xor mov xor or (bad) xor xor (bad) xor inc dec sbb and dec push pop sbb pop sbb pop xor add add add add add add add add add add add add add add add add add add or adc add adc add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add idiv add add add add add add add push fisttpll roll or add popf or add inc or add popf or add popf and add add inc add add add popf add add add add roll add inc or add and mov roll and jmp (bad) fisttpll roll or add add roll add add lods add add add inc add add popf or add add loope mov add mov gs add add add inc or add inc or add add popf add add add and add or adc or add popf or (bad) fisttpll roll add add add inc add add add inc add add add inc or add inc or add inc or add inc or add add adc mov pop add lods add add add inc add add add inc add add popf add add add add lea add fisttpll fldl popf or add add add flds inc or add fisttpll mov and adc add add add add sbb sti pop jbe (bad) in idiv cs lods movsl jne scas mov jmp lea add dec test fnstenv push scas mov arpl push push pop pop popa sbb lods cs jp sarb lods aad loopne or sub nop jne or push ljmp push xlat pop js xchg aad movsl adc and xor cmp inc lcall add pop jl test push xchg adc jbe lock xor mov pop sbb lahf scas rcrl adc insl int3 out pop mov jne mov sbb stos icebp or scas mov mov sub jmp mov scas mov scas mov mov pushf push jo inc (bad) mov addb xor push add aad jecxz sbb lea ret call push test (bad) pop jne pop jne pop jne pop js enter mov pop xor popa sbb fstps xlat test pop push cs cli jmp mov (bad) adc pop xor adc pop jne pop imul scas mov aas pop jne pop jne pop jne pop jne xchg cmp pop jne pop jne pop jne pop jne pop jne pop jne adc push pop jne pop jne pop jne pop jne sbb add jbe pop xor pop jne adc pop inc int mov scas mov scas hlt call jmp test pop mov pop jne pop pusha sub or scas mov mov scas mov mov mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov ret pop ret push xor or pop sub inc mov mov push mov les or mov lret mov and fwait add push pushf pop ret add or or loopne sbb lods insb and sbbl adc push xorl push and and pop push add and jns adc aam fadds add push inc jno rcl push or and inc shrb ret rorl mov mov adc pop inc and xor xchg lods or ret lret xor push pop or push shr add mov add add or aam mov jbe insl pop xor lods push sub pop cmpb aas lmsw ret sar mov push stos add ljmp or sbb push or xor roll add pusha and pop lods push cwtl xor dec je pusha shr insb inc loopne loopne nop dec subb mov push mov inc addl jg cwtl push pop add popa cmp mov push andb fs pop add xchg add fild xor or and sub imul and stc mov adc orl cmp (bad) or xor push gs cmp push (bad) nop xor inc bound mov mov frstor push mov aaa jbe mov int3 loop scas inc sub (bad) int3 fisubl cmpsl add pop fwait lds mov jp sub enter adc xchg jo and push je dec sbb jne xor gs mov adcl push add or xorl outsb (bad) sbb fcomps mov sbbl int xor xchg sarl sub sbb pop ds sub stc or push popa push xchg loopne cmp js push and dec push out and push sar sub sub add fistl insb cmp lret xor add push xchg addr16 add daa or or add inc jns cmp enter cmp add cmp es pushf add shlb int cmc xor fstps mov push rclb sbb ss adc xor orl cmp push inc sbb ss pusha add adc mov sub cmp bound mov push add loopne in call sbb mov sbb add bound loope or mov or add in cmc mov fidiv imul add rcr pushf js sbb out adc rcr or rcr mov cmp leave xchg xor popa sbb mov ficomp mov xor js fldt and xchg mov jno or pop cmpsb sti push adc int3 in jno (bad) insl roll add rcl jb mov xchg pop (bad) cmp lret mov fidivl and xor cmp aad xchg add xchg inc mov inc loop jl (bad) (bad) movsb jl mov lret insb mov mov jge cmp cmp cmp mov cmp sbb mov call xchg ret movsb mov sbb xlat inc roll cmp testb adc sbb jae adc sbb or mov lds pushf pop jae inc sbb aam les sahf and icebp jo lret add jo lret lock mov mov rcll pusha rcl aam inc aam mov add outsb push test leave xchg push cmp loop pop xchg xor pop xchg aam xchg jo mov pop push mov xor rol mov sbb loop xchg mov icebp mov jae fldt jno cli add shll (bad) add shl xlat sbb shlb or sbb jno push cmp push rcr loop sub adc inc aam xchg cmp nop shl (bad) sbb lock mov cmp mov aam jne xchg adc movb sub xchg inc rcl xorl lret enter push push aad xchg inc mov xor notb xchg bound xor aam addr16 stc shll mov test in out cmp inc mov repz dec pop sub add ret insl inc daa je ret push daa je pushf inc mov repz adc faddl imul xchg xchg xchg xchg jno jnp jnp cmc pushf loope jno mov stos xchg stc stc repnz cltd and test cwtl jne fsubl enter xchg sahf add xchg lods jb and bound pop clc sbb inc test and in cmp gs shrl push xchg jmp mov xchg push popf pop jle mov lods mov divl or popf xchg adc mov sbb adc cmpsl inc test jmp dec adc sub sub loop sahf push aaa sub loope push mov mov repnz and xchg shlb mov mov mov mov xor xlat mov mov out addr16 mov mov ljmp pop push ret xlat mov (bad) and mov mov (bad) aad and mov and and xlat mov mov aad daa mov xchg and fisttpl pop (bad) sub and fstpt push xchg xchg cmp xor xchg or adc fcoml repnz mov xchg xchg in add and inc in sub xor mov (bad) pop (bad) cltd (bad) out sbb sbb daa (bad) xchg add es in aaa (bad) fwait or mov inc xchg popa push js ret mov js jmp inc lods cmpsl dec mov cmp (bad) xor loopne xor or (bad) xchg cmp jbe jns shlb inc xchg data16 or sub xchg jecxz cld lods and aaa inc cltd dec and add jbe mov rolb in test rclb pop repnz adc mov sbb xchg and pop pusha xor inc movl (bad) test pushf inc push popa fldenv inc mov inc loopne rolb and mov xchg xor cmp cwtl incb mov jp adc imul xchg add arpl lock arpl arpl pushf shll test leave push push push arpl in arpl test fsubl or mov mov push popa add popa repnz daa or push inc mov cmc pop sar xchg repnz pop (bad) jno test mov imul and addr16 mov push cmp mov dec push gs sahf arpl and lods mov and mov inc mov lods in add or xor mov stos push jae std movsb push jae lods leave leave (bad) sti leave push je (bad) cmp cmp lock mov inc xchg movsb cld inc dec inc and lret mov ljmp mov arpl push (bad) bound test andl jne imul test jecxz int mov js movsl sub add repnz aad out stos xor js mov test mov out stos xor and pop push dec push aad pop cmp push xor rorl popa imul movsb add xor gs and js adc sbb inc int3 sub fwait lret or mov fs mov add pop mov cmp mull loope adc adc adc jl mov js repnz icebp sub dec sub andl fs adc cltd push xchg jge mov mov mov cwtl mov popa cwtl jl pop pop arpl popa pushf mov push adc xor int mov push jo int mov popa repnz (bad) adc xor xchg subb mov cli aad adc xor mov push adc sub popa nop data16 sbb lret xchg add cs cwtl add adc cltd sarl add movsb cwtl mov pop push add scas sbb adc scas pop mov sub cmp lea mov push or xchg pop adc arpl (bad) ja test or outsl or sbb loope jne (bad) das lds cmpsb movsl mov mov insl pusha cmp xchg mov cmp es adcb daa test lret int3 fs inc into shr mov lods addr16 mov mov mov test fnsave and movsl xchg movsb push ror jne push push cs adc pop loop pop and push sub jbe insb pop loope and pusha sub je inc sbb cs mov jnp and ret pop loope jo rcll or mov andl mov lcall int icebp cwtl pop and and cwtl xor mov dec and cwtl loopne cmp push out cmc pop add jb daa ja jns andb scas outsb mov sub dec add test jmp add pop mov mov ret inc mov ret out mov fmuls cwtl (bad) cli pop add mov shrb sub scas push inc cmc aad lock addl xlat inc mov sub mov getsec jno or jno cmp mov (bad) vpunpcklbw lret cwtl lods xchg rclb inc jle mov sub pop fcmovnu dec and or cmpsl test adc cmp adc dec xchg dec add mov shrl mov pop aas jae mov adc test dec (bad) fimul nop ret sub push (bad) cmp mov adc pop sub push movsb cmp add addr16 mov jg push cmp sbb dec lret push sub stc add xor jmp (bad) ret xchg add jae adc inc xor xor xor xorl push rorl inc in adc xor and add xor push push cmp push push mov mov adc insb jae andl lods pop pop add fs and adc adc and jp mov mov jo xor frstor push xor xor xchg xor xor sti out rclb and jl add add std mov or int add add in add std mov add or movsb or xchg pop push roll sub inc movsb inc xorl mov cmp loopne xchg fs push cmp push cwtl adc push xor pop daa fcmovnb adc or mov xor sbb jecxz mov rcl xor pop test sbbl push shlb lds addb cmp xchg mov andl rclb inc mov enter inc lock cld inc adc dec (bad) pop ret xor xchg inc imul imul push fdivrs sub xor daa dec test cmp lds inc cmpsb jae adc ja jmp mov sbb lock sti shlb cmp adc dec (bad) pop ret xor add push and adc pop adc sti divl cmp lds rclb enter lods inc fs mov pop xor xchg jbe enter inc sti shlb clc mov xor ss test pop lock adc mov sub cmp mov push int in dec enter inc cmpsb jae andl divl lds push dec enter inc icebp mov enter inc sti shlb clc mov xchg jne xorl add xor cmp xchg xor mov addl xor addr16 xchg (bad) mov inc jb pop push fdivrl adc xor add ret inc dec testl push faddl or rcrl rcl repnz addl dec xor adc xor sbb inc stc stos sbb inc inc adc rcrl mov or dec and sbb mov or xor addl push push (bad) mov or mov push pop nop rorl bound inc xchg cmp add add mov mov add ja cmp insb inc jb dec pop and inc xchg loope jecxz hlt (bad) fnclex xlat jb fneni(8087 ficoml jnp xor inc aam push loopne pop lods jmp push adc or and push notb aam addr16 pop imul jmp xor fistl push (bad) int adc pop push add jmp aaa cld js sbb push jb sbb loopne movsb adc insl jmp repnz adc or out imul cld js sbb insl leave push (bad) xor fcmovne roll pop rcll mov add jge mov mov xchg mov ret test ret dec pop xchg movl xor adc mov daa or pop sbb imul imul lcall ja ret xchg rcrl and mov pop jge mov mov scas adc jo jo xchg aaa xchg jbe inc dec and mov add jge mov inc scas sbb cld push call adc push xor xchg xlat and and rcl push sbb cmp mov push hlt mov jnp xor out shrl addr16 out pusha repz stos (bad) xor xor repz lret (bad) xor xor movsl in inc call cmp in aam sub xchg sti and fnsave inc sbb inc aaa xor mov lret inc cmp movb out (bad) xor adc mov xlat cmp add xor add fdivs fdivs and and cmpsb (bad) jb inc fadds movsl cmpsb mov xchg fs lds lds push inc push inc fadds pop loop adc imul stos movsb pop repnz pop push or out adc adc xor ret (bad) adc ficoml jae adc adc mov sbb loop sub adc sbb xor jbe push (bad) lret adc inc es dec dec lret sbb adc mov add inc inc icebp daa icebp loope loop add cmp adc adc sbb xor mov xchg jnp fstps dec adc mov hlt jno pop dec sbb adc daa or dec sbb sub dec sbb pop imull mov addr16 dec sbb push loope jno or fwait sbb or sti fwait mov xchg adc and mov jne add add push dec cmp cmp call cltd lds xor stos hlt cmp mov adc sbb ss jmp or aam hlt cmp mov adc and ss sbb aam hlt cmp mov adc sbb mov stc sbb aam hlt cmp mov adc pop xchg lret ss sbb aam hlt cmp mov adc sub xchg push adc sbb loop xchg je sbb in jns sbb ret add call pusha lds xchg sbb pop inc and ret and nop cmc inc nop aam and xchg roll jecxz nop in xchg cld mov fs jns cwtl (bad) xor nop inc (bad) repz in and nop cmc inc xchg (bad) push jbe inc and lea push (bad) repz sub adc push and ret add ret mov xchg push and xor and mov and add stos repz sub cwtl cmp push sti (bad) shll fcmovbe xchg and cmp mov adc aaa dec fmull or aaa cmpl mov jmp and sbb xchg mov push test inc lret jns jno nop imul push xor rcrl rcll push pop adc push aaa ss mov test (bad) (bad) jno jno mov scas jno pop aaa cmp stos (bad) xchg push adcl out cmpl push jge repnz mov push push push xchg jno or in cmp fsubrl dec sahf jb lods test movsb adc dec or xchg and test dec mov test decb ret inc inc das xchg xor push pop test and push cmp jns push and faddl fadds push xchg mov call stos sub movsb bound cmpsl jb xchg push mov add fild inc in or fsts mov stc loopne in jae into mov (bad) (bad) mov lcall out fcompl orl testl mov movsb loop fistpl mov mov mov adc push mov hlt bound scas push mov scas inc fwait cs movsl repnz aad or mov xlat mov ljmp push movsb shl pop add hlt in jae cs mov test aas pop insb loopne clc xor xor lcall pop xchg repz movsb mov or cmpsb movsb movaps and mov jnp (bad) (bad) icebp push pop push or loop pop xor push push xchg movsb adc rcll mov lock jae add cvtpi2ps sub lock jae cmp push aaa arpl push andb movsb daa sub addr16 adc js fildl imul mov js cmp sti jns stc mov jns push cmpsl (bad) or mov fstl sub or pop pop test jge loopne add out adc sarl xor jno popa clc andb push mov out fs bound pop pop push aas push movsl cmpl lock jae (bad) cmp imul xor sahf mov ret mov mov mov loop daa aas push js xor push pop fbstp lcall and mov adc stos dec pop movsb mov sgdtl mov call and movsb push pop mov mov or cmp rcrl dec rcrl fs xor mov push jo push push push aaa push aaa cmp sbb add push xor (bad) call mov pop ret movsl cmp push and add push mov repnz pusha pusha popf mov andb mov cmc fsub push pusha popf mov lods or push xchg loopne inc mov ljmp push out and icebp mov orl pusha popf mov mov push push mov loopne inc push lods and sub mov adc sub add mov notl inc and (bad) mov cld aam ljmp adc (bad) jl rol jecxz mov jecxz les sti xor lds sti xor (bad) arpl inc mov hlt xchg push roll dec and mov push (bad) enter in add push push inc jmp sub jecxz cmc adc xorl sub (bad) sti xchg dec xor jecxz and ficompl mov push lret pop mov enter roll push mov add pop (bad) repnz in inc mov and ja std inc mov pop (bad) mov aad inc arpl (bad) mov mov popf stos repz adc rcll pop mov xchg fxch jmp sti sti sti cmc lds cld fcoml and stc lods pop sbb (bad) es (bad) pop repnz dec adc adc mov ret adc push repz and adc ss pushf mov cmpsl push mov loopne dec adc es push sbb jb adc lret (bad) aam gs sbb loopne inc repnz out xor mov push notb dec jge inc adc add cmp xchg push cwtl sub insl xor repz push or add cmp xor inc jae adc inc push inc pop fmull incb (bad) add push mov dec xlat test hlt mov out mov push (bad) imul and and dec xlat test inc ss ljmp inc and xchg pop inc inc data16 repz imul pop (bad) sub push push mov pop lock inc dec and jecxz xchg ret arpl es es decl int in ret out pop ret out (bad) mov enter into sbb iret cmp mov pop iret inc ret pop push adcl xchg inc scas inc pop inc xchg ds out cwtl enter push dec pop mov mov les push rcrl ss adc roll push dec xchg pop xchg fcmovbe mov dec mov ret mov inc sub pushl jge nop inc out les and mov jecxz dec cmp iret inc es ret mov inc sub hlt pop mov nop inc out cmp les or pop jecxz jbe mov fildl push push addr16 inc mov pop lock inc sub push cmp es xor jle out mov xchg inc inc inc mov divb and inc (bad) mov adc dec inc mov mov pop add and sub xchg mov inc jbe add xchg mov rclb push push mov sub dec inc jne es or pop inc scas sub divb (bad) ss divb mov mov mov daa mov push sub test roll js notb mov and xor sub inc inc into sub push or add add rcll xchg jns xchg rcl inc nopl push mov pop cmp push jecxz icebp inc adc jne xchg jns push push xchg fwait movsl popa xchg loopne or push shlb xor sbb inc repnz out sbb push mov imulb mov js icebp inc pop js jno addb cmp mov ret pop and xor pop xchg add movsl stos aam pop mov loop and pop mov mov inc (bad) popf xor and mov popf mov dec cmp mov pop pushf xor push test test mov movsb add push ret xchg push imul mov add push (bad) mov mov xchg ss push cmpb clc int3 js (bad) (bad) in (bad) fnstenv cmp in loop sub mov popf jecxz dec cmp mov mov dec out inc push push mov enter cwtl mov cltd shlb and mov and xchg mov (bad) int test leave sub sub test imul sub dec cwtl mov and inc dec roll mov inc daa rclb mov pop jb xor mov push mov lea mov jb inc movsl mov xchg fistl push fcompl jo mov sub loop xchg in idivb push faddl sub sub or sub pop stos inc xchg push or xchg or sbb sbb lret aad xchg push mov jns loope mov test mov movsb inc test and test mov scas adc and xchg fistl shll dec xchg rcll ret enter lea inc out repnz lds sbbl and mov mov add sbb sbb xchg fistl and push sub pop or and popf inc loope cli and fadds mov movsb imul add aaa and cwtl and xor or and push jnp xorl and test mov or daa pop mov test adc dec and lahf imulb push mov sub popa sub enter mov push std adc and test movsl inc loope add mov ret shrb sbb and lret mov test daa std mov jl adc push enter sub xor add into push test sbb inc pushf arpl or jo push mov or icebp lcall hlt add inc or bound inc sub inc (bad) aaa push sub dec mov push les cmp inc adc adc jb (bad) pop mov ss sub fstl mov adc adc mov push adc sub pop lret pop sti push jbe decb arpl js push loopne and mov (bad) xor test ret nop push mov sbb jb mov mov sub mov (bad) je push icebp inc test jb pop ret bound loopne pop sub mov inc fstps popa lret mov gs pop inc and push push and xorl xchg sub in push jb (bad) push loopne clc sub or pop mov cwtl mov sbb cwtl scas adc inc int3 sbb mov pop enter pushf addl mov cs pop xchg add adc and adc movsb adc push in mov jb sbb in dec and mov sub push push sbb xchg mov jb mov push or aas fwait mov xchg fisubr inc add (bad) imul mov push stc orl mov jo xchg xor jl pop add xor or insb xchg or adc adc pop aam test mov inc xor sbb pop cmp pusha shlb push sub rcrl xor or xchg add lods sarl mov add scas mov xor mov stos pusha sub dec xorl xacquire sbb (bad) xor push mov xor lods shrb gs xorl movsl ret mov push mov movsb and icebp mov adc xchg and add jnp jno mov ret push mov stos push pop jecxz gs lds ret lods in xorl mov xchg sub (bad) xor mov xor test adc mov mov and lret mov mov mov rclb mov mov mov mov mov mov mov fs xlat xchg mov inc (bad) push popa cli xlat xchg mov int lds es mov or xchg adc pop out push mov xchg or push popa mov inc call out sbb (bad) cmc or ds xchg subl cs out icebp mov cmpsl or movsl js arpl mov scas (bad) adc inc cmpsl or add mov ds fsts adc inc cmpsl push pop cmp mov ds fsts adc xor arpl or mov fsts adc xor arpl mov fsts adc xor arpl ds fsts adc xor xchg (bad) or push mov or lods icebp out add xchg (bad) or adc adc rcl aaa lea mov push xchg into mov mov xchg sub push xchg lds lret add insl mov and and inc (bad) sahf jb mov ja movsb and mov push movsb push dec movsb inc mov and mov and mov xor test mov dec cmpsl imul popa fldenv jecxz adc shrl xor addr16 or movsl popa dec aam xchg mov mov mov cmpsb mov inc test dec data16 add test xlat movsl jle mov inc inc and js loopne loop sbb notb gs and lds jno andl adc mov mov shlb and mov xchg xorl (bad) lret ror nop or and ficompl mov mov stos or loop sti mov ss loope push data16 inc and push lds les push pop sbb ret inc and jp sti mov enter inc movb popa sahf popa stos pop xlat shrb pop adc xchg xchg xchg xchg jecxz push fldt stos test fcoms and and cmc push mov push pop ss adc xchg (bad) push and mov shl shll test movsl shll (bad) and insb out les ret mov inc andl dec mov movsl xor add in pop or data16 mov push fdivl mov popa mov adc push adc les xor gs ss mov mov mov pop or dec daa (bad) xor rol push je ds dec sub ds xchg push push mov ficoml xchg test (bad) push es ror sbb popa mov shll and cmpsb imul pop jns aad mov fisubl adc data16 popa imul icebp popa js shll jl pop fs adc sub xor and pop lods sbb ja mov lret or jns xor (bad) int rcrb xor add sti lea mov jbe rcll and lods pop jns or or add inc xor xchg movsl shlb sbb fldenv adc imul loope xchg xchg inc movsl push xchg andl xchg xor pop jb add xchg test ret adc out icebp push push and icebp in sbb push mov jmp jno and in xor aaa add xchg les or (bad) xor sti fsubl sarb sti (bad) gs and mov imul daa popa popa test mov mov inc fisttpl sti fisubrl test dec inc stos stos mov negl fwait push inc insl clc mov clc cmp jge inc xor cmp cmpsl and push adc test mov sbb add xchg (bad) xchg add jno add xchg xchg push or mov daa rcll dec (bad) jno push ja mov mov mov ljmp je add in push jne push ljmp or jae xor push and add cmp cmp inc jb pop add xchg xchg fwait pusha dec jmp aam add ljmp xchg ret or mov adc jbe mov mov in xchg pop pop aam fcomi rcrb shrl xchg nop mov jnp add jmp add in jmp sbb aad xchg frstor mov and add ljmp cmp or mov adc mov xchg fstl or mov adc sbb movsb js add mov sub hlt pop add push cmp cmp pop rcl cmp jb xchg pushf adc sub mov cli popa enter or sbb ja xchg mov inc mov cmp lock and fnstsw sarl add nop mov lret push xchg mov push dec mov lea xchg rcr push loopne push nop add xor sbb pop icebp xchg push push xlat ds cmpsl xor push icebp xchg popa xchg push xlat xor cmpsl cmp xchg push xchg mov mov lds rorl pop (bad) jno mov add movsl push xor stos adcl xchg test and (bad) mov fadds xchg jmp push xor popf mov jp jl ret lcall mov mov cwtl cs jbe xchg mov lcall add jp adc (bad) fwait js xchg roll nop mov mov inc pop daa ret add sbb or adcl xchg add sbb fld repz (bad) shl xchg sbb inc enter ret roll pop mov cmpsl rcl jmp jecxz data16 aam push nop imul pop int addb test sbb pop bound push mov stc pusha (bad) icebp test mov stos cmp sub jo adc (bad) stos adc sub inc xorl adc cli xchg adc (bad) movsl pop xchg dec dec negb movsl jne shl xchg mov push out fstpl cmpsb out pop aad movsb repnz xor test dec pusha faddl in jp lock pop sbb push adc stc inc cwtl xor je ret and push dec jmp popa mov and hlt lds data16 repnz add mov xor jae adc sbb adc daa mov add and hlt jbe pop mov xorl and push xchg add sbb or jbe sub cltd imul test and icebp xchg pop ja cltd sub xchg mov nop addb popa pop fisubl and hlt int3 jne (bad) hlt clc jae orb nop mov xor es jb xchg add adc jbe nop mov xchg pop sbb inc mov push es pop cmp pop sub addb push sti jmp mov add (bad) (bad) ja and cltd imul sbbl adc xchg xchg and popa loope sbb fadd xor mov pop sbb orb sub sub out xchg leave xchg push fdivrs out jmp inc repnz stc or fcmovu and popa push pop mov lock in add adc inc pop push out out out loopne inc mov cmp movsl push addb pop inc rcll add orb addb stc mov (bad) push cmp inc adc jne pop sbb clc jae and (bad) jbe xorl jb (bad) adc push mov mov hlt fwait (bad) push jbe cwtl sti jnp push cmp mov (bad) adc fdivrs (bad) add dec cmp or imul rorb push mov clc push lds inc mov popa inc or add xchg mov xchg dec xchg sbb inc adc inc data16 dec mov inc inc dec imul aam popa inc ja pop rorl dec (bad) (bad) repnz add cli xchg stc icebp inc xchg test hlt inc mov hlt inc divb xchg add hlt sbb lds ret negb and and notl popa push add stc xchg xchg sbb cmpsl push xchg sbb icebp cmpsb xor or dec add push xor repnz or hlt or inc adc stos (bad) sti ja mov xchg imul dec mov imul adc lds xchg mov sbb adc loope xchg adc push dec add mov push std mov inc dec ss sbb repz lds test jno movsl int3 and repz cli jae xor add push lds add inc test jno inc mov mov and inc dec add hlt and inc shlb dec (bad) inc and stos dec xchg pop daa roll xor shrl xchg mov js test loope daa add and test add cmpsl roll pop add xchg xor cmp xchg icebp inc dec sub inc negb and (bad) cli mov xchg hlt or add cmpsb imul inc shrl aaa inc or cmc test add xchg xor or sub add cmpsb imul inc shrl aaa inc or cmc test add xchg xor cmp or sub add addl loope and test add mov dec mov pop daa roll mov aam pop xor xor repnz cmpsb imul inc shrl imul push adc cmp test loope and and mov test loope or xchg inc adc js inc dec sbb mov cmc fptan inc inc pop push out mov ja jae stc ja imul and cmc movsl mov adc sbb jae stc xchg xor sbb dec ja hlt (bad) (bad) xor push mov sbb xor movsl mov adc inc sub mov xor movsb mov adc xor stos xor push lret lods cmpsb add sbb xchg cmp or out (bad) lock out cmpsb inc ret xor jno pop test ja or ja jmp repnz mov jne push inc or hlt adc sub xchg lods adc push add sbb mov sbb fcmovb add jo in inc or hlt adc sub xchg dec test repnz lods adc push add sbb mov push sbb fsts add jo in inc or cmc adc shll dec (bad) and add cmp push inc jns xchg gs or imul (bad) pusha pop inc loopne aaa inc xor aaa inc xor test pop test fldl popa mov push ror mov xor insl pop les sarl bound rcr popa ljmp xchg inc mov ljmp pop dec cmp add subl fimul push ds (bad) bound jmp mov mov imul or mov xor adc push jbe test xor push and mov jecxz sub xor imul lret inc insl add ss add mov mov jecxz push jmp jno mov cmp dec xlat and add xor (bad) xor dec push dec es jae pop push test jl and xor loope and mov push pushf inc bound mov add push loop mov and mov dec sbb scas in mov add mov jbe aas or es daa mov mov lcall push aaa cwtl aaa imul xchg dec fcompl int3 ja pushf (bad) lock jae rol xchg dec pushf outsb sub dec pop arpl imul lds jbe js (bad) enter loop data16 icebp ss js xor jno fwait xor pop cmp popa js mov cmp dec mov dec es add sub je mov inc xor imul int mov cmp push xor or nop test movsl xor rolb rolb add cwtl (bad) testl mov pop sbb push (bad) add outsl mov call shl adc sub cmp std push stos loop call lds push xchg imul xor popa pop lods jle in add pop mov mov add mov push and dec inc sub push push mov in int3 pop xchg pop jp shrb mov testl add or push and jl adc call xchg ret sub mov nop add scas xchg leave jne mov repnz pop arpl xor xor pop mov push mov cmp adc or inc stc nop fwait pop cmp test rdmsr adc cmp or xchg in insb gs and xchg push sub es loop jge mov adc or lcall (bad) int xor and subb pop adc inc jp dec (bad) adc mov push adc jb xor jp inc adc xchg jo push adc sub inc push js rcll dec sbb bound dec repz push mov adc adc jbe fdivrs gs adc sbb inc orb xor and daa adc nop add add xchg insb jns mov xor cmp mov xchg jb les mov arpl adc adc xlat adc jae adc xchg inc adc daa adc frstor popa inc fstpt imul adc daa adc xchg jae les lcall pop adc adc adc adc adc adc xor adc dec mov adc adc xor adc dec mov adc jmp gs add push inc lds loope dec pop pop adc xor jno jbe xlat repnz test xchg sbb inc mov cltd jae jno andl mov xchg dec js adc mov out lock xchg inc shrl inc pop subl xchg push test rolb (bad) dec (bad) fsubs fisubl xor adc lock aaa xchg (bad) push adc (bad) nop popf popf test stos cmp sbb add loop daa icebp inc xchg (bad) enter and lds add and xchg inc dec pop mov test inc ret adc sbb cmpsl adc mov inc lds adc mov mov xchg inc icebp loopne fmull xlat adc mov inc mov icebp jmp (bad) xor mov jno sbb ds popa inc fsubrs jae xor mov jp inc sbb mov inc inc adc mov popa inc mov icebp out jp inc jnp xlat icebp cli (bad) in mov inc inc mov xor lods popa inc shll ss jp inc sbb ljmp ret xor mov jp inc sbb popf fadd cmpb xor leave inc dec mov addl cmpb mov mov dec ja pop mov adc adc lods pop mov shlb adc adc imul and push repz sub adc (bad) rcll adcl jge test ret cmpb gs inc adc cmp xor xrelease inc mov lahf pop adc inc adc jae xor mov add mov dec (bad) adc in js mov or gs xor sub xor jo cmc sbb adc xor jo cmc sbb inc adc ret xor jo cmc sbb daa xor lods ret xor jo cmc sbb roll push push dec pop or roll in (bad) jo xchg add rcl rcl rcl rcl shll shll jecxz mov and icebp les or mov dec (bad) pop roll jbe mov or insl cmc stos xorl mov roll jbe lock or cmp (bad) mov jae mov insl icebp les or and fmull loope rcl add lods mov pusha mov jl in xor les inc push daa and loopne mov icebp loopne insl icebp les add jecxz lods icebp stc and lret mov or mov inc add insb mov roll dec ret in or add mov frstor mov xchg and les add push (bad) icebp mov rcr and (bad) aam ret and shl mov mov adc and xchg mov push mov rorl popf adc inc jbe adc adc pop pop pop pop pop pop pop pop sbb lea sbb negl insb xchg aad rcl aam xchg aam mov mov ds mov fiaddl ds mov out sti sahf xchg std js cmp addr16 add test jbe rcl cmp data16 aad and mov divl mov xchg aam mov xchg sahf jae mov sbb mov es pushf inc ja sti es push pushf and mov mov mov pushf inc pushf inc lcall sub push and ds out rcl inc xor pushf inc fwait daa fs shrl rclb aam shll push je jle sub test jp push push les ret xchg cs cmc adc xor test xchg fwait cmp xchg mov ret mov add mov sahf inc adc ja sbb xchg pop movsl mov push cs inc pushf cmp aam into fidiv and inc xor mov rcr pop scas popf mov dec jae test (bad) dec nop lret loopne mov xor pop add push aam lret lods clc or jle rcr cmp push jecxz sub popa mov ret sub inc (bad) mov pop mov into xor fs ret sub xchg jo rcr test loope mov faddp rcr ds jo rcl mov sub mov ja push out rcl mov fistpl ja loope xchg arpl xchg sub in shlb mov sub repz ret cmp cmp cltd dec jmp or cltd cmpsl iret add and ja out jno shrl add dec nop dec jnp stos xchg dec add pop add cmp jnp lods cmp dec add push in lods mov dec and mov inc dec and cltd jnp pop add cmp test add movsb pop fdivl nop rolb add mov movsb pop mov push dec cmp inc dec cltd jnp and push xlat pop cmpsl add adc cmp daa dec add push in movsb pop cltd jnp and push pop add cmp jnp lods cmp push sbb dec ss mov adc imul scas stc xchg pusha inc dec xor inc dec loope inc xor shlb add push pusha inc pop inc inc jbe imul inc sbb jl jl retw loopne pusha fwait pusha inc adc cwtl loope test xor sahf out mulb rolb xchg stos mov into jp xchg xor stos sub inc arpl imul loopne insb cmp cs dec mov std and lods sub or push mov inc jae inc fwait lcall cld mov inc inc pop pop arpl mov sbb loopne lock pusha dec sahf in inc nop inc dec loope (bad) xor xor test xor jl jge mov ret push dec notl dec test pushf in hlt cmp cmp rolb loopne push dec (bad) popa xor push mov mov sub repz (bad) add inc push adcb rolb jns xchg add jge inc and xchg adc sub xor aad sbb sub in jne add xor inc pop and call test inc test rorb xor mov cmc pusha rolb test pop pop jle dec icebp xor inc and jle ljmp xor cltd jnp sub dec push xchg leave inc xor insl fstps jno inc push add inc dec xchg and (bad) push cli cmp inc mov add inc xchg shr add repnz lock mov xlat imull fwait mov jo popf xor jns arpl adc adc cmp inc outsb pop xchg outsb fiaddl inc popf lds shrb push inc xlat adc xor sarl push xor ds adc xor (bad) xor jl xchg mov (bad) push mov and dec fwait daa pop popf xchg mov movsl (bad) sbb js jnp arpl mov stos andl sub sbb imul xchg jl jl jl jl js mov push mov bound cmp add jae or repz aam or sbb aad dec movsb pop jne or pop jmp hlt aad dec hlt push dec or hlt aad dec aam lock mov ljmp cli xor jmp xor sub cli cmc pop mov mov mov mov pop jo dec mov dec mov and mov ss mov mov es loop mov dec inc cmpsl popa fsubrl roll sbb and imull rorb dec fwait out orl movsb loop jbe fnstenv dec mov or inc mov mov dec inc cmp dec cmp cmc sbb addr16 dec cmp std sub insb test dec sbb (bad) pusha rcll xor mov fs add adc mov mov mov mov mov push negb dec mov bound (bad) add or mov out cmp or or dec mov mov mov cmpsl les ret neg mov mov mov je or push mov aaa and mov and xor cmc xchg push mov xchg adc inc sbb xchg and cli (bad) mov (bad) mov mov mov test lods enter mov mov aaa push xor mov add inc mov in xor inc or inc in dec dec push insb daa cmp mov xor mov movsb pop and imul cmc xchg push push cltd clc jecxz aaa lods ljmp nop mov inc sbb stos or xorb and push test sbb insl or inc or cmp loopne adc mov xorb loopne rorb loopne inc and lock sbb mov mov xor insb test adc je in add mov sarb inc and xchg fdivl imul popf jae jbe jns dec pop inc lcall xor mov jb mov xorb ja movsb xorb nop jo and push jo xchg pop xor add or out push or out push or out push or out push or out push or out push add push dec aam push dec cmpsb push add inc ss xor jo (bad) jno xor jo negb pop push sbb in mov (bad) sbb in xchg lcall mov jno dec aad sbb add mov jns xor add add xor nop mov int3 call jo nop jp (bad) jo jnp jb icebp jo add add xor lock mov fwait xorb mov xor xor sbb jno mov movsb xor pop (bad) insb xchg lods mov js jo jmp popa adc pop jo jae ret es imul jae mov xchg jo jp push add shrl mov jae jo cmp lock ss cli cltd add je inc jnp jo clc inc test clc inc popf lcall mov ret lock fwait adc out out fmuls jae insb mov mov pop stos cmp mov mov jae push sub cwtl hlt add xor jp mov jp inc loopne jae dec lock imul inc jo dec adc push fidivrl lods xchg cltd ret xchg pushf int addb cmp jbe inc insb cmp or push mov and test pop jbe or or les test mov jb mov es jae jnp jo ss jo jns lods or imul jge adc std mov add and pop pop fistpl xor aad or insl movsb sub mov addr16 mov pop imul movsl mov in inc cmpb xlat sub jo mov in inc sub insl mov push cli push xchg add ret jo sarb in xor jb in pusha jo cmp imul hlt mov mov jl xorl add xor jae sbb imul jo adc and movsb push jbe pusha jecxz push add pop push and (bad) jo adc movsb pusha loopne jns shl and sbb es popf xlat mov mov pop test push jge mov add jge test jge push shr popf fdivrl pop xchg add sarl es mov jp fwait xorl add nop loopne or and movsb data16 loopne stos xlat and and adc (bad) xchg cmpsb inc jecxz jae (bad) mov rcll popf fcoml lcall repz or nop loopne in les dec jmp enter xchg loopne std push pop cli jecxz lcall out jnp fstpl dec imul ljmp and cmc pop and ljmp mov std mov leave loop nop std push and jne addr16 or loopne or mov jge mov int std xlat mov (bad) xor cmpl sar pushf mov and loopne in fsubs loopne cmp mov addr16 xchg or out adc jecxz cmpsb lret mov pop jge mov int aam sbb cmc lea ljmp (bad) pusha xlat data16 cli fsubs ljmp ljmp shrl pop (bad) pop xor in sbb or pop jp push xor icebp adc in sub jno pop out mov cmpsl sbb xor mov stos push cmp loopne in out jecxz addr16 mov sub ljmp and xchg es test loopne loop mov ret jp sahf and loopne jmp int3 les cmpsb lret and inc mov lcall pusha loop (bad) xor shl imull loopne adc in adc dec mov or xor shrb dec mov mov loopne and ja int3 add sbb jge orb mov sub xchg push adc pop int flds sub push jecxz je dec cmpsl jae sub mov cwtl inc xchg push adc or pop int3 in imul cmp sbb sti cmp or mov xchg add push push inc lea push inc inc test or sub fistl stos xchg adc loopne xchg push jp sub mov stos hlt mov xchg fadds cmpsl cmc push aad jbe push and mov stos es and xor inc (bad) xchg daa inc inc test or xor push cmp mov push xor sbb cmp ret mov jae mov insb push mov fadds cmpsl cmc push (bad) sbb push push jmp inc (bad) jne push and jb cmp push cmp push daa insb adc fadds cmpsl cmc push aad jne cli in fistl lcall cmpsl nop inc inc insb adc add test adc xor jb idivl rcrl xor insb adc add jbe daa mov sub (bad) ficomp jmp inc (bad) jne cld ljmp divb push and lds push pop mull nop dec xchg fadds cmpsl cmc push aad jne push and jb idivl rcrl ss adc add dec xor negb push test lds mov in fcmovbe ljmp xor mov xchg inc test or rolb push mov in (bad) jbe xor imul fcomps inc mov and dec std xor xchg jbe xor out movsb int mov les (bad) jl xchg daa pop inc inc test or xor and xchg adc fistl mov lret loopne jmp dec xchg fadds cmpsl cmc push rolb inc mov mov mov push xchg loop shr dec daa ljmp icebp hlt gs or jmp call mov inc adc dec arpl inc shrb mov sub scas lds mov sub scas lds mov sub scas lds mov sub scas lds mov sub mov sub cmc xor lock faddp addl (bad) jne push and shr shr shr shr int cmp mov jmp inc lea mov inc loopne dec jo add inc inc mov adc inc add mov or or mov inc mov jo inc dec shr add shr shr shr shr int xor xchg lds nop mov jb dec test cmp int3 lock int3 stc mov leave mov outsb inc add add shr shr rcl jp mov mov stos sbb inc mov push stc inc push data16 mov dec (bad) jne mov inc pop nop rolb push dec imul inc test xchg add adc xchg jo subl out test push mov mov popf inc test rorb rolb adc (bad) lret mov dec lret dec movsb adc cmp sub add sbb mov push rolb adc xchg inc clc movsl jecxz inc pop and inc ficoml cwtl xor adc rcl add dec out inc loopne inc jecxz inc loopne inc mov loopne xlat shl dec add inc mov inc dec mov dec pop out push daa shl dec imul inc dec xor inc lock fdivs add inc or inc cmpsl jp xchg mov mov loopne pop sbb lock pop pop add sbb xor push inc mov xorb cmpsl add dec pop in rorb addb clc dec js pop pop out mov test inc fcoml loopne icebp test lcall inc test add mov jne dec adc lock clc and dec ja out lods push fisttpl push fdivl push or add dec dec icebp test lcall push or inc cmpsl shl inc add sbb lock mov inc cmc push dec andb add inc ja movsl aaa loope fildl inc mov mov dec push push sub xor inc aaa pusha xchg mov sti inc cmc inc movsl push inc jae inc ret std inc mov dec push mov dec mov inc dec xor dec mov inc je addb mov inc cmc test es inc mov xchg mov je push xor push inc inc lods xchg and cmp and cli push inc or inc out xor add inc mov inc (bad) inc inc lods test inc (bad) gs movsl fsts xchg daa movsl test daa xor sub mov inc sbb inc lods mov mov rcl cmc mov (bad) jo gs cmp sbb (bad) lods add mov fldcw dec push xor idivl loopne cmp sub mov hlt jmp xchg nop loopne xor add cli mov mov jno dec xchg push inc add lds mov sbb lds dec jbe lcall jns test nop dec hlt mov and mov xor aam adc inc inc rorb mov stos in in xchg mov bound clc testb imul mov sbb cltd (bad) jne xorl divb inc jo daa mov jo mov add jp js mov (bad) cltd (bad) divb xor adc leave out xchg add inc ss out int3 repz jne inc sbb inc sbb lret jo mov cmp lret fldcw push (bad) jb or inc sbb inc sbb lret jo jo inc (bad) jo repz andl jge jo lret divl cmp xor jo (bad) stos loopne mov jae jmp dec roll enter mov jae pop (bad) rorl loopne push adc jo jge jo mov mov rcr mov data16 pop inc sbb inc sbb (bad) sbb vpshuflw pop xlat stos (bad) jo push jo mov lods sbb jo cltd dec jo mov mov inc push add jo or rcl and int3 push jo loop cmp jo orl push mov jmp test jo add pop lds xchg jecxz ja mov (bad) adc mov add ja adc (bad) jae jp movsl imul jo loop cmp jo orl push mov rclb jecxz jne jae repz lcall ret int jnp (bad) jb arpl jae jns sbb movsl imul jo loop cmp jo orl aad mov rcrb pop jecxz jne jae repz xchg (bad) jb mov jge mov stos int3 push jo sub js jno push insb mov or jo or adc jo inc loopne jmp sbb inc sbb in mov cwtl and adc jo jo ljmp in xchg inc jo inc mov out (bad) mov sbb mov xor popf xor jo stc (bad) mov js loopne jo xor xchg sub cwtl mov mov jp ret mov cmp push jb jns jp (bad) mov jmp xchg repz xor shl pop and ja lods push jo mov mov xchg jmp push xlat arpl andl fsubl nop jae jo aad mov jns stos lods push jo lods push imul ja (bad) jo ja cmpsl push je jp jo jge and fdivl loopne fs loopne test xchg lds stos inc or or ja movsb es mov jbe pop mov and es jae push jo cmp pusha js or jl loopne aam jp aam jns dec sub loopne or aaa loopne mov or lds or ja movsb es mov adc js mov adc jb jae inc js jo pop rol and jp adc imul cmp adc push sub je jnp ja enter andl inc jae inc jb sub adc (bad) adc add or arpl jp or push mov jbe push clc add shrl jb mov jb mov and jb ror loopne pop pop (bad) jo les adc jae adc mul test xlat or mov mov pop jmp mov adc sbb loopne cmp (bad) xlat cld inc adc sti mov xlat or test (bad) out or inc jb jns imul or int3 ja mov mov sub loopne (bad) jo loopne jge jae jo xorb or lea adc stos adc jp adc adc jno jo mov jo movsb call leave mov je jns or in jp loop jmp (bad) jb jmp xlat or inc jb jns imul or mov jb out mov adc and sbb jae push jp and jo out xor push pop mov adc cli bound jb pop xchg sti lcall xchg jmp ja movsb es mov fstl int3 aaa loopne mov jmp pusha js sbb adc aaa loopne lret adc ret xorb (bad) jo cmp jb imul or loopne push mov loopne or dec dec fldcw aam jbe push clc add shrl mov cmp xchg inc je jo ljmp loope inc int3 les push jo push cmpsb fs cltd out int3 mov and adc push in jp test lret jns pop subl jb jns imul or (bad) subl jnp nop cmp jnp inc jae test xchg sti and jo sbb (bad) xor aam je or faddl jae (bad) sti mov cmp pop mov test (bad) jecxz not or inc jb jns imul push adc and es jb mov cmpsl std adc jo jmp ja les sbb or loopne push loopne je fst add and int3 and jae idiv mov test pop mov test push xlat or jns imul or and jae imul sub inc pusha js clc sub aam je push sub test (bad) jo and pop mov jo jo pop movsl jb daa leave nop lock jae inc jo enter adc mov xchg add inc xchg xchg jp add and mov jp mov fwait or jo jp xchg jecxz and jo pushf sub fwait inc jbe push jo pop subl pop mov subl xlat pop gs mov sub dec stos mov and jo or pop mov pop mov fwait clc jo pushf sub fildl mov and push pop fidivrl in fwait cmpsl pop sbb xchg int3 xor cmp pop inc fwait inc fwait inc jbe mov repz push imul xchg mov and push lret mov and push push jb cmp push and push and es or sbb es cmp test lcall cmp cmp pop fisttpll repz arpl std dec push inc pop xor sub andb jl imul mov dec (bad) mov in ja mov and cmc dec cmpsl jbe mov es lret sbb pop cmc fcmovb mov sarb mov push cld xor pusha sub inc or mov mov mov and and add es jb xor mov mov leave addl and inc or arpl xor mov push cli sub and mov sbb sbb add sbb mull push jbe es out out and and aaa cmp arpl adc xor cmp dec mov mov cmp mov xchg lret add scas sbb bnd into pop arpl and je pop fs push out push mov mov mov roll loopne pop adc fisubl mov inc mov daa dec cli (bad) mov mov leave adc jbe xchg mov and outsb sbb stc in cmpsl jbe ljmp mov lret repz fsubl mov mov cmpsb out push inc lods xor daa shlb push aam int mov aam mov mov push gs sub shlb ja pop or and sub inc sbb jl lods insb xor mov mov mov cmp mov inc adc or sub insb or aam jbe and inc jbe aaa test push and mov xchg push xchg out es inc mov sub mov arpl fstl pop arpl int pushf arpl int insb arpl push lods mov cli mov cli leave jb inc dec shlb and jbe or shlb sbb mov jl or imul xor lea (bad) mov or push mov dec adc mov inc adc sub and push imul out lret adc pop adc out (bad) pop test loopne loopne inc push adc loopne nop jecxz in and test dec adc je test dec stc lret adc lock jl,pn test mov cmp loop fildll xor xchg (bad) movsl or negl or push movsl or dec test xchg push adc adc mov adc xlat pop lock or sbb pop inc fwait movsl dec js adc push adc sbb adc test sub jnp loope (bad) fsubrl xchg (bad) sbb adc imul lcall push mov xor xchg out jecxz xchg sub pop push stos adc adc sub sub sub pop lcall pop xchg inc push jle push test mov (bad) adc cmp out push inc xor xchg (bad) adc cmp fmul pop xchg sub sub sub and adc jmp jp stos insb push lods mov fdivrl loopne loopne out stos jo sbb out and out jl mov and xor inc mov xor nop out mov push leave ja mov adc in add lock out inc loopne inc and jmp movsb push pop sbb xor jecxz and call (bad) ret sarb shl mov jmp pop gs push out idiv popa jecxz jo cld push push jmp movsb cmp loop dec lods shl add xor mov arpl jmp adc sti (bad) movsl or in pop adc test lds adc push out add fnsave push cld pop sbb push pop lret out movsb lret mov (bad) in xchg and loop sbb adc mov jp data16 cs loopne notl pushf mov xor lods je stc (bad) movsl jle das pop shl xchg cmpsl push jmp sbb adc in pop push and dec movsl lret push lods je pop xchg pop in mov pushf (bad) rclb movsb nop dec adc push loop jecxz jecxz notl sbb adc outsb movsb inc xchg sbb xchg (bad) leave cmpsb jmp push out pop pop push mov fs (bad) dec imul or xor in adc div nop jmp push loop pop out jecxz loopne push test nop loop sub pop adc je fldenv adc je popa icebp pop test cmpsb pushf hlt mov notl fldl inc xor mull popa add add cmp add jb jecxz xchg sub popf movsb mov and dec or xor int jnp idivb xchg popl jae mov push xchg xor xchg jmp adc loope loop xchg xchg xlat push sub mov xchg sub xchg xchg mov or add sti fwait daa adc xchg add loope out mov lods inc shlb sub ss mov lods inc (bad) mulb mov shll xor mov push (bad) xchg ja inc jns jns and (bad) jb jne fldt movsl shlb push push cmp insb (bad) fidivl push mov andb sbb cmp mov and xor lcall push push mov mov lcall inc jp jp jp jp inc xchg pop sbb jmp xchg gs fwait jecxz mov xchg mov jae xchg xchg mov sbb lds mov inc icebp push movsl push jo cmc shlb push hlt adc sbb mov stos or jne mov jae mov add mov xchg adc in mov loopne std adc aad sbb mov stos or adc mov fnstcw dec xchg lcall sbb pop push mov rorb xchg cltd cmp lods out shrb add fcomps dec fnstcw cltd shr xor jo lcall inc rolb push cmc mov jae stos sbbl mov add push sbb addr16 push mov mull adc mov andb or mov push xchg sbb sub shrb adc pop xlat gs lret pusha mov push mov sub mov jae mull inc int3 mov repz sub or cwtl push sbb inc mov sub push imul in push in rcr ja rcl loop push loopne jecxz jp cmp fsubrs jecxz mov xchg mov test mov xchg jecxz ret xchg push test fcoms test js in jmp push int3 pop jle jl or jl jl add rorb es shrl rorl push xor jnp daa insb mov nop mov or add mov sbb jae rcrl pop cmp and sub frstor rcl daa fwait jae mov test out lea test (bad) repz sub mov xchg cmpsl jno arpl push fsts xchg lock lods aad mov and jno insl xchg cmp test xchg cwtl test (bad) cwtl cmpsl and and mov sub and push cmc jge sub jge dec push cmc jl std jle jl add sbb jge enter dec cld pop jb sbb cmp rclb push roll jle push leave lods dec shrb mov cwtl cmpsl cmp lods mov lods sarl jecxz add mov andl aam sbb loop int3 fildl and sbb dec fldenv flds jns aam mov ljmp pop inc (bad) aam dec xchg daa cmpsl add or rcl jle jns mov rcr sbb rcl sub inc inc nopl pop pop pop pop sbb push push stc xor insb outsb scas push leave icebp ljmp popa xor aam (bad) fildl (bad) shl fwait sub jp adc aad out (bad) cmc test mov xor xchg dec dec es jo mov repz rorb rol push xor mov xchg test mov cmpsb mov cs cmp daa jo cs and in mov xchg jecxz jecxz mov ret mov cmpsb mov xor fs mov jecxz ret xchg lds test xor xor test enter add cld sbb std jl clc jb jns pop std or jno sbb sub in jns nop sbb rcl add orb ds cs push cs mov push add mov or add mov dec pushf lcall mov je cmc fsubr jno push rcl sbb cmp lea bound mov jge push jl sub xor shll xchg sub jl push push jo ljmp loopne push pop push mov test xchg jecxz and jno arpl fsts xchg lock lods rol jecxz jecxz adc xchg (bad) jno insl subl lcall sbb adc fs testl popf insb neg mov popf arpl ja add (bad) or adc lods lods sub fninit sub rorb test adc jns inc inc mov push pop xor pop loop push mov mov imull mov popa bound pop repz inc inc fwait xchg inc mov popa mov dec xchg jae mov adc jne add js xchg inc call bound jge jle icebp shll push push adc js dec (bad) inc or lahf das bound xchg push mov dec adc xchg jle inc pop cld sahf mov fiadd inc dec jmp dec jle fiaddl push insl mov push mov xchg repnz mov xchg fadds add jecxz insl lods push faddl dec and call out jns inc sahf dec mov mov inc xchg jns dec jo popa pusha clc shl cmp imul add push mov pop pop pop pop pop pop pop pop je pop and inc repnz xchg test (bad) dec pop stos mov mov jle push repz repnz addr16 cmpsb xchg jns dec pop (bad) leave add and ret and shll inc inc out dec push and lods add cmp push jo sub inc or out cmp push jo daa and scas and sub pop cmp cmc jb or and cmp push jo and scas and cmp push jo and stos cs cmp push jo and stos into and cmp push add int3 cmp fcmovnu push or inc out cmp push jo sub and cmp push jo and scas and cmp push jo and and cmp push add int3 cmp inc or and cmp push jo and and cmp push jo sub scas and cmp push jo and sub cld cmp push add int3 cmp and push add aad inc out cmp push jo and scas and cmp push jo and mov cmp push jo and inc or mov cmp push add int3 cmp inc or or out cmp push jo and inc or inc out cmp push jo and inc or out cmp push jo and inc or mov cmp push add int3 cmp mov fistl mov out cmp push jo and xchg inc or out cmp push jo and inc inc or out cmp push jo das xor or inc mov cmp push add int3 cmp lcall mov mov cmp push je or cmpl dec or mov mov and cmp push add int3 cmp bound and cmpsl add movsl mov sub dec popa or jbe shl cmp fsts cmp or and cmp push push int3 cmp xchg popa cmp mov fildl or mov shl add (bad) xor xchg and and push sbb movsl sbb push or sbb jnp test mov mov sub (bad) mov adc addb and push or and add mov or lods sbb ret inc mov mov or inc cmpsb and sbb xchg test push sbbb decb out test arpl push sti xchg add ret daa hlt jno dec and xchg fsubl mov sub inc aam in mov leave std sbb xchg aaa xchg (bad) mov movsl imull add loop mov push mov mov jg adc mov mov jge add cli push sahf (bad) fsubl inc sbb push or sbb jnp test andb out adc cmp dec aaa inc cmp repz mov xchg outsb andb add add add pusha mov mov inc inc xchg pop inc push mov inc jo inc adc and mov add add nop les push add aad xor xor mov mov les pusha pop movsl sbb push or sbb jnp test mov push inc mov mov pusha pop movsl sbb push or sbb and xor or add (bad) int inc mov sbb sbbl test xor fiaddl xor mov pop or push cmp bound add in fmuls push push xor fiaddl xor or push dec cmp xor sbb ficoml sbb mov and xor mov mov jg adc ss mov mov jg adc lea dec out push or or rolb jbe je loop setge sub push add mov mov mov pusha pop movsl sbb push or sbb jnp stos shr or inc jmp push add xchg inc push cltd add sbb pop mov adc and das mov and mov adc addb and push pop push (bad) jo inc adc addb and pop in sbb ret inc mov xchg pop inc push mov inc mov lods jg cmp push push mov inc (bad) sbb xor fiaddl xor negb test xor fiaddl xor mov add mov sbb sbbl push push push xor fiaddl xor or mov push mov inc sbb xchg add ret daa hlt jno dec and inc aam in mov leave std sbb nop add iret sbb inc aam in mov leave std sbb xchg push add cmp je in mov leave std sub out pop int3 sbb (bad) int3 loop fcomps push mov call add mov leave std sbb xchg aaa xchg fstpt push (bad) mov movsl imull add loop lahf out cmp fcom inc aam in mov leave std sbb nop or repnz fcom inc je in mov leave std sub out push adc mov les iret bound ret mov (bad) adc cmp (bad) mov aaa cmp push sub push adc int push mov sbb test and dec inc add adc push insb push push and enter mov (bad) jo pop mov adc and das cmpsb or and add test sbb sbbl add (bad) adc or (bad) insb inc cmpsb aas mov stc ds add cld push sbbb decb in add sbb xchg add ret daa hlt jno pop fiadd or xchg fsubl mov cmp mov pop sbb daa mov mov das inc dec and (bad) arpl mov movsl sbb dec test and dec mulb push xchg andl insb jno mov fadds push mov les les es mov sbb and out adc cmp pop mov fwait sbb test and dec mulb push xchg andl insb jno mov fadds mov add lods fsub push inc mov mov push xchg and enter inc fwait add jo les push std lret loope pusha cmp rolb loopne mov add push (bad) jo inc inc inc mov sbb sbbl test and test sbb adcl push les xchg dec xor lds sbb and dec sub incb sub add loopne mov add push (bad) jo pop mov adc and das xchg or and add mov or add adc (bad) push pop aam push gs (bad) pop push xchg in push and popa loope fcom fs gs (bad) pop push xchg in push and fs daa (bad) pop push xchg out push adcl and aad aam push pop pusha and out stos adc rcl aam push pop pusha and out stos adc aam jb pop pusha and push and xchg ret pop adc and pop (bad) push cmpb add and pop (bad) push cmpb add and pop (bad) push cmpb push push and adc and sub adc cltd pop push add and pop (bad) push cmpb add and pop (bad) push cmpb add and pop (bad) push adc pop adc and adc and and hlt sub add push gs (bad) pop push xchg in push and push out aam push gs (bad) pop push xchg in push and push out aam push gs (bad) pop push xchg in push sub aam push xor xchg in jne (bad) push addl and je jb pop pusha and out mov adc aam push pop pusha and out mov adc aam push pop pusha and out cmpsb add fnop aad aam push pop pusha and or and and adc popa xchg adc push add mov adc mov cmpsl push add popa sahf cmpsl mov xchg int cmpsl push add popa sahf cmpsl mov ret sub push cmp and les daa mov popf in lret push aam and and insl push fwait loop dec leave mov int inc push xor xchg cmp push loope fwait dec mov test sbb imul fmull cmp lret shrl xlat sbb ficompl pop mov sub sub pop stos sub imul ficoml ljmp daa mov int3 lret mov daa mov fwait scas imul out pop jge dec push out push adc push push jp ljmp jle popf lret cmc cmp sub mov mov test mov mov sub mov sub stos stc stos jle inc daa and add push push xchg push pop xor push pop repz pop stos in lcall ljmp mov xchg mov mov dec imul out jg mov pushf cmp sahf outsb jl insb lcall gs jne xchg bound lods mov inc les and ret push xlat inc andl mov pop (bad) mov mov inc pop fisttpl add sub push pop xor xor mov data16 faddl negb push in push jl and jno jbe xor (bad) pop fdivs ljmp fstpl sub sub xor orl stc stos mov cmp jbe mov cwtl push loope (bad) jne cmp push jo fdivl out pop out fdivs jmp xor pop xchg lea ljmp aad fstpl sub sub loopne pop cmp lock xorl (bad) adc stc stos mov loopne pop mov mov std push and and pop push loope lds out pop push jae mov mov xor adc pop lock push xor push mov push mov (bad) mov push push push push jp mov aas add sub push pop aas iret add scas sbb push sbb (bad) xchg popa imul sarl arpl pop push mov add cli mov (bad) inc popa faddl pop test cmp and arpl test mov adcl popa cmp lods fs pop cli xchg (bad) adc mov jnp icebp arpl xor xor push imul shll pushf xor ss stc xor mov movsl mov sub mov xchg mov testl cmpsb xchg mov and rorl arpl pop or out push xchg pop out jg xor repnz clc (bad) xchg popa pusha rcll arpl push inc sub lods pushw mov fsubrp fdivs jmp xor push out (bad) shrl add andb xor es xor push jbe push xorl sbb push es push sub push (bad) mov push pop std push mov mov fdivs push testl mov cmp mov ja xchg int add sbb add or push ds xor clc xor ds fidivl xchg cs push sub cwtl push ja or outsb mov rorb pop orl push push cmpsb aam (bad) mov mov orl xchg cltd and push sub adcl jbe push adc push xorl lret orl (bad) fwait xor imul inc rclb mov push dec test inc fdivp imul mov (bad) xchg popf mov addl xrelease adc stos pop in sub and addl and std mov push call sub xor and cmp push mov inc mov pop xor mov mov faddl xchg sahf aaa mov std mov cmc xchg lods icebp js push sbb dec lods mul cltd gs push adc je add adc ja or mov push out fwait add es fwait add mov add imul inc sbb (bad) adc inc and mov movsb and pop nop fwait jmp dec xchg call xchg mov (bad) lds js inc inc mov mov out pop cmp inc pop mov push mov rorl int3 cli inc mov icebp dec daa int cli inc icebp icebp dec daa int jae dec xchg addl jne test ret test test test add inc cmc mov (bad) and sbb fmuls inc dec xchg test mov sub arpl xchg mov loope lods rcrb test imul roll push mov sbb fcoml dec imul adc inc xchg jae sub pusha jle addl mov sub or adc pop repz test outsb cmpsl xor (bad) pop mov inc lea lods loopne test inc sub ss xchg inc inc pop and inc and mov jae mov xlat push fstl sbb mov aam int sub xchg xchg dec add subl dec jno inc fsubl sub addr16 adc stos cmp jecxz addl addl sbb cmp inc dec dec lcall rol xor mov xchg add xor add xor popf inc cmp mov in jo (bad) int3 mov in imulb loope mov xchg rcll or xchg adcl ss data16 xor inc imul add in xchg cmc inc mov xor xchg inc xor xchg loop cwtl inc and xchg divl xchg cltd mov xor cltd fidivrl adc mov xlat (bad) mov stc mov adc pop inc int cwtl inc loope sbb mov inc xor enter jno nop dec popa jno popa jno lds lds xor and ja cmp sbbl int3 pusha rcll mov push fldt cmpsl push sbb movsl dec xchg mov enter imul jno xor push lret mov loopne xor cmc ret jecxz (bad) jae es in xlat push inc xor pop test dec and mov mul xchg lcall xchg sub inc xchg fwait push xor xor inc xchg nop push xor and adc aaa lock dec xchg (bad) xor in xchg xchg pop mov xor cmp xchg xor cmp lods fcomi fwait cli test adc jmp mov aad adc mov pop insl xchg push test cmp dec stos enter idivb xchg adc add test ret adc xchg sbb add sti in or and mov xchg sbbl jecxz push xor add cmp fnstenv push xor adc xor jecxz xchg mov arpl push jnp and cltd or xor loopne jae sbb rclb inc adc pop xchg ret xchg stos push scas inc push cwtl add and add subl push mov add sub xor jno or shrb dec xchg mov fisubr cmp adc fstl xor sub int3 sub loopne mov jae addl sbb push sub cmp leave rclb xorl push sub pop push adc pop or mov aad xor push sub inc int3 or je mov scas mov add adc push mov mov pop dec cmp js dec scas cltd pop std popa ret fstps push stos add jns stos fadds or bound mov sbb xchg adc testb cmp (bad) cmc outsb (bad) hlt mov or test adc xlat mov mov pop hlt (bad) test sti push mov mov and jo or cmp add stos fmuls pop insl push fcmove out add mov mov ret xlat ret xor mov outsb fsubr and adc stos inc imul add sub and loop xor rcrl shrl xchg sub js mov adc popf push jno mov push inc or add inc adc rorl stos fsubs mov mov xor in pop sub arpl lea jp pop enter or cmc ljmp add adcl les cmp push aas inc cltd adc out nop push push push xor sbbl dec unpcklps or scas push and (bad) test cs loope jb sub add or push jo inc movsl cltd bound and and xchg pop popa adc xchg inc jae and daa aaa daa das dec loopne call push push loope mov icebp (bad) ja addb pop in pop mov mov and shrb pop push test cmp loopne insb cltd jae addr16 or fs jnp jno ja ja jno jno sbb int and mov jno pop adc rcr es cmpsb ret and (bad) cmpsb lret sbb mov mov fwait cmp and and clc (bad) imul ss jno jbe imul and cmpsb arpl jmp cmp pop shrb divb pop in imul xchg imul icebp push and push inc (bad) sub shlb sub dec jmp dec xor sub and fcomi sub inc imul pop in imul sub jns sub and cmp mov dec (bad) fstps les dec xchg push cmp cmc mov ljmp loope pop adc mov add sbb and fs cli ret sub in aam or add repnz mov push and xchg repnz and movsb bound bound stos xchg rcrl xchg in nop bound test xchg lret call adc dec bound inc pop adc out cmp insl sbbl sbb xor xor gs xchg and push sub xchg mov xchg insl mov leave repnz xchg sub ret bound loop mov add jno jmp out xor lock push mov push add dec add sbb adc daa enter cmp rcll xor cmpsl xchg icebp pop ret xchg and fs int3 xor adc movsl adc repz in xor mov adc bound sbb jae xor insl inc insl inc push arpl xor xor mov (bad) sub and xchg and and and and or xchg rolb adc add add xor fisttpl (bad) movsl mov xchg jge sahf fdivrl addr16 push mov add sti test popa push rcll add leave insl movsl (bad) icebp push sbb or popa jne push sub jge lods xor or sbb jecxz or xchg push add pop pop xor arpl sub inc xor and cmp imull and xchg jecxz dec add repnz rcrb add cmpl xchg ljmp pop enter add cmpsl pop pop inc repz adc add addr16 sbb xor pop leave mov push push popa mov jno xor adc cmp div xchg stos std imul ljmp movsl or add pop (bad) cmc inc int fcoml add movsb fdivrl or jle ds mov mov mov adc xchg inc orl inc pop inc xchg jmp push mov inc xchg pop mov and push fcoml mov rcrl scas pop aad in xor xchg xor icebp lock pop jns cmc and lea imul push leave ljmp or and add pop or popf ja mov cmc aad push mov and add adc cld mov pop into adc push mov lock mov pop repz pop xchg push adc rcll (bad) loope aam adc push mov fisttpll fnstsw or cmpsl in fxch jmp leave fldl addl add dec movsb jecxz add imul fidivl xchg hlt xchg push add pop dec sahf push sub push and cmpsl in icebp mov in shl add cmp sub xchg fisubl add dec stos sub fiadd push add and pop adc es push push in lds (bad) or pop les in popa mov cmpsb fisubl jne pop or es xor push pop bound (bad) add and inc outsb shll push dec call ja xchg hlt dec cmpsl add or cmpsl xor cs loop push and dec test push push xchg xor xor or enter sbb cmp push testl mov pusha push mov lret sub and adc testl mov (bad) (bad) cmp mov cmpsb xor push icebp sub cmp mov cs loop push mov push (bad) and pop lods sub cs loop pop pop dec fcomps and mov sub call add shll cmp sub jno jecxz popf in push push test ljmp fucomp push loope call je pop add ror jno (bad) xchg pop add sub jmp add push or addr16 mov dec daa out nop icebp sbb add sub jmp add pop pop loope push pop test stos aaa jle push add sbb mov xchg popf adc xor ljmp push inc in pop xchg cmpsl sti daa cmpsl mov test stc xor (bad) aaa xchg jecxz rclb sarb push les xchg ja mov lcall (bad) (bad) mov or popa insb lock test repnz shlb sub pop push add xchg mov jb mov add inc into out and aad jecxz mov add or sub int3 mov add jp je aad aad inc sbb mov xchg inc div inc push ret and xchg call adc scas out test and sti aad inc rcll imul data16 sbb adc add addb adc in je fnstenv and bswap lds insb pop fistpl cltd dec dec sub loop cmpsb mov pop xchg js mov jnp (bad) lret incb cmpsb mov add lea icebp (bad) mov in push fsubp pop das pop cmp cmp add rcrl pop fiadd scas xchg in fisub ljmp cmp sub push mov add fldl (bad) fistp aam iret inc adc add mull stos les into pop adc mov dec fistp int enter int enter arpl xor pop inc mov (bad) xor and popf sbb aam stos xchg scas mov jb loop jge imul or fmull cmpsb sbb and outsb sbb inc es cmp push int3 lds cmp or push adc mov js mov in ffreep or aaa and xchg adc mov repz imul sbb mov mov aad push mov adc push int3 mov test lods add push jo adc test loop les xor xchg cmp sub push mov inc arpl scas dec push rcll rcll xor push lock fldz les orb inc mov mov pop add cwtl and (bad) ja in xchg fnstcw out enter das xchg or cmp and cmp pop and fs pop pop das mov scas mov aaa les ss insb pusha les loop adc inc or clc (bad) or mov fwait adc sub sbb and inc movb das adc test push and or and xor mov and cmp xlat outsl fnstsw adc adc adc pop jb pop xchg adc scas push mov ds adc mov or dec aaa enter (bad) imulb push leave or push inc imul arpl addl jae pushf jns lods jns daa mov or push aam lret and xchg xchg nop ret addl in aam dec sbb dec mov repz rcll popa lods sub ret test test js jp ss ja clc ja dec sarl mov aas xor ret ret add push adc jne pop xor push fwait in xchg xchg xor rcll inc xchg cmp xchg xor inc pushf mov mov addb pushf sub add adc xor loope orl movsb lock add andl mov add aad and cmc icebp xchg inc inc lea mov xchg or lock and pop and (bad) jmp mov fsubr (bad) gs lret outsl outsl outsl outsl outsl outsl outsl add xor lret xchg ss mov outsl outsl outsl pop jmp xchg xchg addl pop lret jae mov addl push mov arpl inc (bad) and inc repnz add arpl adcl sub call ja dec jmp (bad) int3 push outsb push dec or cmp push xchg in loope inc xchg adc pop test xchg inc sub cwtl push nop cld cmc cld addr16 push fiadd jge and cmc addb add in cwtl add sub sbb xor cmp push mov mov inc xchg ljmp push call pop aam fs pop pop push test or into ret xchg scas pop push stc loop xor ficomp orl mov dec inc mov mov inc jnp daa adc stos lea addr16 mov les popa pushf adc or mov adc or add or add adc icebp and push jne mov mov xchg pop mov flds adc inc and push push or adc adc add xchg dec cmpsb fwait xor sub roll in adc xchg imul sbb je jo sub add mov pop sub push into iret movsl adc push mov in mov push jae adc pop mov jns (bad) xchg jns xlat xchg push in mov push and out mov nop add addr16 jnp pusha push stos jns pop xchg add mov stos push repnz mov sub ret push or or cmp test or xor mov test lods push sbb popf add test sub xorl inc and ljmp fisubl push enter mov pop pop sub pop lret and push mov push xchg push inc jns xchg mov test pop pop push lret mov inc rclb and rcrb jl adc movsb les adc and les xor or mov xchg jno pushf inc add push or pop pusha push push inc push mov gs or arpl push dec and jl add and or sbb bnd sbb mov push pusha lret into sub mov sbb and cltd rcrb mov push insb jecxz adc popa stos ret push mov cmp push inc test inc jo push or sbb arpl les gs mov push inc xchg lds lds push bound adc dec and sbb lods inc or or scas adc dec ret push test xchg ljmp mov mov clc add stos mov and xlat bound inc (bad) test sbb mov (bad) push mov and std imul inc test pop lods jo dec push ret aam (bad) mov add shrb pop jmp or adc push scas es mov imul lods pop push into into into into lret adc inc xorb mov xorl or aam dec xor inc pop cmpsb add idivl fisttpl cld jmp jnp xchg or push jno cs into mov leave sti jno les xor push xchg xchg xchg in (bad) ja cmp (bad) adc pop mov mov leave sub fadds xlat inc jb cmp push cmp ja subb loope in inc adc cmc xor cli adc adc cmp push jns icebp inc push xor jns jns clc icebp sub and loopne (bad) (bad) or jns mov dec mov fimull mov pop popa jns icebp inc fstpt sti xor into (bad) arpl hlt push pop mov cmp les mov xor adc loop inc mov xchg and inc mov cwtl ss push xchg test les ss xchg test cmp push inc fsubrl jecxz add xor inc fdivrs stc xlat cltd mov lods call xchg push jbe loope mov push imul jecxz bound loope (bad) movsl inc movsl inc movsl adc pushf fwait and push gs xchg ret xor jno xchg repz mov dec cmpsb fisubrl push leave sti xchg lcall push repz leave lret outsb xchg xor test sti add dec cmpsb leave es mov (bad) ja and ret jmp xchg repnz xor arpl mov pop pushf xor lock xchg jmp leave cld dec icebp inc pop xor push fwait nop mov or fwait mov fwait mov jbe jne insl fisttpll in jne (bad) sbb adc aaa mov and ds inc cmc xor inc pushf push sahf dec or popf stc mov adc xor nop ret xor add xor addl bound xchg mov xor mov (bad) ss jmp lods adc mov mov mov stos adc mov fs les shl out dec sbb pushf mov mov mov addr16 movsl cs push pop push mull insb aaa popf mov ja bound imulb insl push push notl pop in cmp push ds mov pushf pop inc mov in push pop cmpsl mov sbb sbb xchg xor sahf sub mov mov aaa mov fcoml push cmp imul repnz stos cltd (bad) jecxz stos movsb div inc stos push repz stos (bad) mov xchg movsl sub lret in mul mov dec push pop pop int and mov sub and inc xor mov stos out or xor movsb and lret ret and mov arpl pop push xchg roll mov cmp ljmp cmc mov xor ds les push inc jecxz sbb mov data16 xor mov mov mov dec pop (bad) bound mov inc xor jbe push sti push out inc adc cmpsb cmpl dec nop shlb pop or mov dec pushf cltd jge adc std xchg xor xor mov or ds jp sub sbb mov xchg (bad) mov and sub ds push and and inc xor (bad) stos jb sub outsb mov div arpl xchg (bad) lods pop fstpt mov ss testl es insb pop insl push pusha xlat cmp (bad) lcall xchg add xor cmp rcrb loopne xchg cmpl dec idiv adc stc add and xchg pop test sti icebp jno inc cmp adc xor js inc xor xchg arpl jp xor xor xchg xchg push xor mov push inc cmc arpl xor cmp xor insb addr16 mov jno es in fs xor dec cli out clc (bad) (bad) dec repnz in fs jecxz cmp ja pop clc mov stc repnz enter cld std sbb popf pop test inc pop sbb fnop or or push (bad) pop fsubl sub sbb popf or mov mov xor imul cmp sbb or push sub cltd mov pop mov xor and push push sub mov jae js and rcll (bad) mov (bad) popf or and gs sbb xchg (bad) dec mov (bad) pop push popa sbb repnz nop jmp push xor mov inc adc xor sbb or inc mov imul xchg mov out lret fwait pusha loopne loopne sarb fs sbb mov mov xchg cmp loop xor out mov lcall jge xor bound popa mov mov cmp ja xor jmp or pop stos pop movsb lock std (bad) xor inc pop stos pop imul xor xor mov push or cmp aad cmp movsl clc adc or in pop cmpsl inc mull je popa pop cmp xor int3 (bad) xor test dec push test les movsl mov arpl gs or lods add mov cmp and ljmp mov shl xor test dec mov ja negb out mov sbbl jge (bad) popf or stc or test jno shll push or popf or jno adc ja popa push adc jb insl mov and push and add pusha lret mov mov add inc push mov xor sub xchg or cmpsl sbb movsl add sti xorb add stc jmp dec test addb in mov push pushf rol inc icebp xchg cli rcll js xchg icebp xchg loope rcll or leave fcomps jge cmpsl adc test mov jns and xchg insb inc adc push out cmp cmpsb icebp insb cmp movsb (bad) mov xchg popf xchg popa or add xchg lea fnstcw mov test stos add stos movsb push aam ja jmp dec mov mov xchg add aam (bad) movb sub stos pusha jno push jl shlb and cmpsb test roll dec stos dec test repz or pop (bad) push cmpsb adc repnz mov push andl fwait mov pop in out arpl push movsb out jp jmp movsl in jb push push ljmp loope lret mov cmpsl add push cmp mov inc sbb mov xor adc insl sub clc cli bound or neg jmp cli test xor out inc push ficoml mov xchg add and lock mov push jb ret movsl and (bad) jno add es (bad) fisttpl and adc pop jge in push hlt xor inc fwait jno add push or xchg jp cmpsl add inc cli mov xchg sub push les lea loop adc cwtl popa jge push dec push push mov cwtl pusha icebp jno loope lea push push push jp push push loope xchg xchg cwtl popa cwtl inc cwtl xor push adc push rclb push rclb jp sbb ljmp loope or jnp and push rclb inc push rclb jp push roll cmp shll adc je out cld pop stos sub mov xor or lods movsb xchg dec cmpsl xor and dec lea inc inc popa jnp jns stos inc jnp jnp xor or jne mov inc xchg xor stc or jbe in leave icebp jge es pop aaa xchg gs call mov rorl mov mov icebp jb ret adc jno ret ret in nop mov push sbb ret push jb sub fsub jp sub jbe fcmovne bnd add cmp mov push jno leave jge pusha cmp imul jl ret cld mov (bad) push sarl imul lret jo ret or mov pop dec jmp arpl dec xchg xor jnp adc or leave lea icebp icebp jnp xchg jge clc inc test dec lea sub push fistl mov jnp push and cmpsb movsb xor mov js add cmc in hlt ret fmull (bad) xchg call shll mov popa sub xchg sbb adc aaa adc leave out cmpsb mov (bad) shrl jnp sbb and jne jno pusha sub mov inc mov add mov sbb (bad) or imull add push scas adc stos adc jnp push mov mov (bad) stos push lods jb and adc inc subl xor fcmovnu sub or fisubr adc push aad mov mov xor jbe jecxz mov mov stos mov mov stos mov ret aad mov (bad) out add pop xor push ljmp fimul lods fidivrl xor clc cwtl scas aas xor jp push inc adc shrl imul (bad) outsb movsb and cltd xchg lret xor adc or cmpl push jno mov mov add mov cltd push and xor clc inc cmpsb (bad) fcmove inc adc pop push xchg xor imul rcrb add adcl or pusha icebp and and insl add mov adc mov push mov aad ficompl stos push push adc movsl adc imul mov sub push loopne add xlat cmp ljmp sub sarb sbb sub imul and add lock pusha mov arpl adc ret cmp (bad) leave sub aad jb loopne sub jbe jne xor mov (bad) loope dec push mov ret mov fiadd mov (bad) xor push stos adc pop lods inc mov push sbb adc push js jno fs rolb cmc push inc inc inc add xchg push pop add sub adc (bad) (bad) or jno jle (bad) jno pop or test push or mov lds or pusha out add xor arpl (bad) sbb mov test mov insl dec loopne jbe sbb mov jp mov pop mov cmp cmp pop mov shl push lock sub xchg not not mov ret sbb imul test roll (bad) push xchg insl inc (bad) stc jb jo int3 push loopne sub adc movsb test mov push sarl mov adc daa sbb sub enter push imul inc test mov in inc inc adc add pop or mov lds adc hlt mov test lret aam dec add sbb (bad) pusha jno sbb sbb les add cltd cltd cltd cltd cltd cltd cwtl aas push shll pop movsb mov (bad) cmc adc adc adc sahf add (bad) movsl test inc adc mov data16 test iret test or dec mov add push loope xor mov (bad) mov aam inc or ficomp xor xor xor xor das add stos adc push push and orl inc aam mov (bad) call cmp and xchg xor cmp add movsl xorl inc inc and sbb clts stos jae mov sub ja cmp adc cmp and cmc pop loop mov sbb int3 data16 enter and push adcl dec mov or and enter orb jb xor fs add xchg (bad) in add xor inc mov lods inc adc bound rcrl inc xchg inc jmp adc pop xor add dec push push mov and sbb dec push adc sbb les sub out cmc movsb in inc shr clc sub cmpsl inc mov add adc fmuls ss jmp shl pushf inc sbb ljmp adc push dec xchg or rcll and sbb unpcklps pop rol or cltd cltd cltd adc fistl push (bad) dec stos test cmp lret push add xchg adc mov mov hlt imul fldcw js jne cltd sbb imul mov sbb and sbb dec sbb (bad) cmp (bad) js adc icebp push pushf push stos lcall push fldln2 andl adc fist jae push jbe xor neg adc mov pop fcmovbe arpl sub jl mov ss mov das pop stc ja fsts push pop pop fisubl sub sbb mov add rcll rcr sbb push icebp pop das aas aas cmp cltd mov gs daa mov cld insb pop mov jl gs push dec movsl loope sub mov sbb movsl jae out movsl jmp addr16 pop or dec cmc pop inc xlat dec (bad) (bad) dec add call in push jnp xor sub loope push jb push sub stos into lock and shll shll and (bad) movsb fnstcw cld mov push push dec sub add (bad) fidiv shrb (bad) loop pop fisttpll pushf sbb adc shrl fucom cs jbe inc shrl arpl pop add mov push and mov mov lea repz popa mov jecxz lret dec lcall pop testb lcall insb fdivp mov xchg stc repz imul mov lret out out lret sub cmp cmpl mov stos ret and lock xor sbb dec jnp pop dec mov and mov adc mov fs pop es lods lret and sub mov push mov in push lock js push and addr16 xor sub ret (bad) out lret stos shll sti data16 scas daa cmp lock fildl lods ljmp mov adc push stos pop les jge jne mov push push push repz cmp xchg mov jg pop (bad) cmp popa fsubl jge xchg add cmp mov jecxz push mov push cmpsb mov jns fcmove lea adcl lahf and stos lea (bad) cld xor test xor xchg pop jbe push cmp add leave adc dec adc inc loopne data16 push shll add xchg jge adc in aam sbb jecxz push pushf pushf nop ffree xchg adcl adc insb inc xchg mov sub or or push mov lcall cmp out add pop adc sbb repz push lcall mov fstpt mov mov add jne pop xchg (bad) shll lcall mov test cmpsl xchg out mov arpl int3 (bad) push mov dec lcall daa jp jae and lret pop push out loopne lea jge stc and in push xor lea mov repnz les adc lret int push and test push jno loopne push loopne in or fs movsl mov push (bad) subb cmpsb cltd scas fdivs fwait push shrb push loopne sub push mov mov stos inc xlat add pop fwait mov mov or daa and sbb test xchg inc pop and push dec ror or enter out inc dec loopne lea sarl cld jnp and jmp lret lods out mov js ss hlt lea test movsb sub push cmp xchg pop insl std adc mov sahf mov jecxz push mov push cmpsb mov jns fcmovb cmp push push enter in cmp cmpsb outsb xor pop imul lret (bad) jmp xchg pop jbe push cmp add leave adc dec adc inc loopne insb sti mov movsb notl adc cmp and fs xchg mov or daa and sbb test xchg xor cmpsl fisub lret mov mov ja xor mov cmpsl lret stos pop jmp inc mov adc ss hlt lea mov add mov cmp mov adc mov mov mov push adc es push push es xor outsl pusha data16 dec int les cmc test mov adc icebp adc mov adc mov sub mov mov mov add fcoml fldl jecxz (bad) or mov xchg sbb sbb insl inc mov into faddp enter or (bad) ret mov out sub and inc pop mov sub and ds in inc cltd xor mov sbb sarb adc xchg movsb (bad) add xor adc mov popf or cmpsb inc push sbb mov cwtl adc negb lods cld xor adc lret rorb mov adc dec (bad) xor lahf or in popf popf push lods adc mov lcall data16 leave mov test pop lea js adc adcb pop popf jb dec and adcb push pop cmpsb jb cmpsb dec pop cmp xchg jae addl fisub addr16 mov or mov (bad) popl movsb cmpsl leave sub dec or (bad) cmovge pop add int bound inc mov mov push in mov mov pusha mov cmp scas jns pusha mov dec fmuls or mov mov (bad) fstps into jns sub dec sub mov pop sub mov es arpl (bad) hlt inc dec cltd push mov lods insb mov (bad) into inc scas rolb sbb test push cmpsl jb mov gs and dec js dec mov pop cmp pop shll ss leave xchg or sbb ret addr16 cmp ficoml adc sbb cmp push or aad push outsl add daa sbb mov jecxz fild clc fbstp in (bad) leave cmpsl dec xor sti outsl stos ror daa dec cs mov shlb int sbb inc int3 push pop xor dec xadd sbb je lods pop int mov adc dec mov dec test pop adc fnstsw jno mov or je inc xchg ljmp popa xchg sarl push pop inc inc das jp pop dec sub xor and cmp xchg mov mov in fimull jl jmp dec fwait lods popf pop enter in and (bad) mov pop sub cwtl pop jnp or push popf int cli int3 jne data16 adc sahf test enter mov imul pop fcomps testb fisubl and adc mov pusha pop mov adc test (bad) or jecxz adc fadd fisttpl adc cmp cmc clc cli cmp mov loop (bad) jmp mov adc pusha sahf pop dec inc pusha pushf sub repnz push ret and icebp enter loope pop jecxz pop insl adc or js or pop addr16 popf (bad) or jb push pop add pop or ljmp push pop inc shr mov and cmp ss or xorb out xor dec add mov bound mov (bad) repz mov mov jne sub jmp cmp xchg popa sbb jnp dec js dec loope dec add scas gs lret push xor xchg pop in sbb adc imul fidivl inc ja repnz or imul stos add test push repz mov nop movsl scas pop adc cs lret push xchg xlat mov xchg lods js adc jbe sbb pop push mov jnp mov out xor sbb mov inc xchg test bound mov xchg jno imul data16 sbb fs mov mov loope hlt stos jbe pop mov adc add lods popf popf fwait add push lods insl xchg mov mov mov cltd and daa pop mov sbb leave (bad) bound fcmovbe mov sub icebp scas pop hlt mov sbb mov ss push and fs and mov cmpsb push push outsb mov xor pop sbb lea xor xchg shrl hlt mov inc test mov xor out inc jno push push inc push pop cmp push cwtl inc mov xor inc inc jo (bad) mov cmp sbb and dec adc repnz fildll dec (bad) adc jle pop jne mov cmc jb push cmpsl mov loope rolb test lea xchg das jbe test inc add (bad) movb insb push aas adcl cmp dec lea pop lea int3 in rcl clc lock and (bad) cli fdivrl arpl mov bound sub fisubr inc xor lea mov xor push mov inc mov mov or mov movsl or fisubl imul xchg test cmpsb fcompl xor fstpl push and outsb inc lea xor dec push adc xchg and mov mov xchg dec push xchg sbb add push push mov pop lods or or lea (bad) mov aaa dec mov lcall or xor aaa loop (bad) lret pop cmpl pusha scas mov mov jbe inc fcoms mov cmp rorl xchg push lock push sbb (bad) mov sbb mov hlt movsb (bad) mov aam scas add inc or sub inc addr16 mov mov (bad) pop js inc mov outsb in xchg add jge loopne in adc adc and mov sub (bad) hlt (bad) je push mov inc xor sbb aad xor mov pop jp movsl pop add sub rsqrtps aam xor je add das mov daa mov xor inc pop das mov pop mov cmp mov jb add inc aam inc cmp mov jae loope mov popa test hlt inc popa push movsb pop insl test sbb mov dec test push push xchg inc sbbb sbbb sbbb sbb test push mov push mov mov push push mov js sub lahf mov pop sub pop test push pop js adc popf loope push xchg pop (bad) dec lret adc xor in xor pop adc add inc and jae clc cwtl sub or insl popa mov js adc add mov cmc xchg popa (bad) hlt and push (bad) push or or add popa mov rorb add jae fs mov (bad) mov rolb cs fmuls sbb data16 rcrb and mov adc lea jmp xchg mov loopne js divb fmuls jg xchg dec icebp mov test test mov stos sub jmp arpl aam popa jge int pop (bad) js call (bad) lods mov test cmp cmc popa pop fmuls daa test sbb push loope jge pusha rolb fmuls iret pushw nop dec sahf mov mov sub mov and add xor pushf sbb inc icebp xor out cld lret je pop mov cld stos and inc mov test and mov jo pop xor or fs pop sbbb loopne or jg jns mov (bad) mov into push adc loopne inc sub cli pop push js mov add and cmp arpl or leave js test lcall int3 aaa mov data16 adc pop movsl xchg or (bad) popa das push inc push out fmuls mov xchg fidivr call xor ficom mov and xor mov fnstsw push pop inc inc cmp imul je gs mov packsswb shll fs (bad) popa das push inc add out fcomp popa inc sub or xchg rcrb cmp divb cwtl push mov ficom mov lock ret dec cmp bound fisubl fmulp iret jp pop sub js pop adc adc fadd cmc and leave add or xor dec mov sbb (bad) popa das push dec addl adc jecxz mov rorl add test mov dec ret cltd popa frstor sbb mov or imul mov or mov fs bound pop pop js ja clc mov cwtl inc mov xchg jo icebp jae loope xchg sbb pop xor mov sbb or faddl or jl (bad) icebp and jecxz xchg push jb or cmp xor xchg sub and cmp fs sbb scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov scas mov fildl or mov flds or or pop or add dec (bad) enter and or sbb inc pop add dec add push inc push pop jnp idivl dec inc mov jo es pusha mov inc mov cmp lock mov add or mov (bad) sbb or lock cwtl push cmp jns mov xorb inc sub adc (bad) flds pusha mov nop test sub inc mov sbb add movsb and dec mov dec sbbb nop or fs add push xchg out das add fldenv and add insb push in aaa lock xchg and fldl outsb dec cmpl jge adc (bad) flds dec mov das (bad) fcompl mov enter sub and or add adc test enter adc pop or addl orb dec ss xchg xchg mov test idivl loopne inc push xchg enter dec nop pop jae and inc popa inc inc sbb (bad) mov enter mov testl mov std add add or push idivl jnp mulb (bad) sti fsubp adc inc dec add adc sarl fdivp mov pusha pop test xor or add mov loope popl stos lea pop adcl subb add gs mov out jnp loopne sub jo idivl mov insl out or cs or and jnp idivl pusha nop cmp and cmpsb mov cmp in xor inc cmpsb call push sub or out push fstl fwait mov push lret test jmp ret jnp in std jnp fdivp add loope fdivrp mov jo out xor mov mov mov jnp pop pop mov outsl jo out leave jge loopne fnsave mov scas jnp (bad) or jnp idivl pop mov leave jge loopne fstp sti mov jle loope fdivrp mov loopne fstpl idivl lret out jne faddl dec fdivp mov mov mov mov mov mov pop inc or add jg inc int outsl in inc mov mov cld sub adc push mov adc outsb dec cmp push enter sub xchg pop clc add enter loopne inc inc or inc mov cmp push mov mov and cs jg repnz inc and jb pop leave outsl orl sbb jb loopne cmp in out xor jb loopne movsb dec xchg fucomip shlb aad outsl addb cs jg dec xchg and vmovdqa jno in shrb xchg and xchg fild and out dec jg mov dec xchg (bad) mov loopne insl adc mov dec mov fwait inc mov xchg and adc dec jg inc and test (bad) adc and or lcall jl and inc mov and adc mov or es fimull inc in xchg imul aam cmp dec cmpb jb jp sbb or dec cmpb sbb lret cmp add dec (bad) jb jnp sbb sbb add dec inc jnp imul lea dec cmpb and fwait pop roll pop rolb xchg push in lock add mov and push add (bad) jb js dec and xor xchg imul xchg shll insb add and out dec xchg imul dec sbb dec xorb fcompl pop rolb dec sbb jb insl jnp inc add fwait sub add cmp add lds in lock or jb add in shl add adc pop fwait jae add push dec cmpb xlat mov daa mov and fidivrl dec insb xchg inc mov pop and loop add sahf std xchg fs leave das jno add xchg scas fimull ss xchg fucomip push leave imul or in sbb mov or outsb inc das repnz push int3 adc mov inc sbb xchg cmp (bad) push xchg mov movsl loop cmp aaa les sbb loop out cmp cmp call mov adc test mov adc test mov adc push mov test push mov insb outsb insb outsb insb outsb insb outsb insb outsb insb outsb insb outsb insb outsb insb outsb insb outsb insb outsb insb outsb insb outsb insb outsb insb outsb insb outsb insb outsb insb outsb insb outsb insb inc mov mov in test mov in test mov in test mov in test mov in test sbb sbb sbb sbb sbb dec dec dec dec dec dec dec dec pop jl jl jl jl jl jl jl jl jl pushf outsb pushf outsb pushf outsb pushf outsb pushf outsb pushf outsb pushf outsb pushf outsb pushf outsb pushf jle jle jle jle jle jle jle jle jle jle jle jle jle jle jle jle jle jle jle jle jnp mov or or or or or or or or or or or or or or or or or or sbb jecxz call loope mov daa mov mov mov mov or cmpl sbb (bad) or sbb sbb sbb sub dec sbb dec sbb int3 sub int3 cs sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec pop pop jl jl jl jl jl jl jl jl jl jl pushf outsb pushf outsb pushf outsb pushf outsb pushf outsb pushf outsb pushf outsb pushf outsb pushf outsb pushf xlat pop pop pop jne xchg pop ja pop in jne xchg pop jnp xlat pop jne (bad) xchg pop jne pop jne sbb leave jne pop pop jno jne xchg pop jno jne pop jne pop jb xlat pop movsl xlat xor fistp inc jbe pop (bad) jne inc ficompl and xlat adc pop jno notb pop jne aad pop in jne xchg pop jno jbe xchg sub mov xlat pop in jb mov and xlat adc pop pop jne mov pop pop xorl xlat pop jbe xlat pop jne sbb jne aad pop jb mov xlat sub pop pop jne pop jne pop jne pop jne pop jne pop jne pop jbe pop popf jne vminps xlat sbb gs xlat pop insl pop movsl xlat cs jno jbe pop leave jne fistpl movsl xlat mov xlat cmp xlat adc pop dec jne vminpd xlat sbb add jne bound xlat pop mov jne pop mov jne add cs pushf jbe jbe inc leave jmp xlat pop jbe xlat pop jne pop jne pop jne pop jb xlat sbb gs xchg pop insl pop mov xor test pop jae xlat mov xlat adc pop pop ja pop inc pop jns enter jne xlat and inc jne xlat and jno jno pop jae pop inc jne das pop pop fld xchg fnstcw cmpsl pop jbe jne inc negl shrl jnp imul mov jbe pop ja fstpl xchg popf cmpsl pop jne daa leave xor adc add sbb jnp mov rclb fs out mov mov aaa mov sbb and into les mov adc or imul or xchg fcomps xor out mov pop inc gs jns js jmp test and pop out int3 loopne inc xchg inc jno push mov fwait adc add and les mov inc les xor or pop and jb xchg jb pop and (bad) (bad) inc adc cmc cmp add adc sub xchg loop dec adc sub (bad) stos adc xlat bound loopne stc and loope cmp push and and and daa cmp inc push cltd call xor or out adc sbb inc bound pop es rcll popf dec jae nop in fwait and cs mov sub add add dec adc inc sbb roll lods and sbb jbe or push mov sbb inc test mov dec add adc enter add jae jne or xchg test movsb xor xchg or xchg inc andl mov (bad) push mov add add test mov xchg jmp mov or loopne adc inc and repnz aam (bad) leave adc enter mov dec dec xchg inc and xor test or (bad) xchg sbb and mov add push ret inc bound mov mov in jmp imul test fs (bad) push mov dec rcll in inc orl jae or es test mov dec add dec mov mov inc adc mov or jno and cwtl or and mov sub mov fimull push test cltd fs mov in into adc andl xor push mov mov leave dec in dec inc das xchg inc adc sbb int test or mov add popw mov sbb xchg add iret les stos test popa mov or mov rcrl mov push and clc pop cmp inc xor add mov shl pop dec gs sub mov shrb jns aam shll cmp push adc mov and mov xchg inc arpl sub dec add inc sub in into jbe out int3 sub into jae jle pushf out pushf out test xchg pushf out mov adc dec jae ret into jae push sbb into jae add cmp jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae adc mov mov jns mov test push jmp sub xchg or or or sub negl add pop sub dec test mov lds ss insb push popa insb push popa insb push popa insb push popa insb push popa insb push popa insb bound pop or lods (bad) mov mov test push jmp and cmp jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into mov frstor mov (bad) out mov frstor mov push jmp sub pop adc pop adc pop adc pop adc pop pop pop sub negl add pop sub negl bound add add clc or das cmpb cmpb cmpb insb push gs mov or punpcklwd xchg xchg cwtl pop adc push jmp sub (bad) mov mov test push jmp sub icebp dec test test test push popa insb shlb push popa insb dec das cmpb cmpb cmpb cmpb jl lock rcrb and xor (bad) adc sbb push ret sbb arpl jnp popa or pop and xor mov adcb add and pop imul dec sbb xlat jnp cmp xor movl sbb xor xor xor xchg xor in and iret dec cs lods outsb sbb aas adc aaa cmpb out loopne aaa mov adc (bad) mov sub mov (bad) aaa xor movsl out dec and lret out and (bad) cmp cs and xor stc or or mov cmpsb negl sarb jl sub mov jns idivl sub test insl imul cwtl sub pusha cmp out cmp imul jmp inc sub insl add aaa movsl cwtl fs or pop dec cmpsb out pop dec fdivrl lcall mov outsb cmp cmp iret add es stc dec inc cmp test jle cmp daa add or cwtl inc sub insl or push movsl cwtl fs or repnz mov push pop inc imul daa jl movsl cwtl fs xchg mov push pop inc imul sub out or cmp cltd outsb cmp mov cwtl ja out xchg out (bad) xor ja pop xchg fstps mov out fdivrl xchg gs mov mov cs mov js mov insl push mov xor mov dec insl dec mov int jns call imul jmp or xor push movsl cwtl fs in sbb add or cwtl inc sub insl add stos cmp cmp jmp inc sub insl or dec sbb movsl cwtl fs add or cwtl inc sub insl add cmp pop dec les add pop xchg fsts out cmp push insl push icebp and pop es push and lods inc stos mov test sahf stos ret ret es pop sahf pop fiadd and lds xor xchg dec ret fidivr std adc or mov out and pop sahf pop fnop fsubl adc or (bad) ljmp xchg adc outsb test adc ret test cmp insb xchg dec push iret and loope iret cmp les jns frstor das push iret cmp out and iret cmp jecxz cmp ljmp das cmp rcll test push fdivrl xor sar ja jge rol jmp aad test repz jmp mov js xor mov xor inc push repz cmp add pop sarb add jo cmp or adc pusha js pop rcr (bad) loopne or fcomps bound das add jbe adc add test daa add fcomps loopne jno inc jo insb dec or addr16 loopne or in ss add nop in add or fsubs addb dec inc mov cwtl push movl je (bad) xchg fisttpl iret mov popa fsubs cs pop ds pushf sbb jl xor add xorl mov adc scas ficom sub loopne or js push cmp sub pop adc icebp sub and scas push test sbb mov out roll add cmp iret insl cmp les pop jmp sbb stos adc jns sahf jns adc adc adc adc adc adc adc add inc repz push pop rolb adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc or dec push insb dec daa xchg xor dec xchg movsb push iret adc add mov add (bad) adc sub mov mov scas mov stos stos pop fsubrl or push or push repnz mov push add (bad) testb add sahf js ds fsubrl push cmpb aad push int3 cmp aam pop arpl cmp lock sbb and rolb push test adc adc adc inc loopne or inc out inc mov pusha adc mov repz add pop pusha loopne adc loope insl and jp popa out add test out lret add inc (bad) xchg sub rclb xchg sub js push push cmp sub rorl inc sub mov dec dec in add cmp daa add mov dec lret inc cmp ljmp xchg dec out inc add lods xorb cltd inc sbb cmp and test push repz or (bad) lock push push daa test lret rolb push es adc and sbb enter xchg sahf or nop jo or popf mov (bad) cmp and scas insb adcb push inc inc (bad) inc nop mov xchg dec fldenv pushf sub nop dec pop inc adc inc add jo mov inc ja and jbe shlb (bad) mov pusha pop inc pop or add xor sub adc or mov loope adcb and lock es sahf and push addl test nop jno push adc mov out rclb cmp rolb add sub add dec loope inc out (bad) in cmp sbb sbb iret cmp and xchg fiaddl dec add pusha dec push sahf fsubrs mov and mov sub fldl xchg mov add addb loop push sub in jno and or cmp daa mov daa cltd adc and sub daa sbb or and iret cmp pusha and inc pusha and rcrb add lods cmpsb aad movsb add stos fmuls nop fmuls inc mov pusha and rcrb add test aam nop fmuls inc xchg add push and jno jmp sub jmp jno jmp sub cmp and or or mov mov dec sub mov mov pop add add and mov les (bad) les (bad) shlb pusha and je lds or mov addl fdivrl mov js sbb dec cmp fstl ret shl sbb fisub in mov inc cmp or adc and jnp xchg jecxz out jbe xor je mov loope cs enter std dec outsl xor (bad) pop sbb push cs xor mov xchg and leave push repnz xchg mov mov hlt clc add xor arpl mov les out outsb dec lods mov cmovnp es inc lock mov xchg mov pop dec hlt pop lods mov rcr or das lock scas adc (bad) mov dec or js leave add mov or jnp mov loopne mov (bad) sub jo xchg decw lcall xor mov addr16 adc inc lock scas in (bad) jl pop sub push mov mov mov out jbe movsb mov adc stc add insb lahf mov add xchg lret mov and imul xchg icebp push lock xchg imul adc and fdivp mov fstps fwait xchg test bound out mov leave xor sbb js mov lds mov idivl (bad) cmp repz sahf adc dec and icebp jmp ret push cld dec nop pop sub das les jnp xchg jne mov sbb imul arpl and mov (bad) jmp lahf clc fcom gs pushf inc js nop cmp cli out ficomp out push fwait mov repnz mov lcall fdivp mov or (bad) (bad) xor lret xchg arpl loop loope and add (bad) shrl stos ss dec lds jnp in dec outsl xor repnz and or ret ret lods scas (bad) dec pop loope pop xchg dec ret out dec inc mov push lret dec ret out dec inc mov in rol xor xor push adc jp decl lcall addr16 pop int3 cli jl add lock xchg imul roll clc jl popa mov adc mov mov cmc and xchg xor dec mov xchg dec pop and fsubrp cmpb xor pop sbb jno xor dec mov xchg dec pop or adc movsb mov insb stc adc dec movsb cld push push xor arpl mov jnp imull dec jns dec xchg (bad) xor xor push adc jp decl lcall xor mov mov ror xchg repnz mov lret fstl not leave js in (bad) (bad) dec pop mov jge cmpsb ljmp mov pop std jbe pop xor scas inc mov pop idivl inc bound pop cmp aad xor sub and or adc movsb mov jno jnp dec push jp ficompl mov sub cmp test loope aaa push or dec mov cmc and loop sahf (bad) mov movsb xchg sbb push pop and mov mov and fsts push push or mov imul pop fptan mov je push sbb xchg fsubrp sbb stos fsubp cmp movsb stos xchg imul repz aaa sbb mov rorl or jnp notl lcall popa stc ds pmulhuw int sub imul enter cld pop push lret cmpsb in neg repz push push pop leave jp rorb xchg hlt (bad) sarb push pop or pop sub mov add xchg hlt fcompl xchg (bad) pop push push jmp xor push push fisubl mov sbb push notb add inc pop push push or test cmpsl movsl xor xchg outsb lgs in pop sub dec dec mov idivl btr inc xchg lahf cmpsb in mov push ficom imul mov dec fmuls aam add cmp cmpsb sbb dec pop cmpsl or jnp or xchg inc mov repnz clc xchg rcrb fcompl aaa pusha add and jnp pop cmp cli ss or rorb mov xchg nop jle aaa xchg cmc imul popf fimull (bad) cmpsb add xor pop or xchg fmull fdivrp jns add dec adc xorb cld mov pop les xorb dec xchg loop mov push sub test push aad push jle mov sbb lds jbe outsl jecxz inc sbb aaa (bad) jo push xchg test clc aam arpl fbld ret sti pusha xor repz das test cli push fnstcw leave jb inc cmp jle outsb and lods sbb pop jmp ljmp jne sub hlt clc faddl mov xor in add dec push dec idivl jl leave ss icebp (bad) notl loop jg fwait dec jbe xchg push leave adc call (bad) push cwtl or cmp idivl outsb and mov inc fstps or mov lret mov push xchg add popl icebp push fisttp push fidivrl xor leave mov test jge daa cwtl imul cmpsb pop ds sub mov adc data16 inc add aaa and mov dec or into dec jl (bad) push mov xor int pop ja sbb push nopl jle mov imul aaa push sub mov xchg imul inc cmp lcall add sub cmp cwtl ret jnp jmp or mov popa dec dec aad cmp sar sbb sbb loope jbe das in fmuls enter mov push sub xor jno push fwait neg lret xchg mov lahf sub outsb stos ss push popf ds push inc cmp fcomps ss hlt frstor in pusha mov (bad) rorl fwait or outsb sbb ret out pop mov xor xchg ret rcrb sbb adc adc retw mov cmpsb idivl daa and xor sarl or pop ret out cs xor in inc sbb scas ficom push enter mov mov cmp xor shrl aas sbb lcall adc inc pushf (bad) enter inc mov mov jno js xchg outsb xor sarl fistpl dec js (bad) or in or sub shll leave pop push sbb mov xchg mov sub sub int pop imul dec enter dec cmp mov cmp mov lods xor cmc and (bad) dec fs jns and gs out fsubp jnp mov mov push pop int3 idivb lds sbb sub fdivp push add fwait or ficoml inc mov hlt fsubp das dec dec mov jnp outsl and outsl jnp stc mov popf mov inc daa adc fimul jbe push cmp pop icebp ljmp dec mov adc mov sub xchg cmpsb in in ds sub mov mov jb movsb lods lcall add push cwtl or cmp xor adc push iret cltd add xchg mov fsubp js dec mov mov and gs imul scas mov add and gs pop mov lds dec mov mov and pop jnp sbb lcall mov shrb ret push cmp sar pusha xor dec mov mov scas push je lods (bad) xchg jno mov lret mov mov rorb mov xchg xchg pop (bad) jbe mov xlat pop and rcrb dec fisttpl push icebp adc cmp push repnz xor rclb mov in jle ss jns outsb shrb mov sbb xchg fsubp push das dec dec inc mov lret jbe sahf movsb sahf adc jmp bsr int repnz leave ss fdivp or mov jno imulb add movsb popa adc mov (bad) or pop push mov sbb movsl inc cmp lds adc dec or mov sbb sarb xor pop xor dec inc jbe sbb stc mov (bad) jno insb jle stc jg sbb das jae gs repz (bad) xchg lret (bad) int test jnp sbb dec adc push stc imull cmp cmp xorb sub outsb addb loopne mov mov add clc or mov mov in fmuls xchg jge dec (bad) jb jp leave das (bad) jno adc pop les cmp sar pop dec add dec es jnp imul xchg push add repz fldl lock or mov movsb xchg add fisttp inc push xchg nop gs jmp js int3 add lods out jno sub lods adc lods push pop adc push clc xchg rcrb (bad) mov xor movsl out test std mov adc push stc ljmp test loop (bad) jb cmpb adc push jg,pt mov aad ret mov mov addr16 adc fwait or in inc dec or dec mov dec cmp cmp shrb hlt and add jnp inc sahf inc cmovae or inc out jbe sub call adc sbb sub jnp sbb mov outsb pop idivl jnp idivl jae scas add negl add pop repz (bad) lret inc push pop add mov in mov pop pop dec cmpl out jnp cli sbb idivl cs fdivp mov xlat mov jnp imul nop pop fstps fdivp mov into inc rcr out jnp data16 sbb idivl push mov out jnp divl das jnp negl fnsave jnp scas jnp notl xchg pop mov out jnp idivl out mov mov testl das jnp idivl out jnp (bad) mov int jnp sahf icebp sbb scas push pop cli mov idivl scas xchg out scas pop pop ljmp mov xchg lret jl push or push xchg sarb out lret scas jle push mov out int sub ss scas jne mov mov (bad) lret ret fstps pop pop ljmp movsl jnp xchg lret in adc fstpl (bad) jne mov aad or cwtl scas push pop jmp mov push mov pop jnp pop stos jmp ret pop jmp mov push mov xchg lret push mov out into push sub ss mull xchg xlat mov out scas push sub jno (bad) pop sub lret or xchg scas push pop stc add or lcall mov push mov stos jmp ret lea sub pop mov (bad) jb or das jbe mov lret out pop fsubrp movsl jb negl push sarb out jmp mov push mov (bad) jne mov aad or pushf scas push pop jmp mov insb cli mov scas jbe mov mov (bad) xlat mov out mov sub jbe mov jnp scas jnp aad jmp jae mov jnp fsubr dec fsubrp in ret out jnp pop and jl push dec idivl jb (bad) (bad) mov mov out add negl jecxz idivl sub mov mov in mov scas mov fdivp mov mov cmpb jnp idivl mov mov in mov jnp idivl in mov sbb mov idivl mov in ret stos xchg xlat mov mov mov in cmp pop xchg mov xchg mov mov out scas push sub jnp idivl jnp jmp fnstsw cmp or pop scas mov mov mov pop jnp xchg lret idivl jge jnp jmp fsubrl sub lods call outsl (bad) xlat negl pushf xchg mov mov out lret push sub out jle aaa mov mov mov jecxz mov idivl mov out scas push sub jnp idivl mov stc jb sbb mov idivl scas push pop stc add in lret or js out jnp idivl mov lock (bad) je (bad) xlat fs out jnp idivl mov adc bound pop negl sbb mov mov mov mov imul arpl xchg mov mov in adc bound pop (bad) lret in jnp idivl mov pushf sub (bad) sub fimull (bad) fdivp mov and idivl mov or inc inc repnz stos jnp idivl mov fadds jnp idivl idivl fdivp mov inc add and mov mov mov mov pop mov mov mov cmc js fmulp sbb mov mov addb sub outsl jnp idivl mov and fdivp mov mov add pop div fucomp stos (bad) jbe mov mov or adc notb in loop pop sub out jnp idivl and and adc mov idiv mov mov nop and insl out adc jge in mov pushf dec fwait add ja fdivp mov mov adc pop mov imul mov ja out jnp idivl mov addb jl in aad cmp ja out jnp idivl inc add adc mov out jnp idivl mov mov outsl bound sbb pop idivl add mov test mov mov popf out jnp (bad) or adc mov test xor (bad) idivl jnp (bad) mov and mov fadds in rcll push (bad) les mov les or subl fsubrs testb fdivp es in outsl pusha xor fsubrs inc inc ficoml idivl jnp adc rcll fdivp mov and outsl bound out jnp rol stos fdivp mov out jnp mov idivl lods out jnp (bad) xlat add out jnp and mov stos push add faddp dec pusha std out jnp or test out jnp imulb subl mov insl pushf adc fdivp mov fdivp mov mov mov cmp pop xor insb cmp lods (bad) add xor mov push int3 pusha sarb xor insb or inc and lret mov cmp inc lods xchg jg pop xchg jmp fisttp inc jp adc mov lret cmp inc loope sub div mov je vmwrite cmp pop mov mov add push divb jo jnp fdiv test pop xlat lds xlat inc and je rorb pop pop add pop pop mov jnp fdivrs pop loopne in fnstcw loopne sbb dec sub and shrl mov add dec sub data16 add in outsl mov imul loopne gs push fldcw adc fistl sub pop add shlb or pcmpeqw sbb cmpsb pcmpeqw push add jo mov pop mov inc jnp fdivrs push mov pop xchg imul cmpb pop ss fs in fldcw lods mov loopne pop push dec sub jle mov stos or out jnp aaa mov sbb cld mov add pop mov add xchg repnz fucomi movl loopne inc add add add or or mov push hlt push inc sub jns mov addl or or pmaxub mov push divl out jnp add xor push enter int3 add mov add dec add sub mov iret shrl add inc mov mov mov shrb jns adc movsb icebp push mov mov (bad) hlt sahf sub xchg add pop movsl jo cld cwtl xor adc sbb xor add lods mov mov inc xchg inc pop (bad) push stos adc mov add sub mov fmuls sbb xchg test and sub and and fwait sub dec inc add sub xor rcrl test fs stos cmp pushf and adc push ret sbb inc mov pop adc push sub mov shl cwtl add mov shrb dec sbb sti stos and cmp lret stos mov mov or lret pushf or sahf sbb pop jbe mov or lret pop imul and mov sbb stos out cli dec loop addr16 mov fisubl shrb aaa shlb leave jbe mov mov adc push les adc xchg pop jbe (bad) mov jmp mov cli lcall ficompl xchg fidivl cli xchg sbb sub mov data16 movsl xchg insb or ficoml cmc pop lds xor stc add mov and add cmp mov jo leave xor inc cmp mov jbe fisubl shlb cmp pop lock jmp sub cmp ret out stos or jp fisttpl jp lret or add mov or cmp xchg mov sti cli pop clc jmp xlat aad sbb jo mov jmp nop dec cmp loop dec out cmp mov mov jp fisttpl enter xchg jns les es add sahf sbb cmp sahf sbb cli pop clc jmp les fisttpl dec enter xchg jns inc lods dec jmp pop ss test (bad) jmp or lock leave fisub ret imul add mov and sub ljmp mov cltd cmc pop stos mov sub mov mov or mov mov lcall jns ret lcall fcmovb mov mov push pop fdivrs adc lcall in imul mov dec in push cmp and rorb ror xlat xlat movsb cltd cmp es fnstenv mov or lcall jbe mov xor adc jo lcall rolb xlat movsb cltd cmp dec imul (bad) fnstenv mov test jo (bad) clc imul xlat xlat in imul cmpsl movsb cltd cmp cmp es ret cmp jp imul stc add pop popf lods or (bad) sub cli sub and int3 imul lret xchg mov ljmp xlat xlat in imul jo aad aam sub jns ret lcall mov aam popf lods or jo xlat flds jns ret lcall pushf add sub fndisi(8087 cmp xchg sbbl add sub sub ret sbb cmpsl in imul loopne xchg pop jbe cmpl insb add jo or pop jbe mov ficoml xor adc ret out clc fwait ror mov and sbb sbb and cmc mov mov cmp push dec jns movsb insb pop dec sbb mov sub gs adc and cmc xlat fdivs stos or lods dec idiv mull fcmovb mov mov mov cmp cmp add mov and or or mov insl xor add cmp mov mov test (bad) cli push jge mov test or je sbb sbb clc cmpsb mov ret mov and enter mov add sub nop popa mov sbb std adc fistpl mov mov sbb mov lds repnz push sbb cld xchg push mov push aad mov mov jp sbb inc sbb (bad) (bad) in push pop sti push xor adc je cmc cmpsl xchg mov pop mov mov lds xor pop push scas sbb out mov jl rcll sbb jle (bad) jmp pop sub sti mov fistp mov xchg aas pop push cmp pop xor inc push addr16 or lods mov in cs frstor cmc push cmp mov stos mov jmp sbb loope push xor jl cmp das mov pop push scas push sub int nop aam cmc test inc add stos imull shrb sbb sbb and lea dec cli stc fidivl psrlq js clc fwait repz pushf adc mov lea mov push rclb lods imul mov and fstpl lret into stos rorl dec (bad) push in inc gs scas sbb xchg rorb and aas data16 sub adc and lret lock mov jne push xor pop cmp pop mov ljmp (bad) leave adc sub push rclb push sbb xor stos rorl dec sub mov sti cmc jecxz sub je hlt inc jo adc aam mov insb dec sbb clc push scas sbb (bad) push sub fidivl scas jbe loop insb ds xor mov fwait stos pop icebp xor mov cmp testl out mov xchg fdivrs adc fs fwait pop mov mov pop je sub aad je sub mov cmc ds xchg mov inc push fwait push xchg and aam lods in push stos add movsb sti cmc jecxz inc cmp inc gs pop gs pop gs pop gs pop gs pop gs pop gs pop gs pop gs pop gs pop gs pop gs pop gs pop imul outsb xorl fwait fwait repnz imul mov jns inc mov jne inc addr16 inc cs sub mov (bad) rorl mov dec add movsl pop cmpsb sti aaa add pop jno xlat or mov cmpsb jmp dec scas or mov repnz rol mov ljmp jecxz loopne gs outsl mov dec mov cmpsl (bad) es sti stos (bad) sub push xor sbb stos adc outsl mov sbb or mov dec mov xor pop fistl pop mov fwait les mov outsb lds (bad) jge push mov pop je int test data16 pop pop push popf scas or inc mov xor les (bad) (bad) pop gs pop push xchg pop gs outsl mov dec mov stos mov imul stos out jp push or popf outsb sbb mov pop lea pop gs adc imul sub pop addr16 pop gs loope aad jne xchg pop andl pop gs pop adc movsl gs pop mov mov pop aad push pop outsb addr16 pop enter gs pop lods gs loopne andl adc into jae out outsb out adc out into jae xor sahf daa cmp (bad) int out dec jae out jae out int mov jnp out imul iret sbb out jae daa cmp sahf out int mov into jae and addr16 jae fucomp inc pushf rorb in aaa push pop cmp outsb cli mov out out jae (bad) push out jns cmp jae xor jnp out mov pop cld iret into jnp out je ror js out jp cmp insl pop push insb out jae out int xchg into push pushf fstp in out jae cmpsl mov outsb icebp cmp jae gs or jnp out lahf adc jle sahf out int pop into push pushf out outsb addr16 pushf stc cmp xchg test jae out mov out out jae fstp jae cmp jae fucom xor out jae out jae out int and addr16 out data16 cmp cmp pop out mov out dec jae ljmp cmp outsl cmp jae out jmp xor xchg pushf out aad xor pushf idivl into outsl or cltd xor idivl into outsb ljmp in aaa jnp cmp insb popf dec jl (bad) outsb daa cmp jae jle sahf out int cltd dec push or outsb repnz cmp xchg pushf out insb cmpsl xor pushf idivl into outsl or cmp jae fst adc push fwait mov iret xchg pushf fidivrl out into jae iret cmp fsub cmp sahf xor test pushf fstpt stos fxch add cmp mov cmp jae fst insb out jae out into outsb divb xchg pushf fnstcw fwait test int3 movsb out pushf jae addr16 jae out mov out jae out das out adc bnd (bad) cld out jae out int daa xor jle out into jae mov js xor out jae daa cmp cmp (bad) jae xor sahf out int fisttpll addr16 jl out adc ss mov jae cmp jae out test cld out into jae mov iret jae cmp fsubp cmp outsb pop dec xchg lcall fwait ja pop xor out jae iret into jae imul jge out xor into jae cmp push lret dec jae inc sub lahf cltd fxch jae out mov xor sahf pop dec jae mov jae out mov iret jae out leave addr16 inc cmp jae fstp fsub xchg cmpsl jns outsb lock pushf out into stos (bad) jae cmp jae out out es cld rorb pushf out jne cmp jae mov jae out dec cmpsb out jae cmp jae out (bad) es cld fisttpl pushf out jbe daa xor sahf adc mov lcall jae daa xor pushf idivl into outsl or jae pushf divl xor pushf lock push out jae daa cmp into jnp out popf cmp jae jne lcall mov out dec jae ljmp cmp outsl or cltd xchg repz cmp jae fst in out jae out into outsb div jae cmp xchg pushf fnstcw fwait sub add cmp into jae jle sahf out int pushf into push sub outsb repnz inc cmp xchg pushf out outsb addr16 pushf idivl into outsl or gs int out into jae dec into push jmp int out dec jae ljmp cmp outsl cmp cmp (bad) jae cmp push cltd cmp ficom into push cmp stos stos dec jae cmp jae out jmp pop cld rorl pushf out jne cmp movsb out jnp cmp push mov jae out into jae daa cmp jae out cmp jae out jns nop dec jae out popf int3 bnd pushf out into jae sub into jae fsts jae xor cltd aam xor into jnp out leave int3 (bad) pusha repz out int3 in lret pushf icebp test and nop dec jae out lods push into adc repz mov out cmp jae pushf out mov stc cmp enter cltd add cmp cwtl push jl cmp mov sbb add pushf out xchg fxch (bad) imul gs add cmp aam ret out cmp jae into call js mov xor gs stc cmp ljmp int jae out cmpsl xor into jnp out mov sahf xor rcl inc xor out jne fxch (bad) jae out int3 repz mov aam inc cmp jae out mov pushf stc cmp enter cltd add cmp and pushf out mov icebp cmp addr16 out cmp xchg pushf out cmp adc push cwtl cmp mov push data16 push and cmpsl mov jae xor xchg xor cltd insb shl mov push cwtl dec cmp addr16 (bad) pop and dec mov xchg out (bad) loop cltd mov xor pushf dec jae pushf rol or xor cmp add pushf shl loop cmp inc clc or adc adc adc out xchg sbb mov and pop jne mov out sbb in movsl jo push into outsl dec iret mov outsb or leave loop mov lret ret or loopne sub xor cwtl jl sub cmp push xor add jmp sub push push pop pop int add xchg jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out add subl or push push push push push push push out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out test xchg adc adc out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out rorb pop or pop or jae (bad) rcll push rcll push rcll push rcll push out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out out add xchg jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out push pop cmp jae pushf out into jae shll out into jae out into jae inc pushf out stos or es cmp jae out into jae les test dec jae les out adc into pusha rcrl cmp jae out into bound push sarl or cmp jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae mov out into jae pushf out into jae add jae out orb jae out into jae out int3 sub cmp out into jne out fsub cmp jae dec addr16 into jae out adc cmp jae daa cmp xor je out rclb int3 or cmp bound addr16 into je into jae dec add nop pushf out int3 out adcb cmp mov stc into jp dec xchg pushf call adc pop divb (bad) xchg pushf out nop pushf out in xor and jae xchg jle dec jae lds les (bad) cmp add inc adc adc pushf call or cmp mov out add clc daa pushf fsts aam add adc jp int and (bad) dec add negb jae jnp into jae out into jae out into jae out into jae out into jae daa cmp jae les pushf out into jae into jae cmp jae out int3 dec cmp fs into xchg pushf out into jae cmp jae out int3 dec cmp fs into xchg pushf out into jae cmp jae out int3 dec cmp jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into fs jno jno dec adcb lcall daa pop xor test call jge adc test test popa push in ja mov stos push or test test cwtl push mov or test test popa push out insl pusha mov roll inc mov aas inc mov cmp xchg inc movsl cmpsb call into jae icebp push ljmp inc cmpsb mov push loop xor or movsb out pushf les out into insl jns dec xor jae out into jae out into jae out into jae out into jae out int3 pop cmp jae out into jae out into jae out into jae out into jae out pop adc and cmp adc jae sub subb fdivrs into jl dec jae and jae mov jae inc sbb jae ljmp mov cmp sbb pop sub inc lods adc cmpsb aaa push roll mov sub mov addl mov sub add mov or xchg mov in mov fsubr cmp adc and cmp xchg jmp repnz mov into rclw inc in jo sbb xchg mov dec xor add jecxz inc clc aam aaa xchg mov sub jp jge pusha mov out inc and adc mov sbbb jb lea or pushf xchg cltd in loope jae sub adc lret in push test cmpsl xor mov daa mov testb mov pushf lea sarb and je inc or sbb add lds lods sub lds jae jp sbb hlt add movsl mov mov jmpw and sbb jl ret mov push mov mov push sub cmp mov push adc and lcall (bad) sub fcoms mov mov repz arpl lret int3 test or addl push mov add sbb xchg enter shl push cmpb mov mov mov xchg data16 xchg ss popf (bad) and push arpl and pop in outsb sbb loope push pop xchg add lock and mov call pop adc add jl sbb xchg jp xchg icebp add pop sub sub pop lods cltd pop adc add jl sbb call mov fnstenv adc mov inc inc cmp movsl add and mov rorl inc push test fwait inc daa movsb mov outsb leave and and add cli add inc test inc push loope iret inc sbb and pop call push add cmp or aas inc pop push pop and xor add xchg push cwtl dec mov popf dec test mov or sub or mov popa dec ret dec mov and adc fs adc add adcl movsl ret mov or sub add cwtl jo inc sbb imul lcall adc sbb xorb subl insb sub mov jp adc jl pop call inc sbb inc aam sub mov popa dec ret dec mov and sar pmaxub mov mov fcmovnu mulb out jnp and aam syscall fcmovnu negb mov cmp outsl jnp aad imul fiaddl repnz jnp cmpsl enter dec or fidivl mov jnp divl push fdivp ss mov pop out jnp xorb jnp cmp mov movq lret jnp divl xchg mov mov dec outsl jnp cmc dec mov idivl jnp push ja out jnp mov xlat fdivp mov xlat enter dec mov mov aam idivl jnp mov (bad) std out jnp aad (bad) xchg fdivp mov mov inc cmp insb lret scas sbb push mov jnp ror in (bad) stos outsb mov ud2 jp inc pop test sub (bad) dec dec xchg push addl loop (bad) je add mov mov sub cmp pop mov adc push loope push sub inc xchg mov shrl jno add dec mov scas rorb addb sbbb les dec mov push mov mov rolb movsb sub dec aaa lret xchg and ja cmp push dec fs xor sub jge xlat insl mov idivl mov jnp popf sub push mov notl sub xor jnp notl mov pop popf mov out mov push mov mov mov jnp idivl idiv push jnp stc mov sub rcrb mov lret mov int3 xor dec add jnp dec push into dec sub movsl dec inc fnstenv lcall xorb pushf les pop scas jnp add shrb jnp idivl mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jnp mov or mov div cmp fdivp daa outsl jnp idivl jmp mov out jnp testl jnp idivl pop jnp idivl and idivl mov out jnp idivl cmpb add mov jnp stos sub mov nop dec out jnp idivl fisttpl mov mov add cmp jbe fdivp mov dec mov loope mov cmp inc pop jmp sarl and mov xchg mov sub mov bound sbbl push rcrl pusha mov insl test pcmpeqw test dec fdivp jb stc clc or lods inc add scas test das popf dec (bad) mov out jge and outsl les scas mov jle xchg mov jne outsb mov fmull je adc lcall (bad) nop add jo dec xlat jo dec and lahf scas inc test cmpl sbb test call movsb add in jae adc pop jmp jbe fildll jns cmp mov cs aad cmp or addl cli add pop and stos mov std push jne cmp jecxz test test cmc out sub xchg call add idivb je inc cmpsl andl xlat movsl push mov (bad) mov mov test xchg xlat adcl jge test sub jl or xchg mov ja xchg inc cmp push jl ds pcmpeqd and pop neg out sbb fstpl add push mov jnp bsr jnp jmp out add pop mov jo cmp aaa dec fsubrp and jnp bound pop add addb xchg dec xchg shr je sbb inc mov je sbb shr je sbb shr je sbb shr push inc shr icebp je sbb jnp idivl mov mov mov mov jnp outsl jno out jnp idivl jnp jmp xor setge fxsave fdivrl ret and ja pop popf jae fs stos pop cmp adc jle jge jbe cld and xor dec mov dec ja loop xchg enter fistp gs out jnp lcall inc and outsl in add notb idivl mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov outsb aaa sbb push scas pop stos or in lock setl fadds and cmp push lret mov cmp jae out into jae out into jae out into jae repz outsl dec out repz pushf out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out addb or add add add add add mov add add add add add out add add and add push sbb add jbe add out add add and add sub add or add add add add mov add jb add sti add or aam add push add aaa jb add add or enter push add or add inc add dec add bswap add adc add aad add cmp add pop clc add adc add add or add pop clc add gs add adc add pop mov add mov add dec add outsl stos add pop mov add rolb or mov add jnp add sbb add sbb mov add jnp add test add mov add sbb add mov add mov add and add adc add mov add and add daa roll adc add add cwtl mov add daa roll sub add push sldt movsb jns add sbb add push sldt pop test add push add sub add das pop add pop test add ljmp les add stc add sbb add sbb add xchg add into mov add ss add sbb add repnz into mov add ss add cmp add repnz sbb push add loop add cmp add jge add pop add loop add in or add ret pop pop add and add test add inc sub add and add add add add inc mov add and add imul add add dec insl add and add add push pop add pop cmpsb add dec insl add dec sbb add outsb add pop cmpsb add and add dec sbb add outsb add daa int3 add and add sub iret add push movsl add daa int3 add sub add ss add push movsl add push xchg add sub add ss add inc popl add add pop mov add sub add inc popl add add pop mov add sub add sub xchg add push adc add add add sub push add push adc add add pop add add add das push add xor add imul add gs add xor add imul add gs add imul add and add cmpsb add insb stc add ja add imul add add xor add xor add cmpl add jb add xor add cmpl add jb add je add xor rolb mov add cwtl fildl add add add rolb cmp add cwtl fildl add add jns add cmp add cmp add mov add jns add jnp add cmp add mov add mov cli add jle add cmp add cmp add mov jl add add addb add sldt enter aam add addb add sldt aas test add fistp add test add inc cmp add lcall test add inc cmp add add jmp add not add mov add mov add add inc push add not add add add mov add add inc cwtl add add add push push add mov add (bad) bound add add inc add add push add sbb add xchg or add add dec add sbb add xchg or add add dec fldl add add add insl add xchg add xchg add add add dec push add xor add push add xchg add add push add dec lahf add ds add dec iret add cwtl pop add lcall add add dec iret add push mov add add dec sub add add push mov add add popf add lahf jge add add push xor add insl jbe add in add add push mov add js add mov addb push mov add js add adcb add add push push add push stos add adcb add inc add scas test add push sub add testb scas test add push stos add push sub add adc add jmp add pop mov add mov jmp add push sub add add mov push add mov add mov sub add add lods push add mov add mov push add pop mov add mov add mov add rcrb add incl add add pop roll mov add mov add (bad) add sub add add pop roll mov add mov sub add movl add add mov cmpsb add rol add (bad) push add pop roll pop add ret add adc add push add fiaddl add add pop test add sarl add inc add ficom add add pusha add sarl add ret ficom add adc add add popa ret add (bad) ret fisubl add out add pusha add popa ret add fisubl add out add ljmp add add jecxz add icebp into add ljmp add add arpl add icebp into add cld xor add jmp add out add arpl add mov add xor add add out out add repnz add mov add add add add or aaa add cmc sub add add add or pop add cmc sub add adc add add data16 das sub dec sub das xor xor xor xor das push das data16 outsl das js cmp dec xor inc xor inc xor xor xor inc xor xor xor xor xor inc ss ss inc cmp cmp push cmp cmp outsb inc xor inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc dec inc dec inc dec inc dec inc dec inc dec inc push inc push inc arpl inc inc addr16 push imul outsl inc ja xor inc inc inc dec inc dec inc push inc push inc push inc pop inc inc push inc xor inc inc inc inc inc dec inc dec inc dec inc dec inc addr16 imul inc aaa inc inc inc inc inc inc inc addr16 outsl inc jb inc inc inc inc xor inc dec dec das dec dec dec outsl dec inc dec inc dec dec dec inc dec inc dec insb dec addr16 outsb dec inc dec push dec dec dec addr16 inc push push push inc push inc push inc push push push addr16 imul gs push push push outsl push xor push inc push dec push dec push dec push push push push push sub push pop push addr16 outsl push inc push dec pop xor aaa pop inc pop arpl pop inc pop inc pop push pop arpl pop inc pop pop popa inc popa dec popa push popa bound inc arpl jns inc fs fs push outsw cmp addr16 addr16 arpl addr16 push push arpl imul imul push imul jno pop push imul insl push outsb inc outsb inc outsl inc outsl push jo jo jb jae jae je je je jbe jbe ja ja ja ja ja js js jns jns jns jp sub sub inc sub dec sub xor aaa das push das ja jp inc xor inc xor inc xor xor dec ss ss aaa das aaa dec aaa ja xor cmp cmp xor xor inc dec inc pop inc jb das inc inc inc inc inc dec inc ja xor push inc push inc push inc dec inc push dec inc dec inc pop dec dec dec push dec inc dec dec dec das dec inc dec push dec xor inc push inc push inc push bound push dec push dec push insb push push push bound push imul push ja inc push push push jbe xor pop push pop addr16 jae aaa pop dec pop insl pop pop addr16 cmp bound push bound dec fs arpl gs push gs xor addr16 addr16 addr16 addr16 addr16 aaa push push imul imul pop imul xor push push push push imul imul insb inc insl dec insl push outsb xor jae je je je je je jne jne jbe jbe ja ja ja ja js js jns jns jp jp xor xor xor inc xor inc ss ss aaa dec cmp gs jns xor inc dec inc push inc pop inc addr16 ja inc inc push inc inc inc dec inc push inc inc inc dec inc dec inc ja push dec push dec jae aaa dec inc dec jns dec dec outsl dec inc dec ja inc dec cmp dec inc dec jae inc dec dec push dec push outsl push jae xor push dec push dec push inc push dec push dec push push push pop push inc push inc push inc push push push addr16 sub push xor pop xor pop inc pop dec pop insb pop dec pop inc pop push popa inc bound arpl inc pushw addr16 push imul cmp push push imul insb inc insb push insb push outsl inc outsl arpl jae jae jae jae jae jae jne jbe jbe ja ja ja js js jp sub das inc das pop xor inc xor ss ss ss aaa dec cmp dec cmp cmp push inc jb jp push inc pop inc inc inc push inc inc inc inc inc dec inc dec inc push inc push inc imul dec inc dec cmp dec pop dec insb dec das push sub push dec push pop push popa push js dec push push imul pop das pop ss pop insl pop outsl pop pop pop gs dec popa dec fs fs gs xor addr16 fs inc imul inc insb dec insb fs jno je je jbe jbe ja js js jns jp sub xor cmp inc xor xor push xor inc xor xor xor xor xor xor push cmp inc inc cmp inc dec inc push inc jp xor inc inc inc inc inc inc dec dec inc dec sub jp xor push push push xor push jns push push xor push inc pop push pop ja inc pop dec pop outsl popa jbe addr16 das gs addr16 push dec push push imul insb cmp outsl dec outsl jo push jae je jbe sub inc sub inc das push xor push xor fs jp xor inc inc push inc sub inc dec inc push inc xor pop inc inc inc inc inc inc inc push inc push inc push dec xor dec dec push inc push inc push dec push push push pop push ja jo jb ja inc push inc pop xor pop imul push sub push push imul pop push insb sub inc outsb aaa outsb inc outsl push jae je je jbe ja ja js js sub push sub sub inc xor inc xor inc aaa inc aaa inc cmp cmp das inc insl inc dec inc push inc push inc bound dec xor dec cmp push pop push das push xor inc push inc push insl popa push arpl inc gs push addr16 push push insl inc je jne jbe jbe ja ja js jns jp xor xor cmp inc xor outsl xor push ss ss ss cmp jno aaa inc push inc inc inc push inc jbe push inc inc dec inc dec inc dec xor dec push dec push dec dec dec push push das push xor push inc push das push popa push arpl push xor dec push outsl pop push pop jo je inc fs push push push outsl inc outsl dec jo jno jno jb jae jae je jne jbe jbe ja ja ja js jp jp sub jbe dec xor xor push xor xor ss ss aaa inc cmp inc inc inc inc inc insb inc outsb inc dec inc dec inc dec inc inc pop inc dec dec xor dec inc dec cmp push push push xor push addr16 insb push dec pop dec pop pop pop inc pop push pop jno popa bound push imul outsl inc jno jae je je je jne ja jp xor xor inc cmp dec inc insb inc dec inc push dec jp inc dec inc dec pop push inc push inc push gs dec push dec push dec push push push push push outsl push push push dec pop xor pop dec popa inc fs fs fs gs data16 addr16 push push imul dec insb dec insb push insl dec jo jne jbe xor xor xor jno sub cmp xor imul inc pop inc inc dec inc dec jno push push inc push dec push imul outsb push cmp push arpl pop inc pop dec fs insb inc insb outsl inc jno je jbe ja sub jb xor inc xor pop xor xor cmp dec xor push xor xor xor inc cmp outsl inc pop inc imul inc outsb inc das inc cmp dec dec dec dec dec push dec push dec dec dec je outsl push imul cmp push push push outsl push jbe inc push jb dec push dec push push pop inc popa dec cmp addr16 addr16 addr16 push jno imul dec push imul inc insl inc outsb arpl jo jno jb jbe ja ja ja jns jp das cmp aaa push inc ja push inc popa inc gs dec dec inc dec inc dec dec dec dec dec dec dec push dec push dec inc push dec push push push arpl push dec push dec push jae push push push inc popa ss inc popa dec arpl dec addr16 jbe jns jp xor xor xor dec xor pop inc fs gs push pop inc imul pop dec gs push push dec push gs aaa push push push jae inc push push popa dec arpl inc arpl dec push inc push outsb imul push outsl fs jno jno jne jns xor dec xor inc xor outsl xor dec inc inc inc push dec push dec dec dec dec dec das dec push dec cmp push jb insb pop dec fs gs inc gs addr16 push push jbe inc outsl push jo jae jae jae jbe js jns jns jp jp jp jp sub push xor push xor push cmp bound inc dec inc outsl dec push dec dec dec push push popa push inc push dec push push dec push jne js push imul jo jno jno jb jb jb je ja js js jns jns jns jp jp inc push inc xor inc inc inc xor inc imul imul jno popa xor dec insl push je ja ja js jns das xor aaa outsl inc jne xor inc jno dec dec inc dec inc dec push dec imul pop push outsl push push pop dec popa inc popa inc fs addr16 push insb xor push jno jno jb jne jbe jbe ja jns jp sub das inc xor aaa dec inc outsb inc arpl dec imul push push inc push dec push imul push gs jno jae push popa inc popa push jbe imul imul push jbe jbe jbe ja js cmp xor dec inc dec arpl push ja dec gs push pop outsl xor aaa jne jbe ja js jns sub push jns inc aaa dec cmp insb inc xor inc dec inc dec dec dec push xor xor inc push push push jne push pop xor imul insb outsl insb jno xor jno je je je je jne jne jne ja js jp jp das xor imul inc imul xor dec pop dec ja cmp push dec push pop push aaa push jns imul outsb push jns bound arpl inc push dec jno jae jae je je je je jne jbe das push xor inc xor imul inc addr16 cmp dec dec insl dec cmp push dec jns inc push push push jb push insb push insl push insb push insl pop push pop ja pop pop imul jbe imul push xor imul jo inc outsb inc jae jae je je jne jbe jbe jbe js jp xor pop xor xor inc dec ss dec dec dec sub dec dec push addr16 outsb push insb popa push popa pop bound push jo inc imul je ja xor push xor push xor xor ss push cmp sub dec inc dec dec dec sub dec inc dec dec dec push push inc push dec push imul push js push push jns dec push ja sub arpl je bound push insb jp arpl ss jns jns jns jp xor xor inc inc dec inc je addr16 ja dec dec addr16 dec push jno push push jp jp inc push imul push jb insb imul dec insb jb inc jae jae jae jae jae jne jbe jbe js js js jns sub xor xor inc push inc jp inc inc inc push outsl push inc pop jb push pop jb xor gs data16 push insb insb jae inc insl dec insl push outsb jb dec jno jb jb je je jbe ja das outsb xor jae aaa cmp sub dec das dec xor push outsb push push dec pop je inc arpl addr16 insl imul jo jno jae jae ja jns xor insl xor insl xor pop inc bound dec inc dec xor das dec dec push dec push push push xor push push fs inc push inc pop jp jp imul imul dec insl push insl ja pop jb je je jne jne jne jne jne jbe ja jns jp sub push cmp cmp inc jb dec dec xor dec dec pop dec dec dec inc dec xor inc push xor pop push bound jae push push push jo ja jns xor push xor xor jp push push ja gs push arpl push imul cmp js jns xor cmp pop cmp push cmp dec dec inc dec imul push imul push bound push outsw outsl jb xor je jbe jbe ja js jns sub dec das imul xor xor data16 cmp imul inc push inc insb inc dec dec cmp dec inc dec jno insl dec jns inc dec push insb push jne dec push dec push push push push pop xor pop push gs dec push js inc jno ja cmp cmp outsl cmp push inc jbe xor push jb dec push inc push push push pop pop inc pop xor arpl push imul insl inc outsb cmp jae je je jbe jp sub push das imul cmp jne push cmp sub dec xor dec aaa dec imul dec jb xor push push jbe push bound jb dec push jb cmp je je das dec inc jbe inc dec insb pop push pop dec imul xor jbe inc xor xor jns push dec push dec jno imul push push imul push push push fs insw imul outsb je jbe jp jp xor inc xor dec addr16 cmp push inc push jns inc addr16 push js js xor inc dec push jo arpl xor xor outsl addr16 ja xor das xor jae inc dec pop push pop push push push bound xor jne jbe ja xor xor push dec pop pop bound insl data16 imul cmp push xor imul outsl inc jae pop dec push dec inc dec push push dec pop xor jns xor xor jbe xor inc inc inc push dec ss push push ss xor push sub push addr16 bound jbe push addr16 addr16 das outsl dec jb je je jbe ja jns jp xor dec xor pop ss push inc xor inc pop dec push dec push dec jns xor push xor jne xor addr16 inc imul dec jbe jns sub imul inc xor aaa push cmp push dec push fs gs dec popa dec imul dec xor popa xor push xor data16 das dec xor arpl push push push ss cmp jae jns xor cmp cmp inc dec dec jno xor dec jne jo push pop ss push data16 push outsl data16 push push dec push pop jae js sub inc xor cmp das inc imul pop inc pop dec bound push xor cmp jno arpl push dec push dec xor jp gs push insl data16 sub xor inc pop dec pop dec sub arpl pop fs xor insb das jbe xor arpl inc cmp popa inc cmp imul push push imul push jbe ja js xor xor inc dec inc dec outsw ja js push xor outsb xor dec inc jb pop dec insl dec cmp push cmp push imul imul outsb gs jno ja jns jp jp jp xor outsl xor ss ss dec pop dec jae jno pop push dec push jae ja dec pop push jb xor pop popaw bound imul inc js xor das xor push ss ss dec inc xor dec dec push pop push xor pop inc bound data16 jb xor jbe inc jp dec dec dec dec xor push inc push xor push jbe ja push js jns sub sub jo xor pop ss ss arpl inc jno ss dec dec sub dec jbe jbe inc push dec push jbe jbe inc pop jbe sub bound sub insb ja xor jne jne js jns xor dec cmp inc inc popa inc js ss popa inc arpl inc dec inc push inc dec inc inc push sub push inc push je sub jbe js jp cmp push inc push inc push inc js inc inc push inc push dec push dec push dec jbe push imul imul ja xor push xor jp push inc jo jne push inc imul inc ja jns inc dec xor dec xor dec jns push dec imul push push outsb push je xor pop push pop outsb pop jo jns pop bound bound push bound bound outsb arpl arpl arpl outsb fs insl push push je jne je push js js push cmp xor dec push dec ja push push push pop outsb pop insb popa dec gs gs imul cmp inc je jne push dec dec dec imul push push push pop pop push bound ja jbe jp inc imul bound insb dec jne push push xor inc push dec xor inc addr16 inc ja xor ss imul inc push xor push dec push pop push inc push dec pop cmp push outsb inc jo jne jp xor jb jp je push dec xor push xor push xor popa xor arpl fs imul push dec jne insl dec ja xor pop xor bound arpl gs inc bound dec jp dec outsl cmp jno xor js push xor addr16 xor fs xor data16 cmp insl arpl jae jbe jp sub sub arpl dec das push jno xor jb dec xor push xor pop xor js sub ss sub xor insl inc push inc pop inc inc jno outsb dec imul dec xor dec arpl push js outsb push inc push push push pop push inc push push push jns jae fs jp arpl fs fs cmp imul push popa insb outsb insl sub insl js sub outsl push outsl push jno jno je jne jne jbe jbe jbe ja js js jns jp jp xor xor push xor xor push inc jae xor inc bound dec imul dec jno pop dec push dec jo je push push xor push push push pop imul jns push gs data16 push fs bound outsb bound je jne jne jne jbe js js jns das dec xor je push xor pop inc popa inc popa inc gs outsl inc xor dec xor cmp jns xor dec popa push xor push jns inc pop sub popa outsb bound arpl jne inc imul jno je xor ss jbe aaa addr16 imul jno jne jo jno je js dec dec imul 