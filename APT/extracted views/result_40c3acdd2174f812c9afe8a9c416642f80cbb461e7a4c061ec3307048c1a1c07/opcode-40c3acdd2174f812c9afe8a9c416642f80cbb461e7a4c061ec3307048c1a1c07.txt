xor add add add add add add add add add add aas add push sub add add add xor add add add add adc add add sub add xor add add adc jae add or jae add push or sti mov mov push mov or or add mov add add add add add add add push add add add flds add mov add push add add add add and add push outsl add add adc xchg sub outsb push adc pop aas pop bound adc and and push mov outsl add add pop or adc and and cmp (bad) incl or sbb add or adc and and clc negb (bad) call add pop adc or push xlat call fisttp popa cmp (bad) (bad) call push pop jae add or pop adc and out and cmp (bad) (bad) lcall lea add add or ret mov imul cld (bad) (bad) incl or add push adc and push out pop and cmp (bad) (bad) call push push adc or loop rcrl in jmp (bad) (bad) decl imul and ret pop and das popa cmp add xor and sub and push add (bad) (bad) incl push adc adc or add push adc sub add adc pop add add add add adc addb add and add add and add push add or and or xchg and (bad) scas mull adc and inc and add jb add mov add adc add bound add add add add add add add add add stos add add (bad) call add add add add add add add add add add add add add dec add add add add add add add add add and add add add add add add add add xchg add add add add add add sbb or push and adc pop adc adc adc and adc pop sbb adc adc adc fstpt (bad) (bad) call or out pushf add sar cmp (bad) call pop adc xchg adc and pop mov add (bad) call adc or iret lcall stc xchg popa cmp (bad) (bad) call pop pop movups pop setne pop setne adc or and xchg (bad) call adc adc incl jbe pop and cmp add add pop scas in and cmp pop pop or pop pop or popa sahf adc pop or pop pop or or or popa sahf adc pop or xchg or or pop pop push adc pop push xchg or push xchg popa sahf adc test and xorl pop pop adc adc mov and pusha imul call add adc or push or and in jb and (bad) call pop pop adc pop xchg or xchg popa sahf adc leave mov jmp out popa cmp std (bad) lcall adc adc adc loopne pop aam and inc (bad) fdivrp (bad) call or adc or out pushf les xchg ljmp (bad) call pop pop or pop pop or popa sahf adc sbb sub pop and cmp pop adc pop adc sahf and or (bad) lcall adc or or pop inc and pop and add popa cmp (bad) call or adc or and int3 (bad) and dec ljmp (bad) call pop sbb pop sbb sahf adc sbb pop sbb sahf adc xor push dec pop and loop dec popa cmp or and add or add add adc pop pop adc adc dec xchg pop insb pop and cmp cld (bad) call or push and adc rcrb pop pop adc adc push rcrb mov pop and mov inc popa cmp cld (bad) call pop sbb pop sbb sahf adc sarl cwtl pop and (bad) imul cld (bad) call or shll into jae and inc dec sti popa cmp push adc in cmc or rorb popa cmp or sbb or add sahf adc pop adc or mov lahf sbbl ret lods adc popa cld (bad) incl sbb lea add add or or stos negl pop and repz popa cmp (bad) call pop sbb or pop push adc push xchg or xchg popa sahf adc pop or pop pop or popa sahf adc std popf scas repnz and xchg cli popa cmp cld (bad) call pop push adc push xchg or xchg popa sahf adc out outsb (bad) pop and js shlb ljmp push outsb das or ss jp and cmpb and (bad) jmp scas bound or out cmp (bad) (bad) popa cmp pop sbb pop sbb sahf adc sbb pop sbb or and cmp int3 pop and mov movsl popa cmp adc and sbb cmp (bad) call adc push dec pop and xor sti (bad) decl or sbb or dec (bad) mov and mov cmp (bad) decl or or popa or xchg cmp or add add addb add add add xor add add add add add std mov mov lcall push or xor jns lcall adc adc add mov add add add into add add add add add add add add add add add add add add add add cmp add in add cmp add add bound add pop and and and arpl xchg add (bad) (bad) (bad) aas pop adc adc and and js cwtl popa cmp (bad) (bad) jle add add adc push adc pop sub add or pop and outsb sbb pop and lods js popa cmp (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc pop and test push pop and pop xlat pop popa cmp (bad) (bad) call push movsl add add or pop and mov in aas popa cmp (bad) (bad) call add adc adc and les iret popa cmp (bad) (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc mov test cmc xor (bad) call add add sub add or add or add or push adc and and inc popa cmp (bad) incl outsb sbb or das (bad) cmp push pop sbb and (bad) incl outsb pop push or add fldln2 and or and loope cmp (bad) incl outsb sbb or sbb xorb (bad) (bad) std (bad) call pop and pop jmp lods lea loope (bad) call lea add sbb add or (bad) sbb add sbb pop add or push mov or pop and scas xchg pop and mov lods std (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb or or add jle add add or add or or add add or pop and mov and inc icebp jb cmp sub add xor add add add add add and dec pop and sub popa adc add push or add adc and das xor mov pop adc adc add sahf (bad) (bad) dec add add add add add add add add add add add add add add add jb add or add pop add add add add add add add add mov add add adc push adc pop sub add or pop and and pop and scas sbb (bad) decl push mov or pop and cmc fnstcw and xor pop (bad) (bad) incl outsb sbb or xor push and cmp (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc es inc pop and cmp (bad) (bad) incl sbb add pop and mov cltd in out mov (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb or pop and clc add inc sahf divb popa cmp add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc pop and and inc xor (bad) (bad) call pop and std and xor repnz (bad) incl outsb pop push or push sub and dec inc jmp (bad) (bad) call add add sub add or add or add or push adc and and cmp std (bad) call lea add sbb divb loop add mov add add or (bad) sbb add sbb pop add or pop and push add test cltd std (bad) call pop and and in arpl xchg (bad) incl outsb push push or (bad) (bad) jno sub and adc and dec xchg inc pop popa cmp (bad) call push movsl add add or pop and and (bad) icebp adc dec std (bad) incl and (bad) (bad) aas pop adc adc and mov inc pop and jle popa cmp add or add add or add or or add add or pop and lock pop and leave and popa cmp cld (bad) incl sub add xor add add add add add ja cmp pop and push add sahf (bad) jp and rorl push popa and pop inc adc add leave add add add add add add add jecxz add fiaddl add xchg add insb add add add add add add add add add add add add scas add add add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc pop and enter and inc scas adc dec (bad) (bad) call pop and pop pop and and aaa (bad) (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb or pop and fs and mov in (bad) decl push mov or pop and fprem1 mov mov (bad) call add add sub add or add or add or push adc and and cmp add add adc push adc pop sub add or pop and cmpsb sub pop and cmp (bad) incl and (bad) (bad) aas pop adc adc and pop push gs and cmp (bad) (bad) jle add add or (bad) sbb add sbb pop add or pop and clc cmpsl jmp sub (bad) (bad) call push movsl add add or pop and and cmp (bad) incl outsb push push or js sbb and push iret push and (bad) incl sbb add outsb sbb or add out and sub adc and frstor (bad) (bad) incl outsb pop push or std pop jle and mov std (bad) call lea add sbb push das jae and cmp add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc pushf jno pop and sbb popa cmp (bad) incl pop push or add adc adc and lahf gs and cltd popa cmp std (bad) ljmp or add jle add add or add or or add add or pop and in in pop and cmp std (bad) call pop and mov or and mov lods popa cmp cld (bad) incl sub add xor add add add add add adc and sub sbb add pop push or add adc and pop sbb cmp pop adc adc add xchg add add add add add add add js add sti add add add add add add add add (bad) (bad) (bad) fild add add add bound add adc and and sahf inc sbb lcall dec pop and mov mov add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb or pop and sub adc aaa (bad) (bad) decl push mov or pop and sub test cmp (bad) incl outsb push push or addl and dec sub add (bad) incl outsb sbb or adc loop and loope sahf and loope or pop popa cmp (bad) (bad) call lea add sbb add or (bad) sbb add sbb pop add or pop and and cmp or add jle add add or add or or add add or pop and or cmp inc lcall push outsb sbb or lods les icebp and pop sub (bad) (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc sbb or add outsl or add adc or push adc and and or popa cmp std (bad) (bad) jle add add adc push adc pop sub add or push movsl add add or pop and and pop add cmp std (bad) incl and (bad) (bad) aas pop adc adc and mov fs and cmpsb jns popa cmp bound add pop and lret pop and cmp add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc pop and notb les jg nop shlb std (bad) incl sub adc or fiadd add add add add sub and or shlb add push or (bad) out imul pop pop adc adc add lcall add add add add add add dec add add add add add add add push add add add add add add add add add add insl add add lea add sbb or add mov xchg jle add add or (bad) sbb add sbb pop add or push mov or pop and and (bad) xchg gs (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb or pop and add pop and cmp (bad) (bad) incl outsb sbb or enter and (bad) xor pop and push insl pop popa cmp (bad) (bad) incl and (bad) (bad) aas pop adc add bound add pop and pop (bad) pop and cmp (bad) (bad) ljmp or add jle add add or add or or add add or pop and mov scas xchg sub lahf (bad) (bad) call add adc adc and imul (bad) (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc mov mov lock popa cmp (bad) (bad) call push movsl add add or pop and and adc add add sub add or add or add or push jle add add adc push adc pop sub add or pop and fs nop pop jecxz cmp std (bad) incl outsb sbb or lret mov xchg cmp outsb push push or gs xchg and popa and and (bad) call pop and and jge popa cmp add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc pop and movsb pop pop and cmp sub add xor or add add add add add add add add adc push add add adc jnp add add or add add or (bad) clc scas and and inc or add sub add add add add add add add xor add ret (bad) (bad) call add add add cmp add add add add add add aaa or ret mov push and popa je and pop idiv pop popa sub dec lods pop sub add bound jnp add add add add shlb push add add and add bound add add and and cmp js cmp (bad) incl and add jnp add add fs jge add add and out push pop and cmp (bad) (bad) incl add add add bound jnp add add add add shlb push add add and add bound add add and mov jle and cmp (bad) (bad) incl push jge add add and add add add add add add sbb add add jnp add add add add xor and cmpsl fbld xchg out mov push adc cmp cmp jnp add add pop jge add add and add pop jge add add sbb loope cmp jnp add add aaa or imul and movsb leave push and repz popa cmp (bad) call sub adc push add add add add adc add add add pop add pop pop bound jge add add add add xor add add add or inc and shll jp push and add add fdivr (bad) incl add pop add add add add add add add loopne add add sub add push push pop pop or dec push mov sub push outsb pop add add add pop pop bound or loope aad and shll jp sub adc push add add adc or cmpsl loop dec and mov sbb inc push add add add add add add (bad) (bad) jmp add add add bound add sub jnp add add or xchg inc mov pop and gs sub or sbb pop and repnz int3 popa sub jnp add add loopne add add add or add pop or pop pop or ja,pn jl popl push xor and xchg mov (bad) std sbb (bad) incl pop add add add pop pop bound add adc push add add add add adc or or or mov xchg and and inc or add lret (bad) (bad) incl add add add jnp add adc add add add xchg add add add add cmp or jnp add add loopne add add add or add or mov mov pop pop bound or pop or add xchg and imul popa sub adc dec pop push outsl pop and pop mov (bad) (bad) incl or adc add mov pop and dec popa cmp (bad) decl add add add or in insl or sub and cmp (bad) (bad) incl sub add adc push add add adc or or or sub imul cltd and in popa and inc add add add add add add (bad) (bad) (bad) cmp add sub add jmp push and add push pop bound push or pop or pop pop pop bound or pop or add std aas int3 push pop and cmp add push pop loopne add add add or add or lds mov sub adc add add add adc add add add push jge add add cld adc frstor and pop add add add add add add add sar (bad) (bad) cmp add jbe add sub pop or and or pop and inc popa sub pop and int sbb and scas (bad) popa sub add add or and mov int3 movsb sahf sub sbb or xor and ss inc and add add add bound jnp add add add add shlb push add add lahf lahf loope cmp (bad) ljmp add add xor or add add add add sub xor add add adc imul and sbb addr16 and add (bad) (bad) incl add add add inc add add add sub add add add bound jnp add add add add shlb push add add (bad) fprem1 and jnp add add bound add add and stos push dec pop and aas xor popa sub add add add xor and sub and cmp (bad) ljmp add add xor add add or add add add add and (bad) repnz pop mov pop or or add xor add lahf add add (bad) (bad) push add add add add add add add add add add in add add pop bound adc pusha or and add add and sub and add add (bad) pop popa sub and inc mov xor and test bound cmp (bad) incl jnp add add adc or xor pop loope cmp (bad) call add ja and jns dec popa cmp (bad) incl pop or push pop pop pop adc push adc pop pop pop or fdivs test and (bad) call or or adc sti pop and push sbb cmp push bound adc cs and cmp (bad) (bad) incl push bound jnp add add add add shlb adc mov jo popa cmp (bad) (bad) incl push jge add add pop jge add add sub add xor add add add add adc sub add or add xor push add add add adc and add add lea add add add add and add add lea add add add add pop or lea add add add add pop or lea add add add add pop or lea add add add add pop or lea add add add add jae add push jge add add jae add push jge add add jae add push jge add add pop jb lea add add add add sbb lea add add add add jae add push jge add add jae add push jge add add sbb add push jge add add sub add or mov mov and (bad) sbb inc push add add add dec add add add aam (bad) pushl add add add add arpl jnp add add popl add add or add addl pop pop or (bad) fimul imulb mov and je mov jg fisubrl sub add add or and push cmp mov push push or bnd and repnz xchg and (bad) ljmp adc add add jnp add add jp,pn repz pop shll or mov sbb add add fdivr (bad) lcall add add add add add sub jge add add and and out pop popa sub add jnp add add sub add or add add jnp add add add add sub add or add add add outsl sub add pop and daa or and mov popa sub add add add add adc jnp add add add and add sub add xor add add pop pop bound add add add outsl sbb jnp add add outsl sbb push pop pop jge add add add add xor add add adc jnp add add outsl adc add and push or and xchg push jne and inc sbb add xchg (bad) decl add cmp add pop add add add add add add add add add add add add add add add add add add add mov add sbb add push add add add add add add add add add cmp and xlat mov int loopne cmp (bad) incl add add add or nop or push and cmp (bad) incl jnp add add and add or aam dec js and stc fcmove popa cmp (bad) (bad) call or and jb pop and nop scas mov daa (bad) (bad) incl jnp add add loopne add add sub add push or sbb pop and add (bad) incl jnp add add loopne add add sub add push pop pop pop or and and cmp (bad) (bad) incl sbb or push cltd lods arpl test and (bad) incl jnp add add push add push add add add push add push add add or add or push jp out pop and and nop (bad) (bad) incl sbb pop or fadds (bad) (bad) incl pop jb or or sbb and je aaa and (bad) decl and jae jnp and inc popa cmp (bad) incl jnp add add loopne add add sub add push or (bad) cli das or je mov popa cmp (bad) (bad) incl jnp add add loopne add add sub add push or add (bad) push pop and add int3 popa cmp jnp add add add add add sub add push or and fwait out pop and cmp std (bad) decl and xchg xchg pop and cmp std (bad) incl pop or or test sub and pop imul cmp and xchg adc mov (bad) decl and andl mov std (bad) call or and or fcomps std (bad) incl pop pop or and adc xchg loop popa cmp incl jnp add add loopne add add sub add push push pop pop or cs (bad) incl jnp add add loopne add add sub add push pop pop or outsb mov std (bad) incl jnp add add loopne add add sub add push add add add loopne add add sub add push or jno pop repnz and (bad) cld (bad) ljmp adc or incl add or add add add sbb add adc (bad) adc and pop dec stos lahf popa and pop inc cmp add and add stos add add add add add add add add add add add add add imul add add add add add add mov add add in add add push add sahf add add add add add add add pop add add testb add add add add add add cmpsb add add push add outsb add add add add add add add int add test add add add sahf add add push add lret add push add add add in add add add add (bad) (bad) pushl add add add add add cmp push add adc and enter and mov popa cmp (bad) (bad) call mov enter and cmp (bad) (bad) incl jnp add add add add add popl add add jnp add add or add sub and hlt roll sub and or or test shrb cmp or or and add incl jnp add add or add push adc sub add and in mov call add or adc push mov fidivrl imul and icebp dec pop and cmp (bad) incl add add jnp add add push add push pop or mov mov cmp popa cmp (bad) (bad) incl outsb adc mov aam sub and ds repz (bad) incl jnp add add pop outsl xor add adc and and cmp std (bad) incl add add add push sbb adc add sbb or dec xlat loop cmp std (bad) decl adc mov mov ds pushf popa cmp std (bad) lcall adc push pop pop pop bound adc and mov pop pop and sti adc cmp or and dec xchg fsubl test adc and mov jle (bad) call or (bad) loop jno (bad) decl adc or fs (bad) call or adc adc and clc sti jecxz popa cmp (bad) call mov loop xor pushl mov popa cmp std (bad) call mov cmc xor push or and (bad) call or or xchg popf out and cwtl popa cmp and data16 mov add (bad) incl jnp add add add add add popl add add jnp add add or add sub and sub and es cld (bad) incl adc rorl and push cld jmp cld (bad) incl jnp add add sub jnp add add adc add adc and or pop and repz mov (bad) call add add cmp popa mov add (bad) call add add add adc add add add add add add bound or popl add add jnp add add or add sub and mov and addr16 and (bad) call mov sbb add sbb (bad) incl jnp add add jnp add add outsl xor add outsl xor add adc and sub mov cmp sti (bad) incl jnp add add add add add bound or popl add add jnp add add or add sub in and divb dec and test popa cmp adc mov ss pop and int das popa cmp jnp add add jnp add add add and add adc and jne (bad) incl jnp add add add add add popl add add jnp add add or add pop or not pop hlt and push xchg shlb incl jnp add add add add add popl add add jnp add add or add sub cmc mov or and (bad) call add xor add push or mov adc add cmp popa cmp cli (bad) incl jnp add add outsl xor add adc adc sub add push sub jnp and pop lahf addr16 dec mov cmp add push add adc and lahf inc and xor jge adc and mov mov (bad) incl add add add adc jnp add add push sub add push pop or mov and push and cmp (bad) call add add fcmovnb pop pop and in push popa cmp (bad) call or mov sub and repz push and xor popa cmp cli (bad) incl jnp add add add add add (bad) loopne add add add add add or add adc sub add add add add jnp add add push outsl and add adc adc and adc in call sar (bad) incl jnp add add adc outsl das add push adc adc scas cmp jnp add add jnp add add or add push sbb or pop dec stc xchg cmp add add add or sbb and cltd (bad) lock push jnp popf pop popa cmp decl or popa leave ficomp outsl xor pop popa cmp (bad) incl jnp add add add push and mov cli cmp (bad) incl jnp add add jnp add add add jnp add add outsl xor add outsl and or mov lods je pop and xor or (bad) call add add push cs mov clc (bad) call mov lea mov fdivrp (bad) call add xor jnp add add or sbb add loopne add add add add add or or fwait or pop and cmp adc xor and jbe lods and rorl and (bad) call mov enter and fdiv adc ja (bad) incl or add add add jnp add add or add push pop adc adc and jno scas pop and cmp (bad) call add add push adc and and loopne popa cmp clc (bad) call add aaa add push adc and mov cmp clc (bad) ljmp add xor add add add add add xchg pop or add xchg pop or and adc sub mov and pop inc or add ret (bad) mov add add add pushf add add add outsb add add add add add add int add add add push add push add push sub add push add sub add push adc and mov loopne inc leave popa sub adc jo sbbb leave in xor add adc and jmp jno cld aam cmp call push and sbb pop and sub popa cmp (bad) incl sbb adc and lret pop in pop and push addb cmp (bad) incl sbb adc and cmp lcall popa cmp (bad) (bad) call add pop adc push pop pop pop pop bound add xchg add add push (bad) (bad) call add imul and es (bad) (bad) ljmp add xor pop add add add adc sbb add jne jp and or pop inc add add xor add add add fdivr (bad) lcall add add add aaa or mov (bad) loope sub and fnstcw test aaa pop popa sub add push and lahf rcrl insb pusha test popa sub xor lret add jnp add add and aam loopne popa and pop add add add add (bad) (bad) jmp add add add add lea add add jge add add and sbb mov ljmp sbb add loopne add add sbb add push addl jnp add add loopne add add sbb add push addl insb cmpsb sbb addl fs adc and out dec ds cmp (bad) incl add and cld mov and adc cmp (bad) incl pop pop or and jecxz pop and mov inc (bad) (bad) ljmp add adc add aad add add jl add add or add push or fwait decl test cld popa and pop add add (bad) (bad) call add add add push add add add add xchg add add and and push inc popa sub add add or add add add or add pop and and nop and sub add or insb push mov and test (bad) push pop pop or and and push loop cmp incl jnp add add loopne add add sub add add add add loopne add add sub add and loope mov ds (bad) ljmp add add xor add jl add add sub add push cmp paddsb sarl cmp or add mov add add add add add sub add sar (bad) (bad) jl add cmp jnp add add loopne add add add or pop and jp insb pop and leave push jo sub and mov add add loopne add add add or or and and pop and cmp (bad) incl add add sub or and and stc sbb cmp (bad) lcall or jl add add sub add push sub and and adc (bad) push or (bad) incl sub adc add inc add add add adc pop adc lea add add add add pop adc lea add add add add jl add add adc add add adc add jae add push jge add add sub add or add xor add add or jnp add add test add and dec and imul pop or inc or add rolb add add (bad) (bad) pushl add addl add add test add mov add add add and add ljmp add add add add xor and sub and enter or xchg lock pop popa sub add loopne or add sub add push and insb and addb jge add add mov out cmp (bad) incl push loopne or add jge add add and gs pop and inc jnp popa cmp (bad) ljmp or and subb and cmp jnp add add xor and sub and arpl jl imul incl pop pop or and ss pop and add add (bad) call or and into xchg add (bad) incl push xor and inc cmp push and add ss (bad) incl pop add pop pop bound pop jge add add add and add add add add jnp add add pop pop pop bound or mov mov stos push (bad) (bad) ljmp add add xor add add add add jnp add add pop pop pop bound and loope and and aaa add or pop inc add (bad) (bad) incl add add add pop add add add sub push xor and mov and lods inc sub jnp add add loopne or add sub add push pop pop pop or pop (bad) cld push sub pop push jge pop and sub adc push add add add add adc add add add add add add pop pop bound add add add pop pop pop arpl add add xor add add add add adc jnp add add add sub add push loopne or add add sub add sub adc push add add adc jnp add add add sub add push loopne or add add add sub add sub add adc add pop add add add adc sub add or add xor adc add add add add add add lea add add add add add add xor jno add or add push or pop sub adc or pop inc add add add add add add aaa add add (bad) (bad) ljmp inc push and add add or mov pop or sub and rcrl and jnp add add popl add add or add push pop pop or adc jmp sub xchg ss and and popa sub adc add add or (bad) mov sub arpl les and add add xor add add add loopne (bad) ljmp xor pop bound jnp add add loopne add add add or add pusha or and add add and mov sub mov jg sub xor add add adc or cmp push pop or or add mov add add add add add in add testl add mov add add add cmp add add add (bad) adc and pop sbb lods push and add add or push cltd (bad) and cmp inc and pop bound jnp add add loopne add add add or add pusha or dec rorl dec cmp (bad) incl and add add and cmp pop and aam jl cmp (bad) incl pop bound pusha or and call lret push cmp and shl pop and (bad) icebp popa cmp (bad) (bad) incl or or inc out js and sub and js pop popa cmp (bad) (bad) incl jnp add add pop pop push bound pop loopne add add add or add or and (bad) sub push test (bad) (bad) decl and and test int (bad) incl shrb add add xor push add adc jnp add add cs and xchg outsl and jne sbb or pop inc add add push add add add add add add (bad) (bad) ljmp cmp add lea add add add add and and fsubrs mov ret add jge add add push jge add add push jge add add test sub xor addb add add adc sub arpl pop stc shll or pop inc add add add add add add add (bad) (bad) call add sub add add add and imul stos popa sub add or aaa xchg and add pop and test jle popa sub add add push jge add add and mov or ret addb sub popa add add add adc sub add push add and cwtl dec mov pop inc add add loopne (bad) incl add add add add xor jnp add add imul add add add add add imul push and gs and sbb popf mov sub adc push add add add jnp add add jnp add add or out rcl and or add add add (bad) (bad) jmp add ja add dec add add xchg add add jnp add add jnp add add jnp add add outsl adc add and enter mov jnp add add jnp add add or iret (bad) xor and out mov and popa sub add add and clc mov pop and cmp (bad) ljmp pop and test push pop and cmp (bad) incl sub mov and sbb ret and enter popa cmp (bad) (bad) incl add add add sub add add add xor add add or jnp add add pop pop pop or shlb aam cltd push mov pop or or add pop add add add add (bad) (bad) pushl add add add add add add add add add add repnz add add add add or mov hlt lcall sbb and add add add or and add lret popa sub add and add or pop jge add add loopne jnp add add and xchg pushf add add add jnp add add or bound push and stos repnz (bad) call or and and cmp add add add or fnsave and and mov or add enter cmp (bad) (bad) incl pop adc and mov (bad) incl xor (bad) cli and cs sti and (bad) incl sub add push or stc sti or jecxz (bad) sar (bad) ljmp adc push add add add jnp add add and add or pop jge add add loopne pushf add add add jnp add add aaa and test cmpb or pop inc add add loopne (bad) call add add add add adc add pop and and inc or into sub xor jne add add jnp add add pop pop pop or jmp xor sub or pop inc add add and add add add cmp add fdivr (bad) ljmp cmp add add add or out sbb inc and rcrb and test pop popa sub add add or and iret sahf mov and adc popa sub add loopne sub add adc add pop add add add adc sub add or add xor or add add add add jge add add adc add add add adc jnp add add xor and lea and and pop add add (bad) (bad) (bad) jl add add add inc add add add add add add add jp push jge add add and mov cltd pop and aam push popa sub add or and mov push and xor daa and push and xor pop xor xchg add add pop jge add add push and and cmp (bad) incl and add pop jge add add jno imulb pop (bad) (bad) ljmp add adc add add add adc add add add aaa add or add add add add xor add add adc add add add aaa add or add jge add add add add xor add add adc add add add aaa add or add or add add add adc add or add add add add add add incb xor add add adc mov add add sub add or mov ret mov loopne and inc push add add add add add add add add add and (bad) (bad) ljmp dec push sub add or popa bound mov or add or das mov xchg sub add jge and lcall bound add add in popa sub add and inc pop mov add add sub add sub pop add dec add push or push fiadd adc pop adc push cmpsb sbb and inc (bad) loopne and inc add add adc add and (bad) (bad) incl add add and add mov jae (bad) jmp jbe and sub add mov pop inc lcall add add add add sahf add test add adc add and add sldt adc and add sub add or push lea add add dec add push or sub add sub xor add add add add adc or pop sub add sub dec add push or sub add or inc and xchg push popa and inc add add add add add (bad) (bad) jmp add add add add xor adc push and stos (bad) pop and add popa sub or add or adc pushf adc mov and sub sub test add and lret xchg outsl sub add sub dec add push sub pop add lea add add add mov add push or push fiadd adc pop adc iret repz dec and xchg push popa and inc add add adc add add add and (bad) (bad) ljmp and add mov js (bad) jmp inc xchg lret int sub push and and sub add add mov sbb add sbb push add add add dec add push or sub add or or test es and and inc add add (bad) (bad) incl add add add and add sub sub add jge and sub or add or es push cwtl sub or dec add push add dec add push sub or add sub add fiadd fiadd adc pop adc cmp pop mov movsl pushf enter adc add add (bad) (bad) call add add add add push adc mov test iret mov sub adc add add or add add add xor add add add add adc jge fwait clc sub add sub dec add push or shll and adc add add (bad) (bad) incl add add add add add pop add add inc or lcall sub push or in or and sub add or add push pop and jmp sub add mov lods cs popa sub add and add sub dec add push sub pop adc lea add add add add add adc dec add push fiadd fiadd or pop or cmp lods in xor sbb add add adc add add add (bad) (bad) ljmp adc or (bad) jmp rcr fldenv shrb add add adc add add push add add xor add add adc mov and sub add sub add or (bad) xor xchg shr jmp and inc add add (bad) (bad) incl add add add add add add sub sub add or imul outsb mov adc adc and int3 call jp and mov adc or sub add and bound sbb add dec add push sub pop adc sub push or push fiadd adc pop adc sbb call adc add add add add add add (bad) (bad) jmp add add and add mov mov sahf sub adc adc cmp fildll call sub adc add add or add sbb pop add add adc add push lea add add and jle je popa and pop inc push add add add cltd add add add add add add add add add add add add add add add add add add ret add add or add add adc adc push mov push mov sub add push mov push mov adc and sub sub adc xchg divb or insl (bad) (bad) call or ficoml popf sub add adc cmp add adc sub add push adc adc push sub add or sub add adc adc sub add adc adc and inc sub and and and (bad) call pop push mov or leave mov push and mov or (bad) ljmp cmp add adc adc and add add or cmp add adc and (bad) and out inc lds (bad) (bad) call adc sub jge and xchg cmp (bad) (bad) lcall sub and mov sub add push sub add or and xor mov sub pop add sub push and cmp mov and sbb (bad) call pop pop pop adc adc and mov xchg outsl (bad) (bad) call add or fdivr clc outsl and outsl mov cmp incl and push add sub add sub mov add sub add sub add push and and sti jp popa cmp (bad) (bad) incl adc adc adc push mov adc mov xchg pushf and sahf mov add (bad) call push and add popa imul cmp std (bad) call or add adc lea add add or mov add push ficom adc or push add push sub add fiadd sub add add cmp add cmp add adc add adc xor add add add add and xchg inc inc sub add sub dec add push or fmuls xor mov sbb add add add add add add xlat (bad) (bad) pushl add add cmp sub add or push and nop lods mov and imul add adc and sbb and push fisubl stos or add or movb sub add and add add sub add sub pop adc lea add add add mov add push je add add push fiadd adc pop adc fdivrl xor mov sbb add add (bad) (bad) incl add add add add add add and add mov mov lret adc fldt rclb adc and ds and xor popa sub add adc add add add add add xor add add add les add sub dec add push or sbb or push add pop sub add sub sbb pop add add add add adc jecxz fldt add add sub add or sub add or test add inc shll adc sbb add add (bad) (bad) incl add add add add adc jp push and adc add int adc or sub add and add add sub add sub pop add lea add add add lea add add add push or push fiadd adc pop adc fucomi jnp and fiaddl popa and inc add add (bad) (bad) call add add add add add add and add mov (bad) and push int rclb adc and sbb pop and jg or sub add add add imul mov add add add xor add add add add adc push sub adc sub dec add push or sub call pop shll adc sbb add add (bad) (bad) jmp add add add add sub sub add or xchg add add push and and sub or and pop sub add and add add sub add sub pop add lea add add add mov mov add add mov adc add mov add push je add sbb push fiadd adc pop adc js sbb shll adc sbb add add (bad) (bad) jmp add add add add and add mov outsl (bad) (bad) jmp jno into subl adc adc and mov xchg test or add add add add jns xor add push add add xor add add add add adc pop sub add sub dec add push or sub add or stos and xor adc sbb add add (bad) (bad) jmp add add add add and pop and and inc xchg popa sub sub pop and cltd inc pop and nop mull mov or sub add and add add sub add sub pop add lea add add add mov add push movsl add add or pop fiadd adc pop adc mov xor adc sbb add add (bad) (bad) ljmp add add add add add add sub add mov (bad) and (bad) mov sub adc (bad) adc adc sub pop and xor dec mov sub mov sub adc add add push popf add push add add xor add add adc fsubl ret add sub dec add push or mov sub jg popa and pop inc or add pop add add add mov add inc add add (bad) (bad) call add add add add mov add adc pop adc test mov imul stc jmp js push mov add or add enter sti mov popa sub and int pop and cmp (bad) incl add cmp add or push adc (bad) pop and cmp (bad) call add fstps loope out popa cmp (bad) decl adc or sub add and jg sub dec add push sub and hlt lahf and movsb or and (bad) decl sub add adc push add add add add adc push mov add add or fist mov mov or or add mov add add add add add stos add add add add add add add test add cmp add cmp add add add push or push fbld adc (bad) cmp sub cwtl pop and jecxz popa sub cmp and mov stos popa sub or iret outsb ds sub and leave rcrl (bad) (bad) decl push mov or in rcrl (bad) enter cmp (bad) incl push or or or clc lock enter (bad) call or and mov inc in popa cmp (bad) (bad) decl and and (bad) mov (bad) (bad) incl pop add xchg pushf and aad cmp (bad) incl pop pop or and loopne (bad) pop and mov popa cmp (bad) (bad) ljmp add adc add pop add add add adc sub add or add xor add add add add adc sub add or add xor add add add add adc outsl adc add sub adc add pop add add add adc outsl adc add sub adc add or add add add add sub add sub xor add add adc add adc add add xor or add add add add outsl push add or adc add pop add add add adc outsl pop add or add xor add add add add adc outsl sbb add sub adc push add add add add adc add or add adc add pop add add add adc outsl sbb add sub adc add pop add add add adc sub add or add xor or add add add add sub add sub lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add add jae gs cs je imul insl jae outsl jb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp gs (bad) jno rolb (bad) (bad) cltd cmpsb test cmp mov jo mov test scas xor mov sub mov sbb adc fcompp mov loope sbb mov sub negl jp sti pop rcl incl test xlat cmova push push icebp mov popf lods or pop or (bad) imul (bad) and mov xor or test pop cmp lea ljmp push bound jl stos pop jle add add jle add mov add and add mov add add add add add dec add add add add add out add mov add add add sub add jge add sbb add mov add xor add adc add cmp add add add aas add add add add add inc add add push add aad add js add inc add add jae add lock add incb add lahf or add add add mov add xor dec dec dec daa dec adc or dec sbb dec and dec pop dec push dec dec dec inc dec popa dec ja ss xor dec dec dec jge jns pop dec add add cmp dec pop dec jne ja pop dec jl and dec or dec push dec imul dec sub dec cmp push dec adc dec outsb dec bound dec jbe ja inc dec or inc add xor dec push dec insl dec dec dec xor inc dec sbb dec xor dec jge pop dec insb dec xor sub dec jp outsl dec pop dec inc dec inc dec jp inc dec push dec test or dec jno jl imul dec sbb dec add adc dec pop dec daa dec dec dec adc dec push dec addr16 adc dec sub cmpsl add xor dec push adc dec imul dec push dec add dec sbb dec push dec pop dec dec dec dec dec dec dec add add dec jg cmp movsb mov add dec sub dec add dec add dec sbb dec inc dec xor dec xor xor dec adc dec dec dec dec jnp push dec das dec inc incl add and daa dec pop dec ja inc dec bound dec aaa dec and inc dec bound dec xor dec sbb dec das dec pop dec and dec xor add sub push cmovle add dec add dec add dec jo push dec push dec jbe imul cmp dec dec dec and jge add dec jno popa dec pop dec and dec je inc dec and dec push dec imul adc dec dec dec and and dec add dec sbb dec cs xor dec push dec dec dec push dec inc dec push dec inc dec or dec pop dec insl dec add dec jb fnstsw xor dec pop dec inc dec push dec jle pop dec insb dec pop dec outsl dec imul dec inc dec js adc dec and dec pop dec jae cmp dec inc dec push dec cmovle push dec cmp add xor dec dec dec pop dec push dec dec dec sub dec xor dec jno add dec push dec cmp dec and dec es jl and dec pop dec push dec sbb repz xor dec inc dec add dec jns push dec add dec inc dec jb sbb insl dec sub dec cmp dec inc dec imul js dec dec push dec cmp add sub dec and imul dec jnp cmovle dec jl pop dec dec dec imul inc dec and dec sbb dec pop dec dec dec adc xchg add cmp dec jg pop dec jae daa dec push dec adc dec push dec cmp dec add dec jg pop dec insb dec arpl dec loope add sub dec xor dec push dec xor dec dec dec xor dec sbb dec ja pop dec or sub dec ss jb sbb dec and icebp add inc ds imul and or dec sbb dec addr16 adc push dec popa dec inc dec or dec push dec push dec jae inc dec sub dec cmp dec cmp dec and dec es cmp dec push dec hlt xor add dec jge or dec inc dec fs je adc dec addr16 adc dec arpl dec and aaa dec push dec pop dec xor dec pop dec inc dec addr16 inc dec pop dec and dec inc dec cmp dec jbe jg js js sarl inc inc dec jo dec dec add dec add dec push dec sub dec insb dec insb dec aaa dec cmp dec das dec push dec push dec adc dec add dec outsb dec sub jl js add dec inc dec and dec inc test dec push dec pop dec das dec and dec daa dec dec dec js jnp cmovle or dec cmp dec aaa dec dec dec and jg xor dec adc dec adc sub jnp dec dec ss sbb dec push push dec jnp es ss jg xor (bad) add sub dec push dec dec dec jle push dec pop dec cmp dec arpl dec je cmp dec sub dec cmp dec sub dec popf sbb dec dec dec sbb dec pusha dec jbe sub dec dec dec pop dec gs inc dec push dec xor dec dec dec add dec pop dec or sub dec or dec aas dec add xor dec jp push dec imul dec push dec push dec fs cmp dec sub dec or inc dec adc dec dec pop dec sub dec outsl dec pop dec dec xchg xor js jle sbb dec xor dec dec dec pop dec adc dec cs inc dec ss sbb dec dec dec inc dec dec dec cmp dec push dec push dec (bad) enter push dec jns or dec je fs sub sub dec dec dec or dec sub dec sub dec adc push dec and or dec or dec aaa dec jl cmovle xor dec cmovle dec sbb dec arpl dec push dec push dec xor push dec or jns dec add dec pop dec or dec inc dec cmp dec xor dec or dec or dec and dec pop dec and dec insb dec dec dec sub dec and dec insl dec or or dec jg subl dec and dec sbb or dec pop dec outsl dec sub sub push dec pop dec popa dec pop dec add dec adc pop dec jbe push dec pusha dec dec dec gs dec dec dec dec push dec dec dec xor xchg sub sbb dec jno push dec sbb dec adc dec cs cmp pop dec sbb dec sub dec imul insl dec push dec xor dec adc dec jae xchg add dec push dec add jg jb pop dec jbe jbe pop dec jno pop dec cs pop dec push jns push dec dec dec and dec cmp dec cmp dec inc dec imul es fs test dec xor dec xor dec inc dec pop dec add dec jo dec dec or inc dec jbe and dec inc dec add dec jge or add push dec je sub dec pop dec ja adc dec and dec pop dec ja and dec xor dec or and xor arpl dec adc dec sub push dec sub dec xor dec xor dec adc dec sbb dec push dec pop dec es inc dec ss add dec sub dec xor dec adc dec sbb imul xor dec dec dec inc dec adc dec imul inc dec pusha dec adc dec jns push dec aaa dec pop dec adc dec sbb dec cmp dec xor dec je push dec fs dec imul imul pop dec dec dec push dec add dec popa dec dec outsb dec cs insb dec jne jo pop dec inc dec js push dec push dec js inc dec cmp dec sub aam add push dec cmp dec and dec ss push dec pop dec or dec sbb dec or dec adc dec adc dec insl dec add dec aam pop add push dec add dec inc dec sbb dec sbb dec pop dec sbb dec ja inc dec and dec pop dec push dec js jle inc dec pop dec sub dec add dec decl add jno ds and dec inc dec push dec inc dec push adc dec push dec pop dec cmp dec inc dec jge sbb dec push push dec adc dec mov pop add jne pop dec sub dec inc dec js adc dec adc dec pop dec inc dec cmovle dec das dec xor dec jg adc dec or dec or add test dec gs inc dec and dec push dec fs inc dec adc dec xor adc dec aas dec inc dec push dec jge fs sub dec sbb pop dec xor dec sub dec inc dec add pop dec sub dec aas dec addr16 xor pop add jns jae sub dec xor inc dec je xor dec push dec add dec push dec arpl dec or inc dec dec dec push dec or dec dec dec pop dec jns dec dec or dec dec dec imul xor or cmp dec gs dec dec inc dec pop dec push inc dec push dec ds jbe add dec dec dec cmp dec pop dec dec dec ja jg pop dec push dec sub and dec and dec or dec cmp and add call and mov push fistl aad push divb xchg mov or or pop lods jl stos sbb clc xchg sbb mov push (bad) das imul mov inc cmp sub inc or cld addr16 mov jno and xor push outsb push fldl lds or ficompl test cmp ret imul insb add jno adc mov and pop cltd icebp jmp sub cmp or sbb push mov mov inc enter lcall out push inc mov mov and repz rorl push jmp mov jg pop das xchg fild enter ror adc jbe lock rcl adc mov pop mov sbb dec loop das rorl in push jo lds mov mov cwtl push push das mov mov mov aam mov scas cmp sub pop sbb add ja xlat (bad) dec (bad) sbb lret insb arpl imul or push mov hlt fmulp stc xchg mov push lods push cmp ficompl mov adc mov pop push sub pop mov bound loopne sbb mov mov mov jmp pop loope,pn pop jecxz aas out xchg ljmp dec cli imul scas sbb push ret leave icebp jne and push or das std lahf in or add (bad) out bound adc out out xlat lods jp popa cwtl push push xor dec xchg mov pop imul lret xchg dec imul add dec test sbb shl test dec pop inc inc mov jge repz lea ret mov adc popa mov xor sbb and push clc cmp jb scas add (bad) or cmp dec (bad) ss aaa add mov and dec in movswl and popf (bad) leave and dec mov fdiv or mov and sarl pop les or mov mov add or test rol dec jmp sti mov cmp data16 push add lcall inc movsb bound jmp inc and in lret add fmuls loope cmc inc sub xlat addr16 cmp adc cmpsb jae mov xchg inc in sbb xor stos pop imul and jl add inc lock in fwait enter cmp (bad) xor stc adc out inc dec xor fadd sbb loop sbb mov clc (bad) xor sbb dec flds (bad) xchg int mov or ds mov mov ret push in inc mov xchg push imul mov jg sti mov xchg fnstenv pop iret fwait movsb setne sub jo (bad) sub inc jecxz gs adc mov into sahf mov and in mov push hlt mov icebp xchg or loopne mov imul ret add and pop jno es lret sub xlat mov mov jae stos xchg sti fwait pop or dec push inc and push std xchg fistpl pushf jecxz cmc enter cmpl mov aad and xor (bad) mov jmp out test dec jp mov add xchg lock inc das cltd jae inc (bad) mov ljmp ss popw rcrb or mov pop mov test jae mov faddl pop xchg lods aas (bad) or mov test mov mov stc test pop (bad) dec addb push cltd rol fdivrs mov int3 je (bad) xchg fcomip daa ret pop js lret fdivrs push push xor aad xor push mov mov push ja pop jp jmp sub movsb sbb je sub fcompl pop imulb jg imul xor sbb sti or push imul (bad) xchg xchg xor (bad) fistl mov dec push sub orl or sub adc mov jnp mov or mov add mov sub push pop xchg push loop (bad) inc out jno push inc das sbb lods add sarl push loopne xchg call pop inc test jnp inc jb fwait sbb shrl test aas inc xor popa pop js jo (bad) jno mov or lods push cmp xor test jge sub mov xchg sbb jno and loopne nop jge stos adc fs ljmp lods movsb addb fistpl int3 pushf cmpsl jns mov ja cmpsl test push es mov (bad) xchg pop pop add sbb push gs mov cmp movsl jmp inc mov das data16 lahf jbe prefetch or lret test push icebp xchg bound inc out or (bad) (bad) ss sub lods sbb fsubrs fdivl xchg popf mov mov rcrb cltd das push out clc loope lahf mov iret or cli xor xchg clc je fstpt (bad) jbe fs and fnstenv mov add (bad) sub and dec rorb mov ljmp pop aam push push in int3 xchg jne lahf out sbb (bad) fsubrp cmp fistl out aam sti add jbe mov xchg sahf cmp lret jb xchg jb sbb fisubr cmpsl cld pop (bad) out leave adcb sahf jecxz pusha xchg push shrl xchg dec (bad) fadds jo inc and std pop ja push (bad) sbb cmp mov xchg or inc mov dec lea cmp iret inc (bad) jmp scas in fs pop adc inc mov adc push sub enter je push add mov mov fs (bad) sub popa mov jno xor cmp cmp mov inc xchg inc sbb add push popa fdivrs das test xlat jne xchg fwait sbbl pop add mov mov gs outsl subl add movsb out fwait mov fidiv ffree shll mov stc lret mov mov push nop pop ja stc mov pusha int in mov lcall push inc xchg aaa xchg aam pminub js sub rorb ret pop ljmp mov movsl jo push fnstcw push nop cmp call pop xchg xor test test add adc outsl sub dec imul fild sub cli cmp js mov test or jo ret jb sub and xor jbe sbb movsbl daa sti or adc and in and shrl data16 dec push cli loope movsb add call aam add pop dec jb mov in shll mov int jle leave lahf (bad) adc (bad) popf push pusha dec sub mov dec rorb jl insl adc sbb mov je jmp es pushf (bad) and and loopne and xchg jl mov cmp popa push std gs ret pushf xlat inc roll push fldenv int adc pop hlt loopne int3 adc rcll sbb jbe (bad) das mov mov pusha sub xor lock sub sbb cltd fnsave mov xor sub mov popf jle dec mov arpl ljmp mov cld pop scas mov pop mov fisttpll cwtl sbb cmp sbb stos rcrl add lds sub jmp negl rcl xchg (bad) sub out cltd sub (bad) lock cld inc and out mov imul and adc movsb jmp mov clc cmc insl (bad) sti aaa add add push int adc bound (bad) outsb enter mov movsl pop add jmp mov sub rolb out push xchg sbbl cltd lcall int3 sub and sbb sbb jns pop lds outsb xor sbb roll test xlat xchg or out adc outsl orl jb out sahf pop int popa pop lds nop cmp add lret mov (bad) cmp loopnew rolb test repnz or lret test imul mov jecxz dec dec and outsl jg pop addr16 (bad) mov call lods push repz sbb jmp mov jge rol ljmp add mov inc add or add stos jge mov xor clc pop ljmp jne xchg out outsl mov or scas sti add mov loope jmp xchg pop add (bad) mov xchg jns roll jg in cmp jecxz jnp inc sbbl cli rcrb jmp jns xor lahf hlt jl xor scas push adc add add push dec pushf sbb (bad) push push enter push (bad) outsb sti and mov scas pop mov shl sub cli inc ret add cltd vhsubps in sar pushf outsl and ret loope out sub dec (bad) jbe jno lock or data16 call cs adc insb sub xor sub scas icebp jge mov int sahf cmp jmp mov adc out jp mov insl bound sbb ja push adc jo sub (bad) cmp cmp pop cld inc mov mov jle out mov xor mov jge mov xchg inc mov ret adc imul fwait adc and mov ja mov xchg inc das xchg pop movsb push repnz xchg dec inc scas pop pusha sub dec mov (bad) lret dec push int orl jae cmpsb test data16 mov add push cmp fldenv mov mov int mov add (bad) adc insb jle xlat pop mov cmp (bad) or repz (bad) std mov fidivr stc into dec lds and loopne cmpsl (bad) cltd xchg aaa sub pop lock push les push cmpsl inc jle iret ljmp jg rcr pop pop stos lods inc dec fisttpl out jnp inc jns jmp sub jae push movsl (bad) (bad) cmp jbe cld jns and sub xor sbb jg popf mov mov xchg inc test dec jp push sub push mov jae lahf mov es jns (bad) cmp lock das mov cmp lahf sub (bad) xor pop nop push jmp and dec scas inc sub or mov mov (bad) jns push push addr16 not gs fpatan cld inc mov sub pusha or (bad) mov pop jbe das shrl lret sbb xchg lahf lret data16 outsb mov jg iret pop loop push sub inc cmp push jbe (bad) iret iret dec fisubr jb mov jbe int3 das lcall fs lcall cwtl push loopne adc loopne (bad) and leave jne fdivs cli push pop dec sahf mov lret dec and test out popa addr16 xchg cmp mov or mov jl fistpl in cli xchg out xlat (bad) mov ficoml (bad) push (bad) dec jge sub fsubs test mov aam inc sub mov dec add xchg ds push or adc xchg fs repz jne lret xchg add jno dec or pushf sub movb subl cmp push and inc les push (bad) inc cltd shrb cld dec jg jle cwtl dec adc jno sahf lcall stos bound jne outsb subb ss mov inc es push mov mov loopne (bad) push pop mov loope cltd jp add outsb push rclb jmp aaa pop out insl cltd pusha repz test dec mov sbb mov fidivrl pusha sbb lods loopne add hlt inc popf sbb fs xlat das stos mov movb test mov xlat in push outsl lock lods mov and add stos ficoml pop dec loope mov ret sub xor std js add xchg add and outsb xchg fmuls mov ljmp popf dec cwtl ja test pop xor sub push add xchg (bad) cmp and mov cmp pop cmp xlat mov outsw xchg xor nop mov dec dec adc loope adc mov into mov pop adc rclb jbe (bad) pushl adc loop ds popf mov je xor add sbb clc fwait (bad) jno jp or lcall push push in cli mov jno fisttpll movsl sub fsubl mov mov xchg inc jne loope add popf aaa mov clc and jne imul das and stos cld sbb xchg into fldt push add sbb and int3 inc das loope adc mov cmp inc call jnp ja (bad) repz cmp dec (bad) sbb pop add int (bad) ja scas sti ror cmp out adc adc sahf mov scas divb mov (bad) jno and xorb loope adcb out aad sbb jae push and sbb in pop xchg cmpsb jmp aad (bad) arpl push into add mov shr cmp in sbb and imul jae add aaa lcall xchg sub (bad) or or imul mull xchg sub ffree test fidivl cld add out shll cmpl cs mov dec sub nop xor mov inc xchg mov fiaddl xor cmp sbb popa pop std add loop pop lods scas dec jg cmp mov or sarl pusha imul ja xor xorl cli call (bad) cs fildl test inc adc adc lcall cmp lret arpl jnp push jne xor fistl and rcr into mov jae,pn dec pop push clc inc mov mov std and sbb scas cmp mov push into shrb sbb dec nop sbb imull adc jp jno push pusha das push aad and xor jmp stc js adc xchg lods jae fsubrp loope sub sub out mov (bad) sub js mov out or mov das push leave int3 das subb sbb repz lcall out pop push or repz pop sbb outsl (bad) and les cmp test outsl test xor xor pop lds ret mov sub cltd repz dec adc or jns push test xchg push lret jns pop adc xchg outsl xchg mov cmp jmp (bad) int ja outsb dec pusha (bad) xor inc das push dec pop dec data16 fstpt sub aas dec rcr mov jecxz mov inc test rol lret mov (bad) frstor mov adc (bad) popa push insb enter mulb in mov addl scas jae rcrb xchg or push cmp lcall xchg add mov mov adc lds pop dec jnp sbb in sub lret sti flds adc cmpsl mov mov dec inc push (bad) add test arpl test hlt inc mov or aad push adc insb adc decl jo out and (bad) arpl in or pushaw mov (bad) mov test repz xchg mov push sub inc dec mov mov in in xchg loopne int push pop dec rcll and gs dec add and mov mov cmp fs es lock xchg data16 (bad) fistl ss dec pop lahf cs stos cltd push out mov xchg adc xchg loope sbbl jmp mov mov cli adc enter and ljmp call (bad) sbb fbld mov lret push ds or dec push div push (bad) dec pusha xor push repz ljmp pop decb xor cmpsl call pushf outsb inc fwait mov sbb mov and add sahf cmp je imul add mov nop jge outsb mov push dec (bad) out movb aad ljmp dec popf mov mov jno push sub cmp lahf adc mov loope push mov push lahf pop sar int xor cmp mov lea cmpsb das ret repz inc ja inc aas cmpsl mov add insb rcr popf pusha cmp pop imul jmp mov lds insl dec icebp jmp pop sti inc insl int3 jmp push testb iret dec in rorl push sub cmpsb nop push iret xchg adc cmp inc add inc mov stos add inc push and xchg sbb cltd xchg push jg call mov adc mov repnz fs add fisubr cmp (bad) pop pop or outsb jg stos cld sbb xor idivl mov push (bad) scas lret adc mov in mov sbb fidiv sahf (bad) dec mov scas imul mov int3 hlt (bad) dec pop xchg lds push mov cmp inc mov lock dec test pusha in sbb mov jb xlat adc xchg xor add addr16 leave jnp inc lcall das mov adc subb test fnstsw sub icebp sti jns jge aas mov (bad) lea into mov pop leave stos test into or mov sbb mov xchg jp clc mov imul jge lahf jle and jp nop (bad) ljmp int push idivb (bad) in fsubr test mov popa sub int3 pop js push adc ret pushf fistpl mov adc int3 add xchg out jne push repz out inc mov push in adc insl add jbe pop divb pop add pop imul mov mov out jne mov jle mov pusha in cltd xchg clc push out xchg push sbb out in dec inc (bad) notb cmp (bad) dec loopne insl mov outsl imul and sbb rcr sub je test sbb push or pand push mov in cmpsb movsb lods adc sbb je lret dec sub ret jbe ss ljmp and jnp loopne lcall je sbb scas jmp jge outsb fsubl dec mov add (bad) daa icebp and mov sbb js (bad) je movl ret xor mov or out fldl sub add or mov adc lds inc in push jg ret fwait push push adc sti add lahf add enter add nop into test aas adc cltd ja sub jge xchg or jbe int3 (bad) (bad) call lods mov xor push ds cmp lock and push pop fdivr es dec rcll sbbl inc in sbb mov mov pop lahf mov mov out mov adc cltd xchg sbb into daa ja lcall mov sahf loope push mov (bad) je push test mov and repnz fcomp lds and push mov and ret popf xchg dec test out jb push xor xor dec mov sub sbb pop push jle xor jbe mov icebp fucomi lcall mov dec xor fwait add sbb das jg add add cli inc sbb push les push stos aam dec mulb pop add lret fisubr cwtl das pop in ficomp inc sbb scas fistpll adc mov and add jo test push rolb pushf ficoml popf mov mov mov pop pop pop adc arpl popf jmp rcll aam dec and sbb mov rorl cli and int xor jmp mov scas or stos mov mov lods je mov mov cmp je mov xchg mov inc inc in and sbb repz mov rcrb test std sub fldl xor xor jbe mov push test stc ss scas mov (bad) fisubl out aaa outsl sub (bad) in repz cmp lret push dec or pop aam (bad) bound add adc or push mov jg dec inc xlat xchg sub cmp push jno stos loope push test pop mov pop lock sbb rolb into and xchg insb ret sub pop pusha pop icebp out int3 mov xor fdivl pop lds xchg cmpsl movb pop cmp arpl xor jge stos rcrl and pushf and out cmpsb push push arpl test jmp outsl dec cmp cmp retw in je dec inc sbb adc leave (bad) int xchg (bad) cwtl jp imul sub sub dec in mov sub mov fldpi stc testb xchg and or mov insb inc push jmp sti icebp xchg mov mov rcrb out repnz imul mov aad sbb (bad) aam outsb fildl ljmp dec lret lods add je push jmp dec dec sub leave xchg adc add pop adcl sti mov ja (bad) not xchg (bad) lods repz subl cmc pushf notb movsl cmc inc fsubrp adc jmp mov test adc out pop add mov aaa scas arpl cmp lods sub mov mov pusha sub outsl das and xor xor xchg mov cwtl mov xor je jle push add mov xchg movsl inc adc loop outsl imul xchg xor push sbb aad xor dec jge xor cmp sub adc add mov xchg xor bound xchg inc loope or mov shlb or lods mov out imul sti call xor sbb clc add add inc pusha sub int3 cmp push pop mov fisttpl push pop (bad) aad mov mov push data16 xlat or mov lods in jns je bound jns rcrb stc and int3 rorl mov aaa push dec test mov jecxz fcmovnbe test mov cmp mov rcr or aam push out mov add dec jle or repz jo adc mov lcall mov mov aaa push push in ljmp mov mov inc cmp out out movsl push mov mov shl mov jns loopne pop rcll lret lock push mov add push ret aaa push cld cmc xchg pop xor mov xor aad or or sub arpl popa jecxz fist xchg dec lea cli xchg scas push daa mov cmp push mov mov or xor pushf ja insb xchg daa xchg leave push push lds fnstenv mov out lret xlat pop lcall inc push rcr call es mov pop jns pusha push mov scas lods push jmp pusha outsb bound jl arpl sbb lahf mov addl ja mul push loope in jp push sbb data16 push pop cmp fs movsb add ret pop orb xor stos xor add cmp push rcrl or in sub clc fdivrl out jle gs jae sbb jle inc cmp xchg aas out test dec adc ret repnz in loop sahf dec movsl cmp gs mov ret mov movsb xor mov inc les aad addr16 xor shr out jl lahf mov loope fcoms jp je cmp test std es mov jbe xor mov paddb jne repnz xor adc sub repz insl daa xor mov movsb cmp into xchg (bad) inc sarb sti aam fstps mov movsl pop das test dec fstpl sysret dec rcrb mov (bad) push fbld push pusha ljmp aaa mov mov xchg dec jl comiss mov sub or int3 mov inc lcall pop push lock sbb adc push add imul cmpsb xchg out fistp sub out mov jge xchg cmc mov test and push push lret inc lret mov or in sahf data16 in jo shr lea mov pop dec inc rcl pop std scas lcall sub inc mov pop ret mov ja dec sub sti aas sbb fistl push add (bad) insl lahf test adc repnz dec mov mov pop or xchg sbb cmpsb add dec dec jp fild mov xchg in fisub fiaddl ds into (bad) ja cmp mov fisub sub test dec popf pop xchg xchg in push pop clc movsb int out inc nop imul mov mov daa fisub push movsb push stc push pop inc loopne movsb fimul js sbbl ret cs mov int3 repnz mov aas lds xchg ret shl js movb cmp sbb xchg cli inc movsb rcll lret mov test pusha sbb iret nop and iret mov jecxz push and iret add mov xchg mov outsb xchg (bad) dec inc cmc push pop mov out sbb ss repz clc imul mov add decl add push jmp stos loope in lea ret popf lods pop repnz (bad) xchg fisub sahf into push es mov push xchg xchg sahf xor and es (bad) push mov test jp fiaddl cld mov js and ret pushf dec add fwait fwait hlt repnz shrb or into loopne sub enter (bad) pop (bad) mov mov adc mov notb xchg mov mov in mulb mov stc jae mov mov push lods mov cs mov mov xor cltd repnz ljmp div ret repz dec orl cmp mov or push loop inc jne jbe inc mov mov fbstp aad adc aad add in or enter mov and cmp mov cwtl lds js in mov pop push data16 in enter pop test or jg mov out lea stos (bad) push lea mov xchg stos mov movsl inc add xor xchg dec mov repz push mov cmp lds mov and jp mov xor shrb incb dec outsb (bad) pop rcrb cld ss push mov and insl jecxz sti or scas mov popa bound iret popa fmul pop pop mov and dec xchg imul cmp aaa imul mov mov xchg jne hlt xchg repnz and lahf sub mov mov mov mov or bound or jge push mov insl add int int add pop ds rcrb inc pop lds add sbb ret jle rcll enter dec sbb mov adc ds push dec xchg into (bad) push sub mov inc in scas hlt (bad) addr16 pop aas sbb ds add data16 dec aas cmp bound fcomi sbb test and fidivr push push (bad) sub jg jb imul loopne in jmp adc test mov xor sub or mov es hlt aaa mov jp inc popf push push and repnz ret subl repnz mov cmc pop sarl mov (bad) mov or sar je shr sbb and sub shrb sbb gs je mov stc sbb mov (bad) int and divl scas stos sahf out push fcmovnb inc (bad) (bad) jnp jnp push ds mov (bad) and push movsb lret push scas cld aaa loop pop push and stos mov pop test xchg jl ja push or cmpsl fildl lods jns fs dec push and push adc push (bad) repz xchg mov jg fsts rolb jnp jo mov ljmp js and lret pop ja sbb adc mov aas (bad) fmuls add jecxz movsl xchg adc insb mov jae aad outsb and dec jg ljmp pop mov mov mov dec mov in xchg mov data16 add mov ret mov ss dec and dec xor sub or (bad) daa cwtl xchg cli jb popl shlb call sub and adc push lcall pushf arpl test inc xchg mov pushf fbstp inc jp std (bad) loopne jb,pn scas inc push movl dec mov inc mov xchg imul imul xor add andl mov sahf and xor or lds stos in xor cltd inc adc in imul mov inc sbb add push rcll cltd adc ljmp shlb cmp push ret arpl outsb divb xchg dec icebp dec adc xchg in shrb or cmp cmpsl inc in push rcrb stc (bad) push jmp cld je ljmp stos jne jl fnsave ljmp sbb repz mov mov xlat dec cld aad mov xor pusha mulb scas in loop or pop hlt mov mov (bad) push mov mov shr (bad) arpl fadds push push mov sub push dec shrl mov push loopne mov lcall push bound inc lret daa imul lds cmp sub dec jg repnz ja inc xor xchg movsl xor add ret cmc dec push cmpl cmp dec dec xchg dec movsb gs mov lods and jl in fsubrs or pusha out mov jne cmp pop pop jp divl push xchg imul pusha dec mov mov std push int rorl in fs aas pop sbb cmp or pop sahf cs cmpsl sub ss xor int test repnz lcall xchg sahf into ret popf xchg in add mov cs fcmovne or sbbl stos sti inc jle outsb andb push jmp jne inc lret mov or imul jg (bad) fs (bad) mov or pushf jne push gs call jno sbb arpl into notl fwait dec push push adc int3 mov sbb or or cmpsb shrb lods inc rcrl jbe inc add mov fidivl test js pop jge fistpll cs inc lahf movsb mov fstpt fist in fsub push sub and ja inc lret push leave adc nop mov cmp aam daa push (bad) cmpsb xor clc dec push inc jl xor mov std jecxz fild int3 inc bound dec mov pop xor inc lret insb aam push loopne or adc mov shll xor movsb testb jne pop ret cmp push aad inc pop popf cli xchg arpl in in fs adc test mov stc loopne dec xlat rcrb ljmp pop aad mov aam mov sarb xor je lock push cmp lea cmp mov inc repnz pop cltd rcr and dec ja add fidivr mov loopne pop sarl imulb add pusha pop mov scas out lods push cmc dec mov in sub cmp pcmpgtw jnp int3 cmp xchg cmp lret imul push push xchg jmp inc movsb out inc test in repz jg push inc xchg (bad) sbb xor sub call popf xor aad pushf aaa (bad) jp cmp sub xor xchg xchg dec jg arpl out add xchg or imul push cmc inc mulb fidiv stos push cmp cwtl pop jns xor lods cmpsb bnd insl insl xchg cmp xor in clc loope jl test cld call nop sub roll cmpsl push push cwtl into xlat fcmovu lret rcll push arpl (bad) sbb (bad) xchg inc fldenv enter pop cli push es push jns inc jo add loope push xchg daa shr jl cmc sbb xlat lods call mov xchg cmc leave imul mov pop aad mov dec mov xor cli ss call std test pop xchg sbb outsb fistl sbb or xchg in ror cmc push insl in (bad) lds cmp sub inc lahf mov (bad) lods push pop adc inc das mov stos push mov imull out cmp add pop pop sub lock js jmp test add pop cmp fs aaa adc mov cld scas cltd cmp scas (bad) cld sbb mov (bad) inc adc mov jo enter mov lds inc mov adc jmp test jae mov push movsb jecxz and inc out xor inc mov inc jecxz jae mov lock sarl or and negb sbb fidivr mov jmp cmp sub mov test (bad) in dec js test inc loop xor cmc and gs loopne jo xchg xchg cs jnp jg fcoml xchg push jp jbe xor pop mov pusha aad aaa xor shrl fstpt sbb push fsubrl out add cmp inc or dec int3 out aad imul mov je mov fisub arpl dec add aam xor pop pop mov es ljmp mov das and adc scas daa insb xor mov pop and jo add jae xor sahf movzbl adc nop inc cmp mov in jns test push push push ds cmc (bad) daa push les mov and jg (bad) rolb or cmp pop nop inc sub dec xor and gs bound out jbe insb popf imul test push dec insl cmp mov sbb sbb outsl mov jmp into int3 movsb mov lods cmp in jmp xchg movsb lock xor cmpl insl fxch or push push jmp shll push out inc jl jecxz cwtl or xorl cmp out lret fs pop mov test sbb xlat sahf cwtl imul aad cmp xchg sti aas inc jns jnp add ljmp test bound mov arpl push push lock aas data16 sbb rcrl dec inc dec aad out (bad) jae call stc and or sti pop pushf call push cwtl in jnp inc addr16 out cs sbb mov insl push in xchg ret pusha (bad) pop mov jmp int3 dec mov xchg shr repnz add rorb cmpsb hlt xchg test sub jle pop in (bad) stc call cmp into sub push jbe lahf test xchg pop out add outsb sbb fldt jl push mov stos outsb iret imul or clc add popa andl clc into inc popf lods inc leave out pop (bad) fnstenv pop xlat push dec insb and pushf pop fistpll sbb jle leave fldenv and adc out xor cmc jp push sbb cmpsb in leave push inc popf loop cltd jne pop xlat rorb movsb insb cld sbb xchg add cmp int testl fdivrl lret outsb mov lret cs out and pusha (bad) xchg (bad) jl mov and pop ja sub stos mov cs jno jb cmp pop cmp mov sbb or scas lds sub push test loope xlat imul sub dec aas adc les dec test (bad) repz stos mov adc sarb adc mov jmp jg push inc addr16 mov loope sub jnp inc imul notb out cmc bound flds cmpsb jno cmp leave hlt scas rolb pusha push push out dec fcompl dec add cwtl adc movsb lea into loop pop sub test rcll inc jg cmp or inc mov (bad) icebp xor out inc (bad) fsubl icebp ror adc rolb mov lcall mov sub int dec and jge push adc or adc jg in and jno adc roll inc (bad) jecxz idivl xchg jbe call ljmp mov mov xor inc mov mov (bad) xor adc fucom mov dec and fidivr mov or fxch inc (bad) lock mov int3 xor stos ret dec pop and mov mov in mov mov (bad) xchg out bound insb scas addl (bad) in aaa and xchg xchg fidivrl (bad) ror and mov ljmp xchg inc dec inc or adc ds outsl pop xchg sub in sti mov aam lods out cltd enter aam inc cmp nop mov aam pop push and sub (bad) pusha roll mov rcll push lcallw bound xor cmc sti mov inc fimull mov cli jecxz jg aam dec stos cmp cmp stos in test clc jo test mov push push mov mov mov and add pop dec test xchg pop cs (bad) cmp bound mov les out mov jecxz cltd mov xchg cld das mov ljmp sub mov cli xor dec sbb push xchg mov addr16 repnz (bad) or pop dec test imull rcrl cmpsb adc outsb lcall dec loope lock jo std movb or repnz es cmc out xchg inc push scas (bad) pop loope in in mov xlat push or or popf fnsave push lock imul jno scas mov adc mov imul lods out pop or sub cmp pop mov jo mov ret js cli or in cli mov xchg lods inc sbb or clc mov push cwtl stos push loopne outsb cmpsl das dec cmp add js je mov inc lret daa js es xorl or cmp or adc push pop mov (bad) pop aam ja (bad) lret jns into dec push xorl mov pushf jmp faddp xor or xchg jno pop leave cmp push imul icebp xchg jns push inc adc push dec pushf pop stos sbb enter cli sahf jb dec xchg pop aaa mov loopne xchg and (bad) in pop lds cmp out rol scas leave push lret sbb mov lea push into ja es repnz lret ljmp into imul lret jge mov dec pop rorb pusha mov out inc fistl or lds push loop adc dec mov std lret mov add add lahf push jb (bad) jle mov xchg loop push (bad) xchg mov imul dec jo jp cmpsb push test shll ljmp dec xchg out nop mov xchg jo (bad) (bad) (bad) test imul js add or and inc out (bad) jb pop xor jno jp inc lret repz sbb sbbb and and adc xchg adc outsb movsl data16 aaa (bad) repnz sbb sub insl mov push rcl es jo out scas (bad) xchg add and jb movsl dec adc enter mov xchg xlat jns push or or xchg mov outsl xchg std mov or mov mov xor scas sub sbb pop sbb pop mov dec cmp (bad) in or jnp stc es mov mov aaa adc movsb loop imul mov add out push lods pop frstor mov dec jmp lret push (bad) jb ret mov push loopne xor and dec cwtl ret pop mov push cmc mov push dec jl xchg (bad) pop in xor mov not lds sahf aam lcall jae sbb fwait and scas mov inc je and cmp int js,pn (bad) popa (bad) loope add mov jb and xchg std sub xchg (bad) sahf inc xor jmp imul jl dec stos loop (bad) pop das cwtl xor jnp xor add into stos or inc outsb fstps into jb adc lret jns dec cwtl sub aas mov xor (bad) lret repz inc ljmp les (bad) sbb fdivrl mov pop repnz out into inc dec and push xor out xor insb push subb add sub xor (bad) popl leave in inc pop aam sub aad inc std leave dec add fdivrs pop add fsubrs inc bound stos enter mov push adc outsl daa xlat insb and das ljmp daa imul cmp jg jbe das push inc xor leave dec add adc sbb jecxz das jge inc in aam iret aaa dec mov cmp sub aaa push (bad) jb pop sbb pop ljmp in adc mov mov mov mov push lret pop sub xchg in (bad) mov xor pop inc add je dec jb mov cltd ffreep aaa jmp push imul jp out cmc add and outsb lcall test push push sahf push aad mov mov xorl inc inc imul mov adc repz lcall add mov aad cmpsl nop (bad) push xchg stos mov sbb jb mov shrb lods popf jnp or xor out jmp jne fstps lods mov rolb xlat dec in mov (bad) movups push pop leave insb inc and jb ret loopne pop dec sbb dec aaa rorb fcompl cmp cwtl in add or xchg pop jecxz adcl mov mulb add cwtl fnstsw mov sbb or pop lock ret pop xchg fs andl fcmovnu push sahf hlt cltd add mov lret inc or fisttpll inc add inc imul int es jle and jae jmp in pushf dec repz mov (bad) ret mulb rcrb push xchg (bad) push push movsb jne xor mov into lcall ficomp rcrl ss sub adc adc xchg add xor in mov dec xchg int sub xlat mov mov mov inc jae,pn (bad) push dec in gs inc into mov (bad) fwait pop scas push cmp fldt inc insl in stos or mov and push ret lcall add movsl push (bad) or ret mov mov neg aas inc out push enter int jp in mov mulps mov std fldt inc adc popa push cmp jae ljmp xchg (bad) mov ret dec or je les scas stc mov enter (bad) sub dec mov mov mov es push add enter cwtl lock imul cltd fstpt jge,pt pop scas int test test pop and add or icebp dec or mov (bad) hlt imul mov in mov mov dec ja cli lahf push jno sub sub insl pop mov arpl cmp notl or dec arpl pop lret ljmp lea sbb arpl pop es popa push xchg lock test or repnz mov xor iret test lods pop inc andl pop dec xor in out (bad) push pop shll or test divb dec xchg mov mov pop inc xchg pop pusha popa xlat idiv outsb or adc cmp inc push stos dec rcrb fcoml mov push jo ret add push inc pop lret push adc jl out fiaddl je push wrmsr popf fmull aad jmp cld or adc (bad) clc stos scas xchg (bad) (bad) or jae ficompl lret cwtl out (bad) mov sbb inc push stos loope sub add shl dec mov jnp rorl pop push xor cmp popa mov scas lret add or addl hlt pop pop setns arpl subb pop sbb mov pop enter das push pop and add movsl jmp arpl ret fdivr (bad) dec addr16 xor add push mov addl icebp cmp sti xchg movhps and test push or or sub sbb sahf mov mov push imul out shr aaa xchg jo dec xor push (bad) data16 lret je cmp cwtd pop adc repz adc loope adc cmp jl lds dec mov (bad) mull push movsb jne rorb or aas adc jb arpl add repnz out add orl adcl inc dec scas aam sbb aas aaa in sub sub lahf repz out jae (bad) dec adc dec cmp dec mov call push sbb push test sbb pop (bad) lcall outsb xchg inc push scas inc aaa or mov push sub into push sbb lds push xchg and mov popa ljmp and out mov (bad) les jle inc ret cmp addr16 mov mov (bad) pop pop dec call mov (bad) sti sbb repz sti mov and mov scas cmc dec int inc fcomip xor pop sti xor sbb adc mov cmp mov lcall adc pop lods test xor fstp add es jmp sub out cmp mov lds icebp enter popf inc add xor out push ficomp test cmp enter es sub test ret or sarl fisub push mov daa mov lock cmc push pop fstpt fisttp mov dec repz or add out xchg mov sub jne aaa xchg lods stos ret loop jnp into addb scas ret shlb aam and lds pop add hlt adc mov xor mov adc cmp jmp xchg push pop mov and push add in mov mov in cmpsl cmpsb xor lods jne std or pop mov out mov jmp dec and pop inc jne push xchg cmpl lock xor into movsl inc ror mov adc mov lea leave jb and cmp adc call push outsl pop (bad) rol popa in push xor imul movsl xchg push xor pop sub cmc pop mov mov clc fidiv popa xchg jbe sbb and fdivrs mov out mov add out fldl aam enter scas loop rorb mov cwtl or mov and imul mov xor mov mov int3 out out fidivl pop das jnp xchg negl rclb xchg add and adc xchg lods lock adc adc push (bad) dec xchg inc push mov xchg pop cmpsb fiaddl xor xchg push loope popf add add mov mov out sub push (bad) rol stc pop push lcall aam push pop jb mov cmpsl in jle xor adc or movsl addb ja (bad) in sbb pop in xlat lea mov cmpsb or rorb movsb dec push subb mov test out adc cwtl iret sbb pop cmpsl and ffree jo push mov push adc sub inc test or dec das sti cmp jb cli imul ret add idivb int (bad) bnd pop fidivl xor push rorb jecxz iret add je xor jle (bad) xor into sub rcrb sub adc pop (bad) out je jno mov rorb sbb jo fsubs inc mov jae adc jmp outsl sbb and inc rol out add lret ret cltd out imulb pop lcall sub pop pusha out cmpl sahf mov test add bound mov push add ret dec call fdivs or je xor lea fdivrl jno shll xchg mov jnp lret imul or pop push pop push cs and mov mov adc mov push ds xchg gs add inc test dec jp fucomip fstpl test (bad) and clc jae aaa jnp lret and mov lcall pop pop cmp or mov jb sub mov mov ror (bad) gs push xchg dec iret jae cmp jl test pusha js scas enter dec and add fcomi jbe and int3 pop lahf testb lret repnz sbb adc sub imul cmpsl bound (bad) inc jmp ds mov lods pop xchg xchg int mov inc aad ret mov (bad) cmpsl (bad) fs int3 push lea and cmp in mov addb inc cwtl out adc mov sbb lahf dec xor popa cmp and (bad) (bad) aas xlat stos add and jmp mov mov mov push (bad) imull js mov pop addl jb cmp fild dec fcomps jnp xor or call fsts dec int3 std xor in hlt jbe mov inc loop test add mov adc jbe fsubl inc mov and lds fwait xchg pop mov jae sbb (bad) mov xor stc sti out loop or mov or cs adc outsl or xchg mull repz add enter jmp gs pusha dec scas leave popa inc into mov sbb pop jecxz jb es pop fstpl ljmp pop mov mov xchg subl rolb incb sarl loopne add movsl xchg fwait dec lods dec jne push dec pop jb scas mov and lret adc mov mov pop push adc sarl movsl pop mov outsb ret sbb mov inc negb mov fsubrl xchg cld rcrb jbe inc imul movsb jns lahf movsb jns inc mov jb jmp lret (bad) int3 out stos pop test dec cs adc leave rclb aad lods outsb lods bound stos dec pusha dec movl and test in sbb aas and into (bad) jmp gs pop insl xchg loopne cmp mov mov sbb cmpsb inc mov cld fistpll rorl or mov insl push push aam inc pop (bad) aas in into lret daa outsb cmp dec lods lahf ss xchg cltd or ljmp push mov sbbb sbb mov fadd test sub scas inc shl lods jp jno or sbb add lret mov ljmp in pusha mov and adc sub sub icebp cs test ss mov add add mov lret cli ret sbb push fidivr sbb inc add es adc sub and pusha pop add lea dec jne mov mov sbb lods testl inc or (bad) push aad (bad) or push xchg or push insl in sub jbe js outsl sbb jo cmp or push mov stos xor jb mov xor mov ljmp mov xchg pop add aam dec out (bad) add xlat jae,pn test test lods add ss pushf mov hlt lock addl mov push or fiaddl (bad) cld shrb in sbb mov inc mov adc xor ret pop imul dec (bad) lea cld lret out sub cld sbb push in or enter out iret in mov cmp (bad) or dec jecxz cmp mov imul adcl xor or mov lods insl dec xor or xchg xor push jl jnp xchg inc sbb aaa dec mov add mov jge gs pop inc xchg adc cmp mov ds ds add pop cmp mov adc mov out adc xchg add sub rcll dec (bad) in nop sub repz xor push mov nop push out rclb mov enter cmp sub push test or in or sub mov mov or cmp adc (bad) orb mov fimul mov xor ljmp push pop and xchg mov inc or shrl (bad) outsb stos cmp cmp jp inc in jns mov cmp xchg ret dec inc push cmp inc dec xchg or push pop pop pop xor ds test push sti shll (bad) push repz ljmp or into loopne (bad) jo fwait mov mov and xor ja cmpsl dec mov pop sti jmp lds test jle and mov sub sub inc mov mov pop and cld jmp es mov dec push lds cmp push lds jmp inc arpl push test loopnew xor mov out cmp stos cmp bnd jno pop adc xor loopne pop out sarb add pop sbb (bad) lcall inc (bad) mulb lock sarb adc dec mov sbb punpcklwd push sub (bad) mov adc dec jp fsts popa add push adc icebp iret icebp stos daa sub jl std pop add in sbb imul xchg cmp xor fildl sbb dec pop mov pop mov mov adcl (bad) (bad) data16 jecxz adc or pop movsl mov pop pop out and cmp fimul adc test movsb lret test jo xchg cwtl je dec in sub out jne movsl jbe lahf pop adcl out cmp fcoms imul lods aas leave ret adc cs fldl jnp mov xor testb je jmp dec and dec mov adc std push cmp pop das arpl (bad) inc cmp mov js ljmp gs or push fild stos and repz lods loopne jmp into inc push mov and xor cmp lea pop loop lea fwait ret sbb xchg push cld dec xor lods movsl mov inc sub jp (bad) mov inc scas cli (bad) (bad) jns push mov fldt int3 adc aaa and imul fs inc stc push aad jp mov mov mov pmaxub out sbb cmp sub lods insb mov mov mov insb (bad) push xchg scas mov scas or insb pushf xchg (bad) jb mov les mov push push inc dec sub mov int3 cwtl loope lock adc push pop lods arpl cwtl icebp and dec mov lds dec mov mov sbb xor leave jle mov jb insb sbbb pusha inc adc inc add insl adc push xchg xchg stos imul mov push pop sub lds scas jo mov mov in or mov fmulp testl into test imul push mov cmp and inc mov lahf ss sbb push ljmp cmpsb sbb push cmp push mov mov fildll pop loop sbb rcr gs jb sbb xchg cmp and jg pop mov and jae jmp sub insl imul hlt sbb mov xchg stos subl jae xor adc pop stos adc push fmuls push pop mov mov mov jl inc (bad) dec mov insl mov inc (bad) xchg cmp jns or orl out adc aam out push arpl jae adc adc and and aaa push jle adc xor mov mov jns loop out clc sub sub aas inc push daa das adc adc and ss cmpsb or repz repnz push mov mov jne push dec mov mov jg clc out jae pop icebp iret and inc stc push jns enter clc rclb subl movl adc mov cwtl lea gs push (bad) mov leave cmp mov aad out push (bad) stc mov fisubrl or jg xor push mov push (bad) jge sbb out push mov ret aaa ret (bad) fbstp fs push xor int lods jbe jp jb sbb hlt ret lahf movsb mov xchg aam jp mov ss cmp xchg lods pop sbb dec push push jnp pop popf popf imul push (bad) jne imul or stc call and or push (bad) std mov das popa xor push xchg stc fnstsw cmc out lcall xchg mov int imul in fisub faddp iret jne and jns mov xlat inc lahf std cltd popf sub pop pop or mov mov mov push push sub scas mov mov (bad) iret je lds mov popf jns dec pop enter or pop jl insb push mov call fs mov test in test cmp popf (bad) mov popa lods fisttp mov push sbb mov (bad) ss or adc rolb push popf push sbb mov dec fisttp test ret sbb mov gs pop addl aam inc cmp mov data16 in int aas cmp and popf xchg jnp test subl jmp sbb aad rorb cs jb push jnp inc arpl out aaa (bad) fidivr popa stos lods loop movsl dec shll pop adc adc lret and mov sti pop jecxz pop lret or fsubr pop bound push push add sub (bad) cmp shrb pop fcompl mov in mov sub out inc push (bad) (bad) xor sbb gs xchg adc adc test adc nop (bad) mov rol cmp xor jb aas push lods les leave push daa pop push mov movsl rcr mov jecxz mov mov mov and jl adc lods je push dec dec mov push and push sub add out cmpsl loop outsl adc lahf repz xchg repz ljmp in ljmp jl inc aam pop insl das xchg leave fistl push mov xchg sqrtps push pop fldt test imul mov imul mov int3 dec xchg mov leave sahf lock js and mov scas lret dec dec mov in enter jns insb lret push xchg sub jne dec (bad) inc pop or dec inc jecxz push sub test jnp outsl inc ljmp nop adc je cld aad nop sub add cmpsb mov and lahf dec shr mov add cmc push and mov int3 mov lea mov bndldx cmp xchg pop add mov mov inc repz cmpsb mov lcall dec xchg bound inc xor roll stos fdivr inc sbb addr16 push sub (bad) jg leave popf push pop sbb cmpsb jg push gs cld aad push mov (bad) je hlt or cmp int dec xchg sub aam and lods sti mov jmp mov js or dec mov cmp xchg dec mov (bad) fildll xchg bound jl (bad) xor mov inc mov dec cmp test push sbb mov das daa xlat pop or lock mov int3 mov fwait into cs in xor dec ss in pushf cmc fadds leave pop imul sbb rcll push mov (bad) jmp in pop sbb scas icebp mov cmpsl pop lock push das fmull jae sub mov enter jb movsb (bad) mov xchg iret mov add (bad) xchg pop xor test cld xor in (bad) icebp ljmp outsb mov inc inc je lcall xchg or jae test sub mov mov xchg js jge jbe aad jbe movsb insb mov out xor mov add aam cmp (bad) cs jb ja jp push xlat outsl adc and btr into xchg fldl xchg cltd xor sbb pop out (bad) sub sub loop test jecxz daa cmp call push cmp cwtl fisubl lcall repz pop repnz dec cmpsb aam adc jae scas andb clc fnsave loopne mov jecxz fimul xor mov arpl ret pop jae xchg lods mov ja add cmp stos enter push stos adc imul dec popf xchg fwait mov jmp stos or insl dec xchg add clc xchg pusha in pusha nop scas es nop pop enter lock sbb mov int3 add mov pop ss jp jp les lahf js orb in mov ret rcl mov aam addl arpl mov jp pop dec (bad) aam inc adc inc test sbb mov aad and xor loop testl mov push es mov out inc mov xlat push rcrl xor lds and lods sbb sbb jnp int3 add (bad) pop int daa inc jecxz es fsubrs roll fs dec outsl xchg repnz adc jmp inc dec ret cmpsl in pop push jo sbb jae sbb mov and jb cmpsb adc adc cmpsl mov mov movb clc or and (bad) lock dec lahf adc push cmpsb shlb fdecstp gs out mov sbb or imul sub loope in icebp insb dec movsb bound xlat inc daa push lds inc ds sti ror inc sub xor sahf in lds das add mov shl test push in or and pop sub mov lods cmp or loope mov push inc sub dec add mov movswl jl test fucomi fstpl mov icebp inc js xor fucomi (bad) lea mov repnz out sub pop int3 (bad) lret mov insb mov (bad) cli and int fwait jle inc xchg or enter or je jb outsb (bad) repz lahf or stos fcompl cltd loopne pushf sarb xchg stos pop stos lea pop loop xchg inc lods add imul cltd fmull mov sbb or shrl inc aaa stc or lahf mov mov xchg add popf test loopne fwait mov popw cmpsl iret sahf xchg cmp push out bound sub or sbb jno xor outsb subb fcoms dec push or sbb mov idivb xor jno xchg cmpsb mov cmp mov loop cltd in popf adc lods rorl icebp int3 mov add xchg popf arpl cmpsb xchg sub and pop fisubr (bad) adc mov adc dec dec mov (bad) dec nop jge xchg pusha sarb daa mov outsl or std inc xchg sub mov sbb sbb fnstsw push lret test jl (bad) adc das pushf sbb mov in jns or or ds sti jge repz cltd stos fnstsw jb jo scas cmc outsl push dec in mov cli jge in fsubp xor sub jmp popf shrb fildl pop fs mov adc push jnp push fldl mov ljmp inc lock or repnz cwtl pop mov jl pop negb mov inc insl cmp inc scas pop push jmp out push rcll lahf stc xchg or movsl jns cld xchg push int3 jl add icebp std xchg icebp adc mov sti enter mov adc dec sub repz arpl sub xchg dec or cmp push cmp jg push or jmp arpl movsb nop aas imul sbb imul and cld mov xchg push jne data16 adc mov mov mov sbb inc pop sub mov mov hlt test jmp lea imul mov inc lods adc xor cmc leave shrl sahf xchg mov (bad) add jp xchg push mov in pop pushf push or push mov mov mov icebp out outsb pop and fwait sbb inc lods pop jg fsubs out aad mov xchg cmpsb push xchg fisubl mov lods add (bad) push out aad (bad) ljmp mov xchg out push scas pop inc (bad) clc and cwtl enter jae aam addr16 adc xor mov push mov xor pop test adc mov cmp cmc pusha mov push mov outsl xchg push cmp add push mov inc xor outsl jge push lods insb sub push mov aad pop lock punpckhwd fs int3 icebp es inc arpl imul lcall gs adc aam adc mov fnstenv add fcom scas lcall daa lcall int adc sbb mov lds adc add mov les stos jno mov xor inc icebp rcll int3 cli test cmp sahf or mov push push mov out add or leave sbb mov out add sbb fwait push push test sbb iret imul push popa (bad) jle ficomp mov xchg not mov mov fdivrl iret aam cli inc xchg mov roll outsl or pop push inc xchg mov stc jecxz cmp and lock adc dec dec push mov mov (bad) out icebp push test add test pop and cltd je je mov cltd push xor mov jae mov (bad) (bad) (bad) xlat inc fmuls cmp add je xchg pop das xlat mov (bad) in push xchg mov stos int3 push stos cltd hlt push mov insb loop xchg test (bad) dec push out mov mov imul push jge es cltd aaa cltd andb add mov xor mov (bad) flds jle pushf rolb (bad) pop jmp pop mov fbstp pop lret (bad) mulb adc mov jns mov pop ret (bad) mov pusha jmp jp cs js inc out roll xor jne sbb fadds in hlt movb xchg call sub or pop sbb sbbl jle sbb iret sbb fcmove repnz xchg sti adc mov stos movsl iret stc shl icebp jnp pusha push or icebp dec cmpl loopne pop fwait cmp pop cltd scas pop loope mov pop xor fstps or xchg sar clc (bad) cmp (bad) jne sbb adc cld xor lahf popa lds fsubrs stos aam aaa mov pop push stos fisttpl or dec loopne aam jne cmpsl xchg int3 fldl inc subl lods pop xchg js test mov lret and aas lret lods imul punpcklwd push leave dec inc lds daa add add ds and mov ljmp clc xchg out push cmp jno mov lret leave xor (bad) pop push push add stos cmpsb stos fidiv xchg push sbb punpckhbw (bad) cmpsb cli push pop jp mov mov repz inc aad and xor cmp jp shlb cmpsl xchg movups mov pop btr repz mov xlat arpl push data16 jge jne test bound fstl pop insb pop fwait leave pop js or aad cmp mov jb aaa and (bad) jp inc (bad) cmpsl ror mov xor push les ds or and testl inc out pop insb (bad) cmp mov (bad) js xorl pop xor jnp fs or enter push stc icebp ret dec add loope sbb mov aam clc sahf std sti inc lea repz sbb sti jnp jl mov leave mov mov push jns push or jle adc insb daa movsb outsl mov std cli dec (bad) fnstsw pop xlat shlb je fstpt mov fimull xchg in jl aad or sbb leave jnp push int jo aaa sbb lret cli add loopne xchg xchg inc in push dec data16 cmp pop cmp jb sbb fcoml pop movsb imul jo sub enter dec and lods inc xchg sbb adc movsl jae cld mov adc icebp pop push jmp out loopne sub mov scas or mov iret inc mov dec mov jns ret iret mov andb or stc lret fwait in (bad) xchg dec fistp (bad) enter jmp pop cwtl add imul mov fsubl mov pushf xor loope out mov xchg lods jbe aam imul loopne jmp popf jl adc xor rolb or data16 aaa dec mov or sbb xor mov test xor xchg lea push jb jae cmp aam aam fwait sbb cltd std cli jns cmpsl aas lods pop iret adc sub insl sub test jb mov lds pop sahf pop jo pop stc sbb ja nop arpl pop inc pusha mov dec fmull and inc (bad) pop xchg mov out jbe out mov icebp ret mov and mov (bad) out dec fs (bad) cmpsb loope fcoml xor lea nop adc pop mov jo faddl xlat jl pop or out push mov inc mov sub (bad) mov es xchg push int fstps mov jbe lret push inc sahf push cmp mov push pop xchg scas add xor jae jbe or cmp jmp xchg jne addr16 enter repz test les fs dec pop loope lods fwait loope into adc mov xor pop push cmp rcrb jb add lds mov push and cltd lcall imul jge mov icebp or cld mov fistpll add jmp and pop decb scas rcrl jmp mov mov je adc aas iret cmpsl pusha pop inc outsb fs mov movsb cmp mov push nop jle stos inc and scas fild popf push insb jle jmp sti div movsb adc pop lds repz inc xlat jo lea or ljmp mov xor pop sbb adc testl ss add fwait lcall cmp mov repz pop popa jns dec mov sub add or and xlat cmp xchg xor or sbb fcoml adc inc mov sahf imul loop or repnz sbb mov movsb fcoml subl jb in int push mov mov ja daa mov mov ret movsl daa shl hlt inc inc cmpsl push dec fisubr push cmp push sbb (bad) call subb jo loope (bad) fimull repnz mov jb push insb fwait mov std in stos xchg popa insl cmp ja sbb cmp mov add std popf gs insl push pop xchg std in pop jo,pn cmp or xor loope jl stos inc inc inc nop mulb (bad) int hlt push dec sahf stc sub xorb daa pop repnz popf ljmp mov xor mov sub mov imul test xchg insl pop clc dec cmp cmpsb movsl push or sub jge and rolb lods int in push js mov xor inc call (bad) fildl cmp js inc (bad) adc xor rcll out fstl inc js das out add cli pop es jg rorb movsl (bad) pop out das (bad) repnz xor dec add daa xchg dec clc mov pop loopne stos das sub pop dec xor sbb pop (bad) and cmpsl out movsb es das test fnstsw cmp mov es mov and into ret test dec icebp cmp xor cwtl xchg fwait mov dec adc mov movsl lahf jb lcall out inc imul sbb int mov xor roll adc jno push into nop out pop fildl pop mov add and stc cld mov movsb sbb decl pop mov pop hlt jno je xchg loop call aas xchg jle xchg xor sbb dec jg dec add xchg hlt (bad) adc jecxz andl pop push mov nop ljmp in mov sbb (bad) out sbbb imul std add stos mov sbb cwtl fwait or in insl mov and arpl adc inc and pop cmc loope add int3 push (bad) mov xchg pusha push rol cs (bad) (bad) lods mov jl push mov movsl stc or mov jp enter int3 pop in mov sub lock imul inc cmpsb and mov cmp jne xor dec lret aad inc dec nop ss sub popa and add pop lcall in push mov inc cli jne push fmul pop jo rcrb mov push add fsub push lods in mov jmp pop mov insl out xchg imul xchg out xor fisubl cld fdivrs es xchg sbb mov daa sbb loopne or sub ror dec mov cwtl xlat sbb dec adc stos lods out and fsts dec xchg mov mov shll lds les dec sbb ds pop outsl punpckhbw mov sahf loop cwtl outsl xchg bound mov cmpsl fstpl out call sarl adc push adc pop inc addl stos lea xor push jne xor adc xor or add mov inc sarb sub ja fsub pop mov dec ror xchg adc lret es push mov cvtps2pi pushl pop push inc pop add xor pop mov jns arpl rcl cmp mov pop sbb mov lahf call lret popf sbb nop sub xor aad incb std repnz pop cmp push push popa adc mov adc not jge xor mov dec add and andl mov or icebp mov mov and pop xlat in divl push (bad) mov jo stc cmp jg fwait in add fist xchg dec repz fadds add mov sahf cmp inc fisubl aam cltd mov lcall mov iret scas sub leave or (bad) fstpl loop add jmp inc into jmp jge pop out xor mov shl mov lcall and mov add (bad) outsb cmp mov in pop clc push ficompl xchg xchg push push xorb and sub and xchg les repnz ja ljmp movl hlt sub imul cltd push xlat leave pop inc int repz inc xchg mov fwait push stos in cmc icebp push mov fstp jmp xor jg or jge cmpsb jl xor nop loopne dec sbb mov jo push stos mov xor mov fcompl pop ficompl mov adc repnz push loopne pop (bad) scas mov or sbb repnz pushf jg inc mov jbe movsl xchg and mov testb insl fimul inc clc daa push mov jb push test jmp das ret loop leave mov popf jne mov xor or test ljmp fstpl (bad) data16 scas add popf les jecxz,pn imul sub mov mov jmp rcrb rclb lcall jno cmp sbb lods lret mov js aas addr16 sub or xchg les test jne push (bad) ds dec jmp subb jbe (bad) pop or inc mov add pop mov mov dec outsl test mov and mov cmc sti push jb outsb pop push mov insb js xchg movsb mov pop leave stos fmul icebp jne xor cmc (bad) fsubrp icebp fnstsw xchg adc mov adc adc jne fs pop adc aas cmp dec cmp daa push hlt jne mov push std or movsb jecxz,pn movsb cmp leave scas enter and dec and sbb and int3 es js xchg jle mov xchg pop dec cmp sbb loopne pop (bad) push iret fmull aaa decl push push test shrb mov std dec xchg xor cmp fldt repz iret add dec add into or xor aaa cwtl adcl test loopne addl gs pop dec fnsave jle sub jge cmp pop nop inc push jnp or aaa push pop mov adc dec icebp mov jo incl add adc pop dec jmp sti mov movsb movsb sbb lock mov add fdivl dec aas sti in setle pushf adc int andb sub jne cli xchg (bad) aas ja (bad) lods dec dec cwtl adc jp pop ficomp mov and orb out aam mov insl cmpsl inc gs pop movl je fmull or std mov push aad pop ret imul lods pop cmp jne jecxz aad xchg loopne xor lea sarl push ror mov sub aas mov mov cmp jecxz mov sbb out cli in and int cmpsl call xchg in loop inc stos mov jl mov mov (bad) (bad) out (bad) movsl sub (bad) push lea incl sub cmpsl inc ljmp dec mov mov popf sub insl dec push test or jp push rolb mov jnp mov or insl jp divl int3 aad lock sbb add add aam clc dec loopne scas push movl pop jbe jae xchg adc mov push std xor ret scas das fcompl mov xor mov call inc pop xor pop sub hlt add cmp fs mov cmp add mov cmc js mov mov (bad) cmp inc jge add mov test and inc stos je pusha or cld pop les test sbb pop aam stos xchg sub cpuid jno stos imul pop stos cli out movsb nop leave mov sub xor aaa loopne mov xchg and pop add sbb push adc mov push push mov js push push popf aas fidiv dec xor mov (bad) mov shrb pop dec sbb insb and stos and push pusha mov js xchg jae dec mov mov cmpsl sub add cltd divl les mov insb imul mov das (bad) fidivr push andl fwait adc xor cmp push mov push xchg into (bad) fcmovnb icebp sbbl mov inc leave out pop jo mov pop xchg mov nop hlt dec sbb pop dec mov or aaa test pop push test int stos mov cwtl ret and lret jne inc rolb stos outsb ret xor out js ret ss jmp lds test and repz xchg add (bad) arpl push sbb pop mov das mov cmpsl aam shrb cs leave out enter notb mov xchg int inc add add push adc rcll push inc fsubrl mov and cs ja sub push sub or push movsb jmp pop pop in ljmp fwait jns stos xchg adc dec pop (bad) and clc call repz or push mov ljmp clc inc mov jns fmull test pushf mov xchg fs xor jb mov push pop outsb dec and sbb sbb fcmove dec push dec outsl adc nop mov popf popa push popa arpl xor sbb sbb lea jo cmpsb mov push mov mov pop dec (bad) stos push or push in aad lret cltd into int jl int mov jns mov (bad) gs pop ficoml add sti sahf cmp in cmp xchg les pop (bad) (bad) and or in xor sub nop dec mov pop cld lcall and test adc jg shrb bound in fcmovb cs pop dec cli pop adc inc mov push aam fnsave jg or dec lock adc hlt xchg add inc add test rorl push lcall pop sub mov jo mov das pop lret fcompl xchg mov dec lea mov fldl int3 mov and into push ljmp mov push aad jb xor js jne mov sahf lods fs mov dec jl (bad) mov fsubrl subl pop jle pushf pop xchg popf jecxz ds cmc xchg insl rolb cli xor push arpl stc inc cmp xor push out imul inc adc inc push imul inc xchg mov cmp rorb jns shlb mov ljmp cmp cmp mov iret std icebp jae sub mov out add shrb mov adc repnz or iret gs mov std sub rcrl jecxz xchg push pop pop jge mov int3 xlat les xlat mov add mov aad sub jns jbe std into jae data16 adc pop gs push out insb je mov rcrb cmpsl pushf xchg mov dec inc cmpsb xchg movsl pushf xchg gs (bad) or shr mov push call pop mov ss lds xor cmc stos jbe sub pop (bad) mov call push lret ficom mov loop (bad) sti fwait adc push jmp adc mov sub lds es jae mov sahf repz ds cmp lret fwait xchg stos dec aam fwait and or xor push fsubrs and sub mov add cmp mov xchg test xor push and cmp cmpsb (bad) push mov in mov stc mov test sbb out and aam jle dec jle (bad) fisubl or call jl aas push outsl sbb (bad) mov fisttpl cs dec sub push dec sti adc xchg mov sbb lret lds aaa sbb test fisubrl pop mov pop jnp sahf mov fisubrl xor (bad) jno repnz test mov push pop aam sub xor pop pop and into cmp imul push adc out pop movsb test call push loopne es xchg xor xchg sbb movsb push std jno pop xchg dec lock mov jmp pushf loope jno ret fwait out pop sub lods push add sub int aaa push jbe inc or stos sbb leave jle mov sub addr16 mov cmpl iret sbb jb (bad) dec call sahf sub pushf dec cmpsb dec cmc es pop mov add sahf cmp add sbb dec mov stos int3 sahf insb adc popa (bad) xor mov mov pop aaa fnstcw daa mov in popf scas and mov or fistpll scas mov push xchg mov lret sahf inc sub sub and jne adc (bad) jmp nop stos ret cmp inc fisub or push lock jb pop ret xchg xchg inc cld in cmp dec (bad) xchg and mov shrb sub outsl dec pop push xlat clc and cltd cltd (bad) stos outsl (bad) in subb dec adc add (bad) jb push add mov mov rcr xchg aam dec add inc jecxz mov movsb inc daa add (bad) mov mov push repz pop in xchg add push (bad) mov xor sarb mov cld lahf test lds inc xor xchg push movsb jns std jmp cs insl adc dec push scas xor cmp fcompl dec sub add rolb mov (bad) pop xor push (bad) in hlt andl mov mov out or ret (bad) je mov stos insl orb imul sub or repz imul xor ljmp mov dec movsb adc fist mov cmc jns jae data16 movsl bnd xor dec xchg iret popf cmpl sub sti out or ljmp fisubrl addr16 mov aas jno fdivp jge out lret cmp repnz sti outsl shlb add sub pusha and gs pop (bad) out adc mov in push fistpl popl lret gs sahf andl pop js,pt add mov mov (bad) or push fldl shl sub cmpsb nop js adc addr16 mov xchg imul adcl sub aas popf imul and mov add jl pop or int out dec (bad) xchg mov mov mov xchg stc adc push cmp sbb or mov sar or dec dec cmp sahf jmp pop jle leave xlat pop cmp jg data16 outsl lea pop pop (bad) add cltd cmp mov push jg add sbb xor pop (bad) icebp push dec push clc and xchg dec pushf mov cmp ds mov mov icebp ret fadd jbe (bad) push pusha mov rolb sbb daa insl addb ret jmp (bad) and movsl adc pop push dec test push push add jmp cmpsb lea cmpb das cltd dec sub inc adc test rol pop jae (bad) iret out mov movsl xchg test movsl out or mov rcl jge push in insb xchg lods (bad) cmc inc xor aaa push mov add mov pop lret and in mov pop sarb imul mov jne cmp mov jns sti and xchg mov mov lock ret sbb test mov sbb add addr16 icebp out dec sub sbb ljmp sbb mov jp lock (bad) int3 int3 repz shrb fnop mov mov hlt xor ret adcl jmp jmp inc pop push (bad) sbb mov dec int3 dec shrl es loop sub stos cmpsb dec ljmp lea cli sub movsb into sub pop fisttpll pop push push xor push dec add mov orb push fs test pop xchg data16 bound push mov stos mov (bad) push in sub std push sub in setne int3 sahf inc jns pop sbb enter sahf out shll xchg inc cmp xchg bound xchg jmp je sbb lds pop daa lcall test (bad) ss pop je xor test aas xor std pop out xlat (bad) sbb addl add sahf fimull pop mov in leave repnz xchg sbb mov xor jns popa testb data16 xchg dec fs add pop jne mov sbb sub inc lahf aam mov mov or dec leave inc dec adc rcrl xor inc es push dec pop push sbb dec xor jp jge cwtl push jno cwtl loope cmpsl ja nop test mov pop cmpsb xor stos fimull push pop int3 and or cmpsb mov aad cmp test pop icebp push and mov popa (bad) cmp sub push icebp sti adc out fmulp stc movsl lcall lret pop arpl jle clc pop cwtl cmp stc pop jge pop pop jecxz adc out clc int3 push loope fdivrs jae push rcrb in rol cmp mov xor insl sbb mov int hlt rcl cltd pop aaa lret mov movb pushf jne sbb cmp mov push xor pop pop add pusha add insb das pop (bad) lea shrl xchg push push sbb jmp or mov push lret cmp test dec std repz mov stc imull leave mov pop pushf icebp and das pop (bad) enter dec sarb xor inc scas gs dec out jg jl xchg mov lock push js mov jne lret dec movsb xor pushf push xor pop mov add and cwtl mov jecxz xchg adc jb shrl ljmp sbb sti inc ljmp (bad) dec addr16 mov inc xchg enter xchg xorl jmp arpl stos xchg jae fisubrl sub dec pop ret xlat sub aam les mov pushf sub or inc les fisttp push jp pop xlat outsl repz out push xor fs mov lret push xchg or dec shr ficoml icebp test inc out pop stos pushf jbe outsl or dec mov pop lret lods jnp or loop or shl xchg mov mov inc aas and push (bad) sub popa jae pusha mov mov fwait xor fisub pop pop fmul das cwtl dec call xchg mov ret pusha sbb adc xor mov sub adc push mov jae dec dec inc out mov mov pop dec sbbl add xorl mov mov jmp sub mov rol adc je jmp push (bad) jbe mov pop fistl mov jl jmp jl or scas pop sub push pop pop inc push xchg mov (bad) (bad) (bad) pminub repz cmp dec adc adc pop adc das call xor sbb mov pop xchg add dec test data16 jp into xchg pop xchg in (bad) jns test fiadd gs into push push ret pushl rorb pusha add add mov test mov ljmp dec pop mov xor rorb cld mov out xor or pushf mov pop std gs and add leave clc nop sbb adc popf jo sbb push xchg fnsetpm(287 call or adc lcall xor inc fsts cmc int or add popf mov add and in adc inc inc mov sbb bound xor xor fwait and cmc adc add inc xor stos out push movsl pusha rcll leave jnp pop push scas and ljmp adc jne mov call int or or pop lods pop mov mov pop in psubusw cmp inc inc and dec int3 lods pop pop movsb negb enter addr16 lods mulb adc aad jne jno es pop xor push adc lods sub in jne dec es mov mov stos inc stc jns lret pop mov clc icebp insb (bad) movsl or inc xchg cmp arpl pop jmp fisttpll popf lahf scas push idivl cmp mov dec stos jnp push inc pop test xchg jle lcall and push add dec aas aam roll out push daa xchg xchg loopne scas sub cmp std jg push shl inc or push dec inc fist jle sub mov (bad) (bad) dec xchg dec dec loop inc outsb jne divb dec add imul addb adc idivl sbb push fstps das pop mov push pop leave sbb nop mov sub (bad) push jge mov xor dec push cmpsb aas lret das pop add xor sbb mov addr16 push sub mov sub data16 push xor insb lds sub movsl fisub or cmpsb push mov cmpb jmp lock mov sub andb dec repz xchg inc mov mov lret and adc inc nop arpl rcrb ss xor dec xor jno push push push jle push les and adcb shrl arpl (bad) sub inc aas jecxz loope lret cmp inc push daa sub push idivb add int jb mov movsl hlt mov call test sbb or cmp sub add leave dec mov push jnp addr16 cli xchg ret push ret lahf sub push xchg mov and pop ret in push dec inc sti mov and cmp lock dec add or cmp inc and test jae push xor das fidivl dec lds ss jae mov aad test mov sbb arpl sub daa mov test jl xor inc mov mov jmp mov loopne mov enter xchg dec pop sub mov adc xchg movsl loopne shrl pop int3 xchg sarb loopne sbb repz sub push imul jno jns es cmp scas sets lods mov xchg cmc insl add jo jns aam inc jb enter test pusha adc adc push jle rcr and add or and xor aaa into dec cmp addr16 sti pusha fmull adc popf jge add adc adc lret ret in xchg xor in mov mov (bad) adc cli adc icebp loop movsb and iret sub dec pop push lcall syscall mov and dec sub sub mov mov pop pop xchg (bad) jbe das in daa push inc dec jno sub jmp push push xor push dec fwait stc aas and push mov inc test mov sub add mov (bad) ja int3 in adc les pop in mov jge mov or imul je (bad) mov mov aas mov xor sbb or mov test faddl jns pop lds xor inc xchg js and outsb inc mov jle xor insl cmpsl mov movsl sahf and jno mov movsl stos inc inc ljmp mov sbb insb xor jmp pushf je bound rcl and popf add ror cmp pop in mov mov out (bad) inc rclb jb mov xchg add (bad) inc mov xchg push in dec aam dec add arpl or inc (bad) popa inc mov ljmp daa cmpsl pop stos pop (bad) mov cmc dec sbb sub mov mov cmpsb pusha dec (bad) and cmp mov test push dec mov xchg adc out fnop jae ljmp cmp in and xor adc lea or push xor jb out in cld fadd ja aas stc push adc jnp inc lods pop inc aas mov sub fwait jmp inc adc (bad) bound aaa mov mov addl or mov push add rolb push mov (bad) lret push imulb mov push xor sub sbb je aas in testb into xchg and je fcmove test inc lds ret pop mov push mov dec mov (bad) jae push outsl divl inc jp jbe mov pop push dec add cmp test pusha outsb in int3 fsts jnp adc inc sub lock sbb add daa mov ljmp icebp in fwait stos xchg cwtl sbb push (bad) or test xchg adc push je mov inc iret dec (bad) and jnp push pop bound stos and mov mov popa cltd cs or clc add dec (bad) nop insl stc fcmovbe popa and jmp adc mov xchg (bad) jo loope cmc psubb cmp pusha test pusha je sbb xor nop aam xor pushf xchg in adc or add es (bad) pop call and movsl pop mov xchg push cmpsl jns insl pop das cmp xchg dec aaa (bad) daa stos push mov xchg (bad) xor xor nop sbbl adc hlt test in insl jo movsb sbb js jae jo xchg hlt pop rolb bound mov fildll mov arpl and add scas (bad) mov lods add pop lds sbb mov jmp fwait ljmp test sub clc inc push jg (bad) jo jle mov popa insb push lret les in mov xlat loop pushf out jae mov ljmp loope mov icebp or rclb hlt inc sub sti in jno jle fnsave jnp or out push xchg mov popa cmpsl cmpsl and cmp mov sti and cwtl jns (bad) std jns (bad) pop adc adc lea adc iret fcoml roll jnp mov push push cltd (bad) (bad) fcoml add test (bad) jmp js inc add mov mov out lea mov jl fst push mov pusha test or cmpsb add xor jae lcall mov sub rcrb add inc or mov shrb mov icebp xor aas xor dec xchg out add shrl js divb (bad) fsubrl add mov fcmovne sbb (bad) cmp and push (bad) outsb nop lods adc cmp imul gs sub sub add add ret inc aad sbb lahf sahf into int and cmp mov mov lea lea fnsave add in dec repz fstpt inc jp stc cmpsb adc dec or sahf pushf mov stos shrl fcom fnop mov aaa xor xchg test sub push jp cmp jbe sarb in ss (bad) fcomp sub clc dec push push sbb mov cmp xor rolb in mulb shl pop sub dec int3 rolb push pop push (bad) xor pushf arpl mov roll or mov outsl enter and bound push (bad) cmpsl xor aas cs xor mov or jl jo xor add add js cld loopne aas xchg vaddss add xchg aaa insl and xchg hlt and out imul mov aam sub (bad) mov cli rorl icebp dec testl xor jl fistpll int lock cs cmove sbb mov out rcr scas sbb cmp xlat and cmp mov dec jnp notb lea fldcw sub icebp fisub cmp or pushf lret sti ja test test (bad) jae fidiv imull and jmp iret dec pop in ret pop pop jne out gs jecxz push jnp mov ret in xor int sbb or pop test mov fldcw jl divl rolb pop lods and leave into pop mov inc sub push add xchg (bad) pusha push jae sub add dec xchg xchg jb add cmp shlb in test jns mov add add adc out enter inc add adc fild lea and fidivl push add xchg mov sbbl rcrl repnz dec mov sbb cltd sbb les adc dec xor imul lcall (bad) push ret mov mov adc xor sub fnstsw pop movsb adc mov sub mov (bad) test test mov testl leave cwtl movsb iret fildl cmp dec push push insb lods mov in adc call sti ficomp or loop iret aas xchg mov rclb mov sbb ljmp sar arpl sub int3 dec pop cmpsl icebp lods pop add push pop insl mov andb loope mov out testl mov add push inc sbb jecxz mov dec push push xchg inc dec flds add in test icebp push iret pop push or add mov (bad) jmp dec stc sub cltd test call mov and push and andl jbe and xchg pop adc out insb pushf pop or mov push dec fs test or loope lret jl cmc test inc inc daa lods in fldt clc jb sbb insb push aad arpl ja loop enter adc pop inc and incl scas inc mov adcb dec aas jle iret int push jae xor add pop mov xchg bound repnz addl cmp mov cli cs loope dec fstps je dec add loopne jmp rolb popa addr16 les icebp std mov jbe pushl mulb dec stc sub or addl mov outsl cmpsl sbb test sbb xchg pop inc rorb dec pop into aas xor mov nop push jge xchg std aam adc es (bad) adc cmp mov roll sbb imul std inc xor shrl sub mov aad pushf pop and lods fs cmp int mov jmp add inc mov fldt dec xchg xor (bad) xchg jge es pop je inc jo fs cmpl jmp (bad) or mov je sbb jl icebp mov ljmp aas insb pop lcall (bad) mov xchg scas xor push dec in jo inc idiv scas sbb test lods daa ja inc loope addr16 adc lock aaa inc add bound (bad) fidiv jl es xchg jo push imul mov (bad) sti mov add push pop aad dec xchg into push test sub fisubl or test push cmc pop mov mov mov cmp inc scas or and dec pop jne cbtw sbb xchg les loope mov jne (bad) mov roll loop xchg loope mov mov add xchg test cmc add adc jbe adc imul jg push or adc notb shl in sub mov mov jo and add pop inc mov pusha loopne ljmp ret xor dec in xor sbb js notb movsb dec int3 fcoms pop xchg sub cwtl pop dec mov sbb out (bad) loope cmp ret inc mov (bad) fidiv aas adc inc (bad) mov stc dec push adc sarl push ljmp adc pop inc arpl les jne xsha1 cmpsb or jo int3 daa adc pop mov nop and std fstps into call push repz data16 cmpsb pusha cwtl loope loope mov or sbb xchg out mov mov (bad) xor mov stos fbstp sti lret stc inc sub inc cmp int3 ja add bound jge inc mov jg sbb pop sbb mov int xchg insb (bad) shr clc jbe cmc pop sbb and imul mov inc sbb test mov xchg cmp jae jbe in (bad) pushf loope and mov adc mov movsb sub mov sbb jmp and out xor lock shrl push jns ret mulb call out cld incl out (bad) popa scas xchg lds cmpl gs aad inc dec arpl data16 add stos inc int out lods pop mov push add loope push addr16 or mov mov xchg xor add ficoml lcall dec adc js mov rcrl scas (bad) mov push mov loopne jmp punpckhwd fsubs sti (bad) pop shlb call loope jp stos aam and ljmp inc int into sub test stos leave mov sahf and mov fs lret pushf push xchg and xchg xor cmp mov loop pop aam or mov pop inc jne idivl dec dec add pop pop sub adc bound mov fldl xchg shr jmp mulb pop xchg (bad) mov incb pop sub cltd outsb fs add (bad) (bad) mov mov mov mov movsl out mov inc jo pop push lods ret or gs (bad) stc daa jle jne loop xor call in es pop pop dec js and insl inc cmpsb lcall push cmpsl or fisubr mov je lahf ret jge sub (bad) lea cmp jbe jmp push fs aad testb test into inc dec fistp mov notl xchg aam scas out push jmp sbbb add (bad) cmpsb fwait (bad) lea pushf pushf jb inc fcmovne push inc push inc cmc and loopne xchg xor popa call icebp shrl mov (bad) lret or sbb call mov icebp clc jae push in and (bad) xor jecxz and xor adc cmp push add cmp mov (bad) inc pushl sub nop jmp inc xchg cld sub add push mov scas test xchg push mov push push jge adc pop add addr16 test std push inc sbb jp lods lret fidiv push jb sub aas inc mov xor or in xor mov test add ss inc pop or fisubl or sub (bad) add jle and cmpsb xor pop push dec mov loop and inc or pop (bad) xchg repz mov xor (bad) fmulp push or pop sbb outsb ds add dec cmpsb in cmc cmc lods push fadd imul lea and dec pop mov fdiv imul pop adc adc sahf mov jmp mov cmpsb cmp addr16 je fstps xlat push dec add mov test mulb cmpsl es inc mov movsl (bad) test mov (bad) push inc test fsubrs and movsb cmpsb jae mov xchg repz sahf xchg orl xchg fildll pop add xsaveopt xchg aad gs nop fldenv in fidivl dec mov testb cmp std push inc incl (bad) mov mov insb call aas push xchg enter dec adc test and pop sub jl jo insb daa pop pushf xchg xor adc out fcmovu xchg shll fdivrs test fnsave jo nop notb imulb sub cs ss mov mov inc mov jp divb popf mov pop cmp pop clc xor jbe mov cmpsl or mov cmp hlt push add dec imull stc shrb and or fdivl cmp andl testb int inc or and pop ret es mov aas mov pusha fimul xchg xchg mov mov aaa push pop adc dec mov arpl push pop mov jae movsl (bad) xor fwait scas test sub push mov (bad) lock loopne fisubrl fstp arpl jnp ret shlb loopne rcr sti xor dec test loopne and and or adcl jo roll lods push lods out push and dec mov add and int3 jge add pop xor loope sub add mov std and aad stos (bad) mov repz je or scas fidivl pop xchg mov mov lods (bad) mov sub push push scas pshufw xor jo daa (bad) sbb or ljmp mov mov (bad) pop add lcall fildl or es mov nop jae mov ljmp add push popa sub fwait enter xchg aas pop nop or push std imul mov mov mov mov leave stos mov ljmp adc xchg pusha cmp xor subl (bad) push jno cmpsb popf fnstenv jl push js dec rolb pop mov fadds lahf movsl jno xchg cmp or add fs inc cmp jmp sub adc xchg add mov add sar and cmp loopne jno (bad) sub push xor mov andl adc dec or mov adc xor push mov (bad) or repnz xor outsb mov mov sbb insb lock push (bad) gs repnz mov aad cmpsb mov xor add lcall inc cmp xor pushf jbe repnz ds sbb push out nop je ret push cmp addl xor sbb jecxz jle mov push in jg fsubrs xor mov inc or mov lock ficompl inc and cmp dec daa stos jb and imul out xchg sub mov icebp cmp mov addr16 enter jo xor daa dec mov jmp mov fisub (bad) call jge sub xchg lcall dec (bad) enter xchg add test push test ss lret mov mov pop and (bad) hlt mov repz mov mov mov inc imul push popa push pushf das push push jl pushf cli ja inc lcall rcll data16 dec ret sub loope dec push push (bad) push loop aas jbe repz cmp push js inc cmp dec xchg jp es push add pop in dec or cmp inc (bad) and pop bound push daa cmpsb xchg dec push sub icebp cmp ret test pop (bad) pusha mov push test in dec cs jbe add pop test cmpsb out jne (bad) repnz imul call insb nop dec jp cmpsl bound adc ficoml or push ficoml cmp loope (bad) ljmp adc and push aaa jb in bnd and sbb outsl dec gs jle jae int3 cs mov sub sti jge xor sub test mov jbe sub cmp add popa dec iret mov aas clc inc and mov sbb cmp mov cmp stos push (bad) or and fisub (bad) jmp insb dec rcrl and sbbb outsl inc neg mov aas push sbb push mov or lret dec jl push cmp cmp sahf mov in addr16 icebp jnp jnp popa enter cmp mov cltd mov add jns bound add jb lret mov cltd cld stos pop repnz das sahf (bad) and imul (bad) int inc clc je jae xchg stos in pop scas outsl dec lret scas fiadd mov mov mov js xor mov add clc jo mov push inc fcompl add jmp adc (bad) loop jmp js out and outsl iret push push jmp mov imul push inc sbb and push sub addb loop mov cmp mov dec pop sbb les push shrl dec and and nop adc xchg lret sub cltd add (bad) jecxz jl push and mov call xchg pop repz ret jo rolb pop (bad) dec mov and out loope les xor and test pop (bad) push and test sub in cli pop in outsb lret mov sbb jecxz add ret leave xchg pop sbb repnz popf xchg or scas jne repnz movsl ret jo pop xchg cld fnsave jo stos jmp out dec and repz and mov test xchg sbb adc or push mov sbb jne sbb daa push inc mov pop cmpsb daa ss mov lds fidiv mov cmp mov pop fucom lods cmp sub jmp cmpsb dec and pop or inc mov jbe sub ret xchg pusha and bound ss popa adc mov sub xchg and xchg jbe stos pop mov jge and jle test pop mov jle mov sbb int pusha (bad) frstor lods outsl xor jae js stc hlt bswap cmc lds dec scas push jge adc mov mov pop sahf test (bad) lock fidiv andl (bad) dec mov das pop jo rcll in push push aad stos xchg lcall pop fnop out adc mov sub dec inc sti mov imulb stos add push xor out xlat inc push sarl rcrb into push cmp cmp mov jo icebp push mov fwait push xchg movsb mov int3 (bad) sbb xchg fcmovbe push mov cs sbb push mov stos dec pop sbb test int3 sbb or ror repnz xor xor xchg fldz jb inc jecxz pop lods cmc jecxz mov inc lcall (bad) sub inc adc push add pushf scas push jno rorl mov adc divl inc in mov jns xor rorl or loop xlat jp aad enter cmp (bad) repnz cld das cmp fisubr sub push (bad) mov inc les xchg xchg push push cmp repz adc push scas inc pop mov xchg test popf pop xor jns out fwait xor push mov outsl lods dec add xchg mov (bad) pop sub icebp jne fwait dec jmp mov js mov mov push jp xor xchg add sub das and scas dec inc dec sub xchg mov out mov mov xchg in mov sbbl push out pop and (bad) sub sbb sbb mov out mov pop arpl mov aam sbb push cmp (bad) insb jb sub xchg add stc ljmp xor popf mov gs iret push test xchg push jl mov mov stc fmull scas xchg aam and loop out sub xor and mov fnsave pop add push xor xchg nop adc je mov add pop dec adc cmp push push push cltd sbb mov repz imul cmp xor and pop mov dec adc or sti fs outsb fldcw in and or sub movsb lret xchg nop fcomps mov cmp (bad) int3 sti xchg push push mov cld jae stc dec lcall push (bad) repz and rcll sub push sub pop mov fildl cli inc (bad) mov fcomps inc mov imul lea inc push clc aam popa pop or dec xchg (bad) outsb (bad) idivb pop jmp mov push or cmp lods and dec push inc mov fldcw sub mov stc dec pop dec pop cld fimul jae pusha daa dec pop movsb addr16 mov ljmp aam fild movsb stc hlt sub call outsb cltd sbb xor loope mov popf bnd cs adc add sti xchg or sub rcrl dec mov (bad) mov cmp dec test inc or mov int3 sbb pop mov popf push adcb sbb shr or push jnp lret enter lods cmpsl fdiv in dec andb jae divb ss mov sbb (bad) inc ret sub negl fisubr pop and push leave cmpsb es (bad) lahf stos and insl adc insl xor insb and push jl lock popa imul rcll jecxz test jge xchg int leave rcrl jl add mov aad ds adc out push addr16 adc xor jne push out xchg inc pop sbb inc and ret andb mov pop push jp scas addr16 mov mov (bad) jne mov (bad) ja cltd test cld fdivrp pop dec xor xor sub push pop notb outsb lods mov test jne pop or mov cmc mov xchg pop mov das add (bad) bound xor call inc add and (bad) (bad) xor aad inc test (bad) lods mov lea (bad) test rorb xlat in cmpsl iret cmp xor pop jns mov jge jecxz add lahf andb cmp adc ja adc xchg jnp pusha adc mov sub xchg in xchg into sbb je pop addl call pushf xlat inc pop (bad) jmp fdivl inc insl mov (bad) mov cmpsb push or out in xchg mov add in or cmc sub inc pop sbb jmp in stos push jbe push lods call mov mov es enter stc das xor add leave imul mov or or scas aam fdivrs cs dec and cmp or jle inc inc jmp int clc sbb std cwtl imul mov mov test push mov mov xlat movsb xchg jae test cmp push lret add mov pop scas xchg loopne sarb mov test push test ret xchg ror xor xor je cli aam ret pop push sub test jno imul push push pop in js dec inc scas or jg pop jae or xchg dec dec and movsl (bad) std and push cli int3 xor cmp add mov pop out loop in je fnstenv insl gs cmpsl dec vpsubb sub pop mov test xchg hlt xchg xlat divb inc cmp mov adc aad out mov test out insl adc xchg inc jae mov je rcrb sahf and sub mov in pop inc out xor fadds ss cmpsb jno mov cmp repnz push je xor xor push or sbb cmpl fmul stos push sbb arpl jecxz es mov (bad) lret pop js in and pop sub xchg jg ret add (bad) jae (bad) pop cmp and jmp out jbe pop sahf fs loopne (bad) out notl pop pop dec fstpl (bad) jnp hlt fdivl cmp (bad) sbb nop (bad) lahf xchg cmpsb loopne and addr16 xorl mov sub sbb int roll roll pusha movsl cmp mov in fdivrp (bad) out jp lret (bad) xor pop ret repnz jp ja pop jge fist pop pop pushf popf imul in mov (bad) das out loop cld ret or jne mov (bad) push inc add dec and mov (bad) popf mov cs pop xchg enter xor (bad) mov clc outsb sbb test fmull fbld fdivrl mov xor (bad) mov test (bad) cmc jne clc and notb and and mov lahf leave (bad) lods fisubr add in mov or pop test iret insl sahf repnz adc mov cmc pop push mov sbb and push and mov mov outsb pop leave testb icebp push fcomps mov or mov (bad) dec inc (bad) movsb dec imul daa cmp fwait negl dec jbe push pop and mov in scas dec popf test dec into imul neg test jp test (bad) push scas lcall mov scas jge xlat cmp xor pop fdivrs mov add mov out (bad) shr js movsb test andb jbe jae inc jmp ficom push jb fiadd insb loopne aaa add bound mov or out mov inc insl mov aad pop cmp cwtl arpl in mov cmp std sbb add sbb mov pop loopne sahf xchg jecxz mov sub sub xor add or insb pop out (bad) mov in mov mov sub cli or outsl pop mov xchg setnp into inc lock out xchg roll loopne out cltd xor in pop mov push test (bad) push fildll and cmpsb stc addl fs lods or ret mov dec dec (bad) ja adc movd push call adc jae push nop (bad) push inc repz (bad) mov push pop leave scas lods pop push sbb sub adc or mov or jmp mov sub mov test mov and xor dec inc adc sub (bad) xor xchg in push out inc mov xor mov mov and addr16 ds push mov lods and nop jns jmp sbbl (bad) xor inc enter dec mov sbb xor dec mov sub inc mov bound enter dec daa cmpsl ficompl int inc jae (bad) popa aad cmp mov lret mov xor stos pop ret xchg jmp cmp mov out insb je arpl pop xor js pop outsb dec sub hlt out jg stc mov in mov (bad) hlt je lock imul hlt inc sbb push lds fistpll xlat aaa bound notl pop cmp push cmp xchg cwtl or or add jbe in fstpl mov lods je sbb mov dec shrb outsl sub stos mov scas out adc dec les push push dec and fild mov je fldenv int cwtl addr16 jecxz mov mov jns nop sbb sub ret mov pop jbe push inc sbb xchg sbb jmp icebp xchg lods out xchg sub xchg jb xchg add mov jecxz js cmp push adcl jne int3 sbb popaw mov out cmp ljmp sbb push shl bound mov fstpl xchg nop fs icebp aad sub cs push cltd loop mov (bad) out sbb jge aas ja xor in dec cs clc sbb loope test stc mulb fcoml cmpsl xchg jns sbb into xchg mov add lock adcl sbb inc mov adc xor aaa fdivs jbe movsl lds shrl mov sbb stc daa cmp pop repnz test xchg pusha cmp sti xor fadds pop pusha add and in mov add fistpll xor fdivl rcll pop fucom push scas mov xchg push mov (bad) pop stos shrl sbb std inc cmpsl imul std cld mov test (bad) aad or or mov push mov add jbe les les inc ljmp rclb sub popa dec movlps adc clc outsl movsb imul in wrmsr mov inc push jge jmp adc add mov cmp je and imul (bad) mov popa add lret cmc lahf mov divl push sbb cwtl les adc shlb cmp stos jle loop add cmpsb sbb cmp jge movsb lea xchg mov mov dec dec mov pop pushl sub imul adc cmp lret scas push bswap aad je inc push out fistpl ds mov ja hlt pop loop xchg mov outsl lea dec lcall icebp xchg mov sub out add pop dec jno loopne lcallw fwait int3 mov gs leave jb jecxz sbb lock (bad) test scas pop (bad) in pop sbb popa cmpsl into push outsb stc push xchg nop adc sub push jp jnp adc aaa xor jbe fmuls xchg sbb pop mov repz test jle and in push (bad) mov lods sub mov rorb mov test adc jp xor clc in jp repz out (bad) xor xor sbb cli xchg add arpl sbb or std pop es lods out mov push sahf iret push clc cmpsb fcmovu mov mov hlt fiaddl stos test icebp xor cmp out or mov jge xor fiadd shrl mov les mov push push lock fwait ss ss adc fist mov adcl repnz mov popa mov mov negb pop cmc out xchg fwait imul jo inc inc mov cmpsb les rcrl push shr in cltd pop lds adc dec inc push jge stos inc (bad) fisubr jmp aaa sti popa loope jl (bad) xchg les dec ja push mov jg xchg aam add iret mov rcr adc or rcrl or outsb lcall fs mov adc lahf pushf js adc popa (bad) idivl and scas adc divb inc or mov jae mov sub stc cwtl sbb rep sub adc into in jge enter sub mov cmpsl sub fdivs lret lret inc sbbl cmp mov lods jbe add cli scas cmpb stc xor loopne push popf movsl out pop outsl addr16 cmp mov mov xchg or scas into data16 outsb scas jns iret in sarl jl arpl cmpsb int3 ja ljmp sahf data16 insb jne jae sbb inc leave rcll cmp jg xor int3 pop mov cs inc cmp insb cld sub clc dec fwait cmp mov out and pop cmp daa add popf addl xchg pusha mov sub pop sub xor scas jno arpl mov xchg mov push icebp sbb sbb add dec rolb mov add cmpsb pop dec movsl movsl xchg ss inc cmp sub cs pop mov sub lahf push daa cmp fildll cmpl in (bad) insb and int3 xchg dec dec mov xchg jl stos jno (bad) mov arpl (bad) leave shlb lcall mov mov mov inc jne cld lock adc imul (bad) push push xchg pop add aaa ja cmp ret mov cmp inc mov leave daa movsb mov adc mov insb fldt cmpsl jae adc dec add fstpl push arpl mov std push xor stos mov clc xchg fs mov mov mov cmc pusha dec inc adc or inc and pop sub jno cmc fmull jg and insb inc js pop pop pop mov fsubs mov aam (bad) mov (bad) ds es jns movsl xor in mov xchg cvtpi2ps adc hlt inc mov ja enter sahf and inc or stos adc fndisi(8087 in adc (bad) lds cmp fsubs (bad) sub int3 push adc scas jl lret add insb push sahf sub test aad pop xor leave push sbb inc dec in loopne int3 data16 stc adc lret xchg push mov mov pop rclb jae xorl rcrb scas dec pop fsub or movsl add les mov ret mov cwtl push stc jbe add in mov add pop dec (bad) xor add xchg jl js push xchg sbb clc xchg xor ds sbb or mov int (bad) les scas jae outsl gs nop fnsetpm(287 inc jg les fs mov cmpsl mov add and push (bad) aas or sbbl cmp adc stc and aaa adc jmp inc popf popa sarb scas adc inc dec stos sub (bad) lret push rcll push sub sub fs mov cmp add inc push push jb iret jno push xchg rcr mov cmpsl rclb les sti fldenv cmp xchg pop cmp sbb pusha or mov pop push inc jmp mov mov xchg fadd imul jb adc mov vmwrite lcall jmp dec inc movsb data16 stos sbb stos cltd push mov mov int3 adc imul xor (bad) lcall pop mov (bad) in in icebp aas jg outsb pop bound mov int or in lods cmp cwtl test dec mov pop pusha int mov mov (bad) stos push xchg mov cmp and xor adc push (bad) pop rolb sbb pop fmul mov xchg add pop jg call jle mov das cwtl stos xor xor push ret add cld dec and add add add (bad) (bad) incl add add add add add add and add add dec in stos in mov mov in mov mov in mov mov in and mov mov in mov mov in mov mov in popf in xchg push add add pop in mov mov in pushf in stos in xchg mov in test mov in test mov in mov mov in mov mov in mov mov in mov mov add outsl in mov mov in (bad) in movsb in mov mov in mov mov in stos in mov mov in xchg in lahf in mov mov in sahf in and cmpsl in xchg mov in mov mov in xchg in mov mov in mov add mov in lods in mov mov in cwtl in xchg mov in mov mov in stos in lahf in mov mov in and test mov add jb mov in mov mov in movsb in lods in stos in fwait in mov mov in lods in fwait in sahf in stos in mov mov in mov mov in mov mov in (bad) in cltd in mov mov in (bad) in lcall in xchg mov push pop add add mov in stos in nop in stos in mov mov in and cltd in mov mov in lods in mov mov in and xchg in xchg in mov mov in lods in cwtl push or add push in xchg in popf in xchg in xchg in mov mov in mov mov in mov mov in cltd in mov mov in test mov in mov mov in nop in mov or add inc in mov mov in mov mov in mov mov in fwait in (bad) in stos in xchg in xchg mov in cwtl in mov mov push or add data16 (bad) in mov mov in cmpsl in test mov in xchg in test mov in mov mov in scas in sahf in test mov in nop in cltd in (bad) in test mov in mov mov in test mov push or add dec in test mov in xchg in mov mov in test mov in movsl in fwait in test mov in mov mov in mov mov in xchg in mov mov in cwtl push or add inc in test mov in mov mov in mov mov in mov mov in mov mov in xchg in sahf in xchg in and lods in and add add mov in xchg in mov mov in stos in lcall in mov mov in mov mov in xchg in cwtl in cmpsb in (bad) in mov mov in lods in cmpsb in mov mov in xchg in cmpsb in cmpsb in cltd push push add add mov in mov mov in mov mov in lods in lods in xchg in cltd in mov mov in stos in xchg in fwait in mov mov in mov mov in mov mov in mov sldt add mov in cwtl in xchg in mov mov in (bad) in pushf in movsl in xchg mov in cltd in (bad) in and cltd in mov mov in mov mov add dec in mov mov in mov mov in nop in mov mov in and (bad) in mov mov in test mov in cwtl in mov mov in addb add add mov in test mov in (bad) in mov mov in sahf in and mov mov in mov mov in xchg in (bad) in mov mov in pushf in mov mov in mov mov push adc add dec in mov mov in popf in xchg in pushf in mov mov in popf in nop in mov mov in mov mov in mov mov in mov mov push adc add dec in mov mov in mov mov in and sahf in movsb in sahf in xchg in movsb in mov mov in mov mov in mov mov in mov mov in cwtl push adc add jne mov in mov mov in mov mov in mov mov in mov mov in mov mov in mov mov in lcall in mov mov in (bad) in sahf in test mov in mov mov in lods in (bad) in (bad) in mov adc in test mov in (bad) in mov mov in xchg mov in mov mov in stos in (bad) in mov mov push push add add in movsb in cmpsl in popf in mov mov in xchg mov in xchg mov in mov mov in xchg in test mov in mov pop add add in mov mov in mov mov in mov mov in (bad) in mov mov in test mov in cwtl in (bad) in mov add mov in test mov in mov mov in and pushf in lods in test mov in test mov in mov mov push sbb add dec in xchg in stos in xchg in mov mov in movsl in sahf in test mov in fwait in mov mov in mov mov in test mov in mov sbb add jne mov in xchg in scas in movsb in cmpsb in cmpsl in mov mov in (bad) in and mov mov in fwait in mov mov in mov mov in cltd in xchg in lods in mov mov in mov mov in mov mov in mov mov add dec in mov mov in mov mov in stos in xchg in test mov in mov mov in mov mov in xchg in xchg in pushf push sbb add aas in movsb in stos in (bad) in mov mov in xchg in test mov in mov mov in mov mov in mov mov push sbb in cwtl in lods in mov mov in lcall in lcall in mov mov in mov mov in (bad) in mov mov in scas push push add add mov in cmpsl in movsb in mov mov in test mov in xchg in xchg in mov mov in cmpsl in xchg in xchg in mov mov in movsl in mov mov in movsl in mov mov in test pop add add mov in mov mov in mov mov in mov mov in test mov in test mov in xchg in test mov in xchg in mov mov in mov and add pop in cwtl in test mov in test mov in lcall in lahf in mov mov in lahf in stos in mov mov in mov mov in cmpsb in (bad) in stos in xchg in cmpsb in movsb push and add cmp mov in xchg mov in and lahf in (bad) in mov mov in mov mov in mov mov in cmpsl in mov add mov in test mov in xchg in movsb in and sahf in mov mov in mov mov in movsb in test mov in mov mov in cmpsb in and test mov in xchg in mov and add dec in movsl in mov mov in mov mov in mov mov in xchg in mov mov in (bad) in popf in mov mov in mov mov in xchg push and add inc in lahf in test mov in mov mov in cltd in mov mov in movsl in mov mov in mov mov in mov mov add pop in test mov in and mov mov in stos in fwait in stos in lcall in mov mov in mov mov in test mov in mov mov in stos in xchg in test mov push add add mov in mov mov in xchg in xchg in lahf in test mov in (bad) in test mov in lods in mov and mov mov mov inc scas aaa mov pop jbe,pt pop movsl inc sub (bad) xchg aas pop push inc fstpl ljmp dec std ficom icebp push scas dec fcoms dec xchg roll pop mov jae jmp insb pop and sbb push xor call sbb xor pop fidivrl adc fdivs enter loop dec mov sub inc jmp loopne aad pushf push loope jmp cmpsb cmp mov pop in movsb mov subl push stc pop push (bad) mov push jecxz push rorb xchg (bad) rcrb jp xor cld es pushl dec jae mov cmp adcl ds cs je mov mov xor neg sub or inc push (bad) mov and pop push stos mov mov xlat xchg out adc mov stos add lcall or lret jl mov add pop xchg divl stos mov lret ljmp mov pop mov daa dec (bad) xor cmp je mov lret cmpsl push sahf enter popa test xchg iret subb mov pusha loop sub roll sbb sbb inc pop ret jg es (bad) sbb into mov leave rorl fwait xchg push mov (bad) fsubl jl push insb sbb sub adc inc xchg aad vpshufhw call sahf in xchg repnz inc mov addl sub sub faddl push repnz inc mov movsb in lret jno (bad) imull inc outsb aam jmp clc pop add and add or jg or dec fcmove mov push add jmp add (bad) data16 sub inc dec dec or subb outsl fwait inc mov push inc (bad) (bad) lret jb cmp test nop nop mov push add sbb loope icebp inc lret mov sti dec divl rorl xchg or mov repz or sub stc (bad) pop push inc jmp cmp push enter add mov movl jns sbb and or push pop fbstp sahf into cmp cmp mov test flds icebp scas sbb xchg fstl dec mulb sub fnstenv cmc das mov je movsb scas aad inc inc xor repnz test inc pop jl sbb add pop pop mov or outsb fstpl mov pop mov sub out push xlat mov mov push mov mov mov add mov loope ret mov rcl out adc or inc xchg insb mov mov lret adc loope sbb ret push cmp ss sbb sbb jnp out addr16 movsl cmp inc and jbe mov mov std inc in lcall cmp dec mov rolb jge stos and or jae dec and into add arpl insl mov aad js mov imul push fs cld arpl cmp insl mov repz int ret roll adc mov mov push sub in inc call (bad) ds pop add fnop push jge xor jle aam lds pop sub fs (bad) mov pop push xchg xchg (bad) repnz or mov rorb aam or pop and xchg dec stos push cltd push pop add in lahf je enter xchg in into add xchg andl test and inc sbb jnp xchg dec fisubl frstor mov cltd fnstsw or std outsl rcll add mov fadd and push and dec dec idivb mov das inc fisttpl xchg (bad) mov data16 pop xchg xchg fcmove lock add dec inc dec adc andl cmpsb mov push clc jl xchg ja cltd adc mov ret pop mov lahf sub xor mov inc mov insb loope fnstsw cli sbb xor lock (bad) fwait add xchg out mov mov or xlat pop out push push lock stos cs and andl sahf std pop adc ror insl dec and mov fsubrp mov push mov adc lea imul push clc stos insb je mov mov mov mov jge fisttpll mov jnp xor rorb mov roll loopne and stos xor cmp insb fnstenv push xchg jb dec push dec jle and cmp inc mov (bad) iret cld nop jp,pn adc imul ds mov rolb or bound push lods sbb xchg cmp divl inc push adc lds pop aas or lea xor mov (bad) in lcall jmp jbe push or xchg aam sbb sub enter and mov inc push cmpsl hlt mov and dec ret sbb cmp adc jle shrb (bad) lret push test jb cli push mov sub dec aas xchg xchg test iret push add jns push div cmp adc stc xor andl shrd bnd stc mov lret jns repz pop jo xor pop xchg out lret movsb out test adc arpl push ja push and add fmull mov push std jmp add push icebp xor loop adc lods sub cmp jne mov outsb dec adc lahf rorb push iret jmp lods pop test jo mov ss gs out xor inc bswap xchg test fwait dec iret add div and or loop fiaddl mov cltd or mov adc push aaa gs bnd test jne pop int3 fild gs je or cmovle inc or dec mov outsb xlat pop add xor cli xor dec in sub das (bad) popa push (bad) mov pop out outsl das mov or in xor sbb arpl mov lock cltd or cmp dec add and mov cmp xchg rcl dec mov inc jl clc popa xor outsb das mov jb fidiv inc pop cmp jp scas push mov test cmp mov inc or sahf sbb push add mov daa or mov dec xchg movntps xchg aaa mov lods (bad) loopne sbbl push js arpl xchg pop imul aaa js push push and loopne shr int3 div dec dec jl popf mov call ds popf mov aaa popa xchg add pop push inc hlt jg in mov xor mov mov repnz xor in jecxz std sbb aaa and cmp mov jno xlat lds pushf fild sub lret dec sahf jb fwait and test push sbb or popf imul push add insb cmp outsl cmp or rorb cwtl test xlat cltd xor into cld jne cs fisttp xor dec jg rorl std pop push xchg mov pop add addl mov fimull xor out inc xchg sub mov out and push fistp fdivrs je ret (bad) mov iret imul mov or out divl ss adc adc push jl (bad) dec int loopne imul leave lea jg pop ret adc aaa inc (bad) hlt aad jecxz mov movsl jecxz fdivrs xchg mov or add or test nop xor mov jb pusha mov push pop pop popf out (bad) out mov popa lcall fsub loopne cmc dec mov mov inc cmp stc mov push cmpsl push sahf xor iret cwtl lds testl add shr adc enter add rclb jnp int jnp cmpsb rclb inc int cmc pop xchg repz pusha lods fwait mov sub lcall (bad) scas push jecxz push scas jnp push cltd pop ds fchs add leave loope les sub scas das fwait aam cli sbb mov inc mov outsl inc xchg lret inc idivl sbb mov lods cmpsl adc popa and mov cli mov (bad) push rcl pause popa and cs sbb sub dec popa adc mov or sbb jmp xor cmp stc (bad) (bad) jmp ror loop sbb fnstcw sbb sbb push push xor xchg sub sub or sbb test jnp shll lret and mov mov cmp sti ret sahf xor jl sub mov (bad) into mov push out fnsave dec xlat add dec cld inc out and pop jmp inc das cli mov and ss push stc xchg xadd add cmp je jbe ret and xchg and or xchg and xor push sub push dec lock jno (bad) sbb and movsb inc cmp std inc and call gs in push pop lods dec sbb setl cmp sub or ret xchg addr16 rcrb pop pop pusha fsubl cld sbb hlt mov ficoml xor or rcll and lret cmp dec std movsl xchg xchg cmc add out cltd (bad) pop adc push jo fisubrl push inc mov xchg shlb mov sub mov outsb in mov out adcb enter and nop das pop add jns and push cmp push mov sub adc aad popa test lahf or xchg fs xchg das hlt imul push jne push inc lea ficompl js or sub addr16 push mov push cmpsb std push and inc (bad) sbbb push fstpt les mov sub add cmp hlt fsubs (bad) call icebp bound jnp sbb cmpsb ds dec mov sub adc inc xchg sahf pusha rorb mov loope xor mov inc inc (bad) fdivr push xchg pop in mov aam int xorl (bad) ficompl sub mov stos mov es mov or loope pop cmp loop pop in xchg inc adc push vhsubpd nop test addl inc imul ds jmp jmp ds fs dec addr16 nop xchg inc rcrb (bad) or inc adc stos sbb cmp sbb fdivl lea cmpsb adc jns into out popf in mov fsubs push movl dec pusha pop fwait xchg (bad) jb push pop fwait xchg xor loope cmp mov stos (bad) (bad) xor lcall stos jp je mov scas sbb iret ret sbb xlat es cmpl test cli lods jp pop fiaddl jmp mov repz xchg bound (bad) in pop xchg sbb cwtl lcall add jl lret push or ret xor dec (bad) cld jl adc jp fstl jmp dec adc add mov mov pop cmc or lret dec (bad) push or and mov cmp mov push (bad) repz pushf rclb inc mov jle test sub inc out insl pop pop fidivrl and sub (bad) mov lahf lds inc jno xor cltd add fs (bad) mov ss icebp gs dec or les ds das xchg test (bad) cmp xchg xchg push add sahf movsb mov push in xor mov mov dec sub in mov rorb xchg fdivs (bad) insl xor fstpl enter out cmp in lods xor xor xchg inc adc dec sbb jmp cwtl mov and pop shlb std jle ret js in xor mov jle adc data16 and or into push mov add popf cld arpl pop push or pusha test int cld (bad) jle ss testl (bad) xor pop jnp insl push and jp sbb pop inc jnp mov loop mov icebp pop rcrb cmc inc pop sbb test aad cmpsb fadd dec and pop jnp movsl push movsl nop popa jecxz or pop out lds jl add cmp outsl and dec push mov (bad) lret aad shl mov mov movsl and cmp mov idivb (bad) xor cs jbe dec (bad) mov es gs aam ja push lcall repz es imul pop cmp push cmpsb fisubr dec pop sub mov fisub in xor xchg pop subl mov mov out and int testl daa xchg rcr lret dec inc outsb mov stos aad les mov into lret imul jmp pop (bad) adc mov loopne jl cmc addl dec mov mov aas repz mov mov mov cwtl aas ss lcall dec and cmp imul fxch pop scas icebp mov sarl mov or sub ja push loope sub pop xor lods xlat push pop sub push adc push sti mov std dec rcr xor aad mov aad xchg enter pop mov jb adc outsl dec les jnp sub test xor insb insb enter jne mov outsb sub or pop lcall test xchg scas sub xchg pop pop jae cmp sbb jns hlt dec fs scas ss xchg stc les dec scas in mov jne bound jl pusha test fdivl pop es (bad) mov popa jne jo cld sbb mov outsb push xor mov in out fisttp dec push and and jmp xchg pop add mov xor mov or andl decl pop add (bad) test bound jle jg dec (bad) (bad) (bad) sbb test xor pushf dec movsb rcll sub inc test std xchg fmuls and mov add dec iret cmp mov dec clc (bad) (bad) repz jmp add xchg xlat out sub mov and mov adc mov and jmp jno fwait ljmp fiaddl ds cmp hlt lods jbe in cmp mov in and out int3 jge jo fldt pusha (bad) mov ss fildll mov adc dec mov int3 cld lods adc test test pusha pop in push ja xchg mov cmp add xor sub jb mov ljmp mov mov out push and popf dec push mov pop xchg popf sub movsl pop sti xchg jp mov jmp mov hlt adc mov xchg inc mov or iret push mov jge inc jo mov mov sbb fs leave fiaddl sbb hlt loope push cmp pop test push jle in stc cmp pop ret dec mov mov fldenv lods push in adc mov pop push and (bad) xchg pop ss movsl dec adc loop xchg pusha sbb inc and popa test cltd dec or pop push daa xchg fidiv push jb nop adc jae stos aam insb cmc stc outsb mov test mov sbb test leave xchg dec and cld cli sub imulb int push cltd jb add ja pop push mov (bad) pop enter pusha xchg stc rorb sahf test mov mov daa adc mov lods ret pop xchg pop test ja cmp test lcall mov outsb stos hlt inc sub mov jae rclb lret mov adc inc leave adc cmpsb dec outsb xchg sbb outsb imul inc or iret sub and cmp es push cmp xchg popf test inc mov xor sti or daa adc ret and repnz xor ficoml ss jno jbe scas ss pop (bad) xor jae jae xor test std jle xchg mov pop fwait lods mov xchg jbe lods popa jp sbb pop insb sub push add cmpsl adc push loope sti xor test jmp mov sbb outsl out jecxz mov adc stos repz add test insb pop std and dec clc adc and incl das das sti or popa inc out dec sbb insb sub scas addr16 cmp enter out sti pop divb pushf lods shll mov sub xchg in pop ja mulb (bad) movsl jo (bad) (bad) bound cmp in or in or dec sbb lods inc cmp ljmp lods rclb add out int out (bad) out pcmpgtd dec jns aaa mov xor push bound lods adc das sub outsl pop or add enter ds jnp adc clc push sti pop cs inc les dec xorl loopne inc clc push add mov push sub add cld enter and xchg ja pop (bad) idivb cs push xor push lret js int pushf cld pop jb adc shrl push sbb add insb cli cmc xchg test addr16 xor adc movsl mov fnstcw out ja dec dec xor mov ret (bad) sahf xchg xor mov aaa mov popa movsb pop dec stos jecxz mov imul pusha mov sbbl adc pusha fildl push dec arpl push xchg cmp shrb stc sahf cmp stos jnp pop jo aam push shl ja mov scas call ret push repnz inc xor ds clc loopne or enter psubq xchg adc xchg ret repnz dec jmp popf (bad) xor mov bound mov add xor sub jl sub int orl ds stos dec mov sti ret pop das es mov xor and nop imul rolb pop sbb test into sub add rcrb xor adc add fdivr inc inc jae mov cli cmp int mov mov scas ljmp mov dec shl imull or cmp subl ljmp push pop subl sub cs test int cwtl jbe cmpl aam or movsl ss adc jb mov mov dec mov and dec push add daa or xchg push xchg cld lret mov mov mov std ja xlat ss ss scas daa rclb xchg fnsave jb adc lcall and mov xor into or mov imul mov lcall rorb adc cmp xchg jp and fsubs jne mov cmc pop imul fwait pop push imul mov xchg dec push cmp cmp mov jmp nop and aaa (bad) jo mov ret mov mov ja dec mov xor jmp sub xchg cli incb and aaa inc fisubl ljmp dec xchg aad and pushf shl inc stc mov xchg stc repz mov mov jb test inc insl iret aam dec sub or sbb repnz insb test dec imul fstpt repz and movsl push ljmp mov call mov imul iret xchg movsb add (bad) enter add arpl add in pushf or aam adc and pusha dec sbb pop xchg dec jns in pop jo repnz push mov mov xlat or jp adc je popa cmp lods (bad) daa cwtl sub mov pop add dec xchg mov xchg push pop jne scas scas orl mov mov cmp jmp les add lods bound call pop sbb dec stc stos ret pop addr16 mov fcoms cmp fsubl jmp cli sub aaa adc clc cld adc jb (bad) cmp jmp out mov adc cmp xchg popa movsl mov pushf and sub mov sub (bad) and mov stc mov mov call in js rcrb lret pop into and clc sti repz test (bad) rcrb adc sbbl fcompl and mov icebp hlt aaa (bad) lcall stc ret mov loopne icebp sub cmp xchg xor daa popa hlt sbb outsb cs mov mov pop xchg ljmp adc xlat cwtl dec pop test inc es fistp and out jle int or add xchg popf and adc insb push push mov jo pop addr16 out inc hlt bound pop or leave clc pop push jg (bad) out push rcr insb popf xchg pop lret sub mov adc les pusha push lock lcall add outsl or popa cmp pop pop addr16 mov inc sar jns jecxz lds add in and sub aaa cltd stos pushl add and in (bad) test aad sub add dec push aad popa outsl test cmp loop js dec (bad) fnsave fs sbb adc cmp jge sbb fwait (bad) jle dec sub int sbb add sbb mov jle les in lcall inc cwtl and mov sti pop mov ret stos sub loopne ja jnp cld loop jg cld loop imulb xchg fwait pop (bad) sbb es daa mov in mov iret and aaa dec lcall test add bound mov pop mov mov fild or jge or clc loope ja and xchg dec out xchg mov loop clc insl int3 and mov or leave xchg sub out (bad) mov mov movsl cmp mov mov xor in xchg dec mov fdivrs sbb cmc cmpb inc fcomps jns ja in sti jnp ljmp dec sbb cmp mov cmp int sahf in rorl dec pop jle jg push dec daa stc adc xor lock dec cli mov jecxz lea iret lods pshufw lock out add mov hlt loop mov pusha cli jb mov mov ljmp xor in out ret or scas data16 xor add sahf jmp cmp inc add mov push xchg test adc aas aas mov jecxz nop fist dec mov lcall cmp test lret mov push loop push popa mov pop or cmp push or sub sahf sbb mov clc mov rcll mov mov and std ret test ret mov dec jmp inc nop dec add les cmp add or jb in mov fnstsw loopne sarb mov cmpsb lds bound idivl outsb test pop fsts sbb loop scas ret sbb popa mov xchg cli test jg and scas into cmp cmp jns xchg push cmp sbb lret addr16 or movsl (bad) jo test ret in lods fdivl push jb fsubr repz jl jg adc adc mov sub xor fs dec test cmpsb popa loopne fs mov shll (bad) into pop mov mov xlat in inc mov sub inc jg cmpsl arpl mov xor mov pop outsl aad pusha push push gs inc js out repz push cli xchg lcall out add rolb xchg jle push xchg shrl xchg pop insb andl adc pop jb sbb and xor pop xor jge in pop jl xchg ja icebp dec dec inc inc pop lock je ret lods inc sti sti loopne mov and jno dec add daa (bad) out sbb inc (bad) jns mov inc addr16 aad (bad) loopne inc pop enter push rcl imul insw xor pop or setp inc mov pop pop mov mov pop xor test ds not pop or gs scas mov out jge loop int stos hlt cmp (bad) (bad) repnz cmp aam pop push nop jmp addr16 fdivrl out xor inc push pop (bad) repz xchg jecxz pusha test out push aaa iret mov mov sub dec fs ret shr aam jp mov cmp sbb push daa icebp dec push inc adc push loope leave mov test insb jmp aad mov jg and pop in adc jp mov dec pusha mov js and mov (bad) mov cld inc mov mov into out fsubrs xor cmpl scas jne mov lods jmp push sub cmpsl pop stc (bad) test xchg (bad) stos subb dec int3 data16 push and lods loopne pop sbb fdivs les shll mov jb mov sbb int mov aad and and int3 ret sub and or add pop je xor push cmpsl or cmpsb imul ret aad pop inc fwait add popf or rcll pop mov push (bad) sub xchg (bad) ss bound xchg xlat mov jmp sti mov out ss stos mov dec push ja dec sbb test out faddl xchg mov fistpl outsl push enter inc imul out dec test out repnz mov cld pusha fcmove inc in jne rcl pop or or cmp xchg orb inc icebp in into and dec fstpt fiadd je (bad) xchg pop sub xchg mov test mov or xor dec in out mov sbb lret lds andl (bad) cmp pushf cli fbld dec cmp sbb les mov push mov push lahf lock ret in xor int3 jl pop sub push inc adc dec int3 push sub cmp int mov inc push pop int push scas mov push stos loopw jne nop ret bound mov fisubr jmp fld out mov movsl divb mov sbb dec jne push sbb dec jg lods jle xchg sbb movsb arpl icebp (bad) pop scas flds sbb inc lret inc add data16 sub lds mov xchg push int3 add repz inc push cmc enter sbb outsl rcr xor ret sub add and sub (bad) leave inc punpckldq mov jns add ret adc jnp adc push (bad) mov shld bound and xchg or repz dec out das sbb stc jge jl fsts in aas or clc out push ja mov xor dec and cmp call (bad) je dec mov int jl mov inc and sti nop fidiv sub cs and loopne popa popf and mov jle inc adc jmp (bad) mov stos iret dec dec and xchg pop push adc and repz pusha out out cld pop push dec jg in rolb cmp nop repnz push push cmp mov in js (bad) loopne je push cwtl mov inc out inc or xor jne sbb pop mov dec xor push cltd (bad) rclb gs (bad) loopne xor mov or mov jne mov sub jmp mov loop mov sub aad dec dec push mov arpl lcall mov iret xchg xchg xlat sub icebp xchg sti decb clc cmpsb xacquire mov push cs lea (bad) mov data16 inc fiadd lock mov out outsl int jnp add jg (bad) xor test mov mov loopne in add out popf add ds cld int3 aad cmp xlat inc enter adc add xor mov ljmp hlt and and push jnp jl xchg gs dec or rcrb test mov movsl fsubrl mov push insb lret push or dec jae leave lahf dec cmpsb dec jp enter out jnp mov in mov fcoml fdivr push iret xlat in je ret lock xchg pop mov push lea cwtd repnz push rol lods pop add pop jae lea jg scas jne out rolb rclb dec (bad) loope push xchg xor hlt inc adc imul dec aad loopne pop daa movnti das cmp imul inc cli out inc ja and inc xlat push sbb arpl jge push movsl push daa lahf mov or push adc cwtl addr16 cmpxchg data16 paddb mov jb mov adc pop xor sbb fldt fs sub sbb xchg fwait pop leave lods nop pop mov add xchg loope repnz jno xchg adc mov and dec pop (bad) aas scas bswap fs leave inc sbb or cmp push aam rcll in lret sub out dec adc mov fld1 mov in movsb xor mov and sub sbb test pop fisttpll xchg sbb fsubr int and mov push sti scas jnp (bad) push lret ljmp jbe add push mov cmp mov imul xor mov lcall mov mov call or pop xchg jbe jbe inc jns pop loope stos fs push test stc cwtl dec push adc pop mov mov (bad) aam push cmpsl ja js adc mov xchg add pop dec clc int imul mov push push rcrb pop xor lcall push xchg xchg bound iret std push jecxz insb sbb outsb cwtl adc sub mov sbb ja or cwtl jns fs cmc into mov popf jbe jae hlt stos nop jmp xchg or cltd and adc arpl or faddl cmp adc loope scas pusha leave popf into fwait sbb push dec mov gs std lahf loope out std mov mov jae jae das mov in ljmp and mov mov mov lods inc xchg xor pop aad jmp jb fwait inc inc lcall cmp pop das pop sti xor outsl mov cltd js icebp aaa add mov int cmpsb jno dec sub test cld test mov (bad) cld xchg test test ja push fisubrl push mov xor cld xchg cs pop and xlat insl int pop popf dec jp sbb inc sbb pop lcall leave xchg add xor ss jp orb and jns cmp bound jle movsl lods xchg rep cld lds lcall xlat addl insb int cli out add movsl cmp addr16 sti xchg clc fs mov adc jecxz xor ja scas pushf xor cmpsb add pop daa fsts in rorl scas dec into pusha xchg sub push aaa xchg mov mov push stos test mov fidiv jecxz add bnd xchg test inc push (bad) jecxz dec cmc test pop out xor enter cmp jb push inc fldcw inc movd leave mov cmp scas rol add sbb pop roll idivl stos xchg loop test aas out sbb cmp mov pushf test fidivrl inc hlt stc sub int3 mov mov push (bad) not cld stos and and jp dec or scas (bad) sahf lods or in imul test popa addr16 sub in add addr16 sbb lret cltd push lea mov hlt adc pop mov sbb fs add push cmp vmovddup fildll sub jmp add iret mov insb nop testl cmp cmp fsubrs lret inc lcall sahf enter test cmpsl fbstp repnz xchg jno js ret mov enter xor jmp (bad) in in movsb xchg cmp xchg rcrb add insb gs popa xor mov adc mov and push mov imul fadds leave imul jns cmpsl lods in xor mov call (bad) jle movsb dec mov inc xor call adc aas adc lods cmpsb dec xchg xchg jbe fcomi pop js ljmp jno gs loopne aam jp enter pop add lret icebp adc insb mov aad push jnp add fild pop add sub mov aas (bad) mov sbb push test adc (bad) push in cmp adcl cmp (bad) icebp gs adc repz xchg pushl push add jge add dec cmp mov push xchg xor mov push pop in mov insb flds das jbe ror stos cld mov bound cmp pop sub popa pop stos pusha sahf pop das insb fdivrl or cmp negb jecxz fs mov out (bad) roll pop notl ret out push (bad) lods push (bad) test add mov push dec cmp mov xor xor inc dec mov xor fcmovnu cmpsb cltd sbb cmp in push cli pop or push insl sbb out in mov mulb aad aad fisttpll pop and ret pop jl pop (bad) sbb and jmp xchg stos jmp and sbb push vmovapd test in out pop adc repz mov mov and mov lahf mov leave pop xor (bad) jne pop shll jmp xor scas into dec adc cmp sbb push (bad) inc (bad) adc aas dec popf sbb rcl ss repnz ficompl and (bad) ljmp imul xor lea add shrl add data16 nop (bad) jl jl leave out test sbb sub inc in inc test push dec xor mov and pop dec insb aad xchg mov cmp mov rcr mov je (bad) mov bound mov mov repz and das cmp pop repnz iret cld (bad) movb mov mov mov mov (bad) fcoms add xchg add xor andl xchg add inc mov and fwait stc adc lcall dec xchg call cmp inc popa push or mov jl pop cmp pop ljmp jae,pn int je lock push fwait push mov pop jnp add mov xor imul dec hlt data16 xchg lret mov aaa ds cwtl popf dec inc xor mov sub sub loope ret out jle push out stos out dec repz movsl adc not data16 stc cld push jmp xchg fist mov ss insb outsb mov or push cltd cmp stos xor mov dec sub fucomip stos pushf scas in mov jb mov imul cltd mov xchg (bad) call xlat lock xor lret loopne xor lcall fidivl clc sbb (bad) mov stos xchg xchg pop mov push lahf jo insl repz dec sbb xchg dec jo add sub xchg or test dec jp sbb std popa sub and out cmp cmp mov xor sahf addr16 lret (bad) pop sbb testb dec push and ret cmp flds or outsb test xor pop loop and pusha xchg mov out jne ja (bad) into incb push aam dec xor jmp insb xchg mov retw dec je xor push jnp mov shll mov pop rclb fs sub lock xlat out add adc and cmp (bad) jmp or mov scas test fwait (bad) ljmp cmc adc mov ljmp add and (bad) fidivrl lret sbb sub xchg mov iret jno cld xchg sub cld imul jno add and pop insb dec daa sbb cld or fbld enter aad imul dec in mov roll xchg gs sbb gs (bad) cmp and int3 btc mov lods mov mov imul dec or push or je mov push mov jecxz js hlt and or cmpl fwait xchg divl pop inc inc jne mov jno mov or mov mov (bad) dec test cmp inc dec sub cld dec and adc jae loop jae rorl xchg sub or sub (bad) repnz jnp loop and inc push add pop jb rclb jnp dec pop lret cmp je iret cmpsl lds lock dec data16 loop lds (bad) fcmovbe or das je cli adc dec insb dec in rol xchg repnz movsb pop lcall jl mov ds dec cmc push dec jnp insb dec jbe mov mov push test adc dec xor fidivr pop lds sbb stc cs notb imul or xor jle mov cwtl dec inc sarl hlt addr16 divl jge in cmpsb cmpsb movsl (bad) je popa sbb das fs sub sarb sub add add ret jg and aam mov mov jle and aam xchg or outsl out push mov xor dec push cmp int3 fdivrl lock cmp cmp call insl mov sbb dec popa andb mov pop js icebp inc test cmp nop sbb mov shrb and gs pop inc mov add lods pusha or sub out rcrl loop jne mov imul popf in add leave jo inc add push (bad) leave cltd jb cli lahf adc sti mov fdivr or jle arpl das pop mov or mov mov (bad) mov divb mov stc mov mov mov rol test mov jns fisub add hlt jg mov test cmp mov (bad) push cli sub ja ret andl repz xor ds lods sbb cmp pushf and in sub adc xchg pop in (bad) adc add fadds les call (bad) lock pop scas sbb xor fldcw jmp mov inc sub test aas dec xchg (bad) dec test std sbb das ljmp add and into rcrb or push test loope in lahf loop rolb xchg popf jmp push outsl add leave inc lds cmp mov mov in and mov jmp das out push inc inc and pushf orl pop pop (bad) xchg aad es iret (bad) insl fcompl xor popa shrl xchg divl lahf mov insb cwtl or iret mov hlt cmp lcall sbbb sub cmp and ss dec jo ficomp xor popa mov loope fidivl gs pop mov (bad) xchg sub imul subb pop (bad) ljmp mov ljmp pop cmp add jp outsl sbb fiaddl bound add jge mov dec push aam mov xchg jle pop add jp push xchg xor dec stc or mov fwait std dec hlt sub movsl dec popf xor push loopew inc xchg imul pusha aas inc mov push fimul addl and push int3 mov xor pop xor mov hlt out lock inc xchg jns push sub cmp add xchg ljmp push and push push xchg leave add stos sahf cs lods nopl out cltd jbe int3 (bad) je mov or aam andb loop xchg sbb movsb sbb xchg push adc leave dec scas (bad) lea sub stos test dec dec jbe hlt pop push add pop ss fdiv scas jle in mov mov lahf cmp and pop lds aas iret pop das push fistpll test push scas std fsts stos xchg cltd sub stos ret in cmp and popa insb outsb and cmp push mov sub xor cltd fwait mov stc iret test daa pop test pop xor bnd fdivrl out push xchg mov popf or scas fild cmp test jne mov add dec inc and faddl (bad) sub inc dec ret add push push lods insb in jno test jae cmc lock ss dec adc stc push stos in sbb je xchg outsb inc inc jmp into popf orb mov push ljmp or dec push cmp shr dec nop ret push adc jbe add inc rcrl test mov dec and lret add daa fcmovnb out mov aas mov shll sarb push inc clc or push dec daa sbb rcrb int mov scas push test sub loope push jmp in fdivrl aam loop scas sbb rcrb add outsl or int mov sub mov (bad) cmpsl xor shl (bad) xchg pop fisttp pop mov dec inc leave movsb or cli and push sbb sub push (bad) (bad) loope sub fabs sub xchg mov inc xchg pop pop add cmpsl pop adc or fwait stc pop inc sbb or gs out call mov push inc xchg ret sti xchg stc std mov das in ljmp and mov jl dec pop imul sub pop jmp bound sbb adcb xchg sub jb (bad) pop xor insb lock (bad) gs js dec xchg stos jmp or fstp xchg popa sub dec mov inc or mov (bad) into push xchg add cmp pop cs in push cld sarb fisttpll adc bound popf inc test push daa mov or in xchg aam fnsave rcl add fdivs insb test imul mov sub push pop inc (bad) jle and xchg sbb ss repnz clc xlat jecxz mov repnz jp in xor xchg dec aad xchg mov aad lds sbb das push mov je mov sbb mov pop out mov out jle lret scas clc mov fisubrl clc cmp lds enter lods jbe scas cmc jp (bad) int mov loopne mov mov mov sbb jo dec push movsl sti push fisttpl out mov es mov pop cmp jge test les dec je movsb aad loopne jnp out ret ficom inc out sbb add movl or inc jmp jge (bad) dec lahf aaa cmp in jge ret aam jg into fnstsw push xor outsl outsb mov push jl mov (bad) pop mov cmp aad inc mov adc jo dec gs mov out cmp mov or in mov das jno scas cmpsl xchg ss in and lcall imul jecxz sbb mov cmc add xor ds push into xchg mov ja test lock add outsb shrb imul push test in in je enter gs mov (bad) faddl sbb sbb js mov mov jb (bad) leave int3 sti mov leave fistp cld pop xor lcall in outsl ljmp sbb xchg sbb cmp leave movsl repz or (bad) je clc rorb mov loopne ficompl or push jne lret mov xor sahf push cmp mov imul (bad) sti push negb das xchg loopne fsts adc jmp into jns and mov outsb sbb xchg stc sub mov imull (bad) mov lods mov inc ret icebp xchg mov mov push popa cmc out adc mov adc push ljmp adc testl push or adc mov xor mov mov cmp mov mov lahf inc (bad) rcll sbb mov mov pop sbb fistpl aaa fldcw out and mov jne and dec cmp jno je mov cld popf or out bnd jns xchg jl lahf add mov pop out in loope xor fwait add icebp push jp mov fwait adc and repnz pop dec std mov les subb sub xorb jmp jne inc ror addl xor cmpsl addr16 cmp cld lret sbb (bad) dec cltd mov push adc sub pop push adc rcrb adc sti add jmp sbb jne ljmp clc push mov mov (bad) aam ficomp sarl (bad) sbb pop enter and xchg sub es push int3 outsl subl mov jns xchg cwtl cmp outsb loop dec mov sbb cmpl dec push fbld dec movsb ret movsb jo dec push sub pushf pop push adc jnp and xchg imul stos and inc cmp sub popa sub aas cld nop sub sbb pop sub dec rcll test dec jns pop hlt test jne or xor dec mov adc (bad) insl mov push push lcall adc sub cmpsl mov aad lods lret int3 cmp bound dec addb push add dec jnp ja mov gs mov jmp jg pushf mov cmpsb test cmp mov nop sub jl js ret pop pop (bad) lock cs fbld in aaa es xor add lret rorl and mov (bad) cld sbb push push imul jns adc sub xor mov cmp push add push sahf mov (bad) iret push and loopne or or mov lods outsb sub (bad) jns adc les outsb ret push out daa out mov orl mov test call add add cld pop inc push adc std popf clc sarl and push inc sub stos mov ret test hlt mov xlat out scas in lret loope cmc pop dec loope dec mov and bound cmp sub sbbl dec cmc sbb xchg lret ret roll xchg js push mov fs int3 daa mov jbe pop mov fwait repz mov or mov dec fsubrl mov mov loop and scas nopl push out mov popa (bad) (bad) and mov movsl jb imul or or inc gs lahf pushl scas cs notl iret mov dec sbb jecxz pop cmpsl mov ds push lods sbb inc dec inc fisttpl mov mov ds sbb pop add cmc mov lcall ret pop es xor daa mov sbb xlat inc mov sbb xor push je imul ss sub fs es mov cmpb std add cmp leave (bad) lcall call push jae imul (bad) sti pop hlt enter into stos fmuls jl lods or jnp rcrb xor or push push (bad) adc test push pusha fsubrs ss add insb pop lods push (bad) out test notb mov xchg adc pop mov pop dec ret (bad) addr16 in cmp sub aaa imulb push insl rcrb call fwait out push repz pop aad cmp sbb rcll mov or xchg movsl inc xor in jle dec ret data16 fdivl jae fisttpl ret mov inc cmpsb imul fmull fwait cmp adc add lea push scas dec sbb test sub sbb xor gs or std pop pop pop (bad) stc scas fidivl mov ret pop cld inc jo in cmpsb adc addl push aad or xor mov push sub add and pop dec jp ljmp rcll sahf jb xor xchg fsubrl jo mov shl addr16 mov leave scas hlt sti das and lock jbe sar std pop loope pop movb pop or ljmp mov sub ja mov nop lods jae das cmpsb jbe push in (bad) cld in xor cli jl bnd sub sbb fidivrl sub jno fimul (bad) bnd repz popa mov sbb cmc push fldl push cmp cmc cmc outsb fsubrl in fisubrl mov xchg stos adc sbb mov and hlt (bad) jae sbb (bad) sahf mov mov inc push xchg stos xor mov sub mov int out pop loopne cmc xlat outsb cmp arpl ljmp rol dec inc ret subl pop xchg in or repz add sbb or inc sub add mov lock mov out inc push out jle (bad) int (bad) sub inc mov cmpsl sbb dec lds loop push test scas out xor loope and mov or frstor jg aas fwait cmp or inc xlat daa add inc cmpsl push (bad) scas fwait lahf dec pop (bad) cmpsl push jl or (bad) fwait adc pop xor je or jg (bad) xchg and repnz or jno test (bad) inc bound fcomps pop lds repnz leave std fldt mov (bad) mov sbb mov dec subl mov popf or inc out cli pop pushf (bad) jno fldcw jns xor push repz inc (bad) add lret cmpsb mov or jbe or mov xor stc clc xor pop addl cmp leave nop adc fs jmp add mov lret (bad) aad stos fimul mov mov inc inc call (bad) aas push loope pop stc out sti mov jmp inc add lcall mov inc pop enter cmp sub push cmp lock push inc (bad) push inc jnp data16 adc leave rcll pop cmp cmp xor push cmpsb insl (bad) aad adc xchg cwtl add mov mov enter pop push bswap xchg add lcall cwtl sar inc shll or or fwait push dec jmp lods sub sbb push sub fsubrl shrb movmskps dec and fcompl mov ljmp and pop cld in push adc and inc rcrl xor jmp pushl ss mov jmp adc int3 into sbb xor xchg ss stc (bad) xchg out cmp xlat repz daa mov push dec lea rolb jo cmp cmpsb cli mov enter and add popa xchg test (bad) jecxz dec mov xlat push mov test xchg fwait fs in dec cmpsl les inc ror subl mov mov xchg sbb ret adc cs daa mov or xor cmc add outsl mov jle mov inc sub test jecxz cmpsl dec int3 or lock pop mov inc test gs lret mov adc push inc int adc (bad) inc popf cli repnz fimul jecxz jbe jno push xor inc adc pusha dec sub sub sbb popa jecxz push fsts in fcmove pop clc mov adc or imul test jmp dec lret mov mov xchg fdivl push mov pop sbb xchg sub mov jae test jle mov pop adc mov arpl aam pop pop imul inc jne fwait lods (bad) divb ror ljmp outsb mov enter outsl stos push adc cmpsb jecxz addr16 fs test inc imul rcrb jb xor mov test jle push std gs fnsave mov sbb rcl push std mov or push inc lret mov add or andb jae adc mov inc icebp outsb add stos je pop and es pushf jge mov push pusha stc add mov test pop cld dec jne or mov insb and mov adc lahf popf jo sub adc mov adc jp call bound (bad) xchg xor jno mov rcrb fnstcw push js or (bad) out out lock dec mov stc out inc cmp shrb shll in or add cmc adc data16 into cmp jmp inc scas xchg xor int3 or jmp stos mov xchg lret pushf or inc ja stc push sbb sbb xor dec rcll push rolb ficom jnp (bad) add pop arpl mov popa into pop ds pop bound movsl shll popa out loope fnstcw and add jbe or popa scas (bad) in inc mov sahf or lret fcompl push (bad) xchg les arpl out mov movsb dec add and xor lahf lods mov andl push and sub lahf inc inc xor and ss xor and pushf or stc mov stc pop mov test dec setg xor sbb xchg popf or and hlt (bad) stos fs sub repz ret sub scas mov ret push mov cmp out test ss (bad) dec dec cmpsb cmp popa sub xchg nop (bad) jbe rcrb out inc jnp sbb leave jns cmpsl push shlb sar pop sbb movsl cld add adc xchg (bad) cmc out xor dec ds mov ja adc sbb fdivl mov lahf xor fxch xrelease mov je lahf dec imull dec push dec imul inc int mov scas xchg gs mull pushf add lods fisttpll fimull mov inc ljmp (bad) lret pop cs mov sbb test cmp jbe dec es xchg inc (bad) scas std fwait pop jle movsl adc adc in (bad) lret outsb push xchg mov xchg (bad) push sub and icebp jecxz shlb jno gs inc sbb and ds popl outsb rol adc xchg fisubrl push insl stc mov and mov or mov pop pop pop hlt sbb dec push ja popf sub sbb clc add (bad) xor jmp push mov xor pop mov lods mov test dec ds dec les mov cmp fs jmp dec loop sarl mov decl test movsb repz cmp (bad) sub arpl pop or push data16 mov sbb cmp out and and add or dec ret push xchg mov add push sti cmp jae std dec test stos cmp shll or mov mov push data16 mov add lds lea (bad) arpl inc fildll (bad) sar mov fwait push incl mov cltd mov xchg lahf add cmp bnd ficom (bad) push shl add push (bad) xchg adc sti (bad) xor cmpsl pop loopne xor add inc sbb lret (bad) pop adc pop add dec and jmp (bad) loopne cmc pop daa or cwtl hlt cltd push pop mov in imul xchg (bad) lods sub (bad) push in loope (bad) in cmc pop xor pop mov inc movsb push test jnp fsubrs mov icebp fcoms pop add mov loop pusha scas mov jb pop outsb das jge and adc out imul sbb push xor cmp mov aaa push fs cmp cmp pop (bad) in out sbb jae dec in cld mov ret popf sahf mov push div sbb inc out jg or mov pop in xor jle mov jno and sub leave pop jae and shrb cmpsl pop xchg loop mov mov (bad) add in (bad) sahf or adc or movsb adc nop sbb rolb popa sub push jecxz mov push push lahf pop dec sbb jns repz scas and pushf mov (bad) push pop mov or in les mov jno int inc das mov sbb imul jb pop aad and cmp jle sbb stos maxps inc mov mov jno pop mov pusha into daa mov cmp pop sahf pop cmp or rolb xor std dec jno sahf dec lahf loopne push int3 xor insb lds ret push lret mov sbb (bad) mov xchg fs rcr sub jl test test (bad) mov jae push ret push fdiv nop pop jecxz lods repz xchg and icebp pop and pusha or fsub or notl addl dec jo fisttpl cltd xchg out ret fs jo adc xchg inc fwait test adc cmpsl imul stc and xor sbb ret sbb in ror and jb cmpsl mov (bad) aaa inc lret push loope sbb dec xchg (bad) jmp stos and pop cmp jne pop push pop adc push adc mov xorb dec fwait xchg clc out and sub dec cmova jecxz xchg push mov add pop mov mov xchg cwtl inc and js mov xchg lret cmp in aas mov inc mov ss jl mov fsubrp clc mov push and sbb fwait popf sbb mov lock repz outsb jo int out clc imul sub lret or push mov pop and aas mov lock loopne inc dec or mov (bad) movsb mov cmp dec insl dec repz or roll out mov sbb nop sub cwtl mov push and aam adc out dec xchg cmp test (bad) in (bad) dec sub loop jge int cmpsl xor icebp cmc pop shrb ror bound fwait bound sti imul push aas xchg (bad) scas hlt fnstcw sub sbb cmc popf call push iret scas mov lcall sub shl (bad) push sub xchg out mov nop repnz popf daa sbb subl fsub imul cli dec or movsl and insl or or std jg imull xlat lds jg insl dec test imul popa xchg mov (bad) data16 in rorb push arpl loopne sub sbb frstor add mov imul and sub cmp mov mov inc pop out les push add outsl xchg inc cld mov les jmp imul push and inc fwait call out dec mov out das jle shrb mov sarb jmp lds xor push popf push cmp in aad in (bad) out mov (bad) and (bad) push dec lea or lahf out repnz and or in jb or dec clc inc in sti add push into popf xchg lods fildl jne dec test daa dec dec and loope cmp mov cmp sahf repnz xor out xor cmp adc mov adc pusha iret pop jg sbb mov xchg sbb sbbb mov jp jae sbbb xor add mov xchg negb fwait outsl xor mov xchg xchg pop hlt rcll jl or xchg cmp subl into repz aad cmp (bad) jae sbb in dec imul and inc (bad) enter xchg dec je mov loopne (bad) push lea adc je xchg mov les arpl or mov fstpt scas adc (bad) mov mov das hlt jb sbb cld sahf lcall push dec inc out mov test xor lcall dec js ret sub adc shrl in lret pop mov pusha xchg jmp shll lea rolb push push add aam mov dec leave add movb les jecxz mov movsl inc cli mov arpl push cmc into jge (bad) aas stos xor jmp in insl insl xlat xchg xchg add adc mov outsb push data16 xor jne inc int3 in xchg pushf movsl fisub cltd mov cltd xlat xor rorb push mov pop (bad) jno mov hlt fnop push dec mov imul or push jb pop hlt dec sarb into push test aas mov adc stos sbb ja test ljmp outsb mov pop xchg dec loop js and aad xchg lock mov xchg nop insl pop clc push push mov outsb xor jl pop xchg or movsl movsl or jmp icebp arpl mov inc (bad) in mov mov push or jl dec rcrb or lea inc lods pop sahf pop out inc jmp jp out push inc icebp iret repz lret xchg bound xor cli inc lret imul mov fistp (bad) cmp xchg rcrl mov mov shll divb mov adc sub sub jecxz insl mov mov test sub lret push pop sbb mov in sbb addl movl and xchg outsb test push adc (bad) mov pop dec jmp push xchg cmpsb pop push cld xchg xor loope out fmul insb ret push add mov sbb mov dec push (bad) cmp jp cmpsb dec mull adc stos inc xor adc sbb popa xor add push cmovae and inc dec xor loop adcl (bad) cltd jae js pop insl sbb adc mov arpl gs cwtl dec pop aas mov or (bad) nop add loopne or cld mov mov cwtl repnz adc iret dec insl fnstsw xchg dec or mov adcl xchg es xchg fbld xchg call push movsl out mov push nop or shlb mov imul dec iret jne dec pop adc sub add shrl stos stc dec stos jo in mull daa pop clc loop jge jne cmp cwtl and (bad) cmpsb sbb loop fsubrp mov sbb mov sar pop mov pop movsl je pushf push loope (bad) pop loop cld xchg jns push (bad) aad repnz adc shr ret std hlt inc repz jb inc lret cmp sti sub adc jp stos inc in (bad) insl addr16 cmpsb scas push into push push push mov mov adc (bad) (bad) lea lret sbb xchg jle push pop cmpsb inc call imul mov push cmp mov bound dec lahf sbb jp sub stc ds aam in jmp pop add adc cltd push mov lds rorb test xchg test push insl xor cmpsl leave dec xchg imul push popf mov sbb inc push and rorb sub (bad) cmp in rorb lret mov dec jb mov xchg (bad) mov add add push jnp mov sahf loop add mov dec mov mov sbb cmp in scas (bad) dec jbe scas imul sbb out (bad) (bad) out (bad) repnz inc xor xor mov push nop cmp insb dec fwait mov add icebp sub push cmp out pop push mov ret sub cmpsb out je dec insl xor sub pusha movsb xor mov adc cltd out lea jno push insb ds cmp xchg mov in pop xchg xchg lret test insb out jbe mov lcall std inc cmp fdivs jno dec (bad) shrb leave imul ljmp mov jnp adc out adcb cmp dec in aam adc xchg cltd xlat pusha cs jmp pop into pop out pop adc xor push xor xchg inc popf stos sti sub jp imul pop test in jns daa test call scas popa (bad) inc (bad) (bad) sbb pop cmc mov fnsave je adcb sti pop pop aad cmp int repnz je mov jp xchg xchg mov stc int3 (bad) shrl fisubr xchg pop lods jecxz es add pop (bad) pop pushf (bad) lock sbb lock xchg sbb dec xchg fs xchg loop push call mov or lods neg scas sbb pop push aam or sti push test fnstenv std mov (bad) cld dec test sbb test mov mov xchg mov sbb clc insb cmp pslld xchg xchg xor (bad) jle mov out loop jb je cmp jge xor lret xor or fdivl pop xchg or sub test stc adc ss enter mov lods xsave rcr in and pop cli fnsave jns lahf cli arpl dec push pop outsl pop pop ret and es or cli or mov push xchg mov mov js pop sub xchg adc aad out add pop sbb js cmp mov (bad) mov or jmp call mov int jno repz mov mov cmp sbb jae push inc mov xchg and inc add dec loope (bad) ret loopne add in dec mov daa in sub out xor sbbl pushf pop cmpl or jecxz xor push das cmp nop adc std ss jg inc jle pop inc sti jle aaa inc inc (bad) (bad) dec cmp aas jl jbe adc pop push fs adc adc cmp movsl push popf lea (bad) movl mov addr16 cli push and outsb inc sub out (bad) xchg popf add push les test ret nop add adc mov sub pop or inc aad ljmp inc addl in leave adc cmp ljmp sti cmp (bad) sbb inc mov pushf push iret inc movsl mov mov ret lds push imul std dec movsb movsb fdiv pusha fwait imul cltd mov inc inc (bad) push fisub inc pop pop mov mov push or iret xor jnp (bad) popf (bad) jno mov add inc das or bound outsl test add lds push fcoml mov pop push imul mov arpl mov sbb sti xor mov out (bad) je and inc pop loope mov and das aaa cmpsb cs arpl lods mov xchg xor mov mov aad mov sbb cmc movsb in push hlt pop sbb mov sub pushf dec or push mov add andb das inc xchg lods lock jae push fisttp mov lahf or pop imul js scas push ret lea ljmp scas scas sbb les ss ja popf loope clc inc xor add mov out (bad) adc mov fstl pop dec ljmp inc int3 fs xchg enter push push mov jnp andb flds push push es cmp add xchg sbb test stos fbld inc jbe imul mov mov mov lcall popf cmp xor pop xor enter loope mov push (bad) push inc fmuls es pop push inc pop xor or mov test int3 popa fs pushf dec sarb xchg btr or sbb out int3 sub mov (bad) outsb lds aaa lret (bad) lds mov push dec xchg and loope test je sbb loope scas aaa loopne (bad) (bad) je mov adc mov and jg hlt dec hlt or mov js (bad) aaa push aad ss fwait mov push into insb push push push (bad) mov int3 cmpsl in mov (bad) scas or mov push inc aaa push fs addr16 (bad) adc lcall nop sbb addr16 add out xchg dec and xor jns inc push mov aad mov add sbb stc mov mov rcrl dec sub flds cmp sub cmp cmp or add cli rcll dec xor push or mov subl add fisttpll pop jg or fwait inc or mov rclb leave shl lds sbb adc jb in outsl clc cld pop or mov mov inc (bad) pop or inc popa adc and pop jl inc xor outsb inc or jmp fmuls fimull pushf xor cmp push pop cmc ljmp stc mov mov insb (bad) mov sahf jnp pop mov data16 xchg hlt or adc icebp aad and fwait mov sbb jb les loope inc jle mov jmp inc movsb nop add pop pop lock jmp adc aas (bad) pop jge jge mov out mulb push pop comiss xchg or les sub ret xor loop mov addr16 aam out jno pop xchg dec or add or lret jmp push popf packssdw cwtl pop push jnp ds (bad) jne iret test cmp cmp push popa rorb dec jnp lds scas mov mov sub into dec test ror scas push push and mov movsl xchg ljmp jle shrl push cli fsubrp dec lock adc mov xchg jge out hlt clc mov dec ret sbb shr rcrb mov xchg mov ljmp clc sahf push push pop pop stc insb add mov icebp sti lods ljmp add out push mov fidivl cltd stos call pushf js lds out lret add add or adc inc xor pop lcall jne sahf pushf out sub jg mov or loopne lret cld in fucomi jl (bad) mov dec adc cmp ret inc xchg pushf subl adc pushf (bad) pop xor inc pop jb mov dec aad iret in adc lcall aas pop push sarl outsb popf mov leave xor pop push push mov jmp xor aaa xchg sub or into repnz fdivs fimull (bad) pop cmpsb stos jecxz rorb jae fimul sbb xchg cmpsb xor adc add and in repz xor mov mov outsl idivl xor cwtl pop mov add negb scas (bad) and mov mov xchg aad movzwl inc and in jp popa (bad) mov icebp jbe jo mov dec xchg imul xchg lea sti mov imul xlat aad jge mov inc push mov fcos negl (bad) (bad) jg pop div lea mov rorb cltd xchg xchg bound and sbb inc popf in movsl icebp roll jecxz and popa jge insb cwtl cmpsb add nop or adcl (bad) pop out xchg mov push sub mov loopne and in push push inc je pop sarl loope mov xor enter and shrl loope xchg fs dec ficompl insb mov xor fsubrp mov outsb inc cmpl sbb icebp jp (bad) add aad xlat ret mov cltd int3 mov pop xor mov lds pop xor (bad) dec int mov dec leave cmp cld cmp jp jg pop sub cmp xor aaa sub pop bound jmp clc ljmp movsb push insb fwait stos lds out pop cld fldl add or mov xchg add xor jl roll fild jbe mov bound pop (bad) fsubs data16 mov xchg fisubl test lds cmp xchg inc aaa sub pop pop sub add dec ret (bad) repnz mov cltd adc add push push repnz mov repz aaa mov and aam stos rolb xchg jge mov and inc aad adc (bad) imul out dec lock (bad) push dec and outsb mov push mov adc mov xchg sbb stos xchg (bad) and arpl (bad) cmp (bad) (bad) sbb cmp jns mov mov aam out push lret jl cmp sbb mov in ss jns mov fisub outsl mov jns (bad) (bad) mov or cmp movsl ss mov rolb push or adc jb fisub mov mov add pop cli mov xor jns (bad) in out lock lcallw enter pop lahf fwait cwtl imul addr16 jns xchg cs arpl jge in int leave mov dec outsb out std sbb add mov or mov jae adc outsl call in xor inc dec lods fcoms scas jmp fiadd push aaa adcl sub jb add loope loopne ret ret popf jle inc bound mov jmp and in out xorl and clc sbb (bad) xchg jle mov (bad) jnp push xchg mov fcmovnb pop icebp push or sbb je (bad) insl shrb cmpsl sbb xchg sbb movsb out sub scas add xlat lret mov jno push xor pop stc cltd or lods faddl es push adc stc dec mov add lcall jg push arpl mov jne jno sahf jo hlt or out in xchg fwait dec movsb cs lods or popa fidivl mov inc xor mov shlb adc cmpsb icebp loop daa lock andl push dec lods or divl sti add add sbb push lock jne dec imul jo out orl in in ja mov bound insb or pop and xchg and jbe and jo mov push sbb cld sarb sbb repnz ja cmpsb repnz xchg or aam out dec lods pop xchg push cmp jge jp mov sub xor ret xchg nop out cmp ffree not push cwtl xchg test inc jl mov into jbe dec (bad) lret adc in jecxz add stos jle (bad) icebp aas lcall jns sbb out push adc fcoml aas lea orl inc fwait cmc jno inc pop push sarb xlat ficoml hlt mov cs mov cltd sbb ret push cwtl push push leave cmp adc mov out hlt mov sub loopne xchg aas push mov nop inc test fwait lods dec add xchg push pop rclb inc les push mov xor pusha repnz and (bad) sbb mov loope pop notl dec arpl cld iret int xor sub insl jb adc dec in adc enter or leave mov cmpsb mov mulb dec sbb xor adc jge or dec sub sti push mov into add aam (bad) popa fwait lods dec mov mov lea dec jecxz xorb xchg leave das mov movsl and dec mov cmp mov xchg jmp out adc push cltd or rcrl xor sbbl cmp in aam (bad) es or push pushf sub add mov inc lds insb mov rorl je push stc mov lock orb outsl jbe xchg mov leave xchg jb pop cmc push inc cld fbstp adc sbb das inc mov into jno mov jge jb mov jge mov jno and xor cmpsl shlb xlat movb sub rcrl xor dec fildll iret cmp into lods cmp push push sarl bound xchg idiv mov cmp or fmuls adc pop scas ret cmp mov stos pop add pop fdivs mov dec es repnz rorl and and test (bad) adc mov dec or cmp scas xor xor jl ja adc sbb jg inc or rcr add inc (bad) xchg cmovns push mov clc aad xchg sub fucomip div push cmp pop jg xchg lcall inc aas rcl jo repnz movsl inc aas mov stos or cmpsl cmpsl ja push sbbl test lcall pop mov push xchg js jns ds pop sub jecxz jp adc fdivl lret ret pop flds xor test mov mov xorb ficomp hlt mov or (bad) fisubl int3 inc (bad) fsubrp push (bad) in xor (bad) adc dec das scas push xchg cmp jmp cwtl or stc push mov xchg sbb mov lret fmuls adc adcb bnd arpl mov int pop movl pop add insl fcomp lods mov sbb test movsb out cld addr16 lea sub mulb dec test stc out ret out (bad) loopne (bad) lock in jae dec les mov insb dec xor mov stos cmp test cmp add arpl popa pop pop dec (bad) jl xchg add sbb sbb jae outsb aam jns and pushf mov xchg push mov mov addr16 push jmp loop pop lahf in jp sti stos mov fldcw cmp pop mov ds mov aas cmp jo jb (bad) scas jmp xor xor insl loop repz adc shrb in pop stc test inc jo in in push mov xor (bad) es mov call mov (bad) mov fidivr cmp xor push lret into add sub mov pop sub fbstp js xchg jb movsb test push xor push sbb mov add sti ret test jle fcoms std pop scas lds lock xor dec inc push ss mov push test in fdivs jns cmp push out or add insl jae push mov sub rolb xor add js push push in cmp push mov outsb mov icebp adc ret insl scas mov mov dec inc aam les in (bad) dec ret mov xchg outsb or jmp btr movsl lret gs adc and or dec mov mov push fild fwait and and inc ja scas push mov mov xor cmp addr16 dec xor xlat mov aas ljmp aad stos dec outsl dec inc iret lock movsl cmp xchg push mov add stos jb aaa xchg mov cmp xchg push inc fwait mov pop int loop (bad) cmp outsl xor lahf (bad) out rorb in cmpsl enter push pop popa pop outsl mov pop test dec inc mov es mov loop cmpsb andb gs scas ret xchg mov insb xor and fldenv (bad) out fwait add dec stos push ljmp pop dec cwtl fildl pop subl cmp fld std pushf cli mov pop mov cmpsb pushf sbb cmp cmp sbb cmp ret out sbb adc jne cmpsb incl cwtl test dec push mov pop out adc out xor stos mov int3 xchg sbb out inc cmp jnp loop cld xor jne lds clc mov pop popa popf cmpsl mov dec not mov cmp cmp fs std mov jnp add cmp pop sbb dec jo bound (bad) sub mov sub pop sbb (bad) mov mov mov jns push cmp mov aam jmp int3 xchg sbb push cmc lds push sbb cmpb mov xchg lret push ss mov test cs lea pusha sbb ljmp lea mov xchg cmpsl cmpsl mov jae push lods loope add xchg loop rolb add lret cltd lret (bad) jge mov repnz dec sbb decl mov gs rcr sbb push pushf mov or dec xor ds scas sti cwtl add outsb pop movsl dec or pop sub mov jne sahf testl outsl loope mov mov int fdivl (bad) inc rolb sti mov fisubrl mov lods jl and mov jno jae aas enter push stos jb and add lea outsb adc jl adc aad gs mov and mull jno test jecxz rolb mov gs mov ja cmp or sbb push push fisub cmp div jbe mov (bad) mov shlb cs and and jae cmp sbb enter mov adc pusha les stc daa out pop lds pusha pop lcall or mov (bad) xchg dec sub push push (bad) cmp out mull mov lea stos fildll mov lcall lcall jb push add sub lea insl xor mov add mov or pop cmp das sbb shll mov mov movsl out les add sbb stos out or xchg test push insb incb ror mov jnp aas sahf int outsb cmc xchg xchg lods adc nop bound inc xor lcall cmc orb aaa loope test cmpsl test sbb cmpsl (bad) and gs cmp inc xor je adc mov adc sahf ljmp test mov jmp cmp add aad aam cmp xor (bad) fwait jne cwtl sub mov sub adc xor clc addl jo test adc (bad) push fsubs (bad) fs jmp and jne lret cli pop ret sbb iret int sub roll mov (bad) mov push mov sti mov add xchg out sub cmp dec or int3 aas rolb jne loopne cmp inc ljmp push in pop sbb xor jg cmp adc mov mov sbb push cmc push push push jge addr16 inc adc inc push jge add aaa mov pop push cmp jae inc pusha xchg stos jg aad cld add dec xor jl call push or sbb add pusha mov mov add mov dec pop movsl clc mov mov and xchg sbb ret addl push mov shrb sub out (bad) sbb insl jae lret or inc pusha mov mov (bad) aaa out push es adc loop xlat sbb jae ds cwtl mov scas add (bad) repz sbb mov fistpl inc test lock je push popa mov mov iret ljmp and icebp mov fsts into das push rorb fcompl cmp xchg push fisubl stos xlat adc cltd dec addr16 and imul sbb lods pop cmp dec sub mov in inc nop dec rcrl in mov stc lcall scas rclb int3 mov pop mov call dec sbb fsub or mov xchg or jnp cmp add test jle lods hlt sti mov add into cmp bound insb xor mov jo mov push fs scas pop cmpsb js adc jo jno sbb mov jbe push jns fisttp pop mov sbb pop arpl dec aam sub sub in vcvttps2dq pop jg adc fs (bad) push jg aad rolb cmp stc dec ret push aas adc mov cmp jmp test arpl out push sbbl call insl inc fdivl and addr16 jecxz or call cld lret cmc into cmp cwtl dec lds out mov bound cli add xchg mov loope bound cmp out adc adc jg inc xchg mov xor cltd push cmc out xor push mov ljmp or pop add adc sbb cwtl int3 or fst mov xchg int3 jge outsb test enter jbe loope hlt or pop int mov (bad) dec outsb addr16 jnp pop push push cli and loope aam xchg and xchg jecxz,pn shlb ret ret out inc icebp test lret jecxz jno ret aad mov out movsb jbe aaa or stc je jmp cwtl xchg int sbb shrl dec fs int3 fldenv push mov cmp scas adc and imul cmp popa push cli notl ss add sbb rol push pop sub xor dec pop cs mov inc cmp (bad) and add or and cmp add test mov cmp outsb lods jne inc xor les fiadd xchg push push inc cmp sub sbb rclb sbb idivl mov je jecxz inc leave jne aas addr16 movsl sub das or daa xchg inc pop aaa mov icebp out add out std lret fdivrs push daa jp icebp xor mov or in orb add outsl cs imul sub repnz gs push push popa clc lock arpl divl and add add jb sub mov or pushf pop lods xor (bad) jp and jo das add mov jp cmp mov ljmp in and mov cmp pop jnp jo cmp fsts push mov inc cli ret cmp push pusha jne xrelease xchg jp enter mov sbb je sub bound jo jnp clc ljmp xchg sbb (bad) lret jl adc cmp or xchg sti inc dec or fbstp dec fisttpll sahf ror mov lcall movsb outsl bound nop mov pop sar inc pop iret pop cmp push loop insl cmpsl test xorl xor dec cli test movsb lret cmp pop mov or lock mov push sbb jecxz inc push add sarl imul test (bad) push rcrb cmc pop mov sti dec outsb add adc test stos pop mov es mov mov pop movsb push test push arpl add xor xor mov ljmp jecxz mov clc and push add fisubr push lahf lret fnstsw cmc popa hlt or enter outsb loopne xchg inc in js js scas sub dec ljmp pop jbe adc xor mov jo movsl jmp int xor divl pop and push pop mov cmpsb jle jo mov mov fist jno outsl cmp sub adcb repz cli mov jns outsl mov adc test popa jno fistpl neg shll fdivrs in xchg dec test jmp dec in mov cmp (bad) test xchg sti jno pop movsl inc mov mov clc fadds push adc out mov in inc xor pop push push jb cmp cmp pop xchg lcall pushf dec ss sti fs and mov out daa push pop repnz in rcr lret jbe add rorl pop dec sar rcl jo in xchg loop ds fwait push push push ja faddl and les movsb xor mov xor scas cmp fstps outsb mov pop pop or gs roll lods cs sbb les ficoml adc cmp (bad) (bad) mov lea xchg fstl aaa cmp popf pusha push and repnz dec inc gs add push sbb bound push jp mov inc (bad) cmp je xor push xchg lock xchg jg inc xor inc test dec into in sub dec imul in or xor jle gs mov cli clc imul (bad) push cmp call repz mov sbbl (bad) repz mov mov aaa int3 inc mov dec les adc dec jmp inc dec inc inc mov nop arpl dec or pop insl cwtl xchg aas sub fs push in cmp ja pop cmp (bad) pop adc xor jmp aas xor push mov rorb or adc stos xlat shrb fidivrl ss mov push dec inc int sub test lcall cmp mov or jnp sbb xchg roll mov jae imul add inc push sahf sbb sub (bad) mov xchg push dec jnp add sub mov stos test mov int inc imul mov xor push aam leave inc mov pop movsb sahf sbb int3 or sub fcoms test dec adc lds jecxz xchg (bad) ret push or pushf inc xlat xchg scas (bad) mov jmp fs mulb (bad) insb inc rcrl outsb pushl or mov sahf scas pop xlat sbb and and scas inc sub pop notb xchg cmp test stc xor (bad) mov cmp sbb loopne lahf xchg sbb sbb jb idivb dec (bad) sbb and repnz pop push xchg push mov pop push mov pop addr16 dec pop test (bad) mov int mov icebp pop sub lods add popa push mov mov imul adc fmuls jg cmp sbb mov push jno int3 xor adc call lods xchg lods lods xlat (bad) and hlt push addps mov mov pop or fldl inc in or cltd inc push rcrl je dec das sub pusha and adc pop adc lcall push fs dec aad xlat (bad) sub sbb push bnd nop xchg sbb adc sub adc inc lea pop je mov push int ja sbb fmull sbb lds scas mov repz inc (bad) js adc jge outsb test or pop inc push pushw addb (bad) sub (bad) cs mov cmp lock xchg data16 mov sub pop sbb rol ljmp arpl pop (bad) mov wbinvd lds stc push inc subl (bad) int3 (bad) sub test mov sti cmpsb mov push add leave loopnew xchg (bad) movsl pop pop (bad) mov outsl out push int3 fmull arpl je inc or xchg add lock aaa shlb jbe add lds gs xchg out (bad) loope (bad) push add or xor mov popf enter xor or aad out mov jbe cmp sbb jns div mull (bad) xor adc je (bad) std push in or arpl dec cmp (bad) mov inc sbb cmp cmp cmpsb data16 xchg dec mov pop insl sbb sub test push mov inc loope out lock adc rolb into jl or mov popf lret stos xchg pop sub cmp (bad) push push push lods cmpsb cmp idiv pop sbb mov movsb iret and or mov popf gs (bad) sbb mov cld pop adc mov (bad) sbb pop and or scas dec ret loop test jecxz mov mov testl xchg mov lock inc sbb push pop out jg gs pop cs daa mov xchg mov mov xchg inc in xchg (bad) loopew rclb cltd jae test push stos add mov xor sbb popf or and sub lock xor push push icebp loope xchg fnsave mov xchg jo into push ficoml daa ret cmc shr stos (bad) mov mov inc dec hlt addb xchg lea dec repnz mov push xchg stos lods mov lock (bad) cmp enter inc xor dec inc ja das xor hlt das movsb rcrl jecxz jno in cmp or fisub push cmpsl stos in push fisttpl xchg cmp sub popf rorb cmp loop add mov hlt inc fucomp adc cltd xor fldt lret cs xchg lcall pop xchg ljmp rclb mov pop pop daa je and test push jo mov in adc addr16 inc lock mov and fbld inc imul orl xor push sti fxch jg sub xchg int inc add imul pop and div mov hlt mov ds out inc out sahf cs iret push in or fwait jo pop push mov push nop fdivrs stos jmp push pop arpl mov js push lret push fisttp cmp test jo int lods mov and push test xor mov xchg aas scas jae push cmpsl dec sbb dec or mov sub idivl mov mov mov mov movsb xlat nop mov and sbb fistpl add cltd xor insb mov dec mulb cmp adc jb enter shrb loope cld jno jge pop mov test cld pop jns xchg add inc cmp mov dec push fst fwait mov push negl sub jge stos cli in ficom addb dec inc addr16 mul stos jmp aas lods enter js pushf dec xchg and and and or ja xor sarb imul popf push sbb aas sahf push xchg pusha movsb add pop pusha jle pop mov or ss adc je loope (bad) xor mov ds fsub rep and inc add mov and ror sahf xchg pop ds pushf int xor aad test mov mov push fistl pop repnz push cltd inc les push push out fdivl pop jo dec inc repnz or xor inc inc mov adc mov ret les mov notb and mov mov mov aaa sbb xchg insb add ja sub (bad) (bad) jecxz sbb (bad) (bad) pop ficoml pop cmp iret pop sbb mov xchg add xchg flds xor (bad) cs push or xor popa loopne push loope mov push mov pusha stc mov lahf out xchg pop sahf shll mov sbb aad push sub fsubrl jle mov adc and nop mov mov add shlb pop and mov in xor pop mov sub dec add add insl inc sbb and cltd (bad) addr16 in dec aaa les sub push shrb adc dec jns xchg xchg mov into or xor ficoml inc mov addr16 es repz cli push dec push aam pop cmp (bad) (bad) push cmp and sub push inc loop fcoml xchg sbbl mov scas leave imul jbe lret push arpl (bad) cs cmp dec lahf sub stos ret inc int3 sub xchg xor sti sahf jae aas pop sub test mov outsl mov leave dec lcall fs out mov mov add jnp cmp push xor fisubr inc sbb je xor fstl push (bad) or icebp or je cmp inc cmp imulb push aad pop sbb adc nop adc rcl or clc xchg mov push xchg (bad) jno jbe rol sub (bad) adc andl nop (bad) cmc add xchg mov inc (bad) insl movswl inc mov rcrl repz mov sbb gs pop push push inc add add movsl (bad) push jnp daa outsb sti push pop lock mov push and add rolb mov inc lcall ja xor adc sbb push (bad) mov sbb shlb pop sbb out lahf mov jbe inc jns lock outsb sahf popf fadds sbb push sub call jae insl and cli cli push mov neg push xlat pop lahf test and ror pushw jne mov negl das or rclb dec stos test aaa mov outsb sub in and jp add ljmp notl pop cmp sbb pop and stc scas or js xchg ret or sbb pop lahf and sub and pop stos push fs cli sub dec pushf sub lahf cmp in sahf jmp pop repz popa cmp jae add std cmpsb and scas inc cs adc pop mov mov ret outsb xchg fisubrl dec sbbl sbb xor lea add jecxz (bad) sbb jle loop xchg and cmp inc jno adc icebp xchg or and and mov adc or scas add inc dec mov ret std pop repz jnp aad (bad) fwait imul arpl outsb int3 ret ret sbb mov cld pop lods pop or dec imul cmp add daa mov sbb push push mov adc arpl loopne mov mov int3 sahf and test jl icebp xor inc mov stos cwtl data16 add jge mov clc xor xor les mov adc mov mov sbb fsubrl jle enter fwait pop loopne jb mov movsl or or xor pop nop xchg gs loop dec mov mov cmp xor mov std pop mov xchg iret cltd movsl movsl test mov push aad inc pop ljmp out repnz jp adc lret in jb,pt insl jecxz inc int3 std add pushf stc repz test fisttpl dec (bad) xlat repz jecxz (bad) into out xchg mov cmc loop xchg adc imul scas push pushf movsl jae sbb lcall sub sbb imulb sub adc jo stc (bad) and sub adc popf lret sbb cmpsl inc xchg iret mov jmp jmp (bad) jb and and mov lods (bad) (bad) int pop insb inc and pop jp add insl xor xor arpl jnp imul imul and or jnp xor ds or dec mov in xchg mov sti aam mov movsl inc dec add push push xchg inc fmull (bad) repz mov jnp subl cmp pop ljmp dec jmp adc pop jle push xchg lods call rcll and into xchg mov mov in in push sub mov dec dec clc mov mov and test mov fidiv mov lods int3 and sub mov push int cmp mov pop jp cmp repz lcall mov and xchg dec dec loop cmp fdivl xor outsb scas dec popf mov jl and scas adc or mov mov jbe,pn cmp addb in fcoml in pop lea call in sbb mov sbb fsubrs out dec notb fwait cmp daa out addl sub sahf in pushf jno push stc fwait push push fs sbb or sub xor ds (bad) mov loop xchg xlat adc xchg push push push call sbb nop syscall pop insb xchg lret in pop pop (bad) cmp loopne nop inc inc jecxz mov test ds (bad) xlat aaa dec int3 (bad) clc sbb xor mov mov (bad) adc cmp sub shrb xlat jne mov data16 and leave fsubr pop pop dec adc repz mov inc (bad) push xor add fs mov stos int add rclb out sbb xor push mov je lea sub push jb adc push (bad) jbe iret lea call push daa out xlat xchg mov mov dec dec and inc cltd xor mov fdivrs cmp and test mov fnstsw insl xchg out xor cwtl cltd outsb mov sub xor cli push pop jae sbb xor packsswb xlat repz int fild dec popf jnp sub sti pop ss loope jle cmp or mov subl mov xchg add cwtl add mov push xor jae addb lods cli jl popa loope cmp les je inc scas (bad) stc jne cmp in int jo adc xchg cmpsl fwait sbb icebp imul and jne cmpsb mov imul jl outsl mov cld (bad) mov out xor ds mov mov (bad) bound test test mov pop jnp cmp mov cmp out push fwait push out xor inc adc jl push adc mov jl fs rorl out add movsb add xchg mov outsl mov aam cmc jnp sbb jne enter mov mov mov jg fildl mul pop ds (bad) std stc fldt cmp cs sbb pop inc add mov add call outsl ds loop daa sarb outsl add int3 aad jg imul setb clc mov mov and lret aam rorb mov lock popw leave and jae js mov ljmp hlt outsl std cld cmp cwtl fcmovnbe adc or push ss dec sbb in xor andl inc adc xor sub loop lcall int3 push mov add out (bad) sti icebp inc xor dec xor mov in push jmp jp les mov mov mov xor mov mov xor mov pop (bad) fdiv push sub jae mov pop jb jo jg lods (bad) scas adc pcmpeqw sahf in addb add xchg ret jo stos std push stos sbb or sbb dec cmp gs sbb insb inc lcall jo (bad) jb jmp in aas std addr16 jmp stos aaa leave pop popa (bad) mov stos add lret fldt sub (bad) cwtl dec test add out int3 pop nop push loopne dec pop lcall xor test inc xchg or int3 adcb in test insb movsl jno fwait push mov push inc push adc push jne pop daa or es adc roll test sub sbb ret les or push mov sub push out mov repnz add int xlat dec pop mov cli push lods cs xchg into rol xor loop daa mov stos (bad) bound lcall jg mov scas push jmp or fidivr cmp scas fistp and lret inc cmp icebp pop dec xor cmp rorb push xchg mov jmp fs ds aad jne (bad) arpl mov inc in push (bad) loop push push adc mov shrb insb mov pop arpl cmp cmp sbb sub aaa shll sahf mov pop movsb roll push ss std leave mov jbe,pt and mov fnstcw xchg popf push xor rcl mov dec fs pop xchg lret movsb mov jle out dec or roll leave mov adc in jmp ljmp mov jnp dec cmp fistpll sbb mov xlat neg aad mov in xchg movsl gs xchg jo das push call outsb or (bad) les xchg mov jb ds je sub (bad) fidiv or js bound jp dec sub mov push xchg inc gs mov inc cmp inc sub dec jo jb je fwait scas mov xor sub mov push xchg lahf addr16 or sarb (bad) aam push repnz mov stos in nop mov into sbb push ret add es shrl ljmp adc jae mov xchg sub in (bad) popa jae cli inc in stos xor dec stos push cld (bad) clc sbb jge jle movsb jl inc (bad) sbb mov jle cmp sti mov push inc ffreep sub jge icebp jb inc fs pop (bad) jle sub in addl das jae jo (bad) mov lea mov inc inc popf rcrb xchg lret lahf cltd mov mov mull mov ficom push in ret push pop (bad) into cmp imul adc clc inc in imul out push sbb leave pushf negb int jbe mov lea mov jg cli cmp push mov out nop stos or (bad) in fimull mov pop xor repz mov add dec add sub and flds (bad) adc sub or test dec (bad) cmp fwait add jnp xchg or adcl dec mov aaa cmp div and xlat push mov push test sarb ret inc jne fnsave push pop stos mov mov add jmp push dec out aas add mov leave xor lcall mov (bad) mov and cs aad lods out stos push inc es jns aas mov push in jp outsb arpl hlt adc inc addr16 adc notl subb dec mov pop sbb xbegin cwtl movsl ds icebp pusha ret insb mov aam (bad) or cs or sub jg pop jb add mov mov push flds (bad) out lods (bad) jno ljmp push adc cmp mov fcoml lds rcrl inc je and push loopnew sub scas (bad) nop xorl std mov jne mov push xchg xchg mov pop mov cmpsl outsb mov mov insl or jmp cmp sbb rcr dec mov dec sbb push add mull jmp fcomps ss ja pop xchg in xlat (bad) sar jp and into jnp pop xchg cmp (bad) out push (bad) sbb push lds xchg in dec and fnop add xchg pop adcl inc add adc pop sti cmpsl (bad) mov (bad) jp stc add pop scas cmp fsubl push sti xchg out push inc popa ja ljmp out push in gs out jmp or (bad) fdivs scas jae jmp sub decb test popa xchg roll cmp fdivr fnstenv inc dec int3 and fimull push pushf imul jl mov in in sti cmp mov push adc push xor sarb mov jge je data16 lret jb adc mov dec jge push jno and jnp js mov mov sbb push cld jns insl test test (bad) mov fs ja enter sub ja js dec sbb push or push out aas jno enter dec and out das inc pop dec int mov cld pop or jmp jecxz sti cmp pop push pop push mov in cmpsl jg or nop pop mov pushf mov jno ret dec pop pop (bad) lock pop (bad) xchg sbb leave ret cwtl push lods test mov fimull mov pop add pop int fwait pushw jecxz (bad) call lret cmpsb dec orl fld (bad) xchg dec dec scas lcall insb in jns outsl pushf in (bad) mov loop movsl stos sahf aas clc mov daa stos pushf or adc cmp rclb fidivr xchg sub pop mov fimul jnp xchg cwtl push and pop cmp ds fstpl pushf call cli mov cli mov and (bad) dec stc fxam (bad) mov cld mov js mov jp adc test mov jmp js pusha loope xchg arpl or or lea insb arpl loop pop outsl mov and in stos jno ljmp icebp mov (bad) mov fcompl fstpt cmp (bad) mov lahf iret jns push xor inc xlat sub dec leave cmp stos test ffreep xor push jb addb push pop push les aaa mov inc subl scas ret subl adc jb mov insb out xchg and loopne jg loop sub lods cmp stos sub dec jnp frstor pop das push xchg cmpsl mov outsb sub pusha jle dec rcrb mov fs add adc imul outsb (bad) jp in dec cmp outsl in adc pop push inc pop pop add inc xor cmp ds data16 fs stos out loope popf popa lods push adc aad pushf testb popa pop je ret adc mov enter cpuid inc (bad) je xchg test mov rcr push mov xlat loop insb addr16 xchg mov jb hlt ja cmp xor (bad) fildl enter outsl adc xchg imul mov hlt in incl test mov push icebp dec cmp sub (bad) (bad) (bad) mov stc rolb mov pop cmp adc inc rclb xlat mov (bad) movsb mov (bad) or pop mov sbb add pop negl jmp mov ror and sub cld push mov and or inc into pop mov icebp loope push leave mov cmp imul aad fwait loope aad (bad) aad jnp ja and (bad) push pop fadd mov bound and xor dec jg fstpt lret xchg pop cmpsl add imul or fwait loop sub inc mov dec push inc mov arpl rcrl or mov movsl mov sbb and mov adc add adc jl int stc mov leave sahf cltd ffreep lds mov jo add cli in push mov push inc ds xor cli sbb jp insb test mov xor push xchg loopne std mov les (bad) notl lea xchg inc inc jge aam cmp mov xchg jbe mov cmp pop hlt jbe jge mov and mov movsb aas addr16 gs and ds out mov rorl adc movb cmpsl jge sub mov sbb xchg lret (bad) out inc add frstor pop (bad) ror cmp sub rolb popf xor cmp push lods jnp cmp and out aam pop mov sbb lods stc ret sbb in leave cmpsb jge loopne push jb push xchg daa and rcrb jns xchg (bad) lock mov (bad) les ss cmp repz rorb push and mov out adc xchg jmp mov clc inc pop test (bad) clc lods aam cmpsw sti sub fild push ret das mov fisubrl je enter aas lret lock loope mov nop jmp int3 fcmovne (bad) shl or ret xor jno out movsb test pop (bad) pop add data16 enter adc jae push mov pop xchg insl dec push sub mov scas dec mov jne pop add pop mov repnz sub mov icebp aam outsb roll sub jge mov movsl push mov jg jmp adc mov push les jne xchg mov arpl test jbe lret xor mov dec dec jbe pusha pop inc dec push dec mov mov inc outsl fwait pop adc pop and arpl lcall fisub mov dec lock mov repz xlat scas inc call mov cmp cwtl shr push mov sub in ret cli lahf or jge dec inc mov repz dec rclb sbb mov mov push sbb lods fwait push clc outsb mov mov and dec (bad) pop sbb aam or pslld pop cmp imul or mov cmp movsb pop test shrl lcall hlt out dec mov mov scas pushf mov cs pop jno inc insl dec mov and and push cmp fsubp data16 push cmpsb dec fsubrs (bad) xchg (bad) adc mov pushf lcall add xchg (bad) (bad) or inc fdivrs popf jge lods mov push aam mov fwait xchg pop cmp sbb jb test out push add adc jns ja jb inc fnop pop xchg adc cmp sbb sub dec fbstp push test idivb jmp icebp add test daa dec cld cmpl inc mov pcmpeqd dec pushf mov movsb mov pop fmull xchg negl dec dec or iret adc aaa ret mov pop xlat ret ss mov mov loopne inc jle ja leave adc ret xchg adc js test push pop lret fcompl or or or imul cmpsl adcl lods ficomp inc ds push cs (bad) mov xchg out add jb jg loop add out sub (bad) arpl sbb adc dec es in sub and pop xchg rorb pop dec sahf push inc adc testb pop xor rorl gs cmp sarb iret std dec je pop enter fiaddl pop inc jnp icebp push imul mov out jbe mov cmp or shrl and dec push ljmp xor mov sbb cltd pop inc mov xor test call into push inc in sbb fsubrp je shrl cmp (bad) pop faddl xchg insb test mov adc stos ja ror in push loopne add inc lds and gs loope aas sbbl (bad) xlat clc sub fucom sarl jnp movsb push mov xchg sti mov ret mov mov sbb test jp scas repnz xor xchg data16 inc cmpsl out cld stos xor cmc cmp ja sarb mov std test push mov in fnop xor jno and stos dec movb repz lds cmc sub arpl sub (bad) es dec add ds mov add add jb dec pop mov pop add push cltd add lcall js (bad) jbe,pn or faddl gs scas movl dec pushf lahf mov mov add test (bad) pop xor or insb cmp mov adc pop sub sbb sub cmpsb xchg pop push fstpt xor mov frstor and ljmp sub sub lods jecxz push das mov sar daa pop jmp lcall xor xchg mov aad and aad mov lret mov cld dec repnz jl inc cltd inc ljmp lea ljmp aam lret test xor int jno pop out inc sbb rcrb lcall int xlat jns and jle inc gs bound test hlt add mov movntps shl xor (bad) (bad) dec stos not jle shl fimul dec mov ds pop xlat shl add cli stos xchg into push out sub fcompl mov pusha or ret xchg in or cltd aaa ficom popa cli (bad) nop mov sub cmpsl or dec push call mov icebp pop mov push fwait mov mov mov pop lret shrl dec lods mov add lretw pop fisubrl scas or in xor and rcrb dec adc scas mov lcall fistpl lods test sub mov add xchg icebp add inc gs cs notb pop out (bad) dec scas repz and out les push adc jp mov push out adc jbe xchg addr16 xor (bad) xor in loopne sub (bad) leave repz push jnp insb inc sbb pop lahf cmpsb rcrb mov mov enter mov test push mov lret push lock mov rolb sub out push lods or roll inc into cmpsb dec cmp je mov push aam mov cs sti and and xchg outsl mov (bad) jbe push add push outsb ja cmp out cld lea sbb mov xchg pop cwtl push scas mov cltd adc ret lahf sbb sbbb xor stos je mov outsb loop xor pop cmpsl psraw jge jo je subb enter insl mov nop bound roll jp cli test sbb fiadd adc inc jno icebp jecxz lea xchg shrl jp xor and mov imul jb xor mov sbb (bad) out cmp jecxz xor lods outsl sahf divl test in aaa loop xlat or mov dec mov outsb imul out add fs loope cli (bad) out and mov inc arpl mov std repnz mov (bad) fisubr add or jecxz lcall mov lret push adc push syscall lods negl push (bad) aad jl inc es mov movsb iret imul in pop cmp mov addr16 repnz stos mov cli xor cmc outsb dec xchg insb jp rol dec inc lock jae daa mov scas adcl pop sbb cmp dec lret jbe fbstp leave adc pop add aas push inc push fild pop jmp mov fnsave xchg mov mov push or push inc add push xchg jp (bad) rol sti mov jle sbb in stos fwait mov sbb lods idivb arpl fxch imul sub lahf dec rcrb std out push cmp fwait mov arpl cld adc stc cmp cld add imul (bad) scas imul sub outsb fisttp loope jg cmp lret add jns aam into fidivr bound xchg insb test out xchg loope movsb jecxz push mov mov sub xor jmp movsb add push aad fnop xchg movsl cltd test (bad) mov cmp mov ljmp or or mov mov sbb (bad) xor sbb push jp inc pop imul pop sbb orl add pushl loop ja xor xchg arpl inc leave popa dec nop mov js inc dec pop leave hlt dec ljmp adc int3 out (bad) cmpsl or jle inc mov mov and mov and mov push stos jmp push sub fs jecxz cmp popf jns jo xor mov gs and fs in mov mov lea int test enter test (bad) sarl test jae mov xchg inc cld mov sbb push and mov lock mov xchg or setp popf mov xchg mov adc in fs sbb adc cltd aaa icebp out jbe jb dec (bad) daa stos lods rcrb outsl sub ja dec inc push iret andl xchg daa in sub sbb std loope dec cmp mov pop pushl mov inc clc mov insb mov data16 and in popa sub cmp jge iret repz mov (bad) xor (bad) scas bound and fdivrl outsl and xlat dec add adc fdiv xor mov pextrw pushf push cmp sahf lock mov (bad) push mov lret mov lcall xchg scas out js push push mov adcl or add lds nop adcl out imul shll bnd adc pop int daa mov jge add in popf loope mov arpl in push ret push aad outsl inc xor or dec adc (bad) es std pop push mov mov mov iret int3 pop pop cmp (bad) lret dec adc xor lea push cmpsl lods lds mov or jbe inc jb push jbe cmp stos jl or pusha stos pop mov test and movsb scas fcoml push cmp mov inc popl rcrb cmp adc ljmp push pop mov lcall js iret test cmp push adc dec fldl out nop bound mov (bad) pop push lds aad in hlt cli xor fsubrl cmp xchg jmp sub xor xor dec pop inc fcmovu addr16 and cwtl lcall sub in (bad) ds rolb adc sahf fcoml insb mov pop out and xor std sbb insb roll fisttpll hlt loope (bad) in mov hlt jbe (bad) jge xlat fild push stos out jp enter test jl cmp rorb xor pop and (bad) addr16 mov jb mov cld arpl nop jbe hlt in dec xchg or imul sub add and sarb push pop push sbb rcll dec cmp (bad) mov mul (bad) fidivl pop int jno outsl jl pop mov (bad) xor inc jbe xor mov pop lds (bad) cmp sti mov mov and ss je lock lds out cmp loope sub push fwait xor cmpsl pop xor hlt add cmp ret adc (bad) xor and stc mov pop stc push inc subl pop cmp push (bad) jg adc sahf mov leave into mov adc xchg dec out pop and jno out clc stos jno mov pop mov push mov jns dec push lds mov xchg xor aad push jno popf ficomp in roll mov adc stos jle adc add cmp in clc sbb es pop out cmp call mov js cmpsl imul xor xor xor jle iret (bad) inc in jmp mul ja pusha fsubl dec mov outsb mov addr16 stos faddp mov cmc mov mov mov cmp push pop push rcll fdiv xchg add adc (bad) pop bound pusha dec shll mov jne inc xchg push mov adc ljmp rorb mov insl jae insb insb push pop adc add nop jp mov enter dec jl lds jle xor push jmp mov mov dec pop sahf jb push pop mov mov (bad) ljmp fistp inc into stos lock add sbb jl mov xor adc lds lret decb xchg bound into adc and and inc ficompl stos xor push or popa sub scas or push adc push add mov xor hlt imul mov outsb sti jmp ja mov call xchg add inc inc xchg and pop fsubl mov push or push mov adc push pop nop ffree movsb out test xor xchg shrl divb aaa mov stc mov cltd jmp std inc mov mov shl jnp push daa jo add iret (bad) dec pop pushf movsl out lea and sub jns (bad) scas mov nop shl and inc movsl rclb dec jns addr16 cmc and inc dec movzbl testb scas sbb inc push fisttpl jnp pop sbb push in shrl sub sbbl cwtl xor lock add fbstp sub mov cmp (bad) out fisubrl (bad) cmp mov jo iret push mov (bad) jo xchg dec loop adc fisttpl mov pop mov outsl js push pop std aad xchg inc lods mov cmpsb or xchg cmp xor cli test xchg and dec divl addr16 and lret sbb push in pusha mov cli jp mov lret scas test jnp fistpll xchg (bad) (bad) outsb pop pusha test cmp xor cmc mov pop cltd and cmp out mov in add mov cld mov and jns and in mov clc mulb jg mov outsb andl pop push push pop in mov sub out cwtl inc jne jne mov xchg pop or (bad) fsub bound cmc mov mov or loop std adc pop (bad) mov push (bad) jbe clc dec or mov (bad) xor pop cmc inc add push inc mov mov daa sub pop add sub jmp adc scas hlt inc fidivr jl mov inc bound test (bad) inc mov and cwtl xchg ret sahf out imul sbb jmp in mov dec mov mov into dec add and out mov jp xchg xor out insl (bad) adc inc mov and xchg and push rol test inc pop mov arpl pop and or fildl push mov enter adc rcl jae cs mov sub mov outsl imul out xchg pusha mov sbb or push loop lods add nop sbb sbbl dec sub pop mov insl and jno xor and xchg iret mov inc push jmp call aam inc into cli out sub (bad) sarl push out adc push xor mov (bad) pop loope pop dec or jecxz popa mov or lcall sbb hlt jle ret test mull rol xor fdivl loope insl arpl cmp push lret movb add mov ss in ret mov cli (bad) and or cld sub pop fidivr movsb loope pop sub push in (bad) xor jns push xor sbb arpl pusha aad jnp repnz mov ljmp (bad) ljmp ret lea cld and and rorl lret stos dec xlat jb scas xchg jno push (bad) dec dec adc pop dec push dec xor (bad) and xchg (bad) pop mov aad pop dec jno pop cmpsb jl inc stos jecxz xchg jmp xor les (bad) movsb imul cs rolb pop ss push mov and lret iret repnz cltd (bad) out pop push pop call xor pop cld insl fiadd aas repz je arpl adc sbb pop adc and inc fstl sbb icebp js inc adc je lret imul and add mov push outsl sub in int push movsl mov jmp popa roll mov inc (bad) jnp sbb mov and cmp lret test fwait mov aaa (bad) pop jne inc mov mov int3 cmpsb cltd pop xchg sub cmp fidiv in popa stos scas insb pop xchg movsl aam mov addr16 and ss scas out in or xchg mov ja and push pushf mov sarl sti cmp add cli push insl test xchg (bad) mov lock leave repz leave push insl call ja lcall lahf test pop pushf ljmp mov cli (bad) fisttpll adc sub pop mov sub jmp sub dec and mov outsl dec add jle sub arpl (bad) outsl inc add movsl scas push cmp clc xor inc mov inc or fsub and leave (bad) jl clc mov mov cmp inc lea or movsb cmp (bad) cmc jecxz fdivrs inc pop ret sub mov in ret cmpsb xor add fist xchg (bad) lock xor xchg cmpsb sub and shrb xchg pop hlt lret sbb icebp ror sub add jmp (bad) fsubl xor adc test or addl cltd push lret rolb lret push ret movsb jb sbb inc add or test xlat mov nop insb rcrl (bad) mov jae imulb (bad) inc pop movl leave mov or xchg sbb test enter popf (bad) jg xchg mov popf pop push lods sbb out in add inc push les cmp cmp mov in lds nop cli (bad) push bound out or in pop cwtl scas cli mov xchg je arpl pcmpeqb pop clc repz sbb mov dec (bad) notl popf ja add ret xor fucomp cmp pop inc or (bad) mov je aad mov xchg cmp loopne fcmovnb mov pop int3 aaa loop pushf sbb aam in push aaa mov movsb fstpl scas ss dec lret mov cli dec test xor shrl fmull pushf push std mov jecxz jno mov jno mov sub movsb in and mov dec mov out mov sti mov (bad) xchg xor ljmp lret inc sub push dec xor mov push add xorl sbb xlat cmp into icebp push cmpl dec mov int and scas enter scas xorb out push jns jge mov insl sti adc rorl lods and fsts xor decb mov xchg (bad) ja daa push cmp dec into mov je push (bad) xor xchg add or fiaddl mov cmp popa jnp adc sbb das dec mov lods decb push add push dec mov and scas add scas jp mov loop jns adc or jo dec push hlt imul stos jnp pop lahf loope lea add mov rorb lcall dec lea cmp lahf in jne dec pop sbb das pop push cmpsb (bad) inc xchg mov and xor xchg inc push add sub aam jnp jbe inc sti dec scas add mov sub sbb sbb into and test cmc emms inc add test (bad) ret in xor sub xchg stos cld jno pop mov push jno dec repnz sub cmp mov push and movl movsb stos fild and jnp inc out xlat mov mov xor inc stos adc das or and movsb pop push push andl fldl2t mov (bad) arpl push xchg dec ja mov pushf sti add pop stos shrl test bound pop pushf data16 roll adc jb stc shrb nop stos cmp sbb int (bad) movsl int3 cmp rorb inc (bad) xor mov xchg cmc inc sar (bad) test out lret mov in sub int inc mov mov ret lcall fcmovnb sarl cld imul cmc mov and push xchg sub xchg or jmp add add add mov cmpsb out xorl ret mov or mov jns andb andl and out call push pop jne sbb ljmp addr16 xor jge jge cmp (bad) hlt es stc (bad) aaa pop out clc jae jmp outsb xchg push out outsb cmp popf jmp cwtl jge subl jecxz repnz dec aas pop jns test dec incb loopne pop cmpsb inc in imul aas psrlq and dec xor cmp or out mov pop cmc push xor js push scas dec jle add add je sti ds mov popa xchg cmp fisttp inc bound in rcrb ret aaa mov test mov ja xor shrb inc aad xchg cmpsl insb and sti jo sbb push mov jns cmp mov sub push adc popa add les in fadd and mov dec and hlt sub and cmc pop aam push jb jge fdivs das cltd arpl lret xchg mov cwtl fldcw pop dec adc mov pop pop dec out sbb mov cmp pop movsl arpl sub xchg and clc outsl fistpl cmp sbb add and pmulhuw inc cmp mov cwtl scas stc mov fsts push shll mov fs push inc loopne mov push data16 test sub cs xor mov pop mov rcl or lret sub test xchg sahf jmp cmpsb iret and adc (bad) jp pop inc (bad) sbb mov jns pop mov ret and into out insl test mov mov addr16 push xor enter xor pushf push xor and jp adc or xchg das or cld sub out sti lock divps sub add in pop sbb xchg test mov or pop les or ljmp mov mov sahf jnp int3 cs pushf arpl adc jmp in in out enter push cmp mov dec pop dec xchg and and loope jb cmc xor shrb inc aam loop std inc mov out mov ficomp (bad) jo jp xchg daa push push jecxz xlat pop sub int3 mov cmp add xchg mov popa xor pop cmp pop inc and cmpsb in push push jb pop hlt imull jno push cmpsl add aaa mov and ja xchg sbbb cmp mov sub push inc imul cmp mov adc daa adc pop push test jbe cs mov test insl movsb adc test and jno fwait inc cmp sbb lods xchg (bad) jo mov test ds mov lock call fcmove orl adc pop push or mov jo arpl pop push mov scas push addr16 inc repz loop ret push xchg jns xchg (bad) std push pop xlat sub jg lods int3 mov jp test movsb rclb clc mov mov xchg xchg (bad) push and mov sbb cmp jge mov jo mov mov js sub in cld aam and and aaa lods add arpl and mov enter sbb pop insb pop jnp and adc aaa or mov cmp sbb dec pop jg repnz lret pop xchg jae shlb mov pop mov mov jp mov arpl sbb es mov add push xlat mov push (bad) cmc push cmc push cmc popa jge or ljmp jmp mov adc cmc xchg jge (bad) popf mov and emms (bad) add test scas push cmp lahf and jmp and xorl add jge mull add and je ljmp enter mov xor ret stc and in incl cmp jae lahf sub mov ffreep or sub pusha sbb dec jl mov or inc cmc adc mov loope gs pop jns push or popl mov sbb mov mov pushf add lret adc out inc scas enter aam push mov xchg fwait imul notl mov or adcl mov sbb cmp out aam mov mov inc popa xor enter movsb xchg jp dec stos std and adc xor les sub sbb dec ret lods (bad) out sub xchg outsb jle pop push cli (bad) rclb jl fild add hlt and sub outsb andl sti xor pop or pop movsl pop jne mov xchg mov xlat out std ret daa imul aam iret (bad) repz add add mov xlat cmp mov dec dec sub or arpl aad arpl imul mov cld (bad) out js mov jle (bad) arpl cmp push int popl (bad) jo dec mov and sbb (bad) es pop add inc cmpsb nop rcrl fs inc fimull cli or inc pushf mov scas lret test add pop scas pop jp fmulp lret jne clc pusha xor scas or mull pop inc ret sub xchg or dec subb in daa mov imul mov add cmc enter addr16 mov negl add cmp push xchg test loopne cmp mov enter cli movl sbb pop add mov ljmp fwait mov in pop xor adc stos dec inc jp (bad) es push xor aaa xchg xor lods pop xchg push in jmp jnp pop pop loope leave pop fs (bad) mov outsb and cmp in mov pop xchg xchg jge mov cmp pop rep ja stc xor movsl aas or mov xor gs aam xchg incl jmp xchg cmpsl cmp movsl push xchg or sub push aam (bad) xchg pusha dec (bad) stos das imul clc popa xchg jecxz pushf inc inc repz cld mov lds std cmpsb sub roll bound test inc add aam pop test andl lea cmp and pusha ret out (bad) je jl push push hlt mov dec sbb add insb (bad) xor push fstl jnp pusha xchg mov dec or jae les js sub sbb mov sbb mov std imul aad repnz in sbbl das cmp dec ret adc xor aas pop sbb les jmp imul aaa (bad) test aam jg (bad) sti sbb or mov and dec movsl add pop mov in clc icebp and mov inc or cmpsb or push pusha xchg out loop push sub add push pop subb dec shrl mov inc pop (bad) (bad) jbe jae sbb cmp fwait and ja aas insl test lahf push jno mov cmp inc push dec popa push mov mov mov mov dec sti lods pop jnp loop mov push mov mov sub mov fistl inc lret fidiv fistp mov mov loope push xchg insb xor mov and leave inc loope out push aaa jge mov in dec cld rcll jb xor lahf out or xor bound mov mov (bad) mov inc cmp sub clc push int3 sub fsubrs (bad) bnd scas xchg mov das insl mov jmp cs arpl adc cmp inc rcl andl push xor push mov (bad) mov cmp add sub gs sub mov addr16 xchg ja jle rcrl add xchg add in fmuls xor sub inc jmp ds xchg lds pop pushf sub sub xchg ljmp sub pop jmp push inc shlb xor int into push cwtl into shl call jns orl add push pop sub lret aam mov add or xlat insb push cmovne add adc (bad) sub sbb (bad) sbb fs sub clc test mov movsl (bad) and xchg push je sbb push cmpsb in lret cmpsl xor dec cmp stos push and mov cmp leave repnz addr16 sbb ss sub mov data16 sub loopne roll movsl aad lods pop mov iret push scas jg push (bad) (bad) push fsubrl fidivrl leave jns mov (bad) test (bad) fmull push test fistp sbb aam add test aad hlt xor cmpsl lock leave cmp fildl repz xchg fwait andb test mov lods stos inc testl pushf xor fstpt mov mov into fistpll bound fildll cs cltd cmp jecxz dec push out lods jnp out inc jnp ret mov xchg pushf ja mov jo push fbld push push dec cmp lea mov mov daa inc sbb lds loop lods dec test sub mov jecxz shlb add (bad) flds aas add lret jo adc inc push sub pop adc xchg adc repnz das mov jmp out xor cmp jb or xchg mov popf push sub loopne in mov fstl fwait push popa or repnz lea das push dec stos scas jo mov mov add xchg mov pop es mov lods pusha pop push fsubrp add mov in lea lea cs das dec mov cmp scas pushf fistp cmp aad xchg jecxz cli cmp xor sub loopne dec mov das mov imul aam sub lret dec dec xchg mov cs insb adc cmp xlat adc (bad) mov loopnew fwait out mov adc stc icebp mov cmc jno jle dec cmpsb out mov iret sbb and ja sub fistpll and push lds sarb lods xchg (bad) dec and inc xor in mov (bad) pop xlat pusha mov fsubl push sub (bad) jnp iret int mov push insb fcom jle loop js aas dec add add xlat sub add mov movsb roll stos push out bound pop dec sbb pop rorl shll push incb rcl inc sbb rclb mov xchg dec mov subb or pop int3 mov and jge cmp jle stos pop mov lahf rolb mov and sub aas rcll popf pop out scas push pop push aam cli mov outsb mov mov push fisub sub int fisub jbe rolb repnz push adc adc roll loope addb gs pop push and das ds shrl or dec test lcall fstpt pop adc xor sbb stos push cmpsl cs cmp lcall leave and xor in scas dec mov push xor xchg cli dec faddp cwtl push push aam mov imul push inc inc push mov testb mov jb adc fbstp mull jl andb pop ss jge jbe fldl dec into cmpsb loop mov jg mov fs cmp jns add fbld xchg jp out jbe xchg dec push jnp cmpsb out pop mov xchg add cli lock xor push mov cmpl (bad) or inc lea xchg aaa icebp fadds lods or mov mov das lret xlat andb fadds movsb fdivl cwtl xchg dec push das push movaps add shrl xchg imul xchg repz out mov push popa mov gs in pop add hlt das mov vmread idivb mov jnp repz cmp sub cwtl outsl sbb and fist or fcomps push xor mov jno adcl xor in jl pop jp lea dec jle sahf je popl mov mov jne jmp in xchg in pop lock push add sub pop sahf lds sbb mov jg sbb cs mov dec push xchg lcall xor jg out pop mov (bad) sub sub mov add jnp mov or ljmp adc and lods add sub jp dec inc and mov add mov mov roll mov sub hlt add pushf inc clc mov push fisttp mov (bad) cmp pop push notl loope xchg sbb popl and jb push jecxz push iret adc cmp add push xor std push pop imulb cli addr16 mov call xchg inc js and aam sti fimull fs sbb cmpsl rclb xchg sar ss lret test adc (bad) jne adc add sub add sar add sahf pushf (bad) ret mov jbe scas xchg or rclb jecxz cli pop aas inc testb xchg scas sbb scas hlt lods and data16 imul adc cs stos push push xlat test lret imull jnp xor pop mov fldt cmp or mov cmp adc or add push repz les insl xor sub dec jmp aad push stc xor dec push cmpsl das sub inc sbb iret mov cmp daa jne or sbb ja push sbb push and and js add aaa out loope loopne ret mov jne xor mov mov jae jo lahf data16 gs jmp or sbb xor adc push test les xlat shrl push leave xchg aad (bad) cmp fsubrs (bad) pop sbb dec loopne enter mul jge jne inc sar test jge sub rclb ds leave popa pop dec jge pop mov sub (bad) mov into (bad) fnstcw fadds fnop (bad) loop inc push jae pop sub out cmc jae mov aad hlt and inc sbb dec les dec bound cmp jo out inc sahf cld ljmp sbb aad fbstp sub pop push fcomp push test sbb cmp movsl jecxz,pn out stos sub sbb jle movntq addr16 popf cmp enter xchg mov mov pusha into dec pop icebp std pop in mov xor xor jp hlt and std cmp loop,pn add pop sti pop lret rol int3 movsl push setp xlat sbb push fdivrl mov insl cmp and pop sbb sub sbb sbb and mov jo or lods repz pop cs (bad) insb ret stc call mov xor stos mov xor xchg sub enter jmp lods and jmp and xchg sub sub aas push mov pop in push sbb add arpl mov pop ja sub es mov pop dec sub sbb inc or inc mov sbb popa xchg lret push out (bad) jl or in movsb fildll popf aam push mov jbe js loopne cmc hlt xchg les inc pop hlt leave lret mov (bad) mov sti fucom cmc xchg arpl mov cmpsl (bad) addr16 dec (bad) cli (bad) popa inc adc decl (bad) mov jp outsb adc stos sbb repz jecxz (bad) cmpsb pop and lret dec xor adc inc jnp lret (bad) in test movsb inc push aas xchg clc in je and push mov mov adcl jne std dec cli pop xor loop (bad) loope adc pushf push sub repnz mov pop loope rcrl sbb jbe and adc call mov jno add test das adc cmpsl jp fldln2 adc punpcklwd call jo xor in lds cmpsb fwait aaa cwtl or arpl stos xchg xor testb test dec jnp sti stc adc cmp stos inc test or xor dec push and adc cmpsb mov sub cmovp lods add insb aas out lea loop sub sbb push test add aam xor fadds and cmpsb dec mov pop shll xchg je adc mov (bad) test ret jo,pt dec jmp or or hlt adc inc (bad) dec nop push and pop in scas (bad) pop inc (bad) cmp ud2 sub popf pop push fidivl ffreep mov loop pop jl fiadd je xor push xchg xchg xor cmc aam (bad) cli (bad) (bad) enter lcall adc mov cs push add movsb (bad) adc mov in or aas inc sbb jo aaa xchg add aad rolb outsl and out dec scas imul xor out addr16 xor pop lcall fbstp shrb iret mov sub sub sbb push sarl ja imul adcl mov push scas and add or (bad) push (bad) xor mov negb push sub vpcmpeqd mov shrl idivb xor stos inc imul int3 add clc inc sbb fisubl arpl cmp pop cli xchg sahf movsl (bad) ficoml stos xlat (bad) pushf out mov mov xor cmp outsb sub pop shr outsb push adc and add push (bad) xor shr dec out push arpl data16 aam ja in adc jno mov sub adc fwait (bad) movsb lcall ljmp cwtl es (bad) in fdivs mov rcrb ret mov mov jecxz lock xlat cltd es test sbb insl adc addr16 push adc cmp fnstcw sti test mov push add and sbb iret xlat cmp dec add (bad) cwtl pop mov pop sub cmp mov inc aad inc inc clc decl dec stc ds xor aas mov test pop outsl in ja push jae or jno rorb pusha repz sbb rcl stos fbstp cmpsb xchg cli fwait xchg jne sbb pop cli movsl sub test icebp or or ss test cmp icebp (bad) push (bad) sbb stos out jb inc std in shl test stos mov ja jo cmp inc in jno xlat inc mov mov (bad) fisubr xchg lret enter fstp cmp fsts sbb aas in cmp call inc cmp shll cmc dec xchg sahf mov enter rcll cmp pop mov or jnp mov dec inc fdivp ror adc cmc mov inc push dec jecxz cs jnp pop imul test jnp aaa dec mov mov pop jge mov add pop fstpt push push push shr push add xor (bad) mov std mov mov and push test hlt (bad) cmp and (bad) out outsb push mov or jnp int (bad) dec pop popf mov mov push test stc bound sub (bad) cmp fstpt imul dec dec dec cmp sbb movsl xor push mov jl fcoms lahf cmp xor stos mov jo idivb lret pusha popa sti incl stc or inc cmp enter mov inc jmp and sbb pop or jle inc push inc cmp mov add ret inc mov shr jg arpl inc xor adc popa mov sub ljmp xchg outsl jno inc xchg testl inc outsl inc movsb mov lret lds jmp das pop push or mov pop cmp add lahf out lds mov mov lret add sub push mov es dec push gs mov mov call jb sbb js xor jb aam or mov pop lods pop fdivp fwait int lds rcrb fiaddl fcompl xchg fbld scas mov out addr16 aad xchg pop sub out (bad) and jge outsb aam imul je bnd xor xor push xor cmp into push mov jp jmp iret push loop in shll add inc cmc mov mov int (bad) (bad) mov pop aas in in mov rcll (bad) fnstenv or (bad) fmuls pop mov movsl mov enter xor mov inc mov movsb xchg sbb cwtl mov (bad) fisttpl arpl cmpsl test mov cmpsl ret sti push jl,pn cmp mov repnz or jl mov xchg and lahf les mov pop dec mov mov xor arpl cmp clc fldt popa push add push leave jnp sub into in pop ret lea mov ds cwtl jae call popa jo sbb gs fildl daa pop cs pop adc vcvtsi2ss xchg lods outsl je js push rorl push pushf cli out cmp lret fidivrl jge test scas push (bad) dec and dec push in jbe dec inc je (bad) sbb mov cltd mov dec insl (bad) lret pop push xchg xor push add test pop xor stc push stc inc jecxz add xlat cld or repz adc add les or (bad) jl jp repnz mov jmp xor pop je into add mov push xchg mov (bad) je push jmp pop das fwait pusha jp xchg loop mov cmp mov pop sahf mov in (bad) xchg fcmove mov jne adcl add dec icebp pop adc pushf in aad mov repnz aad ffree xor or mov sbb movsb fwait xchg cmp outsl jae or into ficom repnz xchg push out or add aaa jle je push (bad) cmpsb or int and sbb or pushw outsb incb inc out pop pusha out sub sbb xor mov adc cmp in imulb int mov sti adc jae sbb xchg test movsb and stos test push mov pop aam aaa sbb pop pop inc int mov mov cmp pop jne iret rcll ss xor and (bad) (bad) dec mov ds sarl pop leave push push mov (bad) fcmovnbe add or add dec sbb or mov dec push out mov cs push addl enter daa mov stos jo out shll add xlat cwtl push mull jmp fldcw fmuls pushl std sahf fcomip adc xlat lock (bad) adc pop scas inc push (bad) aad or inc movsb popf dec aas xor fwait mov rolb ds sti fisub push xchg sub adc dec or lods pop ret mov push mov cli or aad mov push mov lahf xor or ljmp das mov or sahf out jb xor mov test cmc movl mov xchg mov jl pop ljmp rorl pushf dec sub xor outsb mov std jb dec or in fdivl insb and push fidivr pop cmp out xchg push cmpsb sub sahf inc or jge and call call rorb pop sti (bad) pop jge cmp stos lcall sub cs mov inc cld add adc jge pop lock out jae mov cmpsl sbb jg jb push insb jae jge mov insl xor or in jno cld sub loopne fnstsw into enter lock subl outsl dec and aas add ss mov test sbb aaa pop mov jmp sub mov jno ljmp jns std arpl jg fsts jae add scas xor add int3 aad dec cmp xchg movsb ds mov (bad) jo xchg das pop or pop cmpsl std cmpsl ret xchg adc sub add sbb out cmp xlat cwtl (bad) add mulb sbb ljmp sub fsts arpl xor (bad) fcomps movsl pop and cmpsl sbbb add int xchg shlb jbe popf mov mov jmp addr16 pop fdivrs mov aaa push and and ret loopne stos mov lret mov xchg mov mov fwait mov xchg lcall loopne or lret imul push cmpsl pop mov sub loope popf jl cld adc jge lock add test shr xchg mov aaa loopne popf push inc sbb xorl loope stos push das sahf dec or mov push mov das je inc mov lret dec pop mov ret test or add das jae std jno jns or outsb cltd mov call mov aam sbb cld in push repnz sbb nop inc sub popf mov je or dec imul cmp lret pop and and cmpsb int3 lahf aas jbe pushf push arpl ja add mov mov xor arpl push jp test ficom jge jns mov insl inc xorl (bad) jnp inc pop jmp sub cmp push std (bad) imul fbld dec mov in adc or adc inc outsl push or mov call sti jl jge cmpl mov lds sahf jne sub pop ficompl in out push push inc out stos addr16 test push jno jmp std into add mov mov out and adc xor sbb in dec fmuls scas rol mov mov pop pop pushf pop sbb push sub aaa cmp test mov sahf adc inc outsl dec pmaddwd xchg and sub (bad) repnz sbb incb xor (bad) out mov xchg fldcw out rorb jg mov xchg in lea movsl xchg dec (bad) jge cmp or cwtl lods imul (bad) cmp shrb sti ja (bad) aam xorl add and mov into in sub sub shrl mov packssdw jle repnz scas movsl movsb ficom push movsl leave pop xlat adc addl jbe mov fild enter and and fnstsw scas xchg (bad) jb push enter mov cmpsl fnstcw inc mov lret jge pop add js push cmpsl jmp jg mov scas sahf pop or inc aam jb js js or cli jge mov (bad) lea xchg pushf inc and rol rorb mov (bad) cmc xchg and iret sbb sub jae push je mov in test pop popa mov sti mov mull jnp cmc shl imul or mov fildll jbe ficompl mov add mov cs jecxz loop mov sbb icebp dec inc enter ljmp xor jno push mov daa js inc dec in cmpsb adc pop and pop push xchg jcxz dec mov in pop mov mov dec mov lcall xchg daa jecxz lods xorl adc xchg mov shlb (bad) sub in fnop mov pop pushf nop and out add dec insl add dec jno mov jb stos mov dec fs aam cmp jne lea push in and lahf or insl popa sub les pop jne lea gs les adc lea jae xchg and jle cmp pusha adcb repz test mov xor inc jle cmp adc sub repnz xchg les jecxz mov pop mov xlat jp cli nop mov clc or push push std ds ljmp icebp push add lret pop cltd pop sub ljmp xchg sbb pop xchg in jo data16 or or inc dec mov aad lcall cmpsb sbb sub je push movsb les jg push inc cmp in ret push push push cwtl push or out adc xor xchg leave (bad) cmc jno sti notl fistpll cmp notb aam mov and mov pop pop fdivrs add inc int3 dec idivl lods ret movsl adc push rcll mov xor xor add in aas clc es sahf (bad) fcoml mull push test sbbl loop mov jecxz test mov jae sahf movb and mov rorl hlt das ljmp lods fiaddl fwait divl pop repnz push iret je add nop gs ljmp sbb ss xchg lods lds sbb add xchg std and (bad) sub dec xchg cmp or inc lock out xchg or push cwtl test lret or cmp lret jg mov cltd fiaddl ret pop shrl test mov sub mov mov or cmpsl insb mov inc jne push mov mov stos and adc mov mov push lret out push movsl and xchg xor adc xor jae or (bad) push outsl jno es push int3 pop mov into jg popw jns ss mov in mov ja xchg aad mov movzbl inc xchg scas or lods jo loop aam sbb enter or pop sbb mov es bound leave pushf dec pop inc (bad) xor bound fisttp unpckhps pop sub pop jmp dec mov xor mov iret or sbb xor add aad xchg clc jl lods cmpl xchg das lahf xchg test mov pushf sahf fisub je outsl and test fwait xchg pop sahf pushf lock pop out stos (bad) sbbl or mov lahf mov ds sbb (bad) cmpsb mov clc inc fistpl jbe lods mov sbb (bad) mov adc sbb enter jmp fwait mov add ss push std sub sbb inc bound fidivr push fptan xlat cmpsl ret dec aaa dec cwtl jbe lds adc push add dec loope sbb je jno lock mov mov add xchg pop cltd (bad) les mov xor pop or xor xchg fwait mov jl out cmpb xchg aad mov fs mov inc jp push data16 and sbb xchg mov mov dec xchg push (bad) jo aam stos aaa jns push adc adc imul adc mov sarb sbb mov mov fidivrl mov dec out jmp pop jle sti (bad) hlt jb mov and cmpsl mov in dec pop or jbe pushf dec add out jno mov fstpt cmp sbb and push imul es clc cmpsb sbb pop cwtl lods mov sbb scas add out mov movlps (bad) jle ret movsl inc ror or xlat pop out xor cmp xchg sub xchg mov cmp sub nop xchg ss insl rcrb sbb dec cmp add ficomp lods popa insl sbb and call and imul inc mov mov aam and cmp sbb and orl fwait adc ss pushf mov cmp xchg sub arpl push dec push outsb inc sbb sarb push incb sbb nop xor xchg cld or nop pop pop roll fcmovbe xor aad cmpsb inc xchg xchg xor jbe ds pop mov push lods push mull adc lods popa push mov aas and fistpll mov (bad) mov into ret daa inc cli sub pop gs scas push xorl fidiv adc js mov sti stos bound int3 sub (bad) std rol lea je shlb into ficoml inc (bad) jnp push push xlat and int cmc mov pop leave push addr16 test adc (bad) cltd repnz clc pop sbb mov loopne imul lcall jae (bad) leave cltd (bad) jo popf ss push or mov cmp push mov mov dec loop lods orl add fldt lret in in mov jb push push jno jp rorl sub add nop xorb jno pop cmpsl loopne push add mov mov cmp add insb push xorl pop rcrb cmp jo adc and sub dec xchg fiadd sub jge insl dec pop sub dec lods sarl icebp xor clc mov (bad) cwtl out jp rcll gs in push shrl and (bad) arpl lock inc jg inc push mov adc add out jecxz or ret xor fisttpl mov jp,pn xor and dec dec mov gs stos out (bad) pop std stc adc xchg sbb cmpsb imul repz ljmp fnstcw addr16 inc clc aaa dec xorl aad addl or xchg cltd xor out pop les push pop cmp mov pop fcompl scas xor pop sbb insb xchg pop pop dec mov add dec mov push mov (bad) xchg lea xor jo fdivp mov adc cmp adc and cmpsb xchg cmovs rcr dec outsb push or fmuls mov push scas dec fsub iret mov icebp xor xor inc pop mov std adc cmp ja movsl jae mov call xlat mov add jl pop loopne (bad) sbb das adc (bad) loope,pt add pusha fsts inc xchg ds lcall mov mov popa mov fsubr or adc push pinsrw cmp sbb outsl (bad) cmp iret aam or mov test pop mov jns or ds faddl imul xchg fidivrl jecxz jle xchg ret xchg (bad) mov insb mov push fist sbb mov jp stos xchg pop int aaa addl dec mov out mov (bad) hlt sbb (bad) push test sarl fcomp gs stc adc pushf xchg fidivl clc cmp xchg sub rep enter push push and xchg dec cmpsb fwait mov cmc insb lods dec sub lock and (bad) xor int lods jns dec mov popa jo (bad) pop in mov fs (bad) and rcl adc sbb out notb xchg je pop or (bad) push lods fs lds jo in dec inc jmp bound and add jp test mov mov add mov jns and leave mov leave sbb sbb add or insb cmc mov lcall shlb mov mov or sub fimull dec cmpsl lea jne dec and das and pop (bad) int3 stos rorb int3 aam pusha arpl loope lds cmc push or inc xchg lds stos xchg mov sbb mov repnz ret jge fistpl jecxz es xor inc inc jno inc and scas xor (bad) mov sbb jnp add add push subl xchg sbb xchg fsubr frstor dec fwait adc cmpsl (bad) sbb push mov pop xor push mov or cmpsb test mov call mov or into jo lcall xor xor lds add das fiaddl rclb xchg and mov mov (bad) mov lcall arpl (bad) dec pop hlt push mov dec cmp mov cmpl add int3 lock cltd cmp cli push mov jp jge push mov pop movsl movb add mov data16 xor imul nop inc hlt xor sbb sub cmp in adc jo adc fs xor add mov xor inc lret mov xor into ljmp lcall jbe or adc sub daa call cmp cli mov pop mov sbb incl stos jbe and repnz pop stos add push scas push mov lcall pop jnp pop popa xor out out mov cmc xlat xchg cmp mov sbb vaddps adc xchg sub incl out push add jo push add xor ret sub (bad) xor sbb pusha (bad) insl push insl inc pop push sbbb mov fstpl jmp ss inc imul pushf dec add loop out cwtl rorb add xor adc (bad) into aas xchg inc lahf aad jmp lods fist test scas jp adc aad dec loopne inc mov (bad) movsl inc aam cmp cmpsl rol pop cmp fcomi test pop jmp in mov inc popf sub push cmp mov (bad) mov cmpsl add sahf or test imul xchg ja ss dec mov xor sub ret dec je insl mov test movsb sti in stc fmuls xchg sub fs imul (bad) gs repnz cltd fs dec push test ds js or push and inc push stos inc dec loopne jne in dec mov popa jb les add std adc mov in fisubr mov or add jb mov or in push push call push xchg aaa xchg adc std mov add mov lea xor push jb fstl icebp adc leave add pop or lret (bad) xor mov sub xor repnz fistl lcall jb push adc mov mov lods and and pushf jo fs std jp or xor test and jle test ret (bad) jl mov push jl push es rcrl mov outsb popf movsl push fistp pop mov sar (bad) jbe testl cmp xor sub pop inc ret pop out and and add and loopne sub lods jp sarl inc lds cmc push daa sub push mov sub xlat rclb ss loopne negb cmp and inc inc cmpl lret inc push jns cmp scas lods insb (bad) sti or xor fnstcw clc inc mov jge dec outsl xchg data16 movsb (bad) mov imul mov xchg dec popa sbb (bad) lea int jle mov ds bound cmp mov mov fwait mov jb xchg sub int3 test mov mov jo mov lods jl cmp fs adc mov push xor push or cmp xchg ret add loop (bad) mov addr16 jmp xchg jmp rclb (bad) hlt in push mov mov sbb ret cmp popa icebp (bad) ret lods test jp mov push sub mov (bad) push fsubrs dec scas mov inc cmc add (bad) sub shrb push lret pop inc cmc pop imul cmp aaa hlt dec pusha inc pop or mov xchg popf mov sbb jne test jne push std and add sub sub les pop arpl cmpsb inc movsb je adc and into jmp or xchg inc or mov ja loop xchg cwtl cmpsb outsb jge cmp pop test ret lret mov xor inc lea cmpsl xor in outsl xchg mov jbe pop aas or xchg push inc test jnp dec into xchg cmp add into mov in dec pop add mov imul dec (bad) rcrb sbb fwait movsb (bad) lock push and mov mov shlb jns in ds and das jns inc push xchg fdivrs inc cmp outsb jbe xor cwtl imul push std xor in cmpsl imul sub loop outsl (bad) lahf sbb and jno or sarl push ss or jne push bound out enter insb lea enter fisttpll les mov btr adc stos add jecxz repz jmp pop adc cmpsl xor add sahf jo movsl ret xor subl or lds mov iret pop mov dec in jle xchg nop xchg sub (bad) xor outsl xor lahf push aam fisubl ffree inc xor jle pop and inc xchg hlt in mov add push xchg cmc mov icebp mov es and lods popf mov popa adc cmp jg push push imul sbb adc cmp icebp call push add fs mov sub subb push fisubr imul or push mov mov frstor and push xorb in mov into push cli mov jg mov push jno and testl in jl mov stos mov gs fsubrs imul mov xchg ficoml mov adc out jo sbb sbb cld (bad) dec pusha and adc jnp fisubrl daa jge mov subl pop cmp mov mov nop jns std sub xchg clc test call sbb dec or aam movb pop aam movsb xchg andl pop dec sbb icebp mov dec iret leave push adc cmp push xchg aad dec and jb nop dec xor inc lcall pop hlt gs fnsave (bad) xor nop pop push aam xchg or and cmp adc xchg (bad) pop mov or arpl xchg jns mov xchg mov jge (bad) std mov pop out and aaa dec std out dec lods loop sbb inc adc ds inc ss aas mov lods nop rcrb call sbb and or cmp xor daa loop mov sbb pop jne fldenv shr (bad) jb inc das cmc fistl sarl mov ljmp into add add jl adc sahf sbb insl inc pop cltd jno movsb pushf xor scas sub push fisubr pop (bad) cmp push dec sbb pusha sbb (bad) jb lret and sbb (bad) mov mov sarb mov in inc mov push into in mov ficompl mov (bad) sub repnz cltd and xlat aaa or clc lock push test pop pop pop add sub cmp mov out cmp xchg (bad) inc dec negb dec push leave lahf out cli jle fildl mov mov repz ret (bad) nop cmp inc push inc push cmp mov cld insl xor push mov jne fnsave pop loopw sub push push push lcall (bad) negl or adc jge mov or jmp xchg push aad pop and mov lds cmp (bad) dec ret icebp (bad) es mov sbb mov pop pop aaa push mov lret je push push jp (bad) mov adc sub insb cmc mov add xchg sbb pop mov (bad) (bad) xchg (bad) and jb jae sbb mov push lods adcb js jge (bad) bound dec std jae es in lock cmc in lds nop arpl icebp xor xor ljmp mov mov pop incl mov in jne jne in gs fstpl out aad mov mov mov add fstps cld das popf test cmpsl test fstl push xchg jnp inc scas sti (bad) push ret loopne mov clc movsb inc jo pop lods jnp insb popf pop jp fstpt cli jns ret push clc sbb or dec xor insl inc adc loope dec mov and mov jp cmpl testl jnp dec sbb mov adc stos jge das push mov scas jae sbb xlat pop mov sbb adc inc push cwtl mov jbe xor mov aas sbb pop xor pop imul xlat mov nop push fwait sbb mov mov out ja cmp push in cwtl push orl les (bad) mov enter in push lahf jl jecxz mov sbb xchg xor xor jbe sbb add icebp lock mov lock jecxz into mov mov aam dec scas xchg inc pusha dec leave ss xor cmp add mov jne fisubrl roll loopne les test jno (bad) in lahf or or mov sbb mov pushf jns popf clc xor mov mov les push scas adc and mov adcb push dec (bad) pop push pop pop hlt sub out push popa adc mov cmp repnz or (bad) sub or sub outsl lret inc push sbb test or mov push lcall dec subl cmp movsl and or (bad) call scas sub insb inc sub outsb ficom jecxz bnd mov pop mov push shlb cmpsb add cwtl jg lcall out fcompl or lahf pusha std in hlt fdivr xchg xor enter popf cmp insb pop sbb ret (bad) and sub mov xchg xor mov iret push orb hlt xchg sbb or sbb mov sub scas aam cmpsl xchg jns mov in notb rcl fdivrl outsb mov jge insb mov lds imul cmp (bad) mov je roll jecxz or out adc test sub ret pusha lret ja mov inc inc mov (bad) aas or cwtl sahf mov imul push mov das mov mov push (bad) and clc movsl pop hlt fdivrs or dec mov xchg push lret inc out les mov mov ljmp xor les loop mov mov rorb jne test addr16 add aaa into jo aad pop xor daa arpl (bad) xchg pop arpl xchg ds add ret inc fs inc aas out and (bad) iret imul mov push aad bound test rclb fcompl sub cmp mov les in (bad) aad and out das jns aad dec sbbl or xor pop lods inc push cmpsb aas mov xor jg inc fdivrs insl jnp movsl jo pop lcall sbb repz repz dec ss jne shrb inc pusha adc nop pop das (bad) scas pop popa sub idivl jo xchg mov in dec je mov add std pusha jge dec rolb ficom out push es vpcmpeqb mov sub fiaddl stc imull cmpsb mov mov mov xchg xor pop push cwtl (bad) in jecxz into in mov jmp cli fisubr push push pop loop nop jp sub pop popf loop sub sub int3 jle mov stos fdivl clc inc jb mov pop aas mov inc xor int3 fiaddl rorl fs ljmp (bad) or xchg dec clc std and stos mov out mov enter or (bad) stos es or movsl addr16 call fnstenv push incl cmp loop sahf jge mov lea and sub mov inc popa stos mov hlt ja in mov cmp adc mov pop mov fidivr jp or cli in sbb out add mov inc push jmp jmp fcompl fidivrl loopne pop loope repnz dec shll inc mov jl scas ds movsl insl mov sbb scas and data16 mov rcll pop push mov iret test push pop xlat test push test pop (bad) mov pushf push test out pusha inc arpl jb int push rcrb sbb cmp pop mov iret movsb mov jle or cmp repz pop lock lret mov stos mov sbb ds adc (bad) pusha in adc or xchg adc push mov (bad) cmp add inc xor repz xchg jecxz (bad) std dec (bad) lret test and sbb imul jl push rcl stos adc out int into push ds test fistp mov (bad) lret add enter sub std pusha fcoms daa (bad) jae dec daa jecxz ret rclb aam push dec aaa iret enter aaa jp test add cmp movsb adc rcrb (bad) (bad) out jo adc sub lahf jge pop fwait movsl push call jmp sbb scas add sub out push call pop emms pop cmp scas mov mov mov or test mov mov std jns scas mov insb jp scas push xor xor xchg dec jae push hlt std xor or test jbe test cmp cld xlat loop lahf cmp sbb mov add dec test lret test dec and adc fadds push cmpsl add inc push pop push lods test mov mov push das jnp or sarb sub aas cld test xchg and iret xchg add test push add mov cmp aas pusha jb mov repnz outsb sub and add and fadd jne imul repz pop and repz fdivrl pop mov ja dec mov mov daa xor in test add ljmp mov add hlt jbe xchg mov mov add dec es mov imul orb cmpsl jle data16 push pop cmpsb push pop pusha stc je add mov sub aas outsb out vorps or insl rorl sub scas pop out push inc cwtl outsl in pushf bound lea ss out mov or cli sarb out or mov add clc sti rcrl int push rclb movsl jae inc stc mov jecxz aas mov cwtl xchg js push (bad) lods test push fistpll movsb (bad) shll jp push aad scas xchg xchg cld sahf mov add push jg (bad) out loop adc rolb xorb sbb adc xor insl aam ss jl jnp add mov mull (bad) mov clc dec pop cmpsb pop fbld mov repnz add jecxz cmp pop daa aaa into jge jns pop sti and pop sub mov mov test ficoml repnz scas cwtl fsubl ja mov lods adc pusha xor dec pop jl jne cmpsb (bad) repz pop nop iret lea inc icebp add ds mov es enter cmp out dec mov sbb xchg lock and mov xor push xchg dec imul mov sbb add movsl dec stc and pop ja pop or dec cmp mov (bad) or xchg jg in mov pop jl mov mov cld fist out pop daa mov jb scas mov fwait pop mov lcall pop mov mov jno bound ret movsb xor fwait pop inc test or sub mov cli test sti or dec fiadd cmc xchg jl shl xor xchg and jne mov adc arpl test and mov repz mov fldt out mov out mov mov mov out xorl leave xchg xchg fwait jg addr16 jecxz (bad) icebp loopne (bad) rorl xchg cmpsb in dec push les lret in push jmp test clc stos mov jnp add sti in mov cli icebp sub es xlat xchg xor inc insl es insb inc push push jnp rcrb and ds addr16 loopne mov pop xchg mov jne pop fs push xchg data16 (bad) movsl (bad) jb inc sub mov (bad) cmc in sarl add out adc in push aaa (bad) and fildll mov test ret ror popa shr or aaa les and xor mov and push sbb testl fwait movsb mov stos lods movsb das fwait sti adc fwait sub jle mov fidivl int add js lds or (bad) sbb repz cmpsb (bad) leave sbb in push je enter cwtl sub adc push data16 inc ja insb sti adc es sbb mov out mov mov mov (bad) (bad) je,pt sub add push mov adc cmp mov gs shl movsl jl fxch ljmp pop dec test in cmc or in push mov xchg imul jge xchg sbb add jle fs orl (bad) popf xor mov dec ja lret mov cmpb gs jl inc clc mov cmp sti jmp jmp pop cmp hlt jns scas push in mov cltd push pushf mov ficom mov and outsb push adcl cmp aam test sbb push in out pop outsb mov cmpsl mov pop shrl fwait (bad) (bad) push cmp fist push roll (bad) stos or stos push mov xchg jbe mov xor and rcrb leave add popf cld inc test or add rcrl cmp or ja in cmc add fs pop or mov pop cmp jmp das cmp sub pop jmp push pop cli leave hlt and orb cmc pop pop popa hlt mov inc das mov mulb into pop mov mov cli (bad) in js (bad) or lods jl fstpt xlat (bad) shr or cmovns push and xchg enter (bad) jg inc mov cmp pushf aad (bad) or sub add xchg (bad) pushf xchg roll lds inc stc push mov pop pop xchg cs pop daa (bad) sti insb jae popa cmp cmp aam push in xchg (bad) jns pop shl xor sahf lahf mov rclb sahf ds or jbe jg mov mov push dec inc out jae and pop out push mov jge lcall jns inc ss mov or xchg sub xor sbb mov std push scas push jne gs adc cmc lret lock lock inc pop mov aad adc pusha add mov adc out pop int ds add jo jle cwtl icebp jmp pop ret loopne or pop sbb and daa pop fstl lods xchg push lahf fist cltd sarl lahf ret mov xchg test (bad) out sbb in fnstcw lds jg lret mov (bad) imul scas sbb mov jg cmpsb sub lahf jbe daa fisubrl (bad) icebp inc mov inc loopne pop in fstpt mov lea cmp mov cmpsl pop fwait gs sbb aad mov and pop push int mov push cltd jecxz cwtl mov out cmp jne outsb and jno mov xchg jl lock inc outsb mov das and je xor aas mov cwtl (bad) enter call mov mov add mov or sbb mov movsl xor sbb sub adc movsl movsb lea mov dec push or aaa xor xchg cmp push inc jp xchg jmp and mov add inc adc scas ds bound outsb xchg popf leave imul ljmp in adc cmp negb jo dec (bad) fwait jge push mov mov out fwait in pop cmp (bad) pushf outsb sahf inc scas dec push rorb out aam out (bad) in loopne mov fiaddl add or xchg dec or mov xlat outsl cmpsb push dec enter pop or add inc jl pop mov fbstp ret mov or movsl jno dec mov sbb push lds xor js adc clc data16 push dec pop movsb fwait roll cwtl gs mov enter in sub cmpsl retw adc ds adc pop je jno or mov and push fcoms mov push lret xchg sub out leave jae mov push (bad) out clc dec in leave inc inc xchg mov pop frstor shll ficomp fs insb and jne sub iret mov shr fcomp mov sbb dec cwtl (bad) aaa and and out test jl call xor sub popf push or inc frstor je lds addr16 mov (bad) loopne and push inc adcb fildll test (bad) xchg xchg or out xchg push pop push or mov and insl ja push jno push add add loope or stc push jnp out out lcall adc adc or daa pop ret lea sub hlt mov in (bad) lahf push jle lcall out cwtl sub sub outsl aaa and cmpsb lea cmpb jl pop in test mov (bad) (bad) fisubrl and call push ds sarl fnstsw mov cld addr16 fldt or cld add pop addb mov imul cltd mov or dec add jl enter fiaddl push scas or insb cmp and jo jb sub jg adc jmp jg xchg scas pusha pop inc mov sbb pop scas and xchg bound aad mov push adc jno jp pop xchg in (bad) xchg (bad) leave pushf cmp and daa inc (bad) (bad) xor je test cmpsb xlat pusha rcll add or adc adc pusha xchg jnp ja fdivl pop or fildl ja daa jmp dec lahf cmpsl data16 (bad) cmc addr16 ror mov jae ret ret arpl data16 leave or repnz xor mov jmp sub cmp inc push loop push mov adc mov mov popa cmp test mov or je lods lock mov pop push inc jnp sbb xor (bad) dec pop xchg jns cmpl ficompl mov movsb xchg adc mov cmpb cli jns jmp sbb mov iret add jb std rol mov test jbe xor imul iret sbb call sub mov mov jbe or cltd add mulb sbb (bad) adc test repz or jno adc rcll sub cmp ss std mov pop outsb mov cmpsb and fstl test sub clc xor dec int sbb jmp sti mov sub dec in stos clc cmp stc or mov mov (bad) popf add dec stos ds orl insb pop sub xchg adc jg popa mov sub enter (bad) test loop add pop lret jae pop dec (bad) dec and xor es js push or xchg xchg pop jle leave cmp int3 push sbb ficom dec cltd (bad) popa xchg mov jbe xchg fcmovne cmpsl (bad) xchg dec aad and push test test and xchg xchg int pop daa mov mov stos inc or cltd in inc aad lods add pop ficomp mov mov icebp imul dec (bad) xor lods (bad) xor stos loope repz pop arpl pop stos out mov xchg mov pop push rsm xlat adc imul outsb jg jp mov lods ror jae cmp aas mov roll sub lock fmul loop sub jl push pop aaa ret xchg lret (bad) (bad) rorb lcall sub scas icebp or fdivrs test inc inc push or cmc jp addl jmp jns dec sti fucomi es sti push mov xlat sbb mov sbb repz movsl in xor add add or and jmp mov lods fnop cmp adc (bad) (bad) std jbe adc lahf loopne jge adc in mov test mov bnd into leave jnp push popf adc popf repnz jmp lret mov lods rolb jl cmp movsb fwait cmpsl lcall clc push mov mov xchg mov inc mov mov xchg jns dec push in mov jns (bad) pop sub jns push jle jecxz pop jle xchg lret push cmp test hlt sub dec cmpsb stos ds cld stc out xchg mov pop aam out or dec aaa rolb and pop pop jmp out std loop mov jg pop sarl cmp in sub push xchg ret (bad) cmp (bad) and mov jge ss mov inc popf jo insb pushf inc movsb test cmp repz aad cmp outsb out pop jmp mov jae dec js (bad) jno cli fdivl add xchg icebp arpl xchg push sub adc fsubr ret add testb and mov movsl sbb add shlb xlat adc lcall insl or adc nop and or mov icebp push decb pop push stos dec sbb jae loop mov and sbb lcall je jle dec sar jne mov dec iret (bad) pop jo or ds (bad) xchg mov ret adc dec jl,pn arpl enter jmp cmc in int3 (bad) dec iret xchg lcall pop popa inc cmp inc ret push or sub in int3 (bad) jns enter mov nop inc push mov xchg jns fsubr jae dec xchg adc xor shll mov mov stos inc cmpsl inc outsb push pushf mov cmpsl push xor dec imul std push mov or sub shr jp adc rorb mov rorb lret (bad) adc push movl jae add shrl dec lcall cmc in jge cltd xor or cltd jae (bad) daa xor or aas inc out clc stc lret notb push sti jmp sub pop pop jns dec xchg pop pop cmpsb les or ret cs loop cmp inc leave pop pop xchg and cmp jbe addr16 int3 and sbb mov dec test pop sub (bad) jns loopnew pop movsb xchg xor xchg pop mov nop inc gs in pop jmp fcompl adc sub (bad) sarl pop sbb sbb dec adc cmp add cltd push adc (bad) lret addr16 imull adc jno push daa inc lar arpl push pop pop adc sbb jo rcrb test pop mov jb dec not lret mov lods push push mov cmp mov xor jnp or push test imul stos xor jmp sar sarb xor cmp insl imul and jmp (bad) mov cmp shrl adc jne pop shrl ret lcall in fldenv xor pop xor xchg loopne xchg adc movsl mov icebp (bad) (bad) mov gs lcall enterw cmovns stos dec scas test pop test (bad) sub cli push sub jno sbb in lods mov mov sahf test roll jmp xchg sub or xor adc lock pop xor stos sub lahf daa mov into adc divl insl call mov pop ja cs or push pop ljmp arpl adc nop imul add cmp lea addr16 mov loop aad insb shrb sarb cmova decb push pop js xchg dec fcmovne push in out mov pop sub pop mov cmc cwtl test pop xchg popf jecxz push xchg mov pop xchg xchg (bad) mov or imul inc mov faddl popf fxch cmp mov lock sub and sbb add jae popf rep repnz movsl cmp scas rcll and adc lock sti mov inc jo pusha das lret (bad) jns sbb mov (bad) push mov xlat xor push ror popa jecxz jnp push and mov xchg dec xchg je mov mov popf (bad) mov cmp xchg inc dec cmp push (bad) pop js push popa pusha loopne pop ret push mov test adc xchg testb push ljmp mov mov and cmp ror mov je mov rcrl in clc mov jmp lcall mov xchg inc lret mov aad inc je mov inc cwtl (bad) insl fld (bad) mov aaa pushf xchg call or push mov push or ret mov xor mov or stc jb mov cmp cld push lret add test ret jns jp and jo in pop inc and push call and pop mov loopne sahf sbb push in bnd movsb sbb je sbb or push int3 aaa loopne xor ss aas int3 hlt sbb pop mov mov icebp push and jo es push mov cmp inc in sub mov scas add insb adc movsl insb (bad) sub subb sub push and inc adc xchg insb jg push push dec scas test mov icebp add fild aad pop mov mov dec cmp xchg fdivr out movsb movsb pop sbb xchg popa je pop mov dec xchg jnp sbb js mov in inc (bad) jmp (bad) jge adc scas or jecxz pop (bad) inc cli xor adc imul cmp xchg int movsl adc mov outsl push (bad) push xchg sbb xchg push fwait push imul fs push adc ljmp sub add cmpsb jmp jle repz loop test cld frstor dec add mov cmp or xchg add or or cltd roll dec pop lods add sub clc cmp mov cltd mov aas xchg mov insl jg push jg fidivrl repz icebp es (bad) and pop adc call adcl subl lcall inc call inc mov mov mov sti aam xchg or xchg mov mov mov xchg jns xchg shrb iret or mov fnstenv mov sub (bad) fldcw je out mov orl push or arpl push pop ret push daa lcall dec les divl add pop jae int3 pop addr16 dec dec sub stc mov test and sbbl lret or jae jg mov pushf cmc and mov pop dec pop add adc mov pop gs fstps gs pop xchg mov nop sub mov mov ljmp daa cmp bound clc lahf jle fwait ds push sub jb fldenv out push push mov jl,pn fcoms popl push leave mov sbb push mov dec test les fildl fwait jne xor push sbb cwtl out xchg leave movsl jge xchg cld push test sbb mov jmp mov jne addr16 mov cmp push out and xchg ss jo inc imul ljmp mov in into out scas hlt jb sub push add push (bad) repnz std pop fistpll (bad) sbb insb aam pop imul sub loope mov ljmp and mov adc (bad) in test dec sub vmovhpd je push inc stos mov lods das sub (bad) fsub push inc outsb out out lea es push cs add push mov adc inc cmp imul bound xchg std mov mov pop inc out je incb mov push push subl jnp (bad) (bad) imul adc mov mov test imul xchg add test cmp fwait fwait sahf dec enter xor jae jmp int3 cmp aad int3 std adc ret push dec xor sbbb fwait (bad) xor cmpsb push jbe xor xchg add (bad) (bad) dec dec or aam out fcmovnbe fstl push or pushf test dec and add inc jno test enter lods cmp bound or jmp cltd bound fstps ret adc jmp fcoml scas (bad) xchg mov xor imul out add fwait sub cmp xchg mul xor arpl inc aaa gs add cmp pop jl sti xchg and sub clc repz popa pop cwtl pop dec call jbe std add xchg and or (bad) hlt or lret mov sarb fs push lods cli pop mov outsb xchg test outsb sub das mov out mov imul inc inc ja nop (bad) xchg arpl stos push and (bad) mov leave pop pop sbb enter jbe dec sbb lcall cld pop xchg dec cmp sub decl push xor scas xchg outsl jae cmpsb (bad) scas jae cmp lret or in push sbb pop dec jne sub aas cld das cmp ss mov iret fldl test movsb sbb push in stc dec (bad) pushf insb int3 aad pop mov push cld out sub and das roll cmp sbb lret lahf inc pop cmpsb jge (bad) jmp gs popf jmp cmp sbb push push pop jae lea pop pop pop inc shrl xor es xchg mov mov add and cmc pop test popa jp push sub or add or aaa mov push leave jb mov add dec enter jae xor loop (bad) scas pop das sub jp push inc mov pop fidivl imul stos xchg fnsave add mov clc (bad) fwait lahf pusha sbb pop dec xor add aaa xchg scas dec fiaddl aas aaa push ja dec bound and cmpsb out fistpll xor xor cli cld in pop lret stos push in push mov and cmp pcmpeqd jmp cmpsb cli cmp sub lods repnz jns call scas jmp (bad) xor jne mov xor stc or cmp fwait lret aas movsl add outsl enter in cmp dec lret xchg and test jle pusha or xor insb fs fstpl inc push xor mov leave jns pop pushf push mov js jl in (bad) scas xor loopne lret movups (bad) jae pop xchg lock data16 mov jl sbb or and lret mov out orl pusha lret adc shrb cld pop fsubp lds xlat pop push cmpl scas fcmove cmpsl (bad) cmp mov inc sbb push jge (bad) xor dec xchg fisttp inc mov and xchg in (bad) mov or call std cltd cmp lea enter or cli mov (bad) aad or push add test rsm imul andl je add lret nop cmpsl movsl sbb push add jmp adc cmp sbb fsubr call xor enter xor xchg (bad) mov shr (bad) sub sbb mov or daa cmp and pop icebp and xor jge test cwtl scas push and jmp js pop lahf sub xchg repnz sbb popa jg add stc aam mov addl ret inc cs dec add call popf cwtl cwtd push push xchg enter call daa mov xlat push shrl jg dec sti enter scas sbb xchg xchg pop xor or inc pop cmp push jle xchg dec dec jo add popf jbe or repnz popf leave stc cmp mov out aam outsb addb ret out loopne or std or jae ss in jge ret push aas cmp call push mov aam iret icebp mov movsl sahf in in scas sbb pop imul scas cmp (bad) dec int rorl arpl pop mov mov stos sub mov cltd repz das or sbbl push popa jmp js xor mov int mov lret jecxz ret (bad) (bad) sbb icebp inc sbb mov mov xchg pop lds (bad) lea subl sub dec or pop jnp js repnz push lcall lret inc xchg sub pop lret movsl jg cmp dec xchg adc adc js add jecxz pop sbb adc imul adc outsb inc gs push and jmp out sub movsl and add inc imul mov mov gs mov fisubrl mov xor xchg mov mov push jbe push repz xor push xchg scas fstpt data16 iret arpl (bad) test out push pop dec repnz pop xchg sbb and ret push or popa stos in aam lret pop push hlt out pusha test in sbbb fsts sub ja sbb lock mov (bad) push adc imulb mov clc mov aas aaa xchg pusha or jmp pop in xor push mov push push ror pushl int3 std jecxz dec lea jp or xlat push add xor rcll mov pusha jae shl aas inc push and jecxz adc int3 add movsb (bad) insl inc sbb add test leave lock mov movsb call add pop and inc xlat icebp cld jbe popa fstl js sbb daa cmp popa ss rorl (bad) ss lret call pusha and jb jge outsl pop ret mov sbb mov sbb or cli pop sub into mov cld mov (bad) cltd imul out (bad) sub mov cld dec push sbb call add lret mov pop aaa jmp xchg push dec in push rcll add adc adc imul inc ss mov loopne mov or dec int3 fldcw iret inc adc pop or push ret push xchg jmp jp sbb std jns xor cmc add jl fwait in jno js or jg xchg lds fdivl insl mov xchg xlat lods (bad) shl hlt sqrtps stos jnp mov mov mov mov mov in and adc mov lret (bad) movsb mov jp xor jae aam mov cmp push xchg adc hlt or jb add (bad) add push cwtl movsl jge hlt mov push mov push aaa inc jecxz in sub push xchg xor xor fcompl out push lea cld test sbb xor icebp jl test lods hlt pop js jo push or mull mov (bad) sbb dec jle stos jl lods jmp clc mov adc (bad) mov icebp shrb fwait mov push lret popa cmpsl or xor xchg negb jne sbb inc (bad) sbb jne dec inc dec fldenv (bad) incb pop fild cli in jg push rcll xlat icebp lods adc sbb mov (bad) hlt fadd dec sub xor xchg (bad) fisttpl jns inc movsb scas call fwait std out jns je pop pop (bad) addb cmpl xor pop cmovae push push out es cltd call dec sub or pop inc cmp add mov je adc pop xlat inc insb or sub in lahf int3 mull out add stc jb js daa jno and inc mov push das int jg shlb stc shrl jo xor sub fnsave inc insl pop cmp sub lods mull lods mov inc mov out jns aad mov mov aas addr16 inc hlt inc pop out push and push inc (bad) movsb add inc pop addr16 inc movsl loopne repnz aaa jecxz decl aaa xchg mov pusha iret dec cltd xchg ds and pop orb cld (bad) jbe add lods push inc call test sub xorl in xor mov repnz or inc jnp mov and (bad) jmp mov xor movsl rol rol xor jecxz sarb cltd inc mov andnps jae pop bound add and adc mov test int lahf or outsb insl dec pop jle (bad) nop mov mov xor add and shll shr cmpsb or pop add cmpsl mov xchg adc out cs mov fs popa sub pop lcall stc pop jecxz inc mov xor dec lea or (bad) loope inc jo das popa push mov mov (bad) cmp imul dec sub ret mov jae addl movsb in dec outsb popf or mov mov mov aad je lock mov push add stos aaa dec scas mov xor fcmovnu push xchg test fmull jns xor (bad) xor stos movsl xchg and adc lahf adc fdivl arpl push test in dec mov lret (bad) inc cmp subb lods pop sub sub mov push or cmpsb dec call inc mov adc xchg mov jp xchg jl mov icebp ret idiv leave xchg imul (bad) out aad cmpsb stc inc std add aaa pop repz out sbb mov lret (bad) into jnp es aaa pop pop push mov sbbw mov ja insb mov movsb mov jecxz ret cmp jg mov mov add iret mov adc jmp ficom cmp sub push int xor push cwtl fsubrp pop outsl cmp mov out and outsb jne pop pop lcall in lock in and cld dec sub pop negb insb iret loopne insl add xchg dec and test pop add mov fildl inc mov inc push push iret pop loopne stc xor (bad) push mov add (bad) or xchg add mov push jmp inc push mov enter int3 or mov sbb pop inc addr16 adc jmp jp fwait lahf movsb pop sbb inc xchg inc xor adc jae xlat inc or scas mov mov ljmp mov push inc iret pop pop push idivb jecxz inc adc pop push lods clc adc xor lods jb add call in cmp (bad) aad jns outsl push lock iret push out inc mov enter and ds mov (bad) fs imul leave mov (bad) in jnp inc mov ja,pn pop and sahf sub popf mov mov shrl ret xlat pop out pop stos dec rol mov iret outsl mov (bad) fincstp or addb fidivr jae xchg inc movsb lret sbb pop adc fistpl pop mov jns mov mov push fcmovnbe mov mov cmc repnz dec rolb push sbb jg loope lods mov lcall cmp imul cmp (bad) jmp xchg jecxz cli add mov cmp sub jmp imul (bad) mov push into scas jae dec adc mov ds dec out movsb les sub sub cmp js cli push push mov jg fcomps pop mov push push xchg loopne mov pushf std (bad) imul add push insb mov bound mov insl and mov dec stos inc adc idivl push xchg jns jge ds pop aaa sar xchg dec bound clc (bad) in xchg fs jle and aam sub xor ja les rcll test pop mov add xchg jb loopne inc xchg push mov lods fistl jo jg in addr16 cli stc int push test xchg mov (bad) sbb mov sarl mov sti or inc mov aas mov sub jl dec push gs push jns add and jg shrb xchg mov cwtl pop xchg sbb test cwtl packuswb repz leave mov fnsave test out loope ds push cli mov inc xchg in adc xchg mov jp cli mov adc cmp (bad) cltd dec mov push pop add out movb mov xlat inc mov or (bad) lcall js cli cmpl jge mov pop out test aaa push pop ret cld mov fnstsw dec int popa inc iret cmp icebp stc test xor and mov loope or dec pop mov mov cmpsb sahf push add pop pop fisub mov sti pop push inc add lahf insl repnz mov jo inc dec out aad cmpsl mov pop and push cmpsb (bad) sub shrb fmuls stos inc dec mov sbb cltd movsb in lcall mov test fmull ljmp cmp or mov sub cmp ret xchg shrb push pop sbb jle in cld rcll add inc inc sub (bad) fbld pop loope ljmp popl stos mov dec fsubr xchg adc inc sub or imul movsb stos out mov jns push add je cmpsl jmp mov popa sbb sbb shll imul and mov xor loopne test repz push pop loope inc cmp pop imul pop cwtl sbb fiadd and insl add test negl xchg pop enter mov clc adc jmp jnp sbb mov xchg movsl xchg push aas (bad) pop (bad) push ds cmpsb repz fldenv test shl lods xlat (bad) cmpsl xchg lods or push adc cmp inc pop cmpsb lock icebp scas pushf and mov sti in inc loop pop fistpl jb mov cmp push push jbe inc (bad) push jmp dec test aam mov lock lret lods jmp daa dec pop fbstp sub stc ja mov sbb sub mov mov rorl jp int push fnstenv jge pop pop cltd das sub or mov or adc push cld cld mov pop jns sub lods sarb xor (bad) sahf inc xor adc mov cs leave and cmp jmp cmp rol mov xchg jge xchg lea bound push (bad) nop test call sti xchg mov orl stc out mov imul dec add lock mov (bad) sbb aaa xchg lods mov push stos lock cmp add inc adcl jbe pop lret stc and sbb shlb sbbl mov (bad) sbb sbb or gs imull pop out mov mov inc lock addr16 in idivb sub pop loop dec insb movsl ss xchg lock mov (bad) mov gs std xor lock jl daa shrl pop fild pop cmpsl scas stos (bad) mov mov lea push pushf push xchg pushf cli test add int call xchg and mov push mov pop add in sti push scas sbb pop rcrb dec push mov xchg adc mov or mov lret push mov repnz or xlat jl cmp dec inc mov push into sbb repnz ljmp mov mov ljmp pushf enter mov pushf mov cmpsl shrl movb dec jge dec cmpsb (bad) in cltd inc rorb outsb outsb mov inc aam inc cs or fcmovu push jecxz pop mov lret or sti dec adc mov cs jno sahf jb and pop and xchg xor les sbb stos add in in inc inc pop repz add (bad) cld imul jp lods dec inc loopne shll repz icebp mov andb cmp pop stos outsb pop pop cmp sti jbe push popa (bad) ja push mov (bad) mov xor or icebp inc aaa addl nop add into push inc in jl lret xchg pop ja sbb aad ficomp fidivr pop out (bad) mov or cmp cmc cmp mov (bad) scas adc imul jne mov int jl loopne jge out call leave inc insl cmp iret movsl or scas inc movl pop push mov mov xor loopne imul mov mov stc loop mov les daa mov pop es xchg sarb outsb loopne mov cmp mov dec rolb jge fstl xchg push pop mov test or or xchg mov inc outsb lock push or push (bad) mov mov movsb xor jbe sahf loopne aad jnp out xlat jno std sahf outsb jbe sub push and pop mov scas push sub jg inc mov jecxz sbb hlt sbb mov pop jb sub xor jo pop mov xchg (bad) mov lret push mov mov in adc fildl or push iret mov sbbl sbb jg pop arpl test out std out rol pop xorl lret cmpsb in mov (bad) cld ret cmp pop mov fcomp emms push iret xchg sbb jmp mov data16 or mov sbb int3 scas add ss cli sbb add fildl rcr jge push test xchg inc stos xor aas adc ret mov fcoml push jbe stos dec (bad) and sbb pop jnp push adc nop mov push fcoml lods xchg sbb mov push popa in (bad) jmp mov cmc xor call or and add out and out cs repnz ret sarl or push dec fcmovu jno cs ret mov test loop push cmp mov push scas adc jle xchg jmp rcl lds in test or lea das js stos mov xor jno xorb add enter test jmp mov pop mov or out mov jmp adc fsubr dec push mov xchg jl inc mov mov cmp mov mov dec lods dec inc outsb sbb les add inc clc pop sub lock fs add subl cmp loope pop fidivr or lret jo adc cmpsl popa mov pop (bad) push fstpt icebp out xchg sbb in rclb adc or loopne cmp pushf or (bad) out push cld xor sub xchg mov adc xchg jo stc iret push (bad) sub shlb out inc mov subb enter push movsl adc xor push cmp in out shll pop dec add push pop push mov cmp aaa sbb push jns shld call inc mov je les push jbe xchg mov mov daa lcall mull adc sbb (bad) mov push int in or jl aaa mov outsb and jp mov cwtl cmp out mov pcmpgtb lret test les push lret in jae ja jo icebp orl cmp movsb pop adc movsb sub sbb push push jmp xor dec jae adc jg scas cld xor pop xchg shrb stos es (bad) loopne insl inc add push xchg pop push lcall fstps test or in pop (bad) push or xor pop imul mov pop gs cli inc push and xchg pop dec mov mov adc aam bswap hlt pushf mov adc mov inc jbe loop fwait lldt jb xchg inc in push incl or (bad) inc xor jne cld stc and jo xor xchg pop aad push inc add (bad) imul mov maxps mov scas lock mov xchg cmp stos jmp or insl xlat shlb loopne pushf mov or jno pop je dec xchg cmc repz cli and (bad) divl arpl xchg jge jbe pop pop movsl add (bad) lock sub mov outsb push push sbb push mov aaa fisttpll and inc sbb cli imulb pop add push add mov fld dec test dec ret sub cs jle movb push inc das jne dec fdivl push sbb push das into push or stc inc enter push in pushf adc lret inc add sub jmp jmp mov xchg add out arpl fisttpll cmp add movsb cmp daa mov mov sbb mov and ss xchg jg andb cmpsl nop (bad) mov inc push clc push and sbb mov mov cltd mov adc xchg adc and sub push mov or sbb scas pushf fldt pop (bad) fstpl sbb mov aaa lods mov imul xlat lods dec jo or adc jecxz cmpsb insb pop int push xchg mov mov ljmp faddl and orl jne and int3 fiadd add and lods xchg pop lods mov cli adc xchg mov inc aam arpl mov xorl jle mov js mov ret (bad) pushf shr adc xor jmp scas cmp xor and fistpl std imul cltd pusha dec adc xlat shl fwait jo jecxz lock sub inc push stos and push repz ja pop pop xorb cmp in mov mov pop ja lcall fimul push outsb and pop addl iret adc and cmp lods push insb clc (bad) bound stos es xchg cli pop sti jnp (bad) dec jb int3 mov jg into (bad) and or lods bound push cmp cmp lock sbb test or in mull cmpsl ja negl jno mov iret rolb sbb push jo call pop mov inc jo hlt loope dec (bad) jae pop pop loopne imul in sub xchg mov or ja std mov jge test daa mov mov push pop pop scas jecxz sbb adc jbe outsl push es push in bsf push negb addr16 je shr add fildl rorb imul in xor adc adc sub sahf inc call das lret ss int3 sbb test jecxz ss mov ss push (bad) aaa dec js mov mov iret or je jecxz inc cmc (bad) unpcklps (bad) bound dec pusha mov xor xor fcmovu ja add inc cmp jo cld das xor dec (bad) int3 in cld stos jl data16 or jbe mov stc int3 xchg jno mov push pop and stc jo add test fiadd adc ds enter xor push pushf add in movsb ja in cld inc dec xor mov (bad) js dec mov mov pop pusha xor mov push scas call push imul push push adc push inc scas push data16 cld and ss pop jmp (bad) mov jne lods and pop mov icebp jmp inc pusha dec (bad) (bad) imul fstpt mov (bad) add stc scas pop cltd push pop daa iret sarb repz scas cmp jge and test mov ret scas sbb (bad) psubsb test fs and fnsave ret dec idivb leave mov pop and mov mov mov pop or cmp jo dec mov pop mov int dec mov or jle addr16 jp jp xchg cmc add pop mov xor cli xor push inc dec call adc jmp mov mov pop adc push dec je dec shrb cmp (bad) mov cmp cltd lds scas pop push subl aad imul jbe xor push (bad) xor inc idivl or mov repz inc pop mov xchg xor cmp xor out mov adcl ficomp lcall mov or lods (bad) jmp lock lods xchg and inc pop pop ret movsb aam (bad) mov mov adc xor mov and cmp cmc outsl pusha popa (bad) lock icebp push push push dec push aaa shlb sahf xor inc xchg bnd and and jp aad or popa lcall dec mov mov js xor and imul inc stos (bad) dec cmp andb lea mov mov js negl cli ficom leave cmp xchg and loopne fsubs adc inc stc movsl xor xchg fwait xchg iret or ret out sti pop lahf outsb dec xchg push das cmp pop adc cmp xor lock ficompl daa fdivs mov or addr16 jmp out das jge add push loopne pop imul sub stos rolb dec jae gs rep jnp shll push pop gs leave fstpt outsb xlat jge outsl sar dec loop rcrb jae dec xor mov and pop sub push sub stc bound (bad) enter xchg (bad) shlb push (bad) mov (bad) xor iret pop pop xor bound mov sub mov popf dec pushf jp je jne loop aad leave lods repz js cmpsl les pop xchg sbb jbe pop push fild xchg xchg pushf dec fcmovnu data16 lcall sbb xchg fnstsw je or cltd fimul aam push icebp nop ffreep cld mov cmp or dec cmp or aaa add mov cmpb push and int orb push lods jmp push pop sub dec push adc sub xchg jge hlt or in lods pop sti xor or push and popf loope mov test enter push mov or fcoms mov cwtl scas aas (bad) insb les js pusha mov daa inc sarb adc leave cmp je push inc lods sbb mov mov xchg repnz (bad) icebp int3 jp jmp adc fwait pop mov sahf clc in clc xor pop test ret xchg call sub adc test pop inc xchg push xchg rorb outsb push add fst mov aam push inc or adcl xchg dec inc movsb negl in dec inc cltd test pop sub and lret add xchg shlb mov inc cld cli push mov stc xorb mov xor outsl push mov cmp pop call sbb xchg or push inc ficoml or add das add mov jno push out pop stos cmpsb mov lods loop loopne mov jbe jle lock pop test jl cmpxchg and into mov jbe sbb iret insb sub push kandnb cmp cmp andl and testb jae inc pop add jns mov aad in push pop (bad) jmp jp adc mov jb movsb fdivl pop loopne cmc push jns jnp adc ret inc xchg adc jb fisubl push adc push dec mov or repnz rorl mov insl push ror jnp xor inc add pop push mov jo out or inc lods add (bad) repnz lahf inc mov (bad) or jp leave fidivr xchg add bound push mov and mov sbb mov jg pushf push mov lods fldt daa test or cmp mov cld ss ds mov push mov add pop loope pop lods fwait xor pop sub jns or xchg pop xchg scas mov sahf cmp sub or jg rclb or pop mov cmp (bad) and loope jnp xchg pop std lods mov push ret movsl movsb push push leave sub outsb scas push adc push cwtl sub jp mov inc inc jmp out push (bad) inc fimull je cmp leave mov sbb repnz xchg insb sub ret out flds mov cmp inc or lret ficoml jnp inc xchg push pop pop cmp dec xchg jecxz jb push scas dec aad push pop dec inc lods mov imul rcll icebp sbb std xor sub cmpsl call nop jl jns inc push lock lea push pusha scas int fmul xor rolb pop loope (bad) (bad) loopne xor movsl push movsl xor jne mov dec dec dec push mov mov loopne in pusha loop adc ret nopl cli lods push cmp cltd xchg sub sub and outsl test xchg inc mov push xor mov (bad) pusha loopne cmp and mov pop nop loopne daa and aaa push rolb xor and pusha les stos add enter aam dec add jg int xor dec rorl xchg sti (bad) mov fcoml aas dec (bad) clc mov (bad) adc popf sbb mov lock dec ret loopne pop push fiaddl jb pop xor mov ljmp xchg pop in xchg and popa mov fcomi pop (bad) mov aaa mov add mov push jo addr16 sbb lcall mov iret (bad) sub add loope in gs cmc iret jo int cmpl cmp loope adc pop leave (bad) popa jbe xor push mov fisubrl lret pop jle outsl pop fmulp pop (bad) jo aas jne cmpsb leave es lret cli ss divb fcoml add mov jmp rclb stos nop dec popa sub jecxz and scas data16 loope mov test icebp (bad) mov roll leave pusha and mov xchg js or shrl enter aad push sbb and cmp fstl mov xchg adc (bad) pusha mov push mov sbb out push cmp push outsb sar sub dec push add pusha loopne (bad) ds test inc ficomp jo lods outsb aas push push sub ror mov (bad) stos test enter pop out and (bad) jno stc xchg test xchg addr16 fisttpll jl in popf mov lret push ficompl mov ds (bad) fistl es push lds push cltd and push andl sbb (bad) (bad) jge pop ss push fisub mov je pop icebp (bad) xchg sbb ficompl dec enter bound lods js and lret rol and push ja push add ficom or mov int mov mov push sub adc insb mov mov fdivs pop pop stc ret jge jns cli inc pop ja add ja sbb jnp lock xor dec addb xor arpl mov ja (bad) jne adc xor adc roll (bad) lock out inc pop jnp fwait cmpsb dec sbb leave andb xor sub dec inc push (bad) cwtl rcrl cmp add jmp dec xor or xchg sbb shll cli fcmovbe push sub mov call ja adc jb mov iret jecxz loop andl leave inc adc mov ja mov std pop push push xor hlt jmp sbb jb sbb ret mov out xchg fwait sbb (bad) test fs mov cli decl and and js add xchg mov call bound out in lret lret mov xor movsb push add add test add sbb and mov fs sahf push sub xor xorl pusha test inc imul ret mov bnd xor stc mov add xor in dec dec lods jecxz push xchg and ret adc mov lcall inc pop mov add xchg cmp ja ss rorb add (bad) xor sbb in icebp jae adc stc icebp dec push mov mov cwtl pop jb cmp (bad) out xor add push xor jo sbb add outsl or push jne jnp jo push xchg or ret movsl in inc pop pop ret cwtl xor adc sbb ret pop dec ljmp ljmp gs sarb std xchg fist int3 test inc into movsb mov out mov dec or fild adcl adc sub cmp icebp out ds lret sbb sti pop pop sbb mov jecxz xchg stos xor mov cmpb movsb leave or or icebp iret mov pop inc cmp sub pop jnp add daa mov adc cltd mov ret aam cmp lock imul push dec add adc cmp iret push xor inc mov fild jbe imul cmp inc cmp mov call pushf or mov dec mov inc jbe aam hlt cltd inc daa xchg sbb icebp sbb stos jge mov sub hlt or (bad) mov je xor movl and mov fidiv mov add push push sbb or adc jg pop test sub repz dec or mov icebp dec andb inc xchg pop imul cs xchg data16 xchg xor fwait lods xor and fcmovb into sahf pop mov gs and rorl (bad) adc or lret xor loop mov daa xchg out rcrl lahf pop add mov int3 rorl jge loope es xchg adc add daa sbb xor stc cmp mov lea jg repz mov lods movsl and icebp inc jecxz dec std mov push cmp pushf test mov (bad) rorb and dec mov fldenv sub stc jbe loopne sub jmp jo test and mov xchg (bad) dec iret scas lea pop jmp sbb inc lods mov scas sahf and outsb jl (bad) xchg inc push (bad) in jo cltd add jge mov daa outsl add arpl jae lahf sub mov add cs lret pop ret inc ljmp pop mov test popf (bad) pop mul and and pop aam push cmc or mov and sub dec and or mov inc (bad) or mov cmc inc sub lret or and sbb mov push mov pushf loopne or repz (bad) jo jle sub mov movsb dec or or dec xchg push jno mov pop sub loopne xorb or in mov lds adc xor jge,pn lcall enter test sub aad ss inc mov xchg lea and sub aam sbb jmp or sti stos loop sub ds in or pop push aam in xor xchg push pop or dec sub bound aad ss jp xor push mov push rclb cmp xchg inc pushf lods mov and adc jne out mov or jl movsl out fs in sub or insb arpl cmpsb or popa mov xor add push jp test inc push pop sbb add rclb dec add add xor adcl rorl das loopne dec cs cpuid out subl inc pop lods clc mov clc mov repz nop jnp jbe mov jg outsl cmp jmp add xor xlat push xchg dec movsl mov ja dec mov test out fsub notl add mov mov mov sub es loopne jg pop (bad) nop enter mov mov cmc sbb mov aam push fs xor jbe sbb loopne or or pop inc mov xchg daa fwait out lcall loopne add inc es in sbb lret lret cmp or dec rorb xor nop adc sbb xchg push outsl push inc adc shlb out pop mov js mov (bad) ficompl popa movsl mov test sub sub js inc xor popf mov cmpsl lcall data16 sub clc repnz cwtl shlb cmp stos jge (bad) jle mov enter std test xor addr16 adcb sub aad sub sbb out push adc in hlt jb je insb call scas sahf cmp mov jb push push xchg mov nop adc ret sub call das xchg add pop push mov mov fstps fidivr cmp xor adc dec adc cmp cmp cmp pop xchg dec inc mov cwtl push sub mov je sti mov lcall pop inc movsl bound sbb mov stos es pop (bad) (bad) pop subl push cmc sub lret sbb lock (bad) ds je pop scas loop mov push add scas adc mov adc daa add out push sbb (bad) (bad) repz xchg inc add lds push dec in iret sahf cli dec idivl icebp popf pop clc dec enter jmp pushf cmp pop popf adc (bad) test cmpsl and mov mov push cld mov fsubp hlt int3 sub rcrl and mov dec mov sub test xchg lahf adc sbb jg xchg cmp jl jl push test insb test mov add fsubr sub xchg dec outsb popf and fldenv ss js lcall mov orl call test push mov fldcw mov fstpl sbb sti cmpl dec fnstcw xchg popa fiadd mov mov jp shrb mov iret sahf mov inc adc sub inc das sub lea inc (bad) jae sbbl jbe sahf fs push arpl lds xchg mov jmp add add sbb fnstsw mov add sub imul jnp xchg inc arpl setg in sbb lcall adc clc loopne push decl jb push jnp push or push jae mov (bad) dec mov jg xchg sub jl cmp fstp cmp xchg outsl mov mov mov xor mov ror mov por sbb mov cwtl neg inc xlat push daa flds enter xchg imul jg,pt add sti dec mov mov adc fldenv and pop xor inc loopne mov cs fs imul add test clc sbb ja pop popa popf mov jecxz mov insl inc mov and sbb inc pop add jae and or sbb xor dec inc (bad) jecxz jno outsl xor je hlt inc add fsubrs imul daa push dec sub xor jecxz inc dec mov fs data16 jle lea pop fwait mov cmp popf push jnp mov clc orb ja and sub cmp mov ret cli lock or mov cltd add shr push jle cmpsl pushf (bad) mov jo cmp cli push sahf lcall push into movsl and aas inc sub pop jo push or jno (bad) icebp pop xor jp pop pop sub (bad) dec dec inc sbb mov test and xchg xchg pop repnz ror std jp rcrb pop pop dec loopne std push fistpl and hlt (bad) pop sbb xchg xor dec clc (bad) push xchg xchg test stc (bad) repz pop cmp cmp icebp inc scas push data16 or xchg inc (bad) loop mov rolb push das cmc jns sbb call sbb dec scas jnp int3 stc icebp fild mov insb ja aam outsb mov in xlat rcr ret dec cmp push mov or mov movsl dec stos push loope mov ret jge imul js mov sub push xchg ja adc cmp stos rcrb and sbb jne jp cmp xor outsl lods sub shlb dec dec mov mov jp adc (bad) insb aad int3 (bad) pop inc cmp pop lock (bad) fistp imul rorb xchg leave and lods icebp rcrl cltd or popf xor in fdivs xlat or fldl out dec in (bad) dec and xlat std stc pavgb dec xor and loopne stos lret xchg mov out aam xchg outsl cmc ja les mov gs movl push push movsl sub or int xor test jb loopne sbb mov jnp pusha pop pop popa imul out push gs bound subl iret pop sahf in dec rcr addl push fs fimull dec mov inc fnop jge sbb sti sub sbb mov push xchg out add arpl ficom aam lock adc jo es (bad) cmp pop outsl daa mov cmpsb fadd sub xor sub into inc fimul mov gs (bad) outsb or (bad) dec es mov shlb jbe test jg arpl rclb je push negb jb push adc push add mov xchg int (bad) mull insb pop out lock addr16 mov and outsb idiv sub cmp pop or jb test iret sub inc xor mov dec sub (bad) popa cmpsb fidivrl fwait xchg jmp cmp push pop adcl pushf mov sbb sub mov cmp pop dec and xor into xchg (bad) cmp imul sub rol add mov fsubrp lahf mov pop das fiadd jmp (bad) in cmc xchg test and insl movsl adc pop xor negl push aas xchg sub xor jbe and dec jle dec (bad) sub roll insl inc sbb add bound mov sub popf daa insl cs jns xchg in xchg adc mov divl pop mov sub repnz std cmp add inc add and loop fsubrs std ljmp mov cmpsl mov pop enter mov adc cmpsb push movsb xchg adc mul jb and lods iret jne insl ds mov out or jmp pop xchg aad scas pop div xchg outsb ss lock or jo lea repz xor mov cmp xchg js insl mov clc add dec xchg sbb sub (bad) dec scas push nop (bad) pushf jae call add aas xor mov fist add add imulb sbb fs inc in test int mov pop loope es insb test and lds add and dec jo shrb jl rclb xchg pop pop hlt pop and xor lret cmpsl xor lods scas outsb cli push fisubrl inc ss into mov xor arpl mov or and xlat outsb clc test pop scas cmp jns push into add mov cvtpi2ps lcall iret sti repnz insl mov mov or cld gs es xchg push lret adc jecxz imul sub sub bound adc popa jp mov and scas add shr xchg imulw sbb loop sbb int add pusha iret sub (bad) pop jb,pt lock lret and pushf ss adc scas icebp jo in sbb or rcl das add out mov add pusha aaa lret sahf ja mov jb inc ljmp rcl sbb inc mov int pop adc push inc xor push jb loope and jp loop das into push aad mov idiv pop fidivr dec jae out ljmp out inc xor cli jge xchg mov adc outsb and test mulb outsl push orb lds hlt mov fmulp icebp jmp fcoms mov stos push add sub push lahf (bad) mov and stc repz cwtl jmp fidiv ret mov add lret dec ficom add sub adc push clc es inc mov dec xchg mov cmp gs inc imulb std dec pop test xor imul stos mov out movsb dec enter sarb dec dec push insb and (bad) jle jecxz loopne cmc dec push popf jge rcrl sbb insb test pop xchg and inc jge sbb pop out sub add (bad) mov cmp orl stos lea sbbb and jns (bad) loopne or mov rcrl insb pusha or add fs pop push ljmp mov cmc push adc adc inc (bad) and fwait add imul arpl or repnz jns adc in inc sbb (bad) mov lods dec test cmpsb cmp (bad) je sbb push dec adc test jl pop mov mov or jl mov sub movsb in push mov cltd push sub in test imul mov pop add cmp inc cmc inc (bad) adc sbb cmpsl mov mov clc mov xor mov call popf iret mov push lods mov cmpsb push inc pop scas mov xchg in aaa (bad) test and cli adcb add adc sub push test jnp fsubrs orb (bad) mov add scas sbbl (bad) jns ljmp mov (bad) arpl test es and mulb cmp sbb pop scas fist cmpsb gs mov sub cli imul pop push cmpsb pop std or dec cld outsb js jmp jle push mov cmp or sahf or dec jmp mov mov fistp push mov inc cwtl lock sti out cli xor xchg lods jnp and sbb dec test mov les xchg mov jle add ss xchg xchg in std int3 insl aaa into aaa ljmp mov lods or cwtl and mov (bad) mov pop comiss inc icebp sub clc roll dec pop add and mov mov call mov dec cmpsb and xchg mov lcall fs stc pop imul mov outsb sbb cmp and push push iret sub mov sahf data16 or (bad) mov xchg mov mov add imul xor mov mov mov push int and add dec pop and insl sub aam hlt sbbb (bad) aad sub mov sub std and popf insl sub arpl testb xor fs gs sti sahf sub sub addr16 xchg mov cmp inc jno mov test xchg imull (bad) test xchg lcall outsl push aas sbb push or (bad) xor sub jo jne loope lods cmp imul sbb add sbb push push arpl or cld jb out imul sbb add int icebp push xchg mov pop sub dec jo and jns or nop and or sti or out jne inc dec fs xor sbbl sub stos add pop and sub and das cli mov loop mov sub mov xchg lret cmp aaa add out sbb and movsl pop int3 dec inc xchg stc pop aas sub outsl pop pop pop jle loop xor cwtl into ljmp jns popa push in push lret push pop fisttp xor cmp leave pop sub enter inc mov mov test (bad) mulb mov xchg cmp adc movsb loop outsb xchg js clc xchg out mov stc mov decb inc cmpsl push aad mov repz lods push add mov mov cmp popa push lret or pop add je pop or cmpsl aaa in dec jle jbe jle mov adc into lret cli sbb pop push xchg pop push mov popa scas iret sti loope bnd addr16 sbb add popa pushf add ret jl sbb test nop (bad) adc jno jp xor sbb (bad) das xor and jns push (bad) push aad mov ret add fcom clc in xchg add jle sub mov out cli mov stos rcl xchg jnp push les cs cmp inc mov jecxz sub mov scas sub test add push mul dec xchg rcl push adc popa xor fmuls out jmp sbb xchg ja repnz inc in outsb lahf push inc ss test dec lods jns push mov mov out gs cmp pop cmp add mov es outsl cld (bad) enter or inc out addl adc cwtl into cltd mov and ljmp pusha or andl insl mov popa bound jecxz adc mov lds insw or inc or pop std add dec pop sub (bad) mov and mov xor bound in xchg sbb sbb sbb adc or or hlt enter dec jmp and inc (bad) sub shll sbb clc popf mov lock stos mov sub popf push jmp popf xor stos cmp addr16 mov inc sbb push xchg ja mov sbb lock lret stos mov mov mov jl cmp test sbb mov pop movb popa mov push insl rcrb add jge test jno xor call xchg stos push das pusha pop xchg lods fbstp repnz sbb cmc mov jnp fs jmp out addr16 gs jg iret push shll aad lds cli adc cld mov adc add mov xor je pop fistl add fnstcw push repz inc inc add add out inc pop sbb mov (bad) shrb dec push inc pop push push icebp fs push or inc sub scas and out daa mov adc sbb xchg repz xchg add pop sbb gs sbb mov sub popf cmp and xor mov cwtl xchg jle mov mov inc int xchg in adc ret rolb pop bound pop xorb mov push xor push push sbb mov xor add sub mov sarb push cmp f2xm1 cmp cmc mov (bad) (bad) stc mov (bad) cmp dec dec scas loopne (bad) lret add push and add ret jl cltd inc fs enter jno les push repnz leave outsl push insb cmp adc test (bad) push test pop pop loope (bad) sub add movsb jl mov mov cli pusha mov shr or add aas or adc pop inc dec inc loopne dec pop mov sbb hlt mov ficomp xor and in add lods pop pop mov sub test std inc pusha iret add loopne mov daa lret out adc inc mov (bad) sbb pop cmp push cmpsb sbb cld icebp (bad) repz cltd cmp xchg repnz add push lods loopne mov mov repnz dec adc push xchg sbb inc jle in xchg int3 and out fdivl jmp fnstsw jbe mov xor (bad) or sub mov imul in out sbb ss ja push adc std sti xor xor arpl and lds xchg cmpsb jo and jne enter (bad) notb sbb push xchg push push jbe data16 lods xor pop push cmp bound xor mov xchg pop jbe in mov test pop adc out out jno imul cmpsl mov rclb int mov cmp in mov lds shrb lods fnstsw in arpl adcl out xchg fwait sti fidivr sbb int cli or or inc jecxz lods mov and pop xchg xchg jp pusha cmpsb push adc hlt xchg mov fidivr push xchg inc (bad) push sub push nop mov ret sub lahf lret dec mov and int icebp scas push xor cmpsl pop dec xor push gs (bad) mov insb mov jmp pop in push add pop cli jns (bad) out mov adc mov enter aas js xchg pop icebp pop sub add jecxz cmp xlat xor (bad) out mov loopne int3 scas rorb adc add xlat inc and in in add and pushf push add or int inc push dec pop and xchg cwtl je (bad) and jns push push push sbb sbb and out jne push pop xchg push xor cmpsb fwait push adc mov (bad) xchg push mov fst xor jl jne and and pusha sbb ja je mov pop jg loop xchg mov jp push add ret clc cmp cmp stos sbb mov repz and insl (bad) popa or inc sub ljmp hlt sbb xchg scas sub stc je push adc xor scas arpl add cli or sarl or inc out pop lcall cmpsl mov rcrl cld adc in sbb lock frstor push push jp insl inc rcrb sub ljmp jp sbb adcl pop data16 xchg dec dec cmc fistp ja (bad) (bad) and daa cmpsb or or (bad) or out dec mov mov sub adc mov enter add mov scas fwait pusha push push pop sbb sub sti or adc movb inc icebp xor jo lods adc mov and jo jle mov (bad) and xchg pop push rorl lds or and push sbb ret cmpsb (bad) mov mov jb dec mov push sbb popa repz sahf fcmovnbe rolb lods xchg (bad) (bad) repnz xor jo sub mov iret jmp push add scas dec xorb jb jecxz push into aas sub inc xor hlt mov aad pop adc jle jno imul push (bad) notl mulb pusha aas xor mov std cmp mov aam in das bnd mov jge xchg loope stc jge cmc xor sub repz (bad) push imul jns add pop (bad) test sub jns cmp pop sahf mov jge sarb add repnz imul aam (bad) pop mov rcr stc push pop flds fdiv or adc inc push push les and or dec fwait pop pop call stc movnti cwtl incl dec aad sub fsubr icebp in sub pushf mov jge lods gs popw push dec and lahf xchg jp pop ds sub subb andl sub xlat (bad) lock stc dec aas adc mov (bad) xor and pusha push add mov int in leave xlat xor jl jl sub adc push sub pop pusha or cmp or sbb adcb cmpsl xor jge (bad) mov outsb jge or rcr add push sub inc xor aaa outsl lods out dec mov fs or xchg loopne mov mov sti in push std pop adc and test fs dec mov cmp adc pop or es fs or sub imul mov rorb push xor out jmp push out inc ljmp push movsb (bad) enter lods sti int3 lea int movsl inc in pop mov enter mov les mov gs xchg xor iret int3 cmp sbb stc out jae jb lods pop push inc outsl test outsb mov xor dec into imul mov xlat loop xchg into test aam xor jle int3 fisub (bad) xor pop out xchg fnstcw int3 popa push movsl in jbe loopne pop inc cmp mov mov push (bad) xlat lret je cld (bad) mov pop bound (bad) mov dec in push (bad) aaa cmpsb and ja daa push pop cltd movaps ret xchg jns jge adc jb iret ljmp ds jae icebp and push push mov adc cmp xlat inc lds fwait pop pop adc xor jecxz and inc xchg dec call imul sbb xchg outsb sbb mov mov xor xlat sbb mov sbb adc fmull xchg cmp (bad) xchg loope fistp fld adc fcoms in xchg imul imul mov daa pop xchg fnstenv jb inc sbb aas push addr16 xchg pop std int xchg loope movsl push ljmp imul cwtl mov fidiv dec out sub adc enter mov (bad) clc cs fiaddl and pop push repnz or std xchg cmp clc pop mov lds add push xchg insl dec insl loope mov dec fdivrl add fstpt test push push xor (bad) mov push loope ffree mov add movsb inc ret repnz push or or mov idivl hlt ja xor xor sbb adc and inc mov shrb fwait adc xchg push jmp adc or int clc sub and xchg (bad) mov gs mov lret cmp cmpb jle,pt lret sar mov ja mov dec and rdmsr push incb inc or cmp push pop jns in xchg fcmovnu cltd scas cmp or push jno jne mov cmc and scas sarl inc mov scas pop mov and movsb int3 sarl lret test adc int in inc loop (bad) mov mov stos cmp fisub call jmp not in adc adc mov ret xlat je cld lods enter in or inc scas into mull mov push orl mov mov daa xor adc xor sbb les lcall add mov sub (bad) and adc cmc mov jne icebp in cmp xor pop jl inc cmpsb cmp (bad) cmpsl out sti inc ficom in cmp int sbb mov mov out dec and sarl cld fiadd cmc dec mov sahf inc neg call xor insl push mov push inc out xchg stos and xchg fnstenv loopne lods and mov xlat loope and stos add adc rcl pop test lock aam mov mov ljmp xor mov lea xor repnz mov pop jno in push cli in ss mov pop xor ljmp fidivrl sbb cmp adc shll shrb in pop dec cli insl sbb pop sbb testb dec cwtl mov orl mov (bad) jle inc fdivs test nop repnz mov lahf into cld mov xchg (bad) xor cmpsl fmuls test mov or mov insb movsb and arpl mov (bad) xor xchg mov mov jp or mov or sub mov pop lcall mov cmp mov xchg jge add xor jnp cmc jl adc iret mov or adc test rcll (bad) ss rorb (bad) mov ss mov inc movsb mov (bad) xchg call pop or and cmp lods loop stos sub and cmc orl jp sub fwait aam push out fcomp pop xor mov jmp xor mov cmp add xchg enter (bad) jge test pop aas and sbb fwait jnp push stos mov jg std fmul mov test nop mov push popa mov cmp out mov je imul push jne xchg lods xchg inc jp imul ror mov outsl and (bad) lahf rcr outsl adc js jnp test std pusha ret jnp enter mov cmp xchg cmp sub repz mov sahf test jb xchg lds xchg fsub out add adc mov xor mov jbe arpl sbb rorl mov or shll jo test mov ret sti hlt or loop mov pop in add out ja (bad) jae enter orb mov ja and in pop out loopne jns push js xor lcall sub cmp stos inc xlat je mov push mov pop dec sbb inc shll pusha hlt push ja xor mov jbe cli fistl sub rolb fwait mov push loopne jmp sbb xchg scas ljmp int3 lret ret loopne hlt jnp inc sahf inc stc popf fucomp or fcomi aam int3 sahf sbb mov jo inc jl cltd out jmp dec fdivl (bad) cld mov push scas (bad) in sub test push add jge jg xchg cmp adcl mov imul inc and dec fdivrs adc jns aas lret jge es insl stos mov aam lret push mov rol inc scas add cwtl mull cmp daa and bound mov pop clc shll xchg cwtl jbe and xor or in lods adc and adc subb fldl push mov test xchg sub loope,pt or dec push rcrb shr pop imul xchg push cmp sbb jp and popf adc lods decl adc pop ret mov xor inc (bad) pop xor in call (bad) out iret outsb aam stos fdivl fldenv adc leave decl fistpl imul jbe add imul mov dec inc jb xor stc lock lret xchg idiv mov sbb (bad) sbb xor jbe popa jo lret add jo lret xor cmp lcall shrb push jns adcl mov mov dec cld addr16 mov bound adc cmp adc aad (bad) sbb arpl sbbl and shlb hlt adc push hlt in fwait lcall mov lret inc inc ljmp mov push cmp bound pop mov imul test scas xlat lcall inc add fisttp cwtl div lds inc jl jns repnz jl test mov ss add int jl popa add xor loope xlat sub xchg in pop sahf add pop jo std (bad) pop push pop mov dec fisttp jp mov lahf icebp divl outsb in fwait lret sub inc (bad) jns mov ja mov leave cmp jne xchg jb cmp ficomp aas in push jmp xlat xchg push fdiv into into mov pop jge pop lods popa (bad) or lods cmp mov mov xor inc lea (bad) (bad) jge icebp subl aas stc mov fnsave (bad) fxch out loop mov ja lea das pop xor call shlb mov jmp jg mov adc lock cmpsb push (bad) push call or out mov inc js add (bad) push push cmpsl xor xchg mov repz inc add arpl movsb dec ss push push aam mov mov imul sti das jle pop fwait leave rcl xchg mov shrb add (bad) dec fnstenv (bad) sub inc hlt mov jbe fdivrp inc or mov fwait fwait and pop dec in pop and inc xor add adc cmp ja xchg fildll (bad) test (bad) adc jne jl cli adc outsl cmc or adc icebp cmc loopne aaa popa cmp into int3 fdivrs cmpsb out in mov insb xor lret and lock jecxz clc clc movsb out rolb sbb mov out sbb clc jnp jno push (bad) mov mov xor pop fwait insl and movsb push fisttpl (bad) loopne loope data16 mov adc dec ficompl cmp jne xchg cmp icebp (bad) xchg ljmp loope xchg into out test cli fimul xchg lret xchg add mov shrb lea inc pop push popf fiaddl cmc insb dec xchg movsl and sbb les arpl xlat cmp repnz decl fidivl push jbe insb push push icebp aas or cld imul cli xchg jns inc cmpsl push movsb adc adc je fdivr pop xchg inc mov jnp or addr16 mov aad push lret dec mov aaa mov enter adc adc ret js and inc add cli xchg dec mov rorl sti sub (bad) sbb sbb movsb add (bad) retw cmp leave cs pop lock dec out inc es (bad) cmpsb jp stos pop mov (bad) stos xchg pop ds daa addr16 loope sub sti mov ljmp ss ds mov pop or shlb js xchg aas pop xor outsb or jo jmp testl jmp mov pavgb cwtl jl mov xchg in lret sbb outsb ds fcmove mov mov push ljmp lods and dec ds pop pop daa and scas jo and inc push pop sbb inc mov sub push cmp xchg std shr adc mov mov mov add aam inc push fldt cmp andl test aam add scas sub stc fwait aaa and das pop xchg push movsb xor lret arpl cli aad pop pop jp ja sub ret pusha mull sub jno pop test sub sbbl jb arpl loopne inc sbb enter mov cmc fiaddl dec stos sysenter lea popf xchg rcll inc xor pminub xchg (bad) push (bad) (bad) adc mov mov jle shll pusha out into std or mov test mov test inc lods bound sub lcall cltd xor nop sahf pushf sbb movl addl cmp dec ret mov es into stos or mov mov ljmp pop ficoml sbb xor mov or mov mov push sbb push push jl frstor xchg fsubp shrb mov js (bad) je test jns nop push cld shrb (bad) xor mov mov js xchg lret enter fcmovne cmp sub xchg mov push dec pusha jbe push dec std cmp inc aaa jp int cmp adc nop int3 (bad) xchg pop pop xlat inc jb xor aad inc gs push je outsl dec fnsave fdiv aas jo imul sub mov mov mov cmpl sarb or push push pop adc rcrl push inc and xor cltd or mov cld mov adc inc insl push scas iret mov push lret cld sahf icebp stos lods insl and jbe mov rclb xsavec ret cmp cmpsb rorl add ret and incb mov mov scas sbb jg mov mov dec sti (bad) lods jg ljmp pop sub add xchg test idivb mov ret xor mov add pop dec pop adc ret jns aad mov adc sub bound rcll movsl xchg pop ja or shlb push outsb cltd mov inc pop add sub xor sti xor xchg mov leave sbb sub mov loop add popf lahf insl loopne in in icebp stos xor jle (bad) ja push addr16 scas stc rol mov scas inc and les ss jno mov pop cmp lret insl sbb adc inc jne fucom dec mov add cmp inc stos cmp mov mov (bad) or and add lods push mov cmp push loope test or mov icebp sub fidiv scas lds inc mov xchg fcmovbe cmp add in jae aaa jno imul daa push loope xchg inc (bad) pop or ret imul mov fidivl dec (bad) mov or mov adcl frstor lea add mov add ljmp out jb xchg pop adc cmp and (bad) pop pop add xchg add mov stc ljmp xchg popa repnz xor pop fdivp fnstsw fbstp (bad) (bad) sub lcall mov (bad) enter jne pop xchg xorb xchg (bad) mov xor popl cmp repnz cs adc movsl mov lret jns mov (bad) fwait gs pop and dec movsb push popf sbb or push push ficom cmp lods aaa jns pop sbb adc jbe int fstpl movsb test add pop (bad) int outsl rorb inc sahf pop clc stos pop add mov popa sbb adc movsb push sbb pop out rcrl iret sub mov lods bound jg adc jl cli push cmpsl mov sarl mov aad mov ljmp (bad) or push lret or jae jae test mov shl or adc cmp inc sub rcrl adc das xor inc test push fs inc (bad) inc js test test xor adc jecxz stos cld xchg jnp xor movsl pop fucomp fwait mov aam (bad) (bad) push jp mov push out in push hlt notb loope cmc cmpsl pusha and popf inc bnd sub jae ja fs stos (bad) iret cmp xchg leave xor fisubr add call lea pop mov pop sub xorl nop jg div push add add roll add adc (bad) mov or xchg ds lcall lret dec fwait inc loope sub shlb mov and movsb sub imul mov rolb add mov mov pop mov or xor in ficom lcall popf cs icebp js sarl lds cld int3 mov into dec stos adc pop out fisubr xor mov sbb mov stos (bad) es and test mov pop dec das or fwait cltd inc mov fcmovbe xor daa push aad stc jbe or adc sub mov pop xor xor test jmp test cmp cmp lret mov sbb sbb fnstenv pop jae pushf dec leave cmp sbb out xor mov mov popf pop mov fisubr inc sub aam and fwait pop mov sub jg dec in cmp dec sarl pop xchg mov cli (bad) cmp xor add pop lcall mov ret sbb push stos mov mov inc test push mov movsb loop mov and psllw mov xchg xor das loopne pop aaa movsl test dec sti repz push js mov scas mov mov xlat and adc mull inc mov adc into jmp loope lahf jne movsb xchg sbb test push int mov dec cmp mov lahf pop and mov mov shrl push cltd lods cmp imul push add pop mov inc jno push xchg orl (bad) mov int3 cld in ror adc sub add cmpsl imull andb popf add addr16 aas lret iret (bad) or adc jmp jge imul into jmp into inc xor leave inc faddp ret and cmpsl inc out in mov iret pop xor in lods in in out jl sub (bad) cmp mov xchg xor (bad) xor icebp loope movsl xchg clc in pop sub or gs cmp dec in xchg cmp xchg movsb lea shl insb xor insb mov and enter jmp (bad) lret popa mov gs jg clc jle inc xchg lods daa iret pop cmp in xchg arpl xchg cmp cmp popa gs popf movsl adc cmp sub jge out lret jmp stc dec cmpsb shll pop leave dec (bad) mov out add jmp clc (bad) lret mov scas shrl dec and xchg daa pop or fs xor scas xlat adc adc test ja mov ljmp cmc ja pop jecxz dec or out add cmp mov adc out xor mov inc fstp or sbb test adc aam and push outsb imul and xchg (bad) (bad) inc or push les and leave sbb add mov call cmp data16 adc int3 push cmp push out paddd repz movsl mov gs mov leave jmp inc jl lods mov stos ret jo gs lea pop jmp cmp and sti xor roll lock out adc sub (bad) inc dec rol arpl xor insl and adc fstl or negl xor enter jl in mov mov adc sbb bound mov lcall dec test pop dec ss ja xor xor xor inc dec xchg iret fs sti xchg dec (bad) fstps inc and xor mov mov sahf push mov orb cmc shr mov adc xlat (bad) xor pop inc push insb notb push sub enter adc out xchg ss data16 test push lods scas adc test hlt (bad) dec push mov repnz jo jb cmpsb push inc mov push lret daa in adc cld mov xor push mov (bad) fidivrl and mov mov sub add xor subl or xchg mov jmp push pusha push mov lea mov addr16 pop or cmp out cld fdivrl out ud2 arpl std mov loop hlt xchg inc ljmp adc cmp sub cmp in pop sub arpl inc sbb jmp jge test (bad) sub lahf and sub repnz stc xlat sbb mov rcrl outsb pop jo idivl outsb pop ret sbb movsl dec scas mov pop icebp sub mov dec and aaa (bad) sbb sbb idivl test loop inc inc xor loopne sbb push jmp ror push or push jns cmc pop dec push mov and lods xchg arpl and xor test and insb mov repnz mov je iret popf mov (bad) pop mov addr16 fwait dec mov lods lock jo dec and mov xchg aam ljmp repz les push push sbb pop xchg sarb pusha jno jo roll inc xchg into jg add push loop outsl loope andb movswl popa adc xchg mov jmp insl and int mov clc in ljmp adc mov lock sub pusha aad dec out fwait jle ds or jp or cwtl xchg cwtl andl fisubrl jne push cmp icebp rorb jecxz,pn sub pop enter mov pop int3 negl or orl add sub mov (bad) lds adc addl push adc xorl shrl aaa or mov mov pop jae add lods jnp in mov shrl hlt jbe sub dec dec imul stos roll jle xor dec in inc ret or enter sub (bad) xlat out jle inc lret enter es adc lret scas mov (bad) psraw xchg into mov jns adc jns (bad) mull cld movl scas add add fstpt pop sbb cld mov adc push movsb cmpxchg mov fstpl sarb mov int3 cmp lret fldt sub pop fnstenv movsl je fwait xor xor mov (bad) lock push push mov sarb mov and and and leave mov sub rcr pusha inc sub sub mov aaa mov shl mov into stos or movsb (bad) aad jb fildll fsubr mov in jb mov jb cs push mulb in dec fs jns mov sbb mov imul lcall or jne mov cs int je mov push add dec popf stos add test jbe nop xor out lret dec call cltd pop sarl das in jb xlat ss pop int3 jge psubusw mov cmc clc or dec movsb jnp jg aaa daa adc or scas stos fistl ljmp or inc cs into bound in scas pop pushf or mov sbb imul lcall insb add js xchg jge or gs popf (bad) mov mov popf rcll xor js pop or mov or push pop stos and cmp or icebp cmp adc push mov and add sub (bad) mov sub (bad) xchg xchg iret xor mov push lea in in and push sti push or cwtl daa mov or dec or jae in int3 mov push pop je mov cltd xchg call (bad) jge xchg out jae js or mov mov adc roll adc cltd insb adc xchg xor dec jno and push push sbb jp jl call gs xor je sti adc cmp fbld pop cltd lcall lods lret pop pop sub shr pop cmp ljmp push insb fwait (bad) popf adc mov mov (bad) (bad) or fdivl (bad) insl jnp test cwtl faddp cwtl sub (bad) std insl xor fs pop inc mov inc inc xlat ja loope xchg divw or test and inc pop inc jp (bad) adc xor movsl repnz cwtl frndint insb dec fiaddl cwtl decb and repnz leave jo xchg mov xchg xchg jmp shrl sahf aam mov shrl das jg push adc adc movsl js les pop movsl sarl clc cs repnz cmp out or rcll divb imul mov push push push push pop mov aas (bad) hlt lret fxch sti ret cwtl mov ret sahf xchg jge xor int3 and jmp xchg fsub in out cwtl adc xchg cmp and ret jo fs (bad) mov pop addl xchg lock in clc mov data16 les push cmp orl jl push outsl out cmpsb enter cs pop push andl test notb fildll cmc sahf ljmp adc or or sahf push pusha or (bad) xor pop jo leave test jnp loop cmp mov sahf lock sbb mov pop mov addr16 test lahf (bad) (bad) enter cmc divl (bad) push nop clc xchg in scas in or es clc rcrb enter mov inc lods mov out cmp jne imul orl adc xchg in icebp adc mov movsl bound aam fucomp mulb jecxz out repnz popl imul lret pop dec dec outsl adc (bad) xor (bad) rorl and aaa arpl mov push ss fld1 cmp pop dec das stos jnp outsb push movsl ljmp rclb loop das call mov push push movsl imul das cltd push (bad) pushf ljmp push cmpsl xchg iret dec ljmp in call push and pop xchg lcall hlt jg xor outsb add xchg xor out stos aam xor popa and call and outsl xchg push (bad) dec leave scas aaa pop nop push clc call mov adc push (bad) in add gs fwait mov adc hlt jp std cmc insl nop and test (bad) mov push pop cs add mov ret sbb jge stos xlat stos mov stos push inc je lret lret stc adc addr16 push test push std jp dec push mov pop xor cs push ljmp mov and xor (bad) push xlat dec jmp jbe push push adc out bound out fistl dec fnop push adc mov (bad) jb lea arpl push sub xchg data16 xchg fisubrl push mov xchg popf pop ss rcrl push dec cli shll adc clc jmp sbb jl stos ss gs fmull mov dec mov xor and scas and dec or mov mov into out cmp sub or fnstenv ss bound or shlb mov xchg ret movsb pusha mov and mov imul movsl ficom pop push rcl mov arpl xchg jo or mov mov jno js aaa movsl out dec ja push mov push push jns mov mov mov outsl mov cmp insb (bad) jle (bad) aam fistl repnz mov mov push fisubr (bad) push mov mov arpl inc push les fist xchg mov (bad) into sbb rcl cli outsb or mov jo sub xor stc data16 lea (bad) xchg das xchg mov jbe repnz mov popf out repz adc and stos lock (bad) into sahf mov outsb lock jns push ffreep xchg adc mov xchg push das les mov cld enter test (bad) mov cmpb es xchg inc cld addr16 das lds outsb inc dec mov xchg ret and adc pop lds push pop dec imul pop jo adc das pop mov inc push jne,pn jp adcb pop xchg inc xchg (bad) aam pop mov mov arpl sbb fstl xorb mov lods sbb js inc pop jnp in cwtl decb push jmp ja jno sub push push test icebp xchg hlt das aas adc repnz mov dec jno jne sbb lret inc xchg inc xchg xchg sarl iret into inc std ror mov (bad) call movsb pop loop cmc push push sbb aaa xlat lds mov push je fsubl js add push dec iret (bad) sti sub das dec cmp call mov repz js out mov les iret and pop pop sbb sub stos mov mov aad jp stos cmp iret ret adc push pop ja test outsl dec add xchg add xchg inc js inc ljmp lcall ljmp push enter ljmp imul pop mov push adc xchg es push arpl ss and int3 ret add push xlat sarb (bad) je add imul push mov push decl pop insl sbb push dec mov in sbb lret fnstcw fcompl outsl adc push xchg add dec pushf add xchg add adc and mov notl jno lock daa xor pop lds cmp sbb push fimull negb sub push sbb mov (bad) repnz xchg shrb outsl imul mov (bad) icebp stos inc add sbb mov add (bad) mov xor mov test aas sub or outsb (bad) lret inc mov lret in cmp jle iret pop inc gs inc (bad) mov mov dec push jle inc (bad) mov jg jno repnz mov add adc idivb dec scas fcoms pusha ss pop nop and and pop jo stos mov pop lcall in bound (bad) mov pop sahf stos pushl and inc mov and or das jl push mov xlat dec and popa fsts jg adc stos jmp jmp xchg punpckhbw mov cmp sarl xor ja jmp jmp sub dec mov inc adc pop cmp cmp xor (bad) stc imul push inc jns mov je out mov xor pop cmpsb inc aam push (bad) leave (bad) mov sub mov nop mov aaa leave mov aas mov repz enter inc inc push jnp clc xor push pop push add mov imul hlt sub adc inc mov sub test cld lods mov cmpsl sarb ret xchg push or mov mov mov mov push mov xor jae lods or adc addr16 out icebp jge dec hlt aam mov sub and fcmove ficoml pop stc into mov inc pusha cli rcrl hlt lret insl or xchg cmp outsb testb fstps pop (bad) into loope pop or ret fs inc sbb jmp push pop ret mov sbb jmp insl mov pop call cs (bad) test shlb mov mov pop dec add cmpsl fwait test and and cmp das sbb ds enter or daa jl mov sti cmp movsl pushl mov xchg jp jbe ljmp ret test aas insl fstpt pop (bad) ficoml test scas stos das fdivl stos mov ljmp ret xlat mov xchg xchg xchg scas mov into scas sub add or lret sub xchg sbb mov push das out dec outsl out adc xor hlt adc push ja fstps sbb mov cmp in fadds xchg mov fisub and inc pop inc dec mov stos cwtl lea jl test and (bad) push popf rcrb clc adc stos or fistp mov movsl gs push in fistl fsub in mov scas sub fs add cli xchg pop ljmp int cmc mov pmullw addr16 sbb jnp pushf mov test inc pop push pop pop mov xlat insb scas push push mov sbb mov jle push or mov dec pop incl push mov pushf pop jb mov cmpsl rcl add push lahf cmp jno lret repnz and shrb imul cmp loopne pop iret pop cmp pop (bad) mov js fisubrl jae pop int or aaa andb sbb cltd add ffreep mov mov sti hlt lret push aam pusha and sub in and mov mov ficompl inc (bad) int3 dec icebp lret add lahf push cli (bad) fcmovnbe sbb sub and lret pop jle and adc xor jb xchg and jae pop cli js lock enter fs (bad) pop aam mov stos pop mov ss inc jge lret push and push dec adcl inc out xor idivl rclb xchg sti mov int nop mov insb (bad) ret mov addl arpl int3 sub clc sbb aam fwait mov xchg idivb pop cmp or xchg dec lahf jecxz repnz ret sarb jmp insl mov inc cmp fwait (bad) adc ja dec cli sub cld cmc lds daa scas adc add shll push sti data16 out mov mov into jle clc adc movsl fs shr xchg dec ljmp inc xchg xor inc push jne cld inc sbbl fidiv and mov xchg je add decl mov xchg in fdivrp adc subl sub nop sbb cld and mull test cld (bad) iret and in and sub mov outsl mov divl add adcb mov imul in sub or push dec fwait ljmp jge or nop in pop pop mov pop mov (bad) mov into iret cmpsb (bad) xor or push mov je mov adc mov aad jbe lods daa subb (bad) bnd pop ljmp push leave imul and pop add (bad) sub jle sbb mov jecxz sub xchg pop mov lret jecxz jb adc scas push scas mov inc stos cmc insb lret pushf cmp xchg mov pop mov je and or shr pusha sub jecxz or popf sbb dec push pop push xchg adc and mov sbb ret inc inc and push cltd pop jmp xor loop and mov cmp (bad) js mov das hlt popa bound (bad) scas xchg clc adc dec mov nop mov fnstenv sar jg cld push cmp jo xchg fs clc shr xor push fs insb mov sbb mov jnp jno andl (bad) div fs sbb jne movsb mov pop das jl lods adc stc mov xor mov jae jb pop subb out fdivrp enter pop mov test mov push adc arpl or jecxz mov lea mov nop cmp or add xlat andl pop hlt push test lea imul stos mov push xor loope mov xchg mov xor (bad) sub push cmp in popa popa push pop (bad) repz mov pop dec inc popf fcomi imul inc xchg in sub mov mov jno cli out out jmp dec insl into inc pop loopne jl sbb ljmp xchg iret jp adc aas pop xchg fs or push jl data16 mov imul in adc int sub dec xchg fcmovnb sbb lea jle (bad) gs mov (bad) xor xor cmp (bad) pushf lahf xor push ret lahf xchg add mov mov shll in push xorl call sub or bound repnz sub leave jne mov sbb sub (bad) jno lret out mov xor or es les sub pop xchg adc xor aaa movsl sub mov shl jne jne mov mov (bad) cmp jnp xchg notl in aam mov stos cmp nop outsb dec mov xchg lea jmp xchg repz dec pusha in les push jle push xchg push inc or or in dec jge pop dec pop push sbb add cli or inc dec out mov xor lahf ja jle ret cli lret lahf pop inc push daa inc dec jne movsl inc inc add xchg jne scas and sub adcb mov or ret pop mov inc lock dec imul mov mov dec sbb loopne adc outsb cmpsb sub sti cmp fidiv sahf adcl mov jbe xor inc jbe push frstor push repz sbb adc cmp adc mov sbb dec dec mov out jne sub adc aaa fisubl push cwtl xchg and and cmp fdivp push sbb shrb lods sub dec xor cmp ja loopne dec sbb imul cmpsb sub mov leave pop lods lahf xchg and xor jl aad inc cltd lods incb dec sahf jmp push mov and xor sahf dec lods (bad) repnz push in xor pop loope xorl subl adc sbb or xchg in je jle js cmp inc call into inc into xor cld add adcb fnsave and aam in push inc jbe add (bad) mov or fs imul stos lea jle sbb fsubl add mov jle xor mov rorl inc pop ret xlat cmp into adc push fs hlt xchg (bad) decb out outsb mov jg xlat push (bad) scas outsb pop test push xor test movb push mov mov ds xlat jmp jno push (bad) imul ss cmp xchg jle add sarb sahf pop add xor mov sub test pusha orb insb dec add push cmp sub test iret sti je fdivrs arpl xor fildll mov loopne in pusha mov ret push or cmp lods fistl icebp fsubl jb and and xchg data16 divl es test test pop mov out jge and dec stos add adc push stos push adc pushf adc rolb sbb test sub xchg xlat push mov push jg inc cld mov mov add push cmpps inc pop xor mov cmc sbb (bad) cmpsl data16 imul and fdivrl jle push es (bad) jle cmp xor mov faddl cmp lods aas int3 xchg mov lahf sub sub sub fstp in jp pop xchg mov fwait out sahf (bad) cli push sub iret sbb jbe dec xor (bad) xchg loop mov inc xchg pushf mov mov mov xor xlat lods ficoml push xor loop mov xor pop sub mov mov mov insl (bad) scas mov mov cmp in ljmp js mov cmc scas adc push push push mov pop adc sub loop push jo push dec mov dec out int add inc cmp outsb mov mov pop aam xchg fs cmc jne pop lahf jb inc cmp imulb and fs xor fsubrs lea nop sbb pop cmp dec cmpsl add hlt sbbl inc dec in xor cmp lea cmpl mov add sub fbstp inc (bad) mov xor cs test mov fildll sbb ja xchg js cmp lea mov push daa mov lea cltd loopne cmpsl mov lret loop je inc push xchg and and sub ret outsb sbb rcrb push mov hlt insb push pop iret icebp out idivl fs sub mov mov repz jns mov pop lods daa mov add lea rolb jp ss mov int push mov arpl mov pop icebp ss aas xor aas (bad) jne mov inc cmp sbb mov sarb or dec mov or data16 mov pushf inc mov and fcoms push inc pop movsb jmp mov jmp in clc sub add jo fist scas aas xchg frstor mov sbb xor (bad) cmpsb inc sbb xor push mov sbb sbb mov je lock add add jns mov xchg cli mov dec les enter in cwtl insl cmp mov dec push inc dec jl push sub xchg clc idiv jmp insl leave inc or xlat jmp dec pop mov cs or push out adc ds gs push mov mov mov jg mov lods ficom shll adc stos mov dec stos aam insb das (bad) aaa mov xchg mov dec lahf adcl inc in (bad) cmp jbe xlat inc push inc js and fistpl stc jmp sub mov push push and cmp mov inc and mov add pop and push mov repnz test lcall stc xchg xchg hlt mov or fsubp jnp push movsl push adc mov and dec insb and push push (bad) jp pop cmpsb sbb xchg arpl lahf jbe movsl (bad) icebp rorl pop lcall cs xor in sub in in scas xchg xchg mov jne aas faddl xor sub adc mov jge loop sub xlat test xchg jge jmp jo jmp gs shlb xchg jp bound ds mov fwait shlb pop (bad) repnz lret aaa mov inc es mov inc imul push mov push hlt shlb sbb mov mov xchg aam adc (bad) or lret sub movsb cmp inc popa sbb fucomip xchg pop and jne mov (bad) pop xor (bad) mulb icebp (bad) jno or cmp neg jns,pn push loope outsl xor dec jae mov inc cltd aaa pop in push cmp negb xchg out dec jge pop mov movsl sbb add dec pop or loope mov mov decl xchg add jne adc jmp or in or dec clc jmp dec dec push xorl jno nop dec lods sbb or js mov xor pop push inc test sbb adc adc push pop cmp call fistpll or pop jae pop pop inc ds (bad) mov ljmp pop clc add ret ret sub sbb gs and push xchg jl test test jb (bad) idivb and xorl mov xchg add lock add mov sarb or lcall adc xor (bad) out jne mov sbb movsl movsl daa stos mov hlt pop dec aad inc int push aaa fmull mov cmc iret jmp clc mov push push fbstp mov mov jmp mov xor in cli mov bound sub or jbe adc sub movsl jl jno call dec cmp xchg lock xchg aam popf pushf inc jg pop jge inc and dec cwtl mov icebp mov push or jo mov and xor test iret dec dec mov fsubs fiadd shr mov movsl stos mov iret stc dec lock inc int xchg in movl push sti cmp in movsb mov mov clc nop sbbb clc (bad) adc jb test inc sub or mov out sbb mov or not push xchg mov (bad) sub cmp outsb add je mov in jge sbb outsl mov pop adc cmp inc stos insb dec cmp push sti jmp shrb push clc aam mov push sbb lock fisttpll xor push push stc dec sti mov (bad) adc or scas xor incl sub dec cmp insl cwtl loope xchg negl jnp (bad) xchg lds (bad) cmc in mov pop fild into and lods pop pop enter (bad) roll push push cld xchg fstpt cmpsl add test cmpsl mov sbb lret je aas adc mov das dec test sub stos push lock add xchg push sahf stos xor xchg mov dec arpl aam add sbb test xor movsl ret xchg popa xchg inc dec xchg mov (bad) aam xor cltd test jbe iret in mov jge mov mov in mov mov pop jecxz pop jge outsl jge in in lods mov xor cmp sbb jg call and mov shrl sub into cli jae ja sub pop ret push adc (bad) push pop adc popa jo dec jge push aam bound cltd mov sub dec push dec test lcall stos je or push loopne jne mov or sbb jne add fldl inc inc cmpsb xor subb clc pop xor push dec mov jnp decl cmpsl rcrl inc push add pop clc dec lret cmpsl xchg movsl loopne jnp sub es dec xor dec inc lcall (bad) dec loop push dec (bad) mov push jecxz flds xor push jbe and mov lods es cwtl inc add int lea lods test idiv jns mov jo stc (bad) sub daa rcl aaa fucomp lret jo xor adc inc inc pop cmp f2xm1 adc xor (bad) fimul dec push xor lods jb shrb fisubr loopne lahf inc cltd mov inc and and (bad) push hlt in adc or pop add je inc movsb and xchg xchg shr nop and or pop lds loope mov sbb outsl mov dec pop cmp sbb cmp cmp add mov xor push xor out loope nop arpl (bad) dec adc movsb push xchg push push jge mov dec add push xchg sub leave push int sbb (bad) ss stc push fs mov sti repz push push lahf ds mov cltd ret bound (bad) mov insl in dec push ret xor inc cltd mov lea pop dec shrb add adc icebp xor push cmp mov cmpsl inc scas test in lds add sbb imul xchg mov inc mov andl sarb in aaa out jl imul inc or dec cmpsb (bad) sub jo adc sbb (bad) clc lret jbe gs ficoml dec push (bad) out lcall mov xor xchg dec lds into sub dec (bad) jno sub sbbl xchg pop es pop pop int subl decl mov add (bad) jbe test inc adcl sbb bound test shll cmpsl pop es or pop adc test dec (bad) repnz push add push sbb and cmc adc mov mov daa add insl sub pop pop jb fwait xor repnz pop addr16 lds cmp pop dec jmp (bad) jl push push lds inc inc mov mov sbb dec icebp mov cmpsl fcompl aad and iret jge push jns clc scas and sub dec mov dec mov lret fsubs pop cs nop mov add (bad) bswap daa mov mov (bad) pop std ja push jge in (bad) push xor mov out ficoml in mov xor mov dec addr16 mov loopne sub out sbb cmpsl es aad insl jns adc lods sahf cmc push adc dec mov fdivrs nop mov sbb pushf jne jns xor mov jbe stos ret push mov cld push mov stos in mov dec adc push push mov sbb arpl sub mov gs dec stos pusha cwtl cmp lahf add lret pop or lahf cmp add push or adc popf aad push add pusha or jecxz xchg sub je orl or jecxz xlat int nop push mov cmp mov mov cltd jle test xor mov popf jl fidiv insb cmc xchg jle aas lods push pop int fldl push dec (bad) xor outsl dec shll je cmpsl sub jbe cmp popa fsubl pushl into lds mov dec xchg sub jbe jecxz sahf dec jg sub push cmp pop outsb push hlt int push inc enter lret jb mov loop mov std xchg insl jno scas inc sti dec cmp lcall and (bad) in lds mov (bad) out mov push ds cli lahf push shr js leave test dec popf in ss daa dec pop cs shlb incb jno scas imul fidiv mov jnp stos push dec pop adc mov sbb cli decl push mov sub or lea mov loopne add in mov mov fdivl push ret or sbb dec scas jbe lock or sbb sub pop fnstcw js xor dec fs rcrb mov cmp mov movsb sub xor test mov mov jle aam int3 push arpl sbb sub (bad) imull or sub xchg test (bad) (bad) test movsl jge sbb xor movsl in cmc xor add cltd call repz fcoms mov adc roll sbb sbb push dec push aam leave xchg xchg dec mov adc add sbb pop add xor ljmp insl jle pop in (bad) cmc cmp and loope jl (bad) mov fldl loopne mov jl lods xor pusha pop test mov mov pop mov and cmp dec ret aas mov call mov in lcall xchg js sbb imul sarb stos mov jge sub add add ret loop (bad) (bad) divb sub cmpsl arpl dec lcall add sti imul fs jle aas mov dec imul int3 or (bad) movl inc sub (bad) xchg lds jmp sub stos in mov xchg es cli (bad) and mov xchg test sub inc and (bad) jno mov adc push fist sbb loope jb lods adc aaa mov stos daa jle mov sub clc outsb mov std sub in je jne js cmp rcrl sbb xchg out stos (bad) ret out xchg cli (bad) repnz data16 mov sbb dec jnp lea add sbb int3 pop xor outsl mov mov pop inc aaa pop shl mov mov add lock (bad) jo cmp ljmp iret lea addl add pop xchg arpl mov mov dec mov and and mov jcxz or cli adc sub adc mov (bad) sti sarl rcrl (bad) int aam in pop scas lds lods mov dec loope nop aam mov enter adc xchg cli (bad) (bad) cld popf mov ret int in cs dec jne leave inc add pushf pop jno,pt insb mov dec popa mov sbb inc jmp and and mov sub cltd xchg cmp mov (bad) dec nop sub dec cwtl cmp inc (bad) repnz fisttp pusha aam push dec cltd pop dec mov xchg dec lods iret sub mov pop inc lcall xor push pop adc add test sbb add mov es or insl push test test push jg xchg mov iret inc in dec adc add imul push mov push out xchg leave out mov stos mov cmc inc mov add adc mov pushl dec push ljmp push es add sbb dec ljmp dec jns les jae adc fwait inc push lret mov adc fistpll push pop push pop pop adc (bad) enter sti out pop mov xchg pusha rolb test lds shlb and and adc mov and sub push mov jg mov sarl jae (bad) and sub jne test adc cmp cmp sbb mov dec mov lds cli je pushl mov jmp in call lock and add add insb and aas das cli lret push nop push out pop jae add bound or test lods jecxz mov push lea jae outsl push pop pop dec cmp pop fs sti mov push push sti cmpsl add lcall outsl mov test out dec pop movsb add jle jle add in outsb mov mov popa push jmp add push call (bad) dec adc or jge or fcmovne push aam and inc test fidiv cld xchg and add loope mov and push sar xchg mov jne rorl xlat dec push mov inc xchg (bad) mov pop pop pop xor scas out mov (bad) adc cmp and xor push jecxz xlat sbb push dec outsl pop mov movsb dec scas cld (bad) or push push jno and jle (bad) push stc cmp lods jne inc jmp add imul jo (bad) mov das lods hlt xchg loopne int3 movsb inc subb jo (bad) popaw push jo (bad) mov sbb or bound push xor notb xlat inc outsl mov cmp inc mov fdivs inc dec and push aam xchg mov (bad) loopne ja sbb insl stc popf (bad) xor and mov inc and emms test and andb cmp xchg test aad popf push mov pop sub pop cmp pop push lods push shlb in inc data16 outsl jo and mov idivl dec or stc into in lahf jno pop mov mov hlt push ficom jnp test sbb test dec fsubs stos push adc movsl cmp fs mov aad (bad) cmp sub inc sbb repnz outsl sbb cmc imul mov imul mov sahf (bad) outsl int3 adc subb sti orb xor in fld jo dec ja out pop push int add imulb scas jo add and cmp add or incl add xchg inc inc lret jns jae push mov or inc jg pop shlb (bad) sbb lcall dec xor test repnz cs std (bad) int3 xor ret sub lock jae sar jnp jno ja shr test fwait xlat dec mov aad cltd icebp add mov movsl push push push jb push jmp inc xchg dec mov xor loopne xor push dec pop cmp in movsl cwtl sbb ret rorb std cmp fcoml hlt mov int3 inc pop test push cmc lods mov inc inc jmp insl inc push pop add sub mov push icebp dec (bad) mov sahf je jbe imul adc cmp lcall cmp movl push mov sbb mov mov sbbl lcall mov and hlt adc pusha mov int sbb push loopne out cmp mov js pop jle mov inc (bad) loop sar or sbb iret pop cmp subb and pop or daa sbb inc into jg imul ja std dec mov addr16 (bad) js and xor mov xchg shrl (bad) mov pop mov sbb enter mov pushf lahf mov pop push jge aam jmp jmp mov cli xchg cmpsl mov xchg pop repnz pop cmp ja movsl cmpl fs (bad) aad (bad) loope or adc push stos fstpt ret nop push push sub incl scas add mov (bad) mov jns scas push and fcomip mov outsl xchg stos xor loop and xor inc and jp push (bad) mov scas push call mov xchg mov dec clc xor mov aas mov inc pop mov in sarb add jle fldcw int sbb ficomp cmp ja and push or and sub dec mov arpl cli xchg fs inc je xor aaa jg cmp cltd cmp imul mov iret dec sub mov aad scas std cmp push repnz addr16 jge,pn mov add jmp mov in jnp js je cmp outsl inc (bad) mov les mov cs mov lea dec fstpt adc pushf mov push mov push xor dec or pop push push xchg je test (bad) xor roll test lret cmpsb int aas dec (bad) pusha or dec leave lods (bad) push jo negb push push sarl mov mov jp mov xor pop push dec push adc and dec or fdivrl call sbb sar inc push xchg push jo xlat xor dec (bad) cmpsl pop fistpl lds lods mov adc int ds pop iret dec and test (bad) xchg loopne lcall jns into iret fadd ror mov clc ret insl (bad) data16 (bad) loope dec insl pop mov jp dec push mov int (bad) jl in xlat (bad) and and xchg subb ret sbb enter mov mov xchg addr16 inc cmc inc (bad) jg imul gs jmp cmpl mov pop out mov xlat sub or jbe ficoml les cmp adc popf mov lds fisubrl scas aad stc inc out cmpsb repnz lods les jne push mov jno xor fnsave dec and fcompl cmpsb xchg xbegin dec jno push inc inc push insl inc xchg inc jae lock loop bound jns jl mov mov mulb fldcw and or sahf lods fs mov les movsb clc jae inc mov in lods inc aam mov fist ljmp shrb xor int cmp xor (bad) add (bad) outsl sbb out stos lods pop jns or adc xor pop adc xchg loop rclb xchg or push or dec jg pop movsl sub jecxz lcall inc addr16 mov fdivrp pop aaa enter xchg clc gs mov data16 int3 in inc sbb sbb xor add out fnsave sbb add pop movsb jle rcrl jp jno in sbb jns mov push movsb out ds decl add mov (bad) dec ficom (bad) or ss xchg mov mov cmpsl add and dec loop lods jg bound movsb jp iret mov pop lea cmpsl fistl call mov pop enter jnp sub xchg jmp jl sub and mov lock pop loopne mov cli int (bad) xlat (bad) xchg decl (bad) test je sbb sub pop or shrl cmp pusha push fistpll and mov rcll mov pop inc mov push xchg mov push sub xlat orl aas or roll jno mov add loopne stos jecxz test mov adc push mov xor cmc les xor fnstcw push or sar movsb test xchg cmp adc mov xor cli lods cmp test mov lds jmp scas cltd in xchg mov mov jmp lret sub xchg das lock sub lods sbb repnz rcrl adc xor std cmp sub es rolb shr test pop popa aam inc pop aam imul mov add stc inc inc mov and sub addr16 lahf loop inc mov icebp jmp out bound roll cmp sub add dec jne ret jp and repnz lret cmp iret pop jb sbb xchg cmp pop cmp loope outsb repnz dec push sbb stc jno in dec pop xchg aam data16 lahf loopne addr16 in fwait stc sub addl fldcw dec ret pop inc jg mov add std lock sbbb sub and pop out add pop fiaddl (bad) adc movsb cs cmp imul mov sbb leave ret jecxz xchg cli fwait (bad) xlat xor ljmp xlat adc sub push sbb pop das push sub cmpsl xchg xor daa xchg mov push imul mov inc jp aas push icebp mov mov aam push cmp (bad) lret add (bad) xchg insb clc jecxz ficompl in pop mov mov je in imul dec mov test and icebp insb dec (bad) in adc les xchg pop cli hlt stc jmp adc and cmp add call push xor jne ficomp fldcw popa movsl jl dec es xlat (bad) dec subl push jbe push push (bad) cld mov and sub push lret xor xor lret shlb mov adc in loop stos dec mov inc ss testl inc inc sbb jl loope dec aas cld idivl xchg repz xchg mov jge pop dec (bad) jle xchg stc push (bad) mov dec adc in aam mov dec mov jae sahf lea hlt mov jbe and dec pop fnsave gs sub mov mov push inc or std push (bad) insl pop (bad) xchg scas decl cmp xor cmp daa aaa das cmpsl stos adc sub bound in jb push fistl outsl sub pop gs push xor add nop je fcmovnb lcall enter (bad) sub and sbb jl mov outsl xlat (bad) cmpsl xor outsb arpl nop adc jg pushf mov jle std dec cmp mov add ss int stos mov inc call sub and ss aaa out jmp out jp stos cmpsl test arpl int push pop mov sub mov cwtl cmp rcr xlat pop imul fisttp daa jl sbb mov jmp mov (bad) mov xchg aad lock (bad) out insb xchg push cltd lds cltd pop push jne bound aad cmc and movsl push in and mov fcomip lea mov rcr push test std cmpsl sub add js lds xor xor fldl xchg aaa insb dec jb pop dec mov and nop push gs inc cmp xor nop push cmp stc jne jbe add dec in lret fwait es jecxz cmp test push int dec jbe dec inc fstpl cmp (bad) jno xchg iret fcmovnbe cli in jp test rcrl cmpsl mov inc cmp and push jecxz out out (bad) fnstenv pop ds icebp jo push cmp std lds mov jp subl mov jp hlt rorl in inc jg (bad) jne out and cs and xor sbb out or movsb popf adc jp add cli (bad) sti (bad) mov mov sub cmc xor push dec std or push nop imul inc pop jmp add mov fs scas adc xchg cld sub pusha jp sbb sti sub fwait dec xchg jl xor leave aad in mov jecxz fnstenv mov mov push int dec xor lods or out jl loop push arpl push or movl bound sub mov pop cmc mov push xchg push fwait popf add xor int lods rcll fwait je in mov add (bad) cmp xchg mov jp xchg sbb and add iret push mov (bad) pushf nop mov data16 rcrl out push xchg pop xchg fwait ret dec dec add les push mov nop jns clc scas in or xor xor mov es imul (bad) mov sbb adcl jns adc jle out cwtl sbb stos cmp inc cmp (bad) leave mov gs fdivrs jns dec xchg dec in jmp jbe scas in mov dec lds daa add sub sub xchg imul imul cmp ja mov (bad) (bad) mov push pop jb mov daa stos mov and sub loop and add cmp repz sbb jb sbb pop mov ljmp lea pop pop xor dec sbb sbbl push shrb push add (bad) lahf jns xchg es jns nop gs push jae enter pop pop cmp cmc cwtl xchg mov or testl in cwtl xlat sbb add mov mov sar dec fwait mov std mov dec outsb mov adc adc lahf mov fsubrl push jno flds push stos mov dec mov jmp stos cmp popf shrl xchg popf push das sti inc jbe mov jae ss dec jae inc jmp or pop sub in (bad) mov lahf dec inc mov jnp push fcmove sarb pop inc and lea jle mov push sub fmul in shrl mov out sarb das repnz testl lea sbb dec jge mul imul pop mov sbb outsb data16 push (bad) lret or imul cmpsl fisttpl shrb pop addr16 jecxz pop test add inc mov (bad) ljmp mov sbb test cli adc in icebp inc rorb repz push or notl movsb lods pop ds in fldenv lock mov mov insb mov push insb cltd jnp nop jle mov cmpsb cmpsl inc test sub ds inc pop popa shr push cmpb pop mov outsb push cs sarl jg and xor sub repz fdivrs push sub jle scas rcrb push push ljmp push sub fcmovnu rorl pop jecxz dec std (bad) xchg cmpsb call addr16 push or rclb fsubrl add adc movsb mov mov rcll xchg fwait test aaa dec mov mov (bad) shr test and xchg jne add mov pop cwtl push addr16 push add stc dec add pop or std mov fcmovnb outsl mov dec subl stc adc pop add mov mov cmp and cmpl jmp dec sti divl out jb cli xor data16 aam jo dec jnp cmove aad sti sahf push aaa loop cld add sbb clc xchg sub lahf inc xchg flds imul dec push mov inc xor cmpsl imul jbe les xlat or sbb or jb (bad) xor hlt je in cmp lcall fwait mov sbb ss loope dec inc lods popf clc lock inc fs cmc sub scas pusha js inc sti jp bound aam mov sub mov rol sbb mov jmp arpl mov jo je sbb je enter pop jp lret push rorl shrl fdivl xchg adc mov arpl push out sbb mov push dec aad enter rcrb (bad) xor in pop insb mov or pop xchg decl xlat into xchg gs fcoms stc arpl fidivl fsubrp cmpsb mov mov clc imul mov pop outsl mov fnstcw push adc mov mov lahf ja mov add add bts xor stc pop pop pushl out push fs das data16 push (bad) pop jbe and lret pusha xor inc adc sysret nop and (bad) push cs icebp jecxz push (bad) xchg fimull inc adc or imul inc cmp or xor xor inc or (bad) cmpsl xor int jp inc inc fcomi movsb mov mov cwtl mov mov int3 xchg dec repz (bad) jle lds mov jo pop sub (bad) pop add fldenv jae push sub dec rcl push push into nop shl push lret dec addr16 loop lods daa and sub xor sbb and xor in rcrl aaa push test and movsb and inc xor and lock xor cmp push xor cmp mov inc icebp pop (bad) (bad) out push and imul in inc xchg (bad) fiadd push mov add sbb cmp add push outsb das mov fcomps pop ret daa (bad) dec push mov add push push sub adc imul cmp test mov loopne (bad) lods xor out popa cmp xor inc xchg call (bad) cmp lret push pop scas xchg jge mov pop pop xor outsb mov inc push fs add dec xor mov aas or adc into fxch push xor cmc popf mov add (bad) sub loop xor dec test int aas movb mov mov xchg stos inc pop inc in mov mov xchg arpl jle dec pushf sbb ja jbe sbb jns aam bound and sbb lea pop cwtl push in dec in dec push push bound inc clc mov sub jp inc sbb sbb mov add fnstcw xchg jb notl sbb sub sub shll out negl cmp outsl xchg push push (bad) mov hlt cmp sbb gs rcl pop lea cmpsb push int inc mov sbb leave cmpsb sub and inc push sbb cmp inc enter adc faddp mov and call repnz fisub cli pop or xchg inc mov adc inc ret loop clc mov push rcl and mov in out inc xchg lods and add pop xor jnp push leave cmpsb and sub or and data16 fld (bad) cmp loope jne fmuls ret sbb sbb mov dec cmpl popf mov dec mov sbb dec dec and test ftst mov jge iret dec lret xchg aas cltd jb cli mull test shr jecxz xchg xlat (bad) adc pop mov mov or inc out ja js push cli repnz inc pop add lret mov in (bad) loopne mov mov cs sbb xchg and test ss and insl gs mov lods cmp je and xor mov mov insb aam sbb (bad) sar fcoml test sub mov lea orl or ja xor cmp ljmp lcall dec xchg adc dec xchg jo outsb fistp and sub outsl cmp xor jge xchg add test sub fcomps popl outsl jns mov or lds int scas cmp push sbbl xchg jg out jmp mov xchg lahf mov add mov add dec push lcall pop (bad) jbe movsb and ret adc ja lods ja aaa scas in outsl stos fsubl pop lock fsub sbb in daa mov mov mov pop xlat js mov xchg in arpl pop rolb mov add lahf xchg dec jno (bad) insb mov pop lds and jecxz sub push dec out fdivl aas lods lods lahf gs movsl iret mov fcmovu push in aam in cltd fstpl add adc sbb (bad) outsb dec int3 sbbb or push sbb cmp lds xor jmp jmp int3 aas cmpsl xchg into adc ret mov fstps xchg push pop aam or push sub xchg test std inc rorl and leave mov cmpl pop push pop daa pop mull xor movsb push cmp (bad) cld jecxz lods sti icebp rcr inc scas sub or mov clc mov pop mov sbb mov les dec loop mov add adc sub adc inc loop scas mov lea pop mulb mov insb dec sub mov add aas xchg push test call or data16 in dec enter add lds or sbb and or inc ljmp and mov push push push jge xchg add or icebp call and add mov jo xor push jmp cmp mov jnp rorl addr16 jl sbb sbb lods lret dec in fs ja pop (bad) testl jmp out mov mov push and add dec ja jno stos lahf add xchg pushf inc sub inc cwtl push mov bnd rolb adcb lret insb (bad) js pop xchg stc rcrl pusha (bad) xor sarb cmpsl popf aam repnz popl mov insl pop sbb mov ficomp (bad) and data16 cld clc cmc in (bad) cmp sub push inc int3 ja lds dec dec sahf shlb dec in push cmpl mov xor (bad) lods jmp andb test sub mov or push or adc sub push lcall fs das push hlt adc daa sbb or into test imul out sbb jg or cmp xchg and stos dec (bad) std cmp pop push rorl or jns jbe add adc xchg jmp xchg mov sbb dec mov (bad) in mov mov inc jmp adc jns shll push dec jns ret pop into movsb push imul adc andl cmc jmp leave lods stos pop mov push jns dec dec jno push or inc imul and cld add adc outsb data16 dec push (bad) mov hlt lods xchg sub add mov xlat inc aad adc shr xchg sbb orl lock xor mov sub fisubrl aas sub push xchg movsb or adc and lock or shrb and xchg pushf sbbl test xorl inc mov mov adc sub bound inc test fcmovnbe fwait jle mov inc push dec test ret out mov (bad) ficompl add outsl inc mov push (bad) mov (bad) cmp lods loop clc xchg lahf push leave insl loope call push push iret rolb movntq (bad) inc cs sbb push mov or js das test pop aaa loopne scas adc push xchg out stos in in ja pusha (bad) sub sahf mov add push test push or and fisttp jns mov stos cs mov sahf mov pop inc cmp lret fbld mov lds jmp dec andl je push sub lods shll push and mov add inc test inc lcall pop andl popa adc idiv in in or (bad) imul add pop in daa fwait or xchg in test push movsb mov shrb jo cmp or addr16 sbb inc or data16 cmpsb call push push dec push and sub into dec in pop and ret test stos push outsl jne jmp adc push mov sbb enter add ljmp sub aaa out lret sbb lret (bad) mov push dec cs jb cli xchg pop ds rcll sub jp fnop ss mov enter test pushf enter testl addr16 adc call and repnz cmpsl pop inc icebp dec sti pop je mov inc xchg and jbe fldl cmp cmp pop sbb xor addr16 aaa mov mov jbe repz sub xchg or mov lock cmp and mov add (bad) stc out mov jnp arpl jns sub lea cmp cmp or and mov nop mov pop sarb movsl ja out std aam mov push lret aaa xchg addr16 jae iret fstpt mov or movsb cmc adc mov xchg push hlt jp dec call mov sbb xor xchg sbb xchg mov fidiv rol or loop aam cld inc xacquire mov pop lods in inc mov xchg and (bad) and lods mov repnz sub adc xchg pop fisttp pop or out dec jbe hlt call add insl iret test mov js outsl push jle xchg adc icebp mov mov push pop in (bad) (bad) jmp pop dec cld xchg bound jl lock scas inc and adc in xor inc inc jg mov in (bad) hlt sub and movsb push cmp push mov fwait loope std sbb aad mov cmp negl imul int3 pop sahf pusha hlt hlt add loop (bad) jae push xor lea leave mov (bad) fldl shl cli cmp dec fsubp je (bad) sub mov xor icebp inc dec rorl daa outsl popf sbbl add vfmaddsub132ps gs lcall xchg fcmove dec je (bad) xor or xchg mov pop jae stos or adc pop nop repnz pop subb in lahf outsl mov sti shl fistpl in xor mov mov and mov xor insl fisttpll xor xor pop or inc fiadd (bad) dec insl (bad) jb mov cmp leave push outsb out xchg push dec mov rcll bound mov jb xchg xchg test xor in loopne and inc xchg mov push leave mov xor stc cmp mov mov jae or mov ja scas cs and jno push shll fsubs pop cmp mov xchg sarb js ficoml fs mov jns sub mulb call fwait (bad) (bad) mov xchg fimull ficompl test stos xchg pop pop adc xchg dec mov shl jnp (bad) sub pop pop out pop xlat ret cmc mov sbb sti sbb sarb adc mov leave xchg notl xor inc (bad) or xchg sub in or test xchg xchg mov and xchg push movsb and pop test cs xor inc (bad) (bad) movsl out jge mov cmp dec dec das inc in fcmovnbe loop mov adc aaa (bad) icebp pinsrw inc and xrelease lock mov stos ret (bad) adc fsubrs and dec add les sbb inc sbbb jns cmpxchg cmpsl jae jl gs (bad) ss adc stos xor pop (bad) xchg ss (bad) roll jns in cmp cmp pop pop mov adc or jmp inc loopne int dec gs push loop and scas mov loopne pop or sbb and push fbstp jmp or dec jbe push stos add (bad) mov jno xor out jo or and xchg fnstenv imull fs lods dec and jp or sbb fidivrl mov daa aaa mov xchg lock sbb test sub loop pop pusha shll (bad) cmc push sbb xor sub enter pop adc sub in fwait stc sarb out mov xchg jo iret and inc out and js out jns dec cltd fidivrl ret pop or js out in mov lods push cli popa out or push dec ds sub jle lea mov xchg mov popf xchg cmpsl orb (bad) xor loop nop out dec inc aam pop jp dec xchg mov xor xor int mov ret sbb sahf in and xchg mov movsl jle lret push shlb fcomip lds adc push sbb movsb test and inc outsb fwait inc xor inc xchg cmp xchg (bad) pop jae fstl xchg sub xor repnz add xor out imul out cwtl jb scas push fldt mov lock dec push sub cwtl loop rorb mov push aam pop mov out jo enter popa xor loope cmp imul cmp xlat test pop cmpsb sub or and mov xchg xchg jno inc out hlt testl icebp lods lahf adc add sahf and clc push add lods (bad) mov sub xor jg mov out sahf xor dec stc ja mov xchg mov xor sbb adc jno cmp cmp pushf insl lods fnsave mov das int mov sbb ficompl lods pusha fwait cli sahf pop push out jge ret je,pn call push std or pop subl mov rorb add mov sti test cmp (bad) mov mov dec jmp mov icebp push lea inc fs jae out shl push xchg dec movnti push cs sahf insb mov imul mov xorl arpl mov xor adc lret and imul mov lret insb pop jg push mov mov mov adcl jne bound xor gs adc (bad) outsl ret (bad) mov pushf jno les mov dec repnz dec push pusha mov daa or les inc outsb pop bound mov je xchg cmp lcall scas jge cmpsl push scas inc and into repnz leave or call (bad) in lahf adc pusha (bad) xchg ljmp mov rclb and lea and ret mov leave mov out xchg into push add xchg stos jnp popl sbb inc xchg adc in stos inc out int xchg insb (bad) mov lds adc add xchg add jl jae or dec push add dec push (bad) in in cmp into ret das lret pop push or cmpsb dec jb fsubr test mov dec jle test mov rorb ljmp imul lods rcll outsb addr16 gs xchg jno repz inc jns or inc lock sti and bound sub loopne jb mov movsl jo jo sub lods mov iret jg gs call test int or mov nop xor adc and nop clc mov xor out push dec ret imul cmpsl and orps in scas sub push fisttpl dec popl jb inc icebp les inc xor xor mov add sub lods addr16 or icebp movsl lds inc jge sahf lret cld or cmp and xlat leave pop jnp ret enter leave popf dec cmp inc fwait mov andl add mov loopne movsb sbb js es cs jl,pt sbb lds add repz outsb inc jb pop gs inc lcall fwait jns mov rorl xor aas (bad) lock gs xor andl add xor fidivr push (bad) in aad pop push pop out inc nop dec xor dec mov mov mov cmc andl and sub fisubl out addr16 nop dec or es and jne mov pushf jns popf push out (bad) rcrb cmp dec shrl xchg push ret push scas mov arpl addb ljmp add adc daa sub mov pop sbb xchg cmp aad sti push aaa lds (bad) loop or pop mov xchg inc mov sbb dec and fmul add jp dec jecxz xor and pop jecxz xchg pushf sbb mov std (bad) mov pop stc xchg inc mov pop xchg dec dec jnp fdivs pushf aad sar pop adc pop into ds mov jo sbb xchg aad dec aas mov xor push pop pop sub mov push in inc push int (bad) bound pop ljmp outsl dec and leave push in mov jl pop fistpl sub aam inc pop (bad) sub out add dec jne rorl loope jl (bad) dec pop test loop add push inc xchg adc inc clc in pop shrl push inc pushf push mov jns icebp sti gs fcmovu les mov mov or lret les lahf js repnz test paddw cmp xchg pushf sub sub xchg xor test push or or xor cmp cli iret into adc mov scas hlt or lret and aam jnp shr cmp xchg lea push cwtl shll dec test dec add cmp pop or out or in gs xchg lret popa cwtl cmp aaa lret pop push dec jp mov leave cmp adc xor or cmp push daa push and adc cmp cli add mov les inc jns mov xchg mov fdivr stos and pop popf cmp (bad) xlat and decb arpl lret pop push cs sub mov gs hlt fcmovbe xchg outsb push cmp adc hlt rorl pop out cmp and mov pop xor dec sub subl insl rolb jae and icebp pop pop imul xchg pop rol mov mov ret out sarl pop pop cmp mov cmc js mov mov decl popf xchg mov popa iret subl pop xchg aam fcompl mov pop lea aam add ret stc add repnz cs mov push xchg cmpsb push pop pop adc in jno pop mov dec imul fsubrl mov repnz pop repz add aaa mov fs push sbb push dec lcall push pop stos out inc xor sarl fiadd (bad) xor daa xchg loope lret push ljmp dec push lcall stos inc add sub add call aam push mov xor js inc jne xchg push mov cltd push jne and lahf imul lock mov jl inc jne jge pop dec daa or mov jle push enter xchg test (bad) xchg stos cmp daa fstl sahf and cmp mov mov popf cld adc xor mov ret jmp stos leave pop cmpsb int3 leave jecxz cmp sbb fldt or jae mov imul push repz stos xchg and jg mov (bad) sub add testl cmpl push pop sbb (bad) aam jecxz inc add sub adcl call or rolb xchg jae mov mov push push mov xchg addr16 das mov pop xor cltd and popa (bad) jns out jnp or jecxz xchg in jbe (bad) lret push lds cmp jns adc mov pushf push pop jns ljmp mov cmc xchg hlt xor xor adcl divb xor sub xor icebp dec and out xchg (bad) dec pop jo mov ffree iret sbb jnp sub dec jb pop mov jae ret xchg push mov js mov dec sbb jne lcall fnop cmpsl mov lods dec dec inc cmpsl inc in mov lahf jns mov mov cmp xchg cltd dec add outsb test push movsl stos fnstenv stos lahf xor pop mov div fisubrl adc cmp shl inc push mov lcall jmp out aaa push test and arpl dec adc dec rorl mov mov cmp repz nop mov in test inc cwtl dec mov ja push lret inc in sub ja loop fcmovnb mov cmpsb push rcrl jp rcrb call popf ljmp mov call das pop cmp sub or addr16 lcall (bad) in jge inc sub and mov jmp cmc inc push push or fldl inc ds mov inc mov adc scas push mov cmp fstl fidivrl pop push fwait adc ret sti dec push pop sbb or push sahf fldcw rcrb pop (bad) and mov (bad) hlt mov mov xor lods cltd and imul lahf sub lods jns loopne xor mov repnz pop pusha cmp clc push or push mov cli or cmc les push add dec or dec inc in xor dec pop fiaddl xchg sub (bad) jge jl fwait xchg test aas or and cli inc xchg adc popf or aas push inc lods aas lcall xchg iret fisubl ds shlb roll popf insb nop mov or cmpsb data16 jmp clc jle cld test or push xchg dec cmp cmpsb push mov push cmp fsubrl (bad) ja dec nop push or add insl xor add popa hlt repz and cmpsb cltd adc cltd and (bad) ret adc sbb jb xlat pop jecxz sahf lods jbe jge lock pop sbb into mull add xlat mov mov inc mov out test leave inc mov aaa push cli ret pushf idivb inc mov sbb push sbb dec dec neg adc push push pop pop ss leave push sub xlat add fdivl xchg jns xlat es sbb adc push push mov jle mov outsl test mov icebp cmp adc push bnd jne lahf ret data16 and and adc cwtl push add mov outsl aam sub clc or js icebp mov int test cmp je aam jne jo lret bound and pop sti and mov jmp arpl outsl cwtl sbb xor and fdivrl addr16 jg das lcall pop mov adc incl test out fwait add es stos pop (bad) mov shrl xchg adc mov mov in cmpsb imul pop cmp ljmp jmp movsl scas lahf xlat stos movsb pop pop test fisubl dec call bound cmp mov idivl cmp (bad) clc mov inc jae push and push pop pusha hlt sub and jo mov lret (bad) pop jl into sbbb mul jns or push out mov push outsl push jecxz pop push fidiv enter xchg mov mov adc pop fs les dec mov mov insb xor push inc lcall leave pop js das xor jmp mov jnp add jnp test mov out imul add test rcll xchg daa mov adc icebp sarb cmp (bad) and inc loop (bad) data16 push sbb pusha or or mov xor push inc rcrb dec loop lods enter pusha xchg (bad) (bad) xor push push xor push dec mov mov das lods xchg sbb out xchg out cmc repnz inc cmp rcrb and and xor cmp inc shrl dec out dec (bad) scas insb daa mov lock addl xor es and fsub mov pop andl stc mov scas fistpl jnp xchg jmp idivb std roll inc hlt (bad) or div mov mov xlat lret mov rolb or jp sbb fisttpll insl pmovmskb mov push and scas ret outsl mov dec or or sub fwait ret or xor out stos sti aam fcom int3 lock test lcall pop aaa (bad) mov cmp add dec jle andb cmc into ja (bad) loopne into cli daa push and rcrb and scas push lahf fninit pop pop jle (bad) mov in push mov mov pop mov repnz jns pop lds in (bad) fisubl fcmovb or sub loop mov mov es sbb mov ja add call cmp lods fnsave push clc mov dec (bad) das lds inc dec jbe imul test mov dec daa dec push sub mov lahf fstpt adc cld xor jge cmp enter or sbb push sahf jno xchg xchg add lock inc jb sub inc hlt lds popa add gs xchg mov jnp inc adc cmp or rcll pop cmc dec add call xor (bad) lret cmp mov pop nop (bad) movsb clc scas js repnz enter ljmp inc add (bad) in ja orl (bad) std lahf xchg (bad) std push icebp pop pushf ret cmp mov pop inc mov cld sbb mov inc pop xchg sbb aam call inc call cmpb push mov cld sub test mov pop outsl mov insl push jle int sbb loopne loop call dec fist popa lock test mov mov mov adc or aaa mov (bad) outsl js inc or ja loopne inc fsubrs cmp pop adc sub imul mov (bad) mov insl daa dec inc ja ficomp mov cmp push rcrb imul cwtl push pop stc add subps dec std push xchg adcb pop jns push (bad) mov and test and cmp jl add sub sarl jnp pop adc push adc jl popf adc aaa pop int rcrl dec pop adc pop push fisubl inc in pop pop sbb mov ret xor inc repz pop loop cld mov pop pop jecxz jnp push arpl pop out sub pop adc or dec or jecxz lock ljmp fisttpll pushf xor aaa adc das pop iret in mov loope aas push fldl nop push jns xor aaa xor push bound mov in push gs xchg xor push movsb fwait dec xor jmp leave imul mov cmpl sahf mov or or pop (bad) (bad) ficoml out mov dec add sbb mov icebp enter out fdivs sti loop and aad pop (bad) cwtl xor push inc jns push xor dec sahf xor mov jge pop insb (bad) push cmpl xchg out mov jbe lods jmp sbb inc sub mov jge dec (bad) mov jnp cmp (bad) jae push cmp push movsb push test je xchg comiss push ret jle mov sbb xor cld sarl or lret ljmp sub aaa dec pushf mov jg inc lds clc pop das lea cltd push push imulb cmp pop movsb cld (bad) call jae scas cmp les xor cltd cmovae addr16 mov push rolb stos and xor loopne aas xor stos mov stos (bad) mov dec sbb addr16 pop dec adc jb cmp jmp sbb hlt cmpsb scas fisttp or lret fbld lods ficompl mov jne and mov adc stos xchg jb test and into pop test mov xchg aad xlat sub mov push mov mov ss loop mov iret fimull rorl das mov ds orl dec jno sub sbb mov out aad sub bound int out xor add or push sbb enter cmpsb sbb cmp rorl sarb inc cs adc (bad) imul mov cld push mov add pop cltd or mov clc scas ficomp xor repz (bad) pop sub in loopne int3 push mov xor push sub dec dec arpl fnsave xchg push and imul xchg mov cmpsl push in rorb sbb sti lcall mov xchg loopne sub adc je jg and xchg mov les lret nop stos mov loope xchg pushf mov mov loop push mov or imul je dec pusha mov mov lods enter jns pop adc (bad) pusha inc ljmp jae ret pop sarl mov pop movsb lods pop bound lds scas ret jnp add int3 fldl and cmp in out xor imul jmp cld sbbl bound cld clc pusha adc stc pop push lahf nop loop sbb mov ret xor mov and mov cmp xchg dec loop sbb push jg or lods rclb or aad sbb cltd js add cmp rclb rorb xor stos or std cmp popf pop in adc dec rorb cmpsl jae inc dec arpl out stc rorl mov aaa pop xchg repnz imul lahf mov pop pushf bound sahf jne mov adc outsb sbb push fdivp rorb xor jns jo lock add outsb add (bad) or js lcall aas mov mov ficoml xchg sbb push pop xlat subl test sahf adc mov daa mov inc xor in fldl2e push cwtl cmpsl (bad) cmpsl mov imul pop icebp je adc cmpsl sub inc fcoml lods xchg cmp cmpsb mov dec mov cld xchg jne mov inc mov icebp pop dec dec and add and add fdivrl imul jnp and pop cmp test (bad) and mov fbstp test insb (bad) lock mov ret sti mov mov in or jnp pop loope inc mov mov fiadd jne pusha dec pushaw and pop adc loopne js es popf jae es lock test push (bad) (bad) stos xchg push das ret ds or mov and insl pop cmp cmp add mov sub xlat out pop mov test ret sahf xor mov xchg clc mov sti fisttpl std cmc (bad) out ret ret cmp hlt cmp push cwtl pushf or dec pusha add mov cld jecxz call in lret mov in addr16 sbb mov (bad) fisttpll dec ljmp js test lds jnp cmpsb dec push cli push cmpb ja in dec fwait add mov push fisttpl jmp sbb adc mov fst movsb mov lahf xchg sbb mov and in je and push and sub add adc xorl scas sub jbe and push pop popa push sarl loope popw (bad) rcll pop push adcl scas rcrb pop pop dec xor outsb jnp mov (bad) sbb orl test mov adcl data16 sub dec jp (bad) lock (bad) gs repz mov arpl ss nop push add ficompl je loopne out sub push add mov insb push aad (bad) fcmovnbe aam push cltd push dec xor xor fwait sbb push add in or das mov jno lods push or repnz popf cmpl insb mov int push pop jl cwtl je js hlt mov mov and push mov in movsl mov push mov movsb jno cli mov mov ret add push repnz inc outsl sub and mov or in cmp lcall scas ret add push jecxz test cmp (bad) sub pop int3 inc mov pushf lahf and add int aas ret call int (bad) aam out xlat push mov out out push in jb in in fldcw wrmsr (bad) mov pop jo mov ds flds es mov and loop movsl lahf clc test inc or mov in cmpsb mov add dec fcmovnb dec jge jecxz ss and (bad) pop sbb inc ljmp movsl xor lret xor enter push scas data16 popf jne shrb pop jg cs push sti clc xchg pop mov in push addr16 stos aad js sbb pop add clc push pop xor push xchg add jp dec ds jl cmpsb cmp lcall je ret inc push xchg jg adc dec cmp push add mov pusha mov xchg jns in testb mov dec adc cmpb cmp int pushf or fwait and xchg and sbb mov xchg inc push or cli inc movsl shrb lea lods lret je adc xlat aad into dec divb sbb outsb and stos mov cmc jno and mov mov dec (bad) mov ret (bad) int3 (bad) mov out loopne pop lcall push pop jle (bad) xchg outsb push (bad) mov mov pop push fisubrl mov aaa xor (bad) dec xchg mov sub xor pop fildll mov dec mov dec (bad) adc in pop lods pop fnstenv fldenv dec push xor xor jmp bound ret mov push sbb add js xchg je pushf mov sub add movsb arpl fs cwtl int3 inc fldenv sbb lods (bad) rclb int out in int pop sub loop sub inc lods lods cmp movsl and test je pop cld stos dec sbbb sub call and mov (bad) mov mov cli test xchg cmp adc pop add mov add out pop fcoms add imul dec xchg jmp sub or dec lock lahf cmc push mov aaa sub inc popa pushf dec and xchg sahf jle push scas jne pop cmc int3 mov jmp add xor jae in outsl lods (bad) mov dec add aad mov adc push (bad) adc je ret mov xchg pop add push mov int push das pop mov jno jb clc xor or enter fs scas outsb fcoms clc je pand imul pop scas jo cmp (bad) xchg iret loop jb add sbb lods fisubl enter in add xchg push jb (bad) popa ljmp sbb sbb cmp loope adc subb sbb jg jne xchg bswap insb xor jmp (bad) (bad) jp inc data16 mov ljmp adc push sub and cwtl xchg (bad) cwtl ss jl lods cmp lahf test fcoml or adc ret mov (bad) sbb or mov mov sbb and jo pop frstpm(287 xchg nop push sub das pop into xchg mov xchg jp mov div mov inc mov fisttpll mov nop sub ja inc lods ficoml mov xchg mov repnz cmpsl push stos add into hlt popa hlt outsb mov mov sarb xchg shrl loopne mov pop les jl js dec cli and sub ljmp insl push movsl cmp push and lret jbe dec out sub test shrl mov je mov sbb in lea shrl test dec mov adc mov stc mov cmp xor ret sbb pop andb loopne je scas pop and lods mov imul ror popa lret jae adc sbb or test cmp xchg inc outsb sub loope mov repnz xor mov xchg mov jecxz mov or test call mov lret jns (bad) or shl push fnstenv sub mov xor adc push pop push pushf data16 shll jl cs and ljmp out mov mov push loopne push lret lea sbb sub sbb scas fadd mov ret hlt mov mov sub and arpl add fdivs aad fimull pop dec dec pop ja out push jg cs popl push jl popa (bad) ret cmpl in dec cs push mov (bad) xor or cli pop mov pop call iret in xlat push insb mov adc div sbb jl je arpl push rcrl cmp popa lret xchg (bad) cmpsl jp inc mov pop jno in adc repz scas mov call adc bound and fistpll lods sub pop mov dec (bad) dec sub aas push sbb dec fsub xor mov imul jbe fsubr repnz cli push (bad) enter jo push mov scas ss mov add xchg out xchg sahf fdivr lahf xchg outsl idivl insl sti mov clc sub xor loope sbb (bad) push xchg out dec inc pop mov movsl mov or push enter xchg jb out mov int3 mov fldt mov pushf cmpsb test dec dec ja jg sub pop punpckldq xor xchg (bad) loope call (bad) (bad) inc test lods lret mov js hlt pop cltd mov inc and adc mov mov push and scas and sub cld (bad) fsubl add or dec sarb sbb aam test ja sahf lret lret cmp push push sti test xchg loope pop jns les xchg in cltd ds jg mov and in (bad) sbb fidivrl out pusha push lds movsl insl int3 mov dec or aam out lret aam xchg pop xchg add add lret mov jb movsl jb dec dec mov dec fbld loop add adc add push lahf lock iret in leave ljmp add mov out bound xchg push scas mov stos mov jbe (bad) enter out inc dec pop sahf mov mov loopne add xchg (bad) repnz loop iret jecxz sbb sbb jmp mov cmp ds cmpsl jbe adc or push xchg mov lea xlat stos sub adc sub enter pop aam cmp stos cvtps2pi add mov cmpsl xor incb hlt and jle adc mov sub movsl add out in daa xor mov js fsubr scas fadd fsubl rorb addr16 (bad) shr cmp xchg xor sahf icebp xchg inc mov (bad) ss outsl and out scas jp adc (bad) pusha sub rcrl jne push push mov in fcoms mov mov cmp in mov xchg test arpl mov lcall in fsubrp arpl adc pop cmpsl xchg fwait dec in mov (bad) (bad) inc adc dec mov stos dec (bad) (bad) out dec pop std mov xchg push mov movsl ss das fnstenv jns std in je mov popf cmp stc and (bad) repz dec leave push mov inc ret and data16 into jmp lret push hlt cmpsb jno mov sub adc mov dec call insl xor test push fwait mov xor iret lret mov andl pop xchg mov hlt daa jle sbb cmc lret pop inc dec inc cmpsb inc mov std jbe imul add and push xor jno movsl lock (bad) das out xchg (bad) fnstenv cmpsb sub jb in ret scas pop push cmpsl insl repz jl and adc gs scas outsl dec or cs stos in and xor insl test dec pop and frstor mov xchg bound fs cld add sub clc (bad) xor negl lahf fistp lods jo ss rep sub cmc push dec popw inc push fwait add lds push vpsrad mov jl in cwtl inc xchg ret daa and dec out rcrb test pop and (bad) mov push sbb (bad) cmp pop or sub mov int mov sub jp pushf aam mov bound adc (bad) xor std lret inc adc push add and sbb pop jmp mov cmp mov sarl push dec lods in mov les outsl inc loope insl cmp test notb insb mov jle loop pop (bad) mov fidiv inc mov adc inc inc inc sbbl insb and (bad) jge das sbb jge add shl arpl (bad) cmpsl push js mov dec ret (bad) sbb jbe xlat jmp add (bad) dec in pusha daa jge add fisub out cmpsl mov mov mov pop sbbl dec lods out (bad) outsb push cmp xor rclb jmp xchg imul sub sahf lds push cmpsl sub pusha mov icebp xor push adc lea jge in xor xchg pop cmpl xlat (bad) cmp iret test stos xor push mov scas xchg test in scas push cltd dec pop jns push loop xchg sbb cmp je push sahf pusha sbb sbb les mov fsubs movsl inc scas dec lods nop ret jmp inc aaa add mov cmpl or scas idivb cmp repnz or mov sub add (bad) jno sub push pop cmp pop add loop pop mov jae aas cmp in sbb inc stc sub (bad) push lcall addr16 mov jns jae dec aam loope and sahf lock jns ljmp mov ret test ja sub add sbbl test pusha int3 push loope push data16 and mov sarl mov loop xchg inc jge insl and aam sub add sub cmp je fild inc iret sub xor push pop lds aam jne and inc test lahf sub cmc push pop push push mov add stc xor jge mov je (bad) pop cld int test jg das gs ja mov sub test movsb xchg dec xchg rorb mov (bad) call movl dec sbb mov mov insb ret xor mov mov imul or movsl enter bound shll cmp enter jmp in pop cmpsb pop (bad) ds fsubl (bad) xor cwtl (bad) leave (bad) dec push jns shrb leave mov movsb jb pextrw inc cwtl cwtl lock fwait lret mov nop sub subl and mov xor out inc dec mov dec repnz lss (bad) dec inc fnstenv enter test mov jmp sub xchg push inc inc sbb fidiv rclb jl add push xchg push int add rcrl shrb cmc stc sar mov mov jne in sahf (bad) add lret xor mov ja outsl xchg idiv push hlt dec xchg or imul sub pop cld and or cs sub adc mov inc mov xchg out inc mov les iret add je fsubl adc ss push mov fimul rcll mov push adc test outsb out and outsb push (bad) jmp jmp cmpsb adc mov lahf scas xchg icebp pop stc js xchg or pop fiaddl mov dec out fnop enter imul cmp pop iret xchg (bad) xchg pop sub xor pop cmp (bad) xor cmpsl sti jne mov sub mov es mov pop nop mov pop subl xchg (bad) xchg mov aas xchg in add ljmp mov lret loope insl pop dec mov mov cmp adcl addr16 icebp jb push ss inc ret add sarl cli ss pop vsubpd dec cltd (bad) jae add mov subb mov movsb fs xor jmp push movsb ret ret insl daa xor cmp lds or pop (bad) xor add stc mov pusha loopne sti dec jmp std (bad) fstp in pop cltd jbe xchg ret adc fsubrs xor into jno mov push fstp lcall (bad) out mov cmp insl xchg sbb push (bad) xor ret xchg adc rcrb pusha shr sbb (bad) mov daa and sub pusha mov (bad) jg inc out mov push je test (bad) xor sahf in out cs or insb fisttpl (bad) mov popa or popf mov and int3 mov js and stos dec mov inc xor mov in in lea jbe movsb div mul or das sbb mov pusha mov mov and inc fisub (bad) mov movsb decb inc out scas mov dec aad mov xchg push mov pop int cmpb or jp in movsl or inc sub (bad) sbb (bad) mov (bad) in inc arpl dec fisubrl adc pop mov or int cs jne jg pop aam dec out mov aad pop mov repnz and iret xor je sub jg adc stos cld call pushf xlat or xchg jp (bad) mov lods jle jge mov jl inc insl scas into mov les cmc cs pop push inc and lret bound (bad) xchg icebp mov std mov sbb xorl movsb pop fs (bad) or pop fiadd scas outsl enter arpl lods lods (bad) mov sub pushf (bad) fildl stos add xor lret add fidiv aas imul add add rcl and add sub dec lret cmp xlat je sbb inc xchg outsl sub and add enter mov test pop je push les xchg push dec outsl clc jg mov (bad) out dec movsl xor pop lret jnp lahf mov stos or and sahf xchg adc push outsl andl sbb arpl nop in popf mov test ss jbe leave xchg mov jge iret test cmp mov mov out xchg lods (bad) jo into mov fisttpll jg (bad) xor xchg stos pop inc cwtl or xchg push mov mov adc xor cwtl andl pop call pop dec dec arpl int3 scas xchg shrl mov scas cmp dec lret sub sbb add (bad) fiadd shld xorl push dec into hlt jmp dec pop push cmp arpl xlat js fdivs cli or out mov sub es cmpsb repz sbb pop js jp (bad) (bad) mov pop rcrb cmp clc sbb into sahf bound test clc and sub pop sbb (bad) jnp lret inc xchg in mov and popf std mov in data16 insl or (bad) jno adc cwtl mov (bad) (bad) jp popa xchg orb xchg xchg sub pop and lret (bad) ljmp and movsb sahf imull sahf mov mov pop insl (bad) aaa cmp xchg in and stc dec addr16 push aam mov mov and push aad cmp inc inc adc fbstp rcll bound enter pop xchg jecxz pop fnstsw decb pop dec das push pop test adc mov daa cli outsl jp adc push ror out (bad) jbe sbb fbld push fs inc scas cmpsb stc cs adc pop insb cmc xchg mov xchg mov xor sarb pop jo es aam int3 das mov add xor push xor cli dec shrl cmp (bad) icebp inc adcb imul xlat (bad) xlat mov movsb pushf icebp pop sbb repnz mov jg jno fistp int3 ret inc mov mov test (bad) out cmp nop sbb xor lahf sar add popa add sahf mov mov cld fidivr add arpl mov outsl inc sbbb popf push (bad) lock push inc fimul push inc fsubr xchg loop sarl or jo je movl mov (bad) mov and ficompl mov pop lcall pop aaa shrl push (bad) mov pop mov xchg loope out lret mov cltd daa push push pop jg (bad) punpcklwd inc push xor mov xchg inc aam addl addr16 push jmp (bad) add sub push pop je insl jge xor xchg test outsb idivl jmp pop insb dec jmp movsb add int3 cmpsl jl addr16 push push jnp ja push and jb bound pop sub mov mov dec inc (bad) jecxz ja rcl lahf cwtl adc daa fnsave inc test or or fsubl push jno int pop sbb inc mov (bad) je sub dec insl in cld pop loop pop xor arpl inc push test popa lret (bad) mov in mov sbb into jbe xor lret ss (bad) ds out nop push dec pop mov loopne push dec out or jns cs sti les icebp inc push xchg adc push mov stos arpl ror cmp (bad) int3 loop sub cmp (bad) in movups lret icebp jmp add das jae push fidivrl out mov (bad) jb lods inc push std in movsb push aas xorb stos outsb ja rcrb mov mov mov mov cwtl and ja (bad) icebp popa insb mov test mov xchg jb or mov rcrb add push inc pop mov arpl xor adc mov mov cmpl es enter adc into test mov jbe lds sti in test jmp addr16 or shl enter scas mov add xor inc fnstcw call rclb stc cltd dec adc pusha lahf and and (bad) adc inc jmp inc cmp push in xchg push jne cwtl dec pop insl lcall jl sub popa stos in pop xorb int or mov lods jg in add jle sub inc daa fs inc int3 pop testl add int inc or mov adc mov daa and push ret mov stc push imul pop daa test leave push bound dec in cmp ret sbb (bad) cmp dec inc arpl dec dec cmpsl or cmp ljmp fist jge mov inc inc je jb (bad) ss mull pop cmpsl fidiv inc ss sbb pop pop sbb lea lret rclb shrb lods push jbe loopne loop mull lds xorl cmp lods add scas jl lods or sbb movsb (bad) lret imul xchg cmp adc lcall lcall mov aas mov ret lods add adc movsl lahf sarb xchg pusha stos loope mov mov (bad) jae fwait outsl mov subb xchg mov add mov shrb ljmp mov test mov sbb ret fnstcw int lock xchg lds mov xchg add xchg cmp pop std icebp cmp inc and (bad) or cmp outsb sti mov sub lods push push cmp or into dec and fwait lods pop scas push fs outsb mov repz rcrl movsb jge lcall hlt cmp stc dec and notb dec mov call pop jmp or out je push adc mov movsb popa sub ss dec leave insl clc inc sbb fidivrl unpckhps adc fnsave push (bad) out data16 lds lock ret mov pop xor lods dec rol dec add sbb dec shrb mov push xchg pushf and xchg pop add mov loopne fcmovnbe rcrl call (bad) push lret cli dec xchg dec jno xor aaa movsl hlt lock int adc xor jb or lret les cli in stos pop repnz or mov push xor test jns jae xchg cltd xchg cmpsl pop sahf push or pop jns push stos xlat mov ljmp jo shrb inc mulb push stos adc sbbl out aad jmp sub or in adc and lock cmpl fiadd jb xorl push repz mov jl jnp jnp jl mov mov movsl add cld rcrb or lcall in inc sarb add pop adc adc dec gs lret es std scas mov mov push rorb mov cli imul push pop sbb mov scas test mov aad dec sub out cmp mov sub pop cmp jp es mov mov daa push and js and movsl adc ret movb out outsb jns cmp add enter sub cwtl or push cmpl dec jns test sbb addl inc mov mov rorl and push push andb iret inc mov cltd cwtl sub inc divb ss ret xchg jl mov jmp sbb jne mov imul xchg sbb fadd xchg repnz into mov mov out fcoms sub roll push aaa mov daa (bad) aaa xchg pop mov ss pop sub imul cmp lret ret sahf movsb test ficoml sbb cmp lcall in or jnp adc jge idivb cs lds adc jb into pop jp inc mov dec ds dec aad xchg dec cmp movsb jno outsl xchg in enter inc lods xchg sbb es fiaddl sub scas int or bound imul xor sbb xchg outsl cmp jecxz push pop pop ds test divl in out mov outsl adc jmp push xchg cmp sbb adc or mov adc cmp scas mov xchg ret add (bad) and mov mov or xor xlat out aad (bad) dec in pop dec pop nop into add jno (bad) out sub or dec jne out das sbb and (bad) jns (bad) out push mov hlt sti cmpl (bad) mov adc mov sahf pushf xor pushf in loope sbb dec lret repnz nop cmp call arpl repz js dec out test fbstp pop cmpsl aas fmull mov out xchg leave pop or fs pop test mov xor cld add les das pop test push rclb in xor cmp inc mov push xor pop cs mov push aas lock jp mov mov xchg pop popf adc lods mov stos gs adc inc lcall dec stos ds fdivs mov fucomi cwtl cs imul loope adc (bad) mov fwait cmp repnz dec mov cmp stos xchg or pop sub jbe push pop sbb loope stc inc fwait insl test pushf mov pop popf sbb lods pop cmp lret mov lahf rclb mov inc add sarb popa loopne stc push xchg stos sbbb add or in and pop mov sbb in jl pop cmp lds or mov pusha fnsave cli and add out mov or out pop push in std xor mov mov outsl inc dec sub push insb jge mov push rorb dec push lahf cltd xor nop mov push in call pusha fstpl jb leave ret insl pusha test nop sarl jg sbbl push or cmp nop add xor inc or adc bound test lret es in sub sbb dec dec mov int leave je xchg xchg xchg (bad) aas mov mov cmp pop in call rcrl dec mov mul arpl jl or leave (bad) xor jo outsb pop inc mov sti jo movsl push add and add sti mov sti icebp sarb dec addr16 or hlt and lods add cwtl loop (bad) icebp mov mov jl jbe mov jne mov (bad) dec pop lds jbe cmp ljmp push dec fstl cwtl jns sub push ret push and data16 mov add push or jge xchg test or mov mov cmp bound scas push imul aaa mov (bad) cmpsb xor xor cwtl sbb data16 xor in es jmp cmp (bad) or test xchg pop lods pop xchg push push jbe popf mov add and xchg push dec ljmp and dec lods xor loope and jae jnp push cmc jmp bound and mov std inc push adc mov (bad) sub lahf or dec xlat gs int inc enter cltd mov shll clc fdivl push mov cmp add mov imul pop data16 mov sub push lods mov loope sbb ds pop mov cld mov and dec mov add cli imul insb mov std cmp adc (bad) lret sbb stos pushf sahf arpl mov pushf test stc xchg sub xchg push es andb addr16 pop inc cli adc pop mov testb mov adc jbe mov pop xchg jmp adc adc sarl lret aas bound or (bad) add lds adc insb js aas and hlt pusha ficoml mov loopne xchg out arpl sbb movsb incl (bad) insb sbb push jp (bad) mov addr16 ja jo dec sub int dec dec pop sub and jp scas dec sarl mov popa cmp adc inc mov mov dec mov out and sbb push fldcw dec cmpb (bad) xor je and mov push pop out ret or jecxz pop dec stc add and add in call mov daa in movsl ret sbb loopne ljmp xchg ret dec ja fs and jp cwtl pop js cmp js ljmp dec aaa je inc adc sbb or cmp lcall dec (bad) and pop mov nop push scas xchg pop (bad) cmp les mov cmp lahf dec ja cmpsl sub mov inc jns in sub js std cmp mov lret es xor subb pop ljmp push pop cld sbb adc and inc inc mov mov and inc hlt xor outsl mov sub push scas mov pop sub inc xchg or iret iret daa call sbb inc dec jmp cmpsb stc mov and sti fmul rcl test cwtl sahf and push push mov gs out mov jnp jns dec out jl add jecxz push addr16 subl push fwait out xchg in insb or fbld mov push mov inc lods (bad) pusha xchg out sub lods inc divb cwtl mov cwtl xor and mov fdivrs push inc lret push xchg or fwait inc inc push cmpsb pop and pop mov cmp and lret and sbb push cli lock or pop and or cmp fsts xchg lahf icebp mov ret punpckhdq sub (bad) aad cmpl arpl pop mov and or dec popa push and popa cmp loopne lret sub jbe incb out adc jmp adc iret inc not adc adc rorl mov add mov cmp jmp or subl inc add movb dec clc aaa lret cmp pushf fidivrl movsl mov jg jg xorb leave pushf push ret mov ss les leave dec out push add cmpsb in push aad lcall in (bad) sbb pusha fstl lahf fadds sub xor inc mov enter pop xchg into add aad push ret xlat jl dec or cwtl adc sbb hlt clc xor pusha jae fistp out test push jmp inc push mov mov icebp je mov jno (bad) call loope push sub xchg dec movsl aas out dec insl repnz (bad) and inc (bad) (bad) outsb call sbb push mov pop scas xchg int3 pushf sbb mov scas loop mov dec aam aad mov mov fildll xchg xor scas jg xchg imul sub loope pop mov out xchg xlat aad push push lahf paddsb clc shrl stos jae lret mov mov (bad) mov imul xchg sarl inc jmp push notb out mov popf xchg (bad) (bad) pushf fsubl push (bad) lods dec xor repz lock jno mov movsb jo inc ret mov nop lret or sub lods test mov add gs pop adc mov mov gs aad mov dec pop cmp (bad) cmpsl shll xor dec fldcw jp movsb xchg popa jge sbb jo popa xchg into and pop (bad) outsl sbb inc fcmovbe in dec mov cwtl pop dec or cmp push hlt test fdivp inc jne jnp js xor aam aad rorb mov mov mov int3 in mov je pop push adc pop sub bound fs inc outsb or gs adc pusha add mulb sbb mov jo cvtdq2ps sar in inc push cmpsb inc cmp movsb mov adc sbb (bad) in repnz test pop mov jg inc mov mov dec xorl xor or mov clc pop sub stos mov cld sbb dec loop and add push int inc push push iret in test stos pop enter popa test inc (bad) bound cmp aas xor inc fiadd dec fistpll xor pop mov stos push xchg lret test inc cld fprem1 adc cmp mov (bad) (bad) mov icebp pop data16 ror add aas roll mov inc xor ja or push mov sub pop sahf lret mov jae push ja outsb xor jae add sbb imull jbe lds shrb hlt sbb inc adc mov cmc adc dec cmp popf pop out cmpsb rcrb inc add std fisttp and jle mov adc xor push lods mov dec adc push lods lea outsl pop pop push push mov in ret mov fs add dec scas loope push push nopl test xchg or pop dec sbb out or dec imul lcall sbb lock cmpsb xchg call sub cmp mov test and sbb cmpsl sub and into mov inc dec out cmp mov mov fwait and pop pusha dec jnp cs pop pop icebp and inc or jge mov test or jae cli maskmovq inc push into in mov aam pop dec jmp jb,pt dec dec jge daa icebp mov inc and jo jno xorb (bad) rolb xorl cmpsl or push enter popf out pop xor inc jl inc das jl cltd and and inc and js or mov jnp lea std or cmp inc in sbb jbe and lahf adc fmul jle cmp scas xor movsb xlat (bad) ret sbb out cmpl bound je jmp insl aaa sub in int mov mov cmp xchg jmp inc test (bad) mov insl (bad) lahf test push (bad) hlt mov lds or sub push xchg pop (bad) insb in ja test aaa testl pop adc data16 in add iret push out mov rclb push add pop divl insb (bad) out fsubr icebp sub cmp lock or or jge cmp cmp test jne pop bound lea inc pushf (bad) cmp xor (bad) cmp mov lahf outsb cli cmp in divl and sbb and inc pop cltd fist cltd mov xor repnz nop test js push fnstsw movsl inc sub jnp adc mov (bad) push jns mov lods pop pop add xor mov cmp iret or insb mov cmc xor repz icebp cmp lds ret outsl (bad) icebp jle pop loop loopne mov cmp popa jge sub in das repnz (bad) push addr16 sbb fidivrl xchg inc pop pop mov das shlb rorl cmp adc data16 in push in iret movsl daa mov mov jb js scas pop or pop popa scas and aam call fnstenv or lods mov or ss xor jae mov pop mov repz je pop push mov jle scas push or outsl repnz shll rcr mov jmp lcall arpl sub sar hlt test out and jbe cmpsb fldcw paddb mov int3 xchg pop out add fstps and movsb stos in pop out sbb sub es (bad) xlat cmpsl int3 push in push fcompl xchg rorb and addb mov mov nop sub add (bad) push or imul cmp in push pop loopne int3 pop xchg or enter dec inc data16 inc sub sub push movsl push roll inc sub outsb sbbl mov pop lea jns or dec movsl pop dec sub mov dec les xlat inc or in inc jo arpl mov ss test das cmp push insb dec fdivl add inc pop mov inc adc daa fcompl mov jae clc push mov imul sub mov pop and stos outsl jge mov mov and addl push xchg push into repnz loope mov inc test mov fisttpll rcrl es xor loopne and and rcrl sti arpl or bound fdivrs ja mov cmpb mov mov lds popf jns roll xorl add pop in pop fstps movsb dec lds js lret out sti push jecxz lcall (bad) out sar cmp jae clc sub and fs lods ret pop popf movsl repz into fimull mov adc ds mov adc inc push (bad) jbe stc arpl dec adc in test std adc cmpsb pop (bad) divb fnstsw sbb scas sub xor sub jmp pop pop std shrl inc jno mov ss int3 push and or fs loopne xor ss imul or call mov add loopne sarl dec insb sbb mov ja fdivrs pop push inc int3 sbb jmp and cld pop (bad) push lcall cmp and mov js sub sub icebp mov pop push push cmp xlat cmpsb outsb jle jge out mull mov call mov xchg lret inc lds or add adc adc rol cmp fistp push popf push mov mov in sbb enter les cmp scas jne in mov inc inc enter fiadd mov sbbl in xor lret cmp movsl xor jecxz in lods mulb gs insb dec shrl scas aaa fwait add push jmp (bad) dec enter pop and and add add in dec fnstenv and int3 aam shl dec xor je adc xor cmp add add and loopne stc movsl pop rolb dec cs add scas in xchg jnp cld and sub xchg inc mov jae xchg inc add cli pop in pop mov mov (bad) xchg add pop iret xchg xchg ret pop dec call dec sti inc push in (bad) out aad (bad) fcmovnb out setnp pop inc sub cmp sbb sub lea mov gs leave in inc fidivl movsl sbb sbb fs (bad) dec aaa sub negb daa test push inc xor (bad) fildll push addr16 aam imul pop dec xchg xor andl jb fldt out ficompl pop add test inc cmpsl xchg add repz adc and ficompl lock testl inc movsl jg adc xor pop cli inc leave test xchg inc das jbe subl adc and daa xor pop imul cli cwtl pop (bad) std (bad) stos mov enter mov mov jns pop cld inc in inc jle jl push xchg fidivrl inc sbb xchg (bad) shll sbb popl pop lods lret xchg xchg sbb cltd imul stos fcmove cmp mov aas lods orl mov cmp push sbb xchg add mov mov pop repz jmp add fisubr sub les xor shrb add (bad) sti shrl mov cmpsl mov idivb cld mov ds data16 mov sub insl mov pop ret or outsb (bad) bound add push xchg lock or ss ss lahf jb xlat mov in mov cmc popf xchg or test les mov mov mov insb out pop test dec xor rorb lret orl aam pop ljmp cmp and adc lcall aam cmp mov xchg es and mov mov push mov adcb mov mov lcall cli shll jp rcrl jae mov subl dec js test test (bad) movsb ret pop cmp fiadd mov and ljmp (bad) push scas movsl in aad call lods and nop (bad) rorb pop mov std push or xchg mov adc movsb jle (bad) lret push jnp push imul (bad) insl add loop xor dec pop or popa xchg sub jle in mov pop ds js ja jne xchg xor imul mov xchg test out rep repnz push or inc loop sub stos stos xchg mov inc jg ljmp sub push movsb or pop rclb mov ret push (bad) cltd add or nop pop and imul push mov mov test mov push push push in cltd fist in out adc loope aad lds daa arpl jns cmp cltd fs sbb mov aad mov daa add mov mov cmpsb lret or inc fnsave (bad) insb jecxz int arpl sub push aad xchg xchg imul enter fmuls sahf ja clc xchg xor fwait dec sbb pop dec push movsb out clc inc xor sub fsubl jmp stos (bad) jmp sti hlt cmp and dec and sub xor pop loope cmp dec mulb cmpsb mov add sbb lods xorl inc (bad) loop push into jp bound add daa jge dec arpl mov aas lock (bad) push jae das mov dec das pop es push shll imul aam cmp outsl test lret ds lret push xchg inc mov ljmp inc cmc xor add cmp mov ljmp movsl push mov push loopne xlat inc xor jae and adc xor xchg pop dec inc sub in jge sbb movsb test mov lds xor adc jp mov mov xor pop push (bad) call shrl aaa pop js mov jge ds arpl data16 fdiv call icebp mov stos sub adcl push repnz sub adc or outsl xchg into add stos mov push andb push inc lahf fisttpll insl cmp jmp es ljmp xchg sbb loop sub popa ja out mov mov xchg cmpl adc or rclb lds rorb std scas dec pop arpl dec pop out cltd sbb mov sahf jnp stos or cmp jg mov bnd ret inc or inc arpl in add sbb push push pop clc jle push int3 pop test sbb pusha add js sahf cmp jno xchg out dec jmp gs ss ljmp mov jae xchg mov sub xchg inc (bad) fucom fsqrt add into cmp xchg rolb sbb jmp fldt mov inc mov xor pop stc push insl adc das je inc in jnp cmp popf add fdivrs fdivl mov icebp or cwtl jg pop sub in cs and hlt mov inc xor cmp inc fs nop sbb rcll push xor iret cmp test in call (bad) in pop cmp cltd cmp push push (bad) and pusha imul mov sub out imul ret inc inc out icebp push jae add inc adc pop xlat mov ljmp pop (bad) lret mov xchg xchg in push test cmpsb cli xchg pop rol in loop dec and sarl jp mov dec aaa ds bound addr16 ficoml inc or pusha mov inc out push mov inc dec jns bound je cmpsb lret mov out repz sub inc mov or jb into jg dec jne mov aas ljmp (bad) in mov outsl (bad) pop sarb pop inc int3 ss adc dec add (bad) test jbe jnp cmp push or mov jae inc outsb inc xchg cmp or pop lret cmp or push and or mov push imul int and loope das test cmp stc push cltd push push lret or rcrl mov push mov xchg daa jecxz inc and sbb jno dec ret insl sbb mov push imul push aam adc push xlat pusha mov push fisttpl or sub xchg push pop cmp inc jne jle test movsb add push mov inc cmp in subl xchg jge mov into insl out xlat pushl mov mov inc fcoms sub lahf stos aam and into lock mov jg or pop (bad) xchg or xchg pop pop imul mov test test loope out cmp xchg pop fs cmp sub dec add mov cmp fwait inc loop sub in loopne aas lret jae cmp inc dec mov add repz gs lea cltd nopl add cmp rcrb (bad) fdivrs mov ja mov mov test add dec or add sbb mov mov xlat mov ficomp js mov outsb ss jbe lds xor sub sub (bad) data16 jnp (bad) mov popf sub mov sbb pmaxub fwait push or xor pop cmpsb xor ret add andl lock add clc rorl fisub mov test add pop sbb in sub fstl pop mov fstpl pop cmp adc jne and jb jbe js push dec and inc or outsl mov fiadd lea dec out addr16 call in mov inc jns mov lcall out xchg ljmp movsb sti push leave jle loop dec jg sbb xlat inc out rcll push in outsl mov push daa adc jne xchg das sbb sti test or or xchg stc lea dec loope xor js sti ds aam push mov add push jle repz dec outsb lea pop mov pop (bad) fcmove mov pushl or js repz mov and cli in mov xor lahf jecxz adc inc mov out shrl jmp jbe daa insl and imul xor and jo pop push pop js hlt loope,pt mov mov test imul lods mull jl cmp imul push aam gs push fmul mov sahf ret push cltd (bad) adc jmp jne pop loop xor jge xchg sar cld add xor sbb test incb xor pop xchg mov mov lcall xchg fld cmp daa sbb call (bad) in cltd ss jge lahf imul add loope jo mov xchg pop pushf push cwtl stc dec enter out sbb sti xchg xlat push mov and xor loop test or lods jle mov repz outsl pop in out mov jecxz sbb negl and es mov mov mov dec jns mov xchg and add aad mov sbb inc xchg push shll pop imul add int3 dec inc or lahf jmp add sub sub push xchg or bound mov and jb jl mov imul scas add sub daa shrb inc in pusha popf sub push jle cmp clc lret lods mov add (bad) call pop scas jle mov or sub fidiv xlat jno jge (bad) pop (bad) or jp or hlt call sub or repz sub jo xor hlt xor sub add push nop sbb not ljmp push or and into (bad) push adcl jno cmp aam cltd add rcl push insl loop cli rcll (bad) push mov daa cli imul sti jne or jno loop adc mov int3 pusha lcall imul in ret cmp inc imul mov out cmc cmp cmpsb add loope xor out sar dec jae add sub in and add xchg arpl dec inc sti in add mov popa andl daa iret xchg push insl imul mov xorb in les jno (bad) pop adc mov add loop mov sub mov xor xor lret popa insb or inc xor cmpsb ljmp dec and mov push jecxz mov mov mov (bad) (bad) test jp adc inc dec pushf lock cmp stos push jbe fsubp lock test dec mov mov push adc push jno mov test outsb push cltd icebp push ljmp mov dec mov (bad) jns (bad) (bad) arpl mov sub aaa or mov cmp std divb or add stc call icebp loop cld cmp test jge push jg and mov inc mov loope stos scas aas (bad) sti push rorb ss pop fldt int3 fdivr or push pop jl inc inc imul (bad) fldcw enter mov and push (bad) adc hlt movsl hlt arpl pop add icebp loope add mov sbb cmp inc sbb (bad) pop insb sub jg decb xchg jmp js pop xchg lock xchg incl push add lret xor ret test stos mov fcompl aas pop cmp pop pop inc cmp incb test mov mov mov iret and rcll push movsb xchg movsb out lock dec outsb pop lcall jle (bad) cs mov in aas xlat pop js mov clc sbb stc jo fstpt and popf gs sub ljmp js clc stos mov in scas cmpsb sub loop es dec xor das xchg ljmp cmp mov inc xor jmp iret mov call jo sub jge imul add (bad) jns mov mov dec pop scas jecxz and pushf xor icebp inc imul shll pop cmpsl leave sbb pop test pop xchg jbe (bad) lea mov sub not xor (bad) cmp aam pop dec int ss pop ret push inc adc pop jae lods xchg sbb lods dec and mov call cmc mov icebp xor (bad) add mov aaa fnstenv adc jno popa int stc es nop jnp decb test xchg test insb in pop bound mov adc clc and rolb jns fdivs in xor push inc or jbe inc outsb out sarb scas fimul test adc aam fsts repz xchg pushf pop dec or xchg stos jnp adc inc loope jle into sbb lahf dec movsl xchg xlat add int3 in (bad) dec push mov mov add aas adc or mov scas insb sub ret test divl jp sbb jbe jnp decl or adc cli lea push cwtl inc ja push lret jb lcall lret push xor lods bound rcrb xchg movsl push jg jbe jp fwait or fimull push inc insb xor icebp mov cmp sti push mov das fwait out mov push (bad) mov movsl dec stos mov gs insl cmpsb dec cmp insl out pop mov add cmpsl xchg jne pop jl lds jmp pop inc clc cmc hlt pushf hlt adc sub inc sub (bad) xchg sbb cli clc push sar int outsl in xor mov mov xchg mov dec scas popf in sbb pushf push mov pop xchg out daa sub test ret gs jns cltd pusha ja imul int add mov mull sti xor add es inc or cmp int3 andb pop ja mov mov sbb sub xchg mov (bad) pushf loop xchg bound shlb adc (bad) std inc scas sub lea daa (bad) cmc mov fidiv cwtl jl fldcw ja rorl mov mov push mov add mov scas or and push cmp cmp cmp test mov mov push popa jnp je and sbb push (bad) xor ret pushf pushf fcompl lock gs xchg ds leave fidivrl mov inc fcompl imul push jle push aad sahf and bswap sbb inc ret pop cs out fcmovu inc lea fwait ds sub bound mov jns jmp stos xor mov sbb xchg xor cli mov aaa mov dec ds loopne mull (bad) into (bad) (bad) scas inc sbb sub cmp js scas test cmpl popf into mov xor dec jo int3 aaa dec ds inc and jae int3 sub add lcall push jo das ds add mov cmp or lods dec inc stc adc sbb popa fstps (bad) fbstp jb loope xchg shl pop jge (bad) movsl movsl (bad) jne cmp test gs add lea xlat (bad) mov jnp daa cmp pop or repnz jns cltd push push cmpl sbb lods dec js mov jb pushf pop ss addl repnz outsb scas cmp jno (bad) lods rcr and dec out ficoml fstp xchg (bad) or movsb nop cmp loop loope mov jecxz push add jecxz ljmp or xchg inc lret push jnp pop or lods mov xor insb insl movsl xor ss rcrb loop,pt stc loope dec fsts xchg sub cmp and stos inc adc pusha lcall shl movsb cmpsb sbb sarb popf adc and mov roll jl pop (bad) call mov jmp push mov rclb (bad) xor xor ds adcl out pop iret pop shl bswap stc test je fldenv add repnz ja pop andl fld sti push mov and loope popa cwtl mov jbe test mov inc and scas mov fdivr mov and jmp sub into sbb xor out dec add fmull push pusha push adc popf outsb cmp lods mov mov aad mov stos insb fincstp push jp and ret mov lods mov cmc in mov sbb scas out repnz push jnp pop leave scas fs inc stos insb adc lahf mov lret sub dec push imul xchg popf pop popa sub inc (bad) mov and sub movsb scas xchg inc icebp push fisttpl cmpsl lods pop add dec add and fisttpl cmc xor out pop pop dec mov js jp mov mov push repnz fbstp mov mov fisubrl ja,pt jo sbb mov (bad) lcall fwait mov js,pt xor mov mov adc scas les xchg pop orl push (bad) mov aad roll mov (bad) (bad) cmp and ja push mov stos adcl (bad) cmp and sub movd int3 mov nop push adcb int3 out push icebp je arpl xor ja repz hlt and sub jecxz test and add jge in mov icebp push js push outsl and mov jns adc inc repz dec int3 jmp cli push sbb and pop inc fs jbe mov sub gs cltd and push cmp nop or push dec movsb xchg mov xchg push cwtl sub inc pop sahf and push dec cmp adc cwtl cld xchg mov fadds inc dec stos pop lds xor mov lahf cs cli jg insl notb fxtract mov and sti sub negb lods or int dec pop mov pop mov fwait dec sbb inc insb dec mov es stos js xor mov stos inc xlat push and cmp daa pop inc dec mov mov inc inc enter leave dec insl and inc jns pop or adc ds dec push inc leave test scas scas mov push mov xor aas loopne loop and cmp iret push data16 lock pop adc mov call push cmpsl mov cwtl adc xor jg dec andl sbb daa xchg xor mov adc fist mov add test jg sbb pop xchg ds ja xor mov lretw pop insl pop inc out int shrb xchg and je push out cmc inc pop mov out adc push cmp jb jp xor std stc leave or add sub inc jecxz push inc pop mov dec (bad) mov dec pop test push dec movsb push sub (bad) adc sbb stos (bad) std lea jo push nop pop clc push (bad) sbb xchg add pop pop cmp sti mov xchg sahf push outsb aaa dec cmp in push pop push adc js lret scas stc dec add repnz dec add repz cwtl cli mov pop popf js mov ror stos pop int3 addb outsl xor cmp dec imul jae clc xchg jbe std les ljmp jns stos in fsubrp ret sahf sub push fwait stc pushf punpcklbw cld mov mov (bad) xchg lret (bad) push clc sbb and (bad) out jg dec hlt add dec lret cmpsb das loope xchg imul or xchg pop je loope cmp mov movsb cltd jl mov mov scas iret lret mov and jmp lcall enter rorl dec clc arpl jae jnp mov sub lcall or cli adc (bad) cmpsl shrl cmp dec das push (bad) xor add sbb stos xorl adc addr16 enter out and jge or xor sbb mov jmp insl adc sbb jae xor push push dec scas xchg or jnp int3 xorl das add repnz dec call into pop popa dec data16 jns sub into xchg and pop loopne insl in aaa stc pop mov mov adc jne dec jae push or dec cmpsl nop cmp and outsb (bad) xor sbb mov jecxz sbb fstl adc scas push xchg pop cmc loope cmp sub dec loop pop cs mov push mov inc sub jne outsl push cmc adc js popf mov and inc repz xor adc movsl sbb insb xchg push fsubl (bad) dec lret xor xchg out bound lea loop jo pop mov (bad) jbe or addr16 aam add sbb or sub pop stos shll std jo es sub test fxch cmpsl xlat cli mov imul fcmovnu mov jecxz xchg adc sbb xor js push push jp ret in orl and stos ror fwait pushf cli xchg mov call push pop push int add bound andb mov gs push jl lods jl mov mov xchg mov es inc iret mov les sbb sahf cwtl cmpsb sbb jle sub imul cmp out push sahf repz fcoml xchg xor js jne xorb inc pop rolb mov mov pop sub pop xor sbb pop jns mov xchg ja in sbb jp (bad) adc stc adc sub (bad) test dec inc out push push cld mov push pop pop fisubrl lret scas ret out nop sbb lahf inc gs dec dec adc pusha push (bad) sbb jnp push sahf pop mov adc stc push inc ds idivb stos mov test andl xor les push cmp jno xchg lret push test or jg push test add mov xchg jae pop sub fwait jge cmp pop inc sub sbb xchg daa cmp pop stc pop outsl repz int xor inc mov lcall aad xchg cmp stc push inc sti std imul fwait (bad) addr16 scas add xchg popa loope sub addr16 pop mov gs or push add xchg sbb lret aad inc fidivrl dec xchg mov pop call nop addl leave and and and mov jle stc out jne sahf pushf popa adc ds lds adcb and pushf cs push fiaddl push int3 xchg cwtl cmc in pop fstpl and cmc test add mov cmp fsubrs in jnp fistl sub pusha je lock mov xchg (bad) testl les cltd pushf into and daa mov test and jo dec mov jo xchg jecxz dec ja iret jg fwait mov adc mov je and jecxz xchg (bad) data16 mov inc jle loopne pusha pop fsubl inc jp je stc shr ret jne repz or jae sub test std add mov mov sbb jg test aad xchg movsl cmc cmp jp movsb jg pop xor int3 hlt cld mov lods pop popa adc pop jae jne or pop lret lret xchg (bad) lret shlb xchg mov sbb (bad) notb or and mov jl mov xchg push cmpsb add fnstenv rcrl das add lds mov dec pop fidivrl mov jne push pop or jnp (bad) sbb jg ret pop arpl cs insl mov (bad) cmp xchg fstpt jae pop cmp push subl push (bad) and cmp cld int3 leave mov mov inc pop dec mov lcall cmc mov aas cmp jmp imull cwtl pusha push pusha cmp popa jns fisttp fnstenv add sbb sub mov mov repnz push pop xchg mov mov pusha xchg push ja cmp lea xor in lret cmp out push lret std xchg sbb hlt das pop inc xchg mov mov lods cld clc negl sub aaa dec imul inc iret mov sbb andb out (bad) out fs fstl fisubrl jle pop xchg ffreep dec imul sbb pop insl jl pop mov lods sub popf pop mov divl imul sub sub cwtl (bad) push iret out add xchg stos dec xor xor dec cmp sbb inc jmp push fdivs sub sbb fsubrl mov dec pop inc dec dec cmp jae dec mov sahf lods jl mov push fwait add sbb jb inc xchg lods mov addb cmp mov inc das sub fimul jle mov jecxz cwtl xchg psrlq cli fldt jge add jge xchg adc add andb lods add pop or lods test fnstenv jno es loopne lcall nop cmpsb in xchg pop xor add xor mov rol and sub mov mov scas je dec mov cmc int3 gs insb or test stc cmc fdivrl xor imul pop push (bad) int3 loope jnp cld xchg push pop add das pop mov mov sbb int push fs mov test cmp pop stos std divb inc mov adcl icebp loopne xchg adc out test xchg stos adc fwait xchg pop inc sbb lea les je imul hlt lret and cmp cmp jp jmp fucomp lods and nop inc push test or adc das push dec dec sbbl fisttpll jmp leave or xchg addl and js pop rcrb sbb jle mov cs pop sbb pop xchg fstl cmpsl subl mov jne repz stc enter ljmp sahf inc xor jns dec xchg (bad) sub sub mov imul (bad) push movsb sbb aam and sub (bad) cmpsl ds out sub sbb cwtl lods test push sub add ret dec lea std lret aas popa das stc and pop fistpll lret jnp push mov cmc (bad) adc xor rcrl lea pop je mov pusha loopne dec xor cs sub sub sub push jmp movsl lock pop lods enter lea pop sahf (bad) and in jb scas mov adc dec insl mov jge xor mov dec and add rolb aad imull pop xchg xchg outsb mov lret stos test test cmp bound mov jnp cmp in fsubr xchg jmp push lds jne add mov cmp mov push std in mov sbb pop stos sub imul mov mov pop lock popa xor jno jmp inc outsl repz add push into sub cmp lods loop jns sbb xchg hlt xchg in and jle stos imul xor lods xchg xchg pushf push scas sarb in es int3 pop (bad) and push push add cmp push xor jmp inc or add add in (bad) xor rorl push adc rcll xchg sbb lea repz fs mov pushf mov adc pop fmulp inc pop aad (bad) dec or mov iret test (bad) out jns jb (bad) cli std pop lret mov jo jno jae insl xor movsl adc mov jb push adc test (bad) push daa (bad) sar sbb push jg (bad) xor fld1 mov rorl or dec jge inc lods cmp mov ficomp popf and sbb dec data16 sub idiv add dec xchg scas (bad) pop mov dec xchg cmp and cs in xor sub and sti movsl popa add lret mov lcall mov cmpsl sub and rorb and fstp pop arpl ret adc pop or mov scas mov setne mov jns mov lock in add dec mov movsl inc fsubl (bad) sbb lret jno mov aas std leave jmp dec xor mov movl mov mov jp cli ljmp adc sbb sbb jb rcrb lret adc and push negb (bad) (bad) ss out pushf cli je sub dec test cmp add mov xor pop call ffreep pushf push hlt xchg rcr mov adc sub push stc lock or negl mov push and bound pop push rolb js jo subl sbb jg shll push mov movsl fdivrl jecxz push les jle negl xchg das (bad) mov jbe and mov adc jb fxch out cld dec jmp sar les push lea push mov icebp scas xchg jge or adcl lock or pop push or outsl mov jle mov es or push fmuls jecxz repz or sbb repnz lret ficom xor push fstpt sarb call xchg in jo cli push test mov jne rorb jbe dec pminsw pop sub dec fcmovne (bad) test int and sub (bad) jne jmp xchg pop jae jno xchg dec notl pop pusha mov (bad) (bad) cli adc jecxz mov cmp dec fnstcw imul inc xchg js add mov test xchg das mov add or mov lret jmp mov dec cmp mov mov fdivrs rclb ljmp scas mov and scas lret clc sbb dec loope gs int std pop inc mov jne xchg mov xlat cmp cmp mov sub movb rcll pop mov jo sbbl (bad) pusha pop add jecxz cmp lret mov push lea xor jb push sub adc into stc pop push outsl cld push dec push sub sub sub mov mov cli cmp lock pop movsb cld test sbb push out lahf xor pop sbb and add subl dec sub pop sub inc cmpsb adc arpl insl mov cmpsl jge movsl mov sbb xor fdivs dec push test mov nop push ja fldt xchg call adc inc ja daa enter dec and xlat xchg lds mov and loopne inc bound stc aam cmp popa mov in fistpl mov sbb add mov inc cmp dec mov (bad) arpl sbb jecxz adc lret lods pop cmp mov xor sbb aaa sub sahf pushf cs test fwait or (bad) test push sbb jnp out adc (bad) mov xor adc dec popf adc sub outsb mov mov fcmovnb mov cmp test in bound xlat cli push pop mov std aam nop mov jmp es or sarb jl mov fiaddl push cltd ret pop mov xor mov cli subb add jg loope out pop sub dec jecxz xorb les xor mov mov pusha rcr iret mov add popa pusha mov fld mov ljmp jge inc jae ret jg rclb bnd repnz ret or ret fmuls xchg push and test xchg add daa xchg rcl rclb stc inc shrb pop (bad) out add (bad) cmp les pop xor aad mov jne mov mov int and inc mov push push or pop into pop or aas pop dec outsl rcl popa xchg imul in mov stos cmp (bad) jns sbb test cmp inc mov mov pop fcmove aas sub adc mov mov xor pop fidivr loopne jle stc sbb cmp sub fisttp sbb lock pop cmp mov cs out xchg push ret pop jl mov push add mov decb lds jne mov sahf cltd aad cmpl insb cmp xor add cmc ret aad lods cmpsl xchg loop cmp in hlt xor dec stos xchg xchg in xchg mov xchg imul xchg call xchg or pop iret xor pop cli sti fidiv jo fsubs lahf ds aaa inc sbb dec nop pop push xchg push movl lcall movntq jnp mov mov hlt movsl jnp out stos (bad) xchg les xor xor mov add dec aaa daa stos dec in cltd and dec lcall or aad clc xor clc lea adc dec push stos xor inc mov aam inc adc push (bad) out and xor data16 xchg sub out xchg mov inc xchg cwtl inc jp divb cmp jne fisubr jp mov pop push cli mov pushf lret add jmp outsb scas push sub cltd xchg pop adc fscale loopne int3 ja in and leave in mov insl mov inc dec xchg pop in lods jns fdivrp inc clc nop cmpsb inc pop cmpsb cmp mov bound sub sbb inc (bad) pop push repnz mov jns mov mov mov mov or adc and cmpsl out adc and leave test (bad) pop gs pop fstl dec jnp sub into xchg mov dec lds fldl stc add enter jae bound lret cltd retw cmp ret (bad) out pop mov adcb daa rorb mov xchg push aas mov jmp fisubl iret arpl push mov popa scas shrl or mov outsl xchg sub stos lock ret iret mov mov cmp mov sub push js xchg fisttpll fnstenv cwtl mov sarb mov xor xchg rol and jecxz mov xchg cmp mov inc (bad) sub jae mov pop mov lret bound cmp mov mov jb jne xchg inc lds pop mov int js or in pop popf out aam sbb mov into mov push enter xchg outsl lcall outsl or out jno push mov in add insb fdivr out cwtl (bad) out cmpsb cmp int3 les push in (bad) pushf lret push add fldl mov jle loop ljmp mov inc push cltd std dec shlb es and lret lods test popa test adc notb lds jmp xor sbb les aad jo aas mov enter aaa popf cltd jae out out mov pop (bad) imul xor mov imul jle mov jp outsl and and (bad) test cmp push xchg mov sbb xchg (bad) addl or out sbb subb nop dec ret inc add pop ret add js push incb addr16 insl shll jp inc adc mov push cmpsl lret jge aam repnz push mov mov lds lds (bad) sub cltd jnp mov sub pop xor movsb lds cmc or sbb cmpsl add das xchg lods fbstp mov inc loopne add insb data16 (bad) icebp fwait outsl cltd mov call jl daa adc dec inc jbe mov sub ljmp xor imull mov lock add dec mov cmpsl fcomps xchg cmp ja (bad) in outsl push pop decb inc out rclb mov or inc xor das jbe sub pop mov lods cmpsl jo sbb cmpl lret dec adc mov std ds dec fisttp adc push adc ret push xor push or jae les popf movsl xor outsb ret cmpsb adc lcall scas mov shrb lea add inc jns cwtl repnz or push mov jmp inc icebp clc scas popf shlb add fwait xchg and cli sub shrl mov fcomp enter adc std jp fistl fldl2e stos imul stos call sub cmc push ljmp mov xchg sbb test push std fistp mov (bad) (bad) push ja ljmp dec or push das aam movsb inc cmp mov pop push mov rcr hlt sub pop rorb pop mov pop xor jle or cwtl dec adc sbbl and test push les adc cmp les fs out dec lcall sbb or insl out push pop pop cmp dec jle pop xchg pop shr stos pusha xchg dec cmp pop sub popa sbb add mov nop pop jp jbe (bad) es push sub jp in rorb mov fldenv icebp loop xor daa pop jge cmp stos fwait into sub das das mov inc lods iret inc push stos (bad) cmp cltd imul dec dec push lods sbb push pop fwait sarb ljmp mov xor pusha and mov pop cmp sub rol xchg push jb fwait (bad) cmp pop pop in sbb into sbb cli xlat outsl pop pop cs shrl adc (bad) std stos out or jl or sbb in lret pop cmp aaa jle xchg mov jmp or flds and fcompl dec mov jg xor xor mov (bad) xchg movsb cwtl mov inc inc jne sti jb popa es repnz cmpsl and ret cld sub mov mov push (bad) dec fstps ljmp test stos scas cli nop insb fs push (bad) icebp sub mov outsl addr16 add mov not (bad) out dec ss pop cmp test pop in popf dec repnz and loope adc jne xchg fmulp cmpsb inc ret pop arpl (bad) or jbe ror sub outsb mov mov xor cmpsb ja inc push imul test push xchg xor xor push ror fldt or jns mov push aas and in inc sub lcall jnp or clc aas and adc aam shl mov shlb push xchg bound mov fldl jnp sbb and out mov cmp rorl fisubrl or pop aad cmp cs fsubrl aaa or xlat mov push push push arpl inc fdivrl outsl aam out pop pop gs mov addr16 mov sbb int cld repnz inc out push cmp adc mov in mov push lds cmpsl pop and xor add or repz push fnstenv ret cmc or sub (bad) out sub out cmpsl adc jo sub fcomip in jo rorl mov xorl xor les push cmp push xchg xchg push stos ret cmpb add sbb lock inc push mov in and mov push lret mov mov mov lds cmc jo,pn dec mov cmpsl push js push cmp test dec push mov imul nop arpl mov pop in jns xchg adc mov lods jmp push (bad) es pop add and (bad) scas (bad) sub adc in dec jae repnz sbb adc cmp std (bad) (bad) mov mov mov aam push lcall push push loop sub jmp mov in in dec lods pop pusha fcmovb in dec rcrb or cltd inc jmp xchg adc xor cmpsb fidivrl out loopne mov cmp inc push icebp in push inc xchg or pop sub jle fsubs ficoml xchg push sub mov push (bad) sar push (bad) push lock sub xor fidivl pop dec mov (bad) int push into mov in fstpl daa ror push jne stos cmpsl push or push iret dec jge cs je mov mov pusha repnz in inc sbb sub mov sbb jb pop xchg imul lret mov xchg mov sbb imul loopne ret mov jge int and ret xchg sarl mov sub push imul outsl cmpsb test sub loopne stc js mov sahf test jmp or jae push sbb sbbb lea leave push jns add nop xchg maskmovq sub incl jmp cltd cwtl mov mov dec lods and out (bad) add repz jp xchg cmp or cltd push push pop fisubrl jns adc push and loopne xor mov pusha adc dec mov orl (bad) xlat sub lahf icebp test popf xchg shll or int cmp (bad) outsl pop frstor jne sbb out call adc push sub dec in repz es hlt stos nop shrb icebp rcll loope les aam mov pop fnsave jbe scas jmp insl mov repz lahf fcmove pop sub fwait das loope icebp mov loopne aam lea jl mov push adc fsub sbb iret les inc imul ds insl sub mov xchg and dec sbb jmp push aas or je iret aam mov dec or add fwait sti int3 pop adc add ss bound es ds jno cmpsb xchg jecxz stos xchg mov aaa push mov aam push das jns xchg jle out jg call mov lret push sbb mov dec cmp pop mov sbb js mov xor not mov ret sarb cld out xorb sub push lret (bad) (bad) dec adc cmpsb into pop push push cmpsl test cli pop insb inc aas mov in test pop js cmc call inc shrb repz xchg adc mov xor mov inc sbb loop sbb mov or cmp jecxz (bad) (bad) or popa jp lods fisubrl jnp (bad) pop push jle lahf pop cld add fwait add pop scas ret enter jp or xchg mov sub int sbb mov mov mov mov leave scas push loop xchg dec loope cltd push lahf fwait dec out movsb push mov or mov cmpsl mov xchg push jmp cmpsl out pop sbb stc sti ret cmc pop sbb loop in in push mov call inc adc insl pop aad mov mov push cmpl sub pop cmp lcall cmp jbe outsl dec jge cmp push jmp test jmp adc push pop out fdivl mov push movsl in push push mov jb into mov ds movsb mov enter or dec sbb push fnstsw push lret or and adc dec cmp inc aam fwait sbb es mov das repnz cmp lret adc out mov pop es xchg fucomip dec sahf pop inc pop mov int or push or mov int popf cmp enter mov mov enter sub imul sub xchg mov sahf add cld das ficomp imul pop mov push mov and lahf jle sbb sbbb cld shl leave jne ficom sub add sbb ficoml in adc shlb mov rorb mov and (bad) fisub xchg inc or adc mov lock pop cmp lods xchg sbbb cltd stc pop lcall jo mov jecxz (bad) cld das rorb and stos iret out push push push loopne nop pop enter sub bound in aaa incl mov xor clc mov call icebp xor sarl pusha add cmc lahf in sbbb arpl mov sbb jle (bad) jb xchg (bad) (bad) std mov stos pushf call push pop xor cli cli mov decl pop daa arpl lds subb daa push cld and (bad) daa rol test push jle es mov repz (bad) adc mov push fnclex cmp lods dec xor sbb and xchg es (bad) jmp xchg negl xor arpl jmp fwait cwtl dec nop push test push sub mov insb shrl popf bound push fisub aam dec ror scas push xlat jmp (bad) and xor xor push cmp addl xchg and adc jp std mov faddl repz pushf stos hlt shrl bound rolb scas enter sbb cmpsb and (bad) aam push xlat sbb pushf pushf scas in fwait lods xchg pop sti jge xor jae xchg call (bad) sbb insl icebp (bad) xchg je pop sbb (bad) mov and inc inc add mov pushf lahf andps (bad) int xchg pop pusha lock mov lret aam dec test loope cltd or inc or (bad) mov jle inc and aam cmpsl incb mov xor jo ss in or rcll xorl fidivr inc in and popa xchg jmp je mul (bad) out call fildll inc pop add in adc nop into std je imul jmp xchg add mov test push inc sbb cmp inc in ret sub gs inc outsb cmpsl rcll lea aam ret stos (bad) stos dec ret mov popf xor hlt imul cmp mov out jnp mov mov xor inc sub push mov cmp xbegin movsl iret push loope fidivr mov (bad) lods (bad) xlat pop mov cmp pop ljmp loop sub sub rcrb sbb int3 cltd aam (bad) xchg xor push mov dec fsub not in mov add lcall dec outsl addl sahf cmpsl fldln2 mov fbstp cmovno jl and ljmp data16 movsl inc fisubl ljmp jne jg clc insl repnz aas sbb add rcr (bad) icebp dec ret je add lahf mov aam mov inc cs insl pop pop sbb orl movsl test mov mov jne jns lret and stos roll cmp insl stc aad sti adc in pushf dec insb in test andl hlt (bad) cmc pop cs fnstsw mov add (bad) push add mov jbe and in repz movsl sbb cs lods xor mov data16 bound jp sbb insb pop pop lret scas dec cmp lods and push or mov gs and fs xchg subl mov lahf (bad) (bad) mov lret das in popf mov xchg stos jmp popa iret xchg (bad) test out das adc in add pop test (bad) test cmp cmc cmp cmp pop mov xchg (bad) jl and jae test mov lods jns add adc test mov das or or push pop mov sbb sbb jb push mov pop mov clc rcl mov cmp mov cmp nop add lock push or mov dec popf decb cmc adc mov pop dec lods aas cmp xchg adc mov inc test ret rorl sahf ja mov lock cld nop adc xchg into ss add push or and mov adc enter push movsb inc sbb pop inc (bad) aas jmp jne push popa push cmp xor cmp and rcrl shl out mov in mov ja scas stos in or jo lds adc arpl mov jg pusha sbb sbbl pop dec dec mov jno xchg mov mov jnp das fildl int test adc pop mov mov lahf out jae pusha push mov adc out js and mov mov pusha cmp test pop lods in sbb mov mov and icebp enter xlat les or and pusha jecxz or insb xor mov push leave mov pop sub push xchg popa push jbe mov cmp and mov in insl push xor push mov push call xchg xchg arpl pop cmpsl mov dec inc int3 jo dec (bad) js popl mov or (bad) or icebp jl fistpll add shll repz cmpsl movsb repnz out or pop lret out lcall add pop xchg pop xchg cmpsb cmc or sbb cmp hlt jne rcr fisub repnz addr16 imulb std movsl fbld into mov rorl cmc jne and out loopne roll push addr16 cmp pop sub adc scas ljmp pop jb pop pusha inc dec mov push push loope std je xchg lahf add pop adc xchg add cmp jnp or into mov sub aam es mov lods sub sbb in sbb push inc mov imul mov add cltd or mov jecxz in cmpsl jmp inc sbb fstps lea gs or inc mov loop mov cmp dec sbb jmp (bad) mov cmp and (bad) jmp inc hlt adc inc pop sbb pop cltd add cltd pop xchg mov (bad) iret inc pop cli cmpsb dec mov in inc mov add data16 fwait out cmpsl adc out mov enter push aas push inc popf dec les mov mov pusha cmpsl jnp mov cs sub sub daa mov xlat lods mov push or leave popa lret into or mov aaa dec fisubrl cmp inc pop mov call mov int lods repnz adc sbb pusha js pop arpl lock dec xor clc gs pop enter jbe pop and inc pushf mov je cmp pop sti les data16 lret push in test cmp repnz jg pushf loope jbe popa ret mov pop dec add addr16 icebp shrl inc inc xor xor xchg arpl mov and out sub push sbb cwtl push inc inc sub inc xchg cmp stc (bad) int3 inc (bad) std mov movsb fs adc lods arpl jge mull mov sbb pop in sarl add xchg test mov pop xchg lods sbb xor mov inc or std movsl lcall jmp imul dec mov push and push out jnp jge inc lods call jae mov pop leave out movsb adc pop mov (bad) dec imul lock (bad) lock xor add add ds pushf and or test mov rolb xchg out fmull pushf shrl cmp jle mov pop sbb in cltd pop or fidivr adc movsl pop je mov cmp les xor ja cmpsb popa fisubrl jge and and test adc push clc push jb push cltd mov cmp push loope mov ret jb mov mov mov inc fwait cmp std repz aad or xchg jno lods mov cmp cmp lcall mov dec ja mov leave or xchg pop lret (bad) xor int cmp test aaa movsb pop nopw fs sub fistpl in add push pop in push push fs shlb push mov inc xchg pop mov sti pop add pop outsb rcrb rcrb inc lret dec xchg (bad) js xchg dec fwait push and fstpt fnstsw pmaxub and ds jb lock push push push sub xor in out xor fyl2x test mov ljmp fwait add movsb mov addl int3 daa nop jp stc in xrelease add sbb pop push adc loope out ss stos push and ret jnp (bad) icebp mov and pushf sbb jmp lds cmpsl xchg adc mov lock xchg inc pop inc pop rcrb lods lds pop mov jle push pusha (bad) lock mov and popf push adcl jge xor jns jnp in fsubp (bad) dec pop push mov out and jg das cli jp add js scas (bad) cmp ja mov das addr16 mov stos test mov in es scas bound and pop (bad) xor pop es add aas or stc in cli dec dec push mov icebp adc movsb xor jno or fisubl adcb inc sbb and adcb push int (bad) lret ret mov jae js and adc adc (bad) push pavgb insb or mov sbb cltd std xchg lds mov push push mov or sbbw lret (bad) rcr mov dec and testb je dec (bad) jecxz dec rclb fucomp clc stc into lods mov insb cmpl inc loopne or (bad) ljmp jl sbb ss add inc bound jecxz mov mov dec pop sub rcl pop adc inc xchg ret xor je (bad) ja cltd fwait mov outsb repnz retw and mov dec pusha or push mull pop out cmp in or lahf dec cmpl push ret daa mov rclb xchg jmp (bad) lods jl xor jle aaa popf inc mov (bad) or jg cli in scas fwait mov addr16 repz fs xchg inc fstl sarb pop shrl pop xchg imul aaa faddl fadds (bad) xchg lock lock and call mov hlt insl aas cmc sbb repnz pop sub mov fnsave cld mov in (bad) sbb inc add outsb out outsl fsub rcrb nop push cltd jmp rcrl pushl mov mov or sar and rcl popf jle pop inc pop pusha test dec cmp in inc je (bad) jmp loopne adc fdivr imul sub data16 jl cmp sub and cmc sbb sbb aaa mov jl aad jmp jbe or fs (bad) cmc dec dec test sbb sarb aad sub loope loop cmc test (bad) sub pop pop xor in lcall dec jle push pop jns lods dec xchg mov sbbb push gs mov mov xor ret mov or pusha lea mov cld add xchg push push (bad) imul sub dec adc les push cmp aam insl cli push jb mov mov in mov mov test mov cmpsb out outsl mov es mul cld test outsb mov pop mov imull mov jno mov rorb mov pop int mov pop sarl cwtl push adc ss cmc enter cmpsb jl insb shl xchg sbb daa jge mov mov or xor sahf adc pop arpl loopne jbe ret push push jno bound jne cmc ss ss leave testl lock outsb test cmp out push cmc bound imul in rcrl in adcw xor loopne push pop or (bad) and cmp in insl das push push or aam push mov mov (bad) repnz lret outsl dec scas xor dec nop or adcb insl leave cli mov push cmp cmp jge movsl jnp and loope xchg mov lahf push cs bound in jle pop pop into je and adc stc sbb lds movsl outsb dec out inc sti and ja inc icebp cmpsl sbb lret movsb ret aas lea imul inc es ljmp pop cltd int3 movsb xchg cmp adc in mov rcrb pop push std xor xchg mov hlt (bad) mov pushf pop jae sub test xchg mov into jo push iret cmpsb stos fildl js lahf xchg fmul lret mov sub outsl pop inc dec dec ds fstp dec (bad) and inc inc push add aam cmp mov mov or loopne fwait aaa icebp rorl push and adc jl adc jle (bad) push inc jae push (bad) scas leave push (bad) popf xorl in stc add inc mov xlat pushf lahf (bad) jp or (bad) into stos mov xlat jg mov iret ds pop lods mov cmp push mov in pop xchg or pop int3 mov bound js sub pop jg dec roll call xchg jno inc jg sub pop sbb push adc sub sti int3 movsl outsb and insb sbb in mov lock scas rolb fdiv addr16 mov test dec push lret adc xor lret pop mov inc ds adc xchg jae xchg dec iret nop insb xor add pxor cltd pop mov sub nop fisub mov and icebp jg jo push sbb mov mov adc mov mov mov xchg lret and test xchg and push test xor mov jnp and xchg pop ret pop jecxz shrb insl subl push pushf pop pop test and mov sbb test call inc shll andl ja xchg xor xor in jp aad mov pop repnz add lcall (bad) test out xor push mov pusha pop fadds mov xchg std push xor test (bad) ja outsl lds mov xchg dec or ret adc insb aaa xchg div mov (bad) xchg fildl cmpxchg add xchg (bad) cmp (bad) jmp fdivs test jne or addr16 cmp cmp xchg push xor pop int dec mov cmp hlt outsl aas adcl push fiaddl scas jae cmp jnp fmull in mov mov imul and cmp pusha fxch popa xor arpl adc fwait push les cld shrl pop add cli lods push test pop lret and xchg out cmp popf movsb jbe gs (bad) push push mov inc add std sbb cmp jne xchg mov cmp add fs and add (bad) xor pop jo or adc mov mov cmc and cltd and xchg dec loope (bad) mov hlt mov pop jb jae pop fdivrs push (bad) mov enter inc adc leave dec add test sahf sbb ficom cmp push pop jp ja adc mul adc fistpll dec clc xchg scas in lret in lahf out dec sbb cs add (bad) sub fstl fdivs and xor pusha in sti mov pop aas and pop in cmpsl repnz clc cltd sub cmp stos int negb jl pop cmovl mov (bad) mov pop rorb mov aaa nop jne xchg inc in mov mov and movb xlat movsb and push sbb push mov call pusha pushf jno push sub mov addl or xchg jle jecxz cwtl sbb je ss movsl push leave pushf push pop pop (bad) es das arpl loope inc adc lret dec or mov jne mov loopne mov push sub out repnz and push in nop push fstps inc jl add mov icebp sti cltd xor dec xor xchg repnz pop ss xor shr jno push lods jle mov cmp outsb (bad) pop or sti mov aad lds or mov cmp add out mov pop push cwtl cmp ljmp dec mov mov int add in sbb mov ss in jp bndstx push fidivrl mov scas jbe inc mov ss (bad) push jg and fsts outsl insb jb cmpsb popa dec rclb int cmp dec or lcall pusha sub add jg mov push jp push in mov ljmp mov jnp shrl xor pop out xor add les ficoml and push or pushf xor adc sbb out push in popa and sbb or lds out or jb call sbb xchg jp add cmp jnp in pop aaa xlat imul jne dec and cmp add push fwait lcall or fs push bound jp add jb shrb fcompl pop ljmp loope aaa and insl jmp and (bad) xchg lcall fsubrs sbb pop adc inc lahf (bad) fistp jo (bad) jbe fistpl xchg xchg cld fcom sub pop mov jns fild mov pushf ret scas xor lret cmp xchg (bad) out or stos out out mov jbe cmp ljmp xor pop push nop ds mov je adc scas sub dec push xchg push jo dec xchg movsb lea inc mov pushf mov jo fdivrs mov scas dec mov xor xchg outsb faddl (bad) fucomip and dec int loop popa mov inc jg dec mov push lret fistp cltd mov lahf sarb mov pusha std hlt in pop fsubrs sub dec stos out or test and shlb mov (bad) std add outsb cld lahf inc lret pop stos jge cld pop aaa sub dec xchg mov jmp push mov rep aad aaa mov (bad) in or fild xchg pop out cmp clc mov adc push pop les mov into (bad) cltd call ret (bad) or cmp mov (bad) inc inc adc mov lahf mov fistp mov add mov adc lods lret jg jp inc in stos sbb je pop mov push hlt fsubrs mov icebp cmp cs stos adc popa adc sahf stos or push jne aad lret adc stc add mov add lea mov stos mov arpl and or fildl int3 rcl push inc xor cli jp mov sbb and dec rclb and mov sbb pop arpl xor mov pop test pop test out cmc dec pop add cld fcom ss and out push xchg out clc mov add or mov push out xchg cmp out mov cmc mov push leave pop or inc lahf mov push pop pop movsb cld in and jl pop lods xchg sbb rorl dec or cltd adc (bad) mov pop repnz fisttp jae es pop ja mov push lcall adc movsb add pop test add out (bad) lock add (bad) data16 outsb or or mov fnstenv ja mov fildll sahf stos mov dec sahf dec rclb inc mov mov push scas (bad) bound mov jne jl add sbb cltd imul adc (bad) cmc and bound in dec cltd sbb hlt cwtl in fcomps or mov test mov (bad) leave dec or xor out push push pop out test movsb mov push jmp xchg or pop push ret insb xchg xor psllw jp (bad) fldenv dec aaa push pop andps xlat mov xchg ret lds pop push out jne mov mov dec inc jl adcl mov jbe pmaddwd popa (bad) in jmp adc inc sbb or mov jns pop das (bad) sbb repnz ret int pop fwait outsb xchg xor pop (bad) (bad) mov pop mov add push adc and push inc and dec adc sub in (bad) stc repnz cmp sbb mov sti data16 jbe les outsl or inc mov fcmovnb loopne (bad) cmp push ja loopne pop gs dec notb ds sub sub mov cmp jb out aas mov jl cltd push cld and mov push ss push sbbl mov jno xchg push mov insb fs mov outsb pop xor rorl fwait sub mov lret mov stc jle xor mov (bad) repnz in mov mov ja (bad) and mov js or into cmp cld inc mov int ja cmp mov repz sub mov jnp push sbb or jb adc pop cltd fwait xchg arpl add mov mov (bad) insl cli push mov cmp pop shrl test adc adc pop cmp aam ss mov aam gs (bad) pop cmp sub out pop jg xchg test lahf and mov cmpsl push rcl add cmp scas in gs or inc xor (bad) insl adc pop frstor pop jge xor leave cmc fnstcw push xchg xor mov sbb mov (bad) mov xor inc xor outsl fldcw ret roll and xor cwtl lahf ss fistp pop fisub mov sub mov std xchg ljmp mov xor jnp xor mov cs iret rcrb adc jle adc add out push push adc aaa inc dec jno xchg test ret mov mov test js mov xor dec scas sbb movsl (bad) into popf adc ret and inc mov enter lock add ss pop mov cli inc in scas stos xor push scas (bad) aad ljmp mov xchg sub scas jbe sbb fidivr mov adc cwtl in je adc inc fs adc pop or jge sti or in sbb stos mov pop repz push mov xor pushl cs cmp or sbb jno scas fisubrl icebp jl test mov jge pop dec xchg mov lea adc pushf (bad) int3 lds cmpsb add std daa xor mov leave xor sub jge cmp mov adc jp sarl sahf into push mov shrb xor (bad) mov and mov cmp xchg sub stos mov mov divl jmp faddl add imul cmp lods or or lahf jb (bad) dec add fdivrs jg (bad) sub mov out inc inc outsl and mov pop dec jp clc ja rorl ficoml xchg adc sahf ss push test xchg pop adc fisubrl fidivr dec fistl inc xchg call add rolb mov in mov out inc punpckldq and mov add sub (bad) out in inc loope mov arpl adc dec jne cld int xor fsts jbe sbb imul insl push push in fimul or cwtl (bad) fistl int into arpl stos test pop in xchg xchg push movsb or rcl stos stos in inc cmc mov icebp adc rorl adc jae or sub jno,pn out add movsb imul mov punpckhwd and add lcall lcall jge add xor push dec and seto jl test mov adc adc gs jl and outsb shll mov push sahf pushf xlat cmp inc aaa es ss aas jg sbb adc scas ret fdivrs push dec pop cmp pop xor int es cmpsb jecxz mov jg test sahf dec ss pop adc aaa pop aam clc test (bad) les and fstpl jle cmp jns kmovb pushf addr16 in or xor pop out jb ret in cmpsl pop pop jae xor xor pusha lahf (bad) jg inc pop (bad) popf nop and shr push push and add push into cmp lcall (bad) pushf or add inc xchg fsubrs (bad) dec pop push mov test cmp cwtl cld out or pushf int3 sbb hlt (bad) loopne cs jbe adc lahf cmp clc nop jge movsb lea lcall out addr16 cmc jo fwait jle dec or cmp adc lret and mov psubusw mov sub dec das push xor cmp and pushf push fdivrl rcl dec adc xchg outsl push lock (bad) mov imul jbe sti and (bad) js daa sarl and inc cld call scas mov daa or icebp and lds mov mov subb or cmp sti fldcw and and pop imul xchg jae aam inc adc insb mov adc mov mov nop in and mov inc push lock fdivrs gs es or mov dec call ret push ret add or jo lret push stos xor push mov (bad) addr16 das push fidivrl lock rorl add movsb std cs arpl sbb xchg cltd or inc test xchg scas das xor hlt xchg mov and mov clc cli mov jb call add in in mov jl push imul imul sbb inc push mov pop pop cmp js aas shrl (bad) lods or mov add or mov inc sbb das xchg or or mov xchg cmpsl push mov jno sbb push test sahf xchg mov jnp pop out jecxz arpl adc pop fiadd xor mov jbe je dec sbb aaa pop add mov cmp loop push cld or or adc sub (bad) dec push pushf stc lret jecxz or sub movsb add test insl jnp mov lret in les push mov loop arpl shrl jg and lods lock pop pop lods inc pop loopne cs int3 (bad) jl imul jge adc inc cld es das rclb outsb leave push mov daa cmpsb fistpl imull xchg jne lret lcall sbb in lahf or je sahf add sbb sub pop decb dec fs mov adc das outsb fmuls mov out cmp push stos dec fidivl xor pop ret in mov add inc push (bad) aam cmp pop adc scas out or aad sti pop int cmc movsb push mov xchg mov ret out sub mov pop add add ja xor cld adc adc mov leave sti out ljmp xor pop cwtl out out push sbb fdivrl push cmc or sbb pop pop sbb xor adc sbb add out sub dec jecxz negb mov loop sub dec ljmp mov lea out sahf mov pushf mov mov into pop mov dec aaa add adc insb and add jns adc pop pop int3 orl imul jo jmp push pop test addr16 dec aam clc imul sbb sub fst adc or test mov ret pop pop in jnp xchg xchg int in cmpl fldt fst popf jmp ficomp cltd jb arpl cmp push or dec rorb xchg pop in outsb push gs mov cmc ja outsb scas mov cmc movsw pusha sub dec push and mov push adc call dec xchg xchg adc pop rcll xchg adc (bad) xor das mov icebp (bad) push jo mov outsb cmp jbe or mov jg sbb xlat dec xchg repz xchg jae dec mov add sbb das pop ret lret push or and imul jge pop xor (bad) pop incl test xor add lahf fstps mov and push inc xor push sub ret loopne mov in mov or out jecxz fs adc or adc test dec movsl cmp out sbb repz dec inc fidivl push and sub jbe aaa fistpl fsubs clc jmp jne rorb sbb icebp jo daa push and (bad) cmc mov jb sahf xor fadds ja int ret or lcall (bad) test ja mov cmp and add xchg and mov or fsubrs jae fimull inc pushf stc cmp adc ret sbb sti out lret mov jnp fcoml fidivr mov dec xchg xchg mov std mov jae dec sbb xchg fsts and dec add subb cmp cwtl out lds xchg mov fmull lahf lret test aaa in popf mov andl roll hlt pop lret add (bad) in push lods jge pop ror sub lcall or fiadd or mov mov jmp inc les outsl push lret pop adc mov in add jno mov test pop sbb or fildll fwait inc (bad) xor mov insl xor lods pop mov xchg dec xchg (bad) pop pop es daa mov mov pop sahf sub cmc sbb orl hlt int xchg pop push mov mov cltd ds popf push sbb scas cmpl mov stos aad xchg inc pop add inc mov lahf adc jmp inc adc or (bad) and in mov std daa inc adc add lret cltd pusha mov or into adc clc (bad) and dec int or adc pop fcoms dec mov fsubp sbb dec xchg inc les cmp ret arpl mov and add and push add jne imul xor and rorl dec in and lock and jle in push fs push add mov vcvttss2si xchg cmpsl dec out jmp movl scas pop aaa stos jo push mov das inc daa stos jo pusha or xchg data16 cmp and xchg xchg nop dec ss repz mov fisubr out sti out lods mov mov jno and jmp movl dec int sbb jmp pop movsl sahf pop dec pop lret inc and dec pop xor lret push loopne fsubrs cmp xchg cld (bad) aad jp sub add sbb mov dec push dec jecxz rol mov (bad) cmp addl push or add mov testl sub push sahf jmp mov pusha jne mov into xor fucomp nop cwtl into cmp rclb and lret xorl or cmp jb cli add int mov xor cld pop sbb cld je xchg dec outsb aaa push push test test rcll push or xchg add rclb sub dec add pop repz mov fnstsw fbstp movsb xor push out or cmp push xchg iret (bad) dec in in lcall adc lods test mov inc sahf repz enter xchg outsl pop sub inc shrl ret pop ja sbbb lea mov stc fsubs fnstsw sbb (bad) movsl ja fstl pop scas pop mov mov sub (bad) mov pop fwait push mov sbb cmp mov into icebp inc jmp and movl push jl outsl jbe push jbe cmp std cwtl sub mov fdivrl cmp in inc xchg or mov addl cwtl ret daa fmuls add outsl pop in outsl arpl out test sub cmpsb mov (bad) jo addb xor pop (bad) in out adc cmp inc adc mull cltd aaa std add pop xchg repnz shr and add adc mov std jl push mov sub push ds mov out push cmc mov mov xchg in or push in xor xor pop cli and adc sahf enter sub (bad) movsb fldl add jecxz pop negl mov inc movsb and pop pop cmp imul (bad) mov adc cmp fs pop imul cltd xor ds mov jo cmp mov fisttpl int mov cmpl (bad) fcomps (bad) push and cmpsl icebp and lcall add mov inc mov xchg pop sub sub adc xor sbb lock js mov and cmpl jno es jnp (bad) movsb adc loopne mov sub out mov cmp ds dec daa pop inc inc into adc lahf (bad) or hlt pop mov sbb inc add adc adc (bad) pop mov push add ljmp jno add pop pushf data16 icebp (bad) mov fbld pop fsubrs push push dec dec mov push xor or scas andl jns iret enter out pop dec ja mov sub jp pop sbb push ljmp rclb movsl jl cwtl mov sbb sbb and scas cli sbb adc (bad) pushf push push outsb fsubrl jl ss pop arpl jmp dec rcll fmull in pop cmp out int test bound mov mov xchg or leave lods jmp cmp mov add das fldenv lods jg (bad) test cmp mov fisubr sub jnp mov sub (bad) aad pop (bad) ss pop lods data16 xchg jno ss (bad) repnz (bad) mov je jnp jns out scas sbb out or push aas stos xchg fimull enter xor mov ror add jmp add sub cmpsb mov sub ficompl jo js cmpsb pop out and push sbb sbb jl lock or insl sub dec repnz inc stc pop jae pop sub pop and sbb pop lods mov xchg adc add push movsl movsl jbe push decb (bad) jecxz stos pop pusha mov gs in pop inc sub xlat pop xchg push xchg ret das sahf and xlat popf aas pop push sbb mov sbb je pop ss mov addr16 aas mov rol sti jbe pop pop jb fdivs (bad) dec or jmp mov mov outsb movsl mov and ret mov fstl or shll int3 adc cmp into icebp in jge dec adc jne inc pop addl adc push mov xorl loope adc jg inc jl daa xchg fwait mov xchg add add (bad) sahf fldt push (bad) and ja dec jae aas pop test and dec cmc inc mov push out nop push sub pop push jle imul in push imull inc daa adcl pop push arpl mov inc add mov ja fdivr aam mov outsb out insl push movl jecxz xor lret pop je xchg insb mov xor sbb push aam sub xchg (bad) inc xor sub ret std add stos clc add clc push and mov mov leave sub inc scas or or mov jecxz dec fdivl pop cmpsb add jl push inc dec mov mov pop iret mov push xor pop shl (bad) inc mov pop lret loop adcl pushf je adc and cmp sbb (bad) fcoml lahf adc xchg push ret xlat fmull xor (bad) fiaddl scas out paddw add mov pop mov cmp ja xchg hlt fcoml imul mov cltd loope dec xor push push popf lock adc mov rcll xor test fsubs xlat or dec sub fisubrl dec mov pop es sub fcoml push insl pop cmpsb inc nop cmp imul pusha sahf xchg or mov ja shufps test adc pop cmp push je in popa fisttpl sahf mov cmpsl fdivp mov or mov mov std adc orl jns aas sub mov into jnp fcmovb ljmp cld cs sub movsb movq imul (bad) xor frstor loope xor and mov xchg jl lods clc loop dec cmp out pop dec mov es cmc aas xor inc daa insl outsb (bad) dec jo lcall and xor dec dec outsl mov jp lret outsb inc adc adc adc cwtl push aad mov dec or fsubl ja xchg (bad) repz xchg in mov mov in add sub jbe insl je sbb adc push in movsb and add divb (bad) fstpt add iret dec sbb inc fistl xor sti xor and xchg movsl lea int and divb xchg jge pop cmp sub sbb loopne xchg into insl inc js sbb and xchg ja sub ljmp es icebp repz js xchg std ljmp jge pop sub sub ret sbb outsb dec push cmp les jae icebp jecxz jno and mov fdivl sbb sbb jg in pop insl int imul mov ficoml pusha ljmp cmp sahf (bad) xor pop mov outsb (bad) in fsub push (bad) cmc sbb insb mov add cld sbb gs fucomi popa push cmp mov test and insl sub imul push (bad) repnz rcrl stc push mov add and icebp cwtl shlb dec jge out hlt xlat adc jb cmp jge inc cld pop gs mov push sti test mov cld hlt xor pop lds cmpsl pop jecxz test push mov stos and mov inc sub imul jecxz push rol pop stos aam (bad) jb enter pop call (bad) (bad) shrb movsb addr16 mov stc mov mov inc dec jbe repnz xchg jbe jbe add cmp or aam bnd fildl cmp hlt test mov test es mov or sub les pop das cmpsb das sahf cmp push cld dec xor sub mov mov ficomp enter movsl outsl subl inc js daa fcoml into test push push add pop push jl in pop jb xchg cli std add mov and cld mov lock pop add adc or hlt push in fistpl adc stos imull xor dec xchg cmp and inc lds jns popf in or ret mov stos inc pusha or pop xlat sti cmc lods xchg gs xchg lret rorb outsb movsb rcrl add gs out jo mov mov xchg jb enter and mov leave iret (bad) pushaw mov jle push aaa rcrl push pop cmp mov loop pop jnp or and adc js jno jecxz mov xlat jge mov addr16 sahf loopne xchg ss jl stc sub dec nop xor inc scas in mov mov popl xchg outsb nop sbb int3 test inc inc mov int push mov (bad) out push out out test pop test cmp aas adc dec inc popf inc sub xchg mov xor mov movsl adc cmp addr16 into pop roll mov shrb jl ds add gs dec xor lock pop loop jecxz pop mulb jmp dec in jg jge ss fiadd iret mov inc or (bad) mov (bad) (bad) jnp (bad) mov push sahf fwait pop daa cmp mov jnp dec mov loop cmp repz daa jo push jo insb stc aam mov imul mov xchg adc mov xchg pop lret mov jge pusha jle dec xchg lahf lods xchg inc xchg mov cmp imul pop mov sbb push sub or mov xor (bad) in in scas loope rorl es xchg mov or out je ret cmp xor iret mov sub pop lcall sar push push and out xchg xchg sbb pop pop into adc test xor sbb loopne xchg test cmp jb inc or xor add xchg pop int3 dec mov add mov xchg sub incb cwtl in sbb or test adc push in sub mov mov popf xor repz je xchg ficom xchg subb popf (bad) mov andl std pmulhw ret xchg dec fs imul notl fidivr fidivrl jnp shll xchg in add add xchg sub sub adc push fmull cmpsb jbe,pt push dec push cwtl push jnp icebp (bad) xchg lret sub xchg adc ret or push in cmp lea mov cmpsl arpl jo pushf fs (bad) std imul jmp xchg xor loopne (bad) mov jl or popa frstor pop dec lea add xorl loopne popl int outsb cmpsb fs jne out std ret fcomi jmp rolb roll int push rorl cli lods add addr16 xchg iret jnp cli sbb sahf xor or cltd mov (bad) mov pop mov jo ret aad cmp xchg cmp xor push mov into dec jb je (bad) cltd cs cmp or insb xor arpl xchg clc std (bad) pop mov push cmp cmpsl gs inc jno or shlb mov pushf data16 mov mov sub (bad) out ljmp insl mov dec and and jb mov negb leave and cmp push lret add lret mov sbb xchg inc in mov sbb and test insb mov sbbl push mov xchg ja cmp enter in pop add cli pop orl sahf (bad) ja dec inc aaa js mov fsubrs push shlb in shlb mov rol fdivl jne in int3 xchg cwtl repz outsl bound mov sub mov sbb inc dec repz lcall xchg fsubs xor repz adc loope pop jbe push imul mov fwait int3 dec clc lods and lret mov dec xor std pop and sbb mov sti xor mov cmpsb scas pop mov jo sbb pop rolb int cmp mov sbb xchg xchg icebp push add add call lods xchg loop sahf aas decb lret add test pop adc sub cmp test mov (bad) addr16 mov and addb (bad) mov push inc adc mov jae lret in jo nop adc pop call jno jecxz fldt movl mov cmp mov sub mov mov mov jae fimul (bad) mov inc nop jne xor cmp std sahf fidivl inc in fnstsw in push out inc sub (bad) pop sub cmp frstor loope fwait pop loope pop mov pop push mov sbb xchg sub iret gs icebp sub mov into je clc arpl pop mov clc jnp or mov je add xchg frstor aaa mov push in lahf in repnz enter adc dec pusha inc push sub imulb push es mov lret dec xor push nop ret pop adc xor repz clc into xor pop lea inc imul and pop lods inc dec mov sub dec jp pusha inc cmpsb iret inc es add cmpb pop mov adc jne cmp pop xchg adc mov pop imul adc or mov mov jle and inc add loop xchg ljmp sub cmp mov je add je mov cmp enter repz lahf je push (bad) lds inc and jle test cmp inc cmp xor dec xchg enter sub sarl dec push les sbb lret sbb pop adc cmp xchg xor sbb mov movsl js cmc (bad) jnp sub adc sub fisubl arpl sti xor add (bad) fiadd insl dec stos lds call mov fimull js mov sub cmp inc or jg daa adc xor mov bound push jns and out inc je fildl mov or or and mov push hlt adc in daa jns out mov mov add cwtl (bad) aaa addr16 xchg outsb jle jno (bad) cmpb xchg cmp je sbb xchg xor xchg gs lret cmp repnz mov daa (bad) adc xor push imul dec xchg or ret add lret pusha xchg lret sti jo mov inc and popf test pop cmpsl (bad) outsl xchg fisubrl sahf pop stos fs jb mov sub cmp dec in xor std jmp cmc leave mov sbb xchg imul rcr movsl test sub mov push test in ja pop or in js (bad) inc xchg ret cltd and outsb fistl add imul adc push mov push (bad) test push (bad) ret xor xchg sahf fwait xor pop (bad) fldcw mov ror pop mov in xchg push pop subl push dec addb jne movsb push jmp test jl outsl pop lret negl xor sbb or (bad) scas repnz jne mov (bad) ljmp pop adcl sbb aam rorb push mov mov mov dec aam sub pop imul xor pop out das cmp sbb push divps or push mov pop fisubrl in xor in sub mov adc (bad) rcr cld xor push jnp jo cli test scas jmp sub icebp cmp xor pop into jle push sub or ja push lods lds mov imul fimull xchg in aad rcrl lret jbe xor jg iret push mov bound and inc lcall or cmc movsl rcr push js mov fisttp dec (bad) lea jno push aaa movsb pop rcrl mov or (bad) test lret mov (bad) pop or adc adc adc sarl test fistl push mov xchg aam int push (bad) lret mov push enter inc imul ret and fisubrl xor fsubrs insb bound mov insb dec aas adc mov push push push jmp and rol inc mov push add (bad) imul and pusha push mov (bad) xchg outsb xchg (bad) xor jp aaa fdivr loopne mov adc push addr16 push mov arpl (bad) popa push pop and pause lods mov aad shlb lcall pushf cmp cmc jge sub or cwtl xchg lock je loop outsb push aad adc fnstenv cmp jmp packuswb xchg in call sbb insb cli (bad) repz push (bad) idivb xor xchg enter in pop movsb cmp inc sbb mov or aad and fdiv jae (bad) mov xchg push and mov or add lods nop mov loop sub jecxz mov or sub push nop imul (bad) xor mov jecxz clc (bad) pop and aam ret (bad) repnz mov movsl mov and repnz sub mov push lret xchg and bound xchg jb call into sub xor dec sub fsubrl (bad) push outsb lods mov hlt lea inc or test decl not lods xor jae mov mov icebp addr16 out inc (bad) jbe pop in repz ss mov xchg mov dec sub nop sahf inc and xor stos jl xchg fwait sarl dec sbb fadd jo,pn (bad) push cmpsl mov sub push push mov shlb sbb pushf lahf js test add fstps push out popa lock xchg ret fstpt xor mov scas cmp fidiv scas movsb andl mov jae inc mov in push adc pushf lret push push fwait pop fs xor xor pop adc (bad) data16 mov pop loop cwtl cmp or jo mov mov cmp push sbb xchg aaa cmp out dec into outsl jne and dec jmp mov lods stos int popa xor je mov mov push and or int dec jg jmp sbb ss adc pop cmpsb or call ja add repnz mov push ds and dec pushf adc and stos and clc mov test ds leave int3 xor out mov inc stos sub inc jne or pop sub stc shrb cmp fist cmc scas push iret nop and push fwait jecxz inc icebp adc mov stc and inc cmp sub add xchg aas ljmp lahf popf xor push pop adc mov fmuls mov sub fs in mov adc pop ret mov mov nop and cmp insl scas mov or jg mov cmc cmp pop hlt xchg cmpsl lods movsl fwait outsl stos adc or mov push push jecxz ret jecxz xchg jp int3 mov adc jle sub iret rcrb mov adc nop mov loop jo mulb in xor or push inc mov negl outsl jl (bad) jmp jne inc lret (bad) shl call jp jge addr16 pop add and adc loope jge or orl dec repz mov loopne cmp rcll call sbb jno in lahf mov cmpsb or mov fnstenv push sbb dec sbb (bad) push in jnp mov xor mov xor mov mov ja and pop pop or inc push mov jno (bad) sub push movb hlt and stos aad popf cmp lret push sbb or pop pop push mov nop sub inc inc cwtl xchg and faddl xor pop cmc mov shll aas and or inc mov mov jl (bad) jo sbb (bad) mov scas lea fsubl jae mov loopne data16 xchg sbb add push popa fstpt cmp inc sbb adc push daa mov mov lods or xchg jbe pop mov mov movsl dec mov lret xchg outsb lods bnd (bad) out xor cld inc fdivs pusha lds pop sbb sbb mov insb popa pop or pop outsl outsl xor add mov adc (bad) mov xchg cmp cltd xchg addr16 clc jne cmp adc test int3 and rcrl (bad) and (bad) dec aas lods movsb mov fbld xor (bad) fistpl sub push scas je cltd sbb (bad) aaa icebp mov pop jmp insb lods out mov (bad) cs loop xor bnd inc iret jl pop push sbb addr16 out stos imul ret mov aaa int3 fdivrs push push jge mov pop pushf sub and jecxz jp scas neg mov leave dec (bad) je and jge and sub xchg (bad) mov hlt arpl call and sub mov pop or lock loopne cltd xchg xlat rcll sub xor sbb jne out lret jp cmpsb repz fsubs rcr mov mov inc or inc and mov movsl in and test sbb jns cld push jo mov aaa lods cmpsl and sub or test dec mov and sahf stos stc stos shrl or push fisttpll inc popf inc js idivb inc aaa mov cmp sub pop loope push ror ljmp loop rep mov add in gs push or pop or lcall (bad) jmp adc sub stos jecxz insb dec jle cli xor fcmovbe hlt cmpsl mov int mov mov cli std loop add sub dec sbb pop mov mov ljmp adc sbb sub jmp or lods xor xor jl std iret jg jo dec repz sbb repnz mov (bad) mov or pusha inc sub mov nop repz mov fistl add or add cmp sbb add pop cmpsb gs inc fs gs fcmovbe pop sub cmp ljmp push mov pushf popa popa add push sarl dec sub addps loopne or pop lcall mov cmp mov mov test dec mov jo movsb cmc xchg mov and cmpsb inc mov nop loop dec test popf cmp add cmp popa pop mov adc lock xor pminub in ds ret add push add fdivrl and cmp loopne outsl (bad) rcl mov cwtl dec xor call xor add xchg lds leave adc mov sti xchg xor ss or sbb outsl and inc cmp inc jne jne pop xorl jns pop lds xor mov test cltd insl xor imul imul pop ds lahf jne pop adc sbb into adcl fnsave (bad) lcall dec inc push xchg mov mov icebp sahf test or or mov icebp dec test mov xor xor pop clc push add push and add jo fbstp iret orb pusha cmp ret fs and lret mov ret push and or push cli mov xor out dec push pop daa cmc (bad) mov cli adc cltd out pop aas and std pop test (bad) pushf push and adc cmpsl shlb cmp adc mov sbb stc cmp movsl jle loop sbb int adc imul pop jmp cld lret or mov mov int3 push addr16 int3 into shrb out popa and xor xchg scas in lret jns push (bad) and jns xchg push cld mov ret jle pop dec sti or fcomps mov lret mov ret pusha xchg adc loopne push imul popa cmp cmp dec pop jae int3 mov dec stos roll out cmc push loope,pt dec mov fwait inc mov jle std jne ret movsb popf mov add push scas and outsb hlt andb push sub insb cmpsb pop out loopne or mov pop outsb enter or mov mov gs mov call sub clc popf hlt push imul scas mov inc xchg jo add stos and cmp jae int bound add pop in loope fdiv stc out adc cltd out mov cmc mov jo lods popa rcll push movsl add movsl shll adc gs and es jmp xchg mov push push add out clc fmul ss sbb push pop push add ror push in or shr jne mov cs mov or call (bad) mov pop lahf sub fwait cmpsl sbb call ljmp fsts (bad) notl pushf dec push inc stos bswap repz sbb ficomp stc rcrb sbb or stc in mov jge xchg push mov dec ljmp ficompl push cmpsl mull mov shll push jne (bad) push jo push inc xchg scas mov adc out ds stc (bad) cmpsl mov add jp insb mov dec inc adc (bad) cltd jmp mov push cmp mov out addr16 xchg mov dec ret popf loopne push jne shl rcr push sbb dec pop mov and xchg sub in in insl jo mov jne mov repz fwait in (bad) ljmp cli dec in inc dec mov mov jecxz jne xchg add mov cmp out ret adc cmp shll outsb xchg inc test es mov inc cld push repnz pop (bad) push dec mov ret bound cmp inc insb mov movsl push adc repnz sbb dec and aas lahf gs pop (bad) adc pop and dec add jl (bad) insl mov dec inc and and sub pop int3 test jne mov sub in pop fidivrl add stc jne nop xchg jbe xor fcoms jl movsl push mov mov or cmpsb negb popf xor cmp push iret ret or cmp sub (bad) popa shl add fs out stos mov or insl out aaa int dec pop or adc jl or iret (bad) mov (bad) jp or aas adc arpl roll enter pop fimull outsl inc jge fstps cmp (bad) sub push push pop outsl mul stos pop popa push jle sub insl mov stos ja ljmp cmp and cmp inc enter movb (bad) mov fstl iret and add add mov hlt fwait pop loop dec and and xchg loope and push cld fisttpl inc cmp add and adcb xchg repz mov mov and lods iret cmc aaa mov dec (bad) fimul dec pop out call rcll pop mov test dec int hlt aas jl scas cli scas push mov lock add mov insl pop inc jmp fidivrl mov jp mov test cwtl sbb dec (bad) push int3 frstor lods ds mov dec ja cmp jne or xchg nop ds movsb scas sti pop aas repz cmp or pop rcrl leave les ds lcall jmp cmp faddl mov add (bad) xor mov sub sbb out insl lea push bound stos in lock cmp or cmpsb sub lret cmc pop pop pusha cli dec adc push sahf mov dec pop int cmp mov pop ljmp pop lock decl cmp lock dec mov mov cmp lsl push dec fisubrl lds jge adc mov popf repnz arpl mov iret sbb jge jecxz mov das xor (bad) movsl (bad) mov lahf cmpsl inc movsb out inc (bad) sbb pop cs out lret orb leave in sbb xor push nop imul loope (bad) ljmp inc stc loop cld or xor mov cmp (bad) cmpl cmpsb inc ficompl rol cmp jg jl mov xchg xor xchg out lds xorl (bad) adc pop ss mov jno cwtl adc push (bad) cmp mov inc or imul pop jns jmp adc jl mov add imul or mov jo in lods jle lahf addl lock fsubs lea pop lods add js jg flds cmp and push xchg cmp leave arpl fildl iret dec inc lock mov pop ror aam insl mov clc jecxz pop (bad) out loope outsl rolb pop movb leave cli mov outsb or aaa mov sarl xor adc shll sbb add pop sar js pushf das je xor rcl sub jp push loop jne lods daa and mov out in lahf mov push pop neg arpl (bad) imul lcall mov les adc inc inc xchg xor fldl push add popa dec xchg xor lock (bad) je or push push jb out imulb (bad) xchg pop fnsave lods bound dec sub inc inc (bad) cmp fwait cmpb jns (bad) inc pop xorl enter sub cli rcl mov cwtl (bad) cmp leave cmc bound xor dec xlat push xor mov data16 pop dec jae xor fldl mov push mov sbb sbb jns lods test add mov shrb push inc adc hlt sub inc sub mov jno pop (bad) je dec (bad) mov nop inc sbb testb jmp dec fcoms (bad) dec movsl pushf flds (bad) sbb push sbb pop sbb or push jecxz mov fs mov insb xor xchg xlat test xchg cmp mov mov adc and sbb mov push sub jb cmp mov pop dec jg dec cmp ficompl pop jae stos out mov pushf int3 add pop inc in adc mov xchg jecxz add mov insl push jo jns sub xchg pop repnz in imul xchg enter mov fldenv daa (bad) (bad) imul mov ss aas cmp jno loope loopne dec fucom movsb push lret daa (bad) jb icebp sbb (bad) cli or xlat pop imull mov pop add insb daa mov (bad) lods push jb std aad xchg pop mov fs (bad) mov ja xchg inc adc push or jp jp (bad) push insb jbe incb (bad) (bad) jne jle or sbb mov push (bad) fmul ret jae lahf mov xor xchg les popa jmp cwtl fidiv sbbl ret orb xor test fsubrs into mov subl dec fidivl les gs or in out sbb cmc ss mov insl jne xorb pop push cmc mov pushf cmpsl sbb cmpb js sub mov clc out mov adc mov arpl jae je inc adc in adc hlt bound scas loope push xor xor push movsl iret jge mov stc cmp stmxcsr fisub xchg inc add movsb hlt push mov push dec arpl sub cld lret adc lds loopne inc fdivp ja push pop xor (bad) lds or ret mov push pop bound cld push sub mov insb cmp cmp ficomp lret push loop sbb mov mov fmull std sti dec xchg cli and sahf bound sub out xchg inc pushf sti jge push inc jo outsl aas sbb sbb mov push mov or dec pop inc dec (bad) cmc sbb jp sbb mov iret std fisubl repnz pop (bad) xor xchg mov call test lret shrb and into pop mov inc xchg jb pop mov test cmp shrl jecxz xchg int nop fs imulb jle xlat sub out in inc or sti lret cmp test je cmp loope mov (bad) pop dec or cmp scas or sahf sub fild adc push das xor mov in mov es lret cmc rcr cli dec xchg pop mov (bad) adc cmp xor iret jne dec (bad) enter scas xor ret stc mov push lods pop inc outsl pop fs push insl sub icebp dec pop stos and leave cmp fmul xchg lret fmulp push add sbb and or outsl cltd pushf fimull jno shll lds jg in stos inc push fidiv cli jae xchg outsl cmpsb test fiadd add add xor (bad) and outsb into (bad) cmp xor sub add xchg aam xchg push movsl (bad) lock test inc pop inc negb xchg xor push jg jl test gs push xchg jg dec hlt mov cli add in lcall add mov mov and pop mov cs jl dec dec in dec mov sbb adc jl push lret pop push mov aas pop mov pop sub in ss js cmpsb xorl dec call stc fnop or test jecxz nop add and pop or or out popf dec loope mov inc xchg fldt adc fldl lods push push cmp call xchg shll push and insb xchg mov cmp inc icebp inc xor and movsl dec push sbb sbb and xchg pop shrb xlat cmp inc or xchg dec pop inc pusha pop ret jno imul out mov sbb xor add mov shll sub sti fwait mov lret ret cmp lret sub xchg js rcll (bad) push adc into cwtl add mov push mov aas mov jbe pop push pop xor mov xor cmp fwait in jb mov jl loop,pn cltd lods scas jmp mov leave push loop adc iret mov mov jmp imul mov xchg jmp pop jmp iret jnp addr16 cmpsl scas out arpl mov adc inc pusha jmp test hlt arpl loope mov into test popf andl int3 dec test rol mov aas out imul mov cltd sub testl dec jns es jmp mov (bad) fisubr pop fcoml into es ret jne fwait xor cltd inc jb aam cmp inc mov pusha shrb shrb mov mov cmp jmp jb lds arpl lret pusha add je movsb jg dec arpl ljmp push jecxz loop clc scas out or subl (bad) hlt mov mov and mov push add enter pop mov repnz dec stos lcall dec lock popf inc ret ljmp cmp icebp scas fiaddl pop pusha cmc pop (bad) adc pushf or or leave adc mov or xor xorl enter xchg data16 jge mov pop aaa push inc in push andl insl dec jae xchg fcoms clc mov stos arpl sub cmp jb xor lcall lods adc fwait and fdivp or (bad) add mov (bad) fucomp imulb (bad) outsb nop je aam ljmp bound inc and jle in push inc int pop cmp ss inc ret pop dec cmp pusha sub out mov cmp iret xor or xchg add pushf insl insl cwtl addb fwait mov aam test addr16 popa mov and jbe (bad) or scas sub clc pushf mov cmpsl pop xchg pushf mov dec iret bnd or push jns lret push leave mov andl mov sub test mov pushf call mov sub sbb scas repz loope (bad) (bad) jb bound int3 inc mov and mov inc mov out pop push ret fbstp loopne dec or add cli shrl sub int icebp idiv js mov sbb jge decl insl into mov pop out dec test mov push mov adc pop and fisubrl cwtl andl pop shrl ljmp out pop cmp addr16 (bad) insb ss xor imull mov push mov cltd stc das or les mov add testl pop jmp fld (bad) and scas xchg xchg rcrl inc movsl mov ss or pop inc loopne js xchg cmp or mov stos lods addr16 dec cs imul in imul cld and loope mov movsb loopne sub add pop call or (bad) jnp lret stos fidivrl xchg dec test adc cmp push ja add stos out decb xchg adc or push leave stc sbb push cli js lods scas lods xchg dec mov call aas add pop aad and jge add into and mov cmp jb jg dec in mov add outsl sahf xor outsl push push jnp inc mov cmpl push or xor mov inc out test mov push out out xchg rcll mov xchg cmc (bad) cli inc mov loopne mov pushf add adc lret cmp pop out movl push std xchg or addr16 sbb sub inc leave testl shrl cwtl mov ret xor (bad) test xor mov cli imul clc lahf mov push adc sub jne loope mov stos movsl orl add cmp sbb inc fidivr adc (bad) (bad) sti movsb mov adc cs mov lods mov sbb dec push in test (bad) mov xor clc pmuludq xchg pop adc pop mov leave dec pop push mov sbb arpl aas subl mov jnp or mov mov cld mov jne mov movsl lret sbb or xor (bad) icebp xchg sbb dec push xchg popa mov jo adc pop cld and mov (bad) loopne lods aaa sub xor sub cmpsb into push pop push loopne test bound cld test insl mov mov dec xchg data16 out xchg mov out xor jecxz in test mov (bad) lcall cmp sub push stos lahf pushf int jp xchg sbb or and xor ljmp cmp cmpsl fwait xor fdivrl faddp mov movb jmp inc in jg push xchg mov xchg insl repz jmp ficom push jne or dec mov gs imul xor or dec sbb loop (bad) aaa clc sbb and cli mov or and orl sub bound mov and xlat out pop push jb adc rorb test xlat mov es es insb cmpsl lret insb test or call add cmpsl push push xor push mov inc loopne lret push fimul ret xchg xor add dec shll and mov rcr outsl in vmread lcall inc mov sub outsb jle mov fld1 rcrl clc (bad) sbb imulb enter pmaxub xchg std xchg lret inc ss add repz lahf or cmp leave mov push mov add mov (bad) sahf jl out sub inc sub sqrtps stos (bad) and mov and xor shll sub je popf aaa es cmp jge jg sub fsubs and lds fiaddl ljmp dec (bad) adc mov mov loope xor sbb add lea dec push mov dec cmp mov jmp adc cmc jp fsubs imul ret mov popa xchg mov ljmp outsl and jno adc or bound push push decb shll nop (bad) xor and stos cwtl ja mulb sarl scas leave shrb rcl out xor xchg xor inc hlt sarb push mov out and jl mov jle fimul and and aam test lock jno mov ficoml mov jae jecxz insl out loope sbb push cmp (bad) mov push mov (bad) mov stc add aam mov cs jne xor mov pop jae loopne jge lods push (bad) ljmp jo xor jge jo mov cltd inc ret mov pushf movsl sbb pop pop sub lea and mov out jae jg sbb or add jb mov (bad) or and jb ss call out mov lea fdiv hlt mov sbb adc leave cli sbb inc push mov mov cli loop sub inc adc es lods sub mov mov fisubrl mov cltd fstl jno (bad) xchg sub mov hlt jbe popa push lock sub mov pop jno loopne xor jp or xor leave in and stos das imul cld jns popf adc mov pusha pop int jecxz imul js outsb xchg stos outsb out jb in mov stos out fwait outsl push repnz jbe bound fdivr stos mov jnp jge inc in rorl xchg push aad mov ja jbe std roll sarl (bad) dec jb mov or lds dec cmp loop insl testb loop xor nop and sbb cmp pop outsb mov loopne (bad) aad icebp dec sbb pop jmp cmpsb jmp lahf adc jns cmpsb and mov xchg (bad) mov pop (bad) movsl stc sub rolb dec push adc lds mov in adc aas ret sub popa sti jle push dec adc sbb cmp loop in sub jno pop gs insb mov in fs lods int3 jl shl pusha fidivl fsubrs sub dec lea fnsave and pop jg int jmp subl pop fsubrs (bad) jb ljmp (bad) mov adc lcall and xor clc push mov pop inc (bad) nopl lods jl cwtl daa mov loopne cwtl nop push pop outsl fwait daa cli orl cmpsl inc inc inc mov mov pusha (bad) (bad) cmp inc fist jne add add mov add (bad) fisubrl pop sti pop mov jmp mov inc inc add adc jne dec jp adc lods push mov push insl fucom cwtl pushf mov pushf xor pop jno inc xchg cmp (bad) jb pusha cld jns dec int3 jae dec jae out repnz daa add cmp (bad) mov iret leave int3 mov int3 js shrl test (bad) movsb pop aad and cmpsb jmp pop sbb cmp les sbb lahf sbb scas mov mov into leave (bad) mov cli mov pop lods rolb push jnp lret lock vunpckhpd int3 insb scas cmc jp cmpsb fs push (bad) mov sub stos push inc jns in mov loope fmul movsl sbb push adc aad inc out or inc jnp je mov xchg rorl pushf xlat xchg xor cld xlat mov in jp inc lahf fwait out idiv push (bad) xchg jnp jae popf icebp jno mov pop mov cmp (bad) push xor add xchg and xchg add mov inc sbb cmovbe cmp hlt dec (bad) push add xor mov sub in test xor fnstenv mov (bad) pop xlat mov rep cli lret mov adc dec xlat fs lods inc rcrl push movsl add pusha mov into xchg adcb in cmp jb (bad) or add scas jge shll cmc sub std pop push imul jnp add push shrb push sub dec push mov push pop push rol (bad) test sub (bad) xchg cld ret dec iret cltd repz jecxz inc sub xor dec sub call add ret pop fwait lods sbb jmp div call gs cmpb or push int3 pusha addr16 in mov jno add jb push pop jg loopne ds inc fcoml xchg data16 inc sbb xchg (bad) and push cmp stos call insb fs fnstcw dec pop cmp cs les pop mov push mov lock mov jmp xorl cmp lahf and sub sahf pop je jae (bad) mov cmpsb fwait je imul (bad) pop fsubs mov loope loope jle rolb xor lret jmp xchg add xchg mov mov out push aam cltd pop pop xchg scas loop dec insb sub cmpsb or insw mov pop lods sub or adc pop add gs adc stos xor dec mov repz jbe stos xor or adc insl test jge sbb and cmp adc mov jbe cltd xchg mov pop int mov lret mov pop xchg test inc pop idivb cmp pushf sti or inc jb push fldt test xchg repnz pop jbe int or jp,pt adc sbb or sbb adc mov pop add mov jne or rcrl movsb stos lea push enter outsl mov sub push dec ss jmp clc shlb nop jl fnstsw cmovg pop mov scas mov aad inc jne mov out mov scas int addr16 and xchg push sbb (bad) push inc (bad) icebp (bad) mov or fwait cwtl cs fwait test and xchg jne (bad) bnd push (bad) leave (bad) icebp mul bound mov mov popf add lahf in and and cltd clc iret (bad) push addb xchg rcl lods (bad) or xor mov xor ds je fwait mov push aaa jl (bad) (bad) mov movb jge in (bad) mov mov and repz xor f2xm1 std lods ret imul mov mov (bad) or xor and sbb xchg scas sub cmpsb mov test gs repnz push sbb loope mov into dec push (bad) fisub data16 push sahf clc fdivl in inc cld xor xchg and lcall lds sbb sub jmp mov test adc mov mov push sbb (bad) jb ret cmp jle lods xchg pop or loop or aad or jno cltd in sti stc mov sbb sbb sbb es loop push inc sbb inc cmp inc repnz add pop sbb ss cmpb xchg mov and es mov out fsubp add (bad) lahf adc xor push jbe (bad) jecxz outsb or ja add cmp push ja xchg xchg (bad) pop loopne cltd cmp cmc xchg xchg arpl pop into mov cmpsb sbb (bad) or addl jb inc lea movl jbe mov outsb mov mov rcll data16 (bad) xchg mov rcrl es jae cmp fs mov ss shl mov insb adc sub movb insb inc stos mov out outsl mov adc roll cmp mov hlt cmp fs dec aam and cmpsl mov push nop xor push pop fdivrl inc ret xchg cs pop xlat xor cmp and lds jge call lcall pinsrw aas les aam movsb jmp cltd xor es jmp pop lret stos outsb ss cmp repnz lds jmp or stos mov movsb enter sbb imul sub test pop push (bad) pop xlat push dec xchg out cmpsb (bad) xchg add push push test repnz out in xor nop out ja lods test aam sbb jnp and cld fwait dec lret aad in (bad) icebp xchg ss push or cwtl sub stos mov mov (bad) mov aad (bad) xor jmp xor stc add push xor xor nop adc out je (bad) adc xchg cwtl xor and in decl lcall outsb xchg and inc cmc xor push pop int3 sahf inc stos cs lret dec sbb mov add movsb cmp inc or push pop nop sub pop iret and fstpt add int3 sub jae aad mov into mov in and push fisub aam jbe sbb jno jnp repnz inc out cmp leave mov or sbb enter push (bad) cmc mov (bad) mov or fdivr push xor ret cmp sbb adc xor mov mov push fsubp pop lea test bound sub inc sbb out mov jbe mov dec xchg jns lock int3 sbb daa arpl xor sahf pop jg or adc sbb rolb jmp icebp xlat and sub nop sbb or out mov inc loop cmpl (bad) jo je pop mov das push stc pop xchg push loop (bad) mov (bad) xchg dec adc cmp addr16 test test int3 test push adc or pop les ds cld xlat mov push jb xchg std inc mov and inc pop dec stos jns inc stos mov mov stos cwtl aaa (bad) mov rcrl lock int xchg out or shr push inc rcr dec mov xor icebp and jne iret sub dec xor js (bad) add sub pop push fdivl push test inc idivb aaa or lcall lea push pop add xchg xchg cld mov jge sbb mov lds or xor outsl loopne sbb in icebp push (bad) jl xchg imulb je dec (bad) loop cmp cmpsb mov stc movsb xor out jle xchg loope or lcall inc sub pop arpl sub dec mov jae scas fsub jne push das sub popf shrb das mov add xchg push ja or pop pop ljmp mov mov leave mov test dec fcoms in fcmovbe inc movsl into sbb jo lds dec sub pushf int js test cltd stos fiaddl ja std data16 jne xchg cmpsl pop mov inc mov ficom fs pop lret cmpsl fwait aas rolb lods xor std adc mov test aam mov cmpsb mov lcall shrl iret int nop cltd movsl adc jle or and call jp mov or cmp ja xchg mov push subl hlt jb cs mov jns das iret getsec lea fdivrs fildll out add inc mov imul hlt xlat adc mov pop adc pop sbb xchg pop or pop divb mov daa repz and iret pop cli arpl xor cmp mov pop adc jp or or popa cmp xorb repnz adc loopne,pt imul (bad) bound imul sbb lcall test insb imul mov jp outsb pusha sub add lret ljmp dec push mov cltd adc cli cmp sub push movsl xor xchg sub pop loop out and fsts xor test fwait test (bad) mov push push std (bad) repz jmp imul dec pop mov push add sbb xor jle xchg mov insb aaa ss pop aas mov shll stos icebp mov fadds inc add push pop in pop sub xchg cmp inc leave jl or lret cld mov nop data16 mov mov jns lahf xchg clc enter nop insb imul cmpsl fcoms jnp lret xchg mov xor fnsave (bad) xlat (bad) repnz add xor (bad) xor fisttp repnz push cmp (bad) pop adc or xor jb hlt test jo xchg pop xchg stos stc pop popf add cmpsb inc shrl int jmp sub aaa int sbb enter ja adc jb mov sahf pop cwtl gs inc xor push pop call sub xchg add mov push cmc mov je inc popa push pop pop cmpb push inc addr16 sbb mov in (bad) jnp out sahf xor sbb hlt push mov cmc sbb xchg (bad) pop sub stos mov inc frstor and cmp fisttpl cmp jne adcl inc mov jnp pop lds sbb xor mov xor leave jne mov (bad) aad xchg scas cmp pop mov (bad) sti sub outsl xchg pushf mov scas xor or cmp cmp xor ret stos cmp imul es inc adc imul cld bound repz scas outsl sbb popa mov mov pushf adc push mov (bad) das push xor dec cmc adc xchg ret cmp int3 xor xchg pop jl push or sbb sbb mov cmp shr ficompl inc mov (bad) aam adc push loop or cmp jno rolb dec fxch pusha push fsts daa jl int movsb ret stos fldcw in xchg mov xchg push adc mov dec lock sbb pop je shll dec mov adc sbb shrb mov adc pop xor int out loopne sub inc mov icebp jge mov lock enter imull xchg push jecxz or jno js and into sub in bound jb sub mov jns sub js dec fstps loopne dec sub jbe mov rolb adc and (bad) int3 rcrl lock pusha mov mov lret sub iret into or xor out push push out jl stos ret mov sub (bad) mov jge cltd push lods mov sub inc cmc pusha test mov stos push xchg push push sbb imul and aaa mov out mov nop jp bound pop inc repz std lds dec inc repnz lahf jnp mov adc pop adc lods rorl test (bad) outsl pushf or mov adc ds inc out mov lret mull pop in or pop pop daa outsl hlt sub adc imulb fs xchg ss pop stc stos and jno jg push fcoml xor inc xor dec pop push insb mov fcmove pop mov imul xchg push (bad) mov aam int3 push and xorl push fildll lret push call jg in ret in js fildll or mov pop lea cmpsb bound add pop sbb xor inc mov lods sbb lea mov cld test ljmp mov sbb insl lods xlat std pushf mov lods (bad) in mov clc iret test scas lock push push cmp mov pop popa add loop mov cmp cmp icebp loop movsb mov and cmpsb in cltd mov add inc fiaddl insl lret stos into in sub jmp mov fstps and popf mov in cwtl mov popa js test add cli hlt addr16 pop sbb enter jecxz in mov jecxz xor negb test sahf (bad) out lods std pop mov lret lods addr16 cli ljmp out add mov mov and lcall jg sbb push dec ds mov jae add cmpsb jecxz xlat int pushf pop cmpl jne push sub pop adc and (bad) in xchg insb adc push push pop fidivrl ljmp es iret cld lock push negl out fldenv stos ja mov pop jno xor jno aad push pop push mov adc xor int mov sub dec aad cli fiadd incb pop mov pop add js iret fwait ds clc fisttp fwait jl lcall push rclb or insb push pop mov out sbb cmp fcoms jmp ret jbe out fwait jp dec add xchg mov cmp mov lret sub fcmovnu jl inc sbb xor jnp das icebp mov dec cmp inc scas hlt out std dec sbb mov mov pop cmc sbb icebp mov (bad) loopne clc dec in js xchg mov dec ret pop (bad) sti js lret and outsl and fwait test aaa lock xchg movsb jge rcrl daa pushf push jbe push or (bad) mov cmp or (bad) pop xor and cli loopne mov orps addb xor or (bad) mov (bad) aaa xchg lahf std add sub and adc xchg add ja mov sub loope inc out loope cs or (bad) jmp or jne cltd stos cmp mov jnp xor mov dec jecxz add mov ret jp fstpt dec jl or push adc hlt in sbb ficomp (bad) pop sub jge in mov dec push push jmp pop push jge add mov inc lds or and ret (bad) xor jns adc push jle mov cmp cmp (bad) fimull or movsl fwait pusha cmpsb outsl jo sar enter mov icebp (bad) sub (bad) out xor into adc pop lret out dec xchg cmp add test xchg arpl test xor or inc out push loop sub addr16 movsl sub add dec pop (bad) outsb ret sbb int3 mov mov iret or (bad) sbb int3 (bad) out sub jns dec add inc push mov jns xchg int orb lock mov mov fs cli dec inc pop sub (bad) jno repnz xchg fist stos or mov jne mov test ja mov cmp faddp fimull mov xchg jo loope into jmp lcall (bad) adc sahf es cwtl stos outsb fsubrs cmpsb movl fiadd mov xlat scas (bad) bound adc dec pop dec lret sarl fdivp pop mov jmp or bound jmp sahf mov inc push ret sub hlt dec jle imul (bad) ret in xor and dec cmc ds mov adc rorb xor mov daa fdivl adc pushf jb push or fildll aam or mov lcall mov roll pop pop das cmpsb pop push add or loopne cmpl sbb jp inc pop cmpsb inc nop inc mov push or and dec fimul cmpsl repnz insb xor sbb add clc cmp stos popf jmp jmp jno or mov sbb (bad) cmpl sub pop jl stos jbe dec mov sub push lcall sub out scas (bad) adc jno cwtl mov mov lds and mov sahf adc daa push out test arpl push shll mov in aaa mov sub pop add pop jp and push dec xor fisubrl sahf push pusha xor out adc lds push int3 dec aaa jo mov inc inc jae enter mov inc inc ret jmp cmc cmpsb and movsb sub mov xlat movsb push or js sub (bad) jae les in stos popa sub jns call repnz stos roll sub dec dec movsb ss mov cltd lods les movsl mov dec pop sbb dec hlt inc insb popf and push add cmc idivl jo scas mov jge adc adc pop xor mov add sbb imul mov js,pn sahf jae (bad) cmp outsl aas xor in push jns xor or aad (bad) inc add and jbe lock mov lock push loopne and nop jge jmp lds dec aas test mov push fildll cmpsb push mov dec jno rolb xor daa hlt or inc lahf fdivrs mov call fiadd inc add mov imull mov mov out ret dec ja pop jle ds xor adc and sub xchg mov xchg lret imul jne aad (bad) movl adc dec mov out divb out mov push add into sub push pop jno into lret imul enter push mov xor push jl mov sbb pop adc jg sbb sub pop pop pop add icebp popa cmpsl dec pop scas inc xor xchg fldl2t bound in or push and and iret or sub dec loop push dec gs dec (bad) jnp clc mov rolb movsl xchg test adc std inc jae lret mov arpl xchg push inc lret and js out jl mov dec pop repz repz push arpl dec ds dec inc fisubrl or pcmpgtw inc xor in xor enter pop aas movsb xor and icebp pop rorb pop ficom jge sbb inc stos xchg mov ds mov scas jl or movsb dec dec mov pop inc test es in push rcrl inc or dec pop lret ja out lods sahf stc outsl arpl test add cmp jmp clc cli leave popf cli xchg adc adc jnp xchg leave fbstp pop out dec loope aam pop out test (bad) mov pusha nop stc pop (bad) pop loope leave das sub push lods scas bound (bad) mov jmp incb pop push movsl subb stos sbb mov andl pop xchg cmp adc xchg sub jle xor add pop dec cld push sub ljmp in dec cmpsl or arpl (bad) adc sub push lcall add (bad) jp scas xlat (bad) pop (bad) pusha dec dec fsubl je subb xor jne lock adc dec push jno dec xor insl jae mov jbe (bad) ss pusha pop add dec movsl dec add jb leave clc dec in pop out sbb (bad) xor xor outsb or adc add into outsb cmpsb pusha aas lcall aas mov lods cmpsb daa pop fdivrl stc or loop sahf push pop mov (bad) push mov jbe xor cwtl jp or fdivs sbb (bad) in mov fstps mov idiv mov inc in inc add sbb aas loope (bad) xor cmc test mov (bad) lret outsl (bad) out pop lcall out dec xor rcr nop (bad) jne imul mov out pop sub orb dec add in lret das mov push fistp fldl idivl fdivrs dec dec out cwtl inc mov mov cld cld inc ljmp ret insl xor jns xchg test xor push test stc push push loopne push mov pop push dec int3 or arpl dec mov xor lahf js stos push aaa cld mov adc inc or lcall (bad) pop lret outsl in cmpsl adc cmp and inc mov dec rcrl inc test sub cmpsl cmp mov fildl scas inc sbb clc mov ljmp cmp mov ss mov insb addr16 and int3 popa push mov in imul sbb fist push pop lock mov xchg pusha pop nop cmp insl stos add in push mov mov or das out (bad) ss ret and jp mull test dec sub shr xor aas mov xchg rclb inc xchg jl and xchg jmp cmp cwtl push aam nop sbb or jl mov push dec push mov cwtl and sub add adc pop xlat les sarl sti mov fadd or into xchg dec bound sbb cmpsl std sub inc or or loopne cmpsl gs mov data16 ret cld imul jmp push push incl out test ljmp jmp outsb andl repnz lret das inc pop stos and mov cmp aad je push xor popa sbb cmp mov add mov je pop pop popa outsb inc push cmp (bad) push push out stc (bad) hlt insl sbb mov add pusha (bad) es mov or fiaddl leave inc cltd das cmp sub inc int3 clc aam mov call mov mov push fs hlt push mov sbb xor mov add popf mov inc fisubrl mov dec loopne sti roll inc fnstcw mov insl rcrb (bad) sub push cmp cmp jmp push jp lea mov mov push in rolb stc nop pop or sub lahf jo xchg pop addl int pusha push jmp push fdivrs aaa movsl jecxz adc roll mov adc dec dec xor pop mov es xor xchg sub add test sbb daa bound enter scas xor jbe mov fidivrl addb (bad) mov (bad) mov jae cmp dec or pop or xlat hlt test std mov adc iret inc pop ficoml mov nop mov in fimull inc dec clc pop mov xchg out fs push and jp mov dec jnp jecxz imul adc orb xor fcmovne add test adc inc xchg lods cmpsb sbb add xorb inc lock push xor cmp sbb adc mov lcall xor test xlat ret popf incl adc int3 mov fistpll ds lcall jle arpl (bad) mov lea je mov sbb jg jg and leave daa add cvttps2pi sub mov jg mov leave movups jecxz out pop inc adc add pop dec (bad) lods jl push sbb mov push and pusha cwtl call sbb ret lret addr16 mov and out in cmpsb cmpsb loope adc ret fnstenv sub pusha jecxz cmpb jne mov add xchg sahf shrb pop addl add arpl mov test (bad) xchg int3 rcrl notb jo cmp repnz push aam mov mov ljmp pop idivl mov ror push dec or int bnd and push jp ja sub cmp sub push in int3 jns pop add fmul pushf push mov stos (bad) jl mov popa mov rclb stos add insb jge mov push (bad) pop inc pop or int cmpsl adc popf jno xor xchg and stos dec ret mov test inc adc test sub mov (bad) mov paddb lds adc mov insb or jp lods mov jnp ret jmp sub aam out mov loop icebp inc mov aad sarl std cmpsb fcompl je add (bad) cmp fcoml or out xorl orl repnz repnz mov xor nop mov aam out mov inc pop ljmp out pop mov andb jbe test lahf sbbl (bad) ficom xchg jmp sub jmp mov flds pop leave je jp jl mov jg or xchg xchg ret daa cwtl std lahf pop shlb divl das out sbb outsb mov lea enter or pusha sbb fildll mov push fist in leave nop sahf xchg push fcoms pop and push push call push sub cmpsl dec (bad) icebp push arpl sbb js paddsb icebp cmp outsl inc and lea (bad) arpl jnp adc sub lret icebp ficompl mull cmc std and mov lods dec iret (bad) adc jp sub gs nop cld loopne pusha ds pusha loop mov (bad) push sahf cmp xchg js sub and mov iret lret adc pop xor inc stos mov push (bad) repnz xcrypt-ofb cmpsl in pop mov repnz adc das mov imul xor add gs or rcr imulb out mov dec fwait shl jb sub mov fild movsl dec sub insl ss lcall scas not xor lahf test sbb imul insl jne mulb cltd mov negl jge cmpsb xchg sbb mov mov sbb inc mov xchg push ja add in pop pushf out or leave sub mov loop pop cli sub fldenv jb sub inc sub dec aaa adc xor (bad) incb insl xchg mov pop jmp mov ds lds jbe xchg inc jbe loope sub cmp loope inc je add pop int3 lcall push and mov xchg mov xchg jge clc or and test jbe sarl repnz sbb xlat test ret or ljmp pop outsb jp or pop sahf xor mov and mov and rorb insl bound add sbb mov nopl mov dec lea jecxz xor push out pop mov fdivrl sub cltd lods cmpsl push cmpl add shrl and sub pop (bad) or add out add stos pop sbb add mov ljmp inc js lahf leave cmpsl xchg xor scas jb bound or (bad) xchg push dec xchg lods pushf mov sbb jp out jno push es jbe push and xchg (bad) lock loopne fdivl pop stc shrb cmovge lea and lret jb add add in jne mov and mov add arpl push mov xor jl ja enter cmp lret cwtl jge jo cmp inc imul jbe sahf sbb cmpsb movzwl sbb or and arpl call mov mov imulb lock cmp popa lahf cmp clc push fiaddl (bad) icebp or in decl push insb and roll mov jae sbb adc ss imul jg in or xor jae nop and jp jb lods movsb inc sbb negl lahf int3 insl jge adc nop sub jge ja icebp iret (bad) sub mov clc jl ds loope sti adc ss fildll xor imul stos das lods adc jno ljmp sbb xor mov sbbl sub push pop (bad) daa pop pop xchg add hlt push pop inc leave jle fldpi add das daa sbb testb xchg add push adc push dec pop out xchg adc sbb arpl (bad) jbe icebp or hlt aad movsb sub aad sahf stos xor dec clc ret or aaa divb sti loop leave les pop stos sub out cmpsb ret or out (bad) scas and dec sbb out dec mov sub cmp lock ret mov mov sbb push imul insb xor sbb inc dec imul lds pop and sub sti xchg mov scas je jmp xor aaa push loopne mov and push push pop dec in sarl test ror lahf out pop or aad lds int3 insb (bad) cwtl pop fnstcw lock scas iret mov push mov lea push in popf push jns fincstp mov in movsb dec in stos cwtl into mov rorl movsb inc push push xlat xorl fstpl sbb loopne adc loopne fwait sti inc or fidivl (bad) mov sbb jne call mov inc adc adc test arpl pushf leave sub dec push (bad) xor mov xor add push jp ss sti or (bad) iret xchg inc jg push mov pop lret cmpsl push adc mov (bad) lret or dec ljmp insb test addr16 dec mov outsb xchg sbb popa push aaa and cmp in push jmp mov hlt fwait jb push fdivs ret mov pop fsubrl aas lret xlat pop test adc cmp and mov test movsl or hlt cli stc inc pop push jp mov mov in test sub ss jge mov pop adc dec jmp pusha ss inc pop sbb or clc je sub inc aad cmp inc in xchg cmp xor mov in jae out dec cmp aas mov stos test push test sbb rcrb inc cld xor sub addl fiadd dec fisubrl bound int3 stc adc add in xchg ficomp fcompl inc jle xchg sahf pop pop xor enter sbb lds cli cli add jb or cmpsl imul mov cmp test jne rcll es imul sub sub les mov fistpll pop inc mov xchg xchg xor enter mov mov (bad) adc xchg xchg int3 fs cmp xchg ds in stc scas cmp subl sub ds (bad) (bad) mov rcll lock jl inc mov mov or les mov push adc test sbbl popa cmp and stos jmp pop mov dec sub fistl int fdivrp test sbb mov fs int lods (bad) repnz pop push fdecstp mull pop sub mov mov repnz mov das cmp adc int3 aas shrl jae fcoml nop lds xchg mov (bad) loopne sub xor (bad) mov fmuls push sub not xor out (bad) out (bad) xor jg jge daa xchg inc bnd outsl xchg and xor out cmpsb test xor (bad) in shrl mov sbb mov test xchg rcrb hlt outsb aaa mulb loopne andb add lock jo pop repnz out fcomps sub xor sbb into cmp xchg adc adc aas ds mov or pop (bad) ja xchg push pop adc ror push lret pusha sbb jl xlat xor push ds daa pop call fadd pop stos jge jb (bad) (bad) mov nop nop and cs shrl and push dec cli pop lods fwait out mov icebp ret inc into out cli mov (bad) sahf in dec mov mov mov mov xor (bad) mov push add (bad) or (bad) jbe add and push pop std out pop shrl ss push sarl lods xchg out lods mov pop inc addr16 ret push push movsb loop int jle arpl hlt push push shr out push mov cli aas lods jge push cwtl dec sub jg hlt dec (bad) dec stos aam loopne scas adc ret mov adc mov jae mov rorb out fdivl sbb cmp jns nop and jae xor jmp test jle adc mov out jns addr16 shlb nop mov xchg and mov sbb and aam pusha loope mov push adc lea jge pop loop adc sbb or jno negl (bad) sahf jae pop btc pop sub mov mov jmp pop push mov (bad) lods leave fdivl sub mov add sub pop mov movsl pop cmp in inc mov or mov lea inc (bad) push dec imul jle mov in mov out clc test cmpsl inc xchg es jae ret sbb psllw out cmp cmp insl dec mov inc fstp or (bad) dec sti and mov mov jl les push sub push lods jae and adc gs xchg repz in mov imul mov xchg insl jmp jnp add lods jae lcall (bad) outsb (bad) cmp mov or jbe (bad) jge add insl xchg loopne dec in mov scas pushf je cmpl dec andb or inc cmp and mov sbb and lods scas push fdivrs scas jle mov icebp xchg lods xchg lock dec out sub ljmp inc (bad) mov jno dec std sub fistl pop (bad) jae lcall cmpl push xor test and or add aas lret scas sbb mov pop sbb jmp int3 fidivrl outsl cmp ss out nop inc inc mov pop dec mov aad lcall fs rolb mulb xchg gs dec cmc das out dec pop std jbe inc mov cmp movsb fild pop mov or (bad) push xchg add sub mov arpl icebp or or mov test mov pop fcoml mov jmp jae xchg and mov dec dec push into int3 outsb and jmp jmp inc sub fstps xor out adc xchg sti test data16 xor xor mov jg xor test cmp jb mov std and pop insl adc test and xchg dec fldl lods mov and mov ljmp data16 sbb pop mov cmp push ret sub fsubrl add pop aad divb out fcomip test push ja addl adc test or lods repnz inc cmp (bad) mov mov adc cmpsb test adc ds cmp push pop lods shll arpl divb icebp sub push jecxz jecxz out cmp pop scas ds repz hlt dec add roll leave aaa test sub sub (bad) call xchg int3 imul pop (bad) js imul mov aas push add icebp mov inc dec imul je push mov aaa or int3 or push or or mov cmp lods add rsm mov out push dec lret xchg lret ja test mov dec mov lea mov ds in jge inc jno cmp sbb outsb sbb fisub leave mov adc icebp jle in (bad) scas pop faddl push movsb rcll xchg iret xor add fwait jnp mov int jae test lock mov add dec movzwl jge mov rorb xchg mov sbb imul stos out adc fcompl adc push fistp mov jp js xchg into sub (bad) repnz push mov mov bnd cmpsl push lea adc jo fmull cli mov adc mov mov cmp adc mov repz push sbb cmp outsl pusha in loop pop mov xor pop aam icebp in mov mov out lret fcoml dec sub mov sbb and cld (bad) repz aad mov sahf pop xor idiv inc into lret cli inc pop sti imul adc je cld fnstcw leave and rolb jp xor inc fldenv (bad) lock inc push das mov jle int in lret cmp xchg pop jne jns cmpsb stos jne xchg xchg fsubs jecxz,pn imul mov mov jl aad test dec daa movsl adc (bad) divps adc scas xchg aad es (bad) ds mov jne xchg pop add cmp cwtl (bad) cmc adc (bad) push push test dec icebp mov mov xor inc outsl nop/reserved fiadd sub les ja (bad) adc pusha inc aam pop xor lret lods cmp cli daa jle adc inc or mov or add ret jo pop xor adc inc aas fdivr inc push add in cmpsl lods inc sbb add sbb cmp hlt pushf xchg mov pop cmc fwait insl inc mov and ja jo cli gs movsl mov inc sbb pop xor repnz mov fcmove (bad) out add sbb int3 iret jbe jg mov loop cmc popf mov outsb lock in xlat dec into push in jnp cli cmp pop pushf pop xchg les inc (bad) stos lock hlt jns rcll pushf mov inc inc sub push cmp loope lret std dec enter jb jp jne mov fcom iret pop and popa bound sbb iret push adc cmpsb aad jno adc jle call lods jecxz es jnp push (bad) lret lcall scas test insl jnp es aas add cltd pop mov inc mulb imul int int pop inc push aad out inc pop (bad) jge push movsl repz xchg sbb das mov sbb in jno mov rcll xchg test pusha xor jg xchg jnp push fisttpll lds icebp push or inc pop scas movsl dec lret xor sub cmp aas mov jecxz ret xlat mov mov or shrl push xor jmp cmpl sub scas mov mull mov cmpb rep push xor test mov daa scas pop xor adcl cli lods pop fsubp subl mov fidivl adc jmp (bad) or xchg movsb inc dec test fbstp jl iret aas adc mov cmp negb insb rcll mov leave jp mov ret mov xor push push and sub outsb out jo jg adc fistpl iret lret enter jnp jnp das movsb cmpsl dec pop aad mov or pushf mov data16 mov stos jge sub mov mov fisttpl mov repz pmullw mov adc jbe sub xchg mov in aas push mov (bad) and dec inc pop das popa push adc (bad) je cwtl add leave out sbb (bad) int imul loope jno into jl (bad) cmp mov and push push (bad) cli movsb daa jg pop cmpl sbb scas lret dec cmp push les shll push hlt into mov or fmulp lret mov jnp xor add (bad) faddl mov cmp push out (bad) mov xchg and scas xchg cmp add dec pop (bad) loop mov (bad) stos cmc push mov push dec mov mov push cmp rcll or mov (bad) jne sub xchg add sahf inc sbb jle sub or fcmovne add into or (bad) pop jp adc and inc adc jno mov and lahf xchg ss (bad) or push pop push rorl xor loopne mov scas mov mov (bad) sub ror das repz das jne (bad) icebp jne stc sub std jecxz adc inc aad or dec int pop push jne mov and jecxz adc jmp je jne daa fwait (bad) xorl cmp outsl sbb mov (bad) xchg dec cmp jg add jno jp fnop push mov repz into mov addr16 inc mov sbb mov in jae xor pop divl popa fsubl in in dec xchg mov dec xchg lods mov mov adc and add (bad) xor fisubr jmp jbe xchg ret icebp shrb push cmp imul popa movsb adc add lock aas imul pop movsl jg lea xrelease int3 push cld (bad) mov adc mov bound sbb aad mov sub push call add stc xlat sub aaa pop or mov popf (bad) ja popa xor arpl ret insb mov mov aas cwtl mov mov dec mov cmpsl adc ljmp mov out xor dec lcall cli jno jno lret mov push insb mov sub xlat fstps pop inc insl (bad) mov ror mov loope sub push outsl push stc jp movsb (bad) xor mov out cmp push dec pop mov cmpsl jb mov adc and fs pop fs lahf jl and mov ja sbb lret sub arpl mov fistp aad loope push (bad) rorl inc dec lea lds cltd les inc mov xchg fs or dec jbe lret int jb adc shrb andl sbb fisubrl lock inc mov add jge push mov xchg in enter sub sub cmpsl repnz jne ds lds scas push sbb (bad) push das jbe push subb fidiv bound notb push mov and cmpl ljmp or mov push dec xchg jecxz es sbb das adc das lods fstps ret faddl call add jnp das (bad) clc pop in mov std fbld or cmpsb ret xchg sahf pop lcall clc push jne mov mov std push xor mov add jo data16 add sub notb dec lock in loopne out or lods dec pop mov inc adc push arpl lods iret lea int out sbb mov out pop xchg cmpsl gs or test (bad) inc loope sub clc into out ret xor xchg addr16 ljmp (bad) int3 inc xchg push push sbb gs push fucom daa dec nop (bad) add xchg icebp icebp xor cmp gs icebp push xchg inc ljmp sbb lret rcr iret ret mov mov sub nop subb mov cmp cmpl in cld jbe xchg mov mov mov cmpsl insl movsl lahf jae sbb les mov xor inc pop ds cmp rclb lods (bad) dec mov or lcall out loope (bad) rep icebp xchg jg mov je xchg xchg mov or fxch and cmpsl iret out ret xlat and push es xchg and pop outsl push sub icebp jmp lcall mov jmp jo or loope inc mov jmp sbb shlb ljmp ror popf pop mov cmp sub imul mov add mov das mov (bad) sbb dec jnp cmc test xor and cmp into push hlt popf jno cmp in mov mov in mov lret neg fstpl sahf cmp fwait xor std cltd out out and stc mov nop aad ret add insl push pop jge mov push loopne int3 lods popa into mov lcall data16 insb imul mov jge scas jl aas lock pop stc outsl lods (bad) sti cld sub (bad) lcall jl mov iret sti inc (bad) in dec sub shrl push adc rclb xlat test adc pop test sub pushf inc es mov subl push pop xchg mov mov xor ss push andl cmpl fucomp test mov stos push shl mov pop mov lds lods jg mov hlt xchg xchg xor std dec mov pop sub sbbl rclb out cmp cmpsl fidivrl adc ljmp stc ja jl lock ret (bad) shrb xorb int movsb inc push das sbb les bound in cmc fnstsw mov sahf dec mov decb cmpsb popf push add stos sbb test inc divb (bad) pop mov fs dec mov test or or call and adc arpl es sub mov in jmp mov xor lods pop push sti mov aam xchg fdivl sbb sbb cmp ds lret sarl insb js repz dec aad (bad) xchg aam add loope xor cltd sbb into push xor pop stos xchg xchg xchg int xor adc (bad) out das pop push mov pop cmp mov add repz and push pop mov pop mov and mov repnz or das rcll lahf out pop sbb or pop test insb push test sub cmpsl outsl and pop mov sub xor popl lret sub (bad) jnp adc bound push mov (bad) popa sti (bad) mov mov shrb clc out rcll pop xor mov out dec mov (bad) rclb ret xor xor loopne pop je or icebp xchg aaa xchg scas cwtl and addr16 cmp inc rcrb adc scas jp or popa jbe lret (bad) inc out mov jecxz push (bad) push pop enter lea or fsubr xlat aas das mov ret adc jl mov fcoms fs jnp arpl mov rcll fs adc pusha mov addr16 dec cli inc daa xchg mov jo inc test scas jle and dec pop cli pop mov test or test (bad) pop xchg xchg (bad) xor sbb enter sbb stc fldt lea xor push in dec jle adc orl jnp addb scas mov lods aaa mov xor push jecxz bound sbb cmpsb insb pop or pop mov faddp nop lds pop hlt adc incb dec cltd test sbb std mov xchg cmp flds fiaddl outsl jno shll in lods mov dec push inc aas pop ficom test (bad) xor xchg jecxz mov add sub sub iret sub stos pop fbstp adc mov ljmp xlat sbb lahf insb (bad) and loopne push jne mov sahf iret cmpxchg jne cltd jb subb gs or lods loop iret pop clc cmpsb add test jmp pop sub (bad) jecxz cmp (bad) mov add cmp int3 adc inc mov mov push adc or lret add push xor jle les ret jp clc adc lods clc mov hlt ret sbb daa iret jl inc imul sahf lea mov cwtl jecxz popa xor mov sbb (bad) sti iret repnz negb arpl or repz popa into mov pop push idiv fs or jge xor mov je pop pop adc daa adc lret in test lcall add call iret xchg js pop daa (bad) mov jmpw sarb icebp mov lret in sbb xor cmp mov bound (bad) jno mov push stos jae push ss mov or leave fadd pop mov into repz and dec adc xchg or or popa mov push sub mov push xchg sbb ret test xchg sarb lea mov sub pusha cmp xor adc jo int mov or jne dec lret sub lret pop xchg push and aaa xlat pop ficomp pop ret cmp enter pop mov mov outsb repz shrb cmp and cmp stos rsqrtps and or ret xchg fstps adc decb outsb or push mov hlt (bad) sbb pop in xchg and jl fistp lea add cmp movsb fnop mov cmp sbb mov sahf mov xchg (bad) xor jmp cltd fnsave repz hlt add call fadds jl dec out xor mov mov mov mov cli mov inc dec frndint xor adc pop adc xchg fnstcw enter adc push cli leave mov (bad) mov sbb int sbb dec roll ret mov cli push out jne xor fwait and xor jne xor mov mov push or pop repnz push mul hlt into sbb loopne jmp xchg pop xchg pop insl cmp mov sbb sub add test movb sarb icebp lahf lret fdivrs add inc and sub cmpl mov adc cltd mov ret xchg imul adc dec jg fsubl add in cmp stos test mov outsl xor mov add loope,pt cmpsl mov pushf jmp daa lea lahf addr16 xchg xor neg dec adc push pop pop and or ret lret sub cmp movsb inc repz push jle sub and dec pop inc adc loope loop adc js in dec mov push fidivrl out std imul sbb lods push fdivrs ret inc sarb add jl incl out dec outsb mov popf insl mov hlt out insl enter cmpsl nop sbb push dec imul jo xchg (bad) enter mov addr16 push scas pop stos into out lods outsl imul or sahf sub (bad) push mov or mov xchg insl (bad) repnz push imul call (bad) jo stos test lds jmp or in jl cmp cmp sbb out xchg or sbb add push xchg in enter ret sub dec pop incl gs cmp imul (bad) sbb in ds out dec outsb jmp cmp lds dec es repz adc inc out (bad) pushw xchg aam mov imul mov insl stos fdiv mov lock push inc call xchg shr pop aad adc mov scas pop mov ljmp jb call sarb (bad) cwtl clc icebp jno hlt insl stos call xor stc sbb aad push mov and jne in faddp roll jbe (bad) or gs lcall dec pop shll outsl and lahf fstpt mov nop repz mov dec fs cmp cmp es pop cmpsl inc adc repz pop call pop mov sar loopne int3 dec or (bad) xor push xchg sbb insb sbb sbb ret pop stos shl (bad) pop cmc inc iret push cmpsb fimull add in cmpsb mov out pop sub sub out ficomp fidivr stc and mov mov push pop addps sar (bad) aas imul ret mov jnp sbb push out bound cmp pop in fs push je mov jmp pop out clc mov and mov sub ljmp inc mov jle pop stos out add leave lcall sarl sbb das jae xlat cmpsb jg mov out or jnp mov adc push sbb test xor outsb mov jecxz lds sub or movsl adc and jle loopne push dec push push xor int (bad) lahf inc call cmp pushf push popa jp mov (bad) loop imul lret push jae jbe int (bad) add je rorb add sbb sahf jo ja xchg pop sbb (bad) jl test fwait pop aad jmp insb adc jne push add mov out add or icebp fcmovne lock and (bad) adc stos jecxz xor je iret inc into sub lods out push sub ds out test add sub xor test xchg hlt div xor jns (bad) cld loope push and jbe (bad) dec cmpsb lcall push push mov mov push sbb jecxz (bad) mov ljmp ret mov js stos repz xchg jecxz clc dec frstor int3 sub xorb std fldt out lea gs jns out fildl jg dec mov mov cs lret push (bad) and mov mov xchg das dec xchg push movsb repz test rorb mov xchg nop sar dec test xor mov jp mov add clc xor fisttp jmp push mov xchg sub in jno jns and lock in (bad) mov bnd cmpb pusha pop jmp cmp roll cmp fcom insl sbb out (bad) push out and (bad) mov xlat sbb mov sbb mov ret sbb imul pop jns jno out mov cltd adc mov lahf mov iret cld enter stos out fcmovu (bad) std mov mov loop std outsb popa mov loop iret pop pop scas mov adc cltd test movsl cmpsl xchg mov mov sub aas mov stc dec cs xchg xchg fdivs xchg jg adc lods mov mov ja mov mov dec mov adc lcall mov jle aaa cmp leave mov leave pop inc mov cs lods push mov test mov pushf insl cmp mov mov xchg loop (bad) repnz ss inc jo inc icebp mov push (bad) mov loop in incl xchg cmp cmc cli dec mov out push sbb leave jo jecxz in jp sbb mov aad xchg mov jecxz lods ret cmp jmp cmpsl pop push out mov enter dec cmpsl ret das jg repnz add daa ret and stos jnp and out imul inc je mov sti data16 movl fldcw sub xchg dec inc mov insl xor aaa jno hlt repnz (bad) add out mov and and rcll push repz bound frstor mov (bad) add add inc cld push addl mov enter adc jl es jmp xor sbb sti inc imul fwait inc jp xor xchg mov movsl in (bad) psraw sbb jl sbb popf jns in movsb pop movsl jmp pop out (bad) rorb sahf push leave sarb sub outsl add jecxz dec push jmp or mov mov jae inc hlt popf xchg add jl pop adc add xor mov in int ficompl sti fnstenv pop pop xor inc test dec movlps inc add out or imul mov aaa repz orl pop xchg ja inc arpl fist stc xor mov (bad) and xlat out dec idivl mov mov mov dec aas sub push cltd add scas ret inc adc scas add inc pop xchg inc fcoml push fs jmp pop aam mov xor test das ret les imul xchg lods cli cwtl (bad) int cmova inc rcr scas mov sti sub adc jmp adc push adc inc in inc sub xchg (bad) adc pop fbstp arpl enter outsl (bad) into inc ja test pop movl nop in into add jp lret push popa dec popf nop jnp mov pop std nop movsl int xchg out js cld arpl mov jo push ret ja mov mov (bad) loop mov inc sub cmp cmpsb stc int3 mov push lds add ror out mov (bad) mov outsl add (bad) cmp push (bad) cmc fdivr or clc iret sbb mov push mov xchg stc jg lods imul call call movb test int3 cmpsb mov aas adc je dec outsb icebp fnstsw cs mov jb outsb mulb int3 pushf shrb xchg cltd insb sub sbb adc movsb add inc stos mov pushf imul inc add addr16 mov cmpsl push test sub mov mov leave es sub cmpsb decl mov idivl roll fs pushf xor in (bad) sarb push cmp imul xchg jge add outsb mov inc pop jl outsb ret cmp xor adc mov jmp adc and mov rcrl dec add dec mov enter xchg (bad) mov scas pusha push ret es out movsl cltd push jo (bad) inc andl je push push mov sbb adc into lods je in rolb pop push pop (bad) mov leave les (bad) mov lods movsb (bad) aad cmp pop cmp inc xchg and mov push lret mov (bad) sub mov iret (bad) sahf (bad) pop cmp sbbl (bad) cmc adc pop and adc or inc or pop dec ss add pop popf aam rcrb pop arpl pop lock xchg insl int3 jg cmpsb push nop inc cmp jl mov scas ret sbb ds stos aas push mov loop xlat repz and cmpsb stos jmp sahf fisttpll fdivrs cmp mov add xor mov bound movsl jo imul mov push dec and and cmp mov fisubr pop scas pop jo or xor outsb xchg int3 xchg pushf mov int3 ret push xchg and (bad) rcrl dec addl pop cld mov pop dec jnp in pop lahf mov mov push xchg dec push in and ud2 jle pop cmp cmpsl data16 adc xchg dec les test fidivl lods movsl mov or sbb pop sub xchg cwtl iret mov mov cmpsl dec push mov out hlt arpl (bad) insl inc mov mov mov fs mov imul xchg and add or out xor mov rep xchg mov loope pop or xchg in xchg inc call mov push mov mov pop sbb inc fbld or je,pt xchg mov cmp ds cwtl add pop push xorl loope,pt (bad) daa pop mov and movsb pop cmp inc push addr16 sbb imul in idivb rorb sub or jl mov jb daa lret (bad) or sbb out and xchg sub fisubl jg dec xorl js stos insl or cmp cmpsb xchg and pop cmp and mov out mov lret push mov or (bad) and sub mov daa ljmp dec test mov insb out jnp popf cmpsb add adcb lock in (bad) mov add aas cmpsb push or int cli push lds fistpll mov repnz fwait sub fisubrl xchg xchg fadds xor sahf sub cli xchg push sar push jl add cmpsw addb imul dec into adc pop (bad) outsb adc ret jecxz inc add mov pop nop cmpl aam enter ficomp mov mov adc pop sub and jbe jne xor lock mov mov dec pop idivb fistpl (bad) mov je aad in mov or cltd jns add or aaa jge inc push movsb daa sub mov jg ror jno or scas mov xor push jle push subb push xchg xorl sti push cld or insl mull pop in popa cmovle test adc aad mov aad mov hlt push leave push xchg xor test fsubr aam mov es sbb push mov push dec cmovs fucomi stos clc add int adc rclb dec and ljmp loope pop lret mov add pop gs or inc test pushf mov std jl fldcw ljmp and push xchg xchg clc mov test lcall xor mov insb sti adc pop mov adc xor mov movb cmp and pop aaa sahf mov xchg shlb cmpsb out xchg call cmpsl cmp inc and inc sub push clc mov sbb mov aas and imul in mov shr add sbb mov psubq mov rcrb sbb inc mov enter es xchg sbb and jne xor inc fcomip mov pop mov mov adc into xor sub rcrb stc lcall out lds aaa aaa add cmc xchg loopne inc jmp dec ja lcall dec and (bad) (bad) fdivl repnz (bad) fcomip add in (bad) xchg mov ds pop in sbb out sbbl fs ret cmc loopne loop nop popa mov bound inc push mov cld imul sahf or inc and jg rcrl or xor ficom lds sub push fsub ss cmc cltd ja aaa cwtl pop inc out aam mov cli lret mov sbb pop push cwtl sub pushf repnz pop aam movsl ljmp fidivrl popa mov sub aas std mov xchg cmc adc cmp pop js add clc je jecxz mov push pop lods outsl bound mov lcall xor cmc cmp mov or pop test pop jg repnz cs (bad) pop push sti push ds push addr16 adc in sub cli sub xor sbb xchg jne fadds push mov pop lahf bound xor out out nop inc cltd neg aad in jge in mov adc cwtl sbbl and loope pop add lret and adc dec fs mov scas or cmp (bad) (bad) fsubl (bad) divb movsb lea out test test mov and call nop cmp cli mov sub pop and aad popa ljmp out lret add je (bad) mov add add xchg imul aaa fnop mov mov sti push cmp insb xchg dec sub (bad) push push loopne dec sub into pop orb dec mov imul int push mov dec fmul lds mov gs inc xchg jbe and int lcall pop xchg fcomps lock xor cmp (bad) popf sbb lcall jg cmovo int3 shll jne loop sub lock add out divb push mov xlat sarb aas add sub mov (bad) lods test pushf jno sub inc cmp fbstp mov ret das hlt inc in sub inc push pop sbb xor lock rolb dec mov sahf hlt or divl sub scas test push add xchg shrb adcl jl rcrb sub stc xchg mov js es enter icebp icebp dec and in pushf js or movsl les and xor orb (bad) lcall sub push sub jl cli sarb popa es push push push test mov leave cmc mov jbe cmp add or shl pop or mov jp sbb fsubrl pop xlat gs bound push jecxz push sub mov (bad) jecxz jno aas ss push push setg or rorl testb jmp (bad) mov mov into jo xorb fidivl sub sahf fmul sbb bound dec mov push sub cli ss mov pushf push jns or (bad) test out push loope or add faddl daa jmp in cli dec dec xchg adc cs cli inc add sbb mov pop sub insb push enter adc dec mov lods sbb pop aaa subb test xor push dec ret ret fs sbb fsubrl or jecxz sub into xor adc mov sbb mov mov and (bad) aad in push jnp or xchg push mov popa pop mov outsl lret das lret pop inc xlat lcall xor sbb mov je (bad) sti cld jl iret (bad) jp sahf pop mov outsl inc (bad) dec fcomps hlt pop inc add cmpsl sbb data16 test leave inc (bad) mov (bad) xchg adc cmc push sahf lods pushf repnz push pop fldcw dec mov fild lods sbb and xchg aaa in jmp cmpsb inc push sub add inc sbb cmp push dec leave mov movsl aas sub rcrb arpl dec inc insb imul inc or sbb mov cmp inc inc pop cmpsb sti movsb outsl in adc out ja shl and adc cs inc mov xchg flds add xorl aad push data16 dec sub jno daa pop cs cmp fdivrl jecxz adc mov sbbb call lods adc outsl lods pop mov push and and test pushf stc mov pusha data16 adc insl orl inc mov jo sbb (bad) cmpsb fstpt mov pop inc mov adc shl inc ss je mov or inc (bad) sti sub cmc ds ljmp mull and ret xlat push lea mov xor xlat (bad) mov (bad) cli mov pop cmp mov mov int3 es xchg inc push jle fcomps mov pop mov ljmp adc add dec call mul push inc mov jmp je insb stos faddl gs jecxz ds or imul and xchg xor or (bad) mov imul jne and mov mov sti ret loop or add ds outsb call mov lret pop ret jnp lds mov imul push pop call outsb jl shrl rol fyl2x popf imul movsl rol popf mov dec clc mov das push testb adc bound scas jg mov (bad) daa lods int3 add xor iret inc sbb jmp fsubl bound lds and pop pusha fs test push mov dec je cld sbb sub inc test or jnp xchg sti cmc pop cmc lcall into inc mov fwait xor (bad) mov push pop mov les jnp not and lock jmp mov test mov repnz bound aam pop pop sub or into adc and jae scas pop dec cld mov fwait andb pop mov daa sub jb scas popa pop bound cmp xchg outsl aaa pop icebp hlt jecxz xor dec andl dec pop out mov jo insl mov sub aad inc xchg lea iret ret rorl xor scas mov fsubl inc leave rol (bad) adc aaa ficomp jno test jecxz cmp cmp (bad) (bad) ret cmp push sbb push pop cmp cli sbb faddl xor jb inc xchg aas ret mov sti arpl push out dec dec (bad) fisub cmpsl (bad) or xchg (bad) cli and sub mov repz inc into bound jae aad (bad) and inc fdivrs push daa clc push inc mov and adc cmc xor es loope push push jbe cwtl mov sti cld inc test fstpt and les test mov loope jecxz mov sti pop (bad) mov mov cmpsl rcll cwtl mov out jle mov stos pop aad mov jo dec sub mov push mov daa int mov jb js flds lret add push addr16 call add les test or mov and dec arpl lret lods dec stos sbb xor jl jecxz je,pn out dec inc repnz test in lahf out shrl sub cmc jle mov daa and jecxz addb shrl xchg mov cld les addr16 and lret insl lods cmpsl and or push mov stos mov sub sbb imul sbbl jl jecxz rcrl bound out mov out cmc xor (bad) mov adc and xchg push test and sub repz mov movsl icebp shrl cwtl out mov add cmpb or adc xor (bad) lods sub cmp fldt xor mov std xchg out mov ljmp mov cmp into dec call ret in pop or pop (bad) fcoms ja test stos pop loop jp or dec incl jae push lahf cmp mov adc in xchg sub es loope jne incl sbb mov cmp xorl cmp je loop mov repnz fstpt imul and pop mov lods mov mov mov leave movsb and pop pop test inc popf scas jbe mov fildl cmp xor mov xchg mov push inc imul nop ret xchg pushf into ret cmp push xchg pop aad mov sahf enter loopne adc pop push dec mov xor jg add pop inc inc call addr16 js mov ja sub bound imul xchg mov mov lcall mov cmc cmpsl fmuls nop dec inc push leave cmp mov ljmp mov jno jecxz lret fisttpll or inc dec outsb cmpsl ja xor lcall adc cmc pop mov test fadds sub jmp test mov mov cld push rcll xchg popf imul adc mov mov push push jb clc mov adc inc lahf xchg sub xchg sub out cmc xchg and test sub mov xchg imul jecxz jno jmp (bad) lret in inc sub and xlat repz fildll lahf mov out idivb dec aas cmp dec pop pop pop loope pop outsl and sub (bad) in ss jne data16 fsubp xchg sbb sub xchg imul lea in sarl mov jmp fsincos insb adc sbb inc mov jmp or mov inc rclb loop dec clc adc fdivr icebp repnz xchg insb jb fstps mov mov jmp lds xchg aam leave int clc mov cli jmp sbb xor fs (bad) jae test out sub insb je and (bad) xlat cmp or gs cwtl and lret iret dec jmp leave mov (bad) mov and dec add pusha pop (bad) xchg into jmp sub adc das add fsub pop mov (bad) jne adc sahf cmpsl dec (bad) xlat add add movsb push xchg xchg sbb or jb sbb call mov test scas inc in sbb (bad) mov inc mov xchg mov mov test sbb sbb test jmp adc sbb sub in test adc mov xor in lcall xchg jae sbb lea inc ja add jmp cli test pop sahf sbb pop jb mov mov fwait sbb mov jbe xchg lock mov in addr16 pop jb sahf sub xchg sahf push jno js add mov jge cmp pushf mov pop rclb shl das xor pop and lock mov inc lahf scas and cmp insb cli mov jmp dec xlat xor mov int3 clc dec call xchg jmp sub pop xor lods imul cmp aad cwtl jecxz jb add loop bnd sub cs movb ficomp fistpll insb lcall mov into enter and hlt sub push cmpsb into push stos sub push adc std cmp push sahf jg adc popf push inc callw add add js mov inc and fisubr cld mov cmp andl xchg sub movsl jmp clc ja lahf cwtl fstps cli xchg xchg mov or stc lret fdivrs lea adc inc cltd push repz mov lock mov adc adc lods add sarb push pop stos cmc test cmp call mov popa cld dec movsl data16 sub lahf or add lods jmp xor lcall or cmc popf daa xchg sub (bad) mov and or cld (bad) gs sub mov lcall push iret pop cmp add xchg jge test cli fidivl movsb dec lahf xchg push mov or stc imul cmc idiv and insb cmp movsl cmpsb push mov rorl mov pop call sub jo out lods lcall int and sub into (bad) dec popa in (bad) lock xchg ss (bad) fs xlat lods inc inc cs cmc fadd cmp fstps xor cld xor pop xor lret jno ret aaa fildll xor notl cld out sbb dec xlat jmp add cmpsl adc pushf push loop and fst push movb dec (bad) daa adc mov lret repz test iret inc mov xchg bound out and loopne in in imul ret inc adc cmpsl xor dec mov push andb push dec cwtl add mov mov jecxz push movl cmp addr16 out lods and jg std js xchg mov jno pop int rcrb insb push cmc mov pop xchg jecxz inc fwait dec lcall cltd icebp lds aaa pop xor xor mov or mov cmp loop add pop into dec push (bad) stos into sahf add add loop cld dec cmpsb jne cmpsb (bad) ret sbb pop loop mov repnz adc mov xor add pop mov mov mov sti push add or jg cmpsb inc xor sub dec push repnz dec ss fwait or jno (bad) xor (bad) xor fcompl sub jb icebp scas ss (bad) push fadds and mov fist loopne test mov aaa daa mov ljmp xorb pusha lods fildll pop add xchg mov inc test mov repz stos xor call pop sbb jp dec jecxz sbb addb mov dec in sub cld and lods add and sub add pop pop movsb mov je push cmp jp fiadd lcall pop add or or sub pop movsb cmp (bad) clc push gs inc cmovge fidivl cmp dec adc inc xchg inc mov aaa pop xchg daa jle sarl cli push es jmp push push jecxz scas dec (bad) popa cs ds lock pslld xor jbe insb loopne sbb shrl sbb imul dec jno je in sbb dec lea sub or jl popf rorb jg cmp push mov or iret pop jmp mov shrl enter fidivl cli stos mov je pop mov xchg sbb sbb leave dec incl outsb popl gs into lds stos shrb aas cmpsb pop mov xchg xchg ljmp inc jb cmpsl and adc push in mov cmp int3 idivb adc and push lret ja xor out and push outsl outsl jbe jb sahf in adc test das stc movb and pop inc add add in popa data16 sbb or out mov mov dec xlat add imul mov and jnp lahf lret jle ss fidivr jg mov xor dec pop js push xor jnp push inc out sub cmp push fmul repz nop cmp aam fs dec stos jge loop mov and dec lods mov and mov mov adc inc cmp mov ficoml pop and (bad) cld repnz ljmp push js pop xchg clc mov mov aaa packssdw stos mov mov insb lahf repnz mov addr16 add or mov xchg pop and jle adc mov sbb dec hlt cs fldl2t stc (bad) push rcr dec ljmp dec pop in inc jle hlt (bad) popf das ror adc mov mov aas inc cmpsb sbb ljmp mov cli pop mov mov in mov aad inc sbb pop (bad) lret sub outsl xchg and (bad) mov das inc cld mov mov dec data16 push cmp addb xchg mov leave xor mov push xor das cmp cltd fwait jne cld cmp mov inc repz push idiv xchg or insl test pop push pop out das adc aad mov push mov push pusha pop pop sahf add inc pop (bad) mov xor add std mov xchg xor into pop jecxz pop mov push and or inc icebp pusha pop out and in aad fisubrl cwtl push add jp arpl loop test adc ret nop cmp xchg xor mov mov or aas addr16 stos jge (bad) xor lret ret fldlg2 aam push in imul mov sbb push and outsb xor stc push mov xchg and push nop test or pop bound cs xchg cmpsl push xor xor jp scas aad or jb dec (bad) cmp gs dec ret out mov pop or jbe pop push jge xor lahf scas jb adc mov cmp sti dec jne xor sub push or cld scas inc orl int3 cmp mov xor mov ret outsl pop and jmp cltd jmp cmp arpl adc mov mov mov cltd mov cmp gs add jmp (bad) out insl fcoml negb pop stos sahf aaa aad and ficomp daa cli fbld cmp push fs xchg mov in (bad) stos aas add pop xlat enter rolb (bad) cmp push aad cmp mov fstl repnz jmp push or stos ret adc int mov lock popa jecxz addr16 movsl xor nop mov sahf inc cmc (bad) lea aam imul xchg mov fidiv pushf out jge jo cwtl leave hlt mov rorb test and je out push mov sti test or xchg push hlt fstps (bad) push pop lods jmp mov push int3 xor int3 std psllq (bad) hlt outsb push adc inc test or push inc mov jmp stc sbb mov jnp xchg sbb in notl pop cmp inc movsl jbe dec (bad) mov pop adc xor push test push cmp stc sub (bad) loopne lcall xor adc fstps clc fisubr dec cmp hlt loop pop sub jle mov fnstsw add or in sub add sub popa (bad) jo inc mov ljmp mov mov push leave inc xchg (bad) jmp jns cltd sbbb jecxz adc in and xchg push cmp clc cmp and lea stc cwtl fistp sub pop cmp (bad) adc aad sbb xchg addr16 lret loop lods mov es dec adc and mov adc imul vaddpd or hlt call and xchg cmpsl xchg add pop fwait cwtl les aam jg push jl (bad) and pop and mov cli lahf mov insb (bad) adc xlat aam dec jge mov cltd aad jne mov subb sub fnstenv (bad) fdivl xlat inc clc xchg pushf and orl inc incl add xor mov dec popf int shrd xchg inc add (bad) std aad stc adc or xchg (bad) mov mov or cmp xor loop loop jecxz cli or mov setg dec adc cmp dec or fisttpll adc add xchg xchg mov push rcrl repz sbb push shlb pop out in xchg inc lcall adc push ret repnz mov pop popf in loop pop jbe out aad aaa xchg ficoml cli dec js push imul adc and ret xlat mov je bound adc iret ja cli cmpb fnstenv push stos cmp push xorb inc (bad) test test inc xchg xchg sar mov sub fmul mov or cmp roll xchg dec jne fmul adc sbb addr16 xchg jmp mov pop push push fs ds leave mov scas movsb sbb fs push and jecxz mov pusha lret inc call in fbstp lea ret mov jecxz addr16 dec cmc bound nop aaa jecxz fdivrs mov jmp mov adc and dec push adc test pushf lea fwait ljmp aad imul jmp imul and sahf enter pop rclb mov fsubrl add std int3 loope xor decb fs mov pop out xchg repz dec icebp es push int3 mov lods push cli jno dec mov mov xchg sbb add cmp sbb aam fs sub jl xlat jo xchg xlat lret bound cmp test mov xchg stos (bad) fmuls movsb pop stc jg sbb xchg out mov pop pop out xor push cmpsb mov pop mov sbb fildll xchg or mull mov mov xchg push mov dec cmc mov sbb popa hlt scas jecxz dec sbb jmp fimul aas call jae in sbb cld add andl lahf cmp inc mov pop jl pop mov loop pop mov push mov (bad) and fsubs mov or mov pop das cmpsb and add cmpsb imul dec aaa das add sub das and push in hlt mov sbb clc push movsb xor mov or (bad) adc dec xor xchg inc cmpsl pop stc rol stc out mov imul loopne xchg jne cmpsl or fsub push jg stos nop frndint int3 lods jne lods xor mov test xchg dec mov and inc lret sti imull out mov xchg sub mov ret sub add out sbb mov popf stc insb sbb dec xor add (bad) cmp out pop popf je jnp int3 dec loopne dec icebp and mov jl stos cmpsl stos inc fiadd das enter aas adc stc clc dec or cmc and (bad) jno dec mov jmp (bad) and or or std lds ja out dec xchg (bad) fucom mov movsl std mov (bad) xor cld iretw mov notb in xor jmp into xor lret xor (bad) mov sub jne pop or (bad) sub adc repz in add fs ret xchg (bad) fcomps add push enter lods xor inc lea int addr16 in add popa adc cmp scas idivb or fstpt and pop inc xor push outsb insb add inc divb cmp and inc pop xor mulb nop aaa sub sub test jae xor leave (bad) jge mov in cmp push movsl fwait push sbb pop ja repz nop aaa inc dec jae lahf pop popa xor call fistl mov imul xor loope std add xchg cmpsb jle sub pop movsb mov dec xchg test lret xchg cmp (bad) fstpl fninit mov adc add push das add test imull pop loopne push das insb pusha pop sub sbb pop jae loopne lcall iret add push ss mov stos xor outsb movsb fisttpl jns,pt movsb out lods sbb mov fs sbb lcall sub stos lds sub ret adc xor (bad) mov outsl iret aaa push rcr out mov jns inc imull fstpl mov nop cmp loope pop sub in lods pop int3 push cltd cmp fldln2 rcl icebp cmp lret movsl cltd cmpsb nop sbb idivb lret xchg lock test into push mov cmc jge cwtl pop inc mov aad mov out pop adc xchg stc divl rcl imul ja ret mov sub addl xor mov mov out xor lock lahf mov fldl popa adc xchg dec fwait mov sbb lods (bad) cmpsl and cmpsb mov jle xor imul mov movsl lcall sub mov push and cmovae inc push xor mov mov cmpsb pop movsl xorb clc add arpl mov pop in ficom stos or mov clc scas addr16 outsl fmul insb or lea cmp es pusha push mov cmp and repnz mov dec mov test jno (bad) popf push stos add aam nop adcl mov sbb cmpsb pop test ds inc sub jmp push in cmp jmp dec fldt movsl lret mov and sbb cmpsl cwtl inc sub xchg cmc mov imul xchg or hlt sub pusha test mov pop rorl jb divb fsts test sub mov das daa lods mov sbb insb sbb jl stc rorb ret lock inc imul mov in xchg je adc dec repnz test push ficomp adc or adc mov callw mov mov jle push cmc aam ret or push imul rcrl adc in and jmp mov push push arpl sub mov repnz push push mov icebp xchg stc icebp mov sbb push sbb sbb pop mov cmpsb cwtl (bad) add ljmp into nop cwtl add inc xchg xchg or frstpm(287 and sub je cwtl add sbb data16 aas and call push dec sarl out rcrb mov inc and xchg mov cmc fwait outsb shrl daa sbb in test or das jbe outsl imul imulb xchg fsubrs test (bad) sub out fwait sbb ja out and mov aad test lret icebp je adcl push and xchg aad mov pusha ficompl les cwtl lds jmp fisttpl dec aaa test fbstp stc sub repnz sti stos push push sbb dec test psraw add (bad) pop xor jnp ja mov push imul in xor fldt dec imul fldenv out add and inc xor fs outsb shll cli fbstp ljmp sub out hlt dec lea pop sub inc lret jp mov stc lods inc or movsb xchg and aaa pop nop hlt pop fwait push xor icebp xor mul fsubl pop into xor andl scas push cmc ficom popa imul jns in test xor xor pop arpl test xchg mov ficom cwtl lea jecxz jbe or mov mov fmull xchg dec lret mov outsb push pop adc lret loope shlb imul insb fsts popf test jg lea mov cli cmp lahf in pop out push int repz out push in sub lahf (bad) mov rorl xor mov pop (bad) pop jmp repnz ja test cmp add (bad) and insb lret cmpsb dec inc lods ffree sub push fiaddl in push mov push sbb orl mov sbb aad test mov fidivrl loop fwait xchg sbb xor lods mov or std push test xchg lahf out gs mov add or push outsb shrl (bad) ljmp add mov xchg mov jle test pop fcoms rol jge jle cmp push repnz aas add xlat in mov sub sub out xchg mov inc sti incb lds cmp out pop mov sub xor repnz pushf bnd sbb pop add push nop inc outsl xchg (bad) scas pop aad push adc inc jne fnstsw inc pop mov in mov and call sbb aaa push mov sub adcb fisttp and mov sub test (bad) test mov cmp (bad) add mov mov lds in push inc (bad) ja popf clc mov mov jmp push loope (bad) mov mov mov adc and xor push push mov mov mov popf and cmp sbb loop and sub sub sub arpl test pop mov imul movsl arpl jge cltd pop adc cwtl rcrl int js loopne movl pushf push fistl fxch imul idivl inc push mov mov fwait pushf push ret dec flds ja sbb pop rcrl movsl arpl xlat std push sti push out cmc dec mov cld hlt std loop outsl in sbb mov jnp inc data16 test xor loopne mov adc xchg jo arpl fidiv cmpsb push sub pop ret push jo lods push xchg dec xor inc mov mov pop lods leave ljmp mov xor cmp sbb pop lods cmpsb (bad) jno inc cltd lea sbb aaa mov dec cmp add out jp test dec ljmp dec or pop gs xchg mov mov fmulp cltd imul (bad) orl cmp sahf insl adc or ficom ljmp ret mov icebp rclb pop mov daa mov jl aad cmp ljmp adc loop movsl push sub jbe mov mov lods jne jbe inc movsl xor mov imul xchg mov clc rcll push loopne pop pop and mov ss dec sbb push ljmp inc pop fldenv inc cmp cmp cmp push lods mov adc inc fistl cwtl xor ret xlat clc adc push cmp jnp (bad) fisttpl idivb or enter rcll in mov cmc pop lds cmp pop ja sti data16 add cmp lds ja js sub popa popf mov add sti push ficom xor cwtl loopne stos sbb jbe (bad) out pop (bad) aad pop iret fadds mov xchg stos xor mov xchg ficom rcr lds stos incb ljmp push inc or xchg xchg popf mov arpl mov test adc iret push setae sahf test pop cmp sti push jge fwait dec xchg pushf ror shrl rclb fisubrl fadds xor call xchg loop,pt loopne jle cmpsb xchg xchg clc pop mov dec and inc cwtl scas out or hlt popa sbb inc repnz aaa mov rcll dec and jmp sub mov cmp daa loope pop insb lds rcr in aam int3 mov rcll ss rdtsc into push inc and lds dec repz fs push pop sbb and scas popf inc cmp data16 pop (bad) (bad) daa (bad) lock mov ds cmp or pop push cmc cwtl pop fidivrl out jo leave cmp popa cs xor notl push popf adc into xchg jmp cli addr16 sti stos pop sarb bound out leave aam mov pop nop sar in push scas cmp aad lea pop push imul out popf dec jb adc ret ds insb lock popf and and mov mov test mov mov inc pmaxsw and and loope aas ja out insl rcll xchg mov mov mov push and pop mov jno mov out ljmp mov dec xorl ljmp js,pt add sarl fisttpl lods xor dec and dec repz dec lret aaa and adcb data16 lock adc les loop or sbb push xor aaa xchg sub adc xor sub roll gs cli daa loopne xchg decb daa inc sarb cmp mov lods sbb pop sti aad (bad) pop hlt scas (bad) pop inc (bad) mov rol xchg (bad) ljmp mov xchg (bad) and lock cwtl push icebp iret addr16 jl pop testw mov adc pop jns xorl (bad) dec sbb popa cltd inc lahf push lret stos addr16 es iret adc sbb and push xor dec stc leave aaa mov mov ss mov xor mov dec addr16 std xchg jno imul lock xor ret test fisubl fcompl ss (bad) lret pop aad fsts dec or out xchg pop pop mov mov pop rol popa mov mov popa inc shll pop or aaa adc adc das or (bad) gs sub (bad) ja xor adc mov and sub mov inc inc adc mov add mov scas out fadds data16 xchg in mov (bad) sti (bad) (bad) dec push mov test inc pop lds shr imul and xchg sub jno jb dec in pop jns dec imul out (bad) hlt jecxz inc inc and sub jnp js movsb mov fucomp mov lods pop sub fnop (bad) mov sub mov and inc and (bad) fwait in jge sbb clc pop mov cwtl sub inc xchg shrl jno sub xor xor sbb fdivrl jmp daa scas push out or es cmpsb add inc xchg and sub inc fisubrl mov add sbb cwtl es pushf (bad) clc movsb jecxz sarb dec cwtl jmp sub aas out cmp test mov jecxz push add repnz cld mov rcl (bad) mov sub insl sarb pop mov adc test popf add mov mov loop pop jge cmp adc fstpt adc add pusha xor xor into xor aad inc js shrl (bad) cmp jp aam addl ds jns lahf push cmp addl cld mov dec repz popa stos lcall movsb lods cli scas cli sbb jnp imul sahf stc sub pop int mov insb repz sar sbb es pop pop fist lret mov push push add add je mull ja sub bound or arpl fstp sub add scas push cs mov bnd jecxz clc mov and and mov dec or mov rcr mov mov lock push pop add popa aad jp out enter mov push out add scas mov adc add dec adc loope mov jbe push mov xlat mov movsb mov je push xor ret fbstp sub jo add pop jne shll dec dec jno (bad) sbb mov add add add xchg add lea cmp push leave and inc sbbl push xor popa in mov and xlat dec icebp lds shlb dec sarb (bad) scas cli arpl fldl les std out mov jno sahf dec loopne lds mov daa jns mull xlat (bad) popf leave movsl call or scas pusha movsl popa into mov fildl sbb push ljmp add adc and imul outsb cmp xor fs mov push or stos repz inc push aam popa (bad) lret gs imul clc cmovno inc xlat jecxz imulb mov dec xor lods xchg mov inc xor or mov mov imul push aaa adc inc dec mov add ljmp pop push jne mov loopne (bad) dec mov xchg sbb cmp out cmp cld sub sbb stc lods fdivrl pop scas (bad) fidivrl cmp outsl xchg mov popa loope stc cmp loop nop mov jbe xchg rcl pop add in xchg data16 mov dec sub (bad) xchg mov test mov and insb cmp add xor insl movsb fisttpl push push xchg and mov or (bad) jle les jp inc mov and cmp inc mov pop out add pop mov mov xchg mov jno (bad) dec push mov pop and add jne xor push sbb fdivl cmp dec imul les repnz jbe and (bad) cwtl dec adc pushl xor dec xor and inc inc xchg icebp movsl jo std scas fisub fnstenv dec jp lret cmc xor in into es mov inc pop jb movsl test rcrb andb mov insb push push mov fcomps lds jns adc outsl pop adcl push shr cwtd int movsb dec xchg fidiv ret ficompl mov mov js insb jmp mov std in and inc (bad) lahf scas dec cmp js sub xor scas and jo or popa pop xor dec push lahf dec pop repnz sub pop sub push out xchg ljmp or stos scas mov incl mov adc cltd mov cmp jno sbb ret mov dec scas mov jbe cld and inc and adc push adcl imul ficom push fsts sub test sti mov outsb sbb cmp or pop adc cmp aam (bad) sbb lret dec and aas arpl adc call xor jb jb outsb std pushf mov stos lods in hlt call pop pop addl push ja stc loopne cltd xchg clc (bad) lock mov pop mov push sahf sub xchg insl pop cmpsl mov sbb insl mov jle mov ljmp insb or pop (bad) bound sbb sbb pushf outsl pop or xor loopne inc xchg mov pop scas aad push ret or xchg pop sbb rcr or add pushf mov mov (bad) push mov jle popa jnp data16 sub int3 iret lret es mov and mov mov mov jle imul pop dec and shrl into in mov movsb repnz mov and imul ja jecxz xchg cld jb rcrl jmp xor incb (bad) sbb fcompl cmp mov into std mov and (bad) into push mov iret aas xchg inc mov mov das cld stc push xchg in jb inc movl imul pop shrb andl cltd in or lcall out lods cmpsb pop or mov xchg (bad) repz insb add in sti call cmpsb das push dec int lds or scas lods scas pop jo mov fldt and mov leave pusha dec mov mov test lods loopne ret enter movsb jecxz push mov (bad) fildll mov popf xchg jmp adc mov pushf cmc fdivs mov sahf xchg mov mov (bad) jp mov dec fisubrl outsl imul icebp inc out call mov repz inc movsb popf fdivrs or cld mov xchg sbb mov dec dec mov (bad) popf mov bound xor lock in jno mov adc cmp out jle dec add add loop jg ret pop mov (bad) xor ret jge repnz stos mov add hlt popa leave push mov pop in imul sub ljmp and pop pop insl push jg data16 inc push movlps mov nopl mov es cmp mov clc mov cltd add xor imul xchg dec pop in lds int3 inc push xor mov (bad) pop lahf lret xor rolb lock adc cmp int3 fcompl icebp pop bound mov lret xchg push jle mov push lods sub mov push fdivrs sub xlat sub test jecxz imul fxch mull adc mov mov jl jecxz pop push (bad) sarb call or int iret xchg push xor xchg out xor push jge test enter mov in adc push decb arpl cmp outsb and fwait push jl repnz cmpb stos (bad) outsb insb std push push add add push push sbb adcb hlt mov repz jmp xchg shrl xchg dec sbb adc sub jb out pop sub in call fdivp push lds sub int3 mov mov popl cwtl test clc rcr sub pop jl gs inc popa and push jle cwtl or mov int call pop ret mov cmp (bad) in mov cmp inc add inc aas test enter cmp xlat sub lds rorl adc xchg (bad) or mov cmp fdivr (bad) push and sub jbe adc das rcl arpl scas dec jp jge arpl or xchg idiv push push or dec repz gs pop repnz test mov jnp in xchg das sbb arpl add das (bad) jo,pn xor aas ficompl dec aaa mov sbb (bad) out inc xor dec adc test push mov and mov lods add push call mov jbe insl sub test xor addb xchg outsb idivb cmp stc mov lods add pop adc xchg cwtl loopne movsl sbb fisub (bad) loopne sarl cmp outsb mov lret out out adc add mov mov sbb mov and lock stos shll mov frstor daa push or fdiv xchg in pop (bad) sahf mov outsb pop add sbb jecxz (bad) xor sti or arpl movsl insl popa xlat test add inc sbb dec xor movsb or cmp push ficomp out flds test ret adc ds jb pop lds testl pop cmp js push sbb popa scas jl cmp ret pop adcl xchg xor mov and int cmp enter sbb push mov add (bad) mov roll cmp inc mov fmull cmpsl add pop ret cmpsb xor mov cwtl mov mov or xchg in ret push cmpsl ret sbb cmc cmp push (bad) xor xchg mov in add or (bad) mov cmpsb inc dec and mov xchg mov sti cmp (bad) mov aas mov mov jno out fidivl fidivl mov add fstpt cmp jne lds es arpl mov rorl leave movsb mov out mov mov dec jno enter scas mov xlat jl xor sub sub pop xchg test cmc push loopne xchg aad (bad) sbb and dec push push insl loop sub hlt (bad) (bad) sahf push cmp mov xor pop jg pop mov or pop jge push push clc dec or push mov sub ret mov add enter mov icebp xor jecxz repnz and dec hlt cmpsb xor sbb push subl (bad) nop push rorl cmp ret pop pop adc outsl loop pop fistp aas test packsswb xchg push push jmp sub jae mov shll and fisttpl add in inc bound and fwait lods inc push popf lcall xchg cli jae addr16 inc mov inc aas std inc out xor mov cli popw inc je xor leave popf push pop in pop movsl add mov jge jmp push aaa push jp jnp bnd or cld nop nop and aam jnp sub in sub enter or jb ret sub gs insb stos out xor push lods or fstp mov inc add sbb pop fisubr lods enter and gs lret lcall or xchg je call xchg jbe inc cmc jl push cmp mov mov mov imul lahf jae add pusha aas int3 vmread test aas test jl js dec rcll fimul out sub jae iret jns in hlt lock pop inc or and loopne nop outsl jle sbb (bad) hlt push fdivl pop jb xchg ljmp cmpsb (bad) xchg popf jbe test lret cmpsl xor mov repz mov loope lret stos flds and clc push inc push out pop sub int inc insb adcl push rcl mov sbb add jb clc push mov dec mov test repnz and jg insb mov add pop xchg loop ficom mov sbb loope sbb mov dec (bad) imul (bad) stos push pop test pop pop cmpsb sbb sub lods stos mov cs (bad) push lret out jl rclb ds ror int repnz sbb das adc lret inc push loopne mov add cld outsb xor jno (bad) xor cli loopne jp cmp mov lods repnz in inc mov shlb mov sbb lods mov into mov nop ds xchg xorl imul bound mov pop lret in cld xchg movl push in jg mov cld sub cmpsl and leave fldt fist add and push sub in outsl inc mov pop jl sbb mov sbb cli xlat (bad) lret sub pop (bad) out push (bad) mov mov inc je xchg iret lock or jo dec bound iret mov or out push mov cmpsl sub cmp das movsb lea iret mov test dec flds add jae subl rcr movsb push inc adc and fsubr adc data16 shll adc push jbe push push sub loope and add mov pushf pushf mov mov mov fdivrl stos push sbb pop nop xor inc sti in mov mov mov cmpsl pop roll add int jecxz push ss ljmp xchg push subb xchg sbb jbe scas sub xchg mov adc sti and adc icebp sbb jmp push ljmp (bad) cmpsb jp inc shrl imulb fwait in sub adc ret inc push daa add mov and and std out cmp pop jg inc jle outsl popa or into mov mov in rclb jnp jnp add les nop in push lcall inc adc std dec mov sub jg pop jecxz bswap or fcompl popa divl je cmp into or mov hlt lods push jns cli mov jbe dec xor sub sarl (bad) dec push sbb lea stos push jbe ds xor xlat roll add out nop xor jle in sar inc out add shll pop push or sbb sub mov mov into pop dec mov inc arpl add cmp movsb int xchg lret xor loopne dec or leave clc insl push stos fadds mov leave or pop xchg pop add pop shl rcrl mov data16 push adc and and push (bad) adc fsubl mov adc sbbl lods and sbb mov sub mov push mov pop (bad) rclb test jno loopne,pn test or inc push and neg imul (bad) mov lods mov pop mov inc fwait dec push xor fdivs or pop andl mov pop movsl inc push mov (bad) pop out pop lods movsb fidivrl lahf into cmp data16 lret mov fldcw push scas cwtl xor dec lcall dec (bad) sbb sub jb cmp push mov sarb dec rorb or inc add (bad) mov push bound cmpsl xchg (bad) cmc je mov sub inc inc scas faddl cmp test outsb inc mov decb repnz insb aaa stos inc push mov ret std inc adc mov mov push add mov mov push lret mov xchg add push (bad) mov dec pop xor (bad) ficom lea cmp pushf bound sahf inc mov (bad) loope js pop xor jne les xor fcomp call push or and mov (bad) das repz and push in xor pop dec cmpsl ror xchg xchg aad pop iret test jle cmp mov adc dec stos dec mov push mov mov jae add xchg shll xor xchg lods adcb aad addr16 xor outsl out fidivl push pop loop ja cmp insl mov out mov and xchg mov je jne rcll cmp push push xchg push outsl inc push scas (bad) xor adc sub movsb cmp pop sub xchg scas xchg cmpsb add xchg rorl loope mov cmp sbb aam cmp mov add dec mov aad (bad) and out orl pop xor and mov das mov mov sub sbb or mov xchg mov cmp std jae sub mov fsubr loope lds std scas xchg ljmp cmc js xlat imul xchg loop sbb sti inc cwtl shrb scas in mov call inc popf jno or fisttpll and pop xchg loop addr16 push or iret mov lods adc sbb std mov mov xor dec mov ret (bad) jecxz jno add insl inc arpl icebp cltd je xchg dec sub jmp cmpsb mov hlt jg lods xor icebp cld push sub sbbb mov (bad) mov jnp out fs adc jns mov mov push mov in in fwait pop cmp ret mov jb sub xchg xchg jae pop push cld push inc insl mov getsec sbb daa sub cmp sub shr dec add lret adc cmc cmp or pop iret fcomip sub or pop dec test xchg cmp mov push std ficompl repz pop sub mov call adc pop idivb push test add mov insb cli (bad) orl add push (bad) out jns ljmp dec in mov mov stc scas loopne dec movsl iret bound dec fwait sti es cld push sub pop movsl sbb mov mov inc sub das pop test jecxz fwait subb cwtl mov and outsl xor (bad) int dec sbb mov scas loop imul inc mov sub dec (bad) mov sub push les out jge push dec ret in (bad) jb ljmp jno push jg jne sbb cmp jmp nop cmp cmpl sbb cli adc sarl jne sbbl push add (bad) out pop icebp popf jbe lret incl clc aas gs stos cmc out pop lock cmp scas out pop or outsb out sub fwait mov (bad) jae xchg fsts mov inc mov ljmp sbb shrb sbb icebp rcl outsb cwtl mov dec fs pop and loop inc jnp ss sub loopne hlt mov aad cmpsb pop adc sbb popa push and pusha aam rorb inc loope cmc push cmp inc lods imul pop lret leave das into jbe or cmp push and sbb inc pop sub aaa movsl (bad) push test cld jns icebp pop imulb ffree test test jl cltd fstps outsb push test xlat adc xor in xor mov fmuls or lods (bad) testb mov cs rorl and loopne and jno repnz mov stos mov iret pop push addl push test lods ja push call fmul cwtl xlat dec and pop jp lret sbb inc icebp push dec icebp add daa xchg adc (bad) mov xlat xor call sbb sub sbb das add sub mov push mov push jmp mov sbb lret jp push mov jne mov push mov and stos sub push imul decb ss sbb sub clc mov xchg insl push jns xchg mov push inc stos ds dec cld jno xchg pushf fldcw xchg (bad) (bad) mov or jo jo (bad) jno mov xchg push pop cmpsb fsubs in psubb jle push add add and mov daa (bad) lcall mov and xor (bad) dec loop pop push clc push jae pushf mov inc add xchg sbb push xchg push sti je mov popf stc push les insb enter mov add js sub add jb push test mov add sub movl (bad) mov and adc (bad) iret loopne inc shr pushf faddl mov sbb lret add pop test or jb sti lret mov nop pop jo out mov add cmp fnstenv sbb pop mov scas lcall dec xchg lcall shrl rclb add lea call jp aad fnsave dec jnp lds push in jecxz pop sbb mov aam add dec sbb push jl inc ss sbb xchg mov dec or sbb inc mov popf (bad) stc sbb push mov aaa sahf ror mov bndldx pop fdivs adc aam jecxz jecxz jge pop sub push mov jp popf mov mov ja rcr inc cmp in test cltd fwait inc pop test xlat out xor mov aad pop pop push rorl xor fucomi mov lret nop pop and mov pop inc lret inc mov add pushf nop pop notb (bad) in (bad) mov addr16 out add cwtl fdivrp cli sar adc fist stos push mov int3 lock hlt in dec ret push out xor mov add (bad) lret mov push jmp nop push jle push jbe sarl mov sub (bad) loope mov sbb lock pop rcll stc jnp and or adc push ja mov add in sbb sbb adc pop xchg add or mov mov or ficomp push fstpt in inc mov xchg and jg lea and in nop dec addr16 jno mov stos std call mov inc stos xor push enter aad mov mov divl adc sub push cmp ret sahf xor add cmpsb pop sahf jp and mov stc add push loopne inc add inc rolb test repnz sub mov je aas shrb in cld mov call adc scas inc cbtw or imul jp mov push rorb mov push (bad) push test gs mov scas pop daa dec jno fdivp testb mov enter (bad) ljmp lods pusha daa stc sbb ljmp xchg (bad) stc movsl ljmp into loope inc stos dec stc xchg inc mov push xchg mov dec cmp or jge out push cmp cwtl fadds or xchg sub in aaa lret fnstcw test jae pop sub xchg push leave mov mov cmp outsb adc xchg add xor push jl mulb hlt shrl sysenter pop out fldenv cmp jbe mov sub jb add out add or in add or sbbl cmp jl push mov inc push ret pushf inc (bad) mov stos es bound std xchg xorl cmp inc mov arpl mov les popa and (bad) insl cmp fcmovbe (bad) jns,pt outsb aam std or xchg in jns and adc out cwtl push push setb dec jno loope insl roll repz add cmpsb sub xor pop xlat movsl inc in sub inc pop cmp mov les icebp inc sbb and sahf cli xchg xor js jae push push cmp in stos repnz std fs dec cmp stc lods sbb mov and mov sbb out xor imul cmp ljmp mov pop roll imul or push cmp leave push adc and lock dec sub adc sti mov das out scas adc popa popa imul sub (bad) xor xor jp scas dec xchg push lcall std xchg jae int lret shll pop cmpsb cs mov dec jae cmp add adc cmp lea ror pop push pop jecxz adc aas fs and (bad) jle les adc mov scas (bad) jmp sti or xchg cmc pop popf pop fs adc xor and dec and mov push (bad) sarl inc rcrb mov mov pop sahf add test xor loop fldl dec out into sahf popa mov fadds jmp mov shl pushf cmp and daa push test xor inc mov adc in ss pop sbb mov test xor (bad) in or pop aas pop add lcall imul cmp out gs xlat xor push pusha jecxz das loope ss push sbb inc inc push mov fnstenv les (bad) int repnz mov sbb addb aam cli scas int rolb sub das pop push inc ljmp jmp and add lret cmpsb inc jle xchg sahf xor jecxz xchg mov push loope enter push mov pop into shll andl mov (bad) jo mov inc xor roll mov mov cmpb lods adc fsubp cld mov xor stos das lret imul movsl add fcompl test adc dec ret lcall xchg cli or shrb push xchg or addr16 xchg mov rcrl lret mov in sub arpl xchg mov xchg ss loope xchg hlt jp leave cmp mov inc push (bad) xor xchg imul push cmp xor (bad) push mov adc cltd mov or lcall jns popa sbb pop daa fistpll jne ds (bad) jle rol push and dec xor popf push dec lea xor fistl inc jmp test push inc mov and test fs push cwtl xor push lods lock or push (bad) cwtl clc add mov lcall fs shll push aam daa mov lret push or mov mov xor pop ja inc add cmp and push dec push dec dec pop xchg mov stc xlat add test or sub rcrb cld out cmpsb cmc ja sbb aad ja adc lock pop lods add xchg repnz (bad) nop or push orl imul and sbb stc dec inc adc aad add jo js sub adc movsl out jbe and out (bad) ficompl pop jno loop adc cli gs pop cmpsl popa cltd pop cwtl jl es and mov and (bad) or ret inc mov rcrl rclb das mov pushf jmp arpl (bad) aas add cld cmpsb (bad) loopew imul icebp (bad) and (bad) fisub (bad) push adc into push out (bad) sbb xor pop andl pop sahf push stos mov jp inc inc push adcl aas pop arpl pop jns les outsb adc (bad) or or adc mov xchg adc ss data16 xchg mov push out bound cmp inc enter and (bad) lcall (bad) jge push jns dec inc adc jmp cltd ja repz xchg xchg loop add addl icebp test out test fcomps iret push push inc data16 push sbb xor js in das scas jecxz ljmp pop sub (bad) inc pop push xor test lret loop movsl mov movsb ficoml std mov mulb xchg xor dec (bad) icebp clc int3 mov adc in adc adc arpl in es fnop into fcomip idivb rorb add mov daa xor roll sbb leave aaa adc push icebp mov les ljmp addl dec mov sbb cmc gs jle movsb dec xor fnstenv jle dec ret mov aam jg nop push frstor fmull adcb sub inc mov cmp insb mov push mov xchg lret mov push dec mov data16 test mov mov or in mov mov sub pop and xchg mov add xchg cmpsl xor jne imul cmp test xchg jge into mov mov test adc add pop cmc (bad) jno clc dec outsl movsb push dec aam out iret dec cli fucomi xor push add scas pop mov or pop add push mov mov andl dec push mov inc jmp sub stos pop jne mov xchg and mov xor (bad) inc dec pop andl repz add xor sbb outsb push int3 mov in jg addr16 mov insl insl icebp mov fsts push (bad) mov push rcrb (bad) fnstenv jg mov cld cli inc xor notb inc lret mov pop lods scas xor pop (bad) jo or ja inc movsl mov inc shr adc push adc mov mov push mov movlps dec (bad) scas hlt shl add mov and out ret push inc and outsb inc or movb jmp adc sub call jb mov (bad) add push inc mov add inc mov xchg rcrb pop push push and lcall fcmovbe (bad) xchg (bad) jb and inc cs push ss or incl push cmp lret (bad) idivb decb push jge jmp movsb pop xchg cwtl xchg int (bad) imul shrl mov ret aad dec aaa outsb jnp loope in sub adc add int3 and movsb js in sbb es cmp pop imulb movl xor push shl jae mov mov shr mov push and jnp adc in xor mov jp fldenv pop mov jae fsubs xchg imul cltd jno dec loop les frstor sub outsb add andb ss sbb mov hlt lcall clc outsb cmp xchg or imull push jo inc ja fdivr call fsubrl iret mov add dec repz loopne iret adc jo cmpl repz xor pop fbstp xchg pushf rorb dec and inc fdivrs fisubrl cmc jbe outsb xchg xor sbb sbb adc int3 xchg enter add sbb and les and fdivr fiaddl jge inc insb mov sub mov ljmp mov adc outsb icebp push xor iret inc mov and gs lds pop sbb adcl ja cwtl jnp sub jae loop iret out dec insb (bad) mov jnp push mov mov (bad) (bad) out fisttp mov subl xchg or jb mov movsb ja xor mov push in iret into fmuls mov ret pop jp movsl (bad) mov dec cmp jbe mov sub mov (bad) aas fidiv and int3 subl in (bad) mov add xchg push or pushf and call incb ss mov and ss out adc popa das test rcrb push jg pop push and jg fistpll add cld lds adcl push add dec popf aam cld jge in dec inc gs iret in mov mov jo sar push pusha inc (bad) iret add add adc xor call int3 arpl cmpsb mov jnp jp fsubrp dec jmp xchg xor push loopne push repz aaa jp and sahf sti js std test test push call leave lahf into sub jl jae aad sbb es add jmp mov jae movsl or inc inc mov ret mov outsb push cmp ss mov pop cmp out in aam sahf mov inc (bad) xchg xor rcll es int ret je icebp add cmpsl cmpsb into and xchg mov add push bound dec mov cmp cwtl add inc ljmp adc aam fwait and icebp mov adcb sbb adc stos pcmpgtd scas popf pop popa xchg loope pushf jnp gs gs push push inc add je xchg xor addl jae sahf sub call jp sub clc call lahf fcoml testb nop or orb mov jp adc xchg pop mov insl insb or loop adc sarb mov dec sub pop int pop cmpsb andl or scas inc lods pop (bad) cli inc clc aaa test lcall cld xor mov cli jle add mov aam call iret lds or test xor stos push sbb mov aad adcb mov rclb inc cmp mov cltd vmwrite pop gs and inc rorb mov das dec into mov sti pop ss xor push into bound sub mov mov outsl popf popf add mov mov jge sub pop gs sarl imul mul imul stos aam jne std nop sub ret pop mov imul sahf inc (bad) in and repz dec repnz mov das movsl cld aam dec add pusha mov mov pushf outsl shrl cmp or repz or mov cmp and movsl or mov test inc ret out pushf sub push into test sbb inc notl pop inc mov xchg outsb xchg sub pop negl cmc and icebp xchg push out movsb jae xchg push adc int3 shr adc ud2 enter shrl lds rcll dec icebp fsts shrl inc jmp inc (bad) jne jle out sub in fnstsw sbb in movl imul mov loopne lcall out imul das popa out shr roll pop mov mov int3 shlb xchg push dec or fistl push mov mov mov in stos repz mov add push imul xchg xchg aas mov es jp and movsb push inc mov dec in repnz sub mov cmp dec cmp add and aam (bad) cmp daa imul das fsubr sub in pusha xchg icebp xchg cmpsb xchg es jae lea ds mov enter daa pop xchg adc fiadd inc xor jae imul push das test cltd or adc xchg xchg stos add les inc stos sti aad sahf std mov jne sub push and mov mov inc (bad) std add xor fidivl inc jle mov dec sbb sbb popa fstpl js mov xlat stos sti rcll inc pushf and pop mov shrb (bad) or sub push mov addl mov subl shrb repz and mov imul mov sahf add cltd cltd popa leave sarl sub adc and lds cmp jle aam je out cmp cwtl jge clc adc sub jne dec xlat jae dec mov xor stc rcrl imul sbbl js xlat cld mov mov pushl lods cmp rolb inc cs adcl fwait movl notb jae punpcklwd fidiv (bad) mov xchg hlt add rol testb nop rorl test lret in out inc mov out pop mov push imul bound push xor je jbe xor aas (bad) stos adc hlt jmp call dec jo pop gs test inc pop and mov popf sub rep int push unpcklps scas or int cld xor jne push cmp inc lods andb fidivl pop pushf sti cmpsl (bad) out lods orl xor jmp jae out and add mov pushf jmp test mov cltd xchg (bad) mov inc mov adc inc dec xchg aas xchg add mov nop push in cmovs repz xor pop sahf sub lcall out out add test and (bad) test fcmovu movsl rcl sbb mov fsubl adc cmpps ja iret cltd push stos jle xor ss lods jo dec or into mov out or test mov xchg jo int je and adc pushf xchg ss push dec sahf jbe or pushf lods adc mov sbb xchg pop sub iret mov fistl cwtl int3 dec out jg in mov icebp incb mov or dec dec (bad) cwtl popl test and push std sahf sub pop xchg pusha pop jns jns xor cmp adc mov out pop adc ljmp xor (bad) dec es cwtl mov xchg inc call jno rolb test inc mov jl pop sub (bad) push inc dec test push dec aam sahf push jb cwtl inc int3 mov lods xchg cld add lods ja out les xor push dec imul cs arpl data16 push in push xchg in fsubrl ljmp out (bad) (bad) sbb inc push dec push mov xchg outsb inc mov ror fist mov aas push lea cmc pop mov imul inc mov je imul push mov mov test or inc lret inc popf (bad) (bad) stc or dec cmp and push data16 and jns outsb cld (bad) je mov add clc call push jecxz jne xchg xchg mov or xchg movsb or cwtl mul lahf xchg sbb dec dec inc xchg add mov sti pushf loopne dec pushaw push xor fistpll out adc jecxz (bad) pusha scas dec inc loope add pop out mov mov mov inc adc mov jle adc mov dec subb mov js cwtl (bad) xor and mov xchg sbb sbb jmp xlat and imul jmp cs repz dec or je pop sbb cmc rcrb xor xchg xchg popa arpl lret xchg rcll in paddd dec inc clc lods push dec mov or int and sub nop cs fsubrl std add add insb mov push adc shlb push js outsb jecxz sub mov and mov imulb add xorb xor repz int mov mov aas mov or cmp idiv lods jne and mov fiaddl xchg dec test add addr16 subl aas outsb sub dec jecxz (bad) dec xchg dec sti fcomip add xor cmp imul rcrb push cli sub je pop cmpsl adc push cmp xchg adc adc incb sbb (bad) sahf insl mov mov or adc fdivs pop push xchg inc ss or sub icebp jl enter roll and xor adc xchg scas (bad) jo push push stos orl inc ds ja ljmp add pop adc jo hlt rcll adc lahf push pushf fdivrl imul mov or mov pusha jns or pop inc aam test sub xchg jbe dec (bad) jne fsubl into (bad) loope mov imul add cmp popf xor movsb xchg scas or dec mov sbb xchg test in mov (bad) insl (bad) mov push es push pop fisubr (bad) jae jg sub adc or mov push movsl mov faddp add pop push dec push xchg jmp movsb cmp movsl inc pop dec pop push inc adc (bad) out mov jns stos inc mov out mov in lods jecxz lods jne sbb or sub clc cs push add add xchg iret or sarb int3 mov pop in xchg cltd xchg pop pop nop ror push or and push pop out dec jb jle push repnz es jb ljmp cmp test inc (bad) jae je es test imul add sub jecxz ret shrb test pop jns aaa stc pop fildl push pop fdivrl pop lods mov jnp (bad) shl xor aad (bad) add and jge in cwtl fwait arpl fwait inc xor movl jmp lcall adc fs lock jb sbb out rorl mov cwtl adc (bad) loope lds xchg add mov sbb nop inc mov mov pop std arpl in aaa fsts hlt cltd imul jle add les mov lret iret movsl cmpsb pop ja xchg mov dec (bad) dec sti xor pop fidivr adc adc in out dec push ret cmp mov mov pop push loop popf data16 xchg mov jno leave mov pop loopne repnz inc xchg xor dec xor lahf ret add jbe (bad) ja xchg movsl mov daa aad dec push popf adc sub xor inc inc sbb arpl mov jmp mov and mov mov and mov aad add xor mov xor sub out fdivl inc mov cltd jae sub dec sbb dec fdivl es mov fucomp xchg sub sbb mov mov stc mov and test xlat xor adc (bad) jne pop notb scas xor inc dec fcomip cmp fdivr and add mov (bad) (bad) lock pop outsb pusha pop ja push mov and sahf fstp incb cmp out adcb call mov idivb sub cld and cmc dec fs arpl jg xor loope cmc push dec pop or or repnz and out negl or lea push dec cs sub push popa repz and pop test add adc pop sub in xchg in call imul scas (bad) jns ret js in sbb dec jbe lds imul insl out into adc js push mov lcall out fisubl mov xchg test das or jp lret sbb movsl dec mov xor and mov test das xor inc xchg mov js dec adc into sbb jle adc adc xchg jb enter jo pop sbb sub dec adc sti mov pushf sti sbb xor push jmp push jno add int (bad) add pop aaa mov shrb and fdivrp jne data16 fimul and fldcw lds jbe xchg cwtl out xchg push (bad) das fdivs dec mov outsl (bad) repnz xor cmp lock (bad) sub jo adc mov dec inc xchg scas inc adc mov xor or mov push jle fistpll ret push inc push sub xchg mov fcoms and pop aaa inc mov ficoml repz lods stc idivb shlb sbb adcl fisubr inc lret iret lods call mov push cmc popa sbb in xchg es hlt rolb push sarl stos loopne lock lcall std push sub or mov lret adc clc push pop rcl jnp push mov pop bound mov mov xchg jnp inc mov sub mov popf shl (bad) fcmovnu mov test dec aaa mov cmp mov sub rclb mov mov nop jns orb inc push sbb cltd mov xchg inc addl ljmp iret push nop cmp insb add hlt push hlt jmp gs fistp into clc inc int xor jo add mov ret stc jp lods lods xchg into xchg into iret xchg push rclb sub out push push xchg pop in xchg fisttpl mov fadds mov imul (bad) (bad) cmp jae fdivl pop push or ds mov (bad) mov mov xchg mov outsl adc ja pop or aam lahf fmuls lods arpl dec outsb int mov sub (bad) pop cmc xchg fldl pop rcrl scas xchg sub jnp roll mov aam (bad) add or hlt (bad) sub xor (bad) push push jp inc ret cmp fisttpll fidivl aaa sub jge aam sub test mov fdivs inc add cmp into xchg (bad) cmp sub ret dec sbb lods outsb pop test mov sub jp stos mov sbb rcl push mov in lret jbe add leave jbe xchg push (bad) cmp mov add or out fwait (bad) repnz (bad) (bad) pushf jge or jecxz loopne and push jnp mov ja pop (bad) mov (bad) (bad) sub pop and dec push insl mov imul mov mov mov scas pop pop mov test jb mov xchg popa shl mov mov ja (bad) int3 push ss push add pusha into lea push scas mov imul mov mov pop mov pusha ret loop je dec frstor pop dec dec scas test mov outsl adc dec imul jl enter in pop push mov or hlt daa enter mov lret out pop aaa inc xlat dec lahf enter pop xchg inc sub jns adc in pop aad mov int3 sbb mov movsb cli iret mov sub lock jne or pop mov pop inc jp or dec push add jl pushf or mov mov or xchg xchg int3 xor call sbb mov cmp mov outsl push insl jnp je jb ret pushf ja out sbb fsubrs mov sbb fild add mov jno cwtl mov loope cmp lcall cs sbb or mov enter outsl jl cmc pop push insl sbbb int3 push mov dec incl fsubp int mov or xchg ds push sbb jbe (bad) aad test (bad) test jp cmc rcll jbe cmp pop pop sbb loop cmp out int out imul movsl or (bad) push insl inc xchg scas jo outsb or pop cwtl push scas insb in outsl inc dec pop cmpsb in xlat ja mov ljmp ljmp jnp dec jmp push imul movsb fildll ret fs xchg push jns jbe sbb fstpl sbb insb imul jbe test sbb push adc loop scas inc mov arpl mov xchg add and rcl dec je fisubl loopne pop notb dec clc cwtl test cld inc frstor xor nop scas jne dec inc xchg adc jbe fisubl call (bad) test jnp (bad) push pop or dec mov data16 enter mov push mov lcall inc and cmp mov jns test mov xorl inc mov xlat jge fbld pop pop jno test repz push call adc push push dec daa mov jge jge mov mov gs rcr or pop cmp jmp sub sub inc inc xchg push xlat and ljmp fdivl inc sarb jmp movsb mov sub dec adc mov sbb jo mov pop aas jmp mov roll test fidivrl inc fwait int3 and or nop adc fbld loopne inc and dec outsb xchg jns repz icebp punpckhdq lods ja jp jb pop dec mov repnz add jp xchg and out (bad) xor xor and (bad) pop lods insb ficoml mov push add push inc lret pop daa cli or je f2xm1 mov adc insb xor test sub cmp push mov dec pop shrb xchg sub icebp addr16 mov dec outsl cmp pshufw and (bad) xchg daa (bad) add push mov mov les lahf into push inc daa mov and push imul mov adc mov mov insb push ds mov int xlat pop jb nop insl js cmp fcmovnu xor or cmpsl xchg xchg jl inc xor hlt or clc push leave mov insb hlt stos and xchg sub and push cltd sbb call mov add xor testl repz mov mov add sbbb fs jb in push adc mov in imul push lret orb inc mov sub lcall rcr sbb jns inc lahf jns xchg les jae dec lret pop push inc push aas push push xor jnp loop sahf shr mov xlat dec (bad) adc scas and cs lods test in insb xor mov lret (bad) jbe repnz cmp or ret scas xchg loopne mov fstp cli lods push jae (bad) push and sti fidiv fcoms (bad) xor (bad) and lret add mov xchg stos xor (bad) sarl ss movsb outsb jp rcrl add push gs and rcrl dec and jno,pt pop sub idivl add rcrl mov daa insb arpl jle loop fstpl es fwait sbb sbb aas outsl js push je or mov sbb test aas in aas sbb jl mov jno (bad) cmp mov and js jge stc xchg lea xchg rcll or test jae data16 test arpl stos daa jmp and sbb push inc out (bad) pop inc (bad) imul inc out or sti add nop ds ret push mov outsl xor test fidivr xlat in pop mov popa add xor mov jno aam push push (bad) mov jecxz dec scas mov mov data16 sbb cld inc cmp dec je test xchg mov repnz or pop push fsubrl xor jne and aad (bad) into cmp sti push sbb mov pop mov lahf inc (bad) lret mov xor adc adc cmpl push add test mov mov or xor mov jnp test mov (bad) test cmpsb add stos inc mov gs dec int3 test and scas call (bad) cmp jp cmp push mov outsl shrl sahf xchg mov xchg fnstenv mov clc loop jae imull jg push fiadd out mov ret loop dec jecxz push int mov push and and xor addl xor xchg pop adc push jmp push gs outsl lock out mov mov lods popa push movsb stc scas mov xlat xor daa push lahf cltd mov sti sbb jnp cli mov out or xor pop hlt sbb add jo out fcomp ljmp (bad) shr add sbb push jo call mov pop add cmp in add and jns pop adc lret jb int3 xchg outsb inc mov add fbstp sbb movsl push push loop dec xorl inc sub cwtl das (bad) ss mov pop popf push push pop ljmp fild sbb mov insl cmp mov in and (bad) mov popa inc xor cwtl (bad) hlt adc imulb push outsl push xor mov xchg mov inc mov es jo loopne sub sbb aaa pop push pop and stc out leave mov push dec mov scas cmp push sar or das push fwait out xchg (bad) jecxz enter scas xor aaa or xchg cld pop push and cmpsb frstor (bad) into dec xchg pop jp xor and dec push into cld out push or jp or sub in mov std mov scas or xor mov out xchg (bad) cs dec cmp sub mov pop mov mov xor mov nop lds mov and test add sub das lcall sahf fdiv mov push push shll lea iret shll iret push mov cmc or bound in mov clflush xchg and xor mov and mov jnp add sbbb mov dec fs xor mov mov pop pop (bad) aas in aam sti cmp dec xchg inc push in cli test cmp repnz pop (bad) cmc es pop adc xchg insl mov jns lcall mov push test mov dec call push leave in and lret lds cmp mov sub adc (bad) (bad) cmp rcrb adc das ror (bad) js ja adc cmp dec lds cmp lcall fwait pop xchg rolb mov mov fsubrs fmuls aam xor iret pop adc dec push sub mov inc push shl mov test repz shrl mov inc mov jbe push lahf sbb add enter (bad) aas lds outsb inc shlb mov popf push repnz cwtl dec test xlat pop fwait pop (bad) xor sub ret lea dec sbb ret xor mov hlt aaa cmp or adc push push jmp mov sbb lahf dec xor add out and dec dec std jecxz mov pop adc (bad) std ss sbb jo insl popf dec cmpsl dec inc test scas push adc sbb push mov mov cmpl stc mov test lods add adc insl inc jmp xadd xor lret or jns cli int3 inc repnz sub (bad) push cli leave pop sub out adc outsb or jnp cmp sahf enter adc rolb sub les xlat mov lcall adc dec test xchg xor movsl insb int jmp sbb stos icebp push push dec fistp cld dec leave pop ljmp mov fnclex nop push mov cmp into call push push lret int3 repz push add cmp mov and shrb jl pop push pop and test stc cmp mov popf pop cmp cmpl mov mov rcrl test ret mov sub add lahf shl pop mov dec xchg add movsb in outsl popa pop adc add std sub clc int lcall repnz imul adc mov add mov test loope mov xchg cmpsl out mov sub xor ret cmpsb sub popa mov les mov xchg (bad) fstl pop faddl pushf stos or cmp cld stc (bad) cwtl inc mov cli (bad) pop in lods sub push icebp jnp adc xchg repz adc pop inc push or ds mov shr xchg xchg fs test sbb adcl add imul xchg cmp test ljmp xchg pop outsb loop es popa mov mov loope inc int3 sbb fildl pop xor mov adc mov js test int3 insl dec xchg or aas cmpsb mov cmp inc ret ja fdivrs jbe pop inc loope in pop lods stc mov or pop fbld aad cmp lock inc cmp push test addr16 push sub (bad) and mov pop adc mov repz popa addr16 lcall aaa lods mov pusha inc nop lea aaa inc sbb sub pop xchg call jge mov sbb or fwait cmp inc cmpsb dec adc sti sbb ss jg cmp addr16 mov dec hlt jno daa mov ds xor cmpsl lds arpl pop or imul xchg adc push (bad) cmp or push cmp inc mov jo,pt repnz lods int3 sub cmp sub or (bad) sahf out in push test outsl mul pop and out sbb mov jle test xor xor stos xor inc ja mov jle pop or pusha imul push andl or jge xor (bad) push (bad) ja push adc xor fistpll jns jecxz je repz mov jnp arpl mov sbb dec mov mov jae xor xor xchg leave add adc jl and adc popf icebp rcrb jns lock xchg jbe mov jb mov push inc repnz fwait add cltd test sub rclb jb scas ja bound (bad) hlt dec shrb mov pop loopne in scas cmp mov icebp mov dec stc inc test (bad) and outsl out pop dec ljmp dec je mov ret out sarb or pushl mov lock push (bad) xchg mov mov mov adc mov jne mov xchg or xlat iret fs sub fcomi pop jno mov into and jge addr16 dec cmp insb inc shl rcll outsb xor add cli (bad) push into xor ds es jns lret xlat jl jno out ficomp leave pop lds jg cmp mov fldenv scas mov cltd mov xor mov mov mov cmp adc dec adc push push inc sti inc adc sub cltd imul sbb mov popa xor (bad) stos pop mov lea repz nop pop inc sbb sub cs xchg (bad) mov and out sub mov sti test fdivrp mov xor sbb pop cmp call or fwait push pop out dec sbb cld add enter sbb lods sbb add xchg cmpb mov sbb push inc add push ss jb stc or std inc loop or sarl cli fsub neg pop stc out aad push jmp imul movsl xchg stos inc pop add xlat in mov (bad) cmpsl cmp dec add sub loop fdivrs pop loop pop mov (bad) inc out jge sbb adc dec push push leave sbb sarb (bad) xchg cli inc and mov dec dec push sbb xor imul shr enter jecxz sub inc daa scas mov pop arpl mov cmp aam xchg test mov (bad) std lcall sbb or jb mov insb bound insb cmpsb sub adc call (bad) fidiv test pop or ljmp or loope stos js lahf cmp and orl push adc das mov loop inc push js lds cmp imul pusha rol xchg xchg sti adc rorb mov cmp xchg fiaddl pushf mov or push pushl xchg and mov test data16 mov cmp cmc cmp xchg popf jb (bad) sbb mov cld mov mov sub sub mov pop sbb mov out push cmp sar pop add adc ljmp ret pop xor fdiv ljmp fs push in push sub push (bad) mov pop icebp cs inc rcr xor mov je push movsb (bad) sub nop pop xor out and xsave loope push jl sbb mov out pop gs scas sbb lcall mov (bad) inc shrl pop mov int3 push jp pusha push popa lret adc (bad) xlat into enter popa and iret roll mov andb daa jno xlat repnz mov xchg test unpcklps mov addr16 mov cmc dec stos jbe test addl cmpsl cmpsl pop pop mov xor imul movsl sub test and push fdiv pushf jle or or mov out mov or sub sarb (bad) push ror dec andb enter lods std (bad) mov push mov xor sub or and inc adc call stos ret popa xor repnz idivl (bad) mov jge faddl in jbe cmp (bad) push stc adc sbb pop and or mov pop push mov test ret addb mov stos rcr sarl push nop mov cli adc aaa cld loop mov xchg test sar clc mov fucomp call stc push add gs es cli outsl mov shrl (bad) mov aad xchg add subl xchg ss pop push mov les mov push xchg fnop or xchg sbb inc mov jecxz imul sub stos lods repnz mov xchg rolb or cvtdq2ps xor test movb shrl js iret cmp sbb inc (bad) stos jo scas lret or mov mov out hlt xchg add fiaddl xchg pushf jl mov mov xor out stc xchg imul (bad) das popf loope and xchg fdiv add fstpl xchg xchg rcl jle stos adc sbb xchg mov in int push dec js jne mov cmpsb xchg inc push mov xchg outsb mov jae aad sahf push push lcall rcll je (bad) or addb outsb mov pop or mov sub mov ja cmp jg jg mov scas movsl xchg mov mov xor mov xor push jnp sbb adc jle fisttpl mov xchg or scas outsl jne add fsin frstor negl out sti mov fnstcw lret xor cld jle sarb xor les add xor add leave cwtl pop and sub push sub mov pop hlt cmc pop pop lods in in shll adc (bad) aaa pop xlat outsl mov (bad) adc loop mov or (bad) andl dec push adc mov push pop push ds xor and pop xchg pop jle in and (bad) ja push cmpsb arpl hlt mov sti leave stc inc ret mov pop aas jmp xchg xor leave or pop or inc cmpsb xor add push mov mov clc repz push mov and mov fcompl (bad) xchg int sub push flds mov stos xchg sbb xchg dec xor subl lcall sub in jne ds inc cli outsl adc outsb int3 bnd aam cmp cmpsl sbb add insb sbb jp (bad) or test fidiv dec out sub adc mov dec (bad) mov cmp xchg push or insl add rcrb addl cld daa out lret lea and xchg xchg sahf add add (bad) jo xchg nop mull or xor sub xor push push lahf push adc inc cmpsl jmp dec mov inc push push fistpl sarl push and iret pop push outsl test mov mov xchg dec sub mov aad sub jo xor (bad) sbb scas and dec cmc xchg inc movsl or pop hlt inc fmull xlat mov aad pushf jb sub je cmp mov mov out ss push sbb jb (bad) lea or jge adc jno clc lds arpl lret xor nop dec sub or or mov in add daa lret mov jbe (bad) lods (bad) push (bad) jg gs push sub mov cltd lods (bad) mov add sbb fsubrs adc sti xchg mov jae insl data16 add repz xchg dec stos mov jns cwtl jne rclb cmp cltd daa shl pop hlt jmp sbb jns dec mov adc ficoml sahf cwtl push mov and scas mov xor sub loop dec lret lock outsl nop rcl xor push scas decb cmpsl pop dec les outsl loop movsl jp sbb mov sbbb inc sahf jae mov into test je cmp cmp mov xlat mov xchg cltd in pop sti sub loopne cmp fidivl lret aaa mov fsub pop pop push and loop fldcw add (bad) mov ret add orl xorl loope jae mov xor xor sbb rcll add data16 (bad) (bad) outsl mov cmp clc out out or or sub out (bad) jnp jmp push fstpl xchg out cmc fdivrl stos lret je jno and xchg dec and push dec in daa xor rclb mov insl enter jmp and popf cli or lahf inc cmc pop cmp mov lcall mov inc mov loope mov sbb imul cmp or pop lods xor mov repnz sahf popa bound lret xor dec out rcl lahf mov mov fnstcw (bad) insb bound add aas dec mov jne rcl pop mov dec xchg adc shr dec xchg xor xchg enter adc cmc stc imul (bad) (bad) cmc repnz xchg cmp rcl sbb mov bnd jg aas mov mov outsb rol jmp mov cmp cltd xor rorb aas ja push fbstp mov push std sbb pop lcall test dec pop call cmp decb in cmp pop pusha (bad) cmp sub xor mov push mov mov xor nop test push rcll aaa cltd lcall and sbb pushf rclb mov or mov je mov cld jmp or xchg add test sbb pusha cmp pop lahf jne mov ret ss sub xchg mov mov dec mov xor mov and jle mov insb adc ja imul mov imul cmp inc adc cmp or xchg mov in mov push push jge and push lock bound sub pop pop lds push je scas add mov inc shlb push in pop hlt ja ja dec mov push xchg mov test mov sub jecxz (bad) cmp decb insb loop jnp test call jle lods out xor icebp fcoml rorb call xchg fisttpll or add popf xchg jbe sbb nop pusha packssdw pop ds pusha mov mov adc clc shl les in insl xor xor dec add pop adc imul nop mov mov xor test push movsb cmpsl test push inc cwtl ds pop ret xor or push cmp iret xor stc aad lret into clc lea call dec jbe mov mov push adc or lds inc cmp mov mov outsl dec xchg sub js (bad) jae mov test ret sub lods push mov push rcll pusha fidivrl ret lods pop mov (bad) xchg arpl sub xchg pop loope add push pop xor mov mov mov (bad) fistpll mov mov jbe inc les cmp inc in inc or aaa or push inc cltd jns je gs arpl cmpsb mov jnp mov push lcall mov cli sahf cmc or xchg cmpb std (bad) insb push push or pop bound push cwtl lret orb jge out xchg jnp mov into add adc cmp adcl (bad) loopne or pop mov cltd and inc cmpsb out test sbb sahf push cmpsl pushf pop sbb popf mov shrl out push mov push mov sub in mov mov lds cmpsb lahf fwait ss cmp imul jmp rolb cmp fwait negl sub dec mov lods fistpl cmp (bad) push lock push mov mov idivl rcrl fsub call inc xor push lret cli aad out xor xor hlt push lods xchg test outsb fisubl addr16 ficom sub lahf inc outsl in and scas ja inc sahf aaa lahf mov lds mov inc inc push call sbb sbb cmpsl pop inc lock fisttpl repz mov xchg adc lock sub ficomp rcrb mov add enter sub sarb mov lea ret mov sub adc (bad) or gs add pop lret test repnz (bad) push xor inc jb jo fsts mov or cmp push movsl add xchg dec mov scas xchg pusha iret std jo inc test cmpb and loop xor lret enter mov repz fcoml pop mov sahf jns loop pop cmp in dec popf push (bad) mov leave in insl leave mov ret sub add aaa xlat cltd ja mov test shlb sahf ja iret xor rorb push imul in add lods fadd fwait adc jns mov rcl fsubrl movsl into test jne add mov mov lods test xlat sbb in push sub pop dec jg xor mov cmp cmpsl cmp adcb jbe push add les jno fimul popl arpl cmpsl mov push lods aam in or add adc (bad) adc mov scas cs mov je loop les mov cmp loop shll and rorb ss sbb xor leave outsl pop sub in xor rolb gs mov dec roll jp add fcmovb xchg mov pushf mov inc clc sarl mov push cli (bad) ljmp mov adc mov pop ljmp and jnp lods faddl xchg jge mov and push ftst sbb pop adc dec repz sub pushf cmpsl icebp int3 push rolb fwait outsb hlt or nop adc std jle leave fisttpll sbb inc jp hlt mov test outsb aaa mov jp jbe test rcrb (bad) push push sbb push subb and xor outsb data16 cmp inc notb dec nop cli sbb and cmp add pop jne xor pop or test std or jle and insb subl clc adc jnp ret call aaa in xor xor test test jge cmp sbbb or fadds out fidivl cmp mov (bad) push adc dec imul push enter inc call (bad) out loop test sbb bound or dec jecxz mov in repz aam lahf cwtl rsqrtps dec xor ljmp cmp cs and xor jecxz mov mov mov mov fwait daa mov cltd call inc mov pop xor ja mov stc jno xchg push and xlat inc bound scas mov cmp push jge test mov sub icebp mov adc xchg push decl (bad) (bad) mov stos lock lods movsl jne adc hlt pop mov jg inc addb lcall jp inc cmc and push mov xchg lret rorl scas (bad) (bad) sbb push xor adc inc mov arpl addr16 aad scas (bad) xchg xchg mov mov inc stc cmp or frstor out adcl pushf cld jmp loopne mov out pop mov push (bad) fimul cmpps sti arpl jmp movsl es xor and es dec mov and insb sahf test xchg mov rcrl movl std sbb mov inc xor cmpsl idivl lods out das xchg neg dec fisttpll pop out xlat add cmpsb push cld out add int in adc stc movsb mov call push sub push (bad) mov je mov out xchg push or adc pusha gs mov cmp std push adc adc out xlat fist scas and loope fnsave mov cld loop sub sub icebp stos mov sub sub shrl fimull sbb inc pop adc into int push and aaa shrl (bad) or rorl popf in adc cwtl xor jns rorb stos repnz mov xor insb std lods cmp mov push jno movsl push inc cltd movsb mov fstl inc push repnz out and xchg xchg test popf dec inc test add sub pop mov sbb or pusha inc dec pop int3 sti cmpsl cltd add ret xchg jbe pop adcl inc shll push (bad) xor inc call ljmp xchg xor mov outsl inc adc hlt add and dec into insb rorb pusha lds outsl pop test xor sbb mov jg int mov jle xchg loop cwtl dec sub jg push (bad) inc pusha cmpsb movsb mov mov adc push rcrb std scas imul pop rcr mov outsl jae mov add sbb inc mov ljmp adcl pop js outsb mov push test movsl pusha inc sbb mov mov sbb push mov (bad) xor push xorl fdivrs dec sti cs lret inc loop arpl add inc push mov lods or pop jp pop xor lret and inc push pop mov pusha insl push jns and xchg adc and push and sarb sarl sub mov fisubr icebp jmp std shrl test into xor mov push and stos arpl sarb cmc mov popf jns pop fsts jbe inc (bad) inc fs cmp ja jmp (bad) adc lcall ret mov ret cmp (bad) je mov out into push into daa fucom (bad) mov std jg repz jg fsubs test xchg inc mov dec sbb das mov cmc push aas fnstenv cmp out nop in push jne loopne call fbstp inc mov mov mov xchg inc mov je cmp das inc push sbb mov sub mov jae cmp or cli inc adc das aad cli push or pop dec jmp imull xor aaa sbb jnp ret loop stos scas mov mov cmp fs movsl mov and aas and movsl dec int3 pop xor or sub cs inc xchg and mov xor cmp inc mov popa or cmp mov or in lret dec push inc insl or ds push mov sbb insb das stc pop js lods neg mov out mov test pop jcxz xchg in ds adc in ss (bad) fimul cmc lret lahf repnz fdivl rcll dec mov push fs jo sub jp rorl xor (bad) mov jnp jp pop ds loope gs adc push (bad) jl (bad) imul aad dec xor jg cmp inc pop rorb ret inc (bad) mov jg jns enter cmpsl fiaddl mov ret cmpsb pop (bad) shl xchg jmp je adc or lods pop pop mov sub imul ja dec insl sub test cli sbb add popf cmpsl pop adc stos add je arpl and roll loope mov push xchg into cmp test shlb xchg cli sbb sbb push test test cmp popa jge xor (bad) aad mov xchg cmp ss out movsl jmp dec lret int shll out movsl (bad) jmp (bad) (bad) jp loop xchg aas fnstcw hlt es sub pop sub loopne ljmp jno lret aaa mov jno icebp xchg das mov cltd mov cli cwtl mov out sub push imul xchg cmc jnp fisttpl stc loopne in inc imul fild gs lea idivb int in imul test mov push int3 jp xor dec jp rcrb mov popa pop or pusha xchg in jl das xchg mov sbbl push call scas fistpll lahf inc jbe outsb inc rorb movsl mov jb icebp clc pop sbb clc in negb add push aad rsm push sbb xlat popf cltd in and mov inc push test mov push outsb data16 (bad) sbb imul pop mov rorl sub movsb push mov neg hlt mov popa arpl fstpt xlat fs fadds xor out push popf sbb fcompl mov jae arpl push adc imul dec jp and rcrb cmc jae pusha into mov cmpsb int3 in sub in xchg sarl cmp loope,pt mov ja xor stos cmp push pop inc bound fstpl sub scas pop dec repnz (bad) sub cwtl in pop stos jno adc adc xchg (bad) and movsb sbb dec movsb std (bad) jae push mov or mov mov pop adc mov insb movsb ret arpl xor outsl je jo or or outsl cld das mov mov in dec neg adc ljmp pushf xor lea sti outsb je dec mov cwtl in shll push inc xchg mov adc std mov ljmp inc js insb or add lahf push push es jle jp and int adc mov adc pop xor stos pop dec push mov inc mov fndisi(8087 (bad) xor and (bad) aaa xlat rcrl add inc in stc nop push imul push sub mov inc ret clc xchg test popf fs pop ficoml sbb fs dec sti aaa into fildl xchg inc pop or fsubrs and dec cmp inc insb dec pop mov xlat push pop imul fldl jae mov xchg fmul movsl cmp adc dec dec mov xor or inc sbb sbb add xchg or ljmp in ljmp mov xchg adc enter xor push sub (bad) (bad) adc mov lock inc (bad) or jge pop sub data16 lock fsubs out (bad) mov js push daa cmp adc xlat das enter sub mov jg lea pop sbb (bad) cli sti enter cmp add add xor mov xchg jbe mov aaa pop push insb unpckhps sbb std xor roll or adc cvtps2pd xchg or push sti mov cmp pop push and or jae xchg sub out push leave xchg add pop dec int3 mov push rol je call repnz pop push daa (bad) mov jnp les popa push loopne sbb pop aad in mov ret lods adc pop add (bad) je mov addr16 push jne pop arpl enter inc push mov mov out subb loop test das ficom ficompl fldenv lds adc cmp scas push push loope mov xor cmp cmp stos es lret ss cmc cmpsb jae lock mov iret pop bound and adc sub pop jmp ror (bad) (bad) std in or js in inc or mov fisttpl gs aad adc sarl mov fucom (bad) addr16 pop (bad) popl loope arpl dec js addl bound cmp (bad) aam (bad) mov xor aam stos push dec jecxz add pushf sbb jae (bad) fsin out sub and mov lcall mov mov int xchg testb loope inc call cmp cmp mov jb ficom add xchg xchg pop mov loope xchg sub mov shll xchg outsb mov jp sbb jae adc popa xlat ja popa jecxz (bad) (bad) fisttpll jns pop ljmp jge aad pusha xlat lds mov call inc inc push xchg in and or jnp rcrl jne fistl andb loopne sti inc mov mov inc cwtl cmp cmc add ja jp xchg ljmp or or repz ss add add test push in mov arpl pop scas loopne jnp sub insl sub pop in cmpsb out jno dec cltd pop (bad) int3 fidivr dec jae push out in pop adc movsl jge cmpsb mov ja push addl adc loopne arpl lods sbb sub clc mov test jg pop xchg mov push movsb imul (bad) mov dec sahf test pop loope stos inc dec xchg xor and rcrl xchg jmp pop data16 pop sarb mov xchg test inc nop divl hlt jb sub mov xchg mov pop or insl lcall ror push out test fdivl mov adc pop test shl bound movsl xchg jl cmp (bad) dec mov jge adc cli (bad) xchg pop sub mov push cmp jbe cmp xchg (bad) movsl sbb dec jl or sbb push pop cmp ja adc cld mov stos pop dec leave daa mov shl xor cmp fildll inc jg clc insb fs mov pop lahf roll jg jp fidiv cltd daa dec sbbl psraw cld mov dec or (bad) in jmp xor sbb xchg mov jge lret add push sub lahf and sub add mov push and or xchg into insb dec add and int sub jmp inc cmovne in mov inc movb sbb out push dec jbe jo sarb jbe cmpsl mov pop std pop in inc icebp and fwait (bad) sbb and pop test xlat adc rcrb (bad) rep aad adc iret test mov sbb hlt pop jge inc shl pop jp and aad and sub jmp out aaa mov ret xor movsb jo and fwait lret cmp sbb add push clc ret jmp cmpsb ljmp fsts mov lcall and out mov and shlb cld fadds insl pop and add pop arpl inc ret lds lret and dec test das push divb add (bad) cmp xchg and adc loopne mov push mov sub xor pop pop inc idivl out ljmp jmp and and jno mov lcall stos cmp push push dec clc ja scas dec out xor test popf mov sahf nop (bad) mov inc mov (bad) fmulp mov out pop push mov (bad) or (bad) outsb cmp (bad) cmp cmp sti test out into cmp adc ds pushf les lds popf cli repnz fbstp or lret dec ret inc xchg add and mov aad pop fwait add xor and fistp adc dec mov jecxz stos pop shr cmc pop dec push adc icebp lock test (bad) xor mov cmpsb dec xlat mov inc not jge es data16 pop xor sub pop jae out mov sub fistpl inc (bad) int3 (bad) ljmp loop or daa mov popf jae hlt add cwtl nop das and mov mov in adc ljmp cmp mov fiadd repz je rol orb mov jg cltd pop movl adc push notl adc push jo mov push cmc and or and add imul in jno mov cmp test cmp xor (bad) jmp xor inc mov aam ret int3 inc ds jg and bound jge insb jo or xor in leave aam stc aam mov sbb mov cmpsl movsl xor add and loope fsubrp iret or pop inc xchg ret (bad) jbe ja fiadd push and push lret shl es daa adc negl jge les aas cltd gs fwait mov sbb fmull mov add push sub faddl lret cs loope (bad) aad arpl jbe jbe pop das add cmp inc mov push ja lret je sub jmp pop mov ret push imul jp xor arpl sbb or mov push out adc das and push ss add loopne lock inc sbb inc add adc xor push rclb xchg cmp test mov setp shl dec les outsl repnz pop out jle test test das push inc fnstsw sub rorb pop mov ljmp data16 xlat mov call add xchg outsl cmp mov (bad) int cmp inc cmp cmp std daa cli int sub notb rolb adc fistpl or sub dec movsl jle fnsave ljmp sti gs das lock pop sbb xchg push popa adc push push mov mov mov hlt mov orb outsb inc fistpl fldcw pop mov scas push adc (bad) sbb (bad) mov mov fiadd pop mov incl dec daa pop cmp pop mov xor mov mov cltd push push movsb (bad) add repz movsl jge xlat mov adc cld and dec pop punpckhbw mov mov cmc loope xorl jmp push or or faddl stc icebp das and orb add adc decl mov mov mov in cmp xchg mov dec mov mov pop aad mov pop test shrb dec mov pusha add and aam add pop or mov pop xchg jae jecxz cmpsb add mov sti pop adc nop sbb or xor in dec add scas (bad) pop test mov mov mov rorl roll xchg add xchg clc sti mov nop cs sbb inc adc cld popa repz xor movaps movsl mov pop repz insl dec mov cmp outsl jl jmp pusha xchg cmpsl mov add mov cmp fcomps mov fldenv in lea push or insb push or loop pop dec nop lret (bad) in js and ret imul fmuls (bad) push pop (bad) fist aaa dec test movhps das call and add add lods in add popf xlat jbe rcr ja out in mov xlat mov fcoms in dec cld pushl sub fs jns movsb iret push je jo fcoms adc loope insl ffreep mov icebp sub jmp outsl insb cmpsb fcoml in in js ljmp call push mov imul push pop scas xchg js js pop popa jnp (bad) out lret int3 in fs dec lret outsl adc ds addr16 xor cli test sub sub ret test adc mov adc aaa arpl mov shlb mov add shll lods sbb adc jecxz xlat fimull aas lcall lods jne cmp ljmp (bad) jae ds ret lock push ds mov (bad) xor loopne imul jbe test lret faddl dec sbb (bad) sbb and into cmpsb push cltd inc adc test cwtl add mov cmp inc es pushf and sti sbb mov (bad) push outsl xchg xchg sub xchg dec mov mov pop sbb dec adc jmp enter lods or mov adc pop es lahf xor test pop out jp jmp mov lahf xor stos loopne jmp (bad) mov sub sub loopne arpl mov (bad) in out xchg cwtl lcall jo insb ss scas out pop pop mov mov dec fs imul repz call xlat push sub sbb decl imull daa lock sub aam rolb mov ret imul xor pop pop std pop sbb pop xchg jl jle outsl hlt push clc stc stos cltd std cmpb sub clc lret lret mov or insb inc jno ss in mov mov ljmp sub add adc xchg jno popa mov in mov push aam push inc pop or and mov aaa test dec stos sahf shl dec mov fstpt lcall push adc jno fidivr jmp fwait aad aam fcoms and mov mov mov pusha scas mov cwtl test (bad) idivb (bad) xchg push dec mov sbb out (bad) fdivl pop in add lcall movaps jge test dec lds lds pop fst test jbe and push jnp mov popa lahf pop pop shlb outsl sub out or negl insb leave push cs mov mov cmc xchg jne jp add inc push int3 in lods mov push mov cmp mov push push out inc cmc das negb loope cmpsb or ret xchg cli subl jne sub dec out fisttpl push nop lret xor fdiv mov data16 aam dec in sbb (bad) dec jb sub ja or mov add movsl pop inc jnp pop xorl sbb mov sub mov mov (bad) mov cs imul bound and je cmp fdivp sbb inc in and jge inc imul mov pop lret sbbl stos cmc rorl in test add cmp inc call mov xor movsb xlat rorb pushw popf pop xchg xchg cmpsl pop mov sbb scas and cmp mov xchg add stos push sbb mov xchg roll mov insb add (bad) mov mov fdivs mov lret mov notl xor cld aas stos and (bad) (bad) lret or (bad) push in pop loop pop push rcll cmp mov in sarb add scas test leave cltd adc rcrl adc inc push stos into test fisubl push jno xchg pop fsubrs mov repnz add sbb icebp (bad) loop les sbb xor int3 inc out xor xor add jle sub jne loope lret ja es cld mov cs lea jg cs shr push fsubl and out mov xchg inc sbb xchg mov adc jle mov fstl or scas sub pop insb jb cmp (bad) lcall fnstsw or imul push push mov xor ja mov push pop lods push insl pop shll (bad) push movsl push clc test hlt ret add push cmp mov pop xor xchg dec sbb mov inc cld xchg ljmp and mov jmp sahf test dec int adc es out test push or sbb movsb add stc imul test push lock fmul push cmp push or jb js mov scas out jno push xchg sub adc add push jg dec aas out mov movsb pop xor clc data16 sbb pop xor cwtl das imul fnstsw push cli xor cmpsl or (bad) punpckldq add push rcrb into in jns,pt popa lds lods jmp pop mov test dec ret loop dec or mov sub (bad) das adc and fs jl cmp (bad) dec scas int3 scas jle (bad) fdivl cmp out xor lock fiadd into lcall mov push cmp cmc mov shrb add aad jnp push call sbb add cmpsb sub xor push ret xchg shl mov stos cmc sbb dec test mov iret jo mov xor popf pop push mov mov jecxz sub push and and ret outsl test aaa cmpsb sub mov in sahf xor cmp outsl into test dec rclb push imul ds xchg jo pop test push lcall cmc insl and das mov fwait mov loopne dec mov mov fnsave roll sbb cmp loopne fwait repz push sub sbb push enter cmp scas jecxz outsb outsl in es gs dec hlt arpl cmp xor orl aaa jmp repnz xchg lock insb hlt test mov popa call stos add sub sub jae inc adc dec cld int leave jo pushf add icebp pop in push icebp sub std (bad) mov mov xchg cmp cmpsb pop mov push adc test adc cmp js inc pop jmp icebp bound movsl pop inc cli jmp and ret and outsl xor pop mov push or mov xorl andl sub fist (bad) xchg sbb andb pop cmp repnz and mov jmp dec cmp or mov pop and mov lock jp push ds mov lea lret adc mov xchg stos sub fdivr add mov cmp sbb sbb (bad) dec out lock mov cmp insl jne dec inc fcmovnbe repz rorl outsl test push outsl lds popa pop dec repnz fs cltd add cmpsb cwtl or cltd fmull cmpsb pushf orl inc push xchg pop cmpsl sub imulb testb test push insl pop and mov stos inc jnp sub xor push sbb pop sarl or rcrl rorb sbb mov (bad) es idivb mov xor pusha fwait lods xchg and push mov push xlat mov (bad) pusha stc movl xor call jg sub mov fwait xor mov or adc inc fstps sub imul jbe fwait cld add pop int3 mov in dec enter push inc inc sbb (bad) xchg push insl (bad) and mov adc push or ret xor or mov dec and cld and jo jbe imul jae in cmp roll mov jae push lock mov xchg sub xor pop add out pop sub and data16 fwait andl jge pop jnp and or mov (bad) mov test or fs pop gs push jno popa popf lds lea bound adc xchg add xor cvtps2pi inc aam push lods notb cwtl js out sub inc mov movb jae or test pop mov fisttpl adc jp pop jg mov or imul and xlat jmp sub mov xchg (bad) dec sbb xor and insl or lock insl fs call out pop adc lret lahf call jge or in mov jle nop insb addl rclb out inc fldcw in int3 int3 (bad) jne ret dec mov mov lret adc xor inc push into (bad) pusha (bad) push or insl and (bad) xor jp out test push les cld mov pop xchg stos data16 or repnz inc mov mov jecxz and adc or pop xchg push out aad push lret roll bound fdivs inc (bad) inc push mov mov jle scas out inc push xchg loopne roll jbe (bad) ret cs pop adc outsl roll jae sti mov dec xchg imul jne sahf mov cltd rcrb sub je inc cwtl pop jno push xorb mov or roll dec sub fisttpl push jbe mov lock loop mov js lea cmp xchg add jp mov leave mov imul jmp dec addr16 mov mov mov mov arpl and rorl out jl jmp pop or xchg ljmp cmp and push or pop dec stos pop add call fisttp (bad) mov pop rol cltd xor imull or mov mov sbb fcomps xchg add xchg adcl xchg clc cmp xor push cmpl pusha pusha mov loop adc insb xor adcl jae (bad) sub enter clc cmp sub xchg shl fidivr fwait iret xchg mov add in mov out mov stos sbb mov cmp push and pop push into push rclb stc es repz mov movsb sbb shll jnp mov or xchg orl iret mov clc aad lea xchg lret fsubp daa cmp adc outsl xor inc (bad) sbb push iret xor jne or js xlat aas ret adc adc popf or adc fwait data16 mov mov outsb dec mov loopne or aam movsb (bad) fbstp fs (bad) inc sub mov hlt fisttpl aad cli insb inc test inc int outsb std mov sbb ja outsb rorl fistl pop adc aas lods fsubl jb mov (bad) xor inc call push rcll in pushf test cmp hlt rcrb hlt pop sub mov in mov nop mov jg mov xchg into xchg pop sbb xchg mov mov mov push dec stos loop or dec nop iret mov mov mov pop push ficom push mov mov loopne inc jmp int loop jge xor movsb ss jp andl cwtl das es mov pop movsl lock and (bad) shl mov push fldcw dec sti ja das cld and imull jns (bad) xor repnz lahf mov inc xlat es xor fiaddl stos add outsl (bad) jmp lds xchg arpl fxch pusha jo bound (bad) clc fstpl xchg in lahf push mov int pop jge and xor add movsl inc sub xchg adc jne repnz (bad) push fnclex int3 out fildl or test dec jne popf add mov jmp loope mov sub ds arpl pop and dec jg add mov (bad) xor add pop pushf lds adc jno xchg cmp sub inc sub mov data16 add (bad) mov lret enter iret xchg sarb es (bad) xor scas or sbb repnz je push xchg add fst data16 stc shrb lds scas lock (bad) fdivp mov jnp dec in imulb fldenv mov fucomip cltd lods (bad) daa shufps dec add (bad) mov sub pop xor (bad) xchg mov mov nop and sbb sub outsl xor lahf sti adc dec dec repnz pop mov out mov dec movsb mov push cmp (bad) jno into fwait sub leave ret mov lods pop movl (bad) lahf aaa popa (bad) lea add jecxz,pt mov (bad) adc fistp subl stos subl cmpb xchg sub in adc or cmpsb jl jge and sub push lea add call pop add dec xchg fs mov dec push cmp jns jmp out rclb dec das xchg sub pop daa xchg mov and scas scas fmull mov push into jno cmpsl lods mov (bad) sbb xchg and cmp sub das sbb lret mov mov sbb lcall addr16 cltd test lahf pop pop xchg mov xor daa add sub cwtl jg adc or mov sub mov sti jmp ret inc xchg hlt gs mov lods inc inc and movsb xchg jbe adcl fs out sub adc jb dec ss cwtl loopne mov cmp xchg cmp cmpl cmp xor inc popa repnz leave inc xchg lret inc cltd mov leave xor push hlt js movsl mov xchg xor mov sbb mov xchg lcall pop ret pop xchg test sub and orl xor ret adc aaa add push add pusha stos cli sbb mov push sub xchg test (bad) sub xor mov mov popf jne jbe orb test ret (bad) leave xor mov in or and add jmp das or repnz pop iret xchg adc fild lods pop pop push xlat jp cwtl dec or test pop and jno dec and lcall dec and stos lods and mov addr16 aam cmp (bad) out mov mov dec xchg push jb ljmp movsl outsb (bad) cmp sub sub fisubl and mov iret loopne lds jne mov insb add int mov push iret xor cmc les lea mov iret jne (bad) int and jno and push or pop or add out sar ljmp mov cli push push or sub cmp fidivl dec cmp inc add xrelease imul sub std fstpl push stos push dec iret mov push frstor or xchg enter pop insl adc in in pop fadds shrb adc sub (bad) jne mov out loope xor jecxz xor cmpsl loope test and popf mov lods pusha fisttp loope sbb xchg out mov mov sbb (bad) cwtl mov cli inc mov and ja lock dec sbb push add rcrl fucomip pop mov cmp fisttpl mov xchg outsb xor dec arpl push cmp cltd mov xor push lock and jp or and xor pop imul (bad) xor repz lea push pop cmp sbb mov pusha and fildl cld arpl leave sarl mov lea add scas (bad) xor repz push dec std fstpt xor in shr mov pop ja cmpsl xchg ret inc add repz cmp push sub jle lahf mov and sbb add inc mov sub out push and in dec jns jecxz jecxz cmpsb lock and outsl xchg push rclb jp iret test xorb mov stos mov cmp add pop mov inc xlat cwtd outsl shrb cmp fiaddl mov xchg add sahf stos nop dec aam push push hlt xor xchg mov cmpsb xchg cltd clc xchg adc cmp dec cmc mov into pop in sub jge in loope (bad) into sub mov push push loop and adc push xchg mov push xor cmpsl insb lret dec pop pop or jp lods lcall shll jnp rorl fldt xchg mov cwtl mov fidivr mov mov jo pop and insl ficompl jne add insl fisttpll adcl push iret outsl jp mov lds pushf mov jno es ret xor jns rcr ficom dec aad jmp cld and xor jns mov add xor jnp push mov insl lret sti pop shrl jge jg stc ret (bad) mov dec lret pop jmp outsl imul lret stos fisttpll push xor mov dec movsb (bad) mov pop inc fldl sbb pop adc mov pop pop xor lock arpl sti lods inc push mov pop scas adc jne and jg jbe sub adc mov pop in xchg mov xrelease push sahf cmovp arpl push xor mov or inc dec ret mov pop icebp in or lahf sbb pop dec xchg imul xlat lds add dec (bad) mull mov lods sbb jae push sub icebp es sub adc mov inc sub in outsb pop bound or xor xor shrb stos dec (bad) dec int cmpsb idivl cmp gs cmp cmpb xchg popf mov mov roll push int3 mov lret dec outsb mov scas sbb les inc jb mov lods adc pop adc xor mov pop mov pushf lods lods bound mov push mov enter stos fisubrl and popa pop pop popf add sub sbb and adc jb shr aad leave stos enter icebp xchg push bnd jle stos lods sub (bad) push mov loopne stc adc imul sbb add popa push add mov test loop inc frndint gs or xor addr16 sub mov ja (bad) xor push pop pop fcomip shrb mov mov es inc dec mov loopne hlt imul les xchg popf lahf lret cmp (bad) lahf es (bad) jle into mov sbb sub dec sti iret mov inc enter push dec pop or movsl lds in mov jnp cmp pop jo xlat add or arpl push mov addl push cmc jno lock inc or mov dec pop out jge mov sbb cmp mov pushf mov cmp jne into test outsb and sbb add jp fnstcw xchg xchg (bad) out gs je mov (bad) mov cltd cmovno sbb or loope aad lods mov sbb out inc cli xchg mov push int mov aas mov mov inc outsl mov mov xchg xor xor add (bad) mov xor xchg test mov and mov (bad) mov push scas subb inc push lds popa inc mov mov jl sub iret jb pop sbb jmp add pop mov pop and pop and cmp add jne push lahf mov je pop movsb clts push sub jae and adc (bad) idivb lods dec and jl sahf test (bad) mov mov and sbb repz xchg add rorl js lret mov add iret push adc mov add add out int movsl mov xchg mov mov int xor xchg and adc jne sbb sub jae lss popf scas test call outsl cmp add mov out mov sti mov adc pop fsubl mov out sub xor mov ljmp lcall mov andl repz jne (bad) out jbe xchg jne xchg jp adc insb dec divl xor aad dec iret or addr16 daa and sbb rcl xchg mov mov shrb mov in les mov lcall mov fdecstp sbb mov mov cwtl xor int mov jge fwait clc adc mov push hlt mov and push push rcr movsl aam dec pop inc lcall (bad) mov push push xor inc jmp pop and rolb adc add push int3 sbb or dec dec ret sbb gs mov dec inc push mov xor sbb inc mov mov pop or mov fidivrl stc nop (bad) mov pop pop (bad) rol lahf mov xor jno out mov add rcr jbe (bad) call xchg fistpll or test dec fidivr stos out bnd sub sbb jns jbe call push mov ret or cld or in sub repz mov mov mov mov push (bad) adc mov pop (bad) xorl push and add dec push aam or xchg (bad) (bad) pop in sbb mov sbb and mov sub clc mov sub sub mov incb and inc sti dec adc xor mov int pop (bad) jl aas int3 adc mov lret iret push and popa jl dec sbb pop jp stc adc mov xchg xchg sar pushf std daa sub mov stos sahf inc sar xor pop mov mov push adc insb scas inc pop daa mov adc fldcw lea or mov adc push iret in inc scas xor cmpsl xor inc dec mov mov loop (bad) js inc fisttpl idivl int3 or push div xchg mov dec adc xchg pop jo and mov dec in jp lret lea (bad) sub pop sub pusha aad jns jnp out das andl xchg sub push xor shl das (bad) pushf and pop sbb ljmp lds popa inc inc mov dec or pop inc enter mov add (bad) mov mov mov imul jbe (bad) in dec push out fs (bad) cmc aaa and and fistl jae idivb testb cwtl pop in cmp mov mov jle push clc cmp into nop and fwait xchg pop sbb clc pop mov outsb sub mov sbb dec aaa xchg cld daa stos cmp jecxz xlat ret bound shr negb outsb icebp sarb xchg xchg mov cmp repnz and add stc dec mov push jo cmp xchg mov inc xchg inc cld mov cltd push rolb dec and push aas lods push mov aaa xor sbb sbb push add push mov jecxz xchg push lret xor mov pop mov adc mov rorl (bad) adc xor pop ror inc pushl in push fisub or arpl sbb add icebp faddl orb jge pusha imul (bad) aad pop xchg mov clc test mov sbb xor mov ljmp sub or ds mov adc cld add out jle adc or pop enter cltd outsl lret lods pushf out ret sbb mov xor xchg enter jns xor fucomi jne int3 lahf adc mov enter mov mov (bad) sqrtps mov fdivrl xchg daa rcll rcrb adc in (bad) inc mov sub mov xchg push lods call inc adc inc sbb outsb test cmp pop rorl imul sti cmp cmp push out ljmp andl dec div int3 mov add test xchg (bad) jb jle xlat addr16 or sbb jg scas sbb pop xchg jecxz xchg dec dec shrl imul mov ss cs icebp fldcw cs xorb mov stc dec cli outsl xlat stc push and mov (bad) fs cmpsl adc push ss push push jae push jle (bad) add js adcl js or lcall outsb sbb jnp sar imulb jae mov arpl mov rol fbld bnd es cmp jbe shl int3 sbb push xchg inc and mov addb pop and loop (bad) jmp loop leave add mov sub adc pop imul inc mov mov fldt sbb cmp aaa gs pop rcrb ss mov lods fldl inc or push xor push movsb pushf fsubl loope inc rcrb jle sub aad adc ret xchg mov imul shlb out in push jae pop mov loop (bad) popa jecxz add or int3 dec rorb (bad) into (bad) jno imul stc push sub cltd cmp incl cmp xchg data16 lcall dec fs sub sti jnp data16 push inc jmp stc repz cmpl push sub jnp lret pop inc pusha (bad) rcr gs (bad) mov test nop push push cltd sbb fldl in or out xlat cmp dec fildll fdivl push test inc aas jmp jecxz jl mov push jb imul sub jo xchg test xlat mov (bad) data16 nop out test add push fcoml adc mov js call ror bound loop or sub add mov jo adc lock inc push xchg and testb xor lock iret fildll insb shll cmp ja sub je sbb flds push aas scas std inc cmpsl sarb clc ljmp jmp adc inc in mov cmpsl inc loop fucom or rcrb cltd mov sbb mov fdiv or ds and addr16 aas or frstor sbb push mov xchg mov idivb push loopne inc test ret mov xchg dec pop test mov push xor and inc ss test pop sbb mov inc push loop push pop fnstsw mov iret dec cli test add pop inc xchg sbb daa xchg mov mov repz sbb dec add mov sbb pop sarb dec push xor insb aas loopne jmp nop or pop lcall stc jmp in data16 lret call sti cmp or fsubl out repz (bad) mov fildl dec mov and sahf and pop adc (bad) out leave int3 ss subl push negl pushl dec add pop rolb add adc ret add les pop add xor inc cs sar repz and call test or test xchg test xchg icebp cmp pop mov test std stc shlb test pop jbe mov mov ret idivb push movsb popa sub ret stos inc jge leave mov jmp imul jb jl push test addr16 push mov sub in dec fisubrl icebp repnz inc sbb fwait inc (bad) sub sbbl pop push stos incb cmp in getsec xchg leave sub mov cmp jnp,pn out lea xor stc (bad) or jg out outsl mov add jle or xlat and push jne lea pushf pop pop das iret icebp xor mov ret adc lret in rcr (bad) lret enter cmp sub fstpl daa cmp mov sbb adc jmp cmp inc mov loopne scas out fcmovnbe inc mov pop je dec cmpsl pop data16 loope sahf in or andl cmpsb dec aad mov mov lock or scas mov push push xor mov leave (bad) sub mov sbb mov push test xchg mov stos and popf fsts cmpsl push jp or sub push mov push cmp cmp cmp into shll push lds adc arpl es popa (bad) mov push cmpl add push out pop leave ror gs mov adc or push aaa xlat jmp ret pop sub push mov aam mov push out popa mov sub lcall push add loopne cmp mov jne (bad) mov (bad) xchg or leave xchg jl and (bad) cmp out clc mov in out inc add paddd xor push jno push jo push cmpsl adc xchg fmull xchg sahf int3 and xor fdivs aas push dec mov (bad) data16 fnsave rorb inc stos stos sbb push loop sub cli data16 xchg mov pop std mov jae test subl enter dec dec test push aad mov fs or inc nop xlat test mov mov mov leave push jge fidivl inc call cld mov add pop add add mov sub or jns mov xchg imul in or aad cmp jns jnp push ss xor push cmovge (bad) (bad) in cmp (bad) notb push cwtl repz pop mov xchg pop rorb movsl and fs inc mov or push inc fidivrl jmp ds mov push in icebp das mov fcoml mov (bad) cmp imul xor clc lea jbe pop mov daa incl push dec fsubl iret cmpsb mov dec dec push aaa dec mov add test push mov push pop in fwait popl inc roll and pandn dec mov lock push xor inc push outsl and jecxz push hlt imul sbb push lcall test in mov repz inc insb clc imul ret add in lret js (bad) push xor and xchg adc outsl mov adc test and lock fwait cltd sub add test loopne xor cmp pop inc add push ss adc ffree mov inc orl dec repz mov mov icebp mov add pop pop dec push cmp push adc mov cmpsl popf jae jecxz mov or pop lock push cli je inc cmp repz (bad) xchg xchg daa fs aas bound push mov mov aad sub adc mov dec repnz push std popf pusha (bad) into lahf jno cmc pushf les or fildll gs ja cmpsb out lods adc aad mov mov out push mov mov in push fmull lret ljmp fwait adc decl pop xor xchg out out push into rclb outsb fisttpl test xchg mov pop mov cltd lret aaa loopne mov pusha cmc and pusha int shlb mov adc aam jl in test cmpsb pop in and and xchg mov popa xchg push subl jecxz ficoml sub inc loope pcmpgtb sahf repz mov mov jbe iret (bad) jno jno lcall jns scas cmp lcall cli repnz ja fucomp aad xchg xor dec sbb or in inc lret int3 test cmpsl and jmp test lock (bad) jmp test mov insl xor mov sbb xchg mov jle and in add (bad) aam inc mov push or das lods fbstp sub jge mov adc pop mov (bad) fcompl lret xchg push test inc sub test das popf jae,pt daa aaa fwait jno aaa in add push xchg and in sti sub stos divb std fidivrl jo mov (bad) mov add imul repz call push jmp call xchg or and lea and inc dec std ret inc and scas dec xchg or pop and in dec testl clc push adc gs leave pop hlt hlt test iret mov mov xlat mov push repz loop sahf dec and (bad) sti cmpsb jmp js xor orl adc ret adc in mov aad les (bad) xchg in sbb ss sti mov xlat aaa loop test nop and add dec or dec jmp fld cmpsb sbb andl push sbb pop scas xor xchg fisubr mov lds inc cmpsl scas dec push leave in jmp push xchg sub in push mov jge xor push jnp adc xor in outsl sbb sbb addr16 jg lret cmpsb ds xor mov es mov jbe jge jo adc mov cmpsb leave pop cs sub jno push inc mov add xchg pop imul ds jg inc xchg pop adc pusha mov fs mov adc dec and adc mov mov add test sbb scas inc inc mov stc sbb js jl out test dec in or jge jae add dec cltd cmpsl jl stos ljmp cmp cmp adc movsl jmp rorl aam in les adc jmp in jbe test xor pop insl (bad) add adc or dec add mov out adc inc xor mov fisttpll mov imul xchg mov add xchg outsl push into mov cwtl in adc xchg adc aad ss ret rcrl je add sub xchg nop xchg les mov add repz mov push gs js adc iret inc ror pop jo or mov dec or xlat leave insb xchg adc or sar lret popf cwtl popf nop nop repz lods inc xchg pop and idivb push and insl push sub popa les add in xor xor mov ret sbbb pop ja adc aaa aas mov out dec mov fwait pop jne hlt or cli sbb cmp movsb les fsubrs pop int3 mov jns push fsubrs mov mov mov addr16 jp es xor rcll out dec (bad) xchg lds leave lcall popa cmpsl xchg js lods inc lahf xor les and adc mov in or insl pop aad ss pusha es test push mov mov (bad) out lds shrl dec imul sti repnz mov adc mov xchg push test leave push pop int3 jo inc inc mov xor jno lock jne xchg mov lcall xor decb iret movsl outsb xchg cmp fsubrs inc xchg pop mov cwtl sub ret andl jbe insl test xchg sbb loop pop xchg sarl push in popa test dec pop faddp xor in addr16 clc dec pop push sub push xchg or inc lahf ficoml mov dec or out sahf push (bad) outsb sbb movl repz pop es jge je ret js mov and in pusha fdivp sahf stos aam data16 xor inc repnz sbb dec xchg pop test lods pop cmpsb outsl push or lahf cmpsb cmc xor cmp loopne or jnp push xchg add ja icebp sbb and cld cli inc lahf xor jb (bad) sbb mov mov call ss clc xchg popa loopne insb mov pop pop sti test ds hlt in lcall out sbb inc aas sub pop inc push into xchg hlt push inc push (bad) xlat fistp jmp in outsl test daa xor ja push aas or or aas and inc sbb pop xchg es xor (bad) int3 xor aaa std shr cmp cmpsb mov ljmp mov inc pop enter out inc push xchg roll das dec push and insb iret lahf xchg data16 in push sbb xchg xchg lock inc sbb push lcall lds inc add rorl mov (bad) xor cmp adc (bad) cmp push xor shr mov mov (bad) lea cmp add in loopne mov jge clc roll or (bad) (bad) scas pop jno jbe mov call lcall ds imull scas cmp jno jmp outsl pop sub add mov out sahf (bad) mov call arpl or in mov repz (bad) mov outsl sti insl inc mov dec int aad mov xor push fstps and push sub subl mov fnstsw (bad) or call outsb enter call std sbb jl in bound xchg cmp adc push pop int3 pop push leave xor xor or and inc sbb jno or int int mov daa jl jae adc je (bad) sub sub scas rol dec fstpl jns test xchg in mov xor hlt sti ret ja and inc mov adc cmpl sub lret inc dec inc jecxz arpl push icebp sub lret inc lahf int3 call imul loope cmp fdivl pop cmpsb sbb cmp (bad) repnz aad lret cld sbb mov test adc adc pushf cmp cmpsl sbb lcall loop stos xchg pop in loope mov ja ljmp subl call push clc (bad) jbe fmul cmp pop ficom add cmc xchg sub or divps push fs push mov jl cmp or je,pt cmp dec rcrb fisubl loopne xor clc mov xchg gs jmp jns mov addr16 imul cmc pop or sbb sub jae shrl xchg and and xchg cmp add adc lret rolb je out jns loop push (bad) imul xchg ss mov adc repnz bound fidiv mov mov int3 push pusha fisubl xchg mov hlt lahf loope fcoms icebp push push lcall xchg js and dec outsb dec push pop loop push pusha loop fiaddl mov xchg and ljmp mov push loop jae (bad) ss inc insb sub subb push aad sbb aas icebp pop add dec in arpl push imul or xchg std fwait xchg dec movsb pop mov mov cmp dec int and je fildl loopne or xchg jg arpl dec popa adc imul add dec jno add xorps pshufw in inc pop ljmp pop push mov (bad) lret cmp sbb jo loop cld pusha or push insb je ss ret or push push dec scas addl daa adc push jle and loop shrb dec sub push lcall rcl mov ljmp mov cmp jp xor push dec adc movsb mov data16 xorl test mov arpl sarb stos int mov (bad) movsb adc jle cmp outsb sti adc add inc jo mov es inc daa inc loop sbb lods iret adc test adc push call (bad) fcom xchg xchg in test loopne iret test dec lahf push adc sar dec mov and fiadd insl scas test adc movsb in push push add mov lcall push imul and lods ljmp stos data16 femms fninit int3 dec ds sbb movsl fsub cmp pop or imul sub inc inc lcall xor insb repnz int3 test sub lahf dec mov push mov imul jp je repz mov repnz cli push bound sub js pop fdivrs js cmp bound jmp mov dec cmp out fs push call mov (bad) in outsl mov clc stos cmp dec mov sbb push scas sbb mov jl inc dec roll mov popa or mov pop push or or dec repnz mov sub mov repnz mov push mov wrmsr adc mov jmp pop std push (bad) enter xchg add jo inc es pop mov in xor lods cmpsl fldt sub (bad) jl scas aas repz into adc add fcomps out test adc fsubrs mov fstpl (bad) jle out sub ja daa int pop mov imul test pop movsb mov mov aad not push add add xchg pop cmp or xchg mov je pop bound sbb sub dec sar pop (bad) call or xor popf stc xor add xor shlb (bad) mov lds loop ret std enter and inc es xchg cmpsb cmp lret xchg test stc mov shll add cmc shr jb add and cmp or mov (bad) xchg je test mov stos push out rorb xchg sub push ljmp push push loop fistpll (bad) xor jns mov mov std bnd xor add mov (bad) ss mov movsb dec dec fsubrl mov lret aad mov or iret popf ret popf jle sub es cli clc insb fcompl cli push in push insb push push xchg jae daa popf ja pop push outsb (bad) cltd add aad mov cwtl ja (bad) int3 (bad) data16 or mov jg and cltd repz bts stc push pop out cmp xchg shll inc cmp mov lret mov mov pop adc std xchg push mov inc push stc add and push inc fmuls xor lock or test xor pushf push or xchg scas or push ret shrb sbb push leave in mov (bad) int aam xchg pop push lret xchg and adc adc or inc repnz mov in sbb jecxz gs cmc add fild jne cmpsl jg inc xchg (bad) fdivs inc dec cltd fistp aam (bad) fstl pop mov cmp es push pop scas movsb xchg adc aad insb pop or pop sbb imul data16 out and push jne cmc sub test cmp loopne sub out pop ds addr16 push pop push sub aad shrl adc mov adc push pusha out mov in daa jl mov dec pop xor (bad) adc jbe das push mov mov xor jmp or addr16 cmp xchg rolb dec icebp data16 idivl pop and arpl (bad) sub lea jl xchg ret rcll mov cs or daa mov cltd pop adc (bad) sub ss sti mov push push outsl adc pop ficoml in adc and mov push (bad) repnz dec movsl subl sbb or ds xor mov cmp call inc inc and std shr gs jne add jbe mov stos imul loope or sub adc or dec loope in jnp sub mov jnp sahf movsb jmp fnsetpm(287 mov sub mov sub pop stc lock adc aaa mov jno std insb jl ds push ret fisttp ret push and aad aam imull ljmp dec sarl dec (bad) xlat cmp push out lcall bound lcall jno push sbb or inc dec stos add push repnz cmp jo sbb push sub scas and xor sub sti pop (bad) (bad) pop outsl (bad) xchg dec jo cmp inc sahf ljmp jecxz ja fisubrl aam out fild sub rclb mov pop (bad) out repz dec adc pop or stos js mov (bad) lods mov icebp fisttp iret mov dec bswap add mov rcrb pop sbb xchg ret lcall xchg ja repz scas push jo (bad) pop xchg pop test sbb cmp imul (bad) cwtl add xchg iret inc std rclb (bad) or jg adc mov mov pop lret push sbb adc andb mov popa ja int in jmp sub loop adc xchg gs test jae sbb mov xchg sub or xchg (bad) sub js iret popa (bad) cli xchg push xchg cmp push mov sub cmovbe call scas mov lretw mov fwait xor jne pop leave leave int3 fstl fldt les aam inc or mov jae adcl aad xor adc push fidivl inc inc (bad) jo decl (bad) xchg xchg push xchg add je leave (bad) or adc xor arpl mov cmpsl add (bad) gs pop (bad) icebp dec cltd mov enter add insb mov mov or test sbb shrl sbbl aaa mov arpl mov push sarb nop xchg mov dec (bad) mov jne inc les ret fstpl incl fisttpll cli hlt outsb push sbb and mov lods push dec lea insb fucomi mov out cs jg (bad) pop es xchg pop mov or xor mov ret sbb test jns pop adc out cld pop imul or xorl std scas mov ja adc (bad) (bad) mov cmp mov adc mov jecxz sub sub push icebp mov cld push inc pop fcmovnu push pop and mov (bad) les loopne mov push sub popa insb ss arpl jp push int3 (bad) jg mov dec imul imul push sbb les fimull pushf insb stc in popa pop adc or setb pop ss and (bad) cmp xchg xchg sahf cltd jl in xchg mov push jge jge pop adc arpl fnstcw sub cmp sub inc mov arpl les pop pop adc or ds or scas mov mov add mov xchg add dec into jge push jbe lods fisubl push ljmp xor lret outsb push pop mov les outsl out dec bound jge pop push and insb jns push popa (bad) mov aad pushf enter mov enter imul ret jle cs inc push cld int xchg push cld out add idivl mov sub arpl jle loopne inc cs sarb pushf mov dec or mov or sarb mov rcll test gs inc push mov loopne jge adc shll enter lods and bound hlt mov jns pop jp pop and jecxz xchg mov (bad) rcl (bad) mov jns pop jle rcrb jl mov push test addb enter cmp add xchg push in insl lret mov mov nop mov push mov loopne shrb jae mov les xchg pop jg mov sbb xorl ss int add jnp and inc mov aam inc mov mov ds vpaddq jp lahf jae xor cltd cmp fsubs ret lret dec sub xor movsb sbb cmp sbb or bound aas push test lahf cmp nop sub xchg mov in enter inc adc or iret mov js mov in (bad) pop inc dec inc lahf pop lock ja pop cmpsb cld jo xchg divb out mov stc in gs bound sub cli leave call jo xchg aaa xchg ficoml out mov and push xchg aam jge pop sub test les inc pusha test xchg and jne je rolb das repnz int push fwait ljmp jmp insl lahf adc es lahf icebp pop sti xchg unpcklps cmpsl lret sbb mov ss aas pop sub stos shr mov xchg and rclb mov iret sbb ret in fidiv push out pushf xchg inc dec sub adc jg fcomps sbb push pop jnp dec mov push cltd sub lcall popa imul lds hlt or push icebp adc stc mov xor mov xorb jge cmp sbb xchg push xchg xchg pop and lret push out (bad) mov sarl push ljmp decb cmp and xchg movsb in loopew xorps out jp push mov pop cmp lds lock bnd pusha pushf adc loope or mov mov mov inc cmpsl xchg and mov lret imul dec mov aam fisubr lret nop subb mov mov xchg movsb mov pop adc stos sub mov mov into dec add lret lods mov adc fdivrl arpl in fnstsw mov dec je cmovp sub int3 jge and in push cmp xchg popf xor (bad) push add push mov mov jae fistpl cmp add jl add (bad) sub pop cs sbb cld insl cmc mov sbb (bad) mov jb dec iret or cld add mov lods dec les jmp (bad) out jns ret roll sbb mov mov push fisubr push mov lock mov mov fcoml or das sbb call jp fcomps mov pop adc xor sbb mov sti add and stos mov into clc and add add cmp in ret icebp sbb pusha lret loop lret inc adc (bad) pop push insb pop and movsb push stos es popf sub adc es and rorl js push popl nop mov jg repz iret push adc jb insl cmpsb xor sub cmc push mov mov sub push lahf lret int3 xchg fwait add test ret sub jmp into sahf arpl and dec (bad) inc dec jo xchg mov xchg sub rcrb sahf mov insl outsl push fwait ljmp sub lcall (bad) xor adc test add and lds cmp sub sbb push imul hlt (bad) repz aaa fldenv mov xchg sub insl lret je cmp dec clc ds push lret sub movsb addr16 (bad) adc cmpsb cmp mov xchg insb in (bad) mov test mov outsb cmpsl pop jmp int3 push xchg dec (bad) xor and lods mov enter orb xchg ror mov (bad) sti xchg int scas inc xor mov and sub and sub (bad) cmc jb xchg aam cmp mov lods mov xchg or out test add sbb stc pop mov pop lret inc incb or fmulp adcb jmp out adc jnp in mov inc push sub les sub pop outsl pushf orl mov aam add (bad) xchg rorl and cwtl or pop fldenv fdivl dec cmc icebp dec cltd sbb mov pop test dec fidivl (bad) adc mov jmp je rorl add xchg sbb leave cltd adc pop sub sub and mov or mov rclb dec push push bnd jno movsl cli adc mov aad sub add and pop mov out or mov popa cmpsb or mov fcmovnu xor xor mov pushf add mov sub test or jmp ds std repnz pop adc push adcl aam pop mov or das add and cwtl je cmp enter inc xchg jb sub jmp call add push sets pop mov in out fstpt (bad) (bad) pop push mov mov fsubs ss aas dec shrl push (bad) pop pop push ret sub out (bad) movsl (bad) mov mov fs adc mov push mov fwait in stos outsl jns and (bad) icebp xlat imul sub lods mov fidivr jo mov movsl dec mov (bad) iret sahf cwtl push mov inc xor push insb push sarl mov pop stos mov and dec mov cmp stos (bad) not bound pop insb pop jnp ss mov cmc dec sub lods lods or cld and add or sahf fadds insl dec daa jae out sbb lahf mov cmp fucomp test push icebp in (bad) icebp sbb arpl testl and pop rorb push xchg jg push sub push mov push cmp adc lret (bad) mov aas xchg jno divb inc xchg out inc xor mov mov and cltd sahf popa sti xlat int3 fldl or je xchg call inc dec aas inc incl insl xor xor sub iret adc (bad) mov add popa pop int3 add je into xor xor cmp popf test sbb mov add xor xchg inc in xor int mov (bad) pop inc push (bad) aam pop mov mov and or popa push xor insl sub pusha fbld loopne cs bound iret adc punpcklbw xchg rorb dec xor lcall loop flds mov lahf mov pop cvtps2pi sbb test sbb fnsave cmp andb test clc inc aaa adc out loopne push mov (bad) mov cmp or and hlt lock xor repnz test lcall adc xchg out and mov jns ja jo cmpl xchg push pop lcall std jns jle xchg sub mov mov and jno aas lcall pop test pop test imul movsb pop adc stos cwtl fdivrs imul daa popa test (bad) imul add pusha add push ds hlt aaa pop adc cmp out add mov in xor xlat and mov mov imul sub sbb xchg data16 jnp or inc ds or pop and imul je movsl cltd sbb xchg xlat repz push fs adc pushw or adc (bad) cmpsl add xchg das cltd fs xchg cs loopne arpl daa dec jg xlat sub cmpb (bad) dec fidivrl xchg push test (bad) fimul cltd push inc inc sbb call add dec mov jl jp lahf out out rorl decb mov iret cmpsb iret pop mov inc ja cld icebp mov add ss out sbb adc fs mov iret mov add mov pop sbb out and jmp mov inc jecxz icebp dec (bad) sbb xchg xor xor lret test jo rol jnp in add push cmp hlt imul ja mov jge xor outsl test pop out cmpsl ljmp xchg push pop dec pop xchg and aaa add repz inc das cmp ss shl and call or fucomip cmp test int3 or scas cltd sub mov dec jns mov push add jb (bad) testl and push aad xor lock fcmovnb xchg ret lds leave xor pop jne push sub jle out test repnz add jns jo sub jle sub fs pop loope inc push scas in cmpsl pop (bad) sbb mov push or ljmp (bad) adc and mov stos jb adc ds mov int insb dec push cmp pop and push xor (bad) icebp mov pop push dec and dec jno les or mov mov jge mov push adc adc inc repnz and push mov scas inc jno mov add mov mov arpl (bad) mov jno or cmp xor sub fcomps dec jns,pt es add adc js jae insl inc adc (bad) mov xorl mov xorl cmp push inc insl add mov mov adc pop (bad) or outsl arpl scas lods push adc push out fildll bound xor xchg mov push add sbb xchg xor mov and ljmp je adc subl aad fmul xor dec cmp xlat roll push sub es mov lahf outsb idivl cs xor adc insl push test push rcll (bad) jle scas xlat shll sbb inc adc push fnsave inc and sti fs lods and mov sub jl pop or les aam jp fidivl jns adc ds mov mov xor lods xchg jle cmpsl xor mov dec sti test pusha setg cmpsl push dec stos arpl cs sbb faddl sub cmp add sbb data16 dec sahf and xlat fwait pop test in int jl inc jnp lds pop repnz mov inc scas mull aam mov xlat and cmpsb sub jp cltd out imul lcall push idivl dec pop int cs adc cltd scas cwtl cmp (bad) jmp mov mov push rcr pushf (bad) sub pop mov mov jmp stos or sub xor push inc jg rcr pop push jge sbb inc cs mov aam cmp inc out lods arpl inc repnz pop in push and sbb or inc mov inc fbld test push xchg lret orl sahf daa enter dec data16 push and mov cmp int3 pusha push ret shrd sbb or scas cmp shlb push adc out adc pop dec out insb outsl clc lods fdivr push lea cltd and popa sub lcall lods (bad) mov xchg cs sbb adc and xchg sbb add hlt mov xlat xchg popf in xor and pop int nop mov mov xchg add addl mov jbe aam mov shlb jns mov mov aad hlt test xor fdivl mov pop rorl sbb mov inc dec lea lods sub cwtl dec mov (bad) or in inc mov inc cld (bad) leave outsl in out daa sub mov mov fistp mov push stc out into xchg adc nop dec mov sbb inc int jbe (bad) ss (bad) neg add ljmp in test sub inc dec adc add fs inc jae outsb repz movsb aas mov daa popf mov or leave cmovno lret mov mov push lret dec dec xchg shlb xchg rcrb dec adc sbb mov adc cld add push scas rcrb xor dec notb loopne insb dec xchg cmpsb cltd xchg inc jns dec cmp push addr16 stos ficomp repnz push popa rcrl pop adc in cltd aas sti insb cmpsl ja stc push jbe jo les mov sub (bad) dec jno and and xor xchg lock jp stc stc push lock aad mov pop adc cmp js bound pop (bad) popf dec jno out mov jns dec or popa (bad) notb or es jb ljmp jo sbb or inc inc insl ds imul jecxz fwait cli inc push jb idiv dec xchg pop push fadds pop nop sbb push int loope push and sub xchg add movsb cmp adc xlat jle mov add xchg sub jnp std ret enter lock pop sbb lock (bad) jnp (bad) sub sub ljmp hlt rcll cmp push push mov mov ds repnz sbb lods cli fist jmp dec mov frstor rorb jnp sbb pop loop or lret jns std inc jns adc bndstx cmc gs in in xor mov adc sti fmuls cmp into jbe sub leave lret popf pop (bad) (bad) out loopne daa pop push cmp push hlt mov dec or dec or push xlat orl sahf popa mov jle stos and push dec jns inc push mov mov pop pop aam nop xor pop jp add das (bad) xor stc test inc movsb xchg test pop pop (bad) (bad) insb xchg mov add inc loopne mov cmp ds push inc mov pop cmp stos mov xor push jmp arpl add int push sbb inc imul mov mov call daa incb xor xor cmp lods gs cwtl in enter dec cmp fnsave mov (bad) mov adc inc mov push dec push mov xlat stos inc xor je ss push aad cmc add andb adc shr bound and fldenv sbb mov add cmp hlt insl faddl rcrb in pop adc fs sbb cvtdq2ps lea cmp xor mov lods inc (bad) xor rcll or sti test leave push add (bad) mov or xchg push daa adc (bad) es shrl cmp jb lea nop dec adc mov lret lret mov and or xchg push mov jmp fcomp xor jp es lods aas ret rclb and test in mov loop push aad stos (bad) sbb sbb loopne cmp mov pop ret inc add xor inc dec test inc test enter mov and add dec aad bnd in cli mov push and not or jge stc mov pop adc sbb xor add xor test cli pop es mov pop sarl pushf loope lret test test pop enter test jns repnz push and push xor pop sub jecxz push jmp jae add jge stc push aas add fs jno in loope in or addl mov je adc xchg lock insl and aad push add push and mov cmp jle mov stos jmp in fnstsw and cli mov jbe fsubr mov ficompl sarl leave xor cli scas pop push stc and jl adc mov xchg ret (bad) pop pop lahf imul pop sub (bad) add int3 cltd adc mov loope outsb aad ret jbe sti jmp jmp iret fs adc add adc (bad) and xchg cmpl lcall inc cmpsb dec popa pop sahf aas jo and mov xor mov test int cmpl cmp inc sbb jnp fs lret movsb push push rclb adcl push inc xchg sub pop in lahf inc loope xchg outsb pushf fsubrs jae cmp fs add and or mov pop sub or mov int3 movsl jl insl test xlat mov sub inc sub ja inc out (bad) pop loop lds and mov insl in arpl lcall or xchg into mov dec mov into fsub in cmpsb push dec pop lods jmp and insb sbb dec xchg pop xchg pop (bad) add stos push jecxz shr aaa inc add dec lods inc mov popa js cli jg imul sbb shrl es dec cmpsl xchg sahf push popf jl inc xchg imul lds movsl aas ljmp or unpcklps jbe lret dec lock test adc jl cmp jo aam sbb imul dec int push cmp sti bound sub fiaddl (bad) mov pop jne jg add retw test (bad) mov adc test add ret js ljmp fcmovbe (bad) lods out insb jns push and test fmull sub nop mov cmp jle aam scas dec jmp and pusha jecxz outsb mov shlb inc add out shlb pusha dec mov inc mov negb cmpsb sbb push sti addb or in adc pop popa pop push xchg (bad) out setae es jecxz push insl adc cmp popa jno sti mov (bad) push lea loop pop icebp mov nop fdivrl divb repz push push ret dec icebp or lods mov aas out fwait push pop popf jno xor stos (bad) cmp cmp das push sub ljmp xchg (bad) jne push pop or sub (bad) ficompl test shl mov mov mov push jge out or add aad ss pop push mov dec jae outsl add movsl mov mov cmpsl dec mov mov cmp cmp loop lods and scas movsb sbb xchg out loopne dec add adc mov loop add and popf mov xchg push cmp push inc inc ror notl dec lds (bad) daa pop and dec jne dec mov mov or xlat and jno xchg aas rcr inc xor pop push cmp test jge lock jg xchg fs into add pop mov mov test ficompl and das outsl stos or cmpsb push dec sbb xorl negl mov pop les mov sbb cwtl rcr call or dec in das loop mov sub mov cli mov xchg cmp psubq add pop iret in lea jmp lret push jae test test daa cwtl cld test pop push push int3 mov hlt aam lods ret mov push cmp (bad) sti mov ds push or insb push pop pop and cmc test ljmp loopne ss jle jp dec fsubrl mov inc dec dec les jb pop push add dec jmp jo xor fdiv arpl pop sbb jae pop cmc mov sahf push (bad) cltd xchg imul int lahf movsb sub sbb sub adc stos pop psubd into push jno in ja inc rorb inc and and push sub add aas mov mov add movsl cmp pop inc inc and inc into cltd ret mov inc xchg (bad) int inc mov movsb fisubrl jg decb insl sti ss popa in pop arpl push cwtl pop pop cmpsb push and stc mov dec adc jbe sbb jge sub idiv arpl cs stos int3 mov dec cmp gs adc lds (bad) xor xor aaa gs push daa jmp sbb add or je lahf mov int3 inc add in add cmc icebp mov int3 lret cld pop push mov aad lret mov mov rclb sbbl andl xor lcall cmp lock test or loopne (bad) je mov jne add imul loope push lds je inc inc jnp inc push or arpl lods xorb jne mov ss int3 movsl sub cwtl sbb inc push into andb xor pop aas (bad) fs jo fdivs notl in mov mov movsl sub add je jno xor sbb enter dec jne xor fwait rcrb jae cmc jmp pop pusha dec pop lock xlat pop or add lret cmpl sbb das push pop adc (bad) rcrl mov aam and xchg jp mov sbb lods cmp ljmp mov or sub dec popa (bad) rcrl aaa gs fstps xor es pop dec cld call popf js sub sbb data16 fcompl mov sub (bad) xchg mov lcall loop push jge pop inc inc jecxz movsl popf push xor jns and xlat push out out out cmpsl jno in sbb lods xchg loope inc adc sbb je mov xor iret jns test jnp cmp mulps or push rcr cmpsb sub or xchg ljmp data16 shlb popf fcmovbe stos sub sbb ss xor out inc inc incl sbb into cmp mov popa push push clc pop xlat xchg mov inc mov aam pop cwtl imul insb pop gs sbb adc sahf ja lods mov ja inc imul (bad) sub inc lret jp xlat addr16 and xor in ss fs (bad) (bad) notl ss sub (bad) rcrl dec adc jle mov imul in push cmc scas sub adc int add cmp int3 fwait aas mov mov stos adc mov mov jp xchg (bad) jp and ret mov ror cmp pop test in pop dec fnsave into pop flds mov or jno cmp sbb add sbbl in jne or jo stc inc cmp push cld mov negb jno cmc js outsl clc test js push add out mov mov repnz add mov jbe lea pop rcll fbstp fadd sub outsb mov rclb xor jge,pn adc dec (bad) pop xchg xchg mov into push gs lock or test ljmp xlat fistpl mov mov add pop call sbb sarb mov daa daa xchg pop mov mov and inc imul adc xchg and cmp sub push aam lret insb jns out bound fs jbe cld pop push clc adc pop lret repnz out add xor mov repz rcrl add adc sub jb (bad) sub out rcll jb or mov adc nop pop (bad) cwtl lea inc aad aam (bad) cmp sahf mov daa (bad) js vcvttss2si notl inc or xor push imul cwtl imul jnp jecxz xchg stos jl repnz pop mov ja xor add int and jnp and (bad) jmp xchg mov inc cltd jbe sub add pop xchg arpl pop inc xor nop sbb popa pop cmp or into popa xchg mov or ljmp mov js bnd add pop push xor pusha cwtl add xchg cmp jbe mov xchg or or in mov enter dec pop xor jg into mov cmpsb dec (bad) sbb xor in lods in repz mov (bad) sbb test dec dec sahf (bad) lock in pop test xchg movsb int3 and mov xlat xchg pop xorb mov gs xchg aam xchg dec push dec push cwtl mov mov pop ljmp (bad) rol div mov js hlt xchg hlt sahf lods dec jae adc scas (bad) jp out xor mov push pusha out dec cmp jle js gs xchg dec adc mov sbb sbb ds (bad) inc shrl add xchg fsub gs sub addr16 ret scas test ss jmp cmp xlat jle testl jo pop adc or rcll xchg inc fidivrl dec push push add mov scas iret int3 push addr16 lcall inc mov and or jb or je movsb ds aad pop cmp clc inc sub add insl adc sbb pop popa aad out mov enter ss pavgw mov cmp icebp push or inc sub ret xchg ret add mov lods cmpb sub nop dec fwait rcrb sub in dec xchg cmp test mov clc ds adc push or adc add in stos mov jo push stos xor cmp push repnz subl cmp scas je push int3 loopne (bad) mov mov scas sahf testl out adc lret nop rep mov jecxz scas popf hlt fwait (bad) mov mov add shr shl fwait pop push test push cs xchg pop jae movsb (bad) jae pop sub int3 push rcrb mov sub js aad adcb sbb mov into push xchg push rorb insb push mov cli out xor pusha mov adcl cmp dec mov push push push xchg das mov cmp (bad) cld nop adc sbb sub jno or (bad) rolb lods imul enter sub imul cmp xchg xchg lods xor xchg xor mov xchg fidivrl cmpl or xlat int push sub mov mov and (bad) repnz orps jle pop movsl aaa scas ss pushf jle outsl sbb int cwtl adc jns mov cmp or cmpsl or mov aas hlt sbb out mov lds cs jb imulb pusha not cwtl int3 jmp xor ds cmp mov xor addr16 daa in fs js cmp stos mov pop or ds jno jb pop inc sbb bound and out push add inc mov dec mov insb jmp adc (bad) hlt enter jmp inc pop enter push pop push or sarl push xor mov push mov incb push jo xchg sar add sub jl cmpsb push xor or adc js outsb in xchg pop bound test cmp dec mov mov es jp pop enter xchg xor lea ret adc jecxz pop jecxz add and mov test out stc ss dec push js push add pushf xchg jecxz pop lret sbb push sbb and jo inc lods test (bad) fsubrs fdivs mov imul push cmc incb lret mov cmpsl leave xchg push dec cmpl pop inc xor movsb jo mov ja jp and push sub inc xor fldcw sub mov pop ljmp mov cmc xor sar shrl mov lods dec pop push lea mov aas out test bound js xchg cld (bad) test (bad) call in mov mov add lret add (bad) icebp and jp aaa repz cmp in notb pop adc movsb cmpb xchg and aas call or mov addl fadd cltd arpl add jmp jge insb icebp loopne mov fs into loop ja je push in fsubl int test pop rorl fisttpll imul mov fimull (bad) mov and fist jnp pop (bad) sbbb pop xchg leave hlt sbb in fdivr cmpsl leave (bad) dec push dec stc pop jg sub ljmp sti pop add in lods xchg sti in inc mov or loope dec (bad) cmp int es into ljmp push xor (bad) scas pop nop (bad) mov pop xchg jg xchg or iret mov xchg cmp imul add stos fisttpll xchg sarb jnp in loopne dec sbb scas ret iret icebp cmpl clc lods in or loop or mov clc mov (bad) add mov jne pop (bad) lods outsl inc test (bad) and arpl rol adc enter fdivr stos jae lcall repnz mov (bad) jge (bad) pop xchg das int push jns stos mov adc nop xchg mov mov mov int3 or sbb sbb cli push sbb jmp inc push sub mov maskmovq testl leave inc das fs mov inc fnsave sub (bad) fwait cmp in cmp shll (bad) loopne jne fsubl adc fisttpl dec dec lahf inc pandn inc cmpsl push outsb mov mov and fildl xchg mov inc imul push pop mov xchg or push (bad) mov jge pop lods lcall fildll mov add js xchg iret dec cwtl push iret mov lea js imul mov fnstsw mov xorl xor mov jge pop stc lret test arpl inc or (bad) daa cltd xchg cmp add jmp fdivs repz lea push mov ss or lcall repz fsubp out rcpps (bad) dec rcll mov adc mov or sbb daa imul stos sbb in push ret js aaa mov movsl leave repnz sbb xchg and and mov cmp xchg jns pop sub aad pop jns loope push jg test fimul pop leave push sub or lock pop sub or add mov mov pop mov andb mov rol inc jno sbbl test pop testb or test inc and aaa xlat xchg jo add sbb stc ret dec mov jne xor movsb addr16 jae ja or cmp (bad) call movsl and mov es mov loopne and sbb es mov mull mov inc test xor jecxz decb cwtl sub int test out adc xchg ret and pushf scas pusha dec lcall (bad) pop sub or mov pop je (bad) xor xchg or in test mov rcl push iret jmp fisubrl and imul inc xchg jl inc mov pop push aas xchg out mov pop xor pcmpeqb pop fidivl inc xchg cmp mov jmp insb push lret (bad) mov pushf mov sbb cmp int push mov adc mov add pop fistl je xchg rorb pop aad aas push data16 lds jg cwtl mov xor cwtl scas das dec fidiv insb or inc mov into leave pop lea sub int3 sbb cmpsb (bad) jno xchg adcb cwtl loope enter mov jp and jmp into mov mov xor mov xchg (bad) sbb mov mov (bad) (bad) in push pop or jg ja xchg in push push imul jle frstor fwait ljmp lret out mov (bad) sarb js jb dec in sarl jne (bad) addr16 mov dec loope xor xor out mov insb popa xchg xchg jle adcl dec sbb das mov faddp roll (bad) movsl jmp out jecxz repnz add dec push adc and push sub dec or xor nop cmpsb sbb js jbe mov mov out jns ret cli lods adc cmp mov adc (bad) mov mov jno lods in jbe sub lret test pop push dec mov pop adc ljmp test xchg xchg dec leave or xchg jge mov imul xor (bad) pop cmp pushl push xlat xor cwtl fcomp aam push xor aas stos mov mov lcall (bad) sub adc clc pop push loop xchg test dec or and daa add bound sub adc lea outsb scas cmp push xor pop mov dec fcomip sub pusha rorl jecxz out xchg xchg sub pushf inc push xor lret sub mov cwtl dec leave xchg jne mov rcl js (bad) out into scas jmp idivb out mov cmc jnp ret add cmc rclb sti push xor fmuls mov out pusha mov add adc mov xchg dec mov cmc dec repz inc lret shlb pop sub push aaa in scas test nop pop cmp ficom in xchg push scas cwtl inc mov jmp out ss call inc mov xor inc out ret mov pop clc dec out jnp push dec shlb jmp or sbbb pop xor out loope jp aaa push mov mov cmp lods aas dec repnz lds in sti xchg mov sbb fdivp push sub xchg inc data16 (bad) in or ja add jecxz push add cmp mov add gs xchg (bad) fdivrl rclb test (bad) clc jbe gs lret push push mov lret test xchg aas inc in out mov xor mov xchg out mov daa iret (bad) out fcomps lods sbb fnstenv sbb jl out imul dec sbb cmp mov mov (bad) ja mov and sti cmc jmp pop xchg loopne out fnclex pop sbb jmp sub adc inc jnp jbe jo jge hlt mov jl push in jmp mov sub jo (bad) (bad) mov cmpsb mov jb lea bnd test mov or jp out adc inc xor lahf lcall xlat es jge in pop xchg and sub (bad) xor adc push movsl insl cmpsb (bad) xchg cwtl pushf insl jmp stos popf (bad) scas imul adc add jmp inc pop jge bound mov jp fldenv je inc add jne clc mov hlt mov lret cmp bound cmc sahf bound outsb add inc jmp push (bad) in push or subl aam inc (bad) popa stc jge pop aad push mov push fstpl add int3 jns add or jb rol adc fs dec es mov or loopne rclb addl repnz fnsave jecxz popa jno shlb repz push sub xor int3 mov cmpsb gs shl mov xchg das popf add test lods lods inc into mull lret cwtl loopne mov and cmc jmp mov xchg or psrlq cmp (bad) push add fsubrl fmul aaa xor inc and in mov (bad) ret lea aam add jg lahf add in or mov fldenv mov hlt jge dec xchg push push es (bad) fwait cmc cmpl in ret pop or out stos jns inc sub xchg pop mov push cltd hlt cs mov or pop rcrb aad cs sub jbe add mov add xchg cmp lcall out imul stos xchg cld scas dec sbb dec outsl stos add lret and sub insb outsb sbb es sub xor ja js sub xchg (bad) mov push and sub (bad) (bad) (bad) int sub divb out sbb cltd in fist mov inc jno ret xchg loope and ja mov push xor outsb xorl ret or mov jecxz lret xchg sbb sub or adc pop cmp dec les notl xchg xor lret aas xor push mov or cmp loop pop in cmp pminsw push and push imulb movsl push das scas cmc mov dec ja add arpl mov ret dec xchg dec mov jg sub add out notb push xchg sub jp pop adc xchg dec out popa push jge or decl sbb push xchg hlt and loope cmpsb jp jp sar mov es push sub xor push xor ljmp cli sub and inc jae movsl jns mov xchg out fbstp in lret adc arpl clc mov lds (bad) repnz dec sbb xchg adc xor dec lods dec cld inc mov or lods xchg lret js rorl push or adc dec mov hlt mov ja jo ljmp insb addr16 dec sub mov add pop loopne repz sar outsb mov out sub mov add lret push test rcr xchg fiaddl shll insl add enter ljmp test fist dec mov and push out push int3 push lods cmp clc test movsb outsb push (bad) mov inc jns pop arpl mov dec fnstenv cmpsb dec mov mov jbe (bad) cmpsl (bad) fisubl add mov divb repnz sub dec je insb inc push jg jbe outsb mov popa add xor jae cli loopne xor mov loop adc and bound sub mov in sbb fwait into pop decb lahf sub jnp lret adc jo mov hlt mov jmp in push mov xor test and inc fucomp jo cmp nop mov dec pop mov data16 inc dec mov (bad) stc dec push data16 dec mov jb inc sbb push (bad) jns pop jp adc hlt lret lods lret mov cltd les aad jmp mov (bad) out sti test dec stos push cmp dec or mov lea inc sub add jae fs int movsl leave enter outsb pushf mov pushl fldl dec xor cmp mov into cltd jne mov mov (bad) cwtl cmp jbe ret sarl sarl or cmp popf mov cmc push not dec std into imul cmpl data16 out mov shrl sbb inc (bad) es loop ljmp sbb rclb mov and sbb rcrb outsb fsubl shlb shll ds test mov lcall fdivl xchg cmp mov addr16 add (bad) bnd lods or fisttpl cmp stos or cs dec mov rorb popa cmpsb xor rorb inc lcall dec or push addr16 ljmp dec jne mov dec je or lea and (bad) je cs and mov ja adc lcall mov outsb and jl jecxz add add jno or mov inc sub in leave stos lock scas shrb dec inc in add int3 jmp jbe push out test (bad) cld outsl mov loop xchg data16 dec jne in pop mov and inc dec push aas (bad) jmp rolb fs mov fisttp pop or sti addr16 push pop jno bound lret mov inc into jo and sub cs (bad) lret call inc aad lcall mov loop xorl daa jnp inc pop rolb pop stos add mov outsl fildl dec mov daa xchg push inc cld push fucomi mov jne inc (bad) leave int3 pushf repnz or push stos popf sbb aad enter and repnz mov movsl dec jno mov push clc jle stc insl imul push cwtl loop jne call imul inc push cmp pop mov (bad) pop dec rcll in sub xor loopne mov imul xchg jb scas inc add aaa inc or pop imul mov jnp cmp pop ficom loope cmc push pop mov test xchg fnstsw test jne xor scas (bad) xor out (bad) sub int ret dec pop in scas cmp lods (bad) jb add xchg gs pop mov sub lret push js leave out dec pop mov addr16 lds test test push or and mov pop js aaa cmp pusha add (bad) jge outsb movsl sub adcb xchg inc push pop mov and push push push jb aam adc scas std ficom test inc fiaddl (bad) movsl es or inc xchg xchg ljmp mov fdiv fist aad pop push inc rclb ret dec sti mov cld mov xchg xlat xor jnp mov fwait jp add imul pmaddwd sub js shlb ret sahf and push in (bad) jl fcmovne pop dec addl push loopne imul jne in lock scas je and (bad) jle xor xchg jge fwait or sarl addr16 fstps rclb add shll mov adc adc jo push add jbe in cmp fisubr into lret xor and (bad) xchg xchg jg and outsl mov mov adc jns adc inc repnz lods xchg jno dec sahf popf or xchg and adc movsl push lcall cltd std js iret push or jb scas repnz je sbb les shlb pop sbb jmp jae inc loopne mov push daa dec inc xchg and cmp and jmp arpl add (bad) sub ror add adc or jg cwtl lret hlt jb outsl mov repz fcmovnb pop adc cmc popa mov xchg popa roll pushf xor (bad) jge xchg push sub adc adc test xchg and or insl push xor xor inc int3 out mov push scas sub and pop pop jno mov cmc dec adc adc lcall imul push push jbe in adc cmp pop fisttpl xchg pushf jnp add aam (bad) cld (bad) cmp mov jnp dec jecxz in jo push insl jne pop xchg xchg in es xchg sub out pop cmpsl or xor data16 ja lods dec xchg jne xchg jb push mov fildll imul add dec gs jno (bad) adc test outsl jb xchg cmc repnz pop mov and jne subb adc sti pop inc push xchg add aam adc je test fildl (bad) jne data16 jo or rcll xor gs push shrl xchg jle dec adc push mov not stos (bad) xchg push cwtl mov fdivl mov jle inc testb (bad) xor cmpsb push add enter repnz inc adc lods test out gs sarb cltd cltd inc pusha gs gs xchg xor inc daa dec dec push adc sarl out sub xor mov iret inc shll mov xor (bad) cmp add or pop (bad) sbb dec inc cs jl inc shl nop data16 push stos pop mov (bad) popf sub mov inc xor cwtl sete aas jbe incb daa subb nop cmc sub jg,pt sub xor sbb dec ss decb mov pop gs push mov insb push add scas jne mov scas loopew xchg mull mov into (bad) mov daa sbb stos stos mov xchg push and fadd stos sar (bad) mov xchg xchg mov enter lea mov mov push xor jb mov cmp out lret fwait ss call mov mov jmp call sahf lods shl mov inc lds cmc and adc sub mov mov stos outsb in ret popf mov push and mov (bad) push mov sti daa mov in arpl cmpsb mov pop outsb pop sub lahf lahf (bad) push (bad) aam cmp fs rcll (bad) cs mov lret push inc xor pop popa or push inc adc data16 jb mov out cmp pop add fs bound pop ret sub aaa loopne mov addr16 jb inc fwait js outsb push inc pushf adc nop gs lods xchg mov sahf rorl mov ret push lcall sub jmp mov int pusha xor leave and je inc rol (bad) cmpsb adc aad js dec inc cmp and das mov mov or or out add shrb cmp add xor outsl inc movsl nop and jo sub push lods xlat add mov inc jns out popf inc dec and pop cmpsl loope fwait mov sarb cmp shl punpckhbw adc xor inc lods hlt pusha mov loop lods push add cmpsb (bad) add repnz stos nop gs inc mov xor inc popa stc sbb lcall jns cs std stc pusha sub mov add adc inc lds or shrb add pushf cmc mov rolb outsb into jb out push aaa imul (bad) incb jbe pop sub pushf inc sarb arpl push in ss fsubp jle je cmp or shrb outsb sbb stc add aad dec out sahf clc rorb aad mov cmp xchg sbb cltd pop lock add fstps outsl mov cmp push push lock int3 inc xchg push cwtl cmpsb push xchg je pop out jne icebp lahf push cwtl int3 mov cmc mov stos lret push pop sbb inc cmc stos loope ss stos rclb cmpsb cmp push les mov ljmp xor adc cmp mov xor repz repnz cmp mov adc out mov outsb mov xchg xchg daa sub into lock push (bad) mov mov test mov test mov pop push sbb xchg jle push add test mov mov pop arpl sbb mov mov in adcb enter xchg loop push adc jp xor sbb into dec in fdiv in popf push jmp adcb loop hlt je adc push fdivrs loop sbb jb or cmpsb or leave ret inc clc out mov dec loop adc mov cmp pop dec fdivs mov push adc cmpsb jo stos sub push mov sbb enter int cli sbb mov (bad) mov in add in or add out push push adc cmovno in shl std loop lock xchg stc adc ja cmp fsubrl in test jne hlt js xchg pop fnop mov jge ror hlt push lods add lods addr16 adc fcomp adc adc pop es jbe int jno in jns int3 orl test (bad) push dec leave mov in add gs push push jmp inc dec xor cmc xor push push movsbl xor mov out cmp cmp out ficomp mov sahf cmpsb pop cmp enter mov cltd scas mov mov and sub daa jo inc (bad) aam imul icebp jmp push call pop and mov cmpl std mov cli ds add sbb cltd stos mov lcall mov test nop aam les sahf or add lock add popa pusha xchg cs fwait cwtl in mov bound and pop push cltd xor sarl adc loope push mov gs dec cmp lods pop (bad) icebp bound or repnz sbb push adc nop leave jnp mov inc aad add sub mov sbb dec movsb or in jae xor sarb push pop jns sub out shl dec cli push xor not pop adc cltd inc pop pop push pop test jb ret adc push hlt ret test inc sub es push repnz pusha xor push setnp in or push jno std xchg imul test mov mov push lds dec or std dec mov or mov out pop cmpsl push jns push push push dec addr16 and dec sahf mov push xor stc orb push push test test mov ret dec mov inc mov imul inc pop mov imul and sub lds cmpsb mov test popf cmc sub mov adc adc stos dec clc sbb out mov or add xor push das mov roll test cmp (bad) sub fdivrl sbb jecxz xorb ret in pop push pop xchg loope clc xchg adc into mov xor push push cmp out cwtl dec in sub xchg data16 mov inc enter sbb das scas cmc push leave jne push push bound adc mov push lcall icebp cmp adc mov out daa mov cmp ret movsl (bad) out iret sbb add xor loop sbb jb mov shll or pop popa movsl pop in scas sbb sbb add mov dec push cld sub in js xchg mov xor scas cmp int3 insb dec scas dec mov cli fisubl and or lock or stc sarl or mov mov call jp,pt jmp (bad) dec dec mov popa jo fwait cmp arpl out (bad) popa xor mov into lcall pop push fnsave in bound xor cmp (bad) fisttp jbe pushf jo cltd ret bswap add mov je insl jns cld sub popa cmpsl adc out dec sbb inc movsb jmp out mov lock cmpsl xor sbb aas push fsubrs xchg loop (bad) das fs sub jae pushf mov dec mov or daa xchg mov test push pop adc sti push fst fcomps xchg (bad) int lods scas ret mov jns jo stos cmpsl mov push xchg lahf aaa sbb cmp fisub dec cli stc test enter sbb ret fnsave stos dec addr16 add jge mov mul push dec adc stc les push out or adc push or jl and cmp std push dec fs int3 mov iret add jl jo dec sbbl xor je lahf push cmp inc pop sar push jo iret fsubr xor dec nop loope push pop pusha stos iret mov out cmc mov stos (bad) out rcrb sbb sbb jle or push and adc sahf insb les fcoms xor aad mov jb push popa rcr or or fdivr mov loopne sub daa inc pop insb js inc cmp lea (bad) sub pusha rcrl stc out xor movsb pop push leave js aaa pop lea pop pop or hlt sub push and push or stos data16 std push adc daa clc loopne stos sbb cmp scas out sub mov aas (bad) paddusw fimul sub icebp adc addr16 add xchg int push mov inc mov movsl in jne (bad) stos dec insb sub scas mov jle cld leave pop and rcl ret mov xchg shlb and (bad) cltd call outsb lea movsb fsubr pop (bad) in xchg inc sbb popa dec imul ret gs mov sbb aaa inc mov (bad) iret xchg daa inc or pop cli ret or inc adc pop mov and fadd dec mov pop dec js adc fdivrl std cmp mov ret movsl das test and jmp push sbbl aad into cmp aaa push scas hlt stc stos std add (bad) pop je (bad) mov sbb insb fstpt pop mov (bad) adc mov xchg mov pop pop pop pop xor test sbb pusha and mov xchg int3 add stos arpl xor cwtl int xor mov fcomip inc lods xchg rcrl dec or je jns lret loop repz test dec adc adc push sub out movsb icebp push lret inc and cmp aam ficompl les add nop (bad) rolb lret mov lods ljmp ret sbb stos fldcw out cltd mov mov mov das ret vzeroupper mov lret mov hlt push or lods adc insl bound jg mov sbb enter sub mov fcmovb lahf mov popa outsl inc adc shll inc jmp (bad) xchg addr16 fdivl xchg call and mov mov ret (bad) lret jnp lret dec mov (bad) pop adc sbb push (bad) sbb (bad) int3 stc clc lcall sbb sub iret test mov (bad) xchg adc int dec mov mov testl xor cmp inc pop add jecxz dec bound out sub cs pusha int3 shll enter pop loope out outsb out mov insb cmpb mov or mov jge scas divl rcll or xchg je xor gs and push movsl mov sbb outsl xchg and mov cmp push inc sbb ficomp rcll imul jecxz repnz movsb adc mov adc mov sub sub cli mov sbb (bad) cwtl pop ja cmp mov push repnz arpl mov inc divb sub xor push or jno repz jnp clc push insl push pop fidivl sahf and push mov iret mov (bad) cltd (bad) loope mov mov dec mov fadds mov xchg lcall testb insl jo push pop movsb jmp inc rcrb bnd sub (bad) pop fcoml scas aas mov or mov int cmp sbb inc sahf sbb mov xchg mov inc push outsb mov mov lret push mov xchg imul shr aaa xchg cmp fstpt or xlat add movsl popa pop mov arpl (bad) (bad) xlat movsl test push es xor es cmc pusha (bad) xor or xchg (bad) popa push xor and popf repz fs lods shl sbb jecxz xchg jns in cld inc adc push jp hlt stos lret leave mov cmp pop enter sub push dec and clc std stc ret orl inc xchg ficoml xor lods test pop shlb addr16 cmpsl pop inc rcl shrb add pop cmp lcall sbb lahf or add jl daa push notb mov sub push insb add sbb inc orl jl mov subb (bad) psubsb pop and in cmc clc stos dec and jmp xor es mov mov xchg xor call inc test (bad) mov push adc sbb dec adc shlb sub mov scas imul or jo xor add mov scas fst lcall stos fsubs test mov mov jg cld loop or (bad) leave ljmp jns xchg mov pop ficomp nop fadd adc rolb mov mov stc push sub mov inc sti mov outsb (bad) movsl fwait scas (bad) iret popa push (bad) hlt jmp xor jge dec jae lret loopne (bad) in jno dec or xlat loope sbb dec sbb ret test and and fcoms push mov fiaddl cmp mov in repz lods (bad) sar xor sub ret fisubl xor dec dec nop dec dec shrb (bad) mov cmp cli aaa mov pop ds mov adc sub adc test jmp (bad) mov test movlps cmpsl sbb repz ds jns add sub inc in mov push arpl push add xlat push cmp sub scas ret and test inc xchg mov mov add lds (bad) dec decb cmp shr nop or mov adc popa push inc xorb mov inc push call lret (bad) sub cmp test mov and sub and scas sub leave jae stc sti inc in sub ret cmpsl (bad) lret repnz xchg inc xor sub pop inc fdivrl arpl push cmp stos mov or mov add add sub in pop clc jmp xchg mov pop pop add je out test lods push cli inc (bad) das push icebp outsl lcall xor jne repz bound (bad) icebp into out inc das lods ret or test jmp adc pop adc xchg pushf pushf and ds scas dec xor in dec adc dec inc jae push imul lret mov popf insb loopne into dec xor out inc scas mov stc and pop or ds and inc mov xchg sbb mov jecxz push mov repnz stc dec hlt add sbb (bad) mov outsb ret in dec hlt mov pushf lock pushf ds aaa test test fwait mov pop or mov xchg popa std inc loopne dec jno pop fwait or and pop add sub pop jp or push sbb leave mov out cmp cmpsl movsl pop or mov xor je sbb jge and aam and (bad) mov xchg inc scas insl repz lret pop lock cmp add fwait (bad) and push mov js test push stc inc iret add inc mov xchg sbb ret std pop adc js ja pop outsb roll xor mov dec fstpl adc xchg dec rcll jp mov cmp xor sub and or das in xchg adc or fs int3 pop ret loop add xchg adc lods mov dec lea pcmpgtd scas inc pop mov sub xor daa fcoml sbb pop cmp out mov fsubr pop xchg icebp xchg mov lods lahf in add dec and mov jecxz xchg ja cli gs pop push ljmp inc test loop pop int3 mov std lea pop sbb add add jne dec xchg daa clc ja dec dec xchg fldcw push cmp sar cmpsl loopne push adc push leave (bad) dec inc clc (bad) out outsl xor mov jecxz adc xor enter fnstcw fisttpll lods fwait lds aaa test hlt rcl push or mov repz dec insb movsb lods inc jb insl out push test inc out (bad) (bad) cli jecxz (bad) cld add inc inc stc jge fimul sub mov ret mov inc outsl loope fsts sarl ss arpl inc repz xchg rcrl mov mov test fstpl or or xlat xchg (bad) mov jae dec add imul (bad) aam (bad) int jge push push jns or pop mov jno les adc dec jns pop sbb mov inc sbb ret (bad) dec pop dec cmp cli int scas ret test pop dec (bad) mov xchg les cld cmp ja cltd outsb mov mov mov ret xor mov dec mov cld cltd out aas in mov addr16 mov repnz stc (bad) data16 (bad) sti mov lea sahf inc or jp jb aam das add arpl mov pop shrb call jl xchg pop outsb push (bad) sub push aaa adc jecxz inc xor pushf lret pop cmp mov jmp test adc test jle lock push sub loope cmpsb insl mov dec push jmp mov decb push sbb mov int pcmpgtd mov pop stos pusha gs nop cmc mov mov jbe jns or sbb xor fidivrl movsb int3 sarl dec fdivp xchg jno pusha adc fstpt in pop into sub iret inc mov mov push jo jae mov ds popa mov in cmpsl push mov lahf sbb fisubl and jb push dec (bad) aas dec outsb mov aad push pop push add and lcall call fs push lretw dec pop fbld xor inc repz cmc or je paddusw popf loopne std sbb sbb dec pop push test jmp dec daa inc xor sbb ffreep and sahf bound das test repnz cmpsl cmpsl or xor cmp imul inc lret and and insl sahf popf push jnp dec xchg test adc and lcall mov or sbb push cltd push sbb shrb sahf push movsb out (bad) jl (bad) lods test push test dec jnp lcall dec xlat push add out lfs push movsb dec add fucomip cld jmp movsl ret mov jnp lret push in jge,pt jne lock sahf add mov inc in popf hlt mov mov sbb and lret loope or sub jecxz test and je mov mov mov data16 adc and sarb and addr16 addr16 stos inc sbb fs pop push js rep xchg xchg aaa test push lret enter or jno pop fdivs or fsubrl (bad) xor or cmp or jmp test sbb cld in push cmp lds inc push pop mov pushf fucom (bad) and pop movl adc fwait pushf pop push imul test iret ja cmp cmc jl test jns push or hlt (bad) push cmc push or and mov cltd pop std in movsl or inc je adc insb adc add (bad) std and ficomp outsb or add (bad) in and int3 pop cmpsl fnsave sbb sbb in (bad) lahf (bad) js sbb and mov mov pusha mov (bad) xchg int3 hlt cmp mov fiadd mov push test dec push rolb push int3 inc (bad) pop fsubl das push into cld inc push or pop and gs loope push fs and push out js or cli jle movsl push dec jmp test call js,pt xchg adc xor jecxz movsb push push jae jne xor jle stos mov adc cmpsl push jns mov mov jnp test idivl push dec cmp shrl mov mov das outsb inc or test xchg add pushl cmp mov lret scas or in sbb mov mov fstl mov arpl aaa adc jno fdiv mov data16 pop pop xchg or lock scas cmp out jnp mov loopne pop mov (bad) mov mov loopne jae fstl pop mov jl (bad) fsubl sbb add adc jp addr16 stos push mov arpl jg add push fwait adc mov xchg testl rcll lahf sub mov adc xchg popa inc or not out xchg aam mov out xor push push push test sbb frstor fildl lea test add and dec mov dec mov stc mov jae ret pop mov mov sub adc (bad) xor mov lret mov aas (bad) das js mov adc mov inc fs stc push or mov mov push je mov addr16 dec mov fsubrp stos inc push push test mov jge xchg es mov cltd divl mov inc add ret imull push jl mov inc fldenv adc inc push hlt (bad) (bad) cmpsl jmp lods adc es testl cmpsl fsubp sbb mov in and sbb mov cmp inc or pop jns push pop sti add adc test push scas lock pop lock cwtl jae lea inc jae shl out or mov sub or xlat cmc fisub mov jg and mov push out lahf fisttpll daa pop mov and xchg fildll cmp xchg mov or mov les mov inc test sbb out mov mov xchg insb aam cmpl inc shrb (bad) sub mov add pop imul add push cmp repz push icebp cmp xor enter jle dec fmull pusha jae jge sub cmp inc mov cmp and lahf push add or pop movsb xchg push mov leave mov (bad) cmpsl imul (bad) push and sti iret in ret data16 mov fnop cli stc jecxz aaa sahf cld sub lret fmull out hlt xor dec and inc imul test mov rorb push xchg push mov ss mov cmpsl insb psadbw cmp ss add loope mov fst stos mov push lahf xchg and mov sub std push push popf sbb cmp (bad) cmp inc add sbb push add pop daa jle rclb int3 into mov aam ret sbb inc (bad) jge cmp in mov out aad sub or inc push imul cmp ret loopne js mov dec pcmpeqb rclb mov or xchg mov cld inc push movsb xchg xor dec dec pop mov xchg (bad) adc push aaa decl (bad) (bad) xchg jb pop mov push ror and mov cmc andb mov pop and orl or push lcall mov repz jge ds jnp sar add push xchg stos jno (bad) jae sub nop xor inc jmp das lret push xchg das insb outsb mov imul mov in pusha pushf adc inc and adc fimull add andl (bad) out mov mov ret cwtl imul shrl scas adcl das fs aad lret and (bad) xorl xor push mov dec mov pop and xor xchg loopne mov and loopne xchg sbb dec xor add lods jo lea mov stc into fisub insl sti int fldcw ja ret jb in add and int3 sbb cmpsb cmc xchg lahf cmp lcall sub xchg imul pop jno out fsubrs xlat (bad) push pop xchg adc cmp test pop pop cmp lods addr16 lds inc add pop cli (bad) pop jo xor push xchg jno stc pop xor push push inc dec cmp and gs jl pop mov mov inc pop jg cmp push leave sbb test ret push xor add sarl jp test sbb js mov ret std jnp jne cli mull xchg mull rclb rorb out ljmp pop (bad) jecxz leave lea test mov pop fldl push (bad) sbb mov adc and add lods andl (bad) sbb cmpsb cli push aas lds mov jb,pt jo mov popf aaa fnstsw test test pop leave add mov push xor and gs xlat rcrl sub js and mov cmpsb fwait cld lds mov das pop js arpl mov sub mov aad js movsb (bad) jno push mov movl rcll pop (bad) in sbb adc es ret ret cltd push pop and pop icebp addl mov iret and sub add and dec sarb push je jns insl fidivr popa push dec sarb sub pushf pop inc ss xor cltd test mov stc (bad) lcall je mov movsl push cmp testb mov and icebp jae xchg aaa aad out inc pushf xor cs jno ror scas in idivb scas xor pop fisubl xor jg negb sbb push loope hlt cmp jmp mov sti daa mov jo sbb add mov jecxz mov inc dec loope dec fwait sbb pop mov outsl jae jno dec jnp jle in pop (bad) xor lcall push xchg jge subb (bad) sub lret fs cmp add (bad) xor cld xchg pop ja ljmp jmp sub sub adc mov out (bad) movsl imul jae inc outsl (bad) out icebp mov (bad) fcoml xorb outsl popf je in test sarb rorb popf idivb cld ss aaa aas pop popf adc (bad) lock mov loop fmul stos imul cmp test xor push test lcall mov sbb sub icebp sbb pop dec jp sub push loop repnz or inc push ret adc int3 fsubl mov lahf ljmp and sub out out mov cmp loop std les idivl cltd push or push xor outsb movsb jno inc add mov cmp jnp mov push pop xor jmp scas shlb cmp loope orl pop jmp mov or loopne (bad) mov loop pop faddp nop ja xchg xchg mov xchg ficomp into adc cld and out cmpl mov sub inc cmpsl scas or cs mov xchg or data16 xlat push dec adc icebp ret sti xchg aad les mov lret ljmp sahf mov dec loope add adc adc xchg mov gs icebp into inc jae lret lret mov mov aas sbb (bad) or cli icebp xor xor outsl ret dec jne mov call pushfw scas out and std mov sub mov add push pop push ljmp push push push mov push xor xchg int pop sahf jl in mov ljmp int jo scas out arpl jo inc mov sub ret and mov dec outsl aad pop popa rorl mov fidiv cmpsb fs popa pop sti or dec or (bad) test fcoml movsb mov stos fnstsw lods popa out and lock push jns insl mov sub (bad) and dec sub imul pop fnstenv pop test aam jmp cs xchg xor decb mov dec dec aaa push inc sub inc mov mov (bad) aaa push and push pop xchg mov fistpll imul hlt inc mov and jns ret jne fnop les xchg in lds out cmc add cmc (bad) popa in out out not loope dec jp test fmuls pusha dec loopne cmpsb jle or insb ja out sbb mov rcrl push jmp loopne (bad) mov adc adc lahf jg xchg push fs xor mov (bad) test jp daa jl inc add mov jl and dec pop mov inc and mov lea and loop leave jns add jge pop xor fwait pusha je mov pop and adc dec and out cld jle lret push adc lcall cmp pop xchg cmp test pop add mov mov js mov jp cmc outsb ret xchg cmp push pop in imul mov ljmp dec loope lcall inc dec sarl aad (bad) cmpsb add nop push pushf mov nop stc out cld push jecxz jno ret push sub inc sub fbstp rcrl test sbb sub das cmpsb int3 fcomps clc or xchg cmpsl push jnp shlb and mov inc movsb pop dec arpl push add jo pop daa and (bad) in cmc fstpl rol inc inc adc xor enter pop loope addr16 adc sbb divb ror gs jnp aas ror icebp ds cltd push popl sbb pop sub dec xchg call push and aad mov mov ja out dec fwait in mov stos mov mov adc in orl ret inc cmp sbb outsb sar push in mov and sbb movsb les cmp negb pushf mov mov sub addr16 cli sbb iret cmpsb std xlat sbb jecxz in sbb xor in cmp sbb call push js bound or dec rclb jno and cltd ss cmp mul or sbb sahf mov (bad) repnz inc outsb adc fisttp insl or jg add jo xchg push out roll xchg iret arpl pop sub hlt push cmpl sub xlat gs xor ficompl enter and cmpl cmp sub mov lret or out mov pushf test inc adc fcompl mov ret inc jge,pt inc sahf cli push fs (bad) xchg mov aam out sti jmp mov lods jbe std sub mov xor xchg mov push jno sub dec loope lret stos add sbb jmp mov xchg or aam arpl (bad) cmpsb jg lds ds popa shlb cmp movsb or mov lea in icebp pop out pop scas out jno (bad) jge xor test les pop (bad) xchg lret sub lahf cmp fbstp in incl add cmpsb sub in popa movsl adc int3 mov insb leave int mov popa dec xchg addr16 pop sbb ret nop push popa mov dec in mov imul cmc jbe faddl sub lahf push test aad adc push arpl insb fstpt inc popa iret adc adc dec setns xor mov adc ret or inc std sub xor fmull sub dec mov stc cli (bad) xor lock add mov and pop xchg leave mov ds dec (bad) (bad) (bad) in rcl mov mov iret jae pop arpl imul cmp test pop (bad) cltd gs fsubrs (bad) dec repz mov cmpsl movsb add das lds jbe cld incb add imul pop out scas and sub or sbb (bad) loop push testl xor jg (bad) aaa pop xchg insb adc cmp (bad) repnz ss int3 push dec es xchg add movsb loopne movsl or adc adc push shrb fsubl (bad) lahf xor outsl test je and in sbb aam scas xor mov mov roll sub and pop insb lret notb cli adc imul out aad or mov imul and repz sbb xchg (bad) test mov gs mov rcl gs data16 aas cli xchg sahf or push insl ljmp and sbb adc cmc mov iret pop outsb adc adc repz push pop outsb pushf or insb enter sub jns call lahf mov inc and divb xchg loope jns cwtl in pop and rorb push (bad) into lahf loope push ret cs xchg (bad) fimul sbb cmpsl push arpl clc mov lret xor push sahf or je les xchg and xchg push divb mov push inc jmp ljmp or fisubr inc fldcw cld movsl adcb fistl add pop pushf (bad) frstor cmc mov ljmp sbb inc lea stc iret push into sbb dec outsl loopne jp mov push sub out arpl enter mov sub outsb sar popf and stos cmpsb hlt cmp adc rcrl pop sub fisttpl xor xor cli testl pop (bad) pop fs pop (bad) or in lret jmp jl (bad) mov loope mov inc out arpl sarl aas adc xchg pushf mov add cmpsl enter sub ds lret stos repnz call (bad) pop pop (bad) mov lock mov add sbb lret (bad) mov and xchg scas mov lea or mov scas push adc xchg pop jmp stc (bad) or jns xchg sahf fnstenv fistl les sbb push sub mov shr sub mov lret dec ljmp pop xlat lahf mov (bad) push push push out cmpsl and jle cmp arpl and (bad) std aaa sub push movsl adc or xor mov fistpl jno or jns add mov jns imul mov cmp pop push lock sbb data16 xor int stos jge clc cmp jnp mov sbb inc xchg pop adc ds adc jo andb daa push scas add test push xchg dec mov mov push xor lcall push sarl loopne add sbb movsb and mov nop push stos xchg rcpps cltd adc loope cwtl sbb loope ficompl into in and fldcw cmp push mov xchg mov and adc push inc data16 pop lret loopne in cmc mov mov jbe sbb ljmp out (bad) mov jge and lds das fwait je xlat popa pop mov mov popf jl jae insl cmp imul fcompl mov test and pop fs movsb mov mov cwtl inc test fldcw aam fnop xchg sub inc sbb (bad) or jb mov sti push aas stos sub jbe (bad) divl fldt pop fwait sbb aad cmpsb stos notb inc sbb xor int3 pop or aaa fs sbb std mov stc stos nop fnop lahf jno xlat or fisttp inc xor xor xor arpl xor fnop pushf out adc adcl mov sub popf ja ja mov mov xchg cmp aam aas loop push cmp push mov daa aad call jle call mov clc imul xor pop insb pusha aam sbb lret push sti imulb mov nop push rclb loopne andb jne mov pop lret loopne mov push (bad) movsl cmp ret adc lahf cmp call (bad) test push imul push and xchg in adc jno xor xor cmp rep pop mov cmpsl push ficomp add jno jns xor cmpsb pop pop je mov iret push cmp int3 and or popa mov jnp mov push mov leave sub mov inc roll hlt ds ds sub xchg es icebp pop xor (bad) mov aad ret dec mov mov pop jnp sbb pop je sbb pop push cmp jne arpl arpl pop stc (bad) jge rcrb nop dec fs orb xor add lds inc cmp je and fcoms and inc mov and sarb pushf popf ret lahf dec pop fwait sub mov imul or jnp sub pop mov cltd dec cmp stos imul dec xchg mov mov negl ror xor (bad) fisubrl fstl dec mov lods or xchg push mov outsb stc jg jp jge (bad) jl aaa mov add sub fcomp lock pop pop dec repnz pushf add jae mov aaa popf shrl insl push jns sbb std sub push outsl scas push xor and loop cs test sub dec push jae lods xor dec sbb push pop (bad) jl xor into sahf sti jg daa and popf cmp mov sub outsb inc dec adc mov xor mov adc and sub sarb push xor inc or pop das icebp pusha adc dec sub das xchg mov push in pushf out daa jmp cmp loope shrb jle hlt push push and cmp jb (bad) pop (bad) jae rorl popf andl int inc xor cmc (bad) testb jmp sbb nop sub sbb inc adc cmpsb mov aam inc dec adc push rolb jle mov cld sti mov das sbb lea xchg pop or push sbb adcl dec jno lcall xchg mov (bad) faddl hlt or cli ljmp adc ljmp and lcall dec mov loopne out push sbb mov mov dec leave inc push mov mov sti jmp cmpsl jp inc popa xchg xor test lahf mov jnp sub pop aas jns adc sbb jo inc movsb data16 mov mov outsb in cmp out mov out lods mov push cmp pop pop push adc (bad) dec jns inc cwtl adc into (bad) test js stos pop cmpsb or fwait mov mov inc pop sbb fst mov dec int movsl jnp xor xor (bad) das sub jnp jnp rorl or cs cmc (bad) repnz lds xor sbb jg leave push adc cmc inc sti test mov xchg cmp inc fistpl inc jae cmp mov dec es stos aam loope nop lds xchg pop mov repz movsb push push jne popf (bad) jbe pop xchg outsb or sti stc js lds mov xchg in pop outsb insl sbb mov pop jmp xchg cmp mov mov fcomp sbb insl leave and stc fwait cmc xchg pop push popa xchg mov ret xor cld inc lret push dec ja ljmp add pop push pop adc mov adc push or sti out adc (bad) lcall testb jno popf imul sbb leave clc pop fstps and jp xor pushf and test das cmpsl int3 ljmp sub cmpsl cltd outsl pop pop pop popf sub les mov dec push dec flds (bad) cmpsb fsubrl mov sbb push (bad) adc xor cltd adc xchg cmpsl xor sub enter lods mov mov mov jbe ja cmc cs (bad) pusha std lret cmpsb bound movsl xchg pop insl scas add iret adc lret icebp shr call loop and pop cmp outsl lret (bad) repz mov jg loopne xor pop xor lret inc leave xchg jnp push pushl jae (bad) lret data16 cmp mov jmp cmp adc push (bad) sti push push iret push jmp adc icebp nop flds les sbb or inc lock mulps dec push dec and pop jg pushf test jbe lods inc rcrb pop jl (bad) adc in xchg inc pop mov sub inc add jb je andl add scas dec mov xchg pop sub cmp ret dec stos inc jnp shr mov mov push fiaddl push jns (bad) cmpb sbb dec out xchg shll add mov and lret jecxz (bad) xor adc pop push shrl aaa inc pushf fmull pop faddp movsl xlat mov iret les adcb add (bad) aam gs cmp add or insb out mov and aam mov jne xchg std sub (bad) hlt jp dec push or sbb lcall int3 or mov sub sub out adc in aad fldt or xchg shll bound lds mov mov inc dec iret inc xor dec sbb push add rolb pop gs frstor aaa (bad) mov stos dec into ljmp or push repnz and xor les xlat (bad) in movsb xor cmp das (bad) (bad) (bad) sti add dec xchg xchg sbb and or das mul adc pusha push das mov mov (bad) rorl jmp nop and cmp lret cmp push push xchg pop call loope rcl pop cwtl jge insl push imul into jno insb xor ja pop dec dec fucomip lret loop dec je imul push add push jp and stos or jne adc push gs mov jge cmpsb in cmp or sbb push xchg push outsb das repnz mov xchg cmp stos addl pop cmp shlb ljmp mov les lods outsb xchg push movl push loopne add xor fs test or js imul inc data16 adc lods test push push cmp roll mov popf push xchg (bad) cmc sahf push pop stos and inc fistp andb lret jge js and jp shrl (bad) in cmp sbb cmpsl xor and fiaddl aam mov addl xchg dec push xchg pusha jno xorb mov sti mov xchg sbb pop push stos and aam scas jnp xlat pop adc or cmpsl popf mov ds sub lret fisubl adc sbb je jl stos xor mov int cmpsb lahf cltd add add fs daa movsl repnz add pop xchg (bad) pop push mov sbb into adc sbb mov xchg loopne mov das lret je (bad) inc je sub ds popa inc jae and sbb stos mov inc inc inc adc call and and cmpsl add pop sahf or push arpl divb inc lods adc inc (bad) cmpsl faddl mov sub inc mov (bad) jo push add pop push insl idivl addr16 inc aad cli scas mov stc rcrb pop (bad) xorl sti mov je and cli clc push repz push or jl rcr mov lock add out jge fwait sub sahf test jge and outsl inc cmpsb xlat fcmovne dec mulb inc loop hlt js pop icebp push std std inc push sub dec xor or mov mov pop punpckhbw jmp aam pop imul jns (bad) rol xorb icebp aas aas aad xchg (bad) shl push stc push push shr addr16 (bad) jb cli loopne mov jns jb jno and cmp cmpsb and mov ljmp call dec out pop int in daa xor (bad) hlt outsb fwait mov xor push xchg sti gs adc aas mov stos jns scas (bad) call mov jns dec mov jno mov daa fistp jno mov add mov dec fdivrp jns fwait or iret addb fmuls sub sbb and (bad) mov fild pusha fcoml jns cmp jmp nop data16 aaa mov paddb or andl adc and out popa xchg fwait iret adc adc aad jp dec xlat sbb pop pop iret lcall inc push jp adc clc add fsubp dec mov sub dec push sbb jae in int add pop adc loope dec sub out aas pop sub fadds fs insb cmp pop ja test sub or or in fwait and add sub test pop loopne pop jae (bad) pop cltd xchg (bad) xor jecxz add ja mov in out mov les (bad) jae push rcrb scas xchg mov pop mov cmp sbb add or xchg jmp dec stc gs inc inc or jge fcompl aad ss xchg xor pop mov fcomip fisttpll or imul sbb clc cmp clc sbb stos pusha xor adc push xor or ljmp aas dec cli cmp rcr or xchg inc xchg lods push add sub and lock cld lahf (bad) lgs incl jns sub cltd repz cmp push lods out fildl xlat imul hlt fimul or lret dec addr16 pop enter mov xor stos rorb aad adc movsb push cmp cmp lcall xor push cmpsb and adc jb sbb loopne mov and cmpsl adc inc inc dec xchg push jg ljmp xchg push dec insb xchg in je cli xchg rcl dec mov pop push fwait push call mov fisubl out rcrb scas ljmp jno mov dec and hlt fwait (bad) loope sub fdiv ja and in pop cmp and aad arpl das jmp lret adc mov mov push outsl gs inc lret int3 call or inc dec in push pop xchg pop jmp subl imul pop int3 xchg adc fwait mov jmp test dec lds ss sub icebp jne cmc mov enter gs clc in jle push mov lret or dec (bad) mov loop pop negb scas pushf cld add shlb icebp sti xchg addl xor dec sbb sarl sub adc mov push adc xchg int3 test sbb dec out dec iret or test mov cmpsb mov lcall ds cli or scas jae fucomp dec sub mov push lahf scas xor enter movsb xor loopne imul loope mov sahf sbb pop lds lods xchg outsb sarb inc push mov jnp jo ds or pop insb pop mov or sbb mov mov mov lods or mov outsb sub or popf sbb add int3 das adc xchg push inc jp push test aam dec mov repz and pop mov pop jle rcll aam xor ret in movsb pop cwtl (bad) (bad) gs sub (bad) jne rcrl cmpsb xorl mov and sti dec test or mov dec mov sbb pop or or jle mov jmp ja xchg fsts mov jno dec (bad) or ss call inc imul push pushf dec pop push pushf mov cmpsl push jle les xchg in jmp ljmp adc movsl int3 push or sub ret push jg rcrb outsl fldt mov outsl push cmp fwait mov mov cmp inc call ficompl aam nop stos add outsl xor add popa cmpsb in mov (bad) jmp repz ret ss icebp (bad) js push adc inc insb push jge jbe dec scas mov jle xor in xchg cmpsb (bad) repz inc xchg sar adc lret cmpsb push loope lods mov sbb in push lods push nop or rorb mov pushf sub or mov ja mov cmp jmp fisttpl (bad) jo (bad) mov sub mov dec not push pop jge mov mull hlt out pusha mov xor lods mov push pusha pop out xchg mov push sub mov adc fwait mov jno mov mov frstor fildl or cld dec jbe sti push int3 pop jae pop mov add sub jb xchg lcall scas mov ss imul aam and jnp cltd scas sbb les in add insl adc mov xor and dec and pop bound and xor clc loop xchg fsubrl int3 lahf jge or and in xchg sahf loope inc (bad) push mov call sub push cli mov push mov mov xor inc jne lahf fildll ret push sbb insl fiaddl lds imul mov lock (bad) in scas flds test cmp lahf dec pop push sti xchg stc loopne cli inc sub inc insl inc bound addr16 xor rorl pop scas pop out xchg adc ret cmpsl cmpsl js adc mov jmp push into jl loope pop pushf or insb sub lock lea loop call gs mov push js mov cmp jb lods push cmp insb push sahf lods xor into mov sub lret and jecxz cmp (bad) mov lret pusha int repz inc ret in mov cli pop ja sbb sub sti dec push xor fiadd dec int rorb cmp mov or or cs and repnz mov ljmp ret xor out push adc mov int3 clc jnp add xlat sbb jp push stos inc aaa (bad) repnz adc mov rcrl fs fwait sbb xchg jmp shr loope add loopne movsl data16 bound xchg push mov mov mov mov xchg and mov repz std outsl push and je xchg jg scas pusha inc adc add in fnstcw out fnstcw and lock inc je and insb sbb js sbb movd cmp mov adc out xchg push fidivl pop pusha mov push dec adc bnd mov mov pop jns cmp pop les stos lret stos (bad) aam out lds cmp and inc sarb neg stc sbb xchg inc mov popa insb inc inc push push and mov lock ss ljmp jbe js fidivl dec sahf shrb out fs jns xchg jae test es xchg adc lods rcrb inc (bad) les jns rorl and es jecxz mov jecxz cmp jne rcll sbb push insl inc cmpsb es fwait sti xchg data16 into inc jmp and inc push push int3 cmpsl lahf notl ss and pop pusha cmc (bad) lods jns xor repnz test xlat repz cli inc mov sbb xchg jmp adc imul and sbb in fsubrl jmp ror add dec pop fldenv mov (bad) fistl mov ret fdiv and mov inc ja repz (bad) lock add jge push and scas loopne inc dec fs jge pop lods xchg outsl (bad) mov cmpsb mov or popf js push sarb mull push js mov dec jg insb adcl jl add xor inc pop sbb jo mov mov (bad) test (bad) fbstp mov inc or push cmp sbb dec dec hlt idiv xor jmp push in leave jno std jno in adc insl xchg pop popa add (bad) clc adc or mov inc mov ret sti push push das ret cmp jg je mov sbb or pop sbb loope inc jle jmp mov popf pop faddl outsb adc out mov xor push aas or pushf icebp mov push jb push int3 jp cmp and mov int3 pop pop and das push sub test andl mov lahf jge ret adc mov xchg mov mov cltd popf push push xor push jmp mov leave stc pop sbb add cld fimull movsb mov inc lea pop nop pop (bad) cmp in pop xor notb out fcoml das ror (bad) test mov jnp cwtl sbb sbb adc or lcall mov dec push push or mov mov stos std and rorb movsl adc jmp aaa pop test cmp das jg xchg scas testl and call das sub push in jae roll and pop mov push jp jnp cld les es cld sti or mov stos imul (bad) mov fidiv add jmp arpl inc xor pop xor sub in lods mov test xchg and add cmp scas jmp loop cmp clc jno push add lock push lret loop pop mov sbb mov fisubl xchg pop pop mov sahf fidivrl cld scas (bad) ret aam sub pushf mov lods out xchg (bad) and and (bad) xchg repz mov or mov cld xor adc inc testl cmp pop cld loop sbb aas leave add test (bad) js pop cs lods cmp sub rorb add dec sbb push lret gs rclb rcrl hlt adcl roll fisttpl mov (bad) aaa faddp cli imul lds nop psubb pop push add mov shll js push pusha push fist (bad) cltd dec xchg (bad) fcoml loope (bad) mov xor shrl push xchg pop inc std insb jno es test or adc dec sbb in (bad) in fptan inc xor sbb std add cmc xchg mov or adc lret push jne test fildll jbe fidiv sub xlat mov insb (bad) psubusw ja sbb add divl add cwtl add test cmpsb adc mov loopne sub dec push mov inc sbb call lock pushf gs adc inc adc test lods jne mov xchg sub mov dec xor push sub movsl pop cmpsl stc not add icebp inc sub stos cmp dec out jae ja inc mov push cmpb add cli sbb gs daa insl cmp imulb insl pushf adc pop fcmove icebp clc and sub or mov push pop and ja pop cmc pop xor and xchg xchg inc adc xor or lcall mov jmp fwait ret push lret mov jl or shll push int pop sub lods lods adc push sub clc outsb daa and push (bad) dec inc notl xchg cmpsl add adc (bad) hlt push loope je frstor xchg sbb mov sub int mov push popa sub sbb (bad) aaa push cwtl pop sbb pop sarb sub sbb sbb test loopne iret mov dec fisub into sti inc ret sub jne clc test ret mov in jge mov ljmp or cmp xor jnp pop rep pop jo inc fldenv push fwait or lea pop loop scas (bad) ss adc cmp jbe data16 xor xchg add sbb push mov adc imul xchg cmp das cltd ljmp fldl shl scas jns fmuls xor and and adc inc cmp xor scas xchg fnsave pop ja dec sub js fwait add xchg mov dec cs loop push icebp in pop cmp and cmp mov cltd mov jp jno jbe dec idiv rcrb sub fmuls fisubl or cli and push xor adc sbb repnz aad cmpsb imul jb push (bad) cmpl adc es movsb xchg enter mov sbb faddl dec clc out sahf inc ret adc popf fisttpl jle push push dec adc mov adc test icebp adc data16 jecxz dec xchg shl add xchg sub arpl xchg imulb lret pop es sub in in rclb pop dec pushf add lahf xchg into iret repnz xor pushl mov andl movl or jl pop pop push iret sarb lcall bound jns pop imulb loopne sarb roll cmp mov xor lods push das and dec push iret cld (bad) mov inc addr16 ret addl pop jmp in cmc cmp jb inc aam lcall xchg mov ret mov inc adc adc jecxz pop and mov jne mov stc push mov push (bad) sub inc xchg fldcw inc call les sbb lods push stc lahf (bad) (bad) bnd or xchg cs add (bad) mov push loope xor jno xchg inc enter push push adc push pusha jle jle sarl inc pop inc inc mov sub hlt fdiv adcb dec lods rol pusha sub aaa in fbld sub popf enter xor cmp adc (bad) jno scas cmpsl out jge cmp sub arpl mov cmp mov pop fdivrs push sahf loop pop faddl into mov les and enter jg jnp (bad) lock imul add daa and test adc sbb in jmp jnp stc cmp add sbb daa push loop clc sbb cmpsb js and std pop cmpl rcll jmp jecxz cmpl jb fisubr insl imul andb dec push loopne jno clc leave add shll pop and xor xor nop sub mov jae add push fildl add lahf pop inc dec lea shrl shll mov push add push mov jge pop xchg out fldt (bad) sub es add cmp fiadd cmpsb (bad) outsb mov xchg dec mov jo fiaddl and frstor or and mov ret lea mov inc push cmp push push push jo jge and add mov lods fs cmp mov outsb and adc in std pop scas pop ret mov mov js fs mov cwtl mov lods dec dec or xchg sub mov mov in das scas lock push xor mov mov mov stos movsb and icebp xor fsubrp cmp leave je jne jp xor xor js sbb adc int mov mov cmp push mov repnz movsb sbb sub sbb cmp jmp push (bad) out push or into dec (bad) sti jmp cwtl push arpl or aam sbb fisub mov fwait cwtl jno pop das push fxch push sub mov loope dec test xchg pop pop js pop mov cmc scas js in std mov mov mov imul popa test jno (bad) movsl in mov adc aaa es add repnz or inc and mov popa mov popa aas jb icebp and add adc mov movsl xor adc test sbb (bad) shrb mov mov repnz dec outsl mov mov jecxz int push sub inc jnp mov repnz mov cmpsl rcr xchg jmp mov cmp add or (bad) adc scas xlat cmp xchg add or sub (bad) ljmp shlb negb lods xchg inc insb mov mov int3 or test mov pop cmpsb jne push dec imul add stos out push leave cmpsl mov jl adc sahf popa jg enter dec out imul and test xchg mov inc push rolw mov or je loope sbb jecxz mov cmc pop xorb out (bad) repnz mov sub mov push xor les add jg stos mov das sbb xchg lcall jo jnp inc loope inc pop je divl sti call sub ds cmp mov insl sub xchg add stc aaa xchg pop rcll jns jbe sub imul fwait xor sub sub jns cmp mov lret insb push add (bad) cmp out mov ret and jg push mov mov lahf ret jno test cmp pusha rcl lds ss dec mov into xchg fwait (bad) and cltd dec jnp push addr16 leave adc negb jp mov sbb jne sahf add xlat xor mov enter icebp mov gs mov adc stc mov (bad) scas add xor jg and pop dec cmp (bad) dec xor pushf out add cmpsb jo adc mov mov dec jge lea mov pop in jno add in push je mov add rcrl dec mov mov pop shlb fldl sbb jb adc ja adc data16 mov std repnz inc xor cmp push push pop addl dec cmp cmp and jns inc jmp loope fwait or mov rol adc cmp mov and inc mov out and xor into je outsl les adc mov mov loopne (bad) aaa bound or call pop add mov adc push push popf int3 js push inc jecxz das inc jae loopne mov jno sub inc ret add push jecxz pop dec cmp (bad) sar packuswb sbb mov push fmul aam jg xchg add iret lret jo outsb call mov xchg pop test mov jo (bad) in sti arpl int3 mov xor mov adc in lcall (bad) hlt aaa pop add loopne lret cmp jb inc out push scas add dec mov outsl aad scas and xchg add fwait inc mov lods pop mov stos pop sub test iret nop fldenv cmp scas xorl das int3 je fwait pop fiadd mov lea orl ja in (bad) lcall inc repz mov push pusha push shlb mov dec and in and aad sub xchg (bad) sti mov mov js mov sub (bad) dec cmp jp ja adc or mov xor cmp jb pushf cmp clc jl test mov mov ficompl pop add pop mov seta pop dec mov ljmp hlt or int (bad) xchg scas rcrl dec icebp xor add mov arpl inc loope out pop cs xor jne lock sbb test and or ljmp fildll pop lock push jmp popf daa adc (bad) leave cmp mov xchg pusha add add xchg mov cmp xchg aaa outsl cs divb popa hlt lods jl mov stos fnstsw lret fdivrs enter xchg and adc mov imul in out adc mov fistpl fistpl lret movsl ret pop fsubrs adc mov je push leave push xchg add xchg cltd dec inc inc testl jmp int3 inc std xchg inc cmp adc fcompl lods mov (bad) mov mov sbb add jo xorl std push inc and repz insb adc sub (bad) and popf pop adc (bad) inc lea cld lret (bad) out ror loope sbb dec hlt scas cltd clc lds add sbb popf mov in repz lcall sub int3 push push mov xchg jae xor push cmp outsb test movsb aaa stos in cmp and xlat push nop mov vpsubb (bad) cmp mov clc or mov dec pop inc inc jb sarb add fbstp mov ss jmp ret hlt das jg xor adcl adc jbe enter mov fmuls mov lods jno test fsubrl dec push das ret sbb iret xchg aam mov int movsl pop xor sbbl ficomp (bad) in rolb insb mov xor loopne pop popa pop xchg jg sbb xchg sbbl adc xchg gs jle dec jg and or lds outsl test mov pop add test sbbl es sbb push fidivl adc (bad) inc lahf ret negl popf shll fwait sub popa into sbb add add sub movsl xor hlt jge (bad) mov push lahf push out inc test cmp nop sub jb cmpsb push add push adc into arpl aas mov sub or std sub loope push mov push shr mov sbb and mov inc xor cmovg and int push sbb cwtl insl ja das and mov ljmp in bound fadd int mov inc cltd mov scas cmpsb jns,pt call and mov push inc mov add (bad) jl leave pop js xor cmc aas loop adc cmpsl sahf scas sarb into xchg loop mov push hlt add or pop mov test addb movb ljmp sarl xchg (bad) jne int and (bad) pop out dec repnz ret andl fimul cmpsl mov mov inc lret movsl aaa push adc fxch xchg jae mov dec jo cltd jmp iret fs loopne jne sub sub xor leave mov (bad) scas in adcl xchg push ljmp js xchg add cld notl scas ror sti xchg flds inc xchg sub and inc sub in ljmp and push push lods pop jne and mov out int3 leave nop dec in call push sub in rcl repz rol jb xchg dec mov fcmove pop idivb lods dec cmp cmp stos jecxz push enter out pop sbb fwait test pop dec cmpsl push xor sbb xor fldcw sbb push cmp pop outsb int insl dec lods scas lds call adc ss jecxz ror sbb dec inc in imulb subps negl fdivs enter outsb cs push call and add test and jmp jbe adc test stos jmp mov or fwait sub repnz mov mov push inc orl ret pop js insb test ja or xchg fidivrl (bad) xchg xchg cmpsl out and push mov fldenv stc sub sbb int3 sbb mov outsl aaa faddl sbb inc mov dec inc mov gs and push mov and mov adc jecxz jge movsb fildll mov sub xchg testb lret add xchg inc js fstpl addr16 sub xcrypt-cfb cmpsl movsb dec pusha mov jl mov inc ss popf popf sbb jne jno (bad) ss and js cmpsb fwait sbb or sbb sub jne mov xor mov xchg jp xchg or dec nop data16 add adc jnp test dec cwtl cmpsl out lcall outsb or cmpsb addr16 sbb lret inc push jge adc add jae repz mov xchg and scas mov push mov sbb leave fldenv inc in ja movsb push and and sbb (bad) in mov cmpsb jo adc (bad) fwait mov (bad) mov mov loope lods in rcll into outsl cmp or aam jns jle hlt mov jne push mov stos push movsl jnp les fucom (bad) or bound pop xlat jg fchs cmp rcl jnp dec pop repnz mov dec jae sub or sbb addr16 in push add shrl push fs mov xor fwait add sarl leave loopne inc add adc icebp dec stos int mov sbb addr16 push inc push xchg dec in mov jnp adc jmp mov repnz stos mov loopne xor cld hlt and pop shlb xor mov pop and fdivrs pop xchg daa cs insl loopne xchg jmp xchg xlat mov cmp and stc fld std mov insl mov adc xchg push xor dec mov (bad) push insb pusha and mov (bad) call ret cmp pushf in jae out lret movsl outsl outsl xor arpl imul sbb mov mov mov (bad) lahf adc ja adc ret fisttpl dec icebp mov pop xchg sub push hlt adc cmp or cmpsb leave hlt xchg fcoml pop int jns mov mov bound mov mov pop inc inc test cmp xlat or mov pop lcall xchg enter mov or insl fmul mov cmp popf inc sbb inc aad clc das push mov inc stc lods js add dec cmp sbb insb mov out std push addr16 daa les xchg inc test dec and frstor int data16 aaa mov xchg sub push push fisttpl movsb inc sub push pop jmp imul gs sub lret pop (bad) dec and mov mov add daa mov push mov fildl inc out pop dec (bad) jmp arpl xchg mov in add insb stos dec push (bad) pop (bad) dec add icebp movsb jns add daa dec sbb imul push ja sar xor rcrl add daa mov pop dec jecxz push mov sbb lea mov xchg xor adcb popa iret bound push cmpsl sub sub push fildll pop das pop mov xchg mov push scas sub xorb mov mov inc jne cld lock mov and xor cltd dec lret aas leave jne clc pop imul out gs pop mov xor jp inc out or xor xor pushf xor sub push fiaddl xchg cli adc dec and int out shlb push iret dec push cltd and adc pop aas adc mov rorb (bad) mov in cwtl insl push dec or or or mov jno sti mov mov notb jne mov cmp pusha mov cmpsl in adcb fwait lods pop push dec dec push and ljmp test xor jg sbb xor mov cmp push fwait push imul fcmovb inc mov or insl adc jbe push in xchg ss adc add and pop rcrl lods repnz int3 inc stos sub mov repnz gs jnp das or test mov outsl pop xchg pop mov push imul and xor sar push xor sti sbb xchg mov ret pop movsb hlt add xor mov mov call lahf add shll cwtl movsb call pop shll dec mov inc jl decl movsb lods lea out lds movmskps mov push inc pop test xor ret add outsb cmpsl outsl dec hlt outsl pop mov addl sbb iret repnz adc decl jne inc das mov out fcmovnbe or inc test pop hlt sbbl jb mov xor stos (bad) rcrl clc std push xlat (bad) push call dec inc scas sti jmp cmp std or mov add fidivr xor cmpsb (bad) xor dec cmpsl popf test adc mov lcall push std mov or roll leave inc xlat daa loope mov xchg cmp fdivp lret sahf test fdivl mov daa add jmp imulb adc ljmp cmc outsb jns or cmc xorb and jge xchg test mov sbb or and xor mov sub lock fmull and push pop or testl cmp jge adc lahf (bad) in or mov movsl lret and push sahf and fildll dec xor clc mov xor or out mul (bad) lret (bad) ror outsb push jne push insl jp and cmpsl cmp pop fcmovu lds lcall inc repnz imul add shrb sub in hlt pushf call and add dec push sub (bad) fsubrl or ret ss add pop shrl jb pop mov jge jge repz es sub or mov inc xor cmpsl sahf push inc pop adc je scas ljmp scas lea dec roll mov xchg push mov sti dec xchg xor sbb sbb fdivrs (bad) and cmp cmp add dec mov mov mov mov stos pop mov test lahf mov scas sbb dec mov jo in pusha pop pop jae pop xchg mov sbb and nop fidivr pop movl int xchg (bad) mov and pop mov test rolb in icebp and mov (bad) cmc popf aad mov int3 mov add mov cli sub jns push ret ljmp movsb xor stos push xlat iret inc and add outsl pop ljmp out mov xchg inc mov (bad) inc jnp out adc sub movb xor xchg cmp adc loop jns ret lea in or push test and sub and sti test adc call xor rolb (bad) jae fucom push cmpsl add pop mov add test scas jae xchg inc repz jns arpl push inc pop add lock xchg call lcall dec inc pop fidiv dec ds or pushf cwtl inc or xchg daa xchg cmc xchg stos pavgb pop bound popf and cld inc jno cs push ret sub sbb dec out jae xchg add push adc push movsb add and sub arpl rcrl out (bad) pop add dec mov iret add cmp jno xchg je and clc or xchg inc imul xor stc push mov pop fs cwtl and pushf scas and icebp xchg movsb sarb push movsb add mov es xchg dec mov add sub sahf mov out adcl (bad) sub jge sub cmp xor into pusha scas int repz mov shr int iret pop into jne repnz jge (bad) popa bound inc jmp jg pop inc push data16 addb mov ja leave out add stc cmp push outsb push or cld outsl cmp jl inc rclb es dec fldl pop sarl mov and pop sub (bad) das jnp and xchg mov adc mov add repnz push (bad) mov add fidivl (bad) je es lret pushf jp or ja add cmpsb ss out pop mov test dec xchg mov dec dec fimull mov dec ljmp lods xchg lods inc (bad) fnsave sbb repz jb outsl pop dec inc and push mov lahf cmc jl rolb fsub cltd dec cmp popf or insl imul push inc idiv xchg shl xchg (bad) repnz xchg in imul push lret roll cmp fidiv hlt test lcall mov lret hlt jno clc dec fs xchg int addr16 fisubr mov jbe xor push jne jae push (bad) xor arpl and data16 mov jae or in lret bnd or fld sub mov gs loopne (bad) aaa push je and enter lea bound test pop js lods (bad) mov call loope mov add dec ret repnz inc out mov mov ret cltd inc push push push push sbb add adc inc out dec lea push cmp imul or ret xchg dec iret cmp mov xor pop test lret enter pop dec outsl rol xor push jecxz ss lcall and push mov push mov sahf cmp or je out mov je std inc int3 (bad) cmp and (bad) inc hlt and add loopne dec nop fisubl mov jg mov sbb std mov pop jae mov push data16 cmp xchg arpl add mov int aaa push ljmp jb adc sarl adc mov div add lods fistp jbe dec cmpsl jne (bad) dec push sahf add cs jl push cmp int3 pop stos test (bad) mov pop or mov adc lret loope mov mov or and fnstenv xchg nop mov mov xchg movsl lret xor test adc sbb pushf imul popl fisubrl aad jle jg dec outsl test aaa sub cmc sbb sbb push (bad) (bad) jle xlat mov ret xchg das xor (bad) repz xor adc outsb jge jmp pop fcomip xor (bad) push push out gs sarb sahf sub leave dec sub dec mov iret les pop lds mov ja sub xor jg popf push xor cmpsb mov fwait inc (bad) mov mov movsb xchg mov adc outsb or ret adc clc imul lret or mov repnz or aas inc clc js add dec push xchg pop xchg imul mov cld mov int3 iret dec in addl (bad) jg cmp jae push sahf adc cltd imul xor ja push jo scas fidivrl push lret notb and icebp adc pop add cld (bad) mov aaa cmp fiadd pslld lods sbb dec mov rcl out lret pop mov scas jmp fidivrl enter test mov fistl or dec inc fsubrl andl jge (bad) cmpsl adc data16 pop and pop push (bad) dec gs andl add ret push push (bad) fnsave cmc push pop jle std rcll xchg cmc push addl into cmp mov mov mov stos mov lds adc dec cs dec rorb insl xor xchg cmpsl (bad) andl scas iret icebp and dec inc imul int loopne push xor and rclb sub adc fisubr pop fmull xchg add dec fwait repnz insb and mov pop sbb mov stos jecxz jae cmp addr16 fldenv cmp lret cld sarb fldl (bad) insl enter xor (bad) cmp lahf aas add ss gs jge and rcll test sbb mov mov sbbl pop mov or push notl or push rclb adc mov rcrl push pop inc mov push mov pusha adc sahf sub in add add stc data16 sar jg mov mov js hlt (bad) sub adc xchg jne cmp mov popf sub fcomip ds loop shr dec pop lret dec dec push aaa sahf xchg fildl fcmovu ds mov add (bad) in inc xchg xor and in sbb fidivl sbb ds add xchg mov pop shll icebp arpl mov xchg lcall add xchg out hlt mov mov and xchg and or (bad) dec add push jp mov (bad) psadbw jecxz pushf mov add jb mov or add xchg mov (bad) pop cli sbb jnp (bad) scas mov fiaddl or outsl push int3 out dec xlat insl lods dec cmp sbb xchg in xchg dec test aam mov fwait mov xor add sub or push mov xchg das add outsb cmpsl shrb in mov adc bound and int dec sbb cmp lea mov scas addr16 (bad) mov cmpsb cmp and pop imul fs dec mov jmp aad push insl fucomip cmp (bad) xchg xchg in fsubr and cs es jno push dec aam icebp pop je jl pop mov data16 aas (bad) push fs test push out pop adc fnstsw popa fldpi div and jnp push cmp into push push mov jmp jecxz xchg xor rolb subl sbb inc and cmp lds rolb clc mov enter sbb xchg fsubs jb adc push xchg into adc (bad) jae sbb mov inc sbb popa xor loop xchg xor sub inc inc dec sti mov pushf adc out pop add ficomp stos mov push pop dec int3 pop sbb call frstor mov add ret and mov lret shr xchg mov imul sbb ja pop ljmp lret fnstcw repz pop mov mov mov adc out in stc outsl xor dec add leave ret shrl aas ret jg adc popa (bad) sub and cmp inc movsl dec fsubrp or push outsb and or xchg popf jmp repnz mov jnp sbb xchg lret ss sub sbb rorb and lsl mov and mov (bad) or dec push jl lret out jno int xchg fstpl push cmp cmpxchg hlt push xor jl cmp in xchg push jne test or jp adc into aad xchg dec xchg and mov repnz lods and test cmpl cld (bad) mov mov lcall adc mov pop dec imul sbb fidivl mov shrb push bound leave xchg les mov jbe js ja dec and xor fwait dec lods xor repz xlat jne or mov xor jbe bound push (bad) xor mov or push leave gs pop jl cmp (bad) lret dec lret sbb out movsl (bad) jecxz pop mov hlt sub fidivrl icebp stc add imul xchg cmc fs jge (bad) aad cmp xchg (bad) clc sbb add lds pop stc cmc cmp pop and sbb (bad) mov es adc dec hlt add cmc jo cmpl fucomp ret sbb in cmc out jmp roll push stos sub cmp sbb lods pop xor push ss jno lahf fdiv int3 push jge or xchg test inc pop or das rorl test inc icebp jnp out mov enter outsl ret jl jnp adc (bad) sbb sub and jbe fidivrl sbb xchg gs sub cmpsl arpl push out mov dec bnd xor add push pop in adc gs enter inc and (bad) out pusha test and mov mov addr16 push and nop jns sbb cmp test (bad) icebp dec (bad) jbe sbbl mov xchg lock push lcallw jmp std leavew fcomps jmp je es xor adc pop xor or lods pusha vpunpcklbw sbb loopne mov jnp and mov adc mov sarl add and add dec sbb aad insb cld dec jno cmp clc add shr fwait sub stc sbb lods rcl cmp fcomip push push inc std push xor mov xor inc pop (bad) movsl push xchg cld jl or inc push cwtl inc cmpl pcmpeqd dec fs inc jl mov push inc mov aas adc add mov xor (bad) ja and outsl dec xor shll incb call dec dec pop (bad) xchg lods jnp mov jno int3 mov and add mov lods jl out jne push cs cmp outsl adc dec js mov dec inc cmpl aaa fnsave and hlt mov outsb cmp xchg into adc movsb pop cmp push outsl cmp icebp lods lods shl and jecxz fs mov or imul and ja arpl outsb pop sub sub push lods int3 cmpsb xor lahf jbe ja mov decl cmp xor dec mov push aam out jl stos dec aas mov sub int jns scas jae xor (bad) mov add push in push imul sub sub sbb jae stos imul cmp sarl or xchg push xor sbb pop push jo,pt xor adc jne popf mov push test push aas mov stc jle or cs iret jmp fsubrl addr16 jg roll negb jecxz xor cltd mov cli jl fnstsw add dec nop into (bad) sub in adc (bad) mov fidiv xchg add cmp fadd fcompl repz in aam xchg and push xchg lods adc pop leave sahf cmp push imul jl or int (bad) ljmp xor es fildl cli pop ljmp into jno mov scas shrl jl (bad) imul inc mov mov call std add jae cmp iret incl xchg bnd in pop add pop inc sub dec mov push int3 jnp in mov mov das add fidivl mov outsl es xor mov sbb data16 dec dec mov xchg cmpsl jmp (bad) inc or cmpsl popa cli jne int pop (bad) sbb mov fdivr inc cli bound loop pop shrb push sub test sar cmp xchg lcall loope and xchg ja stos sarb lods xor jmp sar lahf inc mov cltd sub movsb dec popa mov or mulb xchg les xor push pop stos xchg (bad) pop mov hlt sbb imul lock outsb fiadd lret mov outsl sahf pop dec scas xlat lods outsb cld sub shll (bad) clc adc mov xchg les jbe imul clc lahf mov sub std stc icebp data16 dec inc mov mov cmp adc out push add xchg sbb pop pop je enter push lods add and inc xorl jns push out aaa mov int pop out add (bad) fidivr test cmp orl js scas lds or xchg (bad) (bad) push push mov test jl dec pop xchg int outsb repz outsl in lea push ret aaa out aad sub sub pop add push les xchg sub mov dec adc cmpsl fistl jmp int inc jnp mov jno clc add daa or inc sub xchg jbe jle pop jle out subl js fsubr jmp mov nop sub fwait into push push jmp popf jge xchg fs xchg add push pop add pop cli ret jbe xor mov fs hlt adc movsl imul iret mov pop js out xlat (bad) (bad) sub and sub jle es out add adc out sub adc hlt pop call lods mov mov or and add imul int inc imul das inc (bad) in and lea mov push mov adc push dec or and jmp inc cmp push mov movsb cwtl jnp rorl fnop inc fdivrs jo stc jp outsb bound mov cltd decl out mov negb adc dec mov inc (bad) pop push cmp xor scas sub and popa dec pop cs inc sbb mov sbb cmpsb or xchg or movl arpl out (bad) mov jo ljmp mov (bad) fcoms fiadd (bad) jge imull sub fsubrs cmp push xor and in test fsubrl in (bad) stc stos or pop or scas xor dec cld imull mov pop loopne (bad) pop sub push les scas adc cmpsb mov test ds outsl jnp nop mov and and stos sbb aaa inc sahf dec adc dec (bad) loop push nop ljmp jb or mov lret sub fs jb subl mov stos sub scas je pop push add rcrl add lahf test lcall inc dec and insb into clc and or cmp jecxz rorb sarl dec fcomps mov mov test jmp xor vpsubb popf push mov inc cmp ja inc in mov inc add js in jle das inc and inc (bad) fnstsw cmp (bad) aas sbb cmpsl hlt mov dec or loop jge sarl push mov (bad) xlat mov cmpsl loopne xchg jmp enter jo and sub xchg jo pop mov inc cltd aad jae in (bad) mov addl ds dec sbb test fnstsw (bad) jno dec adc push inc and jmp rorl adc jae int or inc mov cmc out nop xchg push xchg inc jo sub mov js movsl jb fwait popa ss xor and xchg mov je divb and cli int3 pop lret addb cmp je pop daa mov xchg bsr fmulp mov (bad) jl mov test fnstenv mov out or mov addl and pop repz sbb jmp rorb dec mov push scas imul (bad) fs sar push inc jae int3 fildll sub cld xchg aas and add lock dec add mov mov test dec dec scas add or or loopne push lret fdivrs jg scas call loopne cltd xchg mov inc in pushf jo loopne shl cmp jno sbb loop frstor jle clc ret fsts and cmp sub daa cs sbbl aad ficoml add cmpsl sbb xor xor xchg push jp (bad) xchg mov jno ret outsl (bad) imul (bad) mov xor fwait jg out sub sbb repnz pop xor (bad) sub cmpsb stos (bad) add adc inc push fwait int3 jb mov aam xor (bad) sbb in into pop (bad) xor xor push push mov mov jg dec dec mov pop es std xchg or pop pusha xchg cmp aam sbb sub or (bad) in mov (bad) testb or imul frstor lahf xchg aam xchg mov (bad) mov addr16 popa aam ljmp daa dec pop inc lock inc mov jl inc fdiv or leave cltd xchg cmc mov scas ret in loopne xor (bad) mov xor pusha or inc arpl aad xor add cld repnz in lods fwait xor outsl lahf mov out bound fstl pusha iret inc push gs nop dec jecxz pop and mov ja adc xchg mov pushw movsb ds rorb rol popa repz jl aad jp pop lds mov pushl jns lods or mov cld sub popf mov mov leave (bad) loop stos sub mov or pop and aad aam fisub negl xor dec mov outsb lret lods loop lds cmc sbb or push (bad) (bad) pop sub sbb movsb loop es xor arpl test popl mov sti push adc icebp jns call push inc sub xchg dec xor cmp mov mov lahf dec xchg (bad) lahf pop add and jne lods sub push mov pop aas das ja push pop xchg in iret addl adc fdivrl and mov (bad) mov xchg mov adc or ret push jne aam loop outsb mov in push test and jo cmp dec (bad) mov mov les imul push sbb (bad) stos lcall jmp pop lahf imul push mov les cmp or xchg (bad) xchg lahf ret mov mov adc (bad) inc stos out fisub adc cmp cmpsl xchg test ret jge fdivrs mov lcall xor push imul jecxz mov out mov sub push sti int3 (bad) stos jb dec adc fsubl sub pop repnz sub dec aas lahf mov adcl inc pop xor cmp cs sub outsb mov push mov or or aas cs pop fcmovne rol nop inc inc pusha nop cmp sarb push xor xor inc aaa fwait mov roll cmp dec ret sbb mov xchg aas repnz enter xchg lods outsl ret xchg mov sbb mov push sub pop cmpsl popa inc mov push jo call imul xchg into sbb fisubl add xor dec addr16 adc dec outsb stos sar mov test cmpsl (bad) lods negl xchg movsb sub mov inc in inc pop push mov stc xchg xor ljmp dec test pop nop/reserved rcrb adcl mov repnz pushf inc cmpsl lods call pop rol xchg (bad) mov push fmuls lds fnsave icebp sbb ljmp in push out insl xchg adc fwait xchg repz flds adc movsb js and popf (bad) sbb pop test jne mov pop repnz dec lea push clc jecxz xchg loop ret xchg jae adc sar aad inc cmc inc push (bad) sbb and mov movsb dec hlt mov icebp jb sbbl (bad) movsl in cmp shll jnp add pop loopne imul mov (bad) sbb loop adc xchg scas nop jno pop push cltd ss mov loop (bad) out cld movl test icebp insl js or cmp jne mov in cmp sarl and in movups inc dec repz cvtps2pi into adc enter pshufw xor test leave sbb jge inc sbb fisttpll idivl sarl lods mov mov in std push out pop cli xchg in pop jecxz adc sub fldl inc repnz sbb inc push mov fbstp jno sahf add inc push pop mov xchg cmp stos pop add repz inc push in adc movsb xor pop or xorl mov mov cmpl cmpsl jo mov repnz xor sarl and lcall imul movsb adc cli aas mov ror enter push lods fs or mov mov push pop jne and adc sub jecxz (bad) xor fcoml mov mov mov out dec mov cmp lcall mov lds pop mov scas mov xchg ror and test push sub lahf (bad) rcr push jle push ljmp xchg inc (bad) xor inc leave andb xor mov imul sahf xchg bnd xor xor mov pop les loopne xor sub (bad) je shll lea pop and andl pop cmpsl dec jne and aam jmp jo jo cmp sahf xor add mov (bad) lret js ja lcall call dec sub imul hlt sbb daa (bad) rorl jp je add sbb stos inc and sahf outsl xorl adc pusha je xor mov cmp push add stc mov iret ja dec jle in jb stc sbb es pop mov lods movsb dec inc cltd test (bad) mov outsb jl (bad) outsl inc xchg jmp jb mov mov ficomp xchg repnz addb and add sti xchg push inc xchg xchg test outsb popf add fs mov loopne nop call pop fild mov and sti adc pop mov subl fwait fwait xchg ret cmp imul insl adc out and mov jb lods mov mov pop sbb xchg aam testl push and nop xor fdivs stos (bad) push push or mov cmp xor add (bad) jns mov mov enter adc aam (bad) sti xor rcrl hlt jge sub loopne mov scas rolb dec inc clc cmp jp (bad) mov push stos add ret iret xlat imul push pop ds loope std (bad) push clc sti nop xor add enter mov ss cmp sub loope fisubrl push inc addl sar aad xchg aam jo cltd and (bad) sbb mov xchg ficom cli int dec hlt mov sar (bad) sub lods in fwait test mov inc insb sahf sbb cmp fwait call test loope sub jo loopne mov bound (bad) aaa xor in aam inc sub pop ret dec push arpl inc fwait sub cmp (bad) and and inc mov (bad) (bad) loop ret in sbb lods add jmp mov jbe adc ror clc les mov fild data16 lods dec pop mov cs imul xchg loop or testb mov cli sbb (bad) pop dec pop into jno cld cmp loope test or ss arpl adc mov dec pushf push inc loop jl lds push test cwtl lds dec in mov inc jnp js into aas sahf pop test (bad) lods jo fidivr cld xchg mov insl jnp ret repnz pop aaa lahf (bad) sbb pop (bad) (bad) xor fsubrs addr16 imul enter push ficompl adc shrb inc adc lret xor push imul scas fadds pop sub xchg repz mov std enter xor jo inc cld ljmp fcompl jo sarb loop clc cmc add jo adc ret sbb outsb mov cmp xor push xchg ret mov pop mov ds ror sub jno fiaddl push jns lods mov cmp rorl mov inc xor nop jg jg dec lods add dec xchg outsl push out cs test xor xchg sarb cmp cs mov scas daa imul aas mov arpl mov adc pop jbe outsl adc push in movsl cld loopne pop pushf pop mov pop mov rcr cmpsb sub int mov fbstp js (bad) fisttp aaa iret inc out adc cli jmp sbb mov sbb jmp xor aaa dec mov aam push mov sub out xchg clc xchg rorl and fstps mov cli push inc pop test js xor incb das dec dec sbb inc in adc or mov dec pusha imul xabort imul popf add adc pop add cmpsb pop adc sbbl push lahf pop (bad) in cld mov jecxz adc outsl pop out lock adc pushf (bad) adc in xchg fsub rcr (bad) (bad) (bad) cmp cli sub and inc adc clc pop mov sub pop mov push jmp loope adc inc div in out xchg movsl addl hlt xor aas mov inc cmp leave xor jne jecxz pop sub icebp adc xchg jae stos shrl std pop dec ss aad and jb xor jbe ljmp push loop sbb in dec aam les pushf mov fimul fsubrp int3 sbb add rclb add sub arpl xchg ret and daa add cld inc jp cmc fstl pop jp lret std stos dec sub cmpsb xor push xor (bad) addr16 dec push dec es push aaa mov xchg fadd sub jo jno call cmc icebp cmpsb pop cmp ficompl loope out and mul sub lds jl mov cltd sbb arpl fnstenv imul pop push xor dec cli insb insl in jg xchg roll push arpl daa mov outsb fs cmp cmc aas jg int3 dec and insb dec jp cmp or jbe push pop int3 sbb jl jno pop or or inc out ja fs bound adc jmp les sbb into inc das (bad) or insl mov cmp jb sub cltd xchg mov inc loope push push pop sbb aad mov jne dec mov clc xor rcrl pusha jl (bad) enter xchg nop in fistl xor repz fisubl mov push add xor lahf xor inc mov jnp fwait jg insl xchg jo adc shrb in dec in clc pop xchg fsqrt sub and fwait rcll js push mov jle xchg fisttp inc pushf pop lock pop lds (bad) adc pushf loopne xchg daa cltd mov test push je jnp stc pop inc loop or inc adc push in add daa rcrb sbb gs mov in cld push mov push jge shll xchg cmc ss xor rorb jmp jo mov stc cmc add adc pop insb sti out pop lds pop sub jb xor xor xchg fdiv add ret lcall call push dec subl mov cwtl cmovb (bad) push add in roll cld test jae outsb (bad) dec mov cmp pop sub or inc (bad) mov iret mov adc add and sbb adcl push cmp cld out in lcall lret clc fidivl sti adc mov (bad) jbe fidivr sub cmpsb pop dec out pop sar mov sbb pop sub xchg cltd das add mov dec ret sahf (bad) (bad) mov out (bad) je insl into jae cli xchg inc nop fs lret mov jno repnz xchg lds mov ljmp test jnp lret pop movsl (bad) fcmove adc mov fwait movsb pop clc jmp push pushf xchg pop mov movsb movsb add je outsl aas in outsb gs (bad) punpcklwd cs shll in sbb loop cmp push xchg dec out popa jns out push sti push mov movsl ret sub inc into mov jnp and roll mov sbb das sub daa add ret push lcall inc inc fimul fbstp mov sub jecxz sti pop cmp push or jno shrb ds les jne jl outsb ret xor out sbb ds daa enter cmp sbb adc dec aaa repz sbb xchg cld cmp xchg sub ja ja xor jle xchg push pop pop pop and jmp mov ja out stos jnp sbb repnz (bad) leave cmp jo or ret cli sub call mov aaa sbb sti icebp cwtl xchg sbb call jns add repnz lds scas xor test outsl cltd (bad) repnz (bad) dec inc inc push loopne xor push or lea mov cli rorb xchg lret push push cmc mov adc adc xchg add lcall jne xor ret cmp cmp sahf inc push (bad) and jg xchg imul and notb out sub mov aas insl mov push mov test imul insl test ret or aad fs cmpsl fwait sbb sub and mov xor test int3 sub lds (bad) push xchg popf fiadd cltd pushf cli out ret int3 and pushf (bad) xchg nop adc or mov lret and pop jno or dec movsl outsb xchg movl ja xchg orb xor fmull dec dec cli jne les fidiv hlt inc stos pop out les cmp in cmpsb mov inc or mul add bound push hlt lock ss imul hlt cmp arpl push arpl jo mov fisubr mov mov aam mul inc sub push mov jnp gs int push cltd dec inc das inc lahf movsb sbb das dec adc fldenv dec fadd sbb sub (bad) pop jne inc repz add pop xor fldpi call data16 sub cmpsl out xchg outsl xor imul push popf in pusha lock aam repz movsb xor pop pop jnp cmp js lcall aad daa mov nop and loop pop cwtl jecxz or stos sbb cmp inc adc or push jb dec dec push (bad) or in daa jo mov ljmp add daa gs push jbe mov push add and stos inc out jmp mov xchg mov jmp ljmp negb pop pop outsl xor and (bad) (bad) and xchg in lcall xor xchg mul lods es xchg les movl mov jo,pt js movb test shl in xor (bad) (bad) pusha sub jle lret (bad) das out xchg outsb mov bound inc jl mov or imul mov mov lahf jbe,pt cmpsb xor mov (bad) std aaa mov jbe adc cltd jbe in pushf out cmp inc clc push and xor xor rclb cwtl negl push movsb pop xchg inc (bad) lahf mov cmp pop rcl add test jo jb das (bad) xchg mov xlat (bad) cmpsl ljmp fstpl enter lcall sub out and aaa mov scas pop cld mov cltd or sub push (bad) sbb fcompl enter ret rolb stos pop inc cmc das pop pop sbb push jbe out adc or or cmp ds int3 jg cmp pop push lret adc pop pop xchg pusha daa dec jns push mov adc mov sub cmp jae mov sub pop movsb faddl or push cmpsb je sub mov daa cmp imul lret inc and mov cmp movsl jl xchg push rcl (bad) xor mov mov insb xchg add cld sbbl jle dec test dec pop addl xor add push popf cmp addb add movsb mov (bad) and pop clc pop cwtl mov test js mov leave iret pop test jp outsb sbb mov lods outsl push push or cmp xchg or mov add test insl mov mov sub sbb cwtl ja adc icebp test fs add in mov mov test pop xchg leave cmp (bad) ljmp je push (bad) mov sbb dec add mov or es sahf xor adc cltd cmpsl pusha cmpsl scas (bad) call mov push mov mull push sub ja in jns shll sub hlt cmc addr16 cmp cli mov lods push les mov mov lods aad popl (bad) pop cmp ds rolb mov (bad) out mov insb push jecxz pusha jl cmp xchg push dec lods lret add pop clc clc (bad) inc sbb and and (bad) movsl fidivrl xchg xor adc stc pop loope sub rcrb nop dec mov add (bad) pop sub call xchg arpl insl int imul or test jle in ljmp test and ljmp sahf lcall shr aad imul cmpsl mov push cwtl mov dec xchg loopne (bad) je jg scas mov leave gs loop xor call sub in (bad) xor cld movntps sbb lret pop or orl cmp pusha inc sti stos outsl (bad) std and ret cmp sub jno repz pop mov push push push sub add repnz sahf mov fadd in (bad) mov insl pop mov jle pop xchg loop in mov sarl pop adc add sbb imul shrl dec or enter wrmsr cli int cmp sub div push rorb (bad) ljmp add push lahf mov rclb cmp mov jecxz (bad) (bad) loop cmp dec sbbb (bad) mov lds in pop cli xchg imul (bad) js (bad) in mov mov cmp lea mov in out stos fs pop and fildll push dec cli sub stos mov or inc pop mov cld push roll nop dec jge push push shrb inc sbb sahf xor jle leave push scas (bad) stos pusha es cld push mov imul sbb xchg into aaa shr push (bad) bnd mov push negl mov imull repz mov gs rcl int3 xchg xorb inc ja movsl mov pop and add (bad) push push (bad) jae aas fsts insb xor adc in or int add icebp cmp xchg loop outsl mov inc fist push xchg in stc mov mov cmpsb jg cmp je pop test outsb xor mov test iret ret js out pop outsl sbb sbb pusha aas fild movsl mov and idivl out inc hlt int3 ja (bad) enter and inc add insl ret inc fnstenv sbb dec mov jo enter mov fsubp out lret rcll aad dec mov inc (bad) sbb sarb fstps jmp push cmpsb xor add xchg js jp imul jl insl xchg jb inc mov xchg int adc push and mov jnp fcoms mov adc call (bad) scas xchg adc and iret pop xchg and or xchg dec shrb sub xchg cld xor push cmp repz cmp cmpsl push sbb aas xor into xchg xchg jnp jle push sbb xor (bad) xlat loopne xchg add dec jno pushf call add cmpsb or fisubrl mov sub ja push aad and xlat push dec outsb xchg fsubp mov sbb inc data16 mov cmp cmc dec popf mov shrb push pop sahf out xor xor dec push push test clc pop adc gs xchg not dec or mov std fldt fwait dec negl sbb into aaa das roll cmpsb shl lret movl sbb xchg push mov ficom into ret cmp mov test insb in out stos cmc jns pop orl popf sbb fdiv dec or jle xchg xor jne xor stos sbb fbld std jmp or js std add mov mulb sub push add lret jmp (bad) add dec stc (bad) mov cwtl xor cltd imul clc and mov enter inc pop rol lcall push pop leave (bad) xor aam (bad) in mov shrb jp xor push push cmp movsl fidivl insl jecxz mov incb sub push xchg sub enter adc sub inc js xchg jns cmpsl gs inc pushf cmp push jae dec imul mov jae mov addl pusha jge scas mov cld pop in ret xor xchg mov movsb pop dec call call rclb jle cmpsb add test and mov or push data16 insb inc daa (bad) mov cmp cmp enter dec jmp mov notb out repnz mov mov jo or xlat lock sub inc xchg xchg sub mov rcrl popa js jmp daa imul mov jmp mov pop orl cmc mov sub outsb fld or shl ret adc (bad) xor adc jp jb sti xor mov mov in mov aam cmp mov push push and pop fidivl movl jae fstpt xchg cmp xchg mov bound xor gs cmp (bad) in leave or stos pop jl insl xor test and in push pop imul fsubr in mov cvtps2pi shlb dec pop mov fsubp or xchg call dec test fimul dec stos outsl imul xor call xchg dec sub cmp (bad) jo xor int mov imul ret add jle aad push bound push dec jl bnd aad insb insl or clc sbb inc adc cmp sbb mov lret pop clc out lds jmp mov jg sub int in sbb mov and aaa jb loopne (bad) pop fisttpl add (bad) (bad) sub rolb inc iret lahf cmp loop mov clc pop xor iret xor icebp rolb xchg jbe xchg cmp dec addr16 repnz xchg fmuls dec in (bad) std add cli adc xor mov and dec jb jae sub nop pop adc outsl inc mov movsl pop scas mov out jo subl xchg gs lea iret or addr16 cmpsl pop mov test xchg dec (bad) aam insb and push insl aas out loop push push cmp sbb lcall jle inc aaa lock lock std mov repz dec mov sbb push ds ss sub mov jmp sbb loopne xchg sbbl pop cs xor loop icebp lods jg lods and push sbb inc pop movsl xchg in inc dec jns jns (bad) sbb je xchg mov inc or adc arpl cltd icebp int push dec aad push fstpt ret dec cmp loopne je clc and inc rcr fcmovb das loope mov (bad) dec cld shlb dec test jge and xchg inc cmpsl pop js dec push add add es add lods sar loop out pusha arpl xchg inc mov in andb insl aaa mov fs cs stos pop fwait xchg push adc fmul dec aaa xchg mov sbb adc cmp jbe sbbb ror mov nop (bad) pop mov cmc lock jb fnstcw arpl inc outsb pusha ret xor and mov stos (bad) out out insb mov pop std das push pop arpl adc mov inc and es or cld mov nop test out xchg lahf cli test sbb scas xchg outsl fidivrl dec nop dec cwtl pop dec push or pop push xor test dec popa leave sub add mov inc aam scas int cmp dec jo inc lods test inc sahf scas cmovne out sub push push int3 clc data16 iret push mov xor inc mov push loope jo fsubs push ja xchg sahf mov adc dec inc dec cmp mov pop inc inc jl push jg nop adc lds dec sbb mov repnz jnp (bad) lods out daa dec addl mov je imull mov (bad) inc scas push mov push shrb enter push imul lods cwtl stos clc je daa loop out adc mov dec rcl fistp aam ss sbb cmp loopne (bad) cmc sub call dec push sub dec dec out sbb adc daa (bad) (bad) xchg ret jp dec xor subl push sbb ss bound push pop pop xchg mov icebp sub mov push push cmp ljmp adc sbb fwait or jae adc (bad) sbb scas stc out and sbb cmp andl (bad) std test mov popf sbb mov lods insb xor insl sti push cwtl les xlat stos pop jne push sbb or add xor repz xlat insl (bad) cmp ds jo and xchg or jne adc aad dec aaa (bad) sti cmp mov pop js cwtl xchg into xchg xor jg adc inc imul jns add dec iret inc add mov mov mov cmp sub mov add arpl aas mov pop in adc add pop (bad) sbb mov adc nopl loop xor mov popa std dec jp sahf inc outsl sub mov sub fiadd lods sub or repnz (bad) mov sub push cmp push repz icebp jo je out push jle daa test sub sbb push lret fisub mov xor mov inc push sbb xchg sbb mov dec sti sbb pop mov int3 scas (bad) iret inc cmpsb mov insb mov dec add cmp std lock repz inc sahf inc cltd mov dec ror or inc or mov popa int loope xor pop sbb call pop fistp xlat sub addl xchg pop aam jecxz mov or jecxz lds (bad) mov scas fdivrl pop sbb clc sub add repnz hlt jle push scas hlt mov sbb and xor outsl jne xchg clc sub pop pop sahf pop testl ret rcll push inc push aam sbb jb jbe push adc sti pop sbb rcrb gs cli xor outsl pop push pop mov push or xchg (bad) jecxz cmp adc mov popf push or mov jns cmpsl push jne (bad) push xchg roll dec pusha inc insl fistpll sarb jns inc pop bound push test dec mov xchg cli out ljmp mov jae lods push insb push jns out addr16 cmp jle std dec and mov mov stos out lods sarl data16 and pusha icebp jl repnz int3 mov addl rcl push fsubrl adc mov sub sti xor xor xchg push stos cmp push jae pop scas scas sti stos inc repnz mul or xchg iret fsts ss or ss push and test adc mov test cld out into pop push int3 out xlat leave push cmp les push fs add les ss or fldenv repnz aaa movsl jmp sub or dec mov sub mov and stc pop and dec popa mov repnz fdivrp movsb push and rcrl push add in std mov xor scas stos iret inc jp ret pop gs xor pop and lahf test pop adc cmc push ss nop insb sub inc xorb adc iret cmp xor icebp iret out ret callw jns mov stc lea mov sar lds arpl xor fwait icebp out ljmp repnz sub dec add fnstcw sarl iret inc pop in mov das mov xchg jmp fisubl xchg repz test rcrl mov mov inc pop ret lock movl out hlt and cwtl adc add insb arpl push pop adc or les pop add sub and cmpsl pop add push or push inc pushf cs cmp fidiv js push pop pushf sbb loope,pt adcl and and testl or fdivrs jl sbb jno xor mov add dec shrl out cmpsb cmp push in jmp dec push dec pop jecxz rorl (bad) in nop mov movsb sub je insl add icebp adc call xchg mov lock test or stc loop jp iret push jmp jns sub lcall mov dec jecxz cmpsl pop cltd sbb (bad) jecxz or incb into insb inc subl mov loope out jno sbb data16 jmp push ss insb dec repnz or hlt cmc je add xchg add mov lea push (bad) andl sbb adc dec pop arpl jg in (bad) mov fs sahf lahf rclb mov dec fcompl or lret jl pop aam xchg stos push (bad) movsb into movsl or push inc inc cmp push sub mov stos test cltd mov sbb jge loopne mov push mov fisub nop insl sbb scas sub (bad) in cmp call ret lret mov das jbe inc sbb pusha mov loop out dec fadd aad mov (bad) movsb sub mov outsb adc sub repz sti lock mov mov int3 out and adc push aaa lods add idivl mov dec into push xchg jae push insb (bad) jbe or jp pop push dec sub (bad) or sbb sbb xchg nop dec (bad) pusha lret imul jle pop or movsl jbe (bad) inc xor xchg (bad) fimul call cli adc mov xchg or ljmp xor xchg cs push in adc cmp sub test call fbstp mov outsl insb mov enter mov (bad) mov xor push mov scas loop scas stos repz scas sti sub cmp xor lods out test mov xchg push fstp adcb aam imul pop mov loopne add mov out cmp xchg cmp les pushf xchg sbb lea cltd dec dec mov push ficoml push jge adc mov push mov jae sbb pop push out xchg clc add addr16 mov dec jg push test jae add mov pop xor cli dec mov nop jnp mov inc pop (bad) (bad) lret scas inc jp rcl and and aad mov sbb sub movsl (bad) sbb mov lds cmp mov rol jno arpl mov mov and jnp add push enter xchg aaa fldcw xor in nop not decb test (bad) cli loope mov jl sahf je ret xor cmp sbb leave mov in sbb and fs cmp loope sbb dec fdivl icebp adc (bad) xor movsb xor insb sub jo push into jg or stos inc xor insb vmread aas add jecxz (bad) cli push xchg scas jnp sti mov jo fisub pop das mov jns xchg or push or fs xchg mov andb cmpl and xor sub ds repz dec stos popa adc (bad) xlat stos pop or xor sbb dec jno cmp push add cltd mov (bad) js xchg int3 fstp push subb mov idivb pusha adc xlat fsub pop mov pusha pop (bad) mov sbb mov sub xor xchg bound repz mov push or add shrl sbb mov pop and mov mov lea and inc sub jbe sub or xchg notl or ds bswap arpl fist pop movsl adc outsb sub push fistpl push (bad) jl sub mov jno pop xchg mov sbb sub mov das data16 outsb adc xor pop dec fidivr int3 (bad) jae pop fdivl xchg fisttpl sub loop sub inc iret and inc ret fsub lret cmp jp xor scas int dec mov dec lahf jnp scas or adc mov pushf sbb repz mov insb test dec sub (bad) add xchg enter xlat fistp (bad) xlat jnp test inc mov fnsave inc pop inc and pop pop mov add pop adcb and fldl mov sbb lods inc adc nop lods sub dec js xchg call mov pop pop push ljmp dec adc loopne movsb rep addr16 sti orl and sub xchg push xlat adc and imul fs fwait sub jge scas and int call dec repz int3 mov sbb jecxz sub pop add adc adc scas mov ja mov and fbld mov xchg mov xchg das dec test xor call sub lea jae xchg xchg sub int3 and mov mov lea jmp lds and movsl in pop adc cmp sub mov jns,pn mov (bad) jae out pop sbb or and xor aaa cmp imul jb lret out pop sbb dec dec pop sub test stos sbb faddl sub out scas lods push out and mov jno pop sbb and insb xor int3 daa addr16 sub test mov adc shll jle movsb and insl repnz popa or test mov int loope aaa hlt mov ror ror pop dec inc call push sub enter sbb cmpsb push and rolb bound movsl xchg aad cli lds roll icebp aaa rorb sub mov das out jmp dec sub dec inc xor jbe mulb sahf sub or stos adc mov adc std cmp cltd inc cmpsl mov js cs cmp fisttpll lods leave leave in push call dec push or aam out inc movsl add push xchg add xor aaa (bad) cmpsb jae nop inc test dec fnstcw iret aad leave cmpsl test xchg push hlt sbb adc add jbe in sub (bad) or inc adc out pop jle rcr (bad) fldenv sub jne sti cmpsb jmp push movsb mov pop les (bad) icebp cmp jp xlat xor test xchg cmpsb pop jle pop and xchg and mov je xor outsb cmp loopne or push scas xor ljmp sbb jg movsb es lock aas push sbb stos jle mov adcl xchg cmp add sarb inc fdivr and stos lods pusha mov mov stos mov mov nop loopne and sub cmp das dec pop rorb data16 sarb ja ljmp add pushf in sbb inc sub add insb mov cmp (bad) sahf and je jecxz pusha sbb sub (bad) cwtl ficomp out and mov mov or push stos stos and cli rolb lret outsb in hlt cli loope pop push mov mov jo out bound jnp sub pop mov call mov ret (bad) jno icebp subps test xor pop mov out cmp lea sbb cmp fcomp dec xchg data16 cmpsb adc mov fnsave jae clc (bad) jp int inc sbb test and xorl lock sbb or xor shlb inc jo les xchg stc jb int3 push push fnop or leave cld pop shrl addr16 pop mov xor mov (bad) call jmp (bad) shll int3 sub in inc push sbb lret aaa mov fsts mov and out jo pushf push divl leave jne mov inc pop push add adc arpl jmp psllq pop and cli or (bad) in push dec js jecxz sete movsb iret mov lcall cmp sub enter fmuls dec outsl arpl pop pop add jmp out push cwtl ja mov inc dec cs mov test xchg xor in and rorb test rolb push ljmp adc (bad) sbb sahf fcomps mov hlt imul scas adc jp push pop sub xchg or data16 fsubs sbb mov daa movsl xlat jl adc jl std and loopne leave sbb pop dec std jl sub ret aam aam pop push pop (bad) sbb and push mov clc ljmp fadd xor test lret and rcrb ret push jg and adc mov and rclb rorb insb push aas aas fsubrp or call jnp mov sbb out fsts lods fs lea scas sbb push or xlat test dec jp out cltd xchg ja jb and inc xchg adc icebp pop mov js adc pop xchg adc ret js xchg cld sub mov data16 enter das cmp sub mov xlat mov jmp push (bad) or andb jo loopw cmp adc test push (bad) stc mov add adc add xchg cld xor sbb add cmpsb cwtl mov mov sbb push hlt movsl out and pushf jmp fistp push and daa loop push aas dec jnp mov inc fistp pop fimul pop add imul push fwait inc sub leave sbb lea fdivs add mov popf mov imul sub jae or stos xor pop xor cld in cli jae sbb cmp dec jo je cli cmp xcrypt-ecb cmpsl or lock outsl add std (bad) or in or out dec xorl mov push (bad) adc jae add daa pop stos jmp shll mov mull or (bad) ss adc ret mov adc in jne ja xchg (bad) repz stos inc ds ret add inc xchg push cmc xlat fiaddl jo jnp inc or lods fs add (bad) mov (bad) lock clc (bad) out or cmpsb loopne stos xor xor sti pop xchg inc jns xchg rclb or outsb pusha pop dec daa inc cmp int std sub repnz jge out cli (bad) mov out test pusha dec mov nop aaa mov jb imul xchg aaa and push or mov sahf mov test xlat adc mov xchg adc (bad) jmp jecxz mov pop int pop lock xchg cmp (bad) dec pop movsb mov xchg insb xchg and sub rcl int3 cs ss scas repnz (bad) push mov test lock jg push mov mov cmp push adc and in sbb in shlb lea aas inc jno mov aad arpl xchg dec aaa insb pop movsl hlt js sbb push add mov adc ret enter xor cmp sub adc dec or sbb cmp adc fwait sbb call cwtl xor cmp nop fsubs pop mov popa or (bad) enter scas pop movsl cli (bad) daa adc xor das inc dec idivb push mov xchg jns out fadds jmp add adc inc enter mov add jecxz jmp jno mov push cmp aad ret jne or ljmp or pop jmp (bad) jle scas aam mov jo and (bad) cld cmc mov pop aad push mov sbbb mov pop xor dec add arpl imul pop int or lcall repnz cmpsb aas mov push push aam js and aam sbb popf mov pop pushf adc jae test sbb sub popf jmp das inc adc sbb mov aas cli sbb movsb xor mov adc aad lcall (bad) std cmp lret addr16 test mov xchg loopne inc xchg push pop hlt add sbb sbbb dec rorl push pop idivl lods lods inc mov lret mov cwtl dec testb mov lret pusha jp xchg dec pop push mov mov (bad) fs mov stc xor pop loopne xchg xor sbb aam (bad) xor (bad) pop jo in or xor popa adc cwtl daa jecxz push repz or rcll sbb add mov xchg sbb roll cmp sub mov and leave enter pop and aaa mov js jp jno lock jbe ljmp rcll cmp dec (bad) xchg loopne orl dec popf leave loop dec pop fisttpll push movsl jecxz insb in and insl mov lock inc sbbb mov and lret or stos xchg dec inc mov dec ljmp lahf push push mov mov add mulb dec dec repnz mov fbstp xchg cmpsb call mov and push leave add sbb push and push ret sub dec das neg push cwtl jge xchg add adc gs das cmp pushf sub cld je sub shl mov movsl hlt mov or or add mov mov pop and in and sub mov push dec loop pop std and jns pusha mov rcrb xchg in mov and mov sub movsl mov sbb bound sti adc shr mov adc scas lcall jmp lcall lret pop dec xlat pop jle adc cmp fwait cwtl push inc jge dec jnp lcall pop or enter insl mov shrb je lods xor cmp inc sub sub mov pop je (bad) jbe ret rorl and out mov lret mov sbbl push aam sbb mov out test iret (bad) adc mov push cwtl fidivrl xor jl push jp cmp and push data16 mov sbb lret mov inc push mov popa sbb les push movsb cwtl mov jb pop shr je cmp and or ret (bad) jg lock jl mov mov adc add inc fdivrl push xor out jecxz xor xor addr16 mov and mov mov mov int scas imull jl jge jae sbb inc pop pusha lds xorl mov fcom icebp or or push mov xor mov enter gs xor std outsl das xchg icebp iret fsubl nop out das mov push ds fidivrl xor mov aam push aas xor (bad) xor imul and daa cmp adc (bad) stos lahf lahf push dec ds sbb sub js push in jnp jno (bad) mov jmp mov les pop (bad) fwait lret imul mov pop xor and xchg into insl mov xchg and dec aam xor xchg sahf pop jle out jnp fldenv test lea and nop mov push addr16 jb mov mov push push bound lret test push and push jge idivb jle lods adc mov lea stos std push pop repz pop xor arpl mov add add lret loop into (bad) xor (bad) jne sahf adc sub movsb push aam cmpsl adc jp bound and add loopne dec lahf (bad) mov roll pop jae sarb das mov add (bad) xchg movsb gs es push inc (bad) mov or movsl jnp test (bad) (bad) inc mov dec mov sub ljmp popa int3 cmp pusha out ret sub xchg loope pushf add add pop aad dec in out sub sub xchg js scas sbb int3 mov pop loop decl adc cmp jg jl pop and inc xchg (bad) mov inc loope fldenv pusha mov sub call fild pop push test mov sub ljmp insl and inc imul jmp dec enter push dec pop mov cltd jns jl paddsb shlb adc or repz dec test ljmp inc jbe mov sub fstpt dec pusha jne xorb jbe mov xor jge mov cwtl (bad) loop mov or rcrl or xchg cmpsb orb inc inc scas cwtl push jo int mov push test js testl mov cmp and cmp in cmc mov nop mov repz das or in negb sub fnop sub cmp cli or and or xchg jge call mov lcall ret xlat imul fiadd ljmp lcall adc cmp lock fnstcw movsb xchg pop inc push fistpl sub mov inc nop iret stos sbb lds dec lahf (bad) xchg jo xchg lods cmpsl mov bound push leave push rclb mov sbb lods mov sarl mov (bad) int pop in cmc mov fmuls (bad) sbb les cmpsb mov mov push fiaddl (bad) adc fstps or jl aad dec out sbb dec sub sbb jp mov jb jae ja jns mov out sahf cmp dec mov popa mov mov add add push paddusb ret pop pop mov fiadd leave (bad) cmc jecxz pop je test clc aad insb ds shrl insl xor add jne sbb (bad) jbe stos out sub xchg xchg mov popa lea sub rcr call in cmp je test loope mov sbb cmc xchg cmp daa adc out xchg cmp mov mov out lock sbb gs pop addr16 ja push xchg xor and movsl jle js fnsave jo and movsl out sahf mov daa loope mov xor (bad) dec jge loopne (bad) or adcl inc icebp rep push add push adc loop pop stc int3 inc test jo mov call sbb push dec imul add dec or pop mov dec loop adc push xchg and and push mov mov mov int les pop push fdivrp fidivl daa mov enter adc mov imul outsb subb ja fsubr cmp push mov (bad) xor xchg aad int3 xchg adc int push xor das add (bad) dec es in call cmp jne dec stc sbb inc jmp mov movsl mov dec inc add mov bnd xor cmc ret push mov (bad) mov (bad) in pop mov xor jno shld dec outsb add imull lods inc rcrl push add adc bound js int3 push cmp in (bad) push leave fisub repz fstpt fs out fiadd (bad) neg xchg jns pop xor cmpsl push cmp add mov push pop and xor jo inc movsl scas out das push sub repnz and sub fist pop scas push xchg imul (bad) sub mov sbb ficoml in daa jb mov and push adc ss add pop sub test pop push push aam mov (bad) jp sbb dec aam mov je xchg jne jg in xchg shlb sub xchg sbb mov dec gs xchg fist mov xchg cmp xchg mov sub call push jb loopne cli and pop cltd sub clc loope adc adc pop add pop dec lcall ss or icebp bound xchg jns out pop cmp iret daa aaa add aad xchg popf inc decl xor push scas sub or in addr16 and scas xor mov pop and and or or les rorb xchg adc movsl xor icebp sub int (bad) stos cmp jmp sti std mov js mov mov xchg (bad) jecxz lods mov out ljmp dec cwtl fstpt add hlt cmp cmp (bad) mov loop es lcall in jge sbbb popa mov int xchg xor pop enter sete stc cmp (bad) test cmc repz jmp inc push mov lret rcl xor pop xor push cmp add push sub add mov (bad) in push movsb rorb rorb mov xor sbb or adc into ja and imul out cmc cwtl dec add pxor cmp test and arpl mov repz cmp xchg add idiv mov inc sbbb mov or inc test jno xchg int stos lret xchg add inc and sbbl push xchg push (bad) pusha int ja insl pop sarb push push shl and cmp ret fstpl push fidivrl subl add adc or adc inc or push push fldenv sbb mov pop outsb roll std mov or dec cmp out test push inc mov ret sar les push fcoms mov push xchg add in test mulb xor fidivr xorb lret arpl lret adc xchg stos lods (bad) int inc xor int jnp gs xchg lret (bad) mov xchg pop outsl or lahf lret in pop iret jp inc sub mov jae stos jle and or and or in xor sbb mov jge data16 clc cmp addr16 hlt sbb hlt push lock jle push (bad) (bad) iret dec adc imul sarl sub mov insb mov cmovns and sub cmp das pop add dec push into mov out add jb mov mov not nop cmpsb fidivr or fwait jbe and aas lgs or lds push cmp (bad) repz dec inc mov mov inc push dec js (bad) fidivl sti (bad) cli dec ret ret je sbb addr16 dec ret ja js in inc fldenv adc (bad) pop (bad) sti pop or ret daa loopne in ja jle popf pop stc scas xchg js cmp dec stc dec repnz inc mov pop or je mov (bad) gs clc loopne add leave call push mov lahf stos mov jle stc add fadd call push stos neg out dec push sbb dec jmp sar xor sub cmpsb das mov test out popa push data16 or (bad) ljmp insb xchg xchg xchg bound jbe sub push sahf data16 insl dec stos stos aad ss xor and out mov in dec das ja xor xchg test xorl pop add inc pop ret mov push xor sbb mov popf push jp push cwtl jle ffree popf mov cmp mov adc lods lock lcall iret int3 repz addr16 das outsb dec loop stos sub enter or aam mov dec pop mov jg iret out loop push outsl cmpsl mov xor pop push dec aad lods push lcall mov jg lock or lods and das sub stos xor loope loope cmp aam sahf inc fstpl xor push mov inc and popa (bad) lret jg mov xchg push xchg fcomi push dec jo jp sti out test repnz loope jae stos mov pop mov xchg leave in push scas cs out lcall pop xor mov je pop inc ret pop cmp xor mov mov aaa push out pushf jmp in ret jb aaa daa xor jns,pn jbe jno (bad) xchg lock push add in outsb mov adc jo imul add pop dec jo jge jbe cld dec imul lods adc and cmpsl push mov pop (bad) popa call push in mov int js mov lea (bad) push int3 stc cmc ja add sub sbb jbe shrl loope inc iret stos movhps xchg (bad) sbb (bad) nop push cmp popf pop negl jmp (bad) xchg movsl and inc inc or pop adc shrb pop dec push decl or pop mov imul mov popa xchg xor xlat imul jo outsb sahf pop and cmpsl xor pop bound xor jmp aas pop ss xor test pusha dec cltd popf nop in (bad) mov add mov pop mov xor (bad) cltd adc sub mov std mov mov mov (bad) icebp lret movsb mov fildll sub jp pop inc arpl push jb mov cmp fiaddl mov out adcl (bad) das mov xor add inc cmp pop xchg push aad clc mov sbb gs xor sbb sub or sub lods adc dec rorl and add jae xlat (bad) sub push das mov xor jmp ja insb sar xchg xor fs (bad) pop cmova pop xor jne fistl lret push jg xor mov xchg jbe sub jge insl insb fnstenv fimull and push dec shrb xlat push dec je add mov imul std loop push mov dec push fs int3 leave popa test and stos int3 sub test cmp ss mov dec xor ffreep cmpsl (bad) pushf ret jl dec xchg popf lock xchg test mov aad bound cmp adc mov (bad) xlat mov add or (bad) cli xor subl ret (bad) inc addr16 js test dec xchg mov out inc pop and sub cmpsb or push gs cli sbb mov gs cli movsl mulb test cli test out les scas call nop cmp adc int sub repz xlat dec cld jb lcall mov js inc pop xlat xlat test inc mov jo (bad) mov push add dec out cli inc add je cmp and test cmpsl push xchg cmp (bad) int3 sub dec fistp push js (bad) sbb popf push inc mov fs mov pop fmull mov fistpll lods jge (bad) lea jne ss scas loope xlat push or jmp pusha (bad) iret cld lods pop push or test notb out jmp adc ret repnz mov adc cs mov add mov es popa pop data16 jnp xor jae pop andl dec jge fild lret dec push loopne or add fstpl pop ljmp not and inc add add loope cmp inc imul iret divb cmpsl in mulb out mov lret mov cmp in push mov std aam aad fwait ret orb xchg jnp movsl fsub mov addl xor pop out mov in jmp jnp fs sbb mov jl cmpsb ret or out pmaxsw out dec sub aad mov cmp popf popf inc xchg mov push adc mov test xor push bnd sbb dec cs xor scas add in dec jno xlat in aaa out sbb orl divl jne xchg pop dec jle pop rolb mov pushf cmp pop std fsubl fcmovne add and dec xor (bad) int3 push lret gs ss data16 (bad) jecxz test std jle xchg shlb fsubrl int repz mov adc mov cmpsb jmp push push mov lods dec popf lea dec adc adc adc xor cltd push in sbb xor jns sbb add js mov les insb mov mov pop add insl sbb mov out cli lods xlat or xor xchg sub pop lahf jecxz adc jns leave inc out mov js sbb xchg les stos in mov or sbb out jecxz fldcw adc div std mov push or in mov xlat xor jp scas (bad) pop mov pop ret jge insb out pop fwait mov repnz sub cltd and cmpsl xchg mov adc xchg insb sbb cmp cli outsb push ret aad lahf or (bad) lock sub jge repnz gs add jg dec test mov (bad) mov int addr16 xchg push loop les jns jg stc mov mov outsb insb je inc adc mov mov fwait add repz sti xor orl xchg cmp mov cmp (bad) imul (bad) das aas call dec ss inc cmpsl pop test roll (bad) mov imul leave lods jge cmp or int3 xchg scas shrl fsubr push mov ja into aas xor jne jns pushf ret push xor in mov lcall mov xor mov insl nop dec mov add stc push jg inc rcr sahf negl add push out rorl cwtl jmp outsl ret xor lcall stos and adc cmp xor cmp mov push sub or std aaa cwtl xchg mov mov push jmp push fs ja sbb sub mov sahf jb in aad inc jg rorl push out mov test fistl mov mov int3 imul sub dec push mov add sbb sarl adc out mov mov in shr lds mov pushf and arpl ss (bad) and add jl push sbb lret orl loope xchg or cli lret mov mov xchg int3 pop (bad) lea bnd iret (bad) ret (bad) je pop addr16 mov addl add or pushf rcll (bad) jg pop aas ds icebp test adc daa add mov mov addr16 pop add xor jmp inc in cs (bad) jmp ficomp push fnstcw sub inc lret sub (bad) bound jbe mov jmp bound cmc or popa pop dec jmp add sbb clc or add pop cwtl inc fidiv fisubr fidivl andl loop sbb add pop sbb mov hlt into and adc mov xchg enter sub popa aas xchg shll jge sbb push loop test jle out fiaddl lahf fdivrl and or mov ret cld out or or add mov stos push push cmp jp mov dec inc pop scas sbb jl mov jge cli data16 roll leave adc bound push idiv sub gs fs add inc push mov jo out cmc in scas lahf movsb jnp addr16 or lds push adc stos cs xchg (bad) pop aaa pop and add mov add mov mov mov loope ret xor adc daa xchg movsl cltd add push mov std xchg sub outsb mov jae fisttpll adc jb (bad) jbe push jecxz cmp sub add lcall adc jg xor mov adc insl das pop add mov in xor mov nop mov inc jg imul and dec sti (bad) jns xchg fidiv xor loopne cmp cltd leave inc and adc leave cmp imul rorl pop inc mov mov aad cltd add (bad) scas pop out adc push push pop fwait mov jb inc xchg cmc push lcall cltd ja popf push in in inc hlt jp pop mov lock stos push mov push fwait in pop imul shlb and rclb adcb fucomp jecxz insb ret clc push mov add and mov mov cmp jl inc mov inc jge in fwait adcl (bad) xchg mov (bad) loopne and pop dec pop mov (bad) lahf mov mov shlb pop lods sub arpl lcall jecxz mov push cmpsl addr16 dec cwtl cmp test sbb int pop mov mov imul xchg insb stos jno dec lds insl add jmp pop das push mov or or stc test cmp daa xor cmp movsb add pushf inc push fadd ljmp add iret mov add test fimull mov pop out mov call pushfw cmp add std pop iret in popf mov into nop mov es push ret negl mov jp test jns (bad) cmpsl jle bound (bad) or push jge push cld xchg pop pop pop ja lods repz fisub stos lret (bad) mov xchg (bad) addr16 sahf push lock adc addr16 scas dec mov sub and jmp lret inc inc std dec push out in pop dec sbb push icebp gs xchg or xchg adc xchg xchg test mov push pop xor cmp xchg addr16 or std clc hlt inc xlat sub out add mov mov (bad) ret sub ljmp dec xchg mov shll neg pusha lods fwait jge dec aaa and mov test or rol pop jmp sbb mull xor in sbb std adc enter lods jle mov loopne test inc push and jnp loope iret cmp sbb std xchg mov pop mov fmuls sahf fist push jle cmp call mov push push pop mov inc inc inc adc imul rorl mov rorl fst or cmc in mov jnp fs xor mov dec mov popa lods je fisubl (bad) add cld shll call pusha sub aaa out (bad) mov add mov cmp push cmp xchg incb lods jg fisub repnz arpl lahf xor push sbb sbbb jle cmp mov push pusha stc adc test jno pushf xchg sub xorl xchg fdivl jbe ret push lahf cmp jo mov jl dec jo adc rcl dec jp movsl div pop dec mov cmc fldl fucomi das pop jle pop adc push or inc adc bound jl fmul scas adc sbb sub dec sbb bound pop ljmp xchg or jge mov jmp xchg shlb rcl fst jmp sub cli out call addr16 lea fisubrl es mov lahf xor jecxz jns mov mov (bad) cmp sub add je push or inc repz (bad) cmp dec sbb out push xchg ja or stos dec ljmp push pusha jge add cltd sub inc pop cmc fwait into cmp das pop aam push test (bad) mov or popa pop pusha mov or or aad out orl or test es push test pop mov rcrl ljmp sub fidivl pushf aas pushf scas add pop scas faddl dec and aam jns jno and clc inc mov sub (bad) lret iret xchg dec les jmp jle push sbb lds pop sbb lds test and test pop lret jno xlat adc scas lret or push add cmpsl push ret movsb and (bad) xor mov cmp hlt jmp movsb sbb dec nop fdiv or mov outsl xchg iret lcall out xchg jp and shlb cltd hlt push sar mov push fimul mov test fwait push and loop popa lret pop ljmp inc cmp jb and aam fild add inc jae ljmp data16 mov popa mov fmuls jecxz dec js dec ret fldt into mov (bad) dec arpl mov scas scas mov xchg xor (bad) jae xchg outsb (bad) outsl push mov jmp (bad) clc fstl mov out xchg cmp imul add dec (bad) inc out dec (bad) lcall sub rclb xchg gs push cli lcall (bad) dec adc scas mov jp repnz sbb mov jp out lods cmp insl int3 jle sbb xor repz add adc and adc in cmc add bound xchg out rcrb fcos sbbl jge adc sbb mov stos fdivl inc stc pusha loop mov cmp and inc (bad) sbb jecxz xchg fs fdivs or popa adc lret xor fiadd add test jg mov icebp es aad in inc xor mov xlat nop xor xor pop and scas outsl inc mov xchg sbb push xchg fisttpll mov scas xchg icebp add push das xchg pop sub add and push xor push inc out jne push out jl cmc insb mov std (bad) cwtl lock mov sub ja popf (bad) repz push sbb pushf mov adc pop sub xchg int3 push inc dec movsb fistl inc in repz xrelease popf (bad) or shll sub xchg or dec pop xchg mov dec or dec sbb dec mov or pop push ret cmp and pop je mov adc pop mov bound cmpsl cmp dec (bad) in das push test es jmp or jmp ficoml jb ret sub (bad) mov addr16 mov adc out imul push ljmp sbb loopne mov pushf psadbw mov lret mov fdivl notl into jne xchg mov out jo sub push movsb (bad) mov pop mulb enterw (bad) ja sbb imul add mov sub xchg lcall cmp aad cmp outsb jmp mov lock es mov inc xchg dec mov jmp sub adc test orl test iret mov imul adc fisttpl pop fadd pop dec jne sbb and aas jmp popa bound or int xchg lods mov insb or pop push (bad) mov pop xor push or sbb dec test lods mov mov xor sub xabort aam mov push scas jne bound (bad) cwtl adc aad pop mov mov ret xchg and jp sbb cmpsb xchg inc mov or popa or fs jns insb leave cwtl mov js push outsb sub xor sub fcoms ss sub (bad) mov pop fistpl sbb fnstenv aaa xchg push or ds mov xor add sahf cmp andb lahf subb pop aaa stos jnp sbb lret add mov jl add js adc xchg es inc daa loope mov rclb dec (bad) xchg insl cltd sub jnp cmp nop add pop in ds cmp (bad) lret and lret jmp push jg mov jns lret cmpsb adc jno in dec mov jnp inc sar xor mov mov jge ret cmp cmp jbe (bad) push xchg (bad) sbb outsl cli jo inc xchg or call mov mov pop mov add mov popf jnp imull in jmp sub ror aad sarb cmp test mov pop aaa dec fs hlt out (bad) int inc out or imul lahf mov lods psubusw addr16 dec mov pop push data16 int or adcb jne xchg es fisttp (bad) (bad) test dec pop push movsl fwait int mov push lods cmp inc jle jg jmp add call test or dec out sti cmp push callw pushf adc xor push cli scas push mov pop pop xchg nop xor or nop push dec test (bad) xor cmpl iret jmp xor sbb iret aas push cmpsl or mov or pop (bad) gs xor fistl out xchg lahf leave cmpsl fdivrs into popf jle or stos movsb sub out rcrl or fidiv add aad popf push (bad) fmulp xchg test adc xchg add in ret mov inc dec imul ret push ja dec xchg and loope pop rclb fwait jae sbb ljmp sti mov movsb xor mov jge movsl lret add dec ds loope hlt jns cmpsl fmul dec xchg jae inc sub adc jae dec mov sub mov jae leave fucomi dec leave add test mov dec xchg adc add mov ds int3 inc jge inc push push xchg ret xchg aaa fwait push or rolb mulb (bad) cmc test jmp sub call in enter (bad) jne ja inc test dec lds pop lahf popa xchg inc xor mov rcrl dec sbb pop lods or out xor scas mov push imul cwtl sbb and test shlb jp mov dec dec std mov rol lret push pop xchg (bad) loope mov in cli sbb fsts (bad) movsl xchg cmp mov in push (bad) ss fildll pop add push popf cld mov sub cmpsl in stc js cmpsl add push lods sarl rcrl push in lcall out mov xlat adc sbb xlat rolb call push inc xchg ds fisttpll call xchg dec dec xchg mov ficompl aas rolb es mov add daa inc loope fwait or cltd jns nop push mov adc stos rclb loope mov data16 xor xchg test test mov cltd mov lods sbb scas add mov cli push inc cmp shrb jmp dec mov push (bad) xchg aas cmp mov enter sarb mov jo (bad) insb xchg dec std fidivl dec add add jno syscall push sahf xchg bsr imul iret subl hlt jnp dec jns test pop clc xor flds iret ret sti lods popa ret mov sbb fcmovnb mov fistl sbbl aaa arpl and loop je xorb or adc cmp dec cli sub lea sub and (bad) aaa pop fsubrl cs xchg inc pushf mov push lds lret fnstsw repz xlat dec sahf cld xchg inc jp icebp mov cli js or movsl cld sub pop repz mov sahf (bad) icebp rclb std fwait mov or stc bndldx mov mov sbb xor lea (bad) mov cmpsb xor xchg sub lock insl stos pop punpckhdq mov mov cmc inc jnp xchg lock popa fstpl xchg mov adc xchg outsl mov dec and or notl dec dec inc test mov mov cli stos test pop lods daa add clc xchg jnp (bad) fild push out mov jle xchg pop test in insb ret lret ljmp mull sbb xchg test dec cmp push pop mov mov and jg ret cld add push movsl xchg xchg inc addr16 mov xchg mov sbb cmpsl jnp jle aaa push xor arpl sub cmpsl pop push and and stc andb popf int lret push mov jmp mov arpl mov sub std shll sub or mov loop cli nop mov (bad) divb popa mov repz xor inc push or jo or das adcl fisubrl cmp xor mov pop mov (bad) das pop cmp xchg sbb lea dec mov jno enter or leave or inc push dec mov push add push in add sbb and pop or jbe (bad) push xchg inc (bad) mov add fidivr out dec or sub jo jecxz into sub ficompl jns pop cli ret push lret push and adc in or jnp arpl cmp aam mov inc subb aam lock dec xor add daa adc imul fnstenv (bad) lret push pop push das push es aaa lock sti (bad) mov lods sbb or neg or or adcb insl xchg dec movsl pop mov mov insl clc outsb xchg dec pop cld sbb stos ljmp adc daa xchg mov iret mov adc int3 jmp rorl and out mov jbe inc dec push rolb cmp push mov (bad) xor movsb or (bad) xchg push mov (bad) ud2 in jae roll dec mov loop (bad) xor mov jne dec gs dec sbb cltd lods fldt jne xor dec mov or cmp mov or leave jae loop add dec and fsub lret jle adc cltd or shl push push mov les add testb rcr insb (bad) and fisubl rcl adc orl add in outsb adc mov mov test scas stc lcall ficoml mov lahf loopne xchg popf or fildl jae mov mov aam or xor ret leave iret mov adc icebp (bad) aaa add stos mov xchg lea imul imul mov jecxz ljmp movsl fbld cmp popf mov outsl push outsl pop cmpsl js in popl push or inc mov jl xchg push in gs pop dec lock or xor jo insl aad (bad) gs xchg fs pop cmp jb jae sbb les mov xor bound cld sbbl sbb push push fisubl (bad) xor pop sub inc jmp int outsl cld lock out or lods ret ljmp dec jl pushf and mov adc std jge gs enter das (bad) xor jno enter xor xor cmc xchg inc int mov mov hlt xor mov pop inc push fist outsl jo push inc lret fdivs daa push jle add popl (bad) xor xchg mov and xchg xchg sub scas les mov inc add imul mov iret xchg pushf push mov popf test and push cmp push inc cmova test pusha or cmpsl jbe push adcl enter adc cmp ss movsb cmp pop mov jg mov xor loop bound cltd mov negl and xor xchg or das or lcall fs and rcr (bad) rolb mov mov addr16 jns xchg inc pop insb rorb sub push or push (bad) jnp mov dec pmullw push sbb inc shrl mov decl or pushf int3 sub (bad) jge out xor cmp or add (bad) outsb jae out lods push jnp addl pop aad mov xchg jp aam fistpl popf mov int3 pxor insl dec fwait nop sub mov in add mov sbb sbb push (bad) dec iret push push int mov add je aam inc test lds (bad) jmp ds jp cmp repz movsb js je (bad) ja jl mov aaa inc (bad) xchg aam lds dec pop mov mov dec jl (bad) cmp pop and mov pop sti pcmpgtd sahf mov stos jmp jb push mov imul stos jmp xlat jbe aad cmc or mov (bad) dec adc push jb (bad) leave test lock loop icebp int cmp decl test adc inc inc sahf and std fiaddl mov mov inc test gs loopne jecxz xchg jg push push pusha push in subl orl out xor adc dec cmp xor negb mov pop imul mov bound jg mov mov ret push xchg and nop cmp mov mov jmp xor rorb jle add jge jns fildl scas xor mov ja stos adc inc pop dec test outsb add jl and sbb int3 dec jb gs xor mov and sar (bad) cli cmp mov js stc (bad) fwait lods ss stos imul sbb test dec fmuls xlat pop mov or inc jbe jl int fadds lret add mov mov hlt add xchg jecxz pop xchg add dec cltd cmp cmp inc cmp (bad) lods dec int xor mov lret lds and jb adc fsubrl out sbb xchg cmp cmpsl mov outsb incl pusha mov scas test push loope push shr dec repnz pop and scas inc addb out test or test jbe ficoml (bad) adc es push dec and call sub push loope mov jbe dec or js insl jbe sbb popl jl mov out mov das mov mov (bad) push jg shr pop fstl mov stos sbbl fnstcw cltd bound push xor leave fcom repz dec or ret test sbb imul stos sbb mov es ja (bad) test test adc xchg outsl movsb xor movsl add xor jne pop icebp sarl jecxz je jg xor faddp jnp in jno push mov daa pop out dec mov mov mov mov pop xor cs push lahf mov ss push and les cli imull jg sub fcomip aaa add aam mov test in repnz mov adc xor enter add jbe sub push lock adc mov xor movsl fmul sbb inc out cmp sub push xchg cmpsb scas pop ljmp xor adc fisttpl and and xor jp dec in mov mov inc aaa adc (bad) and es xchg xor mov ljmp movsb inc sub jne int push mov mov (bad) or daa andb pop lds push pop cmp dec outsb pushf test adc aam lcall mov dec mov cwtl scas in sub aad out xchg mov scas gs push jmp pop jns stos adcl inc cmpsl out sub das std sbbl xchg aam test sahf negl jo sub (bad) jno pop rcrl push push mov mov in or data16 les rorb stos mov mov mov or inc pop fcomip lcall cwtl xchg adc ret pop push mov (bad) jno push or or mov loope (bad) ds mov shlb (bad) inc and rolb push cmp push lods mov loop cmp xor rorb mov fisubrl jge jp push dec jl sub pop fnstenv (bad) mov pop (bad) je lret push add jno push gs scas test jg push fsubrp inc xorl loopne cmc lahf std and bound fcmovu sahf sub cmp out test mov xchg loop sbb insb sub inc mov add pushf (bad) xor pop pop dec mov inc mov lods push mov lds mov movsb imul cmp xor loop in xchg mov subl pop pop test mov xor cmp outsl andl outsb pop ror in mov mov or inc and dec inc imul shrl cltd sbbl xor adcb movsl xor in fs bound inc and dec inc ds jne mov jnp mov movsb repnz adc mov int add pusha adc or sbb sub xchg stc ja or dec roll xchg add test aad test das fistpll int3 sbb inc jno sub xchg and loope push (bad) in dec push in test jle inc xchg xchg sub in mov push push das test lods jo mov repz sub ljmp pop or sub xchg sbb cmp jnp mov in push fidivl adc mov mov mov mov sub mov arpl pop xor push (bad) sub and pop fmuls push or mov int data16 cmpsl pop adc mov jge arpl dec test rol and iret pusha cmp xchg and imul mov dec pop jmp mov mov mov out xchg repnz nop int jmp sub loopne gs stos xor jg inc push gs xchg ljmp dec faddl adc jne or dec addr16 dec nop add sbb clc mov imul mov mov xor xchg test dec ljmp lds arpl (bad) adc in ret stc dec mov jno incb cmpsb cmc xchg or mov out std in stos sbb rcll out or mov sbbl mov pushf push gs push ja push fistp cli dec inc xchg pop xchg dec or xchg or cmp mov stos adc sbb push mov out inc lret pop outsl dec ror adc mov or (bad) arpl jae xchg pop xchg push (bad) addr16 jg push sbb inc or pusha dec mov sbb lahf fisubr pop aas sbb lcall pushf xchg inc lds (bad) (bad) in lahf xchg andb xchg outsl push outsl out clc sti popa (bad) or add repnz inc outsl xchg pop ss fwait jae out ret mov pop arpl add fwait into jmp addr16 fstpl repnz popa outsl out fidivrl (bad) sahf iret into cwtl scas lods pop outsb (bad) or push loop sub jb rol cmp std mov mov dec fiaddl sahf xor fsts or ret xchg pop movsl sbb andb outsb xchg pop out fnstsw bound pop push push scas xchg stos ret negb sbb push bound inc cmp stos jp cmp lock int3 jbe loopne fs fsubs flds sub jae xor add and jb mov out push imul cmpsl jb inc idiv nop and lods jbe push xor sbb call scas mov jnp jnp or pop sbb imul pusha dec cmp aam or ja push xor insb stc xchg leave test and mov cld mov push sti insl ja cmc dec into (bad) or mov ds add jae mov or mov sbb ja lahf cmp addr16 nop sub ret stos je fdivrl mov loope mov icebp mov jae daa jmp js xchg mov cmp hlt sahf imul mov lds xor sahf cmp inc or sbb fcoms push mov stos in not lret mov xchg inc loop test pop insl lret add jp mov xor sub scas in pop cmpsb sbb mov (bad) adc push imul loope add imul leave push hlt push fcoml bound or xchg dec int outsb xor orl stos test dec push aaa cmc leave push nop nop sub push mov or in das bound popa dec sub das rorb mov iret push enter xchg push jb lret cmc mov mov push jae add sub repnz scas xchg sub sti mov loope add stc mov shlb sahf lods ss dec sbb outsl popf pop lret stc hlt mov imul and jo mov mov lret or add ret loopne test jmp add xchg imulb jge sub dec inc sbb xor in test mov pop adc jns jg fcmove js cmp out cmp push adc stos or lret imul mov shrl xchg push (bad) je sub xchg pop jecxz mov (bad) xor sahf outsl dec cmp cs fimull (bad) ja sbb and es push mov and xor sahf out mov mov push jae or jo xchg (bad) jle add ret cmp inc xchg pushf cld stos xchg mov daa cmpsb sbb sub mov aaa push gs inc pop arpl nop mov add cltd adc xor xchg mov add push orb push lret imul (bad) faddl xor sbb clc adc cwtl adc xchg lcall mov xchg mov sub jno scas negl sbb sti lahf push push add push stos push stos repz rcrb aaa add in js outsb ss aaa xor stos test fimul movsb and scas lock fxch pop mov jmp loope lods dec or (bad) push mov scas leave jnp push fwait addr16 jmp cld add pop push xchg std arpl cs mov jb xchg adc pop pushf clc (bad) (bad) jp insl push lds aaa mov test or test pop push mov rorb fisubrl fstps jmp outsl popa pushf xor mov or inc cmpsl jae add push outsb aam cmpsl (bad) push movsb and cwtl stos xchg test les pop ret (bad) jmp loope and ds cmc mov push push lcall inc cwtl test and (bad) call or in mov sar sub rorl shrl loope inc fdivs xchg daa das jp stc aad jmp (bad) imul sbb and inc or pop fdiv and dec mov out mov aam cmp pop icebp push pop pop hlt shlb outsb or dec cmc dec mov dec fs aaa cmp inc outsb loopne roll cli mov xchg mov or jecxz lcall enter dec lods sub dec or imul push cmp cmp dec inc mov push (bad) icebp inc (bad) insb xlat gs cltd push push jbe movsb mov addr16 add xor push in (bad) (bad) idivl push rcrl inc sbb jmp insb (bad) and push cltd popf lods xor jl das or jp fs jae (bad) hlt sub pop (bad) int3 mov outsb stos xor adc (bad) cmpsb (bad) (bad) cmp loopne lahf and popa and sub pop sbb jmp daa rcll sbb cwtl mov ficomp sub dec push mov adc mov lea fucomi adc or jmp add movsl scas mov xchg sbb loopne xor sahf mov mov sub inc mov jo lcall and mov push mov sbb decl mov movsb mov mov pop cmc push jno lock pop outsb (bad) mov lods lret call add add jo jmp stos dec mov (bad) fisub mov inc bound push lahf cwtl fnstcw mov (bad) fs movsl dec xchg jae or hlt cmp lcall pop aaa fcmovnbe scas mov mov pop js lahf mov sarl js mov sub and xchg lret or test xor int3 mov push jg jo loopne mov sbb fcomps stos out jo adc stc cmc xor pop inc mov loope leave shll imul (bad) mov mov push loopne inc or enter push loop movsl cli jl dec pop movsb adc test test and scas lods mov inc (bad) mov (bad) popa les cmpsb and ret mov cmpsb fidivl lcall out icebp in in shll pop hlt cmp inc dec adc cmp int mov add gs adc mov jl jne sbb into xchg int3 jne mov (bad) sbb sbb lods leave bound call cld fstpl lds ss xor cmp (bad) dec mov mov dec push clc loope cmp mov jno dec jle jge test cmc test jno jbe mov xchg mov push ss ds dec xor pop (bad) and test test icebp cmpsl test sarb ds jb mov sbb clc and fild cmp (bad) push into dec xor das (bad) push movsb mov mov add push push cmp scas stos xchg (bad) cmp pop iret xchg test rcrb mov test jne and push cmpsb xchg mov cld xchg xchg test stos jg pop mov pop out jg hlt jmp stos sti sbb sub divl mov and test sbb xchg push cmpsb pop add lea popf cltd push mov mov adc sahf and in push inc loopne insb aad pushf addr16 jb movsb std push out out popf lods rorb arpl push iret insb and jge xchg std test fstpt push xchg pop nop adc add jp pop imul mov (bad) jp xor arpl mov sbb jnp ljmp or mov movhps xor pop fistl and mov fstl mov push popa aas adc push mov iret cmp lds mov gs dec mov push xlat sbb pop ret mov stc icebp stos int loop in mov lahf enter cmp inc outsl dec sarb bound dec roll adc push ja mov dec mov mul add push rol inc dec out and adc inc sbb mov cs cmp push ss lods add flds in fisttpl sbb mulb mov jmp pop jecxz inc cmp lret dec punpcklwd lock add dec mov lahf xor jbe out daa mov xor (bad) sbb mov jg xchg adc adc mov sti sbb xor cmp mov pushf je lahf lea pop push ja or xor mov in fwait divl lahf stos mov adc out pop repnz loopne repz sbb arpl add and fbld push js sti xchg loope jbe pop ret dec inc sub or popa xor cld cli add punpcklwd and lds iret xor mov loop fiadd add clc (bad) test sbbl (bad) stc jecxz das push or movsb mov inc test (bad) cmc int3 fwait or mov add cmp mov pop pushw push cmp jecxz mov adc mov add loop (bad) popf xor daa sarl push pop adc aaa mov or dec pop lock and out nop and pop xchg xchg or sub sbb mov cmp pop inc xchg xchg sub pop mov pop and pop push sbb add je (bad) cmp and mov or inc mov cwtl das test lcall lods pushf xor cld shlb sbb in dec or mov mov stos xchg lods sbb test and fs xchg std sub or int3 mov iret test popa jl inc (bad) repnz aad outsl (bad) pushf cli sub mov and cwtl (bad) push xchg addr16 and lahf nop (bad) gs xchg cmp sbb pop inc xlat and mov es push xor je inc ds push imul stos ljmp stos adc fcompp jb insb movsb (bad) inc decb sbb mov pushf in xor fnstcw lods leave mov push fwait cs add insl mov outsb add sbb push out sti jmp out and mov in sbb mov or push arpl pusha sub mov clc jo add into loopne insb xor dec dec je pop lds out jae pop jns icebp push aad (bad) fs icebp xor mov loop xchg popf pop aad jecxz push sarb jg notl stc mov test addr16 imul (bad) lret jp lret das mov add ja add ds dec xchg cmpsb fnsave push xchg sbb into stc nop xor ljmp aaa mov pop push enter shlb inc test lcall adc cmp adc adc mov mov mov xchg mull jae sahf lahf push or dec xlat icebp sub mov or and xchg jae or ljmp call fwait mov mov cmp (bad) mov in imul stc and addb scas std cs jne mov movsb ljmp out mov mov and push pushf xor xchg clc popf inc pushf movsl add mov out fisubrl fidivr mov jno loopne sbb or sbb mov mov (bad) cmpsb incb xchg inc mov fmuls lret stc xor ljmp arpl cmc mov push lods xchg xlat pop cmc push sbb mov ljmp pushf and adc add lea jo addr16 mov push cmc idiv sub push out and repz loop (bad) pop fwait mov stos scas out lods mov imul loopne fstpt (bad) sub sbb dec mov mov inc nop jns mulb or scas inc jge push out je sub iret lods daa leave cmp lcall add pop xlat jb xchg pop dec pop xchg adc or and xor out cs xor mov cmpsb sub adc out aas jne,pn and jmp sbb add out cltd jo fwait mov sbb jle pop pop das adc (bad) imul mov lock pop cmp outsb adc push xor call sub pop cld dec cli lret ja int3 lcall movsl pop mov cmp mov push (bad) adc inc idiv lds mov je cmpsb xor (bad) pop std (bad) icebp lahf mov fwait mov call push das je dec in push cmpsl jne pop fbstp sub push mov das xchg out mov cld cmpsb sbb ljmp xchg inc and js pushf scas ja jg shrl cltd pop mov xlat jp test fstl mov lea add enter cmp or or pop je cmc mov js pop and (bad) lock jecxz insb call push leave pop test (bad) push or sbb fs jmp repnz cmpsb and int pop ss dec adc push cmp repnz cmp in and add jne sbb mov add or inc push fidivrl add cmp dec push or sarb xor xor mov xor mov lret out sbb cmpsb xlat and incb sub mov mov push stos lock loop bound das les addr16 mov out and sub insl test mov sub inc mov std cltd inc inc loopne rol cmp sub add adc inc xchg fldenv inc sbb push leave push xchg mov movsb leave sub icebp pop or sahf pop fldl mulb repz int3 test lcall inc jecxz add lcall mov add mov fwait xchg jmp ljmp loopne rclb daa push jb and rorl jmp ds fsubs fistpl pop pop sub fsub sbb jno jle pusha out dec mov repz push aad xor loope call pop lretw mov dec xor pushf out xor notl push and xor adc (bad) out out ret (bad) scas dec cmp mov je out mov cmpsl cwtl adc jnp dec add jae mov out dec aas pop ljmp ret ljmp (bad) aam sub mov pop loope test dec add xchg adc cli stos ss in arpl pop (bad) pop jnp push push cmp test cmp push push aad mov cmp das push (bad) xchg and lret sbb aad mov fsubs outsl addr16 xchg and hlt rorb push mov sub iret nop out out pop add hlt jle jae mov jno pop inc fldenv mov push sbb push cli jo fsts (bad) in cs or lcall stos test xor cwtl cmp sub xor xor push stos popl dec sahf sti lds jne add mov mov add push add mov cmc fildl or sahf shr repz (bad) jbe or aaa mov adc or in (bad) mov in add xor push push std or fnstenv mov dec sub repnz xor imul sbb and ja es cli int push add push in popf mov dec add jmp cmp popa mov xchg pop std adc aas cmpsb and mov push adc dec shlb test mov mov shll mov (bad) not fcoml lea pop or je subl imul and mov gs out xchg ljmp aad jl push pop (bad) js pop xchg push mov movsb sbb mov call mov xchg xor imul das sub ror sbb rolb pop ljmp mov fdivs jle mov int3 cmc jmp xchg aam stos decl dec cmp mov or (bad) call push or pop jmp in jb test mov cmc mov lods pusha ja loop fstpt loop cmp hlt mov mov inc add scas popf sbb ja out rcll mov int3 mov insb and sbb icebp mov fs in loopne ret rcl add lret stos cmp add inc jne sub adc push xor daa in cmc dec fstpt into mov jecxz decb jb jmp jmp xor subl mov cmpl out xchg les (bad) or pop repnz jns and sub leave mov pop xchg xor (bad) (bad) pop jp sarb pop push popa mov cld data16 clc daa scas loopne movsl orb push pop adc out mov enter les inc or mov test cmp cmc cltd jp adc shrl jb dec cmp repnz mov jle in leave pushf push push mov pusha sbb pop aad enter fmull ret ss leave call cmpsb jl mov outsl jb cltd mov dec cmpl inc add sar jge in push adc clc lahf push addr16 negl mov insb or sti fisub mov icebp test jp cmp aad sub repnz pop mov mov xchg cli or flds fist xor mov jg sbb cmpsl push adc add popf fsubs pusha mov cld lods aas pop leave scas in mov push lea in push sub ret mov push ret pop fstl xchg sahf pop mov (bad) mov mov sti push or test mov adc (bad) jge sahf adc lea jp pop xor mov push inc stc adc mov cmp cwtl or outsl push mov jae sub fwait shr cmp push lods cmc (bad) add cmpsl pop pop iret popf je mov int3 adcb or sub outsb data16 cmc mov dec mov in and insb jnp cmc jno (bad) int3 pop dec (bad) jg adc aad scas adc xchg cwtl jae (bad) out cmp xchg xor lret je sahf popa fidivr jb push loope mov popa xchg int3 adc sbb mov mov mov imul out sbb dec push mov inc mov or add call xor out fcoml loope mov out mov mov mov cmp cmp sbb sub mov pop mov jne pop aad xor ss push movsb rcl push xor cmp mov sar xchg cwtl push pop pop jno mov lret push lods pop inc sub xchg (bad) pop in (bad) dec stc pop push xchg sub pusha xchg xchg inc xchg pop lret xchg push push ljmp (bad) fstl pop sbb dec (bad) inc loopne out or cmp jmp push aas lret xor outsb push stos kmovw rcrb enter cmp insl js jge jo mov add mov xchg movsl pop push insb shrb xlat out push dec mov inc inc sub push dec (bad) adc and pop sbb lds and mov inc out rolb insl jmp fwait dec push or mov scas repz mov sbb out shlb or pushf inc es mov adc cmc pop xor out jecxz fcmovnbe lret js lret ss sub fst cld xchg xchg or ret popf push test jl lock sti stos jno loope shl cmp or mov inc orl hlt mov cmc stc pop in dec and push cltd adc dec cmp sub add addr16 lea fstps sbb xchg pop sub data16 dec insb xchg fisttpll and xrelease lock je (bad) jne mov lods pop add scas roll mov sub pushf imul xchg xchg xor adc adc aam mov cli in sub cli int3 mov test repz pop movups push push popa dec cli mov mov push outsl or xor lret stc out test cmp jl pusha and (bad) mov aad jge xchg ljmp aad cld js sub andb insl inc ja out inc jp sub test in je jb xchg je push mov mov loope out cli xchg out out jl loope push push loope loopne shl data16 or sbb and jecxz inc add xor enter jne mov dec and je mov push inc fistpll jle lock jo stc cmp popw jecxz mov mov das add push fisubl xchg push xchg (bad) push dec aad sbb pusha inc in ret sbbl mov (bad) inc test jbe addr16 subps or scas fnstcw lds clc (bad) mov in add sbb lret xchg movb mov push adc dec cmp mov or out inc stos mov jecxz lea mov fildll push mov cmp jnp (bad) cmpsl mov into movsl mov scas enter aad mov (bad) movsl inc nop fsubrl push mov xor jae adc jecxz xchg push add mov pop xor pop xchg outsl xchg cmc cwtl fsubrp push (bad) sbb es lds pop pop xchg sbb (bad) push pop mov loope sub mov dec pop mov xchg pusha orl shrl sub mov adcl mov push js jle xchg es jns sbb jne pop or aaa loop adc fcomps ror dec xor inc xchg aad xor xchg repz call mov jne sbb dec inc iret push addl cli add addr16 xor mov fs add dec test xchg aad push in test insl adc (bad) pop inc repnz mov ja sub mov lock das xor jg iret jno dec out sbbl cmp adc cmp xor sbb call cltd mov push insl xchg push leave cld lock push movsb add movb add jecxz pop inc pop or push mov scas push or and in loop pop cs adc lods jg jns ljmp adc in lea jl aad push xchg push jmp push sbb xor adc test mov xchg xchg je mov xchg and cmp inc sub sbb rcrb jo mov pop push pop fs add in jp test in les pop ja rorl rol scas adc mov adc (bad) xor (bad) jb sub pusha pop scas (bad) pop test push mov les stos repnz sbb cmp push add sbb mov mov dec and hlt enter ret dec jo call in mov aaa addb cmp out fwait or xchg inc mov pushf dec inc aam inc popf pop les pusha fbld xlat pop jb out pop or cmp pop xchg out jae inc push sarl out test mov sbb xor sbb dec inc ds and movl sbb sub mov negl mov je mov test adc push ja pop xorb adc xor push adc mov imul add dec cmp rcll mov mov mov inc (bad) popf pop push (bad) ret xor sub sarl sbb data16 jmp inc cmc cmpsb cld xorl arpl cld cs jns aam fsubs cmp hlt ljmp mov push lea (bad) inc inc fldcw sub inc repz mov xchg jg rolb lds nop xor pop mov pusha xchg das jnp pop and jno loope fist pushf outsb repnz addr16 add jno das mov in sbb pop push jae xchg popa out aas or fcmovnb out out mov mov bound inc mov aaa mov push pop xchg bound lods mov jmp or mov clc icebp adc and pushl iret clc scas ret cli notb lock xor lcall adc out out xchg lds pop mov stc repnz inc mov icebp mov data16 jae and (bad) neg test sti jmp aas cld enter jo or je in jbe inc jmp test sub xchg and enter (bad) pop xor jbe sahf sti mov fdivr movsl lock (bad) repz ror xor (bad) sbb jge xor add push inc mov inc lret (bad) repnz gs and cmc (bad) bound sti inc cs inc cmp add packssdw rorl cwtl mov mov fidivr mov js pushl pusha aaa sbb fidivrl push mov pop jge rorl js sbbl mov dec mov mov lcall (bad) mov daa test scas test out repnz pop icebp xor lahf movsb cli mov (bad) decl daa push fwait adc or cld cmp sub js push cld popa sub js loope js mov sarb repz fdivrl das shll int3 mov fldenv sbb arpl js nop dec push (bad) ficom push cld jns sub scas dec rcrl shrb repnz enter lcall jnp and (bad) inc and je lock cs sbb les ja dec pop cmp jecxz push (bad) fwait dec shr jmp dec mov inc dec push in jnp enter inc add ficoml pop pushl es add jnp sub notb push inc mov lock or mov mov je shll jge aam mov cld addr16 jb sbb in and dec aaa das xor push push ja pop add ret (bad) cmp in sub call mov mov mov sub xchg repnz adc flds (bad) add add cs and push inc fisub mov fstpl lret jno pop xchg int adc iret ret (bad) inc int into lcall dec test sarb in shrl aam scas mov push mov pop mov jecxz xchg dec lahf inc mov jge dec fist lcall das sbb insb xor jo adc and jbe aaa jg jecxz out addr16 (bad) sarb pop je js pop push lahf mov mov lret lds loope jmp xor mov jle lahf pop repz push mov leave xchg add xor fildl ret pop add int pusha loop pop dec mov pop and jge hlt fcompl aad sbb pop int3 mov cmpsl test in jle sub int3 test test sbb popa (bad) imull (bad) and outsl pop inc pop jmp aas cmc push cwtl cltd ror ljmp add stos mov lods xchg xchg mov mov mov push add into dec in sbbl les arpl dec xchg pop addr16 xor adc ljmp in mov (bad) leave shrd out push mov or outsl jae ret push add dec ljmp mov divl inc test inc popf mov int icebp in xchg popa add shr push lods adc orb (bad) inc ja ljmp out stc cmc rdseed rcr cmp push lds cltd mov jne mov stos test lcall dec lods adc insb or add cld outsb lcall test adc jecxz push inc leave sti (bad) mov cmp pop inc pop sub or pop pop outsb jno adc pop xchg in xchg ret lahf (bad) dec mov fsub test scas mov in pushf iret fnstenv cmp push sbb dec rolb xchg jae push inc movsb add enter in clc xchg mov or idivb mov loope lret pop xchg mov mov push and gs pop and push movsb das pusha sbb cmp push jg aam inc xchg sbb mov inc push imul mov lds jge sub push mov mov or ljmp cld lcall adc hlt lods call data16 cmc loopne mov lret out mov cmpsb in pop sarl add push gs adc dec (bad) lods data16 test mov (bad) xor add mov inc cld ficomp mov dec pop xchg sbb ret inc mov push mov lds mov dec loope mov pop pop cltd bound sbb adc rcll push fstl or mov pop sub jnp repnz push pop push xor movsb or sbb popf insb das loope lods lcall xchg mov xchg sbb loop fbstp incb cwtl sbb aam into daa (bad) (bad) inc call mov rorl pop push (bad) jmp and push mov jle xchg add push jge push in jbe (bad) frstor popa and addr16 add dec in or sub pop cmp bswap mov call xor or pop popa cltd pop jle sysexit daa loopne pop (bad) sti mov mov daa add cmp call fldcw jns mov or add adcl pop xchg aam or add das aad mov add stos sub ljmp (bad) repnz jnp adc (bad) js inc bswap cmc inc cmp sbb int dec pop add add rorl pop dec cmpsb lcall xchg (bad) (bad) in pop je jns push sub gs xchg leave adc call lret rcr push (bad) repz cld push xchg outsl mov int jle mov pop pop add (bad) jp iret cwtl (bad) and xchg and sub and mov rcll cmc fld test sbb pop cltd (bad) dec mov imul ja jb inc rorb dec jne fs mov pop cld cmp jbe out nop cltd xor sub cmpsl cld sbb test mov jne and inc mov adc push daa dec dec push lahf fadds dec sbb hlt jmp cltd pusha loope data16 (bad) push adc inc js outsw mulb mov ret push clc xchg pop bound adc aas mov loopne int dec xchg cmpsb cmp test scas imull jmp repz or shl fdivs xchg int repz cmp sub (bad) jbe mov rcrl ret sub aas cmp gs add dec add adc icebp mov mov pop mov repz sub jge adc inc (bad) (bad) lds inc bound les test ficoml lahf insl loop bswap jge fdivs dec cmpsl xor mov mov pop jp sbb imul sub sbb jno imul jbe xor and nop push push pop ds int3 aad inc mov sbb cltd incb loopne js push clc mov (bad) add ret rolb in xchg mov fsubs dec sbb xor cli adcb ja xchg in mov pop sub (bad) out aad cmp mov aas push sbb in data16 inc jno ret je (bad) inc repnz leave test pop in into xor aas pextrw xor mov aaa fwait cmc and sbb lock mov shr into cwtl enter push mov sbb mov pusha jle sub dec fsin xor mov popa sub mov popf inc mov xor mov xchg xchg mov mov cwtl arpl mov in test lock inc jg andb adc adc mov scas inc mov add pmulhuw dec test decl xor iret lcall adc mov fcmovne insb in xor push or dec addr16 stos push dec lret pop inc scas gs lcall mov (bad) rclb xchg out dec clc cld ss ret xchg inc sbb dec jae cmpsb jle sarl cld fucom call in and sbb rcrl mov mov inc xlat scas pop out mov or scas (bad) out adc push pop push enter into aam loopne cmp mov cmpsl out xchg and fcomps inc xchg jnp pushf adc pop fistp mov cmp mov push inc sarb push jmp popa adc cmc out stc cmp dec sub jae lock lahf jle (bad) mov les xor fs test xor (bad) call repz ret mov mov loope push cmpsl dec mov pop mov faddp xlat loope fcompl mov stc jg mov mov fistl xor mov test mov aaa sbb jb out popa enter ljmp cli pop jp push lock mov or subb adc ljmp imul mov rcrl mov or loope mov fnstcw sbb pop aam loopne lahf ds inc jg addl pop daa add ffreep fnstsw fiadd xlat jl dec mov mov adc adc sti cmp push inc mov into es sub aas icebp mov xchg clc push movsb sub inc add cmc and lds (bad) mov pop arpl mov lret imul inc add sbb arpl cmp inc pusha mov cs xchg add inc xchg les out sub xor js hlt xchg mov mov inc repz int3 jmp add imul cmc sbb pop dec inc popf sub and fwait mov xchg aam inc icebp mov mov xchg movl and or mov push icebp pop push imul mov mov ds lahf lea repz test fwait into iret push lea rcl sahf adc aam push pop inc push pop cmpsb adc sbb add movsb push std fdiv dec pusha punpcklbw pop xchg int sub or mov mov jle cmpsl cld pop sahf aaa xchg push pop jl int mov mov (bad) push jae gs xchg in loope dec popf out dec mov or movsl dec adc movsb sub dec cli push int3 (bad) xor test mov mov fadd cmpsb lods loop pop das repnz jge xchg test cmc inc sbb xor dec das imul into mov jecxz mov dec push push scas sarl and cltd lods adc jg add inc pop jno xchg andl in sub popf xchg out and cmpsl popa (bad) fdivs insl add xchg out mov cmpsb dec iret jmp push mov scas xor aam fidivr std or push aam icebp movsl mov sbb test mov add jnp and sbb sub mov mov int pop pop mov (bad) leave jae xchg sub xlat imul es cs sti stos (bad) mov popf push cmpsl mov or mov or lret std (bad) xlat rorl ja mov and inc jnp mov xchg test test out inc pop cmp aaa mov in test and pop mov mov push ss ljmp js jl out into jo sub (bad) push or xor frstor xlat pop (bad) push mov popf push push add jp mov call mov pop iret mov adc into clc aad (bad) popa adc jecxz leave jp xorb cmp movsl jg mov (bad) adc jge scas mov cmp xchg out stos (bad) in jmp loope jb fisttp stc loop jbe mov aaa xchg adc (bad) dec xor mov arpl xchg cmp or push stos push cmpsb jb jnp or pusha arpl jmp mov pusha or jecxz sbb test jbe mov and or hlt mov mov xlat in je jmp pop mov notl (bad) sbb pop out jae pop push ja pop cmc sbb add mov aad mov outsl mov in push push fldt or ret fmul xchg inc popf inc fmull sbb mov sbb adc push (bad) and (bad) (bad) out inc pop outsl xor subb fcmovbe push mov lock sbb adc jle outsl mov or jne hlt mov or cli inc adc into push adc dec jl mov inc cwtl mov fwait mov shrd dec mov mov insb inc ret cmp fldt jo mov or cli xor add es inc mov out pop int3 or (bad) mov popa (bad) bnd push add jle adc pop loope fisubr pop cmp (bad) adc int3 fcoml subb mov sub jl loop fisubrl xlat pop std push ret and ds add adcl cs or fmul fmuls decl pop lret or scas or mov scas xchg dec popw add pop jns je (bad) mov je mov in dec cld or (bad) stos loop adc ret sbb (bad) icebp fs xor adc shl sub lahf add dec rclb (bad) nop xor inc leave cli add inc xchg sbb addr16 int3 insl fcomi mov test leave mov cltd inc sbb pop movsl pop cld enter dec inc lock cwtl aas shr xor jne int3 jge test mov stos jmp je or test lea cmc out xchg in lods pop dec ss dec push aas xchg xor lods scas adc movsb das lret iret jbe fs sub int lcall add popa xor jg xor lret adc and push mov pop in lret test leave (bad) movsl jnp je mov incb (bad) dec push sti xor sbb inc jge mov push inc fist jno pop jnp jbe xchg cmpps jo push mov jnp fs in xchg and mov es test loope lret (bad) mov add cwtl dec or push sub icebp scas rcrb sbb or or mov add add int3 and cmp fdivrl pop ja clc push femms or jg jbe enter popf aad pusha or mov dec lret out inc dec push mov cmp push rolb add js jmp sarl aad mov std mov dec sub xchg fchs mov inc fnclex setbe out lcall stos push (bad) aas cmc pop into dec push les dec jmp xchg jno inc xor test test test mov out xchg arpl cmp stos cld inc and jno sahf (bad) mov adc add jg loopne and test clc push mov or jbe scas add sbbl push js loopne int3 add push mov and lds push or popf mov aaa mov ja fstpt stos push mov sub outsb jp repz pop add fldt sbb xlat sbb in xor insb adc lods lods jns dec repz cmovg sahf push sub sti jge outsl lods adc mov stos pop push ja cltd cmp sti pop xchg ds pop in aaa xchg adc inc jle pop out (bad) mov and scas xchg push in imul daa mov sbb out mov cmp fadd cltd jae push test lahf adc int3 xchg fdivs clc inc adc and adc dec mov jg push ret cmp out adc aas jp fcomi lret loopne dec pause ret loop cmp mov cmc xchg adc je (bad) fdivs adc xchg and out fs ljmp in bound rcr int3 (bad) add enter lods cld insl sbb mov movsl lret or push lcall mov mov test loopne fdivr pusha mov sarb out sar cmp sahf push pop out mul pop dec out cmp int3 ret (bad) inc push mov insb sbb out push or xor jno jns stos sbb out inc lcall sbb aaa pop popa inc arpl push mov (bad) aam sahf push push rcr or fnop add mov jmp pop or xchg (bad) push inc sbb lcallw rcr add pusha pusha shlb push push mov outsb jp in jmp mov inc xlat mov fwait dec jmp xchg xor fiaddl dec jne inc mov push cmp sub ffreep jecxz mov cld lahf xchg add adc xor push pop add mov cmc mov movsb stc in inc outsl mov and jmp iret cmp stos test shlb leave mov inc push xchg outsl ret xor jl and inc sub push cmovo pusha mov and jno fcmovnbe jno sub jge push xor mov pop fwait cmp mov pusha daa clc sahf insb cmp (bad) xchg pop rorl push cs jmp test jl sub pop mov mov dec mov add mov cmpb dec sub xchg push mov lea in jmp pop inc lea adc mov insb and ds enter cmpsb mov adc inc xchg out addr16 fiadd lahf popa jg xor cmp xor mov (bad) iret out pusha scas inc push sub inc rorl mov scas sbb push iret push daa insb or pop and jge arpl test lret cs imul pusha sub mov je inc nop mov cmp pop arpl sub push idivl sbb push iret roll jmp push cmpl mov std jmp cld xchg les cmp cwtl mov dec ja inc aad inc lea adc pop dec or (bad) xor inc scas fildll pop (bad) iret mov sbb and daa and arpl push lret addl loopne out rorb inc popf stos or int3 adc addr16 jne call xlat mov rcrl sbb cli jg sbb in dec jl mov sbb inc inc sub mov push push xchg add insl aas mov mov xor test inc popa jecxz (bad) or lret pop insl cmpb mov adc pop dec fwait cltd add rcrl adcb lods or dec (bad) sub lret push xchg divl fnsave sub xchg addr16 add mov movsl xchg jl ja adc jb adc outsl pop imul xor cmp ret mov stos std pop cmp daa rorl cld adc nop ret jle mov xchg jle ss xchg xor (bad) iret out pop xor mov sbbl sub (bad) xor jno (bad) arpl sub pusha xlat scas js cli pop lods xor push fldenv int3 push inc lcall lret int sub fisttpl cld addr16 xchg push movsb or cmp jno jae adc popf leave and rol fs inc jb leave pushf es or and out push bound icebp jg cmp cmpsl sub mov mov jns sti adc rol movsb inc jno xor sbb add pop daa stos mov pop and xor push xor ljmp aaa stos lock test loope cmp incl push pop rcll add mov (bad) adc int3 dec xchg jecxz aad jp lock mov add push pop adc insb rorb cld (bad) adc pushf ja xor cmpsb sub cmp inc in (bad) into pop in pushf inc inc sub xchg std mov mov aas sub cmpsb adc jo out scas xchg jl repz and sub pop sub xor sbb or cld pop lods mov dec sub mov adc mov ljmp ret sbb test push jle decl ret aas jp negb addr16 mov or insl xor or outsl mov add stos inc fldt sbb test (bad) out mov dec rol int3 mov rcl add inc popa push jge xchg adc add loop push xlat inc ror mov subl lds popa (bad) fbld dec shr out push jg dec sub and (bad) lret and mov in loop (bad) cld mov iret pop push test movsb or sbb sub cmp fdivl or (bad) xchg lods mov add clc mov jg cmpsl repnz nop pop aad fistpl divl fsubr ds data16 loop lods dec fbstp mov xor push ss push jp inc sub jae jg (bad) imul lea (bad) push ror cltd pop pop (bad) mov cltd cmc mov mov cld jle in or fxch mov (bad) jmp inc daa fwait (bad) jns mov pop jbe movsl int mov icebp mov in jb pusha fsubrl or add in pop xor scas xor (bad) fstpl (bad) fimul loop and cmp test nop (bad) inc adc pop jp cli sahf xor mov or sub xchg mov insl int3 inc inc mov int pop and mov jl push ret pop mov jle lds test pusha nop addr16 cmpsl pushf push das add rclb push push call add fcomi xlat stos push mov add dec inc data16 fimul xor movsb rcrb adc or in mov xchg xchg sub retw pop dec dec cmp dec mov idivb jnp fs mov mov repz inc pop push fldenv cs sbb call aad pushf xor sbb popf rolb inc out cld (bad) stos pop sbb test adc test in and scas test sahf inc dec push and adc movsb jno dec xchg pop push outsb add and ret xchg lods out push xchg pushf jbe in dec xor inc loope out sarb or jno sti (bad) and (bad) mov or xor outsb adc adc dec or arpl lret or shrb sub leave scas in and sub cmp dec cld test andl arpl cli sbb sub (bad) repnz in cwtl jmp inc dec (bad) out divb jl lods scas int3 lcall and mov xchg flds pop mov orl inc sar repz out loope jns loop mov jns xlat jb xor inc lret dec repnz inc js inc enter jnp fnsave aam loope,pn push mov sbb or outsl ss xor jbe adc push mov ss mov push dec (bad) popa adc cmovno ljmp mov push int mov xchg pop jle dec roll stos loope fwait sbb xor movsb sub sbb outsl inc mov xchg lock push sub xor jmp punpckhwd or jne pusha mov cmp sbb xor cmpsl ret mov (bad) push inc imul jbe (bad) or inc aas push bound push cmp add xchg andl std enter add sbb cli mov pushf cmp pop movsl pop add sbbb xor mov loopne ss ljmp movsl xchg scas sbb dec loop dec dec leave jp jge add mov cmp and test jp jno popf sub and aas ficomp fbstp es or in inc pop jle push fwait inc outsb movsl add xor inc pop adc (bad) mov fld nop gs sbb push pop jge adc push cli pop out faddl mov ds xor aas sub sahf add mov (bad) push out lods fs add pop push mov int mov mov loope mov (bad) mov out out shrb adc cmp mov or cs push xchg (bad) (bad) (bad) jp mov cmpsl xchg aaa test mov negb pop xchg repz push repnz cs addr16 mov adc xchg clc xlat lret std cltd pop enter adc adc cmp lret pop fimul xchg add lods notl pop xchg add pop jns jne push fisub adc fwait sbb push imul xor xchg jl mov das fildll lcall fldt (bad) leave clc adc aas xor mov mov dec xchg push (bad) mov jmp leave mov mov (bad) mov out out cmp xchg (bad) pushf or das jne cs test je cmp xchg in les stos sub nop dec les sbb inc jne mov sahf loopne add mov mov push xchg popa aad mov (bad) mov add adc cmpsl pop add loope dec pop add jb mov pushf imul add push daa es xor lret cld icebp std xchg dec or aad in xchg (bad) je fisubr ja push jbe jns and lahf jbe adc lcall xor pop lock push mov arpl jb push std movsl rcll aas add dec in mov sarb popa dec repz cmp mov int3 xchg mov sbb lret insb jae out addr16 sbb test jo int movsb sbb js xchg pop mov insb dec in inc xor int (bad) inc imul jne sbb (bad) movsb lahf lds js sub (bad) aaa xchg xchg inc pushf or mov jae inc je popf and xchg ret jae dec xchg sbb mov jecxz xchg mov dec or xor push (bad) sbb sbb inc jne mov popa out jno in xchg rorl repz lret lds xchg and cli push lret ljmp ja mov dec movsl pop mov les cld das sbb adc jmp jae out fimull pop pop fcomip sub das push pop adc rcr inc bound popa mov or push mov mov loopne out cmp xchg cmpsl lds aad xchg xlat imul sbb or ja and fisub adc sub ret jge dec inc sub insb mov test push repnz outsb faddp cmp and xchg (bad) push cmp inc movl push es mov hlt dec xchg movsl adcl aad mov scas loope pop dec ficoml adc shrl pop ss rcr dec push inc sbb ret into dec std mov ja in mov in enter pop stos (bad) negl inc rcrb sbb ss and mov xor lret je mov or ret mov xor push dec jg pusha cmpsl test push lods and (bad) iret mov mov fmull pop jmp (bad) push aad je rorl and fisttpll ljmp jns lret lea dec mov lahf jmp lret sub clc (bad) cmp inc inc outsl and aad fdivrs dec mov (bad) jnp mov cmp std pop sub mov jle sbb fstl xchg mov int3 test add out in xor jae push loope (bad) (bad) push sub enter stos icebp mull dec and dec push je les mov pop arpl cmp fisubr mov sub mov data16 push insl xor jmp es and inc mov pop xorb ja mov xchg mov imul cvtps2pd ljmp stc push jno sti jecxz push test pusha les std test sbb mov fmul sub movsl call ss jge cmc jg sti mov test push xor (bad) adc push jp sbb addr16 fwait into subb sahf scas mov ja mov shll sub outsb dec pop ja pop xchg nop sbb mov jge je ss mov and fwait inc sub das mov leave pop scas push (bad) sbb jg lods gs xchg (bad) loop cmp add aad adc cmp lcall and jecxz cmp pop call scas push sarb je and lds lods lds mov loope or cmp rolb mov cwtl insb or cmp push mov adc dec xchg (bad) loopne cmp pop mov in rcrb jne or idiv shr lods push popf xchg pusha rorb cmp jae and sbb mov mov push jle std les out out mov loop outsb (bad) mov movsb nop loope xchg xchg cs outsl imul mov jne add push xor nop pop pushl cmp sub add out sub dec dec das popa add dec rcrb stc nop icebp gs push xor mov mov mov add bound in jmp cmpsb jecxz orl sub shll or add cld mov adc mov and xchg out mov dec pop imul cwtl xchg ret ss inc xor repz das xchg rorl and pushf and jno call inc mov call xor mov cli dec addr16 test enter fprem mov jmp pushf push mov pop mov mov dec cwtl enter mov loope jb sbb and push fldcw adc movsl insb in xor xchg adc xchg out cwtl fucomip xchg aas scas jnp fldcw imul insl sbb (bad) jb xchg loopne cmp cmpsl fwait js push dec pop adc cmp addl cmpsl ja adc sbb xor sub out fwait bound push aaa add cmpl orl cmpl and outsl sub push test dec out in fisttpll jb jge sahf mov inc fwait jns mov add xor mov sbb sti leave pop or push or cmpsl push pop aas (bad) and cmpsl jle cli jmp repz jae fneni(8087 enter idivl push xor jae add (bad) andl add lret mov in popf mov loopne cmp fwait int (bad) iret popf pop loop aas mov add lds sub ja mov sbb lock inc (bad) push jecxz (bad) loopne mov push mov cwtl push or sahf ret ljmp mov add mov sub sarl mov jnp mov (bad) cmp test push (bad) jo pusha in sbb clc xchg jne adc adc leave daa test fmul icebp fwait dec clc inc outsl sti (bad) outsl in or scas sub pop (bad) movl sbb jmp xchg fstpl nop add outsl js outsl call and and subl test (bad) push sahf mov popf mov in outsb mov dec repnz or or sub xor pop push into mov daa cmp outsl enter and in inc or pop pusha outsl inc mov and pushf lods imul loope mov cmp pusha bound jo and push shlb inc in popa (bad) cld dec lea (bad) lock cli mov insl mov fs sub inc mov mov (bad) xor xorl (bad) pop popa ds mov push insl js xchg dec jne jbe shl dec adcl xorb in arpl push test stos jno (bad) pop (bad) xor push xchg pop (bad) and sbb lock ret cmpsb mov stos das popa das (bad) xchg and adc (bad) sub adc cmp shlb xlat lcall mov ljmp jg cmp or mov xchg les add sbb jmp jo sbb push adc mov cmp (bad) pop hlt hlt and mov pop (bad) xor inc pop sbb int push mov cmp int3 push call cmc stos mov js xchg adc dec add stos (bad) xor (bad) sbb mov stos aaa in and mov out dec les adc in int or scas lods popa lahf lret mov sub out dec cmpsb adc add icebp xchg dec popf dec mov add sbb xchg (bad) das or loope cmp (bad) mov stos movsl add mov mov cmpsl aas dec shrb std mov bound test jne xor and jge lds push add jp lds sbb sbb push or mov cltd popf push xchg cltd scas dec pop mov dec imul outsb pop dec adc cmpsb rcll jnp adc lea mov ljmp fist int sti or out xchg je outsl (bad) pop pop push shlb jns incb movsl inc das and daa cmc cmp into cli xchg test mov xchg aad sub imul in xchg sub es dec xchg (bad) fcmovnb lret fiadd repnz add pop inc add loopne les mov nop or dec pop in push icebp and and sbb pop xchg test cmpsl push mov pop mov cld cmp imul daa fsubl inc jecxz loopne sub pop fcmovu add int3 cli jo cli inc adc dec and lock mov cltd mov dec aas cmp push xor aas repz fmull mov push cmp push repz mov ja cmpb std jne jne ror jo sbb ret push (bad) (bad) (bad) or setnp mov js pcmpgtd xor jmp bound pop mov out lahf jnp mov sub enter clc mov xor xor cmp pop cmp push xor les fild outsb out adc mov jnp sbb push xor cmpsl (bad) popf rclb out jg sub push mov out (bad) out popa mov pop dec sub sbb out pop and jecxz xchg loopne loopne,pn add enter xchg sti pop pop ss jnp mov inc cld out cmp xor jmp add sbb xchg mov test aaa test sbb sar push pop pop shrl pextrw or (bad) cmp faddl cmp cltd in sub sub lret xchg sahf sbb fcoml je bound arpl loope loopne mov xchg xchg and das mov and repz or adc adc (bad) stc cmpsl dec add push jb xor pop sti lods data16 dec enter mov notl adcl movsb std xchg stos jnp cmp (bad) push cmp es scas dec or and fsubl lods lcall cmc int3 inc adc xchg lea aaa je (bad) pop cmpsl xor add lds ja lcall jns repz shrl pop arpl xchg (bad) jne mov mov sbb sar jbe cmpsb pop cmpsl mov sahf mov das push les sub xor xchg addb shrb insl lret mov dec sub dec rol adc and in fldl inc push add adc mov push loope mov mov fmull push push jl dec sub addl adc sti inc add mov xchg int3 dec push push dec push adc mov inc sbb outsl ds loop stos xchg inc nop sbb mov jmp push int add inc push aas out outsl mov sahf loop lret or dec out iret ljmp cmc scas mov mov ja lea sbb xchg xor or pop (bad) jle lret pop xchg pop je movsl popa fstpl out xor lret add cmc out jae enter lahf dec test cmp (bad) ds or adc std out ja cltd push mov add lret push or xchg mov cli mov pop push push loop inc adc adc shr sbb xor cmp in repz int3 and flds or jb pop xchg pop xchg repnz add xchg xchg push insb gs or pusha push mov mov adc in test inc movsb push fsts adc sub add lcall ret jg lahf (bad) iret lea mov xor jbe imul (bad) cltd daa shll pop pusha add fldt pusha xchg (bad) rorb ret leave push icebp mov out aas (bad) sbb lods add repz clc pop ret xor jg mov dec outsb mov addr16 pusha imul aas push out loop lea out lds mov outsb mov adc mov dec clc or xor mov rcll movsb ret fstpt shlb pushf adc push loope scas out adc mov cmpsb pop (bad) cli loop push dec sbb adc test rcrb (bad) hlt cli jmp call cmp pop outsb sbb scas ds and dec ret pusha mov mov adc mov aad add inc and mov add mov cmp xchg loopne mov mov mov sub mov adc jns in inc mov xlat popf jns sti adc xor std pop sti push (bad) lock cmp fdivrp xchg mov roll mov addr16 fisttpl pop dec dec mov pushf cmc fisttpl mov pop in popa push add not sbb insl pop jle push negb and jnp sub in mov stc cmp ss sarl movb inc data16 or pop cmp jns mov cmp and jns cltd shlb (bad) scas xchg pop push mov lcall pop adc cmc xor outsb stos jns mov out je push adc xchg or add sub data16 orl int3 dec es push lret (bad) xor pop pushf or xor mov cmp xor xchg xor sbb test adc lret subl (bad) icebp std outsb jne push and leave mov iret mov sahf outsl cwtl mov scas mov stos aam and ss mov loop cs cmp cmp pop in cmp out repnz sub into repz rcr inc adc aas or adc aas fadd mov (bad) enter in enter aaa jg sbb repz out gs out (bad) nop (bad) fcomps inc gs push lea add push push sbb and repnz xor popa fs mov leave mov stos sub push cltd in and lods addr16 cmp outsl inc and ds dec mov sub into sub push mov (bad) sbb pusha sbb out jle leave out mov es and jb out jmp lds out sbb test and std repz xchg xchg lods leave cmp dec jp add pop pop jb lods out inc lahf cmpsl out pop mov push mov jns jge mov dec dec xchg shr jecxz mov sar xchg shll sub sti subl mov incw xlat lea je mov std cmp (bad) cmp xchg sar jnp fwait mov movsb je mov add xchg add cli ljmp out jg jnp aam loopne xlat mov hlt pop mov or fcompl xchg jl inc mov leave loopne jbe mov arpl add stc lea xor ret jge sub jmp test idivb mov mov dec std mov pushf add jb icebp push sbb or cltd mov mov int3 (bad) jne or xor sub pushf push fwait in mov aas mov adc les lock jl rcl cwtl xchg and mov jmp cld dec xor into add and fwait in jl repz dec add js or test out add jg inc xor je fwait sub out dec stc insb mov or int3 add (bad) adc loop leave jnp add in inc nop ss in xchg mov clc mov cmpsl lahf test pop jge or sub movsb aam out pusha push clc icebp mov add insl add jae mov cmp pop adc sbb ret lods insb subl mov cwtl xchg int call cmp jb push insl xchg (bad) int call xor lea loope fsubs mov nop in mov jns push subb and add (bad) imul (bad) (bad) cld aaa mov rcrb cwtl daa icebp lret mov mov mov insl sbb lock idivl shrb dec or out pop lahf test fstl xor out stos fwait outsb pop in mov mov cmp les sahf dec jnp lret pop std movsb dec fnstenv jne sub sbb or lcall push mov data16 mov fldenv stos mov fnstsw mov into push out pop ret lahf sti or pop mov jl and scas add pop or inc add out mov and mov lret fs popa insb mov in aas mov dec pop loop lods pop dec pop rolb je mov fiadd and sbbl mov jo ret js dec sarb into mov adc add add cs dec fwait xchg jle cmpb das mov in add mov bound int mov xchg jnp in cmp jbe cltd dec mov inc xchg lcall aas stos cwtl dec lds sarl stos cli in repz int3 jge pusha pusha aam daa movsb pop xor hlt ret leave inc gs xor add imul lds cmpsb cmpsb push and icebp jnp inc clc push pop aad adc xor jmp jo push mov lods pop lds jo xor dec pop adc (bad) ja sbb pop or and dec test fs jmp stos dec cli retw lods mov cltd jbe mov out dec imul fisubrl dec xlat and rorb fdivs xchg xchg jbe lods test jnp dec cmp cld stos es cmc xor mov fimull lret adc push iret lahf mov les gs fbstp loop xchg jl (bad) and les jl inc adc int dec mov sbb dec aam cmpsb (bad) scas (bad) and cmpsl cltd pop push imul gs dec rcrb insl std ja xlat bound ja insl in cld rcl bound arpl fdivs cmpb dec shrb mov test mov and ror jl jb push push roll jno insb das lahf mov loope popf sahf (bad) push adc es dec lahf sbb xor mov subl xbegin add inc mov jbe cmp and cmp call inc (bad) mov sbb popa push add mov lahf pusha repnz or and mov push sbb or pop out cltd adc mov mov rol sbb push (bad) das je imull mov add retw add cmc addr16 or mov sub jno test push dec sub mov pop pop clc mov mov inc cmc cmp addr16 test fs daa clc imul dec mov repnz mov imul sub mov mov int and shrb addr16 cmc outsb jbe rcrb fistl cmp or mov sub sub push cmpl int3 pusha mov cmp cmp dec fsubrl icebp rclb lret add fs push cmpsl push repnz adc cmp dec cmpsb outsl iret fsubp dec inc mov push daa mov sbb or add fdivs in add mov pop mov mov xchg push add int3 add pop pop mov pop ret xchg mov std test push mov mov pusha (bad) mov jae cmp push mov jmp lahf int3 sub insb in js ret cmp (bad) in push xchg fcmove sub push jns hlt mov cmovb int3 pop dec push inc inc inc xor stos push xlat inc loopne lods mov dec pop xor mov movsl rcr mov sbbl adc lahf inc and call (bad) stc (bad) or fadds sub addr16 mov clc mov xor and fildl nop hlt jg rcrl add insb shr dec into clts rcrb repz loope das mov addb xor mov mov jmp push repz jl loopne ret push test lds fistpl int3 xor pop sbb outsb aad mov jg mov jge arpl fbstp jno jae rorb test mov fcomi pop pop lods jecxz lea jno mov mov aad push jge inc mov adc jge cmp push int mov cwtl dec in jo xor (bad) push cmp push jb and daa aas gs inc jecxz stos xchg lds sub mov cli mov pop sub aaa out fldcw inc in loopne push (bad) mov dec lret jmp call in xchg out push icebp inc adc fild jp inc jecxz popa or jmp jae rorb pop xchg jnp lods push mov jge jns jl out lds leave roll dec mov rclb sub jecxz sbb popa scas adc out sub push jp push call add jnp and and mov (bad) out push jnp mov iret out sbb test insl mov pop push dec je int or lret mov (bad) outsl push cmpsb test cmp cmp pop and test sub dec push or pop xchg fstpt inc pushf andl and and xlat mov psadbw fbstp cli orl pushf inc cmpsb cmp into daa push xchg push push cmp cmc mov xor jnp dec fdivrs mov xlat sahf jbe incl cmp loop inc daa push aas push int sub subl scas inc bound jb je loop sbb test imul mov scas clc divl out mov push out dec ret aam mov and lods mov dec adcl push incb rclb xlat insl mov leave xor data16 nop jecxz mov ror fdivrl in xchg xchg cmpl cwtl (bad) sahf mov sub movl jo or mov cs sti pop jg sahf cmc push rsqrtps aas hlt std movsb outsl sbb adc push jle mov push and jno imull js jg cmc jbe repz es mov out js jmp cwtl popf imul fsubrl xor xor mov shr push xor xor andb add or les (bad) testl (bad) mov or loope dec mov jmp push lret mov jmp repnz cmc lret loope add xor jae cmp pop cmp int3 cltd cmp push test mov pop movsb sbb push fldcw push dec fisttpl adc ja cmpsb ret das or dec jo imul (bad) mov adc cld inc jne push xorb movsl cli lods arpl push add jnp lock jg aaa and jae lea lock and jne inc inc adc inc test (bad) mov jg mov cmp fdivl jbe daa inc sbb dec sub sahf das movsb dec and push loopne jbe,pn jns lock dec loop mov adc sbb ja sbb pop inc les stos aaa push sub push push push xlat cmp das aam enter add cltd pusha pop sbb out jecxz clc mov aaa fcomps xor iret rorb xlat mov arpl dec jns lea inc lds shrb sbb cwtl aad inc pop inc inc fmuls mov and and mov pop pop mov popa mov xor lods xor (bad) ja in js aad outsl loopne jnp sbb mov leave or jl xchg and leave lahf mov cmpsl dec cmp stos xchg jmp inc (bad) lcall push push mov sbb jmp cmp (bad) loop and insb stos or mov cmpsb jge nop inc lret das iret cld mov jo enter jmp add cli mov sahf pop jbe mov mov push mov cld push add stc cmp xlat pop leave out push and jno mov pop xor repz mov adc mov and loope fist dec test mov stc mov mov popl adc ljmp imul mov or xchg xor xchg cmpsb adc arpl in push mov movsl dec cmp push loope (bad) push ret sub dec push imul pop xchg (bad) imul xor dec sub jns lods (bad) sub push sbb ret lods sub or rcl call or (bad) loop je mov cmc mov sub push adc lret pop imul popf out xor enter (bad) cs xor fwait push or mov jnp sti inc dec test (bad) push fildl inc hlt mov loopne mov int3 (bad) movsb and add xchg icebp add das sub jp sbb (bad) in fcoms je adc sbb adc xchg lds jl,pt sub aaa inc adc cmp jl scas outsb push jb subl ss in or cmp mov pop stos fstpt in je clc mov loope push add sti (bad) jp inc push push add pop sbb in mov int call movsl inc add out mov popa stos popf int (bad) lahf mov fs xchg mov jo loop and xchg fcmovnb xor or or (bad) dec popf xchg push inc lds dec inc pusha addr16 sub xchg dec jns cmp cltd push test cmc movsl cmp dec in out mov inc stos int3 cwtl ja sub add jmp add mov adc icebp dec loope mov std int adc xchg mov jae lcall repnz xlat (bad) mov pusha pop mov xchg insl inc mov cs cmp mov ljmp stc mov (bad) nop insb cmc outsb mov push push scas pop (bad) jo pop out lcall inc fwait pop add and pusha fldt fistl xchg aam push mov (bad) ss imul insl mov imul or and mov fwait pop repz inc xor mov dec xchg xchg mov jg sbb xor movsl push mov addr16 mov push mov ret pop sub sub jo adc dec int fldl2e pushf insl ror inc mov repnz cs stos je sub lods push popa lret push or sahf adc pop sbb lock push cltd mov ret pop repnz lret test add xor imul shlb adc add es pop add repnz bound mov push je imul scas add pushf mov dec cltd jne push insb pusha rorl ds adc out dec dec lret (bad) xchg ja aam xor jno jnp inc aam xchg or add out or pop xchg add jmp pop add insb sub sti les lret or jl adc cmpsb ret ds mov js sub (bad) sub bound sarl inc ss dec jo fldt flds mov aaa sub jp pop das pop je cli shrb pop nop dec dec popf ds divb fwait es js inc mov push jnp sarb das xchg inc mov fsubp or mov cmp das jecxz stos sub clc jae mov std cmp pop adc cmp add int3 xchg xor inc cmp sbb push xchg xor in shll jb fsubl jp xchg xor mov das inc (bad) push (bad) fistl rcll xor pop adc clc sub sub push add mov fdivrl (bad) (bad) (bad) dec (bad) (bad) mul or sub fcoml lods loop mov lret jno mov cld jae xchg negb sbb mov cs out out aad push inc add pop or inc sbb cmp jns hlt jle or lods fsubl xor lcall (bad) mov ficom pop xchg and push mov popa test adc dec add out (bad) stos inc mov adc xchg insb push inc ret push scas pop jbe fistl fsubr xchg popf jbe loopne aaa pop xlat jmp cmp lods imul or xchg in push sub jb daa or jmp shlb push popf fdivrs call xlat fstpt dec mov mov push (bad) (bad) aam sbbl jp ss insl add pop push test or rcr fcompl push jecxz cmp aas mov jne sub or out sbb (bad) insl out and cwtl loopne jae,pn xchg lods pop pop dec push push xchg mov dec hlt cld sbb test mov scas mov inc imul es hlt sub ret fildll jb or xchg add movsl cmp xor loope push push and cmp push pop outsb and cltd loopne lods iret xchg xlat es iret jecxz fisubr iret xchg sub aaa (bad) (bad) xlat dec fidiv push mov and repz mov nop mov and das push push pop push cltd sub fwait xchg outsl stc dec add push aas jg out je adcl testb push dec jbe add cld daa push xchg xlat andl cs sbb outsl in mov push out mov and inc mov cmp ffreep inc (bad) arpl cmp and cmp sbb in les fild and jecxz or pop enter adc or nop pop sbb xchg das loop ficomp das mov cmp enter push lods rcrb sub lret mov inc addr16 lret mov mov mov dec subb dec shrl jg shrb jmp jno fist stos xchg sbb int inc push or sub mov cmp lds (bad) lret arpl inc insb clc outsl cs shrl stos xchg outsl push ffreep cmp cmp mov out sbb icebp mov xchg lods pop jns not arpl adc mov div in sub outsl mov or lock push das jg es mov sbb sbb xlat sarb xor int3 mov enter pop mov lds xchg cs jbe call xchg adc push je sbb cmpsl push sbb adc add adc jnp xchg sub mov dec imul mov jae cmpl test push int3 sbb cli js add pusha imul clc addr16 daa lret pop out xchg cmc (bad) cmp cmpsb xchg adc int pop test ljmp jbe jmp xchg pushl arpl popf sbb cld repz stos loop ret push call sahf push pop loop push jle out stos xchg fs xchg hlt movsb fisubr fisubr aad icebp loope mov mov arpl into adc jecxz or sub mov addr16 mov adc iret inc dec stos jb call xchg lock fs call mov xchg rorb (bad) pop adc mov or mov push push rcr pop outsl jg add stos shll (bad) mov loopne add dec idiv mov xchg stc sahf (bad) cmpsl in lods in out fsubrs imul xchg dec add out aad inc sbb movhps pushf push cmp jo and jb std mov cmp pop imul xor inc pop outsl xor cmp sub mov out leavew dec xchg sub push test movd (bad) ja sub and imul pop pop jne dec push scas jge or mov je jmp in mov arpl mov mov ja arpl inc mov jle jl test xor xor or rcll aam mov jnp lret add dec xchg cmp inc aam or in rorb mov mov leave ds call adc pop cmp in (bad) mov ret imul or jns jmp iret pop sub jl push lds outsb notb jo xchg pushf adc sahf lcall scas sub (bad) or sub inc or sub mov jbe mov jg mov int3 (bad) pop (bad) loopne and and test xchg enter (bad) jmp sub mov mov push xchg push scas sbb lock mov scas jns scas cmp add subl mov (bad) jbe imul cs ficomp dec mov ljmp (bad) adcl cmpsb pop (bad) in loopne mov jae mov flds stos jg xchg shrb jp sbb adc rcrl sbb mov jno repnz lods lock xor lods push (bad) dec lods outsb insl cltd push paddw sub push mov sub inc push aaa divl test or test test repz inc xor or and mov mov jg mov lret mov addr16 aad leave outsb lods mov mov cli insl xor insb adc jp and mov leave cmp sbb and xchg dec push cmp ja or sub scas mov aas mov lret je cltd jnp pop lret lret outsl out arpl nop loop inc ret (bad) mov fisub ljmp sub in inc xchg jnp jns fwait pop cmp inc loop imull jne mov fstps inc pop pop push add js enter pusha mov mov jno popa dec pop push jae push insb subl mov fdiv je sbb push js mov loop xchg loope and sbb in fist lret mov fwait jo push pop or push aad pop adc lahf push arpl stos movsl sti mov cmp or dec xchg and mov push inc pop cmp xchg aam aad les xchg cmp ss pop cmp es mov cltd inc xor hlt add sub dec cmp xor pop inc fdiv dec fmulp imul sbb mov lea xor in cmc enter cs (bad) leave xor xor dec popa mov pop push addr16 xchg cli jle or jecxz cmp int3 sbb mov push imul pop lods sbb and mov loop shll xor xchg test scas int push int cmp dec mov sub push stos xchg sub faddl xor movsb loope (bad) aam pop roll cmpsb sub adc leave cmp aaa aaa mov je (bad) mov (bad) (bad) out xchg test jbe bound aad or xchg addl inc inc ja test adc dec ret stc clc enter adc sbb dec push push push mov cld sub push mov sahf xchg cli jp mov and push aam jmp pusha jle push cmp adc sub jl xchg addl jle movsb arpl (bad) pusha push jno (bad) shll (bad) cmp push ret fs cmp lods (bad) scas negl dec xor scas mov cmpsl aas dec in arpl test bound add xchg lret xchg lret pop sub jne rorb scas mov movsb sarb outsl clc xor adc mov aad pop and cli xchg (bad) cld stos and cmpsb adc paddsb shrb push mull imul cmpsb outsb flds dec das push mov inc sbbl sar stos or lods add ljmp lahf jo js xchg add mov lret sbb lock mov (bad) mov (bad) or cmpsl roll insb mov sub dec cmp (bad) xor addr16 mov xchg and mov je iret inc cmc pop je mov jmp add and gs dec xchg mov dec shrb fdivrl jnp mov leave and inc ljmp (bad) xor fnstcw pop repnz lock inc popf adc les mov mov sub push popa inc push test (bad) repnz mov mov cli xor inc mov inc mov push inc xor enter ss mov ss xchg push (bad) pushf mov lcall leave insl sahf jne flds dec mov jbe xchg cld push aad mov in push sbb hlt test fldcw test test dec push mov jge pop lret mov aad movsb or sbb mov cmp lds (bad) lret scas sti inc xor mov stos mov cwtl lock sarb sbbb in in xchg lock fmull les dec dec sbb nop mov lret mov mov xor fsub mov sbb jg jnp xor daa iret sbb mov push push ds (bad) xor les dec fldt pop movl and aad lock add lret and pop ret pusha gs insl (bad) or out flds push sbb and out cmp lret aam xlat stos push xor adc idiv iret arpl imul pop cltd lds inc inc xor xor je imul aas adc xlat xor lret dec fcmovnu dec out sbb xchg in fistpll mov add pop inc inc iret jp add adc add xor dec in jnp aad (bad) in loopne das mov dec in push dec jmp mov (bad) je cmpsb push call jns cmp dec pop (bad) jbe shrl sub stos jo add dec push ficomp xchg lret inc push cli push aad das outsb arpl fdivr cmc aas mov insl xor mov lcall sbb sti in push add xchg out inc popa fstl mov mov push or cs insl mov sbb fs cmpsb mov lret mov add pop cmp add sbb or mov adc push push in in cmp lods xlat scas dec test adc inc ljmp or pusha (bad) imul jl cmp movsb and sbb sbb stos test icebp pushf test and add and or mov xor fcmovu xchg adc jo fbstp push sub call aas pop nop stos mov andb in cmp add outsl testb pop pop movb xor test in xor or mov (bad) sti out and je daa sbb jns stos xchg aam cmc adc xchg push mov out aam rclb mov sub pop notb xchg mov jo lods test rclb and and adc in loopne cmp adc push (bad) mov sbb lahf sbb mov pop lahf fdivl mov or mov mov les add mov push sbb sbb cmp fmulp out aam cmpsl hlt or push subb jp lret aad inc outsb ret add lods mov mov lret sbb fnstenv (bad) cmp outsl inc jge pop xchg mov movb clc dec push imul fsubl repnz cmp jnp add cmpsb push and or jnp push loopne (bad) lock (bad) loopne cli das imul adc dec mov mov out jbe,pt dec cmpsb adc out push test push mov enter (bad) movsl test mov push cltd pop and cmp mov sub cmpsl js sbb or sbb adc mov das jge mov lea jo and in frstor stc stos pop shrl mov fcompl cmpsb xor dec lods jae in stos or cli (bad) cmc mov hlt mov repz pop sub add rorb jmp push mov test shll out xchg xor and int3 ja out xchg gs mov (bad) popf dec mov les or int ret out int xchg (bad) je mov les addr16 cmp lock or lods sti jbe pslld mov xchg fcoms scas bound cmpl cmc ret inc fbstp pslld outsl icebp (bad) data16 jne,pn xor scas sub mov stos add fimull loop in push inc pop into fistl sub pusha jle mov outsb pop dec pop cmpsb xchg inc lcall xchg mov ss fimul (bad) nop cmp fist mov sub rcrl mov lahf mov arpl sbb rorl gs xchg jg,pt fcmovbe rolb lea dec data16 mov adc mov loop push pop lea cmp dec mov mov push and xor xchg jae test add les add pop jb fistpl les ror sub and jp or dec ja xor mov mov adc icebp data16 pop jmp ficompl lock fmulp (bad) lock into xchg sarb movsb add gs mov in arpl leave jge (bad) loopne test push cwtl pop shlb jecxz jmp stos sbb in pushf (bad) jecxz nop shr and push pop and pop adc jnp loopne pop in mov or lods sub pop inc (bad) lock xchg in dec adc adc in add push or fsubr rcrl and pop aad mov insl sbb xchg or js or pop (bad) insl (bad) mov add xchg dec inc scas dec xchg xor test xor pop jge pop js sub imul or out enter jb ret bound mov pop fisttpll cltd add daa into pop mov or cmp pop js scas insl sub (bad) je cltd pop push mov xor push jns data16 xchg jae mov add int3 jp xor test or mov pop sub cmpsb flds add sbb xorl mov cmpsb xchg sub inc call cmp imul pusha sti push push and jnp pop pusha jp mov xchg decl jno or inc cmpsl adc adc into push ret jle push xchg push stos mov cmp (bad) imul (bad) sbb and loop adc incb push jmp mov and push int3 cmp mov scas fbstp cmp push sub cs mov or push aas int3 clc les jnp leave andl outsl mov leave pop xorl push or aam adc data16 icebp ljmp pop test pop sub add dec out push xchg test adc push jnp cmp cmc out xchg mov in outsl aas ficom out or lcall scas in push xor xchg shll jp adc (bad) jne iret adc cmpsl lahf (bad) aaa sbb jge pop sbb (bad) adc or leave je xchg xor (bad) ret out mov sahf adc mov mov xor sbb mov je pop pusha je stos sbb jns push jmp hlt inc jo dec lods pop fstps sub arpl xlat adcl inc cwtl (bad) xor xor dec lock gs jge or or repnz cmp mov std inc loop scas and pop cmp loop dec push les fs inc or sbb fcmove movsb mov dec (bad) divl adc xchg (bad) or mov les inc and push pop addr16 lcall mov insb lret mov or popf shr pop call loop cmp and lea dec cmp fisttpll push enter or mov sub pop test push pushf inc lds or add cli or fadds imul jle inc adc push orb pop fnop or out scas out imul xlat xor inc xor inc jne mov cmpsl mov js and jl (bad) popw pop fstps clc cmpsl sub or inc sbb (bad) mov fisttp fmull push je into das adcb cltd daa mov fnstenv call cs fistp fidivrl sub xor dec or cwtl ret push pushf mov mov out (bad) sub cmpsb xchg cld inc lods ret mov outsl decl lea cmpsl lods out es inc pusha xchg lods mov dec and xchg and dec aaa lret (bad) sti add aam inc or stc mov cld xor push mov shr sub sbb cmp stos lea mov int jnp jmp mov (bad) js fidivrl jnp int out sbb gs cmp adc in cmp jl jae sbb push das cmpsb popf mov and imul sbb mov push pop cs leave cmpsb hlt push lock jae mov or cmp mov inc jne (bad) repnz jmp dec push outsb mov lods lock add adc lahf xchg sub pop cwtl xor sbb (bad) enter psllq call mov sub xor pop out adc and jmp push cmp imul and arpl imul scas stc arpl movl scas test aad out stc js icebp sti adc sbb push insb mov adc mov cmc test jnp and sbb mov iret fadds rcl hlt lahf xor out cmp repnz and cmp mov (bad) push lret sub lret cmp (bad) add aaa lds loop sti daa pop sub pop pushf push loope test aaa cltd movsl insl loope je sub jmp test pop and in push push xchg scas (bad) cwtl inc add sahf xchg test (bad) cmp jnp iret xor rolb sbb or xchg aaa jbe out rcr jp andb lcall xchg and rorl fnstenv jo scas fisttp sbb popf jl pop into xlat sbb imul dec jae xor (bad) sahf aaa pop or xchg lret rcrl outsl repz aam dec fnstsw mov cs fsub jl idivb andb jbe inc adcl inc push int stos int pop sbb pop lahf popa mov dec aad and xor pop pop lcall and jns insl adc insl or fdiv adcl adc hlt pop xchg out push lds scas jle mov test or push xchg jge insl in ss jo rcll jg pop push stos cmpsl xchg xchg sahf mov js sbb jl xchg daa rcr test add arpl fdivrl inc dec js std (bad) jae cmpsl xchg aaa gs sbb imul es add into popf (bad) ss jg lret fildl dec adc add aad mov add mov xor (bad) cmp sub jg mov inc addr16 xchg (bad) pop cmp jecxz jne pushf mov and popaw xchg xlat lods inc test dec loop push outsl or lret mov loopne and stos fwait mov fidiv dec in jmp jne pop movsl in mov rcrb scas lret rcll je cwtl jge mov adc movsl arpl fstl mov sbb or fstpl mov add inc or dec and mov inc jg ss mov repz out stc cmp scas repnz mov xchg out push xchg cmp cmpsb push sbb gs mov aam ret aam lret ds inc std xor sbb push add and mov dec lods jbe xor (bad) int3 jmp mov mov bound cmp adc (bad) push imul sub clc insl lahf push fnsave lock mov xchg add xor cld and testb sub add clc roll push je in sbb push outsw movsl imul push lods jmp add dec arpl sub dec nop xor cmp mov (bad) mov dec fcom test fsubp incb sahf in out push (bad) into or test aam pop test popa dec cmp stos or cmp imul mov mov add addb scas fisttpl pushl dec sbb testl lods movsl and mov xchg push (bad) dec mov js fldcw pop mov insb dec jg mov sub cmp loope out fnstcw mov and mov (bad) movsl stos nop roll pop xchg imul call mov jne (bad) in insb jp push mov pop adc and mov in out enter cli (bad) pop out lret sarl jnp aaa adc mov ss int pop fldcw sub fwait je xchg inc popf pop mov loop xor (bad) jnp dec pusha adc xchg jle xor adc and and sbb xchg cwtl lcall mov jge call shll test dec adc bndstx arpl in ret fildll scas jb (bad) inc inc imul push (bad) (bad) rcrl fbld fnop rorl dec jo stos and mov fidivl and sub cmpl aad (bad) inc xchg popf push out mov mov cmp mov push aad or dec imul (bad) into ja fwait jg dec jp cmp mov fcomp mov int3 xor ljmp and mov mov jecxz xlat rclb or (bad) mov int3 out pop sub adc jl dec sbb scas pop pop nop inc mov push std push daa jae dec jo out sbb push fs pop cmp aaa xchg mov sub scas push fsubr je push scas adc adc mov fbld jne daa in ss xchg test pop cmpsl je xor mov rcr out add pop out imull sahf in mov adc lahf ror and daa out jle jns and adc popa loopne scas jo insl jl pop mov (bad) mov inc dec mov jmp out cld je gs lret xor fadds rol xchg mov mov and rcrl cmp (bad) and mov lahf fnsave xchg mov lcall jmp (bad) cli loop ds lcall out shr mov bound repnz xor mov mov out push inc push jge fadd push sarb xor outsb cmp mov (bad) mov idiv (bad) push int jle cwtl sahf popa or cmc clc or pop add dec and xchg sub push adc adc cli jecxz mov or cld roll push insl (bad) xor inc sti mov lds pop xlat cmc aam xorl sbb std test (bad) xor jmp mov loop and cmp add ljmp clc mov adc stc lods mov aas cmc sbb add or in sbb mov fiadd bound movsl (bad) mov jno mov jl clc test or cltd xor repnz rorb repnz cs mov arpl pop push mov lods stos cmp lahf sbb test push shrb dec stos cmp lea daa push cwtl enter (bad) jp loop push test sbb ja fistp xchg xchg cmp aam je fildl adc hlt mov xchg (bad) (bad) stos jle rcrb adc ljmp lahf inc jl ds and mov jae das stos (bad) jmp call fadd jl mov ret enter rclb rcrb push mov int addl cli jmp pop int3 pop push jp das arpl jge push push push jecxz addr16 xor push test imul icebp pop sub popf pop aas mov lods clc inc hlt aaa into scas mov mov out push imul movsl push (bad) pop pop add sbb push ss add push (bad) xchg lcall jl shrl xor mov push sti pop xchg or sti dec das fs mov ds add imul push xchg jno sbb movsb bound add ljmp shrb mov ja repz popa stos in mov xchg sar je jge sahf mov and test push dec add or xchg inc push or fsubl adc mov xlat into das inc shrl jge test cmp pushf scas sbb ss and add or (bad) xor les mov lret js clc in (bad) test sbb adc mov (bad) or lods repz notl mov pop test dec mov jno (bad) and or sti outsb enter (bad) jge jmp in inc push sahf mov jp and loop inc mov add pusha mov je,pt mov into cmp xchg test sub pushl scas (bad) icebp sbb call es mov inc pop cmpsl cmp lods loop push jnp jno icebp add lahf cmp sub pop sub jne inc fnstsw mov jl adc mov (bad) lret sub jl xchg pop dec cmp ja enter stos dec (bad) repz pop xor adc jl or jle fs adc mov cmp lea inc cmp fimul jae jp les adc sub mov fcmovnu adc dec sti and push das (bad) rcrb adc test scas mov inc sub sub xchg fdiv aad stos sub jle mov push sar push and ret push out stos lret stos aaa (bad) fnstenv in (bad) fnstcw cmpsb in dec xlat popf lea push aas mov sbb sarl outsl xchg sbb rcl push mov add xchg scas mov imul test add out addr16 fs mov in cs lea jb nop cmp push call dec ret push cmp jae jecxz xchg out jge add xchg mov lahf push ljmp xor adc cwtl sub pop mov inc xchg xor xchg xorb mov xchg cmp ja pop mov loope lahf loope dec loope and pop clc mov xchg (bad) xor mov cwtl or mov xor pop and in mov outsb push jge loope jb (bad) cwtl mov pop mov push int3 sub pop dec rolb or xchg aam lea (bad) mov add lea cmp adc jb fs cmp cmp pop daa sbb push sub sbb orl add leave xchg xchg add xor mov icebp test adc sub xchg subl ja js in aam cwtl sbb loop add shl int3 loopne adc lds cmp loop sub xchg ret lods int bound ljmp push inc push imul jecxz mov (bad) leave mov (bad) leave add jne bnd daa ds mov inc mov fildll cmp mov xchg dec push and mov mov lcall sbb and push inc jne or jne ret jecxz mov pushf inc scas data16 cmp mov stos testl dec popf and mov lods in ficomp mov sub loope sub push xchg xchg cmpsb lea test cltd hlt add or jmp lods pmaxub test pop inc dec cmpb bound mov mov dec arpl inc stos mov xchg sti xchg cltd cmpsl data16 or cli dec dec test sub jno xor sbb out mov cli or loope sbb mov ror lea jg int3 out or xchg adc add adc ja scas pushf int3 ljmp add mov dec and ja ret in add inc add mov in pushf push gs test push xchg scas cli std xchg xchg imul cli or fwait pusha adc loop mov aaa js cmpsb mov mov mov mov mov or jo jge (bad) (bad) int3 push sahf adc mov lods xlat add jae popa cmc shll push pusha js movsl cli inc stos insb scas loope mov cmc scas add mov sbb cmp xchg xor push mov divb mov mov adc cltd je add test xchg cld subb mov pop test cltd fwait push push push xor push (bad) loop fld fiadd and cmp mov out je (bad) xor sbb or jae mov stos out test push stos mov stos lret orb push mov push sbbl push les insb jno inc add sub push fcoml notl push outsl mov dec in imul adc inc (bad) shrl xor xchg mov hlt mov insb ret xor push mov out cmp dec cltd into lret sub pop dec das sbb mov cmp sbb in cmp lods cli mov and cltd fimul imul loopne prefetch or insb push sub aam (bad) es push (bad) cmc push gs notl jb loope adc les leave xchg vpcmpeqb (bad) mov loope scas sti jg sbb daa or mov sbb cmp stos movsb fdivp or sbb mov bound out and push xor fwait push jno dec mov and in call into (bad) ret or mov mov dec scas and mov inc insl mov loop mov jmp ds int3 adc (bad) leave xor inc xchg ljmp xor insb xor call mov das dec and and xlat xchg or ret inc sbb mov push add loop leave aam shl loop movsb rcrl lods pop out gs in pop add adc mov ss dec sbb in mov cmove gs cmp fsts jns nop stc xchg out xchg out jmp loop xchg repnz js rcrl xchg fistl sbbb into std cmp fdivr sar daa sub adc (bad) in or add loop or and pop pusha fldcw leave in jge (bad) xchg sbb sub into push add movsb sub scas into mov aad std divl test and ja fimull inc add aas adc out xor push push and mov or cmp pop and call xor (bad) mov cmc push mov pop mov nop sbb adc pop fcomip pushf mov aam mov (bad) addl mov roll xlat scas mov xor and daa mov imul cmpsb fwait adc ffreep or repz jne repnz ret pop add int call inc call aam mov sbb lea loopne sub es or insl ja push xchg jg pop cmp bound pop inc cs int3 scas cs add cld add es pusha mov lock mov out xchg mov loopne gs push mov mov adc cld sbb in fisubrl and imulb xchg movsb adc mov inc jnp in push xchg dec sub cltd std push pop pop fldl cs jg inc inc mov mov dec cmp mov fstl dec add or sub push (bad) roll mov mov js push lahf or mov xor ljmp and rclb push pop (bad) xor test insl les mov insl push test aaa add rcl pop out outsb inc scas push push jl xor sub adc mov mov mov cmpsl loopne jp clc dec xchg push xchg or cmc xchg data16 pop rcrb xchg negl daa fmuls fwait popf (bad) mov adc mov mov and lods sbb push cmc test add hlt scas cmpsl mov add movsb or add mov and mov push insl xor inc mov icebp in js pop pop lods insl pop or sahf jb adc jo ret mov push jb mov ja cld and push mov xchg dec and xchg mulb sbb mov xlat and mov cmp xor insb push mov dec (bad) or cmpsb jp cmp mov xchg mov jp popa daa jno hlt cltd xlat stos pop mov cmp (bad) cltd lea mov lea dec push sub pop in mov push out inc cmp pop xor loopne loope jmp lret cld pop data16 jecxz (bad) outsb es les adc or sbb jnp jo mov data16 data16 jnp test movsl xchg or adc xor (bad) mov cs xor jo dec mov add call repz dec lock add fnsave sub (bad) pop add mov inc mov je push inc adc in xchg xor in mov decl (bad) xor out push and jle (bad) push xor and mov rclb xchg insb dec (bad) stos cmpsl fs dec popf stc (bad) sbb mov cmpsb aad neg in (bad) test or sbb pop out xor cltd mov mov shl ret ffree and inc enter inc cmp push or mov imul cmpsl cmpsb ror ljmp push mov xor nop fs pushf sbb fisubrl lret sahf xor dec fsubrs mov mov pop in popf cltd sahf jae out pop (bad) out stos bound jns jl or xchg lods roll fildll jg (bad) dec adc lods insl mov mov mov cmp stos xor push and mov pusha ror sub mov out in push les or mull inc mov or pop out in add push stos icebp test (bad) jno cmp mov icebp lock ret lods cwtl stos ret and and das mull xchg dec pop scas sbb loope jb das dec sub rcrb enter mov jmp mov mov (bad) push scas add sub imul shl xchg mov lret enter js adc adc adc rorb sub push lods sub sub xor jl push push xchg fistl lret inc fbstp pop xchg lea or lret aad xor fs outsb rclb jnp test adc or push (bad) cmp lock pop inc imul jne cmp icebp sbb inc mov popf (bad) xlat ds lods push inc loop jmp stos daa loopne daa mov stc ja sbb dec (bad) pop or adc loopne enter push int3 xlat mov mov sub fsts xor inc adc jb fstl stc or jae es xchg dec and sbb mov test pop inc xchg push (bad) call or push dec dec xchg pop arpl xchg adc (bad) cmc imulb fwait js gs lods lret push xor adc mov xchg rcrb cmpsl add shl xchg cmp jb or sub inc or scas addr16 dec or sbb dec gs cmp or lea push mov dec popf fistpl mov cmpsl mov decb sub dec add loop imul aas push cmp outsb outsl enter ret jae jne jmp cmp xchg mov push xchg outsl out js aas jecxz hlt adc (bad) aad test inc push jmp jno jno ret or (bad) divb int3 outsl ljmp pop adc test mov repnz scas lds fadds dec in cmp mov test jmp ja (bad) jmp inc push scas mov cmp add icebp pop push aaa js fwait repnz mov js daa jge and pop xchg push cwtl sub lods sub cmpsb fcomip sub lods movsl sub stc inc test cwtl adc dec lods mov in jle test dec cmp add push adc xchg sbb insl xchg stos in sahf pop hlt cmpsl sub insb pop popa mov imul mull cmp push mov add mull fisttpll jmp cmpb (bad) lret xchg lock (bad) jl (bad) iret mov mov pusha movsb xchg lea sbb enter fist jge fmull insb f2xm1 xchg pop popf fs sub dec sub mov xor das pop leave mov mov hlt push or cmp hlt dec lret and (bad) push stos sbb mov jae jg sbb mov jecxz jecxz adc ja pop mov or std jbe shl pop pop pop pop push clc or jl iret and pop adc mov add ror add dec inc inc mov xchg mov cmp xchg jns cmpsl push xor (bad) or inc or mov push inc or out or and xchg pop scas inc push add cwtl fstsw jnp xor xor repnz mov jge pusha pusha lods cld xor jg movsb inc and fwait cmp mov dec lret orl into gs sahf xchg adc sti rcll in sub push mov outsb stc inc fild stos fmul cld loopne sahf xor pop arpl ret xor xchg (bad) je movsb ja leave xor ret (bad) lahf cmp fwait and fiaddl lods imul fcmovnu sarb fidivl inc jno icebp (bad) addl jmp lcall and lcall call ret push mov push mov mov testb sbb cmp imul inc cmc ljmp fyl2xp1 (bad) lcall add dec cltd mov push std dec test add push daa mov mov add in stos int3 mov test add sbb pop fisubrl mov nop push inc ret rorl (bad) jne sub cmp xchg out sub push ret data16 jbe push push jae fisubl inc xchg je in nop mov movsb fadd cmp add (bad) scas outsb imul add cmc mov aas jno loop mov xchg xchg lock rolb ret jb insl lcall fstl (bad) and shlb jmp in inc sbb xchg inc int out adc lods jmp sub push push out cmpb cltd pop cltd lret jp cmp sub out aad in rolb sbb and sar out ss insl test cli cmpsb inc fmull ljmp clc sub push scas or xor xchg pop dec lods sbb xchg jl pop pop or sub mov cli pop arpl sub xor jns push pop stos data16 jmp jmp inc jl lret lods jmp dec jns mov cmp outsl dec imul pop sbb sbb (bad) (bad) jb or daa dec xchg scas cmp add fcoml nop je ret cwtl pop stos sbb sbb mov clc dec fsubrl jle cmc imul cltd std movsb sub aad mov add (bad) fimul mov (bad) mov gs leave pop pushf insl or in cld mull push xor dec inc sti rep (bad) pop stos out js,pn leave xchg sbb jmp mov mov sahf (bad) pop aad call insb mov roll xor dec xor outsl sub mov inc pop mov and fs movsl shr lret movsb mov aas (bad) sub rolb sub mov mov inc add mov pop pop add inc mov xor test ret in into xor jge jg and jl adc ret sub sbb pop gs and into nop bound dec mov lcall pop and js in pop adc sti push push mov jmp mov mov add adc xchg jge jno cmc adc in xchg or lret push push das flds push xor xor scas stos loop xchg mov cld lret mov xor lock xchg (bad) xchg cld mov das mov mov (bad) vcvtss2sd or or js or (bad) xor push mov icebp sub addr16 add cmp cmp add cltd out add pop notb xor bound inc inc cmp out inc loope jl inc imul sarl pop fistpl inc or xor mov (bad) test and call leave fsubl aaa jecxz push mov fbstp mov mov inc and mov call lock mov jno mov sub (bad) stos cmp std sub addr16 mov (bad) test adc adc mov mov loope jle dec dec outsl adc or adc ficompl add out dec mov cmpsb popa mov pop (bad) xchg or je inc out and cmp rcl into insl xor lret push outsl mov mov aad lds in inc sar pusha jnp aam repnz (bad) incb push inc cmc mov mov mov gs clc int enter jae popa push nop test push xor xor sbb int out jg mov push stos je call cltd lea scas in inc xor arpl mov xchg or fiadd sbb js sbb pusha ret cld xor jns popa gs dec jb jecxz test sbb inc pop aam (bad) cli mov inc imul jge subl dec push adc adc jl jb push or mov jns roll das jbe xchg push jae jl stos int pop dec and movsl (bad) fist arpl cmp sub imul rcl std add lret fidivrl pop lods xchg cmp test mov jecxz sub clc sub xlat add mov fs out loope pop dec mov xchg mov shlb xchg daa ss cmpsl call das mov sti pop adc sbb xor inc push scas sub mov push push in lret xchg insb imull rcrb (bad) addr16 or or inc mov mov sub pop or push addb (bad) jno jp into repz xlat push jo stos adc adc sahf outsb int jae insb insb mov in mov cmp xchg xor xchg popa call adc cs scas stos mov inc push jne fdivrl xchg cltd xor inc (bad) hlt scas mov leave aaa stos sbb push jg sub fistpl mov mov mov iret xorl pop mov cmp bound nop xchg mov fild (bad) leave inc into out out loope pop stc xor cmp add xchg push bound loop inc jbe es pop xchg jno push fdivr sbbb add (bad) mov std mov loope out mov dec mov cmp mov push xchg adc dec lods push mov adc or fisttp adc das xchg in sbb movsb (bad) daa xor or mov ljmp pop fucomip das pop cmpl in mov inc (bad) lea xchg xchg bswap pop and inc sub cli jb icebp (bad) or mov inc adc jp mov inc inc add mov cmpsl popa mov xchg mov sbb jp divb inc pop clc push into or dec sti negb push outsb mov pop sub xchg aaa scas adc push or (bad) xor aad push or sbb scas jecxz cmpsb cmp push inc movsl movsl mov fcmovbe gs cltd cmp jle mov dec clc jnp and cwtl push movsb fucomip mov test mov mov popf xorb repz mov sbb arpl fbld mov loop arpl sub sbb xchg adc sbb inc add sbb ja inc loope cli clc pop cmp in inc lods xchg pop sub add dec jae scas pushf adc scas add jge (bad) insl push dec insl push loope adc xor mov or out fisttp xchg rorl xchg jecxz outsb (bad) negl ss mov (bad) and enter mov inc adc dec add sub (bad) aas int ljmp dec push mov (bad) repz sub scas pop (bad) decl (bad) jb inc sbb xor xchg hlt xor jle ret cmp mov adcb xchg lock dec aas andl mov jle js,pn jg cld xchg pushf nop dec imul xor xchg clc lahf pusha lret fucomi jb sub std out sub rclb out mov sub divb test sub sbb pop adc or out or push lods lahf sbbb and inc add add arpl fimull addr16 leave add fwait popa fildll jl sub jl inc mov jno xor stc cmc addr16 ljmp dec (bad) mov (bad) lock or sbb mov (bad) pop jg jo test (bad) les int3 push sbb and mov nop stc jne sahf movsl add dec mov sbb inc xchg scas dec out in (bad) jecxz fnop sub lock lock mov cmpsb pop xchg mov xchg adc enter cmp inc push sbb lret test jae aam fist sbb push jns adc dec sahf enter jnp cmp cltd mov in aaa cmp xchg inc xchg fs aam jnp fs mov dec imul sahf in out cmpsb xor ja mov testb call and imul sbb les inc xchg fldt stc mov or lahf bound negl mov xchg mov and pop xor cwtl and mov xchg adc sbb adc push sub cmpsl push adc pop in xchg je xchg loope jecxz dec mov js stos testl pop or mov and cs xchg xor mov mov es mov aad int3 or jns mov pop jb jmp and mov jecxz xchg mulb push mov mov scas push je scas fisttpll or sahf dec in lcall cmp fcom push mov mov sub and movsl in stos clc (bad) sahf lret adc mov cmp fwait mov cmp repnz mov xchg inc push cmp lock aad mov mov xchg push aas outsl jbe jbe mov cltd or push sbb jmp push in ss sub mov es cs sti mov jae (bad) cltd sarb rclb sub or fstpl adc movsl (bad) mov jo or xchg mov add inc jl jo aas addr16 lret mov add insl aaa xchg iret sbb popa iret fimul (bad) das sub pop addr16 (bad) hlt xlat scas shrl add mov mov mov test aad jnp or les lods push sbb mov mov adcl enter lret ss lret data16 push lods in je shrw xchg sbb ds push cmp movsl stos and aad mov xor mov arpl int fidivr fimull gs sbb dec loop mov int3 cltd shll adc or and cmpsb jl xchg push and aad and or aas insb (bad) movsl adc ss xorl dec adc insb mov stos mov mov or cmp pusha (bad) xchg jmp leave mov test jmp jb (bad) jge movsb cmp out mov insl jp cmpsb cmpsb add sarl dec subl scas cmc xor mov (bad) jne cmp rcrl sbb mov and test rolb or imul iret push sbb inc subl rcll push mov sbb mov push xor icebp sub mov leave dec and push sub ja sti or loope jne fiadd xlat push fdivl inc adc pop ret inc push push repnz jl mul dec shr dec pop adc sub jmp scas fstl pop xchg pop add clc pop enter jecxz mov mov sbb outsl add mov fmulp addb xor mov mov mov inc mov fistl mov leave xchg add pop sub rorb jp mov mov add addps xor call ja mov xor test daa push (bad) mov fmull xchg out pop test (bad) pushw rcrl (bad) imull mov (bad) dec pop xor int call popf loop (bad) jb xor push stos mov aas cld cld sub add loope lcall enter mov inc out scas mul mov jo dec jecxz (bad) adc xchg loope dec pop pop call pushf imul and inc and std wbinvd dec xor into push roll lahf mov lcall xor lret (bad) test sub jge in aam aam (bad) lock dec xchg pop dec mov push and pop sbb jns ljmp adc xor je aas jecxz push repnz out push (bad) cld in mov pop or and push cwtl mov movl and add sub repz inc or xchg add jecxz xor inc inc xchg not ljmp xorb leave xchg xor rolb push dec jne mov mov mov insl xor mov or pop adc push int3 xchg pop jge cmp jp lcall jnp mov mov loop dec sub push xchg repz push pop inc or mov clc inc (bad) fisubrl push jnp cmp int3 pusha mov (bad) cmp jb add prefetcht2 jl jg sub and mov dec (bad) pop mov ss dec (bad) or repnz outsl add out pop mov test adc dec or sbb cld das push xrelease int3 cld leave imul scas mov test je dec pop xchg test sbb es fiaddl add or jo lret fsubl mov into sub mov inc mov popf push imulb xchg out push adc daa aad test dec lea lock or jo and inc rep imul cmc push jp sub mov or mov inc ret lret mov jmp int3 cmp and (bad) mov xlat sbb and and add mov mov or popa scas inc ss cltd insl (bad) push leave enter ds mov cmp les xor aaa int and repz add jge (bad) sub ret out adc jp and xchg cmp jle mov hlt aam adc jno or cwtl xchg mov jg xchg xor mov cmp stc and mov jbe xchg or stos xchg mov add dec push sbb cmpsb pop xchg cwtl or mov or rcrl mov lcall inc orb push gs sub mov jmp xor jg leave sbb inc mov lods lahf lret clc out mov jo fstpl pop xchg adc and mov mov loope test cmp out testl mov adc sub xchg xchg insl leave pop inc inc adc adc mov inc ss or jecxz inc icebp stc aas adcl dec adc je ljmp andl xchg dec je mov or cmp cmp insl mov ja sbb add sbb fcmovnb insb das add movsb cmp shl out daa fstps mov dec mov int3 or lods sbb ja aad out (bad) sbb fwait negb xor add sub mov xlat insl xchg arpl out jnp push push mov xor popa pop inc and jmp mov push scas pop xchg mov and into push add in mov cltd stc (bad) mov out and push mov pop test lahf jg cmova mov and loop out call or enter outsl hlt adc stos js and cmpsl in int3 (bad) xor push add call jmp inc push inc add or dec xchg xchg add mov or sub scas (bad) adc enter insb lea and jl adc jecxz sahf push and fcmovb push fucomp shll or cmp aad xor pop pushf jns lock dec xchg inc xchg lret (bad) loope mov jb inc loop add dec mov stos jbe ljmp shrl loop cmp out popf (bad) jp cmc jmp add dec mov js stc lock add dec in mov add pop daa pop dec and adc xchg call dec fnstsw dec mov sub (bad) in and push mov cmp adc adc cmc jmp pop movsl fisttpll std jmp arpl fistpl xchg xchg mov lahf test mov ja jl std jmp jae dec push dec std mov inc pop xor data16 fs bound sub mov add pop popa stos mov mov sbb idivl sbb test xchg ret dec into js enter ret pop fstpt sub pop jo fstpl pop xchg push aas or (bad) vpmaxsw ficompl scas scas cli mov and push cmp outsl push or push xchg push pop mov out mov sub int lock fs and outsb sbbl (bad) adc cmp mov mov stc inc jmp sub sbb insb dec or imul inc stos les lock fdivrp xlat or adc cmp into and fiaddl and jmp int pushf fs cmp xchg inc cmp push and lcall push xor push inc xor push pop scas test adc jb mov mov sahf mov pop mov sub cmc inc out pop and fdivl addr16 enter ds push sbb push out sub popf mov sbb inc ljmp dec jo fsub sub aad adc push pop sbb xchg rcr jl cltd add mov repnz and in aas cmp aas xchg idivl and add cwtl xchg mov je and lcall sbb ljmp es add popf add push fisttp lret je es push jmp mov ret imul idivb les xor (bad) icebp inc inc sub addr16 fcompl dec iret in dec xor adc fildll cltd and mov fnstsw xchg insl fldcw dec cmp sbb outsb xchg lret push pop sub scas xlat aad stos add or jecxz leave mov aaa push mov mov jnp xor lret or and shll push jle test jmp pop clc or incl xchg loope ret xchg or jge subl lcall js jl rcr test xchg dec pop test mov xchg shr dec imul out out adcl adc xchg lcall mov pushf dec aaa push inc test pop jle gs test fstl fwait andb push inc test aaa sub and mov cmp fsubrp outsb neg jp lret add hlt int std add jmp jnp add popf sti mov inc insb (bad) repnz and inc hlt and into sahf hlt (bad) pop clc fwait mov aas and dec int mov push test or in ds jns aas movsl push mov mov push adc sub mov lds imul add jo mov cwtl adc push jge aaa mov stos push dec push fcoml push in (bad) aas push loop faddl dec mov inc fild sub push (bad) or push into dec test push sub test fs push cmp fwait inc pop shrb dec mov mov and clc jecxz or loope sub and loopne adc push dec fwait rorb imul jb sbb pop outsb pusha sti sbb ret sbb sbb rorl add fwait cld aad pusha mov jb xchg jl mov div movsl test ret add enter clc lret add ficoml xor popa push jl and nop addr16 lret cmp add (bad) rcrb cmp cld or adc enter enter xchg lea or cli hlt fiadd subl xlat lods jae in jl xchg mov jns dec mov arpl sub pushf enter repz pop mov (bad) lock enter cmp jo dec inc add mov lahf (bad) push push cmp mov add or (bad) dec cld mov fsubrs xlat notb pop loopne push repz cmp adc add add aaa sub popf loopne xor inc jbe and xchg lock or add mov (bad) mov xor mov push pop pushf daa adc jnp ds or popf dec push add fldenv out inc xchg (bad) xor leave add and movsl mov scas pop arpl or sub mov mov scas push adc das shrb cs test cmp mov sbb cmp push pushf les clc pushf popf push pop or jmp xor test pushf or add xchg sub cltd mov jbe xor cmpsb cmp fmull out fwait loope add and into inc cld add repnz rol xchg sbb pop ljmp pop gs aas leave mov sub clc xlat mov or movntq out cmp mov sub or dec mov mov js,pn xchg push add dec xchg lods xor cmp xor das (bad) lahf adc fwait ret xchg mov dec out dec fs popf push xchg or lret fidivl (bad) mov fiaddl das sbb inc push xrelease jbe lahf mov loope or test js adc xabort pushf jmp (bad) adc (bad) icebp mov pusha inc ss jns mov jecxz push jecxz cmp mov nop (bad) jbe mov sti nop add jo in pop aaa jp int3 sarl mov mov lods ffreep or and xchg (bad) imul xchg into dec lret inc aad xor aam mov rolb iret jg jmp mov dec lret mov insl lea aaa ror bound push jae int3 or pop jmp in fdivrs push and xchg add pushf jno aaa ljmp cmpsb xchg frstor idivl pushf rolb popf (bad) ja push fcomps sarl rolb movl pop cmpsl rorb ds movsb cmp add lret sahf push mov or mov addb dec mov dec cs adc fsubl aad cmc ja adc inc call imul (bad) mov inc add pop pop mov adc jbe int sti mov or mov sti test aam mov mov mov xlat mov cmp stc xchg mov push sub test fnstenv fidivl or daa std out dec cmpsb push add or movsb subl push cmp enter xchg les popl xlat je dec es jle pop out xor lods sbb mov lret (bad) xchg or mov into leave fildl std mov fldt or cld xor movsb cli push mov lock stos mov xor and out jmp mov mov mov cld jne pop fisubrl xor xor pop cmp push lcall xchg inc mov cs mov push mov cmpsb mov inc or sbb fnsave lahf inc or stc std (bad) push hlt xchg cmp sbb std mov mov das adc mov sbb dec xor fwait and dec and inc outsl ret ffree xchg or stc push mov add test fcompl add pop pop xor pop cltd out inc dec inc add dec or fildll add cld push cmp aas cli (bad) cmc mov cs ljmp dec lods insb jle ret enter push pop ljmp add loope and inc inc mov mov (bad) mov and (bad) mov sub xor mov fwait mov add leave daa pop lcall leave repz or xchg inc xchg push mov fistl jbe roll xor jnp jmp pop aad sub hlt test adc mov mov mov shrb mov leave push lahf (bad) cmpsl aaa xchg mov jl push mov movsl xchg inc sbbl inc out stc jae pop xchg arpl popf jg sub mov (bad) mov ja (bad) fwait mov rcrb mov mov fwait sar daa fmull (bad) testb lret cmp (bad) push (bad) push mov idivl fcoms adc mov jl and clc inc sub xrelease iret mov mov or xchg dec xor cmpsb add push jge fistpll sti mov aad mov jnp mov dec scas in imul and pop stos rorl sub fisubrl mov jnp adcb out adc push aad (bad) pop aam cmp shrb lock mov inc mov (bad) sbb std (bad) mov jecxz fldenv divb (bad) fldcw ja jp pop jle imulb (bad) mov adc sub add pushf leave jno xchg popa push mov pop or add lret pop add popf sbb fnstcw popf inc xchg jecxz pop in xlat mov test and xor push mov in shl scas add pop lods adc xor cmc mov mov sub stos xchg or fdivrl adc addr16 int loopne pop push lea push movsl movsb cmp mov lea out jge outsb shrb test sahf push les shlb js add mov into movsl jmp sbb inc pop sti ret rol test push mov pop pop lret jno stos cwtl jmp fsub mov fisttpll mov push imul push adc fnstcw mov xlat rclb stos outsb aad pop pop or bound leave lock xchg aad dec xor insb fstl movsb ret shrb data16 xor shrb ja lds hlt test popa out xchg inc inc jge dec rclb xchg pushf mov scas icebp or xchg or lods adc mov lods test push sbb in sti pop lret mov inc sbb scas push xchg cmp das clc xlat or outsl repz mov scas xchg subl lods push jbe ret jmp insl imul push aad xor or push adc sbb enter cmp or sbb ja imul ret jnp (bad) rcrl xrelease (bad) add xor and or outsb add push jno push pusha mov dec (bad) lods outsb pop dec dec cli mov ss dec jae mov and inc call sbb jno rcl ljmp xchg mov sub inc cmp cltd mov lret push fisttpl mov fidivrl cmc dec jnp xchg cwtl push mov ficom xchg fcompl movsb pushf mov mov subb (bad) fdiv xchg clc mov pop jnp jl push dec adc test and sbb xor jbe nop sub scas mov jnp lret jecxz sbb js jno leave pushf imul mov lahf loop adc mov sub mov cmc xchg push dec fsubl mov outsl add inc adc imul mov push cmp pop or jb adc (bad) (bad) test fstl ljmp lcall movsl imul and pop out aaa gs push repnz cmp mov inc pop mov push jg (bad) enter lret mul ds push xor pop pop pop push test cltd and mov sbb mov or xchg sub or sbb dec mov adc sub cmp dec lea les lds push jb shrb push stc fisttp lea or icebp add or mov inc mov cmp (bad) cmp jns (bad) cmp lret cs cmp aas dec push loopne inc sarl dec int lcall push jnp dec fimul outsb cmc xor mov inc adc sbb dec xorl fxtract test mov dec lock jmp xchg and xchg loop sub jb fcomps cmp add int3 jmp mov (bad) push push sbb test fwait pop mov fs fstpl and in adc mov add sub test adc push bound adc jl inc add jnp pushf arpl addr16 int3 push addl adc adcl inc cmpsl rolb jle mov mov scas pushf xchg jg sub adc xor out lret daa xor int3 sahf pop dec pop rol dec dec icebp jns mov jle lea mov adc aas scas cmp push push inc mov sbb mov xchg or in hlt xor fsubs call jl movsl mov dec push out mov lods push and dec mov sbb lock cltd lcall imul or cmpsl bound loope std xor push mov sbb int3 ljmp xor ss adc sub sub sbb mov pushf adc popf inc xchg rcrl imulb mov fildl dec out push jl fwait repz add pop or sti (bad) dec cli pushf add lock lods loope cmpsb jp adc outsb dec mov orb test pop push add (bad) imull out mov mov mov aad jmp sub jmp xor inc jmp mov (bad) jo stos add xchg in fdivr cs cmp xchg ret dec movsl sub int repz xor mov insb lea std in je fcomps and jmp mov fimull mov icebp cmpsb movsl in inc sub sarl xchg idivb add push call xlat imul lds push jmp fs mov fs xchg xor ficompl add inc pop fucomp (bad) pop ffreep arpl mov sub (bad) sti in push mov ret cwtl push mov sub add push xchg xchg adc mov cmp mov jae cmp add out or mov add mov gs push xchg push add test mov xor push dec in (bad) outsl xchg ret inc loop std cmpsl lods xor scas push lock push (bad) pop inc call repnz in dec data16 pushf mov repnz xor ret cmp or daa pop stos pop je add ror jne push fildll lods movsb lock outsl dec cli lret pop das inc inc mov sbb lods pop push push je push stc mov jp and ficoml ja add nop (bad) sub cli inc je xlat stos sbb sarl out sub rcl cltd push movb out mov imul test xor clc shll outsb or icebp int3 mov or loope out xor das (bad) xor out pop fsts outsb cltd cli pop pop (bad) mov inc ljmp lea xor jne adc xor dec nop (bad) add aaa outsl mov aad dec cld int push sub icebp jbe int or mov dec and not cmp adc and jg adc dec movsb or mov mov dec out mov mov xchg ss mov (bad) lea (bad) (bad) insb stos je inc xchg out xchg mov adc bound pop pop sbb jg or add popf dec ljmp je and into jbe sbb dec adc outsl lods aam (bad) xchg fwait adcb inc int mov push mov scas in add dec outsl ret or mov aad jno dec lods add or and lds push mov insb inc mov test rcrl or xchg cmpsl inc fnsave daa bnd adc or lcall sbb sub ss sub aad aam ss push pop sahf cmp pop inc jmp xchg mov les stc push fcmovb add jo sub arpl lds push jno and push mov gs dec mov insl xor sub es xor imul pop fs inc mov jp notb xor and adc add clc (bad) fistl jbe cs inc popf cld fldt pop sbb mov cmp xchg sub inc cmpsb push idivl mov imul out cmp push pop xchg pop fnstsw sahf data16 or xor mov and push add jl mov pcmpgtw mov test xchg jmp mov push flds pusha stos sar aaa dec fidiv es xchg adc int3 orl out xchg popa les push insl pop rcrl lods ja push xor inc enter inc jecxz xchg cli jns (bad) je fcompl fisttp sahf rclb icebp daa (bad) inc (bad) outsb (bad) lret popf fsubrp push fisub jae cmpsb cmp in cs push cmp sbb out pop loop hlt jge push cld lret xor movsl movsl nop push loopne sub jne dec adc fldcw jbe repnz mov (bad) dec push out push and dec shl loopne loopne mov (bad) int3 jno sbb (bad) push (bad) jns inc sbb rcll dec fstp test xchg loop rorb lret dec loop popa cmp cmpsb jle xchg xchg cs and mov in (bad) sti and pop or jmp mov mov das pop test loopne inc cmp (bad) sub xor jnp outsl push pushf lods push enter arpl test test cli mov loopne pop jne pop lcall pop repz lahf jecxz add jmp mov (bad) xchg inc mov ret pxor and or sar addr16 daa xchg test loopne xchg jmp sub mov lret popa cmpsl cwtl pop inc ss stos sub cmp pop mov lretw shlb dec outsl jl movsb sub or push xchg push fucomi jo out mov pushf leave jge in fmul cmp (bad) push push test pop data16 in mov jae stos pop adc decb jmp jns (bad) in (bad) stc fs loope adc and xchg lods add mov hlt dec imul repz lcall and xorl xchg ljmp into repnz cmp dec sbb loop jne popf into je dec mov es and push mov push push ja dec inc jmp xchg ljmp adc mov pop pop scas aam fs loop pop mov lods outsl push sbb movsb ss (bad) cltd inc dec push lahf fnstcw jmp rol int xchg cltd shll out or pusha sub arpl jnp test cmc stos aas movsl das aas mov cmp and mov cmp lods das xchg rorb clc rcrb clc xchg and pusha es loopne into (bad) sbb (bad) jb insb jle test xchg and adc sbb ss call dec dec jbe dec jnp or xchg mov gs daa scas push cmp loopw das xor pushf add or ja push outsl xor jns ljmp loop in adc add jns lcall out add mov movsb mov dec xor mov lcall addr16 stc fisubl xchg mov dec and mov (bad) inc stos (bad) negl xchg insl mov ficomp ficoml addr16 dec movsb xchg or stc (bad) dec adc cmpsb shrl pop daa cwtl icebp adc std out xchg insb mov int3 outsb mov loopne mov xor aam shrb mov loop movsl je sbb popl movsb std fcomp aas sti add inc and scas cwtl sub arpl mov stos xchg test add inc xlat (bad) or xor cltd in push sbbl xor ret mov roll andl fxch iret push or push cmp sbb int and cs out pop and fs jmp test jmp push cmpl in cmp das mov pop rclb mov jb aas xchg pop dec push daa or jge mov jl add dec mov mov (bad) andl faddl bndstx cwtl adc dec lods mov call sbb dec mov xchg cmp add not fs xchg push hlt out push mov test (bad) (bad) mov flds dec ret pop xchg jnp outsb cmpsb cld in sbb cmpsl pop cs fcom (bad) cmp icebp cmp pop fidiv call inc ficom ficompl sarl imul pop out pop int jno and pop pop cmpsb arpl mov pop movsb daa loope pop insl cmpsb fiaddl fiadd cmp pop sbb add sbb pushf ja inc mov jmp bound mov cmpsl jns xorb movsb jmp mov popa and mov or push in loope pushf out fnsave add popl cltd add mov sbb dec inc test (bad) cmp fdivs cmp push mov daa inc lods mov and les dec inc mov sbb lret pushf push xchg sbb es cmp jmp clc sbb imul (bad) cli or cmp adc pop in add sahf movsb mov push pusha pop fidivl inc inc (bad) cmp sub cmp icebp loope mov pop mov dec out sbb xchg jecxz (bad) jmp cmc dec ss jb sahf ljmp adcl ljmp jecxz pop out popf pop ss lahf lret sbb (bad) mov pop and push clc cmp notl lcall push imul jg jb (bad) jo into lods lea or mov cld xchg xlat inc sbb cs mov insl stos scas std in add xchg fcoml pop addr16 mov int3 pop mov add shlb aam jo or sbb fwait aam xor sub mov scas push pop ljmp dec add js (bad) out insl jg ljmp mov lea movsl and data16 pop xor mov (bad) jne xlat push fs xchg daa ss jbe decb int mov fucom and fwait adc and in dec adc dec pop and add das int and das dec cmc lods mov pop (bad) lret cwtl lret movsb pop out std inc shr mov inc mov push out mov js std or fcoms mov out mov daa popa mov pop out jns lods mov cwtl pusha dec inc xor xor cs pop in into xchg gs in shl mov data16 in sub mov std xor clc cltd cmp arpl fidiv sbb mov (bad) inc inc mov sub inc xchg jae rorl mov jae movsb popa outsb push pop ja jl iret fnstsw jns mov jbe xchg pop mov outsb sbb orl inc (bad) mov pop mov mov enter lock xor in les rclb lret aam sub cmp imul dec mov jl add testl lret or sub mov sub adc cmovnp dec dec mov xchg mov ds mov fildll std pop je (bad) adc xor inc (bad) mov jbe imul nop mov imul stos xlat xchg out mov mov mul add sti int3 fcomps jns dec arpl push mov jbe jle or jp sub bnd xchg mov arpl fmuls xchg test (bad) lahf mov jns scas popa adc outsl loop inc js jecxz jnp ss and cs out add mov add jbe outsl xor je jne xor jecxz adc xchg sti inc movb mov mov ret (bad) fnstsw sub jno push enter dec test mov pop out jo (bad) pushf inc pop jnp mov jg cli lods int3 call xchg repnz inc dec in mov dec cmp or jne xor aaa xchg cs jmp (bad) mov xchg ds das mov sub fisubl mov lret call arpl mov mov xor les add jo cmpsl sbb lds jo mov pavgb xchg mov test call pop sbb inc shll add dec nop je sbb or adc leave scas mov cltd js out jae rolb dec dec imul aad pusha inc sub jb fwait repnz xchg mov jecxz adc pop (bad) ret clc add xor fiaddl addr16 mov jge push push shrl bound cmc push mov inc mov fs mov lods negb std stc add pushf dec add sbb shr fsubrl mov je lcall pop into fwait dec push mov cmp subps push out (bad) incb sahf loopne ljmp fsubrl push rcpps ffree lods push sub or dec aam or jns push or ror cmp sub loopne and sub sub and add stos ljmp add inc cs dec cs inc addr16 mov xor cmp mov inc dec push push arpl adc test test cmp jle outsb lea jbe out push pop popa jne adc rclb (bad) pop dec jne lods repz fisttpl repnz xchg adc jl sub add cwtl push das into ss cmpb aam mov sub dec rolb mov test mov nop ret jnp xlat mov mov mov popf dec inc arpl cmp out int in int dec dec lret push and cmp ret lods out lcall pop sahf out daa in ljmp adc mov push ljmp jecxz lods out lret pop cwtl dec cmp lret inc in pop out dec rcrb jb stos dec int push mov push mov sbb (bad) mov jo sub sbb fdivl fiadd mov arpl adc sub or adc mov push icebp and mov xor lods mov push enter arpl int3 rol xor push roll mov popf insb xlat nop in fsubp int3 add (bad) outsb ja pusha movnti mov mov rcr stos or aas push jecxz xchg cmp or ljmp adc xchg pusha xlat xchg fucomp add mov cltd sbbb jb sbb repz push out cmc divl in mov jns rol cmc fucomi or sub inc cmp insb lock mov mov data16 mov jl shr fldt xor ds add mov andl sub jno out cmc jnp sahf xor sbb (bad) ljmp sub sbb sbb ret adc (bad) fs jno addb cld and (bad) xor test mov inc xor mov and in push cmp xchg loope int (bad) fldcw imul sbb ret mov push sarb jp fs dec pop dec arpl out movsb lods xchg outsl cmpsl mov mov jne ret mov (bad) cli stc push sub mov push inc dec mov inc mov inc push hlt sub (bad) push xchg hlt cmpsl dec clc outsb sbb fmul leave mov sbb jb push xorl mov les mov cs insb lods and ficoml mul aaa sub and dec pop insb add sbb outsb mov sub pusha sub mov test test pop xor imul mov mov repnz setp and cmc cli fwait cmc aaa addr16 imul push or mov sub fcmovnbe nop add test mov and ret push imul (bad) mov (bad) push loopne push and cmc mov mov jno cmp jl rcrl out pop out dec jo lahf (bad) aaa cmp xchg xchg repnz decb inc sti loope stos xor mov stc xor aas in into imul adc xchg rclb cmpsb and pop fisttp std imul les push hlt inc mov je out std mov dec mov xchg sub jmp mov sbb fisubrl scas iret orb pop jbe roll mov inc mov adc lods push mov mov pop jo rcr add sub stos hlt xor les aaa mov xor xchg adc or push add std stos mov jnp lea pop dec push (bad) jbe pop inc or mov ja push mov pop cwtl xchg outsl jecxz int rcrl and mov clc mov ficomp (bad) fchs je push pop fnop add xor inc pop sub or add xchg aam ficompl inc inc push popf sub sbb pop fucom seta fisubrl and lock inc jnp mov imul push insl test adc (bad) mov movsl jg xor loope fpatan fs cli (bad) push jle xchg popa jecxz sbb inc inc xchg daa (bad) fcmovb loop loope jl hlt cmpsl adcl icebp addr16 jns (bad) jg aas aaa jg mov sub bound cmpsb xchg repnz push jne lea jp add mov jb out aaa adc xchg mov xchg jnp cmpsb out sub arpl xor ret into sbb imul adc push flds (bad) dec in (bad) push jns pop fsubrs lret leave cmp inc in divb xchg dec cmp pop aad and inc adc mov (bad) in pop and pop xor and and jno mov mov lods push test sub test dec popa inc cmp xor gs lods sub and inc icebp arpl xchg xchg jmp mov pop cmp rcrl xorl mov cmpsb ret jb cmp cmp cmpsb inc jae pop inc cmpsl inc aam setg in aaa or (bad) sub call pop mov mov in jl inc jb jno div add inc jnp adc movl lods adc (bad) mov aad dec push cmpsb out in gs push insb gs mov xor cltd iret bound fdivs pop sbb jle push aad fwait and sbb std cmp test jle pop sub popl mov ret out fstpt mov out jmp out inc inc push lret xor cs fbstp push bound fildll lods jl jecxz clc stos xor dec test adc clc in jl sub adc and lret movsl in (bad) (bad) and imul add sub or jge imul xlat or inc mov pushf cmp fisttp jb add scas (bad) mov lods jbe dec jo into mov mov cwtl push or cmp inc xlat out leave fisubrl les int3 (bad) ret (bad) inc mov xor pop jb shrl cwtl les jno mov lcall jge es jno ror popa scas xchg inc or inc stos xor cli lock xchg es mov adc in sbb jne out pusha out sub cld test inc sub scas sbb mov inc dec (bad) dec pop push inc cld dec or push pop cs xchg lea mov mov out dec mov add aad nop outsb and sub mov mov arpl push adc or roll ffree sub pop or pushf lock mov dec mov mov popa inc movsb aad fist fidiv mov jl test push test (bad) adc mov nop sbb cmp in (bad) push fnstenv xchg mov repz sar popf or add loop pop push bound adc nop dec lea cmp mov fisubrl add fimull ja in jl push movsl out jae lea (bad) fdivrp mov out out dec imul xchg mov adc push xchg add out movsl mov pushf xchg sub (bad) in scas das or les cmpsb repnz push ljmp push pop in pop jno push sbb cld pop lock xchg (bad) jg or outsl dec sub clc (bad) fstpl into mov (bad) adc pop jmp lahf add aad mov (bad) push jp test insl shr rol (bad) aaa popa jp and ret push jbe test lret cli js mov (bad) mov icebp repz xchg pop adc outsb push inc (bad) adc (bad) stos imul add adc rclb jmp in decl mov outsb insb aas inc movsb movsl adc cmp ds rolb jg xor push jl aam xor sbb ss push dec aad lods pushf ret mov add inc xchg adc sbb pushl cmp and cld mov mov leave dec mov pop mov lock mov loop xchg xor adc movsb push adc pop sahf insb xchg adc mov aad ret pusha xchg sbb add or dec mov in mov cmpb test int sbb shrb push ljmp xchg test lods cmp jge or mov dec cltd xchg repz movsl aas inc mov arpl mov xor data16 jnp int arpl out je test xor lods (bad) xor int inc xor mov cld mov add fs mov scas loopne push or fistp lret out xor cld pusha in mov mov lea mov leave pop cltd lcall xchg mov and pop pop cmc movsb xor xor lea es rcl (bad) add mov cmpsl clc in test (bad) xor dec fsubl popl push out movsl stos out je cmc jp or and call lock test mov (bad) pusha fiadd std xchg mov sub fbld mov cmp or loop movsl movsl dec or rcr cmp ret sub push divl mov jl mov jo lods out ja inc push and adc lea jle mov addr16 out cwtl sbbl repz push in js cwtl fcmovnb or in xchg bound mov popa jne (bad) and xchg push std imul mov jmp outsl mov cs add xchg adc mov xchg div sbb mov jne cmpsb xchg dec (bad) adc dec cwtl sbb outsl xchg jle jp (bad) mov cmpsb and test push cli test incl in mov jp test jne pushf iret pop out add pushw pop rcrl and adc pop cmp inc add mov inc bound pop sub es push mov pop cs jg call mov out and pop sbb out pop cmp cli fsubs popf std loop mov into popa das sbb jmp mov cltd cmc stos scas xchg int ljmp jae pop adc mov pusha mov inc or out lret cmpl mov movsb inc push ss add sbb ret adc mov (bad) into jmp jno add xchg (bad) cmpsl sbb xor data16 frstor or mov sub loope in es xor pop rcll mov pusha cmpsl add fucomp lods mov sub sbb (bad) jle pop loopne push push loope jge stos data16 out lds xchg lahf ret add dec jmp mov xchg pop jns xor dec sbb dec pop inc int or pop sbb inc pushw push add sbb dec cmc je mov or daa repz into lods scas inc cmp mov in inc sub and jae pop mov decb fisubrl sub loope movsl nop addr16 jg mov lods in in insb adc jb and and push scas inc cmp clc gs inc mov outsl sub push add push scas lahf sbb clc sahf or mov cltd test push xchg jb rorl popl shl xchg xor and add jae sub loope mov pop cmpb sub xchg cmp loop test jl stos mov out cmc xor and movsl push mov mov inc ds adc int3 out dec fcom jle xlat out imul mov (bad) sbb (bad) out sub xchg sbb push cltd jmp scas mov adc add xor adc cmpsl push outsl cltd lret cmp cs jbe stos adc sbb sbb mov mov mov inc fistpl outsb data16 jg in xchg gs sahf idivl test in and sub jg add (bad) sbb or xor (bad) std cwtl hlt push cltd leave imul xlat int3 pop int sub aas mov mov stos ja scas mov adc rclb mov xor push movsb imul sub xchg dec dec add aas add jle ljmp dec mov adc pop mov rcrb cmp clc (bad) (bad) dec pushf push jns pop mov inc push (bad) xor mov sub cmp icebp or call push sbb fidivrl fwait nop es les cld add sbb push cltd inc sub loope or movsb test insb sbb mov push cltd ds jns push inc (bad) or lcall fnclex stos addl call aaa fwait xor or inc or addl aad lods leave jnp dec mov sahf roll aam aaa imul jge inc les mov sub push xchg pushf xor pushf ret imul aad es fidivrl dec cmc popa jl mov scas es inc push inc test aam jae or test iret mov jbe lock mov mov adc sbb stc scas inc xchg testl or test pop sbb xor ljmp push inc insb push stc gs lds cli mov imul xchg jle sti jg popf pop divb jg int add add popa pop repz mov jge movsl dec xchg jbe adc cmp mov mov inc dec jle pusha mov idivb les lods lds push jp clc add push enter lret dec rolb xor pop test or adc jecxz test je out sbb pop repnz and aam popf (bad) fnstsw test das push push dec (bad) push repz sub out sbbb mov ret cmpsb (bad) and in dec (bad) dec in out cs mov jmp pop xor xor jno cmp lret add (bad) in mov push cli xchg add mov adc (bad) push test fimull sbb sarl repnz daa adc outsl (bad) icebp xchg (bad) push cmpsl jnp jl push jb lock push movsl pushf pop cltd dec das les or dec mov sub sbb lahf cli pop outsl cltd pop push push out jo stos jp scas adcb leave or stos mov daa popa and outsl ret dec mov mov mov mulb and add repz xchg outsl dec jecxz and in xchg insl dec rcl mov dec push add mov mov push enter push mov icebp test xor pop fwait pusha push pop push clc imul xor push adc repz fs pop xchg fdiv lcall push loop je jnp add xor push (bad) fstps push add cs adc cli insb xchg jae mov loop,pt inc push xorl sbb mov xor pop daa cmp ss or jl movsl dec dec cld push jmp cltd ds or push out xchg mov lock add int adc rcrb inc jae mov test js cwtl cmp test leave and (bad) dec sti mov pop hlt or idivl mov inc dec or mov xchg push out jb in ljmp jg dec imul mov les adc lahf enter cmp test bound rorb jmp jno dec scas and mov insb jmp mov (bad) pop dec and int ja mov sbb enter jo jle xchg jecxz cli rolb lret mov insl scas push or mov mov sub movsl out jecxz sbb inc imul adc cmp xlat sbb scas sub jecxz les adc cmp idivb xchg (bad) inc jg pop sub or jbe,pn or cwtl add fs pop cltd sub (bad) dec xchg je inc mov and mov pop in pushf mov push aas and cltd jp push add xor add scas and adc cltd jecxz fcmovu out sub jbe jb add lea out jp es fmull jno cwtl add jb in fiadd and mov cmc inc stc lea rcrb iret push or int push mov add dec das rolb pop pushf mov or fmull les xchg jnp xchg out cld jmp dec jno inc cmp (bad) sub pop out mov aam je or push pop dec call push xorl mov xchg push andb je inc negl in sbb add and pop addr16 sub into xchg pop cmp lret les shlb and scas dec jno inc inc sarb aam lcall pop nop sub dec repnz adc dec daa inc adc push push pop xchg and and fimull arpl fistp out push fnsetpm(287 sub mov js cli popa pop push push mov pop ss in flds ljmp mov clc test push int3 dec dec jg lret or aad push mov mov cli in outsl int repz (bad) fldcw aam ret inc xlat pushl push push sbb add (bad) (bad) jmp test movsb test push mov pop hlt push mov sbb in les pmulhw mov and (bad) insl mov xor sbbb loope xor cmp sbb cmp leave mov sub pushf lds ss dec adc cmpsb or shlb cmp je jg in lea sahf dec pop pop sub outsl adc ret adc xor cmp pop into ffreep inc push mov xchg aaa add adc push xchg xor scas loop push xchg stos aam cmpsl push xchg adc cmp bound pop cmc scas fst sti push and xchg lea popf addr16 xchg sbb jo jnp pop mov sbb mov aas mov inc (bad) push sar pushf xchg and sbb dec add je inc movsb test mov scas inc movsb popf cltd lock push mov fdiv cmp mov and and fild mov sbb fdivrs jae sbb or cmp popf and jbe sub pop mov leave mov inc mov fbstp push dec stc sti cmpsb fstp in jl inc pop and or mov out leave push cmpb je aam fabs inc cmovo dec repz inc lcall adcl mov in lds cmp mov mov js mov fimul cmp xor or sahf mov inc pop pop push lods scas jne dec push (bad) or icebp (bad) jg xor push shrl push popf mov cmp test cmp sbb decb dec and inc jo sbb mov fcmovne fldenv push sub xor lret jmp aad xchg push out dec scas push jns jnp sub lds and lcall mov push pop fdivs xchg jg jle fcomps add loop cmc push popl in lea mov jne out std mov add cmp xchg xchg add rorl pusha or xlat cwtl negb pop clc rcr add add sub push cmp xor mov and push das inc xchg xchg add pop imulb jmp gs lcall in (bad) ja test add into and lods push fsubs mov fnstenv pop xchg imul mov sar sub cmp or movsb and adc call ja inc mov mov push fimull daa pop test dec daa imul loope test dec imul jp data16 push dec test in jo sub mov cwtl xor dec jae daa stc push sbb push jg or test sbbl pushf and lea test mov addr16 jns sub add and jns nop fsub mov jns pop andb mov or bound in inc test scas jnp outsb and pop lret adc fs or lahf imul cmp (bad) jbe stos call out push jecxz adc (bad) (bad) stc pop bnd dec stc loopne lds pop cs and loop stos fstl or call mov out int push hlt lods sbb inc (bad) cmpsb adc xchg dec jbe push scas and js push ljmp push xchg adc jecxz pusha lahf push mov and inc sub clc jb cmp jmp (bad) (bad) hlt adc jbe mov xchg xor jge js pop popf ds pop (bad) into mov cwtl fsub rcrl ss inc push enter xchg or mov and out mov jecxz inc mov jg push add push ret mov rcrl bound xchg push js push cmc incl movsl cld push mov cld (bad) xchg sub mov ljmp mov mov les mov push jle lahf repnz das sarl repnz pop mov pop les cltd or sbb loope rolb pop adc insb sbb push adc mov sbb iret clc out sti test xchg cmp push sbb ficoml shr std repnz lret add adc and mov or xor sub jns adc inc xorl or cli mulb dec pop cmp pop fsubrs mov sub jmp js cmp pushf dec push xchg cld (bad) lea mov cld xchg push jecxz loop mov ficoml pop lret lods sub mov dec sbb insl jo outsl mov int3 test stos ror mov cmp push repz xchg popf and repnz jecxz push push js add test jecxz push push stos mov mov ret sbb push cwtl xor jle cld pop jmp aas lods es mov dec sub xlat jle jecxz test adc (bad) xor and jle fs shlb inc pop dec in movsl call xchg xchg jne mov add and insb sub cmp icebp mov xchg sti std cmp dec in mov inc add ret cmc fnstenv (bad) sbb popa pop xor lcall xor cmp dec or cmp (bad) icebp stc push mov fcoml fsubp iret dec jno inc add adc cli mov aam hlt jmp test jg sub lahf bnd xor xchg dec lds popf sub int3 popa pop or iret push insl arpl (bad) pop je pop or mov mov jae stos sbb push test lret lret je out mov movsb mov sahf and scas jo push jno dec lea adc dec test adc out faddl les mov cmp xchg dec push jae mov and inc inc cmpl push add (bad) ja xchg mov push adc sub push sub call xor add fucomp cltd jl psubd push cmp fidivrl ror mov lods or mov fmul std inc pop (bad) adc xchg (bad) sbb cmpsb jg xor sub inc push stos orb imul inc adc test mov or rcrb mov in sbb mov mov sub xor hlt fnstenv sbb insl inc jp ret aaa lock addb cmp mov dec hlt stos jbe stos xchg sahf adc movsl icebp dec sbb xchg fmulp cmc stos pop js stos aaa xchg and mov out (bad) push jne adc adc popf push mov xor and mov out sub or pop test ljmp pop stos mov jl sub cmp (bad) cmpl sub pop mov dec aas shlb add bound iret mov cs xor in sbb test inc loopne popf pop and (bad) add push push mov rcrb cs jge lods rcrl sub mov out sbb mov (bad) sub scas test xor sub mov imul push mov mov pusha movsb xor dec mov mov out js add clc pop xor pop jns sbb sti xchg or cli daa dec in sub dec lret sub and jp andb mov mov mov (bad) xor je add mov gs and xchg lret pop into and cwtl (bad) push add fnstsw fldenv pop sbb insb inc mov push xor cmp xchg sbb fldt stc and pop xor cld adc gs mov sbb push sub mov push lds xor shr cmp cmp scas or inc push mov sub pop add movb jecxz lret mov mov push into pushw pop stc rcl jo push aaa in xor lsl out mov enter movsbl dec fist popf fdivs push cmc add lret add add mov inc repnz ret test nop insl pop or sbb mov adc popa insb test mov fwait xchg jo nop push cmpsl adc testl (bad) (bad) xlat out stos jmp xlat mov test repz fcoms bound add pop push dec mov cld rcrl daa scas add (bad) loop xchg (bad) aaa negl out sbb pop xchg dec xor push enter in mov dec rcll sub mov imul jb cld xchg cld mov rcll enter (bad) cli mov mov lea lret pop arpl bound pop xlat es loopne imul or (bad) (bad) out rolb jne lahf jb jns rclb scas jl inc clc int3 outsl sbb xor xchg mov pop enterw mov mov sub aad add mov jg ret push or fisttp inc sarb pop adc sub push into inc leave and lods mov dec in sbb loopne (bad) sub and fwait push in dec pop adc cmp faddl std adc jmp ficomp mov cmp sub jecxz lcall jne rcll lods xchg add js mov dec adc divb dec xor push in push and mov mov mov dec lock imul mov nop jg rorb sti roll les (bad) push fnstsw add es cmp (bad) xorl in lods das xchg dec add sti scas xor cld and pop push fwait inc (bad) xor fwait jo aaa (bad) adc call jbe sub fsubs lods ds loop cmc mov rcr jbe push test enter pop push jmp jnp fidivrl in sbb push leave dec mov enter xor push push es jmp sbb mov (bad) fisubr movsl (bad) cwtl lods mov ret xor sbb cwtl bound inc push mov lret sub setae and scas movsb imul adc pop mov and addb scas jnp mov (bad) enter ds mov por pop lret loopne cmp js sbb (bad) mov (bad) mov sbb lods xchg pusha clc addr16 insb subb jns mov pop jmp aad aam cmc xchg jns mov mov mov out adc pop and mov jmp cwtl and or mov mov fisubrl (bad) sub fcmovnb sbb sbb sub sbb mov int3 pop jnp dec push dec jae scas subl sub adc std sbb in sub imul das xlat mov xlat mov cmpl insb xchg scas int3 lea lcall inc flds cld outsb (bad) xchg and mov iret add cmpsb outsl push cmc popa out lahf add (bad) lret ss int mov rorb jae jge jecxz jns stos fcoms jg sub add jnp mov and out rorb test std adc sub sbb inc add dec lcall scas in sbb inc stos into jae xor in int3 subl imul mov bound pop cmpsb xor mov mov cld loope ret in push stc loop add pop xchg fsubl das xchg mull mov add push pop hlt mov fldt hlt pusha aas inc inc push sub push xchg cmp lcall leave ret mov das mov fisub sub adc dec xchg add mov fnstenv adc data16 ljmp je push or std call inc adc fsubr cmpsl xchg add sub out ss outsb dec dec test adc mov mov out push dec mov mov fistpll add (bad) sti (bad) repz scas repnz sti adc and cltd daa xorl inc mov mov sub and and jmp les xor outsb xlat mov sub adc push mov sub jo scas inc dec insb pop cmp ds js out gs xlat cmp push (bad) in push or popa sahf insb push jmpw cltd insb fcoml sub repz pop xlat hlt nop sbb cmp ror dec test mov test push into fistp jbe decb cltd jp int3 lock and (bad) jbe sahf scas call icebp lret daa out fcompp adc push aaa push xchg call lahf inc mov call pop xor dec mov and into les jecxz add inc out int movb stc out adc mov sbb (bad) dec outsb sub mov mov mov bound cmpsl jle mov cmp sbb add stos xchg jl cmp jb,pt mov sbb pop (bad) aad or dec sub jne out and test push push cmc jl lea adc fwait mov cmp arpl cs inc ret xchg rolb roll (bad) or or hlt add shrb adc cmp rclb and push cmp push out adc push jmp lods cld test push test lret jb leave xor xor not inc pop std insb movsb repz dec popa in mov sbb sbb mov adc testl xor cltd cli into fisub call pop je jmp mov sar idivb adc mov push push (bad) adc mov xor xchg jns push pop test loope xor imull icebp mov lahf (bad) mov arpl push (bad) inc mov iret push ret cld aam mov adc in js lahf rorl pop mov xor jnp cmpsl pusha dec pop sub cwtl lahf or test or mov sahf mov sbb mov add call adc dec clc iret in call adc jno test insb jns mov test inc clc clc dec push mov mov outsl push das or mov dec mov and pop pushf xchg or dec imul jns popf cltd test pop adc aaa out stc js mov xchg insl test rorl mov mov push and and inc rorb leave pop or cmp arpl gs int3 dec fsubrs sub lock shll dec scas je pop sbb xchg pop jae add and push nop pop sbb sahf cmpsb and mov and cltd cmp pushf ret stos pop sub ss cmp cld jne dec add fcomip mov cmp or bswap push insl jmp mov into adc xor data16 or lret inc (bad) sahf cmc js and ljmp mov xchg adc adc sti movsb sbb call fdivrs out pusha addr16 mov cmp sbb jecxz psadbw stc (bad) je sarb or lds iret into loop xchg and aas add pop inc insl pop jmp aad (bad) mov (bad) push sub rorb iret imul hlt fsubrs movsl cmp mov push sti pop out sbb inc (bad) rcrb mov lods pushw (bad) ss xchg cmp xor dec scas sbb lds pop sbb and sub dec mov pusha cmp das dec and mov sti cmp adc ja (bad) cli push or stc add xor shl xchg adc add xchg ljmp mov inc dec repz bound std roll jne push fisub cs jecxz fidiv jmp inc loop mov mov xchg xchg xlat idiv xchg lret jnp adc loope fidivl jl fwait sbb leave mov add ljmp test movsb rcr (bad) out pop imul mov ss jnp push into mov call into add add xchg inc fisttpl scas rcrl (bad) fcmovnb lahf idiv outsl pop lock add jp and aad sub hlt xchg (bad) and ret scas stc pop sbb mov xorl test dec xchg pop in nop loope repnz mov ds fadds push aad cmp fwait inc push add xor or call push push xchg aam mov test pop jl or hlt sbb stc xchg (bad) inc cld cmp (bad) pop jecxz jno fmuls rol lret rcrb pop hlt push jo dec mov sub xchg dec jnp xor adc sub movsl mov jo pop inc jmp loop adc jne mov mov inc and jnp lods xor mov cltd pop pop add addl adc dec inc lds test stos int3 xchg pop lret mov pand ds mov dec (bad) dec mov mov gs loopne xor add call mov std pop adc pop xlat repz pop pop pop pop out lret mov xchg xchg dec mov mov inc xchg dec imul mov or sarb cld imul (bad) xor test cmp xor (bad) repnz in lods dec add sub lods je popf fsub pop pop jb xchg addr16 fsubrs adc in gs daa jns push push xor into xchg mov sub xor mov imul inc add rcl xchg test and in push xchg xor in ret adc sbb xor push aam sahf adc clc mov repnz push push sub lods adc add mov sub je and xchg mov push dec mov pusha pop sahf in imul lds fxtract add popf xchg or mov xchg lock fdivr (bad) pop fcoml imul ljmp dec push lret cli mov push push sub loopne out xchg mov in aas xchg popf jnp stc or imul fmull and (bad) mov adc sbb test insl lods push ja movl arpl mov push lret and sub xor mov mov js push ficompl pop loopne mov pusha pop lret push add and loope stos repz jle testb xchg sub add pop cmpsb in push mov dec scas cmc cmp lds loope mov es dec imul jecxz lcall nop inc jbe pop scas (bad) stos popa xor push cmp popl in adc xchg add mov ficoml outsl pushf cmpsl sbb push add enter out push inc imul jmp push popa push mov gs call pop mov jno or stc in cmp sbb adc cmc pushl sbb leave outsl pop xchg dec mov (bad) jnp and clc pop mov popa iret hlt lock subb push mov (bad) mov xchg xor imul arpl jnp sbb jmp loopne mov cmp iret mov mov xchg scas xchg loopne cmpsb les rcl inc scas ret push lods sbb add insl lret inc imul add pop cmp push adc (bad) sub ret push mov adc push xchg or js cs xchg and jns mov jmp imul xor xchg ss mov sarb sarl (bad) sub sarl jno mov loopne mov sbb pop mov xor and mov inc pusha or xchg mov cmp push clc mov out ja adc add aas add ss mov mov pop cld mov daa bound jb in xchg add mov pushf stos insb pop adc leave fwait inc les shl fsubl sbb dec inc xchg mov mov adc ret scas add loopne (bad) pop jne xlat cmpsb dec and mov outsb jge mov cmp gs leave pop mov dec cmc (bad) cmp (bad) (bad) out (bad) fildll sub xchg ljmp insb fsubl mov stos popf sbbb push rcrb cmp shrl mov insb xchg out setnp add aam xchg fldenv and add cltd adc fwait adc jo xchg movsb stc into (bad) ljmp icebp (bad) inc xor loope cmpb outsb ss fisubr jl loopne (bad) xchg adc icebp bound cmpsb sbb data16 cmp mov cmp mov or xchg icebp dec stc mov sub or rol arpl (bad) popf push mov inc dec scas pop mov inc sti adc icebp movsb jg sub inc pop mov inc daa inc add cld jecxz dec pop rclb adc dec pushf add sahf popa out mov sbbl mov add jnp push sub jp repz pop ss sub and push adcb inc mov rcrl sar rorl push (bad) mov sbb jb or mov adc and in and cmp loopne jnp pop cmpsb sub cmp nop mov mov adc dec sub in xorl mov lret jp imul cmp lds mov jl shr sub mov push cmp and jb inc mov jns cli mov aad and sbb sbb jp lahf and in sti test hlt jbe ret fldt sahf test add into cltd mov loope jle (bad) mov mov dec xor insl rorb or pop add mov cli (bad) mov or pop inc jno xchg lods (bad) jno xchg push adc sbb mov imul mov test xorb (bad) fs inc push in outsb pop fildll icebp sbb fisttpll pop jge push aas mov add adc ja stos xor mov (bad) cmc mov lods cltd xchg je fisubr push in cmpsl fs loop xchg repnz add adc hlt or pop lds dec sub sbb cmp stos push les lock push adc stos arpl je test push sbb popf mov jecxz xor mov int3 push aad jg add aam add jl test and (bad) fmull jle mov repz icebp jge lret icebp mov push and mov mov mov sub das gs jo add loop nop jmp pop aas push dec sbb sub push (bad) push push inc pop cltd nop popa iret mov out mov pushf inc cmp mov sti inc ss or sbb lods sbb outsl movq in xchg movsl addr16 xchg xor roll pop test jb push fisttp push add stos (bad) cmc mov (bad) stos fwait mov add andl mov cmpsb movb std insb repnz (bad) out outsl leave cmpl sbb adc ss outsb jp je or and cmc arpl fwait dec mov or cmp xchg cs dec push int add scas jnp adc fnsave dec pop push gs mov int3 int push je push bound jbe jno pop add jmp push stc or andl push ljmp je pop pop mov cmc ss imul leave (bad) push push cmpsb inc dec lret push sbb xlat loop out and pushf mov nop xchg or adc cmpl std fildl jecxz ljmp jns push and mov fnop fistpll fmuls bound mov (bad) adc push test cwtl pop test mov addr16 fs sbb xchg test sbb adc int3 jp mov sahf jp fisubr data16 test and dec sub loope mov (bad) and repnz pop lahf cltd sub icebp cltd xchg mov mov sbb cmpsl cmp mov lret lods loope pop cmp cmp aad int3 daa mov lds loope inc js pop out push (bad) daa mov call fbstp mov cli mov push shr sbb mov mov xor push mov and mov imul leave xchg negb mov mov adc jg mov (bad) arpl cwtl cli xchg pop les outsl shlb aam fstl imul jne add es push push loop repnz add and inc sbb adc cmpb pop out push shll and fsubp xchg add cld push mov xor dec mov (bad) js divl push dec movsl jae rcl pop mov outsb sub into cltd jecxz popf aad rcrb das xor test sbb or push fcomi dec (bad) dec dec push fistl push sub pop imul (bad) sub sbb push xchg mov (bad) pop or jno push cmp push jb dec add dec or (bad) repz inc add jno in ret cmc ret (bad) aad dec sub lret seto (bad) jno push (bad) sarb loop mov ss cmp sub idiv roll inc jo test pop (bad) sbb xchg test repz ja and clc dec (bad) mov subps mov bound addr16 jno push cmp jo mov mov cmp add and int3 arpl loop movb daa cmp (bad) in in rcrl pop dec xor fmull cmp data16 call push ja mov cmpb aaa jl fsubrp dec jge sbb mov jle sbb pop mov (bad) or inc cmpsl mov pop or lahf repz or and mov and scas loop xor xor repz rcrl push mov cmp xor inc mov (bad) and (bad) push mov adc sbb sbb add mov sbb mov sbb popa mov es rcrb cmp xchg cltd orl adc fisubl push gs negl repz pushf jmp cld push xchg mov mov jns mov push mov lds push in mov mov mov xor cmpsl or (bad) (bad) mov and and mov jle enter das xchg mov adc cmp add rcr push pop adc xor cmp (bad) lretw inc push jnp cmpsl cmp dec sbb sub leave aad imul fwait dec (bad) mov mov js hlt mov nop push ss mov imul mov xchg sub push (bad) gs or aaa xor (bad) and xchg sub mov mov sahf mov jmp pop lods cld (bad) cltd daa or inc ljmp or test scas fistpll jnp lods (bad) (bad) xor fnstcw or jb jnp lock mov sbb cltd pushf adc mov jg jne popa divb xor jle sbb jno dec sub fwait sahf cli ret andl pop ds enter gs mov mov shl rorl out mov xchg mov int3 sbb cmp pop popa outsb cmp add xchg cmp add cmp fistp iret wbinvd jnp pop test (bad) mov mov mov pop daa push adc insb lret inc push or popf mov addl xor sti lahf dec or in daa lcall mov sub enter int3 push pop daa arpl jno stc out mov divb mov xchg cmc mov lock ja sub or das jl out lret and fs adc jns mov cmp outsl xor push jnp (bad) mov and push and cmpsl xor mov pop or lock lds sub xchg adc cli test insb shrb leave nop cwtl jmp fidivl push push mov sbb or mov les imul hlt loope lahf jb iret fsubl rclb xor mov bswap sub adc (bad) loopne ja push or sub loop stos mov pop mov pop mov jne pop xchg movsb adc insb mov add adc add mov ja lods in negl lock inc dec sub and sub imul mov out sub push fucomp lds add mov pop je add outsl sub into and (bad) movsl clc dec pop rcl xchg lods call pop push fld mov jl push cs sbb clc (bad) fwait ret push xor int3 ss fsubs fisttpl adc sbb mov ret jno daa out lret (bad) gs lock pop aam data16 fnstenv fidivl test fistpl mov mov mov loopw addr16 scas mov pop aas mov jp cmp pop iret jmp ja jge movsl xchg inc mov pop adc pop popf imulb push adc sti xchg (bad) dec xchg cld add lcall lcall movsb (bad) movsl dec push popf mov out add in jno xchg push arpl and (bad) outsl sbb icebp (bad) sti daa repz dec pop popf xor scas loop add cmp gs in movsl cli xchg push lret fidivl (bad) (bad) xchg (bad) clc xchg les notl hlt sub add in roll pop sbb inc push popf (bad) push add xchg xchg mov outsl data16 mov jno mov mov lahf das test dec xor or and cwtl mov shrl test xlat or add and fisttpll or in mov les cmp repnz xor mov in outsl cs stos push jecxz mov (bad) in xor push icebp cli mov inc mov or (bad) je idiv sbb fsubr pop or rorb cs lret lods jbe (bad) cmp (bad) adc add xor js rorl cmp mov inc imul je clc test cmpsb fcmovb mov into or hlt jae scas add xor sub sti lret and mov daa mov test repnz (bad) jae push aad (bad) lahf popf xchg movsl leave cmp and mov test test aaa stc or sarl cwtl jne adcl pop leave mov hlt cli pop stc mov mov cmp es dec cmc mov pop stc fisttp xchg push (bad) or sbb repz test sbbl sbb imul pop imul in (bad) faddl movzwl jbe mov daa mov ret sub fdivs xchg aaa jge (bad) aad lds aas ljmp pop xor pop adc push aaa je test sbb je ret jnp mov and (bad) jb popf jmp mov adc mov (bad) dec cmpsb xchg cmc add popf test stos sbb sub push jo add and or cmp xor xchg out js mov loop scas jns gs mov inc pop xor dec fs and call sub or xchg decl test push insb adc lret pop adc rcrl inc cli mov and sarl or lods cmc ljmp in jae mov mov pusha popa stc in or jne mov inc xor jne mov push (bad) fnsave imul mov sbb add jb mov or jbe stos cmp cs fistpll insl sarb js addr16 leave lret xchg mov int3 push out sub les mov adc adc js fcomip xchg mov in pop sbb aas leave mov mov hlt into fcoms or inc and (bad) decb cmp sbb aas sub pop insb and outsl ret cmp (bad) rcr sar mov jo xchg push or push scas int data16 out or repnz mov jnp or jge add aaa outsl (bad) cli (bad) popf cld xchg jl and out lcall adc lret mov iret int es mov fnsave cmp mov sub inc lret or les and pushf jb (bad) mov jmp jne aad xchg ret jo mov xchg lret sub sarb hlt into pop inc xchg cmp cmpsl push mov fiaddl hlt add movsl sbb sbb inc cmp clc pop push mov jne scas je jne jp push mov arpl mov subb and xchg out test loopne jne jg pop jp jle or mov fist or xchg adc xor cltd out lods ret incl mov imul pushw loop popa loop dec mov dec shr push push dec jns mov add cmp movsb lods push negb sbb or in sbb ror pop or cmp cltd mov cmpsl mov lret jl (bad) lea dec cmovae sbbb xchg pop sbb ds pop call arpl addl repz dec inc je inc mov pop pop movsb push xchg call pusha sahf xor cmp lret loop or les push jnp or push sbb dec mov push ficomp push inc insb xor jmp jns cmpsb jg jp mov pop fstpt rolb jecxz and sub mov mov jge aas lods adc adc mov insl cmp or add jge pop sbb mov add jecxz adc mov into rclb popf negl push cld js jp and or aad cmp jl sti lret scas mov xchg jg je std movsl mov xor sub fs bound jge mul cmpsl sbb cmp lahf sub fstpl fcomps mov int3 inc movsl testl test push pop (bad) xchg sti xlat into scas inc xor (bad) pop xchg (bad) ficom push cwtl jno outsb jno jmp (bad) jecxz je mov pop push xchg fiadd push aam out pop rcr std or jnp ds out and addr16 xlat xchg pop shrl adc jne aaa test arpl pop pop push std jl push and or pop push test (bad) hlt mov push call dec push outsb jg (bad) std pop jo test rorl sub xchg cmp lret inc das (bad) dec mov or daa jmp rcll sub cmp jae sub jo loope pop fcmovu dec and pop scas rolb aad ljmp mov add sub scas sbbl jns loopne xlat add iret sar or rorl (bad) lret jle rcl mov and xchg imul or jnp out shll or cmp insl decl push sbb xchg lods out adc (bad) movsl push stos mov ss sbb test sbb jecxz xchg in and push xchg es jnp mov loopne adc xor and adcl add add addr16 (bad) sbb negb out aaa stc xchg loop mov js sbb mov insb loopne aad push in push pop or sbb or dec cmpsl cmp call imul inc les and or mov cmp mov mov or stc ficoml das xchg gs in and negl out scas mov cmp fnstsw jmp pop mov mov jnp mov fs ret pop cwtl mov fwait lods mov add mov cmp jecxz mov stos lock pushl mov jmp in pushf lea scas lcall xchg xchg jns aaa jle mov jp aam test andl test xchg into push jns jo dec sbb cmpsl mov insb mov bound leave test sub jmp mov arpl mov push insl or push sub mov mov xor pop mov adc icebp sbb sbb mov cltd fimul je nop inc dec or int pushf mov (bad) hlt mov in xchg cmpsb or adc xchg and jne pop inc xchg xchg push xor push cmpsl mull push push repz dec push fwait xchg insb mov jnp add pusha push movsl jle cmp adc xchg jo aaa (bad) in mov cli sbb lret lea pop mov outsl popf frstor xchg and or push push sbb mov or xor (bad) cmp cmp adc mov pop jo mov sub mov ds fcmovb adc lret push insb pushl jmp inc outsl push fsubrl nop jle psubsw ds in sti cmc notb sbb outsb repnz inc les (bad) sbbl aaa lahf dec shrl pop and adc adc pop inc hlt test stos fimul outsl mov xor mov stos loopne dec out xor loopne fucomip inc dec stos mov pop ret push mov inc xor cmc push adc and sbb xor sub leave fcmovne mov cmpsl or lahf inc mov sbb outsb (bad) sbb jbe icebp jp mov lea mov repz mov out in test cs mov (bad) sub cwtl imul mov (bad) lret push mov dec movsl fcmovnbe or lock pusha sti xchg or sbb cmp stos aas (bad) cmp lcall pop mov add loopne and mov jg lret push adc sar jmp pop push pop mov jge xlat test lods cmp add aaa ja in dec jae stc (bad) in and dec mov neg add jns push sbb xchg sti pop mov sub (bad) push sti gs fldenv jne jne mov mov xor int3 out sub sub cmp dec sub sar rol jmp cld pop les rep leave xor inc sub ret mov jns jo mov movsb lea lret mov push mov out cmc sub popf add add cld add sub xor shrb add xchg aas push push imul or cs les std aad fnsave fnstenv pop mov and sbb cmpsb test ret popa push outsb repz mov pusha mov jae adc sub and jmp adc insb xor xchg pop arpl inc sbb cmp sbb fsub cwtl sbb (bad) cli jle scas subl icebp xor stc clc or adc mov stos push stos cltd das ret icebp ds insl mov sub (bad) (bad) in mov dec ret ror mov inc cs add add movsb adc and adcl sub roll jb les inc rcll pop mov lods xchg mov xor test imul in popa cld xor sbb fldenv or jecxz loope lds sbb int3 gs inc mov inc cmp mov sub cmp pop and jnp jmp sbb out or and call jne cmpsl (bad) mov jo jle,pt xlat jns lret add scas lret shl mov ret add fmul bnd jp bound sub popa jne daa popf jl dec mov lcall inc dec cmc sarb adc daa dec lret shlb pusha enter push xchg fnstenv std inc (bad) and iret push outsl fldcw xchg mov (bad) push popl jp jge jg sub cld sbb je in push dec cmc mov sbb sbb and xchg xor push pushf jb jmp cli adc btr xor not outsl pop add cmp mov xor sbb fist adc add cwtl js loope inc add mov xchg mov and sub mov adc jnp pop js mov daa pusha and cmp add (bad) cmp xchg bound pop iret add jae repz arpl sub push je out pop hlt aas popa pop icebp cld lds jne outsb dec and test ficoml ret fsts cmp or ret fidivr cld imul test push mov arpl je mov add and mov data16 lcall pop (bad) jae fs repnz pop into xor pop sbb rorb mov ja push jmp sub mov cmp add in mov sbb popf mov nop popl pop pop sub clc shrl mov pop pop xor rclb fs sbbb enter clc push mov mov nop dec pushf test call and cmovne cmpsl mov dec xlat test xchg mov stos (bad) (bad) decb loope push cmpsb inc das xor sbbl (bad) outsb mov dec lods or jle outsb fistpl std loop mov mov and inc lods arpl push or pop sub push cmp jmp mov add cmp sbb dec dec (bad) cmpsl cltd xchg xchg push nop pop mov mov push arpl fiaddl movsl xchg and loopne jo inc shr or sbb test hlt nop or dec outsl data16 je fldl sbb add mov gs dec (bad) cmp xchg cmp adc lret dec jns or repnz in sub and (bad) mov mov mov (bad) mulb leave jmp fcomip (bad) lea and aad sbb inc xchg popa addr16 push lock movsb (bad) in mov sti jecxz scas push jne gs pop test mov inc popa xor xlat xor or ss mov xchg adc mov loope xchg (bad) jne arpl hlt andl push pop aad inc mov lods mov inc cmpl push popf repnz es jl fsubs int3 mov ret and aam inc add int3 jo nop fildll or lods and jnp cmpsl mov js out jp jl or add push sub and repnz sbbl or nop xchg push xor std aam sub dec add cmc lret xor push mov aad (bad) (bad) lods or scas mov popf add push sub icebp es sbb ljmp mov xor dec jnp movsb arpl sbb subb xchg in lret mov jg fisubl cs lret and jno mov repnz add xchg cmc adc in sub out jg cli fnstenv (bad) mov (bad) pop in fsubrp push push pminub mov xor mov lcall add mov and ret mov add jmp test out mov adc sub repnz shlb jmp pop cwtl dec or cs or ss adc jle xor or adc jno xchg xchg sbb sbb and fsubs cs add fwait xchg lret and movsb icebp cwtl cmp orl in aas mov hlt sub push pop hlt cmp inc aas out int sub mov cmp xor sub fadd pop stos xor pop or push jg jb pop add jns mov cmp mov pusha insw cli mov bound sbb jecxz add loopne cs repz int3 inc or mov inc cmp xor jo cld xor lods (bad) rcrb popa rcll push jae mov shrl or cmpsl sti aaa add mov push cmpsb shl sbb divb pop pop xor test out inc daa int3 sub and enter pop movsb xchg aad lahf repnz dec mov cmp movsb and jp int3 mov adc rorl jno pop cwtl cmp sub and mov fidiv int in adc sbb inc mov jbe mov rcpps jge insb sub and jne shrb cmp dec cmp or out movl adc xchg aam cmp inc pop das ficoml repz movsb jge sbb mov out jne dec stos popa insb pushf ficoml (bad) aad mov out mov mov or jecxz pop sub rolb and in cmp sub cmp pop shrb and inc jno clc (bad) mov add inc ret mov xor push loopne ja repz cmp repz mov inc adc fldenv dec and sti insl jecxz adc lcall cmpl pushf mov (bad) fdiv inc std mov jmp cld movl mov inc xchg xor cli fst mov cmpsb jae jae mov lret xchg or es rolb in adc xchg add loop jge jnp fstps popa fildl fs push push insb pusha cltd mov andb mov hlt cwtl mov add call adc mov xor cs fimul xchg push (bad) leave arpl push mov pop push out stos (bad) ret pop xor int3 dec cmpsb arpl jmp das cmpsb (bad) xor mov sub aam xlat push cmp mov and inc inc mov aam dec stc int mov fistpll ljmp and xor pop push xor and clc les xor or or cltd add insl cmc ljmp fmulp xor pop es jp rorl xchg lods mov pop cmp cmp loope pop mov jns inc cmp je jno out mov or or mov push (bad) or test dec and in test imul data16 dec jne aas incb sub je or push push cmp mov (bad) cmp add imul insl pop mov int (bad) sahf mov xchg movsl insb (bad) out out inc mov cs pop fcomi mov imul cmpsb sub mov adc (bad) (bad) js lret push xchg lcall or cmp jl aam pop incb jmp inc lret mov fs loope cmpsb jmp cmpsb pop into jo ss in pop outsl sbb mov aaa mov leave xchg aaa test xchg cmpxchg lret sbb mov test mov loope test js subb call ss cmp in mov sbb mov pop or push sbb fistpll lret jae or jno xor lods and imul push sbb adc and mov ljmp and sub mov movsl xlat push test rclb add sbb push add mov mov adc aam stos jo xchg std add cld add (bad) imul outsb ret addr16 mov inc jp mov dec mov jns jae popf add arpl out sub cmp mov sbb add fdivrs adc and in jae jae mov sbb sub rcr xchg pusha daa dec jmp mov mulb cli idiv imul and mov test adc xchg or jle jbe inc adc stos sub shlb sbb bound add add xor add cmp jo mov pop inc cld jl fisttp xchg sub movsl add inc sti sbb and inc repz inc ret jno popa cwtl data16 xchg sbb push cmp xchg lock push sbb fdivp icebp hlt test cmp (bad) out lcall xchg out mov mov (bad) cmp repz sbb jecxz popf ljmp pop je js mov sub cmp ds jb mov pop (bad) enter je xchg push mov mov je (bad) outsl pushf dec and jp rcl add cmpsb add movsb xchg sub mov push mov (bad) jne inc test test jne push mov imul xor push add loopne adc bound xchg aad dec test sbb out xchg inc lret xorb and mov dec (bad) (bad) dec dec pop lret cli daa mov sbb cltd fstpt lahf add pusha loop or ret (bad) xor (bad) push lods pop int nop inc rorl cli enter ds rcr insb jle sbb sub jmp push jmp and xlat ja inc leave loopne js ficom xor mov pop adc sbb cmp pusha mov pop (bad) fldl js push push bound mov test dec sbb jne sbb andl sub mov ljmp lahf iret testb adc push jg pop push and push mov mov adc adc aam pop leave jns ja cmpsb es rolb mov push sbb mov insl scas and mov lret fprem push dec jno ret ja fmull in lcall andps (bad) lods dec mov add imul and fidivl jg fnop pop push sbb das sub adc pusha xchg and arpl cs mov stc sbb jne (bad) xlat loopne addr16 xchg jge add js mov jecxz (bad) jo mov xchg lret das inc out jns sub jge sub sbb cltd mov mov xchg scas iret sbb xor mov inc insl cwtl rorb insb fcmovnbe insl insb mov popf dec movsb (bad) testl xchg (bad) inc enter jbe dec xor jnp stc into das lods or into push add rclb sbb lods dec adcb xchg xchg outsl and xor jecxz,pn push bnd jmp mov jp mov add pop sahf xchg inc ss cmpsl mov dec sub inc xor push jg xchg mov and (bad) xlat inc jbe rorb sub ja cmp xor sahf sub pop and pop jnp insb iret or jp push cmp lock fdivl lcall lods (bad) mov mov pop pop icebp sub push cmc insb xlat sarl movsl mov sub dec xchg adc dec das in adc iret pop adc icebp dec nop loop ret jg jl sbb nopl mov cmp jp mov das into pushf mov int jg lock icebp into scas ret mov inc push dec push test adc fwait jne loope jb scas mov (bad) inc data16 adc aaa jb sbb cmp aaa mov push mov sub mov (bad) enter pop jl push jg pop dec lods scas cmp shrb out test pop dec test aad aam and hlt cmp shll or push movsb mov cli repnz ret out mov jge sbb xchg sub (bad) jbe into sbb imul imul das sub adcl jg bnd (bad) mov ja je adc (bad) inc sub inc pop sub es jb orl pop mov ljmp jle test inc xor xchg push jno ret or inc enter jp push adcl dec sti and xlat scas add lods imul sarb out idivb decl out pop rcl add xchg adc pop jp jns xor sub out dec int3 ret icebp mov mov addr16 ss fldt addr16 cmp jmp mov mov clc pusha popf or movsl jne out movsb mov mov cmp fnsave (bad) mov jo outsb rcrb scas mov jg loop inc ljmp mov xchg pop aaa mov jnp mov jge popf mov clc loopne jno das pop test xchg mov test ror repz jae sub push enter popw fimul icebp stc sub xor pusha cltd adc bound jmp out mov adc jae in incb or imul or cmpl (bad) (bad) pop hlt shrl imul scas (bad) pop sti adc xor sbb fwait pop mov mov stos iret jne cltd popa inc (bad) pop mov int inc push pushf inc adc out pushf lods sub and enter lret mov mov notl std sub xor and jmp mov cmpsl inc lods ss scas stos inc fs pushf fcmovne subb jnp xchg mov pop das xor adc aam jne inc cmc (bad) cmc add repnz xchg pop clc mov mov popa imul out lods lods gs insl sub mov sbb adc inc jge lods hlt mov mov or xchg sahf pop imul cs sbb mov push in popa xorl or mov adc cld stos sbb inc (bad) dec mov cmpsb or int3 das jno mov mov add jns mov push out cmp mov or frstor mov sub adc cwtl and xlat push fsub unpckhps sarl js ret test gs orl mov xchg push lea xor cld dec repz ret ret mov int mov (bad) cmc mov xchg or outsb repnz lods cli jle inc push test jp stos sbb pop ja lds stos mov xor pushf or jae sbb inc (bad) into stc mov inc gs pop int3 aas xchg cmp mov sbb inc pushw push cmp mov pop stos inc xchg call sub ret or xchg (bad) scas jne fwait lock lods sahf pusha fldl dec sub bound lret mov push inc and sahf cmpsb jg int cmp mov pop in dec xor aas mov popa iret or xchg fnstenv cmp lret loopne jle jl jecxz (bad) gs (bad) imul ja mov nop mov outsb clc popa push test inc xchg and cmp mov rolb xchg adc add xchg mov ret js iret std xor test (bad) ljmp jnp test (bad) cmp or mov mov cmpsb add mov jno nop sarl mov jge hlt pop cli lret jle sbb ds xor scas or xchg xor in fstl (bad) imul (bad) mov (bad) outsb icebp or sbb inc sbb imul push sbb xchg jns clc pop mov sarl loopne xor imull mov int inc sbb add cwtl (bad) mov and rorb inc push jne test xchg xchg mov pop inc jne xchg add enter mov mov mov sub mov mov push dec outsl sbb int3 or das push fildl addr16 sti mov xchg ss mov lods int sub js stos adc push or pop jo xchg sub mov aam stc dec push mov scas or pop or ljmp insl mov std jo cmp pop test icebp or jbe,pn ror cli lods (bad) ljmp adc fwait bnd and mov sbb xlat popf popl and ds movzwl and jns dec (bad) mov aad xchg add xor cmp stc mov xchg inc int cmpsl cmpsb mov in jno inc fcmovnbe in cli in pop xor push loopne jno popa ret mov je push cmp in dec mov lds pop lret xor daa sbb push or int test test adc (bad) daa int popf xchg inc out pop dec lods je test out daa lret dec inc mov mov push lods push mov sub jecxz sub inc adc jp stos loopne dec fldenv lock and inc xchg pop inc lods pop mov lods insl push in dec xchg xchg nop xchg jno or and adc pushf mov pop mov inc pop jno movsb add cmpsb rcr pop push scas cmp cmp sbb xor xchg and mov jge cmc outsb stc mov arpl jmp out or dec push push lds es pop inc stos test das push out inc jbe sub dec imul in sbb cmpsl (bad) ja jne add lds and mov inc sbb pop and imul into (bad) or adc or jbe mov xlat pop add jmp and daa outsb lret xor sahf or cmp hlt sub xlat adc push dec stos pop sbb je push mov mov sbb std lahf or or dec cs out xlat jb mov cmp mov xchg and cmp push dec enter imul jmp push jbe lcall call imul xchg jae dec stos dec mov outsb in mov cmp fcmovnu sub jnp xor in cld enter mov push pop mov repnz push (bad) xor sbb mov imul jne rol (bad) loop add mov adc jnp or das loop inc jbe fwait call xor add enter ja mov mov pop and ljmp into mov and imul fadds faddl je or gs dec bound arpl inc mov push mov in std sti inc xchg jle in xor sub inc pusha push icebp xorl js dec aas and les sbbl inc xchg leave popa pop pushf dec flds stos mov mov sub jnp mulb xchg pushf fcomi xchg or call sub lds dec mov rorl movsb adc es xor and sub adc mov xchg clc cmp mov orl lahf mov mov pusha sub push push push out call je and ss (bad) add pop cmpsb push cmpsl xchg and dec mov pop mov cld mov shrb xchg hlt (bad) insl xor jns cmp or pop (bad) lock mov int3 add fs adc mov inc scas insl sub xor cmp push dec or dec mov cmp jns mov push in popf inc mov aad add ret jb lods push pushf int xchg inc lods scas and push jle jmp ja lods jbe fistpl aam fistpll aas ja aam and stc ljmp (bad) insl pop push in rcrl loop fnstcw mov pop sbb aad (bad) dec imul fistp push inc call mov rcll pop dec jnp fsts jbe and clc repz jns out (bad) sbb sub iret xor xchg test jmp xlat or push push (bad) lret pop mov push cmpsb lods mov (bad) icebp in xor sub push ffree cmp xchg (bad) repnz xor mov adc pop sub stos and rcll stc cli mov (bad) popa pop push inc xlat adcl lcall pop pop (bad) popf or (bad) (bad) and rcrl rorb jmp xlat jg ret inc adc mov (bad) lret loopne push dec xchg sbb arpl cwtl mov sbb add sbb sbb dec or movsl and add pop mov fwait (bad) ret push mov xor in pop aam (bad) pushf lods les stos test fstl add pop es xchg mov or imul pop pop pop sub fwait pop push fldt jnp and cwtl pop or das (bad) add pop mov mov mov sbb loope ja insb test (bad) fidiv push imul sar push incl mov sbb fildl sbb pop incl xor push pop pop popf sti lods mov pop jge xchg std dec loopne movsl adc repnz xchg das (bad) xorl ds push les jns popl int hlt gs push and popf test pop mov mov (bad) fnstsw rcll lahf psllq or scas vcvttpd2dq xor dec cmpsl jg cmp and movsl and push sarb fldl jle cmp inc mov lods lret popa lods popa inc and xchg xchg jo icebp arpl fwait xchg pushl dec ret pop mulb xor sbb xor pop xor subl rorl xor mov sbb mov arpl add mov mov lahf inc cs mov (bad) mov push pop mov pop loopne xchg lret dec stos popa loope mov shll push or sarb sbb mov xchg push fs jbe sub (bad) jecxz jno push test sti stc test sbb arpl push or jbe or xchg lret clc add aaa sti sub pop cmp arpl pop ficomp insl insb aaa cmc dec cmp add mov enter xor je cld and pop hlt ret sti jae sub adc lret bound ret in mov movsb mov push mov push mov mov pop clc sbb jbe enter fild cld lods in cmpsl jg fiaddl mov imul insb pop push insb push imul mov add add (bad) mulb push mov mov cmp push jo rolb gs jno (bad) lock jo sub lret fs ds push scas dec sbb jl lret jecxz outsb ret jo xchg sub push adc pusha aas fistl mov push enter adc cmc enter xchg (bad) in (bad) mov ja scas imulb (bad) daa ds sbb fsubrl push fadds dec lahf leave cmp addl sbb or adc dec adc mov sub roll or pop xchg mov mov push push mov fcom add fdivl dec sti dec cwtl mov push clc and adc in cmp inc imul push mov (bad) jae popf pop rcll mov out cli testl dec jge lds inc (bad) sub popl mov popa or mov out or add pop or sub dec cmp cmp mov ret cmp (bad) in inc add adc aaa fsubs ljmp leave pop repnz enter stos cmp xor push prefetchwt1 fs xlat jo push (bad) push pop dec js push inc jo xchg add movsb je scas and (bad) xor mov sahf cmp and inc aaa stos add xor jmp add (bad) test scas and data16 jno adcb bound gs xchg mov lds adc outsb stc out cmpl cmp cmc or lea mov sbb movsl jge jo xchg sbb movsl (bad) in pop jb push push jnp lods subl xchg cltd adc aad adc dec das pop dec mov mov sub call cmp add inc sub xchg mov sti jo (bad) negl stos int and frstor xchg frstor js adc in ljmp mov xchg xchg lds add in ds test icebp xlat push insb int out sub xchg (bad) cmovnp scas xchg dec (bad) dec pop lcall mov cmp bound ljmp sbb jo inc pushf sub cli push movsb shrb icebp pop dec data16 aas cwtl add incb pop mov ret mov sbb cmp inc or sbb inc (bad) xchg loopne push test int3 jle in rorb fucomi test jne fndisi(8087 mov ret in sub enter adc arpl nop scas pop inc vpsrad mov dec leave nop push pop loop enter popa pop (bad) push jg cwtl out arpl sbb sahf rorb call sub test cwtl clc cmp scas jb jmp repz in xor jno out rorb mov or dec cmp jo iret (bad) sbb inc pop mov cmp fistl mov jno push lcall cmpsl sbb push sbb or repz and push js jno push add addr16 (bad) fist scas push push scas scas gs int3 xchg leave lahf xor popa or pop adc mov adc mov das adc inc (bad) (bad) or dec dec jg xchg fimul js sub int mov and mul test icebp cmpsb inc popa mov mov (bad) or and adc pop or xchg dec test bound sub loopne push push pop cwtl jae insl or dec inc jl jnp sarb lock adc out add call mov bound scas push cmp test out jle stos je mov adc pop test sbb andl sub mov clc cmp jge xlat xlat xor adc (bad) cmpsb sahf xchg aad movsb (bad) pop jae addl mov mov pop loopne sbb dec add sbb jb push cltd ds int3 adc sub mov rcrb cmp fsubl sarb dec cmp adc xchg xchg pop jecxz sbb lods jnp mov jne cmpl andl push les pusha add dec mov dec in (bad) jmp jle aaa js inc sub mov aas sub in mov sarb addb adc lods pop fdivrl jae in inc push mov leave fistpll dec or sbb inc call pop or cmp (bad) mov jecxz repnz jbe xchg fildll insb nop outsb pop mov fs jp fbstp leave jnp rorb add xchg jp xchg xor test push mov scas mov ja mov sbb cmp in push jb inc rcrb cwtl inc testb rorb gs mov out mov (bad) insl sbb jle add (bad) fs imul push push lret out mov cltd jno ficoml repnz shrl insl xchg pop incb jecxz sbb cmpsl and (bad) dec loop cs jbe and ja bound insb dec aas pop mov ss ficom int3 mulb test ljmp xor idivb stos cs sbb xor mov mov pop clc (bad) loop push mov ljmp and ljmp jmp fnstcw jae sub jmp cli adc jg fsubrs jb inc das jmp mov aas rcrl sbb aam xchg jne add jecxz xchg dec inc add cs jl mov jae push cli mov push pop fwait dec roll cld mulb ret xor test out or cld fsubrp iret push cltd xchg and dec or insb popf (bad) addl leave adc mov add gs pusha fs addr16 xor test add (bad) or leave std and dec orl pop loope mov fs push dec fdivs out sarb cmpsl cmp icebp rcl ret pop sbb pop fldl iret js dec shll pop ficom pop test adc enter ror outsl sbb xchg js or addr16 repnz sbb (bad) xchg inc sarl add xor mov iret call in fcmovbe aas dec in rolb mov dec mov push fiaddl mov xchg das rep loopne xor pop dec sub out or ja dec inc in mov sub scas or xchg icebp or popa mov jne ret mov testb mov mov test into lcall mov fbstp mov enter mov jg mov mov push xchg sbb dec scas lret rclb dec sub add mov enter or and sahf inc xchg ss scas repnz sub jg cs mov adc stc (bad) xor stc mov xchg imul pop sahf lret jo in notl mov add push jmp add xor inc out sub sbb setp outsw outsb sbb call out loop ljmp push stc cmp jmp imul mov aad ffreep jl inc xchg dec lcall out sbb mov std cs jp push and jno xor in inc jne loop sti xor out inc mov (bad) xchg test jle push pusha ret sub xor adc sbb (bad) insl dec test in xchg mov pop (bad) iret gs das push test (bad) std mov faddl fistl sub mov push mov sub mov loope or xchg fiaddl fidivl or pop fwait loope loop icebp adc xor movsl out push (bad) leave addr16 outsl popa enter lahf mov (bad) mov leave mov and add xchg lcall xor (bad) (bad) mov insl lcall imul add push js xchg movsb sub pusha mov sbb sbb mov jecxz adc bound mov addr16 daa mov lods ret adc pop cmpl je xor popf test cld push mov out mov jno dec into loop and popa pop shll mov mov int3 sahf enter mov (bad) mov xchg (bad) mov and lds xchg push daa cmp std aaa xor pop mov (bad) jmp cmpsb pop rorb xor or mov xchg mov pop and xchg inc pop add push pop jecxz stos cs and xlat ss lcall pop js sbb insb or mov rolb (bad) lret xor jns push out push shrl in sub cmpsl addr16 ret push lcall fisttpl scas int3 adc in jno pop lods out jmp daa call push repnz fldt test cmp cmpb ss dec mov mov jb pop sahf pop test in sbb cmp mov pop lahf cmpsl xchg jb add and rolb inc nop jbe mov enter or mov stos repnz xchg mov pop gs mov mov sub faddl jl (bad) aaa cmp xchg aaa pop jecxz fmul pop and sti clc sahf data16 push or pop push aas (bad) das pop pop out bound jle adc pmulhuw lea icebp cmpsl dec into idivb or scas mov adc loopne inc xlat jbe xchg mov scas push jnp sbb insb sub clc cmp jno cmc add (bad) das sbb out mov or jns pop bound int or imul jge sub aaa sub scas mov inc push mov and pop cmp fwait insb mov ficoml cmp sub mov arpl jns mov stos fisttp rcrb pop movsb mov sub push dec mov cmp es and add pusha hlt aaa or inc icebp and xor add add (bad) jg xor stc sbb xor data16 lret push sti jnp cmpsb sub cmpsb fucom idivl lods jne and sbb cmp inc stos stos pop xor xor adc rcrl mov ror mov adc push xor mov or popf add (bad) sti dec sub scas xchg psrld es sarl lcall cmp call outsl mov scas pxor rolb and or jmp fcmovnbe xor lds push sarl sbb movsl pop ret push mov lds mov inc std (bad) adc pop cmp xor sub push fisttp mov lret lcall sub (bad) sbb ret in adc lea push rorb jo mov xchg cmp and fisubr in arpl cmc adc (bad) icebp xlat xchg jno cmp ljmp sub test out inc lock insl cwtl push adc lods pop mov in out cmp mov pop or sbb rol scas daa sahf in jmp mov and push add fcomps mov add jg add (bad) xchg mov roll mov pop and xchg mov mov cwtl pop repz push (bad) push into mov cmpsb mov jg insb out pusha (bad) jg xchg cld or xchg jp mov cld and scas jns aad xchg add push sbb and jg inc mov hlt test das xor imul dec xchg cmp ljmp and in adc sub ucomiss movsl xor loope icebp dec rclb test pop pop sub in sub sar insb rdtsc test adc cwtl cmp repnz mov cwtl or lret adc mov bound stos outsl cmp jno xchg and dec xchg test les fcmovnbe dec stos add (bad) mov mov rclb jns fucompp push out icebp adc push add push stc cmc lods dec clc jb std pop push stc dec add xor bound sub dec data16 mov jle dec (bad) add inc ljmp sti jne mov mov lods mov push jno xor cs ljmp inc ja xchg xchg shrb in in cmp cld pop enter in lea xchg popf push xor inc fisubl rcll jp ret (bad) idiv push mov sti jp fdivrl dec in adc jp mov mov pop lock mov sub fbstp into push faddl rcll ds jno push cmp and aad or push sub push cmp imul icebp xchg xor repnz lods (bad) (bad) push into push and cs popa push imul dec rdmsr scas imull pop sahf cmpsl pop sahf sbb or in rolb scas repnz imul add cmp (bad) aaa loop xchg push cmc cld xlat xchg mov repz int3 in mov sahf les fsubrl test jo lods jge loop mov mov clc mov add or push ret xchg fnsave movsb adc sub jmp jae inc inc fwait hlt adc mov adc sbb mov movsb lahf sub mov push clc imulb cmp nop aad sbb cltd test mov push in jge (bad) lock mov cmpsl xor push lret imul mov jne mov mov pop push jmp outsb xor or hlt mov fildll (bad) aaa inc inc shr sbb fs ret mov push int jb scas jp and inc push or cwtl inc insl shrb lods hlt dec pop fwait rcrb xor mov lods cmp xor (bad) in pop cmpsl aaa pop mov push push add js sbb mulb dec mov sbb stc xchg clc movsl mov rol sahf pop imul stc add ljmp ja ret mov xchg sub dec lods add add mov (bad) stc xchg adc cwtl sbb inc rcll sbb popa test fldt lret cmp or mov inc ret mov test jmp xor scas in mov mov mov dec pop jmp (bad) or loopne inc or adc xchg std into add sbb arpl inc mull cld lret lcall mov mov xchg lret cmpsl test add (bad) ljmp (bad) in pop mov inc dec iret das divl pop dec aad pop rcll xor cld lahf mov push test enter (bad) mov pop ja inc sbb mov (bad) ljmp ljmp ficom (bad) movsb jne jmp mov repz sbbb mov cli xchg cmp cmovno inc push (bad) push data16 cmp sub cwtl sbb dec mov (bad) push inc inc icebp cwtl sub fidiv mov fmul sti sbb mov ret out inc add jo pcmpgtw xchg (bad) jl mov cld jg mov ret cli push rcll adc pop and add idivb pushf mov imul inc inc jae,pn dec rcl enter cmc pop pop popf call mov imul es push (bad) fldcw mov test (bad) stc xchg je arpl jo push idivb push insb push jne fdivr xor lods sbb mov or lcall dec mov cmc std pop mov and xor pop and fisttpl (bad) dec cwtl push js cmpsl enter hlt mov mov dec test loop imul add scas aas sub bound pop insb dec stc iret lock das dec std aad xchg addr16 pop mov aad movsb dec addl sbbb aaa jge inc push pop out (bad) push fsubrs aam push dec loope repz cmpl sub stos je mov mov cmpsb add dec mov mov push add cmc mov dec xchg mov outsb xchg jnp testb dec jl decb xor mov test nop mov les push mov dec lret stc pushl mov call pop mov repnz es test jle sarl dec mov pop cmp push jne mov mov mov dec jl or cmp nop mov add xor mov pusha shll pop in out mov repz xchg mov add lds int3 loop or sbb loopne sub cmp push or lock lret xchg cltd test cli cmc dec fcoms int3 push mov jae mov pop adc std out cwtl in lret je sbb idivb mov pop xor jg loop loopne stos add push aad nop mov pusha out mov mov scas mov push imul jne push mov sbb fwait sbb mov scas scas sbb into addb mov pop mov push jne dec fdivrs mov push bound mov lock push in add (bad) fcmovnbe cmp out jbe push or cmp hlt lods adc cmpl push data16 leave dec xor pop mov mov mov mov sahf sub and push or inc ret xor aam dec jmp dec xchg in push data16 insl out cmpsl mov test pop xor imul mov fdivrs inc fiaddl cwtl jle xor pushf dec push inc adc aaa leave dec xor pop sub pushf mov and aad fmul aas jbe sbb cmp mov xor and cli push scas iret ss cmpsl lea in (bad) mov xchg mov mov add push mov lods mul add fmulp dec sub mov incl mov cld fsts (bad) mov push push scas xchg std xor into and adc xchg mov dec ljmp (bad) icebp push cld pop imul inc cmp test jmp push mov repnz jp dec in or mov scas or dec push or pop (bad) and inc dec inc sbb aad adc cmp cmc ret adc lcall pop mov dec jbe movsl pusha mov mov js scas ja sbb repz mov int jbe test pop (bad) adc jno jbe cmp xchg mov movsb out lea rol jns imul rcll adc std inc movsb xchg cmp jnp in cs imul rcrl jae jae xchg enter fistl sub mov adc xchg notb cli inc enter mov and vmovntpd cmpl leave mov imul (bad) sbb gs push jg cmp dec pop and arpl xor xchg sbb mov cmpsb or sti cmp xor pop jbe (bad) repnz les addr16 xchg aad push jne dec daa dec in dec push and shl sub and lock mov inc sub cmp push xor inc hlt push insl pop daa xor lret sub push clc pop imul pcmpeqw insl iret inc jmp cmpsl mov lret add jle mov push add stc mov out jno jo aas sahf add xchg out mov in in add pop or imul mov sub (bad) mov pop cmp subb shll xor jle int3 jg sbb (bad) sbb cmp not add push stos xchg inc pop pop push cmp push mov xor jg loop out pop adc mov mov adc inc cld lock jb (bad) adc jne (bad) sub inc pushf and mov jecxz test gs xor int js push sbb add inc sub fiadd pop popf scas jl negb les mov adc lea cmp jmp (bad) mov cwtl outsl inc ret ret arpl dec rcrl push call push in inc sbb sbb adc sub mov int3 out sbb sub test push pop sub mov shrl inc mull lret out inc out mov inc sbbl sub lea xchg mov and dec jl mov lock mov out xchg popf push jae pop lods mov xor fwait lods test dec scas adc pusha push cmp sub xchg jnp mov mov jbe inc pop inc loope mov popa and adc fimul mov cmp and test (bad) pop mov sub insl popf inc jmp add lcall gs pop hlt push shll inc pop imul pop mov test out mov pop movsl test pop lret das inc lcall xchg cmpsl push imul insb lea xchg icebp push or call mov test lods pop loop sar pop jnp push ret shrb xchg add mov pop popf xlat or ficom loop add inc adc fimull cmp imul fisubr fidivrl fisub popa dec mov loop push push push fisttpl mov xor ret (bad) lock sub (bad) cmp pop inc pop ljmp aaa cmp aas cli fst ficoml mov push repz ret stc jb jno pop rorb insb mov jns in subl xchg into jno jl jmp les push sti hlt fnsave popf xchg addr16 inc or and lcall lock daa ficoml ja (bad) mov adc xchg outsl leave into cmp out test push and fnstsw pusha xchg fs dec fwait loopne subl lahf sti (bad) mov repz xchg dec ljmp jge aaa adc adc add push paddusw jbe adc pop nop sahf (bad) outsl fs xchg pop jae dec push and cmp aam insl movsb xor aas mov sbb jns outsl mov dec das sbb cmp push and repz test cmp (bad) jbe fsubs fmul fbld xchg enter inc push sbb sbb leave add (bad) jne sbb add inc nop add fcomps scas mov pop cmp pop push xchg fisubrl push jno ficoml lea aaa push lods pop or sti (bad) sbb dec xchg js movsb test lods enter adc cmp push cmp jg lret xchg push sbb or jle loop movsb (bad) ds jne cmp js fstpt mov imul and xor stos jl loope (bad) adc adc xor andps xchg add (bad) jnp and sahf mov xchg sti jmp adc pop ss divb inc sbb push lods enter sub test xchg inc xor mov imul outsb sbbl stos add mov dec in jnp les cmpsb dec insl or ss dec fidivr into aad in aam cmp adc push xor arpl lret jl and int fnstsw pop mov leave scas push pop lcall shr xchg inc movsl arpl dec mov mul mov icebp sub lea inc (bad) push shrl xlat jle add ja sub daa mov push jmp dec rorb push push mov inc fmuls and mov sbb f2xm1 fmuls ret sub das sbb je mov mov hlt xor dec inc rolb popf adc xchg out stos xchg jmp mov xchg mov stos imul inc sarb lods into lret pop cmp dec or or ret mov sub xchg or pop xor cmp clc or in clc mov mov nop int sbb (bad) outsb jns jo jp inc jbe and add daa pop cmp mov push and and out push pop gs out (bad) data16 loop xchg dec adc sub addr16 outsb jg dec xchg xor xor inc cmp lret mov lret movsb incl test pusha ret test mov cli jb pop and inc scas ja adc mov aad pusha xchg jecxz aad dec inc sub test (bad) nop bound sbb sbb outsl mov push addr16 cmpsl ja loop iret mov push gs or ret jbe push cli outsl push dec les mov sbb in repz rcrb subl cmp mov lods cld test push cmp lahf out jp (bad) mov push (bad) mov mov test ja cmp and add cmp or mov pop sub aam push stos dec jg jmp hlt and bound pusha popf and adc rcll popf push (bad) (bad) jnp jno int test inc pop movsb adc (bad) xchg outsl out inc mov sahf jge and fadd shrl cmp or push addr16 pusha adc (bad) paddw jmp movsl pop xchg mov inc loop xlat xchg cmpsl stc jecxz xor negb test ds xchg add pop or iret fmul mov ficom (bad) loop xor je or ret xchg xchg jmp lock push mov arpl in cld dec (bad) xchg xchg jmp xor push fimul jmp gs test mov frstor mov xor movsb add std sub sbb add jbe add mov je jae push (bad) iret cmp mov lods in lds jl pop xchg pusha cmp mov xor loope insl cs bound popa or scas adc sbb xlat dec inc rep test jp scas xchg ret mov and (bad) dec xor ret rorl dec testb inc jecxz test aas xlat mov hlt jnp mov inc mov and jno sub nop add sti inc ret sub xor and cli (bad) or sbbb jns dec adc cwtl mov cmp fwait jecxz lcall outsl push mov adc dec fnstenv and or or push fdivl cmp adc clc test push data16 mov mov dec mov jmp fdivrs sti std ror and clc sbb ljmp mov cmc and push popf das notl icebp out pop shlb mov mov nop fwait xor pop jnp jb xor insl pop add mov push int3 mov push sbb mov loope or call xchg iret test or dec ret pop mov mov rcll adc sarl aas mov push xlat inc pushf xor fwait cli hlt dec add mov xchg jo pop (bad) lods add push inc or fcomps xlat dec (bad) sbb inc dec mov push jns outsl sbb arpl bnd ss repz mov mov cs jp ds sub (bad) icebp movsb sub fisubrl fst sub pop jmp inc movsb lret leave jecxz sub ret add inc daa cmp inc in mov jb cmp out int lea jg sbb push mov loop andl mov aam bound ret inc cmp pop adc adc push sbb push arpl (bad) cmp push mov sbb insl and xor and arpl in sbb icebp xchg push mov jle scas dec dec sub xchg adc fsubl sbb xchg movsl xor or add dec loopne push xor outsl adc adc cmp call ljmp push mov ja inc and (bad) xor or mov mov adc stc aaa pushw fs data16 cmp dec divl push ljmp lods dec mov int3 int (bad) pushf insl adc (bad) ljmp in shlb push xchg sub push cli or adc mov out ror push insb pop xor outsl push stos sub push jg mov cwtl lea xor int3 or aad cmpsb cli daa mulb and sbb (bad) cmp sub sar or mov pop or sub push std push mov mov inc push push sbb cs movsl sar out or dec mov imul in add std add aaa shrl stos jmp mov push pop sbb mov int mov adc js (bad) lret push jecxz inc lock in sahf mov sbb je lods lds sub jns movsl add insb notl scas jle and insb movsl (bad) clc hlt sub cmp mov pop sub pop jg fimul addr16 mov push xchg sbb in aas fidivrl cs mov jnp clc fisttpll test imul and shlb xchg movl adc mov imul xchg (bad) xor and mov xor movups cmpsb rclb dec xlat push rclb lcall xchg scas mov lods cmp add lea sbb dec addr16 int fstpl xchg stos cmp sbb pop fstps (bad) mov shrb mov adc cmc int3 mov lcall cmp shll in xor in mov mov mov hlt jmp pop add rcrb repz cmp xchg adc ficompl cli fnstenv mov ss adc call insb cltd jbe shrb jp pop xor imul push mov jne and cmc adc sbbl inc bound xor (bad) xchg xor mov jae dec add repz mov inc cmp movsb (bad) ds xchg cltd xorb xor mov xor pop jle jb mov push mov rcll sbb (bad) in adc fcmovu cmpsl pushf inc icebp push pop out sbb fsubrp mov adc test test cmp (bad) testb mov (bad) aaa nop lcall jl add sub fcoml push andl daa stos sti fstpl jg shlb mov pop xor cmp and scas inc add mov push ret pushf or rcr stos std and or addr16 fdivs imul jle jecxz iret inc in xor dec out cmp mov scas dec add mov xor xchg inc faddl jp loope xchg leave cmpsb bound xchg mov push or fbld mov inc mov cmp fistpl cmc jp cld xchg in outsb call gs add movsl mov stos test sub pop loopne cmp into mov jne insl adc stos and dec enter adc ljmp xchg movsl push rcll lret test mov mov daa jnp and cmp and or stc adc (bad) mov fldcw fisubl mov ds jmp adc lahf (bad) and jbe repz insl mov in iret pop stos rolb ss pop mov xor scas shl jge jmp ja fs inc cmp lods ficoml inc jge add xor fmull loop mov or je and jmp sbb mov (bad) movsb mov ljmp aad outsb xor push popa in ja ljmp mov mov in jae shl or or inc push aas popf (bad) enter push xor js sub pusha sbb lcall and stos out ds or fcompl dec jb das inc repnz pop fs lods jno jno cmp mov fwait addl xor sbb aaa mov cmp lahf fldcw mov les mov mov pop clc and loope test aam and cltd sub inc adc push pusha fcmovb outsb outsl inc cmpsl (bad) stos clc psubusw lea aaa add pop out scas adc ss movsb add js adc sub outsl or ja xor adc or fcoml and lea xor cmp xor shl (bad) out in mov inc repnz mov jl add mov daa xchg aad fsubs rcrb xchg (bad) mov pushl add xchg pop push mov data16 ljmp (bad) (bad) rcll pop sbb inc cmpsb lahf (bad) in jbe leave jo lcall sbb add sbb test shrb test cmpsl mov inc daa cmpsb arpl cmc cs pop pop xchg icebp int shlb in mov leave les ret in (bad) mov nop push pushf ds push push sbb in cmpsl or dec ficom ja sub push lea pop data16 lret sbbl push ja shrb leave mov loope xchg jmp xor push ljmp outsb insb cmp data16 jecxz dec es or lret in mov inc clc push xchg xchg jae (bad) ror clc sbb imul jge mov cli bound fcom mov push xchg dec mov int dec mov jnp mov add addr16 dec push push dec and and dec xor jmp and (bad) mov movb repz dec and add mov xor jecxz imul sti jo xor cmc test fisub out ja xchg in pop lds mov pop sbb outsl sahf test movsl mov mov jmp lret xchg push adc sbb ja aas cmp dec jle mov mov mov (bad) fild (bad) mov dec cmc xor imul dec jecxz aaa inc pop (bad) adc mov aam add nop xorb sub imul dec and push push clc loop push (bad) push icebp dec test stos pop push jle into gs clc fdivs pop repnz push push push jnp mov jns cli inc inc sbbl cs test (bad) xchg cltd and sub mov mov jbe push mov cmpsl ja xlat (bad) jbe mov icebp es pop adc pop inc (bad) (bad) cmc fwait clc dec pusha lods xchg sub out sub pop mov bound pop cmpsl (bad) xchg cmp sub in cli mov imul xchg ja push enter mov insb andb ret ret pusha jb dec rolb movsb iret mov neg lods jle insb sub mov xchg cmp push sub sbb mov out nop dec xchg fnstsw mov xchg mov push loop push add mov fwait cld fwait cmpsl test in mov ficom (bad) mov lods pop or adc xchg shlb jno clc mov jbe pop cmpsl test nop mov hlt (bad) jbe jbe push rcll jp sbb in inc pop push (bad) jp fs push (bad) lret pushf mov mov in shll cmp mov dec cmc sub popa ja jle xchg jmp jp fisubr mov fstps mov cltd mov imul jmp int loope ror add fnop std pop xchg jns arpl inc out fmuls mov xchg cmp xor ss pusha stos mov cli xlat jns mov sbb mov xor mov imul inc adc jns jne push mov push inc push push push repz sub (bad) cmp push jnp shrl mov popf cmpsb xchg aad jb lods loope xor mov add dec je ss dec fmuls out push or mov jne enter loop adc mov fimul fbld or lahf xlat push fildll aad sbb iret xchg loope out push and mov pop iret js ljmp or pop push xor jp dec test sbb mov add (bad) cwtl inc out idivb fwait pop fistl test adc xchg outsl cmp xchg pop push cmp (bad) rcrl ficoml outsb sbb negl pop in pusha mov add rcl dec cmp mov mov mov movsb arpl pop leave sbb iret movsl add xor dec mov in mov and add add fidiv das cmp mov test xor out xlat ss repnz cld das bound sahf in test aas aad jno mov push sti mov rol aas and in inc sbb outsb inc lds popf mov popf push loopne adc and (bad) xchg fcomps int3 dec add rcl mov sbb pop into das ret push fsub pusha fidivrl ljmp cmp cli or inc out scas leave in imul fs sti loope rorl mov dec out push sbb mov pop movl jb movsb mov sarl cmpsl imul sbb jg cmp mov mov xor int and jbe pop xor movsb mov xor ss xchg mov test cmpsb add push mov sub (bad) adc xor enter jle xchg and xchg lods shrl movsb popf mov and lahf jl push mov mov repnz fstpl mov sub insb frstor sub insl push loope pop dec int call in adc mov pop or aaa scas cmp pop scas into cli roll inc sub dec mov scas sti mov imul fabs cs push call sahf add scas adc into cmp ljmp fistp jl popf rorb sub jae push ds int3 cmp int3 jl dec mov rcrl xor dec inc sub imul pop pop cmpsb push or test jae mov outsl or cs and gs scas inc test or jecxz mov clc fimul mov inc inc and jmp cltd cmc mov icebp push xchg outsl add xor (bad) xor jne mov jno insl sbb xor push cltd cltd imul pushf lods stos and add out lods jae pop hlt mov xchg sbb adc js fwait mov fdivrs sti cmpsb mov imul mov cld lret pushl mov mov das dec pop pop mov lret arpl pop add dec dec adcl and les inc pop mov and clc (bad) dec mov incb leave cmpsl fist xchg popa test icebp and icebp (bad) lods (bad) enter ljmp (bad) movsl ret sbb arpl inc frstor adc cmp pop stos cwtl dec (bad) (bad) bound aam mov test xchg jnp push add flds cmpsb xor pop bound (bad) mov adc push adc push add lds and out mov insb ficompl (bad) xlat jp lret (bad) cmpsl nop (bad) jo push shlb or mov mov cltd and out adc push xchg in jge xchg pop subl xchg leave cwtl xor pushf stos lods xor adc loop test dec dec or push (bad) and pop mov xchg jns adc shll xor js stc push out inc inc dec cs lea xor je jns inc test mov es cmp dec rol xchg ficompl jae sbb (bad) movsl es dec and cld js sahf dec mov and mov fcomip clc sbb add (bad) mov pop out cwtl lds xchg outsb popa out mov dec fwait xchg sub loop mov iret adc jne mull mov (bad) or or sbb cmp adc adc int sbb ds mov aad push jmp push inc popa fidivrl cmp jb sub dec mov int3 icebp jns xor dec xchg cli mov in xchg gs pop cmp out ret imul fwait cld stos hlt mov jmp stc adc and pop mov sbb dec inc adc mov mov adc stos movsb loopne sub add sahf or or sbb lret test into mov xor loope adc push ja add (bad) push adc inc add dec sub loop cmp dec pop and mov into es lret fmuls test cwtl aaa daa movsb jp pause repnz mov or aas mov std movsl fprem1 xchg mov mov mov movsl xor in imul mov aam imul mov add (bad) mov in aam dec inc adc and cwtl xor jecxz jbe inc imul add leave inc jle lock mov movb adc in insb push and xor imul dec es loop and cwtl push push sahf lcall mov iret ljmp inc mov test ffreep push lds roll sub xchg mov shl fdivs lods or std pop xor int lea imul cltd mov cmpb mov in popf rorl insl out int push push (bad) les fwait pop dec gs fcmovu loop aas xor dec in mov xor (bad) xor mov gs in push lds arpl addr16 sbb fscale popa mov and lods dec lock imul rcrl sahf pop aad sub mov adc lods icebp mov loope aam lods xchg (bad) or (bad) (bad) xor jbe leave popa lcall push mov mov dec xlat inc dec or into cmp enter dec sub lock outsb decl jmp inc push int3 mov decb sti scas mov and pop sbb pop mov ret sub fldenv aad js (bad) adc mov icebp add aas lods jbe stos inc xor xchg nop jg and sbb mov and sbb int3 mov icebp fmull push pop and push xlat add movsb pop pop jecxz cmp ja rolb pop inc rclb enter shrb cmp jns imull lret std jns mov imul arpl iret jbe inc loope push or push mov mov add (bad) (bad) pusha stos cmp data16 sub cld cmc mov clc out pop test clc pop jecxz cmp sub push sub cmp mov pop popa neg pop jno clc nop outsb inc gs test dec sub lods cmc xchg and mov popa mov icebp add lods sub mov xchg call sbb imul sbbb js or inc imulb lret push mov jb mov jne or iret mov cmp pop arpl cmp ljmp int mov pop push cltd orl xor jo je pop pop (bad) mov pop enter out pop movsl std addr16 (bad) test stos fisttpll int3 insb adc insb or and pushf or lods or in ja (bad) mov push test dec mov (bad) in adcl fcomps (bad) in sbb or imul xor test inc je mov dec negb ja rcl mov int3 xchg adc leave mov stos fwait mov xor fisub jb dec (bad) pop mov and flds add dec sub outsl (bad) dec inc jne mov scas sub sahf out fwait cmp xchg (bad) gs sbb fucomi jle ror pushf adc and and cmp push mov ja sbb out out mov lods fwait or mov mov add mov lods mov sbb sbb sbb ret mov mov push cmp pop fcomps pop in lds mov ljmp add inc sbb jl pop mov aam movsl (bad) dec push test xchg cmp ds xor fs scas dec or push adc stos xchg sti fldcw in or rorb aam push inc clc int3 vpunpckhwd test nop call add enter add (bad) xchg scas xchg js in push (bad) fcomps jp (bad) cmc cmp xchg ja inc inc add lock out out pop insb sar stc dec mov enter cmp xchg test ret jecxz jmp mov repnz mov (bad) lret mov popf int3 sbb mov in or lret mov adcl jg scas aad dec jnp jae pop repz fs ret lods in mov jecxz jo,pt aad lar jg call sub jnp je or push dec xor test lds nop scas jle data16 sbbb stc sbb pop lods sbb jbe sbb mov jo xchg push data16 sbb cwtl sub sub jns inc xorl imul data16 add dec push ret les add xor xor lods lret jecxz roll rorb jp jle in dec decl mov xor mov scas cmp push add adc push jns sbb inc fwait sahf mov mov bound stc insl loop pushf pop outsb or push pusha in jmp pop jg cmp movsb sbb sub adc out inc xchg mov dec jbe xor out scas adc in das loopne scas push imull pop aaa ds icebp xor ds lcall stos shll xchg lock xlat mov insb and outsb jge sbb inc orl add test repz sub lds test mov jp jmp (bad) mov (bad) bound mov add mov push add xchg fsubrp dec pop divb sbb fcmovne ss push jno (bad) (bad) mov lcall roll dec sbb xchg and and js mov mov hlt sub fwait push outsl jae sub sbb int3 fdivrp incb xchg arpl mov mov mov cs mov out mov or fisttpl xor call jmp lea icebp jbe loopne mov rclb xlat jnp jnp aaa jo or jle test ja aaa nop js aas cmp leave and push loope ljmp mov fadds aaa pop add ja mov ret mov or outsl dec cmpl (bad) jmp lods stos mov jne pop xor cmp dec dec or push loope cmp outsl dec dec mov scas int pop mov sti xchg pop mov call xchg rcrb data16 ret pop jae adc mov mov dec dec mov xor jnp cs dec mov rorb mov push cltd jl push (bad) dec dec idivl pop jb sub jp in jle das shlb xor cmp aad dec das jg sbb out mov scas pop xor pop mov imul imul jnp mov out adc ffree push test outsb fdivr dec sub int3 sub xor xchg loopne,pn repz sarl pop mov fmuls pop ja sbb mov xchg repnz outsb fnop sbb pop fisub xor fs mov mov sub xchg add dec dec mov mov mov in mov and out fwait leave and inc pushf and add xchg ljmp lods dec lea mov adc in lods cmp int add insl pop add pusha push or notl ror jl push xchg jbe jnp or xchg faddl mov adc sbb mov loopne and dec (bad) (bad) test loopne jbe rolb test cmp pop imul inc jns test and imul mov jmp xor or push jns aam push js cmp pop jne sub repz sub out jbe add aas mov shrl stos (bad) ljmp xor xlat dec notl shrb nop in fdivl outsl pop roll fisubr pop iret xchg mov (bad) jecxz (bad) jmp daa out fiadd fs pop out dec insb and mov popl cmpsl push xchg add jecxz roll inc or popf pop jle cmp or pop push adc push push dec cmp sub scas jno xor std popa (bad) mov xchg adc in hlt and out inc test xor stos mov add fbld jle ds add rorl fldl2e jecxz mov pop loopne dec pop mov cmp xor fwait scas aad mov adc push push daa mov mov test sbb jle dec push cmp cmpsl (bad) aaa fidivr or jo sbb pop or sub xor outsb test mov outsl dec pusha aad xchg into out pop jmp xchg lock lret cld jmp lods adc cs mov push aad add cmp mov cld pop add sbb dec rcrb mov sub inc shrb lods out mov xor loope xor cmpsb pop and in ret (bad) data16 xchg scas in ret pop cwtl mov jecxz cld (bad) dec sub pop jg ljmp cs stos popa test sub aam lcall in (bad) mov lods lcall and (bad) push adc pop or push es gs aas out push xchg sbb xchg les pop cmp mov mov repnz iret jne aas mov push popf jne popa and jnp add xchg mov (bad) jbe or outsl nop aas inc rorb push (bad) ja pop mov push sub out mov mov lahf fild xchg cmpsb xor cmp mov pushf (bad) outsb jne pop dec outsb mov (bad) rclb repnz cmpsl or insb int sub push movsl aam xchg loope sbb mov mov cmp stc into fwait push lea sbb add lea stc dec push jnp push fyl2x stos mov fsubrp js mov sbb mov mov inc mov icebp sub xlat pop dec pop in out push iret inc aaa cs sbb xor inc mov andl ja mov jge push xchg movsb cmc inc jp aam clc test pop xor ret into lds sahf inc stc pop mov or push scas lock mov jne movsb ds push adc pop add mov repnz push push cmp aad jne mov fimul daa aad in push jbe ret add fisub loopne jns cltd gs and aas mov or mov dec jl nop lods arpl vphsubbw mov jmp aas add mov xor repz jno sbb in (bad) fimull daa pop jb (bad) jnp jge scas sar xchg arpl xchg (bad) cmpl shll adc clc aad add iret mov addr16 jle sub lods mov loopne mov push fildll xchg jae cmpl or fadd mov roll mov (bad) mov popf pop push popa (bad) fnsaves sub xor and pop sti xor subl pop jmp (bad) sahf js sub cltd outsb mov sub mov push sub inc rcll sbb ja es imul pop out or sarl lds in movsb data16 outsl jae pushf xor mov cmp aad xor xchg sbb push cld out xor popf movsb scas ret imul repz repnz bsf pusha in in lcall lret pusha jge into sub sbb loop fisub xlat jb mov mov movsb cmp mov pop adc sub dec (bad) ja popa push or adcb pop aam lods pop pop sub getsec fwait mov popf faddl push js out cmpsl xchg data16 xor out add ss addl daa or fwait test popf mov sbb out cs lea les lock push (bad) mov mov sbb xor rolb mov push cmp mov xor fsubrs stos scas add (bad) cltd shrb xlat popf jae nop int3 push outsl sbb lods roll (bad) cwtl dec jae inc or xchg imul es mov mov das sub xor incl scas std xor test cmc add sarb movb pop shld xor mov jge sub and popf inc and or cli test push (bad) loop and pop aad or (bad) rclb or into inc mov sub push mov mov dec int3 cwtl mov popa bound loopne cmpsb rcll (bad) loop (bad) mov xor dec mov xorl and mov fisttpll dec or push call imul add (bad) xchg std mov (bad) test sti cs daa or std dec xor jp pusha jp lret jns popa mov lahf jle push mov gs mov (bad) mov or adc ds mov pop pop cmpsb mov push sbb cwtl xchg or xor int3 test add inc xchg inc pop pop insb mov cmp cltd jg mov push loope mov cwtl xor in mov test inc and cmp adc mov mov adc adc daa jns scas jnp lret hlt negb dec lcall cmp sub in pop imul push lret sub testb aaa push ljmp pop rorb cmc push imul mov cmpsb mov out les pop inc (bad) repz fsubr dec out call ljmp jmp and xchg loopne sbb jg leave cmp xchg mov push in jl mov push sbb and adc pusha loopne icebp cmc sti inc add sub roll sbb jp push ret dec mov push mov push mov pminsw lret mov xchg sti in bswap lods (bad) cmp add cs sub sahf adc aam mov fistl xchg mov dec mov stos push stos hlt push (bad) mov or mov jecxz cmp jb and inc jmp cmpsl dec inc addb xor push or neg dec inc lock cmc clc lea (bad) mov mov pop fisttpll in xchg jg sub in xor out fnstenv jmp fcoms addr16 rcll sub sub jbe cltd fwait pop xchg stos mov cmp lods dec adc or dec xchg into sub cmp sahf movsl aam and mov (bad) xchg movsl clc movsb mov sub cld xchg xchg ss std int pop pop xor shll fidivl js or lock mov divb mov mull dec pop pop xchg xchg cltd popa (bad) rorb stos cmp in dec data16 fdivs pop xchg adc sahf stos jae xchg call pop test add lea mov push jmp fisttpll xor dec out and jl scas lcall mov sarl les push test adc push mov fisubrl mov pfrsqit1 ds sbb out dec push jnp,pt cmp mov sub mov push es rclb jns mov xor ret lods xchg cmc inc adc inc loope mov mul mov lcall pop mov insb lcall jg jmp and cmp loopne movsl mov movsl imul or pop je inc ljmp es cmp mov pushf pop cwtl pop inc fild sub rolb enter inc stos hlt add movsb lret inc stc jns mov outsl add push xchg mov push dec daa lahf xchg push in and cmp movsb xchg and andl jns inc and dec shrb (bad) pop dec push rcll xchg subl jl xchg inc arpl pop adc gs outsb dec test imul sub repnz fist pop and jb xchg out add bound jmp fidivl clc add mov xor je add iret mov pop out add out or mov sub popa leave jo jg lea inc fldenvs pop and xchg xor lods xor repz jmp or mov into jnp and adc pop sbb int3 shlb int3 inc sbbb add mov stos in and xchg std push add pop jbe xchg shrb add dec inc cmc sbb out sbbl arpl jno imul mov xchg (bad) jo jge out fidiv loopne out (bad) sub cli ficomp cmp push mulb or in cwtl cli and fisub call fsubr jecxz mov mov mov loope test cltd xchg iret call ljmp push xor dec (bad) dec sbb mov imul mov mov cmc (bad) xchg int3 cld cli dec dec xchg test or js and jge add rcl mov cmp or repz (bad) sub sbb and add push cld lock fs es in inc mov (bad) push sub pop (bad) mov sub xchg jb fisub xchg (bad) fisttpl and cwtl mov mov mov repnz jo out jb or push fmul bound sub and mov pop (bad) (bad) mov jecxz push add sub cmpsl shlb fidiv subl lock je jns je int rolb and xor ret jne fistp sub mov das in dec test in mov push ret lds hlt enter mov fcoml mov cwtl popa and cli xchg push int enter fisttpll pop fstpl clc cld push fisttpl lahf pop stc les mov jne adc mov push mov cmp xor mov mov shrb fsts clc loope pop inc mov cmp dec sbb je std sbb insb xchg dec adc bound xchg pop dec insl call sahf mov cmp inc add repnz jmp push outsl sub mov lds sbb and rcl mov dec mov xor idivl mov shlb aas je sarl fwait push sub or fldenv out or add das (bad) xor (bad) mov jg insb in insb lock sarl shr lret mov test mov lahf push std mov lret decb (bad) pop xor popf leave xor gs xor push insb lahf adc shl addl lea in jo aas adc aad lds ficomp mov insb or push sub lret into (bad) pop add popf pmulhw push (bad) jb movsl dec add or xchg imul shlb cwtl fdivs repz dec mov xchg jae insb inc int je in and mov pop es cmpsl cmp fsubl pop mov insl dec sbb lea fisttp iret ret roll f2xm1 sbb jbe call push jge (bad) hlt add adc dec jb inc push mov repz lcall push ror fld cmpsl xchg jnp imul movsb popf cwtl dec pop push dec jne call or cmp jns fcmovnb sti xor inc outsl push mov push adc sbb mov xlat jecxz add lds imul mov (bad) (bad) sbb cmp sarb scas (bad) rolb cld sbb nop inc xchg mov adc out loope icebp inc cld roll js xor outsl add repz mov decl pushf cltd ja outsl int pop dec mov leave arpl imul add lahf lgs aas cmpsb xchg aas add jecxz adc int js in or nop pushf sub jns jno inc pop repz sub push mov enter arpl jp push in (bad) imul in (bad) aam (bad) out and stc add mov push and add leave mov fldcw xchg xchg scas in mov jg addr16 push mov mov mov lret insb inc sbb mov and gs mov pushf inc decb pushf mov push test icebp lcall pop push pop int3 aad push lret sub lods (bad) mov scas movsb cmp cmc cld icebp sbb test mov xlat xchg xor in dec jp xchg adc insb gs mov and daa inc xlat sub lret fcmove or gs imul lock pop data16 mov push fnstenv jmp (bad) adc xor xor test add add fwait cmp jae pusha add push mov sub jnp mov mov add inc pop movsb jno cld push popa push xor push test ds cmpsb mov adc and inc lds jbe inc pop rcl mov aaa cmp push repnz (bad) jg mov mov (bad) aam jo out mov mov mov jmp fstps add imul lahf ds sbb insl das add call inc rorl gs dec cmp loop jmp push xchg gs push sbb sbb push ljmp sahf pop cs ror mov xorl daa inc movsb sbb jnp pop xor cltd push cmc dec mov sub subb mov push mov cmpsb mov addb or mov push lock (bad) xchg mov xchg add nop insl push sub scas mov test cltd lahf sub fs pop (bad) mov je daa fnsave mov push aas int xchg aad sbb sbb lcall mov ss sbb dec pop insl cld jae inc icebp movsl cmp mov std (bad) jmp jmp scas push jae (bad) mov aaa mov (bad) pop mov xor inc xlat add add pop dec sbb repnz sbb mov cld or adc cmp jmp adc lods mov sub outsb jo mov rcl sub push mov stc outsl daa lock cmp xor test fcomi (bad) repnz dec outsl outsb xchg cmc and cs out movsl out pop int push (bad) xor cmp rcl sbb xchg jl push pop iret notb ja incb xchg in pop dec ss pop sub daa lahf sbb cmc movsl add into ret sahf outsl adc and lods pop xor clc dec in repz xchg stos inc lret (bad) (bad) and inc cmpsb roll xchg or fs scas mov xor mov mov xor call dec (bad) push mov int3 adc jle push out sub fwait xlat inc mov jmp pop loope mov sub push or inc add pop add fldcw aas adc push gs orb cld adc mov shr inc in clc cmp test lret pop mov rorb sbb lcall or push xlat es xchg bswap jb pop xchg fwait cmp mov sti (bad) repnz cmpl je push jg mov push rol and scas mov or scas xchg test popa loopne aaa shr test (bad) push call mov cmp aam fs inc mov cltd cmp jb cwtl fiadd idivb enter xchg jp fnstcw cmpsb cmp bound inc iret les pop mov pop adc cmc shrl xchg jb mov negb into fimull adc outsl jb jp adc inc add sub insb repz push test cltd imul pop das negl inc les sahf (bad) and push jmp pop jl syscall ljmp or mov adc stos sti jno out (bad) jns es add mov adc int and repnz mov jbe ja fcoml inc cmp fisttpll fwait out push sub inc adc lahf je add dec mov and int3 dec jae ja cltd lds inc bound call lock add dec icebp mov add test pusha and pop imul push and ljmp and frstor les dec pop jo into dec jne arpl ja mov (bad) xorl and jne mov cli jo std dec cli mov and add add adc sbb inc cmpsl xor jp stc loop xor cs inc sbb mov stos mov sbbb or pop or xchg xchg cwtl shlb in sub lock int3 aas ja (bad) (bad) mov cmp cwtl (bad) shll fistp cmc sti jle xor push push je mov lahf push loope loop cmp sti sbb dec repz icebp push arpl xchg xor sarl popa sub pop aad jge ror fldenv and cld int3 mov add int sbb mov fisub xor iret push xchg and cld mov sub push push inc pop jns cmpl xchg jbe rcl sub dec inc outsb je test shl or cs in (bad) es mov mov mov or pop pop cli mov orl jl out stos pusha fcoml sub pop clc mov mov mov mov ljmp ljmp in dec data16 adc ret pop test outsb dec mov loop test fmuls movsb mov adc xlat (bad) hlt bound jl mov xchg mov insb mov pop push push imul (bad) ret (bad) roll scas adc lahf mov loope aaa inc mov popa (bad) js cmp jmp pop mov mov dec push imul fild in push add aaa out mov push arpl lcall push fadds (bad) aad loope imul add and xor mov imul and into mov jno data16 add int3 arpl inc pop xlat add adc jl sbb inc movsb inc (bad) shrl xor je pop push mov push push in pushf scas mov xor mov mov notl mov lcall xor dec mulb add test mov and aas popa sbb pusha cmp rorb adc (bad) sti dec add pop fisub mov aas nop int3 cmp into je loope aas mov pop cmp sahf andl cwtl pop add add (bad) mov inc (bad) jmp sub cmp or imul and stc (bad) lea push adc orb mov push cmp out insb repnz icebp or or lahf lods sub jecxz mov dec mov or pop int3 mov and cmc ja pop adc inc and es fcmove pop xchg rcll add push (bad) ficomp cmp mov rcl inc mov fiaddl pop (bad) mov adc xor mov sbb pusha int3 rolb dec stos outsb sahf test mov leave fwait lock adc into fsub insl push inc ror popf cli shlb mov dec sbb stos xchg xor aas into (bad) ds fmull dec cli xor sbb pop fnstenv popf inc icebp jb jg jno scas sub loop sbb popa sbb push pushf mov sub fnstcw js pop fildl in add and mov push cmp push or pop cmp aas xor arpl std inc sub (bad) out rolb and xchg iret mov (bad) lds icebp out outsl imul insb xor pusha int sub loope cmp ret xchg xchg push xor dec push out sbb bound or pusha push lds sub sub test sbb std lods cltd das pop aad xor add dec out jo loop adc fadd popa adcb les pusha add aad cmpsl neg mov inc mov mov cmp add sbb pop and xor loopne mov and cmc jne outsb xchg loopne (bad) popa inc outsb xchg lea loope gs es sub sti xor add xchg or jbe sbb lahf push pop and mov rcll inc call mov or sub cwtl jo in jno out movsl lret pop adc and and pushf std push mov mov (bad) sub or mov xorb dec dec xchg leave repz xor rol pop stos lahf xchg cli mov pushf aam xchg hlt cmp push pop aam inc pop ja and in movsb incl out daa lret and popf repz push push inc xchg pop mov loop movsl out push jb fimul jno cs cmp cmpsl aam sbb inc out push and jns jle insb andb (bad) fstpt pushl push dec mov xor push or mov hlt dec inc pop cmp stos mov lods xlat jo pop sbb add add call mov popa cmp mov mov stos mov cli push xchg mov test push xlat mov cmp xchg bound dec add push cld repz jae int push xchg push cmp sbb mov es out (bad) adc xor (bad) or loope shlb shl push loop push xchg inc xlat adcl (bad) pop loop mov add add pop mov lahf repnz rcl pop mov fstpt lcall leave and pop lds mov sbb ljmp pop into cmp add cmp test nop lods lods sti (bad) jo pop sbb cmpsl xlat popa insb push andps (bad) es addr16 shlb and std cmpsl fsts cltd outsb repz xchg cmc outsl out sub inc or cmpsb pop sti loop cltd and (bad) adc add xor int3 test xchg pop arpl outsl ret mov mov xlat jp jns mov int push leave jo in mov push jne leave test lds out mov pop lods imulb (bad) std dec xorl mov ret (bad) push jl lock aas scas or sbb sbb dec cmp jbe (bad) fs mov in aaa jb jmp pop (bad) (bad) xchg mov lods ret rolb sbb adc mov (bad) in fcoms lea mov fcoml mov stc fcmovb and test pusha push push jecxz bswap xlat xchg iret sbb fwait mov rclb out ljmp test jp rorl mov and lahf adc pop mov adc stc mov movsb pusha mov push xor fildll test and arpl loopne jnp bound lods pop cmp sub lock cmpsb inc dec sub lret rclb mov push in (bad) push jae fsubl nop cmp jnp or mov mov add cmp xchg dec mov jle mov ss stos cwtl movsl lea ss mov sbb push mov jmp sbb mov inc xorl cli (bad) stos sbb lret inc insb jge mov in pop loope out add inc insl xor stc xchg push mov adc jne insb orps into repz and jge and push jne insb icebp js pop xor add leave xor and push pop ljmp jmpw (bad) incb mov pop shll (bad) cld leave fwait fwait ljmp ja imul adc and xchg mov stc mov test fdivr cmp jge divb jmp loopne xchg adcl mov xor fwait sarl out and lods gs cli nop pop dec and std out inc lret push sbb inc mov scas enter pusha mov mov pushf jmp and pop mov sub popa nop mov int3 inc cmp sarl mov or pop mov stos mov ret add sbb dec sbb in or or cli int3 inc jmp fidivr jo xor mov addr16 and out inc sub dec inc sbb mov out jne sub and dec push loop stos sub pusha xor ficomp lcall leave loope jb fstpl or sbb push mov mov es roll jo dec cltd cmp cmp aaa inc jmp aad xchg push and (bad) idivl repnz mov outsl jmp sub mov nop outsl add pop bound in mov ljmp lock mov (bad) fnstenv gs inc out bound out sub aam lcall jns (bad) or inc ret popa pop int jmp test lea lcall add out (bad) cmp out and cmp mov add fldenv arpl add icebp dec sahf dec in data16 xor or mov in aas xor int test imul arpl negb xor and fnsave sub bound and inc dec mov ds pusha xchg push or ds jmp mov cltd inc outsb je inc dec mov mov cli and pop cs mov and push adc sub xchg dec iret repnz mov das dec adc fmull mov jo dec or xchg push mov adc pop movsb jge imul stos or in call rorl aas mov scas push aam sub add xchg div addl push cld cmp add ss jl inc dec mov scas mov push xor xor pop addb inc xchg fldl and sbb cs imul loop and or sub in push fild pop and dec and lret fwait push pusha imul ds or (bad) mov xchg and insb and cltd ret add in or addr16 lods (bad) in aam mov cmpsb mov add jb add decb jbe sbb lcall mov sub add jl cld cwtl jle outsb adc test lea sub push hlt add test (bad) mov lock and pop rclb jg and cmp daa xchg decb imulb inc imul clc repz ja rol insb mov mov sahf inc inc out and lods ret cld pop mov xlat stc push clc aam test lret (bad) adc jle mov xchg inc jnp add jecxz xchg mov add adc (bad) lret pop xchg xor arpl adc push xor out inc call ljmp (bad) lods iret js sbb pop lret push xor gs mov adc jns inc imul dec js jns cmpsb icebp dec jne add inc rolb push fucomp pop faddl push cmp arpl in sbb lahf test je push ds repnz sbb cmp pop sub and scas outsl arpl mov pop pop nop dec sarl sub mov daa inc out and arpl fstp adc jo ljmp adc xchg jecxz xchg mov loop mov lret push xchg in aad fwait xchg or jns mull fwait into add jae addl sti mov adc mov or pop xchg push nop xor lea dec scas push pop repz sbb cmpsl test aaa fisubrl lock cltd push add sti arpl fiadd mov sbb lods sub mov scas jle xor xchg loope inc dec gs mov scas push test cmc stos movsl and ljmp xchg ljmp push mov lretw xchg inc cmc negb xor inc ret imul cmp jg mov cs ss out inc (bad) mov push pop cmp xchg lret adc xor sbb pushf sub lcall rolb mov ja mov decl dec and dec call cltd outsl push scas xor (bad) rol jmp pop aaa xchg mov inc icebp sub jae xor call jno in mov imul mov jmp jbe mov jb sub jno sub and and (bad) popa inc adc (bad) repz jmp sub jecxz push push jo jae jecxz sub addb fildl cmp mov add test mov jo fist sub mov xchg decl xchg xchg xor stc mov mov shr out pushf jp push pop fnstenv nop xor rcl jo fnstsw adc sbb loope mov sbb cmp in mov int3 aas sub sti and jge hlt mov nop les add or sarl loop sub clc (bad) pop mov lahf sbb and test cld in lret pop fwait xor (bad) cltd or fildll out daa sbb sub push sbb jecxz mov and cmp sbb sbb sub push mov sbb jns,pn out xchg sub hlt pop test (bad) lea jns cmp dec inc xor inc out adcl scas loopne sub xchg fcompl (bad) roll lret cmc cmp (bad) frstor in arpl outsb push fcoms push push packssdw cmp les lds shrb push jae push mov in sbb jl xlat nop add xchg frstor push mov scas imul cmc insl xor mov dec fsub xchg cmp mov add push loopne fdivrl ret lock add mov ret mov sbbl jge je aaa lret insl adc in pop add sbb dec in cld jmp out cmpsl cs cmp (bad) pop push mov add cwtl xor mov cmp pop or cmp (bad) push je in decb in jmp repz cwtl test xor inc mov ds pushl xchg cmp push cld inc cmpsl adc sub movsb in xchg repz adc enter daa push stc cmp repz es pop mov jmp or dec lock (bad) jmp lock sub fcomps sbb pop pop sub cmc xor out sbb in jp lahf xchg loop scas gs in cmp pop (bad) adc push js loop mov adc orl jns sbb jmp (bad) adc outsl cmpsb orb or dec xchg jnp add sbb dec sbb sbb dec sbb xchg lock xchg ljmp cmpsb aam sub sub sbb test mov mov adc insb stc sbb test stc mov imul push in out mov data16 insb mov inc mov (bad) lea lret push cwtl mov loop jae pop mov and xor mov fcmovnb in les fwait cmp lret push cs (bad) mov xchg iret movsb in out xchg lret insl and mov repnz dec mov mov repnz or jnp fimul xchg xor repz pop mov xor vpandn jmp adc popl cld mov mov inc int inc fdiv sub fimull out and dec mov mov imul insb adc mov cmpb push adc aaa jl pop mov mov adcb add loop jnp mov adc outsl pop mov jno nop (bad) ljmp or push idivl test cmp push arpl adc call xchg mov fsubl xchg (bad) pop ds aam xor sbb dec es scas std inc inc adc mov pop or adc adc pop mov dec lods cs scas xchg mov cmc xchg fs jl xchg (bad) (bad) daa mov xchg out cltd movsb in sbb adc ds push xor jmp mov incl dec fwait xchg push (bad) push out orl nop and mov or movsl dec push arpl scas inc test mov fdivrp jbe pop into add enter sub jmp leave dec shl jmp xchg xchg fwait shll lahf nop test in stc iret cmp xchg faddl outsl xor ds pop repz (bad) outsl cmp cmp add pop ljmp adc dec cmpsb in lcall fcmovnbe jp js inc add xchg and jmp fistp outsl mov or cli dec jg and mov cmpsb in sub je jge push mov dec in loope pushf pop shrl and pop sbb jae dec (bad) push xchg xor dec jae push in mov mov cmp out loopne and aaa mov dec cmp push shlb cltd gs stc xchg arpl mov lret aaa test fidivr test pop mov test mov jle sub int3 sub sbb ret test mov and gs movsb adc dec fldl jp mov cmp xchg daa lock lods jecxz sbbb out and sbb hlt adc pop gs aam sbb insl cmp js nop lret or daa xchg sbb sahf cmp cmp ljmp fcomps out scas mov or jg std adc dec push (bad) adc sub rolb cwtl test inc in mov sbb das push push clc dec ja fxch rcll shl cmp movsb (bad) hlt loope sub jne push int jge idivl cli inc les jecxz mov movsb repz fistpl decb mov mov jae shrl pop xchg push mov sub cmpsl iret adc repz jns mov dec loop cmp popf (bad) jb mov adc adc clc dec xor mov clc mov arpl cli push xchg test fldenv pop cmp sahf sahf lahf test sbb cmc mov jns jg and mov orl leave push pop or mov push repz popa bound inc test leave fwait jg mov or inc icebp addl inc hlt std mov pushl add dec mov ljmp aad jns sbb lods inc mov outsl mov shr bound loope xchg xchg adc fisubrl push jge,pn sub mov int3 add mov and add ja imul (bad) in insl out imul movsl (bad) aad and call adcb out fstl sub daa (bad) rol inc jg inc push (bad) jno jb inc cmp dec in push clc and mov (bad) mov (bad) xor inc mov (bad) repz fist jg mov push stc jg ret jle add pushf lret lcall sub adc adc jne ljmp add inc push jp,pn std pop and movsb (bad) or xchg sub pop ja jecxz nop xor mov jbe lock add mov mov sahf and xchg pusha (bad) xor andb add mov cli arpl adc out xor rcr push ja sbb aas sub mov fmul jae aad pop mov lret mov pop gs and sahf lods loope (bad) mov mov dec xor iret fsubrl adc test and xchg pop mov (bad) xchg loop daa test rcr pop or loop mov xchg xchg xchg shl jo icebp mov inc fstpt dec hlt and lcall dec cmp push leave push fdivr dec push jp push loop add push inc jbe and cwtl xor inc pop cmp fidiv and jmp xorl scas aam insl xchg gs and js dec (bad) mov aam or es xchg xlat pop cld nop out or pop xor (bad) enter cmc jp ret aad bound sti add movl fildll lcall mov inc adc jb insb lock add cmp cmp mov mov mov dec roll mov inc lea inc mov insb dec in inc xchg notl push dec mov insl jmp int or int cli lret jp ret sbb or mov xchg mov test dec push xor nop adc popf jb bound xor fsubrp and mov xor xchg nop jl xor popa in insl insl ret (bad) cmpsl inc xchg or in lock jbe pop sbb cmp fcoms cmp lea sar xchg fcomps mov nop mov xchg and pushf dec in pop sub dec daa mov inc pop imul pop push fsubrl xor pushf iret mov push test mov mov xor push cwtl stos xor cli cwtl sbb mov mov pushf into movsl xor ret mov subb pop sarl pop andl aam push nop out xchg je push cmp pushf mov mov push iret mov loope mov cmp cmp push lods lahf jne cs xchg push xchg (bad) push sub fs sub scas push mov (bad) stos clc inc mov stc fwait rorl stos pop jp lods stc xorb or popf dec int3 push imul add outsb jno mov lods out sarl mov ljmp shll mov gs insl and fs aad push stos scas or dec cltd mov push lods or pusha jae popf fistp shrb and jp aas pop xlat xlat and or mov dec int push test jl pop add cmc mov daa sahf (bad) es rorl les aaa pop cwtl mov cli lcall adc insl fsubs enter jle add ret jne ret nop (bad) imul xchg fstps mov loope and enter mov sbb sub ficom pop adc mov fldenv int pop push repz jl mov in add aaa xor and inc das cmp pop into cmp rolb pop sbb jno rcrb push mov lret mov jbe jnp (bad) fild (bad) mov pop and cmp scas clc sbbl sarb xor pop rol mov sub inc add dec cmp icebp (bad) lods cltd shrb fidiv inc mov mov loop xchg push repnz inc lahf pop pop movsb or (bad) popw xor aaa ja lret push add lds fdivrs clc xchg mull fdiv mov cmp dec repz sti out leave cli or add (bad) or cmp shlb push aaa lret test ja mov push data16 jnp or popf jle ret adc test mov js sbb fistpll clc cmp sub in (bad) adc mov cmp repz push inc and lds mov mov add loop (bad) mov adc pop lret sub push call push dec push (bad) aaa add pop mov mov add mov xlat add xor mov add js lret cmpl pop pop mov icebp push adc lods pop cli pop pusha push nop fwait leave call xor cmpb cmp adc adc sub (bad) mov pop cmp pop xchg cmc es rcll leave outsb in xor sub test int lods aas mov sti pop cld inc lret stos cld aas jne adc push rorb sbb aaa fisttp or lahf and jle pop icebp loopne stc aas stc rol lcall dec pop mov mov movl xor inc sahf int3 scas add cmp into adc jb pop add popf and data16 xchg or jmp mov cli mov adc xchg jmp cmpsl icebp faddl push es jge lret sbb popf pop jl xchg into mov xchg shl mov xor add (bad) insb jnp jmp shl jns movsl addl sub icebp dec (bad) mov push popa push ret (bad) into pop inc scas xchg addl lret aam dec bound adc xor mov in add push xlat pop ljmp xor arpl es dec stc push add push sub jno inc je mov mov jg roll outsl inc in imul loopne lcall sarb mov push adc mov and cwtl aad push into or adc pusha mov ds mov sub cwtl std test add hlt mov jo into pmulhw xchg pusha mov in movsb jmp and and xchg inc mov inc and or mov pop movsb push jg sub fistl mov jg mov xor (bad) arpl ficomp (bad) jmp fmuls add mov cmpb jno pop mov push popf aad pop in sbb test sub push fmuls sbb mov arpl lahf test xchg lcall or mov stc add mov push cmp sahf (bad) pop lods push mov mov (bad) pop out xchg push mov mov int3 mov repnz xlat repz rcll fistpl int popa (bad) cld or mov (bad) jbe mov mov popf mov out adc and sub gs hlt icebp inc repz mov sbb (bad) mov ror popf cwtl mov fnop or jge mov and cmp daa lcall insl mov or loopne ja mov stos rol mov outsb add test inc rorb adc cmp cmp xor inc xchg call lds xchg add add xchg mov sti sbb push sbb push xchg movl test nop inc jbe sbb pusha in pop pop stc xchg jge mov pushl pop pop push push loope and mov mov aas and outsl xor inc fstpl add or push mov fcomp in out aas mov out sub fdivl (bad) icebp cmp aas repz inc inc ss cmpsb movsb int3 jecxz sahf test push aas sub push inc dec ret shrb add jne sub ret mov loop mov add (bad) in add daa cli fcompl xor rorl push xchg fidivrl mov fidivrl sbb mov data16 cmp (bad) or sahf sbb mov fsubrs (bad) sbb inc mov leave and scas lcall jne faddl (bad) cli add mov pushfw xchg push loope aaa jl in inc mov mov inc (bad) outsb mov push add test pushf dec pop sub sub (bad) std xchg ficom icebp dec push dec mov xor repnz push jecxz stc test mov movsl dec shll pushf dec sub push or in in movsb ss sub mov pop jecxz and pop leave arpl xchg or aad add pop arpl add movsb (bad) push pop mov jno test test mov inc push (bad) jge scas ficom js mov fldt stos clc mov imul popa aas mov test jne call jg mov and cmp cbtw in (bad) das push sbbl das push add pop xchg frstor std xor adc jmp (bad) test ja jl scas sbb int3 cltd mov inc xor push int3 pop inc cmp pop sbb rcll ror jae (bad) sub xor pop movb fwait xchg fldt sub or lods cs les (bad) lods sbb (bad) xor add mov (bad) pop adcb icebp outsb js fisttp inc data16 cmp sub dec mov or mov movl pop in push xlat cld daa xchg repnz dec jg push xchg mov ficompl and repnz adc ret lods xchg lock and addr16 mov shll xchg sbbl cmpsl in inc cld jbe outsb adc jbe jle,pt incl dec arpl (bad) lods dec sbb in leave inc push push dec movsl outsl dec in sar insb and aaa mov daa inc std lea jnp ja mov divl vpsubw mov call loope sbb test cmp out add sub popa push in sub mov push xor add add inc sbb (bad) mov inc inc dec je xlat xor inc test mov lret aam (bad) xor mov insl ret in iret add test mov orl cmp pusha sub outsb int3 scas push cs cmp popa lret inc loop sahf dec jge out jecxz fst sub inc push mov sub mov aaa push cmp sbb lea pop int3 adc push je add ret out pxor stc cmpsl add ret or in cmpsb outsl xchg mov and xchg mov (bad) mov sub ss in outsl fidiv add mov in in ss add xorl out pop pop or push mov ja clc rcr ror and cli cli sahf popa pop inc (bad) xor rcll cmpsb xor dec fiadd mov push lahf in movb into repnz jb aaa sub add and sbb in das cmpsl xor fcmovu fisttpl xlat mov dec (bad) in cmp inc inc (bad) mov mov adc cmp mov dec inc mov xchg cmc pop jp jnp iret mov jge neg les rorl dec and mov dec cmp jecxz xchg and add pop out cld lahf cmpsl jg pushf jo mov test rcrl inc xchg mov mov xchg push inc mov lods jnp add int3 (bad) sub dec mov inc scas aam je push sarb dec xor adc xchg sub jmp fwait and out popa sbb pushf jle les scas mov cld pslld aas stc shrb sub dec ret leave jl add movsb xchg cli int3 cmpsl pop popa mov jle push and repz xor sbb and adc cmp or add jecxz push push mov mov mov sub pop in push rorb stc push (bad) int ljmp aas lret sbb rcl sbb loop sti mov mov dec jl je sub roll jbe xchg sub xchg xchg push in ds cmp lods jne (bad) or in shrl arpl pop mov push xor mov or loop dec leave add mov pop or jmp sbbl mov xchg sahf push xchg clc loopne dec pop push inc jae arpl cwtl push mov loopne or dec mov inc in sbb xchg jecxz rcrl push jns iret cmp mov fsts pop pop sub or sbb lods jg jbe (bad) jl stos nop jecxz dec lret xchg jbe ds and push imul imul and inc mov cwtl aam mov insb or mov xor push mov mov fild test fadds and and movsl or mov (bad) ds or cmp cli int mov enter cmp leave pushf rcll clc out pop inc imul cli lock icebp lods add mov cmp (bad) aaa into in fcmovu and loop push xchg mov xor into pop push das pop bound dec xor test aaa pop (bad) imul fadd sbb out jge adc in sbb or jmp cmp and push cmp mov push cmp sti cmc xchg push inc xchg or call cs mov jae shrb in mov insb cmpsl push (bad) jmp adc inc add add pop (bad) or mov pop adc inc ds mov adc mov dec and hlt aaa (bad) aaa jne es lock pop mov and out sbb xchg (bad) imul push cwtl xchg sub add mov adc mov cmp lcall and inc pop in fcompl add pop clc xor inc dec js or insb jbe icebp add es mov in xlat out sub jnp mov adc mov cmp loop (bad) call mov xor into xchg cmp not mov repnz notl outsl sarl popf in sbb adc pushf shrl inc push mul inc add xor mov or inc rorb insb clc mov mov pushf dec pop dec lea jne xlat ret iret sbb lret bound sahf cmp xorl cmpl sti sbb add cli dec sahf imul in ljmp lds push and cmp add push pushf movsb mov pusha (bad) lret mov mov jo fadd aas jmp mov push das (bad) xchg (bad) stos (bad) push push sbb inc dec out les and je mov (bad) (bad) ljmp jp xor jb sub dec adc push fisubr sti push mov addr16 cmp sub xchg aas add sbb adc push xchg dec mov push ja sbb fldt pop jmp push mov push les cmpsl insb push mov cmp or test sub (bad) nop lret sub decl and dec jae inc cmp cld stos icebp in pop stc or mov or fdivl push xchg fist fadds push xchg hlt mov xchg inc pop call test mov pop leave sub xchg testl daa dec xchg xchg jmp (bad) pop adc pop mov mov fiadd test pop enter fsubrl jne popa test stos imul aam test lods mov outsl cmp call dec pop aam sbb mov mov and inc push dec cmp movsl mov cmp outsb xor ret test inc out and lods into aaa mov push sub jns mov xcrypt-cbc cmpsl xchg negl mov push es std in sar cltd cwtl out int3 sub adc cmp pop in and jbe pop fstl leave fcoml xor and aas in leave mov cltd negb ja jb jmp call pop mov jecxz enter push mov inc je adc jle cmp out dec fucomp sbb leave imul dec fdivr or cmp repnz lret mov stos push addr16 or es jae cmp inc dec mov cwtl cmpsl mov sti scas mov xor repnz pusha inc ja sub push out add mov xor xchg aam or orb pop pop sub cmpsl pop into lahf stos iret pop cwtl or ja jnp lahf repnz lcall mov fist fstpl fcoms xchg lods loop shrl int3 mov or enter into or test out lret jmp in and cmp or push pop mov insl test cmp jp movsl imul dec mov stos and jb cmp mov sbbl lock test ss and ret push daa icebp mov jge iret int push jle and xchg int push cmp call popa add push loop mov push push or lea dec xor adc rorb sti pusha rcr mov adc adc sbb dec outsb inc mov test inc lret mov ss inc or (bad) insl add cs jnp sbb icebp dec add stc fidivrl push sbb xlat fwait out cs sbb roll cmpsb inc addr16 (bad) mov cmpsb jo pop popa pop out enter jno out or mov xchg icebp mov mov xchg movsb (bad) (bad) loop cli stos inc mov outsb push dec pop add xor xchg inc inc pop dec fildll jo incb pop fcmovnbe fcmovnb push pusha (bad) adc mov rolb subb inc sub or xchg xchg mov ficoml push les xor push or pop loope enter sbb sahf pop push and into dec rolb and inc adc cmp int mov push sbb gs fcoms dec xor pushf and push inc in cmp imul sbb push or add mov popa movsl lcall movsl gs cmp inc cmp call jb jae daa popf jle or mov pop push scas jl insb mov outsb sbb fnsave push cmpsb and jne das into fwait jmp hlt (bad) leave out pop stos sahf mov adc ss mov mov jecxz and sbb mov fdivs dec xchg push jg sbb push scas js lret adc out call clc inc std push in (bad) push lds xchg xchg loop xor or adc int in aad stos sub nop call imul in mov sub imul push inc ficompl adc dec sti sbb loope leave imul mov repz jge,pn pushf push sub cmpsl lcall cmpb sub fwait gs sahf cli dec inc dec data16 jb add mov fisubl es or mov icebp lret cwtl mov test in dec into call dec inc insl hlt pop lahf insl xlat add dec sub imul popa inc cwtl push ja jecxz jbe and sbb jp lahf sbb (bad) xchg adc cmc xlat insl call adc xor nop lods add sahf lods lods push push into push jae sarb (bad) sub pop sbb adc subl push cltd js js (bad) (bad) mov cmpsl aam jp stos sahf jns out lds push out push or and sbb mov adc pop inc pusha loopw push ret add push (bad) sbbl jb movsb movsb mov pop push dec cwtl enter std lea test out fisttp jne lods in rorl push ret call cmp fadds sub xchg and fimull pop fwait outsl fcomi jnp xor push (bad) scas pop std pop test xorb insb gs lret stos in test cwtl pop adc sub cmp in ja js xlat (bad) sti xlat xchg push aaa dec (bad) jae pop add jbe xchg inc push rclb adc mov andl xchg or mov (bad) out jae mov orl pop je dec (bad) repnz nop jle mov sar ljmp mov bound xlat repnz cli stc nop push inc cmp dec (bad) push cmp or jge pop pop or pop clc cmpsl jge arpl pop lea inc adc imul jmp sbb mov lahf popa cmp pop sub andl sbb (bad) jbe daa mov xchg insb popf out dec mov loope sub cmpsb icebp into cmpsb stc mov mov push frstor inc insl call inc adc js mov xor push cltd scas mov mov sbb jmp inc jne inc push (bad) lret dec add mov lret cs jg lods pop jno or cmp adc out jns cld add icebp (bad) mov es sbb popf aam mov jne popa xchg dec jns pop shll in lods (bad) jno inc sub call xchg mov pop int cld xchg sub test xor xor ss jns in out xchg hlt lods icebp lret movsb lret ss pusha sbb pop pop and pop popl mov ret nop arpl cmp mov or sub iret sbb sbb pop inc gs mov ss jmp repnz jnp jecxz test push mov or scas lahf mov dec (bad) and or xor pusha mov out das aaa and leave movsb sti push jle rol xchg mov and mov jmp sbb or cmp (bad) jbe push xlat cmp xchg fidivrl cmc bound fisttp repz repz xchg iret xchg clc ds xor jbe mov jno push insb test jl push or into push sbbl mov xchg cltd adc cwtl dec push (bad) mov cmp aad movsl xchg int3 je xchg jns loopne fs jno aas rclb dec adc xchg adc xor mov mul repnz push notl out jo xorb inc xchg and cmpsb sti subl inc lods fprem inc and repnz sub lret loope (bad) test fistp negb int3 push or sub lret (bad) jl dec ss jbe pop in cmpsl clc sub mov test (bad) stos imul daa movsb cltd sub clc aad cli push or adc fistl adc fild icebp mov push xlat pop adc (bad) mov mov movsl pop xlat dec push xchg mov shrb xor rolb loopne call test pop cwtl roll jb rolb and mov scas cmpsb fsubs fsubrl jnp jae and mov idivb aad arpl mov (bad) and mov outsl fdivr sahf adc xchg outsb inc pushf mov cmp outsl jle xchg mov rcll pop in push jne xchg sarl fs rcl (bad) adc iret imul and mov int lods loopne mov movsb loopne ja cwtl or mov icebp clc or loopne or mov push sub mov or mov sbb adc insb je jnp push cmp fisttp cmpsb aam xlat lcall enter mov inc lds cmp dec inc cmpsl mov cltd outsb aam add lcall leave add mov sbb push push pop rol lods cmp mov lret xchg mov fnstenv pushf jae les push push mov jnp xchg xchg pop (bad) dec arpl xchg adcl sbb arpl idiv xor xor lret mov lods push push mov icebp pop (bad) repz mov inc cmp push jne imul repz test clc push xlat pop pop jecxz stc push test jno cltd jmp xchg inc in rcll inc xor dec and arpl pop je mov inc mov and pop out test add lea xor aas jecxz cmpsl fidiv les push or insb xchg fimull lods hlt cltd xor xchg imul jbe pop jecxz leave cmp xor cmp cmpsl icebp stos or mov (bad) xor dec inc push mov push aam lods pop and mov jp mov sar xchg les sarb hlt shlb add aas adc adc xlat or add mov stos adcl out sbb nop adc popa addr16 xchg xchg cmpsb stos adc lret inc xor loop pop inc push inc sbb adc mov popf sbb pop ss sub icebp sub cs mov or std stos xchg push add into into inc lods pop mov xchg xchg (bad) es daa ss scas mov cmp ret inc push add mov xchg rol mov inc jle xchg test addl mov (bad) xchg out lret cltd mov iret sbb lcall aaa mov in int jo xor test pop mov addl lcall mov xor jb,pt pop mov lahf rcrb or adc inc jae lahf xchg imul mov cwtl mov push jo mov lahf dec rep inc jae (bad) imul mov push xchg cmp insl jg add add add orl mov sbb inc jbe push in aaa inc jo cmp sbb jae fisttpl les sbb mov cmp sub (bad) jo in inc or push cli xor xor lret sub xlat pop test mov xor pop xchg hlt jl xchg xlat push push xor sbb (bad) (bad) cltd adc aas jae (bad) jp sbb cltd and das daa sbb cmp mov xchg add lret lret div aaa loope jne push lock and jae (bad) push or xchg jmp sub iret mov xor add pushf mov sub sub fldcw cmpsb (bad) add pushf hlt sub adc and pop add adc and mov andl hlt pop ja mov int ror test or sub fistl (bad) sub adc mov add jo aaa xor dec xor clc fisubl aas das es ss xor jl or jno ret aad rcrl cwtl mov imul movsl movsl popa pop push (bad) push js mov (bad) dec adc mov and mov les lock mov sub xchg (bad) cmp mov mov loopne cmp mov iret inc ret xor inc jo jecxz stc sub cltd insb push call out mov dec jbe sbb mov out fisubl out pop int3 ret add jae repz mov incb adc push mov popf (bad) or mov xor out sarb mov cmp push test pop (bad) sub movsb push imull fs arpl sahf mov mov inc fcoms cld hlt xor jo out subb rcrb ret push jp push pop das or fidivr add mov xchg pop push jmp (bad) dec cmp (bad) ficoml jno loopne xor push sbb enter ret test lcall test pop repnz add mov inc imul repz xchg pop push ljmp mov dec shr movq and out mov stos dec insb loope jle (bad) lret inc mov mov test iret xchg jl adcl dec mov jp xlat pop mov xchg jecxz mov test movsb pop movsl cltd (bad) xor jae leave dec sub into stc ljmp mov in enter out scas (bad) jo push cmp dec sarb push inc mov inc or and lds das cwtl iret mov pop popa es inc inc jno mov (bad) or div in js inc xor inc int inc icebp out dec decb mov dec adc pop sbb lods fbld fistp fsts mov sub pop sub mov jge mov cmp cmp xchg aad in andl jne mov pop int3 hlt and jecxz adc lds cmpsb or es pop std loopne movsb sub nop mov cmp repz push dec mov jmp inc adc jecxz aaa and imul outsl adc mov in data16 (bad) or aam push pop xchg sar aad (bad) fnstsw cmp xchg int3 add push arpl movl push fdivs ss out mov sub jg (bad) je xchg jb jle fs test add shll dec pop xor pop jno or jns,pt and jg cmc (bad) mov fwait push enter imulb test popa fs out clc fmulp mov cmc lods mov xchg add xchg sub mov imul inc xor xor loop hlt sub dec lods fstl push cmp enter aam pop or xchg xor stos ds jae adc or rorl mov jmp pop push cmpsb into test mov cmpsl leave lds sbb test cmp mov dec and sub add sbb ret popa scas cmp inc icebp (bad) add jl sub sub jnp adc lret je sub cs and outsb inc aas movsl mov cltd mov dec cli xor fstl js or sub and adc icebp dec mov adc repnz jns sbb sub mov jne push fdiv mov pop fcmove pop hlt call lret lret mov mov sbb addr16 sbb loopne jecxz out inc mov add out (bad) mov into leave shll mov jne inc iret inc cli mov jo mov sarl dec fwait rclb fnstcw xchg fnstsw adc jg add inc xchg fadd std shrd rorl imul test jnp push lds or lcall push cmpsl adc sub in xor fisttpl out jl push or push fwait int3 clc divb fidiv cmp or es xlat cmp push rcrb xchg movsb loopne lods jno sbb int3 repnz mov lea cltd js mov inc into xor in (bad) dec adc popa lock sahf lods dec (bad) repnz js xchg jb leavew sub sub insb movsb sub mov xchg jg sti pusha testl mov arpl pop inc mov ficompl push out cmp mov das (bad) ljmp insl xor jnp inc inc incl inc cmpsl and js shrb dec pusha and pusha stos xchg and xchg mov test in inc pop inc fwait xor pop mov scas push lea adc mov jns lods pop sub inc test leave out dec hlt mov div icebp jmp xor iret mov addr16 mov lods push dec dec xchg jp popa insl mov mov int3 jns scas jp push outsl cmp sbb test xchg test nop lods aas xchg mov xchg xchg or ret or xorl jp add push jmp mov (bad) dec cmp push fsubrl mov in or mov sbb push push xchg and into cmc xchg (bad) jecxz inc ds or xor cmp (bad) mov (bad) jecxz adc stos pop hlt ret inc push cmpsl outsl popf fs jge cmpsb hlt stc and mov pop neg sbb test fiadd inc fidivr xchg push add sub inc (bad) lds ja iret fsubs add ds mov jg insb les lahf sbb in xchg inc sub popa (bad) dec adc fistpl sbb add dec pop sbb xchg push jnp mov push pusha out (bad) adc mov push xchg mov jnp (bad) pop scas cwtl or mov jmp xchg fldcw jbe sbb fidivl pop jbe je xchg mov (bad) and pop pop les mov sbb sti mov mov mov add into lds fimull dec xor pusha ss add jo xor popl or pop stc pop fwait sarb add out push (bad) negl lds lods or stc mov adc inc in mov adc dec aaa movsb fs in push cwtl aaa jmp lock add shr fcompl (bad) in scas rcll repz mov dec fsubrs jns aad shrb and scas xor add popa in mov jns ret loopne loop icebp pop cmp stc jae jns popa mov iret icebp or lret push add mul scas xlat push scas shrl jecxz jmp sub pop (bad) add (bad) lret and dec loop in mov mov pop bound xor cmp (bad) sub aad mov sbb xchg sub popf pop mov dec pushf lret imul inc rcl pop inc lock imul jnp sub jnp loope je xchg sbb shr xor jnp pushf xchg adc inc adc jnp jae fdivrl les mov jns xchg addr16 shlb icebp jl mulb fdivl cli mov push xor jno cld push mov sub shr mov aad push push std in fldt into jb das push mov in or fisttpll cmpsl ror fwait cmp mov add dec or sbb popa hlt dec es sahf add stc outsb shrb mov out sub jno stos fidivr cmp ret mov xchg std iret fs sbb cli je mov out push cltd lahf movl and inc jle pop in mov push int3 loopne and pop cmp pop mov pop add inc bnd xchg (bad) sub pop data16 js sub fsts or fwait bound xor movlps movsb outsb pop ret popa daa outsb ret xchg push or mov sbb lock lods sub adc fs sub mov sub jl mov and test aaa dec popf aaa jno mov jge dec dec jp (bad) ds xchg push push xor mov fwait sub repz xchg aad mov das mov sub enter ret insb sub mov sarb dec pop lcall adc xchg fs loope dec int3 popa iret pop inc mov and mov and inc enter out test inc aaa in jae push push scas fldcw jae sub in push sbb out add jle pop pop xchg push mov mov mov sbb (bad) jne out (bad) dec cwtl push cltd pop cmp out inc add ljmp cltd inc push cs push clc call xor lret lcall in inc add jmp xchg add pop dec sbb or fcmovb mov mov out adcl cmpsb mov pop inc inc adc sbb adc int3 or cmpsl aam jae add push cs inc xchg cmpsl fsubrl pop in stc sar (bad) fwait idiv dec cmpsl int sar push push popf dec popa imul jp imul call xlat and inc jo lret pop adc (bad) icebp notb and xchg add push lcall pop loopne pop xor out ss and (bad) jae pusha lock ja jns add push xor mov andl mov xchg mov jb dec xchg loope (bad) dec and pop imul jbe mov daa mov repz cmc iret inc sub fdivrs gs je ficompl add xchg sub shrl mov out dec sahf into xor in jo out mov fidivl xchg loopne leave aad (bad) jle push sub pop mov rorb (bad) pop or into cmc int3 movsl sbb pop pusha xchg cmp iret jne repnz sub cmpsl lods ficomp jg xchg sub int3 gs inc mov enter push or scas sbb je ds inc cmp jbe jecxz fmull icebp mov enter add xor call imul outsl xchg mov jecxz dec cwtl addr16 lcall aaa mov mov cmp jmp in int fidivr xchg pop fwait repz push sub int mov cmp fs movsb ret pop sbb sub mov lods mov dec jmp aaa jns sub sbb dec gs sbb pusha sbb jno popa movsb sbbl fs mov outsb xchg mov sbb fidivr pop pop call popf dec in (bad) xor cmp pop loope dec pop out jns int xchg or xchg dec popa cld subl and mov push arpl scas fdivrl movl imul add popa cmp lock cmp xchg mov pop mov (bad) sahf dec out xchg jbe (bad) xor mov mov xchg jns add sub add lret stos movsb stos aaa ret inc decb push ret cmp dec lods lock in sbb or loop or jmp dec ret mov and sarl adc pop cmpsl dec fdivs jns xor fwait cltd insb adc arpl fisttp jb mov jmp dec cmpsb jl (bad) in xlat dec std jbe hlt sub (bad) pop push pop (bad) pop data16 mov cld (bad) shrb lods ss dec sbb stc inc test fldt and jl stos inc sbb cli movsb push push mov lock jb test outsl push (bad) daa popf ljmp pop clc insb cmc add jmp or sub roll mov mov cwtl call mov aas inc sahf test jge (bad) aam xchg clc push mov mov xchg dec fldt cwtl lds imull (bad) and aam (bad) (bad) in sbb mov sbb ds das cmp leave ja out aam mov in add sahf mov inc (bad) fsts mov sti out mov pop rorb xlat imul movsb xchg jg (bad) (bad) scas fmulp out icebp pop out int imul push lock dec cltd xor xchg insb mov cmp (bad) outsb ljmp jno dec xchg das out fs sub data16 shlb jle dec in fisttpll sbb lea jp adc cltd hlt dec dec pop jmp adc in fcomip mov mov jle xor mov sbb movsb xchg pop cld pop sti rorb fs pop push fs jae inc xchg std aam cli movsb dec fsubl dec faddl lahf mov gs (bad) ja (bad) insl jae xlat inc iret lods mov adc pop dec cmp cld sbb dec das test or and inc jns fisubrl repz bound cmp repz xchg or mov pop xor addr16 jp lock cmp fcompl cld push and sub fbstp push (bad) ljmp mov sbb cld or or (bad) cmp out push xorl out push aas (bad) jecxz add ret push scas xchg push fistpll mov push sti aad jns movsb mov (bad) xchg cmp (bad) fstpl popf fsubrl pop (bad) bound orb fldl mov xchg arpl frstor jge cwtl jmp sub popf push mov aad or sub sbb test or out scas aad (bad) xchg sbb inc mov adc push (bad) hlt mov inc stc loope add test sub mov mov xlat incb lods aas insl ret mov aas push (bad) pop pop push (bad) mov mov xchg mov aas insb jb pop cmp dec icebp and loop stos scas push xchg sti cmp cmp aam imul and push push sbb push mov xchg outsl lods cmp (bad) inc sub fwait std inc xor dec push inc fstps push pop and jne mov cmpsb cmpsb inc mov cmpsl loope cwtl gs mov jne and decl jp mov dec fcoml jecxz repnz fs mov mov and in pop imul mov in fiaddl sub xchg add fsubl fs (bad) xchg js push movsl adc push pop orl test divb mov mov inc and fldln2 or cmp adc pusha and add push mov nop mov movsl add xchg mov dec mov or sub flds inc cmpsb je pop ret mov fnstenv mov lods jb mov pop jno jecxz scas addl pop loopne (bad) je scas das testb sbb xchg aam mov push jge outsl or push mov (bad) test inc cmp sbb inc rcr xchg xchg (bad) out mov popa leave cmp (bad) loopne stos inc dec fdiv sub xchg inc jmp loope jnp sarl (bad) icebp inc outsl lcall lock movsb jnp xchg cmpsb jecxz fildl pushf mov mov sbb je cmc adc push sbb mov mov pop push sub pop and lcall (bad) icebp mov and insb mov mull mov jg pop clc cmp mov adc mov push (bad) (bad) test jnp add shll adc lods in (bad) js popf cs es cmpsb push xor lahf add shl addr16 arpl (bad) (bad) or mov ja iret pop int3 jnp xchg mov or xor (bad) fldenv mov rol pop call stos mov push mov mov fstl hlt sub imul nop das xchg dec add aam xchg pop or adc cmpsb xchg out and mov sahf and cmpsl xor lret (bad) int pop jge jecxz jecxz pop je push out icebp lcall les pusha rcr xor jbe mov jecxz dec fisttpl mov lret lret repnz cmc mov andl and or les lods mov push xor mov clc jle xchg jmp jg je fdivrl jge and je xor movsl jge adc push jno lods clc push ljmp clc aaa icebp aam xor xor xchg jne mov xchg ja (bad) lret xchg movsb add (bad) out push cmpsb jge or orb je mov arpl add out mov jnp jmp scas adc inc sub scas iret add inc adc lds pop or inc cmp enter cmp or int (bad) jne scas pop jle xor mov cmc mov sbb mov pop pop adc add dec and push imul jb and popa xchg hlt jl into out hlt lret ds lret fcomps (bad) xchg jp adc insb jae fisttpll sbb push loopne push rcrl fiadd cmp inc das (bad) std scas sti (bad) or xchg xchg mov pop aas pop shll xchg or xchg mov rcll testb push xor push mov jns xor adc cmp std xchg cwtl and pop into ljmp sbb xor dec sahf and jecxz cmp jae enter loope mov mov pop cmp hlt mov mov out das (bad) mov lock in (bad) sti cmpsl mov clc scas mov mov outsl mov outsl fstpt xchg dec js xchg or scas orb rcll inc adc pop push cmpsl and leave (bad) mov push cmp dec aam rcrb out pop xchg sti hlt daa int shrb mov mov pushf pop inc lock xchg fwait push scas push jae add sbb push push fnop add inc loope dec cld pusha xchg dec out int jbe test jmp dec add ret sub inc mov sbb jmp or lcall shlb imul out fisub cmc jecxz insl cmp repz push adc in pop je and sub gs adc imul fwait mov jp out popa and jb xor mov rorb das loopne adc push call xchg hlt or push shrb pop mov out pop pop (bad) out sub push dec hlt push xchg jb sub neg xor or scas push xchg loop ds (bad) xor stos or or into xlat pop popf pop push add xor inc or imul ljmp out push dec pusha sahf mov popf popa mov (bad) or xor cmpsb cmp mov mov push xchg xchg inc xchg cld insb sbb push aad lods cli jle stos mov lret loop fstl cmpsl pop fistpl and mov mov daa mov fisubrl dec daa xchg pop and cmp jb jbe push clc inc inc in add iret stos and xchg lods jno (bad) ret jg xchg pop push lahf ret mov (bad) loope (bad) adc push pop mov pusha xlat jns cli or (bad) hlt cmp ss inc inc rolb add mov or cli push psubw or pop (bad) mov mov dec into sbb sub mov pop mov or jmp or into in pop imul dec (bad) fadds dec cmp fcoms inc scas imul mov imul ds neg or pop (bad) add jge jno arpl lret out push sub std jne pop movsl adc mov insb and xchg shl add out adc ss mov push mov push lods cltd fsubrl xlat mov xchg jp fild mov cwtl lods je pop icebp add push lret xchg stc mov imul (bad) mov jmp loopne xor inc dec xor sbb pop sti adc inc subl loope lods ss repz mov xor in roll daa ss les mov arpl and mov cwtl sbb add lods (bad) fwait sub mov and call das rorl ja imul cmpsl lods into cmpsb cmpsb arpl cltd mov adc sub lret cmpsb jge daa jno xchg icebp call mov sti test ja mov sahf cs sarl mov pop loope enter lds (bad) cmp aaa mov dec lret repnz add lods push movsl imul leave or mov addr16 xorl push iret cmp pop jns cmp orl sbb xor cmpsl stos or aaa mov adc dec faddl pop cmp sub adc ds dec mov fstl loope add push cmc pop pop sub js sub xchg mov mov adc fnstsw test out mov stc dec mov (bad) or pop movlps les aas sbb js dec mov incb in xlat jecxz pop je ficoml xchg push (bad) call jo roll fcoml fnstcw sbb int3 add cld cpuid lret loopne dec sub and pop dec (bad) pop ds aam loop frstor ja sub xor xchg leave push fisttpl adc mov jb mov push mov je mov push cmp cli mov pop fidiv cld cli mov mov ret jp ret mov cs bound fildll repz int3 jnp int3 sub div and cmp mov add sbb hlt dec or pop fcoml push pop test scas dec in gs jl lds jno jne mov push or xor movsl loope outsl cmpsb fnstcw mov test dec xor and popf aad adc mov iret mov es test jmp fdivrs loop movsl jmp jle and pop pusha rcrl into and in jge cmpsb ret cmp ficoml jl sbb xor test pop jg cmc adc pop fcmovne mov jns bound pop jbe push hlt movsbl fcomip loopne and ljmp push enter stos xor cltd inc fsubrp xchg or daa xor pop sbb mov xor and add jge ficompl ds xor jns int3 inc pop test xor push loop comiss insb dec dec lret cmp es xor pop ja int setp ss ljmp and aam pop adc mov test out or cs js mov fldl stos (bad) clc pop push ret (bad) mov loopne jb xchg insl out test xchg mov sub movsl in subb push out into and sub pop iret xor movsb push jle ret cmp lcall bound fsts cmove stos fimul jg dec sti xor mov and jl stc in out pop mov int jmp mov scas and mov outsb into mov inc (bad) mov xchg mov (bad) xchg divl fcomps cmc pop into jmp jmp inc jb xor pop push fisttp dec jnp mov cld and sbb push stos adc lahf in or adc jb in cmpsl or sub adc fisubrl jp sub sbb popf (bad) inc loope mov mov ja push and push pop aaa imul cmc retw gs mov js push sub xchg orl movsl cmp or pop dec ret mov cs test ljmp out adcl push adc inc xor test mov lea push cmc fsubrs (bad) mov cmp loop leave mov fsubrs in pop push xlat sub mov fisub rclb pop daa test xor add xor call dec jp push cli aaa bound iret ret mov cmp dec jbe aaa inc cmpsl out mov (bad) xchg loopne inc repz call daa push cmp mov push xor push inc popf or loopne aam jnp mov adc cmp mov mov aam pop mov xor imul add push cli fidiv or stc inc sahf loopne aas xchg mov mov or sbb outsl (bad) push push fwait xor xchg mov lods xchg (bad) inc mov mov mov sbb ja sarb in push add mov std cltd popf xchg adc mov push mov sub mov sti outsb sbb lret jne enter adc fs std (bad) mov add les (bad) (bad) ss in fdivr mov push cmp cs adc sbb cmpsl jnp xor sti xor fdivr and bound pop adc imul pop mov sahf mov jecxz (bad) je pop pop lcall dec dec and dec nop out mov or (bad) adc icebp mov (bad) sbb and xor adc dec xor jae rorb inc cld loope inc test xchg (bad) pop ss adc jmp push sbb xor mov push pusha inc mov shrl scas push dec (bad) mov repnz lock scas lahf test pop xchg (bad) lret repz fwait pop popf add jne stc ret lea idivb inc fdivs sarl mov or (bad) jmp mov iret pop shll and into sbb pushf (bad) call and fbstp cmpsl cmpsb push mov lds jae xchg std xchg (bad) sti xor int test mov fldl aas push rclb or jne mov stos jle scas adc or insb jmp push add es out mov fsubs inc push mov aas add xor mov loop dec fwait pop xor pop (bad) jns test jmp dec std cmc sahf addr16 clc sub dec pushf dec lds xchg inc in add pop xchg mov jl adc gs scas mov xor fstpl sbb popf inc xchg lods and sub lretw mov stc xlat inc fwait xor aaa jbe mov jne or and cmp xchg mov dec adc jo sti stc jmp xchg mov popf (bad) jmp test or aad leave and stos out test xor rolb insb arpl (bad) test sub (bad) push jbe stos xlat inc cmpsb mov dec add sbb movsl lock arpl push mov xchg ret es pop push leave add mov inc test fwait dec xor lock gs (bad) lret mov std scas fwait mov (bad) sahf mov mov das mov pop jecxz sbb jmp xor je jecxz mov xchg add popf sti stc mov iret (bad) xor push xchg and cs insl icebp pop push add repz pop push lods mov mov jge outsb clc cwtl insb les cmp cwtl popa push icebp or and scas mov add fadds push push test iret push lret out mov pop add lahf fisubrl mov xchg mov out mov cmp cli push dec inc insb add repnz mov and jo test sahf ds sub mov roll pop out cli pop outsl outsb insl out mov mov jne lret in mov dec loop hlt into mov test popa movsl xor test sbb enter mov (bad) pop or test fstpt mov aam xor mov out sub ret add in pop (bad) cmc test mov sub dec mov jns loopne pop xor xchg test arpl pop ja gs neg out mov rolb xchg mov test test add enter test jns enter sub movsl shr and adc rolb std pop aaa leave xchg imul std jmp sub je (bad) insl push jmp shlb push add pushf or mov mov js pop jecxz icebp cwtl xor xorl push sti inc jo cli and hlt adc cmpsl fwait xchg scas dec xchg dec jge fmulp sbb gs push jne dec sub call repnz pop lret xchg ss cmp adc pop push gs outsl mov jo push pushl rclb mov add adc leave loope sub insl les mov push mov push mov mov push or adcl mov sbb sahf fnop hlt aam inc and clc xor enter jle inc mov scas push inc sarl inc push fwait loope rolb push add leave xchg sahf cmp xor xchg (bad) sti xchg popa lods and add jg or xchg loopne cmp sub dec jecxz (bad) arpl jmp jbe xor imull push scas test out (bad) outsb sub in outsb pop incb inc mov sarb adc imulb fwait add inc dec pop or jecxz xor lods fwait jb dec mov movsb sub out int std mull push outsl in cmp cmp inc mov movsl or (bad) jg aad xchg dec jb mov xchg or sbb push (bad) stos aad in cmpsb push rorl popa shll loop adc fidivl sbb jmp or movsb cmpsl cltd aam xchg mov loop movsb cwtl pushf mov (bad) mov aaa inc les jb in or pop inc roll stos sti mov test stos mov mov faddl and xchg xlat cmp xlat mov adc mov test inc mov mov or push rclb out js test loopne (bad) (bad) fist (bad) xor outsb add fiaddl ret pop sbb and lret shl test punpckhbw in mov xlat in xor lahf mov xor in fcoms ja pop ds and mov push addr16 popa (bad) and pop jnp mov push xor cmpsb cmp aad hlt ficomp loope test add and mov lret mov jge add repz mov or jg cmp cltd stos jbe outsb pop cwtl jmp inc decl adcl jle aaa xor mov dec jle push lcall sar xchg mov sar cmpsb or out lcall push xor add mov mov in repnz leave xchg (bad) aam cmpsl (bad) ss lret adc push adc sbb xor jae push cmp push out sbb (bad) ljmp or repnz or xor cmp pop add cli (bad) stos out clc push adc and ds repnz xor adc jmp mov mov add xchg call sub lea notl push mulb into neg add cmp sarl or inc push jge mov or mov cwtl cmp or inc fwait push pop pop push mov repz mov add cmp in je mov jmp sbb and outsl pop int popa setp sbb or inc inc cltd cmp pop inc and adc dec cmc cmp dec mov lret das fmul icebp in mov jns push xor js shrb sbb in lret sbb xchg rcl (bad) jecxz ljmp pop lret sub data16 add mov xor fild fnstcw test lret int3 decl mov sub cmp mov mov enter adc test scas in jbe mov sub insb mov xchg inc push lret shl pop or xor mov and ret (bad) mov orl shr lcall xchg mov shrb subb and mov dec ja jmp (bad) ret and ret ja lds dec out imul aad xchg cwtl cmp (bad) sbb loop shlb loope outsb mov mov lcall or add mov std in pop xor cwtl xchg shlb xor lods ret add std cltd shr repz add sub sub cs mov sbb sub stc loopne inc iret arpl out or mov and pop mov sbb dec push pop dec scas xor dec inc outsb jbe icebp int icebp and or mov or imul and jnp sub push sarl loop jnp xor sbbl ss and and imul add jg repnz inc (bad) mov xchg pop arpl lds cltd jb sbb out call and outsb nop jnp (bad) clc lods test push dec pop and dec leave adc add xor xchg mov fldl2t gs xor lods mov sti loope dec dec mov jmp fs insb pop mov imul inc xchg pop clc or cltd push push jp cmp scas sub js not push das out dec outsl aad lods sbbb inc push testb xor icebp xchg scas xchg stos mov adc (bad) (bad) aad cltd lea sbb and in mov inc in stos jnp push adc cmp adc int sbb es xor test call or setge sub out test fdivr ljmp popa test jmp aas pop adc sub ret lret fdivrs adc and mov popl idivl fisttpl cmc loope push dec test subl cmp jp xor es cltd jecxz stos mov mov push xor dec mov repz (bad) std test sbb pusha les jae lret push sub in cmp pop sub mov mov jns addr16 int sbb and inc adc mov add xchg ljmp test inc dec out popa (bad) outsl pop xor dec and add add jg mov imul xor das scas in mov pop leave ljmp inc es jg mul mov hlt mov fstpl fdivl popa mov frstor out lret roll pop lock lret pop pop das std ja icebp jns fdivrp cs xor (bad) pop push pop dec cli es xor add push btsl and pop mov rol push mov mov cmp fildl dec gs xor loope gs sub out (bad) divl stc and jb adcb loope push ja movsl insl xchg mov add pusha push inc mov xchg fist pop leave fadd sbb dec xor push (bad) mov lahf rcrb daa cmp subl dec fiadd scas cmc or jmp push sub push lahf loopne,pn jb int3 mov cmp adc sbb loope mov mov in mov mov xor jl aas mov ficoml mov popf and insb call dec xor sbb fwait adc mov sbb lahf xlat adc stos dec xor data16 ja scas insl push addr16 ss or enter mov sub negb pusha nop mov mov cmp shlb push adc cwtl inc popf ret xchg dec enter and jae adc sub cmp hlt or aaa clc mov cmc movsl or cmp fcoms jp cmp jo xlat test push cwtl inc lods outsb ret xor jns loope js add cmpl mov (bad) arpl stc div repnz stos rclb mov or outsb lahf mulb idivb pushf jno and cli xlat out mov popa ret and and mov mov xor fsubrs push (bad) rorl das cmp lcall pop push and hlt dec ljmp cmp iret lea add dec stos inc cwtl mov and cmp add xlat je outsb jns add addr16 sub inc push sbb mov pushf test std lea out faddl outsb mov and fcmovbe cli in lock xchg data16 divb mov in dec outsb xchg push xor outsl sbb fcoms xchg (bad) sub hlt cli xchg xchg cld dec ret cmc sub test lea sbb imul push (bad) sbb test xchg mov lods and push test jmp jae mov lods std mov or jne jbe jl bound sbb jnp and mov aam cmp nop (bad) jmp jae xor arpl add rorl xor cs int cmc fmul adcl scas pop jb repz mov fist fistpll pop (bad) adc xchg or mov imull cmpb je in adc fidiv mov jns add test cld mov rolb jae movsl scas sub or cmc call jns jmp jb jecxz pop leave stos dec enter jno cmp adc mov push and adc mov pop xor (bad) jmp fsubrs loope shrl jo outsb add inc fst test sarl mov cmc mov jo jo js or popa inc cmpsb fwait sub (bad) icebp sbb xchg push in xor in xchg xchg adc inc jge dec int sub les test cld inc cli repnz sbbl cli out fwait test mov inc loop into (bad) lcall sub fsubs je outsb push sub sbb add divl xchg xchg mov mov icebp and popa nop jnp mov in ret xor inc xchg push sbb jae xchg adc repnz pusha je aaa pop dec ja push and xlat add pop or xchg sarb (bad) mov imul inc sbb (bad) cld nop ds ret xor jl (bad) mov jb outsl jno add xorb loopne (bad) mov mov inc lret sti push xchg cli bound (bad) sbb enter add test rclb and and popa mov dec fdivr lcall mov fwait ret pop xchg push (bad) xor ds jne hlt and sbb pop jp pop xor gs xchg insb mov sbb scas jne mov loop jne fadd xchg xchg xor xor shl cmp sbb and mul or (bad) out jmp inc xchg js fiadd sub negb cmp je sub xchg mov cmc jo mov mov roll sahf inc enter or dec lahf test jl mov shl add ljmp adc push (bad) mov sub lahf (bad) sbb sahf lcall iret fisubl inc mov insl (bad) jbe pop movsb popf mov jg mov faddl inc or sub lahf mov aad sub divb cmp lods js dec pop lahf jmp lock sub fcmovbe shr ljmp (bad) push flds adc push cmpsb es repz ret push cld movsb add xchg idivl fistp dec stc fldenv out lret pusha push or dec jge jb dec outsl pusha xchg fldt in dec mov xor push mov sarl mov repnz jmp subl mov ds cmp jge mov popa xor push sarb lock int3 fmuls lods jo xchg stc loope lret jmp mov jmp sbb popa jmp sub mov lea and mov call rcrl les loop lock mov repz lret scas cmp xor push mov add jg sbb sub push mov (bad) jne sbb sbb imul or push mov push mov or test test je jbe mov in mov mov push jmp stc nop mov inc scas rorl jmp push pop inc leave mull dec inc sub dec ficompl inc loopne inc mov bound icebp cmpsb xlat aad imul xlat cmp sub cwtl jle add cmp mov loopne test mov or pushf insb sub inc test stos sbb insb test jge cld jnp push movhps stos sub repz push inc xchg dec repnz hlt mov and mov pop popa mov cmp shrb fucom xchg (bad) mov xchg imul sub movsl jl sti rcr imul dec cmpsb push mov out add mov cltd push push mov loope jl ljmp lea dec mov std aam outsl push jge nop xchg xchg dec (bad) out cmp xchg test sub dec dec movsb mov aas daa mov mov pop xchg pop movsb shrl ret xor sub mov sahf icebp (bad) movsl adc push test xor jmp xchg in xchg stos stc and or popf pop dec push out mov mov xchg pusha pusha outsl fwait outsb jbe mov mov lea (bad) pop fldcw mov sti mov sub pop js sub enter fs xlat sub shl cmp push xor jno std lods gs jmp mov mov and lds or enter jge ret dec and cmp adc xor sbb pop mov push inc jl xlat (bad) pop std mov clc xchg add bound fild dec aam xor jmp std shl sbbl add mov lret cmp add sbb pop repz cli loop pop into popf and enter push ret adc test mov pop out jecxz add add psubusb sub sbb adc in leave jl,pt and imul mov dec ss repz je xchg cwtl imul pop sbb pop dec push cmp leave inc sbb jmp mov cmc dec jle iret inc sbb (bad) (bad) mov pop call jmp lds xor aaa dec inc test test stc mov xlat in mov mov sbb mov cmp add inc adc (bad) dec rorb sub ljmp mov aas add jns out insb sahf xchg adc pop repnz test scas lahf int inc dec aam outsb and cli fs pop shrb nop mov imul (bad) insl repz pushf lock jno mov sub loope ret mov mov pop push xchg sahf mov add jge std sbb ret fcompl cld xlat sbb jecxz jecxz push leave cmpsl mov cmp mov mov dec je push aaa xorb divb xlat in add imul cmp enter andl movsb jae aaa push jmp xchg mov cwtl fild jp push fbld cmp std sub roll push test mov cmpsb roll stc (bad) sub cmp xlat fdivrp (bad) xor inc std mov imul repnz and adc mov dec aam xorl xchg and pop (bad) mov push sbb imul int repz and push pop inc xlat leave pop popa imul mov add test jae paddusw subl dec out lret pusha xor xchg or jbe ret mov popa jnp in push call jns lock fdivs test mov mov fcmovbe dec lock ja push cmpsl mov insb fldenv push cli push (bad) repnz xor and pop inc ds sbb sbb incl imul scas lahf adc xor xchg outsl daa icebp xchg scas sub xchg sahf jl (bad) jb mov pop pop pushl enter (bad) dec adc mov mov ja jge mov sub mov adc push loop cmp cmp aas adc rorl mov xor dec clc stos push inc ret pop (bad) scas notb into dec pushf jmp in adc push mov dec leave xor sbb push cwtl jmp pop mov xchg out and mov lods adcl out mov inc sti cmc cltd adc out inc dec add outsb mov call fs pop mov ret scas ret pop xchg shrl fdivrp jecxz sti or test call pop or cli imul mov seto jle insl jmp out and aas es pop dec xchg ljmp jns jecxz insb mov and in mov mov es mov int mov lds popa or mov fnstenv ja mov icebp dec adc inc daa or loopne shlb das add ss jp add jbe lods in or mov es aam testb out div fisubr mov sbb xchg stos mov nop inc ficoml sbb addr16 push cmc repz pop lcall inc push mov shrl popf call mov mov cmpsl add movsb adc mov in inc and enter lea loop jno in sahf cmp or into add (bad) fnsave cmp leave sbb pop dec shll sub cmpsl aaa repnz lea call out ljmp mov (bad) xor push or jnp dec adc push out xchg inc sbb mov and lcall xor xchg test pop jle fcmovb mov std jecxz mov nop xchg mov test push pop lret jnp (bad) lods xor jnp mov (bad) scas daa cwtl scas cmp cmpsl mov mov push sub stos inc or mov xchg xor stc outsl pop sub push sbb jae adc popf lods sub cmp jp cmp lahf jecxz hlt dec adc mov fmul iret add add adc popf leave aam mov push (bad) sbb repz pop pushf cmc dec or ficompl and sub lock icebp push mov fs ja xchg mov or and cmp push lods lret ret lahf stos pop (bad) jbe subl jge dec ud2 js inc mov or xor rcrl adc lods jl jge pop sahf sub data16 out ret in xor cmc (bad) daa leave pop test or movl cmp aad shrl lds add sub gs andl add mov push sbb call loopne mov mov cld out popa mov cmc xchg loop nop mov jp inc movsl scas mov or dec push jns sub add call add and xchg jno add cs rol mov (bad) mov dec iret pop repz cltd dec push cwtl push adc out pushf lcall fsubs xchg sbb xorl cmp and scas std add rorb nop inc fbstp and gs divl sub pop shll push repz jmp in scas adc mov jg fdivl xor xchg inc out aaa aad lea push enter mov lds adc cmp mov xchg hlt mov cli fldl rol aas dec (bad) xor idiv cli orl jbe push xor pop lods scas ja je xchg mov mov xchg repz push dec imul inc fdivs shlb in or in into insb jl (bad) lock cs xchg fstps loop mov push data16 int and (bad) fidivl xchg (bad) xor mov repz xchg mov cmpsb mov lahf fisttpl jns clc push adc jns addl aas addl jmp xchg gs push xchg sbb jge mov fwait iret xchg pop inc inc cmp pop data16 aad cmp das jecxz fisub mov fcomi dec (bad) mov mov sbb inc or rcll lret (bad) imulb enter sub out aad aad ret (bad) sti and bound or fist and xchg mov in jmp add push mov (bad) mov in dec and push ret addb loop and lods push xor ja cld xlat je lret fsubrs es and cmp flds jne mov ret (bad) call dec lds cli push lret mov dec mov shll (bad) dec into fsubr das dec call sub es jmp xlat test fisttp es aaa inc imul cmp pop or pop bound inc in clc stos pusha (bad) cld and xchg test lcall mov aaa cmp jb mov mov cmp inc and mov mov mov stc les mov mov in (bad) or in and inc ja ds xchg push xchg jb fwait mov loopne inc mov sbb sbb inc les xchg mov add and inc out cmp sub adc jge test imul (bad) stos mov inc lods mov mov push and or mov mov shrb sub in mov pop mov js or xor pop (bad) mov test pcmpeqd and out ljmp movsb mov movsb cmpsl cmpsb inc mov icebp das outsb sbb stc add or mov nop sbbb arpl sub mov xor xchg imul addr16 inc out repnz lcall inc jge xor mov sbb inc mov in or mov sbb dec jecxz pop or push imul adc mov pusha mov cmp lahf test xor xor fldenv shl xchg roll xor xchg jae jmp pop pusha xchg add mov fisubl test roll test jns mov lcall xchg fiaddl mov add push xchg jnp mov push pop add or mov and push mull xchg jae sub out jno loop dec jae test mov and jbe mov cmp lods inc inc inc add (bad) scas out loope frstor cmp mov push dec in dec int test mov and xchg push sbb mov mov mov mov pusha jno ret arpl mov xchg inc mov (bad) cmp jmp pusha jno fiadd sub and adc jg,pn fs mov inc xor dec test (bad) test xchg pop cs mov lock rcll mov cs cmpsl idiv ljmp mov stos cmp lahf loopne push rol test shrd lcall je xor xor (bad) aad push test cmpsb push inc leave mov push or xorl (bad) mov hlt push or outsl jge mov lods andl je jns cmp into lods mov scas or sbb arpl sub mov add fistpll push and dec push lds jecxz out or pop enter push ja xchg mov inc push mov jno test xor pop dec and clc push loope cmc out adc pusha mov jle mov ja insb push mov and mov (bad) imul dec jb testb pop (bad) loope or cmpsb (bad) cmpsl mov fwait jecxz in pop mov into jnp fldcw (bad) jne sbb aam inc imul jecxz adc mov cs stc sub lahf push je outsb jnp cmpsl ret call fnstenv mov scas jecxz adc cwtl enter xor dec dec and outsl mov cmpsl push add (bad) stos lods fcomip jne fidivl or jbe pop mov (bad) mov cmpsl fucomi arpl cmp mov push pop in adc dec pop out out jbe in add sarl adc imul hlt (bad) (bad) xchg xchg xchg sub jo imul jne cwtl pop push jge pop data16 es rcrl insb fwait or mov lods mov es in push shrl jl add mov cwtl jo notb das mov fs cld sbb or fcmovnu call lcall mov lret xor call and mov jge in push subl mov pop or add imul arpl incb jle mov cld negl dec into dec lret sbb mov cltd jmp (bad) int cmp or mov cmp int popf jp jmp push pop mov and imul comiss insl pop int3 adc pop pop in mov lea scas jg iret sbb or sub dec jo cld mov or cmp adc xor or das in sub inc xchg repnz and and sub add adc imul sti (bad) call cmp pop dec add jo stos test dec ret or jmp iret xor jmp mov adc pop mov add clc inc cmp movsl xor hlt jno cmp inc cmp mov rol popf cmc pop adc and out and sbb popa lods xor jno pop cld (bad) mov leave xchg mov or jbe push pop mov and cmp inc add mov cmp sub cmp add jo xchg dec stos ret shr insl push cmp pop sar sub (bad) fcmovne and xor icebp mov push xor fcmovu mov imul loop sbb jns push out bound rorl cli sbb out imul pop scas xchg lock pop inc xorl dec xchg movsl adc pop mov popa out or pop or cmc fisttpll add and jecxz in aad loope scas push push mov jo lds roll cs fdivrl frstors test cltd mov cli fcmovbe jmp adcl in test fdivrs add rclb mov sahf pusha fcmovbe mov hlt push lds test adc push or insb mov ja and mov cwtl fidivr or in call (bad) mov jb,pt aad xchg sbb imul mov popf push xchg dec enter repz rorl daa mov mov popf mov shlb repz (bad) or movsl xor xchg fnop push shll daa sahf cmc jmp inc adc xchg mov fisubrl out pop mov icebp add stc cmp rolb (bad) arpl inc cltd (bad) dec fucom jo mov mov cmp dec testb mov push repz pop adc xchg or adc dec push jo scas aaa in mov rolb jnp gs adc push rclb push loope lahf xorb test and js lea movsb mov adc scas sub mov fnop xchg sub cmp in or (bad) call lret jl dec cmp pop xor lcall cmp popa xchg cs jb nop sub add mov cmpl jae cmpsl lret aaa divl test adc sbb je inc cli push xchg sahf jl es lcall mov icebp mov inc pushf adc dec loope and divb mov dec mov inc lcall outsb out sbb test mov stos push or push fcomip fcompl sbb fadds daa pop decb nop das leave pop data16 fstl adc pop bound adcl shrb add int3 iret sub mov sbb idivb outsb mov add add sub out mov dec rcrb addr16 (bad) ljmp lret dec or lock pop mov mov or ss inc fimul arpl (bad) rcl test pop aam cwtl xchg mov (bad) hlt mov sti or or loopne jne fisttp (bad) jns rcrl sbb dec or popa loopne push pushf sbb dec sbb aam sub xor mov mov inc cmpsb es xor inc xchg cwtl jbe stc paddsw (bad) je fwait xchg xchg sti (bad) verw inc adc daa aas push movsl cmp jge pop sbb mov jbe ret je jnp lods pop cmp inc inc and sub add inc mov pop xchg pop imull jo push push inc pop outsl mov in jge mov jnp mov pop daa int3 ja sub xchg int repz into sbb cmp aas mov outsl inc arpl lea lahf and xor jns std and fs (bad) or mov add pop sarl into inc in psubw inc popf or push push inc sbb adc add idivb push mov out rcrb mov or loop xor jnp jg sbb imul xchg stos lds jns sub loop adc daa xorl pop stc outsb out in xlat rolb int3 xchg into rcrb mov sub sti fadds fbld push cli xchg mov rclb sti mov xor pushf add push in adc mov cmpsb xorl adc aam mov ljmp mov loop mov mov leave mov inc (bad) jno xlat clc cwtl push leave fildll clc adc int3 jb cmp cld or lahf mov sbb cs stos les in fcoml mul arpl mov dec inc push andl ja cmpsl jg and adc add fdivp shrl ret fisubrl ss call (bad) in pop andl mov pop enter jp mov out adc adc or mov (bad) lret fcoml lods dec mov ret das aam fxch lods add xlat mov jne xor add mov fnsave sahf jl stc cmp jae cmpsl aas or mov push and jl es xchg push xor mov int cltd cmc sbb or out int push ret pop and es enter inc sbb pushf sub les pop cmpl je inc sbb add push xchg jno mov test mov into outsl lock xchg dec mov out xor xlat outsb movsw sbb outsl ds pop jmp comiss mov jge out jno and or sub and pop and decb shl dec jb cltd adcl idiv imul scas nop jge (bad) (bad) lret pop mov mov cld dec push sub adc scas sete or data16 jl jmp lahf pop jp inc cmp pop add daa fidiv loopne cmpsl adc mov fiaddl push push and dec out aam push xchg mov dec cmp mov (bad) pop hlt sbb inc sub inc (bad) sbb mov mov sub dec xor shll push aad sub les dec movsl cwtl in cltd mov int xchg mov cmp mov mov pop cmc jl fdivr mov xchg push sbb repz popa lea ret lods cmp or push pop pop int3 mov and push cwtl sti movb mov jmp jb push jbe std add push aas xchg outsb adc xor cwtl jl inc je xchg insb pop test add xchg (bad) loopne dec sub (bad) int (bad) adc add jb out in pop daa sahf cwtl pop dec pop bound push mov cmp repnz dec inc jae dec sbb sub jge addr16 (bad) pop sti shrb adc stos mov and aaa or or fwait pop mov inc cmpsl sbb and fldl mov repnz or mov sbb out test in scas fsubp and scas push outsl adc imul inc fistp push inc dec test xor inc add (bad) pushf sbb fstpl mov jb sub sub ffree dec fwait push cmp xchg imul mov jmp add mov pop cmp sbb outsb mov js popf mov sahf adc mov out aam push nop gs and ds gs negb sarl lea repz xchg or rorb inc xchg mov add testb lods push jmp repz lahf sbb mov mov out mov sbb push mov xchg cmp ficomp jp pop fiaddl xchg mov repnz cld adc adc aad fisub outsl cmp push testb jle adc jmp xor ret sub ds aam sti xchg sub rcrb and gs jno mov mov rclb pop aaa jno xchg xor push mov cmp nop pop sarl in mov sub push or leave dec stos repnz pop xchg sub inc add add xchg aaa mov fstpt jmp mov adc pop (bad) xor jns (bad) cmp add jo or pop es adc inc ja mov clc (bad) rep jmp jo lods mov sbbl pushf inc sbb or pop ficom out mov ss jno mov and (bad) gs push sahf lcall pop rcll aas sbbl flds loopne test cmp jl xchg cmp test lahf sbb mov ret stos adc in loopne push cmp cmp ja cmp fsubs pop loope mov mov (bad) jo adc loope inc rclb fldcw xchg mov pop icebp in stc jo nop mov mov push fnstsw lcall jle movsl jns std dec test aam or sarl pushf pop int adc cld (bad) icebp icebp into sub aam jns jnp aaa push cmpsb arpl test pop xchg xor js dec fnstenv pop push clc cmp inc (bad) and xchg subw mov into call lock add mov push or gs adc mov shll cmpsb imul roll sub repz xchg xchg mov insl pop xchg xchg xchg push pushf imul cmp cmc and mov push andb jecxz and mov pushf push rcrl inc jb and popf sub xchg cmp out pusha adc and sub xor nop pop jmp cmpsl icebp imull sub pop lcall inc jl pusha push mov out lods addr16 and add rcrb icebp push mov popa aam scas (bad) cmpb sbb gs std ret sbb xor nop data16 ss pop rorl in rorl aas les jmp imul dec mov xor xchg icebp sbb inc les addr16 aam mov jns sub incb xlat jne sbb adc lcall push push (bad) lret jae jb stc (bad) iret leave js shrl sbb fxsave jle int add mov outsl add add xchg popf pusha inc pop push ficomp hlt imul repz pop andb or (bad) inc sarl js fstps (bad) dec cmp rol add out outsb lret pop xchg jo xchg daa pop pop add mov mov arpl adc adc bound pop out adc sarl lahf mov es jno add in jge jmp addl sbb fdivs (bad) fildl js mov mov mov add xchg dec pop subl test fisubl aas cmp mov negb stc mov mov dec lods imul out cltd jp inc push inc push insl xchg dec mov bound sub lds and pop bound int fmuls movl xchg das mov xchg (bad) fisttpl push mov xor pushf test push les dec out xchg loope jae aas adc iret sbb or or push adc jp js ror bound dec outsb mov jne xor repz insl push cmp enter mov push jb pop and dec add repz cs or xlat cmpsb fiaddl push nop or imul mov dec mov cmpsb xchg inc cwtl insl out inc mov or movl push imul loop mov rcrl outsw aad popf push xchg rcrl ficomp mov add pop lret cmp pop cmp iret das xor (bad) fsubrs fcmovbe and loope in cltd insl push fidiv jo (bad) dec sub adc inc inc lods rcrl scas insb mov ds out aam lahf in xchg jne int3 out pop mov xchg out push lds scas ja lret int3 and fisttp loop pop mov cwtl cmpsl das cwtl sub mov enter (bad) int dec mov push fisttp pop push lock jg jb push add cmp insl add enter pop jb arpl pop faddl or jno loope fimull or mov mov xchg adc mov dec mov mov (bad) (bad) ds add aas mov mov jg lret cmp cmp sti nop cmp arpl shlb mov or enter es mov xchg orb rolb and mov or lret xchg pop inc or and orb sbb mov adc mov xchg (bad) sub mov xchg cmp dec rorl dec call jg fwait add and enter icebp and in dec ja sbb lods out xchg mov aaa inc jle push outsl jle cld int3 cmp fs stos jne aad cmpsl mov jae pushf mov ret ret stc cmp ja fstp dec outsl add and std les lods sub push (bad) push xchg pop pop jnp mov dec xchg fidivl pop and leave dec add ret pop inc jo imul insb push push dec and cli dec mulb mov mov jg pusha sub pop cs jb loope xchg imul idivl dec enter popa mov and fs js cmpsb shrl idivb sbb mov in jne pop xchg popa sahf and lods mov cs xor mov fcompl mov fs inc sbb mov test dec push outsb rorl shll jno cmp fwait pop ja std aad cmp add mov pop mov cwtl and test outsb in daa ljmp dec xor loope mov add xchg outsb inc cmc insl mov loopne pusha and jg fidivrl cmp mov subl sub push jle outsb jl call cld pusha dec cs les jmp push rorl lcall mov jno sbb fistpll dec out sub add stc push jl repnz jae cltd mov add mov lods insb xor stos stos je in mov out or cs mov sbb jp cltd mov xchg fistpll aaa add add cmp inc jne dec (bad) (bad) pop cmpb lcall fiadd (bad) xor cwtl inc dec xchg test ret ljmp push push test inc xchg clc jb mov (bad) imul jno push jp cwtl push xor cmpsl xor mov leave cmpl fist cmpb aam loop divl and mov cmp fidivr cltd pop in rcr lcall das aas jge stc (bad) mov (bad) sahf add sbb add ret mov mov mov cmp cmpl in or scas shlb jno sbb lret into mov icebp mov lds cmp adc je les xchg cmp lahf inc cmp or and stos in add (bad) mov iret sub shrl cmp xchg mov mov xor lret int jnp dec in push ret and mov insb push or mov ret push roll fstpl (bad) add out xlat dec xchg xchg lret add xor roll (bad) icebp enter pop adc and scas mov repnz divb pop bound test pop dec sub or xchg xchg loop xchg outsb sti mov js in js push jmp push push test loope pusha aad sti mov xchg (bad) (bad) mov scas sub xor dec pop loopne and mov and cmp icebp dec outsb mov sbb jbe adc xor xorl loope lahf (bad) hlt push jmp push cs pushf sub sub jae inc jg inc (bad) or pop sub and daa shrl scas adc std repz (bad) addr16 iret fldl iret sub das lret cmovns cmc dec aam xchg scas clc ret jns pop dec jne (bad) and pop fdivrs icebp jo ljmp iret add ja pop lods test mov ficomp and mov xchg mov ja and inc cs cmp push pop cmpsl movsl xor and (bad) or pop and test mov imul lock mov cmc pop inc mov push mov dec adc jae xchg jnp (bad) scas add rcl cmpsl mov test mov push mov cmp mov xor jnp dec adc mov xchg mov (bad) cld (bad) jns int3 xor pusha push inc adc dec outsb sub xchg (bad) adc (bad) (bad) cmp push xchg mov jo jecxz (bad) lds jmp ret popf rorb add or popf inc cld test dec stc mov dec jno pop stos rorl xchg (bad) cmp in sahf cmp mov jo cmp inc dec cmc sahf scas repnz add ja adc daa or or or scas sub stos lahf int3 inc xchg lods mov cmp cmp add push sarl push lods mov cmpl xchg hlt push jns and and sbb xchg push cmp aam fdivl lods pop pandn xor inc icebp sbb jo clc push in lcall xor int3 jecxz,pt mov push and sahf mov lahf repnz dec mov and pop mov std push push sahf cs or in dec pop push pushf test and adc mov cs ss sub cmp int3 adcl ss std repz push dec paddusw pusha loopne lds enter xor repnz ljmp or ret lea ja ret loop lods xchg sbb imul pop mov and jecxz scas mov mov inc cmpsl mov lahf mov and lods popf dec mov add les (bad) js ret mov jg or pop inc sub pop hlt repnz int mov pusha sbb xor (bad) idivb mov ficoml push cmp sahf push push ja fs or sub pop loopne bndstx pop xchg imul adc daa xor fadds dec mov out popa xor push mov mov divl adc jg cmp push movsl fwait cli dec out sub pop inc je test xchg mov loope push mov jns jle hlt sub dec sbb cli (bad) jnp out and push pop sub (bad) pushf pop das mov and mov cmpsb mov sbb jle xor sbb cmpsl outsb jl cmp mov dec mov aam nop aaa add repnz or int3 fbstp adc arpl jb jge xor adc loopne test pop cwtl outsl lods push jp push mov addr16 xchg in xor jae shll out mov ja dec movsb sub xor test xchg popl xchg notb fs jne jnp lods and ds jne sub adc inc stc push adc mov out xchg xlat mov in dec jg aas call daa sti dec out sub sub jne pop push jne lahf addr16 push mov and mov inc mov jmp inc lea mov (bad) push scas iret sbb pusha pusha fnop xor test cmovb push stos repnz lret dec mov dec push xlat adc cmp add in vpsrld repz xor outsb cmp and in sbb fldcw cli mov xchg or in call fadd pop les adc and out test imulb in aaa loop sub sub jge mov and roll mov in dec das adc daa stos repnz inc mov xchg mull pop fs mov dec push pop stc outsb pop into jg (bad) pop sbb loopne popf fldt testb and sub imul nop adc jo,pn mov and inc cmp mov cmp repz mov sub jnp dec fsubrs pop adc mov test sub dec in adc push mov push fsub daa adc aas gs sahf dec sbb fisubl out cwtl mov ljmp test psubb ja fsubrl cmp int3 in dec mov lret loope clc mov and pop pop jo rorl outsb dec hlt inc (bad) enter out pop cltd cltd mov ds mov (bad) pop test imul aas movsl scas (bad) xchg rcrb aaa (bad) push (bad) xlat mov inc adc pop jmp push push dec bound add pop sbb sub add lahf add cmpsl hlt (bad) mov out in mov lret loope sub push or int or insb cmpsl lods int xchg fucomp out inc xchg cmp pop sub jnp imul ds negb dec inc icebp pop stos xor jmp int ss daa aas insl pop sub xor dec rol mov (bad) mov push dec sub fisubl add hlt in lea and adc addr16 xchg dec fcmovu mov mov out inc cmp jl inc hlt mov enter iret scas xor arpl test imul adc add cmp arpl xor adc ljmp pushf stos jge sub hlt lods add pop push imul mov cmp ficoml lea sub scas xchg sahf lods scas mov xor lahf aaa pop inc popa flds push mov rclb mov pusha xchg inc jo rcr mov or shrl pop iret inc (bad) mov popf cwtl sahf mov fidiv iret add xlat mov lret xchg xchg js lds imul fimul je dec sahf mov in sbb dec sub dec inc sti pusha inc (bad) add rolb bnd icebp hlt add ffreep xor loop xor xor outsl shrb ret sti jo lret repz int (bad) push aad inc or mov scas ds push test add shrl and xchg jne mov (bad) mov cltd lea inc mov stc dec mov cmp fiadd cwtl negb hlt push aaa mov push cmp jno xor clc add test test add xchg jo orl xchg dec lcall mov lcall fdivr xchg sarl mov clc mov xchg (bad) enter cmpsb popa jne (bad) push in fnstenv ret sub inc mov leave xor xor mulb xchg jl mov (bad) mov bound das imul ljmp sbb inc cmpsl pop cmpsl push cld fdivrl add add xor push dec or push test (bad) jbe stos adc push sub xchg mov push negb jnp mov pop ja sahf jns inc push cmp push and mov outsl sahf pop aaa cmp jns data16 outsb mov sbb call pop pop inc mov jo lret jmp or inc mov add fisubr mov out mov cmp xchg lcall (bad) insb in cmpsl cmpsb mov cltd jp,pt scas or call sbb lods mov (bad) lret je push add mov enter daa mov (bad) pop add lods xchg pop sub jmp and cmpsl dec adc cltd in aam xchg lock stos jbe and negl outsb testb imul xchg sbb xor jo inc (bad) psrlw cmp sbb cmp adc gs aad bound dec test sahf cmp sbb mov xchg into mov pop idivb ds cmp fs js sbb add out or mov sbb std pop lcall (bad) enter loop incl sbb leave add dec dec rcl dec rolb test test push or push xor aad scas sahf and adc mov xor fisttpll mov aam xchg insl inc push xchg cli push jl inc sbb inc lret mov add (bad) or test jmp data16 inc push mov push jecxz out sub cmc mov adc lds stos xchg push imul jecxz (bad) out jmp out js jae clc cmp call mov int inc gs sub adc dec sub push xor mov lret daa ljmp push add sub sti mov inc mov mov mov push cmpsl outsb sti (bad) push sub lods mov incb daa jecxz or or daa add aad mov xor aas loopne into cmpsb pop jns lock mov cmp out xor lods push lea and repz cmp sbb outsb clc push jns push (bad) xor (bad) mov fisubr mov rol mov rclb addl lods out pop jp in test jne jmp fs mov inc cwtl xchg sbb ds sub cli pop loope mov push hlt pop cmp pop mov mov lea rclb iret mov sub pop outsl sbb xchg push (bad) popa dec xlat lock and cmc sbb dec add mov popa mov loope mov fcomps sub insl (bad) call xor arpl sahf cmpsb adc cli cmp xchg jp pop jge inc sub ja push lret xchg pushw imul jae sub pusha std adcb sbb sbb mov movsl ret xorb ffree pop cmovp stos shld insb cmp rcrl mov xchg imul push (bad) repnz pop je and push cmp adc sbb jnp ret xor frstor xchg jp or cmc adc les int3 mov jmp fmuls stos popa push out cltd inc mov lock jle nop jo inc mov int iret andl add jp lods in cmp fildl jmp dec aaa push js ja cmp iret mov pop cmp add fxch mov mov aaa (bad) mov xchg inc jl push jge and mov and arpl popa jbe mov loope pushf xor les jno in sti enter popf insl mov rorl jmp pushf add or out insl es roll in and ja movl cmpb mov pushf mov sbb push fstl adc mov enter mov mov fstp sbb divl (bad) ret fist cmp mov roll jle lcall sub gs es scas mov stos mov ret jg notb lods (bad) data16 jle arpl push xchg adc mov inc jno jmp les aas std or inc pop out dec xchg mov test add xor cwtl notl add xor arpl aas add push push inc jmp mov das cmp xor mov jno mov add cmp jo imul icebp push xchg add pop sbb inc adcl xor dec rorb adc pushf addr16 in mov mov cltd cmp mov push xchg mov push or adc popa pop lahf dec mov fs gs xchg sbb into add test cmc push (bad) mov js insl pop nop add aam sub mov gs pop and cmp xorb and enter mov (bad) rorb dec imul sti inc insl pop cwtl (bad) addr16 add jecxz push test in call repz clc mov loope dec and lahf pop add lods add aad lock outsb push cmpsl outsb pop or jns sbb in fist (bad) addr16 pop lret (bad) and test jl aam out in pop popf pop jb outsl data16 pop lcall and andb (bad) mov mov xchg imul imul mov or ja incl sbb and into out loopne lcall fcmovne out fmull inc in mov cmp sub dec out jbe mov push adc ret iret pop push int push push icebp subl pop cmp jo xchg enter sysenter mov lcall nop inc and mov xor popa xchg push add loopne pop iret jl pop add subb fmuls cmp add push sbb (bad) stc adc sbb es jmp pop or sbb jge add dec inc in sub adc dec push cltd and xor fs pop pop inc mov ja pop lret (bad) xor xlat popa and xchg sbb test insb (bad) mov repnz icebp xlat shrb pop dec shrb je mov ja ret popf mov cmp mov loop fwait andl jmp xchg in xor fmull and loop jne ret ret mov inc fimull stos cwtl cli loop rcll leave nop rcr push mov sbb mov popa into ficompl (bad) and (bad) call cmpl cmp sub mov xor hlt sbb jge jb inc cwtl xchg insb ljmp push mov mov push in arpl lods cmp ret clc push mov jg aaa fstpl xor mov sbb xchg sbb pop sub xchg and lcall and or (bad) repnz cmp add inc mov sarb and pop fsts or cmp mov or shrl cmp add adc pushf sbb cmpsb les xlat cwtl and sbb fnsave add cs lret fldcw pop jb xchg into cmpsl rolb (bad) cmp dec push cwtl mov adc jo sub flds mov stc cmp popfw rclb mov arpl stc add sbb nop xchg outsb popa cmp jecxz dec mov shrl call pop imul int pop rorl cmp mov test movsb xchg cmp and daa cmc lcall sub sbb ret mov gs sub insl sbb scas mov leave andl test ss xchg add jne jno ret in notl rclb pushf sub pop xchg add jnp leave mov jnp out pusha icebp xchg repz gs xor gs or cmp inc push cld sahf outsl int3 pop add int push lcall lahf adc mov and cli adc int3 xor xor bound dec divb fcomps xchg mov mov or jb and das iret outsb pop pop push adc jecxz dec cmpsl test inc (bad) or bound dec mov sbb xchg call mov push ljmp popa mov sub jne xor mov loope js mov (bad) push sub int3 aad pushf (bad) cmp jg cmp pop sub outsb js jle out add sbb dec mov jbe lods mov aam fsts les push jno arpl push repz jmp (bad) push dec scas adc aas jno pop xchg movsb pop ds scas or dec or ret ds jg cmp rorb in dec sub dec mov popa xchg (bad) jecxz xor test movsb add cmp dec push fistpl jmp pop enter xchg push (bad) daa aas mov add mov and mov bound in cwtl (bad) pop ds xor fcmovne add mov or test mov aaa add enter sub jmp xchg sarb out das cmpsb dec lret and dec adc (bad) leave nop mov scas jmp (bad) dec add (bad) sub cwtl sbb rolb sbb (bad) jbe rolb adc pop dec dec in jae cmpsb sbbl and mov push int (bad) mov ja dec pop inc fildl inc add mov sub (bad) push xor ja push add mov mov and mov je lahf fmull sbb ret outsl mov cld fidivl test (bad) mov repz and push (bad) cmp adc jmp and mov adc aas push cmpsl push xlat sbb jae test in sub jo fucomi sbb sbb (bad) push dec sbb lret test inc adc fisttpll int3 xchg call mov icebp (bad) xor xor jne fcmovnbe sub cld les ds pop xor mov sub cmpsl jno pusha mov mov aas mov (bad) inc add (bad) insb mov xchg aas cmp sub cmpsl jnp inc fisubl int3 test dec xor scas xor data16 cmpl adc (bad) adc xor xchg sbb fiadd cmp icebp fsubr rolb test insb in add ret loop sbb fs movsl popf dec add pop mov pop push xor mov loope inc mov jae shrl outsl sub cmp into incl jno or popf ret nop and adc rcrb mov sub jb addr16 xor ja das mov lods idiv mov mov sub fldl xchg mov ret das cltd jmp xchg mov add push lds adc push pop cli cmp push test fcoms sub add jns dec (bad) jmp mov lret ret fdivs jb sahf mov adc mov dec cmp inc (bad) fisttpll (bad) loope int3 outsb xor leave rcl push out cs sahf les (bad) enter mov cli adc push int3 xchg sub (bad) pop dec pop jb mov lock aas movsl xor add mov mov loopne push outsb data16 aad cltd shlb dec imul xchg scas imul imul cmp xor xor lods ficoml and dec ror adc jle fcoms xchg and push inc aad mov aam inc mov fnstenv bound imul adc stos negl sbb and scas in lcall mov dec sbb (bad) in rcll add cli push xor mov mov sub out movsb xor scas icebp jnp push inc jno retw mov je sub int3 arpl call clc mov test jne leave out clc xor and fwait jl repz jle shl xlat out xlat xor sbbl clc scas stos xor into int3 adc nop enter pop sar ret sbb pop adc (bad) mov fs xor test push in lahf dec dec insl cmc dec mov ret mov and ret xlat xor scas fucomi mov mov mov fisttpl aad and idiv mov fbld lret mulb xor xchg shrb dec cmp xlat push push ljmp loopne gs add dec adc sbb ficomp lods adc add mov cld dec test out lcall das mov push mov mov fldenv roll outsl push sahf call out (bad) fwait inc js add adc pop or stos mov sti jae loope (bad) lcall sbbl (bad) icebp push pushf (bad) mov (bad) mulb mov or adc mov add push leave jp (bad) cli jge rorb xchg (bad) stc dec jo cmp shr test stos mov mov push loopne jge out mov push xchg mov std jb in lods jnp lret test push outsb out outsl sub inc mov mov inc sbb sarb icebp xchg xor aaa call int3 and sub xor das lahf ljmp loopne pop add xchg fabs cmpsb mov cmp or mov stos sbb sub xor cmp mov data16 les scas fcom addl fs in or cli xchg aad xor mov loopne jae repnz dec xor and jl out xlat cli add sub popa fistl (bad) fiaddl push jne daa mov cli push xlat pop jl je pop (bad) and cmp adc pop sub sub xor insl les add pushf (bad) lcall rorb adc lahf pop xchg add imul mov fidivl (bad) out ss xor out push jl daa jae into mov inc push sbb hlt scas mov xchg jp or mov int dec pop lods push fsubs inc cs mov pop clc loop or fdiv lods aam (bad) lret sbb inc sarb add and loop (bad) sar out dec out xchg xor iret daa movsl iret int cld mov fisttpll fbstp jo mov fistpll je dec leave shll popa cmp out jl ss stos dec jle pop push cmpb int mov out lahf lea push sbb imul lods iret clc mov (bad) sbb test adc or sub fs mov mov jecxz daa and js fidivrl test (bad) jb inc movsb rorb xor shr mov jne sahf sets push (bad) jmp inc cmp popa mov jns mov xorb fisttpll push mov cld dec scas xchg jg xchg mov push dec pop sub mov cli adc mov loop adc sub pop mov xchg inc xchg lods outsl add pop out int dec push hlt mov icebp push xchg fnstcw sub and mov sbb cmp (bad) js mov and shrl jg push shlb xchg adc jl and mov mov dec mov cmp ja inc jmp stos inc stos pushw sbb mov and (bad) clc mov xchg aam mov pop insb ss inc clc pop pop insl push xorl and imul inc lds sbb loop sub cmp popf sbb in imul sub xor into es cwtl push push add or inc es loopne xor icebp and pushf xor dec add lods add add in imul push stos ret popf repz daa popl int mov jp insb cmpsb mov adc and pop aam xchg aaa int jo jne loopne inc cmpsl mov inc sub mov jae cmc scas xor bound das cli cmpsl test push ret jecxz rcl pop gs loope xor mov leave pop cmp jmp or xchg sbb sub xor pop cld pushf out bound xor mov stc pop xlat movsl sbb lahf dec cmp mov fsub mov mov lcall lret adc (bad) cmc xchg mov ror (bad) adc dec adc ss xchg iret push cmp dec xchg xor fiaddl pop add pop jp jno sbb jmp js repz sub cld lret and jge inc pop dec mov xchg dec int3 jnp test and jecxz repz mov loopne incb rol loope (bad) je,pt pop jno pop inc (bad) mov pop insb mov mov pop fisubrl in icebp popa mov test movsb or lret jns jmp sub out out (bad) sub lcall test push lods mov push pop jge cmp lds hlt jg ret call mul mull test loop dec test push mov loope cs and mov jmp sbb out or sbb ja pop clc dec scas test outsl xor out push scas in jns sub data16 xchg add test push aas pop push ja cmc sahf cmp pop xor in mov sbb fisttp mov out xor jg loopne addl push notb in dec mov push sub push mov pop jmp push xlat mov outsb xor les pop mov mov or mov pop cmp cltd call outsb es in leave dec dec dec adc stos call lea sarl shll jp sbb call ds out lds push jne mov sub or aaa fcmovnb (bad) mov jo push sbb aad stos rolb subl mov mov jge inc xchg mov mov dec (bad) jg sti cmpsl push inc add inc inc imul and mov xchg cmp (bad) adc and mov ficompl repnz rorb std mov insl mov push push lret push notl cmp jnp mov ds test daa pop fimull push xchg jecxz jp pop bound jno add fucomi push scas into insb mov xchg fmull ja mov pop pop and dec cmp jp jae ror xchg push leave test push in in mov test stos pop adc mov inc (bad) push loop lahf mov dec cltd lahf lret inc (bad) fstps mov fsubrs xor jp scas aas js add adc pop dec test (bad) iret rorb lock jl cmpsl inc lret jmp cmp push dec mov jmp xor pop es xor roll xlat gs idivl stos mov in inc mov popa lea sbb ljmp int3 jle adc scas xchg cmp aas mov or inc stc inc decb mov xchg cmp cmp test inc sbb repnz adc mov xchg and imul and aam fdivrs sti xchg jmp jnp xchg push daa xchg fnstenv lock (bad) mov int3 call jb sub test shrb adc fucom scas fadd in dec jb push shl lcall test imul sbb sbb or or out sbb out inc scas clc push idivb xchg push clc cmpsb xlat insl sahf mov stos add pop add cmp pusha movsb out mov (bad) out mov mull mov (bad) push test sbb sahf adc (bad) dec push enter jno dec fisubr ret pop xlat mov inc addr16 rcll aam sahf ss dec jg es add fidivrl lds sti out push out push mov daa and rcrl cltd inc add test repnz push arpl jmp fstl std mov or dec movsb xor in dec repnz pop or cmp loope sub mov sub cmpsl ja xchg pop ljmp sbb test dec cmp fild fwait scas (bad) mov (bad) (bad) movsb loope cmp loop aaa in (bad) insl xor mov pop inc mov mov mov ficomp sbb cwtl (bad) or pop lds mov hlt lret aam push and leave call or sbb push mov loop ret mov push repnz jo (bad) adc sub jp mov sub aas add lods clc xchg lods mov std adc int adc daa jbe xchg ret push and and int3 lods add adc mov and out fcom repz pop (bad) call js sahf out test sub jle mov jb jg loop scas movsb xchg fldl mov je mov jae jno cmp nop xchg arpl inc push jl mov push adc mov rclb stos je mov imulb aad aaa daa out out icebp (bad) jbe in (bad) sub es push pop adc movsl loop cmpsl fisubr pop adc pop push cmp push out loop mov rcll push jae mov inc pop fstpt mov (bad) lcall xchg mov mov aad pop fistpl movsl insl inc outsl push push loope leave out hlt jae jbe adc fistpll mov stos add jns push pop call mov int3 fs call pushf jo sbb std daa insb in mov adc cmp ret hlt cwtl and (bad) add push push or xor ja movsb gs int3 roll loope jg pop push jne cmp mov lea idivl sbb mov push inc sub ljmp mov sbb jmp mov sahf rorl movsl mov cli adc testl negb xchg (bad) (bad) inc in mov mov cwtl xchg sbb push push add mov mov lock or push jmp test and jns je push cltd push pop ret cmpsl js jg je stc movsl lahf xor mov aam sub push sbb les cmpsl cmp sti cltd ds push xchg sub mov sbb notb add js xchg jg sub xchg mov jg or aad cmc pop jb sbb cld jge mov dec inc dec gs scas and movsb lods sub pop out imul pusha std int jp mov fidiv or fldt es xchg mov jne,pt push int3 mov movsl daa pop xor es sub out (bad) lea inc mov std jo and fsubs loop sbb mov fiaddl lock cltd mov mov pop push in (bad) in (bad) mov lock mov inc std adc add movsl addr16 add mov lret (bad) sbb lods gs out jo cmp cs movsl mov out cmp or inc ret mov inc into sub (bad) insl push sahf or call jae push ret mov in test insl negb adc cs adc mov stc jnp xlat hlt mov hlt mov lods adc arpl imul jb pop movsl rcrl mov push add sbb dec sbb pop push dec jmp pop cmp in inc clc mov mov ftst clc mov add dec outsb repz scas push pop xchg rcl call das sbbb mov jmp call inc push in cmp arpl push lret (bad) or push sti adc into cmp jae daa mov loopne ds paddusb mov in jnp dec test add fdivs adc jl pop shlb std pop mov push (bad) cltd xor push test dec loopne dec push push dec pop fistpl jo shl sbb cmp mov sub test lcall inc cmp cmp dec adc add aas sub int3 cmp addr16 out cld loope pop mov (bad) dec xchg cmpsb add les (bad) in jge xor cmp (bad) aaa in dec movb dec (bad) jno enter sbb xor sahf cmp cmpsb movsl (bad) lea xor or pop xor cwtl and or mov movsb dec daa push lock push loop dec (bad) sub daa dec test pop sbb push sub sub data16 jmp fs or xor sub mov lcall mov jo jo shll push lret mov mov xor pop sarl imull cmc push mov xor adc and aad lea pop push mov cmp lds rorb cmp and call cld pop adc out mov movsb mov sub pop stos fstps insl out mov cltd sahf jne push outsb or gs inc bound lods mov rorl ja (bad) sbb cmp pop jecxz fsubs pop inc add aam mov iret push inc xor call sbb sub mov adc pop imul rclb out cmp cmp ficom jnp test imul fcmovnb out out pushf aad (bad) xchg xor (bad) int stc dec jp mov mov cmp push mov mov insb or pop aam aam cltd or mov mov fnstenv inc mov sub mov push sbb cmpsb int and dec and xchg ret adc or xor dec lods mov sbb pop fsts je mov scas adc sub push xchg test mov ds lods (bad) jecxz inc lretw inc or (bad) lret and mov (bad) sbb sbb je inc mov fnstsw inc pusha cmp test jmp inc xlat inc push xchg mov btr in mov test adc aas xor inc mov rcrb xor push rep aam and ss sbb or xor jbe or rcrb (bad) lcall inc xlat not clc cmpsl adc mov and cltd adc gs adc dec sub mov push jg pop xor mov out jl pop mov sar inc fadd int3 xor dec out mov and push inc mov ret fsts dec cmpsb pop addl js les divb out leave leave (bad) test dec jecxz xchg inc xor xchg sub es adc loopne pusha loopne (bad) or or dec xchg sub pop and mov je push push cs call mov fidiv jb (bad) adc cli fdiv xchg fcos pop pop ret pop les mov xchg cmp dec dec test xor pop test aas xorl js add int3 (bad) xchg enter push xchg lret stos jge cmpsl mov push sub aam sbb lea stos cmp inc shrl repnz lds push xor dec push push mov pushf add out mov xor dec xor cmp ror xor aam adc jns xchg mov out std mov jle and jmp push ret stc pop xor mov sub daa dec and cli daa (bad) fdivrp popa jmp mov jmp enter adc or xchg inc outsb add rorb sar loope js mov adc inc xor in in lret jnp test mov out lcall (bad) scas loopne xchg add les shrb cmp aad jb stos pop flds xchg push sub dec pop pusha imul adc cli sub mov ss sub fidivr or popa and je repnz fcoms cs cltd add mov sbb fsubrs fsts mov lods mov outsl inc mov es and test mov mov push (bad) fdivs adc (bad) mov ffreep in loopne arpl outsb inc pushf sti mov repnz jo add jmp xchg sub cmpl (bad) lret data16 xchg in icebp mov rolb jl in pushf lea push scas insb ja enter inc leave loop cmp mov sbb mov jg pop pop sub pop xchg insl sub incl or mov push fnsave mov jb cwtl fcomi xor mov out lret and loope xchg gs and sub fsts mov lret fs scas push out jns add push jo pop lret push lods and mov ljmp add mov movsb xlat mov je addr16 dec insb movsb pop cmc jecxz push inc add push sbb lods (bad) scas arpl cmp iret je sbb (bad) inc mov ja and adc popf movsb dec cmp fs call (bad) ret and or dec fwait (bad) jle hlt fisubl insl push pop adc pop xchg jg jo fucomp mov (bad) mov shrl (bad) cld ljmp es icebp jne xchg pop popa out gs stc add sbb (bad) cs dec fsubrs dec int3 dec (bad) mov (bad) xchg adc mov push sbb test nop mov popf fs pusha push mov jmp jge lds add in pop js mov mov into xor fsubrs popl lea mov dec fistp (bad) pusha je xor sub sbb popa push fldcw mov (bad) adc orl popa sarb loope sbb int cmpsb cmc or jae iret mov scas xchg sub into mov xchg mov xchg fwait loope xchg cmpsl xchg das dec xor sub jo dec lret sbb jne aam aaa (bad) add mov add add mov hlt jmp adc push xchg pop faddl ja scas xchg repz or mov js mov je mov or andl mov sub mov inc cmp pushf push push repnz sti dec mov call cli fadds test mov sarl dec insb aas mov loopne pop fwait and push mov pop rcl (bad) mull fsubl mov and femms stos xlat inc adc push jo push into sub (bad) xor jae std insb mov mov (bad) les add push mov and cmp in dec add rcrl cli out (bad) jmp sub lods bound repz adc mov imul push subl daa fstl mov or dec pop scas stc and shlb add or pop and add fcompl lcall pushf roll flds pop or xor cltd iret pushf pop sahf push cltd mov std test mov jle (bad) sub mov xchg and shrb adc adc lret les and shrb mov out push mov push inc (bad) mov cmp fdivr or fsubrl pop jmp das jle jb add add ss imul mov lods jle (bad) push fsubs rolb and enter jns imul jp (bad) and imul fisubrl push int or pop rcrb jae pop cwtl lahf rclb inc pop xchg dec cmp (bad) xchg and das cmp pushf inc mov outsl std arpl sbb je (bad) lret pop or sahf xor movsl mov jae fs jge push test rcll div and pop call mov xor popa js outsb cmp pop lods jno repnz (bad) dec cli loop sub xchg lahf int3 (bad) imul addr16 xor mov rolb and sub mov mov sub clc pop push pop ficoml inc cli test mov lret sub inc add fisttpll jge cld insl ret rcrb mov xchg pop xchg les mov mov and cs fstpt ret popa rcll movsb adc push add push jp cmpsl fistl shl imul xchg jmp outsl mov or xchg or in fsubs imul jle sahf push sbb rcll jle jo push mov and jge sub fldl nop pusha test daa stos or out mov push lret aas push (bad) iret outsl movb mov int3 sbb (bad) mov xchg xchg adc testb push (bad) mov jnp inc std rcl in pusha cltd repnz test push jne jge setnp pop inc cmpsl mov test mov sbb sub xor clc (bad) dec aad mov jle mov stc inc popa jecxz inc in mull or sbb jno pusha out jmp inc jne mov cwtl fwait lds pop repz jbe mov aam (bad) push fldenv lret push push jl (bad) jge ds cmp ljmp mov pop test adc lahf scas xchg fist pop cmp mov lret (bad) sub xchg dec outsb test rol insb les ja cmpsl push push push and push aad (bad) insl sarl pop pop ja push jo and push cmp pop shrb mov dec mov adc mov jmp test mov xor rolb fsubl cmp jae mov leave lahf (bad) fidivrl jle clc stos andb mov insl push jns push mov nop sarb push in pushf add rorb mov xlat fs (bad) test dec das dec inc stc clc rcrb push or ja mov dec mov mov xchg xor stc mov loop rcll mov nop lahf xlat movsl test lods lods in insl push xlat push pop mov repz jo adc test and insl loope cmpsl dec iret xchg aad nop push cmp push cltd sahf push les cwtl movsb pop and mov jg push cld je pop pop shll xchg and push adc out repz mov outsb xchg (bad) loope iret xchg adc mov js leave shll lea sahf (bad) out je loop pop push add adc mov jno insl push push or cld gs outsb cmpl pop jnp push lods jl test dec ds mov and or lock jbe cmp add lret xchg and cwtl cwtl mov lock outsb mov shll lds sti jb rolb (bad) jle mov cmc xchg das pop movsb xlat sub hlt add loope loopne negb (bad) pop jle mov (bad) (bad) hlt and or cmp mov sbb dec jbe mov (bad) jmp imull or and xchg out aaa popf jno cmp dec (bad) iret outsl sbb jb aas cld push sub je,pt test pushf mov mov jns push mov jp loopne and mov xor jge mov mov leave inc testb dec push dec fmull add movsl lods iret dec add inc sub lcall mov inc icebp cwtl sahf fmulp inc or add or sti je push stc sbb dec mov jecxz and sahf xchg nop sbb repnz jne add mov (bad) xchg mov loopne or scas imul mov cld popf iret xchg rorl xchg sbb cs dec popf sub push aaa cmpl dec arpl mov xchg in xchg (bad) fmuls cli xchg lcall dec inc xchg jmp cmp cmp cmpsb loopne adc shlb push lock or (bad) push shrb leave dec push popf (bad) dec hlt shr std mov jl mov adc out sub in cmpsl cmp xchg fbstp cmp mov (bad) mov int xchg and sbb jo in dec call sbb jg cmp ret mov lahf sbb out mov rcrb inc push push pushf imulb add loopne frstor pop les lahf aas adc push xchg idivb stos pop repnz xchg xchg repnz fmuls inc loop lcall jmp test pop loopne fwait push pop pop add jns mov add lods mov lds mov dec std and xchg scas or adc cmpl xchg rcrb (bad) test test push push adc jbe inc mov aad mov mov or mov mov (bad) push dec cltd pop in (bad) pop inc out sub xchg outsl aad or and adc fwait fwait iret push mov cmp rcrl fsubs xchg inc pop xchg pop mov popa xor out adc loopne es fucomp adc and sbb cs adc mov stc test (bad) ljmp add lock pop (bad) std push jmp mov jo popa lret aaa inc pop roll iret mov and sub pop push out fcompl xchg test hlt (bad) fstps clc cmp dec sub xchg mov sbb (bad) stc pop sub mov xchg es stos xchg pop in sub mov cmp test lahf jmp mov stc xor adc push pop mov mov mov sub and jo out ss sbb sub pop push in or jns lahf das pop dec push sbb jmp xor xor pusha xchg leave pop mov fnsave gs cmpsl jns rorb jge cli xchg adc out (bad) pop mov inc (bad) loope aam pop (bad) push mov popa mov jnp xor bndldx push adc inc or shl jp xor sub lcall sbb gs sbb in cwtd lods pop repz sti ja ss cmp pop and aad shll jno sbb push mov mov test out hlt nop and int dec scas sub xor sbbl lds inc fidivl movsb cs ds cmpsb sarl jns inc loopne lds scas mov fabs outsl das int cld dec inc cmp jbe and (bad) (bad) mov xchg push fcomp mov push (bad) lods cwtl dec mov cmc cwtl push sbb insl repz pushf xchg adc inc and loope mov and push repz cli mov sub je mov test xlat xor fldpi dec xchg inc icebp pop test xchg jnp adc out jb les es or pop stos lods pushf xchg loopne aaa dec cs rol pushf outsb bound aas xchg (bad) jmp dec ja ljmp push daa inc mov stos scas negl movsb push push mov add leave pop and sbb sti add rcr cmp int cmpsb and mov lcall xchg inc xor fwait fwait jae push add dec mov pop and out sbb std jp pop ret or ja jg push shr aam xchg pop push mov rorb inc mov dec mov ret adc or leave int loop mov insb jne cltd (bad) (bad) enter orl call cmc lds imull pop iret rorl cmp sbbl mov adcl sbb dec mov sub lret sub xchg (bad) rolb push leave (bad) aas jp xor ret js jmp fild ljmp arpl dec fisttpl jp test repz sub in dec xchg xor dec call mov xor fwait cld lods arpl xchg cli mov xchg pop xchg (bad) imull mov cli cmp shr mov jge or popa test pop test fwait cmp push and (bad) fidiv jl mov insb add movsl sub xchg mov sbb jmp popa paddd andl or rorl push dec loopne fstps xor insl andl divb imul sbb xchg adc (bad) mov mov rolb outsb push and ret xchg mov mov xchg in inc outsb stos js sbb imull xchg in xchg inc ja inc es xor inc repz push dec jbe out jo sbb ja jmp push popa jl push jecxz fcomps or inc pop sbb push fnstsw stos cli aas imul stos in out jbe mov inc (bad) aaa jno jne pop mov cmp nop sbb dec or sahf rcl lds lret (bad) mov cmpsb ret shr in data16 nop lds mov addl test sub into aam movsl mov inc xor lret ljmp xor dec and loope mov in and nop cmpsl add out mov cmp adc lcall stos xchg je xor enter stc nopl adc mov fwait sub sbb stos mov add jnp dec daa mov outsl int mov icebp jbe add (bad) std outsb out sbb out lahf cmpsl cwtl arpl jg (bad) into enter aas cld inc test add cltd lods xor stos loopne les cs jbe inc lret and jo jl lahf std sbb inc xchg icebp jb jne scas int cmpsb cmpps jb push adc cmp or inc mov cmpsl jnp cwtl mov fcoms test test movsl dec inc inc fistp dec adc movsb cmp lds wrmsr icebp adc movsl shll or inc icebp sub insb (bad) jo (bad) in sti push xchg xchg insb scas stos ds add jnp call xor sub dec ret ss addr16 inc aam clc inc mov dec lret push daa lds rclb lahf push mov fwait (bad) inc mov pop mov mov sub mov imul sar jge mov add pop out pop (bad) stos push sbb jg add int3 shrb xchg adc sbb negl mov (bad) adc in lret fnstsw (bad) addr16 jns out pusha jmp mov sub movsl or into (bad) xor adc sub push jg mov fdivs push push (bad) lret sub inc imul ficom jle dec stos mov rcrb push loopne leave insl mov inc jno jbe jb lcall pop cmp lret sub cmc call cltd out pop leave mov dec push xor popa out mov fnstcw int3 push inc push mov jmp lret lds lea or or lret xchg std sub jmp and mov mov sahf push fwait stos mov fild mov popf pop xor xor out cli lea cli into pop mov inc xchg jno test pop xchg cli out (bad) sub jle and int jp ret dec xchg mul mov and fs xchg cmp sbb xchg aad push lods xor imul or adc out pop sbb dec xchg jp push sub or clc mov lods insl push mov or (bad) push mov mov in jnp fwait pusha cltd and sub xlat sti mov lret ss xor rcrb cmp dec gs mov mov pop mov sub cmc or add bound lcall xchg fwait idivb cld movsl repnz xchg ret add aaa or imul xchg stos les mov fst mov incb dec nop insb xchg or cmp fmuls mov lods sbb pop or sbb (bad) adc (bad) and hlt insb jecxz mov push dec int insl pop lea mov movsb sbb sub and (bad) rclb adc shlb or mov ret pop push cmp (bad) aam cmc (bad) or push cmp adc and push std pavgw into hlt mov xchg dec inc mov inc cmp lods insb (bad) mov adc sbb mov add jne xchg negb lea in xchg repnz cwtl std imul ficoml mov mov cwtl xchg fwait lret mov fneni(8087 mov fwait icebp jbe add cmc jb xorl ds add sbbl out lods idivb cmp bound shlb sarl lret jb,pn scas jne add ret cmp sbb inc and insl mov push push ds movsb pop das cmpsb mov bound clc hlt mov int3 int3 sahf jno sahf lcall loope scas mov cmp daa repnz pusha lret (bad) in pop nop inc pop adc adc sub mov in (bad) loop mov dec aaa (bad) call scas mov addr16 push sbb and sti and outsl jecxz rolb je (bad) (bad) push mov pop xor outsl ret mov icebp call sub mov add loop out and jl cmp cmpsb in leave pushf or ret rcl es pop xchg insb push aam ds hlt popa movl pop and sbb lock in mov mov inc push loop loop mov stc hlt inc cmc imul cmpsl rcrb out adc stos dec ljmp popa inc sbb (bad) adc sub movsl push cs pop pop dec and or ficoml mov mov mov and and pusha or repnz loope mov or lds outsb shlb shr push test xlat lret out lds add push stc sbb cwtl sub push ret push or lcall test cmp mov mov in mov lahf lcall pushf mov xchg mov rorb int ds jp in das repnz stc outsl pusha fstpl xlat cmp dec mov add jnp stos or jo push inc and pop push jmp xor (bad) jo sbb scas ss xchg lret sub mov lock loop mov and stc popa xchg xchg lcall fimull repz pop xlat inc jmp jo test lods jle push cmp xchg jmp lock (bad) ljmp xchg repnz gs aas xchg cmp push adc pop ljmp mov vpavgw inc (bad) and inc btr lret ret pop mov push jbe cmp mov mov push jmp call cmp add add repnz enter dec adc xchg sti push cmp stc std aam addr16 (bad) dec cmp adc stos lret add mov jo inc fcmovnu loop inc mov sbb pop jbe scas addr16 (bad) out jno and fsubrl or fisubrl lods dec cs dec push fnstcw mov cmpsb adc popa and ds stos mov je,pn push (bad) mov push cli pop xor mov lret xchg lods cwtl repz inc jmp loopne cwtl icebp add mov jl inc or mov xchg push mov into fdivl loopne mov xor jmp dec cltd clc xchg xor or scas repnz xor ds cmpsb push xchg leave sbb in dec sarl add push adc mov hlt mov (bad) cmp dec lds in cmp mov js in in daa mov xor sub je (bad) in mov (bad) (bad) pop or xchg lds sbb fwait jge sti test fiadd dec xor in jle xor loopne enter cwtl inc dec mov cmpsl outsl sbb dec fldenv das sbb call mov pop mov out xlat jnp xor mov rcrb data16 (bad) repz xor adc push mov lea push imul ds movsl scas popa (bad) mov nop rcll scas (bad) icebp mov mov mov insb push pusha iret stos icebp sbb mov nop psraw sbb dec fs loop fldl pop lahf and inc pop ljmp ja or (bad) xor js mov inc xchg mov cmp (bad) cmp lods xor cmpsl fsubrs dec imul fbstp pop enter neg fldl stc sbb mov daa mov push jae push xchg pop lods xlat xchg (bad) addr16 sbb or fisub lea dec mov inc stos push cmp outsl xchg fstpt gs or mov fsubl mov mov push mov dec pop adc (bad) xchg jae fidivl sahf int dec icebp inc cmp xchg and xor pop das icebp clc cmp mov popa jg mov mov cmp loop out rclb pop (bad) push xchg dec mov mov xrelease call loop repz mov outsl adc aad mov push pushf mov arpl jo cmpsl lcall sub cmpsl sti and and adc insb sbb jmpw mov stos pop cmpsb pop in fnsave aam sub cmpsl fs jp mov or movsl (bad) and sbb incb xchg shl mov mov xchg outsl les cmpl popa dec mov push push cmp lods inc cmpsl mov mov in push or inc xchg call pop dec sbb (bad) bound inc ficoml out xchg shll in add lcall or or pushf test inc mov mov je adc pop pop fidivl lds (bad) cld cmpsl and arpl roll cmp in push or (bad) dec inc mov outsl mov add xor lahf pop sbb pop inc jge out push loope stos in cli (bad) outsl jmp dec pop loope cmp (bad) pusha pop push (bad) shlb and test jmp mov rorl sub lock mov cld mov (bad) stos sbb sahf fbstp test pop and mov lret sbb bound stos or add popf and jns into adc repz inc or pop cs les dec into divb mov mov push loop lods sub stc xchg push jo push add cltd jl mov xchg mov cld pop jl or cmp out pop aas xor jl push loope push lods push and lahf xor test lds push popa cltd insl jo xor ss inc mov mov mov lret mov mov data16 test and push sarb notl sub aas push ljmp mov pop inc out sbb lea jb leave movsb inc ss mov std push popa pusha dec or call je push xchg xchg jno (bad) out (bad) sub mov or mov dec lcall lcall lea inc sub pop dec lods out jmp xor (bad) int push scas xchg fwait in pop mov shll push jle test aas rorb sub aaa jb and out rcrl and cmp ret popa mov (bad) dec testl (bad) adc inc xor pop mov scas or int3 sub pushf add cmpsl mov movsb (bad) pop dec les out call lcall enter iret (bad) out loop dec mov stos xor imul mov add jno fild cmp cltd add out inc sbb dec mov sbb and ret jge repnz cli iret inc adc nop mov outsb lods lcall push cmc (bad) inc adc out cmp dec pop pop imul push push xchg movsl add (bad) mov pusha dec fiaddl or jge stos pop mov cmpsl cmp jns insb cmp sti je (bad) in push add aaa jno nop mov in lcall mov jle das call jnp push xchg jge adc or fisubrl mov push fisttpl pop es xor adc mov and and mov jne jns adc lods (bad) enter out in cmpsl jb cld scas clc mov (bad) mov and lcall mov adcb js push outsl in sub mov pop stos adc imul mov jae adc jne aad lahf call loop sub notb rclb push nop mov out or push sbb lret enter xchg lahf lds (bad) stc (bad) aas xor in fwait ror scas jg push pushf lock add inc ret dec pop jbe div push popw sub jp push inc and sahf popa and nop push (bad) (bad) in rcrl jo adc clc out sbb test pop sub rsm or pop outsb or xchg cli dec jo movsb push mov or add mov jb fadd aam inc cmp daa std pop call iret or sti jmp push clc mov add xor loope fimul scas test in xchg jl leave adc pop jmp dec mov jl dec roll int3 lret or cmpsb mov xchg into rcr push (bad) testb test add jmp (bad) fsub popa xchg (bad) xor push test xchg je test pop bound mov ret mov xchg imul push add push vpcmpgtd insl in xorb cmp iret out and cmp jge pop and je mov or sub mov or sbb aam add xchg adc lods daa in stc stos sbb mov hlt mov mov jmp fpatan out and inc loope push cmp adc addr16 jp lods lock cmp lahf jne movsl lret cwtl add mov mov lea (bad) mov sbb data16 call inc push sub lods cmp sbb into sahf cmp and sbb stos fldt xchg lock ret fs adc dec subb mov hlt add aas cmp and dec mov add inc dec rcrb cltd xchg fnsave dec jecxz fistpl fcomi call mov (bad) jnp push cmp mov into iret (bad) sar or std push xor orl or mov enter sbb jns scas jg stc inc dec subl mov add loop push adc pop or lods cmpsb cmp xchg sub popf sub in gs (bad) push sbb adc mov xchg lahf out pop add sub in pop inc outsb hlt in xor jae cwtl js xor sbb addr16 fistl mov idivb mov clc jne push dec mov and xor pop daa jne cmp mov adc rcll inc fidiv xor dec call (bad) lret icebp pop rclb leave js inc pop adc outsl imul lret stos fisubl xor jno pusha daa outsb ret push clc in out packsswb addr16 push scas inc and (bad) pop sarl lods inc jge xor sub push xor shrl mov xor xchg or add inc loop pop add jle and outsl push leave fidivl fiaddl (bad) test stc jecxz aam int3 mov mov out mov lret dec mov mov stos outsl adc es or add out add and push xchg xor dec aad imul inc cltd loope dec pushf aad push add dec lock mov sbb xchg jbe lret push repnz mov dec lcall push xlat xor out cmp imul cmp fidivr jge fldcw ret push mov push loopne cwtl xchg cmp fimul or jbe or rcrl sti fnsetpm(287 xchg cwtl mov and pop (bad) xor scas pop add rcll xchg and mov pop daa jle or jp je (bad) loope mov pusha xchg imulb in inc mov not dec int ja mov and out movsb sub inc js movsb loopne cmpsl cmp push test and add stos (bad) in adc pop adc inc ss insb gs repz in dec ja addr16 lods mov mov pop push mov sahf jge push inc cvtps2pi xchg test pop popf (bad) cmp inc sbb cwtl sbb adc pop push stc jno sbb in or push js mov (bad) aaa add xchg lahf sahf mov and sar pop inc fs fistl cmpsb push daa rorb pop xor js imul xlat sub test xchg addl pusha cmovae pop or pop add fisubr (bad) push dec sub fs sbb xor adc shrd pushf mov jo rorb cmpsl movsl movsb pop jo out outsb jmp mov stos pop mov push into dec jmp fidivr mov mov stc mov fdivrl sarl sbb push sub adc (bad) cmc shl lea cmpsl sub adc dec mov push pop lds sbb rcr ljmp push adc sub sub jl jg test scas sbb push repz enter jno mov cmc mov mov adc in xchg inc dec push jle adc arpl leave dec sub js push push push outsl das or pusha loope cld into adc push fistpll hlt lock pushf fisttp jnp mov (bad) xor out pushf sbb xor mov lock push jnp add jne xchg lods call inc lcall push stc in sub pop mov insb out bound (bad) sub add cmp call push iret push in jge divb cmp cmp (bad) jmp arpl fs dec (bad) mov lahf fnstenv adcl dec lods loop fild (bad) imull shl out cwtl fbld or mov or push test xor stc repnz movsl push mov inc mov imul push ret adc adc jg mov xor inc scas pop dec aaa lods cmpsl pop xchg sub sub dec hlt jmp das xlat fimull mov movsl push fiaddl add xchg out out imul jl or daa cmpsl mov rcrl jns fs pushf jae adc xchg test loopne sar test insb test xor mov or fldl cmpsl mov leave dec notb out xchg sbb imul jp xchg mov aad jge test xor xchg scas mov xchg cmpsl aaa out sbb nop sahf stos xlat cmp sbb lods shrb lahf je sub mov inc lret loopne fsubrl jmp pop scas popa and mov out (bad) rclb or pop daa loope pop rorb std adc adc pop jp dec insl stc jne mov sub ret mov adc (bad) xor cmp in pop lods add rorb test cltd xchg test leave std pop pop clc lea fildl inc fwait mov fldl sahf pop inc push add enter adc adc and sti adc in xchg mov mov icebp aas inc fwait inc sub fstl dec int3 shrl out mov (bad) adc orl push leave mov xchg popa sbb icebp adc dec cltd shrl ja imul cmp out pop lahf outsb je scas add daa cmpsb (bad) cltd stc (bad) xor imulb sbbl and xchg push scas sbb adc xor xlat ret nop adc push add jl mov mov mov xchg inc mov push pop fisttp dec jg push jecxz fwait outsl jns jl inc mov xchg mov pop pop in scas mov jmp ljmp push lret loop cwtl rcr (bad) xchg adc cmpsb ret movsl repnz lret jnp (bad) in and jno div inc mov push add add cmp jb add (bad) or push push cmpsb and (bad) stos imul lret cwtl (bad) in mov inc lods dec (bad) mov leave mov call and fwait notb imulb adc or loop insl ja pop scas push iret sub xor pushw das out aas pop mov lea lods mov pop ficomp call sub or mov (bad) mov cmp add push lahf jo or push and add out pusha outsb std rcrb roll xor (bad) dec add dec adc bound lds adc mov xchg xchg sub sahf (bad) sub xor sub les dec jb ret jge mov xlat sbb int aaa in fdivs add mov lret imul jge ret mov jge add mov fiadd call add sub mov arpl push repnz (bad) aas xchg and icebp cmp inc adc insb jl test sbb xchg ja int pop lret (bad) push inc mov adcb jae mov enter mov popf sub adc mov gs test adc pop out or jb insb (bad) stos clc stos clc les (bad) and cmpsb push xor test fstpt xchg cltd pusha cwtl push mov cwtl movsb mov jmp mov repnz inc ret mov (bad) mov mov cmp bound das fisub dec lret jb mov or or addr16 mov loop in stos leave (bad) fdivs or sbb jecxz jo mov lea cwtl push ret iret stos pop ret or in xchg repz imul insb clc jecxz push rclb adc lock mov lahf push pusha mov daa pop lds loopne xchg mov lea jno xchg mov and fisttp mov lds jb (bad) fnstcw mov nop rsm xchg xchg dec sbb pop icebp nop les call inc fisub loop adc sbb scas xchg cs dec stos mov add stc arpl push scas and cmpsb jns inc das or mull (bad) in xor sbb cmpsb sub xor bound ror mov fwait jne test add sbb sbb into pop pop nop pusha push das fistpl iret rcll push pop push mov sbb mov lcall adc inc xchg xor inc push xchg pop pushf and jae jl sahf push mov cli mov je jge imul cmp sub addl xor and push push mov mov cmp enter jle xchg cmp repnz scas adc cmp les loopne or push pop outsb stc and scas pusha jle fbstp (bad) (bad) aam into rorb repnz jae mov mov xchg cltd inc xchg or sti (bad) cs scas jne mov mov jo pop stc dec dec jmp or and das aam xor cld push mov mov test int3 mov xchg push dec jle xchg clc (bad) iret mov adcl data16 mov jecxz pop mov cltd test lea mov or mov xchg push aad jge add mov lods test shl lahf imul rorb nop dec mov into dec mov sti jge gs andl test int3 adc enter xor (bad) jle pop cmp popf sub jge push xchg rcrb ja xor or jmp and out or pop idivl addr16 xchg adc jne faddl cmpsb xor sbb ss cmp mov mov fwait inc enter sahf mov test (bad) hlt cltd push mov outsb fdivrl repz adc inc fisub test arpl pop mov fsub mov aas in ja ja add pop test adc rcr xor cmp cltd ss pop push pop (bad) mov test leave mov sti inc add jp push add mov add xor cli sub fs xlat and mov jb lahf into sbb gs sub ret add sbb jecxz insl inc xor mov cmp pop mov loopne mov jmp jg xor mov in lods sub aam int3 adc jne pop adc inc js push add dec insl loope test test pop mov inc arpl and (bad) mov ds outsl xchg or adcl jl cld sbb sbb mov dec repnz fld mov fmull ss pop and xchg nop pusha outsl stos movsb fadds push aaa aaa sub pushf repz jle pop dec dec cmpsb fwait xorl inc jns inc and (bad) or (bad) je pusha fistp hlt sarb pop imul (bad) inc pop mov lret out movsl bound push bound loopne and xor adc mov jp mov push add mov and icebp xorl pop scas add scas nop push sbb out cmp mov jbe lock adc sbb test jno dec cmp and pop jl lahf orl fstpt pop pop ljmp fadd dec jne ret jae jb test out push aad xchg xchg pop push cmp insl fwait clc popa es adc xchg sahf daa jge xchg popa or push dec fstpt int xor shll movsb stc cli into mov shr inc xlat mov fisubrl jle sub xchg adc jg cmp inc adc cmc pushf sbb in pop sti ret into push addr16 sub out ds test aaa adc and ret ret add jae pushf mov enter ja jge mov or and les sbb inc lret hlt xor adcl cmp lcall icebp test add ss xchg in aaa add fwait ror mov sti pop xor push sub xchg ret xor sbb mov push into mov and bound adc icebp xchg sub sbb xlat lret ja push cmp dec jg dec pop add test cmpsl in jo sub ja test call pop cmpsl xorb js dec and negb mov mov enter xor jmp gs mov add lods jns ret cmpsl mov popa roll movsl push jl in aaa imul jle dec or call (bad) xchg push pop lahf (bad) negb imul mov xchg in dec xor (bad) roll insl enter inc lret imul mov aad mov add leave jp or fidiv pushf ds mov test mov inc lret push mov ds ja and insb xchg jb xor fidivr push aas movsb dec (bad) cmp adc scas cmp cmpsb add mov xchg fistpll or repnz popf push mov push in push pop ljmp pop and mov std push xchg jns lret mov xchg lea movsb movsl sbb lcall xchg (bad) js jbe loop mov pop insl pop loop xor pop or (bad) idivl dec mov mov add out xchg rcrl adc fs dec push jne loope scas jo jp or mov andl and lds cmpsl es xlat es mov mov das xchg sbb mov jle inc add push scas mov call mov xor or xchg mov outsb and cwtl and fidivl hlt jb fwait (bad) lds and dec xchg jo cmp or divl jl fcomip add fstp mov addl aad mov pop dec (bad) push sbb popf pop inc insb pop xlat inc sbb sub rcrb decl mov dec ljmp push push lcall mov cmpsb push mov add stos dec in pop and mov xchg jbe dec cmp push popf or rol jp or xor (bad) imul push mov pusha push add xchg lods aaa mov sub fiadd jo lret imul and (bad) jo ja cli push aas and in mov pusha ficompl pop add stc inc int dec mov mov pop lea cmc and jp es add outsb mov xor jecxz lret roll cmp int cmpsb add pop mov jnp (bad) test aas inc mov pop jne pushf hlt jecxz loop inc lcall xchg cwtl inc int stos mov (bad) cmc xchg not lds cmp fisub mov sbb cmpsb pop dec push dec add mov lods ror cmc xchg lock fs gs pop dec sbb popa aas or or aas dec add pop inc xchg and imul jecxz push pop scas mov inc (bad) mov inc sbb aad in pop lds gs out mov pop or mov mov lea pop sahf repnz push pop jne ss mov jbe rol leave test cmp push lods inc mov (bad) fcomi imull pop pop ret leave div mov sbb mov mov lahf pop pushf mov mov inc dec cmp push inc cmp mov mov outsb test and fistl xchg fwait xchg mov js aaa add cmpsl fstl mov xor jcxz adc shl andl dec sbb mov (bad) sti imul shll dec dec mov add xchg outsb stos jo add mov test jge and mov mov jns jo test int3 jne sarb sbb les test bound sub (bad) jbe mov call loopne lcall rorb push test xchg mov xorb xor adc xor test out xor pop lea mov mov (bad) pop push mov push sub adc ror pop pop xchg gs cmpsb xor iret (bad) sub push jge sbb hlt cmpsl (bad) fbld adc jmp in in fwait mov dec and xor rsm sahf (bad) repnz idiv jnp sbb lahf jle pop or fld1 pop push nop pop je jnp pop and or mov inc (bad) sbb add loopne cs mov mov mov sbb std addr16 cmp pop andl cmp aas mov imul cmp push xor mov sbb xchg (bad) mov xchg add out add xorl (bad) jae mov sbb fsubr ret stos insl mov lret pusha fstp addr16 ljmp push push std je test rorl aas sti mov lods jnp mov sti idivb bound pop xchg push xorl test mov int3 xchg nop mov push daa fcmovb ljmp aad xor dec mov repnz outsl push cwtl sub push cmp adc and sub repz push repz lcall jmp test xchg push jb and popf icebp mov lea mov jg int cmp cs push push jae out icebp mov (bad) and icebp (bad) daa pop (bad) in (bad) fldenv stos pop ret (bad) jg add in push and and mov pop adc xor fdivl jno ja xor and lret out xchg lds cli mov sbbb in es jp test loopne mov or sbb pop cmp cmp js or and scas fildl loopne jg xchg call add lcall orb mov cmp mov rclb sbb mov inc inc mov pop (bad) push out jbe mov mov push or and or (bad) adc test ret inc setae adcl xchg hlt rolb (bad) out jae dec sub jmp call in mov inc pop pop mov movsl add aad cmc out push xchg pusha pushw pop xor xchg aaa fnop sbb push pop xchg lahf mov mov rcll mov mov pushf stos push out sti and add or inc xchg nop mov lea xchg pop repz test in ja pop ja outsl test sti cmp or sahf push in or push data16 fcomp out repnz divl repnz je pop negb inc jmp sub add pusha mov fs scas sbb aam jecxz jb lods dec mov push dec or mov shrb adc das inc mov dec push sbb jnp test leave cwtl lcall adc cld mov mov and xor push pop movsb xchg sub jo push je add lea sahf jmp adc call inc shlb lods movsb sbb mov test bound call sbbl add (bad) bound inc jle mov xchg out test and cmp push and int3 imul scas sbb xchg dec add test adc and xchg outsb jae ljmp push rorl popf ret and subb cli and mov push mov pop lock jb pop xor or gs out hlt lock das push fsubs inc cmp mull mov mov ss mov (bad) mov cmc or xchg cmpsl daa pop lock xchg test jns (bad) mov aam sub cmp cmp lea (bad) dec fsubrl movsl mov sbb ffree mulb and xchg mov test pop mov cmc icebp in sbb scas push (bad) idiv insb add mov jno in add mov inc pop imul mov ret xchg stc pusha jle ss and dec jbe push fisttpll sub popf mov imul pop sbb cmp in push insl sbb xchg add or jne pop cmp (bad) (bad) jmp xor fsubs lcall fiaddl out xchg adc loop int clc ret inc loope int xchg orb or or jmp stc (bad) xchg or aaa lods repz rolb js mov jne out lret mov pop jne sub sahf mov aad sbb and and in addr16 xchg pop in loopne or aam test jo add ljmp imul and es popa jbe push cmp js sub pushf push add adc push push lock jp sub lods pop neg dec and popa lret sub adc add test jns mov leave test repnz imul rolb add vpcomw sbb fs cmp xchg imul mov ret loop movsb stos out mov nop jo xor sub inc adc cltd mov ret inc dec (bad) icebp xor cmp xchg out push inc xor mov add icebp push in xlat inc sti shrb sti shr jb in cmc ljmp dec push and inc rcrl dec adc in fdivrp xor inc mov sbb in mov fwait add out in inc cltd clc cmp mov pop or dec push hlt shrb not mov pop jnp or sarl popa sub aad pop jp jl movl push xor andl pop movsb fdivrl mov lock in dec popa dec xlat adc pop (bad) sti sbb es aas aam jb sub mov or push xor (bad) add aam mov mov dec mov pushf nop fwait pop dec pushf xchg pushf or stc rcll ret xchg mov test sub mov sub sbb dec icebp (bad) jae lahf adc push mov adc cmp iret sub sbb dec fs call (bad) sub or outsb add mov cs insb ret jg es or mov hlt loop adc aas fildl xor loopne fbstp mov mov xchg push dec mov or dec and adc rolb fstl mov push insb or push mov fidivrl xor xor (bad) in into shlb adc sub fstpt xchg inc jg jle cli xor mov ret mov rcrb or (bad) clc sbb ljmp xlat mov sti pop jge mov mov mov adc (bad) cli xchg xchg add test mov lock mov imul (bad) cmpsl femms jo std adc sub sbb mov push mov lahf fwait testl stos mov (bad) cli stos sbbl fsubs cmp inc loope jae adc pop mov inc cmp nop lcall inc lock es add iret xor out insb cmp lret sbb cmp inc pop aas push stos and dec adcl in pop xchg xchg test stos inc arpl sub sti pushf lock dec cs adc out popf cmpsb dec outsl stos popf cmp popa cmpsl ja sbbb mov mov aaa shrl sub or mov jb lret pop std dec shrl cmp pop mov or pusha and aas rol out xor jns dec inc sbb xor icebp (bad) jae and es add repnz repz or mov xchg add popa fwait out dec (bad) sub cmp xor push jns lock lds jl adc jno mov fs enter imul daa xor add jge and push pop bound dec sub lds cltd outsl out add sub push loopne and push movsl sbb fistp add fwait aas add mov cwtl arpl (bad) or aaa js adc or lods notb inc mov xlat test xor shlb ja jnp cmp mov cmp (bad) jbe cmpsb xor cli repnz xor sub adc jle pop daa cld fs orb push mov sub push fstl sbb add xchg dec je out loop pop popf add or lahf js int enter pop jo in fwait adc cli and xor je mov (bad) mov mov scas dec lods xor xchg or test fbstp add hlt icebp aaa fwait stos xor jg cmp cmp xchg stc roll icebp icebp (bad) sub pop sub push xor stc orb mov cld pop adc sbb lea (bad) pop loopne xchg setnp lock and insl mov clc icebp jmp lods sub mov dec das xchg in inc enter ljmp mov mov fistl adc je adc arpl or test and repnz ret shrb inc lea rclb shrd in insl call fwait out xor xchg mov jne inc orb and popa nop sub or mov cmp mov cmp subl cmpl mov (bad) push mov in jns inc mov movsb aas rorb imulb add add mov mov and rcr jb (bad) adc mov push add xchg cltd push sbb in (bad) dec cmp push sub xchg (bad) and nop inc int imul adc fwait rcrl xchg test mov lahf pusha mov lods fcoml push test hlt pop stc iret imul sub xchg pop (bad) sub inc pop or (bad) bound movups pop pop popfw loopne adcl xchg pop mov repnz cmp cwtl lods fcomps and jb adc lock and int rcrl mov rorb adc or incb pop cli inc imul ja xchg mov dec imul rolb lret js sub add (bad) fisubr lea sahf loope ds cs xor push bound dec mov jp fldlg2 mov xchg xor and ljmp push scas mov jecxz xchg mov cmpsl mov or dec ror imul cli out jno mov xchg push in xchg cltd (bad) or jnp jge add (bad) adc xchg test mov outsb inc xchg lcall jno outsb push mov mov repz sbb adc stos mov pop imul popf dec cmpsl add cmp cmp fwait adc jle mov shlb ja cmp (bad) pushf mov push add adc popf stos pop jmp test add xlat in pop jge cli push mov xchg pop adc shll inc stc fucom xchg ret cmpsb (bad) roll push in cld sub test jge dec sbb sub xor outsl ficom pusha sar mov or add add add inc loope enter push fistp (bad) aad push test dec jmp pop xor shrb cwtl ficomp sbb or hlt or xchg xchg fnstenv push ds sbb sti push push mov pushf pop adc mov or pop and enter add jecxz (bad) sub enter push and mov xor clc sub jle sarb sub mov mov loope nop mov dec ja out mov sbb bnd mov and push data16 daa (bad) xchg imul jns and dec (bad) or sahf jecxz sub add cmp or sub in (bad) sbb (bad) mov in scas mov xchg pop bound enter pop push jge ret loope dec out pop in jne inc repnz out sarb les xchg xchg xchg xchg aam dec je jl shrb mov lret in and jae lcall negb sbbl mov sti (bad) ss push sarb pop loope out dec nop xchg push ss jbe cld dec lds cld sbb xor es lods sbb push add aam shrb out pusha fdiv call and ficoml and lret adc inc push and sbb mov cmp outsl clc sub lods mov in sub adc pop inc test add jp pop flds mov cmp scas inc pop scas mov std or pushf jecxz and (bad) dec and sbb cld outsb sbb loope in out add xchg mov add fimul mov mov cltd adc cmp lds adc xchg out sahf adc inc xchg pop ja shrb xchg lods mov xor arpl xor fstpl iret lret mov mov std jmp mov jae add call dec xchg jge push je push (bad) mov mov or roll xlat or dec setg lahf lds xchg lahf inc xchg or adc cmp push fcompl add mov cld pop test dec push test insl or pusha inc inc mov in mov insl mov xchg or popa cwtl or push and cmp cld pop test dec add mov push enter clc pop jg fadd xor xor or xchg push jge mov mov push aas js ds fisubr inc mov mov sbb fdivrs ret nop (bad) scas pop cld loopne dec jge loope sub xchg je addr16 sub push mov jb cmc scas fist jo mov lds movsb pop popf cltd mov add (bad) loopne xchg stc sbb pop inc mov mov mov pushf std xor xor ss in xchg inc mov int3 mov test aas repz ret mov and inc add xchg jns jp movsl and inc jo into or fidivl insb stos je xchg mov mov jae xor push cld push push std andb pop push cmpsb adc orl mov lock jb or mov fisttpll std add mov inc jne nop adc repnz scas loopne pop scas inc jbe pop adc int cwtl mov cmc ret jp popa adc int3 or pop iret push les adc (bad) sub mov jge mov xchg mov insl xor jp (bad) lret pop inc ljmp pop mov adc hlt sbb mov add bound mov push pop xor aam mov test aaa xor pop pop aaa or movsl jnp clc xchg xor aaa mov dec xor mov leave adc and jo repz xor and jnp mov adc ja movb or mov adc repnz inc fsubp or add (bad) adc xor push scas loopne or lret pop (bad) mov and int3 dec jp sub in inc xchg inc pusha pop repz (bad) scas pushf and mov stos outsl loope mov dec mov adc jg pop mov rcl in dec mov sarl pushf imul fcoms or dec xchg mov dec dec mov arpl into xor out xor sti repz mov aad int cwtl xchg popf cltd mov cmp cmpsb sbb jp cld pop cmc ja mov jecxz xorl mov loop mov mov jnp insl jns stos (bad) mov pop cli cmpsl je ret cmc cli popf jo mov pop xor dec cmp sub aaa mov sbb daa mov xchg ret push negb push test clc cli addr16 aad aaa mov gs and pop aam (bad) jb test adcb adc les je movsl xchg loop cwtl push cmpsb (bad) pop inc sbbl cli cmc adc push inc inc (bad) aaa adc fimull sahf xchg xor out cld (bad) lods dec daa addb or cmpsl adc and dec inc mov iret negb in sti dec (bad) iret out into es fisubrl jns or arpl cmp jae call insl and in inc adc out lods push lea dec cmp clc pop fimull cmpsb (bad) sub xchg js insl test test repnz movsl (bad) dec popa and arpl ret xor notb dec mov test ret out je repz cmc pop push push cmp (bad) jbe and fisttp adc outsb outsb pop loop notl leave movsb mov push or cmp inc pusha mov std subb pushf movsb stc in in mul push bound xor xor repnz xchg (bad) aad (bad) decb lret inc pop loop push fs cmpsb scas les add loopne faddl and xchg in lea sarl dec adc sbb (bad) in clc clc ja mov cltd jg int3 sub sbb adc jne sbb inc cmp dec ss mov fbld repnz bound nop ja imul test cmpsb sub fnop arpl stc ds pop and jp mov mov pop mov sarb add inc pop daa leave outsl adc inc or push cmpsb xchg fs sbb loop push loope iret ljmp stc or jl psrld mov add add fldt pop jecxz pop shlb sbb iret dec xor push sub sti mov add xchg jae jp dec mov sbb fwait pushf jo sbb outsl out fwait push jg loopne adc (bad) xlat cmpsb cmpsl jl mov cmp inc jmp fistl bound adc into sets mov data16 ret mov ret nop xor xor mov xor push out movsb (bad) jmp (bad) rcrb pop mov iret (bad) out popa jl add insl fisubrl or or xchg mov pop ss fs cltd pop ss enter ja or sar imul sub fs das out adc pushf mov popf inc in mov stc mov lods mov mov fsubl fsubs adc into aas pop daa nop movl push and mov pushf add incl scas in cltd push push aas cmpsl ret sbb xor sbb lds push pusha repz pop out out test push (bad) inc jmp push or mov stc into add sahf sbb cmc aam in add sbb insb xchg mov cmc xor loopne and lea jb sbb jnp aam dec xchg stos out jbe xor sbb xor fs push cmp sbb sbb adc sbb int or inc aaa xchg or jbe in popl insl (bad) jg gs lea es mov rorl jmp fs loope lea jecxz lahf push cmpsl fstp loopne inc (bad) jg mov orl call push iret fidivl pusha lods push mov sbb adc sbb stc cmp xor hlt and jmp and sub pushf sub shlb cmc dec mov movsl call adc xchg ret jp xchg flds and sbb pop jp fcmove fucomi into push in sahf jp mov nop clc push arpl testb xchg test mov pop sub mov mov mov sub bound dec xchg inc lods dec xor inc and jb pop jle mov stos lahf cmpsb jmp push loop xchg add or hlt jb adcl inc imul out xor xor and pop cmp aaa inc lock xor fisttpll sub push (bad) jae data16 xchg jge sbb sbb out bound in int3 sub frstor xor into or mov and dec cmp loopne or xchg inc aaa rol loop outsl mov aas mov sti jb mov push cli xchg jns mov hlt fdiv sti cwtl leave xor nop das push jns cmpsb in adc int3 mov and xchg sub sub push sub push lods lret add shl inc aaa and sub cmp cmp subb sub and push adc outsb xor int3 mulb push aaa in cmp dec popa lock mov pop (bad) out sbb lret shr dec mov cs and roll addl das push push shrl mov mov outsl fistpll mov fcompl inc mov call jae xchg push sbb iret call xor mov inc dec sbb cmp fsubrl push es jae mov icebp sub or mov jmp pop or cmp jns popa das leave lods movsl mov fwait out cld repz enter in push mov inc xlat (bad) cwtl or xchg outsb aaa lods lods mov push cmpl aad mov rclb cmpb movl push pop and xchg ret or pop mov lods lahf pop xor dec mov cmp andb xor xlat (bad) jne jmp or cwtl adc inc push and push out pop pop push adc ret jae jae dec xchg ljmp cld mov jp loop sub push inc ret popf inc sub roll push cld and mov out inc mov mov data16 add cmp mov mov jle sbb add add xchg enter inc in and mov mov sti aas pop mov sub movsl cwtl xor xchg lods pusha pop loop add jbe dec mov xor adc mov add rcrb std (bad) pop dec mov adcl jns push or push hlt jbe mov sbb pop (bad) or cmp mov mov arpl gs jmp mov pop xchg jmp test push fisttpl jp push cli sbb push dec jnp sub jno mov pop sahf jae cmpsl or in inc mov inc or mov xlat (bad) stc rcll inc test inc xchg sub subb test repnz sbb mov adc lea pop pop (bad) rcl push out in jno mov and cmp aad loopne push daa addr16 insl lret push in mov cltd stc test aad (bad) test xor negb testb pop fistp fsubrl jb outsb lock lcall jnp js mov outsb imul add xlat es xor adc out cwtl std mov pop lret and mov adc int3 dec adc mov loope inc fcmovnb fcos xchg cmc mov fst roll lock into inc jns andl test mov std movsb or (bad) ss and sbb sbb lret int3 sub aas push jne push (bad) push sub dec or add aad jno stos fisubr xchg pop rcrb inc xor ret fnop adc (bad) jno adc lods add sub mov call roll aam sti jbe ret stos lcall test repz lret jge cmp sub mov adc pop fistl iret push jo fcmove add nop ss fmull cltd sbb andb (bad) dec jae xor mov shrl je cmp mov xor or jle xchg xor jne xchg ret ds sarl sub sbb movsb call cmp mov mov lahf mov dec jl imul ss out cmp mov sub jno fnop mov mov mov fldcw inc mov push mov in outsb add mov jl and imul jae jno mov in adc jl test sub push mov lret inc mov iret adc push in rorl out xor and (bad) sbb mov (bad) inc pop xor mov stos dec sub (bad) or stc popf imul xorb pop mov imul ret push fwait cli or neg aam add and call mov mov and lret mov dec imul cmc and in or push sti outsb sti pushf (bad) and setno sub test sub popa jae ja ficomp imul or push push inc nop clc mov ret das jg out ja add (bad) divb je sub jmp and pushf and inc dec (bad) xor mov jle (bad) dec pop push bound fcoml imul jno lret xlat call incl pushf inc fbld icebp mov and mov sbb test mov mov call or mov std mulb and sbbb dec cmc shrb out (bad) mov pop mov cvtps2pd shl decl dec cli leave loope lret mov leave pop cli and pcmpgtw repnz push das push xor popl test mov test xchg push test icebp mov push mov add xor hlt fidivr out or dec push cmp dec jae out push mov std jbe mov rcrl dec xor scas push out cmp xor mov fcmovnb or mov (bad) xor jno sbb xor out xchg xchg mov mov push jecxz mov mov mov xlat xor mov mov sbb pop or push dec sbb aad dec cmpsl jge aam rorl adc hlt nop ret jno mov pop mov lret fstcw pop in pop call aaa fstpt push mov aad fsubl jle push fstps es mov dec xchg mov dec test pop scas mov mov mov repnz mov pop (bad) (bad) int3 jno pop or hlt int3 fsubrl xlat test fsubrl movsl push popa int clc sbb mov in and mov mov aaa jnp inc jnp iret dec mov sbb sub fdivs dec push jle (bad) bound xchg mov fsubrs fbstp pop adc sbb dec imul sbb out ds lea int or in push sti fcomps lds sahf mov and lret jnp sbb xor mov cmc scas mov sbb insl sbb xchg getsec gs mov push jmp pop in sub cmp cmpsb ret popa ljmp adc adc repnz rorl fist pop fmull enter mov adc insb sahf add dec mov adcl dec loopne mov int3 in rol jne jo lods (bad) rcrb add jmp jmp lods jnp jne dec xchg push push sbb lds cmc je outsb xor xorl inc das int push iret repz push mov fnsave xchg shlb or lods scas movsl pop movsl test movsl jle push jo push es cmp sub ret (bad) (bad) (bad) and mov into mov call lret mov (bad) sub (bad) pop shrl mul mulb outsl jns add leave orl (bad) fistp test fsub icebp into jmp push cmpsl mov xchg orl test and pusha fadds adcl lods jno sbb cld sarl and pop cmp (bad) inc (bad) incb stos cmp push push stos inc or sti adcl mov xchg jle add ss gs adc mov jo ret push sub sarb cmp lahf dec xchg or or gs nop scas (bad) rep fcmovnbe add pushl fidivrl aaa jg,pn cmp jo xchg dec (bad) adc pop cmp pushf fimul jecxz es leave ficom loope xor xlat cmpsb or test nop pop jb push popf mov test push push adc push jb nop cmp pop lea leave data16 push cmpsb sarb (bad) test sbb sub mov dec dec sub lds clc and pop orl push cmp push add popf adc (bad) lods loopne ss insl out pop out scas xor in mov std xchg stos mov loope inc xor (bad) lock cwtl insl or test andl stos cld add sub test fcmovnu lcall pop popa popa cmp xor adc mov inc dec in scas cli cltd xor daa int inc stos xchg ret sub lods sub xor mov mov cli sub sbb xor and sbb jb pop daa nop loope jne hlt jb ss inc adc shlb pop inc sti cmp sarb insb xor je xor cmp sti push push cmp mov cmp fildll inc daa shrl sbb in pop (bad) out jmp sete pusha add fdivr ja int fldenv cld shrb pop sub dec push lret ja in dec cmpsb addr16 push gs aam jne push push clc cmpsl or fdivs and out jl mov test and and xchg jge ffree and push jne xchg ss xchg xchg in xchg adc fs outsb pop adc lods inc scas (bad) popf mov sbb xchg mov in cmp and mov lcall enter cmp mov pop mov inc fsubrl popf xchg mov xlat repnz jno in xchg ljmp cmpsb int adc cltd fcoml dec in mov xor (bad) popa add push pop sbb sub push jb cmp add cld mov into jl rcll xchg sbb inc xor pop pop xlat stc (bad) std inc ss pop cmp (bad) mov aaa mov popa (bad) das jl and (bad) ja insl test in int3 xor sub pop dec mov cld adc call loopne repnz sub xor xchg call aad movsb rcl xchg out jmp sbb loopne (bad) cs scas repnz (bad) iret push fs sbb jbe lahf lea mov movsb jmp mov fistl (bad) (bad) js andl sahf sub push jg repz ret imul ret mov int sbb (bad) cmp inc pop or xor popf rorl cmpsb fisubrl sub nop xchg sahf aas mov jle hlt mov mov inc cwtl xchg lahf rclb xor fistpl out idivb mov loopne mov stos xchg cmc aaa mov je outsb adc mov mov sub pop jbe icebp adc icebp nop (bad) scas dec cwtl cmp or lea sbb fbstp lods cmp stos mov dec mov jg aas call mov adc mov mov sbb or in stos xchg cmp das push mov scas xor mov mov mov jne inc and (bad) xor pop aaa loope cmc add iret jle push mov sub cmp hlt push sbb out xchg fistpll dec stos mov les inc inc mov sahf call adc inc and fsubl mov and arpl popf mov adc or xchg mov mov jae insb mov push cmc mov stos in pusha adc inc jmp movsb enter pop jno sub mov mov mov push dec ljmp mov test popa pop and (bad) (bad) lret xchg test in sbb inc or xchg test push (bad) rorb mov jl fdivrs out jle pop jmp pusha jae jg lds std stos mov pop xchg jns int push inc popa mov dec or lods int clc xor shlb aaa cmc push jb frstor xor xor loopne aam sub jmp mov sbb jmp cmp sub (bad) out (bad) sbb nop push mov cltd inc fldenv cmpb adc ret movsb push sub and lret pop push rorb hlt icebp jge data16 sub in mov ds mov push es mov mov ret out push subl roll jne dec mov inc push insw imul mov outsl ljmp jmp sub addb (bad) sub sti scas jae mov mov test (bad) int jge pop (bad) and inc push mov jg add (bad) and dec ret sbb jbe mov cmp inc mov loope lret xchg repz loope push ficomp in and jmp xchg mov loop add mov movsl daa call imul aaa jg cmp mov pop test mov inc scas push push clc imul in mov aam arpl je out xor xchg dec nop pop nop sbb subb scas (bad) loopne loopew,pt adc jmp (bad) test pop enter stc ficomp adc ret dec fildll out in xor or push mov add jne jl mov adc mov mov fstpt outsl ret add mov sub xchg arpl in push add sbb mov adc lret cmpsb adc sub jmp sti and not lahf out ret imul pop xchg bound or xor out sti lahf mov mov push mov sbb and icebp cmp xor or lret call or adc jle,pt test ja test inc mov outsl data16 lcall jns stos mov adc push (bad) cs rorl lret xor pop fstpt jmp cmc loopne popf add fcomps sbb shrb xor cltd daa scas aaa adc adc rorl loope cmp add cmc je sub iret imul ds and (bad) iret dec je sahf sub hlt int mov (bad) mov jmp adc xchg psubb imul inc ljmp mov sub xor (bad) imul dec pop inc movsl cmp out adc push lods jne jmp cmp dec lock xor dec js negb iret (bad) into enter mov test cmp icebp dec xchg ret movsb sbb stc cmp jecxz movsl pusha adc out xchg adc test iret sub mov mul jae xchg mov dec test popa dec cmp ficoml roll cld jnp and insl inc out es cmp jae sub dec mov into (bad) push popa ss cmp pop es arpl xchg les (bad) and in jae inc and jns rcrb mov iret repnz pop (bad) mov cmpl xor ja fldcw jg add cs inc mov out jp fcoms cld lods aam mov xor sub push lods notb out jae adc bnd cmpsl and xchg mov andl shll and add and das sahf fldl stos xchg jg sub adc gs mov mov add dec data16 outsb xchg fsts je (bad) mov out xchg cmp addr16 aas addb loope xchg jo test adc adc rorl add or push cmc out sbb cmc arpl lea push lock inc xchg rorl orl push jmp in loope cmp mov mov (bad) loop or cmp icebp into in ds mov jnp push xchg in inc add (bad) enter cmp sbb les pop cmp jg leave and leave lcall sbb ds adc aaa mov mov inc inc inc dec jl cmpsb shrl out inc arpl int xchg leave xor jmp push inc int fcmovb dec lock (bad) dec sub (bad) leave cmpl test sarb imul cli cmp loop adc out loopne mov (bad) adc ret mov inc mov dec push xor fwait ret (bad) cmpsb jbe mov push jl fisubrl inc popa rorl lret mov adc jmp les adc xor jns ds or xor scas popa ljmp fildll inc push jae (bad) jb lea (bad) mov arpl sbbl ret mov mul fwait cmp cmpsl xchg cmp adc into xchg in popf movsl enter ss and sahf add in jae xor or sub jb dec out mov int push jno ljmp or adc push or dec add dec jmp test pop arpl xchg (bad) xor inc dec xchg les frstor pop sub mov jecxz lahf add fildll pop ret out xchg loopne jno std mov dec or div out les xor xor sub test cmp fmuls mov (bad) ss jmp sbb int3 jo (bad) vmaxps in and aam add cmp sti cli mov (bad) mov pushf push aam ret (bad) vpaddusb ss mov mov fdivp test cmc aas cld loope pop push stos mov scas (bad) mov and out call lcall lret xchg push es rorl popa cmp shr ds mov mov push js movsl and orl add add or mov popa mov jp push sti cmc and data16 pop ja add pop or in outsb cmp imul scas mov inc mov cmpsb movsb push idivl insb sarb pop negb das outsb cmp push lcall (bad) mov (bad) jecxz add cld loop push cmp cmp xchg aam add sarb mov cmc mov fidiv adc and in out rcr mov cli jnp outsl stc dec loop int3 inc push or xchg es or pop sub push mov lret fistpll xor jg enter (bad) test adc stos pop add cmp popf xor mov xchg jb pop push flds clc in sub bound lods inc xor push mov mov mov adc pop jle or rcrb out mov cmp and add repz int js aad js xchg cli jbe sbb pop test mov add inc sbb push push stos sti pop cli movsl dec adc jns in pop outsl and sub adc xchg in inc add (bad) ja lods jmp adc cld xor sub xor pop (bad) cmp mov mov push push push repz push cmp or adc xchg add and xor cmc mov ficom or jge sti std inc mov aam pop jb push in cmp push inc push jb pop cmp rcrb mov pop daa or cmp cmp div stos leave push loopne jne push vpsubsw pusha jns mov fmul pop sub repnz xchg mov push fcomps stc dec fmull inc push shl bswap dec scas sbb push lret jb cmp (bad) and roll test inc push adc inc xor jbe std cltd mov int xor mov jb or aam sahf xchg adc pusha stc add xchg mov jmp cmp pop cmp sarl mov mov adc insb cmc sbb js xor adc jo push loope adc dec inc lahf cmp rcrl cmc inc out sub insb mov mov cmp mov mov das sub rorb hlt add pop hlt cmpb and in xchg mov imul fistpl lods loop push (bad) (bad) sti dec ficomp jnp xor jmp sarb push js jg pop negb pop (bad) rcll and or int3 jns xor xlat enter xorl (bad) sub mov mov mov je sahf cmp pop mov xor test mov fdivrs mov es dec scas cmp inc stos jne arpl cmpsl movsb cli outsb in aas scas lock inc out pop pop push loopne jbe ss fiaddl ficoml daa insb iret sbb pop cmp mov and les cmp pusha int3 adc sub add inc inc push repnz adc adc pop inc ljmp pop dec (bad) (bad) scas jnp addb shr (bad) stos jecxz cmp sub and add ffree popf adc leave xchg cmp in into sbb mov xor into pop jnp repz or in xor int pushf ds sub push pop loope xor lahf aam notb dec scas sub or psllw add loope std inc clc pop mov adc mov inc out iret inc rcr fnop cmp je or insb int ret sub pop and mov movsb push fstl add (bad) notl cmp pusha dec jne inc daa push adc inc jl (bad) adc cmp mov rclb (bad) mov or fcmovnu repz add lret addl pop pop dec jmp add sahf cmpsb cld mov ja inc and test out jnp add ja pop out mov add in or mov jae and pop (bad) ficom mov mov insl add iret and test jg pop cmp and and fs in xlat es cwtl imul cmp push aam mov aam (bad) pushf aas xor (bad) (bad) push aas jb and xor pusha and std add bound mov jl sub mov lea leave mov push mov sbb fcomps add test mov push xor cmc push sub jnp stos aam movaps rclb and jo test repz push stos pop andl repz inc dec shl jge fcoml mov imul pop andl dec mov jo pop repnz clc jle add into cmp fsubrl jae push pop loope fnsave jmp push jl and dec push orl mov adc das cmp aad loope pop sub or fbld fs negl dec add push cmp sub push cmp push or sbb popa popa mov push jne xor xor (bad) pop mov mov mov arpl mov lds loopne bound jno xchg mov je jbe (bad) lea stc jecxz pop mov jbe cmp movb fist leave movsl adc xchg shrl lea cmp lds repnz xlat jb xor mov movsb mov xor lret sbb xchg cmp mov scas fisub sub add lcall mov fisub idivb sub mov jg ds sub jl dec jnp ret lcall dec pop aaa rcll daa out ret pop push xor aas push ljmp sahf jl (bad) sti cmpb jecxz sbb mov std sub out mov cmpsb mov pop push scas (bad) xchg push push cmp xlat add mov sbb xchg hlt leave mov out pop mov sahf dec test jnp inc nop push sub es inc sub mov outsb mov pop sub cmp jnp jb mov fnstcw sbb jmp call popf lock adc into cwtl or jg sbb popf js adc and fnstcw out scas cmp push lods mov aad into push test lret cmp loopne sub daa and insb xlat es sub and sbb dec js stc fs stc sbb js fcomps mov push fiaddl inc loop sub aad jg or repz testl inc inc call xchg fistpl sub push insl xor imul test or pop sub das sub mov dec in out lods push inc inc hlt and ljmp pusha imul mov fcmovne scas add mov and loope adc std jns ds xor mov test ret pop add cmp jmp shl sub inc adc sub mov inc fisttp rcrb jge xlat cld xchg in imul jne adc inc nop xor loopne jns std jg jge lahf xor adc sbb data16 jne enter in cmp popl shll les stos push fiaddl xor cmp adc out cmp ljmp sub hlt aam mov or mov inc ljmp mov mov jg jl bound scas inc adc jo cmp stos std sbb push insl inc add xlat ret fisttpl xchg sbb inc inc js jbe popf (bad) lret cmp cmp add sub cwtl in lret dec cmp inc in jl,pn lret fiadd out jmp lock stos fwait jg cmp jb ret add sti pop scas lret dec sub insl and (bad) jg out inc aad pop scas das mov xchg xchg (bad) adc push fnstenv or mov leave mov cmp sub les xchg ja jecxz in dec test (bad) cmp adc int jae jl inc jno pop outsl ret add jb xchg (bad) jbe sbb dec push and xchg sbb fisubrl mov sbb push cs jecxz cli popa cld pop cmpsl repz outsb mov xchg ds mov add xchg lods xchg pop mov or xchg inc inc dec and mov out push cmp lahf add cmp jae pop fs jne jo (bad) divb jo sbb mov add insb inc pop mov and or or aas push leave mov add adcl cmpsb int3 andb push adc lods sub inc divb push (bad) loope in xlat data16 sahf ror stc or clc jg sbb push std jp in js push loope or test pop imul inc add lret inc and in outsb adc out push sarl xchg mov mov add mov jle ret xchg pop jecxz lcall xor out scas add sbb mov popa mov sbb inc cld jl push xor inc and shrb xchg cmp adc mov loop js clc out aaa inc aam gs xchg mov mov mov call cmp fsubrs in xchg xchg ja insl mov sub test pop xchg mov or (bad) jno in test inc xor leave mov jl mov mov mov hlt push jae adc test mov lods (bad) xor xchg xor imul push cmp lcall (bad) dec pop stc fild mov add arpl add pusha push xor jp xlat xchg pop xchg mov mov shll or es icebp shrl push dec inc or adc arpl js cltd pop inc stos mov addl mov loopne insl fucomip push inc xor jmp and in out aad pushf and cmp pop push jmp add mov or push icebp sub addr16 mov loop push pop xor pop or mov mov cmpsb enter mov pop pop les mov xorl inc xchg pushf mov daa es or movsb mov inc aam js les push pop lods adc loopne xchg mov out dec dec cmpsw in or loop xor pop ja stc jmp add gs gs xchg insb stc and lods xor jl sti loopne repz cmp xor pop nop lods js outsb jmp rorb shrb xor mov push mov lds std jnp ret pop adc pop adc jae sbb movsl repnz xorb push pushf cmc adc inc jae and push mov int3 pop mov in jecxz addr16 mov sbb outsl bound pop xlat mov jbe cs test mov lcall jb xchg pop repnz cmp push add sbb es dec in aad clc sbb mov mov dec inc arpl das jle lods mov inc cmp xor rcrl (bad) test mov rorb mov aaa nop aas mov ret stc out push (bad) jmp jmp mov push sbb ret push sub push es (bad) enter mov jo subl stos xchg imul or test pop jge adc push add cwtl mov pop into add inc fcomip sub sub fildll roll jae (bad) mov sbb cmp cmp (bad) push pop or pop (bad) xor inc add push dec popa insb jb leave sahf stos push adcl mov mov push ja ret (bad) outsb jns ds (bad) xchg mov data16 mov cli adc outsl rcrl sti sbb and cmp or cs xchg pop xor jbe icebp daa mov out mov xor dec jns mov mov inc (bad) xlat push mov idivl push xor leave xor out lods shrb pop jbe push dec mull add test in cmpsb mov inc repnz jno sbb fs pusha mov rcl push daa test in sbb adc mov aaa out jl sbb jmp popa sahf xchg jae fistp repnz (bad) lods aam sub scas push cltd pop xor in push jg fiaddl ljmp ret xchg icebp inc pop test enter ret arpl je and pushf aam xchg cmp mov (bad) daa mov jl incl xchg xor (bad) jb out cli sbb jb inc add ss pop pushl or bound mov outsb loop sbb rcrl data16 lcall inc jecxz xchg js push pop adc push adc push cmc negl lret push enter (bad) jg stos test clc cld xchg stos or cmp stos in je cmpsl jo mov movsl inc mov sbb (bad) lea cmp fsts mov enter mov cmp ret into jo push outsb (bad) and xchg arpl dec les pop jnp ljmp stc xlat adc xchg inc pop xor (bad) out mov outsl xchg lcall and stos cmp adc mov aas out adc aas sbb sub dec add shrb jp add fisub sbb in jne ffree cmp fwait ljmp lods add push aaa jno add sahf dec add enter je cmp fldt out enter cmp jae pusha add adc std cmp cld sub mov and push decl lahf or mov stos add leave imul lret les xor sbb mov adc les notl lahf jecxz mov or pushf mov popf gs enter cltd lret dec pop mov push pop xor (bad) mov popa mov (bad) ljmp add lock nop or mov rcll int3 mov (bad) (bad) (bad) idivb ds mov ficomp in call (bad) mov adc es arpl lret sbb inc cmp (bad) xor push xor repnz or dec pusha ja or mov pop push jp cmp cs jmp (bad) and jae sbb bound xor addl stos mov stos test fdivp (bad) iret cmp (bad) add mov mov xor pop orl je jnp into mov movsl iret (bad) notl sub into lods sub pushf out repnz (bad) repnz call (bad) ds movsl leave and cmpsb adc sbb inc int jbe out jbe xchg cmpsb out or cltd aad les out (bad) notb divl icebp out (bad) dec fs adc lods xchg fsubr shlb mov pop dec mov jnp jo xchg outsl nop pop insb or add or in pop cmc retw xor nop out xor test dec imul pop pop adc test cmpsl daa sub or or (bad) jg mov add adcb insb mov mov mov bound lds cmp mov cwtl add call out xchg daa pusha xor and push and inc ljmp outsl lcall sbb shlb nop fwait insb addl sub mov mov (bad) xor gs inc or mov dec xor sub dec cmp adc (bad) les ds icebp sahf or fucomp iret dec push mov cwtl mov bound insl je decb loop std das push inc out inc xchg out mov repz fnstcw ficompl iret jmp xchg fsub mov mov scas push enter insb cmp cld xchg adc and xor insb les addb jp stos xor sub shll cmp out hlt pshufw fdivrl jb sti hlt cmp push inc call test pop and es js sbbb mov mov jl imul pop mov movsb jecxz repz pusha xchg mov jl nop and ret cmc stc xchg push cmpsb mov aaa ret mov std mov push loop mov mov and push push pop lods inc iret into jae sbb inc cmpsb pop repnz mov inc push push jo scas push test icebp mov mov push sahf data16 rcl cld aas push pusha mov sarl out push inc sub addr16 add lea push icebp mov fwait and iret adc iret (bad) push cmp stc insl popa fidivl jge push (bad) cmc dec adc mov enter mov push mov outsb or jns add test es bound add icebp enter imul or fpatan adc in cmp inc jmp cli (bad) mov jge fistl mov cmpsl pusha stos outsl inc push add js push lea push and cmc daa ljmp clc popl mov mov data16 push cli add xchg adc stos pop das jecxz fcompl and daa mov mov pusha rorl out and aaa jmp xchg das mov push dec fxch sbb lods int3 lods movsb (bad) sbb movsb cmp int mov std cmp js push in negl xchg sub mov fmuls test fisttpll sub push scas dec xchg (bad) repz pop jb ret push sbb push cmp add dec push sub and mov lret push stos dec or mov lcall mov dec adc jg mov xchg lcall xchg sub mov fbstp sub pop roll push aad lret scas data16 push dec outsb cmpb and lret inc fidiv (bad) cmp xchg mov dec sbbl pop cmp sub fmull lock in mov out out enter hlt jbe fwait mov and sbb sub or js test hlt xchg in stos xchg dec inc push dec nop repz jg jl,pn arpl pop sbb pop add sbb (bad) je pop imul jb jp popa push test cmovo aam (bad) or outsb xor movsb into push mov dec push dec cmp aad mov pop cmp jmp in (bad) xlat and xchg leave pop cmc mov dec lods cmp (bad) and ja ss xor or mov fisubr insb pop sbbl negb jmp repnz popa push or xor pop cmp add lods cmp dec pop in xchg ret jecxz mov dec or bound icebp mov dec mov (bad) aaa sbb mov out jb mov dec push fiadd das and mov add out test inc mov clc or in pusha jg cmpsb dec mov push inc mov mov popa push mov jo scas xchg shrb pop (bad) adc xor jnp or sbb xchg sub mov mov (bad) mov fwait mov imul mov sbb xchg jnp movsb xor es and shrl mov mov sbb or (bad) out or mov add xlat mov and stc push lahf inc dec (bad) xor lret out xchg ret dec leave and cmp cmp out jg and push arpl ret xor pop jne fstps inc xor push pop jmp adc mov mov jo ds loop sub mov mov das xchg cmp iret push and or out push insl pop pop inc arpl jle (bad) mov out pushf pop pusha out lahf cs xor pop fdiv leave cli or jge adc lcall dec xor rorb outsb ja sbb rclb lret fisubl mov lods adc test cmpsb mov jno popa pushf loope cmc lcall dec mov iret xor imul ja xor dec icebp movsb jno push fistpll outsb into (bad) xchg int3 sarl cltd cmp in fwait mov push imull dec mov mov push cli inc or cld int3 xlat xor (bad) xor je fs repz out lods in movsl add imul les (bad) je lea cmp sti rorb jo mov or xor inc pop sub add enter inc jge and loope xchg cmp push dec mov out add pop arpl aas mov test push xor inc jmp xchg or das push add sbb js inc ss rolb or and outsb add sbb xor cs (bad) ss mov lret and out stos sub arpl cmp jno mov loopw inc std push xlat popf stos and insb test (bad) loope xor jnp mov mov pop jmp shrb mov outsb push (bad) neg shl pusha loop sbb pop xchg inc jg or dec cmpl loope,pn pop (bad) push adc pop mov cmp sbb pop xchg ret xor fsubl push push lods dec lcall sti fdivs fwait mov mov push dec orl inc or (bad) fiadd sub sar scas test repnz or pop mov aam ret xor jno loop sub adc pop pop aas addl push push lret call sub stos add cwtl mov mov (bad) les xor repnz xchg gs fsubs jle sub jecxz nop mov repz (bad) mov jge lcall adc sub frstor xchg xchg ficompl and sub dec scas into stos push ret out in test mov in push cltd sub mov and cmp dec imul fwait mov icebp mov call push jno mov jge xchg rorb std lods scas sbb push pop push jl inc cmp mov and clc popf (bad) push mov mov fsubrs push mov gs inc call mov leave jno stos sbb add cmp cmp test outsb add in add jo ret cs jns dec push add imul rolb subl dec (bad) xchg push dec int3 adc les push pop iret inc loop cltd insl and push sub cmc jbe or test scas aam pop (bad) fildl (bad) fcmovb xorb mov incb mov shrl ja orb xchg dec pop pop xor fwait sbb cmp xchg dec pop das jge sub hlt div xlat dec xor mull dec mov mov mov and dec jne add lcall outsl mov pop jge lret repz dec inc stos adc ljmp mov add cli (bad) je andl imul shll int mov iret mov popf cmpsl gs sub test scas or mov shr add pop and ja inc mov inc xor mov jle cmp aad lock mov push inc cltd icebp rorb xchg out aad cmp arpl cmpsl aas dec int3 mov mov dec add pop inc add and arpl xchg mov hlt mov inc loopne je jl inc dec jg sbb sbb clc js divl or shll hlt adc repz lods sti jp cs mov sbb and cmp lods push (bad) repz xor mov les negb mov (bad) out or in push jnp mov add nop test insl test mov mov movl cmp mov and mov xchg mov ss mov loopne mov add jg clc addr16 mov movsb jbe xchg movsl int scas bound cmp in xchg aam jo xchg mov push inc adc cli adc xor pop mov add cmp sub pop xlat ljmp rcrl jecxz bound pushf (bad) jne les stos cltd cmpsb loop repz hlt pop idivb add mov lret sbb add sbb cwtl pop xorl subl push xchg stc insl sbb adc test mov in hlt adc xlat lcall cld pop jle,pn inc pop add xlat fldenv popf jge pop lret sub mov sbb imul jb fcomi add hlt pop push imul mov sub pop jp test out insb jge aam xchg (bad) mov arpl cli dec sbb test mov dec out cmp xchg mov or in jnp xor and pop mov aaa xchg dec xchg mov sbb pop fwait aas ret adc mov jp inc iret or jo xorl fisubr (bad) mov pop or mov pop mov cmp in jae adc jecxz add mov inc loope jnp iret xor add sti mov movsb jge mov stc jb or mov imul push xchg (bad) jbe mov or or jb xchg mov mov xor (bad) pop mov ljmp (bad) sub sub sarl pop test inc xchg mov jg into xchg jbe xor int sub adc sub jae lahf or lods mov inc movsl out rolb pop mov add mov lcall adc cmp mov sbb mov mov (bad) aad or into ss jb sbb fnstcw pop mov ret cmp insl mov fnsave std add fnstcw ljmp push test popa jle jl mov push lea cmpl push arpl jbe imul add faddp push push mov mov jae lock inc repnz pop push dec pop insb inc push sub dec in das jno call (bad) dec xor (bad) (bad) mov repnz push push std aas pop out sbb pop add (bad) fildl mov ljmp pop scas imul ds ss test mov and push jno inc push inc lret push ds pop push stc pop sbb adc fldenv (bad) repnz popl adc in push ss or or pop mov shrl pop dec pop ja pop or cmp pop pop or xchg aas jb mov nop jnp frstor addr16 leave add jae dec das out pop std jle adc pop push inc out call lahf xchg leave cmp sti in add mov (bad) (bad) cli or clc lret stos rcl or xor testb or xchg add mov in adc roll mov (bad) mov aaa pop (bad) mov popf hlt add xchg pop lea sbb je pop cmp or repnz xlat dec mov sbb out in sbb mov mov lret enter int3 (bad) push sbbl pop adc mov pop or sub adc repz mov pop cld cmpsb pop push mov out sub dec sub or insb divb clc je dec loopne mov pusha fisubl bound fs pushf leave push xlat popf xor fs (bad) aad cmp push push mov aam int mov or pop jp add mov call ja push fistpl xchg fmul test xor xchg ljmp adc loopne or (bad) stc icebp rorb loope aad inc jl,pn fstpt es repz (bad) sub cld adc divb add sahf adc xor inc orl sbb insb clc or movsw int3 mov (bad) push clc rolb stos test push inc ljmp cmpsb lcall xor scas cmpsb xor (bad) das xlat jbe fs xchg mov pop cmc enter (bad) mov add jb hlt mov (bad) lret mov lahf js sbb cmp call fist andl subb mov pop sbb jmp nop adc cmc loop or adc ret push leave xchg lret cmp lods adc outsl pop repnz insb (bad) test or mov jae sbb add iret test jo test outsl xor lcall (bad) lcall sahf daa mov mov mov mov cmpsb cmp (bad) lret sti jle imul inc and insl lret in cmp jl mov push (bad) js jno fsts mov int cmp dec xchg push adc push dec fisubr push sbb push clc fwait sbb adc fs scas and sbb inc dec popf add adc push aad addr16 lcall lods mov rolb xchg repnz add fisubrl nop and jne out xor cmpsl or adc and mov add leave xchg aas xor sbb xchg mov ljmp pop mov rorl mov out (bad) call jb push pop push sti sbb inc cmc insb enter insl outsl stc arpl push adc mov and (bad) xchg mov xor jo outsb adcb add inc clc mov dec (bad) push fdivr mov xor push push inc imul sub or sahf out push push arpl pusha addr16 js pushf or inc push lock xchg fmuls xchg fcoms je js imul out and dec or adc jbe jl dec inc fiaddl fldl int3 dec push cmp ljmp cmpsb sbb push rcrl mov stc mov mov jns dec mov fmulp add add movsb and add cmpsl outsb jns xchg cld pop cltd jb adc jno adc cwtl add jo xor dec imul addr16 daa cld add and add lods jp push icebp gs loope pop lret mov cs cmpsl test mov leave push fwait jecxz cmp out or dec jns,pn or jae push or push sub pop xchg dec mov rol sub cmp test insb mov jecxz nop jbe,pt sub mov mov add xchg jl push ljmp and aam dec cmpsl lret in push add mov cmpsb mov cwtl and test gs subb sahf and inc repnz jecxz sbb push pop and pop ror xchg adc enter jmp or mov push inc inc leave sub aaa cmpsb pop (bad) in imul sub and aam aas in jle xor sbb lea add lds mov subl cmpsl aas scas movsb push pushl dec sub shrl push xlat jge fcmove mov inc mov std pop inc jecxz mov imul mov sub jb inc dec ljmp test lcall insb or rcll push ja scas sbb (bad) mov es movsb add insl lock sti inc sbb mov faddl pop mov push sbb add ja insb das add xor or mull fdivrs jmp stos scas scas lods sti xor lea jo mov xchg dec lea sub sbb js test lods mov hlt mov xchg sti fcmovbe nop movsl and sti cmp call frstor mov xchg jb inc lods movsl test insl cmpsb aad stos and cmc repnz test stc fcmovne rcrl cmp daa (bad) lods push mov inc (bad) mov insl jmp loopne sbb sub xor lds fwait mov inc in adc cmp lock mov inc ljmp int3 mov push shrb ss sub mov bound nop aaa cmp shl sahf (bad) jbe loope sti xchg mov scas sbb das in mov cmp inc ds add outsb out dec rcll fs cmp movsb adc shrl inc xor daa pop xor xor test cwtl movsl fs idivb cmp pop mov cmp outsl int3 (bad) or (bad) fiaddl jp mov testb scas div jecxz lret pop or stos std pop (bad) xor cmp cmc sbbb lods arpl or out mov sub sbb mov fcoml nop das fwait mov push xor loop pop (bad) icebp or scas js stos mov bound push in xor enter adc pusha fcmove and fadds je call fstps sub dec std clc daa or inc test xor test outsb shl (bad) xchg inc movsl cmpsl jae jns imul fnsave test sti inc jge dec cmp fs pop push pop jns push into sarb imul sahf sti inc das stc mov pop addl fisubl cmp jle icebp inc out sti xor loopne cmpsl mov clc repz stos jne cmp cmp sbb mov mov dec stc sub adc bnd jbe add lret in fwait jno and fildll ljmp cmp xchg push sub sub fildl scas mov and cli lods push adc aas inc std scas pop or xchg xchg mov clc and push mov outsb mov out xchg pop leave (bad) and (bad) xor pop xor ret jp imul lret add xchg pushf insl cld shrb adc and cmp fisub mov lods push lea idiv fdivrl push pop jecxz jl push (bad) imulb push mov add stos sbb icebp (bad) cld fldt add mov xchg (bad) xor aas nop adc test xchg aam push js xor out adc pop fsubl jge xchg mov lods mov add inc jb or lret int3 lcall mov arpl sbb jge les xchg dec sub sbb mov mov enter inc rcr popf mov es in sbb and int3 sbb cmp add daa jmp xchg loopne cmp push bound cmp nop aad pop int scas pop fnstcw mov repz jecxz sbb jae xor stos cmp pop aaa incb sahf mov lds pop fmul leave mov push inc pop pop fabs sbb adc sub leave xor mov fbld (bad) jmp ljmp (bad) test adc dec out dec adc leave sti mov aas xchg es inc std imul adc xor jo push shufps jbe (bad) cld sub fbld inc cmp adc (bad) cmp aas dec adc adc xchg mov sbbl sti in cld push test mov inc and roll mov adcl rorb push xor scas out data16 inc enter clc mov (bad) clc ds pop cwtl mov push ret add push sub add sbb push pop mov nop cmp xor mov inc pop mov cmp ret xchg test ss xchg test or std sub sub mov add fwait adc sub adcl rcl mov aad je std and (bad) and mov mov xchg xchg call addr16 hlt out cld in or les jecxz test popf inc fisub inc xchg xchg mov pop xchg imul bnd dec jle cmpsl loop inc add jl cmp xlat fidiv pop or loopne jns sub jmp lods (bad) stc scas jae push ljmp pop mov orl add cmp dec cwtl add pop push xchg cmp fwait pop dec out add and imul and add outsb cmp add add mov inc jo xlat in lcall mov mov jno fldl add mov mov adc sub jmp add bound loop,pt push icebp in and test sub les (bad) fcmovnbe testb sahf fadds push fdivr ror dec and ret and xor lret xor cmc movsl jge shrl dec sub (bad) mov clc mov out dec push cmp fstpl cmpsb rcrl dec lock stos fcmovb pop popf fwait lds (bad) sub sub xchg cmpsl and xchg dec push jg sub push xchg notb cli rolb cmp gs bound jbe add aad jecxz sti test test insb adc pop outsl lods or out add out (bad) (bad) (bad) sub pop pop (bad) mov scas xchg mov es sbb idivb jb push rcrb data16 xor xlat daa ficom mov push pop sbb mov jp push cmp cmpb xor push outsb adc mov jecxz adc sahf sub mov xor mov xor and clc enter sarl aas jmp push sbb push sub jns int3 sahf aaa mov lods bound leave pop xchg push imul lret mov lds and das in in imul scas mov pop jo adc add addr16 rcr in imul icebp cld xchg pop xchg das dec jg clc jg adc imul lods mov xchg add add jp xor lods das pushf ret (bad) pop in pop jl movsl imul std xor pop push dec (bad) je loope mov repz rcrl xchg adcl fadds adc pop push push and add or or dec push out paddw subl mov xor mov push inc dec clc (bad) jb xor lret sbb xchg and addr16 nop das call movsb rep xchg mov push das sub cmpl outsb mov shrl rcrb dec sbbl push bound testl es addb ja inc out inc xchg pusha (bad) jno imul inc mov shrb pop decb loope inc inc lahf imul fldenv repnz sub dec repnz lea mov inc mov ss lahf and fwait mov xchg fcom andl (bad) cmpsl movsl lods leave and cmp ss xor mull cli pop xor jne test inc mov (bad) mov ficomp mov leave pop push and sbb sti adc std negl mov std int3 repz imul in pop rcrb mov mov sbb std loope jno push jbe mov mov xchg out mov xchg xchg lret gs sarl andb int sub test xchg lcall fidiv adc imul daa or mov shl cmp cmp cwtl add es stos fcomps stos cli mov pop rcrl out sub lcall mov mov push mov icebp adc lahf aam shrb pop les movsb lret imul pop sub cmp or popf jno (bad) into cs divb cmp sub (bad) ljmp loopne jecxz subl bnd adc in sahf inc xchg pop add das or fnstenv shl sbb xlat and dec vhaddps (bad) push sub pop mov dec mov or stc lahf cmp dec mov in mov dec outsl lds push dec out mov xchg adc dec or pop stos enter jge cmpsl divb pop in sar push sub sbb pop rorl dec mov sub pop adc cwtl sahf pop and aaa (bad) mov pushf les push dec xchg out lahf outsb sbb xor dec aad sub jb mov mov les (bad) es fnstcw and xor and gs in xchg lea add add mov fwait push sbb jecxz notb pop call sbb add bound cs mov lods in add push cmp push (bad) shr fwait pop jae incb jbe and mov push adc sbb add ss ret ret adc jl or fcoml xchg cmp and loop icebp scas fcoms ror mov ja sti mov in mov test mov pop xor gs hlt das imul and cld mov inc add mov push scas or cld jne and aad test scas mov adc dec lret jne dec cmp add out int3 push enter inc jns pusha fldl sub loope jae pop divb scas pop inc popa mov dec sub je or fwait scas jns mov and inc shll xor and lcall (bad) mov aam jge cmp add and xor mov sub aad mov dec cwtl pop cwtl test cmp push test xchg xor into outsb inc add insl into pop lcall mov scas cmp lret and mov sbb xlat and inc sbb mov and mov ljmp mov pusha scas jecxz out fcomps aam mov mov xor xchg sub xchg addr16 lods fidivr push mov out mov enter insl scas fdivrs ret xchg jb inc xchg or test or cli mov out test inc stos push out pushf mov (bad) sbb idivb xor (bad) testb push mov pop cmp mov dec je and and jo xchg mov jecxz sub adc stos mov (bad) adc mov pop dec pop mov cmc int dec jge imul inc sbb xor popf lret int daa int jecxz xor adc (bad) notl (bad) clc orl rcl add xchg mov jp xchg addr16 lahf aad jmp xchg and ret mov mov mov jne incl nop (bad) cmp inc pop xchg lcall aas xchg aad std jge insl sub mov push or (bad) jmp pop mov insl add (bad) idivl ja test scas into out push rcrb mov leave xlat cld add dec mov jmp ja push lcall mov scas jne fldcw push add loope outsl xchg cmpsb jmp test inc and test xchg pop icebp adcb test cmp sub sbb (bad) test sbb rorl das or mov push cmp xor stc push push mov cmp mov mov adc jmp mov sbb stc push arpl fstl pop (bad) and repz leave test pop call mov cmpsl push stos ret lret push pop mov xchg mov outsb mov mov stos mov iret push fcomp aad movl push insl sub into insb mov pop mov lahf xchg test pop movb into push push pop adcl mov pop or inc rcrb outsl jp xor pop sub stos push mov addr16 cmp jnp push xchg lea or fisttpl sbb dec icebp fiadd or jge out lret cld scas push xlat or add iret mov or popf adc scas leave pushf mov jnp xchg xchg and push or stos ret jb xchg xor pop dec sbb out xchg roll nop iret pusha popa pop das pop in lods pop in lds ljmp fisttpl and (bad) arpl sub jbe or nop cs and pop in mov add (bad) sbb pop push sbb sbb cmp fdivs mov lods btr (bad) xor sub mov in jns jle mov or xchg dec cmp adc clc in sub test pop mov in mov jl cld and or pop int3 and push mov out mov (bad) cmp push (bad) mov insb inc mov pop out cmp or sahf out sti in mov inc xchg jo mov inc lods mov mov xchg dec jno add lods cmpsl lods cld push pop jb jnp and nop lock aaa fwait xchg xchg lds (bad) pop stos adc nop inc and or popw imul popa in repnz add push cmp jo mov outsb nop movsb dec insb (bad) inc xor mov jnp movsl cli std jp repz mov fwait mov jmp xorl adc mov fs adc inc rcl js mov es or or mov andb mov fdivs fwait push (bad) sbb pop push xor dec (bad) gs inc jp mov int3 lea mov fs add icebp adc aas dec inc (bad) jl addr16 sar push (bad) and dec mov ficompl push sarl rclb les imul mov (bad) and mov in pop aam jne xchg ljmp inc dec cmp mov cs js aaa pushf in pop shl adc cli mov sahf sub push sbb mov aam push inc and mov mov pop cltd inc insb pop gs cwtl lds sti loop add (bad) xor dec cltd mov push pop cs xor fmuls push mov insb (bad) dec pop loope mov loope std push imul mov imul test lea cmp mov ss scas inc bound mov and inc (bad) sbb push sbb andb mov and data16 cmp jo and jb xchg sbb rcrb mov push cmp sbb mov xchg mov pop out stc inc iret loopne cs bound inc jge xor imul xorl push dec daa jg fmuls iret push cmovae pop and fmul rolb insb sahf mov cmpsl inc ficom std fs fs mov add adc pushf dec movsl mov das add ja shrl pop xor inc jae xchg aam movsl dec dec sti arpl mov nop cmp cmc (bad) lods sub xor pop ja xor cmp lock xchg xorl inc test scas fnop mov repnz mov lcall enter push dec xchg sbb mov leave dec (bad) cmp je sub movsl lods xchg lret sbb sbbl hlt mov fidivr push and inc cmp xlat imul push xor xor hlt sahf mov pop stos pop call movups in gs xchg test mov or mov lret (bad) mov adc pop shr inc adc jne mov push aas loop sub jp rorb aas ljmp cmp inc add or pop jl icebp sbb and mov aas mov and cltd icebp pop dec cmp insl mov pop or push dec cmp cs sub js movsl add push cwtl stc pop jo out mov pop push rclb or sbbl test jbe lret jo push sbb inc and addr16 dec mov fimull les stos jl imul cmp iret arpl sbb mov cmpsb xor out xor mov xchg loopne push mov (bad) aaa inc mov mov xchg xor pop imul ja (bad) xchg sbb out fxch scas rorb jmp jbe aaa ret nop pop push xchg and and mov ljmp mov push call add pop xchg test adc lods push pextrw inc rol lret popa cltd dec std daa repnz jae and lret cmpl sub cmp outsb movsl inc outsl lds mov inc arpl dec insb cmp lds dec jns in xor and sbb add adc pop pop xor mov push gs pushf inc ds int3 mov mov xor push repz stc jo ja or aam es in push adcb sti lret nop xorl fiadd jns mulb mov pop mov (bad) aam enter mov les clc je pusha aas add mov dec dec rcrb and mov out inc sub sbb sub jecxz test outsb dec cmpsl shll js mov push pop in (bad) int cs (bad) cltd std push jnp cltd dec loopne test pop lahf dec fildl mov movsb xchg sub jae fistpll aaa add sub xor mov movsb adc aaa (bad) jmp jle sbb pop shll out add jno cmp push adcl dec (bad) sub scas xchg nop es in jmp dec xchg cmp add std jp mov outsb sar pop lcall in jge std bound andb shrb cmpsb sti cmc and outsl lea rcll lods inc sub mov inc movl scas xchg cmpsb mov mov stos adc mov add je pop sbb (bad) ja loop adc push xor jns cmp iret (bad) mov bound imul mov lods ffree repnz xor push or into mov push adc adc xorl js xchg xor push and jne dec popf bound xchg xor xchg call lret jl (bad) cmp dec (bad) int3 dec pop push mov addr16 or and movsl cmp jo je jge push mov divb push adcl flds cmpsb fbstp dec lods cltd insb cltd mov or fstps mov adc fxch test aam push dec loop adc mov inc sar das xchg or mov fs cmp out fsubs int mov mov mov mov ret ret popf cmp loopne sbb or inc xlat mov shrb cmpsl push mov icebp mov or jae sbb dec jg repnz sub mov sbb xor es xor les ljmp stos jmp cmp std add mov out scas icebp xcrypt-cfb cmpsl fs push jmp decl jle and dec adcl std add dec lock insl lahf inc pop clc mov cmp mov neg mov fild (bad) push ljmp dec fldenv cmp (bad) lea mov pop push push addr16 gs into je lods mov iret add fcoml push lret cwtl sbb or rcrl pop xorl sbb aam cmp rolb sbbl in adc inc sbb adc inc mov cmp popf and jmp inc fldcw into pop mov fmuls adc pop push dec fwait sbb stos ljmp mov inc push or insb push jge leave out adc das jne pop js call movsb mov adcb pop iret mov add inc and lock mov lahf loop dec jmp xchg jmp pop pop test test jecxz (bad) jne adc pop loopne jnp movsb xor test addr16 leave and cmp push cmc xchg sub sbb frstor cwtl sub mov ljmp xchg aas (bad) cmc sub (bad) jno daa fcmovnbe xchg xlat pop andl fidiv jp arpl adc mov (bad) add imul movsl and aaa dec add pop (bad) add or mov or add inc add fildl adc in inc dec in xchg sbb xchg (bad) int3 and outsl add pop mov into xchg push scas and outsb in mov jg lods push sbb repnz fdivs sbb je xchg test add fisubr mov mov xlat (bad) sub push pop and pop fdivs test call aas (bad) inc lcall int imull mov jae fbstp jae cmp push sub repnz mov lods mov lea call fucom adc test xchg lret int3 jecxz push sti adc mov (bad) jbe (bad) pop pop pop jno mov cmp mov dec mul call lea gs sbb cmp mov lret dec js movsl and iret jnp sub cmp xor add xor sbb mov sub call sub sub sbb inc ficompl pushl loope sub sti scas arpl xor add dec push cld pop xor imul enter insb jnp add sbb cltd out push test inc in iret ja mov push add dec pusha dec clc xchg sbbb inc push imul sub nop test mov adc rorl repz xor in mov fildll stc dec or cli cwtl and in inc jae ds push push xchg addr16 hlt imul lods sub cltd lods int insl or stc and incb loopne mov dec cmpsl out or out xchg and out out sub mov lods cli lcall fisubrl movsb in je inc (bad) gs (bad) repz push and es xorl arpl (bad) fidivr or (bad) pop mov xchg fldcw mov xchg (bad) popl (bad) cmpsb out stos jae mov (bad) jb gs addr16 inc imul mov pop aam jp push inc (bad) ficoml jno dec scas dec mov arpl jno mov sub call mov fucomi cmc push lret js add cwtl sarb adc and js mov pop sbb (bad) into sbb jg sbb push pop cmp ljmp cld sbb mov pop mov dec mov xchg pop sbbl pop std dec jns inc inc cmp inc lcall adc fs sahf sbb fiadd mov inc popf mov je mov loopne sti out (bad) (bad) (bad) mov cmc mov pop popf gs pushf pushf adc jae fistpl and jecxz,pn cmp mov imul jmp lahf cmp (bad) ror loop (bad) cmp jmp xchg or jmp cltd cld mov jp out push push inc imul loope (bad) or cwtd dec push testb xor add shll mov mov push inc jp sub das xor les popf dec pop (bad) in ss cmp dec or pop xchg or ds aaa aas inc in sub ds mov mov out add addr16 pop sarb test fildll fptan call mov cmc repz cmp mov imul dec mov ror and cld outsb add pop arpl pushf dec or dec aas loop adc int cld fldl das stos sub add push push xchg jg xlat shll nop (bad) rorl ja sub xor mov loop out jae aad cmc (bad) mov and je repz add es jmp mov mov or icebp push sub scas iret and cmp cltd push popa movsb cmp outsb add popa ljmp insb mov mov cmpsb and pop xlat inc (bad) cltd stc lock stc cmp or push jb push xchg leave push mov dec insb and mov lods stos repz adc mov andl xchg test mov imul mov mov xchg out jb jp xchg loopne pop xor add and ljmp stos leave (bad) cmp les pushf je inc pop (bad) jge dec mov insb enter cli les dec and adc push out push ljmp imul ret cmp cmp cli cli call mov shl popa gs ret sahf adc dec jnp imul sub ret pop mov pop decb test (bad) add dec fs aam test pop cltd or dec mov int3 push xor add int mov or cmpsb (bad) mov repnz mov int3 in push rcrl mov mov inc xchg jle adc inc pop sbb mov mov pop (bad) dec test leave es in cmpsb pop xor xchg dec push test and push cli mov pop or mov lret sbb cltd or fisub cmp jbe sub adc loopne mov (bad) js xor sahf leave inc xchg in add jecxz xchg push sbb lods mov sbb jae les sbb aam mov and pop sbb or mov xchg fsub mov add bound cmpl lods cmpsb (bad) arpl sbb dec sbb xor sub (bad) jb mov jae incl fld es jno pusha mov jns dec jge and in xor shrl adc aad pop lea lret (bad) jno push in add cmp adc sub dec es add enter jmp mov cmp add roll xchg xchg out xor sub jns add lods mov jg pusha push aas test outsl cld and xor cli push mov xor cmp mov adcl mov ss das or imul adc inc pop aam das pop mov mov mov jmp jp push ret dec mov lods rorl xorl rorl sbb jne jmp enter arpl xchg jae inc mov push jl outsb stos daa divb movsb push dec push dec cld cli lods fisttpl loopne sarb (bad) test push add rcr out mull cmp or sbb test push lea xor mov push popl js jp hlt mov jmp jecxz (bad) jmp mov mov cli sub lds adc (bad) (bad) dec notl mov cmp je mov pop in fsub and (bad) out pop into (bad) insb sahf out add testl xchg mov stos jnp pop dec sahf test imul jg fsub dec xchg lds in cmp cmp inc fisttpl (bad) jno lcall dec pushf aam repz loop inc aad shrb sub dec push ffreep jns mov sarb mov or pop lods repnz enter or movsb stos mov jmp xor mov sti push and mov gs xor and stc movsl add lds lret cli cmp inc cwtl scas sub gs (bad) mov dec cmp roll subb pop bswap inc mov cmp dec in shll test add cmc (bad) jno enter fldt mov scas rolb sbb mov aad cwtl std je mov les in mov rorb and sub add mov out push out ja xor inc ljmp cmp push scas dec repnz adc je daa repnz push and jl pop cmpsl test data16 insl pop cmp sbb sarl stc cli ficomp (bad) fistpl cmp or dec xchg xchg push jae rorb in cmp test push (bad) xor mov jae pop pop xchg fadd imul jecxz std cltd clc mov lods mov repz mov push push xlat xor (bad) adc jb adc jle pop inc inc jmp or (bad) sub out jb adc or jbe movsb jg adcb and jnp loopne cmpsl dec out cltd pop into jno and jnp (bad) adc popf pop int3 fwait push pop mov clc inc rorb pop xor arpl cwtl iret mov inc or xor sbb push daa xor xor jg sub or cmp cltd stos mov je sarl sti sbb sub movsl and out stc mov out ja mov outsb mov xchg pop in mov or cwtl mov push mov loop jae inc jecxz pop fsubrs mov xor mov mov ficom mov pop xchg adc push stc push jae ss push or xchg add push pop adc fs mov icebp push test mov ljmp and cmp inc popf lret jp rol movsl mov add xor jecxz or sub iret pop pusha outsl jmp xchg xchg test jbe outsl inc mov xor stc xchg mov iret inc jae movsl mov mov stos xchg mov sub popf out push fs mov popf pop mov add ja rcll pop stos lcall mov ret (bad) popa mov into jnp mov pop adc aaa (bad) jae add dec sahf adc shrl aad xchg inc cmp inc dec lcall push out inc stos mov xchg into sar push rol push cwtl std jns mov adc rorb repnz xlat sbb (bad) repz mov inc je sbb ja (bad) jle mov scas fstpt fmul sti imul dec mov xor fs sbb mov call inc mov (bad) cmc scas dec xchg adc mov movsb ret not dec (bad) push aas aad jmp sbb (bad) loop mov daa gs test adc xor std mov jl insl mov cmp (bad) lds nop jmp jg and cwtl fwait outsb push dec lods jge rcrl les push repz mov sub lea or xor ret lret xlat hlt mov sub cmpsb xchg (bad) cmp mov fwait ss (bad) test or in (bad) repnz and outsb cmc xchg jne xchg adc popa and fsubs sub movsb sahf and sbb or xchg and fadds icebp jns ja push popf inc adc adc xor movl xchg add xchg jbe add mov mov fucomi xor aaa int popa pusha pop xor hlt mov (bad) int jb lret cmpl sub (bad) xchg test lcall scas aas inc cld dec lcall push (bad) lods aas push mov pushf (bad) (bad) push dec fld jmp add mov sub jnp xor and loopne pop mov pop pop inc and inc mov movsl out xchg lock mov push cmp insl aaa sbb out ror sub jb sub sahf adc cld popf (bad) daa ss mov into stos loop hlt int3 (bad) lods daa mov movb sbb out pop push aaa adc lret and fldz rcrb sbb scas sub dec stos sbb jns test (bad) fistl aad les fst or les sub sbb add scas cmp cltd pop out je into mov lret popf jmp std repz mov or or mov inc inc sub push es cmpsb pop (bad) push fadds sti cmp xor jg rcll sub jns sti into pop aas dec pop jne insb scas les ljmp fdivl insl inc pop aam jle push mov push aaa adc or cmp pushf mov mov stos sub mov push ret pop cltd orb (bad) add ljmp sbbb sub push mov add push cmpsl clc pop lods fwait mov cmp stc fadd lock pop fisub jnp sub adc fwait aaa pop cmp test ret inc outsl hlt icebp orl dec in scas lea dec push push adc inc popa cli add imul mov or or es jg inc ret mov xchg fisubrl cltd mov mov mov push int3 lock push add in xchg addb into test pop jge pop mov mov test test enter aas sbb xor pop (bad) sti aaa (bad) repnz mov int add jns scas pop mov aam xlat jae out push add or cmp in cmp loope jae mov sbb push nop push add dec dec loop clc out mov jo xlat mov fsubrs xor dec (bad) jb stos mov out dec adc loop push sbb test dec cmp and out mov push inc sbb lds in xchg mov lods adc in inc mov pusha jne jo pop xchg fsubrl (bad) shrl sub loopne fucomip xor or ja or stc mov gs bound inc loope or dec cmp jp push jmp repnz pop jmp and jp mov test adc jbe mov xor mov imul pop test jge cwtl imul loop popf inc icebp stc adc sub mov sahf jb pop lret inc scas (bad) fldcw popl outsb (bad) icebp pop fisttpll xchg roll addl pop and mov cmp add bound and jmp add jae (bad) hlt jge dec mov je cmp and sbb in aam pop scas jne repz pop xor cmpsl mov push xchg dec push cmc lret test push movsb sub fnstcw pop movsb or or rcl fbld mov imul xchg (bad) pop push and icebp mov popa push test sub push stc adc clc xchg cmp call jno and sub mov pop faddl inc push ret aad shll cmp lahf push (bad) mov jnp mov push movsb jbe lea mov scas cli jae jae and addr16 enter mov dec dec rclb inc stos pop xor jo out jb push test stc int3 ds sbb cli je push dec and xchg mov scas dec mov mov test std and data16 stc mov mov test arpl inc xor inc pop std push and loop jae rcl adc mov pop mov xchg jp xor sub imul cmp sti pusha xchg inc popa sbb pop ds movsb push inc adc mov dec mov and xor inc jmp adc in sarb xchg movsl inc xor sbb lea sub mov and daa add jnp sarb pop popf bound imul xchg dec mov xchg sbb in rcrb icebp sub push push cmp cltd bound add jg lds out adc out cmp fdivr xor pushf or mov sub lahf test leave pop aad (bad) call inc ret xchg imull movsl mov cmpsl stc jg push mov pop sbb mov stos scas enter sti cmpsl xchg xchg jge dec daa pop mov or or cmp jns or outsb outsb test dec sbb xlat ljmp mov sbb jg push xor loop popf push inc cmc ds mov gs jb std decl xchg repnz es jne add aad sbb xchg ja adc scas out pop mov test push js cmpl sarb and lret hlt inc iret push cmp loope mov fs ss ret sub cmp pop push lret daa hlt stc sub push add iret int inc bound sar daa push std mov adc xor cmp lret loop je repnz dec xchg cmc (bad) sub repnz mov adc fwait cs repz or xchg or sbb dec jle cs ja push and cltd jecxz repz lea or shlb clc out iret cs insl sbb mov pop outsb sahf in and pop jecxz stc dec scas shrl xor jne and mov js (bad) shrl test divl and inc je shrb mov mov pop rcrb jle in add shlb jnp push push mov cmc testl jbe in dec aaa ror fisttpl lds adc stos mov dec movsb cmp sub das xchg cmp je push mov mov and sbb mov mov into call pop xor jle out scas xchg nop jecxz mov mov mov fldl test mov (bad) orl mov cmp sbb sbb add fucomp jmp sub xor fnstcw or sub sub xchg add das add fistpll cmp mov pusha jecxz outsb sbb push in add aaa xlat inc pop mov lret push jl inc cltd cmp xor (bad) mov jns sbb das scas ss sub call in dec (bad) lret ror mov dec dec in push push sub pop imul dec sti add gs sub arpl (bad) sti rcr mov fs subb test lcall insl decl fld aaa lods cmpsb mov sub mov xchg ret pop sub jmp sub mov popf rclb pop lret fdivrl jbe roll push mov ljmp int mov inc cmp lds push sbb rorl xchg add stc mov fsubr fisubl rcrl mov scas sub loopne dec adc (bad) imul push xor push arpl ret imull cmp jg bound leave mov rol sbb mull add ret xor mov dec aas xor pop jmp mov out daa push cltd jne sbb stc pop (bad) test fs bnd jle sub dec roll sbb mov cmp push jecxz in mov aaa imul adc lret stc or loopne pop ss add aad dec ss loop fwait push push je mov xchg push gs dec in push xor inc icebp enter inc (bad) ja mov push sti inc mov push (bad) out sbb inc dec dec test inc add push mov and push pop les enter sub pop cmp cld jno paddusw mov cltd pushl insb fstpt push fsubs and mov dec ret in test jmp push mov mov xchg dec or (bad) dec incb (bad) xor jp (bad) fnop adc cltd nop jns cmp pop xlat and imul sbb out or movb mov cmp sarb aas inc sub loope iret and iret (bad) xor out xchg sti adc (bad) leave jb jne aaa notl shlb out sub sub jnp mov retw div and sbb sub in ret inc jb fwait (bad) dec push sahf pop rolb mov cwtl jg mov lock sub push hlt jnp xor pop mov mov jne (bad) jns cmp lcall push push test dec pop mov es jmp mov xchg dec pop stos lock add sbb int3 mov xor dec add fwait sub insl mov outsl test push jb mov lret ljmp mov pushf call sbb aas mov insb aad nop repnz frstor add mov loop sub dec mov add pop scas add imul inc (bad) nop pop rorl sub and data16 aaa jmp adc mov daa push mov lea jae xor cmp popf inc mov inc shlb rolb addr16 jecxz out lods or adc xor imul sub out cwtl movsb imul out mov push or aad xchg sbb xchg movsl inc loop insl push inc (bad) push pushl bound ja hlt lods scas inc inc inc adc mov nop dec push sub insl mov push outsb shll cmpsb push push inc jl or and out stos cld jbe sub or (bad) dec jge mov clc pop inc les sbb add rcl daa test adc subl aam adc pop hlt outsl into test xor std pop jl inc dec or mov dec jg movsl dec mov pop jbe and and rol (bad) psubsw push mov adc mov and mov imul mov lds sti shr mov mov dec clc daa addr16 fcompl ja xchg cltd xchg jae int3 outsl clc (bad) loopne mov cli (bad) repnz rorl xor push sarl (bad) mov out cmp imul mov mov dec aad movsl xchg inc lock jmp movsl jmp push or addr16 daa arpl mov xchg jg mov cwtl pushf (bad) in xor pushf sbb insl dec sub jnp out push mov jo (bad) int3 adc pop adc ret cmp lock xchg cmp dec jns adc mov jae jge (bad) adc rclb outsw cltd das mov aas (bad) lods cmp or pop rorb out stc aaa cmpl dec lcall (bad) xchg leave jbe data16 sbb popa mov inc pop fcompl lods dec push jmp or mov icebp lret in shlb xchg pop or scas adc pop push (bad) push jle xor push xchg lahf sbb jecxz arpl xor push xchg jg fimul ret push mov ret test ljmp lret out nop repz jge notb fs rol sub or push test inc mov (bad) cmp push mov sbb insl imul in cmp xor push scas mov stos mov add and mov je aad sub stc mov push imul cmp imul subb sub insb fidivl aad les inc cmpsl cmp (bad) ds cs sbb mov add aaa sub pop (bad) mov (bad) scas pop pop or push rolb fcoml sbbl test xchg fdivp adc scas stos sbb out leave inc mov xlat fidiv aas sbb or jae hlt icebp xlat xchg pop push or jecxz push xorl inc cmp test push push jmp or mov stc (bad) fildl add push imul jo,pn cmpsb and gs ss lret insb sub xor adc fnstsw xchg push mov xor mov pushf ds jno cmp fs sub ss pop inc jmp sbb loop jmp cli rcll push rcrl mov push jge stc fcomps lods push mov sbb es dec and int3 mov lea fwait push test imul ret fistl test sub or in fs and push or rclb pop dec lcall adc out push and add repnz add xchg jecxz daa jmp cmp jne adc popl hlt xchg test sub mov subl insb xchg jb repnz and pop jge jecxz dec mov repz cmpsb sbb lret fwait xchg inc ss arpl es repnz jmp lds mov out jge es out jnp mov outsb dec pop cmpb xchg lcall xchg inc pop (bad) jmp jle cmp pop mov jno addl loope push and jno std sbb push out inc jne imull pop xchg rorb cmpsl inc adc inc and pushf mov sahf jns nop jae push xor out mov or inc adc popa jle addb xor sti (bad) sub dec dec fnstsw pop cmp and lea lahf add cmpsb mov push loop lcall loopne jg inc mov das cli sbb fisttpl fwait rol je jbe (bad) mov or les ret ljmp jge fnsave stos jle push imul (bad) fstpl les push push mov xor jmp or mov lea andl popa enter mov pop leave popf lret xor pop pushf and cmp lods dec adc or push pop mov xor jp lods fbstp or insl add aas add push sbb lods fistp xor xchg (bad) xor adc loopne popa inc ss lcall lds fs shrl cmc jb stos xor adc test xor hlt aam xchg jmp sbb mov cmp lods fiadd lret and sub xor or and shl and xchg adc mov jb hlt xor push xchg pop push pop add mov jle (bad) xchg sbb xchg mov or cld inc icebp ficom or pop fisttpl test data16 popa lret fnop test std jmp fidivr icebp jmp jmp outsl add out cmp xor mov hlt dec cmc pop sbb into push aam hlt mov clc in inc lds ljmp push outsb mov xchg adc mov pop adc inc not repz sub in mov leave cmpsl iret lea lahf inc cs push adc mov arpl notb leave cmp fimul push shrl (bad) jmp cli mov xor (bad) jo fisubrl js xchg cmc (bad) fabs es js xchg push cmp mov adc das push roll in push add (bad) comiss lds (bad) cwtl mov mov outsb pop out mov lds in push jo push dec mov les xlat xor dec leave fnstcw adc xchg negl sub fcompl mov xchg jno dec sub scas push cmpsl dec jl sub data16 add mov and das pop jnp loope test stc or mov sbb scas leave movsb and aam add rclb inc inc jp adcb jnp and pop dec (bad) xor mov loopne movsl cwtl gs push outsb xor cmc adc and mov or out out ffreep cltd push ja xchg dec fmulp pop gs repz loopne mov sbb cmpsb paddq (bad) adc xor test adc mov test iret imul mov fldl2t jecxz xor jge jl xor cmpsl cmp sbb mov je mov imul bound cmp sub imul mov pop or push and push movsl xchg pop popa jmp rcr xchg loope (bad) mov push sub repz xchg and movsl or sbb test lret cmp call push dec cmpsl test rol inc lret mov dec aas push ss mov xchg adc lahf in adc xor (bad) fimul inc adc push (bad) sti mov call sbb aas enter ss and push int3 testb sahf mov imul out fimull ret xchg leave js ds pop int adc lea push int imulb xor bound (bad) cld pop or mov xchg and add push (bad) fisub mov iret sub lods sbb movsl leave in pop dec dec and jb add cld addr16 inc mov push inc (bad) add add test push jmp mov adc test (bad) xchg lret addr16 mov enter data16 sub daa push std jo cmpsl pop mov xchg push je (bad) jno adc roll movsb int dec mov fist sahf jns stos lods sbb cmp clc mov in cltd lds adc mov adc mov adc or pop or or loope mov (bad) push pop ror aad into xchg (bad) jns and jmp into jbe jnp aaa popf leave (bad) dec js repz xchg fisub adc aas int3 jns add sub pop mov inc pop push leave repz sahf mov inc aaa les ss mov lret mov fwait scas and icebp push adc ja sbb jle jne push xor int3 cmp icebp nop jle lret adc jno dec insl xchg mov fnstenv ret jb lret dec push sbb push daa fcomps (bad) mov adc pusha int3 adc dec mov cmp int3 mov and out (bad) icebp scas sbb pop push mov mov out sarl mov lds lods test xchg shl notb jl,pt in (bad) lcall mov loope mov aaa repnz xchg ja pop jne scas das mov sahf xchg sbb xor adc fwait xchg rclb repnz mov push sub or into sahf daa pop and mov xor jnp fmull out (bad) pop adc mov imul cs dec push pusha pop test je and push push loope mov push sub (bad) (bad) adc dec jp fdivrl xor or push add lods and adc lret (bad) xor (bad) test stc sub shr fwait aam sarb std jp std or xor cmp repz jge cli add jmp push nop cmp mov mov fild outsb aaa stos xor lret mov ret test cmpsl sbb or aas jmp push mov iret fisub push lret push inc add lds popf mov in shl jecxz ret loop cmp in imul pop xor movsb daa cmpsl cmp sti rorb test mov mov lods add xchg adc mov inc jae xor scas lods cmp mov int add fistpl (bad) ror mov add cli out add in shrb mov add js mov mov ret into cmp lods or and dec pop sbb pop (bad) xchg add aaa aas fsubp icebp cmp lds mov sbb xor dec cmp mov aam fsave mov or or xor ss test push mov bound push aam adc pop jns xchg jnp negb mov mov sub adc je push rclb jecxz mov lahf lds dec xchg jp and stos enter inc pop enter mov jmp ficomp sub loope adc mov es push into lahf lock sar aad xchg (bad) and test xchg lods sbb jnp pop outsb cs adc gs push cmc mov mov ja and push push xchg repnz xor push inc das (bad) xor fwait scas popf pop loopne mov fsub rclb (bad) sub lods adc push outsl cmp out sub outsl (bad) andb mov sub les lret mov addr16 push xchg pop in cmp jbe or cmp add (bad) xor in inc testl xor repz (bad) lret jbe int mov mov inc lret fstpl lret fisubr sub lret xchg (bad) pop mov pop xor repnz test or int inc push nop push int3 jb popf push and mov inc jle adc loop mov orl ljmp dec hlt sti lods adc sub stos loopne lahf sub mov aas xor xor mov js (bad) mov or loop xor out xchg cwtl aas std pop push and xchg cmp outsl adcl mov xchg (bad) mov int dec mov cmp push sub adc jb les cmpsl (bad) loopne and cwtl rorl cmp lock test popa xor in test mov pop ficompl jg cltd pushf hlt sub and mov push pop dec add push cld (bad) xor outsb test fs dec adc (bad) xor mov pop call or int push insl pop ret add xchg mov mov add or lods mov sub dec hlt jbe cmp jge jge and outsl push cmp ficom ljmp je xchg fs xchg test push je es xlat mov lahf (bad) hlt lds sahf jno fdivl (bad) int out (bad) out xchg mov or jo xor jae xchg in in push pop xchg out cltd insl inc pop jns lock aam bound xor adc inc lret mov dec cltd iret dec cwtl xchg out (bad) xor push inc sti xchg push (bad) sbb mov and lret sbb or push inc cmp pop mov mov inc inc sub pop add xchg feni(8087 shr push sub mov dec cmp ficompl adc push in sub lret fdivrl or (bad) xor mov sbb mov or js fldenv bound jg faddl push xor repnz sub aas inc sbb mov xchg insl (bad) mov dec repnz adc and fsubs adc dec xor mov out out adc gs mov dec pop inc push pop int push pop jecxz sbb sbb sbb xor jb mov lahf out leave fdivrp ja add out stos inc insb aam (bad) mov and push lds daa jns jle add pop cmp test mov mov imul stos adc sbb mov adcb mov mov cmp mov xor popa push xchg lahf xor ret ds dec std mov cmpsb pop sahf or loop push ss lods inc dec imul jbe add incl int3 push stos je pop cwtl add jo xor arpl stc cmp (bad) add xlat fs mov or or scas (bad) mov sub iret xchg ljmp inc mov and (bad) leave mov adc sti fdiv add push pusha (bad) inc inc mov or mov bound sub bound insb push add mov and xchg inc mov mov (bad) test mov mov jnp movsl movsb push fstpt lds outsl lahf (bad) jo sar nop or mov pop sbb gs adc mov xor push or dec repnz out pop jg mov adc cmpsb addr16 dec testb movsl jecxz call dec scas sbb inc push mov lahf inc cmp lcall xlat dec cltd cmc pop daa or movsb es jo (bad) je lock out mov sub in sub sbb stos call cmp dec jno or sbb and lock dec sub xchg lahf test mov jp andl ss pop outsb or and or jmp movsl out outsb or sub test ret hlt cltd push out sbb int xlat pop xor dec push rcl (bad) add cmp insl aam fdivrl add (bad) mov divps sub mov cwtl cwtl mov push ffree scas adc jb in xchg lret pop arpl enter adc out inc faddl lcall push adc (bad) clc mov (bad) mov pusha xchg mov push mov mov xchg test sbb push jae mov dec xor das push dec sub cmpsl adc inc in mov movsl rcll test mov xor outsl cmpsb (bad) adc xchg mov stos xchg les inc jns xchg lds cmp popa xor fisubrl orl xchg pop imul mov inc xchg sub jnp call test pop daa mov or inc push pop fistpll sbb jle xor rcl nop enter clc shr cmp cmpsl lret or sub in mov test cmp dec and pop fwait cld xchg int3 or xor mov test dec push int3 add lock inc pop mov and in jecxz mov (bad) ljmp idiv xchg pop push insb in push (bad) mov dec inc enter mov sbbl push mov in outsb xlat jb adc sbb mov xchg sbb jbe jae dec mov cmpsb out adc cmp add ds push add pushf pop imul add or xor xchg xor xor xchg sub push jg cmpsb mov movsb cmp in aaa adc bound daa pop scas jecxz mov paddsw sbb ret xchg xchg jmp push fmuls mov cmc lcall adc movsl jbe xor mov add xor stc mov rcrb dec test divl int3 mov jmp inc popa notb pop sbb jecxz jmp or loope cmc dec inc lods xchg sub push cmp push inc stos push scas sub fcmovb es adc mov sub popf adc mov inc fsubr inc loop fldt cli push or mov (bad) dec push inc into or inc adc push and int3 in (bad) jmp jle fstpl (bad) pcmpgtw add std inc in test adc int3 cli xchg rcrl add rol mulb cs rcrl fwait or xchg loope adc sbb mov sti insl pop xchg lods xchg add push jbe sub call sbb jl sub cmpsb out cmp pop sub sahf xchg jae xchg and push js adc pop fldenv cmpsl pop jge (bad) mov std in lods pushf insl push out sub push jno ficomp int3 int3 sub mov push out ss pusha push cmp inc mov mov xor addr16 cmpl mov popa adc mov (bad) stos adc clc dec sub dec xchg jne aam xchg pushf xor mov aad sahf imul pop push insb sti sbb test nop push ret xor sbb jge std mov pop aas dec (bad) mov pop jmp jb xchg add rcll cwtl cmpsl dec mov test push mov shl sub pop rcrb (bad) jmp lret leave or loopne ljmp jno bnd adc fsubrl jp xchg mov in dec outsb or int3 ds out pop rcl imul jbe movsb xor and es jmp add leave sbb int lods int js mov leave mov aaa cld sub (bad) xor (bad) leave inc sub cltd add cmp negl mov rcrb push jp jle (bad) xlat jb repz in clc call ljmp (bad) fs orb ficom sbb cmp push stos sti cld idivl xor lahf push ret lahf adc sub sub call inc (bad) (bad) je mov mov in mov mov sbb jnp jb pop cmp cmp dec gs sub push mov int and mov aas (bad) shrl scas mov mov sub mov sahf lods repnz sub sub lret ja adc mov mov repz mulb addr16 icebp es jecxz xchg shrl cmp div clc or cmpsl xchg into into jge mov call loop aam xchg rorl hlt or jbe inc add xchg fdivrl stos movsl dec adc xchg mov fdiv popa or mov pop push inc in les leave aaa mov nop iret outsb sub hlt push insb out test pop leave adc add call addl scas cmc cmp sub push leave pop push leave daa sub jb popf add lret stc push xchg inc and adc xor popf idivb fstps cld repz adc xchg fnstsw sbb stos cmp xor mov xor sti pop dec (bad) add lea test fcomi insl mov popw jae push ret inc mov mov sbb mov js mov int3 pop in ret pushf mov out stos push loop aaa clc cwtl cmp xchg ret inc jg mov dec xor popf insb loopne aaa inc pop hlt add movsb loope loop xchg (bad) test mov pop pop adc fsubrs sahf xchg and and dec or mov lds fiadd sbb jno sahf push mov xor cmpsl rclb mov dec fwait xor icebp sbb mov lds mov cmp fwait push adc pushf lds rcrb fbld sbb push cwtl (bad) hlt jge cwtl call dec push lretw cmp cld mov sarl iret lods loop cmpsl jae pop shlb mov cli test xor pop and jne addl ss mov mov mov push mov xor es cli dec (bad) push cld adc movsb (bad) mov sti push ljmp push movb adc fldl lahf je shlb std roll sbb jo gs push add fcmovnbe in cs sahf or or mov inc cmp push inc addr16 jmp cli add jmp inc cwtl insb aaa jle in pop fnop cmp adc xor or sbb faddp cmp sbb scas mov xchg pop cmp lock aam sub ret movsb mov stos pop jmp mov mov and fmuls sbb hlt cmp dec bound fwait stos js ss outsb in jns lcall out bnd and adc iret jnp push out mov test sti add scas jns dec mov je test call (bad) frstor in xor in pop xor mov lea jo lcall pop pusha in mov rcl (bad) insb mov pop (bad) cs xchg (bad) mov faddl mov aas add ja push orl add xchg mov outsb lock ja aam pop xor adc xchg sar test mov cltd into lret pop bound jne sub test ja sub xchg loop pushf sub dec aas fnsave mov test mov jle sub lret mov mov push (bad) xchg roll stos sbbl out pop mov fbld pusha xor mov das (bad) or ret popf fdivrl sub lret push dec inc add add add add or add jbe xor xor add add add push or add jle add add je imul add add add inc push dec inc add add add add inc insb outsl bound add add add push aad sub sldt add add add add add add and add or add sub add push add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add icebp add add add add mov push add add add add add icebp add add icebp add add icebp add add add add add add push icebp add add or add add jge mov push add add mov push add icebp add add lea add add mov push add aaa mov or push cmp add add cmp add add ss xor add mov push add mov push add add mov add cmp add add cmp xor add cmp add nop add add add push add xor add or add add or add add add add sldt cmp or adc add sbb add add add add and add add add add and and add add add add add das add xor add xor add add add add jb cmp sub cmp adc mov or adc sub push add add push mov and mov add or add add or add add add add enter adcb add add adc add add enter hlt adc add add enter in adc add add smsw add adc add add enter fcoml add add sbb and aam or add push push and add int3 push mov add dec pop mov add les and add inc sbb sbb add add sbb popf sbb sbb je add xchg push and add adc mov add jp jg add mulb int add jb int add out and es aaa sub add add add sub add add add sub das mov push and add add add add add add add add and add add add add daa add add xchg add add sub add add add add sub xchg add add add add add add add add add add xchg add add sub add add addl pop mov add add addl pop ret add add add sbbl add add add add add addl or cmp add add add add add add addl or add add add add xchg add or add add cmp add add add add addl push mov cmp add add add add add add addl clts add add sbbl add cmp sbbl add aas add add addl sbb aas add add addl sbb add add add add add aas add add addl sbb add add inc add add addl sbb add adc add add addl sbb add inc dec add add xchg add add add add add add add add add add add add add add add add add add add add add addl and push add add addl and add add push add add addl and add add add add addl and inc push add add sbbl add push add add addl es push add add addl daa mov push add add addl daa mov push add add addl sub push add add addl sub push add add addl sub add add addl sub add add add add addl sub add add add addl sub push pop add add addl cs add add addl cs inc pop add add sbbl add pop add add addl xor pop add add addl xor pop add add addl xor pop add add addl xor pop add add addl xor pop add add addl xor add add add add add pop add add xchg add xor add add pop add add xchg add xor add add pop add add xchg add xor add fcomps add add add add pop add add xchg add out add add pop add add xchg add add add add add add add add xchg add xor add add xchg add xor movsb add add xchg add les add add add add data16 add xchg add add add add add xchg add add add add xchg movb add xor add add add xor inc imul add fiadd adc pop imul add ss add add add lock subb add adc pushl std add cwtl imul add add adc push cmp add shrb add adc nop cmp adc aam add add adc adc add imul add add push add add add cmp add add add adc mov dec add add add stos xor add add xor add add xor add add xor add add xor add add add add data16 add add add xor add add xor add add xor add add xor xor cmp add add add push add add mov cmpsl xor mov add adc roll xor adc faddl add add add add add add sub stos add add jnp dec add mov dec add add add lds mov add add sbb add add sub lret add dec fadds mov loopne out popa add lock add jnp push add lret add (bad) cmp add add add add cmp add add add loope movb add add add icebp add add stc add add add movb add add add add sbb movb add add add add add add add add add add add cs add add add add add add add add add add add add insb add add add add add add repz add add add jb addb add add add add add and add add add add push add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add cmp add add add cmp add add add add add cmp add add add cmp add add add add add add fiadd or fiadd push add add add add add push inc dec jo outsl inc pop xor insl imul insl jae outsl jb imul gs cs imul inc outsl jb jae in mov mov in and mov mov in movsl in cwtl in cmpsl in xchg in mov mov in mov mov in xchg mov in and mov mov jae jne arpl add jns inc ja bound dec dec add push insb dec dec jae dec dec push imul pop add subl stos loop scas loop scas loop mov subl lods loop lods loop lods loop stos loop stos loop scas loop lods loop lods loop stos loop lods loop stos loop stos loop (bad) loop scas loop stos loop lods loop scas loop stos loop stos loop lods loop scas loop (bad) loop stos loop (bad) loop mov subl lods loop stos loop scas add subl stos loop stos loop scas loop lods loop lods loop stos loop (bad) loop (bad) loop stos loop (bad) loop scas loop mov subl loop scas loop stos loop scas loop scas loop scas loop mov subb (bad) loop scas loop lods loop stos loop scas loop mov subb scas loop lods loop scas loop stos loop stos loop scas add arpl outsl jb dec gs outsl jb push je gs insl add jae gs cs dec add arpl add jb popa insl add popa fs jns add je dec outsb addr16 add popa add je add jae gs add orb lods loop mov subb lods loop mov orb scas loop scas loop scas loop lods loop mov orb mov subl loop lods loop scas loop scas loop (bad) loop lods loop mov subl loop mov orb lods loop (bad) loop scas loop scas loop lods loop scas add outsb je xor push jne je insl gs gs jo jb add jae gs cs jne je insl gs outsl insl jo insb gs gs imul imul inc jb popa jns inc jb popa jns push jne je insl gs imul fs gs orb mov subl loop stos loop (bad) loop stos loop stos loop mov orb stos loop scas loop lods loop mov orb stos loop mov subb mov subl mov subl stos loop (bad) loop lods loop stos loop lods loop stos loop stos loop lods loop scas add data16 inc insb outsl arpl outsl jo add add je jns gs jb insl dec popa outsb fs add outsb je insl gs jns gs popa outsb fs add je insb gs outsb je jns add gs je dec outsb jae popa outsb arpl inc outsb arpl imul je insl cs gs add je push push inc cmp inc gs je imul imul gs add orb loop scas loop mov orb scas loop scas loop (bad) loop lods loop stos loop scas loop lods loop lods loop lods loop lods loop (bad) loop lods loop stos loop (bad) loop mov subl stos loop (bad) loop scas loop lods loop scas loop scas loop (bad) loop scas loop lods loop lods loop (bad) loop (bad) loop lods loop lods loop (bad) loop scas add subb (bad) loop (bad) loop stos loop scas loop stos loop scas loop lods loop stos loop stos loop lods loop mov orb scas loop mov subl loop scas loop stos loop scas loop (bad) loop mov subl (bad) loop (bad) loop (bad) loop stos loop scas loop lods loop mov orb mov subb lods loop lods loop stos loop stos loop (bad) loop stos loop mov orb mov subl mov subb stos loop stos loop (bad) loop stos loop scas loop mov subb stos loop mov orb (bad) loop stos loop stos loop mov subl stos loop stos loop stos loop stos loop lods loop scas add subb stos loop scas loop lods loop (bad) loop scas loop stos loop mov subb lods loop mov subb lods loop stos loop stos loop stos loop lods loop stos loop stos loop stos loop stos loop (bad) loop lods loop mov subl (bad) loop lods loop stos loop lods loop mov subb (bad) loop scas loop scas loop scas add orb (bad) loop stos loop mov subb loop stos loop mov subl lods loop stos loop scas loop lods loop mov subl lods loop (bad) loop scas loop mov subl stos loop stos loop mov subl stos loop lods loop lods loop (bad) loop scas loop stos loop scas add subb lods loop lods loop (bad) loop stos loop scas loop (bad) loop scas loop mov subl (bad) loop lods loop (bad) loop stos loop stos loop lods loop (bad) loop lods loop lods loop (bad) loop scas loop stos loop scas loop (bad) loop (bad) loop stos loop scas loop scas loop lods loop scas loop (bad) loop (bad) loop mov orb mov orb popa insb jne push jns gs orb lods loop (bad) loop lods loop mov orb stos loop lods loop lods loop lods loop (bad) loop lods loop stos loop mov subl mov subl scas loop lods loop lods loop stos loop mov orb loop scas loop stos loop (bad) loop stos loop lods loop lods loop scas loop stos loop mov subb orb stos loop scas loop scas loop stos loop stos loop stos loop stos loop stos loop scas loop stos loop stos loop (bad) loop mov subl mov subl mov subl stos loop mov subb mov orb scas loop (bad) loop lods loop mov subb scas add subb scas loop scas loop (bad) loop mov subl mov subl loop mov subl scas loop lods loop mov subb lods loop lods loop lods loop stos loop (bad) loop lods loop stos loop mov subb loop mov subl stos loop (bad) loop scas add subl (bad) loop (bad) loop mov subl mov orb loop stos loop scas loop stos loop stos loop stos loop stos loop mov subl stos loop lods loop stos loop (bad) loop lods loop stos loop stos loop lods loop (bad) loop mov subb lods loop stos loop stos loop lods loop mov subb orb scas loop scas loop scas loop scas loop mov subl stos loop mov orb stos loop stos loop stos loop mov orb scas loop (bad) loop lods loop lods loop mov subl stos loop lods loop mov orb mov orb loop stos loop scas loop scas add subl stos loop stos loop lods loop stos loop stos loop lods loop scas loop mov orb stos loop lods loop stos loop lods loop mov subl scas loop lods loop scas loop mov subb mov subl scas loop stos loop scas loop lods loop lods loop mov subb loop scas add subl mov orb loop lods loop scas loop scas loop scas loop mov subl mov subb stos loop (bad) loop scas loop lods loop stos loop mov orb stos loop scas loop (bad) loop (bad) loop lods loop stos loop (bad) loop mov orb loop scas loop lods loop scas add orb scas loop lods loop mov subl lods loop mov orb stos loop scas loop lods loop lods loop scas loop stos loop mov subl lods loop lods loop lods loop scas loop (bad) loop lods loop mov subb loop mov orb mov subl scas loop scas add orb stos loop scas loop lods loop stos loop stos loop lods loop lods loop lods loop mov orb loop lods loop mov orb scas loop scas loop stos loop stos loop stos loop lods loop lods loop lods loop scas loop (bad) loop mov orb mov orb lods loop mov orb scas loop stos loop scas add orb mov subl loop stos loop mov subl scas loop mov orb lods loop stos loop stos loop stos loop stos loop stos loop mov subl loop scas loop stos loop (bad) loop stos loop lods loop (bad) loop mov orb lods loop stos loop mov subl subl mov subb scas loop stos loop mov subl mov subb (bad) loop mov orb stos loop lods loop scas loop lods loop scas loop lods loop lods loop stos loop lods loop mov orb scas loop lods loop (bad) loop scas loop lods loop lods loop mov subl arpl subb mov subb (bad) loop stos loop lods loop stos loop lods loop mov subb loop mov orb stos loop scas loop lods loop scas loop scas loop (bad) loop lods loop lods loop stos loop mov orb loop (bad) loop lods loop scas loop (bad) loop (bad) loop (bad) loop scas loop scas loop lods loop scas add orb lods loop mov subl stos loop stos loop (bad) loop mov subl loop mov subb scas loop stos loop stos loop stos loop stos loop lods loop scas loop (bad) loop stos loop stos loop mov subb loop stos loop (bad) loop scas loop mov subl stos loop scas add orb scas loop stos loop (bad) loop scas loop stos loop lods loop lods loop stos loop stos loop mov orb mov subb stos loop mov subl mov subl mov subl lods loop lods loop mov orb scas loop lods loop stos loop stos loop mov subb subb stos loop (bad) loop scas loop lods loop scas loop (bad) loop (bad) loop mov subb scas loop lods loop lods loop stos loop lods loop (bad) loop stos loop stos loop lods loop (bad) loop scas loop mov orb scas loop stos loop stos loop (bad) loop (bad) loop scas loop (bad) loop scas loop mov subl scas loop scas add subb mov subl scas loop (bad) loop stos loop stos loop lods loop scas loop stos loop (bad) loop lods loop mov orb lods loop mov subl mov subl lods loop lods loop mov subb loop lods loop lods loop stos loop lods loop stos loop scas loop (bad) loop scas add subb lods loop stos loop lods loop stos loop stos loop (bad) loop mov orb scas loop mov subb stos loop mov subl loop scas loop lods loop scas loop stos loop scas loop stos loop mov subb scas loop lods loop lods loop scas loop scas loop lods loop stos loop scas loop lods loop stos loop scas add subl scas loop lods loop stos loop scas loop lods loop stos loop (bad) loop lods loop scas loop lods loop (bad) loop scas loop lods loop lods loop (bad) loop mov subb stos loop scas loop lods loop lods loop mov subl (bad) loop lods loop mov orb lods loop lods loop stos loop mov subl subb lods loop mov orb scas loop mov subl stos loop mov subl lods loop stos loop (bad) loop lods loop mov subb loop mov orb (bad) loop stos loop mov subl mov orb scas loop lods loop stos loop stos loop scas add subb stos loop stos loop mov orb scas loop mov subl scas loop stos loop mov subb mov subb loop stos loop stos loop stos loop mov subb scas loop (bad) loop stos loop stos loop scas loop stos loop scas loop mov orb scas loop stos loop lods loop scas add orb stos loop mov subl (bad) loop stos loop (bad) loop scas loop (bad) loop (bad) loop mov subb mov subl loop stos loop (bad) loop lods loop stos loop scas loop scas loop (bad) loop scas loop mov subb loop scas loop (bad) loop stos loop (bad) loop stos loop scas loop (bad) loop scas add orb mov subl (bad) loop lods loop (bad) loop (bad) loop lods loop lods loop (bad) loop lods loop lods loop scas loop mov orb loop scas loop stos loop mov subl lods loop mov orb mov subb lods loop scas loop lods loop scas loop lods loop lods loop lods loop scas add subl stos loop stos loop scas loop stos loop lods loop scas loop stos loop mov subl (bad) loop (bad) loop stos loop scas loop (bad) loop lods loop stos loop lods loop lods loop stos loop scas loop stos loop (bad) loop scas loop mov subl stos loop (bad) loop scas loop stos loop scas loop scas loop lods loop (bad) loop scas add subl lods loop lods loop lods loop lods loop mov subl mov subl loop lods loop scas loop lods loop (bad) loop mov orb mov subl loop mov orb stos loop mov subb scas loop scas loop stos loop stos loop stos loop scas add subl (bad) loop mov subb stos loop scas loop lods loop mov subb loop mov subb loop (bad) loop lods loop lods loop scas loop scas loop lods loop stos loop mov subb mov subb stos loop scas loop scas loop (bad) loop scas loop mov subb stos loop scas add orb loop lods loop (bad) loop lods loop stos loop lods loop (bad) loop lods loop stos loop stos loop (bad) loop lods loop mov subl stos loop scas loop (bad) loop scas loop stos loop stos loop lods loop lods loop mov orb lods loop lods loop (bad) loop scas loop scas loop mov subb lods loop scas loop stos loop scas add subb lods loop lods loop scas loop mov subl mov orb loop scas loop scas loop (bad) loop stos loop scas loop mov subl loop stos loop scas loop stos loop lods loop scas loop stos loop scas loop stos loop mov subb loop lods loop mov orb scas loop scas add subl loop stos loop scas loop scas loop (bad) loop lods loop scas loop mov subl mov subl lods loop mov subb lods loop mov orb stos loop mov orb mov subl lods loop stos loop scas loop scas loop mov orb subl stos loop (bad) loop stos loop scas loop stos loop stos loop lods loop lods loop stos loop (bad) loop scas loop stos loop (bad) loop mov subl lods loop lods loop scas loop mov subb loop lods loop lods loop scas loop stos loop lods loop lods loop (bad) loop lods loop stos loop lods loop stos loop scas loop lods loop scas add orb lods loop lods loop stos loop stos loop (bad) loop scas loop lods loop (bad) loop stos loop stos loop mov subl stos loop scas loop stos loop scas loop (bad) loop (bad) loop mov orb loop stos loop mov subl stos loop stos loop mov subb lods loop mov subl subb (bad) loop mov subb mov subb stos loop mov subl mov subb lods loop stos loop lods loop mov subb lods loop scas loop mov subb stos loop scas loop stos loop stos loop mov subl stos loop stos loop stos loop stos loop scas add subb stos loop lods loop lods loop (bad) loop (bad) loop lods loop lods loop stos loop lods loop scas loop lods loop lods loop (bad) loop stos loop lods loop (bad) loop (bad) loop stos loop lods loop mov orb loop lods loop mov subb stos loop (bad) loop stos loop stos loop (bad) loop lods loop stos loop (bad) loop stos loop (bad) loop stos loop scas add subb stos loop mov subl stos loop stos loop (bad) loop lods loop (bad) loop scas loop stos loop (bad) loop stos loop lods loop (bad) loop scas loop stos loop lods loop lods loop stos loop lods loop mov subb scas loop (bad) loop stos loop stos loop scas loop lods loop lods loop stos loop scas loop mov orb lods loop scas add subl (bad) loop (bad) loop mov subb loop lods loop stos loop stos loop stos loop scas loop scas loop lods loop lods loop scas loop lods loop lods loop mov subb lods loop stos loop scas loop stos loop mov subl mov subb lods loop scas loop mov subl add subb (bad) loop lods loop stos loop mov subl scas loop mov orb scas loop stos loop lods loop (bad) loop stos loop (bad) loop (bad) loop stos loop scas loop mov subl lods loop stos loop lods loop mov orb stos loop mov orb scas loop mov subl mov orb loop stos loop lods loop lods loop stos loop (bad) loop (bad) loop lods loop mov subb scas loop lods loop stos loop lods loop lods loop lods loop scas loop scas loop scas loop lods loop lods loop (bad) loop mov orb (bad) loop lods loop lods loop stos loop scas loop lods loop (bad) loop stos loop scas loop scas loop lods loop scas add orb mov subl mov subb (bad) loop scas loop lods loop mov subl mov subl mov subl lods loop stos loop lods loop lods loop mov subb scas loop stos loop lods loop mov orb loop stos loop mov subb add js loop stos loop mov subb stos loop (bad) loop lods loop scas loop stos loop lods loop scas loop lods loop (bad) loop lods loop mov orb scas loop stos loop (bad) loop stos loop stos loop scas loop stos loop stos loop lods loop stos loop mov subl stos loop scas loop mov subl (bad) loop mov subl orb scas loop stos loop stos loop scas loop stos loop stos loop stos loop lods loop lods loop lods loop lods loop mov orb loop scas loop stos loop scas loop mov orb scas loop scas loop lods loop (bad) loop stos loop stos loop lods loop stos loop stos loop (bad) loop scas loop scas loop stos loop mov subb scas add orb stos loop mov subl scas loop lods loop stos loop stos loop (bad) loop stos loop (bad) loop mov orb mov subl loop mov subl stos loop stos loop stos loop (bad) loop mov subl lods loop lods loop scas loop stos loop (bad) loop scas loop scas add subb (bad) loop lods loop stos loop stos loop (bad) loop lods loop stos loop lods loop stos loop (bad) loop stos loop mov subl (bad) loop mov orb loop stos loop (bad) loop lods loop lods loop scas loop mov orb loop lods loop scas loop (bad) loop stos loop scas loop scas loop scas loop scas loop (bad) loop scas add subb lods loop scas loop lods loop (bad) loop lods loop (bad) loop (bad) loop (bad) loop stos loop lods loop scas loop (bad) loop scas loop mov subb loop mov orb lods loop lods loop scas loop scas loop scas loop lods loop scas loop stos loop stos loop stos loop scas loop stos loop lods loop mov subb stos loop stos loop scas add orb stos loop lods loop scas loop stos loop lods loop stos loop (bad) loop scas loop lods loop mov subb scas loop lods loop stos loop stos loop (bad) loop scas loop lods loop (bad) loop mov orb stos loop stos loop lods loop (bad) loop (bad) loop lods loop lods loop scas loop (bad) loop scas loop scas loop scas loop lods loop lods loop stos loop scas add orb lods loop scas loop scas loop scas loop mov orb scas loop scas loop mov subl mov subl mov subl mov subl stos loop scas loop stos loop scas loop mov subl lods loop stos loop (bad) loop mov orb subl loop lods loop lods loop lods loop scas loop stos loop mov subl loop lods loop stos loop scas loop scas loop stos loop lods loop stos loop mov subl loop stos loop mov subl stos loop lods loop stos loop stos loop lods loop lods loop scas loop lods loop stos loop scas add subb loop lods loop stos loop (bad) loop lods loop lods loop scas loop scas loop stos loop stos loop scas loop lods loop lods loop stos loop mov orb lods loop scas loop stos loop lods loop lods loop lods loop mov subl (bad) loop scas loop scas loop mov orb scas loop lods loop stos loop stos loop scas loop scas add subl lods loop lods loop stos loop stos loop stos loop lods loop stos loop stos loop scas loop stos loop stos loop lods loop mov subl stos loop stos loop lods loop stos loop lods loop stos loop scas loop stos loop stos loop stos loop (bad) loop stos loop scas loop scas loop lods loop stos loop scas loop (bad) loop stos loop stos loop mov subb orb loop mov orb loop mov orb lods loop stos loop lods loop scas loop stos loop stos loop mov subb scas loop (bad) loop scas loop stos loop lods loop scas loop mov subb scas loop mov subl mov orb mov subb scas add subl (bad) loop mov orb (bad) loop lods loop (bad) loop lods loop stos loop scas loop mov subl stos loop lods loop stos loop scas loop scas loop mov subl (bad) loop mov subb loop stos loop stos loop scas loop (bad) loop mov orb mov orb subl stos loop scas loop (bad) loop lods loop lods loop (bad) loop scas loop lods loop lods loop (bad) loop mov subl mov subl stos loop lods loop mov orb scas loop lods loop lods loop stos loop scas loop stos loop lods loop lods loop mov orb stos loop scas loop scas loop scas add subl (bad) loop lods loop stos loop scas loop (bad) loop lods loop scas loop mov subl mov subl (bad) loop lods loop stos loop mov orb scas loop stos loop mov subl scas loop lods loop mov subl mov orb loop scas add subl loop (bad) loop scas loop scas loop lods loop scas loop lods loop lods loop scas loop lods loop lods loop stos loop lods loop scas loop stos loop lods loop stos loop lods loop stos loop stos loop stos loop lods loop lods loop (bad) loop (bad) loop (bad) loop stos loop lods loop scas loop (bad) loop lods loop lods loop lods loop scas loop mov subl subb stos loop scas loop mov orb lods loop scas loop lods loop scas loop mov subl scas loop stos loop stos loop stos loop scas loop stos loop scas loop (bad) loop lods loop stos loop stos loop lods loop stos loop stos loop scas loop (bad) loop scas loop scas loop lods loop mov subl lods loop scas loop scas add orb stos loop lods loop mov subb stos loop lods loop lods loop lods loop mov orb lods loop (bad) loop lods loop stos loop scas loop stos loop mov subl scas loop stos loop scas loop mov subb lods loop stos loop lods loop lods loop lods loop mov orb mov subb subb lods loop (bad) loop (bad) loop stos loop scas loop stos loop lods loop stos loop scas loop lods loop lods loop lods loop lods loop mov subb (bad) loop scas loop stos loop mov subb mov subl (bad) loop lods loop scas loop stos loop scas loop stos loop stos loop (bad) loop lods loop stos loop lods loop scas add subl stos loop scas loop mov orb scas loop lods loop mov subb stos loop stos loop lods loop (bad) loop lods loop mov subb loop stos loop scas loop scas loop scas loop mov orb loop scas loop lods loop lods loop stos loop (bad) loop scas loop stos loop stos loop mov orb (bad) loop (bad) loop lods loop (bad) loop (bad) loop (bad) loop scas loop lods loop stos loop (bad) loop stos loop scas loop lods loop stos loop lods loop lods loop scas loop lods loop mov orb stos loop (bad) loop mov subb stos loop stos loop scas loop (bad) loop scas loop (bad) loop stos loop lods loop stos loop stos loop lods loop lods loop mov subl orb scas loop scas loop stos loop stos loop stos loop scas loop scas loop (bad) loop scas loop scas loop stos loop scas loop lods loop stos loop lods loop scas loop (bad) loop lods loop mov orb loop scas loop stos loop lods loop (bad) loop scas loop stos loop stos loop lods loop lods loop (bad) loop scas loop scas loop stos loop scas loop scas loop scas add subb lods loop lods loop mov orb loop scas loop stos loop stos loop stos loop scas loop stos loop stos loop (bad) loop stos loop stos loop stos loop scas loop (bad) loop lods loop lods loop stos loop stos loop lods loop mov subb loop lods loop scas loop stos loop mov orb mov subb loop scas add subl lods loop (bad) loop mov subb mov subl lods loop scas loop lods loop stos loop lods loop scas loop stos loop stos loop lods loop mov orb scas loop stos loop scas loop stos loop lods loop lods loop mov subb lods loop stos loop stos loop lods loop (bad) loop scas loop stos loop scas add orb scas loop (bad) loop scas loop lods loop stos loop lods loop scas loop scas loop stos loop stos loop lods loop stos loop lods loop scas loop stos loop stos loop mov subb loop stos loop lods loop lods loop stos loop lods loop mov orb loop (bad) loop stos loop stos loop scas loop mov subl stos loop scas add orb lods loop lods loop (bad) loop mov subb mov orb (bad) loop lods loop stos loop lods loop mov subb stos loop stos loop lods loop stos loop (bad) loop (bad) loop (bad) loop stos loop lods loop lods loop mov subb loop mov subb stos loop mov orb (bad) loop scas add subl loop mov subl (bad) loop lods loop (bad) loop (bad) loop stos loop mov subb mov subb lods loop mov subl mov subb stos loop lods loop lods loop lods loop (bad) loop lods loop (bad) loop lods loop scas loop scas loop stos loop (bad) loop stos loop scas add orb lods loop mov orb scas loop (bad) loop mov subl stos loop mov orb stos loop stos loop (bad) loop lods loop (bad) loop lods loop (bad) loop stos loop mov orb (bad) loop mov orb (bad) loop stos loop scas loop lods loop (bad) loop lods loop mov subb scas add subb scas loop lods loop mov orb scas loop stos loop stos loop stos loop lods loop mov subb mov subb stos loop mov subl loop lods loop stos loop lods loop (bad) loop stos loop scas loop lods loop stos loop scas loop stos loop mov subl stos loop stos loop scas add subl scas loop stos loop scas loop stos loop stos loop (bad) loop mov subl stos loop stos loop mov subl lods loop stos loop stos loop stos loop stos loop stos loop lods loop (bad) loop stos loop mov subb lods loop mov subl stos loop mov subl orb lods loop stos loop stos loop mov subl stos loop mov orb mov orb (bad) loop lods loop mov subl scas loop mov subb scas loop stos loop lods loop stos loop stos loop scas loop scas loop lods loop stos loop stos loop scas loop mov subb orb loop stos loop scas loop scas loop lods loop lods loop (bad) loop lods loop lods loop stos loop lods loop lods loop scas loop lods loop (bad) loop stos loop (bad) loop stos loop lods loop stos loop lods loop lods loop mov subl lods loop lods loop stos loop mov orb stos loop lods loop stos loop lods loop stos loop lods loop scas add subl (bad) loop scas loop scas loop scas loop lods loop stos loop lods loop (bad) loop (bad) loop mov subl stos loop lods loop mov orb lods loop lods loop stos loop lods loop stos loop mov subb lods loop (bad) loop mov subl stos loop (bad) loop scas loop lods loop mov subb subl mov subb loop scas loop stos loop mov subl stos loop lods loop mov subb loop (bad) loop lods loop mov orb loop stos loop lods loop lods loop stos loop stos loop mov subb stos loop stos loop scas loop lods loop lods loop mov subb subb mov subl (bad) loop mov subb stos loop lods loop stos loop lods loop stos loop stos loop scas loop lods loop lods loop mov orb loop lods loop lods loop lods loop (bad) loop stos loop scas loop scas loop scas loop (bad) loop stos loop lods loop stos loop lods loop mov subl subl mov subl scas loop scas loop (bad) loop stos loop (bad) loop lods loop scas loop scas loop lods loop stos loop scas loop scas loop lods loop lods loop scas loop stos loop (bad) loop stos loop stos loop lods loop stos loop scas loop stos loop lods loop stos loop scas loop mov orb lods loop lods loop mov subl subb loop scas loop lods loop stos loop mov orb lods loop mov subb mov subl (bad) loop stos loop stos loop scas loop mov orb (bad) loop mov subb stos loop stos loop stos loop lods loop mov subl stos loop mov subl orb mov subb (bad) loop scas loop scas loop stos loop mov orb stos loop lods loop lods loop stos loop mov subl lods loop mov subl stos loop mov subl stos loop scas loop stos loop mov orb lods loop lods loop lods loop scas add orb mov subl stos loop scas loop scas loop (bad) loop lods loop stos loop lods loop lods loop (bad) loop mov subl mov orb scas loop stos loop mov subl scas loop lods loop mov orb (bad) loop scas loop stos loop mov orb scas loop scas add orb (bad) loop stos loop lods loop (bad) loop stos loop lods loop lods loop mov orb lods loop lods loop mov orb stos loop scas loop stos loop lods loop lods loop mov subl scas loop stos loop lods loop stos loop lods loop lods loop scas loop stos loop stos loop (bad) loop scas loop lods loop (bad) loop (bad) loop scas add orb loop stos loop mov subb mov orb loop scas loop stos loop stos loop mov subb stos loop (bad) loop mov orb mov subb lods loop (bad) loop stos loop mov orb stos loop lods loop scas loop stos loop mov subb lods loop lods loop scas add subl stos loop stos loop scas loop scas loop (bad) loop scas loop lods loop mov orb lods loop (bad) loop stos loop (bad) loop scas loop mov subl lods loop (bad) loop mov orb loop (bad) loop stos loop (bad) loop mov subb (bad) loop lods loop mov orb scas loop scas add subl loop mov subb loop lods loop lods loop scas loop (bad) loop (bad) loop mov subl mov subb loop scas loop stos loop mov subl stos loop stos loop (bad) loop lods loop stos loop scas loop (bad) loop mov subl (bad) loop mov subb gs orb scas loop mov subb stos loop mov orb mov subl scas loop mov subb stos loop scas loop (bad) loop scas loop lods loop (bad) loop lods loop (bad) loop stos loop scas loop (bad) loop lods loop lods loop lods loop (bad) loop stos loop mov orb loop stos loop stos loop scas add orb mov subb loop lods loop mov subl lods loop stos loop scas loop (bad) loop lods loop lods loop stos loop (bad) loop lods loop mov subl stos loop stos loop (bad) loop scas loop lods loop scas loop stos loop lods loop mov orb loop mov subl add subl lods loop lods loop stos loop scas loop mov orb scas loop lods loop stos loop stos loop (bad) loop stos loop scas loop (bad) loop stos loop mov subl lods loop mov subb mov subl scas loop scas loop stos loop (bad) loop (bad) loop stos loop mov subl stos loop mov subl lods loop lods loop (bad) loop (bad) loop mov subb loop lods loop stos loop stos loop lods loop stos loop (bad) loop lods loop mov subb stos loop scas loop (bad) loop stos loop stos loop scas loop stos loop stos loop (bad) loop lods loop mov orb lods loop scas loop (bad) loop mov subb orb lods loop mov subb loop mov orb loop mov orb loop lods loop lods loop scas loop lods loop lods loop stos loop lods loop stos loop stos loop mov subb stos loop stos loop stos loop lods loop scas loop (bad) loop stos loop (bad) loop (bad) loop stos loop mov orb subl (bad) loop scas loop stos loop mov subl loop (bad) loop stos loop mov subl (bad) loop lods loop mov orb lods loop stos loop (bad) loop lods loop (bad) loop mov subb stos loop (bad) loop scas loop stos loop stos loop lods loop scas loop mov subl subb loop lods loop mov subb stos loop scas loop mov subb lods loop lods loop scas loop (bad) loop stos loop lods loop stos loop lods loop lods loop stos loop stos loop (bad) loop stos loop mov subl scas loop lods loop stos loop (bad) loop lods loop (bad) loop (bad) loop lods loop stos loop (bad) loop lods loop scas add orb loop lods loop scas loop mov orb (bad) loop lods loop stos loop stos loop stos loop mov orb loop stos loop lods loop lods loop lods loop (bad) loop mov subb stos loop mov subl stos loop (bad) loop scas loop stos loop lods loop lods loop stos loop scas loop lods loop scas add subl mov orb mov subl stos loop mov subb (bad) loop scas loop mov subb lods loop (bad) loop stos loop mov subb loop lods loop mov orb lods loop scas loop lods loop scas loop scas loop lods loop stos loop (bad) loop lods loop (bad) loop scas add subl stos loop lods loop stos loop stos loop scas loop stos loop stos loop (bad) loop mov orb scas loop stos loop mov subl stos loop stos loop lods loop lods loop lods loop scas loop mov orb lods loop lods loop lods loop lods loop lods loop (bad) loop lods loop lods loop scas loop (bad) loop lods loop scas add subb loop stos loop stos loop stos loop (bad) loop stos loop mov subl scas loop lods loop lods loop stos loop scas loop lods loop scas loop lods loop stos loop stos loop lods loop lods loop (bad) loop lods loop mov subl lods loop stos loop mov orb (bad) loop mov orb mov subb subb lods loop lods loop scas loop stos loop lods loop (bad) loop lods loop lods loop mov subb mov subb mov subl lods loop mov subb lods loop mov subb mov orb stos loop scas loop stos loop lods loop mov subl scas add subb mov orb loop (bad) loop scas loop scas loop lods loop stos loop lods loop lods loop lods loop mov subb stos loop (bad) loop mov subb mov subb stos loop stos loop stos loop lods loop mov orb stos loop (bad) loop scas loop stos loop (bad) loop mov subl aaa jp push dec insl bound inc add ja imul dec gs outsl fs outsb outsw add jae gs cs gs arpl outsb add push je push imul inc arpl add xor pop jno jae fs dec xor jbe dec aaa add outsb jae jb arpl dec outsb outsw add xor jae dec inc cmp jns inc jno push add addr16 inc inc xor jne push add jb jae cmp ja dec cmp xor insb xor pop add outsl jo jb jns outsb outsw add inc push insb dec dec xor add inc jno outsb cmp inc xor js dec xor xor dec je inc push jno bound dec outsl jp xor cmp inc push add je xor pop inc push push dec xor push jns js dec pop inc imul add outsb addr16 dec inc ja pop xor jbe add jae insl bound inc js gs imul push push imul dec push push jno imul ss push add arpl addr16 cmp jo je addr16 pop ss add inc inc pop jno xor jb push arpl cmp ja jo data16 xor bound jae add xor xor jp xor dec xor push inc add outsl xor xor add arpl push popa arpl inc pop xor jae outsl push pop inc add xor xor outsb jp add inc push dec add xor dec arpl bound pop xor push cmp push bound aaa dec aaa xor inc inc dec push inc pop push xor inc add jb dec dec push inc inc xor xor dec dec push add jb jb push imul inc push push xor imul pop xor xor ja gs dec dec outsb inc jb js push dec dec je cmp inc addr16 xor ja inc xor jo jae popa imul gs jns gs subb lods loop mov subl stos loop scas loop stos loop scas loop mov subb scas loop (bad) loop mov subl loop stos loop mov subb stos loop scas loop (bad) loop mov subl stos loop mov orb lods loop stos loop stos loop lods loop scas add je gs outsl fs loop lods loop stos loop stos loop scas loop stos loop lods loop lods loop lods loop lods loop lods loop stos loop scas loop lods loop (bad) loop stos loop stos loop (bad) loop (bad) loop mov subb stos loop stos loop scas loop (bad) loop stos loop mov orb scas loop mov subb scas loop mov subb mov subl gs bound dec outsb outsw add je dec popa insl gs subl loop (bad) loop mov subb stos loop lods loop mov subl loop scas loop (bad) loop scas loop scas loop mov subl mov subl scas loop (bad) loop stos loop (bad) loop stos loop scas loop stos loop stos loop stos loop lods loop mov orb scas add pop inc jno popa insb imul subl lods loop scas loop stos loop stos loop lods loop mov subl stos loop scas loop scas loop scas loop (bad) loop mov orb loop stos loop stos loop scas loop lods loop scas loop stos loop lods loop stos loop lods loop (bad) loop scas loop scas loop lods loop mov subb scas loop scas loop scas add je outsl fs popa jae add jbe imul subl stos loop lods loop stos loop stos loop (bad) loop (bad) loop (bad) loop lods loop scas loop stos loop mov subb mov subb lods loop stos loop lods loop lods loop scas loop lods loop stos loop (bad) loop stos loop scas loop lods loop stos loop (bad) loop (bad) loop (bad) loop scas loop lods loop (bad) loop lods loop lods loop scas loop scas add je outsl outsb jae jb arpl add subb loop stos loop lods loop stos loop stos loop stos loop lods loop (bad) loop lods loop stos loop stos loop mov subb stos loop lods loop lods loop lods loop (bad) loop lods loop scas loop lods loop mov subb mov subb stos loop (bad) loop mov subl lods loop lods loop mov orb mov subb loop (bad) loop lods loop (bad) loop stos loop stos loop (bad) loop scas loop stos loop lods loop lods loop lods loop mov subb stos loop scas loop mov orb stos loop scas loop lods loop lods loop lods loop scas loop lods loop (bad) loop stos loop (bad) loop stos loop (bad) loop mov subb loop scas loop scas add je jb jo jb imul loop scas loop scas loop stos loop stos loop scas loop scas loop stos loop stos loop lods loop scas loop lods loop scas loop lods loop scas loop lods loop mov subl mov subb loop stos loop scas loop mov subb scas loop lods loop lods loop lods loop stos loop lods loop stos loop stos loop stos loop scas loop stos loop scas add je popa insb jne add orb scas loop mov subb loop lods loop stos loop stos loop stos loop lods loop scas loop (bad) loop lods loop mov subl stos loop scas loop scas loop stos loop (bad) loop stos loop scas loop lods loop mov orb lods loop scas loop mov subl lods loop scas loop stos loop stos loop scas add je dec gs popa addr16 subl scas loop scas loop scas loop stos loop (bad) loop scas loop lods loop lods loop scas loop stos loop stos loop stos loop lods loop scas loop mov orb scas loop (bad) loop stos loop scas loop scas loop (bad) loop scas loop lods loop lods loop stos loop scas loop stos loop (bad) loop scas loop lods loop lods loop stos loop stos loop (bad) loop scas add jae popa addr16 outsl js push push imul jae insb je loop lods loop scas loop (bad) loop scas loop (bad) loop lods loop scas loop stos loop stos loop stos loop lods loop lods loop stos loop stos loop scas loop lods loop stos loop lods loop lods loop scas loop mov orb lods loop (bad) loop mov orb stos loop stos loop scas loop mov subl loop (bad) loop (bad) loop lods loop scas add je jbe je jb loop scas loop stos loop lods loop lods loop (bad) loop (bad) loop (bad) loop lods loop stos loop stos loop lods loop stos loop stos loop stos loop lods loop lods loop stos loop mov subb mov subb stos loop mov subb loop scas loop scas loop lods loop (bad) loop lods loop lods loop (bad) loop mov orb stos loop mov subb inc jae gs bound outsl jo jb addr16 jb bound add jae insl bound jb fs je je jb bound add jae insl bound imul outsl outsb inc je jb bound add jae insl bound gs jb jo imul imul jae gs bound imul imul outsl insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add outsb je insl gs outsl insl jo je bound imul bound add jae insl bound outsl insl jo outsb jns je jb bound add jbe jb imul inc outsl fs je jb bound add jae gs cs arpl imul ficoml dec test arpl js aas add mov pop push sbb mov push sbb sub pop add add add adc or add or or or add add add pop and or and add add pop or or or or or or add add sbb sbb push add sbb adc or add adc or add add add adc add and sbb and adc sbb add push push push adc add add add or and add add or adc sbb or add or or pop add or add sbb adc add adc add add or or pop push or or or add add or push adc add adc push adc push sbb adc add add push adc or add or or pop add or or and add or or pop adc sub or or or or or or add adc adc or or pop or or or or add or push adc push and or adc add sbb add or add add adc or adc or add add and add or pop and add and add or add add or and add push adc adc or or push add add pop pop add and add sbb pop pop adc adc sbb add sbb pop push adc dec sbb push add add sbb pop push adc inc or add or pop nopl add add push sbb push sbb add sbb add adc sbb sbb push add adc add and add sbb sbb pop pop adc sbb sbb add sbb adc or and sbb sbb add pop adc add add or push adc adc or pop add add add add sbb add and sbb add add add add pop add push push and sbb sbb sbb pop sbb sbb and adc adc inc adc add adc sbb add pop and add sbb add dec sbb sbb push adc add adc pop add sbb and add push adc add inc jns push pop jns add adc add bound js dec inc aaa xor add adc add cmp cmp xor xor cmp add adc add pop outsb jae jbe push je dec dec add adc add dec outsb dec dec push dec cmp cmp add add or add add push add add push add push jb jo outsl outsb inc js gs imul ja add add or inc je push dec cmp add test jae gs cs arpl imul imul cs arpl imul jae imul imul insl jae outsl jb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push imul gs imul outsl outsb add add add push add add add ds add xor add add outsl jb js dec popa imul jb gs insb add add add and 