(bad) jno add add add add add add add add inc add push or add fild add subl dec outsl adc js xor xchg add sbb add push add or add jo pop add or add add sub add push add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add repnz outsl or add jb add jo dec add or add add push jb add jo dec add or add add push jb add jo dec add or add dec add or sub add sbb add push add or add jo pop add or add add sub add or add jo pop add or add add sub add push add dec add jnp add add jle add outsl addb or sub add add add push jg add outsl addb or sub add add add push jg add outsl addb or sub add add add push jg add outsl addb or sub add add add push jg add outsl addb or sub add add add push jg add outsl addb or sub add add add push jg add outsl addb or sub add add add push jg add outsl addb or sub add add add or jg add outsl addb or sub add add add or jg add outsl addb or sub add add add or jg add outsl addb or sub add add add or jae add or add or sub add add add or add outsl addb or sub add add add push push jg add outsl addb or sub add add add punpckhdq add or add or sub add add add adc jg add outsl addb or sub add add add adc jg add outsl addb or sub add add add adc jg add outsl addb or sub add add add adc jg add outsl addb or sub add add add adc jae add or add or sub add add add adc add outsl addb or sub add add add push push jg add outsl addb or sub add add add pop push jg add outsl addb or sub add add add sbb jg add outsl addb or sub add add add sbb jg add outsl addb or sub add add add sbb jg add outsl addb or sub add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add stos add push sub add sub add sub pop sub add sub sub add push add push outsl pusha add push sub sub add sbbb add xchg jae add push sub push add add jae add or pop add or sub add stos add or add sub sub jae add or jae add or jae add or jae add or jae add or sub add push or add outsl enter add (bad) adc sub add sub sub add add add add add jge add add jnp add add add push add add add add add jge add add jnp add add add scas add jnp add add add sub sub jb push add int3 add or add add add add sub add add add sub sub jb push add int3 add or add add add add (bad) adc sub sbb add xor add add add add add add add add incb sub push or sub add add add and add add add or add sub add or faddl sub add add add add add and add add add adc or pop push add add add add jae add or add add add add sub add or add or add add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add sub add or add add push pop outsl sub add add outsl add add jb add jo add add pop sbb jae add or add or add add push sub add or add or add add push pop adc or add or add or add add push jb add jo das add or add add push pop dec pop or or add or add add push push outsl xor add add outsl add add jb add jo xor add add outsl push add push pop outsl sub add add outsl push add push jb add jo add add pop sbb jae add or add or add add push sub add or add or add add push pop adc sub add or add or add add push jb add jo das add or add add push pop dec pop or or add or add add push pop outsl xor add add outsl push add push jb add jo xor add add outsl or add pop outsl sub add add outsl or add jb add jo add add pop sbb jae add or add or add add push sub add or add or add add push pop adc pop jae add or add or add add push jb add jo das add or add add push pop dec pop or or add or add add push sbb add or add add push jb add jo xor add add outsl or add pop sbb add or add or add add push jb add jo das add or add add push and jae add or add or add add push sbb add or add add push pop popw es add or add or add add push jb add jo das add or add add push and jae add or add or add add push sbb add or add add push pop popw pop jae add or add or add add push jb add jo das add or add add push and jae add or add or add add push sbb add or add add push pop outsl sub add add outsl adc add jb add jo add add pop sbb jae add or add or add add push sub add or add or add add push pop jo dec jae add or add or add add push jb add jo das add or add add push and or or add or add add push sbb xor add add outsl adc add jb add jo xor add add adc inc add jo lea add add add add add or push adc push add jo lea add add add jo xor sub (bad) adc adc sub add adc sub add add adc lds add lea add add add add add movsb inc add add add movsb inc add add add movsb inc add add add or or roll add lea add add add add add mov add adc xor add add add jb add jo lea add add add add add or adc jb add jo lea add add add jo xor sub (bad) adc adc sub add adc sub add add add add lea add add add add add movsb inc add add add movsb inc add add add movsb inc add add add or adc add lea add add add add add mov add adc xor add add and add inc and add jae add or cmp add add pop sub add or add cmp add outsl cmp add mov add and add or add or add aas add or outsl adc add outsl inc add or add aas add or outsl push add push outsl inc add or add aas add or outsl or add outsl inc add or add aas add or outsl or add outsl inc add or add aas add or outsl or add outsl inc add or add aas add or outsl push add push outsl inc add or add aas add or outsl add add outsl inc add or add jb add jo xor dec add add inc add or add sub add add push sub add add jb add jo das add or add sub or add add jo inc add or add sub add add sub add add add add xor add add adc sbb and pop or add add sub add outsl pop add push outsl or add outsl dec add or add jo sub add push incb sub add outsl pop add push outsl or add outsl dec add or add jo sub add push incb pusha sub add outsl pop add push outsl push add push outsl dec add or add jo sub add push incb pusha adc add adc jns add leave add jo pop xor dec add or add sub add outsl pop add push jnp add add dec add or add add add push add push outsl pop add push sub add outsl pop add push jnp add add jae add or add add push add push outsl pop add push sub add outsl pop add push jnp add add dec add or add add push add push outsl pop add push sbb cmp add and add outsl pop add push outsl or add outsl dec add or add jo and add outsl pop add push outsl or add outsl dec add or add jo and add outsl pop add push outsl push add push outsl dec add or add jo sub add jge add add push add push outsl pop add push jnp add add push add push outsl pop add push jnp add add push add or jb add jo sbb add pop xor dec add or sub add outsl pop add push jnp add add push add or sub add outsl pop add push jnp add add push add or sub add outsl pop add push jnp add add push add or sub add outsl pop add push jnp add add push add or add pop add add jo cltd add jo pop adc dec add or sub add outsl pop add push jnp add add incb adc adc sub sub add outsl pop add push jnp add add push add or jb add jo loope add pop inc sub or add add add add sbb sub add push je add sbb pop add push sub add or add sub adc or cwtl add add add add or fwait add add or add add sub add outsl pop add push outsl or add outsl dec add or add jo sub add push incb sub add outsl pop add push outsl or add outsl dec add or add jo sub add push incb pusha sub add outsl pop add push outsl push add push outsl dec add or add jo sub add push incb pusha adc add adc jns add leave add jo pop xor dec add or add sub add outsl pop add push jnp add add dec add or add add add push add push outsl pop add push sub add outsl pop add push jnp add add jae add or add add push add push outsl pop add push sub add outsl pop add push jnp add add dec add or add add push add push outsl pop add push sbb cmp add and add outsl pop add push outsl or add outsl dec add or add jo and add outsl pop add push outsl or add outsl dec add or add jo and add outsl pop add push outsl push add push outsl dec add or add jo sub add jge add add push add push outsl pop add push jnp add add push add push outsl pop add push jnp add add push add or jb add jo sbb add pop xor dec add or sub add outsl pop add push jnp add add push add or sub add outsl pop add push jnp add add push add or sub add outsl pop add push jnp add add push add or sub add outsl pop add push jnp add add push add or add pop add add jo cltd add jo pop adc dec add or sub add outsl pop add push jnp add add incb adc adc sub sub add outsl pop add push jnp add add push add or jb add jo loope add pop inc sub or add add add add cmp jae add or pop adc sub add push adc repz jo lea add add adc pop add or pop add or add or adc push outsl pop add or sub push sub xor add add adc sbb and push pop incb or cmp add sub add outsl pop add push outsl or add outsl dec add or add jo sub add push incb sub add outsl pop add push outsl or add outsl dec add or add jo sub add push incb pusha sub add outsl pop add push outsl push add push outsl dec add or add jo sub add push incb pusha or jns add leave add jo pop xor dec add or add sub add outsl pop add push jnp add add dec add or add add dec add add push add push outsl pop add push sub add outsl pop add push jnp add add jae add or add add push add push outsl pop add push sub add outsl pop add push jnp add add dec add or add add push add push outsl pop add push sbb cmp add and add outsl pop add push outsl or add outsl dec add or add jo and add outsl pop add push outsl or add outsl dec add or add jo and add outsl pop add push outsl push add push outsl dec add or add jo sub add jge add add push add push outsl pop add push jnp add add push add push outsl pop add push jnp add add push add or jb add jo sbb add pop xor dec add or sub add outsl pop add push jnp add add push add or sub add outsl pop add push jnp add add push add or sub add outsl pop add push jnp add add push add or sub add outsl pop add push jnp add add push add or add pop add add jo cltd add jo pop adc dec add or sub add outsl pop add push jnp add add incb adc sub add outsl pop add push jnp add add push add or jb add jo loope add pop inc sub or add add add add add adc add adc or jo lea add add add add sub add add add adc push add add add add adc sbb and pop or add add sub add outsl pop add push outsl or add outsl dec add or add jo sub add push incb sub add outsl pop add push outsl or add outsl dec add or add jo sub add push incb pusha sub add outsl pop add push outsl push add push outsl dec add or add jo sub add push incb pusha adc add adc jns add leave add jo pop xor dec add or add sub add outsl pop add push jnp add add dec add or add add add push add push outsl pop add push sub add outsl pop add push jnp add add jae add or add add push add push outsl pop add push sub add outsl pop add push jnp add add dec add or add add push add push outsl pop add push sbb cmp add and add outsl pop add push outsl or add outsl dec add or add jo and add outsl pop add push outsl or add outsl dec add or add jo and add outsl pop add push outsl push add push outsl dec add or add jo sub add jge add add push add push outsl pop add push jnp add add push add push outsl pop add push jnp add add push add or jb add jo sbb add pop xor dec add or sub add outsl pop add push jnp add add push add or sub add outsl pop add push jnp add add push add or sub add outsl pop add push jnp add add push add or sub add outsl pop add push jnp add add push add or add pop add add jo cltd add jo pop adc dec add or sub add outsl pop add push jnp add add incb adc adc sub sub add outsl pop add push jnp add add push add or jb add jo loope add pop inc sub or add add add add lods add add jae add or pop adc jb add jo pop add or adc jb add jo pop add or adc jb add jo pop add or adc jb add jo pop add or adc jb add jo pop add or jb add jo add add sub add or add or add or lea add add outsl bound add mov pop outsl bound add mov sbb add or sbb add or sbb add or or add or sub push sub add xor add add add add adc sbb and pop or add add add inc add add push add push outsl pop add push outsl or add outsl dec add or add jo sub add push incb sub add outsl pop add push outsl or add outsl dec add or add jo sub add push incb pusha sub add outsl pop add push outsl push add push outsl dec add or add jo sub add push incb pusha adc jb add jo leave add jo pop xor dec add or add sub add outsl pop add push jnp add add dec add or push adc cmp add push add push outsl pop add push sub add outsl pop add push jnp add add jae add or add add push add push outsl pop add push sub add outsl pop add push jnp add add dec add or add add push add push outsl pop add push sbb cmp add and add outsl pop add push outsl or add outsl dec add or add jo and add outsl pop add push outsl or add outsl dec add or add jo and add outsl pop add push outsl push add push outsl dec add or add jo sub add jge add add push add push outsl pop add push jnp add add push add push outsl pop add push jnp add add push add or jb add jo sbb add pop xor dec add or sub add outsl pop add push jnp add add push add or sub add outsl pop add push jnp add add push add or sub add outsl pop add push jnp add add push add or sub add outsl pop add push jnp add add push add or add pop add add jo cltd add jo pop adc dec add or sub add outsl pop add push jnp add add incb adc adc sub sub add outsl pop add push jnp add add push add or jb add jo loope add pop inc sub or add add add add pop adc and add arpl add or adc adc sub add push add mov fmuls mov adc adc adc sub add or mov add or mov xchg or or mov xchg popa add or (bad) add and add add and add add pushf adc adc or das les or add sub add xor add add adc add add push outsl dec add or add jo sub add push incb add add push outsl dec add or add jo sub add push incb pusha add add push outsl dec add or add jo sub add push incb pusha or sub jb add jo leave add jo pop xor dec add or cmp add add add add add dec add or pop cmp add add add add add jae add or add add add add add dec add or add add sbb cmp add and add push outsl dec add or add jo and add push outsl dec add or add jo and add push outsl dec add or add jo sub add jge add add jnp add add jnp add add push add or jb add jo sbb add pop xor dec add or add add add push add or add add add push add or add add add push add or add add add push add or add inc add add jo cltd add jo pop adc dec add or add add add incb or sub add add add push add or jb add jo loope add pop inc sub or add add add sub add xor add add adc push or or jnp add add dec add or or or add add or add add add add push add or add or outsl data16 or or add or add add push outsl push add add push outsl imul add pop jae add or add jae add or add jae add or add add or push sub push pop lea add and outsl insl add or pop adc push lcall outsl outsb add or add or or or pop pop (bad) or add push outsl push add or add add add add or push add push adc add or or or add or adc push add or adc push add or adc or ficom and or or sub add fiadd add outsl add push pop outsl jb add add add add add jae add adc add or push add add push outsl je add pop ficoml or or roll add push pop lea add and outsl insl add or pop adc push lcall outsl outsb add or add or or add add outsl add push outsl jne add push outsl jbe add outsl ja add push outsl js add adc push lcall add add push outsl jne add push outsl jbe add outsl ja add pop outsl js add adc pop lcall add add push outsl jne add push outsl jbe add outsl ja add sbb add or pop sbb or add add push outsl jp add add sub add adc or push push pop (bad) or adc aaa (bad) (bad) call add or adc or ficom and or push add jno add fiadd add add add add add add pop add add add add add add add add add sbb add or add and add adc add pop add add xor add add add add add add add jnp add or jle add or jge add push incb or sub add add push jb add jo xor add add pushf add jle add sub add push incb or sub add add push jb add jo xor add add add add add sbb add add add push sbb jg add sub add push incb or sub add add push jb add jo xor add add add add add sbb add add das add push jg add sub add push incb or sub add add push jb add jo xor add add add add add sbb add add clc add add sbb jg add sub add push incb or sub add add push jb add jo xor add add add add add sbb add add roll push sbb jg add sub add push incb or sub add add push jb add jo xor add add add add add sbb add add mov add sbb jae add or jge add push incb or sub add add push jb add jo xor add add add add add sbb add add push add add sbb add sub add push incb or sub add add push jb add jo xor add add add add add sbb add add sbb add push push push jg add sub add push incb or sub add add push jb add jo xor add add add add add sbb add add in add push pop or jg add sub add push incb or sub add add push jb add jo xor add add add add add sbb add add lods add add pop or jg add sub add push incb or sub add add push jb add jo xor add add add add add sbb add add jne add push pop or jg add sub add push incb or sub add add push jb add jo xor add add add add add sbb add add cmp pop or jae add or jge add push incb or sub add add push jb add jo xor add add add add add sbb add add add pop or add sub add push incb or sub add add push jb add jo xor add add add add add sbb add add int add push pop push push jg add sub add push incb or sub add add push jb add jo xor add add add add add sbb add add xchg add add pop punpckhdq add or jge add push incb or sub add add push jb add jo xor add add add add add sbb add add pop add add pop adc jg add sub add push incb or sub add add push jb add jo xor add add add add add sbb add add and pop adc jg add sub add push incb or sub add add push jb add jo xor add add add add add sbb add add in add add pop adc jg add sub add push incb or sub add add push jb add jo xor add add add add add sbb add add mov add push pop adc jg add sub add push incb or sub add add push jb add jo xor add add add add add sbb add add jge add push pop adc jae add or jge add push incb or sub add add push jb add jo xor add add add add add sbb add add inc add add pop adc add sub add push incb or sub add add push jb add jo xor add add add add add sbb add add or pop push push jg add sub add push incb or sub add add push jb add jo xor add add add add add sbb add add aad add push pop pop push jg add sub add push incb or sub add add push jb add jo xor add add add add add sbb add add popf add add pop sbb jg add sub add push incb or sub add add push jb add jo xor add add add add add sbb add add push jae add or jge add push incb or sub add add push jb add jo xor add add add add add sbb add add xor pop sbb jg add sub add push incb or sub add add push jb add jo xor add add add add add sbb add add sub sbb add add add adc add add add jl add outsl addb or push or or outsl add push outsl push add add push outsl imul add add add pop jae add or jae add or add adc or or add or add adc incb adc adc sub or add or ficom and or pop add jno add fiadd add outsl add push pop outsl jb add add add add add pop jae add or jae add or add adc outsl add push outsl je add pop ficoml or or lods add add add lea add and outsl insl add or add add outsl jne add push outsl jbe add outsl ja add push outsl js add adc add or add add push outsl jne add push outsl jbe add outsl ja add pop outsl js add adc add or add add push outsl jne add push outsl jbe add outsl ja add sbb add or add add or add add push outsl jp add add outsl insb add or add outsl addl adc sub sub or adc ds (bad) (bad) decl outsl push add or ficomp add adc add or add or addl or sub add fiadd add add add add add add add pop add add add sbb adc add inc add add add add add push or outsl or add jb add jo dec add or push outsl or add jb add jo dec add or push outsl push add push jb add jo dec add or push outsl test add add add sbb add xor add add add add add add add add incb sub push or sub add add add and add add add or add sub add or faddl sub add add add add add and add add add adc push add add add add add adc sub add add or add add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add outsl cmp add outsl daa add or add add push outsl mov add add sub add or add add push pop movq add add push sbb add or add add push outsl aas add or outsl cmp add outsl inc add or add add push outsl aas add or outsl add push outsl inc add or add add push push pop sbb add or add or add add push jb add jo das add or add add push and add and add add add or add or add add push push outsl xor add add outsl cmp add jb add jo add rolb push jae add or add or add add push sub add or add or add add push and add add jae,pt add or add or add add push jb add jo das add or add add push pop addr16 cmp or add or add add push pop sbb or add add push jb add jo xor add add outsl cmp add pop and add or add add push pop push outsl mov add add outsl add push sub add or add or add add push sbb add or add add push sbb add or add add push outsl nop add or lea add and add push mov inc add push mov inc add push mov or add add push sbb test add jae add or add or add add push push outsl xchg add or add add push jb add add or add add push pop outsl xchg add or add add push push outsl xchg add or add add push sbb add or add add push push outsl xchg add or add add push and add jle add jae add or add or add add push pop sbb xor add add outsl inc add push and add outsl xchg add or add add push jb add add or add add push and add add add or add add push jb add add or add add push pop outsl fwait add or add add push and add add add or add add push and add outsl xchg add or add add push jb add add or add add push and add add add or add add push jb add add or add add push pop outsl fwait add or add add push and add add add or add add push and add inc outsl xchg add or add add push jb add add or add add push and cltd add or add add push jb add add or add add push pop outsl fwait add or add add push and pushf add or add add rolb add jae add or cmp add add pop sub add or add cmp add outsl cmp add ja add and add add add or add or add aas add or outsl cmp add outsl inc add or add outsl popf add or add sub add add jb add add or add sub or add add add or add add push push outsl inc add or add add push outsl sahf add or add sub add add add sbb add pop add lahf add or mov fiadd add add push add push add add or sub add add add add push sldt add add adc add cmp add or jle add add sub pop sub jb add add add and add outsl pusha add or add or sbbb add add add add sub push sub xor add add add add adc jle add add sub push sub adc add sbb add adc sub add outsl lods add or push sub sub add outsl lods add or add sub add sbb add outsb add add add adc jle add add incb or sub add add add or scas add or push or scas add or jle add add incb adc add push sub add adc push dec add push jae add or add or pop sbbb add add or sub or mov add add faddl add jle add add sub push sub add adc add add or add add xor add add add add adc sub add or add sub adc add adc add adc add add add add mov add or add sub xor add add add add adc jle add add mov add or add sub xor add add add add adc jle add add mov add or add sub xor add add add add add add add mov add or add sub xor add add add jle add add mov sub push sub xor add add adc add (bad) (bad) (bad) push or add outsl mov add or cmp add add add add incb or sub jle add add or add sub add or add or and add lea add add rolb or add or add or jae add or add add add or add sub add or ret add or add add add or je js add and sub and or add add lds add adc add add add adc jb push add lea add add lds add outsl (bad) add or or push adc adc lds add jae add or jle add add or add sub add or add or faddl add sub push sub add add add xor add pop add add adc add adc add add add add add pop add or leave add or sub push sub add xor add add pop add adc add lret or sub push sub xor add add add add adc rorb add add and add or add sub xor add add sbb add add sub add or sub push sub xor add add add add adc rorb add add and add or add sub xor add add adc add incb or sub sub add sub sub add sub add adc add add add add adc jle add or incb or sub sub add sub jle add or sub push sub add pop add into lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add jns je insl cs jb ja outsb addr16 arpl sub push jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs insb push jns je insl cs jb ja outsb addr16 arpl insb gs sub push jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs push inc inc inc push lcall xchg mov leave dec neg (bad) dec pop add add push add add add add add mov add add add adc add add jae add arpl outsl add add add dec inc add jae imul add push add arpl je push add popa add imul add xor add add arpl imul add push add arpl je popa add add gs pop add dec inc add jae imul add push add arpl je push add popa add imul add xor add add arpl imul add push add arpl je popa add add add inc add jae imul add push add arpl je push add popa add imul add xor add popa add imul add push add arpl je popa add add add add dec inc add jae imul add push add arpl je push add popa add imul add add add add arpl imul add push add arpl je popa add add add add add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc jae gs cs jb ja outsb addr16 arpl add add or outsl outsb inc popa je or outsl outsb push imul push jns je insl cs jb ja outsb addr16 imul add add or add add adc jae gs cs jb ja outsb addr16 imul add push addr16 or add add add add (bad) push add add add add add xor add add add add add and add add add sldt adc add add or push pop add xor add add and test add push sbb add add and test add movb adc add add and push push add sub add xor add pusha add add add add (bad) incl (bad) cld sti add stc testb cmc repnz repz add icebp call add in out cmc ljmp repz add call faddl lock add loope add (bad) add jecxz add (bad) add fadd add (bad) add fcmovne add fmul add fdivrl add fdivrl add fadd add aam add (bad) mov add fldcw add sarl add aam add int3 rolb lret mov add shlb out lret stos add (bad) mov add ror loop mov dec xchg add ret out stos add (bad) mov add les add ret lahf add shll mov scas add leave (bad) add mov pushf add mov test add mov xchg add mov add (bad) jb cmc sarl mov add mov add mov add mov add mov add mov fwait add mov jp mov mov shrb cwtl add shlb mov add mov add mov xchg add mov pop add test ja aam xchg add stos xchg shll xchg add mov lea in je lahf popf lods add lods jo out jo (bad) mov jnp shll jbe test lahf xchg je mov add test xchg add mov add popf test int test pushl add popf jle int3 lcall and xchg stos add xchg ret add mov add xchg jle in cmpsl push add movsb push add lods xor leave xchg jns ss add cltd gs mov jbe mov sub add rolb xchg add lea loopne dec add cmpsb sub jmp jne lds push add mov xchg dec add add xchg jmp data16 jp add mov mov mov pop add fwait and lcall pusha add mov negb or negl insl add outsb mov add jle add fwait add mov xchg adc imul (bad) cltd add cli xchg push add jle add xchg add add add xchg add add xchg add add add gs add jbe add mov add mov icebp mov add mov add pop mov add test add imul (bad) add add add addb and jle add jp add push lcall insb adc xlat jo add dec add imul lods pop xor ja dec add push sub lret add dec add inc add inc cs push add mov or pop inc cmp mov dec adc test add dec add mov inc adc stos inc add add inc add popf cmp add aaa add and add xor add xor add xor add add sub add jg add inc and add inc and add add and adc add or add add add mov mov mov mov mov mov mov mov mov mov mov mov aad aad mov mov mov mov mov mov mov mov mov lock aad aad mov mov mov mov mov mov mov mov cmc repnz in fcmovne aad aad mov mov mov mov mov mov mov in repnz repnz ljmp mov mov mov mov mov mov in in repnz repnz ljmp mov mov mov mov mov in iret jmp bnd sahf xlat repnz in in ljmp mov mov mov mov in int jmp ret pop sbb and xlat repnz in ljmp mov mov mov loopne lret int jmp mov adc sub xor xlat out repnz aad mov mov mov aad loopne lret lret int jmp mov movlps sbb and sub aaa cmp xlat out repnz aad mov mov mov fsubp (bad) leave leave lret lret int loop test adc sub xor cmp pusha sbbl mov mov aad fadd mov jmp test or adc sbb and sub xor pop addr16 aad mov mov mov rol (bad) leave leave lret jmp sahf test or and cmp pusha addr16 mov mov mov mov leave leave lret jmp sahf sahf or daa push pop pop push push push dec dec pop pop pusha push mov mov mov mov (bad) leave leave jmp xchg cltd or or jne jo jo push push push pop pusha addr16 mov mov mov mov (bad) leave jmp xchg xchg pop or jnp xor cmpl push pop pusha aad mov mov mov mov (bad) leave call or or movsb mov xchg mov pop pop aad mov mov mov mov (bad) loope xchg push pop or mov (bad) les push pop aad mov mov mov mov ret (bad) call push or or adc dec xchg jns cmp aad mov mov mov mov ret (bad) pushl or adc sub cmp mov mov mov mov mov ret call add or or adc sbb and sub aaa cmp mov mov mov scas mov mov call add pop or or and cmp mov mov mov mov mov call add pop or adc sub xor mov mov mov scas mov mov idiv scas pop pop add pop or or and daa xor cmp mov mov mov scas mov mov sub (bad) push push adc sub xor inc aad mov mov mov stos scas mov mov or xor dec fs arpl dec ds cmp mov mov jecxz mov mov test adc or sbb sub fucomi mov mov mov mov stos stos scas mov add add adc adc and sub push sbb in icebp in idiv std cmc aad mov mov mov lcall sub add add adc sbb sbb cltd xchg mov mov aad mov mov mov xchg popf mov mov add sbb outsb cltd xchg mov pusha addr16 cmc aad mov mov mov nop lcall int3 xor add add pop mov dec push push pop addr16 repnz mov mov mov lea scas scas aam xor add push or pop jnp pop inc inc dec push pop pusha lods out aad mov mov mov mov stos scas iret push outsl data16 inc inc aaa cmp dec push pop pusha lods in aad mov mov mov test stos stos iret push insl lahf jnp pusha pusha pop pop pop dec inc dec push pop pusha lods jmp mov mov mov jp test stos int or or daa xor jno jne jg dec inc dec push pop lahf call mov mov mov mov lret popa pop or or xchg mov mov dec inc dec push pop lahf out mov mov mov jb jle lea pop push or or insb movsl jae lret mov cmp cwtl in mov mov mov gs jle lea add or or and cmp loopne mov mov mov pop outsl jb jle nop xchg popf lds push pop or and cmp aad mov mov mov gs jle lea add or or and daa sub aaa cmp aad mov mov mov pop gs jle lea push pop or and cmp mov mov mov push push pop outsl jb jle lea pop or or adc sbb and sub aaa cmp (bad) mov mov mov push push pop gs jle lea push pop or or and cmp mov mov mov push push pop gs jle lods fwait mov push push inc sub xor das sub xor jge aad mov mov mov push push push pop push and movlps sbb and inc inc inc fs jge xchg aad mov mov mov ss or pop or or adc and cmp jne rcl fcomp mov mov mov out rcl rcl enter jo pop aaa aaa aaa aaa pop jo test rcl rcl rcl rcl mov mov mov mov mov mov enter enter sarb mov mov mov mov (bad) incl add incl add incl jg incl add incb (bad) incl add cld add (bad) incl add clc add pop incl add lock add add jmp add add add rolb add add addb add add add add aas add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add add add jg add add add jg add add add jg add add add jg add add add jg add add add jg add add add jg add add add jg add add add jg add add add jg add add add jg add add add jg add add add jg add add add jg add add add jg add add add jg add add add jg add add add incl add add add incl add incb pop (bad) incl add add add add add add add or (bad) (bad) incl (bad) cld stc add cli cmc add cmc repz hlt lock repz add out ljmp out faddl cmc ljmp repz add out add out add out add jecxz add loopne add jecxz add (bad) add (bad) add fmulp add fcmovnbe add fcmovbe add fnop add ffree add fmul add (bad) enter int3 add fidivrl ljmp add rol add fdivs out les ror into add int add (bad) mov lock mov repz in mov add int add enter (bad) mov add enter iret pushf add (bad) mov add les add (bad) lods add enter ret mov call (bad) mov fistpll rolb mov stos add mov movb mov add mov popf add mov jl jecxz stos add mov add lds jmp xchg add mov add mov add mov add scas cmpsb add mov add les clc (bad) jne lret add mov add mov add lods cmpsb add mov add mov fwait add shll cltd add cmpsl popf add mov add lods xchg add test add mov add scas mov aad xchg add test pop add movsb lahf add cmpsb nop add stos addb test addl stos jle (bad) mov cltd add mov add mov mov shlb mov pushl mov add mov add fwait (bad) add mov add cwtl jle movsl xchg xchg lret add scas add lods xor jo cmpsb add lods xor les ja jmp test add test add xchg pop add mov jno out inc add cmpsl and daa test add movsl push add lahf sub daa jl add mov push add xchg xor add mov pop add xchg sub mov sahf or add fwait adc add pushf or in sub mov lcall xor add xor fimul add into jle add xchg add stc xchg add mov test subl add popl add jnp add mov add mov add js add jp add arpl add xchg add add add test add jne add (bad) add lret je add pop cltd add jae add jle add jl add jns add outsl pop add ja add jne add jb add insb verw pop cmp aam add outsb push dec add push das add push add stos push xor leave arpl add pop add add add dec add push add popa inc cmp rclb scas dec or fwait inc sbb add dec add mov add sahf inc adc lahf ds add adc mov cmp add ss xchg cmp pop add cmp add xor add das add sub add add (bad) sub add or jno pop add invd add mov mov mov mov mov mov mov mov (bad) fidivr mov mov mov mov mov std stc (bad) (bad) fidivr mov mov mov fdivp xlat div div idiv std stc neg (bad) fidivr mov mov fsubrp rcl mul xor div (bad) std stc neg (bad) mov mov mov shr mov sbb sub push mov ljmp mov mov in enter jmp and cmp dec push jb aad loope mov mov (bad) lret int scas adc pop sub cmp dec pop gs jno mov mov mov out and push push and inc dec push push pop push mov mov rol lret pop adc sbb jb jbe jb fs fidivr mov mov out sbb push push jnp inc dec jl pop push mov mov mov pop or adc sahf jp fidivr mov fldcw vpmulhw pop or and nop inc dec pop fidivr mov xlat lods mov mov adc or sbb and cmp dec push pusha fidivr mov lods mov mov add or adc and xor dec pusha fidivr mov stos lods mov mov push or pop push and cmp dec push fidivr mov stos lods mov mov xor imul xor push fidivr mov movsl stos lods mov add or sub arpl popa lock mov fidivr mov cltd movsb movsl stos xchg sldt add sub mov sti fidivr mov xchg popf movsl stos lods mov add add xchg (bad) jae jae clc fidivr mov lea stos push add jbe pop gs neg mov mov xchg ret dec mov push dec dec push pop push mov mov lea and imul jbe pop pop gs fidivr mov jns lea or push jne cmpsb orb fidivr mov ja xchg or inc inc cmp dec push fs mov mov lea adc push and xor out mov mov insl je orl pop es cmp dec push loop mov mov insw ja xchg or push sbb sub fidivr mov pop data16 jg lahf inc dec push pop sub sub aas dec loopne mov mov push pop dec sbb push sbb es pop pop imul mov mov int3 int3 int3 int3 popl js (bad) cmpsl mov aad mov mov mov mov mov mov mov mov (bad) jmp (bad) (bad) inc pop (bad) incl add incb add cld add pop clc add pop clc add pop clc add pop clc add pop clc add pop clc add pop clc add pop clc add pop clc add pop clc add pop clc add psubb add clc add psubb add clc add psubb add clc add psubb add clc add psubb add clc add psubb add clc add psubb add incl add adc add and add add or mov add iret imul add outsb add fdivs add jbe add js add jnp add addb in test add mov add mov add lea add popl add nop add stc xchg add cld xchg add std xchg add (bad) cltd add lcall add icebp mov lods das push add pop or lcall add fwait adc jo adc lcall adc jge push add mov sbb add and add add dec daa add sub mov sub ljmp sub add xor mov scas aaa add jbe add jp add cmp mov cmp iret jp add jl add jle add cmpl add mov add inc add mov add mov dec dec add mov pop add (bad) popa add mov insl add xchg outsl add xchg jo in jb loope je iret cwtl je int ja (bad) add mov jge int (bad) add test add mov mov shlb add sahf popl shll xchg add lods xchg add mov xchg add mov lcall scas fwait add test add mov add sahf add lret fsubrl mov add mov add scas movsb add mov add mov add mov cmpsl add test add mov lods add int add fsubrl add iret scas add scas mov loope mov loop mov mov mov jecxz mov add mov add leave mov add fcmovb add loop add rol add fld add ffreep add ror add loope add (bad) lret add (bad) into add fcmovbe add fcmovnbe add (bad) add (bad) add loope add in add call in cmc jmp add out ljmp hlt icebp add add add (bad) incl cwtl cwtl cwtl cwtl cwtl cwtl inc inc inc inc cwtl cwtl cwtl cwtl cwtl cwtl cwtl cwtl cwtl cwtl cwtl inc pop xor inc inc cwtl cwtl cwtl cwtl cwtl cwtl cwtl inc add dec das pop push sub inc inc cwtl cwtl cwtl cwtl inc add xor cmpl cwtl cwtl cwtl inc pop or cmp mov inc cwtl cwtl cwtl xor or xchg mov push pop pop inc cwtl cwtl cwtl xor (bad) jge bound cwtl cwtl xor xchg xchg lea cwtl cwtl adc or dec pop imul cwtl cwtl cwtl aaa adc inc cltd xchg inc and inc cwtl cwtl cwtl cmp test pop inc and cwtl cwtl cwtl aas and push jle dec push push popa dec and inc xor adc outsl imul inc cmp mov cwtl cwtl cwtl cwtl inc inc cmp je jl push cwtl cwtl cwtl dec dec dec data16 ja dec dec inc cwtl cwtl cwtl cld aas mov mov loopne and rolb xor add rolb outsb rolb mov rolb mov rolb adc add jb add rolb outsb rolb mov xor add pusha add add add add add daa adc inc and push and sub ds or inc and inc and adc add push sub push push add add add add add add add add add and (bad) or cmp or cmp or push or pop or push aas and ds or ds or inc and inc and (bad) sbb or xor add add add add add inc inc add and (bad) and cs pop or pop add push push or cmp or aaa sbb cmp or cmp or cmp or dec and ds sub inc sbb push cmp or xor add add add add add inc inc add and (bad) and cs pop or and out xchg sub add cltd xor pushl add popa pop add out sbb iret aaa sbb cmp or cmp or pop or and cmp and sbb dec and push cmp or xor add add add add add push push add inc and (bad) and cs pop or and out lods aas add mov xor lcall xor lcall xor lcall and cli pop pop push repnz sbb or mov sbb or cmp or pop or and cmp and sbb dec and push cmp or add add add add add add dec and push cmp pop or and out scas inc add shrb jmp xor lcall xor lcall xor lcall xor lcall xor lcall and cli pop pop push repnz sbb or mov sbb or cmp or pop or and cmp inc and sbb add add add add add inc sub sub insb js add mov add aam add shrl jmp xor lcall insb inc (bad) in fmul (bad) fdivrl (bad) jmp xor lcall xor lcall xor lcall cmp ljmp add pop pop push repnz sbb or mov sbb or cmp or add add add add inc pop pop or or gs add mov add fdivs call outsl add shrl mov xor inc (bad) mov fcmovbe (bad) jmp int jmp iret ret jmp lret mov (bad) mov dec sbb lcall xor lcall xor lcall inc adc cli pop pop push repnz sbb or ss adc cmp sbb push push add add add inc pop pop or sbb and jne add mov add (bad) (bad) fnstenv call jno call outsb add mov inc adc mov jbe (bad) out fst (bad) in fmul (bad) ljmp jmp int jmp leave mov jmp (bad) mov fistpll (bad) (bad) mov dec and lcall lcall xor lcall xor incl sbb mov and es xor or add add add add sbb or push and sbb add mov add loopne add fnsave (bad) (bad) (bad) fdivs call jo jmp inc adc mov ja (bad) out (bad) (bad) in fcmovbe (bad) jmp int jmp rol jmp lret mov jmp les (bad) fidivr (bad) fidivl popf dec pushf cmp jne jmp ss cltd xor incl push adc aas sbb pop cmp push addb cmp or cmp or outsl and xlat mov add in add loope add fistpll (bad) fdivl (bad) fidivl fdivs jmp inc adc mov jnp push loope (bad) out fst (bad) in fxch (bad) ljmp jmp into ret lret loop mov (bad) fistpll stos (bad) (bad) mov call lods xchg call cmpsl xchg call movsb (bad) dec xchg jne mov inc inc lock sub mov push cmp and inc inc or add add add add sbb cmp add mov add call jg jmp jl jmp jp (bad) fidivr (bad) fdivl (bad) fnstenv jmp inc adc mov jl push loop (bad) out (bad) (bad) in fcmovnbe (bad) jmp int ljmp jmp int3 sar enter lds (bad) fidivr cmpsl (bad) fidivl sahf call lods cltd call stos xchg call cmpsb nop call mov xchg int3 lcall inc and cmp sub push cmp add add jbe add in xchg (bad) ljmp jmp jle jmp jl jmp jns (bad) fidiv (bad) (bad) jmp inc adc mov jge push in push loope (bad) out (bad) (bad) in fnop (bad) jmp int3 (bad) jmp into ret lret jecxz mov (bad) fistpll stos (bad) fdivrl mov call lods xchg call test call movsb (bad) call mov test arpl pop jp aaa sub dec xor add add movsl aas add lock (bad) in xchg (bad) jmp add jmp addb in add loope add fistpll (bad) fnsave jmp adc mov andl icebp jecxz (bad) out loopne (bad) in (bad) (bad) in fmul (bad) ljmp jmp (bad) mov call test call test call stos xchg call stos xchg call lods cwtl (bad) fdivs lcall cmpsb nop call mov xchg fs cmp inc sub jp aaa sub dec xor add add test add icebp mov (bad) out mov (bad) in xchg (bad) jmp add call jg jmp jge jmp jp (bad) fidivr jmp adc roll hlt jmp (bad) lock (bad) out (bad) (bad) in fnop (bad) jmp int3 jmp lret int cmp into pushf cmp pushf cmp sahf test iret lahf xchg iret lahf xchg shlb cwtl call lods xchg call test call movsl mov shlb cmp inc sub jp aaa sub dec xor add add test add repz push mov (bad) out mov (bad) in xchg (bad) ljmp jmp jle jmp jl jmp jns jmp adc ret inc test cmc jmp push call fdivr out loopne (bad) in (bad) (bad) in fmul dec xchg jge (bad) lea lret xchg jge ffreep mov fidivr mov dec xchg ja lret dec fwait (bad) call scas lcall cmpsb xchg call mov cmp inc and aaa xor dec xor add add test add cmc popl push mov push mov (bad) in xchg (bad) jmp add jmp addb in add loope add movsl ds mov mov les jmp push out push loop (bad) out (bad) jmp aad ljmp cmp test call pop mov jmp ljmp mov inc xchg (bad) mov xlat mov call lods cwtl call test (bad) jmp xlat inc and aaa xor dec xor add add test nop add hlt mov push mov (bad) out mov (bad) in xchg (bad) jmp add call jg jmp jge jmp inc adc inc mov imul jmp imul out hlt call (bad) out loopne inc ror add pushl sar xchg mov incl pop cltd incl fs incl gs jns call cmpsb (bad) (bad) fdivs fwait call stos xchg call cmpsl xchg jmp cmp inc and aaa xor dec xor add add test xchg add (bad) popl push lea push mov (bad) out mov (bad) in xchg (bad) ljmp jmp jle jmp inc adc pushl icebp out push out jmp push out push loop (bad) call (bad) sar jmp int jmp rol jmp lret mov jmp pushl xchg ret decl mov mov call lods cwtl call test cmp jp cmp xor add add test xchg add clc xchg add cmc popl push mov push mov (bad) in xchg (bad) jmp add jmp addb movsl aas add test add add jne (bad) stc hlt icebp (bad) clc lock push in out hlt jmp fdivrp lock (bad) out fst (bad) in fxch (bad) ljmp jmp int jmp lret loop mov (bad) fnstcw test (bad) fnstenv fwait call lods xchg jmp inc xlat inc and cmp xor add add test xchg add stc xchg add notl add icebp mov (bad) out mov (bad) in xchg (bad) jmp add call inc add jg add add add mov div (bad) stc repnz push out ljmp out push jecxz (bad) out (bad) (bad) in fcmovnbe (bad) jmp int ljmp jmp int3 mov jmp les (bad) fidivr (bad) fidivl popf call lods cltd jmp inc xlat inc cs push cmp xor add add test xchg add cli xchg add stc xchg add (bad) popl push lea push mov (bad) out mov (bad) in xchg (bad) ljmp (bad) jg add add add mov clc idiv stc hlt icebp (bad) clc lock push in call push in push loope (bad) out fst (bad) in fnop (bad) jmp lret (bad) jmp into ret lret loop mov (bad) fistpll stos (bad) fdivrl mov jmp inc xlat inc cs push cmp xor add add stos inc add (bad) cwtl add cld xchg add cli xchg add clc xchg add cmc popl push mov push mov (bad) in xchg (bad) jmp add cmpsb inc add jg add add add mov cli clc (bad) cli div (bad) stc repnz push out ljmp out push jecxz (bad) out (bad) (bad) in (bad) (bad) in fmul (bad) ljmp jmp int3 sar enter lds (bad) fidivr cmpsl (bad) fidivl sahf jmp inc xlat dec xor pop cmp dec or add add add add cltd add (bad) cwtl add sti xchg add stc xchg add notl add icebp mov (bad) out mov (bad) in xchg jmp sub incl pop (bad) mov in in bnd (bad) cli cmc repnz clc lock push in call push in push loope (bad) out (bad) (bad) in fcmovbe (bad) jmp int3 (bad) jmp iret ret jmp lret mov jmp ret fistpll stos (bad) fdivrl mov xlat dec xor pop cmp dec or add add add add fwait add (bad) cltd add std xchg add cli xchg add stc xchg add (bad) popl push lea push mov (bad) out mov ljmp push sub fsubs xchg (bad) in mov js (bad) xchg addr16 mov jmp stos ja loop mov jmp xlat lret push fcmovne (bad) in (bad) (bad) in fmul (bad) ljmp jmp int3 sar leave mov jmp (bad) mov fidivr test fidivl inc rorl and cmp sub push or add add add add popf or lcall add cld xchg add cli xchg add clc xchg add cmc popl push mov push mov (bad) mov mov (bad) jmp mov (bad) cli shlb (bad) fsubrs jge out mov jne out jo out mov (bad) jmp stos xchg jmp mov inc test dec mov (bad) ffree mov loope mov fistpll stos (bad) fdivrl dec mov push ds dec pop add add stos inc add lcall pop (bad) lcall add sti xchg add cli xchg add notl add repz adc cmc enter std sti (bad) (bad) (bad) (bad) (bad) std jmp (bad) sti out (bad) cli in (bad) cld call scas (bad) clc fdivs (bad) clc shrl push lds (bad) dec xchg dec orl adc jmp sbb decl pushl jnp (bad) fdivs dec sahf dec sub sub add add add mov or lcall add std xchg add sti xchg add stc xchg add clc fwait sbb (bad) (bad) std cld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli in (bad) clc loopne push faddp (bad) cli in push aad (bad) stc ffree push int3 scas (bad) clc aad (bad) sti xlat mov call mov (bad) jnp and decl add jb add push and (bad) sbb decl sub sarl adc sub pop push sub push add add stos inc add (bad) jmp or lcall add std xchg add cli xchg add stc lcall (bad) std cld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti idiv neg (bad) push fcmovb push xlat mov push iret mov clc fdivrs (bad) call mov (bad) mov test mov pop dec xchg jbe (bad) jbe (bad) mov push adc call sbb push cmp or add add stos inc push (bad) jmp pop (bad) lcall pop (bad) lcall add cld xchg add cli xchg add negl sahf (bad) (bad) std sti (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti idiv push out push fadd push aam push sarl (bad) cld faddp (bad) (bad) fadd dec lcall les jb shll xchg call movsb (bad) call mov test (bad) je call sbb push xor or add add add test (bad) jmp adc lcall add (bad) std xchg add sti xchg add stc xchg add int3 insb adc out ret (bad) std sti (bad) (bad) (bad) (bad) (bad) (bad) sti idiv push out (bad) push out out sarb (bad) cld loop (bad) (bad) fcmove call popf xchg inc mov lret dec pushf test (bad) scas lcall stos xchg call cmpsb nop call mov xchg ret ja lcall sbb push xor or add add add stos sub jmp sbb jmp or lcall add std xchg add cli xchg add enter fcomps mov (bad) (bad) sti idiv std hlt in (bad) fbstp sar cld out (bad) call enter xchg inc xchg cmp aam xchg (bad) fidivl mov call lods xchg call test call movsl mov shlb inc lcall or push xor or add add add lods xor ljmp and jmp (bad) lcall (bad) (bad) cwtl add cld xchg add int add fsubl aad call div jmp mov inc (bad) fldenv scas (bad) fcomps (bad) fnstenv movsb (bad) fnstsw (bad) fidivl sahf call scas lcall cmpsb nop call mov inc lcall sbb push xor or add add add scas xor (bad) ljmp sbb (bad) lcall add (bad) std xchg add shrl (bad) fbld loop lock (bad) fisubr (bad) jmp mov lret xchg cmp lcall shlb call cmpsl nop call test sahf (bad) fnstenv call lods cwtl call test call movsl mov int3 (bad) inc jmp sbb push xor or add add add mov (bad) ljmp sub jmp sbb jmp or lcall add aad add loop je cmc ljmp icebp jecxz (bad) out (bad) jmp (bad) mov dec sahf xchg (bad) lea int cmp lcall enter leave xchg jns lret xchg jl fdivs lahf call scas lcall cmpsl xchg dec test cmpsl ds xor or push xor or add add add mov (bad) ljmp xor ljmp and jmp (bad) lcall (bad) fnstenv jmp scas jbe imul out hlt jmp fdivrp lock (bad) out fst ljmp xchg stos jmp jp jmp gs pushl test ljmp xchg xlat scas fwait (bad) fnstenv call lods cwtl call test dec ljmp sbb push xor or add add add mov (bad) pushl xor (bad) ljmp sbb (bad) lcall add jmp mov push out ljmp out push in (bad) out (bad) pushl mov jmp xchg into jmp jp incl push lcall pop cltd incl imul fstpt movsb (bad) fnstenv lcall mov scas inc add xor or push xor or add add add mov (bad) pushl (bad) ljmp sub jmp sbb jmp or loope add ljmp push in call push out push loop (bad) out (bad) (bad) in fcmovbe (bad) jmp int jmp iret ret jmp lret ffree mov jmp mov cmpsl (bad) fidivl popf call lods cltd (bad) fcoms add xor or push xor or add add add mov inc (bad) pushl aaa (bad) ljmp sub jmp sbb lcall add in mov out push out jmp cmc jmp push call (bad) lock (bad) in (bad) (bad) jmp into (bad) ljmp jmp int jmp leave mov jmp ret fidivr test (bad) fnstenv fwait (bad) fistl add xor or push xor or add add add mov dec (bad) pushl cmp (bad) ljmp (bad) jmp adc push mov repnz clc icebp in push in jmp push out push loop (bad) out (bad) (bad) in fcmovbe (bad) jmp int jmp iret ret jmp lret mov jmp les (bad) fnstsw (bad) fidivl popf (bad) ficom add xor or push xor or add add add mov push (bad) pushl inc (bad) pushl xor ljmp and jmp push mov cmc (bad) stc repz push lock push jmp push call (bad) lock (bad) out fst (bad) in fxch (bad) ljmp jmp int jmp leave mov jmp ret fidivr test (bad) fnstenv (bad) mov sbb push xor or add add add mov pop (bad) (bad) mov dec (bad) pushl cmp ljmp sub jmp add test (bad) cld stc idiv cli cmc repnz clc repnz push in jmp push out push jecxz (bad) out (bad) (bad) in fcmovnbe (bad) jmp int jmp rol jmp lret mov jmp les (bad) fnstsw (bad) fidivl push inc push add xor or push xor or add add add shll mov push (bad) (bad) mov inc (bad) pushl ss ljmp push xchg add (bad) std sti cli (bad) sti div (bad) stc repz lock push in out hlt call fdivrp lock (bad) out fst (bad) in fxch (bad) ljmp jmp into ret leave mov jmp ret mov fidivr stos (bad) (bad) push inc push add xor or dec xor or add add add les shlb mov push (bad) pushl inc (bad) pushl xor ljmp push (bad) cli pushf adc (bad) cli movsb sub stc mov daa (bad) stc mov push mov jo idivb imul ret mov out int3 stos (bad) in leave cmpsl (bad) jmp mov jmp les jmp (bad) mov fidivr test ljmp pushl push mov cmp adc add add add add (bad) jb inc push (bad) (bad) mov push (bad) std mov xchg hlt fdivrs (bad) out (bad) (bad) in fcmovbe (bad) jmp int ljmp jmp int (bad) jmp mov xchg jmp mov nop jmp scas jno in cmpsl push (bad) jmp push (bad) ljmp (bad) jmp fwait and negb pop push cwtl push push cwtl adc pushl push vmread sbb cmp adc add add stos dec adc dec ja dec test cld fldt imul jmp cmc in out hlt jmp (bad) icebp loop (bad) out (bad) (bad) in (bad) (bad) in fxch (bad) ljmp jmp iret ret jmp int3 sar leave mov jmp ret fistpll stos (bad) fdivrl sahf dec popf test int3 lcall mov dec jmp inc pop pushl xor jmp sbb aaa xor or sub add add add fwait cmp ljmp push sub test push sub mov cmp (bad) mov ja inc mov les push ret inc test roll (bad) mov jle (bad) mov push ljmp sub mov cmp ljmp add jb add and push and cmp or cmp or aaa and push sub add add add andl add andl add andl add add and popa andl add add andl add andl add and dec andl add andl add andl add (bad) incb (bad) incl add cld add (bad) incl add clc add (bad) add push add add add jmp add add add inc add add add incl add incl add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incl add sub add and add inc add add add add sub add inc and sub and push aas and cmp and xor and and and pop inc sbb or sbb pop xor add add add add add add add add add sub add and cs and xchg pop enter (bad) xor push or and cmp and xor and and and pop inc sbb or sbb pop xor add add add add add add add sub add cmp and mov xor lcall and sti pop pop push hlt dec sbb or lds push or and cmp and xor and and and push inc and or sub add add add xor add and cs and mov data16 cltd xor lcall xor lcall xor incl and sti pop pop push hlt dec sbb or lds push or and cmp or cmp sub add inc inc add inc sub sub and mov insl add shrl lcall inc adc jmp (bad) mov pushl aas (bad) cltd xor lcall and ljmp add pop pop push hlt dec sbb or mov cmp adc cmp push add add inc and or push and sbbb call jo call insl add lahf aas (bad) mov dec jmp (bad) mov (bad) call lret mov (bad) fnstenv jno scas pop lcall xor incl and ljmp add xor and inc sub sbb and push add add cmp and imul add fnsave (bad) fnstenv call outsl add lahf inc adc mov lret in fcmovbe (bad) ljmp jmp leave mov (bad) fnstsw (bad) fdivs mov mov pop ljmp sub pop popf inc sub cs cmp or add add add add push mov add in add in add loopne add fdivl (bad) fdivs lcall je jmp int (bad) out fst (bad) jmp into (bad) jmp int3 mov (bad) ffreep mov fnstsw mov call test mov into popf test leave popf mov inc sub mov sub cmp sub add add add test (bad) ljmp jmp jl (bad) fidivr (bad) (bad) mov js jmp rol push loope (bad) in fcmovnbe (bad) ljmp jmp (bad) mov (bad) fidivl mov call lods xchg call cmpsb nop call mov xchg std inc sub mov sub cmp sub addb add add add pop add lock (bad) in test (bad) call jle jmp jnp (bad) fnsave jmp jnp (bad) ljmp (bad) out (bad) (bad) in fmul (bad) call mov test into sahf test iret mov mov (bad) lods xchg call stos xchg call mov cltd std inc sub mov das and addb add add add popa add repnz (bad) out mov (bad) jmp add out add in add loopne add mov jg (bad) in fmul push out push loope (bad) in (bad) call mov jmp mov call mov movsl dec xchg jnp lret call lods cwtl call cmpsb nop dec mov pop mov das and addb add add add bound push mov push mov (bad) in xchg (bad) ljmp jmp jl jmp andb fcmovbe push jmp push in (bad) out (bad) jmp test call test pop cltd incl arpl dec cwtl jge fdivs xchg dec movsb sahf std inc sub mov das and addb add add add arpl (bad) clc xchg add repz push mov (bad) in test (bad) jmp jle lcall inc xor in fcmovbe push out jmp push loop call lret jmp int3 (bad) call (bad) mov ljmp mov mov dec movsb lahf std inc sub mov das and addb add add add gs cli xchg add notb add out mov (bad) jmp add out add jg add sbb fst (bad) clc lock push jmp push in push loopne (bad) in fnop (bad) jmp into ret enter ret fnstsw (bad) fdivs mov mov das and addb add add add data16 cld xchg add stc xchg add cmc mov push mov (bad) in xchg (bad) ljmp lcall (bad) (bad) cli cmc repnz out ljmp loop (bad) out fst (bad) jmp int call lret mov (bad) fistpll test dec test std inc and push sub addb add add add data16 (bad) cwtl add sti xchg add clc xchg add repz push mov (bad) in test (bad) jg add test (bad) ljmp (bad) clc icebp out push in out repnz push loopne (bad) in fcmovbe (bad) ljmp jmp leave mov (bad) fnstsw dec stos movsl cld inc sub and pop cmp push addb add add add addr16 lcall add cli xchg add notb add out mov inc sbbl int (bad) fldcw cmp stos jle mov scas mov jecxz mov jmp int jmp enter int3 mov (bad) ffreep mov (bad) mov dec stos movsl sti inc sub and dec cmp or add add add add imul (bad) lcall add stc xchg add cmc popl push mov (bad) std div (bad) (bad) cli hlt (bad) std out fdivr clc fdivs out lret test call test pushf (bad) out mov lcall and je cmp decl xchg cmp cltd xchg cmp adc push dec and push add add int3 imul lcall add sti xchg add cli mov sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli cmc (bad) cli out (bad) out int push (bad) mov icebp iret mov cld fnstcw jmp cmp scas push sbb scas dec or xchg cmp add xor push ret cmovbe add add add add insl adc jmp or (bad) std xchg add cli xchg add mull xlat (bad) (bad) (bad) (bad) (bad) (bad) cld stc (bad) (bad) repz (bad) call fidivrl (bad) mov mov shlb (bad) call mov jle xchg das add xor or inc xor or add add add outsb adc (bad) jmp or (bad) cwtl add cld xchg add stc xchg add sarb push in (bad) (bad) cld stc (bad) std repz (bad) cld jecxz jmp mov jnp iret sahf xchg (bad) lods xchg call scas lcall mov test pushf xor or inc xor or add add add jo (bad) ljmp sbb (bad) lcall add sti xchg add lret je (bad) out aam push (bad) (bad) jmp xchg (bad) ficoml popf dec mov popf (bad) (bad) movsl (bad) fnstenv xchg call cmpsb nop call mov add xor or inc xor or add add add jb (bad) ljmp (bad) jmp or (bad) std xchg add sarl push call ret (bad) lods (bad) fldenv cmp into pushf test into pushf test shll cltd call scas lcall mov add xor or inc xor or add add add jae (bad) pushl sub (bad) jmp or (bad) cltd add fadds out repnz push loopne ljmp pushf mov pushl insl mov jmp test lahf call lods cwtl call cmpsl xchg ljmp or inc xor or add add add jne (bad) pushl (bad) ljmp push (bad) jmp add fimul jmp hlt jmp fdivr mov (bad) pushl mov scas pushl test dec scas test fidivl pushf call stos xchg pushl sbb inc xor or add add add ja (bad) pushl aas (bad) ljmp es jmp or (bad) stc repnz push in call push loope (bad) in fcmovnbe (bad) ljmp jmp lret loop mov fidivr cmpsl (bad) fnstenv cltd pushl sbb inc xor or add add add jns (bad) (bad) mov dec (bad) pushl cs jmp push (bad) jmp sub cli cmc repz out in push ljmp out (bad) (bad) in fmul (bad) jmp int jmp (bad) mov (bad) fnstsw movsb (bad) fdivs add xor or inc xor or add add add jp (bad) (bad) mov dec (bad) pushl (bad) ljmp push push popf sub cld stc idiv stc repz in call push loope (bad) in fcmovnbe (bad) jmp int3 jmp rol jmp lret loop mov fistpll cmpsl (bad) fidivl pushl push mov sbb add add add jl (bad) inc arpl (bad) mov dec (bad) pushl xor ljmp adc (bad) cli les clc (bad) jne idivl lods push (bad) mov out int (bad) in leave cmpsl (bad) jmp (bad) mov (bad) fnstsw dec push add ss test cmp femms add add int3 jge (bad) inc insl (bad) inc fs std (bad) jbe cli rclb (bad) out loopne (bad) in fcmovnbe (bad) jmp int3 (bad) call int jmp enter mov jmp mov jmp mov jmp lods (bad) (bad) fisubr dec jmp fwait inc (bad) fadds sub ficompl inc and jno and and pop add add add mov xor lret (bad) xchg jns enter (bad) (bad) jae lds insb inc mov ret inc andl popa (bad) mov jb pushl pop cmp movsb dec and cmpsl dec es stos push cs cmpsl dec sub cmpsl dec fisttpl inc push mov cmp xor inc inc add andl add and sub and cmp daa add jo and addb add mov or (bad) xor outsb xchg push dec andl add push xor incl add incb add cld add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add ljmp add add add add add add add add cs add inc or dec sub xchg and fwait inc and xchg or push or cmp or and pop inc and or add dec xor add sub push inc daa or mov add jae add popa push push fimul or xor or scas cmp or inc or and sbb adc inc sub or es (bad) mov cmp dec test mov das push pushl add pop push push faddl or ss lods dec sub (bad) inc sub adc add add dec sub push fwait inc add shrl dec fs mov cmp in fcmovbe jmp rol jmp ret (bad) jge mov sub (bad) sub loop and lcall jmp jnp dec imul push loope (bad) ljmp (bad) fstpt popf call movsb mov lret sti dec das and mov mov jmp addb aam add mov dec push call sar scas cmpsb fwait pushl fwait (bad) call test dec mov and push rcll hlt lea (bad) in test (bad) fdivs (bad) jns xor imul ljmp mov mov pop jb (bad) fnstenv fwait sti dec xor mov rcll stc xchg add icebp mov (bad) fdivl pushl pop or cli hlt icebp push ljmp call les call scas mov mov lret push add std xchg add notb add shll mov (bad) push lret iret mov (bad) fnstcw stos sti dec sub sbb add add in pop add lcall add cli mov (bad) push ffreep push sarl (bad) mov aas sbb jo adc xchg inc cs sub inc sub sbb add add add add pop or lcall add icebp mov lock (bad) sti repnz lods xchg dec mov nop dec (bad) insl ljmp push fisttp or jmp sbb jmp or cmc popl (bad) in sarl call xchg jo iret mov mov xlat scas fwait dec cwtl je outsl sub fisttp or jmp scas aaa (bad) jmp add repnz push in decl pushf scas decl test call mov push fimul or out xor (bad) ljmp adc mul leave push jmp (bad) out (bad) (bad) jmp (bad) mov (bad) fldt push fstl or in inc (bad) (bad) mov inc (bad) std mov scas (bad) stc loop push fdivrs (bad) ljmp jmp lods jb mov or pop cmp insl dec xor push xlat outsl inc mov jecxz mov (bad) ljmp (bad) fldcw mov lret mov loopne outsb gs (bad) decl add add rolb add add add add add add add add add add jecxz add inc add inc add inc add inc add inc add inc add inc add rolb inc add decl inc add add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add inc add sbb add inc add and inc add add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add inc hlt (bad) jg add and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add add jns je insl cs jb ja outsb addr16 arpl sub push jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs insb push jns je insl cs jb ja outsb addr16 arpl insb gs sub push jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs push gs cs jb ja outsb addr16 outsl imul jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs push inc or fisttp fcmovbe xchg xchg inc push lcall pop sahf sub flds lods loope mov rorb mov loope mov aam mov mov jo dec lahf rol add in enter int3 jmp or daa sbb aam iret movsb xlat xchg (bad) cwtl xor fimull loopne mov ror add in dec imul dec mov and sub jnp push and movsb lret adc sbb leave pop xchg xor xor adc mov dec and jp push sub pop pop out xor pop fiaddl lods arpl push gs inc mov xchg mov add or add adc add add add add add add add or add lahf add add add add add aas sldt and add add add out push add std add add or add lods add add add add adc add add dec push add xchg add add add inc or add add or add loope add xor add rorl add test add mov or add adc add add loope add jne add or add nop sldt sbb add out or add or add add (bad) or add or add or add jo add movl add fstl add add jae add arpl outsl add add add dec inc add jae imul add push add arpl je push add popa add imul add xor add add arpl imul add push add arpl je popa add add gs pop add dec inc add jae imul add push add arpl je push add popa add imul add xor xor add add arpl imul add push add arpl je popa add add add inc add jae imul add push add arpl je push add popa add imul add xor xor add add arpl imul add push add arpl je popa add add add add dec inc add jae imul add push add arpl je push add popa add imul add xor xor add add arpl imul add push add arpl je popa add add add inc add jae imul add push add arpl je push add popa add imul add xor xor add add arpl imul add push add arpl je popa add add add inc add jae imul add push add arpl je push add popa add imul add xor xor add add arpl imul add push add arpl je popa add add add add dec inc add jae imul add push add arpl je push add popa add imul add xor xor add popa add imul add push add arpl je popa add add add pop add dec inc add jae imul add push add arpl je push add popa add imul add xor add add add arpl imul add push add arpl je popa add add gs pop add dec inc add jae imul add push add arpl je push add popa add imul add xor aaa add add add arpl imul add push add arpl je popa add add add inc add jae imul add push add arpl je push add popa add imul add xor cmp add add arpl imul add push add arpl je popa add add add add dec inc add jae imul add push add arpl je push add popa add imul add xor cmp add add arpl imul add push add arpl je popa add add add pusha add dec inc add jae imul add push add arpl je push add popa add imul add xor add add arpl imul add push add arpl je popa add add gs pusha add dec inc add jae imul add push add arpl je push add popa add imul add xor xor add add arpl imul add push add arpl je popa add add add inc add jae imul add push add arpl je push add popa add imul add xor xor add add arpl imul add push add arpl je popa add add add add dec inc add jae imul add push add arpl je push add popa add imul add xor xor add add arpl imul add push add arpl je popa add add add arpl add add imul add push add arpl je push add popa add imul add xor xor add add arpl imul add push add arpl je popa add add add inc add jae imul add push add arpl je push add popa add imul add xor xor add add arpl imul add push add arpl je popa add add add add dec inc add jae imul add push add arpl je push add popa add imul add xor xor add popa add imul add push add arpl je popa add add add add dec inc add jae imul add push add arpl je push add popa add imul add xor add add add arpl imul add push add arpl je popa add add gs add dec inc add jae imul add push add arpl je push add popa add imul add xor aaa add add add arpl imul add push add arpl je popa add add add inc add jae imul add push add arpl je push add popa add imul add xor cmp add add arpl imul add push add arpl je popa add add add add dec inc add jae imul add push add arpl je push add popa add imul add xor cmp add add arpl imul add push add arpl je popa add add add push add jae imul add push add arpl je push add popa add imul add xor add add arpl imul add push add arpl je popa add add gs push add jae imul add push add arpl je push add popa add imul add xor xor add add arpl imul add push add arpl je popa add add add inc add jae imul add push add arpl je push add popa add imul add xor xor add add arpl imul add push add arpl je popa add add add add dec inc add jae imul add push add arpl je push add popa add imul add xor xor add add arpl imul add push add arpl je popa add add add imul dec inc add jae imul add push add arpl je push add popa add imul add xor xor add add arpl imul add push add arpl je popa add add add inc add jae imul add push add arpl je push add popa add imul add xor xor add add arpl imul add push add arpl je popa add add add add dec inc add jae imul add push add arpl je push add popa add imul add xor xor add popa add imul add push add arpl je popa add add add insl add dec inc add jae imul add push add arpl je push add popa add imul add xor add add add arpl imul add push add arpl je popa add add gs insl add dec inc add jae imul add push add arpl je push add popa add imul add xor aaa add add add arpl imul add push add arpl je popa add add add inc add jae imul add push add arpl je push add popa add imul add xor cmp add add arpl imul add push add arpl je popa add add add add dec inc add jae imul add push add arpl je push add popa add imul add xor cmp add add arpl imul add push add arpl je popa add add add jo add add jae imul add push add arpl je push add popa add imul add xor add add arpl imul add push add arpl je popa add add gs jo add add imul add push add arpl je push add popa add imul add xor xor add add arpl imul add push add arpl je popa add add add inc add jae imul add push add arpl je push add popa add imul add xor xor add add arpl imul add push add arpl je popa add add add add dec inc add jae imul add push add arpl je push add popa add imul add xor xor add add arpl imul add push add arpl je popa add add gs jb add add imul add push add arpl je push add popa add imul add xor xor add add arpl imul add push add arpl je popa add add add inc add jae imul add push add arpl je push add popa add imul add xor xor add add arpl imul add push add arpl je popa add add add add dec inc add jae imul add push add arpl je push add popa add imul add xor xor add popa add imul add push add arpl je popa add add add inc add jae imul add push add arpl je push add popa add imul add xor add add add arpl imul add push add arpl je popa add add gs jne add add imul add push add arpl je push add popa add imul add xor aaa add add add arpl imul add push add arpl je popa add add add inc add jae imul add push add arpl je push add popa add imul add xor cmp add add arpl imul add push add arpl je popa add add add add dec inc add jae imul add push add arpl je push add popa add imul add xor cmp add add arpl imul add push add arpl je popa add add add inc add jae imul add push add arpl je push add popa add imul add xor add popa add imul add push add arpl je popa add add gs js add add imul add push add arpl je push add popa add imul add xor add add arpl imul add push add arpl je popa add add add inc add jae imul add push add arpl je push add popa add imul add xor add add arpl imul add push add arpl je popa add add add add dec inc add jae imul add push add arpl je push add popa add imul add xor add add arpl imul add push add arpl je popa add add gs jp add add imul add push add arpl je push add popa add imul add xor add add arpl imul add push add arpl je popa add add add inc add jae imul add push add arpl je push add popa add imul add xor add add arpl imul add push add arpl je popa add add add add dec inc add jae imul add push add arpl je push add popa add imul add xor add add arpl imul add push add arpl je popa add add add jge add add imul add push add arpl je push add popa add imul add xor add add arpl imul add push add arpl je popa add add gs jge add add jae imul add push add arpl je push add popa add imul add add add add arpl imul add push add arpl je popa add add add inc add jae imul add push add arpl je push add popa add imul add aaa add add add arpl imul add push add arpl je popa add add add add dec inc add jae imul add push add arpl je push add popa add imul add cmp add add arpl imul add push add arpl je popa add add add addb dec inc add jae imul add push add arpl je push add popa add imul add cmp add add arpl imul add push add arpl je popa add add gs addb and add add add add insb add add jb inc add arpl popa add add addl je bound xor add insb add add jb dec add add insb add add je push add (bad) add inc add add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc jae gs cs jb ja outsb addr16 arpl add add or outsl outsb inc popa je or outsl outsb push imul push jns je insl cs jb ja outsb addr16 imul add add or add add adc jae gs cs jb ja outsb addr16 imul add push addr16 or add add add add (bad) push add add add add add xor add add add add add and add add add sldt adc add add or push pop add xor add add and test add push sbb add add and test add movb adc add add and push push add sub add xor add pusha add add add add (bad) incl (bad) cld sti add stc testb cmc repnz repz add icebp call add in out cmc ljmp repz add call faddl lock add loope add (bad) add jecxz add (bad) add fadd add (bad) add fcmovne add fmul add fdivrl add fdivrl add fadd add aam add (bad) mov add fldcw add sarl add aam add int3 rolb lret mov add shlb out lret stos add (bad) mov add ror loop mov dec xchg add ret out stos add (bad) mov add les add ret lahf add shll mov scas add leave (bad) add mov pushf add mov test add mov xchg add mov add (bad) jb cmc sarl mov add mov add mov add mov add mov add mov fwait add mov jp mov mov shrb cwtl add shlb mov add mov add mov xchg add mov pop add test ja aam xchg add stos xchg shll xchg add mov lea in je lahf popf lods add lods jo out jo (bad) mov jnp shll jbe test lahf xchg je mov add test xchg add mov add popf test int test pushl add popf jle int3 lcall and xchg stos add xchg ret add mov add xchg jle in cmpsl push add movsb push add lods xor leave xchg jns ss add cltd gs mov jbe mov sub add rolb xchg add lea loopne dec add cmpsb sub jmp jne lds push add mov xchg dec add add xchg jmp data16 jp add mov mov mov pop add fwait and lcall pusha add mov negb or negl insl add outsb mov add jle add fwait add mov xchg adc imul (bad) cltd add cli xchg push add jle add xchg add add add xchg add add xchg add add add gs add jbe add mov add mov icebp mov add mov add pop mov add test add imul (bad) add add add addb and jle add jp add push lcall insb adc xlat jo add dec add imul lods pop xor ja dec add push sub lret add dec add inc add inc cs push add mov or pop inc cmp mov dec adc test add dec add mov inc adc stos inc add add inc add popf cmp add aaa add and add xor add xor add xor add add sub add jg add inc and add inc and add add and adc add or add add add mov mov mov mov mov mov mov mov mov mov mov mov aad aad mov mov mov mov mov mov mov mov mov lock aad aad mov mov mov mov mov mov mov mov cmc repnz in fcmovne aad aad mov mov mov mov mov mov mov in repnz repnz ljmp mov mov mov mov mov mov in in repnz repnz ljmp mov mov mov mov mov in iret jmp bnd sahf xlat repnz in in ljmp mov mov mov mov in int jmp ret pop sbb and xlat repnz in ljmp mov mov mov loopne lret int jmp mov adc sub xor xlat out repnz aad mov mov mov aad loopne lret lret int jmp mov movlps sbb and sub aaa cmp xlat out repnz aad mov mov mov fsubp (bad) leave leave lret lret int loop test adc sub xor cmp pusha sbbl mov mov aad fadd mov jmp test or adc sbb and sub xor pop addr16 aad mov mov mov rol (bad) leave leave lret jmp sahf test or and cmp pusha addr16 mov mov mov mov leave leave lret jmp sahf sahf or daa push pop pop push push push dec dec pop pop pusha push mov mov mov mov (bad) leave leave jmp xchg cltd or or jne jo jo push push push pop pusha addr16 mov mov mov mov (bad) leave jmp xchg xchg pop or jnp xor cmpl push pop pusha aad mov mov mov mov (bad) leave call or or movsb mov xchg mov pop pop aad mov mov mov mov (bad) loope xchg push pop or mov (bad) les push pop aad mov mov mov mov ret (bad) call push or or adc dec xchg jns cmp aad mov mov mov mov ret (bad) pushl or adc sub cmp mov mov mov mov mov ret call add or or adc sbb and sub aaa cmp mov mov mov scas mov mov call add pop or or and cmp mov mov mov mov mov call add pop or adc sub xor mov mov mov scas mov mov idiv scas pop pop add pop or or and daa xor cmp mov mov mov scas mov mov sub (bad) push push adc sub xor inc aad mov mov mov stos scas mov mov or xor dec fs arpl dec ds cmp mov mov jecxz mov mov test adc or sbb sub fucomi mov mov mov mov stos stos scas mov add add adc adc and sub push sbb in icebp in idiv std cmc aad mov mov mov lcall sub add add adc sbb sbb cltd xchg mov mov aad mov mov mov xchg popf mov mov add sbb outsb cltd xchg mov pusha addr16 cmc aad mov mov mov nop lcall int3 xor add add pop mov dec push push pop addr16 repnz mov mov mov lea scas scas aam xor add push or pop jnp pop inc inc dec push pop pusha lods out aad mov mov mov mov stos scas iret push outsl data16 inc inc aaa cmp dec push pop pusha lods in aad mov mov mov test stos stos iret push insl lahf jnp pusha pusha pop pop pop dec inc dec push pop pusha lods jmp mov mov mov jp test stos int or or daa xor jno jne jg dec inc dec push pop lahf call mov mov mov mov lret popa pop or or xchg mov mov dec inc dec push pop lahf out mov mov mov jb jle lea pop push or or insb movsl jae lret mov cmp cwtl in mov mov mov gs jle lea add or or and cmp loopne mov mov mov pop outsl jb jle nop xchg popf lds push pop or and cmp aad mov mov mov gs jle lea add or or and daa sub aaa cmp aad mov mov mov pop gs jle lea push pop or and cmp mov mov mov push push pop outsl jb jle lea pop or or adc sbb and sub aaa cmp (bad) mov mov mov push push pop gs jle lea push pop or or and cmp mov mov mov push push pop gs jle lods fwait mov push push inc sub xor das sub xor jge aad mov mov mov push push push pop push and movlps sbb and inc inc inc fs jge xchg aad mov mov mov ss or pop or or adc and cmp jne rcl fcomp mov mov mov out rcl rcl enter jo pop aaa aaa aaa aaa pop jo test rcl rcl rcl rcl mov mov mov mov mov mov enter enter sarb mov mov mov mov (bad) incl add incl add incl jg incl add incb (bad) incl add cld add (bad) incl add clc add pop incl add lock add add jmp add add add rolb add add addb add add add add aas add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add add add jg add add add jg add add add jg add add add jg add add add jg add add add jg add add add jg add add add jg add add add jg add add add jg add add add jg add add add jg add add add jg add add add jg add add add jg add add add jg add add add jg add add add incl add add add incl add incb pop (bad) incl add add add add add add add or (bad) (bad) incl (bad) cld stc add cli cmc add cmc repz hlt lock repz add out ljmp out faddl cmc ljmp repz add out add out add out add jecxz add loopne add jecxz add (bad) add (bad) add fmulp add fcmovnbe add fcmovbe add fnop add ffree add fmul add (bad) enter int3 add fidivrl ljmp add rol add fdivs out les ror into add int add (bad) mov lock mov repz in mov add int add enter (bad) mov add enter iret pushf add (bad) mov add les add (bad) lods add enter ret mov call (bad) mov fistpll rolb mov stos add mov movb mov add mov popf add mov jl jecxz stos add mov add lds jmp xchg add mov add mov add mov add scas cmpsb add mov add les clc (bad) jne lret add mov add mov add lods cmpsb add mov add mov fwait add shll cltd add cmpsl popf add mov add lods xchg add test add mov add scas mov aad xchg add test pop add movsb lahf add cmpsb nop add stos addb test addl stos jle (bad) mov cltd add mov add mov mov shlb mov pushl mov add mov add fwait (bad) add mov add cwtl jle movsl xchg xchg lret add scas add lods xor jo cmpsb add lods xor les ja jmp test add test add xchg pop add mov jno out inc add cmpsl and daa test add movsl push add lahf sub daa jl add mov push add xchg xor add mov pop add xchg sub mov sahf or add fwait adc add pushf or in sub mov lcall xor add xor fimul add into jle add xchg add stc xchg add mov test subl add popl add jnp add mov add mov add js add jp add arpl add xchg add add add test add jne add (bad) add lret je add pop cltd add jae add jle add jl add jns add outsl pop add ja add jne add jb add insb verw pop cmp aam add outsb push dec add push das add push add stos push xor leave arpl add pop add add add dec add push add popa inc cmp rclb scas dec or fwait inc sbb add dec add mov add sahf inc adc lahf ds add adc mov cmp add ss xchg cmp pop add cmp add xor add das add sub add add (bad) sub add or jno pop add invd add mov mov mov mov mov mov mov mov (bad) fidivr mov mov mov mov mov std stc (bad) (bad) fidivr mov mov mov fdivp xlat div div idiv std stc neg (bad) fidivr mov mov fsubrp rcl mul xor div (bad) std stc neg (bad) mov mov mov shr mov sbb sub push mov ljmp mov mov in enter jmp and cmp dec push jb aad loope mov mov (bad) lret int scas adc pop sub cmp dec pop gs jno mov mov mov out and push push and inc dec push push pop push mov mov rol lret pop adc sbb jb jbe jb fs fidivr mov mov out sbb push push jnp inc dec jl pop push mov mov mov pop or adc sahf jp fidivr mov fldcw vpmulhw pop or and nop inc dec pop fidivr mov xlat lods mov mov adc or sbb and cmp dec push pusha fidivr mov lods mov mov add or adc and xor dec pusha fidivr mov stos lods mov mov push or pop push and cmp dec push fidivr mov stos lods mov mov xor imul xor push fidivr mov movsl stos lods mov add or sub arpl popa lock mov fidivr mov cltd movsb movsl stos xchg sldt add sub mov sti fidivr mov xchg popf movsl stos lods mov add add xchg (bad) jae jae clc fidivr mov lea stos push add jbe pop gs neg mov mov xchg ret dec mov push dec dec push pop push mov mov lea and imul jbe pop pop gs fidivr mov jns lea or push jne cmpsb orb fidivr mov ja xchg or inc inc cmp dec push fs mov mov lea adc push and xor out mov mov insl je orl pop es cmp dec push loop mov mov insw ja xchg or push sbb sub fidivr mov pop data16 jg lahf inc dec push pop sub sub aas dec loopne mov mov push pop dec sbb push sbb es pop pop imul mov mov int3 int3 int3 int3 popl js (bad) cmpsl mov aad mov mov mov mov mov mov mov mov (bad) jmp (bad) (bad) inc pop (bad) incl add incb add cld add pop clc add pop clc add pop clc add pop clc add pop clc add pop clc add pop clc add pop clc add pop clc add pop clc add pop clc add psubb add clc add psubb add clc add psubb add clc add psubb add clc add psubb add clc add psubb add clc add psubb add incl add adc add and add add or mov add iret imul add outsb add fdivs add jbe add js add jnp add addb in test add mov add mov add lea add popl add nop add stc xchg add cld xchg add std xchg add (bad) cltd add lcall add icebp mov lods das push add pop or lcall add fwait adc jo adc lcall adc jge push add mov sbb add and add add dec daa add sub mov sub ljmp sub add xor mov scas aaa add jbe add jp add cmp mov cmp iret jp add jl add jle add cmpl add mov add inc add mov add mov dec dec add mov pop add (bad) popa add mov insl add xchg outsl add xchg jo in jb loope je iret cwtl je int ja (bad) add mov jge int (bad) add test add mov mov shlb add sahf popl shll xchg add lods xchg add mov xchg add mov lcall scas fwait add test add mov add sahf add lret fsubrl mov add mov add scas movsb add mov add mov add mov cmpsl add test add mov lods add int add fsubrl add iret scas add scas mov loope mov loop mov mov mov jecxz mov add mov add leave mov add fcmovb add loop add rol add fld add ffreep add ror add loope add (bad) lret add (bad) into add fcmovbe add fcmovnbe add (bad) add (bad) add loope add in add call in cmc jmp add out ljmp hlt icebp add add add (bad) incl cwtl cwtl cwtl cwtl cwtl cwtl inc inc inc inc cwtl cwtl cwtl cwtl cwtl cwtl cwtl cwtl cwtl cwtl cwtl inc pop xor inc inc cwtl cwtl cwtl cwtl cwtl cwtl cwtl inc add dec das pop push sub inc inc cwtl cwtl cwtl cwtl inc add xor cmpl cwtl cwtl cwtl inc pop or cmp mov inc cwtl cwtl cwtl xor or xchg mov push pop pop inc cwtl cwtl cwtl xor (bad) jge bound cwtl cwtl xor xchg xchg lea cwtl cwtl adc or dec pop imul cwtl cwtl cwtl aaa adc inc cltd xchg inc and inc cwtl cwtl cwtl cmp test pop inc and cwtl cwtl cwtl aas and push jle dec push push popa dec and inc xor adc outsl imul inc cmp mov cwtl cwtl cwtl cwtl inc inc cmp je jl push cwtl cwtl cwtl dec dec dec data16 ja dec dec inc cwtl cwtl cwtl cld aas mov mov loopne and rolb xor add rolb outsb rolb mov rolb mov rolb adc add jb add rolb outsb rolb mov xor add pusha add add add add add daa adc inc and push and sub ds or inc and inc and adc add push sub push push add add add add add add add add add and (bad) or cmp or cmp or push or pop or push aas and ds or ds or inc and inc and (bad) sbb or xor add add add add add inc inc add and (bad) and cs pop or pop add push push or cmp or aaa sbb cmp or cmp or cmp or dec and ds sub inc sbb push cmp or xor add add add add add inc inc add and (bad) and cs pop or and out xchg sub add cltd xor pushl add popa pop add out sbb iret aaa sbb cmp or cmp or pop or and cmp and sbb dec and push cmp or xor add add add add add push push add inc and (bad) and cs pop or and out lods aas add mov xor lcall xor lcall xor lcall and cli pop pop push repnz sbb or mov sbb or cmp or pop or and cmp and sbb dec and push cmp or add add add add add add dec and push cmp pop or and out scas inc add shrb jmp xor lcall xor lcall xor lcall xor lcall xor lcall and cli pop pop push repnz sbb or mov sbb or cmp or pop or and cmp inc and sbb add add add add add inc sub sub insb js add mov add aam add shrl jmp xor lcall insb inc (bad) in fmul (bad) fdivrl (bad) jmp xor lcall xor lcall xor lcall cmp ljmp add pop pop push repnz sbb or mov sbb or cmp or add add add add inc pop pop or or gs add mov add fdivs call outsl add shrl mov xor inc (bad) mov fcmovbe (bad) jmp int jmp iret ret jmp lret mov (bad) mov dec sbb lcall xor lcall xor lcall inc adc cli pop pop push repnz sbb or ss adc cmp sbb push push add add add inc pop pop or sbb and jne add mov add (bad) (bad) fnstenv call jno call outsb add mov inc adc mov jbe (bad) out fst (bad) in fmul (bad) ljmp jmp int jmp leave mov jmp (bad) mov fistpll (bad) (bad) mov dec and lcall lcall xor lcall xor incl sbb mov and es xor or add add add add sbb or push and sbb add mov add loopne add fnsave (bad) (bad) (bad) fdivs call jo jmp inc adc mov ja (bad) out (bad) (bad) in fcmovbe (bad) jmp int jmp rol jmp lret mov jmp les (bad) fidivr (bad) fidivl popf dec pushf cmp jne jmp ss cltd xor incl push adc aas sbb pop cmp push addb cmp or cmp or outsl and xlat mov add in add loope add fistpll (bad) fdivl (bad) fidivl fdivs jmp inc adc mov jnp push loope (bad) out fst (bad) in fxch (bad) ljmp jmp into ret lret loop mov (bad) fistpll stos (bad) (bad) mov call lods xchg call cmpsl xchg call movsb (bad) dec xchg jne mov inc inc lock sub mov push cmp and inc inc or add add add add sbb cmp add mov add call jg jmp jl jmp jp (bad) fidivr (bad) fdivl (bad) fnstenv jmp inc adc mov jl push loop (bad) out (bad) (bad) in fcmovnbe (bad) jmp int ljmp jmp int3 sar enter lds (bad) fidivr cmpsl (bad) fidivl sahf call lods cltd call stos xchg call cmpsb nop call mov xchg int3 lcall inc and cmp sub push cmp add add jbe add in xchg (bad) ljmp jmp jle jmp jl jmp jns (bad) fidiv (bad) (bad) jmp inc adc mov jge push in push loope (bad) out (bad) (bad) in fnop (bad) jmp int3 (bad) jmp into ret lret jecxz mov (bad) fistpll stos (bad) fdivrl mov call lods xchg call test call movsb (bad) call mov test arpl pop jp aaa sub dec xor add add movsl aas add lock (bad) in xchg (bad) jmp add jmp addb in add loope add fistpll (bad) fnsave jmp adc mov andl icebp jecxz (bad) out loopne (bad) in (bad) (bad) in fmul (bad) ljmp jmp (bad) mov call test call test call stos xchg call stos xchg call lods cwtl (bad) fdivs lcall cmpsb nop call mov xchg fs cmp inc sub jp aaa sub dec xor add add test add icebp mov (bad) out mov (bad) in xchg (bad) jmp add call jg jmp jge jmp jp (bad) fidivr jmp adc roll hlt jmp (bad) lock (bad) out (bad) (bad) in fnop (bad) jmp int3 jmp lret int cmp into pushf cmp pushf cmp sahf test iret lahf xchg iret lahf xchg shlb cwtl call lods xchg call test call movsl mov shlb cmp inc sub jp aaa sub dec xor add add test add repz push mov (bad) out mov (bad) in xchg (bad) ljmp jmp jle jmp jl jmp jns jmp adc ret inc test cmc jmp push call fdivr out loopne (bad) in (bad) (bad) in fmul dec xchg jge (bad) lea lret xchg jge ffreep mov fidivr mov dec xchg ja lret dec fwait (bad) call scas lcall cmpsb xchg call mov cmp inc and aaa xor dec xor add add test add cmc popl push mov push mov (bad) in xchg (bad) jmp add jmp addb in add loope add movsl ds mov mov les jmp push out push loop (bad) out (bad) jmp aad ljmp cmp test call pop mov jmp ljmp mov inc xchg (bad) mov xlat mov call lods cwtl call test (bad) jmp xlat inc and aaa xor dec xor add add test nop add hlt mov push mov (bad) out mov (bad) in xchg (bad) jmp add call jg jmp jge jmp inc adc inc mov imul jmp imul out hlt call (bad) out loopne inc ror add pushl sar xchg mov incl pop cltd incl fs incl gs jns call cmpsb (bad) (bad) fdivs fwait call stos xchg call cmpsl xchg jmp cmp inc and aaa xor dec xor add add test xchg add (bad) popl push lea push mov (bad) out mov (bad) in xchg (bad) ljmp jmp jle jmp inc adc pushl icebp out push out jmp push out push loop (bad) call (bad) sar jmp int jmp rol jmp lret mov jmp pushl xchg ret decl mov mov call lods cwtl call test cmp jp cmp xor add add test xchg add clc xchg add cmc popl push mov push mov (bad) in xchg (bad) jmp add jmp addb movsl aas add test add add jne (bad) stc hlt icebp (bad) clc lock push in out hlt jmp fdivrp lock (bad) out fst (bad) in fxch (bad) ljmp jmp int jmp lret loop mov (bad) fnstcw test (bad) fnstenv fwait call lods xchg jmp inc xlat inc and cmp xor add add test xchg add stc xchg add notl add icebp mov (bad) out mov (bad) in xchg (bad) jmp add call inc add jg add add add mov div (bad) stc repnz push out ljmp out push jecxz (bad) out (bad) (bad) in fcmovnbe (bad) jmp int ljmp jmp int3 mov jmp les (bad) fidivr (bad) fidivl popf call lods cltd jmp inc xlat inc cs push cmp xor add add test xchg add cli xchg add stc xchg add (bad) popl push lea push mov (bad) out mov (bad) in xchg (bad) ljmp (bad) jg add add add mov clc idiv stc hlt icebp (bad) clc lock push in call push in push loope (bad) out fst (bad) in fnop (bad) jmp lret (bad) jmp into ret lret loop mov (bad) fistpll stos (bad) fdivrl mov jmp inc xlat inc cs push cmp xor add add stos inc add (bad) cwtl add cld xchg add cli xchg add clc xchg add cmc popl push mov push mov (bad) in xchg (bad) jmp add cmpsb inc add jg add add add mov cli clc (bad) cli div (bad) stc repnz push out ljmp out push jecxz (bad) out (bad) (bad) in (bad) (bad) in fmul (bad) ljmp jmp int3 sar enter lds (bad) fidivr cmpsl (bad) fidivl sahf jmp inc xlat dec xor pop cmp dec or add add add add cltd add (bad) cwtl add sti xchg add stc xchg add notl add icebp mov (bad) out mov (bad) in xchg jmp sub incl pop (bad) mov in in bnd (bad) cli cmc repnz clc lock push in call push in push loope (bad) out (bad) (bad) in fcmovbe (bad) jmp int3 (bad) jmp iret ret jmp lret mov jmp ret fistpll stos (bad) fdivrl mov xlat dec xor pop cmp dec or add add add add fwait add (bad) cltd add std xchg add cli xchg add stc xchg add (bad) popl push lea push mov (bad) out mov ljmp push sub fsubs xchg (bad) in mov js (bad) xchg addr16 mov jmp stos ja loop mov jmp xlat lret push fcmovne (bad) in (bad) (bad) in fmul (bad) ljmp jmp int3 sar leave mov jmp (bad) mov fidivr test fidivl inc rorl and cmp sub push or add add add add popf or lcall add cld xchg add cli xchg add clc xchg add cmc popl push mov push mov (bad) mov mov (bad) jmp mov (bad) cli shlb (bad) fsubrs jge out mov jne out jo out mov (bad) jmp stos xchg jmp mov inc test dec mov (bad) ffree mov loope mov fistpll stos (bad) fdivrl dec mov push ds dec pop add add stos inc add lcall pop (bad) lcall add sti xchg add cli xchg add notl add repz adc cmc enter std sti (bad) (bad) (bad) (bad) (bad) std jmp (bad) sti out (bad) cli in (bad) cld call scas (bad) clc fdivs (bad) clc shrl push lds (bad) dec xchg dec orl adc jmp sbb decl pushl jnp (bad) fdivs dec sahf dec sub sub add add add mov or lcall add std xchg add sti xchg add stc xchg add clc fwait sbb (bad) (bad) std cld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli in (bad) clc loopne push faddp (bad) cli in push aad (bad) stc ffree push int3 scas (bad) clc aad (bad) sti xlat mov call mov (bad) jnp and decl add jb add push and (bad) sbb decl sub sarl adc sub pop push sub push add add stos inc add (bad) jmp or lcall add std xchg add cli xchg add stc lcall (bad) std cld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti idiv neg (bad) push fcmovb push xlat mov push iret mov clc fdivrs (bad) call mov (bad) mov test mov pop dec xchg jbe (bad) jbe (bad) mov push adc call sbb push cmp or add add stos inc push (bad) jmp pop (bad) lcall pop (bad) lcall add cld xchg add cli xchg add negl sahf (bad) (bad) std sti (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti idiv push out push fadd push aam push sarl (bad) cld faddp (bad) (bad) fadd dec lcall les jb shll xchg call movsb (bad) call mov test (bad) je call sbb push xor or add add add test (bad) jmp adc lcall add (bad) std xchg add sti xchg add stc xchg add int3 insb adc out ret (bad) std sti (bad) (bad) (bad) (bad) (bad) (bad) sti idiv push out (bad) push out out sarb (bad) cld loop (bad) (bad) fcmove call popf xchg inc mov lret dec pushf test (bad) scas lcall stos xchg call cmpsb nop call mov xchg ret ja lcall sbb push xor or add add add stos sub jmp sbb jmp or lcall add std xchg add cli xchg add enter fcomps mov (bad) (bad) sti idiv std hlt in (bad) fbstp sar cld out (bad) call enter xchg inc xchg cmp aam xchg (bad) fidivl mov call lods xchg call test call movsl mov shlb inc lcall or push xor or add add add lods xor ljmp and jmp (bad) lcall (bad) (bad) cwtl add cld xchg add int add fsubl aad call div jmp mov inc (bad) fldenv scas (bad) fcomps (bad) fnstenv movsb (bad) fnstsw (bad) fidivl sahf call scas lcall cmpsb nop call mov inc lcall sbb push xor or add add add scas xor (bad) ljmp sbb (bad) lcall add (bad) std xchg add shrl (bad) fbld loop lock (bad) fisubr (bad) jmp mov lret xchg cmp lcall shlb call cmpsl nop call test sahf (bad) fnstenv call lods cwtl call test call movsl mov int3 (bad) inc jmp sbb push xor or add add add mov (bad) ljmp sub jmp sbb jmp or lcall add aad add loop je cmc ljmp icebp jecxz (bad) out (bad) jmp (bad) mov dec sahf xchg (bad) lea int cmp lcall enter leave xchg jns lret xchg jl fdivs lahf call scas lcall cmpsl xchg dec test cmpsl ds xor or push xor or add add add mov (bad) ljmp xor ljmp and jmp (bad) lcall (bad) fnstenv jmp scas jbe imul out hlt jmp fdivrp lock (bad) out fst ljmp xchg stos jmp jp jmp gs pushl test ljmp xchg xlat scas fwait (bad) fnstenv call lods cwtl call test dec ljmp sbb push xor or add add add mov (bad) pushl xor (bad) ljmp sbb (bad) lcall add jmp mov push out ljmp out push in (bad) out (bad) pushl mov jmp xchg into jmp jp incl push lcall pop cltd incl imul fstpt movsb (bad) fnstenv lcall mov scas inc add xor or push xor or add add add mov (bad) pushl (bad) ljmp sub jmp sbb jmp or loope add ljmp push in call push out push loop (bad) out (bad) (bad) in fcmovbe (bad) jmp int jmp iret ret jmp lret ffree mov jmp mov cmpsl (bad) fidivl popf call lods cltd (bad) fcoms add xor or push xor or add add add mov inc (bad) pushl aaa (bad) ljmp sub jmp sbb lcall add in mov out push out jmp cmc jmp push call (bad) lock (bad) in (bad) (bad) jmp into (bad) ljmp jmp int jmp leave mov jmp ret fidivr test (bad) fnstenv fwait (bad) fistl add xor or push xor or add add add mov dec (bad) pushl cmp (bad) ljmp (bad) jmp adc push mov repnz clc icebp in push in jmp push out push loop (bad) out (bad) (bad) in fcmovbe (bad) jmp int jmp iret ret jmp lret mov jmp les (bad) fnstsw (bad) fidivl popf (bad) ficom add xor or push xor or add add add mov push (bad) pushl inc (bad) pushl xor ljmp and jmp push mov cmc (bad) stc repz push lock push jmp push call (bad) lock (bad) out fst (bad) in fxch (bad) ljmp jmp int jmp leave mov jmp ret fidivr test (bad) fnstenv (bad) mov sbb push xor or add add add mov pop (bad) (bad) mov dec (bad) pushl cmp ljmp sub jmp add test (bad) cld stc idiv cli cmc repnz clc repnz push in jmp push out push jecxz (bad) out (bad) (bad) in fcmovnbe (bad) jmp int jmp rol jmp lret mov jmp les (bad) fnstsw (bad) fidivl push inc push add xor or push xor or add add add shll mov push (bad) (bad) mov inc (bad) pushl ss ljmp push xchg add (bad) std sti cli (bad) sti div (bad) stc repz lock push in out hlt call fdivrp lock (bad) out fst (bad) in fxch (bad) ljmp jmp into ret leave mov jmp ret mov fidivr stos (bad) (bad) push inc push add xor or dec xor or add add add les shlb mov push (bad) pushl inc (bad) pushl xor ljmp push (bad) cli pushf adc (bad) cli movsb sub stc mov daa (bad) stc mov push mov jo idivb imul ret mov out int3 stos (bad) in leave cmpsl (bad) jmp mov jmp les jmp (bad) mov fidivr test ljmp pushl push mov cmp adc add add add add (bad) jb inc push (bad) (bad) mov push (bad) std mov xchg hlt fdivrs (bad) out (bad) (bad) in fcmovbe (bad) jmp int ljmp jmp int (bad) jmp mov xchg jmp mov nop jmp scas jno in cmpsl push (bad) jmp push (bad) ljmp (bad) jmp fwait and negb pop push cwtl push push cwtl adc pushl push vmread sbb cmp adc add add stos dec adc dec ja dec test cld fldt imul jmp cmc in out hlt jmp (bad) icebp loop (bad) out (bad) (bad) in (bad) (bad) in fxch (bad) ljmp jmp iret ret jmp int3 sar leave mov jmp ret fistpll stos (bad) fdivrl sahf dec popf test int3 lcall mov dec jmp inc pop pushl xor jmp sbb aaa xor or sub add add add fwait cmp ljmp push sub test push sub mov cmp (bad) mov ja inc mov les push ret inc test roll (bad) mov jle (bad) mov push ljmp sub mov cmp ljmp add jb add and push and cmp or cmp or aaa and push sub add add add andl add andl add andl add add and popa andl add add andl add andl add and dec andl add andl add andl add (bad) incb (bad) incl add cld add (bad) incl add clc add (bad) add push add add add jmp add add add inc add add add incl add incl add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incb add add add incl add sub add and add inc add add add add sub add inc and sub and push aas and cmp and xor and and and pop inc sbb or sbb pop xor add add add add add add add add add sub add and cs and xchg pop enter (bad) xor push or and cmp and xor and and and pop inc sbb or sbb pop xor add add add add add add add sub add cmp and mov xor lcall and sti pop pop push hlt dec sbb or lds push or and cmp and xor and and and push inc and or sub add add add xor add and cs and mov data16 cltd xor lcall xor lcall xor incl and sti pop pop push hlt dec sbb or lds push or and cmp or cmp sub add inc inc add inc sub sub and mov insl add shrl lcall inc adc jmp (bad) mov pushl aas (bad) cltd xor lcall and ljmp add pop pop push hlt dec sbb or mov cmp adc cmp push add add inc and or push and sbbb call jo call insl add lahf aas (bad) mov dec jmp (bad) mov (bad) call lret mov (bad) fnstenv jno scas pop lcall xor incl and ljmp add xor and inc sub sbb and push add add cmp and imul add fnsave (bad) fnstenv call outsl add lahf inc adc mov lret in fcmovbe (bad) ljmp jmp leave mov (bad) fnstsw (bad) fdivs mov mov pop ljmp sub pop popf inc sub cs cmp or add add add add push mov add in add in add loopne add fdivl (bad) fdivs lcall je jmp int (bad) out fst (bad) jmp into (bad) jmp int3 mov (bad) ffreep mov fnstsw mov call test mov into popf test leave popf mov inc sub mov sub cmp sub add add add test (bad) ljmp jmp jl (bad) fidivr (bad) (bad) mov js jmp rol push loope (bad) in fcmovnbe (bad) ljmp jmp (bad) mov (bad) fidivl mov call lods xchg call cmpsb nop call mov xchg std inc sub mov sub cmp sub addb add add add pop add lock (bad) in test (bad) call jle jmp jnp (bad) fnsave jmp jnp (bad) ljmp (bad) out (bad) (bad) in fmul (bad) call mov test into sahf test iret mov mov (bad) lods xchg call stos xchg call mov cltd std inc sub mov das and addb add add add popa add repnz (bad) out mov (bad) jmp add out add in add loopne add mov jg (bad) in fmul push out push loope (bad) in (bad) call mov jmp mov call mov movsl dec xchg jnp lret call lods cwtl call cmpsb nop dec mov pop mov das and addb add add add bound push mov push mov (bad) in xchg (bad) ljmp jmp jl jmp andb fcmovbe push jmp push in (bad) out (bad) jmp test call test pop cltd incl arpl dec cwtl jge fdivs xchg dec movsb sahf std inc sub mov das and addb add add add arpl (bad) clc xchg add repz push mov (bad) in test (bad) jmp jle lcall inc xor in fcmovbe push out jmp push loop call lret jmp int3 (bad) call (bad) mov ljmp mov mov dec movsb lahf std inc sub mov das and addb add add add gs cli xchg add notb add out mov (bad) jmp add out add jg add sbb fst (bad) clc lock push jmp push in push loopne (bad) in fnop (bad) jmp into ret enter ret fnstsw (bad) fdivs mov mov das and addb add add add data16 cld xchg add stc xchg add cmc mov push mov (bad) in xchg (bad) ljmp lcall (bad) (bad) cli cmc repnz out ljmp loop (bad) out fst (bad) jmp int call lret mov (bad) fistpll test dec test std inc and push sub addb add add add data16 (bad) cwtl add sti xchg add clc xchg add repz push mov (bad) in test (bad) jg add test (bad) ljmp (bad) clc icebp out push in out repnz push loopne (bad) in fcmovbe (bad) ljmp jmp leave mov (bad) fnstsw dec stos movsl cld inc sub and pop cmp push addb add add add addr16 lcall add cli xchg add notb add out mov inc sbbl int (bad) fldcw cmp stos jle mov scas mov jecxz mov jmp int jmp enter int3 mov (bad) ffreep mov (bad) mov dec stos movsl sti inc sub and dec cmp or add add add add imul (bad) lcall add stc xchg add cmc popl push mov (bad) std div (bad) (bad) cli hlt (bad) std out fdivr clc fdivs out lret test call test pushf (bad) out mov lcall and je cmp decl xchg cmp cltd xchg cmp adc push dec and push add add int3 imul lcall add sti xchg add cli mov sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli cmc (bad) cli out (bad) out int push (bad) mov icebp iret mov cld fnstcw jmp cmp scas push sbb scas dec or xchg cmp add xor push ret cmovbe add add add add insl adc jmp or (bad) std xchg add cli xchg add mull xlat (bad) (bad) (bad) (bad) (bad) (bad) cld stc (bad) (bad) repz (bad) call fidivrl (bad) mov mov shlb (bad) call mov jle xchg das add xor or inc xor or add add add outsb adc (bad) jmp or (bad) cwtl add cld xchg add stc xchg add sarb push in (bad) (bad) cld stc (bad) std repz (bad) cld jecxz jmp mov jnp iret sahf xchg (bad) lods xchg call scas lcall mov test pushf xor or inc xor or add add add jo (bad) ljmp sbb (bad) lcall add sti xchg add lret je (bad) out aam push (bad) (bad) jmp xchg (bad) ficoml popf dec mov popf (bad) (bad) movsl (bad) fnstenv xchg call cmpsb nop call mov add xor or inc xor or add add add jb (bad) ljmp (bad) jmp or (bad) std xchg add sarl push call ret (bad) lods (bad) fldenv cmp into pushf test into pushf test shll cltd call scas lcall mov add xor or inc xor or add add add jae (bad) pushl sub (bad) jmp or (bad) cltd add fadds out repnz push loopne ljmp pushf mov pushl insl mov jmp test lahf call lods cwtl call cmpsl xchg ljmp or inc xor or add add add jne (bad) pushl (bad) ljmp push (bad) jmp add fimul jmp hlt jmp fdivr mov (bad) pushl mov scas pushl test dec scas test fidivl pushf call stos xchg pushl sbb inc xor or add add add ja (bad) pushl aas (bad) ljmp es jmp or (bad) stc repnz push in call push loope (bad) in fcmovnbe (bad) ljmp jmp lret loop mov fidivr cmpsl (bad) fnstenv cltd pushl sbb inc xor or add add add jns (bad) (bad) mov dec (bad) pushl cs jmp push (bad) jmp sub cli cmc repz out in push ljmp out (bad) (bad) in fmul (bad) jmp int jmp (bad) mov (bad) fnstsw movsb (bad) fdivs add xor or inc xor or add add add jp (bad) (bad) mov dec (bad) pushl (bad) ljmp push push popf sub cld stc idiv stc repz in call push loope (bad) in fcmovnbe (bad) jmp int3 jmp rol jmp lret loop mov fistpll cmpsl (bad) fidivl pushl push mov sbb add add add jl (bad) inc arpl (bad) mov dec (bad) pushl xor ljmp adc (bad) cli les clc (bad) jne idivl lods push (bad) mov out int (bad) in leave cmpsl (bad) jmp (bad) mov (bad) fnstsw dec push add ss test cmp femms add add int3 jge (bad) inc insl (bad) inc fs std (bad) jbe cli rclb (bad) out loopne (bad) in fcmovnbe (bad) jmp int3 (bad) call int jmp enter mov jmp mov jmp mov jmp lods (bad) (bad) fisubr dec jmp fwait inc (bad) fadds sub ficompl inc and jno and and pop add add add mov xor lret (bad) xchg jns enter (bad) (bad) jae lds insb inc mov ret inc andl popa (bad) mov jb pushl pop cmp movsb dec and cmpsl dec es stos push cs cmpsl dec sub cmpsl dec fisttpl inc push mov cmp xor inc inc add andl add and sub and cmp daa add jo and addb add mov or (bad) xor outsb xchg push dec andl add push xor incl add incb add cld add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add ljmp add add add add add add add add cs add inc or dec sub xchg and fwait inc and xchg or push or cmp or and pop inc and or add dec xor add sub push inc daa or mov add jae add popa push push fimul or xor or scas cmp or inc or and sbb adc inc sub or es (bad) mov cmp dec test mov das push pushl add pop push push faddl or ss lods dec sub (bad) inc sub adc add add dec sub push fwait inc add shrl dec fs mov cmp in fcmovbe jmp rol jmp ret (bad) jge mov sub (bad) sub loop and lcall jmp jnp dec imul push loope (bad) ljmp (bad) fstpt popf call movsb mov lret sti dec das and mov mov jmp addb aam add mov dec push call sar scas cmpsb fwait pushl fwait (bad) call test dec mov and push rcll hlt lea (bad) in test (bad) fdivs (bad) jns xor imul ljmp mov mov pop jb (bad) fnstenv fwait sti dec xor mov rcll stc xchg add icebp mov (bad) fdivl pushl pop or cli hlt icebp push ljmp call les call scas mov mov lret push add std xchg add notb add shll mov (bad) push lret iret mov (bad) fnstcw stos sti dec sub sbb add add in pop add lcall add cli mov (bad) push ffreep push sarl (bad) mov aas sbb jo adc xchg inc cs sub inc sub sbb add add add add pop or lcall add icebp mov lock (bad) sti repnz lods xchg dec mov nop dec (bad) insl ljmp push fisttp or jmp sbb jmp or cmc popl (bad) in sarl call xchg jo iret mov mov xlat scas fwait dec cwtl je outsl sub fisttp or jmp scas aaa (bad) jmp add repnz push in decl pushf scas decl test call mov push fimul or out xor (bad) ljmp adc mul leave push jmp (bad) out (bad) (bad) jmp (bad) mov (bad) fldt push fstl or in inc (bad) (bad) mov inc (bad) std mov scas (bad) stc loop push fdivrs (bad) ljmp jmp lods jb mov or pop cmp insl dec xor push xlat outsl inc mov jecxz mov (bad) ljmp (bad) fldcw mov lret mov loopne outsb gs (bad) decl add add rolb add add add add add add add add add add jecxz add inc add inc add inc add inc add inc add inc add inc add rolb inc add decl inc add add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add (bad) jg add add add inc add and inc add add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add inc add add add inc add and inc add add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add inc add and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add inc add and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add inc add and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add inc add add add inc add and inc add add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add (bad) jg (bad) (bad) mov inc add and inc add add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add add add add inc add and inc add add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add add mov inc add and inc add add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add inc add and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add inc add and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add inc add and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add inc add loopne add and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add inc (bad) (bad) mov inc add and inc add add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add inc add inc inc add and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add (bad) incl add inc add and inc add add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add inc add loopne add and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add inc add and add inc add and inc add add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add inc add inc inc add and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add inc (bad) (bad) mov inc add and inc add add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add add cwtl inc add and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add inc add and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add inc add and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add lcall aas add and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add ljmp inc add loopne add and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add add mov add and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add inc add and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add rolb and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add sbb jae gs cs jb ja outsb addr16 arpl insb gs add add add jns ja fs push push je add add or or add add add inc add and add inc or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 outsl imul add js jns add or add add inc add add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 outsl imul add js jns add or add add add rorb add add add out mov xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add inc push inc inc push mov add fsubp add into lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add add inc push inc inc push inc mov into add add flds add sbb push add add data16 imul add add add add and out add repz dec imul stos jg jnp inc add jno cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc sbb mov or test xor cvtdq2ps xor xchg add dec test jb std fcomip mov outsb cmpsl outsl push xor mov data16 add sahf pop (bad) pop outsb mov jb outsb jne xor fstpt in in sub pop or mov jnp inc add jmp mov data16 xor add sub mov adc cwtl add sahf or inc add add sbb dec push sbb scas or xchg mov in cmc cwtl add sahf movsb adc daa mov mov mov adc push add (bad) or xchg mov in cmc cwtl add sahf or (bad) dec jp dec add add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in adc or xchg mov add or xchg fwait jns lret jno movsl sahf add cmp mov lea xrelease mov in cmc clc add ljmp add aad cwtl add sahf or (bad) xor mov cmc cwtl add sahf or xchg sbb and or mov jnp inc pop mov and bound xrelease mov in cmc fadds jno mov inc add add sahf call js add popa push cmc sahf add sahf fstps sbb xor call cmc in clc inc cwtl dec lret ret fistpl cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf sbb int or sbb sub lret jns lds aaa bnd xchg cwtl sti pop das addr16 mov mov add and dec cmp in (bad) inc dec or mov dec lahf dec negb fnsave sbb shrl shr cmc sahf add xchg cwtl repnz outsb sar xor repz dec stc xchg lock xchg mov aaa sbb shrl shr cmc pushf clc xor xor mov ret xor jmp sub mov adc mov cmp add (bad) cmp pop insl mov enter mov inc dec or mov addr16 mov inc sbb fnsave sbb shrl mov adc nop add xchg and out dec jb or iret and jmp xrelease pop leave mov sub pop pop lahf das loope xor cmpsl xchg std cmc xchg add xchg and inc dec add add push xchg sbb ds dec mov out clc dec sahf psllq push mov jmp rep sti scas das adc int3 jbe cmp dec mov and ljmp mov insl std pushf mov sarb mov inc (bad) add movsl clc push mov sti push inc xchg fidiv mov clc cmp jnp jb arpl jmp mov xor mov sbb mov push add jecxz jge aaa cmc lahf repnz jge dec jne movsl out in push dec adcl sub movsl stc and mov jg fs cmc mov xorl cmp imul inc stc movsl mov jo lea lods dec lods mov push add dec mov fsub sti add jno xor mov fldl jo sub sbb pop sub jbe push lods push ja call cmp ret xor push sbb daa xchg sbb xor cwtl sub lret (bad) (bad) hlt lcall pop stos shlb sub decl and jne push jmp push add jecxz movsl pop inc cmp subb ja push hlt and xchg jecxz daa (bad) mov movsl and fidivr adc xchg cmp xchg mov (bad) in pop inc mov stos sbb or or dec dec sbb ret jno and pop fildll pop xchg xchg (bad) stos sbb in loope in hlt xor dec or sbb jmp fnstsw sbb mov out popf pop adc xor inc js bound sbb xchg test push cltd adc xor mov mov cmp repnz adc pop jno mov push push popa (bad) add fstpt lahf out inc insl pusha xchg xchg mov test mov aaa mov gs adc loop mov jae pop scas and mov lds cmp nop and loop mov cli push addr16 adc lret pop sub shlb rorb (bad) or test fist xorw push jno stos icebp push and xchg sbb xor jns cmp cmp cmp cs push or add flds lock sub sub push jno pushf out data16 adc inc push repnz push mov jno orps jnp stos rolb sbb pop aaa sub lods pop ja xlat out cltd dec imul mov (bad) loope outsb in bound adc pop jno push out add jg xchg pop inc in mov mov xor popa xchg sbb mov lea (bad) and add inc sbb inc jl scas inc (bad) or sbb xchg testb (bad) repz cltd cltd push jo into fstpt (bad) loope outsb in bound adc pop jno push out add jg xchg pop inc in mov mov xor lds lea (bad) and add xchg mov in xchg cmc cs cmpsl xchg lret pushf adc into cli dec pop push test xchg movsb fsubl inc fwait add inc pop jmp xlat add cmp xchg xchg push (bad) push movsb aad je push cmovp jo cltd xor inc test sbb fbld cs pop push jnp jb js (bad) out cltd (bad) iret aas gs mov mov negl xchg testb lret jg mov faddl fild pusha jns test in sub cmp jne push jmp lods pusha lock imulb pop push pop pop jae jb push loopne inc mov mov pop ja mov cmpsb out jmp push psubd add out mov and xchg aaa jns popf stos pop out xchg xchg cmc adc cmpsb outsl jecxz jb pop or or in call in cmp adc test sbb (bad) clc cmp mov sbb mov cli xor sti inc pop fs and cmp adc jmp out inc or daa push sub jne add mov cmp add scas push dec loop cmp adc test add (bad) cli xor gs fdivrs mov (bad) xchg divl test xor ret add adc mov bnd fs dec pop push pop pop jae jb push loopne inc mov and and roll cmp xchg loopne movsb aad adc push adc or decl daa imul jnp jb jns xchg jnp or jmp inc jmp push fldcw pop decl xor push jnp jge sbb scas out sub outsl xchg cli mulb ja aad fisubl and loopne rcll inc dec lahf jmp std lret and xor push cmpsl loopne mov sarl shll pop or dec push ret mov xchg jb or fistl push jno sbb rcl mov mov outsl jns sub cmp push iret (bad) test out adc cmp lods insb ja xchg fcompl push mov jl inc movsl inc push mov ret cltd icebp cmp push popa in popa jle sub test or cmpl cmpsb push inc pop dec push jmp shll cmp fimul cltd rolb sbb frstor jae inc stos mov cmp lods out mov push test push or and ret popa xor loope mov cli or and xchg xor cmp movsb outsl or pop pop cmpsb out adc fistpll push sbb fidivr movsl outsb (bad) jo push adc push push out call xor or fs fwait cs movb cli xlat daa lea jbe xchg popf dec aaa ljmp fbstp mov push decl fbld jae jb sarb mov push and in jmp enter xor mov xor loopne ss jns cmp adc push divps sub out adc std shrb js cwtl sahf fcoml xchg iret hlt ja mov push or jno int3 push mov mov push and jb popf push xor icebp push jmp fisttpl and fistpl bound adc pop jno push out add jg xchg pop inc in mov mov xor repz dec jmp ljmp fmuls and (bad) lret ret lret pop (bad) cli xor stos frstor jno fmuls cmp repnz lcall jecxz pop ja outsb (bad) (bad) push es xchg daa out mov push scas cmp dec add jnp or inc std mov cmpxchg (bad) push xor inc pop xchg mov repnz movsb cs cmp dec mov in movsb push fucomp cwtl (bad) pop sub xchg push popa (bad) add dec jno loope gs popa insb popf es out push cmp js pop jle xor mov xchg xor adc cwtl dec (bad) mov hlt dec dec leave or cmpsb ja ja lods loop fwait push aaa aaa imul in sti push and fs push cmp mov xchg and jo lret push icebp adc add mov hlt mov add mov out push cmp lea pop xor push (bad) mov xchg sarl add clc cmp sub scas and cwtl add sahf xchg adc sub mov inc sahf and cwtl sub inc add stc jne jbe stc xor inc add add sahf sbb cltd cs xchg jle jns sti xchg clc cmp sub inc add or cmp sahf sahf fsubrp imul scas and cwtl add sahf icebp cmc nop xor or pop test sahf and cwtl sub xlat das mov incb xchg lods movsb mov and jmp dec in mov mov je mov lea jne mov cmp cli lea push neg das mov inc xchg and and mov or dec test pop mov mov fs add (bad) add mov bound pushf mulb or scas lcall mov mov add sahf adc mov cmp cmpsb or mov mov pushf cwtl (bad) and sbb push add test cmp push data16 xor cmp add in popa jecxz test mov inc and fisubr and testl js je addr16 insl cwtl add pop fdivrs jmp enter xchg add popf movsb add push test pop es inc inc fildl jmp mov inc jae sti int3 adc (bad) mov sti cld jae inc xchg sub add sbb sbb ja stos mov jmp push pop aad mov andl cmp lahf (bad) cmp addr16 inc jo xor jmp popf push jmp push add jecxz xchg out adc or sub mov stc pop lahf or mov dec js jle shlb loope dec sahf sbb nop cmp xchg or dec dec cwtl sub push add and pop test ret adc mov in cmc sahf fdivrl inc pop jmp cmp cli dec repnz jns ss cmc pop jge and and mov push push and xchg add jo xchg pusha or sbb test push enter loopne ja mov xchg jmp inc jg jbe pop xchg add sahf popl mov stc xchg xor adc imul out ds arpl jae xor jmp xor cli adc popf outsl lea ljmp (bad) push dec add jge dec inc push outsb dec sub stc xchg jmp mov or pop in sbb dec fs lock add mov sub pop jge jg sbb shl dec gs popa insb popf es out push cmp js pop jle xor mov xchg xor or mov inc cli dec jge cli cwtl push test cmpsb out mov pop int xchg ret xor les push fbld jo pop add xchg fmull sahf push xchg xchg xlat out (bad) cwtl ror dec mov inc fwait add xor cltd insl dec mov mov jo sarl and cmp adc mov test lds xchg or fsubs leave sarl cmp add jnp or ja pop mov mov fmull clc fwait leave inc sub add pop loopne lock jle xor loope cli dec sahf pop adc sub sti testl jb stos add and push ds test adc notl xor cwtl sub dec sub psrad pop cmc testb push add xchg cmpsb out jmp in in (bad) jmp adc gs mov push xor and lret (bad) jmp ds cmp aas or inc add xchg jle xor mov (bad) jle adc xor push jmp fidivr jl int dec or pop xor into (bad) cli ret cvtps2pd jmp and inc aad les into sbb mov ret dec test mov mov jbe adc out dec cld repz adc mov mov notl jno fisubrl push jno push rcr inc scas pop in mov inc cld dec push cmp orb xchg jnp inc add add xlat fnop inc mov mov in cmc cmp push sub mov in imull push xchg mov mov cmp cwtl add lcall xor lds in cmc cwtl add pop mov xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg test (bad) stos jp movsb inc iret xor (bad) cmp adc popf sub jo jmp stc add scas cmp int fildll jne in sbb or inc inc push pop xchg jb push mov add js add fbstp mov jns pop jle sbb xor dec js add (bad) mov sbb xchg sub mov in cmc cwtl add lcall inc add add or xchg jnp inc add add or xchg mov in vmovups sahf or xchg lret jle ds xor jnp inc add add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add mov fdivl mov jmp inc sahf sbb popf sub inc add add sahf or xchg mov jbe sahf or subb std out cmc ljmp sub mov in mov inc jno add cmp imul cmc fadds jno dec repz sub mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg stos mov lret pop adc or push mov fdivr and add out pushf in ja add xor cmp ret sahf jae shll or mov push (bad) gs mov dec push pop aaa cmc inc pop sub push dec sbb xchg je xor jae jae and sub cmpsb gs (bad) (bad) rcl imul adcl es xor pop xchg xchg (bad) repz add xor mov in js (bad) pushl (bad) lods mov test pop out cwtl cmp inc ja inc test aam xor (bad) xchg (bad) repz add xor mov in js (bad) pushl xlat lods lea test pop out jo add (bad) ja (bad) pushl add or dec sarb outsl sbb inc cmpsb fs pop fisubl jecxz js mov xchg push in sbb imul or popa add add mov dec push push lods xor xchg je push pop jle dec enter ja push jne mov push lret rcrb sub call push popf jns adc push cmp mov jns push sbbl mov mov pushw (bad) xor test lret or sub sbb fs mov sub gs push arpl test lret or pushf mov in test outsb dec dec sbb out movb fistpll (bad) call nop adc xchg lret xor (bad) hlt idivl test adc lock mov test cwtl pop add pop xlat jmp lods mov jno add mov insb bound cmp and cmpsl ds pop psubusb repnz imul in js cmpsb mov mov (bad) arpl scas jmp jp ret push test (bad) adc cmp or cmp in push inc je,pt xchg lock cmp cmp sbb lods mov dec push pop aaa cmc stos scas mov sahf fidivl cli neg dec lods clc push ss and out daa in or loope or test rcrb je push dec (bad) push push jp push mov aam add inc lds jl dec cmp test or aad mov pop jle lcall (bad) hlt pop fcmove andl outsb xlat xchg push fistpll mov cli cwtl push in sbb clc sbb jbe stos ss fiaddl clc (bad) add cmc shlb lods jg loope rorl jmp cmp push xlat or scas lcall into push (bad) mov mov jg mov or xchg cmp cli xchg out cmp (bad) pushf stos mov mov mov add cmc sahf xchg fdivrs sahf mov sub mov and icebp lock mov lock pushf jae sarb jns mov mov pop xor adc orl mov inc mov add test and lahf cmp fwait and std imul inc inc push push lods or icebp dec das jnp fnop mov jl jns repnz sub mov push aam faddl insb call jns frstor adc pop xchg scas std add (bad) mov rcrl mov xlat in sub hlt fwait push mov loope scas test (bad) mov adc add lds imul sub ret ret dec jns (bad) xchg (bad) loope,pt into loopne dec adc pop leave push jbe repz push push mov mov lea in call sbb jnp rorb arpl cmp jne xor mov movsb fucomip inc xor rolb cmp jmp mov ficom (bad) cwtl push das push jg sbb pop ret xor arpl ret ret pushw lock sub cmp (bad) hlt jnp jne xchg inc test aam lret fidivl add leave cmc cwtl jnp (bad) mov into and xor icebp popa negl and dec cmc iret (bad) (bad) lret or xchg pop cli repnz add cmp in cmp cmc sbb push mov pushw in cs cli push sub shlb lods jg fmuls pop and jb mov xchg cld xor push cli cmp shrl inc pop test (bad) movsb js pop das cmp cld neg push lods loopne mov push xor xchg ja mov push ret icebp ds push iret jg mov mov jg cmpsl and test ret mov jne jg pop inc insb or test add or add push lods pushf add sub ss out push shlb cmpsb inc mov jmp adc lret mov in cmc shlb cmc gs frstor push imul pop cwtl xor test cli sub jne mov push mov shlb scas xchg mul push data16 inc adc stc js aam stc mov lds in mov in cmp xchg enter into sub ret out test adc ret xchg sti std in js sub or sahf sub dec clc mov imul fdivrs sahf addr16 dec lods clc push mov mov add adc sahf mov insl mov or int3 xor aad xor push dec ret (bad) push inc or dec fcoml enter aam pop cmpsl pop adc pop push mov and jle mov fldlg2 cltd shr lock iret (bad) mov or lods adc ds add pop inc push jno jnp jo sub push in cmpsb jns outsl add add in inc nop outsb sub or xchg mov mov sti push cmp jae adc insb call push divl push mov jg ret clc jns xchg mov xor scas movsb xchg adc repnz pop test or div jp sti xchg jo inc stos mov jnp shlb scas xchg push push fistl cmp in xor jbe sub nop cwtl push in and icebp pop stc loopne pop inc or add leave fidivrl xchg mov mov sbb bound js inc sbb jns jg (bad) pop pop dec lcall test aaa xor push adc (bad) ljmp and push cmp std addr16 mov cwtl adc xor jg popf dec scas push mov dec pop xchg cwtl push in sbb mul push jl sahf pop cmc inc stc adc push xchg xor sahf in stos mov adc repnz add inc inc out sahf sti xchg jo in stos sti cmp sar cmp cmc pop stc xor (bad) aad jl das xor sub pop mov rolb cmp mov test push test outsb jl mov test inc lds sbbb stos pop pop ret pop mov xor in into test jns dec lret pushf lcall jb and addr16 sbb add add fstl inc (bad) mov ja je scas dec push sub sub add or (bad) mov popf pop lock jle std aas pop jo mov xchg jle repnz shrb sub pop jge insb or push (bad) ror pop das jmp dec mov cwtl mov or inc jecxz icebp push dec shll lahf std xchg loope fcmovb mov (bad) in inc lock aaa negb test jl ret mov add push mov push sarl hlt clc mov in mov rcr mov or jl decl mov pop addr16 iret inc jg mov lods dec jp adc cwtl or cli or call lods mov sub inc pop adc (bad) cmp mov in xchg fnstsw push fiadd mov outsl jmp nop mov les (bad) aaa push outsb add jmp stc mov mov in loop hlt hlt call xchg xchg hlt cli lcall mov push xchg jl cmc nop push test (bad) or into xor cwtl stos or ret add jb lcall icebp mov pop inc out je,pt lods pop nop loop jle or mov mov add test add lds pop int3 aam repnz pushf add lods dec add ror cmpsl (bad) pop rcrl rol add cmp mov jno push cmp or inc imul cwtl xor popa jl test sahf mov or inc je cmp mov sub clc out ret std in js cs and and jbe addr16 scas pop adc add loope nop cli cmp mov lock mov xchg (bad) cmp je,pt lods pop call xchg jl pop test (bad) aas mov test push mov cmpsl nop idivb sahf adc pusha push cmp mov pop inc add and push push adc mov fwait out pop lock jne aaa out das xchg mov stos mov pop mov out out adc cld adc lcall popa loope jecxz inc add sbb hlt push cwtl xor push insl xchg cmc mov stos pop jb push ret test fwait or je movsl aad add insb ss jnp lret mov arpl fwait add lea fbstp clc mov push stos mov push pushw mov movsl (bad) call loope dec insl pop dec shrb mov push or or pushf add adc jg jle or xchg jmp cmpsl mov push mov push addb jg or inc mov divl inc lcall cmpsb mov mov jle js sbb sub inc push insb mov push hlt outsb mov call call xchg repnz mov push das cmp ljmp cmp mov mov stc popa add xor lahf in lods dec lock sub lds xchg stos hlt mov popf scas hlt cmc repz scas mov rcrl ja xor sub rclb jp jle sbb dec push test adc pop js jo sahf xchg inc in pop cwtl sbb (bad) scas aam push in push push insb mov mov repnz out inc adc jns icebp or cmp jb mul pushf xor jae dec test mov int jae aas jo repnz repnz adc (bad) adc mov punpckldq in jno or mov and dec dec sbb xchg lret je dec mov int rcll jmp ss push inc icebp lods dec and iret xor adc or cli inc inc xchg repnz and fdivl ja and mov xor or ds ds scas scas push mov or repnz inc jns xlat iret stc ret std in or inc sbb cwtl pushaw clc cmp sbb js outsl aam das out mov adc mov xchg cmc out jle sarb or stos mov cmp cmp into sbb test pop repnz dec negl inc pop stos fldenv or out jp int3 sub adc cmpsb mov push daa push add loop and aam push in das icebp repz sbb out xor xchg adc push xchg sarl stos jl mov rcrb sub cmp icebp push pop ds mov jo mov inc lock test jae mov cmc dec jg (bad) dec (bad) lods xor add cli xlat or movb ret repz or inc call std scas shrb pop push mov insb outsb push add pushf popf out loop push xor mov scas insb or mov jle dec ss (bad) push dec insl adc sbb cmc notl ds xor jae mov lahf fucom fsub aaa outsl rep (bad) mov push jbe stos ss mov xchg or adc add add pop dec mov (bad) mov adc xchg mov xchg lret cmc push inc (bad) inc pop pop cli mov dec insl sahf cmpb pusha popf leave mov ficoml pop adc xchg lahf lcall ret out sti jle add into xor inc inc mov arpl pop outsl adc sub ss push outsb or sbb jo mov arpl sbb jae fcompl ljmpw xor out scas lds testb ljmp jmp pop dec dec (bad) pop lahf (bad) imul daa and add fs test orl js arpl push xorl xchg adcl or fadds mov dec or inc mov pop cwtl test xchg push ret ljmp js xchg or clc pop mov fisttpl push cli push rcrl repnz lahf (bad) inc pop pop cli mov cmp lret sbb clc sbb jno inc add xchg in test sub inc add mov fbstp xor sahf and fdivrl ret mov mov inc repnz mov adc outsb cmpsl cmc movsl fucomi cmp mov loope pop cmc (bad) push arpl sbb sbb loope jne adc sub jae ret loop sub inc jge flds repz mov cmc ljmp call dec inc jge,pt xchg pop subb mov loope mov ljmp sub sbb mov out sbb roll sahf mov jnp xor add push mov lds push inc xchg scas outsb popa loopne das sti rcrb insb clc or and stos ret push roll and lock or pusha fs mov or out cmp (bad) xor mov lds pop pop mov les das sti rcrb mov jl add rcll and ss mov add test enter cmp fsubrs imull mov cs xor mov ret in mov sub rclb notb icebp cli adc adc jno insl ficom inc mov xchg push adc inc add mov or adc jg and mov pop cmp (bad) addr16 inc gs fisttpll add outsb je push (bad) test inc push inc ss jge (bad) (bad) lock ja sbb aad cmp and dec push sarb push adc xor pop subl imul (bad) pop add push out dec (bad) mov add dec loop (bad) cmp jne (bad) jmp jno loop iret mov popl je pop lahf dec sbb push add mov and mov popa call xchg push adc add mov aad cmp cmpsl mov out cmp lods cmp adc add call fldz adc mov (bad) cmpsb (bad) fidivrl lds repnz daa repnz cmp jmp dec jmp xor cmc lods xchg or inc add sti inc mov stos and mov ja inc push loop xchg test or add inc mov jne,pn xchg xchg jbe lods aas mov push jg sar cmp xor (bad) xorl das cmp jmp js mov or mov cmc adc cmp mov loope xchg sbb mov pop pop pop in ds popa sbb xor sub into das loop fcmove mov mov ja outsb xor imul pop stc aas flds xor ss cwtl push in sub repnz mov jecxz fwait iret jo test jo lcall cmp leave fidivl lahf repz loopne call inc dec sub pop sti adc jne insb rclb lock shlb inc cld arpl mov jbe ja loope xor in bound push repz xor xchg lds sbb verr outsl bound (bad) repnz adc cltd out ds pop dec aad sub cwtl stos movsb sbb push adc adc into xor push cmpsb inc mov jmp mov sub mov scas (bad) xor iret aaa fidivr add dec data16 sti xchg cltd mov orb pop push sahf (bad) mov pushf repz dec mov in lods cmp icebp arpl (bad) lock in inc aas enter int xor xchg test mov jno push cmp dec ljmp jecxz push ja sub pop fwait pop mov pop sbb stc aad cmp (bad) pop mov mov xchg loope (bad) leave push (bad) rcpps pop cmpsl push or fbld xor aas icebp mov mov push push jmp or xchg in and inc ror sub mov jp inc dec faddp adc les subl das insb adc pop bound faddl loopne test in pop adc dec cmp repz sub xor mov outsl das push mov ret repnz stc scas and les fdivl push cmp cmp pop lods xchg test xchg test sub int and inc fs xchg loop fcmove jnp xchg icebp inc add mov lods js ret and dec and insl sub push cs lcall cmpsl sub dec sti mov std add fdivrl add xchg test ret lahf xchg mov sti pop xchg clc lahf mov call mov arpl inc movl jbe ds mov push repnz jmp push (bad) sti xchg je cmp out jg icebp mov iret add sub std int3 stos cmp mov popa jp fimul mov mov addr16 jbe xchg cmpsb das add adc fsubs sub aaa movsl adc sub cmc enter in pushf mov (bad) ret idivl add mov rclb pop adc sysret int or mov nop cmp add shl cltd pop and sbb xor mov js andl mov clc negl cmp push call xor add mov (bad) xchg test imulb jp repz movsl jo ficom repz sahf and sbb hlt xchg mov inc orl movb xchg scas add or push (bad) cmpsb nopl hlt fldenv pop out inc adc jns add and sbb ret xchg push sti loop fsubrs jb,pt mov mov inc inc adc adc jne cmp jo push cmc push fiadd mov jns icebp mov adc jg mov sti repnz xchg inc jbe cmp jmp mov sti jl and test shll push out push int or std outsl jns mov cmc sbb mov subl lcall jo stc push nop pop lret mov mov les es push call jmp aaa or push leave jmp je jmp into call jg and js stos (bad) lods mov pop rorl mov or mov stos jp or les mov ror into or das hlt pop sbb xor (bad) or mov sbb fs shlb cmp mov or mov (bad) mov mov push mov (bad) bound call cmp and incb rorl (bad) mov jb out rep lret fsts and lcall enter mov jnp xchg sub cmp inc mov cmpsb sub or lcall cwtl xchg or xor sti push cmp mov out fsts xor mov dec or jb icebp pop cwtl sbb xchg push ret test jne repz and call inc jne mov dec xor sub fwait scas or and add and ljmp mov movsl sbbb mov xor pushf gs cmc mov icebp inc inc dec ja jnp inc orl cs sub jns ret mov ljmp mov stc push push jnp out inc mov out mov sbb pop fsubrs das inc stos in call sbb and pusha sub jbe stos ss cltd (bad) mov jge xor aad fidivr jnp lds repz push das cmp (bad) push stos das iret mov fiaddl sbb mov jo lock xchg sahf and mov add punpckhbw enter cmp cld ret pop imul shr popf xorl cmp loope or sahf je or neg dec lods clc push mov rolb test lea add push lahf shr cmp jb push mov mov push aaa cmc mov lcall outsb repnz pop lds stc test sahf das out mov sbb leave jl lock mov loopne mov jge jne cmp stos add enter xor mov es sbb cmpsl sbb sahf xchg xor pop mov jge cs mov dec inc add mov popf mov fidivrl fs ja insb sahf and andb or pop imul call fbstp sub lret jno (bad) fidivl mov jns xchg mov fist sub (bad) dec insb fwait dec push popa mov inc (bad) movsb cmp mov mov arpl (bad) mov icebp fsubs fcmove jl arpl outsl add lods int sbb out js push test adc in jge int3 out bound roll pusha jb mov mov cltd iret test es test aaa (bad) lock lods (bad) repz jae fcmovbe dec push sub and xchg rorb arpl and jecxz cmp (bad) pop clc cmpsl rolb fcmovnbe jg aad jno mov lds mov into outsb sahf sub inc orl and (bad) ficom (bad) sbb in pop adc je or hlt push cwtl cmp lods inc fmuls nop xor jmp outsb test mov rcrl sahf (bad) xchg push pop cmp repz push cltd clc outsl add jle pop (bad) xchg inc iret cmp pusha (bad) push test lea mov into xor dec jnp fs nop mov push cmc push repnz inc mov in test mov vmovsldup test negb scas data16 in das mov dec or jb icebp fdiv add ret dec dec jmp jl aas dec inc adc mov add xchg push sbb test dec shl lea int add cmp or clc or jle and fdivp hlt enter xor fnstcw ficom js repz sbb push xchg mov je imul ret xor adc mov mov mov xchg cmpsb mov jmp out cmpl mov mov test clc js dec test lahf jb aam addr16 dec lock sbb pushf lock std cmp test pop and xchg or mov xchg dec jnp call mov xor push add cmp shrb inc mov bound mov lcall (bad) shll nop loopne mov cmc inc push shlb mov repz mov mov out sti xchg inc ss fldenv fildll lret lret or xchg cld cli outsl test mov add add dec or int3 pop les add add jnp jne test enter lret inc push jle pop cli jge add jnp in decl iret in mov xor pop stos addl cld and (bad) xchg xchg pop jo add stos inc cmp repz inc ljmp mov xlat cmc fdivrl add mov cmpsb push and mov inc push out dec dec adc and jnp (bad) cli inc je insl cld or arpl mov idivl lahf lods mov cmp rolb ret inc mov mov push push iret in sbb out pop out dec and jns mov subl inc je ss sbb cmc test mov pop dec mov sbb sub jno (bad) into pop push stos (bad) into inc jmp push inc dec aaa (bad) fsts lcall (bad) dec cmpsl adc mov roll add cmp flds push xchg mov int shrb fisubrl lret sub imul imul shr popl out orb adc and sbbl xor xor ljmp push cmp test mov das jl fld xchg adc lahf mov jl movsb sub lock xor aaa dec lods sub dec in leave inc dec xor rcll enter shlb inc fnstsw pop mov ret lcall std jb pop int3 arpl and sbb scas cmp popf mov jl ret mov es cmp (bad) aaa push sbbl sub (bad) adc (bad) inc sti pop inc push dec pop insl mov loopne add jecxz enter pop pushf adc icebp cld mov je ss and cmc (bad) repz pop stos jbe pop sbb jge mov es ret stc clts mov push push push dec dec cmp neg xchg stos xor insl and push push repz cmp outsl (bad) sbb loop es mov mov cmp dec ljmp fs rol out fimul arpl mov and add fistp xor pop loop (bad) enter in and lock rcrb sbb test leave negb push dec divl adc das imul jne test pop push pop inc dec aaa fcomi fld cli inc add add jne xchg adcb mov add mov jno cmp mov movsl push sub test xchg ss ficompl movsl inc loopne int3 (bad) inc adc test xchg push push xchg pop (bad) ja inc in pop out dec and xchg loop outsl and sub push dec xor in iret dec adc std in cmpsl daa loopne xchg adc jo fld jecxz mov mov dec scas dec jle lret mov js dec inc lods push dec pop cs and pusha fs (bad) mov hlt xor and pushf out jae inc stc jge adc lret call mov sbb mov int xchg dec and jns dec mov loopne mov mov ljmp pushf cmp mov inc in dec stos jl cmp add loop scas mov add scas inc inc and in pop jl je fsub (bad) fildl pop jmp sar ret repnz rorl pop (bad) sub std xchg cmp imul pop aad cmp cmp sub pusha ret movsl dec mov (bad) dec call push inc pop push xchg cs inc adc aad add xor movsb es lahf leave push mov and add popf jl js repnz sub dec mov mov mov dec inc lods jno (bad) push push sahf sbb mov sub les push (bad) inc sti sub loop in in call mov adc pop hlt pop xchg dec and jns xchg nop mov in jge lods mov clc or jp pop imul cmpsl cli scas test int or das mov imul test aaa lret test push jecxz lds cs mov cmp out icebp inc sub ret jle lock xor cmp hlt push (bad) pop loopne outsl arpl call dec or sbb sub adcb mov jg (bad) or lahf loope jae pop int3 in int repnz add cld leave pusha cld add ljmp mov push fbld xchg gs mov clc clc cli jecxz pushf inc (bad) fcoms push mov cmp ds or jp pop imul pop (bad) movsl mov int or das mov cld or test jl aaa lret test push jecxz lds cs mov jbe repnz inc sub ret jle lock xor cmp hlt push in xchg push out jb das inc lret mov fnsave test sbb adc repnz mov pop xlat mov jg (bad) or lahf loope jae aad mov inc xorl daa cld leave pusha cld add ljmp subl push jmp sub lds adc pop (bad) outsl mov ret jl jle arpl repz xchg cmpl mov inc (bad) stc int3 push xlat js add sbb ljmp cmpsl out int3 test loope jge into inc insl rcll jge test aas jae jbe jl popw and inc mov push ss jecxz repnz sarl jne mov movsl cwtl arpl (bad) cmpsl or ret mov les fstps loopne shrl pop dec sbb fsts and push dec cmp in fwait jg jb pop xlat add mov jle add mov mov jecxz xor inc jb and cld jp mov sbb mov or push icebp test (bad) or (bad) cli inc jnp mov cld ds jo or testb clc add out decb test xchg mov test mov in and sti ds mov push mov call xchg (bad) fucomi add inc test aam data16 aad inc jg testl sahf out jo or (bad) lret (bad) das pop test xchg cmp xlat cltd cmp int3 stc das cmp xor jl stc and push stos les gs jne mov dec (bad) stos (bad) and jl lret or fwait jo insb test inc or inc (bad) (bad) adc mov (bad) lret into xor mov int repz jmp mov cmp fisub mov push stc pop inc cmpsb or inc add or jb mov mov add clc jle out add mov loopne xchg call (bad) jne jo stc and dec fist sbbl mov dec or (bad) inc mov sbb in or and add ss push fildl pop sub out push (bad) fs clc pop inc cld sub sbb jbe movlps pop (bad) cwtl xlat in aam repnz lret pop dec adc mov pop or pop cwtl mov aaa fwait cmp iret mov and inc in push jg cmp cmp add sub scas ja pop out stos jae int3 jg test aas dec decb test movsl enter mov cld xor fnsave bound pushf sarl xchg xchg cwtl pop jo jns iret (bad) and jge adc pusha cld fldcw (bad) mov pop xchg pop mov xchg (bad) sbb mov mov mov add fadds movsl xchg fisttp mov jg mov xor push out mov mov rorb je adcb cmp pop (bad) sub rcrb (bad) jle xchg ret jo jbe xchg push adc pop pop cmpsl push in scas jmp outsl cwtl push push test in sub movsb pop out pop jge jns jle add push adcl arpl in jnp sub rorl sub in mov je stos scas inc cld add jmp int3 fisub cli ja mov mov mov repnz pop push cli loope scas pop jg xchg cmpl test mov xor push int3 hlt dec adc int3 popa pop repz jle dec cld dec outsl out negb or aad mov pop leave or jae repz not dec cld dec sahf cmpsb jno (bad) push aam jo push sbb push push and xchg mov mov add insb mov out or push js lock lods cmp fldl2e mov xchg mov mov and into mov jg in pop aad mov sbb push mov lods movsb and inc outsl call cmc and out call out cld cmpsl out adc lcall inc test cmp add test sbb lcall mov scas test fcoms add movsb jne aaa in ds stc mov sahf adc je mov nop xchg dec xchg inc add out push push mov shr cmpsl cmpsl mov repz mov (bad) or add mov das cmp cmp dec out (bad) cmpsl es sub ficomp ret (bad) in inc in mov and std fwait jns adc repnz jae mov cmc adc or call clc mov call stos push lcall es add dec jb jle orl sar cmp cmp je mov mov aas test pop stc cmp sti push and jno aad or sub dec test mov icebp loop,pt nop jle and icebp pop cmp push mov push pop add inc sti ret sbb call inc inc into addr16 sub or push mov data16 fldcw push iret pop xorb lock mov dec jo xor and inc or mov loop (bad) int3 jne lret mov int jmp and push add adc xor enter addl jle inc std int3 mov dec mov cli pop mov inc gs xor mov dec sbb arpl aam jle rolb pop idivl loope sbb xchg jb push es (bad) enter test dec nop pusha jmp (bad) jge lahf into xor je stos imul loope jmp cwtl negl xchg inc xchg jge cs jns or dec add mov (bad) out test adcb and dec sahf aam jp leave test lahf int3 aam (bad) fisub mov repnz js cltd xchg add pause nop cmp mov les ja call dec into cvtps2pi rorb stos test mov movsb inc mov ja push lret add jbe aam test fcom cmpl scas imull icebp sub xchg dec add ret aad sbb test test movsl fnstenv jb mov cmc sbb int3 push cli inc or mov cs xchg lcall mov pop std lods inc mov je add fdivs jmp ja pop mov in js flds outsb cmp pop or cmp xchg cs mov lret mov movsb mov insb xchg dec add ret aad sbb enter push lds xchg add sahf and shrb sbb ret dec icebp jecxz jne into cmp jae push arpl push cld ja test dec fnstenv in sub scas out inc push push lods es loopne fdivl adc xchg xor mov mov mov subb dec fnstsw dec xchg sub out push jnp inc pop mov lret jnp push imull add pusha (bad) je jmp xchg mov add cli gs cmp ljmp xchg sub (bad) cmp jne cwtl aaa lock inc cmp add sub push test fnsave jne bound inc adc mov jmp into xor add xor push xor jns dec mov pusha mov negl push sbb gs jge xchg jo or xor jle (bad) mov scas (bad) (bad) jmp faddl icebp in loopne rcrl dec cwtl ja movsb lret add xchg sbb lods test jmp pop push rcrl clc mov pop or int jne adc xor inc add rcr jo dec sbb out imul repz xor js xchg imul add bnd push mov (bad) lcall jecxz xchg roll mov jle lods clc xor nop (bad) leave iret aas jl xchg (bad) mov sbb inc xor mov fcomip or js aas sti mov or jp imul repnz mov psadbw pop jl (bad) pushl stos jg and imul jge adc pop xchg xchg pop shr aam sub rcl imul xor pop pop xchg inc pop add sbb loopne std xor clc mov pxor dec inc iret cmp xchg ror ljmp test aad stos (bad) cmp push jb pop movsb fptan out jmp imul jno cmpsb je pop inc (bad) cmc mov jmp pop nop jnp repz subb pop add loop jnp stos sbb xor cld cmp sti xchg or dec fwait push mov xchg add xor lock popf cwtl add or popa jg rol je push repz fsubrl xchg mov adc aad repz ficom cld adc jmp (bad) adc jle push dec loope loop ret loope js aad ds mov mov lea add cmp add inc aam das push addr16 mov xor push lods loopne ss popa mov cld adc sbb cmc negl inc sbb cmp push repz scas lock outsb push data16 pushf stos jo lret pop repnz dec fisub cmc mov data16 ja repnz stos push push mov inc repnz cltd mov mov in push stos fwait add or push test mov inc cmpsl dec xor stos or pop stc dec vmptrst cli int test jae xchg test ljmp push out adc outsl mov jmp ljmp leave (bad) adc pop mov lds mov cmpsl sbb popa add adc inc jne sbb lock jle dec fwait ret or hlt idivl mov push jb (bad) testb jb,pn inc adc pop and lret mov inc pop mov (bad) jo subb add pushf mov test dec cmc nop push in scas insb negl lock aas mov xchg dec dec es push movsb ja test (bad) mov dec add push bound add cmp fdivl pop pop pop fistpll loope jae out push pop xchg fdivrl mov xchg clc push (bad) roll popa or sahf xchg xchg insb inc sbb sub out arpl int icebp nop jo in test mov loopne pop adc jne (bad) add or xor add jl xchg add sbb (bad) sbb push push jge pop sub or push jo ret pop sub mov in jmp loop fstps push push (bad) inc xchg xlat imul mov (bad) jb sub (bad) or or push jnp xchg push mov in call enter iret (bad) jns or (bad) fisub xor lcall cld adc mov adc inc inc dec test cmc xchg (bad) mov or inc dec sti mov jg mov lcall pop stos fdivrs (bad) bnd and mov add or fcomp push imul loopne scas imul mov call jmp loope add cltd xchg test fstpt addr16 dec dec add cwtl fsubl mov movsl mov cmp inc push cmp xor daa inc and adcl lret or clc inc mov inc mov or push std or pop dec (bad) push mov int3 outsb xor jnp mov rcrl pop daa out xchg adc lcall es stos push (bad) or or jmp inc cld aas testl les (bad) xor mov sti int sub fwait loop js pop jbe mov pop cmp mov ret mul pushf cli inc imul das cmp sti neg popa aad push add bnd sbb lret and pusha enter (bad) jmp loope add add ljmp rorb xor je jne scas push xchg and cli jle lret stos mov push cmpsl sub out sbb jbe or (bad) fmuls pusha (bad) sub xchg aaa insb sub sub cwtl inc nop int push int3 inc mov inc cmpsl dec pusha mov stos js xor cmp ret scas roll dec sahf mov xchg (bad) xor sbb fisubl lods dec into dec outsb adc cmpl cld gs push jle insl adc fistpl dec aaa and lahf cmpsb std js inc mov sub xchg pop cltd mov lea test or or pop ss ret inc stos cmp pop fcmovb mov (bad) in cmp out add popf add jae scas out repnz nop add leave cmc cwtl sti add fs or mov inc rcl popa push push sarb xor pop sti add xor cmpl cmp hlt pop xchg jo mov icebp aam cld popf loope cmp inc xchg pop jne test int3 mov das mov insl jecxz dec jb icebp fdiv xor push mov xor xor push dec test rol pop cmp das xor mov shr mov sub cmp ja mov insl adc js push subb rcr mov jb xor mov dec jnp cld leave mov ret in (bad) (bad) dec mov xchg jnp inc dec ja jnp les cmpsb dec sti pop add xor inc lret insl and pop (bad) cs jmp sub iret pop ja jp or mov aaa jle,pt in mov mov sarb hlt aaa cmc std (bad) int push dec xor (bad) ss outsl xchg xchg and loopne push push xchg ret mov out (bad) movsl mov xor pop popf xchg into sahf or repz adc and mov mov imul ja push mov lods in loope ret pop outsb or into ret loope jecxz int lea in xchg data16 sar jb les adc idivl clc fs jb mov cs mov or frstor insb call jb sbb inc add mov add mov inc (bad) push lock repz rolb push cmp std (bad) mov pop jl xchg or add pop cwtl fiadd adc xchg test sub or outsl adc cwtl nop ja cwtl mov jecxz testb sarb xlat call imull inc fadds mov xchg mov (bad) int icebp nop pop dec cmpsb mov lcall (bad) adc movsl jnp clc (bad) dec mov sbb adc es out xchg popa mov pushf sbb pop rcll xchg test jmp or jmp cmp push sbb in lret push dec jmp int jae loopne mov push andl out andl jo fimull gs jl xor in in (bad) or fidivl cs jle cld inc jns sti pop mov mov mov icebp ja,pt cmovle dec out push dec jbe sub fmulp test leave aam mov mov mov adc (bad) xor cmp push mov add ja pop xchg sub pop mov add mov bound cld pop mov imul inc or mov test (bad) jmp icebp xchg lahf dec aad mov int3 and lret insl add mov divl loopne js outsl adc pop shrl inc inc test mul frstor fild adc lods cwtl add pop dec pop je jp inc orl lds or mov push add mov loope mov xchg pop and or ret mov ret push mov stos jbe sahf jae mov das add sbb bound in lods push jecxz pop inc hlt ja ja pop or jnp mov repz dec mov ja sbb cld ja mov fild pop out shlb test aas mov ds rolb dec push cmp lcall test or icebp ds xchg inc aad or inc jbe into fcmove int orl or mov test mov push ss popa sbb (bad) jmp lahf ret out sub popa imul ss add jle add imul movsb cmc ljmp dec insl adc fistpl mov dec cmc nop sbb sahf pop loopne call lods out repnz mov out inc lahf jno cs xchg mov dec nop jg mov adc or sbb mov (bad) test fstps (bad) in lds mov (bad) adc popa inc imul jno mov xchg inc add add push sbb pop fucom aad outsl lods subl sbb xor push jmp inc into dec cmc call call inc rolb test jmp add rcll test push or imul inc push mov jg test lahf jl cmpsb stc dec fwait out mulb pop dec clc push lods mov mov jno popf enter shrl sbb lds or push mov (bad) dec pushf jle cli cmpps std int cld adcl ja sub stos ss out xchg xchg inc sub call cmpsl (bad) data16 push test ds scas cli stos enter enter or or sahf xchg add sti push fs jmp adc and adc cmp adc rcrb inc jns hlt mov cltd incb cmpb lods sbb rcrb sbb jle push iret pop pushf add add lds and stos movsb push in mov out sbb push mov pushw jb lds hlt (bad) pop sub (bad) mov stos into sub push das push test lds jg push ficom push mov out imul (bad) sub jnp inc dec nop push (bad) fsts pusha adc inc lock mov arpl inc je lcall lods inc sbbl add lret add das push cmp pusha les jne cmp fwait lahf mov dec push ljmp cmc insb enter xor lahf and xchg push inc into dec adc ds aaa adc or add adc sahf fdivrs sahf aad cmp inc lret or ret add pushf mov daa cmp cmp pushl xor je icebp jecxz scas push mov mov (bad) xor in push pop xor iret sub ret add je cmpb (bad) and dec aaa jge jmp out xor (bad) daa mov jmp les in in hlt outsl push push and ja pushf stos and push xor leave lock je nop cltd push push fidiv insl mov cmp ret shlb lods or int3 or nop adc jecxz fistpll add outsl in sub adc cmp lcall xchg out fnstsw sub int icebp nop mov dec cmpsl add pop call dec loopne adc jne mov xchg jns jmp add or adcl ror add cs ficomp lcall mov or and jo sbb cmp push cmp sbb fistpll shr out rorl mov and jo sbb cmp push cmp sbb pop sbb out lods imul fdivr data16 inc insl inc (bad) out xchg or jbe add pusha test pop mov bound push cmp out sbb pop movsb jb or test add pusha test pop mov bound push pop sbb sbb enter adc xchg jl sahf xchg cli sar call lds ljmp inc sub mov xchg jns lret in cltd or test add fadds gs fptan pop repz pop lahf out lods imul fcompl cld inc insl inc sub inc xorl loop jno pusha test int3 jne gs fldenv add shr push jns or and push pop aas (bad) mov out das sti rorb and pop (bad) mov pop mov psubw push pusha (bad) int3 lret xor jge fwait add sbb mov mov (bad) push adcb cmc mov test mov ret add dec sarb dec les cwtl jnp and sahf xchg add mov jmp xchg pushf sub dec and xchg adc (bad) jae adc or aaa xchg jmp and add or outsb and (bad) mov lock scas insl pmaxub in xorb ljmp mov nop lcall cmc sbb adc and add mov add add movsl fsubr dec sbb or sahf dec (bad) mov leave rclb jbe xor ljmp stc andb (bad) dec adc shll loopne push dec inc negl xor fs add sub stos out push xchg sub xor jb imul cmpl mul das test sarb je mov in sti imul sbb int3 xor ja dec mov mov pop inc xor je mov xor xor sahf mov ret ret cmpsb addr16 jmp cld cli outsl test mov int3 pop or loopne xor pusha inc hlt xor (bad) push add dec enter jnp inc aam push movsb ja je mov xchg push das push outsb gs aad lahf rep insl jo pop aam push (bad) ret mov in js jmp lea pop or cmp icebp nop xchg aaa fidivrl mov fist loopne ss popa push (bad) adc add inc call clc lret push xor lcall clc pop cli jno lret push push test mov add rcll out pop (bad) (bad) dec sahf and and hlt xchg movsb mov test mov popa xor pop popf mov adc sbb adc push adc cmp lahf call imul cs push out into jmp fsubrs mov out bound sahf inc jbe lcall and ja jno loopne fisttpl dec out mov xor pop jmp sahf mov sub loope or or add aas or call call cltd test mov adc push xor call xor xchg dec cltd push inc cs lods mov pop jmp or lret jno into insb mov adc scas fistpll pushf add adc jne mov inc ja inc test in cltd repz sti mov repz mov cld aad cmp inc xchg pop cli mov add leave cmc cwtl jge adc adc in lds stc aaa test movsb mov cmpsb (bad) mov andb inc or mov inc jmp call mov mov loope sarb dec les cwtl jnp and sahf xchg add adc pushf add jmp push loop fs icebp ds mov jg or addl jne push cmpsb je scas (bad) push inc les mov outsl lahf lea in xchg jbe mov bnd add faddp je dec jbe pop push mov sbb ss mov out adc bound dec inc notl dec xor inc (bad) rcrl cmpsb out int lock dec imul sahf cmc add movsb jne adc push enter rorb insl inc test pop stos cmc je xchg (bad) mov pop loopne pop fidivr mov add or pop repnz push rcrb adc mov sub leave lret enter out push lods jbe cld push lret dec push insl pmaxub in test or fcoml sbb and mov les mov jnp (bad) pushf int3 repz push fidivl cwtl dec ss pop fcmovb mov (bad) in cmp mov mov out mov test test push mov aam sbb and push icebp into mov mov inc divl cmp fxch cli nop loop cld push mov pusha out cmp xchg xchg ja pop repnz xor pop jbe sahf movsb xor out push shll sbb adc sbb pop cwtl adc (bad) aam adc inc lret mov dec jbe sbb ret in js ja mov or in pop test test push repnz jbe xadd add les rcll in mov inc popf sbb dec or sahf fxch in adc icebp ds jecxz lret in ret dec cltd mov inc or inc jle test es pop call push sbbl fsubrl shr std push rorb (bad) xor ds sub inc xchg push adc and out mov adc jo lret aaa bnd inc daa mov inc inc jns lock pop int3 dec jne jg daa lods pop or inc icebp (bad) xchg inc rcrb push jae lret flds add punpcklbw int3 inc in dec (bad) and or mov ja xor and adc jns icebp ds aaa movsb imul das push cltd loopne cmc sbb mov inc fstpt mov shrb ja push jne mov in sub jge inc sub pop repnz xor in pop mov add xchg or mov or xorl mov adc or adc xor orl insb adc xchg inc rclb jno fist jne xchg pusha cld inc gs jne and out (bad) mov fiadd add repnz push mov xchg scas mov aam pop and mov mov push das push or cli or jmp fstps pusha push out dec out ljmp insl xchg clc pushf jae ret inc scas in ljmp jmp dec pop js adc ds nop stos or push pop outsb or xor lea rcl (bad) jg mov rolb sti sub inc inc gs xchg jo insb loope orl addl insl xchg dec cmp icebp nop sub inc mov les out push lcall xchg scas daa jg cwtl push in xor testl and xchg push inc into pop repnz and cmc push lcall xchg scas daa jg cwtl push in mov testl and xchg push inc into pop repnz mov out push lcall xchg scas daa jg cwtl push in mov testl and xchg push inc into pop repnz mov xor push lcall xchg scas daa jg cwtl push in xor movsl setp mov push inc into pop repnz and dec notb sbb mov add (bad) add mov movsl or (bad) daa loopne mov repz fnop xchg mov or push mov gs into mov sahf ss cli push cli std insl push (bad) loopne dec rcrb arpl sbb les jno jl pop cmp push (bad) pop subl lahf pusha into mov int3 fisub setp and insl sub icebp ds sahf rcrb xchg push out fld out jae fcompl push mov add aas and (bad) pushf mov sbb in mov idivb mov mov (bad) movsl xchg adc add aad or ljmp lret jle push iret pop pushf add add lds out mov mov rorb andl adc xchg imul xchg pushf pusha lret movsl mov lods inc inc jne in into loop dec into pop adcl push jmp mov or hlt inc jg psubsw cwtl push je (bad) in adc lds imul movsl movlps add fld insb xor (bad) push push add push lods push add xchg rolb gs gs cli cwtl inc adc push dec or inc cmpl int aad jmp push ds sub cwtl stos gs lds stc aaa in sbb test cli cwtl rclb cmpsl and aas mov dec movsl cmp stos test shr shlb je repnz xchg movsb stos push sahf xor inc mov mov adc mov push sbb dec insb push ret test dec imul xchg scas daa jg push dec mov lret scas loopne test ret xchg push inc into dec adc mov std jmp cmp ds cwtl xorl clc inc add jp enter mov enter xor test cmp cmp mov dec lock dec fwait cli mov icebp ds add xor lods pop das daa outsl sub enter int3 cwtl xor jp cmp out imul arpl int3 pop and imul add rclb add lea jle into (bad) arpl iret in jae int3 mov mov cmp aam idivb cmpl cli fcoml mov sbb test ss jge or scas scas int shll cmp lods and fs out push lcall enter mov jecxz fldenv dec inc sub insl xchg inc shlb jg push dec pusha or mov sub test xchg outsb or popa sbb int3 add repz push xchg adc mov push (bad) repnz adc (bad) lods in add fsubs fist cwtl inc (bad) or lret lret lcall dec ljmp lcall das cmp sti mov lods sub nop xchg movsb stos push sahf mov (bad) sub xor ret in xor aad or ljmp dec insl int3 mov cmpl pushf adc rdpmc sahf xchg push inc jp out insl jmp inc fidivr inc mov fnstenv lcall in pop or stc adc int icebp nop sub fwait mov add pop std jo mov mov and mov jnp lods clc fcompl cld push mov xchg jns psllq or mov add mov xor or and popa or sarb (bad) push cmp sbb icebp pop hlt aad lahf out pop dec inc lret sub xor mov fnstenv sub inc jne push out imul out sub jnp fbstp mov out stc in sbb outsl lcall ja sbb cmp jmp or lods jo mov jbe out inc (bad) push mov ret out jae pop mov nop test mov xchg jns loop in lahf adc jmp fs shr pop int3 into or scas ds test xchg stc push popa movsl mov push insl loopne cli dec fwait adc xchg mov jecxz mov stos mov add repz push mov in cmp (bad) testl mov scas in pusha ret dec dec js mov mov mov xlat mov sub lcall cwtl mov out push ret or jmp cmp cmp imul lods test scas movsb je xor mov lret mov in lods icebp into mov mov add xor clc aam fdivr pop icebp jns iret adc gs ja mov xor test push push and (bad) push adcb or cmp into mov push push or add or (bad) repnz adc (bad) sub jb into xor out mov mov or jb mov push aam cmp insl jmp jo mov sub cmp (bad) pop fcmove mov (bad) in cmp insl or xor jb,pt sbb mov inc mov out fnstcw mov cmp sbb popa imul and add les mov pushf or test sbb pop jbe inc or xchg add fistp jmp pusha mov test ror in mov fdivrl in sub xchg or and xlat cmp push cmp sbb outsl sub out pop dec inc lret sub dec jbe sbb push pop ficompl inc xchg jp jne push out imul pop sub jnp ds mov and mov xor pop mov and shrl inc dec adc cmp rcr xchg test test je (bad) adc scas mov gs or in lods add nop or and out and mov xchg inc inc or stos sbb sar cmp push mov mov lds mov dec push stos inc push mov or cltd repz jb lds sbb leave pop dec jmp xchg cli inc push int3 jnp ds dec adc pmaddwd mov mov add inc xchg pop cli mov dec jbe sarl cmp inc in (bad) out ljmp int repnz xor je lock dec pop icebp ds js aad mov dec sub neg dec lods clc push ss xor mov push fcompl jmp pusha mov scas cld enter int add repz xor pop push out enter loope xor inc xor mov push fmul jne gs (bad) jne rcl pop lahf in loop out test adc lcall sbb (bad) fwait add cmc shlb cmp add mov or scas mov ja cmpsb andnps mov and aas jbe shld out les pop adc jne jg imul loopne ja lret jmp aam aad add sbb mov mov (bad) push cmp add mov je sbb mov ja cmp xchg inc jo cmp inc (bad) inc add sub mov push test dec insl adc jge fidivl fsubrp cmp or decb ja imul inc (bad) cmp add fwait push push lock cmp mov hlt aam js xor mov jne xchg mov push cmp sbb lahf scas pop add jbe jecxz test (bad) (bad) (bad) stc adc int into lock icebp pop xlat imul (bad) inc inc adc dec (bad) cmp jecxz cmp ja or loop xchg les and add dec mov push out imul pop scas (bad) test jle pop sbb xchg add or add push sbb mov lret scas movsb xchg xchg pop in roll push fptan popf out pusha mov push sbb (bad) mov mov and in aas xchg xchg and (bad) (bad) loope popa jae and inc stos stc dec test inc lock pusha mov repz push in jmp jnp,pt mov mov or jle and mov ret or lock or out or sbb lock lret std pop decb lds add push out cmp adc jg or stc push fiaddl cmp sbbl ja or fisttpl cltd inc hlt aam mov or inc jbe jbe mov cmp mov xchg sub pop mov push mov xchg adc sahf shr das xchg xchg mov out mov lret jmp movsb stos push sahf add cmp sahf aam out addr16 sub (bad) mov outsb fwait push fdivrs pop ficompl dec add fsubs sub aaa xchg cmp pop dec aas pop mov or lods pushf add ljmp add add mov fsubl pusha (bad) mov outsl add pop outsl lahf jb or scas mov ja cmpsb in loopne int mov repnz push ret xchg push inc into dec cmp in popf mov jne add pop dec dec jg jnp je subl pop fdiv ja ret jb pop mov ret repnz cwtl adc call ret out ja inc loopne inc (bad) lea cmp mov xchg repnz sahf mov cmp mov test pop add pop dec ret pushf xor scas stc dec pop xchg orb test cmp inc lock test push fnstcw push fdivs mov pop aas icebp aaa pop push mov cmp mov adc arpl test fwait ret out mov mov xchg xchg fbstp fldt push lret sbb add icebp popa imul and arpl inc mov dec jne xchg mov push cmp sbb jmp scas inc pop lock inc lret mov sarb jbe xchg stos les add inc push cwtl push cwtl sti mov add testl jmp int3 cwtl cmp jo (bad) mov inc jns xchg aaa fstps sbbl (bad) jmp jmp xchg xor dec sbb inc or imul or outsb fwait loope cmpl divl sti fistl inc xchg les mov adcl jmpw sub clc push test in push fdivrs cmpsl or and addr16 jb dec (bad) cmp shr cmc mov fwait inc dec mov (bad) cmpl popf std scas or (bad) fsts xchg inc cmpsl mov popa push jns or or icebp and push inc inc jns sub ret (bad) roll xor xor divl mov adc pop shrl inc push mov mul sub rclb cwtl add pop dec pop je jp inc orl jo jge jb or divb (bad) jae and jne divb lds into pop repnz push xor roll sub insb mov mov mov adc push pop ficompl adc cmp test stc push jmp inc into dec push jge jge sti in popf testb add cltd pop fwait pop adc inc or stc aaa xchg cmp or sbb dec lret loope xor mov cmpl cmpsl out adc in inc or sbb lcall xchg test xchg movsb stos push sahf nop xor aaa mov popa in stos sti add out mov ret dec ret pushf xor scas stc dec pop xchg orb data16 and loopne xchg inc mov jb lret imul cli adc insl push inc sahf xchg push adc aas rorl imul clc testl aam pop loopne cmp jno mov pop aas icebp idiv divb popf mov ja stc (bad) js cmp sub es rorl jo into mov or sbb pop outsb nop sbb inc int3 mov mov fcmovnb or adc icebp lret stc test es jle add sbb mov inc jns push xor test or icebp ds rorl jnp inc or push test inc incb push add pop les cmp inc or fnsave das sarl lcall divl pop rclb xchg les out test xor push test in push js adc lock popa mov cmp shrl pop icebp outsl and inc or test sub push mov xchg fwait adc mov addb xor add lret imul xchg mov pushf jg xchg testl push mov test sahf das cmp pop aas icebp in nop pop test test pop mov test mov cmpsb les rolb xchg dec insl adc sbb cmp pop (bad) repnz sahf adc outsl je gs sbb sbb clc negb add ss dec adc cld (bad) test sbb (bad) shrb cmp cmp sbb dec sbb add icebp popa imul aas jbe addr16 lock mov dec jne xchg mov push cmp sbb insl leave test add jbe sub (bad) stc adc int into lock popl xlat imul in xlat xlat cmc (bad) mov (bad) cmp jecxz cmp ja add cli js scas ja in bound push push inc (bad) rcrl (bad) in lds mov pushl test lds mov cs mov int inc inc jne jg stos mov lds aaa pushf xchg imul jmp xchg test outsb test dec xchg mov pop in or test cld ja int scas daa jg xchg mov sar mov stc mov in push loop in and ja mov push jmp outsb nop mov sbbl (bad) jmp add mov add jg mov xchg cmpsb lods mov mov int pop lahf orb stos iret sahf xchg xchg call inc hlt aam jo sub jge shl inc push int3 cmc cwtl xor jl ja push sbb push add pop mov xchg pop mov inc les ret jns xor pop jo adcl or or icebp sub sub out or or cmpsb or pop mov mov inc jns sub sbb stc jp or icebp ds repnz jnp inc or mov or data16 jmp aad pusha inc inc sbb add cmpsb sbb shl js imul mov dec int3 sar adcl ja lods cmp ss idivb clc xchg inc ds add sub es xchg cltd mov ds cs stos test jae fidivr pop fsubrl push movups fnstcw xchg jo push popf fdivs iret test mov inc mov adc bswap pop clc pop aas icebp idiv imulb jae adc push ja ret jns add ja ret xchg icebp ds rclb and or and mov push inc (bad) cmp inc cli dec fwait adc les jnp stos mov add add add icebp mov jge cltd repz jb lds loop insl jmp ds in aad mov pushf aas js neg dec lods clc push mov xchg jns xor xchg shr aaa cmc jle xchg jl adc cmp cmp push shl dec push inc inc jns xchg pop pop in inc orl (bad) xor ficomp jmp pusha mov inc pop fisttpll fisubl xlat sarb sub repz jb cmp adc lcall dec and jne sbb mov mov (bad) push adcl add xor add lods mov imul leave int3 mov inc jmp add les (bad) nop and pushf (bad) mov inc cmp aam popa loope or andb repz mov lods pushf add ljmp nop mov dec inc lods aaa add mov inc or inc dec aas sarl xchg push in jp movsb stos lcall mov add jle lret (bad) jle xlat stos jl cld cltd repz jb shrb lcall icebp ds lods push aad mov fdivrl cmp clc push ss popa and jp pop ficoml movaps popa imul adc add int3 add imul movsb cmc ljmp dec insl adc fistpl mov dec cmc nop sbb sahf sbb push pop (bad) sbb test mov out inc jno jo mov xchg mov dec nop jg xchg in jo inc adc or sbb jbe (bad) test lret nop rcrl (bad) in lds mov (bad) ss inc imul jno aam lcall cld add push sbb pop xor cmp subl xchg xor stc push jmp inc into dec cmc (bad) xchg sti call jle int3 lds test xor mov stc adc int into lock loope push push lods psubsw es cmp pop cmp imul pop jle mov rorl and xor sub gs popa in and icebp nop xor xchg mov ljmp aam roll js rclb imul sahf dec mov lahf or stc dec fwait out mov xchg sub push rclb ds mov fnsave sub fwait add sti pusha inc pop jl add pushf add adc les ss adcl or xor xor clc push rclb or fisttpll sub jnp lock gs cmp dec mov call and clc mov xchg push in and ja cmpsb cmpsb mov dec aas out repnz (bad) ds outsl add or mov outsl add pop and ja or scas mov ja cmpsb andnps mov pop test push (bad) sub shld out les mov es jae int3 popa lods and jg sar xor jb jne mov aad lock push pop clc pop aas icebp lods or mov mov xor rolb xchg dec insl adc sbb cmp pop (bad) repnz sahf adc outsl je gs fstps std jge adc clc test ss dec adc insl xor lcall jl adc sub pop add push mov stos sti cld std ljmp dec ret pushf xor scas stc dec pop xchg orb mov pop shl inc lock xchg jge cmp jno mov pop aas icebp cmpsl jbe test cmp mov adc arpl cmp test fwait ret out mov jge xchg mov mov leave jp lcall xor mov cmpl daa fstpt imul jecxz (bad) into add sub bound mov faddl mov stc mov incl adc lds sub xchg inc push cwtl fwait dec rcr aad js add jmp lret into inc pushf mov sar js setno loope ljmp ljmp pop xchg jne (bad) mov sub inc sbb add pushf add adc mov jo stc mov push test push shrl pop push lcall add pushf add adc les aam test xor aas loope clc push rclb push jbe or or lock mov dec test call (bad) sar mov xchg push in scas mov mov sub (bad) ja sub cmp and or lea pop push andl movsb movsb dec out sbb inc into xor rcr push push push lods pop push ljmp add adc mov mov mov add das xchg adc mov pusha lcall push mov aaa in stos or out jmp or mov in inc jne ds lret inc adc into jmp push insl mov push mov sbb pop aam repnz cmpsl fs ja aas adc lret pop or enter (bad) mov pusha adc cli inc add lock dec dec cld and jns pop mov dec in lods test inc fistp repz xchg ficompl addb adc jg inc lahf addl adc lret arpl adc jne jb inc test xchg ret jle push pop jge mov pop jne (bad) (bad) push (bad) mov ficom xchg mov test aad lcall jo mov pop lcall scas lret cmc inc rorb sub xchg push inc into dec add ds sub scas nop int mov ja rclb sbb pop stos xor jge sub (bad) pop lahf fsubrl hlt push cmp popl mov adc lcall push jnp or cmp test fsubrl hlt push push jle test scas nop sub pusha rclb sbb pop dec xor jge and mov pop (bad) pop lahf fsubrl hlt push cwtl mov popl repz pusha rclb sbb pop sbb fwait add sbb mov mov (bad) push in into add mov js pop das push fistl cli je cli mov xchg mov sub repz sub mov dec int3 mov add in inc jne push jp repnz xchg (bad) mov ret scas por inc jno jmp sub fmuls imul or jo (bad) cwtl leave push jmp and mov fwait inc add inc jne pushf hlt xchg ja (bad) movsb fldenv mov add pushf xor scas stc dec fwait ret inc mov mov popa in (bad) cld inc insb cmp push test ja or adc pop add jbe mov push (bad) hlt int std cwtl jno push jo sti call add js clc pop adc inc or outsl push mov loope jge xchg stc (bad) js inc jne aas jl in mov faddp jmp xor inc cmpsb stc dec test andb push dec ret dec fnclex icebp insl hlt int icebp nop dec js push cli add shr sub je inc pop mov jg ftst cmp sahf stc dec fwait out push dec adc clc push movsb mov mov and scas int push shrl out or lds push jnp fwait inc push mov dec cltd jae mov (bad) mov dec lret adc les mov stc push jmp jne nop xchg xor (bad) cmp js sahf or push dec or sbb mov push adc sbb popa test add lret cmc or xorl lahf iret push xchg loopne mov bound inc rcrb adc lret jle push iret pop pushf add add lds push into stos loope jae mov call std cwtl inc lahf dec int3 mov scas ss pop dec dec jg jnp je subl pop fdiv ja ret jb pop mov ret repnz cwtl adc call ret addb inc (bad) lea sub mov xchg repnz sahf mov sub mov (bad) mov add push jp stc dec fwait ret inc jp mov pop call loopne add test cld ja or pop fistpl mov jbe or (bad) hlt int std cwtl inc push jbe sti aam push add add cmp jnp inc or lea imul adc arpl test fwait add cmc push mov int3 lds jecxz les stc dec test fild pop lock xchg pusha pop inc es push jge hlt ja push jne rcrb icebp ds sahf cltd sbb dec lsl inc or jns cltd or push in mov mov shrb mov divl ret roll cld addl ja or inc mov sub icebp lret mov ljmp pop pop xor fwait inc pop mov lds pop mov das xor inc lahf mov ficom jp xor push fdivs mov movsb push in das mov jnp mov xchg push lcall inc or inc push inc mov pop cli mov dec inc pushf mov mov or push out imul std jecxz call shll cmp ret out jae fcompl adc jne fistpll ret push (bad) das aad jmp fsubs sub jp call ret mov xor rolb xchg dec insl adc sbb cmp pop (bad) repnz sahf adc outsl je gs cmp adc hlt mov imul stos adc or scas push xchg and adc test add sub icebp mov and pop flds nop add add xor scas stc dec fwait out ret dec clc push fdivs mov aam mov push inc ds iret orb jne data16 push test ds sahf outsb ret pop pop enter adc enter aas lret jmp aam aad inc dec cld xchg pop out pop lcall xor test cmpsl lds push inc into pop repnz mov dec negb push pop lcall mov fwait das jb or add (bad) cli mov mov push (bad) xor insb jo inc sub dec pop mov jge daa inc imul add lods pushf add mov or pop or jmp fist leave fs mov add adc iret mov mov outsl mov cs mov ja cmpsb andnps int3 jecxz test aaa lcall cmp pushf add fs imul aad das and cld int in mov lret (bad) and pop push mov ficom xchg testb lret xchg cmp mov adcl inc pop xchg fs clc lret loop (bad) jae aam or mov pop ret mov dec lea fs mov xchg inc ds inc movsb cli nop ds mov add jno xor cmpsl stos lahf mov repnz xor movsb jne pop mov fisubl push mov add ret pop cwtl adc (bad) aam push xorb in adc pop jp int in js jae movsl ja push mov in and ja shrb scas into (bad) ds test into out mov mov add sub sarl dec pop icebp jl,pt es aaa test mov repnz inc adcb pop fildl in scas outsl testl out xor cmpsl jge xchg inc inc or (bad) sbb sar cmp push cmpsb stc aaa iret pusha loop shrl adc out fistpl imul dec xor rcr mov jnp xchg lcall pop fdiv ja mov mov mov xchg out dec push mov fwait clc pop lahf jl in mov push (bad) pop add cwtl scas add lcall cs stc add mov xchg xlat (bad) gs xchg mov adc inc or mov pop cmp mov adc arpl test fwait add inc aam int xchg roll jecxz faddl stc dec test or mov xor test stc or or icebp ds pop cltd dec dec mov fild std cmp pop inc test clc ja or lahf sti sub lock add or adc test fwait add sbb jb pop rclb dec fmulp cli add shr or es insb jle and mov jge adc mov je pop mov push mov or lock popf lcall cmp dec pop movsb dec sti int in js lods test mov xchg (bad) xor lods int dec sub pop pop mov jns daa test mov cltd cld inc lret (bad) cmpsb fs loopne mov dec adc hlt leave xchg test xor dec adc and jb ja je scas popf xor pushf add inc stos test dec loope es jle hlt mov repz mov loope push add das int fwait jno xchg jo test dec out mov inc movl idiv xchg fdivrs imul xchg lcall cwtl cmp out push rcrl sahf (bad) push ljmp mov pop fwait pop mov mov xor jg daa test mov cltd cld inc lret fstpl loopne mov dec adc hlt leave xchg test xor dec adc dec mov inc lds cmp cmp mov jg je fs iret xchg xchg pusha xchg push sub dec mov in daa cmp js mov mov pop mov adc cmp push cmp invd ds (bad) adc cli push mov mov add (bad) jno jmp inc or mov xchg loope lret cmp loopne dec or lret popa add push nop sbb inc in out lret cmp or and xor je loop dec std cmp ja mov movsb ret fwait push push lock ret mov sti add sbb pop cmp out insl jmp dec mov shlb dec inc inc dec loopne push add mov mov inc jbe pop bound dec adc push test stc push jmp or or mov inc lock pop push adc cmp jno mov adc scas mov xchg inc out push pop sub or lock push push in outsl ljmp xlat xlat cmc outsb fistpll adc dec (bad) cmp and mov xchg jb (bad) outsb or or lcall (bad) cmp jecxz cmp cmc mov sbbl sbb repz add mov mov pop aas outsb jp cwtl cmc sbb jnp add or push pop mov outsl inc dec mov jae jae mov dec xchg stc xor hlt int3 push mov lds jo mov xchg repz in rolb dec pop popl xorl jne (bad) mov test inc inc sbb add pushf add adc mov jo jns sub inc hlt int icebp nop mov dec out sub shr inc mov fwait inc fs jg or xor xchg stc dec test cli push mov sbb push add shr fs insl (bad) mov out rcrb push clc push lods mov mov mov sub push jns cmpsl mov add sbb xor loope xchg idivl insb pop mov int cmp cld inc jne mov jae dec (bad) stc adc aam (bad) mov aad inc popf test pop out or add or mov mov add jle lret mov xlat stos jl mov mov bound inc rcrb jg imul adc mov add test fcomip or into adc mov (bad) mov mov pop pop cli mov dec lock imul jne ret scas pop or jns sti cltd jge adc add stos loop stos cmp cmp fimull hlt sbb test pop xchg cmpsl mov (bad) sbb rcrl rol jmp sub je or shr inc cmp test ret out pushf xor xchg pop fcom and pushf add inc stos test mov or scas popf (bad) fdivrs xor add jae mov jne sbb mov mov (bad) push cmp add mov js pop das push imul xchg clc pop cli je push sub or mov jns inc orl add add in inc jne push jp (bad) je xchg (bad) mov clc jle scas por inc jno cltd sbb mov fmuls imul sbb mov push jmp sbb mov sub lret sbb add sub lret inc imul jno cmpsl dec popf inc add inc jne insb dec or or mov add push dec ret pushf xor scas stc dec fwait ret push loop mov popa in mov lcall inc test cld ja or jg pop lock scas inc aam fisttpl hlt int std cwtl mov sti clc std ljmp mov adc inc or add xchg pop cmp ja stc (bad) js inc jmp mov mov fcmove in popa jae add outsl jle lcall push pop mov ret and cld sbbl ja or jmp jnp lock data16 jmp lcall adc stos xchg test test and push cld addl ja or mov xorl sub sbb or lds mov inc push mov fldln2 gs and mov lahf and lcall test xor dec or imul or lock push repz mov dec inc aaa or dec sbb add (bad) in push sub es jle push aam (bad) in or scas mov ja cmpsb andnps (bad) mull ret mov inc mov xor add movsb stos push insl jmp cmpsb gs jge pop inc fistpl arpl sbb les jne sbbb out and adc xor divl lahf lods in lds mov push data16 mov mov repnz or mov mov fdivrs jne jne push pop mov pop jns mov call add mov xchg dec cmpsl in mov sahf out fnstsw pop push lods fsubrs js jae es push in push add loopne cmp insl dec lret or mov enter gs xchg jo cmp xchg jmp mov push xor sysenter cmc int3 sbb hlt push jo pop cwtl xor test dec test push sahf rcll les push aad in popa xchg xor lcall push call xchg mov mov sti dec cltd adc lods iret cmp rcrl cld nop jecxz push gs divl shrl scas scas fbstp ljmp push xchg fidivrl pop pop ja or in xchg push cli test cmpsl mov sbb outsb cmp xchg xor call jg (bad) clc cmpps jg test xorl mov faddp jne mov daa lds inc fcoms aas inc push push (bad) inc (bad) mov out leave daa leave ja int jo inc test sub push mov adc adc test in and pushaw add lods sahf movsb sbb pusha call jmp cmp ja add mov and outsl mov push cmpsl (bad) push inc and mov fistpll push xor mov je push int pop sub mov jge lret lods daa fsubl adc je mov dec test mov push stc mov addr16 lods dec jne mov push sar xchg mov mov in dec xlat and repz stos nop lea (bad) cmp pop nop cmp add js xor adc mov mov insl and outsb fdiv icebp fldt ret je nop xchg push push jmp ja push orl sub je push add movsl movl mov in in jne mov adc sub jg adc inc fwait test sahf mov stos mov xor les push ret icebp ds inc (bad) jge movsl inc jns push out adc push jns bound adc add loope mov into xor cmp add in aad or sbb inc icebp nop out in push test sbb insb xor out mov loope imul rcrb test fdivr data16 inc jno cmpsb jo scas outsb decl fisub icebp ds data16 dec xor popa cmp loope,pt xchg jge in (bad) xchg mov mov pop push lock sbb jle fiaddl or mov fsubs sub add stc aad dec mov ss lcall pop xchg push mov push xchg mov mov popf lea loope or nop xor mov cmc mov popf in mov or cmp sub pop outsb cmp jecxz shr insl in fwait add sti in repnz cmp sub pop jno sbb std mov bound mov and push mov pop jnp or or divl inc (bad) inc aad rcrl fmull shrl or xchg or xor es add sbb or push stos or or into adc xor andps or push les stc xchg ret negb dec jg jnp je jp in cmc inc mov mov mov bound jbe lahf mov ret fidivr jo add dec ja test das pop cltd adc bswap mov (bad) sahf outsb sbb fs ret push xor inc insl pop mov sbb (bad) mov adc pmullw rolb xor aad mov int mov cltd insb push dec sbb cli pop jp ja inc xchg andl dec jbe or dec cvtdq2ps je mov fwait adc dec pop fldcw hlt push dec mov xor repz test shrb inc xchg xor mov paddusw pop push stc iret cmp sub cmc sub repnz cmpsb cmp adc xor out mov je and into (bad) ds xchg rolb mov fs mov cs push lahf mov ret add sbb cs je or scas sbb fs mov cs js mov call fcomps lcall mov into cltd test mov inc mov outsb sahf out mov fs aad (bad) out inc mov dec test dec ss hlt inc lret aaa roll (bad) pushf imul andl movsb push in xor test xchg test (bad) arpl or lods lock add push (bad) mov (bad) hlt inc into adc xor int3 sbb cli mov lret mov xor add sahf mov sub movsb scas imul (bad) pop pushf add aad inc (bad) mov (bad) add sub iret addr16 mov cmc (bad) mov mov stos mov jg add jmp fdivrs sahf lret adc fdivrs lods pushf add inc stos mov hlt inc lret stos inc inc xlat stos lods xor jo mov das mov jecxz cs push cld jne and aam movsl push push cltd cmc sbb cmpsb inc mov xchg jmp xor aad rcrl faddl shrl or (bad) faddl fimull push aas test xchg add or cs call push lahf and out imul dec nop pop fwait add clc push mov pusha (bad) (bad) lret jnp jnp fwait add add add ja sub mov popf movsb icebp mov jno push push xchg stos or out jmp cmp int in mov push push jns lret rclb lods xor jns sahf inc xor inc (bad) mov xorl test ret ljmp aaa mull mov (bad) jge (bad) mov in js xorl fwait dec mov jge and mov (bad) outsb das pop pop scas dec xchg push sbb jne shll mov andl outsl int test or cli outsl xor adc lcall pop sbb cmp lcall push push jle cmc jns dec dec jle push xor add xchg mov add dec js add aam loope dec data16 mov aas dec fdivrs shrl xchg lcall adc add and push cmc mov or das pop pop scas dec mov jmp inc inc jne inc outsb add mov stos or pop push sahf dec (bad) mov int bound lods aam pop fdivrs sahf decl arpl aam adc push shl dec pop jo in xor popa inc div jns xchg mov rcl xor fldcw sub scas fs cld subl loop test sahf mov (bad) ret lret inc mov movsbl jl add nop lcall aas sahf xor adc jg fdiv push cld push inc pop xchg hlt je lret adc fbstp push lcall or xor arpl cmp mov in cmp xor (bad) bnd mov out les in jg cmp mov cmc loope jno push (bad) or or jmp inc hlt cmp add push ljmp or test enter in mov mov jmp dec int3 push adc pop mov cli sbb xor test cld sub xchg xchg lcall adc cltd cli and (bad) cmpsb out int lock dec mov cld shlb inc jne aad xchg mov rclb cmpps (bad) jne cs cmpsb cld cmc push inc test sub scas movsb push out xor bnd cmpl ja pop push (bad) or or jmp inc cld aas testl les (bad) xor arpl cld int sub stos stos or nop pop jbe mov pop push sub ret ljmp jmp and mulb je call sub add (bad) notl mov xchg push in and ja mov sub fcmovne (bad) ds add inc dec lock pushf cs ds push sarl jecxz test (bad) pusha xchg les push rorl pushf iret inc jge rcr lds stc aaa mov bound pop push lods pop dec xor cli pop mov jb jle xchg aaa jmp (bad) in add cmp call inc xchg orb fisub in and push icebp into mov test push cwtl test mov inc inc push cmc or pop cmp lea sar xchg add push push lods add in pop xor mov loope jo pop dec sahf int add scas in mov push in cwtl mov and sbb pop sbb lods aam push bnd (bad) repnz add hlt jnp je mov cmc inc mov movsb cmc ljmp dec insl adc fistpl mov dec cmc nop sbb sahf aaa rolb xor inc icebp test mov ficompl mov xchg mov dec nop jg jae dec ja adc or sbb cmpsl (bad) test dec inc std xchg rcrl (bad) in lds out jbe push dec ja sub js repz clc ja push xor push aas jmp or lret sti icebp cld or lds dec insl pop fwait inc dec mov jae push jns jmp add push jmp or movsl add stc cmpsb add int js (bad) xor idivl loopne js outsl adc push xor xor xchg inc leave fnstcw lahf lahf sub xor xor aad or ljmp dec insl int3 mov cmpl pushf adc rdpmc sahf xchg cwtl stos fidiv dec psubsw nop enter in jae or icebp lds cmc jnp (bad) in mov rorb lahf mov js lods mov push jmp mov in shr inc or lds pushw imul push (bad) in enter jle and mov xchg lds mov cmp mov (bad) les mov int icebp nop lods imul or cmp xchg in mov lahf cmp jo cmp (bad) les mov int icebp nop popf or push pop es mov imul out popf push mov add and jg int3 faddp out cmp adc jg lods aam ljmp push into insl imul cmp movsb ja je lock jo push pop leave test das pushf sbb fiadd xor jne jg sub mov shlb cmp out inc inc inc jns mov pop mov xor add aas addb push add add lret stos pop dec imul adc jo pop aam mov ds add mov mov xchg (bad) xor dec fwait pop stos sub and xchg jnp sbb daa test mov cltd cld inc lret push std cmpsb fs loopne mov cli std in hlt leave xchg test es xor fwait movsb xchg and jb ja je lock mov jns cmp pushf adc insl pop jns mov call inc mov xlat jmp out lret sub (bad) pop jmp jle pop jmp out inc popf push aam cmp js and out pop jg repz sahf fdivr aad ret lock in addl push or mov repz sahf jnp arpl or sahf sbb ret int (bad) stc sbb jns xchg mov push mov and adc fs lds repz push popa sbb dec adc shrb mov mov add fdiv mov inc and fsubp pusha jmp fwait (bad) test ret cmp js cld (bad) xchg cmp lahf xchg mov cs add bnd adc adc stc jl mov ret push popa aaa cltd or js add add repz fbstp inc jp aad decb (bad) lods add repnz fidivr cmp es cmp mov movsb push mov xchg pop les (bad) add lahf repz xor xchg ja enter fwait cmpsl rolb aas xorl inc jnp fistpll mov lods lds das fldlg2 fwait xchg xchg ficomp shrb ds and imul and iret dec jle or test push lock inc mov insb int3 mov mov or cmp mov cltd lods pop aad push push dec and in in lea daa inc jg push jg sub out sbb (bad) test mov jb xor xchg cld popa repz insl pop xchg push mov icebp push pop cmp cmp jb mov sbb dec push lds stc js js stos push lahf (bad) hlt sbb and lds stc js sub shr xor loopne mov add or lahf xchg mov ret xor sub adc fimull jmp jge and jge or or (bad) mov mov les and (bad) lds mov lret lret in add loopne call mov pushl cmp push pushl adc push inc out jle (bad) sti lock pushf cltd lcall (bad) mov andb inc mov addr16 roll jle sbb into jmp cwtl pop mov das pop test jmp clc mov jb mov lods or mov add repnz jo test sbb (bad) sub add sub int3 mov cltd mov mov jg cmp dec imul and dec xchg lahf out xchg out dec add fcmovnbe out pushf sbb ret outsb ficom xchg imul nop cmp daa roll jae mov mov and xor cltd push test and fnstenv jmp xor and test push icebp push stos jp,pn outsl outsb inc push lcall jnp push shrb mov (bad) icebp adc pop or push mov jne pop (bad) cld xor xchg cmpsb push push cmpsb pusha inc pop mov in fnstsw or int mov or mov inc outsb push mov popf test mov adc ljmp shrl push push movsb (bad) call popa and out inc imul ss adc inc fyl2x nop stos sbb mov push in sbb jp icebp ret cltd inc into or sbb jge icebp ljmp outsb xor sti int in mov pop xlat mov stos insb js mov int3 inc mov cmc sbbl push mov in lods or inc adc fdivrs repz imul popl div aam jl daa dec add pop cmp sti push cmp mov jecxz sarb cld into pop imul dec jp fldenv jle pop test dec pop jmp jnp mov lock push out pop jb idiv cmp dec inc add push imul mov add mov test add daa adc jecxz ret ja jecxz ficompl ret sbb dec loopne push scas test mov adcl scas lahf (bad) xor pop mov notl mov inc adc adc sahf cld mov mov repnz imul outsl sub sti or (bad) cmc pop shrb push push inc pcmpgtd call loop and inc and cmc dec in add sub lcall outsl loop inc fisub fs lcall test cmpsl xor lea mov testb cmp jmp sub adc and pop les dec cltd xorl mov nop cmpsb mov inc data16 push lods inc xor sbb (bad) mov inc adc mov cmc mov icebp inc cmp xchg xor je jp in cmc inc mov ret (bad) repz jg,pt lds dec in sahf or loop lock add jp in fnstsw mov cltd into lahf (bad) aad xchg adc mov add and jne sbb insb sbb pop sub ret pop inc test mov cmp add insb in xor in psubsw test call out call (bad) cwtl mov fs pop jne daa (bad) in pcmpgtb jecxz sbb cmpsb push das movsb dec add dec inc push test jle mov out jns inc mov push fldl lea adc cmc xchg inc test fdivr push shlb xlat pop mov and hlt adc xchg lcall (bad) jl mov mov mov fidivr (bad) ds negl jnp call add pop enter jbe shr push enter xor sbb jle dec pop in popa dec cmpl dec inc fxch push dec cmpl xor inc dec xchg aaa stc jge lahf imul adc sar or fstps fnop call push lods cmp subb rcrl bound jno pop push pop mov cmc mov xor jns iret adc gs ja push lea fnstsw scas push lahf sub call cmpsl add xor pop mov scas loop ja inc test mov or das push xorl push cmp ljmp clc aad clc xor test push test lods xchg (bad) and jmp in inc dec repz inc inc or mov les mov outsl lahf lea in xchg (bad) jnp mov jle add faddp je dec jbe dec lds sbb ss mov es leave dec inc notl dec xor inc jo or aas ljmp ret aas mov sub sti sbb clc out adc or test ljmp (bad) (bad) fisubr scas movsl fsubr (bad) mov or push push mov cmpsl (bad) push push lods xor adc and arpl push cmp add dec stos jmp xor repnz jle,pn jge mov inc in sub push fisub cmc mov mov mov xchg cmp pop lahf lea int3 mov jmp adc adc xchg in pop mov fsubl fwait sbb mov fimull push insl jmp push (bad) insb jo aad (bad) jl dec sahf and jl push xor inc jmp fdivrs sahf and mov inc jo adc es test int adc shrb (bad) into pop repnz push ficompl ss or int3 xor ja fsubs or pushf lahf jecxz sbb mov repz int mov fwait jle add sbbl ljmp adc dec jbe inc jno popa push scas sti or outsl inc mov or sbb ficompl (bad) lds test jo adc (bad) jae jmp mov scas xor lahf lahf dec dec ss dec adc and mov sub aaa negl inc cs push fisub cmc out scas ret add insl jmp inc jae bnd add fdivrp jl dec jbe mov inc mov dec jp lods or jae loop sbb cli bnd xchg aaa in mov inc outsb pusha gs cli aaa cmp cmp lahf shr dec shr test out out xor mov scas lret mov testl aam mov xchg js pop pushf jecxz mov cmp pop ficompl repnz push pop lahf aaa aam push lods xor adc sub lods adc or push cmp std cwtl and iret dec mov pop out mov mull jmp aas dec mov pop into aas pushw fcos mov std mov or popa pusha cld mov into xchg jno cli mov dec xchg mov add ljmp addr16 adc mov add scas pop cmp sub and or xor std inc xorl faddl sub push adc std sbb and loopne js and (bad) nop and (bad) mov cmpb in jl pop dec in jae scas aam iret push (bad) stos dec hlt test int3 stos call xor or lret and dec jbe pop jb fsts movsb js pop mov js sahf inc (bad) cmp enter mov fwait test repz pop je pop pop mov insl jp fwait (bad) xchg fldenv sti clc xchg inc ss mov adc clc xchg js pop das cmp sti insl hlt mov jns push and rclb cmpsl sub lahf push push call or adc jae aaa insb sub les lds mov push dec loopne push adc mov enter cmpsl int3 sbb and loop fldt jne outsl cmc add inc ljmp fnstcw adc jg cld inc pushf imul or pop dec (bad) push mov shrl sub fdivrs mov xchg xchg out test les clc pop nop or loop sbb lcall pop fdiv ja mov fs aam push aam jns stos je nop scas mov xchg mov aam fs mov xchg push outsb icebp xor mov scas jne rclb cmpsl (bad) aam out push arpl sbb push (bad) xchg insl pop push jp decb sub or scas sahf int shll or out stc outsb push (bad) mov out xchg xor cmc cwtl jge adc add sub mov arpl inc mov int3 ja push jb sarl aam sbb push mov popa mov push out (bad) mov xor lds (bad) daa loopne mov repz push and daa xchg pop lods pop and call add sahf mov jne fisttp clc push ss popa or add mov add sub fnstenv ja clc int3 fild push and call jne push cmp dec lcall mov rol jmp ss mov adc adc push hlt xchg dec sahf movsb jns push xor std mov push mov xchg pop cmp mov push out ret bound jg cwtl push in mov fcmovnbe fcomps push outsl or das sti leave inc test (bad) cld pushw adc add stos xchg sbb pop jmp test dec jmp out xor lea idivl lods (bad) push ret je jbe (bad) loop out adc (bad) add add lcall jne stos add lock xchg mov mov push out imul jp xor push jns cmc imul mov jne add jmp (bad) iret rcll pop push aas or push jmp xchg inc inc or imul cmp inc mov test stos shr gs dec test stos mov js xor or mov sti cltd sbb push negl xor xlat push add icebp mov jmp pusha mov sbb (bad) decb or pop push sbb cmc pop aam mov inc and pop sbb push aad dec cwtl add push imul cmp movsb jne shlb dec xlat xlat repz sahf jbe into cmp ret xchg add inc add or jne push test shll popf push das arpl (bad) mov adc cld orb icebp nop mov jnp aam ds jo nop or add (bad) xchg inc imul or (bad) mov adc cmpsb dec addr16 jmp add and pop push mov ficom xchg mov sbb jmp roll jo test cwtl pop jo bound sub lock xor push push lods mov scas jo cmp es push in xchg addr16 ss jns mov sbb popa imul std call mov test in push imul (bad) out dec lahf adc popa xchg xchg inc jns arpl adc (bad) inc ja inc test cmp fildll test data16 jbe bt icebp ficoml stos cmp mov cltd repz jb push mov mov adc lcall test dec scas (bad) arpl mov icebp leave leave fdivrl rclb test sbb in xor in adc or enter dec fdivrs sahf mov loope test shll stc sbb adc clc cmp jg (bad) dec pop es addr16 arpl jne repz fs xchg and ja cmpsb jno push call adc inc hlt push jo jo ss movb repnz not mov cs jbe and data16 pushl cmp cmp js xchg bound add repz (bad) pop fs cmp pop push jl cmp or gs jl aas inc adc dec mov jne xchg roll ret push repz mov cwtl pop fdiv jno test fldln2 jne pop mov call sub push cltd repz jb rcl and lcall gs jne sbb mov mov (bad) push fucomip and jno jne jle pop scas pop or jge pop ret inc inc push sub or mov shrl iret pop pushf add add lds push xor lret jmp mov mov je pop jp dec movsb jae ret pop pushf add push loopne mov idiv loopne pushf adc cltd rcrl inc lcall or inc (bad) inc pop pop cli mov mov in cs jo (bad) call sub cmpsb gs inc dec xlat push (bad) lods adc addl inc jne lock jecxz outsb jnp mov movsl fbstp mov ja cmpsb sysenter out xlat jp xchg movsb enter shll jg jb xor sub stc fs adc mov cmp push (bad) adc jmp dec mov or adcb aam push mov mov fiadd push int (bad) test pop mov and mov jmp movsb push imul add pop leave in jne sbb jae repz pop adcl lret mov les mov jge clc imul stos js sbb jnp inc adc push shl xchg pop push push xchg andl out faddl repz shll jl mov popa cmp inc mov loope out mov (bad) xchg jb adc xchg push sbb xchg subl fs outsl bound pushl sahf (bad) pop sub sahf mov pusha test sti jl repz rcrb push div jns int stos mov mov sub xchg jl mov popf ds jg into add jecxz js cmp fmuls adc pop mov int3 lcall add pop mov and add sbb xor jb dec pop rcrl or (bad) test (bad) out test adc mov cwtl mov jne (bad) fiadd imul bound les or shlb sbb aam fs pushf rolb insl dec stc stc popa add repz mov jmp clc sub jo adc and outsl loop outsb jno cmp or cld dec mov mov pop cli aaa cmp xlat imul pop lock mov xchg inc imul adc rorb sbb outsb mov mov xor ja inc test jg hlt jnp or mov mov xor pop fdivrs push repz and pusha (bad) sub xchg aaa insb sub xchg stc cwtl incb and mov push (bad) mov mull (bad) jnp jmp lret movsb cmp adc sbb mov (bad) repnz dec idiv xchg and repz sti mov mov or xor or in xor leave pop push lock jnp xor leave sbb or xor jae mov and es aam add mov add push clc ja ja outsb or jnp ret jns imul or xchg add add icebp imul mov push faddp jmp or cmp out addr16 fiadd (bad) cmp mov add lcall dec bound push jmp lds not xchg push ja mov test sbb mov add les not inc addb popl mov loop mov orl jmp test inc aas fcomps scas movsb dec adc nop sbb shlb (bad) nop pop out in mov test pop sbb and pop mov lds repz les sahf stc cli outsl dec adcl jb xchg daa cmp out sub push jl add aam adc or xor fidivrl push movsb mov mov sub jnp popa or in mov push add sub push mull sub adc les cmp xorl mov mov popa shrb pop fimull stc test xor mov sbb jne dec xchg add enter mov cmp arpl (bad) dec mov fs mov int3 int3 gs pop mov fs pop out fsub inc jecxz mov cwtl mov cmpsb mov xchg xor aas outsl mov scas ss cmpsl sarb or hlt fnsave fsub pop add es mov cmpsb mov mov fistpl test pop loop push add movsb stos push sahf lock hlt or xor add sub movsl ret mov or ret inc xlat xor cmpsb je outsb sahf inc hlt repnz lret xor mov mov (bad) jb cwtl add mulb ret push (bad) pop fmul loop sub add sub mov mov sbb cld repnz pop int cwtl push decb dec sbb aad addr16 sub lret push push aad loopne add ficompl jle sbb icebp sbb data16 cmpsb pusha dec jbe push cmpb lret jmp (bad) (bad) adc das popa fmuls pop or pop aaa bound adc pop inc pop push mov xchg mov add jl (bad) jno mov in dec or test mov cmpsb mov cmp add push addb (bad) scas imul test lods icebp mov imul imul lea fisttpll xor les (bad) sbb dec sub mov sbb icebp ds mov jge or cmc sub mov ret sbb pusha jp fistl test movsb mov inc dec jnp or (bad) dec sbb add pop scas sub loop test (bad) fcomip jae into xor divl lahf cmp and sub fsts negl adc or data16 sbb arpl pop lret (bad) aas cld sti xor dec imul and sti cmc sbb shlb (bad) mov xor sarl repnz mov jle lahf mov sub push push xchg fisttp call (bad) inc leave fcmovbe lahf xor jp or and mov orl mov sahf push pop and inc and (bad) (bad) sbb into sarb test sarb jb mov movsl in xor cltd xlat inc decb int3 mov into data16 (bad) mov lret (bad) mov and jno out sbbl lods or jns sahf push sub (bad) cmp pop icebp inc mov mov (bad) cmc enter popa or dec enter push xor mov sbb icebp into adc test push xor sti push cmp (bad) mov push in scas xchg fs stc cmp ja jae mov inc mov jmp sub mov int3 pushf add jbe adc add cmc lea xchg mov cmc nop push in mov inc daa outsb int dec cmc mov fisttpl loopne fwait add or mov outsl add (bad) push shrl mov and cmpsb sti pop xchg sub test push movsb out cmc cwtl cmove negl idivl imul mov jno mov mov pop pushf dec (bad) and repz mov es (bad) int xchg out pop shrl dec mov adc imul call sub sub jns stc stos push je leave xchg test dec adc (bad) mov sti (bad) lock shrb pop and lret (bad) sbb add fwait or or sub and mov cld outsb movsb sbb jo xchg xor inc (bad) cmc cwtl xorl dec push data16 mov jb add ja ret jb xor mov pushl out add outsb xchg aaa movsl push mov sar push mov cmp test jno mov lcall cmp jnp data16 sbb cmpsl std inc adc push mov rolb lock sub adc xor dec js outsl (bad) push mov test adc arpl popa sbb stc dec mov (bad) rcrb enter sar cmp lods fucomp jns sub mov (bad) xor jge and lss in movsl (bad) fmuls js pop ficoml movsb scas test roll pop repnz (bad) das inc movsl lahf sub outsl add lods lret cmp addr16 pushf sub jle inc rolb pop push lret ret push rclb adc push out dec or adc inc inc pop xor vpcmpeqb add loop xchg sub sbb ret mov inc gs xchg je sbb xlat mov repz push ds xorl stos gs lds stc aaa hlt andl xchg and xchg aas mov mov stos push fistp dec cld jb xchg movsb stos push sahf add data16 xor xchg (bad) lock xchg push xchg push inc into dec push inc out xor mov in iret xchg pop cmp je sbb inc cwtl shrl out into jbe fnstenv xlat aas and jo mov addr16 (bad) jnp les sbb xor sahf out test shr aad cli jno lcall xor jne jp jge addr16 lcall stos icebp sub outsl fcmovu jb out inc mov out orb dec outsb mov push dec adc cmp icebp nop jmp push sub or jo in ret or xchg pop insb jne sbb jle inc addr16 jb test outsb fwait call arpl lss (bad) xlat xchg cmpsb lcall mov dec hlt mov sahf cmpb ror jg cwtl adc adc adc jg adcb xchg (bad) cld cmp xchg mov adc hlt xchg lock mov clc adc in jg clc push nop jge clc adc (bad) test loopne sbb adc movb jl incl and mov push lret mov repz call into lock push or std mov and xor je loop dec std cmp ja mov movsb ret cmpsl dec outsl lock ret imul add mov out push insl jmp inc scas shrb inc dec aam add mov lods les movsl lret out jbe pusha cli jbe pop pop fcomps inc add add push sbb mov outsl lods subl je test jecxz xchg push xchg push clc ja hlt mov mov dec xchg jnp lock push aaa scas lret push js shll outsl aaa lock fucomi inc or lds and mov ret pushf jge repz clc ja setg test pop sbb xor jnp mov (bad) (bad) mov inc pusha jl add pushf add adc mov inc outsb or xrelease cld inc gs pop add xchg inc test cmp aam xchg cmp xchg pop ret lods outsl js adc mov add push push xchg and (bad) mov push push in push nop in add sahf pop lods lcall lret xor mov inc rorl mov lds inc movsl jmp das sti add neg mov jne ret bound mov dec mov jle out jmp add repnz int3 jnp idivl imul nop add out pushf xor xorl fidivl add leave cmc cwtl jnp and out xchg xchg inc mov xor mov xchg add repnz std mov scas je pop mov dec push adc push bound fcmove outsl lea fcmovnb or sub and lods jae adcl fistpll data16 hlt pop fwait cmp fs adc pushf sbb ja pop pushf cmp dec das adc ljmp jae ret test mov jnp hlt idivl xor push aas xchg ret repnz add dec stos and mov testl shlb testb or push repz xor int3 or in jge ljmp xor jae push imul popa cmp xor sub aam lcall cwtl fwait push loope dec mov scas xlat movsb aad jno add ret aad int3 jnp ds loopne (bad) or sahf lcall in ror dec mov movsb lds mov adc outsb xor es ss jnp jmp lcall stc cmc ljmp push aam xchg sbb sti add and (bad) scas in mov mov mov scas inc ja,pt jp jno ficoml arpl inc add mov mov nop das mov add or pop inc cmpsl clc and ret stos out int stc icebp lock cmp int data16 jae jle scas add lret (bad) aam rol pop mov hlt xchg jle repnz xor popl fstl add gs push jne mov sahf or les or inc fdiv icebp cmp (bad) (bad) cmp sbb loope adc push test fwait add xchg cmp jl popl pop icebp in jle repnz sub inc push int3 outsl cs mov mov mov lds rclb cmp ja int add shll mov xor icebp push (bad) xchg mov fstl sti xor cli sti cmp fisub lret ja push jns sbb pop or sbb insb add jg test loop,pn cld pop mov jg xorl sub mov and (bad) push xchg sub fsubrp and nop jo jnp add mov aam mov test cltd push sar or mov cmp cmp jbe xchg sarl sbb xor ds or aad daa enter adc lcall adc jbe,pt mov add xchg push daa enter in nop jmp jo ret lods lods add jl jae out arpl pop jge jnp (bad) ljmp inc xchg mov jmp call pop jg jle sbb (bad) push pop jo addl sub jo nop jo jno cmp sahf xchg cwtl mov (bad) xor in mov shrb or xchg imul outsl (bad) ret inc adc mov add loope nop cli pop sbb inc or jo pushf xchg mov out add jl hlt xchg add sub xchg int3 pop xor mov insb ret popf jg pop push (bad) cmc jb cmp in xchg mov pop xchg jl cmc nop push in mov push (bad) mov test icebp mov lods (bad) in outsl cltd add pop lods or sub ja inc test scas jb popa nop add inc fs jle or cmp les nop fmuls out test jmp jo cmp roll ret pusha cmpsl dec pop jnp fwait cmp push repnz mov scas hlt lds movsb sub sub push mov scas mov mov mov cli rcr rorb xor pop or jecxz test scas iret xrelease inc mov cmc cwtl xorl rcrl xchg push icebp mov and jno xchg pop jo cmp pushf mov pushf add or or in sbb inc sbb fs push repz cmp (bad) sahf insl add sub dec mov test xor fisttpl pusha outsl lea divb mov arpl (bad) (bad) testl xchg dec pop mov insl rcrb loopne lret scas jg rcr stos xchg mov imul push (bad) ret lcall push outsb and pushf or pop add cmp lock jns enter inc or sbb in nop hlt mul sti pusha jp sbb dec mov pop arpl and lock xchg cmp xchg pop dec mov loop movsl and pop notb cmpsb xchg lcall clc fadds cmp pushf or fidivl fs add mov lods or (bad) jno mov in scas ds fnsave idivl pushf mov cmpl push aam in mov aad pop jo cmp cmpsb push or push pop fs (bad) popf add inc sti imul mov arpl xor jns mov inc mov jmp adc sbb cmp rolb xor nop cld pop xor mov (bad) jecxz aad jno insb ficom push add jg in xchg clc cmc fs or xchg test sub sbb hlt push jo pop and pop test mov or out mov cmp mov sbb mov jne push in pop mov movups inc test mov scas cwtl lcall mov jbe cmc adc jmp lock call lcall xor out popf mov fimull mov ja (bad) jbe ja fdivs cmc aam lcall mov push les or cld pushf jns pop sti fidivr pop xchg jno xchg jb pop lret pop int lods lods mov subl or popf aad mov out imul cmp aam lcall shrb aam lcall push sub dec sub iret push mov adc out enter or cmpsl in aas out push fisttpl js cwtl sub xchg or xchg (bad) mov mov (bad) in shll xor jle and jg int3 push lea mov cwtl cld push xor (bad) pop sbb adc in add subb (bad) xchg jmp fildl cmc shll leave mov fbstp push cmp insb sahf orb jns pop mov jbe in ret jno push insl inc jge pop jnp test mov sub and sbb js adc sahf orb jns test dec xchg test jbe in ret jno push insl inc lea lret mov ret sub in jno mov in or (bad) out mov cmp jnp inc jne sti sub test dec sbb dec sub lcall push das shld lods fimull pop insb or in inc shl mov std shl aaa sub aam push fdivrs mov mov ljmp fldt sbb cmpsb enter mov jmp mov cld mov inc xlat stos mov push aam shlb jl xchg jbe xchg sarl or jecxz pusha stos movsb push (bad) stos mov mov mov jge push sub xor mov push push test in outsl cltd add mov dec xchg push sbb fsts mov and xchg inc iret cmp das push push push mov (bad) sti jo in mov push (bad) imulb (bad) xlat mov into pop imul cld int cltd mov xchg in jb test mov ret sti add enter mov lods jae jmp rolb and sbb repz or std dec lock (bad) test mov (bad) sti add push inc dec test stos stc (bad) xor push (bad) jae int3 and xchg test xor sub sub stc jle xor fld insb xor push fsubrs and insl jmp ds div and jne mov mulb pop mov out (bad) stc ficoml jecxz fsubr pop repnz rcll in lods cmp icebp aam mov movsb out push in repnz sbb daa icebp aad mov jae mov insb insl dec out (bad) jae adc mov pusha (bad) hlt insb lods mov xchg xchg inc (bad) jnp add cld ret arpl push jbe push popa cmp subb xlat lret negb or cmc in mov jp repz adc (bad) sbb cmc sub mov out lds xchg jmp rcrb pop call outsl fxch xchg xchg mov mov outsl into push pop add xchg push bound jle imul sbb inc dec add pop xchg sahf xchg mov dec das call nopl xchg push popa pusha (bad) cmc cld mov mov xor ljmp mov and ret or and jne mov ficom jb xchg dec sbb xor out les adc adc mov push js notl pop (bad) push (bad) lock pop pop aas shlb add cmp or in arpl cmp sbb adc push (bad) adc test scas ss mov int3 xor and lock xchg jno scas js stos jg mov pop rorb rolb xor daa iret inc shlb dec mov jle cs jo add mov adc imulb repz push jge into dec outsb adc sbb es mov lret (bad) mov push add mov jbe notb push scas xor xor mov inc shrb jge pop test rolb call jb sti dec jp or inc add (bad) push dec add mov ret pop cwtl adc inc stos inc inc or insb xchg xor push xchg push aam dec mov add scas test mov xor and in repz icebp and jle ret outsl pop data16 cmpsb inc rcr push sahf mov (bad) mov mov sahf sub flds in adc push imul sbb (bad) xor sub ret icebp jno pop sub adc in xchg inc insl pop mov xchg jl dec fwait (bad) mov std cwtl adc mov mov cli imulb or add mov jns sbbb push mov mov sahf pop in cmp test mov lcall cwtl js aam out stc xor test out repz pop andb push and inc push inc daa pop jno jge sti lock xchg lea jb call cmp dec dec stos bnd in cmp insl cwtl cmove dec mov fsts ficompl mov call (bad) stos repz ds lcall cltd js movsb jle hlt xor jae pop mov push test add and xor jbe push int sub shl lock jne jne inc push sbb loop dec jge std int shl test inc paddd or and or or aad add jns push cmp xchg (bad) mov stc jno push and fisubr popf insl in fstps xchg add push jae push jns adc pushf out (bad) mov fiadd push add cmp jo adc push xchg jns push xchg add mov xor (bad) mov jb or je cmpsl sti push or pop out cmc sbb jo xchg push push mov mov popa or push ret in fs pop cmp pop pushf iret and pop jae lea push jno dec or shlb adc loop sbb leavew aam int3 loopne punpcklbw add mov sbb jp or adc jno mov mov inc insl fisubl cli add movb pop xchg ficomp push mov and fsubr push in rclb out jmp ret pop cmpsb fs pop fidivl in sbb imul mov pop add jno fld les add lods pushf add dec sub (bad) fbstp mov dec xchg inc mov cs push mov int3 pop sub adc in xchg cmp popa or push ret inc enter xor or nop mov mov jg loopne subb pop add add mov popa or push ret and inc xchg scas sahf jbe into aad inc inc mov lods cwtl cmp into bound xlat lods lea movsb cmpsl out out sbb push mov xchg xlat xchg mov and mov es jb mov mov cmp cmp cld lret negl sbb fnstsw (bad) push push mov and imul xor in adc adc xor fisubr mov pop mov lea pop test mov mov nop ljmp mov sar push pop jo cmp lea jns bound imul (bad) jae lcall inc mov lahf lcall xor test dec pop icebp ds xchg mov fiadd dec pop dec jl inc jne aam sbbl cmp pop mov sub and outsl add mov fildl in xor mov xchg fwait adc pop int add lds mov ja clc lret call (bad) jae int3 push lods or pushf jg add loop and jb ja je lock ror jo xchg leave and sbb aas out xchg jo xlat popa fiaddl out jl,pt push lods jecxz mov stos mov add jle lret (bad) lods popf xlat stos jl test repnz stos jmp lock mov lcall movsb stos push sahf adc sahf int3 scas (bad) dec pop jecxz fwait mov add xlat ja invd dec cmc nop push in scas fwait js cmp loope cltd sbbl xchg inc dec push mov xchg nop xchg or add push sbb aad mov jl clc push neg dec lods clc push mov xchg jns (bad) dec mov sub test adc push lret jmp add inc jne sbb mov mov (bad) push fucomip and jp jne popf mov adc push jp inc inc jns hlt mov (bad) roll ror xor divl dec cmp icebp nop sbb xchg mov les sbb addr16 nop pop mov mov xchg push in jecxz dec sbb jbe stos ss adc std in stos add inc xor lret pop push (bad) jae int3 mov push imul cmp movsb mov push out call pop push push cmp dec jmp and cltd xchg test and pop adc and jb ja (bad) jne sbb adc lret xlat cs xlat stos jl mov inc adc inc lds adc arpl mov mov fcmovu (bad) fisubl push inc rorb push addl es ljmp mov jecxz test push mov inc imul add push jmp push (bad) jae int3 int push daa cmc mov shlb adc movsl push aad inc imul or roll pusha jb mov ds sbb fcomps hlt mov dec (bad) push rorl pushl cmpsb out fisttpll (bad) aam lods int stc or pushf add ljmp test mov inc cmpsl push pop popf cwtl sbb lods and nop mov aad mov les clc pop cmp inc sti pushf or add push je (bad) mov lret push push lods push loope jae mov shl test clc shlb inc imul add adc xchg add jno xor jge lds and or mov enter gs xchg jo sub push jmp test xchg ja inc les out sub mov mov mov mov mov mov out mul push lods add jmp and loopne jbe jne ret popa fmull mov mov lcall add inc les addl test add lcall xor push int3 (bad) arpl test xchg xchg ja mov data16 sbb test aad add int xor pop pop pop into mov inc clc xchg stos mov lds pop clc inc movsb pushl sub mov ljmp dec test mov push sbb sbb mov mov ljmp or mov dec dec dec xorl pop push inc fidivl dec add mov test mov lea fisubrl pop jg cld jb xchg (bad) lock xchg jbe mov fsubs test push in mov icebp ljmp lcall push aam rcr adc aas mov dec xor flds test xchg clc xor outsb and jb mov push out call push push push cmp dec lcall sbb pop icebp out cld inc lret sub les imul push cmp sbb ds cmp or mov ficoml ja dec call push cmp fucompp dec fdivrs sahf cmp cmp shl mov mov add jle lret push outsb cwtl xlat stos jl fisubrl xor (bad) (bad) out mov xor outsl fidivr pushf add adc jne stos mov ja inc test jg or mov popf shrl pop scas cmp bound enter fs out mov loop scas cmp push inc xchg pop cli mov dec mov pop sbb in (bad) out ljmp int repnz xor sahf dec lock dec pop icebp lock cmp sahf insb popa nop dec neg dec lods clc push mov mov jne jns jmp pop or cmp inc not mov add daa xor fdivrp mov sbbb movsb jge out sbb pop xchg jne xchg popf rcrl jmp pop les add adc lcall jg (bad) dec pop or addl inc jns jecxz int3 push negl push in out scas lods out add ret mov shlb inc dec les nop and (bad) ja aas dec cmp insl jge cwtl fimull sahf cmc pusha cmpsl dec pop cmp jl pop in pop repnz popa or pusha (bad) ror pop mov cwtl (bad) icebp jns iret adc gs ja mov fsincos test repz ja xchg in pop repnz aaa cli (bad) lock inc cld inc in mov add movsb stos push sahf rcrb out jne into push (bad) xchg jp pop (bad) xor scas xchg (bad) inc stos (bad) out inc cmp call mov rcr lds stc aaa push cmpsl mov test xchg add mov xor add movsb stos push sahf mov push rorl dec movb rcr ret sti jae mov dec fist addr16 sub pop cmp pop jg xorb test imul xchg sbb dec dec fwait loop xchg icebp ds jae aad xchg cmp addb int in or mov cltd or loop dec or ret rol cltd or loop dec or into adc mov push das test lret cmp in cmp insl (bad) mov icebp ds dec les dec insl out dec (bad) arpl mov pop xchg popf push push lods add sbb and loopne jbe jne ret andb into or xchg test inc or jle ffree sti push cmp jne push dec scas js jg fcompl mov outsl bound jo stos sub test fs mov not loopne xchg clc pop lahf ficompl data16 loopne mov pop adc xchg test pushf and adc je icebp xor mov ret test or jge push mov cli mov mov icebp loop,pt push pop mov pop iret int sub insl scas (bad) fidiv adc push and sub dec sub imulb (bad) xor fucomi dec fdivrs sahf dec popa (bad) jne push push clc into into icebp lock add hlt and pop mov mov aas mov in add mov jno cs mov pop ret and xor lea rclb cmp mov out in sub mov xchg flds pandn lods pushf add ljmp push iret pop pushf add mov cmp test (bad) repz sub stos or out call les lods cmp insl out inc adc (bad) jo ror clc xchg inc inc or mov pop pop fcomps pop pop lcall int aad add lods loop xchg test mov jbe bt ja movsl mov out pop lcall and (bad) push loope sbb jae int3 dec aaa nop jge mov ds push jnp bound pusha (bad) out pop in pop mov cld inc lret mov mov dec int loope and push adc push in fucomi inc sbb jbe stos ss adc or mov int3 in test lret pop mov idiv out adc cwtl push in xor jo icebp into adc mov lods loope push inc (bad) inc pop pop cli mov sbb icebp ds or sahf jno popf push int stc popa add add in xchg or sub xchg int3 cld xchg cmp push sbb dec pop lret or insb fs pop fcoms test into or (bad) push cwtl jle pop jne ja dec sub cs fidivl mov cs sub adc roll inc jl std cltd lock sti mov add aaa xchg or shr stos push pop fwait add sbb jle shlb je repnz test popl ljmp out mov dec jb insb or and rorl dec cmpsl aad push icebp sub testl cmp imul xchg and mov push cmp mov aas dec sbb mov jns sbb shrl (bad) mov rclb (bad) jmp fsubrl push jg out (bad) fcmovbe hlt ret (bad) mov and push sahf xor jno inc jne loope mov dec lods clc push mov lods lret mov cmpsb les das js add bound adcb ja mov test cltd out enter icebp jmp jp je nop jp std push in (bad) movsb rcll insl sub pop add loope mov push (bad) addb inc fisub mov add mov xchg adc xor movd (bad) ds ss outsl pushf inc call std fdivrs sahf mov imul mov xor mov jl sbbb popa mov and gs rcll pop movntq mov sti push loopne fs or mov or hlt idivl pop movsb repz sbb rcrb popa xchg sub cmpsl cmpsb xchg ret out mov mov icebp imul add hlt sub dec cli roll (bad) mov int3 sbb mov repnz xor mov inc jo fmulp hlt push mov rolb pop subl ret roll jmp lcall stos gs ret push lods inc xor insb cmc sbb (bad) or enter pop sahf pop repnz or jnp xor movsb add test cmpsb mov pop xchg je aaa and cltd enter lcall cmp cmp jno add jp xchg xchg add push mov mov movsl cmc cwtl jge jnp jge stos movsb test dec insl adc (bad) dec aaa and mov cmc insb adc xor jb lcall lods (bad) jecxz sarl sub adc leave aad xchg into xor ljmp cmpsl mov mov fwait sarl push lods loopne mov xchg jns out enter xchg dec sbb sbb xlat shrb inc clc or ds aaa adc dec mov out les xchg (bad) jmp icebp ds dec in inc dec fwait adc lret jecxz mov stos mov add int mov and inc stos test dec ljmp adc sti pop mov and (bad) jbe inc imul pushf lretw insl push cmp call fiadd lock mov icebp nop pop dec sahf cmp inc jp lods xor aas mov jg je fs or pop jmp sahf icebp sbb loop ja inc test ljmp std mov stos or call (bad) xor clc xor int3 inc mov and add jg test ss mov adc outsl je gs stc mov adc clc sbb jo pop sbb push sub rclb jg in xchg jmp adc sub pop add aaa ljmp mov (bad) mov pop mov ret das int (bad) push and ja mov pop jne xchg les pop xlat in dec cmp cltd dec hlt push pop (bad) adcl ljmp mov inc rorl xor add sub stc or or cmc inc jns or and loopne xchg inc mov jb lret imul cli adc xchg fldcw inc sahf xchg push fs outsl aad outsl mov sub leave fdivl sub icebp push push inc rclb xlat imul fld xlat xlat cmc mov dec lret add and nop test and add xchg jbe fstpt cltd fidiv pop push mov mov test lahf cmc jae mov cli push adc or xchg mov int add lea inc shr mov sbb add cltd pop cmp lahf jo mov (bad) (bad) scas pop ret pop inc inc arpl inc or out cmp xor in cmpl ss scas xchg test test mov (bad) cld xorl mov and jne sub mov das add add mov xor loope xchg xchg sub pop jl add lods in add jmp sbb push jg or stc dec fwait ret icebp mov dec lsl inc jbe popf add cmp mov adc cltd xor fcoml loopne mov outsb mov lds out int3 sub cs jnp push cmp jmp mov inc mov mov jae pusha pop fs mov xchg ds add sbb fadds mov or jnp cwtl xor les cmp inc inc andb jo imul fwait cmp cmc mov cltd lock mov lods pushf add ljmp repnz movsb push xor mov into ss pop fcmove mov (bad) in cmp insl enter loop,pt push cmpsb lcall push inc into pop repnz mov inc (bad) or pop jo pop aam mov stos xor xchg push inc into pop repnz stos sub out pop lcall xor test push in repz cmp divb stos ss gs sbb and lret addr16 mov stos jl mov shlb ror jl cmp or ret xchg and pushl test push in inc adc lahf flds (bad) jo add mov lock in daa int in cmp cld clc and sbb or lahf inc adc aad cli in mov jp or insl add mov iret mov pop outsl fs popa fs imul rorb stos pop pop pop fs push sbb lcall mov pop adc sbb fsub cld repz stos loopne inc sti outsb loope cmc mov and test push dec test je jne xlat and push pop jne pop lea push mov sbb imul out push adc aam orl cld aam idiv ret leave iret inc repnz xchg add jnp xor (bad) sbb mov push mov hlt sub ja mov ds movsb enter dec xor or adc aas cwtl hlt xchg sahf lahf dec fisttpll out or (bad) xor and push pop mov nop jne mov (bad) mov jmp fwait pop adc imul jg clc push push mov sbb xchg lds xor xchg rcll jle psubsw nop dec push test mov scas mov loop ja sti incl push dec cmpsb rcll pop imul pop invd cmp icebp (bad) cmp jnp stos mov pop mov int cmpsb cli xchg xor mov cld out inc pop lret and jmp mov test sub testl push ret xor sbb cmpsb dec pop pop or jnp xor in js push dec fidivr je jbe or mov movsl xchg mov inc mov xchg ja jmp into xchg lds inc xor cmp roll pop dec shll out mov adc ret inc orl pop lret jl add icebp popa imul iret jbe jg clc ja mov pop jne add jbe aad cmp sbb add jbe insb cmp out les xchg pop hlt int into lock mov mov (bad) cmc xor fcmovu into add jecxz cmp ja add cli js repz clc ja push jne rcrb icebp ds and jnp inc or divl jnp mov mov into or mov (bad) mov ret frstor lock or dec push or sbb lock lret ja mov lds add xor pushl dec add xor scas stc push lcall test ja int cltd inc dec fildl mov aam (bad) xor aad pop add inc jbe cwtl pop dec int dec leave sub mov or mov into xor jne in push mov ficom xchg mov jl or lcall jo cmp inc test adc jb iret pop pushf add add lds push fadds xor mov inc iret cmp hlt imull add mov dec jbe xchg inc iret cmp hlt idiv xchg mov (bad) push hlt push jo pop cwtl xor xchg cmpsb pop int xor pop cmp repz gs sub aaa sub cltd dec cmp pop cli mov push in js ss mov pop inc jne sbb jle push aam and scas mov ja cmpsb out push mov push (bad) mov mov int3 lcall lock mov (bad) adc loopne fadds rclb loopne inc push hlt push mov rclb mov loopne mov add movups pusha mull repz scas and mov adc mov pop xchg mov or cmp jno sub scas movsl fldl2e mov sbbl mov xchg pop add popa mov push xor pop lods sub xor sub or aam mull xor scas and pop pop (bad) and rcl mov inc nop mov cmove jb sub mov je daa adc xchg cmp test dec subb adc cmc fstp jl sbb lods aad add xchg jae xor jmp repnz ljmp add mov leave out sub or adc jno lea cltd repz jb lods fisub mov adc lcall mov push ret ljmp pop fadd jl pushf add inc stos test sbb or mov push in cs js mov mov jbe daa adc iret cmc (bad) mov dec pop jne jg cwtl cmp cwtl xor test flds (bad) inc lret cmp loopne dec adc lret imul xor in out dec xor and xor je loop dec std cmp ja mov movsb ret fwait push push lock ret lea xchg sbb out push insl jmp inc mov ret bound inc dec loopne push add jo mov inc jbe cmc and push pop fcmovbe mov or or icebp ds in leave ret pop lret out inc lock jnp xor cmp jno mov das xchg lret dec mov xchg inc lret lret insl sub mov add imul in lock ja adc jecxz insl sub mov add out mov imul loope xlat xlat cmc mov dec out sub shr mov adc (bad) bound mov xchg (bad) mov inc push cwtl jg movsl aam roll js insb les imul sub push jg xor scas stc dec (bad) (bad) mov mov mov mov (bad) jge int push leave push int add mov mov push jl add jo mov rolb js clc push test in mov lahf dec inc int stc popa inc pop mov sbb jle adc stos xchg lahf adc xchg mov hlt insb flds xor mov rclb loop das or sbb inc call sarl pop or mov dec dec or out inc xor imull mov push adc out mov add jns jg leave inc pop pop ret sbb popa imul data16 inc jns sti jo into xchg inc imul push iret pop pushf add add lds push xor push out fldcw mov inc jbe pop popa fldenv jns ret pop pushf add adc jne jo (bad) inc ja inc test ljmp std mov push in jp xor jno mov mov xor rolb xchg dec insl adc sbb cmp pop (bad) repnz sahf adc outsl je gs leave into dec push jge adc clc cmp push add ss dec adc fisub jae in xchg jmp adc sub pop add daa (bad) jne (bad) cld inc mov dec popa inc test in aad mov or push pop add jbe pop jnp call jns int icebp nop mov sti aam push add add lea addr16 dec arpl inc or in cmp push imul jae sub idivb fsub imul (bad) inc or cmpsb cmp push imul adc arpl in imul inc test mov xor (bad) int3 leave add movl imul inc test mov push test dec into xchg mov inc scas stc dec test imul bnd sbb adc jmp jmp mov inc adc mov js xorl insl hlt int stc nop inc cld add mov add sub lret or push add mov push lods mov cmp push cltd inc hlt int stc nop xor adc mov jp loop sbbl negb jne shrl adcl push lahf pusha mov (bad) (bad) stos mov clc xchg js sahf arpl inc or daa stos (bad) or pop mov cltd addl sbb add sub roll js pop insb aam jg jl cmpsb stc push dec fwait lcall ja std out cmp push cltd inc hlt aam xchg inc mov rolb std shrl inc int orl or mov nop add clc fcoml loopne mov xchg jns into dec rol jmp les or mov and (bad) xor scas push jg push mov inc jp sbb push mov outsl add pop xchg xchg cmc mov and cmpsb jno jae push sbb hlt push jo jo ss movb repnz not mov lock jne leave sub fdivrp mov mov imul cmp das hlt ret imul jne mov jge std xor jne fs cmp pop push jl cmp or gs jl aas inc adc (bad) mov es roll ret push repz or ret pop fidivrl das jg inc jne push out imul fldcw test xchg jne pop mov flds (bad) adc ret fucom adc shrb cltd loope jno das addr16 repnz dec pop lods or shr int or test ret out pushf xor xchg pop jb ja rclb cmp (bad) ds dec xchg cmc fldcw add mov jle cmp iret not rolb lahf (bad) pushf scas and leave push adcb add cld inc lret cmp lods jbe xchg mov insb pop aad (bad) pusha (bad) fimul (bad) and int cltd mov xchg inc mov (bad) roll mov lods inc (bad) test push je scas popf xor pushf add inc stos test dec loope es jle hlt mov mov imul in lods add test insl xchg ret bound enter sub and add mov aaa lahf daa inc insb push bound orb cmp inc stos or (bad) sbb into xor leave mov mov fmull xchg dec cmp icebp nop dec fs repnz les add insb psubsw nop mov cmp fs and pop mov rcr or pop pop mov pop test jge inc push push jmp push out pinsrw pop push adc mov outsl push iret dec mov inc jg xchg jge mov lods call mov xchg sbb js punpckhbw mov fistpl pop fimull adc inc out mov (bad) add jno jg ror pop mov fiadd xchg call mov inc jne jnp xlat stos rorb xor sub mov shlb mov and fsubs jmp test xchg cmp jo stc cmp imul nop out pusha hlt clc mov int xor lcall dec mov insb loopne push jo imul cltd out cmp icebp nop fild test mov insl mov mov lcall or push repz enter repnz push ret icebp ds std movsb and fwait out fistp add pop sub push test sahf sub mov clc lods inc shlb jg fisttp push in sub je stos sbb psubsw imul pop test stos rcr hlt ret push cmc mov cmp inc mov pop mulb scas mov or lea xchg test pop push insb jp sahf xchg or mov pushf push test gs out call dec inc int3 mov nop or lret sub dec push mov jge iret cltd mov mov fimull cltd repz sti mov mov or sub mov dec jne bound jle cs out sarb inc push dec (bad) js add int3 xor push xchg xchg jmp mov or data16 or or mov or push daa or adc mov or (bad) daa or add stos loop cmpl mov int cmpsb cli xchg xor int3 sbb xchg (bad) mul xchg stos popf inc cmp add pop dec pop je jp inc orl lds or mov push add mov or and jmp mov mov jge xor roll test push pop (bad) repnz sahf adc jae push jns test rol test hlt lahf rclb call dec mov movsl notb mov jnp inc or popf push cmc or inc jnp mov (bad) mov pop pusha mov lcall inc or mov pop cli mov dec mov cmp decb outsl bound (bad) testb imul aam sbb mov out fild das sti rclb xchg jns jmp popa imul addr16 inc jns dec cmc mov mov add jle push iret pop pushf add add lds push xor js (bad) dec mov mov mov mov inc movsb ljmp sub xchg inc inc or and ffree sti push cmp push imul ds add test movsl inc pop inc push (bad) cltd ds ret out enter test or mov inc adc and mov ficompl cmp xchg adc jmp jbe and lods out dec push out dec xchg loop loope mov fisttp xchg shrb cmc and dec dec repz inc jbe mov outsl add xchg jne mov ficom (bad) or mov pop (bad) xor inc js push xor mov inc inc stos test sub mov jb push adc std imul arpl ret (bad) xchg repz lea push out psubsw mov lret les cmpsl or out sub imulb mov xchg fwait adc pop sub adc ja clc lret add jae int3 addr16 xor pushf jg add xchg cmp push movsb ja je lock adc jo xchg cmp pushf sbb fiadd rclb cmpb sub imul ret or ss inc lret cmp in pusha out inc push iret stos or out jmp cs push cmpsl cmpsb xchg ret out mov mov lahf jecxz xor sub pop movl ret and jle or xor inc pushl sbb pop aam repnz inc or lock adc ret sub push mull sub (bad) push push clc pop lahf jnp out flds pop stc pop orl out xchg dec sub mov jp sbb in sub jno push adc js add ret mov mov adc clc pop nop sub cld pop sub jnp lahf and ds imul test lea outsl into ret mov push jb mov sahf sbb cs fs mov je in scas xchg adc (bad) sub or inc repnz adc or or out sub dec cmp mov sub jne jae lret lcall ds pusha pop scas aad fwait into sub xchg mov and insb clc rcrl or sti mov add leave ja xchg sbb (bad) rcl imul in push push mov lock sahf ss outsb mov inc pop pop cli aaa cmp cmp sti neg push lods loopne add bnd jmp call xor xor inc (bad) aam add leave cmpsb daa out xchg adc lcall lret gs test mul pushf clc inc push jbe rorb repnz arpl dec test fsincos test ds lret mov jle lret stos fwait dec imul pop mov cmp adc and out out push jle xor out mov mov jno ds pop repnz adc insb out mov add mov sbb lea in xchg jg int add mov sub loopne mov xchg jns lcall add test movswl adc jno pop repnz scas popf dec or shr (bad) and jmp out xor xchg pop fcomps inc cmp mov stos test jmp addr16 sub pop cmp xchg imul pop pushf add add lds push xor data16 cmp mov pop (bad) xchg je sbb push sub inc lds mov in sub jne fs mov (bad) iret int3 (bad) jbe pusha push in in adc arpl xor inc sbbl add rcll std inc fsincos test stc dec inc imul inc mov (bad) mov leave nop repnz ror and enter aas icebp aaa cli mov out call sbb lock ljmp inc and sub pop fiaddl (bad) hlt pop (bad) daa loopne mov hlt shlb push cmpsb imul mov into xchg mov roll adcl or into adc mov mov push jbe inc (bad) inc pop pop cli mov inc imul inc popf add lahf mov movsl lret out ror inc adc mov outsb sbb scas out xor mov ret cmpsb enter inc cmp pop pop pop fdiv ja mov (bad) xchg pushf adc mov rolb xchg inc sarb jnp add lret mov cmp (bad) dec test inc movb movsl insb mov out in pop or bound les subps outsl inc dec mov jg jg inc dec in push or stc insl hlt int3 jmp lea dec lret add mov outsb xor dec les mov push push ss pop jmp sbb (bad) fs dec lahf clts roll flds bswap mov push in mov mov pop es mov sub adc inc jns xor mov stc push jmp lods clc push aam mov push push mov adc or sbb mov add in mov mov in and ja inc out mov sub mov les dec stos inc in lods inc cmpb out inc pop das or test daa loopne mov int3 std not cmp test aad outsb lcall mov add add repnz mov push add inc daa les mov mov lods jg mov inc jle add inc sub ret xor sbb cmpsb dec pop pop or jnp xor in js xchg cmp aas dec fidivr scas xor or mov inc int3 xor jl adc sub pop add jbe mov xchg in (bad) (bad) (bad) stc adc int icebp nop popf (bad) inc (bad) mov aam push add add jg (bad) dec or inc or js sub push imul adc arpl fmulp outsl pop pop test mov xor inc into xchg int jmp stc cli nop in lahf outsl pop pop test mov push pop sarb (bad) int3 leave add test clc inc jl rcrl (bad) in lds add (bad) popf push out ja cmp adc scas jg fdivl sub pop push (bad) in lds add mov inc xor js les out sbb dec mov jg aas ss cmp scas mov mov aaa (bad) shll negb sbb dec mov jg pop jbe cmp scas cmpsb lret fsubrl jae push (bad) mov cmpps stos xchg (bad) dec hlt int3 ja cmc sbb mov sahf movsb movsb jnp push (bad) mov cmpps stos addr16 jbe dec hlt enter rorl ljmp clc sahf xchg dec jns mov cmp popa push (bad) daa iret xchg js sbbl jmp add inc or adcl mov inc idivb divl shrb push test call jnp inc or or popf mov mov adc jle sbb mov or or jmp cmpsl aad outsl add inc or add fisttpl cmp cld inc jno jb out test or jmp cmpsl aad ret jnp inc or lds ficompl les nop xchg mov jo add (bad) stc adc aam es aad lsl inc jbe loope aaa int push leave push int or push loop loope pop cmp cmp mov pop arpl jle adc stos xchg lahf arpl mov xchg jbe mov xorl push xor subl pop adc cmp aas lock dec jp scas add fnstsw and mov es or sbb and imull mov push adc popa sub mov jns jg enter ret sbb popa imul jge inc jns cli jp ret imul push iret pop pushf add add lds push xor mov adc fs xor outsl psubsw imul aas sahf imul pop mov cmp push das cmp push int std cwtl leave add dec push sbb test mov out mov scas inc rclb pushf jg iret xor fdivrp test and mov outsl add loop out adc aas push divl xor test daa and repz mov mov ret bnd sbb add ret cmp inc jne sbb jle push aam movsb push notl arpl xor outsl lcall das push dec add pop aad lahf out lods imul test testb inc gs and inc subl mov loop pop repnz push add push lods or sahf (bad) xchg inc inc or adc ljmp cmpsl mov ds jno xor negl push push jne loope push push lods scas out add outsb adc fs mov lock movsl jb mov ficom testb mov (bad) in rcrb cmp les out cmp jno pop inc sbb push jb jle lea inc jne or dec leave sub dec jg sbb imul sbb gs mov outsb int3 test mov dec mov mov ja or in and ja dec loopne or cmp (bad) ds mov pop jno arpl jmp push pop aam pop adcl mov mov aaa mov out sub scas (bad) and shr jns and mov adc fs or outsl lcall mov jno xchg inc or pop repnz stos pop dec imul pop lcall xchg adc xchg push in hlt imul divb stos ss out stos sbb nop (bad) sub dec add pushf scas jo sub and ret icebp ds arpl ds xchg test in js mov test repnz fidiv inc fldt xor popf subb pop push arpl cmc shlb ljmp and adc repz sbb nop fidivrl pop pop sarb stc sbb fwait adcl icebp lret cmpsb ret out inc adc stos int3 ret fisubr pop mov jnp ret jns sbbb sahf and lods and call xor mov daa shrb dec jnp pop outsl jae xchg lret xchg adc gs ja mov je xor mov (bad) jno sub out mulb jmp inc iret mov xchg negl dec cmp mov or add mov sbb sbb jb adc or xchg fnstcw out imul pop sbb xchg mov mov push popf cmc cwtl sti mov cli sub sub cmp stos rol ret cmp inc stos or (bad) sbb into hlt popa jnp push out jnp pusha loop dec fwait jno cmpsb je inc jp sub test pop enter test aad stos movsb mov sbb out mov ss jnp jmp mov hlt mov jmp icebp clc cmp jg (bad) dec pop es cltd int3 mov sbb inc int3 mov and sub jp nop clc jo mov outsl adc push xor xor mov xchg inc iret mov sarl cmp pop pop pop fdiv ja mov (bad) xchg pushf adc mov (bad) mov leave xchg inc sarb rcrb mov bound bnd mov insb leave scas aaa mov cmpl or add pusha (bad) and jg int3 in nop mov rorl js sbb xor lods (bad) sub fxtract adc push test mov inc cmpsl inc int3 add repnz js pop das push mov cli je lea in or mov jns inc orl add add in inc jne push jp (bad) inc xchg (bad) mov inc pop lret mov fdivrl inc jmp ret xchg cs xchg and icebp push enter icebp mov scas jbe push fdivs mov movsb push in fwait push (bad) or inc jnp mov xlat inc inc dec pusha mov cwtl push fild in enter mov adc sbb lcall dec inc iret cmp das push jle iret js test sahf xchg retw mov inc jnp (bad) rol ficomp adc mov rol rcll inc or test (bad) sbb mov hlt inc idiv xchg pop add mov mov bnd (bad) leave ljmp cmpsb ja mov mov mov cs call add or or jle movsl in sbb fisubr scas adc xchg add and ret inc mov movsb movsb or mov lds xchg jl or stos jg cmp pusha sbb icebp push repz sub shrb mov jb add and loope sti or (bad) das jne push lahf test out and stc jl ret add or inc imul lea push repz mov les pop (bad) in pushw mov adc lcall inc lods mov (bad) sub jg cmpsb jb add adc add lock leave test inc add fstl repz push cmp dec push pop dec mov fsubp gs in jno adc mov repz mov push cli cwtl (bad) push mov add popa xchg cmc sbb vmread icebp das (bad) sbb test jae sbb dec sahf xlat mov push xor jb not inc addb aas push ljmp (bad) out cmp inc movsl divb hlt cwtl jb lret jge inc cs mov (bad) jbe add push mov negb iret and (bad) cmp mov add lcall dec (bad) (bad) mov loop jb roll or sbb not mov (bad) push daa fidivrl and (bad) dec push add cli mov pop in sub push ljmp int pop (bad) fwait add cmc adc cltd test in lods lea addr16 pusha rorl jg or cmc dec fisub sbb sarl (bad) sbb sbb testl mov das mov nop jb inc mov in sbb mov mov test fistpll push jge mov dec or ret in roll xchg jo and imull ljmp push orl add xchg add stos jl pop jmp cld adc cmp mov lds stc (bad) jae int3 sahf inc pop mov es imul lods dec out dec inc add push sbb push mov icebp mov (bad) push mov or mov cmp and popf orb sub dec xor add or scas nop fisttpll rcl cmp out inc inc inc jns (bad) cld or mov push sbb and xor (bad) test decb xchg les or sbb shrl jne jg cwtl dec stos pop (bad) test inc mov lds stc (bad) jae int3 mov mov lea dec push sub jb jne shlb dec xlat xlat repz dec cvtdq2ps (bad) xor mov or jne push test (bad) mov pop les aas ljmp jb mov adc cld orb icebp nop add leave push inc push and (bad) mov dec std (bad) xchg inc imul mov mov cli adc cltd add inc add or jne push test rcll test test test (bad) mov adc cld orb icebp nop movsb mov push inc push and (bad) mov dec std (bad) xchg inc imul mov mov cli adc movsl rorl into jmp add or addr16 push mov ficom xchg sub push in sbbl daa mov test leave leave fdivrl rclb hlt ja sbb mov xor aas mov (bad) aam push dec adc jmp call ret push mov stc sbb adc clc cmp jg (bad) dec pop es addr16 arpl jne sbb fs xchg and ja cmpsb jo int sub out std push push xlat js shlb out lret add fstps sub cwtl xor in jne (bad) lods or pusha sbb add pop pusha ja push xor flds xchg xor cmp or cmc movsl hlt ss push add inc out xor imul mov scas push or jne pop movsl sar (bad) (bad) dec or mov lds xlat lret negb jne mov push add ja inc sahf int icebp xchg test mov push aas test and add ja js sahf sti xchg jbe cmc adc mov jl rep pop and je xor cmp inc dec lahf inc jne into call lock add int inc ja adc inc addl cmp repnz jnp stos mov add adc dec xlat jbe sti fwait push cmc add int3 imul insl dec jmp xchg and add nop cld lds (bad) (bad) in or inc dec mov cld clc mov sub test jg push rcl ja movsb sub (bad) data16 mov jg cmp fwait dec dec sub and cmpsb pop insb outsb jne out mov mov insl out std push push das js push ficomp cmpsl inc adc leave sbb push or xlat push pop stc in loopne push nop or sti std in js cs inc mov mov je insl lods pop cmp fidivrl fstpl nop jbe fdivl sahf insl mov std pop repnz jp test mov (bad) pop adcb and lret cmp sbb lods mov dec push pop aaa cmc inc pop pushf add or push sbb pop repnz or arpl or xor (bad) cmp fistp dec fwait out int gs xor divl pop (bad) xchg and adc or icebp ds or mov xchg icebp pushf sub pushf movsl add test xor xchg pop fsubrs sbb sar movsb mull cltd mov pop sbb push mov aad push mov cmp jae in ss mov int mov cwtl push in sbb jmp dec icebp xor jae push jns movsb and ret add cli rorl or pop nop jnp dec decl add adc test ds lock add das dec inc iret cmp (bad) pushf add lds mov push push jb jo mov mov fldl2e int3 and inc fisubrl ds fnstsw int3 test or andb add lahf ljmp mov in pop adc dec cmp mov mov push popa es or (bad) mul ja xchg push jns or fwait sub push lahf shr faddl mov pop ret icebp ds rorb jle mov mov add test aaa ret jp repz popa lds xor (bad) xor jp imul cltd std inc or push (bad) jbe gs cmc add adc jecxz,pn pop add mov jae out pop inc loope xorl pop mov push cmp or lahf bnd add fcmovnbe lret jnp cmp insb neg adc and lret shll (bad) jo push push push jnp pop xor test jg cmpsl mov bnd popf and jae lret jmp icebp cmpsl stos ljmp xor popa inc jnp cmpsb movsl push cs and loopne dec out xchg push mov pop dec (bad) jne jne jle jp adc and aam push or leave lds clc cmp dec fwait loop or ljmp nop xor push dec fwait int3 movb or dec xchg imul jne pop mov (bad) xor das aaa mov mov outsl add int ret dec lds sbb lods lds jnp cld dec pop (bad) pop jnp xor lcall or cmp lret pop jl dec jno cld sub out sbb rclb les mov jge sbb xor cmp int3 xor mov xor out daa mull repnz mov das push xorl push sub dec xchg xor adc push or add xor xor add push fcomp cmp jnp add cmp jg jl jl and test rcll scas addr16 inc push dec or std outsl jns mov cmc mov sbb aad xor xchg adc pop dec cmp daa lea jl push hlt mov xchg (bad) push test cmp inc addr16 add mov push int3 xor stos das dec int3 push adc nop or mov add or jns xchg dec jp lcall inc cmp movsl das enter pop jl dec jbe mov cmp (bad) js add (bad) mov loop jbe sub ret pushf xor outsb cld push daa shl scas xchg ret pop fpatan ja dec (bad) jl dec (bad) mov dec pushf pop pop dec loop jp test or xor push insb loopne mov or sub cmp (bad) mov lret pusha cld mov xlat jne (bad) cld call cmp data16 lcall scas sub outsb out std push fcmovbe sbb fs inc out stos leave cmp sarb mov jno popa push sti clc gs outsl add jb hlt sbb push xchg shrl mov pusha add (bad) pop rol adc mov sbb roll es out pop xor mov in scas xor iret imul bswap (bad) xchg jns pushf add jmp movl xchg int3 inc sbb sti cltd sbb jmp call int3 fidivr nop test aaa adc sbb leave inc fsubr jnp inc js addb ss fist mov dec add jb adc pop and pop lea jmp jb mov push push or repz mov push icebp xorl fcompl cmp add adc sub subl add insl inc mov ja,pt fcoms and daa add mov mov xchg (bad) inc sbb jae inc imul stc je scas add dec pop loop jmp mov ficompl inc (bad) adc pop or jno ljmp ss jnp dec and aam xchg test scas dec aam push int3 jmp ds or adc fwait (bad) xchg fxch fsts push lret jnp subl jecxz out xor mov mov fimul hlt loope mov mov or sbb leave cmc cwtl inc add cmp xor pop aad jb repz in sbb xor mov int3 mov insl rcrb jb in sbb loop scas clc enter xchg cmp add aad and jns cmpsl ret and (bad) cmc in sbb loopne andl adc mov jg xor outsl into ret xchg mov rcr inc leave xchg mov mov insl add imul sub and push push jns fidivrl jl popf jno hlt cs iret cmp (bad) leave mov ficoml jnp ficoml aad sbb or jo pop mov test addl dec iret xor xchg inc mov or (bad) mul ja mov (bad) xor dec cmpsl jo cmpsl adc ja xor ret fiadd sub inc cltd sbb cmpsb xor outsl test and imulb test push sbb sub cmp dec in mov data16 inc adc pop push into mov sbb dec (bad) cld aam mov lret lcall mov les sbb test shlb mov popa jno pushf sbb ficompl leave cmc cwtl jge adc cmpsl push xchg sahf arpl data16 dec popa and or push or and pop int sub inc aaa pop push push arpl cmp dec xor jb emms (bad) and lds or inc cmp popa add push push add xorl nop aam and lahf fcompl data16 dec in adc sub push mov cmpsb les das js repnz inc ret add (bad) and and jg dec insl in cli or (bad) cmp sbb add into or test mov cld aam mov insl divb dec jb repnz mov jns ret int3 out inc inc xor inc sbb xchg arpl (bad) pop cwtl adc xor push jl cmp or gs subw mov cmp repnz mov test jp xor out lcall or cmp in repz pop xor ror mov jbe xlat push and sar sbb cmc mov imul jnp inc fs jl lcall or mov out (bad) fistl jns sub int3 in repz pop push int push sbb push mov adc and or xchg rcll jecxz cltd xchg cwtl in sub mov jne test popa es or (bad) mul ja and pop mul jnp clc mov xchg and adc mov jbe sbb hlt outsl and jae mov mov xchg add cmp xchg xor and leave sti bound cltd sarb pop neg push jge mov or inc in or mov in test or pop vmovsldup cwtl sub mov dec mov mov add cmc out das cmp (bad) test fsubl out or shlb mov scas fisttpl insl pop lods pop xchg or jp rol inc nop push ror cltd inc adc push (bad) adc mov sub shlb std aam push adc fldt insl pop lea or fidivrl jbe in cltd inc adc stos xor sarb xor and adc pop dec nop insl pop insl fst or mov nop push rorl inc adc ljmp loopne shrl shlb jge pushw adc pop insb nop insl pop dec (bad) or sbb xor inc nop mov sub inc adc sub adc mov mov shlb mov fisttpl adc pop (bad) cli jns ret xchg rorl adc push (bad) adc mov stos xor and std push pushw adc fldt xor pop (bad) pop mov not insb cltd inc adc stos mov adc mov int shlb and push adc pop into xchg insl pop in loopne or mov xchg ret inc nop (bad) mov lcall adc mov loope shlb push addr16 adc insb (bad) xchg insl pop mov (bad) pushw sti ret inc nop cmp cmp adcl shrl shlb fcmovb addr16 adc in or mov dec fwait ret inc nop sbb mov adcl shrl shlb push out addr16 adc insb cmpsb xchg insl pop jne int pop (bad) ret ret inc nop push mov lcall adc mov pop xor and adc adc insb pop xchg insl pop dec fdiv or push cs inc nop push sub outsb adcl shrl shlb mov fmull inc mov pop js rcl sub js mov mov push pushf lds or inc mov stc int xor rclb add faddl inc inc lret adc sti add jbe dec mov mov mov ds in js std ja outsl adc add divl jnp mov negl mov jnp (bad) test (bad) or jbe loopne xchg out cmpb adc js mov mov add xlat (bad) icebp xchg or or insb cmp lds (bad) mov (bad) (bad) dec sbb imul mov xor test addl lret out clc dec idiv or mov sbb jnp jno push loope in mov lods loop ds ret cmp (bad) or cmc cmp sbb xchg mov sub adc push mov xor fwait lret mov outsb or mov add jg (bad) lock mov mov mov (bad) sub xor std stc adc divl mov sti out popf adc out cmp sti xor int lods xor mov mov jnp (bad) clc xor into xchg or mov and mov push inc out pop inc add and and adcb pop repz pop adc sub jmp mov in push (bad) jne ror lock ds orb jno vmread repz clc xor (bad) xchg or or jae dec adc xchg stos (bad) hlt ret cmc nop mov ret test test xchg jb into jae add mov sbb out (bad) sbb push leave jmp cmp pop popa pop test sbb and or rorb dec jl cmc pushf sarb pop cwtl stos xor sti cmp vpunpckhbw push (bad) repnz (bad) and adc xlat mov fsubs mov test or dec jg cmp cmpsb or pop subl call jb adc lcall mov jnp unpcklps mov mov ds stos and xor js fwait xor nop cmp jbe xor jmp mov mov shrb (bad) es ret pop cmp int3 xchg fs repz shlb icebp in jg add adc inc pop fs ficompl mov adc iret xor repnz sbb (bad) mov dec dec sbb push jecxz sbb ret and (bad) or cmc cmp xchg sbb xchg mov adc int3 lds imull jl and mul out loope add iret test adc push cmp mov or dec jg cmp mov or pop js and (bad) push (bad) push add jl cmp jge mov jl in es pop nop add sbb jae ljmp mov (bad) lds idivl jp sub push and dec sbb pushf jns das mov fisub sbb (bad) (bad) lea xlat jae cmp scas pop push jae sub push pop das ss or pusha in cmp xor mov mov jg add xor push fadd adc mov push (bad) and pusha idivb insb movq call jp jp adc xlat pop jl stc xor std stc adc (bad) or xchg mov mov jne rcr (bad) cli dec add cwtl add sbb push imul adcl xchg or cmpsl aad cld push ja sbb add int3 lds testb cmc pushf sarb add (bad) ss push (bad) mov (bad) fnop cmp jno,pt mov xor cmp cmp in fdivrs mov pop mov mov adc push lods fs mov or dec jg cmp mov or pop js and (bad) push (bad) push add std mov jne rcr (bad) cli dec add cwtl add sbb push imul adcl xchg or daa cli lahf sbb sbb xor cmp lds inc mov add sbb add xor cmc pop sti repnz jmp adc jbe xchg push cltd jl dec mov pop jne les sbb cmpsl std pop movsl jp lock loop sbb insl out scas (bad) push ret or xchg mov mov mov dec mov mov jp mov ss test (bad) cmp fstpt pop and pop add test imul dec jno pop lcall mov xor xchg mov (bad) repnz push popa sti mov ja lcall xchg js (bad) mov mov cli xchg ljmp jne out jl xor movsl xor fwait jne add negb scas call mov dec xadd stos or sbb push int3 lds testb cmc pushf sarb add (bad) ss push (bad) mov pop ljmp imulb xor cmp cmp in fdivrs mov pop mov mov adc pop data16 lds pop mov int3 lds stc popf loope outsl cltd add sbb lea sbb cmc outsb push popa sti mov ja mov mov lock lea jp es lcall cmp mov mov push push clc xchg push fldl lahf jp adc lret out in insl add push cld and cltd adc cwtl add add adc lods jnp jo sbb xchg in or (bad) (bad) xor (bad) xor scas nop insb cli push jmp cs lods mov lret cmp bound and fiaddl mov xor out lcall movsl sbb inc cmp pop jnp mov in and cld (bad) cs lods jle popa fstpt lds hlt xor outsl cmc pushf jp es pop and popf adc stos sti mov mov stos push (bad) xchg jne xlat dec jl stc cmp in test pop and or sub and iret scas cmc cmp enter or or dec inc negb or pop sub cmpsl jl fild cmp frstor int mov mov jecxz jmp pop xchg (bad) icebp or pop jle ja add mov mov push out ret mov add add dec jl stc cmp in fdivrs mov pop mov mov adc scas frstor mov mov sbb mov or pop js and (bad) push (bad) push add fild cmp frstor int mov orl and jp pushf xchg xor mov or xor push popf scas lods in stos dec cmp mov xchg shll bsf add xchg lret in mov cmc in dec jns sahf out add mov sub add lahf stos and std vpaddd aad out xor lret pop mov ret dec mov (bad) fldcw pop outsl mov (bad) in mov or gs movsb repz xchg or sub aas sub cmp jb loopne push mov xchg jl imul xor and (bad) mov mov (bad) cmp test push add pop push jnp addl (bad) into xchg in ljmp mov stc mov pop (bad) cmp cmp mov mov sbb int3 xor das jb,pt or out sti mov inc mov icebp xor or sti in das jns js inc lock inc sub fidivl mov outsl loope xchg xor inc jg dec inc cmp mov scas stos dec rolb mov lret push adc pop mov (bad) pop cmp sub cmc cwtl jnp fsubrp mov cs mov adc and test push out int stos fs xchg (bad) fistpll ss cmc xchg add xchg dec test cld sbb dec or xor loope inc outsb jmp jbe adc cltd jb mov sbb mov loope cmpsb test lods cwtl lds sbb mov xchg mov or mov repnz push in pop test rcll lods xchg push mov pusha sbb les repnz pop repz sub push sahf add and mulb in into stos jge loop mov sbb cmc faddl mov repz lods sbb mov repz sahf sbb fs nop in js lahf push sub test decl xchg and mov or aaa out test jns imul inc mov adc inc outsb mov jle les jl add aad js shl (bad) pop mov sbb std mov xchg mov lds pop xchg add test cmpsl popf lds jae push sub sbb adc test pop enter ja push loopne mov shlb subl cmpsl decl push jbe imul bound xchg sbb jbe test cltd loop jae mov inc paddsw and or fwait xchg lds test les jmp das mov and xor pushf add jne arpl pop or clc imul push xor icebp repz enter push cmp pop xor inc jb or sti pop lods cmp sbbb push xchg js repnz push dec (bad) call add cmc cwtl add push jl xchg cmp xchg mov or mov dec cmc adc or add push scas (bad) cmp cmp adc cmp or jo push add ja dec (bad) (bad) pop dec out jl rcrl ss test dec push jnp jg add and lahf xor arpl loop mov fidivr sub push cmp jnp jns popf adc lds fxch fmuls pop movsb (bad) pop jo xchg lahf xor js std mov mov mov int icebp fwait cli pusha dec xchg or (bad) popa std add sub test xchg sub mov mov dec jne,pt insb sbb lret adc dec pop xchg mov pop das sub or fild lods jnp lss outsl add fwait sub popa mov jmp jne fldt inc push lea mov rolb pop aas dec push push repz inc leave mov mov adc inc cmc fdivs or in dec data16 jns push jp pop addb cmp dec cmp mov jge jns std pop cmp mov mov test jg xchg pop inc push xchg adc xchg or dec sub inc mov stos pop repz xor out adc or (bad) cmpsb mov mov add pop js jo aam xor fs push ret scas fmull add xchg inc pop jae pop cmpsl xor dec pop cmp jns push fwait mov pop loop pop int mov pop sub stc cmp bound sbb aaa or cmc cmpsl cmpsb loop xor push cmp stc (bad) jne mov adc xchg cmc add enter aam add pushf adc loopne pop lret mov push sbb (bad) and sbb stc (bad) je (bad) addl lods aas fs jle cmpsl sub fwait lcall decb dec mov in mov (bad) ffreep adc or (bad) enter movsl push mov dec jle cs push nop cmp xchg clc insb scas mov xor mov fwait sub fcmove xchg loope jae and testb scas es js addr16 jnp mov dec jg xchg movsl sahf pusha js jnp pop sbb push pop pop (bad) bound and xchg adc fmuls dec jp in push inc lret scas das inc adc loopne mov or mov pop push addr16 adc in mov clc xchg mov bound test adc cmp test out lret loop cmp popl stos add pop cwtl test dec mov adc jae call add movsb fnstcw pop lds jne int3 test fs push cmpsl lods cli scas or push inc dec mov push hlt and inc andl daa xchg lahf jp (bad) inc add stc sbb jp inc inc dec lds pop jbe jnp inc add or scas sbbl fs in (bad) cwtl (bad) mov xchg or mov jle in or sbb (bad) lock sbb fildll (bad) and loopne fiaddl (bad) xor out rcr push jns or jmp popf adc ds sbb int sahf loop add gs pushf mov or xor test icebp and repnz jp or push pop insl aad rclb jae sbb sbb mov adc cltd ret daa sbb cld iret enter jae and cmc push push pop int3 fcoms or lahf mov add pop mov mul in fs fs jle insb push xor negb test pop jp (bad) xor add push cmpsb dec lock dec and mov mov (bad) inc add pop xchg scas das inc adc loopne cmp dec adc je fs addr16 xchg push out lods sbb in sbb das adc out test cmp (bad) je lret sub cmp mov cmp sahf (bad) lahf out xchg pop sbb cmc mov mov dec (bad) dec inc leave mov arpl (bad) mov cmp mov addr16 arpl push mov push sub in addr16 int3 mov std push jb scas out scas enter add mov cwtl (bad) dec cli lcall add mov shrb enter cmp cmc in test push call ret loop jb and jle lahf jl popa les mov je push out and lahf mov (bad) xor imul dec ret and fwait cmpl lret xor dec lock popf pop or push cmp (bad) xchg xchg or pop scas int sub mov (bad) pop add cli scas in xchg stc cld jmp jp mov jbe stos push jmp mov fs pop mov sbb or pusha inc add pop or add mov xchg add push jmp in mov repz in nop (bad) call xor hlt loop out out add mov mov mov xchg mov ss les inc cltd pop gs (bad) xchg mov push dec in idivl cmp mov add js cwtl (bad) pop inc lahf adc push sbb xchg add jb and stos (bad) mov loop pop add leave cmc shlb mov ret adc sbb dec imul popf jo mov addr16 jae imul inc mov fimull xor and push sahf pop inc dec cli std ret mov sub mov cmp lods (bad) scas lahf pop das and sbb mov sbb (bad) cmp test addr16 les int out sbb idivl popf lods ret loopne xor jg je adc int3 mov add push (bad) jmp mov or sbb stc xor cmp and and fildll cmp js jp outsb out sbb mov mov popf cmp js cwtl fimull test mov xchg hlt xchg mov xchg and lret or sti lahf pop int3 jmp inc mov cmc mov mov ret subl pop push cmpb sbb dec mov in out cmpsl dec lret add jo sti mov cmp lret xor and or or stos out add lods dec pop pop addb pop xor in mov xchg or xchg inc das (bad) je pop in push fildl xor daa pop add xchg pop lahf sbb in cmp das in jns jl popa testb (bad) jp rolb or pop fdivrp jmp lcall call fisub cmp inc cmc adc orl ret rcrl adc add (bad) adc fistpl pop in and cld (bad) cs lods jle popa mov lret inc hlt xor outsl cmc pushf jp es pop and popf adc stos sti mov mov mov xchg jne xlat dec jl stc cmp in push hlt mov dec (bad) lcall xchg mov lods hlt cli push add add inc jg cmp inc mov add stos sti mov sti ds cmp stc adc testl mov imul insb outsl nop add sub pop xchg xchg sbb lret adc jl xor cli jb mov imul sbb push jns add adcl sub testb popa in insl xchg add adc dec aaa int3 xor movsb mov lds cltd sahf arpl ja cmpsb (bad) icebp dec or mov mov sbb pop xorb cwtl stc add push and pop mov pop inc mov imul push pop push shl push aas out add cmp mov pop js (bad) mov sbb mov and movsl pmulhw imul popa pop xor leave mov shlb fimul sbb add jne mov sbb and inc int sbb mov xchg dec subl mov arpl or dec pop inc cmp mov arpl or cltd fsubs add lods cmpsl (bad) sbb and inc and gs jnp fwait xor dec sub pop lea jp rolb add cmp jb cmc jl mov xchg aaa jb adcl out int or insl std js push or and inc and es test sub xchg ljmp sbb and push popa scas sar divb lcall xchg cmc ljmp arpl int add in (bad) icebp jb inc cmp xchg mov mov loop ja (bad) scas cli in mov inc inc out mov (bad) stc jne mov pop xchg and pop out outsb sub sbb and int jb test roll adc ljmp cmp out jle and xor cmpl ret or jns and add psraw std xor or ficom jno inc imul lock mov inc out jns ror scas jle jle adc xor cmp or jp,pn fsubrs mov mov outsb add clc xlat mov jnp pop shrb int3 add mov jmp add jns add jbe xchg sub lahf cmc bound bound sbb dec (bad) push je xchg mov stos inc push jg cmp lea sbb sbb pop psubusb shrb and or mov lock loop fcompl inc je inc ret jb xor loope dec jp adc in jbe dec cmpl lods lahf push fild cmp nop and orl rorl cmp rclb pop test jb mov dec jg jl out roll ror sub push sub sarb fidivr lret xor lea push jb (bad) movsb arpl lret sahf and (bad) dec cmpl test sub fwait add push or aas mov out dec aas rcll lods dec add scas int3 inc in mov cmp inc pop (bad) scas mov das out ret cmp push mov or push pop xchg aas jbe aad pop xor pop out mov cli xchg xlat scas int3 xchg scas jmp adc mov sub (bad) jecxz pusha pop insb popa (bad) stos enter fcmovnb outsb jbe dec mov push insl sti xchg xlat lods enter les xchg mov sub pop (bad) jecxz add insb push or add ds mov icebp mov add subl leave jns or inc xor clc fisubr inc call adc xor jns data16 push add add add sbb mov xor push jle call add rorb pop push push mov push stc mov lret icebp call (bad) into adc cmp sub in clc inc sbb adc stos or ljmp test xchg pop dec dec icebp sub and stc outsb movsl pop outsb xor sbb hlt jnp loop pop into out shlb scas cmp jge jnp call add and pop push inc scas sub adc stc shrb iret jmp ja cmp enter outsl dec lret add fs rcrl ret (bad) (bad) mov cmp cmp and jno or xor sub dec adc sbb cli aam movsl mov sbb cmp stc loop (bad) cmp sub in clc inc sbb sub or and jo cmc xchg dec pop pushf daa insb dec lret hlt in je adc cwtl sti (bad) std push mov pop or in xchg jae jmp or inc repz add dec cltd jae rcrb test inc retw (bad) subl adc and inc mov rcrb xchg adc or mov jg add mov lods inc (bad) scas cmp push cmp mov lock xchg mov arpl or dec add or mov add push ror mov jbe mov dec jge jne adc xchg ja,pn fcmove jnp cmpsl pop adc xorl dec sbb sbb and push rcr jmp push xor push jo (bad) (bad) std add or int3 inc sahf xor mov cld and push adc pop jecxz dec (bad) sub add fucomp mov cld push sahf stos and adc std pop psubusb xor push inc and mov xor (bad) pop (bad) cmp ret cmp je addr16 mov dec in stos dec sbbl ja add clc mov jo,pt in xor mov cld push sahf stos inc and xlat jbe pop pop fcomps xchg roll jne xchg movsl test mov mov jnp test or mov cmc (bad) pop test push out (bad) insb pop lret mov call cli clc std insb (bad) lret sahf stos adc inc inc idivb pop fcomps inc xor mov fimull jo pop hlt outsl dec sub jae sbb sub add cmp gs outsl add xor scas add shl sti jl (bad) sub inc xchg sub out call incb jle fbstp sbb mov mov pop lods pop and dec lcall ds int3 hlt xchg lock push lcall push push push push fstpt cmpsb fildl pop adc test add cmp and xor sbb (bad) xor stos and mov dec lahf mov inc jge (bad) fmulp dec push mov ret or xchg inc inc clc push push lcall mov inc inc out mov jbe arpl in int3 sbb les or repz lods movsl mov push cli decl cmp ror jp psrlq adc (bad) dec lcall sub add sbb out pusha mov (bad) (bad) jg jle pop inc int3 je rcrl push (bad) lret mov mov mov (bad) ss and cld popf rol mov das ret repz cmp aas xchg rsm insl mov adc jg jle stos jecxz cmpsb mov mov aad in call and fs dec adc and add xchg cli dec (bad) cwtl imul enter inc jle xchg jo sub nop ja loop push pop (bad) in add mov xor inc and out test (bad) out mov jmp rcr enter pushf push lahf subl testb repz cmp mov xchg or jnp sub dec mov push xor cmp and adc out fildll sbb add jle or xchg cmp cmp lret (bad) insl imul xlat ja stos cmp (bad) (bad) fs jl pop xlat enter mov inc dec (bad) push je clc and sar adc into call daa or cmpsb and sub scas divb iret xchg cmp sub sahf xchg loope pushf pop (bad) cmc out mov adc (bad) cld call stos add mov repnz fisubr insb imul (bad) outsl (bad) (bad) bnd inc andb call adc std iret mov repnz mov (bad) or addr16 cmc dec inc aaa xor loop push cmp aas xor aas scas fs mov mov xchg add adc ja pop psubusb add push inc and mov xor call cmc inc cmc xchg jmp pop jb cmp outsb and inc es mov dec cmp clc divl imul adc dec add pop ja mov int call lea adc add sti jl xchg les out mov jmp pop add lods mov push testl fwait arpl and cmc sti decl mov hlt cmp ds cmp test sti int test push mov or sub fadds mov mov mov ss xchg sarb cmpsb rorl pmullw push jle popf pop fs push dec call jb push dec lcall shl sti jl sbb jbe jnp inc push cmpsb das pop ss mov (bad) and lock inc add leave fldl jne pop cli jle sahf adc test sub xchg stos lods inc pop add sarb inc xor add pop bound stos inc imul xor call jnp inc add add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov adc push pop mov mov arpl mov or mov std jb hlt ret loopne mov dec dec mov push push adc arpl mov out std jecxz addb aaa pop adc js mov clc push adc jne jle mov add aad sub cmp mov and cmp mov in (bad) outsl mov (bad) lock cli cli push mov add aaa mov or cmc inc add xor pop lds (bad) stc loope lahf adc (bad) add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg jle jnp dec mov (bad) xchg jmp jo cmc pop (bad) cmp mull push (bad) push inc icebp in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg or cmp movsl fnstenv mov add lret loop dec dec scas fdivl dec dec inc std inc aaa mov xlat test inc mov mov mov cmp cmp mov dec fdiv das sub repnz repnz mov fwait xchg mov jns rcrb call in ds sub push mov cmp (bad) inc test inc sub add mov jp jns mov xlat jnp push cmpsl dec pop dec pop mov mov std dec or leave mov les mov adc cmpsl repnz dec test push pop fsincos mov push add out or and (bad) adc inc je add popf loope and (bad) adc fstl pop mov mov in je lds rol hlt mov movsb fidiv mov fistpl (bad) xchg inc jg jbe mov add aam dec insl adc lds pop pushf fwait add stos mov push push mov or and jge mov nop scas mov adc push mov jae cli int3 decl test inc rclb jno xor int or mov mov and or mov int3 mov fsubl es xor sbb inc push out fcmovnb (bad) push mov inc dec mov jb xchg scas pop ret sbb dec mov (bad) out adc push xlat fcomp lret dec orl outsb cs aas (bad) into ret and (bad) gs adc repz lock push arpl jbe lahf ret adc lods mov push jo in int3 inc imul ret xchg mov mov je out jb mov mov cmp pop into sbb mov mov icebp push arpl int imul int3 (bad) lcall (bad) push mov mov mov hlt sub std in call or (bad) aas adc into testl xor scas jp jg jge xor into inc pop lret sbb in cmp sbb sbb mov mov adc xchg cwtl mov stc inc test in adc lret add push mov add sbb push add shrl jg test stos aad add out inc adc cmp rcrl xor sub sar lret insb (bad) (bad) repnz push adc fstps push mov jns adc daa sub fbld mov stos or clc lcall scas or inc cld inc insb adc mov dec fdivr xor pop xchg xchg cmc or mov inc lock add jmp jge fs repnz gs pushf aas or bound mov test (bad) xchg cmp adc ljmp out mov adc dec pop testl xor dec ljmp xor stos push dec andl or fld cs jp ljmp cmp lret ret jg (bad) cmp jbe push inc push cmp mov call mov aad pop movb std mov dec cmp and mov mov mov movsl fidivl ret test leave nop (bad) dec bound out add pop push cmp and bound add gs lods fldcw sub inc sbb (bad) aas sbbl sub inc cld cmp shr or dec enter test jle or pop les stc (bad) mov out fs dec push lret int3 lret insl jmp in scas sar pop pop cs and ja les test sbb inc and movsl repnz aaa sbb push bsf mov into fmul mov shll pop inc adc (bad) sbb adc test sbb stos mov adc xchg lret or and add or test push hlt dec fcoms jne (bad) add mov mov add mov sbb or push xchg movsl lock mov mov cmp push ret jno pop xchg mov xorl stc rcrl (bad) inc bound pop fsubrs mov inc call mov pop outsl add jle fcmovne mov (bad) jae leave lret fisub and sbb sub or (bad) (bad) mov fsubrl push push and cmp cmp sbb (bad) nop stos pop xor orb test add cwtl add jae add inc add add sahf or xchg mov in cmc cwtl add jbe out addr16 jnp xor cmp jecxz fadd pop jnp dec divb sub sub adc cwtl ljmp sbb mov js xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add jbe out addr16 jnp xor cmp jecxz fadd pop jnp dec divb sub sub adc cwtl ljmp sub mov ss xrelease mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf popa cmpsb iret push pop add mov or jecxz inc mov pop and pop fpatan push in lcall gs jecxz scas in in cmc sahf add outsl xor inc add mov mov imul imul adc or add lret pop scas lods xor call mov inc rol iret fisubrl pop lds roll xchg sub sbb add movsb ljmp fs lea jnp lahf lcall (bad) mov sbb xchg call add ret ja subb sbb jae inc and pusha jbe mov jl sub ret aad cmp repz add lds and mov xor movsl jp lds pop adc push sbb or scas sti cld in pop inc add enter aas pop ret sbb jae sbb add mov jg add cmc and data16 mov imul sti add xchg (bad) (bad) je adc or lret pop (bad) jo test out fnop dec cld das popa aaa and jmp xor push mov mov daa sbb rcrb mov (bad) fiadd jbe adc inc adc fmul std push sbb lahf (bad) jno push adc xor into jmp xor mov loope inc inc (bad) icebp repnz in add mov loope inc inc (bad) push cs xlat adc mov aam jmp adc jno mov and lock lock mov push sbb mov mov in mov xor sub jne clc cmp fisubl xor mov pushf addl cmc add or loope cmp mov cmpsb mov out lret ret mov scas in mov jae rclb mov enter sti dec add sbb addr16 and xchg in sub movzbl jo xor cli and into test inc sbb adc and push out hlt test dec ret stc cmp test cmc jl (bad) xor or (bad) dec and pop sbb sub je or push add sub fildll mov xor sbb je xor pop insb in ss lea bound jne or rcr cli dec ljmp pop and js inc scas cmpsl xchg inc mov shl cltd xor cltd mov mov mulb cmpsl sub js add add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg push (bad) add add inc add adc mov or mov imul push and cwtl push notb std in lret shlb das mov lret lcall mov and push mov test lret dec adc xor pusha clc inc add in push push in mov adc scas or xchg iret cwtl rol xchg cli sbb imul icebp cwtl mov clc (bad) cmc dec cmc push pop adc cwtl add push lahf xlat out negb loope mov (bad) inc mull loop mov xchg mov adc sbb mov fsubr es das sub cmpsb sahf or stos push js push sbb jmp xlat das loope xchg cli sbb imul adc mov in jecxz dec cld mov fmulp lods or mov fbstp mov lds sahf jmp icebp shlb adc (bad) mov aad cld leave aam movsb cmp shll mov std xchg mov jo jp or fdivrp mov (bad) (bad) or mov jns jp imul test stc cmp xchg push mov cmp xlat outsb sbb or (bad) dec pushf sub push rorb call loopne cmc pop mov insl ss arpl pop bound les mov and sbb xchg (bad) repnz add in aaa inc je arpl or push pop in cwtl add outsl adc stos orb add lods mov sti arpl movb mov or pop adc int icebp imul sub loop mov in out or outsb pop jmp cmp aas sbb lods addr16 int stos lock sbb rcrl adc sti cmp adc push sbb movl sahf and mov stos lcall pusha add mov cmp push or mov (bad) xor adc jl leave sub jb and push sbb xlat mov dec mov int ret xchg push cmp aam (bad) fnstsw lods dec lea lods fcmovb dec cmc cmp js faddl stos dec mov (bad) scas ss lods pop loope lahf sahf mov int and inc or sub mov test rorl ljmp sbb push clc push add movsl mov dec pop jnp mov cmp cmp add arpl mov sub xor and cmp (bad) or xchg dec divl xor in dec mov add push cli push into add add leave pop popa add xlat (bad) lock cli xor js inc or jmp in sahf xchg call fidivr xchg sub push xor sbb fldcw stc sbb or push inc add lret mov roll insb loop dec in int in or std push insl mov scas jl pop sub or dec mov mov pop shr bnd in mov add cwtl das adc dec bswap dec mov cld cmp scas loope lods mov mov xor sub jno xor ja cmp mov div icebp aad mov cmp std aam div inc fcmovnb add jmp adc scas (bad) (bad) (bad) dec push and (bad) idivl add mov cld fwait mov add xor inc mov cmc rcrb fnstcw add mov out fmull xor leave push or sbb loopne out sbb push or sbb sahf repnz adc dec add fldenv iret movsl test ljmp sub sbb mov push fisubr inc rcll (bad) mov pop xor test add ss add movsl adc int3 jmp loop stos stc adc rol test les out cmpsl movlps outsb movsl adc int3 jmp loop stos stc adc rol test les out cmpsl cmp or xchg ljmp dec sbb dec mov repz jle test lahf lret adc or mov xor sti pop add les loopne scas cmpsl mov mov xlat cmp sub clc xor fdivr out mov add mov repnz adc mov pop outsb dec mov fmull mov lahf test jl dec pusha jmp pop mov adc pop (bad) mov repnz adc mov pop outsb dec mov out adc mov cmp (bad) jle cltd rcrb call sbb add orl push out mov lods dec pop inc dec jns je lds or xchg nop decb xor pushl xor lock clc xor (bad) in ret mov test cmp (bad) icebp mov imul insb std mov cwtl push mov inc sbb push xchg sarb imul ret or fwait mov and idivb push sbb sti sbb add xor shll pusha clc ret cld into lock les fwait pusha pusha mov or or dec (bad) pop adc mov or insb outsb xlat std add dec add stos inc loopne scas cmpsl mov movsl lret adc or aad dec movl mov xor pop loopne mov clc or fs in inc pop and jl push outsb mov dec jb out in adc ds sub stc push mov ret pop jl fildl mov mov bnd sbb mov and xchg cmc xor fldt pop fmul fisttpl ret or mov roll lcall cmpsl mov ret fldenv dec inc test in lcallw lock repz dec mov cmpsl push jl jb (bad) or push inc sbb xor (bad) pop inc sbb test outsl pop adc adc mov xchg sbb or dec jp ret fldenv inc rol into jecxz and dec xchg and ret xor push stos inc add dec mov (bad) dec orl enter mov mov and xchg cmc xor fldt test mov push std mov imul and lods add dec push bound mov cmpsb dec cld (bad) dec inc test in dec ss pop inc push movsl out dec test inc ret jle xchg cmpsb mov lret pop mov sbb sbb add cmp mov dec sbb lods sbb jp dec imul repnz call sbb adc or jno movsb mov sub and adc sbb add aad fdivp cli imul sbb js push es out cs xlat test mov add dec in cmc sahf mov cmc dec ja xchg test lods sbb jp dec neg cmpsl mov sbb sbb add ficoml pop xor inc jle adc (bad) cmp mov cmp cwtl or scas loop mov xor push ss and and fcomip push cli push sub into das xchg push and ret pushf mov call nop rcl push test add ds push pop jp add fnop adc enter clc push push cmp stos dec ret pop lea scas jmp js sti sbb mov scas insl sbb and cmp pop pop in out sub rol add sbb gs cmp xor jg mov sbb and ucomiss ret jge ljmp fcoml fs push rcrb and cmp adc push stos push pop inc hlt in or add cs mov mov or in or pop push sub xor leave out shlb cmpsb sub push insb pusha xor out mov stos dec popa or ljmp (bad) pop (bad) rep pushf pop outsl pop dec ret dec push xchg mov sti cmp cmpsl sub stos inc loopne (bad) push flds mov mov jbe mov rolb cmp xlat or mov inc rol push popf add dec ja ret movb dec xor dec push mov in sbb sbb mov negb (bad) insb xchg (bad) in inc pop and jl jo pushf sbb ret clc (bad) mov bound mov scas pop pop je dec dec xchg jbe adc add stc push inc cli sub push and icebp ss xchg int xchg in cltd in (bad) lock dec pushf sbb ret mov repz add pop inc incb (bad) movb hlt xor or mov ror lock sbbl sbb mov cmpsb mov lret scas movsb push dec sbb repnz shrb iret xchg jno push or out ljmp in mov cmp xlat outsb das inc mov les lahf aam ret pop jl bound pop mov cmp (bad) fdiv in add and or icebp int3 rclb int cli insl mov xor jnp xchg mov sarl clc lds fs push xor cmp or cmpsb std cli inc mov enter xchg aad xchg cmp sub sbb das repnz test les (bad) sbb cmp xchg cmp lret push and ret xchg es cmp nop ds loope movb adc in add mov clc mov dec pushf fadd cwtl cmp notl add pop cs sub cmp adc and sbb push or lock xor mov jno mov jae sub cmp mov mov fwait into icebp cmp add adc movb fnstenv mov ret xchg enter movzbl je mov pop add lds loope cmpsl fwait hlt adc and ret cli (bad) cli push mov mov jmp hlt mov dec xor test add jmp mov push inc outsb stos stc adc movl adc ss into icebp cmp bsf pop sub pop push inc ret pop lods (bad) data16 and out add movsb mov inc dec push scas cmp lods adc cmp lds fs and ret cli (bad) std inc loope mov xor adc and das xchg aad add fdivp push call ficom sti mov xchg out or inc mov ds (bad) cmp dec test lea inc insl pushl arpl mov cmp jb mov ffreep repnz mulb lock pop ljmp or jl sub jecxz and (bad) pop sub jmp ror ror adc inc add iret push data16 xchg jae lock mov xchg lds sub adc loopne loopne mov and (bad) and cli pop cmpsl in cld inc sti test cmc aam mov push mov xor lock dec (bad) sbb aam inc test and fdiv xor ficom mov cmp add jl push in or add pop and xchg or iret xorl mov mov jo aam cltd mov mov mov sub pop xor xor insl pushl outsl inc dec xchg in xor test mov aas mov xor add xchg ucomiss sbb fnstsw or ret lods adc mov and imul push ljmp pop jmp lret test les adc aaa add xchg pop xor repz add in bound push mov lret jnp leave mov je add daa jns xor dec stc cmpsb mov pop push push and ret cli (bad) (bad) pop mov adc dec rorl xlat sub out xor pop inc call shlb into iret ficomp call roll mov out inc popa adc repnz jo repnz lret adc or int3 mov mov cmp xlat outsb and lds mov ljmp inc aas nop rcrb shl fcoml fs jmp mov xor and sbb push cmp roll mov push sbb add ror movsb (bad) inc adc dec jnp in leave mov loop rol into in adc adc es fwait xchg mov inc scas or (bad) in inc pop and jl push inc ds lods ret xchg in cld into lret jns aad xchg push and ret xchg es sti into jecxz inc pushf adc sub adc fld mov loope repnz or (bad) rcll push xchg sub je (bad) shrb mov scas pop pop dec cmp mov adc lret sbb mov loopne stos mov cmpsb dec adc sarl push sub fisttpll xlat data16 leave es aad int3 addl out or xlat lods (bad) in repz loop sbb sar test fcmovnu cld cmp leave jl dec jge in fld (bad) dec inc mov adc mov jbe scas add pop dec pusha adc fldl lcall cld les scas shl test imul lock add xchg stc lds fs push in (bad) das dec or cli (bad) testl movsb insl daa popa mov adc push ja add loope push repz (bad) fisttp xchg dec jbe add icebp xor arpl (bad) fistpll mov adc cwtl pop push std movsb and imul pop out mov out in ljmp test in xchg sbb sbb (bad) out mov aam stos xchg les dec adc cmpsb nop lea push mov mov ret fadds or sbb and mov mov xchg fsubl xchg pop xor out gs hlt in or dec and xor icebp insb insl mov push (bad) jmp mov inc scas mov inc rol into fildll jle cmp dec gs push lds fldt (bad) cli outsl loopne inc mov mov into imul cmp in pop add loopne push sub aam mov mov incb das cmp in (bad) aas mov lock hlt mov dec jecxz push stos negb mov xchg xor bound mov cmp push adc lds xchg xor bound inc std aas in sbb mov and xlat outsb sbb or mov pop add imul sbb repz mov cltd xchg dec jnp mov repnz out nop or pop mov pop cmc adc rcrl push mov push imul cmp inc (bad) xor xchg xor cmpsl sbb push mov cmp xlat outsb xor xcrypt-ctr cmpsl sbb sub fmul adc mov cld ljmp xor xor insb das xorb adc pop jp das mov jnp jbe cmp stc rclb icebp rorl scas cmp iret adc mov cld ljmp xor xor or aam cmpl or mov mov add push stc jb stos test inc inc xorb insl cmc scas inc (bad) loopne jae test leave insl cmc scas test lret or mov mov negl push fild jle pusha and (bad) jmp cmp insl inc scas (bad) mov cmp in sub jo jne lret add mov mov push mov and jbe push fmuls inc mov push hlt (bad) cs out jmp loopne out push lods stc sbb in push lret out inc imul cs xchg lcall mov pop fdivr sub sub imul mov ret add lock stos jle (bad) jmp inc pop aaa dec lock mov sbb aas add (bad) sub or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf ja inc fcmovnu cld (bad) ss in sbb lock (bad) testl push ret or pushf (bad) cmp les pop (bad) jl cmp es fcmovnb sub les pop (bad) jl cmp adc xchg pop fildll hlt mov mov notb mov repnz ret aaa ret dec lea push fxch bound divl int inc mov int3 decl scas add mov add mov leave std dec jb mov (bad) js (bad) movsb pop rclb cli mov (bad) js (bad) movsb push test xchg sbb push out movsl mov loope mov inc in test add mov fdiv inc xchg in bound sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add push push hlt push mov (bad) insl xor add lea cli das mov divl and call cmpsb in mov and xchg (bad) fcompl jno test xor fnstcw inc push out je xor fadds mov xor push not clc xor pop add (bad) les in mov enter (bad) jle jnp dec inc push xlat loope fmull pop fadds lds sarl inc lds add dec or dec test mov cmc pop inc pop daa jns xor dec fisttpl adc mov push lea add aam je jns pop sbb xor adc or jns mov dec adc jle xchg mov rorl dec bound mov add inc lret and (bad) minps (bad) insb add ds rcr stc clc or add xchg (bad) gs cltd pop or jp je sbb ret pop push jp jmp mov add dec add call imul in pop imul sub cmp std aam imul inc notb inc insl pushl cmp inc cld out ret sub (bad) stos popa in fldt lods push not mul jp xchg shlb inc push out xchg xor test ds sbb into stos inc mov or out xchg cmp les push das repnz mov push dec popf push cmpsl sti jecxz push or mov test add mov cmpl cmp (bad) lock push std insl ret loopne (bad) sahf dec (bad) pop sti repz inc faddl faddl jp inc sbb sbb adc insl jp jnp mov sbb cs xchg jle mov lcall lods adc iret out push stc cli mov stos dec cmpsb push mov fstpl clc push test xor xchg mov cmp adc jmp fistpll out inc popa adc addr16 call inc or and shrb adc mov mov in test imul out inc movsl ret xchg in test imul out inc insl hlt icebp lret fdiv cmpsl sbb xor fcomip xlat (bad) dec add inc dec lea dec add aad shlb mov sbb push lcall (bad) cmpsl mov jb and in adc jg pop adc pusha (bad) xchg pop nop jmp stos mov jge sub dec pop xchg jmp stos mov out cmp cwtl add sahf imul call sbb add dec jb testl cltd clc xchg jmp dec xor or pop cmc add repz add jg xchg jmp pop lret repz test jg icebp mov pop enter mov repz lret mov push push (bad) in inc pop and jl insl mov adc pop addl out xchg fld lahf js ds ljmp clc out mov stos dec push out movsb stos push mov movl inc xlat cwtl adc enter lock mov sbb cmp rcrl add repz adcl push je adc scas out cmp stos iret out mov outsb mov pop inc pusha xor pop push lods mov xor push cmp add cli (bad) adcb inc sahf (bad) adc pop push or dec sbb push sbb arpl pop xor cmp les sub jbe mov cs scas scas pusha jbe or mov jle push mov loopne pop jo inc jg icebp lock cmc (bad) aaa pop cmp cld jae mov push out xor cmp add mov push pushf and leave inc clc sub or ficoml jns xor or sub add int jmp mov rclb dec or add ss out mov mov add mov adc mov mov aad inc scas add sub sbb fnstsw les (bad) (bad) jno mov inc out ficom stc dec or lock xchg (bad) into leave sarl ret mov pop mov mov popa pop addl mov aaa loope incl imul daa adc insb push xchg sti adc mov mov aaa jecxz aad test lret cli xor pop push aas (bad) lret pop retw sub enter fistl mov pop fbstp or (bad) (bad) adc fistl add xor add xchg xor mov cs push leave mov cmpsl lcall xor iret aad arpl or add pop outsl jle mov sbb stos nop mov loopne jne adc fsubrs pop mov sub cmpsl shrl rcl (bad) sub lock mov cmpsl xor jnp aam mov icebp mov loopne in stos nop mov loopne xchg movsl test ss sbb jnp loopne dec int3 sub test sub mov xor test pop mov repz ret adc inc lea pop sbb add lock push ljmp push add aad mov inc jle push inc add mov loope xchg fld mov cmp sar bound cmp iret adc mov cld ljmp xor xor adc inc add add mov test sbb or rorb int3 ret (bad) clc outsb mov sbb jmp je sub cwtl push ljmp aad jnp mov push pop ja jp dec add lahf add pop xchg mov lds mov push mov bswap and xor cmp fdivr scas mov and pop adc movsl lods aam sub mov stos fstl mov xchg shr mov mov mov das pop mov inc call ret dec sbb add (bad) mov fmul adc mov lds xor sbb es ds cli mov xchg inc icebp lods sub adc cmc jecxz jle mov sub jae mov loopne adc jg pop pop ss leave shrl jp fcomps ret addl flds js pop pusha xor pop lret int jge xchg sub and push pop inc out insb bound jl sub mov iret incl js mov in lock orb cmp divl (bad) cltd xchg xor orl ror add lds mov add lahf in aad lods pop lods xor push xchg (bad) into enter hlt mov data16 ret add (bad) scas push mov icebp and jne in fld mov cs cmc sub dec lret adc or iret (bad) xlat (bad) pop jbe,pt in loope call movl outsl sub insl int3 and xchg inc mov dec add int adc jae xchg push adc adc scas dec sub int xchg loop xor in cmpsb inc shrl rcr mov or mov pop push mov cmp xlat outsb and pop mov pop xchg sbb or adc or add mov lock add (bad) in and enter xlat inc test lods repz fadd mov adc or das xchg hlt scas and push ljmp incl adc insl stos idivb ret cmpsb mov jbe std xor pop (bad) divb fxch repnz inc cmp mov cli rcll sbb and jl sbb loope xor mov xor or into push pop and jl pop mov repnz dec scas rcl cmp ret stc iret cli outsl repnz aaa and aad push out inc ds (bad) mov bound sbb and sbb mov xlat adc pop xor inc loope fadd cld mov pop pop sbb lret stos mov mov ja xor aas (bad) sub mov repnz dec xchg in lods jne pop jae and dec xor sbb fnstsw les push rcrb inc jmp jp imul push add cmpsb lods (bad) std add arpl cld lret adc or (bad) mov jl or ret repnz pop push icebp inc test jle cmc js enter stos jmp pop inc jae mov dec push pop push scas leave outsl adc sarb jns aaa out int3 sub fisttpll push jb jnp cs aaa sub push jg sbb addr16 cmp and fwait pusha pusha mov mov movsb mov push or cmp in mov divl mov test insb sbb pop call stos sub jp add fmuls sbbl fcompl dec adc mov mov ja pop mov xchg mov inc inc (bad) daa and mov add sahf or call inc lods mov (bad) out ret xchg dec aam inc fcompl repnz incl fwait cwtl mov in xor dec aam inc fcompl aad push neg scas test add mov stc jno mov pushl loopne ret and adc adc lock mov fmull mov lahf cld in inc addl mov cld push mov int3 leave or push (bad) add mov in sbb jg sar stos sbb insb xchg (bad) in inc pop and jl pop push (bad) add mov in sbb jg sar stos sbb insb xchg (bad) in inc pop and jl pusha push lea cld jle pushf out sub adc rclb jmp fdivp cli imul out gs or rorl rcl push test add cmp add cli aas lret jbe ret sub inc loopne out xor fwait out mov aam loope sub sbb mov and rol inc pusha pop xchg (bad) fistp xchg mov cli movsb mov testb xor push addr16 lret leave clc mov fmull mov mov cli dec sti (bad) cmc cmc int3 leave and add mov mov mov loope pop push adc in or jmp push jae sub out cmpsl inc leave jns in xlat rcrb jns xor push adc out sbbl dec sbb jge cmp test or add xor jbe adc ljmp mov hlt pop pop (bad) les test jae jmp add movsl out jae xchg fadd add xor mov and ret cli (bad) icebp dec or jp das imul cmpsb mov lret pop dec jge xchg loope enter and push les add je fisubrl scas pop xor (bad) mov ss add rcl andl pushf lret sarl mov mov push sbb cmc mov mov push mov sub in push xor (bad) sahf nop test sub imul ret lret inc xor sbb jbe mov mov sub pop in add xchg in daa aam sub call in sbb cmp mov add adc inc inc push lret leave cli and aas stos das pop sbb mov mov int3 cltd add add and jl push lcall movzbl cs hlt scas add mov test movsb xlat aaa insb dec xor or adc leave push inc push das adc sub cmpsb daa xor push lret leave sbb neg scas out nop daa aam sub call push dec jl shl test xor inc add cs test jg dec lock pop sub repnz fwait stc pop clc cmpsl cs icebp xchg and mov imul lock sub push lret add pop adc (bad) fistpll int3 (bad) das add fucomp roll iret mov sub imul roll sub cmp mov mov sub inc jno xorl enter mov pop daa jns xor push push (bad) mov std cmp mov pop sbb subb jecxz sub (bad) mov sbb imulb jl in or sbb mov jb add mov lret out inc mov roll rol xchg adc lcall js jmp sbb imulb jl in or sub and ds lds adc pop sti test add lds iret testb xorl insl pushl mov cmp bound movsb stos lods adc pop sub jae loopne cmp (bad) cmp ffreep dec xchg sub push rorb mov lock orl loope inc les sbb in test pop out pushl loopne mov sub jp (bad) jl jecxz popf sbb mov and sbb ror test les add pop divb push icebp mov cs repnz inc fwait out pop iret xchg pushf aam sub adc adc xor pop jo,pn sub stc int cld mov inc or lcall sti adc mov mov adc cli dec fisubr inc insl pushl mov cmp bound ss (bad) hlt cmp add xor push lock repnz and (bad) jl fsubs leave cmp push (bad) adc dec pand fadd sub jecxz or add push scas mov clc mov xor mov les lds fcmovu add sbb mov push ljmp add cwtl jp cli daa jns xor std sbb idivl lcall jmp jae or insb das inc out popf cli inc aam (bad) inc mov out sbb push or sbb loopne out sbb mov and add and (bad) mov cmpsl sub stos cwtl push add or adc ret and int3 icebp mov mov mov (bad) div cmp int mov mov (bad) jb rcr mov or popf rorb pop add inc mov push xchg fwait shl test adc sbb in fsub pushf adcl jmp xorl ret sbb jle pop sub (bad) hlt xchg jl and dec aam or push das cmp and je dec call jb jbe jnp pop xchg cmp jne or pop in inc sbb int orps inc and (bad) pop std inc sti dec pop pop sbb push imul xor adc pop imul and pop lahf cs or arpl jge iret mov or inc decl outsl pop jp inc ljmp inc jmp lock aas xor inc jecxz movsl mov mov mov inc fsubs mov dec cmp mov dec add pop mov fbld js jns dec das sbb push rclb add mov mov sbb pop fbstp popa pop pop sbb mov and pop mov into lea into popa ds mov mov xor xchg xchg jge xlat bound pushf sbb inc xchg cmpsb iret or add fdivrs add sti push mov lods ret ja xrelease mov in cmc cwtl add sahf or xchg outsb jnp pop fnstsw push popa cmp cltd test in andl add xchg mov lret ljmp fwait mov mov sahf mov pop stos loopne dec (bad) aaa jno mov xchg nopl pushf daa or stc clc cmp es mov inc dec xor cmp xchg sti clc inc cmp sbb pop pop push push mov out es pop mov frstor adc movsb loopne sub aaa add xchg pcmpeqb push icebp xchg loopne inc mov cmpsl std repz repz not mov js add add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg xchg cmp add jns mov sub (bad) pop outsl xor dec cmp inc or in sti cwtl add lahf or lods jnp inc inc mov in adc or mov jnp mov negl repz sub xchg icebp or sahf adc (bad) sub mov out cmc lahf add push or insl sti mov in vmovups xchg sbb xchg jnp inc jg repz negb and pop or push dec sbb push mov sbb or dec dec sbb leave scas js fistpll push xchg leave lea orb scas js xlat inc adc dec or inc mov aaa add or xchg cli xor push dec jae scas adc fwait or mov xchg mov inc jae idivb ret out leave leave pop mov lock add sahf or subl mov adc xchg or xchg mov adc pushf stc cmp pusha js jge in sti addl inc jge in cmc pushf clc xor add jnp jle repnz cwtl add or xchg jo inc jnp imul cli addb or subb jg jle icebp in stc xchg or lcall inc jg repnz cli xchg or xchg mov adc cltd add sahf or subb js jge notb lock add lahf add test jnp inc jg icebp adc addb adc test jo inc jp out hlt addl inc jnp cmc out sti xchg or lcall mov cmc pushf clc xor add js jge imul negb xchg jnp inc pusha mov xor mov sub mov cmp inc popa xor adc scas or xchg mov in cmc sbb xor adc adc adc dec enter sti js add add cmp xor and sub xor lock cmp roll icebp in adc dec and cmp xor lock or xchg mov insl lds adc jno mov xor jnp shll insl cmc sbb xor cmp shll in in and mov mov subl mov xchg mov insl adc dec and or in cmc sahf push aas adcb xchg mov add xchg push icebp mov jns mov lcall sti (bad) sub (bad) out iret loopne xor inc inc dec inc add or sahf push jmp inc add add inc inc dec inc jnp in in push aaa orb xchg jns mov std sahf push aas orb subl addb xchg and xchg jns inc add push aas orb mov mov out std cwtl or das popa inc mov in add sahf or xchg iret in in add inc inc dec mov std sahf push aaa addb mov jnp mov iret out cmp jnp mov lcall stc (bad) das popa inc inc add adcl jnp inc adcl je stos add icebp in cmc clc adcb jae sub jb cmc cwtl add push or xchg mov in cmc clc add or stos add jno cmc cwtl xorb es cmpsl lods sbb in jbe add push sub lods jnp inc adcl hlt cmpsl sub inc xorl jae sub jb cmc cwtl add sahf or xchg xchg jno jne add addl jns jle jb idiv adcl jnp inc (bad) xchg repnz addl cmp mov in jbe add sub cmpsl sub inc (bad) xchg repnz sahf or stos add jno cmc cwtl xorb sub cmpsl lods sbb popa xorl jmp xor idiv in std lahf add sahf or (bad) lods mov sti scas std fdivr inc xchg xrelease div (bad) icebp fnop addl js xor clc addl mov scas cmc (bad) test cmpsb js add add dec xrelease clc sti adc lcall lods cmpsb jo or add repz icebp lods cmc fdivr inc xchg repz lods cmpsb jo mov repz lcall mov jo or add sahf or test clc sti sar fsqrt inc xchg repz idiv out stc lcall mov js cmp add or shrb icebp in cmc cwtl clc addl cmc or sahf push or inc aad int cwtl adc scas push mov or fimul mov jge dec mov xor sub cmpsl cmp mov in (bad) mov push clc addl cmp push outsb dec add mov ror mov ret inc insl mov add fimul insl sbb add adc scas sub daa insl pop cmp jne (bad) mov push dec mov xor sub cmpsl cmp mov int fcom rcrl jnp mov xor sub xchg aad in cmc fadds jno or addl (bad) mov push js add mov jne add outsb dec ret pop jge enter shr pop cwtl loop mov jg inc add add dec jae dec pop vmovsd xor jnp inc jg repz cmc cwtl add push ja dec add loop mov jae dec jg repz mov jg inc and add pushf adc (bad) sub dec and rcll or mov mov jmp mov jae dec jg jecxz lcall lret push jg inc jg shr adc adc mov jg inc and add pushf adc iret dec jae dec pop vunpckhps cwtl add push jg inc and rcll or xchg jae dec and loop mov ja dec jg repz sahf adc (bad) sub inc popa and add or (bad) jno test xchg js xor xor inc inc cmp sub push (bad) push pop inc dec add js dec (bad) sbb xchg insl sti mov sbb mov fstpt std mov mov mov inc xor add sahf or xchg test aad add jle push lahf xor mov stc cwtl add (bad) sbb (bad) push pop js inc xor inc sub lret test movsl xchg in xchg push xor inc inc cmp and lret mov in mov inc cmp aaa (bad) jno mov sbb jle push xchg js inc and add (bad) sbb lahf jno mov std mov inc cmp pop inc mov cmc cwtl add sahf or xchg pop pop ret mov and negb xrelease mov inc mov or xchg mov in daa (bad) divl sub inc add add (bad) jbe add mov jle icebp in cmc cwtl add sahf or xchg aaa jb negb xrelease cmp lahf or xchg mov in int3 jne mov push mov inc add add mov adc ret jle icebp in cmc cwtl add sahf or xchg jle fidiv push xchg negb xrelease mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add pop pop cs inc mov mov popf popa mov ja add cli mov dec jge mov xlat nop add (bad) jmp xchg cmp mov les out sarb aam add mov cmp jns push add clc inc pusha xchg dec je mov aam add xor fbstp sub jnp jo mov in push adc es test push mov push push push push add xchg dec arpl push loop add and stc mov mov pop push mov (bad) dec aas xchg xchg mov xor inc and aam jp xorl xchg mov xchg jbe jg adc xchg enter xchg negb add sub inc fistpll add fistl mov (bad) push mov xchg es mov and cmp inc enter xchg ljmp or jnp inc (bad) mov xchg negb or push leave jle icebp in add inc int3 or ds or push xchg push stc sti mov sub inc xchg lods out xchg scas lock pop mov lret leave in add sahf adc or mov mov aaa xchg adc dec cmp add push jecxz mov inc ficom daa jae cmp mov lods or ljmp cmpsl fnstenv cmp stos les mov cmpsl cmp xor aam lock negl pop ss mov (bad) (bad) je or adc dec cmp mov inc xchg les xchg jo mov shlb add cmp ret (bad) sbb cld or test xor xchg in pop pop test xor sbb loop mov xor jl ljmp int3 xor jecxz ffree cli loope idivb cmpsl mov ja add dec orl push in les lods push not fwait hlt into in xor cld adc cld inc out jo mov jmp inc outsl sub mov cmpsl insb rorb mov sub (bad) in xchg push add push xor pop in or pop cmc dec mov jle into mov mov cmp jb (bad) cmpsl test addl daa inc ss (bad) in xchg push add mov (bad) in mov fmul xchg mov cmc lods fstps pop sub push mul sbb ljmp int3 xor sti add (bad) dec cs sub sub push and mov dec inc imul jb repz scas xchg adc jp movsb pop repz pop mov sbb pop fld (bad) sbb cld or mov adc sub pop cmc jmp ret lds je cwtl (bad) in mov add pop and push les popa xor push sub jecxz inc mov pop fistp pop inc mov stc jmp pusha fwait testb pop lret sub ret jb hlt jmp cmp dec add repz idivl in aas cltd in enter sarl or cld test and mov or and push loopne mov (bad) xlat push sub push add push flds call repz outsl fcompl mov aam mov xor outsl fcompl ret ror out sti xor out push cmpsb repnz into jp push sahf lret icebp dec add sub or (bad) unpcklps ret stc push icebp dec mov sahf push cltd test or in or (bad) cmp dec ljmp mov pusha (bad) loop addr16 lds xchg ret fnop repnz fs outsb jmp scas aaa push orb dec xchg enter out mov pusha (bad) loop addr16 lds xchg ret fiadd les scas das (bad) mov addr16 lds xchg ret in mulb pop repz dec jle dec subl cli aad xsaveopt movsb pop lret adc mov aam (bad) scas xor xchg out out sti sbb bound or insl push jo and sahf adc lds pop xor loope imul insl push push sti sbb pop flds iret pop lret push mov mov add icebp inc decb sbb mov in dec sbbl adc mov xchg push cmp test clc adc fnstenv add push lods ljmp nop adc mov shlb incl jne cmp mov and fwait scas fwait psubsb pop mov (bad) xor mov shrb cmp movsl mov add (bad) sub sarb cmc mov mov clc mov inc jno jbe mov or adc push adc (bad) in cmpsb hlt daa aam pop push std in cs fmul xchg mov loop xchg aad xchg movb cmp insb fimul sub out rcll cmp mov aad pusha and adc fmul xchg mov out mov popa movsl mov jle cmp mov adc dec popf in mov popa mov dec bound and mov out mov bound stc pop jb clc daa lcall jg and sahf lods dec cmp js in scas mov xor inc inc xor int3 das scas scas or lods stos xor sub ficompl mov fsubrp xchg ret add fisttp rclb shrb movsb in mov stos fcomps fstpt cli push leave lock mov (bad) into gs les sti in test pop pop pop cwtl mov ss scas mov hlt imul cmpl test inc and mov jge ljmp add sbb or cli dec sbb add lock mov mov fsubl int3 xchg dec xchg call and push stc push repnz movsl mov sbb into sbb or repnz push fdivr sub stc mov jl jl pop xchg stos andl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov adc aam (bad) clc xchg repz sub dec push adc xrelease mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg xor fistl mov sti cwtl mov lret std jle jbe pop enter or fs jp inc pop dec push hlt scas pop jns inc pop pusha ret test rclb add mov in cmc sub or dec ljmp dec lret in cmc cwtl add sahf call js incb clc inc xchg xrelease mov in adc or (bad) lods mov repz pushf clc xor sub mov in cmc cwtl pusha xor or xchg jnp inc add test mov jnp mov lds xor jnp inc add mov enter sub lret cli cwtl add sahf or xchg mov in cmc cwtl xorb or repz stos sub sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sahf or xchg std popa push cmc cwtl add sahf or xchg mov push rclb test rol dec jnp mov negl xrelease xchg icebp or pop mov loop scas aaa lds mov out push cltd push cmp pop fs add add sahf dec repz insl popf (bad) push test inc push xchg clc cmp stos fs add add sahf or xchg cmc jno mov inc xor jnp inc add mov xchg mov in ljmp frstor jnp inc add movb aas sub mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc in (bad) inc dec adc (bad) sub mov adc cltd nop mov arpl daa add in or jecxz cmp ja (bad) in pop popf push pop fs ret sbb cmp mov out xabort xor push jns insl mov testl push jns nop mov jmp loopne rorl sbb add sahf or cmpb fidiv sbb or sahf (bad) jmp pusha cmp pop ja xchg dec negb sahf and push and push xchg sbb notl xchg (bad) xor push xor es jge gs lods pop cmp push call sarb mov and jae bound and xchg sub jp ja mov jmp lock dec or mov mov int3 jno add mov inc lds cld jmp icebp adc xlat xchg dec sbb adc sbb mov push xor sti pop in (bad) inc dec or mov mov int pushf add mov sbb shrl shr cmc cmp xchg es push outsb inc mov aad jecxz and test das jmp popf pop in cltd out clc add sahf pop ret adc js add lahf xor popa mov jmp lock dec sbb xchg sub mov (bad) jg add sbb sbb bound jmp inc sahf adc (bad) cmp xor mov sub xchg dec std lods and mov das cmpsb xchg std cmc xchg add xchg es stos arpl xor out movl adc js add lahf xor adc sbb xchg gs jmp mov aaa cmp jge mov add mov cmp jmp xchg cwtl cmc aaa xor out xchg loopne or lcall and in lock (bad) psllq jl xchg jg add sbb jl xchg jg sbb sbb jl xchg jg xchg out push (bad) sbb jl xchg jg hlt push aaa push les mov xor loope mov in in shrw adc addr16 xor xor jmp pop jns stos and subl movsl cli push jg push sub pop test lds mov out adc pop das mov push jnp sbb sub cmp (bad) in sti dec mov jae mov fcomip aam out add mov out inc jns and mov mov mov call icebp adc int3 es xor fisubl enter sti jle xchg lcall cltd fwait pop add mov add or icebp xor xchg push add pop ret cmp jb jb insb enter clc pop aam imulb lea lahf addl push cmpsb fisubrl mov adc pop jge or mov xchg jmp cmpsb inc jmp mov adc cmp scas inc out popf imul out lret xor pop cmpsl sub out lods cltd mov arpl add xor ret mov pop clc jmp cmp (bad) stos outsl mov sti aas inc inc adc ret jnp dec jge loopne jo int3 inc pop dec mov mov pusha fs adc in dec cmp (bad) stos outsb mov int sub xor imul push sti ljmp inc sbb mov iret hlt sbb stos jno in shlb mov inc mov cmp inc dec jae insb mov adc mov inc mov imul loopne clc xor jle clc pusha je popa mov mov adc adc mov test mov and jbe xor mov in mov mov adc in and cmp and decb faddl lds les dec push (bad) call adc lret push mov stos out mov dec dec xor xor test dec je jno push clc stos sub jp loope ret mov or mov in aaa or in out mov or in cmp in das and fdivl jb pop lret mov out mull pusha jbe pop (bad) jne (bad) decl mov mov es imul jne sub ficom into inc cli ret test adc test or adc out mov mov adc lock lds lock scas inc cmc out jmp mov xor sbb leave paddw insl sbb pop in mov clc xlat sahf xchg lock cmp mov (bad) mov add mov mov sub test adc cmp popa mov adc ljmp enter mov and out repnz bound add add xor sbb cltd jbe sar mov mov sbb add sbb xor fmuls cmp into loopne and mov and pop aad ss (bad) shll pop gs jecxz cld pushf rolb je mov adc rclb sub repz xor (bad) pop add fstl in cli sbb inc cli negb faddl pop cmc testb adc cmp mov add jno cwtl das jbe test in mov or aaa cmpsl pop in out dec jno or clc sti jmp push data16 lods and fildll push bswap cmc fwait cli ds add dec idivl push xlat stos loop dec lock test test and jmp xchg cmp sahf jp xor adc sub mov or mul xchg out movsb imul or pushf cmp outsl not mov xor push (bad) mov mov bnd das enterw lds mov mov push or xor stc outsb jmp adc std push insl sbb jnp mov cli in loopne sub repz hlt out cld cmp cs repz push push out xor aad ss adc loope mov lret data16 push push out add dec lret jecxz js daa pop mov inc jp aaa mov out mov jg mov inc xor dec adc sar pop mov mov dec jecxz ljmp dec fs add push push xchg ja mov sub mov add adcb mov add hlt cmp mov jecxz out clc add sahf pop ret adc inc push add adc mov adc mov (bad) dec test ret adc js add adc dec fs bound jmp inc sahf or mov inc cmp shll cmp mov das mov add xchg add ja mov jmp and xor xor mov add or outsb mov adc inc rcr das mov sbb xor xor mov or mov push mov jns push outsl clc pushf (bad) xor enter xchg (bad) xor add xchg add ja lds pop xchg (bad) sbb (bad) push dec xchg shrl mov cld aas xchg add ja mov jmp lock dec sbb xchg sub mov loope test sbb dec fs bound jmp cmp cmp popf scas pop (bad) movl adc js add adc lcall sub lcall push data16 mov sbb lcall inc sbb (bad) xor add es rcll jb add sbb mov cmp dec or push insl inc lcall mov test or dec sub dec out dec inc xor jg dec add dec pop in pusha pushl bound inc jg popa jns in push nop daa jne stos repz adc jbe loop test or insb stos inc add out push mov les cmpsb xchg std cmc std mov lret sub mov mov loope jnp inc add push jb loope lret ret mov add sahf push repz pop add incb sub in and popf push xor push repz xchg push cmp or js add add sahf or subb repz cmc lcall sub mov out cmc cwtl add push jmp inc add jecxz insl push aad mov xor mov sar clc dec shrl fisubr repnz loopne jmp pushf fcomi push dec lods cli jp test out inc add jp call test (bad) aas sbb out mov out outsb push mov inc dec inc add ljmp jnp xchg ss or or push add test flds jge jle loop cli enter test mov or call xchg jp push popf xor mov jge (bad) in adc lock cmpsb sub jae (bad) stc clc lcall insb add cld or loope gs push adc add negb out (bad) stc cmp jns sub fwait stc loopne push sti mov popf les dec pop repz ljmp push out inc addl psubusw inc pop jnp sahf stc loopne cld or mov mov xor add js out cmp jbe hlt adc push test inc or mov xchg loopne cld shlb add aas cmc imul fistp incl shl test aad push test in fistl inc hlt testl mov mov (bad) or jl xlat decb ret xchg ljmp std push mov out paddw std or push dec inc and fcomps icebp sub pop inc or pop xor jnp inc jg repz negb decb jg icebp in cmc (bad) clc aaa andl inc inc jle repnz sbb inc repz add push mov adc jns repnz push pushf jecxz cli inc sahf adc xchg and ds or out ret scas or repz mov adc test out sbb mov mov mov negb sti lds dec inc pop jl repnz xchg or dec jmp sub jnp jle repz cmc fild jle cmp test js sarb jle add sub ljmp push xchg xchg out cmc add or js jg jecxz sbb sbb xlat ss cmp jg orl jb call jmp clc adc inc call cmp jl bnd cmp cmpb lock inc inc jle push int3 loope add sahf pop repz xor pusha cld sbb jle add mov cmp add or mov (bad) js jg xchg scas aad add push cs dec pop jno add popf ljmp ljmp mov adc test adcb add add mov icebp adc fiaddl cld sub icebp cmp cmc fcoms dec das jg jle cli daa lock dec xchg sbb push outsb mov dec js pushl out repz or int jle mov add roll (bad) popf dec in ds sub cld jle loope (bad) (bad) std dec jne rep dec sbb mov push mov gs sub js add add push mov insb lahf mov push repz fdivs mov sti incl int pop std lods and sahf or out (bad) mov popa lds cld jmp xor jp fdivp xchg in cmc in (bad) push test xchg cwtl push mov add jecxz lods mov test inc add add dec jnp inc imul adc sub dec stos fs gs mov gs push dec std dec lods (bad) and sahf add pop pop out dec mov push cwtl add cmpsb out and data16 fidivr in cmc in (bad) insl pop or pop xor mov add cmp hlt inc movsl in xorb sbb test in into ja fldl jnp mov out cld xor cld or adc out cld add sahf stc sub repz into push or cld outsb pop sbb xor out dec mov pop cwtl add mov xchg jp fisttpl add sub xor pop mov aad mov and xchg cmc sub or push jnp mov imul mov sbb decl fcmovne enter or mov stos xchg test sahf ret lret out sarl sbb fdiv lahf mov inc into pop push cltd in cmc sbb jmp dec in push imul aad (bad) cmpsl jmp push test pusha inc add add mov jnp inc jns sub xor dec mov and sub cmpsl or dec stos cmp adcb xor mov or cld dec dec push cwtl add pushf pop pop int3 fadds pop (bad) cmp in pop rorb dec fistl out mull or inc add add jns jnp inc ja adc lock cli mov gs lahf mov add in add sahf pop repz lcall sahf inc loopne push fstpt in cmc popf push jp jl movsl push push add (bad) mov xor js add adc sub mov jnp inc jg js push jmp xrelease rcrl push or xchg mov or mov xor xor test jge cmc cwtl add sahf inc loopne push mov icebp in cmc popf push jp jl sbb add (bad) mov mov js add adc dec adc inc jg js push cmp jmp pop xrelease rcrl mov mov mov aad xor xor test ja cmc cwtl add sahf inc loopne push mov addb push jp jl dec push sarl repz mov scas dec js add adc arpl ljmp js push adc jmp jne xchg rcrl mov sub push xor xor test add sahf inc loopne push and icebp in cmc popf push jp jl xchg shlb mov repz mov into pop js add adc jno cld sub idivb push push pop lahf test inc jp rcrl mov or xchg mov push inc (bad) pop add sahf pop repz xor cltd cmc cwtl add sahf inc loopne push push inc sub popf push jp jl mov add (bad) mov pop iret js jg pushl mov incb pop mov hlt xlat movb sahf fs cld ss adc repz stc cmp (bad) mov inc jg adc popf int subb push call add jb imulb fs (bad) stos repnz testl inc jg jmp sti lahf add gs subb mov xor jne xor jns or repnz negl stc addb jp cmp inc jg in clc pushf clc (bad) je std test les lock out cmp cwtl jo (bad) out repz jg push repz lret mov sti xchg clc push sub decl mov mov sahf cmp idivb fs (bad) jge out icebp mov xrelease jns inc add incl std mov mov fistl decl sahf inc push stos ss mov stc out xor repz dec inc inc add add sub mov or xor imul bnd dec repnz test jmp (bad) stos jnp jg add push sub clc or pop or sahf xlat fsubrs jp ljmp cld nop test jns jg xor sahf add popa mov test pop ljmp inc xor or ljmp jmp scas cmp jg push inc lock add mov sti test mov or sahf mov inc div mov hlt pop xchg cli lds sbb negb incl jle repz pop or sahf xlat fsubrs jp ljmp cld nop test jg add jmp sti cmp subb add mov not fisttp sahf mov inc div mov hlt pop xchg cli lds call aaa xchg pop incl jle repz out xor jp add imul std aas std mov lahf mov outsb jge sahf add mov incl or push add sahf imul sub call repz repnz test adc stos jnp jg shrl lahf add je test mov in (bad) out xor fs je in icebp lods cmc sbb cmp add push inc lock add jb incl or or sahf add sahf cmp or repnz mull fildl fiadd jg jmp lret cmc test inc push jns inc push ss jo imulb js jae std out mull fildl fiadd jg jmp lret cmc test inc push in (bad) out xor fs jg notl icebp or enter pop scas cmp add push pop hlt cltd add xchg incl or and xor aaa test in or add daa xor cmp jbe lcall push adc std inc adc pop mov pop into sbb lret sub flds incb sahf push sbb gs adc sub mov mov mov adc jg mov pop mov xor push adc decb or push push ss loop insl out xlat add out xchg adc inc lea pusha jl mov push mov xor push lods pushf js or and cli jnp call je dec stc jg mov dec ss cwtl leave add ds aam adc xor inc mov (bad) cld inc clc ret popf pop pmuludq push clc bnd push mov inc adc inc out dec mov loop add xor and scas mov cmpb cld adc sti xchg orl stos add mov pop mov xor push lahf loope push or and loop cli jb cli jle jmp outsl addr16 mov mov adc out add xchg lahf repnz cs push adc rcl rorl mov push les (bad) push push jbe pop idivb adc xchg pop xchg cmpl xchg pushl mov cltd add sti or flds jbe xchg xchg ret push jle adc jle call push adc test mov out push xchg mov popa or aaa stos jb cmpl sti or inc jne add jne cmpsl add (bad) test sbb or and mov inc mov push add sti fldenv adc mov mov xchg stos jle push fs fdiv cs xor popa bound adc inc or pop stc gs (bad) dec in inc adc dec add cmp add shll adc mov add lret sbb pop daa notl dec pop sbb push lahf icebp aam or jb,pn and push and and sub xchg dec mov clc clc push mov sub (bad) (bad) aaa xchg push inc mov and in ret test adc int3 mov aad stc enter std clc jmp test out jo jge push pop (bad) negb sti xor jnp cmp mov inc iret mov lock pop xchg mov popa add cmpsb or hlt cmp in les stc incb adc sub jo fdivs mov aaa or cli clc pop inc (bad) notb mov insb jp in adc (bad) jmp push hlt mov cs ja jo or lods fiadd mov or push (bad) xor shrl (bad) pop jp lock cmc mov mov cs mov div popf stc fcompl cmc movsb scas fiadd loope divb sub clc or push push sub movsb jno push incw inc xchg push pop inc adc add cld ds fcompl in mov push stc pop (bad) repz push iret js repnz divl pop pop inc mov sbb xor in push scas fiadd cmp test incb ror pop jp repz clc push insl mov xlat aas movsl or pop dec or jge out xor repz add cld xor or lods mov inc ljmp add sub pop out jp cmp or inc mov out cli aas sahf sbb mov jg dec add aam mov ljmp (bad) scas cld cmp popa (bad) outsb or adc incb xchg xchg testl inc add jle out into xor mov in stc addl sahf add js add push inc sahf or js add add mov jbe dec jg std add stc add adc jg xchg jecxz incl mov sbb sub add pop adc or adc push lea dec out sarb jno jne add sahf or xchg mov daa loop add sub mov adc jmp inc lahf or lea mov in cmc cwtl add inc adc sub inc add add sahf or mov or add sahf or xchg lds xor fs jne sti call sahf sbb js add in out jmp add mov inc inc mov shl add mov inc inc mov aad push frstpm(287 add mov dec js add movsb cmc cwtl add pop decb push sub cltd pop movsb cmc cwtl add jle or dec js pushl add and pusha xor out call das pop inc or jle call inc pop pop repnz sub cmp lods repnz push mov (bad) jg adc push lds add adc std roll (bad) sahf or xchg scas enter mov in lret decb mov adc fistp inc mov fiadd xchg lods sbb inc dec mov in stc movsb out (bad) ljmp loop movsb push idivb adc push inc xorb or in jnp ret pop and ret jnp test xchg scas mov cli rorl mov iret push movsb ljmp pop (bad) repz mov sbb mov enter cwtl repnz mov int3 pushf out jmp or dec lret sub add mov cld mov sti xor add inc dec xchg xor adc sbb cld or push xor or xorl jecxz imul int3 (bad) cmc inc mov add lret pop enter add xor iret lock lods mov push arpl push adc inc lds and mov pop test repnz les pop pop (bad) adc and sbb subl fs (bad) push cwtl ret lret test mov mov cmp ret adc (bad) mov out dec test test fidivr mov test sub repnz cs cld or in jne call lods push dec pop les push sbb adc stos push std inc test call xlat or cld cmp push aas pop stc dec jne into jmp fs lods sbb sahf mov jne into jmp pop pushf mov ss dec add stc dec jne into jmp dec mov sbb pop sbb loop,pn jns add ret adc xor outsb cld sbb mov pop adc or sub dec mov (bad) sti cld mov mov int pop cmp push (bad) xchg cmpsl addr16 pop icebp mov imul mov mov pop out lret inc js adc cltd decb cmp out xchg cmp les sbb or xor mov cli inc imul loopne lock lods push je push inc or (bad) int3 or push lds mov clc xor stc das and out add sbbl and or lahf addr16 and mov mov ret bound int3 fwait mov out iret adc xor jl sub pushf sub into and xchg mov jns sbb sub ljmp mov divl jl repnz mov std pop and cmp sbb repz fadd out or sbb int mov (bad) pop xchg push cmp (bad) lcall ja mov xorl inc pop mov mov test or decl add hlt sbb jbe lock sarl or adc mov ret xchg mov in adc icebp scas xchg jnp or sbb adc lock mov jbe adcl adc mov push lcall adcl in or jle (bad) fisttp adc out xlat jle shl push mov (bad) cmc clc scas (bad) stos adc mov (bad) std inc jae (bad) push shrb fwait ret sbb or mov (bad) outsl sub push std out sbb xor sub sub push add jecxz cmp xlat jl mov mov xor pop in or jge sti xor in dec (bad) daa or cmc imul jbe adcl adc mov jmp stos dec cmp jecxz inc adc movsl cmpsl jne push xor and adc std pop mov pop scas ret int3 add leave xchg xchg add inc inc mov das imul dec scas (bad) cmp sub repnz aad les mov cli inc add xor out mov jbe adcl adc mov vmovd or xor add xchg les mov clc push arpl leave push loopne scas xor scas jecxz out adc repz (bad) xor lret mov lds rcrl lods adcl adc xchg mov mov lock ss roll test das out inc jae lock or dec inc mov das imul dec scas (bad) cmp (bad) imul or mov jno cmc clc scas (bad) stos sbb inc cwtl adc int3 int3 sarl and roll cltd aad (bad) aas jb add push xchg mov in std inc lods mov adc push adc dec xchg sbb lret xchg mov fadd mov out push pop xchg and inc (bad) and sbb push cld ret or loopne mov push xlat xor cltd aam push mov jo es mov fistpl pushf push dec push sbb ljmp add push jg in or sub fbld jmp adc scas mov inc mov das imul mov jecxz sbb mov sub (bad) push lcall pop call cmc sbb sub and imull sub mov push mov adc dec subb ss add (bad) adc lret loope sub sbb adc mov and dec add sub mov inc cld dec push cmp mov loopne inc cmpl adc mov sbb mov lock pop mov cmp hlt push pop loopne jle sbb clc hlt repnz pop repnz sbb in push jge mov (bad) sbb cmc ficompl std dec sbb loop or jp (bad) out push cmp clc xor loopne sti mov in sbb lret int jb mov dec (bad) xor mov call sbb inc xchg fstpl jns ret fadds push sub sbb or into push mov push pop rcrb es jbe and ror test fadd sub shrb movb xchg mov orb adc add (bad) inc insb push lock push or loopne mov xor adc iret adc (bad) sub sbb in add mov inc lods mov cmp adc dec jp jecxz int (bad) sub int3 inc sbb addr16 add mov adc dec fdiv jmp (bad) inc cmp movsl imul dec mov dec dec mov or mov sbb repnz lret fs lods push loop mov jns jl out syscall (bad) int mov inc out lock cmc lock shlb jl mov mov mov fs pusha ss cmpsb enter cmc in rclb sbb scas lahf lahf or scas xchg or adc xchg cli (bad) mov adc push scas ret fisttp sti push add daa (bad) xchg fwait cmc and sahf jo dec out negb js adc dec sub call stos testl out notl (bad) iret mov cli stc dec sbbl cmp sbb sbb out push lods stc sbb inc js iret fisttpll fs lods xor mov lret lds mov pop repnz cmp mov rcr int3 inc stc sahf adc adc inc test mov mov aam sbb mov add rcl fiadd sbb (bad) int add push push inc (bad) dec jbe push xchg (bad) push sahf and fdivrl add call test les push add mov loope stos mov dec bound add stc mov (bad) sbb lock jbe orb (bad) popf add mov (bad) mov cmp jae sbb (bad) mov cmp jae jnp add inc insb or jae aas push cli xor push push jno test (bad) sbb repnz repnz push sbb and icebp lahf clc test push sar push fidivl lds jl cmc lds fs lods sub test xor adc lds inc xchg mov sbb out nop dec jno in mov repz les (bad) pusha cmp clc dec mov shrl ret inc mov sbb lret sahf dec ret (bad) cmp inc sub sbb adc mov les mov out mov stos mull xor shll imulb jl in cmp inc fwait out mov push into (bad) (bad) stc lds scas out nop dec jno repz ret dec lcall fidiv rcl stc lds scas out nop dec jno repz ret dec lcall push sbb inc push mov mov cmc lds fisubrl push jno ss ljmp mov sub repz cld pop jbe std and (bad) push mov cs fdivs (bad) jae inc mov adc repnz aad les xor xchg inc mov ret dec out mov fcmovnb insl imul or sbb flds bound lret aaa pop popf add sahf mov cld ror jb popa movsb jmp jp and xchg cmpsb pop add push jge cmc in (bad) mov xor mov ss jg rorl xor sbb out mov mov push or stos inc mov dec cltd test sub mov or into (bad) hlt xor outsl clc outsb pop (bad) add rcll sub cmc jp mov lret and mov sbb adc cmp or cmpsl or adc sbb (bad) mov add mov scas cpuid ret addr16 lret test in aas mov fdivrl and fbstp std sbb adc add inc mov in pop mov lret icebp pop mov cmp scas mov xchg sbb xchg rcrl and mov (bad) mov in cld mov loop push inc xorl adc push cmp inc iret lahf mov cmp adc call mov fnstsw daa inc and dec loope (bad) add mov xchg sahf mov pop cmp xlat and test jg xor cmpsb mov ret fidivrl jb mov fwait shlb push push push sbb pop push (bad) out pop iret xchg xor es stos imul aam jmp int3 call adc cmp sahf int jg or das xchg inc fisttpl push xor push dec dec push jo mov mov mov pop es loopne sbb in lret popf in push aaa xchg fmuls xchg or sub or mov (bad) lods push push xchg mov fbld test ficom mov push aad rcl jb popa movsb jmp ljmp in shlb sti mov in cmc cwtl inc mov aas mov lahf aaa add negl dec mov clc inc sti aaa ja negl add xor jae loop jecxz movsb xchg add aaa jae negl add mov aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add shl clc inc pushl jae negl adc dec shll in ljmp xor cmp in testb xor fsubrs inc stc xor cmp test dec jp cmp call std mov cmp xor cmp in inc fadds adc js mov testb loopne pop mov in sbb das (bad) sbb shl inc bound or cmp das aaa (bad) in mov lret xor xchg hlt aaa mov clc inc pushl jae negl add stos in inc lock sbb sarb mov xchg movsbl les lcall (bad) mov pushf mov jae negl add stos in inc pushl jae std add mov xchg add inc jle (bad) js mov xchg add aaa jae negl add stos in inc pushl jae negl add mov jae negl add stos in inc pushl pop adc xchg add aaa jae negl add stos in inc pushl jae adc xchg pop lods in inc pushl jae negl add stos in inc sti aaa ja negl add stos in inc pushl jae negl add add aaa jl lock mov xchg add aaa jae negl cli roll cld mov lock mov xchg add aaa jae negl add scas in inc pushl jg sti sbb mov xchg add aaa jae lock mov xchg add aaa jae negl add stos in inc pushl jae loop (bad) mov (bad) pop add inc or negl add mov aaa jae (bad) sbb mov xchg std add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add cmpsl in inc pushl jae negl enter repz aaa pop adc xchg aaa mov clc inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jnp lcall add lods in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae sti add mov stos in inc pushl jae negl add stos in inc pushl jae icebp sbb cmp jmp inc mov sbb mov xchg (bad) in inc mov sbb mov (bad) or stos in inc pushl or mov xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae icebp sbb sahf xchg add aaa add inc clc in dec fdivr dec shl cli mov lcall fmul lods xchg add aaa pop adc xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc xorb out negl add aas xchg mov jbe cmp xchg add cmp adc add mov xchg add aaa jae negl add stos in inc pushl push in call xchg add aaa jae negl add stos in inc pushl jae negl add mov aaa add rcrl cmp divb aaa (bad) lds out std pusha sub scas in inc pushl jae negl add add aaa jae adc xchg add jae negl add stos in inc pushl jae negl add stos in inc pushl jae sti add mov xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae (bad) js mov (bad) pop add aaa jae negl add mov aaa jae negl cli roll aad xchg mov adc sbb mov xchg dec in sti mov negl dec mov clc inc cli xor add fsincos repz (bad) sbb mov mov add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add xchg movsl sahf inc std cmp cld add mov xchg add aaa jae icebp sbb int xchg or cmp sti add leave mov clc inc jmp sbb mov test add cmp inc clc loope scas xchg add inc popa adc js mov jg cmpsl mov negl ror mov sbb out negl add mov inc pop out negl fld push call out inc pushl jge pop add xor jmp mov enter cmpsb xchg decb ret (bad) jmp mov movsbl loop idivl cs pusha xadd add aaa jge pop add mov xchg rcrl outsl adc pusha sub xchg movsl sahf inc cld cmp sti sbb mov xchg add cmp icebp sbb mov call cmc inc (bad) aaa jae negl add xchg fwait std inc std cmp sti add mov stos in inc out or negl add stos in inc std cmp inc clc loope scas xchg add inc pusha adc js leave sbbl mov negl ror mov movsl popf mov sarl mov xchg add aaa gs pusha cli mov xchg pop pop sbb out negl add scas in mov fsubs mov mov lcall add lods cmpsb adc jnp lcall sbb mov pop sbb out negl add stos in mov icebp sbb int xchg add cmp sti sbb mov xchg add cmp icebp sbb lds and test cmc inc (bad) aaa jae negl add xchg fwait std inc std cmp sti add lds in inc out or negl add stos in inc std cmp inc clc loope scas xchg add inc popa adc js mov xchg fiaddl sbb out negl ror mov test mov out sbb test jle negl add mov inc pop out negl fld push call out inc pushl jge pop add xor jmp inc jbe sub mov xchg decb ret (bad) jmp mov movsbl loop idivl cs pusha xadd add aaa jge pop add mov xchg rcrl outsl adc pusha sub xchg movsl sahf inc pushl jae negl push mov stos in inc std cmp negl cli roll push inc jbe js hlt sbb mov xchg add cmp out jecxz dec mov sahf inc pushl jae lock lds sti sarl sbb lds in inc pushl jge pop add mov call in out cmp adc js mov xchg add cmp in sbb mov aaa jge pop add mov xchg xor aaa jl and sti inc sets add dec pusha in cli sbb mov andb adc sbb mov cmpsb adc jnp lcall add xchg xchg std add inc jnp and sti inc push xchg sti add dec gs negl add add aaa jae negl push mov stos in inc std cmp negl cli roll mov adc sbb mov xchg add xor cli roll sahf inc pushl jae lock int xchg add aaa jae adc call sahf inc pushl jge sbb add mov in inc cmc dec adc sbb mov xchg pop test jae cli add roll xchg mov inc clc (bad) mov stos in mov icebp sbb int xchg add xor cli roll out inc pushl jae lock mov xchg add aaa jae out js mov mov inc insl in loop repnz cmpsb add inc mov sbb roll sahf mov negl (bad) mov clc xor into (bad) pushl jge pop add int call loopne out and lock leave mov sbb lea sbb mov xchg aaa mov clc inc pushl jg lret js mov xchg add cmp out negl add jl cmp aaa jae negl ror mov movsl popf mov clc pusha sub (bad) movsl sahf inc stc cmp jmp xchg pop xchg test out jecxz repnz xchg xadd clc inc pushl jae lock xor repz aaa jl sarl mov add lret (bad) js xor jmp mov ljmp add inc jg out js mov mov lret (bad) js xor jmp mov in sbb mov cwtl mov negl ljmp test out lcall add faddp push inc jbe jae negl push mov stos sti idivb sarb cltd push fldl mov dec outsl in loop enter cmc add inc insl adc sbb lds in inc lea adc pusha or stos in inc clc cmp sbb cld mov xchg pop test or jecxz repnz xchg inc lret in inc pushl jae lock cmp repz aaa jl sarl mov add lret (bad) js mov mov cmp ljmp add inc jg out js mov mov lret (bad) js mov mov inc inc jno jp adc xchg inc mov (bad) inc mov jae negl ljmp movsl mov out negl add jge test pushl jae negl ror pop (bad) adc mov aaa gs pusha push int call (bad) inc xchg out negl idivb mov gs pusha and orl mov negl add cltd mov insl in bnd mov xchg pop mov push out negl add mov lcall sbb mov xchg repz aaa jae negl idivb cmpsl test inc stc cmp add and add inc or (bad) js mov xchg aaa movsb test inc pushl jg lret js mov mov (bad) (bad) jmp mov or cmp out incb ror lahf push roll mov aaa jl (bad) pusha adc cmpsb pop add dec addr16 js rcrl mov aaa jl and sti inc add clc inc cmc dec pusha in cli sbb mov mov aaa jge sbb and or icebp adc js mov stos in mov icebp sbb mov xchg xor inc pop adc enter repz cmp adc js mov xchg add jno ret mov mov lret (bad) js leave lcall inc mov push mov stos in inc aad sub leave mov add cmp sarb dec test or ja out fnstsw lds cmp iret sbb jnp cmp pusha cmp push test add lret (bad) sbb jns mov jp out js mov scas mov jge lret js mov test pop pop sbb out negl add xchg fwait (bad) mov lds mov mov cmp incb leave mov xchg add xor pop mov mov lcall clc mov add aaa jae lock mov cwtl incb test cmp mov test add cmp mov stos sti sarl js rcll jmp nop mov out negl in dec cmpsb adc jnp lcall add scas test or jb sbb xchg add aaa jl lret js cmp (bad) shld js adc mov test or lret ficoml testb inc adc push add dec bound sub enter add mov cmp adc js leave fwait test or cmp in add mov test xadd push inc push aaa pop out negl add mov cmp adc mov add dec inc adc int3 lds in mov sti sbb mov mov aaa jae icebp sbb mov test add jnp lret js cmp (bad) shld js adc mov mov cmp out lret js mov test cmpxchg inc inc push aaa adc negl add xchg fwait repz in cmp out cmc sbb mov mov inc pusha adc add mov xchg add xor cmp aas mov lcall clc mov add aaa jae lock mov cwtl incb test xor add mov inc cmp into sbb or cmp in adc leave cwtl cmpsb stc or jge add add ret (bad) jmp mov or cmp out adc mov pop sbb out negl add stos in inc xchg adc stc inc jns repz aaa jae negl add stos in mov negl in dec cmpsb adc jnp lcall add scas test or xor xor xor jl sarb pop call loopne out and (bad) sbb jne repz mov add stos in inc (bad) xor loopne lods xchg add cmp lcall sbb add clc inc sti aaa ja adc jbe (bad) in inc pushl jl lock mov out or ja lock cmp repz cmp out negl add stos in inc xchg mov sbb lods in inc xchg mov sub lods in inc xchg mov add lods in mov pop add mov xchg pop mov sub negl ljmp in inc ljmp mov xchg cmp aaa jae icebp sbb mov test sarl clc fdivrs stos in inc cld cmp pop add shll lcall add xchg xchg std add xor icebp mov xchg std add aaa ja sbb icebp mov cwtl incb stos in inc sti aaa ja sbb icebp mov xchg incl stos in inc sti aaa jo sbb add stos in inc stc cmp jmp xchg icebp xor aaa jae in cli mov call enter insb adc sbb add mov add mov clc inc pushl jg lret js mov push rorl mov aaa jl icebp sbb mov (bad) divl movsl sahf inc pushl jge pop add mov mov lds inc jge jmp xchg inc (bad) sti roll jle negl add mov dec inc outsb aaa jae negl (bad) mov call out inc pushl jge push add add dec addr16 pusha or mov test inc pushl jl lock mov push rorl mov aaa jl lock int call loopne out and lock leave mov sbb mov inc jle negl add mov inc pushl jg lret js mov push rorb mov clc inc pushl jl lock int call loopne out and icebp sbb rcll out jmp pop out negl add test aaa jae clc sbb lds cmp popf movsl sahf inc pushl jl sbb add mov clc add dec inc in sbb enter repz aaa js les mov xchg pop cmpsl sti (bad) mov negl add mov sahf mov negl (bad) mov xchg cpuid test inc pushl jl lock mov out add inc pop out pop sbb (bad) mov stc add dec gs negl add stos in inc ljmp mov ret inc pushl jae icebp sbb cmp repz aaa gs sbb lds in inc in or xor mov xchg add cmp sbb mov (bad) and int3 (bad) pushl jl sbb cmp mov add dec gs negl add xchg movsl sahf inc pushl jae lock mov out add xor add test out inc pushl jg lret js mov push rorb xchg movsl sahf inc pushl jl icebp sbb mov push fldl mov dec outsl in out jmp xchg xchg dec stos mov jae negl repnz cwtl std pop xchg test out negl add test in inc mov out negl in dec cmpsb add mov negl add mov cmp out negl add movsl fwait jp jae jg lret lds push aaa rol mov negl add ret (bad) cmc pusha sub mov adc negl add addb out negl ror lods xchg packuswb scas inc jmp sbb mov xchg add aaa adc sbb (bad) mov mov inc jnp call cwtl lock dec gs negl add add cmp out negl add test jl sbb clc int xchg add cmp sti sbb mov xchg add aaa pop out cli add lds in mov negl add xchg fwait std inc cld cmp sbb mov xchg add cmp out negl add test aaa ja negl add test jl sbb clc int xchg cmp cmp sbb mov xchg fisttp in mov negl repnz xchg xor aaa jae lock mov out pop lods in mov negl add mov aaa jg lret js mov push fldl mov aaa jl lock xor cmpsb std or aaa jge ret roll lock xchg jae negl ror lods xchg dec mov lcall sbb mov call out inc pushl jge push add cmp hlt add aaa push adc pusha sbb stos in inc inc lret (bad) js leave test lock mov js mov xchg add dec bound add xor jo hlt add aaa push adc pusha and mov sahf mov iret sbb add inc inc adc add (bad) xchg add inc pop adc pusha sbb xchg xchg add inc jns testl jmp inc cmc dec popa out jmp test pop test and out or mov lret (bad) js leave sbbl inc out cmp adc clc pop cmp hlt add aaa jo sbb mov add aaa jo and cli inc jo call inc cmc dec inc adc pusha or stos in mov negl ljmp movsl mov out negl in dec mov test test out lret js mov stos sti sarl sbb mov aaa jl lock vorpd add aaa jl testb inc jb testb in inc cmc dec adc pusha add js add aaa jge pop add mov push fldl mov aaa jl lcall sbb jo hlt add aaa push adc pusha and mov mov cmp adc js mov xchg add aaa pop adc add (bad) xchg add cmp stc sbb int xchg add dec push adc pusha sub mov jg negl add stos in mov sbb sbb lods sti stc mov lret js mov out pop sahf test in lret mov xchg add aaa sub mov xchg xor cmp sti sbb mov xchg add inc jle cld add mov (bad) pop add aaa jae negl add xchg fwait std inc std cmp icebp sbb sahf xchg add aaa jae negl add stos in inc rorl in sbb sbb test add negl add movsb sti push mov cld add mov mov xchg inc test sbb rcll inc pushl jae negl ror lods xchg add cmp sti sbb mov xchg add cmp negl adc push test add aaa jae negl add lds jp sbb add stos in inc cmc dec gs negl cli sarl sahf inc pushl jl push add mov xchg jl cmp mov xchg std add inc imul js leave mov sahf mov push sbb insb call clc inc pushl jge pop add mov xchg jl cmp out negl add stos in inc iret aaa and hlt add roll mov negl add mov aaa jae negl jmp inc call sahf inc pushl jge pop add mov xchg xor aaa jae icebp sbb int xchg add xor add stos in inc iret aaa and cld add lds and inc pushl jge pop add mov xchg add aaa push adc js inc jns repz aaa jae in sub cmpsl sti (bad) mov negl add shl call out negl repz clc and ret (bad) pushl jge pop add mov mov add aaa push adc js roll mov aaa jl push add mov xchg pop lods in inc iret aaa and negl add xchg fwait std inc cld cmp sbb mov xchg add cmp negl add mov cmp negl add mov hlt mov negl ror mov test inc stc cmp add and add aaa add negl add popf test inc pushl jg lret js mov push fldl popf test inc pushl jl testb inc das (bad) sbb inc cmc dec adc sbb mov xchg pop test or jecxz push mov scas in inc pushl jae negl repnz xchg add aaa pop adc add mov xchg add cmp adc js mov xchg add cmp negl ljmp fwait std inc cld cmp sbb mov xchg add cmp negl add mov cmp negl add mov cwtl inc xchg aaa jae negl ror mov test inc stc cmp add and add aaa add negl add mov jg lret js mov push faddl mov jl testb inc sub adc stos in inc cmc dec adc sbb mov xchg pop test or jecxz cli roll clc inc pushl jae negl in mov sti sarl add mov cwtl cli add aaa jns stc sbb mov test (bad) aam out sub lods in inc xchg mov sub lods in mov negl ljmp fwait std inc std cmp cli add mov xchg add inc jnp negl add popf test inc xchg mov sub mov cmp pop add roll popf test inc int3 cmp mov mov (bad) (bad) jmp mov add cmp adc clc in roll sti inc lret adc js mov xchg add mov cli roll inc mov sbb mov call sahf inc pushl gs pusha sub xchg movsl sahf inc fdivrl add jecxz repnz xchg or aaa jae negl fadd test repz aaa jae sbb mov add cmp in jecxz sti rcll movsb mov (bad) js mov xchg or xor cmp mov xchg ljmp cmp adc pusha sub stos mov sahf inc cld cmp int (bad) pop add aaa pop adc add mov stos in inc sti aaa adc mov jnp lcall js mov mov lret (bad) adc sbb mov xchg pop test cmp sbb mov enter in inc outsb aaa jae negl (bad) mov call sahf inc pushl jge sbb and or cmp adc add lds in inc lret adc add xor and stos in inc cld cmp sti sbb inc jns repz dec sbb jecxz add xchg gs pusha cli mov xchg inc mov stc mov negl (bad) mov xchg add aaa jl lock mov push fildl lods in inc pushl jl std add mov mov add cmp adc sbb xor repz aaa pusha adc js roll sahf mov icebp sbb mov stos in inc int3 cmp adc pusha cmp jp sbb jbe cwtl inc cwtl mov adc sbb mov xchg add xor in shll fwait inc ljmp mov stos in inc cmc dec addr16 add inc imul inc cmc dec bound lret js cmp (bad) shld jns jmp mov stc jo out mov aas add mov ret inc out push adc js mov xchg add dec jp ret shrl jmp out negl (bad) mov call sahf inc pushl jge loope sub xchg lock negl add lahf test adc js mov stos in inc (bad) dec sbb adc mov xchg add dec (bad) std sbb mov xchg add inc or (bad) sbb or in inc sti aaa es cmpsb sbb mov test xchg inc orl bnd mov xchg add mov out negl add movsb sti lahf mov out pusha sbb xchg xchg add cmp (bad) js mov xchg xor cmp (bad) sbb mov xchg add inc jg negl (bad) mov push fwait mov negl add lea jg cmc add rcrl add aaa jae negl add xchg fwait std inc std cmp lock inc jns repz dec gs negl add stos in inc movsb lret ret add roll xchg mov add sbb (bad) movsl sahf inc cli xor sbb rol inc xchg jae lock mov xchg dec loope rolb jae lock mov xchg xor aaa and negl cli sarl out inc pushl jge pop add mov xchg xor xor cli roll sahf inc pushl jae negl aam mov repz aaa jae adc (bad) pop add aaa jge sbb add stos in inc cmc dec adc sbb mov xchg pop test jae lock leave mov sbb mov inc jg negl add scas in inc pushl jg lret js mov xchg xor aaa jae negl ror mov test inc stc cmp add and add aaa add negl add mov aaa jg lret js mov mov aaa jae pop sbb mov stos in inc cmc dec adc sbb mov xchg pop test or jecxz push mov scas in inc pushl jae negl adc add aaa jae pop sbb mov stos in inc cmc dec adc sbb mov xchg pop test or jecxz cli roll sahf inc pushl jae negl or xchg add aaa jae adc (bad) pop add aaa jge sbb add stos in inc cmc dec adc sbb mov xchg pop test jae lock leave mov sbb mov inc jg negl add scas in inc pushl jg lret js mov xchg xor aaa jae negl ror mov test inc stc cmp add and add aaa add negl add mov aaa jg lret js mov mov jae pop sbb mov stos in inc cmc dec adc sbb mov xchg pop test or jecxz push mov scas in inc pushl jae lock roll sarl sbb mov stos in inc cmc dec adc sbb mov xchg pop test or jecxz cli roll clc inc pushl jae lock leave mov sarl add mov stos in inc fdivrl sbb lret js cmp repnz cmp adc sbb mov stos in inc int3 cmp adc sbb mov xchg icebp xor aaa jae adc call enter jnp add and add cmp mov xchg cmpxchg clc inc pushl jg lret js mov mov or lret ret js mov xchg add cmp in add test xchg inc mov adc add mov xchg xor cmp cld add mov xchg add aaa jae icebp sbb int xchg or jge icebp sbb rcll clc inc call sbb mov test add cmp sbb mov xchg aam aam hlt mov lock mov cmpsb adc jnp lcall js mov mov call out icebp sbb mov lret (bad) pushl jge push add cmp hlt add dec adc sbb mov xchg pop test jae icebp sbb int xchg add mov add stos in inc iret aaa and cli add lds sub mov aaa jge pop add mov cwtl lock aaa ja icebp sbb int xchg add aaa pop out pop sbb rcrl add dec gs negl cli sarl clc inc pushl jl push add mov xchg inc mov cmc inc xchg jae negl ljmp in mov jecxz repnz xchg xchg test inc pushl jae icebp sbb roll sarl add xor repz dec adc sbb add cmp adc sbb mov stos in inc cmc dec gs (bad) sbb add lock aaa push adc pusha and mov mov lret shr js mov xchg pop scas in inc jb ja negl add jnp lcall sbb cmp aaa jae negl add test shr js mov xchg pop scas in inc jne jbe negl add pop add pop adc js mov call pop mov negl add pop sbb inc jae jo negl add scas in inc repz adc add mov xchg add jge lret js roll vpminsw cmp adc add lods cmpsb adc jnp lcall js mov mov out mov js mov xchg pop lods in inc scas lret shr js mov xchg pop lods in mov sarb sahf xchg add inc jp negl add stos in inc stc cmp sub loop lods xchg std add inc adc clc loop stos cwtl std pop xchg fwait (bad) mov jmp test add cmp adc add xor repz cmp cmp aaa xor repz cmp out in sub (bad) movsl mov adc pusha push mov stos in mov cmp aaa xor repz lret shr js mov xchg pop scas in inc jne jbe negl add mov aaa jae negl ror lods xchg add dec js negl add andl out negl add mov aaa jae negl (bad) mov call clc inc pushl jge pop add mov xchg (bad) je fwait inc xchg jg lret js mov test pop xchg fwait (bad) mov loop in mov repnz aaa jae negl ror lods xchg add jae icebp sbb int xchg add aaa jae negl cli roll jmp icebp xor sbb stos in inc pushl jae sarb jp sbb lea sub negl add movsl test inc pushl jg lret js mov xchg add inc jnp sbb icebp mov xchg icebp add aaa jp bnd leave xchg cmpsb pushl cmpsl test mov pop add roll scas in inc xchg mov sbb scas in inc outsl inc jnp negl add stos in mov pop add mov xchg add inc sbb negl add movsb sti lahf mov icebp sbb int xchg add cmp sti sbb mov xchg add cmp icebp sbb sarl mov negl add xchg fwait std inc sti aaa ja clc sbb roll inc aad add mov test add dec sub std pusha sub mov loop negl add stos in inc rorl adc sbb mov xchg add mov add stos in inc rorl adc js mov xchg add mov out negl add stos in inc rorl out std pusha sub mov loopne negl add stos in inc aad cmp out add mov xchg add cmp or leave mov loopne test or inc sbb or popf fwait fwait inc jmp pusha sub (bad) movsl sahf inc testb inc clc leave mov stos in mov add xor add cmp add lds sti ret cmp out out adc (bad) movsl sahf inc std cmp or leave mov loopne test or mov lea jnp loope pop cmp repz dec jns xor xchg add dec inc adc lds stos in mov add xor add cmp add ss and and inc cmc dec gs negl sti lds test inc pushl jl sbb test add cmp adc add jno repz aaa jae add xor add cmp sbb sbb mov test inc xchg jae icebp sbb mov cmpsb add mov aaa gs add mov xchg add aaa jl and sti inc sub adc stos in inc cmc dec gs negl sti lds (bad) pushl jl sbb test add cmp adc int test repz aaa jae add xor add cmp sbb adc movsl enter fwait js popa inc jl incl (bad) int xchg add aaa jge (bad) pusha adc call clc inc cmc dec gs negl sti lds (bad) pushl jl pop sbb insb call clc inc pushl jge pop add mov xchg inc mov jmp out negl jmp inc negb stos (bad) pushl pop adc add inc and daa add dec gs negl sti lds (bad) pushl jl pop sbb insb call out inc pushl jge pop add mov xchg inc mov lahf inc mov sbb shll inc push aaa sbb loopne or stos in inc rorl adc pusha sub (bad) movsl sahf inc testb inc clc leave mov stos in mov add xor add cmp add xchg add cmp out out adc (bad) movsl sahf inc std cmp or mov xchg add cmp mov push sahf inc pushl jp adc (bad) icebp inc lods movsl sahf inc pushl jge pop add mov cwtl fildl sbb mov jae negl ror lods xchg add mov add mov inc inc inc cmp mov xchg std add cmp mov xchg pop mov in out negl add jp stos inc pushl jae negl ror lods xchg add mov out negl add xchg movsl lcall sbb add aaa gs add mov xchg add aaa jl and sti inc sub adc stos in inc cmc dec gs negl sti lds (bad) pushl jl sbb mov add cmp adc int test repz aaa jae add xor add cmp sbb adc movsb (bad) cmp inc xchg jae icebp sbb mov out add aaa gs add int xchg add aaa jge (bad) pusha adc call clc inc cmc dec gs negl sti lds (bad) pushl jl pop sbb push call clc inc pushl jge pop add mov xchg inc mov xchg inc test sbb lds pop (bad) mov pop adc add inc and add dec gs negl cli rcll inc xchg jae jecxz lgs movsl sahf inc pushl pxor add mov ffree enter jge pop add mov test pop mov inc sub negl add stos in inc out inc imul clc loopne mov sahf mov push sbb roll push mov negl add repnz xorl out icebp sbb rcrl add dec gs negl (bad) push call clc inc pushl jge pop add mov xchg inc jp cmpsb mov negl ror stos xchg inc mov xchg inc test sbb lds std dec mov sahf inc pushl jge pop add mov xchg inc jp cmpsb mov negl ror stos xchg inc mov lahf inc mov sbb lds std dec mov sahf inc pushl jge pop add mov xchg inc jp cmpsb mov negl ror stos xchg inc mov jmp out negl jmp inc call sahf inc pushl jge pop add mov xchg inc jp cmpsb mov negl ror stos xchg inc mov icebp mov negl jmp inc call sahf inc pushl jge pop add mov xchg inc test je outsl cmp sbb mov call enter jge pop add mov xchg inc test je outsl cmp sbb mov call out inc pushl jge pop add mov xchg jl mov out negl add stos in inc aad or jmp adc (bad) movsl sahf inc pushl adc add mov xchg or jl negl aam mov repz inc push out negl add test add negl add test jl sbb clc int xchg aaa xchg movsl xchg inc (bad) xor sbb xchg add aaa adc add mov xchg or jl negl aam mov repz inc pop out negl add test add negl add test jl sbb clc int xchg or jge hlt add leave mov clc inc rorb out negl add andl adc js mov xchg add dec jo cmp sbb (bad) movsl mov out xor mov xchg add aaa adc mov jnp lcall js mov test add negl add mov loope negl add stos in inc std cmp and add add clc inc sti aaa ja sbb icebp mov cmpsb add stos in inc sti aaa jl lret js cmp (bad) shld jle out or mov mov add lods in inc in or mov xchg add aaa jae icebp sbb int xchg or jl negl aam mov repz dec sbb negl add test or negl add test jl sbb clc int xchg aaa xchg movsl xchg inc (bad) xor pop mov stos in inc (bad) aaa adc add mov xchg or jl negl aam mov repz xor add test or mov xchg add aaa jl sbb clc int xchg aaa xchg movsl xchg inc (bad) xor or xchg call adc add mov xchg or ja hlt add leave mov clc inc pushl jae negl add stos in inc aad push adc js mov xchg pop mov pop adc js leave mov jecxz in or mov xchg add cmp mov xchg pop mov (bad) sbb mov xchg faddl fwait inc inc outsb aaa jae negl jmp inc call enter jge pop add mov (bad) pop add aaa jl sbb ss push in inc cmc dec gs add xor add cmp inc clc add jno repz cmp adc xchg add inc or out push mov lret inc xorl adc sbb mov stos in mov icebp sbb int xchg or cmp clc sbb mov xchg add aaa and negl add mov cmp negl add pop add jbe negl add scas in inc (bad) js in pusha fdivrl stos in mov lock mov shl clc inc pushl jge pop add mov call enter jge sbb xchg add dec popa out jmp test pop xchg fwait fwait inc test or (bad) mov or inc mov sbb int xchg pop xchg fwait (bad) mov dec loopne mov stos in mov out js rcll jno (bad) pushl jge pop add mov cwtl flds sbb lods aaa jae negl ror mov movsl xchg mov or xchg add jp loope cli mov xchg add cmp mov mov pop adc js mov aam clc inc pushl jge sbb cwtl lock dec popa out jmp test add aaa push in push sbb mov mov aaa jge sbb and add dec outsb adc add mov xchg add aaa gs add mov stos in mov cld add mov stos in inc mov pop out negl add test jl sbb clc int xchg add aaa jae negl add nop movsl cltd inc rorb in cmp sbb mov clc inc pushl jae sarb jp sbb mov cmp negl add cmpsl test inc pushl jg lret js mov clc push dec mov sahf inc pushl jge pop add mov ret test inc pushl jge pop add mov mov jg negl add mov inc insl adc sbb mov xchg add aaa push adc fnstcw stos in inc sti cmp in cmp sbb test out lret js mov cmpsb std or cmp in push sbb sarl clc inc cmc dec gs negl in dec test pop scas in inc popa inc jnp negl add stos in inc mov adc iret lds in mov and or add dec popa out jmp (bad) ljmp aaa jge pop add ja (bad) pushl jge sbb and or cmp shll scas mov dec loopne mov stos in mov push pusha sub test addr16 lret js mov je jl dec inc add cld add mov xchg add xor adc mov mov out negl add test mov out negl add test mov out negl add jg sahf inc pushl jge sarl pop call loopne out and negl push mov stos in inc pushl jae negl adc inc ret inc xchg aaa jp pop sbb mov xchg add mov out negl add rolb sbb mov stos in inc out cmp negl add sar cld mov inc clc in inc fdivr inc fcmovb cmpsb mov (bad) js int call lret dec sbb leave mov sub fwait movsl xchg mov inc clc fnstcw jo mov adc pusha or aaa iret fcmovne inc aad adc xor sbb adc add leave inc (bad) or mov lds cmp adc js lds or ffree push inc inc aaa ss fldenv mov out cmp cmp dec out xor mov adc sbb mov rolw nop mov cmp adc leave sti cli inc jecxz jnp adc lret (bad) sbb mov push add leave inc fsubrs add mov adc add inc and lds jp jecxz adc or xor (bad) mov mull rcrl cmp fcmovnb mov ret pusha adc cmp (bad) sti xor push int push pop inc mov add mov jp mov out cmp fdivrs xchg mov int3 adc call lds (bad) js int call lret dec sbb int fdiv dec into in inc xchg jae negl add stos in inc pushl jae negl add lods sti clc inc cmpl clc mov mov pop sar inc nop mov out negl add fsubp clc inc pushl jae jecxz adc or cmp negl add in enter jae cmc add roll dec (bad) fcmovnbe mov fisub xor movsl xchg mov inc clc fnstcw jo mov in or fdivr inc jp cmp adc fsubs or inc adc into add mov mov lds xor loopne mov push inc test xor lock pushf movsl xchg mov inc clc into leave push call jb add sub mov push mov cld sbb dec loopne xchg inc dec mov in adc lds pop mov adc mov divb xor (bad) cmpl out cld add mov data16 lahf movsl lods inc mov les loopne clc inc fnstsw add inc clc fdivrs int3 (bad) xchg mov idivl test jmp out mulb lds daa aas mov cmp adc add lds and insl add ja sbb in mov xchg mov js inc clc sti inc data16 fwait mov or cmp cmpsb fimull lds add sbb and and fwait movsl xchg mov inc clc fnstcw jo mov adc js mov xchg add aaa jae negl add stos in inc pushl jae negl add iret (bad) xorb out (bad) mov cmpsb call inc pushl jae sti add lds lcall sbb mov stos in inc pushl jae negl enter repz mov pop cmp out aas (bad) mov adc mov stos in inc pushl jae negl idivb int3 in inc pushl jae (bad) js mov cmpsb add inc aam popa adc add mov xchg aaa ret sti stc mov loop sarl stos in inc aam adc xor (bad) or lds inc dec jp pop pusha sub stos in inc out jl out pusha sub lcall out icebp sbb int test or dec add stc sbb mov xchg or aaa jae icebp sbb int cwtl or mov negl add xchg in mov jecxz in mov in inc aam adc adc cmc shll xor aaa jae negl add stos in inc std cmp negl add stos fwait jmp adc js lds or stos in inc pushl add mov test in inc xchg aaa jae negl push mov stos in inc aam pop out negl add mov aaa jae lock mov xchg add cmp negl add fwait movsl sahf inc pushl jae stc sbb mov xchg add aaa jae negl add mov clc inc pushl jae negl fdivrs stos in inc in cmp mov xchg or aaa jae lock mov stos in inc cld cmp sbb mov xchg pop sahf test inc pushl jae negl cli roll clc inc sti aaa ja negl add mov aaa jae negl fdivrs stos in inc std cmp negl add stos in inc loope sbb jmp xchg add aaa jae negl ror lods xchg xadd les (bad) js rcll hlt mov (bad) js rcll (bad) mov (bad) js int xchg (bad) in mov (bad) js rcll ret aaa daa out (bad) js int xchg aaa cmpsb movsl xchg inc xlat aaa and (bad) js cmp add lret (bad) fnstcw sub rcll iret mov in adc xchg xchg inc iret test mov (bad) js rcll into mov sarb xchg sahf inc xchg adc sbb roll sahf inc xchg adc sbb roll call adc sbb roll sahf inc xchg adc sbb rcll sti inc fdivl daa out out js rcll idivl sarb jne loop mov cmp cmp or ja mov in cmp jne jmp xchg movsl xchg cmp rcll mov out (bad) js rcll fwait inc icebp cmp rcll ljmp js rcll mov adc pusha adc xchg xchg xor dec jbe icebp sbb rcll mov mov sbb (bad) lods (bad) aad sub int xchg or aaa and (bad) js int xchg inc lods movsl mov stc aaa and sarb xchg xchg jg movsl mov divb and sarl xchg xchg inc into test adc js rcll lahf mov sarl xchg xchg pop mov push adc js rcll scas inc sti aaa daa out (bad) js rcll fwait inc stc dec push adc js rcll test adc js int xchg jno movsl scas inc (bad) cmp adc add int xchg inc mov xor jmp xchg xchg rorl jg pop add rcll mov aaa daa out (bad) js rcll mov cmp out cmp jne out cmp cmp rcll in pushl daa out (bad) js rcll in pushl daa out (bad) js int xchg dec shl xchg mov pop add rcll xchg mov (bad) js rcll stos mov (bad) js int xchg jno test adc add rcll mov out sarb xchg xchg xor lds adc js int xchg cmp xor ljmp movsl cmpsb inc xorl out (bad) js rcll mov mov in cli sbb rcll mov mov jae icebp sbb rcll cmpsb inc stos inc jg (bad) js rcll cmpsl inc (bad) aaa daa out in adc xchg xchg inc xorl out sarb xchg pop inc imul rcll jns mov js int xchg inc lods movsl outsb inc dec aaa adc lret js int xchg inc push jae repnz cmp (bad) or cmp add cmp jne (bad) cpuid test jo js add cmp jne in aaa mov push mov sbb sub jne cli aaa aam movsl mov in cmp jne lret in mov in cmp jne fmuls lds out and leave mov xchg leave lahf in mov negl ljmp movsl jo mov daa out (bad) js int xchg inc int3 in inc push jns call xchg jno lds gs ror lods xchg jg lds gs ror lods xchg inc mov xor ljmp movsl jo jno (bad) in call xchg xchg test jno (bad) in call xchg imul movl pusha adc xchg xchg aaa ret fcmovnbe inc int daa out (bad) js rcll jecxz xlat inc pop out sti sbb rcll in inc mov (bad) in call xchg aaa (bad) inc int daa out (bad) js rcll std inc mov (bad) in call xchg dec mov std inc mov (bad) in call xchg ja mov (bad) in call xchg inc mov in inc int daa out (bad) js int xchg add cmp adc add rcll stc mov icebp sbb rcll sarl js rcll out mov out push int xchg jns mov adc add int xchg fwait sti sarl js rcll cwtl inc iret dec push adc pusha fidivl xchg jae negl ljmp fcmovne inc cmpl adc sbb rcll iret inc cmpl adc sbb rcll int3 inc divl add xchg xchg ja mov jae out adc xchg xchg jns fwait ljmp sbb rcll int cmpl adc xchg xchg ja sti std inc cmpl adc xchg xchg leave xchg jae out adc xchg xchg add cmp out adc xchg xchg or cmp out adc xchg xchg aas xchg mov jae out sub stos in inc cld cmp sbb mov xchg add cmp sbb mov stos in inc out aaa add icebp sbb lds test inc clc cmp negl push mov mov aaa jae negl add mov mov pop mov lea jno negl add scas in inc jmp add mov xchg xadd enter jge negl in mov (bad) xorl out cmc add leave mov clc inc call sbb mov xchg movsbl enter jo (bad) js mov xchg inc mov aaa jae lock mov mov cmp out negl idivb stos in inc mov add rol inc hlt dec fs lock xor repz aaa jae clc sbb mov xchg aas stos test inc call sbb int xchg aaa movsb test inc cli xor adc mov aaa jae lock mov (bad) movsl sahf inc int3 cmp negl push mov scas in mov jecxz sbb aaa ret inc lock js icebp sbb cmp repz aaa jae std add (bad) xchg iret xchg test inc call sbb leave mov sahf inc pushl jae sarb sahf xchg (bad) in mov hlt add xor (bad) xadd lret inc cmpl add stos in inc out or lret mov xchg xadd enter or sti add mov mov xor fnstcw mov and sbb daa leave mov lret inc out cmp mov xchg cmp (bad) xchg mov out sbb cmp jno (bad) or xor sti int xchg cmp (bad) mov add mov jl sub add jno (bad) or inc jle and (bad) xchg or dec je cs or jno jmp ret (bad) icebp dec jp iret js mov ret (bad) fnstcw adc iret js mov ret (bad) int cs js mov mov xor fnstcw mov xor cld lds (bad) mov xor or hlt add cmp loope stc mov mov aaa sub loop push mov mov add dec jp loopne inc xor call inc repz js pop or xchg mov or mov adc mov or aaa sub out js mov mov mov bsr (bad) std inc jnp out js inc ja sbb pushf in inc xchg aaa jae negl add mov cmp out sarb mov aad int3 cmp adc add mov xchg add cmp (bad) sbb mov mov cpuid test inc cld cmp sbb mov (bad) adc stos in inc clc inc jnp lock leave mov aam (bad) out negl cli roll loopne movsl aaa jae negl add xchg or sarl lods xchg add cmp adc sbb mov xchg add aaa ja ljmp xor xor loopne push (bad) adc stos in inc pushl jae negl ljmp test mov negl dec mov loopne movsl aaa jae negl add mov cmp out sarb mov jmp testb stc sbb mov xchg add xor leave mov cwtl movsl sahf inc cli xor out push (bad) adc stos in inc pushl jae lock leave (bad) xchg or popf movsl xchg inc xchg mov dec mov pushf inc test sbb mov xchg or cmp sbb add popf test inc fnstcw sbb leave js mov xchg add xor in cmpsb xchg (bad) (bad) cli xor lret mov stos in inc pushl jae lock leave (bad) xchg jmp int loope loopne sbb negl dec mov pushf inc test sbb mov xchg pop mov in out sbb xchg add aaa gs js mov xchg add cmp icebp sbb lds (bad) cli xor (bad) mov call clc inc pushl jae lock mov rol mov negl repnz xchg add aaa jae negl add mov cmp and out roll enter pop adc pusha sub stos in inc stc cmp loop loope mov movsl sahf inc stc cmp cli add mov stos in inc pushl jae sti add rcll mov negl ljmp in inc mov jae negl add sahf movsl nop inc fimull out and xchg pop sahf test inc lret adc pusha sub stos in inc cld xor jecxz mov test inc testb lcall sarb stos in inc pushl jae sti add rcll mov negl in mov in inc mov jae negl add sahf movsl nop inc in pop out and cli cmp repnz sahf test mov out pusha sub stos in inc cli cmp out adc mov test inc testl mov stos in inc pushl jae lcall push leave mov (bad) mov negl fdivrs xchg in inc mov jae negl add sahf movsl xchg mov and xchg add aaa jbe loop add stos in inc in cmp lock lds movsl sahf inc testl mov stos in inc pushl jae negl push mov iret (bad) in sbb negl fadd test cld aaa shl mov negl add xchg or sarl lods xchg add dec or loop add stos in inc cli xor fadd movsl mov jno in inc cmc dec gs clc sbb mov stos in inc pushl jae negl ljmp test mov negl ror lods xchg or aaa jae negl add mov inc or sarl lods xchg add cmp mov xchg add cmp adc sbb lcall inc cmc dec gs loop sarl stos in inc pushl jae lock shrl lds negl aam mov in aaa mov (bad) mov negl add xchg movsl mov cmpsl cmp incb (bad) mov xchg movsbl lret aaa jg iret js mov xchg add cmp adc add lds out inc out xor lock fcomps add aaa jae lock shrl clc inc mov ja sarb xchg repnz xchg jae negl add xchg movsl mov (bad) lock mov mov clc inc jmp pxor xchg add cmp out (bad) sbb mov xchg xadd aam ljmp mov (bad) sbb stos in inc pushl jae lock rcll mov xor in lds in inc xchg jae negl add xchg movsl cwtl inc int and repnz rcll jmp cli inc arpl sbb xchg add cmp out stc sbb cmp loop lcall out cli add mov stos in inc pushl jae lock rcll mov inc jnp sarl mov ljmp sbb mov xchg add inc or iret js lds test inc pushl fs js mov xchg add xor ffreep mov in mov icebp sbb mov stos in inc pushl jae negl dec mov xchg mov sarl mov jecxz fxam nop mov negl add mov cmp out sarb mov cli inc mov add stos in inc stc cmp loop loope mov movsl sahf inc int sub mov out add aaa jae lock mov rolb out icebp sbb mov pushf in inc outsb aaa jae negl add mov cmp adc sbb mov mov aas mov inc leave cmp sahf xchg add cmp sbb int mov xor aaa daa out cld add mov out add aaa jae sti add leave lahf cwtl out jecxz idivb sarl jne es cmpsl sti incl aaa jae icebp sbb sahf xchg add dec jne adc or xchg mov aas cwtl movsl fwait mov jecxz add stos in inc pushl push int xchg dec loope les negl enter sub stos in inc fnstcw adc sti add leave lahf cwtl icebp setb jo sarl jns rolb sti sti mov negl add lods test adc js inc je loopne mov cli inc std aaa jnp repz mov xchg xor xor cmc mov fwait in mov clc sbb mov clc sub stos in inc pushl jae sti add leave lahf cwtl pop aaa ret inc out sub lret mov fdivrp sti mov icebp sbb sahf xchg add xor sbb xchg mov cmp (bad) nop mov out repz mov xchg add cmp sbb mov jle lcall sbb mov imulb add aaa jae negl ljmp (bad) sti inc sbb lret mov xchg ja sti testl sbb mov xchg pop mov jecxz in sub lcall adc js mov xchg add xor rol mov movsl lcall add mov stos in inc pushl jae lock leave (bad) xchg add rol ljmp sbb mov cwtl in mov negl add mov xor push mov mov cmp adc js mov xchg add cmp adc sbb mov mov or mov out negl repnz (bad) pop add aaa jae negl ljmp test mov cli add lds in inc xchg aaa jae negl add mov aaa adc call xchg cmp (bad) xchg rcll push add mov xchg add cmp adc add inc push cwtl lock (bad) xchg mov in pop (bad) pop add aaa jae lock leave (bad) xchg sti add xor std mov xchg add cmp sbb rcll clc inc cld cmp add roll clc inc cld cmp sbb leave xchg clc inc cld cmp add mov stos in inc cld cmp add mov stos in inc cld cmp sbb mov stos in inc cld cmp sbb mov stos in inc cld cmp add mov stos in inc cld cmp add mov stos in inc cld cmp sbb int xchg add cmp sbb int xchg add cmp lcall repnz clc inc cld cmp sbb int xchg add cmp hlt add mov xchg add cmp sbb int xchg add cmp hlt add mov xchg add xor repnz clc inc cld cmp sbb int xchg add cmp hlt add mov xchg add cmp sbb int xchg add cmp hlt add mov xchg add xor repnz clc inc cld cmp add mov xchg add cmp lcall repnz clc inc cld cmp add mov xchg add cmp stc sbb mov xchg add cmp add mov stos in inc std cmp cld add mov stos in inc cli xor clc roll clc inc sti aaa ja std add xor in inc cld cmp add mov stos in inc std cmp cld add mov stos in inc cli xor clc roll clc inc sti aaa ja std add xor in inc cld cmp add mov stos in inc std cmp cld add mov stos in inc cli xor clc roll clc inc sti aaa ja (bad) js xor in inc cld cmp add mov stos in inc std cmp cld add mov stos in inc cli xor clc roll clc inc cld cmp add lds in inc cld cmp add xor in inc cld cmp sbb rcll clc inc cld cmp add mov mov add cmp add int mov add cmp add int mov add cmp add int mov add cmp add int mov add cmp sbb rcll clc inc std cmp (bad) js xor in inc cld cmp sbb lds in inc std cmp stc sbb inc jae jmp inc cld cmp sbb lds in inc std cmp stc sbb inc jae jmp inc cld cmp sbb rcll clc inc cld cmp sbb rcll clc inc std cmp (bad) js xor in mov sarl lods xchg dec icebp (bad) movl int xchg aas mov mov adc add leave mov sti inc (bad) cmp cld add leave mov sti inc repz cli mov rol inc call add mov xchg aas mov dec pop adc add mov xchg aas mov xor inc test sti inc mov fnstsw repz xchg mov adc add xor xchg or (bad) in inc or lds roll mov testl out icebp (bad) cli inc gs sbb mov xchg add dec jp clc sbb inc ja es stos (bad) sarb das adc sbb leave mov enter jnp leave js mov mov inc or iret js cmp repz inc sbb adc adc mov mov adc mov cmp adc sbb mov mov add mov or mov dec adc js int xchg iret mov aad in inc or pop sbb mov xchg icebp movsl (bad) in inc or pop sbb inc ja cmc add inc or sarl lods xchg add inc or sarl lods xchg or inc or sarl lods xchg or (bad) icebp inc or sarl lods xchg xor (bad) in inc or sarl lods xchg mov inc or sarl lods xchg pop mov inc or sarl lods xchg movsbl lds sarl lods xchg xadd lds sarl lods xchg aaa ret mov sarl lods xchg mov dec fs cs fistpll mov dec fs cs fistpll mov dec fs cs fistpll shl mov cs fistpll ret mov cs fistpll ret (bad) icebp inc or sarl lods xchg xor (bad) icebp inc or sarl lods xchg cmp (bad) icebp inc or sarb mov (bad) icebp inc or sarb mov (bad) mov (bad) mov xchg add (bad) loope push adc clc sti inc jb push add (bad) iret xor cli cmp sti xor (bad) (bad) cmp and xlat mov mov inc fcmovnb roll or sarb mov (bad) in inc or sarl lods xchg add (bad) (bad) aaa jno stc sbb inc ffree (bad) mov and mov dec ffreep roll add and mov dec loope roll adc es rcll aam pushl jb in sarl fcmovnb roll or pop sbb mov ffreep aam repz push in sti sbb leave mov enter push in clc add roll mov ret int xchg xor (bad) in inc or sarl lods xchg xor (bad) fnsave pop out and cli cmp jmp inc rorb out and xchg xor (bad) (bad) aaa jae and xchg jno (bad) icebp inc or sbb adc jns (bad) icebp inc or sarl lods xchg aaa (bad) in mov cs or jno int jmp inc or pop sbb mov mov inc jmp roll or sarl lods xchg inc int3 in mov in sarl into in mov out in movsb xchg inc fnstcw adc jecxz sarl out (bad) fiaddl in incb fdivs icebp (bad) loop push adc js int xchg inc movb icebp sbb mov rol aad mov fcmovb movsb xchg inc fcmovnb enter jae pop add mov xchg or (bad) in cmp in pop add rcll aad in inc or adc xadd (bad) aam pop in sbb jmp jno (bad) mov (bad) in enter test lds sarb or xlat mov les leave test xlat mov into pusha add test lds sarb or lret cmp enter dec mov inc fcmovnb lret aaa add enter dec mov inc fcmovnb lret inc sbb into pusha call jno (bad) xchg jg icebp js mov fcmovnb aad testb icebp js mov rol aad out cmp in sbb jmp or (bad) loope pop out sub jmp inc ffree aad fisttpl in bnd rcll enter push in hlt sbb int xchg ja in inc mov stc leave mov sti inc repz cli mov aam lds testl sbb scas (bad) icebp inc or sarl lods xchg cmp (bad) in inc or sarl lods xchg cmp (bad) fidivr push adc sbb mov mov jno (bad) in inc or sarl lods xchg jno (bad) in inc or sarl lods xchg jns (bad) in inc or sarl lods xchg add (bad) fildl in add clc int xchg iret mov roll or les roll mov jmp cmp mov add (bad) mov (bad) in add bsr (bad) icebp inc or les roll mov in sbb xchg mov add (bad) divl add jecxz lret inc fidivr sbb add bsr (bad) out sbb add bsr (bad) sarb sub ljmp jns (bad) fidivr sbb add bsr (bad) icebp inc or adc xor or ret xor and test int mov add cmpsl mov cmp (bad) out cmp in in sbb xchg mov add (bad) xchg mov sub rol mov incl loop mov (bad) fidivr sbb add bsr (bad) (bad) xor out lods mov add (bad) repz push in adc int xchg xor (bad) cmc inc or sarb or aam sarb das in call xchg add (bad) mov inc xor xchg jno (bad) (bad) cmp sub mov jns (bad) (bad) cmp sub mov xor (bad) mov cmp vcmppd addr16 adc mov mov out in adc rcll int cmc inc or sarl lods xchg or (bad) cmc inc or sarl lods xchg inc fcmovnb rolb jmp mov fcmovnb ret inc mov js incb out mov (bad) lock ja incb adc or ret inc fdivs das out incl divb loope ret inc rorl out clc add mov jecxz ret dec jo clc add mov xchg jno (bad) loope pop out clc add cmp xchg jns (bad) xchg mov call or (bad) addl int xchg inc fcmovnb int out sbb loop add jno (bad) fnsave or jbe int xchg mov out cld sbb mov jmp inc or sarl lods xchg inc jmp int cmc inc or sarb mov (bad) cld aaa jae push add add (bad) fbstp jmp dec xchg inc jmp aad in inc or sbb push roll ret inc xchg mov jmp mov (bad) in inc or sarl lods xchg add aaa jae iret pusha call dec out (bad) fdivl loop lods xchg dec icebp (bad) cwtl mov out les mov xchg jno (bad) cmc inc or sarb or aad flds out iret pusha or stos (bad) cmc inc or adc and xchg cwtl das iret scas (bad) cmc inc or les mov mov int cmc inc or sarl lods xchg mov int cmc inc or sarb mov (bad) cmc inc or sarb mov (bad) stc inc or sarb mov (bad) stc inc or sarb mov (bad) stc inc or sarb mov (bad) stc inc or sarb mov (bad) stc inc or sarb mov (bad) stc inc or sarb mov (bad) stc inc or sarb mov in mov cld add mov xchg xor (bad) out xor and or sahf inc int3 cmp inc jne in cwtl movsl sahf inc aam add xor xchg call mov std add lds movsl sahf inc les adc sbb inc jne in cwtl movsl sahf inc mov xor or fwait mov cld add mov cwtl idivl cwtl movsl fwait mov std add mov cwtl idivl cwtl movsl sahf inc repnz jg (bad) pusha fidivl cwtl movsl sahf inc fdivrl sbb mov cwtl movsl sahf inc cli xor sbb or movsl fwait mov (bad) js mov cwtl movsl sahf inc ljmp inc jne in cwtl movsl sahf inc ljmp inc jne pop add cmp cld add mov xchg inc mov hlt rcll mov loop icebp mov int lret inc out xor daa cmp mov xor in mov cld add mov xchg xor in inc mov adc jae std xor in mov cld add mov xchg xor mov hlt rcll mov loop icebp mov fcmovnb lret inc out xor push roll lds cld add mov xchg dec ret test mov loop icebp mov ret test inc pushl pop mov xchg dec ret test inc testl mov xchg jno (bad) out xor sbb jns in mov cld add mov xchg jns test inc mov hlt rcll mov sbb jmp mov out jmp lret inc out xor xor mov dec loope cli inc mov hlt rcll mov cld add mov xchg dec roll loope stc sbb rcll mov lret mov xchg sahf in mov cld add mov xchg iret nop test inc mov hlt rcll inc ljmp inc jne testl std inc jle cld add mov xchg add xor pop mov xchg add cmp cld add mov xchg add cmp ljmp add mov hlt rcll mov das clc fdivl mov icebp inc std inc jle cld add mov xchg xor (bad) loopne sbb ljmp xor (bad) (bad) xor pop mov xchg xor mov hlt rcll mov ljmp xor cmp cld add mov xchg xor (bad) (bad) xor fdivl mov inc jle cld add mov xchg mov std add mov xchg add (bad) (bad) xor fdivl ret in inc std inc jle cld add mov xchg xor cmp cld add mov xchg xor cmp ljmp xor xor repz xchg xor inc jle sbb pop mov xchg xor xor pop mov xchg dec shl icebp inc std inc jle cld add mov xchg dec ret test mov ljmp dec ret test mov jecxz adc jae xlat dec ret test inc test pop mov cwtl aam fxam icebp inc out sbb cld add mov xchg jns test mov sbb pop mov xchg jns test mov ljmp jns test inc out sbb cld add mov xchg jns test mov sbb pop mov xchg dec loope icebp inc out sbb cld add mov xchg iret sahf in inc std inc jle cld add mov xchg iret scas (bad) clc inc jg cli sbb mov xchg mov (bad) mov jecxz adc jae cmc add inc jle cld add mov xchg add inc jg stc sbb mov xchg add mov adc jae in xor mov hlt rcll mov cld add mov xchg xor (bad) cld inc jg cld add mov mov mov hlt rcll inc cld inc jg jecxz cmc rcll ret inc divl sub cwtl add ret in inc xchg mov hlt rcll inc xchg mov hlt rcll inc xchg mov hlt rcll inc xchg mov hlt rcll mov cld add mov xchg iret sahf in mov cld add mov xchg iret sahf in inc xchg mov hlt rcll inc test out cld add mov xchg add mov hlt rcll inc test out cld add mov xchg xor mov hlt rcll inc test out cld add mov xchg xor in inc test out cld add mov xchg dec shl (bad) mov stc sbb rcll inc test out cld add mov xchg jns in inc test out cld add mov xchg dec loope (bad) mov stc sbb rcll inc test out cld add mov xchg iret sahf in mov stc sbb rcll inc fwait mov hlt rcll inc fwait mov hlt rcll mov stc sbb rcll mov stc sbb rcll mov stc sbb rcll mov stc sbb rcll mov stc sbb rcll mov stc sbb rcll inc idivl sbb cld add mov xchg iret sahf in inc idivl sbb cld add mov xchg add cmp cld add mov xchg xor cmp cld add mov xchg inc stc dec add cld add mov xchg xor in inc cmpl loope mov in inc cmpl loope mov in inc cmpl loope mov in inc cmpl loope mov in inc cmpl loope mov in mov cld add mov xchg xor cmp cld add mov xchg mov cld add mov xchg inc mov sbb cld add mov xchg xor in inc mov loope jecxz adc jae std xor in inc mov sbb cld add mov xchg inc fadd int pushf lret (bad) adc mov add dec jns out js leave xchg popf mov and mov dec ret movsl popf mov cs (bad) aad lahf inc (bad) aaa add and (bad) mov mov ja test out das clc cli mov mov aas enter nop cmp and rol xchg ja movsl mov cld add cmp and mov pop cmp or test adc pusha or out (bad) mov adc stc mov fadd ret inc xchg mov (bad) cmp call inc popl adc sbb mov xchg or xor stc lds (bad) lock sub in das roll in mov and cwtl stc pop lods in inc cld cmp sbb mov mov jp negl in mov in inc testl int xchg add inc jle negl or xchg (bad) in inc in cmp negl adc jno (bad) or aaa jae negl enter aam mov aaa jae cld add lds in inc pushl jae cmc add rcll inc pushl jae std add mov mov sahf inc pushl jae std add mov xchg dec ret test inc pushl jae jecxz loopne mov in inc pushl jae std add xor mov (bad) stos (bad) pushl jae lock leave xchg lcall js inc jne (bad) aaa (bad) in mov (bad) js inc jne aad int les jecxz push mov xchg mov jecxz sbb leave mov aaa jae cld add mov mov aam xorl out cld add cmp xchg mov (bad) js mov nop movsl xchg inc xchg jae (bad) sbb mov mov aaa jae (bad) js mov cwtl idivl cwtl movsl xchg inc xchg jae lock mov xchg call inc test jge negl fdivrs popf test inc std cmp negl fadd test repnz mov cmp negl ror lods xchg pop sahf test inc std cmp negl aam mov icebp add cmp negl enter icebp add cmp negl adc jno call inc cld cmp sbb movsbl enter jge lock xor call inc std cmp icebp sbb sahf xchg or cmp sbb mov mov cmp icebp sbb roll out inc cld cmp sbb leave mov out inc cld cmp sbb mov rol inc std cmp icebp sbb mov xchg xadd enter jl cli add mov xchg cpuid test inc std cmp cli add leave mov out inc std cmp cli add mov rol inc cld cmp add rcll enter jl cli add mov mov cmp cli add mov xchg or cmp cli add lds (bad) cld cmp add int xchg aaa ret inc std cmp cli add cmp in aaa movsb test inc std cmp cli add jns jmp ret (bad) cld cmp add mov xchg xor (bad) std cmp sti add mov xchg xor cmp sti add mov (bad) (bad) call sbb mov xchg jg test inc call add mov test cmp leave mov xchg mov in or jg (bad) mov add rcll in xorl cmp testl pushl jae negl push mov stos in inc pushl jae negl add stos in inc pushl jae negl add iret fcmovne mov negl repnz xchg add aaa jae negl add stos in inc pushl jae negl push mov (bad) movsl sahf inc pushl jae negl add (bad) movsl sahf inc pushl jae negl add stos in inc pushl jae negl add (bad) movsl sahf inc ljmp mov xchg add aaa ja negl add stos in inc pushl jae negl add stos in inc cld cmp sbb mov stos in inc pushl jae negl repnz xchg add aaa jae negl add stos in inc pushl jae negl push mov sahf test out negl add lods in inc pushl jae negl add stos in inc pushl jae negl add mov aaa daa out (bad) js mov xchg add aaa ja negl add stos in inc pushl jae negl add stos in inc cld cmp add rcrl clc inc pushl jae negl repnz xchg add aaa jae negl add stos in inc pushl jae negl ror lods xchg add aaa jae negl add stos in inc pushl jae negl push mov stos in inc iret xor sub (bad) clc inc pushl jae negl push mov stos in inc ljmp mov xchg pop mov aaa ja negl ljmp in inc testb negl repnz xchg add inc jnp negl add scas in inc icebp dec jns sti add rcll clc inc out aaa add lock inc jns add sahf movsl xchg mov negl add ret (bad) cli cmp in sub scas in inc (bad) mov out sti add rcll clc inc pushl jae cli add mov xchg pop sahf movsl xchg mov (bad) sbb xor inc sub and aad mov movsl popf mov stc sbb mov xchg jns test inc xchg jmp adc push mov mov in ljmp mov mov inc into test inc mov or xchg enter jbe lock xor repz aaa jae negl add rol push inc dec dec pusha in call fsubrs pop pushf movsl cltd inc iret xor loopne mov push inc test xor sbb ffree int aam je inc clc loope mov das aaa mov aaa cmp adc stc leave push clc add (bad) sarb cmp mov ffree ret aaa push in sarl test rolb sti ret cmp int fdivr dec shl xchg mov add mov mov pop mov inc clc xlat mov ret inc lret adc add leave inc fsubs lret inc jecxz add inc clc push cmp clc daa aas mov out sti add xor testl inc xor (bad) mov iret fcmovne inc xchg push in sarl mov movsl insb inc inc aaa and fisub int push dec inc jnp lock add inc ds or fcmovnbe mov sarl mov adc (bad) (bad) divl adc imulb inc ffree int jecxz js pop pusha sub ret inc fild out frstor mov test xor (bad) out inc sub cmp in lds (bad) lahf mov out repnz lds movsl mov adc js lds (bad) stc dec inc adc fdivr inc test inc jnp adc call xchg inc std inc jg pop sbb mov fdivr inc scas movsl cltd inc out cmp adc pusha sbb cmp std dec stos movsl xchg mov frstor xor fdivr inc jnp mov fildl out cmp fdivrs leave sti repnz fadds out in add sti mov in mov xor mov inc jnp mov adc js mov xchg inc jp lods inc xlat xor adc ffree pop mov inc clc xlat mov ret inc lret adc add leave inc fsubs lret inc jecxz add inc clc push cmp clc sub lods sti lock fild adc sti inc data16 fwait mov pop pusha sub ffree pop mov inc clc xlat mov ret inc lret adc add leave inc fsubs lret inc jecxz add inc clc push cmp clc daa aas mov ljmp fdivr inc jp cmp adc fdivr inc mov dec inc out call fdiv dec leave sti repnz jecxz add cmp add scas in inc jnp repz xor fdivrs shl xchg mov cmp loope lahf cmpsb loope test cmp adc js (bad) (bad) dec ffreep lret inc cmc dec pop out in add inc jp test adc out setl ja call out add dec je in add mov aaa add fcmovnbe inc lret adc add leave inc fsubs lret inc jecxz add inc clc pop cmp test aaa iret fcmovne inc cltd mov add inc mov inc push in sbb sub cld inc jp push mov in add inc ds or fcmovnbe mov sbb or ffree int out gs sbb ror push call in jecxz adc out xchg xchg aas xchg movsl fwait mov sbb add imulb add and aam sbb js stc inc out adc lret inc or (bad) mov (bad) sbb lds sti (bad) mov hlt add int lds add jg loop sbb js jb test es pusha add inc ffree push inc inc aaa add or cmp cwtl add (bad) lds inc inc js cmp fcomps scas in inc mov in dec movb out xor push int push pop inc outsb aaa or xor fdivr inc jnp mov adc adc (bad) lds dec dec sbb mov enter sbb out ss mov inc jnp pop inc (bad) aaa push in fsubs mov scas movsl cltd inc cmpl add test dec addr16 sbb add imulb add aaa aaa out xor in lds ret inc sub fsubs mov mov cmp adc xchg (bad) (bad) orl cmp clc or sbb mov in or call mov adc inc mov sbb orl add sbb dec stos movsl mov adc js leave mov cmp adc sbb mov iret fcmovne inc xchg push in cmp in lds (bad) lahf mov out cmc add mov sar inc inc jb push adc add cmp decb fcmovnb inc out js aaa add mov call scas mov out js mov mov in mov cmp in lds (bad) lahf mov out repnz lds movsl mov adc js roll mov in cmp out inc iret in inc mov call inc ffree push inc inc aaa daa out cmc add xor enter fcmovnbe inc lret in cmp in lds (bad) lahf mov out repnz lds movsl mov adc js roll (bad) mov aaa add mov fsubs aaa iret fcmovnb inc in cmp int fdivr inc scas movsl cltd inc iret xor out pop clc xor iret fcmovne inc sti xor std mov fsubs xor movsl inc xorb adc push stc inc out js aaa add mov fsubs aaa iret fcmovnb inc in cmp adc add inc ds or fcmovnbe mov in pop inc or testl add xor sbb fisub int push cli inc aad add es leave inc (bad) and iret fcmovne inc xchg je cmp fdivrs jb push mov sbb sbb mov mov cmp cmp fdivrs lods in inc dec cmp in sarl mov adc (bad) (bad) divl adc imulb inc ffree int jecxz js inc clc stc inc cs sti inc cmpsl movsl xchg mov pop add mov (bad) or add cmp into add mov scas in mov pop add shll xor mov xchg mov out in adc out add cmp adc clc sub lods sti lcall add int fdivr inc cmpsb mov cmp cmp fdivrs lods in mov pop add inc jo enter lods inc xlat xor adc jne push inc in add cmp clc sub mov inc jns pop add inc jo enter lods inc xlat xor adc aad xchg inc inc mov adc js mov mov inc test inc gs sbb in mov jne dec mov inc clc in dec fdivr inc test fwait mov ds stc inc jns pop or dec mov sbb in mov xchg mov add cmp pop mov call scas mov in add inc ds or fcmovnbe mov in add inc ds or (bad) in aaa pop out sti add leave pop out inc jnp movsl inc jmp jnp cmp sbb mov in inc jecxz or inc clc cmc mov call mov in cmp out inc jnp movsl inc jmp jnp cmp sbb mov add push out in sbb cmp add in mov cmp out xchg xchg or dec mov sbb in mov mov add push add shrl xor movsl inc jecxz add inc clc pop cmp clc sub scas in inc addl rcll roll es js mov call push inc in add cmp xchg aaa (bad) (bad) divb cmp aas clc out int divb aaa (bad) (bad) xchg mov adc pusha clc mov xchg pop (bad) fcmovnu mov frstor sarl lods in inc jbe or xor fdivrs mov dec je sbb repz call ljmp sbb leave push out aaa aam lret inc sti inc jae (bad) js mov cmpsb fisttpl fcmovnbe inc xlat inc push out hlt add mov call movsl inc fadds out in sbb and in mov pop add inc sets aaa iret fcmovnb inc mov adc push pop mov fdivrs mov call pop inc loop jnp cmp fsubs aaa leave sti cld mov (bad) js mov call push inc repz jnp pop sbb mov scas in mov push add leave pop out inc jnp movsl inc jmp jnp cmp sbb mov in mov cmp call lret inc adc sbb cmc shrl xor sti sti mov xor clc add in mov or call push mov in sbb cmp sub lods sti xchg inc mov add mov (bad) lds add fstpt sar inc inc popa cmp out frstor shrl lret inc leave dec jne inc clc fnstcw jo mov adc fdivrs jb push inc repz jnp pop sbb mov lods sti xchg inc cwtl dec jno frstor xor fcomps add inc jns pop add inc jne leave dec leave sti repnz fadds out in add sti mov in mov frstor shrl lret inc int3 aaa aas out frstor xor fcomps add inc jns pop add inc jne leave dec leave sti repnz fadds out in add sti mov in mov frstor shrl lret inc call js mov push mov in adc mov fcomps add inc sub fisub mov fadd lret mov add add mov mov sti adc js mov mov setp aas adc js int out xor (bad) jecxz push out sti add int divb aaa (bad) (bad) xchg mov adc pusha sbb sub stc inc faddp lds pop add mov fadd lret mov add add mov mov sti adc js mov out inc mov cmp adc pusha sbb cmp std dec stos movsl xchg mov frstor xor fdivr inc jnp mov fildl out cmp fdivrs leave sti repnz fadds out in add sti mov in mov cmc add leave pop out or mov pop add mov test inc jg out js rcrl inc mov xor sbb mov add sub pop add leave mov ret mov adc (bad) lock (bad) ret inc js pop pusha sub lahf movsl mov adc pusha sti mov loopne pop inc inc inc js cmp (bad) cli inc into in mov fdivrs mov mov dec leave sti repnz fadds out in add sti mov in mov frstor shrl lret inc iret xor into leave pop out or mov pop add mov test inc jg out js rcrl inc mov xor into leave pop out or mov pop add mov mov xor call dec leave sti cli inc (bad) adc test aaa iret fcmovnbe mov repnz lds sbb adc leave shll cmc mov fisub cmp loop lods in mov fisub xor pop or cmp out cmp fdivrs jl xor inc jnp and adc into in inc cld aaa push out out js int out inc jp test out cmc add mov call mov int add inc clc into leave pop out aaa mov jmp out adc int push pop inc mov clc sti inc and add iret in inc inc aaa cmp fisub cmp (bad) (bad) lds dec dec push adc pusha fidivr rol ret mov cmp fdivr inc ffree pop mov aaa add mov fdivr inc jge add adc pop cmp fdivr inc test dec adc sti add leave pop out inc rcr ret xor ffreep callw stos movsl xchg mov inc clc add cmp clc inc jge add cmp xchg or dec fs adc call dec (bad) sti repnz mov pop adc lret xchg aaa jb mov out cmp lret cmpsb push aaa iret fucomi inc mov add inc arpl cmp (bad) aad adc (bad) js mov enter movsl mov out adc call dec (bad) sti repnz mov pop adc lret clc sub mov inc jns pop add inc add in ffree int fimul adc add mov shl testl add mov jno dec mov sbb jmp (bad) push pop mov inc clc fcmovnb mov stc inc (bad) sti (bad) mov sti add (bad) mov inc fnstsw add add mov enter mov int sbb add out cmp (bad) aad adc (bad) js mov enter mov int sbb add out cmp (bad) leave dec sub mov enter mov int sbb add out cmp (bad) in aaa sbb (bad) js rcll insb inc add cmovno cmpsb push aaa iret fucomi inc mov add inc arpl cmp (bad) aad adc (bad) js mov enter in mov push add lds sti sti mov inc clc fdivrs jb pop inc out jp add cli mov xchg inc jp push mov hlt add inc add in ffree int fimul adc add mov shl testl add roll mov in ds jmp mov sbb xchg aaa sbb (bad) js rcll insb inc add sbb iret fcmovnb inc in cmp pop add leave inc fdivr inc int3 sti call out add cli mov xchg inc jp push mov sti add mov (bad) lds add adc mov test inc (bad) cmp adc mov push push mov cmp out inc ffree int fnstsw sub (bad) sbb int fdivr inc test xchg inc out js aaa add mov xchg pop rcr int3 mov movb mov cmpsb mov or sbb add test mov in sbb add lret mov sti add mov mov or xor cmp cmp sbb mov cmovns fcmovnbe inc xchg mov out hlt add lds sbb xchg aaa sbb (bad) js rcll insb inc add adc (bad) ret mov adc push cmp clc sub lods sti call out add cli mov xchg inc jp push mov hlt add lds sbb xchg aaa sbb (bad) js rcll insb inc add sbb (bad) fcmovnbe mov fisub xor movsl xchg mov inc clc fnstcw jo mov out hlt add lds cmp adc fsubs (bad) (bad) (bad) aaa aas out frstor mov scas movsl cltd inc enter (bad) js int call lret dec sbb xor fdivr inc scas movsl cltd inc out xor push int push pop inc mov clc mov xor cmp mov fdivr dec shl xchg mov add mov mov dec loopne xchg inc dec mov in adc lds pop mov push pusha sub iret fcmovnbe mov adc lds (bad) pushf mov adc sbb mov rolw nop mov cmp fdivrs jb mov adc sti inc data16 fwait mov fsubs mov aad jmp stc inc js aaa add mov fsubs aaa iret fcmovnb inc in cmp out xor fnstcw leave sti (bad) mov fdivrs mov clc xor iret fcmovnb inc in cmp out xor fnstcw leave sti (bad) mov fdivrs mov mov dec loopne xchg inc dec mov in adc lds cld mov inc clc in inc fdivr inc fcmovb cmpsb mov inc clc pop cmp (bad) incl (bad) mov int cmp push push inc inc aaa daa out sti add mov iret in inc mov call inc ffree push inc inc aaa xor xor fdivrs shl xchg mov cmp loope lea (bad) mov cmc add mov fsubs mov pop sbb mov cwtl fildl mov cli out frstor cmp fsubs aaa aam lret inc fildl adc add mov fsubs inc addl mov out aaa iret fcmovne inc xchg or frstor mov (bad) and (bad) (bad) mov out frstor cmp (bad) cld inc into in mov enter sub sbb inc dec inc jnp and adc into in inc cmpl or insb sbb adc pusha add mov sti repnz jecxz add cmp add lods in mov pop add inc jb (bad) aaa (bad) (bad) repz gs call push out inc out pop adc and (bad) sti repz (bad) aaa je cmp fdivrs jb scas mov add cli mov call cmpl mov sti repnz jecxz add cmp add lods sti cld mov inc clc in inc fdivr inc fcmovb cmpsb mov push sbb lds stc inc jecxz add cmp add rol push inc inc aaa pop out out js mov call cltd inc std cmp cmp fdivr inc scas movsl cltd inc aad adc (bad) js mov enter sbb adc xchg aaa jne mov in cmp fdivr inc iret in mov out js mov out lods in mov pop add inc or in mov cmc add mov sar inc inc insb dec inc adc idivb rcr cli inc out inc push out (bad) sbb int fdiv dec sar inc inc insb dec inc in sbb in mov lods sti lock fild adc pusha adc push rolb jnp cmp add mov inc jns pop add inc jae (bad) xor fcmovnbe inc fildl out cmp into leave lcall inc out xor push int push pop inc mov add shl xchg mov fidivrl cmp mov inc jge add out in ffreep push cld inc test lcall add lds sub jo mov out hlt add (bad) ret mov add out std mov (bad) lds adc js lds sub scas in mov push add inc cs sti inc cmpsl movsl xchg mov pop add lds sti (bad) mov sti add mov (bad) in inc std cmp add leave lcall mov pop add inc add mov adc add cmp and lret inc jecxz cmp sbb cmc shrl cmpps mov pop add lds xchg inc out js cmp out aaa mov jmp adc js mov mov inc jge add out (bad) js mov call lods inc lea adc add mov sar lock fild adc pop mov fdivr inc test aaa cmp aas clc loop inc fsubs mov pop sbb mov xchg or aaa daa out sti add mov shl xchg inc std inc jg cmp call mov xchg mov out in adc out (bad) lds dec dec push adc js mov clc xor iret fcmovnb inc in cmp adc js int test inc ffree pop mov push add mov test mov out frstor cmp fsubs aaa aam lret inc leave dec sub mov enter lds dec inc adc sbb cmc shrl setl ja call out or movsl inc pushf mov adc add mov mov inc jns pop add inc add cli inc out inc sub sarl mov or inc mov pusha sbb and sbb inc inc aaa xor fistpll rcll dec into in inc out xor (bad) mov (bad) in inc add sbb cmp das aaa (bad) in mov inc clc fdivrs jb scas mov adc mov (bad) cld inc jp push mov xor data16 ljmp clc fdivrs jne cmp inc jp in sbb or enter lods inc xlat xor jmp dec (bad) std inc rcr ret cmp adc sbb inc jp push mov frstor lds (bad) xchg mov in add add mov mov sti adc js mov mov aaa (bad) in mov inc clc in lds movsl insb inc add clc call inc into in mov sbb std mov aam lret inc out xor push int push pop inc mov clc sti inc sub and fadd incl cmp adc js cmp mov inc jge add out in ffreep push cld inc scas movsl cltd inc sti inc jae fisub cmp fdivr inc test mov adc pusha stc mov mov inc jge movsb inc out cs fidivr mov push mov in adc mov fcomps add rcll clc in inc fdivr inc fcmovb cmpsb mov in or inc test insb inc mov add leave inc fdivr inc mov aaa or fisub (bad) ljmp inc js cmp add push call jmp adc sbb mov leave sti cli inc (bad) adc test aaa aam lret inc out xor sti mov ret inc fild out frstor mov mov dec leave sti repnz fadds out in add sti mov in mov movb mov loopne jmp (bad) dec adc (bad) js lds sbb mov inc clc fdivrs push dec push adc pusha or leave sti cli inc (bad) adc test aaa aam lret inc cld aaa or fisub (bad) ljmp inc js cmp sbb cld push rolb aaa addr16 push sbb lds (bad) hlt dec sub fidivr mov push mov in adc mov fcomps add xor in lds sbb in adc or sbb flds fcmovnbe mov frstor (bad) mov std xor fcmovnbe mov out dec cmp mov inc jge add out in ffreep push cld inc test lcall add lds sub jo mov out hlt add int push pop mov (bad) js lds lds dec dec pusha in call fsubrs add fcmovnb inc mov add leave inc (bad) lock (bad) ret inc push out sti add rcll aaa (bad) in mov inc clc in andl into in mov frstor xor fsubrs add fcmovnb inc mov add leave inc (bad) lock (bad) ret inc push out hlt add int lds add jg loop sbb js add adc pop cmp fdivr inc test dec pop adc in inc fdivr inc lret mov (bad) js int call push mov movl add in mov adc mov test cmp add cli mov (bad) or (bad) cwtl mov in sbb in mov ret inc fisttpll in call fdivr inc test cmp add int fdivr inc (bad) sti repnz jecxz add inc clc push cmp pop or dec mov sbb in mov xchg mov pop adc cmc shrl xor movsl inc jecxz add inc clc push cmp push cmpps mov cmp fdivrs iret lds add loopne movsb fdivr dec shl xchg mov cmp adc jo mov in sbb ror push call cltd inc pushl pop cmp rolb insb inc inc cmp mov sar inc inc insb dec inc adc loop inc call mov int add inc clc fdivrs lods sti lock cwtl mov adc call lds adc mov fsubrs mov aaa cmp into add shrl add inc jns pop add mov lds in mov cmp call lds into add shrl add cmp adc fdivr inc ffree pop mov xor fdivrs lods sti cld mov cmp out aaa mov jmp in sbb ror pop out inc mov inc jae (bad) js mov cmpsb or iret fcmovnbe mov adc lds fcmovne mov cmp out aaa mov jmp adc fdivr inc into in mov xor cmc mov fdivr inc test mov out in adc out pop (bad) fucomi inc decl adc js mov push push inc inc aaa daa out sti add mov shl xchg mov (bad) js mov call cltd inc pushl adc shl cmc mov cmp push pop mov fdivrs mov cmpsb loope test aaa and fisub int push lds fistpll mov mov dec shl std mov sbb cli mov call push mov xor fdivrs mov cli inc aad add and adc shl jmp faddl adc imulb add inc jns pop add inc or movsl jo inc inc js cmp adc jo mov in sbb ror push call cltd inc aad adc (bad) js mov enter (bad) fisttpll adc call aaa aam lret inc pushl in mov test out enter inc clc ret fsubs xor movsl inc lea push adc add lds movsl cltd inc out cmp adc pusha sbb cmp std dec stos movsl nop mov xor sti inc and add iret in inc inc aaa cmp fisub cmp loop scas in inc jnp lock clc in lds fcmovnbe inc pushl mov aaa (bad) (bad) lahf mov out in adc out add fcmovnb inc mov add leave inc (bad) lock (bad) ret inc push out hlt add mov (bad) incl movsl xchg mov int hlt int push ret xor idivb leave sti cli inc (bad) adc test aaa aam lret inc out xor push int push pop inc mov add shl xchg mov fidivrl cmp cwtl fildl mov js cmp out or mov es leave inc fsubs aaa iret fcmovnbe mov xor sti inc and sub pushf movsl mov out in add mov (bad) xchg mov in add add mov mov sti adc js mov mov inc jge add out in ffreep push cld inc mov inc jg cmp adc lret inc out pop adc add mov leave sti cli inc (bad) adc test aaa aam lret inc stc dec jne (bad) pusha sbb bound inc faddp lds (bad) js mov call in movb sti add mov shl jmp loopne add call fdivr inc test mov adc in roll mov in cmp rolw cwtl inc fild adc xchg add (bad) loopne add call fdivr inc test mov adc in roll push inc add in fsubl cmp fdiv dec (bad) sti repz (bad) aaa or mov call mov int add inc clc call inc into in mov fidivr mov push mov in adc mov fcomps add cmp in cmp push xchg xor into leave lcall mov push add mov leave sti cli inc (bad) adc test aaa (bad) lock repz jnp pop sbb mov lods in mov pop add inc or pop inc inc inc js inc clc cmc mov fsubs xor mov out frstor xor fcomps add sbb sbb std mov fsubs xor pop inc (bad) aaa add aad stc mov (bad) sub mov inc clc in dec fdivr dec shl xchg mov add mov xchg dec loopne pop mov repnz roll dec mov sbb in mov mov add cmp xchg or dec mov sbb in mov mov add cmp xchg pop into lds add std mov aad roll es js mov test aaa (bad) lds out cmp in scas xchg add mov int ja sbb add iret fcmovnb inc in cmp adc add leave push (bad) or add pop in add cli mov (bad) or (bad) cwtl mov in sbb in mov jne mov in cmp fdiv dec (bad) sti repnz xchg cmp add cli mov (bad) or (bad) cwtl mov in sbb in mov jne mov in cmp clc xor lcall adc js int out xor (bad) jecxz das adc add mov into in mov (bad) js mov call push mov aad sbb ds inc jp movsl inc jmp gs sbb ror push call cltd inc aad adc (bad) js mov enter movsl jecxz (bad) xor adc iret fcmovnb inc in cmp in enter sub lds out frstor xor fcomps add cmp in cmp clc cmovg (bad) sarb or mov out scas in mov sbb in mov jp dec mov cmp and leave sti cli inc (bad) adc test aaa aam lret inc out xor push int push pop inc mov sbb lds sbb divb cmp (bad) pusha sub jge dec mov sbb add rcr loopne test out hlt add int call xchg mov hlt add int rolw mov xlat inc jg cmp pop mov xchg pop xor fcomi mov adc mov xchg inc jp mov in cmp call mov xchg mov out in adc out add inc jns pop add inc or pop inc inc inc push out (bad) sbb int fdiv dec sar inc inc bound call add inc jns pop add inc add roll inc adc pop mov fdiv dec iret in inc leave dec sub mov enter in mov sbb add (bad) ret mov adc pop cmp std xor fcmovnbe mov (bad) sbb int fdiv dec sar inc inc pusha cmp inc clc fdivrs rcr (bad) mov frstor roll dec leave sti in clc cmp adc pusha pextrw mov sbb mov push adc mov inc scas movsl cltd inc pushl pop cmp ljmp aaa cmp (bad) js lds add cmp out add inc jns pop add inc jne leave dec (bad) ret cmp xor loopne movsb fdivr inc into in mov in sbb and std inc test xor pop cmp clc sub scas in mov sbb add test xor mov sarb es pusha xor call ljmp clc fdivrs jne mov xchg mov in sbb add test xor mov sarb es pusha xor call ljmp clc fdivrs jne scas mov in std mov sar cld mov daa add mov push aaa add add add mov pop inc shl repz push add shrl xor movsl inc jecxz add inc clc push cmp cli aaa jne mov in cmp call nop inc fadds adc mov add js inc clc fnstcw fadd xchg inc xchg inc out jmp mov in inc lock add (bad) js lds add xor enter xrelease mov out sti add mov (bad) lds add std mov (bad) in inc lea adc add mov divb aaa (bad) lds mov add mov push xor lds aad stc inc out sbb cmp out inc ffree int fnstsw sub cmc add mov sar inc inc arpl sbb (bad) js rcll dec inc mov clc in lds sbb in adc or sbb flds fcmovnbe mov frstor (bad) mov std xor fcmovnbe mov out dec cmp fcmovne mov add lds sub jo mov out sti add int out inc rcr rolb inc adc call aaa leave sti clc inc enter inc clc lret rcll fwait mov pop add inc jae aad into in mov sbb ss das fdivr inc test aaa pxor fdivrs ret mov sbb add test inc js cmp fdiv dec shl xchg mov add mov cwtl fiadd sbb mov clc lret (bad) mov or iret fcmovnbe mov pop sbb mov xchg bswap fcmovnbe mov adc ss arpl or movsl inc pushf mov adc add mov leave fcmovnbe mov adc ss arpl add rcll clc in inc fdivr inc fcmovb cmpsb mov fisub int rolw mov out in sbb js mov in sbb add fdivr inc test cmp out push sbb lds in mov xor in (bad) lds sti repnz fnstsw cmp xor fdivrs stos movsl mov adc pusha or jp pop inc jmp cmp into add mov scas in inc imul adc pusha add mov cmovns fcmovnbe inc xchg mov adc out int fdivr inc cmpsb mov cmp cmp fdivrs test mov stc mov fdivr inc scas movsl cltd inc stc dec je xor in (bad) lds sti repnz fnstsw cmp lds mov js inc clc in lds testl add mov insl add ja sbb in mov xchg mov jp add stc mov xchg pop into lds dec dec adc in inc call xchg aaa je cmp fdivrs jne mov repz int3 leave mov in mov push add (bad) mov mov sti add rcrl inc jp inc inc cmpsl cmp push add mov test mov out adc xchg add cmp adc sbb mov fadd in addl mov ret inc rolb out (bad) js lds sbb out jmp adc rcr int mov pop adc fdivrs jne inc mov jmp adc loope pop inc mov js mov (bad) or (bad) lea pop adc add mov test mov out adc xchg add dec mov adc divb (bad) lds dec dec push adc js mov clc xor iret fcmovnb inc in cmp in fsubs inc sub and aam lret inc pushl adc shl cmc mov fisub int (bad) cmovns fcmovnbe inc xchg mov adc in roll cmp in add mov into in inc cli cmp cmp call jecxz int sub roll movsl inc fadds out in sbb and sti call out frstor cmp clc xor mov inc je in inc dec call jecxz sarb cmp shll xor inc inc mov or xor fdivrs insl add or in sbb and in mov fisub mov fadd sti mov cmp in (bad) lds sti repnz fnstsw add aaa add mov cmpsb out jg mov adc out subl mov cmp out aaa mov jmp adc js int call add cmp ud1 push fdivr inc test xchg mov (bad) js mov fsubs mov add add mov mov sti adc js mov mov xor test jecxz js inc clc loope mov sti call adc ljmpw inc xchg aaa insl adc out aaa iret fcmovne inc fwait mov out out pusha or leave sti cli inc (bad) adc test aaa aam lret inc out cmp adc pusha icebp lds inc test aaa aas out cmp fdivrs aam into mov pop sbb add fcmovnbe mov fisub xor (bad) cli inc (bad) sti in test clc fdivrs jne mov int jbe inc clc fdivrs lahf movsl lods inc inc mov out hlt add int fdiv dec leave sti repnz jecxz add cmp add xchg movsl jecxz int sub mov test dec loope pop mov push sbb lds movsl mov adc pusha clc mov xchg aaa jne mov in ds out int fdivr dec stos movsl xchg mov call fdiv dec leave sti repnz jecxz add cmp add outsl sbb mov sbb ror lcall mov add mov outsl sbb fisub int push lods inc cmpl in dec clc out int call nop inc fadds adc mov add inc inc std inc push out cmp (bad) mov jp lods inc divl sbb sub and shl inc dec dec fs inc clc stc inc and sub pushf movsl jecxz sarb or call cmpsb fisttpl fcmovnbe inc xlat inc push out hlt add int (bad) (bad) dec (bad) ret dec adc xlat mov (bad) (bad) inc out inc jg cmp xchg add aad pop mov push add mov lods in mov int cmovno test inc ret mov into add inc les movsl cltd inc cld aaa or fisub (bad) ljmp inc adc sbb cmc shrl add fcmovnb inc mov add leave inc (bad) lock (bad) ret inc push out sti add mov fsubs xor adc cmp into leave pop out aaa ja cmp cmp adc add mov scas in mov out js mov call lds in adc out or cmp rcrl dec shl xchg mov cmp mov dec leave sti repnz fadds out in add sti mov in mov adc adc inc out dec shl xchg mov fsubl int call rolb inc gs sbb ror inc (bad) sti inc ffree xchg inc mov in test leave dec leave sti repnz fadds out in add sti mov in mov xor clc add in mov or retw mov add out cld mov pushf movsl xchg mov inc clc into leave push call mov adc pusha sub lret inc fisttpll adc js mov xchg inc test xor cld mov test cmp add cli mov (bad) or (bad) cwtl mov in sbb in mov ret mov fisub xor (bad) cli inc (bad) sti in movsb cmp in ffreep push and pushf movsl xchg mov inc clc into leave push call jmp in add add mov mov sti adc js mov cwtl fisttp (bad) orb fidivr mov push mov in adc mov fcomps add dec jbe inc clc fdivrs lahf movsl lods inc inc mov adc sbb lds in mov (bad) js lds fcmovnb inc mov add leave inc (bad) lock (bad) ret inc push out sti add mov jp mov out sbb cmc shll cmp out adc lds sbb mov js mov push mov in adc mov fcomps add dec jbe inc clc fdivrs lahf movsl lods inc inc mov out repnz lds sti (bad) mov push add mov leave sti cli inc (bad) adc test aaa aam lret inc cmpl loope mov (bad) (bad) cmp out out pusha add mov pop inc xlat fcmovnbe inc fildl adc mov dec leave sti repnz fadds out in add sti mov in mov fidivr int clc xor (bad) lds inc inc adc sbb leave test fcmovnbe mov cmp out dec shl xchg mov cmp and leave sti cli inc (bad) adc test aaa aam lret inc cmpl loope mov (bad) (bad) cmp out call call xchg inc cs fidivr mov push mov in adc mov fcomps add int call mov inc test fwait mov adc mov push lret inc xchg pxor data16 cltd movsl cltd mov cmp in (bad) lds sti repnz out js cmp cmp fdiv dec shl ljmp clc into leave pop out aaa (bad) in inc add clc idivb iret in inc mov call inc ffree push inc inc aaa sub int sbb add (bad) mov adc lds fcmovnbe mov cmp clc or add and cmp fdivrs lods sti lcall add mov call test adc sbb mov out inc ffree int out gs sbb ror push call jmp adc add inc ds or fcmovne mov cmp clc or add and cmp fdivrs stos in inc pushl jae negl add mov inc sub cmc add inc jns roll in inc xlat inc push out (bad) sbb roll sti inc mov add sahf xchg xor inc sbb cmc add cmp jmp mov sti inc int and cmc add cmp rolb in inc mov add sahf xchg xor inc push out icebp sbb sahf xchg inc mov inc push out (bad) sbb mov xchg xor mov out cmc add inc jns jmp mov sti inc repnz jns cmc add inc jns enter sti inc rorb out cmc add lds movsl cltd inc aad sbb negl add mov jmp out cmc add cmp add sahf movsl cltd inc int and (bad) sbb roll lret inc leave dec adc hlt add inc jns pop or inc push out cmc add leave mov lret inc enter (bad) sbb inc fcmovnb lret inc xchg mov in mov sahf movsl cltd inc int and (bad) sbb roll lret inc pushl add xchg lret inc fildl out (bad) sbb mov xchg aaa aam enter pusha adc pusha jmp inc fcmovnb lret inc int3 aaa daa out sti add rcll jmp out cmc add xor roll test inc fnstsw adc hlt add leave mov lret inc xlat inc push out sti add lds movsl cltd inc int3 aaa daa out cmc add mov scas movsl cltd inc std cmp (bad) sbb mov mov jmp out (bad) sbb mov xchg dec into in inc (bad) xor cmovno rolb movsl sahf inc pushl jns lret roll lret inc (bad) out cmc add mov shl inc xlat inc push out (bad) sbb mov into in inc (bad) cmp cmc add inc jns xlat dec iret in inc movb negl add stos in inc jne jge (bad) sbb mov into in inc xchg mov out cmc add inc jns rolb movsl sahf inc movb negl add shl inc xlat inc push out (bad) sbb mov into in inc (bad) cmp cmc add inc jns xlat dec iret in inc movb negl add (bad) in inc sarl sub cmc add mov mov mov call add (bad) repz ljmp movsl cltd inc sarl sub (bad) sbb aaa aam lret inc aad sbb (bad) sbb xor (bad) xlat inc push out cmc add mov xchg xor (bad) int and cmc add mov sahf movsl cltd inc cmpl aam lods xchg add (bad) std cmp cmc add rcll cltd inc leave dec adc sti add mov int3 (bad) aam pop out cmc add mov xchg inc mov aaa and cmc add rcll clc inc pushl jns lret roll lret inc (bad) out cmc add mov shl inc xlat inc push out (bad) sbb mov into in inc (bad) cmp cmc add inc jns xlat dec iret in inc movl mov cwtl or inc int and (bad) sbb roll enter sub negl add lods test inc int and (bad) sbb mov xchg inc fcmovnb lret inc xlat inc push out cmc add mov xchg xor mov out cmc add inc jns jmp mov sti inc (bad) out cmc add mov fcmovnb lret inc lret out cmc add roll jmp out (bad) sbb roll clc inc pushl popa adc xchg inc fcmovnb lret inc int3 aaa daa out cmc add mov xchg inc mov mov add add (bad) lret out (bad) sbb mov xchg inc int3 in inc (bad) xor hlt leave mov lret inc xchg mov out cmc add lds test inc int3 aaa daa out cli add mov cwtl movsl cltd inc out cmp mov mov cmp out (bad) sbb mov scas movsl cltd inc (bad) out cmc add mov mov aaa jae negl add jle lods inc repnz adc sbb mov lock ffreep lret mov fdivrs (bad) fwait in cli dec or mov xchg loopne mov sub adc add cltd push lcall add dec mov cmp adc sbb int mov add cmp lock mov mov add inc jnp pop sbb add cmp in lret mov mov xor adc movsb (bad) or stos in mov negl add scas in inc fwait cmp lds shll inc sti inc js lock mov xchg or inc jnp pop sbb aaa mov les icebp sbb mov xchg add dec jne out adc mov mov js add add movsb xchg add cmp adc sbb mov xchg xadd int in sbb rcll clc inc pushl jg add bsr mov je (bad) sbb mov mov call out lock rcrl out movsl aaa jg sbb (bad) mov lods in inc in cmp adc js mov xchg sti add aaa add lock mov xchg jg lcall add mov cld mov add add mov les add add xchg movsl sahf inc testb sti sbb mov xchg movsl sahf inc (bad) pop out negl in push sbb mov cmp hlt sbb cmp repz cmp iret js mov (bad) or mov cmp mov xchg add cmp out lock sarl lock pushl jle sbb or test std inc (bad) out push sbb pop stos in inc pushl jg jmp mov pop xchg jl repnz mov mov dec fs negl push mov rcr inc (bad) xor or mov and (bad) movsl sahf inc std cmp sarb mov (bad) icebp cmp bnd cmp cwtl incb stos in inc stc dec adc js (bad) mov and mov xor das mov stos in mov lds (bad) mov and mov xor das mov sahf test inc std cmp add and mov sbb test jnp negl dec mov jno pop cmp repz cmp cwtl cli add cmp int or dec clc and mov out movsl aaa jae push sbb (bad) mulb or jae int sbb xchg pop lods sti xchg mov add cmp pop cmpsb (bad) cmp fcmovnb mov sarl nop cmpsb lock leave fninit mov negl repnz cmpsb push pop lret fistpl pusha dec pusha in iret js (bad) repnz rcr inc cld dec fs sarb mulb or or negl repnz cmpsb repnz (bad) fistpl pusha dec pusha in iret js (bad) repnz rcr inc cld dec fs sarb mulb or dec adc sbb mov rcr inc (bad) xor or mov and lahf test add sbb xor (bad) icebp cmp repz rorl pop sahf test add and mov sbb test ja pop sbb xor xchg lock lods in inc repnz add pop xchg (bad) sarl nop cmpsb lock enter dec cmp out in sub mov mov jae into js mov mov cmp int3 js (bad) mov or mov xor cmp or in mov (bad) sbb mov (bad) or mov cmp in adc movsb cmpsb adc mov sbb xchg xor cmp adc js mov mov cmp adc js leave test test aaa jg lcall add int les (bad) js mov int int3 mov sbb xchg xor cmp in fidivrl mov mov cmp in fidivrl (bad) mov or lea sbb push add mov mov lock stc dec fs sbb sub jno in xor cmp adc js mov (bad) adc test cld inc orl mov test ja pop sbb lds test adc js mov xchg add cmp adc sbb mov xchg or cmp negl push mov mov jno icebp sbb mov cmpsb or rol clc inc xchg out lock lds test out jecxz cli roll xchg inc cmpl ljmp movsl lcall add mov stos in inc in cmp jecxz repnz xchg sti add cmp adc sbb add cmp in lret rcll lcall sbb roll les negl fdivrs mov clc inc std cmp sbb sub mov xor idivb lea gs sbb mov (bad) or mov inc fs sbb mov mov aaa mov xchg mov lcall push mov mov hlt mov (bad) js mov test sarl js mov xchg movsl outsl inc pop cmp sbb repnz movsl outsl inc insb cmp icebp sbb roll mov negl cli roll les adc (bad) or mov xor or dec (bad) or mov cmp loopne push mov mov cmp loope push mov mov cmp js mov mov cmp jmp call add aaa jae negl add stos in mov adc xchg (bad) jns cmp sbb mov cwtl aam loopne clc inc out jg out js mov out xor fcmovnb inc out sbb hlt add mov (bad) mov sub std sbb cmp out add inc jnp (bad) js mov xchg add aaa jae negl add mov aaa jae negl ljmp mov js sbb out mov rcr inc in sbb rcrl lahf mov (bad) sbb mov rol inc cmpb out add (bad) mov xchg jle lds shll inc out inc je lock mov mov or aaa jo out sub nop cmpsb add lods in inc xchg out sarb lods mov lcall sbb mov xchg pop sahf test mov cmc sbb mov (bad) or mov dec gs sti sbb mov pop sbb inc jnp ljmp call rolb mov in sbb in mov stos in inc ljmp mov xchg push bswap fcomi inc cmc aaa aaa out fidivr mov out inc into in mov (bad) js mov call push mov negl enter hlt add dec inc out in sbb sbb sbb out negl add mov inc jbe sarl push out pop cwtl movsl insb inc mov js leave mov stc mov negl push cmp lds adc pusha add xchg test aaa iret fcmovne inc cltd mov add inc mov aaa jl lock int mov or aaa jo out sub nop cmpsb sti xor inc jp (bad) js rcrl les leave js mov jmp lock xchg aaa jae adc xchg ljmp cmp lcall cli roll xchg mov sti sbb mov xchg movsl sahf inc sti aaa jno pop add mov in inc xchg aaa jae (bad) js mov int sarb sbb mov cmpsb out int sarb sbb roll in mov imul push cwtl stc pop xchg fwait dec mov add and mov pop inc pusha dec jns adc xchg pop lods in inc sahf cmp sbb sbb sahf test mov lock mov mov or xor sub xchg xchg lock xchg test inc sti aaa ja (bad) js cmp xchg (bad) seto or (bad) js mov mov dec mov sbb in mov xchg mov add cmp pop mov call scas mov in add inc ds or fcmovnbe mov in add inc ds or fcmovne inc xchg adc shl cmc mov cmp out inc jnp movsl inc jmp jnp cmp sbb mov add pop adc add leave push clc or in inc mov pusha pop inc adc es lds mov add mov jo mov in in xor lcall mov call (bad) or sbb test out cmp in pop out pop cwtl movsl insb inc mov js leave mov hlt mov push sbb jne repz cmp add mov test dec (bad) fcmovnbe mov fisub xor sbb in or fdivr inc cmpsb mov cmp cmp fdivrs xchg mov je inc clc in pop call cmp adc js cmp test inc jge mov into cmp adc sbb mov push repz in std mov sar clc inc enter inc clc in pop call cmp out sbb divb aaa (bad) (bad) xchg mov adc pusha pop inc adc es lds mov add mov jo mov in in ss xchg inc rcr (bad) mov inc clc loope mov add inc adc push pop mov frstor inc adc or stos in inc pushl jl pop sbb aaa mov les negl repnz xchg std add aaa jl sarb mov test inc std cmp sarb (bad) xchg add aaa jl pop sbb xor (bad) icebp cmp bnd lds or test icebp mov add fld cmpsl mov or inc addr16 js lds (bad) icebp cmp bnd xor cwtl stc pop lods in mov repz mov lret inc cmpsb cmp add cmp jbe lcall sbb xor test or dec je sarb mov add cmp out sarb mulb or jo negl push mov test jns lcall cli roll jmp adc js mov xchg or jle push add mov xchg or jb int3 js mov lods sti xchg mov repz rorl mov xchg cmp add and (bad) mov and add cmp or lock test jnp lcall fnstcw scas in inc test jp lds (bad) mov and mov cmp lds (bad) mov and mov aaa js lds lds (bad) jecxz pop out lock cmp repz mov jns add cmp pop cmpsb repnz mov inc mov js mov xchg jnp sbb sbb lret mov sarb dec cwtl std xadd iret inc mov sub mov or movsb (bad) push aaa mov call out push sbb mov lahf test out sbb cmp sbb mov out add cmp jbe cli inc pushl jg sbb pop mov mov les sbb sbb (bad) movsl lcall js mov (bad) or test std inc into inc sub repnz popf mov add inc jp negl cli roll inc xchg cmp int cli shll mov cmpsb cmp sbb pop mov xchg fwait jecxz std cmp repz (bad) mulb or jae int and or jnp icebp sbb mov leave fcmovne inc xchg mov in sbb (bad) mov lods in inc test jg icebp sbb roll ljmp js shrl jmp (bad) xor cli roll les repz mov test jl sarb test les adc xchg hlt (bad) in inc icebp cmp out (bad) js mov loopne pop inc push sbb mov mov fdivrl ret mov xchg or dec jns sbb sub mov aaa (bad) in idivl mov cwtl stc pop xchg sub mov xchg icebp mov sarl stos js mov mov aaa add scas js mov test inc jp sarb (bad) mov pop lods in inc sahf cmp sbb xchg xor cmp add and xchg test pop mov jns add and xchg test add inc jp sarb lcall inc pushl jg add and lods test add xor push mov mov ret mov enter dec mov add cmp call mov xor xor and xor xor and or clc inc clc cmp sarb xchg idivb call xchg stc add cmp out (bad) js mov mov cmp out (bad) js mov in out mov sbb mov cmpsb out ffreep pop inc imul out negl push mov mov inc arpl lcall dec cmpsl enter fistpl imul adc sbb mov mov les into js mov sahf test add and mov adc mov sub xor mov aaa ret mov out and sub adc mov add add stos in mov into js mov mov inc or in add shl inc inc inc aaa sub repz mov xchg or aaa jle incl lock sbb xchg aaa sbb (bad) js rcll insb inc add adc mov aaa jle incl lock sbb xchg aaa sbb (bad) js rcll insb inc add sbb mov aaa jge testb mov fdiv dec (bad) sti repnz mov pop adc lret clc sub stos in inc clc cmp negl cli roll mov lcall add loop jecxz mov sbb roll in xchg or aad hlt mov cwtl cli add cmp push add mov lods in inc sahf cmp push add leave lods xchg add dec and xor clc add in mov or fdivr inc jp cmp adc fdivr inc mov dec mov inc clc sti inc and add test xor add mov pop inc test cmpl lahf lds in mov pop add mov jp mov out cmp fdivrs loopne jecxz clc cmp adc add mov xchg fwait in inc (bad) sub std sbb cmp out aas (bad) mov jae negl fdivrs mov cmp in fistpll lds (bad) icebp cmp out (bad) js mov jecxz cli mov out sbb mov xchg mov add pop lds in mov in add inc jp test adc out setl ja call out or movsl inc mov add leave push call cltd mov out js mov call in xlat aaa xor xor fdivrs shl xchg mov cmp loope mov (bad) mov cmp pop cmp fdivr inc movsl movsl jl pop xor or ffree pop mov inc clc out int call cmpl dec call cmc mov fisub cmp fdivr inc test mov adc in rcrl iret inc lret aaa sub std sbb cmp out aas (bad) mov jae negl repnz cwtl cli add cmp mov pop sbb inc jnp ljmp fdiv dec leave sti repnz jecxz add cmp add stos in inc stc cmp lcall push mov mov fistpll icebp sbb mov sahf test mov negl add lods in mov icebp sbb mov xchg add aaa jp sbb sbb (bad) xchg add aaa pop out push sbb lds movsl jecxz into cmp and ss (bad) fucomi inc decl adc js mov push push inc inc aaa cmp lret rcll inc jp push mov lds mov test aaa xor in sbb mov cltd mov jnp out std mov jp lods inc fnstcw pop in out loopne dec fdivr inc cmpsb mov add inc clc push cmp rorb popf inc (bad) sub std sbb rorl inc test inc jg in ffreep push das pop into (bad) fidivrl or mov into in mov les adc pop cltd mov jnp out std mov jp lods inc fnstcw cmp leave push clc or in inc xchg inc out out pusha sbb sub stc inc faddp cli mov add xor or in inc cli cmp cmp call cld mov cmp movb in inc pushl ror pop fdivr inc test cmp lds movsl mov adc js mov stos in inc call sbb mov out cmp cmp out negl add mov dec or loopne cmc mov data16 lret inc mov aam repnz or dec call incl mov adc jle fidivr lret inc jmp pusha add mov mov sub repnz add mov fwait icebp mov lock out lds mov in out negl add mov cmp inc and std dec (bad) fcmovne inc (bad) lret push incb xor add inc mulb cmp mov add mov xor into leave pop out aaa (bad) in inc add clc idivb iret in inc mov call inc ffree push inc inc aaa sub repz mov xchg add cmp adc add mov xchg add aaa jae negl add stos in mov out add mov xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add movsb in inc xchg aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae hlt add inc jae aad jp lods inc test pop out sbb in mov aad jecxz divb daa out cmc add xor sbb adc pusha cld mov (bad) in inc test sub mov xchg add lret ret js mov (bad) sbb mov aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc cli cmp in iret add mov mov clc inc pushl jae negl cli roll sti inc int3 aaa daa out negl add stos in inc pushl jae lock rorl add cmp out cmp loop mov in inc mov add cmp dec inc out and adc xchg xchg lss arpl add xchg add xor hlt roll inc jp mov adc mov aaa (bad) (bad) out js cmp fdivr inc jl jno mov or (bad) js int call inc inc inc cmp in repz int push roll push adc sbb mov cmovns fcmovnbe inc xchg mov adc js lds add sti out adc adc jno lods inc xchg mov adc sbb mov fdivr inc test lods inc cmpl out sbb std mov (bad) jmp mov repnz mov fsubs xor pop in repz int push roll push adc sbb mov cmovns fcmovnbe inc xchg mov adc js (bad) mov add inc call sbb mov xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc sti aaa ja negl dec mov clc inc leave cmp out negl add addb inc pushl jae hlt add mov xchg add aaa add negl add lret in inc pushl pop adc sbb mov stos in inc xorl add addb inc pushl jae negl add stos in inc pushl jae negl add stos in inc std cmp negl cli roll cli inc jmp sbb popf test inc pushl jae loop or add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl push mov mov aaa jae jecxz in movsb xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl push mov mov aaa jae std add mov xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl push mov mov aaa jae (bad) js mov mov aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl push mov stos in inc pushl jae lock mov mov add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl push mov stos in inc pushl jae icebp sbb popf mov add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl push mov stos in inc pushl jae cli add add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl push mov stos in inc pushl jae sti add mov mov add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl push mov stos in inc pushl jae hlt add mov mov add inc push out add mov aaa jae negl add stos in inc pushl jae negl add lods in inc mov sbb mov stos in inc pushl jae negl add stos in inc pushl jae hlt add rcrl add inc sbb negl add stos in inc pushl jae negl add stos in inc fidivrl addr16 js mov xchg iret mov aaa jae negl add stos in inc pushl jae negl add (bad) in mov std add int mov add aaa jae negl add stos in inc pushl jae std add mov mov aaa jae hlt add rcll jmp out hlt add rcll lret inc out cmp leave mov lret inc repz or jne cld aaa mov jmp out sti add cmp add sahf movsl cltd inc repz add stos in inc mov aam incb push dec inc push fldl stos in inc cld cmp sbb mov xchg add aaa jae negl add stos in inc cld cmp sbb mov xchg add lret (bad) negl add stos in inc pushl jae negl repnz xchg add cmp sbb mov xchg add aaa jae negl add stos in inc pushl jae negl add mov aaa jae negl push mov mov inc sbb (bad) sbb roll cltd inc (bad) xor into mov aam lret inc stc dec fs cmc add cmp cli aaa cmpsb movsl cltd inc int and negl add stos in inc aad add mov xchg add aaa pop out (bad) sbb roll lret inc int3 aaa daa out (bad) sbb inc int3 in inc fildl out (bad) sbb mov xchg inc fcmovnb lret inc int and cmc add cmp repz aaa jae negl add fucom jmp mov out adc xchg add xor stc mov xchg inc scas movsl cltd inc (bad) xor or jne cli aaa mov jmp out cmc add lds in inc xlat inc push out sti add lds movsl cltd inc aam pop out cmc add inc jns repz dec add mov xchg add cmp out cli add cmp cmp out cli add aas mov inc sbb cli add add aaa add lock mov xchg add cmp cmc add lds in inc xlat inc push out sti add mov xchg aaa aam lret inc leave dec adc cmc add leave mov cltd inc (bad) xor or into in inc (bad) xor cmovno rolb movsl sahf inc pushl jae negl add mov jmp out cmc add cmp cli aaa (bad) in inc int and (bad) sbb mov xchg inc mov cmp sbb mov xchg inc int sti inc into cmp lds test inc fildl out (bad) sbb mov xchg inc fcmovnb lret inc int and cmc add cmp out cmp (bad) pushl jae cli add add cmp add rcll lret inc into cmp mov mov inc push out (bad) sbb roll jmp out cmc add inc jns rolb movsl sahf inc pushl jae negl add mov daa out cli add aas cwtl movsl sahf inc leave cmp out icebp sbb cmp out cmp aaa jae sti add mov xchg or cmp add lds movsl cltd inc xchg mov out cmc add mov scas movsl cltd inc int3 aaa daa out cmc add mov int3 in inc repnz jns cmc add mov fadd lret inc xlat inc push out negl add mov jmp out (bad) sbb mov movsl movsl cltd inc std cmp cmc add cmp sti xor inc sub (bad) sbb lds in inc xchg mov out cmc add mov scas movsl sahf inc lret aaa daa out cmc add mov iret in inc xlat inc push out negl add mov cmp mov mov inc push out cmc add mov xchg xor (bad) into cmp leave mov jmp out (bad) sbb lds movsl cltd inc (bad) xor fidivl lret in inc xchg mov out negl add lods test inc int and (bad) sbb mov xchg dec ffreep lret inc enter cmc add lds test inc rorb out (bad) sbb mov xchg xor xor add sahf xchg xor inc sub cli add cmp (bad) lea add mov cmp mov mov jmp out cmc add lds test inc (bad) xor or jne sti xor (bad) into cmp rcll lret inc into cmp mov scas movsl cltd inc fildl out cmc add xor cli aaa aam enter jae hlt add leave mov sti inc nop mov out cmc add roll lret inc int3 aaa daa out cmc add leave mov cltd inc mov or into in inc xlat inc push out (bad) sbb roll cltd inc xlat inc push out (bad) sbb mov aam enter jae sti add mov mov clc inc cld cmp add mov xchg inc scas movsl cltd inc int and cmc add mov xchg dec faddp lret inc (bad) out (bad) sbb mov xchg push movsl cltd inc fildl out cmc add xor cli aaa aam enter jae negl add mov jmp out cmc add cmp cli aaa (bad) in inc int and (bad) sbb mov xchg inc mov cmp sbb mov xchg inc int sti inc into cmp lds test inc fildl out (bad) sbb mov xchg inc fcmovnb lret inc int and cmc add cmp out cmp (bad) pushl jae cli add mov xchg add cmp add mov xchg inc scas movsl cltd inc int and cmc add mov xchg dec faddp lret inc (bad) out (bad) sbb mov xchg cpuid movsl cltd inc xlat inc push out (bad) sbb roll jmp out cmc add inc jns rolb movsl sahf inc pushl jae cli add mov cwtl movsl sahf inc leave cmp out icebp sbb cmp out cmp aaa daa out cli add add mov out negl fdivrs mov cmp sbb inc mov inc push out cmc add xor sti xor cmp lds in inc ljmp mov scas movsl cltd inc leave dec adc cmc add lds test inc int3 aaa daa out negl add mov daa out cli add aas cwtl movsl sahf inc leave cmp out icebp sbb cmp out cmp aaa jae icebp sbb mov stos in inc fnstcw adc negl add mov aaa jae negl push mov lods in inc pushl jae negl add shl lock xchg jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc xorl add addb inc pushl pop adc xchg dec shl clc inc pushl jae lcall or shl cli inc xorl add leave in inc xorl add loope clc inc pushl jae (bad) js inc jns repz aaa jae negl add stc mov (bad) negl add mov (bad) (bad) js dec pop push roll stos in mov sub repz aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add jl push mov inc clc xlat mov jl push mov inc clc xlat mov jl stos inc sti aaa add les divl shl inc mov add les divl shl inc mov add les divl mov lret out adc cmp pop push jmp xor out adc cmp pop push jmp xor int3 adc sbb mov xor out adc cmp pop push jmp xor out adc cmp pop push stc icebp lcall adc cmp pop push jmp xor out adc cmp pop push jmp xor out adc adc pop out pop mov lret out adc cmp pop push jmp xor out adc cmp pop push jmp xor int3 adc sbb mov xor out adc cmp pop push jmp xor out adc cmp pop push stc icebp lcall adc cmp pop push jmp xor out adc cmp pop push jmp xor out adc adc pop out pop mov lret out adc cmp pop push jmp xor out adc cmp pop push jmp xor int3 adc sbb mov xor out adc cmp pop push jmp xor out adc cmp pop push stc icebp lcall adc cmp pop push jmp xor out adc cmp pop push jmp xor out adc adc pop out pop mov lret out adc cmp pop push jmp xor out adc cmp pop push jmp xor int3 adc sbb mov xor out adc cmp pop push jmp xor out adc cmp pop push stc icebp lcall adc cmp pop push jmp xor out adc cmp pop push jmp xor out adc adc pop out pop mov lret out adc cmp pop push jmp xor out adc cmp pop push jmp xor int3 adc sbb mov xor out adc cmp pop push jmp xor out adc cmp pop push stc icebp lcall adc cmp pop push jmp xor out adc cmp pop push jmp xor out adc adc pop out pop mov lret out adc cmp pop push jmp xor out adc cmp pop push jmp xor int3 adc sbb mov xor out adc cmp pop push jmp xor out adc cmp pop push stc icebp lcall adc cmp pop push jmp xor out adc cmp pop push jmp xor out adc adc pop out pop movsb in inc lahf inc inc out pop sbb sarl cwtl inc lahf inc inc out pop sbb sarl cwtl inc mov sbb mov xchg pop shl inc mov add les divl shl inc mov add les divl mov ret inc sti aaa add into add rorl cmpps inc stos inc or into add rorl shrd adc js mov out pop test popl inc push adc xlat lds out loopne popl inc push adc xlat lds out loopne popl aaa ja negl add shl inc mov add les divl shl inc mov add les divl mov aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in mov sub jmp xor out adc cmp pop push jmp xor out adc cmp pop push ret dec loope clc inc pushl jae iret js mov xchg add aaa jae negl add shl clc inc pushl jae iret js mov xchg add aaa jae negl add shl clc inc pushl jae iret js mov xchg add aaa jae negl add shl clc inc pushl jae iret js mov xchg add aaa jae negl add shl clc inc pushl jae iret js mov xchg add aaa jae negl add shl clc inc pushl jae iret js mov xchg add aaa jae negl add shl clc inc pushl jae iret js mov xchg add aaa jae negl add shl clc inc pushl jae iret js mov xchg add aaa jae negl add loope clc inc pushl jl pop cmp pop push jmp xor out adc cmp pop push jmp xor out adc js mov stos in inc out aaa add negl add mov clc inc pushl jae negl push mov lods in inc pushl jae negl add loope clc inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc xorl add addb inc pushl pop adc xchg dec shl clc inc pushl jae lcall or shl cli inc xorl add leave in inc xorl add loope clc inc pushl jae (bad) js inc jns repz aaa jae negl add stc mov (bad) negl add mov (bad) (bad) js dec pop push roll stos in mov sub repz aaa jae negl add stos in inc testb inc clc xlat mov jl push mov dec clc loop scas xchg pop shl inc mov add les divl pop and out adc cmp pop push div cltd in mov sub jmp xor notl aaa clc cmovge jmp xor out adc add mov and out adc cmp pop push div cltd in mov sub jmp xor notl aaa clc cmovge jmp xor out adc add mov and out adc cmp pop push div cltd in mov sub jmp xor notl aaa clc leave sarl cwtl inc lahf inc inc out pop sbb sarl popl inc push adc xlat lds out call aaa add les divl shl inc mov insl adc sbb mov xchg add aaa jae negl add stos in inc pushl jae negl add stos in mov repz sub shl clc inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in mov (bad) js dec pop push roll stos in mov repz sub stos in inc cld cmp sbb roll cli inc out aaa add negl push mov lods in mov adc xchg add aaa pxor sbb mov xchg add aaa ja icebp sbb mov stos in inc cli xor add stos in inc pushl jae std add inc push data16 dec leave fwait mov sbb or cmp sbb inc out inc js add jge push mov add das mov mov repnz loope sub fisub cmp fdivr inc jge movsb inc jecxz add cmp add mov adc call push jecxz leave dec ja sbb std mov (bad) in mov inc clc pop cmp fsubrs pop enter xchg mov adc js leave mov fwait dec mov sbb repnz inc jnp test adc pusha add mov (bad) (bad) mov adc pusha ffreep gs inc mov inc inc inc inc in adc lds mov fs adc call xlat mov out jecxz inc fdivr inc test dec jne inc clc fadd mov aas enter fnstcw add jmp in data16 inc jp cmp aaa add and das mov mov dec inc inc inc jnp cmp stc leave inc (bad) es iret fcmovnbe mov adc adc jp dec mov cmp cmp sub pop cmp lds out add cmp incb test and les std mov jp mov out sbb cmc shll stc inc out jg cmp call in cmpl in add mov jp dec mov cmp cmp sub pop cmp lds in or sub mov repnz loope jb cmp and fcmovnu pop inc inc inc push in sarl test rolb sti ret cmp int fdivr dec shl xchg mov cmp cmp fdivr inc (bad) sti ret inc xlat inc push in sbb cmp incb test and int cli mov testb (bad) (bad) mov xlat pusha sbb es incb test inc (bad) mov adc pusha ffreep gs inc mov inc inc inc inc in adc lds mov fs adc call xlat mov out jecxz inc fdivr inc test dec jne inc clc fadd mov aas enter fnstcw add jmp in data16 inc jp cmp aaa add and and mov movsl outsl inc fs insl out stc sbb mov sti test dec sub int rolw mov out out pusha sbb add incb test sbb stc sbb mov sti test inc sub (bad) js mov iret fcmovnbe mov fisub mov cmpsb loope test mov ffreep push and mov out loopne push call dec mov sarb (bad) roll jno jg ret clc loopne mov lds inc inc adc js xor call int aam je inc clc loope mov das aaa mov xor sti inc and adc xchg movsl jecxz int jne loop sbb popa push call in lret int movb mov cli inc fnstcw sbb stc sbb mov sti test inc sub (bad) js mov iret fcmovnbe mov fisub mov mov dec shl cmc mov adc mov call add (bad) js lds inc lret inc into cmp adc js lds inc sar dec inc inc inc adc (bad) js int cwtl fildl mov add inc clc fdivrs mov ret out jmp or jo mov adc js xor (bad) and mov cmp adc out dec (bad) or lahf fwait dec mov sbb sub mov cli inc fnstcw sbb loop lret mov test inc jne call clc add in mov repnz lds movsl mov adc pusha jmp push fdivr inc mov dec mov sbb sub mov cli inc xchg fucomp sub loope mov add or out js mov callw movsl outsl inc fs insl out stc sbb xchg aas fs jbe adc int push pop mov or cmp incb (bad) mov cmp (bad) js int clc xor (bad) lds inc inc adc sbb lds (bad) lods aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add lods in inc pushl jae negl enter repz aaa jo adc mov xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc repnz cmp enter inc mov mov sub js mov mov dec jne adc adc inc pushf je push test add or fmuls sbb mov add mov call lcall add mov out add jbe in aaa ja cmp adc pop call xchg in add mov (bad) fwait mov cmp js rcll dec (bad) lcall add mov out cmp dec or sbb adc stos int ret mov add push mov enter movsl test xor mov iret fwait mov inc jecxz repnz movsl test adc add mov fstps or add push mov enter in xchg mov sub push mov call mov add or rcrb adc mov inc rcrl in add (bad) pop fsubr jns movsl out lret int3 leave psrld mov xor call jns movsl mov add push mov enter outsl inc dec mov out dec cwtl and mov push out clc dec add mov (bad) or inc in aaa jno add out jno fwait xchg mov push js leave test in shlb out pop repz jg sti lahf mov or cmpsb (bad) movsl xchg inc fmuls adc add mov xchg ja movsl xchg xor clc int fcoms add lcall add mov call inc inc xorl mov jg test mov cwtl mov insb (bad) cld dec cmpl cmp ret add int call xchg cmc loop push and sbb hlt lods outsl js dec cmp sbb in mov sbb loope jmp mov sbb popa mov call orl lcall pop cmp mov mov (bad) (bad) adc sub bound push dec imul pushf les add xor sahf out push inc cmp aad inc mov sbb sbb enter adc or push cmp adc or (bad) loope mov or int3 fadd mov enter jl inc xchg dec pop test inc push addr16 ret xchg adc sub pusha mov sbb jp loope jl cmp mov test aas out out push add inc jl leave pop pop js pop leave mov push cltd pop sub xor ret mov aad or mov and pop add imul js push (bad) mul or gs stc jge,pn push mov sub sub inc push xchg aaa xor mov pop xchg dec int3 ss pop imul enter pushf sbb lahf aas pop pop mov lds add jle mov out jmp psubsb dec pop mov add popf sbb ja out sarl enter das ja mov aad xor cwtl or and mov add repnz hlt push dec stos cmp mov jg adcl pop cmp mov (bad) icebp push dec dec dec adc shrd lret aad ret push push mov xorl (bad) loop sbb or mov mov push push popf adc mov jae sub aam cld xor jnp add pop popf xor inc jmp test test push test xor daa aaa pop xor fdivs push dec and mov or icebp (bad) fidivl sbb dec cs mov cmpb add push jne stos daa inc push addr16 ret scas pop pop jne fsubrs jns mov sbb cld stos ss push lea cmc pop inc lea popf sbb test icebp out sbb cs (bad) cmc pop std out xor cmp mov ret int adc inc sub mov jg stos or lcall and xchg ss inc mov icebp jmp call into add pushf and aaa out dec dec popa inc ja xchg popf je scas xor stos sub jno incb daa adc push or mov imul loope arpl or insl imul rolb or outsb in pop push or mov sub sbb or xor mov adc jnp cltd add mov ds sub mov sbb add push adc mov and in (bad) pusha pop sbb aas pop jp faddl adc in xor das clc mov arpl dec test cmpsl jnp test stc dec icebp or lds cmpsb dec or add mov inc dec lods push sbb insb stc adc out mov pop cmp movsl push aad dec push movsl adc mov aam dec pop mov add inc ss es or and and pushf lds xchg sti out pushf cli pusha insb jge mov ja scas stc jmp sbb mov cmpl sarb inc sbb xlat arpl cmp jne aad call adc (bad) sub aad out mov je pushf adc mov push jge rolb cmpsl inc pop mov push negb icebp neg xor cmpsb jp lock cmc cwtl testl jmp push mov stos xchg movsb cmp adc push aad push add movsl sub or add inc cmc mov dec or loopne bound cmpsb lds in (bad) js push xchg inc pop sbb (bad) xor inc dec dec mov inc rol scas mov out divb sbb sbb fptan inc cmp (bad) in pop or xor jns,pn add mov iret pop lret or stc out lcall repz stos movsl or mov aaa sbb sbb shr sbb jb (bad) and iret pop xor xchg nop mov sbb cli mov mov int xchg cld int mov popf jnp fwait jmp jmp add mov out sahf inc lea pop aas sti insl inc fildll jb and es cmp (bad) jmp mov xor ffreep call sbb rclb mov in lods js mov mov inc orl inc xchg repz sbb pushf mov cli and adc dec or popa mov pop sbb in adc mov aam mov dec mov in shlb cltd cld or push xor or stos lds dec xchg iret testl lcall sub js adc or xchg jge mov divl jo jl ljmp enter call adc add stc sbb inc testb mov add lods (bad) cmp pop ret mov push ja xor adc imul add pushf mov and clc dec push icebp push push cs sbb ret ficom sbb adc fsubrs inc out vmovddup push sbb mov mov add in pop inc xchg insl sub repz dec xchg push (bad) jge cmp or lea add jbe std dec (bad) adc sahf push idiv adc sar inc push sbb dec mov jmp mov cmp mov add sahf insb mov dec mov call lret stos test mov cld dec push and icebp sti mov push xchg clc mov inc or das jle mov pop decl adc adc in sbb ljmp cmp int push (bad) int hlt and inc jbe rolb or push sbb mov inc imul enter rcrb adc gs fadd clc fdivrs imul xor sti das jnp inc add mov stos sbb xchg inc lret mov add fidiv sub test mov cs mov dec jg cmp repz add push and out cmc ffree and addl mov hlt sbb cmp iret cmp ret dec push out cmp lods mov ds insl pop (bad) dec gs icebp in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf pushf mov inc add mov enter dec jnp inc add add sahf or xchg sbb add sahf or xchg test das push bound clc mov push adc or (bad) or cmp in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov out icebp ljmp lods inc clc pop add adc sahf or xchg mov out negl adc add add sahf or subb js add add sahf or xchg mov out negl repz lods jnp inc add add sahf or subb js add or lock jmp inc add cli cmc pusha cmp stc aad les call add mov in lods lcall in jmp push xrelease cmp negl xrelease mov in cmc leave (bad) jo or xchg mov out cmc cwtl add sahf or xchg icebp jno cmc lahf add mov les aas xor test shr jo inc js add add lret stos mov popa sbb insl clc int3 pop shr js inc js add push addl push arpl sub (bad) ficomp lods mov sbb pop (bad) mov das fs add add jle or lods jne jno scas (bad) call sahf stos jmp mov mov pop sbb or xchg mov (bad) repz lret pop in push stos mov insl cld aaa adc rcrl xchg test js mov je lods mov add jle repz xchg adc out xor nop mov adc sahf mov je lods mov add jg lret pop shr js inc js add add adc xor test jns mov popa aad mov sbb adc repz mov mov out aad cli test jmp int mov inc shr add mov dec mov mov (bad) sub add stos scas test cmc fldl mov lret (bad) test cmp clc test repz sub mov out pop loop push sub jle push jae cmp add int mov out add movsb jle repz push js add add adc repz test cmp cld mov mov mov call pop into jmp sub and sub cli scas jle jmp sub mov add pop shr js popl aaa adc rcrl xchg and cmc int3 clc insl sahf adc lock test inc jno pop adc test (bad) or mov test arpl sub cld lahf sahf cmp ret cmp mov repz adc decl pop adc outsb cli rcrl dec mov mov sarb add jle repz movsb test sub adc xor cmp pop mov sbb jnp inc add (bad) clc ret gs xlat xchg addl popa add pop pop adc mov adc cmpsl pop mov inc sbb cs ljmp xchg push sub arpl fildll mov enter (bad) jmp and cltd pushf add mov cmp fdivl adc jg into mov dec mov leave xchg mov addl popa add mov aas jb add pop movsl xchg mov dec jo sub adc xor mov or aad rclb outsb or mov inc fcmove shrb (bad) icebp and adc insl dec cmp jno fstpt enter (bad) jmp and cltd pushf add mov cmp fdivl adc jg into mov sub out loop mov pop fiaddl mov icebp imul add stos (bad) hlt inc subl push repnz leave mov iret lea pop (bad) insl inc nop testb jecxz inc sti jmp divb cltd (bad) repnz gs fwait pop cmpsb mov shr lods sti clc inc xorl adc dec xor icebp ss adc add fwait mov rol dec cmpsl xchg dec fsubl mov lret mov pop pop jg adc pop sbb stc test in addr16 fucomi cmc sbb lods mov in movsl out mov lret ret mov and adc lret mov and push jne sti (bad) rolb ljmp push test lahf mov jo jnp inc add add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl (bad) mov or add cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc dec clc in lret aas or inc add xchg jle xor mov (bad) jle adc xor push jmp fidivr jl int dec or pop xor into (bad) cli ret cvtps2pd jmp and inc aad les into sbb mov ret dec test mov mov jbe adc out dec cld repz adc mov mov notl jno fisubrl push jno push rcr inc scas pop in mov inc cld dec push cmp orb xchg mov scas lret xchg add cmp test xor push rorb pop (bad) jb or test pop mov jg std test cld cld out and mov cwtl lret or mov sub popa sbb mull xlat mov dec js add inc jne loopne xchg test add bound sahf or xchg out lds lea sbb mov out cmc ret sahf or mov xchg pushl gs sub cltd loope cmc lahf add sahf or subb std out cmc cmp sahf add inc inc add add sahf or subb std out cmc nop add sahf pop repz sub mov add jbe xor ja jecxz mov leave rcrb cli imul inc adc stc movb mov push add add and inc add adc cmp mov decb or fist inc or xchg outsl lock repnz or pop xor (bad) or push mov pushf xor inc in movl or fdivs sub repnz stos adc clc (bad) push rcll adc push or cmp sbb push loop stc pop cmpsb daa or ja std and repz pop inc add mov add std addr16 adc sub in lods mov popf test add sub and lock add xchg jle hlt movl imul test enter add dec test clc pop push dec inc repz addr16 pop loope jmp test add xchg test jmp add xchg scas push lret clc rolb icebp add jnp pop push jo inc cmc pop adc aam cld rorl orl or out and push (bad) xor sub add sub xchg push jl mov and add sub (bad) push int3 (bad) push jae push (bad) (bad) jne pop (bad) cmp lea (bad) loopne bound xor (bad) dec insl repz push sub jns lods test repz std dec (bad) or add sahf or subl sahf jecxz sbb repz lahf sbb sahf or mov mov lret jg jecxz negl hlt repnz js jg repz or sub shr imul add xor xor mov (bad) icebp in cmc or scas sahf or inc push jg icebp imul and mov adc jle xchg jge jecxz push mov pusha jns add lret add aaa ljmp xchg repz popf or js jg cmp lahf fisttpll pop sub loop cmp addl pop icebp repz inc (bad) out scas xchg mov jle ljmp pop mov pop movsb sti sbbl dec pop jp jg jns shrl jl std inc push dec inc push add adc inc add mov pushf inc movsb jp nop jo jl sbb inc xchg cmp cmp fidivr out mov cmp imul sbb repnz xchg xchg lock out je push add lock sub push add repz mov push mov cmpl jnp mov bound hlt pop and or lods push push lock xor mov add mov inc fdivrp ss stc mov lds jmp dec cmp inc aaa push icebp xchg xor lock rcll pop sbb push or add add cs jne xchg sbb sar cwtl xchg adc (bad) lock mov sub jb xchg adc dec sti data16 cli add add cs jne xchg sbb fldl lods mov xchg cmp rcrl movsl aas sbb inc sarb sti pop out push xchg dec and push enter dec adc push mov add (bad) add aas jae call clc pop adc stos test out push pop (bad) aad in out insb jge pop cltd stc xor test sahf cli jb or aas mov sub push jge test ret or jge (bad) int cmp mov mov pop cwtl adc xchg rclb mov mov push add repz js xor push dec push jg rcrl fwait sbb dec jg es pop xchg in cmc in dec test call icebp add push pop (bad) arpl repz iret sbb test add sahf in lret rorl js (bad) (bad) scas xor dec adc sub or (bad) or push sub cmp andl sti mov inc loope mov mov push push cwtl add mov push inc ficomp xchg in cmc lahf add hlt cmc push sub sbb push mov jmp fcoms xor lods sbb mov clc rcrb js imul clc lea (bad) adc sub pop and mov repz push cli in add (bad) and sahf adc ja addr16 jbe aad rolb outsl mov jne pushf push out test cmc xchg cld pop jg push cmp jp inc add sbb popa mov arpl mov test sahf adc xchg or cs add sahf or pop sub fbld loope add sahf mov xor lcall cmc cwtl add out sti add icebp in cmc sbb mov int3 add icebp insl cmc outsl loop cli pop negl add es add loope cltd arpl test clc ljmp xchg js jg lcall dec pop xchg int3 loope xor ffree stos or subb pop pop add repz mov repz aaa test sahf inc out sbb xor lahf in cmc lahf add jo mov rcr das mov jmp fcos jnp xor addr16 add or pop repz push outsl add add sahf fs jmp idivl add and add push testb mov xorl add sahf je ljmp inc les jmp orl jnp add cld mov popf push mov xchg mov mov jnp cmp xor jns daa jl cld adc sbb mov add pop push out jnp jg jl lock add lcall dec add mov bsf jns mov cmc adc sar (bad) or lea inc jg lahf add sahf add jp testl cmpsb add shrl addr16 js imul test ljmp inc std sub jle adc xor jns decl sub iret clc inc inc inc adc xor xchg xchg imull mov ljmp mov add cmpb or jno in mov cwtl inc inc adc sub jecxz sub jecxz rcll jno (bad) int mov rep sub xchg or adc repnz pop push add jecxz sub adc jle or add std push mov push jns jg aam sub add mov (bad) sbb mov in movsl mov mov and mov push mov jno popl mov sarl sarl cmpsb xchg xchg mov (bad) jle hlt cmpsb adc sub mov adc add jne adc push xorl scas sub mov pushf (bad) fild loope sarl test jl mov jne movsl inc or push fwait sbb scas push push xchg ja je cmp ja pop and std inc pop (bad) mov pop jb je sbb adc pusha add (bad) (bad) push mov iret out sub repz out add pop clc jecxz push cmp hlt sbb (bad) (bad) repz mov dec jbe lahf push or xchg sahf and push or pop add lret xor test rclb pop cmpsl inc push and dec pop xor inc lret out push clc repnz movb bound ret xor cmp repnz hlt addr16 lock jns cld jle cmp mov add dec adc test and hlt aam jle hlt inc in in (bad) mov inc movb cwtl lock ss and inc adc enter lea test mov out and lock pop dec sti pop in lods dec inc icebp cli xor rcll lock jecxz xor sbb cmp jecxz sbb dec adc add bnd popf adc int3 mov inc inc add popa sub out ficomp adc sub mov or add movsb rolb push and mov mov test xor jmp cmp jnp (bad) mov ljmp adc js jle outsl jbe in stc bound hlt test dec mov fmuls int3 add inc lods repz cmp add out add enter sub jns jle lahf jge rolb mov fnstcw cmp popa call call cmp add and bound ret stc in jg mov push lods pop cli hlt dec sub jp orl pop lea ret inc cmp repz and mov dec sbb (bad) mov push cmp repz sub out dec pop sub mov jnp mov or mov inc data16 push cli pop jg adc repz cmc jno in pop or sub pop outsb push and sub cmp jmp pop mov lret hlt cmp xor jp xor repnz dec in pop mov cli loopne pop jmp ljmp push repnz add int sti jbe xor cli divl ljmp jp dec pop dec add inc and jo jb sub aas rolb sahf orb push dec js add cli sarb rcl sar mov add hlt ljmp mov stos sahf (bad) incl mov jo xlat (bad) js jle or cmc xchg lock repz imul mov adc cltd add sahf push jmp sub mov add or sub jle orl lret pushf test and cld fs imul xchg add insb pop cli cltd add arpl jnp add hlt fiaddl dec arpl add jnp add (bad) hlt lcall das data16 add jg cmc sahf js push or xchg mov in cmc cwtl add push add mov mov in cmc cwtl add sahf psllq add add sahf or lea mov jmp sahf or xchg icebp or negb xrelease mov out imull xrelease mov lcall xchg (bad) sub jno (bad) ljmp jmp sub enter pushf add repz jg loope cmc call icebp loopne dec js jg jge negl icebp or add inc sbb fbld cmpsb repnz mov mov test shlb cmp xor adc int3 sub mov movsb add test fadd sub shr pusha or lahf mov js (bad) cld inc pop aaa cmc pop lcall psubw test xor adc lds loope lods cld or mov xchg mov or scas (bad) stc (bad) fild adc in in mov daa sbb dec add in data16 and arpl add add and lock mov or scas aam movsb mov movsb js imul std mov inc sub jae lahf xchg mov jmp dec mov rcrb scas out dec shl ljmp jbe mov and jl in cmp inc fwait out mov push into adc cmpsl nop cli xor rcl pusha xor loopne push pop xor inc loopne,pt je test pusha out cmp shll imulb jl in cmp inc fwait out mov push into xor into cli faddl mov add out ret push pop jmp cwtl lret lods test ljmp push xor (bad) das jg fstp punpckhdq pop loope stos mov dec xchg (bad) (bad) adc sbb mov ret scas lcall dec sbb add shlb imul out lret decb mov repnz push push pshufw and mov ss idiv mov int or sub test xor adc lds push outsb stc adc push jl cmc push adc scas xchg loopne ror test fadd sub pusha aam add out (bad) xchg pushf add mov sti imull sub xor cmpsl dec arpl repz sbb jne notb adc pop fbld (bad) cld cmp clc inc push jo jns icebp push or xchg pop out inc xchg push or (bad) and pop leave mov sub push cmpl shr outsb lock mov dec mov out add js push pusha sbb sub shr outsb lock jb mov mov push lret mov xor mov xchg les xchg jecxz adc jecxz pop pushf popf cmc and scas insb pushf cmp jle pop sbb ss mov ret jno fisubl add inc adc es adc std mov cmpsl xchg out mov (bad) mov dec outsl cmp jb lds xchg cmpl dec mov fistpl repnz mov jne xor mov cmp mov pop cld xor fs xchg nop xchg lret jbe ret pusha ss pusha daa push mov lcall in imul adc je and mov loop lret ljmp dec mov inc repz bsf or mov mov pop out push (bad) sbb cmc jp inc push scas out dec cmp add add cmc (bad) mov push hlt push push xorl loopne xchg stc adc decb ret or mov in pushf xchg aas mov std mov cmpsb test cli xor push ret add sahf xchg ret pop in ds jecxz test in hlt shlb dec inc add int stc fwait pushf test hlt mov xor in cs fdivs push stc stc mov ja inc sarb adc adc or ret mov push sbb orb sbb jecxz test in and mov enter in add mov jg popf repnz and call or adc (bad) loop inc hlt jecxz aaa std cmpsl daa lgdtl (bad) sahf sbb cld clc inc mov or stos sub scas or (bad) or stos sub dec xor pop mov mov add dec imul push inc insb dec push mov adc push (bad) jecxz aaa std cmpsl daa (bad) pop jb in call scas pop push and xchg in lock adc iret adc (bad) jle and cmp add jge cmp cmc mov mov lret pop scas cmpsb addr16 jae lock and sub fmulp stos movsb pop mov sub adc data16 cmp sbb js clc push sub les out add movl test or xor test xor es or int3 (bad) or mov ret rorb pop insb push pushf pop outsl ss das ret xchg pushf sbb jge adc mov inc add xor test or mov and sar sub pop test fxch roll push ljmp in hlt shlb dec inc or les dec adc mov xchg in mov push and int mov or mov enter (bad) dec push aaa add add rcll jb loopne lock inc lret ds mov aam push adc or pusha mov mov sbb dec shlb sar sub outsb jmp (bad) mov sbb lret pop repnz mov out leave mov icebp jo int mov ljmp push or xchg dec and stc inc push ret rclb sahf or sub jg shll pop sbb jg adc add shrb adc mov (bad) scas leave and push push lds sahf dec jecxz cmc dec adc jns add push stos iret cli push add iret push xor cmc mov mov mov push aad test (bad) aad in lret or lahf scas lcall or xchg and iret lods lcall shrl lds mov daa rcr test or push sbb incb inc cli pop ror add mov in or cmp xor nop loop out pop inc mov sbb shll push inc (bad) lcall mov loopne faddp insl push rdmsr or fnstenv and pushf and inc or rolb mov and sbb fwait loopne pop ss dec mov fstl hlt sbb jp in inc jle dec mov int3 adc stos mov fwait lea add sub (bad) cld dec xorl mov push or adc push and dec mov mov out repnz sar cs xlat das out inc jae lock or dec inc mov das imul cltd mov mov and daa add or sbb push leave out (bad) xchg pushf add cli inc add xor out mov jbe adcl adc mov vmovd or xor add xchg les mov lea cmp (bad) stc lret mov test dec testl or lds add out inc jo sub (bad) fistpl mov loope sub sbb adc mov sti pop decb adc adc cmp cmp sbb add or cmp leave (bad) adc sbb push or cwtl inc test or jl jno jo add adc repz xrelease lcall mov xor leave push and test shr outsb lock jb push jge mov fisub ret mov lods adcl adc out ret dec lcall fimul fldt bndldx in mov mov xor pop in or push lcall (bad) aas jb push and roll lahf aad decb adc push adc pop (bad) cmc lods test iret inc adc (bad) xchg addl push mov sbb push nop/reserved std in pop dec push cmpsb addr16 dec movsl cmp cmpsb adc ljmp test xchg stos sbb mov push dec push cmp repnz ret dec insl sub test inc push lds iret sarb mov (bad) sbb divl adc cmp add in in mov cmp dec mov inc rol pop mov mov mov mov jmp add mov jno pop ret pop outsb cmp and pusha add movsl jno fisubrl push jno repnz pop (bad) sbb mov imul jecxz test in hlt xlat aad mov cmp pop pop iret mov sahf mov sbb int3 xchg dec and sahf movsl add xchg xor sub sbb mov sbb jne rolb jb mov cli or rorb jp sub inc test nop aam inc sub scas insl lock cwtl loopne outsl sbb out fs sub (bad) sti mov pop movsb hlt in or or cmpsl xchg into sbb add mov out sahf inc pushf (bad) call jb mov ds cld mov data16 fistl hlt test movsb xchg add push hlt xchg mov jecxz cs lret or jmp mov push (bad) jmp je adc call punpckhdq std dec push rclb leave insl dec sbb add push dec stc loopne mov adc pop jmp jnp add or (bad) mov jmp pop aad xlat stos stc dec push inc add pop scas jmp jge,pt adc mov les outsl stos (bad) int3 sarb mov data16 pop adc inc stc jecxz push pop cs dec ret shr call mov je push sbb cli into je rcrl cli (bad) mov in adc sbb aam mov (bad) pop (bad) sub fidiv fstpt fmul call push rorb sarb pop mov push mov mov stos fldl (bad) hlt xor cmp sub mov dec (bad) mov cli xchg adc mov inc mov (bad) mov pop (bad) sbb stc addr16 or sbb mov jnp xor (bad) rcll adcl push je push mov notl aas or sbb fimul rcrl lock adc aad xsaveopt and sbb cs ret movsb out stos out scas jae andb iret cld (bad) (bad) in stos sub leave cli sub cmp xchg xchg xor cs loop pop out (bad) mov sbb stos add std or shll lock jae test fstps jmp divl add push bound mov jle dec mov in adc add stos lret aaa call or (bad) mov add movsl mov out xchg sub xor fnstenv sbb push sbb or jae push stos and (bad) shrb adcl adc mov pop jge or lods jbe push adcl in or cmp xor fs push imul aam in push xlat aas inc pusha or sahf lahf divl push pushf pop outsl arpl sub repz and cmpsl int lock mov mov push mov or stc loopne test ret aad in lret add fwait mov dec and lea or dec cmovl fistpll out mov mov rol xchg leave fidivr sub cmp mov aad leave jbe adcl adc cmpsl xlat mov aad repnz jbe adc out mov fistpl lcall xor aam mov (bad) sub sub aam mov decb ficompl mov xor sbb cmp add sbb cmp (bad) adc pop or cli push sub rep add jle inc dec mov fstl hlt pop dec mov lods xor incb out sbb mov jbe adcl adc mov xor push fwait clc xor mov sahf mov xor inc jno sub cli scas jle jmp cmp adc sub cli rcrl les repz cwtl lock outsb jmp rol clc dec pushl add aas mov adc lods xchg mov adc push imul dec ljmp add jmp cld mov cmp sbb or test mov cmp rorl lods push add lods (bad) clc mov call add sahf cltd jmp xor inc jno or out sbb add dec add rcrb cs jecxz mov mov cmp fiaddl cwtl sahf xchg repz ret repz add jo imul stos out inc or add mov scas mov repnz loop pop stos scas test adc cmc and repz lret popf (bad) jmp cld mov jbe,pt sbb or inc jle jmp mov (bad) fidivrl mov sahf fwait adc int les inc jge out clc rcrb clc xchg xorl jmp mov inc push (bad) hlt (bad) stos into arpl cmpsb jle repz aad les call mov test aaa pop imull or stos jle or shl mov call jle or mov test aas sbb lods jle jmp int clc popf fs pop rorl cmpsb jle repz xchg fsubs fsubr adc push in addl pop mov test xor mov in idiv mov dec jae jmp cwtl jmp lods pop add addl insl mov repz mov mov aad add sbb mov sbb ret pop test test xor lret jmp mov mov adc popa add pop shr jne push mov rclb repz push push cmpsb jle jmp lret mov int (bad) scas pop shr jno mov mov aas pop add sbb xchg or xorl add mov idiv mov aas jno jmp cli mov mov mov (bad) cld dec (bad) mov loope jae cmpsb test jno daa pop add pop enter (bad) test les adc jno mov mov pop pop int3 sbb shr in mov mov and loopne std mov add cmp xor enter cmp incl xchg mov pop dec jmp aad cmp mulsd xor nop pop dec repz test mov fiaddl and jle repz jno and pushl int rolb aaa adc sarl mov enter cmpl dec stos cmpsb fistpll mov add add mov (bad) movsl (bad) inc out cmp vmread int enter fcmovne mov daa add int out inc call aaa adc adc mov repz mov or clc int fcomps mov or add xchg in lea jle pop out ret test add insl out loop inc cmp mov sbb cmp (bad) or fwait popl cmp in sub jmp (bad) fwait ljmp add rcll dec mov stos enter add mov aaa add repnz mov push and fucomi out call add xor or icebp inc or xchg add sarl mov xchg or fcomi inc xchg and inc into fwait out loop jp xor mov and pop inc out cmp pusha or add mov pop int mov cmp sbb adc pusha adc psrld std inc orb stc add cmp (bad) xchg aaa or (bad) mov mov lods mov incb out inc movb movsl mov orl punpcklbw leave cmpsl cmpsb (bad) jno mov ja pop js leave xchg mov inc into fwait out loop jp xor mov push pop mov ret (bad) repnz loop (bad) fwait mov test in dec (bad) in jg movsl jae fs inc in ds int call mov xorl adc adc sbb dec push inc repnz icebp leave test clc inc test jno les rcrl sbb mov sbb adc cltd movsl xchg xor mov mov (bad) inc out cmp vmread int enter cmp lds mov cmpsl movsl cmpb js lds icebp dec xchg sbb mov push clc add jg adc mov ret mov mov aaa push in xor and adc mov add adc xchg mov sbb adc cltd movsl xchg xor mov mov (bad) inc out cmp vmread int enter cmp lds mov cmpsl movsl cmpb js lds icebp dec xchg sbb mov push clc add jg adc mov cmp sbb jo dec mov pop shrl mov cmp aas sbb lds sub mov aaa jl cmp (bad) jmp mov std add popf mov xor dec gs cmp lock add inc in aaa jge adc (bad) push mov mov xor xor push sbb out and add iret test out cmp cmc mov (bad) cmovno xor add lret sti mov aaa addr16 daa add mov mov xchg mov aaa cmp pusha pop push rorl add pushl iret fwait xchg mov loopne in rcll mov mov xorl mov pop mov cmpsl push cmpl add xchg push insb mov xlat js mov xchg hlt (bad) je dec fidiv jl xor idivb mov push out cmp pop mov out jg fwait jle xor cmp leave inc movb jb dec in aaa addr16 daa add xor jl movsl inc xchg aaa (bad) push dec mov mov ja jb std inc add jo orl push mov movsl xchg jg in add pushf aad cmpsl sbb (bad) add add mov jnp cmc pop fucomp add mov and inc inc push inc outsl sar cmc hlt icebp push movsb xor mov dec ja or testb add jp test adc add mov (bad) mov add pushf cli sub cmpsl ss jo sbb fsts out cvtpi2ps add or mov leave lahf into aaa dec or gs inc or cmc and call ret sti pusha inc push mov cli lahf icebp xor sbb notl hlt test btc fsts sti leave push push jmp pop orl pushf and jne or add push ror sub mov cld inc (bad) or mov jg inc jge in cmc pushf call scas xor js add stc cmp pop in mov insl scas bnd cmpsl inc repz dec add pop jne sub xchg sub mov add lcall pop jg int3 aaa ret loope into ljmp mov js cmpl jmp sub mov add or inc jle (bad) in stc cwtl loopne mov jnp inc xorl repz jg inc jnp cmc jmp pushf or test mov sti out negl lret lret imul sbb pushf mov cli and adc dec or popa cwtl and jns jbe cli and icebp or mov and sbb jo jp test adc add mov clc mov pop push inc add sti sub cmpsb add xor ror test fadd sub movsl xchg (bad) stc sub cmp daa mov lret push loope aam adc sbb mov mov mov sahf jecxz std sub pop sub jp js lock add mov dec jp jnp xchg dec loopne inc test or and jno mov fcmovnu ret dec lahf sbb push inc sbb cmp sbb push stos xchg les jg inc adc inc (bad) cmp or fcmovnbe stos out ret pop xchg lock xor mov mov das dec mov push out incl mov inc pushf pop mov push out xchg adc mov pop push mov sbb or subb xlat pop out push xor (bad) lock sub inc mov shr or sbb scas push and mov or daa push jmp xor movsb mov mov pop cs sbb repnz cmp aaa js mov out test cmp and dec jo jmp mov mov mov add mov dec (bad) inc (bad) adc xchg (bad) inc cmp mov jb sbbl push push inc add std out xor adc push mov push dec inc dec sbb add std out xor push mov rcrb xor pop test mov or mov or sbb mov xchg dec sbb mov adc pushf lock lock mov (bad) cmp or sbb sbb push mov not pop cmp stos add push sbb pop ljmp mov sub and jg (bad) push inc xchg out cli mov adc mov adc cmp sbb dec add std and popf and das addr16 imul and loope inc jp jne mov cli sbb repnz sbb mov cmp hlt daa pop mov dec lock add or and and sbb push mov add in into cmp xchg xrelease inc push inc jg adc fidivrl adc lret mov int3 push out pop aam hlt sub ret mov in cmc cwtl add sahf ljmp and add sahf or xchg mov in cmc mov xrelease mov in cmc cwtl add sahf or loop or jns cmp lds gs pop xor sarb cmc cwtl add sbb pop int js add add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf sbb xchg sub lods add cmc rolb push or sub mov in cmc cwtl add sahf push repz jno cmc cwtl add sahf or xchg mov out cmc xor cltd push or sub mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc push repz cmp mov in cmc cwtl add sahf loopne pop sub mov in cmc cwtl add sahf xor iret push outsl js cmpl cld lret adc lret iret clc inc decl add outsb add sahf nop jmp mov js add out loope pop (bad) xor jnp inc add add sahf cmp mov add add sahf or xchg mov in cmc fdivr jne or cli aad mov int3 daa sbb repz mov test cld clc pop sahf or sti aad test cmp push adc mov stos cmpsl test cmc cwtl add sub call adc popa add pop shr sub jae,pt out cld lds jmp sub mov (bad) adc push cmp and clc pop sahf or lret mov push std addr16 cmpsl jle repz mov cli daa add into pop jbe xchg test js mov je lods mov add jg lret pop shr js inc js add add adc xor test jns mov popa aad mov sbb adc repz mov mov in add mov jmp int mov aaa icebp cltd add mov dec mov mov (bad) sub add stos scas test cmc clc add inc adc call sbb mov stos mov arpl sub xlat repz mov mov in add mov jmp int mov sbb xchg bound scas mov sbb push cld stos pop fistl inc lret (bad) mov jnp enter adc xor mov sbb sahf adc shrl jae das or pop in adc sub sub adc bound (bad) pop fldpi in sub mov repz adc add (bad) clc ret gs xlat xchg addl popa add pop pop adc mov adc cmpsl pop mov inc sbb cs ljmp xchg imul imul jp or test out call cwtl jl repz inc sbb out (bad) jb outsl out sub enter outsb or sbb scas mov ffreep (bad) lret inc add fisttpll jno jb js jmp inc xor cld cld cmpsb inc mov add xchg add mov lret cmp sub cmp mov lock cli push cld int into inc lods mov daa push mov mov ret jp or test out call cwtl jl repz inc sbb out (bad) jb outsl out sub fdivl cmc sbb cli jne add xlat ret call div sbb mov push loop movsl out mov lret ret mov pop mov inc xorl jns jg aaa (bad) iret repnz pop std or jmp add mov push add cmc adc ljmp repz lods sti clc inc in (bad) adc add scas dec cmpsb adc mov call xor (bad) push mov lret iret mov sbb pop btc scas push sbb xor iret ret lods mov mov in cmc fs or xchg sub lret push into sahf lods cmp pusha mov fisubrl mov daa pop mov cmpsl scas cmp (bad) mov loope mov arpl fildll mov aaa jnp inc add add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or inc sbb mov adc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf mov add add add inc push dec inc add add add add or add jbe xor xor xor cmp add add add sbb add jle add add sbb add push je imul add push add and add add add add inc push dec inc add add add or add inc insb outsl bound add add add add add push xchg mov add cli and add add add add push add add add add add pop add add add add add sbb add or add sbb add sub add or add add add add add add add add add add add add add add add add add add add add add add jne push add add add add add add add add add add add add add add add add add add adc popf pop mov or push add or push add jbe or rorb call or or or or add arpl push add arpl push add test add add or or add or add add or or adc adc adc adc adc mov or call add add push push push push add test add add add push test add push xlat or add add (bad) (bad) add jne or push jne push add arpl push add add add ja pxor adc or xchg push add adc push add add add adc push add adc or notl jne push add adc adc add adc push add arpl push add add add adc push add add add add adc adc add adc adc add adc adc or push push push add arpl push add adc push add add add add adc add add adc adc add adc add add push push push add add add add add adc adc adc adc or ret add adc or add adc adc add arpl push add add add add add add adc add add adc add add adc popa adc jnp add add add add adc sbb jne push add add add add add adc push add add push add add pop add add add add add mov sbb sbb or add sbb push add insl sbb add stos sbb or push push push add sbb push add sbb or inc sbb push add arpl add add push add add add add add add add add add add add add add add add add add jae cmp sbb inc add add add pop or cmp add add add or dec add add add add jae cmp add add add add add add adc mov add add add or add add or add add or add add add add or add add add add or add sub insb add add or add mov push add add add add add add add add add add add add add add add add add add add add add add add add add push add add add add add push add add add add or add pop add add insb add add add insb add add add add add add ret add add or add add add or add add or add add or xor out or adc or adc xor and sbb adc movsl or push add or push add or adc (bad) or mov pusha and add add sbb add and les add add add and add push add and add add add add add add outsl add add add add mov add add add xchg add add add add mov add add stos add add mov add mov cmp add add add movb add add add (bad) add add add and add add out add add and add add clc add add add and add add or add add and add add push add add add and add add sub xor or or add add add xor inc add add add add push add dec add add add add push add add add add add xor add add add add add add push add add add add add ret add add add add push sbb add cmp add add add add add add add add loop jns lldt add add add add add add add add add add add add add add add inc add add and add add add inc add add and add add add inc add add and add add add add and add add add add and add add add add and add add add add add add add add add jecxz inc add add add add add add add add add add add mov add add add and add add add add mov add add inc add add and add add add inc add add and add add add inc add add and add add add add add add add add add add mov add add add add aad inc add add add add add jmp inc add add add add push inc add add add add push inc add lahf and add add add add add add inc add faddl add add add inc add sub add add les add add jl add dec add add and and add add js addb add and add add test test dec add and add add nop push add ljmp or add and add add lods push mov dec add and add add mov nop add and add add mov add and add add into push fwait add sbb add add fiadd xchg add and add add out push fwait add sub add add inc or pop xchg add ss add add adc fwait add add add adc jecxz mov and add add sbb add and add add add pop and dec add add adc mov movl add add adc lahf or add jle add add adc stos or add xchg add add sbb or push add push sbb add dec add add adc cmp jmp push add dec add add push or repnz dec add add adc jo repnz and add add sbb add dec add add adc aas or push add add or add dec add add adc pop or add dec add add adc or add dec add add adc outsl or add and add add sbb or push add dec add add adc repz push add and add add add or push add and push sbb add dec add add movb or push add add add movb or push add add add addl or push add add add add addb add and push or test push add and push or mov push add add add push or mov push add add add push or add dec add add movb or pop add add add movb or pop add addl or pop add add add add addb add add add or pop add add add or pop add and push sbb add dec add add add fimull test pop add and push sbb add add add add add jp add add jp add add jp add add jp add add jp add add jp add add jp add add pop add add add add add mov add add add add add add add add add add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add add add inc add add add add add jp add add jp add add jp add add jp add add jp add add call add add add add add add add or add add and add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add jno cmp popf add add add add add add add add add add adc roll adc leave add add add add add add adc add add add adc adc add add add mov adc cmpsb adc adc add add lret add je and cmp lds rolb mov sbb cli adc add adc add call adc adc adc add add repz cli add mov adc adc add add pop add adc push or notb push push or call sub or movlps add add adc adc add sub icebp add and adc add and adc adc push jns nop adc adc push sub cmp aas push xor cmp inc push roll adc test add add and adc add add adc add adc mov add add adc push roll adc push mov push mov push xor xor add add adc push mov pusha adc push addl adc sub fadds roll adc push xchg add add add jmp add add add adc add into adc add add add pop xor cmp sub jmp add add adc pop sbb adc adc pop adc adc and xor add inc pop pop add ja pop add dec pop sbb sub push pop and mov sub pop pop xor rcll adc ficoml in ja cmp jmp add adc cmp xchg dec add adc cmc adc add add add add push dec add cmp and add add push and push mov push add mov push lds pop add add int3 push roll pop add fiaddl jno push pop loopne pop add sub pop add sub pop add sub pop add cmpsb pop out pop jns rclb testb add pop je jns lock mov jns (bad) adc add sub jns add mov icebp add sbb add push sbb sbb pop mov pop jno sbb or cmp or jno jle sub jno xchg sbb add stos sbb add ret sbb or loop sbb jns out sbb or or cmp and add sbb sbb sbb mov jle dec or or cltd sbb mov cmpsb sbb cltd add add or or or or or add add add add add sbb sbb leave add sbb add add add adc mov sbb or add add or pop loope add or jns aaa or jns push or add add or or add or add push add add pop add add push add add add add add add add add add add add add add add add add add add add add add add xchg add add add add add add add add add add jae movsl add add add add add add add add add add add add add add add add add movsl add add add movsl add add add add add movsl add add movsl add add add add movsl add add movsl add add add add add add add add add add movsb add add movsl add add add add add add add add movsl add fildl pop add movsb add add add add add add add movsl add add add movsl add add add movsl add add movsl add add add dec add add popa add add add movsl add roll jae addl addl addl mov roll xchg add add movsl add add add add add movsl add add add add add add loope addl add add add add movsl add jecxz movsl add add add add add add add add add add add add add add add add add add add add add add add add add add add add movsl add mov or or or or or or or or or or or or or or add add add add movsl add add add add add or add movsl add or add add add add movsl add mov or add adc add push add push gs xchg push lods push fiadd clc push incb push mov mov push or cmp pop or insl or test xchg or or or or or add add add add add add add add add add add add sbb add faddl pop add add add add ljmp add add std add add or pop add add add add es mov pop pop add add pop cmpsb add add add stos add add stos add add or add add add testl testl cmp or add add inc add add add add add add or add add add add add pop add add add add add add add add add add add add add add add or add str add add add add add add add add add add add add add add adc add aas add add add add add pop add add sbb add inc add add add sbb add inc add add add sbb add add add pop add add and add push add add add and add add add add add sub add push add add add add das add add xor add pusha add add add xor pop push mov or mov xchg or or add daa add add add sub add add add add add add add add arpl add add add add add stc add add add add add add add add mov adc add add cmp pop add add add data16 add add add add lea add sub add add add mov add or or or or or or push add add add or add add add add add add add or add add add or add or add or add or add add add push gs outsl outsb popa insb inc outsl outsb je arpl gs add gs insl inc fs outsl outsb je arpl gs outsl outsb popa insb inc outsl outsb je arpl push jns je insl cs imul inc outsl jb jae inc outsl jb add insl jo outsb outsb je add jae gs add outsl outsb je imul jae gs cs outsl insl jo outsb outsb je outsl fs add popa bound xor dec popa bound add popa bound xor pop dec popa bound xor pop je je popa jae dec popa insl add je outsl js pop je je imul add js push push jne bound add popa bound xor jae jb jo outsb add jb popa je add add arpl insb imul push je gs insl add jae gs cs dec add add jb popa insl push jb je jb jb je inc imul jae insb je arpl add jo jae add jo jae outsb add imul inc outsl insl jo outsb outsb je addr16 dec popa bound xor jae je dec popa bound xor push imul jae popa insb jne add je dec popa bound xor jae je dec popa bound xor addr16 dec popa bound xor jae je dec popa bound xor addr16 je je popa jae dec popa insl add je je je popa jae dec popa insl add je je je imul add je je je imul add je je je push jne bound add je je je push jne bound add je dec popa bound xor jae je dec popa bound xor arpl outsb inc popa outsb arpl pop inc insb imul outsl outsb inc jb popa add jne gs jbe outsb je jb jae push outsb fs add arpl push dec pushw imul jae imul imul popa addr16 addr16 push jo gs addr16 inc dec dec inc dec dec inc dec dec inc dec dec inc inc dec push jo add popa imul outsl gs add popa add je push popa jbe pop inc insb imul outsl outsb inc jb popa add gs xor dec popa bound xor dec popa bound xor je je popa jae dec popa insl add inc imul add push push jne bound add gs xor data16 inc outsl outsb je arpl jae jb gs gs jae jb outsl outsb je arpl jae jb gs jo addr16 xor dec jne gs arpl inc outsl ja add outsb insb dec popa imul insb add bound je gs pop fs add popa inc jb fs imul insb dec popa jae dec popa insl add popa inc jb fs imul inc outsl js outsl insb jne outsb add outsl insb inc imul add outsl insb push push jne bound add outsb je js inc imul add bound pop push popa insb jne inc push add outsb je jb jae jae outsb fs arpl outsb inc insb insb pop inc insb imul outsl outsb inc jb popa add je inc pop inc insb imul outsl outsb inc jb popa add je inc pop inc insb imul outsl outsb inc jb popa add je inc pop inc insb imul outsl outsb inc jb popa add je inc pop inc insb imul outsl outsb inc jb popa add je inc pop inc insb imul outsl outsb inc jb popa add je inc pop inc insb imul outsl outsb inc jb popa add je inc pop inc insb imul outsl outsb inc jb popa add je dec pop inc insb imul outsl outsb inc jb popa add je dec pop inc insb imul outsl outsb inc jb popa add je dec pop inc insb imul outsl outsb inc jb popa add je dec pop inc insb imul outsl outsb inc jb popa add je dec pop inc insb imul outsl outsb inc jb popa add je dec pop inc insb imul outsl outsb inc jb popa add je dec pop inc insb imul outsl outsb inc jb popa add je dec pop inc insb imul outsl outsb inc jb popa add je push pop inc insb imul outsl outsb inc jb popa add je push pop inc insb imul outsl outsb inc jb popa add je push pop inc insb imul outsl outsb inc jb popa add je push pop inc insb imul outsl outsb inc jb popa add je push pop inc insb imul outsl outsb inc jb popa add je push pop inc insb imul outsl outsb inc jb popa add je push pop inc insb imul outsl outsb inc jb popa add je push pop inc insb imul outsl outsb inc jb popa add je pop pop inc insb imul outsl outsb inc jb popa add je pop pop inc insb imul outsl outsb inc jb popa add je pop pop inc insb imul outsl outsb inc jb popa add je inc fs outsl outsb je arpl insb imul outsl outsb inc jb popa add je jo insb dec popa imul jo insb dec popa imul insb bound je gs jae je insb bound je gs addr16 fs add je fs add je inc outsl insb dec popa jae dec popa insl add je inc outsl insb dec popa jae dec popa insl add je inc outsl insb inc imul add je inc outsl insb inc imul add je inc outsl insb push push jne bound add je inc outsl insb push push jne bound add insb dec popa imul gs gs fs add insb dec popa jae dec popa insl add insb inc imul add insb push push jne bound add inc jo insb imul add jb outsl outsb popa insb inc outsl outsb je arpl dec jns dec imul je push imul jae arpl push imul outsl jb jae jo insb imul inc popa jae add arpl jae data16 push imul jae arpl inc jo insb imul push gs imul imul add inc jb popa je dec popa imul push gs jne arpl add jb outsl outsb popa insb inc outsl outsb je arpl dec jns push gs jne arpl add push arpl gs jne arpl popa outsb add jae jne arpl popa outsb popa addr16 push jns je insl cs gs jne arpl add jae jne arpl jne je jb add insb je jb dec outsb outsw add jae gs cs insb outsl bound imul add je push gs jne arpl popa outsb popa addr16 addr16 inc jne je jb add je inc jne je jb add insb jne add insb je jb add push gs imul jo imul push gs imul add jae gs cs outsl outsb imul je outsl outsb add popa jne je outsb jae popa outsb arpl popa fs popa outsb fs gs popa fs popa outsb fs gs outsl arpl bound arpl arpl outsl jb inc jne outsl push popa jbe push gs imul je inc gs jne je inc gs jne je dec jns gs imul jo jb jns addr16 push gs imul je imul inc outsl insl jo je jb inc outsl insl jo je jb dec imul je push imul jae arpl inc gs arpl add push jb push arpl pop inc outsl insl jo je jb bound arpl outsl jbe fs insl pop inc jo dec bound arpl outsl jbe fs insl pop push jae jb bound arpl outsl jbe fs push jae jb insl pop dec jns outsl jb jae bound arpl outsl jbe fs insl pop dec jns bound jb imul arpl outsl jbe fs addr16 inc outsl insl jo je jb addr16 inc jo insb imul add je push jae jb addr16 inc outsl jb jae addr16 push bound jb imul jo imul add jb jae push bound jb imul inc outsl jb jae insl pop inc outsl jb inc imul je add jae je bound push jns je insl cs outsl insb insb arpl outsb jae insl pop data16 inc fs outsl outsb je arpl pop data16 inc outsl outsb je arpl inc jb popa je pop pop dec outsb jae popa outsb arpl pop add outsb jae popa outsb arpl inc imul pop dec outsb jae popa outsb arpl pop add jae popa outsb arpl inc jno popa insb jae outsl add je popa jae inc outsl fs je jns add add je imul pop data16 inc fs outsl outsb je arpl gs data16 inc outsl outsb je arpl jae je data16 inc fs outsl outsb je arpl gs data16 inc outsl outsb je arpl dec jns bound jb imul jb popa fs popa gs bound arpl outsl jbe fs xor insl pop push push push je je arpl insb jne add je inc gs outsb jae popa outsb arpl inc gs outsb jae popa outsb arpl cmp jb jbe je dec insl jo gs outsb je je outsl outsb inc gs imul aaa inc xor xor inc cmp inc xor aaa xor inc ss cmp inc aaa inc cmp xor xor add push je je arpl jb jns outsb imul jp cmp popa insb jne push jns add insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add jae gs cs jne je insl gs outsl insl jo insb gs gs imul outsb je insl gs outsl insl jo je bound imul bound add jne addr16 bound je jb bound add jae gs cs imul imul jne imul jae inc jae gs bound imul imul jns je insl cs gs arpl outsb add jae insl bound gs jb jo imul imul jae gs bound outsl insl jo outsb jns je jb bound add jae insl bound jb fs je je jb bound add jae insl bound outsl jo jb addr16 jb bound add jae insl bound jb fs popa jb inc je jb bound add insl push imul je jb bound add jae gs cs jne je insl gs outsb je jb jo gs imul imul jne add jae insl bound imul outsl outsb inc je jb bound add addr16 jb insl gs jb inc je jb bound add jae gs cs jne je insl gs gs imul inc gs outsb gs outsb gs je fs je jb bound add arpl jae data16 push imul jae arpl inc outsl insl jo insb gs gs imul insl jo insb gs outsb gs je fs je jb bound add jne addr16 jb ja popa bound je jb bound add jne addr16 jb ja popa bound je je add arpl jae fs push push gs jns je jb bound add jne addr16 outsl outsb push jae jb outsl fs je jb bound add jne addr16 je jo push push imul outsb gs je fs outsl fs je jb bound add jae gs cs outsl fs outsl insl cs outsl insl jo insb gs inc imul jae bound je jb bound add imul jae bound je je add inc push push inc je jb bound add jne addr16 imul jb bound add popa outsb fs jb dec outsl fs gs je jb bound add fs outsl fs gs popa insl gs je jb bound add insb jo gs outsl jb inc je jb bound add jae gs cs outsl insl jo outsb outsb je outsl fs cs gs outsb add inc jb jne inc outsl insb insb arpl outsb inc je jb bound add gs fs je je arpl je imul gs outsl outsb popa insb inc outsl outsb je arpl data16 inc fs outsl outsb je arpl gs jne arpl add jb outsl outsb popa insb inc outsl outsb je arpl data16 inc outsl outsb je arpl jb jae jne arpl add jb outsl outsb popa insb inc outsl outsb je arpl push gs jne arpl jb,pn jae jne arpl add push popa imul dec inc pushw push gs jne arpl add je push je jb jne push popa je add jb outsb add outsb arpl add imul insb add insl jo outsb outsb je gs jne arpl popa outsb popa addr16 push jns je insl cs jb ja outsb add arpl insb gs add outsb je imul je jns gs jb insl dec popa outsb fs add outsb je insl gs jns gs popa outsb fs add outsb je outsl insb add jae outsb fs popa jns jne add je inc jne outsl push imul je inc outsl outsb je je insb add popa jo imul add je inc outsl outsb je inc outsl insb outsl jb addr16 inc outsl fs insb jne add je inc outsl jb inc outsl insb outsl jb push outsl imul pop dec outsl arpl imul pop dec popa insl add jp add je push imul pop push popa bound fs jae je push gs add outsl insb gs outsb add ja popa je inc imul dec popa je push gs inc gs bound arpl gs inc insb imul add je push outsl jns insb inc insb jne add je dec popa jbe add outsb insb add jp inc add outsb je imul je outsl insb add je inc jne outsl push arpl gs imul outsb jae jae je inc jne outsl push arpl gs outsl fs je push arpl gs outsl fs je inc insb popa arpl jae je inc popa arpl outsl insb outsl jb jae je inc insb imul add je inc outsl outsb je outsl insb jae inc outsl outsb je outsl insb inc outsl insb insb arpl outsb add add outsl outsb add je dec arpl add je dec popa js insl imul jae je dec imul inc outsl js jae je push je jb push outsl jae je outsl outsb add jb push je jb push outsl jae je outsl outsb add jae insl gs popa jns jne add jb outsl jb dec popa jns jne add outsl jae add je push gs add gs je jb add insl jo jb push je imul jae addr16 outsl js push push gs popa addr16 outsl js jne je outsb jae dec gs popa addr16 outsl js arpl add insb add imul insb gs outsl fs jb popa insl add je jb je jb push jb je dec imul popa je add jae insl bound dec outsl popa add jb jns imul gs gs push jne je insl gs gs jo jb add je bound arpl insb jne add je dec je insl add gs popa insb insb add je xor push jns je insl cs outsl insb insb arpl outsb jae inc outsb gs arpl addr16 inc jae gs bound inc jns add imul inc jb popa jns inc jb popa jns push jne je insl gs imul fs add jb popa insl push gs fs inc js gs imul gs add je gs fs push gs arpl insb add gs jb gs arpl outsb add insb gs arpl jae add popa fs imul jb push jo imul jae imul arpl je add je jb push arpl jb jb inc insb gs jb jb push arpl jb jb jae je push outsl ja outsl jne je dec jo outsb push gs add je push outsl ja outsl jne je addr16 push outsl ja add popa inc jb fs imul outsl insb insb arpl outsb add popa inc jb fs imul addr16 inc gs insb jae inc popa je inc jb fs imul inc outsl insb insb arpl outsb add popa inc jb fs imul add je push popa insb jne add fs je add imul je push popa insb jne add jb add insl jo jb add add je inc outsb fs push je gs insl add je dec gs popa add fs jo add jne jo jb dec outsb imul add imul jae je inc outsb arpl jb inc outsb arpl jb je insb gs jae je inc outsl jb gs je insb add jb gs je insb add je push gs inc insb imul je outsb je insb imul add je inc popa arpl jb jne fs outsl insb outsl jb jae je inc gs insb inc outsl jb gs je insb add popa inc jb fs imul inc outsl jb gs je insb add je inc outsl insb jne outsb dec gs fs dec imul gs outsl fs popa inc jb fs imul insl outsb dec gs fs dec imul gs outsl fs je inc outsl insb jne outsb jae inc popa je inc jb fs imul insl outsb inc outsl insb insb arpl outsb add popa inc jb fs imul insl outsb add fs popa outsb add je dec jne je push gs arpl gs push gs fs outsb insb jns jae je push outsl ja gs fs push imul jae je push arpl insb insb inc popa jb add jb insb insb inc popa jb add je push gs arpl outsb dec outsl fs popa inc jb fs imul arpl outsb dec outsl fs je inc imul je jae je dec gs fs gs add je dec imul imul pop push imul pop inc outsl jne insb gs jne data16 add fs outsb imul jae inc outsl insl jo je bound gs push outsb fs outsb add je outsl insl jo je bound gs push outsb fs outsb addr16 gs jne je push jne add je outsb je arpl imul add je dec jae imul jae popa outsb arpl jae je inc outsb popa bound imul jns gs jae je push popa jbe dec jns gs imul js je jae je push push ja push je insb add jne outsl ja dec outsl fs je dec popa imul push gs outsb arpl jno popa insb jae push gs imul add outsb arpl outsl outsb imul je push popa jbe dec jns gs imul js je push popa jbe add push arpl outsl ja outsl outsb je outsl insb add arpl outsl jb jns arpl imul popa insb jne push jns add outsb imul je insl cs push imul gs push push ja inc jbe outsb je popa outsb fs gs popa fs push push ja add imul je outsb jbe arpl imul jo imul pop dec jae imul add outsb je imul push je insb jae inc gs gs jne arpl je imul popa insb imul imul jo imul imul inc jb popa je dec outsb jae popa outsb arpl addr16 dec outsb outsb gs js gs imul outsl jbe add insl jo outsb outsb je inc jb jne outsb je js gs imul add pop add outsl add je popa add je jae add add sub imul outsl add outsl add je and push add outsb add and push add jb imul dec add bound add add pop dec add jae je and dec add insl add and cmp add bound add add sbb imul je and dec add insl add and cmp add bound add add pop push add outsl add add add outsl add add add add pop je js je dec add jae je dec add insl add add je js je inc add jb jae je dec add insl add add je push add outsl add add jne insl add add add bound add add sub outsl add insl add je and cmp and xor xor xor sub add add add add add adc jae inc add je imul add push add popa add imul add push add arpl je popa add add add dec inc add jae imul add push add arpl je push add popa add imul add xor add popa add imul add push add arpl je popa add add add or outsl add add add outsl add outsb add dec inc add jae imul add push add arpl je push add popa add imul add xor add add arpl imul add push add arpl je popa add add add adc push add add arpl outsl add add data16 insl add add add outsb add add je add inc add add add outsl add je popa add je add add add imul add add jne jb add add dec add add add je and bound outsl add add and popa add add add imul add add outsb add add daa dec add data16 and je outsl add add add and push add jae arpl jne add add add add sub or sbb outsb add add je and inc add add add add rcpps jne arpl arpl add jae add add insb add and jae add insl add and je outsl add add add add imul imul add add outsl add insb add add outsl add and insb add imul add add add add jb add je add add je aas add or push add dec add add inc add insb add and arpl jb add je add add add add add outsl add je popa add je jae add add add adc jne arpl arpl add jae and add je jb jns jo outsl add outsb add or jbe outsl add add pop inc add jb add add data16 pop push imul add add add push add data16 push data16 imul inc add inc add dec add data16 add pop add add jo add add pop inc add add add add inc add add add inc add add add inc add add add dec add add add dec add add add dec add add add dec add add add push add add add push add add add push add add add push add add add pop add add add pop add pshufw add add imul insb add insb add add add jb add add jbe xor add dec add jae je and dec add insl add add inc add insb add add je dec add insl add add jb jae je and dec add insl add add inc add insb add imul je dec add insl add add push add outsl add add add jne insl add add add insb add push add dec add insl add add add data16 insl add outsl add je popa add je jae add push add jb jae outsl add popa add add outsl add je popa add je jae and push add insb add inc add js add jb jae outsl add popa add add outsb add add je jae add add outsl add jb arpl add add push add outsb add outsl add insl add pop add add jne jb jae imul inc add jb insl add jb add je add xor outsb add outsl add insl add pop add add dec add outsb add jb inc add arpl add je imul add add outsl add add je jns and arpl popa add and outsl add insb add and bound add add add add add add outsl add add outsb add add push pushf mov push les loopne dec adc push jno or xor mov push adc add adc add push add adc add adc add add add add or adc adc adc and add and add sbb add add add sbb sub adc adc push adc add adc add add push push and add xor sub sub add sub adc xor xor add sub add sub xor mov pop jg aad cmp push add adc push adc add adc add adc add add inc add add inc add add inc add adc add add push sbb add add xor sbb add sbb push adc and push adc adc push adc push pop push adc sub push adc sub add adc add add adc add push add add sub add sub or adc add add adc add push add add sub add sub push adc push adc add adc adc add add add xor add adc add add sbb and or add pop add add add add or add or and add or or sub adc add add or push adc add add add add add push adc add add or add or add add push add add push add push jb jo outsl outsb inc js gs imul ja add insl or add add add add gs outsl outsb popa insb inc outsl outsb je arpl add add add adc jo jb addr16 and xor xor add sub add ss xor xor xor xor sub sub xor arpl bound add or add xor xor xor xor add add cs inc push inc jb insl gs jb sub gs imul xor add inc jb insl gs jb inc imul popa insl adc dec inc push and popa insl gs jb and add add push and add andb add add or add dec popa bound xor add add push dec popa bound xor add add push dec popa bound xor add add or dec popa jae dec popa insl add adc add js inc imul add adc add je je push jne bound add or add dec popa bound xor add add jo insb dec popa imul or dec gs gs add add add addr16 add adc add inc outsl insb dec popa jae dec popa insl add adc add outsl insb inc imul add adc add inc outsl insb push push jne bound add add push sbb add dec jns gs jo popa je or xor xor xor xor add and add cmpb add add or add add add add add push jns je insl cs gs jne arpl cs outsl outsl insb jae push je outsl outsb insb jns jns gs gs jne arpl jne insb fs xor xor xor xor add add imul je push imul jne imul outsl jb cs gs imul imul gs imul insb gs imul popa je jb xor xor xor xor add add or cs gs imul add or cs outsl insl jo je jb add add push dec jns inc jo insb imul add or add dec jns push jae jb add jns inc outsl jb jae add add push dec jns push bound jb imul and push push push push pop add sbb jae gs cs imul inc outsl jb jae inc outsl jb adc gs je pop pop dec outsb jae popa outsb arpl pop adc jo jae pop pop dec outsb jae popa outsb arpl pop adc cs jns jb push arpl outsl jb jae add add jns je insl cs bound push gs imul outsl je arpl jae push outsl popa jo je jo insb imul je arpl adc gs je pop pop dec outsb jae popa outsb arpl pop adc jo jae pop pop dec outsb jae popa outsb arpl pop add add add push add push add add push pop or sub sbb sbb adc adc xor and add pop or add addl push and add cmp add adc add orl or push and add orl add add pop push sbb adc and sbb add or and add andl adc adc add cmp and add xorl adc sbb or add add add or push add add sbb inc adc add pop and add adc add adcl push add push add adc pop or or add add sbbl adc sbb adc add add add add sbb and sbb or push or add add adc or adc sbb adc add sysret or or add add push push adc push add add pop pop and add adc adc or pop or add add or add add subl add add sbb invd or xorl xorl add cmpl add add push or add push adc add add and sbb and add push add add cmpl jne add lea and adc add adcl and add pop add sbbl push adc or sbbl adc adc sbb jns add cmpl sbbl sbb adc push and add andl and add subl and add xorl add sbb and add add adc add add add add add push push and add or adc add add inc add inc add sbb pop add inc or add adc pop add add add add sbb add add add sbb and add sbb sbb add and adc and add adc adc adc add push push adc push add add sub adc sub add sub adc sub pop pop push add add adc push add add push push sbb add add add add add jns and add adc or add pop add add add add or add or pop add add add add adc add adc add add add add les add jno add and add jno add add outsl jb js dec popa imul jb gs insb add add add and 