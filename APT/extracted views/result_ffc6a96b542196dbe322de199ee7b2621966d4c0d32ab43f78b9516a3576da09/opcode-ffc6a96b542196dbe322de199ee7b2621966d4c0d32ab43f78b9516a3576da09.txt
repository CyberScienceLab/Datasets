call add push mov sub fnclex fwait smsw test jne smsw test je cltd xor xor xor mov jmp or or or or add add push mov push push push push mov cmp push mov pop jl push pop xor div sbb (bad) (bad) in incl imul add movzbl and ss mov shl or mov shr nop out call and mov mov sbb in jbe push and and mov add dec cld outsl (bad) in pushl test jne movb jmp mov dec movb push add idivb jbe or mov shr rorl jmp cmp andl add add push call or pop leave ret test mov and inc add adc add adc test jne push dec imul fmull cmp fdivrp scas and or add push mov mov add lea push xor adc (bad) xor push push cmpb je imul push xchg fnstenv imul fisttpll clc push and (bad) std (bad) mov ja pushf cmpw lock xor cld or inc add dec clc jo inc scas pop or or fildl add rolb jge je ja pop sti cmpl jbe adc or dec adc call out ljmp neg sbb inc imul (bad) cmp ja add lds push and push adc xor and lock rorb add push dec jb ret mulb js insb and sbb (bad) jl jg xchg mov cmp mov mov pop lock cmp jl mov insl sti fistpl sbb lea pop sti adc lret inc adc or leave add inc jne adc lea sbb imul xchg inc and cwtl loopne inc cmp cld add jl xor jle sbb shlb dec or lods inc pop lea or into jo push adc stos mov pushf xchg mov add add popf cwtl dec cmpl inc xor inc cmp jg pop dec jl lds int3 cmp fimull push and es fs test mov cmp push push push pushl xor dec (bad) sti pop jno in or mov mov lea mov or je mov mov jae jae push push shr jo add sarb lret or movl sub lahf lock add push cmp cmp je (bad) aad jge cmp mov in andl loopne push stos and mov out add incl rorb mov push lea cmp dec mov mov cmp add or cmc push pushl mov shr out mov ds cmp add fcompl pop (bad) mov in cmp xchg cwtl inc bound nop inc insb ficoml aam aam pop nop pop jb and and add inc dec and push out stos ds xor add jg or mov je mov push mov or lea push push test mov cmc sub lock pop pop clc mull or int3 pop test mov xchg lock adc orb leave or lea push orb xchg add lods mov orl rolb mov pop add ret inc or inc adc cmp sti push adc ret cmp lea mov lret jo add mov adc addr16 lea mov je inc aaa and mov xchg lahf push and cmp xchg fnstenv sub dec loopne (bad) add xor push xor mov lahf cmp cmp jne ss call js,pt xchg pop xor (bad) adc jne fnsave lcall loopne push (bad) clc xor push scas jge (bad) incb das inc enter adc (bad) pushl add xchg jae stos mov cmp (bad) je jl or fmuls jge push enter jl pop ret add mov push je (bad) xchg inc fisttpl (bad) pusha jle popf cmpl xchg je fadds jle ret daa mov xchg mov add loopne cmp lods mov andl jnp adc adc (bad) xchg in negb std push or xchg fbstp mov cmp test mov add inc inc fidivl jb cmp stc fistpl imul adc push push in cmp fs sbb scas mov push (bad) adc lds or mov cmp xor in sub clc push jg and xor imul decl jae mov jg mov mov mov dec jl std push sub lea mov shrl pop sub cmp frstor das pop mov or mov xchg add add pop jle sub or lds in xchg clc fsts xchg and and and shll movsl loopne xchg and mov sbb mov xor mov movsl inc push push inc push inc call cld mov fildl add incl or mov add mov push push into cli lods fidiv push or sbb or sub sbb cmp jp pop and inc push inc pop mov add call push jle inc js mov add xlat jne jmp jle ja inc mov (bad) adc add push jbe dec insl int3 sbb push add (bad) stc decb test cmp jae cmp je ret inc inc cmp jl cmp rclb add sub mov jmp mov push int les adc addb add or or xor adc clc mov out mov push clc cmpl rcl je fimul jae mov mov mov and insb sbb mov pop mov jbe sub lcall mov sbb shlb and loop clc jmp add add lea cmp or (bad) lea stos push mov stc mov decl addr16 fist jle cmpb arpl test ss mov xchg add or add push cmp mov mov pop cld and jl mov push lea lea mov lea js jns es pop iret out cmpsl clc sbb jp push adc mov cmpsb das in add push mov mov outsb xlat add orb movsb and fnstsw vucomiss clc push test mov lock mov (bad) call fistl mov push rorb sbb adc movsb or push hlt or sbb mov pop xchg add addl lods pop pop icebp mov pop and add push flds in add inc fs push mov sbb rorl and push adc sub js lock push or push and push push adc cmp push dec (bad) ja rorb ret fldt pop pop xor xor jae dec mov pop mov outsb inc jl pushf fs jle jp rcl aas jle popf aad mov popl lea test je repz or jo cmp pusha xor cld xchg inc cmp and xor dec push andl sub js cmp dec pop cmp lea aad mov push icebp mov sbb (bad) pusha add xor cmp jl stos xor clc jne andl cltd or push inc push movb add aas call jle lea movsl or or and sbb jle pop sbb pop fwait push push inc popa xlat lock pop push sbb mov add orl xor and sub fnstsw mov or cmp push jne (bad) or ds cmp mov pushl insl loope sub adc stc adc mov adc (bad) ja push push push jge xlat sbb loope pop cmovae push sbb cmp sub js lock add sub movsb leave ret xor sbb jp cmp mov cwtl mov pop push adc xchg popw bound cmp push adc (bad) nop and inc or roll pusha inc pop push add inc dec hlt and adc clc and add mov (bad) jne fdivrs mov mov adc stos pop xchg push pop jmp sub add push adc lods add jl pop pop add fdivrl (bad) lock mov mov add mov out decl mov inc dec jne mov mov movsl fwait jb cmp loop es icebp movsb pop in or clc cmp lahf mov iret in dec push sub add mov aas gs cmovne sbbb mov pusha add sahf and addr16 rcrb clc test or pop mov inc mov rclb xor dec push jo adc xlat mov push and sub lret aaa and in cmp inc push mov adc mov or in stos (bad) mov pop inc add mov es lock mov push mov adc movl pusha sbb mov inc sbb mov pop mov mov lods and orb test nop inc lcall dec mov cltd push jp (bad) imul mov aad or pop inc aaa test add in or mov jne or mov add sub test js adc rcrb aas add sub mov jae cmpsb or (bad) loopne pop adc out les push iret subl ret rcrl pop addl dec sub xchg mov xchg push mov js mov jmp pop (bad) mov dec jns xor add mov data16 mov mov pop mov sub movb add push sbb or push mov mov loope mov out mov idiv stos add cli push mov loope or push fsubrp jae mov or xlat sbb enter sub mov cmc mov sub sub aas add dec push jno mov inc sub sub mov jo cmp push mov jae sub fstp push fild adc les stc xchg or lock sub pop hlt pop mov clc adc mov pop daa pop push push lcall test fisttpl pop and cld push enter push push push mov add or aam test lods (bad) aas loopne inc aam mov mov pop in outsl jecxz or mov or clc push push js lods outsl rclb jmp pushf pop pop mov mov mov cmp sbb or fcmovnbe lods cmp jne and pop mov pop jmp jbe js or ret sarb add xlat jmp add je js mov cmpsl lahf cmp push jnp subl push movsbl sbb (bad) test lea sbb mov sahf cmp sbbl out push mov jmp imul mov pop dec jo mov push jnp (bad) fstl cmp add add cmp bnd shr mov inc lea jle pop loop cwtl repnz jbe pop pop pop dec push mov pop sbb fildl and mov lods loope push hlt mov (bad) xor testl cmp loopne mov adcl jbe test mov inc in mov push add pusha inc add sub mov cmp jle pop inc stos inc ja jp clc push das mov loope sub (bad) xor push cmp clc cmc xor xor cltd adc add inc notb scas mov loop push leave (bad) std pop xor push in enter push and jno push and mov (bad) dec repnz xor add inc pusha dec hlt bound push xlat inc jp push fistp cmp out adc pop je adc ljmp insb or or outsl inc test sbb xchg or dec push insb jnp jae adc jmp js icebp mov jl dec js mov push es mov bound arpl push fwait push mov lcall jle psubw cmp jae fidivl out daa aas stos push push sbb sti sbb (bad) loop ret pop xlat push xchg fistl jne jg rolb loop dec fbstp add or and xchg clc jmp mov jb adcb addr16 pushl movzwl shl xor xor add shrb or pop rep cmp and lds outsb ret xor and das (bad) mov xor (bad) dec pop ret mov mov mov push in pop aas es outsl xchg inc dec sub jne and pop jbe mov add and dec test inc sbb stos jbe jmp add push mov push rcl jbe push inc jmp dec in jbe mov (bad) mov pop dec pop inc (bad) aaa test mov je subl dec psadbw fild add orl mov jo hlt incl loop and xor push xchg cli mov mov adc lea inc add scas rcll stos out push enter jne ficompl add sbb mov cmp xchg je mov faddl jne sti test jle jbe sbb sub pusha sahf adc xchg and push jp nop push insb xor mov sbb sbb cmp pop pop je and cmp sub jne cmpb mov test jle lock movzbl inc jmp fstpt push bound sbb leave inc cmp jle and setp cmpsl jns sbb jge imul mov mov outsb fimul mov xor rclb inc add add dec inc push xchg mov clc jmp call stos and sbb xor clc sbb ret cmp lret add rclb movq pop or push xor adcl sti cli add jg js ret mov pushw or xor and test jne dec cmp jl sbb jbe and (bad) jge add bound mov mov mov cmc stc idiv decl and ret cmp jb cmp jbe cmp push sahf jbe cmp lock jle (bad) jbe cmp clc jbe add cmpsb cwtl mov adc or es je add adc inc insb add rcll (bad) loope fcoml or adc add in sbb push xor (bad) inc vmread dec pop or pusha lds andw mov jbe hlt jne xor aaa movsb fcomps lea in lcall sbb adc outsb pop mov cmp jne or mov jge je inc xlat sbb pop push cmpsl mov and add lret loopne push add ja and (bad) and leave xor mov sbb xchg adc adc or pop rorl fwait and call dec and test pop movsb inc sub add add insl pushf mov push int3 or pop cmp int mov sbb pop loopne push adc push repz das cmp mov addr16 stos jge adc fdivs testl cmp ficompl mov xchg push jo stos and adc sbbb mov inc pop sbb mov dec mov mov push xor lods cltd xor es push inc push mov adc rol push sub sub es ret sub es inc inc dec insl xor jb sub jge ds jle lea cmp fild jge inc add cmp imul push add push sub pushl pop xchg jle and lea les adc insb inc adc push push push arpl jmp xor push in push xor pop and push push ja inc sbb jge insl clc push mov xchg adc shrb test lock adc sbb lea pop lods add mov mov mov add subl clc sub inc push (bad) ljmp fdivrl out fld fucomp fnstsw test jp fstp fld1 fxch (bad) in ficomp lea ljmp push sahf fmul fcomp jmp les adc shrl (bad) mov lea or loopne and xchg outsl fcos push inc cmp jge incl fmul fcompp jmp je js (bad) ja or add xchg jae (bad) fstp sub push dec mov pop ret gs mov add gs mov jo xchg mov push stc xor dec test mov add or add push mov icebp rolb and add mov dec push das mov jae mov sbb sbb inc add pop sub jge cmc imul adc add mov jmp cmp push inc imul pusha aaa (bad) add xchg sbb pop sub dec mov je stc push lods cmp inc arpl sub push and jmp and adc or enter sbb das incb sub pop or pop hlt iret push push sub mov rcrb (bad) pop adc ljmp inc dec push rorb sarl xor jle add adc repz test dec mov adc andl mov and sahf sub mov pop mov or (bad) and clc decl mov mov mov mov lea push nop pop stos (bad) xor imul ret mov or cmpsl push xchg cs mov add insl add cmp andl mov or sbb cmp js mov popa inc add cmp xor xchg jne repz lock push call cmp pop mov add cmpb cmpl push icebp push sarb jbe outsl add push push push ret push jge test rcrb jg (bad) mov bndldx jne mov ret addr16 test sbb or push not subl jl push cmp popf dec es arpl mov mov orl xor (bad) xor jo jmp lea subl lret mov iret cld lcall push xor mov into call clc push in inc push clc and jne outsb daa es lock stos mov out adc test roll xchg loope lret add jns clc pop orl sti cwtl push gs mov and sub pop movsb ds movl adc push jp aaa push lea popa test sbb jg les or cmp pop pop jne jmp shrb pop adc add sarb fcoml mov pushf pop xor sub pop jl push hlt dec int3 add dec jne mov lock adc jmp adc es add dec or push add pmuludq xor test xchg or ret adc sub fimul out (bad) pop pop pop clc loop cwtl jmp cli adc sbb or or (bad) mov neg sbb and sub add add push int3 je pcmpeqb push or push fsubl and push and pop lock rorl loope fadds add cmp or push daa push push out je or jnp data16 aaa sub lea mov lods aam cmp out or inc cmpsb setne pop rorb or mov test stos sub jge or mov mov enter (bad) push or out jl ds and xchg fsubl jmp (bad) adc pop adc je insl mov adc test jne arpl adc adc sti std daa lock lods sub push fwait in or loope stos cmp inc je (bad) cmc and je sbb je (bad) jle addl add or (bad) pushf rclb mov pop mov inc adc lods insl or sub hlt push adc clc out maskmovq (bad) jne xor jle adc or stos loopne mov or pop or push dec mov sbb sub ret jg std je cmp jb push inc and fdiv inc sbb (bad) push (bad) sahf movsl inc (bad) push add (bad) pop lea or pop jae imul push jne jmp lret insl xchg push in mov push scas notb sbb or lods add popa mov adc add orl (bad) add lods cmp add adc dec aam (bad) push test aaa das add or pop leave ret shrd icebp sbb push or addr16 adc sub push push push int3 sbb push mov add pop ret mov and push xchg jo add jno ret cld and imul mov mov cmpsl adc je ret mov enter gs in popf adc sbb xchg add sbb cli jmp xchg addr16 jle jbe dec adc xchg push cmp jne loop imul add or lock jmp push inc xchg loopne cmc movl xchg and mov sbb dec ja es (bad) ds loopne add inc test je dec xchg push xor ss mov inc into movsb add loopne add call jle mov add sbb ffreep rolb xor add jo rclb cmpsb in out daa jne or fldt in adc or push pop cmp or out dec xchg push aas aaa pop pop adcl lods test mov pusha sbb push fadds (bad) fcmove or test popf push sub lods lock cmp jl sub push mov and loopne movl pavgb scas cmpsb inc call loop inc sub add push fildl mov dec and push pop enter xor xchg inc out push cmp enter cs xlat lea add sbb lret adc dec mov into jmp clc mov and les cmp xor (bad) pusha adc scas push cmp and cmp call pop pop mov sub outsb call mov push cwtl ljmp jne adc or push add push push sbb in or dec and cmp add xchg xchg mov mov xchg jne popf sub sbb xchg aad dec push or cld xor mov movsb jmp push ja or mov xchg js mov pop clc add je in (bad) ljmp push add aas popa es push aad fnstenv lods cmpsl js or adc das insb rcr push mov mov ja jl out xor data16 sub xor xor sbb ja pop jns mov imul sbb dec sbb mov dec popa push sbb adc out or pop test cmp mov sbb lock ret push cmp inc icebp adc mov aaa inc jo ret std cmp add or cmpsb push clc pop lea inc std or fsubl ja addl xchg repz lock push push mov jnp cs add mov fldcw lcall add cmpsb imul mov mov and add mov add sbb cmpl dec cmp adc sarb mov cmp clc add add bound add out push jp out or sbb imul cmpb pop pushl mov mov notl xor mov orl jne pop je pop jb or movsb and in add arpl inc mov push push or cmovle lea push push loope notb and aam (bad) fcomi add rorb xlat mov jbe mov add cmp dec dec inc jnp or or mov movsb pop dec jp xor out inc xchg mov pushf cmp or cmp mov ficomp xor push push add jo adc ds out xchg or dec cwtl push mov push jmp push sbb (bad) adc sub int3 adc push sub and add add push dec cmp jl inc ret rcll and je dec movl ss sbb jmp sub mov add add push sub enter push mov les les xor mov mov add dec int3 int3 ss mov jo adc mov push push adc sysenter mov inc ret push push sbb es xor lock loope ja mov add cmp jo or push mov mov loopne jle pushl popf repnz push jno or sub sbb add add aam cmp adc inc adc xchg mov lock js rorl jmp sbb add dec or arpl push jne mov clc pushl dec add test sbb add mov sar inc shl cmp test add inc jecxz dec jg cmp jne mov mov and mov add xor or aam fwait sub ss xor pop add mov mov cltd push test add pop scas inc mov test push sar in push je or sti jl cmp je inc inc mov cmp cmp dec dec cvttps2pi push jl testl cmp sbb inc pop es and mov inc push or jle sub cmp je cmp je push add add fbld push push add add notl in pushl cltd test mov test push pop mov (bad) pop pusha mov mov jmp andl lea lcall clc aaa dec and movb and adc inc or clc and mov clc js jge pop mov cld pop lea jne cld jne das (bad) cmpsl sar sbb or fmuls mov inc cld or jbe push add movl das dec push lods pop inc sti and pusha push std imul mov xor adc jo or sub mov or in add jecxz xor and or sahf mov loopne jbe push ffree sbb or and mov cmp bound fdivrl inc sbb cmp lea loope sub push mov xor adc pop in inc lods push in sarl and mov cld add add cmp fisttpl dec lock imul dec cld pop imul xor clc mov sub push sar push jbe loope,pn cmpsb xchg xor (bad) add in loopne push (bad) call jge hlt mov lods lock hlt lea cmp je lcall adc xchg fmull add aas enter sub sub jmp inc es sub and iret mov push clc mov cmpsl mov rcrl pop decl subl or push hlt jl cmp and lcall je inc mov jle in mov dec mov (bad) jb insl loopne (bad) and xchg punpcklwd add sbb popl add push subl ret mov jle cmp daa je sub or push add imul adc movsl and push xchg outsb jo dec pushf jne jle jo ljmp dec inc mov js sbb xor xor cmp lock dec and je jb push xchg xor mov pop cmp push sub cld es cmp rorl and inc sbb clc or into ret xchg mov xchg push loope push jo adc sbb inc lock add cmp ja jb cmp jae or lds or and rcrl sub mov scas xchg das xor push sbb mov or cmp test pop sarl jl inc cmp arpl pop in adc sub mov or out sti mov jne xor pop (bad) pop add cmp push adc and jne xchg in jle js or je pop sub fstp xchg mov andl fdivrs arpl pop add jmp mov sbb or or push imul mov push add pusha sub stos push arpl fisubrl pop cld and dec jmp icebp cmp (bad) (bad) lods jne call cmp mull push arpl je mov sbb mov mov add je mov ret jmp mov out cmp add mov jge adc vpunpckhwd loopne push lret push aaa je out and inc aaa test add addb dec call cmp pop adc adc pop and add pop daa dec xor adc adcl inc xor and test jne shrl (bad) or push mov jmp sub jmp rol test jp add inc adc push jo cwtl pop mov mul push js pop mov jbe,pt outsl mov icebp add cmp jb cwtl movsl loopne mov je dec std push or or xor mov sub mov sbb and test mov push out idivb push push add movsl outsb pop dec jo jl aam je je xor fmuls sbb pop fidiv pop adc mov int add sbb inc sbb mov add call push inc inc pushf repz (bad) xor lods aaa out decl mov or loop sbb xor sbb fwait push add or push jmp jg sbb sub je mov (bad) js sti rorb cmp outsb arpl sbb xor dec movsb adc inc test xor push dec xchg pop and jae mov pop imul cmp or cmp jb pop adc push mov or loope dec fdiv and ss cmp or push add ret pop xchg cmp mov cmp push jecxz xor push lock push out retw fsubrl inc push jmp out xor mov roll dec cld push out xor mov push sbb mov packssdw mov adc inc sbb xor imul (bad) pop fstps jne pop push push push dec add fnstcw cmp push in jo or mov adc push jge pop xchg mov adc jecxz fadds daa pop pop mov pop xor xor pop or cmp lea lock stos inc dec inc cs mov or sub sub aas je xor insl stos add and xor pop pop inc pop mov adc jge ss out sub int3 or clc aad push adc (bad) js add pop push ffreep in pop or or pusha sbbl xchg xor push inc add pop add dec jmp lea push ds adc jnp xchg je (bad) repz es or xchg jl pop jnp push andl jns mov or mov inc fstps xlat and push inc xor js (bad) stc mov cmpl add fadd push orb pop inc sbb loop sub mov pop cmp add mov mov cmp adc jg (bad) or adc fcoms cmc xor pop int add jge pushf adc sbb xor int3 push fadds inc xchg add adc dec roll mov pop repz inc addb fildl loope add jle or mov inc in push sbb add repz xchg add xchg ret mov lgs pop adc mov ret or mov add mov (bad) into jo lods ds sbb enter jae lds sbb pop hlt mov sub mov adc ja pushl xor push clc mov decb xorl or mov jae leave mov jnp jo push dec jle push push add lcall mov inc std add xchg add mov sar fistpll mov xor punpckhdq mov sub cld pop cli mov es adc (bad) sbb sbb add pop iret inc xor xor or mov cmp push push test test imul and sub ss pop lock movl pop pusha fs int3 stos loopne sub push xchg mov push add adc and mov rolb repz sbb daa jmp mov cmp add cmp or mov ret imul rolb scas es test adc push sahf adc icebp sbb std add mov xor sbb out or or or mov pop pop pop or fcompl repnz xor (bad) loopne popa mov pushf das into test mov jmp pushf test pop daa or ljmp lock push ja jmp push jae add jmp repz add pop ss xor mov xchg and lcall aam add inc cmpw out rorl movsl lahf ret mov test sub push xchg or fisubl icebp inc xchg fiadd dec add cmp xchg dec lods scas loop add lock push test clc cmp fildl pop jo maskmovq (bad) mov lea mov fwait lock rcrl cltd or inc lahf movsb (bad) imull dec inc cmp sub (bad) aad push adcl xchg sub in cld arpl mov addb pushf sbb lret sbb test sub push ljmp cmp add or xchg cmpsl add aad mov or std push test cli stc or fstpt add clc or loopne jno lock dec xor scas jo mov jno notb cmp and lods lods push push fyl2x rolb xchg pop dec leave mov push xchg sub rorb push test mov xor aas subb mov jbe mov jb in mov loop mov cmp les cmp clc push pusha push add push insl add (bad) in cmp das inc push ss sub jmp cmp cmp cmp lret xchg in insl pop hlt subl insb insb xlat and push (bad) call mov xchg xchg outsb rcrb add into scas dec push popa rep and jo sub adc or mov sub or leave lcall testb mov and push dec mov xor in and out and (bad) xlat inc fidivl push (bad) dec insb and imulb push fisub lahf pusha jne push les inc xchg scas or cld xor test inc in clc and aam rcl mov sbb cmp aas fdivs xchg dec clc jne mov ret jmp dec bound loope pop adc jne add cmpsl mov jmp (bad) mov or loope or addb lock sti jmp jo cmp adc jle and movl jnp loop and pop hlt and xor cmp adcb push push or and (bad) dec jbe and mov fcmovnbe xchg popf add js testb mov movsl inc subb je nop xchg mov xchg mov sti xorb sti cmpb mov sbb fwait je (bad) aaa js movl add lret inc push cwtl sahf xor hlt sbb pop imul sbb clc sub xor in test push insl sbb bound pop push stos sbb inc inc dec js jle and stos pusha fistl popa enter jmp fstpt or sub cmp jl mov and mov jmp rorl mov cmp mov mov (bad) jae and jmp mov daa push xor adc insl (bad) out push daa je (bad) andw ja pop clc clc sub and clc sub fs sub imul std cmpl or push or add out or fstl add add xor gs (bad) negb rorw sbb adc adc cmp das mov or int dec mov cmpsb jmp shrb mov xor and mov imul cltd push mov or push cs sub push iret pusha sbb test fldl mov mov lahf sti push call dec inc dec and out cmpsl push call icebp incl dec jg outsl out adc add lret pop (bad) adc out insl dec test mov rcll in xchg nop cmp in test cmp jbe mov repnz pop sahf lods mov hlt in hlt cltd in push hlt hlt sub lods or dec xor inc sti lock or lock jg lods test or and jne stos adc or bound push test lock mov aas cmp ljmp jle or add sbb inc sbb and cmp or pop inc gs dec js inc (bad) or cltd and pusha xor inc or aas loopne lea jmp adc pushf xor and push or jo mov jo loope inc verr xlat or xchg andl cwtl cmp or or jmp jae mov mov add and outsl cmp (bad) and popa mov add das jo mov bound add aaa cmpsl fmulp addl insl sub arpl inc push nop mov add es or lock shrb and dec (bad) mov je mov push outsb adc and adc pop call sbb push jne aam add or adc and je adc lods mov sbb xor add adc in xchg xor inc pop adc push repz inc inc cmp dec jae mov cmp or push fldcw jno mov push cmpsb sub pop jo cmc pusha sub adc or xchg (bad) repz popf cmp add inc pushf and icebp pushf aam lret and imul dec insb cli icebp stos add (bad) and inc cmp mov or pushf inc cmp leave xchg mov or adc adc push pop test ds and and ret mov sbb cmp outsb and out test cmp pushf shlb jmp test xor mov adc (bad) and (bad) lock mov and jnp ja sbb add inc hlt faddl add push ficom cmp adc jmp call pop push fistpl cmp push sub pop sub loope je sub sub sbb lret dec pop jge fs add or scas ficom out push add and cmp scas mov cs es push out mov ss dec push loopne mov (bad) push pushw dec inc dec lcall rol inc push inc cmp push mov idiv adc mov dec pop mov push or mov shlb je pop pusha add push jmp and pop adc aam pop mov icebp sub in bound sbb and and mov xor jae loopne add das xchg push cmpsl sub test xor dec xor insl cmpsl push aas mov (bad) dec sub add push movsl pusha (bad) data16 mov sti rcll aaa lea packsswb push xchg mov (bad) lods aaa inc mov add (bad) mov in and mov inc addb lret fs pop div inc das icebp or loopne lea add cli imul add and or push dec dec adc pop (bad) (bad) (bad) ljmp inc in mov cmp jbe cmp jbe cmp je cmp je cmp jne daa xchg lock mov (bad) (bad) jbe aaa pusha addb in xor dec add insl add add pop sti lods sbb mov add push sub das inc xchg sbb faddl xchg and sub mov out add aaa (bad) mov incb mov mov push sub mov push or clc mov cmp insl sti mov add enter mov sub adcb dec cmp pop test mov mov iret fs lods cmp pop test adc clc out mov mov cmp adc sub and xor or inc sub or outsl add shl push lea push imul add jo in imulb jle push pop adcb add and notb subps aad jne cmp fistpl push inc aaa out pop aaa mov cmp les dec mov cmpsl mov pusha jmp andb lea push inc inc adc bound adc and cwtl cmp add aam leave pop mov scas mov jle add push push testb (bad) mov add or ja ljmp fisubr jno ds insb pop fiaddl push xor jbe xor pop mov cmp mov xor or loopne ds clc lea pushl ja cmp inc gs xlat xlat jbe add rcrb shrb (bad) aaa sti mov pop dec mov pusha in mov mov mov add repnz cmp je cmp mov push jnp in pop add daa and (bad) jge sbb sbb push mov mov ljmp push sub les clc inc mov jmp cli repz dec rcl imul lods lcall sub jp rolb push pop test shrl or xor pushf mov add push arpl mov jmp in jns dec and jae in dec insl stos and cmp ss or mov lcall push xchg xchg jne inc rcrl sti je mov fcos mov adc pop xchg push aam sub aam icebp mov sbb and lea pop cmpsb jge call enter aaa adc fsubrl xor lds divl cmp xchg shrb ljmp inc aam mov ret or add lds test push rcll pop fmull movsb (bad) mov loopne loopne and nop cmp push push loopne mov xchg mov jbe mov push xchg jg push insb aaa dec jae arpl add jmp cmpsl ret scas or and std cmp ds js mov mov sbb adc jb movsb jo sub cs and xchg sti xchg pop inc arpl and pushf jge adc mov add insb xlat negl nop cmp lods add sub mov std scas insl xchg xchg and or lods pop sbb pop (bad) cs pop popa jns pop sbb jo sub jmp jg je mov or cmp add pusha add pop cmc popa clc cmp fsub cmpw xchg sti or sti pop popf sub sub pop push adc insl std sub sbb into (bad) (bad) pushl adc call imul js cmp dec mov mov jbe push jb mov mov lods (bad) dec mov xlat add and pop inc add test cmc xor cmc mov sbb test add pop in and sbb int3 adc enter (bad) (bad) mov out pop xchg inc mov xchg stos pop mov rep movsw sarb sub inc subl ds mov (bad) clc test sbb test hlt xor push jle (bad) ja out pop cmp jne cld bound adc or (bad) icebp cmp xor fs cwtl adc rolb mov movsl aam adc adc in add aas mov popa ret jg jl lea jge mov sbb adcl arpl pop aaa jae and (bad) xor and cmpsb push cwtl fdivs xchg loop adc pushf mov push popa std xor inc sbb stos in add scas sbb mulb je lea imul and les jb rcll roll lods sahf cs loope gs insl cmp addb and inc push (bad) xor negl mov lock addb jl frstor jb and xor stc mov jge scas dec inc xchg insl jne and (bad) lahf cmc mov push mov pop shlb cmpb (bad) cmp cmp adc adc push sahf out sbb faddp jecxz inc pushf repnz loop ret push push test shrl out sbb and cli mov aaa and sbb dec fcomps jae push mov enter mov cmp arpl mov xchg incb mov pop gs adc push movl fisub fist aam mov or and or movb or aam push lret ret mov into test push adc mov cmc pushl jnp hlt cmp mov fisttp sbb ss sarb jg jle (bad) jb ret aaa dec pop gs mov in movswl add and push fidivrl adc sbb push and aaa mov je push add adc inc in sar clc push push mov jmp call adc mov or inc cmp inc repz inc jmp add cmp jmp das mov add push pop mov fmuls pop mov lock jp pop jmp inc adc jmp jmp push jne and dec and xor mov mov mov push sub mov lods mov jge xor adc push out lret jne and mov sahf cld lcall add jmp mov jge xchg cld inc (bad) mov mov or or fs push cmp jge push lock test mov ss or pop (bad) mov and and cmp (bad) jo inc add push mov lcall repz cs inc ret cmp push inc xchg idivb inc xchg mov bound nop pop js jae rolb cmp xchg mov mov xor addr16 push imul or orl jge jle jg mov mov mov lods add jo dec rcll push add sub jmp sub add ret pushw cltd scas arpl or nop pop icebp rclb movsb leave xor mov shr sub sub add or lret mov aam pop cmpsb and and fisubrl xlat pop pop ret das or mov loopne mov js cmp data16 inc xor adc cmpsb (bad) jp (bad) sbb popa lods mov ss je mov and push pusha testl test imul and shrl (bad) and cli popa mov aaa mov sbb ss xor cmpb negl jge or addb cmp xorl pop js jle mov add mov add and mov insl dec push xor lds and nop add and jp adc mov je and pop ffree mov xchg jo push getsec xor bswap xor pop jae inc ja sbb js cltd (bad) adc cld addl jl xor (bad) jmp in mov icebp dec push popf (bad) adc in nop lds and xchg or push jae pop and pop push loop push in pushf cmp pusha cmp jae int3 mov mov dec call adc enter into adc push pop push mov outsl push mov and dec add sahf mov hlt sbb (bad) xor loope mov cmpsl (bad) in or cmp inc jge and dec sub and and jb dec and dec cmpsb fs or mov adc pop pop adc (bad) lea lods push add and pop mov or cs mov adc adc or push push adc movsl imul or jmp inc pop rorb lds adcl sbb (bad) dec mov rcrl cld inc push jne push sub inc test or push xlat decb dec dec push inc xchg pop pusha lock jo or insl and xchg jmp lea bound arpl inc and xchg xor dec les pop add aaa push add inc push push in add js and push outsb leave pop push xchg dec aas xchg mov mov dec and lea push call add mov push sbb inc mov and push add add pushf push push imul cld jnp sbb push loope lods dec stos cmp cmp push jbe push aas lods test call xlat sahf pushaw fnsave fs mov jb xor or test fildll cmc add addb nop pusha icebp xchg add rcrl pop call sarb add int pop stos jl sbbl divb jle cmp push call clc je cmp js in cmp fs mov or mull inc and mov add adc loope or dec popa or pusha sub jbe (bad) out test xchg inc sysret adc fdivrs and sub (bad) adc fnstenv test fsubl and jl or cs push sbb add jl push aad add fstpt mov push add fmull sbb and inc enter imul sahf shr daa test sbb daa (bad) loopne pop adc xadd fnstenv or push jae lock das clc or push ja lret push sbb jl push arpl hlt sub dec js sbb ss lods add jne loope mov gs sub cmp add or pop std push add addb cmpsl insb vmwrite fs scas adc cli inc or mov or adc loope adc adc in jnp and and loope lahf adc repz sbb xchg test cmp xor mov sbb (bad) mov push je loop push ret xor pop shr jl push sub push xor sbb add mov adc (bad) mov push test sub push and dec test pop push add ror lcall sarb push mov je outsl cld pop imul imul jae cmp je jbe shr add loope adc fild jb adc pop or mov push jo cmp inc sti pop pusha push addr16 xor and xor iret rcll dec fs lea mov jmp sbb dec and scas xchg data16 loopne or ljmp jg mov mov mov cld scas inc out pop gs (bad) mov push add push xchg fwait popa mov fs jno sub xchg loope test or adc test mov push xrelease or or mov insl (bad) jb pop push adc in fs mov xor sub movsb xor mov out cmp mov or out dec jle xchg pop xchg ljmp lock adc stos lock jbe jo mov mov xor jnp dec (bad) xor sbb sbb es mov je imul sbb lar sahf sbb sbb mov jno push or inc cmp mov sbb ja and and js in sbb push lahf sbb (bad) mov inc arpl dec lret cmc cli xchg lea lock cmp out enter add mov bound outsl mov dec lods xor xor and fnstsw and jo inc jbe (bad) pop cmp push fbstp loopne sub mov push negb pop fcoms je inc outsl je push popa int3 dec cld push add mov mov jns mov mov mov xor sub sub jle mov pop push out rolb xor outsb cmpl in add scas call mov mov add adc sub mov lret push sub fidivrl mov lret mov clc sub jle inc mov jp add sbb xlat ret test decl arpl dec sahf shl mov or jl lea mov mov push nop test loopne inc jle inc sub call xor push fdivrs (bad) or iret sbb or or (bad) in dec sbb in xor mov push lock imul add clc jne add add push je mov psrad sbb sub in adc add jle sub mov xchg decl outsl adc and sti mov pop cmpw add inc inc push add jmp in push dec mov push add mov mov mov add or pop mov cmpsb pusha mov fmuls dec push sbb cmp jecxz (bad) xor ja push xor cs push cmpl es and sub lcall dec push or (bad) mov push push lods in cmp jb mov inc mull and outsl adc push test mov js push (bad) jl pushf pop (bad) push mov xchg sbb pop test test mov xor les divl in aad in mov jg gs imul cmp or push les fucom or ret xor ret mov add out sahf dec outsb lock rclb lea jmp add add add nop fisubl mov (bad) rorb in inc mov xchg fwait add ss sub incb int3 dec enter jno mov xor loopne loopne mov shrb mov cmp xchg sbb ret inc inc jg xor lods push (bad) inc ljmp mov sbb outsb add movl call adc jo loopne pop inc std xchg inc int3 sub fcmovu add and mov or adc mov adc pop inc pusha das aas rorb fwait inc mov daa xor or outsb lds (bad) mov loopne test pop sbb bound lock add fildl lret inc adc in mov push lock adc dec xor in loopne cmp mov sub stc or lcall fstpl mov add jbe les test ret aaa push mov adc pop add jnp adc jno int shr les add js aam pop xor jbe cmpsb adc inc inc std imulb jmp sub jmp add ficom (bad) aam and push push aam loopne aad enter xchg or pop xchg push mov push rcll gs xor push jo add sub lcall sbb cmp jne jmp mov shlb or push pop adc roll int (bad) cli scas xchg out movl call mov xor lds lock pop cmpsl sbb aaa jae das add es fsubs sbb pop sub bound pushl (bad) add (bad) (bad) mov outsl cmp mov xorb cmp inc lock imul sub xor pusha push pop arpl push mov fiaddl ret adc jl mov sbb decl and imul push mov jo sub nop push adc mov lds arpl xor enter sbb xor mov addl cld shrl ds outsb shr pushl jne xchg (bad) iret inc in cs in loope xchg push outsb les and inc jl push in sbbb adc sbb jl inc push and push dec and push dec enter inc xor and xchg fmull sub adc push mov mov sbb push mov hlt popl jge mov fistp cwtl cmp je mov sbb mov lea fnstsw inc icebp xchg lock fdivrs cmpsb ret mov dec or and (bad) jo jbe push adc add rol pop push rcr pop mov or xor push adc mov add or loope,pn jl push je gs cli fmuls sub xor add or mov cmp mov and lock mov jmp mov fs pushw add fs xchg and xor jo or dec scas sbb in nop add inc lods add mov pop test push pop stos pusha fcoml (bad) jne mov inc inc sbb inc mov add or mov ret xchg dec lahf pushf push mov out (bad) adc lcall inc push push test sbb add mov push and lock inc imull adc and aas popa mov push or jp xchg inc test xor mov ja mov mov lea (bad) mov jge aam add (bad) mov jns pusha push mov (bad) pop xor cmp and testl or mov (bad) push movsl inc and hlt jle jmp ss inc inc jecxz sbb pushl rcrb lds divl jmp mov jae push pushl jno stc aaa out mov adc loopne rcrb (bad) xor mov sub jl mov jne jmp mov adc mov imul in es inc aam jbe orl cmp jne xchg inc mov pop out popa (bad) icebp mov clc push jge mov fdivrp or mov movl and ss add add mov mov sbb (bad) or cmp xor add ret sbb insb pusha test or rcll or subb sbb mov ja mov hlt (bad) jmp mov int3 xor mov push push pop push cmpsl jle sahf xchg cmp xor push fisubr mov clc fdivrl dec or adcb push sbb in ret mov mov movsb adc add xor adc jl add push js (bad) adc je ret push mov pushl mov mov mov or push adc out cli and xor stos ss dec pop xor or ljmp xorb xorb sarb jp sbb ret cli cltd pop inc jne mov xor sbb sarl mov ret dec sbb int3 (bad) gs add daa je sbb sub or push icebp popa movsl shlb adc add (bad) or mov in sbb xor inc add sub adc lret xor out sbbb mov push out pushl js push dec inc dec je jecxz jl jmp mov push jne push aam add rcrl sbb add in lret cli and js add testl jbe roll mov icebp outsl setbe sbb lret push add push push jp adc mov dec or call add cmp in adc mov jmp adc ret lcall mov pop lock cmc add push clc push sarb test push jae jbe and insl add bound or push push movsb mov or pop mov mov int3 rcll ss outsl fidivr (bad) lcall mov push push sub aaa movsl fdivrl mov sub add (bad) sbb ret mov test cmc pop dec cmp mov scas mov sub (bad) rol mov add pop inc add mov add and jne sbb (bad) out mov mov leave dec gs xor inc add loopne repz push mov push mov xchg inc mov adc jno xchg add ja sbb jnp js xor jmp xlat mov pop pop pop int lods inc jo rorb inc add sti adc xor sbb (bad) leave loop dec and rorb adc push push (bad) jbe adc aam and or rcl decb adcl pop pop je add (bad) mov or addb rorb add add push das sbb xor add shrl loope imul inc movsl add out add jle push sub loope andb push inc aam adc sub mov jo push (bad) mov add in adc adc push in inc sti fwait leave cmp xor shll int sbb aas push mov add sti mov push lods push xor mov nop xchg inc mov call gs adc adc pop loopne fsub nop out xor clc pop add in out push pop js sub pop in fstpt sbb cmp sbb pextrw call das mov pop loopne lods pop clc mov jge xchg pop or rcrb pop nop stos scas adc push push lock in pop mov mov inc inc ret add pop mov add add jo lret repz movsb das add dec stos mov jb imul xor adc dec enter push pop or stc je cmp enter inc stc loopne imul es add imul mov test or push fucom mov mov pop mov adc clc ret jge es push adc xor push sbb jne lods andl add lods adc mov popa mov sub incl (bad) movzwl cmp inc ds jmp movsb adc ficompl push loop (bad) jo loopne shrl (bad) call xchg fcmovnu push lods mov add mov or xor dec pop push dec movsl push jns push sbb sub push xchg dec movsl push adc mov add push push subl into shlb sahf add dec mov add (bad) lret adc sub inc ror cmp dec xlat or push or or or or push add push sub add add inc shll ret out adc or loope adc xchg sbb dec cmp ret addps lcall call add cmp call mov rcrb xchg imul mov or push push icebp xchg jno mov and addr16 je push cmp or push and andl orl sub sub pop xchg mov mov pop jmp sbb or inc lods and add or pop and push push into cmp push and nop fstpt mov daa jge insb add scas dec jp mov sub ds jne sbb fcoms xlat shlb xor movb test inc inc and int pop call mov sti ja add mov push in orb subl cmc fimull or mov je rolb (bad) cltd in dec in xchg lea sbb das xchg clc lea dec insb insl mov pop or sbb lcall repnz jb push jbe shrl shr or cltd in hlt or nop pushf sbb pop xchg test icebp bound das push add xor rorl enter lahf or or loope ss clc imul mov or into push lods and and mov out dec call mov xchg dec mov push or push dec fstl adc xor sbb les push cmp ja aaa mov fidivrl mov adc xchg push jne (bad) in call push push adc (bad) cltd sbb sbb ss clc mov aaa testb jbe dec xchg lods push cmp pop xor cmpsb loope cmp sti push and mov adc in pop inc sbb inc cltd rorb mov xchg aad les insl mov loopne mov jno test and and push push enter push jns mov jno enter inc mov add and and aaa sbb mov jmp jbe pop xor mov and fwait test dec pop jno jnp jl pop jecxz add loopne sbb add sbb xor mov repz test fldenv repnz and fistpll test cmp je push push sbb push fildl cmp data16 aas (bad) fcoms popa (bad) fdivl sbb in orb loopne mov movsl dec lahf sbb push call addr16 (bad) test cmp leave sbb jnp add adc mov movsl xchg pop jl inc adc or lds std sub sbb add xchg cwtl (bad) out add pop add fwait aad xor fwait push add je mov ja cs lock xchg or push add loop (bad) jne dec lods hlt ljmp rcl stc inc paddq mov or scas pop (bad) sarl push add xchg add (bad) dec mov push xchg inc sub and mov jne sbb (bad) hlt jae jne pop push loopne sbb clc add fistp sbb adc inc add cmp mov and leave mov in cmp std cmp test enter lahf add cmp ret xchg cltd sub or shrl mov inc xor mov fiadd cld in push sub jbe lods lods loope inc mov add aas xlat aas fcompl cmp cmp xchg stc mov cmp test cmp push sbb inc sti loope push cmp inc fistp sbb pop push daa push jb test mov popa mov inc cmp xor ficomp mov adc cmp adc rorb and xor push push lods adcl dec movsl and inc pusha fild or pushf xor repnz adc data16 and push sub push fldcw jl cmp mov lret pop jl loopne test out add jb mov fdivrs xchg ret inc pop pop mov pop lods ret dec lahf and mov add cmp iret cwtl ret stos adc fildl sbb push cmp call decb push cmp add inc cmp sti mov jae adc sub out or or add inc pusha mov mov adc jb leave loopne out or mov inc cmp mov inc je push mov sti out or inc nop divl push aas inc jmp jle nop pusha dec xchg aas add sbb jb add loope data16 adc imul mov jbe push sbb cli mov and adc sbb mov push cmp push decl mov fidiv push ret data16 loopne dec push pop shr pop push (bad) jmp cmpl jne test jmp push or lcall sub push adc push inc jg push imul push push push orl cmp mov or pusha sahf jl mov js and push jbe add mov mov mov sub rcrl int and mov fdivrl jne frstor xor push push cmp mov xchg and repz push inc rclb inc mov adc pop sub popa js shlb mov push adc mov push xchg popf idivb cmpsl push jmp jp mov fld xor nop enter adc out lds and cwtl jno pusha (bad) or pop sub xchg push fidivr sbb ret lret or push (bad) sbb sub rorl int3 adc shlb rolb adc (bad) idivl push (bad) pop out mov sbb adc cmp jne mov jnp daa test loope inc jp movsl lods inc push push push clc inc adc mov or or lcall xorl sub ret stc rcrb mov add fimull repz jb sbb and add es ret push add jl add arpl adc fs push aas push aaa (bad) adc xchg pop daa push je mov adc cmp (bad) inc aad xor add xchg in adc push push add arpl mov adc sbb movsb xchg test jnp sub outsb mov aas jo icebp sbb fwait (bad) mov sbbb imul xchg mov mov mov push mov push mov test inc hlt (bad) xchg adc adc dec push jb lods add xchg (bad) aas cwtl inc cmpsl adc leave cmp imul push mov mov add cld int inc icebp xor jl adc stos pop adc and vmread lock rcr add or inc js xchg or xchg xor fwait xchg cmp pop push lea into jo xchg xchg cmp lret xor mov push cmp stos pushf and add lods outsb add and mov xchg mov add mov or ret aaa or push mov inc xor add ss xor cmp inc push aas sub (bad) lds rorl mov xchg pop (bad) sub push cmp pop inc jns call pop inc lock fdivs mov pop dec sub mov pushf pop xchg pop push enter popf mov inc xor sbb (bad) cmp je mov cmp je gs adc pop push adc add in (bad) fcomip jno push neg sbb push and mov mov inc adc ret sub sahf or in ret add mov add mov je inc sbb insb dec and leave je jl adc sbb push scas in push sbb pop je xor push push cmp ficom sbb fldcw or fiadd pop shlb testb jae clts mov out sbb adc mov mov cmp push pop pop pop test or shl cmpb jle jne sbb lock mov outsb add inc cmp and mov jns shrl mov push sub mov jge pusha ficomp out (bad) neg movl jl stc movq mov and loopne dec adc ficompl rclb rolb pop mov (bad) push mov cmp mov lahf push cmp jne mov xor ficom into add jb pop push push cmp popa loopne mov ss ja mov push push push mov arpl xchg adc (bad) (bad) xor mov add push scas push jp,pt (bad) push push mov mov jle xchg ret dec mov xor mov or xchg dec shl lea jp xor mov and insb add inc mov mov mov mov imul and inc addb push (bad) movl rol push ficomp pop mov mov (bad) notb shr rorl jbe dec dec lods movsl inc mov (bad) cld jmp push sbb out fcmovu fwait add shr mov mov mov xchg xor daa es aaa add shl add div test je movl push push mov cmpsb mov js shll jge push pop dec mov mov push aad dec js movsb mov loopne std jne mov mov inc add rorb sahf inc add dec nop out xchg mov pop and adc or or cmpsb mov (bad) leave cs rcr xchg mov lahf sarl push leave hlt add imul push dec inc sub and dec mov loop mov dec and pop or test je imul neg jbe dec pusha mov gs push cmp lret fadds add leave inc mov pushf cmp inc call adc mov sbb stos fadd add outsl push dec popl mov sub mov jns add pushf pusha cwtl sbb sub dec adc pop or or xor xor ss dec pop mov jge mov inc or mov jnp add inc fcmovbe or add lcall pop mov mov jns cs ljmp mov das ret cmp jmp and or mov push push mov and adc pop outsl xor push cmp (bad) frstpm(287 push clc hlt rorl add add js loope xor xor or sti sub sbb inc add repnz push sub push inc and push pop add cmpsl dec inc or sub fidivrl mov mov inc mov or cmp pop sub jne cmp jl or jg ljmp test mov xor lcall adc adc call xchg lret add idivb cld mov (bad) cld (bad) outsl outsb sbb mov shl mov hlt and je,pt push pop lds outsb dec cmp call mov movsb inc sub mov sbb mov pusha dec mov loope ljmp (bad) push rcll xor sub pop fcmovnb popa pusha dec inc push (bad) hlt pop cmp cmp push xchg and xchg sbb jo adc pushf sbb dec push xor mov hlt xor aas cmp push hlt jle (bad) out movb push lea add mov mov loope insb orb icebp xchg mov inc mov mov pop dec pop and cli pop leave cmp adc je mov cmp je cmp je or push lret push push sbb add jbe xchg mov pop popa fisttpl push adc loopne jge sbb adc imul inc and add xor push xor cs mull repnz and or rol dec test jecxz rcrl sbb mov clc jb add jnp in jl popf lea pop sbb jo lret dec xchg adcl cmp mov cmp dec adc or add shrl hlt mov pop mov mov xchg mov add jl or add sub dec shl add mov pop shl or cmp leave adc mov fcmovb loopne jg sub add push aad dec dec shl fisubrl push xor ljmp sub ljmp gs (bad) sbb movl loopne push sub mov dec push ret or leave xchg mov jne cmp adc and jp movsl dec fildl loope dec add xor mov nop push sbb shrb jo add mov xchg sbbl (bad) cmp mov inc jmp cmc cwtl or add sub into cltd insb lock add cmp jne mov mov and jl cmp adc jle push faddl add rorl pop inc ret dec add and xor xchg rep or inc repz and arpl add shr mov adc and inc mov js leave mov push push cmpsl xor pop jecxz xchg and jbe pop loopne js jmp mov cmpsb adc pop pop dec or push push mov jl or inc int adc fcomps or adc out or fwait daa cmp push mov push jbe lods test gs les jbe lret mov das inc xchg movsl cmp loope rep sbb in (bad) jo cli mov jno add mov mov js jbe lcall mov sub pop cmp lea push mov xchg add adc sub jno jg inc adc mov lahf jno insl or sub push inc cmp mov jo jl push sub cmp popa aam out mov jno fisubrl outsb push xor (bad) outsb or and pop ret pop dec pushf xor mov mov shl mov adc push mov (bad) ss clc and or fsts imul push inc sbb mov repnz mov and dec mov xor in mov fs lcall pusha add mov pop pop js je jo pop pop pop ss sbb mov das pusha add cmp lods fcomps (bad) rorl ja rorl fdivrl aad add mov or dec add xlat das xor js adc jb sub mov or pop dec mov jl cmp (bad) cmc pop dec fnsave sarl in mov shrl enter test int pop adc sub sub cmpsl mov jb inc xchg insl and push push outsb (bad) adcl push or les push push pop cmp (bad) mov ret rclb inc nop sub hlt loop jmp xor lds call sbbb and jp ret cmpsb das push fstps mov xor ret mov dec insb and jne addl mov xor pusha cmp mov cltd (bad) (bad) sti and mov cli sbb (bad) jb mov mov mov lea mov mov xchg enter mov sub mov dec div out jae mov dec cmp lds sbbl in push cmpsb mov cmp jb fnstenv call ds add cli dec add orl lcall into add sbb sub ja adc mov mov incb jb outsb fisttp push push inc dec push lea mov incb loopne fucomip mov dec add shrl and and mov fiadd out (bad) pusha mov mov and cli adc andb cmp rcr out bswap sub sub sbb dec adc je mov rolb mov add sarb lret cmp or push mov sbb lods lret inc or mov inc push inc xor jo push cmpsb push pop mov and daa jmp les inc xrelease sbb pop push inc dec inc add push arpl or jle pop hlt xchg cmp (bad) hlt jnp,pt fldt cmp sub cmp ret push fs cmp outsb sbb shlb mov ja mov add push imul cld (bad) dec (bad) js arpl cmpsb mov aam enter mov mov mov nop mov add imul repnz icebp adc pop add xchg push (bad) push incl int3 cmp adc aas mov mov push cld inc into jmp and call pop push push std es orb xchg xor leave ds xor or bound inc push sti sub cmp mov test jb ret pop dec mov inc movzbl or push js add sahf roll xchg xchg jl (bad) nop xchg pushf push xchg jb shl dec inc jbe adcl int3 fwait jne sbb mov addb cmpb cmp mov dec imul push dec and and loopne outsb or ret mov or (bad) mov inc jo in stos mov sbb jl jecxz and stc sub or lahf sub cmp push inc dec cmp add push (bad) loop mov idiv xor add aam nop dec xor rcll xor adc mov je sub xorl data16 mov lock clc add incb ret sbb dec clc rcrb sbb (bad) pop popf test jo ss lahf adc push mov inc je push js add sub xchg add dec sahf xchg cmpb sub push sub add (bad) sbb or lea lret sub inc test inc xchg sarb ljmp loopne adc insb outsb jbe or and pop add and mov push jle add cmp sbbl or lcall xchg leave in lea inc add cmp fwait roll mov inc and jne adc xor pop push or add lret jb xchg mov xchg adc sub mov cmp jle jne push jl mov in ljmp or (bad) mov mov jb js jg dec add xor sbb lock insl add pop test fdivrl call xchg add loop loopne pop js adc mov adc sbb mov jo ret lcall add rclb pop adc enter fisubl test into inc pop or (bad) mov je js (bad) enter add sbb cmp or add lock push (bad) out mov push jo test imul xchg add cmc cmp insb mov mov std xor stos add dec in das clc cmp xor or sbb jb add add test popa lea inc (bad) mov or lock ss sar adc push xchg or xor rolb add mov inc shlb sbb nop les pop mov push rol loope xor fmul push aaa lret xchg mov xor push lock movsb js mov shlb mov add push add push cmp add push adc push stc adc les jne daa mov and inc dec mov push adc add xchg dec xor popf (bad) imulb je sahf push daa dec inc (bad) dec movsb or ds add mov inc add and push decl mov xor pop fcoms ret and test jo xor and push pop ret aas push pop pop imul nop mov je add add fisubrl sub lcall push mov push sbb mov (bad) jle loopne rolb and pop inc cmp and adc clc movsb adc aam test xor push aaa adc push (bad) in aam add movsl sbbb push jmp or jne sarl pop sub push push and rclb fisttpl repnz push push sub push push cmp inc inc insb adc int3 jb pusha ret out push sarb push jbe or je push in xor add cmc dec cmp push inc dec jno mov stos sbb inc xor push cmp inc jae sub dec jmp sub mov mov or cmp rorl add test test or aam stos add test mov jl add pop jns mov rcrb fimul mov shl add ds mov bound jb mov and mov push cld enter loope push cmp (bad) fistpll ljmp add int pop shr rorl sub jg les push push (bad) push clc shlb data16 xor cmp ffreep push gs pushf cs inc cmp out adc push sbb out cmp cmp mov test hlt mov mov xor jmp jo aad leave xchg and insb lock loop cli mov push rorb push out inc dec ret jb push xchg rol push lods ljmp fidivl out cmp out add inc sbb cwtl xchg sub test add mov push in mov fistpll test cmp pop mov and mov (bad) mov or pop sub dec xchg add es in sub jne fs dec push push push mov pop test push xor int3 push jae and dec jno push dec hlt dec lret dec mov cmp enter (bad) ljmp push sub push adc inc adc jo rorb fidivr fmuls (bad) repnz mov add mov mov fcmovnu sub sub orb inc add movsb sbb push sub sub popf cmp xchg sbb push sbb test (bad) sub mov pop sbb xor aas dec cmp dec or inc push rolb sbb aas fidivrl mov cmp ljmp mul or cli mov add add cli pop clc or add push popl rolb jmp mov push movl (bad) mov add or mov add cmp jae test xlat popa adc cmpsl aad push or sbb pop cmp sub inc xchg jge mov mov mov insb (bad) and cmp int3 inc popa xchg sub or fbstp pusha mov and jbe jnp (bad) bound inc outsb inc fisubrl sbb dec jae dec pop or push push movl loopne mov adc sub sar (bad) add or ret rcrb data16 js cmp mov jae enter call add cmp stc push mov push jo dec jnp adc inc insb rorl push jb lcall out ret rorb aam inc stos call cs push mov sub jp out sbb test lock inc jo pop cli mov fwait je lea sub popf mov lret incl rorb jmp sub shr fdivrl mov lret mov mov sbb fadds les aas enter call mov ret cli add jp loope in xchg add adc or ret mov (bad) cld sub fadd insl pop rolb (bad) cld out jge jne adc adc (bad) notl dec and push push mov dec inc push adc xor inc icebp cmp mov xchg loope push add xor addr16 inc or jl out aaa cld or insl add add or jo dec xchg mov add push jle cmpsl les mov fildll push fs or iret mov lock shlb push push and ret out int3 mov push xorps push rorb cmp pop idivb xor mov inc enter inc xor cmp or mov sub roll push mov iret mov sub or lret movsb jmp mov adcl sbb imul dec adc popa dec mov mov push ja push and sbb add mov mov xchg ficomp fsub popf pop rcrl int3 dec cmp push sub pop add and dec xchg pushf push outsb in xor shrb (bad) lcall test sub roll je or or aam inc sbb add push mov mov cmpsl lock and jbe (bad) or or mov add inc mov in loop jo inc lea sti inc add jo sub add mov push xor in mov push test into adc ljmp (bad) add movsb push sti push jo fucom cld (bad) xor push push addr16 push popa push inc lds cmpsl xchg sahf cwtl xchg (bad) mov sbbl test push test or xchg loopne dec mov push push mov jb dec ror sub test arpl mov push inc inc xchg sarb outsl dec movl jge pop (bad) dec and sbb cld jl aaa fcoms sub push mov adc sbb adc dec or adc push jl mov test push push iret push arpl ja add or jmp inc and pop pop cltd rorl fcoml or cmp je pop pop jo jl or mov js,pn int aad ds mov xchg fs int push push int rorb insl cs add add lds pusha add mov sbb pop cmp sbb push cmpsb inc hlt faddl rdtsc in (bad) jns xchg mov movsb aam add cmp in fsubs fucomi fist xchg push int3 out or push test fmull or mov add (bad) push cmp (bad) ja inc sub mov or inc incl std and rcr push cwtl sbb mov popf out or pop scas pop pop push (bad) sbb xchg push cmp mov mov jb mov xor mov call icebp das hlt aad fcmovb loop add fs fs mov icebp add repnz inc push sbb hlt cmc inc push sbb clc push sbb cli sti cld sbb std (bad) inc sbbb push dec enter or sub and es daa loope jne cwtl mov out or mov mul mov ja ja push or mov lea and inc pusha add mov push mov inc loope loope insb or mov out lahf ljmp or mov or lahf sub leave movl jnp adc and mov lock pop mov gs sub or bound scas in jl aas inc rolb ret mov push cltd rorl add jne sbb nop cwtl sbb adc mov or addr16 sahf (bad) mov ret les cmp in bound (bad) repnz cmp or ja jo mov push mov dec mov pop xlat mulb inc mov or dec sub mov adc sub pop shr mov or pop pop cmp shl mov inc xchg sbb add sbb in in lea sub mov push adc cmc sub scas or dec sbb inc mov or rorl mov push das add xchg sbb daa mov inc adc adc jecxz into mov add sti pop sahf sub cmp mov push imul shl and inc lock push mov sbb xor and push mov inc push lock and push sbb jb add sbb in fsubl mov (bad) mov add cmp jge pop push add movl daa and pop adc adc daa xor push aam push push cmpb push lahf out add jns lea fidivr fmull or lods test cmp or ja pop pop (bad) shr adc lret pusha aaa test hlt dec add cld jge cmp ja cmp push push pusha outsl mov mov enter in loope nop lea jle mov shl addr16 push cmp push adc jle cwtl nop push pop xchg adc imul bound repz pop testl adc cmp push push insb adc shl je fistpll mov push xor mov mov in sahf pop sbb (bad) push adc lret cmpsl ret push sbb cmpsl loop cmpsl mov cli jo in push and cmovno loopne (bad) sti loopne lea push xchg push push sbb icebp test mov aam in insb mov adc sahf or dec loopne lret sbb test rolb and shll and cli cld call dec or xlat in or xor iret inc (bad) inc mov sbb loope jmp jmp movw enter fadd jl imul pop add or mov fwait addb add lods dec mov repnz dec addl rcrl cmp sbb cmpxchg push lcall jge incl (bad) mov sar cmp jl jl (bad) outsl jne adc jge psubusw dec and push cmp inc pop push rorl mov and inc and push (bad) xchg sbb scas sub cwtl dec mov mov mov lock test adc scas add or movsl lahf xor mov cs popa mov lahf shr dec mov jne shrb jge mov scas add lahf add inc fmull add les xor dec roll jge pop (bad) pop pop dec dec mov xor jb jno xor (bad) xor push add sub call add mov mov push lods mov lea inc push std inc jp adc (bad) popf ja in xchg ss mov repz mov mov sbb das decb adc adc sub or sub inc sub repnz jne sub clc dec sub push shl mov repz or jp and mov xor pop nop mov lock cmp or lds (bad) push xlat inc cwtl dec rclb push pop mov or mov mov add push adc into (bad) stc pushf sub sbb mov inc cmp mov cmp test mov lock mov xchg rolb inc int adc jl (bad) (bad) out fdivrp inc cmp jle fwait lds or mov ds jg and inc mov push sub sub sbb mov and push imul add push popf enter inc lea out in aam mov dec ret arpl out and ret push or ror and test xlat cmpsl xor sarb psrlw mov jmp sub sbb testb push ss xchg (bad) push add push out add push std xlat lea cmp inc add js jnp xor insl and push call popa out out mov cmp (bad) mov out sub sbb pop or mov test mov mov test dec mov jne sbb adc pop cld and pop (bad) daa enter push sub push mov pop pusha loop mov (bad) imull push movb jmp ret jl sbb dec inc sub js mov sbb push dec or stos daa xor inc inc push pop sbb (bad) mov sbb dec jne pop pop sbb push adc inc lea adc fisttp mov js pop cmp inc and mov mov jl nop inc (bad) bound pop inc jne dec sbb mov mov adc roll jo mov lret and dec mov mov mov shr out orl mov test data16 aad cwtl cmp mov push push inc push jl,pn loop push add cli loop,pt (bad) inc je cmp jge add scas jmp call cmp je mov daa push xorl or mov pop adc out leave jne add push push pop dec shll push push subl repz adc adc jl pop mov aas mov add or add lods ret or jle and mov sbb mov inc sbb and pop daa cmpsb sub sbb inc and adc add adc or cld jle add sub mov fs add xor lea xchg jle movsl xor mov xor and adcb and xchg test in xchg mov pop pop add pop mov popf adcb dec and jl xchg mov push sbb pop inc xor pop aas aad xchg sub movsb rol mov ret mov lock sub imul jns push push add jmp cwtl inc xchg pop cmp xor push push cmp jge je mov (bad) dec mov mov dec sbb (bad) cmp jle sete rorb mov movsb js lods js pop dec aaa inc cwtl sub mov and push in mov mov adc mov dec inc enter roll sbb or aaa dec cmp add push out mov cmp adc add mov inc adc inc or push cmp test sub push jle loopne out test dec inc in ja,pt pusha imul icebp out cmpsb push jmp daa xchg cmp jg loope jg mov in mov and add in sub stos mov xchg jbe cmpsb ret and xor (bad) sahf fstpt jne mov sbb push (bad) mov adc outsb and mov cli xlat add mov add nop pushw push xor cmp add rcl mov inc fmuls mov sbb sbb inc fmuls xor sarl int3 mov arpl add jo loop imul into jle xchg je test shl insb sbb stc pop nop push adc pop inc nop loope or nop lret dec cmp loope mov jmp (bad) xchg add or gs sub fisttpl mov data16 ret loopne mov int jno test add sbb aad lret cmp mov push inc push fwait lea mov adc sub (bad) or xchg out mov xchg jmp loope lods pop inc dec rclb push loopne xlat xor mov ljmp jnp mov mov shll dec mov sub cmp adc push pop sbb hlt add cmpsl sub decl ljmp mov fidivr jmp mov shr sbb push das or repnz mov mov rorb cmc sub ds push popf xchg pop (bad) mov cmp insl (bad) jne lock mov movsb jmp mov daa repnz pop mov shll pop enter (bad) add sub add mov cltd xchg or add ss nop mov loope and inc xchg xacquire add dec or mov add add and pop adc add pop xor jno cmp (bad) dec jne push xor lcall cmp mov jge mov pushl xorl rorl out add xlat pop setbe mov xor sbbb mov xchg icebp and or lahf mov shl dec lret shr pop mov add add push pop jo mov xor movsl jmp test xor insb push lret add pushf or arpl sar lahf push sti or mov aas xchg ja orl or jle aaa inc dec add dec xor sbbl push inc push jp dec sbb movl mov inc fist call rolb shl jbe nop lret xchg not cmp mov loopne add bound inc push cwtl pop lea add into lods leave popf mov inc cmp out add push inc dec push ret fstpt adc and and mov mov xor mov add loopne mov jb or int3 (bad) mov inc add sub xor mov and jecxz xchg fimull das mov xor and pop js inc xor mov daa jno push cld cli or mov mov push push aad xor jle inc xchg fiaddl push pushf add or cltd sub stos cmpb aam mov dec or xor stos das add inc sbb xchg push pop pop sbb ret leave adcb sbb js mov fmuls decl push and inc and jle inc and aas dec xor pop pop adc sbb dec pop jo js add jp push mov or shlb or mov jmp push inc or fdivs add fldt out jl dec mov pop push mov lods ret or mov xlat dec test pop inc inc jnp jb or in (bad) or pop mov add xor lods dec dec loopne mov ja out shrl jge fisubr aam cmp sub adc pop test je orl dec and dec add dec inc (bad) dec dec inc inc jne jne fildl rclb or xchg out shrb test add mov inc leave mov add xor xlat iret jmp sar add sbb add and fldcw and dec xor pusha in add xchg cld lock mov test or test pop add fisttp adc inc sub iret call and mov add sbb dec test or ds jb xor sbb jo xor add cmp sbb sti inc sub sbb jne jl mov dec adc js dec push lret adc ret push or int3 mov jo adc jo fs ret inc and ret out adc mov in mov xchg outsl cmpsb add sbb mov mov and jnp or ja mov cmp ja xor sbb add pusha add cltd cmp mov fnstcw add adc mov (bad) mov test or fsubrs dec jmp sub rolb je inc push test pusha int lret ss test es das mov jno lret jno sub ret test cmpl loopne bswap jle test push add cltd das push mov xchg in cmpsl inc mov cmp push jne (bad) add sub mov rorl aaa mov dec nop fnstcw gs int cmpsb nop (bad) pop xchg pop or fnstcw pop adc mov jnp nop xor outsb dec inc xor inc (bad) out add jmp incl flds inc add fisubr int add add add (bad) cmp push pop rcr and and scas lock push mov push push fmuls sbb fmuls (bad) test add add xchg push popa popf lea and push lahf adc cwtl or clc fs das xchg push jb std fcoms push push mov iret movb cmp nop pop pop cwtl cmp je cmpl in pminsw or push movb dec inc rorb or mov jns cmp push pop out sahf out pusha fs sahf jo js mov or mov add push add lea dec mov jne cmp jne cli sub xchg sbb pop cmp inc xchg sub or jns xchg push mov mov mov cmp int3 jbe dec xchg xchg push mov in loopne mov cmp jne dec sub cmp jne cmp fistpl ljmp ljmp sub out jae lea sub js cmpsb ret add mov jb lea or rcr or push sub lret pop das or mov add (bad) cwtl out pop fs sbb je xor add xchg movsl xchg lret das jne mov fidivr pusha sub and mov (bad) mov xchg mov inc mov inc in push lcall cmp ss cmp jb cmp lret mov loopne sub xchg push and adc movsb fsubl inc dec ss aam xor cmp (bad) cltd add lea mov mov fsts mov dec mov les xchg sub and sub jnp mov adc inc ss fimul mov mov pop jbe fldl int ret jecxz cmpsb xchg dec cmp test sbb and push push and jmp iret ljmp std sub pop les (bad) cld sbb adc cld fstpl cli inc pop sub and in mov mov jmp rcl add dec int3 mov add pop or jno add mov rorb (bad) std in dec mov je xor lock sub jl pop sti xchg push inc mov xor dec ret mov sub sarl mov cmp or pop cmpsb mov adc (bad) cmc or mov movsb sbb rorl shrb sbb pop ss pop add dec ss aas hlt dec add cltd sbb and add push mov sub mov sbb push cmp xchg cmp xor inc rolb movsb daa xor (bad) cs push inc xorl jae cs loop or rcll mov lea inc in jg (bad) jb test xor shr push jne cmp xchg jne and mov das lea mov je in sub push jo jnp clc push or jne sti push inc jnp (bad) sub add push cmp clc lcall inc mov into (bad) mov dec lock gs adc in inc xchg ret mov outsb inc sub push push jb mov and add test add sbb push jb push push dec pop daa mov mov push push shlb add movb (bad) call jmp jae sub jo nop cwtl faddl mov push in mov test push xchg jne dec mov add aad pop jo push xchg push jmp sub call inc sbb and repnz call jne sbb inc cs push sahf cmp and push push push je xor fs push push inc push mov add xor add mov (bad) mov movl or (bad) adc xor aas inc cli add inc or std fsubr sbb mov mov sub adc ret clc mov je sub out mov adc andb push adc lds aad dec inc pop push push out inc mov popa or rorb push enter pop (bad) sub cmp int imull fwait mov lret lds dec sub std sbb mov inc mov jo add add inc sub add test hlt pop fs lcall (bad) add mov adc inc loope ror mov outsb and jo xor jbe cmp adc repnz and cmpsb inc cli push and clc mov jns stos inc sbb incb sub dec outsl (bad) mov cmpsb adc sub iret nop add ja imul jae cmp ss pop rolb enter rorb (bad) inc lds cld cmp loope insb push test das jmp sbb lea call mov mov shr sub fistp test jge ret adc or in mov insb add jno cld mov dec je and sub imul add pop out ljmp mov and mov cmp sub popf mov jns (bad) dec pop es jmp push aad inc cmp pushl mov sbb ret or ljmp cmp mov icebp xor and je xchg bnd mov fistpl jmp cmc sbb cli mov out cmp std dec jbe sub mov mov inc inc dec jne xchg pop jbe pop dec rcr ja jmp sbb sub cmp (bad) sbb or mov cmp pop sarb mov cmp or push ljmp inc push push stos mov push cmp rorl inc push call pusha (bad) (bad) fsubrl je mov mov jbe cmp and fs loopne add jmp lea (bad) test push push outsl xchg cmc sbb int cs mov jnp mov mov sub or adc and add mov in xchg scas lds sub out cmc mov imul mov mov adc call int xor test aaa or out shll (bad) jbe cmp add cmpl addb pop and out xor mov dec pop pop push push pop lret mull pop cmp jne (bad) ja add jmp push adc mov mov or loopne ja pop loopne cmpsb push jl jle aas push call push enter jmp rorl inc add scas adc (bad) mov (bad) dec sarl add cmpsb pop sub pop xchg inc xor cmp mov repz xchg cmp xor and into repz adc mov in sahf mov mov call out lock hlt fdivr jns clc clc cld cld lea lock push es (bad) push cmp iret js and leave sub xor sti and and daa mov xor jl cld or add adc adc fbld stc sub jnp gs adc nop add sub push stc ror rcr add out jnp push mov dec inc push imul fsubr push or push out mov ss lods push lahf out sahf mov (bad) int3 aam adc aaa sbb sbb sbb iret repz adc adc or adc repz or aaa repz addr16 inc add fiadd sbb shrl sub outsb push and pop inc add inc mov daa adc (bad) stos (bad) sbb iret add or and mov mov sub lea fldl push cmp cmp pmaddwd dec mov movb jmp loopne adc add repnz test pop aam inc push push clc test sti sub dec outsl or mov mov (bad) mov push xor xchg pop jmp mov push scas and scas push push dec xchg mov je clc jne push pop test clc ss or push cld or aas cmp js enter or inc out in adc xchg push loop pop insb in jle ss xor ret mov sarb push pop inc adc xchg and mov or push add out outsb add mov or cmpb aas hlt sbb push dec push hlt sbb sahf out push ror sarb test cmp or push sbb push adc aas nop sbb sbb mov enter and nop sbb fldl inc or push push pop add iret rep je sbb mull add or lahf mov fld pop mov lods mov jbe xchg mov dec data16 jg lds adc cld movl ret sub out adc pop add es jb mov fwait cmp lcall inc in ss push xor dec mov lods addr16 movl or push sti mov movl adc push mov push outsb mov dec repnz daa clc inc push inc sbb jae push out mov imul xor ret add sub jno or mov test mov mov inc dec inc mov outsb sbb test inc movb das xchg addl inc push js mov inc xchg mov jne dec inc testl mov adc cltd notb mov aas or movsl fistpll inc jo jne subl les jmp mov mov add fdivrs jo add push pop movsl push xchg dec xchg js (bad) mov inc cmp xchg (bad) neg jae mov cmpl out fcmovnb fild push mov or mov test out and or or cmp mov std mov daa mov paddq mov sarl daa xchg loopew and or adc fnstsw sbb movb pop jmp cmp (bad) cmp or add add push jo hlt dec push clc push js cld push aam ja mov sahf addb sbb and push xchg jmp or stc stos gs or dec dec je adc mov je inc lea sub sbb adc rorl lds idivb sbb sti adc mov or push xchg cmp or sbb inc sbb xchg lock pushf jle outsb push and cmp addl push add js jmp mov add lods je sub mov xchg jmp sbb jmp lret xor mov push rep mov dec ljmp push and aam pop dec lret call lods inc pop dec or cwtl dec das pop sbb mov push push mov push adc mov cmp je enter aaa add sub push fistpl xor subb mov add jo push pop add nop addr16 add daa or jns add adc sub cs dec sub cli cmp je pop add fwait pop enter add cmpb push xchg in (bad) xor pop pop jb add cs or or fwait jb mov or and enter pop or cmp pop loop or pusha out rorb pop or mov mov push xor cmp ja lcall adc xchg add push pop adc fwait sub cmpb adc seto out adc mov ret add ds adc adc adc jb mov adc xor push push pop mov pop xor jb fisub fwait or seto sbb call add (bad) sbb pop mov add mov or iret stos cli jge sbb enter inc pop jmp inc lock pop jne add add sub mov rolb addl inc iret cmp xchg pop mov mov sub pop mov xchg mov sti cmp je lcall rol and mov repnz aad in in enter out fwait sbb cmp out jb punpcklbw push call dec insl mov call dec sbb outsl inc cmp sub ljmp jmp sbb pusha xorl cltd mov mov out xor cmp jge lcall lock inc lock xor jne add inc icebp jae addb repz leave std hlt hlt rcrl cmp or fwait mov push fdiv inc jg testb negl xor and clc clc cmp clc cltd adc inc stc and in lock cli cli inc lock sti sti sbb stos cld cld cld je cld push scas rol pcmpeqd mov jns sub std sbb (bad) loopne pmulhuw je mov jmp inc rorb or sub add inc lahf shl cltd dec insb in push lock jo jecxz adc jecxz jecxz std sti enter in inc faddl push stos icebp inc mov stc daa xchg sti pop insb nop (bad) out out cltd outsb xchg inc pop and add (bad) pusha and sub sbb pop jmp jmp (bad) mov in add and cli sbb js out out mov cltd push lock and das cli push cli dec in rcrl psubusb repz sar jb pop (bad) push stc cltd and enter lret jae neg push jo imul clc add inc repnz out clc rclb pop lret sti sbb pusha ret cmp pop xchg test or inc pusha sbb jge add cmp push inc test cmc cli and test cld sub mov fnstsw mov pop (bad) testl popa dec push jo mov out scas xchg add out (bad) out nop pop leave and and push cmp sbb jo dec ljmp inc inc mov add lds negb insb out out or add jno testb and pop add jb pusha and nop cmpsb repnz mov cmp cmc inc xchg push jb sub cmc aad or mov jo and fwait pop add pop jl adc jo hlt inc pop jo cmp pop mov or cmp push nop hlt inc jne inc dec jno push hlt sbb das dec pushw (bad) data16 jne mov adc push (bad) ljmp adc sbb push inc cmc ds repz cmp jp loop scas repz jns repz inc push jo push in test repz repz xlat push push cmp push dec adc pop or jmp rorl orl cmpl in repz je add repnz add pusha and mov cmpsb jb sbb jns rolb icebp mov icebp test icebp pop sub or cmc cmc cmp pop add cmc jecxz inc fs inc ret adc fstpl pop or stc repz cmp (bad) lock push lock cmpl mov test ss adc add in mov out movsl ret mov ds add enter add stos inc sub and add and loopne cs jo adc mov add jmp (bad) ja test and ljmp jl pop inc or sti sbb sbb inc add sub insb mov popa pop das xor push pushf es scas fstps test jns imul push jge push pop push imul xor out and sub sub xor repz adc push aas dec insb sahf out shlb jp mov jnp push and add add test xchg pop add dec lds insb add add xor (bad) cmpw scas inc pop pop jne mov mov push inc cmp ss cmp (bad) pop cmpl (bad) mov aaa or cld adc xchg shr ret push pop mov popf or mov nop or repnz add js jae mov push push rcll or enter push mov aas cld jo negb daa xor dec push sarb inc mov aam dec arpl movsb fidiv idivb mov and push mov mov or cmp push rcrl or mov xchg loopne in jle mov cmp hlt or add and push mov and cmp psubw adc mov mov mov xor int3 loopne or stc into decb push test dec or and pop or and out cld and pop sti and pop push inc dec cld test xchg js add lret or and mov inc cmp mov loopne ret mov xor or nop fsubs xor fdivrs dec sahf ret call pusha pop orl test jmp pop push jl in mov push or and shrb inc out jbe push pop adc mov inc or (bad) jne adc in push fs aas dec adc add pop push xchg xchg mov add stos add (bad) daa or ja and dec sub add add aas add lock push cmp push or lea adc ret pusha mov or and mov imul add sahf in push add mov (bad) or sub pop shrl lods push ret push out stos adc add call subl cmpsl out xorl dec icebp sahf loope cmp xor mov loope ret dec or push adc (bad) push orl in ffree daa inc lahf sbb cld aas mov aad mov js sbb sbb push jne inc cmp and insl adc or test das pop in mov inc lret jge into aaa (bad) pop xchg sbb jmp insl aam sbb cwtl push std ficomp pop and xchg pop mov pop sbb rorb cltd fdivl cmp jge or ret jmp (bad) repz mov movq push dec adc push and sti stc jl jg push dec and push jg outsl inc or mov jbe jle xor jg cmp jg jo mov mov or mov push pop lret sub mov xor adc cltd push dec fsubl aam xor sub prefetch or and xor sub or or or mov and les push push add ret sub xchg lcall or shrl (bad) je call sub (bad) jne out jmp (bad) lock rep push jmp movb sbb (bad) dec in out jle sbb xor add jp insl mov sub add rol mov sbb xor push cmpsl cli sbb (bad) and sar dec jmp adc adc sub mov xorl pop jle ret mov call jg bound add cmp inc adc jl sbb lock push push rcll ljmp add cmp jb (bad) xor fsts shrb and push test test cmpsb mov xor sti inc call and pop push cmp popa and (bad) jbe add mov cmp jmp push out leave ret shrb scas inc sbb or pop xor cmp push add mov and cld rcll leave push movsb xor add in call pop mov xchg pop mov inc mov sub (bad) push mov mov daa or mov or jp push test sbb inc sub inc and mov rol sub popf xchg push dec sbb xchg fwait cmpl push (bad) neg mov or add jecxz mov adc adc mov insb jmp fidivr mov pushl cmp xchg jae pop das aad sub iret xor sub inc sbb push scas outsl dec xchg mov push mov or cmp or push mov jo mov sub dec outsb xlat aas add dec add fsubr or inc daa push or and in ss or lret jecxz das push (bad) sbb or inc inc lahf dec call jno jbe push in sbb icebp inc push in dec pop cmp cmp push cltd jle add lods dec jae xor cmc pop push mov rorl dec fnstsw push jle jbe push inc or ljmp jle mov or insb out scas aaa inc push mov aas adc ss cmp or inc pop or inc je mov xchg or cmp or js xchg push js push and mov outsl dec sbb lret cmp inc push lcall mov ss cmp mov popf cmp mov add jp cmc ds ja push mov inc in pop push mov fidivl sub sbbl push cmpsb jge xor cmp jo cmpsl test insb lahf stos mov xchg mov add addl dec mov orl ss pop iret pop rolb push jo and mov pop jne cmp push mulb bound jbe sub inc fs cmp out test jg les rol orl jae inc mov pop sbb fidiv orb xchg hlt cmp cmp mov cmpsb xor fist les push cmpl jg jg mov jae sub jmp jmp mov xor jo fisubr jne push push imul and adc test jno sub test je loop les cmp push movsb outsl sub mov add clc xchg (bad) xor mov sbb es adc pop jp jo mov (bad) nop jbe jb mov fs adc xchg mov push rorl jmp push push cmp jne xchg push add push pop pusha pusha and in pop xor pop push fimull insl movb inc cmp je mov and enter dec sub add pop push add or mov (bad) hlt inc test ljmp or andl jge adc mov movsb testb inc js jae push jb rcrb mov bound push pushf add aad js sbb mov add mov nop xchg (bad) sbb dec mov push pop mov xor sbb pop xchg dec inc jo dec in es icebp aam adc ss push mov ds mov clc je push cltd das js cmp ficoml mov sahf mov pop int3 adc orl mov pushl scas adc je xchg retw test cmp mov and leave rcr add add test push imul outsl gs arpl jmp loope xlat aaa loopne push adcb push and loop cmpsl mov inc mov pop add adc push sub shlb fidiv lds gs mov push stc mov cmp dec frstor ret cmc pop pop addl dec or (bad) and inc inc pop inc jae xor nop and mov or sarl iret xor inc imul xchg adc or imul pop inc xor add imul (bad) cmp push iret das push cld je lea fildll mov xor adc pop adc xlat mov sub inc jg ret add mov jne loopne roll and or sbb cmpb ss (bad) in cmpl popf mov sub inc mov scas test aam je sub jb adc adc rcl push ds lods addr16 hlt sub push mov das and adc jb jo aaa push cmp (bad) pusha aaa or cmpl insb rcr xchg push mov and inc ss pop js gs outsl and in aaa test fs add fildll jne push aaa fistp mov adc jmp pop cwtl loopne sub std insl push mov xchg movsb leave out add inc inc stos mov ja lahf or pop cmpb xor popf rclb sub xor aas sbb sbb (bad) add or repnz repz and ja pop into lcall test mov pop outsl bound jne xor icebp loop mov xor mov add adc ja dec sbb mov jne stc push les inc mov mov iret and cmp and cmp push jmp insb or adc sub pop cmp lea incl (bad) jae in adc jne add cmp sbb push mov xorl pop ret inc xor xor dec insb ret int3 add test xchg and rcrb addr16 or jne insb hlt ljmp or (bad) (bad) jle rolb (bad) jg adc add add cld jb test mov (bad) xor adc add int nop inc fcmovu inc dec sub ret adc std inc cmp in sub jne icebp mov je or ds jl adc adc jmp loope push mov ss outsb pusha lea aad mov jle add lea stos decb mov (bad) mov mov inc xchg xchg cs lea and mov jno or lock push push lea add lds outsl adc (bad) dec mov jbe shrb xchg daa jne out mov lods inc adc sti out ss hlt mov push movb pop mov mov add rclb jl cmp ja int3 pushf xchg or xor inc mov inc inc add jbe sub push lea into adc imulb sub push bound mov inc add mov push mov dec (bad) not je orb sub add add (bad) push pop and mov dec jmp movb shr lea jo std mov mov lea out xor sbb xchg push mov jmp mov push pop cli and and and mov inc cmp mov add int stos add rcrb fsubs mov jmp cmpl dec minps ja sub pop cmp sarb inc sahf mov lret jae (bad) xor (bad) sarb mov push ds jmp inc jmp rorb sbb xor mov testb jne movl cmp je hlt enter in jmp xchg adc xchg bound inc xchg and ds push sub out mov inc add jmp ja pop sbb mov dec jg aas xchg movsb int3 jb sbb test lods push dec dec push imulb fadds js or and (bad) in xchg xor jecxz lea subb mov rolb lock out (bad) std mov xor jmp dec and idivl pop fmuls xor and and das inc sbb jp inc in rolb stos add jnp jae jbe cmpb iret mov (bad) push out mov test sbb xchg inc push imul mov mov mov xor shlb dec sub (bad) (bad) shlb jmp loopne sbbb mov sarb clc jbe loopne inc cmpb xchg adc data16 or add jb mov cs das lock push scas roll test inc movsb mov or inc loopne inc sub adc sbb jmp xrelease sbb divb testb in or inc or mov adc test sbb mov jnp push (bad) loop cmp mov pop pop xchg pop test in adc clc popa dec loopne sbb mov cmp sahf rorl enter add cmp lret jbe and (bad) xor pop js loope push mov xchg mov pusha sti rep movsb push pushl mov fmulp cld aas jne push push pop add jo xlat mov mov dec (bad) xlat out stos or add cwtl mov data16 mov pop and mov unpckhps dec out mov (bad) inc inc loopne jge (bad) int3 jl mov fiaddl sub call lcall jge mov mov jmp mov cwtl xchg incl adc call daa push push push dec push jg lock and pop and push addb xor call lods cmpl mov ds pop inc and inc mov add sbb (bad) (bad) mov xchg outsl cmp (bad) jo incb movsb std je cmp jne sbb cmpl adc bnd mov pop mov push mov mov sbb (bad) mov inc sbb push sbb inc mov les or imul movsb les jnp rol push test jne push jo pushl out (bad) mov push pop cmpl add or outsl fwait pop insb xchg jo inc add pushf nop add dec jne out icebp lcall js sub fs mov sbb sbb pop cmpl popa popa roll imul (bad) jle adc fdivs cltd adc or sub adc (bad) xor dec xor push sub pop lods sub je jae sbb pop mov fcoml pop adc cwtl lock sbb addr16 push jl sub orb pop add xchg xor sbb dec jmp xor (bad) fstps sub cmpl adc jle dec mov das (bad) aaa (bad) icebp jne push push call inc adc rorb (bad) bt mov pop mov stos push dec dec jg jo pop adc ds in addr16 dec dec cmp pop inc cmp jne or (bad) push or or xor sub out pop shlb pop dec stos add dec sub push and insl call inc and loope push pop and adc push xchg pop mov mov mov notl jle push add mov mov aas or adc pop test bnd mov add cmpsl push adc int3 cli jmp sbb pusha adc xchg and add and test inc pop cmp mov dec jmp mov add movb xor inc mov push enter mov testl fidivl sbb cmp popl xchg into push sbb add pusha jno inc fwait xor or cmp sub push and add push jnp jmp or push push inc xchg dec fs movl add jmp push jmp ss push mov add sbb adc sbb push sbb or mov test adc pop adc or xchg out sbb in push outsb or hlt pop sbb mov insl mov add push jae ret lock cmp aam enter iret jmp sub inc loop cmp (bad) lock add cld xor pop sub clc mov pmaxub push mov push push xlat adc xor push cmpsb sahf xchg lea dec push push sbb mov adc lock lret lock jne push push ljmp lahf xor andl lea add lock inc sbb sbb pop jle dec cld xor cmc fwait pop bound pusha mov jbe and xlat add and add sahf cmp dec mov stos mov inc add mov incl lea push adc lcall mov add and push pop cmp adc pop fdivrl xchg push mov daa adc or or addr16 add mov push rcll add and gs pop dec call add outsl lahf and xchg ja fiadd add callw movb or xor sahf adc push stc adc (bad) mov push push test out or push subl xchg loop inc hlt sub sbb rol or dec or ret or inc mov lahf aam je popa add mov xchg insb sub fstl cmp jne dec or inc addr16 pushl mov add mov jmp mov sbb or fmuls jg ret mov jbe pop fdivl or cmp and int3 sti outsb or sub sub ljmp jne mov aam test loopne add xchg negb sbb out push fstl xor lds jbe js pop jmp imul cld dec aam and pop or nop mov sarb xor inc push pusha mov insl shlb adc adc (bad) rolb adc jg push int3 lret in mov or pop shrb push and add pusha inc fdivrs out std xchg jo rep mov (bad) mov sub sub add sub popf xchg ret and jmp pop or sbb xchg int cmp push mov fnstsw test and cmp and pop les pop ss fimul cmp dec dec sbb notb ret sbb add push pop (bad) out dec outsb pop jb or xorl add jl adc pop inc xor shrb xchg cmp pop ret push hlt icebp add push mov das pusha sub fldenv mov add jnp ja mov dec mov add sarb push clc mov add jo out cli rclb aaa cmp je iret pop inc cmp jbe sbb push mov imul adc sub xor push inc sbb add sar inc or push push mov jnp xor add inc divps (bad) cli push jbe test push push les pop cmpsb call pushl jge (bad) lret int mov push es test ret imul cmc je in pop jb inc lcall dec adc push push incl adc xchg mov mov orb cmp fidiv and imul rorl or sbb inc (bad) or or inc daa rcrb mov adc sti add xchg push hlt cli and mov mov test out jle int test mov stc cmp jge imul jle andl aas mov add and sarl sahf mov stos add or loopne pushf and mov xlat add cmp sbb fwait (bad) (bad) lret pop (bad) push pop xchg xor cmp pop pop adc cmp fs insb push rcl mov jmp leave push es lahf mov movsl add jge ss sarb xchg mov (bad) xor jecxz push add mov cli mov cmp ja je (bad) and imul sub loop rorb lods mov sti arpl rcll bound xchg push push movsb mov adc out push sti ret loopne jne add dec sbb and cmp add je push pop repnz daa mov cmp in repnz adcl cmp fistp add cmp push mov or (bad) jp jne es cmp out test and mov movl ret pushl add adc lods push orl add cmp push loop repnz add or mov push cmp adc mov inc add incl xchg or aam mov ss push inc mov gs xchg adc or insl js clc inc incl mov (bad) sub test add or jne mov cmp inc test fisubr pop mov push sub dec jmp xor pop inc or incl dec mov cmp inc inc pop je pop es xorb jne int add fs lock xor pushf inc cld mov pop test xchg jmp add test add xchg cli je or lock or je pusha inc adcl sub rol leave or out mov ror inc add xor cmp std (bad) call lret sub mov mov xchg in aaa push adc or pop dec sbb push test adc mov mov in loop js pop cmp adc icebp or add cld sbb mov jge dec xor mov cmp dec out ja or jae in add add dec ss push sub rcll jge (bad) push push dec in icebp les xor pop inc jmp sti rclb inc aad mov cmp push xchg push pop jne call stos fs add fldt jmp orl (bad) (bad) fiadd rorb fistl in je add jmp sbb or test push sar inc push inc push jl adc mov (bad) (bad) stc scas push adcb test test push xchg jo jmp mov movsb sbb addl rorb xorb xchg test jne sbb (bad) fdivs or ret mov (bad) iret fldt mov jecxz push sub or xlat sub pushl push push in inc in dec push add dec fcom pop push xor shlb pusha testb cmc fwait cli or dec push or or or imul push and or pop mov or ss sbb int3 jp into jo pop pop xchg push mov mov inc xchg cmp dec pop xor and sub movsl push (bad) push insl sbb pop sbb push aas xor add push and lea loopne je pusha and and cltd ret adc (bad) mov or popf dec xor pop test jle insb mov add test push or je inc adc mov test cs jne push loopne xchg dec and xor addr16 clc add out add aaa addl push xchg (bad) loopne imul aas push pusha jns leave les hlt inc sbbl bound xchg mov repz pop or dec add jmp (bad) xchg andl ret and jle mov cmc push test or sarb push dec push cli or xor ds push jne inc adc cmpsl (bad) xlat inc add or je and (bad) into mov movl jl mov loope xor test jecxz stos inc sub sub fidivrl test mov bound pusha inc pusha push push push sbb add test jmp push pusha (bad) iret dec insb inc push jge mov pop push aaa inc push push and pop insb subl pop or push push scas push pop mov cmp adc scas or mov loope cmp adc mov pushf push and or lods sub mov push mov int3 mov fidivl or not mov mov inc or cmp adc push nop mov and addps xchg pop fistl lock fild pop mov test into jbe cld loopne or mov rcrl adc sbb mov mov push push mov cmp pushl (bad) hlt mov roll or ret ret inc mov mov and loope mov cld push mov dec jmp ds adc (bad) and fcmovbe cmp pop mov mov test jl push pop mov adc jne sarl out push pop mov insb movsb push mov cmc pop imul inc dec mov cmp sub mov mov xor cmp test aaa or (bad) jmp push test mov movq mov jmp push imul loope (bad) push jne adc jne or push jg lcall cwtl jmp xchg lock pop or or inc or lods insb and inc sub push orl call pop xchg mov or or or cmp adc arpl cmp jmp shrb push add sub test xor add jle cld or inc or ljmp push adc sub enter pop icebp (bad) aam or inc jb rclb rcll mov inc adc mov mov loop jns fs sub iret imul pop mov jp movsb xor bound dec or rolb fwait push popa clc adc push nop and push mov mov jne sar dec cmp in sub (bad) aas pop int3 cmp jne push and or pop xorb sti paddd jmp dec add shll pop mov and and jmp lea xor mov fisubrl push adc lds sbb dec hlt mov cmp or jp mov jne hlt sub clc and adc add sbb xorb sar xor dec pop cmp out into pop xor (bad) andb (bad) aam cmc cmp je cmpsb jno adc in cmp push jg test je dec add lock xor sbb pop xor outsl jno mov mov sbbb or or icebp dec jo leave mov fimull test mov or mov fcompl pop dec or cmp jne mov ffreep aas sub mov jge sbb sub lret jnp xchg call inc dec or jmp dec in (bad) adc call test add push mov and push add movsb adc add mov fdivrs (bad) fnop sbb loope add fcmovne jle scas jp push call aas gs addr16 out or sbb mov mov fadd add adc inc aaa mov and jl je fcoms enter adc fisubrl mov and shll sbb add sub js in push lea add dec add addr16 push cmp or jbe jmp das mov test mov lcall fsubrl inc inc or xor and in lret hlt lret fild cli sub div pop push mov int3 xchg add sbb (bad) aad sub sub mov xor push fldt pusha pop jmp orl and insb incl scas ss mov movsl test inc cmpsl mov xchg fcmovnb pop jge je rolb mov imul in pop sub inc clc pop mov add rorb shrb dec jne dec sti pop roll repnz lods mov sbb lea push and ja add and or pop clc aaa test dec clc incl nop cld or adc out sbb lock call adc add or jl push ljmp mov sub lea int3 or sahf inc sarl mov mov in test push mov add cld inc jne or shrl cli and mov in or or jne jge test loopne sub pop shr mov dec cld push cmp jbe sbb dec cld dec adc arpl push mov test sbb fstpl dec fnstenv xchg xor inc sar dec cmp cmc test pop push push xchg pop push pop jmp pop inc sub aam clc or mov popf inc pop add pushf nop xchg fimul mov add adc push sub add add mov mov fldt ljmp mov cld aad jnp cmp out sbb jbe mov adc adc or lcall or sbb push (bad) pop adc ljmp adc xorb jmp aaa pop pop push lds hlt or lea jo cld fsubrs aad xor add add leave push mov mov rorb js xchg pusha mov (bad) mov pop or mov inc dec insb pop xor rcrl add cmp xor movsl adc inc mov orl js jle xor cmp sbb pusha nop dec fdivl xchg jno push cltd dec push fld addl cwtl fidiv cmp jbe ja stos (bad) adc jl pusha (bad) and loope lea mov into (bad) xchg mov dec add rcpps and push pop push cs mov xchg lret lods into rdmsr mov jns dec inc pop bound mov pop in dec adcb outsb cmc push sbb add loope cmc inc inc sub push cmp push push jge dec mov mov shr addl add (bad) or cmpsb and sub jecxz jmp sub and and repnz addl call or jg sbb movsb cmpsb icebp fnstenv (bad) scas add inc lock jne arpl or arpl fildll (bad) mov pop sbb int3 or dec popf dec icebp arpl test popa (bad) pop inc dec pusha jl in sbb dec sbb je mov mov dec pop iret jne inc ret or jmp dec mov dec xchg ds into push pop mov shr outsl jnp dec dec mov and jne mov push xor and leave inc test inc push pushf pop mov jno or loop cmp and add pop inc pop push hlt popf dec decb pop cmp adc iret dec mov cmp xchg pop mov inc (bad) incb decb jne jp and lret sti jmp lea dec mov pop lods xor pop dec bound pop or out jecxz and jp xlat add and adc xor icebp das (bad) cmpsb cmp inc mov or add das or inc or ret out or inc push hlt sub push jmp inc or movsb sarl mov aaa rolb add pusha dec adc adc lock stos and test or push sbb jne cmp ret cmp add xchg sbb add sbb push out fs xchg jl adc movsb xor or ficompl or xchg lock push data16 xchg or pop jo inc insb gs test jno push lea push adc in fstp test mov cmp cs mov lea push mov ret mov shl cwtl or andb xchg lahf pusha cmp or add sub mov mov or mov test int mov xor fs add loopne pop popf es cwtl adc dec inc jmp xchg and add or or mov xchg jne inc push pop adc push in push jg xchg icebp pushf pop mov cld and pushf pop sub je movsb jbe les and cmp mov jg and mull inc push add movsl adc xor dec das pusha xor fwait mov js mov adc jne mov cmp cwtl addr16 mov xor pop jno aad inc add cmovns popa popa call dec cmp add sbb pop scas xor hlt or add sbb cld dec dec add lret xchg lahf imul pushf jnp in cmp jne leave or push adc icebp push push mov and push xchg cltd adc pushfw popa test mov mov (bad) popa sbb mov push aad push out test cltd dec mov inc sub incb cmpb xchg xor add jmp ja push jle out (bad) push inc adcl (bad) fcomps mov sbb push jecxz int xchg and ret and rolw rorl (bad) in lea push fsubrl push jb pop pop mov pop cmpw mov jp mov add cmpl add push cmpl ret shll popa leave add or jno xor push les push fisttpll cmp jb dec cwtl orl (bad) jg cli ret shrb (bad) jb inc std add int3 add (bad) push sbb sub cmp clc pop mov adc cmpsb sub lea sarb jge int3 adc add hlt divl inc push and das sbb arpl add jns cwtl fnsave mov jnp shlb cmp lret mov or je cmpsl pop push icebp push jl push mov mov imul sbb add push xor mov lcall pop lock addb push and clc in fmuls sti or pusha push pop scas and or pop ret jg push xor push mov pusha pushl xor push stos test call push je xchg sbb addr16 rcrl pop jmp mov or mov or mov (bad) dec push incl xor adc jmp push ret sub push add (bad) mov lock sbb scas or testl add sbb inc pusha cs aaa xor scas dec in dec rol inc outsb cmovb nop and inc sub mov inc adc and mov push loopne add push pop mov cmpsl imul fsubr fistl movsl adc pop sbb (bad) push dec jmp leave loopne push insb outsb mov sbb adc adc and sub jl mov mov arpl loop cmpsb adc mov push loop mov mov pop sarl outsb push mov shrb inc lcall sub or inc adc or incb mov sbb (bad) sub mov cmp das mov inc and pop sarl in in jge pop adc or shlb cmp or cmp repz jns int3 pushf push mov mov push push push push push push inc mov cmc les dec and sub lds dec xor lret push jo (bad) (bad) push inc in pushl add bnd lea lea or jle push inc sbb sbb (bad) out loopne popa rcrl jmp fs jp jo jge pop jb mov add and sub dec or enter das dec pop or mov mov and pop inc mov mov pushf dec and pushl add mov push mov fmull xor sub rcrl xor mov ljmp sti push inc cmp ds add or jl fstpt inc pop orb add jno push push in inc mov testb sbb push pusha or mov adc push adc test (bad) xor sub fiaddl mov lds scas xor add adc jo cmp and cmp xorb inc push insl push jo jbe adc push jmp mov push mov xor mov xchg in call inc loop mov adc lea loop ljmp pop jg xor (bad) sub or imul mov sarl xchg sub arpl jne pop sbb adc and (bad) inc sbb xchg pushl nop fcomps push mov cmp dec mov or jg and fild fmull mov jne mov xchg repz insl test pop add gs xchg pushf or in (bad) outsb sub inc sub cmp inc push lods call or or adc outsb mov sbb sbb dec dec dec dec sub xor cmpsb xor cmp inc leave leave in (bad) adc and leave leave leave leave push push pop pop leave leave leave leave pusha fs leave jo js add mov jmp xor mov and pushf mov movsb test push xchg js pop das xor faddl push imul and xor mov xor add test rorb sbb sbb xor xor and adc push dec dec int3 sbb xchg jmp cmp je inc dec jne lcall push mov add add sbb xchg adc jns xor xchg add mov ret add jmp fmul lcall pop mov xor or push les mov andb or mov and (bad) and fdivs pop ret pop js or sbbl push xor inc and and jmp rcl push sar jne mov mov pushf push sbb cmp or dec mov out jns (bad) rorb add inc sub pop push pop subl (bad) pop adc mov and and icebp or lea repz add add mov add fwait js fidivr orb push sub daa mov pop and jb in xor or push adc rorb cld inc test mov sbb dec int3 and mov dec add mov dec nop mov mov sbb jecxz pop call loopne divl cmp add lcall dec das je ja rclb push inc jb xor das (bad) je sub jl je or mov mov adcl push movsl int jge lock push push xor push push popf pop jg out adc sbb adc cmc mov pusha adc inc sti mov aam and (bad) cli rcr dec pop je push idivb nop pop adc je inc push dec mov push sub pop mov dec or mov mov cmp xchg mov dec sbb jg (bad) outsb sbb cld sub lsl sbb or add mov pop cmp mov test aam inc xchg lods pop mov test call mov movl add scas sub sbb and das mov pop jb or mov mov pop jnp test jge add sbb imul mov fsubrs (bad) cmp or outsb xchg pusha xor jns or fisttpll test lock shrb or push ss mov je mov dec loopne add je inc loope push testb ss das (bad) jno cmp orl and inc adc mov inc cmp es mov test dec sbb xchg fdivrl adc cmp aam aam shlb inc popl leave pop jl shrb adc add fs ret or inc gs inc arpl pop icebp fs std aaa add push add sbb inc adc ret and movsl adc adc ja sub pop and and loopne ror lea add adc push mov cmpsb adc fadds mov loopne in jle push adc test pushf cmpsl pop push inc and pop add js pop pop dec mov mov adc loopne fdivrl sub or or sti sbb and or pushf outsb push push jo fsubl clc push pop or pop mov mov push movl cmp mov mul add rclb add jge sub push fsubs adc pushf mov cmp or cld push lea aaa or push (bad) xchg inc push dec adc xor cltd or inc cmp test orb xor fimull dec cld out enter push push sub and and inc mov cwtl inc sbb add push aam mov add push bound push in adc sub push fsubrl sub jp or xchg jp shlb jl mov pop inc mov loopne inc adcl mov xchg jb xorl lock jg in push or push or mov push cmpb jmp adc int inc add imul pop dec aam push mov or jle (bad) int3 fist sub not int inc mov push ds add xchg cmp ret sub (bad) test jmp (bad) jne sub fdivl decb ret mull mov clts xchg les inc push insb fbld or js shr rcr into movsb sahf std or jne div pop dec adc out out fucomip adc out jb cmp or cmp or xor jno adc fistl or outsl mov neg sbb lods pop jp mov mov iret pop ret mov xchg xor enter cmpsl fstps outsl mul inc push or add nop cs loope rcrl adc pusha aad xor mov dec je mov adc pop ljmp push and shlb sbb xor fldl add and subb je sbbl xor xor push cmpl jmp in ret or std lcall addb cmp jne orl jmp adc jne sub mov cmp mov inc adc (bad) aaa popa cs fnsave push xor std aas adc jmp mov cmp je cmp and scas and aam or jge nop jne pop jne dec add add lds addb fcom sub decl mov movzwl test je mov xchg jmp std pop jl je mov sub cmp sub add popa sbb dec insb leave cmp jae bound jp leave pop lods jb lock sbb les xchg test roll popf dec and pushf mov jmp xchg imul inc andl and lock jg sbb or and push or fcomp jle or stos push daa cmp mov add jmp adc bound or mulb add mov dec jl mov notl add jge jmp dec pop adc inc xor cltd or add pop push test jmp jl sub add adc call arpl dec repnz das int3 mov mov mov cs fdivs add mov jb cmp ja add cmp adc (bad) cmp pusha sbb outsl subl incl jb idiv mov inc jge pop pop pop leave mov mov sub pusha or add fild pop add push out je mov aas mov iret test push pop subb ret shl push (bad) lock mov out pusha divl lret (bad) stc xor aam call (bad) push and or and les pop inc or stos roll add push add pop out movsb enter adc adc repz aam xchg pop addr16 (bad) outsb add cld jmp pop ljmp ret mov sub cmpsl bnd or cwtl inc adc fcomip mov mov mov movsb mov xor adc adc int3 cmc adc fcompl xchg lods mov ja mov add inc out add xchg out and push push int3 sbb clc fldl sub or shr inc sbbb push add or nop lret sbb sub fcomps dec cwtl sbb mov rolb pop mov sbb add insl outsl and loopne pop pop xchg push inc mov push dec pusha or dec hlt inc add les test ss adc loopne mov and pop cmp add cmp cmpsl push xorl shrl in les dec mov andb mov subb or xor in rcll add cmp push cmp xchg jne mov xor jg cmpsb fmull inc fadds or dec xor add push jo ret repnz sbb push lock hlt daa jo outsb in push mov xlat push add shlb ds xchg mov popf jmp jo (bad) aaa test sub adcb (bad) imulb push aam pop xchg enter mov lea pop pusha fmuls cwtl outsb mov ret cmp rcl or or push jecxz xchg test or data16 xor inc and inc cld outsl xor push inc xchg sub inc sbb adc ljmp adc xor cmp fdivs int cmpl iret push pop push and ljmp and add cmp cmp mov (bad) ja mov jmp inc bound adc or cs or or pushf cmp jge cmp or or dec cwtl mov (bad) mov lret mov fs xor ja jbe sub fisttpl cmpsb mov dec push mov int pop adc mov movsl mov adc in or bound cmp or out lods mov fstl xchg cmp push adc jne and mov test add jbe subl test fdivrs icebp pop jmp mov inc clc sbb or fisub lock and inc fs mov mov xchg loopne add sahf insb (bad) adc in pop sub adc sbb sub mov push iret xor dec pop aas cli or aam mov loopne movsl and lcall pop je testb je and dec sub cli inc xor push mov push inc xor pop inc xor gs lds mov fdivl lea dec fstpt jnp negl and addr16 mov lret add push and (bad) je,pn push push lea (bad) or add pop pop mov ljmp fcmovne (bad) fnstcw fs push mov sbb cwtl enter cmpsl mov (bad) sbb cmp (bad) dec test mov pop jbe pop or fmuls jmp punpckhdq stos pop sub and scas in sbb mov adc jne push add clc gs inc xlat mov pop cs cmp mov inc inc mov mov pop stos sub adc mov bound xor pop shrl xchg leave ret loope test push call pop xchg xchg adc inc das jne mov inc ss lcall xor (bad) pushl xor mov push mov cmp pop jne dec mov insb push in mov jne sar fldz cmp fcompl mov iret mov sbb jae pop loopne or lea mov mov or mov adc adc jp sub leave cmpsl or and fild dec outsb test dec je jbe sbb push push add adc test xchg or mov sbb mov add cs sub (bad) sbb pop and icebp (bad) push push arpl push mov pop xchg jbe cmp inc pop inc bound sub imul or mov and push bound loop rolb mov cmp pop adc (bad) fistp (bad) mov cmpl mov jne movb lea push sub or pushf add lcall and add and insb add lock js cmpsb hlt add fiadd mov mov fildl cmp mov movb jo stos jge aad cs sub lock mov sar add mov adc or sub add addb cmc cmp jne (bad) inc add sbb xchg jecxz dec xor cwtl cs sub mov or fildl push aam inc adc cmpsb dec into les xor mov add add xor outsl arpl loopne cmp jbe test xchg sbbb scas outsb inc dec mov inc test push push xor cmp xor das (bad) arpl pop jmp push mov fs pop mov sub popf pushf add xor popf push dec jmp or and fcompl adc lock xor xor sbb mov mov or xchg je neg pop xor rolb nop call in fmull pop sbb cmp cmp pop add cmpb gs js ja adc loopne mov dec mov cmp fiadd jo aaa lock test dec or je (bad) cltd adc mov cmc lea push mov adc sbb ret xchg fcompl cmp cmc adcb jbe push xor mov push mov enter js lods pop rolb pop dec je xchg inc sub leave and add sbb xor movb out adc jg and enter pop sbb sbb neg sbb jecxz mov pop fcompl add jg ret daa xor or jne pop inc lahf xor cli pop movsb cvttps2pi popa adc and aam or inc mov test movb add add insb or adc cmovge push pusha xchg or (bad) lock popa (bad) ja cmp jbe rol sbb or dec mov data16 push movswl les push cld into cmpsl mov iret fimull je ret loopne (bad) mov js shrd dec adc pop push fsubrs adc cmp lods sbb xchg adc cmp cld (bad) imul stc inc xor xor out pop into in mov sub dec loopne ret cmp lock incb push xchg push push add pusha adc add mov adc xor jo pop or fsubl pop and sub pop sbb pop xor sarl jg jb push sub or ret mov (bad) neg cmp mov lock mov sahf inc (bad) jb push adc faddl (bad) movsb (bad) adc (bad) jne dec cld mov add in mov inc inc cmp dec pop or leave jae jb or dec sub daa or dec pop xchg (bad) fmuls jae stc mov outsb popa les jns cmp mov pop add or int mov (bad) stos cmp add jl rol data16 or mov xor mov pop sub push test cld mov mov inc cmp xchg test add dec adc sub call jge mov dec jns or or inc mov popa push test mov pop sub into add mov add jo add adc adc pop add adc rorb mov jno ficom pop leave add (bad) repz aaa pop popa enter xchg push pusha dec mov fimul mov pop jbe add enter adc xchg push push imul jmp insl jb pushf rcll fwait mov mov pop hlt sarb inc push stc mov das rolb pop push sub fsubr sbb gs pop pop pusha les je pop ss or pop data16 and mov fsubrl popa je or sbb dec (bad) xor (bad) add push test inc nop pushf sbb stos nop xor sbb xor add pop push std pop lcall call jne fmull test lods add push pop clc fstps or add or sub rorb dec adc push out das push cwtl mov jo add adc mov sarl sbb xchg xor pop push ret inc add inc sbb xchg push or (bad) sub sub je rorl pop sbb adcl pop and testb je xchg add or or mov adc inc loopne cmp mov mov and jle sbb mov jge cld xchg mov jg out push movsbl rorb mov mov imul adc xor cmp jl mov mov dec or jae xor mov add imul add mov out or pushl sahf insb popa cld fwait push sbb xchg pop pop pusha xchg adc mov add add xchg jge push jmp sahf add (bad) xchg popa movsb or mov aam cmp stc or push and add add sub js in adc rorb mov inc (bad) mov dec dec or add sub push pop or mov or pushf jle jno cmp movsb pusha xorl ds lret notb pop sub (bad) adc add lret rorb roll add mov rclb add or dec mov enter sub sub add mov inc call push push incb xlat test pop loopne addl mov incl fucomp aaa pusha jg jl pop pop mov sbb add xchg add add adc icebp add adc fcmove add jae aas mov push mov test int3 push push pop xchg xchg push pop inc addl gs add push inc xchg sub cmpsl movsl sbb add mov arpl pop lret mov mov cmp loopne dec push sahf mov xchg xchg lret lahf xchg fcoms icebp cmp or (bad) in dec push jnp dec fstl loopne mov add adcb xchg cli sub cmp inc or sbb je mov cmp stos xchg adc dec rorb sbb mov pusha movsl pop (bad) add mov or sub sub dec mov (bad) sub inc cld jge popa pop mov enter rcl cmpl icebp inc cmpl mov push or and jge cpuid lcall pop daa jecxz inc int3 dec adc enter mov aaa inc adc fwait movsl inc sbb jne pop pop cmp adc push aaa shrl jne testl mov rolb jl or mov ja test lahf inc sbb push ret imul repnz mov repz sbb xchg push mov mov into jo test je insl stos (bad) cltd sbbb mov xchg push add aaa pop mov push jmp mov push sbb ja popa xchg je mov fadds mov add fwait sub iret push dec ret testb pop mov add dec lret mov mov js jns mov xor inc jmp pop call (bad) fldl push cli addr16 hlt mov je dec jne xchg push fidivrl pushl xlat lds jno push sti jmp xor xor xor dec inc add inc pop (bad) cwtl push mov sub mov add add pop xchg pop and insb ljmp or and ss dec or xchg add cmp addl jbe add movsb pmullw jl (bad) sarl pop je fsubrs (bad) pop (bad) pop arpl leave add pop arpl pop sub mov shrl les frstor aad movsl mov push (bad) mov xor push cmp jl sahf jg add adc adc loop hlt faddl aaa mov sub inc jne clc cld mov pop scas into fstpl xor mov add lea push or hlt pop pusha push push mov dec or dec clc jl enter lods and cmp pop cmpb jb dec shr mov in dec lock mov jne pusha sbb into push add and ror movb xchg cmpb mov lds test adc xor frstor fcmovnbe sarb mov or push push and in sbb mov rol dec jbe pop xchg inc test pop (bad) pop jle inc popf test movsl cli push adc pop mov aam inc jo jl mov pop push enter cmpsl cmpsl inc jmp (bad) or add push add movl loope sub add jle cmp xor add xchg mov (bad) rcl jmp hlt mov jae jp cmp (bad) aam push inc or jg (bad) push inc jle,pt sub inc outsl pushf pop pop push add fisubl in jle jbe push loope add loopne mov es lcall ret add inc jg adc xor jecxz mov call jmp sub popa jne repz lret sbb lock js orl fstl or mov lods adc xlat aas cmp std or ret jg (bad) js sub push cmp jne add and or adc add and push push jg fwait lock or sti xchg mov or push lods inc cltd lret xchg rolb sbb pushf push push and xchg movsl test sub add push push lahf ret test sbb les mov mov cmp je cmp adc leave js mov dec or inc and testb lods popa mov and jne sub gs (bad) adc cmpsl jb mov (bad) lea cmpl sub pop adc daa mov add imul jle lock add loope imul sar (bad) pop popa and add sarb lcall push ret scas push sub test mov or add add pop sbb adc pop es jmp or cmp sbb or insb fisubr add sub and in popf (bad) adc sub adc ror fimull addr16 xchg lea fcoml nop ror dec (bad) bnd fistpl icebp push or shll jb and push jno testl and dec jnp testl loope (bad) (bad) sub xor inc pop push or and movsl test push stos or int3 pop adc bound aaa (bad) push in ret adc mov rcll sbb sub test jg loopne (bad) jb cmp jb jle xor inc fwait clc adcb (bad) nop or add mov addr16 aam jl rol jbe data16 mov ljmp mov imul push or mov loopne cmc adc cmp adc pop loopne pop xchg add jg push and pop ja and or xor push je fsubrl sub sub xchg and xlat push mov lea subl or cmp aam add lret ret sar add addl cmp xchg lock cmp clc jns jmp frstor mov addr16 jge lods jge sarb mov push mov push xchg adc pop adc pusha or xchg fisttp adc mov mov xchg lock xchg cmp jle gs sbb mov sub add lods popa mov sub call adc je add mov or jne xor imul adc push (bad) fwait push xor or fldl lahf sar mov test je scas dec call jge push imul testb xchg dec in mov and loope push std jg jb lds pusha sub aaa mov jnp xor lock adc jl xchg jb add xchg adc adc pop pop cmp sub add jae loop jg mov pop mov add les push mov sub and or into mov insb sub jne cmpl pop mov les je add rolb mov and lcall data16 push scas dec sub lea pop out add sbb pop cltd int3 or es fldcw adcb jne test jge lea ljmp in xor fsub cs in or ss push jno mov in add rclb pop call icebp jle das or sbb add call inc fimull ss xor or dec lods lret sub sub dec cmp jl jne add test sbb movsl lea insb imul mov mov inc cmp mov ja xchg les add push inc push ret mov xchg test adc sub inc or mov arpl pop inc dec cmp lock or cmpb jl mov inc add je incb adc and cli inc xchg push (bad) push ret and push icebp cmp mov add inc push push adc stos push adc call iret iret movsl mov nop and mov fstps add xor and adc push mov (bad) or sub stos and jmp mov loopne ret scas add in jmp das ljmp stc mov (bad) movsb decb call enter shl test (bad) test pusha je and xchg (bad) flds rcrb roll leave addl test movsb or loope or insb add dec lods movb adc push sbb sahf jno adc dec cmp outsb jl pop sub cld movsl mov mov push mov shrb movswl mov dec jne cmp dec int jno adc xor mov push add sbb in sub inc inc rolb push fdiv fiaddl dec jl out sbb adc push aaa sbb sbb sbb jae xchg les sbb sbb push push jmp and fsts movsl icebp sbb xor ret inc xchg adc adc outsb es lcall fwait dec jne lahf mov mov stc inc jae rcll lods sub or push dec cli add loope shr fs pop daa jne inc inc idiv and notl cmp scas (bad) cld lock push je sub add sub ret nop mov jns and jmp cmpsl ret xchg mov push jmp jno inc xchg add lock sahf sub sbb call mov lock push dec jmp fiaddl mov gs or add xor or xchg inc mov out or xor sub dec add and test push sti add (bad) call dec in jne add push add pop test jne pusha imul addb hlt loope xchg out fisttp jge stos stos push stos pop pop andl xor inc loope xchg push aam xor dec inc push pop and cmpsb addb dec mov adc test rol add hlt adc testb mov pop fwait and mov sub rolb test das adc or call loop add test push sbb xor repz fnsave add cltd insb pop and mov out inc std and or inc outsb sub or jbe dec mov clc fisttpl movsb pop xor or cmp jmp cmp add adc jb cmp scas add (bad) dec fisttpl mov add sub add enter mov aaa cmp add pop ja enter pusha rep pop add adc fadds pop es or insb cld getsec dec stos inc lods and fmuls (bad) (bad) imul pop push aam xor sub rorl adc xor push iret decl stos lret popa sub pop lock (bad) not ficompl xor add lock push or and shl incl and add inc out jl inc push inc test dec stos pop int3 push aas fsubrl cmp jl mov fs push sub rcl jmp sub mov paddw test je adc data16 sub out sub lea push sbb cli movhps add cmp jmp inc (bad) sub fs pop dec repnz mov adc mov or mov dec jns rcrb cmpl xchg mov leave push inc mov xchg sbb js cmp mov jecxz pop add dec dec jl lea jl pop push lock loopne add push fistpll (bad) fidivr loopne lea and push out and jge iret adc or (bad) icebp adcl jecxz xchg ret neg sbb insb and flds and pop loopne stc inc xchg add faddl adc and push adc jle sbb leave xorl push xorl orb jb and and xor lock enter xor push dec adc dec cmp adc pop mov mov orb push mov jl loopne add ljmp inc ret push sbb fs pushf cwtl xor jmp out test movsb mov (bad) mov jne jmp pop lahf mov sbb mov inc or mov or jmp xor adc aaa jl or xchg push pop mov enter loopne dec xchg (bad) ja lret frstor mov sbb test mov sbb aam adc fxch jmp push cld inc test add mov ret jmp cmpsl mov outsl fwait xor fisubrl sub loope sub cmpsb cmp jle cmp test inc movsl push xor push mul mov orl stos jbe cmpsb xchg lods jp mov and test subl jmp cmp jg in sbb dec cli mov divb adc push pop jge (bad) pop jle mov mov mov jbe nop frstor inc and push decl jb lahf jae imul sbb addr16 jge jmp and push add push xchg jge inc xor pop fucom mov gs push dec cwtl adc pop pop xchg push and dec and or jo test jbe sub mov lcall ret dec sbb es mov and outsl or or lock cmpb jl incb dec mov pop adc data16 add lahf xor jmp cld add cli and sub dec mov cmp or dec std jecxz mov jmp push mov orb pop jo shrl push mov dec cmpb dec add pop addl and test jge orb (bad) xor mov sub cmp lcall dec rclb stc inc shrl pop adc out pusha push inc lods mov mov jge jle mov lods mov data16 adc mov dec lods sarl add or add ss sbb arpl (bad) mov cmpw std pop into nop jb mov xor add pop mov test adc into adc push xchg fcomp mov out add cmp shll xlat mov mov and cltd into or and adc fdivrs icebp (bad) std mov aas ja fwait enter insb gs sub pop inc fsts testl sub jne jge aam and rcll pop movsl call inc or cmp jne cmp jne loopne rorb sub cwtl lea test add add dec test leave rcrb push (bad) jns (bad) (bad) or stos push inc cmpsb mov adc test mov lret test cmp sbb cmp movsb flds int3 or mov xchg je in addl subl (bad) pushf sub push mov sbb push lods les mov add cmp call int3 shll shr push pop add mov add or jo ljmp fisub mov jg adc dec adc inc mov neg inc icebp data16 popa mov xor je nop cmpsb rcr pop mov mov pop shr ds shl jmp mov jne cmp nop xor push out dec xorb fisub and or (bad) in mov not (bad) ficoml sbb cmp fiadd lods shr fimul push ljmp or ficompl int3 lods pop xor adc call cmp or push jp jge mov cs loope cmp andb dec popa sbb and int3 movzwl test jb das loop lcall mov mov inc sub cvtps2pd leave xor fidivl or jge or loopne add or xchg mov mov lea out or push mov push lret cmp add push jno fcmovnbe adc loope jg je pusha or or mov sbb mov loop jbe sahf (bad) (bad) cwtl movb push rcl shl jns out aad xlat fmuls pop ss (bad) sti fstpt lcall xchg je movb jmp or xchg rcl insb insl daa and jne lods sub push pop and (bad) cmp enter pushf in or push sbb fildl add add add rol dec aad xchg mov imul jle les maskmovq divl add xor mov push pusha je jle (bad) pop dec push or cmp insb iret scas in das or sub pusha (bad) shrb jno or in cmovb add push dec and in or mov adc pusha inc mov inc inc notb sub in sar inc add xor add neg sub inc (bad) or mov loop add mov scas cmc popa aaa outsb sti mov push push inc jle push js cmp in mov add fadds push or jb mov test add cwtl les fadd test dec cmpb mov idivb into sbb movsb cmpb mov incb lock and insb pop clc pop subb add sbb add int adc adc add adc (bad) std mov bnd sbb cmp sub inc add cmp mov inc adc push pop dec inc sarl lret jb loop add orl (bad) lock cwtl (bad) mov addb lcall add jle lea mov clc add xchg add lods mov and inc (bad) jne data16 jg es push or es rclb adc add push push fs push fist sbb rcrb insb add lods mov add dec mov sbb rclb add clc jg add shrl arpl or decl cli jb out adc sbb adc or add clc ret outsb add sarb jge mov neg push subb inc pusha mov add int3 jmp mov push pusha lods mov adc mov addb push jo sti xlat outsb xchg lock gs pop fsubrs and cmp (bad) repnz in idiv push jns aaa dec inc in cli imulb test push adc loopne push fsub and rorl pop les negb jmp pop and or xor shr les add std lret jo dec clc call aas mov jno adc out mov cmpsb (bad) jo loopne and leave rol mov test mov enter xor adc mov xor jecxz or cmp inc rcrb je inc inc inc inc repnz mov inc fsubs sub or pusha rcrb insb lods and lods lods clc icebp popa ret mov push mov in cmpsl push xchg mov xchg (bad) fwait jo cmp cmpsb fidivrl mov add jl inc inc cli lods mov adc cmp mov cs fisttpl (bad) (bad) xchg or mov leave adc add adc fmuls cmp add lahf test push or dec (bad) cmp jno call xor (bad) jb loopne lods bnd (bad) adc ds and xchg inc (bad) jb add jae pop das sbb arpl mov push int3 sub stc push sarb loopne mov inc sarl inc mov push or mov xchg lods push jae jg and xchg pop movb inc pop in jno inc add xchg inc into mov clc mov jnp adc mov inc push out adc sub xchg addr16 mov jge add test push loopne call push sahf adc adc or pop mov fisubl sbb push sub sbb push loopne ja test dec test imul add loopne outsb inc clc lea or inc scas fs mov repz dec (bad) ficoml movsl in xchg loopne add nop rorb pop incb fsub and sub mov pop or in push cli rorb testl sbb test ds ljmp fiaddl fild lock inc enter jno pop sub and dec int3 sbb sub mov enter testb lock call dec mov in lock movb dec xchg dec mov dec cmp jge popf adc xorb movb dec cmp jae inc or stos dec std incb sub and lret mov movb orl mov and testb int sub mov lea sub push clc dec and and pop loope inc popl add or pop mov add add add inc fimull or and inc mov add cld sar and push mov stos jle outsl je into je fisubrl mov jmp or call jo mov push or pop jne or jmp or lods (bad) lea dec adc ret ret sub add mov mov sbb je adc mov add ret mov pop (bad) mov mov iret enter xor into pusha inc (bad) fs test lods add shrl add jp outsb mov mov test inc add cmp ret out ret or sbbb push fstcw push dec aas dec xchg sbbl lret sub ret sbb fcompl mov mov mov cmpl and mov or push hlt jo pop jmp mov mov jp push mov add jo pop fld data16 mov je or push shlb ret xchg lea jo mov jnp minps xchg push not sarb add xchg xchg dec xor out pop or sbb add idivb push dec sbb inc push es js incl mov or mov stmxcsr jo add test sub or add or push jns add add mov or add ja jns cli je push inc mov jne dec push cs dec mov into mov repz inc pop sub sub loopne pop mov pop out icebp pop test mov and adc (bad) or jle loope (bad) or movsb jle push insl sub inc add (bad) pop xchg push xchg or mov add in popf lret adc xor mov popa leave leave andl cltd into xlat (bad) jg xchg xchg add lret leave jno sbb (bad) xor jbe mov add add sbbb jbe sub inc mov out dec decb (bad) fnstenv add jg add and call pop lea lea andl movsb repz or mov aad push idivl js add mov shr sub inc loope adc cmp lods or pop sbb lock pop in add in mov je enter xlat jne add mov je inc mov inc adc call test push je (bad) or loop pop (bad) incl adc jbe add lea jl pop sub sarl mov dec adc add or jb cld pop or pop pusha push jp adc icebp ljmp addl stos dec je mov stc jne dec adc jbe in lods and sub inc or mov mov (bad) lock adc push cli mov add add or les pushf lock cmp je xor mov out mov mov add push daa inc xchg test adc sub je add data16 adc push rcrl push testb xor dec sbb inc inc les pop inc and sbb adc es or cmp dec xchg mov int3 inc gs cs or ja rcr and and cmpsb and mov inc fsubs (bad) push or aam and test bnd in xor mov clc insb dec movntps cwtl and cltd sbb sub jne and rorl lock (bad) adc dec xor jbe dec pop fsubs push enter nop pop adc jbe mov jg fcompl mov cmpsb sbb (bad) adc int cmp cld cmp jne and shlb cmpsl dec js adc mov in and loopne (bad) cmpsb or int3 in or xchg fnstenv cmp mov les push aam lock out and xor mov pavgb adc ret scas mov fiaddl dec inc out xor sbb test insb cli pop test bound fsubr pop sbb ret sbb addr16 je test lods lea sahf sar inc or dec in (bad) mov pop fs push jae xchg jne ret xor loopne mov insb add neg add inc adc mov adc ret scas push sub xorl add lods ret cmp movl add je jno xor push mov add adc lock stos pop insl or leave arpl rol or adc sbb insb dec sbb insl and inc test ret pop mov jge push push imul out or jecxz and shll dec or arpl int3 mov roll aaa in (bad) adc add rclb pusha or mov adc xchg clc clc or or insb (bad) ja jg add aam pop in push xchg cmp lods push daa sbb loopne dec mov mov or xor fisub pmaxsw rol add and (bad) sahf push mov (bad) sbb mov add insl and dec fdivs mov aad or push lahf adc mov ja movl adc adc jnp pushf push adc dec or jl dec fsts ja adc out sahf push emms and xor loopne (bad) movl or or rorb or jbe sbb adc fucomi cmp (bad) sub sbb clc fsubl add icebp sub sbb mov add daa sbb pop fstp ret mov fisttpll or pop adc push fnsave push mov push push stos lret xor call add push mov sub fnclex fwait smsw test jne smsw test je cltd xor xor xor mov jmp or or or or add add push mov push push push push mov cmp push mov pop jl push pop xor div sbb (bad) (bad) in incl imul add movzbl and ss mov shl or mov shr nop out call and mov mov sbb in jbe push and and mov add dec cld outsl (bad) in pushl test jne movb jmp mov dec movb push add idivb jbe or mov shr rorl jmp cmp andl add add push call or pop leave ret test mov and inc add adc add adc test jne push dec imul fmull cmp fdivrp scas and or add push mov mov add lea push xor adc (bad) xor push push cmpb je imul push xchg fnstenv imul fisttpll clc push and (bad) std (bad) mov ja pushf cmpw lock xor cld or inc add dec clc jo inc scas pop or or fildl add rolb jge je ja pop sti cmpl jbe adc or dec adc call out ljmp neg sbb inc imul (bad) cmp ja add lds push and push adc xor and lock rorb add push dec jb ret mulb js insb and sbb (bad) jl jg xchg mov cmp mov mov pop lock cmp jl mov insl sti fistpl sbb lea pop sti adc lret inc adc or leave add inc jne adc lea sbb imul xchg inc and cwtl loopne inc cmp cld add jl xor jle sbb shlb dec or lods inc pop lea or into jo push adc stos mov pushf xchg mov add add popf cwtl dec cmpl inc xor inc cmp jg pop dec jl lds int3 cmp fimull push and es fs test mov cmp push push push pushl xor dec (bad) sti pop jno in or mov mov lea mov or je mov mov jae jae push push shr jo add sarb lret or movl sub lahf lock add push cmp cmp je (bad) aad jge cmp mov in andl loopne push stos and mov out add incl rorb mov push lea cmp dec mov mov cmp add or cmc push pushl mov shr out mov ds cmp add fcompl pop (bad) mov in cmp xchg cwtl inc bound nop inc insb ficoml aam aam pop nop pop jb and and add inc dec and push out stos ds xor add jg or mov je mov push mov or lea push push test mov cmc sub lock pop pop clc mull or int3 pop test mov xchg lock adc orb leave or lea push orb xchg add lods mov orl rolb mov pop add ret inc or inc adc cmp sti push adc ret cmp lea mov lret jo add mov adc addr16 lea mov je inc aaa and mov xchg lahf push and cmp xchg fnstenv sub dec loopne (bad) add xor push xor mov lahf cmp cmp jne ss call js,pt xchg pop xor (bad) adc jne fnsave lcall loopne push (bad) clc xor push scas jge (bad) incb das inc enter adc (bad) pushl add xchg jae stos mov cmp (bad) je jl or fmuls jge push enter jl pop ret add mov push je (bad) xchg inc fisttpl (bad) pusha jle popf cmpl xchg je fadds jle ret daa mov xchg mov add loopne cmp lods mov andl jnp adc adc (bad) xchg in negb std push or xchg fbstp mov cmp test mov add inc inc fidivl jb cmp stc fistpl imul adc push push in cmp fs sbb scas mov push (bad) adc lds or mov cmp xor in sub clc push jg and xor imul decl jae mov jg mov mov mov dec jl std push sub lea mov shrl pop sub cmp frstor das pop mov or mov xchg add add pop jle sub or lds in xchg clc fsts xchg and and and shll movsl loopne xchg and mov sbb mov xor mov movsl inc push push inc push inc call cld mov fildl add incl or mov add mov push push into cli lods fidiv push or sbb or sub sbb cmp jp pop and inc push inc pop mov add call push jle inc js mov add xlat jne jmp jle ja inc mov (bad) adc add push jbe dec insl int3 sbb push add (bad) stc decb test cmp jae cmp je ret inc inc cmp jl cmp rclb add sub mov jmp mov push int les adc addb add or or xor adc clc mov out mov push clc cmpl rcl je fimul jae mov mov mov and insb sbb mov pop mov jbe sub lcall mov sbb shlb and loop clc jmp add add lea cmp or (bad) lea stos push mov stc mov decl addr16 fist jle cmpb arpl test ss mov xchg add or add push cmp mov mov pop cld and jl mov push lea lea mov lea js jns es pop iret out cmpsl clc sbb jp push adc mov cmpsb das in add push mov mov outsb xlat add orb movsb and fnstsw vucomiss clc push test mov lock mov (bad) call fistl mov push rorb sbb adc movsb or push hlt or sbb mov pop xchg add addl lods pop pop icebp mov pop and add push flds in add inc fs push mov sbb rorl and push adc sub js lock push or push and push push adc cmp push dec (bad) ja rorb ret fldt pop pop xor xor jae dec mov pop mov outsb inc jl pushf fs jle jp rcl aas jle popf aad mov popl lea test je repz or jo cmp pusha xor cld xchg inc cmp and xor dec push andl sub js cmp dec pop cmp lea aad mov push icebp mov sbb (bad) pusha add xor cmp jl stos xor clc jne andl cltd or push inc push movb add aas call jle lea movsl or or and sbb jle pop sbb pop fwait push push inc popa xlat lock pop push sbb mov add orl xor and sub fnstsw mov or cmp push jne (bad) or ds cmp mov pushl insl loope sub adc stc adc mov adc (bad) ja push push push jge xlat sbb loope pop cmovae push sbb cmp sub js lock add sub movsb leave ret xor sbb jp cmp mov cwtl mov pop push adc xchg popw bound cmp push adc (bad) nop and inc or roll pusha inc pop push add inc dec hlt and adc clc and add mov (bad) jne fdivrs mov mov adc stos pop xchg push pop jmp sub add push adc lods add jl pop pop add fdivrl (bad) lock mov mov add mov out decl mov inc dec jne mov mov movsl fwait jb cmp loop es icebp movsb pop in or clc cmp lahf mov iret in dec push sub add mov aas gs cmovne sbbb mov pusha add sahf and addr16 rcrb clc test or pop mov inc mov rclb xor dec push jo adc xlat mov push and sub lret aaa and in cmp inc push mov adc mov or in stos (bad) mov pop inc add mov es lock mov push mov adc movl pusha sbb mov inc sbb mov pop mov mov lods and orb test nop inc lcall dec mov cltd push jp (bad) imul mov aad or pop inc aaa test add in or mov jne or mov add sub test js adc rcrb aas add sub mov jae cmpsb or (bad) loopne pop adc out les push iret subl ret rcrl pop addl dec sub xchg mov xchg push mov js mov jmp pop (bad) mov dec jns xor add mov data16 mov mov pop mov sub movb add push sbb or push mov mov loope mov out mov idiv stos add cli push mov loope or push fsubrp jae mov or xlat sbb enter sub mov cmc mov sub sub aas add dec push jno mov inc sub sub mov jo cmp push mov jae sub fstp push fild adc les stc xchg or lock sub pop hlt pop mov clc adc mov pop daa pop push push lcall test fisttpl pop and cld push enter push push push mov add or aam test lods (bad) aas loopne inc aam mov mov pop in outsl jecxz or mov or clc push push js lods outsl rclb jmp pushf pop pop mov mov mov cmp sbb or fcmovnbe lods cmp jne and pop mov pop jmp jbe js or ret sarb add xlat jmp add je js mov cmpsl lahf cmp push jnp subl push movsbl sbb (bad) test lea sbb mov sahf cmp sbbl out push mov jmp imul mov pop dec jo mov push jnp (bad) fstl cmp add add cmp bnd shr mov inc lea jle pop loop cwtl repnz jbe pop pop pop dec push mov pop sbb fildl and mov lods loope push hlt mov (bad) xor testl cmp loopne mov adcl jbe test mov inc in mov push add pusha inc add sub mov cmp jle pop inc stos inc ja jp clc push das mov loope sub (bad) xor push cmp clc cmc xor xor cltd adc add inc notb scas mov loop push leave (bad) std pop xor push in enter push and jno push and mov (bad) dec repnz xor add inc pusha dec hlt bound push xlat inc jp push fistp cmp out adc pop je adc ljmp insb or or outsl inc test sbb xchg or dec push insb jnp jae adc jmp js icebp mov jl dec js mov push es mov bound arpl push fwait push mov lcall jle psubw cmp jae fidivl out daa aas stos push push sbb sti sbb (bad) loop ret pop xlat push xchg fistl jne jg rolb loop dec fbstp add or and xchg clc jmp mov jb adcb addr16 pushl movzwl shl xor xor add shrb or pop rep cmp and lds outsb ret xor and das (bad) mov xor (bad) dec pop ret mov mov mov push in pop aas es outsl xchg inc dec sub jne and pop jbe mov add and dec test inc sbb stos jbe jmp add push mov push rcl jbe push inc jmp dec in jbe mov (bad) mov pop dec pop inc (bad) aaa test mov je subl dec psadbw fild add orl mov jo hlt incl loop and xor push xchg cli mov mov adc lea inc add scas rcll stos out push enter jne ficompl add sbb mov cmp xchg je mov faddl jne sti test jle jbe sbb sub pusha sahf adc xchg and push jp nop push insb xor mov sbb sbb cmp pop pop je and cmp sub jne cmpb mov test jle lock movzbl inc jmp fstpt push bound sbb leave inc cmp jle and setp cmpsl jns sbb jge imul mov mov outsb fimul mov xor rclb inc add add dec inc push xchg mov clc jmp call stos and sbb xor clc sbb ret cmp lret add rclb movq pop or push xor adcl sti cli add jg js ret mov pushw or xor and test jne dec cmp jl sbb jbe and (bad) jge add bound mov mov mov cmc stc idiv decl and ret cmp jb cmp jbe cmp push sahf jbe cmp lock jle (bad) jbe cmp clc jbe add cmpsb cwtl mov adc or es je add adc inc insb add rcll (bad) loope fcoml or adc add in sbb push xor (bad) inc vmread dec pop or pusha lds andw mov jbe hlt jne xor aaa movsb fcomps lea in lcall sbb adc outsb pop mov cmp jne or mov jge je inc xlat sbb pop push cmpsl mov and add lret loopne push add ja and (bad) and leave xor mov sbb xchg adc adc or pop rorl fwait and call dec and test pop movsb inc sub add add insl pushf mov push int3 or pop cmp int mov sbb pop loopne push adc push repz das cmp mov addr16 stos jge adc fdivs testl cmp ficompl mov xchg push jo stos and adc sbbb mov inc pop sbb mov dec mov mov push xor lods cltd xor es push inc push mov adc rol push sub sub es ret sub es inc inc dec insl xor jb sub jge ds jle lea cmp fild jge inc add cmp imul push add push sub pushl pop xchg jle and lea les adc insb inc adc push push push arpl jmp xor push in push xor pop and push push ja inc sbb jge insl clc push mov xchg adc shrb test lock adc sbb lea pop lods add mov mov mov add subl clc sub inc push (bad) ljmp fdivrl out fld fucomp fnstsw test jp fstp fld1 fxch (bad) in ficomp lea ljmp push sahf fmul fcomp jmp les adc shrl (bad) mov lea or loopne and xchg outsl fcos push inc cmp jge incl fmul fcompp jmp je js (bad) ja or add xchg jae (bad) fstp sub push dec mov pop ret gs mov add gs mov jo xchg mov push stc xor dec test mov add or add push mov icebp rolb and add mov dec push das mov jae mov sbb sbb inc add pop sub jge cmc imul adc add mov jmp cmp push inc imul pusha aaa (bad) add xchg sbb pop sub dec mov je stc push lods cmp inc arpl sub push and jmp and adc or enter sbb das incb sub pop or pop hlt iret push push sub mov rcrb (bad) pop adc ljmp inc dec push rorb sarl xor jle add adc repz test dec mov adc andl mov and sahf sub mov pop mov or (bad) and clc decl mov mov mov mov lea push nop pop stos (bad) xor imul ret mov or cmpsl push xchg cs mov add insl add cmp andl mov or sbb cmp js mov popa inc add cmp xor xchg jne repz lock push call cmp pop mov add cmpb cmpl push icebp push sarb jbe outsl add push push push ret push jge test rcrb jg (bad) mov bndldx jne mov ret addr16 test sbb or push not subl jl push cmp popf dec es arpl mov mov orl xor (bad) xor jo jmp lea subl lret mov iret cld lcall push xor mov into call clc push in inc push clc and jne outsb daa es lock stos mov out adc test roll xchg loope lret add jns clc pop orl sti cwtl push gs mov and sub pop movsb ds movl adc push jp aaa push lea popa test sbb jg les or cmp pop pop jne jmp shrb pop adc add sarb fcoml mov pushf pop xor sub pop jl push hlt dec int3 add dec jne mov lock adc jmp adc es add dec or push add pmuludq xor test xchg or ret adc sub fimul out (bad) pop pop pop clc loop cwtl jmp cli adc sbb or or (bad) mov neg sbb and sub add add push int3 je pcmpeqb push or push fsubl and push and pop lock rorl loope fadds add cmp or push daa push push out je or jnp data16 aaa sub lea mov lods aam cmp out or inc cmpsb setne pop rorb or mov test stos sub jge or mov mov enter (bad) push or out jl ds and xchg fsubl jmp (bad) adc pop adc je insl mov adc test jne arpl adc adc sti std daa lock lods sub push fwait in or loope stos cmp inc je (bad) cmc and je sbb je (bad) jle addl add or (bad) pushf rclb mov pop mov inc adc lods insl or sub hlt push adc clc out maskmovq (bad) jne xor jle adc or stos loopne mov or pop or push dec mov sbb sub ret jg std je cmp jb push inc and fdiv inc sbb (bad) push (bad) sahf movsl inc (bad) push add (bad) pop lea or pop jae imul push jne jmp lret insl xchg push in mov push scas notb sbb or lods add popa mov adc add orl (bad) add lods cmp add adc dec aam (bad) push test aaa das add or pop leave ret shrd icebp sbb push or addr16 adc sub push push push int3 sbb push mov add pop ret mov and push xchg jo add jno ret cld and imul mov mov cmpsl adc je ret mov enter gs in popf adc sbb xchg add sbb cli jmp xchg addr16 jle jbe dec adc xchg push cmp jne loop imul add or lock jmp push inc xchg loopne cmc movl xchg and mov sbb dec ja es (bad) ds loopne add inc test je dec xchg push xor ss mov inc into movsb add loopne add call jle mov add sbb ffreep rolb xor add jo rclb cmpsb in out daa jne or fldt in adc or push pop cmp or out dec xchg push aas aaa pop pop adcl lods test mov pusha sbb push fadds (bad) fcmove or test popf push sub lods lock cmp jl sub push mov and loopne movl pavgb scas cmpsb inc call loop inc sub add push fildl mov dec and push pop enter xor xchg inc out push cmp enter cs xlat lea add sbb lret adc dec mov into jmp clc mov and les cmp xor (bad) pusha adc scas push cmp and cmp call pop pop mov sub outsb call mov push cwtl ljmp jne adc or push add push push sbb in or dec and cmp add xchg xchg mov mov xchg jne popf sub sbb xchg aad dec push or cld xor mov movsb jmp push ja or mov xchg js mov pop clc add je in (bad) ljmp push add aas popa es push aad fnstenv lods cmpsl js or adc das insb rcr push mov mov ja jl out xor data16 sub xor xor sbb ja pop jns mov imul sbb dec sbb mov dec popa push sbb adc out or pop test cmp mov sbb lock ret push cmp inc icebp adc mov aaa inc jo ret std cmp add or cmpsb push clc pop lea inc std or fsubl ja addl xchg repz lock push push mov jnp cs add mov fldcw lcall add cmpsb imul mov mov and add mov add sbb cmpl dec cmp adc sarb mov cmp clc add add bound add out push jp out or sbb imul cmpb pop pushl mov mov notl xor mov orl jne pop je pop jb or movsb and in add arpl inc mov push push or cmovle lea push push loope notb and aam (bad) fcomi add rorb xlat mov jbe mov add cmp dec dec inc jnp or or mov movsb pop dec jp xor out inc xchg mov pushf cmp or cmp mov ficomp xor push push add jo adc ds out xchg or dec cwtl push mov push jmp push sbb (bad) adc sub int3 adc push sub and add add push dec cmp jl inc ret rcll and je dec movl ss sbb jmp sub mov add add push sub enter push mov les les xor mov mov add dec int3 int3 ss mov jo adc mov push push adc sysenter mov inc ret push push sbb es xor lock loope ja mov add cmp jo or push mov mov loopne jle pushl popf repnz push jno or sub sbb add add aam cmp adc inc adc xchg mov lock js rorl jmp sbb add dec or arpl push jne mov clc pushl dec add test sbb add mov sar inc shl cmp test add inc jecxz dec jg cmp jne mov mov and mov add xor or aam fwait sub ss xor pop add mov mov cltd push test add pop scas inc mov test push sar in push je or sti jl cmp je inc inc mov cmp cmp dec dec cvttps2pi push jl testl cmp sbb inc pop es and mov inc push or jle sub cmp je cmp je push add add fbld push push add add notl in pushl cltd test mov test push pop mov (bad) pop pusha mov mov jmp andl lea lcall clc aaa dec and movb and adc inc or clc and mov clc js jge pop mov cld pop lea jne cld jne das (bad) cmpsl sar sbb or fmuls mov inc cld or jbe push add movl das dec push lods pop inc sti and pusha push std imul mov xor adc jo or sub mov or in add jecxz xor and or sahf mov loopne jbe push ffree sbb or and mov cmp bound fdivrl inc sbb cmp lea loope sub push mov xor adc pop in inc lods push in sarl and mov cld add add cmp fisttpl dec lock imul dec cld pop imul xor clc mov sub push sar push jbe loope,pn cmpsb xchg xor (bad) add in loopne push (bad) call jge hlt mov lods lock hlt lea cmp je lcall adc xchg fmull add aas enter sub sub jmp inc es sub and iret mov push clc mov cmpsl mov rcrl pop decl subl or push hlt jl cmp and lcall je inc mov jle in mov dec mov (bad) jb insl loopne (bad) and xchg punpcklwd add sbb popl add push subl ret mov jle cmp daa je sub or push add imul adc movsl and push xchg outsb jo dec pushf jne jle jo ljmp dec inc mov js sbb xor xor cmp lock dec and je jb push xchg xor mov pop cmp push sub cld es cmp rorl and inc sbb clc or into ret xchg mov xchg push loope push jo adc sbb inc lock add cmp ja jb cmp jae or lds or and rcrl sub mov scas xchg das xor push sbb mov or cmp test pop sarl jl inc cmp arpl pop in adc sub mov or out sti mov jne xor pop (bad) pop add cmp push adc and jne xchg in jle js or je pop sub fstp xchg mov andl fdivrs arpl pop add jmp mov sbb or or push imul mov push add pusha sub stos push arpl fisubrl pop cld and dec jmp icebp cmp (bad) (bad) lods jne call cmp mull push arpl je mov sbb mov mov add je mov ret jmp mov out cmp add mov jge adc vpunpckhwd loopne push lret push aaa je out and inc aaa test add addb dec call cmp pop adc adc pop and add pop daa dec xor adc adcl inc xor and test jne shrl (bad) or push mov jmp sub jmp rol test jp add inc adc push jo cwtl pop mov mul push js pop mov jbe,pt outsl mov icebp add cmp jb cwtl movsl loopne mov je dec std push or or xor mov sub mov sbb and test mov push out idivb push push add movsl outsb pop dec jo jl aam je je xor fmuls sbb pop fidiv pop adc mov int add sbb inc sbb mov add call push inc inc pushf repz (bad) xor lods aaa out decl mov or loop sbb xor sbb fwait push add or push jmp jg sbb sub je mov (bad) js sti rorb cmp outsb arpl sbb xor dec movsb adc inc test xor push dec xchg pop and jae mov pop imul cmp or cmp jb pop adc push mov or loope dec fdiv and ss cmp or push add ret pop xchg cmp mov cmp push jecxz xor push lock push out retw fsubrl inc push jmp out xor mov roll dec cld push out xor mov push sbb mov packssdw mov adc inc sbb xor imul (bad) pop fstps jne pop push push push dec add fnstcw cmp push in jo or mov adc push jge pop xchg mov adc jecxz fadds daa pop pop mov pop xor xor pop or cmp lea lock stos inc dec inc cs mov or sub sub aas je xor insl stos add and xor pop pop inc pop mov adc jge ss out sub int3 or clc aad push adc (bad) js add pop push ffreep in pop or or pusha sbbl xchg xor push inc add pop add dec jmp lea push ds adc jnp xchg je (bad) repz es or xchg jl pop jnp push andl jns mov or mov inc fstps xlat and push inc xor js (bad) stc mov cmpl add fadd push orb pop inc sbb loop sub mov pop cmp add mov mov cmp adc jg (bad) or adc fcoms cmc xor pop int add jge pushf adc sbb xor int3 push fadds inc xchg add adc dec roll mov pop repz inc addb fildl loope add jle or mov inc in push sbb add repz xchg add xchg ret mov lgs pop adc mov ret or mov add mov (bad) into jo lods ds sbb enter jae lds sbb pop hlt mov sub mov adc ja pushl xor push clc mov decb xorl or mov jae leave mov jnp jo push dec jle push push add lcall mov inc std add xchg add mov sar fistpll mov xor punpckhdq mov sub cld pop cli mov es adc (bad) sbb sbb add pop iret inc xor xor or mov cmp push push test test imul and sub ss pop lock movl pop pusha fs int3 stos loopne sub push xchg mov push add adc and mov rolb repz sbb daa jmp mov cmp add cmp or mov ret imul rolb scas es test adc push sahf adc icebp sbb std add mov xor sbb out or or or mov pop pop pop or fcompl repnz xor (bad) loopne popa mov pushf das into test mov jmp pushf test pop daa or ljmp lock push ja jmp push jae add jmp repz add pop ss xor mov xchg and lcall aam add inc cmpw out rorl movsl lahf ret mov test sub push xchg or fisubl icebp inc xchg fiadd dec add cmp xchg dec lods scas loop add lock push test clc cmp fildl pop jo maskmovq (bad) mov lea mov fwait lock rcrl cltd or inc lahf movsb (bad) imull dec inc cmp sub (bad) aad push adcl xchg sub in cld arpl mov addb pushf sbb lret sbb test sub push ljmp cmp add or xchg cmpsl add aad mov or std push test cli stc or fstpt add clc or loopne jno lock dec xor scas jo mov jno notb cmp and lods lods push push fyl2x rolb xchg pop dec leave mov push xchg sub rorb push test mov xor aas subb mov jbe mov jb in mov loop mov cmp les cmp clc push pusha push add push insl add (bad) in cmp das inc push ss sub jmp cmp cmp cmp lret xchg in insl pop hlt subl insb insb xlat and push (bad) call mov xchg xchg outsb rcrb add into scas dec push popa rep and jo sub adc or mov sub or leave lcall testb mov and push dec mov xor in and out and (bad) xlat inc fidivl push (bad) dec insb and imulb push fisub lahf pusha jne push les inc xchg scas or cld xor test inc in clc and aam rcl mov sbb cmp aas fdivs xchg dec clc jne mov ret jmp dec bound loope pop adc jne add cmpsl mov jmp (bad) mov or loope or addb lock sti jmp jo cmp adc jle and movl jnp loop and pop hlt and xor cmp adcb push push or and (bad) dec jbe and mov fcmovnbe xchg popf add js testb mov movsl inc subb je nop xchg mov xchg mov sti xorb sti cmpb mov sbb fwait je (bad) aaa js movl add lret inc push cwtl sahf xor hlt sbb pop imul sbb clc sub xor in test push insl sbb bound pop push stos sbb inc inc dec js jle and stos pusha fistl popa enter jmp fstpt or sub cmp jl mov and mov jmp rorl mov cmp mov mov (bad) jae and jmp mov daa push xor adc insl (bad) out push daa je (bad) andw ja pop clc clc sub and clc sub fs sub imul std cmpl or push or add out or fstl add add xor gs (bad) negb rorw sbb adc adc cmp das mov or int dec mov cmpsb jmp shrb mov xor and mov imul cltd push mov or push cs sub push iret pusha sbb test fldl mov mov lahf sti push call dec inc dec and out cmpsl push call icebp incl dec jg outsl out adc add lret pop (bad) adc out insl dec test mov rcll in xchg nop cmp in test cmp jbe mov repnz pop sahf lods mov hlt in hlt cltd in push hlt hlt sub lods or dec xor inc sti lock or lock jg lods test or and jne stos adc or bound push test lock mov aas cmp ljmp jle or add sbb inc sbb and cmp or pop inc gs dec js inc (bad) or cltd and pusha xor inc or aas loopne lea jmp adc pushf xor and push or jo mov jo loope inc verr xlat or xchg andl cwtl cmp or or jmp jae mov mov add and outsl cmp (bad) and popa mov add das jo mov bound add aaa cmpsl fmulp addl insl sub arpl inc push nop mov add es or lock shrb and dec (bad) mov je mov push outsb adc and adc pop call sbb push jne aam add or adc and je adc lods mov sbb xor add adc in xchg xor inc pop adc push repz inc inc cmp dec jae mov cmp or push fldcw jno mov push cmpsb sub pop jo cmc pusha sub adc or xchg (bad) repz popf cmp add inc pushf and icebp pushf aam lret and imul dec insb cli icebp stos add (bad) and inc cmp mov or pushf inc cmp leave xchg mov or adc adc push pop test ds and and ret mov sbb cmp outsb and out test cmp pushf shlb jmp test xor mov adc (bad) and (bad) lock mov and jnp ja sbb add inc hlt faddl add push ficom cmp adc jmp call pop push fistpl cmp push sub pop sub loope je sub sub sbb lret dec pop jge fs add or scas ficom out push add and cmp scas mov cs es push out mov ss dec push loopne mov (bad) push pushw dec inc dec lcall rol inc push inc cmp push mov idiv adc mov dec pop mov push or mov shlb je pop pusha add push jmp and pop adc aam pop mov icebp sub in bound sbb and and mov xor jae loopne add das xchg push cmpsl sub test xor dec xor insl cmpsl push aas mov (bad) dec sub add push movsl pusha (bad) data16 mov sti rcll aaa lea packsswb push xchg mov (bad) lods aaa inc mov add (bad) mov in and mov inc addb lret fs pop div inc das icebp or loopne lea add cli imul add and or push dec dec adc pop (bad) (bad) (bad) ljmp inc in mov cmp jbe cmp jbe cmp je cmp je cmp jne daa xchg lock mov (bad) (bad) jbe aaa pusha addb in xor dec add insl add add pop sti lods sbb mov add push sub das inc xchg sbb faddl xchg and sub mov out add aaa (bad) mov incb mov mov push sub mov push or clc mov cmp insl sti mov add enter mov sub adcb dec cmp pop test mov mov iret fs lods cmp pop test adc clc out mov mov cmp adc sub and xor or inc sub or outsl add shl push lea push imul add jo in imulb jle push pop adcb add and notb subps aad jne cmp fistpl push inc aaa out pop aaa mov cmp les dec mov cmpsl mov pusha jmp andb lea push inc inc adc bound adc and cwtl cmp add aam leave pop mov scas mov jle add push push testb (bad) mov add or ja ljmp fisubr jno ds insb pop fiaddl push xor jbe xor pop mov cmp mov xor or loopne ds clc lea pushl ja cmp inc gs xlat xlat jbe add rcrb shrb (bad) aaa sti mov pop dec mov pusha in mov mov mov add repnz cmp je cmp mov push jnp in pop add daa and (bad) jge sbb sbb push mov mov ljmp push sub les clc inc mov jmp cli repz dec rcl imul lods lcall sub jp rolb push pop test shrl or xor pushf mov add push arpl mov jmp in jns dec and jae in dec insl stos and cmp ss or mov lcall push xchg xchg jne inc rcrl sti je mov fcos mov adc pop xchg push aam sub aam icebp mov sbb and lea pop cmpsb jge call enter aaa adc fsubrl xor lds divl cmp xchg shrb ljmp inc aam mov ret or add lds test push rcll pop fmull movsb (bad) mov loopne loopne and nop cmp push push loopne mov xchg mov jbe mov push xchg jg push insb aaa dec jae arpl add jmp cmpsl ret scas or and std cmp ds js mov mov sbb adc jb movsb jo sub cs and xchg sti xchg pop inc arpl and pushf jge adc mov add insb xlat negl nop cmp lods add sub mov std scas insl xchg xchg and or lods pop sbb pop (bad) cs pop popa jns pop sbb jo sub jmp jg je mov or cmp add pusha add pop cmc popa clc cmp fsub cmpw xchg sti or sti pop popf sub sub pop push adc insl std sub sbb into (bad) (bad) pushl adc call imul js cmp dec mov mov jbe push jb mov mov lods (bad) dec mov xlat add and pop inc add test cmc xor cmc mov sbb test add pop in and sbb int3 adc enter (bad) (bad) mov out pop xchg inc mov xchg stos pop mov rep movsw sarb sub inc subl ds mov (bad) clc test sbb test hlt xor push jle (bad) ja out pop cmp jne cld bound adc or (bad) icebp cmp xor fs cwtl adc rolb mov movsl aam adc adc in add aas mov popa ret jg jl lea jge mov sbb adcl arpl pop aaa jae and (bad) xor and cmpsb push cwtl fdivs xchg loop adc pushf mov push popa std xor inc sbb stos in add scas sbb mulb je lea imul and les jb rcll roll lods sahf cs loope gs insl cmp addb and inc push (bad) xor negl mov lock addb jl frstor jb and xor stc mov jge scas dec inc xchg insl jne and (bad) lahf cmc mov push mov pop shlb cmpb (bad) cmp cmp adc adc push sahf out sbb faddp jecxz inc pushf repnz loop ret push push test shrl out sbb and cli mov aaa and sbb dec fcomps jae push mov enter mov cmp arpl mov xchg incb mov pop gs adc push movl fisub fist aam mov or and or movb or aam push lret ret mov into test push adc mov cmc pushl jnp hlt cmp mov fisttp sbb ss sarb jg jle (bad) jb ret aaa dec pop gs mov in movswl add and push fidivrl adc sbb push and aaa mov je push add adc inc in sar clc push push mov jmp call adc mov or inc cmp inc repz inc jmp add cmp jmp das mov add push pop mov fmuls pop mov lock jp pop jmp inc adc jmp jmp push jne and dec and xor mov mov mov push sub mov lods mov jge xor adc push out lret jne and mov sahf cld lcall add jmp mov jge xchg cld inc (bad) mov mov or or fs push cmp jge push lock test mov ss or pop (bad) mov and and cmp (bad) jo inc add push mov lcall repz cs inc ret cmp push inc xchg idivb inc xchg mov bound nop pop js jae rolb cmp xchg mov mov xor addr16 push imul or orl jge jle jg mov mov mov lods add jo dec rcll push add sub jmp sub add ret pushw cltd scas arpl or nop pop icebp rclb movsb leave xor mov shr sub sub add or lret mov aam pop cmpsb and and fisubrl xlat pop pop ret das or mov loopne mov js cmp data16 inc xor adc cmpsb (bad) jp (bad) sbb popa lods mov ss je mov and push pusha testl test imul and shrl (bad) and cli popa mov aaa mov sbb ss xor cmpb negl jge or addb cmp xorl pop js jle mov add mov add and mov insl dec push xor lds and nop add and jp adc mov je and pop ffree mov xchg jo push getsec xor bswap xor pop jae inc ja sbb js cltd (bad) adc cld addl jl xor (bad) jmp in mov icebp dec push popf (bad) adc in nop lds and xchg or push jae pop and pop push loop push in pushf cmp pusha cmp jae int3 mov mov dec call adc enter into adc push pop push mov outsl push mov and dec add sahf mov hlt sbb (bad) xor loope mov cmpsl (bad) in or cmp inc jge and dec sub and and jb dec and dec cmpsb fs or mov adc pop pop adc (bad) lea lods push add and pop mov or cs mov adc adc or push push adc movsl imul or jmp inc pop rorb lds adcl sbb (bad) dec mov rcrl cld inc push jne push sub inc test or push xlat decb dec dec push inc xchg pop pusha lock jo or insl and xchg jmp lea bound arpl inc and xchg xor dec les pop add aaa push add inc push push in add js and push outsb leave pop push xchg dec aas xchg mov mov dec and lea push call add mov push sbb inc mov and push add add pushf push push imul cld jnp sbb push loope lods dec stos cmp cmp push jbe push aas lods test call xlat sahf pushaw fnsave fs mov jb xor or test fildll cmc add addb nop pusha icebp xchg add rcrl pop call sarb add int pop stos jl sbbl divb jle cmp push call clc je cmp js in cmp fs mov or mull inc and mov add adc loope or dec popa or pusha sub jbe (bad) out test xchg inc sysret adc fdivrs and sub (bad) adc fnstenv test fsubl and jl or cs push sbb add jl push aad add fstpt mov push add fmull sbb and inc enter imul sahf shr daa test sbb daa (bad) loopne pop adc xadd fnstenv or push jae lock das clc or push ja lret push sbb jl push arpl hlt sub dec js sbb ss lods add jne loope mov gs sub cmp add or pop std push add addb cmpsl insb vmwrite fs scas adc cli inc or mov or adc loope adc adc in jnp and and loope lahf adc repz sbb xchg test cmp xor mov sbb (bad) mov push je loop push ret xor pop shr jl push sub push xor sbb add mov adc (bad) mov push test sub push and dec test pop push add ror lcall sarb push mov je outsl cld pop imul imul jae cmp je jbe shr add loope adc fild jb adc pop or mov push jo cmp inc sti pop pusha push addr16 xor and xor iret rcll dec fs lea mov jmp sbb dec and scas xchg data16 loopne or ljmp jg mov mov mov cld scas inc out pop gs (bad) mov push add push xchg fwait popa mov fs jno sub xchg loope test or adc test mov push xrelease or or mov insl (bad) jb pop push adc in fs mov xor sub movsb xor mov out cmp mov or out dec jle xchg pop xchg ljmp lock adc stos lock jbe jo mov mov xor jnp dec (bad) xor sbb sbb es mov je imul sbb lar sahf sbb sbb mov jno push or inc cmp mov sbb ja and and js in sbb push lahf sbb (bad) mov inc arpl dec lret cmc cli xchg lea lock cmp out enter add mov bound outsl mov dec lods xor xor and fnstsw and jo inc jbe (bad) pop cmp push fbstp loopne sub mov push negb pop fcoms je inc outsl je push popa int3 dec cld push add mov mov jns mov mov mov xor sub sub jle mov pop push out rolb xor outsb cmpl in add scas call mov mov add adc sub mov lret push sub fidivrl mov lret mov clc sub jle inc mov jp add sbb xlat ret test decl arpl dec sahf shl mov or jl lea mov mov push nop test loopne inc jle inc sub call xor push fdivrs (bad) or iret sbb or or (bad) in dec sbb in xor mov push lock imul add clc jne add add push je mov psrad sbb sub in adc add jle sub mov xchg decl outsl adc and sti mov pop cmpw add inc inc push add jmp in push dec mov push add mov mov mov add or pop mov cmpsb pusha mov fmuls dec push sbb cmp jecxz (bad) xor ja push xor cs push cmpl es and sub lcall dec push or (bad) mov push push lods in cmp jb mov inc mull and outsl adc push test mov js push (bad) jl pushf pop (bad) push mov xchg sbb pop test test mov xor les divl in aad in mov jg gs imul cmp or push les fucom or ret xor ret mov add out sahf dec outsb lock rclb lea jmp add add add nop fisubl mov (bad) rorb in inc mov xchg fwait add ss sub incb int3 dec enter jno mov xor loopne loopne mov shrb mov cmp xchg sbb ret inc inc jg xor lods push (bad) inc ljmp mov sbb outsb add movl call adc jo loopne pop inc std xchg inc int3 sub fcmovu add and mov or adc mov adc pop inc pusha das aas rorb fwait inc mov daa xor or outsb lds (bad) mov loopne test pop sbb bound lock add fildl lret inc adc in mov push lock adc dec xor in loopne cmp mov sub stc or lcall fstpl mov add jbe les test ret aaa push mov adc pop add jnp adc jno int shr les add js aam pop xor jbe cmpsb adc inc inc std imulb jmp sub jmp add ficom (bad) aam and push push aam loopne aad enter xchg or pop xchg push mov push rcll gs xor push jo add sub lcall sbb cmp jne jmp mov shlb or push pop adc roll int (bad) cli scas xchg out movl call mov xor lds lock pop cmpsl sbb aaa jae das add es fsubs sbb pop sub bound pushl (bad) add (bad) (bad) mov outsl cmp mov xorb cmp inc lock imul sub xor pusha push pop arpl push mov fiaddl ret adc jl mov sbb decl and imul push mov jo sub nop push adc mov lds arpl xor enter sbb xor mov addl cld shrl ds outsb shr pushl jne xchg (bad) iret inc in cs in loope xchg push outsb les and inc jl push in sbbb adc sbb jl inc push and push dec and push dec enter inc xor and xchg fmull sub adc push mov mov sbb push mov hlt popl jge mov fistp cwtl cmp je mov sbb mov lea fnstsw inc icebp xchg lock fdivrs cmpsb ret mov dec or and (bad) jo jbe push adc add rol pop push rcr pop mov or xor push adc mov add or loope,pn jl push je gs cli fmuls sub xor add or mov cmp mov and lock mov jmp mov fs pushw add fs xchg and xor jo or dec scas sbb in nop add inc lods add mov pop test push pop stos pusha fcoml (bad) jne mov inc inc sbb inc mov add or mov ret xchg dec lahf pushf push mov out (bad) adc lcall inc push push test sbb add mov push and lock inc imull adc and aas popa mov push or jp xchg inc test xor mov ja mov mov lea (bad) mov jge aam add (bad) mov jns pusha push mov (bad) pop xor cmp and testl or mov (bad) push movsl inc and hlt jle jmp ss inc inc jecxz sbb pushl rcrb lds divl jmp mov jae push pushl jno stc aaa out mov adc loopne rcrb (bad) xor mov sub jl mov jne jmp mov adc mov imul in es inc aam jbe orl cmp jne xchg inc mov pop out popa (bad) icebp mov clc push jge mov fdivrp or mov movl and ss add add mov mov sbb (bad) or cmp xor add ret sbb insb pusha test or rcll or subb sbb mov ja mov hlt (bad) jmp mov int3 xor mov push push pop push cmpsl jle sahf xchg cmp xor push fisubr mov clc fdivrl dec or adcb push sbb in ret mov mov movsb adc add xor adc jl add push js (bad) adc je ret push mov pushl mov mov mov or push adc out cli and xor stos ss dec pop xor or ljmp xorb xorb sarb jp sbb ret cli cltd pop inc jne mov xor sbb sarl mov ret dec sbb int3 (bad) gs add daa je sbb sub or push icebp popa movsl shlb adc add (bad) or mov in sbb xor inc add sub adc lret xor out sbbb mov push out pushl js push dec inc dec je jecxz jl jmp mov push jne push aam add rcrl sbb add in lret cli and js add testl jbe roll mov icebp outsl setbe sbb lret push add push push jp adc mov dec or call add cmp in adc mov jmp adc ret lcall mov pop lock cmc add push clc push sarb test push jae jbe and insl add bound or push push movsb mov or pop mov mov int3 rcll ss outsl fidivr (bad) lcall mov push push sub aaa movsl fdivrl mov sub add (bad) sbb ret mov test cmc pop dec cmp mov scas mov sub (bad) rol mov add pop inc add mov add and jne sbb (bad) out mov mov leave dec gs xor inc add loopne repz push mov push mov xchg inc mov adc jno xchg add ja sbb jnp js xor jmp xlat mov pop pop pop int lods inc jo rorb inc add sti adc xor sbb (bad) leave loop dec and rorb adc push push (bad) jbe adc aam and or rcl decb adcl pop pop je add (bad) mov or addb rorb add add push das sbb xor add shrl loope imul inc movsl add out add jle push sub loope andb push inc aam adc sub mov jo push (bad) mov add in adc adc push in inc sti fwait leave cmp xor shll int sbb aas push mov add sti mov push lods push xor mov nop xchg inc mov call gs adc adc pop loopne fsub nop out xor clc pop add in out push pop js sub pop in fstpt sbb cmp sbb pextrw call das mov pop loopne lods pop clc mov jge xchg pop or rcrb pop nop stos scas adc push push lock in pop mov mov inc inc ret add pop mov add add jo lret repz movsb das add dec stos mov jb imul xor adc dec enter push pop or stc je cmp enter inc stc loopne imul es add imul mov test or push fucom mov mov pop mov adc clc ret jge es push adc xor push sbb jne lods andl add lods adc mov popa mov sub incl (bad) movzwl cmp inc ds jmp movsb adc ficompl push loop (bad) jo loopne shrl (bad) call xchg fcmovnu push lods mov add mov or xor dec pop push dec movsl push jns push sbb sub push xchg dec movsl push adc mov add push push subl into shlb sahf add dec mov add (bad) lret adc sub inc ror cmp dec xlat or push or or or or push add push sub add add inc shll ret out adc or loope adc xchg sbb dec cmp ret addps lcall call add cmp call mov rcrb xchg imul mov or push push icebp xchg jno mov and addr16 je push cmp or push and andl orl sub sub pop xchg mov mov pop jmp sbb or inc lods and add or pop and push push into cmp push and nop fstpt mov daa jge insb add scas dec jp mov sub ds jne sbb fcoms xlat shlb xor movb test inc inc and int pop call mov sti ja add mov push in orb subl cmc fimull or mov je rolb (bad) cltd in dec in xchg lea sbb das xchg clc lea dec insb insl mov pop or sbb lcall repnz jb push jbe shrl shr or cltd in hlt or nop pushf sbb pop xchg test icebp bound das push add xor rorl enter lahf or or loope ss clc imul mov or into push lods and and mov out dec call mov xchg dec mov push or push dec fstl adc xor sbb les push cmp ja aaa mov fidivrl mov adc xchg push jne (bad) in call push push adc (bad) cltd sbb sbb ss clc mov aaa testb jbe dec xchg lods push cmp pop xor cmpsb loope cmp sti push and mov adc in pop inc sbb inc cltd rorb mov xchg aad les insl mov loopne mov jno test and and push push enter push jns mov jno enter inc mov add and and aaa sbb mov jmp jbe pop xor mov and fwait test dec pop jno jnp jl pop jecxz add loopne sbb add sbb xor mov repz test fldenv repnz and fistpll test cmp je push push sbb push fildl cmp data16 aas (bad) fcoms popa (bad) fdivl sbb in orb loopne mov movsl dec lahf sbb push call addr16 (bad) test cmp leave sbb jnp add adc mov movsl xchg pop jl inc adc or lds std sub sbb add xchg cwtl (bad) out add pop add fwait aad xor fwait push add je mov ja cs lock xchg or push add loop (bad) jne dec lods hlt ljmp rcl stc inc paddq mov or scas pop (bad) sarl push add xchg add (bad) dec mov push xchg inc sub and mov jne sbb (bad) hlt jae jne pop push loopne sbb clc add fistp sbb adc inc add cmp mov and leave mov in cmp std cmp test enter lahf add cmp ret xchg cltd sub or shrl mov inc xor mov fiadd cld in push sub jbe lods lods loope inc mov add aas xlat aas fcompl cmp cmp xchg stc mov cmp test cmp push sbb inc sti loope push cmp inc fistp sbb pop push daa push jb test mov popa mov inc cmp xor ficomp mov adc cmp adc rorb and xor push push lods adcl dec movsl and inc pusha fild or pushf xor repnz adc data16 and push sub push fldcw jl cmp mov lret pop jl loopne test out add jb mov fdivrs xchg ret inc pop pop mov pop lods ret dec lahf and mov add cmp iret cwtl ret stos adc fildl sbb push cmp call decb push cmp add inc cmp sti mov jae adc sub out or or add inc pusha mov mov adc jb leave loopne out or mov inc cmp mov inc je push mov sti out or inc nop divl push aas inc jmp jle nop pusha dec xchg aas add sbb jb add loope data16 adc imul mov jbe push sbb cli mov and adc sbb mov push cmp push decl mov fidiv push ret data16 loopne dec push pop shr pop push (bad) jmp cmpl jne test jmp push or lcall sub push adc push inc jg push imul push push push orl cmp mov or pusha sahf jl mov js and push jbe add mov mov mov sub rcrl int and mov fdivrl jne frstor xor push push cmp mov xchg and repz push inc rclb inc mov adc pop sub popa js shlb mov push adc mov push xchg popf idivb cmpsl push jmp jp mov fld xor nop enter adc out lds and cwtl jno pusha (bad) or pop sub xchg push fidivr sbb ret lret or push (bad) sbb sub rorl int3 adc shlb rolb adc (bad) idivl push (bad) pop out mov sbb adc cmp jne mov jnp daa test loope inc jp movsl lods inc push push push clc inc adc mov or or lcall xorl sub ret stc rcrb mov add fimull repz jb sbb and add es ret push add jl add arpl adc fs push aas push aaa (bad) adc xchg pop daa push je mov adc cmp (bad) inc aad xor add xchg in adc push push add arpl mov adc sbb movsb xchg test jnp sub outsb mov aas jo icebp sbb fwait (bad) mov sbbb imul xchg mov mov mov push mov push mov test inc hlt (bad) xchg adc adc dec push jb lods add xchg (bad) aas cwtl inc cmpsl adc leave cmp imul push mov mov add cld int inc icebp xor jl adc stos pop adc and vmread lock rcr add or inc js xchg or xchg xor fwait xchg cmp pop push lea into jo xchg xchg cmp lret xor mov push cmp stos pushf and add lods outsb add and mov xchg mov add mov or ret aaa or push mov inc xor add ss xor cmp inc push aas sub (bad) lds rorl mov xchg pop (bad) sub push cmp pop inc jns call pop inc lock fdivs mov pop dec sub mov pushf pop xchg pop push enter popf mov inc xor sbb (bad) cmp je mov cmp je gs adc pop push adc add in (bad) fcomip jno push neg sbb push and mov mov inc adc ret sub sahf or in ret add mov add mov je inc sbb insb dec and leave je jl adc sbb push scas in push sbb pop je xor push push cmp ficom sbb fldcw or fiadd pop shlb testb jae clts mov out sbb adc mov mov cmp push pop pop pop test or shl cmpb jle jne sbb lock mov outsb add inc cmp and mov jns shrl mov push sub mov jge pusha ficomp out (bad) neg movl jl stc movq mov and loopne dec adc ficompl rclb rolb pop mov (bad) push mov cmp mov lahf push cmp jne mov xor ficom into add jb pop push push cmp popa loopne mov ss ja mov push push push mov arpl xchg adc (bad) (bad) xor mov add push scas push jp,pt (bad) push push mov mov jle xchg ret dec mov xor mov or xchg dec shl lea jp xor mov and insb add inc mov mov mov mov imul and inc addb push (bad) movl rol push ficomp pop mov mov (bad) notb shr rorl jbe dec dec lods movsl inc mov (bad) cld jmp push sbb out fcmovu fwait add shr mov mov mov xchg xor daa es aaa add shl add div test je movl push push mov cmpsb mov js shll jge push pop dec mov mov push aad dec js movsb mov loopne std jne mov mov inc add rorb sahf inc add dec nop out xchg mov pop and adc or or cmpsb mov (bad) leave cs rcr xchg mov lahf sarl push leave hlt add imul push dec inc sub and dec mov loop mov dec and pop or test je imul neg jbe dec pusha mov gs push cmp lret fadds add leave inc mov pushf cmp inc call adc mov sbb stos fadd add outsl push dec popl mov sub mov jns add pushf pusha cwtl sbb sub dec adc pop or or xor xor ss dec pop mov jge mov inc or mov jnp add inc fcmovbe or add lcall pop mov mov jns cs ljmp mov das ret cmp jmp and or mov push push mov and adc pop outsl xor push cmp (bad) frstpm(287 push clc hlt rorl add add js loope xor xor or sti sub sbb inc add repnz push sub push inc and push pop add cmpsl dec inc or sub fidivrl mov mov inc mov or cmp pop sub jne cmp jl or jg ljmp test mov xor lcall adc adc call xchg lret add idivb cld mov (bad) cld (bad) outsl outsb sbb mov shl mov hlt and je,pt push pop lds outsb dec cmp call mov movsb inc sub mov sbb mov pusha dec mov loope ljmp (bad) push rcll xor sub pop fcmovnb popa pusha dec inc push (bad) hlt pop cmp cmp push xchg and xchg sbb jo adc pushf sbb dec push xor mov hlt xor aas cmp push hlt jle (bad) out movb push lea add mov mov loope insb orb icebp xchg mov inc mov mov pop dec pop and cli pop leave cmp adc je mov cmp je cmp je or push lret push push sbb add jbe xchg mov pop popa fisttpl push adc loopne jge sbb adc imul inc and add xor push xor cs mull repnz and or rol dec test jecxz rcrl sbb mov clc jb add jnp in jl popf lea pop sbb jo lret dec xchg adcl cmp mov cmp dec adc or add shrl hlt mov pop mov mov xchg mov add jl or add sub dec shl add mov pop shl or cmp leave adc mov fcmovb loopne jg sub add push aad dec dec shl fisubrl push xor ljmp sub ljmp gs (bad) sbb movl loopne push sub mov dec push ret or leave xchg mov jne cmp adc and jp movsl dec fildl loope dec add xor mov nop push sbb shrb jo add mov xchg sbbl (bad) cmp mov inc jmp cmc cwtl or add sub into cltd insb lock add cmp jne mov mov and jl cmp adc jle push faddl add rorl pop inc ret dec add and xor xchg rep or inc repz and arpl add shr mov adc and inc mov js leave mov push push cmpsl xor pop jecxz xchg and jbe pop loopne js jmp mov cmpsb adc pop pop dec or push push mov jl or inc int adc fcomps or adc out or fwait daa cmp push mov push jbe lods test gs les jbe lret mov das inc xchg movsl cmp loope rep sbb in (bad) jo cli mov jno add mov mov js jbe lcall mov sub pop cmp lea push mov xchg add adc sub jno jg inc adc mov lahf jno insl or sub push inc cmp mov jo jl push sub cmp popa aam out mov jno fisubrl outsb push xor (bad) outsb or and pop ret pop dec pushf xor mov mov shl mov adc push mov (bad) ss clc and or fsts imul push inc sbb mov repnz mov and dec mov xor in mov fs lcall pusha add mov pop pop js je jo pop pop pop ss sbb mov das pusha add cmp lods fcomps (bad) rorl ja rorl fdivrl aad add mov or dec add xlat das xor js adc jb sub mov or pop dec mov jl cmp (bad) cmc pop dec fnsave sarl in mov shrl enter test int pop adc sub sub cmpsl mov jb inc xchg insl and push push outsb (bad) adcl push or les push push pop cmp (bad) mov ret rclb inc nop sub hlt loop jmp xor lds call sbbb and jp ret cmpsb das push fstps mov xor ret mov dec insb and jne addl mov xor pusha cmp mov cltd (bad) (bad) sti and mov cli sbb (bad) jb mov mov mov lea mov mov xchg enter mov sub mov dec div out jae mov dec cmp lds sbbl in push cmpsb mov cmp jb fnstenv call ds add cli dec add orl lcall into add sbb sub ja adc mov mov incb jb outsb fisttp push push inc dec push lea mov incb loopne fucomip mov dec add shrl and and mov fiadd out (bad) pusha mov mov and cli adc andb cmp rcr out bswap sub sub sbb dec adc je mov rolb mov add sarb lret cmp or push mov sbb lods lret inc or mov inc push inc xor jo push cmpsb push pop mov and daa jmp les inc xrelease sbb pop push inc dec inc add push arpl or jle pop hlt xchg cmp (bad) hlt jnp,pt fldt cmp sub cmp ret push fs cmp outsb sbb shlb mov ja mov add push imul cld (bad) dec (bad) js arpl cmpsb mov aam enter mov mov mov nop mov add imul repnz icebp adc pop add xchg push (bad) push incl int3 cmp adc aas mov mov push cld inc into jmp and call pop push push std es orb xchg xor leave ds xor or bound inc push sti sub cmp mov test jb ret pop dec mov inc movzbl or push js add sahf roll xchg xchg jl (bad) nop xchg pushf push xchg jb shl dec inc jbe adcl int3 fwait jne sbb mov addb cmpb cmp mov dec imul push dec and and loopne outsb or ret mov or (bad) mov inc jo in stos mov sbb jl jecxz and stc sub or lahf sub cmp push inc dec cmp add push (bad) loop mov idiv xor add aam nop dec xor rcll xor adc mov je sub xorl data16 mov lock clc add incb ret sbb dec clc rcrb sbb (bad) pop popf test jo ss lahf adc push mov inc je push js add sub xchg add dec sahf xchg cmpb sub push sub add (bad) sbb or lea lret sub inc test inc xchg sarb ljmp loopne adc insb outsb jbe or and pop add and mov push jle add cmp sbbl or lcall xchg leave in lea inc add cmp fwait roll mov inc and jne adc xor pop push or add lret jb xchg mov xchg adc sub mov cmp jle jne push jl mov in ljmp or (bad) mov mov jb js jg dec add xor sbb lock insl add pop test fdivrl call xchg add loop loopne pop js adc mov adc sbb mov jo ret lcall add rclb pop adc enter fisubl test into inc pop or (bad) mov je js (bad) enter add sbb cmp or add lock push (bad) out mov push jo test imul xchg add cmc cmp insb mov mov std xor stos add dec in das clc cmp xor or sbb jb add add test popa lea inc (bad) mov or lock ss sar adc push xchg or xor rolb add mov inc shlb sbb nop les pop mov push rol loope xor fmul push aaa lret xchg mov xor push lock movsb js mov shlb mov add push add push cmp add push adc push stc adc les jne daa mov and inc dec mov push adc add xchg dec xor popf (bad) imulb je sahf push daa dec inc (bad) dec movsb or ds add mov inc add and push decl mov xor pop fcoms ret and test jo xor and push pop ret aas push pop pop imul nop mov je add add fisubrl sub lcall push mov push sbb mov (bad) jle loopne rolb and pop inc cmp and adc clc movsb adc aam test xor push aaa adc push (bad) in aam add movsl sbbb push jmp or jne sarl pop sub push push and rclb fisttpl repnz push push sub push push cmp inc inc insb adc int3 jb pusha ret out push sarb push jbe or je push in xor add cmc dec cmp push inc dec jno mov stos sbb inc xor push cmp inc jae sub dec jmp sub mov mov or cmp rorl add test test or aam stos add test mov jl add pop jns mov rcrb fimul mov shl add ds mov bound jb mov and mov push cld enter loope push cmp (bad) fistpll ljmp add int pop shr rorl sub jg les push push (bad) push clc shlb data16 xor cmp ffreep push gs pushf cs inc cmp out adc push sbb out cmp cmp mov test hlt mov mov xor jmp jo aad leave xchg and insb lock loop cli mov push rorb push out inc dec ret jb push xchg rol push lods ljmp fidivl out cmp out add inc sbb cwtl xchg sub test add mov push in mov fistpll test cmp pop mov and mov (bad) mov or pop sub dec xchg add es in sub jne fs dec push push push mov pop test push xor int3 push jae and dec jno push dec hlt dec lret dec mov cmp enter (bad) ljmp push sub push adc inc adc jo rorb fidivr fmuls (bad) repnz mov add mov mov fcmovnu sub sub orb inc add movsb sbb push sub sub popf cmp xchg sbb push sbb test (bad) sub mov pop sbb xor aas dec cmp dec or inc push rolb sbb aas fidivrl mov cmp ljmp mul or cli mov add add cli pop clc or add push popl rolb jmp mov push movl (bad) mov add or mov add cmp jae test xlat popa adc cmpsl aad push or sbb pop cmp sub inc xchg jge mov mov mov insb (bad) and cmp int3 inc popa xchg sub or fbstp pusha mov and jbe jnp (bad) bound inc outsb inc fisubrl sbb dec jae dec pop or push push movl loopne mov adc sub sar (bad) add or ret rcrb data16 js cmp mov jae enter call add cmp stc push mov push jo dec jnp adc inc insb rorl push jb lcall out ret rorb aam inc stos call cs push mov sub jp out sbb test lock inc jo pop cli mov fwait je lea sub popf mov lret incl rorb jmp sub shr fdivrl mov lret mov mov sbb fadds les aas enter call mov ret cli add jp loope in xchg add adc or ret mov (bad) cld sub fadd insl pop rolb (bad) cld out jge jne adc adc (bad) notl dec and push push mov dec inc push adc xor inc icebp cmp mov xchg loope push add xor addr16 inc or jl out aaa cld or insl add add or jo dec xchg mov add push jle cmpsl les mov fildll push fs or iret mov lock shlb push push and ret out int3 mov push xorps push rorb cmp pop idivb xor mov inc enter inc xor cmp or mov sub roll push mov iret mov sub or lret movsb jmp mov adcl sbb imul dec adc popa dec mov mov push ja push and sbb add mov mov xchg ficomp fsub popf pop rcrl int3 dec cmp push sub pop add and dec xchg pushf push outsb in xor shrb (bad) lcall test sub roll je or or aam inc sbb add push mov mov cmpsl lock and jbe (bad) or or mov add inc mov in loop jo inc lea sti inc add jo sub add mov push xor in mov push test into adc ljmp (bad) add movsb push sti push jo fucom cld (bad) xor push push addr16 push popa push inc lds cmpsl xchg sahf cwtl xchg (bad) mov sbbl test push test or xchg loopne dec mov push push mov jb dec ror sub test arpl mov push inc inc xchg sarb outsl dec movl jge pop (bad) dec and sbb cld jl aaa fcoms sub push mov adc sbb adc dec or adc push jl mov test push push iret push arpl ja add or jmp inc and pop pop cltd rorl fcoml or cmp je pop pop jo jl or mov js,pn int aad ds mov xchg fs int push push int rorb insl cs add add lds pusha add mov sbb pop cmp sbb push cmpsb inc hlt faddl rdtsc in (bad) jns xchg mov movsb aam add cmp in fsubs fucomi fist xchg push int3 out or push test fmull or mov add (bad) push cmp (bad) ja inc sub mov or inc incl std and rcr push cwtl sbb mov popf out or pop scas pop pop push (bad) sbb xchg push cmp mov mov jb mov xor mov call icebp das hlt aad fcmovb loop add fs fs mov icebp add repnz inc push sbb hlt cmc inc push sbb clc push sbb cli sti cld sbb std (bad) inc sbbb push dec enter or sub and es daa loope jne cwtl mov out or mov mul mov ja ja push or mov lea and inc pusha add mov push mov inc loope loope insb or mov out lahf ljmp or mov or lahf sub leave movl jnp adc and mov lock pop mov gs sub or bound scas in jl aas inc rolb ret mov push cltd rorl add jne sbb nop cwtl sbb adc mov or addr16 sahf (bad) mov ret les cmp in bound (bad) repnz cmp or ja jo mov push mov dec mov pop xlat mulb inc mov or dec sub mov adc sub pop shr mov or pop pop cmp shl mov inc xchg sbb add sbb in in lea sub mov push adc cmc sub scas or dec sbb inc mov or rorl mov push das add xchg sbb daa mov inc adc adc jecxz into mov add sti pop sahf sub cmp mov push imul shl and inc lock push mov sbb xor and push mov inc push lock and push sbb jb add sbb in fsubl mov (bad) mov add cmp jge pop push add movl daa and pop adc adc daa xor push aam push push cmpb push lahf out add jns lea fidivr fmull or lods test cmp or ja pop pop (bad) shr adc lret pusha aaa test hlt dec add cld jge cmp ja cmp push push pusha outsl mov mov enter in loope nop lea jle mov shl addr16 push cmp push adc jle cwtl nop push pop xchg adc imul bound repz pop testl adc cmp push push insb adc shl je fistpll mov push xor mov mov in sahf pop sbb (bad) push adc lret cmpsl ret push sbb cmpsl loop cmpsl mov cli jo in push and cmovno loopne (bad) sti loopne lea push xchg push push sbb icebp test mov aam in insb mov adc sahf or dec loopne lret sbb test rolb and shll and cli cld call dec or xlat in or xor iret inc (bad) inc mov sbb loope jmp jmp movw enter fadd jl imul pop add or mov fwait addb add lods dec mov repnz dec addl rcrl cmp sbb cmpxchg push lcall jge incl (bad) mov sar cmp jl jl (bad) outsl jne adc jge psubusw dec and push cmp inc pop push rorl mov and inc and push (bad) xchg sbb scas sub cwtl dec mov mov mov lock test adc scas add or movsl lahf xor mov cs popa mov lahf shr dec mov jne shrb jge mov scas add lahf add inc fmull add les xor dec roll jge pop (bad) pop pop dec dec mov xor jb jno xor (bad) xor push add sub call add mov mov push lods mov lea inc push std inc jp adc (bad) popf ja in xchg ss mov repz mov mov sbb das decb adc adc sub or sub inc sub repnz jne sub clc dec sub push shl mov repz or jp and mov xor pop nop mov lock cmp or lds (bad) push xlat inc cwtl dec rclb push pop mov or mov mov add push adc into (bad) stc pushf sub sbb mov inc cmp mov cmp test mov lock mov xchg rolb inc int adc jl (bad) (bad) out fdivrp inc cmp jle fwait lds or mov ds jg and inc mov push sub sub sbb mov and push imul add push popf enter inc lea out in aam mov dec ret arpl out and ret push or ror and test xlat cmpsl xor sarb psrlw mov jmp sub sbb testb push ss xchg (bad) push add push out add push std xlat lea cmp inc add js jnp xor insl and push call popa out out mov cmp (bad) mov out sub sbb pop or mov test mov mov test dec mov jne sbb adc pop cld and pop (bad) daa enter push sub push mov pop pusha loop mov (bad) imull push movb jmp ret jl sbb dec inc sub js mov sbb push dec or stos daa xor inc inc push pop sbb (bad) mov sbb dec jne pop pop sbb push adc inc lea adc fisttp mov js pop cmp inc and mov mov jl nop inc (bad) bound pop inc jne dec sbb mov mov adc roll jo mov lret and dec mov mov mov shr out orl mov test data16 aad cwtl cmp mov push push inc push jl,pn loop push add cli loop,pt (bad) inc je cmp jge add scas jmp call cmp je mov daa push xorl or mov pop adc out leave jne add push push pop dec shll push push subl repz adc adc jl pop mov aas mov add or add lods ret or jle and mov sbb mov inc sbb and pop daa cmpsb sub sbb inc and adc add adc or cld jle add sub mov fs add xor lea xchg jle movsl xor mov xor and adcb and xchg test in xchg mov pop pop add pop mov popf adcb dec and jl xchg mov push sbb pop inc xor pop aas aad xchg sub movsb rol mov ret mov lock sub imul jns push push add jmp cwtl inc xchg pop cmp xor push push cmp jge je mov (bad) dec mov mov dec sbb (bad) cmp jle sete rorb mov movsb js lods js pop dec aaa inc cwtl sub mov and push in mov mov adc mov dec inc enter roll sbb or aaa dec cmp add push out mov cmp adc add mov inc adc inc or push cmp test sub push jle loopne out test dec inc in ja,pt pusha imul icebp out cmpsb push jmp daa xchg cmp jg loope jg mov in mov and add in sub stos mov xchg jbe cmpsb ret and xor (bad) sahf fstpt jne mov sbb push (bad) mov adc outsb and mov cli xlat add mov add nop pushw push xor cmp add rcl mov inc fmuls mov sbb sbb inc fmuls xor sarl int3 mov arpl add jo loop imul into jle xchg je test shl insb sbb stc pop nop push adc pop inc nop loope or nop lret dec cmp loope mov jmp (bad) xchg add or gs sub fisttpl mov data16 ret loopne mov int jno test add sbb aad lret cmp mov push inc push fwait lea mov adc sub (bad) or xchg out mov xchg jmp loope lods pop inc dec rclb push loopne xlat xor mov ljmp jnp mov mov shll dec mov sub cmp adc push pop sbb hlt add cmpsl sub decl ljmp mov fidivr jmp mov shr sbb push das or repnz mov mov rorb cmc sub ds push popf xchg pop (bad) mov cmp insl (bad) jne lock mov movsb jmp mov daa repnz pop mov shll pop enter (bad) add sub add mov cltd xchg or add ss nop mov loope and inc xchg xacquire add dec or mov add add and pop adc add pop xor jno cmp (bad) dec jne push xor lcall cmp mov jge mov pushl xorl rorl out add xlat pop setbe mov xor sbbb mov xchg icebp and or lahf mov shl dec lret shr pop mov add add push pop jo mov xor movsl jmp test xor insb push lret add pushf or arpl sar lahf push sti or mov aas xchg ja orl or jle aaa inc dec add dec xor sbbl push inc push jp dec sbb movl mov inc fist call rolb shl jbe nop lret xchg not cmp mov loopne add bound inc push cwtl pop lea add into lods leave popf mov inc cmp out add push inc dec push ret fstpt adc and and mov mov xor mov add loopne mov jb or int3 (bad) mov inc add sub xor mov and jecxz xchg fimull das mov xor and pop js inc xor mov daa jno push cld cli or mov mov push push aad xor jle inc xchg fiaddl push pushf add or cltd sub stos cmpb aam mov dec or xor stos das add inc sbb xchg push pop pop sbb ret leave adcb sbb js mov fmuls decl push and inc and jle inc and aas dec xor pop pop adc sbb dec pop jo js add jp push mov or shlb or mov jmp push inc or fdivs add fldt out jl dec mov pop push mov lods ret or mov xlat dec test pop inc inc jnp jb or in (bad) or pop mov add xor lods dec dec loopne mov ja out shrl jge fisubr aam cmp sub adc pop test je orl dec and dec add dec inc (bad) dec dec inc inc jne jne fildl rclb or xchg out shrb test add mov inc leave mov add xor xlat iret jmp sar add sbb add and fldcw and dec xor pusha in add xchg cld lock mov test or test pop add fisttp adc inc sub iret call and mov add sbb dec test or ds jb xor sbb jo xor add cmp sbb sti inc sub sbb jne jl mov dec adc js dec push lret adc ret push or int3 mov jo adc jo fs ret inc and ret out adc mov in mov xchg outsl cmpsb add sbb mov mov and jnp or ja mov cmp ja xor sbb add pusha add cltd cmp mov fnstcw add adc mov (bad) mov test or fsubrs dec jmp sub rolb je inc push test pusha int lret ss test es das mov jno lret jno sub ret test cmpl loopne bswap jle test push add cltd das push mov xchg in cmpsl inc mov cmp push jne (bad) add sub mov rorl aaa mov dec nop fnstcw gs int cmpsb nop (bad) pop xchg pop or fnstcw pop adc mov jnp nop xor outsb dec inc xor inc (bad) out add jmp incl flds inc add fisubr int add add add (bad) cmp push pop rcr and and scas lock push mov push push fmuls sbb fmuls (bad) test add add xchg push popa popf lea and push lahf adc cwtl or clc fs das xchg push jb std fcoms push push mov iret movb cmp nop pop pop cwtl cmp je cmpl in pminsw or push movb dec inc rorb or mov jns cmp push pop out sahf out pusha fs sahf jo js mov or mov add push add lea dec mov jne cmp jne cli sub xchg sbb pop cmp inc xchg sub or jns xchg push mov mov mov cmp int3 jbe dec xchg xchg push mov in loopne mov cmp jne dec sub cmp jne cmp fistpl ljmp ljmp sub out jae lea sub js cmpsb ret add mov jb lea or rcr or push sub lret pop das or mov add (bad) cwtl out pop fs sbb je xor add xchg movsl xchg lret das jne mov fidivr pusha sub and mov (bad) mov xchg mov inc mov inc in push lcall cmp ss cmp jb cmp lret mov loopne sub xchg push and adc movsb fsubl inc dec ss aam xor cmp (bad) cltd add lea mov mov fsts mov dec mov les xchg sub and sub jnp mov adc inc ss fimul mov mov pop jbe fldl int ret jecxz cmpsb xchg dec cmp test sbb and push push and jmp iret ljmp std sub pop les (bad) cld sbb adc cld fstpl cli inc pop sub and in mov mov jmp rcl add dec int3 mov add pop or jno add mov rorb (bad) std in dec mov je xor lock sub jl pop sti xchg push inc mov xor dec ret mov sub sarl mov cmp or pop cmpsb mov adc (bad) cmc or mov movsb sbb rorl shrb sbb pop ss pop add dec ss aas hlt dec add cltd sbb and add push mov sub mov sbb push cmp xchg cmp xor inc rolb movsb daa xor (bad) cs push inc xorl jae cs loop or rcll mov lea inc in jg (bad) jb test xor shr push jne cmp xchg jne and mov das lea mov je in sub push jo jnp clc push or jne sti push inc jnp (bad) sub add push cmp clc lcall inc mov into (bad) mov dec lock gs adc in inc xchg ret mov outsb inc sub push push jb mov and add test add sbb push jb push push dec pop daa mov mov push push shlb add movb (bad) call jmp jae sub jo nop cwtl faddl mov push in mov test push xchg jne dec mov add aad pop jo push xchg push jmp sub call inc sbb and repnz call jne sbb inc cs push sahf cmp and push push push je xor fs push push inc push mov add xor add mov (bad) mov movl or (bad) adc xor aas inc cli add inc or std fsubr sbb mov mov sub adc ret clc mov je sub out mov adc andb push adc lds aad dec inc pop push push out inc mov popa or rorb push enter pop (bad) sub cmp int imull fwait mov lret lds dec sub std sbb mov inc mov jo add add inc sub add test hlt pop fs lcall (bad) add mov adc inc loope ror mov outsb and jo xor jbe cmp adc repnz and cmpsb inc cli push and clc mov jns stos inc sbb incb sub dec outsl (bad) mov cmpsb adc sub iret nop add ja imul jae cmp ss pop rolb enter rorb (bad) inc lds cld cmp loope insb push test das jmp sbb lea call mov mov shr sub fistp test jge ret adc or in mov insb add jno cld mov dec je and sub imul add pop out ljmp mov and mov cmp sub popf mov jns (bad) dec pop es jmp push aad inc cmp pushl mov sbb ret or ljmp cmp mov icebp xor and je xchg bnd mov fistpl jmp cmc sbb cli mov out cmp std dec jbe sub mov mov inc inc dec jne xchg pop jbe pop dec rcr ja jmp sbb sub cmp (bad) sbb or mov cmp pop sarb mov cmp or push ljmp inc push push stos mov push cmp rorl inc push call pusha (bad) (bad) fsubrl je mov mov jbe cmp and fs loopne add jmp lea (bad) test push push outsl xchg cmc sbb int cs mov jnp mov mov sub or adc and add mov in xchg scas lds sub out cmc mov imul mov mov adc call int xor test aaa or out shll (bad) jbe cmp add cmpl addb pop and out xor mov dec pop pop push push pop lret mull pop cmp jne (bad) ja add jmp push adc mov mov or loopne ja pop loopne cmpsb push jl jle aas push call push enter jmp rorl inc add scas adc (bad) mov (bad) dec sarl add cmpsb pop sub pop xchg inc xor cmp mov repz xchg cmp xor and into repz adc mov in sahf mov mov call out lock hlt fdivr jns clc clc cld cld lea lock push es (bad) push cmp iret js and leave sub xor sti and and daa mov xor jl cld or add adc adc fbld stc sub jnp gs adc nop add sub push stc ror rcr add out jnp push mov dec inc push imul fsubr push or push out mov ss lods push lahf out sahf mov (bad) int3 aam adc aaa sbb sbb sbb iret repz adc adc or adc repz or aaa repz addr16 inc add fiadd sbb shrl sub outsb push and pop inc add inc mov daa adc (bad) stos (bad) sbb iret add or and mov mov sub lea fldl push cmp cmp pmaddwd dec mov movb jmp loopne adc add repnz test pop aam inc push push clc test sti sub dec outsl or mov mov (bad) mov push xor xchg pop jmp mov push scas and scas push push dec xchg mov je clc jne push pop test clc ss or push cld or aas cmp js enter or inc out in adc xchg push loop pop insb in jle ss xor ret mov sarb push pop inc adc xchg and mov or push add out outsb add mov or cmpb aas hlt sbb push dec push hlt sbb sahf out push ror sarb test cmp or push sbb push adc aas nop sbb sbb mov enter and nop sbb fldl inc or push push pop add iret rep je sbb mull add or lahf mov fld pop mov lods mov jbe xchg mov dec data16 jg lds adc cld movl ret sub out adc pop add es jb mov fwait cmp lcall inc in ss push xor dec mov lods addr16 movl or push sti mov movl adc push mov push outsb mov dec repnz daa clc inc push inc sbb jae push out mov imul xor ret add sub jno or mov test mov mov inc dec inc mov outsb sbb test inc movb das xchg addl inc push js mov inc xchg mov jne dec inc testl mov adc cltd notb mov aas or movsl fistpll inc jo jne subl les jmp mov mov add fdivrs jo add push pop movsl push xchg dec xchg js (bad) mov inc cmp xchg (bad) neg jae mov cmpl out fcmovnb fild push mov or mov test out and or or cmp mov std mov daa mov paddq mov sarl daa xchg loopew and or adc fnstsw sbb movb pop jmp cmp (bad) cmp or add add push jo hlt dec push clc push js cld push aam ja mov sahf addb sbb and push xchg jmp or stc stos gs or dec dec je adc mov je inc lea sub sbb adc rorl lds idivb sbb sti adc mov or push xchg cmp or sbb inc sbb xchg lock pushf jle outsb push and cmp addl push add js jmp mov add lods je sub mov xchg jmp sbb jmp lret xor mov push rep mov dec ljmp push and aam pop dec lret call lods inc pop dec or cwtl dec das pop sbb mov push push mov push adc mov cmp je enter aaa add sub push fistpl xor subb mov add jo push pop add nop addr16 add daa or jns add adc sub cs dec sub cli cmp je pop add fwait pop enter add cmpb push xchg in (bad) xor pop pop jb add cs or or fwait jb mov or and enter pop or cmp pop loop or pusha out rorb pop or mov mov push xor cmp ja lcall adc xchg add push pop adc fwait sub cmpb adc seto out adc mov ret add ds adc adc adc jb mov adc xor push push pop mov pop xor jb fisub fwait or seto sbb call add (bad) sbb pop mov add mov or iret stos cli jge sbb enter inc pop jmp inc lock pop jne add add sub mov rolb addl inc iret cmp xchg pop mov mov sub pop mov xchg mov sti cmp je lcall rol and mov repnz aad in in enter out fwait sbb cmp out jb punpcklbw push call dec insl mov call dec sbb outsl inc cmp sub ljmp jmp sbb pusha xorl cltd mov mov out xor cmp jge lcall lock inc lock xor jne add inc icebp jae addb repz leave std hlt hlt rcrl cmp or fwait mov push fdiv inc jg testb negl xor and clc clc cmp clc cltd adc inc stc and in lock cli cli inc lock sti sti sbb stos cld cld cld je cld push scas rol pcmpeqd mov jns sub std sbb (bad) loopne pmulhuw je mov jmp inc rorb or sub add inc lahf shl cltd dec insb in push lock jo jecxz adc jecxz jecxz std sti enter in inc faddl push stos icebp inc mov stc daa xchg sti pop insb nop (bad) out out cltd outsb xchg inc pop and add (bad) pusha and sub sbb pop jmp jmp (bad) mov in add and cli sbb js out out mov cltd push lock and das cli push cli dec in rcrl psubusb repz sar jb pop (bad) push stc cltd and enter lret jae neg push jo imul clc add inc repnz out clc rclb pop lret sti sbb pusha ret cmp pop xchg test or inc pusha sbb jge add cmp push inc test cmc cli and test cld sub mov fnstsw mov pop (bad) testl popa dec push jo mov out scas xchg add out (bad) out nop pop leave and and push cmp sbb jo dec ljmp inc inc mov add lds negb insb out out or add jno testb and pop add jb pusha and nop cmpsb repnz mov cmp cmc inc xchg push jb sub cmc aad or mov jo and fwait pop add pop jl adc jo hlt inc pop jo cmp pop mov or cmp push nop hlt inc jne inc dec jno push hlt sbb das dec pushw (bad) data16 jne mov adc push (bad) ljmp adc sbb push inc cmc ds repz cmp jp loop scas repz jns repz inc push jo push in test repz repz xlat push push cmp push dec adc pop or jmp rorl orl cmpl in repz je add repnz add pusha and mov cmpsb jb sbb jns rolb icebp mov icebp test icebp pop sub or cmc cmc cmp pop add cmc jecxz inc fs inc ret adc fstpl pop or stc repz cmp (bad) lock push lock cmpl mov test ss adc add in mov out movsl ret mov ds add enter add stos inc sub and add and loopne cs jo adc mov add jmp (bad) ja test and ljmp jl pop inc or sti sbb sbb inc add sub insb mov popa pop das xor push pushf es scas fstps test jns imul push jge push pop push imul xor out and sub sub xor repz adc push aas dec insb sahf out shlb jp mov jnp push and add add test xchg pop add dec lds insb add add xor (bad) cmpw scas inc pop pop jne mov mov push inc cmp ss cmp (bad) pop cmpl (bad) mov aaa or cld adc xchg shr ret push pop mov popf or mov nop or repnz add js jae mov push push rcll or enter push mov aas cld jo negb daa xor dec push sarb inc mov aam dec arpl movsb fidiv idivb mov and push mov mov or cmp push rcrl or mov xchg loopne in jle mov cmp hlt or add and push mov and cmp psubw adc mov mov mov xor int3 loopne or stc into decb push test dec or and pop or and out cld and pop sti and pop push inc dec cld test xchg js add lret or and mov inc cmp mov loopne ret mov xor or nop fsubs xor fdivrs dec sahf ret call pusha pop orl test jmp pop push jl in mov push or and shrb inc out jbe push pop adc mov inc or (bad) jne adc in push fs aas dec adc add pop push xchg xchg mov add stos add (bad) daa or ja and dec sub add add aas add lock push cmp push or lea adc ret pusha mov or and mov imul add sahf in push add mov (bad) or sub pop shrl lods push ret push out stos adc add call subl cmpsl out xorl dec icebp sahf loope cmp xor mov loope ret dec or push adc (bad) push orl in ffree daa inc lahf sbb cld aas mov aad mov js sbb sbb push jne inc cmp and insl adc or test das pop in mov inc lret jge into aaa (bad) pop xchg sbb jmp insl aam sbb cwtl push std ficomp pop and xchg pop mov pop sbb rorb cltd fdivl cmp jge or ret jmp (bad) repz mov movq push dec adc push and sti stc jl jg push dec and push jg outsl inc or mov jbe jle xor jg cmp jg jo mov mov or mov push pop lret sub mov xor adc cltd push dec fsubl aam xor sub prefetch or and xor sub or or or mov and les push push add ret sub xchg lcall or shrl (bad) je call sub (bad) jne out jmp (bad) lock rep push jmp movb sbb (bad) dec in out jle sbb xor add jp insl mov sub add rol mov sbb xor push cmpsl cli sbb (bad) and sar dec jmp adc adc sub mov xorl pop jle ret mov call jg bound add cmp inc adc jl sbb lock push push rcll ljmp add cmp jb (bad) xor fsts shrb and push test test cmpsb mov xor sti inc call and pop push cmp popa and (bad) jbe add mov cmp jmp push out leave ret shrb scas inc sbb or pop xor cmp push add mov and cld rcll leave push movsb xor add in call pop mov xchg pop mov inc mov sub (bad) push mov mov daa or mov or jp push test sbb inc sub inc and mov rol sub popf xchg push dec sbb xchg fwait cmpl push (bad) neg mov or add jecxz mov adc adc mov insb jmp fidivr mov pushl cmp xchg jae pop das aad sub iret xor sub inc sbb push scas outsl dec xchg mov push mov or cmp or push mov jo mov sub dec outsb xlat aas add dec add fsubr or inc daa push or and in ss or lret jecxz das push (bad) sbb or inc inc lahf dec call jno jbe push in sbb icebp inc push in dec pop cmp cmp push cltd jle add lods dec jae xor cmc pop push mov rorl dec fnstsw push jle jbe push inc or ljmp jle mov or insb out scas aaa inc push mov aas adc ss cmp or inc pop or inc je mov xchg or cmp or js xchg push js push and mov outsl dec sbb lret cmp inc push lcall mov ss cmp mov popf cmp mov add jp cmc ds ja push mov inc in pop push mov fidivl sub sbbl push cmpsb jge xor cmp jo cmpsl test insb lahf stos mov xchg mov add addl dec mov orl ss pop iret pop rolb push jo and mov pop jne cmp push mulb bound jbe sub inc fs cmp out test jg les rol orl jae inc mov pop sbb fidiv orb xchg hlt cmp cmp mov cmpsb xor fist les push cmpl jg jg mov jae sub jmp jmp mov xor jo fisubr jne push push imul and adc test jno sub test je loop les cmp push movsb outsl sub mov add clc xchg (bad) xor mov sbb es adc pop jp jo mov (bad) nop jbe jb mov fs adc xchg mov push rorl jmp push push cmp jne xchg push add push pop pusha pusha and in pop xor pop push fimull insl movb inc cmp je mov and enter dec sub add pop push add or mov (bad) hlt inc test ljmp or andl jge adc mov movsb testb inc js jae push jb rcrb mov bound push pushf add aad js sbb mov add mov nop xchg (bad) sbb dec mov push pop mov xor sbb pop xchg dec inc jo dec in es icebp aam adc ss push mov ds mov clc je push cltd das js cmp ficoml mov sahf mov pop int3 adc orl mov pushl scas adc je xchg retw test cmp mov and leave rcr add add test push imul outsl gs arpl jmp loope xlat aaa loopne push adcb push and loop cmpsl mov inc mov pop add adc push sub shlb fidiv lds gs mov push stc mov cmp dec frstor ret cmc pop pop addl dec or (bad) and inc inc pop inc jae xor nop and mov or sarl iret xor inc imul xchg adc or imul pop inc xor add imul (bad) cmp push iret das push cld je lea fildll mov xor adc pop adc xlat mov sub inc jg ret add mov jne loopne roll and or sbb cmpb ss (bad) in cmpl popf mov sub inc mov scas test aam je sub jb adc adc rcl push ds lods addr16 hlt sub push mov das and adc jb jo aaa push cmp (bad) pusha aaa or cmpl insb rcr xchg push mov and inc ss pop js gs outsl and in aaa test fs add fildll jne push aaa fistp mov adc jmp pop cwtl loopne sub std insl push mov xchg movsb leave out add inc inc stos mov ja lahf or pop cmpb xor popf rclb sub xor aas sbb sbb (bad) add or repnz repz and ja pop into lcall test mov pop outsl bound jne xor icebp loop mov xor mov add adc ja dec sbb mov jne stc push les inc mov mov iret and cmp and cmp push jmp insb or adc sub pop cmp lea incl (bad) jae in adc jne add cmp sbb push mov xorl pop ret inc xor xor dec insb ret int3 add test xchg and rcrb addr16 or jne insb hlt ljmp or (bad) (bad) jle rolb (bad) jg adc add add cld jb test mov (bad) xor adc add int nop inc fcmovu inc dec sub ret adc std inc cmp in sub jne icebp mov je or ds jl adc adc jmp loope push mov ss outsb pusha lea aad mov jle add lea stos decb mov (bad) mov mov inc xchg xchg cs lea and mov jno or lock push push lea add lds outsl adc (bad) dec mov jbe shrb xchg daa jne out mov lods inc adc sti out ss hlt mov push movb pop mov mov add rclb jl cmp ja int3 pushf xchg or xor inc mov inc inc add jbe sub push lea into adc imulb sub push bound mov inc add mov push mov dec (bad) not je orb sub add add (bad) push pop and mov dec jmp movb shr lea jo std mov mov lea out xor sbb xchg push mov jmp mov push pop cli and and and mov inc cmp mov add int stos add rcrb fsubs mov jmp cmpl dec minps ja sub pop cmp sarb inc sahf mov lret jae (bad) xor (bad) sarb mov push ds jmp inc jmp rorb sbb xor mov testb jne movl cmp je hlt enter in jmp xchg adc xchg bound inc xchg and ds push sub out mov inc add jmp ja pop sbb mov dec jg aas xchg movsb int3 jb sbb test lods push dec dec push imulb fadds js or and (bad) in xchg xor jecxz lea subb mov rolb lock out (bad) std mov xor jmp dec and idivl pop fmuls xor and and das inc sbb jp inc in rolb stos add jnp jae jbe cmpb iret mov (bad) push out mov test sbb xchg inc push imul mov mov mov xor shlb dec sub (bad) (bad) shlb jmp loopne sbbb mov sarb clc jbe loopne inc cmpb xchg adc data16 or add jb mov cs das lock push scas roll test inc movsb mov or inc loopne inc sub adc sbb jmp xrelease sbb divb testb in or inc or mov adc test sbb mov jnp push (bad) loop cmp mov pop pop xchg pop test in adc clc popa dec loopne sbb mov cmp sahf rorl enter add cmp lret jbe and (bad) xor pop js loope push mov xchg mov pusha sti rep movsb push pushl mov fmulp cld aas jne push push pop add jo xlat mov mov dec (bad) xlat out stos or add cwtl mov data16 mov pop and mov unpckhps dec out mov (bad) inc inc loopne jge (bad) int3 jl mov fiaddl sub call lcall jge mov mov jmp mov cwtl xchg incl adc call daa push push push dec push jg lock and pop and push addb xor call lods cmpl mov ds pop inc and inc mov add sbb (bad) (bad) mov xchg outsl cmp (bad) jo incb movsb std je cmp jne sbb cmpl adc bnd mov pop mov push mov mov sbb (bad) mov inc sbb push sbb inc mov les or imul movsb les jnp rol push test jne push jo pushl out (bad) mov push pop cmpl add or outsl fwait pop insb xchg jo inc add pushf nop add dec jne out icebp lcall js sub fs mov sbb sbb pop cmpl popa popa roll imul (bad) jle adc fdivs cltd adc or sub adc (bad) xor dec xor push sub pop lods sub je jae sbb pop mov fcoml pop adc cwtl lock sbb addr16 push jl sub orb pop add xchg xor sbb dec jmp xor (bad) fstps sub cmpl adc jle dec mov das (bad) aaa (bad) icebp jne push push call inc adc rorb (bad) bt mov pop mov stos push dec dec jg jo pop adc ds in addr16 dec dec cmp pop inc cmp jne or (bad) push or or xor sub out pop shlb pop dec stos add dec sub push and insl call inc and loope push pop and adc push xchg pop mov mov mov notl jle push add mov mov aas or adc pop test bnd mov add cmpsl push adc int3 cli jmp sbb pusha adc xchg and add and test inc pop cmp mov dec jmp mov add movb xor inc mov push enter mov testl fidivl sbb cmp popl xchg into push sbb add pusha jno inc fwait xor or cmp sub push and add push jnp jmp or push push inc xchg dec fs movl add jmp push jmp ss push mov add sbb adc sbb push sbb or mov test adc pop adc or xchg out sbb in push outsb or hlt pop sbb mov insl mov add push jae ret lock cmp aam enter iret jmp sub inc loop cmp (bad) lock add cld xor pop sub clc mov pmaxub push mov push push xlat adc xor push cmpsb sahf xchg lea dec push push sbb mov adc lock lret lock jne push push ljmp lahf xor andl lea add lock inc sbb sbb pop jle dec cld xor cmc fwait pop bound pusha mov jbe and xlat add and add sahf cmp dec mov stos mov inc add mov incl lea push adc lcall mov add and push pop cmp adc pop fdivrl xchg push mov daa adc or or addr16 add mov push rcll add and gs pop dec call add outsl lahf and xchg ja fiadd add callw movb or xor sahf adc push stc adc (bad) mov push push test out or push subl xchg loop inc hlt sub sbb rol or dec or ret or inc mov lahf aam je popa add mov xchg insb sub fstl cmp jne dec or inc addr16 pushl mov add mov jmp mov sbb or fmuls jg ret mov jbe pop fdivl or cmp and int3 sti outsb or sub sub ljmp jne mov aam test loopne add xchg negb sbb out push fstl xor lds jbe js pop jmp imul cld dec aam and pop or nop mov sarb xor inc push pusha mov insl shlb adc adc (bad) rolb adc jg push int3 lret in mov or pop shrb push and add pusha inc fdivrs out std xchg jo rep mov (bad) mov sub sub add sub popf xchg ret and jmp pop or sbb xchg int cmp push mov fnstsw test and cmp and pop les pop ss fimul cmp dec dec sbb notb ret sbb add push pop (bad) out dec outsb pop jb or xorl add jl adc pop inc xor shrb xchg cmp pop ret push hlt icebp add push mov das pusha sub fldenv mov add jnp ja mov dec mov add sarb push clc mov add jo out cli rclb aaa cmp je iret pop inc cmp jbe sbb push mov imul adc sub xor push inc sbb add sar inc or push push mov jnp xor add inc divps (bad) cli push jbe test push push les pop cmpsb call pushl jge (bad) lret int mov push es test ret imul cmc je in pop jb inc lcall dec adc push push incl adc xchg mov mov orb cmp fidiv and imul rorl or sbb inc (bad) or or inc daa rcrb mov adc sti add xchg push hlt cli and mov mov test out jle int test mov stc cmp jge imul jle andl aas mov add and sarl sahf mov stos add or loopne pushf and mov xlat add cmp sbb fwait (bad) (bad) lret pop (bad) push pop xchg xor cmp pop pop adc cmp fs insb push rcl mov jmp leave push es lahf mov movsl add jge ss sarb xchg mov (bad) xor jecxz push add mov cli mov cmp ja je (bad) and imul sub loop rorb lods mov sti arpl rcll bound xchg push push movsb mov adc out push sti ret loopne jne add dec sbb and cmp add je push pop repnz daa mov cmp in repnz adcl cmp fistp add cmp push mov or (bad) jp jne es cmp out test and mov movl ret pushl add adc lods push orl add cmp push loop repnz add or mov push cmp adc mov inc add incl xchg or aam mov ss push inc mov gs xchg adc or insl js clc inc incl mov (bad) sub test add or jne mov cmp inc test fisubr pop mov push sub dec jmp xor pop inc or incl dec mov cmp inc inc pop je pop es xorb jne int add fs lock xor pushf inc cld mov pop test xchg jmp add test add xchg cli je or lock or je pusha inc adcl sub rol leave or out mov ror inc add xor cmp std (bad) call lret sub mov mov xchg in aaa push adc or pop dec sbb push test adc mov mov in loop js pop cmp adc icebp or add cld sbb mov jge dec xor mov cmp dec out ja or jae in add add dec ss push sub rcll jge (bad) push push dec in icebp les xor pop inc jmp sti rclb inc aad mov cmp push xchg push pop jne call stos fs add fldt jmp orl (bad) (bad) fiadd rorb fistl in je add jmp sbb or test push sar inc push inc push jl adc mov (bad) (bad) stc scas push adcb test test push xchg jo jmp mov movsb sbb addl rorb xorb xchg test jne sbb (bad) fdivs or ret mov (bad) iret fldt mov jecxz push sub or xlat sub pushl push push in inc in dec push add dec fcom pop push xor shlb pusha testb cmc fwait cli or dec push or or or imul push and or pop mov or ss sbb int3 jp into jo pop pop xchg push mov mov inc xchg cmp dec pop xor and sub movsl push (bad) push insl sbb pop sbb push aas xor add push and lea loopne je pusha and and cltd ret adc (bad) mov or popf dec xor pop test jle insb mov add test push or je inc adc mov test cs jne push loopne xchg dec and xor addr16 clc add out add aaa addl push xchg (bad) loopne imul aas push pusha jns leave les hlt inc sbbl bound xchg mov repz pop or dec add jmp (bad) xchg andl ret and jle mov cmc push test or sarb push dec push cli or xor ds push jne inc adc cmpsl (bad) xlat inc add or je and (bad) into mov movl jl mov loope xor test jecxz stos inc sub sub fidivrl test mov bound pusha inc pusha push push push sbb add test jmp push pusha (bad) iret dec insb inc push jge mov pop push aaa inc push push and pop insb subl pop or push push scas push pop mov cmp adc scas or mov loope cmp adc mov pushf push and or lods sub mov push mov int3 mov fidivl or not mov mov inc or cmp adc push nop mov and addps xchg pop fistl lock fild pop mov test into jbe cld loopne or mov rcrl adc sbb mov mov push push mov cmp pushl (bad) hlt mov roll or ret ret inc mov mov and loope mov cld push mov dec jmp ds adc (bad) and fcmovbe cmp pop mov mov test jl push pop mov adc jne sarl out push pop mov insb movsb push mov cmc pop imul inc dec mov cmp sub mov mov xor cmp test aaa or (bad) jmp push test mov movq mov jmp push imul loope (bad) push jne adc jne or push jg lcall cwtl jmp xchg lock pop or or inc or lods insb and inc sub push orl call pop xchg mov or or or cmp adc arpl cmp jmp shrb push add sub test xor add jle cld or inc or ljmp push adc sub enter pop icebp (bad) aam or inc jb rclb rcll mov inc adc mov mov loop jns fs sub iret imul pop mov jp movsb xor bound dec or rolb fwait push popa clc adc push nop and push mov mov jne sar dec cmp in sub (bad) aas pop int3 cmp jne push and or pop xorb sti paddd jmp dec add shll pop mov and and jmp lea xor mov fisubrl push adc lds sbb dec hlt mov cmp or jp mov jne hlt sub clc and adc add sbb xorb sar xor dec pop cmp out into pop xor (bad) andb (bad) aam cmc cmp je cmpsb jno adc in cmp push jg test je dec add lock xor sbb pop xor outsl jno mov mov sbbb or or icebp dec jo leave mov fimull test mov or mov fcompl pop dec or cmp jne mov ffreep aas sub mov jge sbb sub lret jnp xchg call inc dec or jmp dec in (bad) adc call test add push mov and push add movsb adc add mov fdivrs (bad) fnop sbb loope add fcmovne jle scas jp push call aas gs addr16 out or sbb mov mov fadd add adc inc aaa mov and jl je fcoms enter adc fisubrl mov and shll sbb add sub js in push lea add dec add addr16 push cmp or jbe jmp das mov test mov lcall fsubrl inc inc or xor and in lret hlt lret fild cli sub div pop push mov int3 xchg add sbb (bad) aad sub sub mov xor push fldt pusha pop jmp orl and insb incl scas ss mov movsl test inc cmpsl mov xchg fcmovnb pop jge je rolb mov imul in pop sub inc clc pop mov add rorb shrb dec jne dec sti pop roll repnz lods mov sbb lea push and ja add and or pop clc aaa test dec clc incl nop cld or adc out sbb lock call adc add or jl push ljmp mov sub lea int3 or sahf inc sarl mov mov in test push mov add cld inc jne or shrl cli and mov in or or jne jge test loopne sub pop shr mov dec cld push cmp jbe sbb dec cld dec adc arpl push mov test sbb fstpl dec fnstenv xchg xor inc sar dec cmp cmc test pop push push xchg pop push pop jmp pop inc sub aam clc or mov popf inc pop add pushf nop xchg fimul mov add adc push sub add add mov mov fldt ljmp mov cld aad jnp cmp out sbb jbe mov adc adc or lcall or sbb push (bad) pop adc ljmp adc xorb jmp aaa pop pop push lds hlt or lea jo cld fsubrs aad xor add add leave push mov mov rorb js xchg pusha mov (bad) mov pop or mov inc dec insb pop xor rcrl add cmp xor movsl adc inc mov orl js jle xor cmp sbb pusha nop dec fdivl xchg jno push cltd dec push fld addl cwtl fidiv cmp jbe ja stos (bad) adc jl pusha (bad) and loope lea mov into (bad) xchg mov dec add rcpps and push pop push cs mov xchg lret lods into rdmsr mov jns dec inc pop bound mov pop in dec adcb outsb cmc push sbb add loope cmc inc inc sub push cmp push push jge dec mov mov shr addl add (bad) or cmpsb and sub jecxz jmp sub and and repnz addl call or jg sbb movsb cmpsb icebp fnstenv (bad) scas add inc lock jne arpl or arpl fildll (bad) mov pop sbb int3 or dec popf dec icebp arpl test popa (bad) pop inc dec pusha jl in sbb dec sbb je mov mov dec pop iret jne inc ret or jmp dec mov dec xchg ds into push pop mov shr outsl jnp dec dec mov and jne mov push xor and leave inc test inc push pushf pop mov jno or loop cmp and add pop inc pop push hlt popf dec decb pop cmp adc iret dec mov cmp xchg pop mov inc (bad) incb decb jne jp and lret sti jmp lea dec mov pop lods xor pop dec bound pop or out jecxz and jp xlat add and adc xor icebp das (bad) cmpsb cmp inc mov or add das or inc or ret out or inc push hlt sub push jmp inc or movsb sarl mov aaa rolb add pusha dec adc adc lock stos and test or push sbb jne cmp ret cmp add xchg sbb add sbb push out fs xchg jl adc movsb xor or ficompl or xchg lock push data16 xchg or pop jo inc insb gs test jno push lea push adc in fstp test mov cmp cs mov lea push mov ret mov shl cwtl or andb xchg lahf pusha cmp or add sub mov mov or mov test int mov xor fs add loopne pop popf es cwtl adc dec inc jmp xchg and add or or mov xchg jne inc push pop adc push in push jg xchg icebp pushf pop mov cld and pushf pop sub je movsb jbe les and cmp mov jg and mull inc push add movsl adc xor dec das pusha xor fwait mov js mov adc jne mov cmp cwtl addr16 mov xor pop jno aad inc add cmovns popa popa call dec cmp add sbb pop scas xor hlt or add sbb cld dec dec add lret xchg lahf imul pushf jnp in cmp jne leave or push adc icebp push push mov and push xchg cltd adc pushfw popa test mov mov (bad) popa sbb mov push aad push out test cltd dec mov inc sub incb cmpb xchg xor add jmp ja push jle out (bad) push inc adcl (bad) fcomps mov sbb push jecxz int xchg and ret and rolw rorl (bad) in lea push fsubrl push jb pop pop mov pop cmpw mov jp mov add cmpl add push cmpl ret shll popa leave add or jno xor push les push fisttpll cmp jb dec cwtl orl (bad) jg cli ret shrb (bad) jb inc std add int3 add (bad) push sbb sub cmp clc pop mov adc cmpsb sub lea sarb jge int3 adc add hlt divl inc push and das sbb arpl add jns cwtl fnsave mov jnp shlb cmp lret mov or je cmpsl pop push icebp push jl push mov mov imul sbb add push xor mov lcall pop lock addb push and clc in fmuls sti or pusha push pop scas and or pop ret jg push xor push mov pusha pushl xor push stos test call push je xchg sbb addr16 rcrl pop jmp mov or mov or mov (bad) dec push incl xor adc jmp push ret sub push add (bad) mov lock sbb scas or testl add sbb inc pusha cs aaa xor scas dec in dec rol inc outsb cmovb nop and inc sub mov inc adc and mov push loopne add push pop mov cmpsl imul fsubr fistl movsl adc pop sbb (bad) push dec jmp leave loopne push insb outsb mov sbb adc adc and sub jl mov mov arpl loop cmpsb adc mov push loop mov mov pop sarl outsb push mov shrb inc lcall sub or inc adc or incb mov sbb (bad) sub mov cmp das mov inc and pop sarl in in jge pop adc or shlb cmp or cmp repz jns int3 pushf push mov mov push push push push push push inc mov cmc les dec and sub lds dec xor lret push jo (bad) (bad) push inc in pushl add bnd lea lea or jle push inc sbb sbb (bad) out loopne popa rcrl jmp fs jp jo jge pop jb mov add and sub dec or enter das dec pop or mov mov and pop inc mov mov pushf dec and pushl add mov push mov fmull xor sub rcrl xor mov ljmp sti push inc cmp ds add or jl fstpt inc pop orb add jno push push in inc mov testb sbb push pusha or mov adc push adc test (bad) xor sub fiaddl mov lds scas xor add adc jo cmp and cmp xorb inc push insl push jo jbe adc push jmp mov push mov xor mov xchg in call inc loop mov adc lea loop ljmp pop jg xor (bad) sub or imul mov sarl xchg sub arpl jne pop sbb adc and (bad) inc sbb xchg pushl nop fcomps push mov cmp dec mov or jg and fild fmull mov jne mov xchg repz insl test pop add gs xchg pushf or in (bad) outsb sub inc sub cmp inc push lods call or or adc outsb mov sbb sbb dec dec dec dec sub xor cmpsb xor cmp inc leave leave in (bad) adc and leave leave leave leave push push pop pop leave leave leave leave pusha fs leave jo js add mov jmp xor mov and pushf mov movsb test push xchg js pop das xor faddl push imul and xor mov xor add test rorb sbb sbb xor xor and adc push dec dec int3 sbb xchg jmp cmp je inc dec jne lcall push mov add add sbb xchg adc jns xor xchg add mov ret add jmp fmul lcall pop mov xor or push les mov andb or mov and (bad) and fdivs pop ret pop js or sbbl push xor inc and and jmp rcl push sar jne mov mov pushf push sbb cmp or dec mov out jns (bad) rorb add inc sub pop push pop subl (bad) pop adc mov and and icebp or lea repz add add mov add fwait js fidivr orb push sub daa mov pop and jb in xor or push adc rorb cld inc test mov sbb dec int3 and mov dec add mov dec nop mov mov sbb jecxz pop call loopne divl cmp add lcall dec das je ja rclb push inc jb xor das (bad) je sub jl je or mov mov adcl push movsl int jge lock push push xor push push popf pop jg out adc sbb adc cmc mov pusha adc inc sti mov aam and (bad) cli rcr dec pop je push idivb nop pop adc je inc push dec mov push sub pop mov dec or mov mov cmp xchg mov dec sbb jg (bad) outsb sbb cld sub lsl sbb or add mov pop cmp mov test aam inc xchg lods pop mov test call mov movl add scas sub sbb and das mov pop jb or mov mov pop jnp test jge add sbb imul mov fsubrs (bad) cmp or outsb xchg pusha xor jns or fisttpll test lock shrb or push ss mov je mov dec loopne add je inc loope push testb ss das (bad) jno cmp orl and inc adc mov inc cmp es mov test dec sbb xchg fdivrl adc cmp aam aam shlb inc popl leave pop jl shrb adc add fs ret or inc gs inc arpl pop icebp fs std aaa add push add sbb inc adc ret and movsl adc adc ja sub pop and and loopne ror lea add adc push mov cmpsb adc fadds mov loopne in jle push adc test pushf cmpsl pop push inc and pop add js pop pop dec mov mov adc loopne fdivrl sub or or sti sbb and or pushf outsb push push jo fsubl clc push pop or pop mov mov push movl cmp mov mul add rclb add jge sub push fsubs adc pushf mov cmp or cld push lea aaa or push (bad) xchg inc push dec adc xor cltd or inc cmp test orb xor fimull dec cld out enter push push sub and and inc mov cwtl inc sbb add push aam mov add push bound push in adc sub push fsubrl sub jp or xchg jp shlb jl mov pop inc mov loopne inc adcl mov xchg jb xorl lock jg in push or push or mov push cmpb jmp adc int inc add imul pop dec aam push mov or jle (bad) int3 fist sub not int inc mov push ds add xchg cmp ret sub (bad) test jmp (bad) jne sub fdivl decb ret mull mov clts xchg les inc push insb fbld or js shr rcr into movsb sahf std or jne div pop dec adc out out fucomip adc out jb cmp or cmp or xor jno adc fistl or outsl mov neg sbb lods pop jp mov mov iret pop ret mov xchg xor enter cmpsl fstps outsl mul inc push or add nop cs loope rcrl adc pusha aad xor mov dec je mov adc pop ljmp push and shlb sbb xor fldl add and subb je sbbl xor xor push cmpl jmp in ret or std lcall addb cmp jne orl jmp adc jne sub mov cmp mov inc adc (bad) aaa popa cs fnsave push xor std aas adc jmp mov cmp je cmp and scas and aam or jge nop jne pop jne dec add add lds addb fcom sub decl mov movzwl test je mov xchg jmp std pop jl je mov sub cmp sub add popa sbb dec insb leave cmp jae bound jp leave pop lods jb lock sbb les xchg test roll popf dec and pushf mov jmp xchg imul inc andl and lock jg sbb or and push or fcomp jle or stos push daa cmp mov add jmp adc bound or mulb add mov dec jl mov notl add jge jmp dec pop adc inc xor cltd or add pop push test jmp jl sub add adc call arpl dec repnz das int3 mov mov mov cs fdivs add mov jb cmp ja add cmp adc (bad) cmp pusha sbb outsl subl incl jb idiv mov inc jge pop pop pop leave mov mov sub pusha or add fild pop add push out je mov aas mov iret test push pop subb ret shl push (bad) lock mov out pusha divl lret (bad) stc xor aam call (bad) push and or and les pop inc or stos roll add push add pop out movsb enter adc adc repz aam xchg pop addr16 (bad) outsb add cld jmp pop ljmp ret mov sub cmpsl bnd or cwtl inc adc fcomip mov mov mov movsb mov xor adc adc int3 cmc adc fcompl xchg lods mov ja mov add inc out add xchg out and push push int3 sbb clc fldl sub or shr inc sbbb push add or nop lret sbb sub fcomps dec cwtl sbb mov rolb pop mov sbb add insl outsl and loopne pop pop xchg push inc mov push dec pusha or dec hlt inc add les test ss adc loopne mov and pop cmp add cmp cmpsl push xorl shrl in les dec mov andb mov subb or xor in rcll add cmp push cmp xchg jne mov xor jg cmpsb fmull inc fadds or dec xor add push jo ret repnz sbb push lock hlt daa jo outsb in push mov xlat push add shlb ds xchg mov popf jmp jo (bad) aaa test sub adcb (bad) imulb push aam pop xchg enter mov lea pop pusha fmuls cwtl outsb mov ret cmp rcl or or push jecxz xchg test or data16 xor inc and inc cld outsl xor push inc xchg sub inc sbb adc ljmp adc xor cmp fdivs int cmpl iret push pop push and ljmp and add cmp cmp mov (bad) ja mov jmp inc bound adc or cs or or pushf cmp jge cmp or or dec cwtl mov (bad) mov lret mov fs xor ja jbe sub fisttpl cmpsb mov dec push mov int pop adc mov movsl mov adc in or bound cmp or out lods mov fstl xchg cmp push adc jne and mov test add jbe subl test fdivrs icebp pop jmp mov inc clc sbb or fisub lock and inc fs mov mov xchg loopne add sahf insb (bad) adc in pop sub adc sbb sub mov push iret xor dec pop aas cli or aam mov loopne movsl and lcall pop je testb je and dec sub cli inc xor push mov push inc xor pop inc xor gs lds mov fdivl lea dec fstpt jnp negl and addr16 mov lret add push and (bad) je,pn push push lea (bad) or add pop pop mov ljmp fcmovne (bad) fnstcw fs push mov sbb cwtl enter cmpsl mov (bad) sbb cmp (bad) dec test mov pop jbe pop or fmuls jmp punpckhdq stos pop sub and scas in sbb mov adc jne push add clc gs inc xlat mov pop cs cmp mov inc inc mov mov pop stos sub adc mov bound xor pop shrl xchg leave ret loope test push call pop xchg xchg adc inc das jne mov inc ss lcall xor (bad) pushl xor mov push mov cmp pop jne dec mov insb push in mov jne sar fldz cmp fcompl mov iret mov sbb jae pop loopne or lea mov mov or mov adc adc jp sub leave cmpsl or and fild dec outsb test dec je jbe sbb push push add adc test xchg or mov sbb mov add cs sub (bad) sbb pop and icebp (bad) push push arpl push mov pop xchg jbe cmp inc pop inc bound sub imul or mov and push bound loop rolb mov cmp pop adc (bad) fistp (bad) mov cmpl mov jne movb lea push sub or pushf add lcall and add and insb add lock js cmpsb hlt add fiadd mov mov fildl cmp mov movb jo stos jge aad cs sub lock mov sar add mov adc or sub add addb cmc cmp jne (bad) inc add sbb xchg jecxz dec xor cwtl cs sub mov or fildl push aam inc adc cmpsb dec into les xor mov add add xor outsl arpl loopne cmp jbe test xchg sbbb scas outsb inc dec mov inc test push push xor cmp xor das (bad) arpl pop jmp push mov fs pop mov sub popf pushf add xor popf push dec jmp or and fcompl adc lock xor xor sbb mov mov or xchg je neg pop xor rolb nop call in fmull pop sbb cmp cmp pop add cmpb gs js ja adc loopne mov dec mov cmp fiadd jo aaa lock test dec or je (bad) cltd adc mov cmc lea push mov adc sbb ret xchg fcompl cmp cmc adcb jbe push xor mov push mov enter js lods pop rolb pop dec je xchg inc sub leave and add sbb xor movb out adc jg and enter pop sbb sbb neg sbb jecxz mov pop fcompl add jg ret daa xor or jne pop inc lahf xor cli pop movsb cvttps2pi popa adc and aam or inc mov test movb add add insb or adc cmovge push pusha xchg or (bad) lock popa (bad) ja cmp jbe rol sbb or dec mov data16 push movswl les push cld into cmpsl mov iret fimull je ret loopne (bad) mov js shrd dec adc pop push fsubrs adc cmp lods sbb xchg adc cmp cld (bad) imul stc inc xor xor out pop into in mov sub dec loopne ret cmp lock incb push xchg push push add pusha adc add mov adc xor jo pop or fsubl pop and sub pop sbb pop xor sarl jg jb push sub or ret mov (bad) neg cmp mov lock mov sahf inc (bad) jb push adc faddl (bad) movsb (bad) adc (bad) jne dec cld mov add in mov inc inc cmp dec pop or leave jae jb or dec sub daa or dec pop xchg (bad) fmuls jae stc mov outsb popa les jns cmp mov pop add or int mov (bad) stos cmp add jl rol data16 or mov xor mov pop sub push test cld mov mov inc cmp xchg test add dec adc sub call jge mov dec jns or or inc mov popa push test mov pop sub into add mov add jo add adc adc pop add adc rorb mov jno ficom pop leave add (bad) repz aaa pop popa enter xchg push pusha dec mov fimul mov pop jbe add enter adc xchg push push imul jmp insl jb pushf rcll fwait mov mov pop hlt sarb inc push stc mov das rolb pop push sub fsubr sbb gs pop pop pusha les je pop ss or pop data16 and mov fsubrl popa je or sbb dec (bad) xor (bad) add push test inc nop pushf sbb stos nop xor sbb xor add pop push std pop lcall call jne fmull test lods add push pop clc fstps or add or sub rorb dec adc push out das push cwtl mov jo add adc mov sarl sbb xchg xor pop push ret inc add inc sbb xchg push or (bad) sub sub je rorl pop sbb adcl pop and testb je xchg add or or mov adc inc loopne cmp mov mov and jle sbb mov jge cld xchg mov jg out push movsbl rorb mov mov imul adc xor cmp jl mov mov dec or jae xor mov add imul add mov out or pushl sahf insb popa cld fwait push sbb xchg pop pop pusha xchg adc mov add add xchg jge push jmp sahf add (bad) xchg popa movsb or mov aam cmp stc or push and add add sub js in adc rorb mov inc (bad) mov dec dec or add sub push pop or mov or pushf jle jno cmp movsb pusha xorl ds lret notb pop sub (bad) adc add lret rorb roll add mov rclb add or dec mov enter sub sub add mov inc call push push incb xlat test pop loopne addl mov incl fucomp aaa pusha jg jl pop pop mov sbb add xchg add add adc icebp add adc fcmove add jae aas mov push mov test int3 push push pop xchg xchg push pop inc addl gs add push inc xchg sub cmpsl movsl sbb add mov arpl pop lret mov mov cmp loopne dec push sahf mov xchg xchg lret lahf xchg fcoms icebp cmp or (bad) in dec push jnp dec fstl loopne mov add adcb xchg cli sub cmp inc or sbb je mov cmp stos xchg adc dec rorb sbb mov pusha movsl pop (bad) add mov or sub sub dec mov (bad) sub inc cld jge popa pop mov enter rcl cmpl icebp inc cmpl mov push or and jge cpuid lcall pop daa jecxz inc int3 dec adc enter mov aaa inc adc fwait movsl inc sbb jne pop pop cmp adc push aaa shrl jne testl mov rolb jl or mov ja test lahf inc sbb push ret imul repnz mov repz sbb xchg push mov mov into jo test je insl stos (bad) cltd sbbb mov xchg push add aaa pop mov push jmp mov push sbb ja popa xchg je mov fadds mov add fwait sub iret push dec ret testb pop mov add dec lret mov mov js jns mov xor inc jmp pop call (bad) fldl push cli addr16 hlt mov je dec jne xchg push fidivrl pushl xlat lds jno push sti jmp xor xor xor dec inc add inc pop (bad) cwtl push mov sub mov add add pop xchg pop and insb ljmp or and ss dec or xchg add cmp addl jbe add movsb pmullw jl (bad) sarl pop je fsubrs (bad) pop (bad) pop arpl leave add pop arpl pop sub mov shrl les frstor aad movsl mov push (bad) mov xor push cmp jl sahf jg add adc adc loop hlt faddl aaa mov sub inc jne clc cld mov pop scas into fstpl xor mov add lea push or hlt pop pusha push push mov dec or dec clc jl enter lods and cmp pop cmpb jb dec shr mov in dec lock mov jne pusha sbb into push add and ror movb xchg cmpb mov lds test adc xor frstor fcmovnbe sarb mov or push push and in sbb mov rol dec jbe pop xchg inc test pop (bad) pop jle inc popf test movsl cli push adc pop mov aam inc jo jl mov pop push enter cmpsl cmpsl inc jmp (bad) or add push add movl loope sub add jle cmp xor add xchg mov (bad) rcl jmp hlt mov jae jp cmp (bad) aam push inc or jg (bad) push inc jle,pt sub inc outsl pushf pop pop push add fisubl in jle jbe push loope add loopne mov es lcall ret add inc jg adc xor jecxz mov call jmp sub popa jne repz lret sbb lock js orl fstl or mov lods adc xlat aas cmp std or ret jg (bad) js sub push cmp jne add and or adc add and push push jg fwait lock or sti xchg mov or push lods inc cltd lret xchg rolb sbb pushf push push and xchg movsl test sub add push push lahf ret test sbb les mov mov cmp je cmp adc leave js mov dec or inc and testb lods popa mov and jne sub gs (bad) adc cmpsl jb mov (bad) lea cmpl sub pop adc daa mov add imul jle lock add loope imul sar (bad) pop popa and add sarb lcall push ret scas push sub test mov or add add pop sbb adc pop es jmp or cmp sbb or insb fisubr add sub and in popf (bad) adc sub adc ror fimull addr16 xchg lea fcoml nop ror dec (bad) bnd fistpl icebp push or shll jb and push jno testl and dec jnp testl loope (bad) (bad) sub xor inc pop push or and movsl test push stos or int3 pop adc bound aaa (bad) push in ret adc mov rcll sbb sub test jg loopne (bad) jb cmp jb jle xor inc fwait clc adcb (bad) nop or add mov addr16 aam jl rol jbe data16 mov ljmp mov imul push or mov loopne cmc adc cmp adc pop loopne pop xchg add jg push and pop ja and or xor push je fsubrl sub sub xchg and xlat push mov lea subl or cmp aam add lret ret sar add addl cmp xchg lock cmp clc jns jmp frstor mov addr16 jge lods jge sarb mov push mov push xchg adc pop adc pusha or xchg fisttp adc mov mov xchg lock xchg cmp jle gs sbb mov sub add lods popa mov sub call adc je add mov or jne xor imul adc push (bad) fwait push xor or fldl lahf sar mov test je scas dec call jge push imul testb xchg dec in mov and loope push std jg jb lds pusha sub aaa mov jnp xor lock adc jl xchg jb add xchg adc adc pop pop cmp sub add jae loop jg mov pop mov add les push mov sub and or into mov insb sub jne cmpl pop mov les je add rolb mov and lcall data16 push scas dec sub lea pop out add sbb pop cltd int3 or es fldcw adcb jne test jge lea ljmp in xor fsub cs in or ss push jno mov in add rclb pop call icebp jle das or sbb add call inc fimull ss xor or dec lods lret sub sub dec cmp jl jne add test sbb movsl lea insb imul mov mov inc cmp mov ja xchg les add push inc push ret mov xchg test adc sub inc or mov arpl pop inc dec cmp lock or cmpb jl mov inc add je incb adc and cli inc xchg push (bad) push ret and push icebp cmp mov add inc push push adc stos push adc call iret iret movsl mov nop and mov fstps add xor and adc push mov (bad) or sub stos and jmp mov loopne ret scas add in jmp das ljmp stc mov (bad) movsb decb call enter shl test (bad) test pusha je and xchg (bad) flds rcrb roll leave addl test movsb or loope or insb add dec lods movb adc push sbb sahf jno adc dec cmp outsb jl pop sub cld movsl mov mov push mov shrb movswl mov dec jne cmp dec int jno adc xor mov push add sbb in sub inc inc rolb push fdiv fiaddl dec jl out sbb adc push aaa sbb sbb sbb jae xchg les sbb sbb push push jmp and fsts movsl icebp sbb xor ret inc xchg adc adc outsb es lcall fwait dec jne lahf mov mov stc inc jae rcll lods sub or push dec cli add loope shr fs pop daa jne inc inc idiv and notl cmp scas (bad) cld lock push je sub add sub ret nop mov jns and jmp cmpsl ret xchg mov push jmp jno inc xchg add lock sahf sub sbb call mov lock push dec jmp fiaddl mov gs or add xor or xchg inc mov out or xor sub dec add and test push sti add (bad) call dec in jne add push add pop test jne pusha imul addb hlt loope xchg out fisttp jge stos stos push stos pop pop andl xor inc loope xchg push aam xor dec inc push pop and cmpsb addb dec mov adc test rol add hlt adc testb mov pop fwait and mov sub rolb test das adc or call loop add test push sbb xor repz fnsave add cltd insb pop and mov out inc std and or inc outsb sub or jbe dec mov clc fisttpl movsb pop xor or cmp jmp cmp add adc jb cmp scas add (bad) dec fisttpl mov add sub add enter mov aaa cmp add pop ja enter pusha rep pop add adc fadds pop es or insb cld getsec dec stos inc lods and fmuls (bad) (bad) imul pop push aam xor sub rorl adc xor push iret decl stos lret popa sub pop lock (bad) not ficompl xor add lock push or and shl incl and add inc out jl inc push inc test dec stos pop int3 push aas fsubrl cmp jl mov fs push sub rcl jmp sub mov paddw test je adc data16 sub out sub lea push sbb cli movhps add cmp jmp inc (bad) sub fs pop dec repnz mov adc mov or mov dec jns rcrb cmpl xchg mov leave push inc mov xchg sbb js cmp mov jecxz pop add dec dec jl lea jl pop push lock loopne add push fistpll (bad) fidivr loopne lea and push out and jge iret adc or (bad) icebp adcl jecxz xchg ret neg sbb insb and flds and pop loopne stc inc xchg add faddl adc and push adc jle sbb leave xorl push xorl orb jb and and xor lock enter xor push dec adc dec cmp adc pop mov mov orb push mov jl loopne add ljmp inc ret push sbb fs pushf cwtl xor jmp out test movsb mov (bad) mov jne jmp pop lahf mov sbb mov inc or mov or jmp xor adc aaa jl or xchg push pop mov enter loopne dec xchg (bad) ja lret frstor mov sbb test mov sbb aam adc fxch jmp push cld inc test add mov ret jmp cmpsl mov outsl fwait xor fisubrl sub loope sub cmpsb cmp jle cmp test inc movsl push xor push mul mov orl stos jbe cmpsb xchg lods jp mov and test subl jmp cmp jg in sbb dec cli mov divb adc push pop jge (bad) pop jle mov mov mov jbe nop frstor inc and push decl jb lahf jae imul sbb addr16 jge jmp and push add push xchg jge inc xor pop fucom mov gs push dec cwtl adc pop pop xchg push and dec and or jo test jbe sub mov lcall ret dec sbb es mov and outsl or or lock cmpb jl incb dec mov pop adc data16 add lahf xor jmp cld add cli and sub dec mov cmp or dec std jecxz mov jmp push mov orb pop jo shrl push mov dec cmpb dec add pop addl and test jge orb (bad) xor mov sub cmp lcall dec rclb stc inc shrl pop adc out pusha push inc lods mov mov jge jle mov lods mov data16 adc mov dec lods sarl add or add ss sbb arpl (bad) mov cmpw std pop into nop jb mov xor add pop mov test adc into adc push xchg fcomp mov out add cmp shll xlat mov mov and cltd into or and adc fdivrs icebp (bad) std mov aas ja fwait enter insb gs sub pop inc fsts testl sub jne jge aam and rcll pop movsl call inc or cmp jne cmp jne loopne rorb sub cwtl lea test add add dec test leave rcrb push (bad) jns (bad) (bad) or stos push inc cmpsb mov adc test mov lret test cmp sbb cmp movsb flds int3 or mov xchg je in addl subl (bad) pushf sub push mov sbb push lods les mov add cmp call int3 shll shr push pop add mov add or jo ljmp fisub mov jg adc dec adc inc mov neg inc icebp data16 popa mov xor je nop cmpsb rcr pop mov mov pop shr ds shl jmp mov jne cmp nop xor push out dec xorb fisub and or (bad) in mov not (bad) ficoml sbb cmp fiadd lods shr fimul push ljmp or ficompl int3 lods pop xor adc call cmp or push jp jge mov cs loope cmp andb dec popa sbb and int3 movzwl test jb das loop lcall mov mov inc sub cvtps2pd leave xor fidivl or jge or loopne add or xchg mov mov lea out or push mov push lret cmp add push jno fcmovnbe adc loope jg je pusha or or mov sbb mov loop jbe sahf (bad) (bad) cwtl movb push rcl shl jns out aad xlat fmuls pop ss (bad) sti fstpt lcall xchg je movb jmp or xchg rcl insb insl daa and jne lods sub push pop and (bad) cmp enter pushf in or push sbb fildl add add add rol dec aad xchg mov imul jle les maskmovq divl add xor mov push pusha je jle (bad) pop dec push or cmp insb iret scas in das or sub pusha (bad) shrb jno or in cmovb add push dec and in or mov adc pusha inc mov inc inc notb sub in sar inc add xor add neg sub inc (bad) or mov loop add mov scas cmc popa aaa outsb sti mov push push inc jle push js cmp in mov add fadds push or jb mov test add cwtl les fadd test dec cmpb mov idivb into sbb movsb cmpb mov incb lock and insb pop clc pop subb add sbb add int adc adc add adc (bad) std mov bnd sbb cmp sub inc add cmp mov inc adc push pop dec inc sarl lret jb loop add orl (bad) lock cwtl (bad) mov addb lcall add jle lea mov clc add xchg add lods mov and inc (bad) jne data16 jg es push or es rclb adc add push push fs push fist sbb rcrb insb add lods mov add dec mov sbb rclb add clc jg add shrl arpl or decl cli jb out adc sbb adc or add clc ret outsb add sarb jge mov neg push subb inc pusha mov add int3 jmp mov push pusha lods mov adc mov addb push jo sti xlat outsb xchg lock gs pop fsubrs and cmp (bad) repnz in idiv push jns aaa dec inc in cli imulb test push adc loopne push fsub and rorl pop les negb jmp pop and or xor shr les add std lret jo dec clc call aas mov jno adc out mov cmpsb (bad) jo loopne and leave rol mov test mov enter xor adc mov xor jecxz or cmp inc rcrb je inc inc inc inc repnz mov inc fsubs sub or pusha rcrb insb lods and lods lods clc icebp popa ret mov push mov in cmpsl push xchg mov xchg (bad) fwait jo cmp cmpsb fidivrl mov add jl inc inc cli lods mov adc cmp mov cs fisttpl (bad) (bad) xchg or mov leave adc add adc fmuls cmp add lahf test push or dec (bad) cmp jno call xor (bad) jb loopne lods bnd (bad) adc ds and xchg inc (bad) jb add jae pop das sbb arpl mov push int3 sub stc push sarb loopne mov inc sarl inc mov push or mov xchg lods push jae jg and xchg pop movb inc pop in jno inc add xchg inc into mov clc mov jnp adc mov inc push out adc sub xchg addr16 mov jge add test push loopne call push sahf adc adc or pop mov fisubl sbb push sub sbb push loopne ja test dec test imul add loopne outsb inc clc lea or inc scas fs mov repz dec (bad) ficoml movsl in xchg loopne add nop rorb pop incb fsub and sub mov pop or in push cli rorb testl sbb test ds ljmp fiaddl fild lock inc enter jno pop sub and dec int3 sbb sub mov enter testb lock call dec mov in lock movb dec xchg dec mov dec cmp jge popf adc xorb movb dec cmp jae inc or stos dec std incb sub and lret mov movb orl mov and testb int sub mov lea sub push clc dec and and pop loope inc popl add or pop mov add add add inc fimull or and inc mov add cld sar and push mov stos jle outsl je into je fisubrl mov jmp or call jo mov push or pop jne or jmp or lods (bad) lea dec adc ret ret sub add mov mov sbb je adc mov add ret mov pop (bad) mov mov iret enter xor into pusha inc (bad) fs test lods add shrl add jp outsb mov mov test inc add cmp ret out ret or sbbb push fstcw push dec aas dec xchg sbbl lret sub ret sbb fcompl mov mov mov cmpl and mov or push hlt jo pop jmp mov mov jp push mov add jo pop fld data16 mov je or push shlb ret xchg lea jo mov jnp minps xchg push not sarb add xchg xchg dec xor out pop or sbb add idivb push dec sbb inc push es js incl mov or mov stmxcsr jo add test sub or add or push jns add add mov or add ja jns cli je push inc mov jne dec push cs dec mov into mov repz inc pop sub sub loopne pop mov pop out icebp pop test mov and adc (bad) or jle loope (bad) or movsb jle push insl sub inc add (bad) pop xchg push xchg or mov add in popf lret adc xor mov popa leave leave andl cltd into xlat (bad) jg xchg xchg add lret leave jno sbb (bad) xor jbe mov add add sbbb jbe sub inc mov out dec decb (bad) fnstenv add jg add and call pop lea lea andl movsb repz or mov aad push idivl js add mov shr sub inc loope adc cmp lods or pop sbb lock pop in add in mov je enter xlat jne add mov je inc mov inc adc call test push je (bad) or loop pop (bad) incl adc jbe add lea jl pop sub sarl mov dec adc add or jb cld pop or pop pusha push jp adc icebp ljmp addl stos dec je mov stc jne dec adc jbe in lods and sub inc or mov mov (bad) lock adc push cli mov add add or les pushf lock cmp je xor mov out mov mov add push daa inc xchg test adc sub je add data16 adc push rcrl push testb xor dec sbb inc inc les pop inc and sbb adc es or cmp dec xchg mov int3 inc gs cs or ja rcr and and cmpsb and mov inc fsubs (bad) push or aam and test bnd in xor mov clc insb dec movntps cwtl and cltd sbb sub jne and rorl lock (bad) adc dec xor jbe dec pop fsubs push enter nop pop adc jbe mov jg fcompl mov cmpsb sbb (bad) adc int cmp cld cmp jne and shlb cmpsl dec js adc mov in and loopne (bad) cmpsb or int3 in or xchg fnstenv cmp mov les push aam lock out and xor mov pavgb adc ret scas mov fiaddl dec inc out xor sbb test insb cli pop test bound fsubr pop sbb ret sbb addr16 je test lods lea sahf sar inc or dec in (bad) mov pop fs push jae xchg jne ret xor loopne mov insb add neg add inc adc mov adc ret scas push sub xorl add lods ret cmp movl add je jno xor push mov add adc lock stos pop insl or leave arpl rol or adc sbb insb dec sbb insl and inc test ret pop mov jge push push imul out or jecxz and shll dec or arpl int3 mov roll aaa in (bad) adc add rclb pusha or mov adc xchg clc clc or or insb (bad) ja jg add aam pop in push xchg cmp lods push daa sbb loopne dec mov mov or xor fisub pmaxsw rol add and (bad) sahf push mov (bad) sbb mov add insl and dec fdivs mov aad or push lahf adc mov ja movl adc adc jnp pushf push adc dec or jl dec fsts ja adc out sahf push emms and xor loopne (bad) movl or or rorb or jbe sbb adc fucomi cmp (bad) sub sbb clc fsubl add icebp sub sbb mov add daa sbb pop fstp ret mov fisttpll or pop adc push fnsave push mov push push stos lret xor push in inc outsl pusha out cli adc and inc imul push jae sub jne and jne scas iret dec xor add addr16 jmp xchg dec sub and lods mov iret out inc jne gs jmp jne negl or jnp addl pusha push imul mov mov insb adc add fidivl push sti and mov mov add je jmp out cmp and sub xor sarb xor jne es fidiv cmp mov dec shlb mov les es jmp jne rcr sub arpl cmp outsb sbb jo jl xor fs arpl ret xchg xchg arpl adc js sar test test mov adc pusha mov aam test xchg add aam test pop repnz clc clc (bad) push enter dec fmuls xchg xchg adc stos fisubl add and push dec xor ljmp iret repz xor outsb movsl fsub jns cmpsl stc adc (bad) icebp jns out leave fcomip or xchg dec push push push out stos fucom sbb jns out pushw push pop xchg repz out int stc pavgb repz and fcomps loope mov ljmp mov jne inc (bad) sbb divb cs push dec jne jg mov pop inc out dec aaa cmp mov add ljmp out adc mov adc aad cmp add or dec call and insb popa je (bad) (bad) in and add inc outsl jo jb addr16 xor xor dec push pusha (bad) jmp outsb sub and imul mov xor add or pusha lret jg mov add add add jnp jnp adc inc cmp das pop addb lcall pop adc add stos cmp pop adc adc out push adc out decl push pop or or jns out or add add add (bad) pop jb stos add add and jb add mov add cmpsl xchg in ss pop pop or in in or or cs fiaddl aaa test adc pop or or or (bad) sbb push dec int3 sub insb jns out in sbb pop fsub jns out mov out sahf (bad) inc ret bound out loop xchg push shl jns out mov repnz dec lret push sahf out ljmp sahf out mov out sahf xchg cmpsb data16 out out xchg push (bad) out sahf out mov (bad) push sahf out sahf mov cs outsb jns out out push sahf pop fsubp jns out mov out sahf addl sahf out loope xchg push shl jns out mov icebp or dec leave sub jns sbb sahf out mov out sahf test and out in xchg push aad jns out mov cmc or lea sub out in sbb jns out mov repz testb push push push sarl repz xor mov repz repz repz repz or cmp repz sub stos stos repz repz sbb repz sbb cmp repz cmp mov repz sti sti pop iret repz pop xchg iret repz daa daa cmpsl cmpsl repz repz pop iret repz pop xchg xchg push push xlat cmp repz aaa aaa mov repz repz div bswap repz jg cmp repz das das scas scas repz rep outsl out out pop iret repz pop lahf lahf pop pop fistpll repz aas aas mov repz (bad) jmp jns xlat xor and push sahf out sahf xor dec sub sahf out sbb js out sahf out and adc jns jnp xor add push js out mov imul add add adc sahf out or add or jns out push push push push jne jns add or add push or (bad) pop js sbb pop xor add add add leave repz or or leave test or push maskmovq negl pop xchg sbb adc adc inc dec dec sahf adc dec cs sbb in in sbb or lds mov xlat lahf das jb jb aas adc adc adc pop jb adc pop pop sbb call sub sbb jg addr16 and cmpsb adc pop mov jle sbb icebp mov sub xor out dec mov sbb xor outsl mov push xlat or sbb xor addb imul and inc fs gs pop or inc bound cmpsb adc iret repz pop sbb and xor repz inc push arpl cmp repz arpl fistl pop pop out jo inc or mov inc popa add sahf out push push add add sahf out sahf or sbb xor xor mov (bad) dec sarb ficomp mov push push outsb imul cld ljmp ja and arpl je outsl outsb out enter (bad) (bad) in cs imul outsb arpl gs outsl pushf xchg insb cmp jb dec inc push dec inc dec xor cs dec dec outsl inc gs jl (bad) dec inc insb jae jb rcpps push popa insb jne inc (bad) and xchg inc insb insb outsl arpl jb js je jb lahf std fcomps xchg jbe fs inc addb add js xchg lret and xchg (bad) (bad) (bad) lcall and and es sub sub sub cs xor xor xor ss cmp cmp cmp pop add cmp inc inc inc inc dec dec dec dec dec dec dec dec push (bad) cs mov sbb xor pop inc pusha popa bound (bad) mov push insb insl adc jb je jbe js jp jl dec or jle add imul rclb rclb jb,pn push push and sbb cs dec inc and outsl push xor inc loop jo insb xor (bad) imul jae insl popa adc data16 ret je insl adc je and stos sub sub and bound cli sbb stos jns dec push arpl or outsb data16 jle and arpl fmul insb mov sbb xor and repz insl enter inc subl push scas loopne jne dec mov shlb or out insl bound (bad) fs xchg and jbe dec push int push push test fisubrl mov fs mov jb bound push and je jo inc push and push or orl pop mov mov test mov fldenv or sub dec sub shlb clc das arpl cmp arpl dec popa sub mov pusha mov clc outsl jb inc xchg (bad) imul out xor sbb or push lcall pop in popa add sbb pop xor pusha sbb gs push fistp dec rcl push int mov xchg aas shll repnz xor hlt pushf orl add sub ja outsl mov ss in xor jo and imul and xchg or pop push gs (bad) cmp push or lds xor out andb es or arpl add add xor jmp aaa arpl ljmp in or das imul in push dec mov inc jno (bad) rcll add push leave nop xchg insl jecxz pop shll push fnstenv adc in or insb popa and and or inc enter jne shlb mov sbb add jo sub cmpb push cwtl jb push sub lret inc sub jmp loopne pop dec jmp xorl sub inc jne add gs hlt mov dec and dec cmp push std mov adc push gs stos adc outsb inc outsl js ljmp insb xor or inc mov and sub xchg scas xchg and adc addl cmpb mov nop add add xchg add push add add push and push add add add push fsubr inc add aaa inc sbb push add pop add das bound adc and (bad) (bad) lcall addb xchg lea xchg xchg xchg xchg xchg cwtl cltd (bad) (bad) (bad) lcall lahf mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov clc mov xchg ret (bad) (bad) enter (bad) dec lret int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne loop in out call (bad) ljmp icebp repnz cmc div clc stc cli sti cld std (bad) jmp xor add inc mov movsb fsubs movsb jg dec dec cmp cmp fs cmp and jns add das inc aam xlat das adc or push cltd je ds popf inc (bad) fidiv pop dec sbb dec repnz addr16 lret mov xchg outsb rorb icebp inc jo imul sahf adc bound daa dec popa outsb adc jae scas cmpsl xchg popl outsb jns jg addr16 popa (bad) jle pop mov fs xchg adc jae fbstp fs sbb dec outsl outsb and jae mov jbe sub inc aas out ss mov dec bound and push enter lcall jl dec imul jae mov cmp sub inc jns daa pop mulb xor and push jns mov and arpl divb pop addr16 cmp add sbb popa addr16 jbe mov pop cmp imul (bad) jbe in xor mov push lahf fs int3 xchg inc add cmp popl clc mov xchg cmp push lods test popa inc jo pop fs outsl lahf lock fidiv push xchg pop pop pop push add mov daa add inc add mov pusha insb call cmp subl jp pop and pop mov popw adc sbb in (bad) push push push push dec testl dec shrl add outsb enter add push fildll gs lea jg imul call xor popa test jae popa jb ljmp gs mov pusha pop adc (bad) jg mov or pusha push lods sbb or shlb das je outsl xchg jne pop rcl bound mov rep push cmp ds and push das push sub es cmp push addr16 jle sub add out mov ds jl mov das sub iret popa jnp mov sbb aaa push outsl jo imul dec and cmp ja nop ds push and pop pop add sbb adc jb divb adc (bad) fnsave xor mov push mov gs sbb or mov adc push addr16 fs jl out inc sbb dec sbb jns out push xor sbb add ds repz pop lock pop adc fdivp xor or adc mov jns stc push addb push int3 push enter jns sarb out mov sahf out out mov sahf out je insb push out pop daa push push push iret repz dec dec inc inc cmp cmp repz sub or ja cmpsl push push (bad) mov lock out push xor adc xchg push lods test push cmp repz cmp adc sahf ja hlt adc push mov sahf out adc data16 mov sbb iret test adc (bad) inc out or ja loope ljmp dec jb dec loop adcb ss outsl movl mov daa scas rcrb mov lods add push dec or mov (bad) or cs (bad) or test data16 pop mov pop pop jo cmp fs jo add roll and test outsl arpl add dec les call pop aas pushl dec roll add (bad) mov push cmp incl in mov pop incl sti pop sub pop jb add dec add mov ja negb add out xor (bad) xor arpl ja idivl push add push or push (bad) cli addr16 jg pop add imul addr16 add push push ret adc scas dec inc je inc add jns jns insl pop outsb sti mov fs add pcmpeqd add out dec inc adc clc cmp pop inc jae mov jnp lods sahf (bad) jb gs arpl ja jbe je sbb pop arpl jo inc sbb arpl and mov add sub jle or and lahf subps sub pop cs inc (bad) out xchg jecxz (bad) popa mov outsb mov dec add outsl add ja mov pop mov dec arpl outsl add es in push sahf push outsb adc sub mov js inc jb,pt lret push ret jnp push mov cmc adc outsl inc insb in and aaa push add pop jge pop sub add jne jae pop out std outsl jnp xor inc or outsb aaa and inc add mov cmp cmp icebp (bad) idivl jg and jge jo outsl idivl cmp xchg inc das bound pop xchg ret mov add mov gs xor pop jnp mov repnz inc cmpsb fcmovb jnp xor xor scas inc test scas add (bad) ficom lahf and mov ss xorl and or cs push lock fs daa jae out shrl pop or jo insb push jae shr add push add (bad) push mov shll jne push inc jo (bad) dec jae cmp mov inc inc mov push xchg aas es aaa outsb xlat xor jae jb mov out (bad) shrl and gs mov das push xor push add pop and push dec dec mov push rcll je insl push add (bad) cmc loope jnp scas ret ficom rcll push pop xchg push adc clc mov or inc inc pop imul push pop push out dec push pusha out sub add sub push loop pop js jae inc je lds pop outsl fcomps (bad) jae ja dec fistpll add popw jp imul aaa js and or js sbb push push aaa jae outsl pop lret ja ja sub repz fwait cmp pop popa repnz pop jns test xlat (bad) sbb jb divl add add cmp jnp adc sub jae mov daa (bad) das and jno rolb jo sbb gs adc adcl arpl out sub fwait or cmp inc jecxz (bad) xlat repz fiaddl sbb push mov mov push inc ret fldl dec (bad) mov data16 cmpsl je mov add pop cmp jmp inc loopne add mov adcl cmpsb inc lock jo les aas push out ja daa jl fbld incl outsl das pop pop fcoml dec push mov dec and je aas or aas xor push testb outsb add add fsubr popa scas (bad) sti pop push pusha scas xchg dec and stos sbb (bad) add or xor jne xchg add fwait arpl outsl lcall adc (bad) mov lods shlb mov dec fwait daa xor mov (bad) and (bad) (bad) insl bound or insl lock pop or jnp add inc insb push testl (bad) shll rorl (bad) out in loope dec inc push pop lahf mov lahf jae insb sti pop movsb dec mov mov jae mov add outsb test xchg xlat xchg insb add xchg and aas cwtl sbb add and push dec leave and ret mov dec jo sarl das cmp push fdivrl daa outsb add iret push out xlat add das jne pop sbb add fwait out cmpb pop add mov popa (bad) aaa add iret arpl jne ss out pop dec (bad) into and inc cmp xor (bad) out pop dec inc adc push ret (bad) pop adc or roll push subl adc fistp or iret add (bad) inc inc sbb stos movb add iret ja dec dec out ja negb lret adc dec pop sub es aad aaa jbe mov xchg sub jns roll pop (bad) out and adc scas popa sub (bad) (bad) pushl popa bound cmp cmp cmp aaa sub sub sub cld mov bound data16 dec cmp inc inc xor aaa inc inc inc clc in aaa (bad) xor insb aaa xor xor inc cmpl je sbb push add jbe call call bound dec add push hlt out mov inc adc or push add mov aaa mov jge outsb mov push jecxz mov pop (bad) push fsubrp jge ds add inc sbb outsl jle mull cmpsb push add inc or add sar inc pop or mov dec aam push scas shlb arpl je adc cmp jb xor xchg dec aas mov ss fild idivl inc ja ret cmp sbb inc pop (bad) icebp (bad) lcall adc dec add pop jg pop inc xor add add inc inc js inc sub sbb sahf cmp sti add xor out mull pop mov push bound scas or ljmp out add and jb pop aas sbb mov dec int mov ret add fdivs jecxz ret scas orl and test ja mov ja jg add sbb std mov dec les jge xor outsl xchg push (bad) les popa insl dec inc outsl outsb outsb arpl test pop popa jae movl imul add inc fsubs aas rorl aaa xchg (bad) pop add sub (bad) push inc dec push push pop lcall dec inc dec pop inc push inc inc push aas mov outsl pop inc dec push dec sub dec dec dec inc mov add mov sbb dec cld addr16 imul cwtl push xor add test int aaa (bad) adc pop push sti stos adc setl jno add jnp add and cli pop cmpsl rcl pop scas cs sbb fild fistpll xor mov scas adc mov (bad) xor cmc (bad) fistpll daa cmp xor sub xchg arpl or cmpsb (bad) adc lahf xchg xorl jne push ret push outsb pop aaa arpl lock fild jae cmpsl inc inc arpl subb imul aaa pop mov mov inc das arpl xorb add scas mov mov sbb jg daa lcall (bad) xchg fdivp or inc and add lds xor jae add push inc mov xor gs and jb inc sub jbe dec into js pop (bad) pushw sub add (bad) xorl pop sbb add xchg pushw push mov aas data16 cwtl and inc (bad) cmp xor mov ret inc cmp cltd addb popa add jnp outsl xor xor pop fcomi fidivr or inc (bad) jecxz xchg cmp test movsl mov (bad) push lods cwtl (bad) mov aaa add aam js jae jb add aaa inc push data16 js (bad) adc add popa add jns xor fs imul jae (bad) dec sbb les fs pop (bad) or dec mov nop or outsl push (bad) xlat add fistpl xbegin dec mov ja out ja movsl add xlat movl daa and popf jne inc bound (bad) dec and add inc jg or cmp dec jbe pop pop jnp scas imul inc push jmp inc sub out cmp out add addr16 pop aaa sub jnp sbb push inc push cs inc or adc scas (bad) and fwait imul mov jo add cmp arpl xor cmp xchg jo je insl fist icebp lock gs daa dec (bad) out lcall outsl inc loopne sub sti push inc insl and dec and testb push add mov inc and dec or add add xchg and loopne jg fstpt sbb pop jg lock add icebp adcl mov push add ja fs test xorb outsl jb mov inc jbe adc dec cmp mov into ret pop and add lahf push xor add mov mov insb mov ss ja add xlat mov jns adc push sub mov addr16 pop cwtl push aas jg cli aas sub and mov mov mov push add sub orl pop mov add das mov push arpl dec das and scas mov add and fisub pop out xlat push push jo inc andb xor lock lods jmp add das inc add loopne out insb adc add jae jbe daa scas mov ret push add rclb sbb sbb ret jnp mov push arpl jmp inc lahf pop mov movsb arpl and xor inc pop push jecxz mov lret and ja test cmpsl mov imul dec sbb pop push mov cmpsb adc sbb add (bad) mov sbb push xchg arpl pop insb fbstp loopne imul call das sbb jecxz pop inc push outsb (bad) adc push pop jne jae add dec pop add sbbl pop xchg adc and dec add push cs jae imul inc and (bad) dec or nop inc repnz and in xchg sub xor cmp sarb hlt cmp inc inc dec jae les insl outsl jb sub sbb je push and jbe int3 mov lods cli in iret outsb jb mov inc dec (bad) xchg (bad) dec jb push inc push das add mov mov inc dec adc mov pushf push movsb daa aas outsl add pop add mov add in pop in in daa dec test and mov sbb daa pop or cmp inc add sbb pand ja aam pop arpl inc mov andb sub inc pop and dec aaa inc popl jns or aas cld xor fcom ds and rorb inc (bad) cmp inc iret push cld add push lock mov aas ss (bad) es cmp int3 fimull jg push aas pop xor daa lcall sti fs sub xor aas adc push je lcall test aas cmpsb sbb sarb aas cltd (bad) mov xor mov aas js inc neg lahf es mov cwtl mov sbb inc xchg pop fsubrs aaa or sbb je aaa xorl insb pop out pop add and pop or popf xchg call xchg jnp pop push daa les add cs dec mov and inc cmp and je mov push sgdtl inc xchg push inc mov inc inc scas jg and ja inc inc daa rolb arpl repnz push or sbb sub adc xor push inc jo xor in sub repnz or jb dec and inc inc pop dec and loop fbld cs sarl sbb call adc mov popf push push outsb mov pop pop add cvttps2pi loop dec sub push cmp test dec rorb push xor pop pop leave mov pop push xor or xchg xor push femms ja jb push mov mov (bad) fidivl addr16 and add push jmp and pop dec jo pop pand fcomi pop fistpl pop xor add in cmp cmpsl dec cmpsb loope sti push fildl pop cmpsl fistpl jo roll fistl and fisubl (bad) mov or mov or mov pop clc push xor cmpsb scas cmp lahf out movsb inc out cmp adc and and in and in enter aas daa cmpsb xchg movsl push mov movsl iret push test adc mov fldenv loope dec xchg lock in es pop lods scas mov adc les fsubrs fadds add xchg test xchg push push clc lods or jne outsb gs ss fs (bad) lcall add imul add das mov aad add jbe test push mov aaa and add xor imul negl sbb gs outsl fs pop and fdivs bound outsb faddl rcl and pop je outsl add add outsb jns fistpll movsl dec in dec mov insb add mov jae sub jb bound pop jae add xor inc shrb jl push and push pusha fcomps inc xor aaa add add jae xor add bound ljmpw dec (bad) jae outsb imul arpl jae pop push insb sub xor adc inc or add lock xchg add testb add in mov adc pop sbb ret or push xor das push adc fidiv cmp ds push lods or fucomip cmp or push jae ds das mov wrmsr add push ds in jbe das pusha mov mov outsb mov addb jg das pop mov sbb nop or cmp js jbe out jbe aas rorb adc push in sub mov or mov mov incl push unpcklps push jecxz sub je xor (bad) fcmovne decl aas test jbe mov mov call (bad) aas pop nopl cwtl lods cmp rorb pop xlat das jl fucomi mov cmp fdivrs pop das insb setge outsb mov aas mov dec shr mov das push movhlps fucomi jbe mov xor fucomi (bad) (bad) decl das bound and movsb mov add (bad) inc aas in (bad) fucomi jbe das pop bndldx xchg incl das jp cmp aam fisubrl fistl das push sub mov (bad) and mov dec aas hlt incl das push movhps outsl incl das jbe ss (bad) fisubrl fisttpl das data16 aas lods pop (bad) and in decl mov pop nopl pushf jmp jbe in jbe (bad) aas fdivr sbb outsb mov in outsb ucomiss mov jbe fisttpll aas cld call in mov cmp paddusw stos (bad) jg jmp and in mov jno pop aad lcall sbb xchg aad jbe (bad) jns cmp sar mov outsb pop imul push (bad) mov repnz unpckhps outsl add mov sysexit jg (bad) cmp and cs fldt cmovne ljmp nopl lcall fstpt cvtps2pi xchg aas mov dec (bad) fsubs iret adc in mov jae xor adc and (bad) mov pop mov out in jbe lcall sbb xchg call outsb pop jnp cmp (bad) incl in jbe movntps mov aas pop aad mov dec aas idiv push (bad) test (bad) pushl aaa fucomi mov addr16 aas fldt mov pop mov mov lcall pop aas sahf stos fucomi mov aas fdivrp pusha mov das aas mov xchg (bad) cmovg (bad) jmp leave inc shll xchg dec and leave (bad) mov xor and leave inc jmp dec fnstcw stc lds in and leave inc aad xchg dec xchg dec cmc int leave inc xor dec and mov std ret xchg dec and mov xor dec and lret leave inc xor and fildl xor leave (bad) cmpsl out inc xor and mov inc xor and leave out lahf (bad) inc xor dec (bad) fcoml pandn fstpl adc fstl push add jg inc or pop add loopne fwait lcall ds out add xadd pusha jg in ss sbbl sbb push popa and ret outsb jg incl xor xor enter rorl xchg pop fist imul push ljmp jne notb gs jnp push imul rolb fsubrl jne jns sub je mov adcl pop pusha and dec aaa (bad) cmp aas add cmp repz nopl jg push fwait sub sbb or cli idivl inc pop cs inc push rcrb in lds inc inc cmpsl incl test ss or aas add insb and add pusha pop aas (bad) adc cmpl pop push add or or add mulb jl in in jns and cmpsb fisttp mov cld push cld pop scas inc jle test shll int3 push cmp in pushl inc movzbl mov in call and push ficompl mov pop fisubrl xor fcomp loopne xor cmp jae or cmpsl inc inc pusha movups cwtl mov imul or dec cmp dec je sub mov mov mov jne add aaa mov cmpsb sbb testl fisttpll or inc or or fsubrl mov push iret sbb pop scas adc ja outsb daa mov das and mov push das push xorps pop imull add jo jo loopne lahf jb push pop xorb pop orl (bad) or hlt xchg add mov outsb mov fbld aas xlat sbb test sbb dec or imull outsl add or mov inc neg pop jle pusha push or pop inc dec pushf pop inc cmpsl insb cmp out push adc lahf push sbb cmpsl stc in sbb repz sbb push fs mov push pop out inc jnp push (bad) (bad) push fbstp inc push rolb cmp mov push jns jp jo into decl mov fnsave loop fimul mov aam in push add lea xchg pop jnp mov (bad) nop xchg pop jb xchg xchg xchg xchg and pop scas andb test pop xchg add out xlat push sub aas pop add cmp lret mov and addb mov mov scas add mov adc cmp repz test mov cwtl nop mov repz push dec cmp repz inc inc cmp repz repz sub sbb outsb iret adc pop add clc adc cmp push testb fnop (bad) iret repz sarb nop xchg push mov test andb add (bad) cmpsl cs jno pop xchg sgdtl jnp lds dec push inc jg jge push adc sub add seta (bad) aam ds loopne xchg adc add lcall dec jnp in or adc imul push dec insb popa out fidivr push andb jns cmp or ds repz push (bad) (bad) cmp out int3 js in push pop insb push push sbb fidivl (bad) (bad) (bad) pushl jecxz mov mov mov push xchg mov and fstp (bad) fcomip call popf mov ret mov orl and and pushl lcall and les lods jno pop fadd loopne cmp (bad) (bad) (bad) incl loopne pop idiv (bad) lahf out jl (bad) jae mov cmp inc add sub test (bad) (bad) (bad) (bad) lcall mov pop sub sub into ds out push test (bad) (bad) (bad) pushl mov cmp loopne sub test fdivs out je (bad) (bad) call js cmpsl decl jp add pushl scas sbb cli (bad) lods insb into (bad) (bad) (bad) decl and mov int and sub fcoml cmpsl dec (bad) int3 bound sbb cmp sbb outsb into movsb adc dec repnz sbb insb stos xchg sti inc data16 icebp xor xchg or (bad) (bad) ljmp and ret push xchg xor stc call scas inc mov pop icebp mov (bad) (bad) jmp lds and lds xor inc jns adc (bad) (bad) incl pop out push xchg push cld push fiadd lcall and jl jp lds dec (bad) (bad) (bad) call jae paddw inc in and push xchg xchg pop adc pop addr16 (bad) (bad) (bad) mov or mov cmpsl ror sub rorl mov test jbe outsl (bad) (bad) pushl cs movsl in lods xor and mov or xchg std (bad) jmp inc leave jns popa aad (bad) cmp push jecxz scas xchg pop out pop mov test incl push dec mov sub mov insb pop mov rcr (bad) (bad) ljmp fiadd hlt xchg or negl xchg dec jbe out jo mov mov pop test cs (bad) (bad) decl in sbb cmc pop call sub push pop (bad) dec adc sub (bad) (bad) incl (bad) sbb subl xchg les aam cwtl imul (bad) (bad) mov dec hlt jne js loope cmp add notb push inc lock push (bad) incl popf add and dec lods lods (bad) cmp lahf cmc cmpsl mov mov clc les stc mov out xchg adc cmpsl stos cmp push in (bad) (bad) call pop mov in push lods outsb test pop fisttpll ds call adc mov (bad) js sbb push sbb gs js rcr negl mov jg xchg clc and adc stc dec sbb sbb push sub inc ja (bad) call fmuls call das (bad) mov xchg ja,pt unpcklps xor mov (bad) repnz xchg jp pop mov outsl add gs scas mov (bad) (bad) (bad) incl jns cmp jmp and movsb sub or (bad) (bad) call icebp hlt sbb jp pop push sbb in mov xor push mov insl and cmp nop sbb (bad) (bad) call pop mov xchg mulb mov mov cmp jmp jbe (bad) (bad) (bad) jmp mov xor or xchg nop adc and jp and (bad) (bad) (bad) mov mov add pop int3 pop (bad) shrl lds push repz jmp cli (bad) (bad) (bad) decl add in (bad) test push inc inc adc jecxz jbe fidiv in decl dec loope dec arpl push and movsl sub (bad) (bad) (bad) (bad) out cwtl mov inc xchg adc pop jbe cmp mov and mov (bad) jb inc mov loop aaa aaa mov jge pop out jbe,pt out push (bad) (bad) (bad) pushl jl cmp and sub or dec hlt mov ja out mov (bad) ljmp leave jb xchg dec and mov xor outsl into push std daa in loope call mov imul mov adc cmp cmp imul cwtl paddusw (bad) std cmc or push int adc push fiadd mov fldcw jl adc (bad) (bad) jmp jae nop out jl adc (bad) xor fidivrl jge movsb cli in sahf sbb (bad) (bad) out into mov pushf adc aas arpl mov dec add test testb or cld (bad) decl jge xor cmp jae inc (bad) dec (bad) int3 jmp or sti mov sti movsb sti mov mov mull shrl jno ja sti cmp mov (bad) (bad) cmp pop loopne jo mov sub sub pop lock jmp ljmp lret xchg repz aaa icebp in mov aas mov dec cs or push cmpb ds outsl insb pop push call mov (bad) insl lcall mov fisubl sub dec daa pop sti pushl jne xchg cmp in cmp jnp insl pushf or push fistpll ljmp xor add inc add add int3 push mov es xchg fs mov lcall ret cld out jge stc dec stc mov popf jnp cmp mov cli sub (bad) (bad) (bad) cmp mov std repz mov mov insb mov jns adc (bad) ljmp sub xor inc push dec cmpsl xor sahf push adc jo sub (bad) (bad) hlt bound pop fldenv scas insl dec ja dec fsin mov and scas xchg stc clc jmp (bad) (bad) (bad) jmp sbbl add loop inc xor iret std out (bad) fbstp dec inc jecxz jg (bad) (bad) (bad) decl dec mov fucomi sub mov mov sub mov cmp cs (bad) pushl xchg mov jno mov xrelease outsl adc xchg push (bad) lcall pop inc pushf fnstcw cld or lds fwait call es (bad) (bad) call lea cmpsb movsl jb fstl mov (bad) test pop imul pop int push lcall pushl aas mov push lods mov lcall outsl cmp cli inc pop add stos (bad) pushl push mov pop jl mov int xchg repnz (bad) pushl cld pop repz mov adc xor mov call push in pushl icebp popf sbb decb call mov mov (bad) lcall mov mov push lods les cmpsl mov pop sar pop lock inc je sbb xchg test loopne jmp inc das std (bad) (bad) pushl ret lret lods rol cmovge cmp mov mov mov xchg mov (bad) (bad) (bad) mov adc cmp mov aam aam mov inc xor adc (bad) (bad) mov cmp aam std xlat aaa adc or cmp popa std cs (bad) pushl add cli pop lcall mov (bad) mov imul xchg sarb push lock cli mulb or push lcall mov sub repz mov gs pop ljmp ja loope (bad) test insl jge or notl into insb mov (bad) (bad) (bad) call ss call or xor sbb jmp jmp pushf addr16 je (bad) (bad) (bad) pushl pop repnz pop cmpsl loop mov adc (bad) lret dec iret push ss stc mov shll into dec int iret ljmp fxtract inc jno mov pop add aam (bad) (bad) mov out mov cmp fxch or fild (bad) (bad) (bad) (bad) inc je shrb loop add mov inc imul xchg popa call in mov aad pop ss mov std cmpsl cmp arpl push outsl sbb or lcall scas xor scas pop js fistpl leave xchg lcall adc jno jmp (bad) (bad) (bad) lcall ret push sbb cwtl bound out add bound mov pop (bad) jae mov (bad) (bad) (bad) (bad) call insb or clc stc (bad) hlt mov add loop push xor adc cmpsl insl cmp (bad) fcomip je dec aas loop push imul sarl enter mov pop add lahf fdivrl fdivs fistpl mov (bad) jbe push fdivrp (bad) (bad) jmp sahf ds ret stos mov pop inc dec arpl fistl jecxz test jnp (bad) (bad) (bad) lcall jne xor sub lock out imul cli ss adc xchg inc xor mov dec xchg decl arpl subb mov test (bad) (bad) decl loope sbb movsl sahf mov shl lds insl inc out sahf jl jecxz (bad) (bad) call stos outsb jbe cli cmpsl lret loop pushf pop aaa (bad) jne xor xchg pop ljmp ljmp adc jp mov mov pushl sub push adcb adc call cwtl jnp call push add mov mov xor lock sbb add and inc xorb faddl fsubrl ljmp decl inc (bad) dec movsb cmpsl jmp lret and call sbb ljmp push call test xchg ret nop out in stos mov (bad) fildll out int3 ljmp xchg cli and sahf or (bad) (bad) decl push repz loopne cs in sub adc sub cmc (bad) pop in or mov outsb pop jecxz xor xor test addb call mov jb (bad) (bad) dec and ret inc add ss sarl or push sbb sub mov push mov pop mov mov fdivrp (bad) lcall ret sub and test mov popf ja pop rcrl (bad) (bad) pushl xor in fsubl in xor loopne sub sbb xor call std jmp (bad) inc and bnd stos movsb insl push lock push xor shrl jg cli cmpsb mov decb or pusha cltd scas adc xchg inc into movsl push cltd sar (bad) ljmp or mov dec dec xor aaa rcl and imul icebp cs jg sub inc lods and fiadd imul cmp (bad) call mov sbb lret nop enter (bad) (bad) (bad) decl iret cmp mov scas mov icebp push mov sub (bad) adc adc (bad) jmp cltd push sar cmp std adc cmp (bad) (bad) (bad) decl sub jmp pop xchg rcr inc mov xchg ds call adc leave xchg jns iret lods es decl dec xchg je mov lods mov aad cld xchg jle dec jmp je cmc fnstcw (bad) (bad) (bad) lcall cmc xlat mov cli jae cld mov fmulp mov jno xchg xor mov (bad) incl les mov stos mov sti pop or (bad) ljmp enter xchg sar ss adc lds cmp (bad) (bad) (bad) (bad) cmp mull sbb sbb or sarl dec in (bad) int inc cmp mov and add scas xchg and pop mov mov jg ret sub (bad) (bad) lcall sub jmp fsubl pop pop push mov dec fwait mov dec jae or (bad) (bad) (bad) ljmp cmovae add aaa xchg div dec movsl (bad) addr16 lea and aas iret outsb aas (bad) (bad) (bad) lcall jp mov lods ss out (bad) clc push sbb add repnz mov mov (bad) decl mov fbstp mov mov add jg jnp (bad) imull (bad) in (bad) (bad) decl rcrb cmpsl lcall mov loop sub add sar xlat mov sbb popf pop das jg mov adc in fisub call fisub xor and pop cmp sub test test (bad) (bad) (bad) mov (bad) cli sahf push inc xor aas clc add jo aas loopne inc aam arpl ljmp mov add inc lea adc mov xchg repz jl (bad) pushl adc xor cld mov pushf (bad) jae cmp jge mov pop (bad) jg or xchg inc and lock icebp (bad) popa sub xchg rorb dec xor imull out push (bad) (bad) (bad) in lds or rcrl out pop xlat (bad) outsl mov dec push ds mov cld (bad) clc jbe inc in jo (bad) xor fdivl dec repnz inc ret xor fwait incb insb int3 sarb mov ficompl push leave movups (bad) (bad) sti mov outsl rcrb (bad) lret insl ficom push out jmp add (bad) ljmp pushl out pop in movsb int3 or sbb mov jnp pop adc pop je (bad) (bad) incl imul inc stc (bad) mov mov lods xchg or jne jle push jp movsl (bad) (bad) (bad) inc cmp or test std mov xchg js shrb mov lods subb (bad) (bad) mov adc rcr mov out lock add dec dec sub mov decb (bad) mov pop jb arpl sbb (bad) std (bad) lcall aam ror ret (bad) fsub push jbe jle jbe cmpsb mov jo lock jo out inc (bad) (bad) decl mov mov mov jle add pop mov (bad) (bad) decl xor insl mov mov dec mov imul lret jecxz xchg pop jle das idiv (bad) jmp or mov sbb fidivl bound popw movsb mov add xor push call cs aam xor (bad) decl leave je inc xor cmpsb jno imul mov cwtl mov lahf xor jb out xchg (bad) (bad) (bad) jmp add inc into in enter mov ds into push xchg (bad) je push (bad) (bad) cmp mov movsb xchg (bad) and inc fwait xorl out (bad) (bad) (bad) lcall sub push psraw dec xchg cmp cmpsb cld adc pop int inc add and sbb bound imul stc das dec sar (bad) dec xchg cmp adc (bad) mov pop jmp pushf (bad) mov jge cmp xor idiv (bad) jmp ds cmpsb cwtl cli jge fnsave pop outsl adc cmp push std (bad) jmp repz addr16 pop ret jbe or cs inc pop ret cmp (bad) (bad) incl (bad) std repnz pop fwait dec rolb dec int cltd dec pop cli mov pushl dec xor insl (bad) (bad) (bad) dec sahf fs icebp pusha mov insb leave iret jmp data16 jle (bad) jnp enter ljmp mov test mov es sets xor je pop hlt call inc movsb cwtl or xchg ror mov fisttpl jmp ficompl rcrl in cmp dec push ret adc push xchg mov (bad) (bad) (bad) ljmp jns bnd out ja lahf inc push sub sub cmp gs aam (bad) out add sbb add jecxz loopne jecxz (bad) (bad) (bad) incl (bad) adc (bad) (bad) mov pop add in mov fidiv int3 mov std (bad) js xor mov pop fxsave call jl push shlb push lcall lcall jecxz sub outsb mov inc xchg loop pop or pop std sub add icebp (bad) (bad) mov popf loop pop xor cmc sub or lea mov ljmp mov xlat cmc leave mov pop shrb pop sub push inc rep push lret (bad) (bad) (bad) ljmp rclb test jns subl test loop (bad) (bad) decl mov xor test lods push imul jne inc push enter ljmp mov mov inc shrl mov dec shll (bad) (bad) (bad) aas lods ljmp dec ja pop insb sub ficom lods xchg push adc (bad) cmc xor xchg fcomip lcall jnp repnz cmpsl jae pusha std jmp mov mov test (bad) (bad) call or and bound jne lcall xchg sti mov sbb (bad) lcall (bad) sbb sbb jl cmp int jp mov jbe scas or (bad) (bad) ljmp out or or pop test add outsb push dec xchg adc pop dec and and movsb mov (bad) (bad) incl push iret xchg adc xchg mov stc mov or into adc mov pop ljmp test sub push xor aas pop jg incl mov push pop push mov (bad) ss divb pop pop loop mov insl in xchg lcall (bad) (bad) (bad) call xlat pop dec outsl fwait mov (bad) mov xorl pop lahf inc dec or (bad) ljmp ret dec jmp scas sbb xor xor (bad) call mov jne fistpll add mov jle sti jge iret ja stc cmp daa cmp jmp mov mov cmp shlb sahf mov in jno adc shrl cmp mov sbb or (bad) (bad) (bad) jmp or xor pop test loop mov into lods lock (bad) (bad) (bad) incl (bad) scas int and fisttpl push notl fs inc inc insb fstps pop push fprem xchg (bad) (bad) ljmp sbb jge popf insl pop icebp frstor lds sub fildl pusha in mov (bad) (bad) (bad) (bad) ljmp imul mov push gs dec xchg inc and xor in jp xor lock mov jne or or faddl les ffreep push addl out jmp mov mov (bad) (bad) (bad) incl pop fdivrs push mov adc test dec pop enter hlt pop imul (bad) (bad) call aas mov in hlt popa xchg jne push push stos xchg jbe rcll pop lcall dec cmp aas gs cltd inc dec lcall in xor in repnz adc fdivr (bad) (bad) decl xor mov mov mov nop dec cltd (bad) scas push ror in aaa mov lock jg lcall xchg fs dec addr16 insl (bad) (bad) (bad) jmp xor fucomi std mov mov pop into lret mov addr16 mov xor js (bad) (bad) push xor dec mov pop pop xchg aad pop enter push repnz cmc stc enter (bad) (bad) (bad) lcall and mov cmp mov xor xorl insl mov jne leave (bad) (bad) (bad) (bad) jns pop push xchg into lcall push inc call xchg out pusha (bad) adc fcomip fnstenv sub test pusha (bad) (bad) (bad) ljmp mov addb int cmc out adc push clc sahf adc outsl and lret jae (bad) (bad) jmp and out mov fdiv jb mov jne push (bad) pop pop and push mov call std push cltd sub adc sbbl mov cmpsl leave pusha lahf in cmp insb jecxz lea cli insl in mov cmpsl lea (bad) inc faddp nop lea std repnz std push pop rcrl (bad) gs cmp pop add gs sbb ja pushl mov sar sbb mov outsl enter das or out cmpb (bad) (bad) (bad) lcall add add push in notb sbb xor jp jbe loopne push ret ret lea arpl xor or adc cmp push jne (bad) (bad) (bad) mov hlt push sub sbb xchg sahf mov int inc icebp dec push add cwtl pop mov ljmp rorb xor jno sarl mov push test sar ljmp push ja adc out lods cmc add pop out push mov jmp (bad) ljmp inc in adc cmc movsb mov inc icebp xchg cmp sub stos scas enter (bad) (bad) (bad) call cmc mov mov data16 or rclb cmp sub pop in dec push ljmp ljmp dec dec sbb rcr push inc ror mulb por mov (bad) (bad) pushl sub pop xchg (bad) sahf in push sub addr16 cmp push bound mov cmp sbb mov (bad) dec shrb (bad) pushl mov add xor (bad) xchg rorl aaa mov test xlat (bad) (bad) (bad) incl shl and jg test loopne icebp addr16 jae add jg mov pushl std sub push sahf pop jbe test scas xor or or ret addr16 xor popa inc clc inc mov test inc (bad) mov mov inc out push or or daa fwait incb (bad) mov pushl ljmp jne jg outsl jecxz (bad) cmc cmpsb insl lods push mov outsl lods xor (bad) fisubl pop pop scas pop dec pop cltd movsl lcall xchg push cmpsb insb (bad) enter cld (bad) call fs sbb pop jne xor fidivl mov or ljmp ljmp sbb loopne jecxz mov fistpll idivl sub jle or add and jo sub (bad) (bad) (bad) mov mov (bad) cs dec cmp jge pop inc sbb cmpsl mov xchg popa xor xchg sub stos mov sub xchg (bad) out fwait (bad) jne (bad) pushl jne arpl jno pop jecxz xlat fldenv jl cmpsl sbb inc std jmp (bad) (bad) inc adc in test in insb xor push jne insl lret jo int in sti add ss (bad) decl push xchg dec sbb das mov mov mov stos rcrl out dec loopne lcall (bad) jl push push (bad) jge dec dec in (bad) (bad) (bad) fisttp ljmp pop dec lods movsl cli sti in aam or and (bad) mov pop or call add stos out popf insl mov jb dec cmpsb (bad) (bad) (bad) call icebp sub push cmp push out mov inc ljmp jp xor (bad) (bad) (bad) jmp gs pop push negb and hlt push add divl into mov aas imul (bad) dec (bad) repnz pushf pop sbb jae or push jmp cltd out jno ds (bad) (bad) (bad) call jo sub adcl mul xor push pop mov movsl pop fildl push (bad) lcall cmp stos jno loopne imul scas xchg (bad) dec xorl (bad) (bad) (bad) call out mov cmp leave pop add mov clc sbb mov (bad) (bad) xchg cltd mov push cmpsb sub mov mov ficom lds (bad) (bad) jmp xor and outsb pop lret mov pop and in pop addr16 jp mov outsl fsin (bad) (bad) inc dec adc dec sbb and loope lcall or popf test sti (bad) (bad) decl mov test sahf neg addl out pop jno mov int3 xchg sbbb inc pop or cmp rclb mov sub out jg pop clc and data16 in push in (bad) cmp xor gs enter test dec fisttpl popa sbb sbb mov push sub pop inc sub jmp lret mov jbe in (bad) mov xor xchg (bad) mov push scas (bad) aas cmp adc cmp (bad) (bad) decl sbb sbb cmc sub (bad) cli dec aam in sahf ret (bad) jl cs repnz (bad) jmp mov xor cltd cmp push adc dec mov ret (bad) out add inc negb adcl jmp jle aad movsb and dec (bad) mov push shlb js pop je popf cmp ljmp pop and or in stos subb ret dec fistpll andl mov (bad) gs mov sti in clc (bad) (bad) (bad) dec push mov inc push jo imulb mov inc xchg mov enter (bad) (bad) decl xchg push mov int mov (bad) arpl js decl pop aaa fisubrl adc cmp (bad) (bad) decl fwait xchg cmp inc mov aam pop mov and std sbb sbb sub (bad) (bad) call push xor sub dec out call mov jmp les (bad) lcall xor mov stos movsw mov xchg popa adc push inc ficoml in std (bad) mov mov mov xchg push mov sbb jl (bad) inc (bad) (bad) (bad) mov std mov sahf stos icebp add mov and fiadd lock mov xchg sahf call cld pop rclb mov ljmp sbb adc (bad) (bad) cmp std addr16 ds jge in das out std scas or std stos pop int3 dec or dec shlb inc cli dec (bad) (bad) (bad) ljmp fcompl insl out cmp pmaxsw dec pop icebp xchg outsb mov jbe addr16 cmp (bad) (bad) (bad) (bad) in and xchg and xor and xchg imul xchg xor add mov mov (bad) (bad) (bad) jmp (bad) dec inc imul lods jg repz pop jb sub shrl jb (bad) jg adc (bad) fwait xor mov mov stos push repz orb xor ljmp xchg xor hlt push lods fimull dec shlb mov fcoms out xor sbb jecxz mull lahf dec cli xor sbb mov out mov out pop clc stos hlt jns inc es aam mov adc jmp (bad) (bad) (bad) (bad) fsubrp inc push mov iret (bad) jecxz and dec pop mov ljmp xor cld pop xor lods adc adc (bad) hlt jnp sbb mov ljmp rorb cmpsl mov xlat mov lret push sbb sbb in inc xchg mov decl repnz (bad) mov loope (bad) and pop pushf pop sti adc mov iret ja fcos (bad) (bad) incl cld ja pop (bad) xor mov repz fsubrs vpunpcklwd in (bad) (bad) mov mov mov add in je arpl rcll jno mov lods mov in or inc sbb xchg test out decl jmp insb stos mov dec xchg shlb inc jb ss add rorl movl mov inc or lea ret dec je leave inc aaa dec mov bound mov or mov je es (bad) push jmp xchg imul insl add lcall sbb cmp push bound mov enter insb int and mov adc std sub inc cmpsl mov push lret lret mov dec mov sub pop mov (bad) (bad) (bad) ljmp rcll push xchg roll into hlt fcomi out jno iret push mov dec out pop loop idivw dec loop fdivr ljmp js in (bad) (bad) (bad) mov sub sub dec int3 dec lods test dec xchg jns repnz push mov andl incl mov dec push in test push mov adc idiv les mov xor mov shrb call jmp shrl or mov jg cmp insl sub sub pusha in mov cmp loope inc push inc inc leave mov pop pusha (bad) (bad) (bad) jmp jmp int add mov cmpsl fnstenv mov lea in dec dec add (bad) cmp xor arpl (bad) int push mov lcall mov dec je inc sbb in movsl mov (bad) lea pop loop adc (bad) pushl mov test cwtl dec insl xchg sub int inc push mov test dec push lret pop idiv (bad) pushl aaa inc dec jno or sti in pop outsb iret subl sti push dec sbb daa movsb and mov dec imul in int pop (bad) fsubrl dec nop ja ljmp mov jno outsb lahf and (bad) (bad) (bad) jmp cli mov and push scas (bad) ja test flds inc dec xchg push inc xchg int3 or (bad) incl xor jg dec mov je test push loope inc dec cltd jmp dec aas jne mov ret imul adc xchg sbb jl lea (bad) (bad) (bad) pushl or (bad) adc jbe notl pop fsubrl pop add mov jmp (bad) call xlat outsb fildl popf or mov mov sahf mov xchg cmp mov xchg inc sub pop fidivl sar repnz jns cmp fucomip outsb mov test icebp (bad) (bad) loope lock jecxz (bad) (bad) (bad) (bad) jl gs bound (bad) (bad) sub leave sub int3 mov dec adc (bad) fildll (bad) dec mov out jp mov cmp (bad) and lahf loop push push cs push push add mov dec idiv pop out mov jo ljmp push in test dec loop xchg bound add add dec inc sbb rolb pop (bad) (bad) (bad) jmp xchg sbb xor (bad) fcmovu cmc pop into aam mov imulb adc and xchg pop pop mov idiv jmp imul andl movsl jae outsb push pop push or or icebp mov mov sub jns and add or push pop mov push (bad) (bad) decl gs pop fwait push fisttpl dec or ja (bad) mov fcoml (bad) lcall pop (bad) mov jne cmpsb mov sbb jne test (bad) (bad) call adc pop js jno sub xor sbb addl cmpsb fs lock (bad) (bad) dec lock scas mov inc aam (bad) (bad) popf in out stc into cmp std repz and (bad) (bad) (bad) incl xor mov add mov sub lahf aaa mov (bad) jno sbb (bad) mov jns cmp sbb enter lds data16 xlat adc xchg in stc (bad) (bad) decl xchg mov mov adc fs mov insb aam in and mov (bad) push xchg dec mov fadds out xor pop cmpl loopne pop push and loop (bad) sub xor bound adc push push add (bad) bound mov leave int3 cli (bad) (bad) incl enter push clc rolb push or fistpl bound mov int3 fidivl gs pop fcmovb inc mov in and addr16 sti hlt (bad) (bad) jmp sub repz xor cmpsl loope in icebp cltd inc mov fistp sbbb cmp sbb push roll or push (bad) (bad) (bad) out cli call test push inc lret test ss pushf fwait jle pop fildl xchg decb insl and sahf cld lods cmp fistp pop pop js test push mov mov sub out dec hlt fiadd and xchg jae jecxz cli pop lahf lcall jp sbb popa jno or inc lcall push lods or sub idiv jmp leave cmpsb ljmp xlat or add sub and or call and mov fiadd push loop pop xor lahf push mov and mov test idivb int3 dec repnz es xor mov imul fs scas clc insl sbb xor in push rol push xor arpl sbb (bad) out jp clc xchg sub int3 outsb inc adc adc push cld pop mov das test xchg sub lds push dec test (bad) mov jmp (bad) (bad) jle insb jg jg in (bad) xchg dec aas mov sbb sbb popa gs add mov mov pop incl loope movsl rcrb iret jmp (bad) (bad) mov loop ja sbb cli push cmpsb add cltd and mov pop mov xchg xor (bad) (bad) jmp sahf mov xchg pop es cmp jg loope in (bad) (bad) (bad) call enter (bad) aam enter xorl int3 imulb push repnz sarl (bad) pop addr16 (bad) (bad) (bad) fbstp fmuls daa jb push mov repnz jle lea add inc je and lret (bad) (bad) (bad) ljmp lods adc jbe mov sbb xor into (bad) js test add jge (bad) (bad) (bad) jmp dec dec fimul and xchg jmp fcmovne aad insl push cmp cltd fwait dec leave cmp xchg decb (bad) jmp jae mov xchg fwait std dec fildl pusha fcmovnb xchg stc imul enter stos (bad) (bad) inc shrb scas cmpsb imul ret ss insl (bad) lods xor cld int or mov jp sbb mov and in add je push shrb incl lret inc pop leave (bad) fiadd (bad) (bad) decl push test leave or inc in dec or adc push (bad) jecxz loope sbb (bad) (bad) (bad) pushl jp sbb sub xchg lret rcll cmp imulb inc cli enter mov xchg jmp (bad) lcall andl (bad) mov inc xlat cmpl scas push mov adc (bad) (bad) jmp clc mov mov mull push sbb and mov or jmp jmp decl clc dec dec mov sbb xchg pop jo fwait pop mov sub addr16 sar (bad) (bad) jmp xchg dec pop sbb cmp repz mov les sub mov dec mov mov (bad) (bad) call cs hlt xchg inc or in xchg leave dec xchg cs mov mov call sbb sbb ret cs (bad) (bad) pushl outsl pop out mov or sbb (bad) leave (bad) push mov jbe daa cmp je fstps xchg xchg pop hlt add call dec cli imul (bad) (bad) (bad) pushl inc mov xor in out div scas mov imulb mov (bad) (bad) (bad) incl pop adc jbe jecxz sub iret ljmp and hlt adc jp cmpsl pop fcomps das clc xor adc or (bad) (bad) fistp push dec shrl fwait xor dec int jae fcompl (bad) (bad) es (bad) (bad) (bad) fcmove test mov (bad) jne imul xlat movsb fimul xor arpl push mov ljmp in pop cmp xor (bad) jg sbb cmp push inc fsqrt inc in stc pop cmp cmp mov fidivr (bad) ljmp mov and subb and dec loopne mov sbb ret orl scas lcall xchg xchg outsb push loope sub gs (bad) fildll aaa pushf dec sub dec mov (bad) cmp std lock repz xchg fistpll jno (bad) (bad) mov fistl mov jle fstps jecxz (bad) lcall cmpsb sub xor cmp (bad) jg sbb fwait notl (bad) pushf arpl pushf mov sbb je xchg or iret jo inc popf fdivrs adc inc popl mov clc fs sub pshufw jae or sub (bad) fstl and inc dec gs (bad) (bad) out mov test mov cmp pop ja jle clc scas fiaddl pop cs cmpsb jp mov xchg loop (bad) std mov ljmp inc ret scas pop (bad) int3 mov cmp (bad) je inc cmp cmp xor (bad) inc out (bad) mov mov push imul mov xchg cmc push push sahf pop icebp (bad) (bad) jl outsb or or cmc and jne in mov imul xchg pop popa adc pop jl mov dec push int3 mov xor or in fstpt ss repz (bad) and inc fbld ret mov call pop push dec aam fisubr pushl (bad) mov std or or xchg dec mov sbb sub (bad) jmp adc mov stc sahf and scas fstpt sbb xor xchg in or add fstpt negl cltd push shll (bad) (bad) lcall ret dec mov pop pusha jge xor sbb cmp jno add ljmp clc call jmp in daa ss or adc sbb stos in push imul (bad) (bad) decl adc add (bad) ret fimul in leave mov push into cmp mov xchg jae leave movsb lret and xchg gs loope mov sbb (bad) (bad) dec (bad) (bad) and dec inc cli sbb sbb ficom jb (bad) (bad) (bad) mov xchg int in sbb sbb xchg pushf jle push xlat shrl dec (bad) (bad) jg faddp (bad) (bad) (bad) (bad) sti jmp gs xorb mov aad add out in popf movsb push mov pop loopne push dec xchg cmpsl mov sub sub cmp sub or ret fild push and mov nop or (bad) jmp in mov pop lock cli imul (bad) (bad) lcall xchg add push les adc cwtl mov sahf cs je rolb ljmp js js adc std hlt or adc fild and cmp xor push loopne pop sub xchg loope (bad) pop push js sbb or in jg (bad) incl into ror nop and roll lcall cmpl loopne cli mov sub imul mov xchg or pop (bad) jmp sbb xchg mov (bad) (bad) pushl aam add push and xchg push or pop mov push cmp insb pop push push bound dec cmp fidivr mov test out push icebp mov (bad) (bad) jmp int3 push dec leave push mov pop cmp xchg lcall (bad) (bad) lcall inc pop dec lret les lahf sbb push fsubs in add test (bad) cmp idivl and push jns cmc test or insb and lret outsl (bad) jg (bad) jecxz daa dec das xor add lcall daa (bad) pushl mov fist out stc xor cmp cmp xor decl lret test jg (bad) incl fsubrs enter adc ds or ret (bad) decl ret xchg jo test xchg mov inc mov lahf adc les bound icebp decl or call (bad) testl xor pop cmp mov lcall popa loope aaa sahf leave clc not adc pop sub iret fs sub push push adc sar sub or jns sahf push pop add fimul add or iret pusha jl daa into push cmp es repz inc push jo lock mov and (bad) incl js in mov fnstenv ds xchg shrl add (bad) incl insb shlb and add inc mov adc mov mov fs pop imul sub inc adc imul mov (bad) (bad) incl out sahf addr16 or idiv (bad) mov cmp jns jae out out (bad) (bad) (bad) lcall mov cmp (bad) xor jecxz jb aas aaa imul (bad) mov xlat inc jb movsl mov xor pop adc mov mov fdivl outsb mov les (bad) cmp jmp aad jae sub mov pop xchg xchg xchg lcall scas pop pop or (bad) decl sarl out movsl ja pop inc out (bad) add outsb (bad) (bad) (bad) jmp pushf or cmp hlt jle jns lods sarb popf mov and jo add iret (bad) pushl cltd jg jns adc pop dec and xlat outsb loop jp inc pop ret dec js xor (bad) (bad) jmp loope adcl arpl fxch dec fs adc mov icebp outsl dec scas cltd fwait (bad) mov cmp jae (bad) pushl push push inc data16 jno mov fbld fwait jmp in cmpsl es and xchg pop mov pop mov jg call cmpsb mov cmp scas sti sbb mov adc pop std pop lock scas in lock fiadd popa rclb clc sub fdivr (bad) (bad) (bad) (bad) (bad) out jg pop test mov adc add mov mov (bad) (bad) (bad) pushl xchg xchg and fwait mull ret push dec push jbe leave sti cmpsb xor fucomip mov pushw push aaa mov decb call scas sub into push inc addr16 (bad) (bad) mov jae push arpl test cltd movsb aam ret repnz xor jg mov mov addr16 add xchg pop xchg out das aaa (bad) (bad) (bad) (bad) call adc outsb mov dec push mov test cmpsb imul adc sbb (bad) cld das pop mov jge mov add inc mov xchg mov sub les dec lret xchg sub dec outsl lcall aas jnp adc sti enter out (bad) (bad) (bad) (bad) out daa mulb test xor mov aas fnsave pop aad outsl sbb mov mov adc and mov addr16 (bad) (bad) (bad) inc sti lods decb loop (bad) xor adc ret jmp jg jp test or push mov sahf popa outsb out sub aaa imul mov pushl std jne and xchg (bad) inc (bad) fs ret adc push mov pop mov adc pop ds pop test push push pop (bad) ljmp pusha stc sahf cli mov lock stos cli cmpsb cli and jmp push and jno lcall sti test loope (bad) repz inc (bad) push incl aas cmp xchg sbb cmp fist mov pop or (bad) lcall push fdivp jg inc xchg adc jg pushf sub push (bad) (bad) ds mov (bad) adc int push imul push cmpsb (bad) (bad) jmp and and mov jg divl maskmovq imull mov call push idivl outsb xor outsb jno pusha (bad) jo movl jle mov loop sbb push ss push hlt pop inc jge cli jg (bad) call cs adc push push mov push or adc or push xchg inc out dec push push jle adc fsubr jo xchg xchg insb (bad) (bad) (bad) push ret fisttpl das pop sbb or pop test mov les adc decl xor lods cli (bad) (bad) decl pop xchg test into loope std cmpl adc ret sub or cmp scas fcompl incb ret imul adc ja clc jmp loope ljmp add jge (bad) (bad) (bad) std push (bad) sti je sbb xchg mov rcrl fbstp pop sahf jnp decl outsb ret push mov cltd (bad) aam aam adc pop sar incl jbe jo jne pop push push repnz lahf test (bad) je xchg sbb (bad) incl lods out fisub stos push fsts stos mov pop lock popf add pop in cmpb pop xchg fnstcw mov mov insl loop mov loopne push ds add xor mov jne (bad) mov xor fwait or lcall lsl mov cmpsl mov jmp or xchg adc inc (bad) aad sub sub in mov addr16 sbb jg pop icebp mov rcll popf popf and int3 stos sub aaa lods push imul rcrb incl out aad into lods pop shlb aad cmp outsl xor (bad) (bad) decl outsl sbb xchg push cmp cmp (bad) out dec ds jmp mov push xchg push (bad) (bad) outsl clc adc jge (bad) sbb stos push sbb movsl (bad) decl push iret mov cwtl mov fimul fildl lret push fdivr adc (bad) (bad) cmp sub jecxz loopne pushf bound fisubrl jg pop rcrl fs (bad) (bad) dec and cmp jmp movsl mov call add sbb lds (bad) (bad) lcall push pop xchg sti pusha mov cmp in mov testb cmp fwait (bad) (bad) out ss fmul ds sbb push add or jno and sbb add (bad) (bad) (bad) (bad) std lea movsb sbb or popa test pop jle adcl jno (bad) (bad) jmp adcl test and mov insl call mov (bad) out and adc sub mov inc push lea (bad) (bad) decl popl daa and pop inc push testl dec aaa test push (bad) (bad) (bad) (bad) cmp sbb jmp mov push stc enter mov test stos fwait (bad) (bad) (bad) call out into mov cmpsb xor mov sub test sbb jns dec jnp scas jg decl mov xchg pop int3 xchg aas jbe cmc scas xchg es and jnp (bad) (bad) (bad) inc jl and stos sbb pop (bad) (bad) mov test pop xor std fisubrl pop arpl insb ljmp ja xlat push lods add dec xchg and ljmp pushl ss mov test xchg cmp sub cld sbb jmp dec cmp ss or sahf (bad) in xor cld (bad) jg pop js push ficom insb mov push sub push (bad) (bad) (bad) incl mov cmp (bad) fild xlat xchg ljmp adc add test fcomip (bad) pushl inc and sbb pop adc jae jne jns xchg mov jmp mov xchg sub and idivl test popf xor std (bad) mov inc fiaddl rorb mov dec pop ds jnp push push (bad) mov test cmp aad push iret cmp cmpsb (bad) decl cmp icebp inc mov aaa xor lock aad icebp mulb (bad) mov lds jno stos dec push push ret (bad) jp out mov pop arpl mov cmp lcall popa movsb sbb aad jb pop xchg xor sahf aad stc (bad) (bad) (bad) (bad) cmp test adc mov pop xor jge out es stos xchg idiv pushl lret fimull sub popf stos daa mov test imul cmp (bad) mov mov mov jno lods (bad) std ds (bad) (bad) (bad) call xlat sbb inc scas adc pushf lods sub cmp pop into add mulb call fldcw jns popa mov (bad) lds rorb xchg sub mov (bad) (bad) lcall lea jl pop out mov cmc dec xor aam sbb add push push push dec ljmp ljmp ret jno mov jp jae push mov mov inc lea push mov (bad) aam xchg dec pusha movsl inc and jg jmp push or in push das ja mov (bad) cmc lock push xchg mov idivb adc sub popf inc push (bad) sub mov ljmp call jmp sub jbe inc jbe bound mov (bad) stos (bad) incl daa xor mov in or adc push push push and ds (bad) (bad) (bad) out and in ret pusha addl aad sbb dec pop mov lret dec nop packssdw (bad) (bad) incl sbb push jae xorl stos mov mov sbb inc clc add jmp cmc aaa adc or mov or cmp xchg (bad) (bad) incl js mov xchg pusha int out lahf (bad) inc lock cld inc (bad) ds xor sbb cmp sar mov (bad) (bad) ljmp (bad) stos popf xchg xchg jle and es pop push pop inc ret repz decb cld mov fistp or sbb mov (bad) in scas lcall aaa shl lahf xor insb sahf pop dec lds inc stos push test sub (bad) decl inc or idivl xor sub add (bad) (bad) (bad) call pop in cmp iret iret push xchg jae into mov push popf pop xor xor sbb decl xlat je ret mov inc xchg iret popf mov push rorb (bad) decl (bad) sbb jge psllw jmp in xor fwait pop mov jg ljmp sti loopne lds nop pop mov jp lcall (bad) call pushl int (bad) je add into int and aam push (bad) (bad) (bad) pushl mov ss fstp push aad rcl dec mov and cli sub daa mov out clc (bad) ljmp je inc mov pop out dec clc test dec sbb mov (bad) (bad) mov sbb adc loopne,pt (bad) (bad) (bad) cld add aam outsb mov aad aad arpl adc test mov push cvtpi2ps (bad) in lcall gs nop (bad) sbb in stos pop mov scas sbb (bad) (bad) dec aas ss or cmp xchg push cmp mov shr mov js sub (bad) decl ja mov fstps xor sbbl pop and mov das sar mov test aas (bad) shrl push enter (bad) (bad) (bad) decl lret inc cwtl fwait pusha dec push cwtl mov xor cmp ror pop xchg lea mov mov cmpsb cwtl jno add std xor cmpsl mov outsl stos sbb std jge add (bad) (bad) lcall divl jecxz add daa shll (bad) dec (bad) pop inc imul sbb cmpsb pushf adc cmp stos mov cmp stos rcl jb mov and sbb lret mov cmp mov push cmp (bad) (bad) (bad) ljmp or inc push js lods xchg push or jb inc ljmpw shlb ja ljmp pop inc xchg cmp outsb mov enter xchg jnp xor call (bad) ljmp das inc out xchg mov mov enter push sbbl inc (bad) push fstpt std mov aaa cmp adc lcall dec xchg inc nop add xchg mov jb addr16 sahf push adc add or adc repz or es add es inc sbb inc jle lahf lahf add loopne idivl les adc dec lret gs shlb and add fwait shrb pop mov test lock (bad) cmp aaa (bad) mov out mov fs add repnz mov (bad) (bad) incl xor jnp jae out repz jnp (bad) mov movsl std add lret xchg insb mov add iret pop call loopne xchg xchg lods xchg cmp in dec mov cwtl dec loope mov sbb cmpsl xor push out outsb sbb xor imul cld ret pop (bad) (bad) ljmp ss cltd mov cld stos cmpsb shll (bad) ss push xor inc nop aas inc cmp (bad) (bad) call sbb in pop in lcall ret lahf jl repz mov push (bad) (bad) (bad) inc pop or std loop std cmp pop pop addr16 push scas (bad) xor cmp in rcrb jecxz inc cld jg xor imul mov cmc aaa inc push imul ss mov pop out xlat jl (bad) lcall repz and dec inc or fs insl jnp sub addr16 mov sub dec lahf sbb call (bad) (bad) lcall or cs cmpsb sar fdivp xchg imul push pop mov in clc (bad) (bad) (bad) decl sbb scas inc aad inc mov lea jge aas xchg jecxz cmc jnp cmp insl ljmp xor out es xor (bad) out rorb rol and adc inc rcrb std (bad) (bad) out lret ja cmpsl sahf push repz sahf jmp dec pop xchg ds popf add adc (bad) (bad) (bad) lcall cmp test lret adc sub pop cwtl xor or ficom xchg mov jns add lcall jno mov cmpsl cmp adc push sahf (bad) pop fwait jle call lcall ret push xor stos mov imulb cmpsb xor jecxz sbb adc (bad) xor popf sub aas push (bad) stc pop or fidivr mov scas pop sbb lcall sub (bad) (bad) jg pop push push sbb sub call xor popf xchg fldcw call (bad) (bad) mov shrb fs or inc jecxz cmp fdiv xchg sub xor cmpsl das and call call and test jecxz push lcall xchg jp call decl iret push imul hlt xor push mov jg jmp push lret (bad) (bad) jmp out pop in movb jbe hlt add sub jnp mov (bad) cld dec stc xchg fs (bad) (bad) (bad) (bad) fisub adc stos sahf arpl sub aaa jne test cmp lahf (bad) (bad) in call mov dec into fisttp call outsl cmp outsl jbe sbb mov (bad) (bad) decl sbb sbb ss lods push jnp xor (bad) ljmp enter mov dec xor cmp pop stc push test push mov jl (bad) (bad) incl inc xorl dec mov adc mov jb dec andl (bad) (bad) decl dec or jp ja xor jp lahf stos push int lea dec push movsl (bad) lock (bad) ljmp push je movsl xor pop sub mov movl insb (bad) call loopne xor adc pop ror push xchg mov jle (bad) (bad) incl jns fsubrl xor and lods push mov stos mov adcl xor rorl or call pop movl add pusha and outsb xchg and call loopne and stc ljmp lods or (bad) (bad) (bad) jmp mov mov cltd lock xchg xor shl push mov add iret dec jns lcall lcall inc lds or xor xchg inc ficomp mov ret xchg push test sbb cmp sub sbb arpl mov push or rclb outsl xchg pop inc push mov outsl (bad) (bad) (bad) call sarl out xchg outsl xchg shll and rcrl popf mov roll test (bad) (bad) pushl xor mov push push lds pop xor pop lret rclb (bad) (bad) pushl push flds or xchg ja enter lret add scas das inc add aaa std (bad) decl pop not xchg mov pop jmp (bad) push test popa dec out xchg inc rolb pop or shll aas and dec aas negb cli mov (bad) (bad) pushl div movsb inc movsb subps (bad) dec sbb daa xlat rcl cmpsl cmp clc decb imul mov std jo xchg jbe add addr16 (bad) (bad) (bad) cmp and mov pop lahf fnstsw xor mov bound jg es (bad) (bad) lcall test sahf shrb (bad) or (bad) out fnstsw xor add jmp (bad) (bad) fnsave lods inc sub (bad) cmp fcmovb aam mov mov (bad) ljmp mov jnp pop add add (bad) (bad) (bad) (bad) inc add addr16 repz jp sbb adc shll sti inc mov in notl std (bad) (bad) pushl push std mov orl iret imul xchg push jno pop es mov (bad) mov push sbb out lret add fsubr mov pop inc (bad) xor pop bound (bad) (bad) (bad) decl fdivrl mov adc xor xchg mov es (bad) cmp xchg xchg mov daa adc jmp add and jnp cmp cmpsl dec insl mov and (bad) ds (bad) inc les nop punpckldq fiadd push in or xor jg inc (bad) (bad) out fcomps inc enter btsl push xor inc (bad) mov aam rorl jg incl mov mov lea and dec leave push lcall (bad) (bad) jmp aaa adc shlb pop sbb insl xchg xchg cmp pop and ljmp inc push push movsl pop xchg mov (bad) vmovlpd scas stos mov mov mov repz call (bad) (bad) (bad) (bad) jmp es loopne js sbb pushf test mov jmp xlat int (bad) (bad) jmp fmull imul (bad) cmp push in jl leave scas jmp (bad) mov sbb rol mov stos sahf cld push and stc repz (bad) mov push hlt mov mov adc xor cmp aam mov iret sub cmp inc popf adc cmp (bad) ljmp hlt add xchg adc mov push call push adc inc mov mov sbb rcl adc call (bad) out rorl dec mov sbb cmc inc push (bad) jns cli push fmull push loope adc leave mov (bad) (bad) jmp xchg aam (bad) adc (bad) test mov fcmovnbe push std test in cmp (bad) (bad) (bad) (bad) sti repz jno into mov outsl repnz fstpl inc ret data16 out jecxz mov outsb out stc (bad) (bad) (bad) (bad) sti jo das aam loope xor add pop shll mov adc ja not (bad) (bad) (bad) decl cltd xchg in test mov xchg idivb jp mov jg mov (bad) decl in push xor into push pop movsb aad jmp sbb (bad) (bad) dec rclb int3 dec and mov je loopne sub inc out push outsl (bad) js es (bad) jg (bad) (bad) jecxz je mov fbstp movlps pusha popa sbb (bad) (bad) (bad) inc fcoms test adc pop push (bad) push lods sarb ja jg repnz add cli (bad) (bad) decb push daa mov or (bad) xor loopne rcll mov add repz (bad) cmp xchg test insl push int3 sahf enter sub insl (bad) (bad) (bad) cmp dec movntps fwait pop lods out fistl in sub or fdivrp outsl jg test mov push mov int test out in icebp cmpl dec icebp (bad) (bad) (bad) ljmp xchg fwait pop aaa adc inc rolb jg aam mov ret jb call sti rol (bad) (bad) (bad) pushl dec dec dec int3 std mov arpl int adc push dec ficom lcall js ret (bad) (bad) (bad) incl repnz mov stc pop (bad) cmp pop jecxz mov decl dec sti (bad) mov pop xchg mov fstl mov sub mov mov pop (bad) (bad) (bad) jg les jl jno (bad) in iret outsl popl call pusha push mov (bad) fucom jle incl mov icebp push mov cmp mov (bad) (bad) (bad) lcall inc jmp push sub cs mov push adc or hlt jns (bad) out cli call loopne je pop lcall and add jo mov (bad) decl movsl xchg sub jmp subl mov and (bad) in data16 (bad) call xor xchg movsb or cmpsb jnp add test sub (bad) (bad) cmp dec out clc sbb dec xchg out dec loopne mov js lock (bad) (bad) in and mov loopne js mov cmp lahf dec pop pop jecxz push daa lock (bad) popf shrb adcl clc mov dec jmp loopne jecxz (bad) (bad) lcall ss xchg mov adc insl movsl std fildl or xor dec fidivl cli (bad) ljmp adc ds and pop adc (bad) xor mov cli jno xlat push mov (bad) call stc out mov (bad) mov in stos movl das sub (bad) (bad) jmp iret out sarl dec lds or dec fimul imul mov cmp (bad) (bad) jmp cs sub loope cmp (bad) or call into push dec dec test push cmp (bad) lcall scas jns sub jno dec in (bad) cmp lods ret push clc (bad) (bad) (bad) jmp and sub dec into jae adc incl addl rcrb incl or or mov dec mov xchg std (bad) jg or add cs and or ds test mov ss ja (bad) (bad) mov out push shl mov pop sbb push je xor aaa pop cmp loope mov mov cmp clc push cwtl push pop pop jbe sarb into mov mov push pop out dec sbb xchg scas negl sub jnp mov push call mov cmovb movsb dec cltd jp mov loope fcomip pop mov lock (bad) shlb push push (bad) (bad) (bad) ljmp fsts add adc adc cmp jae hlt jno stos pop mov mov js xor sub push fcomps bound dec xchg mov jg lods mov int3 mov lret mov test mov mov fcompl insl push lods out out or pop sarl adc fistpll mov cmp pop int jg (bad) cmc in inc mov rorl (bad) jg mov ds jge,pn cli mov nop movsl fldt cwtl or decl pop push push mov lock cmp sub xor stc (bad) xor (bad) (bad) (bad) ljmp xor mov jl imul sbb adc insb cld int3 ss (bad) (bad) jmp adc movsb jle add inc and fdivs fisubl fcoml mov inc inc testl (bad) decl cmp das mov mov lods adc in inc in nop sti or jne lds (bad) (bad) (bad) jmp jl sub outsb sbb lea jns lret fsubl adc pop daa mov (bad) mov leave inc cltd or (bad) and xchg int3 test andl pop lahf cltd test (bad) (bad) (bad) jmp and pushf dec mov cmp rcl dec inc push test push mov dec jecxz pop outsl xchg cmpsb inc cmpsl repnz add mov dec sub dec jl ret (bad) jmp sub adc xchg stc pushf les adc inc fwait mov lods decb mov mov push mov das push jge (bad) decl repz cwtl adc out sub jae int scas xor out in inc outsl adc lcall js fsubp scas insl xchg jp test (bad) dec mov pop mov sbb in ss adc das cli xlat (bad) (bad) decl gs mov ret add or (bad) gs jnp nop in push add stos out js outsl jno sub mov insl insl sahf or jg pop aad icebp (bad) (bad) jmp es cld stos ljmp aas outsl in push loopne push test sbb jne or cli mov outsl stos mov push mov push adc add jecxz sbb negb out mov pop clc push xchg cmpsb fisttpll mov inc or pop (bad) (bad) jg popa jne jno pop xchg add cs sub sahf imul (bad) pushl cltd mov inc push iret adc adc or inc out (bad) cmc movsl mov dec inc (bad) dec cmpsb push inc xor outsl inc psubb adc stc call sub fiaddl aad or jmp leave lcall rcrl adc es add clc out test and test test fnsave (bad) pushl es lahf cwtl loope push adc les insb ljmp sub (bad) aas push je in dec aam scas push dec stos xchg test ljmp jmp mov sub cmpsl in movsb xchg imul cmpsl loope inc pop lods imul sub icebp (bad) jg hlt sti out leave dec addr16 mov ret subl or push (bad) call cwtl lock ja adc xchg xlat std call jne lret stos jmp (bad) idivb addr16 cmp or (bad) int3 xchg (bad) pushl mov xchg into (bad) insl fsubl fstl (bad) lret jle pop es mov (bad) mov and and outsb shrl adc or push decl lock ret cmpsb (bad) into cmpsb lods adc (bad) rcrl adc decl mov sarl pop test clc pop adc mov (bad) (bad) incl cli lods cmpsl leave pop or aad loopne push mov pop test add lds inc (bad) (bad) (bad) ljmp idiv lock pop mov pusha pop jecxz cmp fistp jb (bad) repz cmp (bad) pushl paddsw jo xchg mov pop pop jecxz push jg lock mov pop hlt (bad) pushl std (bad) fisubr jmp notl pop sahf int3 ret jmp adc jg jns mov xchg into mov pop jns mov loopne das sar je sbb (bad) in fist mov aaa insl cmp (bad) mov xchg cld dec loope lea add out or scas incl (bad) (bad) (bad) (bad) jmp push jnp out xor adc mov ficom add adc (bad) (bad) push or mov pop rorb push repnz jns xchg xorl stos xchg dec int popa lcall inc scas ljmp negb test fisttpll subb imul cld pop adcl loope sub loopne (bad) (bad) (bad) (bad) int3 or test shr aad subl aam mulb jnp (bad) call mov mov adcb (bad) enter fistl popa inc jmp ljmp mov dec inc mulb daa sti aam xchg cwtl in outsl mov lock push (bad) (bad) (bad) lcall lock stc fdiv cmp jae cmpsl pop jnp xchg jnp mov pop inc sbb mov (bad) mov dec neg sbb push push jnp incl daa cmp sub xchg insl out fstpl push stos (bad) (bad) lcall inc pop jg push out pop stos inc jbe push data16 fcoms xor (bad) (bad) (bad) ljmp xor negb pop lea pushf les jne pop adc roll jg (bad) jmp dec dec arpl inc sub cltd test and rsqrtps (bad) mov fwait and sbb xchg jno (bad) ljmp jl mov sbb out (bad) and decl or and (bad) mov gs mov nop cli (bad) (bad) (bad) inc jns sbb mov (bad) repnz cmp and sub stos (bad) mov mov bound sbb call adc jns scas or (bad) jmp adc sbb es hlt mov rorl adc fwait push inc iret pop jp jmp hlt adc mov xchg iret adc pop call rcll xchg jne popa pop dec out dec sbb (bad) pushl mov out pop xchg in or pop imul movsl insl cmpsl jle mov cs push stos or aaa sbb or inc push fisubr int and sti mov mov and (bad) (bad) call push aad pop (bad) mov pop cmp hlt popa stos cmpsl push mov pop sbb (bad) (bad) lcall cwtl lock fadd xchg sbb pop scas ss sub rcr inc xor push push xchg lea hlt (bad) jg lahf ror push add dec cmp jp stc mov loop pop push xor add xor daa adc arpl (bad) (bad) (bad) (bad) fistpll aas in rcll mov in ror orl jmp cmp or call arpl hlt jmp mov fsub sbb lcall ja lret xor addb inc call into adc (bad) call aam movsl dec xchg psllw mov pop pop pop cmp cmp aad (bad) (bad) (bad) call (bad) out adc jne mov sbb jmp popa mov ljmp sar inc mov fldcw xchg rcrb les pushl push fdiv push push repz pop fimul into in jp pushl call movq cmp sub fs add push psadbw sbb jbe (bad) (bad) pushl fmull movsl push scas stos push in lods jnp inc cmp mov (bad) decl lea or pop xlat rorl jge ja dec adc (bad) (bad) call stos xor enter mov sbb adc leave xor xchg rolb jecxz cli lcall mov test adc cmp pusha push (bad) (bad) (bad) mov mov ficom pop pusha mov leave mov std dec mov add lcall mov mov fcomip mov jge mov add inc pop cs (bad) (bad) call std push loope scas arpl push dec xchg cli mov fdivs lea xor hlt lock (bad) incl lods mov mov scas pop jmp sub push cwtl loop stos (bad) (bad) decl add and xor pop pop jmp fstps push jb fsubl (bad) (bad) call fwait mov jae ja lods cmc stos xor dec mov aad lods push jns out pop (bad) xor rolb (bad) jno xor dec (bad) (bad) ljmp sbb fidivl mov fs clc xor icebp je ret push loope pop loope (bad) (bad) (bad) lcall ss xchg in loop cmp and je dec int es aas mov (bad) dec scas mov jge add pop lods xchg mov mov pop cmc sub outsb (bad) cmp dec (bad) (bad) ljmp jb sub sub repz mov mov inc jbe mov (bad) (bad) (bad) sbb adcl push xchg icebp push cmpsb adc mov cmp lods out inc outsb not sarb pop into pop mov leave ljmp sub sahf mov (bad) (bad) (bad) cli outsb jecxz stos lcall stc mov lea sahf (bad) mov jmp push sub call imul mov inc ss icebp pop cmp enter mov jbe add cmp and (bad) (bad) cmp dec mov movsl fstpl push mov sbb lods shrb imulb or push mov xlat leave (bad) cmc (bad) sub jp or push xor test loope (bad) jmp mov (bad) clc jae and pop lea popf sahf imul test (bad) mov cmpsb or inc call mov iret arpl (bad) (bad) (bad) jg mov mov lea mov enter and mov mov sahf jle ds ljmp shlb sbb test or jb mov (bad) (bad) jmp cmpsl lret mov pop jecxz xchg fstp iret popa in sub repnz cld test icebp mov inc xchg push fdivs int3 mov inc mov inc (bad) sub std stc sbb jns sar (bad) repnz push scas fadd ds imul in jle or or inc (bad) adc xchg xchg pop or roll insl dec xchg mov mov dec arpl push ds jecxz sbb pushl rol lcall nopl and das ss negl push jg out testb das push fs incl test stc nop push push sub (bad) adc sbb out adc gs (bad) (bad) (bad) (bad) call xor xor divb mov cld xor mov pushl push sbb or sti adc xchg push mov mov cltd scas call fcoms pop mov fdivr (bad) (bad) jmp aas mov lret fnsave in push rorl test mov jecxz ljmp fnop ret pop enter mov out add mov push push mov push push cwtl into rcrb icebp lcall ss pop dec dec aas dec and jecxz sti scas inc cmpsb loopne xor (bad) (bad) (bad) pushl push fnop jno lds cmp jge sub data16 jp mov jmp (bad) cmp and pop aam ja mov mov mov lret in mov (bad) (bad) decl push stc or rorl cmp (bad) xchg jl inc mov imul xor je and (bad) jmp popf lahf pop imul xchg pop int3 sbb mov ret test mov arpl (bad) (bad) call pushf call fistp pop loope hlt jg repz ja mov push xchg inc (bad) (bad) call push fwait jbe adc add dec xchg adc pop sti stos dec inc sub (bad) (bad) (bad) cmp lock cwtl mov jmp push mov mov xor xchg xchg imul (bad) (bad) ljmp xchg or (bad) pop and clc dec div push sbb cmc and cwtl fwait inc sub sub hlt (bad) (bad) cmp imul cmp daa enter mov push stc arpl addr16 (bad) (bad) call push iret fstpl and mov shlb cwtl shlb xor decl and dec jle je inc sub pop add (bad) (bad) dec push call dec mov cltd mov repnz cmc outsb inc (bad) xchg push (bad) aas dec pop lods out sub push (bad) lods (bad) (bad) (bad) dec mov cmpsl gs mov aam jne test in les jle pop ljmp ljmp (bad) ljmp out adc cmp lods jns or loopne aam cmpsb stos lds push lock (bad) pushl imul cmpsl pop (bad) out add unpcklps in pop cmp sbb shrl push cld jl dec push sahf outsl add pop (bad) (bad) (bad) decl dec push cmp js inc mov mov adcb lret sbb sahf insb ljmp pop orl ss mov xor cwtl andl inc (bad) (bad) (bad) fildll sub mov std push add (bad) cli cmpsl add mov popa popa add cltd fcomps popa cli (bad) lcall mov test mov cltd les xchg mov (bad) ffreep jns xlat push mov xor push in in push xchg xchg push add or and mov (bad) (bad) (bad) jp lcall lret dec sub es jbe jp add jle,pt mov (bad) call jmp fild inc icebp push cld mov into lret sub (bad) (bad) (bad) out (bad) movsb icebp clc int3 loopne cmp sbb addr16 cmp ss jp (bad) (bad) decl xchg pop xchg sbb push (bad) pop xor inc cmc jo in hlt out cmp sbb (bad) pushl lods pop rcrl mov aad ljmp les mov lock test lret (bad) decl mov lods outsb or mov mov cwtl (bad) out ljmp rolb mov ds pop or (bad) (bad) (bad) incb std cli xchg movsb sub aad insl loope jbe pop rcrb xchg (bad) (bad) (bad) (bad) call cmpl imul mov xlat ret movsb mov outsl jl loop push fnop push aam (bad) jg inc outsl call (bad) (bad) (bad) mov adc aaa inc sbb pusha cli repnz sbb dec push mov mov mov ret (bad) ljmp xchg xchg xchg notl call xor popa enter xor lcall negb push dec popf mov test inc (bad) mov pop sbb (bad) (bad) dec or or adc mov not and scas push fxam pop hlt enter sbb (bad) stos inc (bad) (bad) (bad) inc sub enter bound mov or mov (bad) sbbl (bad) (bad) ljmp lock dec xchg fdivrs (bad) in repnz lds dec popa sbb dec inc pop mov dec inc aad (bad) ljmp out or mov ss mov add push push (bad) push fdivr ljmp jp pop in in jl sub sub and dec xor hlt pop das das xchg test sub (bad) es jnp imul (bad) (bad) (bad) mov dec dec loope aad xchg fnstsw ljmp xchg aad ss lcall push hlt int3 test xchg jl lea mov jns adc and (bad) (bad) jg int mov frstor push jo pop xchg sub dec dec pop push je rcll sti call cmp cmp jbe mov mov cmpl (bad) mov fwait iret out mov (bad) (bad) (bad) fisttp lods jnp cmpl jno inc testb mov lock fwait (bad) (bad) call and mull fwait jmp cmp dec sub hlt ret adc aas clc push mov lret les std mov xor stos pushf ljmp lcall push mov add insl gs push out repz cmp pop es or add jmp (bad) (bad) (bad) in movsb addr16 cmp repz lock jecxz sbb dec dec (bad) (bad) (bad) jg dec andl loopne adc (bad) shll jae sbb clc fadds aas lcall (bad) jg jmp ret inc adc jecxz xchg test fwait aad push (bad) (bad) (bad) push add es or or inc loopne mov mov xor mov lret incl cmp xchg das loope jnp test add inc xor call cltd rcl sbb aad insl icebp jge mov scas fcomip (bad) pushl (bad) add test mov pop adc dec loopne enter call cmp sub int inc mov xor fcoms ja (bad) (bad) fistl mov insb rolb loop xor es sub xor (bad) (bad) jmp es dec xchg orl out xchg mov mov outsl mov pop mov jae (bad) (bad) inc or adc cmovge in xchg (bad) adc cmp mov inc test jae xchg or icebp cmp xor sbbl add (bad) ljmp enter aam sbb popf inc (bad) inc or xor cmc lahf test lods adc std addr16 adc push jge pop push (bad) (bad) mov stos dec sbb sbb scas mov pop push jle (bad) cld pop cmp incl test xchg cmpsl frstor pop in jg xor lret int3 inc pop jg out sbb cltd out mov jne out jecxz call inc jnp mov call inc in dec jl sub fdivrp push mov decl clc fsubp push (bad) mull mov mov cmp xchg sub pop or mov cmc xor stc js push mov (bad) (bad) push movsb or (bad) jg (bad) push add insl dec test sbb mov xchg cmc mov lcall cmp pop xor out cmpsl push shll cmc mov dec sar (bad) (bad) incl cmc addr16 (bad) or cld jnp pop add jmp jne mov call incl jae push cmp pusha adc roll lds out xor call imul andl jo leave push push dec movsl ljmp (bad) (bad) call inc les adc mov out mov mov mov (bad) (bad) (bad) (bad) cmp in push data16 jg mov push test or mov fldcw xlat (bad) (bad) dec ret sti mov inc lds das imul pop cld (bad) (bad) mov push cmc cmp or xor cs (bad) mov popa outsb mov (bad) lcall aam jne pushf mov in loope and jmp adc (bad) (bad) call jae push sbb pop inc jo pushf cwtl mov push (bad) jle xchg lock shrl lock mov loop loope (bad) fisttp add mov lret (bad) (bad) call loop jb push and push dec jmp idivb insb cmp das fisubr push call cltd lock (bad) (bad) fabs bound mov sti dec xor xchg add ds lcall cmp stc push push jmp aaa bound int3 jmp (bad) (bad) jg test pusha je dec sbb and xchg in js xchg out (bad) ljmp add arpl repz pop arpl rclb (bad) (bad) lcall je push dec push fstl push lods scas push pushf stos adc in (bad) jbe xor loope jg mov sub xchg aam xor outsb or (bad) ljmp cwtl add enter sbb in arpl (bad) aaa mov adc (bad) (bad) jmp aam or bnd cs repz sub jo adc icebp cmp mov xor cmp (bad) (bad) jp jne loop rolb lret dec or sbb xchg fnstcw mov jmp int fcomp das mov inc idivl dec popa cmp adc dec mov lods or call call js lods arpl push jle es sub icebp cmp cli bound sbb jnp testl aas add incl js mov jo rorl stc inc push leave inc mov xor (bad) decl push xchg paddq insb push arpl pop pop leave in dec jmp test (bad) (bad) fidivl mov inc pop movsl push jp mov push dec ret push adc jb mov mov dec lock sbb (bad) mov jns xchg (bad) (bad) (bad) ljmp int xchg or mov int xchg testb test pop call push psubd ljmp sbb cmpsb leave out lock add adc sbb (bad) (bad) (bad) mov leave push int loop ret cld mov out xlat cmp lods or (bad) (bad) incl jns cmc mov gs cmp sub leave or shll pop jp (bad) (bad) (bad) stc (bad) mov test lea mov movsl lret aam (bad) icebp lea adc bound jne jnp imul dec fstl inc pop sbb mov pop inc popf subl clc lock xor iret jle mov icebp pop das clc (bad) (bad) aas xchg ja (bad) cmpsl xchg dec loop and scas and stos xchg mov mov jg fxch ror insb loope xchg xchg mov and sbb call (bad) pushl push (bad) xchg add pushf scas adc lods inc adc push scas cli sbb cwtl rclb (bad) (bad) dec lcall mov adc cmp lret mov (bad) ljmp pushf jmp ret scas or mov mov (bad) jo or out sub pushl push dec fsubr dec xor mov cmp lods jb push clc fildl jg ret (bad) (bad) fistp clc jae in out test dec cmp jae inc inc ja cltd fsubl js in sub (bad) dec push mov sbb xlat iret pusha cmc push arpl (bad) (bad) lcall test jb or incb cld movsl or lret in aas std dec jl mov (bad) in dec xchg jmp not jmp adc test lcall xchg push icebp dec push out sub push add sahf xlat scas ja lods push (bad) (bad) (bad) (bad) ljmp pop int3 scas add je cmpsb cld push pushf sbb out inc adc stos iret hlt mov sbb pop hlt incl test pop jle sub (bad) mov pop xchg (bad) (bad) lcall xchg les stos xor mov sub jnp (bad) repz pop hlt (bad) (bad) out xchg push fidiv fimul repnz pop xchg push inc or mov in (bad) (bad) (bad) (bad) jg test and push jecxz mov sub fadds (bad) (bad) (bad) ljmp call push fdivrl ficoml mov sub aam (bad) pushl (bad) lods fwait and loop rcrb pop out fidivrl es mov (bad) (bad) (bad) call xchg mov xor pusha dec lods jg add mov gs (bad) aaa mov cmp or push sti and or shrl pop (bad) mov scas fsubs mov (bad) mov out and int3 cli popf mov push pop jne (bad) (bad) ljmp jg push cltd jnp adc mov ja,pn (bad) xor sub add clc (bad) (bad) call mov cli lods je jge add out xchg mov sub cmp and adc fcomi out (bad) ljmp pop fadds xchg stc push fwait ljmp adc jno adcl shr sub cmp inc xor push pop movsl mov lds inc icebp stos push (bad) popa and dec sar xor pusha add cmp orb sub pop sub (bad) (bad) pushl cmp push ds in pop jo fistp aam xlat or xor pop lock fnstsw pop lock jae and lret jae insl xchg je cmp roll sbb mov das pop movsl movsl cmp inc std test (bad) (bad) call mov js pop xchg sti sub dec mov sbb stos dec xchg mov (bad) (bad) jg fnsave pushf ljmp jp sahf jle (bad) shrb in mov xchg push push pushf mov mov dec xlat test dec movsb add test mov (bad) pushl add bound das mov or out incb test cs sar (bad) (bad) ljmp mov xchg je sbb cs mov inc std mov cmc out sbb cmovs loopne lret je adc (bad) lcall roll dec cmpsb lret shlb jp pop mov inc sahf fs into (bad) (bad) ljmp and fwait dec xchg and imul les jge scas (bad) (bad) decl mov es aad stos fmull and std call lret or fucomip mov jae imul (bad) les incl (bad) cmp loope pusha xchg xchg sbb push int3 or push inc call xor (bad) call outsb enter push out dec mov xor sti pop arpl or rcr lcall pop push imulb pushf in scas dec push fwait mov dec adc (bad) jmp mov jl sbb lret arpl and pop shl cmp sub (bad) (bad) (bad) decl mov in sub das mov stos aas scas sbb push cmpsb out insl mov dec call ljmp movsb repnz pop cmc insl xor (bad) (bad) dec negl lods dec mov or addr16 out movsl call cmpsb in mov mov pop insb cli test push xlat fimull idivl test scas sarl jg push int3 inc or pushf in xchg xchg out (bad) lcall pop mov das fstpt outsb rcr aaa adc mov mov (bad) lcall ja scas sbb aaa sub dec and dec test pop inc fprem1 mov (bad) (bad) jns insb dec mov mov test cmp fcomps aaa push mov scas adc push fcoms (bad) (bad) (bad) decl stos js mov loop imul xchg pop repz call (bad) (bad) ljmp cmp cs jmp fnstcw mov ds add (bad) (bad) (bad) (bad) js subl push fwait mov clc frstor pop mov adc es xchg pop xchg push fildl aaa and pop loopne les loop cltd mov sub and pop or out repz and (bad) fcomip jo aas loope push (bad) sub cmp insb jb sbb (bad) (bad) (bad) imul jns xchg xchg push cmp jb mov or in (bad) incl adc arpl stos gs clc cmp (bad) fs inc data16 ljmp mov ret xchg cmp ds xchg imul (bad) (bad) push jle movd xlat adc imul fisub ret jg add popa xrelease sub lock (bad) ljmp mov sub mov mov lods negl out movsb lea and clc fbld lods xor mov mov sub in cs (bad) (bad) (bad) dec push pop inc leave jae xchg insl cwtl insb out pop push leave xchg (bad) push repnz in jb xor fwait mov cld decl lahf mov adc sbb pop mov or andb (bad) (bad) cmp stos or pop insb mov mov das mov pop xchg inc pop mov test lcall adc add xchg mov adc (bad) pushl jge mov pop test fisttpll popf cmp addr16 aaa jo or imul das push pop (bad) mov lock push loopne cmp mov xor fucomi movsb (bad) call xchg inc mov lret push fimul incb in pop pop (bad) (bad) (bad) (bad) jnp rolb adc repz popf inc mov and lods les (bad) pushl inc roll add (bad) popf push mov inc cwtl sbb ss or cmp xorl jle lock (bad) lcall sub insb lret fstps xchg fucom pop adcl lret (bad) (bad) (bad) fistpll cmpsl push sbb je mov cli cli fstpl adc sbb (bad) (bad) dec fwait scas repz cmp in outsb xchg add addb inc (bad) sahf scas adc mov (bad) ljmp sub cmpsb lahf fldcw mov dec push xchg jno and mov mov (bad) (bad) (bad) incl jne (bad) loop fwait and call leave test out push xlat fstps push (bad) ljmp mov loopne,pt mov in xchg mov add mov (bad) (bad) jecxz push or mov mov dec cli aad jbe xchg pop aam (bad) or sbb (bad) (bad) jmp xchg test push dec bswap jns xchg unpckhps push inc push rcl or aas cmp jg jecxz negb pop int xchg push mov (bad) lock mov jecxz (bad) decl and jge mov pushf in cmpsb mov es and jae hlt cmp jl mov push add pop movsb and ret jecxz movsl mov pop xor sahf mov cs pop test aas sti mov push mov (bad) xor dec jne adc call or mov bound push bswap or lock cmp or cmp outsl into jbe aad pop fs jg,pn (bad) push push pop push dec jle push loopw fisubr xchg dec inc sub notb or (bad) (bad) call xor je lea repnz add lcall loopne inc add add daa sbb jb hlt or (bad) incl cld ret jmp add insb add cmpsb sarl jno or insb mov (bad) (bad) aas fwait jae sbb cltd test sbb lcall cmp iret aaa xchg add fistl loopne fwait jp out pop in fimul pop xchg jge (bad) decl and mov sbb aam aad push add and push xchg nop scas imul (bad) (bad) call int3 push int3 insb ja hlt pop mov push push fistl adc (bad) pusha (bad) mov lret adc (bad) mov dec jmp xlat mov sahf inc scas mov xchg nop dec iret leave lock stos jno clc add sub mov jbe leave cwtl das std jae incl push icebp repz int sbb or jge push mov jp call jns sbb add imul (bad) pop xchg je (bad) (bad) mov cmpsb sarb jbe nop xchg mov data16 xchg pop pmulhuw movb sahf cmp call sub (bad) (bad) out adc xchg dec loop lahf sub jae jns push (bad) call loopne jae jb imull imul xor sbb call sahf aam sahf lds sub jbe pusha mov dec test pop jbe pop loopne (bad) cs je imul rclb popl clc adc (bad) (bad) ljmp scas inc mov cwtl or mov test mov (bad) fwait sub xchg (bad) mov mov enter xor mov scas call pop (bad) (bad) (bad) inc inc mov jl ja xchg sbb push or sub in fisubrl cmp mov aam mov jbe jp push clc imul lock pushl cmpsb lret and xchg xorb fiadd scas fnstsw adc mov enter cmp fidivrl (bad) (bad) (bad) ljmp pcmpgtw xchg lret mov (bad) test jno test stos inc lods sub (bad) jmp pop data16 jp scas arpl ljmp sbb mov sub (bad) (bad) (bad) jmp inc lret mov add dec xor (bad) (bad) decl inc js jmp rorb popa int3 lret dec or add inc incl adc xor bound out pop and (bad) (bad) (bad) jmp adc test pop in push sub repnz xchg and (bad) and loop pop lock call lods pop movsl jecxz (bad) push inc sub fmull pop xor jae push lds ret sub hlt jbe adc (bad) mov aaa popf cmp call addl lods pop xor lcall mov cltd dec jae aam faddl sbb (bad) iret push sahf and xlat lret nop and pop jecxz outsl (bad) ljmp js adc pop push push cmp testl (bad) stos (bad) (bad) (bad) ljmp mov xlat and sub fld sub ljmp sar inc cmp jg ficoml pusha dec mov pop xchg rcrb jns (bad) (bad) (bad) ljmp or mov lcall dec inc xor inc test mov stos mov (bad) (bad) decl aam sub lods pop inc sub sti sub fwait test pop push mov outsl jp into test inc cli lahf scas mov push xor pusha push sbb fs (bad) (bad) pushl mov imul mov int3 cmc mov adc pop cmp mov pop cmp shrl orl call push sbb mov movsb push aam and jle enter jno mov mov ljmp out and aam shrb jns loope (bad) (bad) (bad) call pop sub test dec jmp ja (bad) lds cmp push maxps (bad) (bad) (bad) call add stc mov clc jae xchg jo sahf int (bad) cmp pop mov mov pop mov stos and push xor adc outsb xor mov rcl jbe (bad) (bad) (bad) decl imulb repz fmuls fcomps sti scas xor (bad) (bad) call inc mov out add fildl sub loopne lcall scas (bad) jg incl xchg mov imul mov mov mov (bad) (bad) (bad) inc lds dec xor sub xchg xchg sbb lock inc pop mov call push cwtl jae mov stc sub mov stos sti std pop pop pushf (bad) mov movsb jnp jns (bad) (bad) (bad) (bad) js push cmpsl out add (bad) stos lret icebp lahf mov ljmp push sbb (bad) (bad) fstpt je in dec insl sbb repnz xchg test dec js,pt aaa vpshuflw loope (bad) sbb push aam xor je sbb (bad) in fmuls (bad) (bad) dec pop xchg mov sbb stc add xchg pop dec test (bad) (bad) (bad) decl pop dec cmpsl in jmp adc push ret stc and sub pop add rorl (bad) pop push dec insl sarb jbe dec xchg cs mov push or out fsubs fnstenv icebp pushf add (bad) pushl ret dec xchg (bad) push mov les fsubl ret stos (bad) (bad) (bad) jmp add add push sub inc int test dec sahf fs cmp xchg ret xchg loope (bad) (bad) (bad) call mov jo sbb popa fcomp jg jecxz inc sub test and in add lret jo lcall clc add push push cld outsb pop lcall lock mov jmp (bad) jg and pushf jg xchg stos int3 daa decl aas adc lret and or push call and outsl in xor lahf pop in fcmovnu sub scas mov (bad) (bad) (bad) (bad) call or push mov fldt std pop jbe out fcompl data16 cli (bad) (bad) incl ror sub add rcr inc ljmp jne dec cmc add push (bad) (bad) ljmp jnp jle inc sbb inc xor leave int mov sbb fisubrl (bad) (bad) jmp mov xor loopne or sbb ret pop aas enter (bad) mov xchg cmp add out (bad) ja mov jg (bad) imul or nop psrad mov mov decl insl inc mov push mov mov xor sbb mov and cmp and sub sub (bad) (bad) mov xlat outsl xchg inc jbe or mov lock lock jmp jnp jge je (bad) cltd hlt ljmp sahf adc test (bad) (bad) pushl (bad) xor stos das mov jb outsb scas inc incb out (bad) or push pop add (bad) (bad) jmp xchg inc pop add out cmp mov dec adc js pop jne xor int jp (bad) sahf (bad) (bad) (bad) incl add in test and fwait mov jmp lock test mov outsl xchg push (bad) incl mov sbb loopne xorl (bad) (bad) ljmp test cld icebp (bad) mov lret add xchg add and (bad) (bad) (bad) fstps or pusha xor xchg jno mov loope out jge jb dec dec ss inc (bad) out clc das or mov movups lret pop sahf pop jno pop ja sbb lret fcmovb (bad) (bad) dec push mov movsl sub push fstl and lods sub inc (bad) (bad) ljmp push mov push xor jo mov xchg jns lahf or jo (bad) lahf cwtl push adc in subps outsb cli xchg mov loop mov jle (bad) (bad) lcall pop jnp mov icebp out pop mov imul push ja (bad) (bad) (bad) jmp xchg mov (bad) (bad) lret lret popf pushf cs cmp push inc mov xchg sub inc sub xchg mov (bad) (bad) incl push pop addr16 std pop cmp nop push or mov cmp sub outsl (bad) pushl std jge int3 ljmp dec negb jge nop scas sahf xchg adc (bad) (bad) (bad) decl adc sti (bad) int3 dec xchg ljmp pop cmpsl or fsubs push inc sub in (bad) (bad) (bad) jmp cld pop int out ljmp test insb mov nop ja jg out pandn pop dec (bad) (bad) inc outsl or lods push cmp (bad) jmp call pushf adc (bad) (bad) lcall les dec pushf pop push xchg int pop movsb xchg jmp adc or inc (bad) jbe dec (bad) (bad) (bad) jmp push and adc dec iret xchg sti sub inc and xlat xor xor adc (bad) (bad) out scas inc aad gs fisubl sbbl or (bad) imul (bad) jle xchg ljmp imul fcoml or pop sti mov sbb das xor (bad) (bad) incl dec ret xor push (bad) sti pop pop mov and fcomps (bad) (bad) mov sub test addr16 and arpl mulb ret sbb scas out dec call (bad) (bad) (bad) fisubr jmp test pusha push jbe addr16 ljmp pushl xor or fstpt clc fdiv iret or pop ficomp (bad) mov in (bad) (bad) fcmovne cmp ds push arpl or (bad) jg js dec pusha cmpsl mov xor addb dec (bad) cld jg dec sbb stc fmuls mov es pushl cld inc pop mov (bad) daa (bad) shrb jnp jae call and popa (bad) (bad) mov sub popa sbb (bad) cmp push popf fwait sbb idiv (bad) (bad) pushl mov inc dec mov mov inc inc adc push cmpsb adc loope das clc (bad) incl (bad) repz and xchg jp inc fistpl inc out ret jg movsb sar (bad) jmp mov sub sub mov scas mov push cmpsb fs lods xchg mov out clc (bad) jg lds mov ss decb dec sti jmp push or lock pop xor lcall pusha (bad) sbb fisubrl cmp and xchg js mov ret fcomip add rcrl mov sbb sub cli sbb loopne jg arpl mov jle add je mov jge push adc (bad) lcall inc push mov inc sbb leave ds ret add push xchg pop mov hlt jge xor adc stos insl jl sahf mov pop data16 test dec (bad) (bad) pushl dec (bad) pop mov movsb sub clc cmpsb stos add and (bad) (bad) decl pop fwait inc push cmp in cmp negb xlat ret sahf lds ljmp xor cmp push or mov and mov (bad) (bad) mov push mov gs sbbl xchg mov movsb clc mov lods lcall mov repz fwait test into adc outsl test ljmp sub pop hlt in mov add and xchg jmp jp (bad) (bad) (bad) jmp aam xlat cmpb cmpsb sub aad or and mov (bad) dec sub (bad) decl lock hlt dec mov test pop sbb cltd arpl inc adc (bad) (bad) call adc pop pop or fcomps cmpsb sbb fiadd adc add jo ss (bad) (bad) in lahf dec ret sbb pop data16 or iret and lds push xlat and adc (bad) (bad) (bad) js inc arpl push xor jno add data16 mov dec scas cmpsb stos mov fcomip das shrb leave mov or jae lahf or (bad) (bad) (bad) (bad) aas mov cmp cmp xor fldenv (bad) cmpsb mov cmp inc add jle fdivs xchg lock imul daa cmp push lods stos test xor xor rorb (bad) xlat nop call xchg loope (bad) (bad) (bad) jmp pop insl push jle negl push in jb adc fiaddl cmp call std ljmp xlat pop and cmp mov es rcrl pushl std in lock mov push into jbe je inc pop xor fstps pushf mov test (bad) (bad) cmp icebp jecxz sbb ficom in fisub icebp fdiv dec test stos js pop dec je pop inc jle push inc imul (bad) ljmp and mov in sarl in loopne icebp push push pop jg cmp mov call xlat add ret popl ja,pt pop add pop push add rcr (bad) (bad) (bad) (bad) mov xchg dec dec xchg repz (bad) fiadd push (bad) cmp push cld lock (bad) (bad) incl jne insl neg cmpl inc xchg cmpsb (bad) sub inc pop insl or mov inc aam inc xchg lods mov in scas (bad) loope mov (bad) or cmp mov decl (bad) pop and cmpb pushf dec cmp into inc (bad) (bad) (bad) jg (bad) mov rcll aad pop and repz push (bad) (bad) (bad) inc shl (bad) repnz les adc gs xor pop mov xchg push fcos (bad) (bad) dec ja test rcrl outsl jns lret pusha mov ret ret push into xchg lahf movsb (bad) (bad) (bad) inc jnp ljmp xor loope int push adc push mov js mov (bad) (bad) (bad) call jp xchg cmc inc pop mov stc adc xor xchg repz xchg fs pop mov das sar mov jne je cmp js hlt xorb hlt and std jp dec sub mov sub jnp (bad) (bad) (bad) decl inc aaa shr mov add adc hlt loopne pop jge insl jmp (bad) (bad) (bad) pushl insb sbb jae push (bad) stos mov xor loop fs fisubl daa cs (bad) (bad) (bad) pushl loope test or add adc mov in lods mov je mov js fiaddl lock pushl jecxz daa decl xchg ss mov outsb icebp adc (bad) decl mul sbb popf xor clc jb pop sub outsl jbe jle (bad) (bad) pushl dec and xor xchg imul inc (bad) outsl mov push push jns pop icebp (bad) ljmp sbb inc outsl mov std add lret stos jns jle push mov (bad) decl ja lahf gs mov dec out scas pop shll (bad) (bad) (bad) lcall or stos mov pop mov or (bad) int push test repnz lret inc add sbb andl imul jbe pop (bad) jmp fstl push add cmp movsl out sub adc ficom sahf push push mov pop repnz lods popf iret (bad) (bad) inc leave dec push decl xchg jmp xchg (bad) xchg (bad) (bad) (bad) lcall in test push popl in cmp mov popa lds test dec ja (bad) fucom imul sarl add movsl jb and dec (bad) push lds fimull inc divl mov call (bad) jg imul inc jae lds push (bad) (bad) (bad) fdiv jecxz js fisttpll and rcll (bad) (bad) (bad) call jle nop clc add lcall inc inc cmpsb call jge mov daa (bad) (bad) (bad) pushl int add sbb mov (bad) xor dec (bad) sbb movsb push aad pop jmp int add and pop sbb jb cld (bad) jmp das test icebp jg imul (bad) and (bad) daa inc jb lea fwait (bad) aaa cld (bad) xchg sub aam ret or mov (bad) (bad) decl add xchg repz or jl xlat aad cli jmp scas out (bad) (bad) jg jne ffree jno sub mov cmp and add cmovs (bad) ljmp push xchg fistpl cmp pop out xor cltd in xchg jg add jl (bad) (bad) jmp and or dec xor imulb adc jmp sti jae push pop mov push mov das dec cmp in stos cld or mov cmp nop hlt mov fdivr sbb mov inc xchg mov fcoms ljmp sbb mul stc out outsb arpl cmpl jp fdivrl out aaa jbe push jae jecxz mov and inc push fisub sarl cld xchg inc adc sar (bad) (bad) pushl bound jle and mov dec mov and or sti imul aas sub add cmp cwtl incl shlb adcb int3 xchg ss xchg fwait sbb push loope pop (bad) (bad) (bad) inc inc lcall mov xlat jecxz aad pop aam ficompl and mov sub call mov cmpsl sti cmp pop loopne popf aas clc sbb xchg fcmovnbe jge mov (bad) (bad) (bad) inc movsb cmp mov pop mov cs or orb dec sub pop fnstsw mov stos (bad) dec (bad) (bad) dec mov sub mov imul loope add (bad) stc fwait mov push out mov (bad) lcall push stc shrl jns jmp packsswb lcall push cmc sbb mov push js (bad) fiadd (bad) decl sbb push mov in (bad) adc sbb adc pop mov fadd push xor adc iret test scas int3 test and (bad) (bad) fdivp pop mov pop sbb sub lea sub dec mov mov dec sub sti enter push lock lret mov inc das lcall xor in xchg mov es or stc ljmp jno pusha or xor loopne fmull iret pop dec jae int3 xchg mov sub movsl inc pusha push cwtl out (bad) ds aaa icebp (bad) call (bad) sub xor cmpsl out pop pop fwait les jg outsl xor and (bad) cmp cltd or (bad) in (bad) (bad) call mov mov xchg xor ss jl repnz (bad) (bad) jmp test ss popa nop (bad) ret in cld lds pusha fdivrp or (bad) call std dec sub push mov call (bad) (bad) call xlat cld shll dec push cld enter or push (bad) mov rclb lahf push addr16 (bad) (bad) jmp push pop outsb repnz mov jmp jmp rclb mov shrb jnp test loop hlt push mov pop cli sti mov stos mov sub int xor cmp pop jle sbb push (bad) decl push in movsl dec dec add lahf push ret or aam aaa inc add dec jns ss shrl jmp pop lcall decl sbb push sub stc jae cmp imul andl (bad) incl lock push sub jmp sub popa (bad) mov jno hlt (bad) mov loopne das popa adc ljmp cmp scas imul or push test jmp int3 mov (bad) decl lock jno sub xor cmp sub sbb jg call (bad) aaa ja add push push bswap fs test adc enter or mov mov dec jo xor cld (bad) mov subb mov xor fcomi push in (bad) (bad) call js movsl push dec in add test mov (bad) sbb out je (bad) mov and nop std pop imul out sarb iret (bad) jnp in fidivr neg (bad) mov jnp jmp sarl ret iret and jmp mov imul lods mov movsb outsb dec sbb outsb pop pop aad cli (bad) decl fbstp sbb dec jp outsl xchg or (bad) (bad) ljmp lret into sarl fs js aad jo push pop sub jle (bad) mov js mov adcl (bad) cmp fucomp clc mov (bad) decl fdivs push popa iret adc mov ja pushf xchg (bad) movsl add call outsb dec imul (bad) int mov pop dec xor dec incl test inc sbb add rcl sub (bad) xor add or xor imul neg scas jle lret jmp (bad) pushl sahf xor xchg negb push call xor jne xchg xor xchg mov mov pop mov (bad) xchg stos mov dec jo dec (bad) (bad) (bad) lcall sub add adc inc xor sbb sub (bad) (bad) pushl lahf lea xchg rolb ss daa ret loop xor sbb push in or outsb inc inc mov inc mov lret dec dec pop shrl (bad) (bad) ljmp pusha ficoml dec aad push cmc mov pop sarb mov push sbb insl hlt sub lcall or aaa inc mov (bad) mov mov or lret sub (bad) push loopne fnstcw scas sub cmp dec sub (bad) (bad) (bad) incl nop js mov es jmp xor pop cltd mov xor aad (bad) (bad) (bad) jmp pop sbb out lock repnz push lahf rcll pop ljmp (bad) (bad) push arpl sub sub xor lcall (bad) fimull cmpsb xorl jle xor push jecxz pop lea or dec fwait lods sbb fwait subl leave (bad) lcall inc rcl das les pop mov xchg push std cli xchg cli push test jns aaa std call scas (bad) cmc lret movsl jle lret inc ret jne pop jge mov lret lods (bad) (bad) jmp cmp pusha mov icebp gs cmp mov mov add ljmp fmuls sbb popf repnz js (bad) (bad) jmp mov mov es std mov aas inc jae stos mov or incl aad (bad) push cmp daa push call ret cmpsl xchg addr16 (bad) fcomip cmpb mov push mov mov negb cs xchg sub outsl inc je mov scas daa js test cltd rorb mov mov out lahf xchg rcrb jge xor sub jb or test push jbe jae adc (bad) (bad) jg js std cmp xchg and push cli orb arpl cmp fwait (bad) mov sbb insl in insl pop xor bound (bad) lcall pop push stos dec mov mov sbb imul ljmp pop sub fs (bad) (bad) (bad) pushl mov mov xchg mov pop sub add (bad) (bad) (bad) pushl cmp stos scas jb mov sbb pop out test dec mov mov inc sarb (bad) ljmp (bad) jecxz cli lahf and pusha cmp cmpsl inc mov imul jb xor (bad) (bad) lcall mov fwait mov out xchg (bad) mov dec pushf inc cmp lock roll aas leave add jae,pt xor (bad) (bad) call push jl pop (bad) jbe lret mov je mov xor call std call lds ja mov aaa pop lcall fcmovnbe popf fucomp call (bad) push sub fistpll shrl movsl (bad) mov mov rol clc mov test (bad) inc sub cmpsl and ds and push in add cmp test (bad) (bad) call ret aaa cmc ret pop mov adc mov jno imul (bad) pushl ss xor arpl insb sbb inc in fcomip (bad) (bad) (bad) stc push mov adc fdivs inc rcll mov sub sub repnz ss push insb jno push pop mov jg mov inc or and (bad) pop xor and imul mov loope data16 adc fucomip out sbb and (bad) (bad) decl in cmp imul pushf ret mov lds lret cmp cmp sub (bad) (bad) pop sti (bad) adc push jne test mov inc and dec stc test fwait and mov scas xchg (bad) (bad) (bad) jmp pop data16 sub add je lods pop cltd (bad) (bad) (bad) decl imul ret sub adc and pop sbb dec aaa out (bad) (bad) (bad) lcall inc lcall mov jmp pop adc pop sub idiv (bad) (bad) decl negl mov int3 mov pop pop es test insb lds mov add pop outsb testl aad test mov pop insl jnp stc out sbb mov pop inc adc (bad) popl sbb test bound or push mov ror lret dec mov mov ljmp mov mov shrl and or and (bad) (bad) (bad) (bad) call push test shrl daa movsb addl cli or mov es lock icebp fwait popf outsb pushl test nop jle fwait xor (bad) std mov push xchg inc (bad) int3 outsl mov jge adc (bad) jae test (bad) (bad) jg cltd jno sub jns push push xor cmp cld cmpsl sbb out xor add (bad) (bad) (bad) jmp dec pop enter fildl cs push out pusha and mov push mov mov dec test std decl adc inc sbb pop xor out pmaxub (bad) jg and scas or imulb jg cmc leave call (bad) (bad) (bad) call xor jbe repnz fwait jg jp dec cld jbe sub sti xchg je fadds (bad) incl cli push fldl inc lret xorl jg getsec mov (bad) (bad) (bad) jns clc mov pop xor mov je incl sbb aad xor dec jge insl jg (bad) ljmp dec mov aaa or call mov js (bad) (bad) lcall or gs xor sub inc add ret mov movsb ljmp jae mov pop andb dec jl push inc sbb (bad) jmp cmpsl jl ja and popf (bad) mov test dec push (bad) jg incl cmpsl cmp sbb call mov push push jmp gs jbe mov pop sbb inc mov int subl sti sahf sub (bad) call cld and jmp lds gs jecxz ror adc push ja js pop test (bad) (bad) (bad) (bad) call ja add sahf push das fcoml fbld jo or fildl test pop (bad) into lds jmp (bad) decl insl lds push pop cmc and cmpsb test (bad) leave cmc in pop jge out (bad) (bad) (bad) mov rcrb clc mov xchg cmp int in pop xchg shr pushl data16 cmp (bad) fsubrl call mov cmp pop or cmp inc jg push push mov (bad) (bad) pushl mov fsubrs stos cmp adc cli sbb jns sarb push notb test pop pusha repz xor mov (bad) fldl sub cmp push pop aaa or jae cmp hlt xchg test (bad) jmp inc pop lea dec shll enter loopne lea test or fisubl js lret subl insb mov gs mov add cltd xlat sbbb (bad) (bad) call jmp sbb jmp sbb or push movsb test dec jbe dec jns sbb mov test dec psadbw sti xor (bad) (bad) call cmp adc ljmp xchg out and pop add add call jo fcoms pushf jnp pushf insb inc mov loopne (bad) (bad) (bad) jg scas dec fcompl out test ret pop mov cmpsl mov aaa (bad) xlat popf stos sub jb aaa popf sub lods mov jl (bad) lret adc psllw jl mov (bad) (bad) incl cld push pusha (bad) inc dec jmp aaa mov and outsb fistpl pop gs nop pop push fsubrs and aaa std ljmp orl xor nop pop ss sbb stos add (bad) (bad) decl imul sub sbb mov adc clc stc xchg cwtl icebp mov (bad) (bad) push sub jmp pusha push fs (bad) aas inc data16 push aam push (bad) xchg (bad) (bad) jmp mov data16 adcl (bad) hlt sahf movsl mov sbb (bad) (bad) (bad) dec sahf mov ficoml adc in (bad) cmp jle test cld imul (bad) mov stos cmpsb aad mov or or jo xor fildll cwtl les inc add (bad) lcall adc insb adc (bad) (bad) jmp nop dec test ljmp in pop icebp sbb leave xor jg fimul std outsl clc mov aad xor push mov cmc imul add pop inc xor ret jns adc cmp inc insb fadd std (bad) decl rcr loop testl and aam test shrb ja (bad) mov nop adc mov xchg idivl gs (bad) push dec movsb push imulb add in jbe mov fnstsw (bad) (bad) in decl lcall or adc daa mov push cmc push xchg mov lods (bad) mov xor cmp cmp (bad) (bad) (bad) jmp in out cmp leave bound aad pop sub sbb das sbb cmp mov lcall das push jne inc (bad) xchg das icebp nop popa add dec mov or push sarl stc dec push enter (bad) (bad) in mov mov inc jmp out stos xchg jnp jnp leave jmp push mov das js hlt decl out sub xor jne sub add lcall cmpsb sub out add push lock ret pop fxch mov (bad) jg xchg out (bad) ja int sub (bad) jg jne push sbb pop sbb (bad) lcall xor outsl rcll ss dec clc stos pop call repz (bad) jg mov jl cmp (bad) dec xor push add inc mov lock jp xor enter inc and loope popl pop pop dec mov (bad) (bad) (bad) pushl sbb pop stc out sbb add inc test and (bad) lea or lcall sti (bad) mov sub hlt xor pop ljmp lods data16 (bad) (bad) mov jecxz cmpsb push adc jecxz push popa nop push add push leave std mov inc mov (bad) mov loop or (bad) (bad) dec sbb in mov (bad) (bad) (bad) lcall clc inc lds loop mov mov add jae xor stos pop cmp add stos (bad) decl sub xor fdivs or xor (bad) (bad) (bad) (bad) call ret aam aam std inc arpl cmp fmuls pop es jecxz out (bad) (bad) (bad) dec addr16 lds mov test sub xchg fiaddl mov fwait cmp outsb and incl shrl cltd pushf aas or scas scas out loop inc or sbb lea jl loope (bad) ljmp leave insb outsb icebp out test into xchg push mov nop inc mov rorb lcall movsb loop lds fcos (bad) pushl shll lcall jg sarl sti xor bound inc (bad) (bad) (bad) incl cmpsl mov movsb and sahf stos pop mov scas loopne arpl out push mov dec sub xchg mov adc lock jno push jmp (bad) (bad) (bad) incl or dec addr16 rcr and mov rcll inc pushf lcall jmp ret (bad) (bad) iret push aam jge inc inc pop mov cmpsl or pop dec push xchg js jb or cld stos mov lods stos in jnp xchg repz add inc (bad) (bad) (bad) (bad) cld pop leave sbb mov stc fsub loop (bad) aad push call lock (bad) (bad) incl ljmp in xchg xor or dec mov addr16 (bad) mov xlat imul mov dec xor jge (bad) (bad) (bad) jg scas mov std sub xchg hlt test movsb mov jnp mov pusha inc nop add and ret (bad) (bad) (bad) cmp pop cmovnp imul pop hlt mov sub outsb cmp cld jg nop fcoml push pop push inc in rorb mov fiadd mov xchg stos fdivrp mov in shr mov pop xchg push data16 jne jmp sbb push jg (bad) (bad) js ljmp incb and xlat jb jge dec stos mov ljmp ss sub inc jge sub sub pop (bad) lret mov (bad) (bad) (bad) jmp lret in sarl cmp aaa push adc sub sub sbb (bad) (bad) (bad) incl iret test loope jl cmp cmc aam jl in jnp mov popa sbb (bad) (bad) (bad) pushl mov popa int fidivl addl mov fisttpll hlt xorl dec inc (bad) repz adc push xchg pop ror xchg rclb inc bound out push pop test (bad) negl jmp clc (bad) cmp out movb inc push dec js rcrb (bad) (bad) mov stc sub cmpsb mov or xor xchg enter (bad) call test jge pop jnp mov sub push lods jns jne out mov (bad) (bad) lcall xchg xchg xchg sbb cmpsl (bad) bndstx adc xor (bad) (bad) (bad) (bad) mov and inc jg rcrb jne push lods mov xchg mov (bad) (bad) (bad) ljmp sbb mov xorl xchg sti mov sbb test add cltd add (bad) (bad) (bad) jmp out mov pushf inc jl pushf scas sbb in add dec stc imul scas into adc clc sub test addr16 mov cmp mov (bad) dec aad or mov or pop or sub inc and or cmp adc cmpsb popa fcoms ss inc dec xchg xchg mov adc xchg imul pop xor (bad) (bad) lcall adc scas aam jmp mov stc ss jno enter lret push mull mov leave pop sti ficomp fistpll mov mov jo,pt and sbb es outsb mov cmp movsl out or mov bnd loopne pop decl dec jo popf das (bad) (bad) (bad) stc add fmuls stc daa mov cmp pusha cmp fucomp push dec mov nop push cmc push xchg (bad) (bad) fcomip mov nop jge outsl call clc jmp add pop dec mov std push (bad) (bad) ljmp sub gs lea lahf jmp (bad) xchg mov cmpsl nop jo lock (bad) decl pop pop ret mov add xchg inc mov in (bad) outsl (bad) (bad) jg jo sahf cli jle jmp mov (bad) jl popf inc mov pop jg inc mov (bad) std imul pop or hlt and xlat bound lret inc (bad) (bad) (bad) (bad) fisttp outsb cli pop inc mov lods loope loopew jg stos pop inc cmpsl mov mov jnp (bad) (bad) pushl jno mov or hlt inc mov cmp dec dec or inc jle arpl adc outsl pop push insb movsl cltd cltd out dec je,pt mov mov cld decl mov cmp or and insb add fldt pop (bad) (bad) (bad) (bad) pop jle jo pop pop xorl rcrb xchg imul bound mov mov sub jae xor mov and mov lock test mov popa xor (bad) jmp test es loope js mov mov cltd fstpt (bad) (bad) (bad) pop inc push shlb loope (bad) clc int3 outsb xchg mov xor std inc daa clc (bad) (bad) (bad) cmp lcall mov (bad) cwtl xchg pusha push repz aad pop stos popf xchg out (bad) (bad) (bad) jl push test cmp lods sub leave sbb inc fild out (bad) into cld aam std aam jle (bad) (bad) (bad) (bad) fild jle movb or int3 inc int3 xchg adc jg (bad) (bad) decl mov testl sub clc inc mov enter jl decl (bad) js imul enter rorb mov (bad) (bad) call adc mov inc test sub aam jg dec insb insb shrl mov aas inc pop addr16 data16 dec pop and jl lcall add (bad) (bad) incl repz test idivb sbb imul mov adc hlt push lock (bad) call sbb sbb cmp movsb xchg testl mov sub iret (bad) (bad) (bad) fild mov cltd xchg adc jmp ficomp out loopne sbb loopne fisubr (bad) incl mov arpl sub mov subb cmpsb cmp clc aaa or fisub fwait push push movsb adc cmc (bad) (bad) jae (bad) (bad) out bound cmpsb insb sbbl pop jmp push adc inc imul imul jg ss ss xchg dec (bad) loopne cmp inc or (bad) jl mov sbb or shrl jns xchg sbb aas mov imul loopne mov inc scas call xlat leave jle call sbb adc mov xor (bad) (bad) (bad) mov push sub push loopne aas in xchg les rolb scas inc jne and (bad) (bad) (bad) inc or js lock dec ret mov ss pusha pop cld push (bad) mov mov dec jnp push and ljmp cmpsl ss daa dec fsubrs xchg jge arpl dec incl sahf add fld add (bad) mov or mov inc push pop mov dec (bad) cmp call xor insb adc jp inc pop shll negb (bad) incl mov inc ret mov sti aam adc inc lock adc (bad) (bad) lcall push roll fcompl jp test inc pop push dec insb xor xor mov pop ficomp (bad) (bad) call cmp lret ret inc shr call roll lods cli sub dec inc pop mov (bad) fimull jmp leave or mov push pop cld (bad) dec add les mov shrb and adc jno ja (bad) aaa cld (bad) pushl aad push jp push or sub sbb jl pop insb divb (bad) (bad) (bad) incl sbb aad notb and mov cmp add inc clc sbb (bad) cmpsb xor lcall roll mov lock sahf daa cld push scas mov (bad) (bad) ds out daa or outsl rorb leave inc insl ds cltd pop jp mov movups mov cld sub lds outsb push inc movsl cmp push ret mov (bad) incl sub (bad) sbb and movsl das adc cmp icebp inc push add (bad) jg clc and les cmpsl repz lcall notl (bad) lcall ja repz fldcw das xor add (bad) (bad) (bad) ljmp (bad) popf sar sbb sti adc cmp cmp lcall xor jno and (bad) (bad) jmp cmc xor push adc test pusha scas adc cmp and test mov inc andb (bad) call sub xlat push and pop and sbb sbb (bad) fsubrs push pushf stc lock (bad) (bad) (bad) fisubrl je xchg mov leave cltd add mov imul das aad (bad) (bad) (bad) jmp fadd and es pop aam cmpsl pop push bound mov sub xchg mov ljmp sar mov js addb and or (bad) call ret fs push sarb xchg adc loope rcrb rcrl push (bad) xchg jp xor mov jmp lods adc jecxz xchg push sub mov (bad) (bad) inc inc jns fldcw push sahf mov inc and cmp jge gs (bad) (bad) ljmp or gs pop push pushf fmuls cmc clc (bad) repz xor aam add inc push addr16 (bad) (bad) incl es sarl xchg cmp test mov into call xor sub (bad) (bad) (bad) pushl or popa insb adcb pop push fwait btc and loope out pop push lods cmc repnz test jmp jecxz pusha sti js sbb rcrl add rolb lds jle sbb mov and out (bad) (bad) ljmp push iret test jno sbb inc les pop sbb (bad) mov sub mov (bad) (bad) (bad) (bad) cli pop and cwtl push mov ret xchg sarl dec jmp mov pop and mov sbb (bad) cmp or sbb or jp push push movsb mov xor sbb mov add rclb lock lea mov and and add (bad) (bad) ljmp dec (bad) stc or ss rcr push mov sbb std add jg jg or shrb lea cmp rcl loop out mov (bad) jmp or cltd inc adc adc push rcrb cli or lods pop loopne jmp dec add rcrl adcl sahf or clc or ret mov sbb sub movsl scas repnz or loopne shr dec jg mov enter (bad) (bad) (bad) call and imul loope stos jg fildl and jnp mov loopne ljmp fisttpl or or out inc mov pop inc fs imul lret pop (bad) (bad) call sarl popa test test inc sub adc xor push dec add and mov push (bad) (bad) mov repz pop xchg icebp adc or dec inc iret mov leave ljmp insb dec sbb sahf and jp gs das and jae sbb (bad) xor fldt dec les jge (bad) mov orb dec sub jp enter (bad) (bad) (bad) ss ret insb inc es ret loope subb pop dec xor test (bad) (bad) pushl loopne pop icebp sbb stc repnz ret lods pop cmpsb cmc fld (bad) mov xor (bad) outsl jg cld add sar movsb add stc jl jl jns lahf cmp pop iret out add imul xor pop out mov es inc pop inc push (bad) (bad) jg std cmpsb aam mov lahf or in lret nop mov lret cmp (bad) lcall aam cld ficomp xchg std or jle mov mov (bad) data16 or (bad) pushl (bad) cmc outsb fiadd jmp push movsl jbe scas cli cmc ja out jle rcr mov (bad) (bad) (bad) mov jl out jnp xchg and inc lahf stc dec rcl ret sub idiv jg xchg push sbb xchg and in les fsubs scas jmp dec jnp adc ret sbb pop cld (bad) (bad) (bad) lcall fdivr aas add lea popf das inc addl mov les mov jo int imul inc add (bad) mov out ss mov dec cmpsl and lock mov jmp add test mov pop imul sub xchg mov push scas or adc push xor call (bad) (bad) (bad) (bad) fsts stos and add rcrl mov (bad) or dec mov (bad) pushl sbb icebp dec and fidivr and dec add call dec sti jg testl inc mov jmp idiv fild decb adc stos xchg lods sub mov mov or ja addl cmp inc clc cli add pop adc sbbb dec outsb shrb xchg int3 pop pop mov mov out push fisttp (bad) cmp xor jb push xor call jg (bad) incl mov adc mov rclb stos in mov cli mov cmp (bad) lcall inc idiv popa mov lea lea mov ja aam adc fcomi pushl dec aam adc xor pusha mov call xlat imul pushl ja inc inc push insl inc cld xor stos xor adc push sbb in inc aad and incb outsl xchg pop hlt in in sbb lret sahf rol lcall (bad) dec ds cs hlt (bad) decl dec decl movsl out or movsl mov mov jle (bad) (bad) incl adc pop adc inc mov lahf mov and test add adc pushl mov (bad) adc addr16 popa (bad) (bad) ljmp cmp push sbb lret and mov xchg cwtl aam push inc shr adc data16 fisttp out mov adc jle sbb jg sti (bad) fnop adc in adc lret leave mov inc push inc pop (bad) xlat sub fistp jg or (bad) mov mov insb add jnp loop pop add call call lret jecxz or inc hlt (bad) sahf mov shr push out sti (bad) call cmpsl rcll std mov sbb inc clc imul (bad) (bad) (bad) (bad) (bad) cmp jge sub pushf xor sub ljmp movsl jb sbb (bad) (bad) jmp jmp lods fsubrs out xchg out iret dec cmp (bad) (bad) sbb test loopne loope sub test sbb stos jns (bad) (bad) (bad) (bad) mov jb jle adc aaa jg or xor nop popf push and sbb (bad) (bad) (bad) call mov pop mov cmp lods outsb adc enter lahf xchg adc push mov sbb (bad) (bad) lcall int ds jle add loop ret or push lahf imul mov das clc scas and or popa (bad) iret adc js sbb sar loop sub cmc cs sbb fisttpll mov xchg or cmp (bad) out push pop fldenv in adc push dec arpl pop add jg aaa (bad) bnd (bad) (bad) (bad) lcall xor pop outsb or in arpl mov cmc out movl (bad) add insb mov and xchg ljmp stos jle adc call andl mov gs xor (bad) (bad) jg nop aad pop bound frstor lahf lods ficompl sub adc in outsb mov xor (bad) (bad) decl popf in ds mov ret sub aad ds divl mov daa (bad) (bad) (bad) lcall mov adc adc sbb mov xor iret gs (bad) (bad) incl mov add mov dec lods in mov insl ljmp (bad) aam add (bad) bound popf fldenv or adc test fisttp cli (bad) (bad) (bad) jmp aaa or fcmovbe sub xchg cmc enter insl inc xor out movsb (bad) (bad) cld pop add loope xor bsf (bad) (bad) (bad) cmp lock aaa leave adc push push jne jnp and dec ds shrb (bad) lcall test (bad) dec ss int ret fnop mov cmp dec repz (bad) (bad) lcall mov inc pop or mov das xchg rcr add cld mov sbb (bad) jne (bad) (bad) lcall scas lea addr16 ljmp or addr16 into sub gs (bad) pushl mov add pop xchg ljmp xor lods sub (bad) (bad) incl jae dec nopl jg cmp (bad) mov jne rol jecxz aad (bad) (bad) decl sbb dec inc xchg cmp loop sub movsb ljmp out dec aaa add (bad) (bad) ljmp data16 xchg icebp test and mov cmpsl adc mov push sbb mov jb push xor ds xchg sbb sub hlt mov decl and mov lods dec imul scas ret rolb (bad) (bad) (bad) ljmp mov inc out xchg int loope mov or push loope xor lahf fdivr (bad) (bad) decl xchg xchg sub jnp and (bad) sti icebp cs pushf faddl (bad) (bad) inc lret arpl push je jbe ret ret add mov test stos (bad) lcall sub pop jnp stc loop adc out insl scas in incl mov add (bad) inc sbb cmp or sub push nop cmpsl mov (bad) (bad) (bad) jg jecxz aas shr rcrl data16 push or and mov test (bad) (bad) call sbb aas loopne into dec push (bad) jno enter div jae mov jmp pop xchg add dec cmp (bad) jmp mul or pusha or mov bound dec insb inc push (bad) lret push jge jb mov ljmp int3 ret mov jo jecxz cmp (bad) insb and jge xorl aad fs (bad) (bad) jmp mov add bound arpl jnp pop dec loopne pushf out (bad) out xchg (bad) imul push lods aas (bad) cwtl (bad) iret sbb (bad) (bad) (bad) fildll int jns mov outsb pop repz sti int xor (bad) pop into mov adc pop inc fcos (bad) (bad) decl or xchg loopne push jge push xor jne inc or dec gs adc dec cmp decl and and xor and or adc leave out ljmp (bad) lcall cmpsb jne or outsb sar xchg jne push xlat cltd xlat negb test pop push (bad) (bad) (bad) call gs je sbb insl std sub negb mov pop ljmp (bad) ljmp daa pop adcb imul adc or and out sarl mov pop (bad) inc (bad) repnz ret outsl or stc jp (bad) sar (bad) decl mov pop std jae xchg xchg stos dec lock push sub movsl fcoml out (bad) (bad) call aas stc xor pop negl jl pushf add aaa jbe in (bad) (bad) mov lret cmc and fs cs aaa inc insl int pop shll icebp and mov mov (bad) (bad) (bad) (bad) mov inc int3 jl xchg scas ss mov sub dec mov aam lods les (bad) (bad) incl add or sbb rcrl pushf or lret imul mov sbb lods push push mov (bad) leavew outsl inc xchg (bad) sbb (bad) (bad) decl fsts xor xchg ret (bad) lret sub clc adc pop jbe ds (bad) (bad) (bad) jmp xchg mov test int3 push pop ficompl (bad) stos cli cs stos inc xor out push outsl cmc and mov mov xor xor test in (bad) out cli call fsub in iret push in push popf jl mov cmp repnz (bad) push xchg lret fwait aas mov sbb adc popf inc in jg movsl sub (bad) mov inc push aam push mov and sti subl (bad) pop (bad) (bad) (bad) incl adc xor inc imulb push cmpsl aam test pop push cwtl mov add (bad) jg mov sarb or mov ja andl mov jne (bad) (bad) (bad) call mov jecxz fisub ret in mov inc dec sti pop push push and sbb jl jo (bad) (bad) lcall test pop insb (bad) push js or push leave in add out mov or dec jnp scas mov aad andb jae mov daa jp gs (bad) (bad) call mov lea dec cmp mov or adcl sub decl aad gs pop xchg jbe fdivs je (bad) jg ljmp xchg pop mov dec jno xchg faddp cwtl mov movsb lahf mov (bad) (bad) (bad) inc cmc push sbb cli dec jge pop loopne mov xor enter pop jo cs incb push lods dec jl and fstpl lahf test sub lods lock pop test push cmp mov adc ss add gs mov lret cli std (bad) cwtl fdivrp mov ds sbb inc cs nop cmp (bad) (bad) in ljmp xchg test or or jge ljmp xchg ss (bad) push cmp push decl mov xchg sub xor cmp arpl std (bad) (bad) mov icebp or sub enter cmp sbb pop cmp mov cmc repz jmp inc dec xor daa fucomp lock and je jae movsb insl xor aam push sarl ret (bad) (bad) fildll ret mov popf int3 jb inc (bad) cld sti sbb dec push loopne inc push scas inc dec (bad) (bad) (bad) jg dec xor fsubr das shrb mov idivl push and sub xor cltd iret (bad) (bad) (bad) jmp loop fistl mov loop push scas imul js mov mov mov inc add dec adc into xchg arpl (bad) decl (bad) incl cmc inc stc jae popf push sbb push lcall lea cmp (bad) mov push push sub jle pop push lret mov (bad) pop test (bad) (bad) (bad) jmp xor sbb pop push jae mov or cli dec mov mov decl enter cmp xchg leave lds cmpsl xchg (bad) mov in mov inc adc push test jne cmp outsb xor bound or jno cmp shrl adc pop lds mov ficoml (bad) lcall push movsb in iret mov pusha shr lods adc mov xor (bad) ljmp test xor loop pop or cmp lcall xor (bad) (bad) (bad) ljmp xchg sub mov push xchg push jp and xor gs (bad) (bad) ljmp notl outsl popf movsb adc fldt xchg jmp push (bad) das mov pop mov mov jb das mov (bad) (bad) dec out imul pop sub sahf pop subb push (bad) ret xor push push divl (bad) (bad) (bad) jmp add mov jno (bad) je (bad) jae sbb aaa pop jmp mov mov incb cwtl popa inc sbb sub ret pop clc (bad) (bad) incl pop (bad) mov lods xchg push add outsb mov jnp cwtl (bad) (bad) (bad) incl shll mov aaa pop in dec sub sub lods lds or push xor cwtl mov (bad) jmp mov mov sbb je repz fimul xor test (bad) (bad) jmp loopne push cli (bad) out inc cmp and mov popf inc (bad) xor dec sub fcmovne xchg es mov mull jecxz mov cld aaa mov mov (bad) (bad) call in (bad) into sti jno ss cltd rolb lods push or xor or (bad) (bad) (bad) ljmp test (bad) mov mov push popa in and (bad) lcall rol adc mov sbb clc sub adc mov (bad) (bad) out clc jp push cwtl shlb mov hlt dec mov dec movsl add ss (bad) ljmp incb fimull and add jp lret (bad) jb hlt or (bad) (bad) (bad) pushl xor js in mov mov xor and cmc add repnz pop call sar pop loop gs jecxz cli cmp ja pop aas (bad) (bad) (bad) incl pop icebp sbb int sub and or xchg stc lcall pop mov add push les ret add (bad) (bad) (bad) call es rcr sbb sbb icebp testb (bad) fldt lods js inc pop (bad) (bad) (bad) pushl lret push div nop jne xor xlat inc push (bad) mov xchg pop (bad) incl fstpl orl adc cli lods inc int jae adc dec mov lds xor adc iret pop out and mov mov mov (bad) call cld out movsl fldl xor in (bad) in mov mov mov sti (bad) (bad) lcall mov (bad) jbe aam or xchg ljmp add mov (bad) jg lret dec test adc jnp movsl or sarb pop insl adc xor fdivrp (bad) (bad) jmp int clc push ja rclb xchg and repnz jns mov sbb (bad) (bad) call xchg sbb mov dec inc and lret cmp mov mov ljmp adc mov sub jnp test test push adc (bad) fdivr mov mov stc sbb push jno mov push std (bad) (bad) lcall sub mov sbb adc sbb leave add or pushl and cmp xor lea add ljmp jmp (bad) cmp icebp push mov bound daa mov aas mov sub lods loopne inc repz (bad) (bad) decl int jno cltd popf mov outsb dec call loope jns jmp mov in setns (bad) (bad) incl push or test mov sub test pop mov lcall pushl mov (bad) bound insb (bad) cmp (bad) pop push js push rorb cmp lcall cmp fucomip sbb pop aam ret fstp jne xor (bad) ljmp imul mov fistl and sbbl (bad) fcomip jg mov das adc ss cmp dec sbb adc (bad) mov fdivr addl test pushf roll (bad) pushl jbe add sub stc push jnp dec sti push jle cmp dec ret (bad) (bad) (bad) ljmp pop sbb pushf sub (bad) sbb inc cs pusha gs aad xchg rcrb (bad) (bad) incl ja add pop (bad) jne sbb xlat fistl pop notl push insb xchg packsswb decl (bad) (bad) jns vunpcklps icebp popf mov jecxz lea xor mov scas push sbb (bad) (bad) loope mov mov mov (bad) mov (bad) (bad) (bad) lcall push lods stos or in xor jecxz inc add cs ret jl clc (bad) mov sbb dec subl popa dec jb daa call movsb cmpsb stc lahf icebp cld sbb cld (bad) (bad) jmp adc jg insb lock lcall lcall xor aad (bad) (bad) pushl cmp fisttpl lahf ljmp faddl mov dec inc stos test pop out test jb mov in stc repnz out pop out fmul hlt push std sbb (bad) (bad) ljmp sbb dec ret adc mov xchg in rcrb inc mov (bad) cmp cmp (bad) decl and push int das hlt sub in cmp int enter jl divl cmpsb popa sub (bad) (bad) (bad) jns push push adc out add (bad) xlat cmp in inc jae daa or pop push es (bad) (bad) (bad) fbld pop jb xchg xchg jne mov or (bad) inc mov adc sub lcall dec mov jb ljmp (bad) insb les adc push xor insb push pop cwtl mov (bad) jmp sub test pop sub mov insl fcmovbe insb pop cmp jno jno dec outsl jae out outsl inc outsb mov push data16 (bad) (bad) (bad) pushl aaa mov lds or mov sub call (bad) mov xor (bad) (bad) (bad) decl ffree lahf stos push popa sbb movsl cmpsb hlt int sarb into xchg nopl dec and jmp or lret xchg movsl jl inc mov mov xlat rcpps cmp (bad) (bad) (bad) ljmp add rclb add sub or movsl leave shll hlt jbe mov (bad) decl fidivr aas mov fwait adc jp addr16 or mov inc ljmp add data16 xchg ret adc sbb es inc iret jo,pn inc (bad) (bad) fcomip out push repnz cwtl inc pop cmpsl mov stos out adc (bad) (bad) (bad) call mov fldcw xchg rorl xor jecxz ret pop ret pop push (bad) call neg mov push gs mov add (bad) nop aaa std (bad) ljmp adc icebp mov or jno jae push fwait and push outsb xchg cld (bad) (bad) lcall adc inc arpl gs pusha sub xchg es loopne cld cmp inc lcall (bad) (bad) (bad) call arpl test inc std pop out push pop push fistpl into mov arpl outsl push cmp (bad) (bad) (bad) call test (bad) bound mov dec sbb mov jecxz dec xchg xchg mov outsb and sbb xorl iret xchg in in clc (bad) (bad) (bad) ljmp orb mov or (bad) jb pop jbe push xor sbb push cltd scas outsb insb add aaa pop (bad) jmp jmp test sbb mov (bad) int lods je (bad) (bad) (bad) jmp in mov cmp adc mov ficoml pusha cmc pusha loopne jecxz outsb xlat pop (bad) (bad) (bad) (bad) fdivrl or jge inc adc dec xchg outsb cmpl ja adc cmpsb adc int3 cmc push pop pop inc lcall mov mov and mov idiv aaa pop pop sarl or xlat js shr call inc mov mov loopne or aaa lods in hlt outsl adc mov std int jne inc std fild dec mov roll cmp (bad) jmp xchg aad cmc subb mov out icebp adc mov lods shlb adc (bad) (bad) (bad) (bad) (bad) out out adc sub cmp insl adc sub or push insb inc xchg jns repnz out inc xrelease loop or ds js fwait ja loopne cmp (bad) ljmp (bad) mov ljmp push int pop stos xchg lods movsb pop mov out and jg decb xchg xchg push dec lods std fcoms in js (bad) sbb mov (bad) dec sbb mov stos or sti stos (bad) (bad) cld xchg sub daa test inc (bad) cmc push je jbe jno stc fs sbb mov (bad) jg cwtl pusha inc test inc mov mov adc iret sbb rcr (bad) call fnsave jle rorb ja mov xchg nop (bad) (bad) (bad) jg stos mov mov push mov fimul sub cltd ja in cli mov and cmc scas loope mov (bad) pop inc lcall xchg sub int3 inc js xchg ret gs in mov (bad) mov push mov mov sub mov xor push cmp lcall pop lahf mov mov fldt jmp ljmp sbb pop dec or sar (bad) (bad) dec push (bad) imul (bad) push jmp jns (bad) imul mov inc sbb sub test fs push das or pop loope (bad) (bad) (bad) (bad) mov frstor xor mov mov shl bound loop (bad) jae (bad) (bad) (bad) (bad) jmp and xor fwait mov sbb aas jl dec lahf fstpl fadd lcall (bad) decl lea adc sub (bad) (bad) imul clc out mov cmp nop mov test idiv (bad) (bad) decl pop imul adc pop insl outsb push mov in mov int3 and fimull xor (bad) (bad) call (bad) or dec mov gs clc lods mov push test stc and cmc (bad) call loop repnz or xchg adc sub loopne (bad) xchg xchg jmp nop and push push sti int mov sbb cmp rorb fwait add jg imul out push mov push pop or fdiv push test mov push dec inc inc dec push sub sub loope or add sub decl mov push jmp loopne ds mov popf pop jmp (bad) (bad) (bad) call sbb and inc mov jp popa sbb repz loope dec and aaa test jne adc xchg pop sbb pop leave mov (bad) pop mov in aaa iret test pop popa and (bad) (bad) (bad) jmp jbe test ret mov ja scas xchg iret xchg notl xor icebp push mov (bad) push mov shl push pop lea movsb mov push lcall (bad) enter mov js aas add dec movsl sbb loop jns (bad) (bad) (bad) ljmp or jmp nop xchg xor pop cltd lds daa or push test ljmp cmp or in sti xor jns loopne add mov lcall test mov cmpsl into (bad) xchg push cwtl xor push jecxz int3 ss sbb les aas xor subb (bad) adc push push fbstp insb xor icebp sbb sbb adcb stc pop insb ss mov dec loop lods nop sar (bad) incl jecxz sbb adc pop adc (bad) or data16 push xchg and sub (bad) call mov push mov inc xchg fnop pop push push fisttpl (bad) (bad) (bad) cmp sbb outsb add nop sbb mov push cmpl rclb adc jp mov sbbl jo xchg inc dec subb cmp xchg mov into in push dec out push dec inc aaa cwtl jo frstor push pop test (bad) (bad) pushl jae sub pop in movsb imul mul nop arpl xor roll sub (bad) incl imul mov mov add mov mov loop jmp scas adc adc dec jp imul into (bad) (bad) (bad) lcall dec mov dec push inc jmp (bad) ja pop dec and inc addr16 data16 repnz mul (bad) (bad) jmp pop fmuls mov xor jno sbb mov mov in enter inc cmpsl stc imul insl cmp mov ljmp in ljmp jno mov cmp or jmp add inc sbb in iret inc or in (bad) ljmp stos jg mull outsb test pushf bsf sub (bad) lcall and push leave outsb mulb pop gs stc sbb dec jecxz cmpsl cli and jmp adc mov add wrmsr mov test pop jp repz (bad) (bad) (bad) call mov daa and cmp fwait rolb test mov int3 adc or scas mov aaa ss cmp pop inc out and or arpl ja mov test test adc pop dec mov dec adc (bad) jg lock into ja mov or mov inc clc (bad) decl jmp loopne xchg out add jae xchg (bad) ljmp js mov orps add call scas cmp jae xchg jmp dec push fistp xor sbb orb rolb push or (bad) call arpl push sbb stos outsb cmpsl xor jp inc xchg pop (bad) mov and (bad) (bad) lcall xor mov push outsl mov jg clc xorl mov repnz mov (bad) lcall sub ret lahf loopne adc jne outsb mov xlat pop in loopne mov jmp cmp cld dec jbe je mov mulb (bad) (bad) mov inc arpl push fimull pushf push jl stc jno cmc rcrl in (bad) (bad) in decl adc xor out ljmp in sbb bound add (bad) bound (bad) lret mov push xchg out or mov mov mov jecxz test data16 lock cmpsl in out clc (bad) loope inc lahf notb or inc in push push popa mov and (bad) dec data16 adc adc jno scas insb mov pop add jno (bad) (bad) (bad) fist fwait cmp dec dec push (bad) jbe mov insb inc arpl jns xchg pop sbb fwait cwtl out lcall lcall icebp divb shrb inc test ret (bad) (bad) (bad) call outsl shl ret lea cmpsb or jmp les cmp (bad) pop cmp or sub (bad) (bad) dec jnp (bad) ret int3 push ret loopne scas repnz adc (bad) dec arpl mov pop cmp in (bad) (bad) (bad) aas movb iret lods lock out adc push cs push adc add loop int3 cmpsl jl xchg arpl pop hlt cmc jno lahf sub push push jecxz enter repnz mov inc adc fs inc je sbb sbb xor lret imul pusha sar outsl xor es push jb cmp adc mov add scas xor test sbb (bad) decl jb or or negl fnstenv push mov xchg pop adc mov stc add fistl sub roll mov mov sub (bad) (bad) jg dec xchg jl (bad) cmp ret mov mov stos sti test or aaa in add (bad) jmp mov push mov (bad) xchg xchg jp lock sbb arpl outsb inc clc dec imul iret pushf inc clc push outsb mov jbe xchg fdivrs leave or es dec and (bad) lcall sub mov adc add bound sbb pop or lods das sar pop jbe loop popa mov mov iret inc scas adc mov pushl popa mov and pop cmp je ljmp cmpsb scas test (bad) push insl leave lds pop push or enter fcoml daa cmp scas pushl (bad) sub inc jns mov add add fldt dec cmp (bad) (bad) pushl mov imul sbb aas iret sahf test sbb mov (bad) (bad) fdivr and aas sbb xchg out cmp xchg js outsb in nop loop pop std (bad) (bad) (bad) incl mov data16 ret mov lcall call pop jae ljmp call fdivp inc inc gs pop imul sbb cmp out dec loope (bad) (bad) (bad) pushl jp xor pop lods (bad) in mov ljmp scas sbb hlt mov (bad) incl insl loopne inc jb sub inc test in ss dec out and push mov decl repnz (bad) fldl or (bad) mov das jge dec or int (bad) (bad) (bad) call xchg pop test (bad) mov mov mov in fcoms xchg stos cwtl (bad) (bad) (bad) jmp mov adc pusha inc jnp int mov cltd stos and shrl mov pop jno lods jno xchg (bad) (bad) (bad) incl adc adc jmp jle das popf cwtl bound xor (bad) push cmpsb mov addb mov popf mov (bad) and (bad) call pop xchg pop mov xchg daa mov sbb lds fld lcall lods (bad) in mov dec (bad) sbb jb cmp rcl rol dec std (bad) lcall or fst ljmp mov mov sub pusha outsl (bad) lcall idiv push imul mov jns fstps sahf js xchg nop push stos pop rcl (bad) (bad) (bad) (bad) mov jno xor sbb push or or mov (bad) fbld ja xor cwtl loope mov lret js imul jp sub or pop jae add mov andl cwtl xchg sub lock mov decb push or clc sbb ret gs stos (bad) (bad) ljmp rorl xchg out push adc xor sbb mov add jl ljmp inc inc test sbb cwtl add imul fwait or jp xor jne int pop and adc fdiv sahf xlat negb or mov sbb (bad) (bad) (bad) pushl jo mov test inc test lock dec adc adc lds loopne jl loop pop push or lret rcl mov jmp (bad) (bad) (bad) decl outsl jno push or andb push inc cmpsl in xchg lret in inc and lret pushl decl in nop loopw xor (bad) cwtl out lea or cwtl fist (bad) (bad) (bad) jmp inc add shr aad inc scas lock pop pop (bad) daa test mov and cld jne lea ss testb cmp xor inc sar (bad) decl xor rcrl xchg stos pop jne jp in cld or adc cmp incl dec push bound dec pop (bad) xorl inc ljmp adc jg in dec inc loop and divl insl push xor and and inc lret push std mov (bad) (bad) (bad) lcall outsl sbb scas lds mov int3 mov out insl xor sar (bad) incl addr16 shl mov cmovns (bad) mov (bad) arpl dec pop int3 push dec xor (bad) (bad) (bad) jg dec mov and push (bad) xor in jns aam popa addr16 in rclb lcall pusha negb fisttp loop mov mov loop fildll mov push pop hlt (bad) jmp int sbb and adc add test dec (bad) pop nop dec sub push mov mov inc pop rorb dec aaa sahf hlt sahf insb sti (bad) mov pop mov inc cmc add stos jle push scas rol incl ljmp test xor out ror out jmp push stos xchg jne push pop outsl int dec sbbl pop pop ret stos sub retw add (bad) decl mov push pop pop dec and stos ret aam inc mov fistp push jg fldln2 mov cmpb pushf sbb icebp (bad) (bad) decl pop f2xm1 data16 mov xor fs int in mov (bad) (bad) (bad) push ds lcall adcb roll xchg lock mov fstpt and jo sbb cmpsb pop dec loope fsubrl jne fstpt pop idivl pop mov aad stos xor add dec out adc (bad) (bad) inc (bad) fistpl push dec aam mov decl cmc jge mov jmp into scas push scas test push mov std cmp inc pop call jle and jmp std fstpt fstpt rcll sbb repnz (bad) mov movsb xchg jl add sbb (bad) (bad) jmp test int imul xlat scas roll lcall leave lahf lahf push mov sbb ficomp pop mov (bad) (bad) (bad) mov mov sub in popf mov ficomp in jne iret xor cmp (bad) (bad) fisttpl repz ret setae pop fucom jp shlb ror jecxz (bad) (bad) pushl cmpsb xchg int stc sub pop sbb call popa cmp cmpl jg dec push xchg xchg test fsts rcr sahf ficomp (bad) (bad) call mov ror leave dec xchg negb outsb imul nop ds arpl lods pop (bad) outsl clc or inc in fs inc jle enter mov xchg addr16 divb frstor mov mov out jns xchg outsl (bad) (bad) mov add scas ror scas pushf or mov xchg fildll cmp loopne daa aaa out sub sbb std (bad) (bad) decl inc jg pop jle mov adc dec daa pop lods xchg mov inc push push and movsb rclb ja in xor (bad) (bad) (bad) jg xor sub ljmp data16 xlat leave dec test mov sub pop xor xor repnz lea pop mov (bad) ljmp lea xchg enter fadds lods sbb popf enter mov push xchg or fistpl pop test pop aaa mov rorl aam jg enter aad mov cmpsl xchg imul out ret mov add add sbb enter rcrl out inc mov jmp (bad) decl jno,pn addb cltd shrl fldcw repz loop mov lea scas lock lods mov add (bad) (bad) (bad) lcall and test mov inc jg xor ud1 adc inc adc cmp mov (bad) incl mov push aad cltd adc int3 mov clc (bad) (bad) (bad) in xor flds mov jecxz dec outsl (bad) xor fisttpl jmp idiv (bad) (bad) pushf (bad) incb jmp (bad) incl sbb and pusha (bad) dec (bad) (bad) (bad) incl mov loope ss pop and int3 push (bad) jae pop dec dec loopne (bad) push push pop lret mov adc je fmulp xor pop leave es jae dec movsl scas and jmp cmp daa iret int3 hlt fmul push xlat and pop stos data16 (bad) incl nop mov xchg pop jno pusha sbb jnp adc pusha scas (bad) jg add jp cltd cmpb xchg (bad) (bad) fcmovnu ss sahf cmp or (bad) mov (bad) mov (bad) xchg sarl (bad) (bad) (bad) fistp sbbl or adc mov fcoml dec (bad) in mov mov lea push cmp flds fwait add xlat rcll and dec in xlat push sub mov adc nop lret mov mov ja clc das cli push inc cmpsb les call jb,pt mov pop lock ret mov dec pop test cmpsl push in insb push or pusha fsts fsubrl push (bad) dec mov push pop pusha and stc add ds insb adc mov js addr16 cmp mov push mov jg add xchg fstps (bad) das cmp cmp outsb out mov pop mov mov dec rclb (bad) (bad) (bad) mov xchg outsb in inc add jle push ret mov add cwtl das mov out (bad) (bad) decl jnp ret aas gs push ret bound scas mov pop mov or imul (bad) (bad) ljmp mov lods cmp dec sti fisub ja rcrl rcrl (bad) inc xchg imul out movsb or pop fsts (bad) jmp (bad) in xchg mov aad (bad) push push shrl cmp lahf adc mov loopne jnp inc lods push sub fmuls repnz lods push sub adc (bad) (bad) jmp or dec jmp adc popa mov ss test stos (bad) pop cmp jmp dec clc dec adc cmp pop push adc (bad) cmp out clc xor cmp mov inc (bad) adc out cmp cmc adc (bad) (bad) (bad) cmp pop mov pop adc sbb inc fnstsw adc inc pavgw imul (bad) (bad) (bad) lcall fstpl popa pop mov push xchg je mov lret outsl pushf jecxz es cli push (bad) (bad) (bad) (bad) jge int jge dec mov cmp out cltd or shrl lahf test popa (bad) (bad) (bad) incl into fmull callw jl enter cmp popa mov insl and call loopne mov inc ss push leave fidivl mov jnp push insl and xor (bad) decl and ret mov mov (bad) arpl push cwtl (bad) das mov cwtl mov rcl mov sbb push int (bad) (bad) (bad) call xor push test sub popa (bad) jmp test and cmp cmp sub push push daa (bad) (bad) (bad) call push cwtl sbb popa xchg test dec mov xor mov dec adc cli int jg (bad) jmp inc insb pushl mov cmp mov xchg repz imul scas clc ljmp push push dec stos and mov dec push sub outsb lea mov jnp dec ja std mov add std sbb and loope sbb mov (bad) cmpsb cmc ljmp scas and push mov mov inc stc xchg dec sub shrb cmc sub fcoms fwait scas push (bad) mov int3 or je pop jno roll dec cmpsb or (bad) (bad) (bad) call mov ss out jle jp jo ljmp (bad) rcrb movsb jno ljmp cmc xor lret sbb adc fmuls inc pop (bad) shrb enter pop jg fdivrp (bad) (bad) inc inc ja add (bad) cli test jbe pop call cld pop movsl roll dec jnp (bad) dec pusha orl (bad) (bad) mov dec sti outsl lea imul cmp xlat sbb push ds ret push pop in (bad) mov sub lret xchg (bad) (bad) out sbb inc lret je xchg jmp mov fistpl out dec jmp xchg jmp pop mov inc mov push sti mov lahf stos mov mov (bad) (bad) call mov and mov sub jmp push pop inc (bad) (bad) decl add adc xchg or jnp adc ret cltd outsb push sbb dec (bad) (bad) (bad) (bad) incb lock adc int shrb (bad) imul ret (bad) (bad) (bad) (bad) incl adc mov mov dec or and add (bad) (bad) incl pop xor push mov add xlat xor (bad) jle cmp jmp and xor sub xchg sbb fidiv in jb (bad) push jmp mov pop jb mov gs push (bad) mov mov pop jmp aad (bad) (bad) (bad) jl fisttp ja lcall sbb stos out or lds or loope (bad) (bad) pushl (bad) mov movsb repnz out lds imul mov (bad) (bad) call bound push std dec push xchg pop ret mov dec sub ja lret jmp decl jno xor sbb add adc add and sub mov movsb xor (bad) (bad) (bad) sti and insb mov cmp lea add push mov push mov repz push imulb (bad) jmp daa inc push aaa push sub loope fwait aas aaa pop es arpl jae xchg jne mov idiv (bad) jg mov jle shlb outsb or cmc ss insl or cwtl or ljmp push push pop es mov pop clc inc sub icebp adc loopne sub ljmp dec icebp test xor add xor popa shlb mov mov scas sub mov dec fdecstp xor stc pop xchg cmpsb sub pop stos mov add fdivrs cli jbe imull imul test mov out cmc lods test xchg cwtl inc mov sarl or sub fdivl sub xor (bad) (bad) (bad) lcall movsb cmp ljmp xor mov fwait lea and (bad) (bad) incl dec fldenv push test lds lcall push pushf sub or call inc xchg jmp and out mov (bad) aaa inc dec inc mov pushf mov pop (bad) (bad) (bad) (bad) jmp sub fistpl in jae (bad) rcrb fiaddl push xchg pop and imul cwtl (bad) mov stc mov outsb arpl mov xchg jp call mov ljmp in fdiv adc push pop ret and jp mov pop xchg cs inc xchg sahf sbb outsl (bad) inc stc mov call xchg out add push jns push jle sub and fwait clc dec in in stos xor push dec xor roll (bad) (bad) mov int idivb rolb dec popf dec lahf fisttpll pushl xlat mov jnp,pn mov insl std mov mov sub test adc in je (bad) (bad) pushl lret (bad) ljmp fistp adcl push jg adc ljmp mov call adc pop out and lods pop jb shrl pushl push cld xchg scas push jmp xchg (bad) lret stos xchg jno cmc push jb mov cli outsb mov dec scas push mov pop std sbbl xor je xlat add (bad) (bad) incl and xchg jns outsl stos iret mov cmp adc in inc int3 mov push push (bad) (bad) (bad) ljmp inc rclb stos leave imul xor xor push jbe inc (bad) rcrl fcomip pop xor in or aam insl dec cmc xor lcall call sub mov sbb out int (bad) mov pop adc mov jg add flds stos push arpl and push hlt or test pushl lods and jecxz xchg popa xchg (bad) xchg xor push arpl in arpl fcomip mov test shrb andl sbb (bad) (bad) (bad) lcall mov xchg orb and jnp addr16 daa push cmp adc push call loopne and pop loop loop rcl clc out cmpsl push arpl xchg (bad) (bad) (bad) jmp or add fiaddl insl inc js mov pop ja mov (bad) (bad) (bad) call loopne xorps imul int3 and inc jbe dec mov in (bad) pop icebp jg nop sub cmc mov sub xlat xlat push jge adc mov lock inc js and lds (bad) mov xor (bad) (bad) mov xchg roll js mov repz fistpll push push lock mov jl inc sub loope jb push (bad) hlt ss int3 push icebp xchg scas (bad) (bad) fcomip decl mov pop mov bsf (bad) mov (bad) (bad) call imul out repnz ret fnstenv jp push or dec (bad) mov adc xor push push fsubs pop in xchg sub incb and (bad) (bad) (bad) cli rcll pop cmp aad inc aam mov loope les fistpll jns sub (bad) mov sub jb test add rcrl pushw iret fbld xor stos jl adc inc int or call xchg rcrb xchg mov adc cld or out mov leave aas lahf ret fisttpl mov frndint iret sbb and and mov (bad) (bad) lcall pop jle lock lret repnz repz jbe int xor sti (bad) (bad) (bad) out jl sbb xor xchg jns sarb pusha cltd pop sbb hlt test shr dec (bad) jg jg rcll (bad) mov inc xchg xlat int xor rorl adc (bad) (bad) decl (bad) mov xor push lock clc (bad) (bad) add es dec xchg cmpsl jno cltd mov (bad) (bad) mov sub jno jbe js outsb mov push fs pop push inc aaa push (bad) (bad) (bad) incl int3 adc insb jecxz repz insl mov xlat or dec pop dec xor add (bad) (bad) (bad) jmp scas outsl pop dec data16 jo in jno sub push cmp push push in and (bad) (bad) (bad) cmp lahf xchg mov sbb sbb neg test loopne mov das jae (bad) (bad) (bad) out jb scas jno push insb mov lahf nop sub sbb es push (bad) (bad) (bad) jg pop leave inc les mov or add xlat pop clc sub (bad) (bad) jle push test fcomip lcall insb outsb ja movsb outsb mov push xlat dec adc and (bad) (bad) incl cltd sub rclb out mov fs aaa leave push push lods scas loopne jns and loop push rcl (bad) (bad) fistl imul sub xor jecxz sbb dec test fs (bad) incl and push rorb mov push xchg pop push lcall (bad) icebp (bad) (bad) jmp xchg sbb cmpsb push mov int cmp sub mov push das (bad) xchg std fs push sub push decl lock nop mov xor sub and js xor or lret ret mov cmp xlat cld call je (bad) test out jg incl je int pop xchg jge cmp js dec orl ljmp call xchg popf inc jecxz sub pop cltd cld (bad) (bad) incl fisub mov jbe call stos mov into jno inc (bad) (bad) (bad) pushl movsl pop push add shr into and or cmp arpl mov mov and mov push (bad) lcall cwtl dec sbb adc mov fimul cmp pop pop lock (bad) (bad) push pop mov cmc and mov or ja mov fidiv dec leave ljmp fadds test fldt call sub ret mov inc adc decl cmp lcall (bad) (bad) ljmp call inc dec es or add and sbb xor push fisttp loop cld movsb in sahf jl pop (bad) add lahf iret aam addr16 (bad) (bad) jmp inc sub inc pop daa or push push mov leave or cmp test orb decl imul (bad) sahf pushf clc jle test cmp (bad) decl les js adc out loopne shlb pop clc pop dec mov jo aad fiaddl (bad) (bad) decl jmp mov aam test jns lret scas pop dec sub mov and cmp (bad) (bad) incl add ret xchg adc test and mov cli movsb stos js inc inc mov stos push fisttp xchg lret lods sub stos cmpsb sbb aad mov insb xchg mov rcll mov push mov jg (bad) decl leave or cmp ror daa sbb pushf mov adcw cmp pop sub mov fidivl stos mov mov fs xor add ret push aam rolb jbe pop xor (bad) mov and (bad) loope gs xchg leave push xchg or jg push (bad) (bad) (bad) ljmp jns mov pop mov or add pop scas add sbb (bad) (bad) (bad) jmp dec into sbb xchg lods push xor push scas push push popf stos pop or (bad) sbb sub (bad) lcall addb push dec (bad) mov jbe (bad) push ror xchg js loope (bad) (bad) pushl pop (bad) ret mov sbb xchg je (bad) iret xlat jg cmc mov lret (bad) call cmp fistp mov test loop cltd pop jp (bad) mov ds in mov lds lcall push push jae mov mov fnstenv pop shll ret stc xchg push (bad) call xchg out xor dec cmp mov pusha xchg lcall pop out mov (bad) (bad) lcall fild cmpsl jle faddl out mov mov (bad) (bad) (bad) (bad) in xchg mov inc fwait ss cmp lret push mov sub mov lret jg std out stos stos mov cltd int3 es popf (bad) jne sub sar (bad) pushl test xchg dec lds repz mov outsb mov ss sub fwait (bad) (bad) (bad) (bad) jmp repnz iret pop xor xchg xor iret ret jnp in and fldl jne,pt xchg and mov (bad) (bad) pushl dec adc push je lcall add push rcll (bad) fiadd or loope cmp lret ret jo add push xchg sbb stos (bad) (bad) (bad) in pop lret leave pop xchg rcpps sbb test mov and test out push test loopne sar loope decl dec pop pop jns pop jecxz inc ljmp inc add (bad) fistp out sarl imul mov xor enter into xchg cmpsb push add jg mov pop mov movsl push hlt ret rcrb jmp adc test icebp int3 dec sub lahf scas xchg negb xor (bad) (bad) incl dec std push rcll xchg push mov fisubrl or call mov (bad) lcall add (bad) jle mov fnsave dec dec stc inc add and loopne and sub jle or (bad) ljmp xlat or stc repnz pop xor (bad) push dec out sub (bad) (bad) jmp jmp lods jg dec sub in lahf lret cmp pushf xor (bad) xor xorl inc dec xor sub xchg pop mov or (bad) (bad) inc sub aad (bad) (bad) (bad) mov stc adc adc in mov imul jae xchg mov mov decl notb push negl cmpsl jno mull mov sub hlt ret notl lcall call pop xor sbb js aaa push jle clc lea sar (bad) (bad) out dec in push neg lea and (bad) rcr cmp push jmp inc jle pushf add (bad) (bad) incl jge lds sti lods push daa xchg mov inc mov test xchg out les std scas cli fldt cs add or xchg and mov jo lcall jle inc add dec inc fwait lret jno cmc repnz jl fs js idiv ljmp jo lahf repz push and add mov jnp jl loopne (bad) (bad) call shrb ret in das xor (bad) dec test cld (bad) incl (bad) jp in add cmpb sbb pop loopne push lret cmc mov inc mov in (bad) icebp pop dec jmp nop sbb add (bad) (bad) dec imul or sub fdivrs cmc daa stc ljmp mov mov dec pop mov xor pop adc lock scas and lea je scas mov xchg call (bad) call mov idiv es mov jg push cmpsb iret dec in aad add test pop nop sar cmp mov push (bad) xchg push adc incl (bad) loop jae xchg enter ds (bad) (bad) incl adc jl mov std js pop leave lock xchg and xchg fldl pop xchg scas gs jo inc cmp inc mov xor jp adc enter repz dec stos lock (bad) (bad) fstpt xchg dec cld sub mov mov ds mov push nop mov cli push sbb decb jae push sbb cmp leave fnstenv or repnz (bad) (bad) (bad) (bad) jl xchg or insb subb add add adc mov outsb push aam xor add (bad) (bad) decl push sub mov rclb sub push adc pop aaa dec subb hlt call out cmp out out pusha cmp (bad) std ja cmp fdivrl sub aam dec fwait loope js sbb aam mov call incb pop (bad) jns sub jg (bad) lret sbb fcoms dec add (bad) mov xlat jp sub jp scas push ja (bad) (bad) mov aas (bad) jne lock jge push push les repnz jp (bad) add (bad) call and and bound jle or (bad) (bad) (bad) jmp cmp movsl or roll shrl fisttpl cmp pop mov aad pop (bad) incl sub sbb mov scas xchg bound test lcall ja mov push (bad) (bad) (bad) decl out dec jecxz sbb xor mov push mov mov fldcw (bad) (bad) (bad) lcall (bad) cmp jg je sarl data16 insb (bad) mov dec scas sbb mov data16 push sbb fcomps bound in prefetchnta popf xchg outsl xchg xchg sar push std jmp daa iret push mov in or cltd gs (bad) jg call hlt cmpsb fcomi or adc xchg add test cs orl (bad) call mov mov push push inc adcb inc jne mov adc mov call or fbld js dec and push mov in loope jp rol mov rorb sbb or ljmp or cmp jbe test xchg add imul dec into push int mov or stos leave mov imul xlat (bad) (bad) (bad) jmp push sbb push jae in dec (bad) pop inc add call sub fisubr or jae and loope and pop pop jp dec outsl arpl in (bad) or sbb call or xorl ds cwtl jmp (bad) (bad) decl mov sub and rcrb inc push clc gs jg push bound pop (bad) call (bad) xor mov arpl test jmp in lds pushl add icebp jo xlat lcall (bad) addr16 dec jns pop sahf cmpb cmp (bad) (bad) incl data16 clc inc imul push add test and push sbb (bad) fdivl cmp sbb cltd mov mov clc sbb test sar (bad) (bad) jge xor popf pop in sub lods add sub push sbb jecxz add sub dec add pop ret (bad) (bad) (bad) (bad) in sarl pop jmp fistpl leave mov test adc aam rcrl out (bad) pushl std movsl bound fmuls insb xor popa mov mov add (bad) loop jle (bad) (bad) pushl lods dec sub cwtl aaa outsl mov cmc and push push and scas xchg or int mov int3 aas int3 xor sub pushl les daa jno std dec jp lcall add (bad) xor sti xchg cmp xchg fidivr mov add (bad) (bad) (bad) incl mov inc stos adc arpl jns xor pop push mov (bad) call loopne pop negb and or adc outsl in subl (bad) inc icebp jle sub imul (bad) (bad) cmpsb xor mov push (bad) mov sub jbe repnz pop sbb sub int hlt nop (bad) (bad) incl aam decl cmp cmp mov pop xlat dec pop inc cs pushl mov hlt and sbb mov aaa cld ljmp pop cmovge pop lahf mov out pop int arpl mov (bad) (bad) jmp sbb test cmpsl cmp clc enter sub push sahf ljmp (bad) incl adc sbb lahf pop mov sbb inc xchg test (bad) (bad) incl pop adc movsb mov nop pushf or mov xor push cmp (bad) (bad) decl int lods addb push inc xchg xor mull sbb pop gs sbb (bad) (bad) incl dec pop adc sbb push lods movsl cmp ret cmp stos outsl xlat mov (bad) (bad) (bad) call inc out outsl pop pop out adc xor push pop sub or mov xchg (bad) lcall incb sbb (bad) insl mov or sti mov xchg xchg insb aaa dec ret jno test (bad) call cmp jge jmp mov xchg sti imul inc or (bad) pushl push in jae dec adc push iret push hlt (bad) popl adc (bad) jmp fisttp pushf push imul pusha mov add add adc aaa jge add push (bad) in sbb xor fiaddl (bad) (bad) incl dec add adc stos xor int3 shlb jo mov dec arpl clc (bad) (bad) (bad) call notl mov movsl shrl pop ljmp pop lods fsubrl insl fwait loope xchg jg ret add (bad) fsubs aaa jp movsl ret repnz js pop mov lcall add add ja inc ljmp bound jo xor into sub pop (bad) (bad) (bad) ljmp mov and addl insl sub or mov aad loope popf sub inc dec mov test sbb add inc andb add shlb loop and push lret mov lock or xor mov data16 les lret pop sbb or pushl add stos or mov fistpl popa jmp (bad) xchg (bad) fdivr sub cwtl fsts push xor xchg call mov stos test dec mov xchg xor loopne inc (bad) (bad) lcall mov ret nop jne (bad) icebp xor fs dec lret outsl enter ljmp decl cmp lock mov adc jge mov lea in mov xchg sub inc fstpl test inc push sbb call and mov js test loop jp push add xor mov mov (bad) (bad) jmp (bad) sbb ror xor push ret imul mov (bad) out push rcrl adc pop xchg test movsl call fistp insb push enter fmuls (bad) (bad) (bad) mov pop mov mov mov movsl outsb fistpl (bad) jg (bad) or ds pop xlat pusha cmp sub outsl cmp arpl mov dec arpl cmp (bad) (bad) (bad) ljmp adc das push gs adc addr16 fisttpll insl movsl and sarb sub xchg jg (bad) inc dec xchg je xchg push dec dec or push shlb insb mov pop and xor xlat (bad) (bad) (bad) fdivl (bad) (bad) push (bad) out lret and inc or add lds loope dec call (bad) jg enter pop pusha adc paddusw (bad) mov pop lahf (bad) jp aad xchg imul push mov inc add in repnz (bad) jmp xor (bad) clc and outsl pop popa lret in pushl imul jmp jg lcall mov dec fistpll call ss sbb (bad) (bad) (bad) stc adc imul rorb lahf (bad) jae loopne and out movsb push xor incl add cmpsb jmp out popf mov movsl pop fldl imul pop icebp (bad) decl pop mov jecxz cmp jnp pop ljmp mov ficompl in (bad) cmp call xchg jg fwait add (bad) (bad) (bad) lcall (bad) mov push out sbb adc inc jp pop sbbl inc movsl add (bad) incl stc or pop sub roll lret (bad) dec xor mov (bad) cli and rcl push rorb imulb jae stos dec or pop sbb in push and lcall or dec push mov dec add test and push xlat sub (bad) (bad) pushl dec movb and mov adc dec or cmc and and (bad) (bad) (bad) fbstp clc cmp sahf jnp jecxz pop push cmp sub push test mov test lock (bad) incl pop sub inc (bad) decb into lret jo inc (bad) jge aad (bad) (bad) lcall fbld rclb jno jmp push pushf jp ljmp lahf sub (bad) (bad) jmp aaa sub (bad) test push push mov jg jbe cmp pop js test (bad) decl or cltd dec imul aad dec or or test dec and (bad) test and inc xchg dec mov les push xchg subl movsb nop insl push (bad) (bad) (bad) jmp lea lea movsb or xlat mull cli sbbb xchg jae xor (bad) incl jle add mov xorb ds xchg inc or (bad) je xchg call ret fnstcw lcall js lods adc clc repz (bad) (bad) (bad) (bad) incl sbb push imul or cli scas loope mov adc inc xor stos (bad) (bad) (bad) (bad) out mov pushf dec (bad) push jns outsl jnp jp dec outsb ja adc push int3 out out (bad) (bad) (bad) inc xchg jno in test sbb in test mov push out add in pop (bad) decl psubd mov pop imulb orl call clc popf aaa inc xor iret insb mov jno dec icebp jns cli outsl clc gs pop xor xchg jge xor jno inc mov pop std inc xor sbb rorl cmp dec gs repnz in dec (bad) (bad) jg hlt xchg sbb xlat sarb xor add cmpsl enter xchg nop test inc (bad) (bad) call inc in cmpsb sub pop lods pushf and stos fdivrs rclb (bad) (bad) decl adc dec cmpl xchg mov pop cmpsl test stc jbe (bad) into cmpsb pop or jns push aas pusha (bad) (bad) (bad) jmp lea ljmp in sub cld xor cwtl aam (bad) std jp (bad) (bad) (bad) jp out xchg adc jp pop push cmp mov sbb mov (bad) jmp mov pushf clc and mov add cwtl jne (bad) (bad) lcall push cmp repnz aam adc pop cld mov jl lcall scas push test cmp jp or xchg mov lahf mov add push xor decl push mov cmp sub pop movsl push imul cmp mov push dec cwtl pop jnp mov mov stos movsb cmpb gs popf cmp (bad) mov fadd (bad) hlt test ss mov fwait sbb mov mov out pushl cld mov pop cld ds and in mov mov (bad) (bad) call nop lcall inc cmp lock lock ss xor movsw pop xor mov mov inc loopne leave ret add (bad) hlt out xor cli cmpsb mov push pop das clc (bad) incl mov or mov push cmp or pushf repz imulb pop mov lret js push jle inc fxch js out leave outsl ja (bad) (bad) call cmp addl and (bad) xchg xchg in das rcll inc or dec cld loopne enter add add and in dec add ja (bad) (bad) lcall inc and dec sub push add cmp and popa and add cmp mov ljmp clc mov dec jnp xchg mov movsl inc pmuludq xchg aaa sbb add (bad) (bad) (bad) (bad) push cmpsb bound mov stos sbb xlat ja pop pop fcmovnbe addr16 mov outsl call mov stos scas add into popf cmp orl std (bad) (bad) (bad) lcall out mov subl cwtl fild push inc mov insl inc inc sbb rolb out pop in outsl xchg stos das adc mov insb mov imul jle iret lcall loope push mov icebp pop js ja xchg imul inc xor mov test jecxz inc push (bad) mov mov sub jmp clc scas out mov jae orl (bad) fcomip mov addb stc lea or or or lahf dec cmp decl mov notl lods push gs push dec xchg cmp ja int3 (bad) push ss sub push mov es pop mov cmpl daa out push scas clc ljmp or add mov aam inc fs inc outsb popf (bad) (bad) (bad) ljmp daa cs fcomps jo jmp and push jbe cld and (bad) (bad) (bad) (bad) jl dec lods push push cmpb mov add in fdivrs imul ficom push sub xor (bad) jg mov mov cld sbb adc xchg sub pop cmp pcmpeqb xor or decl mov push dec mov cmp sbb mov (bad) (bad) (bad) mov lahf sbb in cld xlat and jns adc test push mov lcall push mov sbb sub push mov mov jecxz fwait or lea cld mov ss outsl mov adc dec (bad) ss sbb mov push sar (bad) (bad) call jle or mov and notb pop pop pop lds push push fidivl sti push or call mov xor inc mov jle or adc cs mov out xor clc call in out sbbl call pop rclb add sub stos fildll or push dec push xor mov pushl popf clc das shl int gs daa test cmc mov (bad) dec (bad) lcall scas add jbe adc mov fsts popf xchg lock (bad) and push in (bad) (bad) (bad) jmp div mov cmpsl ror pop adc or andl sbb push cmpsb lret les (bad) ljmp test adc movsl sub loope cmp ret rcrb (bad) jmp out (bad) mov dec sti push inc pop loop aad dec mov sahf sub (bad) (bad) jg sahf push jne or push arpl insb xor iret dec (bad) (bad) (bad) mov pop aaa push loope pop pop insl idivl jno rcl fist ljmp cli jl rorl pop (bad) sub les test nop outsb test into and jmp and test sbb into test jg leave in fnop jle jnp dec add xor mov dec pop out stos mov (bad) ss xor cmp out (bad) lock scas pusha andl (bad) out in arpl stos ss push add das push pop xor hlt sbb aad test outsl add jmp pusha aas sub mov dec test cmp cmp and push fnsave xor addr16 lahf push scas in pop sub in js lret aam xor jecxz js in inc aam (bad) (bad) lcall and mov push sbb clc aas jne sbb fidivr ficom hlt (bad) (bad) pushl add repz inc cmpsl jecxz fbld cwtl or fdivl and (bad) (bad) mov jne call loopne mov xor (bad) (bad) (bad) incl mov (bad) mov ret lock mov (bad) sub xor (bad) lcall fsubrs cmp sbb xchg cltd stc data16 lret loop jg lcall lea and mov jp testl arpl sub mov (bad) (bad) (bad) decl xchg mov pop fadds mov in repnz sbb pushl mov movsb movsb in jne cmp out push sub xor push add mov sar (bad) push (bad) jg daa add hlt or dec pusha and out imul int mov sub cli lods out enter mov lcall les add (bad) pushl insl repnz xchg fiadd inc (bad) jno push repnz jg aad cs mov mov outsb inc mov stc (bad) (bad) (bad) mov add das int sbb fildl sub cmp push dec frstpm(287 push mov out daa push inc xchg fnstenv ljmp jbe cwtl loope cmp pop inc mov pop jecxz (bad) lcall out push cmp push and lcall dec repnz mov (bad) (bad) (bad) mov test jg mov sbbl inc mov and add arpl and daa sub sub fincstp outsl test call arpl fisttp mov (bad) (bad) call (bad) loopne mov add inc fistp (bad) dec cwtl pop jno imul movsl mov stc (bad) (bad) (bad) ljmp addl push mov push cmp iret or repnz in push (bad) xchg jle cwtl add xor push dec rclb push inc loop (bad) pushl mov mov lcall push xchg ficomp mov (bad) (bad) mov test js lcall jbe mov iret fsubrl pop mov pop in leave in (bad) (bad) lcall sbb out ljmp lret or ja and adc (bad) (bad) (bad) (bad) jmp test sub cwtl sti adc stos xchg push das jmp mov push mov mov in pop jmp (bad) (bad) mov (bad) pop fsub aas into jo repnz and clc pop sbb ret (bad) mov out icebp push nop or in jb pop push in sbb sub aaa dec jmp clc xor (bad) xchg test xchg bound imul (bad) jne fs (bad) (bad) (bad) in js popa sbb insl pop in loopne loop push pop mov mov ret enter jge cwtl pop outsb mov jg jmp gs mov push ret dec inc (bad) jb sub sysenter pop push roll int cmp mov aaa in call stos mov fmul xlat jae dec xor (bad) decl lock movsb add pop (bad) clc fsts inc or test (bad) (bad) (bad) pushl mov sub scas mov inc add mov dec je addr16 push ljmp (bad) (bad) (bad) call mov jmp iret pop cmc sub jmp push loop fsubrl movsb (bad) (bad) jmp add dec sub xchg ret aas arpl xor lock adc gs (bad) (bad) jmp into popa mov in popf test sub adc xchg shlb icebp or (bad) jg sbb out xchg repz pop inc dec in cs scas arpl cmp cmp pop mov ljmp mov out scas jmp vrcpss jno fs inc nop (bad) mov imull dec mov push cli xor sbb mov js xor hlt (bad) lcall mov nop scas jno add fadds scas shr sbb popa or pushl incl jmp clc out call jl cmp into ret jl xchg aas cmc mov incl jo jns fisttp lea cmpl pop in test in or add (bad) (bad) (bad) (bad) fucomip mov add sub mov fwait fs dec loope pop sbb enter lock mov (bad) (bad) ljmp arpl bound mov scas lods mov pop push (bad) call mov jle fldenv test jae jb scas loop and shll pushl sbb and jns mov movsb push ret xchg in mov incl ljmp cmp xor adc loop loop pop pop cli decl lock mov cmp pop jbe or jne jg add dec or and pop or (bad) (bad) ljmp lods dec pop jp xor cwtl popl xchg int3 (bad) xchg in into test (bad) call in mov pop dec xor adc mov pop cld imul push fisubl (bad) (bad) jg xchg cli icebp std mov mov in cmp xchg lret jl scas push (bad) (bad) (bad) fcmovnbe cmpsl or lods cwtl fild data16 jp pop je fdecstp mov fs inc mov (bad) (bad) (bad) dec mov jns jg rclb rcl or dec adc cmp mov (bad) (bad) cmp in inc push mov imull int ja lods fimul push jge test add or leave push (bad) (bad) (bad) (bad) jp xor (bad) sub lret call or (bad) (bad) sbb outsb hlt and pop xor (bad) (bad) (bad) incl sub push pop push rol adc sbb hlt push repnz dec xchg ret iret cli insb hlt adc out fbld push jns jns sarb in test loop mov (bad) (bad) (bad) (bad) jp bound pop mov (bad) push mov fcomps xor push add xchg jnp fidivl ret (bad) (bad) jmp imul pop sbb cmp adc mov mov inc ds and cld adc push shl in sahf das fsubrp mov adc clc (bad) (bad) incl lods sarl leave or xchg movsl test repz pushl incl xorb mov lcall test inc jp (bad) incl inc into push int3 outsl shl jno out rcl adc pop cmc and insl (bad) call cld (bad) mov in shlb inc pop (bad) pop rcl fdivrl mov fdivrp (bad) (bad) (bad) (bad) cmp sub inc mull gs lahf mov mov (bad) sub ret das int3 ret (bad) (bad) call test pop repz push fcmovbe mov pushf (bad) jbe outsb pop sub nop cld pop lock push push aam dec sbb jbe in sub ds je mov dec push stc add incl les mov or mov movsb xlat dec stc mov fnstcw (bad) (bad) incl or cld std sub xor nop les outsb shlb out lea (bad) (bad) (bad) jmp xchg imul jb ljmp out or sub dec out fmul pop or jbe inc mov (bad) fmull test push inc in dec lcall jb (bad) in ret jno shll popf mov push fwait sarb (bad) (bad) (bad) call inc mov aas aas jae cwtl inc mov jle enter add add (bad) lahf xor (bad) (bad) (bad) aas pop lret loopne addr16 lahf gs xchg cmp sbb outsb dec sub xchg xchg ljmp cld jl mov call mov push mov mov ljmp jge out bound push sub pop sahf pop lock jmp fcompl icebp jns std mov inc mov jg test jge jg lcall gs popa (bad) (bad) and cmp xor (bad) pushl insb dec ficoml lea aas imul leave je (bad) mov (bad) (bad) incl mov (bad) mov push insb incb std sar cmp cmpsl movsl test xchg repnz (bad) (bad) lcall dec cmp cmc adc addr16 data16 mov fcomps (bad) sbb rcr (bad) pop addb jb sub mov fdivs adc leave add mov (bad) lcall dec test jp test jnp sahf nop in xchg mov (bad) mov dec sbb test stos add loope daa sahf mov cmp mov push pop lods push jge popa out sub dec fsub sbb jecxz pushl in es daa xor add ret inc xor (bad) (bad) (bad) fildll mov pop aaa push mov push (bad) insl out lds push sbb (bad) (bad) jmp sub and call ret (bad) mov jecxz (bad) (bad) (bad) push arpl outsb andb (bad) mov je repz xlat loop xlat pop test xchg test pop cld pushl aad in rorl mov movb xor xchg mov jae loope std inc xor push aas pop loope cmp sbb stos (bad) decl inc jge inc cmp je pop mov jle adc push fdivs imul stc or mov fs and or test movsl ret (bad) call inc sbb sbb xor cmp adc or rcr repz push stc es (bad) (bad) (bad) (bad) (bad) ficompl push lods (bad) cmp and imul ds mov and incl cmp and sbb leave jbe push sahf mov xchg out (bad) (bad) (bad) call and movsl adc cs dec iretw xchg dec push or test dec inc adc or (bad) out clc movsl add mov xorl add or push dec (bad) (bad) (bad) incl inc sub add dec push js (bad) push fdivrp pop stc rorb pop mov fild push jmp lods mov popf sub cwtl sub add lcall cmp jmp dec lds adc adc cmp adc inc es xchg pop xor (bad) (bad) (bad) incl push out xchg stc and pushf pop outsl push pop out mov divl and (bad) (bad) (bad) pushl or lock cmp xor dec and or (bad) adc sbb (bad) (bad) pushl jp enter xchg cmp pop sbb pusha ret or in pop jecxz xorb add lock jl pop in mov rclb movsl jno cwtl mull pop ljmp int3 jnp aad or fxam mov mov push sub inc dec or aad push cmpsb sbb mov jl and push xor push sub ret out das clc (bad) jmp insb push jno adc or out push push ret lret clc ljmp xor cli daa lret (bad) loop popf repnz (bad) call sub and or jge inc sub test jge es sar (bad) (bad) jnp ret dec xor stc rorb stos aas and sub shll adc add incl jbe lods fbld repnz (bad) sub (bad) (bad) lcall popf mov lret push cmpsl scas inc int3 subb sbb and loop jo or (bad) (bad) (bad) fcmovnbe jnp (bad) stc mov out jbe cld mov jg sarb cltd cmp ja (bad) (bad) ljmp push repnz out jb (bad) idivl and fwait adc (bad) (bad) (bad) out cld jmp dec sub cltd cmp or dec push jl lock fisubr pop cld mov loope lcall (bad) mov xor (bad) (bad) decl add es and mov and push (bad) (bad) (bad) ljmp lods xchg call jle popa call push mov stc stos sbb (bad) (bad) (bad) (bad) call inc dec int3 and or push sbb (bad) sbb mov cmp cmp std or (bad) (bad) lcall mov loopne jno,pn or inc cs rcll outsb fdivrp hlt inc mov sub jg and addr16 pop jno repnz mov (bad) repz mov sub in jb cli arpl jo aaa in jle (bad) ljmp shrb xlat lret out jge sarb mov lds push idiv out lods mov or xchg cli fsubrs insb mov addl scas movsl stos (bad) (bad) decl mov test in addr16 pushf (bad) or leave shl lret (bad) (bad) mov mov jle cmpsl and aam mov mov (bad) pushl inc jnp loopne or mov and push repnz sbb (bad) (bad) incl lahf push aaa pop neg icebp push addr16 bnd inc xlat int push (bad) pushl out flds lock (bad) scas iret (bad) xor inc pop mov mov ljmp stos sti sbb ret stos jl repz sti xor enter jae xor jmp in es and cmp cmc adcb dec mov mov push (bad) (bad) (bad) jmp fiaddl call popa adc inc sub and ds mov mov (bad) (bad) (bad) pushl mov mov xchg mov xchg and jbe xor mov or mulps movsb lock mov push stos xor jmp pop decl mov cltd outsb jbe sbb xchg (bad) mov fs pop jbe (bad) (bad) (bad) jmp ljmp dec add jle sub fadds out pop test adc (bad) incl psubb sbb adc scas jns adc inc stc xor aam jmp lret gs out in (bad) (bad) in pop mov mov pop (bad) push mov aam fsubl push daa pop popl push sarb pop fcmovne ret push roll xchg ret leave (bad) xchg cmp (bad) mov dec sbb pop pop cli mov push pop out xchg push jns sub xchg push sbb (bad) (bad) pushl sub push int3 ficom add inc sbb int sbb inc decl incl test loopne add leave jp mov mov lret mov (bad) jmp dec daa dec and or loope je jle jne dec sti pop icebp out mov (bad) adc (bad) (bad) incl xchg or xchg pop ja lahf adc out out (bad) (bad) (bad) ljmp in push cmpsl lods fldl2e out jae mov fwait scas cli (bad) out (bad) mov add mov mov (bad) pushl add fmuls out imul push sub mov (bad) jmp mov push (bad) mov shll push adc add or mov sub add xchg mov rcll sbb jnp stc mov pop (bad) (bad) (bad) incl adc movsl sub into cmp int3 jns add mov dec in stos push dec cli (bad) (bad) cmp add jno and testb (bad) (bad) mov lahf ret adc lahf hlt sub mull mov scas (bad) and (bad) cmp mov out jo xchg mov push lds mov (bad) (bad) incl push stos pop mov aas pop fisttpll fisubrl aas lods stos pop cld add pushf cld sub add insb push jbe notb sbb outsl xor pop xchg xchg es outsb or xchg inc xor add daa rcll (bad) call (bad) ja sub loope lds (bad) and jecxz (bad) movsl and or (bad) (bad) (bad) incl and mov ret push jns cmp cs bound fwait (bad) xor sub add lock decl sbbb mov cmp sbb mov loopne pushl sbb icebp (bad) lock fistpll push rolb (bad) (bad) jg std cld xor xor mov fcos inc push subl (bad) (bad) lcall stos lds jg lahf das fimull mov shrb das cmp cli fcomip lcall inc sbb pop jb sbb mov push mov ljmp dec scas push dec stc sahf orl dec mov add stos dec xchg cld pop rcrl test sar loop adc push xchg mov xchg popf out mov ret (bad) (bad) (bad) push in xchg imul pop push fldl inc es scas sub lods push push pop jae and mov (bad) (bad) (bad) pushl or idivl pop mov sub mov add mov (bad) inc (bad) (bad) dec push stos cli stc notb inc add mov lahf mov js push (bad) (bad) (bad) ljmp inc cld push bound scas mov xchg call leave xchg (bad) repnz jae,pt (bad) lcall mov inc test cli fidivl lods jg sub (bad) fcomip xchg aas push push bound shrl scas addl je xor (bad) jmp in mov sub lcall xchg scas cmp jg sar incl dec mov test lahf ror mov inc mov cld (bad) (bad) mov and pushf jge in ret mov xchg xor or js out fdivl decl mov repz clc out and lods out pushw lea push sbb incl mov sub jno lods mov shr push cwtl pop sbb xor jg sub (bad) jo (bad) add imul insl clc or insl cmc insb (bad) (bad) decl cmpsl xlat add jnp and pop (bad) stos xchg (bad) and or inc cltd faddl or (bad) lcall fstps ret push mov jle and inc push jne (bad) in call test sub xlat pop sub mov sbb jne sbb sub roll ret pop (bad) dec push mov pop mov aad lcall in (bad) (bad) (bad) (bad) mov sub jle jp sub and adc jecxz xchg rclb inc loopne (bad) jmp mov xor aas sbb pop adc stc mov movsl (bad) xchg (bad) (bad) mov pop ss in (bad) mov xorb aad pop push add fcoms scas out ret or sbb ljmp cli pushl fcompl dec mov mov push (bad) (bad) (bad) (bad) (bad) fnop adc movd jp daa lock add cmp sub mov cmp int enter (bad) decl xor adc dec inc daa shrb lret pop mov mov mov fnstsw pop insb out popf lock mov in cmp jg mov rorl mov cmp (bad) (bad) (bad) lcall fdiv sub jne push mov xor lods add cli lods mov jnp sbb (bad) (bad) inc push pop ja loopne lds outsb fisttpl xor cs jne stc dec or inc mov or sbb aad inc and fadds fisub in in or mov mov sti push (bad) cld (bad) int push xor mov sbb sub rol sub lret jge mov dec fiadd lods ljmp mov in add and xchg push pop insl repnz rclb add popa bound (bad) ljmp mov scas arpl nop jg dec pop outsl push cmpsl or jge cli push mov aad fiaddl (bad) decl (bad) call cmc dec loop and push mov sbb xchg in mov xor ja jmp mov pusha bound je (bad) popa into push jbe jle dec (bad) (bad) (bad) pushl call pusha ss jns xorl xlat rcll test xor data16 clc and inc xor std popl xor xchg (bad) (bad) ljmp rcrl mov cmp fmul mov sbb push cmc and dec sub decl jmp loop push sub dec mov into push push pop mov jmp (bad) decl incl mov or in inc xorl mov ljmp clc mov cmp sub out push pop jb (bad) popa ljmp ret call dec ja pop dec pop es outsb sub out dec or pushf arpl (bad) jg hlt pop jmp xchg mov jmp xchg mov push pop jne sbb dec gs fadds inc popf cmc mov push (bad) (bad) incl outsl sbb call mov (bad) (bad) (bad) fstl cmovs out andl dec lret push ret incl test (bad) ljmp outsl lcall inc cmpsb (bad) fwait les loopne jg push sbb fbstp lret cmp hlt and icebp jecxz test mov (bad) (bad) call sub push loop add data16 push add notb (bad) fnstenv or push and cli ljmp cli sahf jo push cs rcr movsb int3 or mov in fbld fcoml outsl mov lahf lock lds pop ja adc inc mov sub and (bad) jmp xchg mov mov decl jns pop jp in rclb repz (bad) (bad) lcall outsb lcall les xchg inc stos adc mov dec push sub (bad) (bad) (bad) lcall in sub jne xor in and ja pop sbb sub lods fisubr lret xchg push (bad) (bad) (bad) lcall and mov stos into rorb xchg ret or sahf pop mov sub (bad) mov in sar (bad) jmp sub pop icebp push test mov pop jnp xchg nop les or test imul loopne jo (bad) (bad) (bad) call xor in ljmp and icebp sbb and test stos (bad) push lret loop dec sub stos jo fwait xor mov mov jle decl incb cld ds sbbb sbbl mov scas fildl or jmp mov addr16 (bad) (bad) (bad) ljmp inc mov (bad) jne xchg addr16 out icebp iret xlat fcmovbe dec mov incl sar (bad) mov mov enter push or pushf and adcl fistp mov in loopne flds mov xor ficomp sarb shrb dec or xor ljmp cmp into add adc jne jno arpl roll jle add (bad) (bad) call je (bad) jp mov jle cmp mov (bad) enter xor add (bad) ljmp mov call cmp adc lret fwait pushl jp adc (bad) (bad) out in ret jge lods int3 es mov sub pushf adc inc pop (bad) (bad) in add sbb aaa stc pop lret push jbe loopne inc cltd jp je hlt (bad) in jmp fisub cmp sbb xor mov inc xchg push inc jnp push or (bad) jg cs pop movsl push dec pop xor ja adc sub xor xor (bad) (bad) jmp mov stc stos sbb ss cltd jo out lret pop mov jg ja cmpsb pop std dec int jl sbbl adc dec lcall inc mov and jg stos push xchg icebp push pop imul (bad) jnp pop enter cli mov scas cli and pushl loopne push ss (bad) (bad) mov jg adc idivl (bad) mov mov jae cmp mov xlat and mov jl call dec jo cmpsb (bad) mov lret lahf fisttpl push jl pop mov mov or lock pop hlt dec (bad) incl enter adc add adcb rcrb xlat jg lods movsl jl popf lahf adc adc mov or mov into dec mov and mov (bad) (bad) (bad) (bad) fmuls or dec sub xor mov adc imulb sbb aas fwait sbb (bad) call clc cmpsl (bad) mov test mov gs and xor loop ljmp jge fsubrs out cmpsl xor mov jecxz sar (bad) (bad) call and imul insl sub cmp inc out popa test jmp sbb sahf repnz or popa in xchg cmpb movsb mov pop mov (bad) pushl out cmpsb jo (bad) rolb pop xor aaa (bad) jne pop adc xchg push (bad) ljmp fldenv cwtl loope or and imul inc mov xor mov addr16 pushl push sub push jne inc sarl jae,pt push lret insb inc cmp ljmp pop mov adc andb daa jl xchg test sub mov (bad) (bad) (bad) in clc lods repnz and pop ja mov xchg ja fmull push cmp push inc (bad) (bad) decl adc arpl jns xchg aad or jge out aaa push scas or jmp pop fwait inc cld (bad) jnp lds cmp adc (bad) (bad) (bad) (bad) incl pop inc pop rorb jo in mov (bad) cltd dec sbb out (bad) (bad) (bad) jmp fs inc push mov dec sbb fsubrs lahf dec mov imul or push adc test nop jl jmp push test fdivrs pop es pop push (bad) lcall push enter mov repz sbb nop dec mov (bad) ljmp cmp (bad) negl push mov mov bound sbb push mov fimul cmp idiv (bad) (bad) decl out push popa incl xchg dec lret jl ss lahf mov das jbe (bad) (bad) (bad) out and ret call jbe inc cmc enter das xorl sub cmp mov ds (bad) (bad) (bad) sti ja insl lods ret (bad) stos popa aas inc movsl stos ss jge mov out fstl repnz scas nop mov popf fidivr mov mov or aad jns (bad) (bad) decl mov xchg cld adc jge xchg in mov inc sahf mov add xlat test jno leave test fdivrl incl dec hlt test mov and inc lock incb daa pop or cld push cltd lock lcall sub fiadd stc stc jg (bad) jg (bad) cmp std cmp mov xchg int repnz sub (bad) mov rcr xchg push aas popf rcrl stos jae mov mov mov (bad) (bad) (bad) (bad) ljmp cmpsl clts pop xchg mov movsl adc pop inc cmpsl xor jl dec (bad) pushl cld pushl add (bad) shrl sub jge dec cmp test sub adc pushl mov hlt pop popf mov incl fsubp incl ljmp daa sti (bad) sub xchg cmp scas mov xor aam cmpsb cmp jl imul (bad) lcall decb shlb stos xchg jl sbb and cmp (bad) (bad) (bad) lcall imul and in push fildll scas movsb jge aad repnz and out sub decl add pop dec xor aam hlt out sahf xor loopne (bad) call pop xor push inc ja cmp (bad) divl out call cmp (bad) sbb jno push sub xchg ret push sbb add sub lret lret shrl (bad) fcoml pop rcr mov je pop mull jl sub out jl int push push xchg sub mov push add dec push adc jb mov cwtl xchg loop add mov (bad) (bad) (bad) incl mov push mov rcrb lret xor cltd xor sbb xchg mov xchg xchg mov jae and push loopne xchg push (bad) in int aad imul cld ljmp push or and (bad) (bad) ljmp or sub inc push test xor fwait js cmp pop jns fildl push stos fildll imul dec inc push cmp mov (bad) (bad) (bad) (bad) dec call aad fisttpll pop lahf ficomp push je call (bad) (bad) (bad) pushl outsb clc das push adc push mov push mov (bad) into adc daa loope cmp (bad) (bad) ljmp mov sub push xor dec fcomps stc les and mov jno sub std stos inc push fsubrl out adc rcr sub pop movsl jmp mov in cmpsb outsb or addr16 (bad) (bad) (bad) push push ficomp xchg push xchg cmp cld repz mov sbb or push popf push (bad) pushl leave aad pop inc leave pop (bad) cmc stos mov cmp insl mov push jg stos pop out leave sub (bad) mov or sub hlt and flds lcall shrl scas fnstenv cmpsb mov out jl dec ret push push inc xor (bad) (bad) dec cltd sub in adc add or adc pop subl (bad) call and imul repnz rorl repnz jge lock (bad) call jo rorl dec (bad) sti (bad) in mov movsl push and sbb inc and (bad) lcall test stos outsb mov lea pop enter movsl jecxz pop xchg jecxz push out push std (bad) (bad) mov dec je jne mov mov (bad) fsubr out adc stc dec inc sti pop (bad) (bad) (bad) decl adc dec xchg (bad) jns movsb inc push enter bound add (bad) (bad) decl mov adc xchg push rorl dec adc lods cmp (bad) out addl or mov andb mov mov (bad) (bad) ljmp (bad) mov cs shl pop push repz addr16 push adc les sub inc and or push sub lahf add (bad) call pusha in push push lahf push aad pop cmp jbe scas and sahf fwait mov jle fmuls (bad) call sub popa push push push jmp jle cmp push ficom (bad) lcall insb jecxz push sub sub adc es in popf (bad) (bad) (bad) ljmp insb mov cmp lods fild sub add push imulb push cwtl stos fstpt adc jecxz (bad) jp rclb push mov cs jo scas mov (bad) jmp cli jmp fidivrl cmp push mov mov stc in pop push (bad) (bad) (bad) call ret test ljmp fwait stos sahf sub push lea lock (bad) (bad) (bad) push xchg sbb int xchg sbb cmp clc pushf jp leave and jg adc sbb pushl fcompl sahf ret pushf cld ret ljmp cmp decl lcall arpl repz push mov mov and out clc pushl scas jl and or cli sub cmp outsb mov nop (bad) pushl push outsl mov mov popa push fdivrp sub test aaa iret sbb sbb mov mov mov (bad) ljmp lret (bad) addr16 fs pop psubusw leave fldt cli push add (bad) (bad) incl adc dec mov (bad) mov push cld sbb push aaa (bad) iret popa adc in (bad) js pop (bad) (bad) (bad) ljmp xlat cs imul imul jge pop insl ss jle std (bad) (bad) call jb dec cmp and mov mov mov cld adc xlat push dec fnstenv (bad) (bad) mov fstl mov pusha (bad) std int nop add xor in push dec idiv idiv stos mov push pop sahf imul out jb cmpsb xchg dec hlt mov mov cli push xor imul and push pop scas notl adc or lock mov decl (bad) cmp ljmp cmp ret hlt icebp decl push xchg daa jbe addr16 jle scas sub (bad) lcall call inc lret lea dec mov dec and xor xchg clc (bad) lcall es pop (bad) int ret pop movsb push mov cld aaa cli (bad) scas jnp into aaa cld xchg pop add imul jg jnp in mov mov addl inc lds out push loopne mov call mov cmpsb cmc or mov test push movsb xchg (bad) (bad) (bad) pushl inc in cltd stc push mov fmuls sub rorl arpl pop pop sbb push (bad) (bad) (bad) jmp movsb addr16 xorl lret xor push adc repz mov ljmp xlat mov int (bad) and subb ds cld mov inc and pop (bad) sahf push (bad) (bad) (bad) (bad) sti mov sti (bad) jle lret pusha daa test mov add or incl (bad) (bad) (bad) jns popf xor nop cmpsl out inc ds and nop out pop jge imul call aaa xor mov adc pop aas jno pop and add (bad) (bad) mov mov (bad) popf xchg xor cmp mov sbb inc (bad) in xor pop push push lods mov or nop inc in scas (bad) (bad) (bad) in mov cs sub sarb and cmp repnz mov cld jo cli lcall popf xor or xor cmp bound dec xchg test pop jg in cmp cmp subl (bad) (bad) jmp jne,pt fist sub popa mov push push rol mulb (bad) repz in jle ret loopne sub (bad) (bad) (bad) call pusha je xchg cmp (bad) jecxz and aaa push aas push mov in jns inc xchg decl test iret mov jo adc cmp ret sbb or (bad) (bad) call daa daa pop pop scas cwtl (bad) inc push jp cmp test (bad) ss cltd in or sub (bad) lcall pushf xchg or xchg jg xchg in xchg mov push cmp sar xor inc ret (bad) (bad) (bad) dec ret or cmp lods xchg je sbb and xor jns (bad) push jb (bad) (bad) jg inc mov adc add jnp adc xor js es jg jmp push (bad) test jae faddp sete adc xchg xchg mov call xchg lea outsb pop fild pop cvtps2pi test sub inc inc xor sub sbbl hlt xor fcmovu or (bad) (bad) jg pop jb rorb xchg mov ret aad push clc add pop push mov lock call cmovg imul mov cmp arpl out dec arpl push pop lock fwait call (bad) push sbb add (bad) (bad) cmp or daa inc (bad) dec mov loopne lea ret cltd pop xchg push or je jmp mov dec arpl ljmp (bad) jmp ja rcrb nop jae,pt cwtl mov arpl mov jns jmp (bad) (bad) call pop (bad) and xchg jle push mov outsl cmpsl (bad) (bad) hlt rcr jecxz mov es outsl mov lods (bad) (bad) mov data16 stos out push or hlt xor or aas mov cld ljmp mov ja fnstcw add stos jle in inc ret fcomip push je xchg in push ljmp xor jnp and sar pushl or out dec or sub xorb jmp mov or dec cmpsb push sub sub xor pop mull sbb (bad) (bad) jg inc mov pop shrb in popa mov sub xchg mov lahf xor cmp (bad) lcall in imul je inc scas popf loop jns inc adc ffreep push pop andb es (bad) out clc inc mov cmc cmp (bad) pop pop xchg in fadd pusha cmp mov (bad) (bad) (bad) lcall dec mov xchg adc and (bad) repnz lods inc arpl cmc fdivrl int3 xchg (bad) (bad) (bad) (bad) aas (bad) aas inc repnz out push stc out add xchg bound sub mov or pop std (bad) out and cld xchg pushf fsubrp popl into pusha mov (bad) (bad) call (bad) jbe cmc popa inc cmp or inc out and adc decl loop and (bad) lret ljmp mov nop (bad) (bad) (bad) pushl sub sub dec lock imul hlt dec xor sub idiv (bad) cli movsb movsl jmp jp lahf enter cld das cmp (bad) mov mov jmp xchg xchg arpl call (bad) js add pop aas leave pusha and inc mov fild or test adc mov cmp lock mov (bad) (bad) lcall in js hlt mov cmp icebp iret xchg dec dec (bad) xor mov pop cmp push inc cmp mov (bad) jle xchg jle sbb xor sub (bad) fcoms inc enter (bad) jmp stos dec or popa xchg cld jl pushf mulb stc adc mov popa mov mov (bad) (bad) (bad) lcall mov inc sahf dec xchg mov mov jbe outsb aas inc out sbb jle (bad) (bad) incl out nop ljmp push xchg jbe inc dec jle jg scas mov lahf sub jp (bad) decl cmp pop fcmovbe pusha mov sub into cld (bad) jg and mov add pop mov std add ja jecxz fildl (bad) fcomip pop inc mov lds sbb stos (bad) mov fidivr cld frstor or ljmp shl jmp fst push mov movl pop jne out adc (bad) scas out clc (bad) lcall or test repz cli cwtl (bad) pop cmc mov out xor scas jp dec cmpsl inc dec jo je (bad) hlt out sub loopne lcall pop push mov mov popf mov (bad) (bad) jg test mov out cmc pop test sub sti mov lock push sbb cmp ret inc and lds sti (bad) lcall (bad) and mov xlat xor leave inc aad and test xlat inc xor (bad) (bad) lcall movsb ret (bad) and add push cs push adc mov lods mov (bad) (bad) decl int3 out arpl orl leave insb enter rorl fisubl je (bad) (bad) (bad) call xchg add jo fist loopne fadd xor mov dec pop or (bad) (bad) (bad) ljmp mov pushf imul jg and xor loope stos dec push adc push sbb sti (bad) pushl ja sbb in mov cmp lret xorl push std dec sar (bad) (bad) push dec mov aaa stos cmp ret inc repnz sbb or pop lea dec cmpsb aas mov xchg dec cmp rcrl dec nop inc fnop in (bad) push (bad) (bad) (bad) inc push dec jne cmc fistl aaa sub (bad) (bad) int out leave dec push in popf (bad) sbb (bad) (bad) incl call or sbb adc xchg repnz pushf loopne mov jno rorl (bad) (bad) in jmp sub fwait jmp adc lods add sbb sbb adc fldcw pop into (bad) pushl std std popa jo mov sub pop dec jne sub push scas inc sarb (bad) (bad) (bad) jg insl ss ss push in lods call lahf stc jecxz (bad) mul ja gs (bad) (bad) lcall mov sub push aas pop cmpsb test mov mov add dec fild mov cmp jge addb (bad) (bad) (bad) (bad) jmp in fimull loop pop mov call adc (bad) (bad) call sub in loop stos insb mov jecxz lods jl dec movsl insl es lret adc (bad) (bad) (bad) jmp ds jbe flds push iret mull xchg xor mov xor (bad) (bad) call into stos push push sbb xor dec and stos in loope ljmp jmp pop (bad) (bad) (bad) lcall ja cmp adc dec inc fwait xchg pop add lret lcall mov (bad) (bad) decl mov sub es inc inc xchg xchg fwait je dec mov jp push clc (bad) lcall mov pusha cmp xchg mov dec or mov (bad) incl jle mov pop push mov call mov pop (bad) (bad) (bad) call xor scas and push push insl dec xor pop dec lea (bad) icebp jb sub xor and (bad) (bad) ljmp cmpxchg8b (bad) cld cmp test and js call sub (bad) inc arpl clc stos xchg ljmp repnz leave mov mov outsb mov mov (bad) jg icebp inc into xchg cltd test inc lcall lret dec inc push and adc (bad) (bad) lcall push out add fwait (bad) in mov push outsb add dec clc js mov mov mov lds sub in into sub stc insl sbb pop jnp jmp (bad) ljmp push stos cmp xor xlat cwtl in mov xchg pop lahf cltd imul (bad) xor xor (bad) (bad) lcall sub test dec mov inc jbe (bad) dec sub mov (bad) js add pushl xchg (bad) cld repnz subl leave mov icebp loopne push test movsb loopne xor add enter cltd daa lcall mov cmc dec xlat fisubl (bad) (bad) lcall dec inc mov push cli arpl and popa insb jns jecxz jg pop adc or (bad) (bad) jmp dec mov pop mov jno addr16 mov out xor stos out pop pushl (bad) stc rorl movsw sbb aad adc push sbb (bad) (bad) call sub je,pn jbe into add out inc aaa fwait cmp cmc mov adc (bad) (bad) (bad) lcall xchg jl (bad) mov insb xor mov cmp dec add (bad) (bad) (bad) (bad) in push in pop sub dec or jo jle das cld (bad) jae cld mov cwtl xchg imul or or cmp dec repnz insb pop adc cltd sub imulb dec xor stc imul call jo xchg pop pop mov pushf shrb mov fcomp lds call mov cmpsl fistpll cli std das mov sbb frstor std pop sub je sti cmpsb in test in xor mov in push and sbb jmp aaa (bad) hlt (bad) inc lcall cld dec xchg xchg jecxz data16 adc jb push pushf flds and aam cmc mov pop (bad) (bad) (bad) (bad) cmp xor mov or sbb xchg shl mov cld in (bad) (bad) (bad) dec in add inc aas nop xor ja push pop sti jb ja pop xor in mov int3 pop mov (bad) (bad) (bad) mov fistp insl mov call mov ja cwtl xchg (bad) call add mov psrlw sbb dec cmp mov (bad) (bad) (bad) pushl push shrb pop add xchg mov mov cmp outsb adc ja cmpsl mov and imul pop jne (bad) incl inc idivb cmp dec enter aaa add sbb push add ljmp xchg mov lods mov push andl or test gs (bad) ljmp add (bad) xor mov add pusha loopne mov (bad) (bad) cmp or pop jb sub inc or adc xor cmc or pavgb hlt pushl dec add nop test mov fs out test jge sbb test popa add mov (bad) in (bad) cmp stc and jmp mov lods adc inc jne lcall add cmp (bad) incl push clc out cmp shlb and xor and xchg xchg movsb adc inc xor fcmovnb mov push xor sbb (bad) call adc imul pop add add sbb xchg (bad) in incl push or add mov mov add ficompl scas cwtl push add adc (bad) (bad) mov mov xchg xchg (bad) pop (bad) movsl mov movsb mov jne aas (bad) (bad) (bad) jmp adc subps cli (bad) jecxz and insb push je xorb and lret icebp sbb cmp add std sbb imul cmp (bad) (bad) js mov xchg sub mov stos ds sti stc movsb xadd pop pop or or cmpb add aas and das mov in push (bad) lock jnp push jge outsl xor cmpsl aad or outsl jg push push pop xor dec cmp jb push inc fidivl pop jg sbb jl inc add xchg or or lret inc ljmp adc mov push xchg nop push push rdmsr push push add pushf ret rcrb out adc js mov into inc dec (bad) subb adc add push cmp add add adc (bad) jg ljmp out add mov xchg lods jge loope,pt mov mov push (bad) (bad) (bad) incl pop mov jle cmc pop or stc fnsave (bad) ss insb add (bad) cmp jmp pop loope xchg neg imul push push sbb les xchg or pusha int push dec (bad) scas sub sahf clc mov sar out clc dec add dec jns jmp out and push movsl push fwait pop xor add fs fdivrp sub clc sbb fs lock decl decb es and (bad) and add (bad) not je push push dec jp sbb pop insl inc fs push jecxz leave mov stos test addl dec xchg and dec (bad) jmp inc adc (bad) mov test and imul push leave jmp mov mov sub lods dec icebp pusha lock pop (bad) flds pop xor (bad) inc in aaa orl arpl cmp stos pop xchg aad faddl and add xor ljmp int3 shrb push ss xchg out repz (bad) (bad) decl jo xor sbb pop icebp lahf fistp and ficoml stc inc (bad) (bad) (bad) ljmp mov adc push pop push cld ja inc mov adc pop mov insb std into xchg repz dec mov (bad) sub popa or pop (bad) jae rcll inc mov nop dec aaa cld push adc cmp jne icebp scas out mov clc out call aas call cmp mov repnz sarl pop xlat sbb (bad) (bad) (bad) or stos daa aas adc push mov xlat adc (bad) fbstp sub xlat (bad) cli stc stos push js jge jbe imul jecxz push cli je dec adc lahf adc scas enter adc (bad) ljmp (bad) loop loopne mov pushf dec pushf pop dec pop mov pop sbb jmp adc cmc sub mov (bad) clc sub ds adc inc out clc adc out mov mov adc mov mov sub and cmp std push test pop push loop jmp adc pop xchg pop (bad) out (bad) out cmp negl or mov jp mov mov mov (bad) (bad) pop push or ljmp lret ds dec test push or mov pop mov call mov push ror jmp cld sti sbb enter fucomi (bad) mov stos es (bad) or adc aas mull jg jl mov ret pusha test cmp cmp (bad) stc xchg xchg jae insb push mov lcall push push ret rep lock lret out shrd aaa lods faddl js mov lret iret arpl (bad) (bad) (bad) mov out aaa pop mov cmpps jmp push loope add daa and lods (bad) (bad) out scas nop (bad) (bad) and movsl inc lods add (bad) fwait jno sbb inc inc mov (bad) (bad) jmp (bad) mov xchg fstps lret inc test xchg sti jl mov mov das clc (bad) (bad) clc frstor pop xchg cmp jecxz add daa fdivrp out adc push fadd sarb scas fist rclb sub insl pop xchg jl cmp cs jb and push mov jo ljmp push mov mov add add cmp repnz xchg add inc push mov push sbb xor int3 addr16 push (bad) jmp pop xchg daa add push cmp lea dec adc popa (bad) movsb es dec mov pushf test push sbb addb punpcklbw out and int3 xchg pop (bad) (bad) jmp int inc mov xchg fwait xor ret and jo jo or in mov loopne inc (bad) icebp pop je mov cli dec movsb clc add cwtl pop or sub (bad) rolb scas mov add sbb fs xchg leave inc inc xor cs mov (bad) mov cmpsl push or add (bad) jecxz cmp clc shlb xchg (bad) mov (bad) (bad) (bad) cmp pop jo (bad) icebp nop je mov hlt push add dec mov add (bad) mov push add data16 lea mov jmp pop insb mov lcall mov cwtl jg rolb mov lods xchg (bad) push hlt cltd inc xchg (bad) (bad) call cmp adc mov mov add adc (bad) push dec sarl push adc (bad) (bad) pushl scas add lods xchg (bad) scas pop adcl dec subl lea cmpb dec or mov (bad) aaa adc sbbl aam sub leave push sbb xchg ret (bad) lcall lock push push stos adc or or (bad) incl mov inc mov mov dec or push arpl das and cli xchg adc pusha xchg adc push (bad) mov dec pusha out (bad) (bad) (bad) pushl adc jge fisub add xor sub add add (bad) push scas pushaw xor mov pop sub add out inc xor sub (bad) xchg lds cmpsl cwtl sbb pop inc dec add outsl jg pop mov adc arpl cmpsl pop push mov add scas add imul push (bad) (bad) (bad) ljmp pop rcr ret pop mov je mov pushf push imul inc pop xchg pop mov ljmp lods or pusha jo (bad) std xor jecxz repnz insl sub (bad) (bad) (bad) clc pop and jg mov and jae outsl test imul add loopne or repnz sbb jnp popa div inc or adc fs mov shrl or adc (bad) inc mov cld std sahf or and xchg jno push jo mov pushl fnstsw lret cmpsl sti mov inc xchg mov fadds movsl mov mov lahf xor jns divl mov fdivr cwtl mov dec and jp mov mov (bad) (bad) call popa push or shl ds add sbb push xor and subl call dec sbb push mov dec rcrl int3 xor sbb test das or push loopne push and mov add mov imul xor imul sti push daa ds (bad) (bad) (bad) cld pop xlat jne (bad) negl add jmp (bad) push lock push inc mov icebp (bad) jg lret jne sbbl pop fs mov lcall lods mov jo cmpb xlat adc sbb mov pop dec js sub pop sbb mov xor xchg into mov mov jno (bad) dec cwtl daa dec je sub (bad) (bad) call out xchg repz dec cmpl pop cli popl mov pop cld (bad) pushl mov mov enter push scas sub cmp call clc call mov mov pop test imul ja fisttp dec adc cmp roll rcll and imul aas xor cmp pop mov pop mov dec fcmovne pop or test pop (bad) in mov mov push pop mov in cmp cmp mov sti lcall (bad) pop mov stc mov inc add outsl sbb pop sub jmp hlt or (bad) jl inc punpckhbw push jne leave mov jno outsl jg adc xchg out mov inc adc sar das mov push cld push aam (bad) xor ds hlt mov push std pusha lock out lods inc and faddl lods xchg mov ds loop cmc sarb jp (bad) (bad) decl jne pop xor shlb mov test xchg inc adc pop xchg or inc repnz shl sbb add iret (bad) (bad) incl adc jnp adc adc push add scas sbb jg jmp xor add int3 xchg stos imul mov arpl xor (bad) (bad) call or push (bad) int push mov xchg xchg sti push mov (bad) sub outsl (bad) inc jae pop sub cmc xlat push scas jmp xchg fcomi xchg push or xadd adc cmp sahf das pushf idiv outsl pushl cmp jae stos das lods pushf add js loope hlt imul sarl stc outsb cli or ja cmp and loopne pop iret pop inc push out inc sahf (bad) (bad) (bad) incl xchg (bad) mov les or mov adc repnz lods std (bad) (bad) (bad) call (bad) leavew dec aas imul dec mov dec push aas cwtl push jp aaa bound (bad) lcall (bad) stc xchg popa adc shlb mov fcoml jge arpl (bad) (bad) call (bad) ss imul out (bad) imulb arpl dec mov xor add jg adcb daa cmp mov (bad) (bad) (bad) inc pop adc or repnz scas lods or lock add sbb mov pop add fadds pop (bad) push adc int sbb sub dec icebp mov int (bad) (bad) incl (bad) dec jp les sahf cld movsb int3 cld and cmp adc push add rcll out (bad) (bad) ljmp add inc sub xchg pop mov or lds or jle fucomi xor stos test loop movsb cs mov mov xor (bad) (bad) (bad) lcall pusha negl into sbb out stos fistl int xor add aaa mov lret inc leave dec mov scas ljmp lcall fstps insl insl loop js push dec (bad) fcomps cmpsl outsl mov xchg mov call push or and pop jb aas mov sub imul push js bound bound (bad) (bad) (bad) inc add inc icebp inc mov popl mov jns mov mov cmpsb jl call and add mov jno fisttpll js dec popf mov (bad) (bad) call adc dec (bad) lea xor aaa or sub das (bad) sbb jecxz out jg (bad) decl jbe xchg jne fmull lret mov lock subps jo (bad) (bad) lcall pop lods in popl inc test lret fdivl xor xchg push bound mov call addr16 pop jle lds les pop sarl push mov cwtl sbb (bad) mov sti jae mov stos add pusha jnp push mov cmp ret clc fs sbb (bad) fmulp leave sbb add lea (bad) nop push and jle mov out std pop fmul pop in (bad) push stos add sti cmp es movsl dec clc jl mov mov andl test sbb jmp imul jle es xchg imul mov add (bad) mov mov xor mov push dec fucompp jmp (bad) (bad) (bad) inc rcr mov and daa jno inc push mov xor mulb mov in repnz sbb jmp loop mov clc je inc push mov (bad) (bad) lcall insb mov cmp data16 enter xor xchg (bad) fimull imul incl pusha mov jne pop popa xchg xchg xchg lret gs mov mov cmpl mov (bad) cmp ljmp repz int movsl out mov mov pushf pop orl lcall cmc mov sub xchg inc cli leave add dec jne daa movsb out hlt arpl jl lcall leave aad mov mov stos or jo add jno (bad) (bad) (bad) std imul mov aam stos xchg scas mov jmp lock fdivr call fcoms inc mov jg cmp std ror jb (bad) (bad) lcall cwtl or fstpl push popa pop xor sub test and adc sarb out pop push jg add sub push dec das push stos adc ljmp mov jle xor (bad) (bad) pushl sbb stos nop popl mov sbb aad loopne loopne dec jle aam test test les outsb shrb rcll dec mov mov sub pop sub ds push pop nop dec dec push add aad movsb cld mov pop sub addr16 xchg inc xor cli es or jle ljmp dec test dec push pop test movsl mov ret stos inc (bad) lcall fsubs insb leave xchg xchg push inc gs xchg mov mov std (bad) (bad) dec mov sub lock ss clc imul pop lods push adc loop sar inc xchg sarl dec or rclb fmull sbb sbb cmpsb (bad) (bad) jg aaa jae pop cmpsl mov xchg lcall js addb jmp test fstpl mov call je or out mov jbe (bad) incl dec (bad) cmpsl jmp cmpsl sti mov fstpl sti push mov out sbb negl xchg jnp mov testl and lahf xchg sub out jg (bad) (bad) xor fucomi fimul pusha pop or ja ja fisttpll (bad) (bad) (bad) fisttpll mov fstl sahf dec negl ds out imul mov std jge pop rol cmp mov fwait out pop sub idiv dec mov inc notl (bad) je jmp ret or xor (bad) sbb xchg loopne fisttp lret jg addr16 mov or pop insl fcos (bad) (bad) (bad) jp jae push (bad) mov scas sbb dec loope loopne add mov sbb sar (bad) call xor jge xlat xor pop iret ret cmc daa mov scas xor ret dec iret jg out jmp in lods subl es cmp std pop (bad) jo,pt test or ret out loope add aaa mov movsl outsb out ret jne mov pop or push mov (bad) (bad) (bad) fldt push mov xlat ja cmc ret xchg add cwtl or sbb push ret jmp (bad) (bad) sti jo loope adc mov xchg fisubr repnz decl sub fldl xchg or push scas dec push mov xlat mov (bad) in repz lods push scas pop out scas imul mov push aaa or lock (bad) (bad) out test inc xor xchg fstpt (bad) insl pusha pusha cmp int clc dec ss je lcall movsb cmp outsb fstl (bad) sub loopne movl lcall mov movsl outsl outsb jns pop mov std movsb push xor adc push (bad) (bad) (bad) lcall mov lds jp shll jecxz pop imul ja imulb (bad) and clc and (bad) jno lret aaa ret aas and (bad) (bad) jmp (bad) sbb aas jl push jp add or lea lahf mov (bad) (bad) (bad) lcall js mov outsb sete xchg clc mov icebp xchg xchg aas hlt jo push mov inc add popl dec dec lret loope jle jle sbb loopne (bad) mov or ljmp mov repz daa (bad) (bad) incl sarl push jg mov (bad) mov adc fcomip (bad) jmp outsl es ljmp loopne add push out adc jmp adc (bad) (bad) inc xchg enter in adc push or test xor loope test push ds (bad) (bad) jmp adc lock fstps push jmp fwait sbb nop repnz (bad) (bad) (bad) add inc mov fcoml sbb xchg jo inc imul (bad) (bad) mov xchg adc lods add add cmp or sbb ret add test (bad) call cld andb ret sbb movsb jnp faddp inc sub sbb xchg (bad) (bad) (bad) (bad) cmp and xchg lock jo pop fld clc jns,pt add out mov sahf add push inc (bad) (bad) jg mov mov add inc mov adc imul push cmp fcomip ljmp fcmovnbe mov inc jmp mov insl (bad) cmp jmp (bad) fimull popf ljmp aam pop in ficoml mov pop popf fdivrp mov ljmp sub (bad) lret fisub sarb ljmp rol inc cmp frstor in and outsb jne movsb (bad) sar out clc pushl jb mov push cmp cmp cmp cmpsb push ficomp sar loopne outsl cmpsb nop push mov cwtl xchg sbb mov das mov (bad) (bad) jg or sbb cmp cmpsb icebp hlt push (bad) sub into test popl decl (bad) decl pop jp or sti out arpl imul xor (bad) (bad) (bad) (bad) inc mov ljmp push mov insl inc lretw jle inc out out daa std out lock (bad) (bad) decl out cmp dec test cmp xlat rclb hlt ffreep pop idivl (bad) incl xor mov jnp aad cmc xor push sub jl adc (bad) jg inc ficompl (bad) and loopne insl mov mulb dec incl cli ret pop stos cli pop sti fwait ss (bad) (bad) (bad) ficompl out inc sub sbb cmp mov (bad) loop jnp inc clc push shrl stos push and (bad) lock (bad) int3 loop (bad) pop data16 decl jbe aaa mov les in sub pop outsl negl ret (bad) (bad) (bad) ljmp (bad) jecxz pop (bad) cmc jecxz jns out mov fisub jmp cmp (bad) mov lcall loope jnp push (bad) hlt fcompl imul imul (bad) ljmp mov (bad) rcl int aas xchg inc icebp mov ret and insb cmp lcall addr16 jno repz push fbstp mov pushf mov (bad) (bad) (bad) ljmp pop jno pop xchg movsb push daa sbb and inc or mov in push mov dec adc add punpcklbw pusha pop mov add xchg stc sub shrl sti outsl cli dec pop sbb enter clc push add cmp add adc (bad) (bad) fisttp add into xchg mov mov mov sbb add mov pushl ficom add cs pop pusha in out das mov sarl (bad) (bad) (bad) out mov (bad) std and pop dec xchg or push add dec mov xor (bad) (bad) (bad) cli adcl or mov mov mov aam add out out mov push repnz and imul ja and stos push repnz or sub clc into lock cmp fucom ret test inc test lea out pop pop ds or push sbb lods jl jnp aas aad movq mov pushl adc push rorb aam movsb adc pop aas stc fidivrl (bad) (bad) (bad) push bound push movsl mov push iret sbb xchg pusha testl es or inc in movsb call loopne (bad) notb insb idivb test loop add xorb (bad) (bad) (bad) (bad) cmp xchg (bad) push outsb sti adc cld adc mov ficom lea and imul pop cmp call mov fstpt (bad) cli rcr mov mov mov sbb pop push (bad) dec add mov (bad) mov (bad) js nop mov (bad) push fsub sbb push mov (bad) cli jne mov mov xchg jle sbb pop mov (bad) sub call lods aaa frstor cmpsl sub (bad) push adc push aaa cs sbb sahf push adc lea popf (bad) mov hlt mov mov sbb movsb in xchg not sbb mov lcall (bad) (bad) (bad) jmp and xor roll je jb jbe inc scas mov dec dec outsb jno icebp (bad) (bad) inc (bad) lock pop sbb or fmull movsb popa dec inc sbb dec mov fcoms (bad) lcall movsb inc cmpsl xlat (bad) jae aam (bad) repz scas (bad) aaa sub out xor sbb or loopne jno call mov outsb pop add ss jo pop pop xlat inc mov xchg outsb das cli (bad) jmp pop scas mov cli cmp xor xchg ss test (bad) (bad) inc or jne cmp gs loop or push mov (bad) xor (bad) (bad) push fchs cmp add jb sub repnz lock jns lret icebp iret (bad) jg call add pop jecxz ds repz inc popf outsb xchg dec ja fistpll jmp mov loop rcrl add add (bad) pushl fimull jmp sbb nop mov pop mov pop pop pop push push push stos pop dec addr16 (bad) (bad) pushl sub aad mov lods scas inc inc cmpsl mov add mov pop xchg outsb jmp xchg dec pusha dec je in psubw (bad) (bad) (bad) (bad) cld or sbb in outsl or mov jecxz fwait (bad) jge aas icebp xor cld decl call add enter jg add fsub cmpsl ds (bad) iret sbb cld (bad) decl fdivrp jecxz and out jmp push jmp dec and in orl outsb outsb (bad) fidivl jmp scas fnstsw jnp in aas or daa cmp sbb lahf jle fidivrl (bad) ljmp out icebp addr16 jnp jmp pop jg loop xchg jg cmp xchg sarl (bad) (bad) (bad) mov mov jle out call incb lds mov jecxz pop mov jmp repnz push fisttpl fildll push scas fnop (bad) (bad) (bad) cmp sbb cld (bad) jg cmc out mov jg stc lret xlat fisttp sti fnstsw (bad) (bad) (bad) std je add leave bound cmp rorb jecxz repnz or push or sti decl mov cwtl xchg add and cmp jmp jmp sub pushf mov scas pop push lods pop mov push mov pop xchg (bad) call mov push jecxz sub mov icebp loopne lahf insl jge fninit pushl (bad) (bad) jns dec movsb cmp add adc xchg das sub mov in fdiv pop loopne lea das call xor inc jecxz,pn icebp (bad) fcomip push int3 test aad (bad) and jle popf cmpsl push in pop hlt pop mov (bad) sub scas push scas sarl adc sub fidivr jb movsb jnp (bad) mov insb jmp popfw cli mov inc dec (bad) popa push test lods and (bad) (bad) call xchg stos dec dec mov pop add mov or addl jne loope dec pop (bad) (bad) ljmp orl or push loopne pop push jb in inc fistl scas push scas xchg pop jo and adc lcall sbb outsb ss (bad) jg cmpsb inc push scas push push pop aam mov push xchg pop pop jle cmp incl add push sahf dec stos add inc pop sbbl ror leave dec insl (bad) lcall in outsb cmp jno mov cmc xor pop cmpsl pop and (bad) (bad) (bad) jmp dec cmp cltd fisttpl lods cli sahf popa mov je sbb loopne jmp shll jo push rorb aaa sahf jg (bad) lcall sar (bad) out lods fmull js ljmp pop xor cmpsb outsb mov (bad) (bad) jmp mov popf out mov fsubrp andb in cltd jno jns push pop movsl insb (bad) (bad) (bad) call (bad) aas adcb inc jge loopne dec push inc cwtl sahf test enter jno cmp cmpsl aam mov or sub mov inc ret stos and fstpt mov js leave add mov add mov sarl add push loopne (bad) jmp js cld and jae adc lds decb xor (bad) lcall lcall ss push lret xchg pop cmc fldcw cmpsl rol push scas outsb test sub add out aad dec push or decl add sub pop test jmp cmp pop (bad) lcall test stos inc lret call pop sub xchg pop sarb mov (bad) std (bad) (bad) jg xchg and rcr push xor jo loopne shlb ss clc (bad) jg in decl bound or add or in (bad) jg notb push or push push push push push and mov inc push nop or add cmc outsl push add add push cld jae mov add sbb enter addb mov aaa add add add dec add fiaddl mov sub inc cmp (bad) pop push push aam jo (bad) mov or add add loopne mov fcomip sbbb mov outsb add or rclb add xchg (bad) mov (bad) (bad) pushl add xchg push clc lods pop (bad) scas add jno add add add lods adc (bad) (bad) incl and add repz or jb pop fisubl sti pop xchg push pop lcall xchg inc and or sub (bad) (bad) jmp xchg sub add sarb pop cs lods add int repz cmc cmp call pop dec sub aad je lcall (bad) pushl add gs push and or inc gs push jg or dec mov int sbb incl popf cmpsb push mov (bad) dec pop mov jmp xor inc fwait xlat xlat ss mov sahf je sub mov (bad) test aam cmp mov aas call or inc cs (bad) xor (bad) inc pop outsb aad (bad) (bad) mov inc dec pop (bad) mov negl cmp mov or jmp dec mov nop xor xor pop pop or out sbb mov lret cmp pushl add adc jge fisubr aaa inc cmpsl adc push (bad) sub cmc (bad) (bad) out clc hlt push fidivrl je (bad) (bad) cltd hlt lock cmc dec test call xchg push (bad) (bad) jg stos (bad) dec inc loop mov add popa jne iret fcompl inc (bad) dec ret (bad) (bad) call pusha inc sbb outsb sbb call pushf (bad) (bad) (bad) ljmp inc inc insl sub repz repnz mov stc lds xchg adc (bad) incl jb cmp dec int arpl loop jmp and stc push mov pop stos lods negl outsb or repz jae mov popfw add out push push into ljmp (bad) (bad) call das pop nop push push nop inc cmpsl sub sub pop mov cmp pop sbb pop push and fcomip (bad) dec mov jbe cmp ds js (bad) sbb mov ljmp (bad) incl adc pop (bad) dec cmp sahf mov push repnz outsb cld ljmp lock iret push js add mov in sbb (bad) (bad) mov pslld stos mov add (bad) decl push mov pop fistl popf mov (bad) aad add jns mov mov mov inc add (bad) jg ss push sub mov sub (bad) ljmp aam push xor dec jle lods xchg lock (bad) call xor aad imul lret jp jp mov adc aam cmp outsl stos ja mov insl rcl sbb jne pusha sbb sbb lcall push push xor rcll xor std fstp addr16 add imul stos xor (bad) (bad) jmp sbb sbb push cltd cmc mov rclb loop test inc jecxz pop push sbbl lcall aaa mov repnz xor sbb shrl sbb mov pop pop clc incl fdivs (bad) mov xchg mov mov clc (bad) (bad) mov jmp lret int std xor scas test (bad) (bad) fistpll ss xchg xchg mov fidivr mov pop mov xor sub jp sahf nop and jne sar (bad) jmp dec stos test mov insl and scas (bad) aad out mov inc sbbb call mov sbb ljmp clc dec or mov push push xlat sub test lret in dec inc (bad) (bad) call jne gs pop cmp rolb cmp push mov bound sbb (bad) dec pop aaa push dec int repnz xchg ja sti (bad) (bad) mov fstps or and pop cmp push test xor std (bad) (bad) ficomp or add sbb test mov iret xchg stos mov xchg (bad) (bad) (bad) pushl wrmsr pusha mov mov popa loop jecxz aad pusha sub push imul (bad) (bad) (bad) repnz adc xchg xor add jnp movsl daa dec jmp lea scas and inc pop mov mov sub adc lcall dec nop sbb adc jae sahf orl fs ljmp (bad) jecxz adc cmp xor cli lods fs dec mov mov ror out pushl push (bad) (bad) mov or sbb jo pop and lea outsl incl or push mov cmp push mov (bad) (bad) in inc inc dec pusha outsl jp aas loopne adc insb xor inc push inc push sarb adc dec test (bad) mov push loopne rol sub das clc ret ljmp loopne xchg (bad) sbb (bad) aam arpl cmp (bad) jg jecxz je (bad) or mov and jno lret decb (bad) call icebp add mov or in icebp or sti fild cmp and mov push nop cli pop ss dec jb stos jp (bad) pop mov (bad) ljmp (bad) mov loope sub sbb push cmp outsb adc pop ss (bad) (bad) lcall adc clc mov (bad) repz or cli inc push jl mov movsb add aas imul test das clc jmp flds iret pop jp cmp jecxz mov jp mov jmp (bad) (bad) (bad) (bad) fsub lods (bad) mov or jb rcrl pop sub mov cmp (bad) lcall into loop jge adc pop add mov popf icebp pusha pushl int3 pop cltd mov outsb movsb scas add pop pop pop jmp es std cli lret (bad) pushl xchg std outsl pushf in lahf mov push (bad) cmp xchg fidiv cmpsl sbb (bad) (bad) cmp add xchg je xor sbb inc sbb clc out scas pop sub stos cmp iret cmp dec pop xlat ss das fldl mov mov mov cmp (bad) in scas lods and inc jl pop fsts xchg mov fidivrl repnz ret iret pop sub cmp or sbb xor mov inc mov mov mov xchg daa or ljmp ss clc pushf jg test (bad) inc and inc sub cli lock ljmp (bad) jns ret repz stos js (bad) sahf (bad) (bad) (bad) decl mov outsb jp add int3 sbb fyl2x je (bad) (bad) cld push aam iret fstpl outsl (bad) jg mov fs push fnstsw push out jecxz aaa cmp rep aam add xor cmp adc ljmp clc sbb hlt jo sub mov sub jb (bad) (bad) lcall mov (bad) (bad) std cmc jno sti lret imul not in rorl pop outsl aam xchg xor cmc in ret jmp jl loope cs imul (bad) ret (bad) idiv popf pop (bad) (bad) (bad) jg jmp (bad) hlt jle cmp mov outsl mov jg aaa mov xchg push mov cld (bad) cmp arpl inc jmp stos jg or mov adc mov jg mull mov in jl push sti (bad) (bad) jmp loopne das xchg add mov pushf mov push fidivr fisttp mov xchg jmp jmp jg jns jle (bad) clc fucomip add jg ds sahf jp jge jg mov sbb ds jnp sub icebp nop in mov jmp pop cmp faddl popa pop (bad) fdiv aam call jge pop fcmovu pop or daa (bad) (bad) lcall cli mov aaa xor out jmp aad jne sbb cwtl out add lock aad push xor push pop pushf pushw test call push inc jl pop dec jno rcl mov ret mov movsb mov (bad) (bad) decl inc addl xchg shll ror nop pop cmpsl push (bad) inc out mov std mov jmp pop testl cmp clc and loop push out (bad) (bad) mov push mov outsl (bad) stos es ja sarb movsb (bad) (bad) (bad) jmp pushf aam xchg js pop frstor lods xchg mov cli rclb popa enter pop ljmp pushl push xor pop mov sub inc xchg sbb mov (bad) (bad) ljmp jae repnz mov repz inc test pusha js push out cmc clc cmp inc test jmp cld xor cltd push mov dec push add xor outsb mov (bad) (bad) (bad) jp sub lret movsl mov xchg and stos push lods pop sbb (bad) (bad) (bad) (bad) jp fwait mov mov mov cmc (bad) mulps stos jmp jl adc cmpsb iret jnp (bad) (bad) lcall into pushw aam stos sub (bad) lods push jmp jp sbb mov imul (bad) pushl faddl std adc jp cld or lcall jmp call mov mov sbb lret xchg aam push jmp hlt (bad) (bad) pushl outsl sub push pop cmp mov adcl cltd inc (bad) ljmp add pop xor jmp ror cmc push fmuls lcall lods sbb pop sbb mov scas fstpl sub inc incl push (bad) push lea hlt andl fmull cs add jp call in stos cmp sbb jae xlat lock xor (bad) (bad) (bad) lcall push pop repz dec dec iret callw mov cld push push add inc (bad) (bad) (bad) mov fdivp push push mov clc fiadd mov add (bad) incl xchg mov loopne push (bad) jle mov push jo (bad) call push ljmp (bad) lcall push push stos or cmc hlt adc (bad) icebp sti mov fistpll sub sbb mov in ficomp xchg push jnp cmpsb pop push ficom (bad) cmp xchg ljmp push jmp lret aad pop pop jp rorl adc lret stc jne push ss (bad) (bad) (bad) jmp fwait jmp xchg push out aad xor and mov sbb (bad) (bad) (bad) pushl outsl add or subb push push push add aad sbb mov (bad) (bad) cmp jb fisubr cmc lock mov cmp mov mov (bad) (bad) pushl (bad) gs mov aaa and stos push jmp inc pop xor iret mov clc loope decl in int3 adc lods push call dec fsubr mov mov div test out and push fbstp pushl inc inc sar bound ret mov push mov push in ljmp push sub or test push mov or jmp xor outsb mov jb fwait xor sahf bound mov mov (bad) call out sbb and (bad) fstpl mov and enter dec outsb lcall jmp fbld clc mov xchg movsl adc add mov std (bad) (bad) push sahf cmp cmp inc mov pop push xchg mov pop (bad) cmp inc cmp pushl pop add outsl idiv adc cmc in sbb roll sahf xlat pushl cld (bad) mov mov in mov clc sti fs shr sahf hlt imul sbb push popf cmpsl dec mov jge pop das repz (bad) mov xchg mov mov ljmp insl into negl sahf repnz iret cwtl lea insb repnz jns int jmp scas xchg jecxz mov mov fsubrp sbb jno jg rcrb mov jge (bad) mov sahf mov xor iret daa roll (bad) clc jg and (bad) jg jmp pop xor repz cld jmp test or iret jmp sar call cmp out jns into mov xchg jnp (bad) ljmp lcall hlt test pop shll (bad) push lods add repz roll pop iret ja push clc cld iret decl pop lahf loope mov adc iret into add (bad) popa mov or (bad) das clc (bad) (bad) mov adc dec jle imull stc lods sbb lahf jno movsl xorb (bad) incl push jnp sbb jg adc dec cmp push sub fwait mov dec incl push pop stc loopne push mov mov (bad) (bad) decl xor mov test mov imul inc insb xor mov lea movsb add add ret and outsb (bad) (bad) (bad) incl or faddl add add pavgb add pop pusha pop cmp cmpsl cld adc add push cli sub fiaddl mov and jae and or std cmp add cmc test add pusha add push add aam sub fs or or lock jne jo mov xlat jl in cmpb add sub and or mov gs add xor stc mov (bad) (bad) incl decl mov sbb xchg push arpl add adc xor je xchg mov inc fs div insb push icebp (bad) (bad) (bad) jmp xchg jg (bad) call outsl xchg mov pop callw sahf mov jge sar (bad) lcall aam repz push jne out out ret cmpsl pop lret cld inc cmpb je nop xchg (bad) (bad) (bad) call mov jle sub xchg mov imul xchg sbb ljmp lcall (bad) inc movaps aas mov mov out ja push (bad) repz lock adc call inc repz (bad) ljmp cmp push stc cli cmpsl mov or inc mov cwtl addl push adc jg xchg dec fdivrs addl fadds popf inc adc pop push iret mov and (bad) inc clc gs roll fadds test xchg cmpsl (bad) (bad) (bad) call push and aas (bad) decb popa mull call addl (bad) (bad) (bad) (bad) jns jns lret (bad) mov adc and adc cmp push cld pushl not dec adc cmc jb sbb mov cmpsl cli cmp (bad) ljmp jnp rcll dec fucom mov std ds dec dec sti add mov xchg test (bad) (bad) decl mov xchg xor inc imul sub inc adc mov xor std in jnp xchg dec sbb pop enter (bad) (bad) pushl dec xor mov inc jge std sbb dec xchg in les out push mov push (bad) (bad) (bad) jmp lret jmp jns push xor sub mov imul (bad) ljmp cmp xchg cwtl push or test add fisubrl fbstp decl (bad) lcall mov (bad) jo inc sbb je dec pop or jnp lret (bad) in push cli mov int3 add dec jle fildl jmp inc mov cmpsb scas js (bad) (bad) (bad) pushl test adc repnz push adc mov sub xor (bad) (bad) (bad) mov xor push (bad) xor fwait or adc bound (bad) (bad) mov test xor mov int3 dec lds (bad) call inc iret je add inc xchg ret and cs (bad) (bad) ljmp xor (bad) sbb mov mov arpl or mov lea fbld xor fidiv lock or imul (bad) and dec mov or (bad) (bad) ljmp sbb cmp adc push int3 xchg xchg sti pmulhw outsl mov xchg (bad) mov out xor pop icebp or pop (bad) xchg fsts (bad) (bad) (bad) out sub fs jb push and aas mov xchg ss and (bad) (bad) pushl es pop mov push sbb add in fwait and outsb imul jbe mov xchg xchg sahf or push mov xchg leave or addr16 aad sti lret int popa popf (bad) (bad) (bad) ljmp xor xchg sub fimul mov fisttp imul aad fimul mov adc sahf cmpsb lods out sub (bad) lock incl adc daa scas mov outsl xor (bad) fnop test loopne hlt jg push dec mov mov mov mov xchg ret (bad) (bad) (bad) jmp enter leave and roll cmpsb xchg dec xchg jne (bad) xchg out inc push cwtl or mov (bad) ljmp xchg enter push js test jne cmp pop jb jno pop dec inc (bad) (bad) decl xchg inc and nop daa xor test jle inc mov mov ss (bad) (bad) jg mov mov push mov cmpl push xor push int3 mov sub (bad) pushl mov mov fcom jle mov mov jmp (bad) (bad) (bad) push add ds mov stc (bad) enter adc pop mov jecxz lock clc (bad) (bad) jmp ja notb dec jo pop pop pop test lds dec repnz ljmp in and xchg inc sbb mov adc adc negl rcl insb stos mov loope pop leave jo nop outsl or jne jecxz repnz pop pop xchg loop ud1 cmp aaa es push lret cmc imul das mov pop aas (bad) (bad) (bad) decl in cltd dec pushf mov fwait sbb pop (bad) jae dec cld sbb test add sti (bad) jbe sub dec ds pop xchg dec mov daa pop mov out add stc and and xor out popf lahf inc jge cmc dec pushl rclb or cli xchg in lock aad (bad) (bad) call aaa mov pop ficompl mov mov (bad) xor adc shrb (bad) (bad) dec (bad) fmulp je xor js mov arpl jb and icebp lods mov mov (bad) lcall out mov jge imul mov push dec jae adc imul xchg jbe iret lods jle jle pop mov xor add idivb movsb js jno push insl jecxz xor cwtl test out mov imul (bad) (bad) call rorl sbb push dec mov (bad) les daa pop inc out xchg adc sbb xor (bad) (bad) (bad) (bad) jl fsts xchg dec pop repnz lret mov loope ljmp into (bad) lock fsubr call mov lea dec (bad) (bad) (bad) pushl fistpl inc out es fstpt ds (bad) js cmc xchg pop xor pushl mov cmpsb test sub imul data16 dec packuswb (bad) (bad) dec out mov push jmp fadd mov imul push jle iret (bad) decl gs (bad) (bad) dec je xchg in jno mov push or (bad) (bad) (bad) lcall pop outsb cli out imul jb pop and dec inc ja movsb pop and push jbe (bad) pushl enter inc lcall xchg xor sbb xchg dec sub jbe push outsb (bad) sbb imul pushf jne pop mov icebp aaa cmpsb insl dec ja clc (bad) call jge jno mov add fisttp and outsl sar jecxz push (bad) (bad) (bad) call pop mov pop push dec test mov cltd test in fimul (bad) frstor pop xchg in aad (bad) lcall enter jecxz dec and mov test mov push (bad) (bad) (bad) inc leave push inc outsl xchg je inc icebp and or add adc inc jae mov pushf (bad) push decl fs arpl or fwait insl (bad) repz into add (bad) fucomi loope (bad) decl fs test rcll mov lret add (bad) (bad) mov pop scas imul cmp xchg sarb lods in push mov mov and (bad) (bad) ljmp ret lcall and sub bound inc dec jae,pn pop and aas addr16 xchg and (bad) (bad) (bad) stc insl push cwtl sub nop int3 xor adc jns and mov mov (bad) fdivrs in or pop dec aas mov stc imul mov out (bad) pushl add push les mov push les sbb sub (bad) (bad) push sbb ds sub inc lret sbb rcrb lret jnp pop or popa aam aas xchg push (bad) (bad) cmp dec in fs push and mov inc and aas or xor (bad) (bad) jg sbb fwait js push pop mov xchg (bad) jmp push (bad) lcall inc mov (bad) (bad) incl fiadd ret push dec dec (bad) movsb mov sbb rol xchg cmp jo jno (bad) (bad) jmp push cmp push xchg add or sahf ljmp add sub sti icebp sahf int or fcomip (bad) (bad) xlat adc es in sahf jne mov mov inc sti push jbe mov ljmp cmpsb mov and jp mov mov (bad) cmp mov mov sbb (bad) hlt test nop addr16 lea mov out scas lds cltd mov cmp jbe fs sar (bad) decl ret movsb clc inc pop cmp or and stos mov inc sub add orl (bad) ljmp mov lcall or mov cltd push int3 cli dec ret in lods ljmp call cld into pusha xchg movsl inc xor push mov inc lcall bound cmp fbld xchg xchg xor jmp mov cld ljmp inc sub adc sbb test (bad) pushl cmp movsb inc (bad) enter push inc popf in push movsb sbb jecxz (bad) daa and jp stc (bad) (bad) fcomip (bad) bound push sub adc cmp pop ret mov mov aad xchg (bad) (bad) (bad) lcall mov xor dec add add sub mov js jb (bad) (bad) incl lock jecxz test adc mov adcl lcall aam cmc dec inc push sbb jge jbe mov sbb cmp (bad) (bad) (bad) out xchg mov push fcmovnbe cmp mov cs loope sub sbb inc ljmp jne rcrb or mov cmp (bad) lcall cmp dec out jb xor mov xor and xchg inc xor add dec mov jb insl stos (bad) (bad) jg add and lret pop or mov adc sub xor sub pushl std (bad) ljmp popa cmpsl insl scas imul sbb fiaddl mov (bad) (bad) incl inc out sub insl shr int3 inc push xor jge inc pop jns inc xchg (bad) jo mov ljmp add mov popf rol ljmp in dec pushf (bad) jg pop add sub insb sub pop mov jns (bad) cmc (bad) jg or mov scas push and mov jno ret in xor out adc or gs je inc jp cmp (bad) (bad) (bad) cmp icebp pop mov pop rcl ljmp or xchg sbb pop pop mov jg jns add outsl cmpsl dec enter inc dec inc mov aad mov (bad) (bad) push outsb negb mov pop lcall mov mov clc xor stos sti jmp xlat icebp (bad) (bad) jmp loop arpl cmc mov jne lock loop mov addr16 lcall fiaddl mov or or mov xor or (bad) cmp (bad) (bad) pushl adc cmpl sbb sub or cmc repnz aaa aam pushl add lahf lea adc bound insl clc mov scas sub shrb sbb sbb inc pop dec push out insb push dec push decb mov sbb jge cs push cmp pop (bad) (bad) (bad) dec jne xor push cmp add dec fcmovbe test pop nop fs ds (bad) (bad) ljmp push mov mov leave jns inc mov sahf mov (bad) in popa mov push imul lret nop xchg fwait push push sete insb cmp mov mov jmp (bad) call bound pop add clc xlat lahf das repnz mov imul (bad) (bad) incl mov int jp sbb pop inc cli cmpsb and sbb in frstor xchg mov jb cwtl (bad) push jno jecxz daa cltd addr16 sbb xor push mov (bad) mov ret out inc or sbb loope dec jecxz stos in cmp (bad) (bad) lcall xor gs daa xchg sub xlat xor sbbl (bad) pop (bad) jo (bad) xor insl ret (bad) jmp or jp lret xchg cs fiaddl (bad) (bad) (bad) decl (bad) mov or (bad) in xor or in lock js xor cs stc hlt push cld (bad) push cmp jmp xchg xorb clc out inc imul loop push jnp and (bad) (bad) call jg test adc jp mov iret mov lret mov repnz (bad) (bad) fnop (bad) mov lods push cwtl mov inc test cld mov jnp sub (bad) (bad) push stos lods loope push pop andb push and ret xchg and imul stos aas test (bad) (bad) lcall js aam lods cmp repz lret fstpl and dec mov jle xor daa push (bad) (bad) (bad) (bad) out or pop push repz lcall in loope pop ror fdivrp (bad) (bad) (bad) sti or ficompl gs sar push shrl (bad) adc add jb repz xlat mov std aad pop scas dec jle jge imul pop push push ljmp mov ljmp decb loope loop cmp fstpt pop push (bad) bnd aaa sub shrb jg icebp jmp xchg mov fmuls (bad) (bad) (bad) call shl dec adc cmp int popa fsqrt mov lods cmpsl pusha push add (bad) (bad) (bad) jmp or fcmovnbe xor xor inc pop (bad) pop aad mov fisttp (bad) (bad) inc ljmp outsb sub jge sbb insb push dec data16 insl addr16 dec in lcall (bad) jns mul cs test xor xchg outsl lret in adc dec xchg (bad) jmp cmpsb (bad) mov push sbb cmp pop decl jg jne xor loope nop add fild movb aaa mov sub jnp lahf fisttpl jb daa or cwtl out jno iret pop rcrb fidivr jnp cltd mov js fbstp das fcomps ror mov mov mov movsl xchg hlt (bad) (bad) jmp aas call push mov bound push ret lret jle xchg (bad) (bad) fist into pop mov iret and stc addr16 sbb lods mov popf call cld pop inc xor add add ljmp add sbb cmpl mov andb leave inc (bad) (bad) (bad) decl inc dec xchg jns jb push test cs push jns adc pusha scas xchg andl cmp push (bad) (bad) mov hlt xchg inc std rorb cwtl push mov pop (bad) ss xor sbb fld (bad) (bad) (bad) incl cmc mov clc adc mov ss fwait cmp sbb push out (bad) xchg jo rcr in and mov (bad) (bad) mov lahf jno lock lret stc lds push outsb xor in out cs ret lret mov dec (bad) push std ja jbe push int3 adc mov roll inc dec jne xchg dec fstpt (bad) incl imul xor test add jae sub jb pop (bad) icebp and fcomi (bad) (bad) (bad) sbb cwtl aad leave jmp into leave push cmp call (bad) (bad) jg mov jbe hlt jb shl mov xchg dec in xor cmp sarb (bad) decl xchg mov sub sahf xor mov into dec enter fwait jge sbb (bad) (bad) jg dec push shr xor mov xchg dec sbb xchg add negl xchg mov jo mov add (bad) lret in sbb ret movsl sbb pop lock pushl popf mov cmp inc add xor rcrl (bad) (bad) push xor imulb xchg call mov enter dec mov ficom ljmp mov xchg jmp sub shll loop dec push daa in (bad) (bad) ljmp add inc cmp icebp xchg mov test pop mov cwtl jbe (bad) (bad) decl dec rclb push ret cmpsb pushf mov cmpsb and in cli pop fcoml ja jno xchg sbb (bad) jg (bad) jle push sub xchg (bad) pop shl inc add sub mov mov mov pusha sarl fiaddl (bad) lcall push scas push call aad lds outsl ss sti adc outsb addr16 cmc movsbl mov pop divl rcrb iret pushf ds aad fildl pop arpl xchg pop xlat int3 out cmp (bad) lea push (bad) (bad) ljmp cmpl jo and and mov jbe jnp pop fdivrs (bad) (bad) pushl sbb popa mov insb lods push fnsave das sbb loope das xlat (bad) xor (bad) (bad) ljmp lret jbe fnstsw cmp inc xchg in in mov xor cmp xchg pop ret clc (bad) (bad) das ret mov mov out xor pop fsubr mov ficom loopne inc inc inc mov enter decl ret out lahf int3 and (bad) or inc repnz lret push mov cmc push jno jmp decl (bad) cld jl cld cmp fisttpll imul mov (bad) call in (bad) cmp xchg fwait adc or mov mov dec sub mov stos out add or outsl je sub or (bad) (bad) decl jb and mov sbb push push jl jnp pop cli les (bad) (bad) dec ret or cmc es mov andl (bad) daa dec inc in lahf jl test (bad) pushl cli fs mov repnz xchg jne adc dec lock push cmp add jmp pop cltd (bad) hlt jnp or popf inc jmp jns in pop xchg ret (bad) (bad) call pop sbb movsb or fist in xor pop loop stos xchg sub (bad) call insl add hlt test mov mov popa fcmovne repz mov push jae scas clc dec insb (bad) rcl mov and and movsl sub jp je gs (bad) (bad) (bad) ljmp inc sub mov adc mov mov inc (bad) data16 sti fimull clc (bad) call fmull jle and inc out mov (bad) clc sar and lds aad cmp or (bad) lcall lahf mov nop outsl repz xchg dec (bad) loopne push inc inc sbb inc mov (bad) (bad) lcall in popa (bad) mov mov (bad) into out shr mov hlt movsl mull mov subl decl inc mov cmc je fcomi pop neg xor sbb mov pop adc (bad) (bad) (bad) ljmp push dec in repz xor mov ret fld aas cli sub enter ss cld (bad) pushl xchg (bad) sbb inc hlt xor and mov (bad) popf sar ljmp push lret mov sahf inc leave inc arpl (bad) (bad) decl imul mov push and aas mov sub sub lret cmp outsl sub outsw clc xchg push js sub cmpsb lea mov cmp ja mov gs lcall fildll pop in sub cmp test push adc or inc ja (bad) (bad) (bad) push push out addr16 scas mov mov fistpl pop shll adc mov es (bad) (bad) decl jmp int3 stc and jmp mov mov out cmp (bad) (bad) mov jb rorl test mov inc test xchg push xor jle cmpsl mov (bad) (bad) (bad) (bad) in jle leave push (bad) pop jg aam cli sub jnp push outsl mov dec pushf pop pop pop out cld sbb mov (bad) mov inc mov adc iret (bad) mov mov xchg daa xor xor (bad) mov pop hlt dec out lods mov int3 add or mov pop push (bad) jno into (bad) (bad) (bad) incl pop int jbe xchg sti and add mov cmp (bad) out aad leave (bad) lcall (bad) sub dec into jae sbb movsl lcall data16 lods pop add (bad) (bad) pushl or imul out inc pop decb mov (bad) push lret jp (bad) (bad) (bad) push mov out xchg jae pop stos mov test in sub xchg aad xchg das lahf (bad) (bad) (bad) (bad) pushl cmp arpl jae icebp mov bound push std rclb mov mov jecxz (bad) (bad) (bad) call pop out pop in sub and push mov mov mov fsubr xchg aaa cld mov int pop repz movsb push jnp in popa push (bad) leave (bad) pushl lahf mov mov sbb jg and mov stos lock iret bound and test ljmp movsl sbb js adc icebp cmp rorb sub push ss popa shrl loop mov outsl daa pop outsl jl (bad) (bad) (bad) lcall insl cs mov das cli pop js push mov dec aad cwtl mov ret pop pop mov (bad) (bad) mov pop pop or (bad) repnz xchg push sbb out lds rcrb clc (bad) dec ficomp iret and cs imul fisttp cs pop call xchg (bad) (bad) (bad) (bad) in cmc js mov mov loope mov mov xchg cmp push stos or (bad) fsubs mov pusha mov pop repz jo push out insl xor loopne std cmp sub mov (bad) mov out jecxz xchg in std pushf push movsl mov (bad) lret and cmpsl (bad) (bad) (bad) call gs loop adc lcall and push fist (bad) stc ds (bad) ljmp aas cltd jp aaa fbstp addr16 jo dec xor and adcl (bad) push fdivp aad ja test pop dec mov mov (bad) loop decl (bad) insb mov adc repz fimull (bad) in xor jnp es mov push sarl mov sbb sbb sar (bad) ljmp ficomp addl sbb cmp sub stos fisubr pop push (bad) (bad) (bad) call add (bad) mov (bad) xchg mov loope (bad) std je (bad) (bad) (bad) incl or pop cmp cli mov xchg mov lahf adc (bad) sub (bad) (bad) (bad) (bad) fsubrp mov loope (bad) cmc nop push mov or pop stc xor mov data16 push (bad) jmp scas outsl push aaa mov fisubr mov mov sbb (bad) (bad) call cmpsl dec mov fisubr cmp push push sub cmpsl mov cmc fcoms cli (bad) (bad) jp lods aas pop cmp das xchg popaw dec add jae and lods cmpsb nop hlt (bad) decl inc or sub fnop dec hlt xchg (bad) ljmp enter (bad) fisub sahf push mov jg and (bad) (bad) (bad) (bad) mov mov fnstsw rcr or cwtl jge enter adc ja addr16 loopne outsb cld mov dec idivb mov (bad) cli cmp lock xchg add cmp mov xchg or xchg inc add insl jecxz pop aaa (bad) (bad) (bad) inc and fdiv mov ja inc push jl,pn lock jecxz out pusha pop adc add (bad) decl (bad) mov sub push in hlt cmp cmp add xchg (bad) (bad) (bad) pushl add sub adc pop iret sub std sub jns and sub push push stc jecxz adc or in add (bad) jp jg add mov inc cmp pop jle push or lock push pop or int3 (bad) (bad) (bad) decl or les dec (bad) fxtract or mov rorb mov mov (bad) (bad) (bad) (bad) call in fcoml adc jbe lcall dec inc (bad) lret mov test (bad) (bad) pushl es xchg addl xchg adc jnp push mov (bad) mov pop (bad) xor (bad) add aad test xor bound aas jno (bad) (bad) mov (bad) xorl fidivrl mov mov adc mov jmp lds in jle outsl rcl inc and ret cmp mov (bad) (bad) jmp inc mov fs ds mov cmc cmp into cmp cmpsb cmp (bad) (bad) (bad) call sub dec rol mov pop nop cmp pop loopne pop sub pop pusha add push (bad) (bad) (bad) decl push shr movl push loop cmp lea les cmp (bad) (bad) enter push scas pop or icebp xchg mov mov mov jae (bad) sbb (bad) (bad) pushl rcrl dec outsb jecxz out dec inc dec ds dec outsl pop in dec inc sahf in subl cmp and lret pusha or push jg dec addps mov in dec and add call movl (bad) insl cmp (bad) and sbb sub mov (bad) fsub roll jecxz (bad) (bad) (bad) jns sbb fs shr movsb sbb imul or mov (bad) (bad) (bad) (bad) ljmp jle jnp (bad) rorl test sbb cmp jg icebp (bad) jg decl lock in enter call js (bad) ja push cmp (bad) (bad) jmp cmp (bad) sbb sbb or add dec icebp (bad) mov fsts cwtl pop (bad) (bad) cmp push popf and fstl ret push out mov mov ret (bad) (bad) jge in pop pop leave jno add aad inc test xor pop sbb cmpsb or cli aaa gs nop sbb js cld cli popa pop frstor lock (bad) (bad) (bad) ljmp outsb pop xchg aaa ror pop fdivrl daa std ret idivb into jl bnd jmp icebp push cld int3 subl ds fldt repnz push pop pop jle std (bad) incl push neg or cltd popa (bad) or mov jb (bad) (bad) lcall push ljmp or sub adc mov pop les hlt mov mov mov aaa xchg xor hlt (bad) (bad) (bad) jg lds daa arpl popf addr16 xchg dec clc adc xchg hlt test std (bad) (bad) pushl ss leave lret aaa hlt jno add cmc cmpsl out fisttp mov and cs xchg dec dec sub inc push pop mov shrb mov adc (bad) mov pop and pop mov rclb loopne fcmovu mulb test jmp inc icebp xchg and sbb sub ja ja (bad) (bad) call out data16 sub lods push lret mov mov inc pop jg cmp (bad) negl in mov fstpt imul shlb mov (bad) pop mov or xchg data16 stos fisubl cmpsl sbb (bad) (bad) ljmp sub cli xor les xor xchg sbb test (bad) (bad) mov pop test jl sub mov mov (bad) call push jge jle mov divl cs lahf ljmp int3 mov or fdivs aam test icebp cmp (bad) incl mov pop insl in mov inc loope (bad) jo call cmp jne cltd mov or (bad) mov push mov mov mov sbb popa test loope pop ljmp into pop aas out mov jb negb xchg dec mov pop and dec xchg lock (bad) incl mov test inc xchg divl jge add mov (bad) jg cld jecxz (bad) stc mov test mov repnz cwtl add (bad) jmp lcall pop xchg dec dec mov inc jmp jns aas addr16 call inc rcrb cmp lods (bad) or adc mov fcomps and xor xor jmp aas rcll decl std xchg inc iret or pop (bad) pop mov cwtl and jmp mov xor pop jb adc ja scas mov mov jne sar pop (bad) stc inc fmul loopne xlat rol push mov sub adc (bad) (bad) lcall jl cmp pop ds repnz popf js mov (bad) (bad) (bad) lcall es int das pop mov cwtl xchg adc bsf int3 pusha jmp or bound int lret (bad) (bad) (bad) ljmp fidivr cmpsl jge stos inc mov add sub in (bad) out add mov ljmp in mov dec push fildll out outsl push dec or cli mov or jg mov and lret mov fnsave in fcomp dec jge fmull andl fnstenv cmp test into sbb jne stos jmp data16 (bad) (bad) incl lcall aaa xchg add fisubr add outsl sub ficomp (bad) pushl aas xor mov outsb popf jp sbb movsb inc xchg mov adc lds xor int lret pop fdivr (bad) (bad) incl inc mov outsb push in adc cmpsb jp adc and dec jmp (bad) mov adcl repnz sbb fnsave fwait cmp fdivrl push mov call jb mov outsb inc gs mov loope,pn add or mov incl pop adc (bad) xlat push fidiv add test pushf test and scas xor dec sub imul mov push pop (bad) incl dec sbb frstpm(287 and or xorl push int3 or into push pusha std mov call xchg lret cmp cmp cli imul or je (bad) mov or mov push sbb lods pushl cld incl or iret push dec pop pop (bad) std sub orl lret clc lcall test outsl ljmp sub (bad) (bad) ljmp fdiv and sub mov sub adc lock jmp xchg stc out into pop icebp scas loopne push out andl cmp je push cmp inc pop std (bad) decl jns rcr jb std stos mov in ss (bad) cmc out jmp (bad) (bad) (bad) call (bad) xchg enter push outsl scas mov adc push mov std push pop push (bad) (bad) (bad) in dec cltd cmpsl jp sahf leave xor (bad) je xor lahf xor inc pushf lahf mov ds incl jne (bad) lods std scas out inc pop mov jns shlb inc (bad) (bad) jmp xchg int mov push cmp sub cwtl sub ljmp (bad) (bad) decl movsb orl leave test (bad) push into inc mov adc (bad) ljmp lahf pop imul jp out jmp inc mov xor jmp gs (bad) (bad) incl mov popa ret addr16 push mov sbb ret fcoms imul (bad) lret sub outsl push js pop jl mov mov pop call (bad) jmp repz aam fbstp mov push je pop jle rcrb call xchg out out sub and popa xchg mov mov or mov rcll insb loopne or adc pop int or mov out inc mul (bad) (bad) (bad) inc stc lods adc xchg inc ljmp pop cmp aam out sbb mov mov (bad) (bad) incl cmp push xchg nop jp sub jne cmp push dec icebp sahf dec (bad) (bad) incl movsl fiaddl mov lahf ss xchg pop adc mov (bad) incl sti push int3 pop mov xchg xchg push mov into mov and sbb (bad) (bad) call xor dec push cmc push lret sub xor cmpsb decb mov xchg (bad) (bad) (bad) pushl xchg xchg cmp ret cmp aam ds (bad) sar leave lods xor xor hlt fildll mov sbb and xlat pop jbe pop (bad) (bad) (bad) (bad) push sahf cmp xlat outsb pusha mov or pop les cltd xor (bad) inc inc je mov cmp neg ds movsl mov arpl cltd jge aad mov aam imul jbe loopne push jle xchg cvtdq2ps mov mov pushf scas into in lock (bad) (bad) (bad) dec xchg jp cwtl ret and sub adc mov xor and in cli mov pop mov lcall dec jb adc fs es pushl push add lods jp ja jecxz xchg cmp (bad) pop out mov cli (bad) (bad) lcall push lea sbb out lods insl es xchg test mov jg fwait (bad) aaa add leave dec ss fistp (bad) das mov fcmovbe inc clc mov iret insl icebp adc jg jmp mov nop in push inc jbe mov sub cmp xor jmp in into aaa pop sti mov fnstsw into (bad) (bad) call lea sub mov es cwtl xchg mov mov pop pop add outsb jecxz pop mov jge push pop pusha jno lahf nop movsl addr16 stos (bad) cmp aam (bad) into and in sbb xlat ss (bad) (bad) (bad) (bad) mov je push mov fdivr push divl xor roll icebp cmc cs lods repnz pop xor xchg testl repnz xor dec and enter loopne sbb adc icebp (bad) jmp pop jns inc lea cmc decb sar (bad) (bad) jmp mov imul mov mov xchg shll mov fistl fstl fst fdivrp (bad) (bad) jmp mov les push pop mov dec repz fistpll xor out arpl xchg (bad) je (bad) (bad) ljmp rcrl outsb arpl adc aam js fldcw lock into test (bad) (bad) (bad) (bad) in inc fiaddl movsl aaa clc imul std sbb and mov sub in mov lcall insl jae push std lahf fadd sbb test fnstsw mov (bad) (bad) (bad) (bad) decl cmp idivl adc push pop jecxz dec clc push imul pusha ss sbb dec or pop (bad) test push mov shl mov ss (bad) cmp pop add mov ljmp daa (bad) jmp add xor xor push inc sbb jae push aas mov (bad) (bad) ficompl sbb jbe inc cwtl pop and push xchg (bad) sar (bad) (bad) (bad) iret inc mov jns aas scas xor rcl mov cmpsb cmp (bad) (bad) jg mov push jns cmp inc adc jl data16 bound lret cmp scas cmp (bad) lcall jbe jnp in aaa push pop xor sbb sbb test in xor dec clc (bad) (bad) jmp cmc adc fbstp lds dec mov cmp js fcmovnbe xchg sbb cmp inc add mov sar (bad) call daa mov xlat jnp fstpl mov fbstp cmc pop push sub in mov repnz or aaa mov in movsb ja (bad) (bad) mov push adc outsl and arpl ljmp pushl loope (bad) adc or jbe sbb call push popf aas (bad) imull decl pop inc out (bad) sbb adc or aad mov mov and adc (bad) (bad) lcall in inc hlt inc mov lea (bad) stc mov push jecxz lcall out (bad) (bad) ljmp sub xchg ret jae (bad) (bad) push jle lds (bad) repnz rolb ja sub out cld (bad) incl addl jbe adc int mov (bad) push jge sbb (bad) (bad) lcall cmp jbe ficom push jb (bad) mov mov sub in lahf (bad) out cli (bad) ficomp pop push mov mov inc jl popf jge loopne (bad) (bad) (bad) lcall xchg inc pop imul cmc jmp xchg test mov scas cmp jmp paddb ljmp and add push xor sub sahf (bad) insl (bad) lret sbb jae xchg or (bad) ljmp arpl pop outsl jl (bad) cld mov sbb sbb aas push fdivrs lock ljmp sbb cmp fstpl pop jb (bad) repnz pop push mov popa std (bad) (bad) incl push xor or cwtl cmpsl lock test push jno int3 inc pop (bad) (bad) pushl (bad) in jg js add or inc std (bad) dec inc fstpl or pop adc (bad) fist aam loop sbb ja sahf scas mov das (bad) (bad) (bad) dec or sbb sbb jle bound in test out or mov stos mov idiv cmp sarl lret rcl sbb pop clc call gs (bad) ljmp pop xor shlb cmp and fidivl pop in outsl adc ja loop addr16 out xlat lock hlt lds (bad) in (bad) cmp lcall push (bad) mov outsb cmp mov mov fstpl add pop aad aaa mov lret jae les (bad) fimull ret (bad) (bad) lcall scas stc xchg mov inc pop iret pop addr16 fcoml je cmpsl sti jb and xor lcall loopne insl rclb sbb bound sub and aam (bad) (bad) (bad) dec imul dec adc xchg aas xchg repz push (bad) xchg lret mov iret mov into out pop mov and mov pop pop xchg iret (bad) cmc int shrb adc push jmp ljmp ja push or mov push cmp repnz mov xchg dec icebp adc (bad) pushl inc cmp add push jno gs or lds (bad) ljmp inc jp sti in icebp test fadds dec inc call (bad) (bad) ljmp jo jnp rclb daa inc cmpsb dec into cwtl sbb ret adc pop cmp lock jmp ja inc test push mov out (bad) (bad) decl jns jp movsl loopne (bad) lock vpshufhw scas pop sar ljmp mov jle push pop fcoml sbbl push xor xor stos inc cli jg sub mov xor iret aaa addl (bad) fldl sarl std test js and xchg pop ss ljmp (bad) call mov outsl loopne cltd pusha rcr mov daa rorl shrl mov pop icebp (bad) pushl xor outsl bound hlt xchg push cmpsl push pushf mov (bad) cld cmp call in call in test popa inc cmpsl cmc push push pop lock fdivl inc in out daa adc xchg cwtl daa data16 pop imul stos jl imul mov sti dec xlat in test xchg xor sbb (bad) call lods mov pop ds stos mov mov jl dec enter mov or call les lods xor rclb dec divl sbb call or adc mov xor inc xchg js or add jno out clc (bad) pushl mov idivl lods les cmpsl fdivs push mov sbb (bad) (bad) (bad) dec cmp int3 xchg addr16 jae add out mov xchg mov push add (bad) xsaveopt add shl or dec icebp (bad) (bad) mov mov je rcrl into mov jnp out jmp mov int3 aas sbb (bad) (bad) fisttpl push outsl dec aaa repnz clc fdivrp cmc fstpl jge xor inc aas lds add (bad) (bad) jmp gs mov and sub mov jmp out (bad) sbb (bad) jg pop stc dec lds inc inc cli testb inc je and call push fstpt andl movsl fstpl and sbb xor xchg jl (bad) outsl pop imull (bad) ljmp inc outsb imul addr16 scas mov roll lock (bad) call xor mov mull les push fist xchg fnstsw test jns pop pop out (bad) sub pop icebp call jl xor mov icebp clc xchg (bad) jb lret es (bad) (bad) lcall out aam shll sub jnp pop and (bad) sub popa add push mov es hlt pushf mov cmp sti mov push fwait (bad) (bad) (bad) (bad) fcomip (bad) mov cld insl jnp cli rcl lock sti xlat pop out (bad) fsubr clc (bad) push cli add daa test js push fild (bad) shr and out (bad) ljmp shrb mov cmp add jecxz rorl add xor hlt mov sbb std idivl sti push out out ja or add jo xlat mov pop iret or jg (bad) (bad) jmp jb aam out jb cmp jnp repz fs clc push ret (bad) dec insb sti aaa into dec fcoms add outsl or mov repz mov negb movsl jne jb (bad) (bad) (bad) lcall cmc cmp cmp mov iret bound jecxz aaa out mov mov insb cmp inc loop pop adc add enter inc mov pop data16 pop mov xchg mov into dec rclb fcmovne mov bound cmpsb add pop add fldz sbb fsubr pop cmp mov (bad) ljmp xor scas push lcall insb imul lcall ljmp andl dec mov adc sarb mov mov (bad) (bad) (bad) (bad) fldt mov js inc test aaa or lds icebp push jne ljmp mov cmp adc test jno sub mov sti jne imul mov push mov aaa push sbb sbb mov into vrsqrt28sd in jns lcall loope (bad) (bad) (bad) inc push pop lcall push insl or fstl ds cmp push (bad) ja (bad) (bad) incl jb mov cmpsl pop repz leave fcmovb lods jns mov adc out dec mov cli cmp push mov xchg mov pushl dec hlt inc sti pop pushf ss leave jmp push in pop fdivrp data16 out lahf pusha sti and repnz aad cs or lcall ret fisubrl xchg addb repnz xor mov sbb jne sbb jmp mov pop pop mov sti or icebp cli into cmpsl daa mov test jg pushl lcall sbb jo jg mov pop imul inc mov xor fistpl jle idiv mov mov rolb cld (bad) dec stc jo fisttp jmp or sbb jg ljmp in jo mov stos jp les dec lds xchg (bad) (bad) incl adc jne cwtl xor mulb dec mov mov cld cmp lock sahf fdivrl (bad) (bad) (bad) jmp sub fstpt mov cwtl (bad) (bad) pop daa cmp bound (bad) (bad) decl and xor scas jmp pop pop scas cmp pop jp pusha push jbe jns cmp jle xor cmpsb cld mov in mov inc in int3 rsm xchg xchg rcrb aad (bad) (bad) (bad) mov jg negb pusha dec gs test xor push push or sub gs adc (bad) (bad) decl sub adc bound inc mov xchg push and and shlb sub push xchg (bad) ljmp mov dec scas jp rorl cmp mov xor cld mov (bad) std sarl clc cmp sub pop jnp mov (bad) (bad) call pop addr16 add arpl fsubrs in cmc xchg push fstpl lds shrl (bad) jmp mov jg or cmp mov movsb (bad) lock mov (bad) (bad) (bad) mov jp outsl es fadd outsb repnz das outsl cmp lahf nop mov rep repz (bad) (bad) dec outsl outsb outsb jns repz cli fildl das mov mov ljmp mov incl jg or lods mov outsb sbb sti ds (bad) (bad) lcall int loop sbb ja xor jmp jne pop icebp (bad) mov dec push lds push ds push push ja lret scas aam gs popa lcall push leave mov push (bad) (bad) mov les int (bad) aad int3 mov add fstps out (bad) (bad) (bad) jmp mov dec das ss ljmp js jno and repnz and jmp (bad) (bad) (bad) out and and xchg sub testb stos jmp nop (bad) (bad) mov pop ret mov in leave dec ds ficom push (bad) decl xchg lods mov fsubl std jb out mov xchg scas scas frstor clc sarb (bad) (bad) ljmp inc insl aam xchg (bad) fisttpll add xchg imul test jecxz xlat pop cmp fdivl cmc push js pop dec or dec xlat xchg repz cmp push mov mov out pop dec push mov frstor dec pop push xlat dec jnp lcall sub jns negl mov adc adc jb in in xchg (bad) (bad) jmp in mov mov cltd pop dec mov ja jg mov outsl aas test imul int cwtl (bad) (bad) (bad) lcall testb mov pop jle cli bound sub (bad) sarb cmp ret rclb xor sub scas mov scas movsl outsl mov incl cmpsb popa push cs mov and mov (bad) (bad) (bad) (bad) ljmp adc (bad) or repnz pop popf mov (bad) (bad) (bad) incl xor mov loope sbb imul aad jge cmp sti je xchg (bad) (bad) ljmp mov mov xor inc rcr div mov cmp (bad) jg ljmp and mov stos dec mov or or call cmc (bad) (bad) fldt outsl in (bad) xor les adc inc pop xchg jae test mov (bad) ljmp (bad) in mov int3 pop push inc jl cmc pop xrelease cmpsl leave ret loop (bad) dec pop lcall xchg sbb xor out mov cmp (bad) mov insl sub unpcklps arpl sbb pop sbb int lcall sti cmpsb hlt xchg xor push aam sbb (bad) fst dec mov movsb jns loop (bad) fbld push cmc (bad) repnz jae (bad) xchg icebp sbb fwait jmp xchg fwait das cli call mov mov mov test (bad) (bad) ljmp hlt mov cwtl outsl test jecxz orl (bad) (bad) (bad) decl fpatan jle sub fwait insb cmp std mov ss jne mov jp lcall ljmp movsb mov push js std (bad) (bad) mov (bad) pop ret shll out cmp sub (bad) (bad) (bad) (bad) mov xchg std je pop fistpll inc decb fadd scas cs (bad) cli mov cmpsl pushf (bad) (bad) (bad) decl inc imul cwtl js pop call (bad) and out popf jne fnstcw cmp mov mov push xchg movd sbb outsb insl add (bad) (bad) incl (bad) repnz xchg in mov ficoml mov lahf bound lahf aaa cmpsb sub dec push jle mov lret ret ds mov cmp mov loopne data16 (bad) pusha jb lock mov test (bad) out cwtl jb,pt fisub repz mov (bad) incl repz sbb (bad) push cs xor (bad) jmp cmc mov call pop pop addr16 dec sbb cld inc fbld mov outsb cmc dec int pop push (bad) (bad) (bad) lcall dec ret lret cmp incl sti push add jbe popa nop ret dec mov scas notl mov add (bad) mov mov adc fsub outsl repnz fsts pop pop fdivr add ljmp push dec int3 mov int fcomps movl aam aas jmp push popf notl and addr16 in dec (bad) jmp pop mov xor in scas sahf (bad) lods inc pusha xor (bad) (bad) (bad) incl sub inc hlt into cld jnp lods out sbb pushf ret jmp fcmovnu push bound outsb flds xchg xchg mul mov mov inc (bad) (bad) (bad) call cmpsl xchg mov mov stos pop mov sbb cli test ljmp push std jmp jecxz lret out cmp es hlt repz dec sbb mov mov scas push in xor jb,pn (bad) jne outsb ss cld (bad) (bad) (bad) cmp outsb test dec (bad) popa push sbb mov jecxz lods fdivrl (bad) (bad) pushl pop leave push cmc jnp jg adc pop mov call lret sarl icebp (bad) sar push loope xlat push push sub (bad) jmp idiv (bad) or lcall jmp dec mov jecxz mov cs or into cmpsl outsb jnp cmc ret mov outsl (bad) jg (bad) ljmp push mov lcall fdivl mov sbb xchg cmpsb popf cld ljmp icebp int cli mov push mov jl,pt pop (bad) jg decl das jbe jle mov xchg xchg mov mov data16 (bad) (bad) (bad) (bad) (bad) mov add cli aad in push mov mov pop dec es cli out clc lahf vmread out pop daa into out nop sbb incl pop lcall hlt push mov mov in (bad) (bad) (bad) (bad) call test lahf cld sti shlb jmp outsl fidivr out fdivl cld (bad) ljmp aas add push imul or mov jns (bad) (bad) (bad) call cmc jae jg lods test xchg decl in or imul sbb ret (bad) (bad) mov loopne in das (bad) mov lcall jle mov fisttp mov (bad) inc mov inc adc inc mov rcll xlat cs (bad) (bad) (bad) call push and sub outsl gs push dec lods pop cli cmpsb mov loope (bad) (bad) (bad) call orb jmp push scas aaa aas mov push sub int3 or clc incb std push xor inc push lahf cmp xor push and loopne cmpsl int3 pop push xor mov jne (bad) call dec add inc mov cmp cwtl cmp lret xor jmp mov pop (bad) mov in jnp jbe gs aaa paddw (bad) mov pop (bad) lods pop cltd pop mov jle push xlat add or (bad) jmp dec xchg fistpl inc inc imul pop clc repnz xor (bad) (bad) jg add mov das in sbb (bad) lods aam cmpsb dec testb inc aaa nop mov cmp push jg addl xlat pop movsb xorl (bad) (bad) inc xchg fcoms enter ds cmp ljmp (bad) repnz mov dec inc (bad) (bad) (bad) (bad) std push pop loop fstl mov inc mov push (bad) mov fidivr mov pop mov mov pusha aad sti je roll repz sbb lods (bad) (bad) (bad) incl aas xor push push xchg popa (bad) mov cltd aaa push cmp enter add push (bad) std sub push es (bad) or popf jns sbb ds push ss je cs inc (bad) (bad) mov mov das es adc fwait lea (bad) or (bad) movsb dec (bad) (bad) (bad) in fistp push mov push (bad) (bad) push out addr16 inc mov dec cmp (bad) incl lret sub mov mov mov or xchg pop std (bad) pushl add in lods xchg xor inc push pop mov outsb mov jecxz in repnz add in mov cltd iret and jo scas cld xor (bad) (bad) lcall mov push adc stc arpl sub push or xor inc cmp (bad) (bad) (bad) pushl sbb add into (bad) mov jo aas sahf fdivs xchg (bad) (bad) (bad) call lret push jno inc jae push (bad) icebp dec ret (bad) mov fmul push pusha sub (bad) (bad) (bad) stc std push imul jg pop mov aas inc mov sti xchg fbld scas push (bad) (bad) (bad) call int imul sub mov fnsave mov jbe add sbb pop push (bad) (bad) ja into rcrl fbld daa fwait sub test cmp in pop in xor push (bad) (bad) (bad) call xor jno,pn sub cmpsb int out cmp (bad) jecxz and iret jnp and (bad) lahf ljmp add adc xor and push outsl sbb scas (bad) (bad) (bad) jmp sahf sub (bad) popf dec cwtl scas mov or mov jl xor xchg sbb and or ret (bad) call dec and dec ret in cld cs and mov push insl test inc jae (bad) rcrb jne (bad) (bad) lcall push sub inc mov sbb push mov and jnp mov fdivrp mov lods inc ljmp sbb out ficom daa dec jae jl std mov dec mov ljmp loop (bad) (bad) (bad) incl leave push mov mov xchg cmp xchg jmp ljmp xchg imul (bad) (bad) (bad) (bad) mov iret daa add (bad) into push or xlat jmp adc (bad) sti hlt (bad) xlat jg push ljmp fdivl push xchg cmpsb (bad) xchg into or imul pop mov outsb or (bad) mov dec xchg mov (bad) pop push fldl pop sub xor (bad) (bad) mov jae sub pop or push adc adc testb es jmp jp push xchg jo dec (bad) decl mov dec fidivrl xchg jp or xor or mov mov xchg push fwait push adc mov fbstp adc into xlat clc (bad) (bad) in push pop imul xor shr add xchg lods cmp pop xchg out cmp (bad) ljmp add lods mov jge xor dec pop scas rcrb cs (bad) (bad) ljmp push or (bad) test ljmp seta popa ds jnp movsl gs (bad) ljmp les inc xlat hlt jns xor xor hlt ss cmp jl pop xor incl pop sti push (bad) mov pushf mov jb mov insb jmp push out sub call pop or mov mov (bad) repnz lods out dec les (bad) (bad) (bad) pushl ret arpl mov rcrl xlat aas jg imul mov incl dec sub push lods mov cmpsb inc push negl (bad) (bad) jmp xchg fadds mov mov mov cmp pop pop inc loopne jl iret or das sar adc push add or pop xor mov das les xor mov sbb je (bad) pop pop test in (bad) (bad) ljmp push push ja mov pop xchg addl push (bad) (bad) (bad) call adc loopne popa imul push fwait sub sahf sti iret xor frndint pmuludq ljmp (bad) cli hlt cltd mov dec mov inc dec xchg jecxz js sbb fs jo lret (bad) ljmp (bad) mov sub cmp push call sbb mov (bad) and lahf das clc (bad) call and mov add repz xchg sub mov mov jae adc (bad) (bad) pushl inc addr16 int fstpl repnz out sahf inc aas cmpl xchg (bad) mov aam (bad) (bad) push jecxz cmp lahf xor push pop out cmovg in dec adc dec lds lahf push das cld (bad) (bad) jmp (bad) xor adc add mov ds js jge decl ja adc ljmp fldl mov in mov mov fimull mov lods sbb aad lea xchg jns push mov movsl lock (bad) (bad) (bad) fisubrl xlat popa mov ja sbb pop aad addr16 stos inc sti cmc testb jge imulb (bad) cmpsb notb mov adc stos add bound scas pushl cmp cmp jmp in hlt adc (bad) (bad) jmp (bad) lea cmp sub mov and loop dec fist fdivrs dec (bad) (bad) (bad) pushl mov cltd xlat mov xchg mov cmpsl out xor mov out and dec mov (bad) jmp mov jmp lret scas movsb push loopne fidivr call pop cmpsl sub cmpsl and jmp dec fbld jbe out and push inc in scas adc (bad) incl popf lret int pop sub inc xchg ret jmp lret stos sar (bad) (bad) fsubs push adc and mov sbb mull and pop mov cld jl imul sub das mov dec std sub sub std jae xor pusha dec lea pushf mov (bad) call aas jbe xor push paddsb in popa sub clc out sub gs pushl psrlq pop jnp dec cmp rcrl iret repnz ja (bad) (bad) mov daa cld push jp mov cmp notl push (bad) cli xchg (bad) (bad) (bad) (bad) fsts test dec mov fstpt sub loop call pop out sbb lret (bad) (bad) jmp mov xchg sbb icebp dec mov xchg push dec outsl push out popf repz mov ljmp lods or iret push js or cmp inc cli cmpsb repz cmp aas jp and mov jae fimull bound push decl shrl mov pop inc jno insb xchg push test cmp inc add stc or mov mov xor (bad) (bad) fisttp push xor push push xor jno fidivr mov sub (bad) dec dec xchg (bad) repz push or cmc inc xor or sub mov incl jmp cmp lahf mov in sub lods int3 imulb jle sti add (bad) dec outsb cmp cmpsl (bad) lods mov sahf lock pop (bad) (bad) ljmp lahf inc push inc lods pop ljmp fildll out fwait push in (bad) (bad) (bad) (bad) mov mov add scas fdiv roll ja rcrl cmp or in (bad) (bad) incl add (bad) push pop outsb sbbl sbb pop and adc dec je (bad) mov lret clc sbb mov arpl jle aam jl dec (bad) (bad) (bad) call data16 in fs fwait in and cmp sub jnp (bad) (bad) cmp call imul add mov mov loop mov (bad) (bad) lcall insl ds pushf jnp mov loop adc clc js into std mov movsl (bad) (bad) (bad) ljmp ds xlat and lea mov rcr push lea aad js (bad) (bad) jmp xchg call (bad) jmp ret test pop lcall adc dec fmull (bad) (bad) call (bad) dec xor push jecxz push sbb dec push ficom scas int3 jg rcll cld fdivr (bad) (bad) pushl inc or loop lods out cmp jnp mov cld and out ja outsb loope mov jmp in in in incl fucomi push xlat sub (bad) (bad) lcall xchg sbb or outsl inc lcall incb mov inc sub pop lcall jb mov push mulb jne jp dec scas clc pop push sbb xor mov aam jmp jg mov popl aaa int dec fsubr xchg cwtl dec cmpsl inc sbb cmc push inc in xchg (bad) lret leave mov mov in cli mov cmp ret mov decl repz rcl fbld (bad) (bad) (bad) (bad) aas insb mov test xchg add jmp adc stc enter sbb (bad) (bad) incl xchg into lds jb out popf lock cmpsl xor mov sub sub decb stc mov gs or push (bad) (bad) (bad) call inc xor mov (bad) jae iret daa inc fsubrl roll adc lcall stos or push in cs mov in sti test lahf clc sbb mov xchg std mov aas and (bad) xor decl fild inc adc lock mov aaa call lds dec add lds mov sti ret xchg icebp jae xlat (bad) (bad) (bad) in enter into outsb cmp and jl pop cmpsl out rolb xchg insl (bad) pop cmp incl repnz repnz ficompl leave xchg adc decl xchg jnp jmp jno aas arpl (bad) mov mov fnop mov inc adc xor clc inc mov ffreep mov dec sahf jb xchg mov sub xor lock lahf xchg dec adc (bad) (bad) (bad) mov in sub cmpsb mov faddl xor nop add jns dec pop (bad) mov ja pop out loop jp mov xor dec xchg jns ret (bad) xor push lock incl lcall movsb push jle lods pusha cmpsb mov stc sub (bad) call mov sahf js pop lret les cld fsubrp clc aaa cmp dec les aad (bad) (bad) (bad) lcall dec rcrb push inc stos or xchg pop pop mov xlat xchg pop (bad) (bad) (bad) (bad) call int test (bad) pop sahf push adc inc push push leave (bad) mov mov jle sub ret pop sub inc mov and push fild cmpsb (bad) (bad) (bad) call jnp mov cltd mov mov jmp fisubr (bad) sbb ljmp lret rcrl sbb push in mov mov push xchg mov fnstenv sub ljmp popa and rorb scas stos es inc ja lcall jbe pop push jno adc mov movsl pop mov icebp xchg jmp in lods clc mov inc adc outsl orb (bad) ljmp mov mov cmp push in jnp (bad) (bad) (bad) push ret mov push cmpsb lahf adc lahf and push jns push enter pushf cmp (bad) (bad) jmp pop pop cmp xchg inc pushf aad jns pop not aad pop scas or popf or push cs loop loop mov (bad) jl daa fbstp aaa pop out mov push aam and mov (bad) (bad) in dec adc enter xchg or dec inc mov jg sub js xor jge dec imul mov cmc jp sub (bad) (bad) (bad) pushl fadds jecxz sbb jecxz in mov sahf jno stos and scas adc bound (bad) (bad) (bad) call shll (bad) xor sti scas mov ljmp and pop jne pop cmp (bad) (bad) (bad) dec jge and mov mov (bad) cwtl sub sti imul or (bad) mov push add lahf addr16 (bad) (bad) pushl fwait push inc stos les sbb fwait loope pushf jg push xchg into (bad) push sub frstor push mov (bad) (bad) decl rorl and loop adc loop cwtl adc sub icebp in mov (bad) (bad) push add cltd ret loope mov mov xor int jl jb xor dec ds daa stos cmp (bad) lcall fstpl std loopne mov aas stos sub out or repnz jmp mov lahf sbb push lods mov sahf cmp in push in xchg (bad) (bad) (bad) (bad) out inc push sti sbb xor rolb imul push mov addr16 and ljmp cmp push dec jbe in leave push aad bound lahf sub (bad) (bad) mov shl push mov push aam dec lahf fnop (bad) inc inc and xchg enter (bad) (bad) mov mov lret mov jmp lret jae daa sub dec push fildl (bad) (bad) (bad) (bad) jmp xchg pop cmpsl daa (bad) clc test das inc mov call xor and (bad) (bad) (bad) (bad) cmp cmp iret aas rcll cmp int3 mov (bad) jp mov xor (bad) (bad) in test in stc daa dec dec push mov loop sub inc enter (bad) pop into sub incl dec and mov or mov in and mov ds loop lcall xchg loop xlat (bad) (bad) cli cs mov (bad) (bad) lcall out cli xchg jp cs mov jo lahf dec fnstsw or fs jmp xor les xor fs xor and adc push ret (bad) mov sbb ret jg loope imul pop push jmp sub jmp cmp scas adc (bad) jne add mov sub xchg les add dec ficom xor xchg mov sbb adc ret mov repnz mov jge mov mov das out jns rorl sbb lcall adc xor (bad) sti movsl add imul (bad) (bad) mov sub mov mov stos rol test adc fucomi sti inc xchg aaa push (bad) jmp (bad) pop in push ds imul call lds nop cmp mov gs sbb pop push (bad) (bad) jmp cmp cmp mov dec xor bound dec pop mov popf sub (bad) (bad) call dec ss bound cmp shrl push icebp aaa and ljmp or movsl or popf cmpsb add jbe mov push and aas (bad) (bad) (bad) ljmp cmp lds fmul cmp into aaa add mov (bad) (bad) incl arpl mov push add addr16 push das sbb push inc sahf mov icebp aaa std jmp out aaa or add in cwtl popa testb test stc (bad) (bad) lcall (bad) movsl pop xchg (bad) mov sub mov pop ror fnstcw lret cmp push enter cmc inc push adc and out cli jl fidivl shrb cmp lock (bad) (bad) incl gs dec (bad) int pusha scas (bad) jecxz jo cmpsl and repz and js and cmp mov fucom in pop icebp jae adc pop out dec sub mov lcall mov mov mov (bad) (bad) jmp (bad) mov pusha movsw push (bad) out aas pop dec mov mov mov ja (bad) (bad) (bad) cmp hlt out fsubr mov xchg lock pop (bad) lret jg and pop jl cmp adc dec lea pop sub popf pop jl (bad) (bad) ljmp test lea mov mov and push fsubrs (bad) jmp sti pop pop mov inc inc lds mov jmp push je ljmp data16 (bad) (bad) ljmp and mov push mov sub and movsb lds mov push rol fnsetpm(287 and and (bad) lcall jo mov ret hlt (bad) mov andl mov (bad) (bad) ljmp adc adc lds hlt cld sub (bad) incl mov mov xchg icebp movsl push fidivrl adc popa mov (bad) (bad) (bad) cmp loope xchg into adc adc lods outsl (bad) mov lret cmpsb push (bad) lcall add mov cmp adc dec mov lahf push leave sarb das cli incl push sub rcrb push (bad) nop daa adc ret mov cmpsb pusha popa mov (bad) in ret addr16 out jecxz push shll icebp push push rorl (bad) ljmp and loop fiaddl jl lret (bad) (bad) (bad) ljmp mov xchg test mov leave mov inc lods inc mov lea loop fwait movsb cmp incl pop lahf push addl popa add cmpsl push jne repnz pop xor (bad) (bad) (bad) pushl mov push sahf jnp pop mov push jbe pusha push xor rclb mov out mov mov stos js out add fidivrl fdiv imul xchg xor mov pop sbb xlat mov sti pop dec sti imul (bad) (bad) (bad) jmp ret je add test lcall add sub add mov inc mov stos out add inc cld fdiv cltd scas dec push jl jl sti fbstp clc (bad) pushl cltd into jnp and mov dec push pop ljmp es jl xor nop lret dec push add gs xor dec fild (bad) (bad) xchg incl xor inc ss mov enter fs fcomip call leave lea stos ss lret mov sysenter fs and ret pushf cvtps2pi call stc fs pop addr16 mov addb (bad) incl inc mov mov ja (bad) adc xchg arpl (bad) call sbb pop dec (bad) xor sbb movsl xor push nop dec jno mov (bad) jmp inc pop out adc sarb lock das pop sbb push jge sub (bad) decl mov es out inc jbe lods push xor adcl shrl push (bad) (bad) (bad) ljmp sub sbb mov in or (bad) fistl lock (bad) (bad) (bad) dec pop jl or arpl popa xor movsb stos lock xor cmp adc (bad) ds sbb push repz adc stos pop jecxz outsb mov in pop (bad) (bad) (bad) pushl std xchg lods imull xchg imul call ds push adc mov movsl pop pop les outsl enter mov add or (bad) jl stos push pop pop jmp mov (bad) push std (bad) (bad) (bad) call fisttpll inc fisttp and cs lock movsl lods sti loop mov pop mov (bad) (bad) (bad) jg cmp pop stos sub (bad) out fisub mov insl push out dec jmp mov loop ljmp mov frstor mov mov jo sahf fcoml int3 xchg (bad) (bad) (bad) call mov (bad) cld adcb push add sbb lods test inc cmp (bad) (bad) (bad) call out in or push inc pushf rcrl pop je push adc (bad) (bad) push dec (bad) daa out leave push jl push cwtl pop push cmp mov push pop fnstenv (bad) (bad) (bad) incl int3 scas cmp and hlt mov repz xchg fistp pushf addl (bad) ja shrl cmp pop cmpsb in int3 xchg test icebp push (bad) (bad) (bad) call dec pop inc inc or mov pop dec cmp xor push mov (bad) (bad) mov mov or jp out pop jle or sub ljmp or std xchg loope push xchg xchg add add sar (bad) incl je inc xor mov clc ror test mov sbb insl mov je sahf out cld cmp (bad) out inc scas jnp fiadd jmp pop loopne insl ror push jecxz xor cld push daa lret stos scas mov dec mov xor fwait jp and imul lods (bad) (bad) (bad) (bad) call xchg cmp push ja sbb mov adc dec jne dec lods aad mov enter mov cli gs incb and sar (bad) jmp xchg dec in cmp adc or xchg cld cmpsl cmp incl sbb add (bad) (bad) (bad) jmp int add xlat jp lods cmpsl xchg addl sbb (bad) rolb ret ja mov xchg dec mov add cmpsb cmp sub mov cmp jl int push int3 aad jae mov (bad) ljmp lcall sahf imulb (bad) sbb or cs lcall (bad) xchg xchg mov cmpsb popl test loop adc pop stc push lock ljmp (bad) (bad) incl decl sahf xor or lcall (bad) incl (bad) call dec pusha sub jne or add add dec mov ret cmpsb test rolb (bad) (bad) ficom (bad) je pop sbb insl bnd clc stc mov negl sub movsb fs push or sbb jg (bad) lcall out mov hlt sbb mov pop cmpsb xchg lea stc lods xor jmp xchg (bad) (bad) (bad) (bad) cmp (bad) fwait cmc jne dec mov add push xlat cmp cmp repz lds sub mov insb push rcrb xchg cld jg les dec sti mov jmp mov outsl adc insb movsl pusha cmpsl sbb cwtl imul (bad) lahf push repnz movsb out xor pop lock jo or lret sbbl sub or cmp add (bad) cld sbb sub mov push xchg f2xm1 lods loopne mulb push stos push xor adc mov aas mov clc sbb sarb sub (bad) (bad) lcall das fcmovne push enter ret lods into add frstor scas test cmp push (bad) incl icebp jl inc push adc insb or bound adc adcl jg jno dec aam shrl pop sbb gs fs dec push jo push (bad) (bad) (bad) ljmp adc jne lahf mov sub inc cmp mov (bad) pop xchg inc int3 enter (bad) (bad) (bad) inc sar xchg and sub inc xchg and scas (bad) out (bad) jae pop ja pop aaa sbb (bad) incl dec loope arpl and test rorl rclb in push mov stos sub pusha sbb hlt clc out fidivl les int loopne pushl fisubl and mov sbb (bad) (bad) decl xor and push popf mov addr16 mov or jg loope or pop xor add dec push push mov dec sahf xchg stos (bad) (bad) (bad) inc cmp push add (bad) mov stos mov imul shll in fcomps cmp mov (bad) (bad) decl inc push ret rcrb sbb pop dec sarl adc mov ljmp in inc call xchg inc jbe push mov icebp (bad) dec sahf xchg lret in cmp jmp (bad) (bad) mov std out lcall cld (bad) pop pop ljmp test cmp (bad) jmp in jle and outsl loopne jae test insb adc mov pop scas inc decl cmpsl lret push mov in andl aam mov mov incl sub sar lea stc mov (bad) (bad) mov ffree mov or pop mov jle mov add test ds sub in mov (bad) decl xchg xchg dec popf xchg mov mov pop push cmp mov (bad) (bad) (bad) pushl ljmp movsl cld adc lods pusha int3 mov jbe or insl popa clc (bad) out and sarb (bad) nop insb lea and push mov (bad) (bad) lcall arpl jo mov (bad) pop add mov mov xchg daa lcall inc jp xchg gs mov outsl push addr16 lock xacquire ja (bad) jg pop sbb je and popf add xchg mov insb jo test (bad) (bad) decl or fidiv imul mov xorb sahf adc incl xchg pop call pop cs dec pop shrb add sahf repz mov (bad) dec inc xchg mov in push add lods js (bad) (bad) (bad) decl (bad) inc cmpsl pusha xchg pop nop inc or push and push sub aaa in mov cli (bad) cld in sub movsl das insb lods or lods and decl adc lods cmp push js in adc adc loope (bad) dec jcxz cmp xchg jbe and jbe mov (bad) pop mov cmp (bad) (bad) mov pop dec mov mov inc jo sti or ja mov (bad) lcall into adc lock mov jno push imul and decl xor sub pop scas out iret and es push jmp (bad) (bad) lcall mov repnz adc fidivr shl lcall add inc add lcall fistl sub xchg add (bad) lcall aas mov bt popf pusha push lock jo cmp sarb (bad) jg xchg (bad) jg jbe pop test mov stos je add mov pop mov aaa (bad) (bad) (bad) (bad) aas lcall test jnp inc stos mov lret cmp jns out (bad) (bad) (bad) fildll lods add stos lds int3 es xchg leave dec cmc test hlt lret sbb flds (bad) (bad) (bad) incl ffreep out xchg mov jns adc out or int3 aas push or aas sbb addr16 mov pop ljmp das negb (bad) (bad) (bad) (bad) cmp dec (bad) mov pop (bad) lock pop dec test inc dec or call sahf movsb jp or mov mov into es mov dec jbe arpl rolb and ss fwait scas idivl stos (bad) (bad) pushl dec and mov mov cmp jb mov out adc xchg mov addr16 pusha ror lea inc push and cmp push pop (bad) (bad) (bad) lcall insl pusha pop xchg pop mov (bad) mov inc jg rcrb pop cli dec scas es sti add (bad) jns insb std (bad) (bad) ljmp inc insl in add dec jbe sbb mov cs xor jl decl call lahf pop mov aam cmp scas mov (bad) stc mov fsub (bad) mov repnz mov adc outsl sbbl out or (bad) (bad) (bad) jmp adc fcomp das push lds push mov rcrb mov mov (bad) incl push mov xchg ljmp and outsb add loopne adc fdivr (bad) (bad) jmp sub push rorb mov or out pop shlb repz and imul dec (bad) (bad) (bad) lcall and mov mov insl add inc aad or test (bad) (bad) jg or stos sbb push add dec insb push fimull mov cmc and xchg dec inc cmp add ss dec aaa cltd sub rcl mov mov add xor push scas movsb and out mov mov int sbb incl pushl mov pop hlt fldenv mov flds sub stc or (bad) decl add xor xlat loopne jecxz movsb sbb (bad) or xchg fmuls (bad) (bad) (bad) incl lahf push jle jae psubusw pop adc std stos stos stos xorl push mov scas (bad) (bad) jp xorb fnstsw or adc fs xlat fst in mov stos cmpsl clc (bad) (bad) mov or mov jg rcr mov (bad) push imul aam (bad) ljmp mov outsl pop add fsubr fcmovnu gs inc cltd and lea (bad) (bad) (bad) out inc mov add bound and aas (bad) (bad) rolb fisubrl (bad) (bad) (bad) call jmp test mov cmp push jl mov adc mov ficompl or (bad) (bad) incl ja ficompl in jnp adc negb mov jo loope sar (bad) jmp (bad) sti jle and mov mov das push imul (bad) mov mov cmp lods xchg out (bad) decl sbb rcrb mov mov mov mov (bad) mov clc neg xor add inc inc xchg jns jnp test fild mov or sub fistp dec dec cmp in inc push nop cli (bad) lcall sub add push shrl sbb adc pop push mov mov lods dec shrb push cmp cmp mov mov or mov and xchg jge lock mov int xor add mov ds pop es rolb addl push sbb (bad) incl dec aad fcoms add pop dec mov aaa push dec sti mov push mov test dec dec (bad) ss pop (bad) jl inc (bad) (bad) (bad) jg mov hlt pop and cmc and js or xchg jl push cmp dec or xor (bad) (bad) lcall mov fwait bound xchg cmp outsb inc ret jae push pop fs aad mov (bad) (bad) lcall sbb pop add fcmovu nop mul ljmp add outsl std jg cmc pop push mov xchg or out add aas pop decb loop pusha (bad) inc add or inc jmp mov data16 xor rcrb (bad) pushl jmp in test movnti mov mov (bad) (bad) (bad) lcall std xor sar das jnp push in shl (bad) (bad) mov dec sub (bad) lcall ds loopne (bad) hlt imul dec push xor ror xor leave xor sub dec mov xchg aam xor shr lods (bad) (bad) (bad) (bad) jg lods xor mov fucomip out js lcall push sub cmp jb fbstp push ja out pop jo in loop or (bad) decl arpl xchg repnz mov popf pop data16 dec mov push xor jmp mov rolb jb sub jmp push mov (bad) ja push addr16 clc shrb or jo jp lret (bad) (bad) (bad) ljmp push dec popa lcall mov push adc test in sub xor (bad) (bad) (bad) mov push pop test sub add xor fsubs pusha out roll stos xor cld incl mov mov (bad) (bad) lcall push mov mov aas sub out cmc add sub outsl xlat mov (bad) mov sub pop inc or sub or fild loopne cmc dec xchg sub mov (bad) (bad) ljmp fwait call lret cmpsb xlat jmp jnp and (bad) jbe mov movsb mov (bad) (bad) (bad) (bad) fild xor inc jg jno or nop sbb mov push lock (bad) (bad) decl mov xchg bound in loope pushf test dec mov xchg in test (bad) (bad) fbld add pushf pop out adc iret loop aad mov (bad) mov adc xor (bad) push and daa mov pop outsl cli jo js gs lods add sbb jns mov sub (bad) lcall inc rol mov sti xchg in xor (bad) (bad) fildll or lods mov jne xor insl push lahf dec lret dec in fnsave push sub clc mov into outsl daa fstps in xor fwait jl add fcompl xor call lcall jp dec add mov pop pop movsl hlt (bad) lods cmp adc (bad) (bad) jmp push addl fsubl xchg aas jo pop lahf or inc mov (bad) (bad) mov fs fwait pop scas xor mov mov mov xchg inc or mov mov (bad) decl inc shl idivl imul out add mov mov xchg jne clc (bad) decl (bad) adc lret pop mov jb adc arpl test add sbb (bad) (bad) lcall pop push mov jnp loopne fwait xchg test fmull push cltd lods cmp sub mov (bad) (bad) push call inc out xchg add aam dec dec sarl push into iret pusha dec leave js jno adc (bad) (bad) ljmp cmp shrl test or outsb xor pushf outsb xchg cmp (bad) (bad) (bad) (bad) mov insl mov mov adc lods lds xchg push lret mov mov push popa cmp add cmpsl pop or or add sbb lcall loop add cltd sahf mov in mov mov dec gs hlt popa mov je dec xchg cmp add les outsl push cmp lahf xor (bad) (bad) ljmp in ficoml js push dec pop push stos cs mov or outsl insb mov scas test push (bad) (bad) (bad) jmp stos jmp push pop push icebp jns mov test adc mov push imul sub ret sbb add movsl push fimul sbb add mov jne out inc mov xchg out and sub pop and xchg inc mov mov sar (bad) lcall aad xchg je mov xchg sub push sub sub int3 scas sbb (bad) mov sbb testl xor ljmp (bad) (bad) (bad) decl add fistp cmc pop outsb xchg icebp bound aad cmp pop test lret sub push scas adc xor in outsb add lret (bad) (bad) dec (bad) les cmpsl and inc test push jae push add sub sarb jg and leave (bad) jge into out aaa (bad) (bad) (bad) decl fcoml adc in out jbe push popf enter aas cmc xor insb pusha and js sar (bad) (bad) (bad) popf dec dec and call ss outsb mov lea xor repz sub ja in add jmp jg inc xchg aaa push fstpl lods arpl push lock loope mov pushl inc xchg push xchg sahf loope call jnp mov adc outsl mov mov lcall lcall cmp adc out (bad) (bad) (bad) call or mov hlt add popa mov pop push xchg nop or (bad) (bad) (bad) lcall test xchg test in std mov push pop mov add xor jo (bad) (bad) (bad) cmp xor xor dec push pop out outsb push hlt cli inc cmp adc mov cmp fldcw daa (bad) push push (bad) xor shrb (bad) (bad) (bad) dec mov and dec cs jns cltd loop out iret sub jmp fs jg push add fstpt int3 add push mov leave fstpl (bad) (bad) incl mov add dec ss xchg xor xorb loope fs mov loopne cli (bad) incl dec fs add loop cmp outsl mov (bad) movsl cmp (bad) (bad) out jle inc sub mov loope ss dec adc daa mov fnstenv cmpsl mov (bad) (bad) ljmp add push add jge ret js xchg pusha call (bad) (bad) incl daa inc (bad) addr16 mov ret adc pop sbb mov mov jle jle or push or lret movsl mov (bad) (bad) pushl add sahf push cltd add sub and ret loope (bad) jns mov iret (bad) (bad) (bad) pushl mov mov pop fwait aad or mov or das pop or (bad) incl loopne jl sub mov sbb call ret dec add mov mov (bad) (bad) inc decb (bad) fildll std popf push jbe add addb or jae loope mov add lds add push repz push mov movb pop fdivrp (bad) (bad) jmp std (bad) repz dec fidivr mov inc pop inc xabort nop mov pop cli xchg lock bound cmp addl adc std adc in mov xor jg jmp gs enter (bad) pushl cmp jecxz jae jo xor pusha test xchg pop mov dec scas fdivrp pop mov fstl mov sub pop jo std jecxz incb jo and add std push std int add cmpsl lods stos rorb mov mov jg cmp sub nop leave pop subl pop cltd std clc dec (bad) (bad) fcomip sbb add out arpl cmp movsb in xchg jmp (bad) xor (bad) call push inc fs push adc rcrb push sarb inc dec and add icebp ljmp lods pop imul repz jecxz lds cmp aaa imul rclb add ret mov sub iret mov out ret call cli sbbb mov mov lcall stos andl xor fadd jo pusha jae jo jg lock (bad) ljmp mov sub outsb jo inc jno sbb adc pop pop add (bad) (bad) fist or and into sar fwait sbb fistpl xchg test (bad) call or into xchg enter icebp xlat or mov mov adc sbb das mov enter cmp xchg pop mov sahf aam pushf (bad) (bad) mov enter std cmc insb push or inc xor push or dec (bad) pop (bad) jg pushl cmp in mov in imul xchg push popa inc or loop shlb dec ret xchg mov test das inc mov xor mov pop jbe mov pushf xlat pop or outsb add hlt (bad) (bad) jp les push movsl dec insl push mov stc (bad) (bad) (bad) incl push es movsb mov xor inc in dec push nop inc xor mov das inc (bad) (bad) call fdivs cmp push jne scas or out and or (bad) mov int lret aas jge popa ja sub lods (bad) (bad) (bad) fbstp sub lret das popf sub mov push push pop add jo (bad) jg mov aaa aaa iret dec lahf scas ss scas or pop mov cmp not mov sbb addr16 clc xor arpl (bad) (bad) pushl sub and lods inc or push sti ljmp (bad) inc pop nop in sahf (bad) xor (bad) popf pusha xchg pusha jmp xor (bad) mov jo ljmp cltd sbb lret and inc icebp cld in outsl nop aad gs sub leave xchg ss dec decb mov lret cmp sub dec ss jbe mov xchg fnsave (bad) movsb shll (bad) (bad) mov dec ss out sbb setl repz xlat in movsb and lock dec outsl mov into mov cmpsl jne cmpsl test mov std cli (bad) decl cmp mov push popa ss ret sbb or xor decl adc push out inc add icebp cltd jp cmp test mov (bad) (bad) lcall xlat shll xor pop adc loopne mov mov int3 scas and mov cmp adc push or pop push imulb mov je jo pop jne incl jnp test cmp push pop in pop push cmp add pop (bad) (bad) (bad) (bad) call les (bad) push or push repnz sbb out mov cmp cmpsl cld (bad) ror and jg incl pop dec and repnz les lcall pop push cmp dec data16 inc pusha push jmp int3 inc enter sub (bad) pushl sub add mov lret (bad) jb mov (bad) call andb pop push xor dec mov fistpll insb call movsb dec fisttp hlt out pop sub cmpsb dec and pop mov mov enter pop cli xor xchg cmp aad incl push mov daa mov insl jae pop dec inc mov mov es (bad) in pushl cmp in out or and cmp or (bad) lock sub jmp jmp pop lret pop ss in inc cmp mov adc and (bad) (bad) (bad) dec mov sub jbe and sub (bad) mov mov (bad) lcall push repz pop loope pop fmulp ss inc and sti cmp fiadd add leave cmp add or arpl xchg jb stc push arpl daa fcmovu call call push das nop adc dec data16 mov sub andl out icebp push or jmp pop inc iret cmpsl sub and inc and out (bad) (bad) (bad) fucomip push inc roll imul test push (bad) je inc mov cs pushf push pushl xor add push adc clc lds (bad) (bad) ljmp ss xrelease bound and adc or jg (bad) mov add jnp sub xchg xor in test cmp dec scas cli (bad) (bad) mov sub fldcw sbb call push incb je js in sbb scas (bad) jo dec dec jo dec (bad) (bad) decl hlt push sti mov rorb test push popf mov ret jno (bad) (bad) mov inc stos sub push mov enter mov xlat dec jmp (bad) incl mov mov out or mov mov sbb jg (bad) decl ljmp leavew ret stos xchg xor sub and mov or mov gs fbld pop push push xchg pop and mov jecxz inc pop imul (bad) aad nop (bad) lret out es stc mov mov (bad) dec ffree lcall lcall jle add fcos aaa add data16 mov xchg imul dec and outsl cli (bad) ljmp jl gs insb aad insb mov inc cwtl dec lods outsb (bad) cmc mov leave in (bad) (bad) jmp push fwait jge jg pop jae stos mov insb dec jbe mov outsl (bad) mov adc mov jbe stos pop or xor fldl mov movsl lods mov mov inc xorl xchg aad pop lods test call dec mov leave les pop cltd push mov pop fdivr ljmp scas mov cmp sub cld arpl je dec push outsb dec in fdiv (bad) (bad) call hlt je add fisttpl pop dec xorb pop mov je or mov (bad) clc push sti out xor and jne (bad) (bad) pushl outsl out xchg (bad) scas outsb mov cwtl mov dec orb and mov int ficomp daa adc cmp add (bad) (bad) jl ja add xchg push lret mov add (bad) (bad) (bad) (bad) cmp fistpl jle test int (bad) pop hlt mov mov cmp stos jns lcall incl jb clc add xlat pop cwtl sbb adc (bad) sbb ret gs pop sub (bad) (bad) call sub sub or jmp test bound sar (bad) ljmp cld cmp xchg inc flds loope aaa lret inc add and fldcw decl out mov pushf test sbb inc repz adc (bad) decl dec dec stos aas fcomi andl fistp xor mov lods mov (bad) out clc decl sub roll xchg int mov mov hlt sbb cli dec or mov mov sub (bad) (bad) (bad) pushl hlt (bad) out xchg adc addr16 mov roll jbe test adc xchg popf cli (bad) incl jp enter add mov adc lret jp push test ljmp rcrb inc pop dec mov push ljmp mov add inc repz (bad) (bad) jmp test imul add fistpll ja scas fnop jbe jnp sahf push (bad) (bad) ljmp cmp insl adcl inc (bad) mov and (bad) aad dec pop fwait imul pushl insl outsb xchg mov insl roll add imul mov mov data16 out mov sbb mov mov fwait sbb pop jg mov add sbb fs out imul (bad) (bad) (bad) jns add dec jnp mov or cmpsb or mov decl push arpl inc in and (bad) mov xchg stos aaa insl fnstenv xchg imul iret pop mov decl insl mov lret mov push cmp addr16 pop icebp add add push mov in daa fdivr pushl xor or sub test xchg (bad) (bad) (bad) pushl jae int jbe mov insl xlat inc pop notl (bad) aam sbb shrb (bad) (bad) (bad) (bad) mov (bad) out sbb xchg repnz sbb outsl add ljmp aad sub lcall add jp pushf leave jg fldenv push loop pop adc (bad) push push mov paddb aas dec es xchg je pop sti jmp fimul pusha (bad) lcall popf enter loopne std fildll mov pusha lcall call testb in jge call sbb push add inc subps jnp (bad) (bad) (bad) (bad) mov (bad) das mov out jbe jae js mov jg mov fwait jnp jne or ljmp push mov ds push leave sub test popa adc (bad) lcall dec js popa mov lret dec xchg cli das cli int stos jo in fdivs cltd jno out jae fistpl cmpsb (bad) call sbb (bad) adc ror rorb test or (bad) dec ljmp lods mov popf add lretw mov add fs inc and call out clc pushl pop push inc inc xor adc sahf mov iret out jne ljmp jle mov cmpsb fnstenv (bad) (bad) cmp (bad) cmp inc dec mov gs lret (bad) jmp cmpsl gs xchg xchg out mov jo jl mov orl (bad) (bad) (bad) (bad) aas lret int3 and and sarl dec and test inc into adc pusha fwait shll (bad) (bad) (bad) in mov pop faddl push fiaddl (bad) cld mov fidivr aam aam inc jnp (bad) (bad) (bad) ljmp sbb hlt fldcw cmc outsb repnz xor in push movsb or aas and (bad) (bad) (bad) mov xor fs add cmp sbb push dec outsl jb (bad) aad aaa jge dec lret lret cmp aam push sbb mov add (bad) (bad) (bad) (bad) fcmovb mov scas fcomps mov sub iret mov test lret add and (bad) jmp push cmp lret jge clc js dec insb push mov enter pushf out (bad) (bad) (bad) js shr inc jo add call sti push loope cmp lcall (bad) fnstenv push lea push insl or stc and in sbb xchg out pop and incl (bad) fbld movsl fnstsw inc (bad) (bad) (bad) jg jns mov movsl ss mov int je test xchg or scas pop cld (bad) ljmp mov scas rorl push jbe stc or pop adc xor (bad) pushl stos jmp js xor les (bad) mov jmp push in scas (bad) cwtl (bad) (bad) sub cli ret cltd loopne (bad) (bad) decl aad xchg jb sub std dec int3 out cld xor pop mov lds clc (bad) (bad) inc (bad) (bad) jl mov icebp jecxz rorb je lods cmpsb negb clc (bad) lret jp call xchg cs push das sarl mov fsts mov and (bad) call dec icebp lock repz hlt sbb inc das fldcw (bad) add mov (bad) decl or sub data16 fsubl pushl scas gs sbb push and add cli push inc and ret and lock loopne push cmp outsl add fs (bad) (bad) out xchg fs out cltd push pushf je mov (bad) mov cli lods pop pusha cmp scas jnp inc mov les (bad) (bad) dec test sahf xor cmp jae xchg jecxz mov pop (bad) in (bad) pushl sub pop sub jg mov push dec scas xor push jecxz frstor (bad) (bad) (bad) (bad) js movsb inc out ret xchg cmp dec cmpsl mov inc push jg push fucomp cltd pmaxsw cli (bad) (bad) lcall jl mov push repz mov and ljmp add or cmpsb xor pop out cmpsl es cmpsl stos lcall adc lret (bad) push sub push pushf jns jp pop imul mov les push test ss (bad) (bad) (bad) (bad) (bad) jmp and xchg mov cmpsb dec enter lea lcall int (bad) call jmp mov add lds mov jg (bad) ljmp rcrl loop jp dec mov mov ds (bad) (bad) (bad) call and sub xchg mov lret out ficoml lods pop dec push leave mov (bad) (bad) (bad) (bad) cli (bad) enter sti xchg popf sub leave scas jge or shll add fisub (bad) ljmp pop int3 rcll stc pop insl lds ret and pop pop sub js (bad) (bad) jmp pop jo fisubr push cmpsb xorl lahf int3 dec inc adc enter (bad) (bad) call adc dec outsb pop in paddsb dec fdivrl xchg jae int mov lock (bad) (bad) decl pop (bad) or jnp jnp pop xchg pop xchg (bad) push rclb inc leave roll cld decb gs add mov pop aas arpl xchg or in jg dec add sbb mov adc pop xchg adc jmp mov mov adc sub pop xor nop pushl jo push test push dec in xchg mov lret scas mov (bad) leave mov jmp rcr ljmp negl in mov mov add (bad) (bad) jne shrb inc flds ljmp and pop (bad) leave clc cwtl sbb cltd andb pushf xchg out mov push cmpsl fmuls cli xor in add (bad) (bad) (bad) lcall jmp addr16 pop dec dec cmp jo pusha mull mov sub cmp rcr fstps bnd in (bad) inc add pop scas int3 ja into sub sub (bad) (bad) (bad) ljmp xor sub (bad) or xchg adc xchg ja jge into mov in or lcall mov mov in addr16 mov cmp popa out (bad) cmp ja jmp pop decl mov add mov aam fstpt (bad) mov mov add and psubb sbb (bad) (bad) lcall arpl xchg jg clc daa repz inc mov xorl fldenv push cs (bad) (bad) incl addl mov push pop sub xchg ljmp jg inc xchg jae,pt mov into pop (bad) pushf xchg jb lods push add (bad) jg decl push cmp and adc xchg xchg xchg in roll add and (bad) (bad) lcall addr16 add inc dec imul subb fs je test lods adc (bad) (bad) (bad) sti or adc out push ds out repz outsl pop shr cwtl jo (bad) (bad) (bad) ljmp insb fsubl test call cwtl fadds loopne and dec jecxz (bad) call loopne and je mov and mov cmp or (bad) (bad) (bad) jmp add mov fs aaa rclb add cmp pop call cmp push (bad) (bad) jg call xchg jno (bad) int add sbb mov pop xchg pop mov (bad) (bad) (bad) ljmp dec xchg and xorl mov push xor dec and mov rorb or push push adc cld daa inc push xchg (bad) (bad) (bad) jnp mov aad mov or jo and pusha add loop jno icebp push jmp (bad) (bad) incl mov sbb std aas push sub pop jmp pusha (bad) (bad) (bad) (bad) ljmp dec arpl jle fidivl and and and out (bad) push inc push inc add (bad) lcall jbe add pop cmc and xor and xor loopne dec dec (bad) jg decl icebp sub xchg sbbb (bad) cmp push pop push sbb inc pop dec push (bad) pushl in add mov cli movsl mov dec add fild ret loope add in test xor pop subb mov pop cmc lcall loope mov and push cs lahf sub jno sub (bad) lcall dec adcl testl loopne insl outsl lock xlat or scas jne fcoms (bad) (bad) (bad) decl rcrb sbb sub add stc or cltd movsl je fs lahf inc jmp cmp (bad) fxch jle pop xchg inc inc pop xor pminub nop push (bad) (bad) incl or out jg inc push inc push iret (bad) sub mov add (bad) decl or fwait leave mov insl imulb jnp dec fs push adc movsb push fcmovb dec (bad) cli sub scas cmpsb pop inc rcl daa jno mov sahf adc mov (bad) (bad) fidivrl in in push xor mov mov lea and and rcrl notb jae mov pusha (bad) sub mov js sar fs shl dec popf scas sub sbb push dec frstor push aas sbb lods lea add cmp xchg fwait jecxz mov cmpsb pop aaa pop pop (bad) (bad) (bad) ljmp pop lods push rcrb dec (bad) jp mov adc cmp dec fnstenv sbb xor (bad) (bad) call pop inc inc sti xor in mov jbe mov (bad) mov repnz mov or shrb sub (bad) call fisubr sahf xchg adc in sti insb sub imul fs loopne mov lret (bad) jmp pop cmpsl mov mulb cmpsl and pop push rolb (bad) jmp push cmpsl mov sti (bad) incl inc jne ret popa xor rclb mov stos movsb (bad) hlt das fwait fwait das test (bad) (bad) ljmp dec aas fcmovu fs sti jge push lock jno aaa hlt (bad) icebp ss sbb dec (bad) (bad) (bad) incl mov fstpl jmp rcrl or pop imul dec or inc fnsave (bad) (bad) (bad) (bad) fistl inc adc rol cli fsubrl ja inc pop jecxz inc ret xor call decl fs xchg cmp decb sub arpl (bad) (bad) jmp adc dec gs pushf daa int3 fldt inc sub test insb (bad) (bad) pushl jbe pop (bad) in (bad) mov scas push ds mov and and shlb jne mov ret xchg std es mov into mov loope add popf (bad) imul mov mov push adc std ljmp clc cmp push mov mov push scas hlt pop notl push push push xor jecxz sub or loope mov es shr or in ljmp ret xlat repnz inc sbb scas mov lods out push push test es cli (bad) (bad) stc or sbb mov sahf pop lret jle repnz fldenv jae fstpt push or popa rcl mov (bad) in (bad) jmp in xor mov test inc test jecxz in jl call lcall lret cmp pop out adc pushf mov jp inc or push out out iret (bad) push int pop aad adcb (bad) les loope jecxz (bad) (bad) (bad) jg sub jmp das xchg (bad) xor sbb add rorb (bad) (bad) (bad) fst pop dec mov movsl repz jne jle push inc jecxz aam fmull sbb pop adc pop (bad) (bad) (bad) (bad) mov popf xchg jb roll clc repnz mov outsl cld mov pop lds and mov lcall xor adc stos outsl add pop xchg inc mov jno inc push icebp (bad) (bad) (bad) (bad) jnp stc and pop arpl sti sbb lock mov lea xchg bound (bad) call jae xchg jl xchg bound out dec and into mov push jg jne xchg jmp clc (bad) (bad) jnp outsl (bad) lahf jg mov test adc daa push sub or pop fcomip sub lret dec pushf mov push lock shlb aam inc lcall fdivrl addr16 jge call xchg adc and cmpsb test xor (bad) pushl mov movsb push xor mov les mov (bad) (bad) jmp imul ret fidiv out cmpsl dec adc and push (bad) (bad) fnop lds jecxz xchg pop mov xchg jle ret pop sub hlt or in pop sahf add adc enter test and and mov (bad) (bad) (bad) pushl sub and mov sub sub and or and pop movsb (bad) ljmp pop loope and test hlt adc pop in aam iret push sbb fwait (bad) incl movsb call ds push or (bad) lock push push std (bad) incl adc adc inc mov test in pop (bad) add push (bad) (bad) ljmp repnz andl add add xor jge jge mov lock adc adc cmpb pop loopne mov pop call jg mov pusha pop rolb jmp inc fist daa fs (bad) (bad) incl add inc mov mov ljmp add add push ljmp test ret or push mov (bad) mov xchg sahf into les xchg daa pop pop iret or mov (bad) (bad) lcall inc sbb sub add push outsb imul (bad) (bad) lcall movsb mov push (bad) or pop loopne xlat popa push stos lahf (bad) (bad) (bad) fcomip in subb xor sub jl test sbb mov outsl adc pop cmp jg test sbb scas lods jp add aam mov incl insl out cli or cmp cmc sub cmp pop insb xchg int imull push mov pushl std ljmp test jmp (bad) test inc push movsb or bound roll and incl clc pop aas mov negb mov (bad) (bad) (bad) lcall in inc das add and movb fsub push lcall aas (bad) add pop fs aaa outsl (bad) sbb push insl pushf jg pop ret fildll xlat jmp (bad) (bad) push loopne pop lock movsl or (bad) cli mov mov xor js (bad) (bad) (bad) in jecxz clc ret fbstp (bad) aaa sub cmc sub or fldl sbb xor insl in js ss icebp mov scas out rcrl test sub stc lcall call cld repz pushl or mov imul incl daa xchg mov xchg cld iret das in shlb push fwait mov (bad) (bad) lcall dec mov cmpl stos xlat dec (bad) xor pop mov inc (bad) (bad) (bad) call lret andb mov jb jo stos sub add dec lea out out inc out gs lds mov dec aas in mov insl push stos pop add or or add (bad) (bad) ljmp and pop lret xlat (bad) mov sbb fwait add inc (bad) fcomip mov xorl and and mov ds jbe decl lock dec push xchg xor jl xchg test hlt jecxz out clc stos sub xchg sbb idivl sub (bad) (bad) lcall cmpsl push sub out xor lea xor sub call rorl pop dec cld push cld (bad) incl add add add or jmp xor loopne jg push jb jmp insl xor rcl add xor or loope out dec jl aaa lret pushl fild pop movsb pop jne sbb ficomp call fadds cmp (bad) (bad) ljmp jmp mov lret lds add scas and inc sti imul jb sbb das mov mov jmp jle stos (bad) scas clc pushl fisttpl in xor push mov sub (bad) (bad) jg mov push jne jnp inc mov adcb jb xchg (bad) (bad) (bad) pushl jb push ret insb xor mov mov lret cmp test (bad) (bad) (bad) call inc xchg inc frstor nop pop pushf in inc and test dec out jne jmp add adc (bad) (bad) jmp inc inc arpl xor jbe mov call ljmp lock xor (bad) (bad) (bad) pushl fstpl (bad) mov or fldl jae ret add mov call inc (bad) (bad) incl mov push idivl jae mov or and cld mov test outsb pop or lret sub push idivb pop sbb jmp clc jno sbb lods lods loop lcall sub adc push jle imul pop push push shlb loope sbb (bad) jg (bad) aas adc adc data16 pop add loop add xor and in xor out int (bad) (bad) (bad) mov pop add cwtl inc dec dec fcompl jle push and or (bad) mov (bad) in out (bad) adc data16 loopne mov jle cld mov and mov (bad) inc add mov mov sub xchg subl sti das icebp inc imul push pop jmp pop scas std movsb fwait cmp aaa dec (bad) lea notl jns sub sub pushf jmp hlt cmc dec and rolb cli (bad) (bad) push aad pop or or test push out inc dec (bad) mov mov and in ja inc dec add addr16 cltd cmc (bad) mov and sbb cmp push icebp sbb jns xchg pop cmp faddl dec xchg pop pop (bad) pushl movsb mov enter pusha cmp mov adcl (bad) ljmp cmp jmp mov fwait in clc adc movsb pinsrw insl es pop mov (bad) (bad) (bad) lcall scas (bad) cld adc add mov cmpsl mov xchg jne dec mov (bad) (bad) ljmp push push fwait lahf popa xor add rorb mov bt mov pop (bad) (bad) (bad) ljmp or ds popa in stos jb mov mov popa pop adc (bad) clc push (bad) cmc aaa push sbb jecxz mov sbb inc cs fcoms (bad) (bad) (bad) incl push sahf push lock je xor sbb mov sarb (bad) (bad) (bad) jmp repz sbbl xlat jge mov sub (bad) jle ret dec subl (bad) ljmp mov stos xchg pushf jno pop or jno xchg sbb xchg xchg rcl loop cld (bad) (bad) (bad) std fisttpll js pop aad in js or arpl hlt mov sbb pushf jo in imul or push test (bad) add mov add dec mov (bad) pushl inc xor in daa cli les (bad) ljmp push ljmp hlt popf test push (bad) (bad) call mov push leave and aaa mov lea test (bad) (bad) (bad) incl inc jmp jo incl loopne push adc in and jnp mov imul lods cli repnz inc or mov (bad) (bad) mov xor dec pop clc stos ficoml mov cli cwtl cmc shrl (bad) decl into xchg fsubrs or dec mull sub mov je (bad) (bad) (bad) decl movsl mov loop into fs incb sti jmp jns (bad) (bad) (bad) call mov or adc imul addr16 xchg and or lcall call decl clc pcmpgtd loopne cmp sahf (bad) (bad) (bad) lcall js cmc jle loopne sbb pusha xlat xor mov jnp jle mov ss (bad) (bad) decl sbb cli in jge pop call push arpl push cmpsl mov push adc insl xchg std and lret test lds pusha sub ret (bad) (bad) (bad) decl push pop popa ret cltd push xchg xchg push xchg jne dec jp cmp ss ret sub ljmp or outsb rcr arpl lret (bad) cld mov inc fcompl std sbb js decl (bad) cli cmp inc pop xor out jbe pop cmc adc xchg mov xchg xlat xchg inc jmp or sbb adc stos mov mov jns out mov repz (bad) lcall fcompl addr16 insl jo in ret fldcw sbb repnz fst sbb cli (bad) (bad) dec pop divb push repz arpl int mov mov incb push inc (bad) cld xchg ret (bad) (bad) ljmp sub push xchg fsubl roll inc aaa sar push pop cmp call cld ljmp jbe mov (bad) cmc push pop icebp mov std jp cmp movsl mov rorl pop out ljmp xor stos mov or or sbb jg faddl push adc (bad) fbld outsb sbb in mulb in mov mov lcall imul in pop xor lcall dec push aaa pop cmp aad sar outsl mov pop lcall mov mov aaa push jnp sar (bad) jmp cmp fidivr bound xlat sarl push aad pushl ss mov fiadd (bad) stos add mov jo add mov lea imul mov aam (bad) (bad) mov ds pop fldl shlb inc pop clc cmpl sbb push push les in inc imull cmp (bad) (bad) incl xor cmp dec cmp add test push je push sub ficompl (bad) (bad) ljmp insl insl popf xor cmp cmc cmp sbb stos jmp dec ljmp xor lock es sbb inc mov icebp stos fnstsw lret mov mov sbb jne inc cmp push (bad) ds or push cs xchg (bad) aam rolb outsb hlt jns inc dec cmpsb mov cld (bad) pushl jnp sbb xlat inc jns decb xchg dec sbb push or jnp imul mov out (bad) (bad) (bad) jmp js jecxz pop scas rorl fistl mov mov jge aad dec mov leave (bad) mov push sbb jmp cld add insl mov add sbb and cmp iret mov call loopne cli xchg aad mov sbb xchg cmpsb mov pop or mov jecxz xchg (bad) (bad) (bad) pushl and in repnz pop add mov add sub push sti adc (bad) jns test imul (bad) mov dec add js mov addb mov mov inc std aad or outsl jno add insb add xor inc jno sub jmp xlat stos sub (bad) (bad) (bad) ljmp mov or jae mov test mov mov js stos mov jns (bad) (bad) (bad) (bad) mov pushl xchg stc outsl stos scas insb int les sub popa mov call (bad) (bad) (bad) fsub pop pop out bound lods cmp into scas shll sub xchg jmp xor mov xor (bad) pushf loope push insb adc adc sbb mov mov mov fs hlt dec mov adc int jnp jg push xlat or (bad) (bad) call stos xchg in aad fnstcw push lahf gs mov (bad) in mov adc (bad) (bad) call sbbb andb or and cltd dec popf pop into pushf lods ror jbe ljmp sub rolb iret xchg push cmp ljmp add (bad) jmp idivb jecxz sub sti in mov pusha pop lret cmpl repnz or cli (bad) jmp loop mov (bad) mov sti cmp imul (bad) call test adc shl (bad) xchg sbb daa fdivr (bad) (bad) jmp push push mov out repz stos in outsl adc cmpsb loope inc push xchg xchg dec push (bad) (bad) (bad) lcall jae outsl bnd push shll (bad) call mov cwtl or dec inc ja (bad) call pushl and dec xchg aas inc pop mov dec shrb (bad) (bad) (bad) inc jbe lahf dec pop jle jl enter test loop mov je mov cmp fwait popa loopne mov mov stos test outsl js lret xchg arpl (bad) sahf cld fcomip aaa cld fnstcw iret mov iret and ss xor cmp int jle mov iret aas insb jne (bad) lcall (bad) aaa jmp les lods jle or fnop lds inc negb (bad) (bad) (bad) call mov (bad) fldcw or ret jo xor lock ja fidiv cs xor ljmp jge ret test int mov out out push inc inc push sar and dec adc lcall scas ret (bad) (bad) incl dec stc cs inc pop mov xchg popa xchg mov loop xchg mov movsl mov clc (bad) decl jb psllq or int bound je (bad) (bad) lcall mov loopne push mov xchg xchg jge sbb inc jno xchg (bad) call mov jnp push ss in outsl ss loopne pop push outsb add ljmp (bad) lcall pusha mov sbb xchg xor fistp pop imul out pop cmpsl fiaddl mov aas cld xchg xor aam dec gs mov push cmp mov test adc xchg lock (bad) (bad) (bad) ljmp jge add mov lret inc sub dec loope push (bad) icebp pop pop adc xor hlt fcomip (bad) incl fidivr pusha cmp mov and jmp jno lcall jmp push pop shrl dec inc loop mov adc (bad) (bad) jg xorl sbb iret fdivs sub dec inc int3 test xchg jge (bad) (bad) inc pop xchg in mov hlt xor mull loopne mov inc xchg jp mov (bad) (bad) call dec enter repz leave int3 sbb popf mov and or xor movsb mov aam push lret adc xchg dec call jo ret lds xchg jl fnsave (bad) (bad) (bad) call jo mov mov cmpsl mov mov mov or mov fcomps (bad) (bad) (bad) ljmp xchg arpl aaa js notl lock test pop add lcall pop fsubs lahf bound cs jmp hlt (bad) (bad) push dec scas sub rep adc adc jle hlt test push (bad) mov fisttp xor mov bound or xchg sub sbb dec dec adc cmp (bad) ljmp ret imul fmul fs cld imul fsts adc ljmp inc pop inc addr16 mov test repnz dec ret (bad) (bad) incl xor aam enter cmp mov add pop into mov pop (bad) (bad) (bad) pushl add cmpsb fsubl test lcall cmc fildll insb out (bad) (bad) (bad) call mov jne xor (bad) sbb cmp mov jecxz pushf mov lret xchg (bad) (bad) (bad) (bad) jns xchg and pop dec test jmp mov xchg mov aaa sub inc inc push xchg dec or (bad) xor pushf imul out add (bad) lcall fwait imul sbb push jmp push outsl mov hlt mov sub pusha movl cmp lock xor bound inc imul adc pop test or lds in or je mov bound std (bad) (bad) decl xor pop dec fs cmp subb pop push scas add aaa hlt mov es ds xor add mov cmpsl and (bad) in jno xchg syscall mov jp mov (bad) (bad) call movsl pop jmp inc jecxz fisttp inc insl (bad) (bad) into dec pop add decl (bad) jg lret iret push push mov adc (bad) mov sbb (bad) (bad) (bad) dec aaa loope and sub pusha jge rolb jg mov mov ja inc mov (bad) jae into pop inc (bad) out sub jp mov aaa pop add and cmp pop inc sub (bad) (bad) sbb xchg ret mov pop dec and adc rorl cld fwait movsb adc fsubrl cli daa (bad) inc inc je popf test xchg addl cmp les add mov xor aas or and stos in sub in loopne paddb mov (bad) (bad) pushl pop jo cmp pop xor xchg inc cwtl incb sub mov jl add cld (bad) pushl int3 sub push mov mov sahf add cmp jo (bad) call test sub sbb push or inc test xchg test mov adc xor mov (bad) incl mov jns mov cli inc or sbb (bad) (bad) incl mul ret inc xor inc cwtl mov orl cmpsl inc rcll cmp (bad) incl testb xor add add mov and clc push pop cs (bad) (bad) ljmp xchg push adc jns jo add xor lods cmp in pusha (bad) pusha in daa or jmp lcall (bad) xchg pop stc xlat fsubp push ljmp int3 add in jnp test incl lods lcall test jo in inc push xchg push adc xchg mov sbb insl inc pop (bad) (bad) (bad) lcall inc inc movsb pop fwait mov mov and cmp mov add adc (bad) (bad) dec ror lahf add neg repnz jbe add scas addl cwtl lds js cmp lret or cmpsl orl xchg insb lret loopne add mov adc in jecxz push popf repnz popf loop adc inc cwtl xor (bad) lcall xor xlat stc or xchg jge mov leave push ror ljmp insl and (bad) (bad) ljmp mov mov aas mov int3 dec lret mov decl daa push dec jo pop aaa aas lods sarb pop sbb in ljmp cwtl daa sbb idiv (bad) pop push je repz enter pop mov mov pop (bad) das inc fdivrp mov (bad) jbe pop cmp (bad) (bad) (bad) jmp (bad) cli mov cli imul out jle xor cld mov shr sub or clc (bad) ljmp sub stc call adc mov jp lods lods (bad) (bad) jg sub out fsubp push jl dec push pusha sbb test sbb (bad) incl gs ret fincstp mov push adc jne xlat xchg orl cmp je out clc incl mov pop pop dec sti mov inc lds test popa mov ret insl jecxz (bad) in js adc sbb xlat jne rolb mov cld cli ret mov jo jp iret lock test cltd int sbb jmp xor (bad) (bad) pushl sbb inc dec rorb pop pop popf pop adc mov mov mov mov mov gs sbb push clc (bad) std pop cmp jg push push ficom lret inc in int3 or es pop std jno out jo mov std je shl (bad) (bad) (bad) inc and dec scas sbb jbe (bad) and pop pop nop xchg cld sar and gs (bad) mov sbb inc xchg sti xor jnp xchg xchg inc dec cmp (bad) (bad) decl and mov jne (bad) pop jb and (bad) ljmp pop sahf das sbb jne push sbb test mov xorl aad jne jl ljmp mov cmp test inc ret (bad) jne pop xor addr16 cld adc repz test aad jmp and decl decb loopne mov cmpsl enter mov pushf cmp or adc push (bad) xor fucom jmp (bad) (bad) (bad) mov add pop aam mov repnz aam xor into iret mov (bad) (bad) (bad) pushl (bad) mov inc xor repnz rorb pushl xor xor adc and (bad) decl xor mov lods sbb test or mov test sbb and (bad) (bad) (bad) incl pop (bad) incb adcl mov es cmp out mov (bad) stos and cltd mov stos in push outsb repnz stos add movsl (bad) (bad) (bad) ljmp addr16 sub and stos (bad) fcompl lds in pop arpl insb or mov add lock mov data16 loopew sar (bad) (bad) clc xor aas jge push mull shlb scas xchg push jno bnd cmp fstpl (bad) (bad) in xchg bound pop das adc and nop sbb mov lods movsl fidiv ljmp or shrb lret dec xchg mov fwait test (bad) pushl aaa pop test jmp (bad) jle mov cmpsb into mov gs xchg sarl into aad push or cmp (bad) or (bad) pop pop scas fcmovnu pop adc pop jle fwait cli push sbb jle push xchg pop (bad) incl jns,pt xchg nop sub mov xchg jne gs out mov insl popa (bad) (bad) (bad) (bad) ljmp pushf sti stos insb iret cmp mov movb ja add push mov push mov (bad) (bad) jmp nop fsubs hlt pcmpeqw test pop adc sbb (bad) (bad) mov rcl xchg or out pop imull ss mov push add int out cli (bad) push xchg ss scas push push clc or in test push aam jbe add push std (bad) mov loope adc mov aad mov dec pop push (bad) (bad) (bad) (bad) cmp jo xor dec jp add es hlt inc mov std (bad) incl out mov rcrl mov (bad) popf lcall xor (bad) pushl (bad) and or push pop pop in mov pushf cmp (bad) ljmp xchg fnsave mov in fsubr cmpl jns mov gs mov outsb (bad) (bad) (bad) lcall cld sarb dec mov icebp sti xchg rolb jg sub iret push push pop mov push (bad) ljmp or xchg mov add sub pop push push sbb pop push dec xlat sub and adc (bad) push add adc push ljmp ss adc imul xchg test cmpsl dec mov pop fimull decl (bad) jg or inc lds (bad) js stos rcrb sbb fwait sub mov ret (bad) dec dec (bad) ja loopne fdivrl xchg jbe sub das sar insb add popa add cwtl sbb jb sahf jg (bad) jmp stos add push pusha sahf pop cwtl bound dec nop test (bad) jg jg adc repnz push cs ficomp cs rol inc push and xchg push jnp ror idiv (bad) out cli (bad) mov xorl call mov (bad) (bad) (bad) (bad) jp lret loopne out nop nop lods mull repnz pop push sarb pop pop mov fsubp leave mov sti incl inc inc js mov dec js mov pop xchg (bad) and or (bad) (bad) (bad) (bad) in xor mov addr16 push pop cwtl popa jle adc mov hlt loope call (bad) (bad) incl rolb jl (bad) mov out or rcrb std (bad) (bad) call dec add push stos xor lret inc push mov je fdivrs rolb mov lock pop enter rolb outsl push jae mov rcrb ret xor push push push sub pop and (bad) (bad) ljmp pop cmp scas cltd mov or adc add (bad) (bad) (bad) lcall inc sbb sarb rorb jle test lahf mov pop jmp gs or daa fisubl aad stc daa xchg cltd repnz out repnz in xchg das sar push adcl xor xchg loopne add pop and pop mov (bad) (bad) (bad) jmp aam jae jno fdivr cmpl movsl test cmp ret pop sbb sub inc (bad) (bad) mov sbb sub push sbb or shl adc loop mov cmp sub lcall push rcr loope (bad) mov adc dec mov cs mov and xchg cwtl loopne jno icebp jmp mov shlb and jg (bad) pushw or sub add or jbe push mov idivl mov and lret mov cltd mov outsb test lcall insb jl lods mov push sub mov add sbbl (bad) push (bad) incl clc sub or sahf es movsb push (bad) call pop cmpsl (bad) xlat jecxz jne stos fcmovbe jne loop xor (bad) (bad) jg sbb sub xor mov add lea mov decl int3 inc pusha sbb clc xor add (bad) pusha movsl popa rclb sub dec (bad) (bad) (bad) incl xor aam shlb in and (bad) ljmp sub out cs (bad) ljmp loope shrl cltd jmp pop aas daa and adc sub or (bad) (bad) (bad) mov mov sbb repnz inc std aam cmpsb pushf mov movsl pop test inc test push (bad) (bad) (bad) dec xchg fisubrl dec push test jecxz push outsl mov arpl jne loope insb mov (bad) (bad) in ljmp iret (bad) (bad) mov loop clc and cltd mov mov iret jecxz (bad) adc jno xchg (bad) (bad) (bad) call mov (bad) fsubr movsb imul dec out cmp dec add push insl shrb (bad) (bad) (bad) incl mov cmp pop gs loopne pop mov (bad) jb fwait clc pop mov cmp (bad) (bad) push aad hlt sbb jecxz subb aad add push jecxz lahf mov outsl clc pusha cmp das fwait xchg cmp enter (bad) pop fdivp sub mov (bad) (bad) (bad) jmp leave ljmp or testb and mov dec mov addb push sti (bad) (bad) incl pop (bad) mull lea mov jnp,pn add mov inc (bad) (bad) (bad) jg xor cld icebp scas std sbb pop movsb cmpl pushf repz mov xlat fildll pushl xchg ja loopne add mov lret ret (bad) (bad) fmull adc pop or push add lcall (bad) (bad) (bad) dec cltd aas das test int3 jbe xchg pop faddp xchg xor adc into pop mov pop cmp je xor sub (bad) adc sbb mov cmp jmp adc push aam jb clc (bad) lcall jle or xchg pop dec fisttp push fsts popf mov in scas jns (bad) incl outsb mov movsl cmovne jmp fstl sti add xchg iret inc jg (bad) jmp (bad) mov (bad) dec decb incb out dec lds jb (bad) (bad) (bad) jmp mov push or dec out mov mov bound stos jmp pop pop sbb jg add fildll jmp scas push push jo cli loope repnz cmpsl mov dec jb cmp (bad) (bad) pushl fnsave add xchg movd int aam sahf (bad) daa addr16 cmp call sub cmpsl xor lea fstpt rcrb cs test push jg sbbl ret pushf in loope and (bad) (bad) (bad) (bad) jg movsl fidivl cmpsb push xor mov dec lods clc push (bad) test sbb (bad) decl and cwtl cld jl push mov ss or sbb (bad) (bad) call inc inc movsb (bad) rcl cwtl imul jl xchg xchg pop mov (bad) (bad) decl enter cmp out fucomi mov sbb (bad) sbb movsb (bad) ljmp aas jge dec fmulp xor int3 mov mov out cld or (bad) (bad) incl mov dec cmp out ret (bad) mov (bad) jg test (bad) das outsl adc (bad) (bad) (bad) dec sti mov jp popf idivb fucomp cmc leave inc arpl sarl sbb (bad) (bad) (bad) push push in lret push out or cli in loop inc aaa jle cmp and repz hlt scas (bad) adc (bad) jmp fs lahf mov mov pop adc out mov inc ljmp das xchg xlat test adc ficom push ret cmpsb daa bnd je mov notl lret mov mov lock shll fildl (bad) (bad) push cmp mov scas jo mov push push mov add lea cltd and dec mov es out fnsave sub sub jge outsb pop push insb shlb ja (bad) (bad) incl pop adc xchg sub fs push movsl push (bad) push iret repz in clc loopne jecxz (bad) psubb mov enter out ret jne (bad) push (bad) push lcall divl jb out pop icebp or (bad) inc aam push cs jp imul pop stc pop cmc (bad) (bad) clc pop or mov push scas mov insb pop pop call call mov push je aas lods xor mov (bad) call ss jle dec insb pop sahf rcll lods mov push fsubr push inc ret (bad) scas stos sarb mov mov repnz mov fisttpll aam lret mov sub les (bad) lcall repnz in loope,pn and xchg xchg cmp ss std addb (bad) (bad) (bad) inc movsb cmpsb fcoms cld lcall int lahf mov add jnp,pt (bad) (bad) (bad) sti dec repnz mov jl,pn xchg xchg leave xchg aaa iret and cmc pop (bad) xchg ds inc sbb ret jle mov ret mov clc (bad) (bad) lcall adc cltd cmp xchg loopne (bad) cwtl pusha in push push push sbb outsb gs incl jno jae lcall (bad) cmp psrad outsl in out shr mov jle repnz idiv decl imull ret repz add das repnz and out cli (bad) jns jecxz or imul jo daa leave sbb add sahf push int arpl cmp jmp nop mov out fnstcw punpckhwd (bad) ljmp xadd fwait or aas pop dec (bad) mov jp test jns loop insb (bad) jmp daa lock pop aad ds add inc sbb clc (bad) jg test mov cmp fildll loopne mov (bad) ljmp adc data16 cmp (bad) mov clc jne push (bad) popf jb cmc cltd lock add (bad) (bad) jmp dec add cld inc ret imul movsb rcl out add mov aaa cmp add or inc (bad) ja mov inc in test jne (bad) enter (bad) (bad) (bad) mov aad jne mov push add pop mov cli push into adc cli mov (bad) lcall mov bound jns add into cmc sti mov xor frstor mov mov mov add dec jns xor sub scas and add (bad) ljmp mov (bad) popf dec add jb fdivr jns outsl repnz divl adc lret inc mov add scas inc xor pop mov adc pusha cli sub push mov mov fdivp add (bad) es mov rorl add ret stc daa sahf jmp jns jb out pop js cmp fxch jnp (bad) (bad) (bad) cmp pop lret (bad) je xlat and ss std enter fwait mov bound lock add pop or (bad) jmp aaa adc and das aaa pop sbb inc xchg out movb sbb pop (bad) sub incl jp cmp rcrb jle std adc jno adc clc (bad) decl nop dec push out fs lahf pop nop pop imul xorl imul clc ljmp clc (bad) divb cs push daa aas xchg push insl cmp xchg jno sbb out sbb mov or cltd add (bad) (bad) jg nop iret test cmpsb xor andb sbb pushf insl pop add div lods push or jg incl sub pop and call xchg and mov cld imul xor adc push or ret sub xchg pusha mov mov ljmp cmc pushl mov fs jmp sbb (bad) mov dec stc (bad) (bad) (bad) (bad) cld adc ja clc mov mov sbb and jb shrl cld (bad) out cmpsb icebp sub or xchg ja mov fldt (bad) dec hlt and cmp jo lock movsb mov push push ret sub cmp jg lock push jmp and bound imul outsl (bad) stos (bad) call jmp test (bad) addr16 dec xor cmp cmp cmp push mov push shl sahf inc jb ret push or dec (bad) arpl mov std jae inc cmp push mov pop in data16 (bad) (bad) mov mov dec ficompl iret loopne push fucomi test jne mov inc je push inc je or divb movsb mov rclb aad sbb incl jmp mov int enter hlt testl sar (bad) inc mov push lcall add inc adc cli insl cmovb sti xor add sbb (bad) mov sahf (bad) xor (bad) push cld test rcrb or call jge leave (bad) push jns pushf aam xorl inc imul pop incl cli mov int3 out sub dec daa pop lret push shlb (bad) or (bad) (bad) inc xor shrl pusha ret pop sub inc sbb dec lods adc rol outsl out (bad) (bad) jmp xchg push xchg pushf adc jl pop sbb mov dec push jnp (bad) (bad) (bad) pushl pop pop pop mov pop popf int inc or pop negl cmp fcmovu or cmp (bad) (bad) call incl sti imul push shl mov dec lret mov lret fwait (bad) mov addr16 (bad) adc lret fwait pop std ljmp (bad) jmp jns sti xchg movsl movsb mov mov cs test inc (bad) mov push cmp and std pop and cli mov inc cld (bad) (bad) incl orl stc lahf test out cltd jle xor cmp mov cld mov (bad) (bad) incl enter sbb sub and lock arpl out pushf (bad) incl sbb cmp and adc and sbb rolb mov adc (bad) out cli xchg sub pop insb jns xor sbb int lcall mov (bad) (bad) jmp jb std shrl push movsb das sahf sarl push jnp (bad) (bad) jmp adc in movsl sarl cltd cld push outsb rcrl cmp test shrl and out xchg cmpl sub jb loop jo and outsb xchg leave (bad) and cwtl clc repz mov out jns clc lcall push js gs sub fstl out or stos pop cmp lcall insb out scas test pop dec loopne (bad) (bad) (bad) (bad) (bad) jge pop ss decb fwait std (bad) or push bound shrl cmp (bad) (bad) (bad) push cmp lahf sub pop (bad) stos mov bound mov sti pop push test push (bad) (bad) (bad) fnstenv std xchg dec test lahf aad push mov stc mov lock dec frstor (bad) (bad) call nop mov jmp mov mov sarb dec shlb xor jbe xor (bad) (bad) jmp (bad) and fstpl ffree imul pop xchg adc outsl loop pop ljmp jnp jp cmp dec jecxz pop sub cmp call mov (bad) (bad) mov pop repz mov adc dec push mov movb jno jno mov je lds lahf or xchg cld push jl (bad) (bad) mov lods cld mov cwtl push rorl movsl xor push sub inc iret fmull fistl jmp push mov xchg adc or lods mov xor xlat test mov std test jl (bad) (bad) ljmp movsb bound imul adc imulb imull pop lock jmp mov insl ljmp or pop int (bad) and (bad) (bad) call loope add mov xlat jecxz sar mov les pop ss into (bad) (bad) (bad) lcall fisubr push pushf cmp mov jno cli iret enter dec mov out (bad) (bad) call in cli scas adc push or insl or push xor mov inc loopne jmp sbb adc dec (bad) adc jecxz int (bad) lcall in add sbb sbb lock popa xor aas lods sbb xlat and jg cltd xchg fimul fnop pop inc jecxz lods andb jge (bad) cmp es inc (bad) (bad) decl das gs popa pusha add mov test addr16 imul aas ss dec pop pop ficoml subl mov push push jmp mov les cltd add cmp push xor aad cli (bad) jmp mov mov push mov clc shlb cmpsb xor (bad) pushl dec iret jecxz arpl xor jecxz,pt pop cmp adc adc repz (bad) (bad) ljmp aas stos pop (bad) pop decb pop ret mov pop push adc dec arpl outsl test add cmp dec push add ss loopne pusha cld (bad) (bad) stc jecxz sbb cmp adc or lods sti xchg cmp (bad) ljmp (bad) rclb and sbb or popa jecxz arpl (bad) (bad) jmp mov cmp (bad) jl popf cmp std pop je sub push sub xorl (bad) (bad) (bad) cmp add stos mov scas jge pop ss pusha fisttpl and and or push pop xor xor in repz popf jge sbb test ja sub decl imul sbb sbb jecxz sbb out jmp xchg loopne hlt cmp mov icebp dec add pop repnz fadd fwait (bad) (bad) call sub fimul jmp cld xor inc add test iret repnz (bad) (bad) incl push roll insl cmp cli outsb xchg sub lahf inc dec cmp sbb jb sbb jb (bad) push negl mov fcmovb repnz les adc outsl and cld popf (bad) outsl dec fdivrl dec sbb add ljmp movsl movsb pop dec or lahf hlt (bad) add sub xor ret (bad) (bad) (bad) pushl (bad) fldl2e out adc aaa inc sbb inc add je lahf rolb xchg cltd push dec and dec (bad) pusha sti adc xor lcall orb cmp pusha push popf aas xchg sbbl clc arpl cld cmp jg out out push addr16 pushf insb push sub cli roll sti cld roll (bad) out and inc sahf sti ja xchg jne ret fnsave xor jg cmc pushl rolb and (bad) ja std xor test push (bad) (bad) (bad) jmp lods mov cltd fucomip rclb inc das pusha and cld dec cltd add icebp (bad) adc arpl test mov adc cmpsb hlt pop push pop in push movsl jl (bad) (bad) (bad) lcall pop into inc test and adc dec (bad) cmpsl (bad) add jl xchg xchg (bad) (bad) (bad) incl push in dec dec les sub jg iret aam das mov stos mov cmp mov repnz aaa or lcall es sbb test fwait mov pminsw push jb lret outsb mov jmp jne adc scas push enter inc lods rcrb cwtl aas daa and lock xchg jle sahf mov push jne fisubr lods mov (bad) mov imul decl rcrl pop call test mov (bad) (bad) (bad) dec jg (bad) int3 and out lods xchg aad int cmp (bad) jno xchg (bad) xchg push int mov fwait popa loopne sti sbb mull incl jbe fwait inc cmp mov xchg popf fsubr cmp std loop or push (bad) js mov mov loop in les cs lods push dec in fisubr fdivr (bad) (bad) jmp add mov jg (bad) loope pop and cmpsl out cmp and inc jle sub fcomip push ds sbb (bad) in hlt je stc pop inc sub rorb enter (bad) (bad) decl ja outsl cmp movsl push push jl lods inc clc xchg lret and push mov jp mov jg mov adc lods jecxz and and push rorl (bad) (bad) clc fsubrs cmp fiadd in mov fisttp lret popf into sahf (bad) mov push adc std test or icebp mov (bad) inc pushf hlt jmp aad shrl stc push ffreep mov adc lods xchg out push sub cld push adc add xor ds dec outsb in pop hlt fcomip sub jmp push lods mov (bad) div out stos pop (bad) (bad) (bad) lcall inc test cmc pop (bad) adc divb cwtl dec xor movsl add mov (bad) (bad) (bad) call std jmp jecxz push mov ss stos (bad) adc enter cmp sub (bad) jmp sbb imul xor sub (bad) out push fldt (bad) (bad) (bad) call fstpt mov jnp xor pop lds (bad) mov inc frstor lock (bad) jbe mov out jmp or add (bad) lcall imul inc sub arpl (bad) inc stos lea cld pop out pop cmp (bad) push fsub cmc add loope in sbb shrb push inc mov rorl (bad) pop xchg sbb jb dec repnz add rcrb icebp or (bad) jg sahf sbb xchg jle jge jbe mov adc cmp popa mov (bad) call lahf push sub push adc pop popa adc pushf sub (bad) jmp cld jmp mov lds push sub (bad) pushl mulb push in jnp xlat (bad) or mov in push jmp (bad) (bad) (bad) dec and jno dec push sub mov pop imulb inc (bad) in cmp pusha mov dec jle out clc ljmp mov jp sub lock mov (bad) (bad) jmp or mov sahf es inc pop mov hlt adc xlat jno pop inc lahf lock xchg sar adc xor sti cmp repz pop test icebp mov call ret out das pop sbb daa jne pop dec hlt insb pop jae out (bad) (bad) jg jbe xor scas xchg fadds jno fidivl dec pop push div cmp out das cli (bad) (bad) stc pop dec inc jp lods int cwtl jne jne cmp cmp jmp leave xchg mov aad decl fsubp adc bound pop push dec fstps pushf call arpl add pop std ljmp sahf xchg dec cmpsl add sarl inc je pop mov scas in (bad) (bad) decl test rcll scas lret cltd xor popf lret cmp mov ret (bad) (bad) (bad) in lods pop jnp cltd and jo jne mov out jns cmp aaa mov call loope pop fmulp fcompl cmp cmp sub fwait pop stc xchg xor popa (bad) cmp (bad) (bad) ljmp cmp pop mov jnp (bad) ja xor cwtl cwtl fcoml add fist jg (bad) inc jnp addr16 outsl (bad) divl pop repnz mov xchg mov lahf ss ja (bad) (bad) incl aam in push ss jge jbe cmp icebp mov mov ljmp sbb dec jle adc adc jl in adcl popf sarb (bad) fild fbstp ss mov fdivrs fcmovu mov (bad) lcall push jg push (bad) (bad) (bad) call pop iret fxch dec dec pop (bad) out adc inc dec add lock (bad) jg out jecxz inc and jl xchg roll arpl mov and in idiv (bad) (bad) fildll dec inc (bad) mov fwait push mov jnp lds push mov or sarb fsts push sar (bad) (bad) decl push cs mov push cmpsl pop mov xor mov or xchg xchg jne (bad) (bad) (bad) fild (bad) gs call cmp xor pop stc pushf xor (bad) (bad) (bad) cmp adc iret sarl and xor sahf je (bad) (bad) (bad) jmp mov cmp stos insb lods add movsl ret xor out aas adc xor sub (bad) (bad) pushl xor pop incb les sub (bad) jle xchg ret cs sahf (bad) cmp sub adc aaa lock arpl and lods ljmp adc or sub imul push sub inc pushl jmp (bad) imul add aam gs mov mov clc ljmp or popf test iret sbb aam pop push xchg dec movsb in mov sub imul add in push mov jg sub (bad) fldl add push dec (bad) xchg inc mov (bad) call (bad) (bad) call decl daa push add sub insl sahf xchg xchg push test xor (bad) lret (bad) cld jg (bad) aas ljmp arpl (bad) jb popa sbb cmp lret stos sub ss jle clc or jg add or cltd pusha mov cltd add (bad) (bad) decl fs pop ds mov stc dec xchg pop adc mov add (bad) (bad) (bad) incl sub dec mov outsl lods or cmp lret std daa push dec shlb ss (bad) (bad) pushl push loope push inc pop xor inc jno cltd mov lods lods or daa or (bad) jbe (bad) (bad) (bad) call sub cmp lret inc mull mov push adc xchg sub pop add add mov (bad) loopne (bad) movsl test add out sub (bad) (bad) (bad) decl out ss fsubr outsb sub jmp movsl popf leave mov mov push xor pop jle (bad) je (bad) xchg xor add add push add xor pop incl ret cmpsl add xchg push (bad) xchg sub dec mov add jo inc push data16 decl lock add seta add int cltd into ja ffreep (bad) jg das idivb flds (bad) cmp xor movsb cmp bound orl cmp (bad) test (bad) (bad) (bad) jg fiadd test sbb or bound add jg loopne cwtl mov (bad) mov test sub leave ljmp repz (bad) (bad) jmp mov lock lea and pop flds movsl mov push sbb divb cmp gs das and and lea mov iret cmp or jno div pop (bad) (bad) mov xchg sbb shlb sub sbb sub fwait push xchg (bad) (bad) lcall xchg cmp mov inc cmp xchg mov xchg push (bad) (bad) sahf cmpsb mov (bad) (bad) jmp mov outsl xor pop xchg inc mov jne mov cmc je xchg std fwait out test pop in scas (bad) (bad) (bad) pushl mov sti (bad) popw push lahf out cmc sub rcr dec insl aas inc add (bad) jmp xchg (bad) arpl movsl jo xor cwtl (bad) mulb inc std addr16 mov (bad) decl or or sbb dec adc sub loop pop cs movsl (bad) jnp (bad) (bad) jl inc jno pop fs (bad) pushf in cmpsb push xchg les (bad) (bad) incl sarl jl cmp push mov fcomps sub sub es repnz dec jns (bad) (bad) (bad) incl mov ja pop mov push (bad) in out sub je and pusha mov cmp (bad) lcall xchg aas mov pop movsb dec in pop or sbb pop jo daa push mov jl ja stc lock in call mov pop mov sub jb add sub movl (bad) mov les movsl mov fldl dec dec inc out (bad) (bad) jg daa js repnz cmpsl sarl xor loopne (bad) xor and stc add cmpsb (bad) (bad) (bad) call pop dec dec cld add int3 sahf sub xchg je fimul divl das dec adc mov and imul (bad) (bad) (bad) (bad) mov xor adc sbb mov xor mov lods jg (bad) dec out push sahf (bad) adc pop das cmpsl pop add lret out xchg lock ljmp cltd je cmpsb testl push ljmp popa addr16 rcll bound enter jg dec jmp pop mov inc ss iret sahf cmp cmp pop test aaa sub (bad) (bad) pushl (bad) jle out aas mov ljmp mov nop sbb test mov sub daa add dec jne sub out fwait jns jl popf (bad) (bad) (bad) mov testb xor fwait sub out stos add movsb inc jae std rcrb (bad) lock inc bound insl jne mov (bad) mulb pop std test sar (bad) lcall xlat fidiv adc pushf xor loopne mov xchg inc repnz inc (bad) (bad) incl das nop inc push pop adc movsl daa stc mov pop jmp je jg jg pop pop sbb mov mov inc (bad) or addb loop (bad) (bad) ljmp sub push lock (bad) lret popa jmp ret jo fstpl into sub add (bad) call loopne test nop mov adc pop stos pop mov (bad) (bad) (bad) jg scas jmp (bad) mov push xor ret mov sbb mov arpl (bad) (bad) jmp negb xor mov mov push push xlat mov pop stc jae mov add jmp push xorb ds inc jbe cmp outsb cli jns pushf or (bad) (bad) pushl daa cmpsl and lods dec and icebp jno mov jns popf xor mov (bad) (bad) mov gs mov mov jns jmp fidivrl lcall (bad) (bad) decl in or mov fiaddl pop xchg jp push in cmp jecxz sti les jg iret call jae (bad) popa dec adc orb push in dec rorb pop (bad) (bad) incl fild jge movsl mov push retw js cmp add (bad) (bad) lcall xchg je (bad) push rorb xchg pushf xor fwait cwtl xchg cltd in cmpsl fimull xchg xchg (bad) (bad) (bad) (bad) fmul jge,pn mov bound jle mov out jecxz push cmp in and mov adc je lret sbb jl fsubl in clc mov repnz icebp cmp xor loope (bad) (bad) (bad) jmp sbb pop addr16 aaa es jle fistl in push fidivr mov test fwait adc pop std lcall iret xor into push sbb xchg idivl xchg into jge outsl cmp (bad) icebp inc (bad) (bad) (bad) push adc sub and xlat aaa out fcoml lcall mov es (bad) call mov adc jl jecxz lds pop sbb (bad) (bad) (bad) (bad) ljmp inc fwait (bad) mov addr16 cmpsl lea flds fildl (bad) (bad) (bad) decl inc cltd mov in inc jmp xchg mov push sub xor out inc enter (bad) (bad) (bad) jg cmp ffreep das push ja add mov and sub je or (bad) mov pushf lcall xchg data16 (bad) (bad) (bad) jg aad lret test iret cmpsb movsl jnp xchg js jbe push ss int3 pop add bound (bad) (bad) jmp jl out push insb outsb sbb mov cli in cmp push gs mov (bad) (bad) scas (bad) sub call mov dec mov js pop rclb xchg jmp sbb xchg loope xor fiaddl pop hlt (bad) incl jns (bad) roll mov ja outsb xchg repz (bad) (bad) dec sub mov loopne imul sbb outsl nop mov add sti mov ret and fcmovnu (bad) add outsl ljmp lcall (bad) test adc or mov movsl mov pop xlat pop pop xchg rcr dec xor cmpsb lock call ds sub aad jmp or call faddl mov lock (bad) out sub stos jo pop movsb test fnsave xlat xchg mov or (bad) lcall loop pop ss or cmp pusha jnp pop or outsb push outsl jecxz add pop incb test icebp jnp add mov (bad) mov xchg push add dec fcmovnu xor add leave sbb sbb mov movsl pop sbb jmp xor ficom sahf push ret sbb cmpsb mov xchg mov push inc adc (bad) (bad) (bad) lcall addr16 sti insl je inc and jne mov movsl stos and je jns inc (bad) jbe jge rorb ljmp inc (bad) jg push sub loopne ss adc (bad) (bad) ljmp push and xchg lret pushl insb in jbe mov (bad) (bad) incl fist or test add loop add (bad) and in mov xchg push inc cmp cmpsl and xchg sub xchg add inc cmp (bad) (bad) ljmp arpl cmp cmp into (bad) jg in cmpsl cwtl addr16 ja sti jns jae repz call aaa (bad) dec movsb ret dec arpl xor sub push push (bad) (bad) (bad) decl xchg dec (bad) cmpsb mov sbb (bad) jle ret or dec js (bad) (bad) (bad) decl dec pop jecxz sbb pop jae fwait call (bad) rcl icebp scas mov movsl testb or fdivr (bad) (bad) decl subb mov out in loope arpl mov fsubrl ja pop xchg jg call les test enter insl xchg inc sub add jmp inc mov loop mov in xor movsb xor xor add lcall xlat ret cmp nop adc es test ljmp clc lcall jno add and outsb test push cmpsl adc hlt testb mov (bad) repnz sbb push fidiv xor dec push clc fisttp xchg hlt dec test test aam and sar (bad) (bad) decl cld jp ds inc cwtl hlt sub sbb cmpl (bad) outsl or xchg js xor cld aaa cld inc or xorl adc insb push dec fcomps cmpsb jle (bad) jg rolb jge jge mov movsl es lret das std xchg lea (bad) lcall mov cmp or bound inc dec jne stos scas cli jg imul seto sbb js lret xor int add mov pop test mov cmp mov (bad) (bad) (bad) (bad) jg cli push push adc aaa sbb popa cltd inc mov rcrl je scas out out sub jle push cld jmp js sbb or jae mov clc inc mov xchg rdpmc lea (bad) incl incb add cltd add addr16 pop mov and add (bad) decl add popa insb mov cmc hlt ret popl orl (bad) incl sti cli mov iret neg mov das cmp cmp dec mov cltd lods mov cltd add arpl mov cmpl pop jns frstor mov fucomip sarb adc mov xchg add mov out (bad) in adc repz jne jg lods xchg out test fcmovnb add mov (bad) mov (bad) iret (bad) mov clc or jbe adc movsb inc repnz fsubp (bad) (bad) jg mov mov push leave and in xlat mov pop adc mov add push dec inc push jle cmpl loope popf mov jbe (bad) shrl call cmpsb xchg pop inc enter cmp sbb xchg hlt lahf mov adc sahf (bad) insb out jecxz cli mov push iret sub ss sbb (bad) lcall scas sub fidiv jmp cmc stos or mov xchg mov iret data16 (bad) (bad) (bad) (bad) (bad) push sbb xor dec push testl add rcrb mov pop das mov (bad) (bad) std in mov cmp lock push cmp in push ja push mov (bad) cmp and inc (bad) (bad) (bad) jmp mov xchg mov add mov enter push mov mov pop jne cmp jmp sbb test dec dec dec cmp lods cmp aas mov lods dec sub jle punpckhwd dec imul jno or inc mov and (bad) (bad) (bad) pushl pop push lods push push sbb imul mov (bad) call mov es jecxz sub popa mov jge popf (bad) (bad) (bad) in in pop fmuls (bad) scas mov repz sahf cs or (bad) (bad) (bad) incl (bad) cmp aas xchg lds or pop in ret lock inc xor mov xchg mov cs dec in jle mov es pop ss ret mov jmp (bad) jmp mov mov add iret push ret pop sub push jbe aam jns dec mov mov (bad) cmp mov out xchg ficom sbb adcl lcall mov lds in pop dec mov pop enter mov lds in (bad) adc inc mov mov popa (bad) jle popf std (bad) call loopne xor dec inc xchg out jnp cmp movl addr16 mov shlb mov (bad) mov mov (bad) pushl clc xchg inc pop mov fimull fistl clc (bad) ja pop loope (bad) call mov std jns adc lahf xchg fbstp sbb dec les (bad) (bad) (bad) mov mov int cli xor inc int3 js mov dec xchg shrl in (bad) cmp dec (bad) fstl dec out addr16 (bad) sub aas add call sbb jecxz ds rcrl push divl dec (bad) imull jns cwtl stc enter imull in fwait rcl sbb sarb pop repz cli inc data16 mov fcomps outsl sti fwait mov aad jo sbb jl mov and call sti mov pop icebp mov mov in xchg inc movsb xchg sbb xchg dec nop int3 cmp (bad) call in mov mov repz inc sbb and testb jno sbb (bad) (bad) lcall push jle stos shrl mulb and popf (bad) xchg lcall (bad) sti cltd sbb aaa fcomip mov out mov test lcall jl mov (bad) (bad) call into (bad) aas dec push pop fist fwait das xor inc mov xchg int sbb jge and mov ja (bad) mov loop mov in dec push add pop rorl (bad) call pop fcoml mov and lret xchg ja das hlt fistpll hlt cmp mov sbb cld (bad) push pop in xchg lock pushf insl aam jno dec inc in pop mov (bad) (bad) (bad) mov xchg fdivr push (bad) call stos cltd sbb sbb pop jmp je adc call push insb cmpsb jb push xchg out (bad) pop and or fnop test mov test jmp je in cmp sahf daa adc incb aas clc mov jae fnstcw ffreep decl jge mov mov push adc (bad) jle (bad) dec dec lock mov mov (bad) (bad) (bad) mov aas fdivl mov inc (bad) xchg into or xchg dec mov xchg int insl lahf (bad) (bad) (bad) decl into sbb pusha jb pop fs mov outsb ret subl adc (bad) (bad) (bad) lcall adc cmp ret fnop cli fisub xchg adc push imul mov (bad) decl jecxz push or mov mov sbb add ret incl loope out fdivrs sbb (bad) stos pop nopl test ret mov (bad) pushl mov lock and inc push push stos mov (bad) ljmp ficomp add iret mov mov in adc rclb adc insl jg jb push jno jns cld mov loopne cmpsl inc and loope or (bad) movd pusha lahf je push (bad) xor push rcrb (bad) popa rclb jne fcoml test adc sbb outsl mov fisttp pop sbb push mov jae inc dec sub lock call pushf mov lret cmpsl inc rcl icebp gs adc pushf lcall cmp stc out loope jmp jnp clc out out push mov jle xor (bad) mov cld into dec outsl ja in inc and js subb mov jmp mul sub cld dec pop cmp push lret mov fdivrp and push sbb xchg (bad) (bad) (bad) decl aas js add ja pushf or leave in sub js pop pop sbb mov ja sub mov jmp push push adc sarb test jle or push or gs rcll push (bad) jg xlat push xor ret xor xchg adc push sbb fs lea mov fadds xchg fcmovnb out mov mov mov outsl lret xchg (bad) mov add xor lret mov sub or (bad) lcall mov incl push addr16 adc repnz dec inc mov adc addr16 in daa pand (bad) (bad) call cld mov pop (bad) insb rcl push cltd loope fwait sti mull popf cmpsb pop sarb push inc sbb das inc mov push (bad) ljmp mov popf mov movsl xchg ja into les ja mulb add xchg dec addl mov xor mov (bad) ror lret dec mov js add lock jns (bad) call clc adc fstpl cmp call in mul aas dec xchg lock stos fisttp in jecxz lret mov in leave das insb shlb movsl sbb push fistl mov jnp mov arpl pop arpl gs fwait les mov icebp inc mov lds xor cmp in pop aam fcoms mov lock sbb inc icebp clc (bad) bswap dec rcrb inc lret (bad) jmp insb mov out cmp pop jno jne into out add decl xchg pop ss imul add call clc mov (bad) jmp fwait push push mov mov jae inc enter xchg and xchg rcrb dec (bad) push dec cmp insl sub (bad) call nop jg out addr16 je shll repnz jo mov (bad) (bad) decl in movsl jecxz mov mov ret cmpsb aaa iret popf mov fisttpl cmp (bad) (bad) call adc in or xchg inc adc mov nop cs data16 outsl dec shlb cld (bad) mov and dec daa inc (bad) xchg push push cmp inc cwtl clc mov cmpsl pop add cmp cli dec and cmp cld mov dec ss and jo add (bad) (bad) (bad) jmp lahf mov push (bad) xor aas repnz les push mov xchg out and push incb adc outsb sbb or push push fcomip (bad) call icebp add push push cmp (bad) lds iretw mov stos inc std (bad) cmp cmp mov rcl xchg adc (bad) (bad) fcomps xchg jo cmpsb fcmovu mov dec or test call loop into xchg (bad) (bad) daa out std inc fidiv cmp push adc xor cwtl (bad) sti imul ja jecxz lods cwtl (bad) (bad) (bad) lcall dec out rcll divl stos jne (bad) repz push mov aad and scas jl (bad) (bad) jmp jnp stos scas out (bad) mov stos cld inc xor gs stos idivl ja std cmp adc (bad) (bad) decl out mov cltd les jae lret rcrl data16 mov pop jmp (bad) (bad) ljmp addl pop (bad) imul inc inc push cwtl js mov hlt mov sbb pushl (bad) (bad) outsl push js in fbld and subl (bad) mov xor shrl xchg adc daa les inc lcall push inc call add sub xchg test (bad) out data16 ljmp stos out stc mov fcomp dec adc lret push bound pushf gs mov cld adc and (bad) jg push sub mov jl dec repz inc (bad) xor test xor pop (bad) (bad) (bad) push or mov mov adc into jbe bnd adc cs rclb jmp loopne cmc repnz std xorl pop fistl or xor (bad) (bad) (bad) mov loopne jae js roll das push mov cmp mov cli sahf dec or (bad) sti (bad) (bad) (bad) call xchg lock cmc fwait leavew xchg movsb mov adc dec push (bad) dec leave or mulb (bad) push pushl (bad) jb xor or (bad) mov inc (bad) imull aam es (bad) call push push idivb inc jbe jg dec push pop xor mov out sahf loop (bad) lcall enter pushf cmp pop pop mov mov (bad) pop pop stos dec mov (bad) out cli sbb or addl adc cvttps2pi (bad) (bad) push mov push mov xchg and cmp ja ror fnstsw jmp pop aam call aad negb lds (bad) nop stos popf nop jl jg or pop (bad) icebp imul int3 push mov pop (bad) (bad) (bad) jg and or stos dec jnp lods lods sub jmp mov repz xor pop mov daa in inc mov or push inc mov pop dec mov jo int jb add sub lahf (bad) xchg jmp jle dec in adc (bad) out add mov sub cli cmp popa test pushf js (bad) (bad) (bad) cmp jge adc mov cmpsl mov mov adc adc mov lea lods cmc (bad) pushl popa decl mov fdivs cmp daa cmp sub pop imul (bad) mov jb push inc jg push jge fdivs mov jo mov insb jb fs inc jno cwtl es ret add mov sbb jl push gs push xchg jg or repnz scas xchg (bad) fldlg2 mov (bad) movb decl xor inc ret dec jl push scas rol cmp lock (bad) (bad) call adc sub jae adc loope sbb fstpl cmpsb out (bad) call cmpsb icebp xchg das xchg or sbb dec inc gs (bad) jmp fs pop outsb inc cmpl mov pop jmp and in das ret insb push mov inc push sbb mov iret icebp pop lock push push (bad) decl (bad) loope repnz ljmp jns scas sbb add add jg lea call xchg inc xor pop insb cmpsl and xor (bad) (bad) (bad) mov in push xor adc rcrb insl or wrmsr rcrl (bad) (bad) (bad) (bad) clc xchg pop xor fisttpll out xor loop pop ficompl ss and inc sbb incl dec pop cmp int xor mov jl ffreep pop clc je mov cli pop sbbb sbb xor adc dec (bad) cmp push imul lahf jg (bad) cmp inc mov lretw sbb adc cmpsl dec ret (bad) xchg or push inc dec (bad) (bad) (bad) call dec jp movsl fnstenv lcall insb sahf adc cmp fild jecxz js mov fldt test (bad) (bad) (bad) pushl mov jb xchg stos and fs pop jno gs in gs movsb sbb (bad) ljmp adcl dec sub inc xlat repnz jno sbb test sbb (bad) cmp fmull fstps xchg jbe push or rclb inc fwait push cld decl dec sbb mov leave xor nop sub (bad) (bad) pushl mov mov mov fs sbb push cmp (bad) jmp push push mov jmp mov and push mov jno mov add add push insl lock (bad) (bad) (bad) (bad) (bad) in adc push dec adc jns fildl jp (bad) lods test sub xor incl dec fs xchg cmp push shlb es (bad) (bad) mov push loop sub add push jecxz fcoms aam mov ret sti jns jmp pop test sbb insb iret mov sub adc cmp mov insl pmovmskb in mov aam test jg (bad) (bad) fnsave dec push sbb cmp jb movsb mov add fucomp jno xchg inc (bad) (bad) call and in and mov cmp sti pop inc cld insl dec xchg stos jbe and sbb and fcmovnb icebp (bad) (bad) jg pop inc testl pmaxsw movsl push and shll mov or fist sbb pop or cmpsl (bad) (bad) lcall (bad) pop inc push das mov cmpsb repz cmp xor lcall mov push lods sar (bad) call data16 pop hlt stc out clc fisttpl mov fs ss xchg add and (bad) (bad) jg mov scas push add mov jmp mov push mov jp insl jmp sbb dec inc (bad) sbbb push enter adc dec xor sbb jg jmp jle add sub sub es dec sub mov popa daa dec sar (bad) incl cmp sub out inc sub cltd or aaa jb push or mov and (bad) call cmpb sub sbb lret cmpsb (bad) jg xchg fs das divl daa test (bad) lret and es pop push xorl (bad) (bad) ljmp push and mov push sub sub gs and push scas je fsts clc mov (bad) test inc ljmp in (bad) and mov imull incl cwtl mov pop stos notb xchg lcall cs dec inc cld cmpsb mov call push clc jb in xchg pop lret push repnz decl in pop movsl or cmc or mov cmp fwait movsl mov mov or test push xor (bad) (bad) call ret in push adc addr16 ss test and cli movsb jge push movsb pop cmpsl (bad) fild loop in push cmpsl jae daa push cmp ret leave (bad) mov clc ljmp loop hlt pusha pop sub in iret aaa jns pop (bad) std jg ljmp mov mov sbb mov jg sqrtps clc inc stc push aas xchg fisubl push add (bad) ljmp or stos xchg fs and or sub (bad) decl (bad) (bad) test cmp sbb mov and ljmp (bad) xchg push pop and cmp or xchg xor mov ljmp mov push dec imul ja xchg lcall or (bad) (bad) jmp fwait clc outsl jnp movsl cmpsl push cvtdq2ps insb (bad) mov cmc xlat jbe inc jne inc and ljmp sub loope and stos xor and or out jnp pop (bad) (bad) (bad) decl and pusha add cs fnstenv je jbe xor repz inc xlat bound ljmp fldenvs out lcall sub jle imul (bad) (bad) mov adc (bad) aaa nop ret sub imul push mov (bad) (bad) (bad) mov sub (bad) hlt inc xlat mov mov xchg aaa jge mov idiv adc test inc dec inc and call jnp imul (bad) sti es adc mov outsl repnz aas jl sub cld (bad) (bad) fistp push fistl pop fmul stc sahf mov int cmpsb cmpsl movsb (bad) ljmp mov in dec lahf mov xor dec push and sub aad (bad) fsubrs mov cmpsb (bad) xor in inc push into enter (bad) aaa nop out pop push test loope (bad) mov inc (bad) (bad) lcall xlat scas pop push and jg xor fisttpll andnps (bad) (bad) (bad) dec or int push pop push std icebp mov push stos inc push insl lret xchg ja pop fstl out cmpsb lret in lods lods (bad) mull jmp cli cli lret fisttpl in scas sbb jae (bad) (bad) decl pop inc std enter sub cld push xchg mov dec js xor sbb sar scas xor mov stos jl mov lret (bad) (bad) ljmp pop nop pop and sbbl pop adc push scas aaa xor fs fcomip (bad) decl inc pop popf mov adc (bad) (bad) cmp enter es test lock mov mov jb shr (bad) incl hlt les xchg add mov in dec cmp out rcl jb out mov cld adc (bad) bound cltd sbb xor loopne mov (bad) (bad) lcall sub mov (bad) cmp mov mov cli sub mov ljmp loopne fsubs sub cwtl and rolb mov or (bad) (bad) (bad) jmp mov (bad) jp pop loopne dec imulb jae popf inc and jb (bad) ja (bad) (bad) (bad) dec ds (bad) push test clc insb aad popf mov pushf xchg lcall (bad) lcall xchg xchg je inc (bad) pushl stc ret mov xor loop (bad) (bad) jmp jmp dec jl jns jmp test in into sub sbb fwait scas je and scas cmp mov and xor das loop,pn int3 jge lahf (bad) (bad) jmp pop push jp les add xor call (bad) (bad) (bad) ljmp sbb dec inc gs (bad) movsl imul ja aam shrl fucomi cmp decl sbb enter xchg stos mov stos dec xchg push dec xchg test mov cmc (bad) (bad) (bad) call inc pop (bad) sbb push leave dec inc aaa pushl push add loope cmc (bad) incl or push xchg push lods pop xor (bad) (bad) (bad) jg repz movsb push in push jl imul sub or int3 (bad) sub insb mov stc pop dec andb and xor mov (bad) (bad) (bad) (bad) mov sub repz cmp jo fisttpll adc in sub sub pop loop (bad) mov pushf (bad) in push iret fnstsw and mov inc call inc aad fucomi imul jbe push fistp mov or (bad) (bad) jmp xchg sub or push push stos jne mov std mov stos dec mov addr16 push (bad) incl (bad) (bad) into inc mov insb jno gs xchg jo and pop jl sub mov xchg jne scas sti loope dec push lea adc out cmc aas xchg loopne (bad) ljmp call inc xlat mov xchg mov jmp iretw lock dec (bad) (bad) call and mov (bad) jbe mov add and pushf (bad) (bad) (bad) decl femms fcompl jo pmaxub cmp inc push repnz mov fstps std xchg fcmovnbe sar (bad) ljmp cmp lcall outsl in enter lock pusha inc mov mov cld add movsl lds xor mov cmc ret nop ja push repnz and hlt push xchg (bad) (bad) (bad) (bad) jle jmp cmc xchg into mov imul imul push ret xchg orl ret (bad) lcall adc sbb xchg jbe sahf nop lds dec and shr ret cs gs fwait in (bad) fdivr (bad) (bad) (bad) mov cli jo nop adc cmp lea lret jne and inc push sahf cmp cli and dec arpl std call call sti fdivr ljmp clc mov scas jnp push cmp or test je sti pusha repnz and cli (bad) lcall pop loopne test dec pinsrw adc xor fwait cli xchg stos jp and inc push jmp decl jb std mov mov test jnp and mov mov test repnz (bad) pop jmp or sbb sahf (bad) (bad) (bad) call loope (bad) cwtl ja push jg xor xchg xchg out and mov cmp (bad) (bad) (bad) lcall jge stos lds jb movsb mov in ljmp sbb stc ja jns enter (bad) (bad) (bad) pushl pop dec gs dec addr16 cld jnp xchg call jmp cmpsl jb gs ljmp outsl std xchg push mov imul jb (bad) (bad) (bad) fldenv lods add arpl je (bad) sbb into push daa xor insl (bad) (bad) (bad) dec fnop in push stos aad xor jp mov xor or (bad) push mov (bad) ljmp cmpsl mov inc jmp incl das mov test call inc jmp (bad) mov ss stos jae pop aad out pop and imul mov aaa (bad) (bad) (bad) pushl sbb mov test gs scas xor pop repnz lret pop fstps fs fidiv clc jmp (bad) out movsl sub in fsubrl (bad) xchg lret fcomip mov insb pop cld fwait repnz std sbb mov mov (bad) call jecxz test cltd inc movsl xlat add cmp jg (bad) (bad) jg dec inc add repz push push enter stos add stc imull out (bad) (bad) pushl sbb lret pusha in jge mov leave jbe pusha in and push negb jne ds imul and jl mov fisubrl lods ss (bad) (bad) pushl push mov aas fs pop aaa adc rcrb not (bad) mov xor mov and cmp inc xlat aaa add xor sti (bad) jg cmp mov xlat sbbb jnp dec into test jp stos lock in xor jne outsl adc leave dec (bad) xor ficom stc (bad) iret pop call dec imul mov inc cs adc cmpsb aaa in and cld jmp gs outsb push dec addl mov (bad) (bad) cmp ss jbe sarl loopne xchg mov cmp ja add into xchg pop add (bad) (bad) (bad) (bad) jnp inc scas icebp xor jae dec dec insb test pop jmp out mov mov xlat sbb out je (bad) (bad) (bad) in and jb outsb (bad) arpl ficompl ja push mov dec movsb jbe xchg pop test (bad) incl cmp xchg cmpsl call pop cmp cmp pop xor push mov rolb push stos dec ds (bad) mov xchg arpl xchg ss popf or xchg add fisttpl cmpsl imul rcl cmp (bad) or xor outsb incl mov jge orb sbb cmpsb xchg cmp or mov (bad) lcall incb mov insb repz ds push xchg fdivl imul (bad) fcomip (bad) cmp xchg mov fs xor cmp leave jge lcall test (bad) (bad) (bad) decl jle jg pop pusha jg lret pop jecxz in pop inc add hlt imul stos push (bad) (bad) jg repnz sarl aaa repz mov lret add aam (bad) (bad) (bad) inc (bad) in xchg push sbb mov or add roll test fwait push and in data16 (bad) fsubs mov mov (bad) lcall in dec cmpsl cmpl xchg mov divl push mov addr16 into add xchg cmc cmp dec jg outsb dec ret jge (bad) mov imul popf dec (bad) sub jp call sub bound out sub popa fsts mov ret enter add adc stos fs add pushl mov pop add outsb xor xchg adc fnsave les clc lea jp mov (bad) xor cmc mov lret dec mov xor (bad) mov cmp lock ret repz (bad) fidivr data16 in adc push cs sub (bad) (bad) jmp outsb (bad) scas (bad) xchg dec jns push cld into inc jg sbb inc outsb clc (bad) push cmp cmpsb iret dec push inc les inc imul lahf idivl xorl mov mul dec pop stos xor lret or add mov jecxz xor stc (bad) (bad) mov xor fnsave sbb inc pop inc (bad) sbb cmp addr16 (bad) (bad) jmp mov lret dec push lahf ss (bad) lock lock jbe add mov mov (bad) pushl inc jg xchg and mov fisubl jge lea (bad) pop gs roll push icebp (bad) (bad) (bad) dec jmp js xchg fistpll in or test jb xlat mov dec dec or loope addr16 and icebp (bad) (bad) incl outsl mov repnz movsb or (bad) scas or test push not xchg dec (bad) int push jns aas jle xchg in (bad) shrb (bad) out xchg jmp sub scas jo ljmp jno pusha test (bad) (bad) (bad) inc (bad) cltd lahf in push mov jmp call lock jl dec fs fdivr (bad) (bad) (bad) fadds dec fsubrs dec in out jg or mov clc mov std out ss ror adc addr16 (bad) ficompl shlb or cmp ss mov (bad) out cmc fcomip (bad) clc cltd pop push or mov dec fadds out cs mov scas jmp jnp or lret dec sti lret insb push into lcall ficomp or cmp adc jbe fbstp push pop clc mov call xchg add in add jb outsl mov scas js (bad) (bad) out jbe add push ds nop lods and sub (bad) adc into inc (bad) (bad) (bad) pushl leave fucomp adc mov cmp into pushf mov (bad) (bad) (bad) pushl cmpsb bound and ffreep adc cli adc xchg push incl (bad) (bad) inc jl imul bound mov or xchg out mov (bad) (bad) (bad) mov bound lods mov xlat aaa insl dec out fbld adc ror push lcall aam fcomip push cld pop repnz push leave (bad) pop ffree mov mov (bad) pushl ficom or test fisubrl add loop lock mov hlt push pop insl xchg decl or jp push push or ret subb inc ljmp cli ljmp adc xor push lcall add leave mov data16 sbb (bad) decl mov jge movsb pop mov mov adc inc or ljmp inc dec leave repnz and add mov into in (bad) dec inc inc pushaw aaa push scas dec (bad) (bad) (bad) ljmp push push or mov test fs ja dec rcrb add rol and dec (bad) std decl insb popa push jae and scas test test call mov or jl add lods lock das add mov jecxz or call call test lret popl (bad) pushf jb xor gs jge fildl pushl (bad) insb fiaddl cmpsl fs mov shrb mov cwtl js dec jbe ljmp push sarb hlt decl jmp push mov lods les or dec xchg lahf inc cld (bad) decl inc cmp in push pop fs int fnstcw jmp pop ja repz (bad) call (bad) adc leave pop xor in jno dec jbe pop push pushf inc mov dec stos pushf (bad) jg lcall adc pop push sbb (bad) (bad) xchg xchg sbb daa test decl in scas mov and (bad) xor jnp shrb pop mov call pop add fwait lgs mov bt loope divb insb and decl xchg or in fisub cmpl inc int3 cwtl jne push xor (bad) (bad) lcall pusha add or addr16 es dec or push fisttpll mov (bad) lods sub (bad) (bad) (bad) ljmp xlat mov inc lds mov adc iret sbb jp adc and (bad) (bad) jg xor data16 xor dec lret sbb add mov sbb push shrb loopne pop cwtl movd jl dec icebp sub imul ljmp pop (bad) sbb (bad) (bad) (bad) jmp loop cltd addl adc lret nop ret inc gs push daa adc cmp sub outsb and cltd repz jb adc or (bad) incl jp jae xchg sti jle outsl add cmpsb leave out stc and sub sub incl cld lcall xchg add mov pushl pushl cld fwait jbe sbbl add push addr16 (bad) pop orl (bad) incl lock in lods adc mulb xor xchg inc pop nop mov mov (bad) (bad) (bad) fisttp inc cmc mov push sbb lock lock add loop mov xchg or sub and (bad) (bad) (bad) (bad) decl rolb push xor sbb sti ss (bad) call mov orl sbb mov xor imul idivl outsb in xlat loopne loope sub int3 add adc sti (bad) divb sub sbb inc ljmp ss jns xchg jbe cmp sti insl jle fucomp fsub or xor xor (bad) test stc adc leave jb xor cmpsb test jnp add stos (bad) (bad) (bad) jmp adc mov mov sbbl add data16 jg stos cmpl push mov (bad) ljmp ljmp test pop mov pop rcr divl jg test inc mov lcall mov (bad) (bad) (bad) fnstsw dec stos jae lds mov daa aad outsb adc xchg cmp call out mov sbb hlt rolb addr16 lcall xchg pop and ljmp cmp and xchg mov sbb test jmp mov or fdivp pop jmp mov nop cmp pop lret aam mov push shrl incl lret sarb mov mov pushf lea (bad) push out dec int3 rcrl dec dec mov sub (bad) inc cmp ss cltd bound and mov mov mov scas cli call aas lea popa xlat daa fdivl aaa jle cmp cmp pop jge outsl add js insl mov mov mov std ljmp in xorl (bad) lret or pop mov hlt jne sbb fmull (bad) (bad) (bad) jmp pop andb cmp cmovns cld cwtl xchg lds addr16 repnz scas and (bad) (bad) push inc cmp or jbe ds mov ss repz sar (bad) (bad) jnp out inc mov aaa xor or ljmp jmp cs sbb and scas adc lahf loope mov (bad) cmp push aad (bad) xor int3 fnstenv pop std (bad) (bad) jbe int3 es call jle dec cmp (bad) jmp cmpsb mov loop sbb mov repz xchg lods push (bad) fcomip jg fldcw ds cmp sbb addw (bad) in (bad) (bad) (bad) incl aaa (bad) call das ljmp cmc inc jmp fiadd psubb hlt jne (bad) (bad) (bad) (bad) mov or mov push jae cli mov pushl push push adc test (bad) (bad) pushl insl jbe orl scas or inc data16 xor sbb popa mov fwait mov aad sbb jg cmp (bad) push adc ds push cli daa mov add (bad) (bad) mov daa or cmp cmp jg popf or (bad) fcos xchg loopne xchg (bad) pop cmc pop test clc lcall jp popf test daa (bad) (bad) (bad) pushl aas aad cli in push aas (bad) mov in inc in and cmp (bad) outsb arpl (bad) in (bad) (bad) fadds push and loop sub cmp sahf movsl repz cld adc (bad) (bad) incl mov sub fmul adc enter mov xchg fstpt cltd lcall test (bad) jmp jno movsl dec dec xchg pop jae fisubrl inc adc fstps mov mov ljmp add xchg xchg mov bound gs and xor (bad) (bad) decl pop stos push (bad) fsubr sbb jno imul stos sub (bad) (bad) (bad) jmp xor and movsl pop call or sbb out movsb sbb bound and (bad) sbb (bad) (bad) pushl adc pop adc push fwait cmp xlat xchg and (bad) mov ret add (bad) jb andl pop (bad) fadds pop cs mov lods mov (bad) decl sub pop dec and les out mov inc ret fdivrs xchg (bad) (bad) (bad) jmp adc lods add mov nop dec loop push xchg mov cmp mov adc loop mov pop dec mov xor nop mov (bad) cld lcall cmp mov inc cwtl mov xchg out insb mov (bad) pushl nop push int cmpsl sbb pusha ret push nop adc cmp cmp (bad) (bad) incl push jns push sbb cmp cmpb adc aad out pop or pop sbb xchg jns mov (bad) (bad) jmp mov enter imul mov sub lcall jg bound decb cmp call jmp cltd dec andl rclb xchg xchg lds mov jg (bad) lcall insb lods popf mov sahf pop fwait das movsb mov lea sbb (bad) decl hlt xor loope jbe ss push cs xchg xchg test (bad) dec fiaddl jmp lcall adc mov cwtl dec jns dec mov mov fcoms mov inc pop cmp (bad) (bad) (bad) incl jb xlat mov loopne dec adc jle add fiaddl notb incl add int nop shll pop push movsb loopne sbb call dec xchg push inc push jne pop std lret xor imul pop or notb aam mov push jb and ret pop test sub mov (bad) (bad) mov xchg dec or jbe insb ret cli cmc sbb mov push and ljmp xor scas lcall insl inc and int3 push jg (bad) pushl sub jne sub int cmp push dec repz sub (bad) (bad) call leave arpl xor and or mov xchg or jle mov (bad) (bad) decl sbb pop push mov add mov test mov cmp aaa ret ds mov cmp test add pop mov (bad) (bad) decl mov jmp cmp jp fcmovb xor xchg enter call clc (bad) (bad) jmp lock pop sub lods sbb mov cli mov loope int3 push scas cli ja mov js outsb pop jb gs lret mov jmp (bad) call in mov lods mov (bad) and xchg cmp inc add jl sub adc ljmp pop repnz out inc pop inc daa dec lahf inc pop jno,pn mov (bad) (bad) or xchg inc pop inc mov lods enter mov add (bad) (bad) (bad) lcall lcall enter xchg out in mov push mov or xor dec call jg (bad) incl ljmp ds lea mov les inc cld (bad) call mov mov sbb dec mov add ljmp jge adc sub je push cld cltd lock insl cli imul sub nop fwait aam test ss ljmp push lds push sub pop cmp cmpsb adc pop push dec xchg add repz cmpsb insb loop cs lahf stos inc pop mov mov mov jo fwait push xchg xorl fs sar dec cwtl fiadd ret cld or nop inc cld popw ljmp (bad) (bad) (bad) jmp call mov inc sub popa pop lds xchg iret xchg mov xchg movsbl sbbl and daa bound test stos outsl (bad) push incl cld incl out lds push xor fwait (bad) pop mov mov (bad) (bad) (bad) ljmp ljmp in test insl insb aam adc adc or ret ja xchg or iret mov xchg mov adc pop outsl (bad) fdivrl push xor cmpsb jbe (bad) (bad) (bad) call test sub popf mov mov pop or (bad) and cld mov mov shll xchg leave lcall jecxz xor out lahf cmp xchg sbb (bad) (bad) out mov lods sub lret aad inc (bad) fcomi dec popa (bad) or in in (bad) mov push pop ret lods cmp xchg rcrl xor leave not xchg mov lret mov popf adc mov and imulb xor cli mov decl push add je add jecxz pop sub inc xchg push inc cmpsl push or (bad) (bad) (bad) incl jecxz mov pop aad mov or jns scas sbb out rcl sub (bad) (bad) (bad) push repnz scas bound pop push jno mov mov jmp das aad jecxz push out lret mov (bad) (bad) ficom (bad) cmc xchg mov mov dec xor (bad) (bad) (bad) call out in pinsrw divb enterw sub imul jo (bad) enter inc inc push in in not sbb sbb insl (bad) subb (bad) (bad) dec faddl popf push inc cmpsb sub inc push sbb xor adc mov enter cmp imul lcall ja sbb cmp adc cltd in inc ds fst add push in (bad) (bad) (bad) call sbb ds push pushf xchg mov loopnew icebp add jbe ror mov dec call adc (bad) pop lea mov stos mov cld ja xlat lahf push jae pop mov xor das es test adc aaa push pop mov (bad) (bad) (bad) decl pop (bad) (bad) adc rcrb mov ret mov jg mov add dec in out lods sar cmc mov sbb (bad) (bad) (bad) (bad) inc pusha lret dec dec pop xchg jae and arpl (bad) jo xchg imul (bad) nop jg or imul inc sahf clc enter add and jle enter insb pop cmpsb loopne,pt (bad) (bad) (bad) dec repnz pop push mov cmp into pop sbb mov mov movsb cmp (bad) ljmp xchg fdiv data16 cmpsl cmp ficompl jg icebp jl (bad) (bad) (bad) (bad) aas jecxz pop fisttpl lea dec dec pop movl or mov cli add shlb aas shlb sbb xor inc mov mov (bad) fldenv xor xchg mov xchg in cltd (bad) (bad) (bad) (bad) jmp outsl int3 mov cmpsb inc aaa mov dec pop loopne push sbb fsubl mov lcall decl mov push shr push pushf xchg repz mov js stc pop xor or (bad) out xchg mov adc and jge sub dec leave ljmp cmp test outsl imul aam das mov mov idiv (bad) decl sbb hlt stos lods fdiv (bad) sbb cld stos rorb lret ds and cmp pop push pushf jbe data16 paddw mov jmp push (bad) fistpl mov outsb xchg inc mov hlt call and (bad) (bad) jg or sub loop (bad) jnp ret xchg mov inc sub pop jmp (bad) loop es mov (bad) and cmp xchg dec (bad) mov mov gs mov (bad) (bad) (bad) pushl cld jp pop mov pop int dec gs dec imul dec xor dec cmp pop icebp ljmp call icebp mov lods xchg jecxz dec in cwtl dec cwtl cmp lcall mov out xchg xor or data16 inc jl ds ljmp dec adc out loopne aas sub or lgs pusha (bad) or daa fisub daa pusha int3 outsb pop sub xchg repnz out stc movsb cmp adc fsubl jmp mov lock in mov dec jge hlt mov cmp cmp jae (bad) (bad) lcall sbb or repz pop or sbb jno or jecxz mov jmp rcr mov adc or clc push sar ljmp xor and jg inc mov push adc (bad) cwtl (bad) pushl in daa and daa out nop mov cwtl ljmp cli rcl lock (bad) decl add in and imul and pop inc inc adc ljmp stc sti addr16 jo out mov mov or scas cli (bad) mov shl xlat in mov (bad) adc jecxz cld add (bad) ljmp mov cmp imul pop aam iret insb and data16 push adc (bad) (bad) (bad) call pop imul pop jmp mov sbb shl mov pop cmp (bad) (bad) jg shll sub lahf mov lret pop in mov jle or (bad) (bad) (bad) lcall outsl cmp cmp jne ret out jno sub rcrl repnz fldpi rcll xchg jl or (bad) (bad) call mov dec (bad) sbb mov add addl or shrb (bad) mov or xchg sbb loop aam out inc add shlb mov sub inc sbb clc jmp aad bound push lret adc movsl arpl (bad) (bad) (bad) decl xor pop and xor xor or mov pop test enter or (bad) (bad) pushl bound pop shl sub inc popa xchg add scas inc push int3 and inc push call lcall icebp add into inc cmp nop xor call and and pop sbb mov ret ds shlb jg incl stc cltd and loop push jbe push outsb (bad) addr16 pop cmp dec and (bad) mov mov arpl inc faddp cmpl js in or hlt (bad) es std lods outsb in data16 push or movsl inc and stc iret mov lock push (bad) (bad) (bad) jmp inc push loop lret adc mov add shlb or int3 out sbb (bad) (bad) out xchg adc stc lret jle pop or cmpsl fs push pop test cwtl int3 test push sti ja mov jle (bad) incl push mov fisttpl adc sti pop xchg fcoms push cli jge (bad) (bad) (bad) incl fisttpll pop daa lcall push sub adc faddp mov mov fcomip adc xchg lods je cmp or xchg inc inc pop jg (bad) call adc js int add stc mov aam xchg inc repz mov mov shl push pop xchg sub sbb inc imul clc lahf push dec outsl clc out cli xorl in sbb (bad) in in int3 ljmp xchg (bad) xchg lods lret dec inc pop lock dec es ret loope or aaa (bad) (bad) (bad) ljmp test jb dec repnz cmp repnz (bad) sbb pop les outsl data16 (bad) push out outsl pop or mov mov adc sub repnz jle (bad) (bad) incl mov cmpsl xchg or nop mov or lcall mov int3 jns outsl and (bad) (bad) cmp push inc cmp dec xor inc out add out lock mov add inc test fs shll fidivr jo sbb (bad) sti cmpl mov sbb (bad) out cli lock sub jl or jge sbb fisubrl iret lcall (bad) (bad) fbld push and dec dec adc lds jmp lods fidivr (bad) or dec rorb (bad) pushl jnp xor or dec cmp cmpsl into cli mov mov bndldx or ds push leave xchg jl das arpl add push push lods jae arpl pushl (bad) (bad) ljmp test jae pop push jnp repz mov jne sub bt scas stos outsb mov lcall lcall andl mov xchg mov xor lcall (bad) decl pusha cwtl in fildl loopne je pop dec adc cmp call lcall pop insb dec sub notb in fidivr jmp por into aad push in jno test aas cmp or sub inc inc lcall movb repnz aad fisttp jmp nop pop inc jg fwait rclb (bad) call rcl push je inc pop inc out aad insl pop fbstp test dec sub or int3 call sbb roll sub jp sub scas sub movsb shlb mov (bad) bound jae into xchg stos aaa lcall and inc pop fsubrl (bad) (bad) (bad) call jge cld mov inc scas mov dec adc cmp in sbb mov mov stos jge (bad) (bad) (bad) jmp push xor mov fstl in (bad) repz push and shrb imul movsl cltd loopne enter popl push imul repnz test fisubrl lea inc (bad) (bad) (bad) (bad) mov adc adc aad dec popf cmp lret pop mov inc (bad) (bad) (bad) decl mov cmpsb in out cmpsb es push xchg cmp stos add lcall in pushf xchg and fucom jge dec xchg ret jo dec inc or mov fnstcw in lret add jne push (bad) (bad) (bad) pushl pop arpl cmpsb call cmp maxps mov or (bad) (bad) (bad) ljmp mov jmp aaa sarb popf cmp xchg mov sub xchg mov (bad) ljmp xchg aas bound ljmp or mov mov jns (bad) (bad) ljmp loopne gs mov fisub lds in testl (bad) push shl cmove (bad) daa call mov popf jmp adc das (bad) (bad) decl fdivl push aaa cmp cld in jmp mov fwait pop pop lcall cmpsl pop repz jne (bad) shrb cli xor imul jnp (bad) pushl cld sub rcrb inc pop rorl daa in daa (bad) ljmp insl sbb mov mov xor cmp (bad) (bad) (bad) call jge cmp mov lea insl int3 inc cli in push rolb loop loop pop leave sub (bad) (bad) call shrb (bad) mov inc leave cmpsl mov mov (bad) jae andl test pushl shl stos out sahf cmpsb jp outsl push mov int int icebp cmp aad ljmp idivb mov sub push in arpl aas (bad) (bad) (bad) decl mov sahf sbb scas dec data16 dec lret lds push sub mov pop rcl push fcomip (bad) call (bad) movsb pop outsb dec inc scas (bad) test or dec fmull (bad) (bad) (bad) (bad) mov (bad) call int3 mov je xor cmp ret mov aad (bad) (bad) (bad) lcall xchg mov cmpsl mov xlat and mov dec sbb sbb sub (bad) (bad) incl enter cmpsb push cld out mov and cmp in imul xchg adc mov fisttpl stos test lods repz aas pushl xchg jbe stc dec leave fcmovnbe sbb jge push push mov rcll push jns int3 cld sahf cmp (bad) (bad) (bad) jmp (bad) cwtl or cwtl fisttpll test dec mov scas hlt sbb mov and xor (bad) (bad) jmp pop (bad) inc lods mov lock mov roll push jns cmpsb inc jne call jbe (bad) cmovge dec (bad) divl pop (bad) (bad) jg lock dec dec lret fs std cmp jae mov push out pop (bad) (bad) (bad) (bad) incl cmpsb out push pop mov mov pop je inc mov sub fndisi(8087 cld fdivl inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov movsb ljmp das sti lret (bad) fildll jns push mov sahf das (bad) (bad) (bad) call mov mov ds scas ljmp cmp sbb aam dec aam loope faddl int xchg cmp (bad) (bad) lcall xchg pop icebp frstor pop xchg and decb imulb add mov call mov adc lcall fsub mov je or pop pop add hlt (bad) pushl stos lahf ljmp sbb in int adc inc cmp adcl arpl mov push xor jmp jae add sbb incl test pop out or movsl cmovae inc cmpsb (bad) (bad) jg mov subb mov sbb call or mov or xor (bad) (bad) (bad) aas jge sbb cmpsl fsubrs or test xchg push cmp mov cld pushl mov sub cmc fwait add mov and pushl cmc (bad) and cmovno lahf xrelease idiv inc sarl or pushf inc jg (bad) incl xchg sub push push jp sub push or (bad) pushl imul popf ret pop aad out movsb pop outsb cmp test (bad) (bad) (bad) jmp lcall xlat and adc std into icebp into popa movsl inc push cmp movsb cwtl (bad) (bad) (bad) lcall test mov jmp std xchg jne sub push sub jno movsb arpl mov inc xchg dec (bad) jg sbb sbb shl sti dec add jmp pusha sarb call lea dec add out or stc daa ror loopne mov int3 cmp (bad) (bad) (bad) lcall sbb dec into or sahf (bad) xchg orl pop and push movsb outsl add inc inc enter push lahf mov inc jmp ljmp jmp (bad) (bad) dec in (bad) fdivrl fcoms adc lock mov jb out cmp out mov inc dec (bad) (bad) jg movsb mov adc mov ret fadds cmpsl loop mov cmc aad cwtl rol (bad) call cltd ljmp inc jbe xchg jbe cltd lret stos mov andps xor cmp std xchg lcall (bad) (bad) jmp movsb xchg fwait jmp aad mov scas (bad) pop xor (bad) (bad) lcall push cs cli fimull enter rclb inc sarb xor xor fwait mov xadd (bad) aam mov cli mov push fwait cmp (bad) decl mov mov cmp cli mov jo sahf or rcpps hlt fmul aam push or pop call ljmp inc in mov lock (bad) cmp push mov or fidivr lock pusha or mov mov cli or jl push out push jge push mov jg push add fmull (bad) or addr16 inc movsl aam cld rclb ljmp clc das cmpsb push je aam jbe mov pop inc adc push pop add lret (bad) (bad) (bad) ljmp xor xchg dec jmp push outsb nopl mov sbb cli (bad) decl fnstsw ret or test repz lcall pop in (bad) repnz mov mov mov sbbb (bad) mov (bad) dec in nop ret inc popa aam xlat in (bad) cmp push inc and cmp lcall xchg dec jno adc insb (bad) push test mov test mov nop or jg test lcall out push mov mov lods xchg ss mov cmp call in mov outsl (bad) pushf mov (bad) (bad) call mov test scas or mov dec pusha lods mov pop mov hlt test mov daa pop (bad) scas adc jne push adc add cmp jno movhps (bad) fild fsubr and inc dec test pop stos cmp cmp dec xchg (bad) incl nop stos xor push fstpl lods mull sbb sar jg into cmc cmc es push add test xchg push adc pop or add in inc (bad) roll in (bad) (bad) decl xor fisubrl xchg and clc push fwait push adc mov pop push sbb (bad) jp pusha and mov outsb es mov out fsubrl ret in push xlat xlat jmp lock (bad) ljmp or ljmp push scas arpl test (bad) jae mov ffreep ja mov pop (bad) cs sbb sbb rcr js cltd das lock (bad) push out test in adc dec addr16 push insl out xchg ja call or mov incb je insb out cli (bad) (bad) cmp mov xchg pop add and lret (bad) (bad) (bad) jge sub int sbb mov mov add scas nop push popf loopne in scas hlt andl push sub add pushl bound popl rolb dec sbb inc scas ret addr16 (bad) (bad) (bad) jmp scas (bad) xadd fidivr dec add (bad) lods test dec mov jl (bad) xchg xchg push fsubrl and (bad) (bad) ljmp mov icebp insl dec jb sub pop or push orl in push mov (bad) mov jmp xchg mov cli xlat jns daa cmpsb outsl or dec mov push xor (bad) (bad) (bad) ljmp mov rcrl test outsl adc push xor out lods mov xor mulb cmpsl mov sbbl test push pop push bound mov mov dec (bad) xor mov push imul (bad) (bad) lcall or sbb insl jg ljmp ja dec push fld scas clc ljmp dec xchg xor std and gs sub repnz das fimull add mov jle sbbl push pop (bad) cmc (bad) push ljmp call mov enter stos lcall push pop jo in movsb lods hlt scas (bad) (bad) (bad) incl loopne js mov and mov xchg push dec sub stos sbb jmp mov inc data16 insb fsubs cwtl hlt ret mov (bad) (bad) call cmp (bad) xor aas test cmp or ds cmp adc hlt loope xor push mov xchg inc std (bad) (bad) lcall mov test push arpl iret sti pop cmp and pushf fscale or pop rcll lcall cmc mov rorl data16 (bad) pushl or stc push inc adc xchg or (bad) lcall sub cwtl orl (bad) popa ret xchg test ljmp (bad) insb clc (bad) (bad) lcall and daa pusha sub jne leave xchg or dec cs xor fisttpll sbb mov xchg xchg stos jno icebp repz push jo sbb out out fcomip (bad) jmp xchg jl mov fbld roll xor ja pop mov sti inc fcomip (bad) decl xor shrb lods ret pop sbb ret outsb inc jnp (bad) decl (bad) (bad) xor pop (bad) adc cld pop (bad) (bad) call push hlt lock mov cmpsl jb push mov cmpsb gs sub push inc lahf pop xor out dec mov hlt push (bad) loope pop lahf pushf push testl xchg xor rcll jmp popf cmp outsl sub xor adc push adc sub add jmp (bad) (bad) call jmp pop (bad) jl lea lahf cmp movsl in (bad) xor mov (bad) (bad) call lret std cmp cmpsb adc xchg xchg pushf mov pop xchg jbe mov jmp fisubr inc es add decl (bad) (bad) cmp cli (bad) out (bad) mov jmp dec js into inc daa sbb std (bad) (bad) call mov fmuls cmpsb xchg aas xlat jl jg jae mov push notb push imul xchg mov (bad) jg add mov add push add insl cwtl mov dec jecxz lea hlt (bad) incl add push leave sbb adc (bad) incl ss arpl hlt pop pop cmc jg dec cmpsl std fildll jg mov (bad) mov neg addr16 jge jns out lahf mov int iret jl idiv pop lret fbstp or adcl pop mov test ja dec aas enter out (bad) (bad) (bad) jg push incl das cmp pop ja xor stc or leave xchg pusha push popa dec jle mov arpl repz cmp fstpl push (bad) jmp pop jne (bad) dec popf pop and cltd (bad) jbe (bad) (bad) (bad) lcall add popf ljmp out push out das ja cmpsb cmpsl jbe (bad) (bad) (bad) push adc insl dec mov jns dec mov cld arpl mov xchg mov lahf std fstpt (bad) jmp mov sub in push jne test sarb idivl jb out or (bad) (bad) call lahf out jmp cld pop push xor sub mov arpl xchg sahf xor call push jmp test ja inc mov bound add xchg push (bad) (bad) (bad) call fcoml pop cld jmp cmp repnz (bad) rorb jns xchg out inc jmp (bad) (bad) (bad) ljmp sarl lock aas sbb fdivr lds insb and jp jp insb incl lea lock es add mov add cmp add jp fbld fsubl mov in xor sbb (bad) (bad) (bad) (bad) (bad) jmp inc sbb (bad) mov mov xlat sbb roll loopne push shr mov (bad) incl adc dec scas repnz and nop int (bad) mov pop mov pushf (bad) (bad) (bad) ljmp stos jmp ret jmp inc sbb in add cmpsb and dec mov push mov in stos jmp iret (bad) (bad) (bad) jmp xchg js inc cmp out bound pop out lcall cmp ss and js inc sub in (bad) (bad) cmp lcall dec adc jg (bad) cmc sbb jne arpl (bad) (bad) jnp jmp nop jg in mov out hlt orb arpl jle adc notl movsb (bad) mov outsb lret push sbb mov jle hlt xor cmc jbe ljmp sti pop stos cmp gs xor inc in data16 dec jo xor (bad) jmp aas insb jg xor adcb iret or xchg add std or sbb (bad) (bad) (bad) ljmp jecxz jmp cli dec (bad) pop (bad) (bad) lret xlat cld jns lock dec (bad) mov mov xor (bad) (bad) jmp lds cmp dec pop (bad) pushf jae mov stos mov mov lcall movsl push pop int3 and (bad) jp adc cld jecxz fiadd test sarb lret clc (bad) decl push sbb push xchg sub stos xor jb cs push mov je aad pop jp (bad) clc push jge rcrl inc inc imul std fisubl out push lret sub inc movsb js mov inc std pop int or jnp mov icebp call sti dec scas daa pop sbb mov leave or ljmp cli sti hlt ja mov fdivs in push sahf pop js mov loope aad ja nop imul inc sub fnstsw out pop rcr nop lds mov add ror pop (bad) repz std pusha sarl lcall (bad) call sub cli loope pop iret adc ljmp loop std mov push cmp nop jne (bad) (bad) (bad) mov test call mov data16 out dec dec addr16 pop pushf mov ss test hlt mov sbb xor adc push cmp fisubl dec arpl dec aad loope sbb out sub xchg or sbb add rcrb ljmp (bad) push dec popf enter es aaa gs lods (bad) shrl jmp (bad) (bad) (bad) mov (bad) dec cltd out int lock icebp xchg lahf icebp (bad) mov push or inc (bad) (bad) (bad) (bad) cmp add ficomp push and mov dec jo adc (bad) (bad) (bad) ljmp add jp loope sbbl mov repz inc xchg mov aam lcall xor mov add enter mov push sbb (bad) jmp leave xor jecxz pop ja inc push sub in gs jl ja fidivrl insb dec cmp decb mov int inc in adc pop jecxz pop stos sbb pop and (bad) (bad) ljmp in enter mov andl push in ret or inc add cmp jbe sub enter pop (bad) (bad) (bad) call inc push repz push call fwait lods xor mov xlat sbb cmpsb jge mov add xchg or ss adc (bad) (bad) mov mov clc xchg clc xor fsts xchg sbb push or decl dec ret push femms xor incl pop push test (bad) (bad) (bad) jmp aas lds idiv call cmp aam jge sbb jmp add in (bad) sti (bad) (bad) lcall (bad) divl dec sbb inc imul shrl outsb and cmp mov insl (bad) (bad) (bad) pushl (bad) imul push fcomip mov mov cs dec push dec fimul (bad) mov jp imul (bad) sub sub xchg mov subl cmp xor cmp stc mov sub popa test add inc iret mov mov mov adc mov jb es dec int (bad) mov aaa ds cld (bad) pushl mov (bad) add iret cltd jae fistpll ds pop (bad) (bad) fcomip mov in std mov mov test jg inc push incb aas cmp (bad) int3 cmp ljmp push add imul lret (bad) stc into fistpl sbb stc mov enter or lods dec xchg sarl popa dec movsb adc aas jg popa mov ret (bad) (bad) (bad) incl arpl mov sub pop imul or cltd cmpsl mov add (bad) jg test pop lods data16 mov sarb push out ljmp mov xchg sub or mov cmp test stos push test (bad) (bad) (bad) in pop ret (bad) ror push test rcrb xchg dec stos xchg add mov ret sti (bad) (bad) call lret rcrl std roll mov pop int popf stos inc push (bad) (bad) (bad) jg pop fsubrs ds out mov aas fistp insl pop xchg outsb sub ja pop mov int mov mov mov mov mov pop mov add mov repz mov inc std mov cmpsl pushf nop dec pushl mov insl pop mov out out lods outsl fistp push mov (bad) incl sarb sub scas sbb out sub cmp leave fnsave inc lods mov int (bad) out xor je outsl clc sbb sub (bad) (bad) (bad) dec or insl (bad) and fisttp lock fnsave add cmp xorb (bad) jmp xor (bad) fstl mov sbb aam lahf add xchg fnsave out stos mov cld sbb test outsl (bad) mov sti inc or jp inc test mov imul insl stc pushf (bad) (bad) (bad) call mov sbb divl mov repz xchg in or in xchg popf hlt scas dec (bad) (bad) (bad) ljmp cs lea push add pop xchg scas mov je or mov insl mov cld push mov sub rcll push or fistp jae in jo call incl cmp (bad) test iret movl and clc int3 test (bad) pushl sahf cmp scas sbb sub add pop sub xor (bad) (bad) jg sbb jp mov or dec test ficoml mov stos fsubp (bad) call ljmp sbb jecxz jp stc xchg or jne (bad) inc pop (bad) inc inc popw int (bad) imul pushl or mov or push test nop popf cmp stos or push lea add cmpsl mov or (bad) mov outsl clc ljmp (bad) inc lds pop pop imul aas call ffree outsl mov (bad) call xor mov mov add sbb lods fst (bad) (bad) (bad) incl in rcr scas out jb mov ljmp push cmp shrl jns fbld cli aaa sub jae dec push bound pop out add ljmp mov lods mov outsl xlat mov pop pop je imul idiv add out mov cmpsl sbb cltd push mov (bad) jg (bad) (bad) mov push jne test and adc (bad) mov mov (bad) jl test outsb push xlat jbe scas sub mov push fild into clc incl xor jbe movsl push sbb push insl lret jae lret mov scas repnz stos mov adc out fucomp adc add decl pusha aaa xchg mov lock leave pop test jl pusha jnp mov cwtl or inc fldcw push (bad) call fcoms sub iret mov (bad) (bad) decl mov mov inc test push movsb nop jbe xchg into je add sar fistpll lret outsl xchg and mov inc movsl inc or call push mov push mov icebp (bad) (bad) (bad) (bad) pushl mov pop sbb dec in aam or ljmp push mov aad outsb movsl dec xor or pushl or mov mov ja (bad) mov push in cli js (bad) (bad) pushl xchg sbb addr16 inc (bad) shrl jle jns cwtl inc pop mov ljmp (bad) pushl mov pop call jbe mov mov test add (bad) jg (bad) xor pop hlt loopne lods pop push pusha stos test es loopne sbb (bad) (bad) (bad) cld pop pop outsl sbb pusha mov call ficom mov (bad) jo std xchg mov pop out inc or call (bad) (bad) pushl out je outsb cs mov pop dec pop cmc mov je negl (bad) (bad) decl mov push (bad) mov or sbb jg (bad) (bad) (bad) mov jg (bad) jne aam xor sbbl cld (bad) (bad) jmp into lcall into add nop push and dec jmp (bad) cmp cltd or sahf lock sbb in shlb sbb jnp pop jb xchg dec (bad) (bad) fisttp aad int jg into pushf idivb mov dec aad repnz xor pushl fnstcw out push inc subl push fdivrp jo inc (bad) dec enter (bad) pop loopne repz pusha jp sub mov push (bad) (bad) (bad) call dec jbe pop pushf xchg test or push ror leave cmp sbb arpl rorb (bad) jmp mov adc pop push jnp mov xor xchg inc das arpl jns movsb movsb pushf outsl cli (bad) jmp or daa sub fcomi xchg mov lss dec (bad) jmp push mov inc mov push cltd out enter and fnstenv data16 loopne mov jecxz jmp mov jo pop (bad) incl mov out cs cs dec xor cmp jbe (bad) (bad) (bad) (bad) cmp test imulb inc je in jecxz mov mov aam ljmp dec push das (bad) (bad) (bad) lcall test mov lods cmp aaa cmp loop mov pop xchg jecxz lcall sti jmp repz jg sbb xor mov add je cltd std cli pop xchg xor into (bad) and mov pushl (bad) jg dec pop xchg mov into ds and loopne mov and ret pop icebp (bad) cmp sub mov fdiv pop fucomip push (bad) (bad) (bad) mov (bad) cli push (bad) pslld (bad) movsl enter aaa xchg inc dec jnp sar (bad) decl mov mov std int3 lea cmp jnp loope jnp (bad) ljmp (bad) dec iret js mov mov sub (bad) (bad) (bad) decl push inc dec push cmp mov icebp sahf divl sub stos sbb sub or fmull pop out (bad) incl xchg jmp (bad) or mov mov mov jbe push sti xchg xor in dec mov (bad) (bad) cmp cld adc inc sub mov rcr dec xlat mov aam pop lcall (bad) scas sahf xor lds jle lea push icebp inc loope jg (bad) jns fsubp xchg adc lret xor push sbb fildll test (bad) clc inc call xor adc ds loope call dec js scas das push jno cli inc arpl roll (bad) (bad) (bad) jmp pop dec jns fnstsw mov imul xchg sub xchg dec cld (bad) (bad) decl in sub adc push int3 xor mov mov xchg lcall ficompl mov xchg mov push push in and (bad) decl (bad) jecxz xchg inc movl adc jp push mov mov adc daa mov loope lea mov mov movsb cli or (bad) (bad) lcall and cli sub mov pop insl repz imul (bad) (bad) (bad) incl aaa movsl xor add (bad) jo jge dec push or sbb xor xor (bad) (bad) (bad) call add out sbb enter out xlat or jle push fidivr xchg (bad) (bad) (bad) jmp or ret dec out std or test imul outsb push stos pop std (bad) (bad) (bad) ljmp insl pusha rolb mov mov hlt mov mov outsl add (bad) (bad) lcall pop imul adc push pop mov loope rolb push xchg sti out leave sbb cld lcall call mov sbb inc inc not pop xchg add adc (bad) (bad) pushl mov divl push dec sti and fwait mov cltd ljmp arpl popf inc outsb mov push insb test jge sub mov xlat call ljmp aaa (bad) mov adc mov movsl addl fmull test (bad) (bad) jns and cwtl mov outsl test sub iret lock mov outsl xchg (bad) (bad) (bad) ljmp aad out rorl jns cmp xor fs push dec imul popa push and (bad) (bad) incl outsl out js mov gs jge add repz xor repnz or call adc (bad) aam jmp mov pop (bad) in int std push push jmp push movsb movsl icebp sar jae pop incl cld popf cmc adc and sahf dec stos cmp cs ljmp cmc pushf pop test push sbb mov sbb mov mov mov (bad) call in shl mov cs fsts ss arpl fsts push inc or mov cmc pop cmp xor sbb pusha imul stos mov jmp pop pop adcl mov xor stos dec mov js scas sub (bad) lcall aaa mov es mov sub aaa callw dec xlat pop push pop jns add pop das mov call loop add fldln2 xor in push jbe or mov (bad) call cwtl lcall loop xor mov push pop add stc cmpsl nop imul (bad) (bad) mov mov push cmpsb jmp pop sub rcrb (bad) (bad) (bad) incl xchg cmpsb icebp pop pop cmp ficoml xor pop vpsrlq sbb mov dec cmpsb mov (bad) mov ficomp sti push xchg (bad) mov lock xchg push out inc and js mov push fs (bad) (bad) (bad) jmp adc rcrb fdivrs dec push out cltd lea cmp es (bad) (bad) (bad) jmp nop in insb xor repnz (bad) fisubrl push pop lods scas into subl (bad) (bad) jmp scas loope dec jae push mov add hlt and jg decb sbb pop xchg push dec xor inc inc xor sbb push xor ret (bad) (bad) call movsb cmpsb or adc bound jecxz xor sbb sbb push (bad) (bad) (bad) jg dec (bad) mov pop hlt leave roll pusha test lods movsb push mov addb (bad) xor hlt (bad) sbb cmp mov lds incl adc push ds imul in into adc scas imul xchg xchg lret daa test mov push or jecxz ss loope (bad) (bad) (bad) lcall cmp sbb sbb negl (bad) lock cmc sbb scas xchg enter cmpsb or sarl jp fidivrl mov daa pop clc sahf mov imul (bad) (bad) jg jmp in mov rcrb aas fstl pop cwtl aaa cmpl scas std test fsubl inc (bad) (bad) (bad) dec andb mov sbb add cmp cld mov (bad) (bad) jmp or cmp or sbb ss aaa adc xor (bad) jg (bad) out call pop sbb mov mov lahf add add adc ret push pop nopl std fstpt (bad) incl jns add lds std inc jbe cmp xor mov push pop jp (bad) (bad) jg notl les and in or inc inc cmp je xor (bad) (bad) (bad) decl ljmp sbb mov jae rcll adc (bad) (bad) (bad) jmp jecxz and add test outsl and aad add (bad) mov (bad) pushl dec sub js cmp or mov mulb cmc shrb daa cmpsl into add decl xlat xchg enter call das clc mov cwtl inc pushf loopne cmp push push call (bad) scas sahf inc test push (bad) (bad) mov mov test jae enter lock (bad) (bad) (bad) (bad) fxch adc ret add or clc dec (bad) repz or test dec inc jo pop xchg (bad) mov sbb repz adc mov scas clc (bad) (bad) cli or js dec fs mov enter push cld sub push add fdiv jmp dec xchg cmpl cmp js stc bound cli (bad) (bad) incl jp (bad) int3 cli out jnp js dec je sbb test push (bad) (bad) (bad) call gs jne xchg sbb sub sbb (bad) cmp test mov lret (bad) (bad) (bad) jmp xor xor lds ficompl push in xor clc fs xorb stos jle iret lahf mov xor decl out mov xor sbb mov insl (bad) aam shlb (bad) (bad) jmp lds add jle add leave iret cmp imul push inc repnz pop mov xchg mov and mov aad push xchg inc jo push xor rclb (bad) (bad) (bad) inc inc rcrb sub loope or (bad) cmp jmp dec je jle sar (bad) pushl (bad) mov ss fmull cld mov adc add call dec lock push sti xchg adc popf mov arpl inc cbtw aas es decl lock xlat pushfw popf sbb jno (bad) (bad) (bad) decl je push pop cmc fdivr pop add ss cmc jle js mov xrelease in (bad) mov xor sub fstpt dec out pusha ret push pop add decl out enter sub (bad) fwait mov hlt sub dec mov mov icebp push mov xor adc push cs (bad) pushl push shrl push insl adc cmp das and lahf data16 add je sbb pop aaa ret aam push push (bad) fldenv (bad) lcall jnp cmpsl jge cwtl cmp daa inc fiaddl js sbb lods mov into mov mov pushl sub adc (bad) call add stos push adc (bad) lcall mov add sub and dec mov outsb cmpl lahf dec movntps popa fadds outsl cli (bad) ljmp lret repnz push ret mov pop insb aas xor inc sbb fdivl (bad) jg test into cmp shr jbe adc (bad) pushl fcomi add sarl or or dec push stos inc or loopne mov mov pop xchg push xor sub adc (bad) lods lods incb dec mov loopne sbb adc int cmp cli stc call jmp inc xchg in or cmpsb xchg mov fadds (bad) lock and jbe (bad) mov (bad) (bad) (bad) call insb dec jg lret mov mov pop sub loope sbb push mov popa decl pop push push and ljmp (bad) mov push mov ss std jg cld insb add jl lret sub mov (bad) (bad) decl sub aam dec icebp xor addl arpl (bad) (bad) decl (bad) mov dec pushf dec pop mov imul adc das adc cmp popf or in xor jnp lock dec cltd adc xchg sbb ret mov fistpll push pop addr16 mov mov cmpsb movsb pushf add jle rcrl mov (bad) (bad) lcall mov and ja mov subl inc mov mov mov nop es jae shrb push mulb xor adc (bad) (bad) (bad) jle dec lret clc mov and aas mov adc out test and pop roll pushl pop clc cmp cli (bad) cli inc jp mov outsl test (bad) (bad) (bad) (bad) (bad) inc (bad) jbe sbb push stos push cmp adc inc jno out jnp mov (bad) (bad) (bad) (bad) (bad) mov hlt shrl jmp cwtl hlt jge cmpl ds inc das sahf push cmp (bad) jns cli fidivr (bad) jae pop xor (bad) mov out hlt aaa (bad) aaa cld sbb stc ds insb or jecxz and popa sbb xchg xor (bad) (bad) jmp jmp jecxz mov jge mov lea inc mov dec out dec enter loop mov pop mov mov pushf or jp jl mov (bad) (bad) fiaddl fadd (bad) mov test scas add cmp call mov jae out iret sub iret rorl lret (bad) (bad) mov sub pop outsl inc stos aad dec xlat sahf push sar sub sbb pusha pusha push and (bad) lcall decb sbb xchg out ss loope mov (bad) mov leave mov (bad) (bad) (bad) (bad) mov jns,pn inc push scas inc (bad) cmpsl negb fildl and das sar sti sbb adc inc sti inc mov stos enter xor mov dec testb dec out cmp notb loopne pop jae pop adc ret mov (bad) aam adc mov lret cld add xchg jb pop in (bad) (bad) (bad) (bad) fstpt outsl cmp pop inc hlt adc shrb adc out sbb in xorps mov ja jo (bad) (bad) (bad) fdivs fstpl (bad) jno mov jle jmp icebp aad in (bad) mov test (bad) sub lock sub mov xchg hlt pop xor out imul xor imul (bad) (bad) (bad) cmp inc push jno pop pop test shrl and push mov (bad) lret imul inc dec cs pop mov xchg xor loopne test loop adc (bad) (bad) inc inc mov dec int3 xor xchg push mov pop inc inc adc xchg mov inc in rcll rorb cmp out add (bad) (bad) fmull dec and and stos sbb mov inc add mov (bad) (bad) incl movsb xor cwtl ret into and xor in add roll cltd add and xchg inc sar (bad) mov (bad) cmp mov lea dec add mov js (bad) (bad) ljmp and fiaddl iret pop pusha or lahf jmp scas jno mov das pop inc iret jecxz mov cld test add popa scas test (bad) (bad) (bad) jmp lds pusha cmp push hlt jg adc xorl lods mov push mov clc (bad) (bad) incl push adc adc (bad) fstps pop popa jne sub mov dec xor jecxz loopne popf (bad) push push cmpsl adc cs pop pusha cmp mov rcr inc push mov icebp in add mov pop (bad) adc orl shll ljmp sbb out lret push scas (bad) inc dec sub xchg cwtl sbb sub lea int ljmp out out popa nop fnstenv jno pop mov pop je sahf mov int (bad) (bad) (bad) call sbb sub mov call lcall or es push (bad) lcall xchg xchg popf ret mov and cmp in xor jl movaps incl push or push jbe and orb rorb cmpsl (bad) (bad) (bad) decl jb fwait pop dec rclb cmp mov mov out mov leave jb shrb (bad) (bad) (bad) lcall jmp insl xchg dec fmuls loop or mov jmp lcall clc in (bad) jnp sarl xchg or or add cmpsb loop (bad) pop push or sub arpl mov inc mov xor add jl daa mov inc push and mov mov lahf and push bound pop mov (bad) (bad) (bad) decl adc repnz sub xor mov mov cwtl sub sub and (bad) (bad) jg xor xchg dec (bad) rol add imul cwtl and cs sub lret call lret jno jbe cmp xchg xor dec rcll mov push popf inc (bad) push xchg loopne mov (bad) incl sahf xorl sub inc adc xchg insb sbb push lea cwtl decb add loopne fs shll (bad) setge pop jmp add xor dec xor dec adc mov lret jb xchg and xor sub js dec daa rorl repnz (bad) xor (bad) (bad) call jecxz js xchg add push xor lcall sub xchg inc inc daa pop hlt (bad) call arpl rol jb cmp add nop dec xchg mov dec loop inc push xchg (bad) (bad) (bad) jmp aam push rol call cmp xor cmp xor mov test dec (bad) (bad) incl or pop and lahf cmp dec pop rol xor sarb sbb nop das add sti (bad) (bad) pushl out addr16 sarl jmp xor sete push jno push dec jae push inc cmp (bad) mov sbb push or out incl sahf ret mov clc (bad) fildll pop mov or ror add xchg outsb js sub xchg (bad) mov repnz daa pop shrb jecxz (bad) (bad) cmp dec lret inc cmpsb xchg roll fcomps push or into sub adc mov ds pop sarb sub mov mov mov xchg adc aam call sub dec xchg xorl (bad) ljmp pusha cmp xor sbb lret popf pop loope mov jns cld aam mov (bad) (bad) pushl ja and sub bound jns sub adc (bad) (bad) (bad) pushl adc ss jo cmp and add insb jmp hlt cmp fistp sbb dec mov or outsl add and and dec inc test mov cmpsl jbe,pt idiv decl adc inc je in mov mov cmp or (bad) ljmp sbb add stc rcrl pop cld call mov std mov (bad) (bad) (bad) ljmp (bad) cld sarb sbb mov add mov (bad) (bad) (bad) decl enter push mov pop inc mov push or push xorl subl sbb or mov (bad) sbb aam repnz sti mov aaa cmc (bad) out clc mov nop rol add cmp mov sbb sbb lock fildll sbb xor cmp sbb addl pop nop mov ret fldl jno add adc orl (bad) ljmp mov fcompl inc xchg xchg fcomip aad std in ficomp ficompl (bad) jae (bad) (bad) lcall and les mov sub scas scas pop out jp in jnp insl icebp pop arpl (bad) jg stos (bad) repz js jecxz push lock xor (bad) (bad) incl in int sub fiaddl cmc inc and (bad) (bad) ss fnstsw in (bad) (bad) (bad) (bad) jle fldenv imulb repnz push dec sbb pushf mov cli and icebp out loope ret inc hlt adcl (bad) dec cmp (bad) pushf pop sahf lods jle sarl mov push loop mov (bad) (bad) fild outsb jne ss pop push fcmovu bound stos decl push jnp fsub (bad) (bad) (bad) mov mov in cmpsl adc inc push sub daa mov inc (bad) (bad) fbld mov jno sub xor mov inc mov (bad) (bad) jmp lcall fcmovbe dec jle aad inc fisubrl test loopne roll xchg sbb pop or (bad) lcall jecxz into mov cld nop xor pop out mov mov dec and and sbb fcmovne in xchg pop (bad) (bad) (bad) dec jbe call out xchg sbb push lret or mov sub (bad) pop sahf fldcw fdivs je (bad) out clc repz int push int3 les xchg out lcall fcmovne ss (bad) (bad) (bad) (bad) aas fmull add sub das aaa fistpll shr rcl mov xor idivl (bad) out adc (bad) ljmp fdivrs or xor fcmovnbe pop test mov mov (bad) (bad) (bad) decl jg mov inc sarb scas xchg adc jp out jecxz sbb sbb (bad) (bad) call out xchg mov aam sbb and and jp test xchg cwtl arpl int data16 mov (bad) (bad) fcmovbe in cltd jp lods jge and repnz fcmovne aad outsl push cs lds (bad) (bad) (bad) ljmp repz mov mov dec mov sub mov xchg movsl sbb sub call jae in inc mov sar mov aad pop movsl jecxz fstps adc outsl (bad) (bad) jg fcomps mov sub iret xor out sbb mov and sbb (bad) (bad) lcall mov mov mov xor jle cli adc movsb mov pushl leave arpl ljmp (bad) push shr dec (bad) (bad) ljmp pop push out leave test pop mov ja fdivp dec js (bad) (bad) (bad) call fbld or (bad) iret aas pop xchg fadds pop lret dec jp repnz dec mov (bad) outsl clc decl lret int inc fidivl jl,pt decl repz loop add incl pop loope jne jle ds es xchg sub push out jbe (bad) (bad) (bad) (bad) ljmp fs mov popa xor pop pushf xlat fdiv lea or (bad) sub cmp aad repz xor ljmp inc (bad) roll pop icebp (bad) int adcb adc fcompl inc xlat dec das (bad) repz idiv sti test loop (bad) (bad) jg push pop rcrb xchg aad pushf aaa test lea pop lahf out out push ljmp call cli mov xchg push push xlat ret xchg out xor scas xlat and cmp iret (bad) (bad) (bad) decl xchg out push cmpsl jp (bad) gs rcrb outsb addr16 sbb jae dec call dec div (bad) (bad) (bad) decl ds pop movsl mov aad aaa cmpsl pop insl rcrl inc outsb cld mov dec rclb (bad) dec pop sahf dec (bad) repz jp jno jb pop pop sub cltd push dec (bad) cltd (bad) (bad) (bad) call shrb (bad) mov xchg adc stc cmp mov xor into mov int setle cli or in (bad) in fisubl mov cmp cmc daa movsb mov ret fwait sub sbb sbbl and (bad) mov inc (bad) pop cmpsb mov pop std or push pushl lcall xor cltd jbe pop jbe sahf cmpsb add inc and enter (bad) lcall add addr16 daa cmpsb push sub sub mov or (bad) dec or mov imul movsl add cld rcrb out out pop inc xchg ret cmpsl mov jmp data16 mov mov xor shlb fisubl in pushf xchg mov icebp out (bad) cli add out cli (bad) (bad) jl inc sub mov jle lret (bad) lock div enter push jnp dec mov mov mov xchg negb mov jmp aaa push (bad) fwait xchg and fldt push lods mov mov fidivr mov fcmovbe subl std (bad) lcall sbb (bad) mulb adc add xchg mov shll mov mov sub cmp hlt mov ret shl je xor fdivrl sti call pop xchg sbb sbb sbbl cltd cmp ret add outsl fwait push and sbb into mov repz adc add aas ds mov cmp std call inc jae dec jg jae pop mov mov mov push xor out lock mov lcall ret (bad) dec xchg in and add xchg cs (bad) (bad) pushl xchg (bad) scas add inc loopne repz outsb mov push mov jg outsl cmpsl in pop daa cld (bad) (bad) dec mov sahf mov loopne push sarl lods in mov repz out xchg add (bad) mov mov pop pop loop sbb jo int3 sbb push sbb add loopne testb or fmuls lods xor jo call outsb add cmp shlb dec inc cmpl add out (bad) movsb jg inc fisttpl pusha push fildl clc call add (bad) pushl lds into push cltd fnstenv dec inc add jl xlat dec in imul (bad) (bad) out inc and add xor mov add jns push push inc pop nop icebp arpl sbb icebp mov mov test push imul and cmp (bad) (bad) jg decl negb lods pop inc (bad) int3 inc fstpl fwait jl jno (bad) (bad) fcmovne jo scas pop mov loopne daa push dec dec fisubrl (bad) idivl shrl push (bad) (bad) (bad) adc sub jb test cmp ds out and mov popf pusha xor mov scas mov adc das cli pushl adc fcompl ret jl xchg repnz imul pushl push or out add inc mull call lock sbb add sahf jle lock iret stc loope into pop hlt (bad) pushf testl int jle add out arpl in mov repnz and add (bad) (bad) call (bad) ficom cmp js ss fadds ss xor decb (bad) incl xlat loope jmp and mov ltr sbb into bound repnz adc mov inc (bad) int mov jmp clc inc add add out and mov dec jle mov or (bad) outsl jle jl lret or int3 cmp jbe stos sbb xchg add push insb stos sub sub jg jb dec push jmp incl push push aas insb out negl cmovae sahf aas (bad) (bad) jg (bad) cmp cwtl sbb cmp out lret cmp jnp fwait loop aaa add mov (bad) jg xchg mov inc xchg and (bad) dec xchg (bad) lret dec or insb (bad) (bad) out cli jg lock jnp mov sbbl inc flds pushf (bad) scas (bad) pushl addl mov (bad) push push fwait inc fistl push lea scas push into lock (bad) pushl bound ret js loopne cli mov push or and fxch aam out (bad) (bad) jmp movb dec xchg loope fiaddl leave outsl and jmp loop aad lcall cli sbb cmp sbb aad out ficom and stc mov (bad) decb pop xchg ret ret js fstl push repnz bndstx mov push daa mov jge sub cld (bad) (bad) incl xor mov leave fnstcw les mov (bad) push jecxz,pt xchg icebp (bad) (bad) jp push mov nop lock push xchg lcall sub (bad) (bad) (bad) out ds sub scas outsb cmp push dec add fs sbb outsb ds lods ja mov jns xchg mov das call decb add shr push pop insl movsb movl (bad) inc rorl jp out xchg (bad) dec out jnp sbb cwtl lahf popf cltd cmp sbb adc in cmp xchg ljmp popf popa clc shll (bad) (bad) (bad) call mov pop aam (bad) aad fildl (bad) shr xchg adc out aad dec xchg pop push (bad) (bad) (bad) decl mov sahf or hlt stc mov lret push sbb movsl sbb cltd aam subb enter jp ljmp cmpsl outsb inc outsb push jne mov jns xor popf test pop pushf or mov aad dec loopne in lock cld idiv pop aas xor pop daa mov mov push das xchg lcall fmull cmp test int in jnp push test das negb or mov clc (bad) jmp (bad) ss mov test shll lods inc mov (bad) (bad) decl int3 popf in ret jmp and insl (bad) sahf shll cmp (bad) (bad) cmp fwait xor jge cmp aaa test jnp jl mov add std push add (bad) (bad) ds addb fmul push lcall mov adc (bad) mov in je je movsb sub lcall (bad) (bad) (bad) (bad) ljmp out enter pop sub dec mov inc (bad) negl (bad) (bad) jmp sbb es mov addr16 push inc mov arpl stc scas stos adc jmp sub sbb inc jns or (bad) call cmp pop push jg sbb out fcomi cs mov mov inc (bad) (bad) incl push mov cmp push xchg fidiv insl mov fsts or js fwait (bad) lcall icebp mov in cmpsl leave fbstp ds enter mov jae movb (bad) hlt jl jg hlt lock (bad) fldcw add sti mov lods inc outsb pop scas fbstp jnp icebp xchg hlt (bad) (bad) (bad) jmp and in inc or xchg pop mov aas subl jg adc adc std pop inc mov ret outsb popf lcall dec movsb (bad) sar (bad) inc (bad) popa lret rcrb add pop (bad) mov mov or fidivrl jg cmp popf lods mov je sbb scas mov out dec xor xorl (bad) (bad) lcall (bad) sub adc push cmp cmc mov hlt pop sub (bad) ds int fisttp sub xchg (bad) mov jp or cmp inc pusha fdivr cmp pop idiv (bad) incl or fs jl xchg jbe mov hlt arpl out shld adc push (bad) (bad) (bad) incl (bad) xor (bad) enter jg cmp lret mov push repz imul call or and cmp lds cmp (bad) sbb iret jle inc outsl add (bad) cmp xchg push ja xchg inc fimul lcall push fldt xchg shl cmp push bound call fbld (bad) mov sbb pop gs (bad) (bad) jg jecxz aam cmp imul les xor jecxz sahf lret bound iret xor incl push jecxz sbb jbe rclb push mov cld jb inc pusha int jl cmpsl (bad) push xor test loope push and out (bad) (bad) decl roll sbbl push es frstor sbbb add add inc xchg bound jbe jle imull lcall ja (bad) ljmp rcl xor (bad) fistpl fistpll movsl (bad) (bad) (bad) inc pop movl xchg outsl orl lcall ja inc clc pusha std xchg cld pop std jge sub ljmp cmp (bad) lcall mov mov mov data16 mov inc movsb mov adc dec jmp addb scas aam loopne mov (bad) (bad) call shr inc fistpll push xchg sub add mov test add dec sub sbb (bad) cmp jne cmp pop mov inc test mov xchg lcall add (bad) (bad) jg je adc push popf xchg arpl and push addr16 push mov mov (bad) jmp lods mov mov mov int3 mov jbe pop out or jg (bad) ljmp fcoms jne xchg mov xor shlb ds roll ljmp lods aaa pop cs insb pop mov jo add cwtl push (bad) incl insl pusha fsubrs jne insb add cmp adc mov mov jmp stos mov stos (bad) mov test adc fxtract cwtl out test (bad) (bad) jmp jge jne inc (bad) mov sub ljmp movsl mov imul cmp mov jmp mov std adc test add add fsubl mov sub mov (bad) (bad) (bad) ljmp adc xor leave lock cmp cmp mov cmpsb dec (bad) (bad) (bad) incl loopne sbb test lods scas jae jns in ret lods std sbb (bad) (bad) (bad) (bad) in add pop rolb mov cli test inc pusha sbb push jbe pop rclb das clc les add (bad) das pop out test adc stos sub test (bad) pushl movsb mov std movsl pop push xchg bound dec and xchg cli out mov dec pop add arpl (bad) sbb dec ret (bad) (bad) (bad) (bad) std (bad) ret sbb cmp add stos shll add mov rcll xor (bad) (bad) mov cmp inc pop dec mov ds (bad) mov (bad) (bad) (bad) lcall scas fsubrs sbb sti test lea (bad) or addr16 lret pop movsl js (bad) fcomip xchg (bad) (bad) (bad) call into popa mov sub (bad) lds xchg outsb orl int3 xor (bad) pop (bad) jg call add push negb fildl ret shrl sbb mov imul adc mov insl lret loope jo mov pop hlt (bad) (bad) (bad) jle call out out cmp sub inc cmc mov dec mov (bad) jg (bad) push outsl lret out jge shlb cmp or inc (bad) (bad) (bad) jmp mov mov int mov mov scas mov imul xchg jbe enter (bad) (bad) in aad out pop add (bad) mov das test out pop into out pop (bad) (bad) (bad) (bad) mov push sbb popf fildl inc dec daa inc out icebp adc sub inc (bad) (bad) (bad) decl mov outsl idiv mov js mov adc lret and cmp jle push icebp mov jl xor leave loopne mov push and (bad) call sub or sahf mov les jmp jns cmp (bad) (bad) (bad) incl xchg insl (bad) mov or mov mov mov sahf pop pop addr16 popf dec imul sub mov gs cld ja sbb inc push test aam stos sarb dec rcrb (bad) (bad) ljmp les pop repnz mov fsubl rcrb push inc idiv xchg call mov and aaa mov push mov fnsave ja push jae (bad) (bad) call out (bad) mov loop test mov jns iret popf mov lock out mov fstpt (bad) (bad) jg pop sbb aad iret sbb fcmovnb pop jae in fdivr loopne sub enter (bad) jmp rorb mov gs push rep sbb sbb leave incl call pop mov incl out jbe int mov ljmp es push fcomip (bad) (bad) call in psllw stos xchg jns lods jno call lret push imul or decb insb mov outsl cltd xorl scas xchg test jae add scas (bad) mov (bad) pushl cmp enter mov rclb mov mov insl pop push test (bad) (bad) decl sbbl (bad) pusha jmp sti sbb test ret gs and pushl mov lock sarl and mov or lret mov movsl sarl (bad) (bad) incl pop xchg pop cmpsb push lret fdivrs mov movsl sbb les mov (bad) (bad) (bad) jns (bad) cmp jle dec mov mov sub ret dec jecxz fdivs in pushl std pushl cmp stc xor inc pop xor mov mov scas (bad) (bad) (bad) ljmp test mov jb sbb jmp jmp and dec inc mov pop dec sar outsl mov mov int mov pop je (bad) (bad) pushl lock mov in std fcoms js inc sub cmp sahf in (bad) (bad) decl mov push push add xor mov (bad) lock incl and movsb cmpsl daa adc lcall xor fildl mov incl jl mov addr16 fnstenv addl (bad) jg cmp xchg jns cmp imul pop jns mov les (bad) mov stos push xchg lahf add or std cmp mov push fsin adc dec imul push (bad) (bad) (bad) pushl jno xchg pop outsl rcl lock fbld loopne loope jnp fdiv fisttpll stc ret (bad) (bad) decl inc inc inc xchg cld mov (bad) fisttp test in (bad) (bad) decl lock dec jp mov test fisub xchg push (bad) (bad) (bad) lcall lahf fdivrs inc (bad) push pop or cmp jge sub sub add cmc lea test mov icebp (bad) decl rclb loope mov in ficompl rcrl add cmp xor jmp pushf lcall push mov out xchg out (bad) ljmp xor jns loopne jne pusha (bad) push push popa mov roll adcl fisubrl add call jno mov outsb jne xor ret pop rcll fcmove mov cs es mov outsl (bad) ljmp sahf dec adc xchg ds pushf test inc sbbl ljmp cmp fidivrl ds adc mov sahf fwait and cli (bad) decl push pop out in int jno scas leave jge ret mov and lret mov inc ja pop lods sbb (bad) jg xchg in fcomip mov push lcall xchg add (bad) call pop outsl dec push arpl aam fsts dec test xchg dec ljmp test add cmp rclb addr16 mov xchg test jae (bad) (bad) push mov call jecxz cltd pop xchg (bad) stc add test into rolb das into sub iret cmp (bad) push (bad) cmp mov repz std out icebp mov adc insb or aas cld fisubrl (bad) mov cmp adc cmp jge ret rclb mov rorl (bad) (bad) pushl clc adc test popf jne or xchg addb adc adc sub mov add test jl push mov loope stos js cmp test dec cmp adcl mov jl cwtl inc rcr mov (bad) movsb pop or (bad) (bad) jmp icebp or inc push (bad) stos inc mov sub cmp ret adc aaa xchg pop ja (bad) ljmp inc push repz mov xchg adcl lret mov (bad) incl clc dec sub mov xchg pusha dec pop or adc (bad) mov inc movsb mov or in dec mov push push mov sbb rcrb or aam mov es enter mov push pop rol xor mov bound cwtl cs (bad) (bad) ljmp adc jecxz adcb pop xorl jno xor mov (bad) (bad) (bad) mov sbb dec add xchg sub sti mov (bad) (bad) (bad) lcall (bad) pop cwtl push loope (bad) add or xor mov push in (bad) (bad) ljmp cmp mov jb push pop add popa cmp mov push add in bound ret decl add inc pusha add pusha pop (bad) mov shlb ret fs xor inc (bad) (bad) decl movsl mov inc xchg addr16 or xor (bad) (bad) (bad) lcall or cli push jg sub mov cmp movsl xchg dec int3 in cmpsl adc out clc cmpsb adc xchg push inc and es mov (bad) (bad) lcall mov jno xor hlt and dec outsb mov mov jmp (bad) lcall mov shl pushf (bad) cmp pop clc inc (bad) repnz pusha push pop aad (bad) (bad) jmp mov xchg aam inc and mov and push out out sti jo iret movsl movsb (bad) (bad) ljmp fcompl loopne xor push test sub or dec fs (bad) pushl int3 sub leave add icebp test xor sub xchg pusha aaa std (bad) incl cmpsl mov push push js fcomps (bad) and flds lcall nop dec jle stos cli or repz stc push insb xchg push movsb mov outsl cli add sub out push cld insb push sub mov xchg in xchg sbb adc adcl jne aaa ficom push dec (bad) idivb mov test call out mov push sub pop mov arpl xchg and adc (bad) (bad) (bad) inc push data16 push adc sbb and notb push je jmp ljmp pushl lods dec xchg push dec dec adc jmp (bad) lods stos inc push push dec nop adc fdivs sbb int3 jecxz push xor test int3 lcall jo test addr16 mov adc mov daa cwtl (bad) mov add rorb and push test jge sub aad xchg xor shrl enter aas inc ds decl pop inc popa sub jns cmp and insb cmp (bad) call cwtl es xor pop pop pop xchg adc push mov pop inc into (bad) (bad) (bad) fldt mov and out stos dec inc cld adc xor mov (bad) (bad) (bad) call nop sub dec and push clc pop imul push test mov cmp mov insb mov test ss pop lock jg into test in dec out dec add fnsave jl or xchg ds call fcoms sub push sarb test cmpsb adc pop adc (bad) or leave gs push cmp bound sub aad push inc push push ud1 sbb pop pop mov (bad) (bad) push sbb insb pop sbb iret jle push cmpsb stc das inc pop cld push pop aas jo adcb out push outsl cmp mov mov addr16 les add outsb dec aas jnp frstor scas xchg hlt push scas jp mov jp out fsubr lods rcrl out mov dec pop jns mov jae mov and pop mov scas imul cmp mov mov shrb mov xlat aad or data16 dec loop sar (bad) (bad) pushl jge and mov dec push das shrb cmp in popf adc imul mov lods pop xchg lods jnp idiv pushf ficomp shlb (bad) (bad) (bad) mov je cli fistp mov repnz popl (bad) cltd jle (bad) (bad) (bad) incl out imul mov jge rcrb scas pop xor gs lock jbe movsb aaa repz outsl decl addr16 ds fdivl out addr16 mov out cli (bad) jmp decb ljmp xchg (bad) xor in cmpsb jae jo (bad) (bad) (bad) (bad) (bad) ljmp jle (bad) mov mov or jle lock int enter (bad) incl sti add sbb mov sbb lret ret push cmp int3 iret js adc (bad) call cld loope ss (bad) fsubrs xchg add out mov ficom ja out mov out sub (bad) (bad) ljmp stos mov mov outsl add sbb or push adc (bad) (bad) (bad) (bad) fxch mov int jg jb mov movsl cmp fistpll and cmp add (bad) js sub cmp outsl xor xor data16 (bad) (bad) incl hlt clc subl pusha push ret xchg jnp sub pop test xor fwait popa (bad) (bad) incl lcall push negl xor sub push adc mov je or lret xor mov jno and test (bad) (bad) decl rcr jl lods out push add loop fldt movsl lahf mov add imul mov push (bad) dec dec shr dec pop or gs add insl push test cmc inc es mov cmpsl mov fisubr lahf insl mov enter es divl (bad) (bad) (bad) cli lret mov shll add ret ljmp loope pop mov (bad) push lods mov (bad) push into jno leave enter fst sbb adc fs and adc std out xor dec push jecxz mov lcall pop cld (bad) (bad) incl js jl mov dec dec int lods (bad) scas fs add pushf (bad) lcall and movl fs loopne andl (bad) decl adc cli pop cvtps2pd js sahf insl ja xchg add dec jecxz aas outsl sbb outsl iret movsb xchg sbb pop cmpsl (bad) (bad) (bad) dec fisubr std or sbb xchg add sub inc stc mov pop mov popf je (bad) (bad) (bad) (bad) jmp (bad) arpl mov and das (bad) popf pushf loop or insl das push jnp lcall das pop pop (bad) into int3 adc dec scas mov jns fnstenv inc dec fldl pushl lods xchg push dec pop jb leave xor push movsb scas daa and jmp inc inc ljmp roll pushf cmp (bad) roll das clc (bad) lcall add jecxz rolb jnp ds out shlb popa (bad) (bad) (bad) jmp imul (bad) leave mov lahf push lea idivl ljmp jno sbb jbe test xlat (bad) (bad) (bad) pushl or pop cmpl xlat (bad) rorb int mov (bad) out jne fcmovnu imul (bad) (bad) jmp insl mov sbb sysexit in xlat test xchg int3 cltd das aad mov (bad) ljmp out mov jecxz ja sbb out rcl pop aam pop cmp (bad) mov mov jbe jbe out push pusha adcb bound or jg (bad) xchg mov lods jno cmp out lcall cmc mov mov or outsl jbe mov arpl lret xor adc stos ljmp imul and ljmp pop clc sub ljmp in sub mov aam cmp ret dec pusha mov clc (bad) ljmp mov adc fdivr ds in xor lock call fldln2 movsb xor cmp lock addr16 mov mov stos mov and push and (bad) (bad) (bad) jp jp or bnd jno dec and clc push jg rorb int3 xchg repz les shrb lods inc aad adc rcl sbb movsl stos xchg out dec das add xor pusha pop pushf adc aaa sbb les mov (bad) (bad) (bad) decl and xchg sahf lret inc xor mov test pop ret (bad) (bad) jmp cmpsl jno repnz bound add inc movsb xor enter sbb or aad xchg popa mov mov xor mov lods adc es mov add leave lock xchg cld (bad) (bad) incl lock dec sub jmp pusha jge pop or test sub lcall xchg dec pushf loope lahf and decl add cli push or xor fst jns icebp test repnz (bad) (bad) incl xor mov ret lret lret dec out mov xchg (bad) ljmp add daa mov dec (bad) xor pusha adc icebp push cld (bad) (bad) jmp in sub mov ret jae scas push lcall push sub popf or dec or or add lds jno int3 outsl dec bound dec dec mov add aam mov aam mov mov jecxz fcos (bad) (bad) ljmp or aas clc cltd out mov and (bad) scas sub push add js idiv (bad) jmp sar pop das in fwait pop repnz push sete (bad) cli (bad) (bad) pushl or pushf dec lock mov push ljmp mov (bad) (bad) (bad) out lods and rcrb xchg pop mov je pop imul adc (bad) (bad) decl loop sub cmp xchg inc addr16 shrb stc fldenv push or movsl cmp (bad) (bad) (bad) (bad) mov or test lret stos loop sbb xchg test xorl jp xor icebp decl push enter sbb ss mov ss mov cwtl into dec add mov mov pushl into xchg imull mov leave push (bad) sarl mov jo es imul dec (bad) jbe or jno mov clc imul dec (bad) cmpsl mov rolb daa push adc inc fmul xchg dec xor pop lock call (bad) jmp cmp jbe je cmp bound jb or pop lock jno cmpsb je mov arpl lock ljmp stos pop jns add rclb int out cmpsb fsub xor aaa push dec (bad) mov popf jl,pn add enter andl push dec repnz dec push movsl add or push mov data16 test adc pusha cli call popa adc lods xabort (bad) (bad) mov and aad sbb in cmp mov cmp cmp lea lret mov iret cmp ds rorb push std mov push mov inc loop stos sbbb add (bad) (bad) (bad) pushl sbb xor jmp fisub js pop add adc sarb (bad) pushl fsubs push push fsts repz pusha ljmp adc lret ljmp cmp adc (bad) (bad) (bad) cmp dec push in inc and movsl inc push cmp xor push pop xor mov or (bad) decl xorl nop nop sbb nop xchg jae in out add inc add jmp adc data16 inc test pop repnz (bad) pop adc (bad) mov pop mov (bad) xor out inc hlt push jle test lret pop (bad) (bad) jmp inc add sub pop add pop jbe dec push out add sbb jnp xchg insb cld (bad) call sahf or cmpsb xchg ret sub xchg lcall and (bad) (bad) (bad) cmp jl pushl in jns xor sub ss adc and mov dec add (bad) (bad) dec ja pop sahf or jno outsb cld xchg push lret ds lock test rorb (bad) (bad) mov faddl leave adc mov sbbb inc enter dec (bad) xchg mov out sbb ja mov dec idiv (bad) (bad) (bad) ljmp popl jecxz mov fdivrl shrl hlt xor (bad) scas dec mov scas cmp (bad) jmp cwtl sub repz lock dec pop (bad) (bad) (bad) call scas (bad) mov sbbb cmp jle jb outsb xchg movsl outsl scas xchg (bad) mov test pop rol xor daa jle addr16 (bad) (bad) jmp fs sahf loope fsubrl mov stos push in rolb std or (bad) (bad) push jmp scas cs inc inc clc test addr16 loop sti or call idiv dec (bad) (bad) jp ficomp xchg stc out pop (bad) cltd xor pop lods fwait outsb inc xor xor aaa push mov js movsl scas mov (bad) (bad) (bad) call mov fstpl sbb push ret scas cmp mov pop mov pop js pushf test (bad) (bad) pushl pop pop and lds addr16 pusha jge fadd das je insl or arpl (bad) (bad) fcomip popf cmpsb js sbb mov ficompl jecxz insl out mov insl sbb out clc imull stos loope mov mov fildl lock gs mov and hlt addr16 xlat lahf (bad) (bad) lcall int jle int movsb cmp pushf xchg ds aad sub int3 sub jae lock jmp mov es insb or push stos jl pop mov jmp ja pop sarl xchg loopne push lret shrl fisubrl jnp iret jl (bad) lcall repz pop stos push xrelease ds mov mov mov and clc incl and imul jnp daa jbe clc (bad) ljmp hlt stc lcall pop pop mov push int cwtl push sub lret (bad) (bad) ljmp ds jb and adc movsl out and inc add test or (bad) call lret iret arpl jbe and lods push cmp xor jle test (bad) (bad) (bad) call sbb loope enter push ret cli jmp jp add xchg mov mov jg jg (bad) pushl clc notb mov negl rcr (bad) cmp call (bad) ljmp out (bad) pop data16 out (bad) pushf cmp mov insl xchg mov stc mov mov and movsl imul aad in push xor (bad) (bad) (bad) inc jne repnz insb ret unpckhps inc pusha enter daa rol out adc divl pop jae mov (bad) call loopne icebp xor lahf in sti pop jl inc cmc xchg loopne xor mov (bad) incl call xchg cli lcall (bad) ljmp and xchg cmp test sahf sub cmp aam mov (bad) (bad) pushl mov pop popf aam inc mov test imul insb lock (bad) (bad) incl je bound scas xor xor mov loopne jmp adc imull (bad) (bad) (bad) pushl push sub gs sbb xor inc jbe aaa popf ds push (bad) (bad) (bad) call inc mov ficomp jne sbb repz inc cmp pop subss mov pop xor imul aad sbb dec dec push movsl adc (bad) push jae aad lcall cmp xchg dec (bad) mov aam jns sti out outsl xchg (bad) (bad) jg fs adc pusha inc or mov lahf and mov xchg and lret push (bad) (bad) ljmp push cmp ficoml xor cmp das pop jno aad incl insb stos fistpl dec dec pusha out lret (bad) or sbb or adc decl jge and fnop cmp in (bad) (bad) (bad) decl sub push jns pop lds into lods pop mov cmp cmpsl mov dec ja (bad) (bad) (bad) (bad) inc mov test lock sbb mov outsl jge stos sbb dec fcompl adc (bad) (bad) call sub (bad) ss add mov inc mov xlat xlat inc (bad) (bad) lcall mov imul push mov sub pop scas outsb ljmp test scas or lahf and xchg aas imul (bad) jg lock pop sti xchg adc lret loop imul xchg (bad) xor mov adc fwait and decl jle jp pop pop mov aad sub scas (bad) (bad) (bad) fist outsl xchg mov xchg aas mov mov ljmp cli jmp je fdiv aas ret xchg and push jecxz jnp mov jecxz (bad) lds (bad) scas clc mov icebp or cmp repnz stos js icebp call pop sti sbb call or xchg loop or or lcall fidiv in fildl fdivrp jmp cli (bad) jbe int pusha outsl loope outsb testl cmp cmpsb das jp mov xchg ja cmp fiadd cmp (bad) (bad) (bad) jge imul adcl (bad) addr16 loopne jmp jb jae imul hlt call ror jnp (bad) into adc out pop test pusha pop out rcl (bad) (bad) (bad) pushl invlpg int jmp out pop mov lods push test pop pop out push add lods mov ljmp and mull push cmp scas clc stos (bad) daa sbb sub loope and adc scas scas clc ja sbb mov mov jecxz fidivr sahf pop (bad) ljmp shlb sbb mov cmp mov inc roll mov repz sahf and lahf ljmp dec arpl ret pop icebp jne out cltd mov push out cmp icebp or aaa adc mov faddp fistpl jmp xchg sbb mov les inc enter incl jbe lea mov sbb (bad) (bad) adc pop aaa cmp (bad) jg (bad) call push mov in out pop xchg js and nop push scas insl scas repz sbb or inc sti inc aam mov int cmpsl push dec xor js sbb clc aad movsb (bad) decl stos xchg or cmp (bad) fcmove xor push scas xchg ja sbb (bad) (bad) (bad) jmp stos inc cmpsb jno add dec dec mov mov imul adc jp iret incl (bad) mov in or pop cmp clc cmp icebp (bad) (bad) (bad) call or pop imul fwait push ja fwait out sub ss mov xor sbb (bad) (bad) (bad) dec insb faddl mov inc les xor repz jns cltd out jl decl xor adc popf pop fisub dec (bad) (bad) (bad) (bad) mov add add dec out sbb aam outsl inc out jnp mov dec mov or (bad) dec mov (bad) (bad) incl jnp pop lcall xchg push das cmp loope dec aam jmp sub (bad) (bad) (bad) fstpt pop outsl (bad) pop nop mov cmp fbld inc (bad) aas shll or call rolb xchg lcall dec inc lahf lcall xchg and (bad) mov and jnp (bad) fcomip fidivrl jle ja imull add mov (bad) jg in outsb inc pop and sahf data16 cmp roll hlt lods dec cmp adc (bad) (bad) (bad) pushl add je or pop inc inc rcr mov cmp popa stc add in pop hlt fwait sub adc or cld jl jmp aas jmp lock fidivl (bad) (bad) mov aaa into add sar sub mov insl data16 imul outsb xor call nop add xor scas push mov jne or jl loop mov (bad) (bad) jmp das dec aad xor call shrb sbb jnp mov (bad) (bad) (bad) (bad) incl inc xor sub clc jg xor mov xchg mov incl popa js push outsl call sbb push cmp std ss loop mov push cmpsl dec xor stos jbe jmp clc sbb das sar call mov add ljmp sbb je rcr fildll scas cmp mov mov xor incl repnz lahf (bad) sar jnp dec cmp lahf mov shrb xor loop sub push aad pop and mov inc repz (bad) std dec dec outsb mov std (bad) inc inc xor sarl inc ja test push xor or push (bad) dec add arpl add sti jle mov cmc fistp sub sub push mov lret mov mov add sbb in jl mov in cwtl jbe jp ljmp adc test jle mov lahf mov test pusha and sbb rolb or jmp test hlt mov (bad) (bad) (bad) dec gs daa push xor push inc lea jae dec pop idiv mov xor pop outsb (bad) (bad) (bad) jmp pop sub push ja jmp mov xor adc pop mov sarl hlt bnd or (bad) (bad) (bad) push (bad) mov xchg rcll or sahf jmp xchg mov das mov dec daa (bad) incl cld mov lods mov scas dec mov stc sub pop notb (bad) (bad) (bad) (bad) fisubl stos jns xor xor mov fcmovnbe fbld cltd push xor xchg in out mov sbb (bad) test sub (bad) mov sub (bad) (bad) (bad) call pop gs ret (bad) (bad) lock xor lods mov sarl ror aas jns xchg jg inc (bad) std add pop push add in (bad) outsl mov (bad) (bad) (bad) (bad) pushl xchg dec cmp xor lock shrl pop cmp dec jae imul mov popa push jb sbb adc loop xchg (bad) stos outsb test out clc push xchg inc gs mov push xchg in xchg adc fcom sbb (bad) fisttpll ds pop adc call sub jmp stc lods insl jnp jp push push rol inc push xchg xor jne pop xchg loopne outsb clc (bad) ljmp mov fstl xor ret adc out (bad) jb jbe (bad) (bad) decl (bad) add jg in mov leave sub out jg lea (bad) out pop xchg mov std push cmpsl ret push insl add aad and repnz fiadd cltd ret (bad) (bad) call ljmp imul xchg jmp inc fwait mov mov imul (bad) (bad) (bad) push pop sbb fsubs mov cld iret xchg outsl rcr xor movsl push jmp xlat dec dec fldl xor (bad) ljmp mov push sbb ljmp xchg push or sbb (bad) icebp in push mov mov fild push push (bad) (bad) (bad) jmp pop (bad) ficomp iret (bad) jmp call adc aaa out pushf es (bad) (bad) pushl add xchg mov (bad) les into cs fidivl xor (bad) out clc ljmp inc pop pushw (bad) nopl pop lods sub pop (bad) clc and ret (bad) fwait (bad) decl mov add ja cmp adc sub icebp stos arpl mov mov (bad) (bad) (bad) call jp ficoml mov fild fs cs test mov call dec cld arpl ret mov dec mov push ljmp jle (bad) (bad) inc pop adc sbb in xchg inc lahf add xor nop cmpsb adc rcrl (bad) (bad) (bad) fsubp sti cld dec cli pop fstpt scas ljmp divl mov pop ljmp fldl push sbb mov mov push ret pop cmp call fmuls push cmc mov addr16 or cmp insl hlt and outsl and pushl int push clc mov in (bad) (bad) lcall mov lock imul lds insl cmp les mov jnp push adc inc aam std dec in mov add sti jl sub push (bad) sub (bad) (bad) ljmp fs out rcrl sub addl (bad) cmc ja imul jecxz jg and mov or sahf jge incl mov testb fisubrl mov sarb mov pop cmp pop cmp (bad) jbe movsl loop pop xchg (bad) cld (bad) incl and pushf rcrl xchg sahf daa jne stc enter mov int ja ds (bad) call and loope inc and inc push std cs mov xchg push push sar call cld in fistpll sbb fisubrl mov or (bad) idivb sti inc subb xchg and lcall ficomp repnz jecxz mov icebp in call stos push mov fmul sbb mov push and jge jl push cli adc (bad) (bad) jg int3 pop jge (bad) add sub (bad) mov push push push aas dec push and fsts inc sar (bad) (bad) lcall popa (bad) out hlt xchg mov cmpl ljmp xchg imul aad (bad) (bad) jmp shr sub mov ficoml popa push loope push mov (bad) (bad) ljmp mov or lods and or popa mov in dec xchg inc mov xor ss cmp movsb das movsl cmc sub loop insl sub call (bad) (bad) (bad) ljmp (bad) int3 push test adc xor dec stos iret and and (bad) decl shlb push jae cmp and jnp cwtl test ror roll enter lcall sub push add dec orb dec ljmp call xor xchg jle clc daa or sbb xor call cmovnp jne mov outsb xchg daa cli es (bad) (bad) (bad) pushl andl (bad) test lret rcrb push push or (bad) leave (bad) decl or adc push mov or cmpsl add lock int3 and xor inc mov inc lret push mov mov arpl rep les (bad) repz movsl (bad) call push rorb (bad) out bound xchg mov aad mov or (bad) fbld mov insl inc stos loope popa xchg xor and pop insb js xchg in adc inc jg add push sbb and popf sub je (bad) (bad) jmp cmp mov sub lret mulps (bad) (bad) push adcl (bad) (bad) mov out cmpsb mov lods push and inc test push ret jl jbe ljmp ljmp xchg loope lret js xor inc pop rclb arpl (bad) dec xchg enter (bad) ljmp fdiv inc xor and mov (bad) (bad) (bad) fstl data16 mov cmp add pushf add xchg cli out jle xchg fdivs cld (bad) call outsb xor mov (bad) bound adc je pop or mov decl (bad) adc lret pop js das imul popf inc mov dec xlat push push scas inc push mov (bad) pushl dec js push add adc dec xchg lea sahf pop clc inc mov dec cmpsl jge add and imul fsub jp aam jmp nop mov mov ljmp jecxz push mov jl,pn imul cmp lcall rcrb jle ret sub dec movsl enter jb mov sti add fadds (bad) (bad) (bad) jmp mov mov mov pop and xlat nop push je nop sub (bad) call sarb cmp pop test push in nop xchg inc cmp loop movsl clc adc iret test and mov arpl stos jo jge sbb adc test (bad) (bad) mov loopne stos sahf (bad) adc jns test sub sub pusha int out and incl push jno mov push sub pop dec and (bad) incl or sub mov inc gs ret lcall lea fildl or mov adc test jecxz lret aaa mov xchg sub (bad) (bad) call xchg insb test rolb fs xchg adc mov cmpsl push inc fidiv (bad) (bad) incl mov cmp inc jnp and ret inc push xchg mov cmp ret jmp aam inc pusha push or arpl (bad) fisttp rolb sbb mov aaa jge out pop cli push mov pop xchg out adcb inc clc add xchg mov ret int and addr16 fildll sbb insb sar (bad) pushl and push adc insb push aam pop and jecxz cmp mov outsl outsb test (bad) incl call ds and cmp push (bad) call call push cld loop dec nop pop sahf lds dec sbb lods ds add clc lcall movsl je jo and addl sti mov call nop cltd push mov push pop fmull dec sar outsl fs iret leave jge andl imul push jp repz mov stos jnp xlat jl clts jbe pop and cmp call pop jp add lds jge mov rcrl xor (bad) (bad) (bad) mov fwait jbe mov scas nop xor stos mov fstpt mov sbb ss (bad) (bad) (bad) js dec insl xor movsl sub lods push ljmp imul mov ds fcmovnu push clc std (bad) out clc out jbe test dec push sti lret rolb push push or (bad) lcall insl jo ret inc or fwait test push shrl (bad) mov push jns mov pop cmp mov xchg jg (bad) jg pop mov dec and mov adc dec insl inc loopne and sti sbb (bad) cli dec sub pop jg push jae inc call aaa lcall lahf mov (bad) (bad) (bad) cli adc in in les into xor fsubs xchg in mov es mov insb xor (bad) (bad) pushl xor test and bound fisttpl inc xchg dec loopne in cmp outsl nop stos repz (bad) scas fucomp hlt lret fnstsw adc bound (bad) and fdivrp mov sar iret lahf movsb ljmp movsb shll adc sbb or or arpl (bad) ljmp test mov jo jae into aaa ds cmpsl aaa into in clc (bad) (bad) call dec fmulp xchg cmp pusha mov dec lods pop stc or ljmp aaa sbb xor cmp dec or stc mov xor (bad) (bad) call pop mov inc cld mov mov jno mov inc inc in add stc mov mov into pavgw and jns cmp mov jp out in (bad) adc ljmp dec bound (bad) mov xor push das mov or call ljmp add nop xor jae fmul lods jge scas jmp aaa leave clc cli out add sub and jg cmc pop adc lcall dec xchg out push test ljmp cmc mov outsb addr16 mov (bad) (bad) (bad) out bound fcmovu imul push pop js lcall xor mov movhps cli (bad) fidiv sbb fbld in (bad) lds clc adc stos lods cli pop lock scas stos (bad) notb xor sti decl xchg (bad) fnstsw (bad) (bad) jb pushl pop xor inc je xchg sub (bad) ss aad jl (bad) (bad) decl das test lcall inc jge inc cmp sti jo iret (bad) (bad) cmp (bad) (bad) call jbe out jbe ret cmp push out fptan push mov dec xchg insl jle and jmp (bad) incl cwtl and loopne loope fst mov lcall fistpll mov fidivl pop sahf test arpl cltd je test ljmp cli (bad) jmp xchg pop sahf and popa sbb mov jns cmp xor notl call gs sti int3 stos cmp out pop dec or in outsl xor fimull inc mov (bad) lcall cmp push inc push (bad) negb les jp fildl int pushf (bad) (bad) (bad) jmp cmp sahf xorl stos lds dec pop or mov repz es outsl lock mov (bad) dec lock cmp xlat cld rorb push mov stc mov outsl pop pop inc cmp (bad) (bad) pushl iret inc xor aad lret sahf inc popl inc jno test xchg push daa dec in icebp cmpsb xor (bad) (bad) pushl mov cmp daa test das push les loope cmc mov jge gs (bad) adc (bad) (bad) pushl xchg lret aaa insb into popf das lahf cmp repz adc or decl jo clc dec aam jae xor (bad) ja (bad) in (bad) (bad) (bad) inc roll or (bad) jne lahf dec icebp test (bad) sti pop xor popa cmp and (bad) (bad) decl xchg pop das pop outsl cmp sbb not scas dec std ss add repnz daa int (bad) (bad) incl mov stos xlat out ds xor xor out dec cmp sbb cs pop mov (bad) (bad) incl inc mov sti or jl pop repnz pusha xchg (bad) shrb mov sar scas clc popa je ds in popf mov (bad) ljmp xchg in cmpsl and and (bad) je push cs push jmp fdivrp ljmp aam jb xor cmp xchg fucomip xchg sbb xchg data16 or mov outsb (bad) (bad) (bad) ljmp out outsl lds xchg dec xlat xor and mov or mov push pop lock (bad) mov or insl loope pop test mov out lods ds rcr xor movsl in (bad) (bad) (bad) jmp xchg push aas mov or jp mov push push jle dec mov psubusw (bad) jmp cmc cmpsb (bad) (bad) fcomip cwtl xor pushl ljmp out dec clc test outsl mov pushl cmpsl mov push jo jne scas pop and adc or add call sti push clc fisubr jl pop dec ret and imull or call push stos push (bad) (bad) (bad) (bad) jg ja cmpsb clc inc mov xor inc mov mov (bad) loopne rorb (bad) (bad) jg xchg stc test idivb bound jmp lock decl xchg xchg or jecxz std (bad) adc push jo inc stc ret pop stos aas xchg fdivr (bad) decl mov jmp fnstsw dec mov incl je xor sbb cs adc push callw (bad) (bad) (bad) call sahf or bound lea fwait mov push dec rorl inc or loop push (bad) dec out mov rorb mov cli (bad) ret out hlt xchg pushf ljmp cmp scas (bad) push test mov add xchg add xchg dec jl xchg in xor ljmp loope adc cld (bad) je test push mov and mov rcrb (bad) jmp add das add jae lods push lock out jb mov sbbb icebp dec clc (bad) mov sub sub rolb js pop or scas and jmp cmpsb ret and mov or (bad) ljmp jo sub loop popf cmpsb mov fidivl arpl jae js (bad) (bad) (bad) mov add rol add or pop or dec mov fisubr sub (bad) (bad) (bad) inc xchg add je jg cmpsl sub bound add pusha mov sbb clc arpl (bad) (bad) (bad) incl dec loop adc cmpsb ret push adc shr inc fldl repz lcall mov jmp and imul das test jae insb bound push mov sub (bad) (bad) lcall imul incl sbb lds push or in in in (bad) (bad) (bad) lcall cmc xchg imul xor cwtl or sbb iret push xor xchg adc addb and xor jg fsubrs mov fstps (bad) (bad) ljmp inc push ss clc jns adc cld xchg and dec ljmp dec and mov jno and rclb jge or lret imul ljmp pop cmpl lock jp lea mov sbb (bad) call daa or leave adc les clc andl mov xor (bad) (bad) lcall sbb dec rcr inc mov fwait stc mov into adc inc das sbb popa daa (bad) incl ret inc inc ret lock pop adc mov sbb scas and icebp add jnp (bad) (bad) lcall cmp fwait icebp and sub sbb fadds xchg cmp (bad) data16 sub lcall (bad) call clc xchg iret and sub (bad) iret xor xorl (bad) (bad) incl loopne loop les pop and push mov add repz scas push ret jo out mov push (bad) outsl or (bad) jl nop xchg mov (bad) (bad) (bad) jmp out enter or cli push fs test inc jo mov das ficom mov test sbb data16 inc cmp adc add test test in pop mov mov pusha sahf aad mov and int rcll (bad) mov adc or add pcmpgtd dec imul (bad) (bad) incl sub xchg add test inc or popa (bad) mov pop jl je (bad) (bad) (bad) jle test or lret outsb jb jmp pop cmp inc rol int3 jb sub (bad) call adcl cmp (bad) and adcl (bad) jne dec cmc (bad) (bad) jmp cmp and test cmpb or pop and (bad) (bad) lcall sub ret xchg ds mov pop cltd dec or pop idiv (bad) (bad) (bad) cmp adc sub or (bad) icebp sarb adc jae pop fdivrl (bad) (bad) (bad) (bad) cmp xor and adc fdivrl pop out test mov popf les jecxz mov decl (bad) or es pushf addr16 movsl out cli lret lcall xchg pop inc sar movsb daa movb xor and ja incl mov outsb insb (bad) mov inc pop mov sbb sub (bad) call aaa out inc pop xlat scas pop dec fistpll das sub imul xor insl out in in jmp jg mov lret cmp aaa (bad) pop (bad) xchg inc xchg pop mov into (bad) (bad) out and jge or inc fsubp frstor xor lahf call fs add pusha inc mov xor add mov mov mov xchg lods pop lods push fcoms (bad) push int int jl aam mov push imul or pop dec (bad) (bad) (bad) decl mov scas data16 loopne mov lods das inc dec mov mov push (bad) (bad) (bad) call and pop ret inc lcall mov shlb (bad) ss push mov mov (bad) (bad) lcall cmp inc cmc fistp insb in out lret xlat mov std or sbb push cli cmp (bad) pop push andl loope xor push js stos xlat negb push ljmp icebp ljmp mov test into cmc push lds (bad) (bad) (bad) push dec ret xchg mov imul sbb (bad) push sbb shr mov lods (bad) (bad) (bad) incl arpl xchg gs stos cli fsubl stos es cmpsl jl pop insl popa mov (bad) lock (bad) ljmp subl cmpl (bad) (bad) jg jb mov sbb dec pusha dec clc lcall mov rolb pop (bad) ljmp pusha fistp out aad adc push or pop (bad) (bad) (bad) (bad) sti push xchg mov in sub clc mov hlt popf lods leave fldenv mov pusha pop incl (bad) adc nop mov int xor les push xor dec (bad) movsb push or mov push stos (bad) (bad) jg jle (bad) xchg adc xor mov add sbb ret lret mov push sub jecxz xor ret (bad) fsubs xchg inc pop aaa push (bad) (bad) (bad) (bad) call fdiv mov mov jo cltd xchg (bad) lret imulb cs (bad) (bad) pushl adc push inc enter fcompl (bad) xor stos addl (bad) jnp inc dec in cmp push iret leave loopne jmp ret mov es mov add add les cmp mov in or outsb cs (bad) call das movsb sbb out or in shl daa mov stos mov jle lock (bad) (bad) (bad) ljmp inc test push popa cli neg into (bad) clc add rcl aam push fildll (bad) mov mov pop mov pop adc addr16 aas fistp (bad) nop (bad) (bad) (bad) (bad) jle add pop xchg ja clc addr16 mov push shrb test add mov rcll ja fdivr inc or mov sahf and rclb mov loopne rorb es (bad) stc adc push into mov jmp xlat push or inc out cmpsb imul (bad) mov jnp mov stos pop (bad) dec lcall mov mov mov cmc (bad) (bad) incl cld jb int3 xlat push (bad) mov outsb mov (bad) jle xor pop nop pop into or or sub in xor jns faddl xlat into mov adc (bad) (bad) (bad) push stc mov cmc cmp fisttpll popa add pop push iret xlat rorl adc jmp mov mov inc aam (bad) (bad) jmp (bad) lcall scas out loop test adc mov repnz (bad) mov pop and mov aaa std pop in inc lcall xor ja ljmp repz and mov xchg mov (bad) (bad) incl ret call inc cmp mov outsb pop lcall or rcl (bad) mov xor scas xor (bad) clc dec jle sub xchg enter ret (bad) cld push jl jmp mov pop and pop add pushl pop sub pop mov xor (bad) (bad) (bad) call insl jns pop cmpsl fnsave mov sbb xlat icebp cmp xchg adc xchg ja push mov (bad) incl iret xchg sub push movsb das xlat insl std repz sub pop out adc sbb jae mov test sub mov mov dec dec xor fiaddl (bad) ljmp sahf sbb lcall or mov ja cli ljmp (bad) lock dec fsubs loope xor js (bad) pushl pop mov es xor stc push or incl (bad) (bad) (bad) (bad) jns inc jle and xchg shll ret mov sub out cmp ds (bad) (bad) (bad) call xor mov les into sbb pop lret push sbb push push jle (bad) pushf (bad) (bad) decl or pop push mov and sbb jmp xchg (bad) (bad) decl mov jae inc add into lret cwtl inc ret and scas mov (bad) call js or aaa hlt push push sahf inc or hlt (bad) call loope dec sub xchg or xlat add enter pop mov xchg (bad) (bad) (bad) pushl aam push and or popa sbb cmp push sbbl jne xchg (bad) (bad) (bad) (bad) dec mov mov jns or popf xchg mov adc jae or insl (bad) (bad) (bad) jmp test sarb sbb jne push push popl sbb inc shll xor pop cld call fisub hlt (bad) pushf loop loop xor pop call xor push outsl jbe jb adc or adc push scas nop (bad) incl cld and lret les mov das in and pop fwait mov xor fwait xchg iret mov popf movsl ror ret xchg adc ljmp cli cs sbb xor xor sub mov fldenv ret (bad) (bad) call pop adc fs fs xchg popf int or xor rcrb daa (bad) (bad) (bad) (bad) fstpt pop push adc and (bad) repnz mov (bad) mov xor pop cli xchg and insb fcmovnb cs clc int3 sbb aaa cld sbb xchg sbb mov push mov pushf cwtl rorb add xchg inc ret and fiadd (bad) call mov jmp insb out sbb add sub test js (bad) lcall jl mov sub or mov sub aas (bad) outsl clc (bad) ljmp xchg push arpl (bad) int3 icebp test xchg popf adc (bad) decl pop fisubrl inc sar and int3 xor aaa cld (bad) (bad) jl xchg xchg pop sbb dec cs mov jae (bad) das jb xchg mov xor (bad) pushl pop jp dec negb (bad) xchg shrl test dec inc dec out mov sbb adc shrb lret inc xchg call or xchg jo data16 loope cmp subb das (bad) xchg (bad) adc mov mov ret sbb jb add jnp push insl (bad) out movsb or xchg xor sti scas arpl gs inc push (bad) (bad) pushl add sbb mov and push xchg in or xchg xchg jmp mov inc (bad) (bad) (bad) pushl adc vfrczsd (bad) out and pop sbb add xchg add dec xor shll fadds xor das xor addr16 mov pop pushl xchg cmp or sbb sbb adcl pushf (bad) (bad) (bad) ljmp sbb or sub scas popa add mov pushf lds stos sub int3 aas mov inc aas dec lea xor popf jecxz add adc dec je sub int adc push clc jg push loop add sbb decl xchg xchg cwtl cld or pop sub mov in mov adc (bad) incl scas push push mov in orl test decl ret cmp inc mov (bad) (bad) fbld in inc les mov cmp cmp clc ret mov (bad) decl mov dec ds ljmp stos iret cltd nop stos xor pop loopne adc je (bad) (bad) incl mov fistpl outsl xchg loopne (bad) aaa lds bnd ret outsl iret out out cmpsb add jmp jne iret (bad) es jl loope int loope (bad) (bad) cmp imul imul idivl inc (bad) hlt mov fidivr xor pop mov push or sti (bad) cmp jo dec and outsl clc mov jb std pop hlt loop addr16 ret fs mov inc xor shrb mov mov mov sti jo gs (bad) (bad) (bad) incl push push pop push jl push xchg xchg dec mov lods (bad) sbb cmpl leave insl sub add (bad) (bad) jmp inc inc repnz scas add mov insl jmp sbb adc or mov aaa jae cmp fs lahf (bad) xor imul mov lcall popf sahf stos dec mov outsb fsubrs repnz push imul cmpsb (bad) (bad) (bad) dec sti into in mov daa fcoms xchg pop add arpl daa arpl std (bad) stc push lret push push bound inc push aam popf xor (bad) (bad) ljmp pop loope and xor jle push imul das or aad jle out push scas (bad) (bad) (bad) call lds sbb jbe test cld xor notl mov lret sti mov enter (bad) mov out mov (bad) lods (bad) addl xchg jo les (bad) decl mov mov outsb loopne in (bad) cmp jbe jo lahf push inc mov xchg (bad) (bad) decl or call add and lods out aam shl js pop nop enter ljmp fcomip out sbb in push (bad) mov cmc inc jecxz lahf push jbe addr16 (bad) (bad) pushl sahf mov inc jp cmp mov jecxz mov insl out jmp or sahf decl (bad) mov mov mov lods mov pop ja jg mov (bad) (bad) (bad) mov or mov mov or sbb out mov clc lahf pop mov sub mov push add (bad) (bad) jmp bound loope cmp repz and or idivl (bad) (bad) (bad) jg and fcmovnu fbstp xor xor xlat cmpsb pop adc mov jge es lcall lea jnp and mov lods mov push out cwtl (bad) (bad) (bad) call lcall cmpsb iret iret movzbl cli rcrb xlat lods sub xor (bad) jg mov fisubl sbb test pop (bad) (bad) (bad) (bad) decl and cmpsl xchg pop and xor setl lea arpl jg negl insl imul jle loopne xchg call dec aaa in xchg push fst outsl push xchg push xchg or and mov and jno ljmp popa and inc daa loop xchg mov cmpsl xlat pusha jg int mov (bad) inc jae cmp test mov rcl xor (bad) (bad) (bad) jg adc mov dec pop mov into out jp das cmp push mov sahf lret inc (bad) (bad) (bad) call jnp out sub and icebp push lods repz loop nop ljmp inc cs lds mov sub lds xchg sahf fstps fiadd add (bad) (bad) call mov je fidivl xchg or add aas loop add pop ljmp sbbb lret adc (bad) (bad) incl hlt pop pushf lods mov sti int lret mov in mov int3 test mov stc adc xchg shrl hlt out (bad) jo aas push call xchg sub mov jp shrb shrb movsl xor xchg stos stc inc (bad) mov inc sbb pop into mov sti daa divl pop xlat out cmp jns and fcomip decl pop nop adc jb dec add enter cmc (bad) (bad) (bad) mov cmpsl lock std jmp les test sbb ljmp jg add in dec xchg dec stos push repz jge or jecxz outsb nop inc jg push in (bad) pushl insb fsub insl cmp mov mov insb in jb and je and (bad) (bad) decl cmp lret rcrl (bad) cmc xchg xor xchg fcmovbe iret (bad) xchg inc lahf mov jg add lods test sub ficoml nop mov dec (bad) incl cli dec mov add mov mov push mov mov xor mov into sub jg jmp jno mov jae bnd inc fisub cmpsb (bad) (bad) (bad) decl mov jg gs xor ret or movsl mov stos ljmp adc cli cli (bad) mov (bad) shll std (bad) (bad) (bad) call lods dec cmc jle mov mov outsl inc inc int3 ja xchg fldl mov xchg (bad) jg call dec push daa fwait shll cmpsl add call clc sbb jecxz call mov or sub sub add mov sub xor pop inc int mov inc jns lret cmp js inc in scas jo or push enter ljmp mov inc mov arpl in pop mov mov push sbb js lret jo or xor (bad) call push enter sub into fwait daa cmpsb and fidivr clc jmp out mov mov (bad) (bad) inc shr rclb (bad) (bad) jg pop cmpsl mul jmp loop push dec push sbb sbb test (bad) ljmp adc push lahf lret in in inc inc push jl pop push aas push inc leave add inc sbb (bad) (bad) (bad) incl out dec push daa mov js bound icebp iret xor sbb jl (bad) decl jle push add sub adc dec movsl (bad) repnz insb inc jecxz js sub (bad) decl fdivrs or jne int3 stc addr16 sbb ret addl rcrb (bad) call inc inc aam xchg push cmpsl xchg cmc mov push jecxz sbb sub arpl hlt pop jl xor inc cmp inc pop cwtl setno popa jl jbe lock loopne mov scas add pop daa test mov lods mov mov lods sbb (bad) incl out mull xor pop inc inc sbb pop ret add test mov insb inc sbb cltd enter cmpsb test out cli decl sub push or test leave out adc and sub and push sahf sbb repz (bad) (bad) incl (bad) xchg xchg jb adc inc roll lret movl loope (bad) ljmp and in rorb and das pushf pop push (bad) loop (bad) (bad) (bad) lcall push or fs fnstenv pop and xchg pop push inc add dec fwait decb mov mov xchg (bad) gs loop add mov sub inc fcomip je push dec adc in (bad) (bad) xor (bad) (bad) push adc rcll xor mov xchg jb int3 adc stc mov pop leave sar (bad) (bad) ljmp gs ret imul repnz enter push lahf sbb (bad) (bad) out clc repz fwait xchg or dec xchg addr16 lret mov and (bad) out clc call sbb mov jecxz loop xor jl xor outsb (bad) (bad) (bad) (bad) out push and pop (bad) jbe jne add sti mov in sub cmp (bad) (bad) lcall sub ds dec ret outsb aas mov mov mov call push js movsl into repnz sahf outsl cmp lods or (bad) (bad) inc cli pop out mov dec jnp das jbe xor repz aaa push jnp stc xor gs pop mov and fstpl xor adc push push mov (bad) call sahf jo cmpl (bad) mov pop fiaddl push in (bad) ljmp shrl (bad) (bad) (bad) pushl cmp xor mov std pop cmpsl adc push out xor lcall jl iret push lods (bad) (bad) ljmp mov mov scas fsubl cwtl imul in pop ds pop jl mov lahf sub lret pop ss jp xchg (bad) mov jne fucom pop mov imul jne (bad) jne fstpl (bad) call clc cli mov loopne insb jo xor (bad) (bad) (bad) jg or xor mov mov inc mov pushl (bad) call sub xlat dec cld cld popf insb jmp daa stc imul dec pushl aas (bad) mov cmpl aas dec sbb (bad) (bad) mov mov xchg pop push fnsave (bad) sbb (bad) mov call (bad) (bad) mov int adc jle sub ds stos sbb (bad) (bad) dec fcompl int3 imul jmp mov andl pop ljmp call or cmc sarb mov ljmp jp loop int3 sbb lret sarb loop push lret aaa mov int mov jmp out or (bad) in xchg mov out mov push notl add jp lcall call addr16 jbe sub les xchg and adc sahf sbb aad fwait lcall decl sbb cmpsb js lahf or mov out jle mov into (bad) (bad) (bad) call out lret push ja pop popf into (bad) (bad) pop ja jo and in scas orb outsb lret sbb cmp fildl scas adc hlt add xlat lcall sub repz (bad) lcall imul and sub pop xchg iret xlat ss stc inc inc adc (bad) (bad) (bad) decl cld and (bad) cltd cmp ds xor jb test loop testl jno mov push loop sahf xchg loope sub xchg xchg or fwait push push ds push dec mov aam (bad) std adc rorl push negl mov (bad) (bad) dec mov xchg (bad) sub (bad) jo outsl push enter idiv adc mov lret inc fsin (bad) (bad) (bad) mov or scas popf mov xor jecxz mov ret mov enter pop (bad) lcall out pop and (bad) aaa out sub addr16 scas lock into cltd insl in loopne dec and (bad) push push gs aad inc sbb sar (bad) call test mov rcr (bad) (bad) cli bound loope aad fbstp fdivr fwait insb pusha mov out jns sbb sub (bad) (bad) (bad) lcall hlt (bad) or call mov cmp ljmp ret and (bad) (bad) (bad) call popa shll scas scas jecxz dec push xchg xlat mov mov dec dec dec xchg and (bad) (bad) (bad) call and out sub pop addl loop jecxz and mov lds sub in int3 shll leave mov mov xchg imul lods sbb (bad) pop ljmp leave mov mov pop xor xchg push bound fisubrl std dec inc dec push (bad) (bad) (bad) call bound and push (bad) jb call jne imul mov cmp ja (bad) (bad) call mov aaa popf cwtl xor push test stos (bad) jecxz fcompl leave sub (bad) jmp xchg mov in (bad) push jl out std in das mov outsb fnstsw pop pop jae inc xor stc jp (bad) mov xchg adc pop push aad (bad) (bad) fldt incb jnp cmp xor in out and (bad) pushl adc cmp dec sti lods push lahf scas fcmovnbe and cli mov test add dec inc mov fucomp lods out push pop cs out cli (bad) dec das aam mov sbb cwtl enter fistl lcall ljmp jge sbb jg mov sahf inc pop pop daa daa aad pop mov sbb jmp xchg int3 (bad) (bad) (bad) dec (bad) scas cwtl sbb shlb sahf insl pop xor xor fistpl je (bad) (bad) (bad) inc push mov daa jmp test hlt ret int jb test sbb jbe (bad) (bad) (bad) jmp cmp cmc (bad) adc jo xrelease insb add mov cli in jg ljmp push push movsl (bad) in ror aas push pop out mov sub rolb dec popf pop xchg repz pop pop scas outsl sbb ljmp push js aam mov add stos adc mov pop mov mov out fadds dec lret jl subl cmp jae (bad) (bad) incl psubq stos fnstenv xchg out nop mov notb sbb cld ds call bound xchg sbb xor arpl call mov (bad) jg call adc xchg dec mov test aaa lock push sub sub jb cmp sbb xor pop mov call sbb xor mov (bad) ljmp or push cmp loopne jae loopne rolb rcr xchg imul lods (bad) add add xor mov mov add (bad) (bad) pushl push xor sbb sub pop sub in pop pop cmp (bad) je mov outsl pop sbb adc adc mov mov movsb dec xchg lcall add fistp test ror push jmp or cmp xchg xor sbb mov iret mov add add pop mov add je aad out cli sbb cmc inc gs fadds jae movsb lcall decb xchg (bad) xlat repz push fnstcw push js cmp or mov movsb add xor xor xor into jae xchg sar xchg es aam jbe repnz inc pop (bad) incl (bad) sub sbb push or int3 mov mov (bad) (bad) (bad) out loopne cwtl pop sahf mov (bad) jno,pn movsb ljmp xor int nop das mov (bad) call xchg repz xchg mov cmpsb pop loope push mov cmp lahf mov in adc mov stos outsb pop add arpl (bad) sarb negl jg leave lahf push jns insl stos xchg sbb push ret out outsl adc pop scas xlat or test jb call test bound lods or das cli jg or mov cwtl cmpsb sub push mov int push and dec (bad) aaa std incl cmp pop aad push cmp push std (bad) pushl mov ljmp aad rcl xlat hlt add imulb cmpsb push jae iret je xor pop cltd ss push or in push push cmc pop mov dec scas test push cltd insb jecxz (bad) (bad) (bad) incl in push (bad) cmpsl add dec jmp (bad) je push (bad) aaa push fstp push sbb pop cmc fcomip incl xchg inc add rcll ja adc scas (bad) ljmp cmp add or pop pop call in inc lret pusha mov call (bad) inc data16 iret aaa pop fidivrl mov pop scas test (bad) fisubl mov jbe pop fiadd mov hlt decl hlt ss or lret pop mov add in mov xchg (bad) testl bound fstl push imul sub xor scas mov cmp cmp std cmpsb and addr16 jg scas push insl and add mov mov nop mov xchg stos sti pop mov push gs push or setne imul jb fmuls jo push fldl push sub fcmovb push repz cmp (bad) mov rcll (bad) jmp jo cmp dec pop aad das sbb jle test je aad fbld xor lahf mov xadd or lcall out mov (bad) (bad) (bad) ljmp sbb sub std inc loopne stos sbb into rcl lea cmpsb or jmp and es add imul (bad) (bad) jnp fwait fwait std imul ss dec sbb add push pop test andl incl out xorb stos push and int (bad) fs jmp nop in stos or into sahf lock divb popf ret cmp mov xchg popa jecxz jmp cmp cltd mov rcrl or fistp pop xlat adc (bad) insl push scas into (bad) push aam (bad) (bad) pushl or pop psubsw icebp loope and clc cmp (bad) (bad) mov rcrl cmp mov xchg outsl bound xchg mov (bad) (bad) popa mov or fcomps pop call ja push popf cmp (bad) pusha scas push lock (bad) ljmp inc (bad) aam jns scas jns pop stc mov outsb mov mov adc stos jo and std sub stos into loope std (bad) call adc mov orl repnz (bad) (bad) (bad) mov ret ds ret xor cld and je inc mov add (bad) decl (bad) movsl inc pop ds dec pop xchg dec lret arpl sub (bad) (bad) out cli insl cs mov fnstsw xor pop ds inc in jne sbb (bad) (bad) mov (bad) negl test xchg movsb dec imul push inc loope scas js jo mov mov inc gs (bad) (bad) lcall lods fcoml repnz jnp (bad) mov xchg add (bad) stos enter std mov incl scas jecxz nop lods jae inc mov lds inc addr16 hlt and xor pop inc lret inc clc fs incl jmp xchg gs sub xchg (bad) mov (bad) (bad) fistpll popf test xchg inc xor adc mov icebp mov (bad) decl fcomps push lret jb test pop pop or arpl shrb incl inc int lds cmp int3 (bad) (bad) ljmp (bad) fistpl push imul lcall mov mov sub (bad) jmp sbb pop mov inc popa jl cmp mov in mov sti mov mov xor fnstcw sbb xchg (bad) das or jo (bad) (bad) incl pop lods sbb pop (bad) pop mov aaa mov mov sub icebp out popf dec cmp dec pop (bad) fcomip idivb xor mov inc jae movsl std dec xchg and sbb or (bad) (bad) (bad) cmp cltd mov jmp mov (bad) jmp pop dec aaa mov jb daa arpl arpl inc and (bad) (bad) (bad) lcall dec aas in in sbb data16 int3 xchg lahf (bad) insl int xor movsb mov mov push jp mov adc mov xchg sub lahf cwtl mov xor (bad) (bad) lcall jno add daa xchg repnz popa sbb jle push add (bad) (bad) (bad) mov dec loope cmp pop arpl rcll dec inc pop push (bad) jp inc dec scas loope incl shr sbb add repnz push aam push test mov sub inc xchg rcll (bad) leave adc cs mov push mulb pop xchg inc pusha lahf (bad) (bad) (bad) (bad) cli pusha push push xchg lret jnp aaa data16 pusha dec sub outsl (bad) addr16 cmp or sub inc pop sbbl ficomp fstl rcr dec jne sarb pushf xchg xchg dec gs lahf jno inc in sub (bad) cmp fist dec ds stos (bad) lcall push jbe test jb xchg repz fnstsw jbe,pt jl int lock sub sub mov pop (bad) sbb push outsl pop inc jge lods push div jae adc lods (bad) jmp cmpsl outsb dec lds es lods aam fistpll std (bad) jg push mov cld cmp es jge mov mov lahf mov or in adc inc mov lds insl daa mov and lock cmpsl das rcrb xchg enter xchg xor fdivrs or (bad) pushl push insl loopw je imul and push cld or clc sub ljmp (bad) incl sub ljmp xchg bt xchg push lret lret in (bad) (bad) (bad) ljmp pop scas jl adc push mov ja sub fs aas adcl and jge jne adc fs decl adc jb or push push (bad) in sbb outsl cmp (bad) (bad) decl (bad) je mov jnp gs mov stos mov jmp fbstp mov (bad) (bad) (bad) call jp mov addr16 lods lahf push das jge add repnz enter push cmp jp pop icebp (bad) lcall aas insb cmp out inc (bad) sbb loop (bad) push xchg push lret dec in (bad) (bad) mov cld mov les jne in push jg outsl mov ja popa aas outsb insl cmp (bad) (bad) ljmp jg out sbb mov scas mov pop movsl pop outsb fiaddl gs ror mov (bad) dec cmpsb lods scas imul test pop xchg in shlb mov leave cli decl pop and ja and sbb sbb add mov inc cmp out in es (bad) (bad) ljmp dec iret push xchg std movsl xchg cltd dec pushf sub cmpsl push ss outsl cli ja jb shr mov cs jecxz sbb inc sbb into outsb pushf ret (bad) (bad) jg je test jo and (bad) add enter enter pop sub jg call dec je xchg out cmp sbb aam jbe or lea call insb mov in jne xchg arpl xchg (bad) lcall or adc fistp mov (bad) push clc in (bad) pushl xor loope loope sub xor outsb (bad) and ja xchg mov cmpsl mov xchg mov push jo mov mov dec enter inc sbb (bad) (bad) mov mov adc and inc mov mov decl aad cmpsb or lret mov adc shlb xor jl mov inc leave andb lock test movsb cmpb call adc xchg or cmp rorb dec xchg lret mov (bad) or adc sbb sub (bad) (bad) jge mov and xor or and push inc or out jmpw faddl push mov or iret test xchg cld lret cld int3 aam or adc cmp cmpsl aam dec fs push (bad) (bad) fisttp jp (bad) jmp lret cmp insl push js das lock dec sbb jne inc int3 inc dec or bound cs (bad) lcall mov pop xor pusha cli in gs imul xchg xor lahf cs (bad) mov (bad) push cmp sbb and push and enter and enter (bad) jmp or dec xor dec adc cltd rorl loop inc add xor inc cli decl pushf push fidiv inc adc (bad) nop inc ss adc (bad) (bad) (bad) lcall xor sub push and leave addr16 dec sbb xchg loope jmp imul in and mov incl mov rclb flds mov xchg mov xchg imul (bad) (bad) jg jno mov into add xchg sbb jns or loopne jp jbe ljmp call fldl mov push cs arpl repnz dec clc push (bad) (bad) (bad) (bad) fcompl mov jo aam xchg mov or leave loop loope jmp or cs or lcall loope mov (bad) mov pop arpl cmp jne (bad) (bad) (bad) incl push arpl ds aam jge sbb xchg enter inc jle jo mov decl lret xor sahf popf adc xor in in cld incb push out jnp (bad) ljmp fist fdivrs enter out rcrb push and sub sarb dec dec jnp into out push jne mov dec pop insl cmp (bad) (bad) (bad) lcall out mov jp or test mov or jo add sbb mov fwait out (bad) (bad) (bad) jp std lea mov mov hlt dec cld and xchg popf imul (bad) mov icebp cmpl mov push test into or cltd and lret adc cmpsb or jb add mov testl and bound push cmpsb pop outsb adc cmp cmp imul (bad) jmp dec rcrb fwait and inc mov inc adc enter sub mov mov and inc mov test aam (bad) (bad) push sbb pusha mov cwtl nop add xorb lods pop (bad) roll or fsubs mov (bad) incl cmp pop xchg jnp pusha pop addr16 (bad) stc mov (bad) (bad) frstor mov xlat add pshufw dec (bad) (bad) (bad) fisttpl or xchg fwait and jl mov mov lret in mov cmp leave insb clc (bad) decl inc pop ja mov push mov loop mov js cmp jg add stos adc fidivr sbb add sar pop push and (bad) lea jae mov mov gs push icebp mov mov or add dec (bad) mov (bad) (bad) (bad) (bad) std rep mov push dec add add rcll hlt test pop sub push icebp ds (bad) ljmp dec xor into mov jp sub call (bad) (bad) lcall int3 je jmp subb lcall inc inc popf cld and ljmp lods rcr mov push jbe push and into mov and pop mov mov (bad) (bad) pushl or test out lea in popl push and mov imul jl ds mov sbb sbb pop in add (bad) incl push pop sbb hlt mov in repz mov testb ret mov (bad) (bad) (bad) call lret sti xchg adc stos cmc mov lahf mov inc xlat lret pop mov pop sub jge jns movsb das cli (bad) (bad) mov es push je test insb xor or xor jl notl (bad) jmp into push aas imull inc dec sub mov test arpl pop in (bad) (bad) lcall push (bad) sahf packssdw xchg pushf jne setb (bad) cmp mov cmp imul fildll sub mov leave mov mov lods jbe bound jecxz aas fs sbb sbb (bad) (bad) (bad) fbstp push fs mov (bad) cltd aas add fdivrl push leave js (bad) pop cmpsb mov es adc mov mov or and dec test (bad) inc dec dec fsubrl je into ljmp mov (bad) mov cs bound call sarb leave jge icebp stc cmpsb (bad) jg dec sub imull movsb (bad) enter and sub push and jmp leave lods xchg (bad) and dec jge jae xor cmp ja xchg (bad) mov cmpb ja push mov das xor (bad) jbe test aad ljmp in inc jnp cwtl shll iret jecxz addr16 gs push (bad) jg mov and sub ficomp mov ljmp lods ss outsl cmp sbb in jb mov pop jp mov push aad ss dec fucomip adc or (bad) (bad) (bad) ljmp dec xor popf jae pop jg fidiv cmp mov loope pusha mov incl mov loopne cld mov cmp xchg dec out (bad) dec inc iret dec lcall ljmp mov (bad) push insl mov jg sbb setns (bad) ljmp das xor pop push cmp out loopne sbb dec pop sbb jo lcall into inc xor sub pop sahf test xchg push cmpsb sti iret push stos mov inc adc or pop push sub (bad) (bad) (bad) ljmp hlt jmp jl loope sub mov cli sahf loope (bad) imul out push xor jbe test mov decb (bad) or movsb loopne and xchg popa dec sbb cmpsl test (bad) (bad) call pusha adc xchg rcrl outsl jecxz push cmp fcmove or xorl pushf scas jb cli cltd inc or pop dec fdivrl call bound adc (bad) outsl xor (bad) pop inc pop (bad) (bad) (bad) inc push xchg inc cmpsl mov dec xchg lods leave xchg jno rcrl xchg in out mov jns inc (bad) (bad) (bad) (bad) out jae repz imul imul mov jbe enter cmc (bad) (bad) jmp xor xchg int repnz aam out fsubr mov call jl test loopne test outsb (bad) leave ja les scas jecxz (bad) (bad) push dec or mov lock or lahf mov xor (bad) (bad) jmp inc lds adc dec loop,pn mov (bad) (bad) incl pop dec sbb (bad) (bad) icebp and jae sub pop (bad) (bad) (bad) decl test cmp hlt (bad) cmp (bad) dec adc xchg push mov (bad) (bad) in gs mov jno xchg mov (bad) push cmc sub je imul pop in (bad) lahf inc (bad) (bad) mov add pop addr16 enter sbb leave sub enter repnz (bad) (bad) (bad) ljmp (bad) push push xchg and ds and jl xchg sub and call (bad) (bad) mov scas fs (bad) into into insl xchg dec mov xor int3 repnz push mov adc es xor jle (bad) (bad) (bad) (bad) jge (bad) jmp rcr mov mov cmpsl ret dec mov xchg push sub fcomi ljmp mov pushf sbb clc jg incl in sahf push (bad) enter and dec mov es jmp (bad) push mov jecxz cli sub mov rolb (bad) adc gs pusha lret sub lcall adc (bad) push cmp js out divl fistpll out popf repz pushl gs lahf outsb into mov sar cmp into int3 sahf popa int pushf mov (bad) fisttpl (bad) shrb ja stc mov arpl in jle pop fcomip (bad) (bad) pushl cli pop cmp xchg sbb shlb data16 jmp mov dec mov out (bad) inc xor mov mov sub sbb jmp jns int sub adc cmp mov cltd les (bad) pushl adc mov negl (bad) (bad) jg fdivrp (bad) (bad) pushl xchg out mov std jbe mov push jg int3 out insb xchg adc fcompl (bad) call fcompl jg cmp mov (bad) das in cmp pushf les (bad) (bad) push lods mov mov mov in repz mov ljmp dec icebp outsb sbb (bad) (bad) incl pop div mov jp jno sbb pushf or push incl (bad) fsubl aaa dec imul loopne sti loopne (bad) (bad) jg push pusha (bad) jmp out cli lahf xor daa out lock icebp (bad) xlat pop jge mov std scas cld or and loopne jg mov aas (bad) (bad) (bad) (bad) jg fildll incl inc pop test dec mov ds loopne hlt and imul jg xchg icebp lret xor stc popa mov test dec (bad) mov (bad) (bad) (bad) (bad) jmp clc xlat xchg stc xlat ja pop xchg mov xor outsb outsb cli (bad) (bad) (bad) pushl jbe mov mov mov sbb popf xchg fnstenv (bad) (bad) decl mov fst and fs out mov (bad) jmp push ja mov lea xchg xchg aas decl js call sub lret pop xchg sub ret pop pop push (bad) lret cmp lret pushl pop mov clc popa jns lret (bad) pop sbb jmp push int ja jmp fbld imul fwait into cmp fwait stos popf push and (bad) cmp (bad) (bad) (bad) jmp in pop loop mov decb mov popf dec pop (bad) (bad) mov pushf scas mov mov insb cmp mov (bad) mov jle sbbl clc movsl scas push push jmp test (bad) lcall lret int3 jge sub dec sti push repz mov ja mov (bad) (bad) dec popl jae mov mov outsl xchg mov enter jle mov mov ret inc push std ja decl jns cmp lods imul inc sbb mov cmp cli xchg imul xlat pop mov mov ret cs mov inc ljmp sbb jbe xchg xchg jno push std (bad) (bad) call adc rol mov and xor aad (bad) out mov pop inc pusha (bad) ljmp rcl hlt or mov lret lea jmp icebp and pop xchg fucomip (bad) out mov fbld sbb hlt xchg lea sub xor inc xchg cmp loop inc enter arpl pop mov jle inc (bad) (bad) call pop cld mov lret lahf (bad) sub imul mov int3 mov (bad) (bad) jmp enter cmp push mov jecxz jecxz xchg dec fnstsw (bad) out cli pushl fdivl jae jne push xchg xchg ja (bad) push imul dec fcoms push lea repz loop out ss add cmc inc (bad) mov repnz or flds stc or and sahf inc out rcrl (bad) (bad) incl insb pop mov adc sub cmp xlat adc push lret add aas je push scas (bad) pushl int fcom inc push and push xor fild add orb (bad) (bad) out sub cmpsb (bad) (bad) (bad) cmp xchg and movsb mov ret sub scas nop lea (bad) call ja test adc dec push mov pusha out test sarb pop mov cmpsb mov xor incl mov push inc fistpll outsl mov (bad) (bad) (bad) call test add rcll fnsave pop loope push pop ja ret (bad) jg (bad) data16 rcrb or outsb aaa jmp push sbb xor sar and jge xor add mov dec sbb (bad) jmp and in jg hlt or (bad) (bad) inc xchg jmp dec inc xchg lods jbe out inc in fcomp mov dec mov xlat lods (bad) (bad) (bad) ljmp lcall dec cwtl outsl dec cmpsb push and dec insl pop leave pop sahf mov mov (bad) call mov int jg mov test (bad) enter scas mov in add lahf ds push sbb and inc add dec adc mov cmc clc mull jae loope test (bad) dec (bad) cmpsl adc xchg xchg and (bad) (bad) call inc (bad) out xchg mov dec inc pop inc xchg int3 loope imul mov (bad) (bad) jmp cs mov nop pop cmp fldl add adc push loope pop (bad) (bad) (bad) call mov stos cmp push pop xor fbld fbstp xchg xchg scas stos aaa sbb scas aaa xchg and pop xlat fsubl loopne sarl or int3 test je sub inc cmp fcomip mov mov je jb mov xchg aaa inc fbstp xor dec popa les (bad) (bad) (bad) jmp add pop adc inc xor aam xor and outsb push ds pusha fisubl cli inc icebp in in lcall or cmp orl inc loope (bad) (bad) (bad) jge xor dec movsb and and and xor inc test adc loopne cmp stos jg lret fcmovnu dec or ss (bad) call pop ja dec mov mov pop adc push dec and pop inc inc dec aad (bad) (bad) (bad) mov ja cwtl aaa stos push lods sbb fldt (bad) jo leave sub inc mov mov fnstenv rcrl in mov sbb adc stos jg (bad) pushl cs fwait scas pop mov cmpsb inc dec sbb xchg fisttpl (bad) (bad) (bad) pushl int mov lretw mov dec jns push sarl mov xor test icebp (bad) (bad) call gs sbb daa or inc mov dec inc sbb cmc dec bound xchg sbb (bad) (bad) pushl xor xor jle cmc test fdiv rolb lock jg push fsts mov fmul jle jne daa jp (bad) (bad) ljmp rcrb in pop xor (bad) ss mov lret ds lds jb (bad) (bad) pushl rorl jmp aad cmpsl dec inc pop dec clc push ret gs cmpsl push popa xor ljmp movsl (bad) pop pop fs lods mov arpl mov jle dec xor mov and mov push nop jns mov icebp lret add add ret (bad) (bad) (bad) call sbb xchg xchg ret (bad) ja cmp aam or mov pushl or ljmp aaa mov inc inc sbb nop mov jg aaa rcl cmpsl outsl sub dec pushf jno in cmpsl imull cli jmp jecxz push adcl mov mov test mov fwait xor xlat iret les mov lret ds fmull (bad) fcomip test pop js sub loope adc pop sub pop jb cltd adc or lahf fmul aas sub cmp nop pusha xchg and fbld jp adc mov and mov bnd std mov (bad) lock sarb (bad) insl lea xor cld popf testb pop push arpl sar jg xchg ss mov sti les xor cmp ljmp jno jae sbb push sbb inc test in inc sahf fidivr (bad) (bad) pushl je or int mov xchg sbb int3 aaa lea and jmp cs adc sub cs ljmp ds mov xchg les sbb cmp (bad) mov (bad) fldcw xchg loop dec imul dec xor hlt pop adc (bad) (bad) (bad) inc pop cmp jle xor daa mov mov daa xchg adc aas inc ss xchg push scas dec fwait and or incl or popf outsb xchg ds xchg adc in lcall (bad) ljmp xor or inc xchg cmp stc rcrl push std (bad) (bad) in push outsl push jae cmp mov std repz push push and pop cmp fwait int3 dec mov xor or out (bad) in pop pop lahf stos sub (bad) (bad) lcall mov adc sar sub adc aas cmp jo add sti mov jge xor cwtl sarb xor addr16 mov fdivp decl mov sarl test xor icebp pop mov inc in lret divb (bad) fistp ret and mov jl ret mov sti add das add push jne test cmp divb (bad) out cli call bound fnstsw xchg xchg mov sub fnstcw sub shl data16 (bad) (bad) (bad) jp mov sahf adc rcrb adc (bad) lahf es mov dec lcall lcall (bad) lahf and dec lock adc dec inc (bad) fcomi dec ficoml clc xor xor mov lods adc clc xor mov or in cmp sub ljmp out xchg scas lcall stos push pop lds out adc (bad) pop (bad) mov inc dec arpl pop shrb ficom jg jg and out aas fldl aaa in call cmp shll rcr adc push movl repnz sti sbb jle popf mov pop or xchg and push lock sarl decl pop loopne mov cli loopne sub repz (bad) (bad) (bad) mov sub push jb pop add (bad) outsb (bad) ss lods adc mov insl and arpl xor jp mov (bad) (bad) ljmp test (bad) fcompl push and sbb out outsb adc stos sbb iret or jbe lods sar (bad) ljmp aas xor fldt sub shll mov (bad) es xchg jg loopne (bad) (bad) (bad) jmp lock in dec or adc bound push adc cld mov mov (bad) (bad) (bad) (bad) incl sub mov push hlt (bad) repnz xchg lods fisub je push inc test mov aam test pop cli or xchg rol or addr16 bound (bad) (bad) (bad) incl dec rolb jle sub fcompp nop es xchg (bad) pushl mov push pusha test fdivr (bad) ljmp dec mov icebp cwtl out gs or pop icebp mov int or push inc arpl (bad) mov ret mov icebp fdivs sahf mov aad pop xchg dec add inc or sub outsl fistp pusha loop mov sahf jns repz (bad) (bad) ljmp add sbb xchg inc mov jge data16 dec cmp sub jle jg (bad) lahf and or pop (bad) mov into (bad) cld add xchg adc fmuls sub (bad) fist test add imulb ret call xor jae out push ljmp and cmpsb jo stos pop pushf mov inc sbb fstpt dec ret adc imul pop sub pushl vpackssdw fdivrs ja (bad) (bad) hlt cwtl data16 (bad) pushl sarl jns in or adc out pop xor lret mov mov mov xchg (bad) mov in scas gs or shrb (bad) (bad) (bad) (bad) fldl cli sbb fbstp and loope rolb xchg mov inc movsb test lcall loopne dec hlt rorl imul mov adc cmpsb jno fwait test or (bad) jmp shlb lods push jns inc or push cmp pop je sub ja add xchg dec (bad) ljmp cld dec sti jns lcall bound or mov outsl clc call movsb sahf sahf sub add stos and scas in sub call cli orl mov inc fwait das in ljmp (bad) (bad) call cmpsb mov outsb or aaa jp jp,pt mov incl (bad) (bad) (bad) call test stos mov pop js add cmpsb add jnp cmpsl add and test das (bad) jmp xlat scas and xchg int dec (bad) fmull out daa bound xchg jne inc call in outsb mov add pushf jo pop pop mov mov or fcmovnb stos add scas add rolb (bad) std inc jl push (bad) incl xchg jp movl jb mov lahf fist (bad) (bad) jmp inc cmp pop (bad) lahf das and lods sbb andl and jp dec or enter adc in cmp push jbe,pt jecxz lcall mov lret push mov ror in out dec adc scas push cmc jne loop mov out movsb sub mov (bad) (bad) (bad) fistpll jne push outsl mov cmpsb into rcrb or bound push (bad) jmp repz sar xchg jne aam movsl int3 jmp fucomp jge (bad) clc (bad) jg jmp fsts lods repnz lock mov shlb (bad) (bad) (bad) (bad) mov (bad) push mov inc lcall fnstcw sbb mov push in or (bad) (bad) (bad) (bad) fisubr mov sbb mov loop sub cmp scas mov inc push dec (bad) xchg adc adc (bad) call jp fildll ja out mov fcmovbe mov inc pop adc stc add repz (bad) (bad) (bad) cli lcall scas sub push lea cmpsl pop dec (bad) divl out mov ljmp xchg negl daa repz add xorb pop mov mov lds sbb jl mov mov jb cmp cltd dec lret clc or (bad) (bad) jmp mov push push mov out xor add (bad) (bad) fimul sarl js mov (bad) decl icebp (bad) mov nop jecxz adc test test ret into xchg sub decl lahf dec inc xchg xor fs sarb adc aam or pop pop (bad) (bad) (bad) call sub mov add int int3 lcall fs xchg lret sbb or xchg (bad) (bad) ljmp in icebp jmp push jp mov mov mov stos and sbbl (bad) call sub frstor cmpsl fucomi sub dec incb mov pop mulb push adc test xchg add ljmp arpl in in mov sub (bad) (bad) lcall jo lds inc xor pop cmc pop fistl test and pop mov pop or incl ds hlt cs xor scas sub (bad) incl mov cmp lcall add pop pop xchg push and (bad) in call fistpll jne inc (bad) mov imul (bad) mov xor pushf xchg sbb jb xchg lret imul pop jne xor jmp mov pop (bad) push div ficom or ja pushl aad fs dec and in test xor and jae (bad) (bad) (bad) ljmp sub xchg and mov iret cmpsb cmp inc push jae clc fnsave add loope or (bad) inc stos adc push pop xor push lcall cmp mov data16 sar into iret outsl outsb mov outsb inc call je scas mov (bad) (bad) std daa dec lret outsl test jmp xor rcrl mov (bad) or daa xchg jb hlt jge inc aas (bad) decl incl xchg adc pop addr16 sub lret pop nop cmpsl fcoml (bad) (bad) call jns,pt (bad) xor sarl jnp mov xchg dec cmp mov cli xchg mov jmp repnz push jmp dec mov xchg jmp jecxz out xor sub mov (bad) (bad) ljmp pushf scas dec inc aas fisubl (bad) iret jecxz mov sub (bad) (bad) ljmp push mov and mov jo ljmp cmc xchg push popf mov pushl jno dec lcall movsb push sub mov push adc pop inc (bad) (bad) ljmp mov push js mov jp jmp sbb (bad) push cs imul jg mov adc mov ss push hlt (bad) (bad) (bad) jmp adc or outsb lret push ljmp ret push mov (bad) (bad) (bad) incl mov cmpsl in lret mov out mov mov je,pt je cmpsb (bad) decl mov call push jne lods int3 cmp (bad) (bad) inc rol and cmp ja jg push pushf stos mov int sbb pop cmc (bad) pushl test pop enter cli mov add bound pusha outsb inc les push cmpsl popl adc fisubl pop imul ss ljmp pop jb push pop or jmp add repnz adc hlt mov (bad) (bad) fidivr cmc sub add fcom xchg cltd hlt aam sbb std ljmp in cmp dec loop jns pop mov cmc add mov fadd mov lret jnp scas leave mov mov pop scas sbb clc push decl jne mov mov lds mov pop loop int3 mov add repnz push test mov mov dec push cltd push icebp jg add (bad) popf sub xor out lock (bad) negb scas and mov xor hlt (bad) incl xacquire test js sub sti fcoml add xchg mov je ljmp stos lret (bad) (bad) (bad) pushl adc lret pop push jns ljmp outsl lret pushf lods insb push rclb jbe (bad) (bad) ljmp push in je xor and lahf mov mov sub (bad) (bad) (bad) jmp daa (bad) daa in int lods in jne lret sbb call pop lret fnstcw lock pushl mov data16 inc fisubrl lret sbb push (bad) (bad) decl xor mov or push ja mov mov into (bad) dec xchg pop leave cltd push je add dec enter (bad) push hlt or mov cmp fcmovnu dec (bad) (bad) push mov xor mov sarb and int3 mov (bad) incl or inc mov mov ficoml jae outsb jg lds jmp aam push les scas nop push std (bad) jmp out rorl bound scas fisubr mov mov fldenv (bad) xchg in fild push insb stos fstl mov (bad) (bad) (bad) fldl out jbe adc test fadd (bad) xchg (bad) mov or cmp pop xor xchg call xor mov pushf imul and mov push out stos (bad) (bad) (bad) decl lds xlat ss inc aaa (bad) aad and (bad) xor xor jmp adc ljmp out jmp adc mov bound adc or push pop (bad) (bad) (bad) lcall test sbb aas adc jns das std jecxz (bad) rorb in (bad) ljmp icebp pop outsl jecxz push stos lods leave jecxz add (bad) (bad) (bad) (bad) lcall push jl xlat in mov sbb ljmp lock testb (bad) (bad) ljmp mov clc je xorb mov movsb sahf pop sbb push jmp test jnp sbb ret or or mov insl out rcrb xor and imul cld insl mov mov mov cmpsb inc outsl mov clc (bad) (bad) ljmp test mov add pop mov (bad) ljmp ret cmpsl dec dec and movsb or loope out test or and stos xlat das adc in inc mov sbb (bad) mov in cmp lcall outsb repnz add jmp pushl add lahf out mov jne imul (bad) mov dec lret rcrb iret push dec dec mov and mov repnz test decl call xchg or push adc and mov mov cwtl cltd inc fldl add test push (bad) dec les in xchg (bad) adc icebp xor xchg adc dec or shrb jmp lea jne mov mov shr aam popf pop cs aam cs push es test ret clc adc or dec cld (bad) fisubr mov cld cmpsl mov push hlt jo and ljmp clc ret mov xor ljmp mov dec mov dec xor (bad) (bad) (bad) fisttpl sub stos xor arpl scas movsb lds add rep or shrb lods mov aad pusha fwait popa jp cmp xchg or int3 enter jb xchg push xchg flds pop inc lods mov inc addr16 inc jne dec hlt mov mov or dec test sbb xor cltd in mov (bad) (bad) (bad) dec lea shll addl inc inc outsb mov pop lock jmp mov loop push mov dec mov inc jne adc nop pop mov fcomip lcall xchg (bad) cmp pop fcompl mov or idiv (bad) (bad) call xchg jg xchg xor pop add imul xchg sbb insl insb xor aas sub (bad) (bad) (bad) incl lret xchg add aas aas push xchg inc mov cs repz je shrl adc (bad) jmp xor mov ret xor jle adc inc pop movsb (bad) sbb and (bad) and xchg enter sub iret xor dec scas dec pop push push das sub (bad) (bad) (bad) jns mov cmpsl and push add stc push mov pop push mov push cmpsb mov mov iret xchg dec fs pushf mov mov (bad) incl cld stos inc sbb jb cld jb xchg insl (bad) (bad) (bad) (bad) cmp push icebp dec popa outsb sub mov xor pop rorl dec pushf inc xchg sbb inc add mov (bad) push in into lea mov stos (bad) dec test test fwait xchg cmp icebp add insl into in dec push mov pushl insb cli sbb loope and lcall push xor add pushl mov movsb and mov into inc sub sbb inc lods adc incl jb pop loop insl outsl gs inc mov dec xchg fs xor call mov jae movsb jle cwtl push pop add mov xor rcl jle lods and rcrl fldt (bad) in imul dec out cltd jns mov imul bound mov or (bad) jmp or in addr16 xchg cmc shll mov jbe jbe pop insb call dec jle out stc lds cltd and pop je icebp sbb xor (bad) (bad) lcall ss xchg jl pop jle fisttpl div imul sar mov xchg (bad) (bad) inc int3 sahf lret xchg jb jb or cmp sbb push pushf pop xor jecxz cs cld (bad) (bad) (bad) (bad) cmp sub dec sbb fisubrl sti (bad) mov gs movsl jle xchg mov lcall call pop mov cmp jmp ds jno sbb mov in fnstenv (bad) idivl cltd mov lcall (bad) (bad) (bad) incl sbb data16 push cwtl mov ficom inc dec inc cmc sub pop test (bad) cltd fldl mov outsb cmc push pop sbb in add int3 lock mov call or daa shrb adcb (bad) (bad) dec mov sti jb dec int3 (bad) fidivr inc out inc sahf mov iret cmp add xchg pop mov (bad) (bad) (bad) dec mov xchg insb sti pop aas test jne ja adc ss xor aaa ret xchg (bad) cmp (bad) (bad) call mov lret or lock fldlg2 add cmpsl xchg mov data16 (bad) call jecxz xor push mov mov xor lock cmp (bad) (bad) mov push mov xchg hlt cmc sbb dec dec mov fwait int dec adc decl sub int3 sub data16 push mov xlat int3 movsb addr16 (bad) mov fwait sbb xor cmpsb out ss jmp pop enter pusha int3 mov (bad) jmp addr16 cmpsb pop test lods lds xchg cli and sbb pop sub out inc (bad) (bad) (bad) dec hlt lret xor cltd lods notb dec divb lock push add inc outsl pop repz bound push in adc jg cmc idiv mov xor push leave and fs (bad) (bad) (bad) dec inc divl leave mov mov cmp xor out negl outsl clc (bad) jmp mov loope jns das lahf push jge sub xor xor cld (bad) ljmp sbb insb (bad) jae cltd (bad) xor and pop insb shl mov addr16 loop (bad) lcall lds ror into jns mov jge rcr and push cld mov cld rorl add jge xchg cmp jge jl sub ljmp (bad) (bad) jg push fidivr adc mov fnsave fmuls in shrl clc sub inc mov (bad) dec data16 xor sbb inc jg (bad) lret pop std push into xchg push cwtl and daa push mov (bad) (bad) (bad) decl jg push pop rorl pusha xor cmp lods cmp sub mov cmpb cltd sahf or pop fdivs mov push add cltd pop or or imul adc and lods (bad) mov and dec dec stos push pop cmc push (bad) mov icebp lret mov movsb push adc (bad) fcomip sti in pop push es add mov or pop shlb iret mov out arpl (bad) incl jg inc xor ja xlat clc repz outsl arpl (bad) or (bad) (bad) (bad) dec cmp add inc into es jle imul mov pushf addr16 mov add inc decl in cli mov leave mov push or lcall loop std adc incl lea xor dec insl in mov rcr mov (bad) pushl js (bad) (bad) stc fwait or jmp inc leave push (bad) notb mov cmp mov ljmp icebp push shrl sub lret sbb and push mov sub (bad) (bad) (bad) (bad) in mov dec jb lods dec inc sub jnp cmp jp mov loope in in (bad) (bad) decl (bad) mov jae gs lcall sahf mov xchg jmp push sub mov mov or (bad) (bad) mov (bad) daa lds dec dec xchg (bad) (bad) mov test jae (bad) dec push xor (bad) (bad) incl dec add mov and (bad) idivl stos sbb lcall (bad) (bad) pushl insl mov pop or repnz out repz and addb (bad) (bad) (bad) incl inc add ret das fst rolb sub pop dec dec aas jnp adc (bad) (bad) (bad) mov imul adc arpl lcall loop dec setle (bad) (bad) jg adc cmp ss jecxz jnp,pn push sub inc adcl push pop pop stos (bad) (bad) (bad) pushl mov xor mov pop sub sbb inc push (bad) cmp mov gs mov add imul lods aas ds loopne rorl sbb mov cltd pop cmc (bad) lcall mov inc movsl dec rol loope sbb das pop xchg dec rcll dec sbb xlat jne fdivr mov (bad) pushl sub mov pop dec add or xchg inc pop jnp xlat scas mov repnz sbb inc fucomip mov cmc (bad) jg (bad) sbb mov dec out mov (bad) imul jne leave popa pop test (bad) (bad) fistpll (bad) in aas inc fdivs jnp pop push push mov movsb sub stc lea test inc (bad) (bad) (bad) jmp mov or aam cmp aas or test fnsave xchg xchg jmp jg push add repz in jne mov sti add jg jmp mov mov jmp lcall es mov fldl dec mov xor xchg mov hlt aad (bad) (bad) (bad) mov out stos push aaa cmp lea sbb pop int cmp aaa cld decl xorb dec (bad) lds mov or (bad) (bad) call xchg or xchg or cmp int3 cmc pop push sbb mov scas (bad) (bad) (bad) decl dec push fadds lahf fnop pushf xchg xchg mov lret pop jge xchg aaa mov (bad) (bad) jg insl leave sahf mov cmp pop lret sub xor fild or test sub pop and lret out xchg repnz mov inc iret in push shlb data16 idiv mov jl rclb and mov call cltd mov aas (bad) hlt (bad) repnz dec jecxz jne rcrb xlat xchg push jmp or aaa gs and jbe mov decl xor scas jg pop fucomp mov repnz lods and jge clc sub test pop jmp xor xor push es in or (bad) (bad) pushl dec pop or std push jae adc jo lea cs in sbb cmp aaa sahf out sbb jo xchg pop loopne and inc clc (bad) push cld (bad) (bad) incl adc mov add inc add inc inc fbld (bad) mov pushl xchg scas rol mov or add enter leave or mov lods mov fwait outsl in push cmpsb sbb clc mov xor or jle lods mov je adc (bad) (bad) dec sub fmull mov jae cltd lret mov jae ljmp lods sub mov lds outsb cwtl mov ret mov pop mov leave sub dec fiadd clc (bad) decl cmp imul jno jl push sbb adc fisubr (bad) mov out push adc and mov jae test fldenv enter mov dec mov in sbb stos ja in (bad) sti iret xchg lock (bad) (bad) incl std pop adc jg mov int fild and fs xchg cld (bad) (bad) jns mov adc jo pusha loope xchg insl jne out or mov movsl nop sub dec push add mov aad xlat jg (bad) loope (bad) jmp clc xchg test (bad) push cwtl test clc sahf jae lret (bad) (bad) lock (bad) (bad) (bad) mov addr16 and mov pop notl loope xchg test inc sar sbb ja rorl cltd and popf push outsl js mov pop sub fstpl jbe repnz mov (bad) (bad) (bad) std shll or push test mov aad fwait test mov (bad) lcall idivb adc lret sbb std (bad) pushl nop mov repz cmpb xchg xlat jae lea pop mov jmp fs in pushf arpl (bad) (bad) inc roll push push pop mov and sbb cld (bad) fildll lret cmp in in jge inc or lret popf push fdiv (bad) call xchg lock jl fwait ja aam inc xchg mov xchg cs (bad) (bad) (bad) pushl push add bnd inc mov sbb push mov enter mov fiaddl mov jle sub sahf mov cld push sti xchg mov rolb scas (bad) xor (bad) push aad fstps add pop aad (bad) (bad) (bad) call sbb add outsb mov add loop in enter fstpl jmp cmp mov and xchg aam add popf pusha cs icebp scas movsb or repnz pusha outsb add jecxz pop or (bad) ljmp mov xchg mov sub mov push in pop sbb iret out inc loope out outsl xor push sub xchg cmp jge mov insb cwtl dec push push cmp outsl cli jp int3 xchg sbbl inc cwtl hlt push (bad) push pop xchg arpl lcall jecxz and xchg (bad) pop insb outsb (bad) (bad) pushl push cmp add mov adc fiadd push das pop fsubl cld jmp (bad) insb pop test add mov test aas clc add adc pushf das jg (bad) fcomip jb xor lods mov adc imul adc mov adc sarl pop mov adc inc push add (bad) mov push sbb test or jmp mov (bad) repz pop jle lcall enter popa ret clc push sbb inc decl stc sub and add pop jbe bound inc enter pop xchg aad (bad) incl sbb (bad) push jo mov insl cmpb inc sahf jp (bad) jg pusha (bad) push (bad) and cmp stos add mov pushl test adc push aaa (bad) inc sub movl inc clc inc sub push xchg xchg and (bad) (bad) (bad) jg je sbb dec (bad) xor jns jmp mov add cmpsb jmp or push add sbb dec hlt lods mul adc sbb add fs (bad) (bad) (bad) mov adc mov pop ss mov (bad) adc ret inc sbb (bad) call aam cmp divl imul mov add jecxz divl lea (bad) (bad) push fistpl nop and leave cvtpi2ps mov sub mov loope jge push (bad) (bad) (bad) push pop mov dec (bad) fadds jecxz xchg mov stc ret popf mov (bad) in shl inc (bad) incl cld cmp and stc add fwait mov adc push push lea stc cmp das cli jmp je addr16 mov (bad) inc gs push xchg (bad) (bad) (bad) call popa add pop (bad) or (bad) xor pushw data16 inc xchg in jmp scas dec or (bad) call cwtl mov in aam pop push test pushf and in xlat jno cmc std leave test decl xor and jecxz hlt mov (bad) fdivl cmp cld decl out xor cwtl (bad) daa push cld mov inc sar (bad) mov out xchg or int add dec outsl test fwait mov lods mov lock cmp dec mov cmp fwait jns out imul js (bad) (bad) (bad) fist sbb pop sub or mov xchg roll dec pop nop hlt mov (bad) lcall fstl ss loope pop pop push mov imul fildl (bad) or (bad) fs (bad) push mov jb je push jno lods call dec lcall lcall ja enter push in (bad) mov out pushf data16 ret icebp leave jmp (bad) (bad) lcall inc push push les inc jg scas pop (bad) xchg mov ss adc addr16 (bad) (bad) ljmp test fwait add sbb sub faddl xchg cltd and mov call out cli inc ret and jp sbbb sub call mov pushf or fist mov sub aam nop mov pop mov jmp loop pop out sub test adc or call sub mov or xchg push in repz xor or cmp xor mov rolb pusha fadds xor add adc push jo xor (bad) in fucom mov ljmp and and sub pop rolb cs das xor loope push or (bad) adc int3 mov jo loopne cmp push lahf (bad) dec pop (bad) and test jg hlt (bad) (bad) mov or movsl sbb fimul push xchg enter (bad) (bad) (bad) fildll sbb outsl nop push push and mov psrlw mov cs (bad) or ljmp sar shrb inc jmp out repz xchg push pop inc sbb (bad) (bad) jge sbb add adc gs mov insb cwtl adc outsb pop lcall decb push sbb mov cltd in (bad) (bad) (bad) pushl mov (bad) lods test sub dec out ret repnz mov mov cwtl fs outsb int insb test xchg dec mov out (bad) (bad) (bad) ljmp sbb test jae test mov cmp mov outsl (bad) (bad) (bad) (bad) js sbb repnz stos cmp or add sbb daa and decl push add sbb pop ret (bad) out dec or add add mov xchg push sub ret cmp xor xor in dec iret cli (bad) (bad) lcall add jl pop mov dec ret in xor mov xchg (bad) mov jecxz cmc jecxz or inc cltd or rolb sub (bad) incl inc fs sbb lcall inc cmp jb ljmp ljmp xchg bound lret orl subb add jne iret cs (bad) (bad) call cmpsb fdivl jle xchg mov inc dec or fs sar out (bad) (bad) call adc jo sbb sbb cs jno lcall xchg negl test clc outsb mov (bad) (bad) (bad) std popf xor cltd pop mov in imul rcpps cs xchg idivb sbb jae and std (bad) (bad) dec pop fistpll loop enter sbb ret in mov pop enter test (bad) (bad) pushl neg test xor or imul aad xor (bad) ljmp mov lcall in iret xor lahf adc scas cmp call clc fildll lods jbe int3 out sahf pushf sbb (bad) xchg in (bad) fldt jle pop test call xchg mov (bad) (bad) cmp mov outsl push cmc out mov jmp add subb (bad) (bad) mov jo dec enter jl call cld jns test fisttp incl jl mov movsl jo testl mov dec mov movsl int3 mov cmpsb mov shrl mov jb frstor lock cmp lahf mov or ret (bad) (bad) pushl pop popa jle fmuls xorl cli push pop sahf and mov xchg (bad) (bad) (bad) call cmp sub loop stos xchg out sub adc in movsb in (bad) (bad) ljmp and mov es cli jle jecxz stos out mov cwtl mov mov jmp push int fistl stos add mov stos fs adc jbe pop shll lcall cmp movsb lea mov add (bad) sub mov sub incl fsubs out notl fwait scas push outsl lods sub popa sarb scas stos cli cwtl jbe pop lea lret rolb mov incl in das je xchg sub out cmp cmp and mov xor inc add or pushl pop cld notb cmpsb mov xchg xchg mov insl lods jg outsl push inc inc dec pop imul aam lcall arpl out pushf jge ret fsubs mov mov in pop outsb xor (bad) fild sahf aaa dec mov neg and test insb daa push lret sahf out test and pushl outsb inc xchg xor add lea lret clc loopne jne jg lcall call mov jp and loop cli enter ss imul arpl (bad) pushl dec nop dec in (bad) je and and sub nop cmp fcmovu sub jl or (bad) push mov sbb mov cmp incl ret fistpl jb push fcompl pop sub ficomp stos fnop push sbb pop sbb adc push pop or mov out fwait jp jg dec sar (bad) (bad) jmp div pop mov cmp in pop mov ret ror in (bad) movsb (bad) incl hlt xor mov mov xchg insb data16 dec jl (bad) lock cmp xchg je xorb inc dec add call mov cmc pop mov dec cmp (bad) sbb mov jmp pop hlt (bad) lods mov ret sti push cmp (bad) (bad) mov insb xor out lahf rcl insb push jb in (bad) fs cmp aad iret inc ljmp mov out jns test adc jmp adc push call jmp jg sbb (bad) (bad) (bad) cmp push push mov fisubr call fstl mov inc adc fdivr xor (bad) pushl dec mov push mov cmp or js arpl iret dec pop add (bad) decl or dec mov mov lock lcall in jmp push (bad) (bad) (bad) (bad) decl pop stos push pop aam mov daa jb xchg push sub popf flds or (bad) (bad) dec pop jmp mov mov cmp jmp pop jecxz mulb dec stos (bad) (bad) (bad) lcall inc pop xchg push out cmp pop xor std push test aaa lcall (bad) das mov (bad) jmp xor in jae cmc or lods and push push in jmp (bad) (bad) (bad) (bad) in bound sbbb outsb mov (bad) ret imull ljmp or (bad) call pop in xchg out shrb xchg or pop or aad jnp mov cmc (bad) decl xchg push lahf sbb idivl enter or push (bad) (bad) (bad) call (bad) push lods xchg xchg (bad) fisubl mov push fwait into stos jo fiadd inc or scas clc incl jmp stos stc xor mov std inc and push lods (bad) (bad) (bad) call jns,pt or mov lret dec cmp aam enter sbb xchg push test (bad) lcall (bad) outsb jnp,pt jp xor xchg aam jb (bad) decl lods (bad) movsb (bad) mov mov enter ret or imul or pop mov ret (bad) lcall mov enter mov dec out push fs ror pop sub dec (bad) (bad) (bad) jmp fist scas dec or repz lret fsubr popa add push and mov mov or iret adc rcr fistl push scas and into inc mov ss (bad) lcall pop popf bnd rcrb mov fmuls hlt insb orl call cld call lcall and insl adc jge push notb stc sub js pop std or (bad) fldt pop out mov sbb stos cmp call mov negb in inc lret mov in out pop or mov sub bound cmp push jnp pop mov jle sub ljmp clc orb dec adc (bad) dec jns pop out pop adc (bad) dec push or push stc adc adc scas dec jbe (bad) (bad) (bad) incl jb or push ret push sub pop mov inc lahf add jo ja aaa cld pop out jnp or movsb (bad) (bad) jae and xchg in hlt sbb pushl ret mov xchg iret popl push lret pop (bad) lods mov lods xchg dec (bad) ljmp popa jnp fdivs adc mov outsb inc dec addl push lods fildll add pusha fdiv lret xor pop jnp adc fcomip rcl es push or push out mov (bad) push mov sbb sub or jecxz adc cmp movb lods pushf (bad) or inc push neg inc ds xchg clc nop ja mov sbb (bad) lods mov icebp (bad) (bad) (bad) cmp adc js lods and mov into adc push bound mov adc movsb cmpsb popf loop (bad) (bad) (bad) test jg or shlb mov (bad) divb (bad) (bad) (bad) call push not cld in add jo outsb (bad) xor pusha cmp sbb mov jno out ret lds aad cmpsb lock push sti (bad) lcall mov js les punpckldq (bad) jb mov jg in test mov sub push rdpmc pushf cld rolb lods jecxz sti incl out pop (bad) jns outsb cmp arpl and jg sbb out add jecxz nop mov lods into fistpl (bad) (bad) call stos mov mov and xchg jns enter sub cwtl mov xor icebp pop xchg jecxz inc sahf clc mov fisubrl hlt xchg loope mov ds imul in jb jns adc outsb in addr16 fsubl loop mov lret cmp mov pop mov sbb clc push xor mov cwtl imul sbb int jb cmpsl dec adc stos pop pop arpl decl stos popa cmp pop push pop jle aam scas jo es fucomi mov test lret or push or jecxz sbb jno inc or jo jo or cld (bad) mov call cld xor lods jo jnp sar cli out (bad) sbb jle imul sahf and jl loop pushl cli pop mov xchg test idiv (bad) (bad) mov jg xor enter mov mov fsub mov xchg sub andb cwtl stos test push (bad) pushl push loope cmp dec xchg xor sahf stos fsubrp or lcall idiv (bad) ljmp std sub and push mov loopne inc stc test push scas and fcomps lock cld dec scas loopne into lods or (bad) daa (bad) pusha popf cli mov lods sbb mov xchg mov pop (bad) (bad) (bad) lcall cmpb dec in loop fwait or mov in mov lcall cmp cltd cmpsl inc (bad) mov push icebp jae loop arpl ljmp pop cld ja movl dec sbb (bad) (bad) (bad) mov inc ds fild dec push xchg fisubl mov lock faddl repnz popa ljmp lcall (bad) imul xchg push mov out add mov ret cmp push xor lcall cli sbb push push xorl add (bad) call std xchg into mov and jb int3 mov js into imull add lock jmp dec pop lods sub addr16 jae xor (bad) lret out lods and test inc (bad) std (bad) and pusha aad in cmp pop jns ds pop test lods jbe bound clc fcomip lods inc aas push dec ss lods dec nop dec (bad) in decl lock repnz int3 fldenv out sbb cmp test test mov dec sbb test (bad) jg popa xor push dec (bad) movnti mov test movsl mov (bad) pushl lcall sub push jl lods dec or mov daa pop push mov int out xchg cmp loop pop cs mov test dec add or add pop mov dec pand arpl mov add scas adc jbe pop adc out push xchg cli (bad) js lds mov gs lret mulb jbe out test adc mov adc sar (bad) (bad) inc (bad) push add mov repz or rcl push push and (bad) rcr shlb or sbb inc test (bad) (bad) (bad) mov sub int3 roll adc fdivrl cmpsl add xchg jle jmp es mov (bad) mov loopne mov mov (bad) incl pop loopne xchg movl std sbb in cmp std cmpsb (bad) dec ffree fdivl cmp scas inc push xorb into (bad) repz ljmp mov pop test imul aaa jl add out cld (bad) fsubrs cs (bad) (bad) (bad) (bad) call mov fadds scas mov (bad) jnp sbbl xor test (bad) push jo jbe jne jecxz sbb aam jge in bound je imul push outsl clc lahf cmp mov xor or lahf pusha sbb add (bad) call ret (bad) popa sahf mov mov or pcmpgtw (bad) (bad) incl sub lea cmc addl ss cld aad jle push push popf icebp jb (bad) (bad) (bad) mov mov shrl fdivs add das gs int3 into xor pushl and das xor xchg sbb stc xchg xor sti dec push mov test test mov adc aam xor das mov lods es decl pusha ret es xchg inc and daa push mov scas enter jg sub xor jle cmp sub adc js cmp inc loope pop insl mov ljmp int3 mov (bad) and jl out and inc sbb and mov pop movsb (bad) (bad) incl jecxz hlt aaa mov mov mov xchg cmp inc jno sti mov sar fnsave stos cmp inc xlat mov pop or jns jle repnz (bad) test pushl incb nop jns out mov cmc flds dec xor lock sbb inc adc inc xchg hlt xchg out push in (bad) (bad) lcall cltd movsl mov sbb push nop mov and jae mov ds (bad) (bad) decl cltd mov out sub xor lea test aas popa xor rcpps mov dec insb je dec (bad) call repz aam (bad) insl imul sbb (bad) (bad) (bad) (bad) decl fsubs and aas jns rcrb in mov loop push (bad) (bad) (bad) (bad) fisub sub push leave fnstcw mov mov inc ja dec (bad) jg lcall mov movl mov pop mov cld adc jg (bad) lcall insb leave popf mov inc mov stos stos mov js lock pushl clc inc test sub push out test lock push js and xchg and mov adc cmp pop icebp imul (bad) (bad) (bad) decl jns xchg sub ret xchg repz test mov push test gs (bad) (bad) (bad) out fistp xchg lret fldcw sub ds pop mov sti or lret (bad) xor push std (bad) jmp cmpsb jae test mov cmp pop pusha mov mov or pusha mov jbe ljmp clc mov cli push or flds lock and scas mov (bad) (bad) (bad) in popl ss jmp mov sub sbb cmp incl inc xchg pop and movsb iret loop xor pop in ds pop adc test std mov (bad) (bad) call hlt std add imull imul or or cwtl pop and ljmp movsb inc lods add mov aas lcall incl (bad) pop add adc pop add out inc pop out sbb inc je or cs sub pop outsl pcmpeqb mov lock cli fcomip decl cltd in rcll sahf sahf decb sar pop jle arpl (bad) (bad) ljmp (bad) adc loopne sbb jnp,pn add xor push hlt dec adc dec dec fild adc (bad) incl inc movb negl fbld inc mov jmp nop push arpl cmpsl inc ss and xchg lahf imull enter and (bad) (bad) jmp sub (bad) adc push arpl outsl cmp or dec subl (bad) incl lock push rcrl sti add clc (bad) cmpsb push jp fcomps test lret (bad) (bad) (bad) lcall lods repz push stos push mov adc sub mov xchg xor out (bad) (bad) (bad) mov adc cld cwtl jecxz fnstcw stos (bad) push lds pop mov insl fimul fs (bad) (bad) pushl scas and in push movsl xchg adc dec inc enter inc lea notb jnp (bad) (bad) decl gs and and sbb sbb mov mov cltd int3 sbb (bad) (bad) push xchg gs and lret dec jle std mov stos dec jg xchg jbe inc sbb (bad) (bad) (bad) mov bound cmp cli in dec inc orl adc in (bad) (bad) pushl pop and sbb cmp call jg jg cltd sub cld xlat pop jne (bad) (bad) (bad) (bad) jle lods mov in mulb enter divb push push sbb mov ljmp pop fisubl inc bound or test cltd xorl rcl cs pushl sti fldt (bad) xor push outsl call xchg call and jno pop cmc decl inc cmp cmpsb cmp add push or movsb jno rcrw call pop in xchg int pop out mov faddp jle pop insl mov test dec mov mov adc cli mov sub fxtract cmp clc (bad) call arpl fs popl sub jno push out iret sti lret (bad) (bad) incl and idiv (bad) mul inc imul mov (bad) inc and sub adc xor push add hlt mov es ljmp pusha add adc pop push repz sub pop (bad) fisubl mov or lds jae dec ja push jne pop repz repz (bad) sbb (bad) fidivr out fst fidiv cmp imull jnp mov pop xor pop loopne jl dec outsb inc inc push adc les out lods lahf jg (bad) xor mov stc xor mov jcxz (bad) mov dec sbb lahf popa xor incl lods lock xor dec loopne (bad) (bad) decl mov sub scas cld (bad) mov out stos aaa scas adc xchg pushf jecxz mov (bad) (bad) (bad) push cld mov aad sbb repnz pushf test mov outsl cmp jnp jg lret (bad) (bad) incl int3 (bad) in lcall jg fsubrl push in (bad) (bad) (bad) (bad) cmp out icebp mov inc lea (bad) aam ja push pop inc jg jp jp sub (bad) (bad) (bad) dec pop imul and mov sub ficomp rcrb jno (bad) (bad) jmp jbe add xor add jns out sti out fmull (bad) (bad) (bad) (bad) clc mov popa int or xchg xchg adc inc jno or mov std jmp (bad) xor mov push xlat cmp std add je cmp add cmp (bad) call adc dec mov jmp add jg adc call xor add test vmread leave inc dec jp out xchg pop xor mov mov pop dec add xchg sbb and stc xor (bad) (bad) (bad) cmp cli mov xchg mov hlt sbb xor lock sbb cld nop cli (bad) (bad) jg sti (bad) movsl mov mov setbe or xor jg scas stos adc adc or sbb or fwait inc pushf adc (bad) mov movsb mov hlt sbbb outsl push out std std push pop xor cmpsb icebp sahf lret mov and cld inc add push fisub adc (bad) (bad) (bad) jmp inc out cli imul dec cmp ffreep push add (bad) in jg fiaddl fnop icebp incl das je stc jns loope mov push mov icebp aam std ret (bad) (bad) (bad) jmp cwtl aaa sbb adc pop (bad) clc push mov popf add mov mov dec out (bad) (bad) (bad) dec add cmp addr16 fistp jg sbb cld mull sub mov sub mov cmc inc std call dec lret das xchg gs lret repnz sti aad push sbb (bad) cmp in dec add dec sub inc push jp sub (bad) lcall in add jg mov xlat pop imul das inc cmp inc dec mov outsl scas jg jge mov mov data16 in mov scas out mov (bad) (bad) mov sbb outsl das (bad) xchg int fwait xchg push (bad) jle pop pop mov mov (bad) (bad) outsl leave clc inc addr16 jp lcall fyl2xp1 pop aam jp mov jne ljmp cwtl fwait jb adc bound xchg inc and (bad) (bad) dec push rcll stos mov (bad) pop lahf leave fmull js sub pop lea nop mov iret loop mov adc aam stos (bad) pushl sub jo (bad) push xor inc fmulp icebp inc mov jmp (bad) aas sub dec xchg (bad) incb (bad) emms adc push xlat repnz sbbl decb and jecxz arpl push pop pop jns push dec (bad) jge (bad) ljmp sarb jbe sub lcall popl sbb outsl push std add clc jle inc stos cmp in hlt pushf jne jnp (bad) pushl dec pop sarb pop cmpsl mov push scas das pop mov mov (bad) cld push add (bad) (bad) jg insl aaa jbe xchg push pop insb xchg fwait xchg stc mov mov stos jne pop pushl (bad) mov cmpsl push icebp fwait scas dec imul pop fisttp insl pop lds mov fldcw adc dec sub push outsb jbe mov ss mov add pop (bad) std xchg mov mov (bad) (bad) (bad) jp adc push pop jbe cmpsb mov cwtl fildl jmp push out cs scas fsubrl int cmp rcll inc cmp xor pop data16 cmc push mov push pusha outsl mov int3 js lods (bad) (bad) (bad) decl sbb cwtl sub into and or mov cmp dec xchg fs mov mov and sbb add pop insb ljmp out mov sahf jmp scas mov fdivl cmpsb stos ljmp push and dec ficompl mov inc (bad) call mov push sub je or scas and mov andl icebp push mov xchg cmp mov iret cmp lds movsl rol fimul and cmp xor lods push icebp popf iret pop pop jge lods xchg jle cli mov jnp cmpsb mov pop dec add (bad) jmp add xchg add mov sti mov in mov repnz sub mov into jg scas xchg lods repnz push jge sahf iret (bad) out ret addl xor mov call mov cmp (bad) cmp mov and dec adc push xchg ret push out pop jmp fidivrl pop dec orb jl cmp shr cmc (bad) (bad) pushl in sub cmp inc pop popa aas cmp push pop pop pop je and sbb (bad) (bad) mov mov mov inc fmuls ja mov sbb (bad) (bad) lcall pop sbb sub mov push mov mov fsubrs (bad) (bad) (bad) mov and xor sbb (bad) lahf nop inc add repnz (bad) xor repnz cmc incl (bad) decb and loop imul push push push movl enter (bad) (bad) mov adc or popa daa xchg std scas mov push icebp in sarl fnclex sti and cmpsl imul (bad) (bad) (bad) cmp lret xor das mov test (bad) (bad) mov push mov int3 in cmc xchg test cmp pop lea add mov dec push leave xchg add cs pop call pusha mov xchg fdivr (bad) incl mov scas int3 inc out pop pop inc mov mov push lahf out sbb icebp mov cmp mov and jg jmp ja add push cmp pop lods mov (bad) test cs push xor add jg cmp xor ret jo mov mov or stc aam sub (bad) (bad) (bad) dec arpl and mov lock (bad) sub push pop push mov decl mov pop dec push xorb adc imul mov (bad) sbb push (bad) jo ja pop cld mov (bad) lcall daa and fild (bad) leave jp jecxz (bad) dec add adc xor jbe imul lcall out ljmp addl adc jecxz jg hlt xor (bad) (bad) pushl lea mov mov data16 jp,pn mul dec jnp xchg sbb cli mov loop loope dec or push mov xor pop mov mov aad into xchg xchg jmp movd mov test (bad) (bad) jmp in in test (bad) icebp aaa jecxz xorl lret cltd add call mov fsubs insb (bad) call adc scas pop inc cmc xchg movsb clc inc inc pop std cltd jns das cli cmovo std mov xchg cs clc sub dec xchg push sbb jno ljmp add mov decl inc and jge adc mov rcrl popa lock inc mov mov mov (bad) cmp sar movsb loope xor lahf and push jnp in sti addr16 movsl int insl (bad) (bad) (bad) ljmp in cmp xchg adc aam lea sbb dec sbb nop rep xchg adc div incb mov cs cli sub xor push enter test scas lret adc pop pop xchg inc dec ret pop imul mov pushf adc (bad) (bad) ljmp cmp adc lds inc (bad) clc jnp dec dec mov sub cmp es (bad) jg cmp jl into cmpsb push std add cmp mov fdivl (bad) (bad) jmp cmp es cmpsb xor frstor inc push jne lret mov or pop inc loopne adc mov loop cmpl lock (bad) (bad) jmp cmp push cmp sub ja pop subl dec push js cmp aas (bad) (bad) (bad) ljmp xchg xor dec sbb outsl je pop les repnz jecxz mov cld push pop sub insb movsl xchg add (bad) incl and push add fisubrl mov adcl (bad) mov out xor enter (bad) decb add jmp mov cmc in mov jae sub adc repz test bound dec mov cltd inc xchg add dec dec sarl push adc lods sub fstpt sub (bad) (bad) (bad) (bad) frstor mov mov out inc movsl xchg scas cld lock add mov push faddp push stc (bad) (bad) (bad) jmp lock fadds xchg (bad) pushf (bad) lock stc and push pop or (bad) dec ret dec mov pushl daa rcl scas jbe xchg jb std jno xchg lret jb pushf addr16 (bad) (bad) decl aad jmp xlat enter cltd jge xor sub xchg daa mov in lea call in sbb inc dec dec and push sub push outsb pop fnstenv cmpsb lret jmp (bad) (bad) pushl push (bad) ljmp sub test (bad) inc add pop cltd mov test push (bad) jo clc (bad) (bad) lcall std ss ja fistp push pusha mov xchg lret inc mov push les in call xor xchg xchg arpl mov movsb enter and lock clc push bound pop call push jnp or scas clc lcall outsl sar inc (bad) push and addr16 push cmc xchg jns (bad) xor ljmp pop (bad) and insb por sbb fnstcw (bad) (bad) (bad) decl xchg or lret popa hlt lahf xchg shlb pop push inc insb fcoms xor ljmp gs xchg cmpl negl push jno inc testl push lahf pop pop inc jle (bad) call ljmp add mov mov mov outsl xor stos inc das mov loop ret (bad) call xor cmp push jmp (bad) pushf mov mov lcall and (bad) decl xchg out test or movsl fcomps stos imul pmullw (bad) (bad) ljmp repnz movsl xchg sbb lock ret popa (bad) push roll repz gs (bad) (bad) (bad) in dec ficom pop lret xchg leave stos jbe jecxz in out lahf dec out adc xlat call xchg push int3 inc mov ret add inc jg or cmpsl pushf loope (bad) (bad) (bad) ljmp test scas dec cmpsl sbb daa or or mov pop testb loopne dec ret mov in shrb pop sar mov hlt sub mov fildll mov mov inc mov push pop jmp adc rcrb mov add jg lock (bad) (bad) fild roll jecxz shll and sub jbe cli fwait dec (bad) cmp cmp insl (bad) lcall xor mov add loopne fld lcall mov (bad) (bad) (bad) (bad) clc iret dec imul lea mov xlat loop cmp mov mov (bad) call imul pop movsl (bad) xor add mov pusha sahf in daa or (bad) (bad) (bad) pushl lods shr adc imul cmpsl fsub xor in enter (bad) (bad) sub pushl mov jp inc clc pop out mov jmp mov je (bad) (bad) mov push mov nop push cmc xchg fsubrs lods in mov pop scas mov call mov out fucomp (bad) loop es ja push mov mov in (bad) (bad) (bad) aas ljmp cld flds xchg xor ret push adc cmp pop std call sbb add dec enter ret ds mov test cld pop pusha pop cmp xchg ret mov mov mov loop (bad) (bad) (bad) cmp push or sbb mov inc sbb fsts pop pop pop ds (bad) (bad) (bad) call dec mov aad sbb xchg sbb scas imul jnp insb xchg (bad) pop (bad) pushl mov shl sbb sbb inc jb sub adc sub dec xchg mov push gs mov push out and dec stc pushf pop (bad) (bad) ljmp push (bad) arpl inc push push pop mov imul orl push inc ret mov jg inc fisubr scas stos mov shl mov fwait sub push mov or in sar ljmp xchg sub add inc sbb mov xor (bad) sub xor imul inc call and aad mov (bad) (bad) (bad) mov dec pop inc cmp mov mov mov jmp aad (bad) jmp sbb or dec mov std repnz sbb xlat xor mov gs (bad) (bad) jg add stos inc and fwait add mov (bad) mov outsl push xorl pushl and cmp imul mov pop sub mov jne (bad) (bad) mov sbb lahf jno bound lock inc pop cs in (bad) add push pop repnz xchg add inc and adc push dec out mov outsl ja jb push fcomip (bad) call push cmp jae adc aaa out cmp test jp and and or (bad) (bad) (bad) jmp pop js aaa or mov inc outsb and push inc rolb inc movsl notl cmpl outsb fldl jns bound and mov icebp fs pop loopne (bad) (bad) ljmp lcall sbb js ret mov cmp push loop movsl repz xchg pop outsl push xor jmp je mov stos in mov push mov mov jg add insl push cli add push jp mov (bad) (bad) (bad) decl mov sbbl stos lret push and mov in fcoml or mov jmp mov pop (bad) pop push (bad) push xrelease add dec cmpsl mov cmp dec cli insl (bad) mov addb pop insb lcall sbb pusha mov (bad) (bad) incl orl out idivb fisubl addr16 jae cmpsb and add push cmpsl sbb mov add sar (bad) (bad) ljmp mov std push pop sub xor xchg inc sbb ret add sar (bad) (bad) ljmp mov bound push and jecxz ja and dec fisub adc ds cmc jge out and pop pop out fistp (bad) call scas mov adc mov ss je aaa push fdivrp mov mov jge popa sahf data16 into out (bad) (bad) decl push popf sbb jbe mov jg jmp lcall jo stos and enter out mov das gs dec inc je adc fcomip or dec dec xor inc sti iret and iret cmp popa cs (bad) pushl data16 (bad) hlt int cmp cmp fisttpll ror or inc fmull (bad) (bad) (bad) (bad) ljmp outsb adc pop movsb sbb pop and bound rorl pop jle (bad) (bad) decl xchg xchg jp (bad) icebp sub lods jp or movsl lret (bad) jg mov mov sarb outsb andl loope loopne (bad) inc sti (bad) mov jg lea pop sbb xchg cmp js test insb daa cmpsl cmc (bad) mov pop cld mov nop xchg pop mov int3 imul sub add xchg mov inc lcall pushl out inc add inc and pop pop cmp jmp inc dec fwait call out cmp pop (bad) (bad) (bad) lcall add pusha lock aam or dec out mov sbb inc rcr cmp call data16 pop xor sti push sbb lahf mov push sub inc sub insb pop sub iret icebp add sub cs jl stos inc int3 cmp pop fcomip das movsb or (bad) or jo leave or jns (bad) (bad) call push (bad) and rcrb mov icebp inc jno sti mov (bad) jne ss add call (bad) lds imul frstor sbb pusha add adc dec (bad) (bad) (bad) jg lret scas mov cmp sbb call cmpsl imul (bad) ljmp outsl out hlt jge in ficoml loop repz mov cmp outsl cmp push enter push pop dec jecxz or inc js push cmp ljmp fcompl and push adc jle mov and test jl pop insb call pop movb jbe ja mov outsl add cmpsb jle xlat pop sbb movsb ret add decl jae sbb sub xorl ljmp or or xchg cmp loope enter arpl push pop jae,pn mov mov pop inc inc sub mov fptan mov scas lods (bad) jb out mov ljmp pop fdiv jbe addr16 loopne inc clc inc jg xor in mov aad (bad) (bad) (bad) mov (bad) jp sbb push lcall pop dec hlt aaa xchg jb mov (bad) cli lcall sbb cwtl adc sti xor bound (bad) (bad) fbld insb inc ss sti add add inc leave or and (bad) (bad) (bad) (bad) mov aad insl inc add push enter pop inc outsb inc je xchg pop push jp pop lods je jno inc adc rorb mov lock outsb inc xchg fst (bad) (bad) (bad) call ficom (bad) sbb mov xchg gs loope add or (bad) (bad) (bad) decl pop jb cld cmp dec sub xchg and add pop repz sbb repnz xor or insl xchg inc fisubrl xor xchg movsl jns and ss test add pop fmuls pop jmp fldl2e sbb jb cmp jno sub adc xchg subl add std (bad) (bad) jle gs mov out into (bad) std popfw xchg rcrb popf push mov in insl sub (bad) (bad) decl dec dec lock dec in mov push cld adc inc sub push xor repz push leave fcos (bad) (bad) pushl movsl jbe addl in (bad) (bad) pushf dec repz lret mov ret xchg lods loopne sbb or adc ss mov and dec mov decl and scas lret mov xchg ret mov mov leave in add call sti mov fcmovu les hlt aam pop insb jns ljmp shr mov movsb inc data16 js push icebp imull mov or jg outsb dec and fwait adc sub loop (bad) or cmp cmp fmull (bad) (bad) mov enter inc sbb sub dec (bad) fnop mov mov cmp push (bad) (bad) (bad) incl rcll sbb cmp popf xchg add jle jl ja clc incl int inc push repnz push dec imul (bad) call and test mov mov inc pop xor loope adc sbb ja stos adc stos sub (bad) (bad) (bad) lcall push xchg andl inc push jb or jns mov and push mov in mov pushf insb fs mov dec std fdivs push sub sub ret mov fdivr out mov lods xchg mov add es mov stos mov jnp sbb sbb pusha push fmuls out mov std xchg sbb inc push xchg xchg (bad) (bad) lcall mov mov xchg lahf adc mov adc mov stos jno (bad) mov dec jle sbb sbb repz imul dec (bad) (bad) (bad) (bad) jle and bnd and int js ds cmp rol mov fwait test (bad) incl push mov arpl mov jno mov sarb std mov sti mov (bad) (bad) fmull pop push inc popa nop stos xchg lock (bad) out mov (bad) rorb add loope call popf int3 and jmp sub mov pop and mov das cli (bad) fildll pop mov flds stos pushf push jb daa sahf jl repz mov in (bad) fcom loop push push mov mov int and rorl xchg mov test adc xchg dec add inc arpl push gs dec (bad) (bad) out clc sub test inc gs sub test cmp and (bad) (bad) lcall lock js aad lret ret fmul dec mov inc jno and (bad) ret mov (bad) jmp lret adc and in dec mov or sbb (bad) (bad) pushf dec arpl xchg outsb xor leave movsb test insb push sbb test mov dec mov (bad) decl cmpsl jl cmp les icebp hlt xor (bad) enter cmp (bad) ljmp and xor into sub std fldt xchg and out in loope xchg aas dec cmpsl xor pop push ljmp cmpsl movsl cld out lock lods xor sub addr16 jo pop jg iret cwtl push adc (bad) (bad) pushl xor fcompl lahf jae mov es int xchg push pop sbb repz sti fwait ljmp (bad) (bad) mov rorb mov je (bad) jg (bad) pop jle dec mov (bad) (bad) (bad) (bad) mov repz lahf ret jo mov sbb (bad) jmp lea aam ret (bad) (bad) (bad) pop pop stc or movsl add inc sub sub mov xor stos (bad) (bad) (bad) pushl push jg in xchg inc (bad) in mov jp popa and aad pop jo pop (bad) (bad) (bad) decl pop loope aas push sub mov jb push dec ficom xchg lret xchg imul inc loop (bad) (bad) push dec mov nop test xor inc leave les movl push or add add dec cmp cltd inc push addr16 mov mov (bad) ljmp (bad) xchg jl (bad) int3 jp rorb push mov jl fdivr jg incl and loope insb stos aas lods dec cmp adc repz imul sub or cld mov cs mov push dec inc mov (bad) (bad) (bad) (bad) jmp pop fcmovnb xchg mov push fcmovnu das jne dec fwait stos test (bad) dec xor sbb fisubr (bad) inc dec inc cmpsb je cmp in mov and mov or (bad) call adc pop repz mov xchg adc cmc mov (bad) (bad) (bad) fistp repnz sbb fdivrl adc sti rcrb test ja or rcrb popf ss sbb pop xor dec inc push lret mov roll jge mov adc (bad) (bad) pushl cmp stos orb xchg adc js movsl dec stc mov adc js (bad) (bad) (bad) inc jb jne lods lea mov fsubrl adc je loopne pop mov ja sarl rcll dec sub push (bad) (bad) mov xor sbbl ljmp scas mov mov (bad) (bad) in cs mov pop jp cli popa in hlt je (bad) (bad) mov in jge sti xchg icebp jp in pop imul cltd push imul cmpsb pop jmp cli (bad) (bad) call insb stc dec cli daa scas or adc fldcw xchg out loop cmpsb jno imul leave (bad) (bad) ljmp (bad) cmp fwait xchg push orl xor (bad) repnz insb mov std cmp mov int clc (bad) (bad) (bad) jmp (bad) or sbb cld mov insl sub test push test (bad) ljmp (bad) imul mov push sti adc lds jle push ljmp and cmpb inc (bad) mov scas mov (bad) (bad) decl int3 addr16 cmc lahf popf mov ret rcr jns mov fnstenv rcr and lock push aaa push jg (bad) mov rcll test pushl and pushl ljmp test js pop inc (bad) incl sbb pusha mov (bad) hlt jbe cmp ljmp push loopne (bad) js enter xchg jge into cli jae fcmovbe (bad) loope push ret hlt es mov lock (bad) fistp jge,pn xor es cmp jle ljmp (bad) (bad) decl stos push popa jno addr16 (bad) pushf je mov sub sarl jge mov (bad) (bad) (bad) (bad) fistp sub push xchg and jnp mov rolb fisubr (bad) pushl cmp xor sahf push stos and jle mov xchg cmp mov inc js push out (bad) mov cld sub mov mov mov dec push dec lea xchg lcall sahf push iret out inc jecxz test inc jbe add adc mov mov inc fnop or cld jge dec xchg mov push test dec movsb xor sahf pushf sbb mov pushl mov xor rcl enter xchg fbld sbb out mov hlt adc imul js xchg mov out jp fcomp insl sub sbb int (bad) push clc test rol dec (bad) int3 test les (bad) lcall sti push iret daa daa cld movsl mov and pusha jecxz scas mov xlat cmp jae sbb test int mov aam (bad) (bad) (bad) mov ljmp push in (bad) jbe jne out cli add inc push inc dec pop (bad) (bad) (bad) jmp jp push jl adc mov sub in xor pop rcrl cmp (bad) lcall dec popa xor pop fnstenv pop mov ja les movb pop std das clc lcall iret lods xlat aam aaa dec mov nop jecxz sti mov divl push dec adc (bad) out nop addr16 xchg pushl jecxz repz shlb pop fcmovne aam mov in cwtl push dec xchg inc sub mov pop fwait outsl loop cmc push daa mov mov repnz pop jg jmp jne cmc (bad) jmp in bound mov shr daa out or mov outsl (bad) (bad) mov repnz mov jmp ja mov int3 inc pop movsb fmul jae (bad) (bad) lcall in imul xchg std and gs inc rcrb mulb in (bad) (bad) (bad) ljmp std stos icebp call cwtl int test (bad) sub pop dec pop sbb std xchg pop pop push stos cmp and pusha adc add sbb out (bad) mov jg cli xchg addl (bad) (bad) call lock push repz or in xor nop adc enter loope (bad) cmp jbe mov add mov xchg adc loop or ljmp sbb mov lds mov (bad) (bad) cmp adc jo sbb push push jne mov xchg arpl mov pop mov int3 imul mov or mov decl mov jae cs sub decl mov loopne dec test sub mov rorb (bad) jg mov cmp pushf add inc push out jmp out adc fisttpl (bad) (bad) (bad) incl xlat mov fsubrl sub fnsave in lods repnz jne fwait mov movsl pop pop insl pop dec ss (bad) push or fnstsw ss mov push in xchg mov sbb jg push mov (bad) (bad) call ja js dec je sub imul pop pop cs mov cs (bad) lcall shr sahf pushf pop cmpsl lods mov ds lods inc dec cmp inc test lcall (bad) incl daa rclb push test or push and (bad) (bad) dec mov aad sbb push jns insb aas pop out aaa lock mov pop sub (bad) jmp push and sbb pop xlat mov fsubr push jno fs jge push (bad) push and mov lcall repz and mov test or push dec push fmull pop imul push jge arpl cld dec (bad) ret (bad) (bad) mov xchg pushf sbb cwtl std das (bad) jle xchg dec shlb insl push push stos adc (bad) call in dec into repz mov lahf cltd pop cld ljmp iret pop or jg cmp add inc out mov insb (bad) (bad) (bad) call inc cmpsl push sbbl inc fsts sub and ljmp xor pushl cld pop mov cs jg out in mov aas fsubrs inc (bad) (bad) (bad) decl add jnp test pop lahf sbb mov push aam out xorl or idivb xchg add mov dec imul pushl cs sub (bad) decl sub push add cmpb pop mov loopne (bad) (bad) (bad) pop push xor nop pop lret xor fdivl mov out push pop mov jl loop imul xor (bad) ljmp mov mov pop aad mov pop fstpl pop or (bad) (bad) jg loopne or nop xchg lret jmp sbb push sbb dec (bad) (bad) (bad) decl push inc jo inc xor jae stos rcl cmp enter iret movsl int aad arpl imul out clc dec jmp sbb ss mov adc ljmp and das push je and xorl dec jp dec (bad) (bad) (bad) lcall jno pop (bad) mov push fcompl add inc mov aas hlt lret xchg loop (bad) call dec push mov push sub aaa push (bad) xlat lods imul mov (bad) mov and sarb cwtl pushf cmpsb scas insl imul xor inc jo mov icebp ljmp (bad) mov ficompl (bad) (bad) dec mov pop adc test lds in in jmp out es movsl not (bad) (bad) mov hlt int cs fistl les or xor add (bad) call loopne bound or dec divl sarl int3 add cltd xchg cwtl sub (bad) mov outsb jns (bad) pop cmp (bad) test cmp push test fwait mov out imul dec push inc mov fnstenv lock add inc cltd (bad) iret mov push jp mov outsb clc ljmp dec sub mov fisub fstp cmc pop and mov orl xchg scas fstpl jmp xor inc cld (bad) xlat lret mov (bad) ljmp jecxz mov das or mov jo fs jl (bad) dec (bad) mov sbb in adc fldl sub mov inc (bad) js icebp (bad) (bad) lcall jo xor pop jb xchg dec adc cmp das insb movsl daa xor mov inc sub mov jmp insl push jge cs xchg fcoms sar (bad) (bad) (bad) in stc mov mov (bad) out xchg lods aaa dec pop adc call cmc ljmp mov jno fnop fxam mov inc fisttp lock (bad) cmc mov cwtl into pop mov cli hlt push das pop dec xchg cmp ret pop jg mov cmpsl mov mov (bad) pushl and cmp jge out push icebp jmp aad ja mov outsl push fcmovnu add (bad) (bad) (bad) pushl push stos cld cmc push fwait jne and mov aam outsb sub stos xor cli add test sahf je jns push fdivrl fiadd nop scas push (bad) (bad) fcomip orb cmpsl dec loop aam mov and fcmovb jg lods pushl aaa push addr16 cmc (bad) pushf lcall xchg lcall (bad) cmp in popf add repnz movsb add jge test xor add (bad) ljmp push fucomip cs mov pop jmp mov pop ja (bad) decl ds popf scas sub pop (bad) dec das inc int3 cltd pop pop xchg jp leave adc or dec dec xlat (bad) (bad) mov loop sub int3 cmpsb xor lods add popf inc fdivrp insb jecxz (bad) pushl imul adc int sbb ficoml jecxz pop sub (bad) fldenv jbe fcomps ss sbb (bad) (bad) (bad) mov ret icebp add rcll sahf cmpsl add fcoml ret clc (bad) (bad) (bad) cmp mov in xchg (bad) fwait and push jp jnp mov in outsb punpckhwd cmpsb aad data16 (bad) mov sbb mov push mov pop outsl jnp jp jnp sbb outsl mov xor and mov dec xchg lods sub xchg mov dec mov lret fmull outsb insl movsb data16 or sbb pop (bad) (bad) jg or push repnz stc push nop mov mov xchg adc xchg dec jb (bad) pushl std sub (bad) mov mov sub adc xlat xlat sti xor int3 (bad) (bad) (bad) (bad) incl lret sbb mov orl xor in mov call (bad) push fistpll cmp repz mov fs icebp sub in pop ret mov lret (bad) and and (bad) (bad) (bad) push iret dec arpl jb sbb xlat in xchg into pop sub sti shrl inc fmul dec sbb (bad) (bad) (bad) (bad) out cmc in loope lock in xchg ljmp jmp push leave fbstp or call inc rol movsl sub xchg jno push mov test (bad) (bad) ljmp xchg adc int3 cmpl cwtl jns and xor lcall fs repnz (bad) jae xor imul dec pop inc xor adc hlt jnp xor mov cs dec fmuls lahf push stos push iret sti (bad) (bad) jmp std xor in mov test inc cs es adc pop cli add incl fistpl aam iret enter inc imul test mov (bad) lcall jb cmp dec mov jle bnd mov lds mov cmp xchg rorl lcall and xorl mov inc push test xor jg imul sub jns icebp movsb cs jl (bad) xchg repnz sar or sub mov pop xor nop dec add call mov and (bad) sahf jae pop pop cmpsb les cli push (bad) (bad) lcall xchg adcl adc es xchg movsl xchg push (bad) mov fwait mov test ljmp popf cli cwtl mov mov or daa xchg ret or inc in mov xor sbb cld (bad) (bad) fcoml xor jne (bad) lea xchg pop (bad) out call aad dec icebp cli insl inc ret (bad) (bad) (bad) (bad) mov popf sbb dec dec pop jg rcrb pop lret aam sub or ljmp cltd pop add cmp sub popf inc inc push jnp rolb push repz addr16 jb mov (bad) call lock das xchg (bad) fwait leave stos movsb notl adc mov (bad) call scas dec mov pop test jb ljmp push (bad) (bad) (bad) jmp pop dec inc mov push add aaa rep mov in mov into push dec (bad) dec (bad) stos (bad) (bad) (bad) pushl jae loopne in cld shlb cli ss sub cld shrl rol je stos cli mov (bad) (bad) cmp ret xchg cmovs xchg call std in and push arpl or cli mov mov pop sbb aad hlt je pop mov sbb cs jle xchg in xchg addr16 lds xor out scas or and (bad) (bad) dec jp std mov mov jl mov jl jns sbb test jecxz inc push push out and inc adc ljmp xlat pop into mov push sub push rolb fsts xor add lret fdivr ljmp clc cwtl outsl or out mov xor leave add or mov (bad) jmp (bad) in or shlb adc mov orl (bad) (bad) (bad) (bad) stc frstor cmpsl mov dec sub mov cltd inc mull jecxz jae lods test lcall xchg xchg sbbb insl sub fs cmpsl push pop push and std call sti mov idivb test dec mov adc and jg and and push pop in add imul (bad) dec add out mov data16 lods out shl popfw push push xchg mov adc test mov or adc mov push mov rcr jmp jl (bad) (bad) (bad) incl push ja jae mov fyl2x clc inc dec ret xchg imul cmc push and xchg lods mov mov (bad) pop sub (bad) fistpll lods stos outsl mov rcl mov add (bad) (bad) pushl rclb or mov and dec daa push sbbl mov mov jmp push or jecxz inc inc pop dec mov (bad) (bad) (bad) jg adc lock dec push xchg dec adc fwait adc adc xor pusha mov mulb push dec and dec mov mull mov mov sub (bad) (bad) (bad) jmp inc mov cmova mov fistl mov nop and (bad) (bad) (bad) incl adc lcall lods pushf push into add mov xchg mov loop sbb push loope pop (bad) push sub push cld and jno pop or inc je (bad) jmp or mov lret xor ss fsincos fcomip (bad) fsubs push xor jecxz sbb movsb inc aas xor cmp aaa lea add (bad) (bad) out xchg jno xchg mov shrl cmp in add or ljmp int3 mov xchg adc sub add (bad) incl das and cwtl lods pop incb sub cs sbb dec adc cmp in pop ljmp (bad) (bad) ljmp push (bad) adc addb mov lret sbb mov enter (bad) (bad) pushl lret push pushf xchg lret jmp enter pop mov out out movsb test push mov in ljmp pop fdiv mov pop aaa inc sub aam add lds (bad) hlt lcall or stc in mov fwait push or ljmp sub repz movsl je sti and test in xchg add imul cmp mov xchg (bad) jbe lods movsl std in jl incb (bad) jg in pop fiadd xchg and mov (bad) (bad) mov imul orl and test mov ja aaa push movswl and mov xor dec jmp (bad) ljmp (bad) pop shrb jle stos out out sub jnp mov stos (bad) ljmp arpl mov out fsubr rolb adc (bad) jg stos mov (bad) dec sub sub inc arpl popf pop sbb jg mov pusha imul pop stc or mov (bad) (bad) (bad) jg movsl das fwait xorb sti mov in loop (bad) jmp cld (bad) pop mov (bad) (bad) (bad) decl pusha in pop add push sub sbb cmp pop stc repz mov lds (bad) lcall (bad) ret lods out test xchg or xchg sbb sbb sarl mov inc hlt and insl loope xchg cmpsb fisub inc dec (bad) idiv decl jb mov mov cmp das (bad) mov pop jl push cmp outsl xchg push lods ss jle xor inc (bad) (bad) (bad) call add fcom sub xchg push loopne push shr in mov in ljmp lock movsb out sbb sub (bad) adc outsb mov int3 icebp ret ljmp mov lods mov jle sub loop icebp lret adc mov mov sbb xchg in in iret xchg aad cmc lahf repz jmp jmp rcr xchg (bad) call inc cmp gs mov fbld inc jecxz add cmc sbb pop jg or test in cmp push push loope (bad) ljmp aaa out out cmp je sarl lock xchg add cmp pop (bad) (bad) (bad) mov dec xor (bad) je shll rorl pop sbb aas test (bad) (bad) (bad) ljmp xchg cmp push mov repz adc test dec leave sbb (bad) (bad) dec sbbb (bad) loop lahf pushf je xor ret fsubs xorl shll (bad) pop inc fsubrl push imul xchg lcall xchg jbe in pushf mov jle aad (bad) cmpsb sub in mov jbe decl push ljmp mov sbb fdivs movsb or or (bad) (bad) (bad) call jg ss sub xor jle test fldt xor cmp pop ljmp xchg inc mov lret or pop sbb sbb xchg popf push in push js hlt in (bad) call mov sti in rsqrtps stc pop mov fnsave dec (bad) ljmp fmuls jmp movsb lcall lock (bad) cli jne mov loope jg mov xorl mov (bad) call cmp pop cwtl leave vcvtss2sd std cmp sub call cwtl pusha cmc (bad) (bad) (bad) js push mov or aas test push xor (bad) (bad) (bad) fbstp daa leave mov adc popa outsb mov cmp clc push pushf incl jo (bad) (bad) jg pop in push or lahf clc aaa iret (bad) sub sar cwtl fidivrl jle (bad) (bad) push test mov sbb xlat test loopne aas pop iret xor push sub (bad) (bad) ljmp push add in inc insb (bad) jp loope mov pop pop dec jp push or call cld popa test adc cmp pop cmp and mov (bad) sbb lahf bound daa push mov cli (bad) mov stc lcall (bad) call pop (bad) in sbb push inc xlat nop lock (bad) (bad) out (bad) int3 int3 lods add cmp jbe pop push xlat loopne mov xor (bad) (bad) fist fldlg2 lcall lds loope xchg xor (bad) test iret pop lahf (bad) (bad) (bad) pushl adc mov pop mov and jge in add pop lods inc xchg pop fwait aad mov shrb mull mov (bad) lret (bad) pop fildll cmc (bad) jmp mov and loope enter lock sar outsl fcomps in mov jle scas mov add addr16 (bad) (bad) jg xor xor fwait jg cltd pslld xchg iret push imul mov sub fcomip xor add add test mov (bad) (bad) (bad) (bad) nop cmpsb shrl xor aas push sbb insl imul mov jp (bad) out cli mov (bad) adc fldt cld (bad) (bad) push jecxz in rorb dec cmp arpl cmp jae (bad) cld stos or (bad) (bad) incl (bad) (bad) das mov iret mov and jecxz (bad) fisttp pusha lds ret sarl or xor mov xor adc inc fwait push sbb cmp (bad) (bad) ljmp jg lcall je ss push mov decb jle stos mov incl cld scas inc cld insl sahf sti cwtl pushl int sub aam pop out fsubr aad (bad) (bad) decl xor ljmp sahf lcall idivb dec roll jmp hlt sbb (bad) incl sub fnsetpm(287 out mov cs jge inc (bad) (bad) (bad) jmp xchg sub in in sub sub lcall push mov das add shll (bad) (bad) (bad) ljmp aam push ss xor mov push or push pop fs fimul xor (bad) (bad) incl daa inc ljmp push dec xlat jg mov mov sbb (bad) decl mul aaa ljmp pop push dec jne test and fs xchg pop mov adc insb adc adc mov adc cmp pop loopne (bad) dec and ljmp cmp movsb (bad) xor testl stc jl rcr (bad) jmp cmpsl aas adc in inc fist and sbbb cmp (bad) (bad) (bad) (bad) fistp and xchg sbb (bad) mov pop push push add in push sub xchg (bad) (bad) (bad) decl inc je stc sub daa movsb in popa pushf cmp dec bound dec jno idiv (bad) (bad) push sub push cmpsb xchg fisub into out xchg adc loop xchg ret pop sub (bad) fisttpl dec outsb pop mov imul ja cltd mov int3 cmpsb mov (bad) (bad) (bad) jmp test imul sbb sub in (bad) fnstenv xchg xchg out sti out cld (bad) call (bad) inc pop xchg dec mov pop pop pop pusha dec mov dec scas hlt (bad) jg incl add in (bad) cmp sbbb scas or pop (bad) fbld xchg (bad) (bad) call cs xorl inc cmc (bad) cmc into leave (bad) mov inc mov idiv jno insb mov (bad) lcall mov sbb icebp xchg lret xchg mov xor sahf incb xorl fistl fisub popa push lret mov ljmp xchg (bad) (bad) (bad) mov xchg es fucom pcmpeqw mov shrb pop xchg data16 mov (bad) ja cmpsl cmc (bad) call cmp lods arpl sbb shlb lds sbb (bad) (bad) (bad) jg sub or cmp sub adc incl fcmovne and inc popf push sub adc pusha scas mov push push pusha fisttpll fisttpll scas scas pop jne lahf sbb push pushf sbb push and fwait (bad) decl jb push lods cmp jge lret jle js push fwait jmp shll stos les add dec into jne cmp fs test cld call push ret sbb dec cmp iret cmc sbb (bad) (bad) jg mov add into adc (bad) icebp sbb imulb push mov (bad) out (bad) mov into and xor xor int3 cmc imul mov add popa mov mov pop jnp push sub pop fdivrs sbb shlb test or cmpsb pop cwtl push hlt ljmp (bad) cmp push int push in mov push lcall das dec dec inc (bad) (bad) jmp cmp mov jns lcall or (bad) (bad) jg xchg push data16 stos and xor fcoms imull push cmp jp enter incl je mov cmp dec xchg push or ret jle sub cmp ss (bad) decl inc xchg je mov inc pop bound repnz (bad) (bad) (bad) pushl push mov xor fnop nop dec mov lcall pop ret xorl dec pop (bad) (bad) (bad) pushl xor jl sbb inc cli xchg inc adc mov icebp inc push fidiv lods (bad) mov or sub lcall xchg sub jmp mov cmp loopne es mov mov imul addb ja jge hlt (bad) repz rol in ja inc (bad) incl xchg jl mov mov lcall dec mov fcmovbe and outsb test insb imul lahf movsl clc leave insb pop inc mov cmpsl dec sbb inc xor scas add inc sbb xchg fisubl (bad) jno ss jle hlt (bad) pushl adc adc sub or (bad) xchg arpl jbe or (bad) ljmp sbb push pop mov (bad) int3 push fisttpl sbb jbe int arpl inc push sub (bad) ljmp fadds pop fistp orb mov inc xchg jecxz (bad) (bad) jmp push insb (bad) call rcl sbb mov into and jae cmp xchg jne (bad) mov clc arpl push arpl lods test pop std (bad) (bad) (bad) mov inc (bad) push jle jge aas jle paddd out test add pushl cmp push orb xchg mov or sarl push jmp fisubl imul das mov add fadd push inc sbb (bad) (bad) pushl fisubrl mov pop insb xor mov cmpsb (bad) or idiv (bad) (bad) pushl add push xor movsb jno pop push pop inc shll add rorl (bad) decl insb or mov xchg mov add bound push insl dec xor ljmp sar inc fucomi in xor mov add rolb cmc fnstsw (bad) (bad) ljmp pmullw add arpl jbe sub inc js mov mov out or (bad) (bad) (bad) ljmp jb jnp mov aad xchg push aam ret add ds push (bad) jmp test (bad) push into push xchg iret and call xchg jle and adc (bad) (bad) (bad) lcall fistl int mov (bad) lea (bad) in cmp pusha add xchg sbb sbb mov clc push cld lcall pop outsb pop fs (bad) ljmp mov ret ljmp or mov mov ss cmpsl xlat push gs jmp fcomip mov stos and iret fucomi out stc xor das or fistpl add (bad) (bad) ljmp je push fs push data16 push xchg add mov pop mov cwtl push mov aam int3 pop cmc xchg nop add xchg fidivrl (bad) (bad) (bad) push aas in or mov xchg loope lret push mov mov cmc mov sarb cli (bad) ljmp clc rolb clc jae cmp fxch cld lods cmp pop cmp mov mov sub add pop mov call mov pop (bad) (bad) (bad) ljmp lock jge sub inc into pop push fcomi xchg xor aaa mov stos pusha pop xor (bad) (bad) push stc rcrl outsb sbb push lret ljmp int3 sbb in (bad) (bad) lcall pop das jne mov mov imul push ljmp jg fs sarl les inc out (bad) hlt jb inc fs jg pop mov jae jne sbb jo test mov ds or jmp hlt lahf cmc (bad) push pop mov add add pusha arpl jp mov cmp (bad) (bad) incl xchg out mov into adc push and push repz mov scas (bad) fcomip ljmp jge out insb fdivrs (bad) mov jns push out inc jg test inc imull sbb cmc pop inc mov loope (bad) (bad) incl cmp fadds call sbb push testb xor cs or add (bad) jecxz pop or movl sbb mov pushl ljmp mov pop sbb jecxz and xchg cmc xor div push decl sbb ss add (bad) (bad) (bad) inc lea fidiv fcmovnbe int3 cwtl cwtl ror jge jecxz iret jbe mov fadd loopne (bad) mov and inc add or pop mov and insl (bad) jmp mov push push mov dec std lret (bad) ja repnz idiv out jae loopne fwait (bad) loop cli cmp nop sahf mov pop in (bad) hlt (bad) sbb (bad) ds addr16 sub inc jp repz pop dec cmp shlb stos or sbb mov and aad insl jns addr16 push jge pinsrw push fmull ret and (bad) jl or mov mov data16 jbe js adcb test (bad) (bad) (bad) jmp sbb gs or mov xor fldl xchg cli jb (bad) (bad) (bad) incl enter test mov sub stos cltd push int3 xor fildl adc mov sbb or ljmp popf fstps stc mov popf mov xchg arpl jle pop aam adc jmp in insb pop (bad) out cmp jg das clc ret lret loopne jbe,pt aas xchg mov mov ja clc jmp mul (bad) (bad) jecxz out push push repz pop (bad) int (bad) (bad) pushl movhps int lock mov or in arpl (bad) (bad) incl lods out mov stos (bad) jo lds (bad) (bad) cmp push inc xchg or ss aam fwait insl (bad) (bad) (bad) lcall sbb out jb dec xor push mov xor cmpb aaa lods aaa std mov push push loope out dec jmp rolb pop imul loopne lcall bound (bad) jne fisttpl push out mull jne sbb sub sbb int3 daa das lret mov push leave push cmp icebp or jl and xor xchg jle sahf js jo xlat lods (bad) (bad) call ret iret cmpsb flds dec inc xchg lods shrl cmp pushf pusha pop push mov jbe push mov loopne (bad) mov (bad) jle stos gs jmp (bad) fstp jg jo push mov bswap push mov inc (bad) (bad) (bad) incl xor sub xchg (bad) in or pushf fnstenv aad cmpl add in (bad) (bad) jg aaa mov jmp cld push int3 aam lods or fild push (bad) (bad) (bad) sti popa mov xchg add cs or push mov int3 mov pop cwtl cmpsl outsl pop jbe inc decl (bad) mov adc shrb pop insl imul sub sbb clc fnsave mov mov pushf jge rorb jbe out sbb in sbb (bad) or mov sub jae or out div aaa cld (bad) lcall call or mov pop push pop adc shl mov (bad) ljmp pop in pop add lahf jg inc dec ss xchg hlt hlt inc das (bad) (bad) (bad) incl or nop sub mov cmc cs xchg les mov outsl push sub mov xchg xchg (bad) mov jg stos xchg add aaa xchg loop jecxz aas adc (bad) (bad) dec mov cmp pop (bad) push push popa dec inc lret cmp sbb pop adc add incl movb jo shlb into and stos stos (bad) pushl push ss aad cmp xchg stos test (bad) decl sub sbb (bad) insb (bad) mov pop dec fnstcw fwait jo inc add (bad) jmp sbb adc fsubrs xor pop (bad) (bad) jg or gs in in cmp outsb cli femms dec stc mov ret (bad) ljmp cli jns mov jns fistpl aaa sub int3 sub mov push cld idivb ljmp xor lcall (bad) incl xor push push movsb cmp fisub cmpb std cmp repz sti iret sti jl into neg jnp out cli scas mov ljmp add out dec test pop adcl mov jno aam xlat pop push pop movsl dec pop mov scas push lea push pop inc test mov cmp sub movsb shlb (bad) lcall movsb mov sub cmp sub pusha lret dec loopne ljmp or jp cmp xchg in jb dec outsl mov xchg icebp decl mov (bad) movsl pusha stos mov sbb (bad) pop jge xlat mov es test pop cmc pushl ficompl int lea inc add cmp stos inc and inc cmp stc mov lock sub out in mov sub push insb rol inc xchg mov lcall mov lcall (bad) int out adc push sbbl jbe call ljmp les addr16 or mov push outsb stos adc sub call clc pusha js pop lds xchg adc stc ss mov data16 fild (bad) ljmp lods enter subl mov jge sub pop (bad) (bad) lcall inc mov add cmpsb insl pop fcoms mov or repnz call call xor sbb xchg push inc out or (bad) push lcall push int (bad) jl add (bad) adc dec cmp dec test jg scas pop lock inc fldenv or fstpt in adc mov (bad) xor jb in xorl lret mov mov mov (bad) call mov xorl test cld test jg data16 mov adcl cwtl sub push mov call rcrl pop add sub pop push in iret out (bad) (bad) (bad) lcall rcr popf dec lret sub mov stos mov xchg cmpsl fwait (bad) addr16 cmp lret xchg (bad) (bad) (bad) stc sahf (bad) push and stos je (bad) xor xor addb (bad) mov (bad) ljmp push aam mov adc cmp out test scas cli (bad) jmp mov or sub dec mov mov hlt leave xchg (bad) ljmp or outsl fwait and ljmp fisubrl rcll aam cmpsb (bad) (bad) (bad) xchg mov sub jns lahf popf fstpl fwait das ficompl (bad) outsb push std outsb lds dec adc or lret aaa (bad) (bad) (bad) (bad) mov xchg adc dec and mov daa mov dec es (bad) int3 xlat (bad) decl arpl dec arpl adc dec pop jns (bad) aaa sub (bad) (bad) lcall in jb fiadd push je mov into stos cmp push popf imul add cmpsb loope lcall mov push cltd dec out xchg ss mov divl out (bad) (bad) lcall sbb cmp rcl xchg scas ja movsb lcall sub aam jg jmp repnz inc push and push pop mov mov insb push sbb insl decl (bad) mov jnp push movsb test xchg test (bad) (bad) (bad) (bad) cmp mov mov (bad) mov dec aam jle aas lret sar inc out pop lret pushf mov sbb mov xchg mov and mov (bad) call xchg pop rorb xchg loope dec mov xor lret leave sub push jo movhps es (bad) (bad) decl loop adc jle pop pop stos mov lea sbb pop (bad) (bad) (bad) jg std insl loopne or push mov sbb jb fcompl xchg sub pop loopne lcall bound idiv lea push fisub sar test (bad) (bad) incl push stos xor sub data16 push mov mulb xor int3 and je leave fwait (bad) ljmp cmp push lea jbe cs bound push daa push ret sar insl cld push rorl and dec adc pushw cmp aaa xor pop dec dec rorl test rcll or dec adc scas cli (bad) call inc dec xchg sub sahf aad mov mov or sbb mov mulb popa lcall or (bad) (bad) (bad) stc xor xor cltd dec js adc fisubl mov outsl and inc clc push mov pop fist push inc and mov call sub and pop jnp shrb dec (bad) stos cwtl data16 (bad) lock (bad) call hlt xor pusha pusha pop cmp popa mov and imul xchg lahf cwtl (bad) (bad) ror mov push (bad) fisttp jns ljmp xchg fcoms pop or lock (bad) incl xor and push sbb dec push movsl xor xchg dec mov (bad) inc add in xchg push jb scas inc push cmpsl or jl rcrl (bad) (bad) (bad) incl es sti or mov push push stos cmpsl mov xchg stc ss leave mov add std stos push int adc (bad) fcomip andl insb inc xchg mov add addl cli in push ret movsb lea pmulhuw ret inc or rcll stos add lcall movsb xor xchg cmp lret mov jecxz pushl jnp add mov mov inc lcall push lea cmc pop cld in das xchg jle pop idiv pop fidiv xchg jge pop dec out aas in add out lds lahf cmpsb pop push and adc (bad) (bad) lcall inc fisttpl push push stc mov repnz repnz push push ficom sbb xchg nop aam push test and gs xlat inc xor and (bad) mov les dec push notl (bad) (bad) (bad) (bad) jg push inc cmpsl inc loop pop pop ss cs call mov idivb lret stc or push (bad) (bad) (bad) jmp add pusha adc sbb mov mov or lcall call shl sbb lea mov jb sub adc leave fsubs jg (bad) ljmp inc int3 push cmp sbb das xchg shrl inc nop lret jg (bad) push (bad) push aad pushf and xchg dec push adc (bad) sbb jnp inc inc enter (bad) pushl mov (bad) add out movsb jb dec xor jns mov test push lds (bad) jae ss in mov (bad) ljmp pusha out and push sbb push mov sub (bad) (bad) jg out push int cmc cli mov sbb mov xor (bad) (bad) incl mov mov fmuls mov scas in cmp fsubrs test outsl pushl lods out push cmp movsb stos cmpsb pop lods in ds icebp aas push push xchg cmp fsubrs test aad add mov (bad) fst lea jae sbb movsl mov push jnp ret xor xchg daa ds jmp pop dec xchg out (bad) mov enter add or mov loop (bad) enter push (bad) (bad) (bad) decl xchg mov adcl bound inc pushf mov sbb repnz cmp (bad) (bad) decl xor xor stos fs daa pushf xchg mov leave adc jmp jb rorl inc push rclb popf arpl imul cmp (bad) lods repnz decl sbb add pop jmp inc test dec cmp or stos (bad) (bad) fcomip xor mov (bad) icebp pushl jns icebp jmp pop inc adc sub cmc int cmpsb pop add std test lock mov (bad) mov adc cmp insl sbb inc pop hlt (bad) adc flds sub (bad) (bad) call jecxz xchg repz mov clc gs sti cli outsb inc jecxz adc imul fs adc subb (bad) (bad) call cmp in push cltd sub int (bad) sbb mov push mov (bad) (bad) pushl jbe loopne mov js stos jno adc mov daa mov push xchg or (bad) ljmp insb pop int3 inc aad mov adc inc xor pop out mov popa inc clc pop add (bad) lret insl test sar ljmp push fistpll push jecxz inc aam inc pop xchg and push stos insl movsb icebp rcrl (bad) (bad) (bad) decl insl pop fs xor mov in fistl pop scas insb (bad) pop inc cmp mov xchg inc insl lods xadd xor cmp push fwait sbb and into (bad) (bad) (bad) (bad) (bad) mov inc cltd iret ja dec push mov mov es pop fnop ss cld jmp pop out ljmp mov xchg jnp inc push and pop sarl arpl ror in pop add (bad) (bad) dec sub outsb mov ja mov repnz cmpsl (bad) lock popf bound cmp xchg decl ss jb cmp pop fsubl cwtl dec push aad sbb cmp outsl rorb pusha sti lret pop pop sub pop mov or sub shr (bad) out xchg aam std lds pusha dec sbb mov add pop call aad sbb push cmp ret jecxz into pop mul ljmp xor pop mov rcl test sbb outsb addr16 scas push mov push stc loop movsl les (bad) outsl addr16 mov (bad) incl mov and jbe mov test inc lods mov mov cmp test or dec jl xchg jl aaa in jecxz inc (bad) (bad) mov inc sub add inc iret fldt sbb (bad) incl or fiaddl and mov les fisttpl inc cmp xor (bad) sbb xbegin call into mov mov (bad) mov mov int call outsl stos idivb repz ljmp pop (bad) (bad) (bad) pushl imull cmp dec fstl movsl mov sub int inc fcmovu dec sbb (bad) lahf or lcall jne inc (bad) pop je scas pop mov mov mov (bad) pop pusha push stc xchg sahf in fisttp push jge fstps les cld (bad) lcall out outsl out incb pop (bad) mov dec out pushf fdivrl (bad) in jg or outsl or dec dec jge (bad) mov aad xor (bad) (bad) pushl out xchg pushf xor sar out mov dec jnp adc in adc outsl cmp sbb (bad) call fdivrp mov mov mov repz lock mov iret mov sbb add hlt in sahf out ljmp scas (bad) lcall cmpsb (bad) push cmp dec int mov jecxz pop dec push (bad) loop lret push fidivl loop cmp mov pop jecxz add sahf cmp rcrb ja insl (bad) jno pop (bad) fnop push add mov negb into shll iret jo out pop jb xor jg test faddl ret (bad) jl sbb scas cmp jmp or gs mov jg or js loop (bad) call mov cwtl xor xchg rcl push in popf nop jmp mov test lcall fld sub mov (bad) ficompl fwait push das das repnz (bad) (bad) mov pop sub out sub (bad) push dec cmpsb lret (bad) (bad) mov jo pop xchg cltd cmp in es out pop push ja rorb fcoms push gs push push cld (bad) pushl mov in (bad) fidiv imul push fnstcw (bad) (bad) (bad) push daa testb sbb sahf repnz popf add pop ss das xchg jae repnz lock (bad) (bad) ljmp negb (bad) mov xchg or jl dec ficom push push mov mov into lcall mov xchg add jbe jno and loop pushl pushf repnz (bad) xor pop jb push cs gs (bad) lcall std cwtl xchg mov sbb repz (bad) lret or pop roll (bad) ljmp cmp aam add sbb dec xor (bad) movsb outsb push enter insl sbb cmp mov pop pusha loopne js xor je pop jae fisttp ret inc int cmp cld jmp xchg lret xor hlt jnp sbb jns fwait mov popf int3 repz adc jmp inc shlb aad lret mov push xor iret or (bad) (bad) incl push aam sub mov xchg outsb add mov pop mov mov dec add iret (bad) decl add pushf jecxz addr16 xlat out jp nop inc sub (bad) (bad) fmull bnd addl fisttpll dec mov mov push (bad) (bad) ljmp data16 xor out sahf (bad) lock pop jecxz mov inc pop and (bad) (bad) stc cs sbb sbb inc fwait jns insl out loopne mov loopne xchg sbb out dec icebp (bad) (bad) (bad) (bad) in lock pusha jmp andl pop ret lds lret sbb (bad) (bad) pushl out mov mov fwait add add sub jae popa cmp enter (bad) (bad) (bad) (bad) jp mov sti mov (bad) jmp pop inc mov push mov push movb (bad) jmp xchg js enter pusha or jb inc mov add (bad) (bad) lcall lods adc and cmp repz mov or mov mov mov sbb lahf push data16 cld xlat push mov sub fisubrl (bad) (bad) (bad) call and int inc mov in ss add ja mov (bad) out cli (bad) clc out (bad) (bad) jp xlat dec push out in out cs push insb jns lcall out cld sub adc push mov (bad) (bad) (bad) (bad) call icebp xchg fwait ljmp inc imul jo push bound jmp (bad) jnp pop push mov mov (bad) xor pop fdivrp sub cmp (bad) (bad) (bad) ljmp mov pop cmp xchg mov mov xchg test sbb pop inc (bad) mov or cltd pusha je sbb cmp hlt sbb lcall imul mov mov scas clc das clc push or shlb std shrb xor incl int3 ret imul fmuls (bad) pusha inc aaa mov pop inc (bad) jg xor jl ss inc pop pop dec push add add inc lock adc aas or fcmove (bad) pusha jae mov lock fsubrs pop lods into add stc pop add ja (bad) (bad) (bad) (bad) ljmp cmp cld push test js or test adc loopne adc mov (bad) (bad) (bad) (bad) decl call std outsl sub call jae sbb fistpll nop cmp pop lock or sbb call mov imull jg negb cmpsb test (bad) push iret js mov mov (bad) sub jmp lock decl jo mov mov sar in movsb mov xor push xor (bad) (bad) (bad) jmp sub movb loop and mov cmp sbb repnz dec (bad) rcll in (bad) (bad) (bad) pushl insl dec arpl sub std (bad) sub inc insb out in cmp cltd lods sub or bound out push add xchg stc push and mov (bad) call out (bad) out jns imul mov and xchg xor sti (bad) (bad) (bad) ljmp lret unpckhps (bad) jne jmp in mov fdivl out scas pop cmpsl push xor push jge lcall pop aas mov enter ss arpl sub loop loop jnp ljmp repnz sarl dec mov xor xor repz pop pop xchg ljmp daa xor mull pop jmp int3 cmp (bad) (bad) (bad) call xchg adc adc and pushf (bad) mov divl dec push nop cltd incl (bad) fsubs sar sub fs lods xchg loopne add test jns pop mov pushf (bad) dec sahf push (bad) decl or ljmp xor pop cmc push (bad) (bad) jmp addr16 imul (bad) dec cmp mov mov inc xchg jb repz mov jbe into mov aas sbb ret cmpsb ret repnz sub cld insb cmp (bad) (bad) incl stos test test pop fcoms jns js rol and lret push mov (bad) (bad) (bad) jmp and mov roll rorl jne add out leave push (bad) int3 repnz jne lcall mov lds jb pop mov adc sarb lahf xchg (bad) decl popa fs fcomp xorb rcr xor out (bad) arpl lock inc fwait pop es cmp clc push xchg and fnstsw lods insl (bad) (bad) (bad) jmp add mov inc es dec pop mov mov jo enter mov les ret imul insb xor (bad) shrb inc std stos fistp push ret xchg outsl je jecxz (bad) sarb insb and test sub loop,pn lods (bad) outsl cmp es (bad) (bad) call test (bad) xlat lock movsl push mov pop arpl in insl add fnstsw aaa adc aaa test mov ja add stos cli mov push xchg sbb cmp clc das ds xchg fisttp push mov outsl arpl push int testl test (bad) xchg (bad) fstl add jb jns push ret outsl mov (bad) (bad) (bad) jmp aas fnop test pop scas xor cmp ja adc adc (bad) (bad) (bad) pushl pop jg testb pop js imul inc push imul lret sub pop lock ljmp clc cli popa cmp aaa inc lcall xchg (bad) (bad) lcall test imul lods push pop jl push dec cld fldenv cli mov xor push jecxz (bad) (bad) ljmp xor ljmp pop lea leave es fcompl hlt mov xchg daa lods pop ljmp cmp or pop and or xchg pop sub nop cmpsb call (bad) sti mov push (bad) xlat outsl push mov inc ds jg mov cli xchg sbb xor xchg (bad) sbb dec add push inc movaps (bad) jmp test cmpsb lret leave nop adc mov (bad) adc adc scas daa jbe lds mov lret inc bound xor clc in mov xor pop pop (bad) (bad) (bad) call jecxz ljmp xchg cmp jl adc std or dec adc lahf aam (bad) fbld and lcall test adc ret (bad) mov cmpsl cmc lahf clc inc (bad) mov jmp dec out (bad) (bad) (bad) mov test push ljmp mov cli movsb rcll fidivrl (bad) push lcall sub repz sahf jbe xlat jae inc in adc out cmpsl jno jmp (bad) jg sbb bound ss icebp out lods std xchg sahf ss fs and (bad) (bad) call jo mov nop (bad) (bad) jle sub push push mov and (bad) (bad) jg fmull adc leave addl fiadd xchg insb or push jg ljmp popf sbb mov pop addb lahf dec dec pusha aad mov fdivrs sub xchg aad mov sbbb mov pop sub xchg mov cmp pop mov xchg imul into add jecxz inc (bad) xchg mov sub mov idiv lods jns dec xchg pop jmp jl (bad) (bad) fildll mov cwtl jmp pop xchg lahf or add imul jb xchg jg (bad) dec inc (bad) lret pop movsl fidivrl jl xchg clc inc fadd sahf (bad) mov xchg out es adc sbb mov push (bad) ljmp adc inc test mov adc (bad) (bad) (bad) jmp xchg leave mov sbb cmp adc sbb ret (bad) lcall loope adc mov ret jno ret imul pop mov nop mov sbb xor and pop scas cmp cmp sbb (bad) incl arpl cmp orb cltd negb adc ret cs jl adc and mov pushl mov and xchg cwtl xor adc (bad) (bad) (bad) lcall jnp addl rorl xchg in and lret mov je ljmp sti dec and jg rorl push dec push mov sub fmull sbb in dec sub push pop mov adc cmc gs cwtl lret (bad) lcall (bad) sub repnz cs into xor sub xchg jp jg cmp mov repnz (bad) (bad) (bad) cli insb inc xchg jg mov sahf mov and or (bad) lahf sahf fs push icebp nop in lret sub iret out out cmp pop stc pop jg loope xlat hlt ja rcr (bad) (bad) (bad) (bad) out movsl inc (bad) mov les jmp pop cmp jbe xor add (bad) (bad) mov ss xchg lret cmp dec push pop dec fwait mov cld inc sti fsubs (bad) jmp mov popf mov jp (bad) cmp scas iret push mov mull inc cmp decl (bad) jmp subl movsb ljmp push add insl les jg (bad) (bad) ljmp stos pop xchg adc jmp movsb insb jmp cli add (bad) (bad) dec xchg pop aad xchg jle jns (bad) jae mov pop mov stc jmp in shlb (bad) decl sub iret mov test xchg clc (bad) fnstsw ret fcom aas cmp mov push mov (bad) incl fistpl subl mul dec and out and xchg (bad) (bad) (bad) (bad) mov lds int3 out and cmp push lods mov stos mov or xor imul lock ds ss xor stc pop xor clc in in ds leave add mov cmp push xor scas jne leave cmp sub dec outsb fsubrl sub pusha (bad) (bad) (bad) (bad) in es dec pushf (bad) ja aaa dec imul stc xchg push js jge leave push shll cmc lea jl pop fstps in cmp (bad) (bad) fbld aam push lret aaa jne push mov fldt pop loope (bad) out and out test mov pop mov ds (bad) (bad) (bad) std into xchg sub mov or fist lahf and sub cld clc lcall adc jle in ljmp inc sub pushf icebp pop add scas ss rcrb (bad) (bad) pushl adc clc mov add dec xor aam bnd cmpsl jmp aas insl mov out cmc dec sub ds jge mov sbb adc sub pusha (bad) inc mov hlt es (bad) (bad) dec (bad) mov xor lods jmp (bad) std push les subl (bad) (bad) pushl sub or scas aas (bad) leave cld loop lock scas mov adcb lcall mov add fs or xchg push sahf xchg andl cld (bad) call imul inc jo or seto (bad) fistpll and cmp pop push (bad) rol out pop adc mov fcomip xchg (bad) mov lea jnp pop arpl rolb ja mov (bad) out jp mov movsb test mov aam aad inc das mov lahf ret (bad) (bad) ljmp xor in scas aad push or (bad) lods cli jne mov push movsl or lcall fs sysexit jb xchg (bad) (bad) incl push sbb es and lods xor cwtl lds jecxz add mov (bad) decl insb xchg loopne cmp pop mov cwtl mov nop cmpsl pop (bad) (bad) (bad) lcall rorb inc add sbb pop inc adc and dec lret test (bad) decl cwtl neg cmp aad adcb xchg and adc nop (bad) (bad) call sbb sbb dec ds fiaddl xchg dec fidivrl cli les ret (bad) ljmp movsb fwait outsb adc mov mov sbb mov mov aaa cld aaa cld jno (bad) mov inc out lods cs ficom test mov adc jg (bad) (bad) cmp ja sbb ljmp test ja dec out sahf mov (bad) (bad) jg stc inc lret lcallw or loopne mov jb rorb mov or and inc or (bad) fisubr repz jmp cmp dec popa cmp in loop lahf sub (bad) (bad) (bad) mov imul out mov and sbb xchg (bad) fnop jbe jp (bad) (bad) push adc xchg adc sahf and add jmp not mov fidivr inc push (bad) out cli cwtl hlt inc jp mov adc dec (bad) and mov (bad) (bad) (bad) (bad) cmp cmp mov pop and push pop stos pop les (bad) (bad) call shr add lock mov pop xchg pop push inc hlt rorb cmp js jge sbb lcall (bad) gs jns adc das cli ljmp sbb mov sarb js leave push cmp inc mov (bad) (bad) (bad) jmp test jno mov fisub add mov pusha imul lea xchg pop push fstp jne mov incl aad lret ret in xor das mov push sti and adc mov jle xor mov (bad) (bad) pushl push cmc sti jl aad adc movsl or (bad) and mov adc xchg cs mov mov jmp push mov push jl sbb loop mov add jp arpl xor hlt cmp (bad) push or xchg clc xorl xchg jl out lcall cmp pushl mov xchg enter mov lods jnp adc or mov ret jg mov rclb push scas push sub (bad) lcall inc arpl loope call icebp test call xchg cmpl add es (bad) (bad) dec (bad) jge cmp adc mov in in mov imull or cmp nop (bad) (bad) (bad) (bad) mov adc (bad) mov int push sub jge or lahf hlt (bad) (bad) (bad) aas inc cld mov repz fs (bad) pop fcmovbe loopne pop int3 ds jl in (bad) out cli pop pop lss iret sub idivb loope lods mov test lock jb inc sub push out push movsb jae mov (bad) lcall (bad) int scas jnp dec jl mov inc sbb add pop cmpsl (bad) mov (bad) call loopne push (bad) adc jecxz pop adc movsb rorb outsb xchg (bad) (bad) decl cmp cmp xor inc cmp out mov dec adc addr16 add pop push jbe stos (bad) js dec pop incb lret popa mov mov outsb mov aam cli (bad) mov lcall ds jbe push fldcw in stos sub outsl repnz loope aas xchg sbb in (bad) (bad) ljmp sbb cld cmpsb fidivl lods iret ret push idiv adc iret add jg and sbb shl jmp xchg ja into push (bad) (bad) (bad) ljmp jnp adc gs push add and jmp push and fistl adc ljmp dec mov or sub stos dec adc imul ljmp (bad) idiv aaa std jg ret xchg push subl mov dec push push pop xchg mov (bad) call and xor xchg lcall movsl bswap push xchg mov (bad) (bad) call sbb test test and mov imul jo (bad) fbld mov xchg cs push sub insb nop out loop dec mov aam mov lcall cld fldenv call add cmp fidiv dec push dec into pushf aad push (bad) (bad) (bad) jmp push adc inc call je inc xor fldcw je (bad) mov fimull imul stc sbb xor frstor mov cmp xchg loopne (bad) (bad) ljmp hlt jmp or nop test xor xchg push insb dec lcall (bad) (bad) (bad) cld stos or mov xchg xchg add push jns inc mov dec scas mov lret test jb or sbb mov inc and sub aam mov imul loope inc (bad) js adc (bad) (bad) (bad) cmp mov mov jno mov sub iret pop push xor imul mov loope (bad) (bad) fsts sub mov add inc xchg push mov or xor (bad) fild cmp adc inc mov in clc arpl inc mov (bad) (bad) lcall xchg je mov sbb sub xlat jmp and shrb popf (bad) (bad) (bad) (bad) cld test xor imull mov fisttpll or cli push shrl mov decl pushf mov mov cwtl xor push add stos mov adc pushf aaa mov das test xor mov outsb movsl hlt icebp in dec cli call adc cmp loope (bad) cmc test ret les (bad) ljmp fdivrl cs scas int rorl mov cmp lahf data16 into aam xchg (bad) (bad) pushl lret cmp test jae xchg push in fistl addb popf sub adc pop jbe (bad) (bad) lcall (bad) and sub scas jg xchg cmp ja mov cltd inc sub mov sti (bad) mov test ljmp sbb (bad) pop fildll inc pop jb lcall ja int3 xchg fmul inc and das pop jmp mov and cmp (bad) (bad) (bad) decl xchg pop test jo cmp mov mulb into mov (bad) sub (bad) mov lcall jg inc movsb cmp (bad) aam mov (bad) mov decl (bad) (bad) (bad) jmp pop xor push std fwait adc fwait out outsl xchg incl daa cli mov stos outsl decb (bad) xor loopne (bad) (bad) cli xchg cwtl cld mov sbb cli jbe or test loopne add sub jle (bad) lcall mov pop ja xor stos aas fucomp mov pop stos push push call cld jmp jecxz cltd push cli shr pop arpl bound pop int scas sub (bad) lcall xchg in pop dec test pop sti out push xor mov imul fcoms (bad) lcall mov mov stos jbe push repnz inc bound rolb (bad) push mov loope sub jmp jbe rcrl add hlt addr16 lock (bad) jl jle fyl2xp1 loopne out out jp or (bad) jp les scas stc jg fwait (bad) mov jmp mov sub adc movsl (bad) (bad) (bad) (bad) ljmp mov jmp sub cmp sbb or insl sbb pop xor xchg push mov mov fld mov leave push test dec pop in push pop push pop rolb fstpl movsl cmpsb (bad) (bad) (bad) jg mov (bad) mov jbe jle jp sarl cli pop push and daa sbb sbb pop int insb adc test sysenter hlt fildll adc aaa mov ljmp popf add scas aaa es sub push decl mov lcall push out push mov xor fwait test jle push jg das into data16 popa aad mov sar xlat and add jmp (bad) (bad) (bad) inc cmp adc mov pop mov imul popf or roll adc and jno cmp jecxz cltd xor jle dec cmc mov es (bad) jg call insl sbb insl add mov sbb (bad) nop aam lods test aaa scas cli (bad) lcall into (bad) jne cmp adc adc (bad) aam mov xchg bound stc stc (bad) (bad) (bad) jmp dec fisub cmpsl arpl inc and cmp outsl leave add (bad) incl mov (bad) jb imul insl stos loop loop icebp mov movsb call sarb adc xchg fisttpl (bad) ret push push and sub shl (bad) lea mov (bad) pushl (bad) outsl cmpsb or btr adc aaa pop mov xor (bad) (bad) decl add or adcb xchg pop pop jb rolb pop test push sbb (bad) push or lds (bad) aad jae push arpl cmp icebp (bad) (bad) pushl mov ljmp push and insl andl xchg ret adc jb (bad) lcall ret mov inc or cld sbb mov bound sbb rorb sbb (bad) mov cmpsl repnz pushf aad dec loop jnp push lock jl push sbb xorl mov shlb cmpsb or add (bad) jmp jo aad (bad) int repz stos inc outsl dec cmp xor idiv and (bad) in (bad) (bad) lcall push loopne scas inc jbe lods loopne addr16 cmp daa in ret cs data16 (bad) jg pushf ja mov (bad) xor mov jo add add or test in (bad) jmp mov fwait sub popf lods sub aaa xchg sbb pop (bad) in sub dec (bad) (bad) (bad) ljmp (bad) sbb cmp mov mov clc pop jge popf jp in mov mov mov fstl icebp push movups pop out mov sbb xor (bad) (bad) (bad) (bad) fsubrl push add add ret push cmp xchg push jne mov push rolb fs mov idivb imul xchg jno push and call cli dec testl and das xchg (bad) (bad) jg dec pop or iret xchg adc scas jecxz cltd adc js rorb (bad) (bad) jmp add cmpsb in (bad) loope or dec hlt or cmp cmc sub cli je (bad) push push push sub sub mov dec sbbl adc sub cmp jmp xchg xlat insl lods lahf data16 add popf ljmp (bad) (bad) mov and call xor gs cmp aam aam out int3 (bad) mov jb add out add (bad) lds and add inc cmp mov add cmpsl adc addr16 in loope mov lahf push sub (bad) fild adc popf mov cmpl mov rcrb pop cs sarb pusha int aas lock in (bad) (bad) (bad) (bad) fldcw cld scas shr pop pop xchg pop lahf fdiv pop cld stos enter jno pop ds xchg xchg push (bad) ljmp clc fsubl inc dec pushf inc cmp (bad) sbb mov popf hlt mov sbb iret pop shrb (bad) decl fmulp orl fs dec rolb pop enter adc test jg sarb jg jnp decb hlt mov mov pop xchg pop cltd rcll pop loop arpl popf test and loope (bad) (bad) ljmp in pop jae test mov adc add pop sbb jbe cmp lcall cs pop call (bad) (bad) (bad) (bad) jmp dec add push into add add mov jmp xchg (bad) stos pop daa popf movsb or lds mov jle jbe adc loopne (bad) fisubl adc push outsb push inc adc dec sbb (bad) (bad) (bad) call pop in or push aam xor xor dec inc mov or push push call (bad) fldt add lret mov and fsubl sbb mov xchg dec (bad) outsl sti push incl das movsb adc adc leave test cli (bad) (bad) out mov sub push add sub and cmc aaa nop push add cmp in jae imul jmp jge xor mov fidivl pop rorb xchg imul adc ljmp or daa test out mov and insb inc push xor mov sub (bad) jmp ret pop and add bound inc dec pop hlt imul call push icebp mov mov add leave adc xor (bad) (bad) (bad) call add sub pop lea lds jle ja loop ret sub (bad) jmp xor sbb sti pop push or mov mov int3 out (bad) (bad) (bad) incl cmp jb jl sub imul leave repnz das inc sti fcmovne lods dec add (bad) (bad) (bad) incl add in jbe mov mov and inc pop jb hlt jl mov or pop iret and repz (bad) (bad) lcall lds movsl xor lret jle push ret sub stc call das hlt add (bad) (bad) decl (bad) js or pop hlt insl inc inc js ret jns cli xor nop push (bad) jle in (bad) (bad) (bad) inc adc outsb js sub jp adc xchg fs insl (bad) push mov xor mov movsl bound add push (bad) leave push insb jns lcall push call cmp mov mov (bad) pop inc and adc (bad) (bad) (bad) lcall jmp ss fnstcw mov mov inc or adc (bad) (bad) jge xchg in xchg call rcl or stc pop fs or dec mov and adcl or or and xor push (bad) jg jecxz jge mov push push ss push repz ss push lods fnstenv jmp adc pushf test daa jb inc scas jnp xlat xchg add loop (bad) mov aam lret insb pop pop mov mov inc inc aad stc adc inc (bad) fbstp cs xchg inc aas nop pop nop push mov add or imul mov cmovbe push adc icebp outsl jns sar rcrb (bad) je xor push mov out sub les ljmp mov jl insl jb jl loope fcmove fadd xor or (bad) (bad) inc inc mov rclb mov push fisubrl (bad) mov pop or roll (bad) (bad) inc and cld fbld mov mov sbb push shlb mov cmp mov jg (bad) decl xchg add jecxz lret pop (bad) enter lcall mov pushl enter mov cwtl mov (bad) jg test pop out nopl inc and xchg fiaddl jno icebp (bad) (bad) mov outsl jl ret mov movsb (bad) fisubl (bad) (bad) fbld pop fcoml pop sti jne mov (bad) and daa movsb hlt call call xor (bad) pop (bad) stos (bad) outsl fdivrs pop sbb stc mov or (bad) call std add adc mov mov mov cmpsb pop repz popf pop cmpsl mov addl insb cmp xor mov mov rorl pop mov aad insb xor jne gs aam jecxz xchg loope pop mov fadds aad sub insl js inc movsl sbb inc (bad) decl fs rorb daa fcoml sahf jmp (bad) decl (bad) jmp push in lods mov fist jb aad xor (bad) (bad) (bad) decl aad push sub enter pop lcall cs mov (bad) lcall jo test sub int cmpsb jmp mov into js (bad) (bad) mov scas inc daa fildl lret or xchg aam decl (bad) ljmp (bad) mov in arpl xchg out fcomi sbb push push cmp (bad) (bad) dec or add mov mov fisub cmp sbb jnp or jo mov jns cmp pushl in mov cmpsl nop dec icebp ret mov xchg inc in imul dec or mov andl pop idivb or adc test pushl inc inc sub jae jl push and fistp ficompl (bad) (bad) (bad) decl ja cwtl icebp dec repnz jne movups jmp mov (bad) mov movsl push (bad) (bad) (bad) decl cli inc popf popf in fsubrl insb (bad) or jbe push xor int loope fldt imul outsl daa scas sub cld cmp push daa mov (bad) cmp push jbe int3 pop ret (bad) jg decl pop das mov into add adc or loope out push pop (bad) (bad) (bad) call call int aam cmc pop cmc inc pop jmp mov sub pop xor xor lcall dec mov inc movsb sbb stos push adc mov decl (bad) arpl jo outsl test dec mov ljmp xor sahf and lcall push in fmuls notl in push mov cmpsb sbb pusha dec cwtl mov (bad) (bad) inc loop mov ds mov jl rcll lea mov leave jg (bad) mov cmp js sbb push push popf cld add nop sub xchg (bad) (bad) (bad) decl add (bad) loope push mov popa jnp (bad) fisttpl fcompl ret (bad) (bad) pushl (bad) mov pop insl add fdivs push cwtl imul mov (bad) call arpl (bad) dec xlat in shrl sti jge jge (bad) (bad) (bad) decl xchg mov scas (bad) cmc jbe hlt fisttpl movsl xchg mov mov (bad) xlat dec ljmp pop loop push mov aaa shr push (bad) decl mov aaa jno pop cld pushf cld dec pushf adc ret mov push mov mov (bad) (bad) ljmp push cld pop and lcall add mov add fs mov call sar jp dec ret scas mov fdivrp pop loopne and in out sub mov in dec cmp arpl adc out adc bound cmp add call lds (bad) (bad) (bad) incl popa (bad) sub ja and xchg push push mov rorb lods (bad) (bad) (bad) decl rep inc fsubr ret add arpl and sub imul call (bad) jg incb mov std fisttpll dec dec (bad) repz (bad) fidivl and (bad) (bad) cmp xchg mov leave add push icebp icebp popf push mov mov fs and repz xor es (bad) mov pop loopne aas outsb (bad) iret sti mov ret mov (bad) (bad) fstpl mov dec adc pop pop iret push cmpl jge push jg push and push or cwtl jns inc movsb nop xchg jae push clc (bad) (bad) jmp insl mov and and int (bad) ja cmpsb sahf xor sbb (bad) (bad) out mov shr jb and fs or ret dec rclb insl lret (bad) sbb (bad) (bad) (bad) clc jne or xchg xor in push mov fs and pop mov repnz inc fstpt push add lock cmp aas aas or stc cmp (bad) (bad) lcall test test jle xor pushf inc jno inc stos stos outsb ljmp mov mov (bad) lcall lds (bad) jae int dec cmp add fcomip pop jp mov xchg adc (bad) mov aad or and (bad) (bad) fidivr in das sub or adc adc movsb (bad) (bad) (bad) lcall cmp mov cltd jno,pt or repz pop leave shll and cmp (bad) (bad) inc push cmpsl xor jmp scas sub jl clc int3 (bad) mov or scas test pop ds sar cmp (bad) mov daa dec fstl mov hlt pushf rcll (bad) mov test xorl sbb (bad) (bad) decl xor sarb adc jo sub test jmp (bad) (bad) (bad) jmp sub push out mov and pop jmp pop xor cmp (bad) (bad) (bad) ljmp push stc adc xor pushf and xchg addr16 jle push xlat lret incl (bad) call push cli pushf jno xchg jae popl adc lcall lcall jmp pop stos push clc mov lock mov call (bad) pop out push push push xchg xchg (bad) call addr16 je ljmp rcrl or inc sub std (bad) ljmp cmpsl cmp inc stos je std or or cmp mov or loopne aaa dec push stos cwtl aaa mov repz (bad) (bad) (bad) (bad) (bad) addr16 (bad) pop fstpt into sub inc jo scas movsb xchg xor addr16 push xchg pop dec mov (bad) (bad) call out sub sub int3 pop fs les ljmp mov or cmp mov std jb mov out xchg sti jns (bad) ljmp cwtl dec and xchg js loopne aam or loop lds sub (bad) fcomip inc imul xor pop mov and adc xor leave pop ja adc in (bad) (bad) (bad) call mov in ret adc or pop jo scas xchg sti dec subl cwtl (bad) (bad) (bad) ljmp pop push sub cltd int3 cltd dec cmp sub test mov inc into push jmp (bad) (bad) call sbb iret insl and pop jge inc dec lods push into sbbl and les inc inc lahf dec loopne lcall adc dec or push (bad) (bad) cmp out mov pop insb lods and xchg btr inc fisubrl lcall cmp les push in repz jbe,pn push xlat pusha movsb pop call addr16 into mov lret sbb clc and dec es adc (bad) pushl test inc xor xor enter (bad) xchg fsubl cltd cli pop (bad) (bad) (bad) (bad) ds rcrl mov mov push daa aas mov jnp jecxz testb fisttp idiv (bad) (bad) decl (bad) scas jp cmc test stos int3 ljmp pop hlt jl xor scas rclb clc mov adc pop incb into mov sahf fildll (bad) jmp dec outsb push jl jno pop sub cmpsb pusha (bad) (bad) (bad) push dec inc ss (bad) xor and in das aas xchg mov jo repnz sub rcrb xlat fcomps ja scas rolb ret jg mov out loop mov mov stos push cs pop jmp fbld jge,pn dec xor mov jae inc xchg imul call outsl xchg dec mov push pop out xor push add xlat pop (bad) (bad) (bad) pushl (bad) std jp cld mov jmp inc ret and je int or shrb ds pushl in ss push cmc jl lock and xchg dec lahf iret arpl push orb (bad) decl imul jp leave pop loopne imul loop mov adc (bad) (bad) decl xor and loope outsb (bad) jmp push add fimul and mov (bad) mov (bad) decl pop mov test inc popa xchg (bad) aaa jbe fcoms (bad) (bad) call or mov repz add into cmc mov sub mov jl pop cmp push (bad) (bad) (bad) ljmp adc clc adc je or ret sti sub frstor mov (bad) (bad) mov js ret ficompl inc pop pop in push cmp cltd sahf fistl fwait (bad) (bad) call mov leave lahf jbe fistp add xor out xchg out (bad) (bad) call (bad) xor xchg push cwtl enter lret sub mov ja jmp pop sub stos cmp and and lcall incl pop adc popf into nop aad add loop cmpl int3 cmp (bad) std ljmp (bad) push dec push js push lock xchg xchg outsl cltd rcrb (bad) ds imull lahf es outsl (bad) call in cld (bad) mov xor ljmp test fcoml push sbb dec (bad) (bad) decl mov push cmp (bad) aam and rcl out rcll sbb mov and jbe cmpsb mov push mov outsl ljmp incb jnp sub add fnstenv inc orl jns lods push xchg inc inc or mov pushf fildl clc shrb (bad) (bad) (bad) call push cli jle test loopne and mov cwtl shlb sar incl clc mov (bad) push jle cmp xorl or push ret cltd jg mov (bad) mov inc jmp cmp stos sbb fwait (bad) das sbbb jno scas and xchg xor and or jae bound je xchg inc sub jg cmpb cmp pop or jnp (bad) (bad) (bad) lcall out or add ret inc repnz adc or sub fwait lcall cltd in jno sub adc fdivrl ret call clc dec int decl and adc (bad) (bad) (bad) incl arpl push sub pop lock ss je,pn adc pop mov enter mov in test jg mov jg out mov roll mov (bad) pushl scas cmp push leave jnp enter push stc mov out insb mov sti das cld mov dec inc cwtl jns push aad stc xor pop xor cmpsb out cmp cld (bad) ss aad push xorl (bad) (bad) out ror pop icebp or and leave jge sub jne mov js mov mov mov add (bad) (bad) lcall adc sti lret ffreep xchg mov out jae fcom pop repz mov and jge ljmp or xor cwtl mov inc pusha sub and (bad) (bad) decl push inc mov sub mov in out jne mov ret (bad) lcall or mov popw or test cmp sub add (bad) in jo outsb xor arpl pop add or add ljmp cli mov inc inc ss pop ss (bad) jl adc es push jmp je or mov test sahf scas xchg out or out push pop cmp adc (bad) (bad) incl dec or bound mov mov or out mov lret (bad) (bad) push cwtl xchg push xchg pop sar jmp cmpsb pushf bound insl dec fisubl mov fcos (bad) (bad) incl rcl push and outsl sbb loope out aam xchg cmpsl add jle inc shl sub (bad) ljmp push adcl sub xchg arpl jae dec jmp sbb insl repz adc inc (bad) call jbe inc pop sub ja xchg (bad) enter adc (bad) mov (bad) (bad) in pop mov cwtl cs aaa cvtdq2ps sbb ret pop mov push push popf aad fild ljmp les outsb sub add sub aas and adc decl imul xchg jle or sub mov pop mov pusha (bad) (bad) (bad) push jae sbb sbb cmpsl stos movsl dec fstl das test test (bad) dec jmp (bad) (bad) (bad) call and (bad) pushl xchg bound fistpll mov push call xchg cli imul bound push call aad (bad) (bad) (bad) decl scas inc imul ja lcall xor bound add push and (bad) (bad) ljmp xchg sub clc out out dec and fwait push xor (bad) mov xor sub ljmp scas leave daa mov leave test scas iret pop fsts imul mov mov pusha (bad) xchg dec rcll cs push push inc cmp and lahf (bad) (bad) (bad) ljmp std mov pushf inc lret mov xor or mov leave sahf (bad) (bad) (bad) incl jbe adc mov cmp adc jg cs fmuls jmp xchg cmc dec mov jg fcomi sarl test sbb mov add lea or xor incl incl sub mov dec sahf fisubl fadd add sbb ds cmp (bad) pushl jo pop cmp in addr16 pop aam es dec xlat push cwtl in (bad) cmp xchg (bad) (bad) lcall rcr jb pop test test jno sub jbe in (bad) (bad) (bad) (bad) in lods gs int3 roll in xlat push sub lahf xchg lods sub lods clc fcmovne or iret dec cmc jecxz call jno sub ljmp dec jb test push je (bad) (bad) (bad) (bad) mov pop movsl push imul mov mov xchg sahf cmpsb jle xchg sub (bad) (bad) (bad) incl sbb pop call repz test aam lea xchg adc dec mov (bad) (bad) incl inc inc mov sub pusha paddw inc aad fwait cmp push sbb lds and in jmp (bad) insl int3 mov add ja jmp lret adc jecxz or stos mov mov movsl jge lahf jns (bad) (bad) decl inc cmc mov or in (bad) jo mov cmp dec jb push sbb (bad) (bad) (bad) (bad) ljmp pushf mov mov adc sub pop jae dec and test decl hlt sti ret inc mov push ficompl inc push mov sahf std (bad) (bad) (bad) decl cmpsl xor mov mov pop xchg sub mov jmp std push (bad) out movlps (bad) (bad) (bad) pushl adc xchg add mov inc clc push (bad) mov (bad) out inc push dec mov fmuls (bad) jle jg adc popa fisubr adc fildll mov call cld pushl fsts lcall xor mov in (bad) (bad) (bad) push arpl jle push ljmp cmc stos popf cmpsb xor outsb mov (bad) (bad) incl or dec xchg icebp push xor fistpl fsub out xchg or mov loop (bad) (bad) (bad) (bad) call dec add movsb fcoms mov imul lret or mov data16 leave or sti aad xchg js inc lock lcall jnp std push jns lods nop pop scas xor gs clc sbb push cld mov add movsb inc cmp jl popf adc lods adc iret scas cwtl dec cs dec scas clc (bad) (bad) jmp push jb int3 lods lcall pop mov sbb test stos (bad) incl xor pop push cmpl sbb stc insb stc aas das mov loopne iret jl lods push xchg rorb cs data16 sbb or daa or fxch cld (bad) (bad) ljmp push mov fdivrp cld or testb xchg inc cld ds pop xor lahf (bad) jg ja cmp scas xchg add fidivr inc adc shll out mov (bad) (bad) jmp and pop xor cmpsb mov add outsl jge xchg lock popa (bad) (bad) (bad) push pop (bad) and dec out hlt jg ds sbb mov shr sub sub (bad) (bad) ljmp sbb sub outsl orl adc lods stos loop imul dec aad mov (bad) (bad) incl push and outsb add cwtl push xor dec inc mov mov decl cmpsl aaa (bad) test cmpsb pop pop (bad) pop mov sbb push jno mov mov ljmp adc lods loopne pop in cmc inc xor dec lock (bad) (bad) (bad) call mov decb pop stc ss add mov rcl mov iret push or or out hlt sbb add movsl pop testl cmp mov mov pop inc test add fild jo scas daa lock (bad) (bad) jg push mov in in mov xlat icebp fisttpll loop push mov lahf cmp (bad) call and clc push bound hlt cli sub mov cmp (bad) (bad) call push sbb pop xchg mov bound jg clc clc jns out xchg xchg imul scas outsb addr16 arpl adc cmp cmp lahf inc scas (bad) lahf ja pop pusha outsl push sub (bad) pushl mov xlat jmp push divb dec mov mov ret sbb (bad) (bad) (bad) (bad) fstpt es mov (bad) jge sub mov xchg (bad) cmp adc testl dec jns rolb incl negb aad mov cmp std pusha leave fnstcw add mov insb lods dec stos (bad) cmp (bad) jb cld (bad) fist aam jb jb lahf aad sub addr16 (bad) lcall scas std pop mov jle icebp cmp in ret mov (bad) (bad) push fcmovnu fsubs jge stos dec lret in push xorb xchg mov mov ljmp (bad) pushl (bad) sbb int3 mov mov push lods mov popa leave jmp cmp xor mov push push jecxz lea clc out xor repnz sti mov mov movsl sahf pop out push test loop shr icebp cmp repz pushf (bad) (bad) (bad) (bad) mov xchg dec pop aad push adc and movsl pop mov stos test jecxz mov ljmp push iret mov adc lcall sti cltd push jl lcall lds iret jnp sarb mov pop pop (bad) (bad) (bad) lcall sarb jle out call (bad) enter mov jo sub outsl mov or shll stos inc call cmp mov rclb sbb test andb test cmp add mov (bad) (bad) incl xchg mov popf (bad) into cmp notl jl fsincos jns (bad) (bad) (bad) in idivl and es lea cli loope mov pop lahf loopne pop lods clc sbb xchg push pushf movsb sahf std dec cmpsb lahf push faddp mov push add scas incl cmpsl mov mov lock add mov mov test mov cmp js imul cmpsb stc iret and mov call addr16 dec call cmp scas xchg add sub (bad) push (bad) sbb (bad) fnstcw ljmp add sbb cmp add pop cmpsb cmp aad lret inc and jg xor fwait xchg mov dec outsl xlat xchg add outsb (bad) (bad) ljmp pop adc cmp mov scas push incl cwtl mov or pop icebp (bad) (bad) incl sar fadd adc nopl xlat mov loope cmpb arpl or mov push hlt push stos cmp outsl cli ljmp pop mov mov mov push add rcll dec imul (bad) (bad) jmp fwait cmpb mov sub push lret in inc inc cli xchg js jns cmc (bad) decl aam pop mov scas mov jl sbb (bad) popf arpl jns (bad) (bad) (bad) pushl dec enter sbb or mov test mov inc pop sti (bad) fldl or (bad) fwait out or xor ljmp mov fistl pop mov xchg sbb lds cmp int3 inc lods ljmp (bad) ljmp (bad) xor scas mov mov frstor mov inc jge test dec inc inc fidivrl cmp (bad) pushl loopne repz fnstcw fstpl pop jne xor insl out cld mov xor out dec pop and add pop jp pushf xchg into out dec stos cmp (bad) pusha lea add outsb in cltd loop stos dec jno add outsl (bad) pop pop sub push loopne mov cmp jnp test in dec in xchg mov (bad) jmp aaa push stos out pushf xor stos sbb cltd (bad) imull leave pop ficompl mov jbe xor cmp push (bad) mov imul mov jae popa in pop mov inc mov icebp push mov (bad) (bad) (bad) incl push inc fisttp loop data16 int bound out daa sbb es adc pushf loopne dec test mov mov xchg jg and xor sub ficom push inc add (bad) (bad) (bad) call scas mov mov lret inc loop rorl mov scas (bad) ljmp clc sbb fcmovu inc xchg push sti repz jne jns aam mov (bad) (bad) (bad) jmp jmp mov and and mov movsb push pop cmc icebp in jbe fsubr fdivrp (bad) jmp push push inc cmp (bad) mov mov mov (bad) mov (bad) (bad) (bad) (bad) fdivrp xor inc push ja cltd sub test sub gs push outsb push inc popf js pop dec lods movsl (bad) (bad) (bad) jmp pop lcall push and pop xor in add lcall mov pop dec push and imul gs (bad) ljmp stc dec push adc je (bad) xor push and and mov loop pushf repz cld aam (bad) fdivr icebp jl sti (bad) bnd (bad) (bad) call push (bad) mov hlt ds xchg pop sub arpl arpl pop cld push mov adc push test movsb pushl or test scas xor test ficom call cmc mov adc xchg sub mov icebp fnop lret lock dec sbb (bad) ljmp nop in enter ja (bad) repz adc cmpsl mov jmp pop fild mov stos mov or pushf lods lds dec std pop mov inc xchg xlat das pop hlt xor cmpl mov movups or add pushf iret mov lahf (bad) dec test cmpsl fwait es (bad) (bad) call outsl pop daa mov push out cmp inc loop mov or dec push or fidiv (bad) (bad) (bad) jmp cmp cmp insl xchg mov (bad) sbb cli xlat scas xor add jno into mov xchg das dec je sub pushf pop mov (bad) incl xchg clc and inc sbb lods jp shll cmc jmp loopne (bad) (bad) (bad) incl outsl dec mov ljmp and xor sbb push pop aas popa jbe scas sbb add dec lret int sub rep pusha sbb pop xchg clc fsubrp (bad) cli mov jno stos mov lcall (bad) lcall lock into imul rorb add je mov jo pushl mov add or xor jno xchg jl mov or (bad) (bad) call mov jmp icebp cmp pop mov out push fcmove mov (bad) dec (bad) pushl inc (bad) dec mov int3 push cmpsl dec hlt push jae inc inc (bad) (bad) decl jb mov mov (bad) push fnstcw insb aam aaa mov ljmp mov data16 test pop test enter xor sub fs (bad) (bad) (bad) call std mov lcall mov in (bad) push fs and push fs jg mov push adc xor icebp push or mov enter fwait loope test enter (bad) jle out loop xchg pop out nop or pop sahf cmp lea push add pop xchg mov inc testl sub xor xchg xor jb mov (bad) call sbb ret mov sar adc fwait repz mov movsl (bad) jg sti add scas add nop fildl loopne push clc (bad) (bad) jmp mov ds pop hlt jbe push jmp lahf orl jmp pop add ljmp out scas lock push xchg es jl dec mov int ds push out inc push add (bad) in shll jmp push add cmpsl rcr movsl add lcall clc mov js xlat cltd adc repz lock or inc (bad) (bad) (bad) call inc jnp or mov cs xchg push (bad) bound lahf sti in sub pop add (bad) (bad) mov (bad) test sub mov loopne daa push adc (bad) (bad) ljmp xor pop or stos mov (bad) lret (bad) add movsb fidiv lcall sbbl pop mov jmp enter jmp sarl inc mov lods pop lods fmull aas (bad) pushl fisubrl call adc pop cld push les mov int (bad) (bad) (bad) lcall cmpsl xchg js fsts push lahf mov pop dec and pop outsb sub jge jle ds (bad) (bad) (bad) decl (bad) mov jg push jle and scas and xchg sub sbb (bad) lcall lock and loope sbb dec add fisttpl (bad) fistp jno outsb les rclb (bad) jg (bad) fnop lcall jns push inc mov mov je sbb decl mov scas pushw (bad) (bad) pushl shlb cmp pop or hlt sbb cmpsl aam clc jnp outsl adc addr16 (bad) (bad) jmp in cmpsb movsb sbb lds nopl mov jbe mov ret (bad) call push js mov add jle mov ljmp add (bad) lcall dec movsb jnp push xchg sbb pop jno mov jae sbb call out xor adc cwtl insb sub jb out jno (bad) (bad) mov xor in insl and test sub (bad) (bad) fstpl dec mov cli shlb sahf add dec lahf loop lea sar (bad) (bad) pushl mov pusha (bad) fucomi jae cmc fstenv xchg jo mov je,pt push (bad) (bad) (bad) pushl arpl mov jp (bad) add adc cmpsb sub and mov fmull jg (bad) (bad) pushl or cmpsb mov push pop bound inc jnp daa jp bound mov mov lock (bad) (bad) push cld test cli push mov aas ljmp xchg (bad) and sbb (bad) (bad) (bad) lcall ret mov dec (bad) lods stos mov lock pop jl fs mov fimull mov (bad) lcall and mov ret loop addr16 jge lahf int scas cs (bad) (bad) (bad) ljmp ret mov push mov mov lahf xchg ficomp inc mov jmp mov push in sbb mov cmc add sub subb call xchg jbe (bad) (bad) (bad) pushl repnz outsb in jge in rorb cmpsb jge cmpsb (bad) pop test cs cwtl and (bad) (bad) (bad) lcall xor push mov inc pop jmp xor mov iret add ret push xchg push or jg lret pop insb jb lret pusha lcall in vmulpd lahf stos bound es add scas pop cwtl icebp popa adc cli lds mov (bad) (bad) (bad) incl repz orl sarb cmp (bad) (bad) push adc loop,pn popf cmp sbb sbb iret inc jb insl js rorb (bad) (bad) ds sbb xchg std push cwtl xchg in or pushf sub and xchg pop push insl pop mov and (bad) (bad) (bad) lcall mov mov repnz fbstp push divb xor (bad) (bad) (bad) lcall mov out popa push jecxz ja imul xor jmp dec mov lock in mov jmp mov sbb sub cld sub jnp lcall sub cmp dec push sti roll or (bad) ljmp (bad) sub fsubs sub push imul sbb out negl sub lahf jbe (bad) (bad) call jmp sbb push add jecxz dec out or jle rorl push mov (bad) call mov add adc aas sub out gs pop in cmp cmp push outsb cmp sub or adc std ficompl (bad) fldcw add mov jmp or addr16 adc inc mov lods (bad) (bad) (bad) ljmp add repz arpl push mov (bad) out push stos cld pop nop aaa pusha std int push in dec (bad) jg call pop mov xor cld xor mov sub inc rcrl pop decl push jb lahf cmp adcl pop bound (bad) (bad) jmp mov or mov inc or jo insl mov mov pop mov (bad) call aas inc or adc mov dec fldt xchg dec inc mov pop cld adc rcr jg dec outsl xchg shrb cmp (bad) or es (bad) lods and (bad) mov adc divb std pop adc dec movsl addb adc (bad) jge fdivrl mov sbbl clc pushf xchg xor std cmp push int xchg pop push sar pushl movsb data16 mov xchg or (bad) ret push jb cmp scas or out inc cld mov sbb cld movsb pop sbb stos in (bad) (bad) call jns sub iret out divb jne fbld dec push push fidiv lock xchg scas mov mov dec and and lret cmpsb out hlt repz cli and dec push lods arpl mov mov inc dec cmpl inc call and cs ret ret (bad) mov mov test mov (bad) (bad) in pop (bad) in das iret dec or push sub ss add insb or fwait (bad) (bad) (bad) fisttp mov mov in cmp push pushf aaa jae call loope rcrl cmp mov (bad) (bad) pushl das cmp inc inc dec sub in shrl fwait clc call mov int3 (bad) mov jg ljmp xchg ret cmp mov jle (bad) jmp (bad) (bad) inc and rcrl cmp aas popf sbb jns mov movsb sti aaa push ljmp xchg inc push out jg out negl add repnz jg pop push adc cmpl data16 sti push push aam mov std (bad) (bad) mov jo add lods es xchg popa jo into pop fucom ljmp sahf dec sub jne mov jne push adc (bad) (bad) incl scas lret inc pop dec repz mov test xchg jg loope mov sub aaa in clc lods sbb cmpsl (bad) call das pop int lcall (bad) (bad) (bad) lcall ret out mov mov xchg dec mov decb push jns scas (bad) (bad) decl test push sbb or xor mov hlt (bad) pop xor lcall add pop push sti jmp mov (bad) enter (bad) (bad) call out std jg popf add and fiadd dec add push xor and (bad) (bad) (bad) mov ret (bad) lods dec jno jbe cmpsb pushf loop mov ljmp (bad) (bad) (bad) jmp fs bound pop pusha pop inc je push cltd imul xchg inc jnp push (bad) (bad) out clc outsl xchg cmpl test or push (bad) mov xlat and sbb (bad) jg mov or addr16 (bad) scas fcmovnu sub mov lods lcall (bad) (bad) (bad) dec xchg dec xchg int out pop outsb xor adc cld ljmp sbb xor pop or (bad) call aas pop xchg and ja (bad) xor scas scas jl (bad) (bad) (bad) incl mov fwait loop and es sarl pop (bad) lret xor (bad) (bad) (bad) clc sub insl icebp jb jne outsb push pop pop cmc popf bnd push nop sahf inc or xchg pop sub (bad) (bad) (bad) inc push and lcall imul pop shrb xor jmp (bad) push daa cmpsl clc push push ss repnz adc (bad) in (bad) jmp push icebp (bad) (bad) mov out call push jmp and push xlat cmc jbe (bad) ljmp test push cmp fcmovnu pop sti mov mov mov ljmp daa stos stos (bad) sub out daa dec fistp jp (bad) dec push inc xchg lea or adc dec test xchg repnz mov jmp fcoml out sub (bad) decl push sti aam popa ljmp int adc fild insb sahf push sahf mov incl leave or pop and pop and xchg (bad) sbb jecxz (bad) (bad) imul stc jg cmp dec pusha sub jle cwtl lahf in jns mov ljmp inc push inc inc flds xchg ja mov mov (bad) (bad) (bad) pushl inc xchg mov push push loopne dec xchg jecxz dec mov enter or (bad) call push pop mov das push push bound clc jg push pop and push sahf mov data16 pop (bad) (bad) (bad) incl or fiaddl adc loopne mov shl (bad) dec sub pop push insl (bad) (bad) (bad) (bad) in arpl mov jne movsw or fmul scas jge mov setl hlt mov (bad) incl mov lret test scas std xor push (bad) jb jns sbb jo fdivrp jg call fimul nop jne sub out and xchg sahf int3 test (bad) mov push inc add jg mov repnz out sub popa inc inc ror das adc (bad) xor (bad) decl jmp and decb dec jno mov inc jnp lock (bad) (bad) pushl stc sarw mov ja mov push adc outsl cwtl push dec lds jbe cli (bad) cmp (bad) cmp sbb add mov sub jle jge (bad) (bad) (bad) stc cmpsb cli or gs jae mov xchg lcall adc lret mov (bad) (bad) pushl and test mull loop aas out (bad) or or outsl mov jecxz (bad) call adc cs loope dec iret dec sub mov mov sub mov ss (bad) (bad) mov int es mov aas add cmp sub ret push data16 (bad) ljmp mov and aas fldl2e pop xchg ja stc in icebp cmp out shll movsl add (bad) (bad) push (bad) repnz xchg cs cli xlat subl mov add test cmp mov push outsb jnp dec out dec and xchg aam outsb and mov pushl xor pop fistp int3 pop or or push int cld (bad) (bad) (bad) call xlat pop jae mov sub in mov xchg sti adc dec mov (bad) (bad) jmp xor cmp popf adc les inc cmp lods test jns xchg gs (bad) (bad) dec je test xor lods in push add push pop jp movsl in call push jmp (bad) lcall movsl lahf pop push ljmp xchg mov stc push push sub add push mov out mov (bad) (bad) (bad) ljmp jb xor xor insb jp jno in aas ds xchg lret sub cmpsl int3 jge fdivrl (bad) (bad) call test movsl mov sbb sub xchg ja sub inc add mov (bad) add (bad) (bad) push out leave loop mov sarb pop fisub loopne push test repnz (bad) jg pushl hlt jns pusha aas lahf jns xchg mov dec (bad) shr repnz loop (bad) (bad) ds xchg (bad) jp add rol push incl mov jo imul outsb aas pop rorl lds (bad) (bad) decl icebp imul or sub cmp mov icebp lods imul fldenv (bad) (bad) jmp das xor jb test push fstl and jmp jo es lods addr16 std mov and repnz aad in fbld xor mov push (bad) cmc sub push pop and xor popa xor cmp inc (bad) ljmp clc ret nop pop sub and adc jo jge mov mov scas les push inc mov or enter popa aam bound pop push inc loopne dec test imul lods ss and jmp aas movsb out sub add (bad) pop fild (bad) (bad) (bad) decl clc das divl shl rol mov jnp repz mov and jg or push fdivl out rcl xchg mov cmc inc pop sbb dec xor pop push xor out mov outsl outsb (bad) (bad) (bad) incl (bad) gs sub (bad) js loop xlat scas jl mov daa dec sbb mov adc popa xor movsl addr16 shrl orl cli call dec scas adc mov outsl cs push pop in ljmp ja iret push dec dec push ss in xlat jo daa bound clc jmp fisttp mov xor mov out call cmc int pop adc decl (bad) xchg jbe mov and fbld popa movsb fnop pop mov mov jmp and push (bad) (bad) call cli ss push mov mov cmp stos sbb fnsave aam (bad) (bad) decl testb pop mov inc lret pop pop mov push pop jl subb rclb sbb arpl (bad) (bad) (bad) dec and ljmp cltd pop pop movsl in out lock lea insl adc jge push std ljmp rcrb cmp dec or (bad) daa lcall sub cld (bad) (bad) jmp dec shlb push lcall and cmpsl xor or push leave pop repz mov jl inc call cs xorb lcall mov out stos mov or outsb pushl pop rolb ja jmp lock rcl insb ja scas sbb (bad) (bad) (bad) call in pop ljmp push jae test mov or mov jg lcall jne lahf or in out mov push out cmp loope jg in xbegin adc xchg push test outsl clc in mov out cmpsb insl jmp adc xchg arpl pop fwait (bad) (bad) call ret xor or mov popf mov pusha (bad) popa adc into sbb sbb pushl sbb add push xchg ljmp cmp (bad) (bad) (bad) ljmp shlb shlb mov icebp mov das iret cli xor imul lock cmpsl fwait pop das jmp iret dec adc mov loope or test (bad) cltd add ljmp cli cmpsb mov (bad) jg in pop pop adc add ficom cmp loop imul dec jo (bad) (bad) incl out mov movl xor lods pop fimul pop enter outsl push sbb sub push pop mov sub push or (bad) (bad) call scas push pop sahf in test adc push testb dec ret jae stos cmp ret pusha fnsave (bad) call dec sbb mov out out outsl enter dec loope (bad) (bad) in jmp sub mov jns sbb sub sub movaps sbb movsb cld (bad) (bad) fstl out cmp lds int3 aad out adc (bad) (bad) incl fadds dec xor mov mov inc push xchg in addl xor cmp aam lods stc jmp inc mov cmc mov fldcw sub dec ret push jno jo jecxz xor xchg rcrb data16 adc jg repz icebp inc mov sub (bad) cmp mov lods push jecxz jge (bad) aad push call pop rolb loopne (bad) (bad) cld js addr16 out icebp scas adc js int3 mov and (bad) mov aaa xchg pop jp pop clc fisttpll mov xchg getsec ret sub (bad) (bad) lcall cmc and idivl push vprotq addr16 cmp pop andl (bad) (bad) incl add inc mov aaa cmp jo mov repnz sti int inc into push fwait (bad) (bad) decl xor mov xor inc stos adc adc or add or fcompl mov ds (bad) (bad) jg jecxz imul (bad) call rorl add daa mov int int sbb inc and xchg xchg popa in pop and dec and insb or mov pop mov loopne dec out je test shlb mov movsb (bad) (bad) (bad) (bad) mov jge ret dec pop popa cmp add addr16 add dec ds lret out dec loope es xchg into or aam and adc fwait iret sub mov leave js push xor cmpsb adc jae out pushf mov or jmp lea (bad) jmp mov (bad) and push or pop push pop or imul (bad) dec jne and mov mov or jecxz ret iret inc lret (bad) (bad) (bad) call pusha das add and push mov sbb ret insb cmpsb inc ds hlt (bad) incl sbb pop fistpl movb ret fwait mov (bad) pushl cmp xlat pop dec cwtl mov xor pop push std pop fldl sub mov sbb lret and lret jge incl pusha into jae jne enter inc fisubr xor (bad) (bad) (bad) jmp push sbb fcomi sub (bad) (bad) mov sub and xchg fwait nop fwait std sbb jmp sub fmul mov cltd push in jmp fnstsw mov inc in icebp adc cmp mov cli sbb pop sti inc inc cli cmp (bad) (bad) (bad) (bad) ljmp jno inc pop sbb and sbb cmp jno movsl pop cltd adc pusha push jmp pop icebp sbb insb hlt stos cld sub test cwtl rclb outsl push insb (bad) (bad) (bad) decl popa sbb push mov add mov jle add (bad) (bad) lcall das std push adc repnz pusha lahf or in mov xchg dec pop xchg dec (bad) (bad) (bad) fist jl push lcall xchg in xchg enter lretw mov (bad) icebp jmp cli outsl and add mov les mov call pop rcrl popf test add sbb mov outsl stos idiv (bad) incl mov cli mov faddp push mov lret inc fs movsl idivl (bad) (bad) decl out out push lock (bad) out pusha jmp fcmovnb enter xchg lret mov jg and lahf inc inc popf cwtl movsb mov movsb cmpsl cmp call (bad) inc and adc fcmovu inc lds jp repnz cmp push (bad) pushl fadds jle xor mov fsubrs add cltd int xchg inc es add inc xchg mov cltd mov aam repnz int ficomp inc cmp ljmp sbb (bad) lcall sub jmp aad pop mov pop push je pop ljmp jmp mov repz hlt mov push or imul (bad) mov inc push icebp fwait stc cmp push xchg (bad) scas fcompl popf in mov dec jge icebp pop xchg (bad) (bad) (bad) push (bad) jecxz jle pusha repnz or hlt hlt sbb push ret mov jmp cltd jg (bad) or xchg pop fnstcw mov jecxz adc rcrb lock add movups sbb adc cwtl mov (bad) (bad) ljmp out aad jg mov xchg xchg add out (bad) cmc lds mov call call jno push pop int3 cwtl add out rcr sub (bad) sbb mov lcall mov sub cli stos sbb cwtl popa add outsb test and aas das dec (bad) (bad) (bad) call test sub cmp dec push orl shll jg cmp push aad xor (bad) (bad) decl outsl mov cmpl xor cwtl dec pcmpgtd js aam sub cmpsl sbb cmp dec or sar add dec clc xor (bad) pushl mov jecxz push js push lahf pusha loope inc in push mov or lcall add (bad) call sti rcl fs scas (bad) lret scas in mov push inc js push mov outsb cmpsb mov icebp dec fsts cld repnz incl js cmp ds xlat lock (bad) (bad) ljmp and in call int3 mov cmc lcall pop imul add mov (bad) decb xchg lret lock cld jge push xorb jl gs cmp (bad) (bad) (bad) mov lods jno js dec cmc shlb lea cmp xor (bad) (bad) (bad) (bad) dec scas sub or cmp (bad) loopne mov adc (bad) sbb (bad) cld scas adc ljmp aad sub mov (bad) (bad) incl aaa or dec xchg xchg cmp dec sahf and dec lcall ja sub loop push lahf jmp xchg loope sub lret push dec add call cmpsb mov add cmp (bad) (bad) ljmp xchg imul test jb rcll cwtl mov mov pop mov (bad) push cmpsb push call add lods push cmpsb js in mov mov (bad) les nop mov or bound lahf and (bad) call adcb xchg mov lahf push cmp andl push outsl pop dec adc push ljmp xchg sarb lods seta fbld loopne divl (bad) jg test jno adc or aam add dec mov (bad) (bad) incl cmp xor aad inc push (bad) (bad) mov mov out ljmp call dec jecxz xor pop and or jo and pusha jp iret mov xor (bad) jg push xor mov jo dec int sahf into add mov leave cld gs daa sub mov repz xor mov stos jae test jne (bad) pushl mov outsb jg js rcrl data16 xchg adc (bad) lcall cwtl cmpsl adc mov jg xchg mov mov pop pop out (bad) pushf pop xchg sbb xchg mov dec jnp sub add aaa mov push stc fisubrl out fsts mov or (bad) (bad) dec mov lods out test ljmp or loopne ror sarb adc and imul pushl cld lcall mov sbb lds jmp jge movb imul fstl loopne xlat addr16 or iret push pop out mov jmp add (bad) incl inc xchg dec mov pop and mov (bad) (bad) lcall push push shlb push ret or inc pop lock xor repnz jne push add clc push xor mov xor in inc loop add std jle mov lods xlat sub loop (bad) sbb sub mov test mov inc bound test xchg xchg sar lock and push test inc mov xchg and inc (bad) add jecxz sub ret ja or sbb inc sbb sub push (bad) (bad) pop cmp sbb mov xchg xlat pusha addr16 (bad) scas mov arpl int xor dec or fsubl jmp xor bswap push cli imul xor mov mov mov pop cmp dec int3 jmp imul jnp into stos into hlt push int (bad) (bad) (bad) (bad) ficomp push jae or xchg jb xor xchg mov jp and (bad) (bad) ja lcall nop dec jecxz xor daa and (bad) nop lret (bad) (bad) push mov lods push mov movsb notl or data16 lcall dec (bad) (bad) inc popf je lock cld outsb scas adc hlt mov ret shl fs sub jne inc sar push jle sbb or mov aaa sbb dec add sahf mov call sub arpl adc lcall popl jp cli repnz sahf loope inc push push adc and adc mov fs addr16 cmp loop or enter pop fisubl push lods ss popf addr16 (bad) in lcall fdivs aas jbe adc pop dec lret adc mov (bad) (bad) jmp adc add pop out gs gs nop cmpsb add cld ds es (bad) sbb push out inc int xchg xchg add mov jle pop (bad) (bad) ljmp pop fbstp jp xchg mov das lcall xchg fcomip pushl sbb bound imul push adc push pop adc (bad) (bad) pushl adc adc mov cmp jnp popf scas imul scas lcall scas ret mov and inc ja push dec imul mov (bad) incl pop or pop out sbb xchg stc jmp or daa sub jg (bad) lcall jb daa dec lods js mov mov push sub sahf xchg cltd and clc (bad) (bad) in dec popf sti inc daa xchg xchg (bad) xor (bad) pop shll hlt mov mov add ljmp mov cmpsl sbb out xchg test leave int jmp lcall xor imul cmp int clc inc (bad) (bad) (bad) jmp mov fwait mov (bad) cwtl sub sub sbb ret xchg (bad) pop xor inc xchg pop adc lret clc lods repnz jmp repz sub push inc dec (bad) decb xor jae pop es (bad) (bad) mov fwait pop clc mov fistpl (bad) mov (bad) (bad) jp arpl sub rorl sub ret xor pop cmp jmp addr16 mov (bad) dec je test rcrl movsl pushf stc pop movsl lahf push pop cmpsb and push insl inc xor (bad) (bad) jg xchg mov and cmpsl popa dec or mov idiv daa push arpl push arpl arpl stc mov lds cmp sub mov push out dec xchg cmc call jle out mov (bad) jg pop add or pusha ja daa cli pop loop sbb add insb test outsl mov ficompl aas push push iret rolb push jno adc mov cld btc mov lds clc sub mov ds (bad) mov enter (bad) (bad) (bad) push cmp loop lock (bad) dec mov test xchg popa cmc roll in cmp iret movsl ret mov lods insl dec xchg icebp dec sarb jb out add mov repz mov lcall sbb in or jbe (bad) xchg mov stos push sub (bad) (bad) jmp xor sub (bad) mov jae pushw cmp nop je sub fdivrl call (bad) incl fdivl jns pop scas mov gs add ljmp adc (bad) inc (bad) popf js mov sbb xchg cmpsb fstpt std and (bad) (bad) inc and icebp dec leave push movsl xor (bad) in sti (bad) xchg out out sti (bad) and or outsb test test movsb mov inc dec ficom insb dec inc xchg or (bad) arpl pop stos decl dec mov sbb (bad) ljmp pop in sub hlt fdivrl idiv aaa cld push aaa (bad) repnz addl sbb aam jge (bad) (bad) (bad) ljmp cld pop xchg testb pop xchg (bad) inc into ljmp xchg push ret xor (bad) jmp into inc pushf inc (bad) icebp xor cmp fwait mov fwait pop (bad) adc (bad) pushl cmp repz fwait hlt test inc cwtl mov rorl outsl ficompl stc popf stos (bad) out out fdivr inc (bad) decl (bad) fnstcw push mov aad adc or push sub (bad) lea (bad) (bad) call mov je jne repnz shrb ficompl xlat mov jmp inc ja sar mov decl or jecxz addb (bad) jmp mov (bad) addr16 jmp xor and xchg mov jo incl cwtl clc dec mulb in mov and fnstcw dec dec cmp clc jmp outsl xor mov sbb push cmpsl push push jge mov ljmp stc hlt adcl jo mov pop pop pop mov loopne (bad) (bad) (bad) lcall adc xchg cmp sub sub repz das pusha int (bad) lock mov lcall pop fiadd in xchg dec mov ss sbb (bad) hlt add aaa pop lret or inc in scas scas (bad) (bad) call enter mov mov shrb cmpsl adc xchg clc (bad) jmp jne nop jecxz iret rcrl out xlat inc fstpt shrb aam mov test push adc lea pop inc xor (bad) (bad) (bad) call movb lea cld push in mov mov mov dec clc add in add mov nop mov in cmc rclb into xor adc in (bad) ljmp mov xchg movsl into divb dec pop xor mov fs jne or hlt push (bad) (bad) mov fisubr scas (bad) lods cwtl inc inc mov jecxz,pn jmp jo pop lods (bad) jmp pop inc cwtl cltd and xchg pop inc cmp push (bad) (bad) (bad) call not test cwtl fs mov fstps adc inc mov test mov aaa and ret xchg test arpl aad mov in in jecxz fisttp (bad) incl lds mov in pop rcll imul push xchg or inc adc (bad) cmp jmp shll sahf mov test cmp cmp in das or aas mov data16 sbb call pop mov or (bad) mov pop jle (bad) jb ret (bad) adc clc push test pop mov adc dec mov ret mov clc aad inc pushf add (bad) and dec mov inc das push (bad) ljmp xor clc or or into sbb mov cltd lret pop jno stos mov (bad) imull cmp mov and (bad) lcall das add jmp or in test mov repnz rcll and pop je add lcall (bad) es data16 add stos xor xor push pop fstpt cmp stc fstpt addr16 cmp add js xor (bad) (bad) (bad) mov push adc xchg inc push test popf fwait inc jno sahf xorb in fidivr (bad) (bad) mov addl and data16 pop dec cmpsb das sub mov (bad) (bad) lcall xchg insb or pop es dec mov xor (bad) push fidivr test mov (bad) (bad) incl les inc or push inc aas loope js push aam dec lcall (bad) mov mov out dec cpuid pusha sbb mov mov dec ss or inc ljmp lcall xchg mov sbb xlat xchg daa and add ret shrb or push jo push sbb mov push mov and cmp fidivrl pop aad data16 inc push inc out iret inc test repz jne (bad) out (bad) ljmp shrb mov lods or ljmp stc loop ss mov int lods incl push push (bad) jle xor je (bad) pop add (bad) inc popf pop ss test lcall in mov mov mov pop cmp cmpsl setbe (bad) (bad) (bad) decl inc jl ds repnz xchg pop das pushf aaa in ss mov (bad) (bad) pushl (bad) in push das movsb shrb cmpsl cmp pop cld inc repnz or pushl cld pusha cld cmp sti xchg (bad) cli cmp in jl les mov roll ret (bad) (bad) (bad) jmp fidiv scas arpl mulb (bad) dec jg test (bad) mov (bad) mov or push cmpsl sub roll or xor es (bad) lcall inc jnp mov xchg call imul add (bad) (bad) call cmp (bad) std or bound xchg (bad) int push jbe and xor (bad) mov mov mov xchg xor fstpt push xchg hlt lcall inc shrb jmp jae xor in scas xchg arpl mov fcoms jae repz lret inc adc pop push push cmp test pop imul push ret mov ds or xor cmp jl in (bad) cmpsb mov movsb jp dec (bad) jg incl jl dec call les jmp lret in lahf xchg (bad) insb fldcw data16 arpl popa and cwtl inc adc je aaa cmp lea cs jge jbe adc sti fs (bad) (bad) jmp dec (bad) fidivl adc and lods js jle mov in or adcl push push adc movsl ret scas movsl adc pusha inc hlt imul pop test fsubrl call sahf sub push iret addl (bad) fs popa stos xchg fcomp pop incb (bad) (bad) (bad) decl add out jo adc lods loope,pt cltd incl xchg sarl icebp mov mov pop repz cmpsl mov (bad) (bad) fcmove sti test aaa lods cld mov ror das mov fistpll (bad) ljmp lahf loop insl jae fstps cmp dec mov (bad) (bad) (bad) in adc stos rolb ja push imul xor cmpsl rcll jb jl lret (bad) (bad) incl xor mov ss inc ret mov mov sbb outsl push stos pop inc fcomip (bad) call jle (bad) repnz sub enter scas mov pop in pop or push (bad) ljmp stc mov xor push adc in sub xchg push jae mov fisttpl clc pop inc push add (bad) scas pop sysret adc push mov outsl (bad) (bad) call loopne xor dec in mov (bad) test (bad) dec dec lods loop sbb (bad) incl insb dec sub (bad) (bad) mov (bad) (bad) iret mov stc push sbb (bad) push dec or idiv jmp jns dec push inc call es imul add (bad) decl inc jl fmull lea mov (bad) js push (bad) push inc jb sub jl repz in xchg adc out clc ja sbb and or push mov xchg xchg jle loope iret iret scas inc sub imul test (bad) (bad) mov scas rclb arpl and add mov js fs jo call dec (bad) (bad) (bad) ljmp push fcoml test movl jp adc adc dec dec mov ret xor xor mov (bad) (bad) lcall aam pop lods pop cld xor es or clc mov into popa mov (bad) or (bad) decl insl lret addr16 test pop fisubrl jns ss mov mov adc (bad) inc jl add fdivrl push xchg adc pop jmp cwtl je xchg mov cmpl (bad) (bad) (bad) (bad) stc insl xchg jne adcl repz dec jge and cmc das dec (bad) (bad) (bad) jmp jecxz lods cs mov xor cmp pop or loop lahf and (bad) (bad) cld popf pop dec aam cmpsb clc jle add in shrb pop repz mov jl loopne call movsl scas fiaddl loop push das out aas cmp (bad) (bad) lcall sub mov repz jbe cmp loopne (bad) (bad) lcall aaa pushl inc and jl pusha daa dec imul mov ret iret adc push loop (bad) (bad) mov sbb daa push xor cmp in mov push in (bad) pop ss es (bad) (bad) incl add push lahf pop fisubl dec stos sbb xor adc movsb sub mov shr stos andl or call (bad) (bad) (bad) pushl add je or add sub iret mov (bad) mov ficompl mov sub jmp sti lods and stos cmpsl test sbb add lods lods (bad) ljmp or pop and xor ret movsb movl jmp ret jle leave call das je (bad) repz xor (bad) (bad) call js cmp or xchg mov pop enter add pop xchg (bad) jecxz das cli (bad) jmp mov push xchg movsb leave out (bad) mov in xor push ss out cmp and mov or mov adc pop icebp pushl stos insl imul sti push mov inc sarl sbb enter (bad) (bad) pushl pusha mov loop cmc shlb and and xchg add lea inc test xchg jno push add jg out aaa lret ret mov pop sub ror cltd fbstp clc (bad) (bad) incl sti xlat cmp pushf push (bad) push repnz cmp lock mov scas idivb test push dec cld xchg iret dec and loop jl mov xchg pop cmp je xchg cli repz (bad) and push or sbb pop loope out clc pushl ja xor lcall and push fs sbb xchg fsub jg (bad) inc mov stos xchg fbstp cmp cld sub lds sbb push cmpsl xor cs add into jmp (bad) mov (bad) incl pop mov xchg xlat iret fstps cmp cmpsb cli push add ror xlat (bad) call cmp xchg mov incb lahf push mov adc jg cltd xor popa adc adc jg (bad) jmp mov movsl push sbb rorl cwtl sti add stos mov pop (bad) (bad) (bad) call cwtl adc int3 pop rol test loop xchg sub cltd xchg leave test lock (bad) js xchg addl xchg xchg addr16 adc (bad) ljmp je push mov loop pop (bad) (bad) jg jle outsb iret push lahf dec incb sub dec jge stc push dec js test sub (bad) (bad) (bad) jmp (bad) (bad) idivl mov mov pop jl add jns out leave fstpt mov pop jbe jg stos aas jg inc das cltd cmp mov (bad) (bad) (bad) xor or lahf adcl mov and popf mov add fnsave int3 (bad) (bad) (bad) call in mov mov dec pop lret jg scas xchg dec inc xchg rcr gs repz (bad) (bad) incl adc stc pop xlat (bad) mov jl sbb push adc mov xchg out test test cld leave jge rcrb jle lock sahf sub cwtl sar (bad) decl and pop loop std pop xor inc add popf js out adc dec stc fbld std decl cli sbb dec mov outsb inc into arpl jmp and mov repz push jge push mov push and (bad) pushl test jle mov rcll jl icebp cli daa mov push jbe sbb imul push sbb imul push mov pop and decl sub scas jbe push adc in dec ret fsubr (bad) (bad) jg add (bad) cltd pop dec aas loope rcr lds push rorb sub pushf cmc push adc add jmp decb (bad) (bad) incl dec inc add inc fs or mov int outsb fdivr loop and gs (bad) (bad) (bad) lcall pop test pop sbb aad and imul and (bad) (bad) (bad) incl mov dec sbb and pop adc fsubl fstl aaa cld (bad) fistp fistl (bad) in mov and mov pusha fdivl (bad) (bad) (bad) call mov roll cmp or mov jecxz pop jmp jne inc ret cli sub sbb mov pushl jnp pop lcall movl sub dec (bad) (bad) pushl nop fadds inc add xchg inc or dec testb xchg mov nop push mov jbe movsb outsl cli (bad) call int loopne inc mov inc movsl lock sahf sub fiaddl lahf xchg loop (bad) (bad) (bad) jmp nop dec jb xchg ljmp lods xor insl int sub xchg sar (bad) (bad) decl push (bad) into jae jbe fistp ret sbb push sarl jmp enter lds (bad) (bad) ljmp mov pop imul sub add mov dec in int iret push in (bad) (bad) (bad) ljmp adc js out mov test mov mov jae rcrb xchg and jb mov (bad) jmp and scas repnz xor ss in push lcall adc incl into adc rclb and imul (bad) ficom mov sub (bad) (bad) (bad) call push inc and mov imul or dec ljmp jge decl (bad) xor add pop jle and xchg notb xchg add test xchg fiaddl test stos lcall and inc mov adc out lret mov push dec (bad) sub in (bad) (bad) (bad) inc xor dec sub in sub sbb bound fistpl xor test xor jb (bad) aam inc ret lods lret xorl push and push out cli (bad) lcall decb (bad) je mov xchg js bound cmp sbb cmp and (bad) (bad) (bad) inc sub stos mov rclb mov inc daa cmpb and push xor mov pop push imul (bad) push jg push push or (bad) ljmp lea aad mov pop add stos data16 jmp (bad) jmp rcll add ss cmp sahf mov decl in xor mov jns jp imul mov dec imul push inc dec cmp adc mov (bad) incl push dec loopne stos mov sbb push fldl2t jmp ret cwtl (bad) (bad) (bad) (bad) fstpl xorl leave (bad) jae pop out cmp dec popa inc pop sti add out (bad) (bad) (bad) ljmp mov leave rclb hlt pop mov mov movsb inc scas mov test clc (bad) (bad) inc scas mov out and lret ja adc sub inc xlat sub add sbb nop call insb and add mov aam cmpsb fnop (bad) (bad) std cmp (bad) jmp scas pop xor pop (bad) mov pushl pop mov add mov test call ja and inc ja enter inc cmp mov (bad) lcall loope adc shll out inc fwait lods aad scas and mov (bad) (bad) call or sbb addr16 pop scas push das mov lret loope and loope mov decl fcompl dec push and shlb loope push inc sbb (bad) (bad) (bad) (bad) jnp cmpsl jg cs and mov inc dec inc push and xor addl subl movsb mov jo inc insl in in lods and (bad) (bad) (bad) (bad) jle pop mov and mov xor mov pop je fbld sets cmp or or (bad) call icebp mov inc in mov mov pop test in inc jge decl mov add lgs negb sbb inc sub aaa cld jmp movsb arpl sub xor cmp sub (bad) (bad) decl sub inc xchg mov pop jmp lods push iret int3 sub (bad) (bad) call out mov aaa imul push jne hlt clc cli pop lcall outsl std cmpsl cli pop lods jge (bad) not xchg in fild mov add jge mov (bad) jmp out or aam (bad) jg jb mov cltd (bad) cli lods cmc out fldenv jbe jo add (bad) (bad) in xchg imul jge pop clc sti push stos fdiv cmp int jae call (bad) and xor sbb nop mov out (bad) incl imul pop andb scas iret add jns cmp nop xchg (bad) (bad) (bad) incl jg pop cli push test push xor jge or push add loopne (bad) (bad) sti jl mov sub out das hlt imull cmp rcrb out cli and movsl pop lahf sub aas mov add or xchg popf add mov (bad) pop hlt push pusha mov mov and (bad) (bad) mov add xor sti ja shr add jb cld adc mov jg popf cltd mov mov add pusha or imul fildl (bad) lock (bad) incl add mov inc rorl orb addl icebp mov adc call sbb (bad) ljmp iret mov lahf sti add add lahf outsb inc lahf pop outsb add outsl or or cmp pop pop les mov icebp cli sub sahf movsl cltd add (bad) (bad) jmp in outsb xor mov out mov outsb sub test dec sahf xchg fsubr popl (bad) (bad) incl xor or shr xor xor ret (bad) mov bound dec pop push push jae movsl pusha loope and (bad) (bad) (bad) (bad) (bad) (bad) fist aaa jge test (bad) cli stc cmp push xchg mov mov jg adc (bad) (bad) (bad) inc ss repnz mov dec lds jp addr16 cmp cmc data16 aas (bad) (bad) (bad) (bad) aas cld ss mul pushl out jmp scas push stc jnp mov std pop shrl add (bad) (bad) (bad) decl rolb rcrl das pop decl mov jns (bad) out fwait or pushl in (bad) jl mov mov add push mov popa aas frstor jb adc or iret or cltd mov xchg mov or mov fldenv je dec inc clc mov das add in sub rcrl lods in push into pop (bad) cmp xor aam repnz and sbb (bad) cld or (bad) (bad) jmp jae dec das cmpsl pop subl mov adc xchg xchg div sub adc mov cmc push out pop pop sbb mov lods xor mov inc rcrl out mov lcall ja fmul lock cltd movsb pop xchg pop push insl mov cwtl fcoml mov enter incl mov xor les inc jae das cli sbb in scas jno insb jge hlt mov pop enter lret das adc (bad) (bad) inc dec and or push clc cwtl mov lds sti stos inc adc cmp lock (bad) incl movsl cmp cmpsl mov inc mov daa mov mov leave sar daa jmp push sbb jmp mov dec fmul stos call cld outsl jb fdivrl divl dec cmp adc xchg dec repnz (bad) (bad) call scas adc nop or pop xorl xor jnp sub (bad) (bad) push mov jno orl jno out subl cmp (bad) (bad) (bad) jmp aas lock sub cmp cwtl mov mov pop data16 cs (bad) (bad) (bad) and or inc and inc mov inc sti fild xchg xor test ljmp dec xchg adc cltd cmp in dec mov int cltd xchg inc adc dec (bad) (bad) decl dec lahf pop into sbb je mov mov cmp icebp dec sub (bad) (bad) (bad) jmp push dec xor fs lret movsb int and jb (bad) aaa mov (bad) (bad) (bad) lcall xchg adc scas and jp cld arpl mov pop fstl in fs (bad) (bad) ljmp ljmp pop inc test (bad) xor sub test dec insl adc (bad) (bad) call or popf bound mov je mov add pop mov jbe (bad) (bad) decl mov adc adc ds sub pop shlb inc pop jno mov addr16 (bad) (bad) pushl cltd shlb gs out mov fs push and jbe jecxz ja or clc ljmp hlt dec add or add std sbb cmp clc (bad) jg or arpl js mov pop mov decl add push js iret int3 out add fidivr (bad) jae rolb dec xchg scas (bad) decl pop inc cltd hlt and push sub call (bad) (bad) (bad) (bad) aas fdivrp push ljmp adc adc mov xchg ja jo and addr16 push sbb mov call lods mov jp jo test pop clc fisubl test xor (bad) (bad) push leave dec daa out xlat sbb mov pop icebp (bad) call jnp xor icebp andl push xor shr push cmp (bad) (bad) (bad) call scas xchg sbb add repz push leave in stos es jne and inc inc (bad) mov ficomp test xchg dec cs stc js sbb bound jge fbld (bad) (bad) jg mov aam stos xor outsl iret mov (bad) scas sti cmp mov call push ljmp into fmul pop adc xor arpl dec loopne in (bad) (bad) ljmp dec (bad) fs andl cmc aam aas dec loop test data16 pushl cld inc jmp leave xlat pop xchg mov pop jno js lock xor or mov test and sub push aaa xor fild push jne lea (bad) (bad) stc push add xchg jbe sbb pop adc mov (bad) (bad) (bad) decl mov mov or mov push or pusha test push lret push mov leave icebp (bad) incl push mov jle adc mov test jnp cld inc pop and (bad) fild push test jl (bad) xor jge cwtl insb (bad) sbb (bad) (bad) (bad) cli out sub xlat (bad) mov mov or xchg and das xchg adc (bad) (bad) (bad) push push sbb add or add orl loopne imul mov jge (bad) (bad) call xchg add xchg pop enter (bad) jl xor std (bad) and sbb call cld incl les fsubrp or push (bad) push cltd les sub inc fs lcall lcall fsubrs (bad) xor xchg cld and cld mov adc pop pop push clc xchg push outsl cmp cmp inc lret push (bad) decl sub rep out add sub push (bad) (bad) (bad) pushl negl xchg and mov mov mov inc fucomip add imul cld cmc scas (bad) insb popf cmpsb arpl sub pop xchg push mov (bad) (bad) (bad) jmp xchg xor pop push push movsl (bad) cld int add pop das jo mov fidivr scas push (bad) (bad) (bad) dec loopne adc lea lcall out xor xchg and idiv (bad) (bad) lcall jl inc stos sahf lea inc jmp cld ds sub loop stc daa iret (bad) mov (bad) (bad) (bad) lcall (bad) (bad) adcl pop mov fist xchg sbb lahf adc out aaa cld (bad) inc inc jnp xor jns ja xrelease pop mov in push xchg jae lea test negb int xor (bad) decl push leave mov pop fcomp jle mov not incl stos call incl xchg fistpl mov leave idivb insb add (bad) in ljmp mov aaa sub inc add sub mov ljmp aas fildl and inc fucomip icebp jge jnp shl out (bad) (bad) (bad) dec int3 cmp out fdivrl lea push add outsb dec sbb cli jmp pop mov mov imul call (bad) (bad) incl testl mov leave lods decl (bad) mov ds add mov (bad) (bad) decl pop movsb pop mov or loop jb or mov int mov lcall sub fisttp pop push negl rcr aas in push aad out mov scas pop pop (bad) mov jp lods lret cwtl std std aaa cwtl lcall (bad) std push jne xorl lods mov mov into movsb sbb (bad) call jge in mov mov popf repnz loop daa cs pop (bad) (bad) (bad) (bad) jle movsl aad cmp sub inc ffreep in xchg (bad) leave (bad) out inc pop fldenv sub cmp fidivrl (bad) (bad) call jl (bad) jmp dec mov out pop cli jbe popa out imul mov and (bad) lcall in push jecxz adc lret mov popf adc jl outsl dec mov (bad) (bad) mov js faddp inc gs arpl shrl pop fwait jle lret aaa xchg pusha outsb xchg adc lcall jmp adc pop stc call ficompl out adc sti or ljmp (bad) insl or jmp fstpt push push mov or aam mov cltd out (bad) popf xor les in in jmp cmp out (bad) (bad) (bad) lcall xor pop jmp mov pop fstl lret out push sahf (bad) sub aas loopne test (bad) incl cld sub mov cs add out lret out pop fdivp lds (bad) (bad) (bad) jge fsubrp data16 inc das popf cltd (bad) icebp sbb xor int push sti lret fnop test dec (bad) (bad) (bad) call xchg adc xchg mov in imull push and add popf outsl ss (bad) (bad) (bad) (bad) cmp pop movsb stos xor outsl fidivr fsubr int xchg mov mov jbe pop jmp std push std decl mov xor out sahf jns movsl mov jnp cmp clc pop (bad) mov sbb add dec outsl pop ds mov daa lods jg jecxz mov lcall cmp mov fidivrl rcll push std leave imul (bad) (bad) mov shrl adc mov into scas daa insl dec popa xchg jo dec jmp lods lcall out (bad) mov or insl repz mov out sbb sub xchg leave aad stos mov mov mov jnp (bad) (bad) (bad) call jle das (bad) jne (bad) lods cmp ljmp jg pop jge adc mov (bad) (bad) pushl out adc xor stc imul movb call xlat decl push faddl mov ja fldenv jecxz xchg in push daa ret cmp sub dec fnstcw flds jmp out and mov or (bad) (bad) ljmp mov (bad) ss push add ficomp cmp or sti xchg and sub int3 jae (bad) lahf (bad) (bad) lcall fbstp out iret push les mov lret ss mov cmp (bad) jecxz sahf addr16 cwtl lea mov (bad) (bad) decl sbb mov aas sahf push mov xchg pop push in lcall dec lret pushf (bad) pop mov add and pop scas fisubl imul (bad) mov jns jae or test lock cli movsl imul ljmp sbb jne jnp popf loope movsl mov aam inc sub cmp dec (bad) imul lock pop mov jne lret lock xchg mov ret (bad) int3 cld jne fldl mov mulb sub (bad) dec ds xchg pop dec pusha pop fwait pop xor lcall or mov fldl (bad) (bad) (bad) (bad) call sub xchg sbb sarl xchg mov hlt aam test mov jg pop test mov cmp test inc not (bad) (bad) (bad) (bad) cmp sub inc repz mov mov std jbe push (bad) hlt out lahf adc pop add push dec mov pop out sbb mov js lcall inc roll xor sub stos je arpl (bad) (bad) decl sub push cmpsb fstl sub pop aad hlt stos int cli pushf pop popa push xchg push (bad) call std pop mov sbb push std stc mov loope mov (bad) mov adc pop adc pop aad ret push repz push push insl cmp (bad) (bad) dec out hlt pop xor out mov fcmovnbe int test lret in ficoml mov stos cmp jo outsb fistp loop jle cmpsb sbb int3 mov sub sub ja fs dec test dec add (bad) (bad) mov push pop xchg das mov xchg push dec sbb push into (bad) (bad) lcall xchg xor jl cli xchg test movsl test mov jns pushf (bad) mov out das (bad) jle data16 orl push (bad) (bad) (bad) (bad) mov pop (bad) and jae mov pushf (bad) mov stc (bad) lcall cld (bad) mov sub repnz (bad) pop sarb cli xlat push pop mov mov jne (bad) (bad) (bad) (bad) aas ja push mov jne dec enter dec dec add sarb inc mov incl cmpsl cltd sub adc jbe or add js jbe addl (bad) fistpll stos daa adc jne imul xchg pop (bad) decl or call loope sbb (bad) (bad) (bad) pushl test mov xchg inc xor or adc inc ja push fdivl (bad) (bad) (bad) ljmp xchg mov sbb mov insl jle ffree ja cmp and (bad) (bad) push xor cltd push aas out xor lret dec std stos and sub adc loope ss rcrl sti fimul dec xor and mov int dec test xchg inc and incl fdivr xor xchg jmp fwait sahf fnstcw jecxz out (bad) (bad) (bad) ljmp (bad) inc jae popf lds pop xor push movsl rcrb (bad) (bad) (bad) (bad) mov jecxz sti outsb xchg cmp aad cmp mov xlat xchg clc and or (bad) (bad) jmp (bad) je xor mov daa sbb xchg adc mov and cmp (bad) (bad) (bad) decl sbb adc and in cmp jbe jmp mov sbb cs ljmp dec loopne cmp shrb jecxz imul repnz dec or mov enter and (bad) (bad) (bad) (bad) decl adc xchg or dec arpl dec fist cmpl movsl jno adc test and (bad) (bad) pushl dec mov fucom and out ljmp xchg sbb call loopne (bad) out add inc cld cmc stos pop dec lds lods sub xchg mov push mov pop adc fwait dec lcallw xlat int3 adc int push popf sub mov (bad) (bad) call test dec les or mov out cmp aaa out clc js in daa adc (bad) incl shrl add outsl and mov das jnp adc push in test (bad) lcall lock or and jg mov mov push jle lret dec add pop xor fisttp into xchg push xor mov daa insl (bad) cmp mov inc (bad) (bad) call xchg idivb lods outsl dec testb xor sub ret int3 (bad) (bad) (bad) lcall and mov cs jns (bad) cmc cmp push (bad) pop aam out data16 jmp lcall stos cs cli pusha mov icebp mov adc add mov add adc fwait int3 ljmp (bad) jmp mov clc jl call xor mov sbb mov xchg xor (bad) ljmp mov loope lcall and and xchg mov and aaa fiadd (bad) (bad) call mov fmuls shrl fisttpl (bad) jecxz scas push adcb dec and into push cld (bad) (bad) fmulp mov (bad) pop stos inc adc cmpsb pop (bad) xor push hlt push mov (bad) decl fcompl push pop fwait and sub imul insl xchg pop popf pop add scas es push call dec aam std inc sbb mov (bad) (bad) ljmp js dec or sub mov ds sbb (bad) adc clc push push movsl sub cmp stos or mov lods mov lock (bad) pushl mov jmp mov test mov mov ds dec adcl sbb decl rcrb sub scas xchg les stos mov sbb sar fwait xchg inc in inc cmp xor push in leave push (bad) push adc jnp sub adc das insl add (bad) std lea outsb sbb insl sbb jge repnz (bad) (bad) (bad) ljmp mov mov push pop shll dec in pop jne dec je jp in push (bad) (bad) (bad) (bad) call push test fs push in cmp xchg popf cmp sbb fldt fidivl (bad) (bad) (bad) mov scas je lods push mov xchg sub push xor adc (bad) (bad) xchg (bad) jo push jnp push mov (bad) (bad) call in mov xchg dec in inc mov jl scas (bad) jae outsb jbe pop stc ficom shll (bad) (bad) ljmp (bad) sub lahf lret push icebp stos pop xchg jmp (bad) mov xchg mov push icebp pusha jg data16 xchg (bad) (bad) cmp dec lds ja pop xlat inc mov data16 jns stc (bad) lds fsubs incb stos cmp adc popf xchg mov dec mov jnp movsl bndstx xchg push push xchg sub (bad) (bad) decl (bad) in daa adc or pusha aam pop addr16 ljmp pushf mov and xor mov adc (bad) (bad) decl daa sub lock stos out mov imul jge (bad) (bad) mov insl cmp addr16 cmp or xchg enter (bad) (bad) lcall stos xchg (bad) sub shl fcompl and popa jg mov lock (bad) jbe bound cmpsl (bad) dec or (bad) fistpll adc sub test sahf (bad) (bad) lcall push sub stos les pop or cmpsb mov xor sub sbb cmp aam lods ret dec push (bad) jnp jg dec jno mov (bad) (bad) lcall or insb mov ret mov jns rcl repnz out idiv jo (bad) mov (bad) (bad) (bad) mov js bnd iret loope fpatan mov ja stos jg leave adc jecxz (bad) (bad) (bad) ljmp xchg imull mov (bad) mov inc ja pop dec hlt gs scas fidiv jl pop nop add lret mov (bad) jle in jnp sahf in popf aas xor addr16 cmp xchg std cld add imul mov jno repz fwait out mov mov imul mov sarl mull pop (bad) (bad) (bad) (bad) mov mov dec in lret cmp mov ret mov mov into push fidivr decl mov int int insl mov hlt in xchg (bad) (bad) mov jp jecxz cmp xchg das cmp lock jl leave (bad) (bad) (bad) (bad) jmp fldenv push jp pushf jle aaa pop mov mov fwait jecxz daa icebp inc fidivrl test (bad) (bad) ljmp test (bad) div popf outsb std in xor mov add stc mov pushf cwtl push mov mov pushl std pushl xchg sub lret ja sbb ss ds out jle xchg (bad) (bad) (bad) (bad) jmp ss lahf popf shrb lods mov hlt (bad) jnp aaa or jg push clc xchg pop mov dec cmpsl outsb fcmovne scas rolb pop mov xlat and (bad) (bad) ljmp cld fnstsw pop scas sti iret aaa lret stc addr16 push movsb insb (bad) sar arpl ljmp std inc pop ret das mov jle jne mov or adc lahf mov jecxz adc jle scas popf (bad) sbb fidiv pop std (bad) mov in pop pop outsb int3 xor push in dec mov iret cmp (bad) pushl cmp fwait mov loope jae int in repnz out jmp (bad) (bad) (bad) lcall mov (bad) and fidivr jno jne daa cmp in lock cli (bad) jg xor lret lock out in bound jno jbe es sub aaa push pop sub fdiv out test push sbb push in neg in jge fs jmp dec fsts mov dec cs fldt in call push lods (bad) mov in push jo (bad) mov sub (bad) (bad) (bad) incl cltd mov scas sarl hlt dec bsr inc outsl outsb (bad) fidivr out lods cmp decb lock dec int3 cmp mov xor push mov (bad) jnp push fldenv lods (bad) (bad) lcall lret sbb push cmp mov mov fsubs mov (bad) sbb iret jg jg dec fildl adc fidivr jnp (bad) (bad) call lret xchg xor arpl stc cmpsb arpl jp xchg pop call test idiv incl in aam cmp cmc nop rcrl repnz out movsl dec adc push or push (bad) fs (bad) (bad) mov mov jg push push pushf mov das cmp lcall (bad) incl pop sbb pop mov nop jmp cmp mov (bad) (bad) (bad) lcall lret (bad) add push dec out loope cmpsb test enter fldt or (bad) (bad) (bad) (bad) decl ret (bad) fisubr arpl pop cmp cmc insl or aaa loop push push (bad) jg (bad) ljmp inc roll mov sbb (bad) mov (bad) in ret cmp mov outsb nop mov sti (bad) or push ja jg repz mov sbb movsl leave aam fdivrp (bad) (bad) pushl (bad) (bad) leave or adc jbe stc in mov rcll cli (bad) decl push aas sub das imul inc ljmp mov daa cmc fcom jle mov out repnz jne cmpsb push jnp lahf into aam decl pop lcall int3 jo movsb adc ljmpw (bad) (bad) (bad) (bad) mov sbb push ret fisubr push mov dec mov cs mov mov (bad) (bad) incl sahf std sub aaa mov pop jle mov dec repz popf cmc or lcall cld inc (bad) (bad) jmp pusha lods lahf mov repnz adc sub mov sbb adc lret outsl mull inc jl mov test jecxz (bad) lcall (bad) aad lret outsb cmp fs nop mov ret inc mov (bad) mov outsb aam cmp and lea lcall std lock (bad) jmp push test cmp pop iret icebp dec jmp mov xor mov test insl call or lods xor cmp xor call (bad) (bad) (bad) call jno movsl and adc popf and mov jns shrb xchg dec ds repz (bad) mov xor pop xchg inc sbb lods jno out lods pop outsl aas mov (bad) arpl jnp cmp dec cmp rol cmp (bad) call cmp sub out pop ret jmp in inc xchg bound pop std pop mov pop (bad) decl mov pop xchg int inc or out rcrl or jbe (bad) (bad) inc sub popf mov inc fcos mov cltd add (bad) ja push scas pop mov adc xor jg mov mov jne ja bound pop xor aaa mov (bad) (bad) jg cmpsl das cmp arpl loop push leave xchg ja pop ja arpl xchg mov je (bad) jno daa lahf pop (bad) loope inc sbb bound inc call jle imul out aam fsubrp mov arpl pop popf negl std das sar and call mov sti lret or (bad) xor sub (bad) (bad) (bad) cmp (bad) and lods pop pop cmp icebp outsb in push cmpsl daa int pop (bad) clc mov (bad) (bad) (bad) push (bad) (bad) int aas stc ljmp inc mov outsl jnp lods js jnp js (bad) repz fwait (bad) (bad) (bad) (bad) fsubr pop xchg adc sbb mov ret fisubrl mov pop mov push cmp cld dec out ja cli pushl (bad) xor pcmpeqd xor (bad) (bad) (bad) dec pop adc inc cmc movsb (bad) ljmp sub jecxz ret daa and jb sti ja inc leave xchg aaa stc mull arpl pop loop ja cmp mov jp inc fist push mov xchg (bad) (bad) mov and (bad) cmpsb push mov mov lret nop sbb xor (bad) cli (bad) (bad) (bad) push psadbw out adc push iret sbb lret jno popf insb ss sub add (bad) inc mov int insl ljmp shrb pop cli mov insl je jp cli xorl dec push lea cmpsl adc jge rcl adc xor hlt sbb adc and fcomip jmp push fnsave rorb dec pop (bad) sahf fmuls pusha icebp popa cs testl push xchg cwtl loope ficomp clc sub (bad) call adc out divl push sbb loope jecxz pop xor mov rcll dec insl lock dec popa fidivrl (bad) (bad) (bad) lcall lods mov jg loope call push pushf and mov adc pop push stos pop (bad) pusha fldl sar xchg jp cmpsl aas fidiv fistp repz xchg add scas aaa sub mov mov (bad) (bad) mov imul mov in fnsave sub (bad) std jg call int lret lcall mov sbb or iret pop ss jae stos mov jge fisttp cmc icebp (bad) test (bad) ljmp (bad) dec mov pop xor jno rol popf out and outsl xchg sahf aam (bad) out pop (bad) (bad) push fisubr xchg xorl jmp ret outsl dec loope (bad) sahf rcll (bad) bnd jle sub (bad) pushl mov pop sbb das pop xchg (bad) call (bad) (bad) pushl mov dec pop (bad) cwtl test sub xor out in push mov dec sbb (bad) (bad) (bad) (bad) out jmp inc decb ja cmc in or dec adc sub rcrl jmp mov std cmp mov imul jns scas popf mov mov cld xchg lods std mov (bad) (bad) call mov lahf cwtl into ds push xor push inc fldenv pop lcall push mov fs daa jne cld je hlt loope pop dec ffreep shrl sub dec cs nop sarl xor mov popf outsb lods out mov stc add stos out mov (bad) (bad) fistp repz cmpsb cwtl inc stc inc mov mov scas test mov push lock mov and mov ret out sar (bad) (bad) ljmp lods popf mov imul (bad) sti repz insl ja xor xor ja inc sub jp cmp (bad) (bad) (bad) mov mov bound call in fldl out lock in pop cld cmp mov sti or push adc xchg scas dec rcll aaa sbb (bad) (bad) aaa mov lahf push add (bad) ljmp (bad) fistpll cmpsb push daa jb ja aaa (bad) xchg fcomps jnp cld (bad) out clc pushl cmp in adc mov lcall fwait dec cmc mov ljmp xchg dec inc jecxz xchg adc jp dec mov adc adc lods rcrl iret pop xor lea es xchg in mov xor sub stos cmpsb lods clc out out pop cld lcall fwait mov (bad) cmp cmpsb sbb rcl cli decl or fldcw mov xchg out xor sar outsl cli jmp mov out mov clc jo mov (bad) dec addr16 cmp es jo pop sub xchg adc (bad) (bad) incl out mov aas out xchg sbbl (bad) jecxz fs ja out sub addb (bad) lcall out mov pop daa jae das jae xchg sbb (bad) fbstp dec sbb mov cld outsl iret cmp push dec dec lds stos cmpsl repnz repnz adc lcall dec xchg or das pop jmp hlt mov mov xchg int3 pop repz in (bad) cmp xchg cmp dec jns jle (bad) call out and aas jnp xchg pusha ljmp push (bad) (bad) (bad) lcall daa aad cwtl repz lea xor jg cmp arpl (bad) (bad) incl push in in aaa cmc dec inc (bad) std adc push xchg iret push mov mov push mov or (bad) lcall inc jbe sub push pop aas pusha les subb pop dec inc and jge (bad) (bad) (bad) pushl cltd mov popa mov divl clc mov addr16 sbb into xor cwtl popf (bad) (bad) (bad) decl pop mov pop cld les es cmpsb shrb push xchg jle inc jp (bad) decl fadds sbb jae shlb sbb (bad) pop add clc push fwait cmp (bad) (bad) fcomi outsb xor xor imul data16 sbb notb divb aaa pop clc (bad) (bad) (bad) pushl out out mov mov or jmp mov mov push ja test clc push (bad) (bad) call imul mov les imul dec (bad) jns push dec jle mov jbe leave push insl jbe aas dec (bad) (bad) ljmp fsubl ss insl cmp out mov sub xor (bad) (bad) (bad) jmp fldcw scas subl ret movsl ficom clc xchg lahf adc fstpt (bad) (bad) lcall push loop mov ljmp inc insl in faddl xchg cld mov mov mov pushl push ret mov iret cltd cmc cmpl mov cmp es (bad) pushl cwtl aad push jmp dec jmp out shl (bad) stos cmp jge push mov (bad) ljmp in (bad) pop mov sbb pusha call sub jecxz mov mov jmp pop mov jle ret in xchg testl stos push data16 cltd xchg jge jmp dec push mov aam jnp mov jbe (bad) (bad) (bad) cmp outsb das pop jle cmpsl cmp mov mov xlat in mov xchg fisttpl (bad) call xor out lea pop push adc (bad) inc jae push xlat pop mov xor scas lcall dec xchg xor pushl add adc jae rcl insl sub jo dec (bad) push mov push outsl outsl cli (bad) pushl arpl cltd jle lret jecxz cmpsb cmpsb std movd or (bad) push jmp scas sbb outsl jbe inc jl icebp (bad) decl mov mov jle int3 lret scas or (bad) inc out cmp push mov (bad) (bad) call sub es jne (bad) fistpl mov mov jo xchg popa addr16 aam xlat (bad) jle jb (bad) (bad) (bad) (bad) jge cmpl dec sbb and cmp push mov sub inc cmp jp mov loopne (bad) (bad) (bad) dec lahf (bad) add iret cwtl jae cld xchg clc pop sahf dec xchg lret xchg aaa cs aas mov add pushl dec aaa dec xor cmpsl cmpsb sub (bad) jg jg add push (bad) fs xor out sbb popa xor xchg mov mov fsubrl aam mov gs cmp arpl push outsl mov cmp rcrb inc mov sbb in mov adc mov sbb adc jno lret and (bad) imul xor xchg mov pusha mov lcall xchg cmp (bad) in mov ret ret int3 fild outsl (bad) mov in adcb xchg mov jno mov sbb mov xchg int lds stos sbb in (bad) (bad) pop je popa xchg pop les ret jb or fs or lea adc shll mov or shrl xchg lret arpl neg xor lods loopne (bad) ss and sti lds es fsubrl in and (bad) sti xor cld lock mov pushl es out in push xchg jl cmpsl pop sar add dec push enter sub negw cmpsb cmp add fmull sahf pop int push mov jl mov (bad) inc mov mov mov xchg sbb xor iret mov sbb and mov (bad) std outsl lcall mov into dec xor mov dec dec lods sub lods test mov inc mov (bad) scas sbb cwtl sbb add jl ret pop pop jl adc mov ret jo adc movsb es gs (bad) (bad) adc aas scas or and inc fsts lds push mov fnsave bound mov push data16 in test cli sbb xchg in sbb jbe jne add mov (bad) sub inc (bad) push fsubrl pop (bad) lock iret mov xchg pop repnz icebp outsl fldt push push in push jbe mov cmp push push cmpsb cmp insl pop inc bound mov push in daa xchg mov sbb outsw or jb inc sbb daa mov mov sbb mov add (bad) (bad) xchg mov outsl fdivrs xor sahf mov sub push lock aam push xchg (bad) (bad) mov push push mov lea rolb int mov sarb add or mov cmp iret (bad) mov (bad) (bad) (bad) call mov or and or (bad) mov stos mov adc insb adc jmp mov xchg xchg mov ror je popl shrb push sub js (bad) (bad) (bad) (bad) mov sbb pop sbb and sub lret mov orb (bad) (bad) pushl scas mov mov pop call (bad) pusha xor ds (bad) (bad) jg rclb dec xor int3 movsb xor dec ds lret push (bad) jo pop push add (bad) call cmp pop cmpsl out add and xchg sbb dec lods sub (bad) (bad) decl push mov cs enter cltd dec cs rclb inc sahf ret sub dec mov decl movsl xor mov loop add and pop cld dec sbb or mov movsl movsl imul jmp sub rcrb or mov jns push sahf les mov dec xor int3 bound add push jae les push popf lds (bad) (bad) (bad) lcall push mov movsl push movsl xor insl cmp movsl dec imul jbe sub cmp (bad) (bad) (bad) decl and mov add inc not mov in xor sarl mov (bad) (bad) (bad) incl or or cwtl adc mov cmp test mov or adc fimul and cwtl and mov and dec lcall jmp sub stos lahf mov (bad) outsb out cli (bad) jmp sub fnstcw adc xchg inc iret adc dec test jg test inc into xchg mov sub xchg cmp jmp push sub xchg inc xchg imul or jne popf push push nop lret enter jmp mov test pop (bad) xor cmp int3 adc int mov sub mov dec pop mov mov ret lret lods push (bad) (bad) mov insb mov ss sub push pop cmp or test inc mov out js pop mov adc (bad) (bad) stc int mov sub insb xchg add inc cltd (bad) xor js push jo (bad) jg bound xchg and insb dec or dec test push aad push shr je or (bad) (bad) (bad) pushl cld dec or divb fcompl sub push inc insb xchg push sub stos and sub sub sub (bad) fcomip decl mov pop dec mov dec test dec push fwait aad mov adc mov (bad) pop jbe dec (bad) (bad) mov sbb push mov xchg imul in push cmpsb xchg outsl (bad) (bad) (bad) call lea fisubl jle xor bound out cli (bad) inc sbb pop (bad) scas (bad) jmp dec xor mov mov mov adc sbb es (bad) cmp inc ret sbb mov mov mov cmpsb xchg dec aaa cld inc bound int sub mov mov jg test pop sub push lcall xchg popa jl in pop mov insb pop mov push xchg mov xor repnz mov lods push stos fsubrs mov insb jb cwtl jae popf and mov repz mov (bad) stc sub mov xchg add movsb ret insl xchg (bad) call or mov pop or sub leave sub cmpsl ret (bad) jmp movsl fisubrl dec scas int xor dec inc into aad or add sub mov mov adc int3 (bad) sbb rclb or or jno test or add (bad) ljmp push push xor lcall movsb sbb jp xchg sub movsb (bad) jg call pop mov (bad) mov jl fldcw lock push (bad) (bad) (bad) decl mov mov test mov stc jle fsubrl jae cli adc aaa std call xor sub sbb scas and add (bad) mov sbbl sub dec int3 (bad) mov add in fs pop into xchg or dec in stc aad (bad) (bad) incl mov sbb cltd jb mov imul fucomp inc out pop xor iret sub sar (bad) jmp jmp ret mov dec (bad) or cmp lahf and add lret out clc pushf pop rolb xor sbb add (bad) (bad) jg (bad) lcall pop jae flds in jp fiadd add (bad) (bad) (bad) lcall js xchg dec movsl rcrl in loop js sbb test dec xchg sub mov (bad) (bad) (bad) inc (bad) push mov mov (bad) mov (bad) iret or cs (bad) (bad) jmp xor sub loope sbb push ret ret icebp jo and repz push pushf lcall jg dec pop push scas push stos mov inc adc mov pop sbbl sbb mov pushf insb xor push mov cmp ds jbe jge xchg (bad) lock cmp lods mov push add (bad) (bad) (bad) decl push mov cmpsb dec sbb sbb fsubs mov lcall adc jg ljmp push adc rorl ds sahf push insl into mov in sbb cmp clc jns jle aas sbb fsubrs adc xchg pusha and icebp sar int3 inc push cltd int (bad) (bad) jmp or movsb inc in int3 cmp aad mov insb add in push xchg lret mov (bad) (bad) (bad) cld inc aas fxch repz ret fyl2x add cwtl sub pusha jmp nop sub (bad) dec inc int3 mov push lods out (bad) (bad) (bad) jg mov add aad or xchg aam jbe or pop adc incl pop mov mov xor jno mov popf inc (bad) (bad) (bad) (bad) insb sub adc loop add lea mov daa adc lea mov push sbb xchg fldenv mov insl sub aam je pushf pushf rorl or (bad) lcall pop out xlat cli in cmpl xor cmp ljmp mov lods xlat rorb jbe (bad) xchg inc (bad) (bad) jg ret pop cmp inc and and sbb mov ljmp (bad) adc inc inc nop adc nop add adc inc lret (bad) (bad) (bad) mov push dec jb push jg aam ss sub xlat pop push mov jb sar push lds pop lcall insl fmuls and movsl and (bad) push pop hlt add (bad) lcall inc adc push push int3 loop sarb adc xchg or call xchg loope xor dec dec xchg jae sbb xor xlat push dec xor sub (bad) test sbb jl inc in sti push jle rclb push ret dec mov or xor test or pop std incl and push dec inc shrl mov pushf add pushf adc xchg sub (bad) (bad) jmp loope dec fsubrl test push inc adc inc cmp dec fs loopne and add scas aaa std (bad) jg ret (bad) scas sub lret push inc push push fcompl mov decb call push lahf and outsb inc (bad) mov scas nop push enter cmp sbb cmpsb (bad) (bad) (bad) call push ret push xchg test pop cmovle xor jne xchg sub fsts cmp adc test leave xchg js and pop into push enter fstpl ljmp dec mov mov push push loopne sub (bad) (bad) (bad) lcall enter outsb mov loope xor arpl int subb pusha ss cmp ret ljmp cld xchg mov pusha repnz xchg cltd lret aad add (bad) call mov xor ret dec test add lret (bad) in lcall adcb test popa pop pop daa pop ret xchg add incl jl lret int3 push lock add push mov sbb aad mov lods push sbb and mov or out clc lcall inc loopne and mov jae test xchg dec (bad) out ss repz xor stc js xor (bad) (bad) (bad) decl inc lret enter push sahf mov rorl mov jae,pn add xchg scas xchg jmp push push mov test add sub fldl xor cli ljmp stos in sub roll lea enter in add pop aaa add rcrb xchg dec fs clc (bad) jmp sahf sahf mov xchg add inc ds (bad) rcll adc pop xor pop das (bad) aaa ret (bad) mov push dec xor cmp sub add sets and xchg and mov pop jo pushf add ret adc (bad) (bad) cmp xor mov xor mov in popa xchg fsubrl insb (bad) (bad) (bad) incl inc inc jae jb pop push test push movsb pop sbb lret insl xchg or cmp (bad) (bad) incl test mov inc out cmp les mov add rcll cmp (bad) (bad) pushl cmpsb push rorb or and xor scas into imul popf out mov jb mov cwtl and lret jmp (bad) (bad) jg push dec add stc bound mov mov sbb jns mov pop push (bad) mov lock dec dec or (bad) (bad) (bad) dec loope xor pusha xchg xor sub sub lret cmp leave jne pop xchg loopne in into mov inc test das fucomip lock add and sbb pusha lcall popa mov sub sbb pop cld lcall int push add and (bad) (bad) lcall outsl add dec (bad) in (bad) ljmp push test inc lods shll in pop inc ja daa or jo and dec adc call mov lahf xchg mov testl (bad) call mov or jbe mov and clc popf add add aaa imul cmp into into mov cld popf xor fnsave mov jmp push nop lret xor mov sub mov out popa or repz mov icebp call ss xor push jo in (bad) (bad) jg les pusha and leave inc jb bound mov scas (bad) (bad) (bad) fild sub jo repz sbb (bad) cld cmp inc add fs std cmpsb (bad) incl push movsb imul imul xor (bad) (bad) call xchg repnz stc loope mov or add and fs lret sub outsb mov (bad) jmp xchg cmp mov (bad) into mov xchg imul insb sahf xchg iret in stc push mov inc dec xchg push adc in xchg loop fdivp popf adc (bad) xchg mov dec out out stos adc xchg push popa push cmp pop movsl push test adc lods pop stos rcr je pop hlt (bad) cmp je jecxz scas push out cmc insb cmp or out jp decl gs cmp fcmovnu mov pop lcall cmp jb hlt add (bad) or rorl adc mov xchg ljmp add fdivs xchg arpl (bad) lcall pop add adc dec test pop inc add sbb cli fs pop rcll sub pop lds or inc mov stos mov sbb je pop dec pop into vpunpckhdq push jge ds (bad) (bad) ljmp icebp (bad) jl aas (bad) xchg (bad) jne sbb jo sbb inc fsub repz or (bad) lcall sub pop mov sahf ljmp adc jl aas sub or push (bad) (bad) (bad) ljmp xor xchg test cmpsl add aaa jmp inc (bad) shll sbb jns mov (bad) mov loop mov cli mov add mov or pop mov and in add loopne lds ret int3 ja call loopne jo adcl scas fsubrs pop fwait scas mov adc push je faddl push out pop cwtl cmp repz inc fcomps loop or (bad) (bad) decl les jae cmp add or inc test (bad) fsubl fdivrs mov and enter movsl (bad) (bad) (bad) dec xor (bad) xchg jmp jp ds dec loope test clc inc xchg mov or lock nop jno and popa ds dec mov (bad) sub pop (bad) incl bound pop shr xor mov inc inc imul in mov scas je mov mov mov inc arpl sbb jns pop jp (bad) inc orl or bound or inc fcoml adc scas dec push pop ds icebp jae mov mov pop cmp pop enter add cmpsb mov lock jno rcll call loopne jl and sbb push cmpsl xor fisub (bad) mov sahf xchg aad inc fsts iret lret push mov (bad) add adc jmp xchg pop mov lock incl or and inc mov push dec xchg or sbb cltd lods mov sbb rolb jo test jle mov hlt pop jmp loopne jae cmp mov (bad) lcall scas out xchg das and mov mov cmpsl inc imul jg (bad) jmp jge push sahf sub lcall gs pop in std (bad) (bad) incl pop xlat and popf jo jb popf test loop inc mov jnp pop pushf (bad) in jae (bad) (bad) pushl movsl fistp jo leave inc pop rcrb and sbb (bad) (bad) and jg decb daa pop rcrb xchg enter dec or jl (bad) (bad) (bad) in lahf int3 out jae add loope pop push popa in mov out or incl dec cmp fild push xchg ret in sub in mov adc pushl jge jle add mov cmc jecxz inc mov shr or xor loopne mov shlb and push (bad) lcall int adc lret ret sub xchg xor (bad) in incl cmp push or mov pop sub (bad) (bad) (bad) mov and mov gs sub xchg fisubrl sarb sbb mov xchg (bad) (bad) mov or in xor sbb xchg scas (bad) (bad) (bad) pushl fnstsw mov sbb or push mov in push jp ds dec inc push test insb (bad) (bad) (bad) incl xor push inc rolb mov (bad) arpl pop mov mov jmp jmp test fmul inc mov mov or xor adc (bad) (bad) jp inc in xchg mov add xor aam or add inc (bad) (bad) mov int3 lds fsubrs mov mov mov in clc decl rcll fiaddl sbb inc es scas xchg (bad) fadds adc (bad) (bad) jmp mov and repnz xor and and xchg sub cmp mov in push fistpl (bad) xadd subl cmp ret xchg xchg (bad) (bad) (bad) (bad) ljmp mov test test (bad) flds adc test add mov cld push lret or data16 mov fstps dec or loop pop pusha dec adcl inc cmp dec or (bad) (bad) fbstp push (bad) std int mov mov and jmp jns lret (bad) sbb aas sub fisttp or adc xchg lea popl mov addb push xorb mov enter std pop hlt incl addl loopne sar les scas push sbb (bad) jg push (bad) xchg jecxz ret fst loopne add stos rcll subl aas push or mov cld jle cmp sbb sbb or test (bad) (bad) in or push lahf push or pop and xlat jg stc ds test int push mov movsl mov xchg mov in jo lds inc jns lods pop sub and (bad) (bad) cmp pushf mulb call mov jl (bad) sub rdpmc adc sub (bad) std pop mov sti stos std outsb jg (bad) jmp out not int xchg ret xchg sti fstps ljmp jg cmp push cmpsb int3 jnp fsubrl add (bad) push fucomip outsl inc sar mov jmp adc xchg xchg inc add incb or adc (bad) (bad) (bad) call mov and in push inc pop mov in ret sbb data16 mov pop (bad) jmp pop xor outsb shr xchg mov mov fnop jg into (bad) (bad) (bad) mov lods cmc decl mov repz push dec ret notl repz cwtl popl jns dec lds adc or adc pop subl jp inc das xor adc and daa mov sahf (bad) jg decl mov and sub sub add sbb xchg (bad) (bad) (bad) lcall push or imul dec mov sti push clc dec xchg add inc fidivr mov sub pushl mov mulb outsb dec mov pusha imul addb xor outsl adcb inc (bad) pushl fcmovnbe add jle (bad) inc les add pop fwait add std incl rorl adc subb push ljmp mov lock cmc pop push or mov or jg (bad) incl fdivl jge jo mov or fdiv pusha jge push jle loopne std pushl or sti pop int inc outsl cld cmp adc sar (bad) (bad) mov sbb mov mov mov mov lds jmp shl out popa loopne pop cmp mov cs pop or fiadd jge or add add inc jns pop sbbb mov sbbb repnz (bad) aaa enter push mov out lock sbb cmp push popa sbb mov inc xchg and or mov pusha sti mov hlt mov xchg gs repz add add (bad) pop pop (bad) (bad) mov cmpsb pusha cmp cmp add xchg cmp repnz lea leave push xor rclb pop push ficom sbb mov jmp loopne movsb scas loopne movsb outsb push xchg sub jnp push mov adc add cmp jmp (bad) jmp inc in or popf cltd js jno inc xchg rcr fs push add mov fwait mov ja adc push mov xor decl jnp cwtl loopne add add lret in mov (bad) (bad) incl loopne dec xchg repz aaa rcrl fiadd and xchg sbb daa nop lahf inc jle stc std (bad) (bad) (bad) cmp sbb adc mov push popl mov pop inc outsb outsb sbb jo js (bad) (bad) call out (bad) (bad) std sarl pop mov sub (bad) sbb jnp jmp mov int incb pop sub mov xor xor mov (bad) (bad) (bad) ljmp jns repnz lods pop mov (bad) out cmp adc mov imul cli dec rcrb mov mov inc push sbb neg jp sahf sti mov popa std xor add (bad) mov mov push inc clc (bad) lcall mov adcl pop dec pop scas in idiv fistpl lahf lods sti ret cmc cmp ficom mov ljmp negb std push jmp (bad) mov mov mov leave sub stc mov std scas pop lahf mov aad dec int3 jne mov call mov mov lods in ss (bad) call cmc paddq fnstsw jmp push push dec dec mov leave lahf (bad) (bad) (bad) lcall sarb jmp jp jge out mov mov vmwrite lahf and mov and (bad) (bad) (bad) (bad) jnp incb aas mov jg jg xchg fmuls jb cli cmc jmp gs fdivrs (bad) (bad) in decl mov add sbb daa xchg pusha bound das cmp (bad) (bad) ljmp sbb fs mov mov mov aam adc cli pop push push or cmp (bad) (bad) cmp sub outsb into lock jl cmp inc into mov jnp inc mov jmp (bad) pop lahf sub cmp cld jns out cltd sbb sahf xor bound ja (bad) pushl loop imul loopne push adc and lea adc (bad) (bad) (bad) (bad) ljmp es jmp fbld cltd out mov sub sbb icebp cmp sub (bad) (bad) (bad) call mov stos dec cmc icebp lods sub jge push std jae pop xchg lahf roll les (bad) mov push bound pop sub push push lret jp pop add adc inc addb (bad) lcall ljmp movsl cmpl rol mov jb andl fsubrs or (bad) (bad) pushl ret cli cmp push and lret push xchg popa mov cli lcall je fwait lods adc cmp mov std sti std inc xor ljmp test push xor xor ret repz loopne mov loop sbb inc xchg xor rcll or or pop lret pop pusha xor ret scas (bad) (bad) (bad) lcall add mov insb sahf or pushf popf imul out rorb mov mov add add repnz aas dec cld les (bad) (bad) (bad) ljmp int3 mov scas lods add xchg jb insb cmp adc loope insb jno mov outsl jg dec cmp imul add pop fldenv inc in pop inc pop (bad) (bad) (bad) call pushf sbb push xchg or ljmp lahf dec push mul xor iret lds jl (bad) (bad) lcall jo ss or scas rolb ljmp mov frstor add mov mov add xchg push fisttp call cld popf cwtl aaa sbb addr16 enter push daa jl rol data16 mov jae sub cs std pushl in insl shl push movsl xchg adc push fdivr test mov fnop ja push es sbb ja ja cmpsl cmc pop cld scas xchg xchg lcall fwait cmpl das rol add push cmp test out iret and rcrl sbb (bad) call std jns loopne cli (bad) pop or add xlat sub lods sbb (bad) (bad) decl cmp jo or call enterw pushf sti bound mov clc jb sub mov lahf fiadd cs jns hlt push enter pop jl fisttpll jge,pn (bad) (bad) push and pop jnp sahf inc lahf push and mov cmp jg (bad) (bad) mov mov arpl dec aam push fwait jp ljmp fcmove and mov mov lret aam loopne jne cmpsl insl (bad) outsb jae (bad) lods pop mov mov lret div fwait aaa inc mov decl out mov jmp mov xor mov (bad) (bad) mov jmp lods fistp lods jg por ja mov dec jp lahf jge fnstcw fistpll xlat push cli ja sahf cli cmp ljmp or dec mov pop jmp out insl mov addr16 ljmp mov adc leave fidiv insl push cmc addr16 jmp cmpl or (bad) std add xlat xchg inc mov xchg bound lahf insl ficom stos (bad) lcall inc test mov repz mov pop cmp stos xchg das pop mov jmp cs (bad) (bad) incl pop mov leave cmpsl lds pop lods sahf repz xchg in cmp xlat out test test fnstsw sbbl adc mov ret outsl dec fs mov pop mov mov test sbb pop mov and outsl add inc cmp es popf xor cmp (bad) (bad) (bad) (bad) cmp aam jecxz (bad) sbb (bad) sahf cld (bad) fstpt jl cld mov or or in mov popa rclb in (bad) (bad) (bad) (bad) lcall xchg mov adcl mov lahf out fdivs movsb adc (bad) stos push stos ja cli jmp mov aas (bad) (bad) movsb js push mov (bad) (bad) (bad) call dec nop loop js (bad) mov lock push sub xor mov enter jge sbb pushf sahf jmp outsl pop add aas jp ss sbb rol pushl out jo (bad) jl decl arpl sbb push fild in xor mov and gs add and sub inc cmp (bad) pushl sbb jb cmp pop pop outsb out cltd add xor push dec inc (bad) mov (bad) mov mov (bad) pop rorb jp fwait pop mov aad (bad) jg add mov mov dec sbbb dec loopne sbb lcall jg jmp or cmp mov loopne in adc (bad) (bad) fcomip or sub push out jae loope out stc imul xchg sti fdivrp (bad) (bad) pushl and shlb jl xchg xchg mov dec xchg lret adc (bad) (bad) (bad) call scas dec popf mov inc insl jno aam mov test loop mov pushf cmp cmc lds push add lods pop sub adc sub ret addr16 (bad) out mov out jp ficomp iret out mov mov fucomip dec insb fs mov std lcall loope outsl mov mov rcll jmp fcomip call jp adc adc mov fs and sbb dec fldl shl (bad) lea lods pop decl add mov inc push mov mov jb xchg je das jo movsb (bad) call xchg repnz cld ljmp add std push imul popf nop bound cmp sub (bad) (bad) inc shrb xchg pop lret mov jmp and pop out fistpl mov jmp (bad) call enter cld clc movsl repz test (bad) decl cld push fmull pop sub pop es (bad) jg lcall lret mov addr16 push cltd stc mov jmp bnd cmpsl or push stos std ja clc cmp mov mov (bad) ds and (bad) mov cmc cmc mov mov xchg jns mov mov (bad) (bad) jg sub aas mov fildll adc jnp,pt push mov adc (bad) ja mov jmp in sbb fsubrs std (bad) fistpll in clc (bad) repnz movsb je xor aas std xchg test mov sahf out (bad) (bad) lds (bad) psllw sti insl inc ss aam call jmp outsb xchg (bad) (bad) (bad) std cltd (bad) daa std dec cli lahf hlt aas jmp fldl or jg pop cld jmp (bad) adc fwait push jl bnd repz jl incl jg pushf (bad) lret mov jmp push (bad) fistpl (bad) pushl xchg pop cmpsb adc dec lea xor mov jp cld dec (bad) pop pop decl lock inc sbb cli (bad) cwtl std out in in out decl fsubl mov ljmp call adc mov push stos push push (bad) mov pop aas das sti pop icebp cmp ljmp push fnstsw jmp movsb mov jg popf cs lock ljmp rcrb push std mov in pop adc aas mov (bad) (bad) fisttp push hlt dec inc push mov xchg (bad) lods mov add lret (bad) (bad) (bad) (bad) out movsl (bad) into adc pop mov cmpsl mov dec jge xchg cli mov mov (bad) mov mov decl jns adc out aam jmp cmc adc mov ficomp sub fmull xchg arpl mov mov dec clc jmp pop inc es push pushf sti mov jg jle imul mov loop out dec cli cmp xor rcll (bad) ljmp xlat repnz mov in jle in popa or xchg mov idiv incl js test lret push cli imul mov ljmp clc (bad) dec jns es in cli enter adc (bad) lcall (bad) out xor out std sti and enter (bad) jg mov push repnz in insl mov and adc and divl cmp (bad) sbb inc aas dec mov push add pop xchg inc outsb lods sbb (bad) pushl pusha rolb pusha and push icebp nop jnp mov mov loope lock cltd and js into sub ja mov enter xchg ds mov fildll into insb add or addr16 push mov test fldt cmp aam cld push (bad) out loop hlt push mov cmp or push nop mov mov mov mov mov lcall imul test xlat inc into ret js add mov cmp js ret jns pop arpl loope sbb sti sbb ja into inc mov ljmp (bad) jns push sbb fildl jne xchg xchg xchg movsb jg std mov lahf mov (bad) (bad) jmp cmpsl cmc outsl sub nop jmp mov inc push add sbb mov in jg daa inc cs cld (bad) addr16 xchg shll (bad) mov shl (bad) xchg insl jle add and jle (bad) mov (bad) jns pop int dec mov in xchg movsl repnz enter ljmp das adc push or and cmp ds push mov adc hlt (bad) (bad) fistpll pop loop push sti cmp stc dec stc xchg clc ja int3 jp js xor (bad) (bad) call xorl or xchg divl aas rorb xor mov jmp xor mov js pushl (bad) fstpt cmp xorl push aaa pop leave adc out or (bad) notb repz jp (bad) mov int3 (bad) push pop test scas ss cmp lahf push add pop mov and (bad) (bad) push mov pushf cltd pop popa jg or lret (bad) inc dec fdivrs xor mov cmp cld scas mov mov out mov mov (bad) (bad) jg (bad) mov dec mov jmp insl adc jne (bad) repz (bad) ljmp ljmp ss outsb decl div pop js negb inc cmc lods dec pop popf shr scas mov gs mov (bad) mov (bad) pop shrl jge in cmpsb or daa ret sti mov iret ljmp adc push mov dec jno repnz fmul sar (bad) (bad) test lcall mov rcr icebp loope cli sti or scas pushl xchg das (bad) in ljmp pusha jmp jg cmp pushf testb call or jle pop jb aam sub jno insl mov push icebp cmp jmp fimull or push js or les in jecxz loope dec sti xchg xor leave dec lret out mov inc add (bad) call mov xor xchg icebp adc pop pushf das fs ret clc adc movsl sbb repz (bad) pushl sbb xchg xlat sbb add xchg sub fwait add call std jb push nop push dec mov inc dec in in mov adc (bad) push leave (bad) pop xor push into sbb pusha cmp push (bad) cwtl cltd (bad) fcompl (bad) (bad) fcomip inc mov sub jae adc gs jl cmp pop out lods pop sub clc mov pop add push js aaa std pushl pmulhuw xor in mov cwtl dec inc out iret ret jg mov fcompl and out and std cmp ljmp dec in push cmpsw sarl ja loopne (bad) (bad) out jle add dec lret into (bad) and dec daa and call enter pop or inc pop aaa dec mov sahf cmp ss fldenv jbe clc decl movsb icebp repz mov call inc pop out stc lds out push aaa jle imul mov xor (bad) (bad) decl ret repnz or clc mov pop out loope push in xchg adc aaa std (bad) in repnz popf push pop lock outsl pop addl mov decl mull outsl icebp sahf push inc mov bound xchg idiv pop sar cmp enter mov imul enter inc and (bad) sub and mov or rorl and cs jecxz mov cmp adc jmp jge fstpt fldt jle xor cld or pop enter decl or lret xchg notb ss add (bad) dec dec decl shr xor jecxz decl cmpsb (bad) nop aas stc pop icebp sbb ror sbb cmc xchg cltd (bad) (bad) (bad) (bad) mov std mov addr16 jmp xor in shrl (bad) ror gs mov icebp inc add mov pand icebp mov mov mov jmp hlt ljmp loop jo push lret xchg mov ljmp ds das lahf inc mov jno out and popf repnz enter in (bad) decl cmp or dec inc jbe sbb mov sub xor or fcmovnb rorl inc inc push enter or pop jbe das sar aam hlt cli inc cmp out sbb mov mov (bad) dec stc ret out scas push jg (bad) lea outsb fistp (bad) pushl sbb add insb pop out mov fdivrp (bad) lcall sahf jg adc or dec sbb xor add shlb dec sahf icebp push cmp cld inc (bad) ljmp jecxz mov mov leave xor pop xor inc scas stc (bad) push mov mov test mov sbb xchg pop cmp test cmp sti aas mov fs (bad) fist ja jg incl fisttp xchg movsb mov cld out jle jmp fisttp xchg (bad) adc popf add inc cmp dec mov dec dec dec sarb lahf push push jg notb mov ljmp dec out dec add xchg rcrl inc add lret out xchg jns out pop push cmc pop leave sti fucom adc call imul rcll inc (bad) (bad) jg sub mov lods add pop loopne lods adc scas shlb xchg add std or daa sbb in pop pop lds (bad) (bad) incl cmpsb xchg int pop ficoml les pushf adc adc or (bad) jg dec in add xchg ret andl push push adc xor call or inc xor push insl roll lcall jo unpcklps icebp (bad) jmp add leave add xchg inc out mov pop rclb add sub in adc (bad) call or add and jae and (bad) (bad) incl (bad) shl loopne and mov pushf rcll pop aam incl inc shl add nop sbb arpl std (bad) ljmp fs and and and cs jg,pn (bad) sti arpl and inc arpl jns das jns push pop push dec push dec dec push mov ljmp jae jae gs xor pop jo outsb addr16 and (bad) mov ds jp fisubl dec jmp mov lahf xor aaa cs outsb and xor je notb jb bound push mov imul and mov or sbb nop mov das arpl outsb add outsl outsl fdivs imul jbe arpl std dec (bad) jb popa add add pop outsl add push ja insl das jb xchg push in arpl adc sahf insl (bad) add out divb insb das push bnd fdivs imul pop ja jo arpl je (bad) outsb and inc xchg bound mov pop cmp jo sub fbstp imul pop fdivs add gs pop lcall jb inc loopne xlat ja insb add (bad) jge pop jne fs add ja arpl ds imul (bad) outsb push add jae fist aas clc mov je jns outsl add lock push sahf imul add (bad) mov outsb lcall xor xor fwait inc add add fiaddl scas scas adc pop cmpsl inc fs cli dec gs (bad) out lcall push popa bound insl push push inc push push jo arpl inc (bad) (bad) pushl xchg xor ja popa push out mov les (bad) hlt push xor xchg fs (bad) lcall movsb mov aad mov rclb mov (bad) bound out sbb repnz (bad) (bad) jmp mov dec jno repz test ficompl jmp (bad) mov hlt movl (bad) (bad) ljmp (bad) std in leave mov add insb push arpl psubd or outsb cmp (bad) (bad) call imul addr16 add aam dec std test movsl cli test xor lcall mov lods jecxz fdivs jne fild or shrl cmp (bad) (bad) incl ficom push xlat enter mov and mov cltd xchg mov mov or (bad) (bad) decl or and or adc stos sbb data16 lcall test push jno add aad mov mov (bad) (bad) (bad) jmp aam call xor add mov push loope or insl or ljmp xchg add imul sbb xor dec ds (bad) (bad) jg in xchg push insb jnp add (bad) hlt or (bad) fnstenv adc mov sbb (bad) (bad) mov bound ficoml gs aam pop popa mov into pop cmp in ljmp (bad) mov aam movsl fisttp xchg fadd (bad) shll jmp imul mov sarb add in add pop dec or cmp or (bad) incl daa adc or and test aam (bad) (bad) jmp lahf in into push stc ficomp leave fldcw and xlat (bad) pop cmp mov cmp (bad) (bad) mov shlb mov lcall lock aad scas ja popf adc (bad) call fdivl or test fs ds or or push in decl xchg daa scas add mov (bad) (bad) lcall (bad) shlb add inc push imul xorb sbb (bad) (bad) (bad) incl imul aam loopne rorl int3 dec frstor fistpll mov mov aad (bad) (bad) decl (bad) (bad) jle shll push repnz addr16 cmpsb fldl mov dec (bad) (bad) (bad) pushl mov fisubrl or scas (bad) dec add pusha jp inc ret out pusha fist addr16 mov jns (bad) (bad) (bad) mov popa lret sbb outsl and xchg ja int3 add mov das (bad) (bad) (bad) jmp add lds or sub mov cmpsl call ret (bad) mov sahf fldcw scas ficomp ret es pushf mov add fildll insb push jmp addr16 jb push add adc mov (bad) (bad) (bad) (bad) jnp sbb xchg or out fdivrl fisttpl aam roll clc mov cmp (bad) ljmp sbb int mov mul ja outsl ja mov out cli jo pop std (bad) decl dec cmp pop or adc sahf gs scas (bad) clc sar imul push js (bad) (bad) jmp or push addl mov cmp cmpsl notl pusha rorb imul (bad) (bad) (bad) ljmp scas fcompl fldenv fild cmp aaa push scas mov fidivr mov jmp (bad) (bad) (bad) push mov lret mov cmpsb mov sarb sub push mov (bad) (bad) (bad) (bad) jp mov dec popa les sbb xchg sub aaa mov or sbb add sub pop incl js daa cs inc outsb lcall push dec dec jae pop jbe outsl insb popa je outsb inc inc pop sti bswap cs ja outsb xor pop gs jo or or adc cbtw imull dec adcl mov add cld ds out sbb push orb outsb sbb or and cmpl jl xchg push ret movnti jo cmp pop in cwtl push and sbb pop mov ret inc and sahf mov sub inc rcrb and or push std sbb addl stos inc push add mov incb adc aad iret decl sub fistpl js inc outsl (bad) loopne jmp test mov cmp pushl jl mov popf sti jmp stos push inc mov repnz test pop stos (bad) (bad) (bad) (bad) clc scas adc (bad) inc jmp aam imul loope jp iret inc gs (bad) xchg push cmpsb scas mov (bad) (bad) (bad) decl addl cmpsl xchg cmp xor dec cmpsl in cmp lcall pop cmpsb lock mov popa sar mov fdivr (bad) (bad) jmp stos xchg clc repz mov subb fwait xchg and and sbb int add sti aas jno or mov sbb cmp cmc aas ret shrl cmp pop pop mov icebp aas rorb and das ss scas add aas xor (bad) (bad) jmp aad mov std std into popa test ja stos in das dec pop loope les aas xchg (bad) (bad) (bad) inc push cmp int mov addr16 push mov xchg aas and (bad) loop mov (bad) (bad) decl pop sarl jl mov das lea mov inc inc aas movsl jmp (bad) (bad) jmp jg sub jge mov inc rcr push arpl int3 and call mov cli cmp jp and cmp mov cmp std xlat cmp (bad) (bad) (bad) fmull call cmp test pop mov jne fldt cmp jno shlb (bad) out lcall decl pop cmp fisubl xor mov cmpsl push lahf inc pop mov (bad) call sub dec in ss pop into imul faddp jge call mov pop push xchg cmp push andl dec dec gs std orl pop ficomp outsl mov fmuls out inc out add push push mov add stos xchg stos and push push push adc dec inc push xchg push and xchg push and push dec push adc push inc push xchg test xchg push push push push dec test stos stos and or push addl loopne add je popa jae inc jb outsl jb (bad) outsl sbb popa jo gs insb insb outsl arpl dec outsb imul inc jb shrl arpl arpl xchg cld aam dec dec jbe inc outsb je jb insl push inc gs (bad) pop inc sub imul gs in push xor js sub outsb fs jb insb sti add jne and inc sub fdivs push lret arpl js mov outsl lret ret xor add adc jo outsb dec jne addr16 and gs inc addr16 mov insl insl popa stos dec mov insb sbb mov pop jb outsb inc xor bound das jnp outsb insb sbb (bad) dec je push lcall adc push jle jno dec xchg push outsl push dec adc push sbb leave mov (bad) (bad) in cltd xor dec outsl jne push outsl je,pn scas jge popa inc cmpsb or gs arpl pop jmp cwtl push popa insl gs mov and or popa or jns pop add test jle andl mov inc dec inc push rcrl pop sbb rcll cwtl inc lret jb xchg sti dec outsl movsb and mov loop pop sbb cli ja lret popa out xor test out loopne jne addr16 sbb xchg mov cmp xlat rcrb movl (bad) xor push test inc jae push ret xor aas cmpsb push push rcll jns push cbtw pop in xor inc in test sbb (bad) lahf push test dec sub pop roll outsb fnop sbbb popa mov or out lock gs sub inc fs wbinvd setb pop popa push aam clc mov jb cmp cli nop fmuls inc fsts sbb (bad) push out addr16 xchg xlat push jo repz insl mov nop lds adc inc xorl pop push insl lahf dec xor jbe arpl push adc lret pusha push lods dec mov fs js imul jecxz sbb mov add out push inc test mov (bad) jg jb aas lea std inc mov loop outsl mov xor (bad) jae outsl sahf int pop jmp and push pop fwait shrl fdivrs xlat jl hlt push or mov mov test mov insb and sub push inc mov push xchg rorl aam sbb lcall imul scas outsb jae test jo or or fistl dec roll imul (bad) push cltd push imul mov inc fs or addr16 popa mov shrl lock daa pop pop decl das push popa inc fs adc faddl inc dec bound mov inc sub sbb pusha iret es dec or push push lret pop add daa addr16 cmp shl jle test fsubs pop push adc pop pop cmp adc call inc sub out pusha (bad) shrb inc (bad) push sbb pop test adc and jb es add loope outsl ja pop push xorl pop shrb add jge jo nop (bad) loopne pop add add outsl push dec cmp mov jbe movsb cmpsl jbe xor insl jg jb arpl outsl mov push pop sbb push pop mov rorb inc sub jmp cld jae jae mov inc mov push jmp out push jns jns lret les cmp sbb and jb xchg loop je fcomps sub inc dec popa sbb mov inc arpl imul je push sbb (bad) pop cmp insb (bad) addr16 dec gs insl mov push add insl pop push fcomi cmp aad fldl enter popa cmp mov push sbb jne jge test add ja sbb and inc ret inc aam xor jbe jae lods int3 arpl add add jo mulb xchg pop pusha out lods hlt push lahf popa pop dec inc mov pop mov adc cmp insb pop inc int out xchg loopne pop inc gs sbb jae (bad) cmp jge dec dec dec in adc dec (bad) movups test jle inc outsb fs imul fbld aaa mov outsb and insl repnz scas inc (bad) add clc xchg push outsb jo mov cmp je cmp divb loopne inc pop mov je daa inc js and jle mov add ror pop shlb inc inc daa loope push xor insl out push inc insb je loope,pt add dec sub sub mov sbb sbb sbb push mov outsl push mov push aas sbb imul cmc push sar pop ja and dec dec inc repz movsb stos lods lock adc rcll ficoml sbb or add add sub scas roll cld mov icebp nop arpl inc in movsl rclb gs xor pop icebp (bad) push add data16 movsb push jo push add xorb in cmp lods jno inc push fsubrs movsl mov rorl xor push adc enter outsl cmp pop and pop insl mov popl dec addr16 sub pop arpl lahf (bad) sub rcll xor lahf pushl xor mov je push push popa ja push mov push je fimul popa les stos ret mov mov jp sbb inc pusha push push test pop adc push xor fwait push imul and bound dec popa sub in xchg pop js push inc nop (bad) gs jae,pt js pusha cli adc push daa rclb push adc imul cmp cmp leave aam add push mov xchg lcall jge sbb adc mov jno test jb outsl outsb orl mov (bad) out sarb push dec add dec sub add test jle push add adc pand push addr16 jo arpl xlat jle sbb adc pop xlat jle or lock pop or mov inc cs sbb dec loopne cmp cs add mov add add cs sahf je addb pop notb add dec cmp adc adc push repnz cmovg sahf jae arpl mov popa (bad) add xor push lahf sbb add sub cmp sbb rorb adc frstor inc ss iret add push xchg and incl pusha mov lea push or jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jb dec add jne mov sub adc adc jmp add jne mov sub adc adc jmp xor sub jb shl mov inc xor je sar mov jmp add jne mov sub adc jb inc add jne mov sub adc jb add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call popa lea push cmp jne sub jmp 