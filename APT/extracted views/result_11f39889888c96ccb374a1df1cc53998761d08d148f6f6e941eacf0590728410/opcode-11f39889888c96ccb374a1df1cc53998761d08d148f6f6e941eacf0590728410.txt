ljmp data16 or data16 push xor mov inc or data16 or je or pushw push pushw add pushw add data16 xchg pcmpgtd bound data16 or mov push data16 mov pcmpgtd xchg pcmpgtd inc push mov pcmpgtd jne sub data16 mov pcmpgtd add data16 add test data16 xor push data16 pcmpgtd jne in out push inc xchg pcmpgtd fisttpll data16 imul str add adc inc add adc or lea inc add add add or or inc add add add inc add add popa sbb jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp push call add add add xor add inc add add add add mov dec mov mov les add add add add add gs arpl je outsl imul or add dec xor add inc sbb lcall xor xchg stos call jp sahf cmpsb adc cmp xor or stos add xchg cld testb lret add add gs jbe outsb fs add jae jns imul outsb gs add inc add add push lret add insb je add lret add add add push add add add or test add data16 add xor add add add sub add add or test add mov add adc add add or push inc add pusha pusha add add sbb test add (bad) dec add and add add and test add outsb mov add pusha add add add add add add add add add add pop cmp add pop add pusha xor add gs add push add arpl add push add insb inc add dec add insl inc adc jno add jns add jno add je add insl inc add jne add jle add jae add js add jae add jbe add jg add ja add addl movsb (bad) push add test scas xor add xchg pop add data16 test test mov mov xchg add add outsb add insl add mov mov xchg jne test jg mov mov rolb add lea nop push add xchg push mov xchg lods sub cltd pop add pushf pop add cltd push add popf pop add mov gs mov ret mov lret xchg pusha add pushf fs xchg imul xchg outsl add lahf addr16 mov mov jb (bad) xchg jl shlb insl add mov jl shll jae shll lea cmpsb xchg addb xchg addl cltd addl lcall cmp xchg enter add mov mov mov mov xchg add mov pushf add stos test add scas test mov mov add mov add mov mov add pushf addl jl add mov test lds jecxz les popl shrb add lods mov fnstenv mov int3 movsl xchg add test fwait add mov add mov add mov add mov add mov add mov pushf add aaa sahf or and add scas mov add mov add mov add mov stos add mov mov add mov das add mov add mov cwtl add mov mov fadd movsb add shrl int3 (bad) mov mov add ret rol mov fld mov cmp mov rol mov add leave mov add lds add lret mov loop mov add xadd (bad) dec mov add mov lret (bad) int ret enter enter lret into lret into int3 lret into int3 add lret fcmovne ret lret ror lret into lret add into int3 add into int3 add into enter lds ror mov rcl add rcl add aam add aad add fcom add fcmovu add fcmovu add (bad) add (bad) add rol add (bad) lds jecxz leave add fxch mov fcmove add fcmovbe add (bad) add (bad) add loopne add loopne add loopne add jecxz add loope add loop add in add insb in call call call add out out add lock add out lock icebp icebp add div add sar add (bad) incl add mov add add add add daa add add add add add dec add sbb stc out add add add add add jb add in add add mov add add add add add add add xor add add add add out add add add add add add adc add add add cmp or inc add add add add add add add add add in (bad) pushf add add iret add or add add add add in (bad) int3 (bad) int3 add add add add add sbb xchg add icebp in loope iret mov push dec add cli add add inc add add add add in in jecxz (bad) lret xchg add jne add add add in add add add add fiaddl add das add add in loope loope jecxz in in fmulp movl add adc push or add add in (bad) sbb loope jecxz in in fcompp lret (bad) test add roll add icebp add push add add in in in in loope loope in in in in in fmul mov test add add add add add add loope fsubp loope jecxz in in in in in in in in in fmul xchg mov (bad) jg sahf lret add loope push fsubp loope in in in in in in in in in in in fmul enter jge xchg add arpl add add add add add add add in jecxz jecxz loope loope cmp in in in in in in in icebp in in in in (bad) enter jge pop add add add push add add sbb add add add out add add add in in (bad) (bad) loope in in in in in in in in in in in in in (bad) enter jg xchg add jge add xchg add repz jecxz (bad) (bad) loope (bad) in in in in in in in in in in in in in in in in (bad) enter jg mov add clc add sbb add add hlt icebp icebp in loope loope loope in in in in in in in in in in in in in in in in (bad) enter jg cmp or cmpsb add repz in in in jecxz in in in in in test pop in in in in in shl loope iret enter jg movb add add add div in loope in in in in push in in in in in in in in in in in in in in in fst lret addl add add add add fildl add add add add in in in in in or in in in in in in in in in in in in in in in in in in in in in icebp in in fcompp lret mov addl add fadds add add rep add add add add add xchg in jecxz in in in in in in in in in in in in in in in in in in in in in in in in in in icebp in jecxz fxch mov test stc add add in in in in in in sbb in in in in in in in in in in in in in in in in in in in in in in and in fmul mov test add adc push or add in in loope in icebp icebp div icebp icebp icebp in in in in in in in in in in in in in in in in in in inc in in in in in icebp in jecxz fst mov test add add jecxz jecxz in icebp icebp icebp icebp icebp icebp icebp in in in in in in in in in in in in in in in in in mov in in in adc in in in (bad) mov test pop add add in loope in icebp icebp icebp icebp icebp icebp icebp in test in jb pop in in in in in in in in in in in in in in in in in icebp in in jecxz aad scas test xchg add add add add add icebp jecxz in in icebp icebp icebp dec icebp icebp sbb icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp in icebp icebp in icebp icebp icebp icebp icebp mov icebp in in aad scas test add add add add in in in icebp icebp icebp icebp icebp icebp std icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp in icebp icebp in icebp icebp icebp icebp icebp in icebp icebp icebp icebp icebp in aam scas test mov add in jecxz in icebp icebp icebp movsl icebp icebp icebp cmp icebp icebp icebp icebp icebp icebp icebp icebp pushf icebp icebp in icebp in movsb icebp in icebp icebp icebp icebp icebp icebp icebp icebp icebp in loop enter mov in movsl in loope in push (bad) icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp repnz out jecxz enter mov add add add in loope in icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp in icebp icebp icebp icebp icebp icebp icebp icebp icebp jecxz push or add sahf cmp add pop add add push add add add add mov icebp icebp icebp icebp icebp icebp icebp icebp icebp pop icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp inc icebp icebp icebp icebp icebp mov repnz fmul scas lods test mov add add add add add add jecxz jecxz in icebp hlt push icebp icebp icebp icebp icebp icebp icebp add hlt icebp hlt icebp hlt icebp hlt icebp hlt icebp icebp repnz icebp icebp (bad) icebp icebp xor icebp icebp hlt icebp repnz enter mov add add add add add jecxz jecxz icebp icebp icebp hlt icebp hlt icebp hlt icebp xor hlt icebp hlt icebp hlt icebp icebp icebp hlt icebp repz icebp icebp icebp icebp icebp icebp icebp icebp je pop hlt repz fnop mov lods mov jle add insl add and add add repz jecxz icebp icebp icebp (bad) icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp hlt icebp repnz repnz repnz icebp icebp icebp mov icebp icebp icebp sub hlt hlt out fnop mov test add push add add jecxz in icebp icebp hlt hlt hlt hlt hlt hlt hlt hlt hlt hlt icebp hlt repnz icebp repnz icebp repnz icebp repnz repnz repnz repnz hlt icebp icebp hlt hlt hlt cmc out (bad) dec pop lods mov add add rolb add add add repnz jecxz icebp hlt hlt icebp hlt icebp hlt icebp hlt icebp hlt icebp hlt hlt hlt icebp icebp icebp in in in icebp icebp out icebp icebp icebp icebp icebp repnz hlt hlt hlt hlt div (bad) mov lods mov add add jecxz in icebp hlt hlt repnz mov repnz repnz icebp icebp in (bad) fsubp shl in in in in icebp icebp icebp hlt hlt hlt hlt cmc repnz mov lods mov add add add loope in hlt hlt hlt hlt hlt hlt hlt hlt hlt hlt hlt repz hlt icebp jecxz fcmovne lret fsubp jecxz ljmp hlt hlt hlt div repnz mov lods mov add loope in hlt hlt hlt hlt hlt hlt and hlt hlt repz out loop ror mov mov (bad) loopne (bad) loopne in icebp repnz hlt hlt div repnz pop lods lods mov add add add loope in hlt hlt hlt hlt hlt hlt hlt hlt hlt repnz out in loop leave scas addl fcomp rcl fnop loop repnz hlt hlt div or lret mov lods mov loopne adc add loope in hlt hlt hlt hlt hlt hlt repnz repnz loop xlat mov jle mov mov fcomp test repnz hlt hlt div repnz mov lods mov fild add add rolb add jl in hlt div hlt out out in ljmp mov jb test lods mov mov in repnz hlt div div loopne mov lods mov cwtl add add add cmp or add add add icebp loope in hlt hlt repnz loopne sarl mov dec ja cwtl fwait movsl stos mov rcr loopne repnz div div loopne mov lods mov (bad) sub mov icebp loope in div repnz pusha pop pop pop sub push adc cmp jne cwtl movsl mov rcrl div div loop mov lods scas enter xor add add add add icebp loope in hlt hlt cmc out out mov sub daa daa pop or add sbb outsb jb cmpsb mov rcr loopne hlt hlt hlt neg clc repz mov lods scas enter add dec add add loope xchg hlt div out xlat lods xchg pusha sub adc push push or cmp jb cwtl test mov repnz div div hlt loop mov scas mov faddl add add inc add hlt jecxz icebp hlt div in shrl push add or adc insl jns movsb movsb test mov out hlt hlt hlt div div loop mov faddl add jge add add add repnz icebp div imul shrl push add or cmp mov mov out repz hlt div div loop mov lods mov faddl imul add add icebp jecxz icebp cmc div out in mov and (bad) (bad) or xor sbb mov (bad) in out hlt hlt hlt hlt hlt cmc repnz enter enter add add add add add icebp in hlt div imul shrl es adc mov in out loopne out cmc cmc hlt hlt hlt repz loopne enter enter add add add add add add add add add in hlt div imul stc stos mov dec xor dec dec xor sbb sbb insl movsb mov out out ljmp hlt repz fst lret (bad) mov enter add add add in hlt div xchg dec in xchg pop dec dec dec push push dec xor xor insl jl fsubr jmp out ljmp hlt repz loopne lret jmp add dec add push add hlt in in hlt xchg clc imul out fwait popa pop push push push push push aaa cmp jbe mov jmp call div hlt hlt cmc repnz (bad) enter flds add inc hlt icebp jo idiv div out xchg addr16 push push clc push push aaa inc jae mov jmp call cmc cmc hlt ret repz (bad) leave enter add jnp add add add add hlt icebp icebp idiv mov lock std imul aaa inc jae in call jmp ljmp mulb hlt out loopne lret enter loope add les add hlt icebp hlt idiv clc clc repz sahf push push push push push cmp fdivrs out jmp repz div div cmc out push (bad) lret lret rcr loopne add je add div hlt idiv clc clc lock arpl push cmp (bad) mov mov fsubr jmp out cmc div div div cmc out loop aam ror fneni(8087 sub mov add add add push add add div hlt clc clc clc clc cmc jmp arpl cmp sbb mov fucompp jmp adc out repnz div clc idiv dec or loop (bad) rcl fsub cmp add add add add push add add add div hlt clc clc stc stc cmc jmp mov inc inc inc inc dec lea jb call lock test idiv idiv clc div in loopne aad aad loopne add add clc div idiv stc stc clc imul ret mov inc inc dec lea shl ljmp div idiv clc clc clc clc clc div in loop mov (bad) lods loopne add div idiv stc cli stc clc dec out adc lea xorl cmc div clc clc clc (bad) clc clc clc clc cmc out loop (bad) (bad) loopne add adc add div idiv cli sti cli clc lock sahf mov insb jl xorl div idiv clc clc clc stc clc clc clc div cmp (bad) (bad) loopne add add push insb add add div idiv (bad) cld cli cli lock jmp rol xor mov fldlg2 repz div clc idiv clc clc clc clc clc clc clc stc stc clc div scas jecxz (bad) (bad) add add clc div idiv cli sti cli cli div out jmp jmp mov mov (bad) bnd clc clc clc clc clc stc clc clc clc stc stc stc stc clc clc repz in loop (bad) loopne add add add add add and idiv cld cld cld cli stc div lock out lock lock (bad) rcl fchs repnz clc clc stc clc clc stc stc stc stc stc stc stc stc lcall loopne loope add add add push idiv stc sti cld cld cld stc stc clc clc div cs clc clc stc push div out loopne xor repz stc stc stc stc stc sti sti sti sti sti sti sti sti sti stc clc div out in jecxz fsubp pop sub add add add clc div adc cld cld cld cld cli cli stc stc stc stc stc sti cli cld cld cli cli clc div jecxz gs clc sti sti sti sti sti sti sti sti sti sti sti sti sti stc stc clc div repnz in loop inc test add add clc clc clc clc sti cld cld cld cld cld cld cld cld cld cli cld sti cld cld cld cld cld cli stc xor hlt cmc clc stc sti cld cld cld cld cld cld cld cld cld cld cld cld cli stc stc div cmc repnz jecxz in add roll add add clc idiv std sti cld cld cld inc cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld stc add stc stc sti cld cld cld cld cld cld cld cld cld cld cld cld cld cli cli stc clc testb repnz jecxz add add add bound add add add add add add add add clc clc clc clc clc cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cli stc clc div cmc repz repnz add add idiv clc clc sti cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld loope cld cli cld cli stc clc clc div repz cltd clc idiv clc clc sti cld cld cld cld cld cld cld cld cld xor cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld std cli cli stc clc clc mov hlt testl add stos add and sub add add idiv clc stc cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld sbb cld cld cld cld cld cld cld cld cli stc clc clc div add clc add add add clc idiv clc stc cld cld cld cld cld cld cld cld cld cld cld std cld std cld cld cld cld cld cld cld cld cld cltd cld cld cld cld cld cld cld std cld cld cld cld cld cld std cld std cld cld cld cld stc clc clc clc add add arpl idiv clc sti cld cld std cld cld std cld std cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld std cld cld cld cld cli std cld std std std cld sti stc clc stc stc add add add idiv clc cli cld cld cld cld cld cld cld cld cld cld cld std cld cld cld cld cld cld adc cld cld std cld cld std cld cld std cld cld cld cld cld cld cld std cld std std std std std std cld stc clc stc add add add add add idiv stc cld cld cld std cld cld cld cld std cld cld cld cld std cld cld std cld cld std cld cld cld xor cld cld cld cld cld std cld std cld cld cld cld cld cld std std std std std std cld clc clc stc add add idiv stc sti cld cld cld cld cld cld std mov cld cld cld cld cld cld cld cld cld std cld cld std cld std cld std cld cld cld cld cli cli cld cld cld std std std std std cld cld clc clc stc mov add add clc div clc stc cld cld cld jns cld cld cld cld cld std cld std cld std cld std cld cld std cld xor std cld std cld std cld std cld cli stc stc stc stc stc cld cld cld std std std std cld cld stc mov add add repz add add in hlt clc stc cld cld cld std cld cld cld std cld cld std cld cld std cld cld std cld std hlt cld std cld std cld cld cld cld cld cld stc stc stc clc cmpsl clc clc stc stc cld cld cld cld cld cld cli xor add data16 add add add add lock add add add add add cmc cmc clc sub cld std cld int arpl cld std cld in std cld std cld cld cld cld cld cld cli cld cli stc stc clc clc div div idiv clc clc cli cli sti cli stc cld add add add sbb add add add add add add add add add cmc cmc clc stc cld cld std cld cld std cld std cld std cld std cld std cld cld cld cld cli stc stc stc stc clc clc clc clc div div cmc repz cmc div clc stc stc cli movb xchg add sbb add flds add add cmc idiv sti cld cld cld std cld cld cld cld (bad) cld cld cld cld cld cli stc stc stc clc clc div div cmc repz xchg out in in in in in add cmc cmc div clc stc add mov add add add clc div clc cli cli cld cld cli stc cli test stc stc clc stc clc clc clc div cmc cmc repnz out in in in loop loop loopne loop jecxz in repnz div clc add add insl add add add clc div clc clc stc stc clc clc div div cmc jp repnz out in in jecxz loop loopne loopne loopne (bad) (bad) fnstsw loopne in scas sub mov add stc add add stc div mulb clc cmc cmc out out in loop loopne (bad) (bad) (bad) (bad) aam aam (bad) (bad) (bad) (bad) (bad) (bad) (bad) fist in repnz idiv add adc add mov cli clc div div out push loopne (bad) flds xchg enter lret rcl rcl aad (bad) (bad) loopne loop out repnz add add daa add ss clc clc idivb ljmp enter mov enter int aam (bad) fnstsw loopne jecxz out out repnz testb add add add cld cli clc div in addr16 mov mov mov mov enter lods aam fildll out repz mov add cld stc div (bad) fnop enter mov enter rcl (bad) (bad) jecxz out add add push add add dec add add inc mov add sbb add inc add cld aas imul loopne rcl rcl aam (bad) (bad) loop in out add add add add add add cld stc div in loop loop add add add add add add add cmpsl add pop add add push add add jns add add jmp add add movsl add add add ret add adc add add sbb add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivr (bad) (bad) (bad) (bad) (bad) (bad) inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec (bad) incl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incb add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add pop (bad) (bad) incl (bad) (bad) cld add add (bad) (bad) (bad) (bad) (bad) push lock add (bad) (bad) (bad) (bad) (bad) (bad) incl add fs (bad) (bad) (bad) (bad) (bad) (bad) clc add add pop (bad) (bad) (bad) jmp add pop (bad) (bad) (bad) (bad) (bad) incl add add pop mov (bad) (bad) (bad) incb add add pop (bad) (bad) (bad) (bad) (bad) clc add add add (bad) (bad) (bad) (bad) clc add add add (bad) (bad) (bad) (bad) push add add add (bad) (bad) (bad) (bad) jmp add add add (bad) (bad) (bad) (bad) jmp add add add (bad) (bad) (bad) (bad) jmp add add add (bad) (bad) (bad) (bad) jmp add add add (bad) (bad) (bad) (bad) jmp add add add (bad) (bad) (bad) (bad) jmp add add add (bad) (bad) (bad) (bad) jmp add add add ljmp push add add pop (bad) (bad) (bad) (bad) jmp add add add (bad) (bad) (bad) (bad) jmp add add add jmp add add (bad) (bad) lcall add add (bad) (bad) (bad) (bad) inc add add pop (bad) (bad) (bad) (bad) inc add add add (bad) (bad) (bad) (bad) inc add add add inc add add add (bad) (bad) (bad) (bad) inc bound add add (bad) (bad) (bad) (bad) inc add add add decl (bad) (bad) jnp add add add (bad) (bad) (bad) inc add add add (bad) (bad) (bad) (bad) inc add push add add (bad) (bad) (bad) inc add add add (bad) (bad) incl add add (bad) (bad) call rolb add (bad) inc add add add (bad) (bad) (bad) inc add add add inc add add add (bad) inc incl rolb add add (bad) (bad) (bad) (bad) inc add add add (bad) (bad) (bad) (bad) inc add add add (bad) (bad) mov add add add (bad) (bad) (bad) inc add add add (bad) (bad) (bad) (bad) inc add add add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add jmp (bad) (bad) incl add (bad) (bad) (bad) (bad) incl jae pop (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add add add (bad) (bad) (bad) (bad) incl add add add (bad) (bad) (bad) (bad) ljmp add add (bad) (bad) (bad) (bad) incl add add add jmp (bad) (bad) incl add add add (bad) (bad) jmp incl add add add (bad) (bad) call add add (bad) (bad) (bad) (bad) incl add add add (bad) (bad) (bad) (bad) incl add add add (bad) (bad) (bad) (bad) incl add add add (bad) (bad) (bad) (bad) incl add add add (bad) fdivrp (bad) incl add add add (bad) (bad) (bad) (bad) incb add add add (bad) (bad) (bad) (bad) incb add add add (bad) (bad) (bad) (bad) incb add add add (bad) (bad) (bad) (bad) incb add add add mov add add add add add add (bad) (bad) (bad) (bad) (bad) incb add add add (bad) (bad) (bad) (bad) incb add add (bad) (bad) (bad) (bad) (bad) incb add add aas (bad) (bad) (bad) (bad) (bad) incb add add (bad) (bad) (bad) (bad) (bad) (bad) incb (bad) (bad) (bad) (bad) (bad) (bad) incl add aas (bad) (bad) (bad) (bad) (bad) pushl incl (bad) (bad) (bad) (bad) (bad) (bad) inc pop (bad) jmp (bad) (bad) (bad) (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add or add add orb add add add pop add and imul gs sub outsl dec sub jo das add xor jle cmp push inc add dec add push add push add add bound xchg pop xor mov xor xchg add gs stos data16 mov data16 cmp mov jge add gs add jo add jns add jl add (bad) pop add test leave orl nop dec mov mov cld xchg pop add fwait pop add popf pop add cwtl push add mov push add add mov pop add stos pop add cltd arpl lret add (bad) addr16 scas arpl shlb test mov lahf data16 test mov add mov add mov mov mov mov add mov mov fisub fnsave xchg add scas nop add mov add mov add mov add mov add mov stos add mov add mov jl ret add mov mov add shrl enter rol mov fcmovnb mov fadd mov inc leave mov fmulp mov rol mov add (bad) test add sarb add sarl add ret roll (bad) add mov enter lret add (bad) enter int jmp add enter lret into lret cmp int int rol rolb lret aam les ror leave add int add into int3 add iret int fnop ret rol add ror add ror add rcl add rcl add aam add aad add rcl add aam add (bad) aad (bad) aam fnop (bad) add (bad) add fcmovu add fcmovu add (bad) add (bad) add rol add aam add (bad) movb xlat leave add fmul add fxch add fxch add fcmove add fmul add fcmovbe add (bad) add fdivrp add (bad) add (bad) add (bad) add (bad) add loop add loopne (bad) in jecxz add in add out add loope add loop add in add in add in pop ljmp add out add jmp in pminsw add jmp add in ljmp out in add jmp add in in lock in add lock add lock icebp icebp add repz add hlt repz hlt hlt add clc clc add add jne add add add add stos add xor add add add add and add add and add add (bad) (bad) incl add add push add sbb add add add pop daa in jno xchg add nop nop addl hlt lods add add add add add add jno nop mov inc add add hlt lods add nop mov cmpsb cmpsb xchg cmp add stos insl insl nop nop nop cmpsb cmpsb cmpsb nop nop and push add mov add add add add jae mov nop ret nop nop nop cmpsb xchg add add add cmpsb cmpsb nop nop nop nop nop nop nop nop nop nop cmpsb xchg add add add add nop nop nop nop nop cmpsb nop nop nop nop nop nop nop nop nop nop nop nop nop cmpsb xchg push add add add xor add add cmpsb mov nop nop nop nop nop nop nop nop nop nop nop popf nop push push push ljmp add nop nop nop cmpsb nop nop nop nop nop nop nop nop nop nop nop nop nop cmpsb nop pop push inc jne cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb mov mov cmpsb mov add cmpsb xchg cmpsb cmpsb cmpsb xchg cmpsb mov jno inc addl ret cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb lods je inc jge add dec add adc add nop xchg cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb pop jl jl add mov cmpsb cmpsb cmpsb cmpsb cmpsb push cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb mov inc inc jae add cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb mov stos push inc pop add xchg cmpsb cmpsb mov cmpsb cmpsb dec cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb mov addl add add add add add add add cmpsb mov cmpsb mov cmp cmpsb cmpsb mov mov imul fdivl mov cmpsb xchg pop pop pop push nop cmpsb lds inc add add add or nop dec add cmpsb sahf dec and pop add pusha pop pop pop nop cmpsb mov push mov add add add sbb pop sbb sidtl and nop cmpsb mov lods mov inc add pop cmpsb mov lods pop sbb add cmp pusha pop lods mov cmpsb mov add mov mov mov adc fsubrs xchg xchg push mov jnp xchg es xor or sbbb cmpsb mov add sub sub mov nop lods mov mov add add add sub movsl mov nop mov cmpsb test add xor mov xchg or mov mov scas jl pop add mov add mov dec or mov mov jge add add lods nop mov mov dec cmp scas scas scas mov lods mov mov jge add add add add cmpsb cmpsb mov push push mov mov mov addl mov mov mov mov mov mov mov add add cmpsb mov mov mov mov mov xchg or add mov mov mov mov cmpsl cmpsl nop nop mov mov mov mov mov mov add add add add add add mov mov sarb mov nop lcall mov sarb mov mov nop mov mov sarb mov mov mov add nop mov sarb mov mov shlb add add add mov rol sarb lods mov xchg add add add mov mov mov mov add add add jl add add mov mov (bad) je jnp jle mov add data16 add add pop push push push pop pop pop outsl je jnp jle cmpsl inc add add add aam add add push push push push pop jno jl cmpsl add mov mov add add add add add (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add incl add (bad) inc (bad) incl add (bad) incb jg add (bad) push add incl add incl add cld add aas incl add lock aas incl add rolb aas incl add rolb aas incl stos inc add aas incl add add incl add loop add pop incl add addb pop incl add addb pop incl add addb pop lcall add incl add addb pop incl add addb pop incl add addb pop incl add addb pop incl add addb pop incl add addb pop incl add adcb incl add addb pop incl add addb pop incl add addb pop incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add xchg add incl add add add incl add add add incl add add xor incl add add add pop add incl add jg add incl add (bad) incl add add add incl add add (bad) incl add add (bad) (bad) incl jbe add (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add add add add add add add or add add addb add add insb inc sub jg push add pop dec add arpl add data16 fwait jne add outsl pop add ja add xchg test (bad) jle iret xchg push add xchg push add popf pop add mov add add jg subl sahf add stos lahf add cmpsl movsb add scas stos add mov add mov add mov xchg shrl lcall mov scas add mov lods add mov add mov mov add mov stos add rorl mov add lret in mov loop mov add (bad) add mov lret add leave movl into into int3 add leave movb into roll lret leave add int add rol add ror add ror add ror add ror add aad add sarb aam roll aad rolb aad aam fcom rolb (bad) jo fcmovnbe aad (bad) (bad) add fcom add fcom jbe (bad) add fcomp add fcmovnu add (bad) add (bad) add aam add aam add aad add xlat movb aad add fmul add fcmove add fmul add (bad) add fst add (bad) add (bad) cmc fnstsw fild in loop add loopne add loop add in add loope add loop add push loop in in call call jmp add in in add jmp out add icebp icebp add repz hlt repz hlt fiadd out clc add add add mov add add add adc add sbb testl add leave add add jp add cli add add add add add add add add pop add add jo add add (bad) (bad) incl jne add add add add add add add insl insl ds add add add add add inc dec sbb insl push add add push push pop jb insl push push inc and add add add add add add push push dec and push push push push and add add push push push add add add add push push push add add push jno push jno and sldt out insl jno jno jno jno push and add jno jno jno and jno and add add jno jno pop sub inc jo jae add add inc add dec jno sub pop pop add adc inc jo jno and add inc push add dec jno jae das add add add add add add add pop jae sbb bound jno push add jae adc (bad) imul inc xor add add jne adc inc bound jne ds add add cmpsl add add add add insl js sub or sbb imul jno push inc dec add mov js dec cmp cmp pop outsl jno jne jno push dec add add add jne js je js cmp jne js jno dec add adc js js js js js js jno pop add add add add add js js js xchg js js jne jno add add add add add js js js js js js js js add insl js js js js js js js jl jno add js js js js js jne je jne add push js jne fs outsl insl je push inc cmp cmp inc jp add js xor add add add add add add add scas add add dec int3 add jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) (bad) incl (bad) (bad) clc add inc add incb add incb add cld add (bad) cld add (bad) cld add (bad) cld add push cld add (bad) cld add (bad) cld add (bad) cld add (bad) cld add (bad) cld add (bad) cld add (bad) cld add (bad) cld add (bad) cld add (bad) cld addr16 clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) (bad) (bad) (bad) ljmp add add add add add add add add add add add add add scas jo add pop add lahf pop add scas add mov add movsl testl ret mov add (bad) mov fcmove mov add ret rolb enter lret fcmove roll int3 leave add iret into add iret int3 add rol add ror add ror add rcl add aad fcom rolb fcoms add (bad) aam pop fcom add mov flds (bad) fadds (bad) fiaddl push (bad) add aam add fcmovbe add fst add (bad) add (bad) add loope add loop add in add in add out add jmp ljmp out in add lock add icebp icebp add hlt repz add add adc add (bad) add add add add add add mov add add add add add add add add add add bound add add add add add add add add add add add add add add add or dec add add add add add stos add add add movl add add adc add add add add add add lret add add add add add add add pop add add add add add outsb pop add pop add (bad) (bad) incl sub add add mov add add add push add add and sub xor sub sub mov sub sub adc add add add add inc sub sub cmp or add pop sub and and adc add add add add sub adc add add add and add push and add add adc sub add adc add add add xor pop or das xor pop add add add add xor xor add add add xor add add add xor xor sub or sub add add add sub add add add add incl add lahf add pop add loopne add loopne add loopne add loopne add loopne add loopne add loopne add loopne add loopne add loopne add loopne add loopne add out add sub add pusha add add add add add add add add and add add add sahf add push add add add add rolb insb add add add add pop add pop add adc push or sbb add add add dec add add add add add add add add add add add add add add cmpsb add add add add inc add stos add add add leave add jl add add and xchg add add outsb add add add add add add sbb add add aad add add add add add add add dec or add and add add add fiaddl add inc add add add add add add add add add add ret dec add add in add sub add push add add add add add mov add add add add add xor mov add add out add add add add mov add adc add add add add pop add add add add fwait roll add test add add add pop add add add add add add add jnp add add add fadds add add add xor add push add add add add add (bad) fnstsw fcom aad rcl roll addb stos add add add sbb add add add add add add add add js add add daa add fldl (bad) (bad) fcmovu aad rcl iret into leave enter (bad) lret add add add add add incb add lcall cmp mov cli add add lods add lret add add add add add add add jl add add in loop loopne fstp fcmovu flds rcl ror int (bad) ret ret ret mov add add add add add add push add add add add add add add add add add add sahf add add add add loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp push (bad) fcmovnu fcmovbe (bad) (bad) rcl iret jo mov mov mov add add add add add add add xor add cmp add add add add add pop add (bad) fstp fcmovu xlat xlat xlat xlat xlat (bad) fcomp xlat (bad) fcomp stos fcmovu (bad) (bad) fstp (bad) (bad) fstp fcmovu aad ror into int3 mov mov mov mov add add add add add add add add add add add add mov cli mov add sbb add add add testl xor add add add add cmpsb add loop loope (bad) fcmovnu fcmovbe xlat xlat aad aad adc xlat xlat (bad) fcomp fcmovu (bad) fcmovnu fstp (bad) (bad) (bad) fstp fnop xlat (bad) rcl into lret pop mov mov scas mov mov mov add adc push or add add add add loope loopne movsb fstp fcomip (bad) fstp (bad) (bad) fstp adc fcmovnu fcmovnu fidivl pop fcmovu fcmovnu fcmovnu fcmovu fstp (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fnop aam ror leave mov mov mov mov scas movsl mov add ret add adc add mov add add add add cltd add add add fstp fcmovu fnop xlat xlat xlat xlat (bad) fcomp (bad) (bad) fcomp fcmovu fstp (bad) fstp (bad) (bad) fstp cmp fstp (bad) fstp fstp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fcmovu fcom rcl into lret leave enter mov mov lods mov stos mov scas add add call add fadds add add add push add add loop (bad) (bad) fcmovu fcomp xlat xlat (bad) aad (bad) aad (bad) aad fcom (bad) (bad) (bad) fstp fstp (bad) (bad) (bad) (bad) icebp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fcmovu fcom rcl iret int3 lret ret mov scas lods scas stos test lods stos push mov add bound add add pop add add add add add add inc lea add sbb (bad) fstp fstp (bad) (bad) (bad) (bad) fstp fstp fstp fcmovnu fcmovnu fcmovu (bad) fidivl fcmovu (bad) adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc fcmovu fnstcw aam ror lret lret (bad) stc mov scas lods mov test lods lods mov add add push add push add add js add add add add mov add add add add add add add (bad) (bad) fcmovu xlat (bad) aad aad xlat (bad) aad xlat (bad) fnop xlat (bad) fcmovnu fstp lahf (bad) (bad) fstp fstp fstp fstp fstp frstor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp ficomp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fcmovu aad rcl int lret les mov lods mov test mov add sbb add add add add enter add add add add inc add add xor loope loopne (bad) fcomp xlat (bad) aad aad aam aad xlat (bad) (bad) fnop xlat fcmovnu fcmovnu fstp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fildll (bad) (bad) (bad) (bad) (bad) fisub (bad) fidivr (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fbld (bad) fcmovu (bad) aam ror lret lret les mov lods mov jnp mov sarl add add add loop mov add add add add add pop jbe out in loop loopne loope (bad) (bad) fstp fcmovnu fcmovu fcomp fcomp fcomp daa (bad) fiaddl fcmovnu fstp fstp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) and sub (bad) fmulp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivp (bad) (bad) (bad) (bad) (bad) fstp (bad) aad rcl int call mov mov mov stos mov scas (bad) mov add add mov add loope add add sbb fldl add fxam in loopne (bad) fstp (bad) fcmovnu (bad) (bad) (bad) fstp (bad) (bad) (bad) (bad) (bad) fstp fstp fstp ficom sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) fild (bad) (bad) fstp fcmovu (bad) aam ror lret lret les mov stos mov roll cmc testl add add add add add add add jmp jecxz (bad) fstp (bad) fcmovu fcmovnu fcmovu fstp (bad) (bad) (bad) (bad) add (bad) (bad) (bad) (bad) (bad) (bad) jbe (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sahf (bad) (bad) (bad) (bad) (bad) fcmovu (bad) aam ror int3 lret mov mov mov stos mov ret add loopne add dec add push add add add jecxz and sub fstp fstp (bad) (bad) (bad) fcmovnu fstp (bad) outsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) addr16 (bad) jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fimul (bad) (bad) (bad) (bad) (bad) fidiv (bad) (bad) (bad) loopne loopne (bad) fcmovnu fcmovbe (bad) aam iret int fcmovnb jecxz mov mov mov lods mov lds add sbb test add add add add add add push add add add add in in (bad) (bad) (bad) fcmovnu fstp (bad) (bad) fstp fstp (bad) (bad) ffreep (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fisttp fistpll (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fisubr (bad) cmc (bad) (bad) (bad) (bad) loopne loopne (bad) test aad ror int mov mov mov mov lods mov movl add add add sub add add add add add out loopne loopne fstp fcmovu fcmovu fcmovnu fstp fstp (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fbld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push (bad) loopne loopne (bad) fstp (bad) fcom aam ror leave mov mov mov mov mov lret enter add add add xor add add add xlat add add add add add iret add add in (bad) dec (bad) (bad) fcmovu fcmovu fcmovu (bad) (bad) fnstsw loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne fnstsw fist lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fistpll (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fist (bad) fnstsw loopne loopne sbb loopne fstp (bad) lcall enter mov mov mov rol add lret dec add xor add add popa add add cmpsl add add add add add jecxz loop fstp (bad) fcmovnu fcmovnu fcmovnu fcmovnu (bad) (bad) fnstsw loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne fnstsw (bad) loopne fnstsw (bad) (bad) jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) repnz (bad) (bad) (bad) (bad) (bad) loopne loopne loopne loopne (bad) (bad) fcmovnu (bad) aad ror leave mov mov mov ret mov add mov add add add test fiadd add imul xchg add add add add loope fstp (bad) fcmovnu fcmovnu fcmovnu (bad) (bad) (bad) (bad) loopne cmp or loopne loopne loopne loopne loopne loopne loopne loopne loopne fnstsw (bad) loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fnstsw loopne loopne add loopne (bad) (bad) (bad) fcom aam int enter mov mov mov add add add add cmp addl add add (bad) add add add add add add loope (bad) fcmovnu fcmovnu (bad) (bad) (bad) (bad) fnstsw loopne loope loope loopne loopne loopne loopne xor loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne pop loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne scas loopne loopne loopne loopne loopne loopne loopne loope loope loope loope loopne fist fstp test (bad) ror lret enter mov mov mov add add pop add add mov add add push add mov add cld add lds add add loopne (bad) fcmovnu fcmovnu (bad) (bad) fstp mov loopne loope loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne cld loopne loopne inc loopne loopne loopne loopne loopne loopne loopne loopne add loopne loopne loopne adc loopne loopne loopne loope loope loope loope loope loopne (bad) fstp (bad) ror int3 leave ret mov mov mov mov add pusha add add popl add add or add (bad) (bad) fcmovnu fcmovnu (bad) (bad) fstp ljmp loope loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne loopne imul loope loope loope loopne (bad) (bad) fcom ror leave ret rol mov mov mov mov add add dec add add add add add (bad) (bad) fcmovnu fcmovnu fcmovnu fstp (bad) fsubp loopne loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loopne loopne cmp loopne loopne loopne loopne loopne loope loope loope loop loop loope loopne fstp (bad) ror lret ret mov mov mov aaa (bad) add add add add lods add add jl add and fcmovnu (bad) fsubp loopne loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope mov loope loope loope loope loope loope loope loope loope loope loopne loopne loopne loopne loopne loopne loopne loope loope loope loop loope loop loope (bad) (bad) aad iret lret ret mov push ret mov add add add add push add sbb add fstp fcmovu (bad) fcmovnu fstp fstp (bad) loopne loopne loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loope loopne loopne loopne loopne loopne loopne loopne loope loope loope loop loop jecxz adc loopne fstp (bad) rcl lret (bad) mov mov mov mov add das sahf add mov in fstp fcmovnu fcmovu (bad) fcmovnu (bad) (bad) (bad) loope loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loope loop loop loope loope loope loope loope fsub loope loope loope loope loope loope loope loop (bad) jecxz loop jecxz jecxz xchg loopne (bad) rcl lret lds mov mov mov add add add cmp add add add add add add sub add add add add fstp (bad) fcomp (bad) fstp in loopne loope loope loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop and loop loop loop loop loop loop loop loop loop loope loop loope loope loope loope loope loope loope loope loope loope loope loope loop loop sbb jecxz jecxz in in loop (bad) fcom shlb mov mov les add mov add add add adc add add add add sbb movl add add jecxz (bad) fcmovnu fnop (bad) fcmovnu (bad) loope loope loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop loop sbb loop loop loop loop loop loop inc loop loop loop loop loop loop mov loope loop loope loope loope loope loope loope loope loope loope loope loope loope loop loop loop jecxz jecxz in in jecxz loopne (bad) ror mov mov mov mov add jo jno add dec add add add loop (bad) aam fcomp fnstsw add loopne loope loop loop jecxz je jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz loop loop loop loop loop loop loop loop loop loop loop loope loop loop loope loope loop loope loope loop loope loop loop loop loop jecxz jecxz jecxz in in in mov in loopne (bad) roll ret les mov les add add add add add sbb add add add stos add jae pop add add add add add cmp add cmpsl add add loop fcmovnu fcmovu fcomp fstp fsub loopne loop loop jns jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz sub jecxz jecxz jecxz and jecxz jecxz jecxz jecxz jecxz loop xchg loope loopne loopne (bad) (bad) (bad) (bad) (bad) fsubp loopne loope loopne loope loope loopne loopne loope loopne loope loope loopne loope loop loop loop jecxz jecxz jecxz in in in out in loope fcmovbe push or (bad) les mov les std add or add loope loopne fcmovnu fcomp xlat fstp fsub loopne jecxz loop jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz jecxz loop loop loopne fstp fstp fcmovu fcom xlat (bad) aad (bad) stos aam jne pop fcmovnu (bad) fsubp (bad) loopne (bad) (bad) (bad) fsub (bad) loopne fsubp push loop (bad) loop loop jecxz jecxz jecxz in out in out jecxz loopne (bad) aam mov pop mov mov ret mov add add add add add add pop add roll add add add add add add add add add xor fcomp fcomp fstp fucom loopne jecxz jecxz in in loop in in in in in in in in in in in in jecxz jecxz (bad) jecxz jecxz loope fstp fnop (bad) (bad) rcl ror int3 lret lret lret iret xchg lret (bad) aad fcmovnu (bad) add fstp xlat dec (bad) fstp (bad) (bad) fcomp fstp loopne fucom loope jecxz loop in in sbb in out out out in loope xlat aad enter mov mov les add cltd mov add add add add add loope loopne fcmovu fdivs fstp fucom loopne in jecxz in in mov in in in in in in in in in jecxz jecxz jecxz loop loop loopne loopne (bad) fnstenv repz rol mov mov rcl int3 je rcr fcom (bad) iret fcmovnbe int aad fst rcr in (bad) (bad) (bad) loopne jecxz loop in in in in out out out in loope xlat aad enter mov mov ret mov add xor add data16 add icebp add add add add add add add add out add add add add add loope loopne fcmovu fcomp xlat fstp fucom loope in in in in in in in in in in in in in in jecxz loop loope (bad) loopne fcmovu fcom (bad) int mov mov mov lods ret leave sarl (bad) fcmovnbe (bad) fcmovbe (bad) (bad) fcmovbe (bad) fcmovnbe int3 (bad) fcmovu fcmovbe loope cmp loop in in in in in out call loope xlat aad enter mov mov ret mov fcmovbe aad add dec insb add loop loope fcmovu (bad) fcomp fstp loope loope in in in in in in in in in in in jecxz loop loopnew loopne (bad) (bad) (bad) rcr int rol mov mov scas sahf xchg mov stos int3 mov xlat enter mov lret int3 mov aam fcompp aam (bad) jecxz loope in in in out out out movntq out jecxz fcmovnu aad enter mov mov ret mov fnstcw aam add add add add add add add add add add add loop fcmovu cli (bad) fcomp fstp loop loop in in in in in loop loopne loop fsub fcmovnu loopne aad (bad) mov into leave fxch ret mov scas mov mov jne lea lahf nop shrl mov aad xor ret scas fld mov leave mov ror fstp shl ficom jecxz loope in in in out out out call fcmovnu aad enter mov mov ret mov iret aad add add add add add add mov add add push iret add loope push fcmovu fcmovu (bad) fstp jecxz jecxz in in in jecxz loop (bad) fcom fst lret fcmove ret mov mov (bad) mov sbb rcrb ja xchg jb xchg jl scas xchg jg mov mov sahf int mov ret jae enter mov xlat shl (bad) jecxz loope in in in out out out call fcmovnu (bad) into leave mov mov mov ret inc mov retw xlat aam add add add add mov out add add (bad) pop add add add in add add add add loop fcmovu fcmovu jl (bad) fsubp jecxz out out in in loopne fcom fcmovne (bad) aad mov mov int3 cmpsb xchg enter xchg jl inc test mov mov xchg jg cmpsb jae xchg gs xchg mov lcall pushf mov xchg ret int movsb (bad) ret enter clc fcmovnbe leave (bad) shl (bad) in loop in out out out call call (bad) into leave jg mov mov mov (bad) rolb add add add push jbe add add add add add jb add fildl cmp add add add loope fcmovu fcmovu ficompl in out out in jecxz (bad) ror xlat (bad) mov scas mov mov jle jp mov dec mov dec mov dec lods insl lods sahf gs mov (bad) pop xchg xchg jge mov test mov movsb aad scas fcmove mov ror (bad) shl (bad) in loop in out out out call call (bad) iret pop mov mov mov ret lret (bad) rcl add add add add add incb add add loope loope fcmovu fcmovnu fneni(8087 loopne in in out out adc (bad) (bad) enter sbb andb dec mov shrl cmp cmp mov sbbl cld push pushf test xchg test nop mov xchg shrl lds rol (bad) int3 (bad) aam fbld in out out out call call fcmovbe ror enter ret sarb (bad) movsl rcl add add aam cli add add add loop fcmovnu fcmovnu fcmovnu loope loope in out out out jecxz fcmovu iret (bad) (bad) mov lret ret mov inc test ss pop xor pop xor bound fwait arpl xchg pusha mov arpl js lods xchg cmpb mov les cmpsl ret leave mov rol xor int fcmovbe loop fucom in in in in out out out jmp loop fcmovu ror enter ret mov mov (bad) rolb add fiadd out insb repz add loop fcmovnu fcmovnu (bad) loop loop out out popf out out (bad) (bad) ret mov xchg ja mov inc cmpsl cmp xor popa xor cmp cmp dec sahf andl mov mov rol mov (bad) mov ret mov leave mov rol (bad) leave (bad) iret adc (bad) jecxz fsubp in in in in in in out call loope fcmovbe ror leave leave ret mov ret mov aad iret pop add add mov add push add add add add add leave add add add add add inc add cmp loop fcmovnu fcmovnu jo loop loop out out call (bad) (bad) ret sahf lret fwait add gs inc stos push movsl imul push lcall push (bad) jno mov xchg rol mov int fcmove mov lret mov rol loope (bad) lret shl (bad) jecxz fsubp in in in in in in out out in jecxz fstp xlat ror leave lret lds ret mov aam iret adc add adc add add add add add loop fstp fstp fstp jecxz jecxz out call out (bad) fmulp ret aad mov es js push jbe mov inc mov inc lods jp mov inc xchg insl inc mov jbe mov popf aad mov rol loopne (bad) loope ret mov ret jecxz (bad) loopne int3 sbb shl (bad) in (bad) in out in in in in in in loop loope fnop aad int lret vshufpd mov aam into add push ja add add add add add add add (bad) add add add add add add cmp add add add loop fstp fstp (bad) jecxz jecxz out call out loopne (bad) (bad) xlat mov into mov rolb addl dec mov dec lahf jns xchg ja xchg js lcall mov fxch mov xlat leave out leave in enter in (bad) jecxz leave loope int (bad) loope fsub loope out in in in in in in jecxz in loop (bad) fcom rcrl dec sarb mov ror add add pop push add add add add add jecxz (bad) lret (bad) fisttp in out out jmp out fucom rol fdivrs lret lds (bad) mov lret imul add push scas xchg movsb (bad) push mov outsl lods lcall mov rol in int3 out int fcmove out lret out leave in enter loope int (bad) loope fsub loope out in in in in mov in jecxz in loop (bad) (bad) aam int3 into enter mov mov (bad) mov add mov add add add add sub add add add and jge add add add add in jecxz (bad) loopne loopne in call ljmp loope (bad) fidivrl into popf movsb lret xchg pusha lret int3 xchg push rcrb rcll mov xchg jne aaa pop mov rol mov rol in int3 call iret jmp int3 out lret leave in lret into loope shl fcompp in loopne out out out in in in in out jecxz loop fbstp (bad) sar ror ret rol mov mov add add add add add add add add fadds stos add add in loopne loopne loope out out call ljmp aam fcmovnb test mov iret cwtl pop sbb int pop rcrl xchg push mov fmul mov fmul in int fcmove out int fcmove call lret out lret int3 loop iret loope sbb fcompp in loopne out out out in in in out call loop (bad) (bad) rcl push leave int ret popf ret ror ror (bad) aam into add push mov testl add add add add add add add jp add add add add inc in jmp ljmp loop out out jmp ljmp aad fadd stos (bad) mov shll scas pushf pop rcrl lahf pop rcrb xchg imul xchg shrb loope lret (bad) (bad) (bad) loope enter out lret out lret out int3 in loopne fcmovbe loop aad (bad) out loope out out out out out aas out out out out jecxz (bad) cltd (bad) sar into lret iret enter ret ret int (bad) aad iret fcmovnu fadds add add add pop add add add add fwait add add add mov add cmc in in jmp push jecxz jecxz out ljmp ljmp lret neg mov aad jnp mov rcrl leave popf pop mov pop lock iret mov and sub lret (bad) mov int3 rcr (bad) leave out lret out int fcmovnbe in shl fst in fsub in out out out out out out call out in loop fstp xlat aam ror ror enter int (bad) iret lret ror fcmovu (bad) add add add add add add add add add add add add jmp out out jecxz in in call in in in jmp ljmp ficom fnstcw aam outsb shlb lret popf pop les scas mov xchg addr16 movsb (bad) leave mov ret mov mov aad mov (bad) lret int fnop out shl fst in fxam loope out jecxz out jmp call call out in loope fstp (bad) xlat rcl ror lret iret add iret leave (bad) iret lret enter fcmovu (bad) cmpsl add add cmpsb mov add add roll pop add add mov add add jmp insb out jecxz jecxz in jmp in in in in in in jmp in in das (bad) mov mov (bad) test int3 popf popa les mov pop mov popa mov insb mov sahf into (bad) mov ret mov mov xlat int3 rcr enter call aam loopne out (bad) loopne out fucomip out jmp jmp jmp ljmp loop (bad) fcomp mov aad int lret leave ror enter aam iret fcmovu (bad) add add imul add faddl add add lret out in in in ljmp in in in in in ljmp int3 mov mov xlat lods jnp movsb outsl leave popf addr16 bound insb mov xchg scas cltd les int3 (bad) mov (bad) mov aam in iret call xlat in jecxz jmp fucomi loop out fsubp in call call jmp ljmp call loopne fidivl rcl into int3 ror lret ror lret aad rcr fcom add add add add mov add add pop add add add add jmp out out in out out jmp in in sbb out out in in in jmp in (bad) adc mov mov aam jnp mov mov insl mov jl test les mov stos int3 ret int3 ret (bad) lret jecxz shr (bad) jmp (bad) in in dec fsubrp out jmp loope out jmp push ljmp ljmp ljmp loope fdiv fcom fcom rcl ror ror int3 ror int3 aad rcr fcom add add add add add add add out add testb add add add add add add jmp ljmp out out jmp out out out out out out out sbb in jmp in out leave scas ffreep mov mov shrb mov lret scas (bad) int xchg (bad) mov mov pushf mov mov ficompl sub fsubr jecxz jmp fucomip out in out in call jmp out jmp jmp jmp jmp jmp jmp in jmp in jmp ljmp (bad) fcmovu fcmovbe aam rcl aad iret aam into (bad) rcl (bad) (bad) add add add add add add add add add adc add jmp call out out in in in out out out out out out out out out out jmp jmp fsubr fxch in mov lds mov fs sarl aad cmpsl lret mov mov pushf mov mov (bad) out fsubr in ljmp call lods call ljmp jmp jmp mov in in in in in in in in jmp ljmp loopne fstpt rcl rcl (bad) rcl mov rcr fcom add and add cmpsl add pop add and add and add add add add add add add add stos ljmp call sub out out lock out imul in out ljmp sarl lret mov leave mov leave mov lret lret mov iret mov ret mov mov lods lret lds fnop in fucomip out ljmp jmp xor jmp jmp jmp jmp in in in in in in in in in in in in in in in push in in in jmp call loop fstp outsl (bad) xlat (bad) aad xlat aam (bad) aam fcmovu xlat add add std add add add add add add add add add add add add add add add pop add add lahf add add jmp call out jmp out out out lock out out in out ljmp aam fmul jmp (bad) (bad) (bad) call lret call lret fxch ret lret ret mov int ret int fcmovbe in call ljmp ljmp in in in in in in in in in in in in in in in out mov out out out out out out out out out in in in ljmp loope loopne frstpm(287 (bad) fcmovbe aad aad (bad) aam fcmovu xlat add movsl add lahf add add add out add add add adc add add add jmp jmp call in in lock icebp icebp lock out out in jmp out (bad) in jmp fldlg2 loop jmp fsubr jecxz in in in in in in jmp fcomp aad aam lret ror enter rcl int3 fcmovbe (bad) jecxz enter in in in in in in fwait in in in in in in in in shr out out out out out out out out out out out out out add out out out out out out out in in jmp jmp loop loop fstp fcmovnu fstp xlat (bad) aad aad fidivl inc incb aaa add add add jmp ljmp test ljmp icebp icebp icebp lock out in out in ljmp push jmp in jmp out in jmp in ljmp out loop (bad) (bad) (bad) (bad) rcl add rcr fcom in loop ljmp out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out lock out out out in in jmp jmp jecxz loope loopne fcmovnu fcmovnu fcmovnu xlat fcom aam fnop add add add add add add add and sub add add add out in ljmp call out out out lock icebp icebp lock lock lock lock out out out in out out in out in in out out in out (bad) in lock out pop lock lock out out out out out in in in jmp loope (bad) fcmovnu xlat (bad) (bad) out in in in out into out out out out out add out out out out out out out out out out out out out cmp out out out out out out out out out out out out lock out out out in mov add in in loope (bad) gs (bad) fcomp fcom (bad) fisubl xchg add add add add add add add add add add in jmp jmp jmp ljmp lock icebp icebp icebp icebp icebp icebp icebp icebp sbb lock lock lock out lock lock icebp icebp icebp icebp icebp icebp icebp icebp lock out out in in in ljmp in out in ljmp lock lock lock lock lock lock lock out in in jmp jmp out loop loope loope (bad) (bad) (bad) (bad) (bad) add add add add add add add lcall repnz add push in in into ljmp ljmp out inc lock icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock icebp lock lock icebp lock icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp xchg icebp icebp lock out out in in in in in in out in in out out out lock lock lock lock lock lock lock lock lock out in in jmp call in cmp loopne (bad) (bad) fneni(8087 (bad) add jae add add jmp ljmp ljmp out lock je icebp icebp icebp div icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp xor icebp icebp icebp icebp add icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock lock icebp icebp icebp lock lock icebp lock lock lock lock lock lock aam in in jmp jmp xchg jmp in jecxz jecxz pop loope fsubp loope add add add add push jmp ljmp jmp jmp in in out out out lock icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp xor icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock icebp lock mov repnz out icebp icebp out lock in out in jmp jmp jmp jmp out in loop loop in in add add add mov add sbb add add add ljmp jmp in in out out out lock icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp and icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp fyl2x icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp and icebp icebp icebp icebp icebp icebp jb pop icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock icebp lock icebp lock lock icebp lock out out in out in in in in jmp ljmp out jecxz call add lods add add add mov add add ljmp jmp in in lock icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp addr16 icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp cmp icebp icebp icebp icebp icebp icebp icebp icebp lock add icebp repz repz lock out out out in in jmp jmp jmp call add add pop add addl add add add add add add add add add ljmp ljmp popa lock icebp icebp repnz repnz repnz repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp (bad) icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp mov repnz icebp icebp icebp icebp icebp repnz repnz repz cmc hlt repz hlt hlt hlt hlt repz repz icebp icebp adc out in in in in jmp jmp jmp jmp add add add mov ljmp jmp in in in xchg out icebp icebp icebp repnz repnz repnz repnz repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp cmp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp ja icebp icebp repnz icebp outsb icebp icebp icebp repnz icebp repnz repnz hlt div cmc div cmc cmc cmc hlt hlt repz lock in in in in in out in in out in in add add add add movsl add sbb add add add add sbb jmp out jmp in in in (bad) out out icebp icebp icebp repnz repnz repnz repnz repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp xor repnz repnz repnz repnz mov repnz icebp repz hlt repz hlt repz cmc div div div div div test icebp icebp imul out out in in jmp out out jmp add xor add add add jmp out jmp fucomip in out out out icebp icebp repnz repnz repnz repnz repnz repnz repz repnz aas icebp lock cmp or repz hlt repnz cmc hlt div idiv div clc div div mov stc icebp in in mov jmp out out out add add add add add add add add add add add add add add add call out jmp out out in lock repnz repnz repnz repnz repnz repz repz repnz icebp repnz lock lock icebp lock repnz out repz hlt repz hlt hlt div cmc clc div div div div hlt repz lock in in in jmp out out out add add add addl add add jecxz add out add add add add add add in jmp out out out jmp out out in lock icebp repnz repnz dec repz repz repz repz test repz repz repz icebp icebp icebp lock out lock in out in in out out in lock in icebp lock repnz lock repz hlt div cmc cmc cmc cmc cmc hlt hlt repz icebp lock out in out in in add add add jb add mov add add add add add add add add add in in ljmp jmp ljmp repnz repz repz repz repz hlt hlt hlt hlt hlt hlt hlt xor repz repz repz repnz repnz lock out out out out in out in jmp jmp jmp jmp jmp out in in lock out icebp lock repz icebp lock lock out icebp lock add add cli add add push roll add add add xchg dec add add add add in in ljmp jmp ljmp repnz repz hlt repz hlt repz repz repz repz repz repnz icebp repnz icebp repnz lock lock icebp lock lock lock out out out in out in in out in ljmp ljmp out jmp jmp in in lock out lock out lock out lock lock out repnz lock add add add add add add add add add add add add add add jmp jmp out jmp ljmp repnz repz repz repz repnz repnz lock lock lock out out out in out in in out in jmp in jmp in ljmp jmp call out jmp loop in out loopne loop in loope in call out call out in sbb in in out out out lock add add add push add add add add add add inc add add add add in mov out out in jmp out out dec repnz pop repnz repnz repnz repz repnz icebp repnz lock lock lock in out out in out in jmp jmp in ljmp in out out jecxz in in loope loop in (bad) loopne loop fucom (bad) loope fsub (bad) loope fneni(8087 (bad) loope fucom outsb fsubp loop out jecxz in jmp out in xor out add add mov add adc add sbb fwait add add cmp add add add in in ljmp jmp ljmp enter div lock lock out lock out out out in out out in out out in stc out in out in jmp in jmp in ljmp jmp out jnp call loop jecxz in (bad) loopne loop fucom (bad) loopne fcmovnu (bad) (bad) (bad) fcmovu (bad) xlat fnop (bad) fnop (bad) fnop (bad) (bad) (bad) fstp fcomp (bad) loopne fndisi(8087 (bad) jecxz loopne jecxz out jecxz out ljmp add in das add add add add add xchg add in in ljmp jmp jmp out in out in in in jmp jmp jmp call call jecxz in out loope loop in (bad) loopne jecxz fsub (bad) loopne fcmovu fcmovnu (bad) fcomp fcmovbe fstp (bad) fnop aad xlat aam (bad) rcr aad fidivrl (bad) rcr aam fcom rcr aam (bad) rcr xlat aad fcom fstp fchs fstp loop fsubp loop out in out jmp call add test test add add add mov out in jmp call ljmp ljmp loop loope in fucom fstp xor (bad) fcmovbe fnop aad xlat mov rcl xlat ror (bad) ror aad int ror aam int3 shrl ror lret ror lret aam int3 aam int3 aam int3 ror int3 loope int3 aam int3 aad into (bad) ror (bad) ror xlat rcl xlat rcl fcom rcr (bad) rcll (bad) (bad) (bad) (bad) in loope in jmp out in jmp add sbb rolb addl add add add add add mov add add add add inc add xchg add add add add add lock in mov out call call (bad) fcmovnu fnop aad aad fcom rcl ror xor int3 ror lret enter into enter (bad) int3 mov mov mov (bad) mov leave (bad) iret leave (bad) ror enter ror leave ror lret int3 aad int ror xlat rcl fcom rcr aad fcmovbe aad fcmovbe fstp xlat (bad) fnclex loopne in loope out jmp jmp add add add sub and add add add add xchg add sahf icebp icebp out in cmp push ljmp jecxz loope fstp (bad) fcom iret aam lret cwtl lret enter into enter ret inc (bad) (bad) mov ret ret ret ret lret vshufps xchg lret enter ror int3 aad into xlat rcl fcom rcr (bad) aam xlat (bad) fstp fcomp fcmovnu loope fsub (bad) jecxz (bad) jecxz out push jmp add add in add add and sub add add add add add add add xchg add add outsl add add add add cwtl add add add add hlt repnz in in jmp (bad) out out loope fnop (bad) ror ror (bad) lret (bad) ror mov sarb xchg mov mov lret int3 mov lret enter aam int rcl (bad) rcr xlat aad fnop (bad) (bad) (bad) jecxz (bad) pushf loop insl add add add add or add add sbb add add add insl add add add add add add add repz out out jmp jmp (bad) xlat aad int leave (bad) ror mov sarl ror ret ret int (bad) into leave (bad) ror leave ror lret (bad) ror xlat aam fcmovbe dec (bad) (bad) inc (bad) loop fucom loope add adc xchg add add add add add add and add add outsb add add add add cmc repz out out in ljmp fcmovnbe aam iret int3 ror enter rorb int sbb int3 (bad) ror xlat rcl and rcr (bad) aam (bad) (bad) fnop fstl outsl add add add add popl add add add add add add repz out in jmp mov aas fcmovnu fcmovnu (bad) fcomp fcmovnu (bad) flds add add push add add add fiaddl push add add add add add inc add dec mov sahf pop and add add add add add push add add sbb add add add addl add add sbb add add and scas add add add add add rolb add add xchg jb add cmp add add sub add mov add xor add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jg (bad) (bad) (bad) (bad) (bad) (bad) inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl ljmp (bad) (bad) (bad) call (bad) (bad) (bad) clc add (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) incb add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add pop (bad) (bad) ljmp (bad) (bad) (bad) cld add add (bad) (bad) (bad) (bad) (bad) (bad) push add add (bad) (bad) (bad) (bad) (bad) (bad) ljmp (bad) (bad) (bad) (bad) (bad) (bad) clc add add pop (bad) (bad) (bad) (bad) (bad) jmp add add pop (bad) (bad) (bad) (bad) (bad) incl add add pop (bad) (bad) (bad) (bad) (bad) incb add add pop (bad) (bad) (bad) (bad) (bad) clc add add add (bad) (bad) (bad) (bad) (bad) clc push add add pop (bad) (bad) (bad) (bad) push add add add (bad) (bad) (bad) (bad) jmp add add add (bad) (bad) (bad) (bad) jmp add add xlat pop (bad) (bad) (bad) jmp add add mov stc jmp add add add (bad) (bad) (bad) (bad) jmp add add pop (bad) (bad) (bad) (bad) jmp add add add (bad) jmp (bad) jmp add add add (bad) (bad) (bad) (bad) jmp add add add (bad) (bad) (bad) (bad) jmp add add add (bad) (bad) (bad) jge loopne add add pop (bad) (bad) (bad) (bad) inc add add add (bad) (bad) (bad) (bad) inc add add add (bad) (bad) (bad) (bad) mov add pop (bad) (bad) (bad) (bad) inc add add add (bad) (bad) (bad) (bad) inc add test add (bad) (bad) (bad) pushl add pop (bad) (bad) (bad) (bad) inc add (bad) lcall inc add add add (bad) (bad) (bad) (bad) inc add add add (bad) (bad) ljmp rolb add (bad) (bad) inc add add add (bad) (bad) (bad) (bad) inc add add fiadd out (bad) (bad) inc add add add (bad) (bad) (bad) (bad) inc add add add (bad) (bad) (bad) (bad) inc add add add (bad) (bad) (bad) (bad) inc add add add (bad) (bad) (bad) (bad) inc add add add (bad) (bad) (bad) (bad) inc add add add (bad) (bad) (bad) (bad) inc add add add (bad) (bad) (bad) (bad) inc add add add inc add ss (bad) (bad) inc add add add (bad) (bad) (bad) (bad) inc add add add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) jmp incl add (bad) (bad) (bad) (bad) incl add incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) ljmp add add add (bad) (bad) (bad) (bad) incl add push add (bad) (bad) (bad) (bad) incl add add add (bad) (bad) (bad) (bad) incl add add add (bad) (bad) call incl add (bad) (bad) (bad) (bad) incl add add add incl add add add (bad) (bad) (bad) (bad) incl add (bad) decl add add add (bad) (bad) (bad) incl add add add (bad) (bad) (bad) inc add xor (bad) (bad) (bad) (bad) incl add add add (bad) (bad) (bad) (bad) incl add add add (bad) (bad) (bad) (bad) incb add add add (bad) (bad) (bad) (bad) incb add add add (bad) (bad) (bad) (bad) incb add add add inc (bad) (bad) (bad) aas add add add jg (bad) (bad) (bad) incb add add add (bad) (bad) (bad) (bad) incb add add add (bad) (bad) (bad) (bad) incb add add add (bad) (bad) (bad) (bad) incb lock add (bad) incb add add aas (bad) (bad) (bad) (bad) (bad) incb add add (bad) (bad) (bad) (bad) (bad) (bad) incb add add (bad) (bad) (bad) (bad) (bad) (bad) incl add aas (bad) (bad) pushl add pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add add add add add add and add add adcb add pop add add mov add add sub add add add add repnz add addl add popf add push add add add add lods add jbe add mov ja vfnmadd213pd inc sub add add add add stos add addb add icebp stos add add scas lods stos push mov mov ret ret ror aam (bad) loope loopne loopne loopne lret enter (bad) mov or add add add lods lods stos test mov scas jo sarl loopne loopne loopne loopne loopne loopne (bad) (bad) loopne loopne test lret mov ljmp push add add add popl mov mov data16 mov mul loopne loopne loopne (bad) fild (bad) (bad) (bad) fdivrp (bad) fdivrp loopne loopne ror lret (bad) mov cwtl xchg jnp add sbb add adc add add add add aad roll aam rorl aam shr loopne (bad) fisttp jmp loopne (bad) (bad) (bad) (bad) fdivrp (bad) fdivrp (bad) jbe (bad) fdivrp (bad) fdivrp (bad) fdivrp loopne loopne ror lret cli mov mov add add add add add add add add add inc add ror int fcomp fdivr (bad) (bad) (bad) (bad) (bad) out ljmp (bad) sbb cmp (bad) (bad) (bad) (bad) (bad) fdivrp (bad) (bad) (bad) fdivrp loope loope aam sar mov stos cmpsb lock push push add add add add lods add add lret lret imul loopne jmpw loopne (bad) fnstsw (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) loope loope fnop (bad) (bad) mov mov cli test add add add add lret fmull loope loopne loopne loopne loopne daa loopne jmp loopne jmp loopne jmp loopne jmp loopne jmp loopne jmp loopne jmp loopne jmp loop (bad) (bad) (bad) mov mov pushl add add add lret lret leave mov loope loope test loope clc loope loope loope loope loope loope loope loope loope loope loope loope loopne loopne loopne loopne loop loop loop repnz mov mov ljmp ret jbe add int3 int3 lret loopne jmp loop jmp loop jmp add loop loop loop loop loop loop loop loop loope loope loope loope loope loope loope jecxz jecxz out jecxz mov mov and add add add add add mov int lret (bad) loop jmp jecxz jmp jecxz jmp jecxz jmp mov jecxz jecxz jecxz jecxz jecxz loop loop loop loop loop loop loop stc jmp in (bad) jmp mov (bad) fidivr cmpsl xor add push aam add add add xchg dec add iret iret int in in in in ljmp jmp in jmp in dec enter mov (bad) (bad) (bad) (bad) int3 (bad) fstp (bad) jmp jecxz jmp in pushl call (bad) mov (bad) add add int3 lret les rcl sar in in in in in in in in (bad) mov decl lods (bad) fadd stos (bad) fcmovb stos (bad) fnop (bad) jmp in jmp out lret call decl lods test add add add add test add add add mov add int lds aam (bad) out out out out int3 stos lcall data16 mov cmp insb inc sub xchg test (bad) jle fidivl lret in jmp out (bad) jmp jmp (bad) mov lods cmp rolb add ror leave sbb (bad) (bad) (bad) call out dec xchg jbe scas arpl incl data16 loop (bad) mov mov pusha out out in in in in jmp (bad) mov scas stos bound add rcl int fcomp fdivr jmp jmp jg mov inc call xchg push lcall push jmp aad (bad) jmp aad (bad) (bad) sar out out in jecxz jecxz (bad) lret inc mov lods mov fild add add xlat (bad) sarl fstp (bad) ljmp call stos mov iret xchg push (bad) fsubrs fs out in (bad) in loop (bad) ljmp (bad) fnop sar call in (bad) ljmp inc sarb add add mov add add add add fnop aam loope loope push jmp call mov call popf pop dec mov dec (bad) jmp stos lahf (bad) fcmovne sar fst jmp (bad) (bad) jmp call out (bad) ror dec mov mov scas mov add add add add add add fcom pop jecxz jecxz out out out (bad) in in in (bad) fdivrl jae lahf jg dec scas sbb mov cwtl (bad) (bad) leave (bad) jmp fcos shr cmp jecxz (bad) ljmp (bad) in in jmp fcmovnbe aad ror std (bad) mov pop xchg dec add add fstps push lock lock call lret in mov out ret inc mov (bad) (bad) (bad) ljmp (bad) clc ljmp in in in (bad) out out in jmp fidiv (bad) mov add mov add add fcmovu xlat jl call icebp push lock out in jmp in in in push lock lock ljmp (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out push lock jmp loopne (bad) (bad) (bad) sarl add cmc add add add fcmovu sbb ljmp push icebp icebp push icebp icebp push icebp icebp push icebp icebp push icebp icebp push icebp icebp push icebp icebp push lock push lock lock lock lock icebp out (bad) call jecxz dec enter add adc add add or add add add add add push add add fcmovnu xlat popf pop in in push icebp icebp lcall icebp push icebp icebp push icebp icebp push icebp icebp push icebp icebp push add push icebp icebp push icebp icebp push icebp icebp push icebp icebp push icebp lock icebp out (bad) out in in (bad) ljmp mov xchg add dec add add add fcmovnu fsubrs repnz repnz repnz repnz icebp icebp sub icebp sbb icebp icebp push icebp icebp push icebp icebp push repnz icebp icebp lret repz div idiv jl hlt (bad) out out out dec int3 lret inc add fcmovnu fdivrs repnz repnz repnz repnz repnz repnz repnz repz repz hlt hlt push repnz icebp out push hlt repz stc clc clc (bad) stc stc stc jmp loopne rcl iret int3 add add add add add add add add add add add add add add add add add fcmovnu int icebp icebp push repz repz repz hlt hlt push hlt hlt push cmc cmc jae hlt hlt push cs repz es (bad) jmp out out in in in jmp hlt repz in jmp lock aad add add adc add add add sahf add (bad) (bad) repnz repz repz repz repnz push lock (bad) jmp out out loopne loope (bad) fstp xlat (bad) (bad) sar fnop (bad) (bad) (bad) (bad) in loopne loope fsubp fcoms add add add pop add add mov add add add add push or add in loope out in ljmp ror call lret lret inc mov mov dec mov push (bad) ror call rcl lock fcom outsl (bad) aad or add add adc add lock iret test loope les inc mov mov fcmove (bad) (bad) mov mov int3 leave (bad) (bad) int movl into lret add add add add add add pop add jmp ljmp outsb leave (bad) (bad) and hlt add test add testb add add add add add add (bad) (bad) (bad) (bad) (bad) push (bad) (bad) incl (bad) jmp add add aas cld add pop cld add jg add (bad) cld add (bad) cld add call add (bad) cld add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add ljmp add clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add adc add (bad) clc add (bad) clc add (bad) clc add incl adc push jae jns imul outsb gs add add mov add sub add inc add incl add add push add arpl add push add mov add incl sub add add add je outsl outsb xor push add add je outsl outsb xor add mov add incl add add add jae jns add push add gs insl imul xor add or dec or adc add incl clc sub add jae insb jae popa bound jb bound gs gs sbb ret add add dec mov add add add add add add add add add add add add add sbb add jge add add js push mov ds in (bad) jae imul aam mov nop vunpckhpd sub mov cwtl adc loop jge int lock movl dec movsb xchg jp stos sbb or jmp lahf scas mov popf cmp sbb xchg aas jns adc test out cmp clc sub ss dec out mov jns loope daa pop fisubrl int3 (bad) stos xor das jns and xorl cs mov xchg stc jns mov add push jp sub mov inc lock icebp pop scas es adc dec jg inc xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp and jl adc addl ret inc push xchg jb (bad) cmp gs inc fidivrl (bad) jo aaa iret xchg es fld jae sti push sub xor inc mov push adc inc xor or sbb (bad) xchg and mov xchg mov lds (bad) (bad) iret mov das jnp rolb shrl sub faddp aas aad mov mov jns push mov mov pushf loop pop mov aam imul and lods xchg dec dec insl icebp test sbb adc xchg jg cmpsb xchg mov inc cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl scas scas insl jg cmp cmp into pop lods fs cwtl repz sub fistpl mov mov ret pop dec jecxz dec xor jo movsl xchg outsl jbe and adc fbld push lods mov loopne jg ja add add cwtl out pop xchg movsb jno nop pop mov (bad) mov sub mov add test cld add jns addr16 (bad) fucomi aas xchg jge mov jge and insl je inc fwait xchg into out data16 (bad) in adc xchg stc insb sbb or lret mov xchg jp fdivl cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl cmp or push jmp rorl sahf push mov add xchg lds sahf push cltd xchg add (bad) xchg cmp leave xchg cs and sbb (bad) mov adc adc repz enter ret (bad) xor popaw xchg cwtl mov cwtl dec fisubl outsb jbe adc imull jge out les push mov adc insl cmp lods push xchg (bad) xor pusha loop xor and pop cmpsl test ljmp xchg lods pop mov dec xor sub shrl dec dec mov or repnz jge mov and clc enter ret push leave fldcw cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl cmp mov fidivrl ljmp sub outsb push dec add xchg add stc das sti jge pop xchg jae add cmp mov adc ret dec fstps std lea mov lret inc add (bad) inc jp or jne cmc add je adc cs int3 push xchg xchg pop mov lret out xor test pushf sub mov or add add sahf and subl (bad) mov in out test addr16 add loopne in cld aaa inc in dec adc mov push pop jmp popa scas sub jle xchg loopne repz scas mov push cmc add adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call add faddp js out call ss pop cmp jmp xchg stc inc decb lea out mov xlat sbb sarb add xor push lea ds or cmp arpl mov (bad) xor adc gs push or test inc adc scas sub (bad) bound dec jmp jno mov cmpsb mov aad sbb pop out loope sti inc jp mov pop iret and mov fdivs dec repz pop sub in in nop mov (bad) adc leave pop adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) data16 pop lds test in sub add int cmpl lretw in or sbb pop es cs xor jmp jo sub jns loop lds (bad) mov mov mov in inc jg lods pop test in pop inc or cmp jl jl and jg inc mov pop mov push pop daa cmp or mov scas or inc fnstenv mov sahf mov std iret pop sub push addr16 leave cwtl test push clc inc cmp add adc jnp inc adc jge and (bad) adc imulb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp shrl mul or mov push xchg push out xor cmp pop push adc xchg xor sbb push popa movsb sub insl or push movsb jno push lcall stos xorl mov popf cli push add xchg imul push aam inc dec mov add xchg pushf fldt push stc enter rcr mov stos cmc (bad) int3 cmp xor jnp or fildl scas dec jg sarb ret sub roll lahf bound leave dec imul rcrl sti fisttpll scas addr16 sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp ja jne not (bad) cwtl lods test lcall insb dec sarl loopne pop cli cmpsl cmc int3 cmp sub push inc fldcw ret (bad) jae inc lret xor sbb out pop cmpsb xor ret jbe (bad) fwait test push sbb fistpll or xor test daa int outsl into push push cmp jecxz pop sahf (bad) daa fsubrl mov inc imul je dec xchg addr16 add cmp aaa pop sbb orl enter xchg fwait pushf sbb (bad) out lods mov push sbb fdivp pushf mov pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push xor dec lock std stc inc push ror adc jb lahf pop fs ret lock jp mov adc scas push mov push mov test lcall adc or mov jne xor xchg adc in iret dec jnp sbb jge cmp cmp push ljmp jl pop daa sbb sbb and xor sti pop mov cmp adc jns,pt push jge lret mov sqrtps dec pand aad shrb cs sbb andl xchg adc or cmp in sahf les (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov (bad) (bad) (bad) out sbb pusha lcall lods lahf lret enter fwait (bad) ljmp push cmp shll movsb dec mov aaa lahf dec pop sti mov test outsb xor test dec sbb rcll mov test add int3 jbe stos jo push push out jno enter pop inc insb cmp ret mov adc push popf cli fistpll dec popa jb in mov and ds sahf aad xchg pop gs dec decb sbb jo test inc fisub inc (bad) icebp cli ret (bad) clc imul mov lds (bad) in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call lea call popa sbb push or adc rcll pop inc int cltd ret push iret out mov fstl lock push sbb insb int jg inc cmpsl jno push mov outsb js out add push rcr (bad) push ss push std xchg mov lods jge adc sbb inc mov sub sub fcoms (bad) jo ljmp inc pop xorl mov int inc mov ss push xchg push mov adc mov xchg sbb or lcall jne imul repz lods cmp and hlt imul add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov dec orl jle push mov imul inc je push outsb fcomp insl mov cmpsl (bad) push xor aad leave xchg push or outsl xchg and cld stos jp out test in pop aas sub push scas dec scas mov dec jb sti xchg push gs popa mov push ljmp dec jno lahf sbb mov xor mov jg jne rol dec pop rclb ss pop (bad) sbb dec stc or dec ja mov mov or data16 jns xor fild push push dec rorb ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov pop repnz out mov js cmc icebp mov mov test inc sbb xchg ljmp jp cli and jmp and cmc jle insl mov mov xchg (bad) or xor jp andl mov cmp xchg inc and sub cmc repnz push push add jle pop les pop imul mov in mov fdivrs popf jns (bad) jo addb imul mov or in cmp inc sub pop sbb loope sbb pop pop movsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call lock addr16 inc adc dec (bad) (bad) dec fmul push adc xchg les mov arpl xor ror repz lahf xor loop,pt dec pop jbe xchg fbstp and or lods push in push sub mov push cs ret dec mov mov cli js sbb mov ret lahf or mov lods pushl cmpsl or cmpsb sub int3 mov mov jecxz push or mov std das sti outsb stos add push pushf mov stos lret je aas mov iret mov cltd push and cmp fs mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall test or test pop push les xor mov mov jge inc (bad) into mov xor dec fldenv aad push mov ret lds mov mov dec sub mov fcoms ds aaa pop incb mov or mov dec xor ja into sub push cwtl loop push or and clc jae inc sub xor mov outsb pop or dec aas xor test test or add call scas dec rolb sbb xor fcoml dec pusha sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc inc push inc lods pop cmp cmp mov dec and cs or insb cmp push addr16 xlat mov loopne xchg es mov incb mov adc inc (bad) iret sahf fidivrl pop mov pushf xor push sbb stos std ljmp mov mov dec xchg pushl repnz pop or mov mov xor mov and add out mov cmp mov and fsubl out das xor pop pop push pop pop add insb inc push repz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov ss jmp push lret xor mov dec mov mov loope xchg imul lret inc (bad) jmp out add xor movsb push lahf cmp test std inc or fisubl jb sub sub rclb dec jp mov cmc pop jns push jp lret das cld pushf xchg addr16 push loope int3 loopne xor (bad) xor adc addl ret adc fnsave cmp or add daa mov pop fadd test outsb mov pop or and or int or test sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec icebp mov cli and in (bad) and fwait cmc mov stc mov fstl jne jno inc out push pop loope xchg mov sub lcall fisubl inc jmp pop ss lea (bad) jl sbb movsl test ret and iret outsb and cmp arpl (bad) mov into popf fcmovnbe (bad) jns cmp aam push gs mov push (bad) and in into mov div jle xchg aad inc push mov pop dec jo lret sbb add (bad) sbb jns adc mov in imul cli xor add out jnp push jp cmp popa out imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp in lods and mov adc lods mov scas jb movsb lea cmp ljmp outsl hlt mov nop xchg xor fdivs sub jle imull add add cmp xor jnp xor or gs push xor jmp (bad) pop loop rolb stc dec cmp jo repz enter cltd pop xchg lea lahf sub (bad) fnstcw ficom cmpsb mov dec sbb xorl idivb dec xor bound iret push rolb sbb mov gs dec or cmpsb jg pop lods std pop icebp std (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl cmp push cmp movsl sub pop mov aam jge mov jo js mov test addr16 loopne xor pop push mov pop ja movsl in nop test inc xchg outsl xor sahf in adc inc mov movsl inc adc stos cli ljmp jmp aad mov jge dec mov call mov es aas sbb dec sub rolb lret mov aas in cmpsb int push dec stos mov cs dec cli movsl add outsl movsb push xor mov sub popf cmp js imul push push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl (bad) ljmp mov shlb xchg out popa movb mov and sarl mov mov xchg cmpsl lods mov inc sbb jle xchg in mov xor jbe cmp shll pop fisttp ret lret std or xchg adc dec (bad) nop push and test outsb into stos loope scas sahf sub mov mov imul out ds push (bad) or jl or aaa fcmovbe lods test adc push ret test out ss fs out push xchg lds sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out loope es arpl es cmp les out jp lods xchg dec fwait sbb rcll test data16 lods sub mov mov imulb sbbl ja shrb jnp lret adc or repnz mov pushf cmp daa stos shlb mov xchg in popf data16 notb fs push jp mov mov add xchg pop mov add fidivrl out jo in lcall xor imul std imul stc iret hlt cmp sub mov pop pop rcll loop jae jle pop dec mov jo (bad) das (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp inc call jo lret pop xchg push pop mov pop inc inc cltd push (bad) (bad) pop mov jg push subl es (bad) push push or mov (bad) or mov inc popa popf scas xchg imul in pop push sbb pop dec pop notb (bad) xchg xor sarl cmp sbb jge (bad) rclb jb scas inc in mov jae js test pop inc or push icebp xor sbb xchg jno mov jl push pop test pop or iret insl pusha pushf pop enter loopne cmp lahf inc and xor fisubl push xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl xchg add rcll push sub movsl add mov adc sar lds test inc add sub sub pop mov and dec mov cwtl je (bad) jo pop xor add out aam sti jae pop out in daa add outsb pop mov xlat pop (bad) push test aam (bad) jmp jecxz loop insl dec jnp stc sub (bad) pop outsb mov int and xor mov jl xor adc ja add mov xchg add jle int3 cmp negb push and call dec pop mov (bad) test arpl (bad) xor pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl inc (bad) mov icebp cmp mov fiaddl imul cli imul xor add add cli cmp rolb push inc lea or mov mov cli loop dec dec fs push sbb testl xchg jne fisttp mov cmpsl dec fstpl xlat dec lock lea rcrl cmp (bad) jl shrb jle imul dec mov mov pop mov push test mov fisttpl es xchg or dec std push das insb lret fldt mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fimull daa xchg sahf les faddl cli mov add stos mov or data16 or shlb mov roll add push jp sub or fildl push xchg mov mov test pop cmpsl mov inc cmp lods ret call jae cmp (bad) mov nop and mov faddl cmpsb push popa iret imul es push dec test out test cmp das add adc scas mov ds dec jne call stos mov iret clc dec call popf fisubrl clc aaa cmp jne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl ja jno movl mov xchg mov test or add xchg scas sbb (bad) push mov aaa cmp daa test loope add lods sbb loope inc sti dec mov lea lret inc fadd and push mov mov xchg push inc xor sub and popl cli stos and inc jmp lcall mov in jp movsb cmp or imul fld jne cltd push mov ffree sbb (bad) jo sub and cltd daa hlt in aad sbb and dec insl mov loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov daa inc sbb insl lea xchg jl lea insl inc (bad) fldenv or rcrb (bad) dec push dec out add adc xor cs repz rep cli fs paddq bound and sbb sub mov out cmpsl sbb in (bad) mov push mov cmp es push jb stos imul sbb jbe (bad) xor push data16 inc gs sbb scas push ja add fisub aad (bad) fdivs ret loopne stos leave (bad) sub add test push xchg call mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl shlb loope adc adc mov and dec int fwait jge in sbb mov pop inc xor imul mov (bad) daa sub and jl dec out mov scas xchg (bad) negl pop sub inc jae mov push inc mov and (bad) sub xchg push mov xor lcall in mov ljmp xor pop in inc mov aad and (bad) jae and pushf imull mov test sbb in std out in xchg addr16 inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov inc cmp fbld (bad) jle movsb in jl lret ret (bad) cli icebp jl rcll lahf push lea inc xor (bad) sbb sbb out jb sub mov mov pop add jne ret lds pop arpl dec xchg es in rorl add cmp push jl shlb fistp (bad) inc mov sub mov cwtl inc push inc orl loopne inc nop push (bad) adc bound lock xor insl popa outsl mov cmpsl ficompl mov ret fwait sub mov push mov pop pop rorb out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl fstl xchg sub loop insl sub mov mov cli inc add dec cmp sub xor jns sarl dec push pushf xchg mov cmpl fisttpl call inc xchg je push add cmpb fs (bad) out (bad) fst (bad) negb mov xor pop mov cmp xchg mov xchg aad add setbe mov or mov loopne dec cmp inc adc test cld jnp mov in and subb lods movsl mov jmp jge xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl imul or pop ret jmp dec pop adcl test dec pop ljmp xor push or aam (bad) fcmovnu sbb lock push xchg clc punpckhdq int3 mov icebp jbe xlat repnz leave pusha pop btc inc adc xor mov cs sub xchg xchg cmp loope or xchg mov sbb mov and jne or ja aad sub popa pop push into enter jb jb sti jbe pop jb adc mov lods cmp insb sbbl push fcoms fldenv xchg jns aas jae sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp out cmp clc mov fwait or pop (bad) push mov enter ja mov adc enter aam shrb mulb cmc jbe mov or cli mov inc or out xor push dec dec push sub cmp mov shrb popa push xor xor inc mov mov mov push lea mov sbb pop lods clc dec mov sbb sahf mov mov mov xchg stc add aaa dec xchg (bad) (bad) clc mov pushf dec add adc jns or std shll lahf pusha mov ja mov lods jp cmpsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl ss fdivrs lods push sub inc movsb sub adc jge aam xor leave and lret push lcall incb test inc fwait mov and je nop adc nop adc lcall adc dec mov add pop (bad) xchg cmp std push lahf popa xchg movsb stos or jns sti rolb xchg push mov test xchg test cmp sbb into sbb stc adc inc cld mov fsts push cltd cmp les lods sub inc fisttpl lcall pop mov js and sub adc in flds scas or dec xchg xor incb jbe lock imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jns inc lock imul test (bad) jl pop jp cmpb cwtl (bad) gs or movsb and push test (bad) sub add xchg jae mov push addr16 hlt in add cmp push jae mov fldcw scas insl call or daa lcall push aas and pop dec xor cltd or fdivl popa in sbb fwait dec lods xchg pushf icebp jb add sti ss lret out pop jbe stos lret (bad) lret adc test int push sub mov jle outsl mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl int3 add addl fisubl xchg ret mov iret or rolb jne jnp mov sbb mov push adc into iret in scas addl mov lret ja out data16 into popf into data16 lret movsb and jmp out push adc divl pop rol xchg or jns das shl and insl push lea xchg icebp loope mov mov repnz mov dec fwait cmp adc js int jns lret jae jnp (bad) pop or dec mov mov dec je out xlat enter mov hlt xorb adc add enter jns jne ret push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp jecxz adc cmp sub and pop rorb lret mov mov add mov push adc cmp add andl adc jp sbb jbe fdivl out es out adc and enter aam push rorb ret mov mov ret outsl stos xorb mov repnz jg xorl in outsb cmp push enter dec dec sbb cmp shll lock push or dec sbb jbe movsb mov fcomps lret inc or jno out insl mov bound mov xchg and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call (bad) fld xchg mov dec (bad) aaa lea pop pop inc in movb test scas gs pop int3 outsb push adc push arpl sub sub fldl jg cmpsb sub sub sub pop rcl push adc (bad) lret popf cmp sub add adc cmp pop jo aam jmp push sub fs push aam dec dec lods mov push jae aas xor loope sbb dec push mull (bad) dec scas les clc negl andl sbb xchg sub pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov ljmp add imul dec mov bound push add add cltd addl jle and jnp xor (bad) push lods mov xor sbb mov subl jo dec outsl cmp adc pop mov add xor xor mov ret (bad) jb adc idivl daa stos inc push jnp fadd stc cmp inc mov fldt rorb jmp hlt push clc sbb lock inc test sub cmp (bad) sub ficomp test pop fisubr sbb das (bad) popf dec dec mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl rcrb fwait push stos mov lret flds sbb popa jne fild jmp nop push add out in mov inc xchg or aad mov push pop dec je dec fstl mov sub push add push pop roll sub andl xchg pop jb divl sub cmp loopne dec (bad) push repz jne push in (bad) das ds jns cli add js fnstenv enter repnz push arpl or xor push leave jnp jae sbb pop cltd sahf andb or jae and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti jns repz lods lds pop sbb inc push repnz dec idivb lea push or call dec (bad) mov jecxz adc sub jns dec scas dec xlat ds loop jp (bad) clc dec mov roll (bad) jbe and outsb pop call xor xlat in inc or pshufw and jecxz push pusha mov mov jmp in adc nop ror pop sub in add sbb pop fsubrs and pop movsl loop imul jae in imul mov jbe (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call decl mov (bad) xor (bad) in mov ret mov ljmp es sbb push lret sbb add movsl call mov into pushf cmp enter insl mov sti (bad) in push stc out lds dec jp das xchg inc cwtl lret and cmp push jns rorl xchg hlt add fsts iret cmpsb xor and pop xchg cmc loope jne out test and (bad) (bad) (bad) fucomp inc xchg and jns xchg pop out xor xor out push fucomi ja lret push mov sbb repz loop push push lahf (bad) mov mov xchg jle sub ss inc (bad) cmc sub add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push mov orl xchg and and out pop (bad) mov inc sub imul xchg movsl ficompl dec mov cli lods jno pop pop adc add cmp in push imul jbe fs pop lock aas mov addr16 fs and stos scas sbb mov xchg push out fmuls cmp cmp inc xor and xor jmp and nop mov mov pop sbb ds mov xchg loope pop adc mov pop pop loopne adc pop push xor xor imul mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sbb rolb lret in arpl mov xchg pusha jne es cmpsb cmpsb lods pop outsb push stos out sub or sahf adc aad jo mov sbb sbbb mov leave cmpsb int3 inc lods xchg or cmp cmp mov adc scas xor mov xchg dec insb mov movsl mov cmc mov add jno jae (bad) (bad) dec xchg adc push testl jo fdiv in icebp inc inc iret in cmpsb add in push (bad) aam push cmp dec outsb push pushf sbb inc and pushf adc mov pop repz leave std xchg xchg test xchg jl dec xchg push push incb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov xchg sbb inc and sub and inc pop mov sub sbb mov mov sub call xor ret cld inc jmp sti dec xlat xor pcmpeqb cmp jb cmp mov rclb aad lcall sti not lahf pusha jno add outsl pop mov arpl (bad) mov lods xor jns aas xor sbb add mov push nop pop sbb iret out push hlt xchg xor pop mov stos cmpsb test dec mov nop ss inc mov test lahf and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call in mov aaa lret icebp aas mov data16 movsb imulb jbe lods scas repz sub jle,pn lahf inc (bad) movsl cld xor mov mov ds call mov cmp int pop jae jl inc xchg push aam scas stos lods or roll test nop das xchg add arpl shrb (bad) repz and sub and out dec scas sbb fwait jecxz fsts pop jp in stos ja mov cmp inc hlt mov xlat loop popa std push mov and ret mov inc adc mov adc iret pop xchg nop out adc (bad) int jge add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov and sub push xchg sub jg loopne dec jmp mov or dec hlt ret ret inc das aas (bad) xor lds fimul out xchg push sub pop ljmp pusha or push in test cmpsb test lods sti into data16 insb cmp aam test add mov dec in aas and repnz lret mov pop mov incb fwait scas jle data16 mov loop shlb mov push test cmp pop mov imull imul cmp adc faddp outsl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xchg aas outsl push cwtl inc cmp add pop jbe inc dec cmp pop js das jl add adc dec lret sahf sbb out mov xchg mov and sub sbb lret out jge sbb ret sbb sbb cmpsl addr16 rorb inc cmp xchg dec ja pop push lcall sarl jge jg mov lock cmpsl or mov outsl sahf in enter jg aam mov out mov insb mov sbb lahf add sti push gs pop or cld scas jl lods mov pushf dec jecxz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp and inc mov sbb frstor dec mov xor nop (bad) (bad) ljmp sbb rclb jnp sub push aaa xchg xchg (bad) jns inc daa inc add dec xchg push enter sub push push daa fwait outsb (bad) aas imul cmpsl imul push cwtl adc cli xchg sub lock jg,pn inc adc mov sub xchg in (bad) stos loop leave jl xor lods jg sub ficoml inc test pop scas pop and jno jge or stos push int rcrl aas mov cmpl add jge sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall add clc ret mov mov mov fdecstp ficompl insb adc lahf mov loopne add in xchg lcall mov icebp popf mov xchg imul jge (bad) jb jecxz push (bad) dec mov or inc pusha and xlat inc outsb (bad) mov sub dec (bad) xchg jae inc scas not rcr add adc push pop xchg cmpsb idiv cld outsl mov mov dec mov adc pop dec add nop scas sti push sahf shll jp cmp push jp xor loope icebp movsb mov outsl inc (bad) adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl ficompl jne xchg repnz call mov push es ss fldt movsb loopne,pn repz inc inc push repz pop lods popa xchg cld sub mov and mov jmp (bad) lahf iret dec ficoml jne addb (bad) xor or and nop mov add sub loop and pusha cmp jge push mov dec div hlt sti and fincstp pop aaa test addb jbe jg inc mov aaa add shlb leave enter mov push loopne (bad) jmp aam das daa xchg cmc jbe (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) xchg insl insl in (bad) movsl lods add push les insl roll or dec jecxz dec dec pop adc movsl enter mov lods and imul imul test pop int3 cmp test aad jp outsl and ds out vmread or lahf int3 sbb xchg test add imul jecxz cltd xor jg in cmp jmp repnz loope (bad) dec push cmp add gs enter mov push xchg loopne test inc leave pop xor sbb je sarb adc fstpt xchg out and mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc or xchg movsb gs cld xchg push test sub call gs loop fldt dec sbb loop popa fldenv sbb or ret clc push stos push cwtl test push xor out jo lahf in xor dec cltd repnz hlt std repz test out and jae mov loopne ret popa add xor ds mov push push mov lods mov aad test mov cmp jo (bad) bound jg sub sub dec pop ret dec ret rclb cmp fldl jb das in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp int (bad) cmp jge sub xchg add test (bad) jnp sbb das or sub stos fdivrl dec outsb dec jecxz inc out push jmp add mov cs sbb mov jns xor xor or and mov mov iret outsl (bad) push outsb inc push stc popf cmp ljmp adc cli sbb sarb pop inc push les sbb xlat mov mov bound inc sub push es pop xchg cmp jmp movsb cld xchg mov xchg mov inc mov aad repnz cld in cmpsl jns or dec pushf cltd mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov dec rcr (bad) fsubrl inc aas xor insb mov jmp fsts fdivl gs and (bad) xchg xchg rorl sbb loope xor outsl and inc cld aaa lret std scas lock fchs stc mov add fs mov ja lods bound je and imul or xchg test out dec in sbb icebp jbe or jb or xor mov out xlat (bad) xor enter andb stc lret out out add dec mov ljmp test fiadd int addr16 fnstsw cwtl pop je and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall and pushf push popf ljmp mov push dec or push mov outsb push inc lret jp adc rorb imul mov mov cmp sub fcmovnbe pop mov ret mov cmpsl je mov lret repz aaa inc cmc sub inc out jge xor sbbb mov aas mov in arpl and push inc imulb cmpsl je and (bad) iret out popf jo jl cmp push add scas jne jo xorl sub push ret mov and xor add subl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp cmc jb ja xchg xor int sub mov mov imull ret outsl std (bad) jmp cmp enter cmpsl outsb or inc push sub push pop sarl cs popa repz out mov mov aad xor nop mov mov pop mov xchg inc or fcmovbe mov js lods push scas inc pop popa jo push dec imul das and or int3 sub add and outsb into sub jo push cmpsb or arpl or xchg ds mov push out std dec dec out jmp dec (bad) xrelease pushf jo loopne aam sub loope mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl leave mov adc jne rcl lods and add fidivrl push (bad) sub sbb jp,pn add std mov sub jne orb cmpsl add repnz jp jns cmp ljmp cs loop movsb xor sub shll arpl and xor das icebp rclb cmp pop mov sub push mov mov dec cmp sahf std int mov divb fild cs ja jl xchg imul test xor dec pushw mov sahf jb daa (bad) scas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl xchg mov jge cmp push rorl pop arpl popa mov jg dec pop xor daa jl pushf and xchg in sbb test xchg imul mov sbb stos jl outsl and and dec out daa xchg push pusha scas push fst xor adc out sbb pop insb xchg ja dec stos mov mov mov xchg mov or sahf mov and out loopne sbb jmp cmp sbb or dec xor movsl test mov sub (bad) jmp pop lock and sub jo jle push fisttpl lret cmc (bad) xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call js rorl dec sbb daa jae insl push (bad) rorl mov pop mov sar push xchg cmp fs jno add mov aaa clc jg cld outsb inc dec mov imul es mov jo stos sbb push mov jb (bad) test cli adc icebp mov mov mov jle or mov sub (bad) add shll loopne or mov pushf out cmp std rolb cmp imul pop sbb outsl mov cmpsb mov into lea enter add ffreep imul add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp inc adc roll mov sub sbb or in mov or fs (bad) aas mov adc shr (bad) xlat adcb int pusha xchg cmp add aam mov es and jp jge and call int3 (bad) or push bound (bad) pop repz sub outsb outsl mov les shl fst xchg cmp mov and into mov fidiv xchg movsb lahf adc or aam sbb push paddusw adc (bad) dec call les fnstcw arpl push ret popa lret push add or aam sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp stos pop int3 pop rcll or (bad) dec mov xchg in (bad) and (bad) in jae gs mov xchg es xchg js test je inc std (bad) jb rorl push jb mov dec and mov sar scas nop and push (bad) and loop loopne or scas push cmp lret cwtl cmpsl pop xchg xchg lret leave in mov cmp ret cltd cltd xor or pop scas mov or pop jge inc mov cli push bnd sbb jg sbb sub xchg and gs xchg mov pop xor push into (bad) ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc jg cmpsl pushl clc pop insb outsb lock push rcrl pop outsb daa mov lods scas and jo fmuls pop xchg mov dec lods out add mov inc fldt push add jge cmpsb push cmp xchg mov lret pusha xchg add stos pop hlt mov mov adc and jae cmpsl neg rcrb jnp xor jbe xchg jnp test pop aam outsb clc loope jmp shr ret lret scas popf xchg aaa stos stos mov std add sbb lock pop (bad) hlt sarb fimull sub mov jmp orl xchg jne adc mov fmul lea (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov pushf mov nop arpl ret xchg ss pop and andps mov mov call bound mov sbb stos roll mov out jno cld add lret outsl std in in pop sub (bad) out ja,pn out mov jmp xor add (bad) rcrl test std dec (bad) jmp outsb inc add in jnp out xor add sbb mov inc or fwait sbb jmp fyl2xp1 add repnz xor or fs std stos jno jno leave es and addl (bad) adc mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call je in jns pushf repnz aad imul out adc rcrl and shrl mov mov dec sub adc pop push or test jno loop xchg outsb (bad) mov xchg leave xchg ljmp or ficoml test scas or mov cmp adc lods dec jge adc (bad) sub lods enter push adc dec fwait mov out sti (bad) jle pop ss xchg lods test (bad) repz scas add std inc call (bad) dec cwtl mov test pop xchg dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl xor pushf mov xlat pusha mov or mov scas rcl jne push out adc (bad) mov mov stos arpl jle jne mov loope or cld stos sbb loope mov inc pop popf orb xchg adc mov or lea frstor lcall (bad) xor mov vmwrite (bad) (bad) out add xlat les inc ds inc int adc insl addr16 mov ja ret stc fiadd add fstpl push mov pop fisubrl (bad) xlat pop sarb stos jp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov je push nop ja bound or xor mov je in cltd movsl stos lcall lods test add inc adc (bad) dec inc bound (bad) aaa and pop shll cmp es fdiv in inc sub mov movl adc or fbld pop inc (bad) jbe gs xlat test das push pusha cli mov cmp out lret cltd lock (bad) loop inc jl and cmp data16 inc enter in imul and fdivl inc push popf xchg imul pop testl dec jmp pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp icebp jbe fisubr mov adc popa xchg jno incb stc jbe fildll add cmc jmp jge inc ja scas xchg rcl or hlt adc sti jle push int pop or mov sarl add je ljmp or popa add mov int3 daa cmp ds pop ss jmp xchg cmp pop int mov dec lea xchg lea xchg push pusha inc xor jnp push ss fwait cmp adc pusha cwtl leave dec call cmp and pop dec fwait scas sbb xlat insb push push xor mov dec add jg push std xor shll (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl xor (bad) and xor jnp cltd inc push aaa je push pop dec vmread ss inc fsubrl es xchg dec mov daa xchg int jb stos movsb imull sbb ja lret jecxz xchg mov rclb xor and frstor popf (bad) sub xor jns movsl or or mov rorb icebp jl push push cmp cli sub dec sbb pop fsts mov inc stos lods outsl cmp dec push das lret sbb insl int mov mov addr16 push andb out jne mov mov jae mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl sub xor mov pusha dec (bad) test cmpsb repnz lods mov push ds or push into ret xor scas sarb xrelease push (bad) adc rcl sbb cmpsl addr16 sbb dec inc repnz pop dec sbb mov in xor inc insl sbbb push je gs data16 cmp test aad cmp push adc jle imul aam sbb (bad) mov rcll xor jns xor and scas push mov lcall pop mov sbb pop and in adc int fs loopne jl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) aas xor (bad) jbe outsl and sub addr16 pop fist mov xchg lret push loope imul and popf (bad) xchg fildl jmp das loope jns add cmp jo jns in dec adc cmpsb push aam aad ss push js inc sub sbb scas pop scas adc pop mov int3 movsl out adc movsl and (bad) pop cmp push push mov mov adc addr16 push dec cmp mov into dec aas es data16 popa inc lds mov pop inc dec mov add fwait pop (bad) jge inc ja int3 cli jns mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov notl clc push push xor rolb pusha call dec inc jbe fistpll jo imul pop (bad) je pop lea or mov outsb jecxz iret insl pop jne ds fst fbld sarl out mov jns sbb aad or testl test sbb cmp mov jb xor jp cmp dec popf jl jmp cmp popa repz idivl dec sar sub aaa out pop sti pop (bad) jg lock hlt and sbb lret pop (bad) cmp ja and jp mov jg icebp inc in push fwait inc mov outsl xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall scas in arpl xor push aas scas lds xchg es cltd stos rorb mov fimul (bad) push data16 pop into popf fnstcw fincstp and (bad) out cmpsl adc out inc loop push loope add adc ret pop setp ret ss mov or or jecxz cmpsl jae adc and inc test or inc repz jae push adc or mov mov subb (bad) lods lret add in mov mov or aaa push enter jnp xor clc mov jl jnp aaa mov cmp dec sti mov adc pop mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push ds sti cmp push mov ret orl (bad) mov out xor inc jo test mov sbb ror add or jle pusha aaa mov mov dec and cmp ret frstor imul addr16 xlat jns push mov pop mov scas xchg mov (bad) add dec jl sbb pop adc xchg fadd loope sbb dec jns jecxz ja adc xor cs lds jecxz in cmovg sbb movsb mov (bad) push (bad) imulb shlb sbb in in fmuls push jbe in and sbb dec mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) aas dec cs les idivl mov adc and sbb xor xchg cld pop lods pop add or repnz insb in sbb iret and mov aaa aam daa movsl rolb push adc mov ss lods cmp nop movsb push das in in mov and add out mov sub jg mov sbb adc jns imul push mov shlb lea xor ss sbb cltd push and sbb out insl mov jbe cs cmp cmp pusha in out decl xchg in push jne out aas sub jae (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp decb cmp bound and sbb cmp mov addr16 stos and out (bad) dec adc push (bad) mov jg call push pop (bad) pop dec cmpsb addr16 (bad) mov adc lcall or and popf arpl and and mov pop inc adc cs fstpt jle repz mov mov mov inc xor xor hlt sbb push xlat inc mov mov or dec jb out repz jecxz adc mov and cmp aaa or push adc xchg (bad) ds cmp lds mov dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jns and mov jmp and js (bad) mov cmpsb mov mov inc nop dec and xchg shl call inc cltd jmp outsb inc out imul cld popf adc shrl add pop js mov (bad) and fildll lret mov loopne icebp jmp je dec mov dec test pop inc inc sti loope cmc sub cmp stc mov call out aaa cmp jbe mov pop nop dec sahf pop daa xchg cmp mov (bad) ficoml push loopne add jp jae jns out cmp iret imul (bad) insl jnp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl cmp and jne insb mov lcall jp (bad) stc push lds xchg mov icebp add pop (bad) cmpsl add sbb mov imul add pop xor xor repnz rcll or es out shrb rorl pushf lods insb int sbb and aad mov mov mov push fstpt xor in fdivs mov inc mov in mov mov inc insl cmp sub jecxz das and inc pop pushl repz jns jae shll dec loop xor add cwtl rclb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jge cvtps2pi jge cmp push movb outsb hlt dec pop xchg movsl jne inc inc push loope or pop jle xlat jbe stc dec sbb sbb mov fsubrl dec stos xchg mov sbb adc mov add lods pop add mov fdivrl mov cmp movsb pop (bad) mov xchg adc cmc test pop out lea mov insl imul in jb aaa mov (bad) xor int3 out push loopne adc push sub cltd xlat mov adc mov and imul cmpsb lock scas push les push pop add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl (bad) sub mov mov ret jb into je cld push pop in jmp pop lds mov fadd jecxz sarl sub popa fiadd mov and push in lret xchg pop cmp mov fwait cmpsb ret add jp stc mov rorl or lods cmpsb retw push push mov add lods ds xchg mov jo mov idiv loope lret jmp ret gs dec push lret pop jmp jge scas mov insb aam leave push mov mov push adc dec and mov and cmc test pop mov mov insl inc insl inc or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl jns nop (bad) or push add cli dec ljmp imul inc (bad) fsts call dec mov and pop add or xor sbb cmp lea subl enter mov das cltd mov out arpl call fdivrs push cmp mov addr16 push rolb jo mov imul cmp std push cltd dec fidivrl sub daa lahf xor call mov repnz add pop hlt pop movsl (bad) lds enter sbb xor imulb mov xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov sbb pop sub xchg (bad) dec xor dec xor hlt inc push addr16 mov dec sbb test push dec add idivb adcb mov fwait mov pushf mov add aad call xchg (bad) in adc inc dec lds shl ror push or xchg inc push movsb popf ja test aam sub mov push std out mov xchg nop mov inc ds outsl add ret testb pop xchg mov lahf mov cmp pop xchg jb ret movsl push movzbl inc mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp lds aaa and loop pop inc in cmp popa repz jne sub mov loopne inc jge dec pop (bad) xor mov int or cmpsb jl rcrl mov cmp mov inc push imul jmp test ja mov add mov call fldcw sbb mov sarl icebp imull pop push inc js mov lret inc dec imulb int3 mov aad out cltd pushf sbb dec imul inc outsl dec insl push sarl xor fisttpl push movsb adc jp jbe pop mov xchg sub ds std or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc out dec es inc and arpl out out pop and mov sub je jno test mov mov adc cmc out or jmp or jnp xchg mov sahf push stos outsl mov xchg cmc cld jg inc repnz lret mov flds inc mov and js fisubr xlat pop int3 movsl cltd mov or (bad) repz icebp jae movsb mov fstps fstpt push xchg pushf jne lahf mov mov push push sub jno dec lret pop dec and mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in lods int mov pusha mov idivb test mov pop ret cmc outsl push mov jle,pt jge sti jl pop xor test adc mov jb stos xchg push je xchg cld ficomp lret xchg sub fisubrl mov push sub inc mov icebp sub (bad) pop pop adc fldenv jb jmp and imul stos mov dec dec mov addb rcrl push aad imul xchg xchg sub sbb mov mov dec leave push xchg xor leave pop pop cmp cmp shlb mov into fyl2xp1 fs ss (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov inc sub mov push daa mov in mov sbb enter cwtl pusha out call fcmovne sbb rcrb jne mov inc int3 jp dec cmp pop lock or or dec xchg inc fistl mov mov ret insb or fcomp lea movsl lock rcrb cmpxchg (bad) pop cmp xchg and lret out adc lods fdivrp imul aaa cmp mov xchg dec and cmp or sti mov jae jns pop xchg inc aad cs fsubr stos lds add dec xor lds adc mov sar fsub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fimul push jecxz insl cmpsb pop int3 push (bad) sub cmp dec rolb cmp push mov cmp mov add or movsb repz fisttpl aaa popf cmpsl aaa insb jo mov jns ret iret mov divl mov rclb push jne notb fdivrl ljmp adc hlt sub cmp int and xor sub sbb push push in mov in mov jp and push mov dec or mov xchg stos push fwait cmpsb pusha inc mov sub jnp,pt arpl rolb incw adc adc or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc insb es idiv dec mov push rcll inc nop mov lds sbb xlat shrl inc mov test xchg lcall sarb xor (bad) shlb push cmp leave popa sahf rcrl mov arpl (bad) call in jne outsl std and ss int stc jno lahf pop insw (bad) (bad) push xor xor and inc mov lock aad repnz push pop xchg fldt iret cmp pop pop cmp daa (bad) nop push cmp jne (bad) mov enter jne loope pop shll rorb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jne add ss or fistpl imull jns inc mov sub push sub sub outsb cmp dec stos cwtl mov aaa lds mov fcmovbe out repz hlt mov dec cmpsb into pop add xor lahf (bad) sbb jmp mov lds (bad) aam scas mov aaa mov mov or lret ss mov test sub fcom fwait subb int3 insb call xor (bad) popl fmulp push clc lcall cmpxchg movsb and or sub or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jnp mov or data16 jno mov jmp adc mov nop lea lods ss stos jp (bad) push (bad) sub push mov pop or push and add mov or sub cltd xchg sub or fisttp dec mov das mov mov loop mov mov xchg cmp in subl sarb popa sbb inc xchg dec out cs popf movsb jge cs mov cmp decb imul or inc cli pop into mov mov mov push or test mov shrb das mov sti ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fucomi decl pop pusha ret sti xor pop dec lcall xor dec (bad) mov cmp mov inc scas fcom aaa fwait mov mov or push nop mov rcll adc outsl pop rcrb repnz inc mov sub adc mov dec por ss push jmp fdivr inc lahf sahf xchg sbb in xchg popa mov mov pushf push insb cld es add in in stos or js jb clc xchg aas inc (bad) mov push fdivl mov cmpl jnp add xlat repnz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl lahf sti in (bad) and cmpsb into std xor jno inc sbb xchg subl (bad) cmpsl sub sti call jno pop imul sub sub xchg jmp sbb stos and mov sub bound test adc int3 sbb fdivs iret and jmp test cmp xor mov (bad) negl push inc or hlt loop fstpl xcrypt-ofb cmpsl lods push xchg add popa ds bnd sub push dec pop out mov int xchg loopne add lret js cmc setno subb ficompl imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl push mov pop (bad) int3 mov ja shr mov cmp out leave sbb out xor mov mov ja jo aad dec sbb divb fistpll jl mov cmpl jnp adc adc lcall jo lock xchg sbbl jg push mov jecxz jne xchg inc movsb sbb xor mov cmp mov jmp out int outsb test adc or or cmc gs mov andl cld ret testl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call dec jne pop dec add jmp icebp roll pop xchg loop outsb xchg movsl bound mov xchg in xor sbb mov jnp xor inc dec dec lcall loopne and imul push push mov or dec negb sub aam stos dec ror clc loope xchg and mov in addr16 sub stos jmp iret sbb lods sbb inc mov (bad) popl icebp stc inc jb cmp xchg loopne fld or jge dec inc jp movsl add mov mov cwtl loope clc adc cmp mov jns push or (bad) das loope mov push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call pop mov (bad) movsl invd out mov mov push mov iret and ss dec mov mov xor pop or mov test not sbb fisub repz cwtl mov call dec in mov lods stos fmull mov stos notb or lods cs ret push cmpsb push inc das xor orl int3 stos iret fidivrl daa imul pop loop push push jmp sbb roll jle jnp adc mov jmp gs loope (bad) cmp jb (bad) rol (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall int3 test mov data16 sahf adc sbb dec js sahf sbb jge into enter arpl test stos jg cltd mov and xchg mov fcmovnbe sbb mov aad lods mov test call inc xchg fiadd (bad) int stos jl imul and (bad) push push mov jle push cld stos ljmp pop movsl cmp movups out dec out aam inc mov and sti cmp in pushf push test mov cmp dec aam sbb jno (bad) pop sub sahf jge (bad) sarb jb pop mov sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl outsb movsl inc xlat call cmp mov shlb lret jb mov cwtl push fmull aas sbb mov mov (bad) jno xor sbb cli push scas mov in lea cmp mov mov dec insl jle ret dec (bad) mov push (bad) fildll (bad) das add mov repz sub sarb mov test mov jne or pop cmc mov loopne jle gs inc insl mov sub xor std repz dec test (bad) lock out jb out (bad) cmp in push push (bad) insl cltd pop mov cwtl (bad) ret mov cltd xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jnp out mov ss flds lcall push add ret clc push outsl mov mov inc shrl pusha xchg push pop movsl cli pop icebp push cltd dec sub adc into sbb scas aaa lock or aas mov cmp test mov gs (bad) js cltd test or popf and inc es stc lret aas add inc test icebp movsb loopne fs adc rorb mov pop jg jnp adc cmpsb lods popf pop add mov xor push push les loope pop (bad) (bad) ss nop fsubrl mov pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov cmpsl push jp adc gs push jne,pt xchg pushf sub cld movsl push mov js push and hlt aas xor jg jl adc fcomip pop adc pop sub pop or push add push adcb sti leave popf adc mov mov data16 xchg das inc push clc dec inc loope loopne mov add ja xor into insl jl jo add mov rcrb fstpl xchg or int loop jne cmpsl mov dec jno out mov push fs rcrb test mov in repnz dec push ss call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov jecxz adc (bad) fsubrs xlat lahf jmp in adc push mov pop dec jb ficom loope lcall mov and mov fsts pop test xchg enter dec cli push loop sarb inc (bad) sub pop in or mov push int3 stc mov jmp jae cmpsl cs and mov xor or std loopne dec sub (bad) adc xchg sbb and insb sahf test inc push cmp xchg in mov incl imul mov pop insb mov push dec daa rorl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in xor jns inc or roll cmc scas jno push adc loop cli push int3 xor or (bad) mov rorb cs push jle add mov push into pop sti push jo dec and sbb mov push in out mov mov jns mov int3 in int3 sbb (bad) lret and fstpt lret push jb pop add cmp mov shl mov jecxz mov add dec cmpb or sbb aam xchg outsl into adc lcall and daa into out fs mov shrb jle out stos je leave adc call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp fstps adc mov (bad) add xchg outsb hlt inc (bad) cmp subb inc shlb mov fidivl mov ficomp mov pop push lds mov cli sbb popa dec je aaa xor xlat add cmpsb (bad) push (bad) jae xchg clc push sub or xor add (bad) stos lret insb jno (bad) lods repz repz dec dec in jl add fistpll xlat (bad) mov sahf int pushf sbb mov pop mov jp push test test icebp push xlat push repnz sbb push (bad) loope (bad) adc inc xchg xlat xchg rclb inc inc xchg lock aaa lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp push cmp fidivrl pop mov fistp and rclb jb test sbbb mov mov gs mov (bad) mov loopne les inc pop into jne pop leave mov inc pushf lds lret outsl ja mov movsb movsl mov mov stos xchg pop xchg mov pushf adc movsl lock call mov mov scas mov bnd imul pop clc push jg lea iret cmpsl ljmp dec iret imul push or ja movsl js nop jae xor xor xchg mov int3 hlt push inc sarb inc mov lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc lds mov lds push dec adc jecxz cmp sbb dec ret jmp mull out int3 jmp inc mov test cmp lcall clc jp cmp sub (bad) mov fsubrl test ret dec jp int arpl (bad) je and mov bound xor lret out adc into xchg ja imul push je xchg pop sbb lods xchg add cmp ret scas adc pop mov ss jns mov push push mov lea fiaddl (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov jle aam inc lock jb mov lods iret int3 add inc lahf pop xor std fidiv mov and dec mov aaa inc enter and jecxz push xor adc jo fbstp call adc push dec dec jge inc and jl imulb popa movsl mov fdivrl stc ss aam in daa mov insl pop movsb (bad) inc adc sbb adc (bad) repnz idivb scas (bad) mov mov adc test mov mov add enter sbb cmp xor cmp divb or push (bad) dec mov jns nop jle fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp repnz dec lret idivl add lcall mov or mov cmc pop mov jb dec in rorb mov jae repz push aaa lahf fwait ljmp cmp pop addb (bad) nop xchg je aad dec pop and stc adc xchg jne stc pop jb push iret mov or push mov cmp (bad) mov jmp cmc xor shll push and dec inc sub inc and dec cmc sub push cltd testl adc or lret and movsb call mov jbe dec inc push cmp mov xchg inc insb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl cmp rep hlt add addr16 mov ss adc (bad) add mov cwtl outsb pop cmp out cmp jae pop dec ljmp add cmp imul push xchg sahf std dec inc xlat xchg mov (bad) pop iret jge scas ja mov pop leave imul pop mov fwait cltd jmp adc mov movsb push (bad) out xor iret inc xchg push ret lds cwtl and cli push insb mov xchg jg in and jb inc sub rorb jae in or aam pushf jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) aas jge out test repnz mov ror mov js inc mov dec insl aaa addr16 enter test fnstenv int dec inc mov sub push and mov iret clc inc adc out push inc sbb add clc sub inc mov pop inc jg xchg mov xor int3 mov sub pop add mov js mov ret cmpsb sbb mov push hlt hlt sbb cwtl push sub lret push out icebp pop in xor test cltd js test outsb cmp mov leave out shl or (bad) arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov jge fwait (bad) cmc (bad) adc ret cld mov mov jp xor dec jl insl mov pop int (bad) scas popf add data16 inc out fistpll sbb cld adc mov call shrl inc popa mov ja dec clc and adc sbb xchg inc pushf dec dec test shll fistl or into jmp (bad) enter adc (bad) and gs xchg int3 cs mov xor les adc sbb jp xchg inc pop fcomps xor rcr ret pop mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov rorb imul adc js out sbb sar ret iret xchg jmp shrb fistpll push outsl mov cwtl push jp loopne cmp jno pop andl pusha mov popf fwait mov mov cvtps2pi (bad) cmp popf sub lahf pop mov jle cmpsl je cmp inc loopne hlt outsb rclb out adc xor ss cs mov mov mov push pop cmp bound push inc or dec (bad) push mov cmp stos enter sub cs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl rcrl cmp jnp (bad) popa decb lret lcall mov in cmpsb mov sub dec jnp ss mov fisubrl int aaa ret cmp pop jb fwait sub test aaa jae push in imul ja jbe mov mov in shlb inc mov cmpsl mov subl andl idivb cmpsl cmc lea mov test cmpsb mov fisttp and (bad) xor out clc sub inc or xchg push push pop rcrb pop dec inc add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call dec je xchg or inc pop and cmp pop lods sub jnp lock mov add jecxz ss out lea push clc xchg movsb enter (bad) and sub xchg (bad) sti lret (bad) xchg sbb sub jle clc fcmovbe mov addl mov (bad) (bad) sub sub loop ficomp dec sub leave pop push dec sub lock mov call push sbb bound xor adc adc test ss icebp pop inc sub aam (bad) scas xor xchg cmp push sub cwtl repz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld inc out in pop sub icebp mov lock mov aas xchg cmpsb out lds repnz loope movsl sbb mov daa inc adc (bad) fnstsw mov jnp pop fstps cmpb push mov daa lret lods out push inc xlat out xor shll stos mov in mov (bad) mov pop xchg dec xchg mov (bad) ficoml aad rolb xor (bad) mov imul cmpsl jae int push ret xchg sub or jg popf mov aas push or inc imul push in fidivl ficoml js fwait and mov es inc into xor out cli (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp adc push dec push mov cmpsb mov test lret mov add and or pop fdivl negl mov add add cmp fldcw jg fidiv aam or jmp mov mov jne fsubrl jb cmp dec dec pop (bad) in xor pop mov adc dec dec mov dec jg xor jl xchg nop adc fisttp in xlat (bad) sub pop cld arpl ds push cmpsl mov dec iret push fildll hlt add inc leave nop in popa out and pop push adc mov imul mov sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov xor js (bad) dec pop add int3 push sub int3 push dec sbb xor mov mov movsl repz mov mov test outsb sbb or mov xchg and or das push cmpsb pop mov (bad) into fs cld ds jg sbb (bad) mov mov out ret arpl xchg sahf jae ret jg mov icebp out dec aas ja xor fwait daa mov mov inc cmp popf xchg insb call dec jp arpl sub lcall adc shl rol mov mov or mov pop jbe and aas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl inc sub shlb call imul roll push mov inc and add mov int3 mov xchg push sbb popf mov pop pop mov xor aam aad lret pop mov jg out sahf notb push xchg cmp mov and imul clc daa and push xor pusha sub push (bad) mov mov leave std enter cltd jge mov pop stos std push lods adc out and insl test cmp mov and adc adc daa pop mov xchg jl imul jbe movsb notb stos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov call loope (bad) inc or inc negl sbb stos arpl mov (bad) dec ljmp mov jno inc (bad) fdivrs insb leave pop inc decb and adc dec fadds cmp push mov fucomi (bad) iret dec into inc inc ret pop sub jp nop outsl fild push (bad) rorl loop cltd aam lret jnp xchg jae push dec mov jb (bad) sbb add xor scas xor inc and loopne mov jno inc orl cmpsl sbb cmp push hlt dec sub push cli in pop test xor ret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec (bad) sbb jg mov es xor arpl pop or movsl pop cmp sbb sbb mull nop popa pop fstl sahf out cmp sbb cmpsl out sub sbb insl cs sbb inc into das pop jbe lds inc roll sub mov mov push sbb cmp push push dec insb mov push fs repz inc fsubrp adc jmp shr jmp mov and push fs pop pusha jg jnp out lods lea inc adc iret push cmp movsl mov sub push clc test xor or popf or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call (bad) ljmp jo,pn mov out sub mov test add push cli sti pop movsl mov adc test jns addr16 js cmc push ret (bad) sbb into xor daa sbb out stc iret sbb and mov mov mov idivl scas repz jnp push mov xlat mov out callw fiadd cli push xchg and sbb add ljmp xlat dec int push (bad) (bad) jns add (bad) or mov sub clc sbb pop stos lahf lret stos ret clc call insb aam xor outsb fcomp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov hlt jo xchg (bad) cltd cld adcl je jmp imul mov fbld xchg adc or (bad) out mov (bad) jnp addr16 mov arpl adc lea xor jl out inc mov outsl push mov repz movsl aad test or xchg pop mov adc sub and push repnz fmull mov movsl jle cmpsb aas ja movsb popa rorb cs out xchg test cmp add xor inc cmpsl dec imul (bad) mov or mov dec mov push popa and cs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc xchg arpl push out inc cmp fs push orl push xchg int3 rcll cli leave repz xor pop cmpsl loop cmp (bad) sbb jp outsb xchg lds push or aaa je test push js jle sub into pop inc xor pop cwtl xsha1 cmpsb or insb mov mov out fiaddl test sub cmp xchg add sub mov pop lcall into out cmp cmp lods pop cmp xchg (bad) jae (bad) ja jno (bad) aam ret mov jbe shlb sti rorb or xlat mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp ss xor dec insl lcall xor mov xor mov jns daa (bad) mov dec mov mov xor xchg and movsl scas outsl sti adc jp sbb arpl add lock inc jp mulb mov (bad) ja ret xchg sub stc add into sbb jnp sub insb cmpsl iret bound sbb mov mov inc fs xlat mov jno pop (bad) daa rcll addr16 and push mov mov adc cmpsl pusha (bad) loope mov cmp stc xchg fdivr (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp sub xlat push stos cmp int push push rcrb cmp gs (bad) jne les cmp test inc cs add int3 xchg sub inc std mov cmpsl aad inc adc mov bound fsubrs leave (bad) mov xchg les mov jo test and (bad) push pop jle shll lock pusha xchg dec cmp dec rorb into or jecxz lods in stc stc imulb sub mov (bad) fbld xchg and fldcw in fs mov add inc inc sbb cmpsl test jg xchg xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl (bad) repnz mov mov (bad) pop rolb mov fwait imul pushl inc out jmp test lock dec mov aas pop outsb in jae dec and mov mov inc add cmpsl repz xor sub add jns dec call pop xchg test scas mov or jecxz xlat lock sub loope or negb xchg or mov (bad) sti (bad) mov or ss push push (bad) or scas aaa ss adc cmpsl les lret mov divb add mov rorl xor cmp movsb inc shll movsb ret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call nop icebp movsb (bad) mov add std inc and cmc flds mov xor pop sbb fcomps dec pop pop test dec and daa test adc add dec nop aaa lret aam adc nop lahf sbb add loopne dec mov fwait lret push pop jl jbe in sbb xchg cmpsl int3 mov shll dec and lods test arpl out mov jno xor push repz mov push fcoml pop mov mov fstl div je or or ret pusha (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xlat loopne mov push xchg divb (bad) inc adc es push push insb mov aas mov pop inc lds scas pop out jne (bad) stc pop call cld mov movsl sub ss sarl sbb cmp xchg jne fcomps cltd aam insl mov fdivl mov or jae stos cmp mov stos mov mov inc fstps inc hlt (bad) xor jbe cmp mov ja inc push mov cmp cmp mov lcall push jo (bad) mov insb mov leave imul jne add mov mov addr16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc sbb mov push mov jns adc enter mov sbb mov (bad) imul test adc test cwtl and mov into add mov movsb jne jae mov outsl jg pop nop outsl xchg xor cmpb ret push sub call sub les cltd sbb mov lods repz or sar xchg or movsl jg sbb and mov pop sbb jp cli push push (bad) lret sbb mov jmp cmp cmp xchg ret adc mov or psubusb jge (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp inc cwtl push xor sub dec dec push pop test in scas xchg aas or xlat gs in fmull xchg and mov or jg (bad) sahf lods pusha rorl loope cltd ja jmp mov push (bad) call push cmp stos rcrb add repz adc (bad) pop cwtl ret jne das fisttp popa cmp sbb sbb and std push sub aaa or adc push (bad) push outsb mov dec push movsl and rolb lods or aaa icebp or cmp mov stc xor pop adc das fisubl pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sbb mov in imul push jg enter nop rcll out or ret xlat lret imul xor shl into lcall jne cmp jmp aaa hlt fsubl add fidivl add add dec sub cmp (bad) cli jbe pop stc iret clc fdivrs jp rcll lods or shll stos cmp imul ret ss test or mov push pusha call cwtl push xor add (bad) jne cs add or aam jmp out loope (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec push repz add pusha xchg pop mov dec dec xchg add xchg outsb push out fisttp mov int ret adc mov mov (bad) add cmp fwait pop sti push sub enter shr push jg cs xchg or fldenv xchg stc push jnp pop loop xchg mov mov pop jp outsl cmp (bad) loop add and rcrb stos pop mov cmp or inc loop mov mov in xchg das (bad) cli dec jb aaa mov fs pop cmpl sar out ret js push enter jp pop mov (bad) notb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec loopne in iret ret adcl loop pop or sub popa insl leave mov inc das cld mov pop nop jns movhps pop repnz sbb inc fdivl push mov aas xchg xchg (bad) push mov aaa lcall mov lods add fcomip mov cmp nop jne mov xor out fistp jg fimul fisubl push jno decb fnsave xchg lcall mov xor xchg popf (bad) cld add nop out jmp cltd inc mov lea lea mov into jbe push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl sub shlb dec cmp (bad) cmc aad push pop lds cmp pop xlat repnz pop rcr sub ljmp add jmp jb sti jbe and ljmp test xchg cmpsb sbb scas push jnp sbb push push (bad) (bad) aad jg addr16 jnp movsb arpl hlt imulb and (bad) in popa sub mov es cltd sub push cmp mov jo (bad) jp push xchg jns xchg sub sbb jmp push or pop (bad) fstps mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add adc (bad) lea in jne jae test cld popa push (bad) and push outsb jmp sbb fidivrl pop (bad) xorb imull mov sbb adc addl (bad) les xchg xlat scas stc or mov lock mov cmp dec loope cli or fwait and fcompl push push adc fwait stc ret movb mov imul inc jp push adc xlat push mov adc mov mov dec pop daa imul mov sub or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl cmpsb lock adc inc inc xor (bad) pop (bad) pop rcll adc push insl cmp mov push mov xchg xchg in in in jb aaa pop clc add pop ja pop or mov call xlat sbb sbb adc pop dec sub (bad) inc mov mov push inc jge sti push and cmp js jne inc adc pop mov mov sahf into xchg mov jno ljmp stos add ss add cwtl test lods xchg pop jmp in jbe mov dec xchg (bad) or pushf inc sbb ljmp or jae hlt (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl rorl je nop daa adc xchg stos jle lods sbb (bad) sbb cmp ret fnsave push and xchg sarb lcall jmp mov dec adc movsb jmp ficoml push cltd jae repz test xchg fs sbb dec cmp jo jae stc repnz gs pop enter push push sti sub cli leave mov iret push xorps push arpl adc dec shrb cli cmc jne jecxz inc cmp scas popf jne ret add mov or add inc xchg sbb idivb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp loop imul dec lock mov (bad) fwait sub dec mov outsb and pop add pop and jmp in enter ja inc push cli dec lds dec (bad) jg cmp xchg daa pop jno mov push cwtl into sbb dec popa hlt mov fidivl jmp dec sbb cltd jl pop jl in mov push lret cmp loope scas mov jno mov xor rcl push ret inc cmp inc orl gs das adc call in pop mov fldcw out enter adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl sub shr (bad) outsl iret and and and xor and push adc ljmp js pushf fwait jecxz cmp nop pusha xchg stos dec mov adc mov push cld push pop rcrl lods mov sbb jge lahf out lods call mov and pop push jns sbb lahf mov push fdivrs sub push mov in push notb and push jle cmpsb xor jmp adc adc dec fwait ja ljmp divb or adc subb xchg push cmp cmp jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl call jns cmp jge out push clc sbb insl mov sub and sbb scas repnz jle inc jnp sbb mov inc push or fnstcw addr16 jl jnp jmp xor das mov dec clc push jae pop adc push fmuls dec loop pop int sub aam loop (bad) xor push loopne jnp push rcll sbb mov (bad) add syscall mov shll pop pop aas ljmp xchg int stc inc and mull les js sub out das mov pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jmp cmp cmp int es repz inc cmp cmp cmp subl pop xchg (bad) inc cwtl push adc pop dec fmull out loope lods cltd push jmp adc lods call leave mov sti cmp ret fstl mov pop pop cmpsl aas push mov push or push rcll push sbb cmp cmpsl sub scas xchg xchg mov icebp add aaa mov test scas dec sub in mov sbb push cmp inc (bad) inc jae add jle push jle push xchg outsb mov add adc neg cmpsl add cmc (bad) dec aam ret push and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp or cmp ret and mov and pop dec adc out sbb sti fcoml shl xchg pop ret nop adc movsl mov bound jle lcall xor adc sub (bad) enter mov cs mov fwait add incl inc lock cmpsb test lods xchg adc out sahf push cli xchg inc pop in mov inc ficomp pop xor fxch fidivr lds add mov in adc or nop mov int test addr16 push imul icebp cmpsl cmp repz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl sbb ljmp sub fcoms aam lock sub nop stos pop pop (bad) jns mov xchg icebp mov cli sti cmp cmp repz (bad) sub push mov scas sub lods push out dec push jle fwait mov add sbb repz inc ja jno dec repnz pushf imul std leave or loop pop cld lcall inc outsl sahf pop popa mov lret std les popf cltd pop enter adc push and in sub insb call jnp pop out addr16 dec or mov push add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov xchg xchg (bad) popa or es (bad) lods clc mov movsb imul aas out enter jecxz jmp cwtl sbb insb cmc mov jmp mov pusha mov dec mov xlat or cmc in mov sub mov push aad mov in inc insb mov or or les inc cltd add iret clc int pop mov scas out in fwait pop test xor ja cmp inc (bad) mov clc mov mov jp dec xor aas or mov ret add call cmp repnz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall and jae mov xor lcall into fldl int3 imul xchg add push in mov xchg mov lcall enter imul ljmp push adc repnz bnd ja (bad) sub icebp loope jle addr16 inc inc fnop sub cltd inc (bad) xchg xchg push sub add jns jmp lahf inc pop pop push cwtl testl in xchg dec pushl es add push ljmp inc xor sub pop pop stos repnz scas out cmpsl fs dec and subl in push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl stos rcrl daa sbb fcoml jns xorb cwtl js int std (bad) (bad) xchg and out sbb mov or push sub adc jge sbb mov jmp mov (bad) rol orl mov add les ja or and cld adc testl (bad) jmp cmp xchg dec loope cli stc inc mov shrl push jb inc call dec and adc cmp ljmp mov rcrb jecxz out sub (bad) cli aas mov sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push and or insl pusha push addr16 lahf hlt jno sub xchg mov sub (bad) outsl sub leave push mov in dec inc mov xor sbb (bad) dec shll stos das rol sbbl gs push mov ja push movsb leave aaa pop (bad) dec gs shl outsb loope insb lods insl loopne test xchg sarb cltd mov aaa insb dec icebp push das pop mov mov pop pushf jno xchg andl fldenv arpl inc xchg fnstenv pop jp jg (bad) mov lea mov (bad) pusha gs xor sub mov out inc loopne icebp or in aam repnz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl test repnz je imul gs gs mov ss jle mov jle sahf ds aad call pop add xor les inc lock cltd sbb mov cwtl (bad) cltd xchg xchg insb mov insb lahf (bad) mov neg add in shrl mov or jle outsb xchg dec inc jno stc cmp pop jl push and jmp outsl (bad) mov xchg sub lods (bad) xor or enter clc fdivs gs push adc xchg pop xchg xchg test call lea add enter and sqrtps xchg cmp sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl out int3 pop ret into pop (bad) pop xor ljmp int mov sub inc (bad) aaa pop sub or jns inc rcl movsb and dec rol jno jbe cmp xlat mov xor test sub je std jge popa add push fcomps test mov cltd push test pushf cmp sbb cltd ja fildl mov cld mov insb mov cltd faddp sub sbb dec rolb hlt xlat mov add loope push das insl dec and inc inc clc and mov dec cmc bound movsl and mov aam pop out dec mov xchg (bad) xchg cmpsb pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lcall mov repnz xchg jge push cmp in xor xchg jo and pop ret roll pop cmp (bad) outsl add and ds mov cmp and lcall (bad) inc stos lds cmp pop call popf std aaa jae cmp repnz enter fmuls test adc fild mull jmp jae call outsl cmp (bad) sub xlat shr iret cmp sub scas cmp into xchg sbb movsl pop mov call push xchg jp,pt enter js inc add xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall into sbb dec cmp dec mov (bad) int add call int3 outsl dec jp ss stos out jge imul and sub sbb xor jns (bad) aaa mov iret shrb mov cmpsl cwtl inc out jns dec ds push cmp stos sub jnp subb jle movsl jl mov (bad) or and stos push out repz mov jo imul push xlat xchg mov inc add popf push ss out aaa xor sub fdivrs arpl or add xchg daa or dec movsb mov mov ljmp add (bad) out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp loope sbb jmp push cld test lock sti clc mov xor ss cmp je int3 jecxz cmp ja lds aad sbb iret dec push jbe aad dec fimull (bad) rolb xor enter adc mov and bound xchg jecxz dec dec js adc cmp ds lea repz mov jne aad jge push jl inc insl js push xchg (bad) cmp ds xchg movsb lret das xchg sbb inc aad cmpsl ljmp jbe xchg outsb add fidivrl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov mov pop and jmp mov mov and inc mov adc bound xor nop mov aaa inc add cmp movsb cs test xchg jnp into aaa add mov sbb les rorl cmp push outsb adc cld and int3 push jecxz loop (bad) push iret outsb stc imul mov jmp insb xor mov arpl inc sbb xor pop mov or xchg test add test ror mov out insl in push push xchg mov cmp shrb (bad) push mov push dec fcoms (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) aas test addr16 (bad) out mov (bad) push loopne outsl es or mov jne sbb sbb bound lret sub cs pop stos outsl cli mov scas ljmp stos xchg (bad) xchg mov test insl in add das push incl imul push scas dec cli cmp std mov test stc mov pop sub or addr16 inc push sub ljmp idivb mov jge or and aas in or mov into cmpsb or dec ljmp add lock out jne (bad) rcl or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp inc pushf mov aad adc mov push jbe push pop pop add push sbb sbb mov sub cwtl mov xchg popf (bad) shlb in aam or loop je pushf sbb out fcompl inc cltd fs data16 push xchg inc xchg sbb xchg xchg rorl add mov or sbb xchg dec (bad) notb jns jnp push fwait jae sbb mov xchg mov or cs cld adc xor lahf (bad) xchg insl imul in jmp scas pop cs rcrb or pop xchg arpl mov in cmpsb sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push mov (bad) xor mov clc lret ljmp xchg push pop gs dec movsb dec sbb aad aad cmp sarb ss xchg pop addl sbb (bad) jno mov cmp aaa (bad) cmpsb xchg add dec icebp mov ret xchg je adc ljmp fisttp lret mov shlb cmpsl cmp imul repz jl aam fisubr iret jo sub pushf jmp add pop lds and adc push sub jnp jno mov js mov push dec inc lret cmp adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xchg addr16 jge imul and mov arpl int3 sub hlt push push notb jnp lods jge and add xor imul push out jmp rol faddl loope out daa in xor lret lods call or js adc imul test push mov lods push sbb fnop sbb pop pop fsubrs ret jp rcrl mov in dec add mov rorl mov xchg sbb inc jp sbb dec mov icebp cmc hlt sub cmp add ret imul cmpsb xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lcall pop xchg adc scas arpl sbb inc pop fdivl push ja ljmp mov movsb adc (bad) bound aad je shrl lods (bad) fisttpll stos (bad) pop mov in fstl out sub enter inc mov leave push out mulb and xlat pop or mov adc ss fs push jge ret add push inc mov jnp je loopne scas jno hlt stos movsl sub mov test jbe (bad) jo pop xchg pop cmp and or push mov clc mov or repz in xchg loope sbb cmc in fldcw (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xchg or (bad) or pop pop jle inc mov mov add mov or mov cltd xor and lahf (bad) push lahf sub adc xor (bad) xchg movsl fnop test or and mov cmc inc loope,pt sub or jnp add pop fwait cmp push stos add sbb fild (bad) adc sarl mov (bad) daa jl ljmp mov popf jg xchg imul jnp jle adc xchg mov sbb mov mov jle mov mov inc aam (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jmp dec add push pushf add test pop lret aaa test out je push popa in stc push xor cmp mov (bad) nop andl scas test xchg bound cmc cmp dec mov inc sbb sub or xor test hlt jbe fistl adc mov inc rcl jmp int in cmp dec jns lods push push xor cmpsl mov fnsave inc and pop pop in (bad) mov ds mov ljmp add in dec xchg inc adc pop sarl fwait mov imul sar pushf mov fldln2 aam (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov (bad) cltd sbb adc adc push jb clc jecxz xchg dec shll sbb xor rcll cmp in (bad) dec mov test stos scas pop popf mov ret jno adc push out jl or call mov pop sub movsl mov je movsb aam sub sbb dec jns aaa scas pop int3 cmp inc xchg in sub push daa rol outsl pop je fcompl mov divb (bad) in and stos inc daa clc insb adc ja dec adc out mov loope inc stos (bad) fmulp das (bad) jge ss sbb jle orb je ja (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp gs or dec cmp inc pop mov iret sub pop lods mov sub push je addr16 in jecxz mov arpl imulb dec lret sbb mov xor cmpl nop mov inc lock push mov add xchg or mov (bad) and insb cli movsb mov cltd xchg scas (bad) xor xor lahf cmpsl int lahf adc lahf rcrl mov add int xchg neg lds icebp mov cmp imul and js cmp add clc jp shr adc adc int3 xor scas daa inc popa inc ficoml (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld sahf loope ror imul out orb cmpsb pusha (bad) sub and test push pop and push mov mov push pop popa mov imul mov lret pop mov xorl testb mov insl aas xchg insl lcall rcll lahf mov inc and dec dec dec sbb jmp add push and fisubr pop mov imul inc mov adc movlps (bad) mov jmp cld or test sub dec pop (bad) jnp (bad) int3 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc and adc repnz pop mov jno cmp mov jnp andl repnz pop aaa je shlb shrb and sub and (bad) and add stos scas lds jne cmp leave icebp nop add je (bad) xlat inc out push inc flds mov test jnp sbb and incl (bad) pop mov sub xor iret inc iret dec xlat jno scas push js pop xchg les jecxz lret hlt ja cmc mov imul test scas dec mov bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp cmp testb scas mov dec xor lods scas mov movsl arpl xchg mov or push cwtl sbb jbe cmpb in xchg jp pop sub cld lods test cmp negl or inc test mov sbb les cmpsb push xchg inc bound insl sbb repz cmp in rcrl sub fucom inc lret movsl pop mov sub or rcll fwait pop push outsl jp mov sbb test jne or or mov dec push iret imul out repz push cs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl popa into fiadd loop insl push sub iret jmp fnstenv fwait add add (bad) pusha nop loop cmp rcll and fwait lds rorb and xchg mov push jle pop outsb jae jns,pn movsl dec mov push push pop imul out or (bad) adc mov loope popf jne popa push pop mov push testl test or imul outsb outsb stos addr16 sbb pop jnp and divl mov in cmc lret mov jae dec dec aas add mov inc pop std outsl dec push jae mov jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push push inc (bad) push adc xor test mov or jns xor loop je mulb pop fnstenv xchg mov mov mov sub fadds cmp jg add fdivrs loop xor xlat sbb dec and into xchg sub inc sbb mov jnp nop stc and or adcl mov xchg jmp repnz pop cwtl add (bad) imul out or sbb push add inc inc inc fimul outsb push push mov das (bad) jno inc inc lods loope xor mov inc fwait pop sub ret shl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp sbb aas or ret sti push mov out cmpsl add lret pushl insl sub (bad) pop cmp xchg xchg cmp sbb xor mov iret mov add adc push int3 mov frstor clc mov and adc out out movsl ror and fisttpl imul in pop add xchg add jns fnstsw popf jb mov (bad) mov dec and xchg mov out repz js sbb jge daa lahf push cmp and das mov push lock jo and mov cwtl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc sahf xchg pop sbb (bad) sub xor flds mov js int3 test add notb repz lea stc cmp jbe out cli mov ret pop mov jge adc (bad) loope insb hlt add fs add xlat mov jecxz jns dec mov mov xchg insl mov jne in or push sub inc es rorl xor adc push aam xadd xor je jnp leave push pushf movsl stos push and test test pop idivl (bad) pop pushf inc ret jne sub dec cwtl and rclb fcmovb xchg mov dec insb jae mov js movsb xchg inc cmc inc insb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov mov cmp jecxz in xchg xchg cmp fildll sub lock add imul or les push push ficoml pusha sbb ja cmp (bad) icebp dec sbb outsl fs mov test add mov icebp jb stc fwait inc sub lcall mov add icebp mov sbb push and mov enter inc xchg mov cmc push out inc mov dec mov shll pop imul lcall mov call cwtl lret comiss mov pop (bad) xor jl dec aaa leave push sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jg pop sahf das cld fldl or scas mull testb inc (bad) jne push rcll (bad) in clc mov jno adc dec push sbb and or xchg inc ds adc or repz fwait adc push lahf and xchg xchg (bad) xor cld data16 scas fsubrp mov pop pop insl xchg and aaa add push cmp mov (bad) repnz mov daa movsl jge in scas lea ror lea outsl sbb lret roll cmp movl dec aad push mov mov pop pop mov mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl leave repnz mov pop repz push out int push pop sub mov and movsl addr16 and jnp ffreep mov xchg gs jbe pusha and js jbe inc adc sub mov mov add jae (bad) pop sub sbb inc dec cli xchg mov loopne negb pushf adc xchg push mov cltd andb rcr loope aam dec jg adc stos inc sbb cld sbb push sub cmpsl jl push mov fstpl pop mov in repz add add (bad) in imul hlt iret ret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc xor das and int3 aas mov scas std push or fadd dec lcall loop in cld scas mov stos es push pop xor push out pop add add push inc out mov nop/reserved mov xchg xor stos mov (bad) jle sbb sbb pop std mov add xchg nop dec xor rolb xchg iret push sub mov addr16 inc push insb in in ret push mov scas xchg xor aas jo cmpsb pushf pop dec mov xchg push or add sbb sbb jle push xchg xchg jo jp test and xchg repz and mov loop out sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli arpl js outsl lods addr16 and clc inc add push adc (bad) cmp int3 inc sub add aaa pop jo shll les push repnz sbb gs push loope add test shll add inc mov repz scas addb aam cmpsl outsb (bad) sti shll mov sub add mov add aam sarb inc test sbb hlt dec loope and popf adc pop js stos jecxz add movsb add cmp or imul leave lahf dec hlt aaa imull (bad) and jl dec stos cld mov jno inc adc push adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp repnz loope insb push inc jmp inc aad jge cmp in mov aas into lods mov inc loop sbb mov jae in rcll pop lods data16 roll jb add insb data16 lret movsb cmpsl sbb arpl inc jns jo jge push inc dec cmpsb out (bad) xor sbb push ficoml sbb pop mov xchg adc icebp stos sub mov ss pop lock adc pushf or add leave or outsb mov (bad) daa inc push inc testl and jle pop in pop dec mov aad pop mov lret mov bound pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl lds push iret cs cwtl addr16 cmpsl or clc sbb jne dec sahf js rcr mov (bad) pop xor push fisubl xchg stc mov lea dec and add sbb outsb (bad) xchg aad add push fadds adc inc shlb dec je into jbe (bad) fstps testl cmp aas lock jg movsb mov mov icebp adc mov (bad) push pop pop push in gs push jo test movsb mov xlat sub add mov stos stos cmp inc clc dec dec sub dec data16 dec (bad) dec and mov arpl sbb test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xor dec xchg xchg pop cmpsb stc leave inc xchg mov aam mov rep pusha dec jecxz fcomi adc mov fadd (bad) hlt pop add (bad) clc mov mov sti faddp data16 dec outsb push fcompl in push (bad) insb sbb scas dec and add icebp lcall stc jle and xchg out les and lds xchg test stos or je out lds jp xchg iret popf push cld jne scas or mov push into push scas xchg mov fildll mov orb mov outsb es and inc movsb int3 arpl cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call fwait sbb dec mov adc out cmp outsl cmp xchg flds push pop jl sbb loopne popa ffreep lret mov stos out push push (bad) repnz xchg xchg xchg xor popa in popa cmp std cli jne push (bad) mov iret jo ret nop add ds std call cli ret int3 jo std add data16 jge xor pop test in jno clc loopne and mov rcr push movb test sarb fidivrl sub or fwait jb push lock hlt movsb xchg lcall insb ja mov test cli dec push out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc repnz xchg pop je les mov xchg lods pushf icebp add push loop (bad) jae ret mov lret mov in test push movsb leave scas mov das inc pop pop shrl int3 fisttp pop jno aaa or pop daa aaa push icebp int3 push push adc jle nop mov push mov adc popa adc fisttpl fcomp scas leave lock out mov cld ret xor fs xchg push dec add hlt mov mov ljmp int adc push (bad) jo in aaa stc add cmpsb mov clc ss pop or xor or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl jl or pop lcall lds rorb jge iret add loope stos arpl dec sbb (bad) lret add pop add mov jge mov push mov fbld sub loop stc negb leave add aad and addl clc ret in pop cmp xchg repnz mov push stc (bad) mov or adc inc inc loop jmp les and int3 mov in outsb mov mov adc cmp and les mov sqrtps cmpsl xor icebp pop fmull mov lods out add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl in gs gs jg xchg adc sarl push add pusha stos push or push dec out fs push imul and xor loopne sarl je fs jp dec mov xchg or jecxz dec mov rcr pop jl or mov add cli mov mov movsl xchg pop mov repnz sub test mov lret pop into sub and iret loop mov pop xor jl dec dec mov iret add mov hlt les ret sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl (bad) repnz roll scas lods jns adc push sub sub or inc loope adc (bad) add ja stc push sbb pop aaa cmc into xlat xor ret cltd js in sti rcl xchg add in xchg xchg lahf insb pushf xorb repnz cmp lahf push mov mov ret aad inc adc push imul arpl fbstp (bad) push ret daa lds push or (bad) xchg mov xchg pop leave cmpsb test adc push cmp nop adc or fidivrl std adc insb clc mov or stos xchg test (bad) shlb sub lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp lahf sti arpl sti movd loopne es cwtl aad push movsl std bnd mov ss dec sbb fs pop call movsb enter mov (bad) jne mov data16 xor aas xor xchg shr mov xor flds lret shll fsubp jecxz sbb sub ret cmpsl xchg and sahf js mov xor sub cmc add adc pop mov iret ljmp ss xchg dec mov fimull (bad) fnop imul in cmpsl movsl add sbb lea aas jge jo es cltd and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp stos sub sbb mov dec cmp jecxz mov call add push cltd cmc sarl pop popf bound xor xor aam and xchg data16 mov popf inc mov outsl cmpsl pop sbb nop xchg in xor mov rolb arpl (bad) mov xchg rcr andl data16 mov lcall or push inc pop ds out std loopne imul mov jno add mov pop out xchg jmp ret mov fiadd loopne mov xchg testb aas cli addr16 or sbb out jae popf loop iret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jb loopne mov pop push push cld ret bound ds dec and xchg mov (bad) jmp call add into xchg xchg scas test cmp mov jp push imul loope mov xchg mov imul stos outsb push popa fsubrs test (bad) or sub scas (bad) cld mov jbe fildll cmp stos inc dec pop dec jb jge sub dec (bad) dec pop cmp sti test sub clc imul and (bad) out testb dec loope outsb adc in mov mov push subl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) arpl loopne call ja (bad) ja jmp das dec inc inc popa movsb xor (bad) hlt pop mov or pop imul pop into inc adc test xlat and jne iret lret xchg imul das jl leavew iret push pop jge fld sbb test push ja mov je or fcoml pop inc sub dec nop icebp sbb gs jp inc sarb mov pop inc jb ret int3 lcall (bad) test and movsl dec and jbe mov cli fisttp mov movb xor and in jge bound xchg rol into in pop nop lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall (bad) clc fdivs scas out enter shl nop lret cwtl pushf (bad) icebp ret dec mov bnd dec sub divl aam mov jo data16 cwtl (bad) pop je cmp mov in movsb mov pop add fisttpl cmpsl fcomps mov (bad) pusha mov jle inc cmp in aaa iret inc mov ds and xor xchg repz test imul jmp dec shll aaa stos insb jecxz jl xchg enter aas enter sbb sub stc shl lret push cmp out ret divb add int3 rorb jmp les pop cld inc int mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec faddl adc or jno mov sbb push flds lret nop in arpl fcoms xchg imul imul jbe into (bad) jecxz jge sbb dec mov push mov pop das xchg and and dec inc mov (bad) push movsl pop dec jp in out mov scas bound mov xchg xchg fwait ljmp push pop lcall sbb aaa (bad) shrb push bound bound (bad) int shll mov lods xor jbe and cwtl mov add idivl test andl xchg movsb (bad) fisub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp adc cmp cmp inc movsl clc stos outsb mov push lods sub push in shrl aas jle int mov push mov pop subl cmp les stc loope lcall fisubr stc addb movsb and cld cmc sub xchg mov insl xchg (bad) lret repz rorl aaa jmp shrl js scas mov adc stc pop xor xor sti cld push mov popf mov arpl movsl out movsl xchg cmp scas push mov push jo icebp xor aas dec mov out fildll rcl jp jecxz inc enter push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp inc add mov push jo mov inc lahf xlat (bad) jb pusha sub stos pop test inc dec mov dec aaa (bad) jno test push xor icebp inc mov mov pop pop out (bad) mov rol les pop scas push cmp push cs sub fistp scas sbb push inc xor nop gs xchg sbb xchg xor jle xchg push jp cmp fsts cmp xor push lea (bad) in cmpsl (bad) and insl adc aad mov cmc mov lsl xchg out loop xchg aam std jp sub test cld es es adc push mov add pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl cmpsb xchg fisttpl int3 sahf (bad) mov je int3 outsl addr16 jl aas es lods xchg mov or jae sbbb mov (bad) or dec loope push mov mov setnp xchg rolb mov jmp dec sub cmp lea sbb jp loop pop adc sub lcall enter insb arpl outsl jmp pop popa cmp cmpsl icebp sbb sbb shrl cs mov sbb icebp dec mov mov ret daa loope push and js mov fisttp int (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl iret sbb leave ja popa xchg jp call push mov pushf cli (bad) into shll jo mov xchg sti mov loopne sahf call pusha xchg outsl xchg pop jg out pop int3 pusha loop pop scas leave scas sar gs scas push imul sbb dec mov ja jno jns mov sbb notb bound xor lea outsl bound mov dec bound insb mov sub mull adc mov aas out mov pusha fcompl jbe rol adc out dec daa mov leave jcxz sub loopne test sbb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov push sub xchg je pop aad test insb add icebp lds je aaa mov in sbb push (bad) pop jns sub inc andb inc icebp mov fcmovnb insl pop mov jp test mov gs cmp pop out push imulb stc popa ret fisttpll movsl int3 repnz jae xchg std jno ja and cwtl inc or push fincstp xchg cld stos aam dec mov fdivr imul in ds mov or dec pop xor rcll (bad) cmp sbb lods enter imul jp (bad) sub int jbe xor xchg pop push mov shrb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) aas int pop dec lret mov sbb (bad) cmp (bad) ret aas mov mov dec dec js cmp and pop imul enter (bad) sub or popa adc jecxz (bad) aad (bad) or pop shrb cld mov (bad) mov (bad) shlb cmp pop sti pop call cmovl test push pop addr16 jbe add cmp fs popf arpl ds or repnz lret shrl sti sahf sub std cmc cwtl add xchg pop jae xchg imul mov fmull dec popf mov inc (bad) push lds mov xchg or les test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall and mov test xchg pop jmp pop pop or (bad) idivl in inc sbb mov adc adc and dec leave inc mov push cmpsl xchg xchg je out push jne adc mov les cltd or lock lods xor mov popf xor lahf jge roll cmp adc pop stc push imul or cmp outsl and test aam mov aad xchg lock lods fimull fs adc add ret mov int sub sti sti sahf adc cltd pop sbb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call adc sahf sub hlt iret mov lcall pushf sarl insb pop sarb sti jg pop inc fdivs mov pop leave adc jno cmpsb xor jno sbb loope in out insb aas inc rol push push push mov xor out inc mov pop inc xchg mov jbe xchg xor xchg dec (bad) xor jb mov sbb hlt mov inc and pop dec or cmp mov popf leave loop cmp cli (bad) push stos lcall (bad) icebp dec mul push orl and sbb push fucomp jae fild jne arpl or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp notl fstps lahf out fucomp fmuls fisttpl push js jl in dec mov (bad) cmp ret sarl dec jge les mov adc pop mov and jmp pop mov push xchg stos jae sub mov dec push sbb push mov pop mov or or push cli xchg inc mov mov popa enter cmp addr16 sub loop lcall add pusha int3 leave sbb add pop jns jle adc loope in push repz adc pop aas movsb or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lods mov add outsl sbb xlat outsb sub outsb jmp leave dec out arpl lret sbb cltd dec jle out and mov iret push ret jp or dec scas (bad) repz jnp push std leave jb scas add pop int3 pop aas cmp inc out imul cmc je repz les sti pop add xor outsb pop dec push pop push fisttpll dec inc arpl adc mov inc dec je out xchg sub jg xor ljmp add lods ret scas pushf mov (bad) jmp das push in pop mov lret ja jle xchg fistl fdivrs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli cmovns sbb pop xlat push sbb in xchg bound fcmovbe icebp or lcall and ss sti loop inc popa jae xor icebp (bad) jo and xor inc adc faddl push jae sbb xor ds lods xchg push pop pop out in mov outsl fbstp add push sub dec push lahf loopne iret lods push rorb in mov bound cwtl sete ret and sbb mov sbb adc cmpsl into std sbb inc adc mov mov nop sbb es xchg dec arpl dec and (bad) push ja (bad) out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add push (bad) repz pop add popf ja sbb lret jo insl test pushf mov sahf sub cwtl push (bad) cmp mov xchg cltd sub sub (bad) add dec shlb das and mov xchg or xchg or sbb adcl daa xchg call dec (bad) or imul and xor adc cmp mov rcrl lret sub (bad) adc fwait add jg inc xchg dec sbbl insl insb mov xchg xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp ljmp sub dec jp adc mov inc out icebp fcoms mov cli cmp insb popa xor movsl fdivrl bound adc inc out xor xchg adc cmc adc cmp push mov jne (bad) inc imul or and dec mov leave (bad) or jb jbe xor jns imul popa sti stos adc fs jb mov sub cmp mov (bad) out scas into rclb push lds mov jl xchg stc call jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec outsl fiaddl in jecxz stos cmp fistpll imul xor mov or popf int mov push inc fcoml in mov movb nop sub cwtl cmp mov addr16 adc mov sub xchg or jne sbb stos sbb mov lsl das jmp icebp lcall adc xlat imul mov pop aaa test pop shlb movsb xchg movsb aad js es mov jae dec jbe lahf xlat popa cwtl ret pop adc hlt sbb dec mulb mov negl in mov jge scas mov mov js fsubrs mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp adc movsl xchg inc int3 notl dec pop xor stc rcr push clc int3 jno mov scas cwtl data16 push or push jle add rclb push scas adc call invd mov sbb cmp imul cli and mov aad jne ret add xchg cmp fldt mov arpl pop lcall das push es (bad) mov inc test mov cmp xchg and jge jae jg pop xchg and dec jne pop inc out aad movsb dec mov or sbb clc and roll ljmp push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl push test jg and mov xchg mov and mov nop pop lahf cmp push lods gs cmp pop add outsb jmp (bad) xchg cmp jbe inc mov pop push fs sub (bad) lea cmp (bad) fidivrl cmp out jo movsb fisub inc out dec scas xchg addl daa jne jo cs fdivr into call int3 outsl add popa cs cmp pushf mov pop jns mov sub xchg mov ds rolb cs (bad) mov push repz xor xchg pop fisub push call dec mov (bad) je cld inc das and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp or add jnp push xor add dec mov dec dec aam lock jl leave outsb arpl add pop loope stos mov jl pop sub mov or lds adc (bad) lret pop in popf adc xchg movsb mov rclb sub call pop add dec rcrb mov push outsl dec mov pop inc test lea lahf std mov lahf rorb cmp jne and stc jmp call cmp (bad) mulb addr16 pop add jne outsl outsl xor test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov inc cmp into push mov test sar in mov cmp mov mov movsb pop mov fisubl pop dec insl movsl in or iret mov add sbb sbb push adc jns add aad test addr16 sub cld mov cmp cmc mov dec sbb jge (bad) fmuls ror pop arpl jp and mov ret push rclb xor adc adc loopne xchg fmulp arpl push loope lcall aas or push inc mov pop aaa scas sahf test mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov sub pop xor repnz mov xchg (bad) fstps ret aam sub (bad) mov in cmp push sti jb pop push in xchg (bad) sub out mov test add jge shlb push lret sbb fnstcw loope testl hlt cmp jmp sub movsb or pop lds (bad) and dec jno inc in aam sahf into pusha inc repz mov dec data16 sar xorl (bad) loope cli inc push call js xor pusha dec xchg cltd fnstenv inc fiaddl sbb jae ss (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cmovbe insl sub fist dec cld xchg jecxz (bad) aad pop jb cmc cmpsb clc mov jne popa inc sub out insl dec add mov dec mov or push xchg repnz iretw rolb data16 push pop mov jns xor jmp sbb shll flds in and das mov loop lods clc std add fstl ja adc pop mov imul ret test pop rcrl fiaddl cld call inc inc push cmp lcall call inc adc cmp repnz fsubs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl xlat lock or dec scas pop sbb out les test enter sbb xchg push pop rcrb pop add clc push cwtl cmp sti les lods and dec rcl fildll push adc and test xchg (bad) in aad push aam add xchg outsl cmpsl and jecxz sbb fcoms fsubl mov or push fnstenv mov xchg ficom scas cmp mov mov sbb aam test sahf mov pusha add jle add or mov mov mov push mov insb data16 enter mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl outsb pop inc lods shlb rcl dec stos (bad) movb push fcomp mov sub in or (bad) mov movsl sbb and jne ret inc pop out mov gs jp arpl enter jnp (bad) mov xchg inc xchg and js neg add mov enter xchg aas fidivrl stos ja ss lds (bad) (bad) rcrb scas push test adc sub popf push test stos xchg test pop movsl inc adc lods fwait add push xchg lock mov fmuls (bad) jg add push jmp inc out outsb bound xor arpl call sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp or test cmp ja xor lcall or pop sbb (bad) jae fist cwtl adc inc pop fstpt mov arpl test push mov (bad) ja fsub mov pop into xchg imul pop mov mov jnp mov dec sub gs pop sbb dec pop fwait jp es in movsb fwait in mov dec add fdivl pop lcall cmp sbb (bad) and sbb inc jl cmc sbb scas xor pusha jns insb cmp into cmp sbb mov push and lock repnz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push cmpsb push add lods jle adc xor push xchg sbb xchg (bad) jecxz fmul pop lea lcall shlb xchg adc dec imul mulb cld mov dec aas xchg jge cwtl add xlat jbe mov hlt (bad) lea push ret add scas mov and test dec test inc std mov sub and stc add or neg rolb inc push push mov inc and pop xor sbb and std or and fldcw adc out dec and mov (bad) lret xchg sbb jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl in cld add es push xor fidivrl cs aaa push iret test push jl sub inc test cmp shlb mov inc sub add xchg fwait inc mov test incb into (bad) (bad) ljmp arpl jns out dec mov outsb imul (bad) adc hlt fsubrs dec cmp test cmpsl and xchg fldl mov cltd dec xlat enter push sbb lret fwait and and leave adc inc imul int3 incl lods pop jmp xchg test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall dec jecxz sahf jns negl loopne xchg add cmc add test mov cltd or xchg xchg push call sti dec push or sbb daa jl outsb xor insl repnz jo jmp lds pop dec mov inc xor cmpl shll outsl adc ret lret in ret and push leave ret add pop add sbb push imul shll fs dec lret (bad) insb sub jle loop sbb push sar ret add lea jo out scas add mov int3 pop sbb fadd scas je adc cmpsl mov inc mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fistpll adc lcall push aas pop mov call mov aas lahf shr mov xchg jmp mov cli mov cs dec gs push pushf int (bad) aas mov sbb mov adc sar daa lods std sbb mov ficoml jecxz aam xor jmp cmpsb aam dec addr16 into scas imul fistpll fldl dec sub shrl in (bad) nop push hlt or je xor sub in mov push bound push aaa pop mov dec and test gs push push wrmsr movsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp ret ss mov mov mov in leave sub testl mov dec imul nop jae cmpsl andl pop (bad) fisubr (bad) jge xor sbb sbb jp xchg mov jnp jbe pop les mov loope test fs cmp cmp les aad jg xor sbb xor lret out repnz mov test jne (bad) jnp aam adc or mov or insl mov jg adc push in and cmp rcll pop lea test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call addr16 ss and (bad) daa hlt jle es inc stc mov and test popf and imul mov jnp jle xor pop je cli fsub push mov cmp ret aas ja push sbb push iret cmpsb je jg pusha addr16 test jbe ret inc or mov js sbb in in push outsb mov jl aam mov (bad) jae mov xor icebp ficomp jae pop push xchg inc hlt popf ret imul cmp inc sub lds (bad) imull pop icebp mov xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp adc rclb mov cmc cmc xchg and scas cmc fidivrl pop enter arpl inc aaa stos je dec cltd mov pop cmpsl inc jecxz jl (bad) mov xchg push loope aaa je out lahf aas fwait mov push icebp add lcall dec inc andl mov cmp (bad) adc hlt xchg push cmpsl cmpsb pop cmp push movb in push cmp mov add xchg sbb mov clc add hlt (bad) mov popf int3 jecxz mov fdivl pop icebp mov jne test sub pop fucomip mov orb push iret mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl and mov mov (bad) aas out sbb and sbb pushf push nop cwtl xchg pop stc pusha lock mov les fistpll incb std pop mov (bad) out iret pop outsl fimul ds clc scas sti pop je lods test cwtl movsb push orl xlat data16 fdivl lahf test icebp adc xchg mov ret xchg movsb pushf add mov jmp mov mov fs push cmp sub (bad) cmp jg push int3 shrb or sub push mov jp cmp or stc cmc andb cltd insb aam pop mov ret lock dec jbe (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall dec bound dec lret jp cmp dec add (bad) push seta mov push add (bad) cwtl sbb or lods mov cmpsb stos mov mov ret sbb (bad) scas cltd sbb leave inc and add test ficoml sub push or gs out repz inc cmp movsl dec bound pop test int3 call daa xchg xor inc fmull sbb inc stc xchg and mov scas mov cmpsl jnp add jns jns das arpl jno ja sbbb jb test adcb out inc notl rcr (bad) scas xchg (bad) sbb out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp lock imul dec fs scas xchg rcl mov sub inc jecxz push or fbstp mov loope xchg sbb fsubs (bad) pop jne inc jmp repnz mov pop push (bad) cmpxchg and xlat sub (bad) push ja lods int jecxz daa mov out in ret popf xchg mov sbb nop addr16 sbb ret cmp pop push xor (bad) flds push icebp cwtl add in sub xlat in movsb mov imul cs xchg xchg cmp pop aam or fstps fldcw mov jle arpl sub fidivl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in sbb data16 cwtl cld push mov addr16 out ret insl mov add and xchg sti mov sbb lods jb push (bad) xchg pop dec adc pop out push or lods je and pop xchg jae shr loop jl dec vaddsd js sahf jmp sbb aad in lcall sub dec xor iret sti mov sbb cs add mov push ret je inc aam push cltd repz bound mov movsl jecxz sbb push mov popa nop add loopne repnz in mov push loop cs xchg les pushf inc pop push cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp push mov lcall sbb jne or sarl sub xor imull inc push rorl inc add inc and stos nop cmp leave inc stos mov cmpsl xchg and sbb scas clc aad pop fucomi icebp pop in push push fisubrl sbb out fnstenv jle jmp test subl xchg cmp sub xor sbb dec cli mov daa mov dec stos lret dec ret or mov lods mov fwait arpl xor pop pop push mov pop dec and lahf subl clc jp daa lock xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp lea dec int3 cmc pushf and push jecxz fsubs repz sub aaa inc jne jecxz mov (bad) xor imul lret jbe push xchg pop fstp push xor je test push pop outsl mov loope cld and movsb fstl mov hlt cltd mull pop and add dec ret xchg inc (bad) xor adc popf ja adc lahf dec fwait leave cltd sbb insb sahf inc pop enter in (bad) and add mov inc int3 xchg dec mov lcall mov mov cmp ljmp jns ret leave inc je (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ds inc fldt mov sub repnz inc mov bound cltd cld pop push imul cmpsb jle mov (bad) jg xchg imul cld jmp push xchg cmpsl lock cltd or sub xchg inc cwtl mov sti inc mov sbb xchg fidivr test sbb inc mov in or inc rcrb ja arpl sub inc push mov (bad) into and mov repz mov in xchg sub xor adc pop and dec fcmovu jl jb,pt add loop jmp lock mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall es lret and or xchg (bad) cmc aad hlt xchg mov xchg ja dec adc lahf ret sub imul add out mov cmp sub std xchg lahf cmp cmc cwtl sarb dec gs leave std push ret mov ret lcall mov pop inc push popa mov out xchg sub imul cmc clc lea xchg leave cmc push mov daa fsubr push sbb int add lds repz ja push addb div cmc paddw loope push in jecxz jnp pop mov jmp sbb xor fucomi (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fimul add movsb xchg loop test dec lods pop in ret (bad) rcrb dec pop add frstor das xchg shr cmp or mov lock in iret cmp pop sbb setp out xchg test xchg sub xchg mov dec sbb dec dec popa hlt repnz add sub xchg in inc mov ror xor jo les stc bound ja jl stos insl aaa cmp arpl pop adc pop jg jg add call xlat inc in in push pop pop fisttp mov pop (bad) pop pushf push add pop clc or cmp in movsl xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp test mov daa sbb cmpsb fld mov aam stc pop xor and ljmp repz dec std jo aad xchg jmp cmp mov testl sub xlat je test add mov and outsb aaa or std mov sub sub hlt cmpsl popf out and pop jns in lret and pop lcall pop ljmp xor clc enter xchg cmp mov dec mov pop test push stc cmpsl stc leave and jp push imul inc popa xchg iret jns lods test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sarl adcl xor addr16 movsl xchg enter aas inc daa rolb jnp or notb cmc xor and mov sbb dec jo cmp jo scas pop pop dec mov add or scas push mov sbb adc or test jecxz mov les pop adc adc and or cli loop dec sar sti dec add mov lret sbb mov jns mov mov cwtl sbb mov js jmp loop ror ret cmpsb jb mov pushf movsl lds enter or pop mov jo pop mov popa (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov pop jle test jnp mov (bad) fsubrp add jb xchg cld push adc cmp ss mov fldt jp lds adc jg add sub lds xchg ror fild (bad) enter jns loopne xor sbbl iret out enter fs mov or cld (bad) int dec sbb inc sbb jge cmc call vpaddsb push leave and lods stos inc stos sbb add dec mov sbb mov jno jb push mov jmp sti sub ret sub xor jns mov test ss pusha stos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl repnz add mov idivb call insb sahf dec dec test lea xchg xorl icebp fistpl jp sbb cmp imul pusha or out push test loop ficoml xchg mov aaa cmp cwtl xchg inc adc sbb push imul out xchg inc xchg push jno dec push mov dec cmc jnp sbb mov jecxz xor je sarl push sub lea jmp (bad) cltd jle repz cmp mov loopne lds push jnp cmp inc jo in lahf aas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl jmp xchg add daa lret lds insl ljmp mov sahf bound test mov xor or cli jnp insl scas mov loope dec push dec cld imul inc movsl mov xchg cmp cmp xor add jo mov cmp mov call mov inc out fs and cmp movsb sub pushf testl mov add push mov sbb pop shrb push mov mov notb push adc sarb inc push loopne (bad) cmp sub xchg adc push loop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc loop dec push xchg pop das popf icebp mov xchg arpl enter in and or push mov mov std cmp addr16 loopne popf adc push aaa mov je and je mov addl lahf pop push (bad) mov jle xor mov add xchg jnp dec adc mov cwtl in push or inc leave lahf dec adc push imul nop mov out (bad) mov js push dec mov test push (bad) divl popf or push add jp inc xor dec sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall pop out cvttps2pi fisttpl jg push mov jbe cmp icebp jmp icebp xor mov push push mov add fbld hlt sbb out mov add cmp movsl loope add mov pop pop mov pushf (bad) jbe (bad) pop ret insl ja gs mov loopne aad in or in iret pop js in aad scas cmpsb pushw (bad) xchg lea mov loopne mov in and mov cmpsl test xor dec adc aaa sub pop ds sbb adc cmpsl inc rorb sbb jecxz pusha mov outsb inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push out movsl dec or jnp pop add dec pop adc stc icebp scas aaa xchg repz cmp imulb add add sub or test (bad) jbe inc xor add dec xchg rol insl mov loop test paddb sub push sub cmp cld into add jge aaa lods xor in push out sub mov xchg cmp xor inc push adc mov mov or jno mov loope pop loopne inc test mov enter mov pop ficom inc sbb loopne cmp push iret daa mov aad gs or aad cmc ret adc gs shl xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xchg mov nop js out inc jle movswl (bad) jmp push imul repz and dec and stos lods pop jo jg jl mov mov push call movsl std je minps jl ret fcoml fwait add ljmp fmull mov out inc push out inc add dec jne xor out add popa imul (bad) mov lret rcll pop push test pop daa jge xchg adc fwait or lcall xor inc ljmp hlt andb mov rclb mov mov push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl std aaa fmuls cltd sub adc mov dec adc add push cmpsb insb call in pop popa inc sub mov (bad) push sbb fldcw adc std pop lcall mov xor xchg xchg adc xor add inc jecxz dec or push cwtl call adc pop add fistl verw push lret movsl stc xchg push sarl in push jecxz jbe mov add or push aad mov stos and out popa mov imul pop iret cmp jns push fnsave add cltd (bad) imul add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl (bad) (bad) fdiv nop fwait lahf sub in push nop jno jnp lret andb fxam adc mov scas mov sti lcall inc stos (bad) adc dec roll dec outsl cmp push jl dec add outsl scas (bad) jle inc (bad) jae ret dec scas mov xlat mov in fisttp push loopne jne push loope jno xorl (bad) mov pushf mov add push jge mov xor inc sbb cs frstor stc mov pop pop popa pusha push out faddl mov stc (bad) lret ljmp lret add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call inc repz push cltd jnp subl pop mov fbld xchg pop jmp pop pop stos mov sub scas mov lods loope (bad) movl aaa out adc out inc sbb jae fidivrl ja hlt mov pusha and xor xchg (bad) jo push xor jae push fiadd xchg in popa mov lods cs inc insl adc adc out fcomps push notl mov jnp and cwtl jg lret das (bad) or sti movsb cmp pop shlb mov aad dec cmpsl je lcall pushf stos cmp push mov pop jnp add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call dec push push icebp fdivr sub mov pop jecxz popf push outsb es dec add dec fsincos (bad) mov dec sub (bad) jno xor das mov dec in ja sbb in sarb andb cmp push jl mov mov adcl push bt out and popa inc xchg mov imul pop lods cltd dec lret popf int dec (bad) repz xorb dec inc mov xchg movsb (bad) sarl xor (bad) outsb cld and cmpsb dec movsl sub fdivr insb pop test arpl aam or int dec inc inc jae popa xor and dec mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp pop jg inc bound scas lahf out and and mov mov add pop stc jno lret movsl cmpsl ret mov xor pop repnz ret lret aam inc dec mov mov jg addr16 or js mov loop add cwtl mov xor out xchg push jp nop xchg movsw adc push hlt cmp mov adc xchg mov data16 scas cmp pop ds pusha sbb sub cmc (bad) iret mov pop int sbb inc andb cs sub clc ja lret fldenv dec push jae and inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl jmp xor push aad inc jmp and mov outsb movsl mov popf daa je jp arpl pop std dec or cmpsb cmpsb aad xchg mov inc std clc bound push sub stos adc mov fwait xlat adc mov xchg wbinvd mov gs or fs inc pusha loop std mov push add dec out iret mov test ret repz lcall js cwtl dec insb xor orl sub clc adc jle daa mov push js popa jns movsl push xchg incb xor sahf jnp push mov rcll sti (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc notb imul or insl xchg sbb pop xor jnp xchg cmpsb icebp enter xchg lret sub bound pusha inc jbe xchg inc add jge xchg xchg or (bad) fisttp push fcmovu cwtl add (bad) call cmp xor pop ret fdivr loope repz (bad) out inc (bad) mov test scas shrb xor jmp lods or push mov or cmp adc jno pusha and pop jp mov outsl mov fcmovne rolb outsl cmp add inc jg ds flds les fwait outsl lret movsl adc adc ja and nop xchg jb mov shr (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall pop (bad) stos xor add ljmp dec adc jge cmp imul sbb lahf (bad) ficompl xor pushf aam orb scas adc pop mov test lods stos pop jns fstps lock sub sub aas xor lret outsb fnstsw int xchg aad or or or cmp push sbb outsb mov pop adc repz subl jno popf fidivrl lret cmp xor sub mov and cltd stos pop xor jno sub call outsb in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl fs es loopne mov icebp inc dec add mov pop push sbb push pop jge ja cmp dec adc xchg (bad) jno jle clc push add fistpl jne mov sub sahf mov fisttpll jl outsl mov xor inc cmp sti pushf into in dec inc stos jle (bad) sahf and adc sub and insb pusha rclb mov (bad) pop mov cmp movb xchg cwtl fsub mov ljmp mov xchg cmp push shll cmp jne mov imul pusha jno ficoml pop or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lcall scas cmp inc in call (bad) ret into sbb or xchg or ss xlat movsbl push mov leave pusha ljmp jge into jg jo xor outsb jge popl dec inc lods xchg jg fldlg2 ljmp lahf and std adc and inc and ss cwtl (bad) jp dec add subl in mov fs dec cmpsb js mov mov mov pop fidivl imul cmpl sarb dec flds ret rorl push sub in jl out mov mov movsb and repnz and sti mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc setge push cmp sahf dec mov std or mov xchg pop push xchg inc cmp imul pushf sbb mov mov pop mov scas cltd int3 xchg adc jmp push pextrw sub mov xchg insl lahf pop push cmp repz movsb mov cmpb cmp mov ds lods enter sub mov pop (bad) fucom xchg mov ds dec ret in je push dec mov (bad) pushl mov insl test pop mov push xor cwtl cmpsl popf jge ljmp push adc xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp sbbl push pop ss mov push or add fisubl orl cltd xor add mov pop jns in ret gs fildll out adc push ret movsl (bad) stos pop push cmp cmp int3 sub scas cmp xchg data16 imul mov dec mov jg inc subl (bad) xor jbe mov dec (bad) rorb aas aam sahf add icebp aam dec out (bad) loop je xor mov inc fs icebp imul lahf gs jo or int mov shlb repnz leave pop movsb js loop je (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out inc sar xor (bad) data16 add test xlat ffree dec cmpsl sub or pop sbb xchg pop lcall mov or aad insl mov adc lock bound outsl orb imull and fstps inc jae scas addr16 xchg fs pop nop push call mov fidivl (bad) imul jno adc cld rclb faddp lea sub popa xchg jecxz mov cmpsl cltd sub fild rcll or stos je and sub aaa cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl xchg pop mov adc ja fwait xchg aas jbe,pn outsl pop test (bad) mov or mov lods or fwait loop jp or lea or adc in jno and xlat ffreep xor and maxps jo push (bad) lock (bad) insb push mov pop xor mov dec jmp movsb mov jno daa aas js mov sbb es xchg lret jo mov mov xchg les das xor jle add xlat js add mov call mov pop mov and imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) js mov mov jno mov and lds pusha pop mov ljmp mov lods inc push mov cmp push stos push test inc std push aaa push mov jnp jbe and sbb add push lods push lea mov jle std push fstpl mov repnz aas pusha xchg sub lret sbb rclb jle outsl mov cmp arpl mov negb cmc push mov push xchg dec lahf sbb popf add lahf outsl inc repz mov jno add sbb repz nop sti (bad) mov lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp enter es mov cmp stc cmpsb cmp sub lahf adc pushf or outsl das push cmp mov pushf aas lahf rcr xlat mov bound xor lock jbe adc and in sbb hlt aaa movsb mov sub out sbb xchg mov rolb xchg lea lock and dec imull add inc push mov jnp add (bad) and fucomi pushf test pop pop lods popl test fcompl scas iret enter arpl jmp repz inc psrad push inc (bad) pop jns cli sbb idiv fdiv jb dec (bad) shr popf stos scas and inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xchg lods aad sbb mov cmp (bad) aas xchg (bad) xor add clc adc jle mov pop mov adc sarl adc cmp test jecxz mov or shll sti fwait iret mov fcmovne inc mov icebp loopne stc jl mov adc or push in push dec lds xor aaa fs mov jbe negl inc inc in scas adc cwtl cmpsb aam rcl (bad) out ret cmp lock (bad) pop repz dec sub push mov mov loopne or scas sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call inc mov or les les shr and dec push push loopne lcall adc push and je mov arpl aas or nop int3 xchg jecxz pop rorb (bad) sbb lock push sub cmp scas lea sti mov in pop loopne mov js push (bad) mull xchg (bad) mov (bad) mov inc (bad) les push mov mov adc pop or add test scas imul test adc test jle xor push fisttpl divl mov jbe (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cmp jb adc and push in fcoml jo ljmp insl out into pop or add fwait sbb cmp cli sub inc push push cmc clc dec dec daa dec je hlt lcall (bad) addr16 xchg iret pop jge test xor push fsubs popf pop push mov in pop sub add fdivl inc pop out dec push lahf push pushf cltd adc lret cmp lret add xor push lock and int3 dec mov call aas jae sub pop jp mov sbb or lret int loope stos mov add add dec adc mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push and push aam sbb jbe subl ficoml dec dec dec add push js jnp repnz (bad) std cmp xchg lahf outsb fwait je or test cmp add pop cmpsl cwtl popa mov imul lret arpl lods sub jmp or add inc mov arpl dec pop inc pusha scas fisubr xchg hlt sbb popf xchg push adc cmp clc scas jns (bad) sbb inc ja cs (bad) lock ficoml daa push push cmc xor dec adc add in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp sub into incb jl scas sti sbb mov jmp adc push sub pop or and cmpsl or jp add shl mov mov jne (bad) jmp mov mov push inc scas inc mov jge mov jecxz xchg aad jae std mov cmp xor dec gs rcrl and mov scas sbb mov lods (bad) aam inc sbb loope aas lea fidivr add out mov jno testl std pop ret mov scas cmp stos xor mov jne sbb mov push jge ja mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl int scas inc js pop sbb (bad) mull dec xchg sub stos aaa inc sbb or cmp mov push punpcklwd adc nop lods lea pusha scas ffree insb inc testb pop movsl ret mov mov jmp stos sbb in xchg add es ds mov xchg insl mov int mov dec imul hlt cwtl sbb inc repz icebp cmc (bad) lahf into gs mov (bad) xchg push aas or aad frstpm(287 repz xchg mov rcrb add sbb dec and cmp in (bad) mov repnz jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push mov sbb mov pop das sbb jns stc sbb mov sub daa bound adc jno mov add in cwtl sbbl inc cmp xchg mov xchg xchg jg adc xor (bad) loope out (bad) mov jle ss lcall push sbb sub push cmp sub cmp dec pop adc sahf pop jp movsl lcall fisttp pop sbb and iret popa dec dec rcr aas pop push bound push cmp cwtl adc add fcoml iret and mov cltd int3 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call pop xchg add xchg cwtl adc inc cltd scas in xchg cli js xlat pop cmp pop xor cmp sbb and mov xchg and inc loop mov ficompl add out cmp lret cltd cmp dec push jmp hlt fptan fucom (bad) ja dec leave jae jnp lds fwait hlt int das and lea inc add push test lcall iret dec and or mov nop xchg xchg sub mov idivl les and inc inc adc xor mov adc cmp inc sbb stc and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov in push inc mov pop sub or push loopne mov (bad) xchg or test mov add je jle int fstp cltd pop adc adc outsl mov mov pop pop pop movsl push (bad) or cwtl mov (bad) jnp inc sbb popa sbb jp xchg ret lahf jmp or dec ldmxcsr sarl incl pop (bad) (bad) xchg and fimull (bad) fcomp or push nop mov imul icebp pop iret xlat pop imull imul sub out push sar inc hlt jb aaa in and mov imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp cmc repnz imul gs jb adc dec and jnp nop shll or pop test out lock mov adc jae mov popa sti inc jle sbb enter push sub insb xor sub mov dec xchg imul sahf mov js cmp inc dec mov pop add jmp aaa mov xchg adc icebp add mov inc out jmp and adc mov xlat add pop sahf dec xchg fwait xchg mov inc jb mov pusha popaw or rorl cmpsb cltd mov cmp lock sbb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov xchg mov xchg pop jo in jae sub push loopne and xor imul pop xchg xchg pop mov xchg js lahf leave pop cld outsb xlat dec stos cmp mov mov (bad) (bad) pop lret push das movsl or dec xchg adc jb cs sbb pop mov mov xchg mov sbb dec cmp mov pusha fwait out xchg lret add outsl adc push jns xchg lea jno jmp into xor das xchg pop dec out clc pop daa dec push ja jae in pop out jo sub sub pop pop fs inc push gs (bad) mov add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push icebp inc rcll adc inc sahf jecxz movsb dec cmp je test or add data16 fwait xchg sbb and push push jle pop push mov push sbb mov push and out push mov cwtl inc mov lods int bound aad sub dec xor jo out repnz les (bad) aam clc jb inc pop repz mov xor test mov movsl push lods clc ja xor mulb sar cmp rcl and gs out cmp or les arpl in jnp in pop movsl nop popa pop inc add lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp inc sub mov lcall ljmp dec add dec mov (bad) ss adc xchg imul and mov add ljmp sub pop aad test xchg xchg dec adc sub mov cmc adc xor cmp stc cmpsb xchg cmp jae (bad) shll data16 aam stos in adc loop dec int push lods push gs or lcall (bad) loop pop shr jnp xchg push xor lock mov add ds jbe or mov outsl nop inc jns lods cmp cmp push lds (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl scas incl std stc jns inc cmc mov repz hlt inc push outsl pop xor xchg les pop adc xchg add xchg pop cmpsb idivl jno ret rcr popf loopne sbb push out jg jbe hlt (bad) fwait inc push cs insb or std repnz aaa ret sbb pop push lods jecxz lcall in or sub leave pop mov sbb stc es fwait jp mov sbb lcall mov and lcall mov dec imul sub dec or pop fcmove divb inc nop jae fsubl shrb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl dec xchg aad xlat xchg (bad) cmp sbb xor sub push push out mov lock jae jb ror jle or pop sbb out cwtl negl insl jl mov or xchg loope in adc sbb rcrl mov lea cltd lods test pmaddwd (bad) outsl aaa mov mov inc nop ljmp push lret adc push shr in nopl (bad) mov fdivr mov pushf push cmc add fidivrl repz movsb jo fstps pop mov sub mov and cld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jp push iret dec jle lret lods or xchg fimull nop xchg add mov mov adc jb mov out cmp pop push pop bound jnp xchg cmp in clc lds xor cmp repz push insl sbb daa sub jg popa incb in mov test lods js int cs pop popa cmp jp adc sub (bad) xor repz jbe mov mov jg int pop les mov inc ret xor lahf lahf mov rcll leave jbe call cs xchg int3 outsl sbb push mov out into push outsb outsb inc repnz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call pop jmp fnstenv xchg js xchg fdivrs lods repz or ja stos daa push cmc adc sbb addl cmp add imul ret xchg xor sbb jg ret and mov in aad bound fwait mov mull (bad) insl clc pushf stos dec cli (bad) ja or lea inc xchg hlt ja jbe aam mov mov pop notl cmp jmp sub dec (bad) xor or aaa add call push sbb mov test mov shlb mov inc mov jae adc cmp test add pop dec cs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti sbb fmul mov pop pop or shrb mov mov out ljmp into cld insb mov mov or popf movsb lcall aad sub ss fs fwait dec xor mov out ret cltd das (bad) addr16 jmp icebp in pop lock xor and dec into adc or loope mov fwait mov ret xchg push (bad) faddl sub sbb cmc or and fstpl fildl push fistl cmpb xor inc push shrl sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc arpl into sbb inc dec incb fisub mov push xlat mov mov push pop push jmp fidivl cwtl rcll or sub pop jbe jle and enter sbb inc popf arpl add dec jns test in lods icebp std jnp xlat in mov push jl push xor jae js out enter mov pop pop push mov push cld call leave pop xchg and and in cwtl gs pop or adc pop inc mov jl fstpt mov call xor and jae jbe imul call xor dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov push mov insb pushf mov cmp sub and jle cmp (bad) daa adc bound nop sub push sbb jne ja mov cs xchg pop (bad) cmp jne aas ret or aas imull mov push pushf sbb push cmpsl mov popa lret jge sub jmp push ret (bad) jae jge xchg mov jg mov shrb aam mov add xchg push mov (bad) xchg out fmull and lret push (bad) (bad) fldenv stos repz xchg lret stc movsl lds out aaa mov mov push outsb lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl (bad) xlat mov mov js sub sub dec repnz dec pop in sub andl (bad) adc js cmp (bad) cmpsb adc insb xchg ljmp add gs xor int3 test sahf test out repz sarb insb leave push dec ljmp inc inc or popa add mov xor adc (bad) jo nop dec jb inc icebp mov addr16 outsl or fcmovb clc sbb (bad) push test sti out (bad) imul sbb mov cmpsl adc dec andl mov outsb out pusha inc pop stos insb add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xor or xchg scas arpl int3 repnz (bad) faddp jecxz xchg (bad) jae jbe ret sbb sbb imul and or adc sub sub push int dec lock and adc add mov scas fldl2t fadds das (bad) call sub dec popa jp into fwait pop mov mov int3 push rorb inc cmp es (bad) iret test push js mull dec pop int3 cmp nop mov nop aam cld push je movsb mov pop inc (bad) call outsl scas inc fsts lret shr in fsubs movsl pop sbbl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl addr16 pusha xchg lods push insb push ret stos push sti lret xor repz pusha sbb (bad) or cmp cmp and push cmp xlat pop fsubr (bad) imul push sti inc and push mov add xor sbb xor cmp push leave dec sarl outsl add out dec push pop ret xchg cmp stc cltd inc push lock dec mov pop arpl push loopne dec sub fwait orb cmp push cltd sub dec cmp mov nop loope scas jne bound mov sbb push popa dec aad fcomp ret pushf int jo mov cmp jno sahf add (bad) enter (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov sahf jnp mov adcb push lcall popa popa ret or fisubl add data16 push cmp mov lahf fwait xchg call out loope adc fcoms rcrl dec dec insb aaa dec mov pushf cmpsl push mov jnp push lods hlt scas lea mov mov imul aas loope and jbe subl test mov inc ficompl lods jecxz jle or and repnz pop icebp fwait pusha aad push push data16 repnz insl mov pop lcall lods mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp adc in push pop or aad lret mov outsl (bad) icebp push jne push call mov sbb dec sti call xor push (bad) lock fildll inc inc sbb xor sub jns cmp movsb add xor daa cltd mov cli out xor push xchg jne es insl mov mov int3 imul addr16 ljmp pop loope pop ja std mov cs dec cmpl push mov mov push jl mov scas rorb outsl cmp repz jmp jg lea sub in sbbl or jns imul ja mov call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl cmp mov cmp (bad) push decb or and sbb mov cmp mov test mov (bad) mov and mov adc fisttpl mov imul incb sub mov dec mov lea mov shlb xchg mov xlat fidivr es popa xor (bad) push (bad) cmp sbbl add inc push and xchg fstl pop lock xchg sbb jge cwtl pop insl push popa push mov mov pop ja pop aas (bad) aaa jno xchg mov jbe stos mov jg mov call mov push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc pop inc dec and lret cmc mov mov add push fs enter xor sahf cmpsb leave xchg test (bad) jnp mov (bad) xor adc (bad) mov pusha insl push test test and fnsave aas loope ds xor int3 clc fs xlat mov pop cmp jmp jp pop inc pop jg lea enter cmp cltd out cmp je push lret jmp dec mov icebp mov jbe (bad) adc shll lret mov cmp fcoml add adcl fnstenv pop andl inc add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in add decl dec std (bad) (bad) fwait xchg leave jl out adc lret and (bad) sub push mov ss xlat dec sar dec fdivs cmpsb dec lcall pop pop clc nop in and aad push lret inc push jmp inc cmpsl or lcall fdivrl fdivp sar add and pop cmc mov rol cmpsl shrl sub push (bad) rclb and je dec or out imul and dec std or cwtl mov in ret push sub (bad) in sti pushf ds fldenv adc gs xor int pop sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sbb ret sahf (bad) xchg lock jge aas mov adc dec ret imul cmp aaa pop xlat xor outsl sbb sarb cmpsb fistpll pop dec mov inc in xchg lock mov outsb jo sti dec jae rorb adc lcall lods mov sahf (bad) leave sub pop push and shrb ja sub inc mov xor cs mov stos push lcall jp out push sub mov test int3 sub inc insl jge inc ret icebp (bad) fistl imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc fucom pop mov sti mov iret mov dec or imul sbb xchg enter stc mov xor test stos sarl sbb dec shrl lret xchg jns js adc aas in fsubrl xchg out gs fstl xor pop push mov xor dec mov aas fs cmp fild mov sub (bad) (bad) je push and out jmp rcll xor jb rorl mov rcrb idiv add cmp mov shrl cmpsl pop lahf and popa push das cli or push pop js out sbb rolb out fdivrp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp jmp rol mov pop decb sub ror faddl add clc inc pushf xchg push pusha pop mov push cmp dec aaa testb (bad) sub mov cmp test pop push jmp stos ror daa dec (bad) fs fstps mov aaa xchg adc cmp (bad) pusha insl es adc pop arpl add lcall and lahf es cmp push xchg inc sbb (bad) loope xchg enter cmpsb add inc xor outsb insb mov mov mov shl repz push pop fcos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sbb mov cld dec stos add mov (bad) rcr push push insl (bad) cmp out sub je xor or xchg jne cmp jmp dec mov test movsb repnz cmp inc sub ds arpl mov pop or jp push xchg test mov aad pop test mov jecxz orl cmp mov int cld sbb jne outsb lcall xchg xlat mov dec push sub lahf dec stc xchg test hlt pop mov movsb or adc fistp nop stc dec xor dec repnz push jne in out or mov push adc idiv (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp and (bad) pop and fildll stos repz test vmread pop sub cmp jbe adc std mov lea xor and std cmp dec in mov std add push lret cmp xor adc jge fildl dec mov push mov dec movsl sti mov (bad) cmp xorl cwtl adc in push inc pop or xor rcr lods pop sub rcll dec xchg jp inc push inc mov mov lcall stc movsb inc adc aas aas ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call icebp (bad) push ljmp push mov push faddl mov mov data16 xchg push out cli sub sahf (bad) jae rclb cwtl sti je cli mov or mov jecxz mov cmpsw rorb sub dec mov mov or inc mov add ljmp cld add dec pop out in cld jae int3 cmp imul fxch jb xchg xchg add nop pop das push lret cli loop fsts jg stc lcall dec sbb push mov mov jae sbb shrl jnp mov push cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov leave insb mov cmpsl and ret popa je cld jge test sbb lods aam pop jg ja nop cmp imulb xchg jle sbb call popa inc sqrtps xchg lret push cli (bad) pmaxsw int3 xchg jl pop sahf sub jae ja jmp dec xchg jne cmc or test stc mov adc in dec push or push sbb out inc pop sti out ss jmp aam jecxz cmp xchg cld dec ss lahf mov insl adc cmp gs lret shl xor or in js (bad) sbb scas jbe (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc cs pushf fldenv (bad) test dec mov sbb or (bad) mov movsb xchg mov stos xchg int3 cli xchg (bad) mov push xchg mov mov (bad) jne push lea hlt xlat mov sub adc inc enter mov adc pop daa aam ds push jmp cmpsb mov rclb and in aad push inc ljmp push test sub movsb insl (bad) mov out mov (bad) xor js les int loope lcall out mov sbb aas push push scas daa loopne push mov (bad) int3 xchg pop lret (bad) ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl inc in sbb sub rcr push xchg sub jge fcoms sub push cmpsb jb lret xchg sti (bad) cli or jmp sti cmp pop cmpl inc popw or mov push pop xor and je sahf jae sbbl or fildll mov outsl sbb fild imul jbe loop arpl loopne push xchg and lock stc dec sarl out dec fild xchg push push lret sub xor (bad) mov and std adc orl fs xchg fisttpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl pop xor inc in xchg into adc fwait mov dec pop push mov in xchg into inc (bad) je sub mov insb push dec mov mov mov ss out jno,pt mov lea push pop imul mov out aas pop fsub push xor and les fstl sbb xor inc mov mov push adc xor aas mov add and jns shrb out lock jmp pop push leave jno jmp out pop es mov and jo cmp xor bound jns cli fstl aaa daa fwait insl nop ja cmp cwtl pushf mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov jne sub fisubl lcall inc (bad) les dec in in or gs mov or sub jae pop out aaa cmc nop adc cs add pop mov pop insl fwait stos or xchg insb xchg jae push leave jb adc je sbb bnd packsswb mov mov ret int jp repnz xchg sahf and paddsw mov jl xor aaa arpl jl mov rorb lahf (bad) jne es push mov pop int3 (bad) lock inc sti scas inc sti jg jns bswap xlat dec lods imul adc (bad) or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp daa cmp push cmp lea cmp adc aaa mov jo add cwtl xchg mov ret sbb sbb adc shll aam cmpsb and mov push test gs lea loop cmp and mov dec std lds inc mov bound shl adc pop and inc and out insl (bad) or cmc pushf dec pop xchg mov flds adc dec adc mov lods (bad) mov mov push xchg in or xchg mov bound movsl scas adc scas insl sbb ja dec sarb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call call cmp xchg (bad) test out rolb inc push or test ret lods fsubl sub pop mov inc into fdiv pop pop popa or movsb and xor mov fs leave and dec inc (bad) jmp cmp mov sub sub xor cmp cmp scas aas inc pop imul movsl xor scas add hlt sahf repnz fwait push cs cwtl and (bad) stc pushf popl cmp xor rcrl mov mov and or jnp imul mov out jbe add jbe jl (bad) mov cmp sbb jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp movsl cmp nop mov xchg cs es (bad) (bad) adc sarl aad out and add and daa fistpll dec fistp add iret (bad) nop mov in or push popf jnp mov arpl lds and and test dec in jle sub stos add daa lods jmp fwait cwtl adc imul pop cmp and bound mov sbb jb lret enter jecxz out ud2 cwtl mov mov jo or push addl cmp les jge,pt sub or int3 aaa jecxz jge push fistpll std (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl sti (bad) bound outsl cmc jb lret sbb or aam aaa sahf imul push add inc fwait lahf mov or pop xchg push aaa jbe push mov lret mov cmp mov test dec mov sahf mov (bad) test jo ljmp inc cmp je iret shlb dec and daa inc addr16 lcall dec add int3 sub insl fsubl sub xor fbstp rol out add mov gs or mov adc jmp mov adc cmp lods jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sub lea mov cmp loope xor xlat jge sbb ret lcall mov int3 outsl add mov xor into loope lcall mov xchg add lock or jmp inc mov sub jo adc mov cmp jg jge loope pop dec dec test mov scas mov adcl jecxz mov cmp push (bad) daa mov aam (bad) cmpsb jl in aam outsl xchg inc mov leave xchg lcall rcl push ss xor jne add dec daa jo ret add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl xchg or jae xor or push push test fimul rcll (bad) iret and fnstcw outsl lds xchg movsb cmc or arpl shrb sarl sub sti mov in xchg jno xor cmpsb mov cwtl repz into je (bad) lret mov xlat fcmove loop cld (bad) mov imul mov adc xchg cmp xchg sub loopne add ja lods daa ficom in loope or (bad) jb push push dec dec push mov jl cmpsl or stos adc icebp jge inc mov ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov sahf bnd test lret cmp and adc add mov sub or push pop jge push xor lcall fwait push (bad) lds jno ja jno inc das adc enter ret pop and pop pop add stos mov add jmp shll repnz push scas mov in adc (bad) cmp jge out in lea sub lret push mov dec clc dec insl call push or lock andl adc jbe mov mov bound xchg fs mov fmuls push sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl xchg jmp dec xchg ja pushf lcall add sbb out jge jg mov in fnop jne or cmp sahf in sbb sbb iret es adc fnsave movsl scas sahf push inc xor (bad) inc mov mov stc stos jbe cmp or fs cmp std and jns ficom xor nop adc sbb mov mov shrl cli adc or (bad) popf rclb cmp adc ljmp push fwait (bad) rorl xor or out push push xchg jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out mov xchg mov sbb clc or aaa repz pop pop jbe pop mov loope mov push lret imul movsb stos pop mov lea jne aas es push sbb ret mov jg movsb mov (bad) rclb scas mov xchg jle sti jmp inc inc lret adc jp mov fwait in inc popf inc lret cmp lahf push jb int dec iret test pop jge push xchg aaa std inc or out fwait jne cmp sarb cmp add cs xchg jae ds cli jg cltd push (bad) lcall pop mov cwtl dec stos inc cmpsl bound pop mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc xlat jle in notb pop test ljmp (bad) leave push xor out dec add jmp jg pop daa mov insl fistp pop mov in push sub xchg aam enter movsl mov into lods rcrb and sub sub and mov inc jle add fstps push mov or adc ss (bad) mov sahf pop movb (bad) mulb sbb push negl jmp mov out add mov pusha xchg or aad mov push xlat add fidivr add ss sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl imul ret xchg sub nop js into pop lods ss movsl loopne jecxz mull rcr pusha out rol nop cmp aam in movsl icebp addr16 in cmp notl into jg lahf inc es xor loopne push test xchg push and xchg hlt out and inc repz (bad) dec jne push je jg push jne sub jns enter dec push shl pop (bad) mov loope je push pop jb mov dec push popa mov ret fistp cmpsb jae in sub imul pop sbb jg or std int3 inc ret cltd cli or movsb lahf push dec cmc sbb and xchg add dec sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xor fisubr add cmpsl pop fimul inc add out ret add pop cmp (bad) jns in cmovl push mov dec in push insl push cltd inc mov cwtl mov aas mov inc mov mov cmp jle or nop fsincos add popf pop aaa push cwtl pop add test cltd in push mov into (bad) (bad) enter jp fbld lcall outsl sub mov mov push cmp (bad) aam jo inc push popa mov inc int push test fisttpl cmpl hlt mov pusha push pop bound int pop scas call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out add xchg stc pop cld and dec aas js repz sub scas lds mov aaa jl add loop rol cmp into mov jne xor cmp dec leave pushf fiaddl pop add or lock in out cmpsl rorl and je add stos mov cmpsb push scas mov (bad) or mov fbld leave int3 mov jns sahf mov fs pop stos jnp push mov (bad) loop cmpsl inc push xor cmc mov gs push fcompl ret add iret xchg lcall sbbb repz pop cmpl fidivr das pusha push pushf (bad) movsb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jo xorl addr16 fnstsw pop pop (bad) lret je out sbb icebp mov lods cltd daa test fstl dec sbb mov mov rclb inc enter dec ljmp loope mov mov sub jmp pop sbb inc addl sahf push xor jno stos xor pop out mov adc adc cmp push aad loope incb fwait daa pop divb js popl inc jno (bad) out sub das jl pop or adc (bad) call arpl in pop out xchg dec push jb jle push imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall aad lock or and pop ret fwait lcall mov mov xor adc lret (bad) xor roll xchg clc gs lret pop sub (bad) int sti imul mov adc jecxz movsb lock and fistpll and sub jbe lret sbb sahf inc lret cmpsl ljmp xchg xorl push lea xchg pop outsl aam or nop sub mov add and and out fcmovu cmp xor push push mov int3 (bad) mov xchg mov or leave arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl cwtl inc pop jns sbb mov jbe dec mov inc in mov add fcompl fcom dec push fcmove sar popf jg adc mov in ljmp ss fwait jl hlt jbe sbb or xor jae mov std inc fstps das je test cmp iret rcl pop add xchg mov sbb dec sub in imul enter pushf jnp mov outsl and xlat pop xchg negl std push inc bound aas gs mov (bad) stc and loope adcb jns cmp jns jno pop pop xor test pop mov pop icebp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in adc aam push into or adc outsb xor int inc fcomps mov mov and adc sti test js arpl data16 call imull imul or cmpsb dec test cmc mov mov mov push ficoml aas xchg push xchg sub repnz cli bound and jae lea in pop icebp loope lret rcrb jnp insl addb mov lods test sbb add jecxz sub int push cmp das out sbb pop mov xor jp push jg jecxz adc mov sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl sub mov mov movsl outsb and fist jg cld enter or pushf add aaa add xor pop loop stos leave out or ja out add je stc int pop (bad) (bad) xor add or out mov cmpl mov jne mov jecxz out jmp out (bad) dec xor in push test imul inc adc lea push pop xor dec shlb jno mov ret push dec pusha mov pusha cmpsb mov test jns,pt cld and xor or jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call dec cmp test out std add cltd inc aas or xchg sub sbb mov std push xor or mov jle inc shlb int adc in pop and ret clc and and mov fdivp bound add mov push and or (bad) lods outsl sub imul mov outsl (bad) enter in orb pop jns out xchg dec sbb cmp inc mov inc pop sub insl adc mov out test xor ljmp cmpsl aam push mov dec shrd lret jmp xor jg rclb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl out scas inc in inc dec roll outsl xor movsl inc sub sbb mov pop mov int mov scas insl imul movsl add cli inc xor and fwait inc or sarb jmp jns mov mov aam mov into push pop add mov ficoml decb pop adc dec lock pop pop sti mov xor or stos add lods jle mov xor in testb add daa lds call rcrb (bad) inc jl stc add in imul push dec repnz mov add lret pop cltd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp or sahf std test inc xor mov inc adc cmp out data16 inc xor sbb lods in (bad) fdivs mov xchg adc push or xchg fidivl jno bndldx fwait jecxz mov insb xor adc add cmp pop mov dec pop add mov xor cwtl in iret pop sbb dec fidivr mov mov mov insl fisttpll outsb cltd lods subl ja fcmovnu bnd jmp jle popa leave sti mov and fs outsl sub add xchg or je mov testb inc jle sbb jns (bad) (bad) insl push rcl test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call das xchg jmp xor gs fcoms mov sub aam (bad) sub pop addps cmovnp cmp xor hlt fstenv fldt mov xchg mov pop and out daa fisttpll inc jp sub (bad) fnsave sahf out cwtl test adc pop dec pop call add dec addb stos mov imul aas dec xor (bad) mov add movsb inc repz push data16 sub pop (bad) and xchg mov jg dec subb xchg ljmp clc push pop or sbb (bad) out jns push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall or jmp dec scas lahf lret (bad) insl popf xchg bound nop inc xchg xor fwait inc pop cmp lock test and xchg insb imul lock cmovno cld stos lea dec out ret aad mov call add xchg jno enter push jo inc inc push sbb pop push cmp xchg push push dec je mov clc cmpsb lret xor push aam int mov cltd or stos and out adc jae movsl xor mov xchg ret mov mov dec (bad) mov cmc pop fwait pop xchg push push lods idivb jo (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp pop (bad) arpl loopne xor lds fsubr sbb xchg loopne in jmp ja loop or adc sbb adc repnz into cmpsb sub sti mov mov jb lock push ljmp dec sbb (bad) jae aas pushw or push jmp cmp lods mov jb push dec pusha aam mov pop mov daa ljmp iret mov rcrl xorl jle lret test xorl push push lods mov jmp and ljmp inc out out mov js sub add jne adc push popf js lea repz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sub leave scas aas mov add jmp jae fidivrl mov cld cltd jae ja mov jno icebp inc adc out push cmp int3 mov push push inc rol in jns rcrl mov lahf push pop jl inc pop inc pop lahf jbe clc jecxz,pn test test xchg adc dec std mov sahf test and and mov fdivrs fwait and divl sbb cmp pop pop ja,pt sarb mov imul mov add lret cmp sbb xchg push imulb cs sub in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl loope aam jne cmp call std push inc cmp jg and jne clc and lcall sbb push jo or jp dec and imul xlat mov xor scas cmp js (bad) (bad) out mov out (bad) jns stos xor add (bad) inc pop and popf sti jno sub jo fstpt pop iret cmp cmp or jae mov (bad) (bad) and push test imul inc adc ds das out mov aam outsb sub (bad) sub fldenv cmpsl cwtl out scas idiv pop jb das mov fcmove cmpsl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov out xor inc test and pop inc sbbb addr16 adc in rclb scas (bad) outsl adc xchg imul popa jl out sub jnp (bad) je dec arpl or sbbl fwait inc xor sbb xchg sub xchg mov mov ds jg sub or fimul test mov dec les vhsubpd std rcll mov aas fwait mov adc mov (bad) mov mov adc pop sbb pop sub aas inc pop mov das sbb jno das and mov cmp sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov enter push mov cmp fsubrs pop xor test sub xchg cs mov leave je ret mov jge inc jno xchg jno movb cmp mov int and mov scas hlt push sub mov ljmp out aad (bad) push in pop imul cld mov push xchg push sub (bad) pop mov sbb mov daa insb les adc shr sub push mov jbe aaa out xor dec fnstenv mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall stos push (bad) xor das les subb sti dec mov ljmp and add loop rcl outsl add mov sub push insl push out sub push sbb add cmp mov lret inc push cmp push mov (bad) mov ljmp out pop (bad) bnd adc xor push and mov lods cltd and bound mov xor (bad) pop jge pop rorl add mov xchg test aam (bad) mov sub inc repnz and add sarl inc sub mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall pop and or popa int3 mov sbb cmp notb popf sbb xchg inc pop cmpl xor je inc mov int3 dec fsts mov push mov push out lahf rol cmpsl mov cld xor add cltd test push jp popa gs xor es or out mov mov and mov add xor push mov call push scas mov lahf jbe pop cld add cmpsb clc jg leave mov pop dec das and add or push (bad) ss sti dec arpl aaa je mov into (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fcomip addr16 adc popa jnp jae loope xor or push int3 lcall jno adc lods rclb das sbb push mov ficomp test or mov add sbb dec sub movsl fist aaa adc inc mov inc repnz icebp rolb js mov arpl xchg jmp sub add dec dec aad xchg aaa imul hlt inc adc out lods jg daa subl mov push pop lds push movsl inc sbb rclb dec repz xor jle fcmove add lock xchg pop cvtps2pd mov cmp test mov or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call scas ds shrb lods aas sti adc scas pop sbb (bad) sbb xor adc inc cmp jbe add outsl movsb sub inc dec das push dec sbb jbe dec lds fsubrl out sbb adc sti fs in stos add bound clc aaa (bad) repz icebp test lock xor mov stc jle add insb or mov push fs movsl or xchg xchg insl lret jns lds in and add and adc fist cmp or addl arpl mov jmp jp sbb sub mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl out xor sbb dec dec xchg into data16 push mov data16 push dec (bad) aad stos jae pop dec dec add jae dec pop push sbb push outsl jno add jle out pushf mov in xchg xchg orl push outsl hlt je inc addr16 jbe daa sbb scas mov sti mov pop xor int mov or repz dec xlat addps std jecxz cmp mov adc inc ret dec (bad) dec mov mov insb sub or cmpsl gs mov adc mov movsb out lock adc push push lret je sub pop stc sub rcrl push dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov out inc sub cmp (bad) (bad) cmp jb and repz xchg fnstcw adc adc gs call add test mov dec jecxz sbb in iret mov pop push sub or lock mov lcall xor dec fsubs imul loopne std frstpm(287 pop or or ret sbb jge scas aam arpl imul and les xor sbbb pushf mov inc push inc sar add xchg push add inc jo xchg jmp sub sub pop arpl cltd adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl stc dec out fnop or das push xor jnp lods lods dec lds inc lcall sti inc loope add ja pop mov inc sub xchg lret sub out test sub or (bad) fsts xor aad (bad) pop sub jo pop push jne xor aam std sbb in xchg mov lcall xchg add xor lcall adc imul lahf mov out into xor xor ss adc (bad) and pushf xchg cld jbe cwtl leave push and xchg xchg add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall pop mov xchg sub clc mov fwait (bad) sbb lds fisubrl pop in mov (bad) js pop and sbb inc int cmpsb (bad) lods imul loop dec rcl adc adc ret (bad) (bad) std in cmp stc lcall jmp call fist cmp push scas out and inc xchg xchg mov gs cmpsl mov inc in sbb lcall aaa dec mov cmpsb mov rcll inc (bad) mov or mov insb inc int cmp mov mov in lods jmp inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp ja out mov cmp jp adc dec mov cmpsb and pop ss jle jae jns sbb gs xchg and ficom stos out es test fwait jns jmp out xchg lods xchg stos xor xchg jbe js sarb popa adc xlat jno cmp mov rclb lock or std in icebp mov add and xor adc jbe sub addb sub mov enter cwtl push psubsw into ljmp pop lret mov cmp sub popa pop pop ret mov xchg js and jmp dec add sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push adc cmp pop int3 xchg sub sbb mov cmpsl rcll dec movsl (bad) cmp xchg mov sub sbb es mov adc ljmp dec test jmp jmp in or aam add jecxz dec pushf bound jns repnz out sub lret mov lock bound mov (bad) clc loop or pop int3 xor or repz dec pop cwtl les xor pop clc push sub test loop lret mov leave mov adc xchg lock (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl dec adc add popl jg pop xchg dec into mov hlt pop adc cmpsl jmp and jnp inc repnz push (bad) xor iret push loop test (bad) lcall out cmpsl movsb lcall stc mov mov mov cs pop out ret lret push mov je mov push gs mov sub enter in mov lret popa push xor lods xchg mov subb and test cmp cld adc sbb sbb inc mov scas insb xchg sub mov ja lock lea sti adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl gs dec pop jmp xchg fcmovbe mov test xchg daa mov lds jge (bad) xchg scas ret jmp icebp test out and jns mov sarl (bad) jbe jmp or shlb mov shll fstpt (bad) or rcr inc and xchg rcrb cmp mov rcl add mov lock (bad) mov push popf sbb fwait inc mov dec ret mov mov imul push cmp cmp cmpsb ss lahf pop movsb hlt sbb jle dec pop inc add xchg or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jne xor push jle (bad) ficompl jns repz ror scas je xchg mov rol (bad) rcll or lret mov pop in mov jae sbb cmpsl jl xchg das xor add inc fxam xor hlt data16 (bad) hlt ja loope fdiv push daa inc ret push mov xchg stc mov push jp dec cmp outsl js mov cmp in dec inc xlat leave mov cmpsb ret or push icebp clc xchg xor addr16 notb sub mov xchg enter mov pop mov lods pop pop jmp dec aaa pop jmp aas je jo xor popa andl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl std ss cwtl bound cld jmp jae xchg inc rcr inc addr16 jecxz imul or and sub stos (bad) lock enter int3 xlat fdivrl cmpsb push jnp xor repnz jg xchg inc push (bad) loopne cwtl xchg cwtl xchg loopne pop (bad) sbb rcrb loope and pop mov in fsts mov dec xor jg fisubr fist scas cli lahf les data16 jae adc cmp mov xchg (bad) int3 sarl shl ljmp dec das push xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov mov cmpl test mov insb jbe ret cmp data16 jnp repz xchg adc jle sbb pop inc stos xchg inc inc xchg inc ffree jl jbe or xor imul dec dec add pop daa xchg (bad) pop imul mov (bad) jno fstl pusha fildl cltd adc lea (bad) in popa and xchg lock sbb push (bad) cltd lock adc cmc ss rolb push jge hlt mov mov ss xchg test cmc mov cld xchg push out jle push fwait sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl in js push lods sub cmp repz cwtl ret push fild dec push aam aad enter xchg fstpt add pop cli insl out sbb xor (bad) push mov dec aas roll das (bad) aaa push scas xchg jo repz sub mov sub rolb adc test jns icebp and pop inc bound jb hlt xchg add cmp mov jge mov aaa dec test pusha test mov dec adc js sbb insl daa cli les push add xchg rclb lods call ja add lea or lea or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call and cs stos into xchg fiadd sbb adc repnz jb aad dec leave inc jge imul xchg xchg into xor and movl adc inc add xorl aaa out jl dec add into xor ja mov xorb lahf loop add testb push mov and jb push xchg aad jb in pushf lret and mov pushl lock imul ja jg jns inc iret jle mov scas pop mov aad mov out mov xor fcmovnu push or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall in or inc sbb in (bad) lods scas mov pop test (bad) jb push outsl sbb pop dec mov gs push stos cli (bad) pop adc fidivl mov mov jo mov push cwtl in sbb imul add push (bad) fnstcw mov mov xor push and mov out cmp inc jle ret add mov bound popw loope gs mov jnp shrd out jo out dec mov scas pop jnp mov into lock sub jmp jge xchg fstl sbbl push loopne cmp or pushf inc out outsl pop aam (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp ret call cmpsl lods lock movsb mov mov popa clc pusha sarb addr16 fsubrs mov fimul in cld bound (bad) stos loop push fmull fimul fiaddl nop lods xchg xor pop xchg jne (bad) ficoml push mov mov lods mov mov lods inc mov sbb or movsb call dec lods out add mov lods outsb cmp andl seta daa bound jo nop fcmovbe lea in or daa or roll mov test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl ret sbb push les xor pusha push mov cs mov and scas movsb aad xchg inc jmp (bad) sbb add out or push add jp cmp mov jnp xor loope mov and xor dec adc insb pop jmp xor jb ret adc hlt out sub pop jle clc out mov adc adc jecxz gs xor aam out arpl pop mov sbb xchg bound jo xor add push xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) fadd xchg fwait push insb cmc je xor jecxz and dec or mov (bad) fxch cmp lret lods sahf dec push push in xor (bad) cmp adc cmp adc push push pop mov fisttpll push jle lcall xchg or pop pop ss imull push mov leave mov subl ds popa in movsb mov cmp sub push movsl inc es in loopne jge sub push inc adc pop inc lock les popf int3 mov mov out insl mov mov cs movsl shlb nop xorl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl pop cmp xor notb mov dec sahf mov push imul inc push adc inc sbb mov push mov jecxz jg lock imul shll xchg sbb pop lahf sahf and adc movsl jp rcrl in outsl sub int movsb mov dec mov addr16 icebp nop push rcll rcrl movsb jnp imul int3 lahf lret or (bad) ja push pop int cltd mov or sub fld add xor ss cmp push add mov mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call adc fnstenv jl adc add loope mov test jge (bad) out imul or popl push cmpsb sub adc xchg cmc mov aad dec (bad) loop pop sub dec push (bad) daa and repz aad mov es adc adc pop pop test sbb fwait js std sbb dec sub lret adcb js cmp js xor bnd ljmp fild call inc rcl inc or dec mov sub jmp sub fsubrp or imull mov mov cmp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl ficoml cmp test popf out jb imul push mov and push nop arpl xchg aaa dec pushf orl xor cmpsb inc add mov jbe je jp mov clc cli push lods cwtl icebp roll sub add dec cmpsb mov fiadd xchg int or aam or gs xor testb push and pop jb adc cltd das adc add mov loop aaa xchg scas inc xchg loopne js negl mov out pop add loope dec mov and insl ss aad daa mov pop cmpsb xor bound push (bad) ret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc aaa iret mov xchg mov sub mov (bad) cld xchg xchg outsb mov mov fisubr cwtl (bad) pop xor fistl clc into pop push movsb mov mov lret jge into int3 push dec push stc mov repnz leavew and xchg mov lods sbb lds outsl leave mov fmuls cmpsl cwtl js aas adc sbb test mov out scas scas out (bad) int3 mov out out sub loopne lahf arpl in push cltd das xor cld jmp dec lcall in dec repz test test mov jae (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl sub pop and mov fbstp (bad) fs adc dec (bad) xchg xor out in in adc stos (bad) int3 pusha repz jae jmp aam sub cmpsl jno mov mov sbb leave in dec inc sub cmp jp fsubrs repz fs roll cltd mov cli outsl fisub jne sbb je cmp loop push xor push movsl ja adc xor fistl cmp push cmp push mov mov cmp lret mov fnstcw pop sbb es stos or fisttpll inc je (bad) adc pop in adc mov daa imul push rcrb inc dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov (bad) xlat daa or movsb pop imul dec push das xor cs mov sub fs aad aam sahf xor xchg mov xchg leave call xchg daa dec mov jbe jns xor inc outsb mov (bad) repnz lds cwtl pop call push xor cmp sarb (bad) jbe stos ljmp pop (bad) or jne push stc jl adc xchg sbb sub subl dec pminub hlt xchg and sbb ret stc or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov imul mov jno jl lods mov push or dec mov jg fwait mov inc into jae mov add jg jns out mov xor orl mov lea and xor xchg sbb loope in pop inc sbb jno out mov sbb mov add roll call push ja mov xlat sub push jecxz imul mov dec xlat push es mov cld ror dec cwtl inc and push ja adc movsl dec call insb adc inc mov xchg popf mov (bad) jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec sbb ds in in out int or sbb cmp dec push fs fdivrl jne iret mov fsubrp rorl dec pop or xor jmp nop and adc adc jecxz lcall pmuludq cmp cmc (bad) xchg int xor clc pop inc and pop sbb test aaa xor ficom es cmpsl cmp cld jle repnz adc cmpb fldl lds jmp pop repnz mov es lods or movsl push mov add sti sbb inc jg adc testb ret jmp (bad) mov (bad) outsb mov fucom (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call dec out iret lds fildll hlt xchg cmp cmpsb push inc mov cld enter sbb popf pushf pop lret loope lcall ja frndint push nop or lock mov addr16 cld insl iret jb or jae (bad) lret aam frstor out (bad) sbb xor sub in rorb and int3 les xchg add nop push add pushf sub inc test aas xor jbe sahf sub cmpsl push data16 movntps add pop int xchg sbb test addr16 xor xorb cld mov or fs xchg (bad) pop adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp rcll stos mov (bad) dec (bad) int3 pop xorb pop enter movsb xchg push lcall dec fcomi incl jg (bad) dec jb add in insb (bad) push jae jl inc jle inc and add sahf repnz pusha (bad) aas sahf xchg aam lock push push sub cld sbb popa push push dec sbb out lret xchg sbb ljmp inc nop lret xor leave test testb shr mov shrb xor mov jecxz std lods xor jle gs jl push aas dec xor and mov xchg or cmp pop bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall cmp xchg aaa lret pop dec inc insl mov arpl cmp (bad) xor xchg and add mov stos subl mov push out mov sub (bad) xor jge sti mov loopne pop sbb push bound adc mov (bad) lock jnp inc jo inc mov xor out xchg test test in mov pop movsl jecxz lock iret aas clc pop or fistp (bad) hlt xchg aaa mov inc sbb lahf push push das or (bad) cmp divl shl bound dec insl add ret push ja mov jge sahf mov test sbb ret jecxz imull add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl out out test sbb cmp inc mov xor jbe lret scas push jg sahf mov iret lret enter ja js sbb test daa bound mov rcll sub pop cmp cli adc pop pop dec sbb mov mov pop push push inc lods por insl std rorb push fstpl pop test mov outsl insb cmp (bad) dec in scas cmp imul pop popf in out lcall in xorb sarl xchg mov sub rcr add in (bad) lret lds loop pop xor sub pop (bad) jg sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov inc scas mov mov js hlt and xchg mov iret clc xchg call aaa out sbb lods daa mov mov mov and cmp dec mov cmp in cmp inc lods (bad) fsub insb mov popf or and outsb sub out data16 pusha pop jns push and les stc imul stos test shrl in and sub jge in insb daa (bad) mov jae push adc push ss jp roll cmp test jge rolb cmp xor sbb and (bad) aam or lods mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xor ja or push or int3 ret iret xchg rcrl xor mov aas mov sti add (bad) jp sub popf and and (bad) js mov push addr16 out or jns out mov pop je mov and add aaa dec sbb loope orb (bad) fs cmpl mov insb daa push push mov js (bad) mov xlat jp aas enter pop adc mov ljmp cmpsl adc pushf dec sbb dec or fisubrl in mov aas or repnz mov (bad) std pop or das adc stos cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp push sub dec inc and lcall enter push dec fwait hlt sbb jmp rol push push jno mov jp mov fcomps mov (bad) js fst inc jecxz (bad) imul dec incb ret dec not (bad) mov jl jns inc test push pushf push push addl xchg fucomip pusha push mov fidivr jo or das push pop ret imul cmp lret push mov in push rolb inc cmp mov repz mov adc cmp or stos mov add ds fnop mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call repnz dec cltd fs jo jecxz adc out not push jge jne shl das pop movsl inc mov mov mov xrelease jecxz out sub sarl add inc shrb pop adc cltd pop cs jge fnstsw test mov push ret std loopne xchg add addl ret mov mov (bad) lds jno add fldcw xor sub call push ja jo pop test sbb xlat mov es mov sub mov movsb enter testl mov cld das leave fcompl test push gs sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl inc rcrb lahf xlat pusha inc mov sahf popf inc and cmp push movsl xlat sbb or mov popa fld fs mov pop adc pop jno addb scas jmp mov jnp mov fiadd push adcl push mov add decl inc in cwtl cmc (bad) (bad) jbe inc pop out lea mov mov push xor in pushf mov popf pop (bad) xchg fwait xor mov sbb jl pop les out jne outsl inc fcoms jb cmp dec mov repz (bad) jns fistpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sti fisubl or xchg push in scas repz add inc arpl notb scas xchg (bad) pop repnz out sbb imul pop xor (bad) arpl jno mov add movl add insl test inc sub xor inc mov pop je sbb push jb pop adc xchg sbb popf ffreep add push mov pop sub xchg in fstpt popa push repnz inc (bad) mov into inc jnp fcoms push out pop mov lret mov and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl cli push leave xchg pop pop dec rorl xchg dec fstp adc movl je rol xchg bound repz jno iret and mov stc cmpsl insl jne fiaddl cs shll cmp xor int3 cwtl mov lds (bad) mov ja or mov or xor jae push push ror into arpl add xor mov popa and inc in mov (bad) jae outsl in mov outsb icebp cmc movd sub pop ljmp add stos mov fwait or jns jmp jbe jle (bad) xor mov lds or jns and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl cmp movsb jmp fcomp adc movsb xchg repz inc xchg prefetch xchg js idivl or adc or dec push test and adc mov ljmp cli add inc in sbb sub lods mov jp repz xchg lea sub mov call fildl (bad) lods fsub out lods (bad) (bad) incl fwait stos ror fwait jbe mov mov das push cwtl or imul rorb push addr16 rolb andl movsb (bad) xchg xor mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl and push stc cmpsl xchg notl in xor pushfw jns add orl stos test pop and xchg sub insl cmp andl pop mov pop ret lods xchg jno cmc sub inc cmp (bad) jno (bad) jne stos ror fldt push jb pushf (bad) sbb jns sti aam das test outsb xchg mov jb outsl aad inc push std int3 jne mov add mov stc out dec adc out inc or add icebp inc sub pushf outsb or fiaddl pushf pop sahf outsb jge data16 inc mov jp jmp out adc out jg mov fmuls out out jg dec arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl jnp sbbl gs pop subl out ljmp outsl mov inc sbb push jae mov ljmp out mov mov or adc pop push and jmp daa call mov aaa and ret pop movsb pop sub dec subb xchg fild xor outsb ss jae or jns jb aas dec mov cmp loop lret addr16 adc mov sbb lret adc mov pop xchg and pop imul stos inc dec inc inc jge shll stc mov jbe push push adc xor push inc sti push jecxz inc adc pushf jns mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec jo mov inc sarl jecxz inc arpl pop sbb (bad) mov cltd xor (bad) push fdivrs and addr16 add pop sub imul cmp lds pop bswap sbb ljmp in push lea imul cli inc fmul inc loope roll into jp (bad) sbb jo,pn arpl insb pushf (bad) pop push sbb imul icebp imul hlt add cmp pop push fcom pop ret sbb mov fwait leave data16 jle mov pop insb pusha xchg dec (bad) add jne mov or and loop mov stc sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall std lret mov repz jg (bad) aad rol sbb add pop xlat xchg inc xchg adc mov ss out fwait movsl mov jp pop subb fildll stos add pop xor sbb mov test rcll fld movsl cmc adc (bad) sbb or aad push jne scas jb sub and mov fs dec or popa lock pop or insb push jecxz add push aaa outsb jg test jns xor inc (bad) jle dec and sub pop sub xchg inc pop fldenv rolb lret sbb popa (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl fldcw les xchg pusha sbb popl dec jl insl xlat push (bad) ret mov lods repz xchg xchg ret cli test sahf jo gs in ret cmp pop gs repz inc ljmp in xchg lods sbb xchg dec inc inc jp jne fcompl call adc jbe sbb jbe xchg insl ret and push fwait ljmp or dec xchg or in dec aam dec aas orl inc repz pusha push xor inc insl sub enter loopne aaa fdivl jge,pt mov pop mov cmp push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jle (bad) mov js popa fcoml dec fwait xchg (bad) cmpsb test ljmp les cmpsb or fwait sbb rclb cld inc sbb and xor (bad) mov pop jo rcl cmpsb cmp fisttp xchg adc and fnstenv push add cmp stc push fnstcw push icebp and sub and daa stc inc adcb xchg iret sahf xchg cmc ficoml jns daa std add cs (bad) (bad) cmc insl int or fldl xchg imul inc pop sub mov jbe xchg jge adc in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc mov movsl push fisttpll sub test xor lahf jmp insb test jecxz (bad) and sbb pusha lods loop pop aaa dec mov into mov rcrl stos jle push jecxz mov leave or (bad) mulb mov add repz mov je ficoml jb mov nop dec xlat (bad) sbb dec push ljmp fisubl mov insl insl pop fdivl rorb mov jge cmp or sbb push dec push daa xchg jecxz cmp xor sub rcrb mov sbb (bad) jmp (bad) cmpsb notb (bad) retw push aaa loopne fidivrl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl cli es mov push ret inc add fs (bad) repnz fisub clc and lods (bad) leave add aad push sti je inc push or sub mov mov outsb lea jo lahf jl popa and adc daa pop movsl push mov mov xchg inc xor jb push mov (bad) fistp xchg cmp std xchg pop xchg cmp out dec das xchg lods mov mov mov ror es lahf cmp loope (bad) adc dec adc push cmp inc lods (bad) pop (bad) adc dec mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov bound daa cmp mov mov xchg popa mov hlt sub sti pusha je in cli cs or cmp jecxz ret jge (bad) adc mov cmc insb cmp cwtl dec dec and pop lret ja rolb pop sub shll mov pop test mov enter mov ret mov ljmp dec cs dec in stos les jecxz mov fist jl cmp cmpsl aam fcmovne pop lret sarl insb or data16 shrb test jge xor mov inc push test mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push mov sub aaa adc out mov adc fild sarb add inc insl rol es (bad) cmp js adc or xor mov add aad cs sbb push in loope mov or mov mov push insl adc and pop adc cltd outsb imul inc enter ret rorl lcallw mov out xchg jecxz xorl push rcll lahf push iret and xchg in push rcl gs movsl loope std aaa push cmc pop pop scas xchg sub lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp adc out int sub and sbb orl inc dec inc (bad) pusha das push or mov push into cs xor mov dec and sahf lcall jae lcall jno mov into test test dec test mulb or xor lret ds (bad) pop lods inc test stos int3 ja jnp dec jns inc sbb jbe push dec iret mov daa push shrb out xor xchg daa scas jnp loope xchg pusha fisubr xchg jno mov inc into std cmpsb stos jbe inc add cmp repnz f2xm1 sub push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl das sti scas push fcomps notb inc (bad) aaa jbe or push gs add lds xor jns dec sbb out sbb adc in cmp sbb loop adc jecxz lcall bswap fimul ss jecxz cwtl repnz shrb in andl adc mov cltd dec loop push pop mov pop jns insl sub xchg dec or mov mov xchg add test mov or scas or push or pop mov fstpt inc mov insl adc jl and dec fisttpll mov ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl and inc push pop into sti je ss mov cmpsl das add mov xor xor mov adc int lahf jp (bad) mov xor jg sbb push add sbb inc sarb mov cld sti dec repz out push movsb inc cmpsb inc adc mov lahf push lret sub fistl scas roll ret xor ret mov sar call cmp in cmp mov (bad) fs adc fiaddl jbe test sbb lods js mov or sbb push pusha mov inc dec jl clc cmp push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call fisubr add cmp call add dec adc test xchg mov mov mulb add pop mov sbb add outsb add xchg dec dec inc movsl or sahf outsb pusha push sbb mov enter gs jbe dec sbb subl sub lock and and mov rcll sbb popa or add lods xchg push mov mov sub jmp imul jb jb push les jae orb sub adc cld aam push data16 mov cld das dec cmp xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc xor stc (bad) and mov popf xchg fistpl in lret stc js rorb outsb scas pop in into add mov mov movsl and sti mov pop push fidivrl addr16 mov jne dec daa mov or jae or iret sub or lcall loopne aam outsb cli cmp add push lds test jg fsubs aad sarb and sbb rolb xlat inc dec (bad) push imul (bad) icebp repnz (bad) (bad) fwait out jg xchg xor sub ljmp mov nop fs inc pushf jl outsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xchg push cmp and add adc mov cwtl dec test adc in das sub cli lret je push sbb mov enter leave cmpsb jle ja out sub pushf je (bad) jbe adc popa jge fistl adc cs pop loope jnp aad clc cltd push fcomi jo sub mov push fidivr orl popf rcr xchg dec fistpl dec sub xor mov inc (bad) jmp pop sti aad sub call add inc js int3 ljmp push sbb pop icebp or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc cmpsb mov movsl cmpsl addb push fdivrl stos leave daa out mov mov lods scas pop ret int3 and mov xor pop test push jecxz push or addl jne pop inc jbe jo push or rcll mov notl sub pop mov xchg popa sub inc stc sarl mov and mov pop xor dec divl insb xlat stos int3 cli pop jle mov bound push ret scas sub jnp jbe pop xor cmpsb rclb data16 aad stos ss jno gs add mov cmc sahf jg imul cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xlat cmp adc push push aas sub es xchg mov fsts adc aam pop insb aad or and data16 rcr mov cmp sahf and pop scas idivb scas or cmp fisttp call iret adc cwtl out test dec mov test lcall add pop popf cmpl xchg mov insb lret in or out addr16 sahf cmpsb sub xchg enter mov in inc (bad) jb jae in dec out cs cmpsl push test jmp sahf dec xchg in dec mov ss cmpsl repz popa jl int mov pop mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call iret add jle std inc bound in push loop test sub iret cmp sbb xchg loopne int3 and xor imul idivl sbb inc gs inc inc addr16 xchg pop adc dec dec cld mov pop add mov and loopne repz push das loope sub cmp (bad) cmp push sub dec mov push stos popf and xchg xchg aad aad aas mov repz ror lea jge pop bound sarb cli pop enter lea xchg inc mov mov idivb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov xor icebp xor xchg hlt cwtl push push pop in popf loope mov or or pop orl lods pop adc pop pop add scas xchg mov data16 out nop stos pop fdivrs je scas addr16 loope lds mov add xchg in aam in stos pop addr16 test pop add sbb fsubrs pminsw shrb xor sub (bad) xor adc jb dec cmp jg sbb test adc xor pop adc mov in xchg rclb inc push (bad) (bad) jo cmp jg fstpt jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl shr push dec and push movsb sbb in jne nop jmp nop or push outsl or mov icebp sbb cwtl shlb inc out daa push xor cmpsl fistpll cmpsb and sub and popa push mov pop and or insl insl inc or pop addr16 lar shll mov cmp mov and movsb cld xchg add ljmp (bad) and jo test insl stos add aam pop pop das ds xor inc mov stos push add xor xor fucomp js xchg das iret outsl dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov and pop (bad) lret fwait adc ret jle and lret data16 mov pop mov loope arpl out mov int3 lods cmp ds sub mov mov cmp aas loop mov pmuludq mov (bad) aad imul sub scas in cld shrb or icebp mov pop stos lea or dec cld enter in cli mov xchg xor mov cli ljmp insl dec enter push jle,pn mov add push clc pmullw pop add int3 pushf add std into cli (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp pop (bad) (bad) cmpsb push pop movsl push sbbb sbb sahf xchg xor cmp cmpsb mov push xlat leave add cmc popaw mov mov sbb je ret cwtl sbb mov aam inc pusha lea test xchg mov jl (bad) mov orl mov daa push jmp push pop fistpl pop (bad) bnd out add cmp xor rcr adc loopne cmp inc mov lret loope inc ret or pop jno and popa call imul sahf out pop cli lods popa in mov js repnz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivp bound push xchg sbb negl xchg pop lds stos jp mov push lar mov or test jb dec (bad) out inc fsubrs (bad) repnz dec idiv js add jge dec std cmpsl outsl jle outsl jmp rcrl je xor add ret or call clc adc in sti xchg jbe fsubp inc rorl cltd outsb gs divl cmp inc add mov fisubr int or cmc scas dec push movsb outsl adc jmp ret mov jns shr mov mov xor repz xor sub sub imul fist mov std (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push sbb dec cmc sbb pop adc or push imul inc ret repz jbe sbb data16 (bad) dec shr jnp add jbe add aam mov loop dec pop cmp fs fiaddl mov sub push call push adc mov adc add idivl sbb out daa ja in sub mov jge test jecxz lea mov sub out or cmpsl hlt xchg pusha or clc xor cwtl imul loope and movl pop cmpsb push insl lahf outsl aas aad repnz mov inc mov dec scas and lret fsubrl out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp nop cmp daa lods pop sbb imul ljmp lahf aam push jne mov in (bad) mov inc rcrb fcoml jns cmpsb sub xchg rcrl fsts jnp (bad) jns dec xchg jns dec inc mov mov inc pop xlat mov sbb stos adc mov loop bound daa xor pop dec dec dec jp cmp dec ja xor adc jne mov push hlt push in clc pushf xchg mov (bad) lret data16 push and stos movsl sahf ljmp movsb xor stc imul ret and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xor mov je sbb xor push mov in xchg mov jecxz inc cwtl adc add lods pusha fwait loope test mov dec push mull imul inc gs jo mov sahf into jp clc push hlt and lret cs addr16 xorb xor in pop add sub imul xlat xchg data16 or pop dec je btr cli stc jo sub mov inc jp cld xlat sbb mov jmp cmp jae xchg fs aam call leave cmp aam out call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl sub and pop imul jmp shlb rorl xchg mov mov sub (bad) addl cmp pop mov movsb out push mov dec lods push movb mov hlt mov jmp xchg push jmp enter or insb dec (bad) mov push rcll jge inc cmpsb call push test es fistpl dec cmpl call xor cmpsl pop lret mov xchg in mov sbb sub subb lret imul mov lock and xorb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl lock sub popa push xor pushf jnp in cmpsl std push mov adc hlt lock pop sahf xchg xchg jp jbe dec psubq mov fcmove std jae (bad) xor pop mov fadd xchg out ja (bad) mov sbb repz adc mov xchg push lods xor movsb inc fwait dec loopne inc psrlw fdivrl pop pop xchg mov mov std cs ja xchg fucomi pop or dec mov addl pop sub xchg pop daa outsl sub pop mov out xchg in pusha rorb inc sbb pop mov adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xchg xorps leave xchg dec mov cmp and xlat dec stos movl push sub pop xchg add lret lds divl inc add (bad) mov sbb mov inc xor addl dec push xchg mov iret mov adc test jmp or sbb loopne sti stos xor bound add sbb lahf or sbb mov cmpsl lea push sbb xorps push out in pop fs xchg aas ja fcomi inc fs sub jecxz jbe mov mov ret into cld movsl ljmp sub stc das mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall cltd cmp xchg shrb repnz push or fidivr mov dec jb in aaa cmpsl aam idivl hlt push mov inc pop sub scas iret or fbstp cmp cmp pop lds into popl or cmp cmp sub outsl mov cmpsb adc push adc insb push lock pop sub add sub sub cld cli cmp push (bad) into scas aad into pop push sahf xchg add and test out cltd xchg lea ds pop push sub inc add shrl mov bound das jl sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp fdivr imul ljmp scas sarl insl mov jle cltd out xor ja add xchg ja sarb pop cmc dec je lods and stos aaa fsubr ds xor in je xchg enter stos mov clc mov mov mov rcrl aas cmp jno inc gs sti add idivb repnz addb out sub sbb test sahf scas ret dec fbstp pop out mov dec sarl out test (bad) nop clc (bad) sub inc cmp (bad) sar push inc jl jle mov xchg fsubs sub jb lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl aam add bound cmp cwtl stos outsb insl mov and test adc mov imul adc xchg jl push jbe jb cltd ljmp sub xchg jns cmp int inc ror xor add adc mov inc je mov push popa sub lods sbb shrb repnz dec pushf sub jmp push pop fdivp jae cs data16 loopne lret out (bad) dec (bad) pop popf pop sub pop and repnz ds cmpsl push loop not in ja fcomps inc jb loope test push cmp sti xchg add iret subl lea (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call ds call addr16 sti cmp (bad) pop movsl js push popf jb push xchg or add fs pop inc xor rorl out addb xchg in add ss mov cli les shrl mov out and or lods sub hlt popa test cmpsb in and sbb push lds inc lret cmp xor rolb xchg (bad) cmpb fimull add aad es xacquire add xor jo sbb daa in subl repnz adc dec mov lret push hlt aam out sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc movsb pop xchg insb and movsb sub out push lods and adc (bad) jp ret (bad) jbe push fsub cwtl dec sub pop mov ljmp insl mov cmp adc jb sbb mov flds jg ljmp nop adc sbb sbb (bad) push (bad) and dec es test adc out sub shlb jne test cld (bad) loope cmpsl mov jbe aam or and and fidivrl inc loope into xlat push pusha fnstenv cmp call cmp fidivl inc inc or cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl adc push mov cmp mov xor mov iret stos jno cltd ja dec mov test mov pop mov adc loopne test sub int mov ret dec add adc pop jl adc cmpl dec push xchg jno pop sbb jle std push pop pop adc adc lea mov jo adc sbb in adc dec shl pusha fwait push xchg pop inc in ss ffree xchg pop daa jg sahf fs push jns adc mov imul (bad) ss add xchg test jmp jp leave add cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall and stos sbb xchg mov or sub push sbb mov sbb lahf cmp mov les inc cmp or ss lcall dec insb repz repz lock mov js push add test (bad) or (bad) jge loope test leave nop repnz push sbb enter mov or or stos enter in daa jecxz mov repnz push outsl lds xchg fisubr dec lea out xchg in ret insl lods cwtl (bad) js mov inc push xchg hlt sarl sub loopne test fsub insl std mov jg xchg pusha iret sub inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) js pop aam xor insl mov jl xor sub arpl inc adc add loop jbe data16 hlt mov dec cmp jle das (bad) rcl (bad) mov (bad) mov ljmp incb shrl or js sub ja pop fstpt mov dec sbb jbe,pn and mov pop mov hlt clc jg mov outsb add (bad) mov je jg fstps in add lret dec mov push or (bad) popa fs lock or fwait aad inc andb cwtl or jns ds sti mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall or jge jmp lcall hlt insl mov mov jnp sbb pop mov pop out mov das cmpsl gs adc xor mov xor cwtl aam test push sub adc mov xchg sahf sar xor push mov rorb popa dec dec pop pop pushf or out mov or aaa fsubr aad pop jp sub mov inc clc (bad) or arpl mov (bad) jl xchg sub adc (bad) in scas xchg jns inc push xor fsubs out inc sbb mov addr16 test pop lret (bad) cmc in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp outsb into cmp mov (bad) jmp dec test scas xlat pop out adc xchg sti iret in push add sbb mov mov ja loope adc sub xor repnz orl push adc fmull out call test fistp notb pop out lretw enter ljmp sub mov mov test ds xchg sub and sub jbe mov into adc mov inc sti and dec push idiv ds push movl mov sub mov or or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl cli and xor dec xchg xor clc ret mov ljmp xor mov fsts out in repnz ja loope repz int js adc mov xor outsl xor icebp and add dec jg fidivl popf add test push ret xor add xlat es push mov arpl leave or dec mov pop and mov mov or ljmp cmp movsb cmp daa (bad) xchg jmp lock push mov mov xor lds iret pop (bad) jle cmp push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jecxz lea fidivr cltd fdivs bound repz imul lahf mov and push nop or out call lret popf pushf (bad) push jge inc hlt lock jg (bad) ftst mull inc inc adc shll scas jge jns lret or xchg sbbl and dec pop fcompl int xor ds pop xor mov popf mov sbb (bad) idiv jnp mov dec jae xchg out cmp out idivl push jge sub cmp push std mov cmpsl ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec jl add dec test jno outsb mov fisttpl dec es fmulp mov xchg jns inc jno repnz (bad) ret push xor es (bad) pop jbe jne inc mov fnsave push jmp pop cmp pop ss mov and sub in scas nop mov xchg mov data16 add incb mov mov dec mov xchg cltd push test das clc sbb incl fidivl inc sub lahf xor mov mov xor push test fidivr fs add inc cmc (bad) adc out and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jbe leave pop inc enter out sub rclb mov fistp fwait ja jmp and fs push out and hlt pop push cs cmp sarb bound mov dec aam push push mov mov sahf negb fistpl loop fisubl xor lret cs jne and cmp jae loop rcr pushf cltd and loopne stos inc xor dec outsl mov sub xor leave lret jg adc mov add push in xor insl mov je mov adc pushf add push adc jmp push rol (bad) jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld and and dec dec push adc ret (bad) aad mov cwtl push mov mov or lods cltd mov jg test imul fisubrl add add loopne clc fcoms xchg ljmp cmpsl test xor push jecxz lahf cmp adc data16 pushf or push es mov sub push dec mov push push lret sahf dec subb xchg mov add sub dec loope cmp dec pop xchg mov leave imul mov (bad) xchg dec sub pop pushf out xor in repz fsubl and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call rcrl je jns pop pop or aam jne and add xor cmp inc popa xchg push inc push sahf cwtl sbb fmull or (bad) push sub push xor inc movsl jno pop fldl mov pop (bad) sbb das repnz xchg repz pop and in pop shlb add movsl das mov xchg jns loopne xlat sbb (bad) loop out pop repnz outsb pop test jbe outsl sarb sub or jae pop and loopne mov push int dec mov xor stos jo (bad) xchg and cltd aam lds cs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl inc pop xchg add gs mov mov xor (bad) inc adc sbbl lds inc test or mov stos cmpsb lods repnz fsts rcll idiv cli push (bad) div cmpsb out movsb push inc gs dec cmpsb jno callw dec jg imul pusha cmpsb dec and fs (bad) ljmp sti pop jmp test jae and enter rsqrtps adc push mov fninit (bad) int int3 mov subb lock mov add adc dec in out sub push fsubrs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp cmpsb sahf ja ljmp outsl cmpsl jmp out jno sbb ja mov pusha push push sti icebp stos lea cmp pop pop pop sub cmc orl mov stos and shl ds sub ret lret out jnp mov cwtl out dec sub pop push fist sub adc ret cs in jecxz sub sti jo (bad) mov mov addl loopne iret gs sbb les jge push or shlb shr mov dec test lds or xchg sub add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp js sub xchg pop pop imull dec add lock or (bad) idivl mov mov repz ret fs push lcall das cmp data16 adc xchg pop jp xor scas ja test xchg dec loope sbb or pop xor jnp popa insl iret loop out mov clc jo adc xor imul (bad) leave mov shrb adc fistpll fldl icebp loope fs mull inc pop lahf push or in xchg clc cmp pop pop sub lods or (bad) jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xor push outsl push pop push daa mov out daa or into lret jmp ds jne cmc ficom test test (bad) fisttp in xchg (bad) negl adc scas mov cmp insb adc mov mov or and js daa lret inc dec xchg mov insl idivb mov daa rclb fwait cmp arpl cltd jns pop in adc ret mov or sbb inc mov or test adc cld int3 inc out push ficomp sbb and cmp iret fs mov dec (bad) mov add xchg push stc and pop and lock (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xor nop sub pop (bad) in hlt sub lods lods ret sbb inc dec pop mov mov jp iret lds stos jnp push pop fwait jne inc pop lods int ret test dec and dec mov sbb aam idivb cmp dec push mov xor lock add mov outsb mov fwait cmpsb cmp xchg or (bad) negl loop adc mov hlt repz mov ret fcompl dec pop fild incb mov and lea lret mov add xorl (bad) pop out test push mov jecxz dec gs jno adc push ret je (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cmpb and loop (bad) dec cmp jo mulb jp xchg jno xchg test jp and add (bad) lahf or adc int add lahf arpl call (bad) push sbb push hlt mov inc data16 hlt sbb rcr hlt lock xchg in inc movsl scas mov mov (bad) dec xor lock or fimul push inc loop sbb dec sti push cmp pop push repz sub insl nop fdivrl push push mov xchg (bad) out insl ss xchg aad adc pushf push jmp (bad) mov inc leave scas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl (bad) mov and outsl dec pop stc and orl mov jne mov ret inc and ret xchg in mov pop xchg mov iret push mov xchg ss stos cmp adc pop dec ret aas test cmp mov xchg xchg adc fist mov mov cmp cmp fimull test aam xor and dec (bad) inc incl xchg (bad) xchg add sbb call subl imul ds push mov (bad) outsb add jbe sub mov pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp push xor sub ret test cmc jmp fsubl popa mov and sbb bswap fs in nop fstpt fwait lods out pop pop push scas div or ret rcll cmc jg add stos xchg in dec mov or jp mov cmpsb add fildll cmp (bad) mov mov test fst rep notl popa sub test xchg jae push imul dec mov leave dec inc aas mov rcrb jne adc or adc sbb popf and jb in (bad) jge push lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl rorl ret sub jmp adc js mov mov addr16 push or mov nop cmpsl xchg mov mov xchg inc lods and pop add or mov sub jp fs lea xchg cwtl testl scas outsl pop adcb mov icebp pop xor scas notl icebp (bad) loope cld jmp xchg pop or sahf aaa movsb or imul xchg (bad) jg loopne nop sub add data16 aam (bad) mov fs xchg fisttp mov jecxz loopne (bad) lock enter mov sbb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl call mov add sub in movsl out inc int3 hlt popaw (bad) xchg cmp inc pop ja insl cmpsl aas xor xor jnp sbb inc sbb neg sbb mov shlb lods sbb adcb dec sub mov xor xor add or subl dec es rol sub sti jecxz hlt (bad) xchg (bad) lods insl jmp insb out mov mov mov adc les lret shll mov jl (bad) xor mov mov pushf cmp ficompl cmpsl out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov shrl xor (bad) xlat cwtl arpl adc xchg scas push sbb sti push clc dec arpl cld fs and popa and sbb shl xlat inc stc sbb cmpsb or pushl pop shrl lcall xor (bad) sbb add sub popf das outsl iret fisubl inc (bad) push repz insb rorl and lods sbb jecxz jge cmc divl dec mov xchg loopne les lds mov mov sub sti repz pop inc push jg jp and mov inc aad (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sbb rcrl and jg shl sub test push xor sub pop push mull int3 inc lods popf mov xchg lret jl and or pop push lahf cmc lahf push (bad) add and rolb pop rcrl jo (bad) and dec mov sub pop stos jecxz dec sub push mov shll std outsl xchg pushf daa inc push iret jmp sub test sub aas jae or imul inc inc pop ret jg push clc mov (bad) sbb loope mov sarl cmp scas (bad) ds (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall rcll mov jb pushf xlat jp test adc movsl sbb iret fisubl jb sbb mov inc mov in add xor add sub test lea mov push andb mov inc adc ja pushf sbb or mov cmp sbb dec arpl adc je mov add cwtl (bad) mov decb mov pavgb sub xchg or jmp loopne cmp mov add imul sahf mov sahf jae std pop xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp push into xchg outsb adc mov xchg mov xchg repz mov fwait mov (bad) mov ret fmul and sub jg adc flds gs jmp rol std paddsb mov jl test das test cmp push fbld sub push sbb (bad) fimul clc mov adc jo mov jl add data16 in mov lods cltd lret push std and xlat mov in cli cmp (bad) aad outsl mov lea mov push mov bound daa stos jmp mov outsb je pop push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp int3 and cmp loope rorb mov pop sub push rolb mov jmp popf adc xor mov mov mov testl jl jl fildll mov cmpb ficoml test stos mov lcall sub add mov sar pop or sbb call lret sub enter icebp (bad) push or add pusha movsl cltd ljmp shll stos inc (bad) push iret dec pop pop hlt cmc push and jb addr16 divl insl cmpsb vpavgw aaa je jo sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jns pop imul pop lret sub movsb inc fisubl jmp loope sbb pop outsl add test aaa cmp xchg es (bad) mov xchg mov js in push fcmovne fcoml mov test dec add and outsb dec inc inc xor les xor clc movsl stc fdivs sbbb sbb ljmp fistp dec pop pop outsl add dec add inc popa inc (bad) and das cmp (bad) sbb leave lea bound gs aam push cmp insl push (bad) adc enter xchg sub enter xchg jns pop push (bad) dec sbb xchg jo lock add stos cmpsb fbstp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc jb out hlt jecxz push cmp add int3 xchg clc fidivrl aaa js jp push cwtl es inc (bad) aam lods jmp mov movsl in fstl push sarb cmp dec fstps lret or test jmp pop cmp cmp outsl mov movl icebp cmp incl dec dec cmc adc lods es xor ljmp in in cmpsb andl xor adc fwait jle cmc add out imul loopne cwtl cmpsb stc and jae mov mov inc pushf fwait adc decb daa aaa push and lret test roll mov push into or int3 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl inc pop mov jb subl loopne fnstsw lret xor mov incl and dec icebp js stos sub rclb lods adc test xchg aam les test les jnp fisttpll aad cmpsb mov dec les test in push jmp lret jmp sbb lods rorb dec push roll out add rdseed inc pop sub jg or jne cmpsb out shl outsb and jb in xlat or xor adc mov out out lea xchg out arpl or cmc dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl stc outsl shl xchg sti jp fisub lods mov lret lods and call fsubs inc cli pop into adc jl out pop lock out aas (bad) sub sub push mov adc adc (bad) jl push cli ffreep (bad) shrb push xchg insl call or fcomps inc pop int3 inc sub je mov (bad) and xchg (bad) popf daa pop outsb pop and push decl (bad) icebp fiadd sbb sahf mov or cmp loop stc repz repz xchg rcll pop lods jb jp xlat push fstpl or (bad) or mov out pop dec push add into iret fidivl sbb out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl daa out loope je xor test fwait in mov cmpl mov data16 mov cld push xlat mov js std xor pop adc sahf (bad) pop xor test repz insl jecxz aaa mov xchg cli adc lahf rclb or dec cli jb popl aas sbb jbe enter mov stos loope push xchg in imul mov mov push es pushf mov rcl pop lahf stos pop movsl cmp mov test (bad) jns scas xchg pop mov test jo lea jno mov in mov mov pop add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec icebp scas add push or iret fdivr popa lret js add sbb shr or mov jmp mov pop xor pop sub rorl fistp out (bad) aaa lret cs xchg insb add adc cltd cmpsl sahf int outsl inc clc or and push inc mov push std cmp mov ds push stos push test mov adc jns das out notb fs aam and sbb inc jg cmp mov mov xchg jmp dec arpl mov adc cmp jge sub hlt cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov pop test idiv insb aam mov scas adc xchg in jnp (bad) pop lret mov sar test outsl scas dec aad mov cmc push stos sub (bad) mov xor or push pop sbb sub add push iret xor mov mov and mov daa in push fsub jnp into inc push lcall and repz xchg imul push mov jg loope in mov movl rorl lret mov push je lea push cmp jnp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp lahf out int3 push or cltd scas cmp adc and dec xchg mov mov loop nop add add lods (bad) sbb (bad) aam fildll and mov aaa das xchg push push in aas dec mov in mov loopne pop sub mov mov jne test jb mov les push dec test cmp adc push js ja mov fist dec mov ret cmpsl pop test adc xchg sub jmp js jmp fldenv xchg ds loop insl push or es sarl sub imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl leave adc ss mov add (bad) out mov push sahf mov mov imul mov and mov pop test test stos mov cltd or repnz or pop dec mov out mov dec int cmp shlb rcl lahf sub xchg dec cmpsb insb loope and sbb add push pop nop jp and xchg push sahf fs (bad) imul lret (bad) lds in sbb loope pop or or mov lods das imul or sub repnz mov mov int3 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall test movntps (bad) ja xchg and adc dec jle mov dec lods inc cs cmp repz lds imull jne and sbb out pop and mov or fcmovnbe test mov int3 jle test mov mov (bad) pop test xchg cltd (bad) popw daa push xor fs sub xlat add dec push fild mov mov mov sbb lret mov pop jae popa jb lahf das ficoml loop mov test fbld push cmp mov push add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp shlb popf stos cmp lcall pop mov sub mov lret xor fidivr jle (bad) cmp push cmp jne fisubrl adc and push xchg sub or test xchg and rcr gs jno stos nop mul loop aaa scas orl addr16 sbb repnz jmp leave ret mov jl xor lods pusha push adcb sub pop dec mov xchg in xchg repnz lret icebp hlt add xchg xlat xchg je xchg mov imul scas sbb in rcl (bad) mov call iret inc xlat adc pop scas sarb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall push movsb vmwrite mov cmp xor cmp inc lock push jle dec push call lods xor movsb pop dec arpl inc sub clc sbb sbb inc ja and lahf and (bad) xor imul jb fwait movsb rcr sbb xchg in loopne dec mov test cmp push push mov xor aas out jmp mov sbb mov and int mov mov mov mov data16 jmp sbb pop sbb inc dec cs ret mov sub add mov sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall idivb aaa aaa test mov mov iret je xor push mov xor mov (bad) sub pop pop adc mov sbb cmp jno jo jne push aad lret lcall (bad) pop mov push repz mov add cs test pop (bad) add mov xchg nop fisttpl pop xchg hlt rorl movb popa mov lods ss and rcrl add and and push je push fdivs mov mov jecxz ror arpl adc popa hlt icebp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jns pop aas xchg mov adc jae inc pushl (bad) ds jg scas inc addb mov push inc into aas adc clc pop add jge,pt mov xor int3 sub in dec push out mov sbb xchg mov les mov mov cld jne dec mov and movsb ljmp cmpsl push or push test mov inc add add pusha jecxz cmpsl push push adc das mov cmc out inc out xor (bad) idiv nop test gs and mov clc adc cmp (bad) in xchg popf ret and orl dec xchg cmpsl adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl into out fcmovb scas adc loope mov xor pop (bad) push xchg mov push pop dec loopne bnd add mov adc xchg add jbe mov lret dec out or push mov and add xchg jg jecxz fisttp (bad) mov add cwtl lret test ss sbb inc cli movsb stos sub jmp or movsl hlt inc fstl sahf xchg aam jns mov imul push jp std rcrw push aam out sub je pop int3 lods mov (bad) stc pusha shrl lret clc and in dec out jge sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall add or cmp cmp lret jge icebp and sbbl xor dec xchg js dec cmp ja and inc (bad) mov insl (bad) xor jb cmp cli adc sahf sub int3 jle iret data16 sar dec in rcrb dec cmpsb test mov dec pshufw or inc jmp jg iret mov je sub fcmove inc sub lret add out lea mov sbb subb inc inc int stc and mov inc jno mov movsb pop push arpl adc jmp mov xor or adc sbb adcb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cwtl xchg mov mov repz adc (bad) mov fidiv subl pop incb or rclb sub out scas adc jmp fs je incb sahf rorl and or and popf loopne dec arpl inc aaa push loop (bad) pop ss cmp jo jl mov push scas jnp pop mov xor aas push pop ret ficoml cmc mov cmp dec insb dec arpl mov loop jge icebp int gs fsts aam nop addr16 push push out mov ja mov (bad) lret jl sbb mov add adcb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp fsubl inc stos cmp and fsubrp jns sub ss jne enter (bad) cmpsb lret (bad) pop pop pop xchg (bad) sbb iret push aam lahf hlt dec and mov iret sahf mov pusha and push add add fwait dec idivb popa cltd imul rcrb lret mov es jecxz adc in add pop jg frstor cmp cs xor or xchg add int3 cmp loop cli push enter cmpsl stos rcrl push jecxz nop aad inc xor push leave push adc aas cmc push iret jmp xchg pop push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sbb sti dec popf das (bad) pop or maxps out clc dec sub imul imul jo mov xchg aaa push push ret xchg test xchg (bad) xor jle (bad) (bad) mov mov pushf jle ds ss push jl fistpll mov cmp push insl pusha loop push mov ret ss scas dec sti jns xchg test push jnp leave sbb js push fsubs inc pop push push xchg fwait add stc push pop mov pop lods rolb sbb (bad) sahf jg int3 jo cmp push shrl (bad) xor sub in (bad) addr16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp sbb push pop jne stos testl mov mov sahf dec dec push sbb test jns mov pop enter arpl mov or outsl pop fcompl test bnd xchg xchg mov sub mov stos in fs mov (bad) loope ret dec outsb ljmp cmp mov cmpsl push sub mov jle mov add push arpl push mov cmp sub mov test ljmp jne mov lock pop add loop xor subl pop push dec xor and outsb fadds (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jno fldcw int mov or std push mov sahf leave dec out inc or jl mov stos leave in cli notl je int3 movsb dec (bad) jmp xor dec and mov mov add test push xchg jno xchg adc push and lahf ds sub sub in loop movsb fdiv push data16 add icebp scas adc sub cmp arpl adc call fstp xchg sahf mov cmp cmp pop mov mov or test xor sarl mov mov push cmp cmpsl mov lds jnp push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivs lahf cmp cltd aad loopne mov fstpt rolb repz jl jb xchg ljmp lahf mov mov pop mov xor ret imul rcrb or adc cmp mov (bad) repz and fcmovnbe test das enter ret xchg adc mov jbe push test leave repnz fbstp out mov adc icebp sub xor and cmc push push aas add push loope shrb fisttpll loope aaa aad inc call push movhps xchg dec aad stos mull push outsb push mov lret add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov int3 pop lret push rcll inc push sbb mov inc jmp iret push xlat sub sbb popf sub (bad) xor jns fwait adc dec bnd or mov mov or push std mov aaa dec push aam outsb jno xchg jo xor test icebp sub mov ljmp inc mov sbb sbb pusha mov cmc mov dec jns lcall or sub jecxz or rep inc sub (bad) jg in test mov lock push mov jle ljmp popa sahf arpl inc fidivr adc jg pop (bad) fdivrp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov cmp addr16 push sbb sbb int3 lods jg scas jl hlt add adc pop dec lahf fcmovnbe fiaddl cmp divl shrl xor in sub push pop add add imul xor dec jo lds and fwait lds inc (bad) mov jno jnp push (bad) lock pop jecxz in mov in xchg stos or mov rolb adc adc les jae lcall in mov cld ret jno movsb nop adc or cltd nop enter mov xchg or cltd pop mov inc (bad) out int3 (bad) lret inc jb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl adc inc loop stos or jecxz into nop fwait add mov and mov xor jecxz rorb fsubr xchg cmp scas xor xlat mov int jae mov dec cmp loopne lret aad lods mov out or mov jae rcrl push and insl in jno mov add lahf pop jl sbb loopne in jle lret mov loop loopne pop imul add xor push adc jp or inc add in jle js jmp lods pushf dec cmc das cmp pop sub sbb adc insb xchg mov mov test int3 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc dec push and dec notl sbb jmp or cmp jg add aas fisttpll scas out leave pop cmp ss andb stos inc jnp outsb rcrl lcall scas jmp insb dec mov popa xrelease arpl add cmc daa scas shr call or outsl xchg fldt (bad) mov cwtl fcmovu pop jg push sub std lret jl in aaa inc or dec dec inc repnz sbbl mov sahf xchg xchg out cmp mov ror xchg and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl jnp inc mov arpl les (bad) cmpsb dec out ja stos pop inc (bad) mov xchg or cli add jmp (bad) pop sbb jge js ja arpl (bad) jmp inc jp sub mov adc cmp cmovbe in in es cmp jnp jns faddl mov out push arpl cmpsb dec iret cmp lcall andl aaa sahf ds loope pop daa pop inc out int cli lret mov daa aam add lock (bad) or jnp xor mov mov dec push xchg enter lea (bad) xchg cmpsb xchg out fiaddl inc ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec jl cld cmpsb mov add pop std loope out sub xorl push test push jne xlat movb inc test (bad) pop dec xor cmp aaa jbe sub sub inc fidivr sbb int3 xchg imul bound and push and jnp cmpsl push cltd jp gs (bad) and mov and push pop js inc nop mov icebp mov dec xlat sub movsl sahf add sti push pop pop adc popf push cld js add xchg inc jno scas popf push (bad) mov daa enter cmpsb mov lock bound lock (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall and mov (bad) insl push xchg call sub mov jge xchg pop mov fstps mov aaa fildll push cmp scas jne jmp outsl add frstor flds repz mov fs hlt nop mov aaa in sbb in mov jp sub stos repz xchg inc fistl test sub or cli jno idivl ljmp and mov push pop pop adc (bad) pop call adc scas push sub (bad) mov push jl rorb cltd int test cltd outsb lea test adc or cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl pop test dec xor pop push dec or sub jb mov jl loop lahf push sub sub aas push test out xchg clc adc xlat mov setnp negb rcrl push xor sbb add stos test ffreep dec pop stos push adc push lret inc sahf jae (bad) cmp mov inc xor dec in daa testl aas sbb mov jg stos jmp cmp icebp pop rep push or leave in popf lahf popa fwait stos subb iret out cmpsl int3 daa scas and and jno and push fstpl sbb dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall in inc pop mov mov mov mov pop push pop sbb fdivrl mov push movmskps mov push dec inc sub pop or aad mov adc lahf ljmp cmp and xchg jl insl pop mov mov push mov push iret xor ljmp movb add mov insl sarl adc jl dec adc mov out adc cld jmp mov bound pop jg mov lcall das sbb sahf in mov xchg mov xchg std jno push ja js mov fidivrl dec mov mov xchg into add ffree iret sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp push inc jle rorb insl adc xchg cmp push or in fildll cld xor es lret lock les mov sub sub hlt dec cmc in jno adc pop iret xlat and ja imul repnz test mov sub sahf mov data16 push sub (bad) sub add data16 pop jle jno push xor aaa hlt scas xchg mov std sbb int3 out stos outsl lds sarb xor jge sub or fiaddl (bad) cld repz dec mov hlt push or outsb mov jle pop sbb int mov jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fninit cwtl push jnp sub repz xor or sbb push dec sub sbb cmp jle pop outsb movsb sarb cmp imul lret (bad) cmp imul nop insl cld push pop rcll pusha movsl cmc jecxz in test dec push fdivrl xor sahf rorl add sub rorl std sub cmp gs popf pop jb fisubl mov mov xor loop push int insb dec repnz xor movsb adc enter aas pop add sub aad mov mov in mov push fadds fwait loope jb jae (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp in mov clc xchg xor gs ja insb aas sub sub cmp mov push cs mov sbb test jnp fwait cmp inc notl out scas jb out dec add mov cli pop insl xchg enter xlat xchg stc rcrb (bad) out jne adc fdivrp lock sbb cmp dec xchg mov sti jnp imul xchg or jbe mov or loopne inc test mov sub in daa into add mov pop or dec sahf cmpsl enter imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) aaa mov pushf push jmp push cwtl insl je mov fcoml mov jmp lea xor and daa sbb sbb iret icebp push (bad) mov popf rclb scas cmp mov mov lcall pop (bad) jno push adc inc imul repz push jbe xchg cmp xor inc pop into popa and pop jle xor xchg ljmp outsl sbb mov cli add arpl or movsb imul neg loop pusha xor push lahf inc shr mov jg aam mov test mov subl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov cs push outsl cmp or add mov sbb lret inc ss xchg adc jnp jl push sub sub fildll shll xchg cmp sti or popf jne arpl les test add aas (bad) mov in pushf or hlt fildl sbb and test popf mov cmpsl dec fdivs sub movsb pop sti jne xor and lods (bad) mov imul call popa xchg xchg pop or lret sbb cltd fidivr hlt out dec mov lods jns lds push movsl idiv (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov jecxz (bad) add faddl cmp dec pop jns cmp mov jp sub jecxz adc sub test sahf push cld sbb lret sub sbb inc mov dec movups arpl xchg jbe sahf jae fsubr xchg jecxz es xchg scas lods add push arpl pop iret fimul xchg std adc mov pushf inc cmp outsb (bad) inc fldcw or push mov cmp fwait dec cmp jnp push pop insb inc xchg jns,pn push scas pop rcr nop add daa arpl jmp add imul mov movsl dec lret jnp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl sub jmp in lcall test lds pop (bad) in mov rcl das push out aaa in bound xchg fwait lcall jmp pop add jb xchg cs inc or push loop loope daa and xor decb divl or xchg enter or jecxz dec aas push (bad) jbe xor pop sbb jp aaa sbb push nop in aaa leave sub sbb xor sub cwtl xchg pop push cmp push mov pusha (bad) leave pop out xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl pop adc pop xor jmp push imul das jae add cwtl sub mov call mov or in or imulb cmc les call jne xor sbb adcl xchg rorl jmp rcrb and or dec lcall dec push xchg clc ret (bad) out js sub out scas lret int jno lds pop cli mov sarl out out mov leave popa cs dec dec test scas shl mov pop inc push mov xchg jo les arpl fmuls jmp inc dec pop icebp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc push out adc jle pop repnz imul mov pop push adc pop cmc jg and xor cmp cmpsb jo inc sti cmpsb lods into rcr push fild sbb test insl bound push js mov pop sbb es (bad) insb iret inc mov xchg xor lret gs adc adc lea fdivrs sahf mov and xor (bad) ss enter pop jg shrl rcrb mov arpl fucomi dec popa and or imul add ret push sub rorb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call inc xchg and and ss xchg fcompl fimul xchg cmp jo or ss aas xchg pop sti (bad) add hlt das fistp mov sbb xor jle rclb dec adc cmp mov jge add lcall stc mov cmp in fcmovbe hlt adc xchg or jne push mov or sti mov dec cmp inc xor push and mov or sub loop jge mov idivl jl sbb cli fbld ljmp cmpsl (bad) paddw jl or cmpsl jb add repnz push pushf bound aad loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp inc scas cltd enter jl xchg (bad) pop xchg in lret clc jo and cmp mov sub imul pusha addl and cld sbb rclb arpl mov pop daa mov lds lock add out mov (bad) mov or jbe cmpl imulb jo push jmp sub sbb (bad) aad out mov mov idivb jo (bad) mov add or gs test loop mov and fwait or cld inc lret jge scas push jmp in ret fcoml xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push iret mov cmpsb push fimull sbb (bad) std stos insb lods test sbbb inc clc imul mov ss inc sub dec mov ds cmpsl int mov andps sarb xchg xorl lahf inc adc cltd adc xchg imul adc mov and das mov jecxz cmp ljmp in stos cmp sub push xchg jb jp cmc les fs sub dec mov pop inc jp shlb jecxz mov (bad) cmp negb jae fcomps je mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall or (bad) fs fmul mov xlat mov pop and scas (bad) clc mov mov stos mov mov popa aas daa xor cltd adc sub aaa stos outsb xchg arpl (bad) call mov enter push out mov sub fs lcall aad xchg data16 mov fsubrs testl push inc mov daa loop rorl adc mov pop push mov call (bad) test mov mov rclb mov addr16 cmp push (bad) iret inc jnp repnz insl cmc cli fdivl pop je addb lret and mov jg jne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov cmp dec jmp push add jg cmp pop lret inc and fwait xor adc addr16 pop lret (bad) jbe dec hlt and loopne sbb imul lock insb in jno lods sub pop fmull cmp cmc inc add dec cmp xchg pusha jmp adc sub sbb addr16 dec pop fiadd and dec pop es arpl mov add sub jno adc mov jmp dec adc dec into dec mov lods adc xchg aad inc mov repnz in push ret cmpsb shr push pop sbb cmp nop push icebp jo loopne and add sub js (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov repz and fucomi jp je insb push mov clc sub sbb push test push dec hlt xor loope inc test popa js cltd imul insb sub loopne adc negl jmp scas (bad) and mov jae leave mov mov xor loope aad xchg jmp faddl (bad) daa aam out inc lahf cs jno (bad) in sbb aas jmp push les movsl adc sbb aad in popf sarb jle and pop andl mov dec dec rorl cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp stos jae movsl les mov imul (bad) cmc call jne loope inc dec mov ja xchg mov (bad) xlat pop add lahf fstl pop mov das push sub into out std cmp xchg adc mov push cli inc (bad) cmpsl adcl adc mov push add punpckhbw pop popa pop cmp xchg pop sahf call pop dec das cs ljmp add mov aad aam ret jo jno xchg jae jo (bad) out bound outsl js and mov popl and push std cld es out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call and ss mov xchg pop pop pop bound sbb mov fisubl stos stos outsb sub sbb xlat call push xchg (bad) jno push out iret xchg sarl in sub fdivs insl cs mov xchg sub outsl mov jg add cmpsb in add incl popa jno mov pop adc or push fcoml xor enter sub xchg lods mov lahf lods inc push dec or test push orl (bad) push pushf mov outsb outsb jl (bad) add xchg jl sub ret loope (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl in and or ret inc xchg std jmp mov mov jnp dec sub not push jp stos fistl les imul std ljmp xchg popf insb xor pop jp xchg repnz ja xlat cmc mov (bad) xchg inc enter movsb inc and add mov outsl push addl scas push push std daa sbb out sbb dec sub rcrl pop repz mov int3 mov jmp jnp xor mov push mov xor imulb lret test sbb and and or sbb clc sti (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) ljmp mov inc aad inc repz or repz shrb std and sbb inc pop cld loopne cmpl inc cmp stos rcrb lea xchg repz aad mov jle and testb cmp push mov icebp jl jle pop adc int3 mov aad sahf sub into (bad) lods daa xchg fs ss inc pop push sub xor sbb mov sbb mov cmpsl lret cmp (bad) mov cltd jno ja insl ljmp mov push addr16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl imul cs and lock hlt fmuls imulb imul (bad) dec pop adc mov iret cwtl in and jno aad inc sbb pop sbb lea sub xchg mov (bad) imul aaa sbb xchg (bad) idivb addr16 jns xchg pop fdivs push push test (bad) (bad) les les push movsl cli xor sub lea mov dec inc cmp xchg outsb (bad) fsubrl in (bad) jg repnz push jle jle add or sub das test push (bad) je sub jbe (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp pop outsb push imul test sahf pop pop stos push xor or cli sbb mov daa lods aad andb aam sub or lods lea (bad) cld add scas ja adc (bad) mov sub mov enter cmp sbb rcll aas inc dec cmp andl xchg jge pop sbb pop mov adc gs sbb jmp fwait and and cmp mov mov pop stos and das lahf imul cmp xbegin cs jb dec jae pop xchg rcrl and mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl test pop jne mov std stc popf and mov sub add pop insb and movb rorl mov add mov inc lret xchg push dec in fistpl inc outsb les mov enter inc sarl lods movsb push sahf mov rorb bsf cmp push aam or ljmp sbb xor fwait sub movl pop add or enter arpl push push mov push loope setne xor adc mov xchg in adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov xchg sub xor xor inc adc cli jne lods inc arpl xchg dec mov lods xor je fwait inc cmp sub pop pushf orps addr16 push in hlt sub stos and sti imul sbb inc repnz daa pop mov ljmp mov call js (bad) loopne or into outsb negb xchg mov int xchg fs pusha (bad) push je aad dec xor fnsave jnp (bad) push cmpl aaa lods cmpsb push (bad) mov call shlb sti xchg insb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp push add mov jg stos lds mov outsl loop sub sahf xor mov xor into jae mov out (bad) mov out rclb vpsrld nop mov test nop test xor xchg sbb stos jns pop adc fwait rcll mov adc adc out popa xchg nop jbe push push add jecxz xor (bad) adc (bad) out cli (bad) pop push adc movsb sbb lret jg inc sbb out push loopne mov mov add into aas adc pop fiaddl adc js or enter (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc mov enter les lret test xor cmpsl movsb push and das dec pop xchg sbb mov scas or lret leave jp shrl in add pop mov repnz lods sahf sahf stos clc iret push outsl adc (bad) stos js xlat push push push scas or sahf lea cltd and add (bad) icebp xor daa push or repnz into push push cmp pop mov sahf mov stos mulb in pop gs enter in in outsb (bad) xchg or scas aas push ja xor mov mov lods cmp lock (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call adc pop push push push in sub dec sbb fisttpl mov mov mov iret add xor rorl je cmp or xchg sbb sbb or enter loope pop rorb and push sahf movsl and hlt or pop sub repnz imul test test repnz xchg mov adc scas imul test and push mov (bad) lret jb test repz push push sbb push fldl cmp fnsave movsl mov pop cmpsb xor pop xchg (bad) lahf stos cld xlat (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl out mov stc mov das push lods mov sbb aam lods into dec xor mov lea in adc dec xchg adc popf sarb sbb mov mov xor imul into pop mov mov and (bad) bnd test sbb iret jl mov (bad) jle movb jno scas adc (bad) xor jnp movsl subb jp (bad) or xor lods mov sbb insb (bad) jo push daa xchg cmp xchg sahf or (bad) mov fnstsw stos xchg fsqrt (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall icebp pop adc ljmp jp enter mov lcall jno adc imul lock repz mov add pop sub (bad) mov aam jae add aam add clc enter cmpsb rcll (bad) dec mov sub cmpsl leave in das clc imul enter add mov cmp pop (bad) cmpsb or sub mov pop fidivl in lret arpl and es jl mov std fabs pop clc or gs mov gs imul insl scas leave lret pop (bad) sub push jp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ds adc mov popf inc dec aaa popf xchg stos mov ficomp in sti jae test mov fistpl xlat int3 jp jno lods fdivr fbld xchg (bad) or mov jg in xchg jmp push stos test cmp mov popa aam cmpl inc jbe jecxz call lahf into pop lock in lds mov sbb aaa pusha scas pop shl mov fsubrs mov test jl dec in insl sahf cwtl (bad) pop insb mov imul dec cwtl push xor dec push rcl jb into or xchg pushf pop imul dec dec cmp (bad) arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp dec cli dec cmpsb inc mov inc jbe inc in into test popf in mov fisubrl (bad) mov xchg lds mov ja cmpsb aam in (bad) add dec or mov (bad) std sub pop stc ja pop sbb fstpt fidivrl cmp push int3 in aam mov cltd ficom cmpsb sub sbb xor mov clc mov mov adc xchg pop push cmp fldcw sub sbb aaa fildl les pop sbb leave popa mov out cli and mov sub xchg faddl mov imul xchg push cld adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl sub mov stc je std (bad) pop cmp dec pop pop imul scas push mov push repnz dec pop push test test cmpsb jl fmuls dec cmpsb or xor jb add inc clc add mov cmpsl jnp mov push (bad) jno xchg xchg dec mov xor aas push push inc jne in add jnp inc or les xchg arpl xor bound imul xor jae addr16 rolb inc mov bndstx add pop movsl sbb push inc (bad) hlt adc dec scas lahf sti movsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl lret and ja dec xor pop arpl push mov (bad) out pushl xchg subb sbb call ret and repnz test bswap push mov jmp int3 call xchg add lret cmp popa cmpsl rorl nop dec jne orl inc (bad) lret cmpsl lcall jp push sub add push int3 test and fwait int add arpl xchg pop rcr jb addl lods pop xchg (bad) fucomip mov sarl js sbb inc sarb push lret fdivrs les std mul hlt mov outsl cmpsl push popf in mov xchg jle pop pop insb xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call pop nop cwtl popf push call xchg fsts sti ret ds dec adc (bad) or dec icebp jmp les (bad) dec mov sahf push sub js push push rclb mov mov into decb lahf sub lret sti (bad) inc jmp lahf xchg fwait addr16 push xchg xor int js push clc mov push xlat jo out mov das fist cli fwait push aaa jp jo add or (bad) je lock gs ret inc and jbe xchg out ret sub out imul into xlat pop sub mov sbb pop xchg decb sbb inc adcl pushf sbb imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc pop sub dec or or lcall int mov inc cs (bad) push pop mov dec mov mov pusha addb flds call and and test mov adc mov pop xor (bad) mov sub jbe lret or std cmpl jne and lret sarb cmp test mov stos jo dec xor insb pop pop shl mov addr16 out mov movsb inc out dec lret jp,pt inc add pop mov sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall pop loope fstps hlt aam mov push adc cmp out or stc (bad) in stos and insb jne imul inc or mov mov iret imul inc sub and insl xor leave lock mov leave xchg sahf xor jmp adc and pop (bad) add jecxz pop aad gs orl mov mov and popa jo test divl inc (bad) sub pop enter imul into (bad) hlt mov pop movsb add cmpsl push mov inc adc cmp movsb mov clc adcb dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jp ja cmpb fldl stc data16 xchg sub outsl sbb mov adc cmpsl mov icebp mov sarl adc loope xor in int3 int3 pop call scas scas jl in call nop pop mov and or insl aam inc or out mov mov xchg rcr or inc add insl jg or inc hlt rcl push jno das sub pop mov jl sub adc loop imul gs pusha (bad) icebp clc sbb push icebp js in jge cmp leave (bad) divl ss push and (bad) movsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl ja cmpsl adc lods jne lret mov pop jmp sub mov mov sahf and fbld xor mov int pop mov xor cmpsl xchg dec mov mov xor sahf nop aam adc dec cmp or add mov repnz pushf (bad) mov inc sarl mov pushf (bad) add cmp jmp push inc ficompl mov and jg or cld in js dec add (bad) jae mov cmp aam inc adc pop cmp xchg fildl or fist movsb jp cmp lret mov pop popa rcll and jmp cmc pop add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) cmp dec inc adc enter add cmpsl clc jp adc push mov stos pop frstor cmpl sahf lods ljmp (bad) xor aas cmp js inc pop add xor into jge hlt stos leave popa adc stc xor clc ret inc scas add das mov mov xor movsl cmp add rolb inc jno cwtl dec sub outsb fistpll cwtl movsb cmp subl nop push ficom icebp sub cmp ret je test pop dec aam push cmpl add popf js mov push pop add imul cmp inc and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call addr16 jl xor lods dec add aaa mov adc push leave cmp add rclb lcall test addl fisttpll scas ret inc outsb or call mov inc lods shrl mov sub jg shll movsl adc cmp fdivl cmp xchg adc insb rclb inc xchg (bad) (bad) jp mov xlat cmpsl cmp adc adc and or inc hlt in adc dec cmpsl xor and adc cmp inc or sub push jns xlat dec add outsb mov bound ds fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov pop movb jmp iret sbb mov ljmp ja mov loope add popa aam loop lret sbb popl stc dec cli dec mov add fwait xor jmp mov xor sbb xchg sub mov psubb adc sbb sti repnz pop (bad) nop and xlat movsl mov les xchg jno stos jl and popa cmp imul and js out (bad) in xchg lcall mov or add xor cmc push push test fmuls imull stos mov push jge in xchg sbb cmp lcall push sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl bound inc int3 lret mov push enter (bad) xorb sahf cltd dec mov lea or xor add adc lods lock inc xchg adc ss jmp push (bad) incl inc add jb inc push repnz fldt push repnz int3 cmp popa lahf scas mov das (bad) sbb or adc pop adc dec (bad) hlt or push lods (bad) sbb gs mov fwait mov mov dec sub lcall pushf clc (bad) cmp xchg mov jae shr (bad) enter je pop and jnp push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl pusha mov repz push mov xchg flds push dec outsl aas out jle (bad) sub add ja xchg repnz hlt or jg int3 repz mov or mov xor hlt mov stos or fst jo xchg xor (bad) mov imul sub inc mov fidivr stos out cmpsb xor sub aad mov pop or cmp jb sti movsl (bad) jo mov jns clc mov pop scas daa sbb cmp pop and xor iret rorl ds cmpsl mov popf add mov in pushf movsl mov sarb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl lahf cmp cmpsl int3 xchg js adc jge jne aaa int mov inc lret or mov repz xor fisttp daa xchg xor adc jle es xor cld lock push shrb leave xor inc out inc arpl popf into pop inc out mov les leave jle clc jle mov scas out sbb sub in js test in rorb paddusb ds jmp or ja pusha pop push lods fisttp mov mov and push shlb cmp lods fildll push xchg fisttpll push out lods aaa fldl sbb or and sti push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jle and adc mov movsl arpl lahf int cmp sbb adc or mov outsb lcall hlt ds pop insb dec je adc (bad) sub (bad) mov cwtl mov cli xchg loop push xchg roll or cld call cmp (bad) and (bad) mov in jb daa dec imul pop insb lea fcmovnu es jns push lret shll bound inc inc lahf cmp loope jle nop ss mov mov xor xchg aas pop xorb sub (bad) scas jmp pop mov adc lea cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov aam sub push jo,pn mov lds sbb lods add mov enter scas rorl pop fsts mov (bad) in out lods add nop nopl aaa test add imul (bad) mov sub je sbb addr16 enter emms push add int3 lods nop add (bad) jg enter jb ja push mov ss cld scas inc sbb fistpl stos mov sahf ds je ret (bad) cs mov lds stos add outsb push rcl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov aas adc inc or sbb (bad) test (bad) adc jae xchg mov inc (bad) mov addr16 pop add pop inc sub aas and mov hlt popa add add inc fmuls add loop mov mov mov rcrl daa adc data16 ss jns jg es mov sub mov adc jnp add mov pop (bad) lret movsl mov jno lds sbb iret dec jo jne lcall xor cmp in push cmc inc aas testb push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push mov or inc sub mov mov xchg and mov push and adcl add jne mov popf dec int aas fadd (bad) dec mov cmp dec (bad) mov jns pop in add outsl jmp xlat imul xor mov test scas leave clc xor xchg lea add sub add je (bad) inc mov adc in negl mov jns mov es mov imul mov addr16 ds pop xchg add shr sbb mov dec mov pop (bad) std loop clc xchg test add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp and std sarb out aas mov fsubrl pop sbb jnp jg shr sub addr16 jl lods test adc insb in push mov jmp push shr repnz jo lds jp add or out insl (bad) std dec iret jno sbb or jne movsl mulb mov mov mov sbb orl faddl int3 or pmaxub mov (bad) out (bad) movsl dec clc lret inc data16 xlat cmp dec mov fdivp dec ss push ja lods sub adc mov fcmovbe jae push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov cmpsl stos mov outsb test cmp mov jg mov aam daa call adc aam cld imul and dec xlat lret imul repnz dec leave dec sbb subb sti call loope mov (bad) (bad) mov inc imull imul movsb int pop pop mov inc sub jnp (bad) xor push (bad) xchg gs ds sti adc lock pop (bad) insl or push enter and xchg fildl insb pop jmp mov pop xchg sbb add and adc roll (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl lock dec cmp aad int3 pop (bad) repz out sub sub push insl pop cs mov dec leave push loop rorb dec pop sub cwtl data16 addb lea dec cmp repz sahf push out movsb aas mov mov push sub add imul push adc adc xchg pop or xchg dec add jns lds out mov jno sbb xchg mov mov insb or in pop dec arpl or rcrl (bad) dec and pop sbb cmpl inc fcom add add mov push arpl push mov xlat jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl ret add jle lods mov xor pop dec cmp jo mov jne pop stos pop fmulp cltd cltd mov (bad) inc dec xor popa ds scas pusha inc sub enter outsb enter pop pop loopne (bad) (bad) push jae xor (bad) push and add dec mulb adc xlat ds push mov fs cmp mov scas jns sahf leave call test push xor xor or mov push loope pop push inc cmp mov adc lea outsl pop lock gs insl (bad) pusha stc inc push jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall push (bad) jmp into push xor jb testb cs (bad) iret ret xchg setns push popf cmp add jno inc inc pop in cmp add lock in adc rcrb rorl fwait pop cmpsb fisubl mov (bad) popa sub pusha xor (bad) push pop daa sub xchg loop aad jle das inc cli jnp and jo mov add sub movsb enter imul dec cmpsb pop push push lret leave popa push mov cmp xor into sub cmp pop mov sub push sub das mov outsl sbb jbe push ja (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl cmp jno lea movsb sbb lods xor or sub test adc ds je cli sub or (bad) enter cmc pop bound sbbl fmull div (bad) push nop lret cld pop pop sub pop rclb and xchg daa cmp push pushf xchg cmovle inc cltd pushf adc (bad) inc add (bad) fisubr into mov xchg mov xchg push aas ljmp pop scas adc and (bad) mov mov dec je add pop fwait or jmp loopne mov nop inc sub roll inc pop jae (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sbb mov dec jp icebp push sarb iret js repz fwait and fwait add mov iret pop and pusha adc and adc shl dec fiadd pop fcoms push lret outsl sub adcb jne aaa out push lret pop (bad) sarb mov (bad) call push test cmp push push fstpl jle and test ret jno inc push cmp sti cmp and xchg inc jae jg addr16 popl (bad) mov xor pop jmp rclb dec clc mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl inc pop mov stc cld push add mov or adc fcomps push sbb mov push adc (bad) sbb aad sbb imul out movsb pop lahf fimull test movsb incb leave mov sbb shll lods sbb cli adc ror xchg sbb mov jo sub and leave pop rorb pop movsb adc ljmp fisubr inc xchg imul loopne pop push inc scas loope imul test xchg cmp hlt leave jae jo subl xchg add jp stos fs mov push js cs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp je mov cs into leave push (bad) (bad) inc xor or lock mov mov dec mov mov mov xor mov nop lds icebp subb xlat add aam push lock pusha lahf test aad jmp nop add sub cmp adc and mov cld and dec push mov mov cmp mov mov ret in (bad) popl fisubl sarl loope mov or ljmp nop in cmpsl jnp jno jne cmp push fdivr pop arpl enter (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall and push in fs fucomi mov inc mov inc in sbb aaa out into jle and dec dec loope xchg call adc aaa jae mov push das std arpl jge mov scas pop or outsb enter adc movsl fstpt or xchg or push mov (bad) mov xchg stos xchg sub sub (bad) ret cmp lahf gs xchg fmuls xor lret in jne popf jmp int3 lret pop mov test aam sti push insb fsts cltd out mov sbb sbb or sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) xchg xchg ds xchg imul addl jp lret lret mov mov pop xchg movsl cmp xchg cmp mov xchg mov ljmp lds out lret clc jp xchg jno mov out adc insl loopne (bad) cmp mov test sbb sub adc adc mov pop xchg (bad) cmp lds cmpsl inc cmp push es xchg (bad) out jns pop xlat add outsb jp movsl in imul inc mov icebp sbbb rcr mov xor aas adc mov aad shrl dec mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall test popf popf xchg xorl repnz mov jnp mov push add xchg ja scas ret repnz pop sub push loopne fs out in insb out (bad) mov arpl stc out jnp icebp push and xchg xchg ljmp push or xchg jecxz (bad) ss mov fincstp mov mov stos inc pop jno popa loope and xor add pop pop sahf mov xchg enter scas cmp dec cmpb rcrb mov mov (bad) sub or dec sbb jo dec inc lahf pop cwtl mov xchg cld cmpsb cmp andl xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp outsl xchg in cld aam jp mov mov jnp inc insl in fs jns push adc sbb (bad) push mov jnp imul popf add sbb sbb mov sub xchg fidiv nop push push ficom repnz sub inc push sub test xchg test leave push (bad) cmc (bad) push mov imul rcl test divl fwait loopne pop enter in cwtl cmc cltd add loopne mov out nop mov inc lock jge insb ljmp daa test sahf cltd icebp push (bad) add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl pop stos sbb xchg add push idivb (bad) lret repnz movsl movsb pop ja mov add jp push push std pop cmp movsb mov dec insl es loopne lret jecxz jl fbld mov imul or popa pop mov push xchg adc add or cmpsl push ret jg mov adc add cmp sbb fmuls notb inc pop divl mov sahf jl ss in xor es add and mov rorl xchg arpl mov leave jae nop pop out aas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl aas and stc cmp push mov pop xchg bound (bad) mov pop sbb fwait mov mov and test xchg (bad) xor aad std data16 mov jb loopne jo mov pop dec fwait lcall xor mov cmpsb push jge es adc jle int bound test js sti inc lret in sbb dec jo inc mov ljmp aam cmp addl ret bound insl or mov or mov sub jl push sbb dec cmp sbb push or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call pop adc push xchg pop fdivs xor or jle and fsubrs xchg sub pop (bad) push bound sub sub jno push and lahf test pop in mov mov popa inc push xchg or push inc inc sbb fwait into lahf and push insl test jle push mov aaa aad jg rolb repnz mov insb cmp adc mov (bad) lods lods insb ror arpl sbb imul jp loop xchg xchg imul dec lods (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl fld mov and and or lock repnz mov inc push pop mov xor inc mov mov or call pop cmp adc cmp lsl fistl fisubl jbe stos pop (bad) mov outsl pusha js ja mov les dec mov mov ret xchg cmp inc loopne loopne add fscale push inc pop jmp mov xchg ret pop mov test js jne inc sbb sub je mov xchg out push daa daa xor adc sahf test sbb push pop stc xchg cmp mov cmp add stc (bad) jg bound shrb jne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp adcb adc scas xchg lea dec xchg dec add mov mov aad mov xchg mov push cltd clc lretw sbb int3 imul xchg out cmp mov psubb jo xor loop in scas out and or mov pop jge lahf sarl mov cmp mov push cmp clc mov loopne std shrb mov push lea fcoms jae (bad) shrl xchg mov sti add jb pop xor cmp ds aas aad cwtl push fst loop imul sbb cmpsl mov cmp stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp cltd adc mov outsl dec dec mov lcall outsb movsl loope in bound xchg test dec jecxz and dec sub push lods xchg iret jle cli mov mov shrl clc clc aam and add mov xor test push jge movsb push push and scas adc add or mov mov ret addr16 adc ds in inc mov lret mov stc fwait out add jmp lret inc fwait loope cmp pop sbb sbb xchg adc insl fnstcw mov cmc xorl mov arpl int mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xchg dec and sbb (bad) xor sbb aaa dec or push cmp aad sub lods repz mov adc xor mov push scas mov xlat les jne aaa ret ja cltd cmp mov adc sahf mov jno pop xorb mov and xor iret cmp out outsl nop jnp test call mov push add fcmovne mov or mov cmp loop push outsb and leave lods loopne mov pop pushf or aad outsl shlb xor insb sbb fiadd sbb cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call int3 push cmp dec xlat add int3 mov add lods pop cmp pushf dec dec nop and jmp xchg add stc inc xor sar sbb dec mov inc cmp add inc xlat icebp or sbb loopne mov push cmp push in push cmp (bad) scas fild inc fisttp cld mov sahf mov (bad) aam ret nop pop xor ja fmull xor add call movsb in or and adc stos push sub xchg fs imul add cli cwtl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp push in sub ret adc xchg mov mov movsb sahf lret loop sub cs jecxz add movsl push and repnz push push inc ud2 shrb test xor push adc inc jmp dec sbb lret into push sub sub xchg mov jnp addr16 mov jge mov xor stc pop in data16 pop pop in pop enter pop push inc push outsb insl testl imul bound sbb fildl mov xchg test mov (bad) outsl ffreep daa xor (bad) jmp dec sub adc and sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp push int xchg bound or xchg ja mov sub pop push cld dec push data16 xor mov lret movsb ja mov test and test cmpsl outsl (bad) jo adc lret clc loopew loopne pop mov dec ljmp sub pop push add lds pop mov mov insl jecxz xorl xchg out out inc jb iret subl mov outsb clc outsb fiaddl mov int3 mov mov fs ds iret out repz pop cmp and in jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp das adc xchg adcb mov adc (bad) lock and popa dec lea or cmp xchg xor xchg pusha xor push push jae cmp pop pushf push sub mov sub mov in loope push fildll add idivb push sbb sub push jns icebp jp fistp jp jl jmp xchg mov out divl imul lock sbb mov dec xchg movsl dec mov pop inc or jl xor ja enter insl xchg mov mov sahf ret subl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lret sub inc pop xchg loope dec mov adc xchg int xchg xchg into pop or arpl outsb add mov xchg cltd jmp out sbb jne std jmp sub pushf sbbl fs mov mov mov lret push movsl clc inc dec sub into adcb fnstcw pusha imul cmpsl (bad) cmpsb les mov mov xchg loope xlat xlat jae adc and push test xor iret push push dec ret repnz test test lret nop and jle inc jbe ljmp test lds and gs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in into pop imull mov jno enter scas lock mov jge mov call lret ficom fwait and hlt dec mov push sbb cli loope or inc cmp int (bad) inc xchg inc cmp test arpl das pop push or adc pop inc mov lock xchg xor mov dec icebp out loope adc mov repnz jb jle jns xor fwait xchg xor and cmp dec lock inc pop jge lret push cmove adc cmp jl add and sbb iret cltd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl lea (bad) in je fstpl cmpsl outsl cli xor popa orl je andl and cmp and das stc insb (bad) lcall test test mov fsubrs mov fwait (bad) jbe sbb rcrb clc out add xlat mov int3 ret xlat adc lods mov sti pop in addr16 jmp mov sahf popa flds jg xchg lret sbb mov dec xchg pop cmc mov sbb dec mov iret fidiv mov lds aas xchg sbb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov test (bad) mov push call addb adcl mov mov push dec sub in jle dec jae mov inc mov or mov les jb out leave xor out jle mov dec xchg xchg sahf or scas loop push pop leave data16 add and mov rcr rorl ss and aam or adc or cmpl mov test ss inc and cmp mov dec and mov cmpsl sbb movsl retw mov or add and aaa push icebp fnop sbb fisttp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc pushw cmpl shl push mov xor stc mov fnsave gs adc pop jno repnz cmc push and nopl cltd pop add sub xchg jp mov fnsave arpl mov cmpsl jnp xchg cmp xor add xchg (bad) clc fisub mov cmpsl cmpl rcll sub pop jmp movsb mov add sbb jg and je push inc push sub data16 xchg (bad) int3 out neg lret adc cli mov fs xchg or fsubr out fldt shrl jp xchg ret (bad) shr xchg push mov inc mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl jg sub imul pop lcallw mov pop insl inc jbe lea pop repz adc (bad) xor (bad) push cmp push xchg pop jnp and inc and out sub dec (bad) hlt fwait es mov xchg push daa push clc aad dec jg (bad) out into pop sub cltd cmp or mov or jl roll mov jg lret pop dec aas ss daa loopne jne lahf or cwtl out mov mov pop test cmpsb xor or int sbb dec ror sub pop push xchg jmp jnp cld (bad) jmp test cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli and cmpl outsb pop scas (bad) push loope inc repnz dec (bad) jmp jnp ja sti xlat or sub aas push ds mov and or andb ffreep in dec loop icebp and jg dec sbb lahf (bad) pushf insl xchg sbb dec ja clc jecxz cmpsb dec sub fcoml xchg mov dec in lea jle les dec call stos lods push push aad dec cmpsl aaa dec xchg cmp adc fnstcw or sbb dec je fwait outsb sbb mov std popl mov pop scas xchg popf pop sbb insl orb rclb push test dec nop push fdivp lret inc dec clc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cli inc dec stos pop mov jle mov data16 in inc fnop push fs dec push rcrb xor sub (bad) aam rcr cmp pushf sub (bad) pop xor das imul pop mov leave cmp or mov and ficoml sbb imul jecxz mov arpl push mov xor mov cli inc sub jmp xor jae out cmc insl in dec fdivrl cli (bad) xchg pop xorl imul jns fisubrl clc and inc data16 sbb rcrl (bad) cmc add and movsb jae imul stos pop sbb pop cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl jle and dec xor (bad) cmp push lahf jle dec xchg xlat jae adc sub dec dec mov loope pop jb es push rcl pushf aad repnz aaa out sub dec jbe fisubl xchg mov push outsb mov scas jl inc or popf jo dec aad jle inc push adc mov sahf not jbe imul cmpsl sub jnp ret jmp cli adc movsl lcall dec cli imul sbb js dec mov inc dec lods push cmp adc push addl fnsave and xor mov xchg mov jle stos add call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp stos mov fmul mov lock mov dec mov cmc es xchg cmp shlb xor pop cmp push (bad) xchg mov stos aad xlat mov mov std sbb stc lret jmp xor rcll cmpsb cmp or push mov jp dec xchg inc aaa push imul fildll orl lock inc dec mov sbb sbb fwait movsl int unpckhps jno jae or xlat mov fs iret cmp fistl xchg int3 push test push jmp jno out xor inc loopne popf xor lods scas pop ja pushf cmp ja sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl cmp push mov call sti dec (bad) insb mov into pop inc pop mov xchg out xor jge movsl andb jmp fisub aas loop sub es mov out int or cld in out or (bad) cmp jecxz iret ja pushf leave mov test lds or jae js push and cli test dec xor mov push sti mov fstl idivb pop ljmp push shll or inc cmpsb jno sbb out andl cltd dec (bad) ret insl insb pushf xchg cmpsb push fidivl adc int mov sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl test mov (bad) mov lods sarl dec fimul mov (bad) xor cmp pop xchg jae cwtl leave popa fisub jno mov sub or sahf and dec mov mov mov nop popl in sbb pop insl jl rcrb fadd lret (bad) iret test je lock (bad) cmp sahf lret fstl mov mov (bad) or push scas pop lea fisttp sbb cmpsb jne (bad) pusha xchg dec mov push imul mov jno add pusha es inc mov (bad) mov js in jno (bad) (bad) adc mov iret out pushf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push mov aas (bad) popa push cmp fs mov jno and push cwtl das sbb cld and sub mov movsb popa icebp mov int3 arpl cwtl mov lret adc out add daa stos cli sbb (bad) fbstp pop sti (bad) in enter insb mov push imul (bad) fsubr mov aas and lahf sbb test dec jne nop jp sarb lods ret adcb jge push and lds mov das mov sub ret adc pop (bad) test mov mov xor sub add in xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std fsubrl aad add mov fwait ror lock popf push negb test inc into push leave cmc cli aas aaa xlat pusha mov push je js dec in (bad) andl dec repz sbb cmp mov push jbe fwait es mov repz fwait jno rorb int3 xchg mov pop ss fwait and je fsts out jnp add mov jbe push popa pop movsl lea mov jbe iret mov cmc test pop pop loopne outsb mov fdivrl movsbl sti mov and mov je inc push das pop ja,pn icebp xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov (bad) or mov push mov mov pop mov arpl data16 aam mov repnz jmp mov add inc adc xchg shlb ss in jns xchg das adc sub in clc dec aaa cli pop adc dec xchg incl sahf sub dec andl cmp push arpl jmp inc ret mov scas test iret or lcall addl mov hlt mov mov test xchg movsl mov push pop mov stc lcall dec cmp stos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push push fnstsw sub jae jno out mov push jns and rcll in pop pop hlt inc shlb lods nop scas in cmp arpl sub cmc xchg pushf sbb push push cmc pop sbb sbb push or jns mov pop hlt ljmp push test adc xchg cmc lret mov out test push push pop sbb dec fiadd repnz shlb mulb lahf dec mov adc mov sub cmp xchg xor inc inc push fucomp mov pop push bound mov cwtl mov lods adc inc ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall add pop push imul call ss sbb adc mov addb adc or (bad) into cmpb adc cmp pushf pop jp fsubs xor aas ret pop or dec arpl jbe push xchg aam pop aas fidivl test pop jb loopne jno mov test mov push push aaa push pushl leave lods lods mov int3 ljmp ret test xor cmpsb enter (bad) fistpll (bad) jmp cmp (bad) pop add xchg cmp mov loope (bad) mov cmp psubq jne (bad) movsl dec sbb je in pushf adc imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec paddd push or inc push mov in imul mov sub push ja notl sbb and mov mov mov mov add mov ss mov or jge jbe mov jp in rcrb add xor fist clc xchg mov stc fmuls dec stos mov and xchg mov push dec loopne xchg movsl adc fisubl mov mov mov pop je mov add or xchg sub (bad) jle flds sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push mov sti mov (bad) cmp arpl or xchg adc xor sub pop nop add inc iret xchg cmpsl pop adc or (bad) mov fiadd jl push popf jp test out in and sbb (bad) mov mov lret pop jns in cwtl cmp inc mov out sbb std addl mov popl data16 ljmp loope pop xor fs push push aaa (bad) (bad) adc add sub out ds lahf adc sub lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call lods outsl push loope push stos les stos stos xlat ret and call mov cmp in stos sub mov xor ds and pop ret inc (bad) (bad) mov add outsl jne (bad) adc push dec cmpsl std jp sbb pop aaa xlat mov ds inc stc mov pop mov or xchg dec adc in cli (bad) cmp lret iret inc pusha cmp lods cs cmp lahf mov pop sub inc lods ljmp push add add adc push lret sbb clc enter loop fild std in add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl adc in push popl in pop mov pop or xor pop (bad) fldl mov int3 push (bad) cmp pop jge loope es sbb addr16 push jb les loope mov sahf push jle xchg push jne (bad) stc lods sti xor test (bad) dec jb sub or xor ds inc ffreep xlat scas ret fwait push mov inc loop xor lret loope adc push and dec cld xchg fadd fnstsw (bad) sbb les int jno pop dec icebp and sub ljmp shrl test je mov loop adc add jle push lret lds (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl jmp sub lcall hlt bound inc xor mov inc test push or push cmpsb jg les repz movsl mov lods add inc mov dec xchg imul test xchg adc jg fiaddl loope fs cmp and jbe jo adc mov mov popf sbb and jno xorl aaa stc inc cmpl in pusha ja in push call insb jo imul shrb adc jnp pop and adc into mov stos test fsubrl aam cmp addr16 aad mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jle iret loop movsl xchg dec in mov xor jnp adc loope shl adc xrelease test into pusha out lahf mov cltd add ljmp jp (bad) dec test cwtl dec into mov cwtl pop stc cmc push jecxz lret (bad) iret pop in fs pop icebp and cld mov dec jl loope testl push (bad) xchg jbe sti scas adc mov shll adc test xchg pop fdivl push (bad) or cmp arpl jmp movsbl fcmovne jne mov clc faddl (bad) adc stc pop mov mov mov stos xor sbb pop jae (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call pop sbb shrb pop pop bound mov adc pop lock sbb mov and movsl inc add mov loop jl pushf stos adc movsl or jmp add dec out scas add ljmp xor fstpt dec cmpsb add sbb cmpsl sahf and jno dec dec adc push jne dec xor ljmp mov test stos xchg imul insl xchg repz lret out sub mov sub ds or adc cwtl pop jge jmp dec repnz cmp mov sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp popf leave test jmp push add jmp push mov or inc popa fstpt cli mov in fucomi xchg xchg push popa xor sub icebp jp push imul bound mov notb (bad) jmp jbe repz aaa (bad) adc xor cmp lock push loope pop sub ljmp mov rcrb adc insb out cmp push mov and mov dec clc xor cld push sub or mov push scas aad mov ljmp push and int3 lds (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sbb mov jno movsl (bad) aas mov add leave push ds test (bad) mov push add and loop insb mov add scas or and mov mov frstor mov (bad) int3 or or xchg (bad) or adc adc (bad) fcom test lea sbb adc inc mov dec sub pop ds (bad) sbb cmpl xchg flds nop cli push ljmp jb shl pop dec icebp out xchg insl sbb cld inc mov push test jl jns mov pop (bad) dec xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec jl popa dec mov and lock in mov push ror inc (bad) (bad) mov out xchg push xor movsb add notl (bad) mov push (bad) pop dec inc mov cmp sbb mov les out inc rcrl xchg inc mov cmp lret popf mov inc js test or repnz scas mov out fldl test movsb sub mov mov dec addb daa ja mov cmp jmp hlt ja out popf gs pop rorl cmp jp push lds stc dec pop stos inc dec cmpsl inc je ljmp incb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out mov (bad) cs dec out xchg sbb add das lret pop inc aam mov sbb jbe mov in push fnop out mov cmp into (bad) nop dec mov sub mov xchg sub cmp cltd pop fstl lds stos cmp push cmp push (bad) mov cmp jg xlat mov mov adc ja push test mov in rcll arpl iret pop movsb sub mov mov rep mov adc add mov mov outsb cld insb jle sub or jmp jge xchg mov xchg loop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall pop test mov popa lcall mov push sbb sub pop adc sbb mov pop sbb jge scas push cmp sub test xchg lods sub orl push inc add xchg mov xchg add mov jne,pn ret fild stos mov adc dec ja jne aas push jb cmpsb mov sahf add pop movsl call adc cmp rolb fstps std insb and inc pop or pop cld inc pop loopne pop xchg add stos insb test fidivr ja mov (bad) leave leave fld movsl mull sti (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov popf cmc sbb nop adc iret jns (bad) adc (bad) popa (bad) jnp dec xchg aaa dec imul xlat sbb sub push cmpsl lods adc ljmp (bad) pop imul and stc sbb push lods imul sub cmc pop out ss mov jg js and mov inc sub xlat dec mov mov add inc fs stos pop sahf lret jns add cs ret mov (bad) push push (bad) inc into inc sbb inc (bad) pop js and hlt cmp or adc xchg jp fs loop jge mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl das aad add xchg popf and mov fisubrl and ret xchg mov cmpsl xchg jns push xor mov pusha jp push out xor mov in push add in sub popf mov dec dec out aad loope aam loopne (bad) cmp outsl jle xchg aas xor pop jmp sahf in out or dec shrb in xchg stos xor dec movsl lret cmpsl in test or (bad) sti push or sub dec (bad) fadd jno push cli loop mov sti call mov flds xchg or sar (bad) in pop sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl and stc mov in insl imul testl ds push jg shl out push sti iret rcrb xlat xchg aaa xlat test pop ret xchg std mov push pop insl popf and test inc and add mov xchg outsl sub (bad) or hlt lret jb push lcall and jg mov loop cmc dec lods lods dec es lret jl sub pop mov adc aas push sbb daa adc dec and xlat (bad) out pop mov xor mov jo lock inc incl jl or inc cs cmpsl pop or jo imul jnp jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov fisttp loopne mov jmp das xor fs (bad) jno fildll xchg pop mov cmp inc cltd push leave add jns inc or sbb cmpsb sub pushf test movsl xor dec xor jae xchg jno (bad) cmp in mov dec sub leave in lret aas push sub add mov bound and dec add (bad) fdivrp (bad) mov cs movsl jmp pop mov int mov pop push fcomi (bad) repz lahf inc inc pop dec mov fmulp stos shlb cmc jo or dec scas test dec test scas sbb addr16 and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall push repnz iret push push mov inc cmp movsl dec xchg lock dec pop out dec and mov sub mov fdivrp cmp xchg movsl xchg pop push incb cmp jmp inc das pop ret push lea inc xchg in and mov cli daa jecxz dec mov cmc mov je mov insl daa cmp inc sub fstpl jp out (bad) or les pop cmp xchg push (bad) jnp lock jb cmpsl dec or lds push xchg addr16 je lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov mov in mov enter (bad) dec dec movsl rorl sub mov subb sub stos xchg and (bad) es sahf ljmp stc bound icebp add push std and push jnp repz inc (bad) xor insl ficoml sbb xchg xor cmp and mov gs add shll loopne arpl or mov out dec push lcall cmpsl iret nop pusha add cmp test sub xchg or lods (bad) mov and icebp jecxz jl jno loop xchg sub pop int3 adc in cmpsb and std pop sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jl push inc lock das imul cmp nop in in dec pusha push leave xor lods in idivl ret mov or push mov lahf vshufps rolb loope mov sbb add addr16 mov adc in imul inc addr16 fcomp mov inc imul push jl ret imul sub cld repz cmp pop dec mov inc xlat mov imul inc leave dec mov fsubrs cmpsb insb aas jnp pusha inc scas push lcall adc mov mov cmpsl inc pop stos scas loope hlt inc push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp fildl jno ja addr16 mov loopne or add rcl xchg cmpsl cmp inc mov sbb sbb lods (bad) test out ss mov cli cmp xor push bound (bad) fild subl push fistpl dec test mov mov mov es mov push mov inc push adc pop (bad) mov inc mov lret int3 mov xchg loopne push adc xchg mov pop mov push js mov dec cmpsb fidiv mov ret sub xor inc ja mov xchg pop push sub and decb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in cs dec aad adc lods cs add outsb inc jle pushf jmp add jns add cmp dec and aam inc sbb addl rclb mov xlat in imul jmp jns jle lea mov rorl jmp mov sarl mov mov pop mov enter sub (bad) cmp fnstenv mov pop mov cmpsb mov mov clc cmp aas mov inc add xchg lock lret repz mov mov std xor mov xchg xor pop sbb cmpsl nop or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec insb cli out add aam xor out arpl or lods push mov jno scas xor fwait adc mov push mov negl mov clc fist pop ret jl dec push add dec xchg cwtl dec (bad) pushl incb pop lret sub mov test inc adc mov xchg flds push das aaa add xor out jmp je cmp das je xchg dec aam lret mov movsl loopne cmp call xor rol sub mul fs jae,pn (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp jge (bad) sbb pop sub jae or adc xchg mov add std outsl and sahf cmp xlat clc lret (bad) out rcrl aad pushf mov (bad) call stc mov mov or mov cltd je mov cld inc popf hlt lds dec fidivr xchg adc out jbe mov orb (bad) jns mov adc push sub sbb xor cmp das inc jo or mov pop mov scas test outsb add out mov rorl cmp arpl cmp pop fnsave fnsetpm(287 and addr16 mov lods sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lret int jae pop or (bad) jo xlat sub je lahf pushf in adc insb pop lret orl sbb push enter pusha jmp mov dec xor lcall in (bad) out pop mov into les sbb mov jne outsb test mov push cmpsb or pop mov lock data16 xchg cmp and mov shlb cmp adc je lahf jmp imul cmp sarl sahf jnp cmpsl sub ja and (bad) mov add (bad) int sub into jb leave fcoms in push sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in pop (bad) or or adc cmp mov mov sub jne inc mov js popf add pop adc imul cmp je adc andb jg pop mov shr repnz mov mov gs pop lea cmp outsl push sub mov shll and inc outsl in das pushf repz push mov rorl jb popa ja testb aam inc cltd bound (bad) shlb (bad) call dec cmp xor push add (bad) or sub popf adc push mov pushf push outsb sub (bad) call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out pusha popa jns pop lcall push cwtl scas fwait and lret divl pop cmpsl daa sahf sub daa cmpsl mov mov inc fisttpl ds out out cs stos aad mov sbb sarl fmuls pushf push es lahf xor in jns push xchg xchg fnsave mov add test sub sub in sbb pop (bad) ja insb test sub sbb cwtl push repnz dec mov push in and dec leave cmp ds call jb rcrb jl mov negl inc aaa test imull in cmpl lods mov (bad) ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fisttp loopne inc xchg test xchg or fidiv mov scas fcomps jmp cli cltd pop sbb xchg pop xchg push popf shrl fbstp cmpsb (bad) jecxz ljmp xchg and cmc bound mov enter les jge lea or aad aaa cmp dec and rcrb adc mov jg jmp xor sbb je aas pop pushf adc das sbb and xchg insl decl xchg xchg mov jge mov movswl and std (bad) (bad) cli popf push aam loop mov xor enter (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push mov out insb jecxz pop jg push push enter dec and add xor das or xor pop cs or sti sbb mov icebp push or aaa loop xchg test scas mov cmp sub sbb sub mov in xchg mov out sub sub enter sub in pop mull repz das cmp sbb push aas push outsb mul pop jb adc xchg mov (bad) mov pop sbb arpl sti adc test jmp xchg lock adc lods test and xchg push (bad) jae cmp imul mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc inc adc push cmp andl xchg adc and repz sbb lret call ljmp rorl jecxz les enter xchg dec push hlt pop (bad) das inc xchg jo fs xchg sbb push clc cmp add or inc lock je jae data16 dec iret and leave mov fisubrl and sub into dec daa repz inc inc xlat icebp fisubrl iret mov mov dec pop push in and xlat andb dec mov adc movb lods les xchg and cmpsl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call (bad) stos mov xchg sbb pop xor add je sbb mov sub sub (bad) ds nop xchg loope sbb jg add rol popf adc sti cmp add in fisttpll mov mov adc xor aaa enter push mov (bad) push bound (bad) xchg fldt pop inc sbb jge stos ja sbb movsl cmp push (bad) dec repz mov jne out (bad) cmp dec repnz cmp or xor dec add mov mov fsubs inc cmp movb fcmove add dec ret mov jecxz in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec push push push mov push cmp adc fs cli xor pop sarb sbb ret repnz adc jl cmp out cli in cmp sub pop hlt aam dec (bad) in pop arpl or adc xchg dec ljmp dec mov (bad) ss es sarb xchg jecxz cwtl les popa add pop call mov scas into popa mov mov pop add push rcr iret push fidivrl pop pop out dec sub out fidivr mov gs mov test adc out imul adc sub push aas push mov jecxz imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov lea xchg addr16 xor inc lock push cmpsl faddl and or adc sbb mov dec ljmp mov mov dec xor or fwait lahf shrb in (bad) mov sub adcl push popa jne or xchg sar push roll lea stc data16 bound mov cmpl mov push xchg and cmpb and adc mov aad insl popf imull out clc iret lea pop jmp insl and cmp xacquire jl add dec jno jge arpl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp and mov rolw mov cmp mov or jo inc jae imul adc mov shlb xchg test jecxz mov inc nop push mov mov adc mov cltd shl jp push addr16 mov lock jg das (bad) sbbb jae mov fstl mov mov sub dec inc mov mov or cli mov ja pop cmp outsl and sbb pop movsl pop sub cwtl (bad) xlat jnp xchg lea cltd iret push xchg lahf xor mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov push mov jo mov mov ret out fidivl xlat and cld nop icebp cmpsl cmpsl lea jecxz push movsl repz scas add xlat inc xchg and add js loope imul jmp dec cmp bound mov xchg jne sub (bad) xor mov adc test nop/reserved xchg cmp ljmp in and xor jns sarl push aas stc inc mov cs cs and jg jle cltd lods idivl and adc jb (bad) aad in dec adc cmp popf mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl cmp lcall loopne pop addr16 and pop jl or sub and push mov test mov push mov (bad) arpl cli ja insb mov adc push pop test adc (bad) jne sarl out orb push push (bad) cld inc mov into adc (bad) mov icebp push push push cmp outsl fisttp mov push cs sbb hlt sub sub xchg ljmp mov sub das divl pushf lods and es movsb fwait xchg push push adc push nop xchg inc ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov aas mov adc lds loop ja in adc repnz fs dec or jge imul xlat test sbb mov adc xchg cwtl jmp call movsl mov push xor mov (bad) cmpsb test (bad) adc ret lcall imul jp out repnz cmp leave pop dec jae lret sub xor call nop in out jns xorl mov inc pop xor (bad) sti inc mov jge dec (bad) and mov mov or mov sub or inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jns jl mov cmc fdivrl push xor mov cmp jl and mov mov test aam fidivrl push mov cmc pop (bad) jo sbb cmpsb mov pop add (bad) mov ljmp rcrb push ja mov aam mov or jbe mov scas or sub outsb jns ljmp loope jl jge lret rcrl add pop cli dec jb push cmp cwtl iret xchg mov nop jmp sbb jecxz testb push fs loopne (bad) xrelease test jecxz ret ja xor ss outsb subl cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp sbb das add test aaa leave std mov lahf call arpl int3 xchg test bound mov mov push int3 jne mov mov push in sbbl sub sbb mov mov push loop popa dec testb mov xchg cmp les jo xlat test mov (bad) cmp xchg adc repnz push jg gs xchg sub div pushf pop mov out scas dec loop xchg bound lds mov cwtl roll mov and data16 out jmp inc aas jne sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp iret xchg mov jno pop adc cld cmp sahf dec in push dec dec inc mov push fs dec pop pop mov mov jp jns ja jecxz icebp adc jle loope pop push and or sarl xchg neg sub (bad) mov pop adc jne mov jno aaa xchg inc bound push mov clc inc leavew add fadds xchg push clc stc out test adc cmp sub jl push cli push std es es lods je and xchg mov out sahf mov rcrl neg sbb jp push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov mov in add imulb push mov dec or loop enter add mov test mov int3 xor and add inc pushf xchg inc adc sar mov xor ljmp lock stos push add push imul sbb inc pop (bad) sub mov mov cmp dec nop scas insl pushf jecxz out inc push icebp movsb and push or adc lods pop (bad) aaa (bad) jne mov or stos jae adc mov inc fldcw (bad) jl stos sub and (bad) pop daa xlat lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov mov xchg push add fisttp test push xchg lods sub loop enter inc xorb mov pop imul scas cltd xchg bound add dec add add dec mov cmp jmp lods xcrypt-ofb cmpsl in and and repz stc repz mov rolb pusha cmp mov (bad) jb loope in mov enter jb insb and or mov loope push or out adc in sub (bad) iret adc (bad) (bad) ljmp xchg sub inc enter jl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov adc popf jecxz push out xchg mov adc fwait add pop xlat das jp mov mov mov jo sahf push push jmp sub lahf xchg cmp sub mov push loope fisubl aam mov xchg xchg xor jnp push add cmpsl shrl add push pop fist mov cmp repz sbb xor lahf std jbe lcall ficompl loop cwtl jb inc mov and cmp pop jg mov div lock cmpsb mov fwait es xchg cs lods popf inc add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp test sbb mov dec mull mov push inc add movsb pop daa lds fsub pop (bad) in push aaa std fistpl stc add adc adc mov ds scas xchg sub inc ficom sub and sub or sti sbb inc leave fwait or sub mulb mov mulb idivl jo out lret inc ja jle xchg xor scas ja es in popa adc hlt sub popl sub sub cli pushf inc (bad) loopne nop lea inc cmc adc or push int (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp push andb mov (bad) xor cli ss cmpsl add xor inc mov aad dec jge sub jmp xor call sub ljmp jmp repz add xchg rcrb dec or cmp enter ret rcll scas push mov pop das lea stc into jp aaa pusha inc repz rolb jl xchg test inc mov imul hlt cmp fldl pop subl iret pop pop dec inc loopne adc mov sbb inc jmp push mov ret lahf push cmpsb sub inc addl daa mov jmp and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp dec push lods movsl adc fsub aas cwtl push mov bound xchg mov mov jae in or and jmp fbstp add lods jnp lds lret movsb hlt test mov (bad) mov lods int3 dec jnp sub aad xor aas repz imul jbe jmp clc cltd jae outsl fisttp call iret jns std mov inc push jl cmc dec inc add mov add movsl add movsl mov data16 push sub sbb push add mov repz bound js cwtl dec cmp sahf sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp adc lods jecxz movsl pop xchg outsl leave (bad) (bad) aaa push push inc test mov ds xor lods (bad) notl jge jb mov ficompl push and add jmp jno cmp jle in pop js loope lret xchg push insl pop lea test mov daa pop leave pop xchg movsb lahf mov loopne fbstp jns xor mov sti or or or (bad) int3 pop out and fwait movsl fs mov les data16 (bad) and je pop popf push aaa push dec sbb cmp or sub adc aaa xchg inc pop mov fdiv subl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xacquire sub nop cli ss ret (bad) mov std (bad) lcall test divb inc sbb shrl sub in cli lea leave loop push pop add stos mov ret and adc out mov push sbb lcall push push fwait cli mov pusha and sar sti stc frstor xchg sub mov stos js cld lret scas int pop and pop adc hlt dec mov inc dec test gs push adc notb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov mov xchg mov adc iret sub in mov cli jmp les push inc lods movsb mov sub xchg fs (bad) dec xor shl fdivl or mov cmpsb mov sbb jb xor imull or jnp or mov add mov ret fbld push out jns icebp aam sbb mov sub ljmp xchg data16 loop push or andb mov ss das pop std pop aad sub fisttpl sub cli add call or pop das add or mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jge sti cmp sbb mov mov ret push in sbbl hlt mov dec mov sub and inc adc push dec es (bad) jmp lock sbb mov sub add inc pop jl cmpsb cmpsl jns xor push mov jb jp rcrb loop enter imul int3 scas jle sub (bad) fstpl push xor sub sbb push jnp pop cmp mov sub test cs add test sbb es (bad) cmp xor adc xor test pop push idivl cld cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl adc test push ret lret lock add or mov dec cmpsb stos cmp fstpl (bad) (bad) jl cmp jecxz mov mov arpl cmp icebp dec ja fdivrl mov push dec xchg add rolb dec lret rorb inc or mov fwait lods (bad) xlat xchg push adcl jns adc mov lods scas adc or jae xchg and stc and lock insl pop clc pop ret iret inc xchg jo loope mov add or dec mov and mov leave arpl mov sub push es (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fsts nop push test jo mov dec sbb (bad) ljmp les push pop pusha cmp mov and pushf jb push mov sbb push xchg cld adc dec mov cs adc dec sarl pop scas fsubl in jbe add inc (bad) xchg imul fwait or push adc or sbb cmpsl adc dec xor jo nop/reserved jge test jp sub mov int3 out adc or mov bsf jmp sbbb pop movsl pop pop xor sbb arpl push add push fidivr and rcrl and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl out sub push mov int aaa repz pushf xor outsb ss add xchg fwait jns cmpsb mov add bound sub cmpsl out fsts test fwait dec lods fbld dec jmp adc adc mov rcrl pop add sub (bad) pop cmpsl ds dec mov xchg adcl loop ret jg loopne int3 es into cmp fidiv mov xor (bad) pop pushf sub sbb or orb cltd sub and xchg stc jo into and jge sbb inc scas mov cmp and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall frstor lock pop lahf xor mov xlat mov fincstp insb sub fistp sub sbb and lods sahf fisubrl lds xchg mov mov and and ljmp lret pop or push es cwtl dec out dec push sub repnz fisttpll outsl mov adc or mov fs mov mov or sub imul pop adc or fwait or jnp popf jae daa pop (bad) and and data16 cwtl andl mov mov sbb jl cmp sbb add mov or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl or pop adcl mov stos test cmp popa jo or push popa cld insb or test inc repz add dec lahf stos add inc sbb insl or cmpsl mov push loopne fisttpll xchg push loopne xor insl roll jl xor xchg ret pusha fmul in clc bound sub aad daa (bad) sub (bad) xchg repnz lcall cmpsb lds lret sti mov push in mov pop hlt movsl push popl pop out nop pop shrl aad cmp pop lods (bad) stos cmp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov pop and js std push and and icebp fisttpl mov (bad) pop xor xchg sbb fdivrl enter jo (bad) in xor pop sbb push cmp push je mov jg xor sbb xchg cs mov into mov jne cwtl scas xchg out dec push mov lcall repz and outsb cmp repnz sub mov sub sbb ret jmp sbb rclb mov jge sbb pop xor push lea jmp push insl test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jb cmpsb dec ljmp fwait and popf ret je cmpl loope xchg mov repnz mov es into loop push xlat mov mov adc dec ja sub popa xchg div les aam mov test pop adc mov jecxz jns test insb xchg adc jg cmp lock sub mov in gs cmp cs bound cmpsb cmp jne aam or fsubl push shrl inc push or jns jecxz das or or adcl push adc sub push jae (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xchg mov jmp dec sarb ds rolb (bad) jmp jne or or lea and cmp lfs pop int3 adc sbb and and dec mov mov push sbb adc mov aas sbb jmp hlt (bad) in or loope fstpt inc cmp ja lret add dec mov xor sahf jnp imul mov inc jge cmp lcall pop or enter mov mov push loop xor inc add dec lahf leave xchg cld sbb pop xchg fiaddl jnp xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jnp testb in mov sahf pop mov in sub aad mov loop inc loop data16 sti jl fimull arpl les add jp inc pop jno adc lock push xchg (bad) add out jne idivl jno test insb (bad) (bad) in cmp (bad) jo push (bad) movsl imul lock jns cmpsb mov cmpsl jne jns or jno dec mov stos xor lock mov cli adcl jge sbb pop sbb cld adc mov adc cmpsl jg jae imul int lahf jne xor sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl lods push pushf jmp rcrl mov stc fdivrl sbb fistpl inc sti out out jbe (bad) hlt sti (bad) dec add repz or xor adc and (bad) aaa lods out mov rcrb mov dec imul stos mov pop jo fldcw aaa dec fidivr out mov arpl rcll sub cmp dec xchg cmp ja sub cmp fwait xchg pop inc inc and xchg fidivrl mov (bad) mov jge sti fidiv sbb nop adc mov pop lods int rcll (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl jp adc aaa jmp push ficomp and sbb imul (bad) (bad) aas push dec pop pop pop jl push lahf add fisubr out in xchg and scas testb push cmp lret sub ds aad add inc dec cs and dec and push add gs in lret adc clc fildll cwtl lret fdivl jae jo rcll lods cmc or push push mov lret rcll clc add cmpsb cli xor xchg push xor sbb adc mov scas xchg adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl xor ds sti mov add sti aad inc ret ljmp pop adcb cmp dec mov xchg cmp es testl fbstp iret aaa jg dec aaa mov lods sub fs jmp dec adc out mov leave mov add xor xor ds int3 add out inc jno call mov ret adc lods mov pop dec push lock bound mov push aam push in repz mov jmp or dec lret cmp ret fisttpll adc sub jnp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl sbbb jge mov jge jno lods push dec lcall mov imul sar mov insl push jns dec mov xchg sub xor sbb mov std sub leave jnp orl enter ret in decb movsb jae out pushf pop fbld leave scas scas xchg (bad) cmpsl stos test or sti lds fnstenv fnsave (bad) sub mov or mov pop bound out mov dec xchg and xchg addr16 sahf push sbb aaa adc dec xchg pop das add je mul std (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall testb lods adc (bad) cwtl outsl lea fstpt movsl pusha pop dec mov sbb arpl or je mov adc addl pop cli pop jo push sub lcall dec iret dec aad or xchg push pop aad repz dec xor mov cmp test and int movsl lahf mov or insb jecxz push pop pand (bad) out push repz push sbb fcompl and adc cmp divb (bad) cmp jecxz imul sub mov lds sbb arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall pop xchg test andl cli test cltd in rcr inc movsl inc mov mov xor push inc lret add divl dec sub add pop pusha pusha test mov mov sahf inc sarl adc shr icebp loop push xchg and in test inc push or dec mov or (bad) fcmove outsl fcoms dec dec loopne out shlb inc pop (bad) fmulp addr16 nop mov stos arpl mov adc (bad) lock push pop sub mov dec jge cwtl xor rol lods sti sub out jne fmul int fbld pop cs aad cmpsl lcall fadds cmpsb popa gs daa mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp iret add dec and jns mov push and xor push cwtl inc pop addr16 and push lods rcr imul lods dec xor or xchg mov sub cmp add inc adc jl repnz mov dec les scas and mov mov testl or jecxz iret jns sub ja xchg xchg stos push rol adc and mov pop jge stos shrb and pop jbe in lcall cs mov add fcmovne les mov cli test lcall lret sbb pop sbb rorl aad (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp (bad) iret mov jno enter int3 mov iret sub pusha jb gs leave sti mov xor or mov rcll mov pusha cmp cli mov in add cwtl test mov outsl sub mov cmp push cmp xchg xchg insb int3 jmp push scas pushf sub popa push xchg inc lods mov decb fisttpll mov stc leave int3 out in aaa dec (bad) jo pop and in int3 test xlat fs int (bad) lods subl cmp stc mov jmp mov pop rol jg inc roll cmpsb cmpsb jbe gs sar pop sub loopne outsl ja hlt push cmp lods psubsw (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xchg inc fnsetpm(287 mov cvtdq2ps mov xchg adc arpl add sub stos leave test lahf jge sbb dec jae pop sub push push rorb jle jp into shll addb pop or add xchg add scas loope mov sub push mov xor jecxz hlt movaps shlb out or adcl mov outsl ja gs fcoms mov jmp mov pop daa adc inc push pop into adc fisttp pop jge outsl ds sub je push and clc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc pop loopne mov cltd fwait pop out mov sub add fs add sub rolb repnz popa cmpsb jo adc call or ljmp cmpsl call sbb aad inc ljmp xor xchg aas test roll add pop arpl in jge xchg test (bad) pop cmp in lcall lds lahf push jbe jo fbstp cmpb (bad) enter call push fwait sbb and out jle xor or cltd jmp adc jmp pop aaa cltd stc pop pop popa inc mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp ds pop fwait or test cmp xor clc xchg push sub add jns sub test mov repz ret and add icebp rolb xor sbb push pusha fwait pop mov in pop push push adc aas xchg xchg mov and xchg je cs cmpsb repnz (bad) out daa inc mov shr ret out inc sbb jo and out repnz in fwait ljmp stos sarl stos and inc nop lods js adc jmp fcompl or push ljmp pop test testb scas out dec rcrb (bad) addr16 xchg fwait jne ret cld sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc loop jg in mov pop aaa xor int3 clc scas mov insl and pop jnp inc pop (bad) push pushf dec xchg (bad) mov mov out pop xchg (bad) sti in push rorl (bad) aas mov adc mov (bad) cmp cmp jecxz subb or and jbe sub adc adc mov rcr mov imul dec imul (bad) repz mov cmpsl jo aas mov add pop jbe mov ror lret mov addr16 call sub lret lret dec mov sub cmp mov rcl aam mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl jne lcall xor popa sbb jbe add push ret mov xchg clc mov es jp pushf movsl stc rcl sub mov cmpsb test rcl mov clc xor mov sbb mov push std push (bad) addps inc dec push add lret xchg cli mov ret sbb and fbstp xor mov sbb das fimull inc lcall mov dec idivl or aam imul daa cmp fwait jmp mov pop bound xchg stc dec aam dec xchg scas out dec in and popa cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc fisubl dec jo daa dec mov outsb or cwtl mov hlt xor sbb out addr16 pop fildl rcll leave and jne push repnz mov xchg enterw adc push adc mov xchg dec out incb lret ds call shlb sbb ja mov sbb sub enter punpcklbw sub (bad) mov adc aad adc popa popa hlt je (bad) sahf nop inc push jno push and int out sub stos mov mov sub loop addl fist sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call pop fwait push repz cmp jle sbb les int outsl pop lds dec adc pushf stos test in stos adc outsb sub jge insl push popa fxch jne,pn fidiv push or std push xchg rclb push (bad) dec idivb xchg leave push sub adc adc adc mov pop pusha (bad) loopne mov add int3 and mov pusha pop mov sub adc sti inc pusha lret cmp rorb stc mov or and mov pushf jmp faddl ret lds cwtl hlt fisubr fcoms decl test add lock stos jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jnp pop aaa mov inc int daa xchg push call pand add arpl cmc (bad) cmp popf mov adc sub xor cmp inc sub and pusha push outsb mov xor lods push cmp or pop (bad) (bad) xchg jae (bad) lcall xchg outsb adc mov mov incl lea loope add xchg and xchg aad dec mov adc jno imul out fdivl loopne push push pop outsl cmp inc aaa mov test push jno popa add adc xchg int3 push fwait or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call inc add push jo lock pop repz xchg in and imul sub jp cltd mov or or aas aam xchg xor cmpsb mov add inc jae pop xchg and test stos xchg (bad) out mov cmp out lock in cmp jmp lods mov sbb sub in ret ljmp in inc outsl lret pop mov stos ss and aaa jmp inc push fmul scas push pushl scas out sarl adc xlat jno pop push clc es out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sti js add repz lcall ja aad fwait dec (bad) stos xchg jo lcall pop (bad) imulb mov (bad) xor mov adc pop (bad) inc and and popf lea lret jg scas xlat lock cmp cmp add mov cmp and jns cmp inc push insl scas pusha pop sub mov psubusw rolb pop outsl or and and (bad) negb loop adc push cltd enter cmp pushl ljmp xchg pop add ficompl or and dec in stc test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push sub stos mov xor push cmp dec jecxz stos xor lods arpl xchg pop nop adc imul ret adc pop movsb fcomp jle pop mov dec fistpl ss add and test fs scas mov jg sub jl fwait and and push mov std pop inc call push cmpl fidiv loope (bad) mov (bad) (bad) je add cld mov pop cmp cmp repnz daa icebp inc adc mov mov push out xor cmp mov in pop nop lret mov stc popf sbb fdivr (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl sub arpl xor popa sarb push mov mov push (bad) sbb cld out mov push jmp (bad) daa ret mulb test shll sbbl pushf dec lcall pop inc mov jmp xchg movsl inc leave mov shlb jmp inc xchg (bad) mov mov mov mov aas xchg fwait dec xor jne in lods inc loopne sarl or cwtl mov jg or sbb imul dec jle loopne or xor sbb popf jno and imul sub nop jbe mov dec pop cmp ja cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl push out inc sbb iret sub pop fdivrs dec inc cmpsb lea mov xchg loope pusha cli jns ficomp les es (bad) xor inc mov orl cwtl loope imul aam int3 (bad) mov adc das test popf shrl xchg mov inc jb idivb push leave mov xlat or stos cmc clc inc xchg jecxz loopne mov or bound push mov stos and leave mov pushf push sbb pop jmp push lods (bad) cld push xor push imul mov in shll cmp push loop pop test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli test aaa sub leave push cmpsl fs push adc dec das pop movsb addr16 inc sub xor or xchg (bad) cs jbe iret mov or lea sti push js in test in xchg orb andl imul sub xchg lods jbe arpl mov insb or icebp insb inc (bad) adc js jbe imul cmp rep push jb cmp je test ja lret test fs ds mov cltd push fcmovnb xor xor mov hlt mov mov scas jno push push push jbe pusha imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp adc jle jl adc xchg push jmp or jbe cwtl sbb movsl cmp lret add lds pop xor gs jne (bad) lds lret mov ret jo sbbb xchg (bad) pop shlb imul js mov jne or and jbe dec add scas dec cmp mov adc and xchg stos repnz imul ljmp xchg in inc cmc sub adc fwait in pop cmp jp xchg (bad) add push lcall je mov jl lock jnp aad cmp out out lods cltd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp cmp int3 and sub push les imul sbb call push arpl push lret mov cltd inc rcr (bad) dec popa aas shr and pop loop pusha inc js (bad) incb mov dec and decb mov clc pop xor lods in mov push in lahf sub and push adc add dec push xchg pop call pusha repnz (bad) pop das lds dec add js sbb cli mov (bad) addr16 std jmp inc ret rclb out std and or (bad) mov adc movsl xchg sti add call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec dec push add sbb test jb add arpl pop ljmp mov jae (bad) test in adc xchg addr16 sahf jbe jo call xor dec jo loope add push js inc adc add test not mov loope ss xor xchg mov inc dec addr16 out jb pop add sub fistpll in adc jbe or mov pop sub fmull mov mov pop mov bound sbb xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall cmp xchg into cmp jg ljmp xchg test fldl dec push mov adc add xor and lahf and jmp fisttp sbb in loop pop cmpsb call sbb mov xchg add nop imul pop inc or (bad) or cwtl xchg rorl adc push xchg sbb xchg mov mov fistpll sbb cwtl pop dec psubusw mov test inc xlat in (bad) pop jno xor mov mov push pusha pop subl dec (bad) ljmp lock (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call or fildl call add loop pop cmpsb fisttpll popa pop iret xchg add (bad) sub ret xorb out in pop mov mov cmp das cmp jge loopne loope mov xchg aaa cmpsb stos xchg lahf in das xchg inc fmul cmpsb fs leave mov adc mov push cmp in dec int sub mov inc arpl fsts stos cmpsb dec jl mov movsl add mov xor mov xchg pop jnp jns pop imul popf dec lret mov out mov scas into jno or lea (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall (bad) imul and and adc fdivrl repnz xchg out daa xor cmovg outsl fmull (bad) push push mov add popl jecxz arpl mov and sbb fisub (bad) jns cmp inc push mov jae add mov fs mov fwait xchg xchg imul and fnstcw fldt ficom scas mov mov stc mov arpl rol std (bad) push in arpl les ljmp sbb jbe sbb outsl ret ret mov aad dec and adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall adc sbb push punpckhbw cs out (bad) pop ljmp dec add repz sbb je inc ss mov mov adc cmpb (bad) jno adc dec or push sub xchg or cld (bad) or cmp gs push xor call cmc sbb cwtl popa dec sub fidivrl or dec divb test inc sbb sub jge cmc loop imul mov sar mov mov std mov sbb dec inc jne add cli pop jne xchg das loopne inc jae add lods clc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl jns pop mov mov cmp mov sbb sbbl xor cwtl pushf sbbl into cmp adc loope (bad) aaa inc ja neg push lea fs in outsb or sub orl and push (bad) mov jp push or outsb lahf aaa sbb inc push clc xchg in clc pop mov in test les jne icebp subl jo icebp jno (bad) inc rcrb add jne in adc hlt hlt ss adc dec arpl xchg inc sub std nop xchg scas push sbb jle cli (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall stos push mov mov in cltd sub mov (bad) out mov arpl add cmpsb imul ss lock sub xor adc or sti icebp (bad) lea inc in sub sbb mov insl lcall popa add jns movsl leave xchg sub jl cmp aad sti mov push fsubl cli adc xchg push mov ret outsl popf and adc popf lods adc movsl push inc xchg (bad) mov stos int out mov lahf mov imul popa scas stos sub pop cld nop (bad) icebp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jo jbe hlt pop mov aad ss mov add jns inc fnstenv pop sbb pop add loop pop mov popa iret xor aas inc leave in pushf inc pop lret (bad) or dec xchg xor xchg or cs jmp sub xor mov in xchg or aas in test push lea cmpl mov iret in shlb hlt mov and stos xchg jmp (bad) (bad) jae jne dec xchg add pushl sbb inc fstps or push aas mov xchg ds sbb loop pop loopne stos fwait mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp and sahf and ficom cltd adc mov fwait mov popa jg xchg push lahf out test jno mov shrb aam mov aad ds and data16 cmp cmpb pop ja fwait add test faddl in dec bound dec xchg pop xchg iret mov xor sub call pop (bad) jnp in cmp test sarb lahf pop jb sub adc hlt jg mov and pop shlb jp and int3 jp cli and push xor daa in push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall adc jnp rol xchg aaa (bad) out mov (bad) jne dec rcrb ja arpl test and rcll jo xchg mov jb test (bad) roll mov jb negl or sbb fnop jbe (bad) push fsubs stos dec aad dec hlt mov test int cwtl sub aaa (bad) das insl dec inc jae cwtl mov jl vmread jbe out loop mov sti mov bound mov adcl xchg es lret push fmuls aam xor test cmp (bad) clc push clc push call mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp sahf (bad) push or fwait (bad) out std sub les enter popf test adc push ljmp mov out jae jne adc mov adc in mov js or aad add pushf xchg mov out inc fmul cmp mov int cmp popf dec push arpl loop roll mov aad or adc jne leave ds daa pop and mov mov mov (bad) leave or cs out pop sub lea bound stc insb jecxz test mov pop outsl fs arpl (bad) sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl orl jmp add sbb jge ljmp xchg les fcoms test lcall mov cwtl imul test nop dec or pop jp jmp pop shrd mov repz pusha mov mov test std ss (bad) lret aaa jae pop push adc insl mov (bad) out mov pop mov out inc repnz mov movsb pushf fsubl add adc int loope test outsb shl aaa int mov shl daa loope cwtl mov (bad) loop stos (bad) or cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp and add aaa add adc add lret push aaa lock xor pop lea push jno and cmp dec fwait insb out imul inc (bad) mov or scas incl movb jecxz outsl dec repnz leave out dec arpl daa in ss mov add rorb fiaddl push and xor ret adc mov mov pop cld arpl into xchg push xor sti adc add jnp or lahf ds sbb jns sbb sbb aaa fpatan pop in or js ror xchg insl jecxz test xor test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call inc arpl add xor dec add aam hlt outsl mov ret mov cmpsl mov ret xor mov stc cmp fs or cmp data16 mov pop xlat push xchg fsubs das add xchg jecxz cli push push inc and push mov (bad) clc pop sbb cmp stos mov loope jo icebp bound sub in aas lods inc (bad) sub lcall into lcall add xlat shr push or les jl jmp sbb add pop jnp add cld fbstp jge cmp outsl sbb shrb pop cwtl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push inc mov mov cmp xchg arpl adc rcrb int3 jge dec and addr16 shr cmp dec dec cltd xlat adc mov daa mov mov out sbb (bad) lret (bad) mov sbb daa aaa push (bad) stos jl xor inc inc fsubs imul std insb jbe insb jns repz arpl repz popa repnz dec out cli pop adc cmp lods mov mov pop in cld cli pop jecxz xchg hlt xor inc and mov aaa addb sub lock into movsb int jg pop mov xor cmp ret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp pop pusha mov or mov jp stos dec imul out daa mov xchg mov scas inc rcl stos lret sub aam rcll ss inc cltd mov mov mov test and (bad) cmc xchg cli imul inc mov mov pushf push cmp jmp pop test sar pop xor xor ljmp popa out les loopne sub inc adc xchg dec inc jmp outsb mov into lods cs mov and xor aaa xor sarl clc pop pop cmp leave xchg adc jl mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp rcll inc sbb inc mov popf mov aaa movsl lret jl ljmp movsl xor outsb int3 (bad) inc test aaa js xchg ror stos lods imull insl sarl inc add test cs in sub mov rcl pop scas mov in in inc xor push adc faddl mov mov push and cltd adc and mov add inc mov divl scas and daa inc jl (bad) jns mov jp sbb xchg mov pop inc add inc or push mov cmp mov push lods inc xor fwait jmp mov cmp aaa fwait and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jp lea sbb or icebp fwait js rclb adc fs inc fbld cmp (bad) stc mov inc push adc je dec or or lcall lods cs xchg dec data16 or xchg xchg mov mov xor cs aaa mov cmc fild jle add cmp (bad) stos lods out push inc aaa jno nop cwtl cs mov dec xchg cld cmpsl stos jbe rol ret (bad) fistpl sub inc push cmp test mov int or or mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov mulb icebp mov aas mov mov inc hlt push sbbl repz pop rclb fcoms push xchg ss aaa int fnsave jno das pusha fimull sub mov inc or out scas cmp fadd jne jmp dec stc aas fwait push enter scas in mulb and jl mov int push push add mov xor cmp js cmp rorl cmpl cli fisubr mov ss xchg add adc fsub out pop flds jae dec outsl xor sbb and fcos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add orl cmovs (bad) jo cmpsb iret xchg imulb add mov js jo pop adc rolb mov aas ret adc cmp dec adc daa lret and inc and sbb ja fstl (bad) add add lret repnz fs pop test push out imul out in sti pop cmp js or (bad) stos mull or scas adc call mov into jle mov push enter test mov lods (bad) pop add sar adc inc jno repnz push hlt mov inc push jae lret inc and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp and out jno push xor cmp clc dec movsl pop int3 imul stc leave and addr16 test inc gs sbb mov enter int3 inc lcall addr16 jae mov fadds push nop mov (bad) cmc adc stc into xchg aad ljmp lahf lods jg addr16 push add push and xchg xor inc sub jle or add insb data16 jg inc push cwtl push adc repnz shrl lods (bad) pop mov out test ret pushf adc mov test lods popl and out mov xchg jo outsb cld imul out fldenv dec push pusha fldl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add int3 add fdivrp dec mov sbb mov push adc and sub shll push cwtl and push shrl fild (bad) in mov xchg aam mov fsubrs in mov cmp lahf and jg cmp mov (bad) mov sbb and push add bound add mov jbe aas test xchg cmc xor cmc das cmp mov lahf int pop push pop pop push shlb add dec xchg push in xchg and jb loope fsts sbb jno leave pop in lahf jbe out ja push gs data16 insb and fcmovbe push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ds xchg hlt movsl cli call xchg mov pusha or loopne imul sbb xchg inc lahf aas daa fcomip mov pushf sub ficomp pop lds je sub lahf (bad) sahf jnp cmp js int ret mov pop adc cmp xlat cmp adc in in iret xchg mov inc mov inc js or jecxz enter pop aam xor jb dec xchg mov je rorb subl (bad) mov mov arpl mov dec sbb inc test repnz cltd dec sahf in sbb iret cmp pop inc sarb xor ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl ljmp (bad) inc xchg mov sub call cmp jns das inc roll rorl xor aas aam mov add mov out add fwait loop push sub scas daa sub in adc pop repz or lea xor or stos xor cmp cmpsl fsubrl xor movb scas in mov mov jns dec call je pop push jnp mov dec insb xchg fidivr fiaddl int3 push daa outsl cmp jecxz fcoms jb int jo mov lret sbb mov lds aas aaa loop xchg (bad) or mov pusha test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall repnz pop sub lret pop adc lods or pop sub jg mov sbb mov xchg xor push ret jl jmp jge data16 pop mov push cmc js or xchg dec je xchg stos mov mov mov fmul in mov and mov mov in dec aad pop ret int pop cli shr dec mov xor and xchg and cmp push repz push xchg inc ja adc cwtl out cmp sarb push cmp inc das inc sbb mov popf dec adc in lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl jge lock pop test jg adc gs mov rorl add mov lret or scas sahf mov rclb add sub cs das hlt xchg add pop scas sbb sub sahf pop or sub mov adc mov pop xchg sbb and pop mov mov mov (bad) ficomp lahf xchg test mov pop cmpb pop sbb dec xchg adc cmp jae jbe mov mov test mov int3 std js pop cmpsl dec xchg stos push subb fwait jae iret stc jo pop shrb ja push dec (bad) jp rolb pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) mov aas or jo xchg pop jnp shrb popf mov inc mov pushf xlat add shlb jp fnstenv xchg imul xchg loop dec xlat in decl inc sbb inc insl popf out or fcoms test test mov out nop pop in cli fsubr scas test je pop mov xorl in xor or mov dec das inc dec sti pop cmpsl ret outsb cld incl mov lea push cmpsb dec cmpsb gs or push mov push movsl outsb mov movsl jbe imul push sbb jl push addr16 mov or pop adc add (bad) je sbb data16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp call jnp mov xchg jp cmpsl sub sti push sbb lods mov jae aas pop das jp xor test xor jge mov jbe dec cwtl xchg ret dec les jp mov ret cld lret adc lcall lahf (bad) pop pushf scas adcb jne cwtl push xchg push mov lock fidivl aam pop in nop negb cmp (bad) mov mov dec sar iret rcrl lcall rorl push bound cli push mov jle scas mov fisttp test xchg insl mov push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov xchg cmp in iret inc outsb inc es out (bad) pop add push add cmc or pusha jmp and imul mov xchg shrb sti out xor jns adc cli data16 mov lods sar mov or in pop or (bad) jge stos and (bad) movsb test mov sbb js pop mov (bad) inc xlat cli xor push (bad) lahf xchg jbe (bad) fidivr notl jle sbb or rcll dec stc cmpsl mov mov mov push sti cltd mov mov popa (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp push fnstsw mov fstl in jne dec mov sub cwtl movsl test cs out fsubrs mov scas jnp dec loopne xor test lods pop in cld cmc mov adc inc jg ss out mov mov pushf sbbb sub cmp sub imul and fsubs cli mov add xor pusha add loope jae js aas cmp sbb add je jno jb mov out into or jge cltd sub push ljmp cli int dec je xchg ds imul sti or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl push std push into mov push dec and fsincos and test xor mov mov movsl aad push xchg add and inc mov jmp fildll pop cmp push lcall pop sti test xlat fiaddl sub (bad) data16 xchg out xchg cmp je daa push ja icebp sbb jle out in xchg push sahf daa pop pop dec add lret mov out pop jle mov (bad) adc out pop xor pop jmp cmc inc and jbe (bad) in sbb popa add jp inc jmp addr16 loop mov pop push (bad) scas mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl ljmp jecxz sub or (bad) sbb mov mov jmp or adc mov cmp (bad) shrb dec dec push cmpl test pop je imul fstpl out ja jl pop push nop addr16 mov or ficompl fnstenv adc dec lahf popf je dec sbb and cmp jno fisubrl sbb mov cmp jne cwtl or pop lret push adc out mov je mov out inc aas pop jae lods xor repnz lods jmp fnstenv rclb (bad) ljmp cmp pcmpgtd xchg and add stos pop in rcl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl jae pop jecxz jo cmpsl mov lock or pop inc in or and adc out jmp mov cld loop jmp mov stos outsb enter movsb insb les pop pop outsl mov loopne sub mov push mov push and or push ja pop inc std test dec push inc (bad) (bad) push pop or xchg and inc in fsts mov cmp sbb and gs aad add scas mov stos push jbe (bad) ss push cmp mov int and int fdivl dec mov or push ja mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl xchg jp cmp or pop ret pop mov in cld jns ljmp inc in ja in cmc pop xchg mov mov cwtl or mov jae xchg sbb xchg pusha cwtl jmp push mov outsb xchg test pop ret and movsl jle idivl data16 lahf adc inc outsl and cltd cli mov movsl xchg xchg rol xchg dec or mov xor mov addr16 ret stc xlat mov cmp setp bound stos int add nop dec pop adc iret xchg fisttpll adc mov push adc cmpsb into pop inc push add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push jle mull mov and iret jne add sub inc shr (bad) in popa pop test clc imul pop inc ss enter int3 xor inc mov subb aas mov insb loopne stos or or mov adcl arpl and js test ja adc (bad) sbb dec fcmovnu cld in jecxz adc mov fdivp cmpsl sbb adc cmp inc mov daa les or sbb or outsb jle leave and or std mov lahf add jp out stc test and pop adc cltd pop es pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall fdivl inc jp ljmp dec shrb xchg xchg (bad) inc clc fisubr data16 push jno pop outsl add in cmpsl mov mov cmc loopne aam or jp out mov xor gs cmp insb cmp es in in into adc (bad) xchg lret mov pop cmp jl movsb adc mov in pop insl push push mov mov mov int3 out test fmull push lret test inc and minps add fsubrl cwtl xor aam or jg or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call and subl insb je pop sub and stos jecxz jecxz fisttpll or out jp xor jge aas js pushf jbe add or sbb mov hlt sbb pop jb mov pop adc loopne fmulp mov pop jnp adc xchg shl sbb test and (bad) jb test jns mov pop cmp inc (bad) or cmp add mov outsl cmpsb cli mov sub mov arpl clc in mov fdiv les or hlt add (bad) jmp add jae fstpt popa jl push pushf xchg xchg ret inc out and adc sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push or mov scas test in sub pushf push outsl jo cmp dec cwtl cmp (bad) and cs aaa ss xchg scas (bad) (bad) jecxz mov mov add mov pusha ljmp or fldl orl js dec cmp test into push popa (bad) (bad) ja into dec sbb in lret jbe ss pop fwait xor (bad) popw inc mov inc fdivr dec das js cs and push and push mov push lcall pusha or rcll loope or gs sub add mov jl inc out loop mov shrl clc arpl adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push subb dec xchg ljmp rcrl sbb fstl inc sarb sub inc jns ss mov or mov push pop sar push xor sarl lds jp mov ficom inc lcall js xor lods addr16 or and jnp sarl imul mov push dec push mov cs push mov aas imul lods or sahf (bad) clc and outsl jne fidivrl adc cmp fisttpll mov movsb xor inc or xchg (bad) rorb inc leave add mov in adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call fwait and lea mov dec xchg adc xor pop and pop or push mov rol cmp and push inc lock nop (bad) outsl fistpll les mov push mov js fwait jne mov push out mov into xchg andl adc sub (bad) ljmp cmp (bad) imul es mov pop mov bound stos iret (bad) cmp loope mov and roll dec call pop in and mov iret fsubrl into je mov pushf mov mov aad (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl outsl jg addr16 fcoms adc and icebp or mov xchg and pop jnp lret std sub jb dec test xchg and fs dec js adc mov mov scas xchg add sarl pushf ljmp cmp fsubrl nop mov repnz mov pop xchg negl mov or mov lea add scas outsl jb or lret pop xchg jp jnp mov mov loope decl inc out into sbb int3 pusha scas loopne (bad) xchg shll add cmp scas bound repz dec into aad add sub dec daa repz test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall pop mov fimull or sub push mov jg xchg imul add loopne loopne add jbe sbb pop int dec or mov inc sub out gs mov push push push aam pop cs push loop dec cs adc out inc in jo inc push cmp adc std outsb mov fsubrs cmpsb xlat aad add arpl or and push add inc aas es inc and xor add mov fmull repz fxch lret mulb out (bad) aam lea push cld and dec mov sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp inc out push cltd sbb lock mov insl loope sti inc dec mov inc add xchg test xchg and mov sbb jne push out mov pop idivl add loopne or fdivp jno or (bad) shll xorl mov jb xor adc add cwtl mov outsb sbb scas jbe hlt fwait nop test daa cmp mov in movsl (bad) cmp arpl leave cwtl (bad) jb jle jo or xor dec or dec insl inc push sti movsb shrb lods sub repnz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov jb sub mov pop jne,pn outsb dec and cs jl rclb xchg sub xor sub test movsl mov test lret mov sti fs cmp push xchg jb shlb lcall cmp pop cmp into arpl lds mov dec push ja sbb and fdivs loope push aas loope cmp add jae mov test test popf scas and xor movsb add adc lret push (bad) mov add mov dec loopne mov push aaa ror stos pminsw (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out dec icebp jmp aad fwait sbb adc std mov stc mov adc (bad) jbe aas cmp test repnz mov or out jle push fstp (bad) sub adc and adc adc adc mov sbb lods repnz pop in jmp mov pop pushf fadd in lcall lods xchg (bad) iret jp aad jne ret jns jns adc push lret add cmpsb sbb adc daa push sahf imul out imul lea adc std ret fnop push sub imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp pusha ret pop adc leave jb jle js mov mov xor cmpsl xor inc insl imul xor and (bad) lock bound fdivrp pop fidivr mov inc sahf test and in mov add push outsl dec stos xor out in loope cmp ret fwait (bad) mov add and jg add add sbb sbb je sahf pusha mov push push sbb xlat xchg mov mov shr xchg lret js dec das test jge xchg rcl movsl sbb mov popa das jb sub stos cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov fs ljmp cmp or je roll mov sub jmp xchg inc cmp addl add push out test cmp and jl bound inc adc sub jae movsb jnp pop cmp mov (bad) lods insb lret jmp lret hlt push mov call cltd out fwait outsb mov decb inc pop data16 scas jb jle pop pop add icebp clc fisubrl sub pop ret (bad) jo xor jno cwtl or into movsl adc or (bad) cli in pop pop sbb fist push fisub out divl arpl adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call or nop lds daa dec arpl xor cmp mov xchg (bad) jbe dec mov cli jecxz mov lock lea pop stos mul out dec inc pushf pushf ljmp dec mov or mov xchg add mov fs sbb test jecxz inc push adc inc cmpxchg jecxz ret xchg imul or xchg and es xor scas xchg jmp ret sbb add xor add mov ds ljmp pop stc ret bound xor loope scas call inc mov and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall add mov sar cli dec pop ljmp push shlb loope,pn mov ret das sbb sti mov xchg cmp dec adcb and rcl popl imull dec cmp fldl fwait jno scas cmp push test jle out ret jg jle cmp push or mov mov aad xchg mov arpl and push adc ret xor sub add divb movsb (bad) fdivrs icebp push in cmp adc fisttp sahf push pop sub xchg cwtl pushf add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xchg insb jae push js fmull xchg test (bad) imul cmp or gs (bad) push lcall aas data16 push add mov dec cmp jge and stos sbb pop fs addr16 in push les pop xchg dec insl subb mov test ja pop cli inc nop enter call lret sahf movsb jns push (bad) xor xchg popa mov and negl test add bound pop dec jnp icebp add push xchg in lret dec pop cmpsl fwait les nop cmp (bad) popf repnz jb jmp or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) js popa mov xchg mov pop lret stc in ljmp lds push push stc fsubrs (bad) (bad) adc fnstcw inc les daa jl mov jb inc push arpl pop inc inc push pop jge lods inc push out pop lret adc out imul inc mov sub jmp ja ss loopne mov sub cmp mov mov jno jmp or fiaddl (bad) (bad) mov in jecxz inc sub fnstenv cs int3 xchg inc out and jmp dec jae,pt and adc fnsave (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc adc popa sub xlat call jae imul lahf push or mov mov pop mov push shl sub fcomps mov ficompl je outsl aad sbb inc inc bound lods bound mov cmp xor sbb xchg insb adc cmp cld mov push loope lahf ret xchg lea push enter ljmp jmp in mov or mov and (bad) das into cli (bad) xor lds xlat das jl fidivr fist repz fs push jecxz push mov outsb dec dec popa fdivl jne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl ja dec lret jp fist jbe in sahf ret mov call test cmp and and dec and mov sub shr push andb cld lods fimul sbb inc mov rolb mov mov pop mov fcoml movups jae lods adc cltd mov adc mov leave sbb loopne inc jle mov clc stos aas jne das les push sub arpl xchg cld and mov daa testb push lcall test inc or stc push fdivrl jns pop leave inc mov dec lret idiv (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall insb sbb test mov imul mov (bad) push daa fmul arpl movsl add pop stos (bad) popa inc nop clc mov push mov jecxz mov mov sub cmc xor sbb rcrb lods pop mov add cli mov sbb push push cmpsl inc sub add clc cwtl mov notb jns cwtl dec aaa fstl mov lea jo sub lds notb adc jl xchg add pushf inc (bad) negl daa push bound xlat xlat mov pop movsb aas xor dec cmp jle pop enter pusha and imul inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec sub std jnp dec icebp push jbe sbb dec subb or xchg push int3 cld inc cmpsb cmpsb insb daa fsubrl fst xchg push sti hlt dec inc jp data16 xchg pop movl push in insb test out pop push lock and dec push push or xor mov add (bad) mov inc mov (bad) pusha mov pop scas and mov add popf or xor pop adc jne pop (bad) dec mov (bad) sbb andl call pop jns popa mov xchg sbb iret and cmc out jo mov cmc mov pop lret gs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl sti xor or jp test xor push (bad) cmp add shrb xchg xor sbb (bad) sbb sbb outsb ss (bad) lret cmpsb rcr (bad) insl (bad) into sbb bound push fildl mov sbb mov jns mov lock out ljmp fstps psubq mov in jecxz push mov je cmpsb push sub fstl cld mov xlat fldcw push andnps dec out pop xchg fnstcw and dec add ljmp in push mov movsb fs inc lea or pop rclb dec iret fiadd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call push cs ret xlat icebp repz inc mov outsl inc pop cmp out dec add (bad) lret sbb ret dec mov notb outsb jmp sbb into pushl pop scas icebp mov cwtl cmpsb dec xor dec inc pop pusha dec incl sbb cli fisttp add aam mov movsl rorb (bad) ljmp add arpl mov cmp sbb inc adc loopne adc movb jb fdivs (bad) and mov fs roll adc test mov jb loope pop (bad) mov jno test in sbb jge jp in jne jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec lahf push data16 fldenv jmp sti adc gs lahf imul xchg scas ror loopne add out jecxz mov jns mov push shrl dec aaa mov adcb or sub push aas jecxz push out xchg add mov lock outsl jo inc aas in fstpl addr16 daa mov sahf rclb cli leave in movsb mov movsl pusha or popf sub out jne adc mov out push test fldenv xchg ds push cmp int3 jg push aas stos push fwait gs out fnstsw mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp daa xor test sbb adc inc jecxz jle jg repz and iret sub xor std sbb inc neg imul sub out and mov push scas ss lahf dec movsl mov imul in lret out push push out dec int3 mov sub mov push lcall jne jno stc sbb aam cmp out push mov inc aas loopne inc insb mov mov cmp (bad) cltd or adc cmp jbe stos cwtl aam inc icebp adc xchg push mov and xor push lods daa movsl punpcklwd mov jmp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc bound imul add lea push pop inc adc arpl mov add aaa lods or mov dec lret popf cmp jb inc ljmp lret adc shrl push mov dec jb sub sub bound loop iret jmp mov sbb or lret sbb mov pop test add push xchg les aam sbbl cmpsb adc or jmp popa les fwait pop js scas cwtl cwtl insb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp inc dec jno (bad) (bad) cmp xchg mov mov out mov or adc outsb add jmp mov cmp push and mov xchg jns loopne f2xm1 lcall fild sub ret inc lods adc in enter lods cmc xchg push sub cmp or inc cmp dec lods xlat adc movsb jns jp pop xchg ret in das push mov push cmpsb adc imul icebp mov mov push mov (bad) movsl adc (bad) fsts gs lcall jecxz jb jb mov roll jmp data16 xor fist pop arpl scas mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl lds movsb popa push clc jmp xchg shr div pushf testl scas es iret dec mov inc jnp fwait dec cmp aam pop inc test push push inc mov mov ss xchg adc and inc push xor fs inc mov or stos add or ss mov and repnz movsl add insl (bad) insb or jecxz jo mov inc sub lret adc orl dec push sbb xor cli xchg dec add push add or sub out mov cmp mov orl insb (bad) adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl scas fs xor pop sahf lds outsl (bad) dec push jmp popa dec xor mov aad clc inc cmp int3 adc jmp cmp mov xchg mov xchg sbb mov jge stos jnp int3 cmc mov jne xlat cmc cld mov xchg mov or (bad) mov pop mov int3 shrb inc push mov dec fs jmp scas mov popa dec stos insb jae in test push cmp push mov cmc (bad) xor enter sbb mov push (bad) (bad) dec mov cmp jge fwait mov cmp xchg xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov dec mov loope insl add or mov daa pop shr insl jge or int sub repz in add (bad) in repnz sub xchg or sbb pop (bad) mov lret jle test scas or push gs std nop push gs xchg (bad) ljmp daa (bad) mov das inc test loopne pusha loopne and dec lods mov adc jno xor xor addr16 js hlt and mov das xchg xchg je mov xor add mov mov sbb xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp iret and loop push lds pop mov push imul sbb mov jle dec cmpsl jae je outsb cmp or sbb ret fldt jg fldl pop jb lea push push xchg jp hlt lahf sahf subb das or stos shll inc push xor push subb sbb cmp jp mov pushf arpl add rol nop pop movsl xchg ja loop dec sti jns insb sbb flds sub adc aam rolb test int3 jb push push roll outsb dec sub les sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call in out jg roll fidivr stos sbb mov lcall or add push jle je dec mov addr16 iret push loopne and icebp and dec mov scas (bad) adc and xchg inc jp (bad) ljmp sub inc pusha pop pop aas jg mov cmp xchg mov sub pop dec cmp in and pop jl sbb push jg test jl rcll iret cltd (bad) xor cmpsl push (bad) scas std sti jecxz in cmp out or (bad) jne es cmp fisttpl add ljmp xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xchg lcall inc push ret jbe and add push and std mov into es (bad) movsb stos (bad) xor lods les dec add xchg pop cmp sbb pop pop push mov push rol and mov and fbstp dec out xorb jb or dec adc ss cmp add or (bad) arpl mov push gs and ds inc cmp jl lock dec out pop repz push and xor cmp or aad pop (bad) (bad) mov push scas pop inc lods mov cmp aaa mov jp sub xchg add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti xchg xor xchg jns stos pop jl sub andl imull inc fimull pop hlt loopne fcmovu inc decl xchg (bad) mov jmp xor lret out jle xchg jp dec movsb inc cltd xchg roll popa loop cli and xor add jg das cmp cmc fisttpl adc and xchg test aad test cli popf int3 js insb dec xchg loopne mov sub in cld pusha mov push and mov cmpsb mov jmp insl mov addr16 fidiv icebp stos shll pushf cwtl jmp mov loope sub popf aad cmpsl jne and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push dec pushf clc mov addr16 mov add lcall test cs cmc mov dec repz movsb repz sub lahf sub das in (bad) iret dec jmp xchg call adc jbe ljmp jg cmp dec shl mov pop cmp mov ret dec pop xchg cltd jno notl imul sbb and int sbb mov aad sti sbbl bound jmp inc sub cmp xchg push leave add jo push jg mov mov out (bad) loopne jge sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call and lods pop repnz (bad) mov mov mov jmp xchg fs mov imul popf repz jo cli and push dec scas bound push rcrb mov dec push ret pop jns sub inc or push es cld movsb and push xor dec mov pop xor popf mov notl (bad) iret jle in xchg movsb imul in pop pop sahf test int mov sub xor in cmpsl jl dec and gs and mov sarl lds sub ljmp dec mov pushf les push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp or jb lret (bad) xlat (bad) (bad) stos arpl mov jl push mov sub popa (bad) adc shll adc xchg mov mov mov imul mov or dec push sarl lcall addb mov fbstp cmc xchg jg jge imul enter dec das add repnz push ds in imul inc shr ret mov dec sarb mov push inc (bad) xor jp inc loope cmp mov or cmovle dec jle xchg jo mov into pop jo sub lock (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp arpl insl je out aam daa ds jle pop les xor adc mov int xchg adc fldlg2 mov adc sub in sbb add cmpsl fidivl pop stos rcrl add mov xor mov cmpsl int3 int3 jbe push or push mov dec hlt adc in xor dec jnp adcb cltd aad or icebp mov loopne mov jne or jmp in aaa cli les adc push insl ja mov sub pushf mov fidivl popa lcall or push xor push inc add pop lret push push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp sub nop cs or dec insl insb in xchg jb push mov lret push inc adc xchg pop fldcw xor jmp je xchg (bad) mov lods loopne scas (bad) xor aad arpl hlt inc out add cld and cmc mov loope test inc push scas popf xchg les cmpsl pop int3 out ds insl lock pop repnz jmp xchg and xor xlat std mov jo mov lods pop aam andl mov dec pushf or les cmp adc jb dec fcoms (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp call sbb repnz in cmp mov push ljmp dec aam popa mov lcall jp shrb stos test and cmp js lods jo dec cmp in and mov sbb xor jl fidivl call fisubrl int3 adcl add scas mov frstor (bad) xchg in js js mov mov add cmp ljmp mov lret lret sahf pop je mov adc cli sbb arpl in stos insl push and dec fdivs fdivs test enter inc fldenv leave cmp push dec push scas mov decb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl pop push inc bound fcmovnb (bad) mov out push push mov xlat insb ret gs movsb sub push jge shlb mov int (bad) mov inc sub ret (bad) shrl cli xor xor mov and inc dec or (bad) mov xchg adc sbb sub scas add push inc loopne popf mov subl pusha test pop test sub loope mov add xor insl push scas xor cmpsb push mov les push push mov lret pusha repz xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp push cmpsl pop pop lods fs popf ret mov fmuls pop and scas mov or xor xchg jb inc xor cmp pop sub mov mov push bound aas sub fdivrs inc outsl dec lds std mov dec cmc leave xor leave jno inc sbb mov and aas out fistpll iret std (bad) xchg popl stos roll jle mov dec push xchg cmp mov lret mov stc push (bad) shr and clc xlat in jb jg int3 sbb test inc adc daa push int add mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl outsl jmp pop (bad) pop add dec mov cmc in test icebp aas or inc push xor dec mov out (bad) jns insl inc and mov das test clc pop mov pop adc int push mov nop lock jo cmc push lods mov push cs (bad) je xchg xchg sub pop add rcl pop outsl ret fsubrl and cld ds inc cmpsl popf into inc mov dec ss int3 pop dec (bad) ficomp xlat push ja fbstp data16 adc lcall in shrb adc inc fs pop rcrl aas cmp out ss enter cs xchg xor inc push mov clc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jle inc jge in test rol insb je mov push or pusha mov punpcklwd lret sub jle cmp gs xor mov ficoml add (bad) xchg dec sahf push mov outsb mov test clc xchg mov jne repz (bad) push or push fsubrl lcall cmp in test test insl mov pop rcrb cmc xchg push addr16 adc stos aam mov out imul imul data16 sahf addr16 pop rcrl ret ds ss xor jp loop jl sbb fdivs push sbb aam push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall lods lods or in rorl in mov lahf inc xchg sub sbb or rolb std mov enter js jg xor push sub cmp adc daa mov aad int push js (bad) push ljmp add xor jns popa xlat movsb fldt pop jmp mov xchg (bad) push das jge rolb jo mov or jnp ds sbb mov cmp jmp ss mov jb inc loope movb iret enter aas mov mov rorl (bad) push mov adc jmp sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall call repnz cs or orl mov fimul test je xor xchg dec fmulp (bad) js ret scas mov mov pop aas mov push insb xchg dec fdivr dec incl sub out jle lret imul push mov mov iret test lret add into or pop pop sub mov pop js leave or adc adc xchg cmp xor or shlb sti (bad) scas xor dec adc leave mov aad adc add es (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jo dec iret sbb mov loop mov add stos test mov xor shll nop xor cs mov push lahf insb enter ficomp jns lahf lods stos mov jo stos push je jb (bad) dec dec add cli sbbl xchg idiv xchg idiv and scas pop pop mov cmpxchg addr16 adc ret in ret dec and mull jae pop or push mov jp sub dec push les mov or xchg pop mov jle in js fwait xchg rolb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call call xlat sbb mov out fcmovnu (bad) add cmp das daa sub out movhps push mov jg xchg int3 insl push arpl push ds jmp sub lret push rcrl stc push mov addr16 and mov cmp dec std into aam sub imul dec push jo mov xor je loop jge fdivrp shl sti jb icebp push add dec xchg orb xchg pop add fdivrs mov xor (bad) jecxz xlat sbb out in xchg mov or roll (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl push arpl lahf push push push mov and call inc fcmovbe mov pop xlat lret jg (bad) rclb cmp sub mov inc ret test stc stc sub idivb pop push ret sti cltd lahf xor lret jge das aaa push mov jno push out pushf adc fldz icebp sti enter (bad) fcom in iret fiaddl orb dec xor jle rorl cmp aaa jo rcll adc clc xor sub scas loope push sub or add jg jl insb mov test clc fs pop scas inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall (bad) xlat insb xchg pusha iret xor add fnsave xor pop bound sbb and rcr pop (bad) mov inc test xor loop mov add test and jl dec adc repz push lock push dec (bad) hlt mov sub hlt sub dec clc add ja mov and leave jne outsl bound cmp cltd sub mov jnp (bad) in jg jp sbb xchg aad inc xchg orb cmc sub call pop jne add mov fiaddl sbb pop rcr rcrl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl es jns xchg xchg add cmp out jb add mov mov cmp js push xor loop (bad) fidivr and pop outsl out adc pop mov fs ja jle fs mov sbb sbb sti dec pop mov sahf or sbb je jp mov adc call jp (bad) jp or push push mov cltd xor aas fwait popf inc cmpsl pop and incl jo fucomp dec sbb adc lea jg enter ja adc test pop (bad) mov pushf addl cli outsb push mov or out push rolb dec mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl in clc inc and xlat popf and cmpsl cmpsb or mov xor fldt loop outsb and lahf push or jne js cmp jns push test dec mov call mov push push clc push jbe in nop hlt nop inc or lcall sti mov jbe cli loopne push fisttp xor dec outsb sub mov clc pop pop in dec jo and (bad) jo jb and ret movsl xor or bound out push dec sbb fmulp cs jl lahf jo into add jne nop mov fdivl imul mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl jmp pop add mov popa push mov (bad) xchg or scas lahf int3 js (bad) aaa jp jp add sub dec adc push cmp push adc ss and and fwait data16 ret outsb mov mov fdivrl xorl test add push inc mov ljmp clc pop fs js cmp jmp fisubl (bad) mov push ret pop fimull fcmovnbe push imul cmpsb dec and int3 jge mov pop icebp (bad) inc test clc ja nop jg inc in shlb aam cmp mov xor (bad) cltd and imul loope cld cwtl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov aad cmp sti jb das mov iret add sbb imulb aas loopne xchg sub jne xchg in fdivl aas jb mov movsl bound sub cli sub in lods cmp cmp out and loope ja movups ja mov or pop dec cs and or stos rclb and lds mov or cltd out and inc test insb in ja add leave jmp (bad) dec ss adc data16 rol adc into add jge add fmuls dec out fisubrl cmp ja lret jecxz pop in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in or add xchg jg scas adc insl mov imul push into test inc mov sbb pop inc stc dec into mov gs clc jg push push sbbb rcrb icebp xor or les sub sub or movb dec jnp add (bad) sbb adc mov xlat cli mov add mov in pop cmp ja into (bad) pop cwtl outsl cltd cmp enter fistpll mov jmp aaa ss loopne fwait sub pop mov xor mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov out mov scas iret jle outsb in xor pop jb mov cld int3 xchg popa aaa hlt movsb or push lea inc push lea pusha (bad) inc dec or (bad) jl imul sbb dec jmp inc sub sbb cli ja int3 sub mov into inc fistp dec cltd sbb sbb dec popf rorb aaa jae (bad) and pop popa adc fstl push adc clc dec inc incb mov (bad) clc xor jle cmp sbb aas mov test jmp scas or scas lcall imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push xchg or pop scas stc mov in imul sti in pop jl pop (bad) mov emms aad inc cld cmp hlt xchg mov inc das jle daa pop fwait rep xchg xor movsb pushl xchg out movsb pop (bad) in mov lret jno or cmp (bad) or ret mov and frstor mov xchg scas jns in mov lock addr16 fneni(8087 jne push movsb push push lcall lods jo sarb movsb hlt push sbb mov fistpl sbb xchg scas out pushf push cmp pop mov (bad) gs xchg scas fist add sbb fs mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov scas mov arpl in sub fildl cmp dec cwtl dec mov daa jo imul pushl (bad) xor inc jecxz dec push adc mov int dec xchg cli scas dec cmpsl aaa js add jecxz lods add repnz mov stos xlat and sarb fmull fadds xchg shrl mov shl mov cmpsl pop mov loope stos xor cmp jge aaa outsb cmc (bad) lahf push xor ret jnp dec loop popa lcall and lock push lret jecxz pop inc xor div add sahf and or int jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp out jp pusha mov mov push ljmp cmp enter pop in gs jae loopne enter pop add and pusha out or or or ret sub push push mov mov es sahf imul xor xlat sub sbb or pop add mov leave das ja repnz (bad) mov pop fdivl pop xor pop pop hlt dec jge push es jp,pn push movsb cmpsl bound imul pop jbe popf xchg jl pop stc shrl fwait or push sti cld mov lea dec icebp push xchg je or call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call push sub enter push xor lret shlb sub sub stos ljmp incl cld xchg pop fisttp loopne adc cwtl das in adc lock js pop int mov fs loop call xchg jae mov mov (bad) sub gs ffreep and pop mov clc sbb (bad) xor xor aam push cmpsb mov loopne pusha cli fistpl stos sub sub xor or lahf loope out mov test aaa push idivl (bad) rorl cli loop sbb loopne sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp cmc jg mov pop imul jo addl (bad) sub loope ss and gs mov push (bad) and mov mov mov adc jb xor repnz adc xor outsb dec mov int3 (bad) push cmpsl xchg jnp pop pusha insb xor (bad) fsubr cmp aad sub and dec lds test lock (bad) (bad) mov ja in hlt popf mov jne imul rol push mov push xor out xchg test or pop sub mov dec lea test mov xchg rcrb cmp or sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld (bad) js aad scas push scas repz ficompl xchg jns movl mov in xchg xor repnz fcoml mov cmpb loop mov lret pop pop std mov and sub and xor movsb push and (bad) sub push flds mov jbe sub adc cmp sbb mov mov sbb add clc aam fisubrl fsubrl ja repz push mov popl icebp sbb rcrb popa push sbb mov push add into lock or mov cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov pop mov xor mov mov loope mov ja pop das mov and dec inc mov fldt data16 push loopne mov (bad) pop frstor push pop aaa ja jp mov je xchg insb jne sub cmpsb stos dec pushf fistpll je xor add adc sub ret cmc ss or cwtl and mov jns lret add sbb xor jo jge in idivb add or in outsb cmpsl lcall add and xor stos xchg mov idiv (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push es adc cs sub pop rolb mov jg or hlt lcall pop xor mov ret sbb scas push sub lcall xor out hlt xchg imul stos jl mov (bad) push (bad) imul imul enter std bnd insl fsubl xchg fsubl mov insb aam loop sbb inc bound inc add push inc mov lods sub stos in mov pushf jbe pop mov pop and xor lret sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl (bad) pop popf shl mov pop mov repnz add call dec ljmp sub inc push fnstcw lea fisttpll mov insb pop out in cmp mov inc cmc jnp lcall mov sub sub cld insb pop mov add cmc les jo aad add int3 jg cmpsl xchg bound inc int xor in jge mov or mov jl cmp and jg adc shr fdivl and test add dec outsb mov pop adc pop cmp mov cmp sbb daa mov adc adc cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov je js lret push mov mov mov mov call inc jl lods mov xchg arpl stos mov mov iret lret fadds les push pop (bad) popa stos mov repz jnp cwtl fldt out mov test sbb hlt repnz sbb leave pop scas push mov jnp adc inc cmc xchg pop mov (bad) rcl mov mov fbld or xchg mov cwtl xchg xchg mov xor jge test add xchg jne xchg hlt (bad) imul xor adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl add add add xchg into cmp dec repz (bad) adc outsb cmpsl int3 xchg icebp (bad) in cwtl enter add ss jl mov push lds fdiv cmp jp lret enter idivb xor bound ds xchg sub mov cs daa loop subl js xchg mov push je cmp mov xchg mov pop divb (bad) jmp or into cmp cmp outsb mov rcrb test cmp adc lret imul pop cmp popa dec and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec pop sub (bad) hlt out mov insb outsb bound push mov mov rclb pop mov add sbb cmp xchg mov pop rcrb pop repz inc incl pop dec mov xchg jo mov jmp xor inc loope lcall xor sub jne movsl push lret out clc scas cltd repz lods adc push loope,pt repz sahf push mov push pop push enter ror xchg dec push push cwtl arpl popa sbb (bad) jmp scas add scas push gs jecxz inc hlt mov xchg mov into push js (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push xchg pop xor adc outsb dec push movsl hlt jge push outsb xchg mov mov cld daa (bad) dec push mov ja jns sahf xor lret inc mov jae xchg push dec jle shrb stos imul cmc mov cld in rorb loopne orb xor in mov xchg pop mov pop stos add insb mov out jnp push lretw jnp (bad) mov and clc insl cltd sub xor mov pop ljmp push add cmp rorb (bad) cmp mov lahf jl movsl jo insl lds mov jl fldcw mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) test (bad) jne add sarb xchg lods push loope pop pushf insb aam xor push jle and jecxz lcall lahf arpl fsubl lods jg (bad) mov xchg daa sub sub inc cwtl jb push mov repnz outsl xor iret negb push mov imull aad dec divb xor popf jb pop movq add out mov test sub aaa fistp add ljmp mov push lea push dec xor sbb imul or cwtl int3 xchg pop sub sti aas xor (bad) fnsave (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov or jg icebp inc ret mov xor int3 xlat aaa adc mov insb cmp pop mov fbstp or push sarb iret shll in decb leave add or imul jns push jbe xor pop adc nop cmp dec ffreep jg sub das cmpsb adc (bad) dec enter in movsl pop mov stc mov mov cld push adc lock add adc test push vrsqrt14sd ret dec adc push xor mov add lret and dec fcmovnu (bad) nop pushf xchg stos xor pop mov mov outsb jle and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call (bad) stos or mov pop cmp ljmp (bad) out lea cmc push pop (bad) jmp fildll jo test lods stos mov pushf xchg mov mov push jp jno sbb push sarb pop xchg and pop cmp sbb jns les jb and (bad) pop jg jg jae (bad) push jnp lcall lds iret inc (bad) mov sub les iret jg pop fidivrl hlt sti sbb and cmpsb (bad) call dec inc loopne aam adc sbb ss fisubr or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov lock aaa daa xor lods mov xchg loope xchg mov mov (bad) mov lea dec popf mov sbb mov dec jne or pop adc push sbb pushf in pop lods cmp jl outsb cmpsl pop cmp mov pop xchg sub add lret adc jmp clc add xor mov mov pop mov pop rorl (bad) leave inc rol lret loopne pop aas ret mov jmp jb pop dec dec mov jp adc mov adc movsb mov mov mov sbb or cmovns lods pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl sub imul lods inc nop dec cmpsb jae and outsb clc jb lods stos sbb mov cmc lret aad insb xor cmpsb in lds shlb cltd movsl inc enter push jno push mov sti repz pop cmp fstps std in (bad) jecxz cs pop aas enter ja adc lock gs jecxz daa sbb sbb jbe mov icebp into (bad) dec mov data16 les ja xlat xor xor lock mov out xchg mov mov mov pop push addb xchg mov xlat jnp lods (bad) aam fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jmp jmp lods xor pop sbbl cs ljmp mov mov cmpsl push ds movsl pusha or push cmpsl repnz inc ljmp in insb jns xor test xchg int3 mov push sub lods (bad) sub outsl shrb sbb movl pushf sti das mulb dec cld mov fdivr lods or mov leave lods popl (bad) fwait sbb shl repz mov jp sbb xor cmc push pop mov insb adc and jnp les xlat in hlt inc jecxz mov jnp jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall adc jg jb add mov int3 jb cmp in dec mov xchg (bad) fsubrs test mov jge xchg mov cmpsl shrb or xchg test adc mov cli rcl ret mov icebp test daa outsl sub xchg mov mov cltd (bad) ficom dec mov shlb push das repnz stos fwait lods orl jg repz fnsave outsl int3 mov mov fucomip add sbb aam or inc pop push in pop mov adc sub dec stos xchg movsl pop loopne shll (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fst dec in cmp add push sbb pop mov ljmp fwait jmp ret mov add pop pop sub mov out pop cld xchg adc outsb dec subl add sysexit lods mov adc inc repnz aas mov and push cmp mov movsl ja test in sub dec test push movsl sbb xchg les push lods pop lea enter iret inc or xor xor rorb xor negb cmp popa imul jnp aam lock repz fidivr inc jnp mov jbe push xchg cmp push fwait jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push aad insl inc pop movsl std pop mov and xchg divl jge mov sbbb mov adc xchg test aam shrb add dec pop sbb jnp mov lcall aas xchg mov aam fsubs fs int loop pop dec daa (bad) xchg sbb push jae xchg not (bad) rolb aad inc sahf inc jge in pop add sub or mov mov sbb jo xor call pop enter pop inc popa mov or iret jecxz xor psrlw mov sbb sbb and push stc and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov fldenv fbstp sbb xchg loopne (bad) leave mov out das hlt aam push jmp (bad) sbb jecxz jecxz ficomp mov mov and push pop imul jmp test adc sbb repz cmp pop out stc fsubrl mov push jno pop xchg xchg ret clc insl xlat lock repnz std xchg sub mov push mov jns mov and push xor movsb jbe pop push mov pusha xchg mov push notb add add scas notl sub ret dec mov sbb pop into (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl dec pop (bad) mov data16 jne lcall mov jbe loopne adc movsb stc jbe dec jp inc stos icebp mov movsl jmp sti (bad) xchg pushf mov cmc and ljmp xor test xchg call leave out lcall mov cmp adc xchg in inc and testb xlat gs cmp ds imul jns sub pushf sbb mov push xor in int mov ja,pn push fcom sbb push aas or (bad) jb ret add inc lods pop cmp fdivrl movsb push daa sub mov or outsl dec xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp movsb fist mov loopne loope (bad) je rol mov inc pop (bad) mov jno in decb nop and popf and pop into push fmul mov or mov in pusha cmpsb emms jle (bad) sub movl ficomp fwait and mov xchg dec in das lret clc sti aas popf dec inc cmpsb sub xor aad es pop mov push dec test pop (bad) jne sbb insl mov jmp mov push mov cmp iret mov push inc pop (bad) icebp sub xchg push clc xchg pop sub jge sbb push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov xchg lret inc jecxz pop and xor les testl push mov jne adc imul mov mov jecxz insb pop mov mov push mov loopew loope daa and fs (bad) or daa in movsl movsl fidivr push dec inc imull js push hlt mov pop adc mov rorl lret int into cmp sbb cmp jmp icebp dec stc dec mov cmpsb adc dec jne lods cmc nop adc leave (bad) ret mov mov and in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp jle add scas pushf loop sub vmovapd inc inc pop fistl cmpsl xor xor out xchg nop lds scas pop and scas insl in mov ja pusha adc xchg cmp aad and cmp lea jae repnz arpl dec sub xor push dec cmp insb insl lcall sub loopne mov iret adc add jae jbe mov cs xchg out ret std das dec mov jne mov jecxz int bound ret or lahf cwtl jge jbe mov sub ljmp adc mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl lret mov mov and or loop pusha loopne les dec mov les fstps rcl ret pop jg jl xchg sbb adc (bad) pmaxsw mov inc sti (bad) hlt xor (bad) jmp xchg jp jno jg inc sbb or out xor add jg in inc jp fimull or inc mov or mov push dec mov mov cmp sbb and (bad) fcoms mov adc sub cmp jg cmp ror xchg mov cmp xor or sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec xchg sub sbb cld jnp mov jne mov in cmpsb adc cltd sbb lcall pop fisub mov mov push sub int3 stc lea or imul test cmp xchg rcll jae push bound popa mov outsl mov jno lods cmc push xchg cmpsl mov xchg inc mov dec int cs sti jne ret lahf dec stc mov sbb (bad) add mov fistpl jmp in cmp (bad) sub mov mov push out mov lahf ja push xor add adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push cld xchg sub dec ret push or mov repz in jge sti (bad) arpl inc pop (bad) push and test sti inc sub pop out mov mov mov test rcrl lods and enter add xchg out push cmp add cld mov loope loope or xchg pop popf mov sbb and sub mov outsb setae cltd movsb fidivrl mov xor pop out dec jg lret mov in fbld sub sbb mov inc sbb in (bad) movl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) pop jp jecxz mov push xchg int rolb mov out jb ja xchg aad jecxz jmp and sub in mov push mov jb push add pop pop jl pushf jg orb loopne stc push push jge push fwait out add lods es into sub pop ljmp jp dec mov mov icebp mov in cli pop pop adc mov mov sbb ss cli push sbb pop movsl mov ret add stos mov pop outsl lea pop icebp mov pop repz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc add outsb cmpsl movsl sbb pop arpl addr16 movsl lret and mov fcomps cmp loopne mov das out int sub mov rcr popa inc loope fmul dec repz out dec (bad) cmp adc addr16 (bad) cmp pop jecxz mov inc js sahf aam scas lods pop bsf sub ret lock xchg jne lock adc insb das push fcompl pop ja ljmp int loope cmp mov push adc hlt test int mov stos cs in (bad) cmpsb es inc in mov ds inc jns fwait repnz inc add jo pop adc stc or test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl dec sub ljmp mov insl push iret dec in sbb sti lret sbb pop add mov stc ret dec adc mov pop jmp jecxz (bad) xlat cmpsb aad mov out jmp pop dec data16 fadd pusha sbb outsb cltd jb hlt ret cmp lcall sub mov testb dec imul pop int3 inc arpl and imul lahf adc inc lds mov (bad) xor mov mov imul jo lock mov jmp adc test sbb mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in pop cld push dec add loop adc and sub stos jge shrb and fstpl lcall cmp pop cmp and lock (bad) test dec mov addr16 shlb push jne mov es mov test jge cs push test pop xchg (bad) cli sub xor or in xor je jp or dec stc adc pop mov mov loope sahf ljmp cmpsl ja sub popa out adc jl (bad) dec addr16 movlps jns pop jl lods btr lahf mov or mov loope (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp inc sub cwtl fwait movsl in fcmovnbe out dec jle aad mov mov sahf xlat mov mov pusha into xor jmp cli sbb cli pop call insb mov jle dec push xchg cmc sub lea lcall add push loopne cmp sub dec and jae cmpsb jno mov pusha add stos loop push cmp jmp mov fcompl pop test sub pop fisubl ss arpl cmc mov aam std mov ret sub std pop jge inc mov and dec or xor movsl xchg pop mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec push outsl ret ret fwait pop test mov inc push imul stos insl sub loope lods xchg mov int3 neg adc stos movsb rcll cmpsb fiadd mov jae mov fs dec sub dec test sub cs inc cltd push loope cs in sub cltd mov mov or sub sbb insb int in fcomps jecxz adc cmp jne out adc cmp imul mov mov xor xchg cmpsl (bad) push jmp aas mov popf xchg aam daa push jmp sub inc jg cmp push aaa repz cltd xor adc mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lods jge stc mov cmp bnd scas mov pushf fidiv mov jge mov adc cmpsb sub pusha xchg pop mov xchg es lret mov imul adc movsb mov mov jp test lods and cmpsb std (bad) jmp fwait pop mov movsl mov sahf loopne or push clc sbb movsl ljmp or gs (bad) cmp test fistpll xlat loop push roll jae insl icebp xorl fcomps adc xchg fmuls out aam stos push fldenv je and int cld scas test or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp loop mov mov inc jb (bad) mov out sbb adc imul pusha pop pop mov inc mov subl mov or cmpsl jns out repz ret add test fs inc lcall dec or out leave subl stos push ljmp jbe imul push fisttp test adc stos fisubr int xchg adc push xchg jb mov stos fstl mov ss pushf mov dec cmp (bad) (bad) sar mov xor lods adcl fiaddl push jno insl mov fstpl and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp dec pop xchg adc xlat cmp xor and sub mov ret test cmpsl enter mov ret dec int3 pop lods pop imul mov enter xor push mov test mov imul lret push and out xlat in sti arpl xchg xor pop adc mov sbb mov xchg lds adcl inc dec push movsl sahf pop or push testl mov fcompl shll decl jno adc popf pushf add add aad push inc pop pop (bad) ret xchg cld xlat scas adc (bad) sbbl dec jb enter (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl out mov jmp je jl dec ficom cmp pusha adcl ficom hlt cmp mov sub mov xor repnz (bad) or jge (bad) fisub mov negl loop pop rorb inc mov adc outsl mov inc xchg add movb mov cmp jbe sub and push inc jo test pop jge int3 push pop inc out cmpsl insb daa hlt lock cmc mov adc cwtl adc (bad) aas pop (bad) cld test dec jne xchg jl fstl (bad) leave out xor xchg sarl push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl or add rclb mov mov je sbb decl (bad) in inc add mov xlat sub xchg lods repz fstpt push inc movl dec jle fcom jno xchg bound and mov and js push pop mov fisub mov cmp push lret inc mov xor adc sub mov mov lcall sub jae (bad) xor push xchg pop les notl popf jle cmpsb mov dec roll sbb je leave xor insb xchg adc ss (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) js mov or outsb enter add sti push mov test ss loop xchg mov je xor sub hlt mov ret adc adc xor (bad) jmp cmp adc ficomp lcall stc lcall pop cmp popa pushf adc hlt js (bad) xor ret adc mov jle shlb shlb rcrb dec cmpsb inc xchg arpl sarl cmp xor pop xor (bad) xor jl mov aad or js xor rorl mov cmc cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl lret sub clc jnp add mov (bad) cmp adc xchg fwait cmp inc jae jl movsl cwtl cld jmp (bad) (bad) into rorb stos lret push add dec ds test xchg int xchg sub icebp pop cmc cmc push pop outsb xchg lods sub pop movsb out lods bound push rolb xchg xor sahf add imul out daa (bad) xor push push push in mov jecxz mov dec and xchg enter sub xorl stc jle je fsts in dec lret mov pop inc mov inc fwait or xor push inc pop jo in or clc cli push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl in inc movsb loope adc mov lods jae cmc mov les aaa jb push jle mov sub jno xchg imul out fidivr push xchg xchg add mov lods sar xchg dec loope jae xchg and dec mov adc insb adc iret xchg jbe sbb fcomps fs xchg jmp push jmp movsb jbe loope add call xor cmp idivl insl xor push xor dec and rcll call cltd sahf sub xchg stos xor fsubrs (bad) mov mov std push icebp push fmulp jg nop inc cli inc mov add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp or mov pop mov pop pop jne sahf sbb lret jo push (bad) xlat xchg xchg dec arpl adc fcomp imulb mov lds and jbe leave and test jecxz (bad) xor xchg add dec mov mov pop xchg cltd out imull sub add xor fmuls adc fdivrl call rcr loop push fbld rorl stos and (bad) mov (bad) rcr cld ja test mov loopne push dec mov movsl loopne mov jnp jb arpl popa cmpsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp out cli repz dec sbb mov or imulb xor add loopne repz xor xor pop push mov popf xchg dec mov scas pop push lahf popf (bad) cmp int lock xor or out (bad) or mov mov cmp in gs scas sub hlt xor xor bound mov mov push adc ret fldl rorl push leave mov sub popa loopne fs sbb or in idivb lds (bad) popa aas pop les jle push lods lahf push lahf pop mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov sbb and xor ret mov cld ss aam outsb and mov pop push pushf insl inc test scas sbb add pop scas loop fstl lahf mov aam jno mov mov jl imul lret mov dec sub add arpl xchg mov enter pop jbe xchg loope mov in xlat add pop mov imul fbld std and in insb mov sahf sub mov stos aad mov ljmp xor push aaa jg mov outsl xor mov test jb jnp push inc pushf inc mov mov dec push addl (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl inc repz call mov sub test aaa xor ror cs test loope out in or adc xlat hlt (bad) and jbe (bad) add pop pop loope mov pop pop andb push clc fdivrs decl push add mov cmpsb and mov int xchg mov dec in xchg int3 ljmp push inc test xchg pop sbb lods push scas cmpsb ss inc dec mov out mov lret sub sahf add adc pop mov lcall sbb sbb xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out adc dec push push push ja cmp jge clc jmp test fsubrl daa xor int3 adcl test and inc nop mov std adc push les mov sub lds pop add adc mov stos cmp scas cmc mov mov xor add (bad) ja rcl mov xchg xchg mov stos mov repz pop scas call adc mov fwait test rcrl cltd stc push push es or xchg or in divl push add sbb insb and repz inc xchg sbb ret (bad) mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall dec mov add or jnp (bad) test out dec lea mov out aas into rolb icebp nop jle scas cmp push lahf sub pushl push jne mov mov sbb loop std push data16 adc adc pop in std in cmovbe test inc jo inc mov scas mov push mov xor inc in enter mov and lcall xchg sub inc andb xchg popa xchg or ret sti das std mov xchg dec push out (bad) lock shlb loop loop fnstenv xlat (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fcoms dec outsb cmpl push icebp rolb mov pop in jl (bad) or pop rol adc or add insl (bad) mov lods jo scas xchg testb fadds fimull and mov jne or pop shrl aaa sar nop mov iret lock nop and sbbb clc cwtl call jne sahf or xchg ss mov mov loop cmp ja,pn push cs in mov xchg scas jo dec dec fimull mov xchg adc mull jns cwtl inc sub pop int push xchg mov test addr16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xchg adc in stos fiadd rorb mov pop rorl bound inc dec mov xchg and pop nopl lds dec push mov inc shll dec scas ret mov mov xchg repnz subl or (bad) popa push inc bound mov repz jmp lock decl fld jmp adc addr16 fst loopne inc inc push add into cmc in (bad) inc cmpsl sti xor xor ss jbe push das mov sub movsb inc cmp outsb cmovns jnp outsl out jl dec sub add xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call adc je test mov mov inc pop in stc mov gs icebp jo mov orl fsubrs xchg mov mov fcmovu dec je inc push sub mov lret xor cmp pop enter sub insb dec mov out ja xor pop sub cwtl sahf dec push outsb mov jl clc clc iret push cmp ljmp pop adc and cs cmp jbe pop xchg dec out cmpsb jg adc pusha dec outsb leave push add loopne sbb pop dec insb pop push push mov shlb push pushf jl aam ss stos loopne sub dec bound cmp sub jmp cmc adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall adc enter inc aad mov je enter xchg cmc mov cmc adc outsl pop icebp dec sub mov popa loope cmp push push in pop (bad) scas sub jns pop push mov popa sbb sub add bswap jecxz icebp sbb xchg outsb lea (bad) std sub dec imul jbe jno outsb aas dec out adc mov dec jne (bad) outsl iret out dec cmp and push jns cmc mov movsb dec adc mov aam dec mov mov pop aad lcall inc icebp cmc dec sarl xchg iret adc mov or mov ret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fnstsw aas pop movb mov push lcall push and sarb repnz cmp std repz mov fcoml cmc cld jg adc sub test lea mov pop stos add sbb cmp inc jb sbb or xchg cmp in xchg cmp pop sahf jmp nop jmp testl push cmpsl xor pop pop cwtl mov cmc mov mov mov dec or mov sub mov jnp adc sub push in (bad) je mov mov addr16 cmp fstpl cmp and sub xor mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp ss xchg sarb cli fs fsts leave cmpsl cmc fsts cmp and stc and xor gs jg jl mov cmp push xor push aaa fdivrl jecxz frstor hlt or scas cmp ret lds cmpsb dec pusha pop sbb dec mov das pop lahf or cli int3 je aas dec pusha divl iret pop es jnp insl inc jecxz and orl mov fdivs sbb and pop into push cmp push jns scas push loopne push int3 fist sbb xchg pop popf xor sub insl hlt lds adc inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl stos pusha add lret or push adc xchg xor mov mov or mov sub and push ficompl insb push (bad) fs jns dec sub xor cmp js sub dec jg xchg xchg and test mov add pushf fisubl fldt or adc cld pop mov fs imul jb push push sar int and sbbb ja jecxz push mov lods push iret cmp mov loopne pop inc push add mov pop icebp fwait mov and add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov mov mov in in jns,pt scas lea sbb out ljmp sbb jecxz out dec mov fucomp jbe xor adc inc sarb lret loopne xchg and jl xor mov lahf das and cmpsb add fbld add mov adc xchg cmpsb and lahf mov lock and rcrb cmp xchg inc pop (bad) and dec jo hlt rep dec syscall and cmc pop add insb (bad) adc aad inc pop sub imul mov and xlat cmpsl mov cmpsb mov cmpsl fnstcw (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp and (bad) ror xchg scas mov fdivr lahf pop add enter mov idiv and xchg enter inc pushf add jge xor inc pop and and sub rol in jmp jne stc mov xor loopne and and push mov jecxz or pusha xor push mov mov xchg cwtl subb fistp fcompl in out push stc and fsts iret pushf dec arpl jl push sarl dec add (bad) dec mov xor pushf adc and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std jb mov rorb rcll adc stc pushf adc inc outsb in clc sbb aaa pop pop add loop pop jbe fistp xchg in mov ja pop mov es out sbb xor mov dec mov lcall shlb insb bound insl cwtl test lret pop test cmp loopne outsl xor enter ret pop xor ret xor ljmp adc test das rolb lcall cmp flds jo xorl les sub mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp adc pop scas popf jbe mov push loopne loope xchg dec out out scas cwtl sarl dec sub inc mov sub aas sbb fwait inc add push adc mov mov pop lock mov adc and pop stc xor iret and in push pop out push dec sbb sub and clc cmp out outsb push jg inc movsl adc xchg bound jne push popf xchg out test xor gs xlat bound ret (bad) (bad) mov xchg (bad) aam dec adc pop je or add ret ljmp pop push (bad) and dec mov hlt pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp ds pop outsb push pop fnsave (bad) jb push mov lock out mov jg scas jg mov push xchg xor and scas add fnstenv add dec sbb imul jnp sarb pop mov mov hlt repz test repnz add add imul fwait es push (bad) xchg adc insl iret les mov out mov cmpsl scas sti in mov pop (bad) xchg std sub popa mov pavgb add dec pushf cs jb imul out test jno xlat (bad) pop test and cld scas inc cld push push dec push mov insl jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp and scas (bad) pop sub daa call mov les pusha pop sub sahf (bad) call jbe sub loop movsb cmp push jb stos pop sti push or test cmc xchg pusha clc push dec push mov push imul scas rcrb shll mov pop mov (bad) mov mov push pusha jne or fs push jne stos jb mov xchg sysexit jmp addr16 das dec xchg sbb dec mov fincstp fnsave adc and int jb mov cmp cmpsl mov pusha movsl mov inc stos loopne pusha inc xor jo into jg xchg rolb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov int popa mov adc xchg mov pop mov ss repz (bad) add mov popf movsl lcall cs xor jg xor xor divl push mov xor inc (bad) pop je jno jns rorb fistl movsl push test cwtl cmc lret push push jecxz add push movsb cmpsl xor dec mov je in pop cmp decb cmp xchg push lea jecxz add mov mov cmp xor jb data16 cwtl test lods int3 fcomps mov fs mov push cltd lods or leave cli or in pop xchg xchg es (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp outsb jl daa addl gs sub push jmp fmul rcrb lds add cmp push pop stc repz xchg push mov loopne test jne push aam mov mov xor mov mov js mov nop daa mov sbb add ret pop jo test jns pushf pop popl push aad adc dec dec mov mov jmp aad cmc imul push jbe lods pop das cli adc or cmp dec fsubrs inc xor mov and mov pop fs adc mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstps and add pop mov inc aaa mov cld xor xor fsubl sahf aad test jl fisttpl stc adc or (bad) pop fistpl in clc mov mov insl pop ret adc dec inc in fstps enter push mov or pop iret fstl stos mov jne lcall jo adcl mov fistl push cwtl fwait pushf sbb jo dec out xchg dec adc sti (bad) pushf and mov (bad) jmp bound mov int push stos in aaa stc xchg imul mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl or stos or je icebp add stos mov ja add push push mov imul jecxz or adc sub out jne mov ret dec jecxz sub mov (bad) xchg imul xchg adc pop mov jge add sub or jl sub jae adc mov inc outsl pop cwtl or imul mov mov mov ret scas jecxz xchg lcall jae mov lods fst test xor aaa and decb sbb je adc jbe adc in xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov xlat lea loopne add fimull add lret adc jae ret ljmp jle les leave inc insl pop xor cmc cmc in xchg in cmpsl into lods and scas sub mov mov xor jb lret xor insb add xor ljmp pop lcall inc push adc aam cli insb ss and push sub inc (bad) fcoms gs and aad cmovl (bad) dec js sarl adc or dec xlat mov (bad) cltd sub gs addr16 ficom (bad) xchg add mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl andb std xchg (bad) mov sbb sub ss mov mov dec loop ljmp mov pop mov ss mov xor or mov ret daa inc mov push cmp in test mov jle push dec push je push mov xor lret xorl stos mov jns mov lret and imul outsb add test into int rclb bound (bad) hlt mov std mov pushf sbb mov mov enter (bad) inc cmp mov cld repz loopne out inc inc jl test inc test xor dec dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp sbb imul push bound mov arpl in outsl cld cmp inc push andb lcall xor (bad) mov and cmp f2xm1 ja cmpsb sti fsts daa scas imul arpl mov xchg out mov lods mov pop cmp inc xor mov dec cwtl fist push mov jns dec add shlb inc or fstl repnz adc cltd cmp out jae clc or dec test inc data16 in dec xchg pop inc hlt xchg insl push daa shrl push push dec push test ds and cmp jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall movsb mov aaa push fcoml xorl mov in in roll mov or pop aas push add mov inc xchg out and cmp pop mov cwtl lea sub xor pop cs idivb cmp dec mov (bad) add mov push jne lock insb xor popf mov xchg insb push lcall ret jb repnz adcl and sub cmp pop stc mov ljmp cmpb mov xchg mov mov xchg adc mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call popa (bad) sbb negl outsb (bad) ljmp inc xlat mov jb inc popa faddl aad fcmovu jo es inc cmp stc out int sub ja sub rorb jbe xchg jmp sbb loope dec bound (bad) and mov push (bad) dec mov sbb inc push (bad) jno (bad) xor mov in adc push rorb xchg push daa sbb sbb jmp jle das imul ljmp js mov sbb mov (bad) and imul xor (bad) data16 and rcll imul ss or pop stos sub xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc bound rcr sti rcr lret pop cmpsl sbb jl mov mov dec sub pop stos pop adc ljmp add rclb inc (bad) adc cmp adc xor inc lahf into stos (bad) ret pop scas lret xor cmp clc mov mov mov mov movsb insl mov dec mov add cwtl (bad) and adcb sub lods sub fwait adc lar movsl sub pop and mov sbbl adcl fbstp cwtl fildl ficomp xor sahf popa adc mov in cmp imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl gs push repz shll xor out sahf push pop xlat scas insl jno xchg cli sbb mov mov sub inc push cwtl jmp sbb sbb movsl mov mov cmp decl (bad) std pop mov (bad) xor iret fstpl sbb dec pop jns (bad) loop push add in cmp cmp sahf push or add push fld and sub cmp rorb or xchg push and sub popa ljmp mov add adc test hlt aas pop jg lahf pop jge out xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov add mov xchg fsubr mov cmp rorb imul mov leave loopne sub xor fs push mov mov popa lret leave push aad (bad) leave mov dec lret dec inc mov cmp cli pusha lds out std mov notb mov and jg dec xchg out jb sbb add mov jo xchg es ret push and sub or into pusha jnp sub xchg mov adc in out sub das std push xor outsl outsl jmp mov es jbe out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call shrl jp pop in jg cmc mov insl sub mov loope scas lret push iret and dec jle jne or dec arpl ret ds mov cltd sub mov (bad) adc in bound cmp rorb outsb in mov sbb out cli cmp addr16 mov jae and loopne sbb sbb adc outsb add add mov in out mov fsubp insb repz jle cmp mov pop outsb call int3 dec xor or jne,pt fdiv fsubrp push int3 enter xor sarl (bad) cmpsl or push jle (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp scas test call adc insb sbb push ret add push inc flds les nop adcb sub jne rorl outsl mov adc ss gs je insb or aam cwtl cld mov add pop sub jbe shrb push divb std int3 pop stos stos lahf add sub jo (bad) jbe adc cmpsl lret mov mov fcoml pop mov mov jmp pop add jecxz js dec leave xchg aam or pusha dec retw xchg add dec pop pop sti andl xor ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc fcomps ret dec adc or jecxz cmp push adc (bad) mov fnstsw rsqrtps std xor lret mov gs (bad) enter out and das cmp add xchg mov mov bound addl out ror xchg push sbb jae jmp sbb les add lahf mov jle ja or push fs jg aas sbb jo loopne push xchg outsb int3 add fs mov sbb inc enter xchg jl push rolb push xchg cld and loope outsb xchg xchg (bad) test add stos les dec outsb daa jae jo (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov jo mov aaa xlat xchg scas bound push icebp mov dec ret es enter mov int3 cmp lock adc push cli repz pushf mov push mov popa repnz push mulb adc out lea test push (bad) mov ret adc scas or mov cli xchg jl repnz jle ljmp push push mov mov dec pop pop int test jo (bad) mov xlat add cmp pop adc or (bad) shrl outsl imul jl xlat cmc call shrb or je fsin cmp pop mov andb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall int push jl adc xor negb es call lock mov addr16 cwtl enter push icebp insb rorb aam cmpsb mov jnp adc and mov in or cmpsb out (bad) jge fistpl add jecxz xlat fisub or test jmp stos sub cmp lods ret jle call xchg jmp inc cs jle cmpb stos push dec sahf cmpb std fwait jp (bad) scas fiaddl fs addr16 ss jp mov imul test xor or andl sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp push push and sub push add addr16 ds in ret fs je and sub adc mov jp imul imul push xchg dec mov (bad) addr16 cltd sbb adc (bad) push pop adc cltd xchg pop mov jl movsl (bad) fsubs cmp repz fcomps out fcoms pop push test add sahf add (bad) in jecxz fs das mov scas into cmpsl inc xchg mov int and insl cli jno sub int3 jb out aad adc repnz push xor mov or push cwtl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl lret push outsl push sahf and ds mulb and sbb inc pop fs pushl ret (bad) je stos jae inc sahf jae pop inc jb out inc jo cs jae pop rcll mov outsl mov je xor sbb sar or cs xor lcall push push addr16 in mov rolb test divl mov add mov add frndint clc sbb lock lahf pop cmc les ror inc jge inc lcall cmpsl mov dec or push in pause fiaddl inc (bad) jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl stos inc and mov sbb ljmp dec adc decb hlt sub mov pop data16 insl sub gs push inc ds sbb jb cmp and je adc push push jne mov bswap jo iret leave sbb push push scas arpl pop xchg daa sbb test insb (bad) mov inc and mov pop inc outsl jp scas pop xchg loop push movsb (bad) (bad) shlb xor jmp sbb mov es add mov mov pushw dec mov jb in mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov in rcrl call test sub stc enter adc sbb jecxz xchg sbb cld fstp out jns sub (bad) xlat mov and (bad) adc ret in jmp scas fwait js insl add pop fcompl pop daa xchg sbb dec (bad) jecxz pop roll insb pop (bad) fcomps std cltd sahf mov mov add xor gs ror or pop mov subps jmp inc xchg data16 rcrb cmp enter jb lods xor ret and mov sar imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl xchg loope mov ja lcall push cmp std je aaa lods int mov sbb add cli pop push cmp (bad) idiv sbb ja dec arpl dec xor mov sub (bad) cmc jbe xchg je loopne xorl and jbe stc iret std and fadds mov xor sbb iret xor rolb adc rorb jnp bound pop xchg les hlt addl xor jmp jl orl sub xchg mov loop pop fimul xchg popa cld hlt mov jecxz and dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call push fisub or shll cli sbb sbb cmp or fisubrl jecxz mov insb cmp scas mov lock movsb xchg cli jns dec mov movsb imul mov push push sub das add bound cltd cmp (bad) fildl dec dec cmp dec cmp movsb push sub or push cli jmp ret add add cmp push xor fiadd add bound xchg or dec js xlat pop popf mov cmp push sub cmc out add mov ljmp sbb outsb (bad) push popa (bad) jnp in je (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jge lahf inc lea stos mov cmpsb xor sarl lods arpl adc pop lret ret and pop fdivr in xlat int out stc leave insl adc sub adc inc fldt jp popf enter dec (bad) (bad) out cs in pop mov ljmp jne (bad) hlt pop jb aas inc ret fcmove xlat fldt add add stos in push iret hlt out lret mov push fsub push mov lahf dec jge cmp push imul out imul jb js int lods pop mov cwtl (bad) pop movsl cmp xchg mov jnp scas repz and dec push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jp or movsl hlt xor adcl xchg subl mov aam pop ret movsb scas mov push cmp stos inc sbb (bad) sbb cmp sub and inc fs sbb inc (bad) repnz cmp dec inc scas shl sub out xchg inc arpl pop sbb mov es sub fsubs fidivr inc in mov cld pop ret sub cmpsl aam jg add pop mov mov andl sti xor aad sub leave or imul push lret add adcl mov shr lea (bad) pop imulb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall add adc fidivl dec ret scas stc sbb scas notb push push add xor jb mov ret mov sub push fwait mov repz lcall fdivs mov push xlat mov sub ret (bad) (bad) loopne xchg mov mov stos pusha add mov mov call push add arpl in gs dec or jl fisttpl pusha mov lds (bad) ljmp outsb add mov lret or sbb add clc xchg jmp mov inc lods cli and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl iret lahf xor inc in and out int enter sbb icebp ret jne xchg hlt pop fldenv mov cmp adc repnz ja cs jecxz lret mov sbb jecxz xchg and add dec push jae int push std push sbb and idivb aad xchg test out or push adc outsb sub daa clc imul ret sbb dec mov stos cmp ror pop sbb insl xor xchg mov adc js das and mov mov sbb mov gs xchg dec leave add fs das sbb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc cwtl push xchg push idivl sub cmpsb add xchg int pop sti dec scas cmp ret xchg push enter imul mov mov sbb or lock sbb jecxz mov lcall and lods (bad) jmp sub sbb xchg or push cmp or test outsb pushf lret bound mov scas shll sub rolb std sub insl pusha jecxz mov adc xchg xchg (bad) into in mov (bad) push fimul jg repnz stos or lds xchg sub cmp mov xchg rcrb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jecxz sbb jno cmc cld in add jg dec aaa or pop jp jl sub lcall push cmpsl mov stos jmp dec test fmulp push jae jns cmc or fiaddl (bad) mov inc mov cmpsl jl xchg or popf push push adc pop mov and mov xor es dec fsubrl mov jl loope and mov fwait es dec dec test jae cmpsl (bad) movsl aam add test dec pop mov shlb mov xchg adc inc jo dec lock xor push sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc int cmp imul push out insb xor stos sub loop cwtl sbb cli sbb ss lds push mov icebp push movsb hlt aas sarb insl jmp fwait jp jle xchg mov pop and cld insl les lahf push inc pop movsb jl scas bswap mov in xchg outsl and popa into mov lret cmc jbe add jns ret sbb jmp lds loope push mov sub in es push test mov notl movsb jae push shl jmp lods and pop in pushf push cmpsb idiv mov push frstor in inc enter shll pushf pop pop xorl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl and sti dec insb xor nop mov jae icebp pop cmp xchg stc sub in mov jno mov out xchg leave pushf sub popf or and das inc arpl cli inc rcrl lods mov pop fisubrl xchg jb sbb ret sarl add (bad) or dec test inc dec arpl sbb pop aad scas mov in mov pop clc push mov jmp adc nop xchg pop or jp outsl pop (bad) stc add inc adc xchg mov rcrl jbe dec jge mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl jbe ljmp test scas pop or mov or aam and dec mov scas ret jp ret out xchg dec rorl iret pop adc adc (bad) leave mov ljmp in push lods cli out push mov sub stc inc ja pop mov imul and sub cmpsl lock xor add sub cld mov jmp push cmc popa xor or mov scas push jnp adc jnp in inc lods pop scas into test mov bound (bad) lret int3 dec imul mov dec je call fxch jo das xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp or pop outsw xchg or cmpsb sub movsb mov rorl shll dec daa lods jns sbb pusha (bad) pop out ljmp call or lock mov in jp mov inc sbb iret ret inc sbb lahf mov jecxz xchg mov mov mov push je test push das ret mov leave adc (bad) mov push xchg mov movsl call loope add sbb push mov in aam jnp (bad) mov sub dec out mov fsts mov ss cmp repnz adc aad (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl aad scas (bad) loope pushf dec (bad) les rcrl jae aas std xchg cmp clc je daa and lea les sbb pop pop icebp ret (bad) ss loopne adc test push xchg scas xchg imul jle cmp ljmp or add stc outsb (bad) jno xchg and xchg or ja and mov imul (bad) inc adc cli add dec pop sub pop xor jbe cmp adc sub lods lods push es outsl negb outsl pop adc or and jecxz icebp jle fsub pop mov xchg imul arpl scas das aad (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl adc iret jle aaa outsb xor in sbb push test xor fnstenv les mov nop out mov inc mov pop cltd fsubrs cmp jge fisubrl ret ret lods (bad) cmp xor push pop dec dec sbb movsl lods sub fstps in sarb fsubrl jnp mov dec std pop int3 daa jo mov mov fstpt xchg jle or test mov add out inc ja cmpsb push or (bad) jno aaa subb fucomip shll add ds (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl outsl or mov mov subl ret mov outsl in pop mov mov out mov lods and ja mov lock ss sub jbe stos xor jbe add mov mov sbb in xchg mov dec mov pop (bad) mov stos (bad) jae (bad) mov pushf and mov ds xor mov movsl mov push jns cmp jnp mov cli dec addps jo jns shrb xchg ss xchg push jno and mov sbb cmp insb adc jge mov xchg imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push mov xor lds jmp sarl xor repz push ljmp jb push mov add movsb lret xchg pop lods dec loope adc ror into aad mov pusha cs cmp dec adc test jp,pn sarl sbbl push and push jo jmp sbb push pop sub pop jns jp lods add fiaddl or push adc sarl add or add dec orb je pop jnp gs adc mov loop dec ja push ja cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp gs mov mov gs and rolb testl or adc xor out out xchg xchg fdivrs fs xchg daa xor push lods loopne push in int cmp cmp lcall loopne lods adc out inc xor dec in inc in ret sub sbb jp mov adc and fs jno ljmp pop pusha insl in bound movsb out out xor leave repnz bound xchg jnp and je jge out outsl lods or sub mov fprem in (bad) cmpsb rcrb mov xchg cmc push int3 mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cmp ror push xor mov cmp scas sbb in cltd insl out movsb cmp add arpl jecxz insl pop xor dec scas fwait lods sarb nop adc mov or (bad) lds int3 insb mov (bad) ds xchg inc test or adc popa jg movsl or mov adc ret jl inc int3 cmc cmp and rol jl je test inc pusha mov (bad) cmp adc sbb aam cmp ljmp push xlat mov or outsl enter jnp aad scas sbb ss adc (bad) dec fdivrp fs push inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp adc dec xlat fs inc lods sub hlt test push push add mov pop (bad) sub lods pop xor and cltd loopne cltd rcl adc mov sub stos jge fwait sti push mov adc lds push sahf mov or xchg add lea mov jle out cmp ja fnstcw (bad) and xor inc mov jo mov push lea out ja mov test push add call lock enter popf lock push xor call in bound test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fidiv cmpsl sub mov pop (bad) mov fnstcw mov fistpl or ret es mov mov fisttpl lcall out dec ficoml (bad) hlt sbb mov in inc ja xchg ret mov push lahf cwtl cmpsl xchg push cli mov pop movsb jge jns push mov in cwtl lea out jge out lods xchg jne dec cmp es add cmpl mov jp pop loop stos jecxz adc mov repnz sub add mov leave test push aas inc aad dec or (bad) sti xchg sub mov stos sbb cmp out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push jo cmp cmp pop insl mov repnz pop std or mov pop scas sbb cmc adc push mov cmp push push (bad) sub decl lods sbb sarb or push pop jbe test push sub dec fwait in repnz out out sub fmull push daa fdivrs inc mov push mov add into add inc dec gs sub cmp and stc cmc imul push aas stos cmp sub fidivl jns fmul aas jns cmpsb enter shrb cmp mov or pop scas and jecxz sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jle xchg flds xlat or mov insl pop mov mov jns mov xchg xchg mov mov inc (bad) insl aad cmp iret push sub pop xchg mov mov add fcompl test fcmovu lahf (bad) ret adc cmc jp jp les pop pop jbe mov (bad) divb inc in jp mov fwait jl pop jle sub mov and dec mov mov test pushf sti push mov pop vmovupd xor std pushf jg mov test fsubrl mov mov pop jge mov (bad) xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl addr16 scas jne jne add xchg lcall mov popf lods jae iret shll outsb lock mov imul sub fcomps pop pusha repnz inc xchg clc cmp xor mov jge jmp jns insl movsb cmpsl cli int3 sahf mov (bad) iret lea push lods mov (bad) in mov loope outsb inc jl adc sbb mov mov je pushf add out mov pop inc adc rcrl dec addr16 mov mov (bad) fisub sahf in cmp jl jne fcoml movsb aam push flds (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp cwtl pop int3 shll aad add pop ret frstor ds sbb stos mov shrb mov fisttpl out adc mov lock in loop inc call fldl mov cmp test push test add les or cmp ja rolb ret divl mov push mov sbb (bad) jno adc pop pusha (bad) sub jb mov adc push add dec push gs hlt cs jo add jo cld js in stos inc sub mov mov loopne aad (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl cmp in hlt jno (bad) cmp outsl jo lods jno inc cld jmp inc xor paddsw mov fdivr data16 enter aas add pop shrb xchg pop jae loope xchg arpl fldl insb (bad) mov sub dec push xchg rolb stc mov dec ret mov call outsl pop shll ficom insl mov jl jnp inc fiaddl mov cli jae test mov in sbb xor mov dec (bad) mov fnstenv aad aam negb dec cld dec stc cmp adc test bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl adc xchg or cmp addl and stos stos (bad) xor xor mov fdivrl adc sbb lret ffree popf int3 dec dec pushl inc out lods mov or jbe addr16 in dec mov pop add jns mov dec aas lea stos or push xor sub fiadd and sub jge sub stos jns dec rcll lea pop sub dec pop and lret add and rclb xor repnz leave roll hlt fldenv movsb stc int3 xor lock (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xchg ret mov ss cmp cmp sbb je andb and cli cmp in adc mov sahf xor adc (bad) fwait mov add sbb inc popa push mov jbe in push sbb mov stos adc xchg fcomip jns scas mov lods mov loopne in mov fisubl sbb dec and je hlt popf inc prefetcht2 es lcall call mov jnp int mull lcall dec out adc mov push in stos std add dec nop popf stc mov pop mov mov or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp sbb sbb fstp mov pop pusha cmp leave lea sbb inc cwtl lock stos cmp loope adc inc call mov xchg sub int mov std push ss icebp or or shl sti fsts imul fwait sbb js xlat adc scas mov movsb pop mov cs call test clc sbb xchg add icebp jno mov stos push dec imulb jmp inc mov push pop enter cld lods ret adc push push mov addr16 jbe jae jmp icebp aad pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp dec out orl mov sub call lahf push dec sbb clc jns roll adc mov out pop das xor xor mov pop loop jmp fdiv aad cld popa xlat enter popa xchg faddl mov xor pop xchg push outsb sbb into xor dec adc pcmpeqw push loopne int push inc js arpl fmul aaa outsl jb insb hlt fisttpll adc fiadd inc out push push cwtl in lea xchg dec aas add add jg popa clc leave xchg dec lods into punpckhdq leave jle (bad) daa pop mov cmc mov stos cmpb lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jns mov arpl and inc mov push bound icebp test sbb bound xlat aas pop call popa xchg cld mov sub dec xor out sub daa ret aad or in xor or mov adc lcall xor mov mov test andl push mov add sbb and pop pop cltd (bad) pop jl (bad) insb test es push pop fdivl sub sub cmp jge push jae (bad) mov mov mov mov mov ret dec iret addr16 jns inc mov push fsubrp stos mov idiv (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov mov nop cmp loopne sbb lds mov mov jns cs iret sbbl nop int3 xchg mov xor clc mov sbb lods sub stc test (bad) xor fcmovne sahf push (bad) out add dec mov jno and je jo sbb mov outsb arpl ficomp aaa (bad) stc lret add mov dec fwait jbe mov inc in fs add jecxz es mov cmp addr16 adc pop jp lock mov je aam add into ret int cmp rcr xor pusha (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp call mov mov cli inc mov mov popa popa loope,pn scas jp cmpsb sbb lods add jmp mov pop jno scas les ss out dec or dec push mov xor mov sbb ljmp push push inc push pushf insb xchg or and cmp pusha mov xor adc push xor mov mov mov lahf jo in gs adc test test jbe mov lcall jg inc mov ret imul pop add aas push in test adc pop jnp sbbl movl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl and movsl aad xchg loop insb aad std pop adc mov loop cltd xchg roll sub cmp test dec fisttp jae shlb mov (bad) fwait xchg and iret mov mov test add sahf cmc imul mov mov dec mov imul or add pushf push aaa mov ds cwtl jns dec scas out mov (bad) dec repz xor int3 sti loope cmpsb outsb popa jecxz xchg xchg sbb jp jle call push add inc mov test cmpsb xchg pop and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl cmp sub stos or bound (bad) jbe in mov xchg pusha xor pop int3 mov push rcl adc call (bad) dec mov dec test pusha fcmovb lock mov mov es loop lock mov add xchg or rolb jae pop outsl cmp lahf xor push aam dec mov and das push in mov push mov push lahf add push imul cmpsl (bad) (bad) xchg rep add adc aaa push lahf xor jmp iret sbb ljmp bnd pop jp lret int cmp mov push (bad) ja (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall clc lea cmp add cmp out jg jmp test add mov add lret mov outsl cwtl pop arpl pop test dec ds (bad) mov movsl mov lds lret xor dec mov out negb call cwtl jnp cmp imul rcl aas jle pop and roll (bad) jns daa insb int3 mov and xlat mov ljmp jno scas jmp adc mov mov adc sahf cmp pop outsl pop popf cmp mov cmp pop add or rcrl jbe adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec mov mov lods loop mov sbb mov movsl lds movsb inc icebp push push loope xor jg std sub dec and popf sbb pop fisttp xor add fs add sbb cli push xor jae mov dec pop cmp divps mov mov inc mov stc and mov sbb lret ret (bad) pop cmc push iret adc scas and inc sub loope pcmpgtb sub xor int push fsubrl mov sub adc loope aaa add data16 add addr16 dec xorb sbb ja push jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall stos sub rcrb (bad) push sarb add mov incb out sbb jno pop pop jae stos jbe adc stos push mov rcrb mov adc xor pmaxub add test out popa cmp xchg xchg in loopne fcompl (bad) (bad) lahf iret daa aaa inc stos dec jmp repz add xor je mov ljmp add fdivr add cmp mov xor (bad) pushf out sbb xlat pop out orl cmp mov or jns lea (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl lea popa xlat out mov mov mov aad mov xor out std push cmp hlt inc push test lods aad loope int3 jle sbb xlat into jecxz addr16 sar cld in and ja cmp pusha add jae inc mov cmp xchg (bad) (bad) dec jnp xchg iret fcmovnu dec mov das scas sahf fstl shlb rolb push cmp add imul mov xlat sahf (bad) dec aam sub sahf hlt pop cmp adc test dec dec bound lahf xor fdivrs decl jecxz xor sub fldcw mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp and xchg dec xchg ljmp pop pop imul pop inc lahf push pop mov xchg xchg mov push xchg mov ja fsubrs test imulb ret mov test pop leave cwtl adc mov sub xor dec mov insl cltd idivl xchg arpl mov jge and pop mov add stos ret cmp sub lock cmc adc mov push (bad) and xor mov mov jg and nopl shrb scas fisttpll cs sub das add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp and lock xorl dec jmp cltd or mov cmp out inc fldt mov ret xchg in jns ficompl dec leave cmp xor xorl inc dec push cld xor in int3 cmp popf daa ds icebp or or cmp mov lods lods push mov jg xchg pop outsl jg inc and jg jle xor and xor xchg nop jns fisttp popf xchg gs lahf daa sbb repnz int stos inc dec and inc lcall sahf sbb rorb leave leave outsl test add aas add and ret or loope (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xor add sbb pop push push (bad) movsl and aas pop pop icebp nop not imul cmp nop jmp inc mov mov imul daa xorb loop cltd hlt sub pop push aaa ja xchg push pusha cli test dec xchg mov loop fldenv (bad) cmc push pop test xor mov or inc aad mov hlt mov add push movsb arpl btr mov ljmp into lret dec jg inc (bad) push test and push dec shrb sbbb mov or push adc add push push push (bad) std int3 mov adc jns (bad) data16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl in aam sbb mov mov les stc movsb fnstcw popf rcl out hlt push (bad) xchg inc jns push in push test add pop (bad) icebp mov add sbb (bad) mov pop mov mov jecxz sbb xchg mov push cli daa mov cli sarb pop leave jmp jnp push faddl or icebp inc inc adc jnp xchg mov movups xlat popa mov in sub mov mov in int cmp jae ficoml inc js sub mov or lret jle sbb mov sub rcrl pop js cmp les mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp (bad) fwait or inc and rcll xor insl shrl or cmp (bad) (bad) mov add (bad) movsl insb (bad) aam bound lods inc scas xchg pushf loope xor pop mov cli or xchg inc divb mov scas inc mov dec inc testl mov inc mov lods addl notb lods leave xchg (bad) inc rcr jecxz mov jb inc xchg es pop call mov cltd inc push cmpsb adc jle jno or push jno iret rcll std adc pop stos mov push mov mov arpl gs aaa jl xchg ret sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xor sbb sub fcmovnb xor (bad) or mov add out jmp pusha and or mov arpl or clc and aam in xlat lcall cmpsb push ljmp jl mov and xchg mov imul mov fxch adc std mov addr16 inc inc call fninit and sbb push in xor movl and fiadd inc and pop mov fwait mov add push mov inc int js sub cmpsl enter fnstcw fdivr insb dec dec dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) js aaa es into mov mov stos cmp push pop sub repz jne push in (bad) xchg repz cltd test insb mov popf mov es mov jbe (bad) repnz dec jb xchg sub mov sbb pop flds fild (bad) xchg fsubrl jp push adcl out cmpsb mov in jmp gs xor subl mov sub xor test insl push push push sahf xchg (bad) mov mov insb icebp lods xchg mov push and pushf ds es pushf mov addr16 mov xchg daa jmp aas jb out sub cmpsl dec mov push jge out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) adc es std in aad xor je paddb (bad) outsl mov push leave fsubl lahf jbe inc xchg xor leave or (bad) push sarb lods andl (bad) inc add jge push mov loopnew mov mov and and aaa jmp popf sub repnz cmp int xchg into sbb (bad) pop inc jae ljmp xchg push dec out loopne sub dec push cmp iret int3 push sbb sti jnp pop mov rcll adc std stc sub add pop cmpsl imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in push ds outsb in lds mov ds inc cs out ret vmwrite cmpsl in call push xor add pop xor pop es cs es imul push add out in mov ret testb mov add pop aas (bad) or and icebp int3 or jl ljmp mov mov pusha push sbb nop add mov mov mov cmp or xchg or mov aad je out or mov loope dec into push mov movl mov mov jns xor or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl rolb cwtl or stc ja xor mov mov mov out mov (bad) aad loopne jnp cmp adc xchg and mov aad cmpsb and fist ret ret repnz push xor sbb and js ss xchg loop rolb call jnp mov (bad) loopne xchg inc mov ljmp fs sub jmp jnp cmp in jg insl jbe xchg (bad) xchg sti sub into sahf (bad) (bad) ret xchg mov push es das pop lcall mov js (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl bound loope xchg leave dec imul fidivl pop (bad) mov aad mov xor cmp adc rorb sub push cmpsb rcll xor (bad) push das push in hlt push dec add cmp xor push scas xchg arpl ficomp cmp insl mov mov mov mov nop push mov mov movsb lods jp sub mov cmp dec xchg (bad) lock xchg xchg (bad) inc push (bad) lods dec sbb out (bad) adc (bad) imul pop insb push sub adc in je pop xchg mov inc push or fdivrp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl shrl dec rcrb or add ficompl fsubs dec repz mov hlt ljmp cltd push lahf imul iret sbb ret fiaddl or xor mov scas (bad) test data16 cwtl xor je or fistpl dec rcr push inc lcall shrl aaa xor mov sub icebp push hlt push out popa pop repz xchg cwtl fs stos xor sub inc jo push sbb mov loopne sarl xchg imul stos js xchg add cwtl inc xor cmp ret xor leave out adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp push push and mov mov ljmp mov js and imul inc mov (bad) stc jne jge sub add add dec or nop test (bad) inc cld xchg ds (bad) jbe (bad) mov push push orl adc pop cs stc xlat sub push in scas ljmp shll out cmpsl mov mov sub dec add xor xlat or negl int3 adc lock mov add sbbb mov (bad) jmp ret add (bad) mov jle sub out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call push xor add and sub add xlat cmp mov aaa out or push mov xlat mov insb adc (bad) sub add inc cltd jg mov outsl mov ret mov (bad) loopne test or dec ret outsb mov scas popa inc inc cmp mov lods rorb and dec clc fistp ja push (bad) lret sbb xchg cmpsl rcl mov mov push dec sbb sbb jmp push fsub xchg into dec test fwait jno shlb xor out inc cmpsl and fnstenv adc pop jno dec andl jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl (bad) cmp ffreep push jle fcomps daa xor mov out jne mov dec push xchg in sarl jnp inc and sub cmp cmp or mov lods push mov gs xor mov xor add in inc mov popf pop lahf gs stos push jnp aaa (bad) jmp cmovle mov cmp fwait loopne fs test cmpl repz sub mov loopne ret jo mov je push xchg xchg and dec les mov cmpsb mov test jno cmpl dec sti stos das xchg xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp cmp sti push jl cltd xchg mov (bad) mov imul imul inc fistpl pop (bad) xchg mov fdivr add shlb repnz cmpsl mov in lret pop mov (bad) xchg pushf (bad) cmc or ljmp sbb add fucomp sbb mov fstl mov and jo fisubr test cld int3 pusha jbe jne xchg or popa push add or dec decb stos or gs mov xor mov sbb push dec test test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl aam (bad) sub mov push lret loop mov aad jecxz (bad) out lret add icebp cld xor jecxz sbb repz add jb cwtl out cmpsb or in lcall popf sub inc inc ds imul stos adc shrl cmp bound xlat imul ja movb clc lahf (bad) mov shr xchg mov popa outsl lods cs int3 adc sahf mov test mov into cmp (bad) je fimul xor rolb jbe push (bad) mov mov and mov xor or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov mov xchg dec icebp and inc push insb in gs in xchg jb jp lahf mov jp inc jnp xchg das cmp aam pop test call or xchg imul xchg mov call and stos lds pop push inc call je mov jb pop sub add cwtl idivb xchg into frstor fcmovnu in (bad) mov in push push int add lds cs add (bad) lds lcall dec das add ret loop aad lret jno fwait (bad) pop fiadd pop mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall inc nop test add jb loope push cmpsb inc jo push fisubrl enter pop mov (bad) in adc dec (bad) mov jmp mov (bad) push ja adc and mov cmpsb or push cmp icebp cwtl bound std pop pushf sub xor inc aad jl add (bad) cld jle and leave nop push lods popf xor pop xlat xor jecxz push in scas test adc cmc xor lods sub mov popf push test mov bound mov sahf mov rol imul sub lea (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl das ljmp sbb sti aaa std jmp imul xchg xor jo cmp in cwtl add in adc inc cmc jl sub nop (bad) mov jo fistl lret mov push jg add fcomi adc xor dec stc xor and push scas div xlat insb popa mov test mov mov das sub test dec cmp repnz dec out cs in jg cs or xchg addr16 lret xor cmp mov fiadd xor lahf mov dec pop jae out push (bad) jge mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp imul push push ret nop mov pop sbb xchg inc iret add movsl mov imul jg and scas jl add leave mov add outsb insb push cltd xor xchg test cmpsl icebp add jns sbbl add (bad) icebp dec push loopne add sahf lahf xchg in stos ds dec jbe cltd scas in inc push xchg inc mov jnp xor push sbb cvtps2pd icebp into stos into mov (bad) sbb mov jo inc push sti lods fnstenv jbe adc cmp scas sbb addr16 andw push sub pop sarb cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl push dec insl sbb adc add sbb jne push (bad) aas cmp lock js mov repnz inc lods add mov cmp test xor stos and mov call jg mov leave mov stos inc and jns fdivrs inc cmpsb xorl mov ljmp in insb mov loop arpl xor dec hlt (bad) insb mov mov pop sti jge jmp insb pop dec clc scas scas or lods pop jl sub enter adc (bad) (bad) adc movsl mov je lea inc mov pop jp pop imul mov push shrl cmpsl sub pusha (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xor out dec les imul daa dec sbb ja iret das jg sub fmuls xlat mov bound fsubs out addr16 aad cmp inc jne clc cmp cmp inc sbb pop jp adc fcmove (bad) inc pop pop stc pop or dec or inc adc jns cwtl jb fld xor in dec cmpsb pop imul lret out pop cmp dec lock sub xlat mov mov test push subl (bad) (bad) or mov sbbl jb scas push hlt xchg repnz pop scas push out movaps push pop je (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp fs loope push pop mov mov and in imul in xor lret out xor add mov testl popa cmp insb pop mov mov add mov pop pushw fucomi data16 pop lds cli dec pop jo sub mov jp cmp sub orb outsl dec xchg mov cmp sub stos movsb adc test ds cld xor jmp fucomi stc test cmovl push (bad) (bad) dec aas jne mov jae lods movl add dec lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push jmp aam fwait dec pop inc inc les cmp lahf decl xor xchg pop xchg push or fldl scas stos sub pop iret in xlat add into fs ljmp jle sbb lahf sahf add add dec jecxz or in into ret dec push in mov jb pop xchg dec cmpl mov sub or mov (bad) roll jp outsl sbb sub inc and in add pop cmpsb pop adc mov push add sub push jl imul push xchg adc loop mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall icebp pop into push (bad) push cmpsb dec mov pop mov and test (bad) jle add (bad) imul xlat clc into cmpsl and subb push bound jge xor lods mov or mov in loopne xchg int3 jecxz movsb xlat rep fwait jnp mov dec roll mov mov lods mov inc popa popf mov dec push mov shll outsb pop dec or or shr addr16 imul imul in mov push dec lahf dec ljmp push cmp incl cmp sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp and pop mov xchg push mov insb icebp loope je push (bad) stos inc jnp add in lcall pop sbb clc adc cmp xchg inc lcall je fstpl xchg (bad) inc fs call xchg std or dec add jo fwait and addb aaa jbe imul xor adc jnp cmp xor sahf es popf and mov mov inc cmp idivb js and outsl mov inc cwtl mov andb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp sub enter sub and jo imul lea mov dec xchg push insl xor cmp xor push jo mov xchg dec fldl cli popa dec adc adc jns call mov call pshufw mov fsubrl mul and push and notl xor mov sbb xchg add movsb (bad) loopne jns push inc (bad) pop xchg cmp push jne dec cmp mov or test add and movsl sti sarb lret arpl sarl inc sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov cmp aad sub jmp mov pop mulb stc int insl aad push or test insl in push jge bound clc daa scas mov inc fnstenv pop dec mov leave adc movsb aas (bad) sub xchg mov jnp push and jae fiadd cltd bound adc sbb je stos ret ja (bad) xlat dec jbe jmp lds (bad) sahf ja movsb mov jb scas dec out xlat xor loop aaa or inc stos inc inc cmp stos and das lods fndisi(8087 adc and in and fistpl arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp leave pushf push dec xor call pushf gs dec (bad) mov push loope cmp imul aad stc pop std in gs sbb std sbb fwait cltd push cmpsl and pop out sub xchg les sub dec jns in stos adc sub (bad) cwtl adcl push sbb (bad) into mov mov loope lea inc mov cmp out sub mov loop add pop daa fsubp cmp pop mov stc sub pop mov (bad) je out (bad) jno cmp lods or sbb mov sub pop jbe jno sahf bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstps sahf and ja mov pop mov or imul in add add sbb adc scas and mov push stos rcrl das popf jecxz cmp push pop ret cmp popf mov sbb mov dec (bad) arpl out sbb or sbb in test pop enter fldt cli dec or xchg adc sbb cmc sbbl dec push test sbb push jg add or pop mov sbb mov jns std ret mov test xor ljmp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call push dec adc xor mulb xchg mov es fs sub lcall adc loop jae out add sbb or movsb cltd ja push fs cmpb das push aas shrl aas repnz test xchg hlt dec jbe mov inc add inc or sbb movsb dec (bad) or ljmp pop and je test in imull (bad) xor movsb rorb mov movsl sbb test mov xchg das mov sub pusha mov and sbb xor stc js fdivrl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push out scas push sbb jmp fnop mov aad sub and sbb loope and or sub lods dec add pop jb lock into sbb xchg push fwait sub mov ds xchg (bad) out sub xchg sub cmp (bad) or in insb movd (bad) hlt mov mov mov leave ret scas pop aad push push xchg (bad) popa and and mov enter les int xlat add stos loope jne scas sahf mov mov test or ds rcl call andb add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call (bad) movsl jge mov dec pop cmp aas je cmp imul add push loop push push push mov add jmp push push push movb movb movb movb movb movb movb movb push jmp call push push dec outsl je data16 arpl inc add testb lods cmp je mov dec dec dec cmp jne mov dec dec dec cmp jne xor push push push push push addl push push push call add ret pop jmp pop call push pushl push call cmp je call push dec inc dec dec xor cs dec dec add jne mov push call jmp xor ret pop mov push push push jmp punpckhdq mov call push push mov push addl call mov mov jmp pop inc call mov push addl push pushl call push dec xor test jne pop jmp pop push pop mov push rep pop push call jge jmp call push dec gs jo insb insb outsl arpl punpckhdq mov paddw pushl jmp popl nop push shl pop dec dec dec dec ret pop call fnop fnop fnop fnop fnop fnop fnop fnop fnop fnop fnop fnop fnop fnop fnop fnop fnop fnop fnop fnop fnop fnop fnop fnop fnop fnop push jmp movb movb push mov pop movb punpckhdq movb nop movb push shr pop movb punpckhdq movb push shl pop movb nop movb nop movb psubsw jmp call mov fdivl call mov inc pop call gs sbb (bad) in bound mov add sbb jl sbb les popa adc hlt incl sbb insl cmp call les lock add sbb dec lock les js jne mov clc mov push (bad) jne mov adc les sbb mov popf dec clc les inc les mov sub les mov sbb jbe xchg mov mov les mov pop or (bad) cld fiaddl dec stos xchg das dec jge (bad) les sbb cmp imul add (bad) mov dec sbb inc test call lret icebp clc jmp sahf (bad) adc pop pusha sbb pushf and daa jbe scas jne pop xchg xor cltd sub jne arpl (bad) sbb xchg push popf shl jbe call les xchg shrb ja jne arpl jne mov out adc les sbb adc mov imul insl sub dec cmp add arpl sahf popf gs jne insl fs call les sbb les sbb les call les mov jne mov cmp bound sahf popf pop out jne push cmc mov mov mov mov aad jne test je mov mul enter pop rorb addb call mov popa inc jne add jp call les sbb les xchg movsl rcrb and call mov or sub adc (bad) cld pop int3 dec cmp add arpl sahf popf (bad) les lods in (bad) push in sub das hlt pop lret popa sbbl std les add sbb dec xor mov adc jne mov out call dec cmp add popf popf out jne lods movsb (bad) push in sub das hlt cwtl lret popa cmpl sbb les add xor popa sbb popf pushf (bad) cld les add mov movsl rcrb (bad) jnp call rcrb call les jecxz xchg jge lods jne call adc mov call int3 jne out les sbb sub das hlt adc jne popa andl or les hlt or jne fstps cld xorl xchg add sub jne mov pop jne call in sbb jecxz push jne call pop jne call cmp push int3 int3 (bad) sbb jmp int3 jne call test dec (bad) les jecxz xchg jge pop (bad) mul call enter les lods cld pushf xchg les lods clc pushf jmp lods test lods sbbb subl mov xor push pushf jg call cld jne mov les xchg movsl enter push jno call les pop mov jecxz cmp arpl jne mov les xchg lods fdiv and mov hlt mov cmp adc jge call les sbb sub sub popf cld mov mull lods enter les add xor in push xor call test repnz pushf (bad) sbb subl sbb call pusha jne call les hlt fs dec clc mov dec (bad) jne mov movups les dec mov add les mov das pusha hlt add mov pop mov sbb nop push adc jne call dec or popa cmp fisubrl test popa mov xchg lods enter pop jns call test pop in jne scas clc incb lds in les mov (bad) incb dec ljmp in cld cmp jne mov sbb les ja jb call les mov cld andl jne arpl jb call inc mov call int3 jne arpl sbb lock jne arpl jne call les push inc mov clc les cmp xor jmp mov sbb lahf das lahf cs neg rolb sbb mov jecxz les call cmp push call jae adc les sbb cmp sbb daa cld loop add call cmp or xchg jns mov les call sub pop call in xor sarb mov jecxz enter cmp adc jae adc les fldt les sbb inc lret les out mov xchg pop sarb call les sbb mov out pop jne call into jne arpl adc (bad) mul call les outsl les call inc jne call ret clc enter inc jne call dec repnz les outsl les call les inc pop les call jecxz add pop jne call dec sub add jg call les ja jge call dec jbe lret popf or mov dec sub add sbb dec ljmp les call dec jbe imul idivl sub sub pushf sub cmp sbb ret jle call lret icebp inc jecxz jne dec hlt jne call test addr16 jge call les popa mov pop les call jae adc (bad) cld insb hlt inc or and clc les and jns call les pop mov xchg outsl les call scas mov mov in xor sarb mov xchg adc jne call cmp adc les outsl les call xchg adc sbb (bad) loop loopne jne arpl insl sbb (bad) (bad) pop in dec and xchg sub and neg aam sahf push loopne test sub incb fnstcw mov arpl mov call dec cmp mov sbb cmpsb lock push in dec cmp sbb in mov in mov popa mov sub cld push clc inc mov call cmp in sub das hlt call adc pop subb call dec lea adc jne arpl mov lret mov sbb fldt mov xlat aam sbb sub adc les adc rcrb (bad) les sbb cltd sbb dec pop adc in lret lock pop cmp out les add sbb xchg popf pop jecxz jne movsl mov test add xor sub pop call sub das hlt or sbb mov xchg cmpsl int3 mov add sbb cmp jo les lahf sar loopne inc jecxz int3 (bad) pop mov test (bad) (bad) adc mov jecxz nop mov dec and (bad) mov inc lea inc ret pop call add (bad) les sbb lahf sar loopne inc jecxz fdiv in lret lock les jmp cmp mov inc mov call in jne out lods jp push mov dec das or cltd and sahf jns mov es mov xchg insl lahf adc jp mov popf adc inc mov add lds movsl mov mul les add sbb cmp or xchg jge lcall adc jbe call les sbb neg in xchg incb dec (bad) mov sub and mov adc in lret lock mov hlt fistp jne arpl aas xor iret (bad) push cwtl sub das hlt aam jne pop mov xchg mov cmp cltd sub jne imul call dec cmp add jp call les mov neg loopne inc jecxz dec mov call les call fwait jge fstpt and jne call (bad) (bad) push cwtl sub das hlt cmp jne (bad) (bad) decb cmp sbb adc in lret lock ljmp pop out jne add sbb dec repnz jmp inc mov out les arpl movsl popf push cmp call lret lock push cmp call (bad) jne arpl jne mov pop sbb (bad) cld fwait nop lds arpl jne mov sub call lds arpl jne popa inc cmc sbb test jne (bad) sbb dec repnz jmp cmp popa cmp mov les pop push or mov jmp les outsl pop je call add cwtl pop les aad (bad) icebp out icebp mov les les out ljmp les insb push jne call les popa les aad jne sub icebp (bad) call les pushf mov cmp les sbb add jne (bad) jne push les pushf lahf dec push cmpsl xchg outsl test push aad jne push les out repz les call das inc lahf push push je call lds (bad) lds sbb (bad) jne call les pop push je call les repz sbb inc mov pop jae sbb xchg lds add xor sbb cmp mov les jg je call les jae sbb jl jne pop push or arpl sbb clc mov lahf adc add pushf lds mov aam sbb mov xchg mov mov pop xchg adc sbb dec xor popa aas hlt fistp xor sbb cmp pushf jmp int3 mov pop xchg adc sbb jae sbb jl jne pop push or inc lds popa subl jmp rorb pop jae sbb loopne inc jecxz movsb pushf add cmp jecxz mov decb cmp mov cmp sbb dec outsb xchg mov adc arpl or jmp cmp mov sbb arpl push adc or popa pop test mov dec mov dec cmp pop xor jne stc mov neg ljmp lahf push (bad) dec push int3 enter dec jnp call inc fstpl (bad) cmc mov jmp les lods loopne adc lds sbb popa add sbb lds repz sbb out jle pop add std aam in xchg popa aas cld sbb inc mov popf adc inc out cmc mov ljmp xchg xchg enter rclb sbb cmc mov sbb enter cmc scas sub in lret ja inc mov int3 (bad) cmp dec jno test les in hlt out lds xchg sbb sbb je call inc mov aad jne ss mov xor mov xchg cld (bad) (bad) enter (bad) or les scas cmp cmp mov xchg xchg enter stc jne cmpsl cmc mov sbb sarb ds call les or jns sub gs xchg mov sub push call cltd jns sub push imul mov clc les imul es stos (bad) jne popa add jne call les popa cltd sbb adc test daa call lds arpl gs cmc cmpsl xchg clc dec imul push lahf sub xor xor sbb pushf cmc and mov je adc push loope call cmp sbb dec xor arpl addr16 sub sbb (bad) mul jmp ret mov jae dec ret mov mov sbb (bad) incb inc mov clc les es mov sbb les ret add lea enter movl mov enter mov (bad) mov mov (bad) mov lods (bad) mov movsl (bad) sahf sbb mov popf cmp call xchg mov scas jne call (bad) je call add decl aad lahf sub adc arpl outsb sbb scas jne call scas je call cmp cmp add imul les mov (bad) jno cs pop sbb cmp loopne add cmp les dec pop xchg pop dec pop xchg pop xchg lods enter les mov je arpl xchg in fdivs in push xor call cmp sbb ss hlt int3 xchg in arpl gs scas jne call scas ja call cmp cmp add imul les call inc mov int jne mov cmp xor adc sbb cmp mov les lret ret mov jne call scas jne call subl cltd aaa mov add jo call inc inc loopne cmp arpl mul jmp cmp jecxz gs sbb (bad) (bad) pop clc dec xor xchg mov jno imul sbb xor lahf add cld rorb (bad) pop fmuls or test hlt ljmp xchg cld int3 adc cld iret add mov (bad) je (bad) decl sarb imul imul imul dec test loopne (bad) push int3 enter int3 incb (bad) lock iret lcall pusha (bad) ss mov push jns mov sbb (bad) (bad) pop in xor inc rolb call inc push sbb cs insb clc xchg incb dec inc cmp sbb inc nop dec jno jmp add insl add out rclb xchg (bad) lock adc cmc scas dec mov les mov add sbb cmp sub mov les or cmp fsubr les sub mov push fdivrl call cmp (bad) les arpl insl sbb (bad) neg les xchg sub sbb div in dec cli adc les add incb arpl jle adc addr16 iret iret xchg lods iret je lods iret jo cmpb (bad) mul call dec jno call gs sbb (bad) (bad) pop in xor inc sarb call mov xchg cld iret (bad) imul cld mov xchg test and out pop jne call lods jne cli les jl dec cmp xor or sbb pop mov outsl les call sbb fldt cmp sbb les (bad) rorb pop jae adc les jecxz xchg adc jecxz mov xchg push enter pushf mov jne mov xor inc imul or call mov (bad) int3 test test xor call mov and cmp les pushf hlt hlt (bad) int3 test sub cmc sbb add or push pop call jg sbb les sbb das jnp in les add into cmp les call inc mov clc les pop mov hlt cmpl jns sub push imul leave jne mov (bad) cld frstor jns call sarb sub cs sti dec popa adc test daa call enter fnstenv (bad) les sbb lds sbb (bad) sbb dec pop xchg push xchg das dec add imul pop sbb cmp sbb mov call xchg push dec pop xchg pop xchg popf enter fnstenv (bad) lds sbb les jbe scas jne mov loopne xchg mov jno pop les mov push jge arpl dec cmc popf icebp inc aad dec jno aam add test dec xor in xchg cld out pop add test jne call cmp jl dec sub in add stos dec data16 les mov arpl sbb pushf gs test jbe aam mov sub jbe in cmp sbb dec cmp or push adc cwtl push sbb neg in pop pop imul dec imul dec (bad) cmp adc jne call dec xor in (bad) xor loopne dec (bad) inc negl (bad) cmc daa push mov lahf xchg lds add push sbb xchg xchg mov cmc mov sbb xchg popf int3 cld pop adc ss test daa add jne (bad) dec ss xchg aad inc dec ficomp lds sbb cwtl inc push mov xchg imul xchg call ret sub neg loop mov les ja popa sbb cwtl push sbb push sbb adcb std mov cmpsb inc dec movsb popf xor addr16 mov iret xchg mov into inc aad lds call mov jp mov jae xchg aas int3 push push dec ss das jge stos xor xchg stos xor sbb mov sub arpl push adc aam push xchg rol add sub jne dec fdivl call jl sbb les out jl sbb les pop adc mov lods and scas push xor xchg mov pop jmp outsb lea es enter mov nop cmp xchg add mov insb enter lret dec mov fisttpl lea es enter mov mov cmp notb mov mov outsb pushf mov cmp mov and out jns in js in push mov stos adc movsl pop jns mov lcall dec subl pop jns mov jns mov jae cwtl daa imul out push cwtl in jns out ds jp jmp cmp xorl xor jne xor add jmp jb out push cwtl in jns out hlt cltd aas mov movsl les sbb les sbb les sbb les mov sbb les sbb ret pop test call test call les pop sub sbb les sbb movsb lahf jecxz les call (bad) jne call les call lds call lds call xchg jne call les call sub cmc pop cmp das mov pop js test hlt and pop jns mov pop stos mov jge mov pushf jecxz mov jns testl pop sbbl outsb lea adc mov hlt (bad) sub push subl mov mov jns scas add xchg sbb mov lahf jecxz xchg sbb mov jne mov jp lods sbb sub notl cmp mov lods jne lret das mov scas mov add push xchg popf jecxz scas adc mov popf lods add mov mov jge mov outsb lcall jecxz xchg adc mov jae mov js les dec xorl push pop nop les dec xorl adc orl jns mov pop subl and mov pop subl adc (bad) sbb (bad) les pop lea es mov mov stos test outsl lea sbb stc lahf jecxz adcl movsb stos sbb movsl add sbb les pop lea adc mov jne push sub jge mov adc xchg jne push xor add lods add mov push jns mov hlt pop sub pop jno stos adc lea outsl call cmp jge mov jae adcb popf mov add je jb lods sbb adcb popf mov add dec xchg jecxz xchg sbb mov hlt loopne mov fwait lods adc testl pop xchg sbb lea jne je mov xchg popf xchg cmp jns mov add stos sbb (bad) lcall lods add lods pop push lea popf or cmp push lea jge les push pushf xchg jns mov pop subl add add mov jne mov jge mov jno mov sbb in test pop mov dec lea adc sbb sbb mov add mov jno nop sbb sbb adc add test adc mov sbb xchg popf adc cmp jnp cmpsl add mov adc les dec fwait mov popf or cmp dec subl mov mov test jae les and aaa pushf jecxz (bad) call cmp call cmp hlt push cmp jecxz les add jecxz arpl inc inc les sar mov sub lods divb rclb stos mov and add mov js mov clc mov fldenv lcall out (bad) fsubrs and arpl mov inc xor movsl fiaddl movb push daa leave loop jp adc lea xlat lret sbb outsl jb sbb sbb push push icebp jno mov cmpb and adc iret push inc lahf cmpsl gs jno inc stos pop scas enter ja sbb pop (bad) std (bad) cmp push addr16 inc jg mov add push lcall mov xchg xor mov movsb push pop cmp adc ss mov cltd scas addb xor mov sub jecxz les add jne call cmp jg mov jns ljmp sbb mov sub les add and call cmp call cmp hlt call les add jne call (bad) jne call fbstp call fidiv call fnstenv call (bad) jne call fdivs call fdivs call (bad) jne call (bad) jne call (bad) jne call fnstenv call (bad) jne call fnsave call (bad) jne call (bad) jne call (bad) jne call fbstp call fidiv call fnsave call fnsave call (bad) jne call fbstp call fbstp call fnstenv call (bad) jne call fnstenv call fnsave call fdivs call fdivl call (bad) jne call (bad) jne call (bad) jne call fnsave call (bad) jne call (bad) jne call fdivl call fbstp call fidiv call fidiv call fdivs call fdivl call (bad) jne call (bad) jne call (bad) jne call fidiv call fnsave call fdivl call fdivl call (bad) jne call fidiv call fidiv call fnstenv call (bad) jne call fnsave call fnsave call fbstp call (bad) jne call (bad) jne call fnstenv call (bad) jne call fnsave call (bad) jne call (bad) jne call (bad) jne call fnstenv call fidiv call fbstp call (bad) jne call (bad) jne call fnstenv call fnstenv call (bad) jne call fdivl call fdivs call fbstp call fbstp call (bad) jne call (bad) jne call fnstenv call (bad) jne call fnsave call fdivl call (bad) jne call (bad) jne call fnstenv call fidiv call fbstp call (bad) jne call (bad) jne call fnstenv call fdivs call (bad) jne call fbstp call (bad) jne call (bad) jne call fidiv call fnstenv call fnsave call fnsave call fnsave call fdivs call fbstp call fidiv call fbstp call (bad) jne call fdivs call fdivs call (bad) jne call fdivl call (bad) jne call (bad) jne call (bad) jne call (bad) jne call fbstp call fidiv call fnstenv call (bad) jne call fnstenv call fdivs call (bad) jne call fidiv call (bad) jne call (bad) jne call fnsave call fdivs call (bad) jne call (bad) jne call fdivl call (bad) jne call fidiv call fidiv call fdivs call (bad) jne call fbstp call fbstp call (bad) jne call (bad) jne call (bad) jne call (bad) jne call (bad) jne call fidiv call (bad) jne call (bad) jne call fnsave call fdivs call fdivl call fdivl call fdivl call (bad) jne call fidiv call fidiv call fdivs call (bad) jne call fbstp call fbstp call (bad) jne call fidiv call (bad) jne call (bad) jne call fidiv call fnstenv call fidiv call fnsave call fdivs call (bad) jne call (bad) jne call fnstenv call (bad) jne call fnsave call (bad) jne call (bad) jne call (bad) jne call fdivl call (bad) jne call (bad) jne call (bad) jne call fnstenv call fdivl call fdivl call fbstp call (bad) jne call fdivs call fdivs call (bad) jne call fidiv call (bad) jne call (bad) jne call fnsave call fdivs call fdivl call fdivl call fidiv call (bad) jne call fnstenv call fdivs call (bad) jne call fdivl call (bad) jne call fbstp call fnstenv call (bad) jne call (bad) jne call (bad) jne call (bad) jne call fbstp call (bad) jne call (bad) jne call fnsave call fdivs call fbstp call fidiv call fidiv call (bad) jne call fnstenv call fdivs call (bad) jne call and jne add xor add and add add (bad) incl add add pop add add push inc add add lock sbb lcall xor xchg adc add push testl cmp inc add add xor add or or add xor add (bad) decl add add add add add add add add inc add adc js add addb add add add je ss add insb je insb jae imul gs add arpl je outsl imul add add or add add add adc inc add add or inc add adc add inc add add add add sub inc add (bad) incl add add inc add pop (bad) cltd aam mov xor jle or add add sbb inc add inc add add add add add add add add add inc add (bad) (bad) (bad) cmp inc add add add add add incl add add add add add cmovne xor inc add outsb je outsl imul insl jb jb jbe outsb fs add add add sahf cmpsb adc shll jecxz mov sti fldcw adc mov aam roll pop push jns int inc popf into mov adc dec lods xor or stos add xchg inc outsl jb add add cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add fmull add push add add add add or inc add and inc and add dec lods xor or stos add xchg dec jo imul lods xor or stos add xchg dec imul xchg dec lods xor or stos add xchg jae insb jae popa bound jb bound gs gs add add dec lods xor or stos add xchg inc push add or add imul gs xor add add sbb add inc fs arpl gs js gs imul insb gs enter fmuls inc add add aam inc add or je jmp push mov call jmp add add jb bound add insb imul pop add add add push add push add add add inc ss dec dec add add pop pop jbe popa inc imul add pop pop jbe popa push gs jns je insl inc jb outsl jb pop pop jbe popa dec gs add add jbe popa dec jb jae insb je push bound add add jbe popa dec xor popa jb add jbe popa inc jb gs je add add pop pop jbe popa inc jb gs popa jb add add jbe popa push popa jb jne add jbe popa inc jns xor add pop pop jbe popa inc jns fs pop pop jbe popa dec xor jns add pop pop jbe popa push popa jb jae inc add add jbe popa push popa jb outsl jbe add add add add enter add add push adc add (bad) (bad) incl add add inc add add add add pushf adc add add xchg or add mov add add add add add test inc add add adc hlt and add add and add incl add inc add pop add add les (bad) incl add add add add jp aam inc add (bad) (bad) incl adc inc add add add add add adc sbb fs inc add add add adc inc add add add add jl inc add push jp jl inc add add inc add add add fcoms inc add push jp xchg push inc add add add adc dec add add add and inc add jp mov add add inc add adc rclb add add add adc aam inc add adc loopne inc add adc rclb inc add inc add adc ficoml inc add adc clc adc and inc add adc ficoml inc add adc and inc add inc add adc ficoml inc add adc dec adc and inc add adc ficoml inc add adc subl jmp subl jmp subl jmp subl jmp subl jmp add add add adc add adc add add add adc inc add add add add or add stc push (bad) incl add add add add pusha aam inc add or das adc std push (bad) incl add add add add pusha loopne inc add xor add add add inc add (bad) (bad) incl add add add add add add adc add add int3 adc enter enter pop add add add add add enter (bad) (bad) (bad) incl add add adc (bad) (bad) (bad) incl add add inc add or inc add inc add add and sub inc add add and sub inc add inc add inc add inc add add inc add add je add add inc imul je add dec popa imul add add jmp in sub push mov push mov sub push push push mov movl xor mov mov push mov call mov push pop mov mov mov mov xor mov mov mov mov mov lea lea call mov movl mov lea push lea push call test je push push push call push push call push push call mov mov mov lea push lea push lea push mov call mov jmp mov lea lea mov mov mov call push jmp testb je lea call lea call ret lea call lea call ret mov push mov call mov lea movsl movsl movsl movsl mov mov pop pop mov pop leave ret push mov sub push mov push mov sub push push push mov movl xor mov mov push mov call mov mov mov push jmp lea call ret ret mov push mov call mov lea movsl movsl movsl movsl mov mov pop pop mov pop leave ret push mov sub push mov push mov push push push push push mov movl mov and mov andl mov push mov call movl mov push mov call mov mov pop pop mov pop leave ret push mov sub push mov push mov push push push push push mov movl mov mov and mov and push mov mov call mov push call movl mov push mov call mov mov pop pop mov pop leave ret push mov push push push mov push mov sub push push push mov movl mov lea push push mov xor push push mov call cmp jge push push push push call lea push call lea mov call cmp jne push push call mov push push mov call cmp fnclex jge push push push push call push push call call push push push push call push jmp lea call ret ret mov pop pop xor mov pop leave ret int3 int3 sahf sahf sahf sahf lods sbb (bad) (bad) (bad) (bad) lcall add add add add add add add add sbb add sbb add sbb add sbb add add add add add sbb add sbb add sbb add sbb add sbb add add add add addb add add sbb add sbb add add add push inc push dec xor inc dec dec add test pop pop jbe popa push popa jb jne add pop inc dec arpl add mov pop popa fs data16 popa outsb add js pop pop jbe popa push popa jb outsl jbe add mov pop pop jbe popa inc jb gs popa jb add push imul xor mov pop popa fs data16 gs xor sub bound gs jns je insl inc jb outsl jb rolb pop jbe popa dec jb jae insb je push bound add push imul xor jae pop pop jbe popa inc jns fs cmpsl add fs imul imul popa fs imul xor imul dec jae outsb add outsl add jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 pop pop jbe popa inc jns xor or inc insb insb inc jne arpl outsb inc popa insb insb add push data16 je outsb add dec push pop push dec dec dec pop push gs gs jae add push add dec jae jb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl mov pop pop jbe popa inc js gs dec popa outsb fs gs add push data16 gs add scas add fs imul ss add bound push inc js gs imul pop inc dec insb outsl add lcall inc imul testl popa dec gs add push imul xor add push imul xor imul fs imul xor add stos add fs imul iret add jbe popa dec xor popa jb add popa push popa jb jae inc add pop inc dec popa je outsb add add jbe popa dec xor jns mov pop popa insb insb insl jne add pop inc dec je outsb add push add dec gs add scas add jbe popa inc jb gs je 