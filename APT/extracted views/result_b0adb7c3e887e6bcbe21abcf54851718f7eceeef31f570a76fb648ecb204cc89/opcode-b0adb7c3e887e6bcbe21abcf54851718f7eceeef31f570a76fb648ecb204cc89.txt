inc cwtl adc xchg pcmpgtd or data16 push xor sub push data16 adc add inc or data16 or je or pushw add pushw add data16 xchg pcmpgtd bound data16 or notb or data16 or xchg pcmpgtd inc push mov pcmpgtd jg push femms dec and lea data16 push data16 sub xchg mov pcmpgtd add data16 add test data16 xor adc dec push data16 ja mov data16 adc mov pcmpgtd insb push data16 in out push inc xchg pcmpgtd fisttpll data16 imul scas lahf or add add add add add add in jl add jl add and jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp push call add add add xor add inc add add add add mov dec test daa pop mov add add add add jp addr16 push add add add add add add add sbb add rcrb pop add add inc add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add dec add add add sub or inc add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add sub add add add add add jo inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add dec add add add sub jl inc add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add nop dec add add mov inc add jo jo inc add je popa add inc xor add or or add add add push inc add lock (bad) (bad) decl add add add add add add add add inc add inc add add jg add xchg add mov add push arpl jp add ja jae add dec popa jp addr16 add add push add add nop inc mov jne iret addb add add add add push add add addr16 test pop jmp add add add or add add lods sub pushf add add add add inc add add add bound (bad) (bad) (bad) incl add add sbb sbb dec add add add sub add jo inc add add add sbb add add jo inc add add add inc add add add add add add inc add add add xchg dec add add add pusha jbe add inc add inc add pop add add jl inc add (bad) (bad) incl add add add add inc jbe mov inc add (bad) (bad) incl add add inc add adc add add inc add inc add add add inc add add add jge add adc add nop dec add adc add add lods adc add add add dec add (bad) (bad) incl add add pushf (bad) pop mov inc mov xor cmp push std or push add add add sbb xor inc add add add add add add add add add add (bad) (bad) (bad) fcomps inc add sbb add add nop sub add addl add adc add (bad) (bad) jmp inc add sbb add add pusha sub add addl add add (bad) (bad) ljmp add add nop dec add add add sbb sub add add add (bad) incl add addb add add or inc add (bad) (bad) pushl inc add add add add add add sbb (bad) incl add addb add add inc adc (bad) (bad) (bad) pushl inc add add add add add add sbb (bad) incl add addb add add aam inc add (bad) (bad) pushl inc add add add add and inc add incl add addb add add dec popa insb insb bound xor add inc imul xor outsl insl bound addr16 push imul inc imul imul add popa outsb imul xor add dec popa jp addr16 add add nop push dec xor xor push test add addl in mov inc nop inc mov jne iret addl mov cmpsl test dec lods xor or stos add xchg inc outsl jb add add cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add xchg sbb add add push add add add add inc add xchg dec add fnsave ljmp adc pusha rcll imul add dec lods xor or stos add xchg add add inc outsl jne add add dec lods xor or stos add xchg dec jo imul je outsl outsb add je outsl outsb xor imul lods xor or stos add xchg inc outsl insl insl popa outsb xor outsl insl insl popa outsb xor add add insl insl popa outsb xor add add insl insl popa outsb xor add add imul add push outsb arpl arpl imul add jne outsl xor or je cmp cmp and test mov into ljmp and jl xchg jne,pn xchg addr16 test pop jmp sub loop inc mov cwtl sbb pop insl ja add or add popa fs jo xor add add adc add dec jo outsb push jb arpl jae outsl imul add add inc add add add call add add add add or je jmp push mov call jmp add add add jne gs outsb jbe fs insb add gs insb insb push jae jb push jb imul arpl jns add add nop sbb add add hlt xchg dec add or je jmp push mov call jmp add add add add je gs jne je jae jb jb imul arpl jns add sbb add add add add add add mov or je jmp push mov call jmp add add add add inc push xor cs dec dec add adc add inc outsb jne push push push imul add push sbb inc add add or dec add or je jmp push mov call jmp add add add add add add add add add add add add movsl push add add add add add cmp push add xor and push add xor add add loopne inc add sbb add jns lods xor or stos add xchg inc add arpl imul add insb add jb add sbb add inc add outsl add add imul insb add add add add add dec add js outsl add jbe popa add imul add adc add push add ja imul add add add add dec add outsl add add outsl add jae xor add add push add outsl add add add push inc inc ss dec dec add add pop pop jbe popa dec bound popa jb pop pop jbe popa dec popa je dec gs inc popa insb insb add add pop pop jbe popa push gs jns je insl inc jb outsl jb pop pop jbe popa dec xor jns add pop pop jbe popa push popa jb jae inc je add pop pop jbe popa dec outsb push je add pop pop jbe popa push popa jb popa je pop pop jbe popa dec jae je imul gs jbe popa push popa jb outsl jo add add pop pop jbe popa push popa jb popa je dec gs inc popa insb insb dec add add jbe popa push popa jb gs bound fs data16 add pop pop jbe popa push popa jb jae dec add add jbe popa push je push popa jb outsl jbe add jbe popa inc jb gs bound add add sbb dec add jbe popa push popa jb fs jbe popa push popa jb outsl jbe add add pop pop jbe popa dec jb jae insb je push bound add add jbe popa dec gs add add jbe popa push je dec outsl jbe add add pop pop jbe popa inc jb gs je add add pop pop jbe popa dec outsb push je push popa jb add pop pop jbe popa dec xor popa jb add jbe popa inc jb gs popa jb imul pop pop jbe popa inc outsb add add add add pop pop jbe popa inc jb gs popa jb add add jbe popa push popa jb jae inc jno add or or add add jo inc add add add (bad) (bad) incl add add sbb or add adc add hlt and add add dec sbb add add hlt and add add cld and add add clc and push add add and add mov push and xor dec add add add push jbe pop sbb insb sbb inc add add add jl inc add (bad) (bad) incl add add add add inc add sbb (bad) (bad) (bad) incl or add inc add add add and mov sbb or add inc add add add sub inc add add add inc add sbb push add add adc inc add add add add add inc add inc jbe push sbb add add inc add add add add add add and add inc jbe pop sbb add add inc add add add inc sbb add add cmp jbe sbb add add inc add add add add add add jbe insb sbb add add inc add add add je inc add add add es add inc jbe test inc add add add adc push add add add add add add inc jbe nop sbb or add inc add add add je inc add add add inc jbe pushf sbb push add add adc pop add add add add add add add inc add inc jbe test inc add add add add sub inc add add add add add inc add sbb or add add add add add aam inc add inc jbe rcrb add add inc add add add je inc add add add sub rolb add sbb or add add add cld and jl inc add add inc add inc add inc add add add inc add inc add add add add inc add inc add add add add inc add inc add inc add add inc add inc add and jl inc add add inc add inc add and jl inc add add inc add inc add inc add add add inc add inc add inc add add add inc add inc add add add add inc add inc add inc add add inc add inc add inc add add inc add inc add and jl inc add add inc add inc add inc add add add inc add inc add int3 xor bsf inc lahf dec inc nop inc mov jne iret nop push dec xor xor cmp xor or stos add xchg les add dec add add or dec popa insb insb bound xor or popa je popa jae add add inc add add (bad) (bad) (bad) jmp add je popa jae add fs add add xchg or inc add add add add pop add je outsl outsb cmp push add add je outsl outsb cmp add lret add add incl sub add add add je outsl outsb aaa add add add je outsl outsb aaa add clc push aad adc incl sub add add add je outsl outsb add add add je outsl outsb add lret or adc add add add je outsl outsb xor add je outsl outsb xor pop adc push add add add add insl insl popa outsb xor add or inc outsl insl insl popa outsb xor add jb incl sub add push or inc outsl insl insl popa outsb xor add or inc outsl insl insl popa outsb xor add push inc pop jae ficoml adc add add add pop or inc outsl insl insl popa outsb xor add insl insl popa outsb xor jmp add add add or add insl insl popa outsb xor add or inc outsl insl insl popa outsb xor add adc or add incl add add pop add jne outsl xor add add jb add or or add add add add add or inc outsl bound outsb addr16 add fs add in in adc add add or push outsb arpl arpl imul pop add jne gs pop bextr incl das add add imul pop add sbb or push jne jo je outsl insb popa je add or incl sub add push add jne add add add or add outsb gs add or incl sbb add or add jb arpl gs push add add add add add add or inc jae push add add add add push add add push inc add add add add dec xor add addr16 test pop jmp mov mov leave test dec lods xor or stos add xchg jp or jne or add add addr16 xor add addr16 push add inc add scas sbb add cmpsb sbb cmpsb sbb add add add add add add sbb add add add add or mov jmp adc jmp xchg in addl push xor ret sbb (bad) divl in arpl pop call sub out clc dec fdivrs dec cs les cmp push ret fstpl (bad) pop jo jl hlt or or push add and xlat (bad) add ja push fistl pop sub lds scas dec push sbb out or stos mov rcrb ds pop mov push insl shrl pop and pop icebp cmp mov jne fdivs cmp data16 imul adc push mov and cld in xor in adc xor iret insb jp adc mov xchg inc add mov sub lea je mov sub push ja jbe nop scas mov fcomi or int3 test sub ss pushf and stc (bad) lret icebp push rcrl hlt jp push (bad) sub rolb sub or pop std inc (bad) outsl loope enter pop ds orl jns outsb gs sub incb adc int out lar popa out jge and imul aad pop xchg dec les rorb push cmp mov rcrb ds fwait mov pop insl roll pop push inc icebp mov pusha mov inc mov jb addr16 push xlat adc push and cli mov cld fistpll and in in xor insb adc adc test mov inc inc mov lea je fidivl mov jbe nop scas ja fucomi or mov inc or dec loopne mov (bad) xor ja xor push push aad nop cmpsl stos imul divb mov pop repnz cli cltd sbb dec and orl cmc push sbb push xor add mov enter add sub js push dec clc jne and fwait add or sub jg ljmp ret sub and dec lods mov (bad) xchg jae in lock imul dec dec je in push (bad) or jb mov divb in cmp shrb cmp pop push scas aaa add mov sbb cmp xchg loop lahf jbe scas mov inc sbb xorl stc dec ret pop (bad) clc mov xor inc lds add flds pushf push insb (bad) leave in jecxz or lea (bad) outsb dec fisubl xchg les cld dec outsl adc mov xchg ljmp aas enter xchg or iret fsubrs mov movsl push dec sbb ds test jmp out xor mov (bad) pop (bad) xor and cmp cmpsb cmpsb in push sub call jp sbb cmc mov mov lcall es out int3 out rorl xor adc (bad) or test jb mov divb cmp in loope cmp push scas aaa lret repz sbb mov lahf cmp scas loop jns sbb inc je adc pop subl xchg mov xor inc lds pusha jle sbb (bad) flds pushf push add leave pop jecxz insb lock in (bad) xor lret dec fcmovb daa xchg outsb mov addr16 and mov push push xlat inc push fcmovne das int xchg aas mov cwtl sub movsl push sbb adc movsb mov test jmp out xlat loop popf mov xor roll xor and in push sub call and sbb imul popl lods dec das cmp es out cmp test and roll jb inc pop adc cmp loope sarb jne push cs lret pop mov repz cmp scas loop jns dec inc mov inc sbb xorl dec ret inc (bad) clc mov jge inc xor inc sbb mov add leave pop pushf push insb (bad) (bad) in jecxz or (bad) fwait (bad) fcmovb lret dec arpl rol mov and mov mov xlat xchg push fistl int xchg aas enter mov sub sub ds jmp test xlat aam popf out xor roll xor and in cmp push nop sbb and sbb imul fs mov dec das (bad) mov cmp out int3 adc or xor mov push push (bad) dec pushf imul dec aaa loopne test lock dec fldt fdivrl int3 lds cli dec out mov cmc pop ss mov push lret (bad) push movsl sti outsl or lock aaa mov sub repz addr16 jae mov add movsb jne nop (bad) mov cmp fildll jae clc xchg sarl jno adc push jle negb pop dec cmpsl arpl inc xchg xchg add mov je inc ret pop jl aad ret (bad) mov (bad) mov inc cmpsb mov push push push aaa pushf dec daa insb sbb mov mov pop mov jo push dec cld mov mov daa inc push loop and rcl int3 arpl jbe xchg imulb movsl or push sub cwtl mov ljmp jne sarl lahf adc pop dec mov ja lahf xor xor push and or fiadd test shr bound into mov lods inc repnz mov pop sbb jmp lods inc shr std and in sub ja adc das out jmp jno in mov (bad) xchg xchg dec rol and les mov sti push icebp cmp dec fnsave dec xor leave jne aas cmp enter bound andb adc sti pop jecxz fcomp pop add sub push ficompl jno push inc fistp call push lret mov push dec cs (bad) lea mov (bad) jb popa (bad) dec dec lods into sbb gs add mov mov push in and sbb xlat or mov pop mov push aad out push pop stos cmp ror pushf xchg jae sti jg rorb and mov std inc repnz popa push fsin mov xor mov rcr imul movsl daa adc sub mov loopne test fsubrs ret adc shlb stos jb sub movsb xchg dec add xor lret xor xsave pop test push (bad) jne insl leave xchg in shl iret test stc lock sbb mov je sahf lea or fdivrl les call adc movsl fbld (bad) and pop push sub std insl lret dec pop xchg imul fildl mov jge ret in fisub ds (bad) cs push jo icebp mov out mov lret jmp mov scas jbe jno mov dec sahf mov inc sub mov xchg dec ror and (bad) cmp push and sar jno jl hlt push stos out idivb jns xchg js push jle lret in inc gs lret push adc cmp out push fistp pushf and ret daa sbb sbb bound inc mov adc push mov sbb xchg mov enter dec fs pusha inc lods pop aaa jnp xor push dec iret cmp es sbb fcmovu sbb mov mov pop sbb repnz scas ds mov pop sub popf lahf cwtl das in into arpl jbe loope pop jno insl push pop and and cmp inc mov jns fdivl inc rorb outsb out pusha sbb adc (bad) sahf inc jecxz add in add xorb pop lock ss jo loop movsl lods stos push je dec or xchg inc or xchg xchg lcall jl daa sub stc jp xchg mov push loopne push xor std cmp inc pop loopne fucomp and mov mov (bad) pop mov mov pop adc nop add (bad) inc inc (bad) xor lret mov das mov sti sbb enter or cs faddl mov movsb test iret (bad) repz cmpsb in dec loope lods sub mov aam inc sbb fadds stc or pop insb push ljmp mov xchg lds sbb mov fist add cwtl add xor sub cmpl movb cmc fwait mov pop cmp (bad) jg dec inc pop mov outsb mov add lret push cld (bad) int3 test push add cmp fisttpl imul test add or mov cmp lea mov xchg sub clc test jns mov mov push push cli fsubr repz push aas sti mov xor jbe inc loope and iret and push pop and lcall jp dec aad lret call int3 pop and jl sbb (bad) sub cmp or sub out fcompl (bad) xor pop and les mov mov push xchg ja jmp test subl push push js lock lret mov aam sti aas jle out (bad) outsl sbb sub (bad) adc mov idivl cmp add xor mov rorl leave mov lcall repnz nop iret mov dec es dec leave mov gs fimul mov icebp out adc xchg lahf add (bad) into lret jb fisubr xchg enter lods (bad) add sbb fistpl rorb inc int3 xor (bad) mov test cmp push mov fdiv mov ret or pop les sar enter inc or pop xor test sub xchg ret jle sbb cmpsb insl jo (bad) mov sahf xor inc fnstenv clc loopne mov scas or roll push sbb xor dec sbb mov imull je in movsl mov out cli xor (bad) mov ret fldt mov mov add xchg add rclb fiadd adc popf dec les cmp loope xchg jnp aas dec fsubrl rcrl xchg data16 sub arpl call or add popa out rorb push cmp icebp lock mov mov fisttpl xor push test stos jne in mov scas mov in fcmovbe and cltd jo in subl pop cmp sarb lahf pop int nop jmp xlat movsb pusha inc addl mov test (bad) pop ds stos or fisttpll ljmp shrl movsl and int3 testb gs mov lcall test add jle xchg int3 dec shrl and pop dec inc adc notl into mov cltd jne push mov lret push jbe mov add cmpsl sbb dec push loop jp push sahf mov adc pop fildll stos les inc cmp arpl repnz xor and (bad) movsl mov or jl sti push mov push shrd in pop xor xchg fwait out xchg and lock adc xor inc cld rcrl push dec mov fs jecxz call dec mul sbb inc lret insb aam iret or dec inc mov movsb cs std cmp sub push jge jae or lds arpl jmp add cltd add and aaa mov outsb sub dec mov stc mov mov cmc and dec fildll loopne dec pop or ror pusha push xor push hlt cmpsl notb mov pop ret lea push daa sub xchg mov out mov xlat jb jp sbb enter dec ret dec dec sbb pop in rclb cmp and rcrb add lcall bound mov jg lret xchg mov and cwtl (bad) push lahf test fnstsw jecxz je int push and movsb mov mov roll nop add mov fdivs mov daa cld jmp pusha mov das stc (bad) jb cmp lret push pop adc mov mov icebp pushf (bad) jge out jae (bad) adc lds cmpsb and xchg lcall mov and dec (bad) outsb push test sbb in mov int inc (bad) in sbb das lret sarb jno jmp mov ljmp or insb fs mov imul inc cs std ficompl iret rcll aas xor imul push cs push idivb mov push loope push ss jns inc cmp int3 in pop pop lods test cld adc or (bad) fsub pop or sub pop ficomp in xor into or test mov adc out push mov and aaa ret push aad pop and mov sbb hlt movsl addr16 aas (bad) cmc push lock stc daa sbb push cwtl fistl leave mov or repz scas aas sahf mov xor xlat iret mov test les cs push mov cli cmp mov aaa (bad) xor sub mov sub (bad) fsubrl push popa stos sub inc arpl nop lahf mov stos lods ljmp enter stos jg mov xor (bad) jae push adc dec inc pushf ljmp cmc js cmpsb jl into outsb jecxz fildll cmp jns icebp mov pop jmp cld popf jle lock mov xorl rcll in mull pop xchg test xchg test mov and jge sbb xchg inc cmp iret das inc jne enter fadd es insb mov test mov lods in mov adc sub xchg (bad) jno adc fisubrl or mov outsl cmp (bad) jle addr16 sbb (bad) sub in cmc mov push std out fstpl jbe aas fstps loop add jne sbbl sub fdivrl cwtl jl push (bad) sbb call iret xchg pop jnp ds inc ljmp das fbld jmp sub ja sbb rcl dec mov adc dec push movsl xor and lds jns mov push push pop cmp xor pop dec sarl cld sub jae (bad) sbb mov pop and notb mov bound fisubl inc shlb jp in pop jne jno pusha sub push inc jge loopne stos inc les fbstp or sbb jb xchg mov sub add and sbb cmp xlat je out test rorl xor dec jne in adc inc jnp sarl cmp out es push cmp cmp mov dec hlt in mov in loope daa add mov xchg push pop popf (bad) mov xchg lock xchg or int3 cmp iret mov xor add add cltd inc or or cwtl mov (bad) xor js icebp enter ret lret (bad) mov test sub (bad) es call mov cld mov and test rcr sbb or push sbb sbb icebp popa pop (bad) fucomip push test fcom jl call (bad) jno mov or and in cmp xchg pop xchg (bad) sub fucom jnp push pusha sti mov fwait insl gs mov push in nop pop xchg scas sub cli out cmp xchg int ret xor into orl pop push add lea clc aaa mov sub das (bad) int3 pop imul jp dec add jecxz mov jb inc pop cld adc xlat (bad) jne mov xchg in pusha cli aaa dec add and push sub mov pop std pop and pusha cmp or test sub pushf rcrb and xor subb push add sub movsb or adc xor xchg repnz fsubl ss or jbe push mov stos inc inc out out mov std pop fwait jl in and je mov test sbb push push jge hlt pop into pop xchg cmpsb popa (bad) mov inc (bad) xor xchg js inc cs jp sbb or ret push or inc call jg mov jns dec es sbb fimul popa pop mov pop lret in outsb push (bad) dec add dec cmp ret imul loop movsl pop jne (bad) cmc in pop adc xchg mov iret jbe loop xor mov add stos add test sahf repnz pop (bad) dec push inc (bad) aaa mov xlat loope shll push cmc lods pop push and inc pop mov hlt cmpsb out xlat cmp sarb (bad) cld push mov imul sbb fldl lods push andl and mov mov push push cltd jno jmp in mov mov int hlt out aad lret or insl pop rcll fnstcw js lock mov cmp cs je (bad) mov xchg jp (bad) fildll ret (bad) cmpsb xor dec ficompl xchg sbb xchg pop outsl sub or mov idivb and mov mov in jno insl jg mov sbb pop inc cmpsl adc xor out push inc lret out movsb das and aaa and pop ret xchg dec xchg sbb cmp cwtl fwait xchg outsb and leave pop mov push insb shrb pop arpl xor test aaa je fdivs cmp mov xlat lods daa add pop push mov and cld in jbe sbb adc xor into scas mov movsl dec outsl mov xchg inc add repnz (bad) ret call inc add subl mov or pop dec inc sbb out pop js cwtl cmp ds aad cmpsb pushf in xor mov iret push jp mov pop mov jecxz push out jle and js pop ss in pop and arpl scas enter inc (bad) addr16 and pop aaa push daa in lret ret subl bswap addl jo inc pop adc xor bound mov sub hlt jae push lods je jo add movsl ja xchg add pushf out in xlat mov rorb sbb dec into mull fdivrs aam and or (bad) push inc mov test cwtl add xor hlt inc xchg and mov leave daa addr16 cmpsl mov push pop push cmp and dec cmp sub pop mov jb adc rclb inc lea stc sub jecxz (bad) in dec sbb aam sbb push clc stos cli pop mov (bad) (bad) mov pop sub out fs push push sub out (bad) out enter int3 out mov call out out shr ret out call out fsubrp stos out (bad) out fsubr mov xchg out (bad) lcall out fsubr stos out nop out test (bad) out ret out xchg out loope (bad) out in (bad) out sub in mov lahf out sub stos out out out sub out loop enter fsubrp (bad) shr test out repnz cltd out fwait out (bad) out fsubr shr ret out repz sahf out mov jecxz int shr out into out (bad) out jecxz imul test shr leave out sub out (bad) out (bad) out fucomp popf out fucomip xchg out lret out leave out fsubr shr out loop lahf out shr (bad) out icebp out clc out (bad) out int call out (bad) out fucomi int cmc out mov (bad) out mov xchg xchg out (bad) out jmp out cli out lock iret out (bad) aad xchg out (bad) out loopne stc out cld out in out pushf out (bad) enter out out loope lcall out mov jmp repnz int3 out int3 out lock sub out std out nop out (bad) out stos out jmp cltd out ljmp out in xchg out icebp out test xchg out cltd out into out in out mov fwait out cwtl out leave out in out out xchg out stos out imul sub out shr into out mov repz repnz std out mov call out xchg out out out sub out xchg out sti out ret out iret out (bad) out in popf out mov stc out xchg stos out hlt out cmc out in out in out xchg out int3 out aam sahf out fsubr cwtl out aad mov pushf out mov lock sti out cwtl out xchg fsubrp xchg out shr out (bad) out mov mov (bad) out fucomi jmp out sub out mov xchg (bad) out aad shr out imul cmc out lock mov jecxz shr jecxz test out (bad) out imul mov stc out stos out (bad) out (bad) out cltd out (bad) out (bad) out nop out sub out lcall out loopne (bad) mov (bad) out out out mov xlat out cmc out call out mov mov (bad) out xchg out cltd out shr (bad) out fucomi shr fucomip loope sti out xchg (bad) fsubrp in out repnz in iret out jmp out in call out xchg out xchg out xchg out lret out icebp out sub out cld out std out lahf out nop out stos out lcall out (bad) out cwtl out fsubr xchg popf out (bad) out (bad) out test sub out lret out loop xchg out imul xchg out mov sub stos out lahf out fucomip (bad) out test in jmp shr in test ret out cli out shr out xchg out test out out in out leave out loop clc out mov in ret out shr shr fsubr jmp xchg xchg out iret out cmc out pushf out sahf out (bad) shr (bad) out (bad) out imul xchg out xchg out shr out std out shr out out in out int aam fwait out fwait out ljmp out mov shr mov int cld out int3 out xlat out fucomi clc out fsubr hlt out jmp (bad) out hlt out repz test shr out std out repnz sub out shr out mov jmp out test out aad aam xlat out out out ret out call out (bad) sti out (bad) out jmp out ret out mov hlt out xlat out int in shr shr out repz fsubr fucomp stos out stos out stc out mov xchg out out cltd out loopne xchg out shr in shr fsubr int3 out loope out out fwait out cli out mov lcall out aam sub out xchg out in out leave out icebp out xchg out clc out hlt out lret out xchg out repz in sti out out cld out shr (bad) out shr lahf out out out ret out in out in clc out out out cwtl out in out test out in out xchg icebp out loop mov pushf out std out std out (bad) out enter test out (bad) out fsubrp (bad) out test cld out stc out in out sub std out leave out (bad) out int xlat out jmp out int3 out shr loopne ljmp out xchg out jmp fsubrp lret out test fwait out xchg popf out repnz out icebp out (bad) loop jecxz (bad) out xchg cwtl out mov (bad) out out aad test mov mov ret out sub out fsubr lock sahf out imul call out xlat out lcall out imul shr out cltd out (bad) out int test out sahf out ljmp out mov xchg out call out sub out fucomp shr pushf out shr out out (bad) out jmp xchg out shr out ret out cmc out sub out sti out (bad) out mov enter (bad) out test out cmc out aam stos out lret out xchg out into out aam shr nop out (bad) mov mov fsubr call out shr lahf out aam mov (bad) out mov pushf out sub out test fucomp xchg out (bad) out fsubr fucomi in out (bad) out test out call out shr aad xchg out into out loope icebp out out out test out popf out stos out mov fwait out xchg out shr test xchg ret out xchg out xchg out xchg shr lcall out test fsubr lret out shr out stos out xchg out mov mov shr jecxz mov (bad) repz fucomi cmc out stos out fucomip stos out xchg out fwait out fucomi shr out fsubr loopne std out in mov enter out sti out mov (bad) out sub out cmc out shr out out (bad) out xchg out mov aad fsubrp fucomp fsubr xlat out test sahf out test icebp out shr out (bad) out fucomip shr ret out (bad) out sub out ljmp out (bad) out loop imul xlat out shr enter (bad) out mov xchg out fsubr pushf out fsubrp xchg out leave out (bad) out (bad) out shr (bad) out in loope sahf out xlat out sub lret out out out xchg test stos out (bad) int3 out hlt out xchg out aad (bad) out int xchg out sub (bad) out stc out imul aam (bad) aam xchg out (bad) out (bad) out clc out repz loop xchg out (bad) iret out (bad) out in out loopne cltd out out out in sub out ljmp out imul iret out lret out fsubr (bad) out shr jmp out cld out out test (bad) out (bad) lock int3 out nop out cwtl out int3 out in out mov ret out enter (bad) out (bad) out sub out (bad) out cwtl out test test jecxz repnz icebp out cld out mov shr out out out xchg out fucomip fsubr cli out repz cmc out in xchg out fsubr ret out loopne sti out pushf out loope clc out xchg mov in out mov (bad) out (bad) out mov lcall out icebp out into out in out xchg out in out imul cli out lahf out (bad) out xchg out mov sahf out stos out xchg out (bad) out out sub out xchg out ret out (bad) out out lret out mov test fucomi aam shr out cmc out hlt out imul (bad) out loop std out (bad) out test clc out stc out lcall out test out shr out (bad) out xchg out sub enter mov out out stos out (bad) out nop out aad xchg out out out (bad) out xchg out (bad) out mov std out xchg out cwtl out shr xchg out (bad) xlat out fsubrp loopne sub out fsubr fucomp jecxz sahf out cli out int call out in hlt out loope iret out xchg out xchg out xchg out leave out sub out (bad) out jmp cwtl out cld out popf out xchg out test out popf out out (bad) out int3 out lahf out shr int pushf out (bad) out jmp out xchg stc out leave out out mov stos out imul xchg out mov sub out enter sahf out fsubrp (bad) out lock lret out lock (bad) out sub stc out (bad) out mov xchg out fwait out out out mov enter test (bad) out sti out ret out shr shr ljmp out hlt out xchg out popf out (bad) test out out out mov stc out fucomip sahf out xchg out (bad) out lahf out xchg out fucomip in out test int lcall out sti out leave out mov test sub out aad fwait out enter shr fucomip mov int (bad) out in out aam (bad) out sahf out (bad) out jmp stc out xchg out sahf out loope in ret out repnz (bad) out (bad) out (bad) out jmp (bad) out in out cwtl out xchg out shr out xchg out nop out fsubr aad call out stos out cltd out clc out (bad) fsubrp imul fucomi shr clc out out (bad) out out out popf out popf out in out cld out test ljmp out (bad) out cmc out (bad) out jmp out shr mov in out icebp out mov cmc out lahf out (bad) in imul hlt out lcall out xchg jecxz (bad) out xchg out into out lahf out out out out out out jmp out xlat out loope (bad) out shr shr std out call out sub out pushf out cwtl out sti out shr mov in aad repz xchg loopne loope (bad) (bad) (bad) out popf out shr out enter shr out mov out in out xlat out cmc out repnz lret out xchg out leave out xchg out (bad) cli out clc out xchg out xchg out (bad) out icebp out fucomp test ret out cwtl out fsubrp out out fucomi xchg mov (bad) out mov sub out ljmp out (bad) out lock mov sub out iret out imul fsubr xchg out fwait out icebp out stos out test imul pushf out ret out sub fsubr sub out loopne (bad) out call out ret out out out aam fucomip cld out cli out xchg out call out sahf out ret out loopne lahf out pushf out int shr (bad) out lret out sub out leave out lcall out repnz mov in out shr in out stos out fucomp fsubrp clc out icebp out mov sti out xchg out shr shr out out stc out xchg out out (bad) out fwait out test jecxz mov loop (bad) out mov shr out cmc out shr imul ljmp out hlt out clc out popf out fwait out shr mov (bad) out nop out (bad) out sub shr out in enter (bad) out ret out (bad) ljmp out xchg out xchg out test out (bad) out (bad) out std out (bad) out cwtl out xchg out xchg out test xlat out repnz loopne (bad) out xchg lcall out (bad) out into out mov stos out in in test fucomi jecxz xchg out jmp nop out in out sub out (bad) out xchg out cltd out (bad) sahf out aad test out fsubr out xchg int3 out fsubrp shr loope pushf out xchg jmp out (bad) out cli out mov out int stos out stos out xchg out iret out sti out imul sub out lock repnz xchg out (bad) out sub cmc out fsubrp (bad) cltd out imul test lcall out xchg xchg (bad) out (bad) out into out fsubrp out test out loopne xchg lret out (bad) out imul stos out xchg out call out call out cltd out lahf out shr (bad) out in xchg out repz (bad) out loopne int (bad) std out (bad) out stc out shr out enter ret out mov fwait out in out xchg out cmc out xchg out lret out xchg out in out xchg out (bad) out fucomp (bad) out aam (bad) out xchg out fucomp loope ret out cwtl out repnz shr out xchg iret out (bad) out leave out sub shr out xchg out xlat out fsubr mov ret out mov lock lcall out imul test stos out pushf out out sub popf out sub out fucomi ljmp out (bad) out test out xchg out xchg out shr jmp out out fucomp mov test out fsubr shr hlt out (bad) shr (bad) out (bad) out (bad) out (bad) out xchg out loop lahf out lcall out int3 out (bad) out mov (bad) out out out shr imul std out stos out jecxz pushf out sub out popf out fucomip sti out xchg out mov cwtl out (bad) out fsubr sub out loope fwait out nop out int3 out popf out in mov mov cmc out sub out aad out leave out shr shr repz hlt out mov (bad) out lret out fucomi sahf out stc out cld out xchg out cli out icebp out sahf out test fsubr out xchg out xchg out in cmc out popf out loop test in out lahf out fucomip mov fucomip loop aad mov ljmp out xchg mov nop out shr (bad) out (bad) out (bad) out xchg out jmp out lahf out in lock stos out (bad) out nop out (bad) out loopne out loop clc out fucomp call out jmp aam imul loope in jmp test call out repz jmp out out out hlt out cwtl out stc out stc out shr shr xchg xchg out (bad) sub out (bad) out (bad) clc out sub call out ret out xchg stos out ret out shr repz icebp out test enter mov (bad) out popf out fucomi test xchg out xlat out loopne fsubr lahf out sub out sub out (bad) out jecxz std out (bad) out mov out out mov (bad) out test hlt out shr out shr xchg out pushf out mov into out popf out (bad) out xchg out (bad) out cltd out lcall out shr stc out xchg loope sub out repz int cwtl out test mov leave out xchg out jecxz lcall out cld out imul xchg out aam jmp out imul (bad) sti out cwtl out fsubr lock cli out xlat out xchg out int3 out ret out into out (bad) out mov sahf out out mov mov test out xchg out loopne sub out shr xchg out stos out out out nop out lret out in pushf out (bad) out xchg out cmc out (bad) out repnz cld out ret out int3 out test pushf out in out xchg out shr out ljmp out imul out (bad) out jmp out out out (bad) out aam xchg mov fsubr shr xchg out xlat out in out std out ljmp out shr out hlt out xchg xchg out cli out sub shr out test sti out xchg hlt out jmp stos out leave out loope stos out int jmp shr xchg out (bad) mov mov fucomip out out imul (bad) out (bad) out icebp out xchg out loopne xchg out (bad) out enter int stc out fsubr in out stc out loopne mov test out out cmc out ret out stos out std out icebp out fsubrp ljmp out shr (bad) (bad) (bad) out shr xchg out ret out std out int iret out call out into out (bad) out ret out mov (bad) out int3 out in xlat out shr out repnz shr fsubr test out mov nop out in cwtl out out xchg out shr sti out shr fucomip ret out loopne in out lcall out sub jmp (bad) out sub out in out enter xchg out (bad) out mov leave out (bad) stos out repnz sti out cli out in repz shr (bad) out sahf out out out shr out in (bad) out out out lahf out jecxz test mov imul in out test lock loope (bad) out xchg out cld out cld out aad iret out repz test shr clc out (bad) out cli out fucomp aad test repz clc out jecxz sub out (bad) out cld out enter int3 out (bad) out call out ret out shr out call out repnz xchg out ljmp out fwait out lcall out aam out iret out xlat out shr icebp out mov (bad) out std out enter (bad) popf out (bad) out repz xchg out clc out lock popf out int in sub out fucomp (bad) out (bad) (bad) out (bad) out ljmp out stos out in mov repnz xchg out popf out aam sub out into out stos out fucomip (bad) out fwait out fucomp test out (bad) out ret out sub jecxz fsubr fwait out stos out test out stc out cmc out xchg call out xchg out stos out leave out sahf out jmp out (bad) cwtl out pushf out xlat out cltd out nop out (bad) shr out iret out (bad) out (bad) out int fucomp in test in out stos out out test (bad) out test lret out shr nop out out out into out shr out out (bad) out clc out lahf out (bad) out shr aad sti out xchg out cwtl out jecxz out int3 out fsubr cld out mov clc out (bad) out enter lret out lcall out nop out xchg out fsubrp leave out int3 out xchg out in out xchg out std out stc out (bad) out xchg out ljmp out loopne shr out lahf out lahf out out out (bad) out xchg jmp mov aad xchg shr out shr out xchg out (bad) out shr mov out out repnz (bad) out imul cwtl out fucomi (bad) lock imul test shr xchg out out sub out stc out pushf out enter loopne jmp out loope (bad) out test (bad) out fsubr xchg out shr ljmp out shr sahf out cld out in shr mov in xlat out std out sub xchg out hlt out fucomi icebp out cltd out shr out ret out lcall out shr out jmp out (bad) out cmc out (bad) out mov xchg out xchg out fsubr mov mov lahf out iret out xchg out stc out fwait out (bad) cld out xchg out lcall out jecxz out out in (bad) into out fsubr xchg leave out lret out in out out xlat out sub out xchg out imul shr aad mov shr ljmp out in fsubrp xchg out in xchg out pushf out loope int3 out jecxz (bad) out fsubrp (bad) out fsubrp loope aam mov imul iret out in xchg out test (bad) out xchg out shr std out xchg out mov xchg out call out sahf out sti out pushf out stos out (bad) out xchg out (bad) out mov sub out test fsubr out out stc out ret out jmp hlt out (bad) out sub out ret out out out fucomp nop out repnz imul lret out mov nop out lahf out clc out xchg shr shr test xchg out fucomip (bad) out (bad) out mov (bad) (bad) out leave out (bad) out sub mov ret out test out shr repnz sahf out lret out fucomp mov repnz (bad) out fwait out xchg out (bad) out out shr sahf out xchg xchg sub mov lcall out xchg out sub out mov (bad) out (bad) out shr fsubr xchg out mov int pushf out mov stos out fucomi cwtl out cltd out icebp out icebp out shr out clc out into out loopne enter cwtl out int3 out lahf out test mov enter loop shr out loop jmp out mov int ret out sub out xchg out fsubr sahf out stos out jmp out xchg out lcall out imul in imul fsubr (bad) out loope (bad) out fwait out sahf out mov (bad) (bad) out jmp leave out xchg out mov shr out sub xchg out pushf out hlt out out out xchg out jmp repz cwtl out sti out lcall out xchg out lahf out sub out leave out in pushf out call out imul mov stos out out out jecxz icebp out xchg mov shr std out xchg out (bad) out mov cld out call out (bad) out fucomip nop out test nop out stc out sub out into out (bad) out (bad) lret out test mov jmp out loopne stos out int3 out ljmp out xchg out (bad) out fsubrp hlt out imul fucomi test (bad) out popf out xchg out out xchg out fucomi into out in out jmp out mov (bad) out out mov test xlat out mov out hlt out ret out cld out lock fucomp imul mov popf out mov shr out out loope (bad) out stos out shr out lcall out loopne cli out ljmp out mov aad call out in out mov icebp out shr clc out test test (bad) out (bad) out xchg out in lahf out out nop out shr sub out sti out out out mov in out cltd out clc out sub out sub out aam lock sub loop aam pushf out xchg out (bad) out mov enter stos out lock cli out stc out in repnz xlat out loop (bad) out imul (bad) out shr out fucomp shr shr out (bad) out sub (bad) out jmp out hlt out aad (bad) out into out into out repnz (bad) out stos out (bad) out xchg out stc out stos out aam std out aam shr (bad) out stc out out pushf out repz xchg xchg out fwait out iret out out out in out test cltd out test in ret out xchg out icebp out (bad) out ret out fsubr enter std out cld out (bad) out cmc out ljmp out loopne fucomi in (bad) out lock loopne xchg out in int sub out out lahf out mov sti out sub out imul imul out out shr out int aad repnz fucomp cld out xlat out out out sahf out cmc out icebp out in lcall out ret out (bad) out call out shr out jmp clc out loop stos out xlat out hlt out enter xlat out ret out mov popf out pushf out lahf out xchg out mov clc out mov shr sti out in test sahf out xchg out sub out out int3 out sub out fucomi mov test int3 out shr mov xchg out (bad) out loope xchg out out out call out popf out lock mov (bad) (bad) out xchg out xchg (bad) out int3 out clc out xchg out jecxz shr (bad) jecxz sub out loope fsubr out out cltd out sub out ljmp out imul jecxz lret out fsubr fucomi shr (bad) out cwtl out stos out cld out fwait out test shr out fucomp int std out cwtl out mov in out iret out ret out enter in out jmp test out (bad) out popf out enter lcall out imul shr out cltd out (bad) out int (bad) out (bad) sahf out int3 out (bad) shr out mov xchg out ret out aad sub out fucomp shr pushf out test out out (bad) out jmp xchg out cwtl out sahf out lcall out xchg out fsubrp sub out enter xchg out sub out xchg call out sub xchg into out shr xchg out xchg out mov mov fsubr call out clc out shr out nop out (bad) out xchg out pushf out sub out into out cli out (bad) in out cli out loope mov stos out test out imul int3 out (bad) out shr repnz fucomip jmp (bad) out lahf out mov shr fucomi (bad) (bad) out xchg out fwait out xchg out (bad) out into out xchg ret out (bad) out fucomip iret out (bad) out ret out mov out out xlat out int out shr ret out repz fsubr fucomp stos out mov shr mov xchg out (bad) cltd out fucomi xchg out stos out in shr fsubr int3 out loope out out fwait out fsubr mov lcall out aam mov sub leave out icebp out xchg out shr hlt out lret out mov aad in sti out out cld out shr (bad) out shr lahf out shr out in out in clc out call out test out in out xchg jmp loop mov pushf out xlat out (bad) out (bad) out enter stos out xchg out stc out (bad) out fsubrp xlat out test (bad) out stc out in out sub std out leave out popf out test lret out out out xchg (bad) out mov (bad) int3 out hlt out mov aad (bad) out test xchg out sub (bad) out stc out imul into out (bad) aam xchg out (bad) out (bad) out out clc out repz loop xchg out (bad) iret out (bad) out in out loopne cltd out out out in sub out ljmp out imul xchg lret out xchg out (bad) out test out jmp out test in xchg out lock test nop out cwtl out int in out mov lcall out in out xchg out test out shr out int mov repnz icebp out cld out mov out out cli out hlt out xchg out in out sub out imul in xchg out cli out ret out mov sti out pushf out (bad) out clc out xchg stos out mov mov in out in out nop out ret out popf out shr lahf out aam mov xchg out mov imul cli out lahf out test fucomp xchg out (bad) out fsubr fucomi in out (bad) out sub out (bad) call out test aad xchg out into out loope repnz out out test out popf out stos out mov std out (bad) out shr test stc out fwait out pushf out xchg out xchg shr lcall out test fsubr lret out shr out xchg out xchg out mov out stos out jecxz mov nop out repz xchg out cmc out (bad) out fucomip stos out xchg out fwait out fucomi shr out xchg out loopne std out in mov sub out out sti out mov sahf out sub out cmc out stos out out out (bad) out cmc out loope iret out fsubrp fucomp fsubr xlat out test sahf out test icebp out cwtl out cld out sahf out xchg out test out lock out (bad) out fwait out lahf out shr test pushf out (bad) out jmp out xchg stc out leave out out loopne stos out imul xchg out mov sub out sub out sahf out fsubrp (bad) out lock lret out ljmp out ret out shr out xchg out fwait out out out jecxz enter (bad) out mov in ret out shr shr ljmp out hlt out xchg out popf out (bad) shr aad (bad) out nop out xchg in (bad) out fucomi cld out shr out in in out int3 out jmp lcall out sub shr sub out repnz ret out (bad) out (bad) (bad) out fucomip mov ljmp out test (bad) out loop cld out icebp out xchg fucomp (bad) out (bad) out sub out in cwtl out test test jecxz aam jmp (bad) out in out shr out out out (bad) out fucomip (bad) cli out aad call out fsubr cltd out test loopne fsubrp imul loope shr clc out mov in out out out (bad) out (bad) out mov lcall out icebp out iret out in out cmc out in out jmp out (bad) out xchg out mov lahf out stos out xchg out shr out in pushf out xchg out ret out (bad) out (bad) (bad) out iret out mov test fucomi aam shr out cmc out hlt out imul (bad) out loop xlat out loop test clc out fsubr std out imul mov clc out test out cwtl out sub (bad) out repz cltd out enter mov out (bad) out popf out shr out enter ret out mov out in out shr cmc out repnz lret out xchg out leave out xchg out fucomi fsubr clc out xchg out xchg out (bad) out jmp fucomp test ret out cwtl out fsubrp shr out stc out mov (bad) out mov sub out ljmp out (bad) out lock mov mov repz iret out ljmp out icebp out stos out (bad) out imul pushf out ret out sti out sub sub out fucomi (bad) out jmp out cli out test out lock xchg out xchg out jmp sub adc dec adc adc mov mov jne daa andb jmp pop inc xchg pop pop test gs repz movsl or into (bad) dec rolb les jns or repz movb insb inc push fucomp or xor jb dec cli fisubrl add add jle sahf dec (bad) fs mov push mov imul mov (bad) jmp xchg dec add mov (bad) mov enter dec push rorb insb sub std mov dec (bad) cs out je fsubl popa xlat das imul pusha sbb add add lods outsl inc stos mov push clc mov xchg xchg negb or xorl notl (bad) dec xchg cld adc arpl and cmc xchg scas sarb pop pop test pusha inc repnz movsl or into (bad) dec rolb les jnp dec shufps and inc mov add add aas mov sub sub inc loop adc and cli or lock call pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor push das in sub sti dec sbb std js lahf xchg cmp push add add add cs out je fsubl popa xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb stos sbb pop hlt xorl out add rclb fisubl and sub xchg mov mov pop test gs repz movsl or into popl add cmp imul arpl dec and inc fwait in adc mov sub cmp inc loop adc and cli or lock call pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor add sbb push das in sub sti dec sbb std js lahf xchg cmp push cs out je fsubl popa xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb mov adc adc cmp cld add arpl daa and sub xchg mov add add pop pop test gs repz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub cmp inc loop adc and cli or lock call pop pushf popf and adc pop fist stc add add jo push jb cwtl in xor jmp test xor push das in sub sti dec sbb std js lahf xchg cmp push cs out je fsubl popa xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb mov adc add add add add cmp cld add arpl daa and sub xchg mov mov enter inc repz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub cmp inc loop adc and cli or lock add add negb incb fstpl pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor push das in sub sti dec sbb std js lahf xchg cmp push cs out je fsubl popa xlat das imul push pusha push (bad) jno ret mov cmp add add mov jbe hlt sbb test xorb mov adc adc cmp cld add arpl daa and sub xchg mov mov enter inc repz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub add add push jp loop adc and cli or lock call pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor push das in sub sti dec sbb std js lahf xchg cmp push cs out je add add add data16 popa xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb mov adc adc cmp cld add arpl daa and sub xchg mov mov enter inc repz movsl or into (bad) dec rolb les jns add add add arpl dec and inc fwait in adc mov sub cmp inc loop adc and cli or lock call pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor push das in sub add sti dec sbb std js lahf xchg cmp push cs out je fsubl popa xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb mov adc adc cmp cld add arpl daa and sub xchg mov mov enter add add add cltd movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub cmp inc loop adc and cli or lock call pop pushf popf and adc pop fist stc push add push jb cwtl add add xor jmp test xor push das in sub sti dec sbb std js lahf xchg cmp push cs out je fsubl popa xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb mov adc adc cmp cld add add add fisubl and sub xchg mov mov enter inc repz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub cmp inc loop adc and cli or lock call add pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor push das in sub sti dec sbb std js lahf xchg cmp push cs out je fsubl popa xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb call xorb jne mov adc adc cmp cld add arpl daa and sub xchg mov mov enter inc repz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub cmp inc loop adc and cli or lock call pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor push das in sub sti dec sbb std js lahf xchg cmp push cs out je fsubl popa xlat das imul add pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb mov adc adc cmp cld add arpl daa and sub xchg mov mov enter inc repz movsl or into (bad) dec rolb les jns or repz add iret dec and inc fwait in adc mov sub cmp inc loop adc and cli or lock call pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor push das in sub sti dec sbb std js add cmp dec (bad) cs out je fsubl popa xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb mov adc adc cmp cld add arpl daa and sub xchg mov mov enter inc repz movsl or xchg lods icebp and into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub cmp inc loop adc and cli or lock call pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp add xchg xor push das in sub sti dec sbb std js lahf xchg cmp push cs out je fsubl popa xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb mov adc adc cmp cld add arpl daa and sub cmc xchg mov mov enter inc repz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub cmp inc loop adc and cli or lock call pop pushf popf and adc adc stc push add push jb cwtl in xor jmp test xor push das in sub sti dec sbb std js lahf xchg cmp push cs out je fsubl popa xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb add add mov adc adc cmp cld add arpl daa and sub xchg mov mov enter inc repz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub cmp inc loop adc and cli add lock call pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor push das in sub sti dec sbb std js lahf xchg cmp push cs out je fsubl popa xlat das imul push pusha push (bad) jno ret add add mov push clc mov jbe hlt sbb test xorb mov adc adc cmp cld add arpl daa and sub xchg mov mov enter inc repz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub cmp inc loop adc and cli or lock call pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor push das in sub sti dec sbb std js lahf xchg cmp push add (bad) cs out je fsubl popa xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb mov adc adc cmp cld add arpl daa and sub xchg mov mov enter inc repz movsl or into (bad) dec add add inc cmp imul arpl dec and inc fwait in adc mov sub cmp inc loop adc and cli or lock call pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor add push push das in sub sti dec sbb std js lahf xchg cmp push cs out je fsubl popa xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb mov adc adc cmp cld add arpl daa and sub xchg mov add add add add add mov inc repz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub cmp inc loop adc and cli or lock call pop pushf popf and adc pop fist stc push add jo push jb cwtl in xor jmp test xor push das in sub sti dec sbb std js lahf xchg cmp push cs out je fsubl popa xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb mov adc adc add cmp cld add arpl daa and sub xchg mov mov enter inc repz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub cmp inc loop adc and cli or lock negb incb fstpl pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor push das in sub sti dec sbb std js lahf xchg cmp push cs out je fsubl popa xlat das imul push pusha push (bad) jno ret mov cmp push add mov jbe hlt sbb test xorb mov adc adc cmp cld add arpl daa and sub xchg mov mov enter inc repz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov jle cmp add cmovp inc rcr sub test adc stos das jmp aaa (bad) xchg imul add xchg sub xchg cmp sbb fbld rclb xlat ss pop pusha cmp in sbb shlb mov jo lcall dec pavgb (bad) shlb and xor push pusha push push xor repnz test imul leave mov sbb inc sub adc xor or ja jnp pop mov xchg mov fs push fsubrl ret insl xchg lods fwait and test cli dec add add push (bad) inc or mov adc aaa pop daa mov dec or inc outsl inc stc pop je cmc mov add addr16 test sbb push pushf push out push aad cmp fcmovbe lcall push jb pop loopne lcall cmc adc and jmp sub cli add add rorb xchg cmp fcoml cmp sub out sub jbe ja test repnz fwait jecxz pusha dec cs (bad) jbe nopl mov xorl jl fnstcw mov shll add jg sub ret adc jne leave lahf jo int3 jge rorl xchg cld jl and addr16 cmpsb inc cmp cmpsl cld dec add cmp lds into ficom jbe xor jbe xor mov dec bound (bad) notl orl stos int lcall push (bad) adc ljmp movsb stos test cwtl in add add test mov loop dec mulb cmp sti movsb adc loop push mov push or rorb pop push lds movsb ds mov (bad) jno or mov push jno sub adc pop call lock cmp jle movb inc aas add lahf sub insl add hlt sbb fidivrl popf and mov test cltd sub inc repnz rorl ret js jns xchg or and jg fbld ffreep mov (bad) lret mov adc sub clc aad scas jmp inc adc ss jge adc lds (bad) pop pushf adc inc aam mov jns push mov xchg jle popa fild jmp test imul inc jnp cli dec sbb adc mov cmp or das jle stos js mov add jae out or jno pop lods mov jno call push (bad) mov add push xorb jmp add sub jg ss jmp je adc int or mov pop pop sub xor repz jg cli and dec dec inc lea or xor ror push aas lahf ja call inc sbb or repz and outsl mov xchg int add add jmp scas cmc and push fidivl mov fs jns jecxz inc mov pop (bad) cmp ficomp sar or inc loopne stc mov push in imul mov push nop sub add and push stc std sbb xchg (bad) cs outsl dec cwtl lcall insl faddl (bad) and mov imul add push dec popf hlt sbb aam xchg ss and shl add mov mov mov or push gs sbb aaa xchg cli push int3 es dec dec jbe cmpsl outsl mov push mov lea addl popf movsb dec and gs aas adc add adc inc add and jno xor icebp jno inc xor lea pop add cmpsb in pushf popf jne fdivr mov sbb or pop bound out arpl idivb mov test jmp ret insb mov sub data16 loop sub fs pop popa xchg negb push mov sbb inc jmp xorl testl add out (bad) push and mov inc mov xor xchg dec add add add push stos inc lret inc push xorl cld adc arpl cs fwait mov push jge leave jl xor push jp es (bad) (bad) ss fldcw stos cli push inc scas loopne iret xchg or jo add idiv push aam fild pusha rcrb push jb enter xchg outsl cli mov add add fcomi jae das (bad) stc sub jbe pusha fildl xchg (bad) std xchg (bad) hlt mov (bad) cld sub lods sbb shll cmp ds dec xor pop push cmp mov movsb decb sbb loop iret jle pop jbe (bad) jle adc pop ret push mov int mov into pop std add add mov nop shrb push inc aaa into dec add push call push or sbb jno push xor ljmp popa xor rorb mov mov cld andl daa out push pop lods repz add pop shl pop adc repz xor sbb fsts cwtl (bad) fidivl sbb or mov push rcrb inc add loope jl out pop adc sti dec fnstenv std ja push push cmp dec (bad) mov (bad) jmp sbb adc push xchg cld repz loop aad (bad) mov add xchg jns sar sub rcrb adc add je ret lods in push or push mov enter fstl int3 int jecxz clc cltd movsl pop jg popf and push (bad) jp imul pushf xor in dec adc mov fistp cmp mov pop xchg out mov stos cli data16 add add out cmpsb insl mov cmp leave std movsb stos in ja mov jbe es jo rorb pop adc fidivrl fistpl pop jnp sti mov xchg jne scas mov dec in xorl cmp and arpl fiaddl add mov fildl test push mov enter mov or adc cmp adc bound inc inc cmc push sti or rcl fs pop xchg cmp leave enter xor lock int jns and into jmp imul cmpsb lods test mov fs lret or jg add ds out xor pop or lret fldcw decl icebp add mov (bad) loop,pn sub adc push mov pop mov fistp fildll fldl icebp jge mov pop push push das mov mov mov lahf xchg sti gs xchg daa fwait add sub in arpl out sub repz jb adc (bad) jno pop nop insb std ss ds stos add call jnp jle cmp cmpsb inc push rcl ret std add cmpsl push pop out cmpsb into lods lea aas xor loop or push cli repnz addr16 xchg lods jb mov add inc cmp movl xor lods fwait aas sbb sub cld inc test jb pop push cltd push push jns adc stos xchg int jbe call sbb rcl sbb adc inc jle or add in sbb in add scas arpl (bad) pop sbb add add push sbb xchg dec pop cmp adc leave sbb cmp or insl mov pop fdivr push das imul jle cli mov cmp addr16 mov sbb sahf sbb jmp xlat popf jo mov or dec push jae jnp dec mov and sub sbb add roll add add lret inc fwait ja or adc or xchg stos add mov xor pushf mov shl pop xor mov pusha adc push xor push push mov lock xor mov mov bound and jns xlat add and pushf push jae add fsub iret adc mov stc add icebp or or lret (bad) mov sbb test dec sbb popa xor push divb in addr16 (bad) adc das push pusha aam add ss stos mov dec jno (bad) std sbb test stc jmp andl add add inc push sti add inc fucom inc mov mov mov mov cmc movsb or inc cwtl dec (bad) into or ret orl mov push ds jle xchg outsl test cld adc test adc sarl cmp dec mov xchg inc outsl or add add inc xor dec je fnstenv add stc push pmuludq push xor nop add inc mov push push jl subl sbb std mov add add push sub mov (bad) popa test pusha add jne ret cmp push clc add add test pop test nop jne mov dec adc dec xchg cld add call out mov call xchg add or inc inc repz int iret (bad) iret push push popa fwait aaa loop inc pop add xor inc fwait popa mov xor cmp les movups push mov addr16 stos cli or jmp or popf into leave mov aas pushf popf mov push addps pop stc pusha shrb xchg mov xchg int3 xor jmp add mov push and lock imul lods sub ds (bad) cld jmp add add or out mov rolb add add add add popa xlat das imul xorb jno ret mov test mov or dec out dec mov aam mov notl mov lahf stos sub and push in inc iret cmp xchg aaa es cmp repz arpl mov fsubrs roll or or fisttp je pushf xor inc xchg out sbb sub clc cmp inc fistpl sarl cmp rcll call pop push jne sub and sbb jns xor es xor rcll sub jmp imul cld sub sbb clc cmp jmp add cmp ror mov (bad) das call pop inc in ret mov dec dec (bad) mov push jne mov mov cmpb inc xchg loope add and les jge mov sarl jbe test add add test leave sub frstor addr16 inc mov sub xchg or cmp push mov out aad sub dec sub (bad) or cmp push add xchg fdiv inc xor into dec xor (bad) repz subb ficom xlat out cli adc out and int3 jecxz push (bad) ljmp out add mov popa (bad) cld xchg imul out das sub imul and in and mov loope sti pop std pop outsl xor mov (bad) test outsl aaa (bad) ficomp push mov (bad) inc jb jne and les add add add jle mov rolb cmp pop pop pop test cmpsb push dec popf movsl or or lds insb mov inc cmp loope inc xlat cli xor cmp loop stc (bad) mov call dec cmpsb add inc ljmp cmc adc add add add add jbe xchg out scas clc push add or xlat mov push leave les xchg xor popf pop cmc sbb jnp dec sbb jl pop sahf xchg cmp mov dec (bad) inc shr out je pop fistpll sahf sub pusha loop fsubrs mov and in add or mov add sbb data16 or adc xor push cmp xchg ret dec sbb cmp lods icebp xchg nop mov arpl cmc xor test inc ljmp int3 mov sbb into (bad) and jbe aam mov cs mov xchg icebp daa adc lock mov jo add add add movsb xchg lods test stos aas xchg lock into in rorl fldl das or xchg inc mov mov mov mov mov dec (bad) jge jno sub es push (bad) push add cmp push das in out ljmp mov jge sbb mov jno dec cmc in xchg or sub out cmp jno mov clc popa ds xchg scas push mov mov xchg mov imul pop test and mov inc cs (bad) into add jb cmp mov cmpsb ret popf lret out adc sub aas fdiv imul adc leave adc and inc pop stos sahf xchg or cwtl xchg mov inc addr16 adc mov sti stos enter out outsb dec cmp cld adc sbb and jmp mov insb int3 jecxz inc (bad) pop sub aas inc xchg jae cmc (bad) aas outsb (bad) cld shrl movsl mov mov cmp popa xlat cmpsb fsubrs cmp dec in sbb pop pop mov int stc mov inc aas stos (bad) out aas sbb cmc sbb mov in shll xorl aam xchg xor push inc or (bad) cmp addr16 test adc add add lods leave xor test dec call jbe arpl cmp out dec adc mov sub cmpsb dec jo loop stc sub xchg mov stos stos and mov (bad) dec fiaddl fstpl pop or mov xchg pop stc push mov adc mov add cs addr16 xchg pop into jg dec ficoml (bad) decl stos mov push leave jge inc imul in xchg out lret aam xchg sahf (bad) shl jne stc out lret cli ss ss stos roll xlat jbe hlt inc arpl lods and fs jl adc xchg cld add push mov jns sbb add add and sub (bad) icebp jne mov shlb add ficomp dec cmpsl jmp icebp jle xor cmp imul outsb scas stos adc js imul lods ss je xchg (bad) enter out (bad) add add das inc lret mov xchg jb cwtl in repnz loop add mov lret (bad) xor pop loop in sub std push mov imul and mov cmp and jp ret fadds inc push fabs cmp fcoms mov outsl in jb lock lds lds fidivr arpl fimull lea cmc sti mov in loop or mov sbb stos xorl adc loop jno or cs mov dec sbb mov or mov xchg push call nop add jbe mov (bad) call cmpsl popf popf and dec mov je adc stos pop or fwait lods add mov add pop bound jb js adc cwtl push scas test jg sbb std cs std cmp ret rcll adc mov adc jecxz cwtl cmp add add add and es jmp dec add sar ret in andl out (bad) or mov fwait ja or jo sub adc out insb push push jne shrb rolb push test jb add repz xchg mov mov add ffreep leave sub mov push mov cmp das push icebp out cmp es (bad) fs pop pop daa sbb pop sbb xchg (bad) cmc int3 test mov arpl test dec ss mov or jg es nop cld gs cmp (bad) or add and in rclb test xor inc stos xor push xchg hlt sbb cmp in popa dec dec aaa dec mov pop push loopne (bad) xchg mov or mov jmp or orb ret mov and outsl inc repz repz push icebp and into in test rorb mov inc insb and mov push and xor mov xor mov push dec loop cwtl (bad) push lahf mov xchg push cli or lock mov std dec lret adc addl add jge mov rcll cwtl push pusha ret inc mov popf test jg push sub mov js int3 std je sbb jl,pn mov cmp movsb mov loopne in mov int3 ret fucompp imul mov jbe sbb jp insl in cmpsl (bad) data16 cmp test pop stc jb lds dec (bad) cmp test jmp push push imul add aam enter inc repz es lods (bad) mov adcl xchg (bad) popf xor jl out rcrb aam daa jb xlat push or cmpsl mov cmpsb or lock repz xchg pop das mov pushf sti stos sbb notb pop stc push (bad) lock xor jb lcall outsb in fidivrl jle push inc in xchg sbb sahf pop add add out je push inc movsl out out mov cltd fldenv out sub test les test jae and orl add xchg cld outsb xor dec push cltd stos in inc sub roll push pushl adc popf inc repz bnd or jae dec je orb fs mov mov push sbb loopne adc out adc imul cmpsl pop jnp dec (bad) cmp push add sahf cltd inc ljmp add add cmc inc xor into dec add xor lcall sbb lcall jo icebp fwait (bad) pop adc push daa mov jp jb shl flds sub sbb jecxz jl mov movsl test mov inc and popa xlat (bad) repz push jecxz xor outsb adc cmp pop or add adc stos movsb in test cmp rcr mov push sbb dec xchg jg cmp fisttp sub xchg or mov jle movsb or lods cmpsl int3 cltd xchg fwait aaa pop jnp or scas mov inc adc adc jmp jg xchg add sub js xor pop xchg test jp adc movsb fstpt jno mov lahf popf and jae push jp xlat lcall stos lea pop test add inc aam icebp mov xor cmp int std adc pop shl push dec or out je cltd mov add das lods jne imul fucomi push inc insb negb xor cli (bad) mov js call adc adc out or push add ud2 xchg add arpl sub xor push movsl mov push stc sahf sub aaa pusha in inc mov bound stc into std dec adc inc or add add and pop popa xor sub call push mov push xchg jb out (bad) out fsts inc mov fnstenv dec dec call lods pop mov ds mov and jb fstl push nop ret fldenv repz js and pop call add add arpl pop mov inc xlat adc pushf pop xchg or inc imul (bad) mov inc (bad) mov add pop repz jecxz aam push cmp dec pop in das mov insb jno pop cwtl mov dec jg inc sub shr fs rcr roll dec xor test adc mov in int lods xchg inc xchg in cwtl test or mov ret push cmp out cs out pop je pop das xchg push sar pop adc cmp sub or pop adc dec mov ljmp call fildll xor add add out and pop out jmp and push js lret mov push lock jle push dec sub jle movsl dec std lahf scas xchg cltd aad mov mov ret dec push test pusha or (bad) test and lods dec pop inc xchg mov push xchg dec pushf sbb add iret aam mov cmp out cwtl mov xchg sahf sbb inc jle int push or dec ror mov push leave (bad) xchg inc stos scas (bad) iret lret in les cmp push jp push sbb sbb mov push push stos push incl jnp addb push add mov movsb inc or and push add mov mov jl mov pop xor popa dec neg ficompl stc test pushf dec push xchg imull add jecxz fldt sub push inc movsl fildll jecxz roll inc stos cmp repz jne movsb dec adc add xchg cwtl jg imul out add mov rorb and aam xor cwtl xor ja cmp adc bound jne fdivrs js xchg dec loop ret sub (bad) test (bad) addr16 mov jb xlat push or cmpsl outsb add add lods mov lock cs gs inc adc pop call xor frstor repnz add dec dec (bad) xor xor push (bad) push bound test xchg mov sbb jnp movsb pop insb adc daa sbb mov or das sub cwtl push frstor popa pop push imul add es xorl pop clc mov sahf jge hlt mov ss gs sub shrb cmpsl inc pop pop fwait in cmp xchg xor outsl mov aaa sbb popa push lods ret pop popa movsb scas pusha popf fld cmpsl dec mov icebp mov lea sub add mov add add adc out xor mov pop sub sub scas ret sbb xchg jecxz iret insb cs call icebp movsl add sti test (bad) pop fbld push fadds push jb mov imul xchg xor inc cmpsb mov sti dec lcall cmp add push sbb mov jae fwait pop pop bound int3 popa xlat mov inc jmp cmp ljmp pushf pop call xorb mov cmp push inc push out push fs fdivp xchg mov sbb inc aaa pusha xchg cmp adc outsb pushf lods icebp int3 aaa and push test sub push aad imul (bad) mov jno enter insb loope mov dec imul adc or lock xchg jnp incb xor inc push pop mov push push std scas fnstcw cwtl mov add push add add add es jbe,pn jl mov mov (bad) sti enter adc cmc xchg (bad) aam orl mov sub inc pop stos mov push jmp nop cli repz jecxz push (bad) mov pop js mov jmp or cmc scas mov daa jne mov ds dec (bad) mov rcll add add cmp mov sub ljmp or dec decl inc gs add dec popa and inc sbb arpl incb xsha1 cmpsb mov jecxz outsb sub bnd hlt fcoms sti dec mov push pushf popf test cmp out jns add fisub xchg mov dec push in push into mov add xchg fstps sub addr16 sbb ja repz cmp cmpl loope pop fsubl pop xchg and and insl mov lea mov (bad) dec lret sti cwtl (bad) test pop cmc cmp mov insb lds out and es inc aas inc in dec imul cmpsb push xchg nop sahf sub cwtl sub ffree pop cmp or push std or ss movsl and xor mov lods cmovns adc neg adc push sbb loop add push repnz (bad) mov into stc adc add dec mov bound jo lods shrl xchg insb int3 loop xchg test (bad) lock das cmpsb popf rcr dec pop das retw cmp enter mov cld xchg mov mov out je and das imul call mov cmpl adc pop xor stc mov lcall in xor test clc xchg outsl les lcall (bad) leave mov fcmovbe xlat (bad) xor or cmp cltd cmpsb inc jo mov pop jb jo cmpsb xor cs fcmovb test aaa outsl dec mov mov add add call sbb out arpl ret push cli stos cli (bad) (bad) call cmc fsubrs std stos or loopne sbb inc push call sbb pushf mov push jo lcall pushf mov enter repz xlat bound outsb push es dec lret jp pop xchg or add cmp cmc out jl cltd jbe bound jae,pn pushf pop pusha push shrl es sub stos pop jbe and push dec mov sub (bad) lret add xor aam mov pop pop js add sbb pop out lock xchg and mov (bad) test add xchg push or fmull xor xor push inc jo je and cmp aaa dec and xchg mov insl and repnz cltd clc inc addr16 lods stos mov push pushf push out push aad sbb mov jmp sbb outsb push sbb xor bound inc jecxz lds mov je mov add add mov js fimull int3 or sub out cld ret sbb (bad) movsb pop push mov adc jecxz cmp fidivr ja in insb in jecxz mov je cmp out cmc stos add (bad) add shrb call xor pop and fdiv push call pop sbb jne fs ffree xchg lods rorb dec jbe and sbb insb sbb aam push cld push xchg mov lods jbe scas ja icebp mov addr16 fstps pop test inc ja inc lcall lods add repnz lret add or (bad) in incl jns mov xor jbe xchg or (bad) aas add jnp mov mov hlt sub arpl mov sub mov fldenv jbe cmpsl hlt and insb outsl in and xchg add add adc pusha bound push push frstor roll or cmp test inc push push lahf inc mov adc aaa or leave lea cltd pop inc or and cmpl aam pop ljmp xchg mov sbb jge cmp or lods inc xor pop pop aas enter push xchg pop mov je push (bad) fildll mov popf outsl cli jmp xchg ja mov loope inc loop ret cli dec xchg mov xchg pusha (bad) insb jmp imul add xor sbb inc data16 das imul mov stos jno ret jecxz aad pop mov ds dec add cld hlt jbe xlat cmp loope cmp adc lods xorl cld outsb xor push push mov sbb mov aaa pop and lret scas or es mov popa cmp frstor add jl arpl sbb pop push (bad) push inc notl add add mov jecxz push or mov xchg mov ficomp movsl aaa inc xlat repnz fwait mov aam lods (bad) xor mov sbb mov fisubrl hlt pop ret imul ds mov cmp dec scas jl sti push fldt stos mov pop jg xor in sbb and push pusha in inc stc pop xchg push stc mov add xlat popf xor mov pop adc sbb icebp sub xor jmp push push imul push and push shlb shlb add int cmp xor jno mov add and dec jae push int3 imul jnp add imul fucomp mov btc mov rcrb pushf adc inc rcr lcall movsl xchg pop inc adc mov not insl adc fwait push and inc (bad) lock dec jbe stos mov insl add sbb addb and adc imul out test mov cmpsl divb xchg (bad) mov sbb cmp mov fimull cltd and daa roll imul xor daa and jle xchg mov jmp clc fldl loop mov add add jg xchg lods jp addb fwait inc cmp or data16 xor fild adc cmp ror sub add mov xchg mov jecxz outsb mov sbb adc movsb pop push inc arpl pop pop pop pop dec dec inc sti test mov repz push (bad) fcmovnu adc movsl popf add adc out sub (bad) or adc das retw pushl loope add add and in mov (bad) popa push jmp (bad) cld sbb clc cwtl cmp or xchg mov mov imul sbb test xor pop sub add and stos dec imul pop sub inc cld sbb jb jo (bad) dec rorb and jns mov lret test rep dec xchg and inc adc shrb xor aaa xlat mov loop inc cmp cld mov outsb scas cli ja (bad) or arpl adc push popf popf scas add add minps aad inc mov stc push shlb rcrb mov mov arpl jecxz cs jbe (bad) sti movb repz sub (bad) enter sbb xchg lahf add jmp sbb pop or jb sbb movsl test add add insb lret jle push pop pop inc jg xchg lds and mov scas (bad) adc scas or cs jmp push ljmp lds mov mov scas addl jo (bad) dec loope lret mov shl ret push test push (bad) lret in neg pop jno add inc int3 mov sbb jg cmpsb pop add addr16 into dec or rorb stc fmuls adc aaa pop (bad) (bad) mov imul mov in (bad) mov mov out pop xor pop and or push jl out ja mov inc gs das imul test mov sub and push mov (bad) faddl jl les lods jp or adc les out js xchg (bad) xor sbb or cltd cs lahf es scas fstp out (bad) les xchg xchg insl hlt (bad) cmc fisttp ret iret sbb add in jnp cmp (bad) leave sub add inc scas (bad) jecxz push or mov ljmp es iret fcompl or jb inc sbb fdivr fwait shr xor mov repz mov imul je pop dec fldcw repz arpl sti ja pusha mov (bad) shll jl cmp (bad) pop adc jne xor cmp mov mov or mov dec add mov xchg fldt popf lea outsb add fimull mov fmuls xchg imul mov inc xor sub add fistp dec in cli xchg jo jno insb push mov push sub mov addr16 test mov dec xorl pop dec sbb xchg inc imul cmp and dec std cmc fistpl or sub mov and add test mov dec lods xorb jecxz push cs outsb lret pop xchg data16 popa test pusha pop inc test ret mov inc push mov (bad) cmc jmp test andb pop (bad) jmp xchg jae sbb push or lea (bad) in inc sbb inc repz imulb jb test cmp pop insb sub inc xchg dec into sub adc mov shl dec adc mov je xor dec mov je call ds xor out clc add mov or aad adc pop add cmp stc mov jo xor pop mov mov ja push push (bad) sti in sub aas imul mov adc lret push in cmpsl sbb mov cmp and or mull or jae pop cmp out imul cmpsb add add jg adc cmp adc incl lods inc add sub push lahf outsb in ret clc leave pop popa movsb scas pusha dec arpl rolb dec sub repnz fwait popf into dec and out or leave jnp mov (bad) mov xchg mov xor and add iret lock push and arpl pop mov adc inc je movsb and jbe cwtl popa jo xor in daa push test repz mov sbb (bad) pop mov push cmp cmp (bad) mov jecxz mov add or into mov adc (bad) pop xchg xor loope pop addr16 jae adc mov add inc fs (bad) mov stc lahf (bad) xor js,pn fisttpl xchg loopne enter mov push and outsb leave jg loopne mov sub or push inc pop mov lcall add add jno push push push inc and out mov push push lock add cmpsb (bad) gs mov lds mov pop mov fcoms and and pop loope cmp lock fimull sbb aad lods test dec jne sub xchg push ja add add add add sub push pop cmp repz cmp dec loope mov pop loopne cs and nop insl outsl adc pop andl cmp cmp mov or insb std sbb fsubr xchg mov mov xchg mov sub stos mov in and into cli inc pop adc dec add add add add mov test stc out cmp outsl xor cmp xchg enter loop data16 xchg loop cmp repnz int mov cwtl adc push aad xchg jo test sbbl rcll stc push jne jo in adc iret pop sub cmp xchg inc adc pop incl add pop sub cmp adc in dec icebp cmpsb loop jne mov imul ljmp pop sbb add out jmp cld fnstsw jg sbb jno pop push loopne inc xchg out sbb cmp push in inc or sbb pop mov leave (bad) das sbb scas add add xor xchg adc lods sub cmpsl int3 icebp mov sub loope lea (bad) cmp fdivl fisttpll add xorl loope (bad) in mov insl mov stc mov sarb xor pop pushf ljmp add negb adc add add sbb ja and js mov std xor sarb inc sub xchg jle pop ror rolb sbb lahf jns add jb addr16 popa test pop (bad) jno mov (bad) sbb push mov jne hlt sbb add andl mov add xor push frstor xchg dec pop test pop pop popf sub xchg dec loopne xchg lods pop rcl mov push ja scas lea dec adc jle mov cmp jp mov push in lret fldcw (bad) xor xor mov add add loopne into dec inc std loopne and mov push add pop movsl jb sbb xor in or nopl inc inc in dec inc (bad) sti rcrb cmc mov (bad) cld cmp lret cs sub stc lret xor dec in rcll test mov inc xor out mov and (bad) movsl xchg jge xchg nop cwtl ror aam (bad) jno sub mov push mov jae mov sbb jne push sti sub roll cltd frstor or sbb push push sahf mov mov jmp loope push push add cmp mov bound pop icebp stos imul dec sbb pop enter cltd or loopne pop mov je (bad) pushf std lret inc fstps add nop jg sub sahf mov inc push inc dec das pushf cltd and loopne cmc sub movsl xchg movsb repz inc aad stos pop stos (bad) mov orl mov movsl popf out addr16 and push or lds cli shl inc xchg ret in and or pop out ds jbe shll mov fwait jl and dec push push (bad) fidiv cli test (bad) int mov pusha fnstenv inc jae jle,pn and movsb jne sti dec pop xor inc nop mov mov sti or int3 rcll stos xchg pop sub out and jae xchg add lea dec es scas jp push test mov jmp xor and sti sbb pop push addr16 push add in loop sub or or sub mov push adc jbe lret loopne add mov (bad) repnz adc add out js push add mov rorb movsb aaa add pop jbe cmp outsl out add movsl add sbb push jle cmp jecxz cmp push xchg lret leave andl xchg add pushf sub push (bad) movsb jne sti dec pop xor std pop lret jge mov cmp jle xchg pusha (bad) dec adc rcrl imul lock mov push stos sub jns repz lcall xor sbb not sub mov hlt outsl stos lea fwait cli add add cmc mov mov insb sbb repnz repz loopne mov out cltd add sbb pop and sahf jl aad mov fsubrs ljmp jmp jb dec jne sti add pushf xchg pop outsl add mov push cmp push inc (bad) popa adc cmp inc scas cs add xchg dec es inc aas inc pop enter pop sub jecxz xor pop push jg popl inc push mov or cmp jle out in je xor (bad) fdivs jge sbb fdivrp test loopne test mov pop movsl in sub add (bad) sub sbb pop sub call adc in in sub orl insb push arpl fdivl je test out (bad) mov xchg lods dec or and pop sbb loop sub inc sub (bad) mov (bad) call repnz jecxz add jle add xor inc mov in jno aas popf lds inc jecxz (bad) or inc mov insl mov (bad) clc ljmp xor movsl test push lahf (bad) cmp mov negb ret inc repz or push aaa loop pop cmp popa test sbb stos test fisubrl xchg mov inc arpl or push movsb jae (bad) sbb mov es pushf adc jno cmc xchg lods adc push (bad) jp (bad) jmp push pop lods jl xchg lods imul cmp pop mov addr16 and aas jmp popa jb fcoms add jne cmp mov movb int in icebp addr16 aaa mov dec pop mov pop add and mov push subb jne mov insb add pusha mov popa xor mov enter or sub mov les adc cld cmp xchg add lahf fs dec mov jnp pop push sbb pop es loopne cmpsb fcomip xor stos mov sti ret imul add jle daa add jo repnz xchg cwtl ss xor adc dec push arpl fcoml je add out ja add insb dec ja add mov iret jnp pop out addr16 pop lahf jecxz aam cmp movsb decl and mov dec push xchg jecxz and mov jle std and mov sbb push mov lret jo ljmp sub stc test xchg pop fcomps sub jmp ljmp lahf imul add add lgs aas adc lea push jae mov xchg fs dec mov jnp in sub imul les testb lods xchg dec insl into movsb (bad) fistl jne xor fs cmp daa jge adc add lock push pop adc shrb push dec lcall add and (bad) or sub addl (bad) cmp (bad) imulb scas xchg cmp jmp mov shrb fidivr fisttp clc adc nop cwtl or cmc scas cltd (bad) adc out clc ja nop jne ss push push subb jne push mov add pop xlat push nop jmp ljmp xor mov jo pop push ss nop xor popl pusha inc sbb dec cwtl outsl mov add jle in ss add mov icebp out loope lahf les mov ljmp sahf stos sbb xchg out fildl add add push js pop dec sete mov lahf outsl cli popa xor xchg mov xchg add pop insb xor fwait add dec add and imul mov (bad) call sarl daa rol cmp repnz test mov popf lea (bad) mov mov add outsb ja popa dec dec sbb test call jecxz (bad) jbe mov insb mov sub jmp ljmp xor mov jo push sub or xor cmp xchg inc sub xchg scas xchg (bad) lods cli cmp pop or fstpt popl add dec lahf jmp repnz mov jecxz bound dec fistpl cwtl dec xchg fwait hlt stos adc sbb push sub ljmp or out mov add dec mov aad sahf pop mov insl outsl jg test cli jmp cmp add ret or imul or add es notl gs push mov mov jle push mov into (bad) fdivr hlt out adc jmp enter push jae lods int3 add mov jno int inc sbb repz or (bad) mov data16 imul lock push and jne es int insb rcl jle ljmp stc xchg enter push push xchg inc jae ficompl test sbb movsl loope or into out xchg enter jmp or test mov jb cmp ret sbb mov jnp fstl pushl mov inc add sub dec cmp lret sbb sti jg nop in ds and out cmp cmp inc into cmp mov ret cmp xchg jnp xlat inc (bad) mov popf clc pop mov jp or inc insl dec adc mov ret jg push repz cmp xor je xor stc ljmp loopne mov lcall xor mov jl fstpl push stos sbb sbb push inc stc xchg mov (bad) and inc (bad) (bad) popf in ds and sbb sub in outsb cmp jmp pop lret test out je out cmpsb scas out (bad) das imul cmp cmc add xchg jge sub test xor mov inc (bad) sbb jno int3 pushf mov dec mov push lret cmpsb orl nop sbb add push xchg and inc movsl pop loopne lcall dec adc int3 or xchg and sbb in pushf addr16 gs pop outsb push sub dec xchg cmp es imul xchg negl mov bound int3 and xchg aad adc push popa and add sbb pop pop popa push push mov mov inc dec jo jecxz mov push repnz js fwait or outsl sbb ret out sbb push lods imul lea dec inc mov cmp dec loope clc leave mov in pop shlb jb addl jo adc decb mov add mov repnz into pusha icebp mov lahf jmp test ret cmpsl dec enter jl jl int3 inc mov lds repnz js xlat mov push inc push gs sub pop adc pop inc loope outsl mov in push movsb push inc xor scas dec pop or push test add add pop shrb (bad) fiaddl repz aad (bad) adc aaa push inc dec or ja dec pushf insb xor out stos jo xchg arpl das mov cltd mov pop lock out (bad) fsubr (bad) cmp sub cmp dec fisubr iret dec fiadd cld imul (bad) bswap and adc cli adc (bad) leave and fnstcw add fsts mov jp mov fistpll mov (bad) xor or xor lret lret cmp nop negb lds stos or add add push cmpsb sub pop insl stc loop sahf int out mov add sub sbb int xchg sbb jnp sar cmp adc shlb lds jecxz xchg push lahf loopew rorb jge,pn mov pushf mov fs pop or aam add iret push add cmp pop sbb add cli clc stc dec dec xchg sti cmc pop jl sub add sub test and mov adc std inc rclb cmovs ret xor inc pusha loope mov xchg lcall jmp cs in push xchg add lods (bad) add or dec test into shl int cmp cltd mov mov jmp pop add es leave and push popf in jnp shrl movsb imul dec pop xchg rcr jns push lods mov es pop in jmp add adcb sbbl icebp aas and loop add add inc dec xchg loopne cmp xor cmp out (bad) enter sub xchg mov into add (bad) fbstp (bad) dec inc addl jg jle add push or sub lds int fnstcw push std adc insb pusha mov sub int3 ljmp add mov fbld lahf cmp jns shlb jae bnd decl jae cmpsl cmp xchg lahf mov and cmp bound pop sbb fdivrl ljmp ror pop call in jmp imul (bad) stos pop push pop icebp push cmp hlt or push push (bad) xor push dec lcall cmp (bad) fidivrl sti rorl (bad) mov pusha mov movsl movsl loop (bad) int3 out (bad) jne ficomp sub (bad) lret (bad) or cltd mov out fldt cmpb js pop or (bad) cmp xchg faddl add int mov pusha loope mov xchg jne (bad) into pop test ds jnp add cmc ljmp push enter sarb or push out or push ror out popl and mov inc xor xchg lret xchg mov add add cltd mov aaa arpl fimull mov gs jmp adc xor push das addr16 jae inc mov ds pop mov jb lods jae addr16 cmpsb mov adc call sub fmuls hlt add scas (bad) stc outsl mov mov popf mov cmc add mov fistpll adc insl pop adc or rclb negb (bad) int3 cmp add mov (bad) and inc lahf fsub sbb jmp sub add push test repz ret les xor daa inc xlat mov jbe adc xor ror out add add addr16 cwtl jge out in (bad) or xor jno add (bad) fisub cmp inc imul sub aas imul inc mov aas sub dec add jno iret js pop out addr16 out mov out outsl inc ds sub add lahf mov xchg pop rol add xor push out call mov inc mov leave jg push mov outsl mov out mov mov loope sbb fisubrl dec pop outsl pusha pop js clc leave sbb add stos insb cmp pop dec lock cmc or fsubl xchg dec mov add xchg or inc jmp cs inc mov sub sbb sbb pushf pop or repz xchg arpl adc xchg add cltd fstpt xlat (bad) repz call mov mov jge mov cmp popf xchg pop ljmp cmp scas mov ss add add adc pop dec mov lret push mov cmp imul test sar (bad) inc push ret jecxz shr jg mov insl in mov push mov push xor adc cli dec ret jno es mov jbe xlat cmpsb sub sbb pop ljmp (bad) jno or cmc xchg xor add xchg adcl mov and movsl push or mov test cwtl mov outsb std cld leave xlat jno push xchg leave outsl shld add popa push (bad) fs mov jle adc stc fimul or fs lahf outsl cli add mov inc dec adc add sbb inc (bad) adc jnp stos jnp stos js cli pusha push jmp add dec bt adc mov xor lock xlat jg movsl sar lahf scas dec xor xchg cmp dec mov fdivl adc inc push loop js jle push fcmovnu inc xchg mov push hlt push fcmovb lcall xor fldl add add jo pop dec pop test add or sub mov into (bad) sbb outsb fadd imul pop mov icebp mov xlat mov sub cld pop sub mov fidivrl jg aam call imull pop ja scas enter out (bad) mov mov sub xchg jp jo out bound shl inc push push sub push cmp push sub lods adc es sti mov insl (bad) push mov out je sbb mov std imul ret add push push insb cmc cmc push clc mov sahf insl stos sbb cwtl jg adc test add add mov push cwtl xchg cld xchg imul jecxz out stos xor or test sahf out scas int sbb outsl (bad) movsb or push (bad) xor inc cmp mov ds std or cltd sbb and aaa in scas out cmp mov mov jmp lock cli dec negb jae leave and arpl jne arpl cmpsl adc adc (bad) jo (bad) mov sbb adc inc jl and iret xchg imul daa cli js jp mov fldcw cmp cmp dec pop fisubr sub sub pop aam (bad) pusha xlat das imul xor push inc mov test stos mov add bound add sbb rolb add cmc adc mov lahf jne mov add push sbb inc rcll push (bad) test out inc add or shrb inc in cmc xor jmp xchg hlt mov pop testl stc fstl push jle imul lock mov lods outsl repnz jge ficom and (bad) cld and add dec rcll cmp in fisttpl dec pop adc movaps cs pop js sub out imul add out (bad) pop and cwtl add mov pop lahf in push jecxz add xor adc xor mov int xor inc mov scas add dec cltd fs adc xor clc sarb dec mov and rcrb xor fdivrs pusha or cmp push roll sbb jg into stos mov cmp ljmp dec add fistpl cmp inc adc pop scas jg and xor aas cmpsl mov or nop and sbbb inc push mov pop jg inc jbe inc push rol jo popa jp jl xor std xchg mov jne xchg jno mov or stc push adc push sub call mov in xor (bad) popa les mov aam test mov ljmp push jl cltd push sub jl je (bad) sub cmpsb out fmul imul mov adc sub int rcl push out push ds insb in dec test add add push fwait jg cmpsl arpl pusha iret push sub popa loop jge push iret insl xchg xchg jmp mov or sub inc aad jb pop jge pusha jecxz inc ljmp push fisttpll scas fsubs aas and pusha roll out nop cwtl dec push fdivr xor jl subl in dec lahf push stos mov js and fistl and in (bad) pop in mov sub arpl inc fimul bound in pushf dec sub push int3 pop (bad) dec outsb or dec (bad) adcl add call mov pop xchg shrl or out or (bad) mov mov mov mov add push pop dec xchg fldl jp pop mulb das js outsl fstl jl cmp ud2 mov adc jg (bad) xor es mov pop aad mov or xchg add cs or int3 (bad) aam xchg adc les push mov sbb add mov out dec in rol js pop fcmovnbe lods add push test and add fwait xchg pushf pop jle sub (bad) mov xchg mov test sahf (bad) ds mov (bad) iret mov fistpll mov sti mov ljmp or mov idivl loopne int inc mov lock add movsb mov insb add or dec xchg jle pop enter push aam cmp shlb xchg lds mov iret popa cwtl jle inc sahf xlat int3 int3 mov or lret je push in mov aaa (bad) pop add iret mov (bad) lret cmpsl jo push test in xchg lahf push lea add movsl mov enter jmp aam mov xchg xor xchg sbb xor add ret cltd cmp stc das xchg mov xor mov sub cmpl adc push add stos fldt mov fbld cwtl and popf cmp jae lahf lods fdivrs add add mov or adc cmp je jg pop xchg mov ss xorl inc dec mov adc sbb scas sbb lret or out sub loopne fs pop fs loop repnz movsl pop shll sub push push dec rolb cltd xchg cmp test js add cs pop lods xor mov gs arpl popa lret sbb (bad) outsl scas stos jno adc inc (bad) negl cmp adc pop cmc daa dec mov aad mov sahf gs cwtl mov add mov lret popf xor pop (bad) insb in sub std mov add idivl insb push cs in sub dec mov cmpsb cs inc mov test ret and xchg repnz cmpsl out pop lds mov je and push sbb inc cmc push sti and shr fs pop mov test mov repz movsl add add enter (bad) andl int add ds (bad) ljmp lret pop inc xlat sub add adc dec xchg cmp sub imul mov pop lret jge adc lcall push jne pop jo sbb xchg lds add add adc mov in cmp in out imul aas cmp std jns lahf xchg fs xor movsb sub jge dec or dec jns push jmp xchg cli ror cmp dec stos mov xchg mov push enter call xchg dec std dec add cmp mov fstpl daa and add fs cmpsb int roll cmpsb jns or es (bad) call fistpl leave sub scas je or xor fcompl ja inc sbb sub cld pop sub adc xchg mov xor push sbb xor test adc inc or add add repz fisub lock jle sub in imul xor push scas popf sub push loopne xor mov out cmp mov and inc sahf test das imul mov test xchg cmp jmp std jp lock xchg xor popa add add rcll mov inc and mov fadds cmpsb xchg sarl pop fisubrl and aas fs lret jg adc rclb mov fistp in fldcw mov outsl add sub rcrb inc loop jmp es std adc xor imul sbb or adc into dec sbb (bad) repnz mov idivl jo xchg jp pop cwtl sbb daa or push dec repnz and jb or lahf mov adc jnp stos jl or cltd push pop je aad lds add dec (bad) mov mov xchg cmpsb aam and add jmp js mov xchg cld ret ja dec fisubl orl add xchg cmp loope imul xchg xchg imul leave hlt pusha xchg cli sbb iret (bad) iret push push pop shrb clc dec add arpl lds int sbb pop mov xor jle loop adc dec xchg movsl fldcw sar fdivp imul add imul pushf pop mov dec push aad mov dec cmp rorb fisub cwtl insb xor mov mov fiaddl jo add jnp sti js js mov psraw add add or push out je fdivrl lcall outsb out xchg cli dec inc pop std imul mov aam xchg mov outsl xor icebp les mov das xchg cmp push dec xchg in adc sbb pop ret aam pop test inc js loope shll add ds aas stos repnz nop mov mov xchg mov jo adc mov fidivl loop xchg enter sbb loope leave mov imul pushf pop xchg repnz ret subb ficom mov js (bad) jge test jecxz sbb lock xchg jmp (bad) cli dec lcall cmp fcoml xchg adc mov xlat ljmp aaa nop and (bad) orl stc pushl xor hlt test mov push mov inc pop jle or ds (bad) into jle adc xor add out iret and jo sbb lods les (bad) stc aaa popf js jbe xchg (bad) dec cmp cld pop jns dec in or mov lret sbb mov sub mov sub jbe scas repz mov pop jmp std sbb pop sub push mov add pop (bad) xor push jb cwtl addr16 xor in cltd (bad) jp (bad) addr16 lret fimul movsb iret (bad) or cmp push dec paddsw jg or push aaa lret ljmp jbe xchg cld faddp out mov mov jbe mov stos inc mov pop scas cmp cmc mov in js add (bad) rcl (bad) cmp popl cmc xchg xor fdiv scas dec test dec pop push mov or push and into (bad) adc (bad) insb stc cmp mov cmp or aas mov mov jne or adc inc pop mov popa sub or jae cmpsb xchg dec add outsb and (bad) adc out fcomip fwait and inc sti popf jl mov data16 movsl lods (bad) mov arpl and and xchg pop (bad) xlat test jo xor insl ja mov rcrl insl (bad) xchg and das jbe sub sub xlat inc outsb arpl outsl gs mov vmovdqa add test stc ficomp ljmp cmc inc xchg cltd xor cmp bound mov movsl jns ljmp popf sub in cwtl mov lret fsqrt pop pop test pop push test hlt or jae push push sbb dec and inc mov (bad) (bad) lret sub imul adc pop outsb icebp jno inc xor leave iret bts xchg sahf repz sahf lcall xor leave add aam insb stos fild imul jecxz test test or mov push cli mov rcll ret rorl sub ljmp add xor out xlat mov pusha push lahf mov pmulhw roll cmp add mov hlt dec shrl jne cld bound cmpsb cld lods or ja cmp sbb jne and sbb mov aaa pop ret mov test cltd cs adc shll cmp jns in pop test or dec mov icebp in daa adc sarb xchg stc (bad) ljmp (bad) scas stos lods repz scas xor orl sbb inc std cld pop xor fstl stc add adc xor (bad) stc rcr mov loope jmp jp add add jo or lahf xchg mov pusha push rcll insl mov xor fsubs movsb std in push pusha fcompl cmpsb push mov cli pop mov (bad) sar or add (bad) popf push shll cmp cld insb lcall mov xchg out cmp imul dec add inc sbb jbe fnstsw icebp cs push jno jo cmpsb pop mov jb cli leave sub and sbb adc xchg mov outsb lds or dec xor hlt leave int3 inc jnp jmp iret scas out inc cld inc xor enter flds adc fcoml repz stc shrl add xor pop jb and call (bad) sti aad je pop xchg stos addl dec (bad) mov fdivl dec imul push shll or in sbb add mov jbe hlt xchg pushfw outsb outsl or push mov pushf (bad) hlt adc mov mov add add ljmp clc pause mov jo fwait sbbl jmp add int3 (bad) dec (bad) leave mov push jns subl rorl push into adc cmp cmp aaa push mov or outsb (bad) std jae std repnz call pop pushf xchg dec mov fistl xchg fstpl add fdivl push negl popf outsl mov and (bad) incl sub xchg sti mov mov js cmp adc cmpsl mov fs xor push or jae inc les mov inc mov cmc push faddl add mov out cmp aad sbb pop fnsave jno or test (bad) je mov sbb mov sbb shr mov xlat or sbb repz je inc ret add lds mov test ja into dec and or xor push lock mov out movsb mov movsl jle sbb imul mov pop inc sbb inc subps xchg pop pop not aas jno push stc leave inc out xor insl test and mov outsb inc and mov ret imul xchg mov mov cli cs out je fisub int3 lret imul lcall xor push mov mov xchg (bad) dec and cli cmp adc ja ljmp inc sub xchg mov add mov icebp leave lahf xchg xor lds hlt mov add sub jb ds sub je push xorl test pop jl adc pop and aam xchg js cmpsl negl push adc xchg cmp jnp pop add stc out fistp pop aaa (bad) (bad) sbb push push sbb sahf mov fdivl scas adc dec pusha jmp daa inc mov push idivb push jns xchg dec sbb add dec cmp push movsl popa or mov xlat inc outsl mov add xchg jecxz jb stos mov xchg loopne push stos xchg hlt sbb inc adc or stos xlat pop fs cmpsl (bad) xlat mov dec mov mov xchg xor icebp fdivl dec xor xchg jnp cmpsl pop push es sub cmp test movsb out inc fcomp icebp mov insl pop jo lret sub pop pushf insl push xchg cmp push add mov lods adc iret test arpl scas fdivs out mov aam add push stc fiadd (bad) int ret jnp fisubr jl add push cmp push adc in outsl outsl jl push push mov cmpsb loopne inc cmp dec bt adc mov (bad) out pop mov fisub popa push dec in cmp mov add insb sbb pop and pushf and test xor xlat mov jne in xor (bad) sub arpl jp outsb sbb add dec in push cmp sbb xchg mov inc repnz es mov mov mov add inc cmp push loope stc js mov cltd addr16 int repnz outsb loop and aad sarl cmc (bad) (bad) in mov out es push vpaddd xchg add pop aaa (bad) into (bad) incl add in rclb sbb xor mov ss outsb int3 jecxz fwait stos and stos sbb into cmp jecxz loop subl pusha mov sub aas and xchg nop cld repz mov loope cmp push mov out lods xor addb add jne sti movsl notl rorb popa dec fisubl test inc movsb pusha push inc aas inc rcrb iret or xor pop aad mov lods icebp scas leave xor mov inc xchg cltd popa popf pop lods dec repz mov into pop mov test hlt mov aam mov xchg mov imul add add insl adc ja movsl push (bad) loopne fdivl xchg mov cmp cwtl xchg mov mov je jge (bad) outsl out add es mov ret shll cmp (bad) xlat ds fbld pop and cmp scas inc mov dec push lods xchg inc jne inc (bad) or out mov jge push or jp clc lds xor (bad) in std adc iret cmp nop sbb in lcall xor sub pop jl inc xor push std mov xor pop int3 out lock add lcall outsl mov xchg int adc dec les jge insl mov ds mov fsubrs sbb xchg fstpl pop cmpsb or pushl inc fisubl (bad) sbb adc inc js jnp lock dec sbb xchg jl lahf movsl cmp cmp push push xor out inc int3 out (bad) ljmp das inc xchg and sub cmp and pop xor movsb in outsl or popf aas xchg mov popa fprem mov dec push fs insb lret xchg mov sub pop pop test fs repz and repnz add pop add (bad) (bad) clc inc paddd xchg arpl mov sahf xlat mov sub or push jl lods jmp ret repz mov jg test sbb fwait popf and ficomp push or xchg jle addr16 cmpsb loop cmp xor jp add pop fwait imul sbb push out inc pop scas xchg dec (bad) cmp sub fidiv fldenv cld nop movsl lret loopne sub mov xchg out aad mov loope mov ja in xchg in jl mov xchg inc test (bad) jno or jp mov sti jne out loop mov add sub xchg scas sbb inc mov push js es dec rolb xchg cmp nop or js aaa lret in inc outsl cmp mov sahf mov inc fs scas rorb ret test into je adcl jb test movsb rcll call xor ja mov add aam push jb into mov add or push aas pop loopne pop sbb or push insl call mov push jl mov mov cmp pusha mov add push stc sub jnp pop roll xor sbb aad aas (bad) mov xorl sti pop pushl lret insb lret test jl into je sbb enter fs or lret xor or loope rclb popa xchg in jmp in lret mov inc mov loop popf in inc mov xchg jl cmp xor jns and add or add add mov jecxz xor nop popa fdivl (bad) es stc mov icebp fwait subb out add jl mov xor push add add out (bad) mov call cs sub imul dec xor adc es dec int aad mov loope add mov pop cmpsl les in xchg nop aaa (bad) mov mov (bad) push dec lds imul sub ja rolb push pushl lea cltd dec mov push addr16 fild inc lods (bad) cld dec add nop test sbb and and add add jo loop pushf mov insl dec es or dec cltd dec insl (bad) cs mov jae xor pop pushf adc js fistp inc adc pop bound lret sbb je (bad) xchg xor inc and sti aas pop stos push imul cs sub add jge xlat lods scas cmp jne xchg mov push test outsl or mov (bad) fisub push mov (bad) data16 mov mov (bad) mov rorl mov xor dec out test movsl xor lds mov faddl inc cs cltd je bnd and mov mov js gs xor cmp (bad) cltd or cmp xchg push push stos orl or sub (bad) icebp rcrb push push xchg sub js aad pop gs add inc dec aaa repz (bad) jl add sti dec insl sub insl add iret inc add in loope xor mov aad lds mov mov rorl mov add (bad) repnz call jp jle push xlat sub rclb push inc mov push jb aam outsb in xchg push xchg cmpsl mov enter add add pop pop movsb insl cmpsl inc add mov jns leave stos inc push dec mov dec inc mov xchg ret xor (bad) out xchg or xchg mov cli pop icebp sbb mov adc sub popf popf mov fwait rcr jo test push stc adc add js fiaddl jbe fwait mov lods lods mov test push add rcrl cs cs in mov cmpsb popa xlat lods scas and mov inc push jmp mov jbe hlt je xchg insl outsl xor lcall testl add inc add add daa jmp push sub (bad) aaa inc loopne xchg inc pop test in dec repz dec frstor movsb mov test ret or mov movsl ljmp sub pop imul lock pop in sub icebp (bad) push mov (bad) cs add pop cltd jl rcrb pop mov inc push add push and push cmpb bound sbbl jg xor push mov sbb loope adc add cs loop mull aas pop sub and movsb push xchg cltd pop cmp mov or ja popa bound add rolb or jle adc push mov fsubs aad test hlt xchg call mov pop pop test lcall sti js pushf es rolb (bad) popa cmp popf cli push (bad) xor mov adc int3 std mov lcall add adc add or sti or cmp dec xchg inc ljmp and adc xor das (bad) pop fistpll ficom xor lcall mov ficompl sub stos js clc pusha push or rcrl cwtl out adc adc out jae (bad) jno pop test pop mov std int (bad) lock cmp call shll fisub mov iret add jg cmp mov jo inc aas inc and cmpsb push push leave sbbl ret es lods test mov cmovns movl mov insb pushf stos int3 addr16 xchg xor loop push or les push push push push add mov dec mov (bad) outsl push cli rcrl xchg popf shll mov xchg push push daa enter cwtl outsl icebp dec out aad mov pop xor fildl add das push add lcall add add cmovo and cld or xor push jecxz (bad) repz fs push adc xchg jns lods cld nop nop cwtl add test fs stc push int sbb jbe stos inc js add ja mov pop outsb outsl adc add add aaa dec rolb lcall sbb jno or es (bad) std mov aam popa mov or cmp push push stos push jne dec insl mov (bad) sub push push and and push mov push inc push call ror push pop push xor leave jge add (bad) dec xchg pop xor enter (bad) pop xchg xchg cmp aam pop cmp cltd cmp andl cmpsb ret xor insb add pop repz jecxz aam out pop lret jle mov je or jo call xchg jo js sub outsl mov insl mov pusha jle sbb push (bad) mov cmp cmp hlt xor jno stc push sbb orl (bad) call vminps push xor pop (bad) in mov xchg dec adc jp xor pop lret scas je cmc aam (bad) pop sahf rclb dec push sbb add cmpsl popf outsl xchg jo in es xor (bad) xchg mov sub cmp into fldcw js pop lahf xchg mov enter add sub cmp (bad) popa add mov (bad) jno inc dec jmp dec std pop sub adc sbb outsl add lahf addl mov mov xchg pop pop mov dec scas sub psraw xchg call arpl lods into aad bnd or repz out icebp and sbb insb sub add inc sub mov call negl jbe inc or xchg leave push fwait jecxz aaa in stos cli pop icebp repz mov (bad) cs fcoms inc xor pop call adc xchg inc stos sbb pushf inc mov jo mov push frstor mov jmp test ret xchg xor repnz sub jno inc sbb xchg mov add cmp inc xor ljmp mov pop cmp jo mov mov xchg hlt dec mov cmpb js cmpsl rolb fcmovu pop (bad) mov lods insl call outsl cmp mov or mul sub jae sub test into sub shl aaa push push das je popa lea add push mov lods test ljmp je sbb (bad) adc sub jae xor loope bound pop adc ret stc rol js mov mov push lds pop or das insl pop push ret (bad) sti dec sbb adc push push add add add aam sub mov mov jno nop out std sub add nop imul mov add pop dec add lahf je movl sbb outsl mov loopne push sti sub rcl fs pop lods sbb jmp psllq movsl int push mov lds add add push leave xchg dec and sbb sub xlat pop sub xor cld pop sub mov mov lock jbe adc sub je jne cld mov mov or push xorl xor jno ret std pop jbe inc (bad) jnp sub aas inc dec into mov lahf push call in stc add push cs arpl jp cltd cmp mov imul mov cmpsb ret xor cld push clc or adc orl leave rcrl push fcmovnb js mov xchg jg cmp mov (bad) in in jle (bad) pop add add loop or mov call test or xchg inc mov clc add decl sahf and fs icebp xchg sbb xor xor xchg mov out xor sbb data16 inc pop divl fstps pushf push adc push pop cltd cmp add jo push sub jge notb imull adc mov daa and divl lcall xor xchg cmp dec or mov or aaa aas mov xor rcr mov mov pop jge (bad) jbe jg rcl arpl mov je or push shl xor (bad) lret call mov push xorb int3 in and stos gs jo lods pop jg in and push xorb xchg out clc push inc pop scas test dec adc and jp es xchg leave sub scas and fmul lea mov dec inc xor xchg int stos nop adc xchg inc into fistpl bound aas jnp les stos jmp push loope repz sbb sub mov xchg jbe ret call xor dec (bad) lods call (bad) addr16 loop aas out lock and outsb clc ss mov cld add mov mov inc xchg cmpsl xorb or mov pop stc rcr xor daa xor scas idivl pop jb je dec test rcll nop sub lock stos cmp fisttp mov xor les js cltd ret push push (bad) pop clc inc adc loop pushw aad roll add leave push test iret in cmpsb ret ds std sub sub and and dec sub arpl pop rol push mov in or or cmpsl mov jle les adc push sub mov icebp inc outsb sbb mul jl sub imul stos mov cltd fild add add push cs lods inc movsl fadds mov cmp shrl sub fcomip inc lahf sti cli jmp lds ret je (bad) adc scas fidiv int stc outsb inc aas push (bad) xchg mov and and pop cmpsl pop sbb dec jne push xor dec add add add xor icebp pop scas push pop dec adc cmp iret (bad) adc jmp push add or pop add (bad) fsubl lahf cwtl jecxz jns mov push cwtl dec pop jae adc (bad) push lret xchg mov test inc outsl scas adc add aaa push es sti ret stos lods adc fldcw stos dec mov insb sub and in and inc clc cmp sti in mov adc insl outsl fisubr (bad) mov popa inc cmc sbb cld push fs or es js,pn dec adc xchg les sbbb sub add fistpll xchg cmp test lds mov loopne adc in les aad fcomip cmpsb push lock pop scas add xchg push clc adc icebp imul call pop adc lret mov ljmp pop stc rol js mov mov add je cmpsb mov pop xchg pop cmp mov (bad) sti clc sbb push mov lret rcll insl mov pop cmpsb mov push hlt pop mov dec mov xchg cltd pop es push mov lea cmp inc cmpsb or not in cmpsl adc adc or aad cli repnz call sub lret in cmp xor inc popf adc in fwait fwait movsl or sti cmpsb pop dec cmpsb mov inc push in test fbld xor in fs xchg hlt pop mov xchg faddp cmp mov int push shrb xchg flds add add push xor sbb pusha stc cmp mov mov repnz lcall std dec les fistpl push in sub std mov xor dec xchg xor data16 adc pop and pusha xchg test cli pop jae loope clc dec xchg stos repz push sub mov push lret not inc sarb xchg mov and movsl in mov fnop nop rol push inc aaa into repnz push repnz iret or mov jo adcb insl sarl ret out mov icebp pop int fstpt jo loopne test mov incb mov and sti lods in or dec adc pop adc and or sub decl add xchg jp (bad) push xor bound out ds xchg xor xor push (bad) adc or clc rcrl icebp inc mov and mov push add add xchg pop mov and flds out imul mov test dec cmp ret xor (bad) in stc int3 jge ss addr16 adc mov fsubrl jne fisub rclb rorb insl mov fwait imul scas mov add enter aaa jecxz push sbb jle sub pop lret fsubrs sub pop sbb cmp aam mov inc xor cwtl lret fiaddl fcom push ror sbb and (bad) call int cmc or push cmpsl pop adcl ret pop mov ret add add dec jge rcll push stc jge xchg call movb rolb insb std aaa scas andl xchg aad outsb outsl addr16 and sub dec stos cmp adc bound jecxz bound les sbb sahf ja gs repz push jmp add add mov jl lds push mov pop push jnp cli mov mov (bad) leave dec gs xchg shrl neg ret mov push jns or inc fistl ljmp sbb push ficomp push mov mov xchg jbe pop cltd ss push push add mov inc dec push das retw (bad) movsl push fcmove roll push adc mov pusha outsl pop jl xchg sub out je push cmpsl push or push in lret cmpsb ret xor jae loope dec rcrb icebp and (bad) mov jno les and jg call jno sbb cmc sbb add les push mov fsubrl gs repz add xor subl clc add pushf dec mov in sbb mov and movl push push rcrl daa cli lock sub out mov mov lods negb cld or add add add sbb push sub sub subl jge push mov push mov pop (bad) pop out out daa cmp pop repz ret daa xor xor dec add xchg andl add mov pusha dec push push adc push (bad) fstps xor add movsb push cmc aad xor repz rorb sbb ret jns (bad) outsl pop adc and dec inc loope lret jne cli repz pop aam jl inc xchg loopne push dec pop push inc sbb mov ficompl xchg in mov cmp push push cmc mov sti stos push lcall adc adc xchg xchg xor lea xlat dec lcall jbe pop cld mov jb mov es imul cmc push sub mov sub repz jnp arpl pop xor pop xchg jb lods hlt mov lods pop inc ficompl pusha add add cwtl jmp aad cltd in sbb xchg mov mov (bad) jle sbb mov or xor pushf add sahf in inc enter lret push std inc mov in lret add icebp mov test mov pushf xor push cli lret aam mov add add adc adc push test (bad) lock push sbb cmp nop mov and mov mov and inc jb lret adc sti rclb shrl push push subl imul adc mov sbb sub (bad) mov mov add je,pn test xor call lea dec std adc push or xchg mov sbb inc outsb jmp inc enter in push lahf lret js adc mov mov subl inc es inc pop test xchg xor sub (bad) lret add add ret test dec std (bad) xor int3 inc insl adc mov data16 (bad) aaa fimul sbb test and aas rol mov inc pop dec out push add push and fsubp sti movsb cwtl jg push jns push clc stc push lods mov popf addr16 mov (bad) call sbb loop add es mov and mov sbb mul je jl cmpsl jns das mov fbstp xchg iret fisttpl movsb dec xor pushf test add mov rcll inc sbb aad (bad) fiadd sti dec pop inc test pushf mov push es sub mov or out int add or xor cmpsb gs xchg sahf and jle cmp bound test mov popf ljmp sub sbb sbb mov test or stc jns jns inc sbb jne adc mov test mov mov add add jmp int pop push push mov sbb (bad) fldenv test cmpsb mov mov sar push int3 push lahf jge xchg aaa bound pop xchg xchg dec sub and adc (bad) xor shl mov push cmp jne (bad) es imul arpl ds mov add push mov (bad) mov data16 add test jl movsb jp mov pushf scas clc orl adc push pop lret outsl cmp ljmp mov push adc cmp mov mov out out sbb out (bad) ja je imul out movsl cwtl push in aam add add leave je ficom stos cmp mov jae pop mov movsb in xor sub inc dec add sub sahf test add fidivrl add test (bad) movsl mov cmpsl add lahf mov adc jle pop ret js fldt add add mov out je int3 lea xchg ret dec ljmp lock (bad) rorl xchg mov cmp xor inc push inc xchg or sub hlt push cmovg add hlt cmp pop pop lret mov lea stc bound dec add add pusha xchg insl xor ds call lds cwtl jmp fcomp mov incl push sub sahf test (bad) jp adc rcrl cwtl mov jg scas xor push adc lock mov cmp mov (bad) cmc sub andb add jo imul xchg testb jae test sbb xor mov call imulb mov outsb sbb out sbb stos jg stos pop jecxz mov mov xchg and roll jae ss inc cmp mov jmp inc scas jmp dec cmp add inc jno (bad) in cmp jge jb cmp sbb (bad) repnz into jg mov shrb int (bad) pop rcl call push jg add fidivr lea mov shrl inc cmp mov add add pushw subb dec jg push xchg out rclb outsb mov jno mov xchg sbb inc and in fisttpll ja in mov stc idivl pop push jmp adc aas cmp dec jb lods outsl mov (bad) repz mov out cmc adc paddsw pop add sahf lods icebp iret bound rcrb xor pop loopne or inc inc imul inc lods dec (bad) and xlat icebp push sub mov jle push mov movq sbb inc and ret or mov xchg inc test movlps add cmc arpl gs sub clc jne inc mov outsl xchg nop mov imul xchg je loopne les push jmp sbb push add sbb adc and in xor mov pop clc xchg cwtl xor cmp mov lods sbb mov mov add add call ss mov sbb out std mov sbb push sbb cli testl add xchg or test dec xchg pushl mov push sub push xchg test sbb fnstcw lahf loopne push bnd cmp lahf push add test inc xchg push (bad) adc into xor jge in xor adcb inc test cwtl test (bad) cmpsl mov and lcall sti mov cmp shrb (bad) imul mov adc add xchg clc cmp mov scas loop inc iret (bad) sbb out sub sbb shlb add jne shrb push jge std or mov pop leave imul xchg mov sbb or mov ror inc mov inc dec pop jae out xor aas movsb popa jmp mov sti stos ljmp add movsb jle pop leave lds mov aaa mov xor dec or mov inc push (bad) hlt (bad) jae cmp lods pop mov outsl push movsb mov pusha aam out push sti inc scas stos clc cmp push mov cmp mov shrl and (bad) pop cmpb xlat scas adc push scas add push mov cmp mov insb mov xchg jl xchg xchg cwtl jg or bound in or out dec aaa repnz sbbb sbb int3 into test mov cmp inc addr16 mov push and jo fs jb mov push (bad) popf xor (bad) sbb sub add (bad) lods test (bad) pushf test outsb dec es testl or push xchg sub out test push shlb fisubrl mov scas jo mov cld xchg sbb inc fnstsw loop hlt movsl bound imul lods adc mov popf mov add add cmp mov jb sub mov add jecxz lds cmp push clc xlat mov stc jge adc pusha or pop xor jb (bad) inc (bad) inc cs mov xor cmpsl sub out sub mov jecxz std cs pop cmc xor pop push push pop repnz stc mov mov add scas lret inc rcrl and mov fisttpll movsl mov mov loopne ljmp or sbb enter xchg mov xor imul jmp arpl movsb out mov roll repz sahf add push and xchg pop push jbe lods adc adc xchg sub mov add xor shll (bad) sti dec sbb jb lahf mov pop sarb add in insl push shrl pop mov aas cld call push sti test (bad) sub cli xchg das or nop in (bad) aaa test in test les xor in jle call add dec int shr cmc adc loope pop push mov (bad) lods icebp xor xchg mov jge mov xor repz ret inc mov cmp mov xchg int pop dec fcomps lea mov dec sbb (bad) dec mov loope jmp (bad) dec cwtl cmp or add pop mov or pushf outsb xchg lret jno fwait stos movsl jns xchg inc jg sbb popf repnz rep (bad) dec fidiv jmp push imul shlb xchg frstor movsl fldt test cli jecxz loopne adc xchg cld or add insl ds push and add jmp xchg rcrb xor jle mov std and rclb ljmp adc (bad) sbb lods out movsl icebp lea adc jne pop add addr16 sbb and outsl cmp (bad) fbstp outsl pop sub mov pop test push add dec incb cmp les or push sbbb pop mov mov shll mov cwtl lea daa data16 sub push aad sbb sbb addr16 add icebp leave (bad) stc insl mov mov andl test mov out add aaa test mov xchg sbbl movsl dec add insl outsb or clc inc lock jp cld popf (bad) dec xchg ja xor (bad) in in jle xor fdivrs rcll (bad) dec stos xor pop adc push adc loope dec mov stc lods insl mov adcl push ret dec and sbb add out sbb push jp outsl inc loope lret fsubrs out orl pushf pop mov pop scas push mov pop pop pop aad pushf sbb ret sti gs sbb mov push add add or (bad) and mov adc mov fs pop add mov xchg mov push scas push jo xchg cld jecxz loopne xchg dec stos mov adc add mov jns sbb pop outsl aaa push (bad) imul rcll (bad) repz push adc mov imul push ror popf sbb jle dec imull mov mov mov add xchg mov scas lods add arpl jae inc adc fcompl fist test out pop movsl stos cli xchg repz addr16 arpl into dec and sar stc aad jmp mov stc or pop pusha sbb sub aaa xchg xor in sub push push ficoml push jmp inc jle subb addr16 xor ret out cmp or enter xor fabs push ds subb add xchg outsl addr16 lea xchg imul cmp push (bad) push mov jl lods cltd pop xchg mov mov add and rcll dec mov jmp add fimull aam ds stc popl sarb lcall adc xchg ss push fisubl dec adc popa sbb add dec xor ja xchg and nop sub jns xor inc aas (bad) pop (bad) fild add add xor in jle and into jecxz inc dec insb mov xchg add fcmovnu std js pop lea popa cmp cmpsl jae sub mov inc cmp int3 add push sar (bad) xor adc cltd pop pop gs es inc mov in inc add mov add icebp frstor xorl sub dec fisubrl sahf sbb popa xor jno notl mov imul ds lods out sbb xchg mov sub dec addr16 adc and stos cli pop xchg jne dec insl mov add push mov and adc xchg aaa ljmp and or movsl pop xor arpl aas and jbe loope jo (bad) iret ret (bad) loop dec add sbb or push sub xor adc sub sarl rcll loop outsb add add add push in mov out cmp adc stos dec pop inc xchg in add rol mov dec mov or in sub (bad) mul inc jp cmpsb dec sub sbb pop pop sbb mov test jle inc mov icebp lret sbb dec dec cld mov test mov adc test les xchg dec rclb movsl pop add jl dec je int3 mov inc sti test and xchg and pop mov xor adc cltd sbb mov ret add lcall dec pop jecxz pop ret rcll adc push mull (bad) and es es (bad) jno pop mov std aaa mov mov jns cli dec add test xchg lds cmc loope inc sub call fcomps xchg lea mov mov (bad) jnp push stos loopne jp cmpsb lret xchg ret enter lcall insb std int fadds add inc jbe arpl sbb das cwtl in adc pop scas mov push and test (bad) xor push stos cli aas rcrb mov mov adc pop jg pop push push cmp std movsl rorl js adc shrl int3 dec dec incb sbb aad jp mov fnstcw xor push dec adc inc or popa lcall add xchg cltd cmc cmp jecxz ret je sub jg outsl ljmp and jp cld arpl dec xchg jno mov imul pop xor aad jle push mov inc sahf adc add or cmc xchg xor jo pop adc mov add inc mov icebp adc or jmp and cld bound addr16 push test and repz es je add jge out inc popa xor into dec adc (bad) repz lahf push push jg inc and loope add mov int jle js sub inc test imul cmp pop push mov pop fldenv lret sarb hlt test dec loop jle jmp pushf mov sbb cmp xor fstl xchg jle sbb nop/reserved ljmp adc sarb imul (bad) loopne add xchg push mov dec add sahf ja lahf inc repz dec adc cmc je xchg js ror ja ljmp fwait ret das and popa inc pop mov lcall inc and xchg mov sub mov aas xlat mov idiv inc fstpl pushf sti stos imul jl pop mov inc (bad) jo add adc jae cmp add add rcr in das retw mov sub mov scas pop les sarb sahf push sub push pop jl add (bad) and dec cmc popa mov daa cmp shrl sbb sub add (bad) xlat mov pop inc das jle std mov addr16 (bad) ljmp mov outsb inc aas push loope mov (bad) sbb inc repz mov (bad) inc (bad) subb xchg in int jne (bad) test xor jnp mov push pop mov mov jno pushf int3 add xchg mov sub push cld rcll pop xchg stc pop fdiv cwtl mov fdivs in pushf sub xlat not lret push stc or pop xlat daa insb push push je and notl or nop push jbe iret push in aas mov xor mov cltd adc mov push pusha push add pop dec std stc mov adc pop xor popa sub sub (bad) xchg cmp jns ret fcomi (bad) jg sbb cmpsl outsb or test pop aad sub out and dec out add data16 rolb out roll pop adc cmp out push cli ret fs add int3 xchg outsl sbb outsl dec dec mov icebp pop ljmp push and pop out loopne push loop or scas mov ret js outsb dec mov inc push adc inc jo fdivr gs jo bound test (bad) push das in mov dec fldcw repz ja xor add add insl movb rcll adc fldt in mul cmp loopne sahf add das xchg je inc xchg mov xor scas jb loopne call or cld pop mov jmp mov mov jl mov xchg dec pop iret insb add inc xlat push out pop iret lret pop ficoml insl jp fs xchg orl std cli mov add mov pop dec lret sbb jbe pop xor sub lock (bad) addr16 mov xchg sbb adc adc dec mov icebp (bad) (bad) in mov shr lcall or cmpsl xchg xor mulb add fwait xor and sbb jne (bad) pop lcall aam pop in push ljmp imul stos inc push (bad) jo ret mov jmp mov push ret sbb jg arpl cmc arpl pop andl lods fsts mov adc xchg add out cmp adc push jb sbb aaa fprem1 pusha xchg (bad) icebp ja es rolb add jns jge cs and push or adc gs sub xor insb jg mov xchg jae out adc repz fisttpll fcom das mov xlat ret sub fbld xchg inc mov pop pop pop test add lods pop cmp inc in ret sti dec xchg push cmc adc jge in movb xchg popa mov mov (bad) jno xchg cmp push xchg lds call andb call add add cmc das xchg lds dec mov mov imul stos hlt xchg cmp mov inc mov lods icebp scas push dec dec push loop jno mov repz mov pop ficomp add mov cwtl xor sbb imul add mov lods sbb mov adc add cmp cwtl ret jo pop sbb or push or push cmc and lods jecxz xchg jmp push ret sti dec lcall ficomp push cmp mov adc or stc lahf rolb insl mov stos mov add or sbbb jb or jle jle push sbb sbb call xor mov pop inc xor sahf sbb xor sbb jle (bad) lock mov call add out hlt sbb movsb xor mov in test add inc xor cmp xchg leave and cmp mov cli pop dec cmpsb cmpl lock jno pop pushf push out aam sub jl push sbb jne sahf fdivl or cli cmp xor inc repz and in cmpsl ss xchg dec dec into test lahf push dec or dec pop cmpsl ror rcll add gs test dec sbb (bad) sub (bad) jmp inc mov inc imul adc mov roll cld sar inc dec gs arpl imul pop xchg mov sbb mov jno mov mov mov sbb mov movsb jno lcall lret dec stos les imul xchg (bad) ljmp adc mov lcall inc mov inc pop lret fldcw loop test insb sbb call notl or mov stos cmc push add fistp in in xor xor mov lret adc adc add push ret cli dec nop push (bad) nop lret mov cmp cltd mov push sahf push push les cmpsl (bad) bound dec out aad jmp and mov sahf sbb inc xorl das xchg mul adc push lds scas pushf mov pop ja xorl rcl in fs push test call or cli cmpsl int3 or test dec adc cld jb nop lods test repz pop out pushf test xchg xchg sbb out mov mov xor sbb xor leave iret bts jge cmp idiv mov pop fild shlb push add (bad) fstl mov adc rclb data16 push das push stos mov mov popf push jbe rcrl xor cmp mov xchg iret cmpsl ret cmp jge test push (bad) mov es in pop jnp stos outsl or decb popf pop push mov pop lock mov das sub stc or pop mov cmp inc jmp repz iret or lods cmpsb ja fild dec shrb jb loopne andl aaa and int3 mov out mov mov outsb iret fs or adc dec (bad) lods in jle mov cs add add cmp lret addb xlat lcall faddl pop jo pop pop bound js cmc cmc rcrb inc out hlt xchg inc test sbb mov (bad) cmp lahf sbb dec add cs data16 xor stc lahf rolb jmp loope cmp adc test sbb cmc mov test lea sbb (bad) out jmp mov xchg or cltd mov xor jae jo pop add icebp or jno push ljmp jae sbb (bad) into aam fcomip jb add add out pop scas sub aad scas std adc in arpl into and into add in xchg or xor and sbb mov add popf dec enter popf imul jb adc std js lret imul sahf pusha out je sbb and (bad) and and hlt jge scas cmpl stc mov xchg movsb xchg outsb mov shlb popf inc sub std xor addr16 daa jo or es sub adc call sbb and lcall (bad) into test sub lret xchg lock add out dec cmp icebp mov (bad) dec lcall mov stos or xchg push inc jmp and adc stos xchg and pushf notl cmp out xchg cmp sub movsl and mov jle adc inc sub mov sbb xchg jp mov movsl add jo pop loope push ds loope shrl push lock insl xlat das add cmp jne rcrl xchg out or in add sahf cli aam call notb xorb mov imul xchg adc adc pop out mov scas std mov mov jg sbb adc add add cltd iret or shll (bad) int dec jo jns pop fsubrs pop lcall scas mov dec adc mov daa test js xor pop dec lcall push adc int pop push push ficompl add add insl stc sbb add mov mov dec cli ja jecxz into inc xchg push mov stc flds sti ret mov dec adc xlat (bad) jle push xchg mov iret cmpsl ret test sbb cli mov add xchg sbb arpl andl jle jle insb ret (bad) add enter ja add add das sub roll into ret mov enter xchg sbb icebp cmpsl dec (bad) out pop jbe scas imul sbbl iret dec dec inc adc mov lcall adc xchg test outsb lret dec addr16 (bad) xor (bad) pushf popf jae add push push fist stos add xor push jb pop lock cmc jge lods xor sbb out xchg gs sti rolb add dec xor hlt cmp dec add in loope or data16 loop xchg xor push outsl aad jno ret cmp cmp jecxz sahf ret call add mov inc sub xchg lds bound fcmove mov inc sub inc inc js xlat jmp test xor or es pop lock mov les inc mov sbb movsb xor mov ficomp push icebp or mov or xor scas stos stos pop dec sbb insl mov subl and mov xchg or adc aaa push jb iret mov cli push cmp xchg xor hlt lock sub ljmp js enter push and or addr16 cs add (bad) jmp adc test mov fisttp cmc sbb hlt outsb ljmp mov mulb adc cli dec ret jno cmp fidivl mov lods arpl inc jl rorl jg rolb les ret movsl pusha mov insb divl mov sahf or add push mov xlat pop jo xor pushf push jp outsl (bad) push hlt (bad) mov xor pop repz clc pop xchg inc (bad) lock call out bound lahf fadds push jb mov clc pushf enter adc xchg adc lret xchg mov push add dec into sub gs lods stos mov rol cmp je mov imul loope cmp mov push test push sti cwtl mov adc jecxz cli cmp fwait jns cmp orl xor mov sbb int3 xor pusha dec data16 push int3 lds add xor mov mov mov and stos sub sbb enter xchg jb and xchg out and add cs gs mov jne test aam push fildl mov ror pop cwtl in gs ja jmp adc pop xor add add jl jmp repnz add jmp jmp dec shll mov pop popf sub cmp xchg clc sti das cmp push jnp loop push orl cwtl jg xlat popf int3 pop mov pop popa (bad) jbe (bad) mov jl add dec pusha add adc (bad) mov (bad) sti sbb inc sbb cmp dec mov cwtl mov in adc push (bad) call test (bad) pop notb pop dec sbb push xchg inc popa jnp adc mov push dec dec push inc sahf inc or add cld add mov in mov adc inc xor test dec inc (bad) (bad) sub aas inc dec into jmp pop lahf (bad) mov cmp hlt mov movsl cmp hlt into push jmp pushf sub cmp out sbb jno pop xchg insb std dec das xchg push test sbb xchg in ror jle push jecxz cli add add (bad) lret add int pop xor lds inc pop add loop or in and sbb cmc push movsb mov lahf shrb repz fstl xor mov mov mov test cwtl mov lcall (bad) push push add out add lods cwtl adc jne push and arpl jno arpl or sbb push add in sub adc push add push leave (bad) dec rol mov adc push out jo pop and js ljmp cmpsl or fs test push aam inc adc push (bad) jno ret nop jmp add test sahf add pop mov adc notl cmp sbb fisubl mov int3 jl sbb cmpb push pop outsl test out dec jle dec pop push call fistp imul cs and inc icebp in inc iret out cmp add push push adc dec jmp mov std inc push (bad) sbb call (bad) js mov mov lret stos inc adc push mov hlt addl mov fcomip add jne sub rcr pop inc dec mov push mov ljmp js fwait mov cmp cmpsl test add jecxz in dec and das imul and pop push pop (bad) mov mov lcall in (bad) cmp repz aam adc mov imul loopne shrb scas sbb jnp ret fcmovnbe sub xor iret dec xor sbb add adc mov ljmp jnp mov cltd negb xchg push jbe out cmp (bad) xorl nop (bad) add daa mov fcoml gs pusha lea adc xlat mov add adc mov pop add shlb add xchg repz lea add add add jl jns jbe,pn or aaa call mull cmpsl mov jecxz adc lods push fcoms jno dec push mov sbb aad mov sbb cmp or pop fldenv sbb int3 ret (bad) sbb lret or aaa test ret insl jb test add add xchg (bad) cltd mov xchg dec mov mov ret dec in jg stos xchg sub push movsb mov and les enter adc pop mov jo loop dec mov xchg mov xor cmpsl icebp imul mov jno xchg xor sbb repnz xchg cmp push and add add outsb mov sub jbe xchg push fildll repnz jo out iret (bad) cmp decb (bad) cs push (bad) push fsubl sub movsb and and xchg out aad gs aad mov adc xor in inc mov xchg pop sub (bad) jbe cld add xor cmp adc mov xor jne test sbb fisubr jb push pop mov ret dec in jg or jle roll push push int fsub aas mov out cmp cmpsb and loop sbb in fisubr ja out (bad) jbe in add (bad) xor mov dec fild mov mov mov sub push das push jb cmc loope mov add int3 or sub out std ret or lcall out or cltd or xchg mov jbe add adc mov sbb mov xchg push pusha xor out in in test cmp sbb xchg (bad) adc movsl mov mov sub jno dec sarb adc jns xor xor lret outsl lret int mov js xchg pop add jg jb sahf scas ljmp xchg (bad) cs sub cmpsl pop push dec add cltd mov xlat inc scas mov stc add adc adc lcall in out pop jl dec push mov push mov pop aam xor mov mov add mov insb pop fmull lods stos popf push loope jae ficomp jns js cmp jle aam mov adc push fiaddl fisubl add dec jbe lret in or test sahf ja cwtl mov adc repz mov jne xchg cmp out add add add mov jb pop scas lock lods sub mov enter mov test xchg loopne out mov jne mov jno push pop jle (bad) mov push test adc cltd push rorl sbbl (bad) call mov movb add add add mov imul and test xor and xchg loope aad outsb mov aad xchg pop and dec mov cmpb inc mov adc ja ret je dec fisubrl stos inc mov push sub xchg aad aam int3 ljmp add movsl or sti sbb xor push dec gs jle jbe xchg push jns pop int3 ja mov jge mov jmp adc push sahf or movsb xchg lods test mov call gs (bad) fcompl and add pop fsub frstor lret ret add add add test xor loope inc in ret sti dec mov lods push mov add (bad) (bad) rclb adc xchg cld xchg pop pop mov cmpsl adc and mov xchg int3 pop add xchg sbb shl addr16 ss xor fsubs xchg pop dec loopne bound (bad) out add inc movsb pusha jmp or or mov pop aaa pusha xchg sub mov lods jp orb roll test fsts lret in ret inc dec xchg mov daa test adc and in adc push adc jle pushf popf scas fmuls add add mov rorl push lods (bad) jb adc out call int inc lret xchg pop sbb subl jle in add out add add cmp bt mov mov call dec add push sbb (bad) fcomps push out jb xchg lret aas mulb in add add add popf jb mov inc dec aaa jl cmp lods mov rolb inc aas push mov (bad) xor call cmc (bad) lret js push pminub imul xor out mov clc icebp or cmp xor in inc imulb stos pushf test test inc ljmp sbb cli adc mov cld cmp pushf mov jae je fs mov inc dec inc repz sbb loop jmp cwtl add fnstsw push fs xchg (bad) cmp adc hlt mov cwtl cld mov cltd cmp aas xchg test and movsb inc stos jns add int3 rcrb mov jnp fisub sbb push jnp cmp jne xor jmp decb adc fsubl push stos outsl sbb and in jns das mov in mov je push pop inc movsb jmp imull repz or dec and icebp mov in adc xor aam sub sbb neg imul xrstor je sete xchg add xor xchg add popf in or arpl adc jo fdiv mov out sbb je dec sub jecxz or stc aad pop mov pop lahf xchg push pop add add insl (bad) push imul adc sahf pop mov jecxz andl jo stos mov pop xchg mov adc xchg xchg pop leave jle loope and jb cltd mov mov add dec test daa push jae int outsb inc inc jl aad adc pop pop and and in adc xchg inc or (bad) (bad) dec or sub or push std or daa mov push gs shrb mov dec pushf cmp push add push insl mov push mov fstpl pop pop add inc sti xchg bound mov mov and rcr or movsl popf adc out sub lret sbb add add dec (bad) mov push sub cmp dec fnstenv cmp out (bad) hlt push push int3 in out stc or lods scas xor out out (bad) jno inc push adc mov xchg fdivrl jg sar ret in andl xchg inc jns shlb pop add add mov cmc gs or mov and xor cmp les cmc enter push xorl roll imul jns rcr push jp cmpsb movlps sbb xchg push sti jnp xor imul call inc pop js mov out dec jno aad xchg adc add lock pop (bad) rorb repnz iret sbb push das orl icebp bound js adc xor rolb mov ret popa xlat (bad) loopne and jecxz (bad) mov std sbb push mov sti fildl dec addb (bad) test lock add cmpsl inc jmp xchg jnp sbb insb rcr add dec cmc sub ss and test xor or or (bad) adc cmp lea sbb cmpl les or xlat out mov push (bad) das inc fimull sbb cmp add cmc pop call in bound add mov lret stc push mov inc in xor jle jle mov (bad) push push inc in sub jle loop add mov jne jmp rorl dec or xchg push sahf mov lods popa pop push pusha scas inc push xchg inc bound cli loope add add jbe hlt fldt xor adcl mov add dec xchg cmp arpl daa imul sub mov add jp jp cmpsb gs xchg pop or and add inc js or push pushf xor inc xchg arpl mov xlat push add inc stc (bad) out mov jge cld mov outsb scas cli ja loope andl in push pop (bad) jne jne lcall lcall fildll xor adc iret (bad) cmc push das lea sub jbe loope add push xor dec (bad) lods call jmp xor orl push jmp int scas xchg (bad) push inc es add (bad) daa les sub mov shll jl mov pop push jns es push lret add dec das cmc xchg in xchg out loop or sbb pop and ds jb lret lret lods or jbe sub mov add add jae mov and mov fcoml (bad) les sub scas pop lcall mov clc or ret stos aas xlat mov add arpl fsubrp mov jle pop fist adc (bad) (bad) mov sbb nop add adc pushl push push push mov test stos and jne cs pop push cmp jmp pop lret inc push in cmp data16 popa xlat mov cwtl stos mov mov or sub lods outsl shlb pop mov call jns leave pushf mov flds jns sbb push test add lret call cmc vlddqu cwtl addr16 inc cmp fwait cld dec jns dec scas push movsl mov mov push les adc je mov jne mov xor and out or xchg jecxz sub hlt pop call push popa (bad) fmul dec add cmp scas decl add add imul jmp test mov mov mov dec into mov decl add ja inc sub out sbb (bad) sub mov (bad) imul ret inc mov xchg pop pop inc inc stos xor jg jecxz movsl jl cmp int mov adc iret push inc ja add or popa xor or (bad) lds mov aaa pop stc push mov cmp mov in inc sbb das mov mov inc pop ljmp mov lcall mov and rcl scas rcl pushf push xchg dec insl adc push lret inc mov add cwtl adc popf scas add sti inc sub add pop sbb in pop pop xor ficoml lret rcr ficoml das retw aas mov lods sbb imul xlat push out je sbb pusha xlat das imul cmp push addr16 mov inc les addr16 std jp add lock mov jmp inc repz std lds arpl popf sub sbb enter out and fdiv adc aam gs cmc (bad) pop push xor push push rorl or movsl mov push in out shl in aam call ja add xchg push daa jg in xchg out icebp xor pop gs xor loopne int3 jne dec out mov add not mov and xor sahf outsl cli xorl xchg mov sbb test stos sbb clc cmc sahf push or movsb hlt outsb sub lods lods pusha xchg add add fdivr lahf add sub push inc es movsb push add sub rcrb nop mov jle mov adc and mov shrb and js,pn dec or bound xchg cmc pop jg xor dec dec inc mov inc xchg (bad) xchg inc cld sub add lret in lret dec in rorb fsubrl std or mov xchg push cli ja adc adc adc jb popf and dec cmp pop and push cmp and out stos pop cwtl outsl icebp pop out sbb jmp jp adc and xor add imulb mov fldcw inc xchg lds sbb hlt mov arpl mov outsb xchg aaa aas cmp iret fisttpl dec fidivl cmp fstpl jns call mov adc mov xchg mov movsb push mov (bad) in in mov loope loope cmpsb stc test arpl add sbb std jbe into add ficoml insb sub inc xchg dec out mov and push imul cmp mov xchg pop sub add mov lahf clc jne cmp mov mov (bad) divb sahf fidiv pop (bad) (bad) push fadds add mov lret (bad) mov sbb bnd mov fsts mov pusha push or adc das push or or mov xor insb rorl jb mov movsb hlt bound ljmp and jp cld mov dec xchg jno ret and sub sbb xor js xor pop pop test and repz push fisttpl or cltd stos or cmc sahf fs and ja dec adc loop jmp sub push jp outsl (bad) adc (bad) mov repz shlb popa adcl dec mov daa pushf mull inc lgs jbe xchg decl inc adc fldenv or pop adc xor sub cmp (bad) popf arpl test pusha lds or mov iret xor adc inc push cwtl inc pusha lods ds leave out aad jb push cmp add jbe or mov (bad) fiadd jne test and dec jb push mov mov jl lods movsb and or fcoml pop pop and enter adc lods jb pushf xchg aaa dec rolb lcall dec sub sbb lods inc sbb aam test sbb inc loop dec or xchg rcll jmp add push repz out mov mov sub push xchg fstps and shrl and rclb adc xchg movb and jmp loope xor add divb mov fldcw jmp into hlt mov ljmp data16 popa pop push pusha jb loope (bad) jno add add mov mov test jle lret out stos arpl dec pop inc sub pop fld mov jecxz xor pop daa jg mov xchg out cmp xchg ja (bad) or jmp inc repz std lods jl mov jo mov imul mov pop adc add add sub aam (bad) jp sbb pushf in xchg pop add fcoml pop add mov lret (bad) jae mov arpl fiadd pshufw pop bound xchg mov arpl jmp dec sub dec lcall cmp ss add add inc mov sahf mov das mov loopne aas jmp out (bad) fcomps push inc ss dec mov out xor inc mov jmp mull mov xor xchg shld cmc xchg xor push test or out andl je inc cltd cltd iret or loop popl iret push fs frstpm(287 clc cmp std jo (bad) and fs int3 mov sub lcall scas iret popa adc mov mov push xchg inc mov cwtl fstpt sbb push cmp inc std cld pop xor pop stc add je cwtl in xlat out (bad) clc adc aam add xchg xor add add push shl push sub jb jmp push inc cmp jecxz add adc dec push rclb xor mov mov add or pop insb adc pop aam into sbb adc xor xchg xchg add mov (bad) in in mov add pop mov lahf dec xor adc loope xor dec lret adc repz fs push bound mov sub je push or (bad) in test test sbbl lock inc fildl push (bad) adc jbe xchg or xchg sub add repz inc xchg sbb sbb sbb inc push mov mov (bad) adc cmp stos inc (bad) mov jmp jp,pn cs fisub xor int (bad) xor dec hlt add dec push aad jp loope in (bad) xlat jbe sbb aas test adc aaa or jg add cld fcmovnbe dec xchg ja xor mov mov enter xor add mov sahf push pushf mov mov mov loopne ror lods pop gs lods test movsb mov and sub fwait mov push push jp imul cli lods in subb add xor movb lcall jno lcall test inc mov push push and sub js mov std js nop adc add mov out je mov dec xor jge mov es push xchg mov xor jmp adc add add and rorl call push sbbl das jp dec sbb scas ret ja adc andw rcrl imul sbb enter int3 mov cmc xchg int and or cmp insb mov dec and scas xchg xor adc pop data16 add add cmovae addr16 fldcw scas insl mov mov add xchg pop lcall popf and in into rorl loopne push jb pop test add inc out push jbe jnp inc in outsl scas mov dec mov lahf ljmp mov popf divb jge popa add add in sub sti lahf scas xchg cld cmp movsb call mov jno bound push xchg nop xor pop push jne xor std prefetcht0 mov pop pop pop xor in out mov mov sbb cmpsb lahf sbb jge adc mov icebp and pop adc inc push imul add pop shufpd or push test dec jae and aas aaa pop imul jbe loop adc (bad) xor shrb rep lods xor pop call pop pushf int dec loope daa inc outsb push xor pop xchg adc gs sahf cmc in xor jmp aad inc leave lret lds js in out aaa add add add xchg mov nop cmpsb repnz cmp mov inc in test mov hlt cmp test inc sub jmp ja hlt lahf xchg js pusha jecxz xorl clc nop ljmp arpl daa jmp jns ret add mov xlat mov lahf dec ss sbb fcomip push into in cmp mov mov dec and or imul sbb sub cmp jp add adc test lods cli ja adc imul xchg add popf dec dec arpl ja xchg fldl aad imul and into add add and push loope fs aas adc push scas mov xchg js jae jge add (bad) aas subl or inc imul pop popa push inc mov xchg cmp mov add imul outsl or push mov sarb xchg xor push add xor sbb in in lret xor cmpsl fstl fwait leave xchg adc pop jge xchg lods xchg cmpsl mov add cs jg js,pt jno mov test repz push pop lret dec adc xor xor cli pushf dec and cli pushf test sbb xchg inc popa push fsubrs ret into fldl add add pushf popf sub pop adc pop test std fs fwait addr16 jmp xchg sub lods mov or das nop cmp dec sbb and xchg stc sub add in dec jmp loopne arpl in aas sbb clc xlat mov test add xorb pop push out fwait jge and lds (bad) daa cmpl and mov shrb pop ficompl adc or and nop iret pop lahf dec push and adc test js inc pop and int3 (bad) in dec ret insl cmp daa aad add adc add mov sub call mov xchg mov jb inc es and dec adc dec cmp pop add adc mov sbbl push data16 fsubl std js adc jecxz push into movsl test std fstpt out (bad) mov test add popa hlt jmp cmp pusha js int fist add je hlt sbb test jg cmpl adc cmp inc push xor lea jmp mov pushf lea jecxz mov enter lret adc dec test add pop pop push pop leave cmp mov add add add dec mov inc adc in jp pop insl mov loopne movups sbb cmp inc pusha (bad) sbb loopne lcall mov fstpl and and inc adc sti (bad) push add sbb sbb push and rolb insb add mov aad xorl add xor js push es lods (bad) popa pop pop arpl or pop sub stc pop jae,pn aaa lds sbb sub add lock add call stc cli xorl sarb xchg out push inc dec pop test gs xchg (bad) mov (bad) dec push mov (bad) fstpl (bad) test std or and pop adc sub aas aaa pop cmp gs pop mov xchg or in pushl lcall jge in pop rcll adc movsl add cltd ret sub lcall adc mov mov sbb add loop jae xchg pop sbb push sti lret push inc jnp mov js fimull add int3 or outsb movsb mov andb mov pop xchg sbb daa stos mov scas jnp lret sti cwtl jae insl outsl out cmpl negl rorl add sbb pop loopne sub add lret aam xor fidivr xchg enter add jno rclb (bad) dec mov xchg loope or repz pop inc fwait outsl sbb outsb ficom add cmc jo or sub jmp sbb in loop inc ljmp fstpl popf popf and in jns bound push add fidiv push repnz pop dec xor in aam test insl xchg sti dec in xor push xchg lret das pushf xchg cmp jge fist bound test outsl dec rcrb and adc sbb pop mov xor xchg dec add add out pusha mov mov push (bad) jg add pop popa mov gs xor insl push aam adc insl pop push push jo das jge aaa and cmp fwait imul adc pop cltd mov shrb inc jge (bad) (bad) rcll and add loopne dec es and cli imul iret sub sub stc lahf xor sti and fs cmp cmp push nop cmp popf addb ljmp in xchg push sbb sbb js cs (bad) jmp int imul call loope push cmp or sbb add pop inc mov jle inc lea addr16 mov sbb xor (bad) pop decl outsb pop mov fisttp dec imul jne mov in ljmp test add jp test cmp mov je ror pop dec out add push test inc push (bad) mulb ret push xor pop clc dec mov popa js test sub inc (bad) jl xor ss popl test jg push int3 cwtl imulb insl pop xlat imul pop jnp push mov cwtl mov sub inc adc in rolb add mov and xor mov mov out xor inc mov add or push lds add fs jmp fidivrl sub test data16 xchg mov or sbb sub fisubr repnz iret imul xchg mov mov cs lahf sti cmpsb pop jae ja cmpsl push mov popa aad add mov cmova or (bad) aas mov lods mov inc loop lcall push nop or mov push xor dec and xlat xchg fstpl jmp add push and loope lret push adc fidivrl pusha dec outsl imul add or idivb imul lods cmc mov xchg add rclb leave add mov push jbe out (bad) jo xchg pop xor inc stos je fsubrp mov jae hlt sbb add adc add scas lahf lock xor cmp push push and mov xor inc sub pop sarb add add add mov aaa sbb ja aam rolb std mov mov mov jp jns in add pop and inc fwait in clc push dec gs adc roll neg imul outsl scas stos cli push inc xor cmp or dec addr16 push lret repz xchg rcrb jge rolb add (bad) and mov outsb nop add pop arpl add in sti sar dec sbb mov ret loopne lret pop subl imul fmull sahf pop xchg imul add dec inc sub and sbb outsl push loope and jne cmp jb adc imul inc ja and dec pop daa addl int3 mov ljmp xchg jecxz loope movsl xchg sbb fcomps sub lods js push rcrb xor ja mov sub gs sub xchg add sub not out data16 or jge push addl pushf sbb pop lret into jne addr16 dec pop xlat not daa jno push and movsb popf outsl mov xchg and and fwait mov adc adc jbe mov cld js adc jge jnp or out lcall push test (bad) (bad) mov cmp push add fisubrl cmpsb sbb insl aas cwtl push mov aam dec and mov add sbb xor push sbb sbb adc int or mov inc popf cltd bound ret mov lret inc cmp xorl movsb mov lods or imul jp cmp add sbb push push cli ja and push mov lods or xlat pop pop fcomp inc mov jbe setae add sub daa stos lret push xchg add inc mov ljmp (bad) sti sbb inc cmp cmc xchg mov icebp cs in push fldt add xor xchg stos jae sub ja or aaa rorb in (bad) mov add jle adc (bad) in push fs mov and rorl xchg adc mov inc into cltd movsb or mov push aas out xchg les repz sub jecxz xchg mov inc fwait in push add sub mov in test (bad) jecxz xchg add call cmp jp add fstpl push sbb xchg orl or repz add jl jne xlat (bad) sbb or sub mov add inc dec je,pt xchg lea pop mov jne push cs ljmp popa push dec xor into mov jecxz sahf and jecxz pop test mov and xchg adc (bad) (bad) ja mov push mov scas iret aas inc xchg add xchg pusha add push sbbl es or leave jg loopne lea jbe in (bad) js push inc and pop push push sbb jno cmp inc and xchg mov sbb stos cli xchg jae xchg pop mov add lret lret cmp outsb and and jp or (bad) or jge add add push mov adc bound aad dec sub pop aaa aad movsb or dec dec jno mov add mov mov rcl mov fwait cmp and movsb pop sub mov int aad fs xchg hlt popf pop or out (bad) mov jne mov lods jbe adc cmp xor arpl add add jle mov mov mov mov jbe pop cmc push push mov sbb sbbb push std or inc notb sbb xlat test rclb cmpsb cmp (bad) lods xchg aaa sub out pop lret fldcw outsb fimull clc add xor pop add pushf popf scas repz sbb outsb gs test push jb cwtl xchg mov cmpl jb lock inc sbb xchg aaa pminsw add cmp push dec in out jmp mov jg and pusha pop sub push ret mov std inc sti fabs cmp jbe sub cmc sbb test in (bad) fiadd out sub and add mov and mov xor arpl aas loope sbb dec in or iret (bad) dec pop (bad) push into imul push push and or fwait mov test dec gs adc movups and add cmp xchg push push add mov ret pop call push xchg int3 jne (bad) mov in fidiv lcall and sbb lret adc jne inc or das in sub push fwait icebp mov insl (bad) cld xchg imul mov (bad) in pop xlat xchg iret fildl add adc push stos mov xor xchg mov jecxz test call and orl xchg cld mov jmp inc sub ret js xchg mov or push int in int3 popaw pop cmc push cmpsl (bad) dec cmp stc les cmp and add sbb es in inc xlat lcall xor insb push js outsl mov add xchg out xchg push or xor jno cmp inc xor dec mov loopne push stc push add xor addr16 cwtl add (bad) rorb imulb push stos and stos inc sbb jle paddsb add add or outsb jp push das into xor xchg mov push jecxz in cmpsb ret mov daa sub mov dec add outsl addr16 xchg cld rcll dec mov pop push inc mov cmpsb outsl iret inc sub ret mov out bound adc lcall add add (bad) cwtl mov inc mov popa mov in lock cmp fs and mov xchg sub ljmp cmp push lock lret pop sbb jg add or fstpl pop gs dec mov sti xchg jbe pop fild (bad) (bad) fildll xor data16 add cmc mov xchg dec idivb inc ret sti dec jae xchg insl mov dec (bad) cld xchg imul insl mov pop cmpsb mov mov push rcrb xor jp jmp lods mov lea adc insl or jb push push cmp stc mov dec orl mov mov stc pop pop test gs sub ja icebp and push sti or jmp (bad) sub jecxz (bad) add inc icebp cmc rolb (bad) jne inc loop adc sbb add icebp out mov (bad) cs shlb inc xor dec lret repz add mov push ret jne nop jg mov jg int3 out mov (bad) ret sbb les push das popl inc outsb jb mov push pop adc or les mov popa pusha jb or mov daa mov idivl push call mov add mov (bad) xor xor icebp scas pop and es mov push dec jne pop test mov insb push sub fnstenv addr16 inc cmp dec jno or repz into into fimul les (bad) mov add adc add dec mov ljmp fnsave pop movsw in pop adc push or pushl add pop decl js mov adc aad cmp lret xchg pop sbb add push stos sbb fisub xor add in out je fsubl cmp repz popf scas (bad) mov add jmp jmp jbe jno pushf (bad) out rcrl xorl icebp push add sbb jno iret pushf mov inc or aam outsb push push add in cmpsb push jmp popa repz movsl or into (bad) iret push push mov or jae push push movsb mov and les adc add add aam icebp cmp test pop (bad) xchg mov or test xor ret pop pushf popf and std adc xchg cmp dec sbb mov add inc cmc pushf jg xor out inc (bad) (bad) sti enter daa pop pop call imul add add das jb das imul push push shll je jmp or aad (bad) and es mov in jecxz jle adc cmp xchg stos in push or xlat (bad) xchg mov movsl mov ss mov clc cltd movsl or mov lcall add xor jle or xor sti push in dec bound mov sub xchg pop inc into movsb inc mov outsb scas stos cli or cltd (bad) dec insl (bad) repnz inc xor lcall cmp jns lcall jbe or cwtl in mov push sub test mov jb add jb adc flds sti ret fwait lret data16 mov (bad) fs in data16 adc mov jae fiaddl mov push mov pop clc mov cmp jne mov adc and mov adc sbb mov jne add cwtl leave repnz loop push push fisttpl or les or inc std or or push fwait in sbb jb iret sub sarl push and mov pushf nopl movsb pop jge xor fdivl outsb jge and scas mov add add imul add jl mov mov push pop popa xchg sti and stos jae or subb (bad) lods call (bad) data16 aaa aas sub iret fildl gs push push mov jmp shrb push pop mov inc sbb lods rorb cld add ss push push mov adc ja (bad) dec and xor jo adc lods jb mov int xor xor pop in (bad) ljmp push push and ss inc xor cmp jp mov inc arpl (bad) push sub cli or aaa cs nop inc ljmp add add pop fildl inc sahf mov ficomp (bad) icebp or mov push mov dec or inc jnp lock nop push mov dec dec cmc sub rol add or out je gs push jmp mov jg bound das sub xorps insb add fstpt out jns xor and cmp out sub lahf stc (bad) jb cld add cmpsl imul mov into loopne fwait xchg jae insl inc sahf mov xchg ror mov pop sbb jns cltd mov sbb mov ret cs pop jo into fisub xchg push add add js pop xchg pop je popa fs push ret sbb out adc mov stc fstpl adc sti sbb xchg roll push clc es stos inc cwtl in xor mov jecxz xchg xor ljmp and js adc lret push cmp fmuls loop pop cwtl xor add pop jge jne lea fdivl in adc xchg (bad) jbe jge and mov cld sub outsl stos pop pop pushf cmp mov arpl inc inc sub mov mov xchg rolb scas pop shrl (bad) pop (bad) adc jne or add add gs and push adc outsb enter jp imul sub jns lcall movsb mov loopne adc fistpl mov decb sbb in outsb mov and sbb xchg jmp mov adc (bad) pop loope adcb jp inc aad fsub add out xor mov or xchg cmp loope scas mov sbb aam loop jge jle nop hlt pop adc adc mov addr16 int sub xor lahf xorl fimull fwait pop inc aaa adc add cltd adc push imull mov mov ret (bad) loopne jg enter sub push leave xor fwait in aad or sub data16 jge pop enter mov lret (bad) cs push sbb and sbb (bad) aad or test mov add sbb add dec and xchg inc sbb (bad) jo mov xchg aaa jl pop lahf popf cmp xchg pushw jmp int3 in lcall push push xchg fucompp push pop stos mov xor xchg hlt lahf sub call fild ljmp and (bad) lock pop arpl add fldt cli sti mov fmuls stos daa enter insl rorb cwtl xor jnp xchg add pop movsl addr16 jle idiv (bad) popa mov push push fstpl or inc push nop outsl mov lcall dec sbb or lods jae mov add in call jne lret je mov js ficomp jge cmp sbb aas jb pop jmp pop bound and xor pop jl movsl js jge mov imul les (bad) pop push mov (bad) test sub push test hlt sbb inc jne mov (bad) mov xchg out cld dec cmc xor sbb xchg inc ret shrb mov pop lret nop or add enter and js jo lret inc cmp loopne popf add bound ljmp scas cmpsl jl adc and pop stc ret add mov stos mov jnp out lods mov pop call inc scas pop js outsb dec mov fsubs fist stc or mov loope or mov xchg in arpl insb dec sarb jge push pop rol cld xchg (bad) hlt mov mov fsubl and jg mov add add mov cmpl xchg mov jecxz jns pop mov mov jnp leave and (bad) ja mov sbb inc sub mov ficomp dec gs jo mov push fdecstp dec (bad) dec (bad) dec sub jl dec push xor mov push mov add cmpb push mov std mov aam popa mov or cmp xchg push push stos push jne dec insl mov dec dec aad in lret and mov fidiv mov or out gs or (bad) in pop lock (bad) jcxz mov out jmp sbb pop jl cmp ret mov add cld xchg push mov shrb rol popa pop jb mov add lds push stos jb push lea inc sbb pop jmp mov je or loop sbb sub mov jl add pop inc aaa pusha dec lea cltd movsl xchg lods add add jne pop jg sub (bad) int or sub mov out mov adc sub xchg imull pop jno jmp faddp xchg incb ljmp lahf and cwtl out test pop lea ja mov out jo sub int add adcl push and jnp sti dec push movsb mov std pop xor stos fucomip jb push jne fsubl ljmp mov add scas iret pop (bad) cmp jbe mov (bad) lret sub sbb jle imul dec pop xor insl xor cmp add out sar inc and dec pop adc lea inc cs or sub add or notb dec mov pop cmp dec pop and in jg ds push insb xchg or lock ret (bad) cld pop call pop hlt jmp call add add pop (bad) xor add movsl icebp fwait mov cs adc inc xlat je pop and aad ljmp xchg lahf jge mov cmp adc popa xlat mov lahf faddl mov stos push add test sarl in outsl addr16 test add add adc call (bad) andl sahf cmp mov add sub out rcrl icebp and mov dec ffree into les cli repz repz lret pop and pusha lods adc mov push add aaa (bad) lods inc loop xchg ja xchg mov cli data16 add fwait insl mov cmp sbb lret mov adc mov push cwtl jne jb adc outsl push and push stos and sti dec jno lods dec and xchg push add push aad cs sub lcall jne andl pop out add add add xchg loope clc jecxz sti rcrl gs mov push pop jp jle cltd sahf or cld push fcmovu std fisubl andb movsb bound sarb pop pop pushl lea xor sar scas cmp inc xor imul (bad) test aaa pop xchg pop cltd cmova add jmp clc or mov push lret lret inc sub int3 sbb imul test adc sbb pushf repz jnp mov add aas inc unpckhps movsl popf outsl push sub (bad) pop in push sbb xchg imul aad lcall xor pusha push lods fnstcw or add add (bad) loope das sub cmp add inc int adc push xchg xchg xchg movsl adc out (bad) xorb add bound repnz xchg jp insb add movsb or ja xchg inc out mov rol (bad) inc and pop cmp gs repz loopne shrl pop and and add cmp sub or fidivr das shll or push sarl int3 fstpt mov add dec es push nop or insl mov xor fstpl push mov jns or jmp lods lcall and daa (bad) popa mov lahf outsl cli mov mov sahf inc add mov add sbb std sub fdivrs dec call mov aaa dec hlt xchg rclb (bad) jno ret (bad) mov jmp push test (bad) sbb inc sub cmpsl (bad) mov jne mov lahf cmp jmp push lret add mov subl dec mov sarb mov sbb inc mov and xor cmp mov and and pop scas pop push dec adc js test xchg imul and jp xchg jge dec insl mov incb fstl push push mov jns add pop stc add add lcall sbb ficoml cs xlat into jecxz inc movl jo cli pusha push push add dec (bad) lods call fnstcw dec test adcl dec push ret repz push clc add jbe movsb xchg les imul out add add mov push jb or (bad) mov mov test lcall push push (bad) dec shrb adc imul ljmp xchg loop aas aas out and inc mov dec sbb sub jl mov inc sub arpl pop mov lret dec mov dec jp push xchg pop stc rol pop test jecxz sbb idiv sub leave leave shlb pop das in out imul in add nop adc push subl inc add test and iret jecxz outsb adc loopne mov add jbe xor (bad) ss andl mov rcrb inc dec sub xchg (bad) xor lahf xchg mov lret push push fildl mov jns test cs std or lcall lods jmp dec adc inc add test mov and cli test call pop call loopne bound (bad) cwtl cmp xlat mov lea mov inc mov sbb jl fninit jg add in pop push inc add jmp (bad) hlt mov ljmp cltd xchg add add aas sbb out lret dec ds ss stos fistpl test sbb adc cmp lock mov (bad) pop jl pop (bad) mov lods push fidivl in daa add dec jbe lret in in pop add inc fwait into xchg clc inc push pop loop add and dec jmp sub sub bnd add mov test xchg sbb adc fstpt xchg push fildll loopne jp cli or jmp ljmp and arpl jb arpl mov jns lcall and jo push xchg ds (bad) cli pop mov pop xor popa dec testb jmp mov add add push ja mov cmp jecxz pop psrld adc or out push (bad) lahf add jg inc and mov jecxz or pop aad xchg scas (bad) mov adc push arpl xor iret or adc cmp movsb ja aam dec lcall add pop cltd movsl mov mov dec or xchg xchg out pop sbb icebp mov in inc gs adc mov or pop lock in testb out (bad) loop mov push jae fstpl pop sbb je es outsb (bad) fist jb pop (bad) fildll lret add ret or and int3 jecxz jl mov sub mov lods test pusha (bad) push mov sarl mov (bad) popa push jmp mov jg fimull cmp mov mov sub mov shll mov jl imul mov andl iret in pop mov jns cmpsb push jmp les sti sbb into (bad) iret push dec gs dec int3 std or pushf sbb pop dec adc in rorb fcompl es dec push jns push test pop movsl loopne adc lods adc ficomp pushf popf add out in fimul sbb and pop gs fldl and jg mov push mov lods adc std adc add cld xchg (bad) popa dec shr test andb aas stos (bad) xor and rorl adc push push clc add addb add or mov push movsb inc push rclb cmpsl or sbb je add (bad) outsl shll mov fistpl adc int xchg lods mov dec ror outsl enter adc (bad) test enter jb and push lcall int pop pushf dec push loop add add insl add test add movsb pop scas adc or pushf popf scas (bad) ja mov aad mov cmpsb stc push (bad) in test mov xor inc cmpl out fnstcw xchg pop xchg out nop sub dec sbb stos or decb out je push and call and add bound sub push stc loop mov adc jge adc popa push lds out adc loop in loopne inc mov movsb pop adcl mov push stc dec mov fcmovbe xchg enter aas ret cltd sarl clc pusha in pop add mov jmp repz loope add or movsb aas mov jle xchg movsb in sbb sbb movsl jle out xchg (bad) adc sahf adc (bad) adc dec dec fildl or ficomp shl pusha leave cmc loopne out (bad) gs cmp mov mull xchg xchg repnz ret fsts sub xchg xchg xchg jo lahf std cmp add add push shrb out je mov jb add test ja js and fistpll jge xor aad xor movsb jb jg sahf test movsl dec xor sub inc mov mov cwtl popf push sub out push xlat data16 dec sub add add add add inc enter push lds inc test push mov adcl insl or mov bound xchg (bad) aaa stos imul es flds popa mov mov mov popf test jae jbe rcrl or sar bound cwtl cmp pop adc mov jmp test add cwtl xor clc clc cmp adc sahf cld js lahf into mov xor imul mov (bad) ljmp pusha cmp daa hlt sub cmp or adc dec cmp mov fidivl cltd and daa shrl lea rcrb mov aaa add add add aas and and pop mov call (bad) xchg jecxz ss inc adc rol cli mov in insl push std fwait pushf iret dec and out push mov in mov (bad) lods test bound mov and ss cmp jp inc or xchg fsts (bad) xor mov mov mov or aas mov mov inc outsb mov clc push push outsb push (bad) adc jbe in jbe aaa cmc push mov sarl cmpsb mov pop bound scas adc (bad) (bad) xor pop dec cs loope clc add push sahf hlt sbb int in jl iret inc cmp add add in scas jl std mov addr16 push or fcoms or jle mov js (bad) shr stos inc fimull xor or in fcompl cmp loop imul daa pop arpl and addl mov stc es lcall pop mov jnp jne pop mov pop add cmpl ljmp mov outsl cmp dec add daa jp mov mov push jo fisub stos adc push add js mov fcoms (bad) jg sub scas push pop jbe das out and cmp jecxz pop and mov (bad) ljmp add push mov add add push cmp cmc push int3 lahf adc (bad) jmp jg jle or mov mov pop push test dec daa and jg sbb (bad) xor sbb rcrb pop pop popf imul xor orl and fs int popa mov adc push cld push (bad) lret sbb and out movb cmpsb adc xor cmp sub inc dec sub jo push pop (bad) lcall mov sbb jo add inc sbb rcl out incl outsb shrl push dec sbb nop js fisubrl mov stos mov mov imul add add clc push and pop xor dec jb push ret fdecstp fstpt push mov jnp stos inc mov jmp cmp or (bad) imul jns int mov scas push xchg mov mov js,pn or xor in mov shrb js add enter add add loope jb mov jp sbb mov or jecxz cmpsl xchg cwtl dec sbbl pushf test repz pop xchg inc pop fmull jne or mov sbb cmp and rcl cmp or (bad) addr16 adc adc push cmpsl sub js shlb mov imul pop or add in xchg jne idivl mulb pusha mov lock mov and or test (bad) dec sahf xorl movsl inc jmp (bad) xor jmp rclb roll add flds dec out or lods icebp scas push inc or loopne lea mov int3 sbb add mov jle pop loopne mov test loop dec sbb adc mov jne lret jno dec push jbe or cmc fcoms jo add add or popf adc mov and imul mov scas jo icebp rcrl pop adc iret mov or push loopne fsubl mov loop popf push sub pop jmp mov adc jbe jg arpl gs and pop cli sbb lahf dec sub (bad) lock ja sbb rorl outsb cmp mov sahf sahf cmpsl cli push mov sbb sub popa add jbe mov pop adc sub in gs jo (bad) pop jg inc fwait in dec mov (bad) call jbe pop pop mov mov inc sub jl jnp mov xor xchg push mov in sbb aam sbb pop ret jae mov test pop ljmp lea popf lret xor pop lret jne mov dec std mov push pop (bad) or imul jb xchg xchg loop cltd (bad) and dec cmc and out jle adc popa fild add imul add daa add out jle push nop mov push jne stos ljmp insb push sbb imul pop repnz sbb push cltd cltd iret or rcrl jmp mov inc mov push test inc sbb dec pushf jnp bnd cmp cmc test add add or fldcw arpl fdivrl dec negb mov adc push jp xchg push add and aas (bad) mov add inc mov xchg push xlat push sti and ss js int3 jge lea sbbb jl movsl dec je push sub push add clc jmp xchg and ret aad mov jge lock sbb pop test or jo pop shrl push mov fcmove test push mov js add in lahf negl fs repz data16 add lcall lea les arpl push push mov or in cmp je cmpsl repz leave and ss and movsl xchg cmp adc push xor pop adc sbb pop fild mov stc or mov adc and fwait sbb popf lods mov aas pop pushf add mov sbb cmp mov daa lret mov data16 loop daa call and mov xorl jnp (bad) repz andl adc mov out repz jg push bound mov scas js,pt push xchg xor aam push cwtl leave dec ss add pop cmc sbb jmp sahf pop add fisttpll (bad) mov int in and fmull jp xchg scas clc sub lods and (bad) (bad) leave jbe pop pushf pushl cwtl sbb mov inc mov jno mov adc sar pop push sbb jno push loope gs rcrb rol lods test add xchg jle fsts test inc jnp mov js sbb cld xchg jp cmp mov data16 adc add inc insb pop ret mov push aas or mov jns imulb loop enter mov adc mov cld push add add mov rcl or cld loop cmpsb ret mov mov stc lods mov mov cmp jb jno test rep dec adc icebp mov clc xor aam sub inc and imul or sete xchg xor xor test mov popf in enter out (bad) ficomp call shlb fisubrl lods adc push jbe not (bad) in mov adc or out add imul aam popa and add add jb std repz jno pop mov imul out sub test (bad) jae xorl idivl dec xchg stos mov rcrb outsb inc inc jl add mov adc lret int xchg lods icebp test rclb push (bad) (bad) fstpl movl popa data16 mov mov icebp int or or add outsb scas clc stc les cmpl inc ljmp mov adc repz mov pop push inc adc push cwtl dec divb adc xchg arpl enter int3 xchg iret inc cmpsb test ret sti dec sbb fwait icebp inc imul imul push sub mov (bad) in xchg sub mov add add dec cmp sarl cld shrl enter fldcw andl sub outsb ret lds mov out mov pop sub mov inc lret adc jb nop dec dec cmp call (bad) and mov or or mov jnp mov out sti (bad) sbb mov or movsl or loopne pop das adc lods ja xchg add mov and pop loope or inc mov inc aad mov fs sbb jle xadd addl add or lret jno insl or xlat js inc enter add lret mov jae loope jge mov popf xchg stos call je mov cltd xor push cld pop insb fisttpl daa cmpl (bad) jnp rolb pop jmp fwait adc add fldl (bad) addb (bad) lret cld add xchg scas xchg jp adc clc cmp xor addr16 flds scas insl mov mov add nop pop xchg test pushf shll add xlat ret push or jg xchg inc movsb push push sbb pop test add inc roll add add push jbe ja pop in outsl lahf fwait sti pop sbb cmp add sti int3 inc cmp (bad) in and jl cmp das out nop ja cmovb mov and mov addr16 jg add jle or sub les cmp mov xchg out jg jns leave add sahf and iret fcoml pushf or xchg cmp adc add or sahf repz leave mov pop pop mov sub je push jp outsl dec rcrl adc xchg push sub sub mov leave xor pushf dec mov pop pushf cmc pop pop mov push add pop jp sbb pop pop jb mov xor add pop hlt and jecxz xchg jmp push jge int dec sbb xchg cmp push in sub ljmp fdivs push aas test mov fsubp mov or call outsb int mov xlat sub add xchg xchg or (bad) rol paddb push inc mov jmp push aas ljmp jnp fwait enter arpl cltd movsl int inc shll into dec or outsl cmp stc xchg or or mov jbe cld add xchg cltd jmp pop mov pop inc loope or push mul psubsb add add adc dec fs dec mov push push push add (bad) std int3 scas lea bound fidivr dec imulb in mov jns std js pop test ret cmp mov data16 in pop push lret (bad) jecxz lds dec mov jmp add pop mov int3 pop (bad) jbe xor inc cmp or mov pop or add jl pop shr mov lahf ja or pusha in test (bad) sti xorl loopne loope setno push das push js xchg and or and pop adc shr (bad) aaa pop add add push push push push cmovs ret pop (bad) icebp push push jns or add call xchg cwtl (bad) arpl jmp iret xchg test add lea add shlb insb inc inc aad pop pop sub movsl push fidivl imul lret (bad) test jnp add add dec and xchg das xor push fadds cmp out leave mov jbe jge push mov or (bad) cmp mov mov bound and dec jl adc roll notl fcmove lahf sbb enter lret mov add clc mov add ss test add inc repz cs (bad) and outsb (bad) insb dec push jp test mov outsb enter mov and mov inc xor jns fdiv jle jg inc or and push add gs lret pop add inc aas cmc (bad) repz out push jbe xchg push int add mov rcr ja dec cmp adc push add dec hlt mov add mov cmp test mov nop in cmc cmp mov cmp jg adc cli aas xchg mov sbb lds or je or add add and lahf xchg sub xchg lods mov add sub add push dec and pushf jp lret hlt imul jno in push mov mov negb mov rcll rcr and fwait jecxz iret pop stc es std gs add and out faddl in icebp inc (bad) jae (bad) lret push test jae jo addr16 ret hlt (bad) hlt and js sahf fsubl ss test iret fldt fdivp pusha arpl pop js pop jbe mov stos movsb jmp or fdivl jge push push push push jb add jb and jmp mov loopne cmpsb clc fldl inc cwtl mov xchg lods ret hlt faddp inc lds xchg in mov push psllq cs and stc cmc sub sub adc fstpt stos imul addr16 cwtl daa out add mov cmp inc das mov mov pop test pop adc mov pop nop push orl in xor or mov push das orl cmp xchg sub insl mov jg add fildll imul cli push sar dec call mov cs mov jns adc jnp sarb pop inc cs cmpsb xchg cmp repnz sbb (bad) mov (bad) or push pop das roll inc outsb (bad) push xor add into icebp jecxz data16 movsb inc std add dec sbbl rep iret (bad) fs cwtl jp adc pop jge repz add xchg sarl sub mov aas xlat cwtl (bad) mov out repz pop pop loopne enter mov ficomp jge fiadd bswap add push insb add dec sbb sub push sub stc jbe jns add xchg push and in test mov add out test mov jno dec ds aaa inc stos xor je jns dec aam xchg (bad) mov adc adc mov dec fisubrl rclb roll aam jecxz pusha in inc xor sub lahf cmpsl icebp and stc mov in loope mov add add fs pop nop js mov sahf and push setp aas inc ret sbb jg cmpsb pop add xor inc mov pop pop shl or enter pop ret rolb mov fisubr inc pop test mov sbb std dec (bad) enter add cmovg int3 xchg (bad) mov mov mov xchg js and fistpll sbb jle insl in xchg mov jge jno xchg xchg notb mov mov mov lea cmc sti mov fs xor js add pop (bad) popa (bad) scas (bad) xor stc (bad) mov dec mov shrb cmp mov xor xchg add data16 sti adc lock out cld inc xor mov inc adc call and xor push outsl cli adc inc mov ds push dec insb sbbl add into mov js pop sbb in jl mov movsl test adc cltd nop dec and sbb mov push cmpsl adc add sahf test sbb cmp jle xlat mov inc loopne mov cld push push inc arpl add out dec jl sub sbb enter enter push lahf sub aam into (bad) pop cmp mov dec jbe insb push into sbb dec and shlb dec adc inc adc stc enter mov and and push xchg outsl mov push xor fistp pop cmp add push gs jns pop lea ds je fildll repnz outsl cli adc test fs jmp jecxz jae xchg push in jg,pt dec adc cmp add jl mov movsl test std fisttpl (bad) stc pop push mov gs jecxz cmp fisttpll (bad) sbb sarl xchg add add add ss jle cld and dec xchg xchg add ja push movd mov dec (bad) jbe mov sbb movsl or or (bad) xchg ds js or js (bad) sbb sub pusha dec gs adc popa mov lret fdivl sti and pop dec cmpsl loopne (bad) leave popf out add xor pop int3 lret test xchg rclb in cmp and (bad) enter pop xor test jle dec jl popl jl pop lock fnstenv xchg popfw dec (bad) lods call pop out popa xlat jg fcomps pusha push dec and test fisubl push xchg mov call rcrl push out cli mov jmp mov adc dec fisubl mov (bad) mov mov out push push xor (bad) in pop sbb inc lret adc aas call cmp (bad) fistpll adc add mov aam xchg inc jmp adc cmpsl jne nop lods stos cli pop xchg jge dec insl mov idivb push and push data16 repz mov repz ficoml in xor ljmp lds adc cltd js adc add add add xchg mov rcll mov cmp and mov scas mov loope cmp pop loop cld in jnp cmp cmp jb clc lds dec dec fisubl push dec sbb push lret outsl mov enter inc xchg scas pop dec add nop add popl jns sub (bad) and mov pop scas outsb hlt dec adc xor ret and mov scas inc cmp addr16 imul sbb stc ficom inc xor int fwait and inc sti xchg test mov xchg jo stos lea or test pop xor add push stos in sti aad call pop mov std adc adc mov imul xor les and fidivrl sarb sbb mov xlat pop sub jnp cmp mov notl mov outsb add mov or inc sub add add loopne cmpsb cmc jmp mov add jb sub in xchg push lahf jno sub jmp int3 int add (bad) dec adc repnz repz out icebp out imulb push and out xchg rcrb (bad) repz loopne adc inc inc pop push and call mov jb aad xlat negl lods fdivrs push stos and sti dec xchg arpl sub scas addr16 (bad) xchg ret adc xlat inc imul jl sub xchg ret mov stc push int push jno xchg jns inc sbb pop cmpb fsts mov add add adc mov mov inc pop mov mov xchg and mov sbb gs jo xchg or into add ret inc and in ret mov mov lock sbb adc cmp push mov xchg mov outsb scas stos movsl push xchg adc add subl call pop ret ret test (bad) (bad) sbb in fcmovbe cmpl stos lea pushf outsl cli mov mov push out rcrb push jge invd mov stos js (bad) pusha push push orb lds data16 jmp imul (bad) jecxz stc hlt data16 xor jecxz adc add mov jg fsubr xchg loop sub jle add xor test inc push jo xor (bad) fisttpl mov cmp add data16 and enter lret iret or push and and jg add xchg push mov call adc ret aas int3 pop add pop (bad) imul xchg int adc fstps xchg mov xchg cmpsb sub sbb sbb mov or mov ljmp pop test stos (bad) fcompl pop sahf sbb sub iret adc js pushf scas cwtl push push imul ds cmp sti xchg xchg cmp push das sub out add add adc adc popa push (bad) jno jnp jmp add cmp mov stos xchg or das insb cmp fistp aaa inc mov lret jg add arpl lea (bad) mov dec xor dec cmp sub xor lea jl movsl or dec dec inc push mov cmp or jle aas mov icebp adc rorb and mov lock mov insl and or out cmp jp jns movsb imul pop fcoml je push fist jp add mov (bad) movsb adc mov adc out and ret out jmp add push (bad) sti enter mov mov jne dec (bad) pop and fsubl adc jg test lock out jmp loope jne sub add outsl addr16 (bad) cld sar test jne leave sub or das (bad) test je add (bad) rorb add pop adc mov (bad) testb movsb (bad) sbb sbb mov ljmp jnp int mov xor jmp movups pop outsb icebp jno inc xor cld pop call (bad) or and sarl fldln2 sahf test aas jbe add rolb sbb (bad) push add fidivrl xor inc movl jbe jmp enter xchg movb mov (bad) popa pop mov jecxz icebp cld jecxz loopne mov push dec push pop pop pop push mov jno call jo or stos loope xchg ret add push jb add lods xor mov aaa shr adc sarb lret loope mov ret stos (bad) adc stos dec rolb dec sub repnz pop test repz cltd stos pop mov lret aas sbb xor xchg imul fldcw test xchg ud1 cmp pop popa mov add mov jae pop xchg dec adc not mov jb int3 jno push and int fs aad mov stos lcall mov ret add lcall mov imul scas adc xor or imul push mov mov sub xor pop clc mov jbe add inc push test fstpt xchg out gs jle adc cmp cld pop mov fisubl fsubrs ss jb xor or and fcoml movsl cli movsb jbe and sub mov xchg ss repnz dec in cli js lret lds enter mov add mov in xchg xchg ds in push ja sbb loopne outsb push mov (bad) ds cmpsb pushf popf and (bad) jmp or inc cmc fiadd jo jo pop test add dec daa inc xchg xor sbb cmp negl (bad) pop and add push push push sub push lds outsl mov xor mov push test inc scas orl cld mov stos cmp in add pusha xorl ja xchg and mov cmp dec xchg dec call mov andl ds or sbb mov add (bad) dec mov mov add add test outsl sbb outsb dec dec mov push loop out fdivrs out push mov imul jg mov jge imul mov sub fcompl aad sahf mov (bad) xor cwtl gs scas out rolb (bad) lea cli imul call sbb mov rorl mov fwait or lods adc das cmp popa (bad) insl push lret jno xchg js and aas fistpll adc lods or outsl adc cmp test cmp jne cmpsb ljmp insb dec les fsubr sbb or adc loopne push call jmp or dec orl adc (bad) cmpsb jge in dec ja stc mov enter cmpsl into movsb pushf mov cli or (bad) loope xchg iret fs call pop dec int movsl mov pop pop aad stc cmp std jne and jo mov add arpl lret sbb sbb das popl sub es das push ja mov push cs pusha jo fsubl mov and or xor xchg loope add stos mov add or les test cmpsl add test test jle push stc push (bad) call mov push stos add mov jle cmpsb stos mov loop fsubrl dec (bad) sbb js pop subl inc ljmp pop test mov in pop mov dec sbb aaa fsubrl loop cwtl pop xor push sub hlt popa mov inc adc mov sub and add add inc outsb loop fist cli xchg add sub pop adc push bound int cs xchg fs add jg sti dec jae jo xlat into xchg sti add xor dec (bad) jl cwtl arpl and xor shl xor cmpsb (bad) jo mov fldl sahf sbb leave int xor add jp jne cmp mov pop (bad) mov dec sbb cmp pop jecxz lea xor roll aam mov inc repz mov dec fadds scas imul mov add outsl dec adc fwait lods cmp cmp shl adc dec xchg cmp add jns cmp mov xchg inc addr16 mov and sbbl adc jmp stos (bad) aam adc xor arpl adc dec inc (bad) cmp push inc js popf pop pop dec and add sub out je mov hlt mov and in fadd popl pop cmp fcmovb and ss pop jbe loope hlt sbb icebp jge mov xor fwait sub xchg lahf pop mov out (bad) fnstcw sub xchg mov mov ror call pop sar scas ja jo xchg push push in xchg fisttp push mov push les add ror dec xchg int3 ret popf pop cmp adc (bad) insl push and andl adc sbb add pop repnz pop mov outsb push add inc xlat push adc lcall push mov jbe pop push jge and outsb fild mov adc dec jne repz push jge aas or add rcrb jae ficom mov xor xor mov shlb mov pop jg stos popa les scas jb sar inc sub mov push mov inc ficomp pop stos cmc mov (bad) insb sbb movsb sarb xchg (bad) enter imul cltd movsl adc fwait add ja (bad) lret jnp xchg outsl cld dec jne dec in cli js inc sbb dec pop jnp in push sub xlat mov mov add cli adc dec (bad) xor push push pop pop enter mov adc lods pop mov leave popa xor xor insl jl cmpsb xorl add or or push loope cmc repz xchg (bad) jecxz sbb (bad) shlb mov xchg loopne pop fcoms jno cwtl cmp orl xor call mov mov aam ja jmp mov and jbe mov lret enter add ss inc cmovno dec pusha in cltd jo mov jp inc push adc push mov mov (bad) sti push sbb ljmp mov ret sub imul or cmp cli sbb add add daa mov cltd rcl xorl add add push xorl pop pop or sub je hlt sarl sub ljmp nop xor mov pop packssdw xchg and cltd cmpsb (bad) mov test mov gs cmp add and les sub mov push mov push jbe add add mov add or daa (bad) mov rcl mov and test mov cmc xchg inc dec mov xchg mov sub pop (bad) test jbe xor mov out sarb test in mov movups dec out cmp sub stos nop or cmpsb andl add inc ljmp fnsave into jne int3 or mov jnp enter jb into gs mov and jl loope and xchg mov data16 jnp ror cs or sbb aaa add mov xchg cs lds mov adc loop aaa imul dec roll ss and hlt (bad) mov xchg hlt sbb (bad) mov inc imul mull xor test mov inc jne (bad) (bad) insb test sarb xchg scas mov or pop pop (bad) and je xor push adc cmp jno and test daa sbb aam pop mov xchg jmp push add dec insl mov add popf and or and push pusha shlb jo sti lret lret adc enter popa fistpl arpl sti mov xchg pop add inc sub stos lock fcoml (bad) cmpsb xchg cmpsl dec xor cmpsl adc or rol mov push aas int3 inc add xchg sbb (bad) cmc sbb xor clc mov mov ret ja and add jg sub mov sahf in or mov stc or lods ss xor (bad) and xchg sbb sbb add cmp fwait in repnz fcoml adc mov (bad) popl xchg jge dec insl mov incb sbbl pop push ds jns rcrl add jmp enter cwtl popa mov adc ror imul add add je push fidivl jns or (bad) cld xchg push add push test fsubr inc and rclb inc mov cmp loop xchg (bad) inc inc xchg xchg jl jno cwtl jg or das dec pop in jp,pn dec (bad) mov lods in adc dec fimull in sub idivb int or add add outsb pusha in test sbb add mov mov sub pop fsubrs sub repz mov aas mov mov sub or in neg pop jno jmp movsl jle sbb imul dec ljmp and into jb (bad) in adc call and add adc xorl push ret sti dec lcall pusha mov jle adc and mov loopne fmuls cmpsb lret mov mov jmp push test xchg movsb dec add repnz cltd cmpl lods mov add add (bad) mov lods mov inc aas call loop aam sti cmp or pop aam add cs cmp xlat jns or add lret push push mov test in mov pop in pop je xchg mov scas std lods in jno mov cmp add add add inc pop js mov push mov ss mov stc rol js or ret rolb mov jnp adc sbb xchg pop push inc rcll jnp adc flds sti ret xchg sub push mov and xlat das imul insb push dec or test cld pop inc roll jbe inc sbb add (bad) test and push cmp out push divl std bndstx lahf stos mov aam scas mov mov pop fidivr inc sbbl lret inc dec les cld (bad) outsl inc pop add push mov gs jae fwait push aam push mov add insb and popa xor dec add cmc inc sub sub sbb mov xor out sub sarb lcall sbb int daa lret xchg mov ss push cmc push pop arpl stos nop cld test mov gs ret pop cmp xlat das imul outsb scas jecxz xchg loop icebp xchg cmp and jae fidivl rcrl xor out divb inc jne loopne or scas (bad) cmp sti and xchg popa in int cmp in push dec imul jb mov sub mov sar lods mov add inc push cmp dec adc sub movups outsb les cmp shr (bad) mov pushf fs push sbb repz rcrl sbb add or add enter fistl subb (bad) sti and stos test add add jge subb add les mov in cmp push pusha cmovp aaa cmpb inc scas add loop insl add rcl mov jmp xchg jae sbb add dec sub into loopne pop mov sarb fnstsw adc jne add add pop lods icebp and push mov dec sub lock pop fs cmp lods into fiadd push xchg rclb outsb lcall xchg rorl push sub dec fist scas and lods and mov aaa jle (bad) xor mov push fbstp push in gs pop cld in repnz (bad) stos add add add or or mov push arpl and (bad) rorl jne pop lahf xchg cld inc fsubrs cs jmp in fsubl bound inc (bad) xor lea jg push popf mov xor sbb test scas push push loop cltd or inc mov adc sbb mov inc popa sub xchg mov mov pop test insl dec repz mov push repnz pop push inc xor imul xchg clc ljmp (bad) nop in xchg sti mov mov test mov and xor sbb xchg inc addr16 mov pop lahf pop and sbbl add add or adc std (bad) (bad) hlt pop xchg in xor or aad pop and xchg mov sub sub cmp idivl adc aas or popa dec (bad) mov mov (bad) in lcall push ret inc mov mov sub mov in jbe add jmp (bad) inc inc das pop in cmp test pop daa subl xchg mov insb (bad) sbb lea dec xor sbb jbe lcall out mov lea movsl mov mov icebp int3 or ficomp add test in dec cs add psubusw mov call pop pushf popf test add popf lret and mov xchg push push sti jne and roll or mov mov in cmpsl ds stos sbb je js adc mov loopne dec (bad) sub xchg fsubl and movsb and mov add dec ss aaa inc stos fabs fldt (bad) popf call rcr sub push mov sar xor mov fnsetpm(287 dec fisubl add dec es mov pusha (bad) sbb lea xor sbb clc cmp mov cli (bad) jae or movsl mov mov icebp int3 or add inc adc ficomp add test in shrl popa mov cs fcompl fscale call lcall push jno cltd push push bound int pop xor mov in out cmp scas sub lock jmp add push push push in out ja fucom iret imul loopne and push stos jno xchg xor loope jne push daa jle (bad) call push mov cmp push sub cld add insb ja imul leave movsl rclb roll mov (bad) sbb mov mov add add cmp mov lcall lahf movsl dec dec push push leave outsl sbb gs pop pop ret and (bad) lods nop mov mov addr16 inc ljmp mov dec or push sbb pushf mov push es addr16 push or icebp fwait jg add add push mov xlat test and xchg mov (bad) (bad) cmp and jecxz (bad) aaa add dec adc pop sub mov mov stc push sub aad mov cmp cltd dec js nop cmp insl or inc loope inc pop jl pop stc es dec addr16 in sub pop ret cmc loop or ja push inc repz lcall (bad) dec pop sbb sub jle nop inc ljmp addl fwait sub adc inc loop push (bad) in mov push push jb sub lds add inc call movsl mov inc and or add add xor out push xor xor inc sbb js sbb jl popl jge jbe scas icebp ret in pop sbb imul (bad) mov mov das scas into das imul jns stos jno ret out mov inc pop pop dec clc mov (bad) test outsl xor mov mov add xchg cmp stc cld outsb xor push bound (bad) xor xchg cmp fisttpl cmp pop ret mov test movsb pop jb cwtl cmc push inc push dec cmp imul pop mov fwait in sub xchg scas (bad) aam push inc xor add loopne inc movsl jle sbb imul add jb call call adc pop push lcall and adc arpl or xchg dec sbb popf push in outsb cmp sti (bad) mov ret imul test fsubl in xchg (bad) cmp mov push cltd xchg (bad) sbb add add pushf add mov xchg and jl stc mov inc scas mov sbb js les js scas out fucomp (bad) sbb xor mov hlt sbb xor or cmp out sub in aas push std jo out lds fs push mov sub add add icebp or pop out pop (bad) lret jmp outsl scas stos cli push xchg adc fnstenv add pop repnz test mov and sub inc jb mov sbb aaa push out add push lock rcrb inc sahf lods inc inc jnp jb loope mov cmp addr16 or imul js (bad) popa pop jb mov mov lock ret dec bound fistpl js andb cmp adc add leave push loopne repnz jnp jb mov sub shr fs imul out add adc push (bad) int3 cmpsl mov dec pop adc js add or lods cmp test dec adc out jle cmp mov dec mov push add push loopne mov pushf lods pop insb xor mov setnp push push push fiaddl test push push shll cs jp mov fistpl jne add mov add add rcrl (bad) je pop push cmp and jnp (bad) jno out cmp dec mov dec push push imul outsl mov test mov sub mov test arpl mov pop cmp outsl pop pop test call adc loopne call push or jg (bad) cmp xchg (bad) fwait lret jo xlat (bad) fs dec fwait out dec (bad) jp aad inc aam pop mov loop adc addr16 fcmovu add lock mov add movsb pop (bad) incb repnz jecxz cltd lcall adc add add xor (bad) outsb andb jl jmp jnp stos sub shl cmp test xchg loop rcll mov sub ljmp fmull cmp push push inc stos mov xor je or sbb xchg jle test das push mov dec xchg jg and add xor lea fwait mov sub cmpxchg int lahf xchg (bad) mov cltd movsl pop push sub cs cmpsl dec rolb xchg adc test aaa jae xor push inc in lods rcrb fsubrs xor loop jnp scas rcll pop icebp leave sbb pushf dec mov pop pushf push out push aad or mov mov (bad) adc (bad) mov (bad) mov pop bound js cld xchg movsb repz xchg repz xor xchg lret jg push push (bad) mull cmpsl mov in mov mov push clc jecxz cmp adc pop xor jl add dec or out xor mov mov sbb push bound int3 insb add sti jp xchg cmp int cmp in jge fsts add mov adc dec sbb xor xchg jle int out iret fwait and fnstenv mov sub xchg fcomps dec loop push mov add add aam test push lods repz ljmp fnstsw adc inc add mov (bad) stc push mov and jb bnd ljmp loope xor inc outsl lods test mov std js pop mov jle or data16 fistl inc mov add xor cmp pop add dec sbbl popf in mov cmp imul adc cltd dec xchg sbb adc dec arpl jecxz bound int3 xor cmpsb push inc aaa leave repnz ss es xchg add fidiv adc or pop test repz add add add xchg cmpsb sub aam push jp jmp xor and ror loopne,pn jns popa mov dec sbb inc sahf jbe ficomp test pop add xchg mov pop (bad) rorl xlat lret xchg mov (bad) adc cmp sbb add add add cmp push out je fdivrl mov and dec daa scas and das xor mov push loope jne hlt xchg gs nop cwtl mov xlat and les or jb mov ficoml cmp push movsb mov roll mov dec out xor enter add or sahf imul and xor xor insl or aam pop mov aam push icebp lret dec hlt out imulb lods sti ja test adc pusha sub (bad) sub fistp jg and rorb and sarl lcall add lods add ror xchg fwait mov sbb sbb xchg xchg ja dec add ret sub or cmp test lahf scas sub aad mov aad fnsave (bad) jbe jge scas mov loop (bad) xor cld inc cmp repnz push push dec xchg cld add out jmp pop jnp jle dec xchg out cmp cmp xchg or cltd dec add or and into pop sub inc xchg pop outsb inc push clc (bad) icebp mov dec mov inc sub lret cmpsl incl lret es sub (bad) out or sbb int ja cltd and adc add jns or push lret and dec push cwtl in mov jle lds ljmp rcrb push jl jge mov stos push push add sbb out je mov add and pusha fmull cmp mov mov or (bad) jbe xor push pop mov add (bad) add mov dec xchg cld add movsb or sub les sub mov pop push test sub mov lods icebp dec mov leave imul arpl ret pop add pop aam push (bad) cmp mov sub cmp loop inc loope out fxam jecxz ja add mov ljmp sub arpl dec dec fiaddl clc scas xchg xchg cmp sarl pop xchg rclb fisub int3 pop repnz mov xchg sti dec sbb lods nop lret out xchg cmp push cmpsl mov data16 in push (bad) nop iret fistl push nop and sub add inc sub sarl xchg imul mov aad xorb in popa mov pop insl fwait outsl sarl push gs fidivl test xchg mov mov lcall or dec mov lods icebp pop pop cmpsb mov inc push jb fisub xor in fs ficomp mov loope loope es jbe repz sbbl ljmp fs pushf popf and in pushf cli push pop and and jo (bad) aaa andl or jecxz cmpl fwait dec push inc sbb movsb add sub cli (bad) xchg cli push xchg cmc lcall add add ljmp cltd cmp add jecxz rcrl cmpsl dec xor f2xm1 push adc fsubr or sub jnp jle add orl insb add add fisubl or sub dec cmp dec rclb icebp mov adc sbb cwtl lea add ror scas adc lock std or or dec pop inc dec adc aas xlat xlat arpl xchg test cld cld inc or outsl mov ljmp fsubl (bad) ss pop stc cmp sbb add in lret adc jne inc mov add adc in cmpsl cmpsl add mov stos test push leave push ret jmp stos hlt mov ljmp mov imul cmp xchg mov dec bound adc sbb fwait xlat mov pop inc sub xchg ffree mov lods push mov fisubl imul mov out jge add mov pop aam xor add jg jns push xor mul inc cmp aas f2xm1 sbb cmp pop mov lea jge inc pop sub lcall xchg xor xor outsb push pop call dec adc divl dec (bad) and push add add and pop jo iret movsl popf adc decl push mov inc ret xchg xchg push aas std aad jbe mov inc insl sbb cmc push mov mov mov popa mov pop xor inc andb cmpsb add or xchg mov ds in sbb popf outsl insl addr16 dec repz sub inc push rol add sti mov push pop out mov (bad) xchg mov leave movsb cmpsb push jmp ja xchg mov adc sub mov fistp mov decl ficomp push popa xchg ljmp ret lds sbb lcall pop push ficompl test push daa mov jno xchg rcll mov mov mov adc xor mov mov push lahf jp sub inc nop arpl repz xchg cmp imul add and out je test repz out (bad) notb jno add stos mov fldl add add mov call or popf outsl into mov mov stos mov inc and scas lret or out dec cmc sub xor and xor jle inc pop sbb sbb inc lret jb les cmp xchg ds jbe addr16 mov lea add dec pop hlt pop insl add adc dec xchg loop sub sub sbb pop dec adc (bad) aas jmp xchg add fwait jns test push add dec lret push inc cwtl in xor pusha push enter dec fwait push push jnp aaa test sub fistl ret subb call fadds adc ljmp adc dec xor xchg pop sbb stos cmp outsb sbb xchg test mov adc in or cltd movsl push dec xchg cld add ss and sbb pop shrb nop sbb push insl adc lods mov dec ret mov aad fild add xchg mov (bad) jnp xchg imul adc (bad) push pop xor sarb pop mov negb movsl fwait aas xlat dec popa mov mov pop pushf (bad) bound push push push test shll adc mov mov mov sbb push adc ljmp je add sbb push jle add cmp push movsl imul (bad) pop inc cmpsl (bad) popa and sbb (bad) mov (bad) jbe mov out imul scas xlat sub je or out ja mov push test enter xor in pop sar dec (bad) sub add add jae mov lret jp jo lret push rol dec movsbl sbb call inc popf out call cmp mov lcall insb dec pushf (bad) sub jns push test push mov loopne inc or mov jns sbb pushf mov mov lret add add jl test dec fwait rcr arpl das push adc es cmc push jnp insl jmp inc or imul mov (bad) loop pop xor pushf pop pusha push shrl es sub test pop xor (bad) std push cmpsl ret (bad) and pop hlt cltd or roll dec cmp fcmove add sub inc sub pop (bad) data16 enter cmpsb sub insl movsb scas pusha popf add fcmove sub mov adc inc lret imul ret dec addr16 lods stc (bad) cli mov jl lret jmp xor mov cmp mov xchg inc xor add add jb or cli fwait push cwtl out jb sbb sub jmp test pusha xor movl push mov push loope test push std fildl out (bad) sbbl jmp xor lods mov out or inc add popa add add movsl out dec mov jbe cmp xchg (bad) cmp and cmp lods xchg insb cmp lahf xchg aam xor dec or xchg arpl movsb jno pop xchg lods jp pop dec dec insb (bad) ret fcmovb aaa xor ror fldl or out dec and les inc xchg pop mov sub imul add jno adc cmpsl sub mov dec pushf popf mov imul and mov ret mov lcall fistl fstpl dec dec decb push sub mov cmpsb daa pop adc data16 adc cltd scas push or aam fsubr inc cmp popa add cli push bound (bad) fcomps push mov xchg orl cmpsb xorb jne out sub inc sbb scas and sbb mov pushf jnp mov popf (bad) mov lods fwait and cltd addr16 lods xchg inc mov (bad) fstl js movsl add dec dec push push int3 or inc aas mov out and clc sub icebp pop inc loope (bad) mov in push mov cmp pop mov pop pushf push out or ja mov out pop mov lcall sbb add ja jno jecxz mov jns repz add push js jbe or cmpsl mov push lcall cmp out int3 add jno pop test ret dec fidiv cmp popf (bad) out and test mov cmpl and dec mov jmp shr jmp xor push clc call adc cltd es mov add add ret cmp inc dec andb mov lahf int3 cmpsb call adc xchg inc inc mov xchg mov jp jecxz add (bad) mov popa and push pop dec aaa cs xchg inc ljmp fstpl pop fcomp mov ljmp xchg cmp inc stc dec lret jmp mov jp arpl popf cmp cli (bad) pop shrb cmp push or iret (bad) jge mov (bad) popa pop and data16 js push sar aas loop aad cli mov fnstsw stos inc arpl lods test and inc cmc sbb cld push gs int3 and jl sub add loopne mov les lods bound inc jnp sub jmp (bad) sub shl rdtsc xor movsl add lcall sbb dec lret out xchg cli or hlt push xchg adc mov rcll pusha fdivl add add je clc (bad) fildll push pop bound ror push jecxz sub lret loope cmp mov sahf dec lods adc jmp (bad) mov js cmpb sbb xchg push imul lods dec xor dec cmc or movsb mov roll xchg lods fs push cmp add add xchg sar or clc aaa xchg pusha xor out in std into loopne js or aad (bad) sbb xor repz rcrl adc cld push orl les mov inc push or int inc fwait mov push (bad) cmp shll mov fcomps fwait in cmp clc stos pop icebp mov std movsb or lea pushf push out push into push mov stc fmuls jg lcall mov mov jo fs out shrl sbb js stos add dec fisubr cli mov cmp push roll out push sahf mov das daa cwtl das imul cmpsb ret cmp add add or ja in jmp add notl ret inc out (bad) mov shrl shll roll or jmp adc jno inc xchg lods jp ficomp cmp (bad) es mov (bad) test test sub xchg jb add mov nop sub sbb (bad) movsb nop mov jno dec mov add es pop inc lret les add xlat jl pop jg xchg sub jge neg fwait (bad) jo (bad) or inc mov lcall pop test repz mov add mov add add sub add mov pop mov in adc and dec ss ss stos cmp mov cmpb loope xchg dec cld adc mov imul ficomp icebp mov mov dec (bad) fcomip mov lahf xchg xor push dec lods mov mov jns or cli push js inc inc and into into sbb and dec mov (bad) xor xchg repnz push cld jbe cli or and mov decb stos pop and and pushf xor add fldl dec jo push call mov nop mov movsb dec push ds dec add jl popl inc jnp lods mov mov ja dec or outsb sub cmp push iret cmpsl andl push xchg cmp or dec push sti cwtl leave xchg add mov adc pause cld add fisttpl daa sbbl cmc xchg aaa test ret loop cmpsb adc enter add stc movsl or aas cli inc imul cli lea xchg sbb push gs aaa fs inc mov lods pusha xor leave ss jl bnd adc clc divb test cmp xchg mov repz mov adc addl add mov and fstpl fisubr outsb sbb jns pop mov out int imul mov sti mov jb sbb sti scas jl outsb (bad) cs outsl jne fmull shrb mov xchg cmp into add or sub add xchg lock mov adc add mov push fisubl subl jl jb std add mov lea fwait push xchg int3 das (bad) (bad) dec loope mov (bad) xchg dec dec imul int3 into adc pop (bad) in jns or movups jb lock pop dec jge dec rclb lahf adc dec jmp je push ja adc ret cld mov adc or test inc mov call test hlt iret inc daa std js popa lcall add daa loop sub (bad) out gs gs inc sub pop jl add add xlat jbe ja hlt mov push data16 mov and adc les js xor pop (bad) xchg mov loopne sbb pop sub nop sahf push hlt xchg fsts adc sub js dec in mov icebp mov fs into imul add jg cli (bad) inc in jo lock mul psubsb sbb xorl and inc add mov and push and inc mov negb stos addr16 sub add adc push fcom mov cmpsl popa pop cmp push sub add lcall aad cmp dec std gs cmp lods ret dec (bad) fldt movsl and and or clc sbb inc push insl mov call inc adc sbb inc call dec or xchg xchg lret cmc pop jg mov je cmpb int add dec dec pop xor cwtl mov mov popa out and xor cmp lcall dec clc ja in cmp mov ljmp loopne shlb mov or cmp xchg jge pop stc pop dec pusha rorl enter inc (bad) aaa sbb adc jb add add and pop bound lods call pop int xor ret loopne sub sub push mov cmp push test xchg jle lock popa shll imul jle adc xlat addr16 or movsl fisub and jle adc ds cs pusha mov test sbb add out cmp into dec jno lods icebp scas jl add cs xchg cmpsb addr16 and mov pop scas inc mov out mov out jge and (bad) jecxz push test mov and mov cmp cmpsb mov sbb inc xchg pop mov add adc push add cltd jmp fbld inc lock sub mov sub sbb push push xor ja push (bad) notb push data16 stc inc aam push fimull es adc add xor add sub and lcall outsl ret add mov and out sub fsts imul pop cmpl jns inc ret imull popf loop lea or lds xor bnd xchg (bad) lcall testl adc jmp fisubr scas in add shrb xchg nop add sahf sahf call icebp (bad) rolb sahf aam cmp mov and adc and inc xchg pop fldt stos js rorb pusha xchg dec call add leave rcl adc mov cmp stc lahf scas inc mov ret jno adc add notl add add dec cwtl jg (bad) add loopne inc sbb test push bound xchg mov aas xlat xchg mov mov and inc ret movsl pusha loop dec rclb insl lods push jns orb push std or iret sbb mov xlat inc sub gs adc enter xchg add add mov xchg leave cli or xor adc xchg add ret and nop stos out jns push push pop sbb stos lea pushf in xor (bad) mov inc ret out jp in jg lods adc std sti ret scas adc ja mov pop shlb in scas data16 loop daa out lock add aas or sti add fs mov sbb loopne cltd jg rcrb cmc mov mov pusha xor into fs sahf shlb cltd inc and xor in push jg movsl or icebp out and rolb add orl mov in lcall jnp sub test mov cmp out add dec push mov inc push in jmp inc xor xchg das mov test dec push sbb pop push popa jb enter xchg inc fldt ss lea lock pop push rolb add mov inc pop xlat sub mov mov test jo test mov adc mov loopne lods sbb or cld dec and rol or jae inc test push test into adc adc test iret negl call stc je (bad) mov (bad) (bad) aaa loopne push call out pop int jp adc sahf test or loope in xor fwait mov pop adc mov inc xor pushf pop mov rcrb test xchg scas lods decl aad xor in rcr add mov dec pop push das ljmp push push xor or adc mov movsl push fstl dec and daa enter cli jmp test add insl push sbb in xorl aad insb add aaa call insb or add ss outsb adc out pop pop sub sbb adc test pop lret (bad) std xchg mov or xor ror add outsl sar inc int3 fimul (bad) adc repz or cmc sbb pop hlt push push add dec insl jg loop imul and jne mov add add or pushf std ret in cltd mov xchg scas pop leave daa sub leave (bad) dec (bad) sbb or pop and stos sbb into add mov stos mov xchg jle test stos loop and jmp xchg cld adc popa and pop mov jne or popf cmp out mov cmc mov addr16 and push push or es pusha (bad) cmc mov daa push mov xor xchg es xchg std cmpsb int3 jo jo push test inc test js mov cmpsb lahf popf ret je sub outsb out sti mov int push rolb xchg (bad) cld nop or add mov test std mov sbb mov pop push lods push sbb mov mov cmpl push jmp adc mov lds or xchg jle sub jae sahf sub cmp jmp add add mov call fisttp cld cltd fwait stos xlat jmp xchg imul out insb mov sbb sbb test xor push imul xchg cli jp pushf inc fildl cmp mov cs pop repz lea pusha add (bad) call icebp or pop lcall sarl loopne xchg add pushf pop mov pop pushf push and or jp sbb orl fidivr push into addr16 dec jmp xchg test stos lret pop pop push inc in jp loope dec sbb cli sti ret xchg push cmp mov add add adc aam addr16 jnp fcmove jb lret (bad) insl adc mov cmc push clc jecxz (bad) xor cmpsl sbb in xor jne into ljmp jle xchg leave in xor dec and fcoml dec insl inc js cmpsb dec fwait (bad) cmc jbe and mov orl sbb cmp mov adc pop inc inc testl and mov adc lock cs fsubr cld sbb pop pop dec (bad) cmp gs push dec push push jmp sbb adc ss add mov popf rolb and das and jo inc in xor pop insb cmp pop push or mov lret xor stc lahf rolb or adcl jg clc movups aam cmp mov push adc inc push sarb fs add inc jbe sbb jnp mov xchg xchg add adc out fcoml jne js test inc jb jo push push gs mov mov push sbb add (bad) mov push into xlat dec dec icebp add test shll pop dec sbb xor mov mov pop outsb fwait ror aad pop test dec jl add jb and loope adc sbb (bad) inc add ds sbb int (bad) xchg (bad) mov or pop push cs loope sub mov stc lahf scas std insl rcr cmp add fstps lcall cwtl jg inc gs sub and sbb into mov sbb cmpsl jns dec scas test cmc mov (bad) loop cmpsb xchg sahf mov jae cmpsb add jae mov lret in mov xchg js or into or jns mov call sbb pop xor jae out push mov add add ret pop aad (bad) fcompl mov add stos inc push adc adc pop dec jae adc mov xchg pop push xchg inc (bad) mov mov dec es sti add aas or test mov enter pop cmp aas fadd das sub push test in cmp add lcall cmp add xor mov dec pop mov into aas cmp fs push fwait insb inc mov lods pop shrl pop pop in mov fwait dec xor or cmc cmpsl dec ret xlat sbb loop and xor mov mov jnp adc fbld pop (bad) mov arpl add inc mov stc loope xchg mov push pop repz inc out lods adc or pushf popf mov or cmpsl fsub sub fsubs inc jmp mov jbe lcall add pop fidivl adc cmp push cmpps jge push stc enter add shrl cmpsl add sahf das sub sub sti push loopne (bad) jne in popf nop (bad) fldcw xchg enter push push cmp mov inc sub xor fimul lahf cltd arpl pop mov jnp inc push adc cmp xchg xchg add (bad) stos add push fcmovne pop cmovb (bad) cmp xchg inc xor push sub or or pop mov in push jns push stos xor sbb std pop cmp and xchg mov xorl sub cltd pop adc outsl out and jae arpl movsb ljmp add and cmp or hlt mov cmpsl imul push outsl mov sub repz mov cmp ja aad mov mov loopne sbb int3 xchg dec cmp or mov ret ja xor mov push sbb scas fwait out or aad popa aam aas adc add add xchg and xchg lods icebp sbb or roll dec cmp stc ja stc fldenv inc jmp (bad) pop stos pop push lret outsl or imull (bad) lods stc (bad) repnz dec push test out jp sbb popa mov arpl nop int pop arpl mov jns lcall jge dec imul sarb jp add xchg scas cmp xchg adc or lods stos mov clc cwtl push decl jmp or mov jne ljmp push jo mov call in cmp flds call inc cmp jae ljmp mov lds adc push add insb or xor sub fidiv lods (bad) cs lret insb fmull dec movsl pop mov jno cmp xchg (bad) cli mov out popa sbb je pop fisttpll mov lock mov mov in adc cmpsb or loopne pop add push aam std cmc fistpl fdivs stos push stc adc les add negb jl js adc ror out cli aaa mov add push xor ljmp jmp ret test jno loope jnp (bad) cmc push clc lahf out xorl xor or fdivl cmc (bad) or sub (bad) in (bad) dec ja xchg and mov subl sbb dec pop push out lock sbb lods out or and xor cltd push lret (bad) and and jae push adc dec popf test fadd push and mov test add (bad) cmpsb sbb (bad) jnp ljmp mull sbb std cmp (bad) fcoms jp or es sub (bad) rolb mov push push pop sub sbb or imul push and cld dec pop sub daa push push lods call xchg cltd ljmp add add insl sub dec cmc icebp mov or mov movaps xorb or inc dec mov shl (bad) cmp xor and (bad) into ds stos mov dec pop pop push mov inc test sti xorl mov ret imul or call add movsl out sub sarl or push jl push test xchg test pushf iret mov iret jne sbb xchg inc xlat ss pop stc rolb je xchg jle sahf ljmp mov inc ljmp xchg lret xchg push jmp aaa add mov (bad) fnstcw loop and aaa and cmovp dec (bad) cmp lcall nop cwtl or add or out push mov jne (bad) sub dec int mov shl inc inc fwait and jnp push xchg insl jno add ficom adc inc pop mov out xorl xchg arpl push pop xor scas js sti test (bad) jecxz push test dec mov adc xchg mov add sub sbb cmp xchg jge (bad) or stos mov sbb push add add mov mov in adc mov and stos mov std inc test jecxz shrl sub mov das jp (bad) xor xchg sub mov std (bad) or (bad) mov ss mov jno cli (bad) push xchg or jae daa subl movsl sbb fsubr cmp popf mov mov in mov and xchg cmpb sbb jns or ret mov adc and pushf push xchg lods stc (bad) incb mov cld fs int mov or pop pusha xor into dec add push mov add and pop mov es cwtl repnz or or jne xchg push cmpsb mov sti ds test adc shll popf sub cmp adc loop xor mov jmp dec mov mov add nop cwtl add xchg cld adc add insb (bad) mull mov xchg xchg xor jmp (bad) out sub js or dec shr cmpsl dec loope gs adc push (bad) ds inc movsb (bad) rclb mov jne xchg adc jno sub out mov jo fwait xchg push lcall push push adc (bad) pop adc xchg push sub sbb add dec xor inc arpl inc in dec loope and rol aaa dec push lods push in sti sbb in pusha xor scas pop sbb push jle push sub ret fnstcw adc rcll adcb or sahf movsl push xchg popa mov sbb mov xor add in andl mov xorb lds add pop loope lds and out xor jae repz sbb lahf orl sbb mov icebp jo xor adc (bad) mov arpl jae mov add pop aas mov push loop or add adc lock aad mov mov (bad) cmc push jbe lcall and dec push sbb outsl repnz xor jp xorl (bad) je enter repz xchg ret mov loopne or sbb fs mov mov and xchg pusha fiaddl insl xchg inc stos mov sbb fcomps push jecxz movaps jecxz mov inc sub dec sbb imulb and sub sbb cmp pushf jnp ficomp or inc sbb xchg leave ret (bad) adc push xor jns leave xchg ja and xor test js into jbe jp es dec push adc mov imul push or arpl cmp and cwtl adc dec add cltd xlat (bad) aad sbb or insl pop and pop bound shl push jecxz clc inc jb fild lods add cmpsb mov mov inc stos xchg adc movsl shrb fsubl ljmp imul int3 scas adcl iret pop dec push test ds pop in insl add mov mov not test xor mov test aas lcall pop test gs cltd repz mov lds cmp mov sub sub imul dec ljmp sbb call dec mov push xchg jb push push push add rcrb rcl movsb pop push cld jl pop pop pop cmp xchg xlat mov stc pop add add jl bound fidivrl fcomps sub jns sti jb ss sub and mov or xlat das push dec add in ret jno cli into int (bad) mov idiv jns or dec (bad) mov je mov insb push nop in cmp add xchg lds insb int es push rcrl pop mulb enter jge sbb cmpsb fistpl fs leave jg xchg insl lock cmpsl xchg iret dec stos jae adc fs pop jge (bad) mov push (bad) ds and (bad) repz add mov add push leave ja jne (bad) cmp or test sar movsl negl bound scas add push das lea sub jo adc pusha inc imul (bad) cmpsl mov ss daa ret inc imul xor stos jno ret loop in test jae add add add shl jbe out insl ds pop sbbl dec jl,pt cmp lods mov roll inc aas push test mov popf fisubrl pminub or sahf cltd bound xor mov lret inc pop les mov and ljmp mov out and and imul je (bad) jecxz adc dec inc iret mov fisubrl push dec xor dec je insl dec mov fstpl adc and adc xchg shll cmp adc (bad) ja clc adcb sub pop mov fldcw mov lods call mov xor add (bad) loopne rorb push xchg loopne aad push dec push fnsave sahf sbb rol cmp lock in cmpsb jmp mov jg dec push xor into outsl aad inc adc pushf jg fidivr lea sub rep cmc inc repnz pushf (bad) into (bad) dec mov fistp int dec dec pop xor stos cmpsl mov subl pushf rolb icebp adc jns stos adc pop adc pop (bad) call ficom dec add call xchg adc das jg mov out stos cwtl insb xor das add ja or insl dec lds add inc in fbstp pop fwait pop sarb (bad) mov adc fmul test inc (bad) sbb es xchg mov lock enter mov pushf lcall and cltd mov sbb cmp int cltd sub cmp mov pushf jle xor andb inc test lods addl add out imul fstps mov mov ja out xchg into jo push divl xor dec js and jge xor jle out pop fsubrs ss loop xor push xor outsb cmp and fsub outsl test or xchg lea mov lods fadds arpl (bad) xchg jo cmp and lcall sub int3 idivb inc dec outsl sbb sub out or outsb mov dec test bnd loope ss leave pushf lea inc jg push add add mov stos xchg inc js bound jo daa mov cmp push frstor mov hlt bound sbb lods int3 xchg mov inc mov lds imull xor inc (bad) push xor pusha les sbb mov fwait adc movsl adc dec hlt mov enter add ss pop cmpsl sbb jge add ret rcrl out mov mov push inc lds (bad) ljmp xor and out add clc fistl or xchg xchg shrl in (bad) mov pxor ljmp scas pop jmp lret push inc push idiv lods add xorl repnz js mov sub aaa xchg push fcom dec mov loop adcl xchg or sub into dec lds scas inc aam mov mov inc stos repnz jle mov hlt add sub sbb in sub (bad) xor fdivrs cmpsb pop cmp fbstp test roll sbb xor jg xor cmp pop jnp xchg xchg shll push fcomps add lcall and pop stc or add xor jb fwait dec fcompl cwtl in lods add das mov jnp inc repz mov lret call dec mov pop pop roll (bad) stos lahf push xchg lods mov test and loopne inc adc test mov pop sub out vpor or xlat repz jge outsl and lea dec (bad) xor add push lea dec loopne xlat push ret jp and aad movsl dec out addb push rcrb pop scas test loop cmpsb nop fstpl jo sub dec outsb addr16 incl loopne stos lock outsb xchg pop ljmp out add or add (bad) sbb addl je adc cltd mov mov mov cli sub add cmp mov movsl dec cltd push push xchg inc push mov push fwait sbb lcall stos ret in test mov and push xor inc xchg fcmovu sbb mov pop jbe enter add and and test shll and aam fimull cmp test add lods lods imul popa or sarb int seto xchg fistpl dec sbb or in mov int roll (bad) je pop pusha sbb sar xor lret aas enter clc rcll adc xchg push mov cld mov or inc pop in js cmp push into lods std daa xor pop add daa sub mov int3 mov mov pop jmp aad insl xchg and add add ljmp add (bad) aam movsb jae mov sub mov mov dec adc out lcall loopne cmpsb or test sub or dec loopne jne cmp std mov pop (bad) lock lds mov jge test dec add icebp adc or pop insl sub fst xchg mov (bad) mov adc leave adc jbe aaa test lods je aas sub out pop inc loop pop negb cmc mov shrb ret stc imul jp gs lock in xchg pop add add ucomiss push cmp push pop sub popa rclb out jmp loopne lods shrl xchg sub push fmull fistpl pop out aad icebp scas das outsl or ljmp xor aas movsl pop icebp (bad) xchg adc add pop lds movsl cmp gs das dec out imul in loop test fist (bad) xor push and lahf cwtl mov jbe sub div jae pop std loope xor jne dec roll sbbl jg and jne jecxz xchg clc or sub in es sub add add add add cmpsb ss decb mov adc adc ret inc lods addr16 inc xchg mov inc int ss faddl adc lret int ljmp aad mov cmpsl push and push leave xor clc pop cmp xor sub stos mov mov cli sbb add add add (bad) xor ret sub dec add mov in notl mov pop test add pop (bad) (bad) daa jns ret inc das test sub nop jbe jbe lahf daa dec xchg sub insl pop xor test or push push shl scas jnp mov jle pop in add add pop test mov jns push mov mov leave sbb popl insb pop sqrtps out lock cmp add or insb inc jae aas add lea add push sbb scas sti pop ret mov xchg inc mov icebp and stos adc or shrl test add repnz ficom js cwtl sub or pop mov test (bad) cmp pop repz aas mov push cmp push stos lcall loop lea ret jno push xor shrl adcl lods push xchg cmp rorb add add test ror mov bound std std lods fdivrs stos (bad) push pop ds xchg cli sti lret out mov idivl xlat jbe movsb xchg imul outsl addr16 mov push xchg mov (bad) adc or insb jmp aas imul xor add add call or inc fisubl into or fdivrp cmp pushf mov fimul xor push inc and ficomp add sbb push lock inc jbe pop rclb push int3 jnp mov fstpl sub pop incl call add add add popf popa pusha mov inc andl xchg pop push movsb test jp jb jne je int3 inc lahf xchg mov cmp or arpl push cmp stc lahf rolb call push movsl dec push cld cmp push or lods loop insl pop cmp inc outsb je or sbb add scas bound lahf inc sub push jle cld sbb nop fmull pop dec cltd movsb or sarl shlb cmp data16 pop pop xchg sbb in sbb aam push cld pop daa test iret dec lret jno cmp cld cmp jge loopne add test mov mov clc out pop fist pop sub pop (bad) lret pop sub or bound push in test insb (bad) stos cmc nop mov cmp cmp arpl cs sub sbb or pop test and out ret mov stc dec jae,pn loope add dec add add insl xorb mov xor fsubl jg xchg cld push popa mov and out push inc sub push adc sbb aaa xchg push ror mov jp push aam adc sbbl mov call push sbb sub jne stc jmp add or fwait xor scas stos test test push shrb dec out clc push mov loope push loope cltd lcall adc pop outsb sbb test mov dec (bad) cmpsb push sub cmp into fsts ds test aaa cmp leave mov call aam sarl add popa push (bad) jno (bad) xor dec outsl and movsb push jne call pushf xor roll cmc mov and add and ficomp xor imul lods (bad) movsb scas pop xchg flds iret ds imul add xchg lock dec mov enter test in sub push leave mov pusha adc push rorl jge sub aad mov gs mov cmp into movsl jl,pn jns inc dec xor push pop inc and xor sbb test ss jl or add out inc stos inc jne outsl adc sbbb dec (bad) les aas xchg repnz xchg jg inc jns stos movsb adc jno movsb daa aas cmpsb jo jno and push mov mov inc or jg enter xor inc push lret mov imul fs fsubs mov add add stc fdivrl pop dec std js cmp (bad) mov xchg pop mov push popa mov add lcall cmp data16 xchg dec xchg aas cmp mov dec xchg and mov popf outsl sbb adc sub jnp jecxz push xchg push add outsl call lea xor fwait pop xorb and inc loope jae pop xchg inc push lahf mov jae mov pop cs cli pop cltd inc dec (bad) imul imul or cmp sub (bad) xchg dec mov fstps inc push and jecxz (bad) out test stos in add add mov push into push int3 and pushf dec cmpsl push or push and and and icebp pop sub mov add mov cwtl cmp jle push sbb and out scas jnp test inc fcmovu mov stos in mov das insl add add add or scas mov ret andl (bad) xchg outsl cmp cmp (bad) jo call push (bad) and imul fwait ljmp inc rclb jns test push lock (bad) ror scas subb outsb mov push inc sub push cmp dec push add mov add mov pop jo jmp mov nop rcrb mov and dec sbb rol out sub push popl mov (bad) xchg mov dec adc leave sub cmp and inc repnz sar (bad) nop add xor cmp add sbb in hlt notb (bad) pop adc and fs or or lret cmp pop test aas dec sarw sub insl sbb push movups dec icebp and jl aad inc sbb and (bad) jg dec jmp (bad) int lcall mov mov std lret bound bts out mov inc mov adc (bad) cmp insl or pop mov mov aaa repnz cmpsl sub mov aam xor ficompl movsl lods mov popf xchg leave addr16 call jmp adc jns imul ss add add leave or jp std dec pop mov ret loope scas mov in mov ljmp add jg and out push and adc mov int3 push lods mov outsb cwtl push xlat aaa insb push mov mov flds in cld (bad) aas mov sahf cld js lahf lret mov xor cli push jl jo or pop fmulp xchg shll repz pop push loope scas fidivr add andl loopne xchg cld aaa sti or daa xorl aas ljmp cmpsb inc add lahf sbb xor adc (bad) imul fiaddl es mov mov hlt add jae push push movsl call mov ret jns push pop inc jp mov mov fadds sete les xchg mov mov cwtl enter pop mov jnp add push sbb adc outsl push mov pop dec push sub stc jnp pop push sbb jo aaa out test add std nopl insl in out negl jecxz adc fdivr lahf add pop fwait ret mov mov pop dec push test xchg sbb insb out xorb xchg enter cltd test mov add mov enter inc xchg xor add inc aaa jne sbb enter pop cltd cwtl iret inc sbb or jae fistp cmp hlt jne jno stc (bad) dec rcr dec and inc movsb dec adc lock mov sbb dec pop stos xchg jg in xchg out lods add pop call or popf mov mov add add push xchg sbb mov pop outsl cli data16 jge mov or push das mov scas cmp sti and dec mov mov (bad) cld cmp sbb adc cmp mov pusha push dec cmc xchg shll mov lods leave (bad) jbe xor fidivl in (bad) icebp addr16 aaa (bad) add (bad) sbb jg call je mov mov sub gs js push dec push jb mov gs stos sbb fstpt ret or movsl mov stos sbb scas int3 dec lds ja or out pusha subb inc icebp mov icebp ret xor sbb stc add adc decb fcomp leave lods pushf sub addr16 sti fwait xchg outsl push cli mov sahf mov outsb aam mov popa rcr fdivs push lret add jbe ret aas movsb jge fnstenv mov dec loopne call stc pop (bad) rcl sub cmp add add lahf adc cwtl scas stc rep test sbb mov adc movsl sbbl adc lret or imul fs mov lahf sub insb cld pop subb mov rcl jno pop sub fs xchg mov push xor mov add arpl jns fsubl add cmp push jno jne sub mov in xchg lret movsb fisttpll and or xlat jbe dec fs add fdiv test jns nop xchg dec mov je mov cmp outsl push xchg add outsb mov insl stc sti data16 lcall in out rcrl jb loope inc loope mov loop jb in cmp lea in push out push fcmovnu xchg cwtl cmpsl and or popf ret sarl (bad) cmp mov mov rolb push repz lods and psubb (bad) out fadds add jnp push pop jmp (bad) jecxz lods mov jge jle add clc dec sub cs and pop sbb add xchg ja and xchg pushl adc cmp xchg xor int inc adc jno loop repnz (bad) pushf xchg dec mov clc cs xor jg and add add inc add popf mov insb inc movsb push jp adc andl negl xorl xchg mov xor jno in jl out pop stos push int3 mov scas adc dec adc jne xchg aas xor adc cmc dec lock add movsl xor cmpl movsl mov into xor (bad) int add (bad) mov jge inc xor scas roll fs cmp in adcl bound inc adc ljmp pushf call (bad) je test jne jecxz scas repnz rcrb xor push stos ror roll (bad) jp pcmpeqd add sub lcall jmp jmp shrl sub subl in xchg push xor push dec andl je sarb sub repnz cwtl push sub dec or jb,pn sarb rorl sbb xor cmc xor inc (bad) xor (bad) into mov pop div popa add add sub mov or inc or sub xbegin outsb test mov and push mov sub adc xchg cmp in lock lods cli mov lcall js jno faddl lea dec lea push add leave std xor cs test arpl enter repz test adc pop in fimull mov loopne adc (bad) and dec mov test aad or js sbb pop jp arpl (bad) jg fisttpl add (bad) (bad) rcll pop inc in adc loopne mov (bad) outsb lods adc inc sub std jno sahf inc cmc hlt xor lods (bad) data16 popf push adc ljmp xorb adc mov sarl sub mov mov inc insl pop (bad) es scas or shlb add lock and lods xchg jl pop std adc jl bound dec (bad) rorb test ds movsl js ret lret insb jnp jg (bad) arpl in and xchg cmp mov daa xchg adc add ja sbb sbb add fisttpll dec add jnp sub popf add outsl add fcoms pop popa jne lea mov xlat pop mov mov jg test inc mov jl gs add inc mov mov hlt or push mov inc (bad) cltd in jno mov adc data16 lock and ljmp cmp enter ljmp dec mov aad xchg inc and aaa fldcw stc aam js addr16 xchg add dec fmull xchg cmpl cld movl cmp jge int3 (bad) (bad) mov insl mov sar mov sub lcall mov add add dec and insl in test and insl aam pusha push js xchg stos cltd cmp inc clc mov mov jp jge (bad) (bad) or sbb jns mov sbb insl jne push aas jnp xchg (bad) hlt inc adc pop aam add jb cmpl pop push or add add add (bad) repz mov xchg fwait mov push ret mov push repnz mov arpl gs xchg push mov mov and shlb or lret add icebp jl aaa pop mov cmc or sbb inc adc add cmpsb ud2 dec inc lret test scas push clc outsl sbb add push stc sbb dec push xchg sbb leave push idivb push jecxz add std in xchg ljmp stc pop pushf xchg pop mov mov mov push and icebp divps out aas xor sub arpl nop add xor test lret push fsincos imul shr add or mov jmp enter xchg push ja mov mov ja push pop jns addr16 add es inc pop mov or mov test and fs jge lea inc and xchg jl pop lret (bad) pop push adc add push lret dec into orb in jecxz call jle pop cmp sub leave (bad) dec jmp mov cwtl or mov jo cmp inc nop dec js lock jmp adc and adc inc xchg jno mov sub pushf dec sub je mov jbe jae in or add popf jp mov test ds mov fidivrl add ljmp outsl je sbb dec pop outsl xchg jle dec pop rolb mov or faddp cli mov jmp xchg inc out lret lret in mov decl mov push jmp cmp and dec push test add add jno xchg mov xor adc dec mov pop pushf popf je negb pop fildll pop test and aam cld mov add test xor inc js push aad add adc adc mov test jbe fdivl add and mov add dec nop fiadd xchg sti adc data16 jno (bad) in xchg push fldt shrb out fimul jg inc mov mov dec or dec (bad) xlat rcrb jno lahf add or jmp jns pop imul push inc cwtl mov leave jge cmp mov mov jge ds insl scas xchg jnp mov fwait pushf aam pusha (bad) das xchg sub stos inc push pop in stc pusha pop inc repz cwtl out xor mov pop xor notl inc aad xor adc lret das xchg xchg cmp mov add jle mov pop ss dec and cmpsl shrl mov dec test fs pop dec push add pop mov mov addr16 mov push inc adc addr16 or bound ss xchg cmp jmp fs pop mov pop pop lea mov jns push cmp jo cmp or imul xchg stc cld out dec and jle les adc faddl xchg iret rorb adc rcll jecxz jb repz sbbl inc ljmp fsts addl inc ret xlat enter in dec add nop add enter add jecxz (bad) imul sub jae xchg out flds sti ret fwait (bad) roll pop cmp sbb jnp mov cltd cmp aas jl xor sub push ret pop mov sti shrl dec or imul sbb mov dec or int mov push movsb mov or add jo ja mov lcall aaa fstpl test sub mov push pop std or or iret scas in xchg sti mov push lcall lret fldcw daa mov dec jge outsb gs int3 inc xor mov (bad) add (bad) push fildl loopne add add add push lods push cwtl pop fs adc outsl cli push lahf (bad) xchg xor push and jb xchg out flds sub push xchg cmp jecxz adc mov popa mov cmp dec test aad cltd mov add sbb pop jnp aas (bad) aad xorl add add fxch mov scas in jbe dec fidivl dec jns sbb aaa inc cs mov ss addr16 call cmc movl or ret decb fimul fiaddl xor leave add fwait in aad out jle xchg lock loope movsl mov cmp xchg gs insl add add incb fwait cmp pop cmp popa addr16 (bad) push fildl loopne lods push cwtl in fs sbb cmp out fisttpll mov xor (bad) xor add (bad) lods nop jge xchg cmp psadbw adc and sahf sub fisubl gs inc sub xor add add add je jo xor dec arpl cmp std ds outsb (bad) mov inc and push mov mov mov into sub into repz sub imul lret lret (bad) test aas xchg inc cli dec add std fistp andl xchg loopne cmp mov sbb imul std stc cmp mov in add jge pushf sti leave popa rcll xor mov mov and push movsb adc iret pop mov cli sub mov ret dec popf push in pusha test jno mov cmp (bad) cs cltd mov rol xor movsb and (bad) in mov sub fistpll in mov pop imul or ljmp xlat cmp icebp xchg stc aas cmp fadd fldl imul fcoms and lcall lock enter (bad) outsl dec test xor pop or cmpsl xchg (bad) iret dec stos jnp push adc and sarb push adc jne and push xor cli sbb stos ret dec nop pop add dec mov and int std push in fimul mov pop cwtl decl and add dec dec inc pop int3 jecxz add jbe cmpsb xchg sti and je icebp inc xchg jge enter mov inc lcall xorl push mov or or push mov mov add cmpsb nop cwtl or jmp js popf adc insl ret aad in add mov ds xchg or add pusha xchg imul leave int inc fnop dec mov in mov jb add repz and insl or lret sub mov andb add cli lods in cmp aam lock mov int stos or and sbb adc jb add cwtl mov cltd push push pop mov dec insb popa pop and aam xchg cli lods or lock into out push cli dec mov push and test and popa aas push inc xor sub sub out add (bad) lret in pop jnp mov inc sub pop xor jl dec dec xchg stos in dec dec dec fisubrl addr16 mov xchg push sar mov adc mov push cltd fisubl sub xchg ds or movb pushf xor adc dec cwtl mov pop mov adc jl adc sbb imul xchg cwtl fbstp call add add dec mov lcall clc push add in sbb jl xor add stc mov xlat jmp add xchg dec nop mov push mov and pop mov rcl das imul fstpl jno ret loope mov outsl mov push adc mov inc loopne and push incb fiaddl dec xchg cld xchg daa sbb jle (bad) ja inc push inc jo mov enter inc repz (bad) xor cmp jecxz test mov inc push lock inc fwait nop push xchg orl dec inc stc clc and adc add or loopne xchg cld lods test shrl cmp (bad) outsb dec mov or jb or lods and jbe add subl xchg outsl (bad) sti dec dec jo adc in aam mov inc sub sub jb cltd cmp xchg inc add and movsb pop test add pop stos mov xchg cli fstps jp jecxz aad xchg mov leave or pop xor push stos pop add (bad) and (bad) jno out jmp gs js or push xor gs sbb cmc or cltd popl mov sub nop cmp pop add add dec lods mov mov add mov mov inc loope mov daa mov adc inc (bad) inc xor dec (bad) mov xchg (bad) mov sbb mov cmp cmpl cmp jnp imul or stc cmpsl ss and std js add push ja adc xchg mov xlat rol or adc popa pop push data16 data16 mov mov mov push fldt mov nop in push fisubr or inc dec mov pop out push mov mov aaa icebp sarb pop or xchg or repz add cmp push (bad) mov lds aas xor gs xchg cmp stc xor xchg mov push mov sub cmp cwtl dec push pop repz push leave lret inc scas ss out lods push arpl rcr dec pop shrb mov rcrl inc ds in and (bad) fldl pop mov inc sbb add add rcl out push jbe idiv pop sbb mov adc fcomp push cmp icebp mov shrl (bad) in push xlat and mov push pusha sarb push outsb stos (bad) xchg fnstsw repnz sahf jl jbe pusha mov adc push mov stos or jb xchg or mov add mov arpl (bad) dec loope gs sbb jmp push imul xchg fisubl adc imul or in jle mov sbb mov xor xchg mov dec pop loopne daa mov add push (bad) cmc cmp daa test adc xor mov pop xor aaa dec xchg push daa or xchg dec dec scas mov (bad) cld add pop mov les popa nop call loope lahf cmp es test dec bound pop mov add test cwtl ljmp add (bad) cld adc jmp xor sbb and mov jge js cwtl dec aam cltd push out pop in sub into sub mov xor pop test jl subl pop daa dec in mov sub adc cmp xchg test fcomps stos push push add loope movsl or jg dec out je push inc sets aaa fdivrl add sbb add sahf popf outsl outsl ret sub xor jecxz aas js inc pop xchg push aas mov movsl cmp insl mov mov adc xchg mov inc (bad) mov push movsl sub add (bad) out (bad) jno add sub sub mov jle (bad) jbe sbb sub xchg add std push mov cli sbb jmp push jnp jne mov fisubl mov dec ds xchg push popf push inc mov addr16 movsl or xor or jne dec out daa jns or or cmc pop test fistpl dec stc and aam out outsl (bad) out movups xor es std jae mov inc or mov popf and in loopne push xchg push push add mov mov bound int pusha xor pop pop dec lahf test pop xor inc cmc (bad) insb mov orl add (bad) xchg adc out das imul lods mov xchg cmp inc stos mov lret cmp call xor test jmp notb notl jg push addr16 arpl jo sahf xchg or repz out sbb popf mov sahf xchg repz movsl jl (bad) mov add mov sub loopne inc (bad) or or movsl add shll pop aam mov mov movsb jbe xchg (bad) out test lods enter xchg ss cltd aam and add mov and pop sub sbb lods pop or lahf ficoml xchg push mov sbb sbb mov popa or scas jmp jmp aaa arpl das cmp jecxz cmp (bad) jno ret mov cli (bad) lret mov push (bad) mov jbe jb ljmp inc repz adc std int3 sti incb gs fisubl imul aam push mov add fs and test xor or xor push dec gs jmp dec movsb lea inc fwait mov mov mov (bad) lods test pop xlat mov dec outsb inc push (bad) jae mov pop add pop lahf jae push inc mov jns mov movb lods (bad) in stos lea pushf outsl mov mov loope (bad) mov ret sti dec lcall jno push mov sahf lea call mov xor aas adc and test pop test and push mov sarb add add cld push fidivl and loope out mov dec rcl dec mov mull pop mov fwait xor dec rol cli (bad) cmp out je mov cli ljmp dec icebp lock ret jb lcall dec jecxz adc push gs sub sbb sti xchg inc add imul adc pop pushf lret lret and inc rolb push repnz nop push sti int3 (bad) sahf ja addr16 jmp test xor pop xchg xchg mov fnstcw popf xchg cmp cmp sub rcll sub jb iretw popa aas std jo and adc xor sub add add std outsb ja enter jo jae (bad) sbb xor hlt pop insb cmp aas jp cmp mov push mov cld mov sbb mov cli std in js je or cmp add dec in bnd (bad) and pop scas lods lds mov push popa faddl push adc inc rorb adc xchg out sub lock xchg leave ja dec int3 jne insb mov adc adc stos push push lret jnp nop mov cs lahf xor push movsb mov test xchg ja and push jns add add fsubr xchg popf pop imul (bad) jno xchg mov insl stos call ret cld xchg jl insl dec andb (bad) dec pop in std xor shrb sub mov jp jmp push jle sbb lcall popa push jg jmp mov (bad) mov (bad) jge xchg add pop pop fcmove dec and xor jns sub pop jb imul cmpsb fcomip orl shll xor push push nop mov pop xor pop stc fcom pop repz mov out xor jmp test xor lahf sub je add dec sbb jbe repz jmp mov cs xchg gs push jno fwait mov adc add clc mov hlt call loope call push or imul cmp adc out add dec adc push and scas sub mov and sub xchg dec dec mov add adc es icebp and dec jne ret push sub test mov and (bad) popa icebp pop add rcll jnp or dec iret jg mov push sbb ficomp iret call or sahf and jp push add scas push mov add add inc push jmp test int3 dec insl sub (bad) push addr16 lret in imul imul jge adc (bad) int mov pop jnp cmp lock js clc sub mov add adc and and xlat (bad) ds add add add notb pushf cmp arpl in call cld sbb hlt push into (bad) iret scas push cmp xor hlt cmc psubq and or adc or (bad) mov out and daa outsb int repz pop lret fldcw outsb repnz inc stos loopne iret xchg adc add push adc xor push stos xor and sbb mov add mov or stos or mov jecxz pop adc (bad) push push decb jg,pn test lahf fsubl mov imul ret lahf sub mov test dec std add dec movsb movsb add add mov movsl js cmpsb cltd mov inc xchg cld push bound insb adc jle stos dec cmc roll dec (bad) or jmp cltd dec aaa mov cmc xchg mov dec push daa outsl dec test test sti or sbb inc outsl pop sahf cmp mov outsb int pop lcall cs jno cmp mov xor les xchg sahf lcall scas cmp sbb add out and xor das jae and jbe xchg pop and sub dec fldcw es pop stc jl dec xchg xchg sub pop xchg mov in sub xchg daa loopne add add or (bad) dec add mov jl (bad) jbe mov in nop mov popa add jl push push icebp adc xor out jmp push pop ret push dec movnti icebp and sbb into pop xchg cmpl sar mov add add fs dec cld jecxz arpl add pop lcall mov lock and scas stos xor jbe add fwait mov lret inc test xchg mov shll cwtl mov leave lret (bad) mov in jp sub dec sbb add add cltd mov jmp pop sbb mov push adc dec lea mov rcrb cmpsb xchg cmp mov push adc dec clc movaps mov pop ret and sbb (bad) ja ret aad push inc cmc (bad) xor fiaddl sub dec jne mov cs adc in fdivl pop adc xor push dec xchg adc pop lret inc adc loop ret jo cmp adc test fldenv jno or popa clc or fadd adc jmp and pushf mov push sbb jb adc nop push mov add subl and test outsl lods stos mov js mov out jecxz add lret xchg push sahf (bad) jmp (bad) fsubrl imul mov (bad) jno xchg test js and icebp aad popf test ret clc dec arpl push outsb lcall (bad) ja mov xchg mov aas add and cmp xor fdivrl loopne pushf add ret andl cmp scas mov push xchg xchg mov insl sub pop pushf mov cmp inc scas add lock xchg scas out movsl repnz cmc leave dec pop mov je sub dec inc add push xor dec sub pusha rorl int adc sar xor cmpsb xlat out push sub es repz xchg jle jecxz sbb inc cmp mov xchg xor pushl dec inc dec jbe mov fist and adc add (bad) test xlat cmpb add add add jne loope (bad) jb adc outsl outsb sbb pop jecxz mov jl (bad) xor sub jmp cltd dec aaa mov into das js pop pop mov push test mov cli sub loope andl cmp imul jge cmp pop jp imul xchg inc sub add pop xchg movsl dec out add cmpsl shlb pop int3 push pop ficompl or inc jb push and test pop and psubsw je insl push cmc mov fwait lahf in or jnp stos mov mov test int3 inc cmp adc lods (bad) movsb xchg shll int3 fiadd fucompp insb iret sbb xchg (bad) in lds or dec xor sub inc sbb (bad) call mov shr push pop imul jb xchg cmp jp test pop test and imul (bad) test mov push int3 into (bad) movb push and xlat xor adc pop lcall cld and pop dec ud1 call push arpl leave je xchg aam jne xchg jg inc or rcll stc add jb adc mov icebp inc ret xchg push aas mov addr16 jo dec ja stos pop ret iret cmp add add (bad) cmpsl movsl (bad) and cld or xor jae and add inc lods ret mov push fnsave cmpsb xchg mov nop or pop jecxz add cmpsb jmp fs push xor addr16 insb or stos mov adc (bad) jmp imul inc js test xchg dec dec pop add add xor popf pop add jne sbb fcompl (bad) daa sbb jno mov push mov add lods pop icebp inc popa mov iret mov leave jl pushf pop mov popf inc daa out push addb dec xor xchg inc fsubrl jl xor mov test rcrl add add push sti sbb pop lahf push outsb pop jecxz adc iret cmp mov ljmp xor movsb movsl ljmp add mov sarl mov or dec sbb push push cmpl add add xchg adc xor iret dec lcall clc jp pop mov scas dec aad faddl repz inc fwait outsl sbb jns mov sbb fldl test (bad) adc test dec stos leave fstl xchg push imul push jp (bad) shrl cmc push add jo (bad) push cwtl in mov repz enter ffreep mov mov test and ror sub les imul or or jle adcb pusha push xchg and mov scas push loopne fwait bound cmp or and mov dec add push add jecxz sbb lret or call xor test push dec repz cs mov andl cmp sub dec stos xchg and xor pop int3 fdivrp sbb jb enter push test pop jb xchg insl mov jecxz adc add mov test fwait inc sbb in fimul push cmpsl lds jo add xor scas push push push popa xchg dec ss inc sub dec lods test push adc sub je sbb adc call jno mov test mov mov fildl add add fidivl mov outsl or (bad) adc rclb push mov into call mov std rcl lds psrld cmp jbe cmp pop and fcmove jb aas aad out fisttp inc jmp push jno jae in lcall sub add add fcompl test adc pop clc loopne (bad) adc iret adcl adc call les mov mov sub leave into out sbb or jl popl jnp dec stos inc sbb stos sub dec xchg cmp jecxz sub (bad) xor enter add xor jg jne push jmp int sub nop cmc out and sbb jge or fiaddl negb jle inc push rcr xchg cld add ss push bound push stos xchg xor or mov iret in pop scas pop jns and dec flds (bad) xchg dec mov jns adc add xchg and dec ja scas iret jecxz adc mov (bad) lds sbb ja in sub mov adc mov mov pop inc in out xor inc je pop jl push and jo xor sbb test adc or cmc push mov add stos rclb lods xchg ror add mov add xchg push xlat aaa mov mov xor jno xchg loopne jmp add add imul in aad sar push loopne in scas test mov xor (bad) insb test mov sbb les sbb adc or movsb xor mov sarb out xchg add and fs int3 (bad) hlt sbb ficomp pop jp mov stc insl and mov cmp mov mov mov sbb leave sub xchg and or push sti int3 fidiv push adc add add add add jmp or gs divb sub push mov or subl push jo les xor push shrb xchg push pop add popf sub push mov mov lods pushf mov xor fisub push mov inc jb adc aam add add mov (bad) mov lds mov xor lea aaa outsb ret mov dec repz repz jg hlt and inc fidivl push dec and cli dec sbb dec std mov test mov in outsb sub imul mov jecxz test push cmp sbb stos test add leave push iret (bad) into sbb pop fild imul fadd and push out jl scas adc push sbb stos sbb hlt mov mov and gs adc ret and pop cmp and jae in inc std jecxz inc std mov std ret aam lods add add repnz daa fsub mov cmc mov push mov lahf scas (bad) and sbb mov loope mov pop mov sub popf adc out add adc jb mov dec or inc gs pop lods add call push adc enter imul orl pop dec jnp cmp inc loop inc addr16 negb jp xchg push add jne stc sbb push mov pusha subl add test lret push ficompl popa dec shll sahf mov das xlat shrl imul add add or push inc mov xchg dec cmp push mov xchg add sub enter push loopne mov insb sbb add arpl (bad) xor mov cmp jb dec mov lret lret cs fwait sti fwait and inc aas adc inc cmp or js ret add das lea out ljmp das int test fdivrl ja pop stc imul call xchg (bad) mov aam or inc jb push and test pop xchg sbb in leave dec add rorl sbb xchg pop push movsb lods or stos (bad) test leave (bad) imul (bad) xlat cmp shl add movsb jge jne mov pushf mov dec pop bound and in add adcb ss scas cltd js rclb push icebp adc pusha fwait shlb icebp aam add push and sub sub loop add lahf (bad) scas dec imul add xor cmp mov aam sub xchg pop ret sbb xchg mov sub mov cmp jnp sub xor ret lcall push or sahf movsb pop cmp cmp ds addr16 jmp adc add add arpl ds sbb test insb aaa jbe or roll jl je ss cmp dec sub and and lea dec mov mov (bad) sbb inc adc push ljmp xor push jle insb sbb push ficoml out fcom lea cmc add (bad) jmp fwait add shrb mov shl mov (bad) dec rolb ljmp xchg xchg lods inc enter mov xor fldcw mov xor leave adc sbb mov in sbb jecxz jge add ficomp or test jnp add xor push add jnp mov hlt test rcrb insb and test (bad) flds adc leave ret xchg (bad) hlt and xchg mov in sub jne scas sbb push dec mov fidivr pop push cmp (bad) fmul jle cmp mov test and inc loop jmp fwait loop or inc mov pusha in pop movsl into dec and push dec xchg cwtl fsubs movsb das (bad) cwtl cmp cltd jg pop leave add ja xchg cmp lods test lret es les add pop xchg dec insl cs add mov lret je push call or (bad) mov mov cli adc mov push jecxz xor out pushf xchg add aas jo nop stos bound imul rcll test mov shr hlt insb insb dec pop xchg cltd sub dec add add push push add mov nop cwtl ljmp in sbbl or jo test mov loope xor mov leave dec lea pop pusha movsl sti cmpsb int3 enter push test fwait sarl fwait imul add and clc jge outsl mov shrl fdivrl pushw or pop or jl (bad) sar add iret sbb loopne dec pop fstl je daa inc outsb out and jb call test sub jecxz xchg add inc mov pop jmp lock roll cmp add xchg test js dec and dec cmp push ret cmpsl mov xchg mov mov nop cwtl add popf cld push out sub push add pop mov push ficoml orl jle sarb mov stos mov pop test pop enter push lahf gs mov add add fucomip repnz pop add arpl int cmp outsl loop in cwtl sub fnstenv push mov adc (bad) sub push add mov sbb int3 gs ja cltd dec inc or scas fdivs adc mov popf mov gs pop (bad) in inc inc aad jecxz adc xchg pop ljmp mov outsb mov jno arpl push ss fstp das imul and (bad) inc stos mov fnsave out in cmp xchg cmp cmpb stc sahf adc dec xchg cld mov subl aam xchg xor add (bad) or mov and shrb xor ja xor lcall xor popf repnz mov and (bad) aaa jbe bound inc sub or ret xchg mov arpl xlat test ss mov pop push push inc fdivrs popf mov arpl add pushf and outsb nop add push hlt fwait sbb daa dec lahf jno (bad) jl pop insl inc sbb jbe adc xchg push sarl scas sub icebp pop test dec xor movsb sub mov cmp mov adc fdiv add mov or inc dec mov add (bad) and fcmove inc fisubl or xor ret rolb sahf cltd push and cmp push popf xchg lods xchg jecxz es (bad) jmp (bad) mov xor cmpsb fiadd xchg pop (bad) lods gs lods xchg inc fwait in lcall sub jns out pop pushf dec mov push cmp or sbb loopne (bad) iret cmpsl add add add push lret xor mov loopne mov mov icebp fwait pushf gs out jno sub mov sbb pop jbe lods pop sub push jge imul lods and cmp pop fwait scas ds loopne subl push clc add add es hlt dec popa ret leave mov sbbl sub inc imul jnp jmp pushf das push bound addl xor lods fcmovbe inc (bad) add insl inc fimull ret dec jns es cmp loopne add pusha push jbe addr16 mov add add mov into addr16 inc cmp fcoml call xchg (bad) sahf lahf and mov and sti and (bad) fcomip add jne sub lret repnz jg loope jmp mov xor add adc mov and add int xlat movsb jge and fmull imul int3 sub push aam out mov scas jecxz inc popl add sub push inc mov xor orb adc out aas mov xchg pop xchg mov and clc jp (bad) cmp (bad) lock add add ds lret mov loope (bad) gs dec jp loop push cmc test mov pop push fimull out mov pop xchg and stos leave fisttpll mov push pop jb cld stc stos xchg jb cwtl rolb mov aam in lret xchg xor cli mov dec sbb adc les dec dec divb in xchg push mov leave cli inc sahf jae ss aaa lea sahf mov outsl cmpb hlt pop cltd cmp lahf dec ss fiadd ja dec fisubl subl (bad) mov std sub sub cltd add add pop repz loope fisubr frstor jnp or sti lret and and sbb add shlb pop jne xor icebp or mov jge pop repz fdivp aaa fadds out fisubr mov push (bad) adc mov mov pushf sub and add add sbb cmc rcr out sbb adc (bad) jnp sti dec xchg arpl jle jecxz add not test mov mov push push xchg cltd nop (bad) and testl imul or fdivl and stc (bad) adcl add (bad) lods outsl fs popa mov pop insl shr inc inc (bad) out or adc repnz call pop xchg mov cmp xchg into and out cmp lea and or in add mov pushf xor sbb call sub mov add ret test (bad) (bad) and (bad) xchg lods fsubr sti gs stc adc outsb cli adc inc sub mov cmp (bad) (bad) ja stos jo cwtl lret pop lahf std cmp push rcl adc lahf sub imul push pusha push dec cmp test aas dec push test xchg hlt xchg lods sbb add jle sbb inc cltd push int or ja lea or pop jmp loop xor mov adc pand fisub jnp push call js dec movsb sub and adc mov xchg stos add add and xchg negb mov sub sbb cmp stos pop push pop mov ficom data16 (bad) mov test sbb inc js add into in fadds xchg (bad) pushf (bad) hlt mov (bad) out out je sbb ror imul inc add add test insb dec and sbb xchg hlt xchg lods jl das imul jge and insb mulw mov fwait jno push arpl daa or dec ds cs mov adc and cmp in adc jb pushf dec dec cmp lret or das cmpsl or push mov ds add sbb outsl test cld adc push jp mov sbb mov or xor fistl add cli test pushf popf and (bad) push cwtl push push (bad) mov jo xchg cli aam dec mov xchg xorl loopne push das in mov sbb je sti nopl add add jecxz push mov jns add popa xlat das sti mov (bad) jno xchg pop push cmp cmp and xchg outsl xorb or jle popf inc (bad) ficompl mov sbb dec mov lds xchg adc adc inc pop xchg in add or dec imul add dec add (bad) ds (bad) lods cmp cs jo cmc jae aas pop iret dec jno inc xchg in lcall icebp sarl jge es cli lea or loopne xchg iret inc mov dec (bad) sbb push mov in pop stc push inc dec out daa scas or mov shr inc push inc cld xchg int3 mov mov add dec xchg les ja in into xor ret inc jg imul cmp sub lds jecxz insl in or mov aam cmpsb xchg xor jp pop mov fisubl fsubrs testl add adc pop icebp fnstenv popf adc in ja movsl or push fmull jae (bad) aaa icebp add xchg js aaa shll rorl mov pop mov mov test imul outsb push add jae out outsb push addr16 pop add (bad) fadd push imul adc lods xorl lret ret xchg pop and dec push aas cltd fisub outsb (bad) je sbb jo fldcw aas cmp psllq fsubs nop hlt enter shrl imul sub jmp (bad) push mov adc mov fdiv add fdivrp int3 add sub stos mov xor dec sub sub fldl pop test lcall flds (bad) (bad) dec shrb hlt add cmp sbb mov lea and maxps sub add test les pop xchg dec adc sbb repnz addr16 lcall cmc push add movsl sub xor sbb lret jg sbb push mov add xchg sbb pusha jnp insl and xchg iret fisttpl pop sub add mov jge and mov jg inc jge jno mull xor ljmp push xor outsb sbb add out sub jno mov out lods jb sbb jb adc cmp repz fstl xor in aad add lret mov test and cli pop xchg dec imul inc in fucomi incb int shrl rcr and ret cs fist clc xchg inc test push jae pop test add dec mov adc in cmpsl cmp js xchg int3 ret (bad) je (bad) hlt jl sub add add and xchg in inc inc xchg iret fistl inc lods ret mov hlt andps aam adc add outsl outsl addr16 cmp pop orl push insl mov loopne into js aam jb je add (bad) (bad) mov in xor pop adc push adc and or add pusha les inc test dec loopne jb into sbb out add inc aaa loop sub iret nop or adc in inc or iret xchg push popa mov sub popf fsubrs sahf lcall jl je cwtl sbb pop cwtl mov inc xchg les push add jo (bad) jno sbb repz xchg ret jns cmp into dec (bad) cmpsl cmpsb mov das pop aad imul cltd pop ret push nop cwtl jae xchg in orl xor xor in jge,pn sbb xor add sbb xchg inc mov mov dec adc (bad) or mov lock cmc loope mov pop rorl xchg and inc (bad) js daa lea xchg int3 or outsb enter ror and dec push test lret dec pop xchg jg (bad) iret push jge loopne mov cmpsl rol and sub mov jecxz lds xor add and pop stos sub cltd jmp inc js cmp xchg scas dec xchg cli movsb mov in repnz jl js cmpsb popf dec pavgw into mov je fcoms cmp movsb das and (bad) (bad) xor arpl (bad) xor ror scas sbb loop outsb adc stos inc cmp adc add add add mov cmpsb daa notl into insl std jmp fisubl test jmp sarl cmpsb adc shlb add mov addl and test adc mov mov mov dec cmpsb jns out push sar aas sahf sarl mov test adc rolb add add xchg leave test into sbb push xchg mov lcall inc and nop xchg mov pop xor loope fimull stos and mov and out jecxz sbb iret cmpsl mov and in xchg aas cmp dec cmp xchg loop aad inc dec push aad xchg add push mov lock sub scas pop scas add cmp mov repnz ja mov (bad) out into popa std sti mov (bad) ja ficomp sub out loopne scas leave ret lods push insb dec sbb push jge sahf (bad) and cmc and pop sti sbb daa pop rol sahf fwait push inc add push add cmp in test sub add cs popa call adc pop cli sahf mov xor mov jb or repnz iret addr16 push jmp test cmpsl (bad) into popa jecxz and es push adc jle fidivr outsb mov pop lret fcmovnbe sysret add pusha (bad) cs jb adc add mov pop sbb jnp aad cmp xchg fidivl xor sbb mov cltd or movsl out aad xor cld loop xor pusha push aam inc cltd adc data16 cltd fldcw pop fwait (bad) js addb (bad) adc xor lock icebp data16 add add std or push lret in jl cwtl inc and (bad) pop and push add and jns push test in push cmc xchg aaa xchg jg in cltd mov das pop cwtl jp or daa pop stc push sub adc outsl cli mov pop xor jbe xchg pop jecxz shlb add dec mov jle cmp fdivrl cmp in cmc bound hlt data16 and mov jae,pn fidiv cmp rorl adc imul mov (bad) notb aad mov int add lods mov shl adc out shr fs sbb repz out add into iret or std sbb jo and (bad) aam dec or cmpsb push cltd arpl mov mov lds pop jle push sub sarl in mov cmp out dec jmp adc cmp fadd jnp mov add sub xchg push daa push daa dec push and clc adc movsl add add push or fidivrl pusha mov push adc scas mov pusha std fidiv mov jl stos jl xor pop sahf sub inc dec cmp dec in insb leave out mov lods test sub imul mov dec mov (bad) cmc mov addr16 add xchg lea out inc or pop adc dec cmp fwait scas push pusha xchg (bad) icebp je mov cmp dec mov mov pop mov cmc or sub data16 xchg cmpsl fnstsw ja loopne (bad) and enter leave mov pop test jle (bad) rolb add mov push cs and push sti jb or xor in out adc arpl les les push mov or dec clc sbb dec jecxz add mull pop sbb jne popf adc pop lods pop pop or jo insl mov out sbb mov fld push sti stos cmp lods add inc fstl sbb call lock and stos inc mov mov fmull out rolb les pop clc jp pop addl sub cld dec jns xchg fxch jp dec bound call or dec push cmp jl ret add add jmp fucomip push inc ret stos in iret xchg jg jne cmp jae (bad) sbb clc mov cmp pop xor imul sub enter vpunpcklqdq aad and daa sbb pop cmp aam les jns cmp in das cmp and add jno cmp xchg xor (bad) (bad) in xor pushf aam insl sbb and or mov xchg mov push bound push mov cmpsl mov add lods lods xchg ret lret jae xchg add cwtl movsb scas pusha inc ret adc xchg xor mov inc xchg loopne xor add add adc mov hlt mov push push dec mov xchg shlb jle cmp sahf cmp (bad) and rcrl cmp inc lods scas push pop icebp or mov xchg adc pushf xchg push aas push leave mov stos inc fidivrl cltd fisub push jmp rcll cmp lcall add adc or je and xchg add (bad) scas loopne jno mov test je bound int sub jmp popa mov mov daa gs adcl js pushl sbb or mov mov repnz pusha (bad) (bad) idivl cmp sbb jo lods or mov add mov cmpsl dec mov lea xor leave dec and pop push imul xlat (bad) mov fldcw ljmp negb mov and ljmp dec adc (bad) outsb scas movsb and je cmp rclb adc out inc push pop add add dec scas outsl push mov pop sbb xchg mov inc bndldx mov pushf cmp in jmp add mov cmpsl divb xchg cmpsb add sub adc jmp mov jle imul daa jg and mov and add sub inc insb pop mov imul sarb nop into jno jmp cli jno add inc cltd loopne inc test mov dec gs adc and sbb jecxz jle jbe idivl std fnstcw out hlt dec lds rorb pop movb dec ret pop pop sub mov test daa (bad) mov out in dec inc scas xchg xchg xor fcomip cmp repnz and aaa mov add add xchg out cmpsb xchg ljmp jb or scas dec mov (bad) mov add fmull or mov loop std lret push add push clc xor cmp xlat sbb das call dec mov loop xor xchg adc lahf repnz fldl pop (bad) pop pop sub lock ja mov popf nop pop pushf movsb mov sub mov mulb rolb xor idivl aas lret xchg add mov cwtl sarb jno (bad) (bad) sbb aad sbb or xchg and pop push fwait mov lahf rcll pop ljmp pop cmpsb shrl insb mov push sarl sbb mov es call and pusha and das stc lock pusha add add add andl mov std ret clc dec mov push xor sti aaa popa or hlt jbe cmp mov mov push dec inc add dec out cmp sbb jle movsb sub sbb jle or xor imul test out sbb sarl out cmp xor jb test fisubl roll mov or aas (bad) icebp fisttp inc popf dec mov add ret sti jne stc adc inc call push loope es ds popf shrl mov mov cmp aaa fs push add sbb popa test mov mov sub ss mov test sbb or dec ret les into fmull daa adcl dec mov aam pusha jl cmpsb push cmp lahf movsl xor ficomp jnp std dec pop pop movsl add pop ss mov push ds loope int3 jle mov cmpsb mov or icebp stos test xchg or hlt xor inc rclb mov jge or or pop adc jno stos popa or xor cmpsl loop xor int push jge and repnz outsb lea add mov ret mov push enter pop loop mov adc fwait jl lahf addr16 and jl repnz lahf cmpsl lods jle pop mov cmp in xchg dec les or mov jmp push inc xchg data16 xor sub sbb fdivrl pop mov aad add add int (bad) lret lret and jecxz jp addb test dec cltd xor rclb or stos cmp popa or sub gs das int mov add xchg mov in mov pop jbe iret bts fstl je jbe inc pop mov call stos lea icebp push pop xchg xchg xchg ucomiss arpl mov clc pavgb in add mov push sub mov pushf fadds fsubrs inc leave push jmp rorl mov fcmove imul (bad) jbe hlt xchg movsl mov push jl jle fimull jmp (bad) add add sar mov jl lods in outsb inc xchg xor loop or cmp sti adc repnz push jbe es sub cmp fstl test xchg pop adc sbb add shlb sub cmp mov insl inc imull movsl in and cmp pop call add (bad) adc test sbb dec mov sbbl std movsl test mov movsb adc and int3 adc sbb xor lea (bad) hlt mov dec scas shrl mov in or fsubl push add (bad) sbb mov pop add add push jecxz (bad) out outsl inc mov mov mov push imul je int lret (bad) les mov leave lahf sbb les pop cmc std lods mov mov inc rcr pushf inc xchg inc (bad) dec fisttpll cwtl stos ret adcl mov fs test sub add sbb jl xor fnop out or mov mov jne mov push (bad) rorl pop lods lcall sub adc sar add adc push push push and scas mov push movsl mov xchg call xlat pop mov or inc sub sub loop adc jmp and (bad) andl lret cmpsl cmc rclb sbb jecxz adc jle and rcrb add (bad) sar pop mov dec leave ffreep and jmp push push imul mov les es lods icebp ja cmpsb cld dec rolb dec sub lock inc mov xchg outsb insl or pop cmp (bad) (bad) sub lock mov mov jne inc insl mov cmp aad loopne mov dec inc (bad) repz jno mov (bad) cmc int3 mov jo movsl adc cmc arpl push mov jmp outsl jae jle out add add add push jne xchg sbb cltd cmp sahf lret cmp mov xchg scas imul dec push out lods mov adc in jnp mov icebp add scas dec pop lods clc inc or mov sub push (bad) mov bound add loop jg sbb pop lahf inc mov add lods sub mov cmp mov jno jmp fs mov clc xor icebp sub icebp (bad) (bad) xor xor sete bound (bad) push mov jmp mov inc mov pop clc (bad) ffreep push dec fldcw mov lcall add outsl cli loopne rolb xchg jecxz mov sub add pusha mov pop sbb ret cld xchg xor loop jmp popa sbb rclb aaa enter push cld mov ret xchg xor mov imul test call mov jae jp stc lds pushf lret add add bound ss fcmovne imul rcrb xchg adc xchg dec mov mov ljmp call cmp movsb sbb fcmove sub (bad) or repnz push mov (bad) cmc sub jmp jb sahf (bad) sbb (bad) sbb add add lcall rolb add fildll ret xchg sbb les mov jno in jp jnp imul clc outsb mov ficompl adc scas jnp fiaddl ja mov scas fdivrs and jecxz inc out stos add ja xor jb xor mov dec cmc jne xor pop inc sub xchg loopne jnp inc cmp ficom les cmc f2xm1 cmpl lret or jnp int mov lret shl or sub mov jp imul push add and pop cwtl test (bad) arpl (bad) out fbld push adc pop (bad) xlat pop mov jle leave add test jo out aam fisttpll outsb ljmp pop cld or adc cmp mov aam mov lds test cltd xlat stc lahf rolb add sbb cmp cmp jbe cmpsl dec addb jl test enter xchg std les xchg mov lods imul (bad) in stc mov mov sbb call mov push test jno sub adcl neg jecxz pop mov add cmp inc and arpl adc das sbb push xchg dec scas add orl fbstp dec lods mov decl dec cwtl das xlat out sti adc push jmp vmovaps jp das outsl data16 sub (bad) sti ds dec loope xchg add add mov rcll out add scas mov imul rorb arpl and xchg ret shr in add lahf or or jle inc push push dec xchg cld add out and jl inc jns adc ds xchg into les imul and add add sbbb xor cmp dec ret out lahf xor clc jno dec lods cmpsb sbb add or fimul rcrb into ret fstl fsubrs xor cmpsb cmc test and inc rclb ljmp push movsb pop mov lods loop popa jmp add cmp adc add xlat jno ja cmpsl repz sub sub push sub iret mov pushf scas mov and mov xor push (bad) into mov mov jne scas test mov repnz lods (bad) jmp (bad) mov mov fst mov out out add icebp movsl sbb ss pop rolb sbbl repz mov mov jb lret jnp xchg aam pop test lock outsb mov es insb ror sub stos leave fstl nop push sub ficomp or add add add aaa or lods push in das pushf ja cmp leave pop push pusha nop push pusha dec es xor popf das outsb inc fisubl cmp lock or adc les cmpsl mov and pop popa xchg aas mov rolb popf and add xor inc ret dec mov pop ret enter xor lock add inc xchg jno inc rcr dec cmp or adc push push aas inc pop ret and dec sub int (bad) rcrb pop xchg mov mov mov mov fisttpl add mov pop jno adc (bad) aaa pop daa lret xchg cmp and and mov cmpsl in sete add add adc add stos jb mov jne (bad) sbb cmpsb lea push clc xor add jl dec nop ret enter or (bad) xor inc das or js adc cmc popf mov cwtl imul insl mov pop cmpsb mov mov push (bad) jno dec push mov cmp add add add cld mov daa adc sub (bad) jae jno fwait cmp inc push mov or or inc sub dec xchg (bad) sbb cltd adc push hlt pop jg push (bad) dec inc push orb cmp xorl test xchg ret les push loopne lcall sub pop gs push adc stc sub push les sbb sbb push cli popf repz leave je dec lahf dec jno arpl lcall jne jno xchg pop imul cmpsl inc loop dec sbb je add repnz cmp repz bound lret jno add add bound cmp dec (bad) scas ds iret xor (bad) cmc adc (bad) dec cmpsl xchg (bad) (bad) cmp in (bad) das je adc lea cmp int3 insb or xor fwait mov push push das inc enter int3 lods lea xchg xchg lods icebp and lea cmp add mov sub or or xor (bad) in inc or and pop push rolb mov xor inc ljmp rcrb or popfw and pop fist stc fadds cmc loopne cmp xlat in or sub and fucom loope jmp add sub mov icebp jecxz jecxz and ret sub xchg mov xchg mov ret cs outsl cwtl (bad) pusha xor in push movsl dec pop cmp dec in outsb mov fwait test and jb aam sub (bad) call loope xchg xor and (bad) pop xchg loope lahf scas aas scas stc (bad) fcomps xchg inc test mov fwait rclb push sbb add rorb mov mov sti stos repnz jl push xchg gs dec insl mov mov fldenv dec cmpsb adc mov jmp (bad) pop push sbb cmp xchg in mov pop enter fwait out sbb jl pop mov pop ja (bad) xchg mov ja adc lahf jmp and js dec sub aaa push stos jns mov outsl stos sub test test dec mov test pop inc das pop sub add in (bad) jne les jle mov cmp cwtl ja push inc push and out sti (bad) sbb jp sub (bad) xor jbe test jne ret stc push lahf ret in pop jae loopne (bad) aaa pop das push mov lahf inc (bad) out in add (bad) or adc scas add leave cmc mov mov xchg mov out fstpl adc ret nop and push movsl popf adc out sbb or mov mov cmp add frstor pushf and imul pop mov scas xor xchg lock (bad) xchg pop sahf pushf mov cltd rcll add out pop rcr jae test and jp dec (bad) decb insb xchg (bad) loopne out lods inc xchg aas cmp cltd pop push pop ja gs repz mov mov test pushf ljmp mov arpl lahf ret in pop jae push das push mov add ss sub iret scas rorb mov mov sbb push mov jmp fdivl jnp addr16 sbb pusha push popa popa stos inc rcll add insb das in test cmp lret push stos test xor jne sbb (bad) mov add add (bad) iret cmp lds int jle mov cld or jb insl fdivp xchg cmc mov sbb (bad) jbe imul rcll or lods adc and pop cmpsl adc cmc jl xor (bad) ds push cmpl add add leave and sbb ret xor cmp test int3 jbe pop out cli or lock iret push sahf push outsl inc out imul sub jnp call stos push mov jp mov cmp sub pop sbb repz sbb add nop js push (bad) mov dec test sbb imul nop inc in psadbw addl push push lcall pushf imul (bad) sub cwtl repz pop adcl scas jbe push lret mov sbb scas push imul add xchg mov std adc pop push jl out pop mov mov mov out push ret or add cmpsl cmp fistpll and dec call xor cmp sub ljmp or jae sub (bad) mov loope stos jno rorl pop dec add add addr16 test (bad) cmp movlps daa sahf mov add xchg cmp push or mov cmp scas jp jnp mov outsb jbe loop xor (bad) hlt in dec cmp jecxz mov mov div sbb pop test daa divb iret int3 (bad) movsl add mov sub mov arpl pop push nop push (bad) idiv mov popa and sub jne andb sbb jae pushf xor das jmp xor out or hlt les ja stos into mov (bad) sub add movsl cli lahf sbb lods ret xlat popf pop sbb std and fwait loopne les and loope inc lock push cmp insb sbb fsubl lock ret dec add (bad) aaa leave loopne,pt repnz pop jo add mov stos mov std xlat pop pop popa mov add dec mov popf dec pop in pop fisubrl xchg iret mov xor pop outsl or test xchg push inc add mov push cmpsb pushf cmpb dec jl fs ficom nop pop or vmovupd xchg mull addr16 fiaddl loopne inc (bad) pusha ljmp das dec in push sti mov movsl mov add adc das sbb repz fldt add pushf faddl pop lret lods jbe lahf repnz ret mov jbe pop popf cmp xchg mov push dec push and xchg scas cltd in sub pop mov shlb inc mov pop hlt jmp das imul sbb add add movsb mov add ljmp pop push fadds loopne push rol mov mov add or mov fcoml push and imul jb fidiv xor movsl xor mov mov test sarw add cmpsb jle push es out (bad) jbe cmp pushf in neg mov test adc insb push sbb outsb movsl jno inc out subl inc in sti pop inc lret dec pop inc jg and xor sbb pop aas out cmpsb mov mov lea mov pop push dec mov sub or fwait sbb je lret sbb add scas inc mov movsb pusha push lock sbb mov mov mov or imul jbe jo cmpsl push test rorb sub (bad) inc (bad) cmpsl (bad) into sub loopne dec push add sub add mov pusha shr adc cmpsb test data16 bnd dec jnp sbb and add mov or jecxz into mov cmp ja negb int3 ficom dec jmp cmp fnstcw ret jbe cmp ja rolb lea addr16 push arpl pop shll push int3 pop lea or loop sub and fwait outsl cltd or loope adc outsb add jo fwait scas cli push inc insb cmp and mov mov insl and loope sbb xchg (bad) stos les icebp andl std insb mov lods movb fsubrs push xchg push (bad) (bad) or mov movsl xor mov fwait (bad) sbb add and add rclb mov pop mul cltd sub ljmp les icebp jb xchg sbb push xor inc jp imul xor cmc outsb (bad) pcmpgtb mov test cmp mov je jne pushl add xlat hlt xor lret insb xchg push mov and fisubl mov adc ret sbbl loop jecxz orb sub (bad) cmpsl ljmp and push inc mov test bound sbb xchg dec pop pop in pop add repz inc sbb mov cmp lods fisubl sbbl push mov cmpsl cmpsb push shr jecxz sti repnz ss les xchg and xor inc popa sbb xchg es fist xor adc push and imul push jecxz sub je lret (bad) push cmp dec int3 sbb mov lahf movsb sbbl push (bad) call movsb rcll fnstsw or jge int3 xchg jl das mov sbb mov jbe rcrb pop xchg repnz inc or imul xchg mov mov inc dec mov arpl pop and push jge or dec jp fistp sub call pop (bad) out cs cmp push lcall cmpsb push cwtl in in xchg call out fistl and (bad) into cmp and or jns cmp xlat neg cmp add add xchg roll cmpsb sub mov inc push add mov mov mov mov test dec xchg jns mov cmp or fstpl mov je and xorl adc lcall div sbbl fwait push jmp and outsb push add addr16 add mov cmp add (bad) hlt cmpsl sub int3 test or push jb leave stc jnp pushf mov ljmp add aaa mov insb mov imul mov aam test sahf jne lods cwtl jle lea insb mov add cmpsb mov inc shll das bound inc mov inc push call out icebp (bad) in xchg orl sub pop or das jne push (bad) scas sarl sbb pop ja (bad) inc icebp testl fcomps add loopne pop into ja xor mov add dec mov jg and adc int3 cld xchg mov xor dec add jmp je jl dec push jle and dec or addr16 pusha fmull cmp mov das aad xchg cmpsb in daa jne and ret and and or push outsb scas xlat notl fucomi lods ret movsl les cli adc dec jl jecxz lahf pop (bad) hlt fldlg2 das pop test mov dec mov repnz xchg das ffree xchg outsl ficomp fild cmp sbb cmp add ss inc lods xchg aam push inc ds dec insb inc ja sub pop cmp test dec mov fsubl pop push adc and jge sahf jle dec cmc add ror ljmp lcall scas cmp xor dec cmp movsl shrb mov sub sti addr16 lcall imul out test imul pop add imul cwtl lret in addb cmpsb mov pop aaa xchg pop pop mov test sub jl inc push pop push mov fcoml push add push fistpl dec aaa pusha or sti data16 mov (bad) cli inc icebp iret pop iret jecxz nop test inc dec push mov jge js cs int sbb xchg loop lret push jp addr16 neg push mov in aaa cmp pop (bad) jmp movb ds cmpsl or dec sub in pop movsb pop bound sti outsb mov dec into mull imul out cmp pop frstor or mov dec mov xchg jno stc loopne out popf inc pushl (bad) popa and mov movsb dec mov popa outsb mov or push sub das jo fxtract imul add jecxz add cmp inc mov js sarb sarl mov mov pusha (bad) loope scas shlb adc ds or pop call pop test pushf out fldt enter pop jp ret out aas add icebp mov sbb aam addr16 out xor add or push sbb xor cmpsl jo inc shll sub and aad adc mov aas adc and lcall jb xchg xchg mov inc adc dec add sar testl jb aas popa (bad) cmp (bad) ss repnz pop xchg xchg cwtl mov rcl clc push sahf loopne cs add or roll loopne lods scas (bad) mov subb hlt push lret nopl ret repnz fnstcw daa pusha mov xlat push in jb sbb cmpsl lahf ret sub mov adc call add out movsl outsb imulb jo aas cmpsl mov adc cmp push push mov push pop xor add (bad) sbb mov pop stos inc push mov stos push xor jge pop cmpsb mov add out dec pop or out int mov xor in add sbb push es and sbb push (bad) mov or test jno call and idivl enter push jne das mov bound adc jg mov xor push inc jb cmpsb ret (bad) sbb jge or push loope sti jae in xchg adc add jle repz pop xchg call add mov test push cli push int daa jb add adc xorb decb scas and sbbb push lds push lea shll out jnp fcoml lods mov enter mov popf outsb imul xchg outsl mov add push and hlt rorl out pop add clc push xchg nop xchg or push test ret jo mov bound sub jns xchg out pop jnp jb ret lods nop cmp mov xchg push adc cmp adc fsubl subl add add cmp lods mov jno mov mov mov xor fsubs cli outsb adc or andl shll dec push aaa hlt repnz mov ret cwtl adc xor je sub sbb movsb sbb mov in aaa stos or mov dec add and rorb decl aaa add test outsl add push insl aas and xlat xor push movsl jg,pt mov inc push mov push push fwait test in jmp inc mov cwtl push movw roll push pusha aas adc mov stos xchg or push fldenv in popf add add add scas fbstp addl and aad sbb enter cs add or fwait nop fnstsw mov pushf inc dec imul enter aaa pop xchg push inc adc divl jb (bad) iret cmp add es fild add jb in (bad) repnz dec cs xchg xchg nop add sub adc sahf in xchg test cli jmp push adc addr16 xor lds gs and shrb es int inc adc int3 pop jp insb sbb int3 dec (bad) out xchg bndstx add add addr16 dec push sub insl mov cmp outsl push in test adc jo sub cli inc mov jp sub cmp ja mov repz or je dec push in cmp cmpsb data16 ds dec mov dec and cmp das push add (bad) pop je rorb sub sbb testl pop dec in fdivs in xchg out andb jmp jp lea and mov push test mov cwtl lds mov pop outsl ljmp push test pop enter bswap dec aam xchg cmp mul hlt cmpsl push add xchg into push cmpsl lods cmpsl jo mov push cmp jp mov mov rclb mov outsb fbld je lock mov scas sub std sbb adc daa push or jo dec pop lea xchg jo test repz adc add or aaa xlat xchg mov pop (bad) fmull inc cltd inc xchg sbb idivl push jp mov movsl mov jnp sbb push and jmp xor fdivrs ss fist stc or and das sbb or or xor (bad) add inc push jl xor adc bound lret loop cld xchg ljmp xchg inc adc pop (bad) scas stos inc cwtl movsb (bad) pop xlat mov lock mov ss leave dec in or lds xchg sbb jb xchg xchg int mov xchg adc xor add clc mov sbb add mov dec test shrb mov cmc sbb jno shll push xchg sub inc roll and push mov pushf cmp push inc sub jo in pop and jecxz lds inc (bad) popa ljmp inc data16 inc pop inc in add add cld inc push xor ja inc test sbb (bad) sahf aas sbb pop jmp call cli push leave mov ret sti add stc fwait enter inc mov lret aaa mov add popa and (bad) push sub das mov inc cmp add add mov sbb or (bad) xchg sub jns fsubrs mov push (bad) imul or push cmc loopne push and stos shll scas aam les and setno push mov ljmp lret mov push out in cs pop mov add dec mov int3 lds pushl xor mov roll push inc adc push movsl add aam xchg adc jge repnz aad add cmp ljmp in sbb test addr16 sti push xchg sahf cli insb fistl fst add cmp cmpsb in add int add imul enter ror mov popf pop dec mov mov fcmove rorb mov pop icebp and ss xor and adc test xor mov mov and mov pop js push jg in or mov mov out pop shll sbb add xchg xor ret rcll fnsave in mov cmp aaa aaa jae int3 dec or pushl mov or fidivr dec push stc cli lock mov ja (bad) std cld push test and and fildl pop leave jmp aaa mov stos je sbb dec sub test lods (bad) jo (bad) ficoml cmc lock popf add cld inc ja push je xchg sahf call sub les pop mov insb les mov rcll outsl test xchg and inc sti mov ja shlb rcrl cs cmpl stos add lea mov movsl inc out movsl in in sub add pop adc jo repz adc mov dec es adc sbb cmp xchg xor (bad) pop pushf popf jnp ficomp int push lret push xchg cmp pop icebp in dec in fdiv dec push rolb mov (bad) in sub jnp cmp xchg lret sbb add das mov push data16 xlat lcall ret mov cmp mov popa rorl in sbb adc mov ret jmp ds sti mov out ljmp mov dec add add push cmpsb out mov das mov dec daa push mov mov test xor inc movsb add jo rclb add mov adc imul iret icebp lock add dec mov jno popf push pop sub add mov xor push aaa cs mov test testb mov (bad) cltd (bad) mov cmp pop lcall stos pop pop fwait mov imul in jne inc lret fldl xor or in xor ss std lock cmp and add ret mov stc add in push stos push push push fwait mov into popf test das scas cmp insb in popf scas int3 fwait lcall mov ja cli int es sarb xchg addl push (bad) add xchg je in cs out xchg sub and or pop mov iret push or add add pushf popf or shll mov ret xchg jl popf movsb les mov sub jno xor in hlt test push dec ds rorb fnsave mov arpl lret push adc push mov push cli lret sub xchg repz push pusha push shrl xchg cmp call pop loop add add in xchg js xor push (bad) mov inc ret pop aam and pop sarl sub into mov nop addr16 sub movsb aaa out xchg mov idivl xchg test lcall aas add (bad) cmp lods pop cmpsb xchg adc xor dec fnstenv test add test xchg dec mov or dec push add rorl ljmpw into sbbl sub ficom (bad) or rol out int fisttp dec mov and (bad) dec scas neg jle xchg and outsb (bad) decb pop push cmp dec (bad) out add imul add add add jp push nop (bad) and mov add dec addr16 jne (bad) or daa add adc int3 (bad) xor int cmpsb icebp imul insb out xor insb push xor ljmp add push addr16 jbe cmpsb adc and pop adc sti pop jb mov mov pop dec pop pop mov rcr push cmp xchg gs loop sub jge mov mov jne gs cmp rcl xchg cmp lret and xchg lret shrl rcll pop push sbb cmp cmpsb ret arpl lock inc jmp mov add lahf xchg and mov ret (bad) dec (bad) xchg xchg pop sub sahf sub push inc xor inc sbb fs jp movsl jle mov test jecxz addr16 insl outsl nop inc sub daa fxch push ja or ficompl mov call inc jmp test jo loopne mov inc into mov add add add pop push inc das in or inc cmp movsl mov enter mov xchg mov dec xor mov or push mov cmpsb mov mov cmp sub fdivrp pop or lret into stos jnp pop out rcrb mov sti cwtl icebp dec loope push jg (bad) (bad) mov addl add add and daa popa (bad) scas das fnstsw jo mov cs (bad) or negl or in push notl dec cmpsl popa leave inc js iret aas sbb jns ja add xlat in movsl in jnp cmp jge inc ficoml cmp pop xor sub sbb cmp push add add adc pop ss jl scas icebp ljmp push pop aas xlat push movsb les and sub or mov xchg (bad) mov cld rcl mov mov sbb inc dec jmp inc iret fcmovne sbb and lods test (bad) adc sbb out adc jle stos ss pop xlat mov stos mov add scas leave push pop mov (bad) mov dec iret mov (bad) ja or fwait xor ss mov js add sbb je sahf mov xchg and (bad) push xor nop inc popa jno cmpsb cmp enter add jecxz ds int3 sub mov xor sbb and add js in lcall inc mov inc pushl xor sub loop mov out (bad) mov mov je mov stc and aad pop ffree or xchg inc clc popa jg add push lret enter jmp push int adc enter inc cmp pusha mov sarl sub add add xchg idivb sub les es fstpt xchg cmp mov sahf repnz add scas das inc lock orb pop jae std mov outsb cmp in ljmp and and dec cmpl cmp xchg lods sub mov rclb xchg cmp (bad) pusha mov loopne mov cmp cmp dec lea scas xor add cltd add cmpsl ja sahf and push sahf xor in data16 (bad) jae (bad) mov movsl or push xchg sbb add sbb xlat inc xchg mov jo mov mov dec fst pusha sbb push jge or or xor or adc stc sbb (bad) out and dec dec insl mov pushf cmpsb mov stos mov idiv mov aas or inc out jmp pusha adc xor stos sub push xor out ds cwtl rclb test cli push add push dec out or jle push rcrl dec test rclb fs mov test and rcrb sahf jo cwtl lds lcall inc pop shll mov and int3 mov mov xor jge imul cmpsl cmpsb push shr loopne loopne and movsl or mov fcmove jo jae inc adc dec xchg and xchg pushf cli movsl lock mov clc scas adc or xor mov adc aas idivb jle add xchg pop add aam fdivl dec mov clc xchg pop fisttp mov mov cwtl in xor lcall xchg xor add sbb aad insl mov out ds pop lahf xchg cmp push add cmpsb lds or popa pop mov popa xlat das xor dec mov (bad) inc and (bad) stos stos mov push mov jl add cwtl inc fiadd rcll jg mov int mov sbb dec xor imul add test cmpsb sub sub (bad) addr16 rolb pushf stos xlat icebp add loopne pushf or and inc fwait mov adc test and jbe pop dec push add mov sbb pop and add popf and push push mov hlt push add lods ret cwtl and pop shrb (bad) outsb cli sub push fisubl call jnp sti adc iret and pusha push roll push (bad) rcrl data16 popa xlat ja pop pop pop jno test jns sarb and push sub flds in jo lds call add inc lea mov pop movsb repz repnz sbb ljmp dec add cmp insl sbb cmpl adc popa in jmp hlt mov ja inc push inc dec mov dec cmc mov movsb notb stos jge orb cmp arpl add xor and lods xchg das insb cmp lahf sbb push and ja sub out je (bad) jecxz pop fldt iret ss xchg cli add cmp sbb les sub (bad) pop inc in leave daa cmpsl push xor mov adc mov imul pop jecxz repz mov aaa imul cltd jle and add add add sbb mov jae mov push in mov push push aas and cltd lahf mov mov mov lods push sbb fs cmp mov and outsb (bad) ret sbbb push xchg adc sbb popl ja cmpsb cmp inc ret mov sti mov sahf int3 add cltd push dec mov cmp ficoml adc mov push inc sub aam jmp or adc push orb pop adc rclb popf sbb cmc imull mov mov (bad) ficompl add sub in stos mulb mov inc shlb add cmp mov xor lds fwait inc arpl dec cmp cltd (bad) decl or jmp mov cwtl jle,pn lahf xor aas xor sub mov divl mov lret lret pop movsl xor pop (bad) mov and fcoms jns (bad) jno js add lods mov je sbb push pushw cmc adc int3 or dec sbb inc repnz mov adc ds (bad) gs iret adc xorl sti cmp jp imul int3 or clc mov push hlt xorl cs test arpl mov aaa scas (bad) iret ret xor xlat jnp push pop dec out lea sub pop jl lret fsubr aaa push xor gs rorb arpl mov sbb pop mov dec jecxz inc (bad) je jns fdivl mov xchg outsl into (bad) cmp test jmp xor out enter lcall in and jecxz lods push aaa in cmp sub xor movsb rcll mov adc push aad xchg push mov outsb shlb sahf mov lret test adc or imul lcall shr movsb sub add js and (bad) cld push xchg push xor mov test aas loop push insb daa pop sub inc jae xchg cmp scas add adc fisubl (bad) clc mov mov cmp (bad) push mov push insl int3 imul jmp cwtl mov add add mov stos xchg dec mov mov mov xorb mov pop imul clc cld push adc add mov xchg scas out pop mov xchg lahf mov inc addr16 push add inc mov (bad) add inc mov les loop xor imul jb xor xlat (bad) lret roll or dec and cmpsw cmpsb cmp and xchg jo mov push sbb mov stc inc sub sub aaa xchg pop fildll into jbe and lahf sub inc fidivr in aam fldenv sti dec xchg loopne mov fisttp sbb mov add xor rol sub adc jnp clc repz push mov xor faddp daa xchg in sar sbb sub mov pushf jno jns int3 mov pop jbe push and arpl mov fucomip test push sbbl inc lods enter rcl add insb xchg rol mov pop or or ja mov out sub mov mov sbb xchg and mov mov and cmp sub mov jno in cld jno pop cwtl cmc (bad) aaa jno sub pop jnp fs push inc in rolb mov add cmpps push popa dec sbbb fadd mov and shrb inc cmp mov sub loope xchg dec dec dec mov (bad) xor stos nop fwait push insl sti mov adc out inc lret int loopne stos push cmp mov addr16 mov daa xor pop js (bad) iret ficoml add mov jns ret sbb cmpsb popf test js aaa push ss in ljmp divl xchg mov lret or icebp cmpsb btr jle mov adc xor test in gs iret cmp arpl out push dec mov add lahf mov add jecxz jge pop and scas jp das in cmp dec out movsl fwait popf sub fcomp or shrl out ss addb pop (bad) adc je add mov pop cwtl (bad) pop dec int3 scas xor pop fcmovne pop pop iret int unpckhps add add add repz sti fxam mov out xor pop or movsb out xchg mov movsl sbb and dec sar (bad) xchg sbb iret outsb (bad) fcmovnu pop imul mov xchg dec cltd cmpsb xor iret cltd lret sbb cmpsl sbb ljmp mov add repz cmc cmpsl or dec dec dec jo add mov addr16 mov loop cltd es loope imul push clc mov lea or daa fstpl xorb fwait jb push xor push push aaa in arpl psubq ljmp dec popf and adc push inc iret add sub pop das int3 dec inc lcall mov push testb shlb rolb xor jno adc jns sub dec and lea (bad) daa and cwtl cmp push out xchg or cmp in loop cs or aam es add xchg iret lea lock mov push cltd cmp jmp cmp lds jno fnop jne nopl adc aad inc sbb sbb cli hlt movsl into fist or add sub cmpsl xor aad in pop scas cld sahf int3 lret pop mov cmc movsb mov mov mov jg,pn cmp (bad) xchg sub lea sub pop ja adc add sbb insl add push jbe,pt push pusha aaa mov adc icebp inc insl sbb lahf sarb add xor cwtl stc rolb hlt dec sub pop jnp pop add push jl push pop add and mov xchg jae cmp cmp push xchg xchg push (bad) mov cmpsb test dec pop and pushf cmpl mov jle pop outsb and inc icebp jle lret add dec mov and ds xchg aaa daa pop stc or add add xor inc add lcall ret inc lods push nop sub imul adc jo push push inc cmp sti adc inc jbe dec dec xor and (bad) popf test pop lods cmpl adc std lret sarb mov sub lock fucomi jge jne mov das cmp decl test call ret jmp jno loope clc or dec imul dec divb lods lods push call test rolb or aaa mov push sub (bad) imul loop cmpsl dec lods popf test inc and add sarb rep mov sbb dec pop and pop jl scas mov mov and push hlt xchg sub fldcw fcmovb jbe mov add inc xchg scas outsb jmp xchg mov and ss inc inc jecxz inc xor or jl das leave fwait rcrl outsl ret sbb add pusha pop mov adc sbb rorl or aad pop in mov in cld repnz aaa and inc push int jmp dec xchg test bound ret fiadd jnp pop push int rorl sbb or das sbb inc bound ss lret pop daa add add xchg sub xchg inc push or pop jne push (bad) cmp or mov cmpsb xchg mov jmp lock and (bad) mov inc imulb ficoml mov dec gs or inc popl rcrl mov lods push pop or dec push paddq insl insb sarb adc add pop or cmp mov adc rorl pusha out cmpsl add shlb sbb cvtdq2ps lock notb ds cmc les push jp aas das fldenv xchg dec sbbl xchg inc push cld fistpl ds call add add add adc jbe das jecxz xorl (bad) adc icebp and or fldcw sub cmp jmp out xor dec mov arpl and mov mov adc push dec cmp aad pop shlb inc inc mov out dec loopne cwtl jnp push sar adc movsb sub jmp xchg out xlat cmpsb mov lcall push repz jo fildll inc mov jns not cmpsl jge aas cmpsb stos mov scas dec sub push fistp out loopne pop adc das icebp push jl sar push and cld std add add add adc sbb mov xor jmp cmp inc cmp int insl sbb inc dec mov rol jle cli pop cmpsl jne xor aad or adc mov sub das in inc adc fs push movsl xor pop ljmp dec adc dec push push orl add add repz mov mov loopne cmc lods fstl jl push ret clc jae fs fnstsw add popa data16 into lea out and movsb lds mov xchg lahf pushl fldenv inc mov and out lret cmp xlat add add insl leave xor or adc std fmulp mov or (bad) and ja push adc test imul lea aam push cwtl mov pop pop dec adc stc scas push inc push and dec test aaa mov fsubrs push add out enter add mov cmp shrl lods test out mov data16 dec adc mov xor aaa loope dec pop pushf cmp fldcw cmp mov fdivs cmpsl rclb daa loopne aam cmp (bad) call out mov sbbb addb add mov inc movsl xorb mov mov icebp cmp pop pop scas jae adc gs decl setge mov push cmp cmp add cmp in add xor insb or sbb int3 orl push clc jb stos test jg mov ss js jle sahf jmp scas and dec int xor in repz arpl mov mov addr16 mov fsubr sub mov jne push add add out lret lret clc fwait cmpsl push adc pop aas call mov xor inc push or int sbb fistpll adc js cmp add add pushf lock cwtl xchg push loopne mov ja sbbb mov xor adc notl xchg cmp lret imul dec add mov and xchg pop dec jecxz rcll cli subb cmc leave mov add push add scas mov dec iret (bad) and fisttpl js jnp mov dec repnz adc bound dec fisttpl les mov or inc and pushf sti (bad) jmp out fidivr daa mov xorl mov xor or imul push rsm cld loope mov aad add movsl mov jmp enter fimull std rcl dec movsl jmp aaa mov sahf dec int rorb adc (bad) mov inc pop movsl cmpsb out aam xchg (bad) mov pop xchg xchg mov lahf jne push lcall mov mov push test rcl add add lahf nop movsb cmpsb ret push leave lret lahf std (bad) cs jg xchg mov ret mov cmp ja in loopne out (bad) test repz stos mov jmp sbb std mov inc push stc push push jne mov jg jbe jmp mov pop insl inc (bad) (bad) cld push adc mov out mov jns push loopne je cmp in mov (bad) sub loope xor das movsl xor xchg leave inc adc (bad) xor push inc mov pop push sbb stos out add cwtl leave pop lds call xchg les cwtl jg xchg jb dec fldcw cltd sbb popf adc repz mov push push mov int data16 add add lea notl cmovb es into (bad) cmp ret in mov and movb mov mov (bad) mov push test inc (bad) inc dec lds push adc add idivb stc cld xor push push pop adc push xor add add divb (bad) xchg lret lahf jne add pop add xchg jo insb xor les pop repnz xor cmc scas loop mov inc stos outsb pop (bad) dec repnz mov pop leave (bad) in mov mov shr sub push inc add and ds add pusha sahf adc jne (bad) push jns cwtl daa mov add dec into fidivr fwait shrb ss adc xchg xor mov mov std inc sub cmc or repnz or push push cmpsb sub (bad) sbb jb in fsub mov cmp mov add fstpt mov fdiv in loopne push pop in xorl add add into or sbb cmp repnz or mulb pop adc xchg (bad) jo orb xchg xor lock in and mov movhps es les hlt add push hlt fsts dec cli add add inc mov xlat sbb popa outsb shl mov mov (bad) in aas adc rcl or ljmp push test (bad) mov and add xchg cmpsl lods popa bnd add out mov call sarb cmp idivb lret popf adc add add sub mov and lret loop xchg clc jb out jle mov mov pop aaa int dec ljmp subb pop mov mov mov js push pop mov pop lret mov icebp inc mov aam jns cmp test dec stc leave dec push jmp inc sahf or cld (bad) rclb inc call xor mov push xchg std or in mov call or fwait push lds aaa inc lock lret int jge out outsl mov test imul rcrb fmul mov add add mov call movl es notl dec lahf pop loope sbb jbe cmc xchg xchg sbb xchg enter pop fcoms push xlat xchg jg add inc mov (bad) xchg inc das jae pop (bad) mov pop mov mov add sub lods xchg jb pop adc dec dec add jo push push adc dec xor pop or push mov jae enter sub pusha ljmp pop outsl and lcall inc decb out push xor sti icebp jle sti add loope xchg sbb mov popa add and movsb outsl nop pop cli rcr shrl inc sbb mov nop xchg inc sub or sub aad out mov dec jo imul inc adc mov mulb xchg pop pop push dec popa fldenv ds inc mov lret add (bad) data16 les add in (bad) hlt into jp cmp sbbb arpl and fsubrl push push xor icebp sti (bad) (bad) pop mov cmc inc ss sbb jmp mov into xlat push in inc rorb out xchg sub xor idiv add ds mov popf jae sti pop loope push sti movsl push sub mov sbb add add jo hlt loope cmp cmp inc into dec lds mov decl jecxz jne loopne adc pop inc (bad) push push repnz sti lret adc push cmpsb xchg fdiv mov dec xor dec and or dec nop fisubl outsb adc sbb lahf mov pop fnstenv xchg aas cld push add add fstpt wrmsr push cmp pop inc or jbe daa mov dec js scas jmp mov adc mov sub xchg shlb (bad) adc jl push rcrl int cmp cmp inc fimull sahf mov pushf inc cmp pushl mov aam xchg jge mov bound (bad) xchg push cmp or fimul movsl add insl je add sbb lea call add in fnop push jg int adc imul xchg fist inc add add int3 scas lods xchg les dec xchg mov repz cli jle fucomip mov push stc adc cli push jns mov mov insl (bad) (bad) jmp mov cmpsl sub in int push push pop ret cmc xor mov pop das lret cwtl fdivs movsb adc sub call loopne add sub adc xor push test sub jg mov insb jecxz cs cmp outsb mov cmp rcl inc dec ret dec adc out xor les jo push fldt test sbb inc xchg int ss dec sbb imul or jo fisttp jmp add popa or adc add daa jmp or mov lahf push mov cmp scas dec jg pop lcall pop jbe in or fmuls jge adc lods push mov mov test rcll ja stos cli jmp inc pop movsb es sbb rcrb pop daa adc adc cld int stos add push divb jbe and and push jp jge pop adc cmp hlt push jne fs js and into push pop xchg call dec loope into ja aaa jg test jbe ss xor sub (bad) pop add jb push pop je test outsb and sub divl ja push adc test pop and sahf mov in icebp repnz mov push mov jecxz xchg add fwait bound xor lahf mov in pop push mov pop sub add jns repz pop jns xor or mov imulb lds es outsb ret xor aam hlt add fidivl cltd nop aas lea and fimull xlat out mov imul mov mov aad cmp adc fidivrl cmp rolb push imul faddl imul insl sbb jl push push js cmp cmp iret loopne loopne,pt mov dec sarb xchg enter or aas clc dec pushf loopne ja inc fbstp jae fldt push (bad) sub adc inc push gs sbb ret popf fistp add sub dec cmc pushf leave sbb mov dec fcmovnbe dec inc shrb add adc mov (bad) cli dec mov mov movsl iret test or or inc xor jae pop lret stc jbe ds xchg mov pop fldl and out aas add fimul pop sub out inc adc (bad) fistp add adc fsubs incb mov mov jnp inc mov in gs repnz stos insb mov je aaa lock push cmp inc fs jge xchg negb orb push push xchg dec xchg xor adc stos add insb addb mov rolb mov call lret xchg into outsb js nop add aad xchg dec adc adc mov js aaa xor rorb xchg xrelease dec das jno stos mov idivl decl pusha je pop jb das addl jae jnp (bad) nop add mov in out xor push sbb (bad) fisttp jecxz cld fistpll cmp sti and stc cmp or or cmp adc jecxz xchg mov sub ss push test mov lahf xchg imul jp dec leave lea popa mov stos aad jg cmp add sbb xchg inc or pushf sbb add push (bad) test lods sub xlat neg fldcw (bad) fdivs jno test push xchg mov xor subl pop mov pop aad test add lods loope sbb pop mov out pop sub ss adc jmp dec jle das js cli out sbb pop les out push push inc clc not push (bad) imul out pop shll lcall inc aad lahf jnp mov scas mov fistp imul les cmpsb lds daa push mov add mov jns ror add mov loope nop ret pushf idivl daa fbstp mov lods inc xchg cmpsl xor insb inc jl dec mov insb aas lcall xchg adc loope je aaa mov in sbb pop enter xchg leave cmp shlb (bad) or loop mov mov into test sub stc (bad) mov (bad) ja or pop imul adc fwait jg incb (bad) dec ja gs inc cmc mov lcall inc mov fcomi or lret movsb mov add jg mov (bad) jo jg inc test xchg test xor xchg push stos cltd outsl hlt je ja pop loopne (bad) hlt and add sahf pop data16 sbb mov out xchg xor mov fnsave mov pop popf (bad) inc pop pop int3 push cmp add mov das test popf jbe dec and adc pusha cmpsl xchg in inc scas shrb push add push gs mov mov in imul aaa addr16 into pusha daa dec sbb sbb cmpb aam dec or dec add mov jmp dec aaa in inc mov add shlb mov icebp pop fucomip rcl push push ret dec (bad) sub jecxz (bad) mov inc repnz mov fnstcw fsubr shrl xlat dec sbb push leave pop idivl (bad) jecxz add in (bad) jecxz loop or std mov pop (bad) (bad) mov mov stos ds ss sbb and (bad) aaa popa fldt daa xor push call pop test pop dec sub mov fucomp es mov mov ja mov push mov cmc inc add mov mov push sub cli fstpt cmp jns loope insl add add jmp and call xor int push adc divl mov mov cmpsl es dec sub mov bound inc push add mov adc lea add pop cmp lock mov divl in inc pop in sub insb (bad) loop or movl mov jbe clc rclb call dec mov push push das ficomp leave js neg lods cwtl cli jl mov cltd movsl cld push mov and faddl paddusw mov lret or test xchg inc or add lcall stc and xor add add imul insb stc adc jmp iret sub pop mov xlat test ret in rcr fdivr push dec aaa dec and shll xchg mov cmpl jne push push cmpsl sub aas dec ljmp push add cmp push push incl int3 js jle pop aad cli (bad) mov add xchg jb xchg mov loopne xchg inc xor adc jp jns add pop xchg and es dec nop mov pushf testl clc mov in popa dec push adc pop cmp (bad) aad dec mov add arpl shrb xor mov aaa pop mov mov lea jge xchg and (bad) add imul cmp jg imul arpl rcrl pop sbb push sbb jo jb adcb dec fcoms push or dec sbb ret daa dec dec testl xor mov pop repnz adc les fldcw sahf in inc inc fild jbe mov push mov or rorl mov clc insb push add out or sub subb mov pop cmp ret mov pop jge fisttpl inc daa insl push mul test jno not nop xor mov dec or fmul dec ret mov out dec aam push and mov addr16 cmp xchg pushf test int ficomp fadds test (bad) pushf imul pop inc pushf call aas adc inc aas cld or adc xchg cmove pop lret into test out js test stos out mov hlt pop lock imul xor adc push xchg shlb jmp std lea jne icebp nop idivb and mov fisub repnz and movsl jge cmc mov (bad) ss out mov xchg fidivrl test inc test mov add lods int and pop mov add jae inc cmp mov fmuls mov scas push aad lcall sub mov add outsl dec cli insb imul sub fwait sub add add dec mov add mov cltd mov mov fnstcw xchg dec sub pop inc mov test ljmp leave fs test stos jns int mov push fmull imul test (bad) (bad) loopne cmp inc cmc cli mov (bad) mov (bad) xor add aaa dec mov adc jb jne inc hlt out and sub mov mov enter aam stos push or add pop int inc (bad) sti fdivs fs pop jae ja lock sub stos add repz pop es push loop mov xor jp mov shl add add add mov sbb push mov jmp inc lea mov ret aad cmp pop mov jmp xchg loope sbb xchg xor fbld or pop lock daa mov cmc mov jno dec (bad) or inc test lods jp mov jecxz or mov mov and xchg dec scas adc iret (bad) popa pop in jbe push int lock push adc pop rorb outsb mov cmpsl std insb or scas sbb and push jecxz in mov or and test sbb and lock pop iret cmpsl hlt lods loope lods sub lea lret std aas lock jl and loop cmpsl mov into dec xor mov mov xchg jne insb sbb sub mov (bad) cld mov sub fsubl jo pop dec cmp js pop adc mov movsl add ret das movsb adc fst pop sub jno and cmovp add pushw in xchg insb loopne mov cmp push mov repz add pop dec and inc sub (bad) insb or test cwtl movsl test xor in xor mov cmc repnz (bad) sbb push add mov add sti cmc mov mov inc fstp mov add adc cmp push outsl cmp sbb sbb inc add pop enter xlat mov imul in or (bad) in dec pop fdivr xorl cmp cmp cmp std add cwtl (bad) jno bound jae push mov pop movsb inc pop add add xor mov pusha mov ss (bad) push out xor jecxz xchg mov es jns lret xor adc sbb notb repz dec call mov scas mov cmpsl (bad) jb jo xchg in arpl push xor inc sti aad push into jmp pusha lahf insb jne into pop sbb imul mov and sbb ss enter stos mov enter adc clc mov dec add and sbb push loop es addr16 add dec push inc pop ss (bad) pop outsb or mov jmp (bad) mov adc sub add adc roll ds aad pop scas jae out (bad) jne jp (bad) jne inc nop loopne pushf or repz xor imul in inc inc mov or sti iret adc loop popl jo cld test xor sub jmp pop cltd fsubl mov mov icebp jo outsl inc dec pop jne push jae lods insb jmp movsl mov lock idivl pop bound loope pop roll ret mov inc insb mov aas xor outsl imulb or (bad) xchg sub mov xor cmp addr16 add (bad) and mov test data16 lods jo loop hlt (bad) iret lds (bad) push jns lahf xorb jb cmc cmpsb loopne sbb jb mov test xor movsb out out sub push mov push divb ja mov or cmp xchg sub and cmp cwtl in ds lods insb ja lock xor sub fsubl lahf push xor mov add enter loop js mov add pop pop push adc loopne jle fimul test mov xor fistpl dec lea push pop (bad) mov push stos and movl add push hlt and stos xlat bound (bad) sbb mov cmpsb add bound imul int outsb outsl orb sbb mov jne dec jge movl ret outsb inc adc dec jns cld mov test jae dec mov icebp ja add rol sti mov imul mov call add xor imul push in adc pusha fwait imul xor rorb dec mov xchg cmp cmpsb rolb (bad) ds insl imul fisttp jge scas and sub inc fcompl pop das in repnz add nop out adc jns mov popa je (bad) cli add push pop or lds pop bound insb loopne incb dec push jnp and sub adc lods cs xor jno jmp dec adc stos xchg sti mov movsl (bad) aaa push pop jecxz js pop xchg add add or loope push bound (bad) jae adc xchg jne mov loope sub xchg lock mov out or and clc in lcall lahf pushf out push jecxz in addl rolb mov mov ljmp mov sub add and add xchg mov mov clc sbbl lea xor imul insb pop leave mov sar cmp jmp jge nop mov int3 rcl ret jecxz push les push cs adc or je insb or stos lahf xor jno sbb add add or repz ret lcall add pop ss cmp mov rolb add xchg jecxz jbe js stos mov inc sbb jbe shll pusha mov and sbb (bad) (bad) (bad) sbb add add xchg xor lds fldcw jg mov mov jae (bad) (bad) stc jae xchg addr16 push out lock icebp lds push mov outsl inc pop sbb xchg mov orl sbb dec push mov sub orl cmc fildl sub lods add add xchg out subl xor std icebp xor enter push rorl dec ljmp jmp fnop xchg fdiv gs mov aam sub mov jnp and xchg xchg rcrl test mov sub mov add add pop push in or out dec cmp add push sti fdivrs aad mov nop stc dec (bad) xchg das into and loope pop cmp test cmp fnstcw and jae fwait inc dec sti sbb adc lds (bad) jg sti sbb mov rcrb add ficompl and dec (bad) (bad) out das outsb sbb test inc dec test mov inc enter ret (bad) sub add leave xlat jl cmp and (bad) jo push aas sbb aaa xor push push sbb sub dec js imul push sbb es je arpl pop adc cltd jno add les push mov dec add out repz (bad) out addr16 mov xchg cmp xchg les les aad xor lret dec int mov in xor mov pop inc add repz pop push lcall fwait jns mov xor add jae cmp adc fist aas xchg fistpl les jno mull push inc pop xchg fisubr jge pop adc adc cmpl (bad) call mov scas push xchg push (bad) repz and test outsl adcl mov mov add add daa mov aaa jge pop arpl xor pop push mov xor sub inc cld add sbb sbb pop dec and enter mov mov dec cld rcll adc nop mov outsl mov jo sub xchg cmp sub arpl jl or xchg sbb xor dec (bad) adc ja out out movsl test pop aaa test push cmp test cmp repnz idiv neg lock sbb add stos inc pop enter arpl insl leave mov adc pop lods stos cli enter xchg mov leave push inc fcomps lods sbb cmpsb dec mov cmp add arpl add cmp cli pop jnp bound sbb jo add or daa leave mov lock (bad) adc sbb cmp adc cmp jo inc dec pop int mov mov push xchg ljmp mov scas or in pusha aaa cwtl add add jne xchg mov add cli into repz dec mov shr pop ret imul test leave popa inc icebp cmp pop push or (bad) je mov int lods mov sahf mov add lock add js jns nop push xchg lods fwait push push push add add repnz insl mov (bad) push add shrb sub iret dec push jp mov icebp sbb and sbb or inc into notl jp jno mov clc xchg insb jbe rcll into sahf mov jnp movsl int3 orl xchg xor jnp add push ret cwtl sahf rcl push and xor adcb and and mov adc mov sarl fucom sti bsr rolb jno aad mov insb lret xchg movsl xor movsb int xchg sbb rcll imul lret dec data16 fadd (bad) cwtl loope mov add add imul lock adc adc jae roll jmp fiadd xchg ljmp sub in push fisttpll mov test dec repnz dec cltd aaa (bad) in aam out mov xchg push inc lods push into jmp rorb or out ficomp jl mov add imul das push leave fmul xor popa xor scas outsb popl testl in in in (bad) ficomp jae sbb mov mov inc enter insb sub sbb and (bad) xchg or xchg scas fs dec add jmp mov adc add add push and inc dec xor iret mov sub add jle icebp lahf lret mov pop add int cmpsl in leave mov stos push and xchg dec dec fistp or rol shll xchg pop pop adc call ds mov fiaddl add pop (bad) push add xlat adc add sarl push in mov aas negl adc addr16 out jno shrb les rolb (bad) jmp mov stos dec dec (bad) dec or cld jle enter mov push and ja add add xorl inc inc inc push lock aad mov inc enter movsb inc aaa inc adc rcr aas push daa incl and mov push shr cmp xchg pop lahf mov inc pusha aam pop pushf cli xchg daa mov es cmpsl daa pop lods sahf or adc sarb add enter lahf js (bad) test lcall pop sbb lods mov fistl mov push xchg mov lock sbb push jmp out pusha mov icebp enter inc fnop add test cmpsb pop dec mov xchg and xchg push adc call add add dec pop mov out insl push xchg test add loopne add pop push mov fcmovnb xchg aaa cld in imul cmp push push int3 xor mov out cwtl jge div daa icebp sahf sub pop cltd (bad) xor in loop xchg pop jg inc jo cs jmp scas cld in or dec cmp in add imul arpl lock bound sub out rolb aas mov outsb nop popf mov (bad) push pop cmp mov shrb (bad) xchg adc and (bad) jecxz in test daa stos push stc fimull test add pop imul adc in faddp or das cmp js repnz aas xor out outsb rcrl test ds mov jg sti orl es fdivrl iret mov inc xchg sub cmpsl hlt jo in inc lahf out pushl xor jmp ds iret xchg roll pop out loop pop add inc outsl jne dec and (bad) or leave sbb add in or mov cmp rcrl dec sbb call adcl and dec imull stc or sbb mov mov push pop fcmovu ljmp jns sub int3 adc adc push hlt bound ret push pushf (bad) adc push sbb add add (bad) mov (bad) xor out adc pop jp mov pop lret scas jo mov jmp mov adc inc in mov cltd jmp mov and or mov push lahf loop imul out pop cwtl gs les mov dec xor add add popa or jmp cs xchg xor pop push (bad) arpl into scas push jo lahf or xor adc sbb das shrl dec sbb sub popw popa mull xor add loope enter fldcw jne mov and call cmp clc sbb cmc fdivrl add push xlat xchg out mov sbb outsb sbb sbb mov sub pop sub adc jo sbb (bad) jmp cmp push js (bad) xor shl pushf clc stos out dec data16 xchg jl out ret iret and push mov inc ja inc mov push (bad) outsl cmovp push testb aas xor (bad) je or or repz test mov into addr16 notl outsb jmp jge and cmp pop (bad) xor mov xchg mov icebp test test mov ss mov pushf out pop add int3 inc fs mov dec adc cmpsl dec adc add ljmp fdivrs and mov jne mov pop cld and jo cmp fnstsw cmpl aam push cmp loop or jo push (bad) add int3 xchg and mov movsl cld out (bad) and dec and cs pop and sbb addl jno and ja iret aad adc pop xor data16 xor enter ljmp ljmp aam rorb test repnz mov fiadd mov fsubs insl aaa and xchg addr16 popa daa mov add xor add (bad) dec jmp jge stos js rclb clc and inc cmp pop mov cmp sarb mov cmp pop mov lods push test jne pop out dec pusha pushf dec sub xchg sub clc pushf mov pop (bad) pop nop ss out js and mov sub js nop stos add sbb mov loop pop cmp adc test pop xor dec jg mov xchg movsl call sti inc mov pop vmulss sbb xchg pop mov repz mov popf popa popf rclb jne gs inc cld cmp (bad) cmpsb add add shll mov test add jmp lret mov sahf rorl dec pop dec pop test idivb (bad) xchg gs cmp adc cmp mov add cmpsl nop mov inc loop mov pusha pop add mov (bad) leave idivl mov sbbl fwait xor add push jae bound adc cmpsb nop les or test and adc and jnp xor inc (bad) ret xchg (bad) ljmp shrb outsb (bad) (bad) ljmp pop enter and (bad) jo xchg pop decl cmp stos xchg loopne mov cmp add dec adc dec fwait int3 fs in jl movsb in gs cli aam dec sti inc movsl dec mov test notl dec out (bad) jno movsl jmp and test int rol mov sbb (bad) rcrl push or xchg jae cmpsb pop lcall xchg inc loopne xor add add sbb sbb mov mov fist pop stos ljmp outsl pop mov sti fstpt clc (bad) fisttpll fistpll (bad) stc cmpsl popa add dec mov stc ss jnp test lcall and add adc add pop cmp push scas test addr16 aaa sbb add adc lret stos rcr mov mov imul add push xlat adc movsb std xchg pop jo dec sbb inc mov jno mov test sahf push add dec call jo add add popa loopne mov test xor inc push adc add cmp mov mov jle jo push add sbb loopne sub xrelease and aas jmp mov pop jb aaa scas fisubl scas push add inc xchg sub ljmp add mov cmp into arpl xchg in mov inc psadbw mov add mov fistl lods mov mov out pop idivl movsb xchg sub pusha push scas or fdivs bnd xchg xor movsl aaa enter pop xor lods mov push imull add mov les (bad) ret fisub int3 loopne mov sti call adc ds dec and adc mov fistpll add imul xchg adc clc jmp mov addr16 mov out xchg dec adc in cmp fwait mov jmp jp movsb into push mov add rclb xlat (bad) iret frstor lods push cltd or push scas dec xchg ja add jb aas pop add rcr out insl cwtl cmpsl sub mov cmpsb call adc bound xchg pop inc pop inc or mov xchg fildll insb xor and test add aas or adcb scas ret roll hlt icebp (bad) and mov cmp subl add scas xchg fiadd clc sar sub jae scas in mov ret and icebp out sub sarb loopne js leave fmulp dec inc mov test ret stos cmp mov iret add mov sbb aaa xchg outsb mov fs and subl les fwait rol nop in jae jnp shl in mov jg (bad) mov das movsb xchg jo cmp cmp jnp aam mov loopne lret scas int popa and aam popa jno in aam and sbb xor sti in pushf xor mov mov or testb lcall cs mov and es jl insb js fcmovnb push pop hlt es data16 pop push mov mov push mov aas test fdivl cld xchg adc jo pop lahf inc add add pop (bad) sub stos or push mov out dec popf mov lcall loopne roll cmp pop sbb sub cmp push ret cli call push add jae jns jmp xor lcall shrb and loop add pusha sub shl sub sbb mov xchg adc add sbb sbb ss mov cmc lods xor movsl inc ror cmp xor xchg repnz push lods scas shlb gs sbb lock roll roll mov ret lea inc (bad) fldenv push xchg cld ljmp (bad) xchg and cs out inc xchg jmp jmp mov pop xor dec and cld or push enter bound mov lods jge (bad) jp iret jl xchg scas outsl pop mov add add mov push cmc insb jnp adc adc add ret adc and fwait scas mov sub mov fldcw loope test fucomp jae push add mov jge in popa and pop push test ret add mov sbb lcall xor mov sub sub adc scas mov jns mov loop loope aas jle cmc mov add mov (bad) pusha mov rcl (bad) jb es sbb mov inc scas lock xlat out aaa xchg cmpsb add adc sbbl sbb cmp cmp sbb push pop bound jb nop and mov cs enter pop cs rol xchg call pop pop ret insb (bad) xchg (bad) int mov cmpsl fs popf std jbe pushf (bad) enter sbb cs shlb inc add add cmp loope mov sbb leave inc and std jl gs jb daa (bad) pop dec ret dec fwait repz xchg movsl jnp adc icebp sar or and push push jbe lret movsl stos stos call loop,pt test sahf mov xchg and stos stc inc jp jmp sub add mov and mov sbb rolb leave jecxz and outsl mov push mov fdivrl inc add mov mov test rorb out jp ja (bad) iret jecxz aaa insl imul mov imul arpl cmp icebp bound jge pop pop in inc adc mov add xchg lods cltd fildl scas pop jmp clc inc add xchg adc mov fdivl divb lahf sub (bad) push sarl xchg pop aas mov scas add add xor stos in add out sub (bad) ficoml lcall jp popf scas cmp lret icebp fildl add rcrl test cwtl pop cli inc sarb loope (bad) div mov outsb cmc lret add enter outsb adc outsl or les out lods dec sbb jmp and add pop dec lcall mov push xor jbe xchg pop dec pushf aam sub pop rclb or add or lahf dec dec jmp clc ja jle lods mov xchg inc (bad) inc movsl cmp dec push imul fidivr insl add insl sbb xchg test loopne divb jb daa push adc xchg (bad) and and xchg aas cli (bad) mov mov pusha push out int js mov sbb shrl and lods nop jbe test cmp ljmp in test cmpsb imul lock popa cmpsb sub scas adc lret sbb xor test (bad) mov iret ss mov mov in and mov add xchg loopne inc cmp ja and test ret add insl mov loope cmpsl inc adc (bad) in adc or loopne cmp lds sbb cmp ret mov bound test or adc jmp out xchg xor bound in addr16 rolb add add mov fs xor mov loopne pop jle sbb xor fs repz push sbb push cwtl (bad) shll cld cmp divps fdivs enter sbb cmp shlw dec sbb cwtl mov incl test fwait in lds mov add pop push out lods jp stc add imul push fdivrs dec push mov aaa push push mov push out push cmp loop push add push (bad) gs sbb and fsubr and mov imul jns sbb es add sbb xchg dec dec ljmp stos incl int3 push fsts je std jo sub xchg imul ja jb cli push loope mov (bad) or jp ficoml mov mov mov jp xchg scas mov cmp add js add movsb mov loop push dec sti (bad) jge push jb lds mov xor fstps and arpl pop push in imul mov pop mov and call mov inc mov mov mov mov mov and lock (bad) leave inc pop cmpsb add mov mov sbb pop test sub movsb adc xor cli cmp jmp pop sahf imul or sub push xchg sub and nop push fwait add in push pop jle aam add mov mov pop leave movsl sbb mov mov jae sub inc insb cmp push add fisubl std scas fiadd ret in xchg ret std enter insb sub jb push daa enter jae sub jmp and stos ja push ds (bad) jne loope int push pop inc xor xor das and lcall loopne mov lea dec mov loop mov sar inc clc sahf lret adc adc (bad) adc popa bound sbb ret clc mov sti inc fs mov in scas fwait push outsl cld push pop sahf out pop push aas mov lock (bad) xor xor adc or push add add or in mov xor addr16 movaps and addr16 dec jl enter fdivl test (bad) xor cmp jecxz daa scas mov outsb stc xchg rclb (bad) hlt adc mov fisubrl mov mov cmp mov mov scas inc in add pop out push aas testb call or fwait call in sbb imul jbe popw push je xchg lea dec sbb movsb in xlat add mov shlb add int (bad) mov icebp jle lea imul add add loop adc pop mov ds push push leave imul and xchg out test cmp dec cmp mov test addb pop sub (bad) jg mov lea sub iret lods jo adc aam addr16 push or dec push push test add jmp mov enter test test add pushf push mov test pop mov fwait test push push xchg jnp pop int enter mov rcrl jmp or insl lock pop mov inc and ret inc jp push jmp adc add add sbb nop nop (bad) cmp (bad) addl fwait inc leave sahf xchg push fisttpll xchg fisub loopne fcoml xchg jmp push repz std loopne add pusha (bad) pop call test cli or xorl (bad) push and push std fstl sahf jge,pn xor test lods mov test mov mov adc sysenter out int movsb clc fnstsw xlat mov pop int mov xlat test ror ljmp cmp ljmp (bad) outsb inc dec popa (bad) push rcr xchg fnstcw shrl cmp add sub adc and xchg loopne mov sub addl mov xchg xor test jo inc lcall inc adc xchg loop sub std mov ljmp pop fnstcw push or push dec lods xchg enter mov pop rcrl in cmp add imul popf or and cmp and mov lret (bad) cmp cli loopne fwait ja les popf or decb outsl outsb or popa cld xchg inc fucom fisubl bound scas fsts adc aas mov imul mov xchg ds mov pop mov add add fmulp mov jecxz mov (bad) inc and cmp in and mov adc mov ret loope insb callw test fnsave jae xor es repz data16 fidivrl pop xchg addr16 inc and into outsl sub sub pop hlt or add add aam mov in xchg pushf cmp adc dec xchg movsb sub or gs lahf cmpsl lea ret int3 and mov loop sub add jnp cmc inc mov and test loop jmp dec scas push lods dec (bad) mov pop movsb outsl mov jne xchg rcrb add add add (bad) mov lods adc jg dec mov in add gs gs push cld xchg test or jmp jb jle pop fidivrl movsb cwtl ret (bad) push inc add mov popa out insb push sbb aad pop call dec xor xor and sub dec lods sub add mov xchg jge inc test aaa and clc outsl pop ljmp or lahf push dec mov iret repz scas (bad) jmp push loop and pop call pop (bad) repz push hlt mov insb into test inc (bad) enter and call out shl or popa add loop jmp jmp push and add or iret mov int3 xor (bad) into int mov xor popf push add dec pusha jge fldcw cmpsb fstps xchg push loope push cltd call ljmp aaa adc jo mov push andl add add das xor shrb mov mov fmul imul (bad) xor mov mov cmpsl xor repnz and jnp mov xor out mov push lock js xchg cmp push push lock push pop test jle jne subl inc sbb cmp cs add pop ds cmpsl cld mov sti (bad) xor push and ret cmp rcl fimul adcl cmp pushf sub xor adc addr16 xchg sbb repnz ljmp sub jl lds les inc cli and jg nop push add add push loope jg sbb into and add (bad) int3 inc cmp fcomps mov adc pusha js movsl dec add add sub (bad) cmp mov jp mov int cmp or mov js outsl popa addr16 or inc das fs xor jae adc dec and add imulb data16 sti xchg lret repz popf fsubs movsb mov add mov stos jge sub mov push repz mov fs stc fbstp rcrl and rsqrtps sub aaa jmp push aas mov insb test jnp cmp addr16 add call sbb and dec xchg sbb shr mov fmulp sbb lret cwtl xor jecxz adc iret ds xchg inc in xchg sbb pop inc pop pop imul fidivr hlt push (bad) xchg xchg pop ret xchg fnstenv daa repnz push int push xor dec clc rcl or xchg push ret xchg push stc add push fisub scas and repz pop int3 pop (bad) je xchg dec nop ret loop scas jg adc push das mov adc mov mov sub pop sbb inc inc inc and dec add adc lods push mov sbbl inc xchg sub add add vdivpd mov cli mov rorl dec das sahf faddl mov push or (bad) in xor mov mov adc call jp pop outsl stc hlt ret fstl and sub jge rol aam leave jge mov push add cmp movsl mov mov ljmp add adc jnp sbb lcall scas xchg cmp mov cmp pop lahf js imul mov pop xor movsb mov mov jg push jg fdiv inc dec das cmp push sbb (bad) jns cs add scas cli cmp pop sbb xchg pop sahf cltd test mov xor jnp push mov ret jb rcr adc daa jg mov pop mov add inc xlat push js jmp sub int lock (bad) mov xchg or add sahf aas rclb daa pop imulb cmp add add add mov aam sub test xor or and sub out fwait rorb mov xor lahf out je xor pop xchg xlat mov jg xchg sbb insb sarb int inc dec clc andb ret push jne sbb sub loop mov push addl fnop add add jg aaa jbe pop cmc xor xor or stos mov nop mov xor push and cmp loope fisttpll jmp (bad) or pop jl mov push inc xor xchg sbb inc test sbb (bad) inc mov cmc mov (bad) nop cmp test mov movsl jns lea lcall mov test iret mov (bad) inc mov add and xchg pop push dec mov lock pop inc xor and mov shlb cli jb jle,pt in bound bound pop sarb loopne xchg cld mov mov xor or stc jp icebp sbb add mov addr16 fwait push ja lock hlt lds mov repnz sub or inc divb leave inc clc lods xchg addb je inc enter adc pop out and xchg dec inc das fdivrs cmc mov addr16 ljmp js out int mov jl cs (bad) fisttpl lock or stc in fdivs aas iret (bad) std add out sub clc pop mov repnz icebp pop jne int test arpl xchg cmp sub dec movsb pushf xchg ficom lock sar vpaddusw mov int3 lock mov add or cmpsb xchg push mov and mov inc sarl xchg int3 mov dec sub mov fs xor xchg ljmp mov (bad) std imul pushf ljmp mov ret (bad) xchg sbb push add add or daa mov movsb xchg mov (bad) or add dec in lret push jns lahf pop pop mov adc roll or pop (bad) rclb dec into out popf jg mov cwtl push rorl jecxz (bad) xchg popa xlat xlat sub lret imul cvttps2pi xchg push das sub add add bound add in add (bad) cmpsl mov jns push inc lds hlt inc mov dec insl in sbb xor test hlt xor and enter mov sbb outsb dec xchg cmpsl or lea ror popf (bad) lea and jge adc sbb add cmp rorb sbb insb movb adc in push dec das xchg add insb lock mov sub push dec imul inc mov pop insl mov jo mov fidiv sub stos sub adc (bad) jne call pop cmp add into stc xchg mov jl cmp enter testl cli rolb xor lods push pop jmp or std incb mov gs xchg das lret mov mov (bad) jae xor mov jl in das pop push sbb add dec pop mov repnz jo call movsb fsubl add xor and (bad) mov (bad) icebp cmpsb stos push inc xor lcall scas in or lods ss pop pop mov movsb inc loope gs adc xchg ficoml pop cmp test pop pop pop data16 out push mov add jmp out pop pop mov jl scas mov push testb xchg fadds jne std ret shrl jns jl or pushf adc xchg and ja mov sbb out ds and inc jecxz (bad) gs in push mov lret lds hlt adc jmp and push sub lods lock xchg jne mov cli imul das push out push popf push mov lcall stc std lds jle loope pop out sub test mov and add clc data16 cmp imul iret int3 dec inc int3 lods jle pop neg cld test push fadds lahf xchg cld xor dec dec mov mov xchg jg es or call nop sub lahf fmul jl push idivb pusha les and outsb push into shrl pop popf andl push pop (bad) push repz pop push sub mov fldt mov add add mov jno push int3 adc mov sbb arpl loope cltd popf push roll sub mov jmp jns ja test mov (bad) xor bound xchg les bound scas lret cli jp repz inc add add mov mov je adc cli js in push jnp xchg dec mov loop mov mov outsl es lahf push xchg scas outsb sbb push jg faddl inc cld sbb or movsl gs cmovno daa les (bad) push push outsb outsb mov and add imul add add pushf and jno xchg popa cmp out jl js jge lock sbb sub sub nop mov adc fnstenv rcrb push add xor jp mov mov ret mov cmp cmove enter mov movsl repz shr popa adc add add add cmpsb mov sbb mov mov xlat arpl cmp dec pop lcall out sti inc imul sub mov lahf push mov (bad) fs pop push push (bad) shll sbb mov lock dec sub les lods arpl test out inc stc jo jnp mov lret in sub rcll mov xchg fisubr jne ret and fiadd inc andb jnp dec cli jb cmp in hlt stos xor mov ljmp fldpi popf cmp mov aas xchg test jmp add add push fbstp lret popl ret xchg movsb xchg int cmp add leave add repz out sti enter jne xor mov mov push and popl jno rol jb adc loope adc outsl mov sbb pop xor and add dec fnsave pusha sub add jmp sbb pusha in xchg fmuls mov lret push lcall stos hlt jne out jae icebp cmp scas sbb lds xor mov divb ja fidivrl sbb (bad) xchg (bad) mov aam popf dec divl lock aas add sub mov insl ljmp jno adc aaa sbb loopne lret dec shl jmp jne mov lahf push mov sahf xchg lock in xor sbb pusha int adcl push inc jno fisubrl push inc jge lret pop in out bnd rcrl adc mov mov add fsubl fs sub and xlat cmp pop jl fdivr fildll lods mov or mov xor idivb dec mov cmc fs (bad) xchg xor adc inc cmpsl es mov xor cltd aad arpl cmp cmp inc (bad) cwtl push sbb dec adc jbe add pop sbb jae mov int3 xor push and roll cmp (bad) mov loope dec mov inc sahf sub pop pop or dec notl lds out int mov pop push jbe add push (bad) xor inc jle adc aas rcrl loop,pt pusha stc push das daa call add aas dec sub jb cli mov jae call ret in icebp lds and in popf je cmpsl (bad) aad iret jp sarl out jge cmp aam xlat xor sbb push ss jp xchg adc xor fiadd xor test xchg cmc mov inc mov jp adc jne add sbb sti sahf pop and arpl cwtl jne das sbb jle sbb rcll sub decb std sti lods ret mov mov adc and test int3 mull add add sbb xorb and ret icebp mov imul in xchg mov mov mov xchg cmc xchg jno fildl testl cld pushf aam sub or mov add (bad) push sub int3 les cmp fucomi mull cmc push pop pop push and cmp mov in push inc jb leave or (bad) sarl push incl out leave mov stos add cmp add or xchg in aam in loope mov add hlt mov cs adc mov mov scas aas sub ret mov daa mov imul insl loop popf mov mov test inc mov out mov sub or pop push mov (bad) jl inc sbb mov add imul ja mov hlt es push repz mov mov mov jmp leave popa bswap leave adc dec idivl jne test fldenv rclb pushf push push cmp movsl (bad) movsl jnp mov outsl push ss dec push outsl rolb ret test add add lar push scas adcl (bad) jecxz scas cld mov mov in rcl jp and mov cmc ljmp mov and into in cmp fnstcw cli mov cmp jmp sahf or pushf cmc or repz loopne jns mov xchg test insl sti pop pop add rclb xor push xchg adcl push hlt inc mov push sub inc ret ja or (bad) lds mov gs sub mov pop fisubr push or fsub xor int3 sbb adc xor stc cs add add mov push inc adc mov mov push push sub mov fisub into cmp mov add je jno shr adc stc divl or bound push cmp cmp popf mov jecxz xchg or jl test stos es enter pushf and outsb bound inc add adc imul in stos (bad) cwtd out in push notb test lea clc adc lret sarb push dec call aas stos iret sub add imul (bad) pop xchg push iret pop or loop or push jmp and sbb popa test cmp add enter inc mov pusha jnp in loope jbe mov push mov outsb push jge jnp mov std sahf cmp cmp sub pop (bad) sbb and bound mov out rclb push mov scas pop (bad) negl cwtl jae inc out fstps mov add xor cmp mov lret and jns ja das in fnstenv dec cmpsl adc lods pop and inc les xor sbb jbe mov ja outsl lcall aaa fnop (bad) out std push or imul (bad) sbb pusha xchg jnp js inc imul notl xor (bad) rcll bsf mov scas jno pop xcrypt-ecb cmpsl dec ds repnz and and xchg rolb mov dec ret sub push iret and push test mov (bad) cmpsb xchg fist ds int3 rcr int push push popw addb xchg lock lea add add jo xor into jge cmc xor jnp dec imul imul lahf stc lret add push push out pop or mov push test adc test and adc sub mov mov insb rcrl bnd cmp sub lea out add inc jge jns adc adc inc and pushf test and cmc cld std (bad) and dec out dec mov int3 sbb into rcll push stos jg jmp movsl dec or ljmp lods les pop cmp sbb jp hlt outsl inc mov pusha int clc iret movsl movsl (bad) cmp aad add add jmp repz int sbb inc leave insb cmp lods mov inc pop lret mov incb pop out add aas push cmpsb xchg sti dec inc lds adc jno (bad) mov mov jno inc in jg mov xor cwtl (bad) add or xchg cmp in daa or jbe add xor xorl call or in jbe cmp jmp shll cltd push jmp jns mov and pop inc popa adc movsl or cmpsb fs lret loope leave nop push jb int push push and or cmp xor std (bad) and lds add add pop out mov inc adc outsb and jns sub xor je xor add cmp add addr16 nop mov mov sub cmp test mov outsl js or imulb mov cltd inc aam nop sbb (bad) sub ret ja and scas mov and add add sbb repnz fsubrl cmpsb jne jle shlb push test (bad) outsb jg or icebp das (bad) int3 out mov test (bad) es xchg pop pushf dec test mov cld test adc push mov stos (bad) or pop sbb add add mov dec sbb aas mov enter fiaddl pop xchg xlat rorl mov and push clc push rorb jecxz int3 repz and subl xchg nop sahf imul mov mov jae es and fidiv add xchg pusha cmpsb and sbb shrl ret and stos es pop lea dec jmp lret je mov test testb sub push (bad) shrl subl cmp push jl insl jb add fildll xchg cmp add add adc jg sub leave shll adc dec lods push sbb sub mov les adc and adc mov mov cmp xchg shl lds pushf mov ret xor (bad) aaa mov and push mov pop jne push movl add add mov inc or adc dec stos xchg cwtl pop iret pop aas das dec ljmp out icebp pop fmul and add popf lea mov in enter pop (bad) das addl stc jbe fs into push rclb sbb xchg or push adc (bad) outsl cmpsl lret cli add sub mov xlat sub les and loope popa jno push lcall mov fiaddl ret cmp es fdivs or push xchg adc dec lret sbb xlat cmpsb mov inc aad mov aad lods push push add clc mov stos rolb push xlat add pop sbb add leave sub fistl lods aam insb mov sbb repnz stos jo,pt or pusha clc out push daa mov test mov (bad) and inc or addl jns loope sbb lret inc add aad insb sub or push add out sub sbb repz (bad) cmp jae lahf cmc fs out daa lret (bad) aas out js bound xchg pop or out inc xchg or dec int3 out rorl bound push insl xor cmp mov sbb push adc fisubr xor lds add add (bad) push lds or mov dec add fs ret dec pop daa sub repz cld (bad) lcall cmpsb pusha ljmp cmp imulb ret rclb xor fimul cmp or jb cmc mov les cmp sub mov add push incl sub dec pushf clc jo cmp insl popa lock mov in dec push mov ds push leave aad aam adc (bad) xchg repnz fcmovnb push (bad) mov adc stos add scas ret rorb pop sub ja imul xchg xorl stc daa cwtl xor test jecxz pop loopne std mov ja and xchg jae push inc cmp (bad) mov and inc outsl and push js (bad) fisttp add inc inc dec lahf mov push mov jmp js cli xor cmpsl jnp gs movsl fdiv jno jbe loopne add ljmp cs sarl loopne ss pop jecxz push scas mov push mov les loope add xchg sarl jle out (bad) idiv stos mov lds insl inc popl xchg mov mov xor mov outsl jl sbb (bad) jmp and sti lret bound inc fisubl sub hlt and mov out mov imul pop lods xchg (bad) jno ficom pop (bad) cltd push inc push cltd into xor imul in xor scas add je jmp pushf nop and xchg adc sub push cmc sbb mov add xor insl stc mov adc mov ret fiadd xor jbe push loope div cmpsb and mov inc lds push subb inc sbb xchg cmp repz insb and xchg pop sub mov mov (bad) jo mov jno std inc clc xor sbb daa add mov cld pop and std mov or dec out ret pop mov jbe test popf dec imul insb cmc jmp cmc adc xor and adc mov push leave jg adc pop xor ss scas testl pop push dec cli and scas mov scas add add pop xchg pushf mov lea pushf enter loope dec mov pushf add scas pop cltd push push mov daa jns test into scas shlb jmp mov sub cwtl in setl and movsl or in imul adc add scas aaa lds dec cmpsb cltd pop imul rcrb loopne dec popf mov cmpsb cmp pop adc mov sarb fidivl mov repnz pop (bad) int scas loopne repz pop pop fisttpll mov sbb js lret aad mov push dec outsl push pop in push ja js,pn jl ds arpl test add xchg cmp mov cmp movsl dec imul and pop orl or jge outsl push mov fsub push arpl stc push (bad) enter push (bad) mov shll and sub jmp xchg cmc call mov pop cmc push mov add add sbb in pusha movsb sbb push xchg ds test divb das inc out fwait mov jae repnz (bad) cwtl bound pop mov adc push dec pop jmp call jg mov ja cs mov dec push sub or inc in add and push adcl (bad) xchg jle aaa jno lods popa loopne xor push testb mov iret test xlat xor daa inc out fcoml cmp adc xchg mov push mov test mov adc or jge bound jb add add mov xor add fild arpl jmp ljmp jmp arpl pusha popa daa jmp xchg pusha sbb push inc mov repnz and lcall cs push divb out add inc (bad) cwtl xor loop xchg add add mov pop icebp and shr or mov mov sbb dec test inc in data16 or jp and icebp add xchg stos test clc pushf jg jmp int jne adc add adc fbld fs pop mov add add jb mov ffreep and nop movsb cs (bad) mov push push iret or (bad) or sti mov and or add pushf or incl cmp cmp jle add inc push imul push push repz mov push add add mov popa sub testl push mov jns xor pop test or sub jbe ret in adc fwait lret add cld (bad) cli add jp fs xchg (bad) lods cmp sbb lock xchg std jb push movb mov cld pushf cld hlt notl add mov mov mov lahf aaa lea push jnp mov push inc add sar xchg mov and mov jb rep mov arpl fwait pop add jecxz shlb jbe pushw jmp xchg jne loope add orl ja xchg int out ds sbb xor xchg jbe add pop xchg dec mov or cmp or xor mov clc imul push movsb fwait dec pop lods push or mov sub cmp and or mov (bad) mov cmpsl xchg (bad) lret nop repnz lea add add add push enter mov insl sbb int3 fs sub (bad) mov ja aam jbe push rcrb cmp sub rcll jns jg cmc mov ret jnp inc das mov int popl jae xchg int outsl imul pushf and push adc outsl add add test (bad) cmp fldenv pop jne add mov mov subl outsb sbb lcall mov movsb and int3 imulb inc mov lret pop xor mov xor adc dec loope cwtl arpl or repz jmp adc sbb inc mov add add test (bad) lret movsb push mov enter adc pop pusha in mov or adc (bad) leave movsl lret mov pop mov imul bswap mov inc sahf push mov arpl int cmp bnd sarl leave aaa icebp das mov xor adc into jns rolb xchg enter aam push push jge call (bad) (bad) (bad) insb cmp lcall mov shlb cmpsb call mov adc jle int3 imul mov mov fs (bad) testb cmpsl inc outsl hlt xlat je jo pop xor in cmc xchg enter fmull cmp rorl push dec int stos push and cmp pop sub mov data16 mov lcall test cli aas xchg fcomps (bad) xor stos mov inc jl sbb inc into insb cli adc xor jns sub js add xlat test jg loop or out (bad) ss xchg aad stos shl std lods mov movsl cmp insb lods nop ficomp xor push inc ret dec adc mov mov add bound rcr test inc repz push scas push push rorl stc (bad) mov add add pusha sub int es repnz sbb mov push or enter fimul repz dec adc push test aaa repz in or jmp xchg jo add cmp out adc pop cmp or mov sbb xor add ljmp xlat or adc mov test lret inc or push cld adc test data16 mov jno clc xchg push (bad) dec fmuls das mov fiadd mov dec dec cmp pop dec rcrl pop repnz or (bad) dec fdivrs hlt pop sahf or mov add or mov aad aas cld jmp add test dec addr16 and xchg push pop negl push push mov mov cmp mov or adc imul add cli lods mov mov push adc mov decb sahf xchg lahf add and add mov mov in fisub int mov jmp mov into repnz cwtl xchg scas jle push inc cld mov cld fs sub inc leave or hlt mov mov (bad) mov mov int in iret xchg repz cmp lret bound add es or push daa jecxz std cmp or inc mov lods xlat pop xchg jmp leave sbb xchg jae stos lahf ds cld mov lea mov xor (bad) pusha jg fwait and jnp imull repnz mov (bad) cmp dec or inc in cmpsb daa mov cmp add add imul ljmp mov pop pop cmc scas cmp xchg fs mov push popa adc push pushl inc mov hlt xchg pusha dec xchg xor dec add cmp inc mov mov imul xor data16 mov jmp add mov xor mov mov push or sahf pop pop jp jno std jno xchg dec mov sub nop loopne push jmp lods int3 fidivrl dec inc mov add dec push push or dec mov lods aas cmp jbe pop pop lcall xchg mov sti xchg sub pop leave sub out pop iret scas adc cs sbb sarl push mov jp jb add adc out xchg mov dec aad add mulb or aam or pop sahf (bad) adc sbb imul jns pushf dec add ss or or pusha mov or movsb aad mov or jg dec std adc not add cmp xor negl xor mov inc add movsl mov bound add icebp enter (bad) es and dec aam or pushf xor mov dec xor jae add add xchg subl inc pushw sbb push pop jmp xchg call packssdw pop jp pop push mov push sahf das or data16 aam insl outsl mov push es sbb enter sub mov mov add xor lahf push xchg add (bad) or jg in in xchg xlat mov clc xchg jbe stc je fild jmp add loopne push fidiv dec mov dec test imull mov loop pop rcl loope popf xchg pop imul add cmp xchg iret frndint cmp push mov cmp (bad) (bad) adc in xor jl icebp jns fstpt pop and xchg int3 pop (bad) out movsl push jns jne jmp mov push pop lahf enter cwtl sbb or and and mov jns mov sub xchg rcrl add add adc ficom and movsl ret cmp inc add (bad) mov pop sub mov mov (bad) cli jp imul jo imul cmc cmp push jae in sbb bound popf or gs ret sub and add mov mov (bad) hlt loopne out stos inc sbb mov stos lcall out mov mov outsl fnstsw sahf outsb or and push gs mov les das jl pop push (bad) cmp cmp xchg xchg and add std jnp jle push adc pushf in add add add add mov pop sub mov jmp ss add pop sbb or cmpsb movsb in das mov dec outsl fisttpl adc dec push jmp fs arpl xchg mov xchg fs xchg lods xor xlat push mov and pop cmp stos add insl mov outsb adc inc add inc sub mov loop mov clc leave inc test adc sbb (bad) ret mov mov movsb imul (bad) lahf fisubl inc or mov adc mov test lret push mov jbe jmp inc mov jmp push or push inc lea fwait in js out int movaps sarl lcall ljmp or repz inc or pop push test and shr movsb out xor ds jbe xchg inc cwtl es (bad) movsb sbb mov adc in cmpsb cmp xor sub add fisttpl fwait mov mov lret subb aas movsl push mov mov mov movsb scas (bad) jp orl push dec add dec cmp inc loop mov lds std mov cmp and sub xor inc fiadd div (bad) fnstenv sbbb dec add ret call jae push sbb fdiv sbb jo dec aad lods sarl dec loope and outsl rcll in pop mov aas sub mov xor in mov cs mov pop jge jb xchg push fstpl and stos cmpsl mov add add out leave mov push pop xchg ds (bad) adc fistpll push jo ja push int3 xchg cld mov push dec addr16 and jbe sub xlat sbb or inc fadd and pop sbb outsl loope pop mov or lret sahf mov add add mov fnop sti xchg jae jb cmp mov jg add add xorl in stos pop ss or and mov push add jnp xchg popa adc clc ja loope out or lods xchg add stos push repz out pop (bad) (bad) repnz mov sub mov mov lret mov popf loop dec push push adc xchg and add mov fwait pop jns mov (bad) jne jmp lret es data16 add js movl push roll fucomip orb lds lock jge inc push lods mov rcrl lock and dec mov imul add pop dec sbb cmpsb and es fcmovne arpl in test jo mov cmp dec push pop aad add mov lret aaa and fmuls lods mov hlt lret adc popa movsb (bad) xchg notb cld loop mov ja fwait sarl mov cltd fmuls adc dec fdivs cmpsl add add fistpl jbe sti dec shrd fstps scas mov sbb loope dec jno pop mov mov inc rorl pop popf and mov add ret mov popa into push and or rolb add aaa fidivrl mov pop and xchg push or dec mov push xchg int xchg incb add add xchg dec mov sub push ss loope lret or addr16 and jecxz test push iret mov add xchg pushf xchg loope (bad) push test aad lea add int3 mov lods test (bad) xor add pop jl je (bad) push leave cmp add jge jl cmp sbb lret mov mov dec mov add leave in xchg dec sub xchg xor mov jg and icebp pop xchg lds pushf adc cmp popa jg outsb outsb cmp insb lods xor (bad) frstor add pop mov add cmpsl mov insl out out sub pop lock mov sbb arpl fstpt mov (bad) cmpsb jbe mov jp je test sub js pusha fnsave lock sub add rclb adcl lods repnz add pusha rcll pushf mov nop sbb mov xor push bound pop lcall inc mov icebp fadd cmp cmp jnp in (bad) adc xorl stc inc fs push mov popa push jbe outsl sbb xchg imul (bad) lret bound std sbb jmp loope adc push iret (bad) xor jae push adc addr16 dec sub dec shufps pop aad arpl in std cmp test dec adc inc fildll lret cmpsl popf int jp andl inc pop ja push adc dec je es cmp inc shrb add xchg cmp sbb and stos call inc sub sbb hlt loop lret (bad) xor in mov or lods in mov adc xor mov repnz sub stc fsubrl pushf ss inc icebp xchg shll shrl stos xchg into dec cmpsb fldenv add ds xchg test (bad) pop lret xchg or out pop inc sbb xchg (bad) cmc inc dec (bad) xor add and int3 sub repz fstpt shrl fmuls cmp mov cmp xchg int lahf xorl pusha loopne add add scas fsub fwait icebp outsb push js xchg repz xchg push movmskps dec mov scas in nop int loopne inc out jno sub and int3 xor movsl fucomp out mov das mov idivb sub inc mov ret xlat movsb xchg in ret lea xor pop pop sub add cmpsl (bad) dec scas inc (bad) cmovns sbb inc mov xchg inc inc aaa rolb dec adc dec shll inc xor push pop and (bad) not xchg outsl subl push jmp shl push add inc out pop jb cmp into scas lds and push add add ja jmp xchg les je jbe je inc neg inc addl cwtl pop rorb lcall sbb shlb ror in (bad) dec xor mov jae ret mov mov daa nop cltd xchg and dec xchg sub in (bad) rorl jne xchg fwait ret add aas mov pusha xchg push stos sub push sarb cmc movsb das mov mov outsl mov fwait outsl sub (bad) shld movsb push jmp sub in imull inc outsl lods repz rcll or aas adc adc jbe cmp ljmp add add push jo mov repnz cmp (bad) xchg sub das mov nop in daa sbbl fmuls lea push insl gs lods in int3 das hlt mov ss movsl inc in jl push xor fld cli (bad) cwtl mov xchg mov cmpsl jo pop jp fmull adc mov cmp popf sub add add lods mov (bad) rclb stos push pop xchg into movb test loope arpl fwait push shr and int3 adc xor ret xchg pop aaa rol mov scas cmpsb ss and jno jp fcmovnb xchg xchg dec sahf inc push inc pop dec xchg inc jb dec pushf sbb and add add movb cwtl (bad) data16 pop inc dec xchg negb lods fwait in mov cltd mov out add jg jg cmp xor fimul ja or mov mov xchg mov test pop pushf in dec mov sbb add lea jge mov mov ds xchg hlt mov loope test (bad) (bad) mov pop jb pop sbb or pop cli ret mov jae hlt pop jg jbe out push push add push and scas insb or lret dec shll enter les adc jmp lea push add inc inc jb bound call ljmp rcrb or or outsl jge enter mov sub dec inc mov icebp popa hlt aad sub mov cmp test add and pop or (bad) adc inc jge push fisubrl insl lahf aaa mov add add adc leave test xchg pop imul iret js or push ss and mov arpl cmp mov xchg cmc adc fisttp fistpll pushf popa shrb bound outsb mov mov inc inc icebp xchg fisubl pop les mov roll and cli cmpsb aas add repnz push push stos in mov lds iret repz or xchg xchg or in dec xchg out dec dec mov sbb lock pop insl stc mov loop lods pop pop into mov (bad) cmp cs repnz xchg (bad) hlt lods mov adc lahf mov mov add outsb mov sti je scas cmp int fidivr clc in jg loop pushf mov inc imul mov jnp mov add lods call (bad) daa xor scas sbb lcall dec or cmpl push movsb push outsl mov xor loop xchg mov add add loopne bound jne rcrl push jle loop mov jns (bad) dec pop push inc push mov add dec addr16 in in xor sbb mov add sbb in out mov and cmc sbb enter cmp add inc imul add add ficom dec jg rcrb xchg pop jnp jecxz xchg popa out popw add (bad) fdivrl xchg rol or mov xchg sbb mov mov or mov jno dec adc push pop pop (bad) jl push push aas dec mov ror dec (bad) cs mov pop add push stos push xor (bad) clc jo xor pop (bad) and scas rolb js (bad) mov inc push inc cmp cmp xor sub ja jle repz mov mov jo add pop jno insl adc rcrb inc fsubl lret scas arpl and add add popa shrb in or xchg sub mov jg mov mov in xchg (bad) dec arpl scas ja into aas fsubr cli in xor push xor addr16 (bad) (bad) pop hlt cmp rorl push and scas (bad) (bad) out add dec gs add lods popf test mov arpl lock (bad) mov repnz sub xchg xor xchg gs sbb fstpt je sbb leave (bad) imull fsubl push sbb fdivl into pop mov (bad) sahf push sub ds mov int (bad) arpl jg iret je iret aam add add add pusha mov lock mov pop push test adc add adc std mov jle pop dec mov shll rolb aad test jae int3 cli mov xchg lcall or rolb sub outsb inc sbb divb push cs add add insb dec xlat push mov push ja fdivrl inc mov dec divl sarl inc gs call repz scas adc xchg inc mov std fdivl add out lret lods xchg sub xchg aas (bad) (bad) mov add mov sahf (bad) xlat mov inc xchg inc mov and popf push fwait gs jg xchg mov dec aas (bad) mov in callw fucom xchg cmpsb dec sub adc and rol les lahf decl inc jne add shrl outsb push lcall ss cmpb cltd rcl pop stos insl mov outsb fs push ds cli push sbb iret inc enter sbb sub pop stc mov jle in xchg or nop add cmp push xor lea test fdiv in push mov mov fwait dec fisttpl xor jb cs cmc sbbb jno add add ds sub jnp sti jb mov push mov dec mov add push das inc out xor outsl stos dec and add subps adc lock jb imul jne in daa cmovne sub push sti rcrl pop sahf bound mov xor mulb add add movsl es jmp cwtl imul cs fadds pop cld sbb mov or sbb mov xor or pop mov (bad) sub ret fsubs sahf hlt fnop out or jmp cmp cwtl (bad) push add aad test jnp jmp pop sbb stc pushf push out ds outsb xchg addr16 fcomi jne cmc jno push movsb lea rcrl inc or je in mov push mov and sbb imul data16 mov jns adc xor mov sub sarl push test lret int3 cmpsb xor xchg push sahf (bad) ljmp inc loope scas sub fs and cli jne mov xor xchg and das cmp enter lahf imul into xchg outsb lods sbb adc stos outsl fnstcw daa sbb lret mov flds bound bound add sbb sahf popf xchg (bad) test mov movsl push insl mov push or rcrb enter mov sbb icebp jmp push mov (bad) mov (bad) out lahf jp sub ja in arpl jle mov push aaa dec pop add aam cmp ret rorl jle xchg jb pop cltd sti mov mov (bad) mulb add out fbstp ret adc fcmovnbe cmp dec lock test pop clc lock das lcall jns fwait movsl cli ds adc push pop xchg xchg hlt rclb movsb mov repz out insl dec shl gs push sub mov push aad sub mov aad hlt es mov cmp push mov fs mov sbb data16 mov dec test ret push add test jecxz sbb sub ficompl xor adc js fcomps cmpsb inc int dec jmp add std cli enter inc popa ds mov pushf adc adc loope sbb xchg xchg adc sub mov mov xor gs lret jp or inc (bad) repnz xchg cmc inc or cwtl dec sahf push and loope enter loopne in pop cs mov mov add loope or das mov mov icebp dec xor inc movsb lock mov xchg insl pop ljmp mov repz js imul mov (bad) xchg ds dec and ljmp rclb pop (bad) xchg push xor adc addl or aad addl xor fistl xchg xor out mov outsb shll or xchg insl imul ljmp fs pop and inc xor insb and sbb cwtl xorl (bad) aam add add or in adc mov (bad) roll aam loope or hlt mov into sbb jb mov in inc in cmpsl add xchg and sub (bad) cld aam and and imul fisubr addl xchg outsl xchg cmp dec mov add rorl cmp inc pop sbb movsb fs jnp cld jge fldt or push sti inc sub pop mov in xor icebp (bad) fidivr pop fs jae into sbb pop adc sub sbb xchg hlt sbb push push push push adc inc mov inc adc jecxz dec add add mov mov mov or stos sbb imull push inc dec add mov daa pop outsl pusha in js es sbb xlat rolb jae jmp xor pop mov pop test pop push push mov hlt jne inc inc mov xor clc insl (bad) clc ds add (bad) cmpsb inc mov mov ds fistpll bound mov or cmp rcrb sti mov xor rcll xchg test test loope repnz xor mov adc (bad) rorb call jmp push jnp sbb sub imul add rclb pop inc xor mov and cltd add in pop mov mov loop shr cmp sti inc (bad) es xor stos push mov and fisubrl jo lea push xor (bad) into xchg jp xor jbe sbb push jle xchg (bad) sub add add pop xchg dec jmp xor xor test scas loop in (bad) mov scas cmp or mov test mov imul jne dec inc out push add or and push data16 nop add aad pop pop jno mov ret push lock les insb jne mov into stos pushf xor fsubrl jnp mov jbe popf inc inc ljmp cli test sti adc inc nop stos sub and cmp insb stos (bad) leave out adc push or xchg in mov push pop and push cmp sbb inc mov cld add add add add call subb mov add mov stos movsl cmpsb sub lods imul adc fsubrl int3 das xchg push bound shl nop lcall fisttp sahf mov (bad) shlb lret sub outsb xor jle rcll es fdivr clc imul add add push mov sbb xlat shrb xor nop or xchg mov jl cld add scas mov lods dec test push pop xlat and stos fdivp bound (bad) pop cwtl pop sub and push mov push pop repnz fwait aas jmp sbb add sub push jbe and add or sbb ret mov push in adc call jne adc mov push adcb je (bad) xor mov fs sbb xchg add addr16 dec (bad) push das in sbb mov adc xor adc jb cmpsl sbbl add lcall xor loope mov daa jmp test int mov (bad) jbe jecxz out fisubrl int3 fist loopne xchg test (bad) rclb and add inc test add ret movsl sbb into loopne or fsubs push mov add add or lret dec in (bad) sarb sahf fsubrl xchg cmp mov mov cmp xchg cli xchg pop (bad) jno jl pop jmp (bad) xchg fistp lcall test (bad) mov (bad) mov and jg sbb shll pop and add xor push pmaxsw mov ficompl adc add (bad) mov decb jle in cmpsl cmp jp ja addr16 jae inc sbb pop stc push jae fistp adc nop or cmp push xor jne push stos adc inc pop mov mov rorb cltd cmp inc or jne pop (bad) loop add cltd sub cmp adc arpl sbb mov popf push push inc sbb ljmp jns fwait sub (bad) cli mov repnz or (bad) mov fs and add or inc sbb das mov push mov adc (bad) in icebp nop leave cmpsl mov jecxz cmp xchg stc push or inc loope loopne clc add xor adc pusha (bad) mulb mov pop int3 add rcrl mov pop int3 jo pop mov inc xor mov js stc inc dec add in sbb (bad) mov lods and loop lret movsl xor mov lods push divl xor cmc lcall fnsave mov jne shlb in movsb push sub jb call sub inc add dec mov xchg std mov mov add xor jg notb mov xchg add push and out mov mov sbb imul dec aad (bad) dec imul xchg mov pop xchg outsb cmpsl (bad) stos sbb xchg leave push adc sbb or popf je aad mov aaa sub mov and cmc sbb sbb jg cmp sbb xchg xchg iret mov jl sub xchg out jo push addr16 lock mul lods inc call (bad) imul cmpsb sub inc add imul js mov xchg insb movsb and sbb mov imul mov sbb mov out rol sbb jl push push ret dec loopne test mov mov push imul fs mov sbb sbb cli insl cmovae fbld out fadds mov addr16 push bound enter inc pop push cld xor jo push push ljmp out jg xor cwtl jmp jbe push aaa fisubrl das sub or or out jl dec push mov sub xchg insb fldln2 jmp fdivs cmp pop pop daa push shr negb inc xor mov mov call (bad) dec or clc sub sbb push shlb cmp adc scas and and add add add and jp adc mov and outsl nop pop and push in pop cmpsl add push das dec cmp mov xor in xor push or xor push cmp mov pop ret push mov xchg lea dec mov mov call sbb add add and fs jmp push popa sahf gs (bad) add loopne cltd add mov cmp enter cmp scas pop rep imul pop dec inc (bad) stos cld fiadd jnp xchg std adc inc adc inc mov jns inc loope cwtl rolb add add subl pop outsl xchg xchg add rcl sbb popf outsl stos bound jo repz cmpsb lods push adc add mov jmp inc test sbb test clc inc hlt enter test push xor inc pop (bad) push outsb out push jnp das enter (bad) jmp arpl add test js icebp push xchg sbb and movsl ret cmp xor inc and inc jg jp pop out into orl cmp add cmc sarl pop pop jb and clc ret out jbe out std arpl xchg dec repnz test sahf xchg add shl and sbb push or push jbe sbb cli cmc adc test push add pusha nop aaa mov mov ret dec test mov sbb cltd mov (bad) das push mov sub mov jns xchg cmpsb mov fs dec into je into cwtl add xor enter and add mov fcomp gs pushl mov push test inc outsb testl pusha pop mov loopne ljmp push ss sbb mov out loopne xchg into xchg popa xchg fildll (bad) push ljmp cld and mov pop mov pop shll daa inc add icebp jbe cmpsl add xchg incb dec xor xlat nop enter jp xor pop repz xchg inc jge mov popf mov mov les xor es cmp (bad) incb lret popf mov push jbe push movsl cmp push jl pop int rorl mov push push mov add add sahf mov jp push sub clc cmc xlat in dec inc dec add dec ja int3 lds push cs and mov and addr16 jle (bad) jmp xor mov (bad) lds pop cld call lret icebp icebp pop mov arpl sub pop mov insb mov pushf movsb and daa cli aam in outsl aam mov push and mov je jbe ret mov xor sahf pop ja push icebp and scas add adc xor inc fwait push pop pcmpgtd out sub sbb shl loope movsl mov loope inc sub arpl xchg add add les mov clc xlat jne aas mov mov aaa sbb dec adc pop and negl scas push call cmp fcompl test lea dec ljmp test mov cmpsl lds imul rcr ret shrl aad mulb adc add sbb sub lret sbb jo pushf adc cmpl jnp xchg or std adc cld cmp add std (bad) jno fldt mov jb jns adc incb leave jp lods repz pop dec decl mov push sbb add aam push push pop pop fidiv sbb test and es aas jbe pusha xchg xchg add mov inc lcall mov scas clc lcall add push xor leave sbb cmp enter fsubrs mov fs ror (bad) or imulb jl mov lret scas add jmp mov (bad) xchg mov or mov ret cwtl push lret loopne mulb push notl out icebp mov fcmove mov cmpsb mov jo dec inc jne push in pop out and add add iret fs addr16 ljmp in nop arpl inc in push sub mov dec cmp mov sbb in cmp test (bad) mov test push loopne lock outsb xor jl adc push lds js and sbb add (bad) icebp cmp pop sbb popf push cmp cltd dec (bad) aad and popf ret jb xor repnz jno pop inc mov stos cli mov daa jno subl xchg xor inc lds arpl mov cmpsb (bad) cltd xchg repz xchg loop jmp pop push sub lcall add (bad) cmc data16 and add hlt popf sbb jo pop mov cmp push inc sbb or mov mov cmpsb mov mov (bad) jb lahf stos xorl in mov cmpsl xchg and mov rcl rorb or imul pop aaa jo add je insl sbb (bad) mov mov adcl pop mov std fdiv clc jbe mov sbb pop pop cmc mov sub jbe inc and sub jns adc daa loopne mov loopne neg mov sub incl pop data16 adc add fsubrs dec (bad) pop xor aas out xor mov std arpl xchg jnp nop fs mov fdivr cmp add pop mov mov rorl mov mov or inc push inc xor addr16 popf (bad) xor dec pop scas mov jmp sbb iret jne add cmp aad out popf or scas cmp xchg aaa sbb dec push aad ret jge loop cmp aaa adc icebp cld push jnp pushf pusha jb insb lahf pop sub js sahf mov push xor cwtl mov mov movsb mov adc and pop addl add jl lea stos lods (bad) xor mov jle aam dec lret mov cmp dec stc mov jp cmp jbe aaa mov negb (bad) adc mov ds pop or loopne data16 gs push sbb xchg lock dec fsubrs push aaa int3 jge sbb les add add in cmp cmp xchg mov pusha int3 loop in and out cmpsb push xchg add inc data16 popf mov loop dec movsl test bound leave aam jbe ljmp in mov das push mov imul scas pop mov cmp ret pop scas jne pop pop xchg cld loope sbb fisubrl add add cs jb stos das or xor mov cmp mov lods adc inc or ficomp or mov or xchg fxch fnsave cmp inc test cli sti mov sahf xchg push cmpb test mov leave xlat or sahf push popf dec xor roll add (bad) inc inc fmuls (bad) insb jno call scas push mov mov cld rorl sbb js aam mov jne out mov pop rolb mov fwait rclb dec mov das adc in push imul pushl jl (bad) fstpt push push jmp xchg in lods fdivs add stc lods cmp mov (bad) rcll mov in addr16 dec inc mov ds sub xor ror arpl fnstsw sub pop xchg jno enter fcoms imul add or dec jb fldl cmpsl js mov in sub movsl dec mov adcl add jae and enter js sbb push call lret push je scas jno (bad) jae outsl pop fbstp jne loope inc xchg inc std test pop sarl ja,pt pop sbb (bad) cmp inc xor cmp pop mov push rcll lds mov lcall dec inc (bad) pop aam adc add call xchg int ss jmp rol mov cwtl mov and lods sub inc and add lahf enter sub into js sbb mov pop fiaddl sbb out dec icebp and or push mov pop mov roll (bad) pop xchg cltd or add fstl xchg aas shrl movsl ds mov adc sub mov dec leave cwtl mov loope mov ja mov ret (bad) test push test (bad) incl mov dec xor dec in fnstcw push fidivr icebp fisubl aad lcall cld mov mov sbb push outsb push xchg (bad) inc cmp aaa add push call adc stc dec mov popf inc dec out sbb cltd aaa mov xor cmp push mov jge jae ficom xor push icebp or cmp andb std xchg xchg insb repz out or imul mov (bad) xchg xchg mull out (bad) aaa in lahf cmc mov lahf cltd popa xor outsb inc repz dec fsub mov rcr ds dec adc psubusb in dec neg push pushf inc dec es fcoms cmp (bad) mov into or add add cmp cltd pop in jns push push aad int3 or into and ds sub jae dec ret pop and cld popa insl inc sbb insb stos cmp add jo das lea xor xor adc and inc fdecstp stc subl or call repnz xchg add add add orb sarb loop ja test adc outsl mov mov mov (bad) or into mov pusha std pop jo bound pop stos stos test push add shl lcall and and cmp out movb int3 lea jae adc sub inc jmp add addr16 loopne or mov cmp int3 xlat test mull dec cwtl push inc cli outsl sbb repz into inc jmp subl cs stos cmp scas mov je mov fs cmp inc add int jmp jg cltd inc push mov inc pop (bad) add rol insl fsubl daa add sub cli push data16 shrd je repnz leavew ficom push cmp call inc xor sbb rorb loopne cmpsl mov loopne int3 fadd pop test cmp sbbl ljmp cmp (bad) add cmp push add sub pusha (bad) fdiv adc push test popf imul xchg sub jae add frstor cmp loopne shrl fdivrl lods sarb mov xchg iret add push lahf inc and push inc sbb stos mov loopne in test lods xchg std popf fidiv sbb daa repz add add jge arpl inc push call jp mov pushf inc popa cmpsl loop jns subb aas jnp aas push adc push (bad) in and in cmp out pop cmp sbb (bad) movsb fs cli inc or shlb out lds dec les enter jge dec pop cmp xor inc cltd icebp (bad) fs jg and cmp jbe sub mov or lea jecxz mov add (bad) cmpsb mov push or loopne xor mov add aad mov sub imul lds lret mov sub daa decb enter int xor xor mov ljmp mov mov insb stos arpl xor dec scas inc dec in in arpl inc out fs les fs and adc data16 push xor icebp lods mov nop in aam push lret fdivr lods repnz insl je add mov inc xchg or int push push pop pusha dec adcb imull (bad) std movsl jecxz push xor addr16 outsb sbb mov sub jge push pop arpl adc test or jp jbe mov fstpt mov sbb cmc mov pop inc mov cwtl or cltd cs mov add cld add cmp dec mov mov movsl add jne fdivrl shll mov mov xchg aas cmovs jbe inc scas nop xchg sub loopne xchg sub jmp je xchg sub repz jmp mov stc or mov pop fs pop add in out (bad) mov cmp movsl cmp xor lret shr popa cmc pop inc push stos cmp popf leave fcoml cmp mov call add pop arpl sub sub xchg sbb dec jbe cltd push dec mov xchg mov arpl push pop inc cmp add cmp ret cmp pop jno xchg mov fwait jge xchg shrb ret popf movsb xlat jno sub jmp inc and popa fistl fidivrl std incb pop xchg imul mov rol xchg movsb xchg scas rcrl mov pop xor sub scas cmc int3 xlat in aad lahf add adc imull jp mov mov js cmp test dec or mov push out pop jmp inc or push aad in outsb rcrl lds aaa clc rol mov in mov ja out mov pop nop scas or in mov loopne scas lahf mov add mov adc imul adc repnz aaa push sbb sbb gs repz push and inc dec imul fstpl fsubrp mov cli jne lock xor mov imul ucomiss jmp jno or movsb mov inc adc sbb mov pop xchg or add add xchg push mov dec mov jae movsb in cmpsb pop cli pop or out pslld in loope xor inc daa dec lods cmp xchg mov jb in inc mov das xor adc (bad) fcmovb xchg mov sub (bad) jge pop adc pop add mov add add jbe cmp push fisttpl mov data16 subl xor dec adc inc dec dec insl jb lea jg push and call inc in and nop aad xchg ja (bad) fwait add pop clc repnz ds scas jbe faddp mov mov mov cwtl in mov jne jo enter add add test or in cli ror mov xor mov cs aam repnz addl roll mov ret inc sbb or and mov mov out push mov loopne push xchg shrb in lcall push add add sub mov push cmp (bad) enter dec loopne push pop inc pop repnz adc es leave push push jbe mov xchg or out rcll sahf cmp add mov sbb adc cmp or sbb mov add lret pusha (bad) js test and lret andl cmp xchg movsl (bad) mov pop or jo call lods cmp add mov (bad) push pop push lret bound push fprem1 leave dec mov xchg es cmp out pop lahf lea cmp daa or add add imul syscall jbe sbb lock jno xchg rcrl jnp mov add or cs sub scas jns mov xlat (bad) sti xchg arpl inc push xor repnz in (bad) xor inc xor sbb xchg mov ds outsb inc clc test add adc ret addr16 iret loop shll inc in loopne mov mov loop dec cmp inc int3 add cmp cmp bound lret pop or push stc bound xor add stc shlb aas std cmp in jmp inc (bad) sbb dec add add repz cltd ret jg pusha sbb push cs mov mov aas lcall cmp cs inc xor rol push insl sub ds dec mov and dec xor fwait push aas fstp sbb aas fcmovb (bad) dec mov pusha dec movsb stc or add jnp inc iret xchg jecxz arpl adc test stos or jno rclb push ljmp mov out in divb ret pop test pop adc push mov mov mov xorl cmc sub cmc mov mov movsb pop dec arpl mov or add outsl add push sbb loop pop cmp push inc sub and jo movsb push mov mov mov mov inc jne push dec or mov add adc mov dec (bad) inc cmp sbb xchg add (bad) mov and pusha adc adc add (bad) jmp mov xchg (bad) cmpsb jle dec mov mov cmpsb pop iret push xor and lds in addr16 mov test xchg adc adc xchg sbbl push sbb imul and pop pushf jo (bad) in loopne add aad add add adc cmpsl xchg jno dec push pusha jmp fs cs leave add movsl push test add jno push cmpsb lahf jb cld pop out add out leavew lock into testl shrl or mov sbb ss cmc xchg out dec push cmpsb lock mov dec cmp std pop mov add clc cmp fwait (bad) insl jle mov xchg mov xor sub sbb mov fmuls movsb shl rol dec cmpsb dec mov mov jle out fcmovne mov (bad) mov mov adc cmpsb add (bad) clc loope mov or shl mov xchg jmp out mov inc lcall imul xchg clc divl add dec out push cmp inc jns xchg imul fildll pop pop je jne mov xchg je mov dec cmpsb scas xchg popa inc pop cmp pop pushf xor pop add add add out (bad) (bad) push sub lds fcoml mov lock mov std stc in sub push fimull adc jge (bad) enter jb dec jecxz ljmp cs and iret push mov mov movsb jl push shll mov outsl push dec lahf jno lret add add movsl daa inc sub popf add clc inc lahf pop call xchg mov clc in iret icebp push hlt cltd push insb gs inc jmp cmp lea movsb jl mov dec lret and inc scas aam shrb xchg iret mov cmp adc shrl cmp add add add and sub sub mov xor enter mov cmpsb nop mov lds pop outsb fbld xchg (bad) adc or mov dec dec dec gs (bad) (bad) or fs mov xchg mov xchg jnp nop lret fnsave pop iret mov push lcall sbb pop xor int3 cs imul repz sbb push lods sub cmp js push addr16 xor jle xor lret inc jns lea int3 cltd insb out enter inc fcoms mov repz push ret das mov xor add add add jae lret inc lret adc push push sub push cmp push dec ds mov cmpsl add add sbb mov enter loope js and adc xchg add mov cmp insl pop repnz sbb lret lcall fcoml cltd fmull mov add popf loopne iret mov xchg pop aad mov push mov out adc mov stos out pop push inc mov cmpsb mov nop dec jns pop loop les inc in sbb and xor push scas arpl fldcw push pop decb inc jbe add jae (bad) xor out fnstcw push push (bad) cmpsl inc push lahf outsl cmp jo lock pop addr16 mov dec inc arpl fs sub jb std mov into lods (bad) mov hlt and outsb mov or pop sahf gs loope and pop hlt (bad) cld push lret jb sub and and add ljmp lret push leave push xor xchg mov pop scas or dec xor popa xor xchg ret mov dec mov sub dec (bad) mov aas fimul test inc mov jns popf cs mov add cmpsb and outsl inc adc pop movsb out inc or stos lret xor jge leave sbb sti ficompl sbb sahf clc fiadd mov mov inc mov push xchg clc in data16 fiadd inc xor push mov lret lcall pop inc pop je rcr jnp mov add (bad) fmuls (bad) das gs add divl jbe cli mov jns mov add daa and adc add add aaa inc jecxz inc mov or idivl push repnz fadds jns inc pop adcl fnop or cld test arpl or jecxz lcall test mov lret mov stos fs loopne scas xor lahf pop (bad) push push insl rclb mov xor imul add push sub xchg test jne mov je cmp rcrl jg mov sub xchg pop pop fucomi mov jmp xchg add jae lea lcall fldcw mov lret movsl jl sub mov cmp je pop push jno test push lea vmulps or roll shl lcall sbb inc mov pop test sarb jbe hlt ja test mov inc stos sub jae icebp xor jmp push mov ja sbb sbbl ret mov cltd adc push das pop xor jo dec fsubrl mov or jns xor pop or sarb icebp cltd shll add stos inc outsl nop push sub mov outsl sbb xchg sub dec stos std jge cmc jb mov pop adc inc dec stc mov inc repnz popf loop (bad) push es jg xor pop mov jne jae pop outsb add (bad) je sbb jne fdivr xchg mov cmc imul mov in and mov scas xorb push sub scas jp push lock push jo nop sub rcrl (bad) or push in ds dec inc and arpl mov mov (bad) cmp push jno arpl cs or adc add add xchg (bad) repnz stos or mov pop cs pop popa cli pop scas xor pusha test int jbe arpl jbe gs les add push cli adc jmp inc aas sub out pusha sub cmp call into xchg mov je ret mov mov add dec xchg addr16 loopne cmc jns xchg (bad) pop enter (bad) adc mov cwtl dec pop adc (bad) shrl loopne cld aad mov mov shlb add and xor addr16 jp in pop js popa or out dec jb sbbl fisttp aas icebp cmp mov add add cmpsl xchg leave or push adc fdiv pop fdivrs psllq pop cltd aam fcompl pop movsb imul int3 popf pop out fs xlat jns push sub out test sub dec pushf pushf adc cmc cltd lret xor push jecxz adc dec shrl pushf add pop sbb movsl adc popa add jne,pt scas sbb gs push nop inc (bad) and aad and pop imul stos ficoml sub andb cmp jns lods cltd repnz adc jge je xchg fwait repz lcall cmp mov and mov mov fildll cmp add add (bad) mov lret jp inc lret (bad) add xor sbb and mov xor call in lret add stos test out push sub (bad) jno xlat and fdivrp decb mov cmp popf adcl mov ljmp xchg inc outsl sub shlb push xchg int3 mov das mov pop rclb and repz cli scas sub subb in inc aam sub jbe inc and and mov sahf or mov rcrl adc arpl cld int3 lcall out adc (bad) inc insl imul movb add add add aad mov mov add test or int3 sbb (bad) add push dec or mov and icebp rcrb add std cwtl (bad) jg push cmp jmp mov cli dec dec pop test lock js je inc and imul repz insl mov adc std mov pop scas roll mov dec push out sub popf ljmp jl push lret adc adc or repnz rolb add jbe and out fcmove adc add ret cmp (bad) xchg cmp mov add insl insb jmp push cld sub mov out mov dec xor (bad) xlat push pop and push xor xchg mov adc aaa xchg leave inc movsl andb outsb nop inc push int3 stc std xchg add mul xchg daa (bad) pushf loopne and and mov repz add sbb mov pop out das cmp or repz sbb mov sbb xorb add pop int clc mov lcall add or stc (bad) js mov sbb fnsave cltd or outsl mov imul in add aas mov jo (bad) adc xor in ljmp outsl loopne add xor or mov add and dec movsb cld push mov dec rcrb rcll mov cmc call jle pop (bad) and add inc aaa xchg enter lea add lock mul pop int jge push or push and inc lahf inc pusha daa nop (bad) dec scas cmpsb cld bound adc popa popa sbb adc push ds sub add pop pusha cmp sbb pop (bad) jl fdivs xor adc fcompl mov or sbb add add mov pushf sub xchg mov pop cmpsl sub dec cli je movsl sbb pop mov push sub leave push xchg ljmp pushf inc bound sbb jae mov jmp jmp jns sub mov sub sub or popf cli (bad) xor add mov fistpll push stc cld jbe jo syscall inc movups push adc dec xchg ret push std inc in insl sbbl stos insl (bad) std loopne fistl sub push mov pop mov test xchg seto into jbe imul lcall push repz xor push add add jne dec cmp xchg imul out xchg leave sub daa jl dec dec repz jmp inc test fsincos fistpl sub inc adc mov cmp aad xor xor inc jge push push mov stc ljmp decb add add push es ss xchg lret pop arpl lcall inc add shl (bad) jbe aad popf jmp rol enter jmp pushf add subb fwait sbb lods imul adc in in push sub inc pop cmp nop test add add ret sbb (bad) push xor xor or cmp inc xchg jmp test imul mov sub fucom repnz sbb adc pushf pop mov sub mov fs out push xor pop pop fsts cmp stos fsts js xchg mov or add cmpsl pop (bad) jmp and ljmp mov pop cmp test shrb insl out ja mov push fsubr add jmp dec sub sbb mov push cmpsl mov or adc dec leave cmp xor popa jl shll cli or ja mov add cmp testb add insl mov (bad) daa in cmpsl out (bad) (bad) xchg das call mov mov scas or js inc xchg fcmovb cmp ljmp popa rcrl lcall call repz mov packsswb fs (bad) cmpsl jmp subb fwait cs add (bad) jbe cmp mov inc test xchg clc sub fistpl inc sahf mov or sub mov pop mov test sti mov (bad) test sarb or push push sub xchg xchg xor insb movsb adc cmp cli sarb insl jge add add add add xchg jbe fs aam or inc jge stos out and inc dec push inc test bound mov scas dec mov popa dec mov hlt bswap dec lds xchg shll nop inc jle push cmp nop dec popa fwait popl js mov sahf (bad) lods mov dec and add add pop sar (bad) inc sub aam add xchg mov pop fsubrs enter or jae into lahf pmullw push xor cwtl repz push lret mov cmc mov outsb mov sbb shll ds push or jl cld into or (bad) or add jb into repnz or and aad ret rcr mov call pushf mov pxor repz pop cmp pop cld bound fimul fsubl popf sbb and cmpsb lret inc (bad) movsb mov cmp mov jno cmpsl lods xchg movd add add add add ljmp imul pop imul das in pop repnz sub enter out cmp (bad) sbb (bad) js jmp (bad) inc and stos dec inc scas jne int fdiv fucom in aam mov icebp push push sbb inc sahf cmp xchg lods std test (bad) mov dec dec stos sbb mov pop scas es sbb mov add or add pop mov xchg inc and add xchg mov inc out out sarb mov shrl les jmp and push adc sub aam in add push loopne scas je mov pushl jbe (bad) out cmp hlt jg sbb add int inc cld subb add das lret pushf dec loope push arpl std hlt pop cmp inc push lods iret jmp adc fild mov mov cli in ja test adc in mov and cmp pop mov in popf fstp push or std adc add xor jl (bad) repnz and (bad) mov stos xor vandpd push mov pop popa mov es cmpsb jne jns fildl hlt xchg addr16 add or inc subl jle dec adc enter das push mov imul jle xchg ja add add fldt jno pop stos add fist xor clc dec (bad) mov lods insl aad (bad) adc in cld inc dec mov mov mov mov push inc xor (bad) in add xchg fstpt and push jbe loope ljmp add mov pop ds imul fidivl push mull pop (bad) lods sub stos loope loop or sub lcall shl pop les sarl mov push in ja xor adc mov cs aad stos stc mov jecxz add sahf xlat roll nop test xor ss xchg adc out das sub cwtl test xchg shrl adc push mov bound add rorl shrb aam sub xlat ds jecxz fcoms iret xchg test dec mov outsl addr16 inc das jne dec push out jmp add out ret loopne cmpsl xchg or xor shrl loop test jge mov (bad) lret insb mov mov adc in push fnsave mov pop lods mov iret imul add pop sbb mov mov leave rol into sbb add add addr16 adc mov jae xchg xchg mov popa inc aam pop push fdivrs add out add aaa or mov pop das gs loopne sbb (bad) outsb cmc fcoml mov mov pop scas jl mov out push and jbe fnop jp ret stos (bad) nop xchg add jo inc lcall scas xchg mul xor int3 arpl sbb iret xchg inc sub dec add or pop jecxz lea jno roll aas (bad) mov inc aad (bad) (bad) ljmp lock bound mov stos mov and arpl xchg in imul add add dec adc aam gs in sub sbb mov jmp (bad) mov add movsb dec sub mov xor sarl (bad) sub jge cmpsl mov and or add pop sbb movsb cli in cmp pop js mov push inc fimull add add push (bad) xor iret sub in lods mov mov xorb jns add cld popf lods jmp (bad) adc fimull push pop in mov cmp js loopne sbb imul std sbb xor mov mov mov and enter xchg lahf jge jge repz lahf xor je sub jmp mov ds scas aaa or lock adc pop mov pop mov cmp jns jmp cmp mov adc mov pop loop pop or sahf sar jns xlat clc jae cmp mov and sbb jbe mov xchg test add lds (bad) mov ror jmp inc xchg leave xlat outsl jle pop pusha and addr16 adc mov mov xchg push lods in pop jbe cmp adc and dec stc add imull rorl add sub xchg add and and fadds cld lret pop out movsb pusha sti jle jne dec (bad) xor mov (bad) lods arpl mov pusha fs das cs mov mov in addr16 mov pop inc pop xchg lds rolb inc int3 dec add cwtl daa leave stc sbb addr16 scas mov sahf xchg mov popa dec mov in or aas icebp push ss or dec dec outsl cwtl outsl xchg dec lods jne cltd aaa loop cmp inc fmul pop cs sbb xchg push outsl loopne stos shrb push (bad) jmp inc lock (bad) mov sar add add jbe es mov jecxz lret inc jne or int3 jno xlat das fldz cld pop dec (bad) dec stc (bad) jne ljmp je pop in ror push idivl and inc and adc test xor or scas ret out aam addb movsl add jp test mov inc and jb add repnz out insl out fildll jmp fsubs xchg dec in movsl aam ss leave push lods jae lods jae cmp push insb lret dec rclb movsb mov loop (bad) das int mov or jns cmp cmpsb mov andl loope popl aam adc mov jge fcomps pusha jg add jmp fsubrl pop cmp mov push cmp xor (bad) mov adcb and jb imul stos popa in jp add dec hlt fwait push imul mov push push pop popf and out repz and mov or dec add cmovp pop imul fisub mov add adc cmp (bad) mov cmp stos mov or xchg jno dec aam fidivr bound lods in (bad) lahf xor mov (bad) imul or pop shlb add add add ret decb orb mov (bad) je cmp push and jl mov icebp in call mov mov add divl push daa lret sbb or inc mov sub je stos xor sub loopne add add jo into aad xchg pop mov pop daa mov jecxz loope push mov inc jo and xor pushf adc xor je xchg sub sarl cwtl aam sub ficoml lods push cmpl arpl aam cs push xchg jns inc mov xchg xchg test cmp add add fcmovu rolb fisubrl and shll daa mov sub popa and in mov cmpsb jg orb jge arpl inc das dec leave (bad) fisub cmp adc sub lock mov jb inc mov inc sub push daa das mov push cmp cmpsl inc fildl into (bad) popa (bad) xorl dec mov adc fcompl out pop lahf xchg or mov ja sbb sbb addr16 dec jp fistl sub jae mov rcr mov cmp aas xor outsb xchg mov (bad) mov lcall (bad) insl add cwtl mov lahf mov call or stc pop inc in bnd aaa sbb lods add pushf add (bad) pop in pop jns inc pop push mov jno lods jae adc daa popf add inc pop xchg fnsave pusha arpl hlt ret cmp lods pop mov xchg xor iret mov push xchg add xchg xor mov or jb test sbb mov or notl add or push (bad) add mov mov mov fidivl in frstor push pop (bad) jp mov fcos andb dec add sti arpl cli add add cltd les daa decb inc fimul stc push (bad) in sub lea aas xlat mov push mov xchg iret cwtl mov fcoms dec push mov stc pop pop arpl cmp inc adcl mov dec testb jecxz bound mov dec movsb das cld and xchg stos xchg xchg cld int3 pop aad mov lcall adc jl gs xchg ret jmp fs xchg xchg add pop outsl jns adc dec (bad) out es jo cld jg inc sub pop sti sbb testb add add jbe dec jns int3 mov inc xchg outsl sub xchg ja add aas lcall inc jmp push xchg cmc push es or mov cwtl aam pop xor loop stos scas add jmp cmp (bad) repnz sub dec out dec aam jp mov out mov add mov cltd add mov sbb lock inc mov mov cmp xor pop jbe mov inc xchg mov mov aaa ret add pushf scas dec in fs jecxz fildll out inc mov sub (bad) btrl and xor in mov movsb sub cmp ficoml sub sti int3 out cs inc dec lahf lock andb push cltd cmp push stc movsb inc pop mov push pop in jns cs sarl dec cmp push cmp inc mov ret loope xchg rorl push cmpsb sarb in xor jo add mov ret rorl (bad) sub addr16 test mov jnp push cmc lds ret and xchg hlt add into std fwait rcr xlat imul fwait enter xor push jbe js pop scas insb and mov jmp bound xorl jnp inc aad inc fldl add cmp cld jae xchg pop stos bound mov cmp mov mov pop mov push popa or or and stos jbe stos data16 mov das mov js,pn imul push test fisubl sahf dec mov adc push icebp sbb mov cmp add add movsb in xchg bound mov in xor mov mov and and fcmovnbe add mov sub jge adc loopne addr16 fnsave stos cmp cli xor mov lods adc xchg jo mov int3 inc push data16 mov cmp add add push mov clc test or mov mov sub rcll push insl xchg add scas movsl daa int3 scas xchg xchg xchg and dec inc jl cmpsl cmp inc xor jg or pop (bad) mov add fild add int leave xchg out out test jae lods inc push or iret lcall mov jmp das scas movsb loopne cmp pop imul inc inc mov adc or fs cmp iret mov mov xchg push sub sbbl icebp insb insl dec clc or fsub jns enter add adc cltd fistp (bad) hlt pop and stos push xor cmpl dec mov loope enter in out lahf lret insb cmp (bad) push test sbb leave into jge mov sub push mov hlt or adc sbbl pop rcll and jno pop and aad add add leave xor shrb (bad) inc in cltd add pop fistl dec lods and in aam add inc inc loopne xchg cmp test cwtl jmp xor jns scas adc pop ss enter incb data16 scas sbb jg stos test int3 scas pop inc jnp and fistpll add pushf xchg cmp leave fdivl stc pop mov sti repz mov and les stc in jl inc fcomp (bad) stos lret in inc jg pop aad pop (bad) sbb cmp int3 jb inc or jbe jecxz and repz and pop out xor enter insl cmpsl cmc adc mov mov push test insl daa in cmp shlb jnp ja (bad) jmp sbb fdecstp push and daa mov mov pop dec lods mov sub lods or mov pop (bad) insb lock hlt adc fldcw pop stos inc xchg mov dec add gs repz add xchg fsub out es xchg mov test lret sbb pop adc mov lret test test cmpsl push jle imul fwait inc cmp sbb fsubrp pop cwtl icebp inc in stos pop loope js insb movsb cmpsl lret inc popf movsl aad sbb enter add add (bad) mov cmp sbb shrb pop push cmp sub pop lahf popf jge (bad) mov (bad) nop fwait in mov aas jb pop xor je mov or xchg cmpsb mov lret xor xchg das ret lock inc fcmovnb pop pusha movl (bad) int pop add dec hlt jge not inc or incl rcrl inc cmpsl sub movsl mov andl dec sub cwtl mov and xor enter loopne jae lods aaa mov cmp loope fidivrl adc outsb into repnz mov hlt jp xor bound lret jae push add add aam sbb hlt (bad) je jl inc push jno adc fnstenv push scas push mov pushf (bad) mov mov fmuls mov xor arpl mov sbb bound jne xchg mov (bad) cmc rorb pop xor adc push fpatan jg test fcmovnbe dec dec mov jbe adc adc push xor add and or roll or bound loope insl (bad) std adc nop decb movsl dec mov jge cmpsl inc dec mov ljmp dec or stos shr or cmp gs out mov orl and sub (bad) js mov aas arpl repnz mov push xchg pop insl leave icebp and cld xchg mov stos cmp int pop push xorl aad dec mov push in push push mov jg mov les jb cmc xlat mov inc and and andl shll add int rorb mov icebp xchg mov (bad) cmp jp clc push and xor ja movsl lret mov inc sbb pop and loopne stc push fisubl test mov fldpi mov mov cmp dec and sahf jmp rcrl movb mov add push test lret cmc test fildll lods jne,pn jns das cmp add scas inc dec jmp loope repz sub adc xchg mov lea nop int mov inc mov adc cs adc pop dec jo xchg add inc add roll push push nop mov aam dec jp,pn jl add dec movsb out pop (bad) ret jg scas mov movsb das cmp cli lahf and outsl push fwait ret icebp xchg mov dec out rol jp fiadd lret push popl mov sbb pop dec (bad) icebp pop cs test lahf xor adc mov stc jg xchg les jmp std sti cli mov dec cltd pop imul pop push adc add fstp mov or out mov rorl dec mov jnp inc inc jle loop add rcr bound pop pop jmp add lods inc sahf pushf dec outsl fcoml adc add les pop dec push pop stos aam (bad) lods mov push cmp (bad) in fnstenv inc mov mov movd mov push stc in inc push cli sub pop std roll push in dec inc sahf aas cld mov add add dec add jp sbb push in xor jae add add push imul test jo hlt test inc inc rcrb jle push sbb add je or icebp imul mov addl mov sbb movsl mov mov cli rcl jne sbb add lds mov mov pop out xor pop mov sub pop jmp adcl sbb imul fldenv fisubl or ja stos mov pop gs adc test adc mov int3 imul push mov add adc insl mov cmc jns test bsr add test fdivs (bad) lahf inc add out aad jno pop sub or mov inc pop movsl sbb cld insl mov inc cli imul or stc add cli jb in outsl sub icebp mov movsb dec add add xchg pop pop sub inc ljmp bound jb xchg dec lahf stc outsb lock sub (bad) insl das cwtl push les inc cmp or inc xchg (bad) icebp cwtl (bad) cwtl cmp lret add test popa cmc jno sahf jno stc xchg mov stos insb push xor ret fcmovnbe faddl add xor sub (bad) xor mov xchg hlt movsb adcl lds fcomp cmp rcrl and sarl imul in imul pop iret out arpl (bad) in (bad) cld stos mov push jp cld cmovo testl add dec out add (bad) pop inc sub (bad) gs inc mov test pusha cmp mov adc xchg xchg in xchg inc pop dec aam add in cmp into cmp push xor mov adc mov xchg and push gs jbe jle sti lea sub add add out cltd das lahf xchg or ljmp loop sbb push jbe outsb icebp pop lods add pop enter push mov aad fs dec movsb mov sbb adc aas adc pcmpeqw iret mov add adc push xor push in or lcall lcall add cmp xor mov mov sarl mov outsb mov aaa jl into sti inc xchg ljmp inc add scas in push pop stos mov mov xor into xchg bound imul jecxz inc test outsb fnsave mov scas cwtl mov ret cmpsl sbb add mov cli lret mov cld mov fisubl jnp cmpb je xor (bad) sar lods dec fs test cmp adc repz aam add jne (bad) xor fiadd mov inc cmp sahf mov scas jb (bad) push scas xor add adc push dec cld pushf pop pop adc xchg mov xor bound out cltd mov (bad) or push mov cmp cmp rcrl std jne lcall pop or add xchg cltd pushf mov leave fstl jecxz dec or add cmpl shrb xchg popa adc enter sbb addr16 ret cmp aam movsl enter mov push mov cli nop push movsb mov xor arpl daa sarl repz scas mov fnstcw aam jns in dec push fucomip stos fimull in add add fdivs xchg js xor test (bad) repz pushf mov mov cli hlt push adc lods jmp movsl mov cmp leave ljmp mov jecxz (bad) xor cmpsl inc sti pusha mov mov scas jl pop outsb and mov in dec addr16 std mov xchg ffree lcall mov mov int3 call push mov or mov add inc js sub jo lcall gs pusha test pop add lods fadd ja add mov dec add shlb inc mov stos and pop or pop xlat lret insb mov sahf es popa mov out mov inc test insb jp ret in and sub mov jno outsl lret lds jge popf aas jne es icebp popf (bad) cltd push push test cmp sti insl ret pop out leave adc (bad) xchg push add sbb js call imul sti push sti fs pop mov cli xor (bad) (bad) std push push hlt test ja ja imul fldenv (bad) (bad) push and inc cmp dec adc sub loop sbb push cmp decl test cmp aad push (bad) int stos (bad) je ret out mov sub sbb fwait pop inc fistp fild mov or sub dec add jg pop in jl mov pop loopne inc dec xor (bad) rclb or (bad) and pushf mov adc lret daa pop jle jp (bad) mov push int3 jl lahf jbe loop push mov mov repz push int jne js pop movsb jmp fwait aad ss leave fsts mov cmp push push out aas cli jae add jno inc repz push int3 lods cmc mov (bad) push repnz push scas notb data16 jo inc pop sahf int ja addr16 sub jmp or ffreep sbbb aas scas shr mov movsl out inc stos outsl clc clc cs cmp add das rclb aad mov adc lods std insb shlb fcoml fcomip imul adc mull pop add in in dec dec stos adc xchg adc (bad) inc dec sahf (bad) lret cmp lds ljmp pmullw aad xchg add mov inc outsl push out shrb pop push add cs ret fsubl (bad) sti ss movb push jns push jecxz add insb jbe bound fdiv mov inc mov out scas mov and test mov push push push roll adc add add add jg mov ret mov sbb hlt loopew lea sub xchg jg or dec mov lret int3 stos push dec pop sti xchg cmp icebp adc xchg jno stc outsl in sub push or xor bound mov mov mov push cmpsl sbb sahf or pop xchg push mov cmp add add push je inc std mov aaa jo mov (bad) popf and iret sti ds imul out lods pop add mov push js pop add or push dec int push repnz (bad) mov int3 dec or insl mov int outsb cltd jmp xchg mov pop leave divb add add and pop out xlat leave popf push call dec jecxz pop test scas call xchg lods in shrl aaa sbb std dec rorl aaa (bad) or jp add aad push je or mov cmp ret fabs jmp mov iret sbb stos mov add add xor inc mov shrb andb mov and dec sub add ret cld xor xchg and adc xor mov fs mov cwtl and pop push xchg (bad) stc out clc mov outsb add test or xor bnd sarb mov dec sub lea punpcklwd insl mov cmpsl dec pop test jecxz unpcklps mov js lahf mov mov mov xor pop sbb xor fnsave add icebp and cmp lods pop adc subl adc fstpt or jnp sahf loope jp dec dec push add movsb bound hlt push das dec in nop loope lret rol pusha in cmp jae mov adc and ljmp mov push fimull jne in inc push std pop push xor (bad) mov imul mov stos mov add sbb inc mov xchg pextrw and cmp cmpsb jge push push adc xor cld push cmpb enter movsb push mov add mov adc cmp aaa add mov fld (bad) mov out cmp in lock lods push jg stc add nop cmpsl lock or mov push adc pop lods and in xorb test inc and push cmpsl mov cmp decb pop mov cltd mov js shrb les cmc jmp lret fwait cmp add popf xchg mov lods xor cmp xchg and rcrl jb or aam xorb jo rorl add and pop mov add ja sbb hlt inc cs imul rorb cmpsb cmp iret xchg pop repnz loop jno or xchg (bad) ret iret int (bad) push repz xchg jp movsl test repz movsl out imul mov pop push pushf adc pop sub dec je (bad) repz jp enter pop xchg test push lock mov addb jb nop dec mov sub call add dec test imul in pop stc (bad) hlt in arpl and mov mov es mov out clc cmp dec in pop xor sbb clc xchg mov xlat jae jecxz into sbb int3 sub jne adc jp iret jbe lahf loopw insb imul ljmp add add sbb xor mulb add shlb xor movl sti cmpsb push gs imul jns lods dec cmp add imul enter insb sub je aaa xor mov sub inc inc outsb jle cmp movsb jo xchg mov xlat (bad) or pop icebp je mov mov mov popa imul lcall xchg sahf ljmp ror imul inc add mov ret stos cmp movsb loope cwtl cmp push fnstcw dec scas jns pop lea add mov fwait scas push repnz jecxz adc xor push pop xchg xor jb mov jno add movsb scas pop fwait movb add (bad) frstor scas pusha xchg popf jg mov mov sub sub leave fisub mov pop push test out subb dec xchg icebp dec in aaa loope je int jge (bad) mov stc sub loope andl mov push cld adc mov (bad) cmp dec mov iret mov mov inc sub (bad) popa into movsb sahf inc pop push jle stos and jmp js mov add add and data16 pusha dec dec ret fmull cmp cmc sbb or dec inc (bad) std sarb dec pop inc or cmc adc fwait xchg dec sub bound popa mov xor sub sbb or mov insl mov ror jl ljmp add cltd int3 pop ret shll je outsb in ljmp stos lods roll mov add mov data16 je dec mov jle dec in pop xor cmp rcr scas push inc mov inc loopne dec mov movl mov sbb cmp imul add add test ljmp out sahf mov test lret jb cmp pop jle add or dec add sbb aaa jae,pn ds test aas les into mov sub dec add lods ret xchg xchg movsl or lsl (bad) leave in inc lea push sub add add inc adc or jae and int3 adc notl adc xchg ljmp in mov fxtract jg push or lods adc and push mov sbb dec mov or sarl cld add sub (bad) rolb idivb pop shrl mov sbb xlat fnstcw xor cmpsl cmpsb jne cmp xchg mov fistpll test inc lds dec outsl xorb xchg lds out sub pop pop sti jmp pop cmp test add add add add mov inc add (bad) dec ljmp jo mov pusha js es push sahf cmp (bad) pop pop shll mov mov scas repnz lds xor pop rorl cmpsl or mov xorb push cld inc push iret add add pop lahf push inc xor cmp xor mov pusha es sub xchg insb arpl div rorl adc test pop popa je insl sub out arpl xor imul xor xchg cmp xor xlat push rcrb jo sbb lcall add xor test cmpsl inc into adc push sub jb or pop das inc fnsave mov jne (bad) aad lods in loopne inc fwait jb cmpsl sub pusha icebp cmp in outsl push jb dec aaa cmp adc lock add jno aaa xlat sbb hlt int add pop stc mov (bad) lret adc aas lret add mov popa lahf sbb cmp sub mov jno xor cmpsb iret lcall fisubr adc pushf adc mov xor sbb je int3 mov lcall lahf into insb lret in mov aaa popf icebp fs and imul push fist mov jne cmc cli cmpsl fs pop push shll add scas cmpsl adc outsl mov sti call fiadd pop cmp pop es adc cli lods sbb lret mov dec loope nop insl adc repnz add pop jbe arpl out pushf jbe mov inc pop xor sub dec xor inc inc push sub or xchg add pop pop dec daa js xchg xor xchg inc cmp push clc lahf idiv cmpsb sbb in jle call jle push xor add add adc mov out add ret cmpsl jae cld jecxz dec loop sbb or sar rorb mov jge mov shrl pop (bad) xor in repz cmp mov inc test mov daa jle jge ja punpckhwd outsb call mov jge shl cmp add cmp cmp sbb outsb je sbb sbb jp (bad) stc add fidivr pop fld adc cltd or addl xchg ljmp lods pop rclb xchg mov mov aaa hlt mov outsb and add leave inc sub add popf cmp pushf cmp add add xor cmpsl add out outsb mov cli and pop ja pop icebp xor sbb jnp insl dec aas mov lods divl mov jno jns dec or fxch movsb xor stc ja loopne mov jle (bad) (bad) cmc leave jae mov cmp push out and pusha inc jb inc nop sub insl fs sbb cmp adcb test daa push jg fwait cmc shlb insb mov gs icebp push xor cmc or mov xor push dec ret jbe rcrb push adc or sub sub lea xchg shrb or cwtl cwtl mov pop jbe enter (bad) mov mov icebp call xor xlat sbb movsl xor ja jno xor pop std (bad) or sbb inc mov ret sbb lcall xor cltd dec pop rorl movsl outsb dec insl daa inc adc jns xlat add mov into cmp lcall pop cmpsb rcrb repz jb popa into push fwait cmpsb adc adc fwait iret and dec lret add dec jp mov mov mov inc lret push inc mov pop outsl fmul dec ljmp cmc aaa adc mov jnp mov (bad) mov jo shrl pop jb or jl or fs aaa xchg jl mov or jae pop mov mov ds or jecxz and mov adc pusha sbb imul jbe mov dec cmc or fisubrl cmp scas enter sub mov add sbb cwtl mov mov shrl jbe adc mov outsl xchg and mov ret aaa (bad) hlt repz scas cli jo (bad) nop sub cmp aas clc xchg (bad) mov push mov in clc testb cmp in add xchg cwtl and fbld add push mull add sti mov jmp xlat lret scas add lahf and jo jbe das jg mov xchg out dec inc rcl (bad) ficomp jae add xor dec test jp cltd lods mov jge nop dec sarb loope jno inc lock mov sbb push sbb pushf sbb mov mov sub (bad) lock sbb pop add lea stos mov add inc xor addr16 cmp jp jb xlat sub lods pop pop push test push xchg cmp push and push icebp sarb ret mov jp add mov into (bad) mov cmp xchg call cmp aad aam cmpsl idivb sbb pop (bad) sbb and sub setno dec int3 movsb mov dec pop repnz insb xbegin pusha mov push in (bad) (bad) mov sbb in rol movsl (bad) rcrb dec std sub shrb mov add outsl outsl push mov cmp xchg mov sbb and add insb test inc jns addl pop mov pop rcl jge sbb jbe and roll mov sbb dec xchg adcb (bad) dec cmc scas nop sbb outsl mov (bad) mov ljmp add or ljmp in (bad) jge sub or inc cmp or (bad) mov dec (bad) icebp arpl jns pop shrb mov jp insl push push sub int xor cmc ficom mov ds inc jle sbb inc push or push dec mov jno rcr pop fbld call xchg jecxz adc iret mov push js call leave (bad) jle or mov sahf scas out out jge xchg sbb mov xchg icebp sub loopne ja jne xchg fisttpl aad into push mov dec inc popf pop and lods push sbb pop leave sub das add add jbe leave cmp mov pop fbld jecxz lret out mov repz jg cs and cmc push stos insl addr16 and or aas rorl cmpsl jae sarl sahf sbb ja jecxz sub insb outsl push push lock ja lret fmull jle in dec xchg add sbb sbb and repz and cld jo jp data16 xchg inc stc adc lods mov mov xor pop add (bad) push mov cltd pop push adc inc scas inc (bad) std rcr call jb xor cmp test ds or das cmp les sub push adc push (bad) cmp imul call js sbb xor sub jecxz push xchg mov lcall dec mov out dec pusha inc sbb lret mov pusha scas mov add cs jmp jo pop out sbb push add mov ds icebp out ss cltd dec fwait pop xchg test ret sub mov out add inc add jne insb mov pop and pop pop das mov in dec ljmp or mov rorb in call mov adcl dec roll add mov xchg or cmpsb mov (bad) lock pop mov push or or mov int3 (bad) icebp mov pop cwtl stc aas movsl or inc xor inc cld aaa loopne push lcall lret mov mov adc std cmp and add add call mov test ss or inc (bad) lea cltd push repz std add dec or ficomp push xchg and rcll mov add sbb mov mov rcrb mov inc add inc push repnz and fildll ds popa jne ss aam jno fldcw sbb mov daa not lret mov leave test mov outsl jns lcall pop aas jmp and fs addr16 mov aam mov dec inc in jb lock pop out sub mov in add fs sub nop dec xchg jae xor lahf push mov dec pop jg dec mov scas mov scas xor mov jmp dec pusha out add xor in rclb dec (bad) xchg addr16 ret inc mov sub je mov mov or xchg adcl add test (bad) mov or loop repnz dec mov mov test pop adc jle clc xchg cli push (bad) mov sbb mov aas (bad) iret int3 push movsb xchg loopne mov mov sub xor add dec lret fidivl mov int3 cltd jg dec shrb ss xor mov mov scas lret aam stc pop pop push jo mov mov cltd and push hlt sub (bad) out mov andl xchg mov xchg aad lret rolb jmp ret push jae mov in mov push or xor inc out loopne jne mov xchg out xchg add pop pop cltd and xor daa or adc pop mov add test out mov jmp jle jge ret mov dec outsl fwait add (bad) jl xchg add fidivl jbe clc jbe adc jnp ret aam fmul mov push and dec in sbb add (bad) idivb scas cmpsl and sub ret enter sahf int pop test data16 xchg mov imul adc xor shrl stos cmp in (bad) jo dec test fildl cmp lahf ss ljmp mov sbb mov add popf pop daa rolb test mov and xchg nop test dec enter lds push mov stos je and pop mov cmp insl jae sbb inc mov pop pop outsb scas loopne sbb dec (bad) out and insl addr16 add loope idivl pop cwtl out or inc push jne xchg scas mov jo mov lcall adc jne (bad) xlat xor loop or adc pop fildl cli call mov and lock je pop lret lahf ret adc call add add repnz sub xchg stos xchg push loope movsb add icebp rorb mov loop ss xchg fwait or cli sti sahf (bad) pusha pop jae lock mov (bad) cwtl enter fmulp imul dec testl inc out mov sti inc dec loope add and sub add jecxz loope mov pop xchg (bad) xlat ror and ret push inc xor push xor push lcall lods ss dec daa (bad) pop pop mov ds rcrl loope mov call mov cwtl jb sti scas (bad) cmpsl sbb jno aad or xchg jecxz test and rolb push cwtl lret xchg jns or xlat jl sub dec add je lahf imul rcl imul dec lcall sub xchg xchg repnz mov imul pop pop dec (bad) loope mov (bad) mov test arpl mov mov push sub adcb in repz xchg mov xchg mov lods push xchg adc arpl and inc cmp add jmp xchg push mov movsb push enter sub cmp xchg sub xlat push inc mov xchg mov sahf (bad) (bad) ja inc (bad) inc add mov add call jnp pushf adc sbb mov xchg test mov lret mov pushf out or cwtl push adc es sbb mov shrb leave cltd jnp pop sub in mov pop cmp xlat mov mov enter test push arpl jmp add cmc mov cmp loope test xorb stos mov push je fldenv pop adc sub push xchg inc mov (bad) pusha mov daa stc fisubl dec int3 mov and loope out adc icebp shl ficoml dec mov stc popa adc add leave loop cmpsl and bound je adc cltd fs push int ja dec xor mov pusha cmp mov inc cmp aas xchg rorb cmp xor jp daa in arpl or popf je jle daa mov fnstenv xchg clc inc fs sti push movsl ret jnp movsl adc lret add mov xchg xchg pop (bad) scas push mov sbb mov inc pop or add std pop push popa push sti adc mov data16 cld insl lahf into (bad) nop lods loope mov arpl dec std add push orb scas mov ljmp add add jb dec jmp lcall mov xchg xor mov push mull and fwait adc xchg mov lret imul push js pop out cmp pop test stc ds mov cmpsb jl push fucomip jne cs aaa gs sbb add add cmp test scas out rcl pop and (bad) sti cmp fidiv sbb lds mov push push mov push push jl push inc cmp jno (bad) pmullw mov xor dec adc inc fstpl stc cwtl and dec jmp ljmp push xchg movsb sahf loop pop imull jl mov mov sbb inc out dec push mov push push inc popa push jae imul in jecxz inc lss mov add dec xor arpl (bad) push xlat xchg dec je mov int3 loope movsb neg leave xlat sub mov addl add add mov pop fwait mull shlb pop test test fidivl aas push xor pop rcrl push and (bad) cmp sahf and adc sarl and jns lret pop mov stc jmp xchg jb lods popa xor xchg adc xor mov xchg xor add ret ret pop push push mov push dec fdivp (bad) (bad) or lods inc mov test jmp xchg cmc stos sub ret jp dec sub shl pop mov clc or pop mov mov dec xchg sysexit or mov cli fimul add (bad) and add lcall sbbb add push jmp (bad) mov push xchg inc std mov add icebp outsb adc push mov xlat jge jmp or fildl add xchg jg xchg int3 daa mov push mov test push gs adc push out pop mov jmp sub (bad) pop xor sbb roll push enter or cmp (bad) xor dec rcr jns sbb js hlt adc xchg rcrl mov cmp fnop fs inc sbb mov sti arpl cmp mulps out cmc xchg add push out xchg xor fstl sub add imul dec (bad) sbb iret outsl cmpb js,pt pop ret mov jbe sahf sbb push mov cltd and fiadd xlat scas lods into cs xchg adc imul sbb pusha bound repnz loop dec fistl popf rol push sub dec mov adc xor daa shll imul cld fisttpl test mov bound jmp xchg fidivl mov iret and out fbstp cld add pop push mov jne push add xor push fisttpll add add cwtl leave (bad) xchg test out leave in jne out cmc mov cs jecxz repnz jbe shr out popf popa outsl fnstenv adc scas and fwait arpl movsl mov aas sbb imul imul push add lahf das lock jle ret stc sbb arpl outsl lcall arpl in dec xchg inc xchg push xlat inc outsb mov je mov jl mov fwait icebp test jge fs add int3 fcmovbe fsub sarb dec shr gs add pop fisttpll imul dec ret call pop adc and rolb enter fmuls add data16 xchg and lods push call adc dec dec notb loope mov mov movl push jno (bad) push add push mov mov lds ss shlb inc add cs push mov ja push mov mov dec push xor add dec loope and jge cmp in (bad) je xchg mov shrl jnp mov icebp add test inc xor iret ds leave xlat xor int mov inc nop xor test ds add sti or dec adc aas inc mull dec inc add loop,pt repz jnp cmc cmp mov push je icebp lock jle push arpl mov loop or pushf es dec and pop call pop pushf popf and adc pop add pop stc push add push jb cwtl in xor jmp test xor push das in sub sti dec sbb std js lahf xchg cmp push cs out je fsubl popa xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb mov add add jle adc cmp cld add arpl daa and sub xchg mov mov enter inc repz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub cmp inc loop adc and cli or lock add add pop call pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor push das in sub sti dec sbb std js lahf xchg cmp push cs out je fsubl popa xlat das imul push pusha push (bad) jno ret mov cmp add stos mov push clc mov jbe hlt sbb test xorb mov adc adc cmp cld add arpl daa and sub xchg mov mov enter inc repz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub cmp inc loop adc and cli or lock call pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor push das in sub sti dec sbb std js lahf xchg cmp push cs add out je fsubl popa xlat mov scas mov mov fcomp loop in repnz add or pop sbb daa sub ss idiv add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb cmpsb add int3 rcl fsub out icebp idiv add or push sbb es add ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock sti add and sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and xor add add push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add push adc push and cs aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz incb push adc push and xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz std add or sub dec dec push pop pop arpl add add js orl test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa insb jno jl add addl mov rol rcl fndisi(8087 out lock add or push sbb and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpckhps pop and das xor aas add push push pop pusha imul addb add add stos mov mov aad loopne ljmp adc das xor dec push pop pop gs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add push adc push and cs ds dec dec push pop pop imul mov scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop imul mov scas mov add add aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov movsb test (bad) aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test les add leave iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad add out add jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or add pop sbb aaa cmp push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb add inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb add and sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor add push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or sub add add push pop pop arpl jae jns test movsb test ret leave into rcr fsubp call add or sub dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push add bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop add add push jne jg mov stos scas mov mov fcmovu in out hlt stc incl push adc push and cs ds dec dec push pop pop arpl je jle mov test add lret fcmovu in out hlt stc incl push adc push and cs ds dec dec push pop pop arpl jae add add test mov mov (bad) jecxz out repz incb or adc push and xor cmp pop pop bound jb jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg add mov lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop gs je jg mov add add mov aam (bad) ljmp add adc xor dec push pop pop gs je jg mov test (bad) aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov add scas mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov add add (bad) int3 rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push add insb jno jl xchg stos mov mov add add (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp adc das xor dec push pop pop gs jne jg mov stos scas mov mov fcmovu add add jmp add pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb push adc pop and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt add add incb unpcklps pop and das xor aas inc dec dec push pop pop imul mov stos scas mov mov (bad) in out hlt stc incl push adc pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add add or sub xor cmp pop pop arpl jb jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push add sbb sub ss inc dec push push pop popa data16 jb xchg int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov fsubp jmp cli add adc pop and dec dec push pop fs je (bad) mov cwtl lahf cmpsb lods mov (bad) lret rcl fucom out repnz add or pop sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in out cmc cli incl unpcklps push and xor cmp push pop bound jno jl xchg stos mov add rcl fcmovu in out hlt stc incb push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov fcmovu in out hlt stc incb or adc sbb aaa cmp inc dec push push pop popa imul addb movsb stos scas mov add (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret enter fsubp call add or pop sbb es cmp dec push push pop pusha gs je jg mov test ret add enter fucom call add or push sbb sub cmp dec push push pop pop gs je jle mov test mov mov xlat fsub out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea push or push sbb and inc inc dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub add add push push pop pop gs je jg mov test mov mov xlat fucom out icebp idiv add or push sbb and inc inc dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor inc inc dec dec push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop fs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc add dec dec push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test mov mov xlat fsub out icebp idiv add or adc xor dec add push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov scas mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop add imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop add add add jae jle mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl add jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb add jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jb jge add xchg lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg add add lods mov mov (bad) fneni(8087 in lock cli add pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 out lock cli incl pop and cs ds dec dec push pop pop arpl jb jge xchg add add add add mov (bad) fneni(8087 in lock cli incl unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and das xor ds dec dec push pop pop arpl jb jge xchg add rol rcl fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound jb jl xchg stos add lret rcl fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov add add aad loopne ljmp unpcklps push and xor cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound jb jl xchg stos mov mov add add lret fnop in out hlt cli incl push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) ljmp push adc push and sub inc dec push push pop bound jno jl xchg movsl stos mov mov add iret aam (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam add (bad) jmp add push adc sbb aaa cmp push pop popa imul addb movsb test ret leave into rcr fucom call add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fldl add loop in repnz std add or pop sbb daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom out add repnz add or pop sbb es cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add and aas inc dec dec push pop pop imul lea lods mov mov (bad) fsub out lock add and aas inc dec dec push pop pop imul lea lods mov mov (bad) fsub out lock add and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add or adc pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add push adc push and xor ds dec push push pop outsl jbe (bad) xchg lods mov mov (bad) fneni(8087 out lock add or adc sub xor push push pop pusha gs jne jg mov stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor add inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds add dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl je jle mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl je jle mov test mov mov xlat fsub out icebp idiv add and aas inc dec dec push pop pop arpl jae jle mov test mov mov (bad) fsub out icebp idiv add and aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl add jae jle mov test mov mov xlat fsub out icebp idiv add and aas inc dec dec push pop pop arpl jae jge mov test mov mov (bad) fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl add add jge mov test mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop arpl jae jge mov test mov mov (bad) fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae add add mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add and aas inc dec dec push pop pop arpl jae jge add mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov add xchg cwtl popf mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul lea add popf mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jle mov add cmpsl lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov add mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add add lret rcl fndisi(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add add (bad) fneni(8087 out lock add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock sti add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov aad add fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpckhps pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 add add ljmp unpckhps pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp add out cmc cli incl pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp add add incl unpckhps pop and das xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov aad loopne ljmp unpckhps pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl add add unpcklps pop and das xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps add push and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp push adc push and xor ds dec dec push pop pop bound jb jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb add sub inc dec push push pop bound jno jl xchg cmpsb stos mov mov aam (bad) jmp add push adc sbb cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb add sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz in repnz std add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom out icebp idiv add or push sbb and xor push push pop pop imul mov lods mov mov (bad) fsub out lock add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov aad loopne ljmp unpcklps push and xor add pop pop bound jb jge xchg lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps push and xor cmp pop pop arpl jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp add add pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push add pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jno jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop bound insb jno jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jno jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb add add jnp xchg stos mov mov aad (bad) jmp add push adc sbb cmp push pop popa data16 jno jnp xchg cmpsb stos mov mov aam (bad) jmp add push adc sbb aaa cmp push pop popa imul add jnp xchg movsl stos mov mov aad (bad) jmp add push adc push and sub inc dec push push pop popa insb jno jnp xchg cmpsb stos mov mov aad (bad) ljmp push adc push and sub dec dec push push pop bound jno jl add add mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg stos mov mov aad loopne ljmp push adc push and xor cmp push pop bound jno jl xchg add add stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jno jnp xchg fwait mov mov aad (bad) jmp add push adc sbb cmp push pop popa data16 jno jnp xchg movsl stos scas mov rol iret aad (bad) ljmp push adc push and sub dec dec push push pop bound jno jl xchg add add rol iret aad (bad) ljmp push adc push and sub dec dec push push pop bound jno jl xchg movsl stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg cmpsb stos add add lret fcmovu in out hlt cli incl push adc push and xor cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc push and sub dec dec push push pop bound jno jl xchg movsl stos mov add aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aad (bad) ljmp push adc push and sub dec dec push push pop bound jno jl xchg movsl stos mov mov add (bad) aam (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov add aam (bad) ljmp push adc push and sub inc dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) ljmp push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) in out hlt stc incb or adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out hlt stc incb or adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) add add jmp add push adc push and sub inc dec push push pop bound jno jl xchg cmpsb stos mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add add repz incb push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz clc std add or sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov fcomp jecxz in repnz std add pop or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repnz std add or pop sbb aaa cmp inc dec push push pop popa imul addb movsb test ret leave into rcr fucom call add add pop sbb daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret enter fucom call add or pop sbb daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or add add sbb es cmp dec push push pop pusha gs je jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb add and inc inc dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test ret enter fucom out icebp idiv add or push sbb and add sub xor push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and xor dec push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or adc ds dec add popa outsb je orl ror aad loop lock add or pop sbb sub xor aas inc dec push push pop pusha imul addb cmpsl lods mov mov fcomp in hlt cld add adc cmp push pop pop outsl ja xchg ror xlat fild add in cmc cld add sub ss inc dec push push pop pusha imul addb mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov fcomp loop in repnz add add pop or pop sbb cmp inc dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz add or push sbb es ss inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad loopne in icebp idiv add or pop sbb daa sub aaa cmp push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov rcl fsub out icebp idiv add pop and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and add add add cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push pop pop bound jb jge xchg stos mov mov aad loopne ljmp unpcklps push and xor add cmp pop pop bound jb jl xchg stos mov mov aad (bad) ljmp or adc pop and cs ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps pop and xor add ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound jb jl xchg stos mov mov aad loopne ljmp push adc push and xor cmp add add push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov aad loopne ljmp unpcklps push and xor cmp inc dec add dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push add add arpl jb jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add or daa sub inc dec push push pop popa data16 jl xchg cmpsb stos mov mov aad (bad) jmp add push adc sbb aaa cmp push pop popa add jno jnp test movsl stos scas mov mov (bad) in out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub ss inc dec push push pop pusha gs jo jp test movsb test ret enter fucom call add or push sbb sub cmp dec push push pop pop gs je jg mov test ret rcl fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul js orl mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fsub out lock add pop and das xor ds dec dec push pop pop arpl jb add xchg stos mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl add add mov mov aad (bad) jmp add push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov aad loopne ljmp push adc push and xor cmp push pop bound jno jl xchg mov stos mov mov aad (bad) jmp add push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov fcmovu in out hlt stc incb or adc sbb aaa cmp inc dec push push pop popa imul addb add xchg lcall mov (bad) jecxz in repz std add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or push sbb sub cmp dec push push pop pop gs je jg mov add mov rcr fucom out repnz add pop or daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb sub cmp dec push push pop pusha gs je jg mov add mov xlat fsub out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov (bad) fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps pop and add aas inc dec dec push pop pop arpl jae jge xchg lods add add lret rcl fcmovu in out cmc cli incl unpcklps push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov rcr fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret enter fucom out repnz add or pop sbb es cmp dec push push pop pusha gs je jg mov test mov mov add ret rcl fsub out icebp idiv add or push sbb sub xor dec push pop pop add outsl jne jg mov test ret enter fucom out icebp idiv add or push sbb sub cmp dec push push pop pop fs je jle mov test mov mov add int3 rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov add rcl fneni(8087 in out hlt cli incl push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc push and xor cmp push pop bound jno jl xchg mov mov add add fnop in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add or sub inc dec push push pop popa imul addb movsl stos scas mov mov flds add fsubp call add or pop sbb es aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub add in icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov rcl fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov (bad) fsub out add add lock add pop and aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock add add cli incl unpcklps push and xor cmp pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add add add cli incl push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc sbb cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repnz std add add add add pop sbb es cmp dec push push pop pusha imul addb movsb test ret enter fucom call add or pop sbb add aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz in repz std add or add adc sbb daa sub cmp dec push push pop pusha gs jne addb movsb test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push add and sub xor dec push pop pop fs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov (bad) fsub out lock add pop add add das xor ds dec dec push pop add imul mov lods mov mov (bad) fndisi(8087 out lock sti add pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc sbb add sub inc dec push push pop popa imul addb movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub add add cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or push sbb sub cmp dec push push pop pop fs je jg mov (bad) xchg lcall mov fcomp jecxz in repnz std add or pop sbb daa sub add cmp dec push push pop pusha gs je jg mov test ret enter fucom call add or push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom call add or daa sub aaa cmp add inc inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps push and xor cmp pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc add dec push push pop popa insb jno jnp xchg movsl stos mov mov rcl fneni(8087 in out cmc cli incl unpcklps push and xor cmp push pop bound jno jl xchg movsl stos mov mov aad (bad) ljmp push adc push and sub inc dec add add add push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub ss inc dec push push add add gs jne jg mov test ret leave into rcr fucom call add or push sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp add std add or pop sbb es cmp dec push push pop add pusha gs je jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop add add jae jle mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov aad loopne jmp cmc cli incl pop and sub xor dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock sti add pop and das xor ds dec dec push pop pop arpl jb add (bad) xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add push adc sbb aaa cmp inc dec push push pop popa imul add add lcall mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret enter fucom call add or daa sub cmp dec push push add imul addb add test movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom out icebp idiv add or push sbb sub xor dec push pop pop imul lea lods mov mov (bad) fneni(8087 out lock cli incl pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg xchg fwait mov mov aam (bad) jmp add push adc push and sub inc dec push push pop popa insb jno jnp xchg mov stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa data16 jno jnp test add mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom call add or push sbb es cmp dec push push pop pusha gs je jg mov mov mov xlat fucom out icebp idiv add or push sbb sub cmp dec dec push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov add add ret enter fucom out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul lea lods add add int3 rcl fndisi(8087 out lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsb lods mov add add aad loopne ljmp unpcklps push and xor cmp pop pop bound jb jl xchg stos mov mov aad (bad) ljmp or adc pop and xor ds dec dec push pop pop arpl jb jge xchg stos mov mov add (bad) lret rcl fnop in out hlt cli incl push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp push pop bound jno jl xchg movsl stos mov mov add lret (bad) in out repz incb or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub ss inc dec push push pop popa imul addb movsb test ret leave into add rcr fucom call add or pop sbb and sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub ss inc dec push push pop pusha imul addb movsb test ret leave into roll add fcomp jecxz in repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop fs je jg mov test ret enter fldl loop in icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec add pop fs je jg mov test ret enter fucom add add in repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out add idiv add or adc das xor dec push pop pop arpl jae jge mov test mov mov (bad) fsub out lock add pop and das xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock add incl pop and xor ds dec dec push pop pop bound jb jl add mov mov (bad) fneni(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add add add add add pop and cs ds dec dec push pop pop bound jb jl xchg lods mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound jno jl xchg cmpsb stos mov mov aam (bad) jmp add add or adc sbb aaa cmp push pop popa imul addb movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov aad (bad) ljmp add add adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add or daa sub inc dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or add add sbb daa sub ss inc dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or pop sbb sub cmp dec push push pop pop gs je jg mov test mov mov fcomp loop in repnz add or push sbb add add sub cmp dec push push pop pop gs je jle mov test mov mov xlat fucom out in repz std add or daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb add sub cmp dec push push pop pop gs je jg mov test mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test mov mov fcomp loop in repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add add sub add dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps pop and cs ds add add push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor cmp push pop pop arpl jb jge xchg cmpsl lods mov mov aad loopne ljmp unpcklps pop and cs ds dec add dec push pop pop arpl jb jge xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into rcr fucom call add or daa sub ss inc dec push push pop add push jne jg xchg movsl stos scas mov mov (bad) jecxz out repz std add or sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test (bad) loopne adc and das ss dec push pop bound jb jl xchg stos mov mov aam (bad) jmp add or daa sub inc dec push push pop pusha imul addb movsb test mov rcr fucom call add or push sbb sub xor dec push pop pop imul mov mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jle mov cmpsl lods mov mov add rol rcl fildl loop in icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jle mov test mov mov (bad) add loop in icebp idiv add adc sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov add add into rcr fsubp call add or pop sbb es cmp dec push push pop pusha gs je jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov add add xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock cli incl sbb and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov add fneni(8087 in lock cli incl sbb and inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov aad loopne ljmp push adc push and sub inc dec push push pop popa imul addb movsl stos scas mov mov fadds add fsubp call add or push sbb sub xor dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock cli add pop and xor ds dec dec push push pop bound jno jl xchg movsl stos mov mov aam fiadd add add jmp add or daa sub cmp inc inc dec push push pop pusha imul jg mov test ret enter fucom out repnz add or push sbb and cmp dec push push pop pusha imul mov mov mov fcomp loop add in repnz add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out add add cmc sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push push pop bound add jge xchg lods mov mov (bad) fneni(8087 in lock cmc cli incl pop and xor ds dec dec push pop pop bound insl jae jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne jmp cmc cli incl pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add add add push adc sbb aaa cmp push pop popa imul addb movsb test add lret (bad) jecxz out hlt stc incb or adc sbb aaa cmp inc dec push push pop popa imul addb movsb test (bad) into rcr fsubp call add or add adc sbb daa sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne ljmp unpcklps add push and xor cmp push pop popa insb jno jnp xchg movsl stos scas mov mov fcomp jecxz in repnz std add or daa sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp add cld add or pop add sub cmp dec push push pop pop fs je jle mov test mov mov (bad) fsub out icebp cli add and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 out lock cli add pop and add das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad (bad) ljmp push adc push and xor ds dec dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add or sub xor cmp push pop popa imul addb movsl stos scas mov mov fcomp jecxz in repnz std add or pop sbb xor cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz in repz std add or sub add add pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec add push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc das xor dec push pop add add imul mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound add insl jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor cmp dec push push pop popa insb jb jl xchg cmpsl lods mov mov xlat (bad) out idiv add or daa sub ss inc dec push push pop pusha gs jne addb add add movsb test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov mov mov rcr fsubp call add or pop sbb es cmp dec push push pop pusha gs jne orb add xchg lcall mov fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out icebp idiv add or push sbb sub xor dec push pop pop imul mov add add mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pop fs je jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test add scas mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov (bad) in out repz incb or sub inc dec push push pop popa imul addl mov add add aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov test ret add add leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor add push pop pop arpl jae jle mov test mov mov add rcl fucom in repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne jmp cmc cli incl pop and xor ds dec dec push push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsb test ret enter fucom add add in repnz add or pop sbb sub cmp dec push push pop pop fs je jp test movsb test ret enter fucom out repnz add or sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or pop sbb es cmp dec push push pop pusha gs jne jg add movsl stos scas mov mov (bad) in out repz add adc sbb aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz in repz std add or sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl unpcklps pop and das xor inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and cs ds dec dec push pop pop arpl jae jge mov test mov mov add fsubp call add or add add sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add or adc xor push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub xor cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or daa sub ss inc dec push push pop popa imul mov test mov mov fcomp jecxz out hlt stc incl adc sbb es ss inc add dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom call add or add sub dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add pop and aas inc dec dec push add pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound add add jb jge mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add or daa sub aaa cmp inc dec push push pop popa imul add add add cmpsb stos mov mov (bad) fneni(8087 in repnz add or push sbb and aas inc push pop pop imul lea lods mov mov fcomp loop in repnz add or pop sbb sub ss inc dec push push pop popa data16 jno jl xchg add add rol rcl fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or sbb sub xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov add fucom out repnz add or pop sbb sub cmp dec push push pop pusha imul addb movsb test ret leave into add (bad) in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test lret add rcl fnop in lock add or adc das xor dec push pop pop imul mov lods mov mov xlat fucom out repnz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov flds add in out hlt stc incl unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out add in icebp idiv add or push add daa sub ss inc dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or daa sub inc dec push push pop popa imul addb movsb test ret leave into rcr fucom call repnz add or pop sbb daa sub ss inc dec push push pop pusha gs jne addb movsb test ret leave into rcr fucom call add or pop sbb daa sub ss inc dec push push pop pusha imul jg mov stos scas mov mov (bad) in out repz incb or sub xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad loopne ljmp unpcklps push and das xor aas inc dec dec add pop fs je jg mov test mov mov xlat fsub out icebp idiv add add add or push sbb sub cmp pop pop arpl jb jge xchg lods mov mov aad loopne ljmp push adc push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add and sub cmp dec push push pop popa imul addb movsb test ret leave into rcr fucom jmp adc and aas add inc dec dec push pop pop imul mov scas add fchs call add sbb and inc inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop add add imul mov scas mov mov fcomp loop in repnz add or pop sbb es cmp push pop pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp pop and cs ds dec dec push pop pop imul xchg fwait mov mov (bad) fneni(8087 in lock cli add daa sub add cmp push pop bound jb jl xchg add stos ret rcl fsub out repnz add or daa sub aaa cmp inc dec push push pop popa imul xchg mov mov aad loopne jmp idiv add and inc inc dec dec push pop pop fs je jg mov test ret enter in out hlt cli incl unpcklps pop xor aas inc dec push pop pop arpl addb movsl stos mov ret fsub out idiv add or push sbb and inc inc dec dec push pop pop gs je jg mov test ret enter fucom call add or daa add add aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub add cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push push pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas add add push pop pop imul mov scas mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb and xor ds dec add add pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push add pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha add add add push jne jg mov stos scas mov mov (bad) jecxz out repz incb or sub inc dec push add bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs add je jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge add (bad) mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into aam fsubp call add or sub inc dec push push pop popa insb jno jl xchg add add cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop fs je jg mov test ret enter fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addl add mov rol iret aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov add add ret leave into rcr fsubp call add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov add fneni(8087 out lock sti add or adc xor dec push pop pop imul mov add int fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov add rol rcl fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov add iret aam (bad) jmp add push add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov add fsubp jmp add push adc sbb cmp push pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and das xor dec push pop pop imul mov lods mov mov fcomp loop add add in repnz add or push sbb sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec add pop arpl jae jge mov cmpsl lods mov mov xlat fsub out add icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp add add add add unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pusha gs jne jg mov test ret leave into rcr fsubp call add add daa sub aaa cmp inc dec push push pop popa insb jno jl xchg mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or add pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp push pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop add and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos mov mov rcl fneni(8087 in lock cli incl pop and add xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or daa sub add add inc dec push push pop popa imul addb cmpsb stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg test mov mov xlat fsub out icebp idiv add or push sbb and inc inc add push pop pop gs je jg mov test (bad) leave into rcr fsubp call add add adc push and xor cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor dec add imul mov scas mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop add outsb jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret leave into aam fsubp jmp add or sub inc add pop pop arpl add ja (bad) xchg lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop fs je jle mov test mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul jnp test movsl stos scas mov mov (bad) in out hlt cli incl unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg add mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jno jl xchg mov lods mov mov (bad) fndisi(8087 out lock add or push sbb and aas inc dec dec push pop pop imul mov add xchg cltd sahf mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov add add mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or sub dec dec push push pop bound jb jl xchg stos add add add rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov add aad (bad) ljmp push adc push and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor push push pop pop fs je jg mov test ret add enter fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp or adc das xor dec push pop pop imul mov mov mov add fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aam (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) faddl add add add out icebp idiv add or adc xor dec push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa insb jb jl xchg stos mov mov aad loopne ljmp cli add pop and das xor aas inc add push pop pop fs jne jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol iret aad (bad) ljmp add add incl push adc push and xor ds dec dec push pop pop bound jb jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call add add add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle add movsb test ret leave into rcr fsubp call add or add pop sbb aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb add add and inc inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa imul addl mov rol rcl fcmovu in out hlt cli incl unpcklps push and add xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov rcr fucom call add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs cmp inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret enter fsubp jmp add or daa sub inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop add push jne jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl add add add outsb jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add unpcklps pop and cs ds dec dec push pop pop arpl jae add js (bad) mov cmpsl lods mov mov (bad) fsub out lock add and inc inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp adc xor dec push pop pop fs je jg mov test mov mov fcomp loop in repnz std add or sub inc dec push push pop popa insb jno jl add xchg xchg pushf mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl add mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock add and aas inc dec dec push pop pop imul mov add enter fucom call add or pop sbb daa sub cmp dec push push pop popa imul addb movsl stos mov mov rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov scas mov add add rcr fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) int3 rcl fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs jne jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jl xchg stos mov mov add aad loopne ljmp or adc das xor dec push pop pop imul mov mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fiaddl add in out hlt cli incl unpcklps pop and xor ds dec dec push pop pop arpl jb jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test (bad) leave into rcr fsubp call add add repz std add or daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpcklps pop and cs add push pop pop imul mov scas mov mov fcomp jecxz in repz add std add or daa sub inc dec push push pop popa imul addb cmpsb stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv push or adc xor dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov rol rcl fcmovu in out hlt cli incl sldt adc push and xor ds dec dec push pop pop arpl jb jge orl test mov mov fcomp loop in repnz add or pop sbb es ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or add dec push add bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos mov mov aad loopne ljmp adc das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov (bad) in out hlt stc incb or adc push and cs aas inc dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out icebp idiv add or sbb and xor ds dec dec push pop pop add add add je jg mov stos scas mov mov fnop in out cmc cli incl pop and inc inc dec push push pop bound jb jge xchg test scas mov mov fneni(8087 out icebp idiv add or adc xor push push pop pop gs je add mov test ret enter fsubp call add or daa sub inc dec push push pop bound jb jl xchg stos mov mov aad loopne jmp cmc cli incl pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp pop pop bound jb jl xchg add pushf mov mov (bad) fneni(8087 out add idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add or sub inc dec push push pop bound jb jl xchg add add rol rcl fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos mov add add add add iret aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and cmp dec push push pop pusha imul addb movsl stos scas mov add add (bad) in out hlt stc incb or adc push and sub dec dec push pop pop bound jb jl xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave add into rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fadds fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul ja addl mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop add in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock idiv add and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos add lret rcl fneni(8087 out lock sti add add and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt stc incl add unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret enter fucom call add or add sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add and aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz std add or add daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and sub xor cmp inc inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and inc inc dec add add pop pop fs je jg mov test ret enter fucom call add or pop sbb daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and cs ds dec dec push pop add push orl cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl add push (bad) mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec push push pop pusha gs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa insb jno add jbe addl mov rol rcl fcmovu in out hlt cli incl unpcklps push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha imul addb add lahf movsl stos add lret fcmovu in out hlt cli incl unpcklps push and xor ds dec dec push pop pop bound jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop gs jne jg mov (bad) xchg lcall mov (bad) jecxz out repz std add or sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jle mov add popf mov mov xlat fucom out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in add hlt cli incl unpcklps push and cs ds dec dec push pop pop arpl jae jge xchg test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov add rcl fnop in out cmc cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov add leave into aam fsubp jmp add or sub xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add int xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha insb jb jge mov stos scas mov mov fnclex ljmp push sbb sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov fcmovu in add hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pusha imul add fwait mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add push adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add add adc sbb sub xor push push pop pop gs jne jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add or push add sbb sub cmp dec push push pop pop gs jne jg mov test add lret fcmovu in out hlt cli incl unpckhps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add and add add inc inc dec dec push pop pop imul mov lods mov mov xlat fucom out icebp idiv add or push sbb es cmp dec push push pop pusha imul jg mov test (bad) leave into rcr fsubp call add or daa sub add add aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp or adc das xor add cmp inc dec dec push pop pop imul mov lods mov mov xlat fucom out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg movsl stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec add arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc das xor dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push add insb jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc sbb cmp push pop bound jb jl xchg lods mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl add jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs add addl mov rol iret aad (bad) jmp add push adc push and sub dec dec push push pop bound jb jge xchg lods mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae add add mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos add lret rcl fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jb jge xchg add lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov scas mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov add sahf movsb test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne add icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov test mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor cmp pop pop bound jb jl xchg stos mov mov add vaddsubps fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb add sub ss inc dec push push pop pusha imul addb movsb test les leave into rcr fsubp jmp add push adc sbb cmp push pop popa insb jno jl xchg movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov add add fneni(8087 out lock add and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb daa sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fiadd add call add push adc push and sub inc dec push push pop add insl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out add in icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz stc incb or sub dec dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc pop and cs ds dec dec push pop pop arpl jb jge xchg test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop fs je jg mov test ret enter fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or add add sub dec dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock cli add add sbb and das xor aas inc dec dec push pop pop imul mov lods mov mov add fucom call add or pop sbb daa sub cmp dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb add add sub dec dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and add das xor ds dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pusha gs je jg mov test ret enter fucom out repnz add or adc sbb add add aaa cmp inc dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc das xor add inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsb test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec add add pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc sbb cmp push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov test ret enter fucom call add or pop sbb daa sub cmp dec push push pop pusha add add jo jp test movsl stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound add add jge add mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop fs je jg mov test ret enter fucom call add or pop sbb daa sub ss inc dec push push pop pusha imul jp test movsb test (bad) leave iret aam fsubp jmp add push adc sbb aaa cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge add xchg lods mov mov (bad) fndisi(8087 out icebp idiv add and aas inc dec dec push pop pop imul mov lods mov mov rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb add nop xchg lcall mov fcmovu in out hlt stc incb push adc push and xor cmp pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov add mov rol rcl fsub out icebp idiv add or push sbb and inc inc dec push push pop popa insb jb jl mov stos scas mov ret lret rcl fucom out repz incb or adc push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock add sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and inc inc dec push push pop pop gs je jg mov test (bad) leave into rcr fsubp jmp add or sub xor cmp push pop pop arpl jae jle mov test mov mov xlat faddl add loop in icebp idiv add or push sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aam (bad) ljmp push adc push and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out add idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or adc sbb cmp inc dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add add and aas inc dec dec push pop pop imul mov xchg lcall mov (bad) jecxz out repz incb or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add add add adc das xor dec push pop pop gs je jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add add sbb and aas inc dec dec push pop pop gs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov add fsub out icebp idiv add or push sbb add and inc inc dec dec push pop pop fs jne jg mov stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add and add add add dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop popa insb jno jl xchg stos mov mov fndisi(8087 out lock add and aas inc add push pop pop imul mov mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor cmp add add bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa add add jo jnp test movsl stos scas mov rol rcl fcmovu in out hlt cli incl push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs add add add test mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge add add add add popf mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp jmp add or sub inc dec push push pop bound jno jl xchg add stos mov mov aad loopne jmp cmc cli add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pusha imul jg mov add lahf movsb test (bad) leave into rcr fsubp call add push adc push and sub inc dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl add add (bad) int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jno jl xchg movsl stos mov add add aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add and inc inc dec push push pop pop fs je jg mov test ret add int fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov add fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fldl add jecxz in repnz std add or daa sub aaa cmp push pop popa data16 jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out add idiv add and inc inc dec push push pop pop fs je jg mov test ret enter fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz add incb or sub inc dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add add or adc das xor dec push pop pop fs je jg mov test ret enter fucom out repnz add or pop sbb es cmp dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc add sbb cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs jne jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol iret aad (bad) ljmp push adc push and add add add cmp inc dec dec push pop pop bound jb jl xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or push sbb sub cmp inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor add add pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push add pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop add add je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov rol iret aad (bad) ljmp push adc push and xor cmp pop pop bound jb ja (bad) xchg stos mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha imul jg add add lahf movsb test ret leave into aam fsubp jmp add push adc sbb cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov xchg xchg popf mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs jne jg mov test ret leave into rcr fsubp jmp add or sub inc dec push push pop popa insb jno jl xchg add mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add or push sbb and inc inc dec push push pop pop gs je jg mov test add scas mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov add fneni(8087 in lock cli add and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov add add iret aam fsubp jmp add push adc push and sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add (bad) fsub out icebp idiv add or adc xor push push pop pop gs je jg mov test ret enter fucom call add or pop sbb daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad fild add in out hlt stc incl push adc push and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add clc std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out repz incb or add adc sbb aaa cmp push pop bound jb jl xchg lods mov mov aad loopne jmp cmc cli incl pop and das xor ds dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and add add ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop fs je jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp add inc inc dec push push pop popa imul addb cmpsb stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or adc xor add add pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub inc dec push push add pop bound jno jl xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop add add add imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp push pop bound jb add addl mov rol rcl fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg add add lahf movsb test ret leave into aam fsubp jmp add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg xchg xchg pushf mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov xlat fucom call add or pop sbb daa sub ss inc dec push push pop pusha imul addb add mov aam fsubp jmp add push adc push and sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl add lret rcl fneni(8087 in lock sti add pop and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs jne jg mov test add add rcr fucom call add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jl xchg stos mov mov (bad) lret rcl fneni(8087 in lock cli add and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov add add (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor dec push pop pop imul mov scas mov mov fcomp add out repnz add or pop sbb es aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out add lock sti add and inc inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg movsl stos mov mov aad (bad) ljmp incl push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fsub out lock add and aas inc dec dec push pop pop gs je jg mov test ret enter fucom call add add add pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push push pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add add add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out repz incb or adc sbb sub inc dec push push pop bound jno jl xchg lods mov mov aad loopne ljmp unpckhps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub add cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or adc sbb aaa cmp push pop popa insb jno jnp xchg stos mov mov aad loopne ljmp unpcklps pop and cs add add add dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop fs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop add pop fs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound add insl jb jge xchg lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul add add test movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul add add mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul (bad) mov test leave iret aam (bad) ljmp adc sbb cmp inc dec dec push pop pop gs jne addb movsl add add add (bad) int3 rcl fsub out repnz incb or adc push and xor cmp pop pop arpl jb jge xchg cmpsl lods mov mov fndisi(8087 out lock add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov cmpsl lods mov mov add add rcr fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov test (bad) lret fcmovu in lock cli add pop and inc dec dec push pop pop gs jbe test movsl stos mov mov aad loopne in icebp clc add or pop sbb es ds dec dec push pop arpl je orl lods mov mov xlat (bad) in icebp idiv add or adc xor push pop pop imul xchg xchg pushf mov mov (bad) out hlt sti add adc and das xor add add inc dec dec push pop pop imul (bad) xchg popf mov mov fcomp loop in repnz add or sub xor ds dec dec push pop pop gs je jg mov scas mov mov fnop in icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa imul addl mov aad loopne ljmp adc xor push push pop bound jno jge xchg scas mov mov fnclex out icebp idiv add or xor aas inc dec push pop gs jne test mov add fucom in hlt cld add adc and xor inc dec push push pop insw jbe test fucom in hlt cld add cmp dec push pop data16 jbe xchg mov (bad) int3 rcr jecxz repnz add adc and xor inc dec push pop bound jns mov mov loopne lock incl add push adc (bad) fucom in hlt cld dec push pop imul xchg mov mov (bad) jecxz out repz std add adc and das ss popa insb jno jl xchg (bad) fsubp in hlt sti pop es dec push pop gs je (bad) mov mov add loope icebp stc add adc and xor inc dec dec push outsb js xchg lret rcl fneni(8087 in lock cli add and inc dec push pop fs jae (bad) mov cmpsl lods mov mov add adc and dec push pop pusha data16 jno jnp xchg cmpsb lods mov ret lret roll add loope lock incb or adc push and cs jle mov rcl fsub out icebp idiv add or sbb sub cmp dec push pop arpl jae jle mov iret fcomp out notb sbb sub cmp push pop pusha push (bad) xchg sahf cmpsb scas mov (bad) into (bad) fsubp out idiv push push adc dec push pop arpl jns cwtl test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl ja (bad) xchg lods mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop add push (bad) xchg cmpsl lods mov ror xlat (bad) in hlt cld add adc and xor aas inc dec push pop gs je (bad) mov mov (bad) int3 aam jecxz hlt stc incb adc add and inc dec push pop gs je (bad) mov mov ret lret loopne out idiv add add add adc pop es pop pop insw jne test mov fucom jmp cli add movhps aas inc dec push pop fs jae addl ret leave rcl fucom in repz add adc pop es push pop pop outsb jne orl mov ret add xlat fsubp in repnz add movhps aas inc dec push pop arpl jns xchg mov mov jecxz icebp idiv add sub aaa aas inc dec push pop arpl jns xchg mov ret xlat fsubp in hlt sti add adc and cs pop outsw jbe test add add mov jecxz icebp stc add nop/reserved daa cs inc dec push pop imul mov mov ret lret loope lock incl or xor inc inc dec push pop insw jne test mov rol (bad) fucom in hlt cld add sbb sub ss popa push add test mov loope icebp clc incl push adc cmp push push pop insw jne orl mov (bad) out idiv push or xor inc dec dec push pop gs je orl mov (bad) lret rcr loope out idiv add sub cmp dec push pop imul mov mov ret lret loope lock incl or xor inc inc dec push pop imul xchg cltd mov (bad) into (bad) fsubp in cmc cld add adc and das ss dec push pop fs je test mov ror (bad) fsubp in hlt cld add adc and xor add add dec push pop gs je test mov ret (bad) ljmp and das aaa aas inc dec push pop data16 jbe test mov mov in repnz add adc push and dec push pop popa push mov mov in repnz add movhps and sub cmp push pop pusha push lea rol aam loop lock add push adc cmp push push pop insw jne orl mov (bad) int fsub jmp cli add movhps and dec push pop popa push mov mov loop repnz add add sbb sub cmp push pop pusha imul mov (bad) iret (bad) fucom in repz add adc sbb daa cs pop bound js xchg mov rol (bad) fucom in repz add adc and das aaa aas inc dec push pop arpl jns xchg mov ror (bad) fsubp in add hlt sti add adc and das ss popa push mov mov (bad) out idiv add adc and xor aas dec dec push pop gs je test mov (bad) out idiv or sbb daa das aaa ds dec push pop outsb jbe xchg mov (bad) int3 rcr loop add jmp or xor inc dec dec push pop gs je orl mov (bad) (bad) jmp or xor inc dec dec push pop fs jae (bad) mov mov (bad) int3 rcr loope icebp stc add adc pop daa cs dec push pop arpl jp orl mov add add add lret rcr loope lock add sub cmp dec push pop data16 jne test mov ror (bad) fsubp in hlt cld add sbb sub cmp dec push pop arpl jp mov mov enter call push adc cmp push push pop insw jne test scas add mov (bad) int fninit ljmp sbb inc dec push push pop insw jne test mov mov in repnz add movhps and dec push pop pusha outsl jbe test mov fucom ljmp sbb inc dec push pop popa push lea add mov (bad) out idiv add sub cmp push pop bound jp mov mov (bad) out add add adc and xor ds dec push pop arpl jns xchg mov ret lret loopne out idiv add adc and xor aas inc dec push pop arpl jp add add movsl lods mov ret lret loopne out cmc std add adc and xor inc dec push pop pusha push mov rol (bad) fucom in repz add adc pop daa cs pop popa imul sahf movsl lods mov ret fsub call or xor inc dec push pop arpl add imul mov mov loope icebp clc add adc pop es pop popa imul pushf mov enter in repz add adc push and dec push pop pusha outsl jbe test mov mov jecxz repnz add movhps inc dec push pop add jo jle lea rol (bad) fucom jmp sti add adc and das aaa ds dec push pop bound jns mov mov ret lret rcr loop icebp clc incl movhps daa das ss inc dec push pop insw jbe test mov (bad) int3 aam jecxz hlt cld add adc and xor add ds dec push pop arpl js xchg mov ret xlat (bad) out cmc cld add adc and das ss arpl js xchg mov ror xlat fsubp in hlt sti add adc and das ss dec push pop bound js xchg mov ror xlat (bad) in hlt cld add adc sbb sub aaa ds dec push pop bound jns xchg mov (bad) int3 rcr loop icebp clc add adc and xor aas inc dec push pop pusha outsb jbe test mov les int fnclex jmp push push push and dec push pop arpl js xchg mov ror (bad) fucom jmp cli add adc and das ss dec push pop fs jb orl lret rcr loop repnz add adc and xor inc dec dec push pop data16 jne test mov ret lret rcr jecxz repnz add adc and xor inc dec push pop pusha push mov mov in repz sti add adc and das ss dec push pop fs jae (bad) mov mov loope lock incl push adc cmp dec push pop pusha outsb jne test mov fucom in hlt sti add adc pop and das xor dec push pop pusha gs jne jg mov stos add leave iret aam fsubp jmp incl pop and das xor dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp push pop popa data16 jno jnp xchg cmpsb stos mov add mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) int3 rcl fndisi(8087 out lock sti add and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb sub add cmp inc dec push push pop bound jno jl xchg cmpsb stos mov mov rcl fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop gs je jg mov test ret enter add fucom call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out add jmp idiv add and aas inc dec dec push pop pop imul mov stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push push pop bound jb jl xchg lods mov mov aad loopne ljmp add cmc cli incl unpcklps push and xor ds dec dec push pop pop bound jb jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos add lret rcl fneni(8087 in lock cli incl add unpcklps pop and cs ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov scas mov mov fcomp loop in repnz add or add add sbb daa sub ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt stc incb or adc push add and sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aad (bad) add lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add pop and add sub xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc sub add add cmp dec push push pop pusha gs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp jmp add or daa sub add push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub inc dec push push pop bound jno jl xchg cmpsb stos mov mov aad (bad) jmp add unpcklps push and xor ds dec dec add pop bound jb jge xchg stos mov mov aad loopne ljmp adc xor cmp inc dec push push add push (bad) xchg cmpsl lods mov mov (bad) fneni(8087 out lock cli add and aas inc dec dec push pop add add add pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov scas mov mov xlat fucom out repnz add or pop sbb daa sub cmp dec push push pop pusha add imul addb movsb test (bad) leave into rcr fsubp call add or sub inc dec push push pop bound jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae add (bad) mov mov mov xlat fucom out repnz add or push sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz std add or sub inc dec push push pop popa insb jno jl add addl mov rol iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor dec push pop pop imul add lea lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov test ret leave into add (bad) in out repz incb or adc sbb cmp push pop bound jb jl xchg add mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc xor push push pop pop gs je jg mov add add ret enter fucom call add or pop sbb es cmp dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jb jl xchg lods add mov mov aad loopne ljmp add adc xor dec push pop pop gs je jg mov test ret enter fucom call add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos mov add aam (bad) jmp add push adc push and cs (bad) fneni(8087 out lock sti add or adc xor dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock sti add or adc das xor aas inc dec add add pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov rcl fsub out lock add and aas inc dec dec add imul lea lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop add add push je jg mov test ret enter fucom out repnz add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa insb add add jl xchg movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul lea lods mov mov (bad) fsub out icebp idiv add and add dec push push pop pusha gs jne jg add add test movsb test ret enter fucom call add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop popa insb jno jnp xchg add stos mov mov aam (bad) jmp add push adc sbb aaa cmp push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jb jge xchg add mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop arpl jae jns test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pop gs jne jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs jne addb movsb test add add leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb cmpsb stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg lods add mov ret rcl fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov mov mov add enter fucom out repnz add or push sbb sub cmp dec push push pop pusha gs je jg mov test ret leave into rcr fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov stos scas mov mov add rcr fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz ljmp push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov add aam (bad) jmp add push adc sbb aaa cmp push pop popa insb jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out in icebp idiv add or adc sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs jne addb movsb test (bad) lret (bad) in out add add stc incb or adc sbb cmp push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push add imul addb movsb test (bad) leave into rcr fsubp jmp add add add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out hlt stc incb or adc sbb cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp sldt add add add push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov aad loopne ljmp unpckhps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add add add and aas inc dec dec push pop pop imul lea xchg cltd sahf mov mov fcomp loop in repnz add or daa sub ss inc dec push push pop pusha imul addb movsb test ret leave into rcr fsubp call add or add add sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpcklps pop and add add ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul lea lods mov mov rcr fucom out repnz add or pop sbb daa sub add add inc dec push push pop pusha imul addb movsb test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov jmp or sbb sub cmp push pop pusha outsl jbe (bad) mov cmpsl lods mov mov xlat fsub out icebp idiv add or xor cmp dec push push pop pusha imul addb add lahf movsb stos scas mov mov fcomp jecxz in repnz std add or pop sbb daa sub cmp dec push push pop pusha gs je jg mov test ret enter fucom call add or pop sbb and sub aaa cmp inc dec push push pop popa imul addb add add movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha gs jne jg mov stos scas mov mov fcomp jecxz in repnz std add or pop sbb sub cmp dec push push pop pop gs je jg mov test mov fcomp loop in repnz add or push sbb sub xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov test mov add rcl fndisi(8087 out lock sti add pop and das xor ds dec dec add imul lea lods mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jb jge xchg lods mov add fneni(8087 out lock cli incl pop and cs ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock cli incl pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov add add lret fcmovu in out hlt stc incl push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or daa sub aaa cmp inc dec push push pop pusha imul addb mov stos scas mov mov add add add lret fcmovu in out hlt stc incb or adc sbb aaa cmp inc dec push push pop popa imul addb movsb test (bad) leave into aam fsubp call add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter add rcr fucom call add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) add add loopne jmp cmc cli add pop and xor ds dec dec push pop pop bound jb jl xchg movsl stos mov mov rol rcl fneni(8087 in lock cli incl unpcklps push and xor cmp push pop popa insb jno jnp xchg movsl stos scas mov mov flds add jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret enter fucom add in repz std add or daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or push sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub add add in repz std add or daa sub cmp dec push push pop pusha gs jne jg mov test mov mov xlat fsub out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov (bad) fsub out lock add add add sti add or adc das xor dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fneni(8087 in lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp add add add unpcklps push and xor cmp push pop bound jno jl xchg movsl stos scas mov mov (bad) jecxz in repz std add or and sub inc dec push push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repnz add add pop or es cmp dec push push pop pop gs je jg mov test mov mov (bad) fsub out lock add and aas inc dec dec push pop pop arpl jb jge xchg stos mov mov aad loopne ljmp add unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add or sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add push add adc push and sub add push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add or add add sbb aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret enter fucom out repnz add or push sbb add and sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov test ret enter fucom out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 in lock cli add pop and add xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov aad loopne ljmp push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc sbb add aaa cmp push pop popa insb jno jnp xchg movsl add (bad) aad (bad) ljmp push adc push and sub dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub add cmp push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add or daa sub ss inc dec push push pop popa imul addb movsb test ret leave into rcr fucom call add or pop sbb es cmp add inc dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop fs je jle mov test mov mov xlat add loop in repnz add or push sbb and aas inc add add push pop pop imul mov lods mov mov (bad) fsub out lock add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec add push pop pop bound jb jge xchg stos mov mov aad loopne ljmp push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push add insb jno jl xchg movsl stos mov mov aam (bad) jmp add add adc push and xor cmp push pop bound jno jl xchg stos mov mov aam (bad) jmp add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz in repz std add or es cmp dec push push pop pusha add add push je jg mov test ret enter fucom call add or push sbb sub xor dec push pop pop imul mov lods mov mov (bad) fsub out lock add pop and das xor add inc dec dec push pop pop arpl outsb jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa imul add add addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul add jle mov test mov mov (bad) fsub out lock sti add pop and das xor ds dec dec push pop pop bound outsb jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop bound jb jl add add pushf mov mov aad loopne ljmp push adc push and xor cmp push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add or daa sub inc dec push push pop pusha imul addb mov test (bad) leave into rcr fsubp call add or daa sub cmp dec push push pop pusha gs je jg mov test mov mov fcomp loop in repnz add or push sbb sub xor dec push pop pop fs je jg mov add xchg cltd add mov rcr fsubp call add or daa sub cmp dec push push pop pusha gs jne jg mov test mov mov fcomp loop in repnz add or push sbb sub xor dec push pop pop imul mov cwtl popf mov mov xlat fsub out icebp idiv add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound jb jl xchg add mov aad (bad) ljmp push adc push and sub inc dec push push pop bound jno jl xchg movsl stos mov mov rcl fneni(8087 in out cmc cli incl unpcklps push and xor cmp push pop popa insb jno jnp xchg add movsl stos scas mov mov (bad) in out repz incb or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom call add or push sbb sub xor dec push pop pop imul mov add add (bad) int3 rcl fsub out icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov (bad) fneni(8087 out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov add add add rcl fnop in lock cli add push or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock sti add pop and das xor ds dec dec push pop pop bound jb jl xchg stos mov add mov aad (bad) jmp add push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz incb or daa sub aaa cmp inc dec push push pop pusha imul jg mov test add enter fucom out repnz add or pop sbb sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb and cmp dec push push pop pusha gs je jg mov test mov mov add int3 rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov add rcl fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jb jl xchg stos mov mov aad (bad) jmp add push adc push and sub inc dec push push pop popa data16 jno jnp test movsl stos scas mov mov fcomp jecxz in repnz add or pop sbb es cmp dec push push pop add imul jg mov test ret enter fsub out icebp idiv add or adc xor dec push pop pop imul lea lods mov mov (bad) add loope jmp cmc sti add pop and ds dec dec push pop pop arpl jb jge xchg lods mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam fiadd add add jmp add or sub inc dec push push pop popa imul addb movsb test ret enter fucom call add or push sbb sub cmp dec push push pop pop fs je jle mov (bad) xchg cltd lahf movsb test ret enter fucom call add or push sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov (bad) fneni(8087 out add add cmc sti add pop and cs aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov aad loopne ljmp push adc push and xor ds dec dec push pop pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add clc incb or daa sub aaa cmp inc dec push push pop popa imul addb movsb test mov (bad) jecxz out repz std add or daa sub ss inc dec push push pop pusha imul addb movsb test ret enter fucom out repnz add add or push sbb sub xor push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne ljmp add push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aam (bad) jmp add or daa sub aaa cmp inc dec push push pop popa imul addb movsb test ret enter fucom out in repz std add pop or pop sbb sub cmp dec dec push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa data16 jno jnp test movsl stos scas mov mov fcomp jecxz in repnz std add or add sbb sub cmp dec push push pop pop gs jne jg mov test ret rcl fsub out icebp idiv add or adc sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc sbb and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock cli add pop and cs ds dec dec push pop pop bound jb jge xchg stos mov mov aad (bad) ljmp push adc push add sub inc dec push push pop popa imul addl mov mov (bad) in out repz std add or daa sub aaa cmp inc dec push push pop pusha gs jne addb movsb test ret enter fucom call add or push sbb add add xor dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov (bad) fsub out lock add pop and add das xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound jno jl xchg cmpsb stos mov mov aam (bad) jmp add push adc sbb add aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repz std add or daa sub cmp dec push push pop pusha gs je jnp test movsl stos scas mov mov (bad) jecxz in repnz std add or pop sbb sub add add inc inc dec push push pop pop gs je jg mov test ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fsub out lock sti add pop and cs add add dec push pop pop bound jb jl xchg lods mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc add dec push push pop pusha imul addb movsb add (bad) aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsb test (bad) leave into rcr fsubp call add or daa sub cmp dec add add pop pusha gs je jg mov test mov mov fcomp loop in repnz add or push sbb sub xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add pop and das xor ds dec dec push add pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push pop pop bound jno jl xchg movsl stos mov mov aam fneni(8087 in out cmc cli incl unpcklps push and xor cmp push add add insb jno jl xchg movsl stos scas mov mov (bad) in out repz std add or daa sub ss inc dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz in repnz std add or pop sbb sub cmp dec push push pop pop add push je jle mov test mov mov xlat fsub out icebp idiv add pop or pop sbb sub cmp dec push push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul outsb jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp unpcklps push and xor cmp push pop popa insb jno add jbe addb movsl stos scas mov mov (bad) jecxz out repz incb or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom out repnz std add or pop sbb sub add cmp inc dec push push pop pusha gs jne add test movsb test ret enter fucom out repnz add or pop sbb sub cmp dec push push pop pop fs je jle mov test mov mov (bad) fsub out lock add or adc das xor aas inc dec dec push pop pop arpl jb jge add (bad) xchg lods mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add or daa sub inc dec push push pop popa imul addb add mov test ret enter fucom call add or pop sbb es cmp dec push push pop pop add jo jp test movsb test ret enter fucom call add or pop sbb daa sub cmp dec push push pop pusha gs je jg mov add mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov (bad) fsub out lock sti add pop and aas inc dec dec push pop pop arpl jb jge xchg add xchg pushf mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add or daa sub inc dec push push pop popa imul addb fwait mov mov aam (bad) jmp add or sub inc dec push push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repnz std add or pop sbb daa sub ss inc dec push push pop pusha gs jne jg mov add movsb test ret enter fucom call add or pop sbb daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or push sbb es cmp dec push push pop pusha gs je jg mov test add scas mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul lea lods mov mov rcl fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jge mov cmpsl lods add mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov fcomp jecxz in repnz add or push sbb sub cmp dec push push pop pop xchg fwait mov mov aam fild add jmp add push adc sbb aaa cmp push pop popa data16 jno jl xchg movsl stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz add repz std add or daa sub ss inc dec push push pop pusha gs jne addb movsb test ret enter fucom call add or push sbb sub cmp dec push push pop pop fs je jnp test movsb stos scas mov mov fcomp jecxz in add add clc std add or pop sbb es cmp dec push push pop pusha gs je jg mov test ret enter fucom out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp testb add add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp add add push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl add lret rcl fnop in out hlt stc incl push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add add add push adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repz std add or pop sbb es cmp dec push push pop pusha gs je jg mov test ret enter fucom out repnz add or add push sbb sub xor dec push pop pop imul mov scas mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov xlat add loop in repnz add or push sbb sub xor dec push pop pop imul mov scas mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and add sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add add adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aad (bad) jmp add push adc sbb add add inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret enter fsubp call add or pop sbb es add cmp dec push push pop pusha gs je jg mov test mov mov fcomp loop in repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and add inc inc dec push push pop pop gs je jle mov test mov mov xlat fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out icebp idiv add pop and aas add add push pop pop arpl jae jge xchg cmpsl lods mov mov aad loopne jmp cmc cli add pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp add dec push push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add push adc sbb cmp push pop popa data16 add jl xchg stos mov mov aad (bad) jmp add push adc push and xor cmp add pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add push adc sbb aaa cmp push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or daa sub aaa cmp inc dec push push add pop pusha imul jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop add add jae jle mov mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov (bad) fsub out icebp idiv add and aas inc dec dec push pop pop arpl add jae jge mov cmpsl lods mov mov aad loopne ljmp unpckhps pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add or sub inc dec push push pop popa imul addb movsb stos scas mov mov aam (bad) jmp add or sub inc dec push push pop popa imul add add addb movsl stos scas mov mov (bad) jecxz in repnz std add or pop sbb daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom out repnz add or push sbb es cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov lods mov mov (bad) fsub out lock add pop and das xor aas inc dec dec push pop pop arpl jae jge add add mov mov (bad) fneni(8087 in lock cli incl add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop arpl jb jge xchg add add cmpsl lods mov mov aad loopne ljmp unpcklps push and xor cmp pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub dec dec push push pop bound jno jl xchg xchg fwait mov mov aam (bad) jmp add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repz std add or daa sub add cmp inc dec push push pop popa insb jno jnp xchg add mov mov (bad) jecxz in repz std add or daa sub ss inc dec push push pop pusha imul addb movsb test ret enter fucom call add or push sbb sub cmp dec dec push pop pusha gs je jg mov add mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock sti add pop and xor ds dec dec push pop pop bound jb jl xchg add (bad) aam (bad) jmp add or daa sub ss inc dec push push pop pusha add jno jnp xchg movsl stos scas mov mov (bad) jecxz in repnz std add or pop sbb sub cmp dec push push pop pop fs je jg mov test add add (bad) int xlat fsub out icebp idiv add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound jb jge xchg stos mov add mov rol rcl fcmovu in out hlt stc incl push adc push and sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb mov add mov aad (bad) ljmp push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov add leave into rcr fsubp call add or pop sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov add add rcl fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov rcl fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add add (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound jno jl xchg cmpsb stos mov mov aad add (bad) ljmp push adc push and sub inc dec push push pop popa imul addb movsl stos mov mov aam fsubp jmp add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) add add call incb push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp push pop popa imul addb movsl stos scas mov mov (bad) in add add out repz incb or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add add idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test mov mov fcomp loop in repnz add or push sbb and cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add idiv add or push sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add add add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp or adc push and xor cmp push add push (bad) xchg lods mov mov aad loopne jmp cmc cli incl push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) ljmp add push adc push and sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push push pop pusha imul addb movsb test ret leave into rcr fsubp call add or add sbb daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop fs je jle mov (bad) xchg cltd lahf movsb test ret enter fucom call add or add add daa sub cmp dec push push pop pusha gs je jg mov test ret rcl fucom out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc add aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov rcl fneni(8087 in lock cli incl adc das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp push adc push and add add add cmp push pop bound jno jl xchg cmpsb stos mov mov aam (bad) jmp add push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or sub add add inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret rcl fsub out add idiv add or push sbb sub cmp add dec push push pop pop fs je jle mov test mov mov (bad) fndisi(8087 out lock cli add pop and das xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add or daa sub add add push push pop pusha imul jg mov test ret enter fsub out icebp idiv add or adc xor dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne ljmp push adc push and sub dec dec push push pop bound jno jl xchg movsl stos scas mov mov (bad) jecxz in repz std add or pop add cmp push pop popa imul addb movsb test (bad) leave into rcr fsubp call add or pop sbb sub cmp dec add pop pusha gs jne jg mov test ret enter fucom out icebp idiv add or push sbb and inc inc dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add pop and ds dec dec push add add arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop pop arpl jae jge xchg lods mov mov aad loopne ljmp push adc push and xor cmp push pop add pop arpl jae jge xchg cmpsl lods mov mov aad loopne ljmp unpcklps push and xor cmp pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp push pop bound add add insb jno jl xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov fcomp jecxz in repnz std add or pop sbb es cmp dec push push pop pusha gs add jo jp test mov mov xlat fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop fs je add mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop fs je jg mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae add jge xchg cmpsl lods mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound jno jl xchg stos mov mov aam (bad) jmp add push adc sbb aaa cmp push pop popa imul addl fwait mov mov rol rcl fcmovu in out hlt stc incb push adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha imul jg add add movsb test ret leave into rcr fucom call add or pop sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jge mov add xchg cwtl popf mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fildl loop in icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea cwtl sahf mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov add add mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and cs ds dec dec push pop pop bound jb jl xchg add add lret rcl fcmovu in out hlt cli incl push add das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad loopne ljmp push adc push and xor cmp push pop bound jno jl xchg movsl stos add add add lret fcmovu in out hlt stc incb or adc sbb aaa cmp push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or daa sub aaa cmp inc dec push push pop pusha imul jg mov test mov rcr fsubp call add or pop sbb es cmp dec push push pop pusha gs je jg mov test mov mov fcomp loop in repnz add or push sbb sub xor dec push push pop pusha gs jne jg mov test add add fcomp loop in repnz add or push sbb sub cmp dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jge mov cmpsl lods mov mov add (bad) lret rcl fsub out lock add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push pop pop bound jno jl xchg stos mov mov add aam (bad) jmp add push adc sbb aaa cmp push pop popa imul jl xchg stos mov mov aam (bad) ljmp push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov aam fsubp jmp add or daa sub inc dec push push pop popa imul addb movsb test ret enter fucom call add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jle mov add ret rcl faddl loope in icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad loopne add add out hlt stc incl unpcklps push and xor ds dec dec push push pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz out add add clc std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret enter (bad) jecxz out repz std add or daa sub inc dec push push pop popa imul addb movsb test ret enter fucom out repnz add idiv add or pop sbb sub cmp dec push push pop pop gs je jle mov test mov mov xlat fsub out icebp idiv add and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 out lock cli add add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp add unpcklps pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp add push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repz std add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsb test (bad) leave into rcr fucom call add or pop sbb es add push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repz std add or sbb daa sub cmp dec push push pop pusha imul jg mov test ret enter fucom out repnz add or xor inc dec push js xchg cwtl lahf cmpsb lods mov ror aad in repz add push adc cmp inc dec push pop imul mov mov add mov (bad) int3 rcr (bad) in repnz add or sbb es push push pop pusha gs jbe addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jle mov movsb test ret enter add fucom call add or daa sub inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out add add add add cmc sti add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul jg mov test (bad) leave into rcr fsubp call add add add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam fild in lock cli incl unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add push or push sbb sub cmp dec push push pop pusha gs ja (bad) xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or add xor push push pop pop fs je jg mov test ret enter fucom out repnz add or pop sbb sub cmp dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz incb or add and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and cs ds dec dec push pop pop arpl jae jge mov test (bad) leave into rcr fsubp call add or daa add inc dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor add cmp inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret enter fucom call add or pop sbb es ss inc dec push push pop add insb jno jl xchg stos mov mov aad loopne ljmp unpcklps push and xor add add dec push pop pop arpl jb jge mov cmpsl lods mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad (bad) ljmp push adc push and xor ds dec dec add push pop pop bound jb jl xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov cmpsb stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock cli add or pop sbb sub cmp dec push push pop pusha add add push jne jg mov test (bad) leave into rcr fsubp call incb or adc sbb cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound add jb jge xchg lods mov mov (bad) fsub out lock add and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne add mov test (bad) leave into rcr fsubp call add or daa sub cmp inc dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor cmp dec push push pop pusha gs jne jg add mov test ret enter fsubp jmp add or sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg add add mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop pusha insl jb jl xchg cmpsb lods mov mov (bad) fneni(8087 out icebp idiv add and aas inc dec dec push pop pop imul mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos add scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov lods mov add mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jl xchg lods add add (bad) int3 rcl fsub out icebp idiv add or adc xor dec push pop pop fs je jg mov test mov mov fcomp loop in repnz add or push sbb daa sub cmp dec push push pop pusha imul addb movsb test (bad) leave into add add (bad) jecxz out repz std add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov fcomp add call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp incl unpcklps pop and cs aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out add in icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp stc incb push adc push and xor cmp pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock add or push sbb sub cmp dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb add or adc sbb xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop fs je jle mov test mov mov xlat fucom out repnz add or adc sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa data16 ja (bad) xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and add add das xor dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add push adc push and sub add cmp push pop bound jno jl xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and das xor ds dec dec push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and sub add push push pop bound jno jl xchg add (bad) int3 rcl fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test (bad) leave iret aam fsubp jmp add push adc sbb aaa cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop add push mov test mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound add add jl xchg lods mov mov aad loopne jmp cmc sti add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp jmp add or daa sub inc dec push push pop popa imul addb movsl stos scas mov into aam fsubp jmp add push adc sbb cmp push pop bound jno jl xchg mov stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov add add mov mov (bad) jecxz out repz std add push adc sbb cmp push pop bound jno jl xchg stos mov mov aad loopne ljmp adc das xor aas inc dec dec push pop pop imul mov add test mov mov xlat fsub out icebp testl adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop fs je jg mov test ret enter fucom call add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov add mov fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and cmp dec push push pop pusha imul addb movsb test les leave into aam fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad fild add add ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jns orl test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in add add repz incb or sub inc dec push push pop popa insb jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp testl add add or push sbb sub cmp dec push push pop pop gs jne addb movsb stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop popa insb jno jl xchg stos mov mov rol rcl fsub out icebp idiv add add push or push sbb and inc inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad (bad) ljmp sldt add push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or add add add add sub inc dec push push pop popa insb jno jl xchg cmpsb lods mov mov (bad) fneni(8087 in lock sti add or push sbb and inc inc dec push push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or daa add aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor add cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub add add push pop pop arpl jae jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb es cmp dec add pop pusha gs jne jg mov test (bad) leave into rcr fsubp jmp add or daa sub inc dec push push pop popa imul addb movsl stos mov mov aam (bad) ljmp push adc push and xor cmp pop add push (bad) xchg lods mov mov (bad) fneni(8087 in lock add pop and aas inc dec dec push pop pop arpl outsl je jg mov test ret enter fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha add jo jp test movsb stos scas mov mov (bad) jecxz out repz incb or adc sbb cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop pusha imul addb movsb add (bad) aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jge add add mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop fs je jg mov test ret enter fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb add scas mov mov (bad) in out repz incb or sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne out lock add and inc inc dec dec push pop pop imul mov sahf mov mov fcomp loop in repnz add or push sbb sub ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or sub dec dec push push pop bound jno jl xchg add (bad) aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop imul mov lods mov add rcl fucom out repnz add or push sbb and sub aaa cmp inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop arpl jb jge xchg cmpsl lods mov mov add add (bad) lret rcl fneni(8087 out lock cli add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs jne jg mov test ret leave add into rcr fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc sbb cmp push add push orl cmpsl lods mov mov add add fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fiadd add add call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in add cmc cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov movsb test ret enter fucom call add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz add stc incb or adc sbb cmp push pop bound jno jl xchg stos mov mov (bad) fneni(8087 out lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add add push or push sbb sub xor push push pop pusha gs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov rol iret add fneni(8087 in lock cli incl add add adc pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb sub cmp dec push push pop pusha gs je jg mov test ret enter fucom call add or pop sbb daa sub cmp dec push push pop pusha imul jg mov test ret enter fsubp call add or add daa sub inc dec push push pop popa imul addb movsl stos mov mov aam (bad) ljmp add adc das xor aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out repnz add or push sbb sub add add cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp jmp add or sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aad (bad) ljmp unpcklps push and xor add ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or pop sbb es cmp add add pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec add imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or daa sub inc dec push push pop add imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jl add mov mov (bad) fsub out lock add or adc xor dec push pop pop add add add add add je jle mov test ret enter fucom out repnz add or pop sbb es ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa insb jno jbe addl mov rol iret aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop imul orl test mov mov rcr fucom call add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jb jl xchg add stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop imul mov sahf mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz add add push adc push and xor cmp push pop bound jb jl xchg add add mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop popa insb jno jl xchg stos mov add aad loopne ljmp unpcklps pop and cs cmp inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov aam fsubp jmp add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov add add xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul jl xchg lods mov mov (bad) add fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop add out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jl xchg lods add int xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret enter fsubp call add add or daa sub inc dec push push pop popa imul addb movsl stos mov mov aam (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock sti add add or adc das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call incb or adc push and sub inc dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb add add and inc inc dec dec push pop pop fs je jg mov test ret enter fucom out repnz add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and add dec dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpckhps pop and sub xor dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb daa sub add cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and aas add push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop fs je jg mov test mov mov fcomp loop in repnz add or pop sbb es aaa cmp inc dec add pop popa add jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add or adc das xor dec push pop pop imul mov scas mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul jg mov test (bad) leave into aam fsubp call add or daa sub inc dec push push pop bound insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge xchg mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pusha gs add jp test movsb test ret enter fucom call add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor cmp push pop bound jb add add xchg lods mov mov (bad) fneni(8087 out lock add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg add add movsb stos scas mov mov flds (bad) jmp add push adc push and sub dec dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jle mov add add lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb mov mov aad (bad) jmp add push adc push and sub dec dec push push pop bound jb jl xchg lods mov mov aad loopne ljmp unpcklps sbb and aas inc dec dec push pop pop imul mov add ret enter fucom out repnz add or pop sbb es ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push pop popa insb jno jnp xchg movsl stos mov mov rol rcl fnop in out cmc cli incl unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov add add enter fucom out repnz add or push sbb sub cmp dec push add popa imul addb movsl stos scas mov rol iret aad (bad) ljmp push adc push and xor cmp pop pop bound jb jl xchg stos mov mov lret rcl fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov add add fucom out repnz add or pop sbb es cmp dec push push pop pusha imul jg mov test (bad) leave into rcr fsubp jmp add push adc sbb cmp push pop popa insb jno jl xchg mov mov (bad) fildl add add out icebp idiv add and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call out repz std add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov aad loopne ljmp add add pop and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov rcr fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb add add or adc push and xor cmp push pop bound jb jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or add adc sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom call add or pop sbb aaa cmp inc dec push push pop orl scas mov mov (bad) in out hlt cli add and xor aas inc dec push add add push xchg lods mov mov aad (bad) ljmp or adc das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and cs ds dec dec push pop pop arpl add add jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl add jb jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add pop add sub xor dec push pop pop imul add jns test mov mov xlat fucom out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov scas mov mov xlat fucom out icebp idiv add or push sbb sub xor dec push pop pop fs je jle add test mov mov fcomp loop in repnz add or push sbb sub xor push push pop pop fs je jle mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop fs je jle mov mov scas mov mov fcomp loop in repnz add or push sbb sub cmp dec push push add imul addb movsl stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa imul addb add mov mov aam (bad) jmp add push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov add mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out hlt stc incb or adc sbb cmp push pop bound jno jl xchg cmpsl add add int3 rcl fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsb stos scas mov add aam (bad) jmp add push adc push and sub dec dec push push pop bound jno jl xchg stos mov mov aad loopne jmp cmc cli add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add add int3 rcl fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jle mov test mov mov aam fsubp jmp add push adc sbb cmp push pop popa insb jno jl xchg cmpsb stos mov mov add aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock add or adc das xor dec push pop pop imul mov lods mov mov xlat add add loop in icebp idiv add or pop sbb es cmp dec push push pop pusha imul jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in add jmp add add adc pop and das xor aas inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom call repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add add add add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb es cmp add pop popa imul addb movsl stos mov mov aam (bad) jmp add add or adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or add add sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop add cs ds dec dec push pop pop arpl jae jge add mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb add inc dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and add add add cmp inc dec dec push pop pop fs je jg mov test ret enter fucom call add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov aad loopne ljmp unpcklps pop and cs add add inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub ss inc dec add add pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock cli add pop and das xor aas inc dec dec push pop add add imul lea lods mov mov xlat fsub out icebp idiv add pop or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound add push (bad) xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa imul addb movsl stos scas mov rol iret aad (bad) ljmp push adc push and xor add inc dec dec push pop pop arpl jae add mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb add add add movsl stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fsub out icebp idiv add or adc das xor dec push pop pop imul mov add cwtl popf mov mov fcomp loop in repnz add or pop sbb sub cmp dec push push pop pusha gs jne jnp xchg movsl stos scas mov mov (bad) in out hlt stc incb push adc push and sub dec dec push pop pop bound jb jl xchg add add mov aad loopne jmp cmc cli add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov add lods mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas add add rcl fnop in lock cli add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test add ret leave into rcr fucom call add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov add add (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov scas mov mov xlat fucom out add clc std add or sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad add add add (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop out repnz add or push sbb sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp add cmc cli incl unpcklps pop and add xor dec push pop pop imul mov scas mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add or adc das xor dec push pop pop imul mov scas mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha add jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb add and sub xor push push pop pop gs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol iret aad (bad) ljmp push adc push and add xor ds dec dec push pop pop bound jb jge mov add ret rcl fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz std add or daa sub add cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas add inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) add ljmp push adc push and xor ds dec add dec push pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push add pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop add imul mov scas mov mov fcomp loop in repnz add or pop sbb and sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop arpl add jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul add addb movsl stos scas mov mov (bad) in out hlt stc incl push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp adc das xor aas inc dec dec push pop add push je jg add add mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jge xchg xchg pushf mov mov aad loopne jmp cmc cli incl pop and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov add add ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb mov mov aad loopne ljmp unpcklps pop and aas inc dec dec push pop pop imul mov add lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz std add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor push push pop pop gs je jg mov test ret add add into roll (bad) jecxz out repz incb or sub dec dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add (bad) fsub out icebp idiv add or adc xor push push pop pop gs je jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop popa imul addb movsl stos mov mov aam add (bad) jmp add push adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add sbb and inc inc dec dec push pop pusha gs jne jg mov test ret enter fucom add in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) ljmp push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add idiv add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec add pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add add adc sbb sub xor push push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) ljmp unpcklps add push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul add stos scas mov mov (bad) in out repz incb or and sub inc dec push push pop popa insb jno jl xchg lods mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and add xor dec push pop pop imul mov scas mov mov fcomp jecxz in repnz add or pop sbb daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor add cmp push pop bound jb jl xchg stos mov mov rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fsubp call add or daa sub add push push pop popa imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add and aas inc dec dec add add imul mov lods mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp jmp add or adc push and xor ds dec dec push pop add add push (bad) xchg lods mov mov (bad) fneni(8087 in lock sti add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out icebp idiv add or push sbb sub cmp dec push push pop pusha add add push jne jg mov stos scas mov mov (bad) jecxz out repz incb or adc sbb cmp push pop bound jno jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor ds dec dec push pop pop arpl jae add orl test mov mov xlat fsub out icebp idiv add or push sbb sub cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop bound jb jge add pushf mov mov (bad) fneni(8087 in lock cli incl pop and aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov (bad) xchg cltd sahf movsb test ret enter fucom call add or daa sub inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jge orl add mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp push pop popa data16 jno jnp xchg add add rol iret aam (bad) jmp add push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop imul mov scas add add int xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov add (bad) aad (bad) ljmp push adc push and xor cmp pop pop arpl jb jge xchg lods mov add fndisi(8087 out lock add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov add leave into rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fiaddl add add in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add add push or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov (bad) add loop in icebp idiv add or push sbb add sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push add sbb and xor cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb add sub cmp dec push push pop pusha gs je jg mov test ret enter fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push add pop and add das xor ds dec dec push pop add imul mov scas mov mov xlat fucom call add or pop sbb daa sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out hlt stc incb or adc sbb add add cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor add inc inc dec dec push pop pop fs je jg mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc add push pop popa insb jno jl xchg cmpsl lods mov mov (bad) fndisi(8087 out lock sti add or adc xor add inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg xchg movsl stos mov mov rcl fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or adc xor push push pop pop add gs je jg mov test ret enter fucom call add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp pop pop bound add jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov lods mov add fcomp jecxz in repnz std add or adc sbb cmp pop pop bound jb add ja (bad) xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop gs je jg add test movsb test ret enter fucom call add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub inc dec push push pop bound jb jl xchg add stos mov mov aad loopne ljmp or adc das xor dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) jecxz out repz std add or sub inc dec push push pop popa imul addl add mov mov aam (bad) jmp add push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae jle mov mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret leave into rcr fsubp call add or daa add inc dec push push pop bound jb js (bad) mov add add ret rcl fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul lea lods mov mov add enter fucom out repnz add or push sbb sub cmp dec push push pop pusha add jo jnp test movsl stos add lret rcl fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov add int xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov add aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae jle mov mov mov fadds fucom add out repz incb or adc sbb aaa cmp push pop popa insb jno jl xchg movsl stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 add add in icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor cmp pop pop bound jb jl xchg lods mov mov add fsub out icebp idiv add or push sbb and sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz stc incb push adc push and sub dec dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add add or push sbb sub cmp dec push push pop pusha gs je jg mov test ret enter fucom call add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add add unpcklps pop and das xor aas inc dec dec push add fs je jg mov test ret enter fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc add push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb add add inc inc dec push push pop pusha gs je jg mov test ret enter fucom call add or daa sub aaa cmp add push pop pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and add add xor push push pop pop gs je jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or sub aaa cmp push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add and aas add push pop pop imul mov test les lret fcmovu in out hlt stc incb push adc push and xor cmp push pop bound jb jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock sti add pop and das xor aas inc add dec dec push pop pop arpl je jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop fs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push add add popa imul addl mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jl xchg cmpsl lods mov mov rcl fsub out icebp idiv add pop or pop sbb es cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound add push (bad) xchg lods mov mov (bad) fndisi(8087 out icebp idiv add and aas inc dec dec push pop pop imul lea lods mov mov xlat fucom out icebp idiv add or push sbb sub xor push push pop pop gs add je jg mov test (bad) leave into rcr fsubp call incb push adc push and sub inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je add jns test mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and sub dec dec push pop pop bound jb jl add xchg stos mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or push sbb add sub aaa cmp inc dec push push pop popa imul ja addl add add stos mov mov (bad) fneni(8087 in lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov add cltd sahf movsb test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg add add cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and aas inc dec dec push pop add push jne jg mov add (bad) aam (bad) jmp add unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add or push sbb and inc inc dec dec push pop pop fs je jg mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov aam fsubp jmp add push adc push and sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jle mov mov mov rcr fldl jecxz out repz incb or sub inc dec push push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add add rcl fsub out icebp idiv add or adc xor push push pop pop gs je jg mov test ret enter fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam add (bad) jmp add push adc push and sub dec dec push pop pop bound jb jl xchg stos mov mov rcl fsub out icebp idiv add or push add es cmp dec push push pop popa imul addb movsl stos scas mov mov flds add add in out hlt stc incb push adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and aas inc dec push push pop pop gs jne jg mov test ret leave into rcr fsubp call add in repz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and xor cmp pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add sbb sub cmp dec push add popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add add add and aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or add push adc sbb cmp push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock cli incl pop and das xor aas add dec push pop pop imul add stos scas mov mov (bad) jecxz out repz std add or add pop sbb aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add add add add add and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add or sub sub inc dec push push pop popa data16 jno add xchg lods mov mov rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add or sub add aaa cmp push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and add dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub cmp dec push push pop pusha imul addb movsb stos scas add rcl fnop in out cmc cli add add pop and aas add add push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp jmp add or daa sub inc dec add push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov xlat fucom out in repz incb or sub inc dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock sti add pop and aas inc dec dec push pop pop add outsb jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul add jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add and sub cmp dec push push pop pusha gs jo jbe addb movsl stos scas mov mov (bad) in out repz incb or adc push and xor cmp push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and aas inc dec dec push pop pop imul add orl test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs je jg mov test ret enter fucom call add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb add add stos scas mov mov (bad) in out hlt stc incb or adc sbb cmp pop add push orl add ret enter fucom out repnz add or pop sbb daa sub cmp dec push push pop popa imul addb add xchg lcall mov (bad) in out repz incb or sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov add mov (bad) fsub out icebp idiv add or adc xor dec push pop pop gs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg mov add lods mov mov (bad) fildl loope in icebp idiv add or push sbb sub xor push push pop pop gs jne jg mov test ret leave into rcr fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov add add iret aad (bad) ljmp push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov add ret rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov aad (bad) ljmp push adc sbb and das xor ds dec dec push pop pop arpl jae jge mov test mov mov add int xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov add add add fcmovu in out hlt stc incl push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov scas mov mov fcomp add add out repnz add or daa sub inc dec add pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock sti add pop and das xor aas inc dec dec push pop pop imul lea lods mov mov xlat fucom add out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave iret aam fsubp jmp add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp cmc cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and add dec push push pop pusha imul addb mov mov aad loopne ljmp cli incl unpcklps pop and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov test ret enter fsubp call add add pop or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne jmp cmc cli add add adc das xor aas inc dec dec push pop pop arpl jae jns test mov mov aam fsubp jmp add push adc push and xor cmp pop pop bound jb jl xchg stos mov int fnclex jmp or sbb sub cmp inc dec push pop popa imul lcall int3 rcr loope out idiv add sub aaa ds dec push push pop pusha gs jbe addb movsl stos scas mov ret cmc sti add adc and das ss bound js xchg mov ret into aad in repz add adc add pop es mov (bad) int fcmovu in out hlt stc incb push adc push and add xor ds dec dec push pop pop bound jb jge xchg stos mov mov aad loopne ljmp sbb inc dec push adc and das xor ds dec dec push pop pop fs add outsl je jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa data16 jno jnp add add fwait mov mov aam (bad) jmp add push adc pop es push push pop imul xchg mov mov (bad) in hlt cli add adc pop sub cmp push pop pusha outsb jne test scas mov mov jp mov add lods mov (bad) iret fabs jmp sti add adc and xor inc dec push pop pusha push nop xchg lahf test rcl fsubp in idiv add int3 fninit jmp stc or and lock leave rcl loopne out idiv add unpcklps pop and xor ds dec push pop pop insl jne test stos mov mov rcl fcmovu in lock add sub push pop bound jns mov mov (bad) out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov stos mov mov loope lock add movhps es push pop add add jl mov ror jmp sbb sub cmp push pop pop outsl ja xchg mov loop lock add adc pop es cmp fs add test mov loope icebp clc add movhps daa cs outsl jbe test add (bad) out cmc std add adc and xor inc dec dec push pop insw jne test mov ror xlat (bad) out idiv add sub cmp push pop pusha outsb jbe test mov (bad) out cmc cld add adc and xor inc dec push push pop data16 jne test stos mov ret xlat fsubp in hlt sti add adc and xor inc dec push push pop data16 jne test mov fcomip add movhps es push pop bound js xchg mov (bad) int3 aam jecxz repnz add adc pop es push pop bound jns mov add scas mov (bad) int3 rcr jecxz repnz add movhps es dec push pop imul mov mov (bad) lret rcr loop icebp clc add movhps es push pop bound js xchg mov (bad) int3 rcr loop icebp stc add movhps and dec push pop data16 jbe test pushf mov leave rcr loopne out idiv add sub cmp push pop pusha outsl jbe test mov ror xlat fsubp in hlt sti add adc sbb aas inc dec push pop pusha outsb je (bad) mov mov ror (bad) fsubp in cmc cld add adc and xor inc dec push pop pusha push add add xchg mov (bad) lret rcr loop repnz add adc pop daa cs dec push pop fs jae (bad) mov mov fucom out idiv add sub cmp push pop popa push mov mov (bad) into (bad) fucom in hlt sti add adc and xor inc dec push push pop data16 add insl jne test mov (bad) out idiv push or xor inc dec push pop popa imul mov (bad) iret xlat fsubp out cmc std add sub cmp push pop pusha push (bad) xchg sahf cmpsb scas mov ret lret rcr loopne in hlt cli add movhps inc dec dec push add add insb jae orl lret jecxz icebp clc incl or das ss dec push pop gs jne orl mov jecxz repnz add movhps es lods mov ret fchs call or xor inc dec push push pop outsb jne test add add mov jecxz repnz add adc pop es pop popa imul icebp stc add adc push es push pop popa push lea ret fcomp out cmc std add adc and jne test scas mov (bad) lret rcr add loop sti add adc and xor inc dec push pop arpl js xchg mov ret fcomp out negb sub inc dec push pop mov ss dec push pop bound jbe test insb jno jl xchg sbb sub xor cmp push pop bound jb jl xchg pushf mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov (bad) fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop add je jle mov add add mov fcomp out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add es dec push pop arpl js xchg scas mov ret lret fild out cmc sti add pop and das xor pop bound js xchg mov ror xlat (bad) in cmc std add adc and xor inc dec dec push pop data16 jne test mov ror aam loop lock add push push sbb inc dec push pop fs je orl add fninit ljmp push and xor cmp popa push xchg lods mov vpmullw fsubp out idiv push push push pop daa das aaa aas inc dec push pop gs je test mov (bad) fneni(8087 in lock add sub cmp inc dec push pop gs adcl fsub call push adc cmp push pop pusha outsl jbe test mov (bad) int3 rcr jecxz repz add adc and xor inc dec outsb jne test mov fsubp in cmc cld add adc and xor pop insw jne test add add (bad) ljmp sub cmp push pop pusha push (bad) xchg lahf cmpsb scas mov (bad) fsub ljmp and xor aas inc dec push pop imul mov mov vpmullw in repz add adc and das aaa ds dec push pop fs jae (bad) mov add mov (bad) fnclex ljmp pop daa das ss dec push pop arpl js test lods mov rol aad in cmc cld add adc and xor inc dec push pop pusha outsl jbe test mov loope lock push push adc pop bound jns mov mov mov out idiv add adc and xor inc dec push push pop outsl jbe test mov ret fchs call push push push es pop imul mov mov (bad) lret rcr loope lock add adc and xor inc inc dec push pop imul mov scas mov (bad) lret rcr loop icebp clc incl or xor inc dec dec push pop gs jae addb mov ror xlat fsubp in hlt cld add sbb sub cmp push pop pusha push xchg sahf movsb lods mov ret lret loopne out idiv add adc and xor inc dec push pop pop insw je test add add add vpaddq jecxz icebp clc add push adc inc dec push pop pusha push lea ror (bad) fucom in hlt cld add adc and das aaa aas inc dec push pop arpl jns mov mov mov loop repnz add push adc cmp push pop pop data16 jne add add add test scas mov (bad) int3 rcr loope out idiv add sub aaa aas inc dec push pop arpl js xchg mov rol aad jecxz repnz add movhps inc dec push pop pusha outsl jbe test mov (bad) out hlt sti add adc and xor aas inc dec push pusha outsb je addl (bad) lret rcr loopne lock push or xor aas inc dec push pop arpl jns mov mov fsubp in hlt cld add adc xor push pop popa outsl jbe test mov mov loopne out idiv add add and xor inc dec push pop pusha outsl jbe test scas mov (bad) fnclex jmp push adc cmp dec push pop gs jae orl lret rcr loope lock incl push adc ss dec push pop imul mov mov fucomp icebp stc add or sbb daa cs dec push push pop imul mov mov ret lret rcr loope out cmc std add adc and xor aas inc dec push pop arpl jp lea mov fucom in hlt sti add adc and das ss popa orl (bad) leave into aam fsubp jmp add add incb unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret (bad) fucom jmp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 in lock cli incl unpcklps pop and xor ds dec dec push pop pop bound jno jl xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into rcr fucom call add or add pop sbb daa sub ss pop bound jb jle lea jg mov mov loope icebp idiv add or push sbb daa sub aaa cmp dec dec push pop arpl js orl test mov mov xlat fsub out icebp idiv add or push sbb and xor push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and xor add inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop fs je jg mov test push add insl jne test mov pusha outsb jne adcl popf movsl lods mov (bad) iret fabs call movhps es dec push pop fs jae orl mov fsubp in cmc cld add adc daa xor inc dec push fs je mov mov loopne out cmc std or and xor inc dec push pop popa imul mov add add into (bad) fsubp in cmc std add adc and xor mov in out hlt cli incl sub aas inc dec push pop data16 jne test mov ret lret aam jecxz repz add adc pop es push jne jg mov stos scas mov mov (bad) in out repz incb add or adc push and xor ds dec push pop outsb jbe xchg mov (bad) lret rcr add jmp cli add adc push and bound jns mov mov (bad) out cmc std add xor inc dec push pop arpl jnp mov mov loop icebp stc add adc and sub cmp push pop pusha push mov mov (bad) lret rcr (bad) in hlt sti add movhps inc dec dec push pop data16 jae orl int fsub jmp cli add andnps jns xchg mov ror xlat (bad) out cmc cld add adc and xor inc add inc dec push pop insw jns mov mov js xchg mov (bad) lret rcr loope cld add adc and inc inc dec push push pop bound jb jl mov cmpsl lods mov mov (bad) fndisi(8087 out lock add and inc dec push pop outsb jbe xchg xchg popf movsl lods mov vpmullw in hlt cld add adc and xor inc inc dec push pop imul addb movsb stos scas mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop add jne jg mov lods mov ret fsub out testb std add or pop sbb ss inc dec push push pop pusha imul jg mov test ret enter fucom out repnz add adc and xor inc dec push pop pop outsl ja xchg mov vpmullw in hlt cld add adc and xor cmp dec push push pop pusha add add add jne jg mov test ret enter fucom call add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha gs add add jg mov test ret enter fucom call add adc sub cmp dec push push pop pop gs je jg mov test ret enter fucom call add or pop sbb sub cmp dec push push pop pusha gs jne add add mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov rol (bad) fsub jmp movhps cmp inc dec dec push pop pop imul mov add scas mov mov fcmovu in repz incl or push and inc inc dec push push pop bound jb jl xchg stos mov mov xlat fsub call or sub cmp dec push push pop popa insb jno jg mov scas mov mov fninit ljmp add repz pop outsb jne test mov loopne out idiv add jne test mov in cmc std add sub push pop data16 jbe xchg jmp cli add adc and xor popa outsb jne test scas mov (bad) iret xlat fsubp in repz add adc and das aaa ds dec push pop arpl jp mov mov ret fabs jmp or xor inc inc dec push pop gs je orl mov fsubp out cmc std add adc and das aaa ds dec push pop bound js xchg mov ret lret add rcr loopne jmp cmc sti add or push sbb sub ss dec push pop pusha outsb je orl mov (bad) iret xlat fsubp in hlt add add sub cmp push pop pusha push mov mov std add adc and xor inc dec dec push pop out (bad) iret xlat fucomip lock add add add sbb sub cmp push pop arpl jnp mov ror fsub jmp dec pop bound jns mov mov (bad) into aad in hlt cld add adc and dec push pop arpl jnp mov mov (bad) into (bad) fucom jmp cli add movhps inc dec push pop pusha outsl jbe test mov ror fcomp out cmc std add adc and xor inc dec push push pop data16 jne test scas mov ret lret (bad) in repz add adc and xor ds dec push pop bound js test mov mov fcomp loop in icebp idiv add or add pop sbb sub xor push push pop pop gs je jg mov test mov mov (bad) fneni(8087 out cmc cld das cmp xor inc push pusha push mov pop addr16 mov mov stos rcr in stc add adc and xor inc dec push add add push jnp mov mov out idiv pop movhps daa das ss arpl jns xchg test mov mov fcomp loop in repz add adc and xor ds dec push pop imul mov mov (bad) lret rcr loop icebp stc add movhps add add xor cmp dec push pop insw jne orl mov rol rcl fnop in out cmc cli incl pop and das xor ds dec dec push pop pop arpl add test movsb test into rcr fsubp call add or daa sub cmp push pop pop bound add push test scas mov mov fcomp in repz add movhps es pop bound jno jl xchg lods mov ret fchs call push adc cmp push push pop pusha imul mov mov ret lret fsub out icebp add clc add movhps inc dec pop bound jb jg lea lock add adc and xor inc dec dec push pop insw jne test scas mov (bad) int3 aam jecxz repz add movhps es pop pop outsw jbe test mov ret lret rcr loop lock add add sbb sub cmp push push pop outsb jbe test mov (bad) rcr jecxz repnz add adc pop es pop popa insb je orl mov (bad) int3 rcr in repz add adc pop es arpl jns mov xchg sahf movsl lods mov ret lret loope out idiv or add add sbb sub cmp inc dec push pop fs je orl mov fucom in hlt cld add adc and xor aas inc dec push pop gs jae (bad) mov mov (bad) int fnclex jmp movhps inc dec push pop bound ja test mov ror xlat (bad) in repz add add adc and das ss pop pusha outsb jbe test mov ret (bad) fsubp jmp stc add adc push es push pop popa outsb jne test mov ret fcomp out cmc std or sbb sub cmp inc dec push pop gs jne orl mov (bad) jecxz add add cli add movhps inc dec push pop imul scas mov in testl and xor add push pop pusha outsl jbe test movsb stos scas mov mov fcmovu in out hlt stc incl unpcklps push and das xor ds dec dec push pop pop arpl jae jle mov add xchg cwtl popf mov mov fcomp jecxz in repz std add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret lret rcr loop lock add add or push push and xor ds dec pop bound jb jge xchg lods mov mov add add (bad) lret rcl fneni(8087 in out cmc cli incl unpckhps sub aaa ds dec push pop pusha insl jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test les lret fiaddl add add in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor dec push pop pop imul mov mov mov fcomp jecxz add add repz incb or adc push and sub dec dec push pop pop add je jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp add add incl unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add pop or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg movsl stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop arpl jb jge xchg mov mov (bad) jecxz out repz incb or add or sub inc dec push push pop popa insb jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push add add and sub cmp inc inc dec push push pop popa imul addl mov rol iret aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jl mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc and aas inc dec dec push pop pop imul mov mov mov add fsubp jmp add or daa sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge mov test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov test ret leave into rcr fucom call add or daa sub add aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add sbb and add dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad loopne ljmp unpcklps pop and cs ds dec add pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc add add pop popa data16 jno jnp xchg movsl stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push add add imul addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pop add push jne jg mov nop xchg lcall mov fcmovu in out cmc cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs add jg mov stos scas mov mov (bad) jecxz out hlt stc incb or adc push and sub dec dec push push pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop imul add add lahf movsl stos scas mov mov (bad) in out repz incb unpcklps push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov rcr fucom out repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg xchg fwait mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb add mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov test add leave into rcr fsubp call add or and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test add rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov add enter fucom out repz incb or sub inc dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec add gs je jg mov test ret enter rcr fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jae jge mov cmpsl lods mov mov xlat faddl add loope in icebp idiv add or push sbb sub xor push push pop pop gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 in add cmc cli add pop and das xor ds dec dec push pop pop arpl jae jle mov movsb test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp cli incl unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov aad (bad) ljmp push add push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret leave into rcr fucom call add or add add daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov rol iret aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and add xor dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or and sub dec dec push push pop bound jb jl xchg stos mov mov (bad) fneni(8087 out lock sti add pop and add cmp inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds add push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom call add or pop sbb es push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock add or adc xor dec push pop add pop imul mov test ret leave into rcr fsubp call add or sub inc dec push push pop popa data16 jno jl xchg movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound add push (bad) xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out icebp idiv add or pop sbb es ss inc dec push push pop pusha imul add addb movsb stos scas mov mov (bad) jecxz out repz std add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad fild in lock cli incl pop and das xor aas inc dec dec push pop pop arpl jae add add mov cmpsl lods mov mov (bad) fsub out icebp idiv add and inc inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es ss inc dec push push pop pusha imul addb add mov stos scas mov mov (bad) jecxz out repz incb or adc pop and cs aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc das xor dec push pop pop imul mov add cltd sahf mov mov xlat fucom out repnz add or push sbb and sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push pop pop bound jb jl xchg mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pusha gs jne jg mov test add add enter fucom call add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc sbb aaa cmp push add push (bad) mov cmpsl lods mov add rcl fsub out lock add and aas inc dec dec push pop pop fs je jg mov test mov mov fcomp loop in repnz add or pop sbb sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov add leave iret aam fsubp jmp add push adc sbb cmp push pop bound jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret leave into add rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat add loope in icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in add jmp add push adc sbb aaa cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov add fucom out add add idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp add add add push adc push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add add sub inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp push add das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or add add add sbb sub xor dec push pop pop gs je jg mov test ret enter fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incl push adc push add add add sub xor cmp push pop bound jb jl xchg stos mov mov aad loopne jmp cmc sti add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor add pop pusha imul addb movsl stos scas mov mov (bad) jecxz out hlt stc incb or adc push and sub dec dec push push pop idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret leave add rcr fsubp call add or daa sub aaa ds dec push push pop insw je (bad) mov mov (bad) lret rcl fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp add incb push adc sbb aaa cmp inc dec push push pop popa imul addb movsb test (bad) leave into rcr fsubp call add or pop sbb es cmp dec push push pop pop gs je jg mov test mov mov xlat fucom out icebp idiv add add add or push sbb and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop bound jb js orl cmpsl lods mov mov (bad) fndisi(8087 out lock sti add add unpckhps pop and das xor ds dec dec push pop pop arpl jb jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop pusha imul jg mov test ret rcr fucom out icebp idiv add or add push sbb and aas inc dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp push adc sbb aaa cmp push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repz std add or add sbb es cmp dec push push pop pop gs je jg mov movsb test ret enter fucom call add or pop sbb daa sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or push add add and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock add pop add and das xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov aam (bad) jmp add push adc push and add sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repnz std add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom out icebp idiv add or push sbb sub add cmp dec dec push pop pop imul mov lods mov mov (bad) fsub out lock sti add or adc das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov aad loopne ljmp unpcklps pop and xor add cmp inc dec dec push pop pop bound jb jl xchg stos mov mov aam fsubp jmp add unpcklps push and xor ds dec dec push push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add or sub cmp inc dec push pop arpl je jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock cli add and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov fsub out icebp idiv add or adc xor dec push pop pop imul lea mov mov fcomp jecxz in repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out lock add pop and das xor aas inc add push pop add add imul lea lods mov mov (bad) fneni(8087 out lock cli incl pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub cmp dec push push pop pusha imul jg mov test ret enter fucom out repnz add or push sbb sub xor push push pop pop fs outsl je jle mov test mov mov xlat fsub out icebp idiv add pop and ds dec dec push pop pop arpl jae jns test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop imul add add jle mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp pop pop bound jb jl xchg stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz in repz std add or pop sbb sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul add orl add ret rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov (bad) fndisi(8087 out lock sti add pop and cs ds dec dec push pop pop bound jb jge xchg lods mov mov aad loopne ljmp push adc push and sub dec dec push push pop popa insb jno jl xchg add stos mov mov aam (bad) jmp add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov add (bad) jmp add or daa sub inc dec push push pop popa imul addb xchg lcall mov (bad) jecxz in repz std add or daa sub cmp dec push push pop pusha gs je jg mov test ret enter fucom out repnz add or push sbb and aas inc dec dec push pop pop imul mov add add mov rcl fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push push pop bound jno jl xchg add add rol iret aad (bad) jmp add or adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsl add stos scas mov mov (bad) jecxz out repz std add or daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul lea lods add int3 rcl fsub out icebp idiv add pop and das xor ds dec dec push pop pop arpl jb jl xchg lods mov mov aad loopne ljmp push adc push and sub inc dec dec push pop pop bound jb jl xchg lods mov mov rol rcl fnop in out hlt stc incl push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha gs jne jg mov test add mov fcomp loop in repnz add or push sbb sub xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov add add lret rcl fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound push (bad) mov cmpsl lods mov mov (bad) fneni(8087 out lock cli incl pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov lret fcmovu in out hlt stc incb or adc sbb aaa cmp inc dec push push pop popa imul addb movsb test ret leave into rcr fsubp call add or pop sbb sub cmp dec push push pop pop fs je jle mov test mov mov add add add add xlat fsub out icebp idiv add or adc xor dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock cli add pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov flds add fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub add add in icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 out icebp idiv add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) jmp out hlt cli incl push adc push and xor cmp push pop popa insb jno jnp xchg movsl stos scas mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add add stc incb or daa sub inc dec push push pop popa imul addb movsb test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom out icebp testl add cld add or push sbb sub cmp dec dec push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add push or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 out lock cli add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in out cmc cli incl add or adc das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add or add sbb aaa cmp inc dec push push pop popa imul addb movsb test (bad) leave into rcr fucom call add or pop sbb daa sub xor cmp push pop popa imul addb movsl stos scas mov mov fcomp jecxz in repz std add or add sbb daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add add pop and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp push adc push and add sub dec dec push push pop add insl jae jge xchg lods mov mov aad (bad) ljmp push adc push and sub dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add push adc sbb add inc dec push push pop popa insb jno jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb cmp pop pop bound jb jl xchg stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa data16 jno jnp test movsl stos scas mov mov fcomp jecxz in repz std add or daa sub cmp dec push push pop pusha imul jg mov movsl stos scas mov mov (bad) jecxz out repz std add or daa sub add cmp dec push push pop pusha imul jg mov test ret enter fucom out icebp idiv add or adc das xor aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 in lock cli incl push and xor add add add dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp push adc push and sub inc dec push push pop bound jno jl xchg stos mov mov aam (bad) jmp add or daa sub inc add add pop popa imul addb movsl stos scas mov mov aam (bad) jmp add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub ss inc dec add add pop pusha gs jne addb movsb test ret enter fucom call add or push sbb sub cmp dec push push pop pop fs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push add pop pop imul mov lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop bound jb jge xchg lods mov mov aad loopne ljmp or adc pop and cs ds dec dec push pop add add push (bad) xchg cmpsl lods mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound jno jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa add add add imul addb movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha imul jg mov stos scas mov mov fcomp jecxz in repnz std add or pop sbb sub cmp dec push push pop pusha gs add outsl je jg mov test ret enter fucom out repnz add adc push and add xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae add add xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl push and xor ds dec dec push push pop bound jno jl xchg movsl stos mov mov aad (bad) jmp add or daa sub inc dec push push pop pusha imul jg test mov mov fcomp loop in repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop add push je jg mov test mov mov fcomp loop in repnz add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fsub out lock add pop and das xor aas inc dec dec push pop pop arpl jb jge xchg add lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp push pop bound jno jl xchg movsl stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb add lcall mov (bad) jecxz out repz std add or daa sub cmp dec push push pop pusha gs jne jg mov nop xchg lcall mov (bad) jecxz out repz std add or daa sub cmp dec push push pop pusha gs jne jg mov add mov rcr fucom out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add pop and das xor ds dec dec push pop pop arpl jb jge xchg add rol rcl fneni(8087 in lock cli incl unpcklps push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp push pop popa imul addb movsb stos add (bad) aam (bad) jmp add push adc sbb aaa cmp push pop popa imul addb movsb stos scas mov mov fcomp jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha gs jne jg mov test add mov mov xlat fucom out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov (bad) fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock add pop and das xor ds dec dec push pop pop arpl jae jge xchg lods mov mov aad loopne ljmp or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add add add rol rcl fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov add add into aam fsubp call add push adc sbb aaa cmp inc dec push push pop popa imul addb movsb test ret enter fucom out repnz add or pop sbb es cmp dec push push pop pusha gs je jg mov test mov mov add add add xlat fsub out icebp idiv add or push sbb and sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov add (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad add in out hlt stc incb or adc sbb cmp push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz in repz std add or pop sbb daa sub ss inc dec add pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) add jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret enter fucom call add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out add in icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock add cmc sti add pop and das xor aas inc dec dec push pop pop arpl jae jge orl test mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock sti add pop and cs ds dec dec push pop pop arpl jae jge xchg lods mov mov aad loopne ljmp push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aam (bad) jmp add or daa sub inc dec push push pop popa imul addb movsb test ret enter fucom out repnz add or push sbb sub xor dec push pop pop gs je jle mov test add rcr fucom call add add or push sbb sub cmp dec dec push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 in lock cli incl add add adc pop and xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aam fsubp jmp add or add add sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) add jmp add push adc sbb aaa cmp push pop popa imul addl mov mov (bad) jecxz out repz std add or add add daa sub ss inc dec push push pop pusha gs jne addb movsb test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc add aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp push add add add das xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push pop pop bound jno jl xchg stos mov mov aad (bad) jmp add push adc sbb xor cmp push pop popa imul addb movsl stos scas mov mov (bad) in out repz std add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret leave into rcr fsubp call add or pop sbb sub add add add add add inc inc dec push push pop pop gs je jg mov test ret enter fucom out icebp idiv add or push sbb and inc add push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub xor add dec dec push pop popa push cwtl lahf movsl lods mov (bad) iret (bad) fucom in hlt std push movhps es ss dec push pop data16 ja xchg mov (bad) into (bad) fsubp in cmc std add adc and xor inc dec push pop popa imul sahf movsl lods mov ret lret loope out idiv add sub cmp inc dec push pop arpl jns mov mov loopne out cmc std add sbb sub cmp push pop popa add jnp mov mov in repz incb push adc push and xor ds dec dec push pop pop arpl jae jle mov stos scas mov mov flds add (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out jmp cmc sti add and aas inc dec dec push pop pop fs je jg mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov add fsub out add idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock cli add pop sub xor dec push pop pop fs je jle mov test mov mov xlat fsub out icebp testb add add or push sbb and aas inc dec dec push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add add push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom out repnz add or push sbb sub xor push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz incb or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std add or and sub aaa cmp inc dec dec push push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add and add das xor aas inc dec dec push pop pop arpl jae jge mov test mov mov (bad) fsub out icebp idiv add and aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb and add xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov test mov mov fsub ljmp unpcklps pop and cs add add push push pop pusha gs jne jg mov stos scas mov mov loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov mov mov aad loopne jmp idiv add or push sbb and aas inc dec dec push pop pop add add jae jle mov test mov mov (bad) fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out icebp idiv add or adc das xor dec push pop pop arpl add outsb jae jge mov cmpsl lods mov mov rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub call add or daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop imul add add add mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov (bad) fsub out lock add or adc das xor dec push pop pop arpl add add mov mov xlat fsub out icebp idiv add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom out repnz add or pop sbb sub cmp dec push push pop pop gs je jg mov add test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul lea add add mov mov (bad) fsub out lock add and aas inc dec dec push pop pop imul lea test mov mov xlat fucom out icebp idiv add or push sbb sub ss dec push push pop pop gs je jg mov test mov mov xlat fucom out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop fs je jg mov test add mov mov xlat fucom out icebp idiv add or push sbb sub xor push push pop pop gs jne test lods mov mov xlat fsub out icebp idiv add or push sbb es ss dec push pop pop bound jb jge xchg lods mov mov (bad) fsubp call add adc sbb cmp pop pop bound jae jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out add jmp idiv add or adc xor push push pop pop gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fneni(8087 in lock add incl pop and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds add push pop pop imul mov scas mov mov (bad) jecxz in repz std add or daa sub cmp dec push push pop pusha imul jg mov test (bad) leave into rcr fsubp call add or pop sbb es cmp dec push push pop pusha gs je jg mov test ret enter fucom out repnz add or push sbb sub xor push push pop pop fs je jle mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov scas mov mov xlat fsub out icebp idiv add or add add sbb and aas inc dec dec push pop pop imul mov test mov mov loope in icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb add and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub xor dec push pop pop fs je jle mov test mov mov xlat fucom out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov add fcomp jecxz in repnz std add or daa sub add cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or push sbb sub cmp add dec push push pop pop gs je jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or daa sub cmp add add push pop pusha gs jne jg mov test ret enter fucom out add stc incb or adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repz incb or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom out repnz add or push sbb sub xor dec push add imul mov lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop arpl jb jge xchg lods mov mov aad (bad) ljmp unpcklps push add das xor ds dec dec push pop add add add add push (bad) xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa imul add jo jnp test movsb test ret leave into rcr fucom call add or pop sbb daa sub ss inc dec push add popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop popa data16 jno add add addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repz std add or daa sub aaa cmp inc dec push push pop pusha imul add add lcall mov fcomp jecxz in repnz std add or pop sbb es ss inc dec push push pop pusha imul jg mov test ret enter fucom call add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz in repz std add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsb test ret enter fucom call add or pop sbb es cmp dec push push pop pusha imul addb add add test ret enter fucom call add or push sbb sub xor push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop imul lea add add mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push pop pop bound jb jge xchg stos mov add fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov pushf mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp push adc push and xor cmp push pop bound jb jl xchg add add rol rcl fcmovu in out hlt stc incl push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jb jl xchg stos mov mov aad (bad) jmp incl unpcklps pop and xor ds dec dec push pop pop bound jb jge xchg lods mov mov aad loopne ljmp push adc push and xor cmp push pop popa insb jb jl xchg stos mov add iret aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addl mov add mov (bad) in out repz incb or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or and sub inc dec push push pop popa insb jno jnp xchg stos mov mov add (bad) aam (bad) jmp add push adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add or sub inc dec push push pop popa imul addb movsl stos scas mov mov add aam (bad) jmp add or sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push add popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov flds fsubp jmp add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb lods mov mov xlat fucom out add repnz add or pop sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne jmp cmc cli add and aas inc dec dec push pop pop fs je jg mov movsl stos scas mov mov fcmovu in out hlt cli add add add push adc push and xor cmp push pop bound jb jl xchg stos mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock sti add add add adc das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov aad loopne jmp cmc cli add pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne jmp cmc cli add add add pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov rcl fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock add add add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock sti add pop add das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop bound jb jge xchg lods mov mov aad loopne ljmp or adc sub xor dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov aad loopne ljmp unpcklps pop and add add add cmp inc dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add or sub add add add push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz incb or sub inc dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add push adc push and sub add inc inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop popa imul addb movsl stos scas mov mov fcomp jecxz in repz std add or pop sbb daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret enter fucom call add or pop sbb es ss inc dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha add jne addb movsb test ret leave into rcr fucom call add or pop sbb es ss inc dec push push pop pusha imul jg mov test ret leave into rcr fucom call add or pop sbb es ss inc dec push push add gs jne jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fucom out icebp idiv add or push sbb and aas inc dec push push pop pop add fs je jle mov test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha add add push jne jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop imul orl cmpsl lods mov mov rcl fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop fs je jg mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul orl test mov mov xlat fsub out icebp idiv add and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop arpl jae jle mov add lea lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl push or adc das xor dec push pop pop arpl jae jge mov add lods mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg pushf mov mov (bad) fneni(8087 in hlt cld add or daa sub ss inc dec push push pop pusha imul jg mov test (bad) leave into rcr fsubp call add or daa sub ss inc dec push push pop pusha gs jne jg mov stos scas mov mov fcomp jecxz in repnz std add or daa sub inc dec dec push pop pop arpl jb jge mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov ret rcl fsub out lock add pop and ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov add (bad) lret rcl fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound jb jl xchg mov mov fcomp jecxz in repnz std add or pop sbb es ss inc dec push push pop pusha gs jns add mov mov add add fcmovu in out hlt cli incl unpcklps pop and das xor inc dec push push pop pop gs je jg mov test mov mov xlat fucom out repnz add or push sbb sub xor dec push pop pop fs je jle mov test mov mov xlat fsub add out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 out icebp idiv add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp add lock cli incl pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov rcl fneni(8087 in lock cli add pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add cli incl push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add push adc sbb aaa cmp push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repnz std add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or pop sbb sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out add idiv add pop or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret rcl fucom out icebp idiv add or push sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock sti add and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov aad loopne ljmp sldt add pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc push add cs ds dec dec push pop pop bound jb jl xchg cmpsb stos mov mov aam (bad) jmp add or add sbb aaa cmp push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom out repnz add or push sbb and sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov lods mov mov (bad) fsub out icebp idiv add pop and add das xor dec add pop fs je jle mov test mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and add add xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp push adc push and sub dec dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add or daa sub add cmp inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov fcomp jecxz in repnz add or push sbb sub xor push push pop pop gs je jg test movsb test ret enter fucom out repnz add or push sbb sub add add inc inc dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add pop and add add inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli incl pop and xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp push adc push and sub inc add dec push push pop bound jno jl xchg movsl stos mov mov rol rcl fnop in out hlt cli incl push adc push and xor cmp push pop popa insb jno jl xchg stos mov mov aam (bad) jmp add or daa sub aaa cmp inc dec add push push pop pusha imul addb movsb stos scas mov mov fcomp jecxz in repnz std add or pop sbb sub cmp dec push push pop pop gs jne jg mov test ret enter fucom out repnz add or push sbb and inc inc dec dec push add imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jle mov test mov mov (bad) fsub add in icebp idiv add or push sbb and aas inc dec dec push pop add pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock cli add pop and cs ds dec dec push pop pop bound add add add jb jl xchg cmpsl lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb add jno jnp xchg cmpsb stos mov mov aad (bad) jmp add push adc sbb and xor ds dec dec push pop pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jno add jbe addl mov rol iret aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul add lcall mov fcomp jecxz in repnz std add or pop sbb es cmp dec push push pop pusha gs je jg mov test ret enter fucom out repnz add or push sbb sub xor dec push push pop pusha gs je jg add test mov mov fcomp loop in repnz add or push sbb sub xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge xchg add add cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jno jnp xchg add add add xchg fwait mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg add fwait mov mov aad (bad) jmp add push adc sbb aaa cmp push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incl unpckhps and inc inc dec push push pop pusha gs jne addb movsl stos add add lret fnop in lock cli incl pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop pop arpl jb jl xchg stos mov add fneni(8087 in lock add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad (bad) ljmp unpcklps push and xor cmp push pop bound jno jl xchg movsl stos mov mov add mov (bad) in out hlt stc incb or adc sbb aaa cmp inc dec push push pop popa imul addb movsb test ret leave into rcr fucom call add or daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out in repnz add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter add add aam (bad) jmp add push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz in repz std add or adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov add add (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret enter fucom call add or pop sbb sub cmp dec push push pop pusha gs je jg mov test mov mov xlat add loope in icebp idiv add or adc xor dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov aad loopne in out hlt cli incl unpcklps push and xor cmp inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) add ljmp push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add or daa sub aaa cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out add add clc std add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa data16 jl xchg movsl stos mov mov aam fsubp jmp add std add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub cmp dec push push pop pusha imul addb movsb test ret enter fucom call add pop or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub xor push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add add add adc sbb and aas inc dec dec push pop pop imul mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop fs je jg mov test mov mov xlat fsub out icebp idiv add or add adc das xor aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock cli add pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps add push and xor ds dec dec push pop pop bound jb jge xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jb jl xchg stos mov mov rcl fneni(8087 in out cmc cli incl unpcklps push and xor ds dec dec push pop pop bound jb jge xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jno jl xchg stos mov mov aad (bad) jmp add push adc sbb add add add add sub inc dec push push pop popa imul addl mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub add add cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub add aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp add dec push push pop pusha imul jg mov stos scas mov mov (bad) jecxz out repz std add or daa sub ss inc dec push push pop pusha imul jg mov test (bad) leave into rcr fsubp call add or pop sbb sub add cmp add add add inc dec push push pop arpl js (bad) mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push add gs je jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa add jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jno ja (bad) xchg lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl insl jb jge xchg cmpsl lods mov mov (bad) fsub out lock add and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul add add orl test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs je jg mov test ret enter fucom call add or daa sub ss inc dec push push pop pusha imul addb test movsb test mov fcmovu in out hlt cli incl unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg add mov lods mov mov (bad) fneni(8087 in lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add or push sbb and aas inc dec dec push pop pop imul mov add mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop fs je jle mov test mov mov xlat fucom add in repz std add or daa sub aaa cmp inc dec push push pop popa imul addb lahf movsl stos scas mov mov (bad) jecxz out repz incb or adc sbb cmp push pop popa insb jno jl xchg movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jno jl xchg movsl add (bad) aam (bad) jmp add push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov rol rcl fneni(8087 in lock cli incl unpcklps add and inc inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test add add fcomp loop in repnz add or push sbb sub ss inc dec push push pop pusha imul jg mov test ret enter fucom call add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov add add into aam fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push add bound jb jl xchg stos mov mov add rcl fcmovu in out hlt cli incl unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) add loopne jmp cmc cli add pop and das xor ds dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fsub out icebp idiv add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub add out icebp idiv add and aas inc dec dec push pop pop imul add test ret enter fucom call add or pop sbb sub cmp dec push push pop pusha imul addb movsb test ret enter fucom call add repnz add or pop sbb es cmp dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz add std add or daa sub aaa cmp inc dec push push pop popa imul addl mov mov (bad) in out repz incb or daa sub inc dec push push pop popa imul addl mov mov (bad) fneni(8087 in lock cli add add add unpcklps pop and cs ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add add adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov mov mov xlat fucom out repnz add or push sbb sub cmp dec dec push pop pop fs je jg mov test ret enter fucom out repnz adc sbb aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or add sbb aaa cmp push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc sbb add sub inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps push and add add xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jle mov test mov mov fcomp loop in repnz add or push sbb sub add add add inc inc dec push push pop pop gs je jg mov test ret leave into rcr fsubp call add or daa sub cmp dec push push pop pusha imul addb movsb test ret leave into aam fsubp call add or daa sub aaa cmp add push push pop pusha imul addb movsb stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa data16 ja addl mov rol rcl fneni(8087 in lock cli incl pop and das xor ds dec add add pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push add pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push push pop popa add add jo jnp test add rol rcl fcmovu in out hlt cli add pop and cs ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop arpl insl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jp test movsb test ret enter fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul xchg lods mov mov xlat fsub add in repnz add or push sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or pop sbb daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa imul addb xchg lcall mov (bad) jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsb test ret leave into rcr fucom call add or daa sub aaa cmp inc dec push push pop pusha imul addb add lahf movsb test ret enter fucom out repnz add or push add daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub cmp dec push push pop pusha gs jne jg mov add mov xlat fucom out icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov (bad) fneni(8087 in out cmc cli incl push adc push and sub dec dec push push pop bound jno jl xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub cmp dec push push pop pusha gs jne jg mov test ret rcl fsub out icebp idiv add or adc das xor aas inc add push pop pop fs je jle mov test add add (bad) int3 rcl fsub out icebp idiv add pop and das xor ds dec dec push pop pop arpl jae jge xchg stos mov mov aad (bad) ljmp push adc sbb aaa cmp push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repz std add or daa sub cmp dec push push pop pusha imul addb movsb test add add fcomp jecxz in repnz add or pop sbb es cmp dec push push pop pusha imul jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov add add leave into aam fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub ss inc dec push push pop pusha gs jne addb movsb test ret leave add add rcr fucom call add or pop sbb es cmp dec push push pop pop gs je jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov scas mov mov add add fcomp jecxz in repnz add or pop sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom out repnz add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat add fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub add out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fildl loope in icebp idiv add or adc das xor dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out add jmp idiv add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop bound jb jl xchg lods mov mov aad loopne ljmp cmc cli incl unpcklps push and xor cmp push pop bound jno jl xchg movsl stos mov mov aad (bad) jmp add push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp add incl lldt das xor dec push pop pop imul mov lods mov mov fcomp loop in repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add add add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl add unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp push adc push and xor cmp push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl adc pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound jb jl xchg movsl stos mov mov aam (bad) jmp add push adc add and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out hlt stc incb or adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov fucom jmp idiv add or push sbb and add add xor push push pop pusha gs jne jg xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or daa sub aaa add add inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp adc das xor dec push pop pop imul mov scas mov mov fcomp loop in repnz add or daa sub aaa cmp inc add add pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp unpckhps and aas inc dec dec push pop pop fs je jg mov test ret add iret aam (bad) jmp add push adc push and cs ds dec dec push add add arpl jae jge xchg cmpsl lods mov mov (bad) fsub out lock add or adc xor push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop bound insb jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs add add jg mov test ret leave into rcr fucom call add or adc push and sub dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor push push pop pusha gs jne add add mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jle mov lea lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop pop arpl jae jle mov cwtl popf mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsb stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop popa insb jno jl xchg add cmpsb lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos mov add add iret aam (bad) jmp add push adc push and xor cmp pop pop bound jb jl add mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov add add (bad) aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov add aam (bad) jmp add push adc push and xor cmp pop pop bound jb addb mov (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli add add add unpcklps pop and xor ds dec dec push pop pop bound jb jge xchg lods mov mov aad loopne jmp cmc cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg mov mov xlat fsub out icebp idiv add add add push or push sbb sub xor push push pop pop gs je jg mov test ret enter fucom call add or daa sub ss inc dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or add pop sbb aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or adc add sbb cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov aad (bad) ljmp unpcklps pop and xor ds dec dec push pop pop bound jb jge xchg stos mov mov aad loopne ljmp unpckhps pop add and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpckhps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add and add das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add push or push sbb es add cmp dec push push pop pusha gs je jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add or daa sub inc dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add or daa sub inc add dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz in repz std add or daa sub ss inc dec push push pop pusha imul jg mov test ret enter fucom out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov lods mov mov (bad) fsub out lock add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne ljmp push adc push and sub dec dec push pop add add add jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp pop pop bound jb jge xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop add imul addb movsl stos scas mov mov fcomp jecxz in repnz add or pop sbb sub cmp dec push push pop pusha gs je jg mov test ret enter fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop add add add add jae jle mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop arpl jb jl xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp push pop bound add jl xchg stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into rcr fucom call add or pop sbb sub cmp dec push push pop pop fs add add test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl push and xor ds dec dec push pop pop bound jb add mov stos mov mov rcl fneni(8087 in lock cli incl unpcklps push and xor cmp push pop bound jno jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov fcomp in repz add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov xchg cwtl popf mov mov (bad) fneni(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp or adc das xor ds dec dec push pop pop arpl jb jge xchg xchg pushf mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp push pop bound jno jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp push pop popa imul addb add add mov aam fsubp call add or daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul lea add add ret rcl fsub out icebp idiv add pop and cmp dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl add int3 rcl fneni(8087 out lock cli add pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp push adc push and xor cmp push pop popa insb jno jl xchg movsl stos scas mov rol iret aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) in out repz incb or daa sub aaa cmp inc dec push push pop add insb jno jl xchg movsl stos scas mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsb test (bad) leave iret aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test add ret enter fsubp call add or pop sbb es cmp dec push push pop pusha gs je jg mov test mov mov fcomp loop in repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov add rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea xchg cltd sahf mov mov xlat fucom call add or push sbb sub cmp dec push push pop pop fs je jg mov test mov mov add xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock add pop and ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov rcl fildl add in lock add pop and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne add out hlt cli incl unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add repz incb or adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incl unpcklps push and xor cmp pop pop bound jb jl xchg stos mov mov aam (bad) jmp add stc incb or adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa imul addb movsb test ret leave into rcr fucom call add or pop sbb daa sub cmp dec push push pop pusha imul jg mov test ret leave into rcr fucom call add or pop sbb daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom out icebp idiv add add add adc sbb and cmp dec push push pop pusha gs jne jg mov test ret enter fucom out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add add adc das xor dec push pop pop imul lea lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov aad (bad) ljmp push adc add add push and sub dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub dec dec push push add push (bad) xchg lods mov mov aad loopne ljmp push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc push and sub dec push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb and add add add xor dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock add pop and add add inc dec dec push pop pop imul lea test ret enter fucom out icebp idiv add or push sbb sub xor dec push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or adc das xor add inc dec dec push pop pop arpl je jle mov test mov mov (bad) fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound jno jl xchg stos mov mov rcl fneni(8087 in lock cli incl pop and xor ds dec dec add add add push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop add insl jb jl xchg lods mov mov aad loopne ljmp push adc push and xor cmp push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa add add jno jnp xchg movsl stos mov mov aam (bad) jmp add unpcklps push and xor cmp push pop bound jno jl xchg cmpsb stos mov mov aad (bad) jmp add push adc sbb aaa cmp push pop popa data16 add add add add jbe addb movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul add jne jg mov stos scas mov mov fcomp jecxz in repnz std add or pop sbb es cmp dec push push pop pusha gs je jg mov test mov mov fcomp loop in repnz add or push sbb sub add cmp inc dec push push pop pusha gs jne add add test movsb test ret leave into rcr fucom call add or pop sbb sub cmp dec push push pop pusha gs je jg mov test mov mov fcomp loop in repnz add or push sbb sub xor dec push pop pop imul add popf mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov add cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and cs ds dec dec push pop pop bound push (bad) mov cmpsl lods mov mov (bad) fndisi(8087 out lock cli add pop and das xor ds dec dec push pop pop bound jb jge xchg xchg xchg pushf mov mov (bad) fneni(8087 in out cmc cli incl unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp push adc push and sub inc dec push push pop popa data16 jno jnp xchg add mov mov (bad) in out repz std add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul lea add sahf mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound jno jl xchg add movsl stos scas mov mov (bad) in out hlt stc incb or daa sub inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test add scas mov mov fcomp loop in repnz std add or es cmp dec push push pop pusha gs jne jg mov test ret add into rcr fsubp call add or daa sub aaa cmp inc dec push push pop pusha gs jne jg mov test add add int xlat fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 in out cmc cli add pop and xor ds dec dec push pop pop bound jb jl xchg stos mov add mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsb test ret enter fucom out repnz add or pop sbb sub cmp dec push push pop pop fs je jle mov test mov mov ret rcl fsub out icebp add cld add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or pop sbb sub cmp dec push push pop pop gs je jg mov test mov mov add int xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add add (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp push adc push and sub xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add (bad) fndisi(8087 out lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub dec dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) add add out repz incb or daa sub inc dec push push add insb jb jl xchg stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz add add add add repz std add or daa sub ss inc dec push push pop popa imul addb movsb test (bad) leave into rcr fsubp call add or es cmp dec push push pop pusha imul jg mov test ret enter fucom call idiv add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop gs je jg mov (bad) xchg lcall mov fcomp jecxz in repnz std add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop gs je jle mov test mov mov xlat fsub out icebp idiv add add add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add pop and ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add unpcklps pop and cs ds dec dec push pop pop bound jb jge xchg lods mov mov rcl fndisi(8087 out lock add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl add add pop and cs ds dec dec push pop pusha push test movsb stos scas mov mov fcomp jecxz in repz std add or daa sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz std add or add sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc sbb cmp push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) ljmp or adc pop and add xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and das xor add cmp inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or adc xor inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb and cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc add add push pop pusha imul addb movsb test (bad) leave into aam fsubp jmp add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc sbb cmp add add popa insb jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop add arpl outsb jae jle mov test mov mov xlat fucom out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom call add or pop sbb daa sub cmp dec push push pop pusha add add push jne jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or sub inc dec push push pop popa data16 jno add add addb movsl stos mov mov aam (bad) ljmp push adc push and xor cmp push pop bound jb jl xchg cmpsl lods mov mov (bad) fneni(8087 out icebp idiv add or adc das xor dec push pop pop imul orl test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov test mov mov xlat fucom out repnz add or sbb sub cmp inc dec push pop pusha insw je orl add lods mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jne test movsb test ret enter fucom call add or pop sbb sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov lods mov mov add fucom out icebp idiv add or push sbb sub xor push push pop pop fs je jle mov test mov mov add (bad) int3 rcl fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push pop pop arpl jb jl xchg stos mov mov add rcl fcmovu in out hlt stc incb push adc push and sub dec dec push push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov rcr fsubp call add or adc sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov add fucom call add or push sbb sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop imul lea lods mov mov (bad) fildl loopne ljmp unpcklps push and xor cmp push pop bound jb jl xchg stos mov mov aam (bad) jmp add push adc sbb add cmp push pop bound jb jl xchg stos mov mov aam fild add jmp add push adc sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz in repz std add or es cmp dec push push pop pusha gs jne jg mov test ret enter fucom out add in repnz add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add pop and das xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov aad loopne ljmp add add cli incl unpcklps push and xor cmp push pop bound push (bad) mov cmpsl lods mov mov aad loopne ljmp push adc push and xor cmp push pop bound jno jnp xchg stos mov mov aam (bad) jmp add add incb or daa sub inc dec push push pop pusha imul addb cmpsl scas mov (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul xchg cwtl sahf mov mov xlat fsub out icebp idiv add or add add sbb and inc inc dec push push pop imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov aam fsubp jmp add or add daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov (bad) fneni(8087 in lock cli incl unpcklps push and add add add cmp inc dec dec push push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out hlt stc incb or daa sub cmp inc dec push push pop popa imul addb movsb test ret leave into aam fsubp call incb or adc push and sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or daa sub add add dec push push pop popa imul addb movsb test ret leave into rcr fsubp call add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb sub cmp add dec push push pop pop gs je jg mov test mov mov xlat fsub out repnz add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out icebp idiv add or adc sub xor push push pop pop fs je jle mov test mov mov xlat fsub out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov (bad) fsub out icebp idiv add or adc das xor aas inc dec dec push add add arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop bound jb jge xchg stos mov mov aad (bad) ljmp unpcklps push and xor cmp push pop add bound jno jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp push pop pop bound jne test movsb stos scas mov mov (bad) in out hlt stc incb unpcklps pop and cs ds dec dec push pop pop arpl add add jle mov test mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb daa sub ss inc dec push push pop popa imul addl add xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb xchg lcall mov aad (bad) ljmp push adc push and sub dec dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add or daa sub inc dec push push pop popa imul addb add add mov mov (bad) jecxz in repz std add or daa sub cmp dec push push pop pusha imul addb movsb test ret enter fucom call add or push sbb sub cmp dec push push pop pusha gs jne jg mov add ret enter fucom out repnz add or push sbb sub xor push push pop pop gs je jg mov test ret enter fcomp jecxz in repnz add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop imul lea lods add int3 rcl fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg stos mov add mov aad (bad) ljmp or adc pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound jb jge xchg stos mov mov add vaddsubps fcmovu in out hlt stc incl push adc push and sub inc dec push push pop popa insb jb jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov add iret aam fsubp call add or daa sub ss inc dec push push pop pusha gs jne addb movsb test (bad) leave into rcr fsubp call add or pop sbb es add cmp inc dec push push pop popa imul addb movsl stos scas mov mov add add aam fsubp call add or daa sub ss inc dec push push pop pusha imul jg mov stos scas mov mov fcomp jecxz in repnz add or pop sbb es cmp dec push push pop pusha gs je jg mov test ret enter add fcomp loop in repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fildl add loopne jmp cmc cli add pop and cs ds dec dec push pop pop arpl imul lea lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg lods mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add repz incb or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov fcomp jecxz in repnz std add or pop sbb es cmp dec push push pop pusha gs je jg mov movsb test (bad) leave into rcr fsubp call add repz std add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or push sbb sub xor dec push pop pop imul lea lods mov mov (bad) fneni(8087 out lock add add add push and xor cmp push pop bound jno jl xchg movsl stos mov mov aad (bad) jmp add push adc sbb aaa cmp push pop popa imul addb movsb test (bad) leave into aam fsubp call add add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret add iret aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into rcr fsubp call add pop or pop sbb es cmp dec push push pop pusha gs je jg mov test mov mov fcomp loop in repnz add or push sbb sub xor push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or add adc xor dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fsub out lock add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) call add push adc add push and sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz incb or adc sbb add add sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and add add xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock cli add and cmp dec push push pop pop gs je jg mov test ret enter fucom out repnz add or pop sbb es add add add inc inc dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or daa sub inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor dec add push pop pop fs add addb movsb test (bad) leave into rcr fsubp call add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and xor cmp push add insb jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor aas inc dec dec push pop pop add imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs je jg mov test mov (bad) jecxz out repz incb or sub dec dec push push pop bound add add jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop gs je jg mov test ret leave into rcr fsubp call add or daa sub ss inc dec push push pop popa imul add addb movsl stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov add add cmpsl lods mov mov (bad) fneni(8087 out in icebp idiv add or push sbb and aas inc dec dec push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov add add scas mov mov xlat fucom out icebp idiv add or push sbb sub xor push push pop pop gs jne jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha gs je jg mov lahf movsb test ret enter fucom call add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb and sub inc dec push push pop popa data16 jno jnp xchg add cmpsb stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc push and sub dec dec push push pop bound jno jl xchg stos add mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg lods mov add mov (bad) fneni(8087 in lock cli add pop and cs ds dec dec push add imul lea lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov scas mov mov rcl fucom out repnz add or push sbb sub xor push push pop pop fs je jg mov test mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test ret leave add into rcr fucom call add or daa sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb mov mov aad (bad) jmp add push adc push and sub inc dec push push pop bound jno jl xchg movsl stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out jmp cmc cli add pop and xor aas inc dec push push pop popa imul addl mov rol add (bad) fneni(8087 out icebp idiv add or adc xor dec push pop pop fs je jg mov test (bad) leave into aam (bad) jmp add incl pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb add adc push and sub dec dec push push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov aad loopne ljmp add add add add add sbb sub xor push push pop pop fs je jg mov test ret enter fucom out repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or add and sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and xor cmp push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps push and add add xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and das xor dec push push pop pop gs je jg mov test ret enter fucom out repnz add or push sbb sub add ss inc dec push push pop pusha imul jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp inc dec dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec add dec push pop pop imul mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push add push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jb jge xchg lods mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop add arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop fs je jg mov test mov add (bad) jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa data16 add jbe addl mov rol iret aam (bad) jmp add push adc push and sub dec dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop arpl jb add add (bad) xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb jl addl mov rol rcl fcmovu in out add sti add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge add mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov scas mov mov xlat fucom out icebp idiv add or push sbb sub xor dec push pop pop fs je jle mov xchg cltd sahf movsb test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or daa add xor cmp pop pop bound jb jl xchg add pushf mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov add ret rcl fucom out repnz add or push sbb sub xor push push pop pop gs je jg mov test ret leave into rcr fucom call add or daa sub ss inc dec push push pop pusha imul addb movsb stos scas add add aam fsubp jmp add push adc sbb aaa cmp push pop popa add jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov add cli add adc sbb daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incl push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add add hlt stc incb push adc push and sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repnz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret enter fucom out repnz add add cld add or push sbb sub xor dec push pop pop imul mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul lea lods mov mov (bad) fneni(8087 out lock cli incl pop and das xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add push adc push and sub inc dec push push pop popa imul addb movsl stos scas mov mov fcomp jecxz in repnz add add pop or pop sbb daa sub cmp dec push push pop pusha gs jne jg mov test ret rcl fsub out icebp idiv add or adc xor dec push pop pop imul lea lods mov mov add fsub out lock add pop and aas inc dec dec push pop pop arpl jae jge xchg cmpsb lods mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add add daa sub inc dec push push pop popa imul addb movsb test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add add adc das xor dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl add pop and das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsb stos mov mov aad (bad) ljmp push adc add push and sub dec dec push push pop bound jno jl xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub ss inc dec push push pop pusha imul addb movsb test ret enter fucom out repnz add or push sbb add add sub xor push push pop pop fs je jle mov test mov mov (bad) fsub out lock add pop and das xor ds dec dec push pop pop arpl jae jge xchg lods mov mov aad (bad) ljmp push adc push and sub inc dec dec push pop pop arpl jb jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov fcomp jecxz in repnz std add or pop sbb add sub cmp dec push push pop pusha gs jne jg mov test mov mov xlat fsub out icebp idiv add or adc das xor push pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb es cmp add inc inc dec push push pop pusha data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp push pop popa imul ja (bad) xchg stos mov mov aad loopne ljmp unpcklps push and xor ds add dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and aas inc dec dec add arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop add pop imul mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz in repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or daa sub aaa cmp inc dec push push pop popa imul jo jnp test movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov flds (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul add add addb movsl stos scas mov mov (bad) in out repz incb or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp inc dec push push pop popa imul add addb movsl stos scas mov rol iret aam (bad) jmp add push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps push and xor cmp push pop bound jb jl xchg add add add add stos mov mov aad (bad) ljmp push add das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop arpl jae jge mov add add xchg xchg popf mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop fs je jle mov add sahf mov mov xlat fucom out repnz add adc push and sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov (bad) fsubp jmp add push adc sbb aaa cmp add bound jno jl xchg test add rcl fneni(8087 in lock cli add pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc push and sub dec dec push push pop popa insb jno jnp xchg movsl stos scas mov add (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop fs je jle mov test mov mov (bad) int3 rcl fsub out icebp idiv add and aas inc dec dec push pop pop arpl jae jge mov mov lods mov mov (bad) fsub out lock add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add lret rcl fneni(8087 in lock cli incl unpcklps pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov aam fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop fs je jle mov test mov add add fcomp loop in repnz add or push sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fildl add in lock cli incl unpcklps push and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add push adc sbb cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz add call add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom out in repz std add or es ss inc dec push push pop pusha imul addb movsb test ret leave into rcr fsubp call add in repnz std add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub ss inc dec push push pop popa imul addb movsl lods mov rol rcl fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsb test ret enter fucom call add or push sbb add aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa insb jno jl xchg movsl stos scas mov mov (bad) in out repz incb or add add sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa imul addl mov mov (bad) in out hlt stc incb or adc add add cmp push pop popa insb jno jl xchg stos mov mov aad (bad) ljmp push adc push and sub dec dec push push pop add insl jb jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push add and xor ds dec dec push pop pop bound jb jl xchg lods mov mov aad loopne ljmp push adc push and xor cmp pop pop bound jb jl xchg lods mov mov aad loopne ljmp unpcklps pop and add add xor ds dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor add cmp inc dec dec push pop pop arpl jb jge xchg test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb and add add inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov scas mov mov fcomp loop in repnz add or push sbb sub cmp add add push pop pop gs je jg mov test ret enter fucom call add or pop sbb daa sub cmp dec push push pop pusha imul jg mov test (bad) leave add aam (bad) jmp add push adc push and sub inc dec add add add push push pop popa insb jno jl xchg movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop add add push (bad) xchg cmpsl lods mov mov (bad) fsub out lock add and aas inc dec dec push pop pop fs je jg mov test ret leave into aam fsubp jmp add or daa sub aaa cmp inc dec push push pop popa data16 add jbe addb movsb stos scas mov mov (bad) in out repz incb add unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne jmp cmc cli add pop and das xor ds dec dec push pop pop arpl add jge xchg lods mov mov aad loopne jmp cmc sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out icebp idiv add or adc das xor aas inc dec dec push pop pop imul add mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push push pop pusha imul jg add test movsb test ret leave into rcr fucom call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop popa imul addb nop xchg lcall mov (bad) in out repz incb push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov sahf mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha gs jne jnp xchg movsl stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop popa insb jno jnp xchg add movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb cmp push pop bound jno jl xchg cmpsb stos add mov mov aam (bad) jmp add push adc sbb cmp push pop bound jno jl xchg cmpsb stos mov mov aam (bad) jmp add push adc sbb cmp push pop popa data16 jno jnp test movsl stos add add iret aam (bad) jmp add push adc sbb cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc push and sub dec dec push pop pop bound jb jl xchg stos mov mov add vaddsubps fnop in out hlt cli incl unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add rcl fneni(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 add in icebp idiv add or push sbb and inc inc dec push push pop pop fs je jg mov test mov mov add xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter add add add fucom call add or pop sbb es cmp dec push push pop pusha imul addb movsb test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz add out repz std add or and sub inc dec push push pop popa insb jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov aad loopne ljmp add add cmc cli incl unpcklps pop and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or adc das xor dec add pusha gs jne jg mov test (bad) leave into rcr fsubp call add add pop or daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add add adc sbb aaa cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad loopne ljmp push adc add add push and xor cmp push pop bound jb jl xchg lea lods mov mov (bad) fndisi(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov ror aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or pop sbb es add xor cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb or adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov aad loopne ljmp unpcklps push and xor add cmp push pop bound jno jl xchg movsl stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop bound jno jl xchg movsl stos mov mov aad (bad) ljmp push adc push and sub add dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc add push pop pusha imul addb movsb test ret leave into rcr fucom call incb or adc sbb aaa cmp push pop popa data16 jno jnp test movsl stos scas mov mov (bad) jecxz out repz incb or adc sbb aaa cmp inc dec add add pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret enter fucom call add or daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz std add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or pop sbb sub xor cmp inc dec push push pop add imul addb movsb test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom call add or daa sub cmp dec push push pop pusha add push jne jg mov test ret enter fucom out repnz add or pop sbb sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop imul je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop add outsl jne jg mov test ret enter fucom out repnz add or push sbb daa sub cmp dec push push pop pusha gs jne jp test mov mov xlat fucom out icebp idiv add or push sbb sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jle test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul add add add mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov xchg cwtl popf mov mov xlat fsub out icebp idiv add and aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge mov add pushf mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov rcl fsub out lock add pop and das xor ds dec dec push pop pop arpl jae jge mov add mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov add mov rol rcl fneni(8087 in lock cli add add pop and aas inc dec dec push pop pop arpl jae addb scas mov mov fcomp jecxz out repz incb or sub dec dec push pop pop bound jb jge mov test mov mov add add rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop pusha imul jg mov movsl stos mov mov aam (bad) jmp add or sub inc dec push push pop popa imul addb movsl stos scas mov mov aam fsubp call add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or push sbb sub xor dec push pop pop imul lea lods mov mov (bad) fsub out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl and xor cmp pop pop bound jb jge xchg test mov mov xlat add jecxz out repz incb or daa sub inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz add incb or daa sub inc dec push push pop popa imul addb movsb test (bad) leave into aam fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test (bad) leave into aam fsubp call add add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test (bad) leave into aam fsubp call add or and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb add add or daa sub inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret enter fsubp call add or add add add pop sbb daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub cmp inc dec push push pop pusha imul jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs je jg mov test ret enter fucom out repnz add or push sbb add sub xor push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and sub xor dec push pop pop imul lea lods mov mov (bad) fneni(8087 in lock add pop and das xor ds dec dec push pop pop arpl jae jns orl test mov mov (bad) fsub out lock add or adc das xor dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps pop and xor add cmp inc dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor cmp push pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc push and xor cmp add dec push push pop bound jno jl xchg movsl add (bad) lret rcl fsub in repnz add or push sbb sub cmp dec push push pop pop fs je jle mov test mov mov fsub out icebp idiv add or adc xor dec push pop pusha push test movsb test ret enter fucom out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov lods mov mov (bad) fndisi(8087 out lock cli add pop and cs aas inc dec dec push pop pop add insl jb jge xchg lods mov mov aad (bad) ljmp push adc push and sub dec dec push push pop bound jno jnp xchg movsl stos scas mov mov (bad) jecxz add hlt stc incb or adc sbb aaa cmp push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop imul outsb jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp pop pop bound jb jl xchg stos mov mov aam (bad) jmp add or daa sub inc dec push push pop popa imul add jbe addb movsl stos scas mov mov fcomp jecxz in repnz add or pop add aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub ss inc dec push push pop popa imul add test movsb test ret leave into rcr fucom call add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg add mov mov xlat fucom out repnz add or push sbb sub xor dec push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or adc das xor add pop pop fs je jg add mov test ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jle mov xchg cwtl popf mov mov (bad) fndisi(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps pop and xor ds dec dec push pop pop bound jb jge xchg pushf mov mov aad loopne ljmp push adc push and xor cmp push pop bound jno jl orl cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg add mov mov aad loopne ljmp push adc push and xor cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl add stos mov mov aad (bad) jmp add push adc push and sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop bound jb jge xchg lods mov add mov rcl fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push pop popa imul addb movsl stos scas mov rol add iret aam (bad) jmp add push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov rol iret aam (bad) jmp incl unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov rcl fneni(8087 in lock cli incl unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) add add loope jmp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb add sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add add repnz std add or daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov fcomp jecxz out repz add std add or daa cs dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb sub cmp dec push push pop pusha add jo jnp test movsb test (bad) leave into rcr fsubp call add add push adc sbb cmp pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov (bad) fsub out lock add add adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl add add add and das xor ds dec dec push pop pop arpl jb jge xchg test mov mov (bad) fsub out lock add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop add and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp push adc push and xor ds dec dec push pop pop bound jno jl xchg movsl stos scas mov mov (bad) jecxz out repz std add or add add add ss inc dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop gs je jle mov test mov mov rcr fucom call add or push sbb sub xor cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add and add aas inc dec dec push pop pop imul lea lods mov mov (bad) fsub out lock add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and xor add add inc dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp or adc das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds add dec dec push pop pop arpl jb jge xchg stos mov mov aad loopne ljmp push adc push and sub inc dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec add push push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov fcomp jecxz in repz std add or pop sbb daa sub inc dec dec push push pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp push pop popa data16 jno jl xchg movsl stos mov mov aam (bad) jmp add or daa sub aaa cmp inc dec push push pop add add imul addb movsl stos scas mov mov (bad) jecxz in repz std add or daa sub ss inc dec push push pop pusha gs jne addb movsb test ret enter fucom call add or pop sbb sub cmp dec push push pop pop add push je jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop add outsl jne addb movsb test ret enter fucom call add or push sbb sub cmp dec push push pop pop fs add add jns test mov mov fcomp loop in repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae add js (bad) mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push pop pop bound jb jl add cwtl popf mov mov (bad) fneni(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jl xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jb jge add xchg lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg add add stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov rcl fneni(8087 in out cmc cli incl unpcklps push and xor ds dec dec push push pop bound jb jl xchg xchg fwait mov mov aad (bad) jmp add push adc sbb aaa cmp push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb lahf movsb test (bad) leave into rcr fsubp call add or daa sub cmp dec push push pop pusha gs jne jg mov mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov scas add into rcr fsubp call add or adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg stos mov add aad loopne ljmp unpcklps push and xor cmp pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jb jl xchg stos mov mov add (bad) aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor add inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add int3 rcl fneni(8087 out lock add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add or adc das xor dec push pop pop arpl jae jle mov cmpsl lods mov mov add (bad) fndisi(8087 out lock add or adc das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock add or adc das xor dec push pop pop imul lea lods mov mov (bad) faddl add out lock add and aas inc dec dec push pop pop imul mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub add add in icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov xlat fsub out add add idiv add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov test ret enter fucom call std add or pop sbb es ss inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb es aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into rcr fsubp call add add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repnz std add or pop sbb daa sub ss inc dec push push pop popa imul addb movsb test (bad) leave into rcr fsubp call add add or daa sub ss inc dec push push pop popa imul addb movsb stos scas mov mov fadds (bad) jmp add push adc sbb aaa cmp inc dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add push add sbb aaa cmp push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add or daa sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or add aaa cmp inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or add add sub dec dec push push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb jge xchg stos mov mov aad loopne ljmp unpcklps push and add add xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and cs add add ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds add push pop pop arpl jae jle mov test mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae add mov test ret enter fucom out repnz add or push sbb sub xor push push pop pop fs je jle mov test ret enter fucom out repnz add or push sbb sub xor dec push add add fs je jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or push sbb sub cmp dec dec push pop pop imul mov lods add rcr fsubp call add or pop sbb es cmp dec push push pop pusha add add add jne jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or pop sbb es cmp dec push push pop pusha gs add jne jg mov test (bad) leave into rcr fsubp call add or daa sub ss inc dec push push pop pusha imul jg mov test ret leave into rcr fsubp call add or daa sub cmp dec push push pop pusha gs jne add jg mov test ret enter fsubp add out hlt stc incb or adc sbb aaa cmp push pop popa insb jno jnp xchg movsl stos scas mov mov fcmovu in out hlt stc incb or adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) ljmp push adc push cs dec push pop bound jno jl xchg stos add lret fcmovu in out hlt stc incb push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov test mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul jg mov test les add add into aam fsubp jmp add or sub xor ds dec dec push pop pop arpl jb jge xchg lods mov rol rcl fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne add ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha imul jbe addl mov (bad) in lock add sti add and inc inc dec dec push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc sbb aaa cmp inc dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) ljmp add or adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp push pop popa insb jb jl xchg movsl stos mov mov aam fsubp jmp add or add add sbb aaa cmp inc dec push push pop pusha imul addb movsl stos scas add iret aad (bad) jmp add push adc sbb cmp inc dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl add pop and xor ds dec dec push pop pop bound jb jge xchg lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov aad loopne ljmp unpcklps push add add sub xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg stos mov mov aad (bad) add lock cli add pop and sub xor ds dec dec push pop pop imul mov mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add pop and add aas inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push add imul mov scas mov mov xlat fucom out icebp idiv add or push sbb and add add inc inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl je jg mov test mov mov fcomp loop in repnz add or push sbb sub xor add add dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov mov lods mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl push adc push and xor ds dec dec push add pop pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop add outsb jae jge mov cmpsl lods mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop add add jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or push sbb sub xor dec push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul add add mov cmpsl lods mov mov (bad) fneni(8087 out lock add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul add add popf mov mov (bad) fndisi(8087 out lock add or pop sbb es cmp dec push push pop pusha gs je jg mov test mov mov xlat fucom out icebp idiv add or push sbb sub cmp dec dec push pop pop fs je jle mov mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock sti add and cmp dec dec push pop pop imul mov xchg cwtl popf mov mov xlat fsub out icebp idiv add and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 in lock cli add pop and inc inc dec push push pop pop fs je jle mov sahf mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul lea lods mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop imul lea add rol rcl fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop add jae jle mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl add add lods mov mov aad loopne ljmp pop sbb aaa cmp inc dec push push pop popa push (bad) mov cmpsl lods mov mov fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg stos mov mov rcr fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and xor cmp pop pop arpl jb jge xchg lods mov mov rcl add fsub out icebp idiv add or push sbb sub xor push push pop pop gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out add in icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addl mov mov fcmovu in out hlt stc incb push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock cld add or push sbb sub xor dec push pop pop imul mov mov mov fcomp loop in repnz add add pop or pop sbb es cmp dec push push pop pusha imul jg mov stos scas mov mov fnop in lock cli incl pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add pop add pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 in lock cli add add sbb and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs je jg mov test (bad) leave into rcr fsubp call add unpcklps push and add xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push push pop pusha gs jne jg mov test ret leave into aam fsubp jmp add or sub add add cmp push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and add add dec dec push pop pop fs je jg mov test ret enter fucom call add or sub xor cmp pop pop bound jb jl xchg stos mov mov aad loopne jmp cmc cli add pop and das xor aas inc dec add pop pop arpl jae add mov test ret enter fucom out repnz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp adc xor dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop add imul mov scas mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsb stos scas mov add (bad) aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl add jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor push push pop pop fs je jg mov test ret enter fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop pusha imul add addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp pop pop bound jb jl mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov add (bad) xchg cltd lahf movsb test ret leave into rcr fsubp call incb or adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov add mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg add add rol rcl fndisi(8087 out lock add and aas inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa add push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push push pop bound jb jge xchg lods mov mov (bad) fnclex out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov mov mov add int fcomp loop in repnz add or pop sbb sub cmp dec push push pop pusha gs jne jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jb jl xchg lods mov mov add aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov scas mov mov xlat fldl add loop in icebp idiv add or sbb aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov rol rcl fneni(8087 in add jmp cmc cli add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov xlat fsub out icebp add idiv add or push sbb sub xor dec push pop pop fs je jg mov test mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop bound jno jl xchg cmpsb stos mov mov aad loopne ljmp add unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl imul mov lods mov mov xlat fucom out icebp idiv add add push sbb sub xor push push pop pop gs je jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add or add sbb aaa cmp push pop popa insb jae jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop add and das xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out icebp idiv add or adc add das xor dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out icebp idiv add or pop pop daa sub dec dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub ss inc inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 add in icebp idiv add or push sbb sub cmp add add push pop pop fs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop fs je jle mov test mov mov fcomp jecxz in repnz std add or pop sbb daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb daa sub ss inc dec push push pop add push jne jg mov test ret enter fucom call add or pop add aaa cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa add imul addb movsb test ret enter fucom call add or push sbb sub cmp dec push push pop pusha gs je jle mov test mov mov xlat fsub out lock add and sub xor push push pop pop fs add outsl je jle mov test mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec add pop pop imul add je jle mov test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul add jle mov test mov mov xlat fsub out icebp idiv add and inc inc dec push push pop pusha imul jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha imul jg add add movsb test ret leave into rcr fucom call add or pop sbb es cmp dec push push pop pusha imul jg xchg movsl stos mov mov aam (bad) jmp add push adc push and xor cmp pop pop bound jb jge xchg xchg xchg pushf mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc sbb aaa cmp inc dec push push pop bound jb jge xchg add pushf mov mov aad (bad) ljmp push adc sbb aaa cmp push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repnz std add or pop sbb es cmp dec push push pop pop gs je jg mov mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fneni(8087 out lock cli incl pop and xor ds dec dec push pop pop bound jb jl xchg add add (bad) aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov add mov mov (bad) jecxz out repz std add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge xchg lods mov add fneni(8087 in lock cli incl unpcklps push and xor cmp push pop bound jno jl xchg cmpsb stos mov mov aam (bad) jmp add or daa sub aaa cmp inc dec push push pop pusha gs jne jg mov test (bad) aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repnz std add or pop sbb sub cmp dec push push pop pop fs je jle mov test ret enter add int fcomp loop in repnz add or push sbb sub xor push push pop pop fs je jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop fs je jle mov test mov mov add fcomp loop in repnz add or push sbb sub xor dec push pop pop fs je jg mov test mov mov fcomp loop out repz incb or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test (bad) leave into rcr fiadd add add call add or daa sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call in repnz std add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or pop sbb es cmp dec push push pop pusha gs jbe test lods mov mov xlat fsub out icebp idiv add pop or push sbb sub dec dec push push pop bound jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne jmp cmc sti add add add adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out repnz add or push add add and sub xor push push pop pop gs je jg mov test ret enter fucom out repnz std add or daa sub ss inc dec push push pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and sub xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and add xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add and aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec add pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl scas mov mov xlat fucom out repnz add or push sbb sub xor push push pop pusha add add jo jp test movsb test ret enter fucom call add or pop sbb es cmp dec push push pop pusha imul addb movsb test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul jno jnp test movsl stos scas mov mov (bad) in out hlt stc incb or adc sbb aaa cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fucom out repnz add or push sbb sub xor dec push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha imul addb add mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push add bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov add add lods mov mov (bad) fndisi(8087 out add idiv add or push sbb sub xor push push pop pop fs jne jg mov test ret enter fucom call add or pop sbb inc dec dec push pop pop bound jb jl xchg add rol rcl fndisi(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov add scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc sbb xor ds dec dec push pop pop bound jb jl xchg lods mov add mov rol rcl fneni(8087 in lock cli incl pop and das xor inc inc dec push push pop pop gs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) lret (bad) in out repz incb or adc sbb cmp push pop popa insb jno jl xchg movsl stos mov mov rcl fndisi(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov add add rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop add jne jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol rolb (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat faddl add out icebp idiv add pop or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa imul addb mov mov aad loopne add add in lock cli incl pop and das xor ds dec dec push pop pop arpl jb jge xchg test mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or sub inc dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp stc incl unpcklps pop and xor ds dec dec push pop pop bound jb jge xchg lods mov mov add fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb add or adc sbb cmp push pop bound jno jl xchg cmpsb stos mov mov aad (bad) jmp add push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp add unpcklps pop and das xor ds dec dec push pop pop arpl add orl test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom out repnz add add add pop sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incl unpcklps push and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli add add pop and das xor aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov test ret enter fucom call add or pop sbb add daa sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and add xor dec push pop pop fs je jle mov test mov mov xlat fucom out repnz add or push sbb sub xor dec push pop pop gs je jg mov test ret enter fucom out repnz add or push sbb sub xor add add inc inc dec push push pop pusha gs jne jg mov test ret leave into rcr add in out repz incb or adc sbb aaa cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp add dec push pop pop bound jb js orl mov mov (bad) fndisi(8087 out lock cld add or push sbb sub cmp dec push push pop pop add jne addb movsb stos scas mov mov fcomp jecxz in repnz std add or pop sbb es cmp dec add push push pop pusha gs jne addb movsb test ret leave into rcr fucom call add or pop sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jge mov test mov mov (bad) fsub out lock add pop and das xor ds dec dec push pop pop arpl jb jge xchg test ret leave into rcr fsubp call add or pop sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop add add jae jle mov test mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov test mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl add add jge xchg lods mov mov (bad) fneni(8087 in out cmc cli incl unpcklps push and xor cmp push pop bound jno jl xchg movsl stos mov mov rcl fsub out icebp idiv add or adc das xor dec push pop pop arpl jae add add orl cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp push adc push and sub inc dec push push pop popa data16 jno jnp add fwait mov mov aam (bad) jmp add or daa sub aaa cmp inc dec push push pop popa imul addb movsb test (bad) leave into rcr fsubp call add or pop sbb es cmp dec push push pop pusha gs je jg add add mov mov fcomp loop out repz incb add push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov fcmovu in out repz incb or adc sbb aaa cmp inc dec push push pop popa imul addb add add stos scas mov mov (bad) jecxz out repz std add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or push sbb sub cmp dec dec push pop pop imul mov cwtl popf mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock cli add and cmp dec push pop bound jb jl xchg cmpsb stos mov mov aam (bad) ljmp push adc and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in repnz incl pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov add fndisi(8087 out lock sti add or adc das xor dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add add int3 rcl fneni(8087 in lock cli incl pop and aas inc dec dec push pop pop gs je add lcall mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter add add rcl fucom out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop imul mov lods mov mov add xlat fsub out icebp idiv add or adc xor dec push pop pop imul lea lods mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop arpl jae jg mov test add rcr fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into rcr fucom call add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom add out repnz add or push sbb sub cmp dec push push pop pop gs je jle mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 out add lock cli add pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov xlat fsub add in repnz add or push sbb sub xor push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov (bad) fsub out lock add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) ljmp push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov fneni(8087 in lock sti add push or adc sbb sub xor push push pop pop gs jne jg mov test (bad) leave into aam fsubp jmp add push adc sbb cmp push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb add add add add es ss inc dec push push pop popa data16 jno jl xchg stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jl xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and add xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp inc inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or sub add aaa cmp push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor add add inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out icebp idiv add or push sbb sub ss inc dec push push pop popa data16 jno add mov stos mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa add jo jnp test movsb stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa insl jb jl xchg stos mov mov rol rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul outsb jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul jns test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jle mov test mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pop fs je jg test movsl stos scas mov mov (bad) jecxz add cmc cli incl unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg add mov lods mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov add xchg pushf mov mov (bad) fneni(8087 in lock cli incl pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out icebp idiv add or push sbb add sub ss inc dec push push pop pusha imul jg mov add add mov rcr fucom out repnz add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov add add ret enter fucom out repnz add or push sbb es cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test add add int fcomp loop in repnz add or sub inc dec push push add push (bad) xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg movsl stos scas mov add add aam fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov add (bad) leave iret aam fsubp jmp add or daa sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and das xor ds dec dec push pop pop arpl jae jle mov mov mov add int xlat fucom out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret enter fucom out repnz add or push sbb sub xor push push pop pusha gs jne jg mov test ret enter add add fucom out repnz add or push sbb sub xor dec push pop pusha gs je jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pusha gs je jg mov test ret enter fldl add add out repnz add or pop sbb sub cmp dec push push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add add hlt stc incb or adc push and sub inc dec push push pop popa insb jb jl add mov mov (bad) fneni(8087 out lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp add add sti add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul nop xchg lcall mov (bad) jecxz out repz incb add add or sub inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and sub inc dec push push pop bound jno jl xchg stos mov mov rcl fneni(8087 out lock sti add add add unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or add add sbb and aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz incb or add add daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) in out repz incl push adc push and xor cmp pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli incl unpcklps pop and add sub xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out lock add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov fcomp loop in repnz add or push sbb sub xor add inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and sub dec dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp pop sbb ss inc dec add push push pop pusha gs jne jg mov test (bad) aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg movsl stos scas mov mov (bad) jecxz out hlt stc incb or daa sub inc dec push push add pop popa imul addb movsb test ret enter fucom call add or pop sbb daa sub cmp dec push push pop pusha gs jno jnp test movsl stos scas mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop add add push jne jg mov test ret enter fucom out repnz add or pop sbb sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha add add imul jg mov test ret enter fucom out repnz add or pop sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul add add jle mov mov mov fcomp loop in icebp idiv add or push sbb sub cmp dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add and aas inc dec dec push pop pop arpl jae add add orl cmpsl lods mov mov (bad) fneni(8087 out lock cli incl pop and das xor ds dec dec push pop pop arpl jb orl cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop bound jb jl add xchg stos mov mov aam (bad) jmp add or sub inc dec push push pop popa data16 jno jnp test movsl stos scas mov mov add (bad) jmp add push adc sbb cmp push pop popa data16 jno jnp xchg mov stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa imul addb movsb test ret leave into rcr fucom call add or pop sbb sub cmp dec push push pop pusha gs jne jg mov add xchg cltd sahf mov mov (bad) jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsb test ret leave into rcr fucom call add or pop sbb es ss inc dec push push pop pusha gs jne jg mov add mov rcr fucom out repnz add add daa sub ss inc dec push push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repnz std add or pop sbb daa sub cmp dec push push pop pusha imul addb add add ret enter fucom call add or pop sbb es cmp dec dec push pop pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add adc sbb es ss inc dec push push pop popa data16 jno jl xchg stos mov mov add mov fabs call add or pop sbb daa sub cmp dec push push pop pusha gs jne addb movsb test ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov add rcl fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov add (bad) fndisi(8087 out lock cld add or push sbb sub xor push push pop pop fs je jle mov test ret enter fucom out add clc std add or es cmp dec push push pop pusha gs jne jg mov test ret enter add fucom call add or pop sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov scas mov mov xlat fsub add add in icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc das xor push push pop pusha gs jne jg mov test ret enter fucom call add repnz add or pop sbb add sub inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz in repz std add or daa sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add idiv add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or pop sbb es cmp dec push push pop pusha gs je jg mov test mov mov fcomp loop in repnz add add or push sbb sub xor dec push pop pop imul addb movsb test (bad) leave into rcr fsubp call add or daa sub ss inc dec push push add insb jno jnp xchg movsl stos scas mov rol iret aam (bad) jmp add or adc sbb aaa cmp push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into aam fsubp call add or add add pop sbb daa sub ss inc dec push push pop arpl js orl test mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov stos mov mov aad loopne ljmp unpcklps pop and add sub xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out repnz add or push sbb sub add cmp dec push push pop pop gs je jg mov test ret enter fucom out repnz std add or pop sbb daa sub ss inc dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or daa sub aaa add inc dec push push pop popa imul addb movsl stos scas mov mov fneni(8087 in lock cli add pop and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov add fucom out repnz add or pop sbb es cmp inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or adc push and xor cmp push push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add pop and das xor ds dec dec push pop add push (bad) mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop add je jle mov test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc xor push push pop pop fs add add add jns test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop popa imul addb mov mov aad (bad) ljmp push adc push and sub dec dec push pop pop bound jb add add addl mov rol rcl fcmovu in out hlt stc incl push adc push and sub dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop bound jno jl addl mov rol rcl fcmovu in out hlt stc incb push adc push and sub inc dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub dec dec push pop pop imul add lea lods mov mov rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop fs je jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg add scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push push pop popa imul addl add add mov aam fsubp jmp add or daa sub inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add push or adc xor dec push pop pop imul mov add ret rcl fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas add add rcr fsubp call add or daa sub cmp dec push push pop pusha imul jg mov stos scas mov mov (bad) jecxz in repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov add rol rcl fnop in out hlt cli incl unpcklps push and xor cmp inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov add add int3 rcl fneni(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov rcl fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fnclex out repnz add or push sbb sub cmp dec push push pop pop gs jo jnp test movsl stos scas mov mov (bad) in out repz incb or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test (bad) leave into aam fiadd add jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsb test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or sub xor cmp pop pop bound jb jl xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsb stos scas mov mov flds (bad) jmp add add add push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov aad loopne ljmp sldt add pop and cs ds dec dec push pop pop bound jb jge xchg lods mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl je jle mov test mov mov xlat fsub out icebp idiv add sbb sub cmp dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add and add aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in out cmc cli incl unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and add add xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov xlat fsub out add idiv add or pop sbb es add cmp inc dec push push pop pusha imul jg mov test ret enter fucom call add or pop sbb es aaa cmp inc dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or daa sub aaa cmp add add add add dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp push pop popa imul mov test mov mov (bad) fndisi(8087 out lock cli add pop and cs ds dec dec add pop arpl jae jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or adc add cmp dec push push pop pusha gs jne jg mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push add imul mov lods mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop add insl jae jge xchg cmpsb lods mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc cs ds dec dec push pop pop add add add jae jle mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop pop bound jae jge xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb add jb jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addl mov mov (bad) jecxz out repz std add or daa sub ss inc dec push push pop pusha gs jne add test movsb test ret enter fucom out repnz add or push sbb sub aaa cmp inc dec push push pop pusha imul addb mov mov aam (bad) jmp add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repz std add or daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul add mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl je jle mov add add add add lods mov mov rcr fucom call add or push sbb sub cmp dec push push pop pop fs je jle mov test ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea add add mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge xchg add mov (bad) fndisi(8087 out lock sti add pop and cs ds dec dec push pop pop bound jb jge xchg lods mov mov xlat fsub out icebp testb add or push sbb sub cmp dec push push pop pop fs je jle mov add add ret rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jl xchg stos mov mov aad loopne ljmp push adc push and xor cmp push pop bound jno jl xchg movsl stos mov add mov (bad) fndisi(8087 out lock sti add pop and add xor dec push pop pop imul lea lods mov mov (bad) fsub out lock add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov add (bad) aad loopne ljmp push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add or daa sub inc dec push push pop popa imul addb movsb test ret leave into rcr fsubp call add or daa sub cmp dec push push pop pusha gs jne jg mov test mov mov xlat fsub out repz std add or daa sub cmp dec push push pop add imul addb movsb test ret leave add rcr fucom call add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or pop sbb sub cmp dec push push pop pop fs je jle mov test mov mov add add fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock add or adc das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov aad add add in out cmc cli incl and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne add add out cmc cli incl pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc push and xor cmp push pop bound push (bad) xchg stos mov mov xlat (bad) in repnz idiv add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg stos mov mov aad (bad) jmp add or adc sbb cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop pusha imul addb movsb test ret enter fucom call add add or pop sbb es ss inc dec push push pop pusha imul jg mov movsl stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add or add add sbb cmp push pop popa insb jno jl xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov xlat add jecxz in repnz add or pop sbb add daa sub cmp dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov rol rcl fnop in out hlt cli incl unpcklps push and add xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl unpcklps pop and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor add add inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock add sbb sub xor dec push pop pop fs jne jg mov test ret enter fucom out repnz add or push sbb sub xor inc dec push push pop pop gs jne jg mov test ret enter fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push add pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub ss inc dec push push pop pusha imul jg mov stos scas mov mov (bad) jecxz in repz std add or daa sub aaa cmp inc dec add pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb jl xchg lods mov mov aad loopne ljmp movhps and inc inc dec dec push pop pop add add add je jle mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom call add or pop sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom call add or pop sbb sub cmp dec push push pop pusha gs je jg add movsl stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push pop popa data16 jno add jnp xchg movsl stos scas mov rol iret aam (bad) jmp add push adc push and sub push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul lea add xchg cwtl popf mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pop gs je jg mov add add mov into rcr fsubp jmp add or daa sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and sub inc dec push push pop popa outsb jae jge mov add rol rcl fneni(8087 out icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov (bad) fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock add push or push sbb sub xor dec push pop pop imul mov lods mov add rcl fsub out icebp idiv add or push sbb sub xor push push pop pop fs je jg mov add (bad) aam (bad) jmp add push adc push and xor cmp pop pop bound jb jl xchg stos mov mov rol rcl fcmovu in out hlt stc incl unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov int3 rcl fneni(8087 out lock sti add and aas inc dec dec push pop pop imul lea lods mov mov (bad) fsub out icebp idiv add and aas inc dec dec push pop pop imul mov lods mov mov add add fiadd in out hlt stc incb or adc sbb cmp push pop bound jno jl xchg cmpsb stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad add loopne ljmp unpcklps push and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fsub out add jmp cmc sti add pop and das xor aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or pop add aaa cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp add add stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add push or push sbb and inc inc dec dec push pop pop gs je jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std add add daa xor ds dec dec push add imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs jne jg mov test ret enter fucom call add or add add sbb daa sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addl mov mov fcmovu in out hlt stc incb or adc sbb and sub inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp push adc push and xor ds dec dec push pop pop arpl jae jge mov mov mov xlat fsub out icebp idiv add or push sbb and add add xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub add add cmp dec push push pop pop gs je jg mov test ret leave into rcr fucom jmp sti add or push sbb sub xor dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc add dec push push pop popa imul addb cmpsl lods mov mov add fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave iret aam fsubp jmp add or sub inc dec push add popa insb jno jnp xchg movsl stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out lock add pop and ds dec dec push pop pop add insl jae jge mov cmpsl lods mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop pusha imul add jnp test movsb stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push pop popa insb jno jnp xchg mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul add orl cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret enter fucom call add or daa sub ss inc dec push push pop popa imul addb test movsl stos scas mov mov (bad) jecxz out repz incl pop and xor ds dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock add pop and aas inc dec dec push pop pop imul lea xchg cwtl popf mov mov add fucom call add or daa sub ss inc dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa imul addb add fwait mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc pop and aas inc dec dec push pop pop arpl jae jle mov add add ret rcl fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov test mov mov fcomp loop in repnz add or adc sbb aaa cmp push pop popa insb jno jl xchg cmpsb stos add add lret fcmovu in out hlt cli incl push adc push and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc sbb cmp push pop bound jb jl xchg stos mov mov lret rcl fnop in out cmc cli incl unpcklps push and xor ds dec add pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push pop pop bound jb jl mov test mov mov xlat faddl add add out icebp idiv add or push sbb and inc inc dec dec push pop pop gs je jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb mov mov aad (bad) add ljmp push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp add idiv add or push sbb and inc inc dec dec push pop pop fs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc sbb cmp push pop popa insb jno jl xchg stos mov mov aad loopne ljmp add add add add unpcklps push and xor ds dec dec push pop pop bound jb jge mov cmpsl lods mov mov rcl fucom out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test ret leave into rcr fsubp call add add daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc sbb cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad loope jmp idiv add add sbb and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz std add push adc push add sub xor cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps push and xor add ds dec dec push pop pop bound jb jl xchg lods mov mov fcomp loop in repnz add or pop sbb sub cmp dec push push pop pop gs je jg mov test mov mov fcomp loop in repnz add or push sbb sub xor add add dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor aas add dec push pop pop imul mov lods mov mov xlat fucom out icebp idiv add or push sbb and aas inc add dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul lea lods mov mov (bad) fsub out icebp idiv add or adc das xor push add add pusha gs je jg mov test mov mov xlat fucom call add or push sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pop gs je add lcall mov fcomp jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret enter fucom call add or daa sub cmp dec push push pop pusha add outsl jne jg mov test ret enter fucom out repnz add or pop sbb sub cmp dec push push pop pop gs je addb movsl stos scas mov mov (bad) jecxz in repnz std add or daa sub aaa cmp inc dec push push pop pusha imul add jp test movsb test ret leave into rcr fucom call add or daa sub ss inc dec push push pop pusha imul addb movsb test mov (bad) jecxz out repz incb or adc sbb cmp push pop popa data16 jno add addb movsl stos scas mov mov (bad) jecxz out repz std add or sub inc dec push push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repnz std add or pop sbb aaa cmp inc dec push push pop pusha imul add fwait mov mov aam (bad) jmp add or sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop popa imul addb add movsl stos scas mov mov (bad) jecxz jmp add push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc sbb cmp push pop bound jno jl xchg add stos mov mov aam (bad) jmp add adc pop and das xor aas inc dec dec push pop pop arpl je jg mov stos scas mov mov fchs out hlt stc incb or adc sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl add stos mov rol rcl fneni(8087 out lock sti add and aas inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or adc push and sub inc dec dec push pop pop imul lea lods mov add fsub out icebp idiv add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop gs je jg mov test ret add add int xlat fucom out repz incb or adc sbb cmp push pop popa insb jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add (bad) fndisi(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jnp xchg stos mov mov aad add add in out cmc cli incl pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or push sbb es inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov rol rcl fneni(8087 in lock add add cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add or adc sbb cmp pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or pop sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out add sti add pop and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb add add es cmp dec push push pop pusha imul addb movsb test (bad) leave into aam fsubp jmp add or sub inc dec push push pop popa insb jno jl xchg cmpsl lods mov mov (bad) fsub out icebp idiv add and add das xor dec push pop pop imul mov lods mov mov xlat fsub out repnz add or push sbb sub xor push push pop pop fs je jg mov test mov mov fcomp loop in repnz add or pop sbb daa sub xor add cmp push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock add pop and aas add push pop pop arpl jae jle mov cmpsl scas mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa imul ja addl mov rol rcl fnop in out hlt cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push add gs jne jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out cmc cli incl pop and aas inc dec dec push pop pop arpl add imul lea add enter fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz incb or sub dec dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test ret enter fucom call add or sub dec dec push pop pop bound jb jl xchg stos mov mov aad loopne add icebp idiv add or adc xor dec push pop pop fs je jg add mov test mov mov xlat fucom out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or daa sub aaa cmp inc dec push push pop insw jae jle mov add add mov rcl fsub out icebp idiv add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add pop and ds dec push push pop pop fs je jg mov add add ret rcl fsub out icebp idiv add or push sbb and cmp dec push push pop pusha gs jne addb movsb test ret leave into rcr fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test add add enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov add mov ret rcl fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop add push jne jg mov test add add fcomp loop in repnz add or pop sbb sub cmp dec push push pop pop gs je jle mov test ret rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov add add int3 rcl fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg scas mov mov add cs inc dec push push pop gs jae addl (bad) lret rcl fneni(8087 in out cmc cli incl add adc das xor dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add and aas inc dec dec push pop add imul mov lods mov mov (bad) jecxz out repz std add or daa sub aaa cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp push pop pop bound insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul jne jg mov test ret enter fucom call add or pop sbb sub cmp dec push push pop pusha imul jg mov test ret leave into rcr fsubp call add push adc push and xor cmp pop pop bound jb jge (bad) xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha imul addb add movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and sub dec dec push push pop bound jb jge xchg add add mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop fs je jg mov test ret enter fucom call add or pop sbb daa sub ss inc dec push push pop pusha imul addb add movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa insl jb jl orl test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov lret fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jge xchg push jns insl jnp jne mov adc adc cmp cld add arpl daa and sub xchg mov mov enter inc repz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub cmp inc loop adc and cli or lock call pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor push das in sub sti dec sbb std js lahf xchg cmp push cs out je fsubl popa xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb jnp ret adc outsb outsb test test test cmp mov cmp cmp test test test mov test test cmp nop cmp mov test cmp cmp cmp cmp jmp cmp cmp cmp cmp test push test test test test test xor cmp cmp test test cmp pop cmp cmp cmp test test ret call cmp test cmp cmp test mov cmp test test cmp cmp mov cmp cmp test test cmp inc test cmp cmp test cmp mov test test cmp cmp cmp mov cmp test test cmp test ret pop cmp cmp test cmp test clc adc test cmp cmp cmp cmp jmp (bad) cmp movsb mov sub aaa sar add adc push (bad) icebp mov jecxz push andb ret (bad) lds test jmp test test cmp cmp cmp pop cmp cmp test test cmp add test cmp test cmp cmp mov test test cmp test test mov cmp cmp cmp cmp cmp test test test test test dec cmp test test cmp test test cmp cmp cmp cmp dec cmp test test test test test cmp test test cmp dec test test cmp cmp cmp cmp cmp test test test dec test test cmp test test cmp test test cmp cmp xor cmp cmp cmp test test test test test cmp test or test cmp test test cmp cmp cmp cmp cmp test call test test test test cmp test test cmp test test push cmp cmp cmp cmp cmp test test test test test test jne mov cmp test test cmp test add test cmp cmp cmp cmp mov cmp test test test test add test cmp test test cmp call test test cmp cmp cmp jmp cmp cmp test test test pop test test cmp test test push cmp test test cmp cmp push cmp cmp cmp test test push test test cmp test test mov cmp cmp cmp cmp test call test test cmp nop cmp pop test cmp test cmp test cmp jl cmp cmp test test mov test cmp nop cmp test sub cmp test cmp test cmp mov cmp test test test sub cmp nop cmp test cmp call test cmp test cmp mov cmp test test test cmp push nop cmp test cmp test mov cmp test cmp cmp push test test test cmp nop push cmp test cmp test cmp push test cmp cmp test call test test cmp nop cmp jmp test cmp test cmp test pop cmp cmp test test inc test cmp nop cmp test push cmp test cmp test cmp pop cmp test test test inc cmp nop cmp test cmp or test cmp test cmp xor cmp test test test cmp mov nop cmp test cmp test cmp jne cmp test cmp cmp mov test test test cmp nop cmp test cmp test cmp test cmp cmp test sub test test cmp nop cmp test cmp test cmp test mov test test cmp cmp test cmp cmp test cmp cmp test cmp test test cmp test test test test test test test test cmp test test test test test test test cmp test test test test test test test cmp test test test test test xor test test cmp test test test test test test test cmp test test test test test test test cmp test test test test test test test cmp test test test test test test test cmp test test test test test test test cmp test test or test test test test test cmp test test test test test test test cmp test cmp jne test test test test test call test cmp test test test pop sahf fwait ljmp xor out fsubr xor int mov data16 dec iret or popa adc dec mov and fldt xor or pop pop aad sbb cmp pop in (bad) popl sti inc jae sbb int3 push mov (bad) pop and push inc mov xchg mov fnstenv pushf mov (bad) addr16 or jo add mov push xchg jge test insl das jmp fistp sub xchg add add in repz lret ss subl cltd stos mov loop xchg cli xchg cmp xor mov scas test test test test cmp mov test test test test test pushl test test cmp test test pop test test test test test mov cmp test test test test mov test test cmp test test push test cmp test cmp test mov test cmp cmp test mov cmp test test test nop mov cmp test test cmp cmp dec test test test cmp cmp dec test cmp cmp cmp test dec cmp cmp test cmp cmp cmp jne cmp test test test test mov cmp cmp test cmp cmp dec cmp test cmp cmp test dec cmp cmp cmp test test dec test test cmp cmp test cmp jne cmp cmp cmp test cmp pop cmp test cmp cmp cmp mov test test test test cmp mov cmp test cmp cmp cmp mov test cmp cmp test cmp add cmp cmp test test test mov test cmp cmp test cmp mov cmp cmp test cmp cmp add test cmp cmp cmp test mov test test test cmp cmp add test cmp cmp cmp test lods cmp cmp test cmp cmp test je cmp test test test test add cmp cmp test test cmp mov test test nop cmp cmp jne test nop test test test mov test cmp cmp cmp cmp cmp jne cmp nop test test test mov cmp test cmp test test push test nop cmp test pop nop test test test test push cmp cmp cmp cmp cmp push nop test test test cmp push test cmp test test push test nop cmp test nop push test test test test cmp push cmp cmp cmp cmp nop push test test test cmp test push cmp test test test call nop cmp test nop test add test test test cmp cmp ret jle jg cwtl repnz mov mov add movsb mov sub aaa sar add adc cld or pop cmpsl (bad) xor out fsubr xor int mov data16 dec iret or popa adc dec mov and fldt xor or pop pop aad sbb cmp pop in (bad) popl sti inc jae sbb int3 push mov (bad) pop and push inc mov xchg mov fnstenv pushf mov (bad) addr16 or (bad) (bad) cli xchg jg ret mov scas push std jg cwtl repnz mov test outsb mov mov stos pop cwtl pop jmp ret (bad) scas mov aam ret (bad) iret fucomp out ret (bad) scas mov neg aam mov mov mov (bad) in fld test (bad) lret out in lret (bad) (bad) lock aad (bad) in fnstenv std lret in mov inc (bad) in mov sti xor pop and pop pusha pop jo add mov push xchg jge test insl das jmp fistp sub xchg add add in repz lret ss subl cltd stos mov loop xchg cli xchg cmp xor mov scas jle jg cwtl repnz mov mov add movsb mov or (bad) call push mov sbb mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov shll in insl jo and je mov and cmp and insl jo mov enter and cmp je sbb and aaa daa je sbb mov jecxz je mov and sub sbb and pusha inc cmp arpl cmp out pushf pop out and xor out je out mov mull je lea mov mull je fisubl jl out imulb stos and dec ret out mov dec jno aaa inc aad out je pop and je push jecxz mov jle in and mov in and mov in and mov in and mov in and mov in and mov in and mov in and mov in and mov in and mov in and mov in and mov in and mov in and mov in and mov in and mov in and mov in and mov in and mov in and mov in and mov in and mov in and mov in and mov jo or enter and cmp je mov xor out je (bad) and dec je sbb movsb cmp push popf xor sub jge and je mov and add mov out std cmp and int3 je out and mov jb out jnp jecxz push mov out and sub out mov out jnp jmp jnp das das or je mov je xor je fistpl sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb fldcw mov (bad) mov add arpl pop mov out jnp outsb lock lock jne (bad) out pop mov push jne out cmp out pushf cltd loope je mov and insl insb push jl je mov and clc mov jl mov loop je mov and xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg (bad) push push xchg push jecxz push xchg out cs int3 and cmp stos and insb into and cmp out xor jp je mov and cmp je insb insl jo cmc add cmpl insb insl jo pop or enter and cmp and insl jo mov je mov and cmp and insl jo popa or enter and cmp and insl jo ret mov out std cmp and test out (bad) mov imul sub mov jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge loopne jge test and call mov and mov mov jmp mov cld fnstenvs and dec pop and test pop mov stos cmp popf je out scas addr16 cli scas addr16 cli scas addr16 cli scas addr16 cli scas addr16 cli scas addr16 cli scas addr16 cli scas addr16 cli scas addr16 cli scas addr16 cli scas addr16 cli scas addr16 cli scas addr16 cli scas addr16 cli scas addr16 cli scas addr16 cli scas addr16 cli scas addr16 cli scas addr16 cli scas addr16 cli scas addr16 cli scas addr16 cli scas addr16 cli scas addr16 mov subb std clc mov push mov in je neg mov jecxz pop into and and clc cmpsl mov enter popf (bad) int je mov xor mov movsb sarb mov std clc mov stos mov jmp mov jmp je (bad) fbstp (bad) test sbb je out mov or jne out mov jmp je push stos pop mov out je mov push (bad) cli mov (bad) call in je stos je push and out mov jae out mov jae out mov jae out mov jae out mov jae out mov jae out mov jae out mov jae out mov jae out mov jae out mov jae out mov jae out mov jae out mov jae out mov jae out mov jae out xor fistp add mov xor ljmp dec (bad) xchg aad mov insb gs and mov and sub jp sub sbb out je in je in je out and push mov outsb idivl dec je insb jge out insb jge cmp and cmp and out mov and fs jo rcr and push pop jne out daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out mov daa out lea push mov out je mov (bad) clc mov mov sbb inc jge and pusha mov inc adc stos xor insb pusha pusha ss sub sbb mov pop jo out je or stos sub cmp push mov and fnstcw daa push (bad) mov mov cwtl ds (bad) cmc (bad) js push xchg out sti daa out mov sbb out je mov mov in jle addl stos xor and or xchg sbb jae pop push shrl and push stos or scas test xor sub jl test movsb mov mov insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl cmp stos insl push jecxz loop out cs pop fimul clc iret enter (bad) clc lret leave call xor and pushl fild mov and mov lea push mov xchg or sub and fdivs (bad) rorb cmpsb out sub in cli and inc mov test jl cmp enter (bad) cli pushl outsb (bad) and sub out insl jl cmpl mov push stc push xchg sbb mov jge xchg mov sti cmp mov sti cmp mov sti cmp mov sti cmp mov sti cmp mov sti cmp mov sti cmp mov sti cmp mov sti cmp mov sti cmp mov sti cmp mov sti cmp mov sti cmp mov sti cmp mov sti cmp mov sti cmp mov sti cmp mov sti cmp mov sti cmp mov sti cmp mov sti cmp mov sti cmp mov sti cmp mov sti cmp mov sti cmp mov sti cmp mov sti cmp mov sti cmp mov sti cmp mov loopne je mov fbld push mov (bad) mov out testl sub out mov fild mov (bad) fbld out pushl lea std inc fs out insb ja inc aad and bound jp out and mov je lea or push jo test mov and std (bad) and ffreep shl and dec mov mov icebp sbb out jnp push dec jne out rcrl and ljmp (bad) clc ret out mov push xchg je out adc faddl inc adc faddl inc adc faddl inc adc faddl inc adc faddl inc adc faddl inc adc faddl inc adc faddl inc adc faddl inc adc faddl inc adc faddl inc adc faddl inc adc faddl inc adc faddl inc adc faddl inc push mov mov add mov mov pop and das sub mov out push mov ret fild mov aad and bound arpl insb push fldt stos arpl inc iret xchg out jnp ds jne sbb ss jae out and mov sbb mov jmp adc subl add jp daa je out leave add call and lock leave (bad) cmpsl out cs in fisttpl ss mov jecxz movsb ds and ret sub mov cmp je rclb inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc mov pop inc xlat out jo sbb mov mov sub out idivl (bad) ljmp mov out jmp mull je test ljmp in stos cmp out pushf jne fisttp ljmp testl and and pusha sbb xlat and xor and ljmp je out icebp or inc adc stos xor mov xor fs idivl jg mov mov jecxz ss and push sbb inc lea push mov lret cmc jle and ffreep or and sub sahf out je mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov idivb mov std push data16 mov jp je out mov out je insb ja inc aad and insb outsl jo lock xchg outsb lods aam out std push data16 mov jp je out mov in je insb ja inc aad and outsb lret cmc jle and stos jmp cmp and mov out fild mov popf and insb mov std in dec je out jo or je insb ja inc aad and out push mov push nop je out and dec idivb leave cmp test mov movsl lock out je mov jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle jecxz jle ss and pop lock sbb cmp stos and inc aaa test jo clc cmp enter fistp out stos cmp mov movsb ds and mov out je out cmp mov je out sub arpl je fs mov mov cmp out pushf gs mov inc jmp out mov mov insl jo or leave dec sbb push mov data16 mov out je out mov jecxz sub dec and cmpsl je out jne out push out leave bound fs inc push aaa jne out xchg roll dec adc xchg roll dec adc xchg roll dec adc xchg roll dec adc xchg roll dec adc xchg roll dec adc xchg roll dec adc xchg roll dec adc xchg roll dec adc xchg roll dec adc xchg roll dec adc xchg roll dec adc xchg roll dec adc xchg roll dec adc xchg roll dec adc xchg roll dec adc xchg roll dec adc xchg roll dec adc xchg roll dec adc xchg roll dec adc xchg roll dec adc xchg roll dec adc xchg roll dec adc xchg jo pop call and ljmp testl and and (bad) repz push addb repz and mov je insb ja inc aad movsb cmp fdivl out jne out icebp xor fisttp mov lock insl jo hlt aaa je mov fbld insb ja inc aad movsb ss and or and ret sbb je stos and mov pmaxsw shl je mov and mov repz and xor cmpsl lock out je std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std cmp std dec mov and inc loop jne out mov lahf and lahf in out jne (bad) in mov out je sbb je call and sbb pushl out sti mov xor je ficompl lock and es call and out mov arpl pusha mov xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push dec (bad) out mov arpl push mov arpl je fidivl or xchg push dec stos out mov mov add fiaddl rolb push adc cmp out dec jmp and out jnp (bad) and and das lock out je shlb je xchg add mov out sbb out je push mov ret sub and pop jne out fwait inc sbb push mov fucomip mov (bad) and ffreep and push mov mov out je aas leave repnz add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop (bad) and mov out je push mov mov out je (bad) fisttp mov out je push mov mov out je repnz mov imull lock fisttp cmp fisttp jle and dec jo out je sbb ss mov mov data16 mov cmpsl ffreep cmp and mov sub dec and and ffreep and push mov mov out je out je scas mov push mov mov mov out je movsl bound jmp bound jmp bound jmp bound jmp bound jmp bound jmp bound jmp bound jmp bound jmp bound jmp bound jmp bound jmp bound jmp bound jmp bound jmp bound jmp bound jmp bound jmp bound jmp push jne out push mov out mov and insb jg inc aam loope out je fisttpll ljmp popf xchg fisttp inc out lock and cmp stos xor insb pusha fs push pushf mov out int out je daa and ss sub ss (bad) idivl adc fldt je adc std jnp pop js and jo out (bad) ss mov out mov out je iretw je out and cmp out or out jne out and (bad) xor (bad) mov mov loope push cltd cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int pop cltd int insb push js and jno out or out xchg push mov out std cmp and (bad) jo out mov push in mov stos xor push insb cmp fldt fcmovnu repz out je and xor adc fs or mov mov and daa xlat out movsb push jae mov and mov lea sbb out hlt in sbb xor stos or divl inc jb jne out xor push and pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd pop fiadd xlat out mov stos and and sbb and jo jmp gs and js mov insb gs scas insb jno cmpsb and sub xchg es inc movsb test sub outsb fdivp jnp and and mov lea sbb out xor sbb xor test push mov loop xor inc mov and jo ret push cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret cwtl ret xor and cmc jp sub jmp jbe sti das idivl testl fcomps in inc mov call and (bad) and lret out mov and idivl mov call and jp das je insb pop js sbb je out je in je in je out and push je push fwait gs and je push lods fs out je movntq out icebp jns and stos push cld addr16 mov push iret fs out je insb pop js sbb je (bad) jmp (bad) mov fldt cli fs push or xor out inc test xor leave lods lods out sub mov je mov or out je mov cs inc out jl clc idivl lret test add push xor mov push xor mov push xor mov push xor mov push xor mov push xor mov push xor mov push xor mov push xor mov push xor mov push xor mov push xor mov push xor mov push xor mov push xor mov push xor mov push xor mov inc data16 mov and mov out idivl jbe or and cmp fdivs out and push (bad) jnp out testl ljmp inc sbb jbe out jbe sbb std inc data16 mov and mov mov je out and or popf sbb sbb in jae out mov sbb mov out cmpl cmp xor call loope cmp and leave cltd out je call and out cmp and and stos je out bound icebp bound icebp bound icebp bound icebp bound icebp bound icebp bound icebp bound icebp bound icebp bound icebp bound icebp bound icebp bound icebp bound icebp bound icebp bound icebp bound icebp bound je mov or out jo out je sbb push mov jnp je outsb movsl push mov (bad) je push fdivrs out jmp inc adc stos xor (bad) jmp add loope pop out je fidivr leave in stos inc mov adc cld movsl lret test test jmp ret and cmpsb insb jne jmp fidivrl ds jl mov out je mov and and push push je,pn mov adc out jmp xor add mov out inc inc or and mov adc xor jl mov idivl mov outsb mov mov push jne out jmp pop out je insb mov dec mov out je sti sub mov push mov mov divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl lods divl fs and out je insb lods pop mov fidivl stos icebp cltd out je cmp jmp bound mov and lods inc mov xchg jle sbb cmc push out je outsb jne xor mov je mov int3 mov mov das add mov push (bad) and mov mull je aas test stos push sbb je cmp stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl (bad) stos arpl stos jo out jnp daa das sbb call jns dec fs enter xor sub jl push scas mov jecxz loope and mov fs mov popa hlt sub pop jg out xchg insb xor imull mov and jne out push std (bad) and jo inc sbb cs cwtl aaa xor loop mov sbb faddl inc pop into stos inc sbb xchg pop je test mov and fist inc (bad) je out mov out push out test std repz xor sbb (bad) mov and dec popa sbb add (bad) push inc (bad) out mov bound ljmp bound ljmp bound ljmp bound ljmp bound ljmp bound ljmp bound ljmp bound ljmp bound ljmp bound ljmp bound ljmp bound ljmp bound ljmp bound ljmp bound ljmp bound ljmp bound ljmp bound ljmp bound ljmp bound ljmp bound ljmp bound ljmp bound ljmp bound ljmp bound ljmp bound enter fistp leave orl sub inc sbb leave mov insl sbb (bad) and (bad) push sbb mov inc mov sbb out (bad) inc adc mov enter fmuls enter fbld fcoms gs iret mov push (bad) sti mov inc add xchg push pop rclb enter fistpll leave mov sbb iret xchg push adc rclb stc mov inc add mov decb leave (bad) mov push xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl xchg rorl inc nop inc sbb call mov adc test daa fadds pushf lahf add mov xchg je iret mov fcoml inc adc pop sbb cmp movsb push adc xchg inc and xchg inc adc push adc mov push cmp (bad) dec xor (bad) dec add sbb cld mov xchg mov enter fmuls leave repnz out jne out jne out jne out jne out jne out jne out jne out jne out jne out jne out jne out jne out jne out jne out jne out jne out jne out jne out jne out jne out jne out jne out jne out jne out jne out jne out jne out jne out jne out jne out jne out jne out jne pextrw sahf inc sbb out (bad) push add (bad) je iret (bad) inc adc sbb cli (bad) push aaa rorb je iret (bad) inc adc sbb out (bad) push aaa rorb je iret (bad) inc adc sbb leave movsb dec sbb xchg icebp mov ljmp daa fcoms inc pop into mov dec sbb add (bad) push xor mov addl mov into xchg and xchg inc adc rolb pushf mov fisttp fidivl pop fcoms cmp mov leave push mov movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl push popf movl rcll fbstp fadds push sbb rolb sub and xchg push add mov rclb pop je lock dec adc iret xchg cld out push imul and xchg push add mov rorl leave mov xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret xchg push push iret pcmpgtd aam sbb mov gs mov dec lds fcoml dec add mov push fadds (bad) mov inc add xchg dec pop cld addl push je bswap mov inc add xchg dec sbb mov mov into out (bad) outsb sbb daa roll (bad) pushf inc sbb rcll fs xchg inc xor (bad) dec add sbb fadds dec adc out jmp sbb and mov mov cmovs rclb sbb out dec push sbb daa cmc movsb push adc xchg inc xor xchg inc pop leave mov clc lahf ja push dec and mov in and jg in and jg in and jg in and jg in and jg in and jg in and jg in and jg in and jg in and jg in and jg in and jg in and jg in and jg in and jg in and jg in and jg in and jg in and jg in and jg in and jg arpl fbld mov mov dec mov sbb fmuls enter fbld fcoms popa add xchg dec push enter ljmp fadds inc je xchg mov dec adc mov fadds pushf xor fisttp rorb dec cmp mov mov sbb mov fcoml inc adc xchg and (bad) push xor mov aam inc je fcomi mov inc add (bad) dec add xchg out pop mov push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push roll dec push enter fistpll rorl fisttp iret xchg dec push popf mov pop enter repz pop add (bad) ja aad dec adc mov dec popf movsb push adc xchg inc cmp lea leave iret add out test int push daa aad dec sbb sahf imul (bad) sbb aaa call xchg push adc aam push sbb mov loope dec sbb mov loope push push iret (bad) dec add (bad) push pop aam dec sub xchg dec cmp test mov sbb jns mov sbb popl ror jb fidivl add les pushf sahf or mov mov sub daa aad dec sbb lds pushf loop fisttp push mov and xor inc sbb je out and fbstp and out je xchg (bad) mov enter fildll fisttpl dec adc btr enter roll pusha lcall push add sahf add fcomps inc je ds mov imul sbb or push sub mov pop push and fbstp and out je scas rorl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) add add jmp cmp mov out subl push jne adc dec idivb arpl test fisubrl add mov rorl leave mov lcall repnz dec into mov rorb les mov mov add mov in mov adc aad inc jnp into lret mov fisubr stos sub sbb fcmovnu xor xchg jbe sbb adc pusha jae icebp in cltd xchg bound cmpsl push inc xchg xor xor jl ret or lahf or cmp or imul sub (bad) and pop and ret cmpsb cs jmp clc adc xor mov hlt xchg insl inc movsl subb adc or adc lock mov aas jle out cmp sub ds jg idivb arpl shl dec add test mov push mov leave repz or into mov rorb les cld ss add mov in dec inc adc sub mov aad inc jnp into lret loop faddp sub mov stos scas lods (bad) enter mov inc mov add and jbe sbb xchg adc and cltd pusha bound cmpsl push xchg xchg int3 movsb inc sbb pop out in add or jns cmp lahf cmp adcl sub (bad) and in xlat push and pop cmpsb cs ret lods inc stc adc mov mov hlt xchg xor fsubrs insl adc orb lret mov dec mov aam sti aas je out sub ds jg mov dec imul sar dec arpl test cmc sub sarl mov pop pop mov sbb lcall repnz dec into cmp sarb ss (bad) and pushf dec movlps in mov aad sub push hlt lret loop faddp into fnstenv (bad) enter lods jmp dec call mov lods push rep inc in scas push loopne mov rcr test lock imul aad xor js push testb out in xchg mov rorb xlat mov mull jo cmp or (bad) push add repnz outsl test xchg add xor hlt std xchg and mov enter cmpsl jne lds adc push cmp frstor dec cmp in and mov jno cmovle push cli movsb add mov add lahf das ds test (bad) orl and out jnp jo mov jae push (bad) pop inc dec adc stos push dec repnz sub xchg xor cmp pop sbb (bad) sbb dec push sbb cmp xor fwait scas xchg jno inc int3 popf (bad) mov fild push pop push inc and mov push xchg mov (bad) rcr inc movsb aas ja inc je imul add pushf inc pusha lods std (bad) jmp loope jns sbb xchg (bad) mov and xor mov add outsl (bad) out rorl xorl jns adc xor dec insl jns lcall clc sti hlt mov sub shll cmp enter pop jg push adc adc add lds mov mov lahf inc (bad) pop aas push sbb xchg stos aaa or xchg dec xor fidivrl jb or lods mov (bad) inc lods (bad) jle (bad) in sbb das leave mov mov divb call dec mov mov int3 ljmp or push mov imul add dec std ficompl iret rcl cli in jae dec (bad) punpckhbw or rol scas jb xor stos fincstp add jp adc lret sub enter mov out fsubl dec ds popf and ret pop lea cmpsl je adc ret jmp add sti inc dec push (bad) jbe sub push out aam mov fptan ret push aad adc test pop popa in lods sbb jmp (bad) cmc lcall sbb (bad) fistpl push leave iret or push pushf sbb repz into mov (bad) fs (bad) or mov cltd std imul fwait and xchg mov insb rcl sub sbb mov push movsl in outsb push mov add scas jl out icebp ljmp or xor stos ret daa mov jne (bad) or (bad) lret and adc fwait jge mov mov jnp lods jo mov stos push icebp mov (bad) lea aam inc loope (bad) xor mov mov sbb lcall fsubr test enter inc mov fs mov mov dec pusha inc ficom es scas xor jae jne or (bad) sbb hlt movsl test mov lock clc loop xlat jo xchg ficompl test pop fld repz scas aas dec insl xchg sbb xchg pop pop cltd xor add sahf sbbl insl push pop and jbe adc mov cltd out arpl cmp movsb daa in sub sbb out or pop sub addr16 cmp lea lahf rcrl es in aaa pop xorl push add push das pushf cmpsb adc inc push adc mov hlt outsb jecxz fildll cmp push pop mov scas dec inc icebp call pop popf jle lock ja mov xchg aas sbb pop push jg mull pop xchg test fldt (bad) mov jnp inc xor mov stos mov inc or (bad) sub jle jmp jne fs sub add insb pop dec or cmp xor jecxz out or arpl mov cmpsb dec jmp or mov icebp mov pop jecxz fmul ds js ljmp lds jge popf dec adc lcall aad inc inc mov sbb mov push clc fcoms and cmp ret mov mov lahf mov stos sbb fmull daa repz xchg iret cmp rol daa (bad) lret data16 push rcrl mov ss in ffreep iret xchg jae push mov sub sbb fimul pop js mov add mov fnsave popa je repnz ret xchg test push mov and (bad) out mov mov mov push or xor fstps enter bound es ret push outsb subl adc xor jno inc repz imul lret sub pusha sbb clc dec pop mov aas sub xor mov sbb mov or and popa cmp dec xor inc and sbb xchg inc xor push mov push test sahf imul dec dec mov (bad) dec repz dec xchg and (bad) fldl lret faddp pop pop jb into repnz adc mov mov mov push fwait insb call in xchg mov test js cltd lcall or popf xlat pop int3 jae lcall push or aam and mov sbb test cmc pusha cmp xor bnd lret loop cld leave and cmpsb adc test gs sbbb and es or push sub out pop stc loope mov insb (bad) xchg jecxz mov sbb mov (bad) je mov cli jne in arpl fsubrs shrb dec xor pop push ret jnp std or out div fidivr and push aad insb ja inc ficoml jecxz add pop dec (bad) (bad) push mov adc xlat and pop cmc lock xchg pop cmp mov jmp (bad) or add sub mov push adc insl xor loopne xor lock sub stos xor out mov mov cld pop in fisttpl inc test sbb push adc jl pop sbb push dec cmpsb hlt dec mov inc (bad) inc repz sbb jb inc shlb sti rcl cwtl dec push dec push jmp xchg cli cs xchg push fimul push (bad) mov daa lret pop mov pop (bad) dec mov cli mov int ret nop loopne into loope movsb pop or ror jmp je xchg hlt or adc xchg lcall mov ja jae add repnz push jecxz aaa aad lahf inc jbe mov push loopne pop and sbb push clc mov repz out xlat fbld bound addl in add mov stos sbb push cltd mov (bad) and sub push push jne adc in jmp dec mov aam inc lret hlt pop insl xchg ss push fld stc mov std js out data16 movsl ljmp icebp cli (bad) pop cmp adc jae cmp arpl pusha jb jle cmp mov loope (bad) ficompl xchg and outsl sub or enter jns cmp inc mov mov inc or sub sahf orl pop xor jo pop ret pop inc dec push xor sub cmpsl push inc ja movsb sub lret das scas jnp sbb leave lahf sbb xchg or mov xchg jge xor popf in push fucomi xlat outsb imul mov dec xchg fwait cwtl aas bound xorl test cmpb add push cltd inc lods out faddl sub pop xor push jne adc in jmp dec mov aam mov hlt out xchg inc rol pop fld ss push js stc data16 std ljmp icebp mov je (bad) jae cmp imul push cmpsb jle cmp jb xor (bad) ficompl xchg sbb xchg pop outsb sub dec or enter or sub and mov mov iret jo pop ret testl sub movsb sub lret das addr16 gs pop scas lahf sbb xchg or add xor in jge out shrl push or add and xchg clc arpl xorl test cmpb add daa push pop sbb push (bad) mov inc and sub push push push jno jmp in mov mov mov out xchg inc lret lds insl ret push push fnstcw js out mov icebp mov je (bad) jae dec jns (bad) fildll pusha push (bad) jle add jb xor dec ficompl xchg sbb xchg pop outsb sub or enter jns cmp or or inc dec pushf sub sahf andl test xor mov (bad) iret dec dec pop adc cmpsl push xor sub push inc fwait add (bad) cmp jle jmp jo ret sub add sub mov scas cmpsl ds fnsave test lock imul dec enter push lds popf jmp mov iret pushf pop cmp ljmp and jno mov jp aaa cld adc popl add (bad) inc inc loop (bad) icebp es mov sbb les push test fmull divl ja inc lds pusha jle sbb (bad) flds pushf push add enter insb out mov (bad) xor leave (bad) lcall mov data16 ret dec outsb and mov xchg jmp inc add push xchg ds xchg sub movsb push pop sbb in mov xor pop cld shr dec out (bad) loope popf mov xor rolb mov push lock in push sub jg xchg out sbb call pop sub push push cltd imul sbb add cmpsl leave adc pusha lret pushf pop loop ss dec out xor addr16 cmpl ljmp mov fmulp (bad) xchg nop outsb (bad) jp mov push and sbb cmp dec aam scas cmp xchg sahf and int push cld pop mov and xchg (bad) dec shrl mov jbe mov movsl insl dec sub inc add test es mov (bad) xchg xor or stos jae xchg out call push out enter cmc sbb jg fdivrs mov lcall fimul xor lahf int3 rol or imul (bad) inc repz mov push in push cmp sarl inc inc sbb push mov add sbb adc pusha lret pushf in or test pop out ss dec adc (bad) rclb rolb sarb inc test adc into xchg xchg nop daa (bad) (bad) sbb push and sbb sbb icebp mov dec cmp xchg sub and shll cld pop int push push pop and arpl (bad) dec shll push movsl mov add mov add mov xchg jnp jno mov xor or jb mov push call cmc out adc fdivrs mov (bad) jns stos adc xchg mov xchg iret sub jecxz add pop stc inc imul push cmp inc aad jmp mov sub sbb add cmpsl leave pushf in or jmp pop loop test dec out xor adcl mov ss ljmp nop daa fdivp (bad) xchg mov sbb push clc sbb mov dec cmp xchg stc sahf cmp test bound mov int push push cld and arpl xchg fcmovnbe movsb loope cs lret push movsl mov add mov inc test mov xchg jnp jno (bad) xor mov loopne mov sbb push call cmc out enter mov fsubrs mov lcall ficomp xor cld xchg pop jecxz push nop xchg add push sub inc xchg cmp mov aad dec adc adc cmp pop pop stc (bad) dec or (bad) ja jecxz xor mov push push mov shr loop in mov sarl mov jbe gs imulb lods (bad) dec out pop lea xor or pop movsl leave jg std push adc outsb out mov repz sub fisttpll repnz push test mov (bad) sbb mov jae stos xchg cmp sarb pop sbb push dec cmpsl cmc dec mov add fnstcw inc ljmp pop mov (bad) mov vpavgb test xchg sti xor subb arpl mov pusha fsubl clc add addr16 mov pushf nop xchg out push push lret cmp sub aad mov daa or adc pop mov sbbb call fwait ja insb mov fcmovne push mov shr loop add push in jl and jbe adc sahf gs xchg out lea xor ljmp leave jg std push movsl cli outsb or out movsb ss sub bnd data16 xor stos jb mov add mov mov cmp fisubr jae testl jle cmc sbb dec addl add jns mov je inc ret pop jnp aam ret (bad) mov lds mov sti xor (bad) adcb push pusha arpl jge imul lahf clc outsl pushf int3 xchg out push push nop inc add les lret cmp xchg es daa or mov cmpsb pop mov sbbb call fwait ja insb mov fcmovne mov push push in push mov loope push in jl xchg mov and adc sahf gs imulb lods test lea roll add push movsl leave outsb or push adc xor mov mov sub bnd data16 xor push jb lods dec add (bad) sbb movb loop sub and addb fildll mov pop iret push movsl mov adc jmp insl mov (bad) out xchg pusha or pop jns cltd stc out aas sbb mov jae lcall or lods fdivl ret jg mov cmp push mov faddp aam sbb ss and and dec cld insb push nop fninit loopne stos repz (bad) jl ret fs sub std lock hlt outsl mov mov cmc xor xchg jne imul scas cmpsb js dec mov imul sti fcomps das mov mov push and jle cwtl mov lods mov xor cmp add addr16 mov test pop push sub (bad) stos (bad) push mov sub pop and lea pop mov pop iret push mov adc jmp test insl leave xchg in shl into test stc out pop sbb mov jae sahf lea or jnp ja ret jg mov popa ficoml dec aam movsb fisub lds sbb and insb leave or dec pop nop push repz xchg jl ret fs ds std sub mov mov out mov lret xchg and scas jne jo mov dec popf mov inc sub sti fdivr int xchg cmp adc addr16 jle cwtl and add add xor add inc xlat mov movaps (bad) stos dec push mov sub xchg and dec subb lea pop mov pop xchg push movsl xchg adc mov sar jmp insl mov test into out pop jns cltd stc or sbb mov sahf jp outsl jae lcall or fsubl mov cmp fisub ss sbb mov and and dec cld nop push repz stos xchg (bad) int3 ds fs sub (bad) rol lds pop mov subb add cmc fwait cmp push jle pop inc xlat mov lea insl cld add mov popf pop jecxz aaa test icebp ficoml iret imul test roll or cmp mov fisttp fdivp jl js mov fsubs mov stc ds repnz scas cmp mov lahf and loopne arpl xchg addr16 mov cmp xchg mov fs mov dec aam leave rclb mov (bad) arpl sub mov mov jge inc (bad) xchg dec xor loope xor stos and push dec ljmp xchg int cmp mov mov pop jp xchg adc pushf dec push xchg mov cwtl shl mov lds (bad) mov xor lds xor mov pop cmp mov dec inc push lea insl mov cld popa int3 test popf mov test icebp fimull imul test add jmp shlb adc mov xchg sub testl mov push sbb mov push ds scas xor lahf cmp inc loopne and into and push pop and inc xchg cmp mov dec aam leave shrb mov fistl pop arpl sub mov mov dec lods inc jg dec jge jb mov loope movsl or je dec push or xchg int lcall mov enter adc pushf dec xchg xchg mov cwtl shl mov in (bad) (bad) jno lds insb fwait mov pop cmp mov dec inc xlat lea insl mov add cmp lret popf mov test test dec jmp adc test nop lods or mov cmp mov mov xchg sub testl mov fsubs mov push ds scas xor lahf cmp xchg arpl jbe loopne pop into xchg lret and and inc mov fsub mov sarb pop cltd jp jmp divl xchg subl pop lahf push push push jnp repnz int3 push (bad) mov inc xorb (bad) mov mov js push movsl mov cli lds xchg dec stos xor dec jmp mov pop movsb and mov loopne inc fisttpll test hlt mov rcl inc aam insb movl stos dec shlb push push xchg cs cltd cmp in jge adc mov fmull cld lods outsl repz stc in inc add and jns mov int mov sti sbb mov bound cmp fwait xchg mov sub arpl call or add pusha in mov cmp xor fisub mov fimull xor push cmpsl (bad) test mov mov pop in fnop and cltd jo jmp push jle cmp iret jnp lahf pop int3 push (bad) mov inc addb xor mov lds ds add sub dec dec jmp mov shll push mov push test hlt mov rcl sub dec xchg movl stos leave shlb push push xchg cs mov xlat jnp jge adc or lods mov sbb stc in inc add pop fistpll mov adc sti sbb mov push jne and fwait bound cmp or cmpsb mov lcall incb ret dec or cmp dec test mov fidiv fisubl mov cmpsl dec test (bad) scas mov in fnop aas negl push jo cmp lahf push int3 push jnp repnz mov lea inc mov sbb lds movsl add cli xchg xchg ds stos jmp dec ret rcr sarl pop movsb mov push test cmc mov push shrb hlt dec xchg roll (bad) adc data16 push pop push out mov xlat jnp jge cmp in and fldt cld mov gs (bad) mov mov cmc jo call ljmp xrelease jb mov dec mov imul inc rclb nop adc jg packuswb or add rol scas jno xor add add cmp adcl xchg adc imul inc push or lahf dec sub and dec cmp pusha mov cmpsb je adc ret jmp (bad) push sti sub in test lret push aam iret sbb fwait cli lods inc sbb mov je pushf mov jae lds fnstsw les movsl pop cmp push popa dec xchg cltd movsl loopne aad sbb aaa pop and xchg dec (bad) insl push test sbb in mov (bad) jle ret in pop mov leave mov mov cmc jo call lea ljmp or dec mov imul inc cs std fstps into rclb nop sbb push push addr16 scas jno xor cmp add and adc sub imul dec sub and dec cmp pusha mov cmpsb je adc ret jmp add dec push (bad) jne sub xchg in aam iret popaw jp (bad) cli lods sbb or cmp je pop mov jae lds subb bound cmp loopne aad cltd mov sbb outsb pop push sub (bad) insl xchg test sbb in mov hlt faddl mov jle ret in fbld aas leave mov mov push jo repnz fs loop call ljmp repz or dec sahf jbe xor imul std fnstcw xor ficoml or sbb and inc add rcrl cmp and xchg mov adc mov test dec push mov sub push and dec cmp dec mov pusha je pop push push cmpsb cwtl adc mov ret jmp (bad) push test dec xchg in aam lret push push out mov or mov imul test std mov aad mov das jb popa and jno mov dec sub xor jge data16 divps icebp lds add mov out fcompl jne aas fstps loope add xor cmp mov jle scas mov std jecxz cwtl cmp ds movsb xor and (bad) (bad) aaa push add movsl test sahf pop leave sti jmp xor cmpsb dec out xor xlat adc and lea iretw dec into inc call dec bound fmull fcomi xor xchg (bad) and pop pop insb sbb cmp out in pop or test sub das sti lcall jae pop fildl std or xchg pop pop pop out movsb add mov sub sbb mov and add jbe cmp ss sub fsubr aam and push sub aas (bad) pmaxub xchg xor mov adc jge leave xor push push (bad) dec jne in adc inc jp sarb cmp in imul jb adc inc repz stc xchg add cmp jns dec cld mov inc push bound pop pop (bad) je pop rcrl lods push ret inc lcall mov jge inc out popa jg fsubrs fidivrl lret push insl clc mov in or test xchg outsl dec fs xorl imul jae xchg xchg push fcoml into inc xchg inc enter mov sub sub stos movsl mov pusha pop std fsubrp push test xlat aam sahf out xor xor and out jmp push nop aad xchg inc mov jns pop cmpsb push sbb xchg dec aas aaa or fimul ljmp ret aad and int3 mov sahf divb cmc push xchg sarb inc (bad) ret insl enter lods lret testl dec adc inc fdivrs xor cmp out es push fnstsw push adc mov xchg jmp cli ss add mov mov jecxz add jne arpl cmp or dec sub fwait iret sbb and jmp (bad) mov pop (bad) sub sti adc clc in out inc xor lods and and add insb je add add add add add and adc add add call add add and add add add add add and add add add or add add add add add add add add add add addb add add add addb addb add addb add incl add add add incl incl add incl incl (bad) incl add (bad) incl add add xchg or add xchg mov add ja js xchg xchg mov add add add or js mov add add lret ja mov jo add add add add ja ja add add add add add addb add xchg jo jno ja outsb into addb add inc js ja in in jo add ja js jbe jle movl ja xchg ja jbe (bad) out add ja ja xchg js ja out add add ja mov jbe call divl ja js (bad) clc mov in out out or ja mov mov add ja js addb add add push clc mov in call add out add decl add add add enter lock add mov or add add add out call add enter add add add or add add add add out pusha add add out pusha add add add add add push rolb out add add add add addb mov add add add xchg add add add add add add jle add mov add mov add call add add add add (bad) (bad) clc add push add jmp add inc add incl add incl add add add add add add jg add aas add add add add add add add add addb cmp add cmp add cmp shrb jmp daa cmp lret (bad) jmp xor jmp add jmp add incl pop (bad) decl (bad) lcall pop (bad) (bad) aas aas (bad) (bad) aas aas (bad) (bad) jg sub add and add inc add add add add add add add add cmp add cmp add cmp push dec add inc add inc add add dec add addl dec push add push add push add pop add pop add pusha add popa add add popa add push insl insl insl add jo jno jno jne jne ja js jns jns jge jge xchg pusha pop add push or xchg add sub int or add jnp add jg add andl add cmp mov cmp mov mov add addb aad add fild ltr xchg pop add sbbl aad pop add mov add lea add mov add xchg add mov add xchg sbb fistp push add cwtl add call xchg add mov xchg sbb loope sbb add mov or in jb add mov sbb in mov sbb lds es subl rorb and fstpl xor add xchg xor iret xchg ds cltd cmp fcoms ss xchg cmp add lcall in and call cmpsl and in test es lods daa add lods sub lock and lock and add mov add mov add mov add mov add mov add mov xor sti mov inc add xchg dec add sbbl mov test xchg mov stos mov stos xchg push lods xchg insb add xchg jo mov jno mov mov mov add cltd inc add fwait dec add cwtl push add sahf pop add mov dec add movsb inc add mov pop add movsb pop add test pop add lods inc add scas inc add mov add mov add mov inc add mov add mov dec add mov push add mov add mov addr16 stos popa add movsl imul lods addr16 cmpsl imul stos outsb add lods imul mov add mov jnp xlat mov add mov add mov gs mov jae jmp (bad) dec add ret pop add ret test add aad add fidivl jg addb addl add mov add xchg xchg add xchg cwtl add fwait pushf add xchg test scas pushf (bad) add popf mov stos lahf xchg add jb add mov xchg add mov movsb add cmpsl test test stos lods add test movsb add mov add mov add mov mov mov add mov (bad) cmpsb add mov scas add mov lcall sarb leave mov add int3 test add (bad) add ret les (bad) add leave leave add lret int3 add int add iret rolb rcl roll aad (bad) add fcom add fcomp add fstp add fld add ffree add in add ljmp cmc cmc testb add add (bad) incl add mov fst int3 int3 rolb add jb (bad) into fucomp fcomps sbb add ror mov icebp sbb fadds add add mov fcomp repz adc add fdivs into xlat fucomp (bad) int3 push mov add mov int3 shr repnz icebp fmuls sldt add add mov mov mov div jmp or add add mov mov adc icebp sbb mov add add mov push add repz or jg jle loop add add add add sbb push or push push sbb mov (bad) add cmp out add add add rcrb sbb mov adc or push push sbb mov sbb jo add add add int3 sbb sbb invd push mov sbb and je add add add adc sbb mov sbb arpl xor add add rclb sbb mov int3 jmp sbb icebp icebp ja push inc cmp sub add jmp sbb sbb sbb div js arpl inc inc sub add add sti mov mov sbb icebp fcom repz cld jmp fwait xchg outsb push dec sub add sbb adc sbb mov repnz mul movsl mov insl push add add add sti fnsave into repz jecxz test or add add (bad) and add cli repz fdiv sti mul push inc inc xor and add add dec leave add add sti idiv cli jmp sbbl inc das xor add add add xchg pop add add dec les add add add add add dec inc aad jns add add jmp add lahf mov and add add sahf pop roll add add add xchg push add cmc push pop add stc pop add add imul add add clc push jb add xchg out imul add cmpsb mov add call add add add add add add add add add add adcl add add add add add add add mov add fiadd add add add cmpsl add add (bad) (bad) clc add push add jmp add inc add jb add incl add add add add add add jg add aas add add add add add add add add addb cmp add cmp add cmp shrb jmp daa cmp jmp xor jmp xor jmp add jmp add incl pop (bad) decl (bad) lcall pop (bad) (bad) aas aas (bad) (bad) aas aas (bad) (bad) jg sub add and add inc add add add add add add add lahf lahf lahf movsl movsl cmpsb cmpsb cmpsb cmpsb mov les jns js add add lods lods lods xchg xchg xchg xchg xchg xchg mov scas mov int lret int3 jp jp pusha popa add add mov mov stos mov mov mov vshufpd addr16 mov add mov mov test jb xchg xchg xchg sahf sahf sahf cmpsl cmpsl test mov mov (bad) xlat xchg xchg xchg inc inc inc nop nop nop add xchg xchg xchg jg jg mov (bad) (bad) popf popf sahf scas scas scas ret ret (bad) iret iret iret lret lret lret lret lret int3 mov mov pop pop add add jle test test test mov (bad) (bad) xlat rcl rol rol push dec dec dec add add add jb add add jl (bad) (bad) jge jle xchg xchg xchg pop pop pop cmp cmp push aam aam lret jl dec dec dec rol addl jg mov push push push cmp inc inc inc inc cmp cmp rolb dec dec dec dec (bad) jp mov insb mov jno movsl xchg add jae addl test push inc inc inc inc inc inc inc inc inc inc inc inc inc inc jns jp int3 int3 mov pop pop pop inc aas cmp sbb lcall sub add cmpsl cmpsl cmpsl jb jb addb test jp insb insl pop pop pusha dec dec dec inc inc inc inc inc inc inc inc inc ja js rol mov fs jo in push loopne sbb mov fisttpl add jno jge jns jns xchg jge xchg xchg xchg jg sbbb dec dec inc inc inc mov test insl outsb jo jo pop push xchg jmp and pushf push aad pop int or sbbl add add mov insl jnp jnp jb test xchg mov mov pop pop pop fwait fwait pushf mov mov jle xchg xchg xchg stos stos lods xchg xchg xchg imul jo out lods daa call sbb mov (bad) test mov cmp add imul jg jg test mov lahf lahf lahf jl jge jge lods lods lods cmpsl cmpsl cmpsl lea int3 int3 int lret into mov lock in stos es and xchg sbb lea mov ret outsl outsl outsl jne jne jns ja ja addl jno jg jns jp je cltd cltd cltd rol sahf sahf sahf lods lods lods aad mov int xchg mov nop cs scas daa lock and popf sbb jg add add add mov jo jmp xchg addr16 js je js js (bad) (bad) addl outsb outsb mov mov mov test rcl (bad) cmc cmc imul out out mov stos xchg push mov cmc mov in stos sub mov add add add fsubl rcl (bad) jae jae imul jo jb jae jae je lea enter mov mov shl out (bad) fnstcw jnp mov jmp outsl jmp je mov add sbbl add add add in in mov (bad) insl mov insb insb insb jnp jnp movsl movsl rcl ror iret iret mov jb mov mov xchg add scas inc int3 xchg xor lret xchg inc mov add add add add out rcl (bad) mov mov cmpsb cmpsb mov mov (bad) (bad) ljmp ret pushf aas out movsb add sahf push fist aad add repnz iret lcall add add fidivl add add out (bad) fnstsw loopne jecxz jecxz ret ret add add cltd inc fldenv jmp add cwtl add addb test add mov lret stos pushf mov add add into sahf pop into xchg cmp mov in mov lock sbb mov add add add stos mov add add mov rcrl add mov lods lahf mov add add lods fisubl scas inc fisubrl add add add (bad) jbe out mov rcrl add add add movsl imul das mov add cli scas and add add add mov xchg pusha sbb add jb add add ljmp fcompl add add mov add add add add add lods inc rorl add mov es add mov add add add add add scas push mov cmp add shll mov add mov jb add stc mov add add add mov and fsubrs (bad) test cmc ret pop (bad) fidivl test add add movsl and add add add mov add stos outsb (bad) call jae test add (bad) mov loope dec lds add add add mov imul pop test mov jb (bad) cwtl push out mov add add cmpsb push mov iret lcall fldcw add iret xchg aas add add fisubl add fidivl add (bad) mov (bad) push add jmp add inc add inc add incl add incl add incl add incl add jg add aas add add add add add add add add addb cmp add lock jg inc outsl cmp lock cmp jmp (bad) pushl (bad) mov addr16 ljmp (bad) decl (bad) lcall pop (bad) (bad) aas aas (bad) pushl (bad) (bad) (bad) jg or dec popa outsb addr16 push orl add add outsl or add add add cwtl bound fsubs add ja (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add (bad) (bad) incl add add add add bound andb je add add add add add clc adc add (bad) (bad) incl add add add add bound andb inc add add add add add jo inc add (bad) (bad) incl add add add add (bad) (bad) incl add add sbb jl inc add inc add inc add xchg dec add sbb sub inc add inc add add xchg dec add sbb je inc add int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov sub push push push mov movl xor lea push push lea push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl call lea push call mov lea call lea push lea push push call mov add cmp jne mov push push call jmp mov mov mov push push call fnclex cmp jge push push push push call cmp jne push push call mov mov lea push push call fnclex cmp jge push push push push call mov mov lea lea mov mov movl call cmp jne push push call mov mov push push call fnclex cmp jge push push push push call call mov lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call jmp xor lea push lea push lea push movl movl call mov lea call cmp jne push push call mov mov lea push push call fnclex test jge push push push push call mov mov lea push push mov call fnclex test jge push push push push call mov mov lea lea mov call lea call lea push lea push movl movl call test jne mov test jne push push call mov push lea push call push push lea push lea push movl movl call add push lea push call lea mov call test je call mov lea lea movl movl call lea lea movl movl call lea push lea push lea push call push call mov push push push call lea call mov movl lea push lea push lea push movl mov call mov lea call push push push push call test jne lea push lea push movl movl call test je mov cltd and add sar mov mov test jne push push call mov mov lea push push call fnclex test jge push push push push call mov lea lea mov mov call mov push push push push call push call mov call mov mov lea lea mov call mov test jne push push call mov push lea push call push push lea push call push call add fwait push jmp lea call lea push lea push push call add ret mov lea call lea call mov lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call ret mov pop pop mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop xor ret nop nop nop nop nop nop nop nop nop nop nop nop nop sahf sahf sahf sahf pushf jge add (bad) (bad) (bad) (bad) (bad) (bad) decl adc add jle add jle add jle add jle add jle add jle add jg add jg add jg add add add add or nop jg add jg add or fidivrl add jg add jg add orb sbb or dec orb pop orb pop add andb andb subb addb add orb mov orb fadds or cld orb push orl sbbb add or cmp or pop orl add or cmpsb orl add orl add orl add orl add push inc push dec xor inc dec dec add xchg add jbe popa push popa jb jae inc je push add dec arpl add mov pop popa fs data16 popa outsb add js pop pop jbe popa push popa jb outsl jbe add mov pop pop jbe popa inc jb gs popa jb add pop pop jbe popa push je push popa jb outsl jbe add bound outsb add mov pop pop jbe popa inc jb gs popa jb imul pop popa fs imul xor mov pop popa fs data16 gs xor sub bound gs jns je insl inc jb outsl jb rolb pop jbe popa dec jb jae insb je push bound add push imul xor cmpsl add fs imul imul popa fs imul xor imul dec jae outsb add outsl add jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 bound popa jb jae inc jno add pop pop jbe popa dec bound popa jb or inc insb insb inc jne arpl outsb inc popa insb insb add push data16 je outsb add dec push pop push dec dec dec pop push gs gs jae add push add dec jae jb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl mov pop pop jbe popa inc js gs dec popa outsb fs gs add push data16 gs add scas add fs imul ss add bound push inc js gs imul pop pop jbe popa dec outsb push je push popa jb pop add jbe popa push popa jb popa je lock jbe popa dec jae je imul gs pop inc dec insb outsl add testl popa dec gs add add jbe popa dec outsb push je add test push imul xor add push imul xor imul fs imul xor add stos add fs imul cwtl add jbe popa push popa jb jae dec gs add jbe popa dec xor popa jb add pop pop jbe popa push popa jb fs add jbe popa dec popa je dec gs inc popa insb insb add jo pop pop jbe popa push popa jb popa je dec gs inc popa insb insb dec add pop pop jbe popa push popa jb outsl jo add jg pop pop jbe popa push popa jb gs bound fs data16 push add dec popa je outsb add add jbe popa push je dec outsl jbe add lret pop jbe popa dec xor jns mov pop popa insb insb insl jne add pop inc dec je outsb add push add dec gs add scas add jbe popa inc jb gs je add lods add jbe popa inc jb gs bound 