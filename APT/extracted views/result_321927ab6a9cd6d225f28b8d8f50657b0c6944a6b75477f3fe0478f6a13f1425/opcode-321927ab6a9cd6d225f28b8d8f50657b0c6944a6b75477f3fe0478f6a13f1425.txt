mov sub test push mov push push mov jne lea push push call lea push push call lea push call test mov jne lea lea push push push call add lea push push push push call mov test jne push call mov push push call test jne mov shr jne push lea push push call add lea push lea push push call add lea push push push push call push call pop pop pop add ret nop nop nop nop nop nop nop nop nop nop nop push mov sub push push mov xor lea movb rep stos stos lea push push push call mov mov cmp je cmp jne cmp je mov xor mov mov lea movb rep stos mov movl stos mov mov sub lea mov mov mov mov mov mov rep call add mov pop mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push push mov push push push push push push push call mov cmp mov jne pop xor pop ret push push call push push mov mov push push push push call test mov je push push push call mov add push push push push push call mov pop mov pop ret nop nop nop nop nop nop nop push push mov push xor mov cmp je push call mov mov mov cmp je cmp je push call mov mov cmp je cmp je push call mov mov pop pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop push push push mov xor test jle mov mov sub mov mov cmp jne inc inc cmp jl pop pop mov pop ret pop pop xor pop ret nop nop nop nop nop nop nop nop nop nop nop mov push push push push mov cmp jg xor sub mov js mov mov push lea push push call add cmp je mov inc cmp jle pop pop pop or pop ret lea pop pop pop pop ret nop nop push push push push mov mov push mov push add push mov mov push push call mov test mov jne mov push push push push call test mov jne pop pop pop pop pop ret mov push push call push call mov xor push push mov mov mov mov mov push push call mov push push push push call mov mov add mov mov push shr rep mov push and rep mov mov push mov add mov mov call mov mov add sub je push push call add push call add test je push call mov add mov test je add test je push push push call test jne push call add xor pop pop pop pop pop ret movl pop mov pop pop pop pop ret nop nop push mov push push xor mov mov movl mov cmpw lea jbe push push add cmpl jne mov mov test jle mov push push add push push call mov mov mov xor shr mov rep mov and rep jmp mov mov push push add push push call mov mov mov mov add mov shr rep mov and rep mov mov mov inc add mov xor mov mov cmp jl pop pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop push mov push xor push mov xor mov cmp lea jbe push push lea mov mov mov shr shr mov and and shr test je mov mov push push push call jmp lea test lea mov je or mov mov test jne test je mov jmp test je mov test jbe mov lea push push push push call mov xor inc add mov mov cmp jl pop pop pop pop pop ret nop nop nop mov push mov mov add mov test jbe mov mov add test jbe push push push lea mov sub xor test lea jbe xor mov mov and cmp jne mov and add add mov inc sub add shr cmp jb add mov test ja pop pop pop pop ret nop nop nop nop nop nop nop push push push push push mov mov mov mov add mov test jbe mov push add push mov call test jne mov test je add push call mov cmp je mov mov lea push push call add mov test je mov mov mov inc mov mov test je mov lea add jmp mov lea mov mov test je test je and jmp lea push push call test mov je mov add add test jne mov push add push mov call test jne mov mov jmp pop pop pop xor pop pop ret pop pop mov pop pop pop ret pop pop pop mov pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov push push push mov mov add push mov test je mov mov add test je mov test je mov mov add add test movl jbe mov mov add push push call add test je mov mov inc add add cmp mov jb pop pop pop xor pop ret xor mov cmp je cmp ja mov pop pop lea mov add pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop push mov test je mov test je mov mov push push mov push add call movl mov test je mov push xor test jle push mov mov mov cmp je push call mov inc cmp jl pop mov push call add pop mov test je push push push call push push call push call pop ret mov sub test push push je mov test jne mov xor lea movb rep stos stos mov xor lea movb rep mov push stos stos lea push push call lea lea push push call add test je mov push push lea mov push add xor push mov movb movb movb lea mov mov mov movb mov push push call mov add mov push call mov mov mov xor mov add shr rep mov and rep mov mov mov shr rep mov and rep lea push call mov push mov call mov mov mov xor mov add shr rep mov and rep xor test jbe mov xor mov and shl shr add mov inc cmp jb add lea push lea push push push call add test jne mov lea mov mov mov mov add mov mov pop pop test je push call add pop pop add ret nop nop nop nop nop nop sub push push push call mov xor lea mov rep stos stos mov lea rep mov lea push push push call mov mov mov mov test mov je mov test jbe push call mov add test je push push call add test je sub mov lea mov rep call mov test je cmpl jne push push call add test je push call mov mov pop pop pop add ret pop pop xor pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop jmp jmp jmp mov test jne cmp jle decl mov cmp mov mov jne push call test pop mov jne xor jmp andl mov push push mov call incl pop pop jmp test jne mov test je mov push lea cmp jb mov test je call mov sub jmp push call andl pop pop push pop ret push mov push mov push mov push mov test jne cmpl jmp cmp je cmp jne mov test je push push push call test je push push push call test jne xor jmp push push push call cmp mov jne test jne push push push call test je cmp jne push push push call test jne and cmpl je mov test je push push push call mov mov pop pop pop pop ret jmp sub mov mov mov push push mov mov mov mov push lea push push mov mov movl movl call add test jne lea push push call mov add cmp je lea push call add mov test je mov pop pop add ret mov lea push mov call add pop pop add ret nop nop nop nop mov xor cmp je mov cmp je push mov mov mov mov push neg sbb push and mov mov mov push call add xor pop ret mov ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov test je mov test je mov test je mov test je push push call add mov mov push push call add movl xor pop ret mov pop ret nop nop nop nop nop nop nop nop mov push push xor cmp je mov mov cmp jne cmpl jne mov cmp jne pop mov pop ret mov mov cmp jne movl mov cmp jne movl mov push push push call add cmp mov jne pop mov pop ret mov mov mov cmp mov jge mov neg movl cmp jl cmp jg mov mov shl mov mov mov neg sbb push not and push push call mov add mov mov push cmp jne call add mov pop pop ret call add xor pop pop ret push call add mov pop pop ret pop mov pop ret nop nop mov mov mov push push push push call add ret nop nop nop nop nop nop push push push mov test push je mov test je cmpl je mov xor cmp mov setne dec mov and mov mov mov cmp ja jmp mov test je dec xor mov mov inc mov mov mov mov mov mov mov mov and inc cmp mov je movl mov movl mov jmp mov mov shr add cmp jbe movl mov movl mov jmp movl mov test je dec xor mov mov inc mov mov mov mov xor mov mov inc mov mov shl add div test je movl mov mov mov movl mov jmp test jne movl mov mov jmp mov push push push call mov add cmp jne mov movl mov movl jmp test jne mov cmp jne mov mov mov lea push push push call mov add mov test je movl jmp movl mov test je dec mov mov mov inc xor mov mov mov mov shl mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov mov shl add mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov mov shl add mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov add mov mov mov inc mov mov mov mov cmp je movl mov movl mov jmp mov mov mov movl mov test jne mov pop pop pop pop ret mov mov dec inc mov xor mov mov mov mov shl mov mov mov inc mov movl mov test jne mov pop pop pop pop ret mov dec mov mov inc xor mov mov mov mov mov shl add mov mov mov inc mov movl mov test jne mov pop pop pop pop ret mov dec mov mov inc xor mov mov mov mov mov shl add mov mov inc mov mov mov mov test jne mov pop pop pop pop ret mov mov dec inc mov mov mov xor mov mov add pop mov mov inc mov mov mov mov pop movl pop mov pop ret mov movl mov movl movl pop pop pop mov pop ret mov movl pop pop pop mov pop ret pop pop pop mov pop ret nop mov add sub adc sub adc add xchg sub adc sub adc sub add adc add inc sub adc sub adc add dec sub and push mov push test je mov mov mov mov cmp je cmp jne mov mov push push call add cmpl jne mov push push call add mov movl mov mov mov movl test movl je push push push call mov add mov pop pop ret nop nop nop nop nop push push push mov push push mov push call mov add test jne pop pop pop ret mov push push push call add mov test jne mov push push call add xor pop pop pop ret mov mov push push push call add mov test jne mov mov push push call mov push push call add xor pop pop pop ret mov push add push push mov mov movl call add mov pop pop pop ret sub mov push mov push mov mov mov mov mov mov mov mov push cmp push mov mov jae sub dec jmp mov sub mov mov cmp ja jmp mov cmp jae mov mov test je xor dec mov movl mov mov shl add mov or inc cmp mov mov jb jmp mov mov and mov shr and cmp mov ja jmp sub movl mov and shr shr sub mov jmp mov lea push lea push lea push lea push push call mov mov mov push mov push mov push push push call add mov test je shr mov sub movl jmp shr mov sub movl jmp mov mov mov cmp jae xor cmp je xor mov mov dec mov mov shl add mov or inc cmp mov jb mov mov not and shr xor jne xor mov cmp mov mov je mov mov jmp mov test je mov test jne mov mov cmp jne mov mov cmp je mov cmp mov jae sub dec mov jmp sub test mov jne mov mov push push push mov call mov mov add cmp mov mov jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp mov jae sub dec mov jmp mov sub mov test je mov mov movl cmp jbe mov cmp jbe mov mov mov mov mov shr rep mov mov and sub rep mov mov mov add mov mov sub add sub mov mov mov mov jne mov neg sbb and mov jmp mov cmp jae mov mov test je xor dec mov movl mov mov shl add mov or inc cmp mov jb mov and mov mov and cmp ja mov and cmp ja mov push shr and lea mov push push call add mov test je shr sub movl movl jmp mov mov mov mov shr add cmp jae cmp jae mov mov test je mov xor mov dec mov mov mov add shl movl or inc cmp mov jb mov mov and sub mov mov shr mov mov inc mov mov mov shr add cmp jb mov mov cmp jae mov mov mov movl mov inc mov mov cmp jb mov push lea lea push mov push push push movl call add mov test jne mov movl jmp mov mov mov mov mov and shr and lea cmp jae mov cmp jae mov test je mov xor dec movl mov mov mov mov mov shl mov add or inc cmp mov jb mov mov and xor mov lea mov mov cmp mov jae mov sub mov shr mov mov mov inc jmp cmp mov je lea sub mov neg sbb add and mov add cmp jae mov test je mov xor dec movl mov mov mov mov mov shl mov add or inc mov mov cmp jb mov mov shr mov mov and add mov shr add mov sub mov mov mov mov and shr and lea mov add cmp ja cmpl jne mov cmp jb mov mov jmp mov xor mov inc mov mov dec mov jne mov mov mov mov shr and and lea cmp jb mov mov push push lea lea push push lea lea push mov push mov shr and and inc push add push push movl movl movl call add mov test jne mov mov mov push push mov push push push call add test je mov mov mov push push call add movl jmp mov mov mov mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add cmp jne mov push push movl call mov mov mov mov mov mov mov add cmp mov mov mov jae sub dec jmp mov sub mov mov test jne movl jmp mov mov mov mov mov mov sub mov add mov push push movl mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov add push push mov mov push mov call add pop pop pop pop add ret mov mov movl add shr movl mov mov mov mov mov mov push sub mov add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add pop pop pop pop add ret mov movl mov push movl mov mov mov mov sub add mov mov push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov mov add mov movl push push mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov mov sub add mov mov mov push push push call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov sub add mov push push movl mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov push mov push sub mov add push mov mov mov call add pop pop pop pop add ret mov mov movl push movl mov mov mov mov mov mov push mov mov mov sub add push mov mov call add pop pop pop pop add ret cmpl jne mov mov push push call add movl mov mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add pop pop pop pop add ret mov mov mov mov mov mov sub mov mov add mov mov push push movl push mov call add pop pop pop pop add ret mov mov push push call mov mov movl movl mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret cmpl jne mov mov push push call add movl mov mov mov mov mov mov mov mov mov mov sub add push mov mov push push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret movl jmp mov mov mov mov mov push push push call mov mov add cmp je mov mov mov mov mov mov mov mov sub mov add mov mov push push push call add pop pop pop pop add ret movl jmp mov mov mov mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov push mov mov mov sub add push mov push mov call add pop pop pop pop add ret lea add add cli das add insl xor adc add xor adc add dec cmp adc cmp adc add xchg add in add sahf add nop nop nop nop nop nop nop nop push mov push mov push push push call mov mov push push call mov mov push push call mov push push call add xor pop pop ret nop nop nop nop nop nop nop push mov push mov mov and shr test jne pop mov pop ret push mov test jbe push cmp mov jb mov sub cmp jl mov shr mov neg shl add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add add dec jne test je xor mov add inc add dec jne mov xor mov div mov mov mov xor div test mov ja pop mov pop shl pop or pop ret nop nop mov mov push push call add ret nop nop nop nop nop nop nop nop nop nop nop nop nop mov push call pop ret nop nop nop nop mov push push mov push call add test je mov mov mov mov mov mov movl mov mov ret nop nop nop nop nop nop nop sub push push push mov push mov mov mov mov mov mov mov mov mov mov mov cmp jae sub dec jmp mov sub mov mov cmp ja jmp cmpl jb cmpl jb mov mov mov mov mov mov mov mov sub mov add mov mov mov mov mov push push push push xor xor mov mov push push call mov mov mov mov mov mov mov mov add cmp mov jae sub dec jmp mov sub test mov je mov dec neg sbb and add mov mov jmp mov xor mov movl mov mov mov mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov mov lea xor mov mov mov shr mov mov mov sub mov xor mov test jne mov mov mov movl jmp test je mov and mov mov mov movl mov jmp test jne mov mov mov mov lea mov mov jmp mov test je movl jmp mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov add mov mov shr mov mov sub mov xor mov movl mov mov mov mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov mov lea xor mov mov mov shr mov sub xor mov mov mov test je mov and mov mov mov movl mov jmp test jne jmp mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov add mov mov shr mov mov sub mov movl mov sub mov cmp mov jae mov sub mov mov jmp mov add mov cmp jb mov mov mov test je mov test jne mov cmp mov jne mov mov cmp je mov cmp jae sub dec jmp mov sub test mov jne mov mov push push push call mov mov mov add cmp jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp jae sub dec jmp mov sub mov mov test je mov mov inc movl mov mov mov inc mov mov dec mov mov cmp jne mov mov mov dec mov jne movl jmp mov test jne mov cmp mov jne mov mov cmp je mov cmp jae sub dec jmp mov sub test mov jne mov mov push push push call mov mov mov add cmp jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp jae sub dec jmp mov sub mov mov test je mov mov movl mov mov inc dec mov movl jmp movl movl jmp mov mov mov mov mov mov sub movl add mov mov mov mov push push push call add pop pop pop pop add ret mov movl movl mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov add mov mov push push push mov call add pop pop pop pop add ret cmp jbe mov sub inc dec mov mov mov push push push call mov mov add cmp je mov mov mov mov mov mov mov push sub mov add push mov mov push mov call add pop pop pop pop add ret mov movl mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov repz add test inc add xlat inc add dec inc add jbe add pop inc add jbe add scas inc add nop nop nop nop nop nop nop nop mov push mov mov push call add ret nop nop nop nop nop nop nop nop nop nop nop nop push push push mov push push movl mov push call mov add test jne pop mov pop pop ret mov mov push mov push lea push push mov push push push push push push push push call mov add cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp je cmpl jne movl mov mov push push call add mov pop pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop sub mov push push push mov push xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov lea inc dec mov jne cmp jne mov mov mov mov pop pop pop xor pop add ret mov mov lea mov mov cmp jne inc add cmp jbe mov cmp mov jae mov mov mov lea cmp jne dec sub cmp jne cmp mov jbe mov mov mov mov shl cmp jae lea sub js inc add shl cmp jb lea mov mov lea sub mov jns pop pop pop mov pop add ret add mov mov xor dec je xor add add dec mov jne mov xor mov add cmp mov je mov mov lea mov mov inc mov mov mov inc cmp jb mov mov neg mov mov mov mov cmp mov mov mov movl mov mov mov jg mov lea lea mov mov mov mov mov dec test mov je jmp mov lea cmp jle inc mov jmp mov mov mov add inc add mov mov sub mov cmp jbe mov mov mov sub mov shl cmp jbe mov or sub mov add cmp jae inc cmp jae mov add shl cmp jbe sub inc cmp jb mov mov shl mov mov add cmp ja mov mov mov lea mov test lea mov mov mov je mov mov mov mov mov mov mov mov sub mov shr mov mov sub sar sub mov mov jmp mov mov mov mov mov cmp jg mov mov mov sub mov mov lea cmp jb movb jmp mov mov cmp jae cmp sbb and add mov jmp sub mov shl mov mov add mov mov add mov mov mov sub mov shl mov shr cmp jae mov lea mov add mov lea mov add cmp jb mov mov shl test je xor shr test jne mov mov mov xor shl mov lea mov dec and cmp je mov dec sub mov mov sub shl mov dec and cmp jne mov mov mov mov dec mov mov test jne mov mov add inc mov mov inc cmp mov mov jle mov xor cmp je cmpl je pop pop pop mov pop add ret nop nop nop nop nop nop nop push push mov push push mov push push push push movl call mov add test jne pop pop pop mov pop pop ret mov mov mov lea push push mov push mov push push push push push push push call mov add test jne mov cmpl je mov mov lea push push mov push mov push mov push push push push lea push push call mov add test jne mov cmpl jne cmp ja mov push push call add xor pop pop pop pop pop ret cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp jne mov push push movl mov call add mov pop pop pop pop pop ret cmp je movl mov mov push push call add mov pop pop pop pop pop ret cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp je movl mov mov push push call add mov pop pop pop pop pop ret nop nop nop nop nop nop nop mov mov mov mov mov mov mov mov xor movl movl ret nop nop push push mov push push mov mov push mov mov cmp mov mov jbe mov mov sub cmp jbe mov test je cmpl jne movl mov sub add mov mov mov test je mov push push push call mov add mov mov mov mov mov shr rep mov mov and add rep mov mov add cmp mov jne mov mov cmp mov jne mov mov mov sub mov cmp jbe mov test je cmpl jne movl mov sub add mov mov mov test je mov push push push call mov add mov mov mov mov mov shr rep add mov mov mov and add rep mov mov mov pop pop mov mov mov pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop sub mov mov push push mov mov mov push mov push mov mov mov cmp mov jae sub dec mov jmp mov sub mov mov mov mov mov mov mov cmp jae mov dec mov xor mov mov mov shl add or inc cmp jb mov mov mov and xor mov lea test je xor mov shr sub mov test jne test jne mov mov and add xor mov lea test je xor mov shr sub mov test je and sub mov and add mov mov shr cmp jae mov dec mov xor mov mov mov shl add or inc cmp jb mov mov mov and xor mov lea xor mov shr sub mov test jne test jne mov mov and add xor mov lea xor mov shr sub mov test je and cmp jae mov dec mov xor mov mov mov shl add or mov inc cmp mov jb mov mov mov and add mov shr mov sub sub mov mov sub mov mov cmp jae mov mov sub add cmp jb mov sub cmp jbe sub mov mov inc inc dec jne mov mov mov mov inc inc dec jne mov jmp mov mov mov inc inc mov inc inc sub mov mov inc inc dec jne mov jmp mov mov mov inc inc mov inc inc sub mov mov inc inc dec jne mov jmp xor mov shr sub mov mov mov inc dec mov cmpl jb cmpl jb jmp mov mov mov movl sub mov mov mov shr cmp jb jmp mov mov mov sub mov shr cmp jae mov mov sub mov lea sub mov mov mov add mov mov mov mov sub add mov mov pop pop pop xor pop add ret test je mov mov mov sub mov shr cmp jae mov mov sub mov lea sub mov mov mov add mov mov mov mov sub add mov mov pop pop pop mov pop add ret mov mov mov movl sub mov mov mov shr cmp jb mov mov sub mov lea sub mov mov mov add mov mov mov sub mov add mov mov pop pop pop mov pop add ret nop nop nop nop nop nop nop nop nop nop jmp add inc imul add (bad) clc in loope jae insl inc aad inc stos add cmpsb ficom es cmp mov aaa lret cmpsl std xor sbbl add (bad) pop cmp pop pop fscale in pop and insl nop imul mov and mov xchg inc in pop xlat negb jne and lret insl lret cs dec dec or or in pop fildl mov and insl int leave adc and lret or dec rcrb rcrl aad enter jmpw add test pop stc cmp test iret lret mov pop lret xchg or test dec test mov cmp call icebp cwtl movsl test sbb push fisttp rcr dec stc or lret leave mov enter leave aad mov enter leave aad mov enter cli ret mov mov in lahf out in insb jmp xchg and sbb push sub pop sub stos in fnstcw popa xlat (bad) movsl aad cld lret stos jg out decl in push cmp xchg je outsl jno sbb cmc push sub and cmp movsb loope stc xor jb loop mov js inc pop pop mov xchg pushf cmpsb popf push dec lods ja pop adc cmp scas out and inc jmp xchg xor lret push and dec mov fs loope jne cltd imul xchg mov popa int xchg adc ficomp outsl lret loop sub rclb cmp rcll xchg mov enter popa rcrl (bad) xchg mov pop fimul test and stos xchg or addr16 inc xchg ret sbb imul es dec ljmp shr sbb sbbl pop sub stos jmp ljmp or sub mov shll jnp pop dec pop fs mov mov xor pop xor outsb inc lods movsb inc sbb push mov shl dec pop jmp xchg xor fs jb pushf outsl and lods decb mov sti cltd aam gs rorl int3 push into inc pop or pop push sub jns mov fndisi(8087 xor cmpl rcrl call mov xchg idivb lods xchg out mov (bad) mov push pop jo jecxz loope sub test ja ret inc sbb pop cmp lods lea mov mov dec fisttpll shrd les add dec jg dec popf shrl mov scas adc (bad) popf mov insb jge mov push icebp jno leave cmp enter fwait xchg (bad) aas (bad) jp popa sub fsts xchg mov mov cmp push popa outsl push cmpsl int or mov loope into xlat adc cmp mov pop mov cmpsl inc sub xchg imul aas movsl xor sub enter dec imul push xor jmp daa scas inc fs adcl mov pop (bad) iret xchg pusha mov out and rolb add inc bound rcrl sub cmp sahf in jne mov dec repz adc ret or jp dec jno or mov clc stos dec in cwtl scas dec je mov xchg inc cmp lods sarl mov stc push sub inc inc pushf xchg int hlt fisttpll lods sbbl mov xor sub mov xchg sbb fcomi cmp mov mov sbb cmp stos sub adc jo fwait pop inc icebp jecxz cmpsb sub push dec pushf mov jecxz cmp jp fs lds loop iret icebp push popf imul adc pop xchg inc push repz pop outsl inc jmp push add mov das lods mov xchg dec push test mov (bad) repnz or imull mov inc ja out and push loop pop adc fstl outsb and or test addr16 mov dec inc mov loope dec push mov jae jge dec inc ret stc sub testl push dec call stos nop popf dec jno popf out (bad) sub mov fidivl jnp (bad) ss add mov aam popa adc fsubrl xchg inc jb inc nop xchg dec cmp daa jae (bad) rolb jg push sub mov out test mov push sbbb iret sbb push imul lret mov sub inc push jp lock mov xchg xlat jp sub add pop lret add pop pop repnz push mov lods aam adc mov or arpl inc js or inc mov imul and sti pusha or imull enter out dec outsl mov push mov stc lods insl xor std or add jns push fmul sbb jae daa cltd pop add clc xor jle dec push fbld or xorb out mov push cmp xchg pop mov dec mov icebp paddusw mov test popf mov lods pop fstpl dec aas roll inc dec repz fcmovne jno dec cli cmp xchg js mov bound jg dec mov in repz jp aad int3 mov or sub (bad) xor or loop xor add ficoml fwait cli aaa push lods inc divb sbb loop je mov inc xor pop imul lret pusha js xchg push lods dec out mov sbb fs mov in movb pop ds test cwtl lret xchg xor (bad) movsl movsl push xchg pop scas jns insl mov xlat fisub xor into cwtl lds cmp xchg hlt mov mov les lods rol or leave sahf xor xor cmp dec xor stos xor push mov js shlb (bad) xor mov test push dec inc add push (bad) sub cmpsb xchg sbb in mov (bad) (bad) ret sbb rorl addl (bad) lods mov inc sub out sbb mov pop sbb mov inc and movl aaa test ret loop gs addr16 push aam jg xchg ret scas sbb jmp mov adc sbb cmpsb push aas add insb scas cld mov pop pusha push xchg je jbe das mov and test jle sti jno push popf xchg cmp je jne rclb lahf pop lret lods xchg pop pushf or xor sar and add or sub aas mov push add xor and and ret sahf jbe lds jae jb js lods sub mov lods adc add aad ret push (bad) dec into je adc js sbb sub or fcmovne push jb push adc dec pop mov adc adc jge mov lock mov sub xor xor bound daa cmp mov popa xor (bad) push mov dec (bad) adc mov cltd xor lods xlat cmp fdivrl inc jae inc xor arpl aas lahf das test insb lods stos lret jb inc mov sbb push lea pop pushf pop lahf adc push addr16 pop xor sahf adc cs aaa add js cs outsb je dec in hlt jne pop je shrb mov xchg movsb les inc dec cmpsb gs dec scas in dec cs gs xchg cmp jecxz add cld nop push (bad) outsl pop lcall cltd out (bad) aaa cwtl mov bound inc lret gs xchg xchg (bad) mov mov mov pop (bad) mov cmp repnz cli pop into iret aad test jno jp outsw mov and xor cmp dec dec imul lcall insl push fmull xchg lods fcmovu jp (bad) sti add sub lods lods ficoml rcr (bad) in cmpsl xchg push cltd popa sub addr16 cmp jg mov movsb ss aaa or and shr (bad) mov pop insl mov and pop push das jecxz push clc pushf and pop add sub mov hlt movsb add fiadd jp lods dec cmpsb loope sbb nop (bad) repz jg lock bound imull mov les pusha push add rclb jne jge pop scas mov out adc push fcoml jmp stos jne fcomps mov dec inc dec call and loopne pop call ffreep rorb xor stc push mov and jl add (bad) enter lea pop aaa ljmp daa jmp add xor aad xlat mov push jmp add roll imull fstl mov or xchg or mov jbe in mov fwait pop jmp xor push in insl out mov aas clc fcompl out pop jge push int jns roll fnsave mov xchg adc mov fildl cmp shlb mov push cwtl nop hlt pushf shr jae jne dec jp test sbb xor and mov xor in xchg adc dec leave subl fsubs push pop or outsb aas cmc jp stos mov jns (bad) pop inc in push inc test mov ret cltd jge (bad) sahf insl (bad) out add stc addr16 jnp pop cmpsl lahf adc cmp lods out in mov jmp lret mov xchg jg mov pop push and pushf enter frstor add cltd ret std js push stos ret push inc inc jle or and add pop lock stos sub mov adc (bad) jle pop mov in push insb mov sub dec mov imull dec sub roll cltd mov pop test xlat or inc mov dec mov and mov imul mov dec bswap cli scas test ret leave fwait test leave push cmpsl push cltd leave ds mov ret rcrl jge lret lods fucom callw xor negl iret out inc stos push inc or add pop enter jle inc ljmp test sub sbb add mov push push frstor test and rolb gs fwait daa jo out mov dec nop or push scas push jge xchg clc adc not fs lock lcall lsl lods and xchg aaa inc mov bound jne pop or lods dec cmp sub sbb or (bad) pop loop out jnp insb push movsb gs adc mov mov or cwtl push (bad) scas add fs ja hlt mov movsb or or cmpsl js sub push insl adc fidivrl jl in in cmp sub outsl push lahf jb mov sub aaa ljmp add xor push imul dec (bad) clc jl jb xchg mov xchg or gs nop cmp das cmpsb in sub jecxz mov (bad) cmc jnp nop enter mov dec mov fs in int pop stos mov loope out popf fistp xor iret mov cmp cmp xchg sub jnp lret movsb add adc leave nop pop call push sbb dec mov rorb andl xchg test sub xor pop jp dec out pop dec int aad idiv adc mov hlt push in jp loopne insb loope jl (bad) ficomp aam nop test cld jbe cmpsl cmpsl dec ljmp pop push pop (bad) int call mov pop (bad) loope push push cmp or shrb xor inc xchg push lds mov jg mov jg pop loopne and or mov insl iret mov push mov mov adc mov and out mov lea cld jl negl and nop add aam jecxz (bad) ljmp rcrl xchg jb jg add rcrb mov xlat xchg cvtpi2ps (bad) mov and pusha ret fistl nop test les fist imul push mov jns test pushf shrl bound cwtl int insl xlat cmp push xchg loopne mov jmp sti pop bound mov sub pop pushf int test jo daa xlat dec out sbb fs fisub fs xlat inc pop pop push dec lcall jne sub pop inc push jg dec call sbb (bad) mov sub mov push outsl lods nop cli ret fidivrl ljmp out bound jae xchg or lea jo add jg jl ret push dec xchg (bad) mov aam dec fisubr cmpl pop inc incb mull orb xchg dec sub pop add xlat dec jg loop sbb fmuls ror les fmull mov push int3 inc adc inc int3 pop (bad) repnz (bad) mov sub int3 jl js jo (bad) xchg arpl enter test fs fisttpl sub or iret insb hlt mov push sbb jl cmp stos bound inc sbb ljmp jb cmp cli ljmp into jns and pop adc mov or mov pop pusha push in mov adc jge jb pop push push mov scas push movsb inc push and mov mov std adc add pop adc cs mov in adc js lods je jnp hlt adc pop lods inc and stos (bad) xlat mov cmp adc cmp mov adc cmpsb pushf xchg cmp push std adc ja sbb xchg xor xchg or xor mov jl add push sub adc adc test adc leave mov sbb mov pop pushf mov lret (bad) mov or hlt add mov andl icebp and mov xchg pop or mov sub mov and imul dec or xchg cmp mov mov cmc pop call push bound pop mov and imul sub mov mov cmc (bad) scas mov jmp push xor xchg inc jns in pop dec or adc ljmp and fldl or xchg cltd (bad) pop pop adc sbb icebp add pop (bad) jl adc fdivrl test mov je scas cwtl mov leave lahf inc js mov lds scas (bad) cmpsl outsl les outsb jne lock pushf loop push test mov sti cmp xor ss inc mov pop or (bad) mov xor imul les dec xchg sbb xor (bad) mov sbb leave xor mov push ret dec fpatan icebp cmp clc jne (bad) movsl jb pop dec xchg mov push jo daa aaa cmc inc (bad) jbe jp (bad) scas sub jno mov dec cs sbb jle cld loope fiaddl cwtl pop adc mov loop sbb push lret ss inc es xchg test loope mov popf leave lret push dec movsb iret xchg xchg leave cmp xor (bad) ds push addr16 mov mov mov or fprem1 jae or rolb lea mov sarl fwait call push xchg pop or push pop pop and loop lea lcall mov out cs nop adc jmp imul loope inc mov sarb push repnz in dec mov and sub adc (bad) jb mov enter xor and inc stc sbb js push arpl mov sub out inc (bad) pop scas sbb fwait loopne lret nop stos mov (bad) loop stos mov fcomi pusha mov js pop nop mov jno gs cs cli enter push inc rorb fcmovnbe into std mov mov fcomp push mov les fstpt movb mov or (bad) sti popl mov jge inc fcoml popa sub clc mov in jnp clc cs add pop fs push add mov add addr16 ja ret jecxz and mov repz xchg add hlt mov sub ss and and bound lds push dec push (bad) mov and jl xor sbb sub sti js mov inc les arpl jecxz pushf or jnp jl inc sbb add orl lds mov loope sub std in sbb mov jb cld pop push add sub cmp push mov clc repnz outsb loop sbb push jmp mov aas mov insb int3 mov jnp out pop loope cmp inc mov stos xor add jnp sub mov in or xchg ret std hlt dec xchg (bad) shrl sbb stos mov jmp ja (bad) jmp inc das pop addr16 test sbb inc push rclb cmp gs (bad) pop inc in mov adc hlt inc ss push mov push mov push lret mov ljmp les aas fldenv stos cmp and dec inc enter or cmp mov jle imul mov pop pop repz or xchg push adc in stos mov xchg and jecxz mov push jmp dec fcomip sti aas insb rcl cwtl mov fbstp jno xor inc (bad) aad int xchg repz jg inc and in (bad) fnstcw jae mov mov test cmp jno int (bad) and fsts je mov sub jg add jmp pop std push sbb fildl pop and shrl adc shld test in inc jmp sbb cmp sbbb in int3 int outsb xor fstpl mov xchg ret jp jns mov mov xor divb and pop jmp mov scas fisubr push lahf dec enter test xchg or cmovs cmp mov iret lds mov ljmp insl jno sahf lock lock clc pop jmp mov je cmp lret jecxz in leave mov pop (bad) loopne pop xchg cmp pop pop inc imul sub fsub and (bad) fwait mov pop pushf mov daa jmp dec fldl sbb pusha imul in mov je ret xor mov jae,pn movsl (bad) loop mov cmpsb out imul nop gs inc (bad) fucomip (bad) sub inc stos dec xchg pop push sarb xchg pop cmc xorl and jns push insb movsl popf pusha mov sbb nop jo in test bound pop (bad) adc gs cli cmpsl pusha sahf mov adc mov sub adc js sub cli into lahf hlt add inc jno push inc dec mov mov sub add imul mov (bad) sub stos mov push faddl and pusha cmp in scas gs rep out adc inc sbb jl aam xchg cmp sub cmp ss mov repnz fnclex (bad) (bad) cmpsb insb aam and lods out xor pop sar push xor mov lock mov push xchg sarb shll jge inc in and xor adc jno andl push push je jecxz inc fmuls cmp repz outsb (bad) fdivrl (bad) jo bound or movsl (bad) (bad) or pushf int xchg cmp repnz addr16 sbb sub ret sbb dec mov stos rcll out (bad) out out mov outsl xchg mov imul cld dec pop hlt fidivr repnz dec pusha and xchg and lods jge dec vmovupd pxor inc loopne out mov idiv cwtl sbb call mov out or repnz cmpsl dec (bad) aaa mov lock dec xor mov pop (bad) lea pushf and pop mov lock sbb in inc inc adc shll lret mov lock cmp pop data16 mov aad push aaa mov jg jge jmp adc in testb fstpl cwtl leave cltd out and fisub mov mov sbb xchg repnz adc push jne outsl jg sbb adc pop iret xchg dec cmpsb mov xchg and mov repz mov mov pop dec xchg xchg bound sar push mov je pop pop xchg cmpsl cmp push sbb std mov or stc pop xor pop out lock xchg or std cmp or aaa inc arpl outsb inc cmp xchg cs mov daa xorl mov mov lea and cmpsw jne fistp mov push xchg movsb jb out test test movb adc or pop ret imulb sub inc inc inc imul pop rcrb jecxz lret les push push xchg jae jp adc or and add xor and (bad) cmc outsl ss leave fidiv test ret es mov or les dec andb xlat sbb sub mov and aas dec mov (bad) leave sbb mov pop inc sub stos mov jmp (bad) scas pop jecxz arpl ret adc inc sub frstor or pusha ror push adc add mov push mov fptan popf repz repz mov outsb dec jbe sti sub loopne repnz cmp adc fsubl fsubrs sbb lret mov xor in mov xor jnp in mov in sbb loop pop (bad) aaa outsl mov es scas mov or sti pusha repz sbb push xchg rolb jns pop iret movsl mov fucomp jle fcomps xchg mov (bad) mov cmc xor ret inc xor je pushf jno (bad) xchg (bad) cmp cmp xchg dec xchg push lret push cmp cld ret jns (bad) pop mov test sbb lock cwtl addr16 push push lret test add bound (bad) push and mov mov mov ljmp or cli push ror daa and pusha sub pop ljmp mov push std sbb mov cmp js adc pop (bad) adc sub cmpsb mov lret push in push adc je lahf icebp in aas imul ror sub push cld fs or adc (bad) adc js mov andl mov mov adc adc xor iret jno mov (bad) icebp adcl xor mov sub out and loop mov mov imul mov mov jns jb (bad) aad xor mov gs cmpsl insb mov loop mov mov and rcr push mov mov shrb add dec int3 sbb fsubrl xor xchg pushf push dec pop sti xchg adc dec xchg pop stc out adc (bad) mov not push mov jl mov dec and lcall adc test push in xor dec jp push movsl stc arpl add fidivr pusha (bad) imul std mov push movsl ja scas sahf insl push jns sbbl mov stos adc dec aad adcb call pushf dec in (bad) jb inc sahf adc pop jmp (bad) adc stos test gs (bad) lock xchg mov mov jmp out scas std push ds mov scas sub mov and cmp (bad) and aaa cmpsb pop inc and loope jae mov outsl popa push dec push dec add test mov jmp and movsb mov inc in jne test jmp mov test insb addl cmpsb movsb jl lret in jle sbb shr insl pop iret sub or in int inc stos jp cmc cli into iret psrlq and jg rcrb adc shr das jle sbb iret inc add pop cltd xchg sbb ret ret outsl and std fmuls aas cmpb test jbe and mov bound lock or sti mov jge loopne nop push (bad) and xchg cld add add pop gs cmp mov push imulb cmp add popf cmp mov mov aad or mov cmp pop ficoml mov hlt cmp mov pop pop faddl xor push pop aad insb daa pusha outsb das stos push dec cmp rcll lods adc std dec jns mov xchg sbb pop or fimull cli data16 jg outsl push sbb popa popa or dec sbb das out pop jl ffreep popf jmp cmp jle dec mov pop lods mov out push lret push xor fcmovb push xchg sbb cltd (bad) jp cmp shlb (bad) mov pop (bad) dec dec rcrb popf dec mov mov xor fiaddl in in enter jb mov aam cli sti in int in gs (bad) je add cmpsl fisttp mov cmpsb adc dec or inc aaa (bad) mov jle pop pop jmp (bad) lock outsb bsf jmp mov fbld lret sub orl mov push dec mov lret popa fist jmp adc add loop cli cs jnp xor pushf lods inc xor pop lea js (bad) mov xchg push cmp or mov ret and stos mov cmp sbb ret js add add test pop xchg in jns out dec xor imul push sbb xlat orl jbe push popf sbb ja andb das shr les xchg out push cmp jno cmp je shll push enter stos add (bad) cmp fisttpll xor cmpsl cmpsb insb sub add inc pop mov push cli inc lret cmpsb inc lcall inc lods mov fidivrl mov mov pop movsb sub jbe fsubrp into jecxz add lods push (bad) nop in into sarl xchg mov push jno sbb adc push xor in popf push cmp mov fidivrl lods aad or mov out test shlb (bad) loopne (bad) lods xchg sbb xor fistl daa loop add mov rol xchg adc or inc leave lret jo insb fs mov xchg xchg sub in aad outsb ljmp in movsl sahf add xchg or add (bad) int pop imul fwait jae sbb add push rorb pop movl pop sahf jnp push cmp fisub out in stos mov inc sub jno mov scas cmpsb inc mov cmp jecxz (bad) mov ja or xchg nop inc sub popf adc (bad) je les (bad) pop mov in mov xor (bad) repnz in repnz in (bad) loopne jp cltd cmpsl in je pop inc mov das add imul sbb ret add jecxz cli scas add push test daa mov jne ror adc je xlat mov rclb rorl pop jbe test lock xchg sub fnstsw (bad) cmp sbb loope or (bad) std iret nop icebp aam das test pop jp push ss sbb icebp lock int push pushf int clc gs sti push in inc pop push wbinvd movsl xor enter push outsl lret pop arpl hlt sub mov xor popa sub mov adc push (bad) scas popa mov mov cmpb out add cmpsb daa dec mov dec pushf adc add addr16 hlt iret adc jp or stos cld sub insl and push subb mov jge jns pop gs orl in fstl lea loope lods mov loope mov mov int xchg stc aam in and pop sub adcb xrelease xchg jns divl jo cmc xchg hlt fwait adc es fwait push (bad) push aam je in push sbb mov dec mov sub int dec shrb add sub mov or insl pop mov jl ss mov sbb dec addr16 les dec mov mov lcall cli sbb outsl fildl sahf cmp xchg sub jp adc cmpsb sbb lds fldcw sar je cmp icebp pop ret fs not and jmp icebp pop sbb adc repz xor (bad) mov aaa movsb sti xor cmp pusha jb push add test (bad) cmpsb sub mov out (bad) fsubrl mov fcoml shlb in mov fisttpll jecxz arpl xchg into ss pop icebp enter loope sbb sub and lods push call xchg es cmp fisubrl gs mov mov or lret mov (bad) sti and pushf jbe lods push test in les lret test in pop sub dec mov fnstsw in dec xor xor mov pop mov lock xchg pop add pusha xor (bad) icebp scas jp dec mov push (bad) std mov xor nop rorl pop xchg ret loopne mov xchg loope jb in jg pop and in push inc movsl push mov or and mov ret mov dec pop xchg nop imulb dec jne mov cmp and mov or outsb xchg fistl idivl mov ret mov cmp add adc mov or jmp sub sub cmpsl rol in pushf mov dec loopne cmp jle out addl lock loop aam pop jno xchg rcll sub mov pinsrw (bad) (bad) dec jne ss mov xor fwait pusha sbb rcll adc test push and cmp add or imul dec inc inc (bad) std jecxz repz mov jecxz push jno repnz push ljmp and das cld daa sarb jmp icebp and jg in int3 test ret icebp mov push stos outsb add std sub pop and dec pop out lret sub jecxz jo mov mov (bad) mov movsl enter imul push dec xchg mov mov inc mov orl lock cwtl mov ss mov push mov and int3 sbb sub and jl in jns push insb and insb popa out pop mov adc pop daa aas je popa xchg sub push stos stos or pushf dec push mov xchg inc mov mov imul fmul ret inc (bad) mov loope mov stos and cmp jl dec stos lahf or or dec mov sbb jecxz and and add mov lret ret push lahf xchg jp adc cmpl outsb outsl xchg pop push test movsl jo subb mov dec addr16 sbb add (bad) push popa and cwtl xchg sbb mov fwait es insb lds js ss adc int xchg rorl lods popa add cli iret bound cmp fildl inc xor sarl adc sub dec add ret stos xor jg and xchg lock mov or dec std enter cs or scas mov xlat lock mov fsubl out (bad) mov mov push aad lods xor push ret inc cltd dec movsl mov mov sbb sbb add stos aas negl aaa and pavgw fcomi fstps mov mov bound test jnp xchg negb mov dec in cmpsl fs and adc jle inc sbb mov stos sti cmc cs int adc fmulp push dec add cmp adc push or inc xchg outsl xor jl mov push cmp repnz mov adc leave into dec fimull cld cli pop loop ret push mov (bad) fimul loop pop push popa gs cmovnp mov lret rol jmp push inc mov enter lret mov and insb jmp cmpsl jmp out or stc ds mov mov inc add add (bad) inc pop dec scas aaa mov test cmpsb psubusw pop push xchg mov mov hlt xlat out add add scas cmp notl iret and add sub jnp or fs repz aaa mov test push movl jge pop mov and sbb mov pushf test mov stc test add lods loop (bad) cmp pop cmp pop in lret lods inc sub in bound sti es fisub push mov inc mov mov gs in inc cmp ret fldl mov js stos test jmp pop cld mov lds test mov pop adc fbld cs pop lea pop insl test or dec add out xor popf jg and jno cld fsts xlat mov adc cs lods cltd rclb jmp push or xchg xor insb sub lahf lock mov sbbl mov add mov pop sub add xchg jmp cmpsb add repz jp jp int fldl sub mov push xchg loope xchg add dec repz and lods sbb adc dec and fadds sub dec mov xchg lcall push (bad) loope sub dec xchg jae movl xchg mov adc aas (bad) ror imul loopne dec nop enter rcrl fcomip stc pop add pop repz xor gs mov out dec mov add push inc mov in xor ret popl std (bad) (bad) idivl shrb ret fistl mov add iret loop scas hlt loop pusha in int3 shr daa adc (bad) (bad) jno cltd rorl repnz lret sahf push add mov arpl push hlt adc jl sarl stc push ret jecxz lds pop inc (bad) repnz and inc push cltd sub sbb (bad) les fmuls xlat jns (bad) cmp push imul lock iret sarl ret xchg stos add dec dec (bad) cwtl clc pop fwait lods fisttpll into or mov fadds jmp add inc inc add mov jns rorb lcall push jg js pop jecxz out mov js scas data16 mov data16 mov adc pop push add push mov clc std and push mov mov sahf shlb out icebp imul cmp cmp sbb mulb inc push mov aas cwtl sub or cmpsl cmp sbb lods into std les xorl cmp into adc cmp and enter (bad) sbb and mull pop mov xor aad imul mov mov inc xchg jo mov push lods (bad) mov lock sub ss (bad) idivb inc pop xor jp adc (bad) lock in lret add xchg push into cwtl lret sbb pusha sub enter movups xchg outsl jnp xchg arpl add sub mov jae mov mov mov dec ss xor ja mov out mov dec pop or jmp mov cs cs sti aam jle mov dec jns xor pop pop enter push aad jnp inc adc inc pushf in fucom xchg or icebp icebp bswap outsl test jmp cmc pusha in add fimull stos sbb cmp pushf fnstcw mov dec adcl cmp fwait mov jmp xchg (bad) fnstcw js push imul mov add add stos nop mov shrb sub imul xchg (bad) mov push ret jne jo in gs push sub mov pushf inc repnz sub out aad lcall lds loope jo or lea mov fbstp stc cld cltd cmp fs mov aas xchg test pandn cmp inc pop lock add inc orl in int add or jnp loopne jp cltd mov xchg mov rcrb xor in addr16 sbb sbb xlat push pop xchg mov sahf rorb rcll sub imul insl mov mov push pop mov notb or das jnp sub jp orb xchg mov xor cli aas loopne loopne push test xor int3 movsb das sub repnz pop les dec prefetch int std sbb xchg ljmp out mov push xchg fistpll pusha cmp in jl jbe ret in inc jl test loop jmp clc iret pop dec adc daa dec inc push mov sahf pop inc push xchg mov or or fsubrp xchg inc xor std dec ljmp nop pop idivb mov push gs cltd in pushf sar jmp test add mov stos sbb sbb test mov lret mov mov lret hlt push dec mov repnz cmp iret lods iret cmp test mov ljmp fbld dec insl insl dec xor bound fmull xlat xchg dec jecxz ret push stos jl sub cmpsl xchg jb mov dec and outsl cld daa mov es xchg add inc cltd repz or mov rol (bad) fcoms push mov jnp dec cli test movsl add or int xor sbb jge sbb dec je fild and outsl mov push or leave mov sub insl push pop jmp jmp imul enter push add mov arpl lods lahf call or fs or mov sub mov push inc pop cs das sbb inc hlt lret pusha add xor pop outsl cmp add shl sub sbb push subl nop imul add orl and div pop mov inc xchg adc mov imul out and cli jb pushf dec fs inc push mov pop add xor lret cmp dec repnz jns scas and daa push (bad) aaa dec in jecxz xlat pop add push lret rcrb dec int hlt rol clc test iret sub jp sarl shll xchg add icebp out mov jl dec push cmpl xor xchg cmp xchg mov push mov xchg jbe mov aaa mov cmc xor push rclb dec shlb out xchg (bad) jp sub inc (bad) repz and mov sbb nop jecxz outsl adc leave and (bad) add imull daa jb repz fldlg2 inc mov cwtl insl sbb or sub cmp sbb push push jbe fs mov sub fs jnp add adc sbb pop xchg sub dec inc sub adc shrl push adc inc add ja dec jo jns movsl jne dec adc xchg pop lods insl and mov outsb and (bad) (bad) mov mov data16 pop in les push sbb lods or sbb mov stc mov stc push mov and add and mov add enter clc add inc (bad) xor sub imul or repnz or lret push mov xlat or (bad) xchg mov inc loope adc rolb decl in int fbstp fsubs xchg iret shll aas les ret fidivrl inc sub mov in xchg movsl cmp clc fcmovnbe lret mov clc adc (bad) xchg iret (bad) fstps stc in ds ljmp mov or cld incb push adc mov ret push shrl mov xor push dec fnop scas dec pop enter push xor jno jne loop add in gs mov dec xor test mov mov mov clc jp fldl mov and mov inc cmp movzwl lock dec push push (bad) adc pop add mov inc xor lahf popa das add (bad) xor imul dec int mov aad add xchg jp cmpsb push and pop sti jbe ds int dec or push sub lock lods jl in dec mov mov das es pop dec jp xchg loopne data16 insl sub xor mov jb mov cmp mov mov stos aaa pop inc mov hlt sub insb std into roll mov addl lods loopne jne loopne mov nop cs ss arpl das push xchg sbb nop mov pop shrl lds adc cmp fnstenv stos ret js xor int mov sbb or outsb in xchg pop push sbb fnstsw loope adc lea outsb mov rorb out int xor fadds icebp (bad) clc into aas js outsl (bad) xor mov pushf mov and sub inc in push add aas adc sbb icebp pop ljmp mov rcll pop dec enter call loopne (bad) (bad) out push fst sbb orb xor (bad) loopne sbb imul lock mov fwait jb enter adc mov pusha sbb lea imul push es fs adc mov loope sub sub push pop sti pushf or (bad) (bad) xchg jns pop scas dec int3 jl fucomp or and loope mov iret and push outsl clc cld lret dec cmp xor sub pop or add dec pop icebp aad lods and adc or repz and fsubrl dec fnstenv out jge stos dec lds jecxz xlat daa dec in jmp pushf or dec xor xchg inc sbb mov push pop stos cmc jmp incb lods jmp cmpsl outsl or ja outsb fildll add cmp iret stos adc push jp mov adc mov lods add fsubrs sbb hlt dec repz (bad) into lods sbb dec or cs (bad) xor mov cmpl jle lds mov lcall fnstenv inc jmp pop mov rol repnz stos ljmp jno ret fld xchg mov mov mov pop into mov lods mov sahf push rolb jle rorb enter push pop movsb orl cld int3 or mov cmc (bad) cmp and test inc rcr push fistl cmp push mov std stos mov xor and pop jp mov or sub jno fldl2e xchg outsb mov xor pop push pop push popl and lea outsl sub test pop mov xor mov mov xor out les dec es addr16 repnz xor xchg popa rcrl stos add movsb arpl pop pop xor into pop or xor aam cmp xchg pop push bound ret jae sub enter repz les mov int test xor mov pop ljmp aaa jp mov push push lock std mov pop or loope cltd or inc add or test rcr xchg in inc std inc cmp pop scas inc int3 aas and jge mov ljmp add sub addr16 add gs inc push gs xor push mov aas inc add pushf and pop out xorl lret gs xor push dec in data16 (bad) (bad) mov (bad) jae cltd int sub pop pause ss cmp adc add mov cmp adc cmc jae gs pop cld push jge adc ja pop movsb into mov adc fcoml js idivl sub add ret (bad) pop inc push sub mov ljmp jecxz shlb pop mov sub pop inc sub push xchg fcoml int3 and insl pop cwtl and mov fistp jle xchg fidivl testb je in rcr cmp jecxz dec cmpsb in jge or int3 ljmp outsb (bad) (bad) imulb sub sub je std sbb pop or inc xor addl loop cwtl test loopne stc sbb jg mov jg mov sbbl xor or lods scas in aas adc imul add and aad incb pop cmc mov hlt adc sbb mov lds movsb xlat inc mov outsl jl inc andb lods fnstsw mov flds mov sbb pushf jp scas test out pop or mov pop fsubrs xchg sub aam sub jle lret repz jmp mov lds dec mov pop xchg clc add in aad xrelease sbb lods clc lcall add xchg stos mov sbb inc push mov mov std mov mov andl lret add repnz addr16 popf into loop ror pop sub icebp mov icebp dec sti jmp lret xchg daa movsl aam std xchg cmp dec aas sub pop insl mov leave (bad) xchg mov daa sbb stos ret xor inc jp les xchg lea ret popf and pop inc mov push ljmp fistl inc cwtl or (bad) jle or rcrb xchg pop js cmp pushf jl faddl pop fstl subb (bad) sub hlt add mov prefetch popf cmpb xor dec add std fsubrs xchg les ljmp stos add into push dec negl ds xchg sbb fcomps xor mov dec pusha sbb sub dec mov pop add or pop or xor jecxz xor jno das sbb mov pop (bad) in roll inc sbb ss jmp push lea and pop lods xchg jle movsb mov mov cli clc nop mov daa pop mov fdivl jnp jo pushf in mov push and xchg add and sbb dec mov lods mov pop (bad) mov jp pop (bad) cltd add roll inc mov sub jb jno je out xor mov jnp popf mov pop ret (bad) jp inc fs cltd scas imul popf mov jb xor mov mov mov orb pop or xchg xchg stc (bad) fstl xor add inc mov pop in sahf clc and in jge sahf xchg (bad) sbb sbb mov in inc adc mov jmp popa cmpl inc loopne je push sub stos ficomp rol xchg loope scas mov xchg jo cmpsb js roll adc stos xchg or fs pop hlt enter sbb ja mov xor adc push imul adc pop mov jle enter dec push xchg or pushf mov or in sub adc std push mov push shll movsb jbe dec popf testl cwtl mov (bad) xor fisubrl or mov cmp xchg in out and stos subl sub cmp gs mov jge test dec xor clc sbb xlat clc test push gs lcall daa add rcrl jge mov enter push adc incb lret enter pop ficomp loop out mov inc fistpl sbb mov (bad) fdivl out mov ja arpl out mov les outsb pushf mov inc cmpsl popf pop jbe push mov clc adc push dec mov leave sbb dec scas enter (bad) sbb fbld pop in scas xchg setg push rcl scas clc lret enter and push sub mov lods repz pop das jl jne (bad) dec test mov insb icebp mov mov leave pop scas (bad) aam test aad cwtl mov inc pop push pop fwait add negb mov mov push pop sub or push xor or inc std push mov mov mov mov dec ljmp scas lds mov scas movsb aas and pushf rol lcall inc and pop daa ret stos inc dec add and jno lock fs mov sbb pop fcmovnu loop mov imul aas fmuls scas dec push mov loope cmpsl mov xchg (bad) mov rolb popf dec or add adc cmp jns nop mov add iret (bad) sub and fmuls out xor mov sbb fist scas xchg sbb loop push frndint nop push inc rolb pop sub enter mov ja popa je dec jmp xchg ljmp inc pop inc push mov fs outsl (bad) imul (bad) std add enter push ror test push pop daa into movsl loope fnsave cli decl mov jp out push push sub sbb and xchg xchg nop stos mov iret adc or push rcrl jbe pop inc mov das jp sub cmc movsl mov push rclb push loopne inc (bad) or fsubr sub int3 negb je or jne push xor bnd mov mov fsts in fistl test xor rcl push add rol cmp scas (bad) cli adc ljmp inc sub xchg mov lret out fsubs cmc test xor or cwtl test sti mov mov cmp movsl les iret movsl (bad) mov and pop clc or mov imul std pusha (bad) lds jle jle inc lcall cmc icebp loope push or jb call mov mov cmp inc out and leave add orb sbb push test loope inc mov les enter dec int adc add leave bound xchg in cmpb nop pop jmp mov pusha mov pop jmp das into mov mov sbb dec mov inc shll inc loopne ret repnz mov lcall adc mov leave insl add lods cltd push fimull aas cmp fmull push push jmp dec xor insb scas pop mov pop sub sub mov imul mov inc mov and loopne je into sbb (bad) lret cmp imul fistpl hlt push push imul adc fwait lret xchg out loopne jecxz outsb xchg and mov jl mov nop loope outsb push ss lret inc fidivr mov xor or mov dec repnz fimul and test mov xchg xor out notl dec add pop pop or movsl mov cmp xor dec mov xor sbb dec out test divl mov sbb out pushf dec mov mov popf xchg fbstp mov cli mov fst lahf hlt push insb jae gs popa jl mov aam je cmp xor mov mov mov jecxz stos adc xchg mov dec jg sbb mov sarb ja cli (bad) or pop (bad) mov jmp xlat xchg pusha or daa mov neg lods (bad) nop push pusha add lea mov subl or gs xchg mov mov lock lret mov jbe pusha inc and cld std xor popf aas leave xchg js add notb dec fidivl popf insl (bad) maskmovq push loopne sbb push dec (bad) fchs adc push mov mov pop mov add pavgw mov das jae mov sbb pop sti stos mov push dec in sub sub (bad) icebp mov lods arpl adc imul pop pop lock inc mov rorl (bad) pop lcall cmp mov iret aad xor jg,pt fldenv lods sarl fcoms mov inc add pop adc aad or ljmp mull mov vpxor ret in lret push jp mov jp xchg sub lds pop sub pop jmp or (bad) leave in jmp cwtl mov or and aad mulb push add adc and sub mov push (bad) mov pop ds sarb add fcoml and movsb mov out call outsb or je push dec lds (bad) fs push lret in adc and sbb push pop iret lea fisubrl fcmovnb gs lods ja pushf icebp stos mov dec cmc jg bound int out cmp dec pushf mov (bad) mov mov mov adc pop mov clc lods xchg xor sub fldcw lcall cmp imul repnz mov aas lds dec pop incl mov (bad) pop jp push clc movsl sbb jg and movsl fsubrs push unpcklps sbbl rorb jecxz jl insb jbe (bad) (bad) dec adc jo or (bad) sub leave fimul or ret mov cmc push and pop roll jne out xor leave push je cmp jmp and int3 lea or loop mov lahf scas jns cmpsb movsl repz cmc adc mov jnp out inc imul cld sub pop js repnz iret cmp jns dec into scas cmp inc test sbb mov dec sbb inc add mov adc and or (bad) loopne int mov jo lds stos out lock xor mov jecxz stos in (bad) jmp test sbb imul shrb sbb mov cmpsb pop std lods xor mov pop (bad) adc das es push int3 mov push sbb (bad) (bad) pop in cmpsl iret mov js daa jmp movsl mov jbe push loopne leave push jb ret test inc daa iret arpl fbld xchg shr (bad) loopne ficompl xchg ficompl sarl (bad) dec rol fcoml fistl cmp mov icebp nop push popa stos jmp in sub (bad) and (bad) mov ret cmc push push je dec pusha inc jecxz inc adc sbb sub adc add mov lds outsb aaa xor adc popf popf (bad) jns jno push pop lods dec sahf out mov xchg jg push jg push fdivs xchg mov in repz cmovp out mov fwait sbb inc sub adc xor mov cmp adc test cmp mov xor add add xchg cmpsl add lods inc mov fidivl les hlt jnp (bad) (bad) lods int3 sbb add or push xchg lods sbbl js lods add jne test cmpb pop imul loope push jl aad lret aaa call mov mov mov sub std roll ret rorl mov loope inc mov das ds mov push in mov jbe mov test mov push cs xchg roll lcall stc adc cmp gs jb and jecxz or pop stos stos pop je ret leave fbstp popa repnz daa xchg jnp insb sbb leave ljmp pop nop pop dec inc dec push or insb jne sbb or shr push push arpl dec pusha call insb cmc xor adc (bad) addr16 es sub das jecxz divb mov xchg mov mov xor in mov jae ss mov addl xchg ret movsl mov sbb sub or lods clc lods and iret fs popf xchg jbe scas pop mov into pop xchg xor gs enter pop mov (bad) iret in adc ret push dec push out mov scas call add int3 lret dec push mov sbb jmp aad inc sub xchg xor jb xor mov je (bad) repz sbb and mov mov stc mull cmp cmp sahf fwait or into cmp enter ss xor notl xchg es je sub ret ret insl and push jmp pop int3 mov arpl pop std scas enter jbe cmpsb (bad) enter push sbb mov pop adc inc push data16 call dec cmp (bad) pusha ss cmc sbb pop ja bound ljmp (bad) xor or sarb xchg fs mov and lret icebp es imul shll int mov test aam push push lea xor pop fnstcw icebp iret jp daa jecxz daa inc jg pop lret mov pusha push mov lock push mov add movsl and cmp add jecxz shlb cmp out jnp in add rcrb xor shll orl sarb fisubl rep scas gs insl push pop mov dec xabort cmp mov mov enter ret xor ja aad cmp jno es or pop cmc jl xor jo pop xchg or inc adc daa inc and sub sbb mov cmp xor xor mov shr sbb sbb out movsb int3 mov pusha fidivl sarb imul mov dec mov sbb mov ljmp push mov push pop mov cmp and cmpsb add cmc inc arpl fwait stos dec jl inc lods push jns shll jnp xor sbb xchg inc xor (bad) cwtl insb add jnp mov fs jp bound pop lret leave fidivl shl sbb inc lods testb arpl push or insl and mov mov and pop dec out aas iret add xchg lods in xchg and adc data16 cltd push dec mov imul xchg push mov jl pop jecxz dec aam dec xchg sub mov mov xchg icebp (bad) hlt jne inc mov les (bad) xor add in cmpsl pop pop les adc and dec xchg mov dec out loop movsb adc bound mov lahf lcall push dec mov lock sub insl push movsl in shr ret inc xor rorb arpl cltd push test mov dec lods es (bad) (bad) icebp adc jge pop jno push mov call jge ljmp mov xchg popf loopne fnclex or jae or lock dec sbb adc adc les sub out iret add push and iret jo dec gs or imul in fstl pop aad je enter xchg es cmp add lea testb imul mov ret dec xor fistp mov inc xlat cmpsl ja addr16 cwtl cmp inc int jl cmpb test xor pop xor xor xchg pop mov sbb or xor out push or sbb ret aam or jno and cmp push add sbb mov pavgw cmp int add adc push shr mov dec test icebp ror xchg loope and pop inc pop div pop pop into sub sahf jmp dec mov fnstcw push fwait shr mov lods mov les out movsl mov mov out xchg fisub into fbld dec jbe mov mov popa (bad) fdivl cmp jb fcoml inc push stc mov inc fiadd in fs int push cmpsb (bad) mov cmpsl stos lret jg,pt push or dec dec mov push (bad) ja imul cmp lret add sbb bound mov pop lcall mov push adc and xrelease pop pop mov shlb and cmpsb xchg mov jp xchg jb rorb rol je mov (bad) mov pop loop pusha lds imulb pop adc sub mov int3 jge xor popf iret mov insb sahf aas ds out push insl xor subl roll mov dec sarb push call aad bound testl inc mov jg adc cs fs stos lds (bad) push iret inc inc or mov mov pop sbb outsl ja test push cmp incb sahf ret arpl loop fstpt in cli test pop into imul push cmc aam lret or mov cvtdq2ps cmp cmpsl xor jl out out out ret xchg fldcw (bad) cmc dec adc jno ja sbb and fstpl stos xor test pop lods enter shlb das fisub movsb jno cld out sub cmp sub aad dec sbb les stc sub and xchg and iret sbb rcll lret or add mov xlat insb stos dec adc pop lds lcall std movb pop (bad) leave stos lret repz cmp fldt cmpl lret or sti (bad) push scas scas lods test leave fcmove add mov addr16 pop test sub mov push cli push cmc jecxz mov inc gs arpl daa fcmovnu (bad) mov (bad) and jnp jne dec data16 and sahf xchg das (bad) adc jmp (bad) mov lock (bad) sub adc inc sbb and popa mov fiadd pop sbb cmp mov shrb addb push mov jge fnsave inc xor out cmp lock mov push mov call outsl out mov ret pop addr16 (bad) mov push pop les (bad) int in pop cld out cmp inc addr16 out mov dec adc les aas scas ljmp mov repz sub in lods aam or out (bad) dec push xchg xchg insl push outsb mov popa xor mov dec sti stc sbb ret sarb push iret hlt or jno mov cs rcll push fwait dec xchg loopne stos mov dec ds sbb in xor mov mov bnd add push dec fwait test lds mov pop add call adc mov loope ljmp pop add inc pusha loopne je movsb cld lret push aas and in fcmovne xor mov adc addr16 mov mov dec xchg mov cmpsb dec iret xor jp or dec fwait negl and fwait lret je imul sub scas mov sub ret or push pop lods jmp icebp scas lods lret pop aas iret mov imul loope orl dec repnz movsb in clc dec lahf fwait sbbl loope and and mov inc es nop sbb daa mov jo push stos pop loopne fstpt out or push pop popf and test jecxz jb and adc jle (bad) sub inc cmp push lahf ljmp cli lahf les outsl repnz test imul xor pop repz ljmp pop daa sar add flds js push mov sarb jae (bad) (bad) fwait (bad) icebp mov push lcall es and fwait cmp dec loop movl orl lock or mov push lds xor xchg imull fildl aad pop lods mov inc cwtl dec push push mov loope mov cmp (bad) xor mov (bad) (bad) decb imul rorb xor stos and xlat mov fwait (bad) ss imull sub push or je sub inc cmovb or in xchg int aaa fdiv je shr bnd jle dec aaa mov in cs jnp cmc data16 sub xchg ja push bsr cmp ja mov cli hlt pop and es inc (bad) add xchg bound xor movsb jnp ljmp out mov inc fs mov sbb leave fscale scas ret fstpt and xchg mov in call jp sub (bad) sti fstp test repz cmp repz pop int3 inc jb fmuls mov mov stc ficom loopne xor pop sar popa adcl pop cmc jle in test fstl int lret sub ss xchg cmc pop fisubrl mov jae clc jnp hlt add dec adc xchg (bad) es cli add cmp mov dec fwait fwait jg rclb pop loopne js sub push jne xlat in loopne push add cmpsl data16 push loopne mov xor inc sbb loop dec mov push jnp pop or int pop dec out sub (bad) push mov jp xor adc gs ds lahf clc push jecxz push xchg in imul cmp sbb in cmpsl enter adc sbb cmp out inc mov or xchg adc cmp movsb mov push mov ret or call sahf mov clc sahf mov fdivl leave push and mov nop xchg gs mov add daa cmpsb or and mov push cmp or pop xor (bad) sub sub or inc and (bad) jp mov in sbb pop fmull or sub mov xor outsl popa inc xchg scas pop ficoml insl ficom inc mov adc movl lcall stos cmp cwtl inc test inc pop dec pop mov iret jmp inc cmp add and adc ss inc xor adcl dec clc movsl stos enter jle nop arpl and sub daa sbbl imul inc and test nop lcall inc fwait adc hlt cmp divl adcl pop movsl out inc push sub test pop mov mov cmp movsl mov or inc stos pop push jecxz,pt sub hlt cmp xlat cwtl push popf push mov out add cmp pop call rcl inc lea idiv xor add push xor mov int inc fwait cmpsl pushf xchg int3 jg sbb mov sbb repz xor xchg xchg mov sbb or mov xor ret pop push (bad) bound hlt setle int3 dec mov push mov add adc lds jb int cmpsb sbb fldl fldt mov dec and inc rorl outsb push and pop mov int3 mov roll daa push xchg ds mov lods dec imul dec inc arpl insl (bad) iret nop sbb add fnsave sahf std mov fbld jmp lods push xor fidivr test xchg pop iret dec sbb sub push and insl xchg ret cmpsb jno mov arpl mov lods inc add fisttpll pop sbb ljmp (bad) mov imulb movsl rcrb fistl sub lea dec es add cmp test pop fiaddl std sub cwtl insl xchg nop xchg imull icebp loop test (bad) loopne pop sbb adc cmp cli and fmuls sub js imul xchg jnp cmpsl push (bad) (bad) cmp jnp mov lea pushf push scas sahf inc mov sub inc fisub test mov xchg jne ds imul xchg lods push pop push adc shrl lock jb je jg pop and push jge cmp xor lcall and aam pop cmp inc and dec or sub jno dec lds xor repz lcall and mov leave jmp call inc lds sub pand xchg xchg push (bad) aam (bad) jno (bad) or cwtl stos xchg sbb xchg jne bts mov jo push in inc test cwtl stos sahf adcb pop mov mov std jb and push cmp ss sarb rol push sti icebp push rcl jnp in jmp sub ds xchg sti mov cs lahf (bad) jns daa pushf adc stc std xor mov xchg loopne ret xchg scas fnop outsl cmp dec aad pop stos cs push int3 lahf das nop adc mov cs shll cmp lods movsl mov nop mov das sbb and imul popf rcr jl or pop cwtl xchg frstor sub (bad) pop inc jb mov pusha addr16 (bad) syscall and (bad) jae js insb jmp pop out xchg cmp (bad) int3 xor adc jg mov addr16 jns cmp std das iret push sub std cltd push dec sub inc shrb insl aas inc push out stc xor mov rcrb adc or add mov faddl mov mov jo loopnew lea and addr16 bswap inc data16 fidiv in cmp xor or fildll sub test aam bound lods movsl ds mov xchg sbb dec mov push cli movsb movsl (bad) mov mov fwait (bad) pop cld jno fwait ror pop ja push jecxz or int3 stc sbb pop pusha mov jo cld neg shr (bad) fwait pop and mov adcl and push pop gs es adc or leave stc stc dec clc loope lods xchg in rcrl or in mov sub xchg lods stc movsl out xchg sbb push pop mov jo push gs lret xchg xchg (bad) out (bad) aaa or xchg inc clc inc bound jne insl (bad) js add jns mov ret out (bad) or mov je test xor sti mov mov in scas or repz mov inc outsl arpl (bad) sbb and mov rcrl mov cld adc addl and dec jge cmp sti outsb ret gs or xchg fdivl jne imul imul scas and lret sub sti dec xchg je xchg and jmp inc xchg dec sub data16 jo outsl clc enter rol add sbb sub nop push sub fildl pop popf ljmp dec adc mov (bad) sbb mov mov inc pop shrl xchg mov adc rcr sbb nop ds xor fisttpl lret cmpsl out pushf cmpsb rclb mov cs es (bad) push cmpsl xor jns outsl inc jge call adc sub mov fisttpl pop les in mov dec (bad) or push sub add loop fsub ret adc iret mov leave dec fsubr inc cltd (bad) cld jmp enter clc inc cltd jno das xchg popf pop cmc or stos std dec ret in mov sub repnz das (bad) jp ljmp dec dec outsb inc rcrl mov aaa add movsl jmp subl fnstsw push lds ss and dec sbbl dec push popa test dec out pop mov adc mov ljmp (bad) jmp arpl shrl xor mov stos dec jns scas iret bound and dec adc sub mov fnstsw xchg popf je iret sub mov inc lahf cmpb cltd mov lahf aad in xor sarl test ret lahf mov xor int fisttpll inc xor and pop (bad) in xchg and cmc xchg xlat out xlat xor outsb xchg (bad) aas mov out aam arpl push sbb push jmp push arpl stos pop iret es or in stc sub fisubr subl out cmp inc push (bad) or and jmp or cmovle add mov test add out jg rcl push test sbb icebp ret ss and mov and sub push xor out scas (bad) jne les mov in jne adc cli pop dec je negb inc les jno pop dec adc dec cmpsl js push outsb aam ds fdivrs xchg lods mov icebp fadd fildl test repz (bad) pop cmpsl in mov cmc das inc lret sbb aam popf ds mov and xchg aas dec sub ficom xor lahf and aad sbb dec push repz stc mov jmp mov ss rorl or aas fwait lcall lds sub int3 add int3 mov mov push or mov out jbe ds jle jo fsubp push aam test ret cs loop data16 adc jne inc scas popa mov pop add (bad) sbb insl dec (bad) or les cmp test xchg lods out (bad) ss xchg jns mov imul sbb mov test enter pushf adc sub aaa hlt in or iret and jle xchg arpl cwtl add jne in mov cmp jp cwtl out ret cmp mov mov ljmp ss add cld dec and inc xchg pop movsb or mov fucomip loop jmp mov es jne in movsb in jmp inc fwait cmp aas shrl insb insl mov clc out jle xchg mov out pop add (bad) mov jmp out add cmc mov push mov sub iret and es jp fistpll jae insl rorb add std and out stc and les (bad) std sub in and outsb fisubrl fnstcw and pop push xor pop cmpsl fnstsw ret lods aas negl xor fstl insl sbb in mov mov outsb mov cli pop movsb rol dec outsb pop pop in pushf xor mov imul loopne ret cs (bad) ficom (bad) pop jo stos ficom imul mov mov lock stc (bad) sbb das jns push xlat sub lods mov cmp push cwtl mov ret xor popa clc movsb hlt cli dec dec sub xor fs mov repnz inc inc std lcall test stc xor int3 lock popl inc sub push sub lock sahf fldl lock mov mov mov pop int3 sbb or (bad) xor aas add inc ljmp pmaxub xor fiadd mov mov jg push popf and jmp leave rcrb adc mov pop jo mov mov push adcl adc mov (bad) jne out pop movsl mov adc mov (bad) mov adc inc (bad) xor scas in dec fadds movsl mov push dec push cmp xor push add sub iret adc add lcall inc mov aaa movsb cmp imul cmp into xchg (bad) int3 mov loope push stc lret fimull mov push inc xchg repz dec mov mov jae push mov es fsubl fsubrs pop ss cltd hlt repz jecxz dec jne ss cmp mov dec js test push ret arpl std jge adc adc std dec adc in mov sbb xchg adc pop push andl in jl sahf mov cmpsb jne cmp test dec xchg jecxz mov mov aam inc stos xlat dec xchg in jmp aas fsts push push xor imul out inc or lea aaa loope imul ss mov in ficomp jbe out inc jge jnp sub popf cmp inc sub in jg add testl inc mov or stos cli lret sub dec movsl adc negl (bad) fidivrl inc ficomp out shrl add shrb lahf and dec mov imul adc jl fucompp addr16 xchg jbe xchg stos loope xchg cmp jp adcl (bad) fisubrl ja (bad) jmp test mov lods fstl lods out sarl je (bad) jae add out jmp imul lea lahf cmp inc dec cmp cmp lret das xchg push out rol int3 mov sbb xlat inc std dec test ds sub mov adc fwait and flds push test test ss pusha fldcw push jg push or bound fdiv adc loopne lahf mov jl mov sub lock adc enter ljmp cltd xor outsb xchg pop dec dec push faddp xor push lret sbb outsb and or xchg adc pop inc rcll in push or cmp repz repnz js sub dec mov call lahf mov leave mov mov push jp mov push jns add inc arpl mov faddp pop imul out mov out (bad) sbb add jb ds xchg push sub xchg or sti sahf outsb pop and test stos cmp xor out test ljmp shrb test and clc adc call cmp pop (bad) out insl dec cmp hlt sub std mov add je jne add lock lcall dec adc lds add pop in push jp in das scas sub repnz out or movl insl imul std jo (bad) and inc push insl adc or in movsb or mov mov or in push sbb pusha jp mov out adc inc adc shll rcll dec pop cmpsb lret dec movsb stos inc cmp push sub (bad) cli sti pop mov (bad) jno loop pop movsl and fsubrl pop fsubl pop mov ss cmp hlt ficoml mov dec and cmp adc jp jnp and cmp rcrl sbb or sub test xchg ret std ss push scas push movl leave push inc xchg cmp and shrl sbb jge xchg cmpsb pusha fwait lea popf ds rclb ret pop xor mov int3 lcall jle sub mov jle pusha and dec add ljmp in jg shl pop adc inc xlat xor (bad) lret sbb lret mov mov adc rcll (bad) inc hlt and mov mov sub outsl xlat add inc jge sbb cltd stc sahf out add mov ja test insl sbb inc clc xorb cwtl scas mov dec pop sahf pop mov xchg add jae push jno mov paddd pop pusha subl leave xor mov scas into jmp pop or mov pushf imul sub add (bad) jmp gs sti scas nop jge iret pop es mov cmpl repz lret adc gs xor push push xor lds mov das xor dec and dec into pusha hlt xor data16 sti push xchg insl mov push sbb sbb aaa cmpsb or mov orb inc aad sti into iret int3 dec (bad) or js lahf and in out xchg lahf pushf lret jo push or add lret lock adc sarb add insb shrl daa repz or clc (bad) out in fldz ficoml pop pop pop jecxz sbb cwtl jp cmp les cli repnz (bad) cs arpl les push enter mull and mov outsb lods or xor (bad) mov push subl xor add jmp mov (bad) into add movsb aad in sbb (bad) lock pop std pop push cmp sub lahf pusha scas sti xlat push popa mov xlat push pop sub inc add dec pop ljmp js jo push fidivl in xchg or push sbb addr16 mov add scas out imul fwait cmp sbb add xor hlt hlt in jo push inc push out sbb dec adc jge mov lods or fsts mov (bad) (bad) or (bad) xlat roll ret outsb inc test test es xchg and mov xchg jo jl xlat push and or or inc mov jp or or lods adc leave (bad) mov in in fsubp aad mov sbb pop out call shll int3 cmp int3 mov scas pop lcall push outsl js sarl push stos push daa int3 loopne stos push iret adc (bad) das clc add sti inc bound or mov push or sbb sub mov jno add jecxz aam cld dec les mov inc les lods ret sub pop mov adc push jb sub addr16 add pop xor cmp mov inc mov mov xchg xchg dec or push dec pop mov test and lock jne cmpsl mov pop inc cltd das and bound sbb jmp (bad) jg fs sub push xchg mov mov jbe xor and push sub lods ljmp pop in jge psubd mov movsl lods cltd rorl xchg xor pop jmp add cltd pop or sbbb mov imul fisttpll cmp jle popf cmp leave push enter cmp into or movsl and mov mov (bad) imulb and xor inc das in js out dec dec and out mov inc arpl sbb sbb call scas shlb xchg lods sbb sub stos insl ds inc pop mov rolb ror push loope ret aas mov aad inc (bad) lret push pop sub cmp scas inc pusha sbb jns or push inc sub outsb lret ss jle sub pop fdivrl (bad) xor cmc sbb and cmp cmpsb jne adc (bad) mov mov xor adc pop jmp mov lods imul cmp pop push and int3 sbb xchg mov jle xor push in adc lea and pop add pop dec lds and pop pop pop add jge cmc push mov in jge (bad) xlat lods jmp outsl lds test cmc ss enter xchg lock or es std aaa ficompl mov fidivr and sti mov aaa mov cmp js negb data16 inc icebp fwait mov lds pop add pcmpeqw jg stos lea inc adc xorl cmp (bad) mov ds iret or std psubusb dec mov repnz cltd mov and test dec (bad) lret hlt in test push in xchg sbb xchg mov dec jge mov bound into cmp cmp stos xchg loopne sarl mov iret or inc fcoms sub xchg and addr16 jns xchg push lcall inc ret push jmp push inc sub pushf imul lds cs (bad) pusha or mov mov cs push jmp cltd mov arpl js cld push aad into mov lock mov and popa insl dec rcl inc xchg cld xchg mov jecxz cmp popf add jmp (bad) xor cmp mov and addr16 xchg into pop (bad) cwtl rorl xchg mov idiv and adc loop call lret and aad cmp scas inc repz test push movsb fdivl push repz lcall lock xor repnz jnp,pn xor test or sbbl jns xchg roll sahf psrlq cltd xor add xchg inc push test xor xor (bad) cmp in pop (bad) cld cmpsb daa add daa (bad) leave cmp pop in std cmpsl or push lahf bound lock outsb out int std mov scas imul pop push jb inc push xchg les aaa int lahf lret pop popfw call and fdivrp stos fdivrl inc mov in push add out fdivl pop insl jge test js movsl les mov cmpl rolb jne ljmp (bad) push insl xor test pop fucom into les sub mov fcom add stos lret push (bad) in and adc in cmp adc fwait pop das sahf inc mov mov dec and cmp pop outsb xchg add mov pop fstl into sub pop outsl pop push scas iret cli mov adc or ret ror outsl inc jae repnz fisub mov aas movsb adc lock pop clc imul fisubr in mov test ja,pn mov loop add test data16 lea cmp ret jne and mov sub pop jns inc pop movsl lret andl (bad) lock pop call xchg mov inc cmpsb pushf rcr mov jb pop stc jne pop or fild push lea shrb movsl inc push mov mov inc popa sub sbb adc jecxz sbbl cmp adcb in fadd pop adcb adc in or loop mov test lds mov ret shll mov sub (bad) mov add jne sub clc aas popa fdivrl jns push aaa stos adc pop inc mov pop dec in dec repnz xchg int3 push pop sbb jp push add fiadd or in push mov sbb jnp dec shr outsb push pop icebp pop stos (bad) dec mov sbb lea sbb pop loopne mov push pop ret fsubl ret xchg xchg divb or or lock call xchg jg repnz mov cmpsl (bad) jecxz insl cmp aad outsl push push rcrb pop push mov imulb fidivrl arpl push clc or lock (bad) ret mov lea xchg cltd dec scas mov imul jp repz xchg push or add cmc mov xor mov data16 jmp ret cmc (bad) mov xor out sbb or cs cld mov xchg jmp in mov bsr test mov vmread aas pop js and push jg loope gs lahf xor gs rol mov mov mov roll ss les or xchg cmp das decb das repz dec sub pop stos adc cmp xchg push pop mov lahf cli cld and pop sub insl fiaddl iret arpl mov out xor jp inc in lahf dec loop cmp xchg and ret dec push rcrl jmp or mov fwait iret and push stos ss imul push push xor ja andb pusha lret negl je and sarl mov stc mov jge les sahf or pusha ja sbb push push xor les add leave add (bad) sub sub out ja mov push mov cli movsl xchg pop out clc jmp xor dec fldt and push inc mov in jne imul enter gs (bad) repz in xor and test popf cmpsl (bad) fadd insb stos scas cmp repnz pavgb jns xchg xchg push sub and inc mov cmp stos (bad) aaa dec es leave enter add test mov mov mov adc das test xchg dec cmp js mov sub popf and test ret cltd jp push and mov sarl outsl inc enter cld xlat sti jmp sbb (bad) (bad) int or xor pop cli sbb popa sub stos mov sub cwtl jnp pop adc add push jns lock pop push jge test mov xchg mov ss (bad) (bad) shrb out jl test fwait (bad) fcmovu or adc push jnp pop das in dec xlat sbb add mov xchg add sbb pop sarl mov adc cmc sbb fldt divb sbb out inc ret sub or bound imull lcall in mov inc loopne loopne add faddl fsubrl sbb std stos inc xchg test and jb jbe push mov movsb pop in daa or stos insl sbb (bad) jecxz push dec sbb sbb sub outsb cli (bad) xchg hlt (bad) outsb into jp push bound jb lock (bad) cmp daa sub je out xor js xchg adc or fs popa scas xor or ret jecxz cmp pop fs into stos adc aaa dec jnp jge pop mov sub outsb push adc (bad) pop into mov mov dec pop push pop cmp push outsl dec mov pushf jns sarl jp push jno ds (bad) (bad) xor push or xorl rorb adc addr16 mov xor or sbb mov xor (bad) (bad) mov cli adc sarb clc (bad) jb sbb shrl and std (bad) ljmp repz jns mov rcrl gs ret sub (bad) xchg pop outsl xchg jge hlt imul cmp pop ret ljmp fnstenv loopne std adc int fwait dec pop sbb arpl xor int3 loope mov xchg xor or (bad) fnstsw and int3 fstl lods mov lods lock repz ss xchg insb mov xor mov jecxz call dec cmp mov pop or xchg sbb nop xchg jg or mov xchg divl in adc fs dec rol fisubrl jae les jp sbbb stc and mov jmp push push and sub popa push cmp cs out sarl dec mov and add xor clc out pop push sub dec mov hlt xor xor fcomps and jo mov (bad) dec cmp adc xor into add push mov lea or jo dec add pop dec adc popf mov insb mov xor ss test or dec inc insb (bad) and (bad) adc lods cmpsl fimul scas jmp imul incb push inc push clc enter outsl (bad) repz mov inc cmp and sti enter stos pop stos or fmull aad sarb xchg icebp xchg fiaddl clc adc add adc push (bad) stc sbb sub (bad) lock push into aaa adcl test xchg mov mov ds sbb xorl aad ss scas iret dec mov mov mov jp clc adc sahf fldenv pop sbb cmp pusha jmp aad mov push lahf pop sbb je mov and icebp and mov push rcrl data16 faddp xorl push mov cmp inc (bad) (bad) daa clc cmp arpl cwtl or pop inc push int3 mov adc lahf xchg xchg xchg xchg or iret rcrl cmpsl jl push inc inc adc mov pusha sbb adc dec push xor leave aas (bad) dec rorl push push cltd jbe inc dec and les fwait inc dec and pop imul fist or mov mov test out xchg jnp in js dec cli sbbl inc ds cmc movsb jne gs mov mov pop and cs jnp lds pop in int3 mov jnp pop lea enter xor xchg inc daa imul xchg pop adc jbe (bad) mov adc xor ja (bad) lcall aas adc or std das mov (bad) iret lret les sbb add mov jne pop fs scas xchg loop pop cs (bad) mov or lock decb das fnstenv xor fldz push jae js hlt andl rolb mov in push jge mov (bad) out dec inc sub dec hlt inc test test dec outsb aas imul lock aaa mov aad mov pop sub push or xchg mov popf test repnz and popf jbe into shrl adcb outsl xchg cli push sbb mov sbb (bad) ret or inc sbb int sub aad dec repnz pushf pop scas imul mov push or in cmp in mov fldenv pusha iret dec lds scas inc xor add jns inc int mov jmp addr16 xchg ret sahf js stc jp cmpsb clc in push push dec (bad) scas cmp push cmp ret mov mov xchg add adc mov (bad) rcl cwtl mov xchg clc in mov lahf sbb out or xor mov push dec push (bad) mov je xor aam cmpsb jg cs movsl mov scas add push enter add mov and in cld mov mov sbb int3 mov push fwait call inc add movsb loope or add (bad) mov push pop testl and add adcl pop jbe xor fdiv xor ffreep mov mov jb ret adc cmp dec cmp in mov push jns ljmp loopne (bad) in mov push frstor (bad) sbb stos push lods adc xchg (bad) mov sbb ret jle cmc mov sbb out popa psubq cmp inc adc mov mov arpl imulb rcr fwait cmp aam push push arpl jl sbb jmp scas ret push enter mov in sub int3 or and mov lret roll pop inc jg scas ja push pop lret dec fs push int3 or loope xchg arpl test xlat pushf xchg xor int iret sub inc adcl cmpsl mov xor push or shll stos aaa hlt arpl in and fsts mov stos lahf icebp jo insb inc pop sub cmp pop and inc test ret sub jne repnz xchg jl cmp pop push sub clc lock xchg in push lret leave (bad) jo insb inc sub cmpsb pop sub in fisubrl jge stc mov mov clc movsb sahf (bad) stos fistpll sarb push xchg addr16 sbb scas movsl mov testl push lcall je in movsl cmp in inc and pop inc test mov cs cmc add rorb repz adc fadd xor ret push add scas popa sub les jecxz push cmp adc (bad) es mov fs adc sub movsl ljmp xchg mov add xchg lcall push xchg rcrl mov inc scas movsl add stos pop imul jg aam or out int3 mov scas cmp imul cltd fs push push xlat or push in jnp movsl adc add add icebp lds (bad) sti sarb in fcomi xor ror mov push fwait mov push aas dec and add test and jno sbb fwait cmp fildll dec mov pop test sub sub sbb and mov shll jne in (bad) in push movq in sahf mov idivl cmpsb insb pop shlb fbstp test negb lret push add mov mov enter add loopne lds out mov jp popa lock iret stc inc lock adc sbb lods mov and arpl xor movsl imul jp (bad) cmp fs enter sbb fs dec loope,pn mov mov outsl mov movsl inc or daa push adc inc dec xor cwtl jl aad pop les mov inc lods xchg fidivrl sub dec shrb pop fstpl pop out dec stc pop cltd push jb or loope mov mov and rolb mov mov xchg xchg fimul fistl adc cmp (bad) dec ret lret clc arpl (bad) je adc pop clc lret stos (bad) add xchg push ja sahf cmp test insb mov inc pop adc mov out repnz rcr aas or mov mov and imul sbb mov push enter insb xchg (bad) xor jmp jno loope inc sub popf stos cmpsb mull fsts jecxz mov pop enter (bad) jns inc popf cmpsb jmp pop notb cltd dec ljmp loopne (bad) ss jge repz pushf fstl jg xchg in into (bad) jne ss nop es xchg jl cmp cmp cltd movb mov xor adc dec xchg or (bad) sti sub xchg adc call rol fwait cmpsl out js xor arpl push icebp lret push sub add add insb xlat test sbb in mov lods (bad) int3 fidivr mov mov pop lret loop cld imul fidivr (bad) loopne inc fimull loop dec scas stos addl jge pop arpl dec out pop inc repz push sbb dec enter test or or leave mov mov and das jnp andl mov and jle inc and sbb xor add setno pop mov push sub stos (bad) ss dec test scas pop leave adc dec mov mov rcrl pop or and pusha inc jb pop or jns cmp and xor outsb push popa ss jo arpl sub cmp pusha sub jg pop mov (bad) jp pop push mov loop les (bad) cld jb jae sbb mov scas rorb fisubr lods mov subl sahf adc adc enter clc jno mov cwtl into movsl lods imul dec and mov out inc je sub test push js adc mov sbb insl cltd pop mov sub movsb int mov pop mov nop mov pop (bad) popa push and push push arpl sbb bound rcl dec mov sub pop (bad) out bound cmp lods dec inc les pop push in in mov dec jno in cmpsl xchg pop mov ljmp adc test jne sti or (bad) jo xor mov fsubrs push xchg out jmp mov inc adc mov push outsl jo popa jg stc jns (bad) fcmovne xor out int sub cmpsb cmpsl mov shrl sub mov rcll in adc adc cmp rcrb leave cld enter pop inc loop add or ss mov or in or jecxz bound scas (bad) sti push push jge ss sarl add out mov ss sbb adc xchg pop or push stc neg jl or xchg ror cmp pop lcall and sarl xchg loope insl xor lret and push or inc push (bad) aaa movb jg and mov insb aaa sub ljmp jo (bad) mov dec xlat jne jmp ss icebp aam les jl fimull mov add cmp iret adc rcl mov pop scas mov clts je mov lahf jns mov sti or jle mov jns inc pushf xchg xchg std hlt sarl cmp inc loope pop mov add andl addr16 pop cli xlat mov sub adc mov add mov ret fmull cmp repnz dec or xlat jg or jl ret mov fcmovu cmpsb mov enter fs add das ret je fwait xlat cld xchg xor lds cwtl movsb testl mov jle xchg loop lock jg inc outsl lods jge inc fmuls jmp and sbb cmp push pop test arpl mov sub jp mov clc xchg cmpsl cltd flds cmp mov and and xor fiaddl mov shll (bad) scas into adc mov adcl cmc jl jecxz xor out mov cli cld nop sbb pop decl xor aad sbb cli and sbb add stos lock outsb jb add jnp and repnz pop dec cmp adc (bad) ja or lahf xchg push mov dec aam add jg fnstsw and add insb or or int movsb sub or int popa shll cmp mov iret cli aaa andl mov fmuls or cmpsl or add cmc xor push mov ljmp inc push shrl mov mov arpl dec cwtl sahf loopne jge arpl leave mov cmc shrb push push nop (bad) lods pop sub add ljmp call dec mov mull xchg sub testl gs rolb dec or cmp (bad) out inc add mov (bad) or cmpsl sbb adc and stos inc pop inc mov ret pushf das xor lods mov pop lods movl sub dec stos xchg mov and xor pop testb adc insb or pop inc sbb cli jge sbb cmpsl gs aad inc ss pop ret inc mov jnp or mov add inc (bad) jbe push jb mov fs push inc pop mov inc cmp dec push mov in lods and js mov dec mov inc repz movsl inc sti xchg add xchg lods dec rolb adc fucomp fldenv dec enter xchg mov mov mov outsl leave test jg push pop jmp dec dec dec ret (bad) jp or scas jge adc add mov outsb and es xor add dec shr dec fildll xor sbb mov adc popa pop xchg or ss mov ret mov mov and jmp testl inc cmpsl mov out call sahf pop movsb ljmp fadd mov jge leave pop fwait sbb jbe jae clc sub mov aaa cmp test lcall (bad) fsubl and cmpsb inc xor sbb jecxz push (bad) sbb adc pop ror jecxz leave sbb inc mov mov pop les jnp mov insl (bad) jne inc sbb jmp out jne cwtl mov xchg test mov ja and pop popf fstps js pop xor sahf cs repz inc dec scas adc and inc ss inc (bad) je cmpsb cmc add sub fidiv popf sbb xchg xchg mov pushf arpl in (bad) testb dec xor mov push sbb leave jae mov call mov lret cmp int3 jnp add mov dec ret xchg faddl fdivrs sbb fiadd adc xlat and xchg pop or mov stos ret add pop loopne or push roll addr16 mov cld (bad) out test jmp ljmp sbb cmpsb sbb out jmp gs dec lods cmp mov pop in adc jns es lret mov mov jge lds xchg sub add into pop dec popa add pop xchg enter pop adc stc icebp xchg xchg mov scas popa psrlw and dec and call dec nop je pop or push orl xchg clc (bad) movsl dec cltd jae movlpd xor mov xlat cmc leave jge ljmp insb pusha xchg jecxz mov stc flds mov jno mov inc leave inc sbb inc mov (bad) jecxz mov jno push lahf mov cmp adc xor or dec lcall leave push ja and repz jl insl add inc pushf insl dec mov xchg arpl jae mov dec out sti rcrl jge iret or push inc xor fdivr cmp imul dec or push xlat scas daa sub dec mov faddp mov xorl jmp add xchg ljmp and call jno clc movsb inc pop sahf movsl sub cmpl sub outsb jge nop jl xor add outsb loope jno pop push sbb mov cwtl std dec fadds lock cmpb ds push mov das push sbb dec inc sahf push jns das or jnp add add push in add mov test punpckldq push mov cld stc lret aad lahf xchg in xchg push push int3 je adc (bad) aas mov pop popa daa stos aam sbb (bad) ds aam push push xchg and sub cmp mov mov jle enter xchg inc stos fsubl sbb dec incl xchg push ds es or cmpsb cmp inc add outsb repz mov out xor and jecxz push and daa call push inc cmc xor mov and lret inc fisubrl data16 pop das jl ficompl add mov adc stc je popa clc jb jno push (bad) test nop inc jmp jp pop test fdivs ficoml dec lret jle sbb pop or lods lods out mov push sub orps insl das icebp push pop out loop mov inc push mov inc jg arpl and dec push mov movsb jb outsb loop sub pop arpl adc fldcw sbb mov stos dec orl adc js je daa xor std (bad) pop add mov mov lret loopne imul mov adc adc dec or hlt jnp cli out add cs call es adc and or int3 loopne mov je lea aam ss decl dec sub aam mov (bad) jo and lret or int das scas adc adc movsl pop test mov rclb pop aas push cli adc mov (bad) iret cwtl lea leave mov jae cld push dec fxch jp cmc mov inc in xor outsb insl in jns and mov cwtl and ds ljmp ljmp jne insl dec addr16 mov popa push or mov (bad) xor jb mov (bad) pop aad mov xchg mov mov adc cwtl aaa pusha in in pop iret mov idivb or pop mov adc jg clc xor push push lret imul inc (bad) std push jl add les adc icebp inc jnp dec rcll mov sar nop sarb sbb xchg shr jno leave mov xchg pop sbb mov std inc pop add sti xchg xchg and (bad) adc mov ret xor jo and push pop mov inc or dec sub pop imul mov fdivp daa popf mov add jae (bad) insb inc scas jo stc mov xchg js jle cs fwait test sub push nop dec mov sbb clc ror push dec lods mov inc jo aaa ret xchg sub fisubr pop push mov jo ss enter xor add mov jle pop xchg cli pop inc mov (bad) cmp (bad) fstps and mov xchg ds lods sbb adc mov insl sarb in ret dec cmp into std stos mov pop hlt loope pop xor daa jge add mov jne sbb lds icebp xchg outsl out outsl mov addb push adc and xchg jno adcl sub dec push adc in jp ljmp mov je out sahf aas outsb add sti je movsl add insl fs pop fdivrl (bad) sub aam add mov pop cmp jns adc push inc jns pop rclb int3 scas scas jle lret push mov sub out xchg insb int3 inc fist imul push shrb lock iret fbld imul push xor fwait xor movsb iret add shl mov fld1 (bad) ljmp sub adc fdivrs xchg mov (bad) mov sbb push push cmpsl mov sbb lock jbe (bad) and pop mov fs mov xor psubsw rorb mov add xchg dec shlb loop pop fisub or inc pop jmp pop jle scas popa das daa dec (bad) or pop clc les addr16 sbb mov lahf push mov sbb inc gs dec push pusha jl popa sub pop push out and ds imul pushf es popf push jbe ret dec adc aam mov adc sub outsl cmpsb aas out (bad) fsts cmpsb dec iret test mov test in in daa ret push shlb inc push repnz loope adcl xchg adc (bad) mov ret dec mov in inc mov pop cmpsl or je cld push jle push lods mov mov sahf int push pop cld pushf in aas pop daa sbbl sub cmp icebp (bad) scas mov imulb jmp jo clc addps mov mov imul and jg cmp mov in rcrl sub cltd sbb inc jge loopne push lds sbb inc mov dec push lea aas adc lret std sub bound pop sub cmp mov push cli in mov arpl sbb cmp out stos add mov mov andl inc les (bad) repz pop cmc lcall jg inc lds inc pop pop add das and mov in ret loope xor ret fdivrl loopne imul cmp out (bad) pop push mov xchg mov jp arpl inc in adc xchg (bad) cmp call rorb push push int3 adc xchg cli aad xchg mov xchg cmc das in or or lcall mov lcall adc dec and sbb add inc dec dec jmp mov test fdiv popa (bad) out dec idivb mov inc jo movsb stos dec or das imul subl dec push xchg lea push pop pop mov or (bad) dec insb fucomi out test sahf icebp sti test daa pusha ljmp inc into inc mov cmpsb fwait cli inc xorl adc stos mov (bad) (bad) cli mov out mov dec mov movsl jae rcl inc pusha imul loope sub mov mov pop stos (bad) inc test inc push iret sbb inc push arpl stc and pushf sti sbb hlt cmp mov pop xchg out sub aam aas cld icebp (bad) in inc out mov mov loope pop dec lret xor ret mov lods pop mov inc les xchg in out add mov xchg loop fildll dec sub jecxz scas sbb dec clc cmpsl sti mov sub daa lea cld mov clc out (bad) aad cmp rcrb mov mov mov inc inc xchg mov or (bad) adc aam stos push mov pop cmpsl (bad) in inc mov adc jnp fstpt stc xchg push mov push stc add mov jb or or mov dec pop call sbbl outsl mov mov stc movsl sbb (bad) mov jns aad pop jecxz (bad) (bad) cltd fsub push (bad) out sbb ja (bad) adc dec push mov sbb adc adc sub clc arpl xchg sbb dec fcomip jle sbb lret js push inc stos lret andl fistpl jbe nop test xchg scas stc nop xchg in jo cmp hlt push lea lods add add popf jnp aaa loope fmull jp xchg fistp fistpl fldcw jle dec inc jl inc ret insb in imul aam adc fimul rclb pop sbb jb cwtl bound pop xchg cmp flds push test cli jo dec sarl je and pop mov jl test push xor test dec dec dec inc xor xor loop jbe inc pop jl mov repz sub adc dec add mov cmp jb sti mov jg adc pusha fistl pusha lcall scas ret cmp xor das jg mov cli test shlb popf loop inc mov push fsubp js push or (bad) jnp cmp jno lea pop add adc (bad) and mov daa jb or pop cmpsl inc les ss fcoms push lods nop outsl popa int gs jae jb jno mov jb out iret sbb xchg add addr16 push pop es pop xorb mov mov mov (bad) vpsubd outsb mov jg pop cmp xchg std sbb mov xchg dec or xlat cs jp or push or push insb addr16 xlat xchg decl adc jns cwtl iret push (bad) xor aam sbb imul cmpsl cli xor cmc cmp test pop add add mov pop pminsw xlat aad jl and sbb mov fldl xchg inc fwait stc mov testl push fsubs xchg gs (bad) jg mov jnp or ret adc sti ret mov ljmp roll xor (bad) (bad) xor xor jge cli and pushf xchg cmp out cwtl hlt daa jle and mov xchg or xor xor and push lcall jg dec data16 aaa xor jae push repz dec (bad) imul mov jae arpl popa test xlat mov outsl jge nop adc pop daa stos (bad) cmc out ret iret xchg mov (bad) aam pop popa int3 and loope stos (bad) (bad) push fild roll out push lahf fidivl loope jno hlt pushf mov aad lods (bad) xrelease dec scas inc xchg pop pop fwait mov xor mov jbe lcall dec es rolb (bad) faddl fnstenv xor movsb sub jge (bad) add popf mov sti fimull mov jb repnz (bad) xor jae mov mov roll adc lods or mov push mov sbb in jns in les jae xchg sahf mov jge cmpsb (bad) hlt xor (bad) xchg xor js dec in lock hlt hlt cmp xchg call pop movsl and in and push ret inc jno rcrl scas cmp mov cmp sub pop inc fwait pop mov fild add jo movsl mov (bad) pushf cld and mov nop pop xor pop loope jno mov push enter in sub popf xor dec xchg inc adc jle jl add xchg mov pop int3 inc fs inc imul xchg jmp loopne sbb mov out sub jno pop test in cmp lock fiadd pop mov mov or mov push icebp cmp ljmp pop adc mov inc adc add aam stos arpl or test out pop ss data16 xor (bad) xor mov ror jno push ljmp stc (bad) pop test dec mov xor xor aad loope rep dec ret fcoms (bad) add movsl mov push fwait lods aad jo imul ret imul inc int3 xor pop test cmpsb fmuls cmp call inc shl pop cmpsl or fwait lret (bad) jl mov insb iret stos lret pusha push cwtl out out mov push idiv scas ret lret jb shlb ja daa fistl push inc or fist test jmp ljmp (bad) imul sub mov lahf pop add xor movsb ss pushf in add not call insb jb,pn inc in movntq pop lret push mov les movq fild pop add add outsb in jmp ret sub js jne or sub cmpsb fcomps fwait mov es ss adc mov pop (bad) lock inc sbb (bad) lahf test push sbb add cmpsl lahf cmc (bad) xor mov push xor lcall repz in cmp pop push inc punpcklbw mov lahf sarl fsubrp ljmp hlt out scas pop pop (bad) stc popf sbb lods repz and or hlt xchg int3 cmp jge mov fisttpl sub imul pop pop hlt or fs push pop rorb pop xor das mov inc jbe out movsl push jecxz lock mov mov idivb (bad) dec mov sarl popf mov pop cmp pop pop xor arpl mov fistpll push mov pusha lret xchg sbb sbb daa adc out outsb movsl inc test or push jno pop stos (bad) sub ret adc out or pop outsl sub mov mov imul (bad) xchg lods mov adc pop xchg push sbb ss xchg xchg xor sarb mov imul pushf jge iret fiaddl add aad sbb inc xchg lods push pop mov popf imul sbb (bad) jne pmulhw shrl insb xor mov imul ret imul punpckhbw (bad) in out (bad) je sbb es xor (bad) repz popa gs lds jl inc hlt enter xor or sub pop pop and sub push push into test pop iret cmp icebp out add or int3 jg test pop popa or and rcrb enter xchg ret and in leave sub inc ror dec sub imul push mov mov pop (bad) clc ss mov dec cmp pusha jnp mov pop movsb shrb cli add std mov (bad) shrb inc adc test mov cmpsb push mov cmp jns dec iret enter mov enter or cmpsb jo cmp in stos push out in adcl or rcrl pop jg clc aas jl incb xchg jecxz aam (bad) loope mov and lret daa int cmp fistpl out push sub sahf clc call and stos inc sbb outsl inc test pushf adc add loope out cld out jns mov mov lahf out adc sahf jns scas or cwtl jne je push xchg pop jp cwtl jno push or fimull push aaa sub pushf icebp fadds xchg and ds mov or out mov mov je gs jmp xor mov inc cmp in jg xchg or out add pop mov xchg and dec loope (bad) mov or (bad) js sarl mov stos js out sbb (bad) popa mov and mov fisttp sub pusha ja divb les loop sbb call mov dec aaa cltd jge sahf js and (bad) mov in mov pusha add jne or (bad) jbe lret jg push xchg ss sbb dec mov xchg push xor xor ret pop xlat call out adc jns scas jb xor jg into outsb lock xchg xchg movsb test mov es ret loop sub pop mov out aam les mov cmpsl push inc repnz mov lcall and ss orl add sub ret mov fdivrs push adc sub pop lds pop push insb jo comiss jo les inc and mov jne push ret mov js dec rcrl push push cwtl push jmp in (bad) xor or mov pop add fistpll pop call sbb rcrl jno xchg aad pusha ret or add xor seta arpl icebp jmp sub pop jg fistpll test pop les sbb jne or imul push adc call jmp ja sub (bad) adc sbb mov and or fbstp test or jo clc push push dec or js jle pop and mov jmp test push mov iret test insl lock cwtl popa jp inc ret scas hlt sbb lods inc icebp inc xchg js stos mov cltd dec and jge stos inc pop cld inc loop outsb lock stos xchg inc xchg inc inc shl movsb pop mov jae jg sbb dec stos pop stos stos jge in (bad) ja mov icebp inc pop xchg adc add stos out xchg adc stos mov bnd sub scas pop dec adc inc lea mov repz clc lea ret xchg cmp sbb xchg lahf in lahf xchg addr16 xchg adc dec int xchg jecxz scas pop push and lcall mov lretw fild jmp int3 or nop xchg xor pop cmc xlat mov rcrl dec jns jbe or add jo sub stc sahf out aaa jnp push pop ljmp fs or insb enter fst mov mov mov add inc push xor adc xchg xchg xlat jecxz pop jb push mov and in adc (bad) out dec cmp dec or pushf cmc or push sti lock cmc mov cmpsl xor dec xchg or ficompl in dec cmpsl iret aas mov xchg push pop mov adc xchg xorl aaa sub sbb mov js sbb lahf lock fisubr stos jno jno fdivrp adc aad jg,pn rol loope mov mov fistp (bad) inc adc adc add (bad) jle lock add sbbl mov or je subl jbe out lods pop dec pop mov push nop xchg push jne or cmc pop push ficom out dec inc xor ret psubsb mov fistpl sbb stc ds cmp sti fimull rcrl pop adc xor mov andl cld inc shr movsl adc cmpsb mov (bad) cltd rclb sbb jmp lcall cmp fsubs add add cld clc cmp (bad) into in out fstpt or test test addl movsl movsl movsl das push push dec dec and pusha push fidivl jl pop add lret mov inc inc xlat fistpll adc int3 std pusha ret jp repnz (bad) adc std add fs sbb insl ja popf out sbb fisubrl mov mov les mov mov sbbb cmp negl cld xchg pop aas nop add je mov xchg pop xchg dec js,pt rcrl les inc faddl dec push lret out pop test (bad) int3 fstl push in repnz sub cmp insl jecxz stos cmpsl dec stc xchg jb int jg pop cltd xor inc ret mov jbe xor pusha out inc xchg pop imul cmp test lock into insl push pop pop and pop outsb cmc xor or or and stos dec or out inc jecxz ud1 pop icebp fdivs push pop dec cmp mov mov xchg and aas in test jnp pop pop inc adc cmp hlt cli xchg or mov push lock test stos pusha sub sbb push mov aam adc xlat sbb mov xor shrb or into fisttpll in pop jne jmp mov dec sub xchg inc mov jo (bad) icebp or mov mov and mov push inc sub lods push lods (bad) out into pop fmul push inc jle adc add xchg dec push daa and dec and in out cmp jnp xchg mov add aas (bad) jo mov cmp ret mov lods xchg fistl out icebp xor push dec xor aad rcr sub imul inc cmp outsb inc pop sarl inc mov fs xchg mov inc pop iret sub sub (bad) in sub and pop ret lods es rcrl cmp push lahf in or push (bad) or roll gs pop adc adc icebp je leave jbe fisubr fidivl scas add js cmp js pusha lahf iret repz mov dec (bad) aam mov lods mov push aaa xor push push cmp xchg mov push (bad) ss aaa inc jbe test jg ret jp hlt adc movsl sbb fsubrs rclb cmp add jl sub cmp rolb cmp sbb dec pusha mov xor ss push sub stc lret es push mov mov jle adc (bad) sarl add jb and and xchg rcr cmp xchg scas sbb (bad) push or xchg xor lcall stos lods int3 jle jle mov loop scas adc sub push mov fucomp stc ret inc out (bad) xlat xchg push mov pushf push jnp add and cs jb xchg in fs out icebp imul and es sti cld pop pusha movsb int3 mov mov fwait add pop mov int3 sti jbe dec pop in or mov scas test pusha mov pop std ret xor pop pop jo xchg mov dec sbb jge movsl lods aaa push push (bad) int enterw ja mov bound lods cltd (bad) xor mov (bad) fwait mov je xchg or data16 xchg lock divl cmp cmp cwtl cmc and mov icebp pusha in cmp lock mov or inc popa movb iret sub cmp pop int3 outsb ret cmp pop cmp stc jne aad xchg scas inc lock xchg int3 sbb ret cmp out dec push mov mov repnz lock int mov inc lret sbb lahf in xchg lcall ror fiadd cmp test lret dec movsl in scas or mov (bad) cmpsl test inc mov not inc aaa pop test rol fisttpll mov push (bad) mov dec ljmp jp push call jbe jecxz out inc dec adc inc hlt addr16 xchg add into fsubrs mov icebp dec xchg outsl inc xor ja cmp jmp imul fisubr test rcrl pop inc stc inc cltd inc push fadds inc in leave pop xor popf movsb into (bad) pop call arpl mov aaa inc addb inc dec jo pop lds jp (bad) ljmp dec mov adc mov imul jnp inc lret mov out xchg dec pusha rep or push lret lods dec shl adc mov iret hlt sarb inc cmp add movl fs sbb dec inc jne dec ret leave fstp loope mov lret dec int rol fstp loope mov lret ret imul aaa repnz and hlt out aaa push cmp adc (bad) dec cmp mov sbb enter sub mov sahf xor and and iret adc sbb ds mov dec xor sbb push mov gs xchg mov sub xor xor and add mov and (bad) mov add sbb xor inc jle aaa pop xor pop sbb xor test mov cmp add cmp jo push clc inc mov mov pop lret push sub dec and push sub jle xor and sti (bad) and out aas out inc sbb bound xchg inc or xchg imul sub push adc jle aaa fldl jbe jle jbe sbb push mov cmp mov and jbe jle and add xchg faddl in aaa rorl imul mov imul add ret or inc mov inc (bad) mov fildl xor repz repnz (bad) jne in add lods fs fstpl sbb flds lret cmpl xlat mov popf pusha imul outsb add mov pop push std (bad) int mov ljmp jp sbb out pop mov adc jb movsl repnz scas xor ret sbb stc mov fidiv or mov jo out adc pop mov jno adc mov popf ss or rcrl mov sbb mov addl lret or cli mov aaa dec lea xor in mov adc add ljmp movl xchg mov or ret or leave shrl inc gs or push push imul inc cmp xor and dec push xchg into addr16 sbb and dec add bnd or hlt fidivr adcl jno jp popf cwtl cwtl push sub (bad) push inc inc int ret cmc add mov sub and hlt ja rcll xchg (bad) ja cmp ja dec gs (bad) jle jp cmp outsb orl imul nop pop mov jecxz lods std and pop jb scas (bad) scas push pop xchg or fbld pushf fmull jecxz (bad) inc or cmpsb inc dec cmp dec sbb mov sbb (bad) pop push roll popa jmp lock and out xchg stc add sbb add imul hlt cld push (bad) testb inc cld aaa jle stos mov jl mov and mov bound cmpsl mov fs inc jne in faddl shll add or mov cmpsb push add in mov scas or nop xlat fmulp jg int3 mov xchg cmc mov push clc outsb popa push test insl cmp call mov cltd cld jae gs int mov push jmp push flds pop xchg and (bad) addr16 cmp mov mov push inc jbe nop mov lods mov dec jmp add test add popf xchg and arpl sahf ss cmc push jae xchg ja loopne mov xchg mov push push loope mov (bad) pushf int3 loop mov lahf sbb lods push mov pop cmp ret mov lods pop sub (bad) enter loope das int test bswap add and add stc das push cmpsl int push cmpsb arpl push arpl mov mov insl sub cmp arpl or xor xor sbb push insl imul rcll pop pop xchg sbb mov mov outsb pushf outsb mov adc pushf lahf push loop xor lods and pop cltd nop mov xchg in or jnp dec cmp add adcl xchg inc lcall imul cwtl xor sbb xor sub add ja mov add leave push les mov cmp push les mov cmp cmpsb cmc cmp xor push imul and inc mov and mov addr16 xor mov inc jb es xchg push mov xor xchg divb es and inc nop inc xor xchg ds movsb xor mov cs movsb pop pop lret inc (bad) lock push xchg mov xchg pop cwtl jno icebp ja mov mov xchg add mov xor xor jmp xor sbb sbb inc or mov ss imul dec aas rcrb mov add sbb mov fwait bound inc jb jle cmp sbb ss and addr16 pop aam push add or out dec arpl dec xchg xlat xlat decb pop dec sbb sub and mov cmp bound in into jae push and popa or adcl scas les in sbb cwtl pusha xchg pop int3 add cs fcmovb sub insl xor and jle mov or mov fmuls cmpsl cwtl adc sbb xchg push jmp and shrl aaa mov fcomp fabs jmp add pop mov sbb mov mov xchg adc daa lcall and movl jge (bad) and insl xchg nop/reserved cmp ss mov mov sbb cmp inc jbe mov add pop mov movsb and cld pop xchg push out xlat xor mov or jle pop cmpl push mov insl aas cs fldcw into jae icebp stos pop mov lcall pushf (bad) js jns push sbb insl pop push add sub push mov pop mov aad push xchg int3 add adc daa adc jp std xchg stos loopne mov add js fdivrl mov xchg insb xchg arpl or aaa inc rdpmc fs hlt cmpsl insl jecxz,pt mov lea sub fwait cltd cwtl lcall stos sbb in xchg (bad) xor fmul iret sbb mov mov adc pop xchg lcall adc mov xchg aam pop imul lea jnp sbb sarb ja xor sbb or leave iret sbb sub pop dec ss adc adc mov mov pop test leave jo jae les mov test ret icebp icebp pop aas xor ret les fcmovne lods xor stos shr lahf iret (bad) out shll (bad) mov adc arpl leave pop daa add or shll (bad) pcmpeqb test jp int ret clc stc mov mov repz not imul rcll pusha leave stc scas lret leave fwait sub push cli lods (bad) pop inc dec out pusha mov push iret aaa out mov pop push ja push pop xchg mov test cmp cmp inc repnz jmp test jnp (bad) xchg xchg out mov int3 sahf adc sbb lods movsb cmp mov repnz mov mov mov or test sub xchg add data16 add mov inc xchg sub imul mov fidiv xchg lods xor js jae cmpsb adc cltd cmc xchg jo push jnp aam mov jg mov sbb outsb xchg out test iret xor cmp repz xchg adc ja cmpsb mov xchg mov out adc lods (bad) dec (bad) repz loop xor xchg sarl jb inc xchg dec bound fildl mov inc and sub cmp mov je hlt int3 in (bad) outsb inc sbb hlt ret mov jge xchg push hlt xorb sbb adc test pop fidivrl aaa nop mov dec push add nopl xor std and dec jno jae fnsave adc mov sbb push add test mov out inc test js mov lret push lret jb gs or jge cmp mov dec cmc pop cli repnz das push lahf sbb mov insl jg pop xor and repz mov das dec adc lock xor mulb outsl dec test sbb mov cmp in mov jmp in xchg scas test or add in sti stos jns outsb fmul cmp dec or fldt sub ds rcrl out stos leave add hlt shlb sbb sbb pusha leave ds push sbb cmp out xchg push sub out test xchg sub adc in out into stos pop mov sbb mov mov insl in mov xchg cmpsb dec dec or shll (bad) hlt hlt out inc pop add in movsl stos xchg rcll sbb mov (bad) fs cmp jmp cltd mov dec (bad) ficomp pop subl sub mov (bad) fwait clc jo mov xor (bad) jmp or push jp sub mov cmc push (bad) pop lret mov add push and (bad) mov (bad) cmpsl jb lods fnstsw xchg jl adc insl ficomp and xor les jo jne mov sbb dec and mov imul in jmp pop sub push lahf pop repnz pop lods pop adc sub jge jns test pop out pop dec repnz mov dec repnz test fwait mov fnclex rcll xor pop in rcll out adc ljmp jmp sti dec repz inc fcmovb or and outsl ret test std aas hlt cli pop pop cmpsb xlat sub je daa or sub mov pusha pop fs adc test aaa aaa jno mov (bad) jp cmp rol ss push sbb sub mov mov outsb pushf cmp xchg daa pop sub pop sbb sub pop or add loope push and mov xchg mov ret adc lds push (bad) stos cmp sarb push (bad) sub cmp add mov add leave jne adc lret inc sub or jle adc pop jle and and pop fild xchg xchg sbb outsb xchg dec dec sbb and push ja repz inc test sbb icebp jecxz inc cld addr16 mov push adc sbb cmp jmp and cmp stos lock sbb sub pop (bad) pop shl fisub mov push (bad) jp push cmp add inc sub sub das (bad) ja fs sub sbb mov add pop enter add aas pop lret scas mov sbb cmp (bad) fstps movsb pop inc in jo scas and xor mov jb cmp xchg cs jnp cwtl cmpsb nop in scas fwait shl sbb adc xor xchg add or pusha aam push mov pushf and cmp jne ss jp push and lock jne gs out push loope popf xor or inc sbb add sub sbb cmp xor mov fiadd or (bad) mov mov imul loop lds (bad) mov daa imull and xor xor sarl xchg aad (bad) mov cmp dec inc or sub roll leave xchg sarl dec or xor mov ja sbb pop mov xchg std je inc rol cwtl in hlt std fistpl push add mov sti into (bad) push lods jl sub sbb les sbb fwait stos mov push lods mov or pusha pop imul in pop add out cs pop fs out lds jae testb movsb (bad) push xor cmp and dec sbb (bad) cmp imul adc lret mov hlt adc inc mov mov add or xchg cmp pop ja pop imul ljmp push jle outsb (bad) jbe mov fsubl jp push dec insb cmpsb in in ja or fs ret mov and subb mov mov sbb mov xchg nop (bad) dec out pop sub pop lret xchg ret pop imul aad add mov mov sub rorb lock movsl outsb xorl xor lock rcll out push inc mov or das les iret or int3 mov jle sbb jle and clc test pop inc mov mov sahf xlat sub sub adc shrb push pop stos mov xchg icebp in xlat rcl fs fidivl mov xor or out mov pop push sub lds stc fidivrl in loop movsb sub jge adc xchg (bad) xor rclb inc call repnz lahf sarb mov (bad) in cmpsb jno in sahf rcrl roll lret jl pop lds sbb push pop sub add test mov jo pop scas pushf add push pop sub jle sub movsb lock test pop push cmpsb cli fildl clc xchg cmp ror ret sub mov mov and mov rcl pop popl or es (bad) pop shll pop popl movsl in movb or subb inc push lea xlat fcmovb cli int3 sub sub dec ret pop lret dec int dec xchg xchg mov cmp push mov mov mov and ret push cmp sbb jns mov bound imul dec cltd cmpsl pop mov xchg pop mov push pop repnz mov dec repnz mov repnz pop add ds add (bad) gs add cmp ljmp je xchg push cld (bad) sub fstl std mov add cmp xor aaa sbb and sub cmp out cmp mov cmp mov incb mov add sbb int3 mov rorl in jbe sbb mov adc push aaa cmp xor dec call clc push push lds clc pusha pop push mov sub int (bad) jbe add sti dec xchg push inc ret das xor dec adc adc adc mov cmp mov call (bad) ja bound clc prefetcht0 pop dec hlt imul push lock fisubl leave xchg xchg (bad) mov dec scas lret pop sub mull fdivp das stc in and jnp jnp mov xor movsb or pop jecxz add test cmc inc inc aad icebp stos mov sahf xor jae lahf jns jmp pusha push add mov jbe lret add and mov out cmp cmpb fadds fsubrl xchg icebp ret fbstp jmp inc dec sarb or sbb mov push and mov xchg outsb inc sub mov cmp movsb repz jle xor cli ja scas insb adc mov les sbb addr16 jecxz mov hlt push hlt add jbe jnp pop jae pop fs sbb pop (bad) hlt inc cmp sub fnstcw mov and (bad) into ret xor lods mov cmp pop or sub into cmp mov dec mov push sbb mov xchg jae pop xor jmp mov xchg lea mov jns (bad) pop xor adc cmp stos gs js sbb sbb sbb (bad) xor jae cwtl aad sub nop cmc gs xchg pop push xor in pushf lods ret add enter daa cwtl jbe imul sub sarb or push mov add ds xchg lcall cmpsb sarl xor inc into xchg in push cmp pop pusha inc mov aaa mov clc add sbb scas enter push jecxz and push (bad) mov in imull ret loope add xor dec cs jae mov mov and and mov and gs mov sbbl jno mov and into (bad) fldcw and jb movzwl cmp loop rdmsr mov dec dec or cmp out es pop xlat ffreep mov sub popl dec addr16 test out test outsl mov mov arpl leave outsb (bad) jl imull sub pop (bad) in jbe sub test push out mov lea (bad) pop leave adc ljmp inc xchg popf stos mov mov sbb fist mov les and je inc shll inc push mov cmp addr16 xchg lods inc mov sub enter sub adc or (bad) fsubrs or cmp psubw test leave or loope cwtl xchg jecxz test fdivrl popf adc xchg jecxz test fdivrl popf adc xchg jecxz lds mov cld sub orl mov jns je push dec or dec pushf pop xlat (bad) cmc or cmp sbb shlb and cld jecxz fsubp hlt fsubp mov adc jb and push sahf popf sbb psubusb jecxz std mov int rcr sub bound ds insb ret push faddl mov jle jns sti push jae in iret ja pop loop outsb xor mov push jae pushf shrb into xor cmp xor mov or negl pop sub mov inc cmp imul inc sub fxch daa sahf add pop call cwtl int3 leave test dec mov ret fcoml mov int3 call inc popa and test mov ret out (bad) nop repnz sarb stos push and fwait lods fldt mov adc or dec mov jg mov push sarl int ror leave fnstenv js adc pop outsl pop push lods adc jns mov push mov cmp xchg adc push arpl jno or dec or xor std test add cld test push addr16 xor test lods fwait dec dec xor lods les xchg jge out repz sub push push test cwtl fiadd insb popf sbb mov add bound mov mov jb cltd or sbb (bad) fldl xchg ja sbb lcall shll xor pusha loope mov jne xlat xchg add mov jp inc adc mov jno sti not jne xor or or add das rcr mov push inc repnz packssdw (bad) decb aad mov nop jmp jp movsb push shrl neg push sub sti inc mov pop decb sbb pop inc and sbb cwtl enter inc fs gs cld movsl scas out movsb lret insl jg out inc cld es lods add sub lahf pop test fidiv xor ljmp psubsw inc mov outsl loope icebp and pop pushf and adc inc mov pusha add jne rcrb je xchg dec xchg (bad) hlt lods (bad) lea mov (bad) repz dec add in inc lock fistp adc sub or sbb inc cwtl jmp ljmp imul push inc out shlb push or fs imul mov sub fbld xor add mov jle aad pop pusha (bad) jno cmp rcrb lods dec stos sahf jae lods stos (bad) out ds jo push rclb pusha adc add sbb cmp out test insb mov and mov and jbe push roll and (bad) jno jno jns dec adc push add movsl imul xchg dec jecxz arpl inc jp es jns adc xrelease scas fucom and inc arpl pop jbe jnp add xchg in scas add pop popf in ljmp popa inc mov in add flds aaa out fnstenv (bad) jno mov loopne ljmp add jne shr xchg inc stos fidivl push or (bad) (bad) dec mov mov out int nop add repz mov mov test imul es ficomp sbb or repz cmp xor xor sti rclb sub cmp cwtl xchg outsb sub out jle xor xor dec xor mov cmp out push in pop fmuls aaa jle clc arpl stos add pop pop mov mov das mov test push mov mov js,pt jmp and jnp push push loope push cltd and add xchg sbb xchg int jmp cld and sub fidivr (bad) sahf ljmp ret inc lods cmpsb arpl cs push jle xor xchg pop rolb movsl inc jnp jnp push xor outsb fwait inc test hlt je inc in inc jp sbb daa mov inc mov and clc fstpt push sbb xchg cli dec fsubl pop dec int call and pop cmp jecxz rclb pop pop loop xor ljmp fdivr test xchg dec xchg in sbb fisub (bad) aad push sub rcrl mov cmc jnp dec push jmp stos test mov loop cmp icebp xchg xor sub ja xchg cld inc adc and fisubr sub repnz (bad) jns fs out sub push jnp xchg push dec in in mov push adc (bad) ljmp or sub pusha cld ret xchg push mov sahf sbb pop (bad) xor xchg int3 jle xchg ds adc (bad) jle popf test xchg fwait jg icebp iret dec movsb sub call push xor mov aam lods pop xchg sub ja mov icebp repz add sub xorl cmpl in push out adc int3 lea sahf adc clc loope outsl lahf adcl mov mov arpl outsl adc leave inc leave jae ja out fldl test in ret inc imul sbb mov xchg pop rclb adc rclb xor hlt jne hlt sbb in hlt lock ret div (bad) aaa loop adc rorb (bad) out xchg jno aam lods das xchg add xchg jb (bad) inc popl lock xor xchg jne pop aaa cwtl push cmp stos add imulb mov mov (bad) (bad) lods out mov xchg push imul cltd pop xchg lods lods bound int3 push cmpsl cmpsb jle ret inc in out aam inc cmc push outsl add js xchg pop dec lcall lret ds xchg sbb pop insb jnp loope int3 mov jnp add pop xchg in loopne rorb dec adc push aad rcrl lds in dec mov jb (bad) add xchg int sbb ret (bad) mov pop rcrl (bad) jl imul adc or int3 mov mov dec ret not popa movsb mov faddl gs in jbe lcall and and dec rcrb iret sbb inc call pop mov jnp inc pop adc lock inc (bad) push push popa xchg jmp (bad) push adc mov jmp fdivl add pop popa sbbl (bad) movsl jmp dec call lret mov imul jo add nop idivl in hlt dec add sti inc sarl arpl outsl jl sub repz sbb mov loop out cltd xchg (bad) adc sti jae sbb incb nop cli push icebp stos lea sbb mov (bad) xchg add xchg xchg js cmpsl fdivs xor (bad) sub sub shrb rcrl subb push xor push popl push mov sbb jnp cld pop push pushf shrl icebp jge daa loopne xchg xchg dec mov inc clc dec xor cltd stos into jb stc xchg add fcomps or pop jo push lcall xor mov ret push sti arpl gs ljmp or mov pop lahf stos mov or (bad) mov mov test jbe xchg xor bound popf das test xor xchg outsb jl fisubrl out sbb popa imul sub movsb xchg push or (bad) ss test (bad) fmul fisttp inc lret outsl negl jbe icebp negb xchg xor cmp ss addl pop jns dec xor cmpl jmp arpl mov jl (bad) jne idivb (bad) xchg xchg inc inc lock xchg cwtl scas ljmp addb aaa cli imul jnp in subl idivb pop sti jne mov pextrw or push adc cwtl pushf ret bound adc dec mov es popa mov fwait push xor mov dec cmp xchg xor shrl shrb sahf lret rolb out ficompl xchg mov gs jge ret insl xor mov mov cwtl clc mov scas popa push sbb push jp loopne shrl jg xchg mov push xor in jle popf stos pop mov idivl inc pusha push sub out or add mov and popf test or mov adc int push inc pop and jp test pusha sbb xor movsl loope mull mov hlt mov (bad) aas cmp jnp (bad) pop inc pushf add or push inc cli dec imul sub pop roll push cmp fsqrt dec fisubl xchg xchg inc int add ds jmp in imul inc lods cmp cmpsl (bad) int3 call cmp sub and xor cs push xchg arpl inc jno mov inc loopne flds int3 popa inc in pop loop mov jae xchg daa xor adc jno pop test or push xchg insb or jmp lret push sub mov cmp outsb fnstenv inc cwtl pushf das inc clc sbb push lock xor adc lcall in popf jmp and aam push lret sbbb (bad) pop repz repz das sbb lea lret scas cmp or sub pop daa je inc int3 rorb imul dec sub pandn test pop out jnp jmp mov or dec mov dec shlb mov fcmovbe nop nop add xchg (bad) nop xchg xor inc test scas and jp mov mov into hlt mov mov xor mov jb and push aad popa cmp outsl insb xor xchg jne gs negw cmp sarl or loopne xchg mov inc outsb pop into xchg inc lods mov xor addb or (bad) out push pop enter in inc add dec xchg scas mov addr16 pop rcrb roll (bad) mov pusha ljmp (bad) push movsb cli jle adc sbbl inc cmp rorb push dec jne fstl sarb push mov sbb pop rolb aad mov push dec sbb jnp jge aam in shrb outsl dec xor in and inc sahf adc jecxz pop xor mov subb lods sub or les cmc (bad) dec mov gs loopne movsb loopne sbb in mov pop mov adc cmp dec inc loopne hlt add lret pop iret sbb dec js in aam jge sar popa out ss rclb jae lcall scas sbb fdivl xchg xor sbb cmpsl jl or xchg sub adc and dec cmp jecxz arpl xor cmpsb loopne outsl in inc in mov jnp inc push jns (bad) adc fdivs das fadds (bad) insb outsl fsubs inc jp push stc push shrl dec outsl adc in push stos (bad) pop sub jl xlat add xchg movsb or sahf popa jmp jae mov cwtl jae fmuls push add into addr16 jmp adc jg add mov jecxz (bad) repz adc int3 or lret pushf movsl out mov adc loopne xchg xchg outsl fwait adc pop mov sub sbb adc push nop jl ja mov cltd pop ja hlt ret push ljmp cld mov mov sub lock cwtl push jae clc (bad) (bad) dec jb movsb xchg push loop push cltd daa cmp push cmp (bad) cld push adc jmp js je cmpl or sbb mov push jae mov loope arpl subb jae arpl lcall sbb mov shrl sbb mov mov rcl outsb sbb push mov mov in cmpl cmp out mov cmp stos sub data16 pop jecxz lods lea stc and loopne jmp lods fisttpl sbb out sbb je aas outsb and jp call int or push or lods rcll fimul adc add fstpt lret dec enter (bad) addr16 jns inc loop sub into (bad) pop inc push or enter pop cs lret sbb in xchg pushf mov ljmp cmp pop (bad) and call mov aad nop pusha add push popf pop or sar sub add outsl gs pop xchg add lods sbb das cmpsb add jecxz push das xchg pushf out add iret add mov mov incl imul test xor xor push popf ret lea jmp stos mov jecxz in js idiv cmp sub roll mov mov dec fild push pop push cld push pop mov dec (bad) out xchg subl xchg mov mov adc lock add pop xchg out or ljmp or imul fdivrl je daa scas nop fldenv cwtl push mov inc and or hlt jl,pt bnd cmp (bad) jbe enter fsubrl pop arpl xor lock stc sub mov (bad) repnz adc xor (bad) pop pop push xchg xchg rcll dec xor subl in mov popa mov xchg je out mov js call add push sarb lea sub jnp pushf fild dec sbb arpl dec out mov dec mov cli cld (bad) (bad) icebp fst and mov and out test or stos scas xchg mov fwait test ja stc push in or xchg daa jae out js cld popf or repz jg push neg pusha sub dec pusha out push mov sbb adc mov add mull pop (bad) pop mov xchg xor add mov pop in lret mov push inc pusha cmpb mov jecxz aas push inc sbb popf jp (bad) push icebp mov xchg push (bad) lods (bad) jle cld es popf imul inc les push cli fisttpll cwtl stc mov arpl mov mov shlb add mov mov push inc push cmp popf aaa jnp popa cmp test jno jns mov ror arpl arpl ljmp lcall adc xchg pop in cmp cmp je rclb into xchg fmuls les pop int3 xchg imul mov in icebp movsl lods sbb imul mov adc or pop repz popa pop xor sahf dec sar xchg push pop dec dec inc mov xor jecxz fdivp loopne mov (bad) jmp cmp repz add or push sbb cmp xchg in mov loope xor outsl cmp loopne xchg or jecxz mov aaa inc xor sbb and iret and (bad) fcomi adc enter mov scas xchg outsl jne addr16 cwtl (bad) icebp xor cmp sbb jmp mov (bad) in ja mov dec cmp stos inc cmp jl adc sar mov popa push jne dec mov xchg xor sarl dec sbb jbe movb add fsubr xor inc mov mov xlat push jbe repz cs sbb sbb (bad) lcall or data16 test jmp push icebp out dec sub adc xor outsb std xchg in lret adc aad or aad call movsl (bad) sbb push test les fsts inc mov xor negl jb shlb pop cmp cltd and or aam xor out out (bad) out mov pop push lret pop adc push leave pusha inc xchg (bad) push lcall ret jecxz jmp mov cwtl jnp add xor mov lret iret andl ret xor out clc lods xor jo and in lea and dec aas push rcll sub mov jno std ret fcmovb pop pop xor mov adc pop and xchg pop add add sub inc add stos hlt push outsb inc pop mov out xchg push mov fcoml aam xchg mov leave adc int out cld cmp aas mov xchg ret inc sahf or xchg lds in push (bad) push or jmp rcl negl (bad) int cmc in leave jg (bad) dec dec lds pop fnstenv dec sub pop or sbb lret loopne mov sarl in or inc add dec and int dec jmp (bad) jb (bad) jno shll dec mov sbb ret loopne repz lock and es cmp xchg sub insb scas iret cmp sub cmp add ds icebp jmp leave cwtl sarl (bad) imul (bad) outsb (bad) mov dec adc repnz mov push adc cmp cmp add scas jecxz jle cmp cmp clc mov mov icebp xor es add mov or gs stos cmp scas pop push push jnp out and aad jg mov addr16 iret hlt in dec inc dec sbb daa shrb pop cs loope mov mov add push std or jae mov push movb jb lock or leave stc cmpsl call insb lods movsl pusha call mov pop push loop addb xor pop stc cltd push mov jg pop outsb cmpsl outsb ficom mov aam lds xchg fucomi ds test stc outsb mov mov shrb xchg ficom (bad) mov sub insb mov pop push das cmp les repz xchg ljmp fwait xor add push popf dec add repnz imull mov xchg mov adc ljmp cmp push push jle aad sbb (bad) cmp xchg inc pop js cmp push mov stc mov aas iret sahf pop or xor and fcoms ja dec mov sar xor push rcll jmp outsb shrl hlt sbb cmpsl cmpsb insb lods add lcall pop (bad) cmpsb test jno xchg shlb jl add jmp gs and and loop or push xchg cmpsb or stos lret jne xchg pop jo push testl clc or (bad) iret in lcall push or popf test jae or push rcr add mov lret or sub or std push mov sub sub sub cltd push mov std cs sbb sbb mov sub adc xor fidivr add arpl cwtl and sub cmp lahf inc adc jg ljmp or cmp clc inc lock movsl movb pop aad int negl jbe bound into xor sub mov cmp xchg ret outsb adcl sub hlt fidivl or mov jae mov hlt push in hlt push mov mov loop js add xor xor mov mov xchg jmp .byte 