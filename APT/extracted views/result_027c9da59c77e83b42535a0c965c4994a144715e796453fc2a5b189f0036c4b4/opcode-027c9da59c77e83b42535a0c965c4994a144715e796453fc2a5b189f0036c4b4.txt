call add push mov sub fnclex fwait smsw test jne smsw test je cltd xor xor xor mov jmp or or or or add add push mov inc xor movzbl mov mov pop ret mov mov add push mov mov or jmp push out mov mov push out lea pop ficom popf sti jg test fdivr ljmp push movb and adc test adc call push mov sbbl xor pop jnp mov pop loopne leave nop and mov in (bad) lea push push add sub out ljmp adc jge add jne add push orb add jb ja (bad) int jge insb and sub adc sbb add (bad) xor dec test or add or fmuls negl xchg mov push push xor xor rorb (bad) push pop mov ja lea rep cmp or mov fcoms stos je iret fs test mov ja jo nop sub cmp cltd inc push inc dec cmp add add nop or adc cmp add lods sti lea inc add or mov aas cwtl add or or inc add push push mov add pop add fildl popa pop add rclb cmp inc add gs clc shrl jo dec je test push add fisubr jbe push push push mov push shr (bad) push push gs push push push outsl insl or or xor dec add mov (bad) and iret iret fistpll fadds xor int3 sub insb out xor pop jne inc xor push and jl cs or pop shrl jne jge notb push or xor movl xchg hlt add loope mov or out add cld cli mulb enter in jae and lea fs add shrb mov xor out fs lcall mov xor add ds fsubrl cmp cld nop mov mov mov insl or (bad) and sti mov xor push push cmp jnp jae loope fisubrl les mov sbb dec or pop sbb pop mov add mov mov loop inc dec lods daa dec dec push push cmp lret fs push pushf sbb bound dec inc insb add xor insb add in ss daa adc inc loope push inc mov sbb adc rolb dec clc fldcw push push test cmp insb jne test cld add add out sub jl (bad) aaa test lcall adc sub mov add ljmp xor in and (bad) and xchg jno xor xchg test mov (bad) (bad) cmp cmp adc pop lret dec insb add push leave xchg xor cld xor leave sbb add xor leave test insl das push or xor enter call xor mov xor loopne cltd and dec mov out mov add xchg inc jbe xor cs jmp jo bound ja (bad) sbb inc xchg cmpsb (bad) repz icebp fisub push mov pop pop pop add ret mov sub add cmp lds cmp mov gs mov ss xchg jecxz jbe mov inc push inc aam call imul and (bad) sbb sub jp jl cwtl repz cs pop jbe lcall sbb out lret shrb pop adc ss cmpl outsb or mov jmp scas mov scas inc rolb or and pop adc in xor push sub dec cmp icebp and jbe cltd lock mov or and xor imul je pusha jmp cmp mov insb lret aam sub pusha shrb test in fs sti xor or fsubrl add insl xor fcoml push xor imulb (bad) or test dec shrb cwtl mov cmp incl outsb lret hlt mov lea xchg enter (bad) cmp or nop divb xchg dec mov adc je or (bad) jg jg dec add push inc or add sarl push xor jp xchg dec cmp jl lea pop inc test cmp push test xchg movsb fdivrl mov adc mov sar push xor enter add or push mov data16 cmpsb and add movsb cmp ret and inc dec adc or test enter loopne jmp push and add clc lods aad push fildl fsubrs test or or xchg adc mov or pop mov ja or or loop xor adc mov (bad) int and sub jo mov cld push dec or mov mov nop and xchg xchg rolb hlt push leave mov xlat sbb in adc or sbb adc pop mov or lods or loopne or xorb sub xor xchg adc and popf stos loopne or stos push dec mov std mov xchg and push int3 add dec or fs sahf cmp xor sbb sbb lock test mov jmp or stos mov add andl cld clc mov ret cltd push addl call es sbb (bad) cltd jmp or fdivs pop push dec mov push out enter push mov movsb aas cmp cli mov (bad) int mov xchg or std es cmp sbb in (bad) cmp sbb push movsb pop (bad) fstps loope pop jle push jmp sarb das mov jbe push fs or add xor jl sbb decl (bad) cmp cld mov jbe movsbl push insb shrl (bad) mov xlat mov xor push inc cmp jb (bad) xor jbe dec repz testl push jb cmp sti (bad) (bad) (bad) leave xor xor pop push add add jmp movzbl add xchg jle sti or add imul xlat mov shr inc rclb pop dec or adc jb pop adc xchg xchg mov fnsave shr mov or std nop dec icebp test in adc mov je inc jns hlt arpl mov ret mov test sbb jp popa mov inc push les add add or ss xchg mov and hlt mov xor aam and jmp add push add insl insb lods jmp and cmp or (bad) mov sbb ret sub mov push (bad) jge mov out popa es adc adc mov pop sti or sbb dec add loope (bad) sub xor add pop int3 inc jb mov mov or push adc shrl inc adc pop (bad) mov sbb fmuls fsubrs jl xlat ja clc ror add add sar xor setl sub pushf insb add cmp test xchg sbb cld lock in fbstp ljmp mov fdivl push cmp scas xchg jb lds mov scas pop sub cs mov jns mov insl pop ds andl add pop lcall dec add adc add mov mov jne mov cmp jne or ds pop test or push jne jae fdivl or add jne mov lret dec or jne add cs das (bad) cmp ret add mov push add std (bad) sbb je sbb neg jbe cmp jns out outsb jno (bad) jne or push loopne imul imul dec pop add ja (bad) jne mov fdivs fsub sbb mov movb outsl mov (bad) and xor sub jl loopne lret and pushl pushl test mov cmp adc rcrb (bad) test or adc add dec ret sub cmc mov xchg adc add jmp pop push sti scas popa xor lahf rorl outsl adc movsl scas jo neg sti inc adc mov fcmovnbe mov and sbb push lea scas mov (bad) cmpl sub jge add clc add (bad) xor add cmc lahf push inc sbb push aas pop push (bad) rcl mov adc push push mov lods icebp xchg add lea movsl add rcrb or sbb sbb (bad) aad push stos mov rorl add scas push enter sti lret push jmp sub push dec outsb rorl dec jmp jg mov dec add jmp mov cmp mov adc (bad) mov shll call adc outsl imul sub mov or push pop mov jl insl cmp xchg inc add jmp dec adc sbb adc inc mulps and mov mov inc mov mov adc leave mov xlat js out and or cmp je push clc cmc xchg jmp test push arpl gs lock aas mov loop add sar faddl rolb adc inc xchg (bad) and add ds add adc add popa push inc cmp test mov and (bad) mov cs fisttp inc pop and pop shlb sub sub push or cmp adc mov sbb ds cmp test push push inc aaa xchg andb pop or ja out add dec dec inc daa jmp cmp nop fstl push cmp add pop movsb rclb daa pop add inc push push jl mov or daa (bad) ss pop adc and das enter pop dec ds push inc or test push push mov xor out testb test mov mov addl (bad) mov adc cli aaa mov loopne inc gs or fadds adc xchg sbb jl add arpl push hlt sbb cmp sbb jle inc add jg rcr subl push xor and jbe mov mulb mov xchg andl and xor cld mov push mov in mov push rcrb pop cld lock clc sbb or or mov push movsl (bad) mov je in rorb adc sub mov adc jne or or lcall xor hlt jmp fidiv jne pop rorl fcmovu or push jne (bad) int jbe adc (bad) decb add ds mov pop and jae jmp js (bad) pop push jnp jmp hlt (bad) cmc add jle dec jge in test hlt ljmp jmp dec adc jmp cmp mov jg ss sub (bad) stc rorb xchg (bad) xlat xor mov pop cmp (bad) sti in or adc or stos xor aam mov xchg mov sbb ljmp (bad) push insl ret mov jmp and aam imul push mov push mov je push clc cmp in fdivrs sub sarb and push das leave adc cs in lea jne shll mov sbb push mov sbb mov or insb xchg add movsb xor aaa sub push sbb add mov subl in (bad) stos and push jns insb test shlb fs mov mov iret int mov add add mov or mov xchg xchg movsl jnp or (bad) cld xchg pop dec hlt mov mov rclb xor nop xchg xchg cwtl xor cmp scas push loope sub dec add sbb lods test enter cmp xor xchg or push sahf jo jbe mov mov outsl pop dec push or lods push cltd or mov enter pop and add daa and fs outsb out add aaa shrb and add test sbbl je adc dec popa adc jmp lods add fadds pop shll push das (bad) fsubrl mov mov cwtl mov ret cmp popf jle hlt ret inc (bad) adc push call mov xchg and leave je movb or or test mov mov scas fsubs mov dec push push sub in push or push orl and inc add pop fdiv mov pop inc mov inc test cmp dec sbb mov ljmp rcrb leave push and cmp mov cmpsl push scas leave mov jbe push add or out (bad) and jbe cmp popa or mov daa cmp (bad) out out outsb aam imul push add mov inc jne scas or repz adc jne dec popa adc imull mov sub divl movsl add mov loope jne in aas jno bound in sbb sbb push (bad) fucomip inc adc jne cmp cmp movsb mov mov add lret push mov lods sbb pop nop sub pusha inc push (bad) mov mov adc fidivl incl cld or cwtl add mov scas roll imulb clc adc inc ret sub aad insl push cs mov dec push push ffreep jae rolb push inc sbb repnz bound sbb cmp movsl push aad sbb sbb ret inc loopne push scas xor pop in (bad) xor jbe xor fadds push sarl mov or test cmp pop mov jne jecxz or daa adc mov jp leave mov test add clc mov xorb push fnstenv mov sahf adc inc pop push nop or (bad) test mov aas push xor fcompl or mov cmp inc add mov ffreep or (bad) push mov mov adc cmp push in nop mov pushf dec dec xor adc adc mov or je add ss fcoml xlat mov sub mov sbb lods pop add jb or add insb js imul and or incl mov in adc cmp push mov cmp xor inc aaa sbb push push xchg in add pop fistp and icebp xlat lods push clc add (bad) adc push inc dec and std mov adc outsl jne arpl popf mov cld push lods dec stos fs pop adc pop and jge aam out adc lds icebp add movb dec gs and and and pop sub push sub mov outsb push sub sub sub sub pop xchg fsubrl xor insl xchg xor add pop cmp xchg mov add pop cmp push pop mov lret cmp inc or pop mov jl push inc and inc or mov dec fs push dec sub dec cwtl pop mov pop dec push dec and push xchg push push push mov push push push push imul jnp fstpt mulps pop push pop push pop int fnstcw dec pop push pusha popa rcrl mov or hlt (bad) fnstcw sub add fstl adc insl repz add inc mov je insb insb fadds jo test and insl xor mov mov addl mov lea pop mov or mov xchg aam push or add push sbb cmpsl aaa (bad) adc orl pop orb sub push mov add push push push mov pop std test bndldx rdmsr dec mov lea mov mov mov mov inc sbb aad add sbb add and rorb push pop faddl (bad) push adc test or push cmp rolb aam and stos mov xor inc mov test inc xor sbb sbb cs add mov mov test rol inc insb add push mov mov and mov (bad) (bad) dec pop pop je xchg mov mov pusha adc push jmp cli or sbb rcrb jl and sbb pop lea push adc adc cld test or and mov adc jmp rorb or in and cld add add adc stos nop lret or adcb inc int3 sub jbe jecxz push push mov sub pop and xor lea clc jns xchg clc adc xor test ret sbb test mov sbb call and es push sub ja cli push ret jle or jmp fsubr ret inc hlt push push nop ret sub xor ret aaa cwtl sub mulb sub cmp flds xor mov xadd jmp push xlat sbb mov xchg test xchg jmp inc addb lock jne xor test cmpb call sub popa jne push out cmp or xchg into mov mov (bad) xor jne add enter cmpsb fiadd push mov clc dec sub cmp sbb or sub pop sub int inc adc adc jle jge lds cs mov add adc or pop jne jo add adc cli inc add add xor sbb sbb xchg subl xchg fcom sub mov pop or clc cmp xor in sbbb pop aaa sub xchg dec leave cld xchg divl sub dec jmp pop loopne xor andl push insl loopne icebp lods add outsl pop push sub mov inc andl sub mov mov cmp rorl jmp inc cmp jl outsb inc or je push pushl stos sub (bad) repz mov cli and push push pop outsb shrb rcrl dec or jno and loopne (bad) nop push mov mov scas lea push mov pop addr16 sbb sbb mov jo push lock cmc pusha movsb cld in or jne outsb adc mov rorb bound sub cmp movsb pop cmp call sbb mov push rorl rorb repz cmp sahf mov sbb mov xor inc das xchg and push lds jbe hlt push add (bad) adc pop adc aaa test adc adc push int3 xor cs mov mov fnstsw mov mov subl inc (bad) dec mov xor out nop dec movsl xor sbbb pop cs outsb hlt test sti add sti imulb and call adc out int push jae adc divl int3 lea add leave adc in push pusha mov adc mov inc add xchg repnz mov repz inc or int3 push jnp (bad) add ja loopne and pop push (bad) xchg mov cmpsl fs and and xor xchg inc mov loopne sbb add sbb in (bad) xor aam or dec js dec cmp mov and jne inc mov pop (bad) in movsl jle cmp sbb push dec jne add push lret mov add or mov jl call popf hlt mov bound loopne pusha hlt repnz jmp scas add in scas push loope adc test xlat add pop mov push cld lea pop shlb xchg fisttp fs hlt add cmp jl inc in loopne push dec jmp (bad) xchg pop add or adc jne pop in xchg iret dec mov push leave lds sub sbb add sbb adc mov adc and arpl decl jmp or lds xor sbb fs arpl add jnp aad pop arpl loopne insb mov clc fwait mov add shll push jne cmovl push jo adc (bad) adc jle sbb les insl pop pop outsl xor xor push mov imul (bad) test nop mov or mov inc ja lcall and sbb add and push push mov cli push cmp loop xor add (bad) aas push iret pop pop push pop jge mov xchg arpl pusha cmp xor pop sub inc aaa adc adc loop lods sbb xor inc adc push and iret jge,pt jmp addl cmp push mov pop clc pop outsb push lea (bad) (bad) and ljmp xchg icebp push or je add xor inc cld mov rolb movsb popa cltd or cs popl rcrl aad jae add or add xchg xor ret xchg cmp movsb int jmp adc outsl mov pop jb clc cmp test inc xor dec dec call xor push fadd xchg out sbb hlt add sahf or xchg cli cli lret in inc in in mov test rorl pushf mov inc dec add js (bad) adc mov pop pop les xor mov push add pushf xchg adc jmp sbb hlt mov dec cli neg add jae dec add add xchg jp push push mov inc jns push outsl mov mov addl and pop mov sub pusha into mov cwtl pop dec js jnp popa pop cmp sbb push test cs or incl dec test cltd (bad) outsl push (bad) jo sbb shlb jb xchg sub xlat mov xor inc (bad) decb jmp mov push aaa jne sub mov adc mov test sbb hlt mov pushf mov popa stos repz cld and arpl mov inc test or movb stos cmpsl fsubs pop push jmp aam insb jnp cs int lret push push int das lods loope pop je xchg push push popl test adc imull push jge (bad) ror xchg xorl dec bound adc push imulb inc jmp push mov push xor lahf pop pop pop add push and pop inc je insb cmp xchg test aad test push xor jle xor adc xor cmp ficom or fldlg2 mov and sub xchg (bad) jne mov push and jnp adc mov ret push xor pop sub and adc sub ret fild add xor repnz adc cmp add cmp subl add les pusha cmpsb pop push add fsubrl rolb mov icebp iret push lahf add into shlb lea push sysret pop mov or xchg in xor add sub dec sbb or add int and or sbb push pop fdivrs add lds aam in out int3 hlt movsl add loop mov shr pop cwtl mov ja mov ret cld mov hlt aaa jne mov movsw push xchg push fmull testl mov pop mov psrld jae sub push push and lods cmp dec movntps pop push je push xchg xchg push xchg or or nop notl and fist lods imul sbb pop outsb adc mov rcrb in xchg mov mov leave mov inc jmp cmp icebp cmp jle pusha nop mov je mov xchg sub dec mov pop enter shrl mov lock sub fdiv cltd fs or cld cld mov mov xor sbb xor sbb xor mov adcb xor jmp push in add mov pop mov add testl pop inc clc sub setne pop pop sbb sbb jle add clc loopne or pop incl sti jns (bad) rolb add inc add inc or jge push mov movsb dec inc sti add dec lcall sub mov lahf or adc pop mov cmp add mov aam and int sbb insb mov clc push or pop mov mov imull jge add insb add rol adc pop xchg test sarb inc sbb add mov mov mov mov adc sbb add or mov clc jp add add shll push or or rcrl push xchg lret push xchg mov sbb sbb mov into clc xor or cld (bad) jl and push mov repz and pop test loope sete in and xor test jmp pop push inc ljmp or mov in add add mov jp enter lea in adc in jne into fadds dec push sbb iret aam test jae mov mov adc dec adc lods cmp add inc aad cmpsb dec dec pop repz add jp pop push or adc cmc mov arpl mov inc in cmp ret repz popa je ret pop pop cwtl and pop inc add inc (bad) arpl add jnp sub mov add in test pop adc pop sub inc push sbb (bad) mov movzwl cltd push pop idiv push pop mov js (bad) push push ret push lock lar mov sub mov rcll xchg test add cmpw movsl mov cltd cmp outsb fs or gs push sub and push adc inc inc je mov jl push mov sub xchg call and pusha icebp pop push arpl inc fldt push xor out add sbb je test inc or push mov je (bad) loopne push int inc xor outsl push xchg mov stos mov xor negb mov mov cmp jge sbb xchg mov inc or mov mov rolb sbb mov pop mov sbb push or add mov bound ja mov mov (bad) jo xor push push push popf jne add mov adcb push or add mov push aad jbe insb add lcall in push sbb les sub mov pop jo mov push in std pusha dec insb add or mov ds sbb lock fisubl imul in loopne out sbb sbb adc je push nop mov (bad) mov je mov sbb cmc in adcl push and bound add fwait sub adc adc lods adc dec es xor push out cltd fisttpl loope sbb or in cld call pusha shlb mov and sbbb inc mov mov adc adc insb int sub and sbb add push xor xchg push insb int3 dec cmp cltd mov push sti in or and mov dec jo push js pop or add std jg and sub pop sub inc push push xchg add inc outsl nop or sbb pop adc inc ret mov pop sti add pop nop dec mov jo pop mov sti es push pop pushf push mov pop jl jmp push mov add lret notl inc mov add mov gs adc ja pop mov test imul xchg cmp sub inc jo jno xor add imul pop inc mov push and movsb loop push fisttpll inc or ret mov out aas adcl aam and mov pop pop fadds mov testl leave xor stos das mov pop pop daa cmp xor cs les mov adc or xor push call inc add or sbb inc pop push loope outsb inc fcompl loop ds into inc lahf jmp rolb add mov or jne push pop mov enter or add mov xor xor movsb loopne dec pushl push ss shlb (bad) std cmpsb mov ret incl push inc insb sar addl shl cli mov icebp xor not pop jmp cwtl mov fldt cmp ljmp pop jne sub or fmuls push test movzbl push repz es mov jle push inc int pop and jl movb adc pushf xor cmp cmp cmpsb lods mov in loopne mov push adc jle inc movsb add lret test jle loopne add stos fcompl nop push in int3 lds or aas lret es jns call int3 jne stos push lcall mov mov adc (bad) std out fisubl push cmpsl pop xor jbe cmp pop pop add xor aam fdivl sub pop pop jo jb push and push pop ss jo add pop mov push cmp or xchg pop pop dec mov fsubr lock das popf lret inc mov int3 xchg inc call fwait inc and jo mov sbb test nop and and aas mov push inc cmp dec push sub push pusha xor sbb push inc pusha fdivs daa arpl adc hlt adc shrl int3 aad jno jge xor add les mov or test dec les lea movsl dec dec xor call popa in jb popa test fsub pop test scas or adc mov mov nop add or cmpsb inc shr push jmp jl push aam aam gs mov mov and dec lods (bad) dec shlb shlb fwait push xorl cmp roll sbb lock push mov xchg ror add jmp add popa test jmp mov pop dec mov (bad) pop or add dec aad xorb push pop jp mov in push stos add or es ss xchg movsb pusha sub sub dec fs js js (bad) jbe nop sbb adc and lock out test push into and das imul mov jp aas aas and sub and daa je and enter jo jl and lock push or mov adc cmp imul dec rcll lcall insb hlt in aas and rcll stos dec and mov or mov lret call addl or lds xchg pop fsubr sbb jle push mov add mov and mov daa push fdivrl loope sub mov sub mov dec sbb xchg mov cmpsl inc lea sahf and mov fistpl aaa es out pop sub xchg mov sbb xlat inc fdivs idiv sbb xchg xchg mov insl inc pop mov pop js pop ret lcall mov mov out mov cs jbe add jae pop iret out mov lock and cmp stos aaa adc test hlt xchg or and dec pusha and std andl sub inc mov ret inc xchg subl stc jmp adc mov aas ret push or into notl add call movsb bound pop data16 cmp iret lock or hlt mov loopne or pop mov cmp push addb mov sbb inc (bad) (bad) dec cld mov dec cmp push (bad) std sub or dec xchg pop sub inc mov inc cmpsb fadds jne addr16 mov mov and (bad) and enter outsb mov mov (bad) sub add push and inc push mov mov xchg push das sbb fdivr lcall test xorl lea jmp in test add jl pushl fist jl sarb push push loopne adc mov test mov sub nop cmp pop (bad) jge (bad) or aam sbb push xchg mov mov lea dec stc je and or or das add push cmp (bad) push mov aaa mov mov push add inc mov push aaa dec or inc or add cmc out jecxz and pop push push cmp daa sub fwait push enter lock pusha ret shl or pushl loop (bad) dec and or cmp das bound or sbb push or xor pop xor sbb bound outsl mov adc xchg or pop jp adc add loope les test pusha jnp loopne loopne lods jbe addl xor addr16 push rcrl call lea imul outsl das fsub jne push mov (bad) (bad) idiv mov mov mov sub adc dec mov cmp pusha leave and cltd rolb mov pushf clc add sub pop sub and push aas pop mov add jmp fsts dec xchg mov outsl bound adc cmp je add je or mov test jg add add sarb cwtl rolb mov pop pop pop push push (bad) jl add cld (bad) mov sarb inc decl lods aas into mov and or dec fcoms adc movb cmp pusha dec adc mov jne jne cwtl inc enter and insb xor sub adc jmp xor daa xor push in loopne cli adc iret out add or sbb adc adc push ret push pusha xor mov or daa inc lods std sti jne pop adc adc or push je popa add scas test pcmpeqd mov test xor and add pop add and mov test push and lea rolb mov xor je cmpb popl notb push je push ret jb std adc lcall loop addl or (bad) push pop bound inc xor xor mov mov push pusha test xor mov push daa cmp mov mov jl cmpsb movsl add std stos loopne inc andl repz (bad) loop jbe mov and pop cld je push loope addb or lock ror imulb push sbb mov push sbb adc lea push mov inc jb in pop xchg inc pop jne or sbb mov ljmp mov cld fdivr sar nop daa pop in cli int int3 stc adc sahf sbb clc enter popa cmp inc pop popa mov sub pop (bad) lea add aam fsubs jnp pop arpl fbstp notl lea repnz hlt bound sbb popf lea stos fwait popf in pop rol lock mov insl xchg adc aas lahf dec dec mov loop push mov push int3 push clc push push sub adcl add add mov ficomp lret push inc push test rorl add mov cli and icebp (bad) mov lret (bad) push test enter mov inc or and sar mov cmp push inc push and inc pop adc push jge lcall add xor ret rcrl or mov mov cmp cmp adc sbb movb and adc inc shrb jecxz sarb xor jmp lea sbbb adc mov adcb sahf je xchg cmp push outsb pop aaa push or test fisttpll inc push xor dec or push movl adc jp lods dec pop push or sarb inc sahf and fcom or vaddsubpd pop dec stc daa jo cmp xchg dec addr16 push das and inc lock faddl jbe or mov clc loope fildl lods and push and push mov add or out insb push sbb mov mov pop mov sub scas test add imul les ret inc in int3 adc and dec sub pop mov and and ljmp or cmp mov fmuls fbstp loope neg test pushl cltd rorl adc addr16 mov xor jl jge sbb call xchg adc loop rolb sub dec int fnstcw add or cmpb add add lock or or xchg xchg test dec mov pop ret cmp mov xchg and pushf (bad) dec cmp sbb and pop mov adc mov add xchg jb xchg and or test add lods inc xor push push fmul and insl gs push dec adc inc outsb push or or pop mov cmpsl pop enter xchg mov xchg outsl mov movsl gs rorl cmp je pop pusha xor and ror mov nop mov aas add adc sbb scas xchg add andl push mov andl dec mov cmp clc std push jo dec sbb dec lahf xor ljmp mov jbe fs and data16 add mov dec add mov stos js jne call les or mov add xor add add out sbb (bad) mov lea sbb dec sbb movsl push push movsb int cmp test jmp xchg dec add scas add and arpl push sbb xchg cld stc xchg cltd mov lea push mov sbb and mov fwait mov jl pop mov (bad) pop test inc movsb pop jl push psrlw add cltd push dec je mov or lock push mov ljmp add inc lds add or hlt add jnp add pop or adc push or outsl pop push add or inc mov mov andl mov xor ja inc cmc out xor jns cmp je pop or inc jecxz push xor cld push mov in insl pusha adc mov sub mov int3 mov testb inc mov adc fimull mov mov cmp test sub mov push daa lret dec loopne or adc cwtl jne or int3 add push rol aas sahf jne into ds in and dec int3 mov pusha cs push sbb (bad) lock mov dec and mov add mov adc or or and sub sub (bad) decl and xor jmp imul lea push sub add jmp sub neg push xor xor and loopne aad cld jl jo push das mov aaa jo and (bad) jo cmp add les dec add mov cmpsb inc pushf inc cmp mov movsb pop je pop shrb mov dec pop jae add rcr mov addr16 mov mull ret data16 pop mov pop cmp sbb xor ret mov imul insb mov mov lock and jno sbb aaa jo sbb mov add sbb hlt test dec push dec sbb jge jg push ret add sar sar fistp or push adc fld push mov inc pop push push nop aam add sti aaa sbb mov xor mov clc add sub ret push push fs mov ds add fbstp pop inc ret (bad) sti dec push mov mov mov sbb push or xchg popa dec inc inc pop xor mov mov push xor and adc orps loope push pop mov hlt aaa lock cmp out jbe push pop jmp push lea rolb jo mov fcoml lods ljmp lea lods testl imul addl popa clc jo mov jge push or or lds (bad) push repz shrb mov jne cmp sahf jb add sti test je and jecxz pusha ret add mov pand pop inc rcrl mov push add or push lock dec inc icebp fldt and sbb push jbe mov push ss add and xchg push add fcmovnb addr16 xchg hlt or dec hlt and push push jne jnp jl dec sbb call push pop sbb adc push (bad) lea pop mov sbb fs cvtdq2ps cmp daa jl inc je,pn dec inc adc lcall xchg fisub add and mov outsl pusha ja and push mov int3 mov mov mov jg js insl mov xchg ficomp add loopne test push js push sbb push sub sub push rcll jo,pt pop imul sub pop cmp data16 insb sub and xchg push sub lds mov out icebp adc mov call xor shrb fldenv sbb add xchg or fld add add fs xchg push dec push dec sbb xor std push dec dec arpl das cld (bad) add mov push pop inc cmp jo dec inc dec test jg (bad) and ficoml loop pushl sub inc sbb pcmpeqw add push push fidivr fdivr cmova cli xor sbb and lods fldenv pop xchg inc jmp jae xchg and dec add mov rclb inc inc mov add inc (bad) jb lock add das or or mov scas dec aam pop fcoms dec or dec js adc inc inc mov add inc lcall icebp addr16 or out add inc inc jb rolb mov xor cmp out xchg mov sbb add lret xor jge cmpsb or cmpsb cld in (bad) incl iret js shr shl add mov fstpl test or cmp clc ljmp mov sub dec hlt push pop mov push pop ss pop mov adc push push shrb pop imul push xor or hlt nopl mov jle jg lock add inc mov push sbb mov adc and add inc (bad) pop incb (bad) dec or inc jne cltd andl push and cmp cmp add mov mov lcall mov imul lcall sbb add and xor ret xor xor or add imulb movzbl cs loopne lds push mov rcrl (bad) loopne xchg adcb push cli pop push fcoms rclb lret enter pop ja,pn sub mov rclb or sti scas push int lea and dec (bad) movsb dec or inc rcll ret (bad) mov ss mov and pop insb sbb call or and add jl fstps sub es add xchg xor rorb sbb adc dec lock or (bad) or or ret sar mov test out mov push mov cmp fisubr cmc shl or jl mov adc inc jne in push sti mov mov sbb and inc or jns jmp adc push or or add pop or dec cmp popa or fstp mov jbe test mov jecxz jle (bad) jbe dec or add mov sti pop pop decl decb sbb scas inc mov xlat jl cmp sub mov mov (bad) cltd negl mov sub in mov mov and mov shr mov cmp pop push orl or push (bad) pop adc xor js pop ficoml or rcr mov jmp fiadd jle xor pusha out push popa aas jbe adc dec test ds mov mov dec loopne and xchg lods out (bad) or popa imull add ret mov inc les mov test mov adc (bad) (bad) mov add stc add pop (bad) out mov jno shr inc lea cli lahf cmp add dec pop mov mov bound adc mov faddl popa jmp test fdivrp fnop mov into fild addl xor pop sbb sub ss sahf cmp in add jne dec aas or jp (bad) outsb lock decb movsl sbb add rdpmc push add sti lods add jmp sbb loope dec (bad) pop clc jne xchg jecxz push (bad) lods repnz mov (bad) mov pop mov cld push cmp adc jno push pop je dec mov cld fildll and mov popf loope mov xchg inc std pop sub jecxz mov mov test mov mov xchg loope mov push or inc mov (bad) xor fisttpll cwtl mov loop xor addr16 outsl xchg mov out mov pushf mov fisttp jge or push push mov pop dec add test lock xor mov (bad) lock js dec (bad) cld lea dec rcr cltd mov leave rclb adc jge sbb leave lea outsb or inc js push xchg push push mov add scas in call imulb lcall or stc adc aaa inc and push add ss mov das xor cwtl std add rolb (bad) fadd fdivs adc add daa cld incl sbb mov popf gs mov fcoms sub xor sbb (bad) jb xlat rorb out in push dec fild cmovns ss dec xor daa daa mov pop mov orb mov inc inc clc outsb pop (bad) cs jge push cmp ficoml shlb sbb idivb mov and ret mov mov daa sbb mov inc xor lock scas shrl cmp and adc add jbe test xor into lock pop push je and mov sub sti pop or repnz xor loopne mov jecxz clc push sbb pop and xchg ret je or mov adc dec jns arpl fs (bad) jne cmp outsb add sbb lock repnz push add rcrb dec add xchg .byte dec call add push mov sub fnclex fwait smsw test jne smsw test je cltd xor xor xor mov jmp or or or or add add push mov inc xor movzbl mov mov pop ret mov mov add push mov mov or jmp push out mov mov push out lea pop ficom popf sti jg test fdivr ljmp push movb and adc test adc call push mov sbbl xor pop jnp mov pop loopne leave nop and mov in (bad) lea push push add sub out ljmp adc jge add jne add push orb add jb ja (bad) int jge insb and sub adc sbb add (bad) xor dec test or add or fmuls negl xchg mov push push xor xor rorb (bad) push pop mov ja lea rep cmp or mov fcoms stos je iret fs test mov ja jo nop sub cmp cltd inc push inc dec cmp add add nop or adc cmp add lods sti lea inc add or mov aas cwtl add or or inc add push push mov add pop add fildl popa pop add rclb cmp inc add gs clc shrl jo dec je test push add fisubr jbe push push push mov push shr (bad) push push gs push push push outsl insl or or xor dec add mov (bad) and iret iret fistpll fadds xor int3 sub insb out xor pop jne inc xor push and jl cs or pop shrl jne jge notb push or xor movl xchg hlt add loope mov or out add cld cli mulb enter in jae and lea fs add shrb mov xor out fs lcall mov xor add ds fsubrl cmp cld nop mov mov mov insl or (bad) and sti mov xor push push cmp jnp jae loope fisubrl les mov sbb dec or pop sbb pop mov add mov mov loop inc dec lods daa dec dec push push cmp lret fs push pushf sbb bound dec inc insb add xor insb add in ss daa adc inc loope push inc mov sbb adc rolb dec clc fldcw push push test cmp insb jne test cld add add out sub jl (bad) aaa test lcall adc sub mov add ljmp xor in and (bad) and xchg jno xor xchg test mov (bad) (bad) cmp cmp adc pop lret dec insb add push leave xchg xor cld xor leave sbb add xor leave test insl das push or xor enter call xor mov xor loopne cltd and dec mov out mov add xchg inc jbe xor cs jmp jo bound ja (bad) sbb inc xchg cmpsb (bad) repz icebp fisub push mov pop pop pop add ret mov sub add cmp lds cmp mov gs mov ss xchg jecxz jbe mov inc push inc aam call imul and (bad) sbb sub jp jl cwtl repz cs pop jbe lcall sbb out lret shrb pop adc ss cmpl outsb or mov jmp scas mov scas inc rolb or and pop adc in xor push sub dec cmp icebp and jbe cltd lock mov or and xor imul je pusha jmp cmp mov insb lret aam sub pusha shrb test in fs sti xor or fsubrl add insl xor fcoml push xor imulb (bad) or test dec shrb cwtl mov cmp incl outsb lret hlt mov lea xchg enter (bad) cmp or nop divb xchg dec mov adc je or (bad) jg jg dec add push inc or add sarl push xor jp xchg dec cmp jl lea pop inc test cmp push test xchg movsb fdivrl mov adc mov sar push xor enter add or push mov data16 cmpsb and add movsb cmp ret and inc dec adc or test enter loopne jmp push and add clc lods aad push fildl fsubrs test or or xchg adc mov or pop mov ja or or loop xor adc mov (bad) int and sub jo mov cld push dec or mov mov nop and xchg xchg rolb hlt push leave mov xlat sbb in adc or sbb adc pop mov or lods or loopne or xorb sub xor xchg adc and popf stos loopne or stos push dec mov std mov xchg and push int3 add dec or fs sahf cmp xor sbb sbb lock test mov jmp or stos mov add andl cld clc mov ret cltd push addl call es sbb (bad) cltd jmp or fdivs pop push dec mov push out enter push mov movsb aas cmp cli mov (bad) int mov xchg or std es cmp sbb in (bad) cmp sbb push movsb pop (bad) fstps loope pop jle push jmp sarb das mov jbe push fs or add xor jl sbb decl (bad) cmp cld mov jbe movsbl push insb shrl (bad) mov xlat mov xor push inc cmp jb (bad) xor jbe dec repz testl push jb cmp sti (bad) (bad) (bad) leave xor xor pop push add add jmp movzbl add xchg jle sti or add imul xlat mov shr inc rclb pop dec or adc jb pop adc xchg xchg mov fnsave shr mov or std nop dec icebp test in adc mov je inc jns hlt arpl mov ret mov test sbb jp popa mov inc push les add add or ss xchg mov and hlt mov xor aam and jmp add push add insl insb lods jmp and cmp or (bad) mov sbb ret sub mov push (bad) jge mov out popa es adc adc mov pop sti or sbb dec add loope (bad) sub xor add pop int3 inc jb mov mov or push adc shrl inc adc pop (bad) mov sbb fmuls fsubrs jl xlat ja clc ror add add sar xor setl sub pushf insb add cmp test xchg sbb cld lock in fbstp ljmp mov fdivl push cmp scas xchg jb lds mov scas pop sub cs mov jns mov insl pop ds andl add pop lcall dec add adc add mov mov jne mov cmp jne or ds pop test or push jne jae fdivl or add jne mov lret dec or jne add cs das (bad) cmp ret add mov push add std (bad) sbb je sbb neg jbe cmp jns out outsb jno (bad) jne or push loopne imul imul dec pop add ja (bad) jne mov fdivs fsub sbb mov movb outsl mov (bad) and xor sub jl loopne lret and pushl pushl test mov cmp adc rcrb (bad) test or adc add dec ret sub cmc mov xchg adc add jmp pop push sti scas popa xor lahf rorl outsl adc movsl scas jo neg sti inc adc mov fcmovnbe mov and sbb push lea scas mov (bad) cmpl sub jge add clc add (bad) xor add cmc lahf push inc sbb push aas pop push (bad) rcl mov adc push push mov lods icebp xchg add lea movsl add rcrb or sbb sbb (bad) aad push stos mov rorl add scas push enter sti lret push jmp sub push dec outsb rorl dec jmp jg mov dec add jmp mov cmp mov adc (bad) mov shll call adc outsl imul sub mov or push pop mov jl insl cmp xchg inc add jmp dec adc sbb adc inc mulps and mov mov inc mov mov adc leave mov xlat js out and or cmp je push clc cmc xchg jmp test push arpl gs lock aas mov loop add sar faddl rolb adc inc xchg (bad) and add ds add adc add popa push inc cmp test mov and (bad) mov cs fisttp inc pop and pop shlb sub sub push or cmp adc mov sbb ds cmp test push push inc aaa xchg andb pop or ja out add dec dec inc daa jmp cmp nop fstl push cmp add pop movsb rclb daa pop add inc push push jl mov or daa (bad) ss pop adc and das enter pop dec ds push inc or test push push mov xor out testb test mov mov addl (bad) mov adc cli aaa mov loopne inc gs or fadds adc xchg sbb jl add arpl push hlt sbb cmp sbb jle inc add jg rcr subl push xor and jbe mov mulb mov xchg andl and xor cld mov push mov in mov push rcrb pop cld lock clc sbb or or mov push movsl (bad) mov je in rorb adc sub mov adc jne or or lcall xor hlt jmp fidiv jne pop rorl fcmovu or push jne (bad) int jbe adc (bad) decb add ds mov pop and jae jmp js (bad) pop push jnp jmp hlt (bad) cmc add jle dec jge in test hlt ljmp jmp dec adc jmp cmp mov jg ss sub (bad) stc rorb xchg (bad) xlat xor mov pop cmp (bad) sti in or adc or stos xor aam mov xchg mov sbb ljmp (bad) push insl ret mov jmp and aam imul push mov push mov je push clc cmp in fdivrs sub sarb and push das leave adc cs in lea jne shll mov sbb push mov sbb mov or insb xchg add movsb xor aaa sub push sbb add mov subl in (bad) stos and push jns insb test shlb fs mov mov iret int mov add add mov or mov xchg xchg movsl jnp or (bad) cld xchg pop dec hlt mov mov rclb xor nop xchg xchg cwtl xor cmp scas push loope sub dec add sbb lods test enter cmp xor xchg or push sahf jo jbe mov mov outsl pop dec push or lods push cltd or mov enter pop and add daa and fs outsb out add aaa shrb and add test sbbl je adc dec popa adc jmp lods add fadds pop shll push das (bad) fsubrl mov mov cwtl mov ret cmp popf jle hlt ret inc (bad) adc push call mov xchg and leave je movb or or test mov mov scas fsubs mov dec push push sub in push or push orl and inc add pop fdiv mov pop inc mov inc test cmp dec sbb mov ljmp rcrb leave push and cmp mov cmpsl push scas leave mov jbe push add or out (bad) and jbe cmp popa or mov daa cmp (bad) out out outsb aam imul push add mov inc jne scas or repz adc jne dec popa adc imull mov sub divl movsl add mov loope jne in aas jno bound in sbb sbb push (bad) fucomip inc adc jne cmp cmp movsb mov mov add lret push mov lods sbb pop nop sub pusha inc push (bad) mov mov adc fidivl incl cld or cwtl add mov scas roll imulb clc adc inc ret sub aad insl push cs mov dec push push ffreep jae rolb push inc sbb repnz bound sbb cmp movsl push aad sbb sbb ret inc loopne push scas xor pop in (bad) xor jbe xor fadds push sarl mov or test cmp pop mov jne jecxz or daa adc mov jp leave mov test add clc mov xorb push fnstenv mov sahf adc inc pop push nop or (bad) test mov aas push xor fcompl or mov cmp inc add mov ffreep or (bad) push mov mov adc cmp push in nop mov pushf dec dec xor adc adc mov or je add ss fcoml xlat mov sub mov sbb lods pop add jb or add insb js imul and or incl mov in adc cmp push mov cmp xor inc aaa sbb push push xchg in add pop fistp and icebp xlat lods push clc add (bad) adc push inc dec and std mov adc outsl jne arpl popf mov cld push lods dec stos fs pop adc pop and jge aam out adc lds icebp add movb dec gs and and and pop sub push sub mov outsb push sub sub sub sub pop xchg fsubrl xor insl xchg xor add pop cmp xchg mov add pop cmp push pop mov lret cmp inc or pop mov jl push inc and inc or mov dec fs push dec sub dec cwtl pop mov pop dec push dec and push xchg push push push mov push push push push imul jnp fstpt mulps pop push pop push pop int fnstcw dec pop push pusha popa rcrl mov or hlt (bad) fnstcw sub add fstl adc insl repz add inc mov je insb insb fadds jo test and insl xor mov mov addl mov lea pop mov or mov xchg aam push or add push sbb cmpsl aaa (bad) adc orl pop orb sub push mov add push push push mov pop std test bndldx rdmsr dec mov lea mov mov mov mov inc sbb aad add sbb add and rorb push pop faddl (bad) push adc test or push cmp rolb aam and stos mov xor inc mov test inc xor sbb sbb cs add mov mov test rol inc insb add push mov mov and mov (bad) (bad) dec pop pop je xchg mov mov pusha adc push jmp cli or sbb rcrb jl and sbb pop lea push adc adc cld test or and mov adc jmp rorb or in and cld add add adc stos nop lret or adcb inc int3 sub jbe jecxz push push mov sub pop and xor lea clc jns xchg clc adc xor test ret sbb test mov sbb call and es push sub ja cli push ret jle or jmp fsubr ret inc hlt push push nop ret sub xor ret aaa cwtl sub mulb sub cmp flds xor mov xadd jmp push xlat sbb mov xchg test xchg jmp inc addb lock jne xor test cmpb call sub popa jne push out cmp or xchg into mov mov (bad) xor jne add enter cmpsb fiadd push mov clc dec sub cmp sbb or sub pop sub int inc adc adc jle jge lds cs mov add adc or pop jne jo add adc cli inc add add xor sbb sbb xchg subl xchg fcom sub mov pop or clc cmp xor in sbbb pop aaa sub xchg dec leave cld xchg divl sub dec jmp pop loopne xor andl push insl loopne icebp lods add outsl pop push sub mov inc andl sub mov mov cmp rorl jmp inc cmp jl outsb inc or je push pushl stos sub (bad) repz mov cli and push push pop outsb shrb rcrl dec or jno and loopne (bad) nop push mov mov scas lea push mov pop addr16 sbb sbb mov jo push lock cmc pusha movsb cld in or jne outsb adc mov rorb bound sub cmp movsb pop cmp call sbb mov push rorl rorb repz cmp sahf mov sbb mov xor inc das xchg and push lds jbe hlt push add (bad) adc pop adc aaa test adc adc push int3 xor cs mov mov fnstsw mov mov subl inc (bad) dec mov xor out nop dec movsl xor sbbb pop cs outsb hlt test sti add sti imulb and call adc out int push jae adc divl int3 lea add leave adc in push pusha mov adc mov inc add xchg repnz mov repz inc or int3 push jnp (bad) add ja loopne and pop push (bad) xchg mov cmpsl fs and and xor xchg inc mov loopne sbb add sbb in (bad) xor aam or dec js dec cmp mov and jne inc mov pop (bad) in movsl jle cmp sbb push dec jne add push lret mov add or mov jl call popf hlt mov bound loopne pusha hlt repnz jmp scas add in scas push loope adc test xlat add pop mov push cld lea pop shlb xchg fisttp fs hlt add cmp jl inc in loopne push dec jmp (bad) xchg pop add or adc jne pop in xchg iret dec mov push leave lds sub sbb add sbb adc mov adc and arpl decl jmp or lds xor sbb fs arpl add jnp aad pop arpl loopne insb mov clc fwait mov add shll push jne cmovl push jo adc (bad) adc jle sbb les insl pop pop outsl xor xor push mov imul (bad) test nop mov or mov inc ja lcall and sbb add and push push mov cli push cmp loop xor add (bad) aas push iret pop pop push pop jge mov xchg arpl pusha cmp xor pop sub inc aaa adc adc loop lods sbb xor inc adc push and iret jge,pt jmp addl cmp push mov pop clc pop outsb push lea (bad) (bad) and ljmp xchg icebp push or je add xor inc cld mov rolb movsb popa cltd or cs popl rcrl aad jae add or add xchg xor ret xchg cmp movsb int jmp adc outsl mov pop jb clc cmp test inc xor dec dec call xor push fadd xchg out sbb hlt add sahf or xchg cli cli lret in inc in in mov test rorl pushf mov inc dec add js (bad) adc mov pop pop les xor mov push add pushf xchg adc jmp sbb hlt mov dec cli neg add jae dec add add xchg jp push push mov inc jns push outsl mov mov addl and pop mov sub pusha into mov cwtl pop dec js jnp popa pop cmp sbb push test cs or incl dec test cltd (bad) outsl push (bad) jo sbb shlb jb xchg sub xlat mov xor inc (bad) decb jmp mov push aaa jne sub mov adc mov test sbb hlt mov pushf mov popa stos repz cld and arpl mov inc test or movb stos cmpsl fsubs pop push jmp aam insb jnp cs int lret push push int das lods loope pop je xchg push push popl test adc imull push jge (bad) ror xchg xorl dec bound adc push imulb inc jmp push mov push xor lahf pop pop pop add push and pop inc je insb cmp xchg test aad test push xor jle xor adc xor cmp ficom or fldlg2 mov and sub xchg (bad) jne mov push and jnp adc mov ret push xor pop sub and adc sub ret fild add xor repnz adc cmp add cmp subl add les pusha cmpsb pop push add fsubrl rolb mov icebp iret push lahf add into shlb lea push sysret pop mov or xchg in xor add sub dec sbb or add int and or sbb push pop fdivrs add lds aam in out int3 hlt movsl add loop mov shr pop cwtl mov ja mov ret cld mov hlt aaa jne mov movsw push xchg push fmull testl mov pop mov psrld jae sub push push and lods cmp dec movntps pop push je push xchg xchg push xchg or or nop notl and fist lods imul sbb pop outsb adc mov rcrb in xchg mov mov leave mov inc jmp cmp icebp cmp jle pusha nop mov je mov xchg sub dec mov pop enter shrl mov lock sub fdiv cltd fs or cld cld mov mov xor sbb xor sbb xor mov adcb xor jmp push in add mov pop mov add testl pop inc clc sub setne pop pop sbb sbb jle add clc loopne or pop incl sti jns (bad) rolb add inc add inc or jge push mov movsb dec inc sti add dec lcall sub mov lahf or adc pop mov cmp add mov aam and int sbb insb mov clc push or pop mov mov imull jge add insb add rol adc pop xchg test sarb inc sbb add mov mov mov mov adc sbb add or mov clc jp add add shll push or or rcrl push xchg lret push xchg mov sbb sbb mov into clc xor or cld (bad) jl and push mov repz and pop test loope sete in and xor test jmp pop push inc ljmp or mov in add add mov jp enter lea in adc in jne into fadds dec push sbb iret aam test jae mov mov adc dec adc lods cmp add inc aad cmpsb dec dec pop repz add jp pop push or adc cmc mov arpl mov inc in cmp ret repz popa je ret pop pop cwtl and pop inc add inc (bad) arpl add jnp sub mov add in test pop adc pop sub inc push sbb (bad) mov movzwl cltd push pop idiv push pop mov js (bad) push push ret push lock lar mov sub mov rcll xchg test add cmpw movsl mov cltd cmp outsb fs or gs push sub and push adc inc inc je mov jl push mov sub xchg call and pusha icebp pop push arpl inc fldt push xor out add sbb je test inc or push mov je (bad) loopne push int inc xor outsl push xchg mov stos mov xor negb mov mov cmp jge sbb xchg mov inc or mov mov rolb sbb mov pop mov sbb push or add mov bound ja mov mov (bad) jo xor push push push popf jne add mov adcb push or add mov push aad jbe insb add lcall in push sbb les sub mov pop jo mov push in std pusha dec insb add or mov ds sbb lock fisubl imul in loopne out sbb sbb adc je push nop mov (bad) mov je mov sbb cmc in adcl push and bound add fwait sub adc adc lods adc dec es xor push out cltd fisttpl loope sbb or in cld call pusha shlb mov and sbbb inc mov mov adc adc insb int sub and sbb add push xor xchg push insb int3 dec cmp cltd mov push sti in or and mov dec jo push js pop or add std jg and sub pop sub inc push push xchg add inc outsl nop or sbb pop adc inc ret mov pop sti add pop nop dec mov jo pop mov sti es push pop pushf push mov pop jl jmp push mov add lret notl inc mov add mov gs adc ja pop mov test imul xchg cmp sub inc jo jno xor add imul pop inc mov push and movsb loop push fisttpll inc or ret mov out aas adcl aam and mov pop pop fadds mov testl leave xor stos das mov pop pop daa cmp xor cs les mov adc or xor push call inc add or sbb inc pop push loope outsb inc fcompl loop ds into inc lahf jmp rolb add mov or jne push pop mov enter or add mov xor xor movsb loopne dec pushl push ss shlb (bad) std cmpsb mov ret incl push inc insb sar addl shl cli mov icebp xor not pop jmp cwtl mov fldt cmp ljmp pop jne sub or fmuls push test movzbl push repz es mov jle push inc int pop and jl movb adc pushf xor cmp cmp cmpsb lods mov in loopne mov push adc jle inc movsb add lret test jle loopne add stos fcompl nop push in int3 lds or aas lret es jns call int3 jne stos push lcall mov mov adc (bad) std out fisubl push cmpsl pop xor jbe cmp pop pop add xor aam fdivl sub pop pop jo jb push and push pop ss jo add pop mov push cmp or xchg pop pop dec mov fsubr lock das popf lret inc mov int3 xchg inc call fwait inc and jo mov sbb test nop and and aas mov push inc cmp dec push sub push pusha xor sbb push inc pusha fdivs daa arpl adc hlt adc shrl int3 aad jno jge xor add les mov or test dec les lea movsl dec dec xor call popa in jb popa test fsub pop test scas or adc mov mov nop add or cmpsb inc shr push jmp jl push aam aam gs mov mov and dec lods (bad) dec shlb shlb fwait push xorl cmp roll sbb lock push mov xchg ror add jmp add popa test jmp mov pop dec mov (bad) pop or add dec aad xorb push pop jp mov in push stos add or es ss xchg movsb pusha sub sub dec fs js js (bad) jbe nop sbb adc and lock out test push into and das imul mov jp aas aas and sub and daa je and enter jo jl and lock push or mov adc cmp imul dec rcll lcall insb hlt in aas and rcll stos dec and mov or mov lret call addl or lds xchg pop fsubr sbb jle push mov add mov and mov daa push fdivrl loope sub mov sub mov dec sbb xchg mov cmpsl inc lea sahf and mov fistpl aaa es out pop sub xchg mov sbb xlat inc fdivs idiv sbb xchg xchg mov insl inc pop mov pop js pop ret lcall mov mov out mov cs jbe add jae pop iret out mov lock and cmp stos aaa adc test hlt xchg or and dec pusha and std andl sub inc mov ret inc xchg subl stc jmp adc mov aas ret push or into notl add call movsb bound pop data16 cmp iret lock or hlt mov loopne or pop mov cmp push addb mov sbb inc (bad) (bad) dec cld mov dec cmp push (bad) std sub or dec xchg pop sub inc mov inc cmpsb fadds jne addr16 mov mov and (bad) and enter outsb mov mov (bad) sub add push and inc push mov mov xchg push das sbb fdivr lcall test xorl lea jmp in test add jl pushl fist jl sarb push push loopne adc mov test mov sub nop cmp pop (bad) jge (bad) or aam sbb push xchg mov mov lea dec stc je and or or das add push cmp (bad) push mov aaa mov mov push add inc mov push aaa dec or inc or add cmc out jecxz and pop push push cmp daa sub fwait push enter lock pusha ret shl or pushl loop (bad) dec and or cmp das bound or sbb push or xor pop xor sbb bound outsl mov adc xchg or pop jp adc add loope les test pusha jnp loopne loopne lods jbe addl xor addr16 push rcrl call lea imul outsl das fsub jne push mov (bad) (bad) idiv mov mov mov sub adc dec mov cmp pusha leave and cltd rolb mov pushf clc add sub pop sub and push aas pop mov add jmp fsts dec xchg mov outsl bound adc cmp je add je or mov test jg add add sarb cwtl rolb mov pop pop pop push push (bad) jl add cld (bad) mov sarb inc decl lods aas into mov and or dec fcoms adc movb cmp pusha dec adc mov jne jne cwtl inc enter and insb xor sub adc jmp xor daa xor push in loopne cli adc iret out add or sbb adc adc push ret push pusha xor mov or daa inc lods std sti jne pop adc adc or push je popa add scas test pcmpeqd mov test xor and add pop add and mov test push and lea rolb mov xor je cmpb popl notb push je push ret jb std adc lcall loop addl or (bad) push pop bound inc xor xor mov mov push pusha test xor mov push daa cmp mov mov jl cmpsb movsl add std stos loopne inc andl repz (bad) loop jbe mov and pop cld je push loope addb or lock ror imulb push sbb mov push sbb adc lea push mov inc jb in pop xchg inc pop jne or sbb mov ljmp mov cld fdivr sar nop daa pop in cli int int3 stc adc sahf sbb clc enter popa cmp inc pop popa mov sub pop (bad) lea add aam fsubs jnp pop arpl fbstp notl lea repnz hlt bound sbb popf lea stos fwait popf in pop rol lock mov insl xchg adc aas lahf dec dec mov loop push mov push int3 push clc push push sub adcl add add mov ficomp lret push inc push test rorl add mov cli and icebp (bad) mov lret (bad) push test enter mov inc or and sar mov cmp push inc push and inc pop adc push jge lcall add xor ret rcrl or mov mov cmp cmp adc sbb movb and adc inc shrb jecxz sarb xor jmp lea sbbb adc mov adcb sahf je xchg cmp push outsb pop aaa push or test fisttpll inc push xor dec or push movl adc jp lods dec pop push or sarb inc sahf and fcom or vaddsubpd pop dec stc daa jo cmp xchg dec addr16 push das and inc lock faddl jbe or mov clc loope fildl lods and push and push mov add or out insb push sbb mov mov pop mov sub scas test add imul les ret inc in int3 adc and dec sub pop mov and and ljmp or cmp mov fmuls fbstp loope neg test pushl cltd rorl adc addr16 mov xor jl jge sbb call xchg adc loop rolb sub dec int fnstcw add or cmpb add add lock or or xchg xchg test dec mov pop ret cmp mov xchg and pushf (bad) dec cmp sbb and pop mov adc mov add xchg jb xchg and or test add lods inc xor push push fmul and insl gs push dec adc inc outsb push or or pop mov cmpsl pop enter xchg mov xchg outsl mov movsl gs rorl cmp je pop pusha xor and ror mov nop mov aas add adc sbb scas xchg add andl push mov andl dec mov cmp clc std push jo dec sbb dec lahf xor ljmp mov jbe fs and data16 add mov dec add mov stos js jne call les or mov add xor add add out sbb (bad) mov lea sbb dec sbb movsl push push movsb int cmp test jmp xchg dec add scas add and arpl push sbb xchg cld stc xchg cltd mov lea push mov sbb and mov fwait mov jl pop mov (bad) pop test inc movsb pop jl push psrlw add cltd push dec je mov or lock push mov ljmp add inc lds add or hlt add jnp add pop or adc push or outsl pop push add or inc mov mov andl mov xor ja inc cmc out xor jns cmp je pop or inc jecxz push xor cld push mov in insl pusha adc mov sub mov int3 mov testb inc mov adc fimull mov mov cmp test sub mov push daa lret dec loopne or adc cwtl jne or int3 add push rol aas sahf jne into ds in and dec int3 mov pusha cs push sbb (bad) lock mov dec and mov add mov adc or or and sub sub (bad) decl and xor jmp imul lea push sub add jmp sub neg push xor xor and loopne aad cld jl jo push das mov aaa jo and (bad) jo cmp add les dec add mov cmpsb inc pushf inc cmp mov movsb pop je pop shrb mov dec pop jae add rcr mov addr16 mov mull ret data16 pop mov pop cmp sbb xor ret mov imul insb mov mov lock and jno sbb aaa jo sbb mov add sbb hlt test dec push dec sbb jge jg push ret add sar sar fistp or push adc fld push mov inc pop push push nop aam add sti aaa sbb mov xor mov clc add sub ret push push fs mov ds add fbstp pop inc ret (bad) sti dec push mov mov mov sbb push or xchg popa dec inc inc pop xor mov mov push xor and adc orps loope push pop mov hlt aaa lock cmp out jbe push pop jmp push lea rolb jo mov fcoml lods ljmp lea lods testl imul addl popa clc jo mov jge push or or lds (bad) push repz shrb mov jne cmp sahf jb add sti test je and jecxz pusha ret add mov pand pop inc rcrl mov push add or push lock dec inc icebp fldt and sbb push jbe mov push ss add and xchg push add fcmovnb addr16 xchg hlt or dec hlt and push push jne jnp jl dec sbb call push pop sbb adc push (bad) lea pop mov sbb fs cvtdq2ps cmp daa jl inc je,pn dec inc adc lcall xchg fisub add and mov outsl pusha ja and push mov int3 mov mov mov jg js insl mov xchg ficomp add loopne test push js push sbb push sub sub push rcll jo,pt pop imul sub pop cmp data16 insb sub and xchg push sub lds mov out icebp adc mov call xor shrb fldenv sbb add xchg or fld add add fs xchg push dec push dec sbb xor std push dec dec arpl das cld (bad) add mov push pop inc cmp jo dec inc dec test jg (bad) and ficoml loop pushl sub inc sbb pcmpeqw add push push fidivr fdivr cmova cli xor sbb and lods fldenv pop xchg inc jmp jae xchg and dec add mov rclb inc inc mov add inc (bad) jb lock add das or or mov scas dec aam pop fcoms dec or dec js adc inc inc mov add inc lcall icebp addr16 or out add inc inc jb rolb mov xor cmp out xchg mov sbb add lret xor jge cmpsb or cmpsb cld in (bad) incl iret js shr shl add mov fstpl test or cmp clc ljmp mov sub dec hlt push pop mov push pop ss pop mov adc push push shrb pop imul push xor or hlt nopl mov jle jg lock add inc mov push sbb mov adc and add inc (bad) pop incb (bad) dec or inc jne cltd andl push and cmp cmp add mov mov lcall mov imul lcall sbb add and xor ret xor xor or add imulb movzbl cs loopne lds push mov rcrl (bad) loopne xchg adcb push cli pop push fcoms rclb lret enter pop ja,pn sub mov rclb or sti scas push int lea and dec (bad) movsb dec or inc rcll ret (bad) mov ss mov and pop insb sbb call or and add jl fstps sub es add xchg xor rorb sbb adc dec lock or (bad) or or ret sar mov test out mov push mov cmp fisubr cmc shl or jl mov adc inc jne in push sti mov mov sbb and inc or jns jmp adc push or or add pop or dec cmp popa or fstp mov jbe test mov jecxz jle (bad) jbe dec or add mov sti pop pop decl decb sbb scas inc mov xlat jl cmp sub mov mov (bad) cltd negl mov sub in mov mov and mov shr mov cmp pop push orl or push (bad) pop adc xor js pop ficoml or rcr mov jmp fiadd jle xor pusha out push popa aas jbe adc dec test ds mov mov dec loopne and xchg lods out (bad) or popa imull add ret mov inc les mov test mov adc (bad) (bad) mov add stc add pop (bad) out mov jno shr inc lea cli lahf cmp add dec pop mov mov bound adc mov faddl popa jmp test fdivrp fnop mov into fild addl xor pop sbb sub ss sahf cmp in add jne dec aas or jp (bad) outsb lock decb movsl sbb add rdpmc push add sti lods add jmp sbb loope dec (bad) pop clc jne xchg jecxz push (bad) lods repnz mov (bad) mov pop mov cld push cmp adc jno push pop je dec mov cld fildll and mov popf loope mov xchg inc std pop sub jecxz mov mov test mov mov xchg loope mov push or inc mov (bad) xor fisttpll cwtl mov loop xor addr16 outsl xchg mov out mov pushf mov fisttp jge or push push mov pop dec add test lock xor mov (bad) lock js dec (bad) cld lea dec rcr cltd mov leave rclb adc jge sbb leave lea outsb or inc js push xchg push push mov add scas in call imulb lcall or stc adc aaa inc and push add ss mov das xor cwtl std add rolb (bad) fadd fdivs adc add daa cld incl sbb mov popf gs mov fcoms sub xor sbb (bad) jb xlat rorb out in push dec fild cmovns ss dec xor daa daa mov pop mov orb mov inc inc clc outsb pop (bad) cs jge push cmp ficoml shlb sbb idivb mov and ret mov mov daa sbb mov inc xor lock scas shrl cmp and adc add jbe test xor into lock pop push je and mov sub sti pop or repnz xor loopne mov jecxz clc push sbb pop and xchg ret je or mov adc dec jns arpl fs (bad) jne cmp outsb add sbb lock repnz push add rcrb dec add xchg xor cmp imul inc add jne fadds in leave jmp pop jle push inc mov push sbb jmp inc push or add push xorb mov xchg and rcll cmp aad test sar push ret ret mov cmp mov call mov and sbbl outsb xor add (bad) xor (bad) dec dec dec loop xchg std or pop adc ficom cmpsb test and cmp ret push dec je jne popf add push inc jp dec jl pop insl sbb adc pop (bad) lock outsb hlt inc xor sbb mov jl mov add sub fadd mov sti pop dec inc push addl insb mov push mov adcl mov out jb std pushl or pop adc push push cmp dec lea sub dec add inc mov rcrl push cltd cld or test cmp test jl pop add rol mov icebp fstpl rorl jnp mov and and incl pop mov fadds jae mov cltd jns pop mov add xchg das addr16 inc or mov mov (bad) stos cmp mov push add push ficomp cmp adc aam xor fdivrs imul cmp imul inc jns ja out xor das and add or add fs repz add aaa adc sub cld xor jle mov xor add cltd fs jne mull and aaa cld enter inc ret clc xchg xchg fldt cld aaa or clc and jbe sbb mov bound cld fidivl out xor push dec cmp xor aaa and dec (bad) fisubl mov in push inc push in sub push mov or inc sbb xor insb xchg movd jne sbb or in test aaa xor in ret sbb jge lds dec jne and test jecxz ficomp cmp pop (bad) cmp test mov mov push dec or rcr jbe test or aaa iret add fbstp into cmp xchg adc arpl xor jp mov aam push or or rol (bad) pop xchg pop cmpsl mov xchg imul push sbb xor fisttpl out add pusha sub into pop jle or mov add dec mov js lock lds mov aaa xor push (bad) mov cmp rol adc mov sbb or mov and (bad) dec faddl add xchg mov imul sub je fcomp jbe or add sbb int3 mov bound mov push mul jecxz add and mov jmp mov shl and dec push lock mov adc mov pop or hlt mov lock call push cli xor (bad) sub push or sub repnz sbb sbb mov xor xor xor shrb jge xor sbb mov out xor loopne call xchg inc xor sub pop int3 cmp mov or ret cmp and add or or pop int3 and mov sub mov (bad) icebp jae in test xor and or push xor fsubrs data16 arpl jle (bad) sbb xor fdivs xor das jne jnp push mov das stc or inc dec xor xchg cmp jae sbb cld xor out xchg and xor xor rol cwtl mov push mov mov add daa repz xor push sbb jmp repz (bad) xor test sarl popa sbbl mov aas or lret cli mov sub sub xor xor cmp das lods and jmp sub sbb cmp jne lea mov or inc imul cmp (bad) bnd sub add lock sbb ss sbb adc es (bad) sub and sbb loope or cmp sbb inc jb repnz jecxz lods jnp xor lock fdivs inc xor push pop adc fcoms jbe enter add divb mov mov or inc jge sbb (bad) cld test or xor leave inc stos dec jns sahf psubsw dec mov in aaa fdivrl and and cmp or bound fisub mov push hlt clc sbb mov setb cs ror xor adc aaa fldpi mov es xor mov jl jae xchg aad sahf inc ror ds or and xor xor mull pusha jo xor adc das cmpsl iret sbb cmp loop (bad) sbb push arpl push test fsubl les dec aaa dec addr16 sub jo pop repnz sbb push pop or sub fsqrt or and inc inc or outsb (bad) or loope bound xor lock cmp or mov cwtl xor insb ret adc pop sbb test das adc movsb cmp jb jmp push pop clc or cmp ret fdivs inc lock fcompl ffree test add jge lock inc test mov xchg cmp pop mov add sbb test mov and nopl jae (bad) adc je inc ss addr16 in or and xor jne test (bad) es push cmpsb and inc clc das dec push sub push sbb adc push cltd fs and xchg and or push popa push pop fwait stos mov cmp adc push dec cwtl test pop call test out dec mov loope lods xor cmp dec inc test push das jl pop rcll xor lock jmp popa icebp cld cs shll aaa fsubl xor push mov (bad) adc jb cmp out mov push lret outsl nop dec push dec cli pop (bad) and xchg dec ds es jnp xor cmp aaa subl sub and cmp scas js push mov test pop adc xor arpl stos xchg xor ret (bad) nop mov fisttpl push push cmpl iret jge testl loope or ss sbb lock xchg mov call fwait loopne xchg int mov push test sbb cmp adc pop in xchg movsb or or pop and imul cmp and pop into xor into pushf sub pop decb xor and add or xor xor cmp in dec out hlt les lods adcl jle jge fist arpl or out xor ss pusha or lock popa pop lret pop rol in mov and (bad) pop into fs mov jns (bad) icebp les sbb xorb inc sbb cmp data16 jmp adcl sbb xor cmp inc insl mov mov lret inc and push outsl shrb in mov pop inc or add xor iret movl mov das andl add movl clc and movl or fdivrl cs in xor adc loope ret lcall mov mov or sub decl shl and cmp pop stos jge add inc fidivrl add or decb cmp jbe mov jg lea mov jl imul inc mov xor mov or sbb addl cmc or loope push or adc fist dec push fidivrl pop pop or mov push rcrb shrl loope,pn clc add sar fcmovnu or push xchg adc ljmp divl (bad) mov push mov int3 out lcall mov mov jo add ret push lret or xor sbb es xchg insb pop outsl push shr adc ja (bad) xor or jb push lea loope or push or sbb add fmuls push or pop xor mov inc add push addb loopne je sahf dec push mov hlt test push add test inc movsb lret add pushf cwtl sbb pushf je push add fldl push push es add loopne xor jo mov inc sub mov adc (bad) fmull or jmp xchg cwtl or add pop adcb pop mov test add hlt (bad) and adc pusha mov aas adc add sub enter adc mov or mov xchg into scas cli (bad) lock adc xchg test mov sbb subl cmp mov ss and or push inc pop hlt inc loope xlat and (bad) outsb mov rorl ret outsb popa imul (bad) mov xchg je xchg pusha mov popa push xor inc movsb mov out mov dec mov push sahf mov (bad) or test sti outsb mov mov mov sahf mov adc adc fcmovne cmpb std adc add push leave and jnp les mov mov mov out lea dec mov mov add (bad) push mov enter fdivl fs add bound clc mov or cwtl inc popf mov addr16 bound add lea xor sub mov adc imul and cmovne cs and jb xchg fdivrs or lods lods call cwtl (bad) push jbe (bad) lea xchg test das mov mov gs push mov mov mov cmp jb xor mov push inc call xchg repnz loope sbb (bad) scas or mov aad rcrb push push ja insb dec insl inc fs push mov mov mov lods mov push lea add add add subb into cmp in push mov mov sbb push sub cmpsl cmp xlat outsb mov incl insb in or push mov jnp or add xor pop inc repz outsl dec pop pop and fs mov pop inc call loopne loopne mov sub loopne cmp in bound or and insb xchg dec (bad) push cmpsl bound mov add loop mov inc cmp jne mov ret dec mov loopne jo push lods stos fmuls mov lret fcoml (bad) leave push push imulb mov mov push inc pusha adc jecxz (bad) pop add push aad and roll push loope fstl nop lock dec sbb mov mov jo data16 std inc lods ret mov mov add add dec shr add mov adc mov and push mov lods insb adc push mulb (bad) and pop notl fildl xchg dec or aam push xchg xor arpl pusha (bad) ficom mov jl cmp add repnz xchg push pop nop jo xchg adc push lea pop xchg enter lcall xor out in jge and sbb sbb xchg or std lea test cmpl insl jmp aam (bad) loopne pop jg out add jge sub sub dec movb jne adc push dec cmp cmpsb sbb (bad) mov or and je push icebp and repnz testb push divl orl (bad) (bad) push mov or mov int3 inc mov mov mov pop sbb push orb mov inc mov imul mov jno js bound (bad) insl cmpsb fs dec scas cmpb push mov or add adc mov mov jno xchg xchg (bad) xchg testb jne das je clc xor push stos pop jb pop xlat xor in pop or pop stc out push stc add sbb pop jae add mov and adc insl or mov add lret sbb scas fsubrs (bad) or or ds add mov cmp test test sti add adc add xchg adc pop inc leave repz pop imul xchg mov mov jle cmp xor loope out jmp and add push adc pop push imul cmpb daa mov mov fcmovnu call push dec add imul add or ljmp cmp jl pop sbb mov sub push mov sub push data16 jge cwtl push add add cld out mov dec or hlt push mov out int and popl mov dec fdivl js push or mov jp mov and push add pop jns in inc jno or fsts pop sbb inc unpcklps (bad) mov fwait aad add jnp add pop and fiadd pop dec add dec cmp or sbb or sub mov test inc push jb inc adc int3 cmp lea mov lret loopne imul (bad) fmull mov shlb adcl mov jp ss xchg mov mov xlat call mov enter push push mov mov mov inc or mov clc sub (bad) clc clc outsb mov push mov inc hlt jge pop pop stos push or and cmp adc aam hlt add xor inc adc outsb mov jnp jns test xor mov or test es push cltd (bad) cmp jge xchg mov push inc lock mov add adc outsb or sbb call (bad) pop sbb nop subb sarb movsl (bad) push and mov add stc imulb hlt leave push ja test out shr xor sti (bad) push mov inc mov lea inc cmp mov adc fistl xor and incl dec jne not xor mov in and stos or fdivl fldl fmull push sahf sbb in mov cmp sbb and loop std jecxz push mov aas pop or xchg pop mov mov insl je sub inc and add push dec pushaw popaw hlt mov sbb mov xchg js dec pop push push mov popa dec push fwait (bad) fmulp fnstsw push in cmp xchg cmp cmc jne mov ljmp jne pop xor add jbe or scas mov insl dec or mov movsb xor aas dec or cmp pusha shr iret lods sbbb mov arpl adc cmpb pop cmc lcall sbb cld add cmp add or bound push aad inc (bad) pop mov enter int3 or mov cmp lock addl sahf or push (bad) mov aas mov bound call test in ss sbb mov jp cmp clc mov lret sbb popf lret push or mov dec fs adcl sub int3 inc and negb aas push or insb enter nop push inc or and outsl fcomps jmp movsb cli push or pop adc and xchg bound mov or jo jb add cmc jl and and push jne xor inc ja ljmp or mov ljmp hlt loop or inc arpl imul in pop nop fwait or or sbb sbb and sbb sbb (bad) inc or ss or mov inc stos push mov add xchg mov repnz inc pop adc lret push out cmp inc xor add pusha adc sbb add test lods adc ficoml ds cmp adc mov push mov out test jmp mov lret inc dec pusha mov adc jbe enter sbb sub mov push sbb and cmp dec jge inc adc mov push jno (bad) cmp out jge push push push inc loope pop jl lods mov not mov bswap lock xor or or or xlat inc dec xlat les xchg jmp inc sahf mov jmp call jmp jne push in lods imul adc mov and push pop cmpl popa pusha dec sub jmp mov and jmp sub mov mov popa in popa mov imul or hlt jmp fsubs test je sub and xchg xor and add dec inc mov lcall and mov mov push mov ja mov repz fmuls push inc jne add push jne fistl push adc or adc movb fwait add inc inc not int3 dec sbb sub dec iret fisubr add jmp mov sbb add push nop sbb pop sub rcrb or and dec or inc add or inc dec ret jle push addb add pop or rorl xor add fs sub push rclb inc add dec pinsrw arpl jnp ret aas inc push pushf in add mov arpl adc pop push sub xchg sub inc push adc add sub fs or popa xor mov sub mov (bad) mov dec arpl js pop push mov ret add xor push ret shrl dec cmp add dec jle aam scas call dec mov sbb stos add rcrb aad aad xlat push nop sub push push outsb add sbb push aad and or push xchg sahf test mov mov adc add pop mov fadd enter sbb inc orb push sub xor dec (bad) or mov and lock push push push (bad) shrb push dec push dec add adc sbb pop imul in mov (bad) push push pop shrl add popa inc mov push dec push or or adc and and insb add sbb pop push sbb or ss fisub sub sbb (bad) add sub stos or cwtl enter inc jo and lcall cmp mov adc adcl test sbb addr16 inc orb adc adc adc popa jg add add je push xor mov es cmp jns inc add int clc add inc cltd jl orb adc cld jnp lds and and cmp and jmp mov mov add or jge push fadds inc jae jns (bad) and into mov shrl cmc add adc push cmp or int (bad) (bad) push mov add sbb loopne adc push inc jns add add lock sahf out ljmp add or pop cmc mov rorb pop aad outsl adc mov add std je outsl or movl insb pop in popa mov or (bad) jne xchg dec out leave sbb xchg test mov ja jp ret in mov or dec mov inc add scas roll adc rcrb inc jo test int out addb xlat or rorl insb sbb sbb sub fdivrp ja lock mov pop cmp je add jne pushl or jle movsbl inc mov add leave inc adc inc cmp jle jb (bad) jne push and push and inc sub push add push int dec mov and add mov mov outsb add adc adc insl xor and sbb idivb cmp je inc add js bnd mov sub (bad) dec pop clc ret fdivrl mov jecxz ret add mul seto neg or push cld add ds push push add ljmp and push pop adc push mov add adc addl fs mov pop shr out push adc cmp adc sub adc mov or and pop mov xchg jbe sub div mov clc ret add add (bad) push mov mov fcmovnb pop inc cmp sbb pop jae fistpll ret imul cltd sub (bad) outsb imul add push add pop in adc imul pop lea add ja jge pop push das mov bound inc popf mov les push xchg and (bad) cmp cld lods mov enter adc ret adc cmpsb and in outsb mov lods mov pop add add pop mov push or sahf mov jo clc in sti add mov mov cs adc mov idiv fbstp adc push jmp adc pop jge lea cmp je inc lock push mov in outsb or jmp xor outsl add inc je test scas sbb cltd mov mov pop or mov inc or mov mov inc or mov test dec test push xor dec ret fstps inc mov cli pop out inc or fs adcl pushl sbb push push sub dec jno sbb xor repnz cmp loopne mov sbb icebp pop sbb imul add dec rcrl jne shl dec nop jge lea push (bad) adc imul push xor ljmp jg push or dec sub add push fcoml jge mov inc mov dec pop loopne imul (bad) push mov and dec inc or inc test js inc ljmp incb sub ds mov add dec into lea loopne rep mov jle push es add rcr mov ret (bad) push pop or sbb mov mov push (bad) sti aas mov insb xor mov inc cli fwait mov mov cmp add sub in add pop or fdivr lock cmp fmuls in cltd xchg inc std jl cmc pushl cmp jne mov cmp jne push ss cmp cmpsb jb in push rolb das adc or xorl dec loopne in mov fldt cmp jg inc or add stos jbe or sahf lcall es adc add sbb outsb sti outsl mov or inc decl sub sbb insl mov or lea push (bad) icebp out add or add sub fsubs push pop insb add xchg jmp cmc pop jmp xor add mov (bad) jne dec inc roll inc cmp adc movups mov and call sub ljmp push inc dec push stos inc fdivs pusha mov mov fidivrl pop or pushf jae jno or test lret jb ja xchg lods jmp leave jbe mov out dec lret or (bad) jae xor xor push orb or push (bad) mov movsb add arpl inc ret inc adc (bad) jb xor fsubs mov adc (bad) dec xor dec jb js mov inc and adc arpl aam dec hlt adcl xlat gs (bad) push adc add mov pop sub je rcll (bad) fcomps (bad) dec in invd add xor test cmpsb or adc jne xchg cmp pop add sub xor insl lea fs int lock or pop adc push mov add inc push mov hlt fs or addr16 push pop outsb adc or dec sub mov xor sbb mov adc notb push ljmp mov inc jno lea lcall ja ja mov bound push jae enter adc mov dec enter pop adc push jbe cltd sub cmp iret cmp and ss or out or lret inc test adc jmp jno push fiadd fmuls sbb and jae fldenv sbb jae add int push loope daa and arpl mov sub add cmpb xlat popa push mov mov add jo (bad) pop test mov gs and mov add pop (bad) mov sub inc mov mov pop call roll add arpl dec or aaa jge rclb sbb push mov inc mov inc fidiv sti lods or adc roll cmp jne xor xor or inc ss sahf lods mov mov mov add mov push rcll (bad) sbbl inc or jle cmpb and cmp roll or mov pusha adc sub js adc lods insb push sub inc xor and adc outsb or push jno jmp xor add and push ror push or add mov or mov in inc xor cmc sbb js mov enter sbb cmp add add pop sub lods jge or inc and push inc test or inc enter (bad) push mov mov add mov pop push push clc sub lock call adc orl sysenter cltd call or ds in jnp test bound sbb les dec je jne lea adc xchg add (bad) lods je push add pop pop cmp add test dec push pusha or cmc mov aaa and (bad) push adc adc add cld push icebp cwtl push cli bound xor sbb xchg sbb push mov aaa or sbb adc xchg sub push sbb add fsubs dec or and (bad) cmp add mov roll insb mov add sub xor pop push mov test fimull or lods mov pop outsl cmc mov je push subl mov ja pop adc jmp fs enter dec push jp jnp or sbb enter jno,pn cltd sbb std movsbl add push xchg sbb ret mov notl cli popa xchg push jle cmp test push rcrb sub cmp cmpsl incb push ficom scas adc mov sub aad (bad) xor and int3 popa push mov xor and adc add push sbb pop jge int or lea add sub test lock out cmp inc or repz icebp sub test loopne jle dec mov clc push jmp push push xchg test clc pop sar setl pop mov push insb add mov jae mov (bad) fisttpll jg divb cmp outsl mov fnstenv sbb jg push xor fucomip pusha adc clc push shrb rcll or cltd jmp sub outsl mov jge sbb or pusha and popa sub loop mov dec push or mov mov popa ret and xchg jle mov lock mov inc mov or xor jl (bad) add and (bad) (bad) mov and mov pop adc xor push jmp sbb inc jmp add inc sub sbb sub outsb adc ficompl mov ficoml jmp (bad) idiv mov add cmp or push xor push or or adc push mov addr16 xor sbb lods test sbb cwtl (bad) imulb or fldcw or lods dec stos loop add test mov cltd sbb xor mov dec add cmp in sbb mov xor ret sbb inc inc adc sar push inc inc or inc rcrl add adc jle sub dec loope rcl outsb adc dec add xor sub popf lea mov dec popf push jne fcomps test in and test xchg push das bound xchg (bad) xor add mov xchg lea push pop pop sub imul pop das mov (bad) loope,pn dec sar dec jne addr16 arpl call sbb xchg js cmp cmp in (bad) mov mov jb pop outsl ljmp adc add pop (bad) mov jb incb incl dec (bad) pusha adc sbb push pushf into xchg cmp add sub adc pop sub cmp call insb jp inc dec or and enter dec mov fwait pop andl fimull sub test sarb daa enter dec dec ror (bad) inc mov cmp jl push jl push decl movsb das or or je mov call fnstenv push lea out shr and sbb adc nop test fildl sub xor xchg nop or daa mov test mov adc xor mov (bad) add push and in mov lods pushl sbb loopne (bad) and add mov andl push add mov sub inc ficompl cs (bad) movb lods loop leave or orl xor push adc push aam mov jp jg and insl (bad) mov xor or pop xchg inc les push push adc jmp clc dec dec (bad) xor inc cmp loope inc sub popa add sbb jge sbb jmp add rclb les fildll cmpl popa mov mov popa jmp incb (bad) loope cs out pop inc sbbb mov cmp adc and rcrl fidivl mov (bad) mov cmp aas fisubl bound pop inc arpl imul xchg into (bad) es or mov je fstl lcall push xor lods and out or das add hlt adc aaa push or inc imul gs mov clc and movsl ljmp testl ret xor and add repz fcmovb add mov dec push pop mov mov in and jmp cmp pop idiv pop and inc ss add lret stos mov incl add mov inc dec and mov jns cmc mov sbb hlt push add push mov inc clc push jbe sub adc add arpl je in push push lds fimull inc (bad) test add orl adc sbb repz dec push adc (bad) fistl adc pusha cmp movsb add (bad) pop test sbb sub test dec push or and subl popl add cmp testl mov inc cwtl xchg push cmp sub sti icebp sbb push inc mov lldt push or sub pop mov pop add movsb push icebp (bad) cwtl inc int3 ficompl add push mov pop dec and inc insb mov clc push add jmp int3 sbb test loopne push rcrb shrl jnp (bad) insb push inc jmp dec jns roll push adc (bad) ljmp sbb jg inc cmp push mov pop cmp jge stos stos stos sbb lea outsl lret test aam push dec (bad) jns inc inc in test sbb push xor dec inc mov adc adc or lds pop add inc inc add pop ret sub fsubrs push mov mov adc mov push and subl or push aam mov adc xor inc add mov pop imul pop xchg insb dec xor mov add je mov xor add add push dec push inc jl adc ss mov mov je popa int mov cld imul push lock pop push xor inc dec or and pop pop sub mov inc je enter call sub mov fdiv ret cs push jle pushl add (bad) xchg mov aam sbb mov (bad) push cmp faddl mov xor push subb pop lret add mov rclb fadds add mov lock test pushf add mov dec sbb push sbb pop cs push loopne mov add mov or sub sub lret push pop adcl xchg test adc lods push add and push mov and push xchg faddp pop sub add mov (bad) in cmpl and popa (bad) jne pushf sub push stos xor mov mov xchg inc adc or jnp mov stos dec jne push and mov push dec or or rcrl rol push inc cmp adc jl idivb cmp cmp add stc push add ss (bad) sbb test pusha ljmp fistpll add mov dec mov shlb add (bad) pusha clc ja loopne leave fs sub pop ds jo mov gs jge lock les inc or ret add adc pop jo insl xor or bound stos pop cmp stos test xlat sbb xor popf jo mov cmp adc inc pushf divb pop mov xor sub fldl inc adc ja sbb or sub inc hlt xchg inc xor add (bad) push rolb shrl or mov fstl hlt push dec xchg (bad) xchg (bad) mov fadds push sbb pushf inc sbb loope pop inc mov jmp and mov fcoml mov push pop jne push add adc sbb or testl cmp inc and or adcl loopne mov insb or das dec or es xchg add xor pop jbe mov idivl xchg sbb or clc je daa xor or jmp add and and jmp sete je xor int3 cmp push or or loopne adc rcr add xor je push add (bad) jbe push stos add and pop inc pop adc insb jl and inc loopne mov add ss push sbb js,pt inc push or hlt mov cld mov sbb je push pop pusha or inc inc dec lret push dec loop push inc aam es adc addl sub mov icebp aaa mov mov add push xor ficompl push pusha adc mov adc sbb fsubs push pop xchg push sub fildl inc push push fs push sti and lea push pop inc mov push pusha mov imul into int push add outsl out jl push and mov sub cmp roll xor sbb adcb sub mov and add mov and adc adc sub test and mov push stos in cwtl mov pop arpl dec inc ret jl stos subl push push jle adc mov push adc mov int3 faddl mov push movsl jo addl jo pusha sbb inc insb hlt or idivb push xchg dec (bad) ficomp push in sbb mov sub cmp add push xchg cmp clc cmp inc pop stos (bad) adc push fdivs (bad) push leave mov adc sbb rcll add adc lds stos sbb xchg clc test les push imul std inc mov aad adc fwait push mov in movsb push push inc insb jne sti xor ret lock pop adc inc lock cmp lea push xor aas add lock sarl (bad) jae rcrb adc arpl xchg fldenv jae sti cld or add lods or push roll fcoml sarb (bad) fsubs cs std stos mov add xor inc cld das sub push in xor push imulb jmp psllw sar sti mov push stc jmp push inc cmp adc data16 mov adc add adc push push push sbb pop nop add add icebp or shll xor mov pop cwtl pop je xor or push rolb inc dec inc icebp dec cld push das push ss lcall loop mov pop adc test sarb inc movl ret sbb (bad) fisubl (bad) neg sbb inc mov rorb insb das add mov iret cmp test mov popl sbb mov jg mov (bad) dec sub fs outsl and xor push push jo add add icebp push push js inc push add inc rcr mov ret cltd mov ret int into push mov push loop cmp ret cltd adc test push and jo add add jnp sti xor push (bad) or je pusha (bad) pop and push xlat mov add pop cmpsl adc (bad) ljmp sti pop push cs imul xlat insl mov dec adc add sub push std pop pop sbb or addr16 or adc cmpsb in inc mov xchg popa pushf add dec sti clc insl fsubrs pushl lea rcr or xor sbb enter into lock mov in xor cmp mov lock test push stos push adc add jo aas ficompl add loop pop out push cmp adc add ljmp dec loopne push (bad) inc and add aam sub sbbl adc inc dec inc fisttpl mov mov pop adc cmp dec jle adc stc pop rorl insl dec push or imull pop mov and sbb sbb and mov jnp leave test idivl popa push inc sahf test loopne jmp cld icebp or leave outsb jbe mov clc in (bad) push icebp notb lock add inc push clc mov sub mov push sarl push sbb mov or (bad) lods dec jbe add and es pop jnp test into (bad) iret and js add aaa add pop cld xor and ss inc pop (bad) insb mov (bad) pop xorps push cmp xor dec xchg aad pop mov cs and insl test add or or fs hlt jg pop or in push or inc jl push sub roll outsb pushf ljmp add add add push addr16 test out mov sbb add je jne and lods cli pop add cmp push sub repz shrb cmp push sahf pop adc push xchg inc int3 mov adc mov sub sbb mov in adc or out xchg cmp test std inc add push adc mov leave ret inc or push inc jl data16 test or adc fisttp and aad fbstp mov push pop sub fwait mov fisttp pop adc push cmp ja add out sti jl or sbb sub cltd adc clc or insl add jl push mov sbb add jl inc mov jbe add cmp add dec fst xlat aas jl fnsave and cmp add mov push mov test sbb mov push pop sar inc adc enter sbb movswl inc adc in add adc pop jp xchg test xor dec stc sub adc ret xchg dec push aad sbb sbb add into adc mov xor push pop inc add add daa xchg call xchg mov jle add mov stc cmpl inc mov adc push and sub insl pop push sbb lret push jp fdivrs arpl insl adc iret ja push or add pop (bad) mov push jl push push rol push nop bnd sub sub jg (bad) add and jle mov or cmp fnstsw mov push adc push cmp jle xor add daa outsb insb xchg push (bad) pop (bad) adc push dec push movsl fldt add mov push aas es mov fsubs mulb cld lsl fldl xor (bad) pop sbb or or aam lock cmp (bad) ljmp inc mov or inc lds int or int3 mov push and or sbb cmp push iret or rolb mov pop jnp mov cmpb mov adc int3 mov fiadd dec aaa pop mov inc js loop jp pop ret or (bad) int3 int3 adc test lret or or add enter mov add mov cmpl add push add or adc mov out push mov je test mov xchg (bad) pushaw mov add push je inc adc ja xchg sbb inc int3 in popa mov sbb out and pop cmp sub and mov in and clc pushf lret push sahf rcll inc out xchg inc cmpl push fildll stc sbb fwait in je out inc dec into dec (bad) loope loopne pop add (bad) mov fcompl dec or jl (bad) or pop fxam fdivrl nop sub xchg or insb pop shr or and jnp cmp cld push or pop push (bad) movsb test dec out sbb clc push rcll jmp popa mov sub sbb pop sub (bad) cmpsb aaa pop push add mov test sbb add (bad) mov cmp pop test jge or inc xor ja mov and fstl jns (bad) mov rcr dec or outsb gs pop sbb sahf pushf cld je and adc loope jmp or mov sbb or xor inc in xor faddl dec dec ss and clc xor out and mov xor aaa mov pop cmp call mov push sbb outsb inc into ss xchg mov cmpsb push ja,pt xchg ss sub outsb ds or jne mov out js add fcoms mov nop or jmp cmp jl push roll add jmp nop jbe push add and rorl sbb mov outsb out mov loope jg add mov fwait stos add jno add mov adc add fidivrl sub cmp push je xor push lock push mov icebp cmp aaa jae inc xor enter cmpsb add fcmovb in pop (bad) or push inc jbe dec cs cmp jo mov push bound push pop xor shlb insb add sub xchg add into call and andl es xor andl xchg sub sub hlt push lds sarb jge and arpl push loopne xor lret xor mov sar in fistl mov mov sbb jg or mov mov inc cmp decl mov out push pop fisubrl arpl (bad) push orb ss jge dec out xor fs (bad) push or sbbl cwtl cmp and dec add xor or roll lea or pop ljmp cmovge addb push push insl dec dec adc push push or add andl mov adc aas xchg mov add add xchg sub mov jg cmp (bad) jge or dec jne pop mov cmp fildll insb and sbb cmp adc push push ret pop std test mov or cmp fldl in ret pop pop push int jnp sub imul mov adc and inc adc mov jno push jnp leave repnz fs mov cld cs jl rolb in push inc adc sub loop jg enter mov dec cmp jg stos test push (bad) in popa xor inc pop inc xor push pop es mov push pop sub test sub (bad) jae pop xchg xchg jmp pop push fninit fstp (bad) loop and dec jne flds mov and addl loop aas jne fldcw add sub loopne or sbb sub add sarl sub pop pop pop xchg xor subl xchg shll sbb test call sbbl jne push cmp jb push dec add sub out sbb adc sbb test push cmp jbe dec push inc fildl mov jne xchg mov add and hlt and pop jne push jg xlat mov dec pop add dec add fbstp andl and lods cmp jbe jecxz stos fbld shl push stos mov insl pop outsb fistpl jecxz mov pop cmp test out fidivr sbb mov cmp cmc dec mov xchg std mov stos mov mov fistl sbb hlt or mov outsl xor sbb adc in cmp fildl repz pop sub cltd fs lods test inc fwait mov add outsb pop lcall add add jno inc mov adc xchg pop jno stos stos mov cltd faddp sub jge js jae enter mov cwtl push shlb push fs jmp cli add pop and dec icebp outsl mov or insl mov movswl pcmpeqw adc (bad) imull pop mov jge sub xchg fcoms test test lea jmp and cmpl (bad) fidivl je dec mov aad je or insw lods mov cmp cs fmul movsl ret sti adc adc add push adc icebp fstpl or jne cmp pusha test jge jo xor cmp jae sbb adc cmp jbe adc or xor and imul sysexit sub addr16 and in gs bnd in mov sbb push sub fs sbb xor adc or dec push fs addr16 mov imul imul fmuls xlat rolb pop push sbb mov push push mov or ficoml mov es jp shll call (bad) sbb jo or addl inc add push andl scas pop sub mov mov adc mov call jge gs mov or scas mov fist adc add or inc in daa adc pop or pop (bad) push or jle fistpll push aas outsl stos or jg push orl and loopne aam fdivs jmp sti insl fildl in in mov and xchg xor pop in sbb outsl jecxz adc cmp pop add dec mov xor test jne adc push insl jecxz stos mov and and push loope mov rolb loop in leave fiadd add inc test sbb fs sub lcall fdivrs (bad) jb sbb xor jae mov jmp push fs dec add push push adc pop adc jmp mov pop cmpl cmp mov jl adc je push addr16 inc mov orl je repnz push sub add je inc jle out mov repnz jle pop jbe jmp push lock inc sub int dec jne push xor jge jne lret into sarb mov sub arpl inc and sbb adcb xor aad bound jmp inc pop add cmp inc insl fcmovnu jg out jle jmp jbe je add mov outsl xor inc enter mov call xchg invd jne push push push xor jge mov jne mov jl pop adc jne jmp sub mov pop mov cld je roll fisubrl scas xor shlb xor sbb push clc arpl inc xor dec dec mov xchg adc fcoml xor jp cmp test or loopne (bad) add dec repz enter pop (bad) push (bad) xor mov mull and sub xchg mov xlat jno push mov (bad) (bad) mov enter repnz insl adc or rol test lcall stos jns or (bad) jne adc adc inc cmp int and push das jo sbb leave add xor add add or out sub adc rcr in jle add xor jae jg adcb imul mov fisttpl dec xchg sbb pop sub push or adc push cld mov (bad) adc and loop jnp dec mov mov pushf mov sub jae rcl xchg ss fcmovnu iret fldl fmull (bad) (bad) rorl sbb insl push xor lret cmp std in call aas pop jmp out fldl inc in add mov dec lret jne fsubl fsubrs jne xchg jb sub adc in push and mov add and fadds mov imul movsl (bad) pusha fist lea insl out pushf jbe add in or fmul or test jne sti fld ficom cltd bound out pop gs andb insb adc and sub add mov sbb cmp sub add adc into push shlb mov mov mov and cld sbb nop inc js dec adc lods (bad) and je sbb fisttpl dec jmp add (bad) jmp shr ja cmp pop aad sub inc jno (bad) mov inc jne push jl pop stos mov sub daa test push inc sbb fdivrp lods rorl or mov and (bad) ss xchg mov add sbb sbb stc cwtl push mov cli and mov pusha sbb inc push mov inc (bad) fcoms jmp mov push xchg fiadd and xchg mov lods inc or or mov add add pushf add pop mov sbb adc xor inc fmul in fbstp sub sub incl add (bad) xor push or jecxz add add sbb adc sbb mov dec dec pop sbb sbb mov add adc shrl fiadd jnp addr16 sbb or push ss and add mov dec icebp ds insl cmp je mov outsb je adc mov and dec xor daa and out fldl fcmovu sub pop adc (bad) insl push sbb test adc jo,pt fist add inc push add stc bound ds mov cmp push sbb inc mov minps outsl ret adc cmc jmp cmp sbb hlt fimul cmp ret inc cmp jb test inc fisttpl add pop and fadds add or lock ret mov ss mov loop inc sub add outsb jnp stc mov movb fcom bound lahf cmp pop cs add push and js (bad) cmc andb mov sub ljmp cmp push jmp xchg mov cmpsl iret bound pop inc mov pop repz adc adc movsb and roll sbb jmp test or lds ret daa and xlat push ss dec hlt mov test pcmpeqw xchg (bad) sbb (bad) jmp or jb xchg (bad) jne repz rorl movsb push leave pop pop or cmp in (bad) movsl test mov sbb jnp pop push push lea cmp mov mov fmuls and xchg and rorl xor sub cmp or testb fldcw xchg pop adc jmp test adc rcr jmp push lock mov sti cltd xor sub push pop jo scas fisttpll dec fmul or pop or fsubp fsqrt fyl2x push int3 fsts (bad) hlt inc bound dec adc add push sub push lock lea mov sarb add fcoms stos into and push lods sbb repz inc xchg sub inc subl std or dec loop adc inc dec xor inc stos cmpsb xor scas push in outsl call fimul add and pop mov and ja or hlt mov and mov jecxz cmp or call cmpl push jo mov sbb push in prefetchw or add add sbb adc rcrb fisttpl sti add or add cmp (bad) push ja fidiv or adc shr and add pusha push or mov add mov ss insl imul sub (bad) cmp jbe (bad) jbe (bad) jne mov xor cs mov dec dec mov testl xchg dec int3 push fildll push add arpl sub or shlb or (bad) cmp dec jno xchg js ljmp jae sarb lock fscale fstp adc icebp or mov adc push add adc xchg adc and lods (bad) imul pop sbb les or divl push scas or cmp push lods push or orb lods xlat push fdivrs test sbb and pop fwait mov jp mov (bad) notb stos scas and sub cmp in and add adc xor int3 ret popa and fabs xchg or or jmp cmp inc mov mov pop dec stos cmp xchg (bad) xchg mov addl ror mov ret add adcl (bad) ljmp jl jmp push xchg daa inc cmp popf mov xor inc add movsb mov mov (bad) and insb ja xchg dec lds sub imul sbb mov cmp cltd movb pop pop xor enter stc stos add in dec pop pop add add add bound mov movb add xchg xor mov enter addb push les and add inc or mov dec xor inc add push ret sub test xchg sub leave jns frstor or jne or push or cmp (bad) or (bad) je pop pop insl adc ret in imul cmp dec das adc adc inc mov mov push xorl orl mov add mov aad sub jb pop cmp jne enter and xchg add imul jl sbb insl pop push add pop add push push push push push xchg andb (bad) xor pop or push cmpb add sub (bad) incl aas dec fsts ds sbb arpl jl jno ds xlat adc hlt add push and in rcr movsb inc jno pop inc cmpsb xchg movsl push xor dec jo or push scas pop aam or mov mov inc push mov inc dec adc in ret test es push add dec scas fdivl (bad) cmp aad clc cmp cs jmp in adc push cmp jbe add and jbe jmp fwait and sub mov mov pusha scas test and fistp xchg mov or jg jnp mov das fisttp jb pop (bad) dec add mov movsl nop adc (bad) cli aas test pop lods mov pop idiv movb jb adc pop push mov push and fbstp or inc mov xor pslld fld1 fstpl insb rolb in or or inc add es div adc adc mov sti sub push xchg or lock ljmp pop push or leave cli mov mov cmp inc inc sub lds mov movsbl cmp push pop pop adc pop mov adc insl adc bound jecxz lcall ja inc aam inc fstl add orl mov decl (bad) mov dec cwtl dec inc pusha test (bad) cmc mov push cmpsb mov mov mov mov dec loop mov ret shl add mov and cmp jb push stos push add sbb popa xchg jo adc pusha jo fcomi (bad) (bad) or xlat fs mov lea arpl xor cld mov add adc adc adc push outsb pop pop dec adc dec sub push popa inc add shll add cli je sub push xor add mov mov mov test add roll add lods loope (bad) in pop jmp mov mov test icebp cmpsl movsb push sbb or shrl adc jp test push fdivr or rcll pop dec dec (bad) sbb cli add stc int mull testl out add and (bad) push push push test adc add push mov lock les loopne inc jl add fldt mov xlat xor (bad) fisttpl jmp or jne jne pusha ljmp cmp jbe xor iret sub dec adc add inc sub jle push (bad) xor dec xchg mov cwtl (bad) (bad) jmp jle mov fnsetpm(287 xor mov jecxz mov repnz jmp sbb clc jb je mov push push add pop pop fwait adc pop ret hlt mov add movb xor adc adc fs insb push (bad) push mov sbb lock push test sub (bad) shlb adc mov add mov stos in fdivl push fwait inc push aas or stc add outsb test pushl and outsl lock add int add cmp cld mov jnp sbb pusha int3 ss pop mov or push cmp xor and (bad) xchg sub hlt sub pushf test les adc sbb lock stos jl mov add je mov and jmp jp dec push shll mov lahf cli fwait dec cmp sbb cli clc add mov add mov idiv (bad) orl out mov decl hlt hlt mov sbb add and pop loop inc mov jle xchg (bad) push shrl push imul leave lret clc sbb inc mov test jne pop das push mov adc inc mov mov cmp je sub ror adc dec ret sub cmp insl (bad) mov (bad) lock xchg mov inc ret push lcall subb addl or loopne lea ss fcmovnb adc nop mov (bad) decl mov cmp je inc mov mov mov pop inc or ret xor negb push rorl or stc out lcall mov orb or mov cwtl jl insl or aam push add mov sbb or ljmp push fcoms push add or lret addl and addl push dec lock push add pop and test pop idivl (bad) mov (bad) divl lret outsl xor ret add stc inc and out xor repz xor inc ss in cmpb cmp enter pop ret shlb shll mov mov fsubrl sub and test xor nop jb push sti je mov cmp addl lahf call mov inc (bad) clc xor jns out fstps mov inc cmp ja pop push (bad) fdiv add ret add add stc sub jne push push mov mov pop stos dec inc out pop lods mov xor leave fsubp jbe lods fstpt clc mov movzbl iret fsub test push enter jne ja jae test mov mov add fiadd mov gs jne xor inc push sub inc in add sbb fs ljmp mov fisub dec rcr sar mov test out xor adc xchg xor ret push mull mov add mov inc push pop rsm pop jno mov lahf (bad) je ret outsb out mov aad pop add xor into rorl add adc or xchg rcr lea bound ret inc add mov mov dec sub inc pop ret or and adc (bad) jbe test mov xchg fiadd inc es pop mov ja jne mov xchg ja add mov pop ret pop xor data16 mov xor add adc and es enter jl add data16 cli or xor fdivrs sbb pop jmp pop add cli js outsl (bad) mov add mov jmp push sbb cmp imul cmp and js pop mov lock jne inc shll leave xorb lret repnz mov rcrl cs sbb iret bound mov repnz fcoms mov das fld fmuls xchg aaa cmp mov add data16 or jbe in mov push mov dec push (bad) adc adc mov and pop dec cld sub jnp fisubl nop or decl mov pop decl mov xor mov xchg cmp pusha mov jb popa or mov repz mov test imul xchg mov test invd and aad and sar xchg sub adc jbe test mov and xor andl and sub add and and push mov and sub mov inc dec mov and and mov push fimul cmp nop cs cmp push or in mov je inc inc or mov popf test mov fnstcw mov add push dec clc std add dec and adc adc add js sti out out js adc adc push adc sub push dec popa dec mov cmpsb (bad) mov in outsl xor jmp lret mov add and jmp movsl mov push sbb pop ljmp in fmull iret jae into mov lret inc or in sub fisttpll or xor call ss mov xchg fcomps adc dec dec pop cmc sbb clc sub neg sbb not and pop xor in inc je iret je jns dec cmp dec rorl je dec mov push shrb fwait je mov fdivs cs or cmp fcom jge in cmp inc or pop cmc cmp add lret mov mov sbb add adc or cwtl push or cwtl inc add fidivrl ds inc jns call (bad) push shrl outsb xorl loope inc sub adc out add jo inc mov loope push mov cmp out fisttpll and sub loopne pop pop test xor sbb inc inc and movsl add mov insb sub les popa orl or pop push mov (bad) orl rcrl insl mov mov in push (bad) sub push cmp js,pn dec dec xor das adcb mov outsl neg outsb add cmpsl rep adc data16 movsb sub pop jg int3 sub (bad) rorl inc push popf mov pop cmpl mov inc xor call mov jb sbb loopne subl add pusha lea mov xor mov addb adc mov add mov cmp inc cmpsl vpsubsb ljmp aaa sti (bad) lret push divps adc push xchg rcll adc leave test sbb or pop jo mov mov jl xor sub mov insb or nop pop mov loopne pop mov push mov int test hlt jae jo xchg mov add test jno popa adc push adc imul xchg push adc sbb adc inc out adc popa addr16 xor xor lret adc aam or scas add sbb push jb es mov ficom movsl pop mov mov push jno push in inc fcmovnbe (bad) xchg add mov mov fildl mov push (bad) addr16 out xchg fs adc jae push nop mov rorb out push shll aad and cs dec data16 (bad) mov mov mov add rorb movsb jo jo enter push pop push (bad) test mov test call add (bad) jno add push sbb pop insb mov daa sub sar xchg movsb ret sbb sub or jmp bndstx add test dec push push pop dec adc lcall fldt (bad) es mov (bad) sbb pop fstps dec and sbb sbb sbb lods test mov pushf cwtl xchg nop sbb sbb mov sbb jl je sbb sbb insb push sbb pop pop in xor sbb addb nop xchg sbb sbb cwtl pushf mov sbb sbb sbb sbb sbb int3 rcl sbb sbb fsub das mov xor ss hlt in xor clc cld add add fs adc fs and fs xor fs inc insb fs dec push push pop enter xor enter sub enter sub cmp enter cmp enter and sbb enter adc or ret or and fs inc dec dec fs push pop pop xor ss pusha xchg jecxz add xor fdivr clc sbb fwait xor jnp pop add sbb int adc (bad) int or inc inc and es adc loopne icebp push push adc mov adc push add es adc xchg dec dec dec nop mov jbe add (bad) popf nop add add pushf gs add mov adc add dec inc dec inc add fdiv pop add push push (bad) (bad) (bad) aas xchg dec inc push push inc push inc pop dec imul je dec outsb je jb gs sub js insb outsl jb das push jae outsl outsb add push push sbb mov aaa inc pop inc pop pop pop mov aas jg inc dec push inc push inc dec dec push push das (bad) ss jns push insl push outsl outsl je and inc inc push fsubs movl inc pop popl dec aas mov in in and and andl mov imul sbb pop push dec lahf int cld dec dec inc dec dec dec inc push push push inc rcrl xchg nopl mov push push pop cmp add loope jnp cmp pop push dec and jg pop pop dec dec push inc inc dec inc cmovbe mov mov inc sbb inc push mov popa fmuls sbb push dec sbb jnp push dec dec dec dec push xchg rcpps push dec cmpl or fs je and jnp adc push inc jp or adc jb movsb incb in pop inc dec inc jne insb fs jne (bad) mov sbb dec popa bound push dec outsl dec popa insl gs inc negb push outsb outsl ja and pop jno adc mov push mov inc push inc pop jg test jb push imul addr16 popa je add xchg jae arpl fidivr popa ja push pop inc bound insb mov mov flds jnp pop fistl push sti test push inc push outsl dec dec inc repz mov loope popa jae addr16 sbb inc out jae dec aas loope imul cmpsl inc inc fbld popa jne fwait sub insb je ja add pop push insb jne test imul pop sbb add push pop inc inc push jae in lea dec dec or in negb dec inc adc jo jecxz fcmovnb cs insb push and pop inc arpl jne add imul pusha xor inc dec push addl sub insl in inc inc dec pop push xor (bad) movsb xchg je xor dec dec mov fmuls cs cmp lcall imul cmp insb jae js push jb sub testl pop sub rcrb sarb data16 clc xlat inc dec cmpsl inc dec push lea xor enter xor scas cmp wrmsr cmp add sub inc dec popa add mov jge fist mov mov gs insb clc xor inc outsl pop sbb jae je jo push stos push aaa mov inc push push daa or mov and pop dec cmp mov insb xor inc push dec jp popa jns adcl imul addl push push aaa outsl add aaa jmp dec ja sub test ljmp and mov adc outsw pop insl or or call push mov xor add das and or jmp jmp imul movsl pop dec je dec fistp gs fmuls das (bad) add or mov outsb nop vmovupd jbe jo push fs insb sub je jo or out rolb mov inc dec sti push dec pop aaa pop sub pop add push xor xor add sbb push xor inc push pop sbb mov push push dec iret push push insl ss shr and mov jbe out push jae cli jge add insl popa imul call cs popa push add or bound aaa mov cwtl cmp lock xchg insb insb pop and xor fldenv or inc push xor xor mov sub shrl lcall or jae and mulb aas push push inc inc jecxz addr16 sbb push push dec or je mov mov and gs sti and pop ud1 pushf or sbb add andnps inc imul or into push push sbb gs push mov jo pop arpl sbb js arpl arpl imul adc fsubs inc push pop push push jae or mov or (bad) cltd imul sub and popa leave or dec nop bound and push mov pop mov jns xchg jae cltd (bad) jne es fnclex xchg jae shll sbb pusha cmpsb (bad) cmp daa data16 frstor pop movsb or addr16 mov mov or jae outsb cmp out mov sub data16 pop jnp ret pop sbb arpl and popa push pop pop pop cs loopne in lock mov imul jbe sub inc and insb les or in ljmp and push jp pop jae bound outsb lret cmp and sbb fldcw adc inc pop rcll pushl aaa add xchg sbb xor push or insb insb xor and test pop mov pop inc push iret sti push insl pop push xor fbstp jle das gs insl sub sub sub push cmp mov add data16 (bad) inc push pop and outsb jae setge add ret (bad) rcrb dec xor movd push push add pop xor int3 insl jae or sbb cmpsl add xor adc jo push sbb mov jmp jbe xor xor pop aaa cmp xlat in sub pop jnp data16 test push cmpxchg xor mov push xchg shrl sbb add or or pop insb jns cmp mov ja jg fwait mov fcoml aaa insl (bad) cli inc pop outsb or dec xor mov call and mov dec and or add lahf cs and pop mov sbb out imul or add cmp (bad) add adc inc push dec mov addb push inc scas lcall inc cs (bad) push test and lods aam and sbb movsl gs pop inc inc push add jno into comiss je lcall outsb notb lods mov dec xor push add cs push dec push pop cmp jo inc and add jae bound pop jbe dec jae pop dec and push sub mov mov cmp and inc daa (bad) fldt and and inc push inc pop mov dec outsl jp insb pop lahf xchg outsl js xchg pop adc pop mov mov push push pop xchg xchg mov movhps mov fs add enter push invd pop xor push push mov mov pop xchg dec mov pop adc push test lcall or mov xchg dec inc or sub push jne sti xchg clc dec xor mov pop cmp in mov dec inc sub pop pop popa inc jne ret fsubs outsl xor and out daa pop xor orb imul sbb push dec xchg xchg sbb add sub movsb xchg mov push cmc arpl loope jecxz ja and dec insb sub pop sti add pop inc push xchg popf jae sbb rorl or and pusha xchg adc lods lret dec aas xor mov fistpl outsl pop addb dec pop ret inc inc inc xchg inc dec dec dec add dec dec mov inc stos sar inc mov bound adc rorl insl (bad) jo lcall hlt js jp xor xor ss cmp sub xchg push xor push arpl loopne stos push jge dec push inc fistl mov cwtl lahf test push adc lea inc sub xchg pop adcl dec sbb mov and in sbb push aaa popa insl xor iret pusha sbb outsb daa or lret push pop push aam dec insb xor jne adc jo add mov scas mov mov push lret (bad) jae pop add jae bound sbb and mov pop xor pop stos outsb push jo jns pop pop mov (bad) cmp mov ja xchg outsl add gs pop and dec insb ss xlat jne xor sbb clc jb jo add addr16 mov je movsw popa js leave mov pop dec inc mov inc jge mov and pop fisubrl std push lret outsb pop or inc or bound imul adc and sub fs xor xor mov sbb inc sbb and add pusha andl mov out pushf jo inc js pop pop inc inc add inc outsb inc gs sub dec pop ret out adc add or ret sub add fildl adc or insb sbb or or fldt jo das das cmp pop pop hlt xor add push or fs arpl xor out sbb add arpl aas popa cmp pop mov addr16 mov imul adc pop pop cs jo pop adc xchg loope sub push popa data16 push adc or jne ljmp sahf mov inc shr xor sub add hlt call daa push mov sub mov lods bound mov push sub mov adc fisubr mov jge xor lcall into clc call in loopne loop in call in (bad) lahf std repz and int in icebp in imul call sti cmc fsubrs (bad) fild out jmp in out and sti repnz and jmp mov insb lea push mov and dec mov dec sbb stos andb dec push shrb and scas jae,pt xor inc adc pop add fcoml jg add inc dec pusha pusha iret add adc adc outsb out sub lcall pusha addr16 xchg mov add adc pop fisubl cmp lcall test pop dec inc jb push dec das add roll psubd daa dec sub loope int cmp jo fs cmp add (bad) fxch les mov insb add adc cs cmp and cmp call insl fwait or inc adc insb gs outsb fsubr in fisttpl cs inc xor inc sahf ss das pop xchg or push orl or lcall jb pop xor daa roll push add sbb es xor add sbb lock ja int dec xchg mov fucomip inc clc xor mov mov or test testb and fsts nop pop enter pop das xchg ret (bad) syscall jg dec xchg jo jno nop pop jb repnz sbb and xchg inc stos and xchg and mov test add pop (bad) fucomi imul xchg inc insl cmpsb leave outsb mov dec push cmpsl sbb lret das jl and xchg and leave flds (bad) mov or mov nop das in mov popa enter pop push dec inc fnop sbb pcmpgtb xchg cmpsl montmul cmpsb xchg mov fs mov insb cmp insb enter adc arpl insb dec bound test fs lret hlt ret outsl or cmp dec rclb scas push add rcrl or (bad) sti inc rclb sbb enter and jg test add in pop cmp xchg xor sbb outsl sahf psrad xor push pop nop jg addl inc xor shll adc in pusha mov mov lahf or and stc cmc or aas aas aam or nop pmullw enter fistp lret jbe lahf js ja xchg jbe insb enter jg pop sbb xchg adc (bad) nop xchg out inc das insb enter pop jmp fs inc dec mov sbb mov ljmp insb dec adc pop sbb xchg out adc dec movlps insb fs (bad) cmc aas adc xchg cs (bad) add ljmp mov sbb pop nop pop dec enter movaps cmp insb daa bswap hlt dec dec inc ss (bad) fbld mov fs sub pop ss mov das sub mov loop and inc outsl das ss xchg insl pop xor dec xor fs xchg xor fistpll sbb (bad) sub mov sbb sub (bad) jg sbb aas fsts outsl push das or nop or and (bad) xor cmc mov xchg dec sub xchg jmp mov sbb or xchg and adc or mov mov or jmp mov sbb gs xor sbb (bad) mov insb fs outsl push aas xchg aaa out in das or insb enter push lahf insb enter pop cs pop pop (bad) icebp xchg add mov dec (bad) lea clc or xchg (bad) fldcw cmpsb xchg or mov jnp sti mov adc imul (bad) shrb adc and mov or lcall das pusha jg and fs xchg lcall xchg lahf pop pop pop add insb enter imul xchg iret jg iret pop fs xor (bad) (bad) cmp aas daa inc sub lret rclb mov outsl flds sbb por nop or loopne mov mov and pop mov lcall and mov iret adc subb ss mov into lock aas and mov push add jp faddl sbb cmpb add das enter decl decb insb enter aas loopne movsl pop xchg add dec cld xor aas push sbb das or (bad) enter (bad) das add insb enter bndldx js xchg sbb sbb mov mov or aas popa pop xchg enter (bad) pop pop pop lea das nop or das add ss ret sbb ss mov xchg inc ss mov and (bad) pop dec mov inc fisttp dec das lods and xor stos ss xor jge ret xor shrd movsb mov sbb jg das and mov scas bsr xchg cmpsl sbb jbe sbb lcall lea and or and insb enter pop pop pop xchg inc rdtsc outsl cmp xchg in pop inc aas insb enter lahf and jp or icebp aas nop or das fsts out pop outsl outsl enter sub outsl fs xchg cmp xchg das leave nop or icebp cmpb leave nop or jl xchg and sbb das jg xchg and or jle sbb test sbb and or jae enter aas loopne jo fs xchg imul fs and and lahf out aas and xchg and sub test iret dec xchg pop and fcmovu popf aas adc insb enter adc push adc dec dec scas das inc ss lds fdivrs (bad) sbb sbb and mov mov es ss mov aas pop dec out pop xor setl cld and (bad) stos negb inc pop cmpsl pop and nop mov aas push imul sub sbb jmp and movlps nop lea inc ss ss negb inc inc or (bad) fs insb enter in aas cmpsb dec xchg or and enter push scas push dec add (bad) scas jg fsts lea das or nop or jle icebp and ss out (bad) ss xor int into cmovae fs in push pop mov pop arpl mov xchg rclb xchg sbb and dec fisttp (bad) outsl xchg lahf xchg nop lea movq nop or fcompl adc dec outsl hlt pop and mov decl lahf xchg and mov das std enter sbb (bad) and outsl bound movsb aas xor mov repnz xor inc rcrb aas seto pop xor ss (bad) pop aas cmp (bad) inc ss stos mov add fs insb scas push xchg push (bad) scas aas inc ss push pop (bad) aas mov das gs mov fs xor or inc ss mov adc mov xchg sbb pop outsl pop xor das mov or (bad) or enter outsl pop adc and fstpt stos push xchg adcb fs sarb pop aas and xor pop pop mov sbb lods lcall mov sbb outsl push aas push add xchg and nop test stos jns sub inc cvtps2pi adc pop mov inc rclb add outsl les mov std adc pop bswap outsb mov jb cmpb emms stc xchg mov cmp jg jg ss movsb cmp shr movhps incl sbbb lret inc repz adc fidiv fs (bad) out dec mov inc leave (bad) jb mov pop aad jbe xor add insl stc inc ss movzwl fs adc add loope loop jb push jne jb mov movsb inc das or test or outsl hlt out test push inc (bad) lcall (bad) dec nop std mov mov nopl addb add out (bad) (bad) cld add add stc push mov xor test cmp sub jmp pop scas or out idiv mov pop xchg dec add scas (bad) lods dec popa push or scas int mov das ss (bad) leave loop add ud2 and rolb add inc inc push mov mov add in pop data16 cld inc add add add dec fstps inc xor fldt imul inc popa popf lret std das add push dec cmp xor inc rcr ret inc push jae mov sub jne or sub mov imul sub shll pushf mov mov and push cmp sub dec gs lahf or lea fcomps addr16 bound mov cmp add add and (bad) add pop sub and pop push or insb mov cli pop inc fdivrl jo xor shll inc xor (bad) xor sub adc clc das in xor (bad) je fmul (bad) mov out mov nop add cltd cmp pop pop call and add add push dec push add adc addl nop add (bad) add xchg sahf mov adc add iret pop fadd imul adc popa dec dec add xor cmp adc adc xchg popf or add ss iret cmp xchg dec sarl arpl sbb cld inc lock push mov in sub add aas xchg (bad) (bad) jg push insb jo inc sub dec arpl pop int3 imul (bad) pushl inc sub dec push inc dec pushw bound outsb jb inc xor imul call popa (bad) cmp xor push inc dec inc jo jno imul ja in call jp (bad) jbe xor xor xor cmp dec dec jmp inc inc dec inc push push push mov bound push pop jnp lcall push arpl inc dec push sarl int int fnstsw fucom in icebp in icebp mov pop imul (bad) pop imul loope mov in icebp inc sbb fidivr and cmp push neg jnp xor cmp dec push inc pop test push outsl sbb (bad) jmp clc jl jmp (bad) jl out ja cltd idivb (bad) push repnz fisub push pusha (bad) incl xor push nop aaa into addr16 out (bad) sbb (bad) jmp stos stos out jbe lcall (bad) popf mov leave inc cli jge xchg cli cli adc adc leave sti lock lods in mov aam sar addr16 mov scas ljmp movsb mul cmp (bad) (bad) (bad) pushl mov loope std sbb xchg xchg scas dec es ss jle aas inc cmc div add mov push movsl movsl hlt shl in stc icebp icebp or (bad) (bad) jmp jno xchg stos fcomp jae xor push sub add xchg mov (bad) (bad) jmp ret ret pop xor sbb aaa xchg xchg mov das lcall and adc sbb lcall int jmp dec daa daa imul jne adc or sbb sub (bad) (bad) fisttpl xor sbb sub sub mov pop out pop mov push cld (bad) (bad) push jbe cmp (bad) (bad) popa jge mov push sub jnp jecxz ds das das jno test or dec shr sub and pusha jecxz cld pop jns jecxz pushl pop in aam push (bad) lret lret inc addr16 dec xchg dec dec fdivrp (bad) (bad) lcall pop pop call mov out out sub stos in sti sti push xchg (bad) jg lcall adc inc iret jmp (bad) (bad) (bad) mov jg mov cmp inc and test jecxz push push repz mov (bad) incl (bad) (bad) aas xchg xchg lods and cmp cmc cmc add mov mov (bad) pushl clc scas fcmovu jne inc arpl adc xor (bad) lcall std repz mov (bad) (bad) (bad) dec int sbb adc adc xor mov xchg xchg mov cs pop cmp (bad) les cmpsl cmpsl repnz jle (bad) jp cmp lods mov sbb sub loopne ljmp xchg shlb sbb dec shll and push loopne (bad) fbld stos or inc lret out sub mov (bad) (bad) fist mov or sbb fneni(8087 loopne xor push je cmp (bad) (bad) call or xchg dec dec fisttpl push or and mov ret mov lods lods out mov bound cmp xchg movsb shl in bnd mov out mov enter sub pop fisubrl mov mov dec dec icebp (bad) (bad) call dec test insb mov push push cli repz hlt pop iret ljmp hlt jp ljmp cld mov adc or outsl mov mov and jb (bad) (bad) (bad) lcall and cmpsb cmpsb icebp jae mov xchg mov lret call fnstsw je ds pop and dec dec frstor mov xchg mov nop jl ds jno mov int3 data16 nop (bad) (bad) (bad) decl fadds add add sbb push adc popa popa mov scas push push stc imul xchg cmp mov jmp clc adc cwtl cwtl mov (bad) (bad) jmp adc xor imul pop mov cmpsl sub push push and (bad) (bad) dec jmp into dec stos push push call sub (bad) jp mov or (bad) lcall or mov xor (bad) lcall (bad) xchg ret sub sub adc mov test push (bad) (bad) (bad) (bad) cld insl mov push cmp cmpsl push jle gs sbb movsb ret cmp pop xchg cmp inc (bad) (bad) (bad) push lods cli pop stos dec jecxz xchg and cli push lods jbe (bad) mov jbe cmc add in cld lds lret icebp (bad) (bad) call es mov dec and ljmp ret das jne (bad) ljmp mov inc xchg mov add pushf xchg mov push (bad) (bad) ljmp mov pop je rorl imul jne mov mov cltd pop ds (bad) (bad) ljmp mov dec mov mov data16 cmp sbb (bad) xchg push xor das std jmp push jg mov ja mov or or xchg jo push (bad) (bad) (bad) std sbb clc mov jae and add jecxz (bad) push push stos sub mov sar ret lds (bad) aaa or and mov (bad) (bad) lcall sbb cmpsl jns xchg repz repnz imul int add bound les decl mov mov xor (bad) (bad) in cmp out stos pop jno push mov and cmp dec out inc xchg (bad) (bad) (bad) call jno pop add pusha push adc and mov inc int3 fstps jmp (bad) (bad) call mov jns out (bad) inc psubsw test leave inc (bad) clc (bad) decl addb push adc insb pop jb std push call cmp scas aad ss fstps pop cmpsb (bad) (bad) (bad) jmp fwait pop push shll cmp addr16 push out mov xchg rcrb fwait xchg sahf add dec popa fsubl (bad) (bad) (bad) jmp sbb sbb loop mov in and inc adc pop sbb repnz (bad) (bad) (bad) ljmp adc test test cltd fnstsw testl cmc mov inc cmp pop sti jle mov jbe and fdivl icebp arpl xor (bad) (bad) (bad) fmul inc arpl inc test adc test jge mov xor (bad) sub (bad) (bad) ljmp dec fdivl push in ja jecxz sub mov cli inc jmp jmp mov jge fsubs xor fnstcw rol mov mov (bad) cwtl aam cmpsb cmc or fidivl mov in js or (bad) (bad) lcall (bad) lea ret mov pop (bad) ret scas cmc lahf pop cmpb aad (bad) (bad) (bad) ljmp enter adc jge call cmp or sbb in lcall dec lcall out and (bad) lcall out out (bad) into ljmp (bad) xor xor (bad) (bad) inc movsl xchg xor dec mov cmpsb loopne (bad) mov cmpsl fcoms inc in (bad) (bad) (bad) (bad) (bad) jg push push pop xchg imulb jbe (bad) lea mov int3 stos dec push in add sahf (bad) mov dec push sbb sub mov popf pop ljmp xchg ljmp das or pop xchg fcmovnbe push jl xor inc adc aaa clc (bad) jmp adc jmp cmp into test leave xor inc adc pushf rcr pop push bnd sbb inc (bad) aaa cmp (bad) mov std stos pop fistpll fildl mov ljmp sub mov ret jb loop or dec mov or pop cli (bad) incl jno or (bad) mov pushf fs rcll xor sar pop cli ret lret jnp push lds add (bad) xlat stos jbe (bad) (bad) (bad) incl inc lock aam scas pushf movsb jb mov xchg es (bad) int3 xor in jno xor inc and sbb and daa mov sub (bad) (bad) lcall sbb mov sub das test add and mov push mov iret (bad) icebp in ljmp sub inc dec xor push cmp test mov (bad) (bad) (bad) mov adc repz or in pop xchg inc pop les sbb orl cmp mov mov push xor or and ret bound (bad) (bad) jns enter aad test gs or cmpsb mov call mov decl dec add push popa xor (bad) loope cwtl adc mov incl fisttp inc push mov mov aad movsl cmp jmp sti jl cmp xor cmp fsubrp lret push jnp (bad) (bad) (bad) pushl cmpsb ret out dec xchg or ret dec or mov mov pop mov and das cld jmp cwtl push aam pop int3 pop gs insb pop push std in mov push cmpsl (bad) ljmp stos stos add add shrb xor lar (bad) call mov xchg adc addr16 xchg repnz into lock xchg lods je out (bad) (bad) (bad) pushl call inc icebp sbb sub mov bound stos sbb dec (bad) rorb (bad) (bad) (bad) jns lcall hlt pop (bad) xor orb incl jb mov jp xchg leave pushf out mov pop dec scas sub mov jmp cmp push cltd popa pop sub mov imul call or jno add add (bad) dec (bad) sbb out fild fs push xor sub sbb jge sbb push in jb leave or incl js das mov lock inc xor (bad) fstpt (bad) (bad) (bad) call pop (bad) icebp inc inc cmpl (bad) xor and xchg adc dec ret mov (bad) (bad) (bad) cmp push cli test adc dec aam in jae push scas pop test cld and je mov out call ljmp pop lret pop mov test imulb (bad) (bad) fistp in fadds sub int3 mov mov cmp insb (bad) (bad) (bad) mov mov nop popa mov iret int aas pop rcll test mov sahf jg (bad) lcall repnz and mov movsl addr16 in ficom add sbb xchg sub test daa jne mov popl push aaa pop adc xorl push mov jne and xor xchg test mov rcll pop adc shrl sbb push mov inc push lret leave pop bound sub dec xchg lock mov pop xchg sub into test push mov mov inc or fsubrs test and push test mov shrl or mov mov push movsb sub into lods sbb dec adc shrl mov sahf jo jl inc mov in adc xor cmp push mov pusha xchg push mov dec mov pop fcmovb sub inc test pop mov aam adc inc test jecxz (bad) push test mov sbb or push stos push mov mov sub pop xor pop jae add add xchg and xchg add add pop add add aas pop push adc add (bad) mov arpl fstl adc gs stos xchg push push push push leave test stos stos fs sbb inc mov pop add and out add and arpl inc and inc cmova sub insb or icebp adc or push lods outsl je add push push adc sbb adc fsubrs lock outsl dec aad inc jns gs (bad) mov jb cmovl fs imul add insb and jns dec je xchg push xchg rorb cmp xchg mov out cmp insl js push fldl xlat add cltd or js fldcw outsb push jbe push dec add push pop add dec xor out add or xor add fistpll or outsb insl popa jo jbe adcb sbb xchg jne push sub jo sar (bad) adc jp or inc insb outsl jae insb loope (bad) dec gs pop push inc mov divb adc jbe mov mov sub gs xor lock push addr16 or outsl jns push add mov dec insb outsb arpl psrlq jne cmpsl adc cmp pop enter xchg inc orb ds loopne popa cmp or ja add xchg mov into sbb sub outsl jne clc imul add add sbb jle xor mov outsl fs dec and adc push imul push inc mov outsb mov inc dec lds imull pusha ret push sbb push mov imulb push sub adc insl xor jne imul pop out insl gs insl daa mov push popa mov or sub dec bound ljmp push adc outsb (bad) (bad) sbb and cmp pop xchg jecxz pop (bad) inc fwait xor mov and fidivl add or sub daa or and lods (bad) pushf or jbe jecxz jl addr16 test stc adc push jns mov imul arpl xchg rcrb ret ljmp lods adc jecxz (bad) inc mov loopne cmp add fwait xor inc inc repnz inc hlt adc aam adc add xor mov inc dec neg inc gs or mov mov adc push (bad) pop test popa (bad) xlat outsb je packuswb push add mov push push push or unpckhps mov push and mov pop ja jbe js das jae inc das ret sub das sbb cwtl movsl insb inc push popa mov insb mov mov cwtl int3 inc arpl imul push cmp cltd bound arpl fsubs adc fmull jne cmp adc xchg test outsb push lret outsl insl je add sbb add push push add push add in push and ljmp or mov sbb xor (bad) outsb pop loop or test sub popa les stos sbb (bad) lcall and (bad) mov (bad) out adc adc popf mov and and and loopne jo cmpsl dec hlt push dec adc sub mov dec lds mov push pop adc test in ss (bad) ret je dec dec mov shrl adc mov fisub pop add add add or xchg sbb and sbb or add jg gs outsl js sub test sub inc inc pop mov mov ja or lock xor mov outsb fs dec or sbb iret inc jne sub fisttp push dec punpcklwd rcr sbb bound imul les jae inc lret jbe cmp xor add dec sub sub fsubrl inc jp loop add iret add ljmp call cmp pop add daa jno add data16 push inc adc pop mov add insl das add fmull fildl push sbb pop add sbb mov add dec ss mov push dec sti push add sbb pop or sarl pop and daa push cmpl add add add add add and inc add call int jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call popa lea push cmp jne sub jmp 