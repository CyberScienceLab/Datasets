addr32 jbe in sub (bad) jb popfq cmp xchg or rcll xchg movabs or cmpl data16 mov in nop (bad) enterq movsl (bad) repnz rep (bad) rex.R add cmpsb lods (bad) mov movabs cmp cmp add (bad) pop and rex.W (bad) retq sbb (bad) or (bad) or (bad) adc in out (bad) in movabs cmp data16 lahf movsb addr32 idivb out xchg lret shll in jrcxz outsb (bad) xor rex.B cwtl (bad) in cmpsb (bad) mov cmp mov jbe je sub (bad) gs (bad) sub sub std fstpl movabs adcl push fdiv rex.RB (bad) jmpq (bad) mov (bad) xchg lret pushfq add push jb movslq jae xor js add es jmpq jmpq add rex.XB (bad) je push gs outsl je push pushq add lret fldl (bad) popfw jmpq sub test bt jmpq xchg jmpq lea jmpq jae bts adc xchg mov sar bsf mov and or btr shld mov bt jmpq jne setg mov jg not pushfw (bad) repnz stc test add clc test bt test neg jmpq je clc stc test test add cmc cmp jmpq stc test jmpq setae setbe pushfw mov add mov cmc add cmc bt jmpq jmpq movb test stc test jl je btc shrd cmp push not mov neg btr sbb sub not lea jmpq add rex.WRXB outsb rex.WB jo je gs je jo je clc stc sub stc test cmp jmpq jne mov or pop xor cmp scas cmpsl adc add lahf mov and mov mov mov mov adc cltd lods movabs pop rex.RX xchg adc pushq adc xchg mov and gs pushfq xchg xlat js in jp (bad) (bad) (bad) (bad) (bad) xchg xchg loope (bad) (bad) (bad) (bad) pushq adc shll enterq mov icebp (bad) sti pushq ss pop scas jg (bad) rex.XB jg (bad) and (bad) stos (bad) pop nop stc mov pop cltd and adc cmp fwait xchg pushq xor (bad) and fildll xchg rex.WRX jle and (bad) (bad) iret pop mov push xlat movabs iret sub retq movsb pop retq fwait test out jmpq fnstcw adc in sbb or mov jp sbb rex.WRXB sub jg pop sbb fadds retq jrcxz movabs or fnstsw jrcxz (bad) adc and sub (bad) test cmc movsb xlat or out (bad) pop enterq sahf mov shrb nopl in jle mov (bad) xlat in and add test stc cmc bt add jmpq add rex.RXB gs outsl fs gs outsb fs gs add add je outsb pushq gs gs imul gs clc cmp or jmpq add push gs imul gs jne gs xor fs insb add test sub bsf or bswap mov rol btr sub bsf shld inc shld mov cmp cmp sub bt cmc pushq stc jmpq cmc test cmpb jae jne btc sub and clc sub rol test dec movzbw mov bt add jmpq jmpq add rex.R gs gs rex.XB je movslq push movslq outsb add test in add mov mov bt add bt bt cmp mov jmpq cmp jmpq callq bsr add ror bsr cmc btc mov cmp test clc clc cmpb jmpq jmpq cmp add test mov cmc cmp test jmpq add rex.WRX gs jae jb gs outsb outsw add lea (bad) cmpsb add add lea lea movzwl movzbw movsbw mov lea bswap mov lea mov jmpq add rex.RXB gs je jb jne rex.WB outsw add xchg or cmc imul bt cmc jmpq jmpq add rex.WRB jo imul gs add nop test add jbe jmpq test cmp sub cmc cmc stc jmpq test bt clc xor stc test clc add jmpq je xchg not bswap xchg mov sets lea movzbw mov jmpq jne movzbq jmpq add rex.XB outsl jae rex.R gs je jo jmpq adc retq (bad) or repnz mov cwtl lods (bad) sub sub pushfq test lods ss cmp lahf in xchg scas pushfq mov (bad) add int3 scas in lahf mov divl scas sbb and rex.WR in (bad) rex.R (bad) push sub scas and sub xor rex.WRXB out stos or xchg fwait mov iret test int3 lahf in fdivl lods rex.R rex.WR xchg jrcxz scas lods test or lods sbb in test lea lods pushfq and js (bad) stos (bad) ja (bad) rclb mov jno outsb ficompl lods push fxtract out push in rex.R add adc andl movabs in mov mov or lods int rex.WRX popfq pop imull lock (bad) ror lods rclb jle fldl lods mov sub mov fisub sub mov lods jle in jrcxz lahf push mov pop mov subl (bad) cld (bad) lods or pushq addr32 rep mov or fsubl push sbb or sbb sub (bad) add lods or push imul test pop xor sub jmp lods (bad) or xor mov jle or lods (bad) lods int3 sahf in fdivl mov pop scas pop rex.WRXB cmp rolb lahf mov (bad) je shrb sub (bad) cmp or in sbb xor sub iret mov imul (bad) lahf mov mov lods ffreep sti sahf (bad) (bad) jrcxz mov movsb mov scas (bad) test cmpsl adc cld iret add sub push mov pop or sub lret int3 xlat adcb scas add cld addr32 pop mov rex.WRXB xor jmp fild sbb loope enterq stos xchg hlt jnp (bad) xor insb add in cmp mov jl (bad) lods int3 leaveq adc test lods sbb popfq sub cmp rex.WXB cld jne mov adc sbb mov mov mov lea jl xor insb pop fldt and ljmp test mov (bad) pop pushfq insb int3 sub rex.X (bad) out sbbb lods pop mov cwtl mov (bad) std lret lods out pop cli es cmp or stos or pushfq lret lods pop (bad) rex.WR cmp sbb insl sub lods mov imul pop lods hlt rex.RXB je rex.WXB test lods pop lods xor lods sub sub and movabs fisubrl xor test and movsb (bad) insb hlt mov in lret movabs rex.B (bad) cld cmp sysenter lahf out pushfq push (bad) lods (bad) retq pushq xchg int3 iret subl outsl and fsubr fs scas (bad) jrcxz rex.WX lods fwait (bad) lret and insb pop adc rex.WRX fwait lods insb jbe add (bad) mov mov mov or lods push mov lahf pushfq ds imul sub sbb cwtl add pop or rex.WRX (bad) rex.XB out rcrl lods (bad) cmp movabs js cmc scas or mov sahf (bad) test int3 jle adc mov (bad) mov lea xor lods test test sub int3 movabs (bad) addr32 add (bad) jmp or shll insb test popfq rex.WB rcrb (bad) insb rex.WRB push je lods scas xchg sbb lods mov lods cmp rex.WR retq scas xor andl pushfq rcll in xchg sub xchg loop lret xchg (bad) std rex.R pushfq decb scas cmpsb movabs scas insb test rcll and (bad) adc fist scas push (bad) fadds xchg adc loopne sub lods subl movabs addr32 (bad) cmp imul jrcxz cmp in lods int3 mov lods (bad) pop (bad) (bad) push je or and test leaveq rex.WRX loopne notl lods (bad) mov imul lods xlat mov push imul rex.RX lods lods addr32 pushq jnp add mov xor int3 (bad) (bad) pushq mov (bad) mov in imulb iret out xchg and lods fisttp jrcxz nop mov movabs xor in fdivl mov rex.X rex.WRXB push lods je sub lods movabs sub add test scas push shrb (bad) lods and test ror mov xchg rex.W hlt lahf ja clc movabs data16 sbb pop test pushq sub rcrl adc mov cmp movabs (bad) je mov cmp sti fdivrs jno lods lahf out mov jl lods (bad) push mov mov enterq (bad) clc mov sub movabs int3 insb lods (bad) xor (bad) xchg sub (bad) lods mov negl movabs jae (bad) outsl addr32 rex.B or or xchg scas jrcxz xor adc and movabs mov rex and shrl pop (bad) scas xorb (bad) push mov stos mov retq insb and lahf mov movabs loopne rex.R push lods punpcklbw push and jne (bad) xor lods lods rex.WR mov lods iret insl jbe and (bad) ror xor jno jns jrcxz outsl sbb callq or sbb sub (bad) sbb adc sbb fs lods rex.XB rex.R int cmp sbb scas hlt pop cmp and sahf bndldx lods je ror adc lods adcl mov and mov or pushq (bad) stos cwtl (bad) pushfq ljmp push adc adc andl pop (bad) or mov out out cmp add incl mov movabs outsb imul (bad) lahf rex.WX gs callq sub stc xchg retq je or pop sub lods and mov movd mov lods stos pushq (bad) adc cmc add lods setbe movabs sti rex.R retq lods and (bad) lret xor in add insb out fiaddl mov (bad) cmpsb addr32 xor xrelease rolb and add adc addl jg lods xchg cmpsl ljmp in (bad) rex.WB lods movabs lods pop lods lock xor or rorl jns xor sbb vandps xchg mov lods rcr lret movsb cld test lret (bad) lods cs (bad) mov cmc enterq or jae (bad) sbb xor repz lods jne jp xor sbb push nop (bad) imul xor (bad) mov je add (bad) or mov xlat (bad) nop mov lods sub jle cld fsubrs push add repz (bad) cmp lods movabs fwait jp subl mov sub jmp (bad) (bad) (bad) cmp fnop sbb rolb rex.RXB pop add int3 (bad) xchg xor pushfq (bad) mov add add rcl in lods lock (bad) lods in adc xor stos (bad) xchg (bad) retq pop out iret (bad) lods in jg test (bad) scas and fcomps mov (bad) (bad) stos (bad) clc (bad) rex.WR cli push adc scas pop retq cwtl mov lock push (bad) (bad) (bad) mov jmp pushfq rex.WR adc iret jmpq mov fisubr (bad) push rex.RXB rex.WRB (bad) jl (bad) (bad) lods xor jg (bad) adc fisubl in xchg lods add loope jrcxz insb pushq movabs sub lods mov loope push rex.WRX hlt (bad) (bad) rex.WRXB jbe xchg test out pop std (bad) rex.WR iret movslq xchg sub in sub and sub (bad) in mov (bad) (bad) rex.WR rex.RB cmp xchg (bad) add adc ja add xor cmpsl or rex lods rex.WRXB mov cld and sbb mov xchg scas (bad) stos or int lods rex.X popfq sti (bad) (bad) (bad) stos lods hlt push out fdivrl lahf add in leaveq lods and rex.RX lods in fs (bad) rex.B xor int3 test movslq lods xchg (bad) mov mov shrd sub lods mov and rex.R xchg stos lods movswl movabs stc sti cwtl (bad) fadd (bad) cmp out rex.WRXB sbb or ja jne insl (bad) gs imul (bad) jo mov scas nop jrcxz and cmp test lods pop scas mov cmpsl adcb cmp movsl mov lods stos sub mov js lods movabs mov (bad) rcll xchg imul sub movsb fs (bad) scas in loopne sub xchg jg retq cld (bad) lret cmp xchg sub lods sub je rex.WX (bad) push mov and jmp js cmc (bad) icebp and push (bad) mov jg lods fstl adc mov mov movq mov mov push sub mov add mov rex.W insb adcb lods neg (bad) js sbb add scas cli sbb rex.XB repz in mov mov (bad) lods lea subb and insb lods jg stos and rex rex.WR pop fwait sub in scas movabs rex.W lods mov rex repnz or (bad) lods xchg leaveq int3 push retq mov out push scas rex.RXB xlat adc movabs jrcxz lods fistpll mov (bad) (bad) cs (bad) iret outsl mov int or (bad) lods jge fdivs add jmpq (bad) (bad) out mov movsb rcr add lods xchg pop or faddl or (bad) sbb adc lods iret in and lods jbe mov in add (bad) fdivl sbb (bad) jle lods (bad) sub in loop or sbb scas xchg xchg xlat or mov jmp mov je addr32 fistpll (bad) xchg outsl imull jge test adc (bad) repnz xchg loop insb test sub rex.WRB repz (bad) imul rex lods xchg push mov xchg jae lods (bad) add callq (bad) (bad) lods in sub insl sbb xchg jns push cmc mov adc scas jne insl mov lods lret or rex.WRXB fsubrl cld sub sub pushq or pop cld mov mov cwtl ja je jmpq loope or (bad) (bad) pop insb push int (bad) add iret xchg fmulp push jne lods cwtl xchg cli rex.WRB jle lods in mov scas push repz scas pop and in xor lods mov and cltd (bad) push test or addr32 jb (bad) rex push rex.WRB (bad) cli mov pushq (bad) (bad) pop leaveq sub rclb outsl scas rex.WXB rex.XB mov mov (bad) lods xor cli push scas repnz jno cld mov stc mov sbb rex.RB adc (bad) (bad) pushq pop (bad) rol jp mov pushq lods pop mov push sbb or add lods jl jae movabs rex.R lret adc movsl movabs or mov cmp (bad) int3 mov mov mov fwait add cmp sti rex.WX sti or insb (bad) xchg cmp or mov mov int3 mov scas xor sahf (bad) or in jmp pushfq test mov lret cs mov rex.RXB mull mov (bad) scas mov pop and andps pop mov sbb mov push movslq enterq pop mov movabs cmp fs (bad) lods rex.RXB enterq rex.WR and lret imul jg adc lods neg (bad) es movslq test sahf sub sub xor incl addr32 rex.RXB (bad) mov lods and mov push lahf lods xchg (bad) mov jne or jb lods movabs loopne adc sbb add (bad) lods (bad) (bad) and push sub popfq imul int3 lods mov mov (bad) rex.R scas addr32 xor lods lock repnz jae data16 insl (bad) jmpq (bad) lods push xchg (bad) or jl sbb adc je mov shrd adc cmp (bad) es mov xchg add cmc xor addr32 (bad) imul sbb cmp std rex.WX xlat mov (bad) movabs ljmp cmp addr32 jbe lods test pop xor rex.WRB cmp jge lods xchg js or lods stos icebp rex.R push int fsubrs hlt pop xor cmp push sub stos xchg pushq xchg clc movslq jge cs sub pushfq imul out outsb add sub clc push (bad) cmp mov cmpsl addr32 movslq and mov mov outsb (bad) xlat stos ja out push xor xor cld lods adc js rex.WRXB mov scas xor or enterq lods and (bad) (bad) xchg movsl scas jrcxz xlat xor cmc in movabs and (bad) mov scas (bad) jge xchg lods adc rex (bad) test iret sub imull mov mov lods lods fcoms or xchg mov xor mov xchg stos pop pop hlt sbb lods std pushq rex.WXB push jp mov xchg cld out and insb repnz jg imul outsb shr movsl adc xor (bad) std mov lods mov rex.XB rex.RB lods mov cmc movabs mov adc mov icebp xchg lea mov jl rex.WX in adc lods test loop push sbb js cld pushq (bad) rex.WRB sub iret insl lret negl int3 (bad) (bad) jp fwait mov test fwait stos stos add pop push push lods push xchg or (bad) sub in in adc (bad) xchg mov xor out repz hlt sub lret stos je pushfq fwait jo and adc data16 insb lods pop mov xchg (bad) rex.WRXB lods pop rex.WXB sarb movabs or ds pop lods popfq or fisttpll int3 (bad) lods (bad) clc fdivrl fild imulb je mov rex.WR (bad) mov mov xchg rex.WR (bad) jmpq ja loopne fcoms rex.WXB mov or adc hlt rolb fwait jae (bad) (bad) (bad) repz hlt (bad) fdivl decl loop cmp cld xchg adc js jae mov mov test (bad) test add stos jnp ja cmp (bad) pushfq repz cld or repnz push fimul rcl cmp lods leaveq sbb and decl push sub cmp rex.RXB or sbb xchg sahf jle pop std lods lods (bad) mov (bad) nop lods or push repz retq lret jnp lods rex.WRXB xchg stc (bad) mov push (bad) rex.WXB jrcxz or loop stc or and sbb add adc (bad) (bad) (bad) lods push sub (bad) mov or popfq and sub pop lea sub popfq push int mov pop pushq popfq imull in out movsb mov mov mov jne jns jae rex.RXB pop rex.RX lods cmp ds (bad) adcl mov sbb and enterq (bad) add repnz rex.WXB lods rex.X xor sub mov subl in movsl rex.WB cmp scas push out cli lock add fsubrl or mov clc (bad) add insb rex.WRX fisubr hlt sbb cmc je pop and jp xchg insb sbb movabs (bad) std sahf adc rol hlt mov mov popfq callq sub xchg (bad) mov or pushfq (bad) (bad) jrcxz cwtl movsl xchg cmpsl test jl js je xchg fiadd add cld cmpb cmp rex.RB mov xor je lods rex.X mov sub repnz (bad) add imul stc imul (bad) imull sbb insb rex.WR cmp xor sbb insl (bad) in lods xchg lods scas scas adc sub pop mov jns mov lcall cmp rcrb (bad) fist lods or lods (bad) or xchg xor sbb mov scas xor test int3 test mov data16 lods adc xlat retq pop sar jno test jnp mov adc ja jmpq es pushfq sbb iret (bad) cmp clc mov cwtl lea add xor scas lods jg pushfq in enterq imul es (bad) rex.WR cmp jg (bad) in pushfq (bad) or xchg cld rex.WR callq cmc fldl callq mov mov lods popfq cmpl rex.WRB movsb fldt popfq jae sub movsb push pushq popfq addr32 sub pushq popfq test lea movsb and (bad) lret jrcxz mov test rex and imul (bad) mov lods mov clc movslq lods (bad) or cmc sub sbb cltd add jno jne (bad) lods push mov subl lods ja rex.WRX xchg (bad) shrl clc insb mov mov lods jns sbb (bad) test jnp xchg imull lods js jbe pushq es lods xor mov (bad) lods rex.WXB cmp xor jl in lods mov jmpq jmp lods loopne fucomp (bad) adc movsl add cmp xor (bad) int3 or (bad) or (bad) fs lods lods test add fsubs lods jrcxz cmc (bad) stc out sti mov adc pop add shrb cmp cmp repz (bad) (bad) mov sarl insb test fwait cmp in jbe (bad) lea movsb iret or mov (bad) (bad) out (bad) ja rex.W es (bad) or fiaddl in mov add lods (bad) (bad) pop retq xchg xchg fisubr mov mov xchg (bad) (bad) lods pushq add mov jl imul mov lods jne pushq movabs pop lods mov or iret movsb in (bad) test test (bad) movabs pop push pushfq stc (bad) or lods adc or and sbb lods xor jl test add icebp (bad) lods mov enterq faddp rex.WR stos xchg mov cmpsb sbb pop mov test pushq mov hlt iret (bad) in or cld rex.WR in sbb cld mov mov data16 cs movsb (bad) movabs scas (bad) xchg rex.X in pushfq cmc mov cmp mov push cmp mov and gs ds es lock (bad) add (bad) xor sarb jle test jl rex.R lods cmpsl (bad) pushq faddl lea movslq (bad) mov nop test sub cmp add insb lods rex.XB jl xchg mov subb inc subb mov lods (bad) (bad) xor jl pop adc lods int3 adc mov (bad) lods xorb (bad) scas (bad) (bad) pushfq jmpq mov or cld xchg add sbb cltd push mov test mov int3 movabs lods xchg fcoml cmp rex.R out cld test xchg fdivrl mov leaveq hlt (bad) (bad) mov (bad) rex.WRB (bad) cmp jl insb lods ficoml pushfq scas add mov mov sbb retq shlb sub cmp (bad) push sti rex.W (bad) pushfq movabs (bad) adc outsb (bad) jns int3 xchg pop fmull mov movsb movabs mov add cld push (bad) insb movabs fs add (bad) je insb cmp lods (bad) push mov ss adc or and hlt lods jmpq rex.WX (bad) in int3 (bad) (bad) or outsb movsb addr32 orl (bad) or or cld jns jp adc cld pop add sub sahf push (bad) rex.WR fs adc lods test mov cld lods mov in std repz in test xchg xor cwtl leaveq std (bad) lods add add scas jmpq xchg insb js movsb lods sbb add out or push in rex.WR mov lods test fwait xor rex.R cmp movabs (bad) rex.WRXB xchg or xchg jl mov (bad) lods lods js mov pop fmull rex.WR xchg mov lods jl je pop fisubl repz sbb sub xchg jne mov lods outsb adc (bad) jne lods movabs sub rex.X sbb fld lret mov popfq pushfq jbe lods (bad) sub lods rex.B sbb fidiv pop sbb xchg addr32 push jg rex.WR cli mov mov enterq lods frstor in adc int3 lods in in xor subb (bad) pop movb es sub (bad) lret test andl xchg lods pmuludq sbb xchg mov xchg (bad) push or (bad) (bad) (bad) jmpq jg lods xchg rex.WXB cmp lods xchg imul push (bad) mov movabs insb xchg sbb push jns roll add sub sar lods in rex.RB rex.WRB mov lods mov scas fst xor lods (bad) insl xor adcl add or in lods xor push scas rex.WB xchg cmp cltd (bad) jle shrl pop in je repnz sub rex.W push cmp cmp ss cmp lock movabs sbb out lods (bad) repnz (bad) cltd cmp nopl int3 ficomp cmp (bad) mov lods add or (bad) (bad) out loopne or lahf adc mov jb cwtl (bad) mov jo mov imul loope lods fnsave mov jp movabs (bad) sbb add add xchg (bad) mov lods xchg pop test sarl xchg xor retq out adc add cmp xor imulb test (bad) lods test mov (bad) pop lods (bad) add clc mov scas xlat sbb test iret jo addl pop repz lods (bad) jp insl (bad) js pushfq pop test lods fsubrl repnz lods (bad) leaveq sbb fwait cmp (bad) lods in fiaddl jle or xchg out adc mov paddsb lods ds mov add jnp push push lock movsb repnz (bad) jo insl adc lods jmpq cwtl enterq lods pop ffreep rex rex.WXB jnp mov sub mov ss mov clc int3 scas rex.RB rex.X xchg lods sbb lahf push repnz rex.RX lock (bad) rex.B mov jbe and fdecstp rex.RXB mov mov add adc sbb xor lods rex.WRB pop movsb (bad) rex.W add in pushq cmp (bad) (bad) movabs fbstp sub xorl or int jno push cli push lods sbbb mov bswap (bad) push ja rex.R adc push mov mov (bad) sbb or sbb movabs lods cmp fsubrl (bad) jbe lods (bad) rex.WX sub stos xor (bad) sahf rorb jmpq cmpsl scas pushfq mov stos (bad) (bad) hlt adc fisubr (bad) cmp rex rex.WRX sub sub xlat xchg sbb stos jl stos (bad) jae sub add mov movabs pop scas push rex.WXB sub fidiv lods add (bad) movslq jl (bad) outsl rex.WX add fidivrl insb punpckhbw lods scas and in (bad) repnz adc add jne pop or xchg jge xchg (bad) and ja (bad) cmp jbe (bad) and sub rorl mov movabs cli mov rex.WRB movabs pushfq int (bad) lods stc lret hlt fs pushq add or rex.R in lods rex.WRXB jle cmp insb push adc rex.WRB mov rex.RX xchg mov cmpsl cmp (bad) mov lods xchg movabs (bad) mov pop pop sbb lods jrcxz and movabs add fwait and cvtps2pi popfq out lods scas cmp out clc (bad) mov lods jp adc lods enterq push (bad) jno scas cwtl movabs mov lock mov repnz lods rex.WRX and fisubr popfq add lods negb outsl out sub rex.R mov xor (bad) cs imul pop retq icebp stos rex.X lods cmc repnz sub shrl and movabs add rex.WRX mov imul rcl lret lods rex xchg (bad) xor callq or movslq lods rex.WXB (bad) test sahf movabs sbb add sarl pop xor (bad) cmp lods fsubl and (bad) sbb jp (bad) xchg rex.XB push scas lods and cmp push sub sbb js int3 test sbb lods movabs mov mov (bad) cwtl lods add pushq lods lea (bad) ja pop push lods jo shl lret rex.WX in cmp movabs pushq mov pop xor fdivrs (bad) test rex.R adc (bad) (bad) pop data16 ror stos testl cltd iret retq cmpsl cmp mov (bad) sub int3 (bad) adc jmp sbb cmp sub popfq push rorb lods rex.RB lods push xor roll decl fcmovb and outsb stos test pushq leaveq mov lods and shr scas sub callq (bad) fldcw out rex.WR pop rex.WX lods adc cmc movabs lods jno out (bad) jg sub shrb sub (bad) shr js and (bad) cwtl cltd lods movabs xor (bad) fisttp repnz adc movslq movabs sarl (bad) lock xor adc scas fs cmc movslq mov je cli (bad) mov movabs or fisttpl sub mov (bad) rex.W mov stos pop xchg in (bad) int3 (bad) cmp (bad) (bad) jae jnp subl je clc jge lods sahf sbb mov mov movabs retq push in rex.WR (bad) mov movsb mov pushfq cmpsl je insb roll lods (bad) xor fcomps sbb scas adc (bad) loop mov sbb rex.RB fdivrs mov pushfq cmp movabs sub insl rex.RX jl pop sbb cmpsb sub (bad) and sti and push sbb cmp mov adcl movslq stos movl mov or fs mov jno mov sarb lods add lahf test pushfq mov lods adc test adc es or sub adc (bad) leaveq cmp mov rolb clc adc pushq push fnstsw lret mov pop rex.WRX shrl adc rex.RXB popfq sti lods pop jb out (bad) mov xchg jmp std cmp out cwtl in jmpq stos repz lahf rex.WXB lea lods mov push cmp rorl shlb lods pushq (bad) jg outsl mov mov movsb sahf rex.RX jle in retq lods mov cmp test or lods jle rex.WX sbb mov xor mov fimull rex.WR rex.RXB or jne lods and nop jp (bad) (bad) movabs sub roll sub lods lahf in mov xlat lods cwtl mov rclb movabs in xchg mov xchg mov xor in rol lods sub jl data16 jge xor (bad) rex.WR (bad) pop idivl nop lahf es callq mov pop test movabs jnp mov rolb retq mov pop movabs rex.RX mov pushfq (bad) adc pop (bad) mov mov (bad) movabs xor scas sbb mov lods add sub and fcoml lods loope mov (bad) jo movabs (bad) out or rex.R mov cmpsl push lods rex.WX xchg lods (bad) in sbb fisttp cmp clc scas adc sbb jns mov pop mov jge jne mov pop mov rex.WRX leaveq fsubr push pop jmpq mov jne insb pushq jb test repz rex.WX test imul movsl cmp lods (bad) mov add and fmull adc sub insb rex.WRB stos pop and xor xchg stos scas mov rorl leaveq mov sbb sbb mov mov loop loopne rex.WRX pushfq ja shrb jp (bad) mov xor and (bad) (bad) add in add lods sti outsb fsubp jmp mov rcl pop rex.X sbb xchg cmc jp lods (bad) out fstpl push rex.WXB fstpt adc cwtl shll push je (bad) fwait (bad) xchg gs mov push cmpsl repz (bad) (bad) adc sub adc std scas pop add lods out add enterq or lods rex.X rex add mov (bad) lret sahf leaveq (bad) rex.WR mov sub or jg fwait jb movabs pop cmp repnz es pop jge xorb (bad) test sar (bad) (bad) push xchg lods rex.WRB (bad) fisubr adc fsubrs cli pushq cmp test movabs lods hlt (bad) cltd sbb out enterq jp rorb (bad) lods (bad) int (bad) cwtl rex.WX rep (bad) rex.WRXB add jns sbb cltd push rex.WX rex.WXB movabs gs mov cmp rex.WRXB cmp push sarb cmp (bad) lods sub xor (bad) loop add rex.X push jo outsb (bad) pop int3 lret enterq mov movabs push outsl cmp lods push xchg loope adc (bad) lods movabs mov cmp rex.R data16 mov pushq jno imul (bad) jp push mov sahf movabs and jl lods push pop xor hlt addr32 lods sti pop lret xchg test jo stos lods ja (bad) movabs (bad) sbb mov stos mov mov dec hlt in sub add stos jl pop mov add (bad) (bad) mov js rex.WX scas (bad) testb add (bad) in outsl lods lods fildll xchg callq cwtl xor push ror and scas or jno sarb sub (bad) int3 sbb out movabs clc pushq and loop rex.WB rex.RX retq (bad) (bad) adc rex.RXB sub and jp rex.WRXB jl jns mov adc and mov rex.WRX (bad) outsb mov mov scas push je jo fcompl xchg data16 rsm jnp mov (bad) test (bad) lods cmp nop sbb mov rex.WB and int mov xchg jge add rex.WXB push stc outsl test pushq callq adc lods mov push mov or cld test stos cltd (bad) adcb cmp scas jle test sbb xor push lock (bad) jp mov lods xchg movabs jns movabs xchg (bad) ficoml push jmp push pop xchg xor push imul jnp xchg sar lret imul rex.RXB ja and push xor mul int3 jl int jb popq pushq mov adc (bad) retq in in icebp (bad) (bad) or lahf sbb rex.WRXB lods test (bad) out fnsave loopne movabs rcll pop adc shrl jns xchg mov jne xchg ja pushq hlt movsl lods rex.R lods rex.XB sbb in or add (bad) (bad) hlt sahf out lods jmpq (bad) xchg (bad) rorb lods or push pop sbb add mov scas ja scas lea hlt scas pushq nop lret fcompl scas cmpsb jl xchg sahf clc in stos jbe sub xchg add lods jmp (bad) sub xor or bnd (bad) sahf fistp rex.W sub lods sub rex.X js (bad) out or rex.RXB (bad) out jmpq (bad) loop rex rex.W rex.WR push lods fstps loop icebp or lods std mov ja scas or add mov jle lods addr32 jg rex.XB cmp pop xor movabs (bad) rex.WRX cmp loopne test (bad) mov rex.RXB mov jb (bad) cmovs (bad) and rex.RXB pop mov cmpsb lods sub outsb movabs adc stos rex.WR (bad) and scas cmc and (bad) sub loope jg mov add mov movabs scas or (bad) or (bad) subb mov adc adc out in test jne lods jl hlt (bad) (bad) (bad) imul xor xchg mov mov movslq xor outsl psubq push jle lods xor movsb insl out mov lods clc xlat movabs cmp movabs xor lods jb clc movabs (bad) fptan (bad) (bad) hlt push movb adc movsb lods mov jg (bad) xor xlat lods cmp jle movabs insb shrb xor (bad) push outsb xchg jne scas insl int3 out stos push in (bad) (bad) lods mov sbb sub xor mov xchg lods xorl mov pop fcmove mov mov mov (bad) rex.WRX shrl (bad) sub sbb xor jg pushfq shrb (bad) add icebp mov pop mov jno sub outsl and sbb fistl (bad) fcoml sbb or rex.RB rex.X rex.XB xchg (bad) (bad) lods (bad) cmpb sti xchg in (bad) movabs (bad) div out mov cwtl or fiaddl (bad) rex.B loop imulb enterq rex.WXB subps pop in (bad) lods adc push cmp sub lods lods xor (bad) cmp movabs subl cwtl (bad) js jl jo pushfq lods rex.RXB out xchg fldcw (bad) movslq (bad) jl (bad) enterq (bad) xor rex.XB jp shll movslq pop imul lahf jns and out mov fisubr lods (bad) (bad) or lods cmp pop sbb lods cmp mov lods popfq fidivl (bad) mov lods sbb cmp push and mov movabs mov scas push jns lods gs mov jmp scas jbe mov (bad) (bad) pushfq mov adc (bad) or in stos pop cmc or stos rex.WX mov jmp adc lahf mov mov jg jge pop jmp repnz adc mov mov (bad) stc jno movsb (bad) fbld lods add ds (bad) movabs sub (bad) in stc add add cmc jnp movabs rex.R mov jle imulb rolb jmpq pop or fcom xchg push test adcb sub cmp rcl lret push movabs (bad) pushq jbe lea adc cmp mov cmpsl or lods retq loopne rex.X scas (bad) mov gs mov add jbe outsl repnz jmp test out lods cltd (bad) add rex.XB (bad) mov sub push push mov (bad) rolb mov jae mov sti lods retq fldl add je rex.RXB (bad) xchg xor outsb outsl cmpsl lods mov (bad) lock pop add jl out out jle mov jrcxz and lods push (bad) cmp repz lods mov in adc push fmull push cmp sub pop ds mov xchg xor lods (bad) in sbb paddsw mov xchg in icebp scas scas sbb fs movslq stos pushfq mov mov rex.WB movabs and movabs mov test movabs lods (bad) mov movsb test retq callq jbe lods rex.WX or (bad) sti in cmp or rex.WRXB movsl sub xchg (bad) lret test stc mov rex.RX movabs (bad) jl scas jno (bad) mov outsb add adc movsl ja xchg (bad) lods scas cwtl stos xchg imul scas (bad) cli and or clc sub addr32 sbb mov mov cld insb rex.B (bad) rex.WRXB jrcxz xor cld lods sbb xchg push (bad) lods lods fidivl loopne jl lock cmpsb sub orl (bad) in or adc cli add adc rex.WB int3 sarl lods mov and in (bad) js mov (bad) fs lods mov jle sub xchg sbb ja cld lods xchg retq lods gs insb idivb (bad) sub sub adc mov in ucomiss out andb cmc mov pushq jge stos rex.WXB stos mov xlat leaveq pop mov subl (bad) fmul imul push (bad) rcrb (bad) out and lods xor fwait jbe sub lods test mov or cmp pop jae mov mov pop mov cmc js push adc xchg (bad) nop and (bad) add xchg sbb cmp lods loopne jo ja fsubrl int lods xor lret (bad) (bad) lods xor shrl lods (bad) mov cld push scas sbb lods xor add mov adcl lods sub (bad) rex.R inc lods enterq push sub jns xchg stc lea lods sti mov cs icebp jge jp add jnp ja adc push lods rex.X mov add es stos (bad) sbb (bad) jl in (bad) jae sub sbb lods and sarb jl movsb jl (bad) lods imul mov out mov rex.RXB lods sub test mov jns sub cmpsb (bad) movsb rex.B mov lret adc outsb xchg sbb (bad) cli test or lods fmuls mov mov js rex.RXB mov decb mov jnp mov rex.RB stos mov fisubl ss rex.WXB lods sub mov jo xor lods in and jrcxz (bad) or cld cwtl add push adc rex.W stc add adc (bad) adc js lods (bad) mov (bad) data16 rex.W push jns lods iret cmp push lods adc pushq lods pop pop add cmp xchg stc (bad) out (bad) xor outsl lods mov (bad) mov rex.WXB test pop pop mov sbbb xchg or and (bad) jb xchg std pop fwait lock shr stos adc sbb cmc repnz mov int3 rex.XB or fdiv push shrl (bad) jge lods cld and xor lods xor mov stos push cmovle add fcompl jl int sti lods mov lret ja cmpl movabs or adc cmp (bad) hlt sti and lods pop pop loop jns or add and or mov mov cli rex.WR xchg pop adc in sub mov rex.WR callq outsl push pop adc movabs fstp xchg (bad) lods xchg and insl mov pop push (bad) mov lods pmaxub outsl push (bad) (bad) lods cld int rex.WB rex.X callq mov (bad) jne test insb (bad) stc pop pushq lods cmp xchg xchg sbb adc ja insl (bad) lods fdivl movabs (bad) pop lea sbb cs addr32 cld mov sbb xchg mov jmpq shl mov cmp retq (bad) (bad) int mov (bad) fisub (bad) pop callq js or mov lods out (bad) scas fisttpl pop hlt shrb callq xchg lret mov (bad) mov icebp lods rex.WRX (bad) sbb lods je sub push loopne retq lods xor iret mov leaveq lods sub mov xlat lods add rex.R rex.RB sbb sbb repnz (bad) lods mov scas ror or adc lods cli pop icebp mov cmpsb xchg (bad) jno push lods jnp clc (bad) sbb push std movsl push xchg add add loop xlat scas je (bad) rex.RX cld add fstpl mov insb push clts ljmp jno sarl lret test jo cltd retq (bad) sub fild fimul and unpckhps test stos pop sub jmpq mov stos mov cli mov je subl xchg lods adc xchg lods mov mov pop lods (bad) (bad) stos out mov and jmp sub rex.WB (bad) stos (bad) jge (bad) adc stos (bad) mov (bad) mov sub in pop out loop or lods cld out fdivrp (bad) inc adc mov cltd fnsave iret jb icebp test lods sub rex.WB rex.RB (bad) insl vmovaps fs add rex cmp (bad) lods lret and lods fnstsw rex.X mov lods lods mov and jg mov iret fcmovnb mov pop or popfq lods rex.WR rex.WRB jle lods add jmpq adcl scas xor (bad) cmp add jmpq lods adc jnp lods (bad) push jne sub (bad) adc movsl pop mov (bad) sbb jge rex.WRX rex.XB ds movslq jo mov test jle mov (bad) lods rex.WRXB (bad) ja add idivb (bad) xchg cltd lods out add pop lods subb (bad) lods sbb mov lods xor (bad) in rex.WR addr32 popfq sbb idivl retq mov test and (bad) (bad) or pop mov lods sbb sub mov (bad) rex.WR insb (bad) (bad) (bad) stos enterq outsb (bad) lods movabs stos cmp sbbb xchg lods lock mov lods lahf div (bad) lods mov lods ss jmp fxch sub lods test data16 repz lret jns movsb lods callq (bad) ja (bad) cmp rex.WRB (bad) std in lods rex (bad) in pushq pop jge xor mov pop cmpsb (bad) pop out xchg cmp adc retq mov movsb or enterq lods and loop cmp pop rex.WR mov (bad) lods mov jns (bad) js jne test jo movslq lods movsl cmp rex.B lea stos (bad) scas push vaddpd adc imul jp pop jne lods xor insb mov xchg test sbb lea outsl movabs sub fadd stc rex.WXB push rex.WB jl xchg (bad) popfq cmp sub xor fwait rex.WX pop rex.WRB rex.W lods rex.RB movabs lods sbb xor cmp sbb imul sbb or mov jge mov lret ljmp (bad) xchg xchg lods hlt adc nop sub neg lods cmpsb insb pop jb xchg pushfq scas mov insl sub (bad) (bad) mov rcl (bad) jp gs out lret mov xchg sti (bad) rex.WRXB jl test cmp lods adc pop in lods xchg movabs lods cmp imul stos mov stos (bad) cltd rex.WR xor int test mov (bad) cmp lods mov sub add mov stos mov cld test bnd std cmp add gs mov lods or mov push orl out lret mov lods adc sarl xor lods (bad) xchg (bad) push (bad) xor (bad) scas lret rex.WB xor psubd (bad) rex rex.W lods je out out sbb icebp jp xor fs pop (bad) (bad) loop imul cmpsl xor andl xchg (bad) sub jae subl rorb mov (bad) lods leaveq sbb callq pop lea add adc lods lods lods add rex.WR (bad) fs gs jne movslq jmpq jne stc movb cmp test jmpq add rex.RB jne push gs jne movslq (bad) outsb addr32 addr32 add shr jo add push add add add insb rex.XB jo jne rex.XB outsb je js add test test cmc jmpq jmpq add rex.RXB gs jns je insl push imul insb gs imul gs gs imul (bad) add (bad) retq mov loop movups push adc and cld lock nop jns xchg pushq maskmovq lret negl out movabs mov ja (bad) fistp pop lods push xor lods movabs insl rex.WR out in sub sub push repz sbb ds jb add movabs adc (bad) decb (bad) (bad) (bad) callq (bad) adc xlat outsb rex.RXB push cltd sbb jne stos scas and fwait mov mov jp int3 jo rex.WRXB xor in xchg adc cmp mov cld xchg adc int in jp xor lahf pop xchg (bad) lods lahf cltd mov je push fs rcll test movsb lret jae in imul adcl lods pop xor jge mov sub (bad) push or sti fstps xor mov push mov lea xchg jno add (bad) (bad) jmp jge pop or xor test rex.WR fsubrl pop lods iret movabs frstor cld (bad) sbb adc shrl jp pop or movabs jns jle rclb (bad) pop pushq pushq (bad) decb (bad) (bad) (bad) callq mov mov cltd cmc pop rex.X callq rex.WRX xchg cmc insl lret push movsl (bad) pextrw pushq je push nop or mov notl rex.WB lret mov xchg vmovhlps push rex.W in in sbb fdivl test (bad) movabs rex rex.XB (bad) jmpq adc rex.WB and movabs fisubl je push mov or jns (bad) insl push jb shufps jb cmp push push (bad) (bad) (bad) clc mov adc mov and sbb rex.B (bad) (bad) (bad) decb and (bad) add add or fidivrl test iret lret jns stos mov jno mov mov sub cmp test push mov rorl notl (bad) mov pop out (bad) adc gs outsb repz add mov adc add clc add clc jmpq add rex.RXB gs jns je insl push (bad) insb gs rex.RB je imul scas or bswap jmpq cmc bt xor bt repnz jmpq (bad) or mov (bad) shl adc movabs mov mov repnz out xchg mov (bad) (bad) movsl (bad) (bad) mov in adc xor mov push jns (bad) jl mov shl insb add sbb clc cmp mov stos sti (bad) js and rex.WRXB pushq loope mov mov jne rex.WRX xchg and pushq icebp sti sbb decb (bad) (bad) (bad) (bad) decl mov rex.WB cmp (bad) in sahf (bad) notb add (bad) sub (bad) neg fsubp (bad) jbe out cmc add xchg sbb mov rex.B fdivr lods movsl lret in rex.WRX out push pop std and lret (bad) xor jns push loop ficompl jg xchg jo mov fwait lods mov (bad) mov lea mov imul pushfq int mov adc retq xchg mov mov cmpsb sbb or stc in (bad) rex.WRB and cld rex.X sbb movsl push pop (bad) push in cmp test pcmpgtw pop (bad) imul pop (bad) (bad) (bad) (bad) decb (bad) rcrb je test jb or test fwait cli push (bad) jbe test (bad) pop jg imul sub enterq mov sbb fcoml rex.WX stc sbb stos xchg (bad) adc mov mov adc js jmpq jmpq add push imul insb insb outsl movslq add test btc movzbl cmc mov clc test clc add cmp movzwl mov bswap mov cmp stc jmpq jmpq clc sub jmpq jmpq jmpq pushq jmpq cmp sub test clc stc cmp jmpq callq stc cmp add jmpq add rex.RX jae gs (bad) insb jne add movsb add jmpq test cmp jmpq add rex.RXB gs outsl fs imul add adcb add loopne or jmpq jmpq not bswap lea setnp pop jmpq jne jmpq clc popfq rex.WX mov sub out (bad) loope (bad) fadds adc scas and xor out callq movabs out movabs mov (bad) xor mov adc movslq (bad) jnp or test stos callq pushq (bad) (bad) (bad) sti mov ficompl ss out fcmovne pop rex.WRX pop cmp fsts insl (bad) (bad) (bad) cld rex.RX push mov movabs add (bad) (bad) (bad) decb jbe add add or cwtl (bad) add mov (bad) xor paddusw sarl jl mov loopne sbb add (bad) (bad) pop and xor or and mov sti mov idivl nop add in xchg mov (bad) adc lock (bad) jmp pushq push mull js rex.WRB ds sub mov sahf mov (bad) (bad) vcmpss and callq (bad) rex.WB rex.WRXB sbb (bad) rcr or rex.WRXB mov rcl in jrcxz cs pushq loop (bad) add jns je and rex.WXB jo int out ja xor push and cwtl mov (bad) cmp push rex.RX xor movsl (bad) (bad) (bad) std out (bad) rex.WX add add movsb mov and jb jmp pop mov out jno mov jno add (bad) fild adc adc and pushq (bad) test jle (bad) mov test cld (bad) mov lret mov rex.WRB cmp lods loopne rex.RB ds movabs cmp xorl mov (bad) adc cmpsb push mov sbb sub cmpsl jne mov setbe not movzbw mov jmpq rep not pop jmpq rex.WXB rex.RB rex.WRX rex.RB xor cs insb add xchg (bad) mov lods jmpq je jo stc cmp jmpq jle jae clc bt cmp add jmpq add rex.RXB gs imul outsl outsb rex.WB outsw add test (bad) add add sub test bt and mov (bad) lock sub shl add ror xor stc and mov jmpq add rex.XB outsl jae rex.XB imul add (bad) sbb mov stc mov cmp mov test xor mov lods sbb rcr jmpq outsl insb xor cs insb add (bad) cmc not add sub add jmpq jmpq je test cmc stc cmc push mov ror mov movzbw stc setp sub not lea jmpq add push gs jb push outsl push gs data16 test hlt or cmp cmp jmpq bt stc imul clc stc cmp test add jmpq jmpq add rex.W gs jo gs outsb outsw jb (bad) je outsl outsb add sbb or add rex.WRX gs outsl movslq rex.RXB jne rex.B fs gs (bad) gs add shlb mov bsf setno add shl movsbw bsf mov bt cmp bt jl cmpb jmpq add sbb sub btr sbb ror shr stc mov inc sbb movzbw rcr add and sar bts add stc adc movzbw mov test bt shr cmp cmc clc cmp jmpq stc stc not stc cmc neg stc sub cmp neg cmp bt cmp jmpq add rex.WRX gs jae jb gs add mov retq mov setns xchg movsbw lea bswap not xchg mov mov lea mov movzbl mov mov mov setbe mov jmpq jmpq bt cmc add jae jne mov pushfw rol mov test test clc cmc add cmp neg jmpq je clc jmpq jmpq jmpq add rex.RXB outsl (bad) insl outsl jb push je je jae push push rex.RB rex.RB rex.WRX cs insb add add jne push jns je insl rex.WR movslq gs add (bad) cltd in add mov cmp jmpq add rex.RXB gs imul js callq cmp cmp jmpq jmpq bt cmc cmc imul jmpq jmpq jmpq cmp jmpq cmc stc neg jae dec jmpq cmpl mov fild imul stc int3 cli or mov sub jrcxz xchg rex.XB rex subl jle xor int mov (bad) (bad) xchg jns jne rex.RXB gs add (bad) (bad) cli scas ss gs (bad) and iret fwait mov xor pushfq (bad) xchg cld jrcxz sbb (bad) decb (bad) (bad) (bad) incl (bad) stos jle sbb or and ds (bad) (bad) nop ss lahf fdivrl jrcxz xlat rex.B std movsb ds in adc repz std js lret mov cmp (bad) insb cmc mov in cmc and push jmp (bad) add je (bad) pop sub repz js sub cmp sti cwtl (bad) insl (bad) pop icebp movabs add xchg cs out xchg sbb cmc neg cmc cmp setb lea not not lea movsbw pop jmpq cmp bt bt not stc cmc cmp neg bt cmp sub jmpq jmpq inc jmpq add push imul outsl rex.WRB je rex.X add add je movslq imul imul movslq stc test test jmpq add add add add mov add add std sbb add add add add add adc jle adc je adc (bad) fildl add fildl add add add add add add add xchg or adc mov adc (bad) or adc rex.WR (bad) fs gs rex.XB jne je jb gs push je imul jb js rex.R insb add insb outsl (bad) fs gs rex.XB jne je jb gs push je imul jae jb js pop insb insb add imul xor std lea adc fs mov mov rcll cltd pushq loope fcompl nop rex.RXB (bad) (bad) push enterq mov (bad) sarl in and push adc loope push fimull int3 adc push and rcr fsubrs cmp mov mov lods rex.WX fcoms jmpq mov jmpq stos xchg movabs rex.R (bad) movabs xchg jrcxz mov callq out (bad) hlt popfq rex.WB insb pop rex.R lock (bad) leaveq cltd and push xor repnz cli rex.WRXB rex.WRXB (bad) mov rex.WXB jno pushq sub xchg (bad) std mov fnstcw pop (bad) xchg (bad) rex.WRXB lea cmpsl data16 add (bad) lods jmpq xchg (bad) sbb and xchg or mov out out stos in scas movabs cltd fs rex.RX and (bad) callq (bad) decb jmp leaveq rcr loopne movabs pushfq popfq xchg push rex.WB (bad) (bad) imul es mov (bad) rep adc data16 movslq xor test jnp jae insl (bad) mov pop (bad) test mov adc rex.B jge xchg out (bad) (bad) and fnstsw movabs ja loope in addr32 loop mov cmp jno fucomp or jg and (bad) clc adc push mov jmpq rex.WRXB (bad) xor add fcoml rol add add jno (bad) fwait cld and xorb mov insl cli data16 test adc movsl cmp pop es cmp xchg lock pop ds in or lock cld movslq movabs mov jl pop movabs fldenv loope sub in and in rex.WX or add rex.XB adc sahf add cwtl shr (bad) ja,pn (bad) (bad) push (bad) xlat add (bad) in je push cwtl rex.XB rex.WXB adc fstps sub negl rex.R (bad) data16 (bad) push retq (bad) pushq mov (bad) rex.WRB mov fstpl stos movabs insb cmp mov adc (bad) rex.R mov or (bad) push sbb sub lods insb cwtl sub xchg or cmc push addr32 movabs xchg and rex.WR cmp imul and popfq jns sub pop sti (bad) fisub or gs jno pop mov push and mov jae or (bad) mov out (bad) rex.WB (bad) shll or fsubl (bad) pop lret jae mov rex.X outsl (bad) addr32 addr32 out insl (bad) push xchg stos movsb xchg movabs cmc (bad) cli movabs mov rex.XB (bad) push fsubrl xor cwtl xchg rex.WXB xchg lret add and cmpsl sbb rex.B loope (bad) imul xchg xchg pop (bad) sahf adc leaveq mov sub jbe repz ss shll sbb jo pop stc cld jb push mov test bnd rex.X mov (bad) fwait mov xchg sbb pop cld (bad) push in (bad) (bad) cmp mov xchg loop rex mov xchg idivb or pop insb pushfq test and lods fldt cmp xchg stos (bad) mov (bad) add test pop adc jle jmpq cli fdivrp xchg popfq (bad) rex.WXB out (bad) or (bad) mov push out (bad) scas leaveq (bad) mov push (bad) rex.XB jge enterq lahf cmp sub movabs pushq (bad) (bad) js (bad) (bad) jg pushq mov mov push rex.RX icebp es mov je cmp add (bad) roll movabs lahf mov rex.WX gs mov or pop push movabs fsubrl cmp jae lret int3 addr32 add insb rex.XB rex.RX rex.W rex.B adc mov rcrl mov in outsb (bad) rex (bad) xchg (bad) sub shlb sbb stc xor mov (bad) rex.WRX cmpsl (bad) (bad) mov rolb (bad) je cld xor rex.XB in ja (bad) rex.WRX rcrl mov scas rorl lret (bad) xor sbb test adc cmp xchg mov imull cld pushq jbe cld mov add movsb sti leaveq out mov mov rex.R and xor sub mov mov sub outsb pushfq (bad) (bad) cmp movsb mov orl ss rex.RX mov movslq stos xchg clc (bad) movabs fstps and mov loopne in shlb stos pop rcll pop repnz (bad) or test add rex.RXB pop leaveq stos movsl mov sub jno pop pushfq outsl push jl lret fsub cwtl cmp pop xor jg sub lock mov (bad) xor jl sub sub rex.RB rex.R jo (bad) adc mov movsb clc (bad) lock rex.RB stos pop xchg pop sbb jge mov pop jne (bad) mov mov sti (bad) fidivrl or fldt (bad) clc mov leaveq cmp xchg mov (bad) sbb in movsb pop int rex.B add xchg gs (bad) out mov insl (bad) (bad) (bad) cltd xchg (bad) popfq jns rex.X add (bad) and data16 and mov (bad) pop add outsl (bad) jbe icebp icebp jp rex.RXB mov pop addr32 fnsave in cmp (bad) mov cwtl and (bad) rex.WX rex.B (bad) rex.WRXB pop push cs icebp (bad) sub fwait iret mov rex.X sub stc sub (bad) push xchg and (bad) sbb pushq movsb xchg rex.WXB (bad) pop sub rex.B jmp pop gs imulb sahf cld sub xchg imul sarl (bad) stos (bad) mov add icebp pop test fist adc addr32 js (bad) (bad) xchg rex.WR stc (bad) cltd or imul cmp pop jg rex.B (bad) std xor mov (bad) callq rex.WXB mov mov xor sti (bad) enterq movabs popfq (bad) je rex.WR and (bad) test cmp lea rex.W mov andl insb enterq shrb test push and jmp or ja stos flds jo jbe stc int mov adc test (bad) mov adc data16 pop lock add int3 mov lea loope pop rex.WRXB adc out jno jle rex.WXB rol pop pushq retq (bad) rex.WXB push jmpq mov rex.WR insb rex.RXB test lods iret rorb jno retq pop mov rcr xorb rex.X mov test mov xor in gs (bad) mov xchg sub sti adc psllq xor rex.WRXB fistl pop mov (bad) fadds mov adc cmpsl and and add mov xchg xchg adc (bad) fstpt in out mov retq in or icebp cmp jae sarl or enterq (bad) xchg sub (bad) xchg movsb fcompl in rclb mov mov xchg ficom jae movabs out jmp jno or nop rex.W adc adc adc lahf scas jbe xchg and sub mov in add pop xchg rex.WRX sti mov pop std fwait cwtl xchg and movabs jmpq lods jo cld rex.WXB rex.RX pop es sub pop fidiv rex.RB jnp xor es and cmp xlat sub (bad) mov mov add outsl shrb mov ficom xor xchg pushq lahf mov in (bad) (bad) (bad) and loopne cmpl mov fstpt out ror mov cld rex.WRX fisub adc xchg lock jne inc lock loop jbe cmp (bad) int loopne pop (bad) pop jbe (bad) xchg jae adc movsl push lock rex.WB adc sarl scas data16 lods adc mov pushfq pushfq cmp (bad) lahf leaveq add rex.RB pop jmp enterq jge mov add push subl movslq add pop rex loop retq xchg xchg cltd xchg je and cmp enterq mov sub push xor xor imul sub int3 lret xor leaveq jmpq (bad) xchg sub cmp imul out pushfq or fildl add (bad) outsb sbb push rex.WRB (bad) sbb push cmp xchg pushq cmp or or push pop xor jle jg (bad) jns cli repnz xor lock retq sub (bad) movsb mov test insb xchg and sbb or shr sub cmp repz (bad) retq div xchg xor outsb jnp (bad) lea movabs rex.XB jg movabs cmpsb pushq mov mov in (bad) rcrb add xchg jnp imul pop fcompl outsb mov scas (bad) rex.WXB jmpq movabs repz xor xchg retq orb rex.WRX addr32 xor repnz popfq mov mov (bad) stc rex.WXB (bad) stos jmpq mov (bad) push faddl in int3 (bad) fcmovnbe fstps cmp outsl test mov movsl mov leaveq enterq scas jge scas pushq xor (bad) hlt repnz cmc cmpsb sbb fwait shrb js (bad) in popfq jmpq sub rex.XB rex.W mov mov add xor fs je add add jne test jmpq jmpq add cmc test clc movzwl bts mov jmpq not mov not lods jmpq jmpq add rex.WR gs jbe rex.XB je movslq push movslq outsb add movsl (bad) add test (bad) in negl xchg cld add xor (bad) (bad) stos out (bad) fisttp out or add and leaveq loope subb xor in mov xchg jne xlat jo icebp adc lods mov (bad) rex.RXB or rex.RX rex.WRXB push cmp and add (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) test sub xor mul mov shlb rex.RX mov repnz out xchg (bad) int3 fwait and test ja (bad) cwtl movaps mov movsb cltd sub imul movslq leaveq sbb leaveq or test repnz int scas shll jbe xor fdivs hlt fwait or jmpq test jmpq jmpq add insb jae jb outsb push add mov or add rex.WR outsl imul jb jbe insb gs (bad) insb jne add add je jns je insl imul jns add test or jmpq cmp jmpq stc bt repnz jmpq fiaddl retq in fildll hlt mov add movzbl jrcxz xchg cli in (bad) adc repz xlat sar fstpt mov movslq fiaddl adc lods xor mov scas lea movabs lret jbe mov rex.WRX movabs pop repz in test (bad) mov (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) test pop scas xchg xor test mov mov addr32 movslq add or or xor sbb (bad) mov add in outsl and lods add jnp (bad) je (bad) ss jnp xor sbb mov and pushq jmpq add rex.WRXB outsb push jb movslq jae callq jmpq jmpq add push jb je rex.XB outsb jae insb gs add je loop push or add movabs sti or fild add bt pushq clc bt stc cmp jmpq jmpq jmpq callq cmc cmc clc cmp cmp jmpq jmpq jbe test mov seto mov xchg bt shrd and add cmp mov sar add bt setge add movl neg btc ror mov test bt bt bt cmp jmpq xor sub neg sub rcr xchg and mov (bad) mull std mov shld movzbw and add adc clc data16 testl stos (bad) rol bsf rol mov lea adc data16 (bad) or add not mov jmpq stc jmpq callq jmpq jmpq add rex.RXB gs gs gs rex.WRXB pushq movslq movslq imul add movslq mov rex.RXB gs jne jae jb outsl jae add rex.WR (bad) imul add mov mov jmpq ja jmpq jb test jmpq add rex.XB (bad) je rex.XB insl jo je (bad) insb imul shll add imul insb gs pushq movslq jmpq push lock std std mov xchg pushq mov retq je mov frstor or ss movabs callq and pop push (bad) in sub test cmpb add mov and xchg (bad) (bad) test rex.RB (bad) callq enterq (bad) rex.W in mov (bad) out (bad) xchg out fsts loopne test mov movabs pop jge ss xchg in mov push cmpsb callq mov (bad) movsl div cld test jo mov sub jne loop jrcxz (bad) mov pop cmp xor jp jrcxz cmp xchg sub add pushq pushq fnstenv movslq mov sbb (bad) or xchg fwait adc ss rorb adc std (bad) icebp (bad) cmp leaveq add pop test imul paddusb lret (bad) xor (bad) pushq clc out out push rex.WR cmc push bnd (bad) (bad) (bad) sbb rex.WB sub in push clc popfq int3 (bad) rex.WRB mov fldl loopne add add and cli lea jo movsl (bad) andl and mov ficomp cmp mov mov rex in (bad) ss (bad) (bad) decb (bad) (bad) (bad) (bad) test (bad) adc add sbb in in rex.RX lahf mov fnstcw mov mov sub (bad) adc (bad) rex.WXB jnp adcl push add rcrl (bad) mov fcmovnb cwtl (bad) mov xor xchg jo xchg rex.X adc shll sahf sahf rex.RXB test (bad) int3 negb lahf rorb sub sbb sub movabs cwtl rex mov cmp jnp rex.RX xchg cmc out rex.WR sbb (bad) (bad) lahf (bad) (bad) (bad) clc mov (bad) movsl (bad) push or push scas pushq (bad) (bad) (bad) decb push xchg add or (bad) (bad) push (bad) rcr rex.WRX sarb enterq xor in enterq and lret rex.WXB rep rex.W rex.X scas iret test ss in cmp pop jne mov lods enterq mov xor mov mov je movzbw mov pop jmpq lea lea movzbw movsbw setnp mov bswap not lea not mov bswap setle xchg mov lea jmpq jmpq jne test cmp jmpq callq stc or jmpq add add add add and add (bad) (bad) adc add add sbbl add pushq adc add add pop sbb add and add add movabs rex.RXB add add (bad) xlat sbb add stos sbb add add add push adc add add cmp add add loopne sbb add add pop sbb add add add add fwait ja add add add sbb add or add add add sbb add push and add add (bad) push and add add mov add add adc add add jnp sbb add or add add add add (bad) jae add add add add add cld sbb add callq add add add adc add add add imul add add add add add add add add add sbb add add data16 adc add add rorl add add add mov add and add add add sbb add add add movabs and add add sti mov add xchg jns add add add sbb add add add add add sbb add push and add add rex.XB sbb add (bad) add add add push and add add adcl add add cwtl rex.RXB add add add adc add add (bad) (bad) adc add add fild add add add sbb add add add and add add mull add add and add add add mov add add adc add add rex.RB sbb add sbb add add add add in adc add add rex.B add add (bad) sbb add add add (bad) add add jmpq add add sbb add and add add je sbb add jnp add add add or add add add add add push and add add cltd out sbb add sbb add movabs (bad) add add add sbb add add (bad) rex.WXB add push and add add std sti sbb add add add adc add add lret adc add add sbb sbb add add add sbb add adc add add sti rex.WB add mov add shll add add add (bad) (bad) add add add sti sbb add add add jnp add add add or add ja sbb add add add add add sbb add add add adc add add mov sbb add sbb add adc add add stc rex.WR add add shrl add pop pop and add add fcomp sbb add outsl and add add pop or add sub adc add add cltd push adc sub adc add add mov (bad) add add add nopl add add xchg (bad) sbb add add add add add add sbb add (bad) and add add movabs (bad) adc add add fwait (bad) adc add add outsb retq add add xchg cli sbb add add add sbb add add add add cmp add insl pop adc add add rex.RXB and add add add add add sbb add sbb add loop add add add cs add sbb add push and add add mov add add add rex.WX add add add add add add add sbb add push and add add xor sbb add or add add add add add adc add add cwtl push adc add add mov sbb add add add add add add add add add add pop adc add add in mov add add add jno add add add add add add add add add insl add add add add adc add add imul add es sbb add add hlt push and add add xchg imul add rex.WR add add mov adc add add pop push and add add and add cmp add add add or add mov sbb add sbb add or add add add push and add add and add add add add and add add mov sbb add add sub sbb add sbb add xor add add add add add add add sbb add add add rex.WRXB add add insb jo add add add push and add add adcb add add add add add add add add add add add adc sbb add add add add subb add add orb add add add add add cmp add add add add add add add add add add add add add add add add add add add pop (bad) sbb add add add add add add add add pop adc stos push and add add mov sbb add add add jrcxz add add add add add sbb add cld sbb add rex.WB add add add pushq add add add adc add add sbb sbb add (bad) (bad) add add add add add add add sbb add adc add add jo sbb add jle add add add adc add add add add (bad) adc add add std sti sbb add and add add jg sbb add add add add add add (bad) adc add add pop rcrl fwait sti sbb add add (bad) outsl and add add cs sbb add push and add add imul add add rex.B add add and add add pushfq (bad) sbb add push and add add rex.XB add add add sbb add fcomps add add add push and add add jle sbb add rex.WR add add mov adc add add test (bad) add add add pushq add add add sbb add nopl add add sar sbb add adc add add push callq add add add jnp add add add or add add add add sbb add add add nopl add add mov (bad) add add add (bad) (bad) add add add mov add add add sub add jle adc add add in jb add add add mov add lea add outsb (bad) adc add add test and add add sbb sbb add add add (bad) (bad) add add add add pop adc add add add pop and add add gs add xchg add add add add sbb add or add sub add add add add add fcomps add and add add add sbb add (bad) (bad) add add add (bad) adc add add je sbb add mov add mov sbb add adc add add adcl add add add sbb add add add add add and add add (bad) movabs adc add add (bad) mov add sti rex.WB add add add sbb add sbb add mov add out (bad) add add sarb add mov and add add add add add imul add adc add add xchg jns add add add adc add add add callq add add add rex.RXB add add (bad) cld sbb add add mov add add adc add add xchg sbb add sbb add scas sbb add (bad) adc add add mull add add add add add add push adc add add mov add add add add add add add add add add add add sbb add (bad) adc add add cltd out sbb add sbb add add add sbb add movsl decl xchg push push xor mov js outsb outsl (bad) insb pop loope xor (bad) fsubl lret cld or push adc sbb lock test xor int (bad) jmp idivl in push std shlb (bad) loopne sbb cld (bad) cmpsl out sbb leaveq clc or nop sbb add jmp mov outsl (bad) cltd sub jmp xchg mov jae xchg (bad) or shl lret mov sbb iret xor sahf icebp scas (bad) xor add lahf jb add and rex.R fcoms stos callq xchg (bad) repnz clc rex.WRX jp or push (bad) ds repnz in fcmovne xlat push leaveq setnp lahf rex.RB rex.RB jb push notl sbb movl mov rex.XB int clc cs fs cmp rex.WR (bad) imul rex.WXB and jmpq outsb or jge mov test rex.R out (bad) rex.WRX mov (bad) loopne jle mov test mov sbb mull cs push neg mov push and scas ficoml push test add shlb push and fwait lods rex cmpsb je rorb stc repnz es ss sbb push pushfq sub (bad) pushq cmp and imul rcl out imul rex.X cmp movsb callq rex.WRB sub test notb in outsl rcrl rex.WX movabs mov xor (bad) divl add subb sbb je (bad) mov jp add sahf fmull (bad) test jmpq stos jp pushq rex.XB (bad) mov (bad) mov rex.RXB or or mov (bad) xor lret add or add and push (bad) (bad) enterq movabs fs in mov adc pop (bad) rorb out clc or es xor pop stos rex.RX xchg rex.RX rex.WX pop mov bswap cmc test xchg mov sbb test xchg gs repz (bad) pop xchg or sbb (bad) js pushq mov or outsb mov sub loop fld jmp xor push xor pushfq pop ja js nop mov and movslq addl outsl and pop stos test sub jns popfq xchg rex out xor and repz adc lretq lods rex.WX je rex.WRXB mov sub push and test retq scas mov (bad) out rex.WX cli icebp or cmpsl mov stos xchg pop sbb or (bad) enterq fstps (bad) push rex.WRXB or cmp mov test jo cwtl out lods test imul or jne jbe lcall callq adc xchg repz test mov rex.WR and repnz sti cmc mov add (bad) cmc (bad) and (bad) pop outsb mov jnp lods pushq fildl mov xor leaveq rcl mov pushq decb add add (bad) fcos callq sarb (bad) pop cmp jb sub insb test hlt xchg cmp xchg rex.X xchg cmp xor clc lret jmp pushfq cwtl cmp cmp or ffree (bad) and stos data16 or mov push clc popfq stc cltd mov ds mov sub jno push stc (bad) or mov rex.WXB rex andl out jrcxz mov pushq out (bad) mov xor xchg (bad) (bad) (bad) (bad) decb (bad) (bad) (bad) incl mov enterq roll hlt hlt fistpl add (bad) std xor mov rex.WRXB (bad) retq (bad) xchg rex.RB sbb rex.WRXB pushfq mov loop push rex.XB test and cs push out in nop mov cmp mov retq rex.WB imul sub ds mov outsl test adc xchg mov cmp lret (bad) cmpsl movabs lock adc (bad) fcomps xchg stos sbb out rex.WR mov out ja jns or and test cmp rex.XB (bad) mov (bad) je jmpq xor jrcxz movl (bad) std nop rex.WX mov pushq cmp shrd mov (bad) jrcxz (bad) rex.R gs mov decb (bad) (bad) (bad) incl mov addr32 add sbb mov or hlt cs (bad) scas sbb notl mov icebp pop push ss jge mov out sahf mov or out mov mov jg pop (bad) mov push mov add cmp (bad) and jne and pop cmp ror jmp es ffree mov add add xchg add add or xor pop rex.WRXB cmp and jg push mov cmpb adc add fist in loope scas rex.WB cmpsb rex.WR (bad) (bad) sti mov sbb add xchg add rex.RXB clc outsl or rex.X rex.RB (bad) (bad) mov mov insl (bad) (bad) mov adc out pcmpgtd test packuswb jnp rex es rex.WRXB rex pop mov rex.XB (bad) test icebp sbb sub add rex.XB (bad) je push gs imul (bad) (bad) add fsubrs (bad) add add (bad) fs jb movslq jae gs outsl jb add shl or pop rcr sarb adc sbb jne stos push rex.WRB (bad) int out mov mov push jp pushfq sbb scas movups (bad) (bad) sbb flds (bad) rex.WXB test add adc fldt push or rolb jle scas mov sahf icebp pop sbb (bad) or add jae xor sub hlt xor jae iret in in fld fs cmp cmp rex.WR rex.XB xchg lods in in rex.W repz decb (bad) (bad) (bad) (bad) test mov sarb or (bad) mov add data16 scas (bad) mov xor jp fs (bad) pop jne (bad) xlat movslq pushfq out movabs pop jle xchg retq lahf add (bad) out fwait mov push rex.RXB cmp out adc in nop stc (bad) fistpll (bad) movsl adc (bad) xlat (bad) in xor sahf rex.WX mov adc fldl addl (bad) mov rex.RXB movabs fwait movabs jl sbb ja xor cmp leaveq fwait lret mov lods rex.RB rex.W (bad) rex.X xchg fildll test ss rex.WRXB cltd fcoml mov sbb (bad) (bad) (bad) (bad) test xor push sbb (bad) jne loop xor stc cltd mov gs mov adc mov repnz callq (bad) int push (bad) mov (bad) (bad) adc int (bad) xor test or (bad) cmpsl adc pop stc jnp jne xor shrd shld sub shld mov mov neg mov or mov add sbb mov clc test jmpq add rex.RX gs gs jne movslq sbb xchg push add pop xchg adc jl cmc rorl and (bad) (bad) and rex.XB scas rex.WRXB mov out loop pop stos mov xchg vcvtps2pd out or movabs jl rex.X jrcxz (bad) fnsave mov or pop cmp cwtl xchg jp mov cs in rex (bad) xor stos (bad) fdivrs fidiv mov pop pop mov outsb add push jb movslq jae fs outsl push gs imul cmp (bad) incl add je outsl movslq push imul gs je imul add repz (bad) (bad) add mov stc test cmp cmc cmpb jmpq jmpq jmpq jmpq jae cmp bt cmp jmpq imul std rcrb pop jmpq sbb fnop or in icebp (bad) retq sub fwait mov out adc movsl sub cmpsl push shlb (bad) mov callq jle (bad) (bad) fidivrl roll (bad) xorl (bad) xor jg js cmp mov jnp out lahf outsb nop jo and mov movabs imul rex.WX and sub xchg or (bad) jb fcmovnb je (bad) leaveq push movabs (bad) ljmp enterq (bad) jnp and fst cmp or (bad) add mov jnp in imul rex.WRXB sbb xchg leaveq (bad) xchg rex.R mov mov adc pushq sbb (bad) xchg hlt jmpq repnz sub rex.X rex.W mov fimull sub test flds movsl xor xchg test mov or mov jp movslq jae js (bad) jp (bad) xchg jmp repnz (bad) (bad) decb jne push rex adc and and xor rex.RXB lods shrl rcrb rex.WRXB test frstor and xor and retq rex.WB jrcxz cmp xchg xor jg,pn push jb mov retq scas std mov pop jg es add lock push repz loop ja (bad) (bad) sub int3 repz sbb mov pop mov sar cmp stc cmc not bt neg cmc sub jmpq cmc cmp cmp jmpq jmpq mov lea movsbw movzbw pop retq (bad) xchg test outsl (bad) cmp sbb sbb or scas popfq rex movsl mov rex.RX sbb (bad) mov out add and mov (bad) xchg mov pushq fdivrs jnp mov sub scas (bad) rorb or loopne insl add jg movaps cmp stc jge xchg (bad) scas xorl jle imul mov jl adc fdivrp (bad) (bad) decb (bad) (bad) (bad) pushq push fistpll adc mov in (bad) mov cmp fbstp js sbb push mov out xchg jnp jmp sbb retq (bad) pushfq and and add cmp rex.R xchg (bad) int mov fbstp xchg (bad) mov adc rex.WRXB out repnz and (bad) enterq ficom xchg mov int pop pop (bad) fadd xchg lods ss mov xchg rex.WRXB not add sbb sub cwtl push fild in xlat popq lahf mov rcr fcomps popfq jns (bad) jmp add std xor rex.R (bad) sbb fldcw adc test add pop in scas and cmp cmp leaveq push cmp rex fnsave enterq (bad) out mov push lahf add (bad) and sub decb (bad) (bad) (bad) pushq xchg adcl push rex.RX test ss fidivr or rex.WRB (bad) int movabs int3 repnz xor rex.WXB in or outsb jle xchg enterq mov repz adc mov and cmpsb cmc sbb mov pop (bad) hlt (bad) pop add movabs cli imul adc test shl mov in test cmp jo fadds setbe mov cltd mov mov jge jb rex.XB xchg jnp adc or out add add mov addr32 add add or (bad) fadds (bad) (bad) (bad) sti mov insl xchg mov out sbb jge mov rex ja (bad) negl xchg pop rcll shl test jno callq sbb mov or (bad) fdivrl jo,pt jne (bad) fldcw fadd movsl cltd mov adc sbb add rex.RXB gs jne jb outsb je pushq rex.WB add leaveq repz adc pop or (bad) (bad) (bad) cld jrcxz (bad) push cmp pop and roll (bad) test (bad) mov xor push mov mov or or retq outsl lods sti push (bad) movabs rex.WX rex.RXB pushfq add xor movabs movabs adc mov scas cs jbe (bad) (bad) decb (bad) (bad) (bad) pushq adc sbb jmp xor jrcxz or (bad) (bad) mul xchg cld cmp movabs test mov xchg sahf mov mov mov and adc jae clc (bad) (bad) jno sar and test (bad) ss fidivrl (bad) adc push xor fidiv in cli mov pop mulb fisttpll rcl sub sbbl add xor clc cmc sbb cmp xchg mov sbb xchg rex.B rex.X and mov (bad) mov mov rex.R clc pop (bad) (bad) js clc leaveq stos lahf or (bad) (bad) pushq mov push lahf xor (bad) xchg rex.WR cmp jrcxz in jp std (bad) cwtl mov scas imul pop in test mov iret loope in mov jrcxz jl rex.WRB addr32 cmc (bad) (bad) (bad) decb (bad) (bad) (bad) pushq (bad) mov (bad) clc cmp loope mov sbb mov pop lret (bad) or lods movabs std sub mov icebp (bad) mov rex.RX cmp sbb sbb jb mov pop xlat add mov rex.X add sub pop pop adc scas mov (bad) push and or and (bad) ss loop (bad) test jrcxz adc mov cmp (bad) xor test (bad) adc cmp movabs rex.WX (bad) mov adcl (bad) decb pop rex.X rex.WXB add or movabs adc adc mov xchg repz cwtl add mov vandps (bad) out or cmp mov rex je (bad) pop xlat jnp push jg xchg cmc movsb out divb sti movabs outsl insl insl (bad) outsb imul addr32 add jp or push pushfq (bad) sbb adc callq sbb (bad) mov loop (bad) retq cli callq ds and enterq cmp and out mov lret pop movabs fs rex.WRX (bad) movabs push jo jg sbb jl imul sub test sti callq movabs pop jp pushfq (bad) mov fs mov (bad) cmp cmp js rex.X int3 jno repnz imul fwait mov sti (bad) maxps jo mov (bad) lea mov data16 divl movsb (bad) pop enterq jmp jo jno (bad) (bad) (bad) std loop mov xor jg jo test (bad) (bad) (bad) jmpq es (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) fistpl cvttps2pi cs movabs fmulp scas sbb xchg fistpll repnz adc ds sbbl sti (bad) loopne (bad) (bad) test sahf mov lsl mov pushfq (bad) std mov test pop adc mov (bad) pop insl rex.WXB je jb outsl jb outsl fs rex.WXB add outsl or cmp jmpq callq jmpq jmpq and cmc add jmpq jmpq jmpq add push gs outsb jbe jb outsb insl outsb je (bad) jb (bad) (bad) insb gs pop add add rex.WX pop adc (bad) push jge (bad) outsb pop (bad) test shrl insb lods push mov mov rex.WRB jbe adc retq idivl lret jae addr32 frstor outsl (bad) out cmp push push shl push pop (bad) (bad) (bad) std mov and andl or leaveq jrcxz mov xor push rex.WX (bad) icebp (bad) ror (bad) mov (bad) stos fs mov cmpsl pushq rex.XB add pop cltd cmpsb fsubs and pand mov (bad) idivb (bad) mov addl addr32 xchg jle push push (bad) xor cmpsb rex.WRXB xor and cmp and enterq jp repnz test hlt rex out rex.WRXB hlt cmc jle mov push jmp fsubs adc std repnz (bad) rcr rex.WRB (bad) and (bad) out and cmc icebp shlb test xchg movsl int adc pushq jno fnstenv mov mov mov and mov adc idivb (bad) stc (bad) rex.WRXB (bad) or (bad) (bad) pop xchg scas mov pop stos jle mov xchg cwtl sbb (bad) (bad) fnstsw and leaveq cmp sub pop mov iret mov in and xor mov rcr retq add push (bad) xor mov (bad) cmp mov imul xchg rex.WRXB mov sbb xchg xchg (bad) xchg or or retq out and mov sub (bad) std (bad) in add (bad) (bad) (bad) (bad) mov jnp rex.W icebp (bad) xor push cmp and pushfq in fiaddl outsl (bad) adc shlb xchg pop adc ja,pt (bad) je (bad) (bad) jb push and fwait add cs xchg out loop xor lock mov adc mov gs fidiv mov insl fs rex.X je lods xorb lahf (bad) mov callq pop add cmp fmull adc iret sub cmp push scas je xor xor (bad) (bad) sti mov repnz mov (bad) (bad) std or stos rex.WX and (bad) nop push mov lret mov fildll test (bad) (bad) (bad) (bad) decb movslq jb add add ja (bad) rex.RB lret lret mov loope fmuls (bad) pop jmp repz xor lea push out rex mov jo xchg (bad) std xchg callq fwait add pcmpgtd adc mov add cmp bt movb test bt cmc stc test jmpq bt stc add jmpq add push jb je rex.XB outsb jae insb gs add xchg or mov bsr inc mov xor adc jmpq not jmpq add rex.XB outsb outsb movslq insl gs imul jb (bad) je rex.RB jbe jb outsb insl outsb je insb outsl movslq callq jmpq imul test add jmpq add rex.RXB gs outsl fs imul add add gs je imul or jmp leaveq jle callq jmpq add rex.RXB gs outsl outsb jae insb gs jo je push add (bad) (bad) icebp (bad) push movsb movsbw bswap pop jmpq je test jmpq jnp jne cmc cmp movb jmpq jbe clc sbb sub bt bsr mov bsf shld mov cmc shl add xor shr shl mov add rcr movsbq add bswap mov jmpq loopne jae,pt nop adcb sub loope retq lea jrcxz es xchg xor out (bad) add insb push sbb movsb adc cmc add shlb out pop lods (bad) mov lea out sub xlat mov callq cmpsb test jbe movsl (bad) (bad) rex (bad) sbb mov cmp rcrb rex.RB and (bad) ja rex.W push push mov (bad) (bad) movsl or push sub btc mov (bad) jmpq xchg (bad) imul (bad) shr jge stos sub in (bad) jmpq xchg (bad) mov jmp mov xchg callq pop (bad) (bad) (bad) callq cmp adc xchg in adc orl (bad) jmpq sub fsub rex.WB (bad) jmp mov mov (bad) rex.WRB cmp scas rex.WR rex.WRXB fnstenv cwtl fwait roll push test (bad) (bad) in xchg callq pop cmpb lods rex.WRX xorl mov es mov xchg rcrb pop push pop sbb (bad) cmp jbe or jp test (bad) push (bad) (bad) rex.WR (bad) push xchg insb fisubl sti rex.WR xchg cli sub (bad) push (bad) fstpl fnstsw cmc mov rex.WX mov sub mov rex.WXB int3 outsb cmp (bad) push or or rex.X mov jnp (bad) (bad) clc mov jo cmp mov ss pop lock jmp (bad) rolb (bad) (bad) (bad) cli or jbe pmuludq mov sbb xchg rex.WRXB test jle ja andb (bad) (bad) std or mov xchg pop cmp add out rex.WXB xchg mov decb in test or hlt (bad) rex.B rex.X stos pop xchg clc (bad) sbbl es adc cltd add imul ja lods push add or push adc sahf rex.R rex.WRX cmp leaveq movabs xor jae jne jb pop add rep or setbe push jmpq cmc jmpq not mov jmpq ja stc cmc imul cmc add jmpq jmpq jmpq jne test shld mov bt bt clc or jmpq add rex.WRXB outsb push jb movslq jae outsl imul rex.B rex.R push xor cs insb add add jae rex.WRB gs (bad) addr32 rex.RX add adc std mov fucomip addl stos jg add and or add rex.XB jo jb jne push add fsubr xor pop or test test add stc bt cmp cmp mov cmp test jb cmc test jmpq jb retq lea movsbw not bswap movzwl bswap lea movzbl mov jmpq test jmpq ja rcr mov sub cmp not not bsf add bt sar neg cmc mov sub rol adc add mov clc cmc repnz jmpq jne jmpq jmpq cmpb jmpq add rex.RXB gs jns je insl rex.WB outsw add test or add rol loopne jmpq jmpq jmpq movabs in pushfq rex.X repnz nop rex.W push cltd (bad) cli testl jle (bad) in hlt xchg rex.WXB rex.WRX fwait and rex.WXB add icebp out and fnstenv mov pushq repz jge je xchg lret (bad) add or (bad) xchg mov ss sbb (bad) (bad) adc jge (bad) (bad) xchg mov stos add sub (bad) xchg lods movabs ds jns cmc gs push mov xchg int3 mov xchg repz (bad) mov std sub (bad) mov insb out add stc lahf or stos jmpq jmpq jae jmpq movabs or pop cmc and in (bad) xor shll mov and jmpq mov jmpq and sub test cmp xorb xor movslq jo retq rex.WRB stos movabs rex.WX mov lea movsl leaveq and rorl leaveq mov rex.RX lahf int (bad) mov jle xor jmpq decb (bad) (bad) (bad) (bad) repz popfq xchg xchg cli xor add test jne jmp push mov in lods mov rex.RX sbbb outsb xor cmp sub rex.WX (bad) xchg clc outsl or jle (bad) sbb sub add imul leaveq stos rex.WRB mov insl imul in sbbl xor outsb adc imul and pop xor fs rex.WXB sub movsb fcoms jno movabs idiv faddl xchg rex.R rex.RX ds (bad) ss (bad) (bad) test lods (bad) out rex.RX (bad) clc insl push fwait adc rorl in outsb (bad) xchg hlt rcr sbb nop adc movslq sahf hlt pop pop jl xchg mov add shlb movabs add test (bad) decb (bad) (bad) (bad) (bad) repz sub jo mov (bad) xchg addr32 jbe pushq or in rex.RXB xchg je jno add stos mov pushfq in ja mov scas popfq retq adc pop push imul adc mov or cmpsl mov sbb rex.X movabs (bad) or cmpsb (bad) jno out cmp movabs (bad) cs (bad) sbb pushfq jp jno insb push add loopne test out cmp add add mov cli and add add xchg out adc (bad) (bad) sti mov pop ja mov jp rex.B jl mov mov adc push in shrb xchg leaveq imul adc rex es (bad) rex.WRX adc adc test cmp jmp out cmp add in adc andl rex.WRB rex.X out sbb lods cld jmpq je stc cmp add clc stc cmp jmpq jmpq mov bsr btr add adc mov lea shr add rol shrd shld movl (bad) cmc test mov cmp cmp jmpq movsbl lea jmpq bswap lea jmpq stc add sub adc add mov test shr cmp test cmp cmp jmpq jmpq add push gs insb imul je add test nop or shld rol lea movzbl mov jmpq callq test or jmpq jnp pop jmpq push adc (bad) rex.X cmpsb pop jg (bad) rex.XB mov sbb (bad) adc (bad) pop adc rex.X sub leaveq or xchg xchg mov loopne sbb or or (bad) icebp repnz pop cmp rex.X out cmp insl insl (bad) mov adc int cmp pop sbb test cmpsb and sbb outsb jp outsl rex.W cs mov jo mov jmpq add rex.RXB gs jb jbe push jns gs sub rex.X push push or callq clc bt add jmpq test test bt movb cmp jmpq je bts adc shl push ror movzbw mov jmpq jmpq adc cmp xchg loope fs push (bad) xor (bad) cmp rex.WRB (bad) pop nop jge gs stos rex.WXB addb jo xor loope (bad) xor xor xchg jp fwait add push test pop adcl loop test sub movsb rclb stc movabs rex.WXB (bad) decb mov sub outsl (bad) and mov rex mov (bad) and in mov notl movsb cltd sub ds testb mov (bad) (bad) mov (bad) (bad) (bad) (bad) fcoms cmp movabs jle jg (bad) push lock adc add rex.R (bad) fbstp movslq (bad) insb (bad) cmp jns mov lock fwait (bad) and pushfq cld adc jae (bad) (bad) out stc repnz jmpq popfw jmpq add rex.WB imul rex.XB je movslq push movslq outsb rex.B fs jo outsb rex.XB jne je sub and setbe movzbl clc mov rcl shr add shl rcr sub mov jmpq add rex.W gs jo insb insb outsl movslq add add add add add sub add xor add test adc cmp sbb add add jmpq sub jmpq jmpq jmpq add rex.RX jae insb insb outsl movslq bt cmp jmpq add rex.RXB gs outsl insb jne rex.WB outsw jb (bad) je outsl outsb add push (bad) or jmpq je stc jmpq add jmpq jmpq jo fs rex.W pop incb retq and sub pop fs mov (bad) ss rex.W xchg lret in (bad) sahf outsl xchg mov cmp pop pop (bad) cltd and nop fldcw push (bad) lea mov (bad) stos add sbb ds (bad) (bad) (bad) (bad) movabs pop in (bad) mov rex.WXB ffree mov cmp sti push add pop clc or jae clc out mov adc mov jae stc cli cltd stc clc cmp cmp xchg bt cmp sub cmp bt shl jmpq add neg bts sete mov bt dec adc and mov cmp cmp cmp repnz jmpq jne cmc inc btc bts sub bt lea mov cmc xor and mov add or mov test bt cmc bt test jmpq rep movsbq jmpq lea not lea jmpq dec stc clc xor cmp cld test popfw jmpq jmpq bswap lea jmpq rex.RB mov loopne add jmpq sub lods and xchg (bad) sub hlt sbb movsb adc in mov clc xchg cmp fisubrl xchg rex.RB xchg xlat fnstcw mov mov or sbb fistp sahf outsl and popfq out fldenv cmp jp cmp sar (bad) (bad) jmpq pop int3 (bad) jge cwtl clc xchg rex.X push mov push xor rex.WX mov sub shrb rex.WRB xor sbb mov (bad) cmpsb out xor xchg mov rex.XB and jge out xlat (bad) mov jbe rex.WX rex.WRX mov bts dec add inc sub setge movzbl movsbl setns lea jmpq add rex.WR rex.RX gs gs jb rex.X data16 vmulss je (bad) je pushq mov fcmovu (bad) movabs rex.RXB data16 push cmpsb and or pushq (bad) xchg cmp mov lret xchg sbb jp mov xchg movabs lahf jbe pushq (bad) adc pushq incl xor jne inc xchg stos (bad) adc mov jg mov mov add je xchg (bad) imul (bad) decb (bad) (bad) (bad) callq loope mov (bad) sahf test movabs in pop (bad) negb (bad) int3 fadds sahf jl stos (bad) adc lods push sbb jmp jle mov rex.WRB or loope out mov mov push jb lret pushq push sub mov jno retq (bad) sub mov xchg mov leaveq scas (bad) mov ja sub popfq jbe rex (bad) (bad) insl (bad) push jae sahf rex.R (bad) push jg pop mov loop mov pop ja movsb rex.WRX movabs jb rex.WX xchg in jo (bad) cmpsb pop mov cmp (bad) sub push rol mov mov jmpq jno rex.WR jns cmpsb sub int movabs xor es mov lods mov int (bad) (bad) decb (bad) (bad) (bad) callq fidivr xchg ljmp xchg retw icebp cwtl add rex.X add cmp cmp adc cmc pop cli out adc (bad) movabs lods retq (bad) je,pn movabs lods andb test mov ja test (bad) imul lret adc subl (bad) sub sarl (bad) mov subl cmpsb fwait sahf in xchg ja std test (bad) (bad) mov jns adc rex.XB in cli out xlat mov (bad) out (bad) (bad) (bad) clc mov and xchg (bad) (bad) (bad) decb jns jae jl js ja add add jl addl rex.RXB (bad) movsb popfq int (bad) (bad) add rex.W adc callq fwait xor jl lods movabs movsb fwait ja mov mov (bad) movslq mov (bad) xor push es rex.XB in rex.WB cli cmpsl mov js pushq cmc imul stc add jmpq (bad) lock sub sar movzbl add bsr test lea adc mov rcl jmpq push rex.W rex.WR push rex.WB cs insb add pop cmp movsb rex.WX cs push ja cmp push (bad) (bad) and cld callq movsl or jns lea jg test pop rex cmp shlb (bad) add fildll sti xchg test mov mov rex adc rex.WRXB or cmp jl mov pop sub fwait test (bad) push cmp xchg cmp sbb (bad) lret mov imull faddp pushq in sahf jmpq and cmp jl (bad) jg xchg mov cmp jmpq jl mov lods leaveq mov mov fimull cmp jl xor sarb sbb jmpq sbb (bad) cld (bad) (bad) rex.WRXB cwtl sbb stos sahf add jno sbb repz int nop data16 in (bad) adc retq pushq mov adc or jno (bad) scas mov jno and (bad) rex.RX and out jp mov outsl pop retq pushq mov js adc (bad) (bad) stc ljmp mov xor std mov (bad) rex.X cltd (bad) in in xor js cltd (bad) (bad) (bad) sti mov xlat xor rex.WB (bad) cwtl (bad) (bad) (bad) std or out out fchs (bad) (bad) (bad) decb pushq jae rex.R rex.WRB add or fwait notl jnp pop in ror sub jl adc jmp movabs mov cmp in int3 repz cmp vmovapd add repnz mov js adc add (bad) sbb in std fprem1 xor jmpq cmp jmpq add push pushq xor rex.RX push xchg or sbb inc rcl push bsr setp or jmpq jmpq add rex.RXB gs outsb jbe jb outsb insl outsb je je imul test or jmpq clc clc ror jmpq jmpq rex.B lock mov movzbl bts bt push sub xchg bts sar mov shl setp adc sub rex.WB lock xor movzbl mov mov lea lea sets sets mov not bswap mov not lea bswap not mov movzbw jmpq jmpq jmpq bt add clc stc mov shrd shrd and rol mov cmp clc bt clc cmp jmpq movzwl lea clc not mov clc stc stc bt add jmpq jmpq je cmc stc cmc cmc sub jmpq jmpq add rex.RX jne movslq js add shr test cmp jmpq jmpq rex.R rex.WRX push rex.WB cs insb add (bad) push (bad) ljmp jmpq in and add (bad) and (bad) (bad) mov xchg push push insb pop lahf sbb sub (bad) xlat ss ja lea xor std out pop sub (bad) or rex.WRB add add or movabs out mov movabs (bad) cwtl mov int retq adc xorl lods (bad) out in mov fwait jp mov mov xchg iret pushq hlt movabs lea jmpq pushq test jmpq jne cmp bt stc add test add jmpq cmp jmpq jmpq lea jmpq jmpq jmpq add rex.XB (bad) je push (bad) insb gs add mov enterq adc add (bad) and (bad) adc adc and addr32 rex.R test lea movslq lea scas pop pop adc movd mov out stos and test sbb movabs js lahf cld rex.WXB rex (bad) imul fimull fidivrl movabs pushq adc pop (bad) (bad) idiv (bad) (bad) (bad) jmpq (bad) (bad) (bad) decl xchg or xchg cld xor scas andl lret (bad) cld xlat mov (bad) and (bad) (bad) nop push (bad) sub xchg lcall incb (bad) sti lret pushq cmp xorb (bad) pop mov std rex.WR imulb fdivl jne sbb jrcxz (bad) pop xchg add mov sub int3 movabs jnp xlat sub test rex.WRB movslq add and (bad) or mov jb xlat (bad) callq mov jl (bad) je or shl not push (bad) icebp add bts sar cmp mov or and sub mov lea movzbw lea jmpq neg rol sets sub sub neg bsf add cmp movsbw (bad) testl rolb shl mov cmc cmp clc repnz jmpq test cmc xor std bt jmpq rex.RXB rex.R xor cs insb add hlt jmpq bt add adc xchg rol bts shld mov bt not mov clc push movzbq ror ror mov clc cmp bt clc sub jmpq ja stc imul jmpq and movabs (bad) ficom jns mov pop test (bad) (bad) jnp jle add pop mov cmpsb mov sub nop insl (bad) mov imul (bad) (bad) outsb (bad) cld jrcxz cmp callq movabs (bad) mov out movslq imul sbb mov sub and (bad) mov jg clc sub movabs out ss adc popfq adc loope sub pop sbb test (bad) callq fimul xor insb (bad) sub in int pop jrcxz cmp popfq (bad) (bad) sarb sub mov fdivr insb (bad) cmp (bad) (bad) decb mov (bad) (bad) xor mov jae fidivl movabs cli pop js push mov rex.WRB imul rex.WRB mov pop or stos and mov testl lock mov pop int enterq xchg xchg jl xorl mov push cmpsb push adc repnz (bad) mov mov (bad) adc mov cmp mulb fdivs js lods mov jp mov push stos push sub sub push mov jmp sbb or mov (bad) pop lods (bad) xor mov and pushfq je (bad) mov sub xor scas rolb pushfq mov imul (bad) (bad) (bad) jl imul rex callq sarb sbb (bad) or mov mov jmpq (bad) loope cmc movabs callq cmpsl movabs pushfq ja jmpq jmpq imul jbe stos or sahf rex.R rex.R mov std out mov sbb (bad) pop nop data16 xor loopne jno xchg adc rex.RB (bad) jmp outsb mov mov adc xor callq jle mov (bad) (bad) std lock or jo jnp add add or shrb cmp jae jae fiaddl scas (bad) int3 lock adc jmpq js rex.WRXB and es add and xchg or (bad) stos cs ss int mov mov mov mov pop shlb mov pop out js subb lea or callq (bad) mov lods sub roll hlt clc rex.WRB ss (bad) sbb shrl cmp or mov mov (bad) mov (bad) rex.RB add movabs or jbe bt bts stc jmpq jmpq jb test clc clc cmp jmpq mov pop jmpq insb stos pop je adc insb xor cli (bad) (bad) in xor js adc pushfq pushfq movsb out shr jp pop lock lea pushfq and nop sub ja jo insl mov sub enterq iret adc sahf sub mov mov xor mov (bad) push je jmp mov (bad) or pop add sub jmpq mov ss lods jne movsb (bad) pushq jg sub nop lods pop pop insl pop push (bad) or popfq adc decb imul jno pushfq cs lods movabs outsb lods shrb test sbb jbe xor pop and pushq mov fbstp or sbb popfq mov pop xorl or sub (bad) nop or movsb adc popfq cmpsb (bad) lret rex.W rex.WRX insl rex.R cltd fildl cmp (bad) push pop (bad) pushfq cwtl (bad) mov sub xor out push cwtl (bad) stos js movabs imul xor add pushq fsubl add (bad) js and shll mov adc pushq xchg (bad) mov movabs pop movabs outsb sbb mov add jns push sbb sub adc sbb movabs movabs jno js mov cmpsb sub pop es pushfq divb insb and sub stos mov cwtl movl pushfq xor je rex.WRB adc sbb (bad) adc fdivrs icebp adc add movsbl or cmp mov xchg mov movslq or enterq pop lret xor test jo mull pop (bad) jo cld mov and sbb (bad) add xchg adc sub xor or je out sub push retq in iret in mull sti (bad) rcrb movabs mov cmc lods rex.R (bad) adcl sub xor hlt pop fwait movabs rex.RB (bad) icebp adc pop mov (bad) pop scas negb movabs rex.RX faddl int scas shrl add insb adc rex.RB mov mov mov out roll jmpq fst fcmovb sub cltd repnz pop add insb gs cmc sahf jns cmpsl lods ds mov mov hlt (bad) insb je out xor movsl test (bad) incl adc mov outsb jns (bad) enterq cmp cs (bad) insb jns lock shrl rex.WRX rex.RB rex.WXB adc jrcxz (bad) sti mov xchg js cs popfq (bad) ror rex.XB (bad) jns insb mov test insl pushfq rex.RX pop (bad) rex.RX mov out lods in pop mov out insl (bad) (bad) ds movabs sub add xor mov rex.W retq xor lods xchg movb and mov xor lock mov lods loope (bad) pushq (bad) xor (bad) pushfq fwait lods in mov cmpsb popfq pushfq (bad) callq insb xor cwtl int3 sub cli js jne xor pushq int3 rclb loop movabs cwtl jrcxz (bad) ds mov xor jmp xchg lock data16 pushfq rex.WRX and add mov xor xor (bad) movslq mov insb (bad) jmp scas (bad) lret mov mov icebp and (bad) (bad) cwtl (bad) cmp add mov fs (bad) cmp int out sub (bad) cwtl rex.W outsl adc rex.XB (bad) mov rex.RXB insl jle gs rex.RXB addr32 iret and imul nop sarb rex.WRX mov movabs jo mov sbb mov xchg (bad) movabs (bad) adc (bad) scas enterq or movsb mov sub add xor shrb (bad) js and je add scas sub mov outsl pop in jbe roll stos rex.X insb (bad) cld jg lock jno and mov cmp rex.WRB adc xor pop jno jle mov callq rcll callq rex.WR (bad) movslq pushfq pop pop or sbb jle fstpl (bad) mov jbe pushfq cmp (bad) (bad) shlb rex.RX shlb jo scas (bad) push in rolb mov neg lahf (bad) int xchg shrb movabs mov sbb rex.RXB pop jno jno cli lahf (bad) pop icebp mov (bad) adc add adc jl cli cmp xlat ja sahf int3 mov ficom lret and repnz and add mov (bad) cmp (bad) out (bad) or sub hlt pushfq ds xor movabs sbb test cltd fiadd xor mov movslq sbb mov clc (bad) jne movsb (bad) mov insl add hlt jno in jle movsl pushfq outsl cwtl insl rex.W lods ja adc popfq adc (bad) movsb insl data16 or sub cmp pushfq data16 xchg stos enterq push outsb movabs mov and fdivp (bad) hlt sbb scas subl test lahf insb (bad) in push push insl int3 push data16 insb mov mov test sbb insb cmp xor movsl fwait jb rex.WRXB pop movsl icebp stos fdivl fisttpl adc sbb mov int cmp rex.WXB rex.W loope or frstor mov mov push sub movabs es gs mov jge or insb sti cld rex.W mov mov (bad) mov (bad) stos test insb pop outsb cmpsl mov scas test movabs (bad) jne sbb outsb (bad) cmp in pop je (bad) cwtl xor popfq rex.RXB test pop fadd and add mov mov sahf adc int3 int sbb hlt cli cwtl repz hlt insb mov pop rex.RX in scas push iret adc leaveq enterq mov cmp (bad) dec jg add pop jle movabs pushq pop or xchg and popfq or jo jl cltd and movslq push (bad) or ds (bad) jl cld sub cli jb lods mov rex.WR sub fs rex.R (bad) fsubrl (bad) movsl sub test sbb mov xchg movabs scas test or mov (bad) sbb cmp pop repnz mov mov lods insl imul cltd imul cltd mov (bad) callq je pushq pop shrl pop sbb int3 cmovle (bad) jne sbb xchg out mov xor repz rex.RX sbb insl and pop movabs cmpsl push mov (bad) jl rclb adc (bad) (bad) (bad) add or int3 cmpsl scas repnz sub in xchg pop rex.RB rex.WR adc test xorl fist insb scas pop mov (bad) xlat out mov jns (bad) mov in (bad) sub jle (bad) sahf rex.W jg pop and mull (bad) xchg mov and test (bad) scas push adc test mov ss insl push insb (bad) pop fwait cmp movsl and adc outsb (bad) xor (bad) jl push jle lods rex.RB test in mov jb sbb fidivr rcll mov je xchg in decl cltd (bad) (bad) cmp rex.WX imul stos jge cmpsb iret rex.WXB rex.R sub hlt adc jne shlb pushq js pushfq scas cli xlat in (bad) (bad) (bad) scas jns rex.WRB jae mov ja shll pop scas rex.X jmpq insb jle jbe insb repnz pop mov outsb jl decb cmpsb pushfq subb pop adc cwtl clc (bad) push jrcxz imul callq outsb pushfq int test (bad) mov and jne lods (bad) jns rex.R pop adc (bad) nop icebp xchg and sbb cmc (bad) mov pushq insb in js mov fnstenv or (bad) int3 rex.WXB (bad) repz (bad) lods mov in add stos stc (bad) (bad) pop lods int3 in faddl in adc add (bad) sti (bad) adc movabs rex.WRXB es sub test add cli in xchg callq clc movabs mov cli (bad) lods fwait out adc movabs cld cmp sbb (bad) adc fsubl pop jle (bad) jno adc mov sub test add popfq stc imul mov rex.XB rex.WRB repz (bad) outsb mov cmp insl rex.RXB sbb pop fiadd (bad) sti jns (bad) push pushq sub rex.WRXB outsb cli orl sub xor (bad) mov pop cld out xlat sub sbb iret (bad) in (bad) shrb sub cwtl rex.RX rex.WRB sub (bad) pop mov cmpb (bad) cmpsl push (bad) enterq test stos cli fidiv movsb cmp fsubl jge mov or xor dec in pushfq ss test movsb rex.WR es pop mov loop cmc sub rex add mov iret cmp or mov rex.WB fs and in ss movsl cs lret imul jbe sbb pop cld sub (bad) popfq popfq mov (bad) (bad) cmp pop rex.WX mov out repnz insb int3 xor nop je push pop mov fisttp mov nop pop cwtl mov rex.B rcrl xchg add sahf cwtl (bad) vmovapd in imul xor fwait xlat insb (bad) xor retq cli push mov sub rex.WRX rex.XB jmp add (bad) out pushq mov sahf iret sub fistpll sahf fsubrs adc (bad) mov test adc callq push fnop outsl (bad) movabs mov movabs lods sti fcoml sub lods fmul mov sub adc adc stos sub out stc and stos pop fwait in test mov in repz lock mov sti sbb lea add je xor lahf jl pop rex.X adc mov sub push jrcxz sbb cmp and movabs mov xchg add insb pcmpeqb jne movsl lahf cmpsl cvtps2pd cmp out scas cmp insl and xchg xlat fisubr rolb scas jo cld je in mov mov xchg in outsb mov sub pushfq lods (bad) or (bad) mov sbb movsb jb movsl rex.WRB notb xlat rex fs mov pop movsb (bad) mov movsl and mov (bad) (bad) cli push (bad) je sub mov icebp sbb add (bad) stos mov cmc mov int mov jp cmp cwtl add cmp push movabs mov sarl ds imul rorb stos cmovp pushq callq (bad) imulb mov rex.WRX cmp lret (bad) outsb movabs sub (bad) mov sbbb mov mov mov (bad) mov in scas pop mov callq in rex.RX mov (bad) add in repnz repnz sub sti (bad) leaveq (bad) out popfq gs or and add int3 insb lods cwtl stc insl sbb or outsl stos adc movabs out loop (bad) cwtl lods movsl clc jo leaveq (bad) pop insb addr32 push push rex.R ds sbb or fisttp (bad) lods jrcxz lods (bad) stc fiadd sub cwtl jmpq out xor adc lret addr32 mov (bad) add fwait (bad) cld cs mov scas rex.B stos add (bad) push rex.WB (bad) frstor movabs movabs mov ja cmp (bad) (bad) pop jns or mov sbb xlat iret add or je loopne adc retq sbbl lock push stos (bad) int3 ss mov out (bad) outsb pop (bad) xlat mov imul add pop sahf push mov outsl xor xor cmpsb lods cli fldl jno adc mov sti insb fist mov (bad) or int3 sub mov mov push mov push hlt push pop repnz mov stc lods js push xchg mov lods and cld lret jno out callq pushq jle mov movabs nop mov je sbb loope scas (bad) (bad) outsb in mov push (bad) mov xchg movabs movsb nop cs push and push lahf test sahf movsl rex.WRB mov and pop mov ljmp add iret sub sub lods push rep movsb sub lods sti jmpq add add (bad) notb rex.WX rex.R cli movabs rex.WX mov fcomi test (bad) outsl popfq adc pop rex.RX jmp rex.WRX hlt popfq retq and (bad) rex.WRX pushfq jle popfq (bad) mov (bad) movabs (bad) fwait (bad) not rex.XB es add adc mov nop lret mov cltd and mov (bad) rex.X sbb adc xor movsb sahf cmpsb cs xor lea insl sti fdiv lea movabs or insb callq scas xor outsl cmpsb fucom data16 rex.WRXB mov (bad) sbb (bad) jb imul sbb out fsts jbe push cmp xor xchg imul push test movslq adc (bad) (bad) cmc and fs insl push cld (bad) cltd rex.RXB (bad) fs cli (bad) sub (bad) mov in sub nop (bad) mov sub leaveq and rex rex.WXB scas je cmc sub mov xchg (bad) push (bad) (bad) imul fcomps mov push (bad) mov fdivrs insl sub (bad) outsl cmp stc and mov rex.WX cltd lahf test fwait cmp int rex.RX mov lods in mov data16 (bad) (bad) ss (bad) movabs sub movabs je push xchg cltd mov scas fucomi hlt test xchg and test fs mov out mov cmp lret adc pushq sahf xor fiadd rex.X rex.WB (bad) ficomp movsb sub out retq stos cli clc cmp loope scas jne fwait test cltd xchg fmuls orb (bad) addr32 repnz cmp loopne mov (bad) loopne adc or mov mov jne jrcxz adc mov adc in sahf je movslq addr32 cli enterq mov and fwait (bad) test cmpsl retq lret and (bad) adc cmpsl mov pop (bad) cwtl add loope shrb push sub sub add out lods mov out stc test adc xor mov imulb decb pop lret rex.WX push shlb pop hlt mov movabs xchg (bad) enterq mov pop (bad) pop sti fldenv jne (bad) mulb (bad) xchg jmp sub lret lods enterq (bad) cltd add (bad) mov mov add xchg sti (bad) je fst and sub leaveq add movabs (bad) sahf xor in incl cmp mov callq jno pop stos (bad) sub sbbl in sbb lahf leaveq rex.WRXB and lods xor lock mov xor icebp lret adc sub fstp ljmp in std sub sbb scas jns add in (bad) (bad) push mov lret cld lods sbb pushfq loop pop out jl out sahf mov negb (bad) sub (bad) jnp xorl in add or jne cwtl callq in mulb lods (bad) fwait add pop mov (bad) xorb and jne adc fwait (bad) clc pushq sub push cmc (bad) rex.XB imul pop rex.WX retq and (bad) rex.W (bad) outsl rex.W sarl popfq mov pushfq mov adc mov movabs cltd jp (bad) iret in je jb (bad) shr sahf mov xlat mov test sub scas (bad) mov (bad) mov test jp loopne lods xor int3 xchg xor (bad) fisttpl std push add fstl loope stos js sub sub in or (bad) shrb rex jne in movsl cwtl add adc rex.RXB push (bad) pop cmpsb sbb xor (bad) lahf stc (bad) out pop xor (bad) rex.WX bnd lods xor or adc jbe sbb (bad) add (bad) je pushq sub hlt rex.R pop movsl (bad) leaveq fimul shrb jl sti out (bad) loopne cmp nop (bad) scas mov fdivs stos sbb sbb (bad) sti (bad) in xchg xor add sub int3 cmpsl xor fisttpl movsl pop add stos cs jne idivb pushq rolb mov push (bad) (bad) insl mov rex.RB mov jg sbb outsb or hlt sahf cmp clc jp movsb rex.WR rex.WRXB out and insb lahf sub adc fs stos test xor jne add iret adc movabs jae jo xchg imul negb in xor (bad) (bad) add cmp lods mov int3 fisubr in scas and out mov popfq jo sbb (bad) jbe pop mov (bad) jl jle leaveq fsubrs popfq sahf lret outsb (bad) rex.WRB rex.WR cmp nop data16 int jmpq je mov (bad) ds sahf add insb jmpq vmovapd lock lock sti add loop cwtl mov mov sbb pop cld mov es pop jmpq stos (bad) cltd (bad) pushq lahf push cmpsb mov jns shrb movsb push in stc mov and (bad) callq xorl fnstenv jne mov cli cmp loopne lock stos (bad) adc cld (bad) pushq movabs (bad) xor addr32 addr32 adc rex.RB cwtl fidiv rex.WRX mov scas scas jo add (bad) sub mov int3 adc mov out scas movabs pushfq fsubr (bad) test int and nop mov rex.WRB rex.WR (bad) and out rex.WRXB int adc rex.R jne xlat cmpsl lods cs loopne cmp nop lea sahf ficompl lret (bad) rex.WX adc imul rex.X lods sbb (bad) (bad) lahf add int mov xchg sbb fistp fistpl out cld out (bad) jo sub adc mov pushq scas ss cli out (bad) out (bad) or (bad) rex.R add int and xor adc rex.RB sub nop push retq mov push rex.XB jnp incl retq (bad) cli in jo xchg pushq or mov mov (bad) cld adc mov or movb pop out movslq mov callq and fstpt (bad) jp test cmp fwait insl mov (bad) iret add mov or (bad) cmp movslq mov mov movsb adc mov fidivrl out pop in in xor ficom add test add adc mov pop subl xchg cltd mov sub pop jo imul std lock int movsb rex.WRXB cli rex.W data16 lods and sub shrl or cmpsl pushq leaveq out rex.WRX loopne rex.WRB xor pop and rex.RB rex.WRX adc gs sbb sbb xor (bad) callq cmp fisttpll stos int3 xor insl jb jno jmp scas rex fwait mov pop and rex.WRX clc stc mov sub ror sbb cmp in stos sub nop mov pop rex.RX and test (bad) shrl in or and test (bad) jb int3 imul scas lods pop or mov sbb pop mov jl enterq (bad) (bad) lahf (bad) callq lods add add (bad) mov (bad) test adc divl addr32 rex.WB (bad) lods push or in xlat sbb (bad) mull sbb fmul cmp mov es or stos loop (bad) out add in jg clc and pop xchg rex.XB (bad) (bad) pop (bad) divl or leaveq (bad) sti pushfq rex.WX popfq sbb mov movabs sbb pop mov jne clc insb push sbb and imul pushfq rex.RB rex.W adc xor fidiv test add rcrb lahf rcl xchg cmp or mov lret jno je imul rex.RB mov adcl mov mov jl sub or mov mov mov (bad) jmp enterq jl movabs (bad) gs (bad) adc scas movabs je (bad) imull mov jae fidiv mov xlat pop and (bad) mov movb lods adc push retq rex.WRX adc and rclb sarl (bad) and repz pop mov nop enterq mov or rex.WX fcoml (bad) lahf retq pushq cli (bad) sbb (bad) (bad) repz sbbb mov (bad) lock loopne je sub pop cmc jp,pt retq enterq rex.RX out jge mov lret std (bad) sbb xor (bad) pop jbe fwait movslq mov rex.WX es push jno push (bad) mov stos stos iret pop popfq std cli je mov or pop mov adc sbb cli mov ja (bad) mov sbb es retq sbb mov out lock pop (bad) (bad) cmpsb jns jge (bad) outsl movsb adc and cmp mov or loop mov (bad) pushq (bad) mov mov fildll in add add callq es data16 movd xrelease stos sub (bad) adc out pushfq (bad) xchg fwait cmp mov push repnz adc (bad) (bad) mov in data16 enterq stc (bad) cli (bad) std mov in (bad) or rex.W ds rex.X and or out and add mov adc and xor rclb stos (bad) cli loopne rolb jge sti jmpq (bad) fnsave lahf in push or (bad) push (bad) mov popfq (bad) (bad) test callq out (bad) (bad) mov lods (bad) mov (bad) mov out cmp add jns or add (bad) in (bad) loop push xor xlat lock (bad) mov (bad) add in mov cmp out adc (bad) imul sti rex jno (bad) adc rex.WXB (bad) add jb and xchg and lock dec (bad) xor testl movsl adc insl jae (bad) pop mov (bad) sbb lahf cli std cmc stos mov add rex.WRX jmp adc insl fs (bad) rex.WB rex.RB (bad) add sbb scas add stos lods (bad) in (bad) mov mov sbb (bad) and sub (bad) rex.W gs mov xlat fdivrp sahf in imulb mov rex.WXB lock mov add leaveq cmc iret movsb mov sbb cmp rex.R sbb sti cmp rex.WX rex cwtl jno (bad) gs sbb add sub mov push fcoml mov add mov (bad) add jp (bad) sub jbe cs cs fistp test lods sbb xchg fnsave insl sub je mov (bad) (bad) fdivs (bad) rex.R lods mov sub gs add sbb jbe in cs adc in rex.RX (bad) (bad) mov in xlat mov ss adc stos outsb xchg pushq cld int3 jrcxz push cmp imul lock rex.R mov xor add jmpq stos test cmp (bad) mov rex.WRX sub rex.WRB test lret add lret jnp test repz out icebp xsavec xor mov xchg cmp pop mov xor pop (bad) sub out cltd pushfq scas shr or scas (bad) or imul adc mov adc jnp in icebp lea movslq mov stc movsb rex.WR sbb mov push loope adc lret push mov (bad) sbbl xor cmpsl lret insl jmp xor pop rex xor sub (bad) (bad) orb enterq orl stos out fidivr out sub add mov in (bad) add mov fisttp loopne sbb ja rex testb out out (bad) loop cmc sbb or mov or xor adc mov (bad) mov xor pushq ss xchg sahf scas mov jp jb sub stc (bad) rex.WXB movabs (bad) ficompl lea push xchg test xor jae std sbb ss callq gs (bad) out and (bad) and cmpsl enterq mov (bad) sbb rex.RB lahf push mov xchg int3 and lahf insl xor and cli addr32 scas rcrb rex.WR cld sub int3 sbb test add or (bad) rcrl (bad) sti adc (bad) and or insl add sub mov callq mov scas test rex.R retq lret (bad) rex.WRX in cli and setns cmpsb mov cmpsl int3 (bad) (bad) cmp in in cwtl sbb mov cmc leaveq movsl add or test outsb add add (bad) fdivs nop stc stos cli ds movsl pushfq mov sub je (bad) xchg scas adc add cmp fs loope pop mov cmp mov jbe test clc xchg and sub pushfq std test xor cmp insb (bad) add and (bad) ss lods add adc jns (bad) retq sbb mov test add leaveq adc enterq adc xor cmp xchg jns cld fiadd (bad) pop pushfq push adc lret and cli leaveq jmpq std rex.RXB outsl mov (bad) enterq loopne fisub (bad) mov jmpq scas and insl pushq test jle sahf int icebp cld mov (bad) push imul mov cmc sub jmp (bad) lret jrcxz leaveq (bad) cmc rex.WX int3 add ss in mov mov and and xchg in and mov fsubr lret test in addb sbb mov pushfq jo stos shlb adc xor sub or adc rex.WRXB xchg jb mov test jrcxz loop pushq push in stos add sahf fnstcw in mov cltd mov add stos stc sub js xor mov (bad) movsb adc clc cmp and cmp rex.X adc (bad) mov pop (bad) jne iret insb (bad) rex.WRXB shrb pushq cs stos or and cmpsb mov jb (bad) pushq movsb sub xchg fldl pushfq and pop jno lock fs (bad) (bad) mov and shlb iret test xchg je fnop mov sub mov out insb or adc (bad) (bad) (bad) and out adc test out cmc lods scas movslq mov pushq jmp jl cld xor test cwtl fcoms int hlt lods adc cli mov sbb lock lret mov (bad) rolb (bad) xchg movslq icebp rex.W cwtl (bad) mov sub (bad) cmp and xor (bad) jmp scas rex.R mov jrcxz pop out adc lock sbb (bad) sbb sbb in test add movsb rclb shll mov sbb sbb je in cld mov rclb int cltd jge lock pushq (bad) loope rex.RX cld add fwait sub mov fiaddl mov stc sahf popfq sub fucomip pop add (bad) loopne iret (bad) popfq jb enterq mov insb (bad) push in or out or mov mov or lahf outsb lret callq jmp lret (bad) pushq rex.W sbb sbb add sub ds retq imul rex.WR push out and imulb rex.WRXB test adc or mov lock movabs lea test in or (bad) (bad) imul mov (bad) (bad) sbb or sbb jb jne sub xor (bad) mov sbb xor sbb (bad) (bad) mov rex.W scas mov test mov sub (bad) push je imul ds (bad) enterq jg pop rolb and int3 pop pushfq rex.R movabs (bad) pushq cmp sbb mov in lock jmp lods pushfq (bad) add sub jns iret rol mov insl sub adc in shlb pushq in mov adc gs jae insb sbb rorl cmp cmp (bad) nop gs ss test out std cld mov rex.R xchg (bad) jmp adc xchg mov subl xor jb push (bad) loope test out xor ja (bad) leaveq repz sbb lods stc and imul sbbb (bad) in mov mov gs int sub mov movsb out cmc in or movabs (bad) jl icebp sbb out (bad) je hlt sub scas and mov add cmp mov rex.WB and add insb or (bad) jge sbb test sub lock xor (bad) imul mov mov adc xchg sahf xlat outsb test (bad) loop xchg mov sbb mov cmp callq test (bad) test lret (bad) sar out leaveq stos lret mov (bad) push cmp rcll (bad) test out xchg in lods rex.XB rex.W es pop (bad) (bad) sub xor xor add lahf mov (bad) xor xor ficoml test cwtl mov xor sbb mov mov test mov sbb movabs mov fwait xchg add mov repz mov (bad) rex.WRX xchg mov std xchg in mov (bad) mov (bad) sub (bad) cmc popfq rex.RXB mov imul scas cltd insb movabs jb cmpsb js js sub fcoml jb rex.RXB test cmp sub mov fwait js (bad) lods (bad) jne fcoml pop out (bad) loopne (bad) sub add xor int (bad) mov cmp mov pushq ss mov (bad) push cld jnp pop sti in out xchg or and (bad) rcr hlt and jno (bad) cmpsb sbbl imul repz adc or iret (bad) xor add cmp hlt mov (bad) int cmpsb pop fidiv cs test pop test (bad) mov fs je (bad) std stc xchg enterq adc (bad) in and jb rex.X test xor stos lret add std sahf rex.WRX (bad) adc jb ja jb movabs mov mov insl hlt ficom (bad) pop sbb std or fisubr hlt rolb shrb cmp fidivl icebp lahf mov or rex.WRXB cmp add out or test mov enterq vunpcklpd adc popfq loop mov adc pushq jle pop mov jge add sub rex.WR push sub (bad) add adc iret repz js add and rex.XB out sbb mov rex.WB xor xchg sysexit jl adc cli fnop (bad) callq pop (bad) lret lret js mov out rex.RXB add or sub adc (bad) loopne (bad) adc in or add cmpsb (bad) lahf pushq (bad) adc (bad) xor sbb rex.WXB icebp mov repnz outsb mov cs and cmp lods lret negb callq jne and cltd popfq pushq jno in mov rex.WR pushfq in sub xchg pop sahf outsb test add jp sub xchg js lea mov pushq (bad) mov add xor ficomp rex.XB sahf mov cmpsb xor (bad) pop xchg xchg fisttp sub loope (bad) (bad) and cmp mov xor idiv popfq mov cli (bad) mov cltd rex.WB or sahf imul xor cs popfq mov or outsl sbb or xor sub rex.XB sub rex.RB xchg insl (bad) (bad) je in or xor lods js xor in or jae jl lahf test pushq rex movabs cmp (bad) loopne setp je scas rex.WR cs callq popfq hlt jg xchg (bad) (bad) adc xchg pop cmp loopne shr stos mov (bad) retq sbb (bad) or (bad) xor scas pushfq lahf sti out mov callq rex.WB pop and mov mov xchg push ror leaveq (bad) rex.WRXB add shrl add in (bad) (bad) (bad) in mov mov adc sub (bad) out stc retq in xchg xchg adc or pushq in or outsl jle ja sub xchg jo (bad) es movabs (bad) stc nop cltd sbb (bad) mov ljmp imul adc xor std (bad) mov and insb enterq cmp add adc mov (bad) mov loope rex.XB stos imul sti fldln2 repnz clc jmp test mov movabs fsubp add mov rex.RXB out xchg (bad) sti cmp or jne leavew (bad) mov in or (bad) jrcxz adc cmp rex.RB (bad) jmp nop (bad) xor cmp cld test data16 (bad) in fsubs std (bad) xchg or scas (bad) stc cli out jae or (bad) (bad) and leaveq pop test scas add callq jrcxz rex.WRXB es or fnsave rex.RXB sub rex.RX and (bad) scas (bad) cli jmp lahf jg sbb test sbb in cmp movsl mov (bad) jp jbe adc and (bad) pushq rex.WRB lret enterq mov mov pop sub fwait add leaveq or lock (bad) std jbe ja jle repz jrcxz js mov cmp cld in jo,pn mov jmpq xlat cmc out mov cs cmpsl sbb in (bad) sti (bad) (bad) ja mov push pop mov pop sahf sub jmpq stos mov rex.B mov fdivs leaveq sub xor pop pushfq mov scas (bad) callq (bad) xor sbb xor xchg and js rex.RX rclb fwait sbb movslq (bad) mov movabs cli (bad) cmp fild insb jp (bad) xor fcmovnbe pop mov fsts (bad) xchg int3 scas (bad) mov or (bad) in (bad) adc in ss jbe lahf (bad) fdiv stos rex.RB test and sbb (bad) mov sub sub lret mov xor mov clc jb bswap lret (bad) sarl xchg int3 mov insb fucom fcmovnu (bad) fidivr clc sub (bad) mov add movsl sti xor decb jrcxz sub jb shrl cmp movabs mov adc mov iret in adc movsl sub stos sub fyl2xp1 push and hlt js and fwait jg mov (bad) (bad) repz loop (bad) jne sub testl rex.XB cmpsb fsubrs (bad) (bad) pushq ss (bad) (bad) faddp mov add sub add fxch rex.W (bad) popfq std sar adc ja (bad) jp pop xor sub adc or cmpsl add (bad) mov cltd (bad) (bad) sti xor movsb pushq stos sbb imul mov (bad) mov add fs lret add ds je push cmp (bad) frstor pushfq pop (bad) cwtl cmp jl rorl push and (bad) sub in fucomip jg lret mov loope cmp ficoml fldenv (bad) callq in retq xor rex.RX movslq scas push pop cmp repnz lods sub mov (bad) scas retq repz add int3 (bad) stos pushfq cld sub jle incl int3 lret sbb mov (bad) push imul out es shlb (bad) cmp pop sub or mov mov rex.W lods fsubr (bad) stos fimul jns sbb retq or (bad) mov xchg sahf mov fiadd repnz (bad) xor lret mov loop and cmp test sbb cli fiaddl jo xor and rex fidiv stc cmpsl retq xor sbb mov int3 (bad) cs iret scas adc adc xor mov mov or jbe and mov jne pop ss sub adc insl mov adc or stos rex.B push rex.WRX xchg rex.WRXB outsb scas stc pushq (bad) pop or cmp movsl sub movabs fidivrl push outsb (bad) add lahf cli mov mov cmp mov loop sub xchg cmp divl div xchg insl cmp insl fs bnd jbe jmp sarl stc mov sbb cld test jne cld sub (bad) ljmp clc xorl movabs xor mov nop stos pop adc icebp stos pop jo fwait sub mov xchg fiadd sub rex.WX pop add sbb (bad) push movzwl js xchg sub jmp (bad) movsl sti fdivr addr32 or not iret and add cli jmpq sti jns cmp je out pop push pushfq iret adc insl sti fist stos adc pushq mov sub insb xchg push callq jmpq outsb callq add mov movsb (bad) (bad) rex.W mov mov fdivrs rex.WRX (bad) test out sahf push divb (bad) (bad) rex.B lahf in add jl fiadd or es rex.XB jnp lret add add std movabs (bad) mov cld jg mov fidiv pop rex.RX stos fmull incb ficomp pop iret es (bad) int mov fcomps jbe sbb test stos add lret out cld sub sti (bad) add js movb stc (bad) rex.X (bad) lcall clc movabs mov mov jmp in fmull jo hlt xchg shll and (bad) and (bad) xchg mov leaveq add sub (bad) stc sub stc cmp out fdiv mov xor (bad) adc (bad) fldl xor add repnz js (bad) cmp fsubrl mov imul lods sub (bad) movsb rex.RX and or sub add fwait add add add out add add mov (bad) outsb adc test out callq (bad) test mov scas (bad) ror push xchg (bad) adc lret in movsl iret and cmc jp test sahf and xchg sar (bad) ficom (bad) or sub (bad) adc add cmc sbb repz fsubp sbb (bad) (bad) cmp ja (bad) popfq rex.WRB (bad) icebp sub cli out mov fiadd (bad) hlt rclb and xor pop in (bad) xchg fdivr sub fucomip or fnsave loop (bad) stos (bad) cld adc imul scas scas rex.XB mov cmpsb (bad) rex.WRX repz cmp fwait (bad) lods cli mov push cwtl mov jo movslq mov jb pushq data16 cwtl fnstcw xor cvtps2pd rex.W xchg xchg adc (bad) iret mov add add cmp pushq nop cmpsb jae rex.WR mov mov xor (bad) out xor enterq pushfq (bad) add movslq in mov jns jno jl (bad) test cmp and (bad) (bad) mov add pop out loopne (bad) (bad) or (bad) loope imul xor std (bad) (bad) scas roll lret hlt xchg pop in add push sbb (bad) lahf sub cmpsb test sub shrb and in add pushq in (bad) mov xor (bad) push (bad) in repnz and movabs add sub cli adc push or xor jae and rex.R callq cwtl (bad) mov add (bad) sub (bad) pushfq out push push scas pushq leaveq std jnp and int3 xchg rex.X cld add lods fdivrs sbb sub fs adc (bad) mov add cld lods clc mov scas and fcoms xchg sbb (bad) negl in or std cmpsl (bad) xor adc repnz mulb adc sbb mov pop fsubrp jns rex.WR out sti in or xor cmp push or int3 jrcxz cmc push repz cmp std mov mov cld mov rex.WRXB add mov or xor cld int3 sbb (bad) cli (bad) subl scas rclb and test mov sarb rcrl cmp stos fidiv mov stos test (bad) (bad) (bad) pushq mov mov mov (bad) fmuls mov jl clc stos cwtl (bad) cli in test adc ja rex.WRX retq xor out jle movslq mov adc (bad) or jne jbe fdivrl (bad) (bad) ficompl xor lahf xlat fnstsw hlt sbb pop repz jo or mov scas cli (bad) mov insb (bad) (bad) fwait sti out leaveq pop mov adc cmp sahf fdivrp cmp adc icebp (bad) out clc or cmp rex.XB or cmp rex.WR rex.WRX sbb xor hlt push test jmp and or xor pop stc cmp add out mov mov jrcxz sarl (bad) sbb movsb xchg or fsubl sbb sbb and add negl sti pop adc pushfq lret insb fbstp mov fsubrl cmp fs addr32 out jmpq rex.WRX cmpsl fsts and jrcxz outsl (bad) movslq (bad) out push mov mov (bad) cmp cwtl (bad) xor sub js xchg (bad) mov cmpsl mov (bad) test movabs mov fcoml sahf enterq cmp loop (bad) adc movsb test sbb test (bad) sub repnz gs rex.B stc (bad) jae adc mov imul xor lea rex.W rex.RXB (bad) imul xor rex.X (bad) cmp jae (bad) int3 mov mov cltd testl rex.WRX imul outsb jb (bad) (bad) loop loopne sbb xlat lcall cmp enterq jmpq adc mov (bad) scas loope in sbb movsb outsb mov push cs test leaveq sbb xchg mov (bad) mov and add cs outsb cmpsl jo out (bad) mov movsb ficompl rex.X (bad) in loop test mov mov in fisubrl loop stos shrb lods add (bad) ds jbe cld out (bad) jrcxz mov sub sbb out repnz sbb push jo jb or cmp cmp (bad) hlt and in divb (bad) jb rex.WX or imul xor add (bad) sub jl repz push cmpsb scas mov outsl sahf (bad) out mov cmp jne,pn pop ss xor repz xorl lods sbb enterq data16 repz mov sub sbb or (bad) scas ss pop (bad) push add shrb in (bad) mov (bad) int3 out test sub in sub and js sbb loop (bad) (bad) bnd frstor xor cs xchg nop rex.RX lods mov fsubl (bad) (bad) xor fwait (bad) mov rex.WRB sub icebp (bad) jge rex.WR rex.RB ds (bad) (bad) movabs mov lods adc mov jg add int jmp mov ficomp mov int3 add pushfq subb out mov cld in adc mov outsb cmp (bad) adc (bad) imul adc (bad) mov test cmp (bad) jb sar data16 inc xchg (bad) sbb pushq rclb xchg in mov or in fldcw (bad) test fwait (bad) lock sahf sbb cwtl jbe popfq sarl cmp add jne mov mov movabs xchg pushfq pop mov jle adc mov mov cwtl (bad) cmp jl fsubrl or cwtl hlt add sbb cwtl xor mov (bad) add pop cli rex.WX add (bad) sub jne sbb movabs sub cli xor in movabs sub cli fidivrl fmuls (bad) ror push movabs lret add cmc stc sub rex.WRXB xchg adc stos imul adcl pop shrl test scas push repz shrl outsl jp fstps add cmp sbb xor ss hlt insb popfq xchg cmp and cmpsl rex.WRB sti sbb out pop in ss push sahf mov mov pop rex.RXB repnz movsb xor lea adc (bad) repz pushq (bad) and rex.WRX (bad) mov rex.W fldcw (bad) movsl int3 pop sub (bad) (bad) mov in btr mov paddw in movsl pushq out imul xor rex.RB pop scas (bad) callq jb scas fdivp scas mov push jbe (bad) repnz scas jle test (bad) sti xchg mov movabs sbb jno pushq (bad) (bad) lock xor (bad) xor in pop test mov adc movsl and rclb (bad) clc mov mov lea (bad) push test add sti in rex.WRXB rex.WRB pop fcomi sbb mov rex.XB lock pop lods cltd jbe out adc (bad) rolb mov ss mov enterq fcompl stos stc fnsetpm(287 stos mov jae xchg sbb int3 sub enterq and rex.WXB (bad) (bad) add adc lret (bad) and insl push rex.XB (bad) (bad) sub (bad) fmull rex.WR movsb sbb adc insb (bad) xchg sub int3 sarb fst insl pop lock (bad) and or fdiv lods fdivr add insb jmp jae sbb lods or xchg pop movabs or frstor jle movsb fdiv cs pop (bad) (bad) popfq push (bad) (bad) (bad) mov pushfq rex jo hlt adc mov fs jb mov leaveq mov test (bad) (bad) clc mov rex.WRXB adc jmp and loope mov sub mov icebp (bad) xchg fnsave (bad) callq adc clc rex.WRB cwtl callq sub popfq iret cmp cwtl movabs js (bad) rex.RX mov imul push in or lods mov sahf mov in mov (bad) retq lahf adc rex.B xchg mov icebp (bad) loop negl sahf mov xchg cmp rex.B pushfq iret lea jbe lods sub je xchg vrsqrtss (bad) lea pop cmp sub push hlt cli rex.WRXB fsub adc test xor or pop lahf sub (bad) mov movl fdivrs xchg (bad) xor lret fadd pop jne lods mov (bad) cltd or lods mov out (bad) out sbb jmp rex sbb cwtl jg or imul add insl xlat mov pushfq adc mov (bad) lods xchg and lods (bad) movabs fisubr movslq (bad) xor sti cmp lods jl pushq jle (bad) fidiv retq (bad) xor cmp xchg mov jmpq push addr32 (bad) int3 jp int3 adc rex.W lock (bad) push pushq (bad) rex.WR fdivr movabs cmp lods jne rorl xchg addr32 sub adc (bad) data16 pop frstor mov jle sbb jnp and push icebp lods (bad) xchg pop retq jrcxz lods hlt cmp sarl cltd test orl lods jle int3 out popfq cltd lea fdivl cmp mov sub pushq (bad) pop mov and rex.WRXB test rcrb sub push xchg mov mov xor imul retq shrl sub rex.WRXB add lods mov loopne test lret retq mov sti roll lods outsl callq lods sar out cli movabs sub scas movslq insb enterq or (bad) jne mov lahf add adc fist sub or lahf ss pop int (bad) cmp test (bad) cwtl and mov lods (bad) rex.X nop rcrl xor test (bad) mov fwait callq retq cwtl cld icebp and adc or xchg (bad) push and mov mov xor test and jmpq (bad) sub add callq xchg sbb fidiv cmp rex.WB rex.RX pushq push sub (bad) rorb and rex.WB pop mov iret sahf rex.WRXB data16 (bad) mov xor movsl or mov lods (bad) shlb xor scas adc mov lods mov stc (bad) clc lods or sbb lret pushfq es sti (bad) add (bad) xchg rex.X adc lods or rex.RX stos test movslq cmp mov or add subl (bad) out (bad) rex.WX rex.RB sub xor (bad) mov jp push cmp shrb out test adc (bad) sub xor ja mov outsl xchg out sbb lods and cmp lods jge and lods (bad) push cwtl pushq xchg loop pop rex.R or adc stc jmpq cli push lods rcll mov add loopne fsubrs mov stos jo lea or es in pop jrcxz movabs or mov mov adcl imul (bad) lods or ds rex.WRB ror jge mov rex.XB lret push xor fistl pop movsl movabs and xchg jmp push hlt xor rex.WXB jae test pushq push lods decl cltd mov std lods pop jae out mov retq lods fnop mov (bad) rex.WB or test scas lret scas cmpsb jo cmc or xor lods test loop mov (bad) jmpq rex.WRB (bad) mov xchg rex.WB xor rex.RX lods lret je fcom pop addr32 movsb jp cs insb and mov lods int3 mov test lods imul lods (bad) or sarb mov (bad) cmc mov (bad) mov fwait and int je lods jmp (bad) jo loop lods divb mov rex.RB (bad) mov rex.RXB xor push add in retq lods sub pop mov adc sbb fstl mov retq jbe jbe xchg cli out jmp sub add lret (bad) cld lods adc out (bad) mov shll int3 test add adc (bad) movabs (bad) faddl jno sub fucomi add mov movabs (bad) jae mov movsl pushq jo jp xchg rorb mov mov int3 cmpsb pop xorl (bad) (bad) xchg mov or in mov add lods (bad) cmp rex sub rorl pop mov (bad) int3 (bad) stos jg movabs subb mov rorl fbstp mov (bad) clc rex.RXB lods cmp pop (bad) shll add adc lock xchg lods (bad) rex.W sub lods test repnz out adc lods cwtl cmc repz mov mov lods xchg iret stos xchg lods loope lods retq shl mov push (bad) loopne fnsave (bad) (bad) or (bad) lret loopne xor ss sub pushq (bad) pushfq jmp out stos mov push callq sub or (bad) push lods jne mov cmp fisubr test lods rex.WXB ja sub cmp lods push (bad) (bad) jp or rex.WR cli sub pop mov (bad) or lods xchg movslq (bad) in nop movsb jge lods pushq std in (bad) mov lret (bad) out leaveq pop rex.WR cld sbb (bad) pop pop xor (bad) pop (bad) (bad) sbb jns sub rex.R rex.XB js icebp rex.WR ds (bad) popfq mov test xor jge cwtl lods test pop mov sub cmp (bad) push and lods mov rex.WR stos lods cwtl add adc mov lods pop sub mov lods notb mov xchg scas pop mov insb jns jne nop fs adc mov imul rex.RX out mov iret test mov movsl cli stc lods faddl (bad) mov xor outsl or or mov jl cmp (bad) addr32 lods xchg sti or pop (bad) lods (bad) rorl stos pop push sub (bad) push mov mov lods rex.WX addr32 lods adc (bad) mov mov mov in ja pop stos xchg movabs test lods or (bad) mov mov jp cmc std or ds idivb (bad) mov sbb pop (bad) lods jb rcrb rex imul pop sub mov (bad) out add (bad) mov jge or callq (bad) (bad) out fsts callq (bad) mov pushfq (bad) jns lods sbbb fcoms rex.WRXB mov fldcw cmp xchg test in xor fcmovb mov in roll cs lods mov mov rex.R cs rex.W test xor or in mov pop rcrb cmc xchg popfq mov and stos rorb (bad) mull stc lods xor sti rex.R pushq sbb insb cmp gs sub xor cmp mov push jmp ja add rex.WR rex.WRX in xchg mov (bad) in adc nop scas rex.W sar xchg imul fldt sahf js adc (bad) rex.B (bad) pushfq rex.WRX pushq scas insl mov lret jbe callq cwtl (bad) sbb iret subb jne rex.RB xor sahf or (bad) and xor mov (bad) sub (bad) sub mov sbb push jle int3 or xor in mov push in cmp sbb mov sub rex.XB or adc movsb sbb rex.WRX sahf lods fcoms int js (bad) mov push (bad) insl lods pushq or xchg adc lods in jae and lods sbb mov mov scas fisttpl out int3 fsubr lods pop pop callq sub cli cmpl xor sbb mov cmp stos mov (bad) imul out push lods pushfq pushfq je or lods rex.WRXB jb lods js mov retq stos mov mov add mov test test cli sub pop (bad) sbb stos mov sub out stos adc scas or movabs jns mov rex.B enterq pop movabs xchg outsl frstor (bad) enterq (bad) movsb xchg lahf sub pop sub movslq rol xchg rex.XB scas (bad) and jo lods or (bad) retq mov mov adc (bad) jrcxz scas push scas imul lahf mov mov sub sbb xor repnz or (bad) jb sbb sub (bad) jge movabs pop cmc hlt jge xor jmp lods adc add lods rex.WRXB (bad) scas in sub lock fs enterq (bad) scas sti rex.WRB xlat rex.WXB (bad) lods add (bad) fs cmp pushq xor scas (bad) (bad) insl shl fisubrl rex.RX rex.WRB callq add (bad) rex.W sahf mov jbe rex.R and scas add rex.WR xchg jp lahf add rex.R sub add add sub sti jp cmp add or add mov rex.WB add repnz sarb and stos loopne mov nop scas loop pop iret (bad) cmp loopne shr leaveq add cld rex.X (bad) sub mov lahf fs mov pop sbb (bad) cli adc pushfq imul lods fadds cmp or (bad) (bad) rex.XB loop test in sbb fbstp sub rex.B in jns pop (bad) movabs mov sti pop (bad) sarb sbb push adc lahf add xchg jo movabs jg lods sub (bad) repnz jae test imul lods (bad) roll sahf mov lods int (bad) jp cltd lods jae in fiadd ror and or and repnz sbb sbb cli stos rex.WXB (bad) retq and hlt cs push xchg lret mov sub shrl sub int3 test imul movsb pop adc jl jbe lock mov sub adc lods out or stos xor sub (bad) retq mov cld out mov (bad) pushq adc rex.WRXB mov mov add addb (bad) rex.WRB rex.WR fldcw jrcxz jnp adc sub (bad) jae cs je xchg clc sub mov jbe out (bad) insl js (bad) int push mov sub insb test (bad) rex.X imul cltd mov (bad) movabs fadds rcrl push cmp scas (bad) insl (bad) rclb sub mov jae xor adc cmpb (bad) jnp rex.WX mov sub fwait cwtl mov test test scas mov (bad) scas retq fiadd add and stos cwtl imul insb cmpsl sub repnz movabs cwtl jp cmp retq movsb stc mov scas sub sbb pop (bad) adc sub and (bad) in jb xchg (bad) sub sbb mov scas jg (bad) jns pop fistpl (bad) iret pushfq pushfq and test xor sti scas push je jp mov rex.WXB cld movabs push mov in rex.WRX movzbl sub jae rex.R repz sub retq ja cmp test lret jge movslq int3 jo je (bad) test push imull in adc jne in mov (bad) testb rcrb je mov xchg adc mov loope (bad) adc lret testl rcr insb (bad) jno (bad) stos mov stos addr32 push or mov (bad) out push mov in sbb insl or push sahf mov jb,pn push xor retq stos scas xor xchg orb movabs adc out mov push jns loop cmc test xor or push mov cmp xor mov (bad) sahf int outsb rex.B test add retq (bad) (bad) jmpq subb or mov adc stos add jo cwtl fnstenv (bad) jno roll mov cmpsb xchg int3 and rex.WRB out (bad) mov stos mov rolb shll retq sub retq sbb movabs adc div test fimull (bad) je fs int3 jns sbb cld std clc rex.RXB gs (bad) int3 push int lods rex.RXB mov mov jbe test push rex.RXB mov jmp mov (bad) repnz xor jo or sti fnstcw xor test retq ds scas adc retq movabs xor movabs incl rex.WX insb lret and mov decb xor or push (bad) (bad) mov adc rol lahf add cld or (bad) cltd cwtl adc push scas callq out push cmp and sub lods rex.XB cltd (bad) push push mov clc pop jae shlb jne outsb cld rex.WRXB lods int xor test fidivl mov insl jnp rex.W cmp retq sub rex.WB mov es rex.WR jo (bad) movabs in (bad) rex.RB movabs lahf sti lods rclb lret push mov sbb mov in subl cmp mov repz jns lods scas xchg rex.W lods push (bad) lods movabs cld jo leaveq scas lods retq xchg and xor push and jge js jg (bad) (bad) and lods insl (bad) mov cltd lods (bad) rex.RX add movsl shrl out pop pop (bad) test (bad) sarb scas mov gs jg sub movsl sub mov sbb (bad) (bad) in rex.WR rex.WX jne (bad) repz mov xor add mov mov pushq stos mov mov ficompl pcmpgtd jnp xchg test loope scas sub add sbb adc movabs mov popq and callq lods pushq rol adc stc rcrl or hlt push (bad) mov xor rex.B adc pushq xchg mov (bad) or add sub in adc sub test fdivrs int fisttpl test jbe mov in push je insb int in in jne xchg mov rex.WX pushq jl rex.WB cs in pop xlat mov xchg xor or shrb fnstenv insb out or int3 sub mov (bad) outsl out pop movsb cwtl sub insb callq sub iret mov in rcrb fidivl (bad) rex.WRX int sbb in mov sub sub ja pop or mov sub in mov (bad) sub out push sub out insb jl retq cs out jno rex.R (bad) fsubrs stc fisubl xchg pushq mov jmpq jmpq mov cmp ss sub out adc mov in push or out test insb fs in mov xchg mov int3 insl int3 (bad) in pop loop (bad) out in enterq (bad) outsb insb movsb test cmpsl out adc mov mov push sub fisubl fdivrl (bad) sahf mov and std nop mov lret adc push xor incb mov jno mov or fldcw in in (bad) lret rex.R insl out cld sub out pop cmc mov shrb mull add in sbb lods cwtl add sbb adc test pop adc sub add mov (bad) addr32 jno jne cmp (bad) jl int3 push or fimull cmp out jne jno cmp xor insb jae out and cld cs cmp sub (bad) adc rex.R and mov rex.RXB xchg mov shr mov insb ficomp stc pop faddl xchg sub cmp (bad) movsl mov xchg adc pop (bad) (bad) sub outsb (bad) icebp mov in cmc (bad) insb cmp pop (bad) mov mov and xor sub xor or adc rex.WR and insb gs cmp fdivl int3 sbb or test and pop cmp in callq add lods pop sbb and jl sub jbe or jo (bad) hlt fldl movabs fdivs fcmovu mov insl xchg mov xchg leaveq sbb addr32 xchg cld out lods jae hlt out add out (bad) xor es scas enterq ds or loop lahf push out (bad) lods jno mov rex.RXB sbb mov shrl movabs or stos mov insb jne push lahf mov mov (bad) lods clc push cld fincstp lods nop and (bad) (bad) fs add lods mov orb cs lods rcrl jbe (bad) pushq ficompl (bad) outsb movabs sub (bad) in sbb sbb xor xor movabs fsts xchg shlb pop mov lods (bad) jae sarl nop movslq adc lods jrcxz adc jle stos xchg movabs push add js movabs (bad) int outsl add mov sub mov adc cmc fmuls in mov pushq addb in roll lods (bad) fsincos (bad) (bad) scas push lock sbb lods sbb add idivb (bad) fidiv lods pop movsl movabs pop xchg or mov and sub sbb out jp fnstcw mov rex.WX rcl add pop icebp or lods (bad) leaveq sub movabs xor xchg lods pop mov xlat rex.RXB test jl push (bad) divl rex.WR movsb enterq jle mov push (bad) gs lock in cld pop jp and js insb (bad) out push (bad) retq rex.WRX lods (bad) enterq imul cli jae in iret add lods fildll adc mov sahf cmp int3 js retq adc rex.WRB cmp lods jp sbbb add or insl (bad) jrcxz cwtl rex.XB movabs lods mov int3 sub lods adc jne rex.RXB lods int sub out pop mov shrl insb jl rex.WR rex.RX push js hlt imul lods mov test jns lods adc jo adc repnz and pushq lea mov stos data16 pop rolb lods xchg shlb (bad) fsubrs insl imul retq movabs addr32 cs stos push icebp fiaddl mov and push cwtl mov rex.WRB fsubrl lods cltd (bad) ja pushq jae mov lods xor out out cli lods rex.WRB adc and (bad) mov sub (bad) add (bad) cmovg (bad) (bad) mov mov jns stos rcr cmp movabs movabs cmp gs lods (bad) clc push sub and xchg jns or (bad) enterq jbe lods (bad) push data16 (bad) stos retq test lods andl sbb (bad) mov sti and loopne fnstsw rex.R fimull lods xor pop retq movsb out cmp mov mov pop ficomp mov mov xor (bad) retq cmp rex.RXB (bad) and mov imul loop add adc movabs js mov insb add cmpsb lret xor (bad) push pop sarl iret or out in in mov lea cld push mull cmp mov test lods sub mov lods lods pop rex sti adc xchg cmpsb mov pop jmp insb fcmovnu in rex.WRXB cmp (bad) scas movslq cmp int3 mov movabs mov xchg mov lods add rex.WRXB push mov xadd (bad) scas rex.W js jg jo retq rcl mov (bad) push (bad) stos lods cltd sub test (bad) (bad) and jmpq out insl jno pop (bad) retq scas jmp xor or and mov jo or lods fiaddl push sub imul xlat sbb scas movabs std sub (bad) (bad) stos mov cld lock (bad) or jo sub mov (bad) mov in jno cmp imul rex adc sbb test cmp callq (bad) lahf mov imul xor sub pop and (bad) mov lods (bad) mov movabs jo mov movsl jns adc xor mov xchg mov rex.RB ss lods movabs rcrb js fist fadds insl jns push rex (bad) mov (bad) (bad) cld mov sub or pop sbb rex.WB mov jmp (bad) mov out pushq lock lret (bad) lods pop popfq shl fwait (bad) sahf lods xor iret rex.RX rex.X mov sbb stos (bad) push mov mov mov fldcw rex.WRXB adc sahf (bad) test and stos xchg cmp (bad) scas pop xchg (bad) (bad) xor jmpq rex.WR (bad) lods movsb (bad) in mov jo push lods popfq (bad) imul notl rex.R push (bad) pop and mov pop (bad) mov rex.WRXB lods clc add xchg stos (bad) adc rex.WB sbb or mov xor mov (bad) (bad) int3 out lods fdivrl jle pushq mov movabs add mov push add in xchg xchg jno scas jb movsl adc pop sub fidivrl jns mov lods or jrcxz loope retq lods pushq test cmpsb (bad) and adc rex.WR pop rcll sub mov xchg rex.WR or out (bad) (bad) rex.W in xor jb (bad) in cld add int3 retq lss in lods cmp (bad) rolb pushfq lods (bad) fwait mov rex.WR es rex (bad) out (bad) cmp or jge lods mov pop (bad) xor jb cltd in movsb rex.RB lock lret sbb rcrl sub xchg (bad) (bad) push cmp (bad) in xchg lods xchg fidivr rex.WRB loope jne sbb mov lods out (bad) shrb ss lods (bad) jg rex.RX mov or hlt test je imul rex.WRXB lods mov or retq (bad) cmp jmp (bad) xchg jo adc sbb rorl lods adc mov rex.XB in (bad) adc xchg outsb out js and in rcll test mov add jrcxz xchg lods insb retq cmc cmpsl addb ffreep icebp mov rex.WB (bad) mov out lods push jbe cmp test std leaveq adc and cmp repnz ror rolb std je pop pop lcall stos out or rex.WX mov pushq pop sub pushq jrcxz cmp push xchg test or outsl inc in stos and and rex.RB sub outsl enterq mov test jmp or jo orl cmpsl cld mov jp push popfq lods jae and rex.WRB lock xchg mov sarb fimul or mov int insb fsubrl nop movabs stos xor jb sbb lods sub lods (bad) pop popfq (bad) rex.WXB lock test rex.WRXB rex.WRX stos or andl mov mov lods xchg loop pop pushq xchg lods (bad) (bad) mov or jp pop cmp push lods pop sbb test or mov mov outsl add insb (bad) or lahf stos pop rex.RX and mov (bad) fsub or and jae (bad) adc lahf cwtl push jmp push outsl lods cmp (bad) jb roll lods xlat sub test enterq sbb (bad) sub xor lods push lods mov jmp adc cmpsb mov sub stc jno cmp xlat sub (bad) je lods xchg cmp (bad) sbb rex.XB mov lods (bad) pushq or mov adc insb hlt rex.WR lods insb jge imulb mov sbb mov ja cmpsl add pop movslq leaveq (bad) int xor push rex.WB insb xchg rex.WRXB or insl lods movabs (bad) in sbb and in int rcll lods xchg gs rex.RX pushq mov jl test movslq stos insb lods sbb test mov xor jl fstpt mov sbbl jmp (bad) add sub repnz or lods mov int jp iret js in movslq stc fistpl mov movabs test rex.RB lods (bad) iret pushq cmp jrcxz sub (bad) rex.WX or (bad) rorl je jg and (bad) fist cli lret adc push stos mov (bad) and lods rex.RB rex.RXB loope (bad) adc pushq or pushq (bad) xor in fdivrp mov fstpl out mov (bad) test nop (bad) out pop subps in rex mov rex.WB adc lods rex.X sbb mov push int3 test xor (bad) sbb (bad) hlt cmp xchg adc retq lahf (bad) out mov repnz mov sub and add mov cltd and cmpsl lods jmp movabs sahf and add pop lods rex.WB jae jb (bad) xchg movabs movsb shrb (bad) lods icebp movsl pop sub adc stos (bad) rex.XB cmpsl pop loope (bad) adc lods add ja lret notl sbb push push lods icebp add ja xor rex.R mov push (bad) sbbl add rex.RXB and notb push (bad) rex.WB rex.WXB (bad) test (bad) adc lods vdivss or pushfq lods mov jne movabs rorb jge iret faddp add sub (bad) (bad) retq rex.WXB push xor shrb xchg adc lods jb adc pushfq js xor mov pushq xchg sbb push jnp out in (bad) stos scas rex.WRB loope mov mov mov mov loop jp lock stos imul cmp mov (bad) xchg movsb push cmpsl fnstsw in es nopl push sub outsl (bad) rclb (bad) hlt rex.RB or lods test movsl jo or out mov adc xor add (bad) (bad) jno shrb jmpq lods repnz fisubr (bad) shlb repz (bad) leaveq movabs cmp hlt faddl adc or pushq lods scas or leaveq push mov movslq rorl ljmp jnp sub add ficoml xchg and (bad) fnsave mov sbbb lods adc int3 in or mov negb clc stos sub stc movsb or (bad) sub out push fwait xchg mov mov rex.XB lods test cmpsb lret scas loopne int3 movabs (bad) fildll sahf rex orl ss rex.RX in mov mov shrl fucomip (bad) insl lods mov jle (bad) mov test insl out pop movabs iret rol loopne lods (bad) xor movsb fcmovne mov addr32 xchg (bad) (bad) mov shll xrelease and lods (bad) (bad) adc or mov fstpt (bad) scas data16 ficompl adc mov pop (bad) lods movabs insb outsb lods mov callq sub lods movabs iret imul lods cwtl sbb mov loopne testl mov jno es shll pushfq rex.WB xchg insl mov add mov nop adc pop js stos sbb mov pushfq (bad) cmp sbb imul pushq int3 lods lret jae mov pop rex.X sbb jb sub orl repz lods (bad) push jrcxz test in (bad) lea lods add or (bad) mov fs mov (bad) mov pushq lods mov ja jb cmp sti adc (bad) cli test movabs xchg (bad) mov sbb (bad) lret lahf movabs xchg cmp dec mov xchg lods rex.WR callq and movabs rex.WB loopne xchg cli mov test test add cltd movsl mov stc mov test lock lea enterq xchg cmc test add or (bad) fisubrl rex.WB (bad) sub jmpw adc shrl data16 stos (bad) callq je add cmp (bad) in mov je (bad) lods (bad) clc or (bad) xchg fs (bad) cmp imul lea sbb out add fcmovne lods xchg push stos popfq or mov paddw insb movsb (bad) rex.WR jns movabs mov jge lods push cmp sahf xchg movslq out retq cs jnp push (bad) and stos and (bad) clc jl (bad) mov (bad) mov fidivr sbb or mov sub cmp mov lods shrb jbe loopne int3 scas movslq push adc jne (bad) callq pop enterq pop sarl shlb sbb xchg fisubr lret xor fwait jo lods mov hlt sbb sub mov cwtl xchg in in (bad) out lods mov shll movsl jne sbb callq rex.RXB (bad) sub (bad) xlat outsb sub jp jle sti fwait lods mov and (bad) mov mov mov fildl fsubrs xor jns (bad) out (bad) movabs lods loopne pop sub rex.WR mov retq (bad) mov rcl jne lods (bad) in mov pop fcomps mov jb jg int3 stos in mov rep add add js or mov (bad) jp mov subb cwtl jbe std popfq fsubrl sub sbb movabs rex.W in jbe (bad) (bad) out lods mov loop (bad) (bad) retq lods rex.WXB (bad) (bad) rcrl mov cld or mov cmp imul jmpq (bad) jb and (bad) cmp stos rex add rex.RX imul and fmulp lods insb push in mov mov jmp scas movabs insb jnp,pn cwtl lods rex.RB test orl fs xor movabs and add mov mov in pop js (bad) rex.WRXB rex.WXB xor push (bad) mov mov (bad) scas movsl out xor (bad) ss xlat retq mov pushq mov pause test int mov jbe pop mov lods movabs lahf sub and lods jae jno or (bad) lret stos pop mov xlat stc pop (bad) lods push mov xchg fwait retq in repz mov rex.WRXB jae lea lods out stos add (bad) lods add jrcxz pushq jl cwtl lods sub (bad) (bad) lods mov xor mov dec mov rex.WRXB jnp stos lock int3 rex.RB (bad) or mov xchg (bad) jrcxz mov fdivrl imulb callq push jns add fldl jrcxz pop lods pushfq (bad) cli lret cld and lods outsl jns loop mov in lods fcoms pushq fisttpl cmp rex movabs cmc add lods and xor std lods leaveq in jg icebp fisubl mov sbb addr32 jns xor movabs movslq fsubl mov rex.WXB lods sub (bad) ss pushq sub push fdivrl rex.WR and pop in faddl shrb pop out xor incl (bad) xor sub add sub (bad) mov jne mov fistpl push sub sub lods pop jae add repz push lods lahf (bad) rex.W fnstsw (bad) mov je mov push movabs fldt add fstps sub sbb movabs add movabs xor (bad) out mov mov mull sub mov jmpq sbb enterq movslq ja out lods sets (bad) sbb and scas sub lods retq xchg fisttpll sbb sub mov mov rex.WX and (bad) mov stc and int3 xchg mov nop movabs retq mov adc (bad) xor lods out (bad) rex.WRX rex.WB and stos fistl add cmp adcl (bad) fwait or xor xor lods scas rex.WRX mov xor pushq lods lea sbb xchg rex.X fwait xlat pushfq jne rclb (bad) sub imul rex.RXB add (bad) (bad) callq retq rcl (bad) adc pop rolb add in icebp rex.RXB bnd adc mov fldl loop rex data16 (bad) repnz gs scas sub (bad) in adc cmp scas lods enterq and clc fwait insl sbb rex.WRXB add pop mov sub movsl cld je xor mov cli add or insl add xchg fmul lret (bad) stos sub rex.X (bad) not fadds repz xor pop ss mov (bad) loopne (bad) jbe cmpsb fbstp outsb imul lods mov jmpq lret pop xorb (bad) lods jrcxz popfq ficom sub and lods rex.XB (bad) adc fbstp rex.WX (bad) imul mov addr32 (bad) rex.WRB rex.WB rex.R shr retq jo scas movabs xor std fstpt mov lods jp rex.WR mov loopne lods stos sub cmc (bad) lods (bad) fist rex.RXB (bad) (bad) out sbb cmp xorl mov fwait sub std es movabs (bad) xchg shlb lret sahf rex jo addr32 sub mov (bad) (bad) (bad) es loope xor mov test rex.RX mov xchg (bad) xor mov mov scas adc xchg and pop popfq lods rex.XB rex.WR leaveq rex retq rex.RX cmp lods int xchg (bad) cmc (bad) cmp rex sti lods idivb fisubrl movabs push test mov push lods repz mov or or mov jo cs pop adc push shrl push test (bad) mov sub iret int (bad) ss stos subl xor rex.WRX mov mov (bad) movabs sub cmp mov and (bad) mov mov fsub push xlat rex.RX mov retq lods push or retq movabs nop callq pushq (bad) rol movabs mov lods mov imul retq (bad) add outsb lods or neg stos jrcxz lods repz (bad) xchg pop jle sahf (bad) rex.X xlat loopne cmp and retq lods pushq jl pushq mov rex.B rex.RB adc nop (bad) in outsl jno xor pushq mov repnz jno sub test cmp sbb testb lods cs cmp lods (bad) xchg mov fldlg2 clc mov shrl push scas lods cmp cltd fisubrl add sub rclb cwtl jp fimull gs pop lret leaveq scas scas pop push (bad) (bad) fwait or mov lods (bad) sbb rex.WRB mov (bad) sub lea fucom test cmpsl mov sbb xchg (bad) mov movabs cmp rex.X lods lea push pop rex.RX cmp lods (bad) iret or (bad) mov rex.RX lret pop cmc std (bad) or or rex.RB insb add (bad) in in insl leaveq lret jle (bad) xchg jb rex.WX jnp mov and add adc pop movslq popfq callq (bad) lods sahf rex.WR (bad) test rex.WRXB (bad) lret push pushq add pop xchg lret add fidivrl (bad) sub mov mov jge add adc (bad) test rex.RXB outsl insb lret scas (bad) mov int3 sub xor mov xlat sbb xor push cmp sahf sti lods movabs (bad) retq xchg xchg lods test ja movsb sbb mov fdiv lods mov cltd adcb (bad) sub jmp add outsl (bad) mov (bad) sbb mov (bad) lods cmp cmpsl rolb mov lods stc jo xchg xchg adc xor pop movsl sbb cmpsl enterq jo lods xchg ja rex sbb adc rex.WXB or (bad) rex.WX mov sbb cmp pop pushq shll jae lret jle sbb stos sub rorb rex.WRX xchg lods (bad) pop adc repnz and lods mov (bad) xor or lods movsl rex.RXB mov (bad) (bad) rex.WXB rorb and lods push mov mov push adc pop xor movabs loope movabs idiv lods mov decl sbb sub pop sub mov sti push xor lods xor rex.WR movslq outsb rex.WX fcmovnb push xchg cmp xchg lods jb xor add mov sub rex.WR lods out rex.R lods (bad) pop shl int stc rcll adc mov lods cmp fidiv cli jno xor jae mov pop (bad) fs sarl cmp adc rcrl repz out cmp ja adc push jne sahf rex.B mov xor sub test test lret mov push rex.WR rex.XB mov hlt rex.WB (bad) sub xor or jp clc pop (bad) jb mov loope fidivrl (bad) loop stos push or pop xor fdivrl hlt (bad) ficomp and out movsl rex.RXB adc xchg (bad) lahf rcrl movsb fwait mov cmp rex.XB movabs test sub pop lods (bad) int3 (bad) fstl sub jne test nop sbb pop rex stos pushq cmp jle out jl mov jne rex.WX retq lods movabs rex.WR loope (bad) jg orl int mov lods insl test adc jp lods push pop sbb enterq movslq mov addr32 lods rex.RXB mov scas or cltd mov lods jne (bad) (bad) pushq lock cmpsb mov lods mov decl (bad) fs lods or popq mov rex.WRXB lods sbb xor add jbe lods cld repnz sahf int3 sbb (bad) enterq jrcxz (bad) sub jmp (bad) (bad) pop mov callq fwait int3 in imul (bad) lret add (bad) in mov fsubl je push mov jno andb cltd adc cmpsb cmp cs add mov and je mov sbb (bad) scas pop pushq hlt mov rex.RB (bad) movabs (bad) rex.X movslq in xor movsl in xchg add data16 sbb sub rex.WXB (bad) lods test movabs or scas callq enterq loope (bad) clc fnop (bad) push xchg out imull xchg adc jge sub (bad) pop callq jbe cmpsl sub cmp mov pushq xchg adc pop pop add stos hlt rex.B mov mov (bad) test loop (bad) mov mov adc mov movb lahf pop mov (bad) (bad) sbb lods rex.WR xchg mov outsb sbb xchg stos cmpsl jmp xor or cltd sbb add (bad) stc cmp (bad) lods (bad) or mov scas in popfq (bad) or (bad) insl lret lods (bad) and popfq mov pop jle jo xor mov jnp lods pushq cs sarb (bad) jle mov lods retq cmp add or lods (bad) mov push loop pop rex.RB outsb (bad) mov mov lods add std sub cld xchg scas out cmc clc adc mov scas or fcoml pushfq xlat lods mov imull lods rex.WX adc (bad) stos shl out xor add lods mov or test sub mov (bad) push (bad) movslq xchg lods mov lea pop push adc lods sbb push shlb rex.WRXB mov xchg movl out adc lods fldt (bad) (bad) scas nop rex.X sbb jb pushq rcr xchg testb and ds xchg in leaveq adc mov xchg fistl lods jg or lods xchg mov (bad) ds lods mov sti adc mov sbb scas jb (bad) sbb fidivl lods retq and fxam mov xchg or int3 rex.W packuswb mov (bad) lods test rcll imul pushq test enterq sbb stos std jrcxz mov in or (bad) (bad) jp outsb (bad) je jo sbb adc jmpq and cli lods or scas fsubrs adcq jp and pop mov push iret xchg fsubrs movabs xor lods cld pop imul or lods cmp insb loopne rex.B rex.R fidivl (bad) mov add jae mov lret mov sub hlt sub push imul (bad) push (bad) rcll push scas and fwait ss xor out adc (bad) rex.WRB movabs cmp sub xchg pushfq std xlat pop mov insb mov cmc mov mov mov rex.R hlt add rex.WRX lods adc (bad) (bad) (bad) (bad) xor test (bad) cmp sahf mov movsl nop adc lods lods pop callq add push add sub lods (bad) mov lret rex.X mov loope push sbbl test mov add in rex.WRXB (bad) sbb push in scas rcll (bad) jge mov add xchg and mov out sbb shrb fsubrp mov mov sbb cwtl lods loopne femms rex.RB pop movsl or lods rex.XB (bad) mov test rex.WR sbb lret stos add test scas (bad) stos (bad) retq mov xchg lods cltd (bad) xchg mov clc scas xchg mov and insb jp scas loopne loop cld pop jae lods sbb insl sub fsubrs repz cmp add int rcll (bad) insl movsb mov cmp lods rex.WX outsb jle addr32 xor scas in mov fldt jmpq mov jrcxz outsb sub sbb jp movabs (bad) insb adc lods (bad) js jmp es lods push rex.X rex.WXB je roll jmp rex.RXB mov test xchg (bad) or lods (bad) (bad) jbe xor jp fnstcw or retq mov push mov (bad) lods (bad) mov rex.B jns retq out (bad) mov mov nop xchg scas xor mov lods (bad) xor scas rex sub cmpsb mov mov insl lahf mov movabs out mov hlt lods sub fptan add xor lods int3 and (bad) xor (bad) gs pop movabs jns rex.RB (bad) (bad) mov stos and mov mov pushq stos (bad) jle push lods xchg sub mov rex.XB pop movsb lret fistpll lods std pushq iret and xchg cmpsb mov cmp lods in pushq sbb xorl jo jbe fmul add out or imulb sub rex.WRX (bad) ja hlt rex.WB subl sbb (bad) xchg mov icebp and push mov js xchg (bad) icebp rex.WRB lods mov xchg in mov mov add jl lods insb cmpsl in lret sti outsb sti in lods sarb mov in mov jb (bad) repz test or mov xor sbb rex.X shl xor sbb pushq mov add rex.B incb in rex.X jbe add jns push (bad) mov cli mov insl (bad) adc mov push in mov (bad) xlat or callq test sbb jno std xor sub mov fistpll mov pushfq sarb xchg in sub cmp fnstenv out repz (bad) sbb outsl mov rep push lea ss push push retq (bad) adc test add (bad) shll jle stc sahf mov sbb sbb movl adcl lods xor cmp cmp fstpl lods jne cwtl (bad) iret idivl cmp lods js outsl cs rcrb lods jl data16 scas stc in adc imul test xchg icebp pop jne fildll (bad) lods xorl push lods adc (bad) int xor test and (bad) adc lods cmp out rolw pop fidivl (bad) lret lods mov fisubr lods rex.RXB adc popfq cmp lods ror mov (bad) lods and xorl xor rorl and sub or jae cmp outsb jrcxz or lods lea movabs sbb scas jle and in push mov (bad) insb xchg (bad) lock sbb std ss lock jg mov hlt or mov (bad) rex rex.WRXB add rorb lods pop mov xor lods add pop rex.WB sub movabs mov cmpsl out lock xchg push orl shll adc lods movsb xchg pop xchg movabs in test fldcw sub mov callq lods (bad) mov movabs rex.R adc lods ds add add and fldcw (bad) test add pop adc movabs stos imulb push orb test adc cmp lods adc cltd (bad) (bad) cld std in pop lods (bad) rex.WRXB mov cmp (bad) mov movsb (bad) adc callq fnstcw sub test (bad) in sahf lods jb hlt add (bad) lods popfq (bad) loope lea iret (bad) nop test loopne (bad) rcl and mov jno (bad) lods xor mov sub and add rex.XB (bad) rol enterq mov push or insl (bad) lods fistl sub fild cmpsb jg (bad) fs or enterq jmpq pop cmp cld rex.RXB repz lods out (bad) scas enterq xchg jg (bad) callq mov (bad) cmp jnp fdivrl in mov (bad) sti mov out (bad) ficoml cli pop cld pop rex.WX mov adc test out rex.RX (bad) lods fdivs shr lods adc pushfq xor or hlt sahf idiv sbb jo int sub mov cmp push xchg rex.WB sbb mov mov lret lods pushq (bad) pushq lods and xorb mov jl test fisub in sub xchg lods fldl js rex.R jle movabs fdiv rex.WB mov xchg scas mov pushq (bad) (bad) lods (bad) pop adcl rex.R mov test pop or add (bad) (bad) (bad) jmp fsubr idivb lods mov addr32 out pushq rex.R (bad) rex.WB sub fneni(8087 mov nop int3 ja pushfq adc mov jb adc sub sbb or rex.XB and stos test lret bnd data16 outsl mov decl rex.RXB (bad) (bad) gs add mov pop test or mov fisttp lods je vpsubsb sbb fimul stc sbb in lods mov or xlat mov lods adcl leaveq lods add mov stos nop/reserved mov sub insb scas mov lods sbb (bad) (bad) and movabs rex.WB fwait scas (bad) jrcxz out lods cmp test pop (bad) xor enterq adc xchg fldt cmc fild pop rex.WR lods sbb xchg retq enterq cmpl ror mov or adc cld movslq xlat mov or rex.B and jle stos xor rcll jnp xchg xchg imul and sub fldl test andl and rex.RB mov leaveq cmpsl (bad) rex.WX repnz cmp mov orl (bad) rex.WRXB repz cmp test rex.RXB xchg (bad) push fidivrl out pushq add cltd (bad) jb mov or fstl jg xchg adc pop adc repnz (bad) push adc jb gs fdivrp xchg (bad) test shrb callq insl xor int3 jae mov addr32 push ss rex.XB xor jbe out scas lods push xor ja popfq icebp xlat in xchg mov mov jns push add (bad) icebp rex.RXB xor cmpsl xor rex.WRB sbb cltd ja movslq xor add stos cltd (bad) xor rclb (bad) movabs or cmc cmp subl repz adc adc movsb jb cmp add insl push scas rex.WR es cld mov push and xchg rex.WR lods and (bad) sub repnz movsl cmpl je in mov lret xlat stc cli jmp repnz fwait sub xchg sahf retq sub add adc outsl fiadd sahf nop mov inc pop movsb insb repnz ds sbb cmp mov loopne (bad) lods jne loope adc mov mov (bad) xchg movsb mov adc or je mov cmc cmpsl shlb enterq xchg fadds stos in adc rex.WRX xchg cmp pushfq stos stos loope addr32 sahf movabs addr32 add fisttp ffree in xchg movsb cmp sbb fistpll xorps or lods mov mov (bad) mov (bad) rex.WRB (bad) or lods in xchg rex.WRXB add xchg stc rex.XB and sub adc sbb add mov stos cmc stc cmp cmp (bad) mov mov movslq pushq pushfq and test shr adc jmp or idivb xchg insb (bad) (bad) fwait fs int (bad) incb mov rex.WB sub lahf xor test jmpq (bad) pop retq (bad) cs movsb test cmp sbb in cmc jae cltd pushq hlt adc stos xchg cmp xor jrcxz rex.WR fs (bad) xchg (bad) int3 or rex.WX stc lods movsl xchg xchg rex.WR or xor iret mov movabs adc sub add movsb movabs repz out xchg mov cs jne in sbb (bad) rex.WB pop mov rex.WRX (bad) vcvttps2dq pop stc pop scas imul insb popfq shlb add pushq and sarb mov (bad) cmp mov xchg mov test (bad) pushfq and jge rex.WR rex.R adc mov cli add jo cmc rex.XB jge lods or leaveq mov (bad) int3 enterq mov add (bad) push cld add jmpq sub fwait sub jbe sbb mov sub (bad) (bad) (bad) (bad) test and scas add mov lret (bad) mov xor lahf icebp pushq mov xlat sahf cwtl movslq sbb mov cli in jnp (bad) pushq test mov out rex.B push out rex.WB (bad) rex.XB cmp imul rex.WR add lods xor in adc in add int3 loop idiv xchg clc or xor clc (bad) add outsl add adc movsb mov repnz cmp (bad) xlat adc cltd jle rex.XB imul mov in sub shr test outsl (bad) je or rex.W adc sub xchg gs rex.WB insl push jbe rex.RXB lods (bad) out outsl push pushq movabs setno (bad) int3 fildll (bad) out rex.XB mov mov ss test mov lods jne and xchg clc mov rex.XB rex.WX sbb xorb retq (bad) movabs mov cmp test jnp (bad) lods mov rex test rex.RXB gs jno in jns movabs repnz (bad) movsl js lods add insb (bad) pop lods rcll mov lods pop jbe push (bad) mov mov in rex.WB pop fsubrl (bad) scas movabs fsub test or in lods xor pop (bad) in xlat std adc cmovae rcrl or mov or iret cmp mov lods (bad) jbe or insb in (bad) lods cmp rex.B lods out pop out xchg jns push lods or scas (bad) lods movsl xchg rcrb lods mov add sbb cmp out mov or decl lods (bad) icebp (bad) and cli pushq movabs push (bad) adc cwtl mov cmp scas int out pop mov rex.WRX lods shrb or rex.WB (bad) mov mov (bad) add outsl (bad) jo rex.WRX mov cwtl or int3 test mov movsb hlt sbb (bad) push mov test notl and xchg lods push (bad) (bad) rex.W pop addl mov xor lahf cmc movabs rolb rcrb mov cs sub (bad) scas orl sub jnp std or xchg fnop cwtl jbe (bad) cs fisttpll pop adc stos mov out sbbl ds xor or push (bad) movslq (bad) lods ror or scas mov pop lea sarb lods sbb rex.RXB xchg jrcxz (bad) mov stos shrb insl cli rorb cwtl or mov ja mov sbb xor lods outsl push ds xor repz (bad) mov jns movb xchg (bad) jo xor add lods mov vcvttss2si (bad) out sbb lods sbb stos xchg in add jno lods cmp push sub xor lods cmp insb lods sahf lahf adc mov and lods (bad) addr32 out rex.WRXB xor jg rex.W (bad) decb loope imull cmpsl (bad) jle insb scas (bad) fidivr lods mov int push cmp clc sub add (bad) lret and out lods scas js pop jnp (bad) xchg adc rex.RX (bad) jnp lods pushq adc jae mov or ja (bad) pop jmp push sub insb rcr xor lods data16 jbe orl lods adc (bad) pextrw pop mov jg and (bad) rex.XB int adc mov and (bad) jb int sub (bad) mov addr32 int3 scas mov test sub callq cmp sub (bad) sbb cmp fisubrl add adc scas rex.RXB (bad) adc (bad) movsl fdivr ds js jae push (bad) mov adc pushfq xor xor adc idivb scas sub retq push adc xor mov fs sbb or sbb xchg div orl add (bad) rex.RX or pushq rcll sbb movslq hlt int3 retq cmp pop out stc adc in and movabs vandnps pop xor or iret in cmp (bad) std or xchg loopne cld sbb rex.WRB fwait imul xor push pop rolb (bad) xchg mov orl rex.WX push xor adc lods ja (bad) sbbb mov shrl add mov rex.X sub movslq xchg mov jns (bad) jg frstor rcll sbb test adc (bad) (bad) jbe mov leaveq (bad) test jnp rex.X adc movabs ficoml lods (bad) out xor test stos cmp stc cmp sub sarb mov cmp test sahf xor repz fidivr orl cltd lret pop (bad) (bad) rex.WR pushq mov lock in addl mov rex.WXB movabs mov mov lods (bad) rex.B mov or (bad) push (bad) in sub push pop (bad) addr32 clc leaveq retq sub sub lods jl xlat pop (bad) pop add push pop data16 or imull outsl (bad) cmp mov xor rex.WR sahf rex.RX rex.RXB insb xchg xchg pushq xchg lods mov push cmpsl movsb test icebp push fidiv test (bad) popfq lods movabs (bad) xchg movabs mov (bad) jbe mov test add rex.RX mov push loope movabs xchg enterq mov pushfq push int3 imul in sub and mov mov adc mov adc sbb (bad) cwtl mov xor adc retq stos callq (bad) (bad) and test lods mov (bad) mov xchg int3 sti mov rex.WXB (bad) js imul (bad) pop xchg (bad) adc test jle xor lahf jnp test rex.W rex.R gs sbb (bad) xchg mov mov lods rex.WRX sbb stos outsb testb sbb rex.WRX stos pop mov cmc add out (bad) push int xchg add push (bad) (bad) test mov adc sti in outsb jge jle gs or mov pop sub push imul and xchg xor push sahf cwtl add mov lods subb or (bad) cli or clc in (bad) jle (bad) je (bad) movabs icebp retq lods xchg fisttpll sub mov (bad) adc pop (bad) or movabs (bad) (bad) (bad) add lods out pop incb ja push stos (bad) jo mov lods or (bad) (bad) rex.WRXB vmovups out pop rcrb (bad) and (bad) xchg (bad) sbb imul mov mov loope in push sub (bad) rex.R enterq and ds mov in or negl add and jl mov add xor jrcxz mov fcoml imull (bad) imul fidiv mov adc add int3 (bad) mov outsl clc add test movabs outsb (bad) fidivl movsb adc nop (bad) fist (bad) xorl sub cmp xrelease or jns int (bad) repz callq cmp sbb jbe lods lods test fldt ja adc mov cmp lods sub outsb test jge lods shl (bad) jl lods (bad) pop xor in rex.X lods mov (bad) rex.WR pop xchg lods (bad) pushq jmpq or ds mov mov jae sbb lods mov mov clc stos stos rorb rex.WR stos (bad) (bad) and push pushq rorl mov jo addr32 lods jmp jg fs mov xchg fcmove movabs xchg std (bad) imul rex.WRXB mov jmp lods and std pop mov rex.RB fcomip (bad) rex.WR (bad) mov lods adc (bad) scas fcmovb sbb mov (bad) rex.RB or rex.WRXB ss add rex.R adc pushfq xchg cs and je add jle test mov fdivl mov out cltd jb and addr32 mov mov iret std jns sarl pushq cmpsl (bad) (bad) mov hlt push adc js nop mov icebp push sbb fbld mov je sahf hlt jne (bad) orl add rolb (bad) ja add jge ja add clc or rex.WRXB adc mov (bad) outsb jl jno fild cltd cmpsl push stos lods movsl jb rex.X insb movslq or (bad) lret (bad) retq movsb cwtl mov test jns imul jg and mov js jp imul (bad) or (bad) cmc jrcxz movsb sarb add (bad) xlat int3 rex.WRB push test (bad) cld ss insb or or sub jmpq stos (bad) imulb (bad) mov mov mov fcompl je movabs (bad) andb xchg pushfq pop jl mov mov (bad) xlat cld mov insl (bad) pop cmc push mov test jo adc mov ficomp mov (bad) mov fldl or sbb pushq sbb mov sub movabs data16 jl lods mov subl jns xor imul loope (bad) hlt mov pop lods gs int mov (bad) mov (bad) cmp es test sub lods (bad) stos imul leaveq in add pop jrcxz orl xchg test push gs jb add stos ja sub xchg mov (bad) lods jg rorb stos (bad) sbb (bad) mov (bad) repnz or lods cmp jrcxz xchg icebp cmp xchg xchg es adc rex.WXB (bad) rex.W ja rex.RX outsb rex.WRX frstor jo (bad) scas nop lods jae imul xchg stc and rex.RB pop mov movslq lods movabs sub out adc jp (bad) nop iret (bad) xor retq sub scas xor insl and mov push mov negb in sbb lahf icebp (bad) jno cmc mov mov xchg sub (bad) insb (bad) lods lock (bad) and rex.XB rcrl jnp in rex.WX sbb add rex.RXB lods in pop jno sub xchg jmpq sarl add mov pop data16 rex.WR es rex.RX xchg subl pop hlt lods jl js scas subl or cltd repz outsl lods (bad) pushq ds insb rex pop (bad) shrl rcrb adc mov xchg pop jp cltd movsl rex.XB jl (bad) in movabs xchg insb mov lea rol loop js (bad) test movabs xor fisubr jge cmp mov xchg (bad) jo in sub jne sub add decl lods stos adc div sbb int3 mov (bad) jmp jne rex.WRXB sarb test adc lods push sub xchg in mov scas push (bad) mov and or icebp sub cs cs jb retq pop pop nop data16 fwait in jmp mov adc lock lret (bad) roll mov jo lahf movabs cmpsl xlat mov loop movabs test jnp (bad) movabs rex.B rcrb rex.WR ja jge xor or retq sbb adc jle xchg pushq cmp sub xchg (bad) jno test fwait (bad) out movslq or mov test rex lret jb and in jbe (bad) mov (bad) and out sti jae rex leaveq cmp mov jl xor fstl outsl adc add in xchg lahf (bad) pop lock (bad) pop sub xor movabs jmpq pop test fldenv (bad) xor (bad) cli sub mov insb (bad) fucomip stos sti out sbb (bad) lods fdivrp fnstenv jbe adc (bad) mov cltd lahf subl (bad) clc (bad) cmp mul lods add pop and add lods lods sbb rex.WRXB xor lods test (bad) out or adc sub (bad) mov std stos rex.RX fcmovu in cwtl adcl adc jne (bad) sarb stc and jbe lods scas in or jle xchg rex.X imul cmp int out pop mov insb mov mov jrcxz repnz jg and add lods push xor out push mov (bad) lods (bad) (bad) rex cltd shrl adc data16 stos lock test leaveq out lods (bad) lret mov add xchg lret adc sbb adc cwtl rex.WRB jrcxz,pt lods loopne xchg insb sahf shrb lret lods test movsl sbb mov clc sub jne push (bad) rex.RB mov nop (bad) (bad) sbb fwait sbb rex.WRXB lods sub cld xchg hlt (bad) (bad) movabs xlat xor stos (bad) pop scas test rex.WR sbb sub lods push adc cld test (bad) shrl jp rex.WRXB cmp rex.WR rep pop mov test lods mov cwtl push popfq rex.WB retq lods mov mov sbb gs movabs repnz punpckhwd pushq sub lods sti sbb pop jne (bad) sub sub jns bswap jge mov repnz movsl jnp and adc jbe mov (bad) lods and lods adc callq jge xchg push cmp movabs xchg scas mov rex.RXB adc fdivrl add test pop xor sbb rex.X addl lods lock sub mov sub rex.WRXB cs rex rex.RB out movabs (bad) cmpsb xor and or lods mov out (bad) (bad) subb fcos test lods mov lods fs sti lret cmp (bad) lea lods xchg cmp rex.WXB mov in push push lods xor (bad) loope scas jnp lock ljmp adc xchg sbb jge lods xor cmpsl sbb sbb scas and repnz xchg xor rcrb movabs (bad) movabs rex.RB and (bad) lods or jrcxz jge rex.R rex.WRB (bad) movd cmpsl rex.WRXB rex.WXB leaveq pop mov scas cld sbb xchg cli hlt stos pop fisubl insb cmpsl push lods push lods cs std adc rex.WRB scas lods pop jl xor test retq sub fcmovnu mov int3 stos (bad) xchg sub or cld notl lods nop lea mov retq retq push jge repz (bad) and lods mov xlat insl rcr or and pushq clc scas movabs push (bad) iret decb rex.XB or movabs out rex.WR lods (bad) rex.WXB stos rex.R ss lods cmpsl mov scas sbb cmpl movabs xchg mov test push out mov mov adc mov sub (bad) fsubs (bad) jb (bad) loopne scas mov add lods mov (bad) (bad) xchg lods cmp (bad) mov (bad) cwtl push mov sub rex cmp mov retq cmpsb mov ja int3 int3 rex.WRB pushq out test xchg adc test cwtl pop std out ja in je lods in in adc xchg mov lods sbb outsl shlb cltd test fsubr mov nop (bad) cmp insb lods loope or adc (bad) or push xorl mulps (bad) (bad) (bad) (bad) xchg (bad) cltd sub or cmp (bad) movabs or movabs sbb rex.RX mov (bad) divb out movabs enterq fwait and insl jge data16 lock (bad) rex.RX lret pushq cmp enterq rolb ss mov mov insl jl cwtl leaveq mov or xchg enterq fwait imul mov insl (bad) and ja xchg movabs jmpq fwait add (bad) lods mov (bad) lods add pop sbb fwait (bad) cmp push hlt xor sub (bad) clc mov js sub imul jle lods jmp xor adc clc lods hlt sbb mov test rex.B sub fsubl sub adc jnp mov and retq (bad) jmp pop in xchg jnp pop scas imul mov lods jp (bad) lods jb vcomisd (bad) pop adc xor or (bad) pop stos lods insb adc (bad) push xor sub pop lea fsubrs and cmp ja sbb rex.R rex sti pop retq (bad) movabs pop ds sbb rex.WRB rex.RB fwait cs ror xchg lea xor pop (bad) lahf rex.RB movslq hlt cli pop adc rex.W adc rex.RB mov lods (bad) cltd (bad) and cmp (bad) imul stos cmp lods sti clc lock mov cmp stos leaveq adc jmp sub test (bad) or lods (bad) or xchg mov (bad) lods rex.WRX repz test retq rex.RXB (bad) mov lahf movabs xor add lods in rorb (bad) movsb subl stos cmpsl cmp movslq jle out movabs mov mov add leaveq callq jmp (bad) lods xor rex.WR mov mov rex.RXB cmpsl nop mov cld addr32 sub rex.WRB xchg mov (bad) pop insb psadbw sbb mov jo (bad) movabs fsubrs pop mov loopne pushq iret lods insl adc sub test add sub gs (bad) lods adc xchg mov shll push xor stos push cmpsb (bad) adc jmp mov scas adc movabs retq scas and cmc mov lea fs sti adc add fsubs or (bad) lods movsb movabs js adc mov in mov mov sub mov sahf movslq insl fs ds mov movabs adc lret movabs cld or stos movslq negl lods rex.WXB clc iret lods jmpq rex.WR fs sub rex.XB adc jmpq cltd retq rex.X add in or mov lods (bad) sub mov (bad) mov in lods (bad) movslq pop std or in out rex.WX jo xchg pop mov push movabs mov rex.RB sbb (bad) nop and add jo retq lods rex.XB pop movabs data16 xchg (bad) mov lods lret pop rcll add rex.R sbb iret and stos mov in lahf hlt mov adc mov jmpq adc sbb lods out test lods mov adc (bad) lods retq rex.WX cmp movabs xor xchg js movslq cmp movsb repz jno sub in popfq lret or rex.WXB mov adc cltd mov jmpq rex.WRX cld (bad) lods sub xor fbld rex.RB add out (bad) sbb es jmpq (bad) int3 insb iret imul or (bad) outsl lret xor pop (bad) adc lods mov movabs sub je (bad) sbb lods and lods mov (bad) (bad) test xor imul orb push movsb mov rex.WB xor loop fisubr jnp jo stos iret (bad) lods sbb (bad) imul (bad) mov gs sub addr32 xchg jl (bad) push in sub (bad) (bad) rcrl cmc add movsq lahf adcl cwtl and (bad) or (bad) mov jg lods js rex.WRB sahf (bad) and leaveq adc rex.WXB clc loopne pushq or or lods cmp pmulhw sub lods (bad) mov xchg roll lods test rex.WB (bad) nop es sahf imul xor lods (bad) insl icebp xchg sbbl pop cs (bad) nop callq xchg fcomi (bad) ds and fnstcw (bad) sub imul sub or sbb add movabs (bad) mov mov test ja lods jmpq or test xor xchg rex.WRX mov rex.WXB pushq (bad) fldcw and rorl shl or or pushq rex.WRXB mov cmp cltd mov (bad) (bad) fiadd lods (bad) int3 ss xchg add or (bad) std lods (bad) mov rex.RB add lods rex.WRXB (bad) movabs adc pop xchg (bad) mov (bad) lods mov addl xor fdivrl (bad) fs sub in (bad) fstpl mov (bad) fdivrl jb mov xchg and in pushq and out jno rcll lods jge adc popfq sub mov (bad) (bad) and jge imul (bad) add popq push lods (bad) out and lods (bad) mov mov in rorl cmp mov or lods pop jmpq in movabs sub mov or push movsb (bad) (bad) fs adc (bad) sbb cmp xchg lock adc add (bad) lods sbb jg cmp (bad) rex.WX push (bad) cltd imul hlt fwait mov fadd cmp lods sub cld sub cmp lods jmpq enterq je mov (bad) adc (bad) insb lea rex.RXB rex.WR repz scas xchg mov fldenvs sbb rcll roll xor nopl add int3 out lods jbe pushq push mov stos rex.WB rclb push push pushq mov lods lods add adc mov jge mov outsl repz mov iret fimull fisttp xchg lock pushq in (bad) rex.B xor movsb pop cmpsb jmpq cmpsl jrcxz jb loop jge lret lods (bad) mov cmp (bad) rorb cmp pop rex.WR (bad) insl adc cmp (bad) fildl retq (bad) adc fnstsw (bad) movsb pop cld xchg rex.X insl rex.WB jmpq jno pushfq jbe stos lods mov ds sbb mov xor insb lods jns sbb mov test or test addr32 rex.WR repnz (bad) rex.RXB and rex.RX stos and jnp push iret xlat (bad) shlb mov add or data16 pop fcmovu int push outsl sub fsts xor loop sti test (bad) jne jns adc in cmpsb iret or sub fistpl sub (bad) lods std callq outsb pop add lods test sbb scas test rex.WB cli mov mov and mov stos iret in rex.WB sbb repz shrb push add or adc rex.B or imull stos cli movslq jmp js in xor andb out mov add lods (bad) loop (bad) movabs movsl clc adc adc xor (bad) cmp sbb (bad) jbe xor sub subl sub cmc sbb leaveq fs cli (bad) and data16 jg mov or rex.WB insb rex.RX fs in sbb (bad) push pop add mov outsb cmp (bad) or xor mov pop and (bad) xlat lock movabs insb (bad) (bad) shr lods push (bad) xchg lea movabs pushfq divb (bad) out cmp lods (bad) jg insb cmp mov rex.R lods fmul stos (bad) movabs pop test mov nop stos jle lods icebp divl mov sub and insb or mov sbb pushq mov or jrcxz cmpl cmp (bad) testl outsb mov pop rex.B rex.WRXB add sbb or xchg callq lods cli pop test rex.XB rex lods push adc imul and (bad) lea rex.X mov lods movslq cmc adc add stos adc jae subl rex.WRX out rex.WXB lods push cmpsb (bad) stc jb sti mov jnp fildl add xor test mov jrcxz in push mov movabs adc (bad) vmread cmp mov movabs push loope lods or rex.RX xor fstl mov and and fwait enterq (bad) test or loope mov in push movabs divl adc rex.WX xor movabs data16 jno mov (bad) mov cmp or jno xchg add pop (bad) enterq clc (bad) (bad) in jb jae pushq adc rol xorb mov lods rex.RXB jg and (bad) (bad) sub ds rex.WRXB (bad) (bad) mov int3 adc ja sub sbb sbbb out mov (bad) rex.XB (bad) and out rex.X lea pop leaveq in (bad) test out std or rex.RX mov mov xor imul and or stc (bad) rex.RX lret sbb loope cmpsb lods rex.WRX cmpsl js cmp inc fdivrs movabs jg xchg (bad) fwait mov movsl or (bad) adc (bad) sbbl lret jno lods stos outsl jns adc sub (bad) add or adc fcmove cld clc out ja (bad) jg gs rclb sub (bad) and insb (bad) sahf (bad) scas out xchg rex.WRXB jo icebp adc cmp test (bad) loop xlat imull mov fstp (bad) or mov popfq (bad) adc jge xchg and lods xor callq adc xor mov (bad) lahf enterq (bad) mov sbb xor push mov xchg retq add jb cli subl lods xor insl sbb enterq xchg scas adc xchg mov test fst (bad) pop out (bad) in (bad) cmc test imul and leaveq rex.WX lods mov rex.W sub mov rorl add mov movsl sbb rex.WR add mov andl push (bad) mov clc js mov callq and sub lods sub fdivrp movsb jg lods pop enterq hlt rex.RXB mov sbb (bad) scas test rex.X add xor add out push add (bad) out movabs cli (bad) or pop sub pushq je cmp mov popfq sub pushq ror rex.W (bad) cld mov xor js mov in fstps callq rex.R lods xor rex xchg xor (bad) repnz scas ficoml int3 lods sarb mov cld (bad) lcall mov outsb lods (bad) xor cmpsb sbb imul (bad) lods sub cmp rex.XB cmp and cltd (bad) (bad) cmp (bad) xor (bad) sbb cltd imulb movsl lods jmpq pop (bad) jae xchg rex shlb (bad) pop outsl add fwait mov cwtl adc int rex.W stc or callq add cli lock jp lods (bad) fisubrl sbb lods xlat scas cmpsl scas mov or (bad) mov or clc adc jmpq movabs add out xchg insl test hlt and rex.XB rcr out (bad) xchg jb rex.WXB adc in (bad) (bad) rex.B mov in cli stos add lods rex.RX (bad) jno jl add jnp jmp mov rex.WRB or xchg mov jmp lcall or xor adc (bad) xchg xchg push pop callq scas add mov mov adc jae stos cwtl mov rex.B and mov jb rex.WRXB and push or add jge rex.WB add adc pop xor xor mov mov sbb ja scas jmpq es imul lods imul mov mov sahf (bad) rex.WRX cli jne (bad) loope lods lea add lods push cltd mov push (bad) cmp adc pop movabs jrcxz lods (bad) and xchg (bad) (bad) (bad) lods mov in jno pop addr32 mov rorl or cmc adc mov or xchg sub or sub stc pop sbb cltd mov test je pop mov push lods xor add rex.RB adc fsubrs stos lods fcmovb mov movabs xor rex.WR fs cs cmp movabs lea out or out mov cmpsl movabs sbb jrcxz xchg jns lods (bad) fcmovb or adc loope lret cltd add movslq rex.WX mov fldt fsin xchg shrb hlt add test (bad) add cmp int3 rex.WRXB or mov fisttpl xchg rex.WX clc imul add mov std imul (bad) test imul mov jge rex.WXB scas cwtl mov pop (bad) std enterq xor pop mov scas rex.WR xchg rex.XB xor push pop add push lods mov sub lods fsubr add fcomps jmpq (bad) xor mov rol cld cli or es or out xchg fcomip movabs fwait (bad) lods jne (bad) movabs rex.WRXB rex.RX push cwtl fwait pop ss scas adc insb in fs mov pop cs callq (bad) or xchg sub pop xchg mov or (bad) xchg shlb fistl lods nop test (bad) mov mov enterq jge loop bswap jno icebp loopne in stos pop (bad) sbb sbb out rcr jl add rclb retq mov sub sbbb push sbbl sub (bad) adc jp and mov xchg (bad) ds fldl rex.WX jbe xor repnz rex.W es jg xor pop mov fnstcw rex jle (bad) stc or add jp xlat jbe lock mov jno jnp (bad) lods rex.WX sub cmp js adc sarl test xor rcrl push (bad) in mov adc (bad) and icebp rcrb rex.WRXB xchg adc mov leaveq xchg and (bad) sbb lods rex.WR rex.X cmpsb ss cmp lods cmp outsb or adc retw mov rex.W xchg xchg fwait scas cmp mov movsb mov lods rex.WR rex.WRX ss popfq lods outsl or xor rex.B fs mov xor adc pop test insl repnz mov jle scas lods cmc repz add test push lahf movabs cwtl jle add (bad) cld loopne insb and movsl rol (bad) hlt mov mov (bad) scas stc (bad) xchg (bad) (bad) adc mov push ja (bad) xchg mov icebp (bad) out (bad) sahf cmp (bad) movabs and (bad) mov adc xchg (bad) (bad) cmpsl nop mov (bad) mov rex decb stos cmp xor jo fsubl repnz mov sub lods lock (bad) sub movsl test or (bad) xlat rex.WRXB rex.R sub push (bad) punpckldq mov jmpq xchg xor sti fcmovb ds (bad) fstps in mov retq xchg lcall scas adc mov rex.WRX adc ja xchg cmp repz xor (bad) jge sbb jp lods stos mov outsl pop mov lods rex.R mov (bad) (bad) or lods rex.RB retq lea sub lods (bad) imul lods xor rex.WR xor xlat add sub sub leaveq stos cwtl cmp (bad) (bad) sahf rex.R rex.WRX rex.RX add jne (bad) (bad) add mov cld movabs xchg lods mov cmp mov cmpsl rex.WRXB jo (bad) xor (bad) jne mov mov pop insl mov sbb pushq fldcw xchg je movabs add stc scas adc sub cmp lods test fcmove ja sub imul xor xchg add adc pop cmp popfq pop mov jo sub xchg stos cmp scas mov rex.X out sbb lock jbe lods repz dec and test xor cmp add (bad) (bad) loope mov cld in (bad) lods cmp rex.WXB fstl int3 lahf out xor in (bad) lods out loopne adc fcmovb repz jg jbe cld shl lods rex rex.XB (bad) cmp lods push out cmp scas lret sbb (bad) es cmpsb jbe xchg xchg mov jp push pushq rclb pop jb and xor enterq (bad) (bad) jns or enterq callq and jnp cmpsb sub jbe sbb out jg mov hlt (bad) mov push (bad) imul gs rex.RX addl adc loopne and lods xchg jmpq loop retq sub sub cmp (bad) jg (bad) (bad) push cwtl xor pop sub mov (bad) xor push movabs negl sbbb adc rex.WRB (bad) pop lods vmovapd or lret sbb or xorl mov (bad) xchg imul js lods (bad) cmp adc mov sarb lret mov movsl (bad) mov (bad) jns (bad) jge adc xchg rex.WRXB xor ss enterq sbb (bad) test jae jl mov callq xor cld and lods sar (bad) jae sub xchg lods (bad) test dec cwtl jp in mov imul add icebp insl cmpl (bad) mov sbb jne (bad) cmpsl sarb jae stos cltd (bad) push xchg addr32 enterq lods movabs (bad) in callq jg movabs lods xchg adc cs stos sbb (bad) insb or movabs (bad) mov adc cld xchg popfq rcll jae int rclb mov js xchg mov lret or in insl nop rex.XB lods xchg mov rex.X fsubrs adc lods rcll mov add adc lret jle div cld rex.WXB adc mov mov ficom lods loop test lods sbb rcll jge mov movslq push mov (bad) mov pushfq hlt iret in and mov (bad) jnp test in outsl jle adc push rex.WX lods mov imul (bad) and lods je ja std mov rex.RXB retq lods add jns (bad) mov nopl xchg out js test jle cmp in rcl repnz sbb add or lods movslq (bad) (bad) or push or shlb out scas sbb repz and (bad) in cmp fdivl lods (bad) sahf rex.WXB pushq cmc sub (bad) ss jo scas lods rex.R shrl jns add in add out retq stos jge and sub movabs xchg (bad) add (bad) jo iret stos iret ror in jle lods vpsubusw sbb sarl or xlat jno lods (bad) xchg retq out lret add mov lods jp xchg imulb mov mov xor mov (bad) (bad) rex.WRB subb rex.X lods xchg movabs cmovl mov rex.WR pop push mov mov cmpsb jnp (bad) in fwait cmp pushq xchg imull or (bad) pushq sub repz xor movsb jae movabs in or clc rex.W ror pop lods pushq mov or pop mov out push add pshufw lods iret push rex.R rex rex.WRXB stos lret (bad) ja jle xchg cmp bnd lods rex.WRX jrcxz lret and mov mov (bad) je,pn pop (bad) sub repnz test (bad) (bad) pop cmp jp xchg pushfq mov (bad) rcrb stos icebp leaveq and (bad) xchg or insb mov fwait lods cmpsl mov (bad) lret movslq add or (bad) cmpsb stc mov or rex.WX xor (bad) data16 add push sub fs add (bad) loope (bad) hlt adc cmpsb pop lods rex.WXB pop test mov pushq rex.WR pop add mov out (bad) pushq (bad) or mov (bad) in jo (bad) mov nop and xchg xchg lods int scas mov mov mov ss xor movsb add rex.RX jae lods adc (bad) lods jno insl pop (bad) push mov lods (bad) (bad) imul or lods rex.WRXB jp (bad) std or in stos (bad) rcr xor je mov push adc (bad) pop xchg lods ss mov scas add imul cmp add movsl mov (bad) rcl scas jbe add sub (bad) jnp mov lods std js imul sub outsb movabs lods or sub loope cmp and retq mov (bad) imulb push cld jo ja xchg sub (bad) cmpsb mov adc lods xor scas push pop (bad) stos retq repz mov vhaddpd in xor push addr32 add (bad) mov iret jrcxz add stos lods (bad) callq xor lock xchg sub movabs pushfq test rex decb and jge and jne pop outsb loope (bad) (bad) rex.R mov or lods data16 (bad) mov movabs repnz pop lods (bad) mov cmp mov (bad) pop lods (bad) jnp movsl and sahf out outsb (bad) (bad) leaveq in or adc pop sbb mov or out sub je (bad) mov mov mov mov lods popfq shr clc rex.WX xor rex.X rex lods jb shrb adc sti adc cmp lods xor data16 mov (bad) rorl fcmovnb (bad) rex.WR jnp cmp mov lods mov pop (bad) hlt mov retq rex.WRXB cmp rex.RX iret sub in add adc lods clc or rex.RB sbb jae rex.XB jp lods pop rex.W popfq (bad) sub insb rex.WRXB jmpq sti jnp popfq movabs or scas push insl int3 lock pop and roll add push andl jp repnz leaveq imul mov add mov or mov (bad) retq (bad) in add lods pop rex.RXB (bad) mov mov xchg mov adc movabs and jge cld movslq scas sbb imul stos fucomi cld cmpb mov cmpl imul stos push (bad) test (bad) or rex.WX lahf mov out fwait pushq cltd pushq pop rex.B add lods sub in (bad) (bad) lods test mov add and insb push push add lods in cmp jrcxz popfq lahf lods xchg fcmovnu ja mov or stos movslq mov push lods (bad) rex.RXB pushq (bad) lea in imul lods jne out mov adc rex.WXB (bad) and push sahf adc shrl jmpq rex.XB (bad) sub lods in xchg rcl or rex.RXB rex.WB loopne rex.WRXB in test lods adc pop iret cmp or pushq mov sbb in adc imul cmpsb xor sub push stos and pop (bad) (bad) shrb rex.RX roll lods or in out rex.WRB es lods sub pop fsubrs movsl scas cmp cmp jle lods js (bad) add movabs ss int repnz movb add (bad) xor xlat mov popfq retq cltd rex.WX clc pop scas ss (bad) pop and rex.XB (bad) xchg retq cmp lods callq mov mov fcmovnbe mov (bad) (bad) adc pushq (bad) stos pop jp mov fcomi (bad) mov lods test in mov (bad) pushq in xchg xor or (bad) iret cmp adc (bad) in movsb lods js test sub add shrl out mov in lods icebp mov jmp movabs ss (bad) and xor lret rex movabs sub (bad) insl retq sub test sub clc sub sbb cmp popfq push adc (bad) rorl (bad) int add mov xlat stos scas (bad) movabs in mov xchg sub adc pop mov shr lods popfq cmc sbb xchg lods lock mov pop fs (bad) sub sbb mov movabs callq and out (bad) cmp sub test rex.RX sub xor std sub rex.WX jno scas test lahf popfq imul or (bad) (bad) sbb rcrb rcrb lods mov (bad) cmpsl jmpq sub mov jl jl in (bad) (bad) push (bad) (bad) stos (bad) cmp popfq ja (bad) in (bad) pop mov lods add (bad) and cmp (bad) lods add scas loop (bad) cmpsl movsl lods int (bad) mov lods lock rex.WRX and jmpq lods sub (bad) sbb enterq rex.WRX xchg mov jg mov pop sbb jno pop sar push rcrl push scas add cmp sub jnp and out (bad) lret adc sbb movabs (bad) stos adc sbb mulb cmp cmpsl (bad) (bad) scas sub decb addr32 xor sahf int3 mov movsl jnp fmuls lods rex.R (bad) scas (bad) lret (bad) mov cmp loop (bad) xor xor lods out mov fidiv cmp lods lods subb movabs leaveq (bad) fnstenv mov jp or ds and mov lods lock jg mov stos rex.RB add pop sbb rex.WX rclb lods or jns cmp rex.RB fbstp je add lods (bad) repnz jb xlat lock rex.RXB insl stos (bad) lods cmp or and mov or lods rex.WR fwait sbb mov sub rex.WX rex mov lret rcrl mov test (bad) jns scas out rex.R xor gs fadds movsl lods int imul mov jne loopne insb fstpt xor rex.WX push cmpsb movabs mov mov mov scas imul (bad) (bad) sub mov add xor imul mov jns enterq int (bad) lods sub mov lods jle (bad) (bad) jg xchg roll cmp adc loop and (bad) or lods fldcw clc loope add ja or adc cs (bad) lods scas cltd fsts scas repnz (bad) (bad) jp and rex.WXB lods sbb sti lea sbb cli (bad) xor mov lods cmpsb rex.WRXB rex.WRX rex.XB lods sbb xchg fcomip mov scas enterq pop outsl adc cmp jmpq mov jo xchg (bad) fs test test xchg rex.WR out (bad) mov (bad) jp in rex.WB icebp adc cltd shrl cwtl hlt jge movsb rex.WRXB callq lods and int rex.XB rex.WXB mov xorl xadd xchg add xor sahf (bad) fwait rol lods xchg popfq push rcrb mov lods out sub add in xor lods (bad) rex.WXB xchg lods frndint ror xchg movabs imul movslq add ja xchg callq and mov in imul push rex.R mov rex.W jae (bad) xchg and in (bad) stos rex.WRXB pop sbb fs adcl leaveq lods rex.WRXB addps lods or rex.WRB rex.R sahf add out push ss fimull sub mov jne movabs in movabs sub jo lret lods fwait xor fcoms scas (bad) ja or in movsb out and ss adc addr32 sbb push and lods jmpq mov fs (bad) lock (bad) insb fwait pushfq cmc std rex.WR out mov enterq mov lea jl (bad) and subl mov lods outsb sbb cmp and rex.WR outsb xor lods mov jno push adc lock rex.RXB xor lahf rex.WB enterq xchg cmpsb rex pop out (bad) sub loop fidivrl sbb retq cli movsl andl imul pop repz movsl pop out rcrl pushq stos hlt mov or movd imul xor scas sbb jp add je nop lods test pop movsb add jns rex stc lods (bad) mov movsb clc and movabs imul cli mov stos and push fidivrl (bad) lods shlb movsb out sub rex.W mov ds movabs enterq roll fdivrl mov lods rex.XB rex.RX shlb adc add pop movabs add push add (bad) or fistpll (bad) xlat stos test idivb insl movabs movslq in or lods (bad) (bad) retq mov scas (bad) add or cld stos rex.X scas ficompl push icebp push in int lods rex loopne cmp lods cmp paddb pushq sbb loopne lods mov mov mov xchg (bad) add retq in (bad) pop lods sub (bad) sub lods adc (bad) mov and rex.RXB cmp sbb lock shrb and jb pop xor (bad) cli fstl jbe and rex.XB lods (bad) nop rex.WRX (bad) (bad) lods (bad) add lock push enterq (bad) lret fsubs adc add lods out adc lods pop sub wbinvd lods jbe cli rex.WRXB rex.XB sbb imul adc (bad) pop loopne xchg (bad) int3 add sbb sub shrl and lods rex.WRX lods adc sahf or in mov loope pop test sub movsb jo lods mov sbb xchg mov lret (bad) cmpsb (bad) (bad) xor test mov cmp (bad) cmpsl push mov mov mov push xor adc rex.RB jne add xlat (bad) retq (bad) or lahf rcll gs mov rex.WRX (bad) outsl lods xchg test adc faddp jnp cs rex.X pop loope mov movabs pop (bad) cltd mov test nop push in cmc add mov or stc lods xchg test and in xor lahf fstp mov in lods (bad) test insb fisubrl cli xor movsb pcmpeqw pushq push or or leaveq stc cmp movabs icebp pop and (bad) (bad) (bad) hlt lods cld lret (bad) xchg and lahf sub (bad) jrcxz pop hlt cmpsl pop stos mov pushq mov rex.XB (bad) fcompl (bad) jrcxz fimul rorl or adc movsb jle,pt retq fnsetpm(287 sub loopne sahf pop out movabs lods xor incb (bad) pop adc lods mov sbb je fldcw (bad) jmpq (bad) rcl push repnz pop int3 (bad) mov mov and lock lods (bad) jbe or (bad) movsl mov xlat mov push lods (bad) lret pushq outsl (bad) adc mov push out xchg rex.RXB lods (bad) loope (bad) cli jge movabs outsl adc (bad) loop movb adc sub jmpq (bad) cmpl shrl test sti sub cld (bad) cmp in sarb iret push int (bad) lahf sbb sub mov test rorb add mov mov and xor (bad) rex.R pop (bad) movabs xchg shrl fcoms xchg imul cmp or cmp jnp movsb (bad) adc (bad) movabs lods hlt pushq adc jne or cmp lods sub xchg cld ja mov or sub callq cmp jo movabs add push adcb cmp xor rex.R shrb jmpq scas (bad) mov add or rex.RXB cmp test lea and rex.W xchg pushfq test mov cmp rorl (bad) and out jp xchg sub add sbb rex.B scas jno es data16 pop push (bad) or (bad) rex stos scas xor rex.WR fsub mov push out rex.WX jg lods jbe mov mov mov xchg add rex.RXB test movsl cmp and cld mov cmpl and lods jl (bad) fildll mov (bad) xchg mov lods lahf icebp in stc (bad) lods hlt scas lret jmp (bad) test push cld (bad) or insl sarb mov (bad) jae out icebp (bad) insb out jns lods pushq mov sahf (bad) push sbb (bad) xchg jbe pushq test xchg hlt push lods mov rex.RX lods (bad) stc (bad) (bad) mov xchg mov fsubrs cmp lea (bad) (bad) rex.R pushfq lods cmp icebp cmp xchg rex.WR in imul xor (bad) lret (bad) lods jg mov rex.WRB fsubl leaveq jo cmc hlt rex.RX ficomp add stc (bad) movabs (bad) sub rex.WRX fdivrs lods movslq (bad) push test lods std rex.WR rex.X leaveq in (bad) pop test outsl rcll in jmp (bad) lods test (bad) insl mov in xlat hlt orl cmp gs mov jns (bad) pop or mov mov cld stos retq rex.B pushfq (bad) or sbb jg sti callq hlt js sub (bad) pop movabs (bad) cltd adc out rclb and movabs and (bad) xchg (bad) mov stos in rex.WR lock sub rex rex.WX (bad) (bad) xor out lods add sub loop js lods or xchg cltd lock lods push pushfq repz fwait rcrb test js lods jl gs rex.RX xchg pushq insb add lods pop in stos stc in add in sbb mov in pop adc or sub sbbl (bad) xchg rex.WX (bad) mov and xchg popq lret rex.WX lods je test xchg movabs cmp je or movabs or outsb leaveq lods mov jrcxz nop add movabs mov int rex.WB rex.RXB rex push stos sbb rex.WRB lods pop mov rex.WB pop jnp lods fnstcw adc or (bad) enterq lahf lods (bad) int3 (bad) add in lods jl retq test je fcoml mov repz ljmp out jnp stos gs add rcrl adc lods sub sub testb stos iret push jnp enterq pop lahf or and test fsubrl movsb add scas cld sub jb xor (bad) lods icebp fs mov pop xchg lods js (bad) sub (bad) outsb lods sahf add packuswb jmpq (bad) mov xchg test int lods (bad) cld nop mulb scas fndisi(8087 add clc mov ss jrcxz sbb xchg sub jrcxz and mov sti out (bad) lods add xlat data16 or pop gs mov (bad) or xchg (bad) sbb rorb out xlat (bad) lods rex.WRX pop scas jae lods adc rex.RXB fwait enterq xor scas in movabs sti cmp lods repz mov rex.X mov enterq test jle xchg sbb lods movabs int3 sbb out and out jno jrcxz jle (bad) cmp lods sbb adc lods outsb (bad) (bad) mov mov in (bad) retq lods (bad) fstl mov mov or and fimul cmc add rcl rex.WR jns cltd cli enterq cmp lods and sub movabs jl xor push lods idivb (bad) rex.WRXB rex.X fsubrs js (bad) lods adc mov enterq test jp lods sub iret rex.WX and adc mov pop xor movabs mov xor pop jo subl xor lret rex.WX push lods rex.RXB insb adc lods sbb push jg lods faddp mov add (bad) sub cmp out xor (bad) scas mov lods jmpq movslq imull rex test and xlat jo in add and sbb add (bad) or sbb (bad) sub nop fucomp js stos (bad) cltd (bad) add xchg scas mov jp (bad) pushq jmp roll push lods adc mov sub pop test (bad) test invd addr32 rex.WXB rex.RB and lods pop and (bad) faddl (bad) jg out insb scas xchg mov add pop or or stos mov (bad) out or out pop cld (bad) lods mov fs xchg xchg lods jae mov (bad) mov (bad) (bad) mov stos movsb mov (bad) repz (bad) jmpq push mov rex.RXB stos divb int3 push cmp sti lods adc pop pushq mov scas fst test and lods imul or (bad) cmp movabs (bad) lods xchg xchg (bad) orl insb sub outsb movslq int pushq (bad) out lods add outsl adc popfq outsb test out lods scas (bad) jge outsl sbb lods sarb pop adc imul shrb jl jbe stos iret push rex.RB xlat (bad) sahf lods fstpt cli scas scas adc lahf subl (bad) rex.WRXB shl outsl lods std and mov movabs mov test adc add jno,pn cmp sub lods fstl push fidivr cmp test stos adc xor adc mov fiadd scas and mov (bad) jl mov rex.RXB imul pushq rolb (bad) imul mov (bad) shrb test in cmp mov sub jl lods stos insl adcb sub lahf pop (bad) insb lods or and sbb ficomp lods xchg sub andb and lods mov rex.B xor mov cmp cli mov orb cwtl (bad) mov mov hlt sub xor rcrb add jle out mov incl lods shrl rex.WXB and fwait lods (bad) or movl (bad) lods adc sbb jrcxz mov fldt int rex.XB fldcw clc xchg xchg out leaveq (bad) faddp jl scas mov nop mov pop ljmp mov mov mov lods int3 cmc jmp pop adc lods mov (bad) mov (bad) iret cltd push sub outsl lock sub rex.RX vmovq imul scas test (bad) push xchg int pop lretw lods xor fdivr add xchg imul pop sub mov jg sbb push rex.WRX lods fiadd mov pop xchg ja je or movabs outsl xchg xor in nop callq fwait cmp mov rex.RX sub fldenv (bad) scas cmc pop test jmpq rex.WX mov xchg movslq pop lods insb push cmp jb jnp lods sub xchg rex.X sti add mov rcrl and pushfq jo adc and out cld jbe adc sti rex.WRB (bad) rorl sub lods and sbb nop rex.RXB mov pop mul lods xor std and clc lret sbb mov lods fidivl or mov fnstenv lods add stc incb jg cmp jge pushq (bad) jnp in (bad) xchg cwtl mov mov ficompl cmp andl test lods push loopne shll lods imul movabs pop shr mov loopne stos retq in lods addr32 movabs xchg test iret (bad) mov retq imul out rex.WRB xchg lods or jns lret stos rcll adc lods rex.WRX fs sbb jrcxz es movslq adc shrl and lods inc (bad) pushq ja fsubrl jno shrb (bad) jne sub xchg sarb movsl lret test xor jle lods sub cmp pop (bad) shrb in sub and (bad) stos add outsl lods and data16 cmpsb xchg pop jb loope movabs mov pop jno mov or int3 mov in lods xor (bad) scas jg (bad) pushq rep nop mov sub or fild push scas fucomi fstpl lods scas push (bad) test outsl (bad) icebp rex.RX mov cmp jp rex.RB rex.WXB rex.X int3 test lods rorb js stos lock stc (bad) (bad) mov mov fidivl cli sbb add rex.WXB stos movabs ss movabs jp (bad) add or jbe or jb (bad) mov orl fstps sarb mov cmp je adc mov or (bad) pushfq add ljmp ja cmp add sahf adc pushfq or mov rex.RXB cwtl mov cmc sar sbb jmpq fwait test jrcxz and xchg (bad) push pop xchg mov jo push lods jge jle add jno cmpsb (bad) sub repnz push xchg in clc cli pushfq and (bad) mov loope test mov retq sub push jg cmp fcomps mov lods (bad) xor outsl addr32 lret movsl sub sbb (bad) pop rex.R lods or outsb std rex.WRXB xchg lods mov out (bad) rex cmpps cld std add xor or push adc mov in rex.WB rex.WR xchg loop (bad) repz cltd push je rex.W push (bad) test jne lea clc loope lods (bad) sub jl (bad) lods pop iret jo cmpsb xchg test lods push imul lods jb mov shll sbb mov and lods mov ja mov push rex.WRB pop sub lods adc mov (bad) (bad) sbb stos loop (bad) (bad) or fstps jl (bad) push int3 lods xchg cwtl movabs (bad) lock (bad) outsb mov jb xor out std rex.WR fsubp test sbb pushq lods callq lods mov lods (bad) cmp (bad) xlat mov repnz scas xchg fdivrl fnstsw sbb fsubrs and xlat add jnp scas lods ffree or cltd jne xchg lods add mov fstps adc jrcxz ds shrl jg cmpl xor out icebp lahf push add mov rex.X scas push loope mov xchg sahf lods pop adc mov jp pop xor adc loope rex.RB rex.RX retq sub xor fsubrl jbe sbb mov or and jne lods fucom mov mov scas add jbe fdivrl hlt clc sar and lods stos sti out rex.XB (bad) pushq or sbb faddp clc pop sub (bad) lret icebp lods mov cwtl jmpq lods imul retw sti je shrd rex.R fldcw (bad) add cld in (bad) jnp jp mov cmp fldcw movsb jno jl lods retq push pop xor subl mov xor or movabs pop sbb lods push mov div je (bad) lods movsb std gs mov and lods test add int lods in fsts pushq rex.WXB lods rcrb push pushfq enterq (bad) stc lods cmp sbb cmpb (bad) fsub (bad) pop add imul add mov pushq mov jo xchg rorl cmp test adc xor stos (bad) jmpq sub xor popfq lods mov cwtl js jne xchg es rex.W stos lods mov xlat shrl test lods cmc push movabs mov pop lods leaveq gs neg or fsubrl adc or rex.WB sub fs test fcoml pop or std mov and movsl sub (bad) lods cli pop mov sub lea cmp adc cmp sub adc sub rex.WB retq sub jo xchg retq (bad) (bad) xchg movabs shrb (bad) (bad) scas mov leaveq (bad) test sub sbb rex.RXB (bad) add popfq mov mov xor stos sub out push out mov and mov imul lods jo (bad) fcompl sub outsb cli lods andl lods rex.XB fcmovnbe (bad) stc push rex.XB sbb (bad) sub in (bad) sub rcll sbb jo or out jae insb mov jmp cmp in cmp lods stc xor mov lahf adc (bad) push int3 (bad) fidiv test imul enterq leaveq loop rcrl jge xchg add mov adc adc xchg cld (bad) mov addr32 outsb adc cs mov lods push in in adc cltd (bad) rex.WRX test mov adc icebp in loope js mov movsb add outsb xor mov adc (bad) insb mov (bad) sbb movabs (bad) lods rex jno outsl pop (bad) pushfq rex.X jns and add push (bad) rex.WRX sub push sbb lods lods push rex.W lods push mov xchg xor gs jbe insb lods pop iret sbb loop out adc adc rex fiaddl jae add jle enterq jp sub notl scas cmp lods pop cmp ss lock fistpll mov sub insl rex.WR mov sbb ss mov repnz punpcklbw callq push add (bad) lods in ds (bad) xor rex.WB mov imul add cmc test stos rex.XB imul or jp out push sub adc insl lods rex.RXB and adc lods (bad) out test sbb js repnz sub lahf out std cmp rex repnz lods leaveq or xchg (bad) (bad) mov (bad) or fcmovnu retq lods mov test (bad) (bad) leaveq rex.WRXB jae jne adc fisub loopne (bad) mov (bad) in sbb popq or (bad) or pop lods cld fildl (bad) mulq push sbb nop adc mov or jbe rex.WR mov (bad) insl mov (bad) (bad) rex.RB xor mov movabs sbb sub pop data16 adc mov sbb cld cmc xchg fldl pop in and xchg mov rcll mulb testl (bad) stos add push stos mov (bad) push lods mov add fldcw fcomps in callq mov movsb jo push int3 sarl pop lods (bad) movabs lods pop add bswap test (bad) cmp lods mov sub fcmovbe mov rex.X shr rex.WB pop mov lods (bad) loope mov sub push rex.R cmc adc xchg rex.B std add lods sub leaveq mov movabs repnz rcrb mov jmp adc cwtl add rex.WRXB xchg cmc xor rex mov xlat adcl sbb sbb add rcll rex.WR lret (bad) pop es (bad) rex.XB mov rex.W lods xor add (bad) (bad) in test xor or mov xchg sarl jb (bad) (bad) mov mov imul jb lret clc mov mov sbb add test xchg or ljmp mov lods rcrb cmpsb imul push (bad) sbb cmpsl rex.X mull and adc lods jrcxz iret and loopne,pn cli (bad) test enterq sub pop and jmpq scas mov or scas (bad) pop imul (bad) shrb push mov shll lods retq mov loopne cmp js push lods test stc data16 in lods pop rolb rex.WRX (bad) iret test mov xchg jmp mov cli lods scas (bad) mov pop ja rex mov sub cld in sub (bad) scas pop pop mov or (bad) mov (bad) sbb rorb in lods (bad) icebp in iret jae sub (bad) hlt scas fwait callq or (bad) cmpsb lods repnz push movabs pop pop cmp stc clc fldt movsb pop rorl or lahf je jns movabs or sub pop adc fdivrs sbb mov (bad) jp (bad) and (bad) or sub lods rex.WRB out xor mov orb lods push and lret repz in lods and cmpsb test rex.RXB test lods (bad) (bad) and scas lods pop clc jmp int3 mov adc sahf push outsl jle in (bad) xchg rex.XB sub insb imul jne rex.WRX movabs xor decl jae sub jrcxz retq lods lret out adcb (bad) (bad) pop mov jmp xor rex.WRXB lods sub sahf mov (bad) pop lods sar lret xchg and add xchg lods pop mov (bad) xchg (bad) fsubrl and bnd (bad) loopne rex.WX (bad) add xchg jns jg pop cmc test flds lods hlt pop (bad) rex.WRXB scas xchg pop (bad) rorb adc fadd xlat cmpsb and add hlt rex.WX flds mov lods enterq add callq (bad) push scas cmp cmp lock imul or rex.B (bad) mov and pop lods enterq fisubl sahf (bad) mov (bad) lea mov xchg movslq lods outsl movslq cli fdivs shll add (bad) mov xchg jno or in (bad) xor add enterq mov stos fisttpl lahf sub adc mov or orb scas insb (bad) sarl mov and and sahf mov adc test movabs pushfq pushfq push cs sub fdivs icebp (bad) (bad) sub add test cld mov rex.WB (bad) (bad) mov sub nop mov adc rclb mov mov fdivrs (bad) es xlat sbb icebp pop int adc retq sbb rex.B add je (bad) and jmpq jmpq pop shrl or shr cltd in rex.WR xor mov xor and scas xlat test jo negb (bad) xor rex.W (bad) fsubrp stc sbb (bad) (bad) rex.X stc in stc mov fcompl jl sub cmp adc (bad) push sbb (bad) or mov (bad) test fcomip xchg pcmpgtw fisttpll add jmpq or insl adc cmp cmp (bad) fsts fcoml xchg in repnz mov (bad) xchg test mov cmp lods loop hlt adc shrl test add movsb or or xchg mov out sti icebp loop push cmp movsb rex.WR ds rcrb in retq xor or adc (bad) rex.RX out lods push (bad) int lods (bad) sti add ss cmp push ja scas movabs movabs rex.R or repnz test sub sub stos insb stos or insl pop decb adc rex.XB sbb mov pop subl adc lods mov cmpsb cmp cmpsl mov lret xchg push and sbb outsl sbb lods ds mov (bad) (bad) jae mov rorb movabs ja lods (bad) push push test pushw stos fistl xor mov (bad) push testl mov xor rex.WR rex.RB lods mov adc pop movabs (bad) nop lods cli jae in movslq jrcxz mov (bad) lods jp push ss scas retq mov ds rex.WR loope ljmp sub rex.RX or lods mov nop sub sti out adc rex.WX xor push rex.WRX retq rex.RB scas sub imull movb and lods mov xor (bad) movabs callq sub retq (bad) lods cwtl (bad) (bad) (bad) popfq imul out xchg pushfq es pop rex.WRB jae sub rex.RX jnp lock mov pop (bad) sub lods int cld (bad) clc xchg sub lret movabs pop insb pushq xchg lods icebp and xor movb mov out and mov test adc (bad) cs in adc je jmp rex.WXB outsl and leaveq (bad) lock xchg lods retq cld mov cld xor mov xchg js mov sub add (bad) adc mov (bad) movabs pop movabs rex.X mov (bad) outsb (bad) int3 pop add pop sub rex.WRB out test idivl cmpsb int3 mov fidivr insl (bad) xor sbb adc push xchg cmp sbb jge (bad) lods rex.RB (bad) rep (bad) retq cmpb pop je data16 xchg (bad) adc (bad) lods fnstsw jb lods xlat fsub shr rorb lret (bad) push xor stos or xor lods jne jo jg jmp (bad) pop rex.WXB test xchg gs lods leaveq sub (bad) and and in add jmpq in stos (bad) push cmovns fcomi and test scas sbb mov shrl (bad) sub pop adc push pop cli sub cs lret test and sti in cmp callq movslq cmp cmp add out rex.B xchg cmp sub pop (bad) lods shlb enterq mov syscall and adc lret xchg stos test fnstenv pushq pop (bad) fwait (bad) sbb adcl lods cltd cmp xchg mov fldcw (bad) or mov testb cmp test scas movabs fldt mov (bad) lods pop rex.WRXB xchg pop jbe fidivl loope adc movsb jmpq shrl lods sbb push pop add or notl sbb adc mov lods mov (bad) lods ficoml xlat sub retq rex.RX leaveq add out loope mov sti mov mov mov sub add sub in pop (bad) cmpsl fwait imul adc mov inc sbb popfq imul push movabs movsb imul push ss cmp rex.WR enterq (bad) rex.B movabs rex.RX lret sbb int lods movabs sub rex.RXB mov add mov mov lods add retq scas (bad) mov addr32 out mov lods xchg fdivrs movabs pop xchg xor (bad) jo in retq or lods push sub xor (bad) add lods enterq jno movabs lret rex.X jbe mov sub scas xor (bad) shrl je (bad) mov adc push xor lods fs mov lret roll in mov out or loop (bad) rcrb (bad) sbb or or xchg (bad) stos sub (bad) (bad) fldcw xor mov and xchg data16 push pushfq lods cld std icebp add rcll push cmc (bad) rex.WRXB or rex.WRB (bad) (bad) xor ss rex.RX (bad) shrb cmp fwait (bad) mov cmc (bad) movabs (bad) xchg (bad) imull (bad) push and shlb (bad) movslq fldenv lods rex.RXB push xchg sbb mov out hlt mov add (bad) shrl rex.WRB or insb push in (bad) push lods (bad) test rex.WXB pop push data16 sbb mov in jp adc cmpsb adc push sahf jbe xor (bad) lods mov sub and lods adc rex.RX fstpl rex.WXB push (bad) sub or mov sub rex.XB (bad) xchg sbb stos xchg adc or lods mov in lods xchg cmp jrcxz int jne fcompl movsb or rex rex.W (bad) movabs mov (bad) add lods (bad) in rcrb test mov mov out and lods nop test out lret fstpl lods sub rex.WXB xchg adc scas pushfq leaveq jrcxz (bad) adc jle outsl mov or clc xor mov retq in (bad) push (bad) mov sbbl xor (bad) clc mov lret or or jne in rex.RXB rex int xor rex.R cltd mov sub movabs (bad) mov (bad) (bad) or callq xlat out rex.R mov adc mov nop rex.WRX js rex.WRXB rex.R or mov rex.RX or or pop xor jo insb rex.WXB (bad) add lods (bad) fidiv (bad) xchg jmpq lret je adc clc adc vcvtsd2ss or mov (bad) idivb or (bad) cmp in pop sbb mov lods jne mov rex.RB lahf (bad) cmp out movabs insl out cmpb mov pop (bad) rex.WR cmpsl lods sub rcll xor insb and or (bad) cmp lods push sub clc push pushq rex.WX xor shrl int3 sbb cmp mov sub cld rex.WB push sbb mov (bad) mov loop movabs and sbb or push sarl mov insl mov imul fldcw adc in (bad) xlat in lods cmp rex.RXB int3 mov popfq push cwtl sub stos jrcxz insb std rex.X rex.WB cmp adc mov pushq and mov icebp pop mov and (bad) lret or and xchg stos sub sub stos lea mov mov xor or movabs sahf outsl fldt mov sti movabs (bad) movabs pushfq mov mov cwtl fldcw lahf mov push out jrcxz int3 lods test loopne (bad) sub scas ja (bad) (bad) movslq je callq sub imulb xor in test add pop jbe pop mov jne or lock or and in in (bad) mov rex.RX xor lods pushq mov je (bad) adc pop movabs lods mov xchg movl ja cli and sub and rcrq cmpsb shrl rex.WR roll jae cmpsl jl movsb xchg push pop mov (bad) mov xchg pop adc sahf mov lods loope cmc js shrb mov test movabs or cmp mov sub cmp flds (bad) add icebp lods add jno (bad) (bad) movabs shrl addr32 lods shlb insl jrcxz rex.R lods xchg callq int lods iret cli (bad) cmpsb xchg and lods insb sub mov jns scas mov mov add in rex.RXB lods xchg (bad) jb (bad) mov xchg mov sub rex add and sbb rex.RX out lock movslq rcrl (bad) sub xor fdivr rex.WB insl leaveq movabs sub stc out adc lods push imul mov cltd test fcmovnu (bad) fdivrs cmp fsubl push adc (bad) sbb push (bad) mov jg jnp (bad) pop mov or rex.WR sarb scas andl mov shld subl add insl (bad) pop sbb jnp loopne mov or rex stc and xor (bad) data16 lods mov std rex.WRB fwait lods jno scas xchg adc or (bad) in and mov or (bad) rex.RX rex.WRB fist jl push pushq lods cmpsl (bad) pop movslq fdivl data16 in (bad) lods adc popfq xchg mov mov adc (bad) shl pushfq fdivrl lods out and xor sbb or std iret (bad) lods sbb adc (bad) jmp push repz mov hlt shrb cmp mov xchg adc insb push cmpsl (bad) test cmp sub mov outsb (bad) mov (bad) movabs hlt or scas mov cltd and pop pop xchg (bad) (bad) sarl nop cmp insl insb imulb movabs cmp (bad) lods sub jle scas push retq cli lods adc fwait (bad) lods (bad) xlat cmc fs sbb movabs lock stos mov cmp (bad) add (bad) adc add cmp int3 imul cmp lods rex.WRX (bad) xchg mov jbe in rex.X retq rex.WRB fisubrl (bad) add jp jnp mov (bad) repnz test (bad) mov pop sub lahf xor rex.R fwait gs lods insl sarb lods adc iret lods (bad) sbb cltd jle lea lods and xor lods mov pop stos jmpq jnp cmp push test sub rex.XB jnp in (bad) sbb in xchg sti mov and jae imul lods jne callq jrcxz rex.RX pushq mov sti lods stc and loopne lods add mov lods (bad) cli xchg xor jg jle fistl outsb rex.XB stos jmp test pop or cmp ds (bad) xchg (bad) (bad) (bad) jmp lods scas (bad) js (bad) cmpsb or stos in add adc mov fiaddl sbb lods insl fimul (bad) lock and mov lret xchg adc xor pop xchg jnp shl lret mov out lret (bad) lods pop and lods stc rex.WRXB js (bad) fldcw (bad) xor movslq in clc push lods or mov stc stos cmpsb mov out cmp shlb sahf lods movabs out mov adc cmp fiadd jne (bad) enterq rex.WB rex.X in hlt xchg movabs jne sub data16 xchg (bad) push rex.WRB clc cli mov mov fbld sbb push push out push xor mov stc mov jmp jp and rex.WXB or loop fiaddl int sub mov popfq xor xor fs movsb sbb movsb fsubrs or test mov pop test (bad) loope int3 scas test movsl adc jle movsb sbb adc (bad) cmp cmpsb jrcxz mov add fst (bad) jp mov pushfq or adc retq jae xor xor pushq xchg cmp clc cmpsb movl sub je xor rex.R int pop stos icebp fwait sub or sti jbe rex.WRX adc sbb rex.WRXB rex.WR jne mov adc cli rolb lods test xor add mov add push fsubr mov adc clc mov pop xchg rex.WRXB mov adc xor and pushfq adc (bad) rex.WRB xor imul (bad) pop or jne scas cmp xor sti std jge sbb mov int (bad) adc imul adc or insl mov add leaveq scas outsl rex.WRB fadd in jl mov scas sbb xorl fs (bad) xor mov adc fdivr mov jmpq (bad) loope jbe and jle (bad) jbe (bad) cs rex.WR rex.RB rex.B pop lods sub mov and retq nop xchg mov lods imul xchg jb adc pop rex.RB cwtl lods idiv pandn outsl (bad) rex.WXB sub lods retq add out fisubr jne in adc (bad) movabs scas pushq (bad) and cmp lahf cmp (bad) cwtl xor lods jno add test cltd lods rex.WRB rorb mov jo loopne andl outsl cltd jp (bad) xor fdivrl movabs xchg and rex.WRB shrl je shrl (bad) sub lods retq pop mov or lods xchg xchg cmc stc lcall (bad) lock sub fwait jno xor lods xchg rex.RXB mov or lods push adc orl mov movsl jg in fldl jg lods adc clc pop add sahf add cli jp lods cmp rex.WRX addl jns xchg and loope mov fnstenv cmp (bad) (bad) jmpq callq sbb lret rex.RXB lods test (bad) rex.WR pop xor pop rex.W mov addr32 in mov rex.R lods sarl sbb xor (bad) lods mov insl shrb adc shrl add jno xchg lods test rex.B outsl (bad) fmull lods test int sahf rex.XB mov rex.WRB rex.WR (bad) lods (bad) xor jge fucomp std movabs sub lods adc (bad) int3 pushw push lods sub cmpsb rcrl lods sub mov movslq mov cltd sub stos lods jns sbbb sub cmp mov cmp add movsl gs test loopne cmp (bad) cmp add in mov fildll push (bad) stos cwtl mov pop jp data16 rex.WX rclb jle stos add sub xchg pop jl andl es push pop jg scas ja rex in sub lods (bad) test cs cmc retq sbb lods in pushfq test xlat and jmpq lods (bad) push and jrcxz jnp (bad) xchg shrb lods (bad) cmp pushfq mov cltd lods mov es add leaveq xlat sbb lods cmpsl hlt cmp movabs rex.WRB imul lods out pop outsb loope cli mov adc sub pop in jo jg sti rex.RB rex.WRXB jns cmp (bad) lods or (bad) stos xlat mov callq repz lods lret and cwtl add sub sbb lods push repz fidivrl rex.WR in sub outsb and je cs (bad) popq (bad) stos callq sbb fcomp test cmp lea (bad) loop insb cmp mov mov or cmpsb sbb jno div movslq sbb rex.WR repz (bad) out test outsb popfq lods mov imul mov add fcmovnb jne (bad) rex.WRB insb add (bad) cwtl scas mov subl adc mov sub lods jno pushq outsl (bad) and movabs stc (bad) enterq (bad) rex.RB pop xchg fwait mov mov jo xor lods rclb cmp sbb sub mov out sub (bad) (bad) fnsave imul rex.RXB rex.R cmp mov int adc hlt xchg lods (bad) mov movabs cmpsl cli add adc rex.B lods jae mov clc xor sub rex.B rex.WX faddl mov rex.WRXB fwait jge fwait add add xchg xchg stc sbb sbb scas lods rex.RXB imul (bad) cli or mov not out sbb scas sarl mov movsl lods ss fwait xsave and sarb push mov test ds mov xor jae (bad) scas (bad) rol mov sub sub or lods movsb mov test (bad) (bad) (bad) lods retq cltd (bad) out sbb push adc out (bad) add scas (bad) mov vcvttsd2si and (bad) jp (bad) or rex.X imul rex.WRX insl outsb pushq mov and lods and xor xchg lods out mov rex.WRB stos adc lods fnstsw cli gs jb (bad) cld (bad) (bad) push cmp or push add (bad) movabs cli out stc jmpq mov sbb mov mov imul scas or leaveq jmpq cmp (bad) (bad) (bad) push mov adc (bad) mov test cwtl jp or adc jo cmc test sub mov data16 insl movabs xor rex.R rex.WB mov fs rex.WXB stc xor pop cwtl push xchg jge mov (bad) in movabs (bad) sub data16 jae,pt jnp imulb stc (bad) out retq push (bad) sub lock movsl push lods in mov adc (bad) test (bad) mov xorb adc and and sarb (bad) mov (bad) sbb sub fldl imul cmp jne lods movslq iret mov rex.RX lods movabs rex.X cltd cmp imul sub out add lods nop pop stc sbb mov mov callq jp hlt rex.WB pushq mov fucomp lret cmpsl enterq adc xor nop lods cs lods clc (bad) cmp iret lods (bad) and push (bad) pop sbb mov mov sar scas push ja lahf pop mov mov jnp lock lods adc jmp in loop cmp pop sub lods push iret mov pop lock fadd sub (bad) xor rex.WR (bad) xor rex.WB (bad) lret test push (bad) (bad) pop rex.RXB jnp mov (bad) lods and je fst (bad) (bad) nop outsb fmull insl xor mov loope pushfq stc callq add (bad) xor imull jns in icebp je jb adc pop sub sahf in icebp mov fdivl lret pop rex.RB rex.WX (bad) cli enterq movabs out test (bad) repnz or mov sahf (bad) rorb repz pushq add in rex.X sbb movslq jno push pop lods rex.W rorb (bad) movsl in add lods insb xchg scas jae jo int in fwait and lods test (bad) mov jp nop rex.RB sub xor out cli scas (bad) (bad) or xchg in popfq in cwtl mov mov or rex.R sub adc xor int3 rex.X rex.R rex.RXB je add xchg mov sub (bad) lods (bad) sub xor jmpq sbb xchg sub out out movsb test sti shrl or lods jne or pop stos and jmpq cmpsl jnp sub sbb nop scas lods fdivs push frstor retq out lret stos retq rcrl js lods fs xor pop fstpl xor xchg callq repnz (bad) je lods (bad) (bad) and data16 (bad) shll sub rex jbe push int3 test jmp fwait sub cmp (bad) (bad) xchg cmp jae adc retq (bad) (bad) sub jrcxz sbb (bad) hlt xchg jmpq fstpt (bad) sbb rex.WRB int sbb or rex.R lods hlt cld mov lods cltd mov rex.WRXB pop lret mov js sub xchg pop sbb lods fcmovnbe pushq (bad) fs in testb repz hlt scas ss rex.R jmpq or xor lret lods out jo xchg and std lods sbb sub shrb or add (bad) (bad) icebp mov pop xor push mov lods and (bad) fstpt lods retq cmp pop pop mov test lods mov (bad) (bad) (bad) mov mov jnp sub imul xor jb test sbbb cmp xor stc mov enterq stos pop cmp pop sbb sub or or mov scas (bad) rex.WRB mov (bad) int3 sarb rclb cmpsb ss pop addb xchg xor (bad) mov lods (bad) out movb jne test cli loopne test jmp scas rex.WRB mov mov lods test jo mov fiadd lods lock mov lods add (bad) push lods test xor mov mov (bad) jne movabs (bad) (bad) stos pop xchg xchg in movabs jnp jg test loop (bad) outsl callq leaveq mov jns gs loope add shrb cltd (bad) push jle sbb lods rex.WRXB rex es push sub or sbb mov rex rex.W rex.WRX js insl je jb push scas pop leaveq imull cmp (bad) lods cmpsl scas jne movabs and test mov lret fisubl gs jle or in sahf in or add rex.RB rex.WRXB fldt std stc (bad) cwtl stos xchg test (bad) add movabs out js cmp scas lods sub jns insl cmpsb push mov xchg push adc movsb cli sub fidiv (bad) rex.WRXB movabs xor movsb ja in (bad) mov stos lods lods (bad) fnstsw (bad) mov test jns adc pop int3 iret scas jmp test outsl mov cmpsl cmp mov sub movslq mov (bad) cli outsb mov jns (bad) enterq outsl movsb lods (bad) mov (bad) mov mov rorl pushfq pop rex.WXB rex.W cmp jo pop cmp and jg pop lea (bad) rex.RX cmpsl sbb jnp lods (bad) repz jl or mov cs (bad) mov test test or rex.R js (bad) sahf cmp lea std or nop mov cs (bad) rex.WR or callq adc scas pop in add xchg (bad) movsl and cmp popfq (bad) sub cs iret rex.RX mov (bad) int3 adc (bad) movsb mov jmp (bad) rex.WX pushq int mov mov rex.WB cltd xor jbe or mov pop sarb rex.RX je int3 (bad) pop cwtl jo cmpl (bad) mov data16 cwtl (bad) add and je nop cwtl rex.WR mov pop adc jo rex.WRB test xor jg jl imul cwtl sub insl rex.XB movsl jnp pop in fmull mov adc add pop (bad) out adc test adc rex.WB rex.RXB jno xor pushq rex.XB rex.RXB mov mov jns movabs mov sbb (bad) (bad) nop xchg mov and mov out and (bad) mov xor adc jne (bad) cmpsl (bad) cmp rex.WRX jg cmp outsl sub sahf (bad) mov lret nop sbb ss rex.XB (bad) pop je hlt (bad) pushq retq adcl sbb add fdivrs adc int3 movabs movsl ja pop rcrb add add (bad) cmc movsb xchg (bad) adc (bad) rclb cltd test out jbe scas out sbb scas cli out (bad) movabs sub (bad) sbb adc jo andl (bad) mov rcrb sub retq jnp (bad) xor enterq mov notl (bad) mov mov mov insb cmp int3 rex.WR insl rex in jmpq (bad) adc sub push mov movabs imul cltd rcrb sub mov movsl movslq cmp (bad) enterq or popfq lahf adc (bad) mov sbb mov jo jo mov (bad) movabs movabs jmp mov xchg rcrl fsubrp pushq je insb sbb je mov cld add insl mov scas cwtl out shrb out movsb rex.WRX cmc sahf adc rorl (bad) (bad) ja xor jb stos mov imulb xor (bad) xor shrb pop rex.RX rex.WRX pop mov sbbb jbe xor jae leaveq rex.R adc or (bad) imul repz jbe fs (bad) xor mov lret (bad) lret or push sbb movabs rex.WRB rex.XB rex.WX or enterq sbb push rex.RX rorb mov fnsave adc (bad) sub scas idivq or int3 (bad) jl rex.W ds test rex.XB fs js repnz cmp (bad) ja outsb mov sbb mov mov mov lods cltd adcl outsl xor xor and retq xor mov add (bad) add and js imul sbbb rex.WB lods test outsb or stos sub in rex.WB data16 (bad) sbb rex.XB retq (bad) jmpq int3 mov pop popfq int movabs fimull push xchg add out (bad) xor imul pushfq mov movsb xlat adc xchg in (bad) pushq (bad) jmpq cmc sub data16 (bad) lret ds (bad) int3 pop mov (bad) mov fcoml mov iret xchg fs pop mov (bad) mov ss and xor pop sahf adc add (bad) ds add (bad) in cmp sub mov popfq xor mov cwtl mov in hlt jb je ds or imul xchg and movabs pushq and (bad) mov cwtl rex.WX movsb insl fs jp mov pop (bad) rorb cmp xchg jmpq mov movabs (bad) and js movabs add xor test rex.RXB pop sbb cmc add outsl scas test in out and ja addr32 or xor pop mov pop movslq rex.RXB ss jmpq (bad) sub or test loop adc (bad) adc mov sti (bad) mov jne cmp sahf xchg cltd xchg sub (bad) cmc int3 je imul cmp mov scas addb enterq rex.RX xor mov pop (bad) stos mov mov (bad) xchg mov mov cld lods cmp mov enterq (bad) sub scas (bad) stos fwait xchg push mov mov js jbe mov retq repz mov fs lret pushfq imul fstps xor test or insl sti clc pushq (bad) ror mov jb jns rex.R (bad) jae (bad) jnp xor mov xor rex.WXB rex.WB mov scas test cmc mov callq (bad) cld add jle mov xchg jp leaveq movabs cmp mov (bad) scas insb cli mov mov cmpsb (bad) jne mov loop adcb sub push add shrb imul mov retq (bad) (bad) adc or scas out popq (bad) sub callq add or adc rorb (bad) repz ss enterq in sub jrcxz add rex.WR xor sub movabs push (bad) sahf insl movslq jl (bad) (bad) and sahf rorl out add sub mov (bad) cs rex.WRX add popfq xchg je fcmove jle adc (bad) xor fisttpll mov rex.WR or ja fistpl je mov int3 mov hlt and (bad) loope or (bad) scas movabs jno xchg or divl (bad) jo rex.WRB es out (bad) rex.RX jne stos pushq out shrl xchg movabs (bad) rcl jb (bad) rex.X mov add and adc add adc adc jne mov enterq and cmp rex.WXB mov movabs movsb rol (bad) sahf lret (bad) rex.WRX lret sbb movabs jbe cli in jo mov rex.X scas repnz add scas pop js xor and adc lock lahf out jne add cld idivb fbld div out rex.WR in cwtl movsl mov gs add mov xchg callq (bad) (bad) sub out hlt add movabs sbb (bad) mov mov mov xor jb mov js vpackuswb (bad) sti sbb rex.W (bad) movslq mov lahf sub (bad) pushq cwtl adc add popfq add fidiv jbe int3 cmp in xlat fucomp cs and lods add jle cli in stos js mov ss jne movslq lret rex.WRX lea lret sub mov lahf lcall add adc mov scas js je fimul mov movsb cmc jns fs and cmpsb sub (bad) fbstp sbb rex.WX fwait lea jne add jg pop int3 cmp xchg mov mov or fstpl icebp mov mov (bad) cmpsl add adc in fsubrs out adc pop sbb je (bad) add rex.R rex.WRXB mov out mov (bad) insb shr pop (bad) rex.WRX (bad) rex.R xor mov jl imul sahf (bad) jrcxz pushfq mov movsb and cwtl stc mov sub sbb or adc xor sub adc mov rex.W rex.WB sub enterq rex.WRB ja es scas scas hlt imul rex.WX rex.WRB rex.W rex.WXB rex.WB cmp xchg (bad) rex.WB rex.WB rex.WRB pop or js rex.WRX sbb and rex.WR rex.XB jo rex.W xchg cld cmp movsb je pushq pushq (bad) adc and cld enterq divb (bad) sub rex.WXB fs sub jl mov adc or (bad) lahf fmul in fcompl mov mov es popfq and rex.WB rex.WRB in int3 cltd adcl movabs scas (bad) int (bad) popfq jne or pushq mov xor sub adc insl mov (bad) scas cwtl rol int3 test sub jnp (bad) xor movabs mov test adc rcl imulb (bad) jmpq xor (bad) cmp mov cltd out (bad) stos nop add mov test out orl (bad) ss mov test jns (bad) movsl iret roll rex.RB lods fsts rex.WRB rorl sahf fsubrl idivl adc pop mov popfq jbe mov ja insb xor mov adc cmp sbb and cmp js fdivr movsb insl pop and push ja cld je sub or rex.RXB push repnz leaveq or mov xchg xor mov stos sahf insl add sbb xor out xor adc outsb stc cltd insl rex movabs add enterq sahf mov test test add popfq mov movabs lea fbld fstpt lods sti in cmc retq push add (bad) xchg sbb xchg rex.XB shl scas pop andb nop (bad) jb (bad) mov in sbb imulb sbb repnz mov pop jb xor rex.X ja or in retq or and adc out sbb xor xchg rex.B scas or leaveq (bad) rex.WRB cli rex.WX adc imul (bad) pushfq insl (bad) ja sub out pushq mov int3 mov callq mov mov add ja mov adc fnstsw mov xor (bad) ficom cmp rex.RX and (bad) mov mov rex.WR (bad) enterq std (bad) jne pushq ss add rcrb xor out jo out (bad) out sahf jle ss xor (bad) mov jl sub (bad) (bad) mov pop subl out jnp insl lret xlat fsubrl jbe sub lods ds rclb jmp jmp ss in mov mov sahf (bad) (bad) (bad) idivb cmp cwtl add push cltd lahf jl (bad) addr32 (bad) cmpb jo fcoml push shr lods fwait add loopne movslq retq lret cmc mov rcrb std sbb (bad) mov and movabs sub mov sub leaveq scas js sub xor cwtl movsb cltd stos (bad) mov sbb xchg iret cld rex.WR rex.WRB retq rex.WR ss mov xlat mov int3 adc movabs pop or out mov (bad) fistpll pop xor rex.WRX rex.WR callq sub mov mov mov addr32 xor adc rex.R rex.B jl mov and (bad) movsb xchg rex.RB adc mov sbb outsb and cmpsl (bad) (bad) movabs lods cld (bad) scas add scas (bad) test nop insl hlt cmp lret adc or sub sub int jnp (bad) nop callq xor (bad) xor mov adc sub jne xchg add callq (bad) imul jnp lret add jmp jbe movsb cltd test mov pop xor and (bad) xchg imul gs popfq (bad) fsubrs rolb jns cmp (bad) test rep imul jp xchg jg lahf out callq pop stos leaveq movsb lock and test fmulp je (bad) adc xchg rex.WRB mov mov mov jno test movsb scas int3 and sub rclb sbb cwtl jmpq (bad) imul mov lock adc in or (bad) add hlt mov mov cmp pop repz insl sub rex or ficoml lret xor rex.R pop adc (bad) mov xor mov (bad) nop mov xor mov (bad) lock movabs and add ss mov mov mov fcoms outsb and and add (bad) sub or callq (bad) sub xor mov pushfq (bad) xor enterq cmpsb cmp sahf mov mov mov test out (bad) in repz cmp (bad) pushfq or rex.RB cmp popfq vmovd push (bad) sub sbb rex.WXB (bad) fidivl sub insb test in leaveq movabs cwtl jno xchg stos sub (bad) (bad) mov mov ror popfq add pop mov or lods (bad) jno (bad) fwait mov (bad) movsl jns repz mov (bad) and fcomps adc loopne push js (bad) add mov mov insb shll (bad) mov es pop sub (bad) adc sub (bad) mov (bad) (bad) adc sbb jo (bad) xor lea mov in lret sub insb sbb pop nop gs test std lret sub (bad) icebp mov mov rex.WRB pushfq popq cwtl mov or outsl jo movsb pushfq xor sub add xor jmp andb mov mov rex.R movsb xor and popfq mov xor sub sub jo cmpb cmpsb mov pop leaveq rorb (bad) mov int3 add push hlt lret pop rex.WR pop and test add and test cmpsb add (bad) lea (bad) insb push xor sbb mov sub sub sbb out add add movsl je negb shrl xchg (bad) sub adc jbe pushfq cmpsb iret cwtl (bad) (bad) xlat sub mov movabs or orl movsl sbb test cmp jno insb sbb imul enterq cmpsb mov cwtl leaveq adc adc sti pushfq xor jrcxz jmpq (bad) xlat cmp lret (bad) pop (bad) shll sbb notl fimull cmp jne adc xor mov or movslq lea sahf cwtl rex.RB gs cmp mov (bad) and mov in lret in stos rex.WX in (bad) xchg (bad) (bad) (bad) pushfq lods xor (bad) clc (bad) icebp push (bad) (bad) jmpq js (bad) (bad) adc lret (bad) outsb or fldenv xor hlt pop retq movsb mov imul test mov movabs adc cwtl popfq pop insb mov xor imul sbb jnp imul (bad) rex.RB and sbb jno retq movabs imul je mov rex.WRB imul addl cwtl (bad) jae cmpsb ds jmp cmp sbb rex.WXB callq mov fisubr (bad) (bad) cltd sub retq out xor out cmpb pop insb mov sub mov test mov pop xor cmpsb mov rex.WRXB fs sub mov addr32 mov sub pushq in mov xchg int out int out mov addr32 pushq rex.WB outsb (bad) rex.WB lret and out mov cmp jg mov cmpsb shr (bad) jg clc test jno mov or fstps sub pop fsubrl (bad) add jge add adc jne in clc (bad) cli movd sbb jo movsb rex.RB adc jae outsb add cmp (bad) or (bad) pop add adc cwtl (bad) add leaveq rex.RB shll sahf cwtl push movsb in out cmp mov je push push out and rorb or (bad) (bad) mov rex.B ds callq xor (bad) jmp movabs (bad) stc xlat jo outsl mov sub addr32 mov mov (bad) sbb fucom fidivl lahf int3 ss out out mov add or (bad) lret popfq fwait adc jbe sbb outsl or sub cmp mov movabs lcall jns (bad) lods sbb lea decl jg mov (bad) ficomp cmp shrb (bad) xor fiaddl (bad) sbb negb jge lods pushfq adc je rex.WXB lock and jb pushfq (bad) imul pushq clc std sub iret or test out popfq xor (bad) sub sub in sbb sahf xor mov imul fwait loopne fwait loopne xchg mov adc jge rex.W jmp jo outsl jbe pushfq js stos repz (bad) stc mov sarl cmpsb (bad) stos pushq lods movabs add shll xor xor ja int3 (bad) (bad) in (bad) enterq insl xor rorl icebp (bad) xlat test pushq add imul shlb enterq rex.WRXB mov test mov or js hlt (bad) or subb loopne xchg lock imul adc add rcrl push mov mov pushfq mov fs (bad) pushfq mov movsb pushq sub (bad) xchg sub jo pop pushfq pushq adc in xor jns or sbb rex.R rex.WR adc (bad) pushq cwtl push gs fldcw xchg (bad) cld jo cmpsl shr insl test out fbld mov fcmovb add xor (bad) xchg (bad) imulb jno cmp repz mov (bad) adc movabs jmpq mov mov rolb rol xorl jl rex.WRXB jns or (bad) sbb rex rex.WB int3 (bad) sti mov out scas movabs jrcxz imul (bad) test fldcw jo add mov shrb rex.RXB push lods rex.XB insl rex.X xchg repnz mov fnsaves mov jle ja lock pushfq add movsb icebp jnp shrb and push scas (bad) mov adc mov enterq sub lods lods jmp lock (bad) jne adc mov jnp mov js fcmovne in jmp leaveq rex.XB imul xchg test ja (bad) pop mov jo (bad) in (bad) xchg mov xor ja rex.X sahf (bad) cld movabs rex.WRB rex.RX mov jg je insl fs (bad) or stos mov add incb andl cld (bad) mov sub (bad) sub stos pushq jmp mov pop mov je xchg mov rex.W rex.WB (bad) scas jne mov rcr lahf xor rex.WRX pop retq cmc insl xor pop out rex.RB cmp fwait jmpq mov pop jae adc out cld sub ja pushq popfq scas adc stc adc mov jmp xchg rex.WRX imul mov movslq (bad) insb stos adc repnz fadd mov rex.WXB jle cmp (bad) jmp je (bad) (bad) mov lret fcomps add adc loop push (bad) sbb cmc (bad) sti pop lods es rex.WRXB iret test jns mov hlt add (bad) popfq (bad) adc (bad) (bad) mov insl fs mov jnp pop (bad) sbb xchg mov in mov lock rex.WR mov and js sub xor bnd cmp retq (bad) (bad) rorb mov push cmp stc (bad) cmp mov rex.X lea (bad) jg (bad) (bad) jo push scas clc sbb (bad) mov mov icebp (bad) cwtl insl adc retq sarl (bad) cmp mov adc (bad) (bad) retq rex.WR jo sahf mov add fwait (bad) (bad) fldcw mov mov jb jno add retq jno iret leaveq (bad) sbb stc icebp add pop mov (bad) callq pop rex.RXB and hlt or nop leaveq jl adc push mov cld add xor repz (bad) rex.R mov sub rex.X pop pushq lret (bad) out xor push ss loopne rex.RX xchg add rex.WR (bad) or jae int shr movslq movsl jl movsl xchg jg adc mov out sahf cmp insb mov (bad) mov xlat add test adcl stos or out sahf sub leaveq jbe insl cmpsb mov and fs movabs rex.WR mov or test test cmc pushfq pop nop rex.WR outsl lahf hlt cmp mov or push addr32 adc enterq sbb push fwait cltd xchg and pushfq movabs (bad) jl adc fcomp (bad) rex.WB retq mov out xor xchg (bad) outsb (bad) in cmpsl gs rcll mov add rex.WRXB subps fistpll jbe (bad) or subl pop mov (bad) cmp pop push jns mov insl sub cltd rex.WRB sub adc sbb insb in add negb cmpsb pop std callq insb xor enterq callq test lahf movabs rex.WRXB adc jnp (bad) xor movabs test xor lea (bad) cmpsb jae xor pop xor in fsubl iret jmpq pop xchg test sub adc push pop xor (bad) jb sbb push fimull addb jo rex.X sbb pop adc mov mov insb (bad) adc jno movabs mov ds fs mov rex.RX or int3 out sahf sbb adcl test mov sub pop jmp (bad) cld js fistpl add cltd (bad) jno lret (bad) push mov cwtl pop jne pop lods insb je adc (bad) xlat lret rex.RX xchg pushfq movabs add or jmpq clc rcr (bad) mov std sbb jg sbb fcoml leaveq rex.RB cwtl adc (bad) std ss enterq adc nop jl in nop sub rex.X cli outsl stos in mov js rex.RB jno rex.WX jle outsb (bad) retq es jrcxz in enterq pushq jb cli mov int mov sarb sbb insb sbb mov push repz (bad) sbb cmc xor in imull rex.WR fwait lret mov loopne test lods out iret imulb fmull (bad) in out or xor xchg (bad) (bad) jno sbb nop jo mov mov mov (bad) (bad) mov mov pushfq fs jg (bad) fwait jle mov add pop lods mov rex.RX sbbb mov roll lea sub movsb es fimul xchg cwtl (bad) out pop test mov clc cmp test cltd shll jmp adc or mov (bad) rex.WR rex.R mov (bad) test ss jge and loopne scas jmp rex.RX xchg xor rex.WRXB add sub mov hlt xor mov lods cmc sarb xlat out pushq ds rex.W (bad) (bad) or callq and mov fsubs mov sub pushq out lret scas jno in jae imul (bad) adc sar loope sbb pushq (bad) cmp data16 imul xchg nop adc sti rolb popq movsb jo ds sbb xchg lods nop xor sub or mov out cmp sahf mov std js mov (bad) movabs rex.WRB fwait rex.W out jnp or jge or (bad) mov rex.WR rcrl sbb outsl mov cmp out (bad) (bad) cmp (bad) pop (bad) mov mov insl ficom (bad) hlt in (bad) lahf push (bad) mov (bad) rex.WRXB loope je push (bad) rex.WRB (bad) or (bad) sbb pushq pop lock or in pop lock idivb (bad) cmpsl lods outsb and adc cmpsb rex.RB fs cmp imul leaveq jne movslq xor mov mov add jnp stos (bad) lods jbe lret sub add pop lods (bad) jo mov add pop sbb out callq movabs je clc sub movabs in (bad) pushfq sbb sbb pushfq test jns mov jge jge mov xchg pushfq cltd fwait push in cltd jo int3 pop pushq sarl xchg pushfq fs xchg rcrb adc mov std mov scas orb (bad) imul adc repnz jge pushq adc in adc (bad) shl fmuls icebp jns rex.W rex.XB and mov xchg (bad) nop ja,pt enterq rex.WB enterq sbb push (bad) jle outsb idivl lcall xor adc lahf xchg lret xchg mov mov scas mov gs xor xchg iret or ss rex.RB xor scas std adc cltd mov mov xor (bad) or movsb sub xorb mov and (bad) jl xlat add xchg (bad) mov add mov je data16 jmpq mov mov xor jp jle enterq push push movabs jl mov fidivrl movabs add xor adc or sbb jrcxz mov xchg lods fbstp sub adc fs mov leaveq jg mov (bad) (bad) callq sti in (bad) mov hlt and sbb js fcompl sbb addb es imull (bad) lahf rorl rex.WRX int3 (bad) cld (bad) and js imul ja sahf pop clc jmp jno jl add test push mov pushq movabs lahf ds xlat rex.XB je (bad) sahf (bad) adc cltd outsb push fdiv data16 pop in mov prefetcht1 mov adc (bad) or fcompl scas loop rcrl mov jle insb andl (bad) xor pop (bad) (bad) mov lret fs xlat movabs pop pop rclb (bad) (bad) mov jmpq loop imul (bad) test xor insb cld cmp xchg mov jbe mov lret in pushq int3 add and imulb adc stos sub sub mov test jns out push pushq (bad) ror add mov insb data16 push movabs sbb xor pushfq jmp xor (bad) or out movsb and add adc scas add shlb in retq mov in adc mov mov jns xor sti xchg and mov jge rex.X (bad) or pop pushfq (bad) xchg rex.WRX push negl callq adc xchg (bad) movsl int3 mov (bad) andl pop (bad) cmc int3 rex.WRX cs scas and iret jp (bad) movabs add cmp retq add sahf xchg cmc lods xchg scas mov (bad) js mov enterq addr32 js xor scas adc (bad) je add mov cmpsb or (bad) pushfq ss push lods (bad) (bad) rex.B lea adc insb insb xchg add push cld stos mov std add cmp push shl mov rex.WB mov sub orb jmp or ja (bad) cmp xor rex.WRX mov adc icebp add insb sbb mov orl jmp repnz pop rex.R sar (bad) push pop mull (bad) fstps test lods popfq (bad) rcrb (bad) out jno xchg mov shll scas (bad) movabs movabs je hlt sbbb callq sub imul test push lahf in jl,pt (bad) rex.B lock rex.X rclb stos iret outsb jo mov add ss jne out insl adc push add clc or or (bad) and sahf (bad) jnp addr32 notl sbb vmptrld test lret adc out leaveq ficomp or cmp movabs mov pushq cmp scas repnz jb mov int mov mov (bad) or rex mov mov callq pop stc rex.WRB int3 ss (bad) cwtl je mov mov xor (bad) scas in push mov in jne repz hlt cwtl mov mov in adc es mov mov (bad) hlt mov out mov mov (bad) adc rex.WX mov rex.XB push cwtl outsb sub je test xor mov add popfq xor lret (bad) fiaddl outsb mov test mov imul mov fs scas int3 data16 lock movabs sahf mov clc (bad) add (bad) jb xor insl in cltd (bad) cltd mov xlat (bad) gs mov je lods lret mov mov sbb js pop and mov pop jg adc push mov mov and movsb out fldl cld (bad) (bad) and rclb mov (bad) (bad) pop mov ss sar (bad) movabs adc jmpq sub fisub popq rex.R mov jnp sub push mov (bad) je movabs xor sub sub pop push mov je sbb mov pop insl cmp out shr (bad) stos in rex.X adc adc sub or mov cmpsb mov mov pop fmuls pop add lock (bad) jo sbb xor pushq pushfq pop jns xorl mov callq imul mov pop mov rex.RB mov xor roll xchg rex.W sub adc rex.RB xchg (bad) int sub mov jg rex.R jns push repnz popfq test sub scas lods xor int pop jne (bad) int xchg fsubrs test add mov int3 pushfq in shrb in pushq (bad) mov (bad) mov push cmp sub adc rex.RB fld xchg lods xor fcoms and xor fidiv (bad) (bad) push jo ss movabs retq pushfq xchg adc je rorl push adc xor (bad) test scas (bad) mov lea leaveq loope cmpsb (bad) icebp leaveq insb insl callq sbb lahf jo sub jg jno rex.WRB (bad) (bad) std mov rex.W test jno xor (bad) movabs mov outsl sbb mov sub (bad) sti in pop mov jle mov scas divl scas cld (bad) xorl adc (bad) (bad) or gs (bad) sbb xchg in in or mov iret (bad) rex.WRB fcomp enterq (bad) adc js sbb pop mov scas in outsb mov sbb (bad) (bad) fmull retq pushq movabs ja callq insb (bad) adc vcvtpd2dq xor adc sbb stos xor pushq imul jb,pn mov clc (bad) or pop retq movabs scas or cmp adc and xchg enterq xchg sti (bad) mov sub gs jl rex.WX cli outsb mov (bad) out mov (bad) rex.WR rex.WX in xor jns fsubl ss jbe lsl add cwtl sub popfq (bad) jns sbb (bad) xor adc (bad) jno mov mov movabs jge fs sahf jns leaveq or adc jo xor iret rex.B (bad) test xchg adc cltd sub js rex.R sub mov mov fwait cs pop or movabs jns cmp js push sbb or xor jne (bad) rex.RB test pop (bad) test pop cltd int3 rex.RB pop insl adc scas cli cld (bad) xchg mov or (bad) jle mov fldt rorl (bad) or pushq (bad) jl sahf lret outsb adcb jge xor incb or testb addb xor (bad) fcmove mov (bad) xchg insb xchg or mov sbb insl rex.RXB and add jne scas shrl ficomp icebp rex rex.WB rex.RX or mov rcll je mov cmp pushq mov xchg pop retq rex.RB jg ja scas fs jnp add fs stos mov cld lahf rorl mov rcl mov imul fstp popfq sub (bad) cs mov scas mov mov movsb mov xor data16 hlt insb (bad) sub int pushfq xchg rex.WRX andnps int3 rex.WB mov imul xchg push xchg adc ds lods sahf adc stc mov (bad) (bad) scas xchg (bad) jns or outsl (bad) jno jo out mov add sbb mov insl rex.W rolb fmull adc (bad) jl cmpsb out pop pop (bad) out xor rex.RX testb push test cmp sub adc lea (bad) mov pop (bad) push insb push movsb (bad) pop xorl (bad) sub push xlat rex.RB test mov rex.B jns es xchg pop rex.WB ja lods clc pushq xchg xchg (bad) sbb sub (bad) pop xlat (bad) rep (bad) (bad) mov fnstsw mov mov (bad) lret mov ja shrl pushq (bad) sbb (bad) xor callq test mov xchg jmpq xor roll or std (bad) clc sbb rex.RX divb add mov out rex.RX pop add (bad) mov out rex.XB movsb hlt jle rex.RX cmp in rex.RX push or jp cwtl cmpsl mov sbb (bad) jl sub mov loopne imul cmpsb gs ja int or shlb rex.RX mov ss (bad) out incb cmp jle push cwtl outsl loop pushq pop rex.WXB sub pushfq (bad) retq pushq fwait (bad) pushfq lret rex.WRX lret (bad) add sahf cmpsb mov incl xor cmpsb mov sub out enterq (bad) xor in adc push mov test retq clc mov out (bad) xchg std lret cmpl rex push leaveq adc push icebp mov idiv or fistpll mov xor cmp popfq and (bad) fwait mov iret in sbb addr32 pop js sbb test mov mov adc adc imul and jp pop pushfq sub mov and mov mov and mov add sbb pop retq xorl fnstsw (bad) stos adc rex.WRX rex.B cmp jne (bad) xor cli iret sub iret mov mov rolb jne in jb movslq cmpsb jb,pn (bad) xchg sub cltd (bad) sub sub push lods sub fmull (bad) and sub sub clc (bad) and or test movabs push jne (bad) jge sarl (bad) or mov mov scas sub pop fstpl movsl enterq in cwtl sub pop adc nop int add leaveq jno xchg mov (bad) movsb cmpsb movsb mov outsb fwait lret mov shl lea scas sbb mov pushq jle push callq in mov (bad) jne (bad) mov and js pushq outsb xchg and cltd cmpb mov (bad) ja je (bad) rex.WR lods mov fs mov xor (bad) sbb fisubl int mov cli (bad) movabs mov (bad) mov (bad) loop mov movabs mov and cmc insl (bad) mov and sub rex.WXB rex.W movsb push xor stos insb imul rex.WX loop mov (bad) sahf lods rex.WRXB leaveq pushq fwait add jg repz xchg mov (bad) callq mov add cmp pushq add xchg mov cli sub mov jmpq sbb mov mov (bad) xlat lods (bad) scas (bad) or (bad) sub retq in xorl cmpsl sub mov xchg pushfq jo (bad) mov js stc je (bad) (bad) je mov enterq xor pop mov test rex in adc push jne pop enterq movsl jmpq cmc lret and mov cmpsl add fnsave repz push popfq or pop je (bad) (bad) jl jae xchg cmc add rcll xchg or add pop rex.B (bad) adc xor int3 adc js (bad) lock (bad) push adc mov or mov or movabs div xor sbb jae xor jns push (bad) sub in sbb (bad) ss pushfq jge xorl mov mov clc cwtl (bad) jbe jbe in movl fldenv xor test lock xor xor test xchg (bad) sbb xchg retq rex.X retq or and pushq sbb jle int3 loop fmulp cmp and xchg add xor je mov jne stc pop xchg lods (bad) mov repnz movl or xlat xlat in mov xor push retq cwtl insl scas callq jne (bad) rex.W or jg rex.WXB rex.RX cmp cmp jmpq sbb cmp loop stc movabs push mov retq xchg and cli imul mov push rex.RB sbbl mov in callq (bad) or outsb scas enterq stos in ja insl xchg mov (bad) pushfq rex.RX rex.WR push (bad) (bad) mov callq rex.WX shr or test cs push (bad) outsl jg rcll cmp je movl (bad) (bad) stos sub mov (bad) subl sub pushq stc rex.R push xchg mov mov pushq adc fnop adc sbb fistpll (bad) xchg (bad) cwtl shrb mov scas cli test cli in fistl ds sub (bad) pop rcl stos je scas add sub rex.B add xor int pushfq add jae hlt cmp or add ficom pop jg xchg (bad) jp cmp xor lahf (bad) sbb movabs (bad) (bad) (bad) movabs test jmp and jle rex.B callq fisttpll in cmpb jb rcll lock popfq jae sub cmpsl cmpsl (bad) and cmc leaveq rol (bad) jmp xchg stos (bad) scas lods ss fildll add sub sti mov (bad) (bad) and in mov xor mov adc jb movabs jo loop xlat pushq retq std out cmpsb movsb sub in rex.B fxch sbb adc out movabs leaveq jge movsl rex.WB fstl cltd (bad) mov ds adc (bad) sbb fild test repz std add je leaveq mov jg and test jo rex.WR mov adc jns popfq add (bad) insb cmp mov outsb sub (bad) retq (bad) imul xor xchg jo sbb adc and iret int shrl cmpsl xor push (bad) sub int3 out mov mov (bad) rex.WRB imul adc pop sahf mov cvtpi2ps sahf je test jnp std movsb (bad) divl lahf shrb and lock callq (bad) lret (bad) insb in (bad) xchg js (bad) stos mov sub in loope lods sub (bad) (bad) xor sub fstl sbb stos (bad) (bad) stos (bad) rex.WRXB rex.XB (bad) hlt movabs (bad) imul mov pushfq xor (bad) jb or sub xor fucomip rex.WRX mov (bad) adc xchg or (bad) imull mov enterq (bad) jrcxz rex.WR ficom sbb (bad) popfq int3 callq callq (bad) sbb pushq test test lock movabs ficom test rex.WXB adc (bad) rex.X mov rex.B (bad) rex.WXB lods imul cli mov pop jp std ss fnstsw and outsb pushq test (bad) fs xor mov cwtl adc jmpq in pushq cmp mov cld fs xor push (bad) insb mov sub or mov insl xor jns pop (bad) sub sbb iret gs mov int test sbb je movabs jb hlt pop loopne jns jo jo insb retq xor lahf (bad) lret movabs add lahf lret jns cwtl rcll jo mov imul clc sub pushq cs rcl cmpsl sbb cmpsb add sub adc rex.WRXB sbb xor (bad) out cld sbb insl (bad) xor imul xor mov sub rex.XB cs clc add cwtl cltd insl push in (bad) (bad) jg repnz add scas cltd int cmp mov mov rol in popfq jns movabs pop pop lods xor add jns gs in jl fistpll fnsave sbb retq cmp push lock (bad) sub movsb sub sar xor (bad) (bad) mov test clc push jnp xchg (bad) fsubr push leaveq (bad) pushfq retq push popfq test test test leaveq iret clc stc insl insl rex.RB icebp adc scas (bad) mov xor cmp adc cmpsl cmp (bad) leaveq movabs int3 pop (bad) pushfq xchg add movsl (bad) test xchg scas xlat or insl test mov insl ja int3 rex.WR (bad) pop rorl hlt add insb fsubrl xlat ljmp (bad) mov (bad) outsl add cmp cs (bad) int add test add jl push stos jnp pop rex.WR adc (bad) jg (bad) sub xchg or (bad) cld lock outsb loope movabs xlat sbb (bad) icebp in stos shrl sti lods jno adc fwait rex.WRB rex.WXB cmp mov scas (bad) (bad) icebp (bad) xor pcmpeqw fbld outsb out pushfq (bad) mov jg adc (bad) mov mov xlat cld (bad) pop push fistpl or jg insl rex.RX (bad) stos mov test sub (bad) jl pop mov push lret (bad) fwait adc cmp jne mov jno (bad) enterq rex.WRB sarb jo jo pushq mov jg rorb mov sbb sub xor (bad) sub lret out mov movsb or (bad) cmp (bad) js adc (bad) in or test jns mul sti or sarb pop mov outsl pop or add sub test shlb and (bad) lahf cmp loop fwait jns push push sub fidiv or and cltd xor sub mov mov fldl or push insl xlat cmp add hlt pop addr32 adc pop and (bad) xor leaveq in jns (bad) jmp mov xor ss test shrb insb jb sub xor pushfq xor cs lret movabs popfq ss (bad) (bad) mov rex.RB jmpq (bad) stos iret movabs test sub (bad) (bad) mov mov sbb or cmp jle or mov mov and data16 sti loope test jbe rex.WR imul loopne pushfq imul mov cmp test or lock (bad) mov nop leaveq iret mov cmpsb mov xor scas popq ficom (bad) sti fcomip cltd fmull adc js pop and in outsb (bad) in movslq cmp leaveq rex.RB mov fst shrb mov in or jo xor xor fidiv (bad) or retq sub mov int js (bad) fstps adc (bad) clc jno rex.WRX xor movslq adc add xor pop mov mov jge mov mov cld add jns (bad) sbb sbb (bad) sbb cmp mov outsl mov xchg lahf xchg rex.WRB mov cld lret fcoml callq rex.WR (bad) movsb stc lahf out movslq movabs insb pop mov pop test push pop mov clc out (bad) cmpsb (bad) hlt xor push or scas ja cli leaveq sahf mov loope xchg mov mov jb divb sbb repnz insl pop cmp fstl jae jae cmp sbb xchg rex.W mov pop (bad) stos push cwtl insb mov int3 pushfq rex.X lods pushfq out cld (bad) (bad) pop or (bad) rol cld and and loope push (bad) in movabs in rex.B mov movabs or loop push imul rex.R pop out imul (bad) xchg adc fs add cmpsl fsubp es stc (bad) xor mov fucomi sub outsb jo or cmovno add rex.WX sbb rex.B sub xchg idiv sarl lret gs (bad) mov fs cmp rex.WB lods pushq (bad) xchg (bad) cmp (bad) pop (bad) (bad) loop rex.WRXB mov stos imul add jge outsb imulb (bad) cld jo pushq (bad) (bad) lods xor pop in mov cmp rcll mov adc mov movsl xor (bad) in sub adc mov ljmp sbb pop (bad) (bad) jmpq loopne fcoml (bad) adc (bad) mov or lahf cs int3 imul stc outsb xchg add stos (bad) xor movabs sahf pushfq mov mov insb (bad) adc xchg rex.WR push (bad) pop insb adc (bad) ds and imul cmp (bad) fidivrl rex.WX and retq and xor sub (bad) mov push fidiv iret pushfq mov push rex.WR scas mov adc movabs adc cmc mov (bad) lods cmc (bad) loopne xchg (bad) ror sbb jno adc clc repz hlt jl adc mov sbb (bad) push rex.WB or jmp add (bad) js (bad) mov mov mov pextrw push leaveq out mov push xchg cwtl rorl jne jg mov (bad) subl and retq (bad) sub rex.RB add test fcoms ss mov and (bad) loope movhlps mov popfq cli push mov jrcxz leaveq xor xchg (bad) pop pop mov in cmp shr rex.RB jns insl clc fsubrl insb repnz adc outsb rex.R scas insb xor and (bad) (bad) cmpsb addb fcmovu lods (bad) (bad) xchg insl iret imul (bad) sbb (bad) insb jmpq cmp jns iret sub mov (bad) sar xor xchg (bad) nop push rol pop cli mov jne (bad) jnp pop mov (bad) orl add shrl (bad) sbb std adc (bad) xor in mov (bad) shl imul xchg sub cmp push ror pop rcrl jl or (bad) or mov ds ja mov mov movsb pushq je (bad) xor xor jns popfq insb notb (bad) mov pop sbb negb mov clc (bad) xchg test (bad) or xor push rex.WX pushq sub sbb jae xchg mov push xor callq rex.R xor iret rex.R hlt xor callq in sbb outsb or xor outsb iret sbbb mov mov pushq int popfq mov mov pushfq movsb (bad) sub int mov cmp cwtl cmp rex.WRX and data16 adc xor or mov xorl pushfq je jmpq sbb movsb pop pop mov jbe addr32 (bad) xor pushq mov iret leaveq popfq insb iret (bad) popfq lahf and pushq (bad) lods sbb mov test adc stos movsl jrcxz out sbb (bad) (bad) push fdivl mov rex.R (bad) js rorl in mov jo idivb movabs movsl mov retq imul (bad) mov int fwait mov mov jns adc mov add stos pushfq add add (bad) mov sub imull addr32 or push in lods (bad) mov mov rorb adc negl movabs test cmp rex.WX in iret (bad) lods int sbb adc and pushq fwait pushfq lret movslq rex.WXB lea cmp adc push mov insb cmpsl cmp or retq retq fnsave xchg sbb pop rex.W sbb fsubrs cmp (bad) mov (bad) movabs pop icebp js jb int3 jbe rex.RB int or mov (bad) insl fs cmp insb jrcxz imul iret jrcxz stos cmp shlb xchg xchg xor test mov (bad) adc (bad) rex.RX mov (bad) movabs test add (bad) sbb add loopne insb rcrl pop add jp jo test insb jmpq cmp jmp rex.RX adc mov pop mov sbb (bad) mov imulb cmp movsb cs (bad) scas (bad) jmp (bad) lea andl sbb movabs sahf rex.XB add js je xlat rex.WR pop push mov callq sub mov pushq xlat ficom cmp (bad) cld pushfq pop add sbb lahf lock repz shr mov adc int mov and (bad) roll add mov jo jmp (bad) ror add (bad) mov imul (bad) mov insl (bad) mov cmc xchg or js in pushq (bad) test rcll lods js (bad) es je sbb adc sbb and sub int xchg js adcl adcl rex.RX jae in sbb outsb insl rex.B rex.WXB lock sti ss xchg pop out sahf leaveq xor sub rex fistl cmp movabs fcmovbe push test pop sbb mov cmp push out popfq out loopne in rex.B test jb or in (bad) in lea jl cli jae or scas cs and sbb rex.WRX scas scas sub stos pop rolb sbb movslq cmp int rorl or xor push cmp cltd ror rex.W (bad) push addr32 sub mov sbb xor out in (bad) jns rex loopne mov mov sahf out rex.XB mov and lahf jne pushfq in pushq adc mov jg lret sbb mov out add stos ror (bad) movabs cmp add pop mov insl xor fistl or (bad) lock (bad) mov or lods sbb (bad) adc (bad) (bad) mov rex.WR cmc callq (bad) pushq movsb lret fcompl rex.WRB rex.WX int jmp outsl stos xor insb movabs out ds callq cltd je (bad) negb (bad) lahf mov mov mov pushq and push jbe (bad) and scas rex.XB addr32 jrcxz cmp sbb add jo rex.WRB mov js mov (bad) xor sahf rex.WRX rex.WB xlat jne xor and (bad) jg addb outsl pushq adc xchg test loope pop xor cmpsb movabs mov imul jmpq sbb leaveq xor add mov enterq (bad) rex.WRXB pushq test pushfq in and xor mov rolb imul rex.B push test movsl sbb jne,pt enterq test idivl lahf sub js add repz (bad) jbe (bad) mov cmp (bad) add jbe retq mov mov cs rex.RB mov pushq int3 xchg pop xchg stc xor fdivs cli cmc rol pop and push adc push js scas mov and (bad) xor sahf adc fistl outsb iret mov imul icebp cmp (bad) jne ficompl (bad) jle jl nop rex.RXB mov int3 jl scas (bad) mov mov jns cs rex.WX (bad) pushfq rex.R ss and insb mov adc xchg rex.RXB lock rolb xchg jns xchg test sub in xchg rex.WXB (bad) (bad) leaveq xor or mov callq sbb or ficompl test (bad) cwtl movsl (bad) mov negb pop sahf mov je scas jns adc cmp pop rex.X lret test sahf add or jno popfq imul mov (bad) (bad) add lahf (bad) sub xor test js pushq pop (bad) imul mov sbb sarl ror (bad) add popfq out rex.RX lret idivl sbb (bad) pop callq int (bad) test mov (bad) mov imul test pop push adc movabs cltd push in in sahf in insb divb scas movabs (bad) ljmp mov rex.WR rex.XB sbb cli fs sbb mov cwtl jo mov je scas rclb add pop rex.X andb add jb jne mov outsb int (bad) lods pushfq cmp callq add sahf xchg adcl (bad) jbe xor adc imul (bad) (bad) jbe jg ja iret sub pushq jge rcr jle and jge in rex.R (bad) pushq sbb sar sbb enterq imul (bad) mov insb out sbb or rcl adc in mov (bad) mov pop xor mov callq (bad) (bad) outsb xchg test mov (bad) lret mov rex.WR movabs cli lock sbb pop callq xchg mov xchg sti fcoml sbb insl insb mov out outsl mov idivl xchg mov mov rex.WRXB mov test cld repz xor fbstp int xor ja xor sbb (bad) sub sbb movslq rex.W or cld cmpsb imul (bad) or pop xlat pushfq mov ja std mov push rcrl lea ss mov shrl in pop cwtl fldcw insl (bad) imul add adc insb cld pushq callq xor mov imul fcmovbe sbb jmpq lahf sub lods mov repz (bad) cmp pop movsl int3 (bad) pop jp xlat out xchg movabs mov pop sahf (bad) pushq cmp (bad) cld movl leaveq (bad) mov jmp and mov push mov mov movabs out xchg mov jo fistpl pop pop movslq rcrl outsb xchg and in jl nop rex.WX popfq negl pop jo sub mov (bad) cmp ss cs imul rex.R rex.W mov (bad) lods faddl cs mov scas jns (bad) sub (bad) mov movabs out scas sbb insl mov lahf mov (bad) pop cltd jmp es cmp retq mov (bad) lahf xchg push pop push or sbb fild add rex.R (bad) int sub test sub cmp (bad) movsb push cmp ss scas (bad) movabs loope mov pop imul and lret xor mov mov imul xor and pushfq xor jae cmc adc cmp mov rex.WRX in jg ss adc (bad) mov mov xor fnstsw sbbl mov sub jle adc shld and lock in push (bad) sbb cmpsl xor push je jbe mov sbb rex.RB (bad) rex.WRXB lret sbb mov cld sub int (bad) (bad) mov jmpq cmc popfq jbe pushfq jb cmpsl adc sub add data16 (bad) (bad) test fcom (bad) ss mov loop loope callq rex.WB je test nop lret mov or (bad) jmpq pop sbb fcompl (bad) jbe xor mov add mov (bad) (bad) rex.R mov (bad) icebp (bad) xor mov sbb out test mov stos ja hlt mov jl hlt jo stos sbb (bad) in rex.RB fdivrl xlat out fcomi rex.B (bad) hlt cmp cmp mov rex.RB cwtl cld fidiv sub rex.WX fmull mov imul repnz sbbl (bad) sahf sub (bad) int3 js scas or (bad) cli addl sub lret in mov xor add add ror or xchg push mov leaveq pop imul pop xchg pop xor mov xor (bad) (bad) pop sbbl sub test xor sub (bad) enterq rol adc cmp movsl mov (bad) insl fistl push int xor add cmp xor pushfq sub cmp movabs lret negb int xor rex.RXB rex.RXB pushfq adc cmp lea int (bad) xchg enterq mov sbb lret stos sbb xchg sub sbb (bad) (bad) rex.WXB popfq (bad) rex.R fwait (bad) callq push jl add leaveq in rex.WRB adc icebp xorl rex.XB scas (bad) mov (bad) enterq lahf ja add (bad) mov iret scas gs (bad) rex.WB (bad) rex.X addr32 (bad) rex.WX rex.WB cs mov jns (bad) adc mov pop cld out rol mov callq or or pop sahf add push xchg xchg insb mov cwtl insb (bad) (bad) or push fwait retq sbb sub fimul rex.XB fdivs (bad) xchg (bad) cmp mov (bad) test (bad) adc sbbl lock js int push and jns xor mov movabs cmpsb or sbb xor out mov loopne insl test or ja (bad) rex.RXB adc clc jp leaveq out mov je xchg ss (bad) add pushfq (bad) mov (bad) test jmp sbb movslq xchg sahf rex (bad) rex.W rex.B sub cmp or mov int push xlat xor adc (bad) (bad) shlb adc rol jle imul in rolb push lods rcl outsl cmp in (bad) mov adc pushfq adc or (bad) mov xchg movsb add ja jmpq cmp sbb mov mov scas movabs iret rex.R cltd pop (bad) (bad) mov jle xor sbb jnp sbb jge (bad) (bad) rex.WXB sti adc (bad) nop cmp cmp jne pushfq (bad) insl (bad) sbb jle xor fcompl rex.WRX (bad) (bad) sbb leaveq adc push mov and imul movsb clc xor sub ljmp mov xor xlat std (bad) (bad) lret (bad) mov std es add xor jmp roll add (bad) mov mov mov mov popfq ds in or (bad) cmc fs cmp push mov out movabs outsl (bad) enterq sbb (bad) cs stos iret pop sbb or iret mov add mov enterq mov xor adc scas shl cli imul jbe retq mov insl rex.R rex.RX pushfw pop mov test stos jge lret vpsubusw scas (bad) imul sti movsl xor pushfq stos or mov test rcrb mov test sbb (bad) xorl test addl shrb addl movabs adc movabs sub adc xor insb imul loop in (bad) sub mov movsl cs movslq rex.WRX (bad) push adcl rex.WX cmpsb cmc imul push jo mov xlat (bad) jo pop loopne mov cld fdiv (bad) fnstcw in shr fdivs mov mov (bad) frstor cmp fcomi adc cmp xorl enterq (bad) stc mov fidiv in icebp push insb imulb mov adc push xchg js xchg pushfq xchg mov cmpsl mov (bad) (bad) test xlat rex.X mov sbb bnd ja rex.WXB xor lea movsl cld jle (bad) xchg adc pop (bad) popfq mov (bad) idivb adcl fidivrl fwait cmp push cs sub (bad) rex.WR mov xor xor pop test adc sub push mov adc movsb hlt insb gs movabs cmp lahf fiaddl cmp rcll sbb nop int3 (bad) (bad) sbb pop imull xchg cmp xor adcl jg enterq and push (bad) (bad) (bad) (bad) insb (bad) push add rex.WB (bad) jnp je (bad) or movsb xchg pop (bad) and xor sub mov (bad) shl (bad) (bad) js callq test ds jmp gs (bad) push mov stos movslq rex.XB ss push sbb popfq mov cmp xchg sbb stos out cs mov sub outsl je rex.WRXB rex.WRX push jno retq sub (bad) push xor mov (bad) sbb xor rex.X mov jp rex.B xor push sahf push sar and adc rex.WXB rex.B add (bad) mov and int3 fsts test pop loopne xorl push rex.RXB rex.B mov rex.RB out mov outsb add rex.R mov and mov scas movabs jo insl (bad) jbe mov callq stos movabs enterq (bad) (bad) mov (bad) pop mov and jle (bad) sub cwtl fsubl mov pop fildl (bad) imul cmc fscale jge in fwait mov rex.R rclb xchg rex.WX movabs add in lods movabs lea adc rex.XB test fstl out lret rex.RX mov out sbb and pop nop adc mov movsl sub out and rex.B fwait adc mov mov xor mov lret in fs out pop rorl pop outsl out add imul sub sbb and and (bad) iret (bad) jrcxz (bad) jno (bad) jo rex.X fcomps xchg clc (bad) outsb adc sbb movslq (bad) mov cmp movabs fs rex.WB rex.R xor or insl fucomi loope xchg cmp addl pushq and mov fimull cmpsb and shll rex.XB cld pop jge es xor mov mov lret cmp (bad) loopne es int and pop movsb mov jmp pop xlat mov idiv fistp xor jnp sbb loope mov and fbstp (bad) jb rex.WX cmc mov xor cmpsb lods cltd (bad) mov and rex.X popfq lret pushfq movsl scas rex.RX adc push leaveq pop and (bad) lods cmp pushfq jg jae leaveq xchg add sbb (bad) (bad) out pop test mov stos cli imul insb adc xor sbb rolb (bad) jnp stc stos test divl cmpsl imul adc neg mov test jb mov rex.RXB (bad) insb movabs rex.X (bad) sahf mov (bad) mov retq outsb mov (bad) (bad) or lret push rex.RX pushfq mov rclb rex.WX xor or repnz test fidivl lretq jne add test movabs xor int3 xchg scas xor adc out out int (bad) movsl (bad) jbe xchg addr32 pushfq mov iret test xchg pushq scas in mov insl jo movsl rex.R pushfq sub (bad) add xor mov mov xor imul xor icebp mov ss (bad) or insb jp jmp mov (bad) push test add (bad) or rex.RB shrb pushq rex.WXB sbb rex.WRX pop xor push js cltd xor movsb jno lret add (bad) jns ss (bad) ss xor jmpq fcomps add push sarl xor mov jrcxz cld neg mov (bad) popfq mov adc cmp insb addr32 add or lock lods adc in cmp (bad) scas in (bad) int3 (bad) movabs nop int3 add fs leaveq or adc xchg adc fs scas pop cmp rcll stos cmpsl jrcxz mov (bad) cwtl mov lahf (bad) sbb or cmc rex.RXB enterq out rex.WR (bad) xor repz fiaddl stos mov (bad) (bad) add shr out mov in scas shrb mov js test (bad) pushfq in jbe rcll mov jno pop out (bad) loop adc rex.RXB sub test add jnp mov repnz sahf (bad) (bad) xchg adc callq stos adc xor rcrb adc mov (bad) mov mov cltd idiv jrcxz and ja cmpsl (bad) adc in add enterq pop pushfq rex.B movsb (bad) rorl rex.WB stc sub out sti fcmovbe (bad) (bad) jne or mov mov adc and movabs mov jg,pt jb sub xor (bad) sbb push jbe (bad) leaveq rex.XB rex.R cmpsl cmp jns (bad) ja (bad) hlt cmpsb (bad) movabs (bad) popfq test cwtl (bad) (bad) sbb xchg xchg cltd rex.WXB pop (bad) mulb mov outsb (bad) sti (bad) jl rex.WRX mov imul (bad) xor xor int3 add (bad) fs rex.WRX jnp push insb out movsl popfq adc and jmpq rol cmp and (bad) enterq sub adc mov cmp adc rex.WRB mov xor scas mov callq mov adc mov int cld out sub jg cltd (bad) sub int rex.WR mov cli mov push sti push xlat (bad) lret loopne int3 andl cmp sar mov movabs test (bad) pop rex.RXB adc jge push and jns xor mov enterq rex.WR fwait adc movabs cmpl shlb mov jno (bad) xor xchg push sub sbb adc rex.R adc ja push and fdiv mov icebp mov xor enterq sarb sub stc js mov add enterq adc add jns and (bad) imul leaveq fwait (bad) pushq rex.W out sbb ds mov (bad) push adc insl and pop sbb rex.WRB stos gs jmp sub sbb rex.RX rep jb sbb sti (bad) cltd xor jl rex.R bnd mov ds adc sbb scas outsb js movabs imul mov insb add mov int3 xor lock or mov lret mov pushq leaveq adc pop ds or in out and mov scas and rex.RX callq sub mov ds mov mov mov cltd sti jbe add in sbb sub rex.WRX rex.WRXB pop fwait add mov (bad) pushq scas je in add add scas (bad) rex.B (bad) adc test pushq test std fdivrl subl cmc mov (bad) (bad) pop jbe ficoml xor cmp adc adc jb rex.WRX push addb and lods (bad) stos (bad) lea test adc jbe rex.R cltd popfq (bad) add add roll ds (bad) and popq rex.WRXB cmp pop xor rcll mov repnz sti fimull jmpq imul mov movsb (bad) leaveq adc (bad) jno rex.B cmc xchg imul lret outsl xlat mov orl out leaveq outsl (bad) std adc rex.W rex.RB (bad) push stos cmp notl mov fstpl lret sahf pop (bad) lret jae push mov sbb clc rex.WRXB pop test rex.B rex.WRX pop jne rex.R sbb movl sahf adc clc in and pop sub jb push movabs pop sub push (bad) jle lret jrcxz movsb insb (bad) test xor mov (bad) xchg sub mov push stc callq pushfq enterq out mov rclb push or fcmovbe adc and iret fistpl pushq int rex.WRB cmp cs rex.WRB rex.WRXB rex.WX mov rex.WXB rex.WXB rex.RX es sbb addr32 mov (bad) sub ds mov shll test sahf xchg pop mov (bad) popfq movabs pop fdivr sbb pushq addr32 lahf jp mov or (bad) sti (bad) xchg int xor stos mov (bad) sub fidiv adc int xor mov xchg pop add (bad) es enterq jno (bad) lret sbb (bad) adc outsb enterq stos movabs (bad) mov (bad) stos cld (bad) xor ja test (bad) jns pushq test leaveq sbb mov (bad) fsts repz xchg xor (bad) pop out movabs int (bad) push idivl movabs sbb insl adc cmp (bad) jb (bad) outsb leaveq clc mov mov mov js fisttpl outsb mov movabs (bad) pop (bad) (bad) (bad) mov test fwait (bad) ss sub in mov in adc rex.WRB insl pushq sub adc mov push notb rex.XB xchg jno fcoms mov xor cwtl notb or mov scas cmpsl jne xor adc or pop pushfq adc std stc sub fld movsb xchg mov fucomip xor mov add insl (bad) jge (bad) pop mov pop rex.WR leaveq outsl pop int sub (bad) je pop mov leaveq out callq popfq or pushfq movslq lahf mov callq nop out rex.XB pop test pushfq jl sub mov sbb test sbb (bad) fidiv imul add popfq callq insb movabs hlt rex.WX jle (bad) cli xor mov popfq (bad) hlt mov (bad) xchg xor iret xor idivb (bad) in lahf movsb (bad) xor iret pushq or jle (bad) (bad) xor iret or adc add mov mov imul sbb xchg (bad) push xor iret callq or jge cltd movsb (bad) xor iret pop sbb xor (bad) callq or adc pop imul mov int3 sbb nop jle (bad) push xor iret loop cld jrcxz fwait xor or jle (bad) pop xor iret ss in jle (bad) movsb lods sahf pop movsb pushfq test lods sub jmp mov lods jbe jnp cltd rex.WXB (bad) jb sbb test mov pop (bad) popfq and pop stos movsb mov shlb mov insl icebp lods (bad) insb mov rorb pop rex.R iret xor cld fcomps jnp mov mov mov mov pushfq popfq sahf lahf cwtl cltd lods (bad) fwait movsb movsl cmpsb cmpsl movabs enterq lret (bad) (bad) (bad) xlat rcl lods rcl mov mov (bad) rol retq insl outsb outsl pushq je jbe jo lods jb pop pop pop pop pop xchg lods movsl fs lods (bad) (bad) (bad) mov nop lods xchg xchg xchg jl jle js jns jnp test (bad) sbbl xchg js movabs ss mov movsb insb pop jo pop pcmpeqw jb ja jo mov jno lret mov mov insl xchg int3 (bad) lea xchg (bad) in xchg and adc in mov jl and (bad) pushfq mov rorl addb loop and (bad) mov push and cmp enterq enterq (bad) lret rex.R jns movabs jp mov xor rcrb fsubrl shrd insl rex.WXB in pushq notb xchg adc xchg mov jle mov repz sbb lret loop pop lea xchg (bad) mov mov pushq jns mov test rclb or adc mov rep push stos out add xchg xchg mov or xchg add sbb insb rex.WX sbb rex.WR (bad) sar loopne (bad) rex.WRX (bad) sahf mov and callq fnstsw pushq sbb imul test mov je mov hlt rcr xor cmp mov enterq icebp cmpsb (bad) cmp push shlb sbb and sub mov pushfq fist sub sub mov jnp (bad) rex rex.WXB fimull mov hlt mov scas jp and std push pushq pop mov mov pop incb stos pushfq loope sbb test rex.B push ss mov fcompl jp mov (bad) mov (bad) add sahf xchg rex.WXB in jp (bad) xchg pushfq add movabs pop mov imul icebp fdivs je (bad) lret and rex.W cmpb jnp fmull (bad) (bad) pop negb (bad) imul insb mov add xchg jg mov mov js (bad) sbb mov and push mov (bad) fisub and outsl xlat bswap movsb cmc jo cltd sub shrb (bad) mov vmread and loopne (bad) pop mov int pop pop lret cltd (bad) int3 and xor (bad) sbb test (bad) pop (bad) outsb test jl lret cmpsb mov cld test cmp fcomp sub jmp int3 xchg xchg mov retq jle rex.WR nop test data16 movabs mov xor (bad) sbb (bad) (bad) retq lods add scas hlt (bad) addr32 xlat bnd pushfq cli outsb sub xchg (bad) sub rex.XB insb ss gs mov mov int3 mov rex.WRX sbb scas rex.XB scas jle scas imulb (bad) movabs scas cli (bad) or sub lods sub xor ss xor lods xor sbb (bad) (bad) sbb lods sbb and es and lods and rex.WR rex.WRB rex.WRX rex.WRXB rex.W rex.WB rex.WX rex.WXB push push push push push lods push push cmp ds cmp lods cmp rex.R rex.RB rex.RX rex.RXB rex rex.B rex.X rex.XB in out out callq hlt cmc div lock lods repnz (bad) fcomp lods fcmovu in out loopne lods loop or (bad) invd or (bad) adc lods adc cld std (bad) (bad) clc stc lods cli sti add (bad) (bad) add push movslq sbb (bad) sub int3 rex.WB sub je (bad) jge or mov int3 jno outsl mov imul pop hlt mov rex.WR sahf pushq fnstcw insb jb xchg jp or fisubr cmp iret movsl stos insl jns (bad) xor pushfq jbe nop push pop pushfq pushfq xchg mov xor (bad) cld (bad) pop xchg insb mov mov mov pop mov cs mov (bad) int3 pop cs mov sub je int3 mov retq rorb mov scas pop xchg not jg adc xor mov jno xchg imul insb mov insw mov mov cmc jnp add rex.B movsb enterq test cmp fisubl out sub movabs jns rex.RX sahf cwtl lahf jae in lea sbb pop pop lods imul (bad) or loopne rex iret adc lret or xacquire xchg roll cltd jl sub outsb std rex.WXB insl mov test movsb int jae cmp (bad) sbb pop test cmpsl jno scas mov int3 jg stos or or pushq push (bad) test rex.R xchg (bad) ja out leaveq xchg outsb data16 movabs add ss div add push push (bad) rex.WRB (bad) jbe (bad) outsl (bad) repz xchg clc rex.WRXB insl mov (bad) test jb sbb pop fisub (bad) xchg (bad) enterq (bad) pop fs jg xor movabs imul (bad) xor (bad) cmpsb jnp jno xor iret xor (bad) mov ss movsb imul jno icebp xchg adc mov sarb orl pop pop out insl ja lret xchg ja outsl mov jg (bad) repnz jo add pushfq cmp or in enterq add xor (bad) sub insb mov cltd (bad) (bad) push mov outsl insb cmp test rex.WX std movabs loopne sbb (bad) (bad) movsb movsb mov int3 (bad) mov vcmpss mov movsl ror mov pushq jmp jne popfq mov (bad) (bad) mov popfq cmp fmulp leaveq mov rcl (bad) mov mov test or mov xlat (bad) (bad) imul (bad) mov xor test lods je fcompl (bad) movabs mov pushfq and movabs out cmp outsb popfq es (bad) fisttp lock int cmp sti cmp lret push cmp lea hlt and xor iret xor test jl mov (bad) ds popfq int3 jrcxz xor pop callq (bad) insb jo cmp insb pop (bad) pushfq (bad) mov rorb (bad) jle (bad) cwtl xor iret mov imul imul clc jle (bad) adc imul or loopne in fdivrs (bad) hlt xor iret in sbb cmp (bad) push xor iret rex.WR cmp jle (bad) (bad) xor movabs xor mov (bad) add fs fcompl and sbb adc or insb (bad) pushfq xor cld pop popfq hlt hlt rex.WR out (bad) in xor iret test mov and add adc (bad) movabs scas pushfq fldt scas test pop mov fs mov mov callq fwait push mov shrl rolb mov test sub sub or scas pushfq clc add scas jne jge pop or (bad) (bad) lret hlt mov stos movabs mov sbb jmpq (bad) int3 rex.XB jl mov sbb mov outsb and rex.WB mov outsb rex.RX push (bad) cmpsl mov in divl stos nop mov mov pop cmp push lea pop pop enterq cmp push jns js shll push xor lret xchg out sub leaveq retq mov xchg jrcxz mov rolq fadd outsb cmp movsl lret rex.WRB add pop pop lods and and lods rex.XB loope mov test out rex.R (bad) or test jo adc mov lret cmp pop (bad) movsb testl cmp lods mov fcmovu int sub lods (bad) pop jb jae sbb push out sbb repnz roll sbb rex.WR rex.WX lods (bad) out mov (bad) stos ja rex.X mov lods (bad) or or (bad) mov sub jg fsubrl out lods fdivl jge test pushq lea gs lods mov xchg rex.XB mov scas mov mov imul outsb insl pushq adc mov pop movabs pop gs sbb stos mov stos mov xlat cmp (bad) outsb or sbb in sbb iret pop and or fsub movslq decb jmp data16 out callq sbb in mov jle rex.XB rex.XB ds pop xor xlat jae xlat int and xchg cmpsb push rex.WRX mov shlb rex.RXB clc mov imul rex ds push callq mov pushfq xchg and sahf mov mov xchg mov movslq cltd leaveq cltd jg and cmp mov jl xchg retq test (bad) cwtl and lods lret cmp fidivl and in xlat movsb imul lods xchg imul out lods xchg push sub pop lcall (bad) mov cmc data16 test or rorb retq xor add repnz xchg movabs pop rcll loop cld fsubrs (bad) stos xor scas rex.RX fldcw (bad) pop mov adc cli outsb fbstp movabs jno adc mov lret jb jp in mov jl and xlat pop leaveq outsb sbb xchg pushq mov jns (bad) (bad) mov movabs rex.WR cmc popfq (bad) lret mov movsl jle enterq jl lret cltd xor push outsb leaveq iret js sub (bad) or (bad) mov enterq int3 sahf cld xchg jle fstl test add repnz out pushfq out mov movabs mov loopne insb loope movsl mov movabs xchg rex.B (bad) out lods xchg (bad) addr32 lock (bad) stc sub mov lea mov mov and xchg add pop cmpsl insb cmp lret lock (bad) test rex.WRB int3 test lods xor ds (bad) and leaveq lods mov rex.WXB jo mov outsl retq and lods ja push cmc (bad) movsl xchg mov fsubr clc jo mov (bad) xor or std (bad) movsl rex.WX insb mov push or lods outsl lods and cmp adc popfq pushq rex.XB add xchg xchg jb mov cmp jo mov cld negb add in pop push rex.R repz movsl cmpsb mov xchg (bad) (bad) add xchg (bad) mov jb lea mov mov movslq sbb (bad) cltd insl pushfq ds movsb or clc (bad) outsl imulb cmp test ds (bad) sub (bad) xor mov push xchg jno xchg mov (bad) or lods or enterq jle iret nop outsb int3 negb out xor fisub mov cmp mov test sub movsl pushfq adc (bad) ficomp mov sub or pop fs decl sbb fs je jb adc mov cmp add pop cld int3 (bad) mov movsb js movabs mov xchg fs std jl int3 imul cmp test adc fcoml pop cwtl adc movlhps movsb pop pop mov cmp xchg hlt (bad) insb je pop cld movsb mov (bad) mov and xlat fdivr rex.R mov jbe es fcompl xor (bad) sub (bad) (bad) pop repnz hlt sbb int3 (bad) mov js (bad) je rex.R imul rex.WR mov cld retq xor adc js mov adc mov (bad) (bad) jl push int3 mov movsl rcrb or (bad) in jg (bad) je pop (bad) mov add loopne lods mov vaddps jl rex.RXB (bad) pop sarb sahf mov cltd cld lahf lods or fdivl stos mov movabs mov mov or fcompl sub (bad) js sub mov mov movsl pop test lods mov and movsb rex.WR movsl enterq sahf mov mov (bad) (bad) (bad) cmp mov enterq rex.RX mov insb out adc scas imul loopne lods movsb movsl movabs fadd mov scas jl mov mov callq xor fwait add mov cltd fcompl sub retq cltd popfq in (bad) sub insl mov mov push int3 sub stos hlt scas xor outsb movsb cmc mov cmp mov movsl test pushfq popfq lahf rex.RB fld1 loopne mov mov sbb movsl rex.WB loopne sbb imul pop sub cld mov stos fsubrl int3 xor mov xor lods adc mov rex jle movsb push (bad) rex.WR ds mov mov gs (bad) xchg stos je (bad) cmp push (bad) rex.W (bad) movb lods int3 test mov imul or jbe rex test cltd or fdivl or mov pushfq mov fwait mov popfq movsb add (bad) mov stos test cwtl jl (bad) mov insl rex.W lods loopne mov iret loop lods and cwtl mov pop jne ss sbb imul jbe movsl sbbl test std popfq movabs adc lods cld (bad) or fcompl mov test int3 mov lock movsb test fwait test (bad) mov lret movabs int3 cwtl xchg js rex.W rex cwtl xor mov loope imul mov cmp enterq popfq mov mov mov pop outsl in mov mov (bad) mov jg jne lods cltd int3 mov int3 popfq int3 pop pushfq (bad) lock movabs je mov js movabs adc scas mov mov mov imul enterq mov sahf stos test movabs movsl divl scas sahf int3 sub mov or adc movsl lahf cwtl mov (bad) (bad) movsl lret mov rex.WRB cwtl cli (bad) cmp fsubrl mov cmp test sahf sub fwait jno ror pushfq (bad) sar lret rex.WRX push jl xor divb mov mov mov or fdivr in mov jl mov loopne in insl cmpsl mov lea mov xor (bad) movsl xorl jge fild mov xor int3 cmpsl popfq pop add (bad) mov int cltd sahf push js out jle push stos jo mov (bad) callq mov (bad) je cwtl xor rex.WXB mov mov cmp mov int3 pushq mov int3 xor jl rex.WB cmp mov rorb fstps mov mov mov rcll push mov mov pop cmp lods xor callq mov jns loope stos ds mov mov adc xchg mov mov movsl pop (bad) xor jge mov mov mov sub sbb and rex.W (bad) popfq mov int pushfq ds mov mov mov xchg mov (bad) rex.WR mov pop popfq rex.RB mov mov jbe jge sbb and lret outsb mov cmp and sub (bad) sbb adc pushfq sub cmp push movsl sbb movsb rex.WB test stos cwtl loop movabs pushfq push (bad) pop stc lods pop test mov pop sub rex.WRX popfq add xor pop cmc js and and mov enterq mov or xchg pop mov jmpq imul or pop mov movabs lock mov fnsave xor (bad) jle shrb pushfq (bad) cli (bad) pop add test (bad) test xor insl lock lret mov icebp sub pushq mov js mov mov movsb mov mov rex.W cwtl xchg js stos sbb mov out mov (bad) xchg mov adc pop (bad) cwtl fistp mov add sub mov (bad) (bad) outsl movsb in or sub pop sub sti (bad) jl callq add mov cmp jl pop rex.WR in sub pushq sbb jne mov xchg outsb xor test pop hlt sbb rex.W mov sbb ds (bad) lret rex.WRXB es orl fs (bad) fisttpl sbb mov sahf test xor in scas and movsb rex.RX add cmp xchg pop (bad) sub rcll pushfq movabs push callq mov (bad) (bad) rex.W sbb leaveq (bad) mov jne lods fcompl cmc cwtl shlb mov fcompl mov rex movsl (bad) mov (bad) or (bad) in imul scas ror mov movsb adc movsb xchg mov add mov callq insb (bad) scas cwtl xchg jbe lods rex.WRB retq divq sbb or jo sub sbb movb (bad) cld loope pushq test adc incb sbb stos cwtl fcmovnb pushfq leaveq (bad) (bad) mov out (bad) rex.WR movsb repnz mov sar xor (bad) rex.WRXB fsubs mov (bad) or js add add pop popfq rcrb pushq or movabs sbb insb popfq pop insb pushfq mov mov test mov sbb mov cwtl mov cltd xor rex.WX fwait (bad) stos cld jmpq cmpsl xor popfq movabs in mov mov mov fwait xor in add cmp out scas lods cmpsb out xchg and (bad) cli pop mov pushq sub mov out callq sub or cmp (bad) rex.WR enterq pop scas sub and or popfq popfq jl callq mov (bad) (bad) rex.R rex.WXB xchg add in or pop scas rex.WXB rex.RB (bad) rex.W movsl rex.RB (bad) sbb cli pop int3 or int3 movsl (bad) push add xor cwtl jo hlt test insb push pop insb test jl rex.RXB repnz leaveq jne mov mov mov jo adc mov mov pushq rex.RB mov mov or mov or mov insb (bad) cmp mov add jo stos cwtl adc fsubl adc mov mov fs xchg (bad) fs cwtl xchg mov add jl in and mov or je (bad) ds mov fsubl mov mov (bad) movsb sub mov add jl insl int3 callq movabs rex.WXB lock mov jo rex.RB mov (bad) stos add js cwtl stc (bad) (bad) (bad) mov (bad) lock in sbb jae loopne (bad) jne repnz pushq loopne or add mov lret mov pop (bad) mov int (bad) movabs je test sbb mov pushfq jno test mov int3 mov pop pushfq mov rex.RX add (bad) cmp cwtl sahf rex.WRXB fdivs or (bad) mov (bad) pop (bad) in icebp clc (bad) fs popfq test sahf mov int3 jb pop adc hlt fist mov add hlt or cwtl (bad) xchg xor sbb ds and pushfq jg retq cwtl shrl and pop cmp pushfq mov (bad) fiadd mov fs (bad) add std (bad) (bad) xor lods mov (bad) adc mov stos sbb pop rex.WR fidivr add jne (bad) sub mov sbb fbstp xor pop rex.WB mov (bad) (bad) je mov lahf push (bad) mov pop leaveq mov (bad) insb mov lods (bad) cld cwtl or fcompl jne insb fsubs pushq loop fidivr fmull sub xor enterq out cmp or and sub sub retq pushq (bad) pop (bad) mov (bad) lahf cld je lods pop loopne in insb jo sub mov pop sub mov cmpsb jbe sub xor jnp cltd add sub test cwtl icebp retq imul mov mov (bad) sub jmp (bad) scas sbb cwtl lods xchg shrb mov pop sahf mov cmp pop movabs int3 mov stos lahf or fmul movabs mov xor and shrl lods clc je or adc scas js jbe (bad) in lret or cld xor mov out (bad) xor push hlt pushfq jge test jge xchg mov xor test (bad) sbb mov scas rex.WRB test std stos pop pop cmpsl movsb outsb mov mov shlb lahf lock stos in callq int3 rex.WRX movabs es rex.WX sub movabs callq iret mov test popfq (bad) rolb mov fimul test mov sbb mov in sbbq mov xlat cmc (bad) scas lods (bad) pop clc enterq fwait adc mov (bad) out pop mov (bad) test xor fstpt je jle and mov cs cwtl mov mov mov jle jb lahf movsl sbb push jo and pop pop and sbb or fsubrl sbb or add cwtl rex.B mov enterq movsb repnz mov cmpsl cld retq mov (bad) mov hlt rex.B (bad) mov test mov mov int3 and mov mov hlt insl mov loopne jle roll jae icebp rex.WR push and std sahf mov mov pop mov sahf mov mov int3 (bad) mov scas in (bad) mov stos and lock adc rex.RB jge je sbb enterq je in xchg cwtl ficomp cwtl (bad) cmp shrb mov gs mov lahf movsb out mov rex sub and int cmpsb movsb jb fdivl callq rex (bad) in mov lods (bad) mov test in xchg mov mov gs in adcl cbtw imul (bad) test rex.WB shrb rex.W repz sbb or add (bad) fdivl sub shlb data16 add mov pop jge xor mov (bad) scas mov (bad) mov pushfq mov movsb sub fdivrs mov push out int3 sub pop movsb pushq enterq loopne js cmp cmp test out cmp rex.W rex.WRXB mov and rex.RX rex.W mov rex.W fcompl and mov enterq pushfq mov mov xor mov pop mov callq cmc and and enterq (bad) sbb mov xor pushfq test popfq cld mov mov addr32 rex.WRX rex.WXB rex.WRXB (bad) mov sbb callq cmc rex.WR movabs rex.WRX (bad) push (bad) or sahf cld pushfq or mov sbb and and test sbb pop outsl mov iret repnz sbb test lods xchg jo cmpsb retq push in nop sub jmpq hlt jb outsl movabs (bad) lods movabs je fcoms mov pop fwait mov mov clc mov cwtl jbe int (bad) mov data16 mov stos lock movsl cmp xor adc or mov or fcompl and mov test js (bad) xlat movsb outsb mov insl test or enterq pushfq xor je add popfq and or lret loopne (bad) cltd pop and xchg scas mov (bad) fimul (bad) hlt xor mov add out add shrb hlt jg pop mov test or in (bad) cmp mov mov pop cwtl pop mov stc adc loop pushq mov popfq xor rcrl lods mov enterq add pop and fidiv lods (bad) movsb int enterq (bad) callq (bad) (bad) lods movabs lock jmpq flds push (bad) adc xor stc enterq jl rex.WXB movslq cmp add mov rex.R pop lods add and sub pop pushq (bad) (bad) mov (bad) rex.RB cltd repnz lods mov sub decb sub rex.X jl lods xor mov sbb (bad) dec jbe lods or mov adc (bad) (bad) lods sub movslq cmp jg jp leaveq mov xchg out cwtl mov stos and push rcrb out xchg jmp sub (bad) push lods shlb jge cmp rex.X (bad) jo pop lods xchg and loopne test mov (bad) repz lods fs (bad) (bad) loopne mov negb int sti mov ja xor rex sub retq sub mov rex.WXB rex.XB lahf mov (bad) jb cltd mov icebp sub rex.WRB movabs pop pushfq test (bad) push outsb cvttps2pi xchg fist adc imul lahf sbb xchg mov push cltd iret cmp enterq xchg (bad) pushq stos cli insb cmp movslq (bad) stc js movsl (bad) negb pop (bad) pop cmp mov push imul movabs and (bad) pop add or xchg xchg lods lret mov test outsl sub sub sub int3 adc test in sbbl scas out (bad) callq jl out rex.WX lods rex.WR mov cmpsl rex.WXB test add (bad) (bad) lods sbb cmp (bad) stos es rex.WR add (bad) lods out jle popq (bad) sbb lods (bad) repz push mov and movslq push add movabs cmp (bad) lods add cmp pushq loop lods movsb and (bad) adc (bad) stos jnp rex.WR rex.WR xchg pop mov subl in (bad) nop or mov sub lahf repnz rex.WR or stos jbe subl enterq sbb lods sbb out stc lods jle add es lods sahf jge (bad) jmpq jb adc cwtl test std (bad) lods xchg sbb adc mov pop scas mov xchg sub adc (bad) mov lods (bad) out (bad) cmpsl jg lods lods mov movabs mov or pop pop iret sbb fnop push or sbb movsl pop (bad) es movsb rorb pushq lods (bad) (bad) cmc sti adc mov mov and cs test stos popfq rolb cmc rex.WXB cmp mov jo pushq lcall lret js (bad) jge lods mov adc jmp movslq cmp xchg lods (bad) (bad) out scas mov cli jle retq addr32 mov mov mov pop movsb sub pop cmpsl rex.WRXB add shlb data16 in jae mov out scas imul rex.RXB or mov xor repnz lods jp sub or lods repz fidiv lods rorl jg sbb add sbb or repnz (bad) scas retq jge adcb (bad) movabs lods mov (bad) xor rex.B rex.WRXB rex.WR vfnmadd213ps rex.RX add push lods scas mov xor cmp jmp sub rex.RB lods (bad) js (bad) int3 pop (bad) rex.WRB or shrb mov scas mov sub rex.W rex.R and adc sbb (bad) (bad) lods sbb mov pop lods xchg xor mov or callq lods jle addr32 out mov mov sbb rex.R lods cmp int3 lret ss imull callq lock adcl rex.WB lods loop out stos (bad) mov cmp movabs rex.WRX lods in movabs in ljmp fwait insb subb mov pushfq sub hlt jnp mov ja mov mov cmp lods pop lret sub jo sahf rex.WX repz jg (bad) addr32 mov add add lods movb cmp add (bad) stos adc (bad) cmp lods cs lahf (bad) sti (bad) lret xor rex.WRXB retq mov add loopne outsb hlt ja adc mov cli pop out addr32 ja sub sarl mov xor add jnp leaveq rex.RX mov iret mov shlb test rex.WR (bad) or rex.R in scas adc mov xor rex.WXB (bad) shr push test push lods lret enterq pop or (bad) ds lods and shlb lods rex.WRB add andl in xor rex.XB mov movabs (bad) lods outsl (bad) (bad) cmp add int mov rex rex.WRXB add push cld jl lods jno adc (bad) mov mov movabs mov sahf lods (bad) orl pop ja xchg lods adc jne (bad) mov jl lods and ss xor insb ror pop je (bad) mov push pop jge lods lock or (bad) cwtl jl es rex.B rex.WX test (bad) xchg lods (bad) mov xchg (bad) (bad) lods cmp ja (bad) mov or cmp addr32 sub fidivrl (bad) or rex.WX or rex.RXB movabs cmp or lods shlb cmp outsl jns js (bad) enterq mov in add xchg jp lods fistpl lods xor or add clc lea rex.WXB stos (bad) mov data16 es xchg shrl pop stc (bad) push adc lods xor insb cmpsb je fs jns rex.WXB sub push (bad) in lahf xchg (bad) scas movabs (bad) pop lods (bad) cmpsb cmpsl int movsl xor lret bnd add jns lods xchg (bad) (bad) (bad) sbb pushq lods sub rex.W xor imul (bad) sub movslq mov ja enterq callq retq mov push imul icebp in pop addr32 outsb mov lods xor mov rex.WRX movhlps lods lods and lret mov loope pushfq pop push (bad) mov (bad) rex.WR callq rex mov jp in sub loopne lods mov push mov or lods sub jp movsb jge lea sub mull jnp jl rex.B test js mov push pop lods mul popq callq leaveq pushfq imul test insb rex.R rex.WRB lods (bad) imul lods or adc scas int3 sbb int imul xchg stos mov jl movabs add push scas repz jno rolb std rex.WRXB lods push (bad) hlt pushfq xor leaveq test sub xor fisubr rex.X push stos scas and xor sbbl pop lods cmp subb lods adc mov adc fwait mov in movabs mov stos or pop xchg (bad) popfq mov pop adc xor add jne ljmp mov ffree xor mov pop lods jnp or pop lods fimull add out and in (bad) pop xor int3 lods loopne insb xchg (bad) rex.WX rex.WRX out fdivrl and xchg lods rex.RB rex.WXB mov or (bad) or xchg sbb add and xchg add pop push retq lods roll fs mov and cmp lods and jmpq subb sub fsubrl jo lods cmpsl fs (bad) adc movsb mov rorb (bad) add sub (bad) mov (bad) push (bad) scas sub (bad) test fbld cmp fimul shlb cltd sti lods shrl movabs ljmp lods out sub rex.RB xchg xchg lods add rcrb sbb lods jnp rolb xor fiadd sbb sub mov (bad) loop (bad) (bad) push (bad) pushq data16 stos xchg movb pop (bad) out (bad) (bad) stos adc (bad) or in movabs hlt mov movsb addr32 (bad) mov test (bad) iret add pop lret xchg subl lods shll outsl mov cmp xor movsb shrl and mov xor (bad) sbb rex.WXB push pushfq in fdiv lods (bad) cwtl outsl (bad) rex.XB (bad) lods xlat or (bad) lods jle ds mov xchg (bad) jno xchg fwait cmp mov mov lods and (bad) jmpq lods outsb sahf mov fstpt sub adc rex.WRX (bad) out xlat lods rex.X cmp xchg mov (bad) mov in scas shrl je lods (bad) xor roll (bad) lods (bad) or xchg jge xchg test sbb rex.WX movabs test xor pushq add repz lods jae,pn jmp push or xchg lock push loop je lock std cmpsb or mov cmp xor mov stos push sub ja lods mov imul push pop and xchg int (bad) hlt cmp xchg add repz xor (bad) fbld scas cmp faddl stos scas adc sub (bad) jno lods mov rex.X adc lods adc pushq xor xchg mov push push push pushq rol xchg rex.RX in push outsb sub add sbb cld pushfq retq (bad) jo data16 loope rex.RB sub rorb sbb scas (bad) test cmp lods fs leaveq iret cmp xor add lods fs mov sub sbbl fsub sar cwtl rex.WB rex.WRB icebp sbb in or movabs xor adcl mov sub (bad) (bad) push test stos rex.W gs rex.RXB sbb shrd jns or cmp (bad) xor rex.WRB (bad) in lods enterq add mov mov lret mov jl and icebp movsb fwait sarb cmp jmp (bad) cli sub push rex.RXB sti jno jmp mov fs sub fiadd and loop comiss scas (bad) rex.WRXB jp xchg adc stos mov inc jl mov cltd (bad) stos xor test lods mov movabs xor cwtl or in hlt jbe push add cmpsl pop lods push add (bad) pushq rol insl pop pop cmc and cmp insb packuswb fildl int (bad) insb rex.XB rex.W gs (bad) jb push rcl mov adc xor or callq xchg add push or test (bad) xchg lahf add (bad) rex.WR and rex.RXB mov test int int3 (bad) rex.WX mov rex.WB sub pushfq insb (bad) sub push (bad) in vcvtpd2dq push sub mov cmp mov rex.WRX mov repz fisubrl pop test gs movslq xchg or in or sub (bad) rex.W enterq repz xlat outsl mov add pop rex.WB int3 (bad) enterq (bad) in push insb fmull rex.W (bad) jl mov cld pop out insb push mov (bad) xor sub (bad) jbe test scas mov je sbb mov xor mov mov movabs mov negb test movsb popfq int mov outsl (bad) mov pop mov pop mov gs movsb mov (bad) movabs cmp sub int3 (bad) (bad) je xor pushfq rex.WRB sbb rex.WX rex.WXB cmp int3 hlt fisttpl movsb (bad) cltd mov mov (bad) jge mov shr pushfq callq (bad) mov imul popfq hlt push or jle (bad) (bad) (bad) cld pushq iret cmpsb sbb cmp jle (bad) movabs or jge imul popfq test or xchg (bad) hlt xor iret rex.R sahf (bad) fisttpll int3 cmp sbbl enterq jae mov (bad) int3 cmpsb fimul or outsl insb add sbb lods jnp pop int3 xor jb insb pop mov xor iret mov or jle (bad) out (bad) cld pop xor iret in fdiv fmull lock (bad) in xor iret rex.R push jle (bad) sbb imul orb movabs hlt (bad) or jle (bad) sub pop movsb mov test or sub rcrb cmp xor mov subl not movabs rex.WXB rex.X lods mov insb pushq (bad) push sub movsb sub or pop jl in std rclb cmp pop pushq (bad) pop in movslq rex.WR pushfq xor or in sbb (bad) decl pushq outsb sbb hlt (bad) sbb sbb xor pushfq je sbb add pushfq movsl mov rol movabs ds jae shrl jne jle nop outsb jns sub (bad) (bad) test test rex.WXB xchg add rex.WX sub out (bad) rex.RB addr32 adc lods clc (bad) je jb adc or pop jno rex.WRX rex.X jle pop pop data16 jg loope mov xchg pop movabs clc sub xchg (bad) (bad) and movabs je cld std mov mov rclb rcr lods (bad) rex.XB mov mov xchg mov mov (bad) (bad) mov mov insl add add nop insb mov mov mov (bad) lock movsl or popfq rex.XB fwait mov in mov movsb popfq outsl movsl mov mov mov mov cld mov movabs mov icebp mov mov es movsb leaveq mov mov mov mov push mov rex.XB sbb int3 mov push mov movsl pushq callq rex.WB xor mov popfq cld pushfq and mov lret cmp fcmovbe movsb movsb or jmpq movsl fsubr popfq mov iret sarb (bad) enterq out lock test repnz rol mov add (bad) (bad) popfq rex.WRX mov mov addr32 jl mov push mov addb mov movsb xchg rex.WX sbb cltd mov in xchg movsb mov sahf mov sbb mov loopne sbb in xor jae and test sarl mov and lahf rex.WRXB lock push jp xchg or test test lret test jnp xor in movsb (bad) mov (bad) ja or mov retq mov or mov mov loope xor mov stos retq mov addr32 mov repz mov icebp mov movsb lahf mov mov mov mov frstor movsb push movsb clc mov stos mov mov add mov icebp mov movsl xchg psubb mov std mov pushq movabs fistp xor push insb mov icebp mov movsb lahf mov mov mov je mov mov (bad) rex.WR es movsb (bad) mov jne fsubrs mov pop ja (bad) mov movsl movabs mov jo rex.WR lahf mov movabs mov jno and mov icebp mov movsb lahf mov mov mov movsb xchg andl icebp mov movsb lahf mov mov (bad) add mov mov hlt mov sbb or movsb mov (bad) mov movsb xor in movsl imul mov ficoml andl sub (bad) movsb lret mov movsb movsl pop pushq push mov adc and adc popfq lcall mov pushfq shll cmp adc (bad) or mov push sub (bad) push shr mov mov mov mov fisubl loope mov test lgs sbb rex.WRX lret mov cld cli addr32 rex.W mov (bad) mov xchg test jl (bad) (bad) pushq cmp adc movsl std mov rex.WRX mov add sub rex.B gs adc movsl or mov movabs jne sbb (bad) cmpsb mov popfq pop jbe jae add add int3 insb mov icebp mov movsb lahf mov mov mov mov movsl pop xor sub and popfq mov sbb adc (bad) mov mov mov movsb lret mov rex.WR mov (bad) mov push test fcompp mov mov ds pushq fidivl mov movsb add test mov icebp mov movsb lahf mov mov mov mov fisubl sub mov ficoml mov sti mov pushq xchg js movsb pop mov (bad) pop and sub jne push in pushfq mov (bad) mov pushq mov movsb lahf mov mov mov mov fisubl lock int3 sub shlb cwtl movsb mov push mov sbb jg and rex.WR lret adc and pop jns mov jp pushq popfq pop cmp loope mov or leaveq jns or loopne mov adc pushfq mov sbb sahf mov mov movsb xor rex (bad) mov xor movsb loope (bad) rex.WR adc cmp frstor sbb jp fisubr movsb movsb (bad) cmp pushq sub mov movsb iret mov and mov movsl in sahf popfq fbld rex.W mov jno pushfq int3 mov mov and pop add mov frstor (bad) mov rex.WRX frstor data16 rex.RB stos mov rex.WX int3 movsb mov sub (bad) and push mov pop push xor movsb mov test jo xlat mov hlt movsl mov (bad) cmp stos (bad) pop mov fmul rex.WRXB pop sbb cmp popfq (bad) push iret movsb sbb popfq (bad) push jp popfq mov mov jne or sub sbb mov and (bad) popfq rex popfq xor pop nop popfq mov mov rex.WX mov cmp mov retq jne xor popfq xchg data16 insb mov gs retq mov lock movsl pop xor rex.R in rex.B in mov jrcxz sub movsb mov lret (bad) movsl mov movsb pop insb (bad) popfq mov mov fdivp mov jne jmpq cmp rex.B push fmuls rex.WR retq rex.X scas mov mov mov mov fisubl sub (bad) mov (bad) mov movsb xor (bad) movsl fcompl fs (bad) mov lods popfq mov es cmp mov jmpq rclb cs rex.WRX mov (bad) mov movsb xor clc push add rcr loopne stos mov mov rex.R mov out push rex.WRX mov or mov es movsb jrcxz push int3 mov jae cld add mov fisubl mov mov movsl xchg mov sbb lock cmp adc ds add (bad) mov mov cmp mov movsb mov icebp mov movsb xchg in push shrl movsb pushq stos fnsave int3 mov rex.WRX mov push (bad) xor (bad) jl scas mov ficom mov mov fisubl int mov rex.X rex.WRX mov cmc mov movsl pushq mov enterq rex.WR callq sbb adc out insb mov jno adc cs mov in mov movsb adc pushq in subb mov mov (bad) add mov xchg out enterq jle xchg fsubl vxorps mov icebp mov movsb popfq mov or cmp popfq mov pop loopne scas mov (bad) ja sub (bad) movsl insb leaveq pop add pop stc imul jl repnz rex cmp and and movsb or xor mov adc movsl (bad) mov rex.WRX mov (bad) stos mov pushq mov movsl sub mov cs mov add mov mov sub movsb push rex.R rex.W out mov rex.WB rex.WB int3 or rex.B adc mov mov callq adc mov mov xor movsl adc (bad) adc mov mov pop iret mov mov insb iret movsl pushfq mov (bad) sbb rex.RXB sub popfq (bad) lahf icebp movsl stc pop xor mov popfq enterq testl adc lahf mov mov (bad) rex.WXB test (bad) sub sbbb popfq mov insb popfq (bad) es or mov xchg mov divb mov movabs mov fwait movabs imul cmpsl movabs rex.W xchg mov movsl pushq in add mov pop int3 popfq sbb xor mov hlt movsl cmp gs (bad) (bad) popfq int3 lock andb ss and mov icebp mov je test popfq (bad) sbb xor sbb xor in jo callq mov nop adc in and popfq mov rex.W mov rcl mov add mov je cmpsb repnz mov add icebp (bad) push sub cmp pop (bad) mov pop adc sub mov popfq ss lock popfq rex adc mov cmp rex.R stc (bad) nop insb xchg add adc mov popfq testb push (bad) scas fdivrs (bad) or test jg test adc mov lock mov mov nop mov insl movabs sub popfq mov sbb cmpsb outsl push callq rex.WR mov mov sbb sbb pushfq add add xor popfq rex.B rex.WX in add loopne pushfq ja sbb popfq or rex.W sub scas mov or rclb cmp sti and jb (bad) and popfq mov movsl mov rex.WX rex int3 (bad) pop mov sbbb movsl rex.W orb nop mov popfq lea add (bad) mov mov adc jle pop stos mov popfq cmpb mov test mov jb je fs ss sbb movabs gs callq (bad) xchg fsubr popfq (bad) in (bad) repz rex.XB (bad) popfq (bad) mov lods push xchg scas pushfq rex.WX popfq (bad) movabs mov xchg sbb pop (bad) mov mov xor sti lahf mov mov (bad) mov popfq xchg xchg scas je xor mov popfq or enterq movabs sub jae insl frstor or je popfq (bad) jp or jnp ds nop es mov mov mov mov fcmove xchg (bad) in jge (bad) mov mov xchg je jl popfq iret xor (bad) mov xorl enterq cmpsb sub insl sbb mov sbb sub popfq adc mov cs cld mov test mov mov movabs add add add sub movsl rex insl (bad) scas callq stc xor popq (bad) mov rcrb mov and jo add sbb popfq negl mov (bad) es popfq (bad) (bad) sub popfq (bad) (bad) jo mov popfq iret and mov lock repz mov (bad) popfq sbb sbb jp popfq pop imul pop sub popfq mov std xchg popfq add push xor insb rex.WRX mov mov (bad) in callq fs mov popfq or or lea mov mov mov pop mov (bad) (bad) movsl je popfq clc mov or mov push gs lods mov push rex.WR callq cmp callq sbb xor repz int3 insb push adc jne popfq movslq rorb mov insb xor sbb divl pushq mov sbb mov (bad) mov (bad) pushq cmp xor xlat cmp mov std movslq pop mov mov adc lods mov cmp scas mov and (bad) test mov js xchg mov sbb mov mov repnz (bad) sbb cld xor cmp sub scas mov es mov mov mov sbb mov (bad) (bad) pop int3 mov loope outsl lods add lods (bad) adc lret push xchg xor decb rex.RX adc sbb xchg rex.X pop xor lods loope rcll mov rex.WB (bad) adc (bad) xchg lods lock xchg js cmp lods rex.WRX xor rex.WRB mov xchg fbstp or sbb lods mov jg loopne out lods adc rex.WR callq lods mov jns cmpsb cwtl jp andl insb cmp mov imul pop adc jno pop or std adc lods out sbb (bad) insl xchg callq or loopne cmp test rol lods movabs sub (bad) jne jns and xchg sahf xchg cld lods sub hlt scas cwtl rclb cmc push cmp sti lods (bad) jmpq fcom lods rcrb xchg add xchg lea movsl nop sub pushq sbb movabs mov or movsl sbb test add callq mov (bad) rex.RX rcll shrl sub jp (bad) mov push push out pop lods mov popfq add lods mov rex mov jl stos (bad) sub or movabs xor lods pop lea jb (bad) in mov fild mov jl stos stos rex.WRX sti mov xchg mov imull (bad) pop cmpb (bad) ds lods outsb loop rolb cmp lock movslq stos rex.WR fwait scas (bad) (bad) pop jbe jmp lods push scas in or lods out cmp in pushq movabs addl and (bad) xor (bad) rcrl jne test fstpt (bad) scas sbb (bad) mov jmp lret insl ss popfq cltd lods mov in rex.WXB xor or add push mov int3 rex.W xorl scas (bad) (bad) push jge sbb movsl mov xor mov punpcklwd jrcxz sub or stos rex.WRX and lods xor push cmpsb sbb scas (bad) (bad) (bad) jle in (bad) xchg stos mov (bad) add cld out rex.XB lock popfq mov subl (bad) sbb lea (bad) fwait in xor mov retq (bad) addr32 int3 jo xchg icebp movabs mov test movabs in mov gs pop rex.WR rex.RX (bad) scas testb (bad) mov or lock push out sarl mov jrcxz lods pop fisubr lods fadd fsubrl xchg xchg mov lods fs mov jne or (bad) cld xchg (bad) mov xor mov lock movabs outsb jnp sbb fild mov push cld adc hlt push lods sahf (bad) xchg mov in lods adc rex.RXB and lods rex.WRB and pop xchg clc (bad) adc enterq and rcrl add cltd lods cmp cmp jb cmp cmc rex.B mov adc mov orb (bad) xor callq popq movabs shrb (bad) (bad) pop (bad) in movsl jg movabs pop rex.R push rex.WRB jae test lods test repz (bad) add outsb and mov adc iret test movb retq movsl mov pop fsubs sbb rex.WB (bad) scas (bad) scas rex.WXB adc push fdiv fldt shlb ds (bad) xchg retq out mov fdivl jo fisttpll movabs (bad) add (bad) mov add (bad) mov lods jmpq sbb pushq stos fldt cld and adc cld and (bad) pop repz mov and lods mov cmpsl cmp lret jp xchg pushq lods push nop stos (bad) mov sub lods rorb test xchg lock push sub or xor sbb xchg lods or retq push insb in (bad) rex.W push mov movslq push (bad) or xor cltd repz in (bad) add lods out lods (bad) fdivrl movabs cmp mov je xor jo and add adc cmp (bad) in lods pop jne adc (bad) and (bad) (bad) rcll pop rex.W out repz movabs (bad) adc and xchg fist jle xor jge (bad) rex.WX mov jne (bad) xor lock jg lods xor add add pop cmp xchg movslq (bad) orl mov (bad) jno es (bad) clc lods stos and xor testl out fcomi push lods in callq adc xchg es lods rex rex.X add mov int in out adc imul loope scas pop imul cld cmp repnz mov (bad) adc rex.WXB (bad) pushq and scas jmp retq lods retq jns xchg push mov mov cld mov adc gs lods movsb jg (bad) jno in (bad) rex.WX or loop mov mov test and (bad) push imulb jmpq (bad) mov mov cmp and (bad) (bad) rex.WB rex.XB stc sub cmp mov (bad) insb ja callq (bad) movabs cmp mov cmpsb rclb es outsl jno (bad) xor lods je mov retq test leaveq xchg loop jl pushq (bad) mov sub in sub iret out insb leaveq sahf fstps (bad) in mov mov lods adc cmp mov or adc mov stos (bad) rorb retq add out jo mov lods ficomp stos int movsl (bad) repnz test insl movsb xor cmpsl leaveq movslq fwait (bad) mov mov lods rex.RX mov sti (bad) mov mov cmp lods rex.X fisubl lods xchg jbe pushfq stc stos pop movsl lods clc sub in or int3 sbb lods pushq callq in lods or xor pop adc outsl adc and pushfq (bad) cltd cmp add repnz rex.X (bad) rex.WRXB nop lock jb xchg sbb sbb pushfq stos in xor sbb mov jo lods mov xor (bad) xor rex.WR rex.B adc jge scas cmpsb sub movsb callq lock stos xchg sub mov jo rex.WRX jge lea scas ss push fsub sbb test rex.R shl and jle add flds or sbb rex.WB cmp cmpsl xchg lea (bad) js movsb pushfq (bad) lock rex.RB mov rex.WR (bad) (bad) and sbb lods shll adc repnz fwait jl jg mov or adc cld (bad) adc test mov cld fnstsw addr32 rex.B in cmpsb test in push cmp jrcxz insb jl out int xchg movabs sahf adc adc movabs mov rex.RX jo iret (bad) outsb lods mov movslq lods add std nop or loop lea cmp insb cltd lods out movabs sbb (bad) rex.RB movabs (bad) lods (bad) lods push (bad) jbe pushfq lods ror fstps (bad) outsb or xchg lods (bad) (bad) and cltd (bad) or (bad) sub ss sub mov adc fwait mov lods insb lea (bad) xchg movabs (bad) (bad) movabs (bad) mov push sarb (bad) pop (bad) mov push cmc (bad) rex.WB nop lods sbb movabs rex.X retq stos std cmp (bad) rex.WX lods insb rex.RB xor jne lods imul or lret lods (bad) loop fdivrs (bad) clc lods pop hlt mov pushq rex.XB sbb lods fidivl sbb clc mov rex.WX idivl ljmp push adc lock lods out add out fstpl rex.R addr32 lock lods adcl scas mov add (bad) fcom lods loopne jno lock mov in jle jl jge (bad) (bad) out adc test mov lahf lods idivb in xchg test rex.WRX fwait pop cld jne jbe mov and rolb nop mov jns lods retq pop sub sbb lods pop rclb repz sub nop add lods mul pushq (bad) retq sub ss in repnz cltd movabs (bad) mull cmc lods jl or cli movslq sub mov js clc test jl negb mov cld (bad) lods (bad) push (bad) rcr movabs sbb lods mov fwait idivl (bad) (bad) cmp mov (bad) sti (bad) rex.WR rex.X jmp xchg sbbl push adc sub (bad) add rex.WRX fstp (bad) repz xchg cli or rex.RX cmpsb adc adc icebp lods retq cmp mov jrcxz rex.WRX cmp clc sbb (bad) movabs test sbb lods and scas cmp (bad) add sbbl repnz leaveq and adc sahf sbb mov lret mov (bad) fdivrl xchg rex.RXB cmp out movl icebp lods iret rex.WB rex.WR add (bad) lret pop lods rex rex.WRXB mov fist xor (bad) lea sub (bad) subb retq insl idivl (bad) callq mov xchg test pop jbe sub push (bad) mov mov testb rex.WRXB mov (bad) or hlt in rex.WRB cltd jbe lods pop xor es sarl test iret pushfq imulb out jne lods movsl mov callq or rex.R int3 std pop mov stc adc leaveq mov mov xchg mov in (bad) je vcvtps2pd rex.X lods cmpsl pushq (bad) pop lods cs xchg rcrl fs lods test in lret cli cmpsb (bad) loope add (bad) outsl lock ja rex.R cs outsb pushq add loop and test sub (bad) mov movslq cmc add mov sbb movabs (bad) data16 and (bad) mov movabs (bad) (bad) int cld insb xor xchg cmp movabs lods movabs rolb (bad) (bad) scas icebp stos rex.RX std jmp (bad) mov xchg mov lods adcb retq pop (bad) xchg and in test addr32 movabs negb stos lods (bad) (bad) in leaveq ja jp xor shrb je xchg pop and pushq (bad) adc stos je xchg lods sbb scas rex.RX mov sub in rex or xor insb iret pushq in push mov and es or xor cld lods pop jb movabs and stos rex.RXB iret loopne imul sete scas sbb iret adc fsubrl or adc out xchg outsb lods cmpl push mov push jnp,pt jge (bad) movsb movabs insl (bad) repnz lods out jl fs je jrcxz test rex.WRB scas xchg and in int3 rex callq lods leaveq sbb adc stc mov fidivrl adc lods test out jmp add lods xor fwait mov add mov lods enterq (bad) rex.WRB sahf xchg or or cmp insb rex.WR test lods iret out (bad) or lods xchg repnz sbb cmpsl (bad) (bad) cmp pop (bad) mov pop jbe mov rex.WR orl and fldl rex.B fs lods clc stc icebp cwtl sub (bad) mov test xor add cli mov in push (bad) fs retq mov mov (bad) imul ror xor int leaveq add sub rex.RB xchg (bad) add and jmpq fstl movabs mov sub inc (bad) pushq xchg rex js rex.B in movabs lahf outsb (bad) lods sub adc (bad) mov mov mov lods jnp mov retq lods (bad) ds fnstcw xchg shrl jne lods loopne (bad) callq lods mov int3 sbb lret fldcw push lods (bad) gs rex.WX sti ja stc cmp push (bad) insb sub add jb (bad) rex.WR adc int outsl jne (bad) iret (bad) popfq xchg movabs rep es add lods cmpsb test mov (bad) lods rex.WB rex.WX xor rex.WRB jl lods mov rex.RXB lods (bad) sub cltd push (bad) mov rex.R test nop (bad) jno scas xlat mov (bad) cmpsl cld and lods mov mov add jb lahf movabs push cld (bad) test rex.WRB fcomip lret mov rex cmp imul movabs jge mov sbb pop stos jp cmp cmp xlat stos fwait cmp movl stos (bad) notl sub lods popfq cmpsb lret mov in lods (bad) add xor lods mov sahf (bad) and lods mov (bad) add add loopne and fwait xor fcoml loop scas rex.WXB loopne (bad) fsubl lock es out or lods out subl lods jge mov (bad) xor lods ja rex.X rex.XB in (bad) lods rex.WXB (bad) imul out test lret lods or in stc clc lods rex.WX (bad) pushq jns (bad) cld (bad) lods andl addl rex.RB add fcomps rcl rex.WXB jmp cwtl xor rex.WRB pop cltd lods sbb (bad) jp jb shl mov or rex.WRB push callq flds jmpq (bad) jnp (bad) lods leaveq add push xor mov mov stos (bad) sbb scas sbb mov mov rex.WR stos rol mov xchg insl movsl sbb lret js adc icebp push and rex.WR push in or add mov (bad) (bad) (bad) or xor test push sbb (bad) pop xchg mov xchg or (bad) insb loop sahf cmp jne std mov lods and push sub xor movsb rex.X in sub mov stos enterq scas imul xchg js or ja sub xor sub jg jmpq (bad) int3 jl repnz sub lods pop xor fsubl test adc lods scas icebp or adc sbb movabs movabs sahf lock lods movabs (bad) fstl sbb or lods sbb cmp mov imul sbbb xor rex.R es xchg push cwtl cmpsb sub sub or and (bad) lods (bad) and (bad) scas cmp out es movabs sub addl rcrl rex.XB adc je xor lret fsubrs rex.W xor in mov stos callq stos xchg out shll sbb push retw or lods jrcxz (bad) pop jl test out cmpsq mov lods (bad) movabs mov or lods xchg fimul in mov jmp outsb push xor lods movabs mov fiaddl push and rex.WR and rex.WXB and and outsl and (bad) decl or mov insb pop (bad) jae lods push add jl mov adcl loop mov pop jg mov fs adc mov jno sti test cmp rex.RB sub (bad) mov (bad) mov retq adc movabs mov cs rex.WRXB imul fdivs mov outsl cld lods lods movabs mov loop mov adc rex.WX rex.WR adc jge pop retq std (bad) lods sahf ja mov and vsubpd push js lods fwait rex.WB mov jne rclb addr32 (bad) clc jae out scas lret (bad) icebp fsubrl sbb or lods xchg iret push xor sbb rex.RX (bad) (bad) jb xlat lods mov fstpl lods rex.WXB and rex.X lods sti iret je xchg pop cld out loop out and (bad) jb mov sub cmp lods add jb out or add push (bad) rex.RX and fcmovbe mov in repz mov jne cltd or mov mov mov jle rex lods (bad) jrcxz pushq ds (bad) fldcw pushq vandnps fdivrl cld adc repnz jb in and (bad) (bad) and rcll callq lods sub repz pushq and int rex.RXB rex.W rex.RB adc lret cmp lods rex.WRB rex.WRX (bad) (bad) mov mov cmp (bad) or and int sub scas stc add scas rex.WXB mov xor rcrb mov mov lods xorb lret outsl jle lods test or adc add ror icebp xchg sbb (bad) rex.WR lods mov je jne pop leaveq (bad) mov adc (bad) push lret fistpll loopne data16 or cmp and (bad) callq movabs ss jae mov lods (bad) pop loop and xor push or lea mov mov adc mov jo sti outsl hlt mov retq pop jnp push push insl adc mov subl sub (bad) xor rcll add cli shrl sahf pop mov (bad) jnp xor in mov (bad) stos add retq jae mov insb fmull mov (bad) rcrl in (bad) retq lahf or jns test cmc cmp movabs or rex.RXB int mov sub push mov (bad) mov (bad) xchg cmp (bad) lret stos xor xlat add movabs (bad) or fisubrl out (bad) shrb insb cmp lret sub rex.WRB mov imul jno int3 fimul lods stos cwtl jp (bad) sbb cld lods cmp test (bad) lods and cmp xor xchg sub enterq or imul ja stos es iret rex repz test cltd cmpsl ja rex.RXB jns sbb (bad) sub add test shrd (bad) xor pop (bad) push add lods lret pop sub pop add fldt mov sub xchg sub pushfq (bad) mov pushq lods insl sbb adc add in mov add stos mov jo sub sbb (bad) xchg adc or (bad) rorb or stc movsb hlt mov outsl (bad) gs fisubr cs divl lods sub xchg sub in movabs insb xor and pop (bad) (bad) mov xchg sbb lods data16 pop mov xor push mov mov test shrb (bad) hlt jns (bad) cmpsb subb sbb sub or mov pop sbb rex.WR andl sbb mov stc lods cmpxchg mov or mov sahf push lods sub repnz push (bad) stos (bad) jp xor or (bad) imul (bad) mov lahf (bad) lods scas (bad) mov outsb icebp (bad) pushq jg jge pop adc in jnp int3 lahf xor nop mov xchg (bad) adc push enterq (bad) int3 rclb lods adc jmp mov fistl jo lods push callq imul adc push faddl (bad) jae add stc lods pushq jge rex.WX sbb retq xchg cmp test lea mull mov xchg (bad) addl std sarb lret rex.WRX lods xchg mov stos movabs mov (bad) sbb lods jge movsb (bad) roll lods lods (bad) in (bad) insb sub mov lods test callq jae adc rex.RB adc pop (bad) es mov movabs and and lods jle test jae loopnel xlat andnps hlt (bad) (bad) clc lods xor rex.WRB (bad) pushq add subl insl loopne stos lret mov cs ficompl (bad) data16 lods mov fadds rex.RB adc mov rex.W mov movsb sub lods test pop mov imul pop lods sub rex.WB xchg std lods cmc pushfq test (bad) add pushq pop iret mov sbb rcrb cli pop adc pop lods or pushfq adc pushfq push rex.R xchg enterq jb rex.R and cld (bad) add (bad) outsl push lods mov rcr out lods sub fdivrl js loope (bad) insl mull mov sub sub mov enterq mov repz or rex.WB rex.WRXB cmp insb lods cmc (bad) sarw movsb jmpq fs lods retq sti fidiv sbb (bad) movabs and add lods fs rex.WRXB fildl shrb mov iret lods ss mov es sub (bad) cmp jne imul test pushq pushfq str ja xor pop out lods (bad) divl vmovsd in lods pushfq jno loop sub (bad) out (bad) and stos sub mov movabs lods outsl es (bad) fdivr stos rex.WR lods (bad) fs xchg mov cmp scas mov push mov in insl cmc imull add xor data16 stos movabs movslq (bad) cmpsl outsb gs xchg (bad) sti lods (bad) xchg (bad) ja in add rex.WXB retq lock out movabs adc retq imull in add pop lods and cld push sub sub fstps stos mov outsl je pop lods movsb nop or lods movslq roll test cmp stc mov ja scas jbe xor mov or sub in fdivl sahf fcmovb lret scas jg,pt int (bad) imul (bad) mov push push and lods fsubrs (bad) rex.WXB cld cmc lea sub jle jne insl push jge test lods cmc scas (bad) xchg (bad) xchg (bad) fwait repnz rorb adc (bad) pop je or insl push lods rex.WXB lods push mov fidiv jnp retq cmc je sbb movabs std xor adc ds (bad) pcmpeqd lods mov mov sbb and or add (bad) cmp in mov (bad) mov sub or xor (bad) icebp mov cwtl lods sbb rex.WR rex.RX rex.WXB jg pushq cmpsb iret mov enterq lods mov fs (bad) repz rex.R lods adc mov rex.WRX subl rex.X cltd (bad) outsb (bad) adc push jrcxz jbe mov lods cli leaveq mov (bad) and lret sub ja out jno hlt or loopne (bad) pop jo adc sbb mov je rolb jle jp and mov loop xor cmpsb and rex.WX lods xor mov add fldl hlt push jmpq xchg test (bad) mov cmc lods in push (bad) (bad) jns (bad) (bad) (bad) test (bad) hlt rex.XB jmpq rex.R insb (bad) mov shlb jbe lods sar lret or and lods push loop and scas fsubs (bad) add lods shr or sbb and mov scas push xor mov insb lods mov repz mov adc sbb sub mov cmp xor and adc sub rex.R rex.WRX out (bad) repnz mov test icebp xor stos shlb sub and sub or lods push ror rex.WRX jrcxz (bad) push movabs (bad) imul lods xlat jae fwait adcb jo (bad) rorb lods test scas shr int3 lods rex.WX and rex.WRXB mov xor sbb movabs fimul outsl mov fistl xor push sarb iret (bad) lods rcrl pushq rex.RB add (bad) add lods push out jae and (bad) movabs xor cld (bad) sub int mov xor loopne pop (bad) lods or mov cltd lods loop xorb add sbb stc sti rex.WXB add jp rex.XB sub sbb sbb rex.X mov jl int adc mov jo xchg pushq mov jb mul push ja mov addb mov fisttp loopne mov jp lret xor sub mov pushq pushfq test orl cli stos adc retq addr32 lea mov movsb jb jge sub or cld subb retq (bad) nop (bad) lods jrcxz jg movabs rex rex.W cs lods pop decb sar and cmp test xor nop ffreep pop test lods lsl cld sti out add movsl movabs in rex.X lods or rex.RXB js movabs xchg stos mov jl mov (bad) mov adc rex.WX test cmc sub mov adc pop rex.R (bad) (bad) jno xor mov callq ficom cli rex.W sub pop out lods stc hlt adc (bad) std fwait mov jge rex.R pushq mov sub mov or pop lods pushq xlat and lods test test jnp mov jo and pushfq callq or mov jp xchg lods pop rex sub sahf add cmp jmpq shrb movabs rex.W sub cwtl (bad) add test out (bad) andl mov rol movsl mov or stos jb adc popfq pop cmp rex.WR mov int3 retq (bad) adc jle cli or (bad) repnz jp in shll int3 sti mov mov retq in push movsb cltd retq and cmp (bad) (bad) lea or out xchg mov nop lods fsubrs shlb lods rex.WX outsl test push fnstcw jb lods (bad) pop add lret popq lods (bad) fisubr mov pushfq mov rcl psubsb cltd (bad) outsl mov scas sbb test hlt add (bad) scas adc jp lods retq (bad) cmpl imul callq out lods stc and outsl test add rex.RXB rex.WR rex.W leaveq mov jmpq and stos lods adc or jo sahf scas sub insl movabs sub mov sbb mov lock jne and or imulb (bad) lods lods movabs in mov subl rex.WRB jne scas xor cmp jge lods mov mov and rcrl pop insb or xchg pop sbb popfq imul sbbl pop sahf lods test rex.WX mov or sbb outsl test mov mov cs mov rex.WXB vpavgw (bad) movabs pop fcompl movsb lea (bad) lret hlt rcrb push retq test (bad) addr32 rcrl scas lret (bad) mov (bad) jbe int3 dec sbb and jmpq lods rex.WRB (bad) fsubrs lods jge cmp mov or xor add cld and in jne (bad) (bad) scas psllq or mov pop (bad) mov lods fstps (bad) rolb (bad) lods jno sahf sub cmpsb test stos sbb and in fwait sarb (bad) mov add lea mov (bad) push pop xor (bad) es pop in sub (bad) xchg (bad) push fsubrl push enterq adc mov sbb loop cmc lods add fdivs lods pushfq pushq rex.X mov shrl mov rex.RXB ficomp jne sahf xor jl add rcrl push mov and std lods pop (bad) ss enterq (bad) push mov cs push xchg xor sub movabs insl add mov (bad) or cmpsb sub (bad) pushfq mov shll jp pop (bad) sti movslq stos rex.RXB adc (bad) jge jle sub mov rcrl sub (bad) in mov add int (bad) gs rcll rex.WXB fidivl iret leaveq mov adc xchg (bad) add in (bad) and rex.WXB rcrl sub loopne lret (bad) cmp stc (bad) cmc rex xchg popfq mov and lods xchg int3 mov lock (bad) nop in rex.W jae jo sbb leaveq pop (bad) fiaddl in mov shll jae adc xorb stc (bad) cmpsl (bad) adc in in (bad) push fdivs scas lods mov out retq push xor jge out enterq (bad) rex.WXB rex.RXB xor in ja in adc lods mov (bad) movabs movsl cmp leaveq xlat and (bad) negl ss pop jne (bad) mov lods or jae movslq ljmp pop scas (bad) mov imul (bad) jne jle cmp (bad) push movsb stos movabs adc pop lods cmpsb cmc ss jbe adc (bad) stos lea movabs jo cli test lods (bad) mov outsl mov lods (bad) insb leaveq push (bad) scas cmp lock rex.WRB cs mov fucom scas iret mov movabs sti mov jb std sub and xlat loop (bad) adc stos in pop jge xor pop and add add callq out in sbb sub pop std sbb stos enterq decb lods mov mov out rex.R movabs lods outsl pop jge or jl lods fimul xor lods rex.W cltd (bad) sahf sti loopne add insb in fs in imul rex.RX adc lea lods subl rex.WXB (bad) mov faddl rex.B and retq and rex.WB movabs addl insl loop retq push rex.R rex.WR xchg lods pushfq outsl add jmp fwait sub pushq roll mov (bad) retq or je in rex.WXB or pop or movabs cmp rex.W rex.RB dec mov frstor (bad) jnp callq jo lods cs fadd (bad) push mov repz rex.X cmpsb xchg cmp jnp (bad) (bad) mov xchg add cmp (bad) sbb (bad) lods jno leaveq sub stos rorb pushq (bad) (bad) mov popfq rex.WR enterw hlt movabs jno rorb outsb mov rex.WRX je or scas enterq cmc (bad) or rex.XB movabs mov scas rex.W rex.WRXB cmp test mov adc (bad) insb xor jb and (bad) sub lods rex.WRXB out xchg jnp or xchg stos cmpsb mov sahf test mov mov mov cmp sub movsb (bad) hlt (bad) mov (bad) clc sub fldcw (bad) insb roll and movabs jrcxz lods div mov movabs fnop jbe in mov rex.RXB test jmp rex.WB (bad) fstp movl retq stc or lahf lret push lods movabs pushq mov scas mov and (bad) retq (bad) repz pop sbb loope lods (bad) rex.WX pop jrcxz scas (bad) adc mov mov or lahf mov jne imul add adc sahf (bad) (bad) rex.XB retq add mov (bad) mov addb sub and insl fsubr jle add (bad) jno mov add loopne lods movsb (bad) rex.R pop or es rex.XB rex.WRB sub add pushfq or xor cmp in rex.X mov or int xchg mov (bad) loopne retq xchg (bad) sub (bad) mov in test rex (bad) cld lods out sub outsb movabs adc leaveq rex.RXB xor add (bad) pushfq movhps out cmp xchg out sbb fadds imul cli cld mov lcall lods fs rex.XB xor (bad) std loope insl (bad) lods (bad) mov loopne mov fimull mov vmovups movabs push mov mov movslq insl sub cs push mov adc lods rex.WXB (bad) nop (bad) sub jrcxz divb sbb (bad) ss lods movabs mov rex.WRX jge mov out lods rex.XB rex.WRB or mov je (bad) mov fistpl (bad) mov pop xchg scas lods lock (bad) je mov lods nopl xor or loope movabs lods and sbb int scas ror sub sahf cmpsl imul mov (bad) outsb fs (bad) neg jno sub add sbb lock pushfq sub pop lods mov sbb (bad) push popfq cld movabs sub mov mov cmc mov insl (bad) or lods mov sub xor in lods and (bad) out (bad) data16 xor ror lods addr32 js adc movabs stc (bad) lods popfq rex.B pop rex.XB push lods xor nop mov lods hlt (bad) pop xchg or lods or outsl adc jge ficompl lods add (bad) scas fldcw cmp (bad) stos callq fiadd xlat test lea sti sbb movabs mov add and sub mov cmp adc rex.RX lods rorb shll add and movabs (bad) (bad) rex.WRXB lods test push cld movabs adc (bad) fnsave (bad) lods xchg in cmp lods pop mov cmc pop xor pushq lods pushfq rcrl adc xchg adc lods cmp movabs sbb pop and lods imull xchg xor cmp push sub mov or retq (bad) cs lods pop cltd or int3 xchg nop popfq negl cmp jae sbb and lods test xchg stos xchg jbe out and fsubrs xor cwtl sbb movabs rex.RXB mov lret test and or and ljmp stos (bad) pop jl mov lock xchg push movups lret jno sub ja imul lods movslq (bad) int3 outsl pop mov scas imull xor sub and rex.XB sti lods rcrl pop mov popfq nop push or lock lods insl fisttp int3 out lods es rex.XB in mov pushq add rex.WR scas or (bad) std mov jl jg rex.WX out xor ja cld rex.WR lods sbb add cmpsl lods jbe xor lods jnp faddl (bad) popq push mov xor movabs pop out pushq rex jo xor rcrl jle or push lods cli fisub sbb int fcoms cld in or adc (bad) int3 (bad) rcrl and movslq lea lods xchg push (bad) sub mov cli xchg sahf movsl fcoms popfq lods lods add cmpsl ss rex.RX (bad) push and (bad) insb cmpsb data16 lods leaveq mov cmc xchg xor test rex.WRB pushq and mov in xor ss (bad) cld sbb push jns xlat xor rex.WR jle mov shrl cmp mov jrcxz push mov add jge jp in lcall nop retq fildll sahf pushq and movabs or xchg mov movslq jg (bad) mov adc out (bad) jae mov ror (bad) data16 (bad) scas adc pop jnp cld mov stos lods sar (bad) ss adc lods std out in and sub cwtl xchg mov stos test (bad) leaveq mov je mov lods rcrl sbb mov movabs jrcxz rex movslq incl insb pushfq fs pop mov data16 rex.RB (bad) mov (bad) outsb scas in mov mov movsb mov movabs xor rex.XB lods jl pop mov xor (bad) jg sbb movabs in cs lods imul enterq cmpl mov pop sub push sub mov lods rex.X (bad) xchg rex.WRXB adc addr32 clc enterq mov mov sbb (bad) lods add adc lods cwtl mov sub jnp movabs (bad) xor jg and scas jo xor outsl rex.WR adc or fwait int3 movabs cs lods rex.R movsl mov lods insb imul icebp or (bad) out sbb mov lea movabs mov cmp out lods stos fs fldcw (bad) lods push jno cs or data16 mov xchg jle push and rex.WRXB (bad) movabs push jae int sahf and out stos rex.X lods (bad) adcb pop cmp scas retq outsl es sbb lods mov testl callq (bad) fwait jae std lods enterq (bad) sti lods jne sbb lods fsts stc retq subl push movslq mov cwtl lods xor stos mov jae adc cli lods lods add mov rclb stos std rex.WR imul mov rex.RB es (bad) (bad) cmp loopne mov and std lods outsl lret or cwtl mov hlt add scas js rex sub gs enterq loopne mov or clc (bad) lods (bad) insl movabs xor test addb mov popfq insb data16 sub js out in (bad) jne scas adc rex.WXB mov sbb ds (bad) pop adc add popfq cwtl (bad) (bad) stos leaveq bts or retq sarl stos mov or imul push adc mov movabs lods sbb shll fstpt xor lods rex.R xchg (bad) (bad) scas iret neg sub (bad) jo lods xchg (bad) (bad) rex.WB addr32 cli lods and add jmp rex.WX (bad) in mov out fsubrl cmp pop xlat jne sahf popfq xor pop movsl jg lods add sar (bad) loope fs mov xor sbb outsb cmp cmp lods cmp insl (bad) or fadd scas (bad) stc rex.R xlat adc (bad) mov xchg sahf jge mov xor roll in (bad) or out (bad) pop cld push lahf (bad) lret mov addr32 test fwait sub loopne stc mov push (bad) jo test and jge enterq lods or adcl rex.WB jnp mov jge mov rex.W (bad) in sbb rex.X scas xor cltd sbb leaveq xorb sarl or lods sbb xsaveopt rex.WXB test mov add iret lods jp (bad) gs or mov out fisttpll in (bad) lods (bad) and sahf sti movslq je jge jo sub rex.WXB xchg push (bad) stc stos (bad) adc mov mov or popfq add lods pop xor rex.W mov jg test (bad) or mov rex.WRB sti scas rex.WRXB (bad) mov xor jl (bad) movsl add (bad) callq jmp repnz fldcw add and push rex.RXB rex.R (bad) mov add outsl mov (bad) adc sahf sub rex.X (bad) mul (bad) cld movabs xor jo retq (bad) xchg (bad) cmpsb fild test out fnstcw jbe shrb stos scas idivb cltd (bad) xchg hlt rex.R cwtl lods adcb callq es lock shr scas sarl mov and rorl int nop lods unpckhps jnp fiaddl enterq xor xor rex.WRB rex.RXB sbb lods addr32 repz js mov jrcxz lods mov lods and movslq (bad) iret stos insl icebp cmpsl mov fcoml pop (bad) lods fcmovb (bad) mulb mov pushfq rex.WR shrd iret rex.X push rex lods outsl mov cmc push mov cld jp (bad) (bad) (bad) rex.RB lods jno iret movabs bswap jae sub mov sub and adc xchg rcrb pushq outsb in insl rex.WB rex cwtl out lods ss (bad) stos lock movsb cmpsl mov loopne mov add lods pop (bad) mov (bad) rex.WR rex.B flds mov out mov pop (bad) (bad) rex.RXB sub mov mov jg mov subb and xor leaveq cmp pop in (bad) lods xor mov sub lods jb cld (bad) imul jg jns rex.WXB xlat add outsl cmp in (bad) sahf cmp jne cs lods jb and xchg in (bad) lods ja rolb jns test push stc sub sub in xchg movabs (bad) jb test rex.RB (bad) movsb imul insl jns lods fstpl mov rex.WRX movsb xlat and fistpl outsl cmp cli xchg lods sbb fcoms sbb lods lods pushfq imul xor loop pop lods pop sbb lock fucomip xlat in mov in jp jge sub add shl cmp (bad) in imul lods imul adc insb xchg lods push (bad) lret xchg mov lods std fadds mov (bad) insb xchg pop ja jne sub xchg (bad) leaveq cmpsb and loop addl retq jbe (bad) and rex.WRB in sub icebp (bad) imul (bad) xor scas jbe cmp insl (bad) rex.WXB pop push mov (bad) or mov (bad) stos xchg jmp mov mov (bad) jo rex.WR scas sub test scas retq pushq gs retq mov xor push or push lods pop (bad) add in fwait js (bad) xchg mov lods mov and stos (bad) (bad) insb xchg popfq sub retq lods test sub or and jb lahf fdivp mov out add mov movabs rex.WX push fidiv sub cld sub fwait movabs rex.RXB mov jnp pop lods and (bad) cmp and shlb nop adc lods adc adc movabs cmpsl lock lods push lret cmp push movabs pop enterq (bad) mov add sti andl mov xor (bad) mov lods mov nop fildl popfq push lods hlt fnsave jg lea cmp ror inc lods (bad) jo mov add (bad) rex.WRXB xchg stos add test pop rex.RX or or fs cmp vsqrtpd push cld cli sub ja rex.RXB sbb rex.WRB sub sub sub test insl (bad) mov mov lods cmc mov fisttpl mov pop adc fidiv push rex.RX mov rex.RB rex.WR cmp in lods adc rex.WRX and cmpsb lods (bad) (bad) cld jne orl mov adc (bad) hlt jmp lods jns repnz (bad) cmp adc xchg jbe mov add imul sbb lods sti (bad) mov mov rex.B mov add lods cmc and sbb jne movabs xchg lods (bad) add (bad) shrl (bad) cmp insl jl out jnp adc mov scas fldcw push cs xor sbb mov in add enterq (bad) sub retq sahf insb es insb cltd lods mov (bad) cmp and xor movsb pushq adcl (bad) sbb mov or or cld rex.RX rex.RB adc rex.X jb xchg pop xchg jo xor retq lods pop mov fdivs pushq fnstsw mov testl mov or and mov lods cmpsb shrl and fadd lods mov (bad) pop retq adc mov sub jae xchg movabs rex.WR rclb mov (bad) clc xor lods mov (bad) push sti and mov test int3 test mov cs je (bad) adc lods movabs pop incl jo hlt mov fs pushq rex.WXB jmp mov push movabs (bad) or jns sahf idivb int (bad) add and lock mov outsl jle lods lret (bad) (bad) or xchg jmpq mov lea int3 rex.X sbb icebp movl or jno (bad) rex.W mov xchg fdivrl lods or push js movsb rex.XB lods movabs (bad) (bad) (bad) stos outsl xchg retq rex.WRXB (bad) (bad) callq (bad) shr rex.WXB lods (bad) xor jrcxz in mov push sbb xchg test lret fdivl rex.X lock and rex.WB jp xchg sbbl push repnz sub sub testb sbb iret (bad) in lods lahf stc rorl xchg lods stos lods cwtl clc (bad) addr32 stos loopne in out insl lods lock and mov or fwait lods retq (bad) mov pushfq stos rex.WXB iret andl icebp cmp cs jns mov fstl andq and add cmpsb cmp cli fnstcw jmpq mov imul addl in lods mov sub jrcxz mov rex.RX rex.R xchg retq movabs xchg int3 (bad) (bad) scas scas test adc mov mov mov (bad) mov (bad) rorl lods pop (bad) cmpsb adc jp ds (bad) (bad) andl pushq (bad) lods fidiv fadd mov lods rex.WX js lods lret imul test or sub xsha256 fdivl lods pushq (bad) rex.R popfq rex.X mov jge retq or movabs push (bad) pop and push pop mov callq test jne in adc mov rex.WRX pushq and out xlat movsb mov rcll (bad) xchg (bad) pushfq int3 lods add mov lods mov adc xor movabs callq cmp lods adc rex.WRXB int loope std mov (bad) outsb data16 addb or mov rcrl xchg movsl nop out jl (bad) cld mov mov jmpq test rex.R gs sbb movabs xchg roll pop push lahf lods clc or out jae movabs rex.WRXB cld push jg lret cmc mov lods sbb sub cli jb mov sbb retq mov outsb sub mov (bad) rex.WRX lods fsts (bad) xor rcr mov test and std and cmc mov sahf xchg lods mov fldt fadds jnp stos cmp cmp rex.B mov in or or in test punpcklbw movabs mov lods out rex.R add xor jns insb lock imul sub (bad) sub (bad) adc mov xchg push (bad) callq adc (bad) xor out ds sub xor stos lods (bad) jno (bad) cmc clc jbe lods imul insl adc (bad) in (bad) add xchg adc stc (bad) cmc rex.WRX push sub fisubrl (bad) std mov int3 mov lods pop scas rex rex.WRX repz subl es cmp repnz iret adc clc stc lods xor cwtl out adc rex.WB data16 jg and mov movabs xlat lock fs imul add (bad) xchg movl lods (bad) or jmpq movabs pop scas push je xor retq imul outsl (bad) cmp retq push rex.RXB push cmpsl lret xchg (bad) cld sub shlb pop xor xchg cmp xor addl movabs or (bad) sahf jmp loop lods repnz or mov in retq sub jo xchg lods sbb add test or fnstcw addl cmpsl jge outsb (bad) scas rex.B mov adc adc xor jmpq sti or nop (bad) repz lods addr32 mov rex.WRB (bad) clc lods mov (bad) mov lods (bad) cli sbb movslq (bad) (bad) fbld push lods outsb ss mov mov add pop lods insl adc loop mov lods fcomi and (bad) (bad) cmp (bad) xor mov movabs test lods jl mov out (bad) jno (bad) je in cmp shr cmp jmpq lock sub lods mov jns pop rex.XB (bad) lods (bad) rex.WR sub push in scas mov sub or sbbl cmp (bad) pop ja test add iret add in (bad) outsb out rex.W (bad) lods jns xchg fist out sub lods mov jl in lods loopne,pt addr32 subl lea lods rex.WRXB lods xor fcompl jrcxz mov (bad) mov cmp lock lock int3 mov xor xorb mov and pop mov add jmp in adc movslq js adc ja cld (bad) fisub xor mov xchg (bad) cli lods sub sub push add jbe cmp jo (bad) jge movsl xor lods add in mov scas add retq sarb smsw xorl rex.B lods rex.RXB movabs rex.WRX rcl lods xor stos jge jle sahf sub retq std enterq (bad) lods imul xlat (bad) mov (bad) sub (bad) movabs xlat test cmp sub jo sub xor out lods jmpq (bad) (bad) mov shrb mov (bad) (bad) std lods lea loopne (bad) (bad) xchg sahf mov rex.WRX add adc std push sub fsubl scas ds test scas (bad) out rex.WRXB push lods rcll fst fistpll jg sbb sub pop mov (bad) mov sarl adc xchg mov mov callq sbb std xor movabs lods xchg callq rex mov leaveq mov cld sub (bad) cld outsl pushq (bad) repnz enterq and scas xor insb ljmp or mov (bad) lods jbe test scas mov pushq stos lea shrb cmp test mov movsb int test mov insb mov rorb (bad) fidivl (bad) (bad) xchg (bad) mov sarl lret rex.RXB rex.WB stos imul rex.RX lret loopne jrcxz lods cmpsb push push sub or (bad) out (bad) xchg and xorl (bad) jp mov lret movabs pushq enterq fwait lods cli adc sub xor pushq jmpq xor fimul lods push je rex.RXB xchg (bad) lahf sbb std lods xor mov pop in cwtl mov or lods push rex.WRX sbb mov lods push xor nop out mov cmp mov jne test rex.WX stos xchg rex.WRX mov rcll clc lods mov xor cmpb sub fisttpl scas (bad) (bad) rep roll xchg mov ds xor cs mov sahf loope imul jnp sub imul clc rex.WB retq out pushfq adc lret (bad) (bad) int movabs scas mov lods and (bad) pop lret movabs lods mov xchg or cmpb (bad) popfq (bad) xchg sbb roll rex.B negb add lods xchg rex.W mov ds movsl in pop fistpll rex fldt pop cmc test popfq xlat scas fidivl add and subl cmpsb ja cltd push fadds in xchg push (bad) subl test rex.B rex.WX in and mov test adc or fdivrl (bad) pop rex.RXB mov push cmp adc std mov lods mov jle rex.RXB xchg (bad) adc jrcxz cmp loopne lods test jno xchg jo scas xchg mov adc out movabs mov cmp sbbb rex.R movabs mov lods int test mov and pop sub (bad) (bad) mov scas rex.RX rex.RXB xchg xchg cld clc lods sbb (bad) jmpq pop push in sub adc cmc mov push fmulp mov es sti (bad) stos sub pushfq callq in jrcxz mov (bad) ja lods iret stos cmp xchg pop out or stc lods jne movabs fiaddl lahf adcl mov mov (bad) or in xor lods xor adc insl add sbb popfq (bad) cmpsb or mov (bad) iret cwtl pop pushfq out sbb pop rex.RB (bad) xor sub in enterq rex.WX int3 mov stos (bad) lret mov (bad) nop sub mov (bad) insb or jnp xor adc and (bad) hlt rex.WB lods cld cvtdq2ps pop sbb movabs rcll jl (bad) and mov adc xor (bad) lods (bad) je fisttpl (bad) jp xchg lods in lock callq (bad) mov test xchg in ja lods cmp rex.RB mov lea mov lods out shlb mov lods int iret popfq add movslq cmp ja xchg retq (bad) (bad) shr (bad) mov insb in jne movabs adc xor cs lods add iret mov lods pop push cmp rex.RX xchg sbb lods rex.WX cmp cltd xchg fsubs lods add jb (bad) rex.WRXB add subb rex.WRX stos xchg mov pop mov outsl sub mov test xchg ffree sahf int3 retq push rex.RB mov es adc out mov cli stos or stos jae testl in pop lods sbbl sub gs xchg test scas add rex.WRXB add int3 push js lods hlt xor mov mov xor (bad) xlat rex.R callq cmpb xor rex.RX scas cmp lods rorb addr32 mov or or rex.RX rcrb mov lods imulb or mov jp jno mov sbb (bad) sahf shrl (bad) xchg xor xor (bad) sub jb jmpq scas repz scas (bad) cmp movslq push ja lods (bad) rorb sub stos sub imul scas incb fistp push shrl sub movabs rorl adc pop insl cltd scas movslq scas nop int insb mov ror lods (bad) orl (bad) iret mov lods testl data16 mov mov je (bad) sub leaveq sub lea sbb scas (bad) push ss (bad) rex.W mov sbb scas lock in in out xor cmp lods mov adc stos rex.RX (bad) adc (bad) mov loope cs adc lods sbb pop movabs int jge roll mov lods or rex.RXB sub cwtl xadd and jbe rex.WR (bad) (bad) cmc lods outsl jnp jrcxz rex.WX rex.WRB pop push sbb mulb (bad) mov jl xchg lods jle loopne hlt in cwtl scas jnp pop (bad) jne in pop (bad) (bad) lods pop mov jg rex.XB movabs je lods retq add lahf shl mov ffree lods rex.X xchg rcrl mov (bad) pop rex.B sbb (bad) mov movabs (bad) mov (bad) insb ja jmp (bad) in shrb movabs cld imul je loope int3 xchg (bad) lods pop rex.XB push out in mov rex.WRXB lods jmp cmp (bad) xor add test fwait (bad) xchg stos sub test (bad) lods (bad) fucom cmpl lods (bad) mov stos rcrb lods and (bad) pushq lods nop (bad) popfq jnp in lods xchg ds rex.WB xchg int test rcrl scas movb jmp jl adc push sbb ficoml (bad) push fnstsw rex.WXB rex.B lods callq xor cmp lods rex.R pushq jno rex.WRB repz seto lret (bad) lods insb jrcxz and ds lods mov lea cltd movsb (bad) movabs rex.RX or mov xchg mov mov rex.RX rex.XB scas mov in insb rex.RXB push mov addr32 movslq add lods mov jno cmp mov add (bad) (bad) stc shll lods imul (bad) movabs sbb movsb (bad) sub je jrcxz add scas (bad) out (bad) jno sbb jae lods mov (bad) (bad) lods out push rex.WX insb jae ja mov jge (bad) ds (bad) cmc fisttp xor callq sbb rex movabs (bad) clc (bad) (bad) add out cwtl lods add scas mov movabs (bad) lods imul popfq jmpq mov fdivrl jp mov repnz es rex.RB mov rex.R adc test shr cmp movabs or mov lods retq adc mov pop lods cli callq and mov mov xor out iret std (bad) clc and int (bad) sub test pop and cmp jne movsb or lods retq xor (bad) rex cmp movabs jp add jns jnp (bad) pop (bad) or int3 imul cmp or (bad) mov movabs sarb jb pop sbb scas pop in mov fisubr ja in add scas xchg sbb movslq mov mov jbe adc out jo cltd jnp fiadd pop xchg mov (bad) (bad) push lods callq mov xchg (bad) rex.WRB lods (bad) lea sub ror xchg or sbb (bad) mov and adc lods xor sub mov test and mov add fcompl in cmp stos (bad) cmc sbb std rex.WXB adc loope rex.WRX rex.WRXB fwait or (bad) pushq mov movsb repnz mov orl sub xor data16 sbb test lods vpsrld sti lods mov fs rex.RB sub jb mov push and retq nop pop pop (bad) or jne push imul lods popfq (bad) jp xor loopne flds lea sub (bad) and xor mov movabs jbe push lods mov xchg mov (bad) mov (bad) shrb ds in rex.WXB (bad) pushq mov (bad) fs fdiv sub sub xorl (bad) adc mov jns lods (bad) fldt imul (bad) xchg lods int enterq repz in mov jl jb (bad) xlat sub lods push rex.W jne lret lods xchg movabs retq sbb clc out cmp sbb mov shrb pop sub scas add cld and retq enterq xchg sti mov retq (bad) (bad) sub sub leaveq shrb fldenv (bad) imul mov pushfq rex.B mov retq cmp insb sti es int3 add mov (bad) mov pop (bad) lods jo or mov lret mov jg adc sbb mov rex.RXB rex.X lock xchg iret mov test (bad) in (bad) out cmp cltd cmp adc sub xchg cmpsl jbe and jne (bad) lods jns lret mov sbb pop lods fdivrl imull iret (bad) mov movabs (bad) mov mov stos push loope scas pop pushq (bad) lret movabs mov scas lods pop adc stc pop scas adc sub roll mov jo mov pop out (bad) mov lods movabs cs scas mov sbb out sahf lods push xchg sbb mov (bad) rex.B and (bad) retq movsl (bad) retq icebp je (bad) pop fnstenv (bad) cld jmpq test movsb xor retq xor hlt cmpsb fwait lods out cmp sbb xchg stc (bad) movsb ss mov lea lods rex.X outsb mov rex.WRX mov (bad) stos rex.RX (bad) (bad) imull cmp pop rex.WRB (bad) adc rex lea clc adcl and outsl mov cld stos adc loope rex.W xchg iret data16 jl mov retq mov imul pop out movsb nop cmp scas in lods (bad) xor pushq mov xchg test mov or stos (bad) fisttpll jae pop test (bad) add (bad) cmp sbb sbb rex.WRX mov (bad) rex.WX or pop lret xchg lods pop sub (bad) scas jge cltd push rex lea in and rex.WXB add sub scas mov (bad) jmp (bad) push fldcw sbb lret (bad) insl push sub adc lods sbbl fsubr cld sbb lods and retq adcl mov mov stc cmc cwtl mov movabs rex.WB rex.WRX adc mov andnps (bad) mov sbb push or shll cmc sub in lock mov add jp lods enterq movabs imul stos sub xchg scas je pop jo cmpsl movabs lods xchg adc xor (bad) mov sarl (bad) lods or pop retq push lods lock lods test hlt rex.WRXB rex.W loope or lahf mov ljmp xor mov add (bad) lods rex jns (bad) movslq mov out xchg mov mov mov repz lods loopne gs mov mov mov mov jrcxz sub addr32 sub lods (bad) rex.XB (bad) ror movabs jl xor jns jg mov adc repnz fs mov int3 outsb mov insl stos mov scas mov lods cmpsb leaveq cmp vpaddq xchg fisttpll adcb leaveq (bad) mov movabs (bad) jmp jge repnz (bad) rex.WRX callq movabs jp incl je mov sub mov (bad) xchg stc sub jge imul addr32 sbb mov leaveq (bad) sub out push lock xor sub push add hlt push in lods mov frstor jo or cld pop clc (bad) mov push xor pop mov mov and mov je shl push sbb (bad) (bad) movabs imul lods or (bad) xor lods lret test mov mov (bad) (bad) push outsl adcb push and addl adc pop retq (bad) callq rex.XB or gs cmpsb movabs add sub add (bad) xorl nop and (bad) enterq movabs or imul nop sbb test xchg (bad) or gs es shlb add add jnp xchg adc gs lods mov (bad) xchg (bad) sub jg sti add stc lods xor (bad) retq lock rcrl and mov jg out outsl mov movslq lods rorb movsl cs sbb repnz add test rex.WRX (bad) (bad) (bad) (bad) sbb sub mov insb sahf rex.B rex.WXB lahf test push cmpsb scas insb (bad) (bad) cltd stos mov xchg cmp movabs jle (bad) rex.WX jbe jo lret cltd stos xor pop adc ds mov sbb cltd mov movabs pop outsb lods and fidivr movabs movslq mov mov or movabs rex.WXB sub pop jo mov movabs and (bad) stos retq stos retq popfq nop data16 (bad) mov xor cmpsb js mov sbb pop sbb lods sbb outsb mull mov fcompl add outsl (bad) pushfq xchg (bad) and rex in lods std setns and push rex.R fwait popfq sub add push (bad) or (bad) shrb in (bad) imulb cmc scas rcr jnp lods rex.R push and adc mov sub idivl shrl movabs pmulhuw mov subl xor loopne rorl fwait rorb pushq (bad) (bad) sub sbb data16 rex.B mov jl jns sbb xchg lods cmpsb lret (bad) rex.X prefetchnta (bad) stos fsubrs rex.RX xchg in (bad) jns (bad) scas lret mov mov cmc mov lods rex.WX push loop lods mov sbb idivl ja push (bad) data16 mov movabs imull xor xchg lret xor or xor xchg sbb shll pop xchg lods (bad) cmp movabs sub pop mov movabs xor lods jbe scas iret rex mov (bad) add rex.RXB rex.WXB cli (bad) movsl repz stos out in and lods iret test cltd xchg rex.WRXB jmp sarb lods rex.WR (bad) cmp (bad) jp (bad) xchg mov adc mov pushq es lods mov insl sub mov ror (bad) lods xchg mov repz cmc scas (bad) fsubp pushq and mov fldt mov incl mov lods mull retq pop outsb push rex.RX adc (bad) rex.WXB (bad) repz (bad) shlb mov push xor rex.WXB lods pushfq setne es lods cmc xlat mov movabs mov fsts add add mov fs rex.XB rex.WB repz sub movabs fwait xor pop mov mov adcl and stc add scas mov lods rex.WX (bad) (bad) cmp shl (bad) leaveq movslq lea repnz (bad) sbb add movabs cld rex.W mov (bad) (bad) je int3 rex.R cmp lret rex.R push (bad) add or ror pop pop mov insl (bad) lods (bad) jmp loope mov or rex.W cmp jmp scas mov xchg repnz movslq movabs lahf loopne jle lret scas mov retq leaveq (bad) fcoms in (bad) or lods add (bad) mov ds mov (bad) (bad) lods (bad) sbb fdivs iret xchg lods rex.WXB retq (bad) js jnp fcmovne (bad) and outsl (bad) (bad) lods (bad) cli jmp or lods lcall mov sub divb xor sbb xor imul int rex.B rcl or es add xchg mov lods std callq enterq jrcxz lods jmpq imul mov in pop in imul or fwait rex.XB (bad) (bad) (bad) pop pop xor jp mov (bad) (bad) cwtd lods rex.WR rex.RXB lahf mov lret int jo test xor mov cltd add insl sbb mov (bad) stos lahf sub nop sbb movabs movabs (bad) (bad) gs lret (bad) cmp (bad) jmpq sbb lods jno add mov xor sub pushq int3 mov jo imulb adc (bad) cli jb scas mov rex.RX pop or fs (bad) sub push and addw lods jmpq adc rex.RX shl stos js and jo xchg (bad) rex.WR ds movabs and imul or xchg lret cmc lods cmp out (bad) mov sub in (bad) fnstenv or pop insl jl lods mov (bad) xchg retq xor rex.B add outsb (bad) repnz xor int3 lods stos imul sbb mov insb shl sub stos sub jle (bad) fdivl divl sub xor (bad) (bad) sahf movabs fwait (bad) and mov ficomp std or (bad) icebp mov lods jge and pushq add (bad) mov cmp lods outsb mov repz fnstcw and xchg lods rorb orl cmp addr32 push xor push loopne pop stos out jl movabs out scas cmp rex.RX jp outsl xor fldcw lods mov adcl or and (bad) xor rex.WRXB mov jno cmp mov pop rex (bad) retq and pushfq lods retq jg callq mov cmp lods jl mov pop movabs out jl pop subl int3 jnp data16 loope xchg pushfq sub sub scas pop lods xchg fsubrl leaveq xchg jne stos movabs mov repnz adc cmp lahf sub push leaveq jmp jo lods rex.B rex.WRB and (bad) and (bad) push rex.WRB ss xchg rcrb sub and mov repz xchg jl sahf sti imul rex.WXB repz out (bad) rex.WB rcrb push addb (bad) in insl xchg fidivl lods mov (bad) mov sub pop sbb or (bad) mov xchg mov xchg sbb jmpq int cmp retq outsl jl lods and jae outsl lods sbb movabs and mov mov adc add mov mov cmp cmpsb and repnz rex.R (bad) sbb outsl jg rex.WXB lods lret (bad) (bad) rex.WR (bad) mov and orl push scas and fs (bad) (bad) lods imul mov rex.WB cs in xor cwtl mov iret in fdivrl rex.X cli jge fiadd jo movabs (bad) pop and push je mov in jno movabs icebp lods mov lahf and jae (bad) lods hlt (bad) (bad) std jrcxz scas iret (bad) nop out xchg fidivl (bad) jno adc mov lret out add (bad) push fildl scas movsl rorl adc rex.R xor add mov pop (bad) icebp insb and lods mov cmpsl (bad) std mov sub pop rex.W rex.WRXB loopne pop pop mov lods lret sub lods mov data16 in mov mov mov lods mov fs (bad) popfq lea int cmp sub (bad) pushfq insl sub (bad) rex.WXB movslq mov mov jmpq sahf xchg idivl rex.RB sub lret mov test mov mov (bad) (bad) sbb lods loope rex.X mov mov or in jno or mov add mov lods es xchg (bad) lods pop pushq insl lea pushfq rorb mov lods xchg movsl jbe jo data16 (bad) testl shr mov xor (bad) (bad) fnsave jle mov sub je leaveq mov in rex.W sbb add and mov (bad) adcl retq rex.WB mov xchg fadds sub jns lods jnp adc (bad) lods (bad) out cli roll push xchg ja (bad) in movslq decl adc rex.RX sbb loope mov jbe test add sub fdivrl xchg (bad) jo xchg test movabs in rex.WRX (bad) fdivrl lods rex.X xchg mov rex.R nop (bad) xchg mov fwait retq sahf mov adc sub loop xchg mov lock (bad) push mov add (bad) cli xor push imul xacquire (bad) imull rex.WXB sti cmp (bad) or frstor jl pop cld push (bad) and lods fidivrl js mov loopne (bad) lods in (bad) mov sbb pop xor cmp sub fidivr pop in lods cli rolb ss movabs in lods xchg lock rex.X jae std lods cmp rcrl int3 mov rex.WRXB (bad) rex.WRX cmp callq cmp rex.XB push stos lahf (bad) push rex.RX fcomip shrl rex.W (bad) ss repz retq lea (bad) movsl lods imul mov cwtl (bad) stc lods and sub fistpl test mov xor int mov (bad) (bad) out sbb cmc xor mov (bad) scas add xchg in sbb and sbb test movsb sub cli (bad) fwait loopel mov cmp movswl sbb sti rex.R and fs loopne fldcw sbb lods adc (bad) (bad) cwtl or (bad) push mov rex.X xchg loop movabs push fmuls pop or fwait stos cmc and hlt mov xor fstps pop in retq add cmp add idiv mov push movsl stos mov sarb pop outsl adc pop push rex.R lods pop mov loopne scas cltd loope (bad) pop insb in cmovge movsb ficompl jno add lods callq cs rcll retq and (bad) lock loope ljmp sub out (bad) ds xor mov jg lods enterq cmp add lret movabs sub rex.WR ss adc push rex.RB (bad) pop sub sub sbb rex.X lock sub xchg and (bad) cltd sbb (bad) enterq loop lods jo in pop (bad) lods (bad) movabs rex cmp rex.WRX lods xor rex.WXB jle lods sub sub movabs lret jle (bad) mov mov adc scas fs (bad) movabs jo rex.WRX (bad) (bad) int3 xor lods push (bad) push movsl jrcxz cli sub pop outsl out push faddp mov in mov jmp outsb mov push mov sub lods cmp push pop add adc jne retq mov in mov sbb add retq lods or (bad) callq fidiv cmp and jmp stos cmpsb and add mov cmc fidiv lods mov scas lods mov insb out lods fbstp (bad) jne rolb test repnz sub xor (bad) lods push xchg retq xchg xchg outsb jge lods (bad) popfq (bad) or clc mov lods jg movabs (bad) movsl in (bad) loope cmp (bad) (bad) sti jrcxz movabs mov xor (bad) lods cmpsb lret rex enterq (bad) sbb (bad) mov jrcxz rex.X mov fs in in xchg jle xchg or out xor ds lods add or adc lods (bad) scas (bad) jo and rex.RXB sub sub loopne or scas sub sbb jrcxz outsb lods rex.WRXB jb movsl movslq jl mov imul out mov and xchg jl rex.WRXB lret pop mov xchg subl add roll fbld in (bad) mov rex.WXB pop jmpq je retq scas mov scas lea fyl2xp1 movslq movabs xor scas lods mov cmp cmp test lods xlat lret je (bad) mov add add or movabs cmpsl xchg mov (bad) rex.WRXB rex fadds jo xadd adc mov xchg lods jae mov sub out rex cmp mov jge (bad) loopne outsb es push cmc in or lret test jge xchg scas orw int retq in rex.WRXB and xchg imul rex.W fsubr adc and mov (bad) sbb int3 movabs cli rcrb insb and incl xchg jle scas (bad) int pop adc rex.R movabs cmp roll es imul out cmp push sub xlat xor lods xchg in callq (bad) mov stos xor rcrl xchg insb rex.WRX testl or mov (bad) push pushfq int3 (bad) or or rex.XB sbb and and sub cwtl lods rex.R jae callq lods rex.WRX rex.X push cmp repz sub mov fadds (bad) popfq adc cmc js cmp jns (bad) jrcxz rex fwait push jmpq lods andb out (bad) insl (bad) mov (bad) push fwait scas out xchg test fadd je outsl clc movabs (bad) mov lods (bad) movabs add icebp rex.XB cwtl test in sbb lods orl adc lods rex.WR pop jp mov fisubrl adc jg imul push lods rex.WRXB rex sub or mov sub push pushq loopne repz (bad) xacquire (bad) (bad) retq fwait scas callq test and scas (bad) cld (bad) test jg rex.X push mov and (bad) sbb mov movabs addb (bad) and and jno repnz xor (bad) and rex.RXB fwait mov lods (bad) (bad) stos lahf pop vpminsw shlb sub sub lods fnstenv (bad) lock rex.R in sub (bad) sbb sbb test cs hlt xor je popfq xor (bad) (bad) (bad) mov jne (bad) cli or notl int fbstp (bad) test (bad) hlt pop stos rex.XB adc and rex.WXB retq ds test (bad) jae fldcw xlat sub sbb pop test scas scas movabs mov lods rex.WRXB lahf (bad) jae stos lods xchg (bad) (bad) add cmpsl sub iret imul xor pop or rex.R sbb push adc in lods int3 (bad) repz jo rex scas (bad) jmpq stos and outsb lods pushq (bad) pop scas lods mov (bad) pop cmpsl pop mov mov rex.XB mov loopne (bad) (bad) cmp iret outsl movabs rex.RXB adcl movslq lods lods push cmp mov (bad) insl or outsb lock sarl sub out lods outsl jle pop (bad) xor xchg sbb (bad) pushq rex.WR outsb xchg push cmp imul movabs sbb lods imul cmpsl cmp (bad) or fcomp jl fwait shll sti (bad) and pushfq rol and movabs retq iret and mov (bad) (bad) icebp mov enterq imul and (bad) jmpq rex.X sub js rex.WB sbb pushq pop xchg pop add shrl cmp movabs paddb in xchg movslq push loopne retq cmp mov jno scas lods movsb sub pop (bad) jge adc rex.WXB adc (bad) nop mov insb stc lods movsb rex.X pop lods mov mov jo mov pushq movabs adc rex.WR adc imul xor rex.WRXB out cmp pop jae hlt rorl cli lods sbb cmp add mov jge (bad) lods fiadd sub pop cmp out lods loop mov rex.RB rex.WR lods fdivs std outsb sti and push or xchg fsubrl xor push push ss movl (bad) jg fwait (bad) push in xorl (bad) scas mov xor pop in int fmuls mov cmp (bad) mov and jns cs retq (bad) rex.WRXB stos adc (bad) pop sub fistp rol loope int3 jo lods (bad) (bad) or lods xchg pop rcrl (bad) shl je cmpsl (bad) push fwait xchg mov callq rcrl and (bad) test or outsl jns sub xchg (bad) imulb mov mov mov fwait callq mov add insl lods mov lods fs rex.WRXB gs lods imul movabs data16 ss mov push sub rex xor rex.WRB insb (bad) (bad) cmp movabs scas cmp xor int in fcompl add retq cld loop lods and fcomp ficomp out rex.WRB fwait (bad) lods mov movsb (bad) push sub jmpq outsb (bad) mov cli mov sarb retq test (bad) xchg loopne (bad) lahf rex push js lret lods jle mov lods hlt mov sbb (bad) (bad) push lods out mov (bad) scas push mov jno mov sbb lods sbb jae xlat shrd rex rorl cmpsl loop (bad) (bad) hlt (bad) mov retq jne rex.X insb shrb lods out jae adc stos sahf (bad) (bad) jl (bad) mov (bad) imul lret pop scas jb ffree rcll (bad) (bad) xchg js pushq lods popfq or loope mov sub jge imul mov add xchg sbb rex mov and mov sahf lods (bad) xlat add movsb jmp (bad) lods (bad) (bad) subl iretq psllq jle xor mov mov jrcxz int3 js xchg popfq rex.R rex.WXB (bad) lods adc and mov jno sub (bad) jo lods out rex.WRB sub cmp gs test hlt sub xor rex.WR out addb xor cmp in movabs jmp lods (bad) movabs (bad) lods loop add pop cmp (bad) ljmp subb scas (bad) lods add leaveq out add rex.XB xchg and rex.XB add fcmovb pushfq paddw jns movabs pop ss xchg lods rex.R rex.WRX mov adc (bad) scas pop fnstsw rex.WRX movslq loope (bad) cmc in jp jnp imul mov scas rcrl in lods retq hlt push xlat (bad) xchg rex sbb (bad) sbb scas (bad) rex.WRB sub push add jge (bad) scas jne xchg or mov jmpq cmpsl sahf xchg push (bad) sbb mov and xlat (bad) shlb lods sub and movabs rex.XB cmc shr lods and sub in lods (bad) sub jb (bad) jne lods repnz xchg je rex.WX mov movabs iret lods jl jo movabs lods (bad) in mov notb sbb jmp andb movabs lods repnz cltd sbb sub cmp sub lret or and mov (bad) rex.B sub add jge pop imul xchg rex.XB xor scas fidivl outsb sub mov (bad) sbb lods mov out mov fwait (bad) movsl stos mov scas jae insb jno in cmc mov cmp movabs xor sub jle mov in out pushfq test lods out ja add rex.R jns sub (bad) sbb or fildll fsubrl hlt movslq xlat rol outsb xor loop lahf lods mov mov (bad) sub pop mov negl xlat lret retq cwtl out jne rex movb scas (bad) es cmpsl or movsb icebp (bad) or (bad) mov rcr jl sub vmovupd mov decl cmp rorb (bad) jo cmpsb lret rex.WRB xchg sub jns cs cmpsl movsl mov or jae movabs sarb mov or cmp mov lods pop add jl xchg push (bad) ja (bad) mov fmull cmp (bad) pop jb icebp rex.RXB enterq addr32 stos repz pop cs (bad) xchg and pop (bad) scas adc add test add fstpt sub lret (bad) mov clc in xchg (bad) es in leaveq mov lods add test rex.RX loop (bad) mov in pop add mov nop insl mov adc (bad) movabs or mov stos movabs mov mov (bad) cli mov jne (bad) movsb stc nop gs mov add push and rex.RB and pushfq lea mov pop (bad) (bad) pop lods sbb cwtl (bad) jbe ror lods leaveq loop clc or movslq movsb mov imull test ja lods pop stos xchg in scas add pushfq insb jmp xor mov lahf out mov jne movl movabs jb xchg lods je test sahf jle movabs rex.WX mov addb (bad) lods pushq imul sub ror (bad) or scas lods jne movsl popfq mov scas pop jno xor push mov retq or scas sub add jl test sbb cmp lods je and (bad) test pop lods adc mov lods sbb fidivr (bad) push (bad) out jmp test or jrcxz fdivl movabs retq jl in je imul rex.RX (bad) mov and and or lods mov js in cmp subl adc lods push mov (bad) scas jae sub in loope mov cmp test roll (bad) movd mov fstps test (bad) in (bad) fsubrl and jne (bad) (bad) stos rex.WXB shrb and push fimull push movabs addl iret cmp insb mov jp lods push push (bad) xchg sub out ja rex.WRXB lock imulb jg lods divl (bad) shrb addr32 rex.RB movabs (bad) sub shl sub addr32 (bad) (bad) enterq jbe cmpsl lods popfq xchg lock mov insl adc (bad) pop (bad) (bad) and and fs sub (bad) lods rex.RX orl push in adc xlat lea in mov add scas rex.WRX xchg and jno and je inc orl rorb in rex.XB jg fcompl outsl rex.R cld xchg fsubrp pushq push mov add rex.RX movntps jae xor out pop mov (bad) (bad) jle lods or mov retq (bad) mov xor pop lods lret leaveq callq adc xchg and stc (bad) mov lret lods mov (bad) or (bad) adc (bad) lods mov imull in or gs rex.R outsb xchg push mull testb rex.RX pop and lods (bad) movabs movabs sub push (bad) (bad) lods and stos iret mov or or pop xor mov fmul xchg sbb insb lahf rex.RB scas fwait hlt add and lods sub cld cmp (bad) test adc sub xchg mov lods rorl xor sahf add movsb pushq lods outsb or pushq xchg lods xchg add xlat movsb lods rcrl (bad) push sub mov push loopne lahf xchg jo mov xor (bad) (bad) (bad) (bad) lods adc xchg jns rex.WX (bad) in leaveq mov and jmp xchg sub rex.X sub and adc movslq cld test xor or sbb adc pushfq jae adc scas adc or lods outsl mov fwait scas xchg rorb sub xor sbb (bad) sbb mov ja add sbb orl imul in (bad) mov (bad) mov sbb ds xor (bad) lret callq sbb or rex.WRXB and movabs fwait jnp mov clc sbb retq mov insl sub lods movabs rex.XB rex.R cmp leaveq mov mov lods callq pop popfq mov in and mov jae (bad) mov cmpsb (bad) jl push lods test or pop cld out sbb sbbl xchg out jmp scas insb sbbl scas sub xchg mov push jrcxz js clc ds and mov jno shlb (bad) lret or test lods (bad) sbb (bad) lods xor sti (bad) mov insb adc adc int3 test mov sahf pop (bad) sub and lods retq xchg mov (bad) jo rex.R (bad) jbe (bad) (bad) and roll mov in (bad) lods (bad) pushq (bad) movsl int mov cmp jnp cmpsl scas outsl xchg fild (bad) data16 gs test and test (bad) cltd or sub (bad) nop push sbb add movsb cld and (bad) jbe ror hlt and lea xor (bad) mov std out lods repnz add test lods mov xchg mov insl rex.RXB jno mov mov andb rex.R lret mov iret or stos (bad) cmp rex.XB nop shrb mov cmp gs frstor lods incb sbb test jb lret jae js push lods rex.B and imul fisubrl sbb (bad) (bad) sub (bad) fsubrl add rex.R fs retq lods xor stos (bad) lods add xchg in rcll jnp jo push lods shrb lods sub pop fldcw add imul loopne sub xchg xor cmc std lods fiadd clc rex.WRB stos cs rex.B mov int (bad) rex.WXB cmp add (bad) push adcb cld gs pop mov scas sub push (bad) addr32 mov repz rex.WRX jg gs incb out push (bad) adc (bad) (bad) sub jne pop add rex.B mov xchg scas (bad) scas fsubr fistpl movabs outsl adc stos mov sbb lods loop fidivrl stos xchg cmp jns and pop stos cmpb rex.RXB test or lods (bad) lahf sub cmp lods sbbl xor cmp addr32 movsl mov mov sub cs stos out mov sbb fdivr sub push or lods sbb sti push in subb jbe mov fadd fisubrl lods adc xchg test repz scas (bad) imul jae xchg and callq mov jns retq sahf xor lods jb (bad) add pop leaveq rcll idivl (bad) (bad) stos lods push (bad) (bad) lea adc xorb add movabs cmp add jmpq mov ffreep movslq add (bad) movsl jge (bad) lods jp paddb callq (bad) movabs (bad) jo (bad) lods pop in movslq lods test sub rex.WX clc mov movabs imul pop sbb movslq sub cmpsl (bad) (bad) jbe lods and rex.W ffreep (bad) iret jo out lods adc xchg mov push pop cwtl or lods pop addl (bad) divb in insl rex.RB jne (bad) add jno in (bad) jb jo in mov movabs jg xor cld rex.X fdivs out cltd mov insl lods imul mov jmp push cli mov cmp add (bad) in out lret xchg mov imul lods notl adc rex.XB je jno fsubrs test sub mov neg (bad) rex mov sub add pop subl cmp add rex.WR in lods (bad) mov lea xchg push rex lods rcr fs cwtl and or (bad) lods jno xor xor cmc rex.WR lret mov fimull xor lods (bad) mov in cltd mov test or mov lods rex.RX jle cmp movabs xchg ja add (bad) or mov mov in or mov rex.RXB and repz loop push rcl (bad) or out jmp iret shrb mov mov jo std mov in retq loopne icebp rex.WRXB outsl cmpb (bad) sub adc or xor lods movabs cwtl jno mov mov popfq add icebp rex.RX mov adc in (bad) adc lods pop loopne enterq rex.WRB scas clc cmp lods shrb iret hlt out sbb test lods mov adc lods rex.RB out mov imul fsubr lea mov or lods xchg fimul and (bad) cli and (bad) lock mov xchg xchg lea lock sub movsl (bad) retq imul mov mov movslq fisttpll cmp rex.WXB (bad) cmp xlat lret lods clc gs mov (bad) push lahf sbb add fcomp jnp icebp out lods clc cwtl or sub lods pop xchg rex fsubrp lods jle es movabs fs insl leaveq lods movsl cs or fidivr xchg stos xchg mov sub or mov sarl mov lods mov pop jge (bad) lods sbb insl jnp and subl sub movabs fwait and sahf test shrb cmp or loop (bad) add loope shrb jno pop sbb pop andb xor popfq lods jmpq jg (bad) lods adc in lods adc and and xchg outsb test ss pop sub fdivp adc lods xor andb jne clc lods and nop in lods xchg mov cmpsb int fisubl mov xchg jp jp lods mov push or stos imul push mov subb addr32 adc xor pop movslq and fdivs sub xchg pushq fldcw (bad) sbb lods rex.B adc (bad) stc lods add sbb cmp lret ds xor (bad) in adc (bad) (bad) (bad) rolb jae sub mov lods mov mov (bad) xor or push fs lods xor shr (bad) rex.RB and lods mov xor lods pop mov scas pushq rex.X fwait jb push lods sub (bad) orl pushq test popq lods cli rex.X (bad) rex.W add adc (bad) xchg stos mov xlat add lods (bad) (bad) mov rex.WB loopne insb push mov (bad) rex.WRB xlat sahf imul out (bad) xor sbb cli es (bad) or push scas lods adc xchg jmpq lods adc (bad) adc cmovle (bad) stc lret mov jp leaveq sbb sub xchg lods xchg icebp xchg cmpsl push out (bad) or movabs movsl je in adc adc mov or test iret jo rex xor (bad) push test fcmovnu imul jbe iret pop add cmc sarb (bad) adc rex.XB rex.W mov stos incb (bad) imul xlat mov in xchg jb shrl push iret out and add xchg clc lods lea or movsb lods xchg (bad) mov rex.WR lods shrw mov divl mov out add sbb scas xchg jg (bad) sub jrcxz lods (bad) outsl cs lods sbb (bad) mov repz mov jno lods add push sub outsb mov roll jge xchg ss pop loope jrcxz (bad) jbe rex.W cmp push outsb repz (bad) jmpq in insb xchg (bad) add fisubrl sub sbb cmp mov js sbb mov mov lods fsubl seto mov mov mov cs or adc jg sarb mov loope lods push (bad) cmp sub adc lahf es test gs repz lods add scas add jrcxz sahf shlb decl fsubrl out repnz std lret test es adc mov fcomps pop rex.XB lret or sbb (bad) in sbb jmp sub imul mov fildll rcll (bad) loopl xor fmull repz or (bad) (bad) rex.WXB sbb cmp cs (bad) sti in lods clc out (bad) xor test adcb (bad) pop add adc (bad) lods sarb (bad) and pushq or insl lret cmp (bad) jg test sub pop gs lahf fsub cmpsl mov pop in rex.XB dec (bad) push lods lock rex.WXB mov mov jno leaveq (bad) and or lods mov (bad) cs sub xor sub xchg rex.WX mov jnp leaveq js loope jo add scas push scas (bad) mov xor movabs out test ds idiv enterq push (bad) pop insl lods (bad) (bad) jmp in jl lods sub rex.WR (bad) (bad) lods (bad) jo repnz rex.WX (bad) mov jl pop cmp int3 lods cmp add xchg (bad) adc cmp jge clc retq gs (bad) (bad) or mov in out cld jge rolb lods cmp imul xchg sub mov pushfq xchg fstl (bad) jrcxz mov lods (bad) popfq movsl cmpl mov jmpq mov pop clc jmp sub repnz mov rex.WRB rex.WRXB (bad) add mov test mov rex.RX jge movsb xor stos nop test (bad) lret lock and cltd movabs xchg xchg xor lods mov (bad) movslq fmul cmc mov or jg (bad) mov pushq (bad) loopne mov jl testl push mov (bad) xor xchg test rex.RB sbb callq add jae mov mov pop mov lods notb lock sub mov jns sbb (bad) (bad) popfq jb jnp in in scas xor jg rex.W rex.B lock insb repnz or rex.XB cmp lods cmpsl pop xor xchg xor fldt rex.WRX rex.RB adc lea rex.RXB callq mov push xorl movabs sbb xchg lods addr32 jle push push fisubr and lods or rex xchg test adc mov leaveq rex.R lods rex.WXB mov lods jbe mov and or lods mov push jns mov (bad) adc mov fwait sub (bad) in pop cmpsl adc add in or movabs (bad) xor mov xor or xchg rex.R scas (bad) (bad) sbb mov adc jne sub (bad) mov (bad) adc iret mov lods lret mov push (bad) pop mov sub cmp adc (bad) (bad) in out xlat add movabs (bad) fs incl mov out pop or fbstp adc rex.WXB lods outsl xor mov push lods (bad) out mov sbb callq fsts fwait pop sub or xor imul lods and or lods sti adc clc movabs push or outsl retq pop jge rex.RX sbb rex.W pushq pop rex.X jge lods push imul mov stos (bad) (bad) jrcxz stos cmp scas movabs add sbb sub rex.WXB scas and out es outsl scas jge (bad) xor and fmulp lods test repz out jnp in lods sbb es stos hlt retq sub movsb sub rex.X imul jbe jl (bad) out insl (bad) (bad) lahf pop mov (bad) mov pushq rex.XB lea fist push (bad) lods or cmc add mov ds rex.RXB loope rep loopne stc or mov sarb out cmp or mov jnp loope xchg int sub lods (bad) cmpsl (bad) sbb movabs mov std movslq jmpq movabs stos lods lahf (bad) iret pop test rex.WXB mov (bad) adc adc js mov test pop mov adc lods sub sarl lods sub movabs movabs mov jns lods cwtl fild sub stos push sub movabs mov xor movabs sbb lods jbe mov rex.WRB movabs pop stos (bad) sub mov xchg out (bad) pushfq mov movslq stos fistp jrcxz rex.WRXB stos sub jl rorl test (bad) stos adc jle clc lods mov mov imul (bad) lods movsl xor lods andl lods pop retq pop mov adc add jmpq sub xchg (bad) lods lock rex.WRB callq jp int3 mov (bad) iret scas pushq rex.WR ds scas test scas push xor je (bad) or adc sbb rex.WR fwait xor movabs mull add (bad) stc rex.WXB test (bad) stos idiv test pop scas popfq shr lods (bad) pop imul icebp ja fsub movabs adc jne cmovnp fs ss jl (bad) (bad) clc and (bad) es movslq in movsb test pop outsl or lods xlat lea cmp xor (bad) cmc push mov pop mov cli sub vphaddbq xor insl (bad) movabs movsb fldt xchg loope insb clc mov xor (bad) lods sbb decl mov js movabs (bad) in jns lods xor (bad) (bad) sub mov stos rex.X mov repnz cmpsb cmp iret pushq (bad) int3 jo and (bad) sbb add lock sub stos cmp lods add (bad) (bad) mov loope lods push rex.RB add enterq mov cltd jno lods adc mov mov lods insb xorl xchg cmp or xchg xchg sub sahf cmp cmp nop mov (bad) add pop xchg or xor jp adcl and cli mov rorb movabs jrcxz lods imul shlb insb rex.WR popfq sub clc cmpsl pushq jg fld xor not (bad) sbb cltd lods (bad) push cmp (bad) int3 xor mov movabs (bad) jno outsb sub mov je clc iret xor imul (bad) pop (bad) test fnsave loope push or add pushq lahf lea xor loopne adc (bad) sub add mov orl xor (bad) rex.X fcompl callq ffree adc add add scas mov or push xor add (bad) and or mov rex.WB insb (bad) rex.WRB rex.RX sub popq stos rorl jae cld (bad) xlat mov icebp sub movabs lods cmp scas movslq lret outsl movabs (bad) int3 xor sbb add (bad) jo mov rex.XB mov in movabs pop test scas xor or sub push leaveq fisubr lods cmpsb testb lods int3 sbb cmp repz retq lods (bad) mov mov or or (bad) (bad) repz lods scas (bad) cmp addr32 xchg sub fisttpll mov lods in jmpq jl rcrl mov retq lods test ss add std lods lea xlat add or and xchg lods in (bad) movslq mov lods adc icebp push rex.W scas (bad) xchg cmpsl sub iret subb pop pop test mov (bad) rex.X lods ss (bad) std in pop cmp (bad) xor mov add (bad) add lods push (bad) cwtl insb out mov or jmp loopne test rex.WR fwait rcrl vmptrld test adc int3 cmp movsl int mov xor sbb xchg sahf mov movl xor mov repz adc hlt retq rex.RXB sub enterq (bad) movabs fs lods pop adc movsb imul (bad) xchg add popfq mov rex.WB rex.W movsb hlt and lods xchg (bad) ss pop rex.WXB cmp (bad) push shrb jae jge cmp (bad) sub jl mov movabs push lods rex.RXB xor lods push rex.RX decl mov adc add or mov sub (bad) lods mov (bad) stos lahf add and sarb lods lret in rex.WXB (bad) (bad) subl test test lods and sti hlt add lods (bad) sbb lods cmp jrcxz cld xor shrl pop js and lods rex.WRXB rex.RX xchg loop mov and pop retq pop mov sub popfq orb out (bad) mov xchg mov lods jrcxz push or fnop and sub imul rex.R rex.WB push jmp out jae xchg and popfq movabs sub xor lods vxorps or (bad) adc add lods and push xchg jno int3 rex.WR sbb rex.WRXB hlt (bad) adc addr32 rol mov jnp push adc fisubr mov add scas rex.WB (bad) (bad) cmp cld leaveq lods (bad) enterq sbb and sbb retq mov or (bad) rex.XB fmuls xor lods retq add leaveq sbb rex.R rex.XB xor lods xor sbb (bad) movsb gs icebp (bad) jg lods fisub (bad) or rex.W pop push test push in mov pushq sub (bad) mov stos popq (bad) callq (bad) imul std xor rex.WR (bad) je movabs adc mov mov add xor (bad) clc rex.WB repnz add cmp push jg (bad) lods jne fmul mov cmpsl and pop retq rex.WX movb scas rex.RX (bad) cmc cli lods or jg pop lods test (bad) or jnp ds mov rex.WR (bad) (bad) cmc mov and mov pop rcll lock gs (bad) push add (bad) repnz sub (bad) in pushq movabs enterq mov cmp jno hlt and or xor xchg rex.R sti movslq mov jmp jge lea pushq insb mov mov mov or out rex.WR sarb mov mov stos jrcxz or mov and lods stos movabs sbb mov pop (bad) nop cltd retq pushq (bad) lods xchg repnz (bad) pop rex.XB (bad) mov sub xlat push out jbe int3 stos jne push jns stos (bad) movabs je (bad) repz scas pop (bad) adc xchg jrcxz mov jg sub es loop sahf stos (bad) cmp mov adc lods (bad) jge out cmp outsl and cld rex out sti jo fs scas xchg cmp sbb mov rex.R xor js mov jbe imul push add and outsl retq stos cmpsb loopne mov or stos and rex.WRX mov int outsb xchg push xor (bad) shrl lock imul rex rex.R in and fsubs lret icebp jrcxz jo or lods movabs push (bad) (bad) adc lods lods mov sbb stos mov je mov pushq repnz (bad) lods (bad) cld scas or fldcw std rex.RX add (bad) rex.W xor and xor rex.WRB fdivs push bnd mov (bad) (bad) add repz mov jl shlb rol int insl cmp insl rex.WRXB nop add (bad) pop imull subl (bad) push lods (bad) mov xor lods jae (bad) mov (bad) mov cmp cld scas mov cmp add push lods in lods cmp rex.WR shlb scas xchg movabs (bad) push (bad) lock pushq sbb out iret jrcxz lods imul jg adc pop (bad) mov mov retq adc test in mov sub mov jl jmp (bad) (bad) pop mov jnp push jg rcrb lods movabs cltd lods adc pop add and lock sub (bad) or rex.RX sahf jp retq insl mov pop or xorl and sub pop lods (bad) jae movabs jl adc in (bad) movabs shrl mov rex.X rex.WRX (bad) ljmp sbb out or mov mov jg (bad) mov insl (bad) (bad) cmpsb (bad) jbe stos mov lret lods js jle jo sahf (bad) stos mov in jp adc test xchg movsl sbb fisubrl or push scas xor mov (bad) mov lods rex.WRXB lret movabs lods int stos (bad) rex.WXB lods jo push (bad) rex.B (bad) test adc clc add hlt rex.WR jge movabs mov mov shrb rex.WX rorb std or sub jl (bad) (bad) sub mov icebp (bad) jl (bad) jae pop sub sti out jmp xor test test cmp lods rex.WRX adc mov comiss xlat sbb test or insl retq push jnp fsubrp fildl and jrcxz stos xchg lods or mov out xor xchg fwait popfq lods rex.X loopne add (bad) rcll jp lods push jge push rex.RB lods cmp mov mov hlt fsubs outsb jne icebp je cld int pushfq jbe test add in and imul leaveq std lods jp cmp incl (bad) jno cmpsl fldenv pop mov (bad) js lods fisubrl insb (bad) iret xchg rex.RB rorb movabs mov sbb fsubrl push in cmp lea pop (bad) (bad) lret xor rex.X mov (bad) xor jo (bad) cltd sbb mov retq (bad) xchg leaveq xchg (bad) clc test sbb sub mov fstps (bad) lods fisub movabs lods cltd movsl (bad) in or pop mov sub (bad) mov lods bnd mov mov lahf test (bad) lods (bad) movabs es callq movabs int lods lcall scas clc xchg pushfq movsl in lods rol jge shl cmp iret sbb rex.WXB and mov mov mov imul push or movabs scas (bad) mov mov scas nop (bad) push jae mov add imul (bad) mov cmpsb sahf cltd xchg mov sbb jle sub push in shrl xchg push lods jo jmp out mov lods jge pop and out add in mov jnp sub out loope jae imull rex.WRXB adc stos mov retq stos jbe jns pop sub and xchg lods and int mov fldt (bad) js mov pushq lods loope fsts adc enterq lods je (bad) hlt xor add retq xchg outsl jno movsl (bad) vpmulhuw sbb and ja test lods jb idivl fidivl rcrb adc jb (bad) mov (bad) rex.XB out test mov (bad) adc cltd js pop lods enterq data16 fsubrl (bad) (bad) (bad) lods jb (bad) sbb push out lods sbb out ds (bad) outsb mov sub jb add rex.WRX repz lods and (bad) (bad) rex.WRB sbb jb stos adc rex.WR test xlat xor test push ss movabs pop xor jl cs rex.WR int3 xchg imul or mov cmp pop mov fnstsw (bad) nop add imul rex.WB add cmp lea xor sbb js test retq mov or lods (bad) in fistpll adc lods cltd lods xor xchg fwait mov lods rex.RB movsb loope pop movabs push fsub or js (bad) xor lods jg jae push mov icebp (bad) (bad) adc rex.WR fstl enterq (bad) stc outsl fsubrs lock lret xchg in rex.RX stos out jmp clc sub (bad) lods jle cwtl subl mov jg stos jmpq jbe lods adc xor stos adc clc or mov (bad) mov pop lods fisubrl add jl movabs lret je xorb test hlt (bad) xor nop (bad) sbb rex.WRXB cmp lods pop rex.WXB scas mov pop scas push andl jl shrb hlt push sub adc outsb mov lods mov cmc (bad) lods scas test test mov pop scas clc (bad) rep rex.WRB lea add sub es ja (bad) lods fnstcw xchg lods (bad) (bad) je (bad) lret push repz lods mov sbb or xlat scas rex lock add movsb jb or rcrl xchg rex.WRX (bad) lods push ja push pushq repnz sub rex.XB mov mov pop sti movabs in xchg lods leaveq jo (bad) and mov push sub repnz cmpsl pop rex.WRXB mov mov xchg adcl (bad) lods xor push sub scas jo (bad) and punpckldq mov or jo (bad) lods add jrcxz adc mov mov mov cld adc mov mov cmp loope (bad) out es lret jno lock cmp sarb rex.RX mov out pushq rorb sbb fcomps movabs (bad) (bad) (bad) shrl pushq rex.B fs insb xchg and push rex.WXB xchg pop mov scas mov xor cli lods (bad) add pushq je outsl xchg stc std fsubrl out (bad) retq lods out jne (bad) ficoml scas repz sarl stos cli rex cld clc mov mov lods mov rex.X lods sti (bad) or je repz sub cld xchg mov push js enterq lods pop xchg icebp push (bad) scas lods cmp or pop stos mov sbb lahf sub (bad) movabs movabs lods (bad) mov cmpsl (bad) jns lods mov xor (bad) mov popq (bad) pushq xchg retq pop clc rex.WRB mov xor sbb rex.R rex.WXB (bad) cmp push fnstenv (bad) or sub pop popfq dec shr mov add pop (bad) repnz movabs mov sub lods retq test push mov lret mov jge xchg (bad) adc nop js (bad) sahf and test sbb enterq lods movabs int3 (bad) pop rex mov cmp fisttp test lods rex.XB (bad) (bad) xchg movabs sub out callq pushfq push sbb stos adc lods add and cmp xchg mov lret (bad) sbb (bad) pop (bad) movabs mov fidivrl lods bnd sub pop movabs repz out rex.R jge mov (bad) imul add add imul (bad) sbb lods cmp and cmp mov push xor sbb stos in (bad) fs lods jl (bad) mov sub cwtl push lods sbb jne add pushq jbe sub rex.X cmpl (bad) lock lods fs mov jae std rex.WRXB divb insb int3 rex.RB out sbb (bad) lods pushq (bad) (bad) movabs cmp sbb (bad) lret rex.WRB (bad) mov rex.RXB scas test jmpq jrcxz stc test lods (bad) and rex.R int3 or add movabs sub push stos (bad) je (bad) xchg lods lea and or movabs in cmp test adc cltd sahf (bad) (bad) mov retq xchg outsb movabs cmc lret sbb je movabs leaveq cmp adc iret enterq lods rex rex.WX (bad) cli mov xor jg movsb xor lret imul mov xor jle insb popq rex.WXB leaveq test std addr32 rex.B mov xlat pop rex.RXB (bad) loop mov (bad) roll cmp sub rex.XB rex.WRB sbb lods out stc fsubr clc rex rex.RX lods mov leaveq rex.WRXB (bad) xlat insb clc (bad) mov jns and roll movsb mov subl sahf push rex.W repnz jbe sub rorb es cmp (bad) rex.WX data16 sbb add cmp outsb add scas (bad) (bad) xchg jae callq or (bad) cmp add stc adc out fmull movabs outsl xor mov scas fisttpll add fcompl fsubrl mov repz or rex.W insl cmp lods (bad) roll repz popfq (bad) (bad) sahf mov rex.WX lcall (bad) add mov xor pushfq add int loop and jmpq outsl cld fs scas (bad) (bad) rex.WXB mov leaveq addl adc push rex.RXB and jne lods movabs hlt insb add pop push (bad) xchg (bad) int (bad) (bad) sub adc mov jo callq sbb adc cmpsl movabs pushq or cmp scas negl rex.RXB (bad) loope xchg pushq mov (bad) sbbb (bad) or lods (bad) int or sbb movabs (bad) stos rex.WB rcll cwtl movsb neg mov (bad) (bad) loopne or test es jg sub xchg lods movslq fisubrl sarb or or lods loop mov pop lods nop pushfq test stc push sahf pop mov xchg or jle rex.X in stos rorl or rex.WXB rex.W sbb ja cwtl lods (bad) retq sahf adc jno mov sbb insb and add cli sbb loopne test shl or scas in (bad) mov mov ss xchg lods jae add and lea xor rorb rex.WX movabs iret in and rex.RXB cmp and movabs scas fdivrs icebp mov jmpq iret lods mov fsubrp sbb lods mov jae cmc mov lods rclb in adc (bad) movsl pop (bad) scas (bad) sbb xor insb (bad) jbe test jl mov rex.RXB fidivl push cwtl in mov xor jle xor scas mov lock loope pop sbb lea insl mov xor popfq lret mov (bad) sahf mov jg and sub (bad) nop fcomps mov or scas xor mov pushq jbe (bad) jmp shll (bad) mov lods (bad) add mov lods sbb scas imul callq adc (bad) imul movabs or cmc push cmp mov int3 sar jae mov retq scas ja sub xor rex.RX rex.WX cmp sub pop (bad) adc orl stos in mov movabs lods xor (bad) sbb and sub incl (bad) fistpll xchg ds sahf movabs lods sub outsl mov movsb (bad) mov lods (bad) fsts mov xor paddd mov test (bad) (bad) stos stos retq pop (bad) cs and mov movabs rex.RXB mov movabs out jmpq fadd xor fstpt xor xchg popfq insb sbb (bad) clc sbb scas idiv lods fiadd lahf stos mov cltd lods pushq cmc rex.W push cmp je repz sub jl cs sti movabs data16 rex.RX rex.WXB jl pop orl lods in lods int (bad) sbb (bad) enterq adc sub jrcxz xor sbb mov mov jmpq in callq movabs movabs rex.XB or (bad) nop (bad) lods repz movabs in enterq shrb or pop lods add jge (bad) lods jg in std movabs loope lods adc (bad) mov rex.X or stc lods retq xor lods movsb and popfq int3 stos lahf (bad) movslq rex.WB cld ljmp movabs rex.WR shrd mov cmp imul (bad) shlb jb std (bad) cmc pop cld jle lods movsl in mov incb (bad) mov (bad) (bad) xor (bad) sub pushfq push rol lods in cmp xchg ror xchg add lret pop sub test test or push sub push retq loope rex.RXB add jns in rex.WRX (bad) retq cmp test ss out add sub insb rclb pushq or sbb jl,pt in movabs sub jae rorb lods sub in xor mov retq add add push vpandn mov mov rex.WRXB ss sub sbb cmp out push or push sbb or cmp lods and lods mov pushq shrl rex.X mov xchg out xor scas lcall cmp rex.RX cmp xor out test lods (bad) sub mov fwait out (bad) xchg and fs loop lret adc rex.WB jbe jnp pushq and lods mov pop retq insl (bad) icebp xchg lods jp (bad) (bad) outsb in adc mov cmp rex.WXB rex.WR jmp lods out in or jl jnp imull gs mov mov sti stos xor jne repnz scas gs and (bad) int3 lret sti lods (bad) (bad) pushfq mov rcrl or cmp adc and and (bad) jle mov stos jp lret test or retq test out cmp movabs fiadd es jne (bad) int3 lret rex.WB (bad) cmp add retq (bad) (bad) rex.WB rex.R (bad) jrcxz fwait jl lods pushq adc mov enterq and lods xchg scas adc pop shrb (bad) mov popfq lods cmp icebp movsb outsb push retq and lods jle,pt xor xlat push out (bad) fild xchg lods pushq rex.W gs imul add int3 and mov jo divb xchg gs jmp ss (bad) xchg jne,pn stos (bad) mov cs (bad) icebp (bad) sbb cmc stos cli pop and es (bad) out jl (bad) flds test lods (bad) lea mov pushfq retq add lods movabs ljmp add mov data16 push pushq scas rorb xlat rex.X sub and int3 mov sub scas mov divl lods nop jmpq sbb jb and add cmpsb sub retq (bad) or (bad) in scas xchg sbb or adc jp popfq sbb shrl hlt in sbb loopne or adc sti cli fwait (bad) imul mov cmp pushfq sub stc cld addb movabs add jne adc iret xor jg in mov mov fstl sub (bad) (bad) addl sbb negb lods (bad) movabs in test pushq adc add xchg test movabs addl mov lods mov mov outsl fsubrl test and xchg lods mov repz cmpsb lods lea rex.XB addr32 test and neg (bad) imul (bad) xchg hlt fsubp cmp xchg mov lods rex in fldl adc cmp adc add (bad) rex.WX clc leaveq (bad) movslq (bad) fdivl outsb jle lods (bad) mov gs pop test xor xor subl mov (bad) test (bad) sarb fmuls jmpq lods pushq notl (bad) movabs mov stos fiadd lret mov and xor (bad) andl or icebp (bad) lods vsubps scas mov (bad) jmp mov mov adc in movabs cli (bad) (bad) (bad) lock mov lods insl mov rex lods push mov mov mov jne out lret jnp callq (bad) lods jg xor add rex.XB fcmovb sbb lods imull leaveq popfq fisubr movabs rcrl mov nop cmp test pop (bad) js rex.RX (bad) xchg mov mov repz scas fisttpl shl out std fstp lods (bad) and fwait movsb cltd shll sahf (bad) fbld rcl rex.WRB push test out (bad) xchg fcmovbe (bad) rex.R rex.WR pushq ja test retq in and xor push je fisub test add cmp rcll xchg rex.XB or (bad) fnstcw int3 mov sub lods loopne mov lahf adc adc rolb rex.RX rex.XB mov retq or sbb fadds ffreep es addr32 cs rex.WRB adc movabs lock movabs lods adc sub mov data16 movsb mov sti scas js scas callq xchg scas (bad) rex.R lods in test cmp sbb sbb xlat cmp (bad) mov or sbb in pop insl jo pushq xrelease loop (bad) mov sub adc add sub jo lret ja clc insb lods pop add add mov rex.X cs sub lret data16 insb lods notb xor rex.WB xchg stos addr32 setbe in sbb jo lret imul retq rex.WRXB rex.B in pushfq iret sub test (bad) push leaveq (bad) mov sbb test jp loop icebp rex.WB rex.WRX (bad) insb push adc or imul xor jg rex.W or mov adc (bad) (bad) pop mov adc sub cmp cmc rex enterq imul out movsl cmpsb adc stos mov sub (bad) test lods jno adc sub repnz lods cmpsl js movsl test stos mov movabs sahf or (bad) sub sbb lods clc rex.WXB cld (bad) pop mov fldl (bad) or xchg sbb (bad) jl pushfq shrb xor addr32 (bad) pop mov (bad) stc leaveq or pushq jne jno mov add rex.WRB movsb jl xlat retq fadds clc lods (bad) cmc cmp pushq cmpsb leaveq scas (bad) js scas pop jge or jp iret adc jb jne test fsub push rex.WRXB leaveq lods (bad) lret jp and insb push andb loop adc movabs callq mov mov jmpq (bad) rex.R or scas (bad) adc in rclb pop or sbb xchg or xor cld pop leaveq (bad) or xchg lods add insl or lods ss icebp (bad) (bad) add stos jns jge pop scas lods add cmp movabs lods mov xlat stos out (bad) mov cmp (bad) pushfq jge vhsubps xchg gs movsb retq (bad) jns lods insb (bad) nop xor mov cli (bad) shrl in scas roll cld test sbbl sub movabs (bad) jnp lods xchg int (bad) (bad) pop retq xchg mov in (bad) (bad) and cld mov lods (bad) iret loopne rex.RB cs jmp in addr32 and sub sub xchg jge lods movsl push xchg test xor stos (bad) lods rol mov fildll mov rex.WX mov imul sti shrb mov xor sub repz (bad) out jge fimull lods out and lods leaveq (bad) mov xchg or adc mov (bad) (bad) int3 sbb push movsl mov add cmp adc xor lods rex.RXB mov movsb sub retq xchg jnp xchg rex.WRXB (bad) sub in rex.XB scas iret stc (bad) xchg callq xor lods movabs (bad) (bad) test pop movslq push pushfq imul out repz push idiv iret scas jg cmpsb fmul rex.XB rex.R (bad) imul jb rex.WXB mov repz cld or mov adc (bad) (bad) ja xchg movabs mov rex.XB mov (bad) scas cwtl iret movabs mov icebp jp mov lods jns pop (bad) sub sub jae (bad) lods (bad) rex.XB lods scas in (bad) mov add sub (bad) movslq lods iret cmp adc mov jno (bad) mov adc leaveq shlb (bad) lods and adc shrb fstps lods adc insb cmpsb cmp mov rex rex.W data16 pop (bad) nop std sti lods stc (bad) fmull or rol out xor rex.WRB rcl cli sub testb test (bad) (bad) mov (bad) and stos adc mov lods (bad) jp sbb xchg insl ja add (bad) hlt (bad) (bad) leaveq shl in mov or and or out pop pushq fdivrs fsubrl in mov movsb sahf lods test loopne,pn mov pop stos sbb xor sti or mov rcll insb lcall shr (bad) (bad) lods cld insb rex.RX fstpt mov xlat imull shlb frstor es sub and add loope test and out xchg adc rex.X movsl adc movabs xchg pop mov sbb rcll lods loopne rex.WRXB (bad) xor jl xchg lods (bad) mov addr32 imul sbb test jrcxz xlat fcoml jle (bad) outsl loop movsb movabs vpsubusb mov movabs add ja movabs (bad) pop cmp lods add (bad) fidiv add stos xchg or sub (bad) mov push addr32 lods sbb mov int rex.WB mov mov popfq and xchg mov (bad) lods or out rex.WRXB movsb lret outsl mov lods rex.RX or (bad) mov repnz (bad) sub sub push cmp leaveq loopne add cwtl fcoml rex.X mov rex.WB mov cld adc lods add jrcxz icebp (bad) test lods (bad) add cmp (bad) mov add int3 push cmp movslq xchg cmp (bad) lods gs add push xor mov adc (bad) mov (bad) lods insb push rex.RB adc xor (bad) callq mov cmp jl imul popfq lods insl rex.RX int in (bad) and xchg popfq pop add fild in popfq callq stos retq rex in or lods out lahf xchg rex.RB sub in (bad) lods out mov (bad) sahf ficom mov (bad) insb (bad) ficoml enterq callq mov imul iret mov fbstp (bad) int or mov lods fdivs nop out movabs js lods (bad) fs (bad) sbb rex.RB pop mov (bad) movabs lods rex.WXB rex.RX pushq stos lods mov ss push (bad) scas or lahf enterq mov jle mov scas xchg jo adc scas lods rolb lock pop and lods test mov callq xchg (bad) in jbe cs cmp jo sub leaveq jg movabs adc loopne lods rex.RXB cli or mov fldl lods retq lahf adc push sub scas pushq stos decb cli jo test or jo fildll mov iret lods cli push mov stos insl (bad) test test mov mov pop scas push push fcmovnb enterq or push jae es cmp (bad) mov pop gs loop sahf stos cld (bad) adc and ror sbb addr32 (bad) sbb push pop mov rex.X int3 (bad) rorl fadd (bad) clc rex.WRXB and data16 sti fistpl rorb cmp rex.RXB stos add adc cmp pushq (bad) movabs xor fcomps loopne lods jb jle or lods mov jae (bad) push rex.WR sarb sub and push fldcw cmp loopne lods movabs or pop leaveq (bad) fwait pop and sub sbb jmpq ja int3 stc add lods cwtl mov es ja or out movabs (bad) jb andl pop pop shrb sbb adc lahf idivl je xchg rex.B or mov (bad) adc repz and sub clc rcrl push pop out jle sub (bad) sub push repz sbb mov jg insl (bad) andq jnp xlat cmp movabs mov lods push (bad) fbstp sub jo adc (bad) sub lods es rex.WRB rex.WXB cs sahf lods jno fist and imul mov in pushfq (bad) out cmpl xchg test (bad) pop jmp or mov (bad) sbb bswap xchg popfq insb pop sub fdivrl sbb sarb push jb outsb lods (bad) xchg test out lods xor or lret add sub mov sub adc pop lods scas hlt jmp or xchg sub movabs rex.WRX pushq lods rcrl and lods rex.W and mov (bad) lods cmp rclb enterq and movabs ds rolb lods repz or stos push cltd rex.W es cld lret rex.WR scas decl add insl int popfq test push rex.R ss push stos int3 leaveq xchg jmp fsubrl cmp movabs pop insl xlat test movabs sub rex.WR xchg in rex.RX loopne add rex.X xchg jg lods test (bad) xchg jmp shrb insb (bad) rex.WR lods mov jb negl push test lret jge (bad) sbb sub rex.WR xchg and pop adc cwtl cmp jg imul rex.B pop retq lods pushq stos out lods mov idivl (bad) jnp lods and std movabs xchg scas pop pop add cmp roll lods and test insb and sahf js fsubrs addr32 in fdivl lret mov lods div rex.WX (bad) (bad) pop (bad) rex.WR push shrl xor or xor js pushq (bad) (bad) cmpsb shr retq in lods push xor or neg (bad) rex.RB (bad) int rol mov lods mov lock stos xlat test sub jne lods jbe add sbb rex.X push orl jno loop sarb lods loope movabs loopne (bad) retq cmp lods (bad) jbe mov stos xor jne (bad) cmp (bad) iret (bad) xchg out (bad) ja jle pushq in mov retq or negl cmp mov in add fldl and xor jp in adc in xchg cmc push imulb push add lods cmp roll or pop or (bad) adc cld sahf lods push cmp insl or imul xchg in sub js loopne outsb (bad) imul leaveq pushq in rex.RB scas jns sti adc je jle cmp cmpsl xchg (bad) lods sbb jl lods (bad) popfq retq pop rex.X icebp fisubrl movabs (bad) or lods jge jae stos mov fidivl jns mov xor (bad) add lods xor je rcrl xor cwtl (bad) movabs mov rex.W rex.WB rex.RXB notb sbb fbld cli movabs (bad) (bad) lods cwtl out and movsl ja sub adc lods mov rex.WRX xchg lods sub cmc push mov push stos cs outsl sbb enterq insl (bad) pop movabs rorl cmp and test lods lahf mov fadds adc cmp cld lods adc (bad) sub addr32 sub (bad) mov jnp test insl xchg mov sti (bad) repnz mov cmp test stos jl jmp lods (bad) outsl (bad) sbb (bad) scas lods iret decb scas out (bad) mov mov pmaxsw adc (bad) pop sub movslq cmp (bad) mov lods sti rex.X sbb mov pop stc orb (bad) jb mov adc loop (bad) imul sub lods jbe rex.WX and sbb loopne (bad) mov xchg in (bad) test push sub cmp mov (bad) int in (bad) (bad) sbb xchg add add sbb imulb ffree hlt mov rcrl fwait lods enterq cmp mov jrcxz pop mov cmpsl cwtl xchg mov adc or mov lock mov jge mov or rex.RX ss mov (bad) nop lods jmp rex.WR xor std adc sub movabs (bad) rex.B rex.X (bad) movsb retq mov callq je lock shll cwtl test or (bad) lods pop xor jnp movabs sbb stos and callq pop adc (bad) rex.RB add cmp and hlt and pop loope pushfq callq jmpq stos repnz shrl push push lods loop add add jbe (bad) shl mov in adc mov rex.WXB push jmp sbb insl xchg pop rex.X stos adc fsts popfq stos cmp sbb movabs sub sub movabs (bad) and test jmpq (bad) (bad) sti jno hlt add pushfq (bad) xchg mov insl add jge jg,pn retq pop mov pop (bad) mov sub (bad) jnp cltd cmpsb add (bad) loope push adc mov andb xchg mov rex.RB out fldt sub (bad) add (bad) mov out (bad) test mov rex.RX lret stos out add mov insb cld sub jo lea scas loop callq cs (bad) lods pop stc fdivrs jae (bad) sahf pop adc lods rol rex.XB push imul mov data16 loopne movabs mov xchg (bad) lods subb fisubrl mov lods mov movabs insb nop fs sub mov lock xor hlt adc in and (bad) loop leaveq adc in (bad) mov (bad) shr movabs xchg out jl lods and (bad) rex.WB fisubr (bad) cltd cmc adc or add mov mov xor (bad) fs sub stos mov leaveq jge lods rex.W jbe cli and mov (bad) scas ja xchg rex.W addr32 out lret orl ss loopne movsb jo and add and add lods fiadd mov mov (bad) outsl (bad) movabs (bad) es out vaddsd sbb xor (bad) repnz xlat stos and repz xorl (bad) movabs sbb fildll ror mov fmuls jp jrcxz iret rep outsb stos in and mov lods fucom sti (bad) (bad) xor lods lret out mov and movabs data16 icebp lods xchg jmpq cmp rex.WRXB (bad) xchg hlt xchg mov scas mov mov lods mov popfq movabs mov add movabs stos rex.WR rex.WRXB (bad) and out adc xor lods test xchg xchg movsl out sahf jmpq ss jl cmpsb movabs xor add or xchg out mov and sbb xchg insb mov adc insl mov jmp jo lods out mov loope enterq lods pop push ja mov push rex.RXB mov mov clc sbb pop jno (bad) idivb (bad) lret test sub sbb ja rex xchg insl lods cmpsl add (bad) popfq (bad) sub movabs (bad) fsts in fistl xor (bad) (bad) xchg lods scas iret rex.WRX rex.XB test jge jne je xor xchg lods add (bad) sbb (bad) adc and jle add cmp (bad) (bad) out insb jb cmp mov lods (bad) test loop push mov lods pop (bad) and hlt sbb jbe mov (bad) mov lea insb xor rex.WRXB (bad) pop callq (bad) enterq lods mov sub pushq callq jg (bad) hlt push lods leaveq fs rex.WRXB jno in clc imul test stos mov decl outsb mov (bad) sub in mov (bad) loope jbe movabs jae push add (bad) ss pop rorl (bad) movabs mov xchg popfq sbb xchg lods (bad) jns xchg jae pushfq (bad) lods mov or add lods or fistp lods mov scas jle push jne leaveq sub (bad) lods movabs rex.R fsubrs mov jge lods sti adc insb lods adc es rex.RXB mov repnz out pushq sub mov fidiv pop test fldcw xor loopne insb outsl gs out clc mov (bad) or fnstcw (bad) (bad) jge std mov jno mov movsl cmp jmp jge xchg int3 shlb mov test in fnstenv xor ror mov movabs lret (bad) mov push loope (bad) cwtl sti jge lods jbe mov clc jge jnp add cmpsb es mov std lods (bad) pop push mov mov mov fcmovu retq and (bad) sub xor mov adc lods rex rex.WRX and scas and rex.X rex.WX adc xor lods out movabs andl rolb mov mov lods sub fbld jge sbbl rex retq sub fisubr lods sub pushq adc jnp movabs jb lods rex.RX movabs and rex.R and lret in push in cmc shll sub out lret lods xchg sbb js rol or cltd test lods mov jmp adc lods iret cmpl mov (bad) lods add outsb (bad) stc sub test adc cwtl lods pop stos jl (bad) (bad) jge adcb or jno lods sbb std xlat jae add mov pop cmpl shrl adc or sbb jb,pn xor (bad) out lods jp (bad) cmp rex.WB jb fcoms movabs (bad) repnz (bad) sub lods lea mov std or rex.XB pop cmp mov enterq or rcrl shlb outsl sub in cwtl stc cltd xor (bad) roll mov (bad) rex.WRXB lods insb add adc sbb int mov sub lea scas mov insb mov lods cmp out mov mov (bad) lods sbb push cmpsb andl imul lods rex.WX adc add (bad) cmp lods (bad) xchg cmp std in rex.WXB add lahf lods jo mov outsl lods xchg scas (bad) fistpll movabs sbb lods (bad) add jb (bad) add lods retq mov jno or mov scas mov push lods mov adc mov js packuswb lods push lods rex.RB mov imul push lret push lea cmc add lods pop add xor sbb rex.R int3 shrl pop (bad) push imul xchg fisubr (bad) (bad) sbb add push imul adc jo rcrl (bad) andb xor pop (bad) mov or pop (bad) retq pop pushfq add pop mov mov (bad) imul jns lock movabs data16 scas imul (bad) xchg (bad) (bad) (bad) mov pop sarb rex.RX cmp imul idivl rex jne in imul jl xchg lods and cmp loopne or mov and rex.XB lods sarl (bad) sbb out cmp xor addr32 lods (bad) (bad) pop adc (bad) imul ljmp sbb ja push stos mov sbb cli mov jg adcb rex.B (bad) loopne (bad) fldt rex.WX adc mov (bad) mov rex.WXB mov lods fdivl mov (bad) xchg negb insl (bad) lods mov imul (bad) imul retq rex.WRX in repnz cld movabs in lods ds clc rex.WRB push shrb jno jae (bad) mov and sti pop xor leaveq movabs (bad) sbb stc scas lods lret (bad) mov lock test subw pop (bad) adc rex.RB paddb lea lock sbb jb mov shrl or out test lods insl or cli pushq subl fs sub or insb sub xchg mov movsb (bad) vshufps (bad) js or mov sahf adc cmpsl sti fcompl adc xor jmp pop icebp scas pop loop (bad) mov or adc (bad) xor rorb je rex.XB outsl movslq je lods mov add (bad) cltd and lahf mov movabs movabs rex.WRX sub jrcxz fcomp stos (bad) lods cwtl xchg movslq pop xor jp sbb stos stos cmp mov gs (bad) sahf (bad) jmpq imul fsts out mov test test pushq scas sbb scas or in (bad) idivb lods in movabs jge mov mov xchg jo lods js stos xchg mov adc (bad) mov loopne lods clc xor rex.X in or sub jp (bad) mov mov lods imul rex.WRB rex.WXB fs lods mov je cmpsl adc push cmp sti popfq rex.X and lods repnz cmp fldenv mov rex.RX rex.WR add (bad) lods pop sbb int pop mov lods rex.WB gs or rex.WRB and (bad) jmpq lods cltd or (bad) or notl adc int3 popq mov sbb cwtl mov or shlb int addr32 enterq pushfq sahf sbb ja and add callq lods (bad) insb fs (bad) pop ss addl jl lods popfq (bad) pop pop decl fisubrl stos test or (bad) sub clc cld (bad) stos xor (bad) add jns lods in adc xchg xor or xor jns movl sbb addl sti mov pop (bad) mov mov cli movsl cmp mov (bad) hlt (bad) mov (bad) callq movsb pop outsl pushfq imulb hlt rex.WR rex.RX xor mov cltd pushq movsl fstpl scas jmpq sub lock scas shll in sub (bad) in lods push adc icebp jmpq (bad) add (bad) (bad) (bad) in shll or mov (bad) jno mov out xlat in mov (bad) sub and lods enterq lea (bad) cmp mov lock stc (bad) fcoml (bad) fldt test (bad) pushq mov sbb ss gs lods (bad) mov mov test sub xchg sub sbb sub (bad) in enterq lock fwait lods stc jmp (bad) jbe jl sbb ja rex.WRXB xor jo sub xlat and lret (bad) lods or push cmp cltd lods sub xchg add jno nop rex.XB (bad) adc movabs (bad) mov (bad) mov retq cmp jl mov cmp add jmp gs rex.X or rex.RXB mov mov test adc lea push jl push mov or cmp jno stos enterq test xor push cmp lods (bad) sahf js adc (bad) jg push cmc (bad) push pop (bad) retq xor and sub fildll add divb loope (bad) or fbstp cmpxchg addr32 movabs fcmovb lods xchg mov mov or jns (bad) xor je sbb test mov gs xor jns cmp xchg lods rcll imul (bad) fisubrl pop adc (bad) pop imul (bad) enterq xchg lods lods adc jnp (bad) and or adcl mov movabs bsf loopne test (bad) leaveq test (bad) rex.WB (bad) (bad) mov retq movabs cmp pop jle (bad) mov retq rex.RB rex.WRX mov movabs (bad) cmc adc nop stos xchg movsb pop out mov jo lods rex.WRXB rex.WB cmpsb test mov cmp (bad) cmp mov xor pushq add sarb test (bad) cli sub adc and subl mov fimull fildl stos sti lea movabs xchg push (bad) pop fsubs (bad) lods rcrl jno (bad) push adc movslq cld js shrb ss (bad) cmpb rex.WR (bad) gs insb xchg fnsave lods fdiv pop (bad) sarb outsb insb cs or scas callq jae (bad) sub sbb jns in roll pop lods cmp mov and xchg (bad) jmp lods (bad) mov add mov mov (bad) fsubrs outsb movabs retq sub xchg retq xor add cld sarl xor add (bad) std (bad) retq sbb out lods rex.WB mov jle imul adc mov lods stc lret (bad) push ss rex.WR or jb sub sahf movabs rex.WR outsb (bad) stc lods test mov int3 xchg rex.B xchg jl outsl pushq adc mov ds mov insl rex.X movabs mov jbe cmp rex.R lods fldcw sub movabs out imul (bad) shll sub fisub pop (bad) mov and loopne sub (bad) rex.WR (bad) (bad) lods fildll or jg lods (bad) rex.WX rclb stos movabs in xor mov ja lods (bad) lret notl fisubrl adc cs (bad) cmp sub mov leaveq rex.WRB (bad) (bad) lods insb (bad) sahf jmp lods fistpll stc sub sub lods (bad) sub push rex.WRXB lods jge shl in (bad) clc (bad) (bad) mov sub sahf sbb in xchg imul repz pop (bad) xor rex.B lods movabs lahf mov xchg flds push loopne adc jg js out adcl or sub cltd (bad) in pop add lods rorb or pushq mov mov addb (bad) push clc xchg (bad) (bad) pushfq mov mov lods or lods mov (bad) (bad) movslq jae pop test hlt (bad) and mov push (bad) addr32 popfq (bad) mov cwtl pop retq xchg rex.RXB xchg repz insb movslq andl loopne lods or (bad) (bad) cwtl movabs add push es outsl (bad) clc imul rex.R rex.WRXB mov jl out rolb rex.WRX cmp and rex.WR mov scas int3 pop test push in (bad) jmp cld lods cmp pushfq js mov rex.X add sbb (bad) nop addb stc lods hlt cli mov push movsb mov rex.WRXB movabs sbb mov (bad) test movsb mov in callq jo fdivrs (bad) loop subl jns pop icebp movabs cld sbb rex.X sbb push (bad) pop lea add sti mov mov decl lret in js jp test pop jmpq and sbb adc sub iret lods push mov mov (bad) cmp je mov js notl (bad) fsubr stos je jge fstl scas out js in jns cwtl pop xor rex.X adc (bad) clc lahf push jge pushfq mov (bad) (bad) jmpq cltd shrb or cmp rex.WR movabs (bad) scas adc rex.WXB sti retq push and sbb stos push pop (bad) insl flds in lret out outsl sbb (bad) mov (bad) push lods jmp rex.RB divb leaveq push (bad) idiv lods sahf jg movsl rex.RXB adc mov data16 add shrb mov push lods xchg clc add repz xor insb test in mov insl lret sbbl decl rex.WRXB repnz sub jle mov sub (bad) ja repnz mov loope or mov lods mov pop (bad) fdivs repnz jns movabs (bad) outsb in stos (bad) (bad) add jb mov rex.B mov mov fnstenv sbb adc enterq rex.RXB mov pushq cmc sub popfq add int clc fdivrl mov rex.X test (bad) lods rex.WRX rex.RB (bad) xor lods push and cmp shlb sub pop stos enterq loop or mov mov movabs sti jb jle ds (bad) mov rep xlat rex.WB stos cmp int3 mov lods cmpsl (bad) and lret gs lret lods loop movabs lods (bad) (bad) movsl sbb lods cmp fisttpl lods xchg cli mov mov mov (bad) lods movabs cmc rex.WRXB retq in je and sub mov mov sub cmpsl loop adc jrcxz and ds and xchg lods xor mov hlt lods rex.XB or xor movsl scas (bad) pop (bad) cmp sbb sub mov lods (bad) fnop in movabs in (bad) fimull xchg ss je lods jns shlb (bad) nop add out or rex.W pop pushfq cmpsb rex.WRB rex.RX out rex.X (bad) jb sbb lea in pop adc sbb rex.B gs jnp pop scas sub mov jge (bad) or mov (bad) fcomps callq push outsl or gs mov test lret mov ss xor rex.WRXB sahf xchg push mov lods cmpl rex.R push mov mov rex.WRB movabs in stos fist rcrb sbb (bad) mov mov (bad) (bad) jno lods imul rex.WR sub mov scas retq push movsb (bad) xlat xor (bad) lods or (bad) fwait gs in (bad) add jns and retq pop rex.RB rex.WXB repz mov cmp insl rex.XB (bad) xor enterq sbb sbb retq lea sbbl fldl lods scas rex.WRXB insb mov adc jle lods (bad) jno (bad) (bad) or cs fldl test hlt mov (bad) (bad) mov xchg cld mov and cmp lods pop jne scas (bad) cld int3 stc leaveq fldcw test stos mov rolb es test mov xlat jmpq cmc mov or imul mov rex.R imul (bad) in shlb movslq (bad) jrcxz sub out sbb mov mov mulb xor mov lods (bad) cs sub cmpsl test int3 rex.WB roll shrb (bad) mov in in pop xlat lods stos test pushfq (bad) cltd outsl lods leaveq sbb loopne adc test mov mov fsubs xor sub insb xchg pop out mov mov mov add (bad) rolb push in movabs push (bad) adc sub pop rex.WR rex.WX or test pop cmp (bad) sbb cwtl scas movsb sub xlat fnsetpm(287 and push (bad) ss leaveq movabs out test (bad) add sub movsl jno (bad) cld pushq pop sub icebp xchg cs (bad) divb rex.B rex.W rex.R rex.R rex.B xchg (bad) mov adc jnp xchg jge sbb in xorl stos (bad) lods pop xor lods xchg adc push lods jns and add (bad) mov add cmc lods stos jae movabs or movsb rex.WR add or adc lods mov loope xor pop push sub jns jrcxz lret cs sub add push and and cmp js shrb movabs or sub push scas rorl push rex.WR cmp (bad) (bad) and retq out (bad) fisubrl sbb adc (bad) cmp (bad) fisubr int in sub loopne sub mulb adc jns lods cmpsl push xor pop sbb loop xor sub out out jns xor pushq or mov (bad) (bad) xlat mov mov pop (bad) lock lods (bad) mov stos mov movabs lods cmp nop (bad) xchg (bad) xorl cmp movabs (bad) out mov mov jl (bad) rcrl xchg sahf jrcxz sub imul lods adc rex.W outsb cltd iret push sub pop retq lods pop and push out mov lods add mov xchg lods pop (bad) fdivr out (bad) out stc lods test (bad) addl pushq adc xchg lods push (bad) movabs imul add jl jns pop mov imul in in lods lods (bad) movslq in movsb lods movabs xor repz pop jnp xor add roll es loope nop in mov mov ficoml pop (bad) mov fwait cmpsb ja lods (bad) cld add fsubrs xor jle pop add mov xchg shrb lock rex.RXB cmpl mov insb jmpq retq jb out sbb mov retq scas (bad) xor lods fmul mov rex.WB scas jmpq add insl push sub scas rex.WRX and cli lods outsb loop (bad) clc mov ror hlt fcoms lods scas (bad) (bad) mov sbb jmpq rex fwait jb fdivl fildl lods sub out (bad) xchg cmp mov in rex.W jne lods rex.WRX in out out (bad) lods pushq nop xor sahf ror rex (bad) rex.WX lods (bad) cmpsl mov push lods fsubs test scas sbb push rex.WB hlt mov rex.WR loope test lret lods push pop (bad) rex.WRXB (bad) mov ficomp mov (bad) adc mov insl (bad) (bad) sub push fdivrs pop fisubr jg sub mov cmc fldcw pushfq cld lahf cmp (bad) (bad) jl ds rex.X rex.RXB mov mov ss data16 std xor int lahf cmpsl (bad) sub mov mov jl rex.WRB jnp (bad) pop (bad) sub lods or rex.WX stos mov pop (bad) (bad) lahf shrl fsubr or stc and imul add mov and lret add rex.RXB add (bad) shrb roll orl mov addr32 or mov gs (bad) fcoms sbb mov xchg test mov rex.WR int3 retq movabs sbb sbbb movabs movabs leaveq or ds rcll js lods xchg cmp xor push rex.WXB cmc rex jno lods stos mov mov icebp test xor jne pop lods callq repnz loop vmaxpd (bad) lods int jae cmpl jnp in sbb test cmpsl in shrl add rex.RXB lods mov (bad) lods out mov cmp imull add popfq cltd insl lods or mov xchg (bad) or sbb adc retq mov in rex.R (bad) pop sub push test or iret rolb fnsave in jne mov xchg pop sub sub (bad) (bad) iret movsl cmp sahf (bad) (bad) callq and mov (bad) fmull xchg rex.WR rclb lods cld loopne js (bad) (bad) mov fldenv (bad) lods push mov xchg in idivl int jnp sbb jno sahf xchg rex.WRX fisttpl lods jne outsb es xor adc out loop nop test (bad) push leaveq sub (bad) movabs adc pop add sbb (bad) add (bad) (bad) (bad) lods lret test idiv mov and rol push js lea sub in adc rex.R lods stos mov in pop push mov (bad) fldt or adc jnp lods xchg cmp test icebp fmulp movabs rcrl mov mov repnz jge stos jo xchg mov mov lods rex.WXB jle xor pushq sbb adc push xchg ds mov lods mov in sti jo add adc movslq cwtl add movabs pop test mov mov xor and xor in jrcxz movabs test rex.B (bad) adc in push in out mov rex.WX lods jmpq sarl adc lods jb fiadd add lods fcomps add (bad) and sub sub (bad) and lods push pushq rcrl adc cmp nop pop (bad) xchg push push orl outsb cltd (bad) lods fsubrs lods hlt fildll test xor imul and cmpsl adc and movsl cs subl scas cmc lods rex.WRX int3 mov lods js mov mov rex.X sub sub callq mov sti and jl mov test in callq mov xor xchg insb jge mov nop mov fwait mov mov packssdw insb adcl (bad) stc jnp movabs rcrl (bad) rex.WXB cmp lods sbb lahf out lea xor mov (bad) lods mov test sub (bad) clc jl lahf and addr32 (bad) mov lret movabs jae rex.RXB es lods cltd outsb movabs (bad) or (bad) cltd out jle ss cmp rcrl (bad) lods scas mov (bad) (bad) insb (bad) loopne test add stc mov jle mov xor adc (bad) adc jae in add movsb jbe xchg movsl or lods (bad) retq loop lods outsl imul retq lods mov mov and jns lods int or sti mov movabs add lods in loope mov cmpsb jne xchg mov rex.RB retq in cli imul push (bad) out nop xor mov movsl or sbb rex.WRB lods mov ja cmp jo jge subb loop in sar push pop lcall loopne sbb lret pushq sub sub sbb add test (bad) mov cli jmpq jnp es or iret mov rex.WRXB rex.WB int add mov jle sub (bad) retq cmpsl lods (bad) insl jl sub (bad) cltd fs stos in hlt adc lods add sbb (bad) stos rex.RXB iret sub jmp or movsb sbb adc mov xor out jmpq jmp mov adc retq add lock cmc mov add sub or icebp movabs movabs ss mov jmpq (bad) xchg (bad) cmp enterq jb cltd add icebp (bad) test or sub rcrb xchg xlat jrcxz mov mov mov int3 or jle pminub (bad) pop in lods or test mov movabs lock cmp cmpb ja push test enterq jmp rex.WR lret jg add scas lods (bad) pushfq jnp lock or leaveq rex.WXB mov movabs fst (bad) (bad) lods (bad) je jl or imull rex.W test fnsetpm(287 xor jle sub xor rex.XB mov push pop jo xchg stos xchg scas rcll andb ss out shl test or (bad) cmp lods mov and mov cli mov (bad) jmpq lods movabs int (bad) movabs mov cmc lods or lods mov enterq xchg pop or jbe loope xor clc xchg lods (bad) cmp and lods push jbe idivb xor mov push mov sub loope mov movabs xchg stos mov (bad) jo rex.RB (bad) clc xchg pop pop stos rex.WRXB ds loope and retq or mov pop lods stos callq enterq adc (bad) mov sbb nop sub fdivl or lahf adc sub fisubrl int3 push stos mov ficomp shrl fdivr (bad) lods add sub retq (bad) rex.WXB sub jge loope mov movslq retq lods rex.WXB repnz fsubrs or (bad) mov sti in insl pop sbb cmp in jle test rex.WX mov (bad) lock test mov mov addl (bad) fistpll sbb xor mov (bad) rex.WR jns xchg lods xchg adc add fld xor sbb sub rex.RX repz fsubr jrcxz lods movsb add gs fidivrl cmc lods jl (bad) movabs lods lods nop jns add in je pop mov retq mov jo clc sti jl mov test out sub fldcw out lret (bad) lods push cmc mov cs adcb rex.WRB insb rorb (bad) test scas mov mov fmull rex.WR jbe lods jge add mov test int3 lods xor stos jno mov jg test rex.WRXB rex.RB stos (bad) mov jl pop mov (bad) cs rex.WRX repz movabs (bad) lods adc rex.WB add push stos sbb (bad) mov mov (bad) (bad) popfq sbb enterq lods sub add mov sbb cwtl jns stos push outsl scas jnp movsb mov fidivr lods or (bad) xchg lods pop sar rex.RX mov (bad) enterq (bad) jmpq jnp lods (bad) bnd in push and sbb pop test out (bad) rex.WX movabs jrcxz jmpq (bad) lods pop scas sbb jmp cli ja movabs lods shlb xor mov test rex.WB iret lods (bad) pop fildll cld stos or sbb fwait sbb gs mul add lods push lahf popfq (bad) rex.RXB outsb rex.WRXB sub pushq and imul loope movabs mov hlt add stos xchg stos fs ds lea outsb xor test add repz cmp sbb (bad) movabs or (bad) imulb out add retq cmpb nop (bad) and fnstsw jae retq xchg (bad) retq sahf lods (bad) jmp mov push out lods adc (bad) mov lods adc popfq insl (bad) (bad) rex.WB lods cmp rex.XB out lods and ror add or mov adc repnz (bad) (bad) jbe lods mov pop pop mov (bad) mov stos pop rex.RX rex.WXB cs mov int3 add lret adc cmp lods icebp adc mov lods jmp cmp imulb xor jo movabs cld (bad) shrl pop rex.R enterq (bad) fcompl scas movabs mov loope scas lods and pushfq rex.WX fdivrl sbb add xor or sub lea sbb movsb push cs (bad) mov gs js or lods (bad) in subb cmp lods xchg or rex.WR (bad) xchg adc stc loop (bad) jmpq imul lret (bad) adc push cld lahf xorb leaveq leaveq push or sbb (bad) jne rex.WB mov jge lods cmpsb mov add cmp enterq shrl int test test xchg lods lret rex.W (bad) imulb out movabs in rclw stos callq push xor sahf add rex.WRX popfq push enterq retq push rex.XB xchg mov test roll ss rex.WXB xor mov jle movsl lods mov mov mov rex.XB in cmpsl lods ja xor xor pop test mov (bad) rex.WX lods js (bad) (bad) jmp scas lret adc pop lods imull sub pushfq rex.RXB cmpl xor rex.WRX add mov rex.RXB cmp insb push (bad) adc shrl loop repnz mov lods in xchg cld outsb (bad) fs sbb (bad) xor insb pop stos add lods jg cltd sbb fisubr es lods rex.RXB cltd cmp rex.RB rex.WRX or shrl retq (bad) mov xor mov int imul sub jl pop xor (bad) or xchg rex.X repz (bad) or cwtl rex.RXB xor mov mov lods lods and loop sub mov (bad) scas neg addr32 rex.XB and cmpsl (bad) out or mov mov (bad) or xlat rol (bad) pushq (bad) adc mov push shrb push pushq (bad) and and movabs push lock lods hlt divb adcl jno (bad) xlat fisttpl xchg ds stos jb test out movabs mov shrl cwtl (bad) or shlb sahf (bad) mov cmp sub incb (bad) (bad) rex.WR pop shrl (bad) out test clc (bad) sti insb movsb mov sbb xchg leaveq (bad) shrb add jbe mov fadds movsl cltd lods xlat or lods repz shrl pop outsl cwtl or mov cmp push fcoml pop outsb xchg popfq jl retq shlb fildll cmp sub (bad) sbb mov lods in sbb cmc mov jl jg mov lods rolb sub mov subl sub xor rex.WRXB iret int3 (bad) jo (bad) lods movsb cmp lea add add shl rex.WXB push (bad) rex.WXB jg (bad) cmp fcoml push clc push lods jne cli adc retq lods xor or shrl mov test enterq in rolb cwtl rex.WRX sbb shr cld (bad) rcr sub mov lods jmpq cmp stc movabs je jp jge lods mov rex.WR scas fidiv mov jl and push lret jno stos mov sbbl pop (bad) mov mov in scas movabs jb jae sub mov add and sbb imul movabs sbb sub mov (bad) test callq insl sahf sub loope push jl mov pushq and sbb test cld out je in fildll incl (bad) in lods rex.X scas fldcw xor jns sub js lods sbb adc push mov lods repz rex.WRX movslq fisubrl (bad) movsb sbb int3 xor stos adc jle jl,pt cmp xchg lods xchg jae xor jp rex.R rex.W lods or in nop fwait mov cld movabs jge lods rex.X stos lods xchg mov jmp mov lods xor (bad) addl xchg lods lock pop adc imul mov or jae adc (bad) pop sub lret (bad) jnp movabs mov je movabs push mov loope (bad) stos sbbb (bad) stos sarl xor mulb jbe lods jno mov sub jnp mov notl xor (bad) fsubrp nop (bad) xor mov xchg mov (bad) std jb pop pop sbb imul xchg (bad) leaveq scas sub imul rex.WRXB movsb pop adc xlat sbb (bad) out fildll rex.R rex sub mov fistl xchg (bad) lods lock add (bad) xchg lods jmp movsb xchg rex.B (bad) and fsubrl (bad) mov mov or xorl xor cs rex.B mov add sub and add mov rex rex.WX fcom test mov mov or cmp (bad) push lods xor rex.WRB outsl mov test out rex.R mov mov mov pushq mov gs mov (bad) jmp adc push sbb fs sub sub xchg stos jp movb fsubrs flds sub ficomp or push movabs movabs es or rex.WR xchg mov adc mov lret pop insb js and lods (bad) out push xor adc mov imul adc cwtl or jnp (bad) (bad) lods rex.WX xor outsb shlb (bad) lods (bad) test or lea xchg lods sub rex.XB (bad) (bad) lods (bad) mov push add (bad) mov mov mov (bad) popfq xlat and in incb retq lods jns retq stos xchg mov (bad) leaveq mov ja sbb (bad) or lods rex.XB stos add lods rex.R jo lods (bad) add (bad) icebp lods sbb in push (bad) jb add cli out cs cmp roll test movabs and lods cmp out cmpsb jns pop lods pushq (bad) jrcxz pushfq xchg lods (bad) cmc mov (bad) test mov imul lods jnp (bad) scas mov cwtl loope xor imul fwait addb mov imul subl and lods test idivl lods xchg (bad) fdivs pop push sub cmpsb (bad) and in mov or fidiv (bad) hlt movslq (bad) (bad) lods sub mov add lods sub in pop mov jg lods in je and sar pop fldcw (bad) mov jnp add mov (bad) add mov movsl (bad) cmpsb or or xchg (bad) stos rex.WXB cmpsl jnp movslq pop rclb in fldcw outsl sahf jbe push (bad) sahf fnop movsb sbb (bad) xor imul xchg lods ds pop mov fcom in cmp rex.RXB rex.R lods gs adc pushq or rex.WX lahf insl stos push jmpq (bad) movabs pop mov movslq xchg or insb or lret test mov cli mov loope pop loope lods rex.B mov xchg fistpl loopne mov (bad) (bad) shrb pop add mov (bad) insb repnz lods (bad) (bad) ss rex.WXB cmp sahf sub movsb lods push xor lods jg xor xchg (bad) mov lods add mov xor movb rex.RB sub jl in or in test insb rex.WXB fcmovu adc outsl pop or (bad) test (bad) xor (bad) lods jp mov pop mov and xchg retq and (bad) nop add repnz and iret add lock mov (bad) lret adcb and iret scas cld lods fiadd fwait (bad) adc movabs in xlat subl sbb lods out shll and xor jl int cmp retq rex.X std out lcall sarb lret rex.WX fmul leaveq fisubrl lods movabs repnz int3 test lods and (bad) cmpsl hlt test cld mov test cmp and jne fs mov or (bad) or movabs cmpsb test sarb (bad) fwait push int3 repnz (bad) scas mov in cs mov ds fstpt mov cmp lods sbb mov in fwait enterq lods xchg cltd rolb push mov and fdivl jmp cmp mov movabs mov mov xor cmc (bad) subl out pushq cmc gs mov xchg idivb mov mov lods shrl movb test jo mov sub pop (bad) mov push (bad) in test mov clc pop mov jg or scas scas insb jb ss lods (bad) (bad) and or xchg enterq movabs xor lods imul xchg (bad) cmp out int3 or lods xchg add jl push or lods retq cli push cmp mov sarl (bad) scas mov ficom rex.WR sub fwait mov pushfq cltd or sub stos lods rex rorl mov lea xchg adc int3 xchg movabs xor cmpsl ja mov in cltd out (bad) jno sahf push (bad) std (bad) lods xchg sub jp movabs (bad) rep ds xor rex.RX clc lret retq mov and add repnz xchg (bad) lods loope cs iret pop sbb stos xor in retq loope fadd jbe sub pop retq ss retq rex.WR cmp lods mov iret (bad) pushfq (bad) xor lods loop sub push rex rex.WRX add movabs (bad) adc (bad) scas (bad) mov mov mov (bad) in rex.RB stc sbb sub jo pushq rex.WXB fidivl sbb push jb pop rex.WR addb lods ficoml fsub mov iret (bad) sub mov movabs add data16 sbb xchg (bad) sti xchg xchg lods test or mov or xchg (bad) imull sbb cmc (bad) sub lods mov movsb callq jbe add adc rex.B or rep outsl in test pop (bad) lods (bad) stos pushfq (bad) push or mov push lea jne,pt insb rex.WXB adc (bad) lods rclb (bad) mov or mov mov fmull rex.R lods rex.RXB rex.WR push fstpt (bad) loop xor adc lods (bad) clc movsb or movslq jbe (bad) int fildll repnz test xor stos in addr32 and (bad) pop jb mov rex.W cmovnp (bad) jg cld xor lods cmp xchg stos pop outsl test paddusw fiadd jg (bad) push add clc out cmp (bad) xchg cmp lods rex.RB xchg lea pop or sbb movsl rex.WB add (bad) repnz jp pushq and stos insb pop sbb movabs (bad) ss movabs lods addl mov loopne adc or xor cltd adcl (bad) mov lods rex.WX lock cli addr32 adc (bad) outsl subb rorl add adc cmp test rex.RX fsub decl in sti lods movabs movsl fs cmp movslq data16 (bad) and lods or fcomps (bad) adc lods or leaveq push (bad) mov test xchg test mov pushq lock leaveq (bad) (bad) icebp nop lods in (bad) movslq lods mov pop cmp (bad) adc sbb movabs sub jns xchg std jb cmp lods stos insb divb adc (bad) fistl push movabs (bad) callq scas or pushfq rorb adc movslq (bad) rex.WB (bad) or lods pop rex.RB adc jns or wbinvd sub cld mov lods (bad) (bad) scas jge retq addr32 lods and push mov retq cs lock int (bad) cmpsb loopne (bad) (bad) adc rex.W jle xor adc mov movabs sbb mov cmpsl xchg (bad) (bad) mov lret stc cli mov stos or jl imul (bad) mov add cmp lret scas push add retq mov iret mov (bad) stc test and fsts mov cmp xchg xchg (bad) (bad) (bad) int3 adc mov rex.WX cmp sahf (bad) sub iret lods cmp fildll rex.WRXB bnd cli rex.B pop mov adc pop data16 mov pop sahf cltd sub mov mov fs clc lock lods cmp (bad) testb scas addr32 jo sub out int3 (bad) xchg mov adc lods add xor sub repnz scas sub outsl sarb (bad) sub (bad) popfq sahf repz in adc test adc pop retq popfq in lods xchg lret cmp xchg mov rex.WR lods cmp jb add lods lods hlt or add push cmpsl scas movslq jne xchg pop rex.RB shlb xchg mov and (bad) mov ja xor sub roll cmpsb icebp hlt mov lods loopne mov lods sub fidivrl int3 out push loop pop add or mov and adc (bad) int3 fadds sbb xor lods (bad) enterq xor lods lret cmp test movsl adc mov (bad) hlt cmc (bad) lods fnstenv xchg sub and lock add xchg and xor test (bad) in pop movslq add cs jmp mov out mov xor stos pop insl vpsubsb scas ss or mov in sub test mov sub mov movabs test xchg jmpq hlt scas or int3 insb sbb (bad) mov rex.RX sbb lods sub imul push callq movabs (bad) (bad) cmpsl loope (bad) hlt (bad) pop mov ds in movsb jmpq and mov adc pop pushfq scas mov (bad) lods (bad) adc retq pop sub push jl stos test add rex.RXB lock sub xchg in sbb jne lods scas xlat cmp (bad) hlt cli lods insl mov cmp in (bad) mov (bad) pop gs cmp (bad) rex.XB nop mov movabs fnsave outsb lret shrl repnz rex.WRXB movabs rex.WR (bad) and xchg xor sbb idivb movabs imul xlat push push xor repnz xchg lods cli sbb (bad) pop iret mov in (bad) rex.RXB lods fimul sbb jg jne scas fstl (bad) mov lods shr fmull stos rorl ds mov stos adcl in (bad) sti sub (bad) pop xchg decb lahf lods push pop rex mov sbb rclb pushfq scas (bad) jle (bad) fcompl mov (bad) mov sub jl jno in fwait mov imul pop mov jmpq and add sarl sub (bad) xor xor neg sub mov lret lods lods (bad) (bad) movabs retq xchg mov (bad) jae loope ds or ja xor iret jns xchg jrcxz sbb xchg fnstenv insl mov rcl (bad) sbb lods jle sti es sbb stos or cmp (bad) xor scas movzbl sbb fisttp jle lods mov mov jbe cli cmpsb cmp int insb movabs imul jb lods (bad) (bad) movabs pop mov (bad) jne loope out rex.RXB add sub int3 insb or outsb jge rex.B pop and lret (bad) lret test test fyl2x xchg cmp test xchg mov movsb (bad) mov movslq lods lahf mov lods rex.W addr32 rcrb rcrl cltd out lods jrcxz (bad) test xchg add lods movslq stos enterq sbb out or sbb faddl shrb push rex.RX xlat rex.XB (bad) fwait sbb xchg in rex.WX sahf sub sti rorl mov lods add out jo sub xchg xchg leaveq lods rex.B in cs (bad) enterq pop (bad) lods sub sub pop stc retq sbb enterq mov xor or or push sahf jp (bad) je (bad) test lods retq or js push lods std pop pop fsubrl callq test sub jnp shrb (bad) jrcxz (bad) lods adc imul rex.R lods pop cli hlt movslq mov adc rex.RXB hlt retq add xor cmp mov mov test sub (bad) jbe test push fwait sarb lods jb es pushq (bad) lods cmp out push lods or pop mov and scas lret lods sub push rex.R je mov lock lods js test or sqrtps (bad) mov retq mov sub (bad) iret negl outsw rex.W lods orb pop xchg pop mov std pop (bad) lods clc stos jle in (bad) rex.WRB movslq push mull out (bad) fwait (bad) jge lods imul outsl test mov fwait adc rex.W stos lods lods jo pop sub mov mov rex.WRXB or xor cld cmp jnp enterq cmc or int stc jmp (bad) push loopne lods cld out insb enterq lods retq pop jbe adc test sub sahf or loop cmpsl hlt rex.WXB sbb (bad) cli mov pop rex.WRXB jbe sbb sub sbb pushq pop adc mov jmp retq sub mov mov lods cmc mov sbb subl xor stc jle xchg sub mov or sub and lods (bad) retq (bad) (bad) rex.XB jmpq cld scas xchg (bad) mov (bad) (bad) push flds sub in cs movabs mov stos xchg mov lods cmp (bad) mull test jns and adc lods out push ds (bad) or std clc (bad) lods push int loopne out sbb lods sti jmp (bad) decb movabs ds add lods add in cmc lahf jp mov push (bad) jl (bad) sub in (bad) in popfq ja pop jnp int3 jne push sub (bad) retq jb push jg cmp repnz rex.XB lods ds fistl xor rex.XB fs rex.WXB fsubrs xor lods sub (bad) xchg in cltd (bad) lods cli mov xchg sub in lods rex.RB (bad) cmp test sub (bad) mov or cld pop xor (bad) cwtl rex.X lods leaveq je mov movsb mov data16 push rex.R adc (bad) jmp push cmp retq mov jp xchg in lods xchg sbb sbb retq adc movabs pushq xchg lods rex.WRX cmp mov jl mov (bad) pushq or mov xor lods (bad) cmp and rcrb out xlat subb movabs mov mov xor jb movabs pop and movsl mov adc rex.WRX lret int3 outsl lods add popfq movabs test (bad) test lods stos and mov rex.XB movabs out lods out rex.WRB divb (bad) xchg cwtl stos push rep rex.WX cmp adc movabs (bad) mov out cwtl lahf sahf rex.RB xchg sub lods cltd scas cmpb cmp adc sub pop (bad) lret rex.WR sub (bad) xchg pop sub or lods lret cwtl and rex.R lods cli xor hlt xor and retq adc movsb out lods xor mov sbb insl lods mov lret stos mov pop stos mov mov rex.WXB mov rex.B leaveq mov lods rcll cmp (bad) movsl rex.XB push sub sub lods pop in ja (bad) cmp mov rex.WRXB outsl lods adc jle in rex.WXB xor (bad) lods jnp repnz movsl ja mov rex.WX (bad) retq adc xchg add sti (bad) jg pushq push scas xor mov mov rex.X rcrb movabs int or fist xchg fcmovbe je repnz movabs ss movsb (bad) out imul mov vrsqrtps cmp jl loopne xor push ficomp lods lahf cld pop test jae outsl std (bad) xor lods mov cmpsl mov lret mov (bad) mov js xlat or mov add stos pop jrcxz enterq mov rex.WB clc lret sahf xor imul movabs cwtl xchg mov ja lahf cmp or (bad) cltd sbb imul in mov (bad) shrl (bad) mov in jnp mov lods add (bad) out (bad) lods nop pop (bad) mov mov (bad) (bad) xor push (bad) lea lods cli movsb jo jae testl (bad) rex.WR mulb mov test (bad) rex.RXB leaveq add adc jge lret xor mov retq sub scas pop xchg cwtl mov sub fs jbe add mov pushq xchg int subl cmp jae push sbb ss cmp stos jae clc xor lods pop cmp (bad) (bad) lods pop stos icebp pop jnp push roll (bad) mov jno cmpsl test fildl pop xchg out mov lods sub mov pop lods mov (bad) cmp mov int3 lock lods rex.XB rex.X (bad) sbb jg rolb (bad) jrcxz test or lret lods add push mov lods xor push (bad) test xchg pop lods (bad) sub cmp xor adc sub rex.WRXB (bad) and movsl je js cmp sbb (bad) rex.WXB rex.WX scas (bad) (bad) movabs (bad) and std jl lods adc xlat mov loopne add or movabs retq mov lods rex.WXB stos or adc xor flds (bad) push loop mov fs mov cmp lods out mov (bad) xchg xchg int rex.WRXB sahf (bad) xlat lods mov movabs mov test rex.X std in mov jns sub jmp ja in (bad) movsb je movsb xchg push cmpsb mov adc push lods rex.WRX pop rex.WXB ss rolb movabs fwait (bad) cmp scas xor xchg mov push xchg push movabs mov mov mov add out mov or repnz mov sub xchg cmpsl adc lods jle jnp in adc in (bad) movabs xor or xor (bad) mov imul fadds mov xchg lods xor int3 (bad) fisubr (bad) cwtl cmc xor fiaddl sub es (bad) cmpsb pop cli shrl imul cs push pop pop loopne stos mov or rex.B (bad) fisubr mov lods jns clc sub mov enterq test lods leaveq lods cli stos jmpq mov fdivrp cs mov sub jne lret stos sub sti jo xor fbld pop loopne xchg stos mov rex.WRXB mov xchg test (bad) lods loope pushfq rex.X mov lahf mov (bad) jo in adc (bad) movsb adc xor mov fcmovne push (bad) movsb ja (bad) vlddqu lods pop cmp mov lret lods loopne cmp sub fdivrs add lods loopne or out std (bad) (bad) lods or test test movabs movabs testl retq lret sahf sbb insb testl rex.RB (bad) scas sub rex.XB movslq insl stos (bad) shrl xor sbb xchg push fisubr add lods loope (bad) ss outsl mov lret stos rex.RB lods iret enterq (bad) sub jns lods stos and js retq add xor mov (bad) rex.R fmuls add rex.WXB rex.RX out or jo jg adc xchg xor stos fs or xchg (bad) mov in (bad) sahf popq test scas adc (bad) mov push movabs repnz scas callq adc sub add or dec adc retq lods out mov push cltd rex.RXB movsl not xlat cmp rex.WRXB int xchg cmp jge scas jnp rex.R fild es rex.RB (bad) insb in cli cmpsb lods and adc (bad) xor sub jns cld movabs lods sub mov pop lods imul add (bad) jrcxz lods pop loopne rex.XB rex.WR rex.B out rcrb mov or xor mov jge push xlat scas sub cmp (bad) lods (bad) sbb popfq add mov icebp jb cltd outsl test xchg (bad) mov jno adc in adc xlat jmpq and lods (bad) sbb adc cmp lods roll xor jp lods cmp jno (bad) or xchg lods mov (bad) adc xchg adc scas loope rex.WB fcmovnbe in sbb lods test gs lret mov ss in rex.W or add shlb cmp lods cmp (bad) rex.WRXB iret (bad) (bad) (bad) lods jmp (bad) (bad) outsb es stc (bad) mov repnz cld mov jg lods and insl movsb testb stos andb rex.WRB jne in mov sub (bad) add adc lods (bad) mov stc loopne xor lods (bad) fwait sbb sahf xchg mov scas xor addr32 (bad) fdivr insb sbb lahf lods (bad) insl cmpsl jrcxz test rex.XB xor (bad) jl (bad) lods add cltd sub xor lods fidivr test add mov int3 rex.WX rex.W (bad) push mov add (bad) stc outsl scas lods rex.WR and and jp mov lods insl rex.WB jge rcll pop cmp out (bad) rex.XB test nop lret mov (bad) rex.WXB adc in sbb ja lret mov in (bad) mov mov jge (bad) lret sub jbe sub movq or or cwtl js shll rex.R rex.WXB retq lods stc rex.WRXB xchg rolb loop mov adc jl xor lods mov mov push cli clc lods mov outsl pushq lods xor (bad) xor or lods adc mov out lods cmp (bad) mov (bad) hlt and out int3 mov fidiv (bad) int fucomi lods cltd mov add or (bad) sbb (bad) movabs (bad) rex.WXB rex.WRB cli leaveq mov mov jg (bad) cmpsl adc xchg (bad) mov and jne adc lods outsl mov prefetchwt1 add xchg insl sub lods rex.RB movaps jne mov imul lods add jmpq jne (bad) or lods sbb mov lods (bad) callq nop movsl lods loop je test int3 (bad) cmp push in imul loop xchg rex.RB test (bad) movsb sub (bad) jrcxz lods fs addr32 lods movabs cmpsb (bad) fidivl loope xor pushfq xor mov rex.W fucom cmp mov ss loopne (bad) pushfq imul rex.X pop mov xor lods fsubp mov insb lahf lock and lods and jle xchg sub adc decl in add (bad) or mov pop (bad) sub pop (bad) imul outsb sub (bad) xor jae (bad) in leaveq sbb cwtl and mov jbe push scas add jnp sar jns out (bad) ja js (bad) mov cmp (bad) lods jle add or lret scas lods cmp jo stos rex.WXB sub jge rex.WX rex.XB stos (bad) mov xchg rex.R jns movabs movabs push (bad) (bad) loopne std lods gs roll lods mov vunpcklps fnstcw jns sub scas sbb xchg in xchg je rex.WRX mov xchg push lods (bad) in rex.R rex.WRXB movabs lea (bad) and rex orl repz jl cmpsl icebp add (bad) add outsl lods fs pop add or shlb (bad) sub imul callq sub lahf or jrcxz pushq push fs pop scas lods sub mov mov or int jmpq mov xchg sub mov cmp mov cltd mov (bad) lods pushfq addr32 jnp jns and test cli (bad) pop and lods loope adc movabs sbb rex.X test mov (bad) test xor jle cmpsl (bad) gs and data16 in pushq adc movabs (bad) sbb xchg lods xor pop pushq mov out xchg (bad) lods xor movsb mov lods retq and adc (bad) scas rex.XB xor or lea sti cld movsl mov mov push fdivl rex.WB lods rex.RX mov adc (bad) mov (bad) cmp (bad) push lods movsb mov imul out xor loop iret out xor add jo (bad) rex.WR add adc fdivl je mov jno retq stos int3 mov mov outsl xor (bad) cmp movabs (bad) rex.X jnp imul cltd mov add lods (bad) add imul repnz xchg (bad) (bad) out or out sarb ss in jrcxz jmp scas cld sub (bad) retq (bad) pop loopne sbb stos cmp outsl enterq sbb lods add rex.RX retq (bad) pushfq retq fnstenv (bad) (bad) sub pushq shll adcl mov pop jo int3 mov (bad) adc xor sub lods adc xchg jle lods test sbb cmpl pop sti pop lods clc push sahf lret ja fs movabs xorb (bad) cltd pop jae adc mov adc mov jae callq (bad) sub mov (bad) movabs rex.X test sbb or and fs repz movabs sysexit (bad) rex.WRB lock sub sub xchg rex.RXB (bad) lahf out retq lea lods xor xlat rex.RXB jbe lods loop rex.WRXB movabs sahf cs mov push mov mov movabs pushfq lods movsb lock enterq jle xchg mov (bad) (bad) out enterq lea fucom cs sub (bad) rex.RB std loop pop sub (bad) push fisubl (bad) lods cmp push mov (bad) (bad) int cmpsl js xor in outsb cmpl (bad) adc in jns cltd lret sbb and adc sub lods xchg ficom vpsubd insl xchg adc (bad) cmp xor push cmpsb and ja lods jns (bad) adc push repnz sahf in push lods push fdivr and loopne mov (bad) and (bad) jbe (bad) in rex.XB fwait shrb fsubrs shll out mov loop (bad) jne adc or shrb (bad) (bad) mov cmpsb rex.WRXB rex.WR adc sbb lods (bad) rex.W movsl callq fdivr sqrtps (bad) mov push mov std mov or imul and jns lods push xor cs test jmp sahf roll lods (bad) divl cmp jrcxz xchg mov add mov scas cli stos push push cltd or cmp lods (bad) punpckhdq shrl out je sub lods pop jae push mov and stc sub enterq cmc test sbb lods andb in repnz sbb sarb jge pop mov push lods xlat rex.WXB (bad) lea (bad) cmpsb roll or sti jge xchg cli scas (bad) (bad) rex.WRXB and cwtl insb push out movslq mov cmp sbb jmpq mov pop icebp imul cli lods cmp mov lods adc rex.RB or jne (bad) sbb mov repz in sahf pop pushq rex.RX and callq and pop (bad) lods add (bad) pushq cwtl imul lods sbb fldz test mov mov sbb insl (bad) mov stos (bad) (bad) jmpq out add loope (bad) rclb rex.RX xor leaveq mov jbe in pop std callq mov xchg lods fdiv rex.WX retq jg mov lods and jne clc movabs (bad) (bad) jb xor (bad) or sub xor lods and push cmp or add pop movsb and insb and and sub adc sub jp lods in movslq (bad) outsl sbb sbb lods (bad) flds outsb lock jmp insb (bad) jle mov or test (bad) jbe scas rex.WR movsl stos pop mov movsb pop gs sub (bad) (bad) xchg lods in outsl sbb add mov adc mov in mov insb imul movabs fwait movsb es jg lods test rclb fldt push shrl (bad) push mov test mov sbb lret lods subl jbe sub xor push (bad) sbb mov (bad) sub mov lods mov (bad) outsb (bad) jg jp in sub lahf fldl movb imul lea out cmp (bad) lret add (bad) xchg (bad) test xchg mov icebp mov outsb flds sub (bad) cmp mov fisubrl cmpsl sub mov mov add (bad) sub gs jp lods int repz jle rex.WX in stc mov lods xchg nop add jb rex.WXB (bad) pop (bad) sub or lods or jb xchg jmp adc repz cmp rex.RXB sbb leaveq lods rex.B es push callq (bad) sbb sbbl movb pushq hlt add scas push mov insb (bad) pop mov lods in sbb (bad) sti cmp lods test imul rcr sub fs lods pandn jle mov cmpb lods xchg (bad) rex.XB int3 fisubrl movsb out push adc cmp mov (bad) insl mov (bad) pop stos rex.WR sub movslq fcomps rex.RXB (bad) int rex.W xchg rex.WRB and scas xor mov and mov int3 xchg cld or jo incb mov rex.WRX xchg lock fst mov push push lods (bad) xchg jmp jo lods xchg mov sub pop rex.B jg push pushq mov xchg add mov lods or movabs lret in adc mov pushfq (bad) lock lods fnsetpm(287 push jp es (bad) cmp mov fs (bad) rex.WB mov add fs rex (bad) and and mov stos jge lret or lea and (bad) retq fwait imul (bad) jge,pn je jl rex.W cmc and retq lods rcrb (bad) imul lods (bad) pushq std xlat lods xchg (bad) sub or jo movsb pop rex.WXB rcll insb jbe (bad) mov push lods rex.X mov mov mov lods add add ja (bad) cmp (bad) (bad) jne mov xor (bad) (bad) repz mov std rolb fdivr fsubrl mov mov rex.W enterq insl shll leaveq (bad) cmpsb scas xor movabs mov cmp rex.W mov leaveq jno int3 hlt lea add push retq movabs movabs (bad) sub repz adc jl test or retq or and rex.WX lock out lods pushfq push movabs out pop sub hlt adc lods adc mov fldcw push pop in mov pushq push (bad) hlt enterq push std lea mov lret stos rcrl adc rex.WR fstpl (bad) cmp lods stc add scas movabs (bad) xchg lods loope sub enterq in cmp (bad) mov cld lods test sbb or outsl iret adc lods jns decb movabs shrb cld test sub mov cs add rex.WRX cmp lods movabs xchg or xchg es lods lret (bad) (bad) adc lahf cs (bad) jne mov adc cmovle lods xchg rex.RX rex.WXB push mull fsubrl lods rex.WX cli test retq lods scas jp rex.WXB cmp clc and decb imul pop cli lods mulb pop pushq sbb lods push xorl enterq fucomp (bad) subl mov (bad) lods lock or sub (bad) lods mov cld imul insb adc rex.X add out adc shrl out lods movabs (bad) mov mov stos (bad) mov xor sbb int3 pop data16 (bad) xlat rcrb fldcw (bad) sbb in pop imul push and sahf int3 sub (bad) jmpq mov cmovne xor jle or push iret (bad) lods and rex.WB repz sbb (bad) mov lods or lods addr32 rorb (bad) hlt (bad) jnp (bad) jb pushfq rex.XB pop mov add outsl adc fsubl movabs jl outsb mov mov add adc adc scas adc jrcxz cmp in (bad) (bad) lods (bad) xchg fstpl mov add mov xchg lock iret and callq cmpsl adc mov pushq adc (bad) xchg mov xor lods and movabs adc sub rex.RXB (bad) lcall xchg mov xchg cli leaveq movsb cmp push sar movabs cmp adc int3 push or mov sub std and movabs clc fldcw je sbb (bad) pushq loopne cmc lods mov cmp pushq rex.RX jge fsub movslq mov (bad) retq movabs movabs repz xor add testl je cli jae in outsl push in push adc or xchg (bad) leaveq lods rex.WB scas jo (bad) retq lods xchg callq lock mov stos fldenv ss (bad) scas icebp in loope movabs test shrb lock mov or xor lods mov (bad) pushq sbb sub cli add cs cltd imul scas mov sub outsl fisub adc cwtl mov lods rcrl (bad) pop orl xchg ds (bad) mov out adc roll add rex.WR lods scas loop rex.WX adc in mov adc movabs (bad) xor sub rex stc hlt add imul and mov sbb in int3 imul (bad) lods fildl pop ss int out imul and fwait and (bad) sbb jl add mov data16 bsf in insl (bad) add (bad) jrcxz lock mov (bad) rex.WX sub movsb mov lods jp rex.X test lods and (bad) imul mov or and (bad) rex.WRXB mov int3 lea cli cmpsl or mov int (bad) add (bad) movsl lods mov loop test mov pop negl mov add mov add loopne sbb pop test fsts (bad) fwait icebp mov ds mov rex.X mov mov repz fisubr mov imul rex.RX lods sahf mov lods and nop pop in (bad) push fildl (bad) add (bad) and pop xchg cld push fdivs in add jrcxz lods rex rex.WRX sub pop (bad) je and callq or (bad) mov (bad) (bad) (bad) mov movabs and adc movsb andl (bad) mov shrl movabs cmp (bad) ds outsl ja leaveq push xlat mov (bad) xchg or (bad) lahf test mov sbb or jo test js lods mov adc adc mov lods xchg shll mov pushfq push mov add rex.WB mov cmp (bad) sbb lods jae and jrcxz (bad) fisubr mov mov adc sub repz pop (bad) xor sbb jg sbb movsl lods incl mov rcrl xchg lods sub sar rcrb test out mov jmpq fimul lods add add test stos andl pop stos xchg unpckhps (bad) lods je test xor in rol rex.WRB cmp sub cmc stos lods add mov or mov and fwait jns rex.RX rex.WX xor push rex.WR (bad) jae movabs pushq movabs fldenv int3 scas pop lods jrcxz je in jmp (bad) lods pushq (bad) hlt popfq mov fisubr test pop adc loopne (bad) out jo or cmpsb scas push (bad) (bad) xor jmp lods (bad) mov mov mov loope rex.RX lea mov leaveq lods (bad) push and test test (bad) int sub mov cli lods sbb rex.RB jg out and and cmp loopne mov mov cmpsb mov rex.X rex.R cmc (bad) lods mov pcmpgtb xor idivl push (bad) nop add adc xchg ja xor sub push mov outsl rex.WRX in loop mov je mov rex.WR cld pushfq lods (bad) jle jrcxz or rcr cmp mov (bad) imul add nop fdivp (bad) rex.RB lods mov rex.WB pop retq push neg pushfq sbb (bad) or xchg (bad) je lods fwait rex.WXB nop data16 cmpl (bad) cmpsl rcrb insb mov scas jle lods cmp icebp cmp fidivl pop mov or cmp imul pushq movabs rex.WR (bad) cmpsl jmp mov xchg rex.RXB lods xor mov pop jne rex.WRXB fisubr (bad) sub (bad) (bad) movabs in jo (bad) mov es xor rex.RXB retq es lahf enterq ror xchg lods (bad) (bad) mov shl sub (bad) sbb in rex.RB ja or (bad) jno cmp sbb addr32 xor scas pop cmp fst gs xchg (bad) sarl callq push (bad) cmpsb jg subb pushq stos insl jl mov rex.R mov rex.WR rex.WXB mov fdivs mov (bad) pop and jno mov cmp lods loop pop mov cmp mov notl xchg jae pushfq xor shlb scas rex.WRXB lret movslq test imul cld (bad) cmp fdivrl lods lahf iret mov test adc rex.WRXB rex.RXB add (bad) pop js stc or adc (bad) cmp iret in shrb (bad) sti (bad) mov and (bad) rex.XB jle fwait (bad) jno (bad) addl jmpq jl pop xor movabs (bad) (bad) vsqrtps fwait repz (bad) scas lea xor movsl (bad) lods adc insb xsaves int3 imul mov xor sub xor lods push movsb stos iret adc mov movabs movslq enterq mov lods test (bad) lret rex.RX out mov mov xor in pushfq std sub out fldlg2 (bad) lock lods in jnp mov cmp gs rex.WR movabs jge sbb mov mov mov lods cmp push lods (bad) cmpsb pop pop cmp jg scas mov fisttp or (bad) or in js lods leaveq adc enterq sahf sbb sub rex.R (bad) out rex.RX lods rex.WR rex.RB jmp (bad) mov data16 (bad) rex.WRXB mov push ds pop cmc lods test xchg in lods int3 (bad) adc (bad) adc mov lock cli stc scas sahf lods out scas xor test lods rex.X (bad) pop rolb ja cmp push nop clc lods cwtl repz mov test jle lods pop jg (bad) sub popfq jns or ja jp cld (bad) mov test push sub pushq pushq (bad) push and addr32 (bad) loope lods ss movsl lods (bad) int3 movabs add jle rex.WRB fxch sbb xchg lods rex.WRX rex.WRXB js mov lods (bad) mov adc ss enterq stos fisub xchg insb xchg shll or (bad) lock xor rcll rex.RB xchg shll and lods xor (bad) movslq cmp lods and (bad) jg leaveq xchg loopne mov xchg xor lods sbb or lods push add lods pop rex.X cmp ss add (bad) lea mov add xor lods test mov (bad) adc rex.XB and xor (bad) sbb lods cmp es and movabs mov or add rex.WR lret xchg lods push fisubl xchg pushfq (bad) enterq stos and pop pushfq ss std shrb loopne sub std sub rex.XB pop lods decb in retq lods push fs push hlt movabs sub rex.RX cmpsl mov pop cmp mov retq movsb rolb stos sub mov movabs rex.RB fsubrs ds cld add lock or int insl jg xor loope std mov gs jne lods data16 ficoml shr mov xlat add ds stos insb test (bad) sub stc clc js xchg scas sbb es test lods (bad) jrcxz gs movabs loopne jne je fdivrs sub sarb add es lea jns rolb lahf icebp rex.WR adc jmp (bad) (bad) lret or push rex.WRX mov push mov idivb scas mov add rdtsc sub (bad) push out fldt add ja xchg jbe pop stos xchg lea btc cmpsb add sahf in nop jge xor (bad) mov sbb and je push rex.WR rex.XB (bad) stos insl mov (bad) insb ds rex.WRB sub sub push js lret lods cmp jmp sbb rex.R fucomp scas mov and push sbb xchg mov imul (bad) mov test adc add adc callq lods jge rex.W pop sar lods and push addr32 rorb or push cmp mov and iret xchg mov xorb fstl (bad) and cmp shrd sub mov jp lods (bad) adc mov mov cld stos cmc adc lods jg add pop or and stos rex.XB (bad) jrcxz retq cmp lods (bad) mov xor jb add lods (bad) jne xor imul (bad) addr32 jle or lock insb repnz jno out imul sub rex.RX sti (bad) lods cmpsl andl or add (bad) (bad) jl fldl mov xchg loop (bad) push scas stos rex.R insb out (bad) rex rex.WRX sub jne icebp shrb jmpq in sbb shrl adc or cmp add in loope or pop (bad) rex.WR xor push popfq sbb jrcxz (bad) sahf rex.WB sbb (bad) idivb outsl (bad) mov insb fcmovne hlt ss cwtl add rex.R movabs rex.WX scas fbld sbb gs retq adc sahf lods jnp notb add retq popfq fs retq mov (bad) js outsl adc lods sbb retq xor vmulss fiaddl js xchg mov fldt outsl cld movabs or (bad) (bad) lahf insb or iret mov rex.WRX cmp stos or (bad) in lods loop callq mov (bad) clc (bad) mov lods jnp cmpsl or fsubp imul or jl out movsl sub movabs mov lods cmp lods testb rex.WB (bad) (bad) imul and sar (bad) (bad) mov mov jbe cli sub rorb repz in movabs jrcxz (bad) outsl sub sub rex.XB add mov (bad) jo and pop xor cmp mov mov lods mov xchg xchg (bad) js lods (bad) (bad) and fidivl mov js or (bad) sbb fnstsw cmp cwtl scas mov (bad) je lods xlat addr32 mov cmp (bad) lods push push add cmpsl or lret (bad) (bad) lods test jbe jmpq stos mov cmp (bad) cwtl fnstsw adc cmp mov fsubrs (bad) pop jno pop xor insb jns adc roll adc insb jbe mov leaveq lea mov ss lods xlat push (bad) (bad) sti lods push cwtl or lods xor xchg scas mov (bad) fmulp (bad) xor mov mov loop pop (bad) lret jle sub push fs cwtl lods and xorl leaveq mov movabs pop scas gs add lods mov mov lock int jp stc orl lods fidivrl cmp mov mov int3 sbb fwait (bad) cli pop sbb adc and addr32 rex.W int3 sub sub scas or push insl or pop cltd clc mov and (bad) int jo ds sub mov (bad) xchg and lods sahf setl (bad) js adc lods sbb cli outsb iret pop in (bad) xor xor mov sub cmpsl test movabs mov cmpsb jl jrcxz insb sbb roll pop lea push scas mov leaveq test (bad) jbe movsb xchg fwait mov lahf push in pushq sub (bad) or sub (bad) pop adc pop xchg cmp retq xor lods fmuls xchg (bad) (bad) and (bad) mov enterq mov movabs add cmpsl mov adc push add repnz sarb xchg ficom adc or (bad) add stos movabs mov stc pop add movabs xchg rex.WRXB (bad) subl lea (bad) mov and (bad) add xor in scas jo test and push scas mov rex.R add mov xchg mov jno or or sub ja (bad) and push clc lods mov jno (bad) rex.WR test loop rex.XB adc shlb loope nop add scas push (bad) js rex.B add out lods mov (bad) mov pop lret rcll sub cmpsb adc cwtl and (bad) (bad) (bad) rex.RX cmp jl jle pop insl mov callq movsl (bad) adc jns lods jge in or movabs lods popfq callq stos mov jmpq jg hlt (bad) jmp sub xor repnz (bad) mov pushq retq cmpsl rolb adc leaveq add test in imul jle mov cmc and subl adc (bad) mov imul movabs sub jge enterq jnp lods xor lea out outsb lods or js fs mov jne lods cltd mov int mov add sub push cltd xor push mov or xchg and (bad) (bad) adc cmpsl rex.XB sub sub rolb sub mov clc xor sti jnp jns clc sbb mov and xor pop (bad) xchg imul lods push faddl sbb mov lods xchg and in lods int3 fcomp add mov std lods sub xor int3 lahf rex.WB int add lods xchg movabs rex.RXB fimul xchg rorb test or sbb (bad) sbb incb jmp push ss or add adc lods rcll sub (bad) push sbb fsubs rex.B cmp mov and callq (bad) add stos jmp mov pop rex.WR xchg out lods or cmp mov fiadd pop lods xchg (bad) push fdivrs (bad) sub (bad) testb mov addr32 outsl lods pushfq mov lret jbe scas jge jl xor imul int3 push loopne add jne repz sbb (bad) (bad) (bad) sbb gs movsb sahf adc pop scas (bad) and mov lods pop sarl (bad) jp in mov stos lods (bad) sbb mov lods decb fnstcw test cmp (bad) jns clc fidivl or in out pushfq ds callq (bad) add lods (bad) mov (bad) stc (bad) fldt rex.WR or mov int rex.R (bad) pushq imul rcrb imul frstor cmpsb cld mov jl (bad) xor jl sub jo and bnd add fbld push psllq fidiv stc sub (bad) (bad) lods movl insb xrelease (bad) mov sbb rex.WB cmp mov in pop (bad) pop lahf (bad) lret jl scas out (bad) mov in sub push test pop rex.X rex.B adc (bad) jb add ja xchg movsb rex.RX jne rex.W fcmovb mov (bad) mov (bad) repnz jmpq push sub or rex.WRXB (bad) mov add (bad) rol enterq lods (bad) insl movsl imul adc or add push mov cwtl lods andl jbe rex.WXB rex.B rex.WX rex.RXB (bad) (bad) and jge rex.XB scas lods jbe test icebp xlat add std mov add lods (bad) js adc xchg jmpq xchg movabs or (bad) xchg lret (bad) lods adc sti push rolb push adc cmp jns mov rex.WR pop mov and test lods retq rex.WRB sbb (bad) je sub in mov cmpsl fisubrl jp add sarb sbb lea retq push mov mov cmc mov stos xchg stos rex.WXB in lods lods rex.RXB xchg test fwait subl push mov (bad) lret (bad) jno cmp scas sub popfq sbb cmp lods push cmpsl vcmpss stc cltd rolb rex.WRXB push scas sub test fwait insb movabs clc sbb push rex.WRX jrcxz jo xor (bad) je scas movabs in jno xchg retq lods rex.WRB rex.WRX mov sar leaveq add adc leaveq lods scas out push sub int3 (bad) (bad) mov lods (bad) cmc (bad) or mov lret cmp (bad) sbb stos and cmp sarl scas negl test pushq mov sub roll pop (bad) ds cmc add (bad) shlb (bad) or xlat rep jmpq sbb jg add rclb movabs xchg addl shr (bad) (bad) add sub in retq jl loope sub test retq (bad) adc xor test shll pushq cmpsb rex.RXB sub rex.RB mov fwait push mov xchg out sub fsub ds lea vandpd jl shrb push lods and mov rex.XB jge xor je adc lods (bad) fmull sub cli xchg mov sub cmp jg mov insl jbe fldcw (bad) movabs movabs (bad) sub outsb loope adc retq lods mov test retq pushq fwait pushq lods pushq (bad) movabs cmp mov mov in mov movabs lock add mov mov pushfq adc sbb out push or fidivrl (bad) rorb scas mov (bad) insb stos (bad) scas stos movsb jrcxz xor mov mov rex.W in add lods and jp insl xchg pop (bad) movabs lods and xchg fwait (bad) push movabs mov mov (bad) sub fxch add popfq rex.RX add lods sub push mov outsl jle pop jb (bad) (bad) fisubr jmp cmp jbe mov retq enterq std scas sub rex sub cld rex.WRXB mov scas jae out test mov leaveq (bad) jrcxz push imul lods mov shlb leaveq sub lret mov lods imul jmpq fs mov xchg cs push mov sub outsl push or cmp movabs mov test mov mov rex.WB (bad) loopne leaveq lods ss add or movabs mov rex.RXB push in xchg insb lods rex.WRX (bad) jae retq je movabs add lods mov (bad) (bad) stc (bad) mov lods add xchg scas sub (bad) cmp sub mov and mov pushq (bad) xchg xchg rol rex.B sub pop callq jbe add cld cmp callq jle pop xchg jp or add test pushq lods rex.RB and fwait pop jo push in shr push rex.WB testb (bad) lock sbb cmpsb jmpq mov or sarl push (bad) sbb (bad) jbe rex.WR cmp int ficoml mov lods mov or movabs adc (bad) xor mov in movsl lods (bad) (bad) fdivrs lods movabs sbb sti mov rex.WRXB (bad) lods sti rex.RB cmpsb lods (bad) ja add lods sub rex.WX repnz int3 sub clc retq mov add movslq xchg push jbe jno rex.RB stos lock rcrb adc (bad) or xchg add pop loope xor insb and adc xchg jno mov pop out or fwait (bad) (bad) fstps movabs ja js (bad) adc lods cli movslq loopne outsb or jl xor lods lret (bad) sub (bad) rex.RB fwait push xchg lods hlt sbb stos fadds lods loope test ss lods rex.X lods vcvtsd2ss adc lods cmpsl jge rex.R rex.W rex.R rex.X (bad) and (bad) or movabs mov mov rex.WRB rex.WR pushq rex.WRXB scas stos imul rex.RXB add rex.WRB rex.XB movsb xor xchg or mov (bad) mov jo rclb rex.WRB sub mov lods movsb (bad) andl addl popfq or nop (bad) sub insb out enterw mov xor pushq (bad) lods add ficoml xor (bad) sub rex.WRXB div xchg lods adc (bad) (bad) iret mov fisubrl mov (bad) mov rex.X iret lods cmp stc pushq std adc fidivr mov sub fidivl sub or lods sarb or (bad) lods rolb outsl adc mov rorl in ds lods mov mov subl andb adc lods jne rex.WB rcrb cmc cld mov lret addl (bad) ds xor sarl xchg iret (bad) (bad) test rex.WRX add xchg lods (bad) ss pop jne scas fwait lods roll rex.RXB (bad) in lods sub mov (bad) cmp or rex.WR rex.WXB (bad) movsl test jge pop xchg stc lods (bad) lret sbb scas mov pop (bad) adc callq movsb sbb lahf (bad) sbb outsb pop (bad) jae mov lahf insb and fs jrcxz adc (bad) movabs xchg xchg jae lods xchg xchg pop rorb add xchg pop outsb jge cld out mov js imul int3 rol (bad) fiadd mov (bad) cmc (bad) stos loope out sarl data16 cmpsl scas notb rex.RB es pop in (bad) (bad) ja xchg mov lret cmpsb lods lods rex.WRX (bad) mov jl cltd test scas xor jns rex.R lock stos lods cmp insl loopne (bad) sub (bad) or adc mov xchg (bad) mov adc jg (bad) movabs and adc (bad) popfq retq lods repnz clc js nop addr32 (bad) ss sub push xor sub adc push sub fsubrl lods push imul or pop sbb fisubr cmc and gs lods hlt mov scas (bad) lods (bad) enterq fsubr std xor xchg jge mov cli pop stc adc pop pushq gs xor jle rex.WR mov add and or pushq (bad) mov rex.RB in rcr (bad) jl mov sbb jmp test movabs movabs movabs insl lret jb add movsb push lock mov cmp (bad) lods (bad) adc callq outsl mov push (bad) sbb movabs mov sarb xchg xchg mov sub xchg out (bad) (bad) or insb shrd cwtl (bad) sbb push subb rclb retq adc scas mov (bad) cmp cli mov andl sub sbb mov loopne std lods jbe mov enterq fild xchg sbb (bad) ljmp jns lods (bad) (bad) cli data16 pushq sbb stos jl pushq shrb clc xor in mov jae outsb (bad) mov (bad) jle (bad) sti mov (bad) sbb (bad) push jp icebp sub pop (bad) rex.RX and xchg lods retq sti xor adc mov (bad) leaveq mov mov rex.B loope in mov mov rcrl (bad) test cmp lods rex.RX adc retq outsl (bad) xor in rex.WR jmp mov lods xchg (bad) pushq imul addr32 sub add lods pop retq cmp cltd (bad) push loopne xchg (bad) hlt jg xchg rex.B mov cmp lret rex.WR divps and cmp lods mov adc (bad) lods rex.WR loop (bad) or movabs mov or sbb (bad) testb push sub xor outsb scas jrcxz mov add sub jle je jns sub test lods jmpq pushq (bad) hlt (bad) adc rex.R adc retq repnz add subl retq and stos (bad) rex.RX mov jbe lods pop add outsl cwtl lods in cmpsl xchg movabs sub addr32 xor cmp fs sbb out mov rex.W fs lods outsb xchg sub (bad) (bad) (bad) cmpsb jmpq cmp popfq out push movsb lods mov mov subb cli cld or lods xchg in jmp mov jbe mov cmpsb rex.WB lods add adc lods test sbb lods out jnp hlt mov repnz clc push adc and jle or rolb fdiv js lods btc rcrl rex.WRB and (bad) mov ja sub jp rex.WRB notb rcrl mov and mov int push or pushq mull (bad) cli imul ja in xchg jae or jb rex.WR (bad) push lods cmp rex.RX movabs (bad) (bad) mov lret jg (bad) enterq cltd xchg nop and (bad) rex.XB jge rex cmp pushq rex.WR addr32 jne jrcxz movabs mov rex.X data16 (bad) sahf pushq push cmc negb fldt je lods int3 sbb outsb (bad) sarb sbbl lret stos lods (bad) jbe repz out stos push (bad) (bad) or adc pushq pop add insb pop (bad) xor (bad) cmp jbe int movsb rex.WRB imul lods sar fwait mov lods mov pop add mov adc mov (bad) rcr add shrl (bad) rclb scas pushq cmpsb mul sub enterq lods or leaveq rorb sahf push rex.RX (bad) lods mov sti rex.WX addr32 mov rcrl xor mov and leaveq (bad) imul (bad) mov mov or test xchg ficomp xor mov rex.RX repnz str mov (bad) lahf xchg scas and push cmp in hlt xor xorb lods (bad) pop sbb sub xchg lods out adc adc jle (bad) movslq js adc mov mov pop lea lods xor rex.RX or sbb cmc (bad) lods jrcxz cwtl and mov rex.XB movsl je push retq sub lods sbb mov stos and rex.WR retq notl fsubs xchg (bad) loope jb int3 lods sbb sti movabs pop push test stos rol out jae insb xor rex.W xorl or (bad) push lods (bad) mov outsb push rex.X lods fwait pop fsubp add jp (bad) xor cld mov jle lods jae (bad) popq lret scas lods mov lods xchg sub movabs add jl imul xor jmpq lods lock cli fsubrs xchg add in (bad) in fs leaveq lods or rclb out (bad) rex.WRB cmpsb loope lods xchg sbb repnz jne fstl adc jae rcll jo (bad) (bad) lods xchg sub adc sub mov pop or jl (bad) scas (bad) push cmpsb adc cmpsl cld gs adc andl or mov add and sub pop pushq mov addr32 (bad) int rolb rex.WXB (bad) add jmp cmp mov push and mov (bad) sahf and add insl (bad) mov (bad) xlat push lock rex.WRXB lods pop mov imul jrcxz mov fs outsl shrd adc sbb lods out in xor adc scas es (bad) lret mov lods (bad) adc lods out mov or jae cmp add sub or leaveq jrcxz adc add clc xchg stos leaveq iret jnp sub test out sub xchg insb or cwtl lods divb jb cmpsb rex.XB add mov pushfq adc outsl movabs rex.RB lods cli (bad) cmp xor lods rcl push outsb cwtl fildll gs popfq xchg rex.WRXB mov loopne,pn or mov jae cmp retq (bad) xor adc mov xor clc rex.RX sub adc rex.WB bnd sub (bad) insl shrb (bad) or or test adc adc in (bad) pop scas jbe and sbb retq mov or flds mov jle add sbb (bad) jnp,pn repz out lods insb retq adc cmp jle cmpsb lods movb popfq (bad) icebp int and sbb xchg out mov or mov clc jmpq rex.WB sub and (bad) pop es mov sub add sub movslq adc add push rex.W shrd cltd stos (bad) shll loop repnz test xchg adc shl rex addr32 add int3 mov (bad) scas or rex.RX and (bad) fwait (bad) shr fstps pushq movabs movabs in roll sub or lods imul jle cli pop out xor std cmpsb adc rex.W mov sbb mov pop lods mov in adc sbb rex.WRXB rex.RB out scas lods mov loopne xchg lods (bad) ja mov lods sub rcll jb (bad) in mov or pop in rex.WXB stos push loopne (bad) movabs adc outsb xchg out cmp sbb sub sbb lods stos rorb rex.WRB outsl cmpsb fadd cmp cwtl popfq lods jmp and pop (bad) ds lods (bad) and mov popfq rcrl repnz fmuls movsl pushq pop xor xchg sub lods mov rorb push add popfq xor outsb pop pop in rex.WR pop mov loop (bad) jg in adc pop gs movsb sub outsb jo rep xor stos (bad) rcrl rex.RX cmp mov xor pop (bad) add lods mov mov or xor rex.WRX push loopne insb fdivrs or xchg add ss callq movabs insb rorl pop rex.WR xchg subl in mov jne hlt insb movabs sbb mov std and retq cmp rex.W push sub xor mov stos sbb fistpll rex.XB (bad) and rex.WX jno enterq popfq mov leaveq add in mov addb mov mov adc jrcxz or cmp xchg outsl mov xor push rex.WRX (bad) cmovns movsl adcl jle stc leaveq stos mov mov jl pop test ds rex.WX mov stos imul add add and cwtl (bad) jns movabs (bad) test rex.WB rorl lods adc jmpq movabs in stos (bad) callq lods shll rex.WRX cmpsl push cltd imul loope mov mov imul iret or xchg sub in subl jo cltd sbb (bad) rcl pushq jae (bad) lods pop rcrb rex.RB and and test (bad) xor mov cli jnp adc xchg pop imul mov pushq mov sbb (bad) movabs mov xor shlb (bad) cwtl scas (bad) movabs jg rex.RXB rex.WRX lods xor stos rex.RX rex.X mov jno pop lods (bad) cld mov lock pop rex.RXB icebp xchg (bad) hlt mov jl mov mov retq pop jg xchg or mov rex rex.W lods mov sbb rclb push rex.RXB lods clc pushfq (bad) rcrl (bad) outsb retq mov (bad) lods adc mov pushq mov sbb push mov xchg (bad) out or rex nop (bad) sub (bad) xchg (bad) push sub xor lods insl (bad) or lods and xchg rex.WR stos movsb (bad) mov mov rex.XB pop adc lods xor sub lods mov lahf jnp stc lods loop pop jno add cmpsb (bad) (bad) jge jmp add jnp hlt jns scas scas mov outsb (bad) cs mov jns lods (bad) fwait (bad) idiv jno loopne (bad) movabs mov push testl xor sub adc movabs adc (bad) pop cwtl faddl (bad) (bad) xchg add xchg testl xchg mov (bad) adc cld rex.WRX movabs rex.R or stos loop gs or in je lods or in (bad) (bad) sahf push mov push or pop insb test fwait sub mov xchg movabs lahf (bad) push (bad) loop lods sub stc sti mulb outsb sahf cmp and xchg mov psraw outsb adc mov addr32 lods and jle (bad) mov (bad) pop mov test loopne rcl loop sahf lods mov scas push (bad) lods mov data16 (bad) pushfq (bad) cld fsubrl adc rex.RB lock lods (bad) pop cmp adc cmpsl movb lods sbb fisubrl in (bad) lods push rex.WXB lods (bad) cmpsl data16 imul iret jne jg cmp lods rex.XB jp lods sbbl and scas scas add retq nop jrcxz (bad) retq cwtl (bad) leaveq mov insb loop js adc movabs jge jp lods (bad) movabs add pop ja jne lods xlat cld nop mulb leaveq (bad) shrd ds add stc sub cmp lods imul pushfq scas (bad) pop popfq sub andb and icebp add cmpl (bad) pop jo js cld rex.B rex.RX xor mov movsl loopne lods or orl js cli mov ds sub add callq mov (bad) nop adc loop jmp imulb jb test adc test jns and lods fstps es or lods or xchg (bad) mov lods loopne mov (bad) xchg lods sub jle lods fnstcw xor jbe jge cli test mov addr32 sub and jo cltd (bad) pop adc jae pushq sub push out add mov in (bad) jrcxz (bad) (bad) in sub rex.WR repz in cmpsb jb stos scas cmc rex.RX pop lods push mov (bad) jnp (bad) popfq cmc enterq (bad) lods cmpsl xchg add cs test mov lods int3 retq jmpq cmp loope sub imull lods (bad) (bad) mov jnp (bad) icebp lods push jg fdiv mov or hlt ss jb (bad) cmp ds (bad) mov lods popfq movabs rex.WRXB int adc sbb leaveq scas xor (bad) sti sbb fcoms scas add or adc rex.WRXB insl mov in lahf jle xor pop xor std cmc outsl sti xchg pop scas iret pop jnp jno or es rex.RXB pushq (bad) fcomi pop nop lods jg icebp or add rex.WB sub jrcxz lods and loopne sub callq lods mov jbe mov fisubr adc scas lods callq jae in stos jrcxz add stos fsubrl sub outsl iret fsubl cmp je sbb repz rex.WXB lods cld xor (bad) xchg mov rex.WR (bad) push jle lods mov movabs (bad) cmp mov pop (bad) je adc stos mov mov shl paddusb insl (bad) or lods lock mov mov in ss lahf mov scas sub rex.RXB lods mov xchg mov lock xlat lods sbb rcrb rex.WR js lods std test rex.WRXB sbb (bad) insb sub adc shlb jne xchg sub repnz addr32 cmp rex.RX es movsl subb adc rex rex.WX gs outsl (bad) (bad) push rex.RB mov sub lods sbb gs loopne cmp repz (bad) orl and (bad) fcmovnu lods rolb sub lods sbb cs adc (bad) jnp insl and lods sti callq test push mov (bad) jge xor lods rex.RXB rex.X pop cmpsb movslq lods rex.XB popfq ror stos mov lods cli in adc rcl rex.WRB lods sbb xlat movabs or sahf add test fcmovnbe fdiv adc (bad) mov or mov movabs adc jrcxz xchg mov fisubrl outsb jae movabs sub rex.B rex.WR rex.WR rex.WB (bad) mov rol cmp lods sub in cmp or sahf xchg rex.WR stos (bad) rex.WR sub (bad) out or sti (bad) push push (bad) fsubs push in jo lods movabs lods rex.WRXB fisttpl xor fwait hlt lods rcr movb (bad) (bad) sbb and out (bad) pop xchg xor lods cld adc out icebp push cmp adc jle jno sub lods and mov sti rex.WR jmpq movsb mov cmp sbb mov jbe insb rep sbb je mov adc rex.WRX rex.WX clc lret rex (bad) jnp rex.B and insb xor ja lods int3 sbb pop xchg jbe sbb xchg mov pop sti pop (bad) and jg stc hlt fwait and sbb pop jb lods jmpq (bad) lods sti lret xchg xchg and lods es adc cmp and mov (bad) hlt test ja and in lods stos rex.WXB rex.WB repz shrb lods push sbb pushq rex.WRB lock adc xlat push (bad) pop je mov sbb lods (bad) mov push (bad) or xchg movabs cmpl fsubrl and popfq cld nop retq sub rex.WRB or (bad) jae cmc mov lods roll adc cmp jno movslq in (bad) adc or mov cmp pop lods sbb movabs bnd sbb cld adc test push in in mov shrb mov rex.WRX (bad) popfq loopne mov rex.WRB adc stos rex.X or test mov (bad) or mov sti in test in and lods es rex.R rex fwait lock mov adc mov (bad) std movabs retq test mov (bad) imul rex.RX mov data16 lods test xchg retq out repnz adc jmpq fs stos adc mov callq imul mov adc iret sarb lods mov sbb mov sbb shrl sub loop jno push (bad) lods outsb movslq rex.RB sub (bad) imul fucomi frstor (bad) movsl cmp lods mov or addl (bad) loope pop rex.RB mov cmp pushq rex.X (bad) callq lahf and in movabs sub adc cld jae xor stos imul or and (bad) test cmp adc in loop insb (bad) lods repnz (bad) mov jb sub or add lods or mov in (bad) lods imul mov pop mov fsubs shr outsl or movslq stos or fsubl pushfq (bad) jg clc (bad) jno mov movslq lret movsl adc lods jl mov cltd es rcr outsb (bad) imul pop xsave sahf stc insb mov adc sub popfq lock cltd (bad) in in lahf jbe mov mul vpavgw popq or jl push jne stos jmp xor mov lods adc pop (bad) xchg push sbb mov jmp rex.XB es jp loopne (bad) leaveq movabs pop jp lods sub (bad) jnp cli ffreep sub jnp rex.X stos pop cmp imul test jrcxz sub adc mov test inc jmp lods (bad) mov imul sahf jp (bad) adc jge xchg in sar rex.X rex.WRB lods rex.WRXB adc (bad) sbb sbbl shr (bad) cmp movsb mov sub leaveq lret outsl jns push lods test xorl out ja lods push lods and addr32 xor mov (bad) stos xchg incl add idiv adc rex.X mov jo movsb pop (bad) outsl roll lods movsl in sarl (bad) rex.WXB xor cld or rex.B (bad) mov jo out jge push js jp enterq (bad) movabs int3 mov rex.RX lods popfq (bad) lods (bad) sub (bad) rex.WR stos rolb jne (bad) retq popfq (bad) and (bad) out and imul and jo rex.WRB scas out stos (bad) fldt enterq (bad) imul repz lods mov scas rex.B (bad) incl loopne leaveq orl mov lods rex.WRXB out or mov test movsl (bad) add sbb push or std xorl adc sub mov jo rex.RXB pop out rex.WR mov sbb add pushfq icebp pop mov rex.WRX pushq scas retq and ds hlt or (bad) jno rex.WB addl xor shll cmp fcmovnb test add rcrl (bad) xor jge jnp es xchg outsl (bad) or sbb pop cwtl mov cmp lods cld fs rex.XB (bad) test je stc scas mov outsl movslq retq lods and jge push icebp lods rex.WR mov mov fs or xorl xor lods shlb mov or faddl (bad) scas jmp in xchg add lods (bad) out in movabs cmpsb sub lods mov xchg mov (bad) sti (bad) lods or (bad) adc lods punpckhwd xor adc pushq (bad) jns lods addr32 adcl mov cmpsl mov mov cs and (bad) std and insb repnz out out lods sbb lock (bad) negb or add xchg lods test out sti sbb adc and (bad) scas or rclb out in fdivrs loope sub mov pop imul cmpsl fcoml adcl fdivs sub callq (bad) movslq out cmp lods (bad) and mov movabs fwait rex.WXB cmp and movabs pop mov xchg test je mov lods cwtl (bad) add outsl movabs rex.W repz retq int (bad) or fcom in cmp jo mov mov imul movslq insl jns repz push (bad) adc mov sub (bad) in lods scas cli stc rex.RX (bad) (bad) xchg lret lods mov add and subb movabs (bad) je iret loopne scas imul pop push pushq (bad) jmpq movsb scas jno (bad) sti rdpmc fldt cmp lods pushfq cmp (bad) (bad) int3 movabs push lods (bad) and nop cli test sub fcmovne mov mov pop scas roll push xchg retq push repnz lods xor fcomps rex.XB mov xor xor jbe lods cwtl push icebp and rex.WR sti leaveq (bad) outsl lret xor lods adc iret lods shll and jmp rex.WR or (bad) callq cld adc stos lods nop sub (bad) lock fcmovnb (bad) mov lods test (bad) adc loop or mov roll or (bad) out adc xchg lods xor mov rolb sarl ds and or movabs lock cld movabs mov (bad) (bad) test and lods popfq jne xchg jbe popq mov xlat rex.WR mov lods test cmp negb sub jl in sahf cmp lods loopne imul jl enterq pop (bad) retq pushq pop sysenter mov (bad) cmpsb lret (bad) (bad) sub int3 jo movb rex.B rex.WRXB cmp insl test sub imul mov xchg cmc xchg sub movsb jb (bad) rex.WR mov (bad) fwait sti lods push in xchg (bad) jbe xlat lods mov xchg rex.WRXB scas sbb jno (bad) ja mov rcll sub loop cmp jns cmpsl xor sub (bad) (bad) hlt adc in insl jno movsl (bad) jae push jnp mov rex.WRB loope lods frstor (bad) push lods cld and rex (bad) cmp jp (bad) pop pop lret (bad) lods sub mov jl (bad) lods movabs xor pop fst mov xchg mov loopne lahf lret (bad) hlt movslq pushfq rex.WRX lods mov and lods in retq pop pop mov pop sub sub cs mov icebp sti mov out (bad) outsb lret push pushq (bad) and in hlt add jno ffree xchg lods ja or sahf movsb scas jl (bad) (bad) (bad) insb rex.X xor push lahf jl rcr sub mov icebp (bad) pushq or xchg ja cwtl jg jrcxz sub mov rep (bad) adc (bad) (bad) xor cli movabs movabs lods jrcxz (bad) jge and or rex.RX sub jo (bad) pop (bad) lods pop xor mov (bad) lods pop and out sti add jl movabs cwtl shrd movabs cmp lret (bad) std jrcxz xor jae push add push lods sub mov lods pop rolb lret movsb and pushq push (bad) lods lods xchg jge pushq cmpsb fsubrs leaveq (bad) rep in pop enterq scas lods out mov mov push insb int3 rex.WRXB fdivl (bad) xor movabs in and xlat pop lods sub (bad) add xchg (bad) xor sub mov movabs orl rex.XB adc mov (bad) xchg (bad) mov sub lods loope and (bad) (bad) sahf insl sbb sub adc idivb rex.WX cld jmp (bad) rex.RXB retq (bad) sbb lods xchg cmpsl jno stc xchg in scas fbld pop movabs add lods insb adc lods or mov mov (bad) cmc and out ficoml leaveq lods (bad) rorb ja stos push mov (bad) mov adc xor js (bad) (bad) (bad) shlb cld push jmpq mov clc (bad) mov shrl jp rex.WXB xchg rex.WRB sbb jns mov sbb std sub (bad) adc xchg scas (bad) add fwait or callq fcmovnbe pop xor push imul data16 test mov fwait xchg test and int3 pop sub es push jmp sub (bad) je cwtl loop adc adc mov lods xchg xchg fs jno cmp pop xor scas jge cmpsb lods xchg ficomp pop sub mov add rex.WB data16 cltd andb movabs add lock mov push incl add movabs setae (bad) stos pushfq rex.X cmpsl mov cs push pop clc loopne xchg scas cmp push sub outsl or mov mov jmp loop and callq lods cwtl (bad) lods jns retq (bad) loopne lods rex pop xor jg lods rex.WR mov (bad) push add jno jrcxz,pt lods fsubs rex.WRB and movsl rex.RB popfq rex.WXB scas insb imul cmpsb int add (bad) xlat rex.RB std rex.XB lods ja xor add (bad) movslq (bad) sbb jnp fmuls cmpsl leaveq (bad) callq cltd lods sub mov jo mov js lods jrcxz out adc fnstenv rex.WR mov ja add fisubr jge xchg lods test and (bad) scas mov jne rex.WX cmp sbb jo (bad) mov sbb xor in test xchg adc and jrcxz sub pop add movabs ss lods xchg pop (bad) xor pushq rex.RXB int jne cmpsb (bad) stos and rex icebp lods and cmpsl add cmc stc rex.XB rex.B add mov repnz rolb lret cmove stos fs outsl mov mov lods enterq popfq cmpsl rex.B jmp xor loop and outsl adc pop and hlt xchg and movsl and lock (bad) jbe jno adc jmpq sub addr32 in xadd lods rex.WX rex.WRXB repz faddp mov or int xor lods rex.WRXB js iret rex.R (bad) repz popfq mov rex.X ja mov scas retq lea xchg mov mov (bad) test mov (bad) mov shll (bad) sub jo (bad) lods out lahf adc push sahf test rex.R jnp (bad) jns jl mov fidivrl imul jg xor or movsb lods adc adc shrl push movl mov adc outsl mov je sub (bad) pop loop fidiv mov in adc movsb mov sbb (bad) repz mov sbb imul cli sub rex.RX (bad) stc xor popfq retq lods xor pop or callq cs int3 test in mov sti lods jo cltd (bad) neg in lods mov test rolb sub sub leaveq insl scas rex.WRB or mov mov sti mov lret jrcxz in rex.WRX push (bad) mov sarb add enterq sbb imul jo lods shlb movabs in sub jb cmp lods fcompl mov jmpq lods insl sub pushq adc imul lods or (bad) fucomip pop fsubrs out mov add in insl je (bad) and and (bad) pop mov mov (bad) jbe cltd adc rex.WR movabs leaveq mov xor retq ja adc mov or movabs or jle sub adc jno cli out in adc retq fcoml (bad) lods repnz je movsb rex.WB mov sbb lods (bad) sbb fdivl cmp pushq xor stos rex.R rex.B push rex.WRB in sub loope sub mov fldcw mov andl jo subl jg jbe adc (bad) (bad) pop push xchg (bad) addr32 mov sub sbb test in mov repz pop rex.R adc pop loope lahf push lods or ja xor (bad) (bad) mov jmpq mov cld (bad) xchg lods pop rex.R vprorvd lods (bad) mov xchg lods and fmull add popfq fdiv adc or or iret cmp xchg lods enterq (bad) idivb and sub pop (bad) lods clc jo xchg (bad) rex.RX imull rex.X cli mov rex.WRX jmpq movsl jb pop mov xor in pop rex.RXB rex.WXB lods mov hlt cmpsb or sti rex.WR ja pushq je xor push pop lods sbb pop data16 cltd fwait repnz (bad) or out stos sub xchg data16 pushfq rex.R (bad) cli in lods xor xlat and scas js scas rex.WB push push lret (bad) mov loopne rep (bad) and (bad) psraw (bad) cmp scas mov sub and mov lods (bad) jnp mov mov pop push imulb jmp lods insb shrb rex.WXB mov js lods movsl add imul repnz mov push mov addr32 push fisub in jae sbb outsl (bad) push (bad) leaveq lock mov rex.WX mov pushq (bad) scas rex.W jb vunpckhpd stos mov fdivrl add movsl add clc xchg sbb mov pushq fisubr rex.WB pop pushq add vpunpckhdq (bad) jg lods cmc jb sub sbb pop movabs and jo int3 rex.WX rex.RXB xchg jb icebp cmp stos (bad) jbe cmpl ss (bad) (bad) sub jl add retq xor movabs (bad) movsl jge lret mov sbb lods (bad) ds add mov xchg pop rcrb sti (bad) fadds lods js,pn jae cmc jns (bad) fistpl rex.WR repz sbb xchg (bad) jo mov lods mull mov lods mov cmp jae (bad) retq gs rex.RXB movabs loope cld mov (bad) jge lods xchg cmpsl xor int3 jp sti lods xchg xchg out add fwait sub adc (bad) test (bad) (bad) mov (bad) jg std lods (bad) rex.WXB mov loopne mov jrcxz insl test mov cwtl or jns jp rcrl sub lods iret xor subb sub (bad) clc (bad) imul movl xlat adc lods sbb pop cmp xchg movsb rcrl and (bad) lods (bad) movabs and pop and movabs adc lods jg adc (bad) (bad) jno sub (bad) and in lods adc (bad) lahf fbld cmp pop lods mov in outsl and sbb retq callq lods test (bad) shrl cld rex.XB lods repz out mov fbstp (bad) sub sub jg insl lods sahf jl push ljmp rex.XB idivl xchg cmp cmp scas and fnstenv fistpl in (bad) pushfq fwait lods rex.B js push xchg and lods sub popfq (bad) mov mov xor lods in loope cmp (bad) lods lahf rex.R lods mov pop rex.X movslq pop lods cmpsb xorl pop cld addr32 (bad) movabs cmpsb add mov push lods (bad) jns xchg mov mov push repnz (bad) (bad) and int3 shrb rex.WRXB jo mov mov sahf jmp rex.W mov lods sub leaveq jae stc (bad) mov (bad) (bad) lods callq cld adc jno in add lods pop jb movslq (bad) outsl xchg roll mov push mov mov rex.W or callq and cld (bad) fsubrs pop in stos lods scas in popfq rep rex (bad) lods cli (bad) out jo clc movabs sub js lods (bad) rex.RXB stos sbb lods cmc xchg test xchg js movabs (bad) mov nop test rex.B fldenv lods (bad) pushq mov lods pop pop scas ds cmp jp lock loop lods sbb fnstenv cmp xchg lods mov in or movsl (bad) mov mov lods (bad) (bad) sbb cwtl rex.WB lods push pop or cli jae in sbb lods and loop adc lods sub and repnz xor sub xchg int3 imul (bad) mov push testl test lret ja xchg lods cmpsl mov (bad) rex.XB jo rex.RB (bad) retq in push mov imul icebp lods cld sbb mov lods test iret in nop rex.WX mov shrb lods mov outsl add lods add jge lods fadds jbe mov (bad) sbb or (bad) mov xor (bad) lods mov pop rex.RB lods (bad) idivb or push shlb xrelease lods (bad) mov orl jrcxz xchg add rex.WRB add (bad) sahf stos lods and and sti lods xor xlat or add add xor rex.WRXB lods movsb jmp adc rex.WXB lods (bad) (bad) in and lods rex.X outsb es cmp pop rex.B (bad) movabs pushq lods orl or stos rex.WRB or (bad) cltd fwait ror mov div (bad) mov lods movsl xchg (bad) adc imul cltd (bad) and in test insb mov jp mov lods sub (bad) pushfq (bad) adc xchg mov shll rex.XB stos lods fs jle addr32 lods cmp sbb pop rex.X pushq enterq sub hlt (bad) lods xchg test popq push lods stos push fldln2 mulb or pop mov lods and jnp sub lods jp xchg mov test rex sub sub add jmpq lahf (bad) cld jl or loope mov adc sub mov nop test (bad) add decl pushfq pandn in and lods and iret fstp (bad) insl lods xor ja cs hlt adc cmp lods insb xchg pop mov or add jmp jae mov push outsb xchg imul (bad) add lods cs insl push rex js loopne hlt pop (bad) lods ffree lods or imul (bad) rex.WX sub cmp movslq mov xor pop loop std movabs enterq imulb shrb jns movslq sub (bad) je mov sbb addr32 push add (bad) sbb stos std xor (bad) retq lods movabs leaveq jmpq or (bad) (bad) sub mov and movabs push and cmpsl data16 (bad) test pop sub fisubr callq add imul sbb mov mov adc movabs jbe sub push mov mov iret test mov xchg (bad) icebp lods andb movsb movabs subl or scas push orl push in mov retq stos imul rex.WR sbbl rex xor (bad) pop fwait adc lods (bad) in and rex.WX (bad) xrelease pushq lahf adc shrb (bad) jg mov int cmp lods or add scas vpand (bad) (bad) mov leaveq (bad) rex.WR pushq stos rex.RXB add sti jae repz cmp adc (bad) retq in out (bad) movabs rex.W rex.WB rex.WXB movabs shll lods sub imul cmp in insl outsb cmc cmp in rex.X mov mov mov rcl mov rex.RB xchg insb cmpsb divb lods mov addr32 fcoms add pop jno or outsl scas imul xor js lods sbb scas (bad) mov clc lea add sub jle lods mov jb mov rex.WXB (bad) movsb sub or adc je icebp jmpq mov hlt std (bad) cwtl mov (bad) xor mov imul pop fsubrl push and sub (bad) imul rex.WX repnz xchg pop ja mov lods jb mov or lods xor retq imul movabs insb sub or mov jo cmp add cmpsl xlat pop lods xlat or (bad) cmp lea fisubr fildll sub (bad) lods shrl cmp stos mov push mov jge jns sub mov out rex.X fwait jnp mov jg scas mov mov (bad) in mov outsb (bad) sub stc lods (bad) cli (bad) rex.W addr32 idivb pmulhuw adc loope add outsl cmp add rex.X movabs lods out add (bad) (bad) (bad) xchg jns and mov jg push pop test sbb bswap lods rex lahf xor pop push lods pushq in psubusb scas jbe scas (bad) mov stos repz in add sub add pop sbb jno adc cmpsl sar lods sahf sbb sbb jg lods outsb adc int3 pop lods jg or (bad) (bad) loope lods mov mov scas (bad) fnstcw sahf xchg mov pushq xor clc sbb mov int3 rex.WRX lods pop add and push decb sbb sbb mov in rex.WRB lods (bad) xchg mov mov sbb sub fucomi xchg sarl jmp sbb xchg in (bad) (bad) pop xor movabs sbb jb ss stos xchg lods add pop adc mov mov add enterq jmp (bad) fidivrl scas sbb sub mov (bad) and ss cmp mov lret (bad) enterq sub (bad) mov add (bad) outsb jb mov movsb hlt mov pop retq shlb cmp and mov (bad) add and (bad) (bad) jno jl (bad) (bad) test mov and sahf sbb add out (bad) rex.B or xor mov cld std (bad) rex.WR lods testl (bad) push enterq lods nop pop movabs lea lods adc stc stos (bad) fnstsw (bad) shr (bad) push clc xor mov lods sbb or icebp fwait callq (bad) lock rex.WRX mov cmp rex.WXB push test or lret mov lods rex.WR (bad) rex.B lods movslq rex.RX cli lret lods cmp and lahf and or sbb jmpq fsubrs xor jp lods mov xchg (bad) add test repz rex.WRB mov fbld sub cmpsb lods outsb cmp stc add or lods adcl in mov mov xor lods jae xchg xchg mov (bad) cmp mov stos lret jbe fsubrl test sbb rcll mov sarl rol in rex.WX or lods pop popfq leaveq rcr callq add xchg adc pop movsb sub outsl in and std (bad) rex.WRX shlb movabs or imul out (bad) mov popfq sbb mov cltd adc (bad) (bad) mov (bad) and (bad) mov pop push xorl lods (bad) or loopne retq and pushq (bad) loop stos lods enterq rorl movabs repz std cmp (bad) push subl adc mov mov (bad) xchg stos cs hlt push mov (bad) adc jbe cmp mull sub adc sub outsl movabs mov mov shrl pop data16 (bad) add pop mov lret jmp and rex.WXB mov (bad) and add int3 cmp (bad) add rex.R lods outsb sbb adc jle lods rex.WXB pushq push lods xchg xchg jno jbe in loop (bad) lret lods rex.X fist pushfq lods (bad) xor stc or movabs subl (bad) (bad) sub out mov cld rex.RXB movslq (bad) mov pushq rex.WR mov pop (bad) (bad) lods pushfq or push in mov adc jge rex.RXB cmp pop sub jo (bad) mov je in or (bad) xchg test (bad) jbe (bad) lods (bad) sbb pop in mov add lods (bad) (bad) hlt (bad) clc mov stos sbb jge in (bad) sbb sub (bad) insb lret lods xchg rex.RXB stos stc adc test lods pop cwtl sbb lock or mov add jrcxz gs jl pop adc shrl (bad) fdivs rex.WR cmp fld jo (bad) (bad) (bad) (bad) movabs mov adc mov lods (bad) scas sbb rex.WXB lea movabs cmp cmpsl and data16 add fdivl decl std push jns cld (bad) rex.W jmp (bad) mov fucom fwait lea shll or lods pop out hlt (bad) sub (bad) iret mov mov lods jmpq or sahf adc movsb rex.W (bad) cli mov retq lods pushq pushq push add jno lods cld and rex.RXB or (bad) rex.X gs (bad) outsl test fwait adc jbe cld xchg jg mov adc movabs (bad) xor imul jmp roll xchg pop outsb mov mov or xchg xchg xor mov mov iret pushq rex.X in movsb sbb (bad) fiaddl add xor or stos test sub loope pushq rex.RXB mov insl (bad) mov jrcxz (bad) (bad) scas jl lods xchg jae sub lods loope mov (bad) xor test es mov fild cmp cmc xchg mov sub (bad) cld (bad) or lods jbe loop js fisttpll sub lods retq xor je pop (bad) xor int3 (bad) jb cli rcrq jge stos imul outsl insl mov add sub pushfw cmp lods lret jp xchg cmc hlt test or sub clc jno mov outsb xor fimull lods in sub insb adc (bad) stc add sarb movabs (bad) sbb pop sbb and sahf rex.R outsb rcr jnp lods mov (bad) callq mov rex.X cwtl xchg cs pop jne pop lea sub sub adc jb callq cmpsb mov nop shll mov sbb iret in test shrb (bad) mov scas loop ds (bad) or lods cli pop add mov sub rclb ds imul in retq outsl movabs rex.RXB push cltd adc (bad) mov movabs std sbb and repz sbb movabs or (bad) (bad) fistpl sbb lods mov enterq mov mull stos mov sarb lea retq addl lret jns rclb lods jb leaveq xor and and sub mov sub mov jb rex.WB ds out negb cmp lods xchg (bad) add mov mov cld pop addr32 movsl retq frstor rex.XB (bad) mov sbb sbb xor (bad) cmp fildll lret lods push std repz lahf sbb stos mov sbb cmc stos lods add (bad) test lods rex.RX adc in clc sub lods int3 mov (bad) adc jae pop jl lods movabs push clc test je stc mov (bad) stos xchg (bad) (bad) adc rex.R ss sub rex.WRX lods rex.WR outsl adc xchg jrcxz pushfq (bad) jbe add subl cmp jl lods rex.W cwtl rex.XB jg and (bad) cmp adc (bad) sub cmpsl sarl (bad) push cli lods pushfq add shl jmp sbb jnp scas mov rex.XB sub mov (bad) imul loop retq pop jae out adc rex.X test or cmp push sub or lods (bad) sbb lahf in and insb sbb mov nop stos cmp push cmp sub fcoml cmpsl es (bad) pushq jle scas pop jne out sub jnp sar mov retq sub xor (bad) lods lods xchg mov fldt jo sub sahf or jl ds xchg pop jrcxz lods cld lea and orl mov pop scas cmpl setle lea addl mov (bad) clc test xchg or jo mov rex.WX push scas cmp (bad) fnstenv xor xor movsl xchg cli push icebp sub xor or int jnp rorl xor lods mov xor lock pop or cmpb sbb (bad) cmp add lods and push xchg in rex.WRXB add adc sbb mov rex.WRXB rex.W fistpll (bad) incl mov or and stos (bad) (bad) (bad) jo loope mov gs lods leaveq and insb (bad) (bad) rex.RB lods adc rex.RXB xor mov (bad) stc nop sub and lahf imul cmpsb fsubrl rex.WR mov (bad) movabs (bad) sub jge push repz scas jmpq push scas lret movabs or sahf leaveq push lods rex.WX and int (bad) mov sub xchg lods xchg js mov adc scas sbb mov imul movabs lods scas insb je (bad) xor lods mov int adc rex.W in addl stos stos test stos push (bad) movabs mov lods sub lret sub in test rex.WX (bad) jnp lods push (bad) pushq push lods data16 add lock sub mov or ds (bad) sub movsl sbb lods sub test scas jns out shl mov (bad) push and lods cmp sub fidivr mov in (bad) lods (bad) and (bad) (bad) rex.WX push negl rex.WR mov lock imul imul (bad) push lods ss rcrl pushfq or mov js out jmpq or sahf jl xor jae in movabs (bad) cmc stos (bad) xchg push adc cmp mov (bad) lods (bad) pop movslq leaveq test lods retq gs xchg lods movsb add xchg sahf (bad) jae scas test (bad) int scas jrcxz adcl cltd (bad) mov std mov lods (bad) data16 (bad) pushfq cli rex.WRB sahf pushq out fcomps movslq movabs test jg jmpq lods jl xor test shrl mov adc push in sub sub fs lods out mov out stos std (bad) (bad) (bad) (bad) mov callq (bad) scas add lret (bad) (bad) sbb pop sbb xchg jle or xorb rex.WXB rex.WR mov mov outsl lret test test jl out imul jmp retq push (bad) xor xchg fsub rex.R addr32 fucomp lods mov mov (bad) (bad) pop rex.WR lods (bad) movsl fnstcw cs jg lods cmp push rex.X cltd lods incb icebp movabs (bad) idiv jrcxz insb lods fwait lock (bad) pushq in (bad) xchg (bad) mov rex.WR add mov (bad) movabs xchg scas nop xor (bad) adc stos (bad) mov lahf loopne (bad) or lods xchg push xchg pop (bad) movsb add jmp sti sub mov scas push sub cld addr32 adc pop xor (bad) pop mov (bad) lods adc ds (bad) lods or and and lock (bad) sub xchg sbb stos fidiv mov cmp insb push mov fmul fist cmp outsb loopne imul jrcxz xchg sub fdivs lods jnp pushq sbb or and rex.WRB rex.WR xor insb and stos rex.RB (bad) out pop sub or add push sbb fisubrl adc cmc mov cmpl insl sbb xor (bad) in mov loopne (bad) scas movsb shrl sub mov jmpq pushfq fcmovnb imul adc jne out (bad) or cmovl pop add lods add pop or xor movabs lods clc pop imul lods xchg int3 mov push loop jne mov (bad) je and lods mov icebp xchg callq rex.WXB xorb test shr sub popfq pushq cltd add rex.WR jl,pt leaveq fisub pop lea and pop retq mov gs (bad) in lods stc stos and incl loop lods imul (bad) (bad) mov sbb (bad) scas mov clc jnp fsubrs sub sbb movslq lods cmpsl iret pushq cmpsb jle add push jo xor (bad) scas callq add mov int3 rcrb xor gs pop jl lods cwtl mov movabs (bad) sbb stos fwait je xorl shlb mov rex.WX idivb (bad) nop movabs lret icebp cmpsl test sarl cmp cmp pop sub (bad) sub cmp stc lods mov lods cltd out rex.WRB fwait cmovbe int out (bad) jno rex.RB rex (bad) ss xor out add pop xchg jb retq sahf callq enterq pop jae jg in sbb sub push and pop fs out pushq mov xchg lret xchg xchg (bad) push cld fwait sub cmpsb iret cmc (bad) shrl addb fsubrl cmc jle xor lods (bad) iret pop cmpl lods ds rex.WXB and rex.WRB pop rex.RX fild roll rex.RXB push shrl rcr sub movsb jno adc lahf (bad) lret xchg (bad) or (bad) (bad) sbbb cmp rex.RXB (bad) mov (bad) mov sub mov incl movabs push jae cmpsb lods add jne xchg mov jg mov je sub repz jb rorb lea pop mov lods add xlat shlb repz (bad) push vxorps mov mov iret js adc sub fisubrl fdivs lods (bad) sarl lods sub or fnstcw push lods push pop out adc mov cmc enterq retq scas sbb pop sub fldt pop retq mov rex.RXB icebp (bad) cltd imulb (bad) xchg pushq test scas lods rex.RX add adc xchg fldt enterq xchg outsb mov jg sbb and sbb shr in cmc adc shrb outsl out lods repz scas mov popfq mov rex.WRB in fidivrl cld or (bad) cmpsb cmpsl stc add jne or cmp lods adc jnp cmpsb (bad) push movsb jo and or jrcxz add rex.X mov paddusb lods leaveq (bad) movslq rex.WRXB sub int and add (bad) sbb mov in rex.WB sbb cmpsl (bad) (bad) lods push (bad) mov add mov lods sahf hlt addr32 rex.W sub data16 rex.WRB sub in retq mov mov scas jg cltd mov jmpq lods mov xchg (bad) push in repnz movsb out xor out cmp scas jns rex.RX sub lods stc add outsb mov and outsl jnp lods add mov rep scas sti cld pop imul cmp fldt sub lods mov mov sub mov sbb sbb (bad) (bad) pop lods and push push movabs (bad) mov mov (bad) (bad) mov rex.WRB pushq callq scas cmpsl fbld or or scas callq in xchg lods push fisub cmp (bad) mov popfq (bad) jge add and sti mov cmp fdivr (bad) jge clc jb (bad) sahf stos sub in sbb xchg iret lods jno jbe xor lods (bad) mov (bad) (bad) popfq (bad) sahf (bad) lods pushfq addr32 pop mov jns xchg add je ja sub xor fsub rex.RX shll xor mov shrb (bad) (bad) sti (bad) sarl jne movslq lods shlb lock cltd (bad) in or scas hlt pop xchg (bad) outsl lods iret pop and gs cmc push lods loopne mov stos movabs cmp adc fnstcw xchg shrl test imul sbb lods vrsqrtps mov jmp stos xchg push testb cli rex.RX (bad) rex.WRX (bad) pop stos fs data16 scas jge roll sbb ja and mov cmp (bad) lods je insl rcrl xchg add insl and lods roll (bad) sub lods jle sub rex.B or imul rex.WRX stc lods pushq xor (bad) lahf pop loopne sbb shlb sub or in cmc movabs stos xchg in and adc cmp sbb (bad) fcmovb sub pushfq add rex.W insl and enterq (bad) int cmp xor mov sub adc pushfq lods (bad) lret xor cmp insl jb (bad) add (bad) mov rex.WRB gs adc scas and pop cmp movsl xchg pop lods (bad) adc sbb mov xorl lods rex.XB mov loope lret mov cmp jno push lret repz add sub pop rex.RXB jo imul jae jo stos xor rex.WRB xchg add pushfq enterq cmp test (bad) (bad) lods xchg movabs jns repz cwtl cmp rorl test cmp shll lods out push test mov cmp sub in cmc sub rex.WB lods imul scas movabs rex.RX mov (bad) push jo and (bad) or std and mov sub (bad) js lods mov mov jne sbb movabs cmp imul je lods stos movabs mov adc scas pushq mov in lods xchg loop add lods cld movabs push pop (bad) adc rex lock out mov adc add scas sub fsubr sbb insb jno sbb jrcxz lods xchg jo sub movabs rep (bad) sub prefetch or mov (bad) jo jl lods (bad) (bad) es adc mov pop retq add movabs push enterq jb jne lods loope rex.RX (bad) in rex.WX (bad) mov add jl adc shll push lods pop jbe lahf retq out mov fs stc cli jno stos xchg mov movabs sarl lods rex.WB jmpq jo or rex.RX lods push fs or add rep sub test test (bad) in (bad) adc leaveq rex.RXB repnz lahf mov lods rex.W push adc in mov rex.XB jne lods sub mov fldcw jrcxz repz jns lods sub sti pop fs lods (bad) out (bad) jae pop jp movabs sbb cmp (bad) mov test mov pop leaveq jno addr32 fs lock (bad) (bad) pop rex.RXB adc (bad) sub lret mov leaveq (bad) (bad) cli mov mov jg lods or movabs pop (bad) adc cltd pop cs xor (bad) (bad) sub xchg pop xor push (bad) je (bad) cmp mov rex.WRXB ja scas push (bad) push jp sbb mov pop movabs mov addr32 (bad) xchg lods pop clc lods add lods ja rex rex.XB stos xchg jb mov stos cli push lods (bad) rex.WRXB sbb pushq retq data16 pop sub jg lock xchg jo and movsb mov and rex.RXB stos iret rex.RX pop sbb test retq push std jno and jb int3 enterq subb stc jp cmc push xchg adc or add mov (bad) lods push xor test and fisubr jp sub rex.WB mov or (bad) jl add test loop lods (bad) (bad) cli out lahf cmp xor (bad) divl rclb lods movabs jmp cmp mov (bad) scas ja ror jle xchg stos lret rex.WR int3 pushq cmpsb push cmp jg (bad) movslq (bad) lods pop xchg imul pushfq sbb cmp scas rex (bad) rex.RB rex.WR cltd lods jbe (bad) and lods jmpq (bad) (bad) out lods shr add subl in test pop xchg lods movsb mov jb mov scas js outsb mov enterq (bad) stos (bad) cmp rcrb (bad) cmc (bad) icebp pop lods cmp int jg jl loop lods idiv (bad) adc cmp fdivl mov mov out (bad) cmpsl sbb in leaveq mov jg and mov mov lahf cli in test (bad) jmpq stos push rex.RB rex.WRX shrb lea lret and lods ja mov insl rex.WR push (bad) mov shlb and lret lods mov movb rex.W (bad) add mov lods (bad) (bad) adc movslq mov sub mov rex.X (bad) or scas lret mov jnp or mov (bad) cmp (bad) out test cmp negl lods xor cltd fdivs loop rex.WRX add rex.W mov xor notl xchg fadds in rex.RB in stos (bad) int sub js rex.WB (bad) std movabs icebp imul (bad) xor (bad) lret (bad) insb mov push or add lods fldcw scas sti xchg pop mov loop in xor pop xchg retq lods (bad) in int3 cmp (bad) cmpsb jbe loopne and pop retq test (bad) push sub movabs rex sbb je rex.WX xchg (bad) push fs lahf enterq fimull xor repz in shlb es pop push pushq cmpsb pop adcl cld (bad) stc cmp lods pop outsb jnp lock (bad) mov or lods (bad) cld loopne subb adc fbstp mov xchg insb jne stos xor rex.WR mov adc jmpq lret (bad) test push mov jmp adc mov popfq lods fwait jle mov (bad) out sub rex.R rex movabs xchg out rex.WRXB xlat orl pop cmpl xchg fwait lods (bad) sti (bad) lret mov rex.R lods mov jmpq pop mov sub int3 nop idivb fisubrl movsb test std movabs add rex.W rex.B lods mov mov js cs mov (bad) (bad) out and insb add and je xor fcoms fidiv (bad) (bad) loopne clc lods jo stos xchg mov cmp out push (bad) lods and sbbb rol ds xor fdivrs cmpsb scas xchg push (bad) test sbb leaveq (bad) lods clc mov xlat movabs cmp jno lret xchg push jmp mov fidivr or cmc add jg hlt mov pop imull pop adc std sbb (bad) cld je lods jmpq push jne js lods sahf insl mov mov adc sbb fimull mov leaveq out add mov (bad) (bad) cs and hlt sub fcoml scas lret add or (bad) movabs lahf bts mov out pushfq loope movsb jrcxz jl and sub ds jp lods (bad) incb lods addr32 in xor enterq movabs sub mov (bad) (bad) adc adc lret and cmp add (bad) idivb repz and pushq lods fisttpl mov test (bad) sbb push in enterq mov insl or cmp xchg lods or fldlg2 lock fildl in (bad) (bad) mov xchg shlb mov push cs sub mov rex.R rex.WRB lods ss jae js rex.WRB push imul cmp lods add cmpsl mov (bad) (bad) ficom (bad) mov movl jns pop jle fadds add mov jmpq orl movabs adc sub pushq mov xor adc mov mov shlb rex.RB popfq cmpsb in lods cmp fisttpl je cmpsl addr32 cmp fiadd loopne xlat clc (bad) test insl or (bad) sub (bad) mov fildl lods rcrb in xchg jp rex.WB xor test mov mov add lock sbb lods ja jg jb jbe scas imul stos (bad) adc (bad) fsubrl pop leaveq jle int3 push xorl (bad) cld lods (bad) ja cmpsl movslq cmp rex test movsb stos jne in (bad) mov retq jle sbb (bad) js sti lods mov jnp mov cmpsb jb and movabs mov adc lods adc in rex mov je mov out mov lods mov jb push test lret xor (bad) mov push adc retq lods adc clc push cltd int pop callq in rex.WX sarb mov (bad) mov mov lret xchg insb in loop cltd out lods rex.RXB rex.WRB rex.RB repnz lahf jmpq sub rex.WB and data16 xchg scas (bad) lods cld jno rorb add or rex.WRX sub mov rclb lret rex.WXB pop xchg lods mov out shrb ja bswap add push imulb lods mov pop testl imul lods cmp mov add rex.R jo sub stos pop orl out xchg out hlt rex.WR rex.WX faddl stc (bad) xor shrb adc xchg lahf out shrl retq (bad) test (bad) lods lret xor lods (bad) lret in fiaddl (bad) xchg (bad) sub jl (bad) jmp cmp jmp jp movabs (bad) push jae mov pop cmp (bad) fldl xor xchg mov sahf lods jle mov (bad) fs pushq mov sahf mov (bad) lods or cmp test lods loopne rex adc xlat xchg cmc pop (bad) sub stos mov (bad) mov nop cmpsl xchg (bad) rex.XB icebp mov cmp xchg cmc pop scas xor rex.WXB xchg sub adc test enterq insl mov sbb loopne mov jge jmpq gs out (bad) (bad) cmpsl sbb imul jrcxz (bad) xor lahf cmc (bad) jne or mov or fwait (bad) (bad) mov rex rex.XB sbb loop adc xor lods (bad) add jb add mov cmp xchg rex.WXB jrcxz fstpl xchg std jl stc xchg mov movsb int3 rex.XB movslq cltd cmp andl or sub adc movsl int sti jge hlt (bad) or mov mov sbb lods or int (bad) mov scas adc mov sub movabs lods mul pop (bad) rex.B lods ja xor lods sub pop rex.RXB loop out adc pop sbb or lahf push (bad) loopne jne leaveq (bad) fistpl (bad) adc sahf setp int mov movsl mov (bad) imul rex rex.WRX std and scas cmp addr32 sub mov adc (bad) insb shr xchg or lods in mov lret rex.R xor addr32 ja lods jne insb movabs fldcw scas mov sbb stos lods mov xor push xchg and lret lahf shll imul xor mov movabs lock mov adcb loopne cmp sar andb jmpq pop xor (bad) push stos jp rex.WX add xchg mov and sbb push or (bad) loop (bad) xor shll sbb mov lea lods sbb imul xchg outsb and movsb rex.WRX lock cli imul jg lods out and lock outsl (bad) lods notl cs xchg (bad) stos mov repz stos fsubr sbb fsubrl imul rex.X xlat rex.B repz mov (bad) repnz mov (bad) rol scas (bad) and (bad) lods je mov (bad) std jae jo add es mov shrb sub (bad) in movslq out cmp js mov cld fildll xor sbb jnp mov rex.WRXB pop sub test repz mov lods or cmp hlt std (bad) out lahf mov popfq movabs mov outsb shrl lods or cmp fs add xor push add or cmp mov out repnz ja push lea lret jbe movabs fcoms movsb or scas lret mov jnp sub rex.WRB pushq (bad) xchg mov pop xor fstl jp adcl xchg ss je int3 sbb test lods stc ds (bad) out lods stos rex.WR jbe adc out add iret mov (bad) in jmp mov es cwtl rex.R (bad) rex.WRX jo (bad) lods icebp lret (bad) (bad) fwait lods jp (bad) rex.WR ja movsb or lods add popfq mov cli addl add movsl mov add bswap sub mov mov lea lods jl cld mov lods sarb int (bad) jo lods jrcxz push outsl (bad) movabs adc lods (bad) imul push mov cmp cmp fidivr rex.RX cltd rolb je xchg xchg push out xor push andb mov (bad) and stos add fdivrs popfq movabs hlt or lods cwtl lock repz adc lods rex.RXB shl (bad) xor sub xor rex.WXB rorl pushq lods cmp (bad) out add decb lods outsl test mov rex.W shlb pop add xchg loop stos lahf rex stos fdivrl lret add cmp mov push lods pop mov (bad) pop retq cltd (bad) lock fwait sbb lods adc stos iret sbbb and jge jl (bad) rex.WX test add xor add lods (bad) ja movslq int out jge (bad) pop mov sub (bad) out lods scas push rex.R adc xor pop lods xlat push vmwrite (bad) leaveq mov rex.WX xchg cmp xor insb lea adc stos cmpsl or rcrb out rex.WR lock jae jo outsb lret rcr xchg rex.WRB mov movabs fildll push lahf cli mov lods mov pop mov and lods adc xor lods and cmp mov (bad) retq lods xchg rex.WRXB (bad) in lods jb adc lret out nop lods pop mov add lods cmp (bad) outsb xchg mov (bad) lods int3 mov adc rex.RB rex.WRXB jp icebp xchg fimull push retq lods rex movslq in pop mov add stos in addr32 xor test lods mov callq lahf (bad) insb adcb rex.WRB cli ds lods mov loop data16 (bad) jge xchg sub add (bad) adc ja or lret or xor movslq sti (bad) xchg lods scas rex.WR loopne cwtl stos std movzwl in pop cmp jg jae,pn iret rex mov xor or cmp fwait cwtl (bad) insl jns (bad) outsb lods rex.RX (bad) stos lahf adcl xchg (bad) lret jge sbb test popfq out jrcxz scas lods subl mov iret sub ja sub fadds lods xchg mov (bad) in sbb jne cmp stos stos (bad) (bad) js lcall hlt iret fwait rex.WB jbe (bad) fisttp mov add scas retq xor rex.WRB rex.W push add iret mov xor (bad) (bad) adc lods pop mov pop std callq icebp cs rex.RXB cmp movabs jbe add test out sub push pushfq jae (bad) mov movabs sbb insb jp (bad) enterq sahf mov cmp (bad) cmp outsb nop cs lods jle xchg ds pop loopne pop xchg jl faddl mov repnz mov movsb test sub cmpsl int3 sub hlt (bad) lods jbe in popfq mov (bad) jrcxz pop rex.R js xchg lods or or lock lret movabs lods jp test push loopne mov or xchg sub popfq pop adc cld mov mov pop adc outsl lods (bad) (bad) lock pushq mov (bad) insb mov lods or rex.XB pushq (bad) adc and movsb mov sbb lods (bad) (bad) (bad) mov xor in or leaveq or push nop rcll pushfq psrlw pop or push out leaveq movabs fnop mov sbb addr32 adc es cwtl lods retq (bad) scas cli (bad) (bad) iret sbb hlt fcompl jl fnsave jrcxz cmp rex.RX mov sub (bad) (bad) lods rex.W xchg pop fwait add mulb lods add add pop out movabs adc push lods push xchg jno jmp lods push mov (bad) cmp cmp rex.WX adc outsl adc cmp cmpsl (bad) adc pop movabs lods push sub sbb xchg rex.WR in outsl cld pushq pop mov mov jno cmp (bad) std jmpq clc rex.RB cli (bad) incb lods (bad) (bad) cmp add test push in pop (bad) adc callq stos fdivrp (bad) js out jmpq fldt mulb callq (bad) (bad) rex.WRX and movabs (bad) incb fsubrl in lods cmp (bad) shrl add cmpsb jne pop lods out or js (bad) (bad) movabs (bad) movabs (bad) fldcw movabs subb rex.RB enterq stc idivb xor pop cs in add add stos lods hlt pop xor lods int3 xlat je ja add lods rex.R out mov (bad) push test insb cmc or lods insb sub movsb idiv and cs rex.WRXB and cltd adc (bad) sub out adc loopne (bad) cmp rex.RB sahf add lods (bad) mov gs cmp std (bad) or out sbb jo repnz mov xchg jl mov rex.WX rex.WXB out add movslq lods rclb popfq pop (bad) xor xchg lods pop ja mov lods push and sub and scas sbb mull lods xor and jne (bad) movsl test and mov jo test rex.WRB lods fwait imul jle js nop jl xor mov stc insl rex.B (bad) stos mov je lods movsl rex.X push jmp (bad) pushq mov cwtl and xchg cmp rex.R mov pop imul fcoms xchg xor jrcxz,pt lods mov (bad) outsb cmpsb repz and popfq and push xchg mov lahf (bad) (bad) sub (bad) rex.XB lods (bad) jge popfq add sbb repz mov jb in rex.WRB push lods callq xchg cmpsl in add adc insb int3 mov lods jb sbb lods (bad) or int lods and push mov out int3 lea ss sub movsb jg sub xor xchg mov sbb movabs rex.WRXB clc adc (bad) xor movabs int3 sbb (bad) push push rcrb lea jb fwait negb (bad) lods rex.WXB cmpsl or fisubr cmp xchg xchg mov rex.WXB addr32 jnp fsub xor mov sub jmp lods xchg cmp iret cli jne xor sbb cmp sub jp ds iret lods cmp mov stos mov push test in stos (bad) lods pushfq sbb sub lods jrcxz clc rex.W retq cmp mov (bad) xor (bad) mov add andl xorl mov pushq movsb lods mov (bad) stos xchg outsl lods mov nop pop sub (bad) scas and mov sub rex.RXB rex.RXB add int3 (bad) movabs mov xlat int3 jne sahf adc cmp in enterq rex.WR fs adc and adc retq jbe lock jmpq fdiv in ja lea (bad) movsb xchg push xor sbb mov xor lods sub xor rep imul (bad) xlat (bad) sahf (bad) movsl rex.WRXB stos mov (bad) (bad) lods ss js rcrl test cmp rex.WRX jmpq adc xchg movsw lret fucomp pop lea sti lods pop out mov lahf fcoms rex.B rex.WR mov jns rex.WR rex.W mov test (bad) int3 lods xchg repnz and stos xor ss lret mov (bad) fwait (bad) callq mov rex.RX outsb loop je (bad) lods std sub ss xchg xor in mov pop xchg mov (bad) fild push mov out sub js mov xchg insb in movabs repnz xlat pop cld scas (bad) pop rclb jle rcll int3 retq lods rex.WB jnp rex.X std scas jae clc lods sbb movsb xchg test sub fistl (bad) gs cld movslq stos xor and sbb and rex.XB xchg or addr32 nop fcoml movsb fadds (bad) test add jrcxz mov cs gs add and cltd adcl lods (bad) orl adc mov jp sar add loopne sub jne je sbb jo xchg addr32 lahf gs add sub cmc out mov sub test shrb in xor (bad) fidiv rcll icebp (bad) mov push lods xor pop fldt iret pop (bad) jbe rex in out jle cmp adc lods xor xchg fsubrl jae rex movabs jno (bad) pushq lods repz shlb lods (bad) push stos add (bad) (bad) jno movsl pop pop add movabs lock lods test mov lods xor je gs push lods add movabs sub cmpl rex.RX jle (bad) scas or sbb push and (bad) movsb rex.XB rex.RX rcr fnstsw (bad) (bad) (bad) data16 lods cmp add rex.RB pop lods jl pop sub out add movabs or lods sbb popfq movabs push xor sub rex.WB jmp in sbb jmpq lods lea sub jb sahf fs xchg lods mov jo test rorb jns add fmull xor lret ja xchg (bad) push rex.WB fldcw jno lret imul pop mov mov leaveq je (bad) lods add jae lret retq movslq jrcxz sub loop xchg (bad) in movslq lods mov sbb lods mov cmp lods and (bad) sbb ja push (bad) rorl sub rex.RXB scas cs xchg jmpq (bad) lods movabs pushfq lods push mov (bad) lods pushq movabs sbb sub lods rex.RXB cmp and out rcrb (bad) js rex.R (bad) test sbb lods and sbb fisub add in out mov sbb movsl sub fwait rcr in movabs (bad) in jg jns lods mov movabs fbld or enterw fwait xchg stos fs jns (bad) cs shrl mov (bad) xlat orb lods loopne es movabs repz lods push mov cld movsl and lods (bad) rex.R xchg scas push xchg (bad) lods xor cli (bad) adc sub add stos rorb (bad) sbb add scas out cli rcl in fildl mov sbb icebp add gs (bad) jo jp mov xchg mov scas ds add iret insb mov rex.R lods rex lock outsb stos callq pop xchg sbb (bad) (bad) add adc mov fsubrp (bad) fsubs rex.WRXB mov fdivrl movsl lods repz sub cmpl scas (bad) mov sbb sbb (bad) data16 rex.X xchg and lods cmpsb out jge lahf cmc add rcrb mov mov xor and (bad) mov (bad) sbb subl rex.WRX cli test or lods mov cmp ja rex.WR lods jne pushq out rex.WR ja stos mov ror (bad) xor sahf xchg mov scas movabs and xor adc add sbb sub rex.WX rex.RB fwait in scas sbb (bad) adc lods test and (bad) mov retq sbb cmpsb push outsl and push shlb and je jno sub sahf in jp insb lahf lret test mov sbb xor insb mov (bad) lods cmp pop out fcoml shrl int push andb rex.X enterq jo stos jb movabs push pop roll xor xlat mov add test rex.B sub (bad) (bad) (bad) and imul rex.WRB test sbb subl rex.RX fldt xor (bad) cltd mov movabs jbe fdivrl scas movabs jnp,pn scas xchg (bad) (bad) js jno rex.W sbbl xor push flds mov or (bad) rex.WB mov push jmp callq pushq jp xor test pop retq lea add sub mov test rex.WXB lods cmpsb out cmp fadd subl mov fdivrl (bad) rex.RXB xchg jp xor sti in enterq lods mov push fucomi lahf (bad) jb add adc roll mov lods cmp lret rex.WRXB sahf (bad) add lods and mov lods push xchg retq and out xchg (bad) (bad) mov push sti or add push fwait popfq (bad) hlt mov pop data16 mov sub (bad) stc (bad) sti mov (bad) faddl test (bad) lods popfq mov lret (bad) fcompl rol xchg (bad) (bad) movabs cld rcrl pop mov movsb (bad) lock orl popfq stos sbb loopne xor movabs (bad) cmc mov (bad) sahf addl cwtl xchg xchg rex.R push xchg push scas leaveq imul or jnp shr shl adc and mov fcoml rex.WRX and mov cmpsb xchg pop xorb gs jb cmp xchg (bad) or mov or and sub lods adc or fwait int3 rex.WXB cld stc rex.WB rex.RB adc pop movsb jnp scas (bad) mov lods adc mov movabs icebp add mov sarl fimul lods ffreep or adc fadd sbbb std xchg lods stos (bad) movabs rex.W (bad) and or sub lods (bad) mov fs add fisubr mov scas fldl movabs jne (bad) fisubrl cmpsb xlat in retq fucomip retq enterq jb fcoms test cmp sbb int3 xor add mov mov adc fstpt lret mov adc xchg shr jns mov (bad) out (bad) scas (bad) sub mov jb ficom movabs shrd in cmpsl loope sub (bad) pushfq mov int (bad) (bad) fsubs xor callq adc lret cmp insl jmp (bad) mov push movsl mov enterq mov adc add test adc (bad) (bad) in mov mov test rex.WRB mov jb lods xchg scas mov leaveq sbb lods sub add retq mov sbb mov mov loope sahf movslq mov adc stos (bad) jl ss clc jle rex.X cltd lods (bad) jg xor nop sub push pop in add sub add cmp (bad) movsl mov pop xor sub (bad) rex.R insb or scas or rex.W sbb adc imul stos jle movslq mov stc jg insl rex.RB cmp cld clc lods rol (bad) lods cli rex.WB ss rex.WR rex.WB std sub rex.RXB (bad) (bad) sbb pop and xor repnz lods nop testb mov mov cli retq lods cmp (bad) (bad) (bad) rex.XB rex.WXB pop sbb pushq xor rorb sub and cltd fadd xchg cmpl out mov not mov int3 retq rex.XB cmp pushfq adc (bad) in rex.B xor rex.WX mov movabs mov lods rex.X push sub mov rex.R push lods cmp rex.WRB outsl rex.WX leaveq mov in adc add jmp mov cwtl scas fs adc lods addr32 imul sbb jp in insl and lods (bad) sbb and mov (bad) mov xchg or mov lods push fisttpl mov es lret jl (bad) orl fwait lods adc xchg mov pop movsl push (bad) popq push or push movabs rex.WR rex.WR insl or jmpq adc rex.WX out rex.XB cld loop cwtl shrb xchg or jp mov sub rex.WRB test pop adc lods and shrl sbb stos push je cmpsl jmpq leaveq rex.X idiv (bad) (bad) cltd lock clc xor xchg (bad) jae xchg (bad) add push repnz (bad) int3 pop xor ficoml jne rex.RX icebp movsb (bad) cmp lods (bad) outsb sub shll insl faddl test cli movabs retq mul (bad) cmp repnz (bad) lods callq add mov sbb in test (bad) lods movsl (bad) or outsl sub lods jmp lahf pop mov pop or mov lods xor xchg scas rorl popfw sti in test rex.WR lods (bad) rex.X adc (bad) fwait movabs jo xchg movabs insl or cmp jo in cmpsb mov scas (bad) mov lods mov in mov rex.WR vandpd psrlw insb movabs xchg (bad) (bad) sub and xor gs hlt pop loop lods movslq shlb (bad) cmp fsubrs sbb dec notl mov sbb (bad) in fs lods repnz mulps insb xor sbb mov getsec sub lahf data16 cli rex.WRXB (bad) mov mov xor adc es data16 in mov pop scas retq or push jmpq stos lods xchg push es lods rex.WX mov mov outsb adc mov or push (bad) push movslq pop subb movabs mov jmp push stos in paddq jne lahf (bad) rex.RXB rex.XB (bad) rex.WX fwait jl adc xchg mov push and (bad) lret lods or rex subl adc sub sub icebp adc cmpl std mov sti sahf (bad) pop cmp mov fisubl (bad) lea (bad) orl movabs lods retq fcoml sub movslq jno enterq (bad) leaveq lods pushq retq pop je in mov add push lods clc movabs mov js lock loop seta repz fildll add lods (bad) insb sbb stos fdivrs loope cs sub gs out xchg sbb xchg push lods pop add in adc clc add mov adc lods leaveq rex cmc sbb movabs pop xor outsb movslq out sub (bad) data16 and mov pushq in lods shrl test fistp lods rolb mov out (bad) jo pop (bad) fnstsw lods sarb pop (bad) adc insb or lods movabs xor sub es hlt cltd and and sub rex.WRX mov lods pop mov xor lods pop shll fdivl imul cmp test lret gs jle jrcxz vmovsldup in lods adc cltd add or std rex.WX fwait (bad) scas rex.W scas gs or cmp stos xor out (bad) mov lods pop fidivl push jns fcoms rex.B fs jp roll mov jno lret mov rex.RX sub movabs sub cmp or (bad) (bad) lock mov sub lahf (bad) (bad) lods incb or movabs loopne (bad) or leaveq cmc in pop rex.WRB rcll movabs rol push rex.RX (bad) sub faddl xlat andb fs movabs (bad) lods sub rorl hlt lods and jne (bad) loopne mov enterq sub xor xchg rex.R mov out mov jno rex.X movabs add lods mov sbb pop fs fldcw (bad) (bad) sub insl jg lods push loopne pop mov sub pop adc movabs iret and in cmp cld (bad) outsl jle (bad) in pop mov rex.RX rex.WR rol (bad) mov test push (bad) int3 rex mov fnop rex.WRXB jl lods rex.RXB rex.WX mov mov (bad) movabs fnstcw cwtl or pop fsubrs outsb xchg in retq mov stos insb pop div mov movabs xchg add sbb cmp rex.WX lods outsb psllw je test and jmpq xchg add (bad) push mov outsl rex.WRB in (bad) enterq jno mov insb rex.R (bad) xor mov movsl fistpll sbb rex.XB mov mov (bad) movsl (bad) sbb jmp rorl or mov lods vsqrtss mov pop mov (bad) sbb int3 lods sbb jns pushq mov fsubrp (bad) adc (bad) xor (bad) std scas push outsl (bad) in outsl (bad) pop sub mov fildll (bad) push and mov lods testl fadd jo es cli (bad) xor rex.WXB pushq adc (bad) fildl sar or xor mov push mov test sub in lods (bad) xchg (bad) out (bad) mov add mov cli sub sub orb test add (bad) xchg cmc lods ficomp or xchg sbb (bad) cmpsb stos in mov cld stos add rex.WB sub rex.R rep rex.XB adc jrcxz (bad) add sub movsl testb or sub jb scas lea cmpsl mov lods outsb (bad) push callq js (bad) sbb xchg xchg jg stos xor push cltd outsl lods movabs lods jnp jmpq mov mov mov lods fsubs mov popfq retq and jmpq movabs fld int3 rex.WB nop mov cmp ror icebp add mov pop iret jne sarb xor jnp scas lods adc sbb adc stos rex.W adc mov lods or jns jae cld vaddss rex.WRXB lods and jge lret mov sub cmc cltd jns and popfq rex.X std xchg mov rex.WRXB repz ds in mov mov lods xchg sahf pop fsubr or (bad) rex.WB lods (bad) outsl lock push rex.RX stos (bad) jmpq out fxch sbb adc hlt lods (bad) (bad) in (bad) lods mov pop (bad) add jmpq rex.WR rex.WR and cmp adc mov mov imul retq lods rex.WR out incl fldl (bad) cmp lods sbb callq jnp leaveq vfrczsd iret mov mov sub or or (bad) pop lods lods (bad) add pop rex.X sub out (bad) lods out jmpq ss lods psrld and rex.X sub or in lods movb rcrb cli (bad) rex.WR and rex gs adc pop retq add (bad) sub jle mov (bad) mov add shr cld or xchg and mov clc lods (bad) mov jp mov pop jl lods jae xchg pcmpgtd test lods bnd xchg or sbbb mov push data16 adc mov (bad) and int3 (bad) out cmpsl adc lods test jg fs fcmovne (bad) cmpl stc jb fwait add fs lods mov ja (bad) lods xchg int lods movabs test (bad) (bad) jbe pop pushq adc stos movslq or xor adc push (bad) lods mov lahf in fwait or sub add push or loopne retq imulb mov rex.XB or push in push add lods lods in xchg lretq fildll rex.RXB lods rex.WRXB jg rex.WRX sub (bad) jge mov or jg test lods mov out je test lods rex.WR xchg leaveq mov jbe movslq lods cmp jae hlt lods fs add mov lret cltd lods sub (bad) loope adc push cs int3 sbb addr32 pushfq jl push xchg or xchg outsl lods xlat xchg in pop mov xor iret sbb lods (bad) and leaveq rcrl lods retq addr32 rex.RX movsl pop rex.WRX (bad) out pop lods clc add jbe jb fisttp sub jg (bad) mov lods rex.WRX sti pop jbe rex.WRXB and (bad) rex.RX jae mov outsl insb test mov xor (bad) scas icebp callq in insb je (bad) lods cs jmp and mov (bad) pop add pop movslq rex.XB (bad) insb (bad) (bad) rex.WB lods rex.RB jne adc sub xchg or jo lods (bad) sbb fisubr adc popfq mov jmp leaveq movabs shrl rex.XB retq mov cmp xchg (bad) lods and stc rex.RB lea shll push rex.R int3 movslq xchg mov add test je sub (bad) jne or movsb (bad) (bad) lods add addr32 rex.W (bad) lods jae (bad) cmp (bad) sub mov jrcxz xor insl (bad) (bad) fs sbb es retq lods fnstcw orb mov jns lods sti cld and sahf or mov movabs loopne popq pop jno jge adc (bad) movsb movslq jg adcl outsl cld sbb add iret sub nop mov ficomp stos or cmp jl mov rex jmpq mov movzbl xor fdivrl xchg sub loopne retq mov rex.X lods cld (bad) scas sub out adc je (bad) xchg and sub shlb pushq scas jg lods lea mov lods outsb in push (bad) movsb cs (bad) in roll xchg or xor mov out (bad) popfq lods cmp pop (bad) push movsb std (bad) mov out mov mov sub pop clc adc jge lods pushq cwtl (bad) retq lods or mov push lahf (bad) test hlt mov loope xchg pop xlat hlt sbb in lea rcll sbb push vmaxss mov lods pop rcrb stos sub adc mov (bad) imul scas xor lods xchg movd repnz lods retq or mov callq jge mov movb mov pop adc fistp push cmpsl test lods mov xchg push loop (bad) mov mov cmp pushq (bad) sub (bad) rex.X test or iret mov scas mov stos andl or jrcxz mov cmpsb jg (bad) movabs fdivs pop add sub insb rex.WX out pushfq (bad) mov lods rex.WB stos mov scas (bad) and cmpsl scas insb fisttpl in shl movabs lea out jnp sub or mov mov (bad) sbb data16 test nop add (bad) movabs ficom lods js (bad) add cmp lock pop (bad) (bad) adc int3 scas popq mov callq insb lods cltd (bad) cmp jl add and (bad) repz and subb (bad) (bad) rex.WR and (bad) movabs sub sub sub (bad) pop outsb loope pushq fwait (bad) or cmp (bad) data16 mov retq in rcrl cmp mov pop fs sub (bad) and pop cwtl or (bad) (bad) test mov jp sub iret (bad) jnp nop retq rex.WB jl lods sbb movslq std rex.WX in int3 test adc jrcxz mov stc pop and (bad) fbstp xchg mov adc fldl or test stos or (bad) mov or (bad) rex.RB cmp lods in (bad) rcll js add sub pop fdivs iret (bad) push lods stos push sub sbb push mov pop retq je (bad) scas clc jle,pn lods (bad) xor rex.WXB rex.W (bad) repz adc adc stos mov fsubl add mov fisttpll pop stc scas pop (bad) sarb jg or (bad) pop mov (bad) lea sarb lods hlt ss mov in rex.W lods push mov jg pminub rex.XB in lock mov lods xchg fcoms push mov shr lods xlat out (bad) idiv mov movsb (bad) (bad) push movabs xchg add lods std (bad) cmc push or retq lods or cmp data16 xor (bad) lods and mov lods jge rex.WX jo or jrcxz shll jmp mov cmp mov fbstp leaveq sub enterq lods (bad) xchg mov out movslq retq in pop adc movslq adc lods and xchg jne (bad) (bad) mov cmp or (bad) jnp lods push pop jno imul (bad) sub je xlat lods rex.WR fidiv or (bad) stos out xor mov push pushq lods in pop (bad) in lods rex.X rex.WRB mov mov jne rex.B mov test add mov lods add in (bad) jge jnp cwtl (bad) sbb rcl jrcxz cmp cmp ja pushfq stc push in sub mov stos lock and movabs jnp cwtl add (bad) mov or adc xchg out lods shrl movabs cmp jns push mov lods pop (bad) rex.WB mov js loopne ja sbb lret rex.XB test lods rolb in imulb fs xor and sbb pop push (bad) sbb (bad) adc cmp nop in rex.B xor mov movsl xchg sub cltd scas out cld sbb xor in (bad) mov and add adc int3 mov (bad) cmpsl sub mov test or ds add or mov scas mov mov test jge stos mov cwtl fiadd lods jp movsb fcoml shrb jmpq push jl (bad) lods enterq mov rex.WR popfq movabs pop mov fs int3 jmp lods ds pushq test stc pop rex test pop (bad) (bad) clc test lods xchg (bad) xacquire mov and ljmp enterq movslq jne xor fidivr cmp fcmovnb add cmc sarl rex.XB movaps xor sti (bad) movabs nop stos test retq in and xchg fwait int3 jge test or (bad) cld (bad) rex.XB lods pushfq jmpq lods and or adc mov sahf mov test movslq shrl addr32 popfq pushq (bad) movsb adc sub jp rex.WR adc in ds pushq shlb adc cmp (bad) (bad) lods test mov rex.X fisubr (bad) xor xchg in lods rex.WRXB add mov push jg rex.XB mov test fisubr jno fstpl xchg imul adc and xchg mov ja in adc fdivl jns lret insb push insb cmc xchg jmpq jmp test xchg jrcxz jp rex.WR fdivrs stos test xor in mov xor xlat rex.WB sub (bad) std push scas mov push lods mov movslq mov cmp lret (bad) movabs incl mov pushq mov lods xchg in push iret pop lods sub shrb xor jno adc test stos rex.B lea lods fst movsb leaveq (bad) rex.WRXB xor test and xchg (bad) jno pop (bad) stos cltd (bad) jns movabs subl andl movslq lods jnp insl xchg rex.RB movabs mov retq mov cmpl cld test rex.RXB (bad) and clc (bad) sbb and rex.X rex.XB lea out or rex.WRXB push (bad) sbb lods loopne jo icebp (bad) jg lods rex.RXB and neg addr32 lret cmp xchg rex.WRX lods imul jnp lods jmp (bad) pop (bad) movsb jnp mov mov (bad) mov cmp enterq (bad) or scas rex.R lods add shlb and xor jno sbb lods in jnp outsl fsubl rex.WB sub fcos rex.WRB lods sbb out (bad) sub (bad) adc xor jmpq int3 movsb rex.WXB ja or adc lods push rex.RX sbb iret pop cltd mov scas popfq (bad) jne lods mov andb mulb (bad) pop push (bad) pushq jrcxz mov xchg xchg (bad) push fwait retq (bad) stc mov (bad) sti int3 addr32 xor test popfq mov (bad) int3 sbb jmp stos rex.XB cmp (bad) sahf fldl push or lods xchg adc lahf pop mov (bad) cmp mov cmpsb mov lods rex.R adc mov std lods int3 sbb (bad) (bad) jg jo sbb (bad) and (bad) sub jbe subl data16 fdivrl (bad) shl sub pop (bad) rex.WR rex.RB rex.WX retq je sub lods jle or mov (bad) lods xrelease cmp push xchg add xor scas jrcxz cmpsl mov or (bad) pushfq mov lods lret (bad) test (bad) (bad) decl repnz push movabs popfq stos es pop (bad) sti push mov in adc movsb rex.WB (bad) std mov cmp (bad) lods add xchg mov lods xchg cmpsl callq (bad) test jge sub lret mov imul adc rorl pushq jg adc lea and rex.WX fs lods jo xchg pushq fwait lods rex rex.W mov push rex.RB sub (bad) rex.WRX xor movslq or lods sti (bad) movabs (bad) xor mov jrcxz rex sbb jp in lods movsb rex.WRX adc sahf scas or rex.RX repz in lock push fcoml push lods cmp (bad) mov cli test mov shrb ficomp lods clc or (bad) mov in sbb sarl in pop mov lods and icebp (bad) outsl callq lods pop rex.WRX jmp leaveq jle test sti (bad) mov add adc mov mov add (bad) clc adc subl out fsubr sbb rex.RB mov xor movabs mov outsl and sbb sti (bad) cmp (bad) or fwait mov ds xchg push lods sbb pop (bad) std fsubs sub jge outsb sbb movabs callq add movsb sti lea cwtl (bad) and scas rex.WRB mov jmpq sub jbe cmc mov retq rex.W sbb adc (bad) push leaveq shl rex.R movsb add and (bad) sub stos rex.X insl mov fmuls (bad) mov add push lahf or iret xor (bad) je rex.WXB and push fisubrl xor leaveq xor xor in (bad) repnz mov outsl push (bad) pushq scas xlat pop rex.RX cmp outsb (bad) lods rex.WRB push imul adc (bad) incl insb data16 mov (bad) cmp rex.WX lret mov (bad) sub test (bad) xor mov mov cmp (bad) mov lods or cmp mov rex.X lods push (bad) sub pushq rex.XB lods sub fnstsw rex.WRX stos xor cmpsb (bad) rex.WRXB sahf movsb shrl clc (bad) lods (bad) (bad) xlat rex.WR add in insl out cmpsl xchg or jrcxz xchg fwait shrl jmp scas mov (bad) jnp insb xchg xor loopne sub (bad) push (bad) nop out movslq stos cmpsl sbb fnstsw jmpq or outsb lods stc ja adc push out mov repnz mov test stc xchg stos imulb (bad) xor rex.X push push repnz hlt cmpsl in clc lock cmp mov (bad) mov fisubr cmc cli imul cltd and imul push sbbb data16 or lods enterq icebp stos rex.WX lods ds (bad) inc add or xchg clc lods shl pop sbbl insl repnz insb (bad) movabs sbb pop mov fsubrl fiadd (bad) orb imul in or movabs (bad) jo lods (bad) pop enterq mov lods rex.RX push jmpq rex.RXB clc pop fisttp lods push ss lea mov sbb xchg (bad) (bad) (bad) cld and (bad) xor lods mov rex.WX mov cs (bad) stos cmp xchg cmpsb ror stos sbb in and scas lods fwait adc (bad) cvttps2pi xor xchg icebp mov decl cmp (bad) lods cmc add add sub insl vunpckhps pop scas or pushq pop push rcrb test outsl pop pushfq stos rex.WRXB shrl and in cmc lods or movsb xchg jae xor lods or xchg cmpsl jge gs insb subb xor pop cmpsb neg mov sub jns mov cld jrcxz lods frstor cmpsb faddl negl fs shll lods mov lods push roll pop and cld lods insl add in in and lods mov and xchg ja or (bad) rex.WR addl imul jl adc in push movslq push cwtl and and pop mov stos sbb jrcxz cmpsl rol jl movabs xchg pushfq xlat outsb lods rex jne jmpq sahf lods jo (bad) adc cld test lods in (bad) mov fcompp in or loopne (bad) (bad) or insl or test jae mov leaveq (bad) loope imul (bad) ds insb stos (bad) or pop sbb mov fldcw sbb nop mov insl (bad) imull shrb loopne mov lret out rex.WRX outsb rorb scas lods insl push icebp (bad) mov jp and adc push rex.WRX (bad) data16 sbb sub rex.WR pop rex.RB adc jne adc (bad) lods (bad) rex.RB scas rex.WR or repnz pop rex.WRX mov (bad) mov add push mov iret mov nop sub push xchg jmpq rorb test lea movsb enterq rex.WRXB jg lods pop fsin cld shlb xor rex.WR xchg rex.WB xchg subb pop (bad) mov push stos jno movslq (bad) (bad) (bad) (bad) pop (bad) (bad) sub out cmp mov lods rex.RXB sbb lods cmpb (bad) callq cld xor popfq jge pushfq test (bad) pop mov lret (bad) jo xchg retq stos jae testl and sti mov jle retq cmp xor movsb in (bad) lods cmp loope xor or lods xchg sbb mov xchg mov sub sub sbb shlb movabs xlat (bad) sbb sub (bad) cli and (bad) rex.RXB sub cs lods jrcxz cli or pop or hlt stos mov scas fs jl rex.B outsl cs je movsb or lods (bad) push sarl insb mov hlt jrcxz rex.R lea (bad) icebp cmp movabs mov movabs (bad) fdivl mov popfq movabs fs lods (bad) (bad) jnp fwait rex.R loopne xchg pushq lods add mov xor jle testl xor nop mov (bad) outsl xlat mov mov lods mov sub and pop (bad) shrl movlps fcmovnbe jmpq rex.WRB rolb xlat lods mov pop (bad) lahf jae outsl mov sub mov lods pop movslq gs subl (bad) insl (bad) lret xchg sub rex.WRB rex.WX int3 cwtl scas sub movabs rorb sbb jg lods and int3 mov iret rcrb lods add outsl lea and xor xchg lods js cwtl and test enterq sub (bad) pcmpgtb (bad) lods pop (bad) ss xchg mov lods jne scas rex movups scas jo jp (bad) sbb mov retq lods (bad) sub sbb push lods pushq push pop cltd je fnop or mov cmp clc iret (bad) je jnp (bad) pop adc (bad) outsb cltd std fild loop movb notb xlat adc fadds sbb fs jbe (bad) movsl lods mov (bad) sub lods pop rex.RXB xchg (bad) mov mov nop int movabs add loopne clc cwtl (bad) (bad) scas mov and stos (bad) fyl2x iret int clc lods push xchg sbb inc enterq imulb movsl mov movabs sti lea rcrb lods lahf add lods sub xor es push movabs jge mov nop lods xor rex.XB add repz or jmpq icebp stos rex.WRXB or fadd sub rex.W jbe add sub rex.B (bad) mov mov push lret fldl mov (bad) mov int lods fs sub rex.WXB psllw lods push out and jge push test in rex.WR mov jo lods cmp xchg callq stos xchg sbb push fwait jmp jle or rex.X retq (bad) (bad) xor in retq xor js jge loopne test xchg mov cltd shll callq xor pop xor xchg lods sub cltd xchg lods movabs (bad) adc lret sbb mov insb adc lods movabs int3 mov cld jae rcrb popfq lods mov int3 iret adc jae leaveq scas xchg fidivl scas pop lods (bad) divb lods mov (bad) mov (bad) jb push mov lea cmp (bad) lods sbb insl xchg mov mov mov pushq or jrcxz jge sbb (bad) loopne (bad) out (bad) mov xchg mov or popfq in mov addr32 stos lods (bad) sbb int3 movslq fstpt lea rex.WRXB out xchg popfq (bad) cmp (bad) addr32 lods stos (bad) cs enterq adc sbb sti fistl rex.WR xchg xchg adc lods mov and or adc shlb cmp (bad) repnz sbb xchg lods icebp rex.WXB hlt iret mov xor outsb (bad) outsl adc add in stc sti sub lahf movhps lods push (bad) sbb lret stc ljmp or jo insl jg rex.WRB sub test in rcrb mov sub (bad) sbb out orl mov enterq xchg (bad) jl and xchg pushq mov (bad) lods (bad) rorl addl jl adc repnz or icebp push sbb rex.WX rex.R mov or (bad) rcll in sbb add sub lods (bad) mov in push rclb jge lods movsb flds and lods sbb stos in add scas mov or mov cld je jnp hlt rex.WR test add mov sub fsubrl add adc cmp rex.WRXB rex.RX xchg movabs mov clc lods xor repz rex.WRXB add or test es sbb sub push movabs out lods jae (bad) pop fwait jo add jb or sub adc lods mov scas sahf lods or mov test lea mov (bad) jnp mov push stos pop (bad) (bad) (bad) nop jl (bad) addr32 sahf xchg loop lods xor pcmpeqd xor ds jnp out lods jmpq and clc rep or push cmp rex.WX subl in (bad) (bad) jle jge out push outsl mov enterq xchg insb pop shrl xor in jb rex.R repz popfq lods insb mov rex.RXB rex.R (bad) rex.RX lock sahf (bad) push jne or lods in and adc cmpsb pop in add rcrb out imull adc (bad) lret mov xchg loope mov rex.WRXB insb fiadd (bad) xorl xor sub cmp test stos in mov lahf sub and pushq (bad) mov fisttpl stos pushfq add lods and sub fs or fwait addr32 lods push mov cwtl movsl xor sbb lods mov subb xlat enterq stos (bad) pop (bad) jg sub rex pop lods nop jp ljmpw cld and lods and loope adc sahf insl leaveq xor xchg (bad) jle (bad) pop cmp (bad) adc (bad) nop (bad) icebp xor sub jg xchg int adc in rex.W xchg iret xchg mov movabs jrcxz cli sub and (bad) scas movsb (bad) push (bad) jne (bad) movabs xlat adc ja adc (bad) (bad) and lods test out idivl in cmp xor (bad) mov sub pop insb notl test test lods mov sub mov (bad) in adc add sbb mov (bad) mov add mov push push mov rcrl (bad) std test out or inc stos mov cld xor lods clc (bad) scas or and adc push cld mov fimul lods mov cmp sub loopne rex.WB gs lea xlat or sarb lret loope je,pt (bad) lods sbb xchg lods (bad) mov add lahf jp shl cs int3 sbb retq lods cwtl rex.WX lods adc mov stos push cmpsb (bad) mov push lock adc movsb (bad) insl cwtl pop mov iret (bad) addr32 loope leaveq xchg repnz and shrl movsb mov mov test mov push lods addr32 test sbb mov rex.WRXB adc sub mov xchg jl and sub or pushfq iret loopne fs cmp push repnz rex.WB lods mov (bad) (bad) sti pop jle adc (bad) fadds or jne xlat addr32 mov movsl adc mov lock test mov hlt lret rex.WB and in add cmp nop stos mov in (bad) lock mov lods cmpsl fiaddl jb sbb lods xchg add cwtl shlb xchg cltd (bad) jg mov (bad) je test lods xchg mov (bad) lock loop (bad) or test (bad) repnz retq movsb fwait rex.W (bad) sbb scas repz mov cmpsb pushq (bad) mov sub fcompl mov mov adc movsl fdivr jae lods (bad) (bad) adc popfq cmp jg jrcxz sub (bad) sarl shlb mov insb mov push lods sub iret test sar (bad) (bad) lods or rex.B pop jl cmp cmpsl (bad) lods and insb adc pop add pushfq add subl mov jl push lods push out xor cmc add adc pop enterq (bad) (bad) lods push imul (bad) mov es mov mov push lea (bad) movabs fdivr movsl and out adc mov rex.RXB fs lods mov ja cltd mov ror rol lock xchg xchg jmp (bad) xchg adc sbb jo rex.B cwtl jnp sarb hlt imul jrcxz xor callq test jmpq (bad) rex.WXB rex.X cs sbb (bad) enterq adc cld pop jbe movabs clc sbb cmp lods push rex.WRB (bad) stc mov rex.RX movabs add cli mov je in test rex.WR push jnp cs rcl lods or scas mov in jne in adc cmp push (bad) cwtl rorb and cmpsl callq (bad) hlt mov lock pushq rex.RXB (bad) (bad) ror sub test js xchg movabs sbb and fldl rex.B stos (bad) cmp rex.W mov cmpsb (bad) int lods mov pop scas pop sub sub rex.X lods fdivl xchg out mov enterq sub addr32 (bad) lock movabs clc mov sub callq and (bad) lods test (bad) xchg insl (bad) adc adc mov (bad) adc cmp rex.WRX mov add add (bad) shlb push adc cld stos xchg pop pop test rex.WX stos rex.WR data16 sahf (bad) add imul mov hlt rex cld mov data16 jmpq (bad) rex.XB movsb mov xchg or (bad) adc or (bad) adc imul mov adc test xor jmpq mov mov pushfq adc out test xchg fsubrs iret adc xorl cltd lock lods movslq shr lods add jl (bad) push nop lods xor (bad) mov rex.X es imul fs xchg mov add insl hlt push lods pop adc rcrl jae sub (bad) int (bad) lods (bad) jns (bad) subl loopne rex.B mov cld rex.WXB scas jmpq (bad) sub adc rex.WR mov or mov (bad) (bad) movabs out (bad) (bad) adc out xor sub out cmpsb mov sti outsb test lods movabs xor or insl jns adc (bad) rex.RX push fsubrl jns insb (bad) test cmp rex.WX (bad) mov jl mov sub pushq xor repnz ja sahf mov rex.R sub rex.WX xor lods (bad) pop jnp repz xlat icebp retq rex.WXB clc icebp (bad) jns mov (bad) sbb rex.WR gs jl (bad) mov jno lods (bad) and outsb sbb add adc sub and lods repz cmp cmp insl adc scas push out icebp lock in fdivrl int3 repnz jo mov sbb (bad) jo sti rex.WR fcmovb xchg insb lods sub scas mov add sahf jl jo cmpsb xchg (bad) movabs add fisubr add add mov loopne sub jl jg jp mov mov sub jle mov (bad) xchg stos (bad) cs movabs sbb out pcmpgtd xor vmovddup rex.XB rex.RXB mov cmp (bad) mov xor xchg shrb stos (bad) rolb loopne (bad) mov adc cmp adc lods push in jp lock sbb jae or mov xor mov repnz mov cmp sub mov out jle (bad) movsb rex.WRX insl add jnp mov orl sti ds (bad) sub mov out (bad) cmp lods roll xor (bad) leaveq mov sbb lods (bad) rex.WRB nop imul shl adc jne (bad) lods rex.WRB repnz push jp fs movabs mov (bad) (bad) sbb test xchg pop stos xchg movabs test cli add adc insl add push cmpsb mov adc sbb mov icebp lods (bad) add jl sub shrb lods out (bad) rex.WRX push rex xchg iret mov add sbb popfq test cmpsb rex.WR xchg xor es lods (bad) js movabs sub cmp pushfq testb scas std (bad) stos xor (bad) xchg rex.X rex sub test in adc (bad) (bad) adc cmc adc lods fdivrl scas movabs cmp mov rex.WB xorw and out (bad) decl or mov lods subl xchg sub movsl cld push in (bad) and movabs rex.WR out xor or retq out or loop sbb callq (bad) jbe (bad) sub mov (bad) jae lods add int3 clc (bad) jp lods pop (bad) pop imul hlt (bad) enterq push (bad) mov xchg jrcxz pop insb add lods ss cmp push xchg hlt push lods mov gs xchg mov pop mov xchg (bad) (bad) mov jmpq outsl mov (bad) xor rex.WXB mov cmpsb (bad) lret lret add jns jl mov (bad) and rex.B scas retq lret sub (bad) test xor mov push rex.WRB (bad) push (bad) lods (bad) mov sub mov movsl subl iret pop in mov (bad) add mov rorl adc test scas and xchg push test mov movabs push lods mov (bad) mov xor rex.XB cmp (bad) movsb adc lods js xor scas rex.WXB stos rex.B rex.RB cmp rex.R lods mov fstpt (bad) xor jmp mov and lahf mov cmp push fsubrs xor je retq (bad) cli rex.RB mov jg stos iret imul (bad) out rex.R lods out jb pop test rex.XB lods adc sarl mov js (bad) sub xor (bad) stos xchg rorb insb (bad) mov rex.WRX sbb enterq stos pop retq xlat mov (bad) repnz lods mov xorb adc (bad) lods ss sub ja (bad) insb movabs adc lods stc adc (bad) (bad) not test or pop sub jo xchg cmp rex.W lea callq jrcxz in popfq jle xchg mov stos (bad) stos mov fidiv jge scas pop sub scas jae test sbb (bad) lods or or mov lods addl (bad) xsha1 cmpsb int sub sub lods retq pop test cwtl movsl mov mov ds mov lods sbb adc test jp xchg in rex.W mov (bad) in cmpsb or outsl pop popfq xor xchg xchg lods xchg mov or in (bad) jg enterq movabs scas (bad) sub add adc sub xor cmp mov sbb sbb add push int mov imul cmc lods rex.WRB rex.WRX mov stos xchg lods sub retq jne loopne repnz rex.RX cmp test out jg xchg enterq (bad) pushfq jno xorl lods sub pop rex.XB xchg out rex.XB or adc cmp out lods pop mov fdivrl in lods and add cmp mov rex.WB xorl lods xchg rex.RX push rolb movsl cmp (bad) pushq and lret stos mov in cld lods cmp xchg (bad) scas and (bad) movabs pop jb mov js movabs popfq xchg (bad) add out insb mov retq jne int3 sbb push xor jb rex.WRX ja rex.R rex.WR rex.WRXB lods (bad) add movabs lods (bad) jno ss jne insb (bad) out lahf sub pushfq xchg lods (bad) push test cmpsb fdivrl lods add rex.WRXB add in jns movabs cmc cmpsb (bad) jo mov test retq (bad) push fcoml int3 rex.WB (bad) and test mov mov rex.WXB mov clc sbb sbb jp xchg sti (bad) mov mov and sub push xchg sub mov adc lock mov movabs repz cmp or mov sbb movsb mov or and sub jnp pop adc lods add and outsl (bad) lods xor xchg pop ss (bad) test sub enterq pop lods incb mov lods lahf mov in mov adcb cmp (bad) pop xlat pushq or add (bad) xor mov test icebp in lods mov pop mov fsubrs test test jnp in jge insl adc subl cmc (bad) lret ja (bad) rex.WRXB fs test scas and xor sub (bad) pop lods (bad) fadd mov (bad) (bad) xor rex.WRXB in outsl test stos not rex.W mov movnti adc idivl mov in es (bad) icebp scas push (bad) sti pushq rex.RB rex.WB lock and iret (bad) mov fcoms rex.WRB rex.R pop loop pop add lods mov sub rcll lods pop jge testb mov divl mov sbb mov lods pop (bad) out rorb lods (bad) mov lods mov or cltd imul lods enterq jmpq cld cmp pop mov (bad) rcr fldt and xchg (bad) loopne mov callq and mov in movsl jnp idiv (bad) test sub pop cs add xchg hlt sub push push cmp push push and out sub jnp stc mov mov (bad) and xchg xor (bad) (bad) adc (bad) mov enterq rex.WR (bad) (bad) scas pushfq lods xor notb mov sub test insb push in (bad) cmpsl rclb out sub (bad) sbb lods mov and ja jrcxz (bad) hlt and jmpq fimul shrl adc (bad) mov je sub int mov sub outsl mov in cmpl rex.RXB stos xor lods (bad) (bad) (bad) push xor mov fucomi mov jl xchg and ja sti enterq rcl mov add es (bad) mov xchg nop mov jbe divl adc mov mov mov (bad) and lods movabs lahf jp (bad) sub insb iret test sub push loop jge lods clc pop movabs fadd mov mov xlat jg lods or jg or repz rex.WRXB sbb movslq insb xor xor rex.R stc sbb adc hlt cli sub (bad) pop rex.XB pause testl cmp rorb js sub rex.RXB mov lods xor je sbb mov (bad) leaveq and jne jnp pushq (bad) xchg mov loop sbb adc movabs sub icebp jrcxz movsl or lahf ss hlt mov push std retq fisubrl xor mov es lods scas mov push (bad) lods sti rex.WRB rex.WB push lods mov sub xchg popfq lods xchg in adc mov rex.R mov sub (bad) in xor je mov int3 mov fwait adc lods out or xchg rex.WRB (bad) test movabs pop sub popfq lods rex.RXB cmpsl xchg lods (bad) jg (bad) pop retq movabs mov and mov or fcomi sbb clc test push scas mov imul lods pop push outsl (bad) sbb pop sbb popfq mov push (bad) pop fsts fldenv in jg (bad) loope fisubrl lods lcall pop rex lods jmpq repz (bad) jge adc movabs andb callq scas scas mov cltd (bad) pushq add fildll and rex (bad) jmpq lods xor rex.B subl (bad) leaveq imul (bad) nop lea push cmp faddl (bad) outsb lods (bad) movabs push imull xchg scas (bad) callq sti (bad) movsb jnp xchg (bad) movslq add (bad) retq shll int3 in (bad) mov sti fs cmp lods xor imul jmp enterq push insb icebp xor (bad) in jo add fsubrp lods jo fiaddl stc sub (bad) ror adc movabs (bad) pminub mov lods add and mov add shl lods hlt lods (bad) cwtl xor push imul nop adc push loopne lret mov cmp (bad) (bad) cmp test (bad) andl scas xor mov cli and (bad) or fsts (bad) pop cmovle movabs test add lahf rcrl (bad) xchg lods cmp xor jb fldcw mov jp sub jno (bad) js insb adcl fisubl in xor rex fldt out (bad) (bad) push sub test sbb add outsl sub iret hlt xchg sbb leaveq repz test cmp mov or xor sbb xchg cld rex.WRX rex.RB lods (bad) fistpl mov jns xchg rclb xor mov loop adc cmp cltd fcoml mov decb rcrl jb sbb scas add int cld pushq mov cld pop add sahf retq lods sbb movabs clc outsb and (bad) or rex.WRB add rcrl rex.XB cmp mov add xor sahf (bad) mov sbb xor lods movabs in enterq insl (bad) cld out mov push sbb callq mov je scas add or fs test lods cli rcll and (bad) sub (bad) outsb rex.XB movabs push (bad) repz lods loop push cwtl movslq cmp retq pop test mov rex.WRB fisubr sub mov lahf mov lods mov rex.WRX jrcxz (bad) data16 (bad) pop (bad) fbld sbb mov test (bad) rex.XB sbb shl rex.WRB lods sbb lods retq (bad) jl adc mov jbe clc mov lods cmp (bad) out in push (bad) scas push (bad) es movsl adc jle jnp jmp lret in jo lods in (bad) sub (bad) sbb lret xor int js jbe rex.WRXB repz mov adc (bad) mov pop lods lods iret cmp sahf mov (bad) (bad) and imull (bad) pop js loop mov sub lahf (bad) xchg movsb xor xor cltd in lods in xor (bad) jno xchg (bad) (bad) fwait or pushfq jle lods scas leaveq rol pop movabs cmc lods sub rorb adc lods mov xchg gs fiadd (bad) lods std (bad) add jbe out and adc pushq sbb jge out lret addr32 jrcxz pop (bad) jo imul (bad) vpsubusb sub movslq js lahf repnz rex.WRXB out mov (bad) jno mov rorl lods xor retq pop rorl lods movsl mov rex.RXB rex.XB rex.WB (bad) (bad) mov cld (bad) sbb push xchg (bad) and jmpq lods xchg mov insl jl add hlt repnz stos in addl scas ds lahf test mov xchg pop lods xchg (bad) push (bad) rex.W pushfq in imul (bad) test loopne lret rex.WRB rex.WB (bad) test pop out and rex.XB jg mov and retq pushfq add xchg icebp (bad) pop (bad) jp movabs ds stos pushfq xor xor lods (bad) (bad) jb sub shll mov scas outsb movl xor movsb sub rex.R add addr32 movabs jb jmpq rex.WRX (bad) pop lods jge mov add and rex.XB lods outsl xchg sub or or xchg mov cmp xor ss cmpsl out addr32 rex.R adc and rex.WR test (bad) rex.WR and cmc (bad) (bad) jo add mov sub cmp mov add cltd cltd (bad) xor (bad) clc (bad) mov insl (bad) (bad) lods incl (bad) fstps and pop adc scas cmp sbb in lret frstor cwtl rex.X fwait pop xor movabs popfq lods in rclb sub sar loop movabs (bad) (bad) movsb (bad) sub jae insb ds int lods loop mov std mov xchg (bad) rex.WRX cmc stos (bad) mov push cs mov cmp pop rex.RX shrb jge or int3 rex.RXB rex.WRB rex.WXB cmc clc rex.XB std mov f2xm1 (bad) sub sub addb jl in pop (bad) adc (bad) xlat (bad) pop test popfq orl add (bad) mov xor rcr lods adc movabs lock sarb movsb stos (bad) cmp sub mov rex.WRB adc popfq lods and jb mov mov add int3 (bad) sub movabs fdivrl mov loope jmpq in insb rex.WRXB loope in (bad) mov sti stos scas out mov (bad) (bad) movabs leaveq pop rcrl add xlat and mov rex.RX sar adc rex or mov mov sbb xchg scas rex.X fsubl mov rex.R (bad) xor (bad) fisubr rex jl xorl sub mov and movabs (bad) je fiadd iret out nop push test rex.X (bad) sub (bad) (bad) mov repnz rex.B in xor mov (bad) mov out lods sbb push pop lods cs fistl lock lods mov (bad) sbb outsb rex.WX (bad) movsb and rex.RXB xor rex.X lods pop or jne (bad) and (bad) (bad) xor (bad) popfq idivb mov sbb movsb and adc and xor adc fidivr retq icebp scas mov jne pushq lods retq add vmovhps leaveq xchg cmp mov imul adc rex.WX xchg addr32 popfq push jne mov (bad) retq retq and sbb pushq jae (bad) iret (bad) scas pop rcrb cmp test xor fcomps mov sub mov jno pop ja sahf imul add rex.RXB pop (bad) lods fistl jbe jb (bad) mov fstpl (bad) stos outsl imul jno (bad) test lods add add adc lods fiaddl rex.RXB imul popfq rex.WRXB mov mov out sti fldl ss adc adc in (bad) pushq leaveq sbb retq ds pushfq movabs xor (bad) lods callq je movabs (bad) stos adc out and jnp int pop add mov sub stc push xor sarl mov sub push in ja xchg vxorps jg jl lea sub lods mov rex.WRB (bad) movabs add mov sbb mov sub (bad) rex.WR (bad) and sahf xchg jg adc (bad) lods cmp mov faddl (bad) mov imul (bad) jo pop mov movsb faddl hlt rex.R lods out mov (bad) adc rex.WR fiaddl lret jae push stos or rex.RB sbb test sbb and sub xchg lods mov sub add retq outsl icebp fldenv popq (bad) mov pushq jg jp lods lock sub rex.WRB cwtl movb movabs test lods retq sub lahf lods jl xlat test lods and cmp jmp leaveq (bad) out pop sub xlat (bad) stc adc or jbe hlt xor jne (bad) cmp cltd (bad) std or icebp (bad) stos push sub data16 adc (bad) sbb jbe pop mov push sbb scas adc cmpl xor cmp lods sahf fcoml je cmp scas ror movabs ds xorl push sbb mov (bad) and (bad) ss lods rex.B (bad) mov lods jb js (bad) (bad) mov (bad) push pop rex.WXB adc stos rex.WB mov rex.RX xchg mov add (bad) lods rorl fldl cmp lods and xchg pop mov outsl lea mov add push mov rol movabs rex.WRX or retq (bad) mov rex.RB (bad) jno cmpsl shll fmull stos pop (bad) pushq mov push js mov pop add (bad) mov mov mov lods push movsb cmpsl sbb imul in mov js leaveq in enterq mov mov retq mov pushq mov movabs sbb xchg in (bad) mov add mov (bad) fdivrl lods imul mov mov fs lea rex.WRB adc mov lahf xor cld mov mov sbb sbb add pushq fdivl lods repz mov xchg mov or jle xor add ss (bad) (bad) decl mov stc sub leaveq fild sbb stos rex.X add jmp lahf push loopne in rex.RB (bad) mov rorb sub lret mov (bad) in lods in xchg add ja sub mov insl test jns lods sbb pop pushq lods sub jno fcoms xor (bad) pushq (bad) jl leaveq mov mov sub xorl punpcklbw in jge rex.WRX shrl callq movsb (bad) lret rex.XB lods retq (bad) imul scas mov mov sbb (bad) and (bad) fdivs pop rex.XB mov jg outsl jbe in (bad) out (bad) (bad) and (bad) pop clc or (bad) mov or lret jmp (bad) loopne movslq shll mov lea mov rex.WXB (bad) and cmp (bad) (bad) mov cmp popfq (bad) stc mov lret (bad) rolb fmull lock and jbe shrl adcb xchg (bad) cmpsb movabs test repnz (bad) jnp and lret mov lea jns mov outsl mov pshufw (bad) mov mov mov sub xor and rex.RB (bad) sub (bad) add lods fldenv movabs (bad) lods (bad) jmpq push pop lods int3 xchg shll ds lods push jl (bad) (bad) push lahf xchg xor (bad) cs lods (bad) rex.WX cld and ror stos (bad) mov adc mov std outsb fwait jns jg cmp add movsbl scas xchg sub jle cmc insb (bad) cmc movabs in test adc test movabs adc xor mov cmc cli add (bad) jae outsl rex.R jmpq rex.WRX lret in mov lea leaveq fcmovnu stos testb rex.RB pop xchg mov subl repnz and lods int add hlt adc gs imul lods ljmp lea movslq fwait (bad) cld add mov xor (bad) cmpl insb lret cli in push out rex.RX (bad) mov cld leaveq add lods pushq cmp mov movabs sbb lods int3 xor xor cmp cmp sub mov mov in clc rex.WR jb stos add xlat jno ss stos (bad) in (bad) out sti or shll cwtl stos (bad) (bad) or imul (bad) xor (bad) jl push rclb scas and (bad) clc pushq rex.WR cwtl jmp movabs sbb lods movsl add cltd test cwtl and pushq fnstsw out insb repnz lret addr32 (bad) lods imul lahf sbb stos jo enterq sbb adc movabs loop xchg jrcxz lods or xor or rolb stos in cmc lea rex.RB (bad) xchg lods (bad) xchg xchg and movabs add std and add xchg rex.B fsubrl (bad) or lods fdivrs sub sahf js stos fucom out jrcxz insb cmp pop cld mov outsb iret push stos lock lods in (bad) or mov jb jg cli cmc movabs pop rcll jo,pt (bad) cmp jne loop cwtl sahf frstor pop lods scas rex.WRX (bad) lock sbb mov xchg (bad) loope int3 insl xor fisubrl pop mov jrcxz lods enterq adcl (bad) js mov jo cmpsl lods rex.WRXB andl (bad) movabs lods rex.RB fisttpll rcrl (bad) lods add scas fimul insl adc mov hlt (bad) mov in (bad) mov js mov adc icebp fisubrl (bad) and push lret cmp popfq lods je sub pop in rol out scas mov sbb ficomp in jg mov movslq mov or cld and rex mov mov scas stos (bad) jg xor mov add and sub jge insb sahf lock xchg xchg (bad) (bad) jp mov pushfq jae in adc xorl loopne push movabs mov push mov add cmpsb addb mov je fwait push xchg mov repnz addr32 mov adc js mov sti ficomp cmp cmp or mov js xchg or (bad) sub pop outsl push pushfq test imul rol push (bad) movabs mov pop xchg xchg pop pop (bad) jno xchg mov sbb sbbb mov and sub cli or mov sarl xor lock or adc lods in cwtl subl lods sti je mov (bad) cmpsl jmp lret cmp imull (bad) fwait jl (bad) retq movslq (bad) or stos subb rex pop rex.WR (bad) adc mov add clc pop mov movabs cmp (bad) stos sub cmpsb lods fsubl rex.RXB lock jmp loopne fildll jge mov popfq lock in outsb adc rex.WRXB or repnz sbb sub or (bad) loope mov rex.RXB rex.X int3 mov lahf xor leaveq divl cmp movabs (bad) ja enterq xchg leaveq test xor xchg and roll jl mov out add (bad) (bad) addr32 jo in lods pushfq rex.WRB mov lods (bad) clc movl icebp (bad) sub movabs lods clc jmp retq xchg idivb lods sbb out pushq callq mov xchg lods test jo (bad) jp lods mov mov pushfq lods out mov rex.RX mov in movsl cmc sbb xchg or mov mov xchg lods cwtl (bad) xchg roll stos pushfq ja mov lods movabs (bad) cs lods rex.WX ss cmpsl stos loopne (bad) (bad) xor xchg jge lods sti pop lahf lret out add lods fcoml sbb (bad) test cmp lret lods add (bad) and cmp lods fwait hlt lahf popq xor (bad) xor in icebp in in xchg movabs cwtl or lret retq sub mov test pop fnstsw test loopne (bad) cmp (bad) mov out (bad) lods sub pushq fsubl lods (bad) cmp (bad) outsb xor and mov sarl mov lea and pushq fist lahf jg mov (bad) (bad) movsl cld sarl in (bad) scas movups adc (bad) rex.WR sub cs (bad) pop cmp stos xorl pop rex.RX repz movabs xchg lods rex.WRB (bad) jmp hlt push mov fidivrl sub lods xor cmpsb (bad) insb sub rex.WRB add cltd or (bad) out rex.WRX lock pop mov movnti fwait lods push xor cmp scas xchg mov or jb lods xor outsb (bad) mov shrb movabs xchg mov shrb (bad) lods fst or xchg fstps add cld lods test fiaddl mov sarb rex.WX xchg (bad) (bad) outsb sub movabs xor lods (bad) cld adc fisttpl rex.WRXB sub cltd in test movslq lods and rex.XB flds sar movabs mov jle test sbb fsubl sarb lret or mov rex.XB rcl lods cwtl lahf repz (bad) mov fcmovne movsb sub pushfq add lods movabs mov xor jne jp adc (bad) mov pop mov or cs sbb xor xor int test adc mov jae sub in rex.RX rex.WRX cmpsl test loope insb stos mov lods and cmp sub fsubrs movabs mov lods cltd jns cmp bnd mov lods mov or loope (bad) lods movsl lret cmpsl (bad) jno cmpsb push lods mov sub mov (bad) int3 outsl cmp test push lods fnop cmovo mov sahf cmp cld rex.XB rex.XB scas mov test mov fsubl movsb add (bad) scas cld rex.R insb sub imul hlt or in cli test lods (bad) jno adc stos mov out icebp lock xor jo pushq cmc out jo mull (bad) movabs lock (bad) sub insl insb outsb mov sub cmp mov push (bad) (bad) xchg pop rex.WXB (bad) scas and push mov rex.B (bad) mov mov lods sbb add jge (bad) (bad) test rex.WRB addr32 rex.RXB leaveq cld ljmp mov cmp stos and cmp test fsubr movabs out (bad) lods xchg or sub mov callq loopne pop xchg movabs fildll (bad) mov jno xor xorl outsl rex.WRX cmp insb nop test sbb out lods xor rex.WRB mov adc lods xchg sub in jne scas clc imul push adc push cltd lods sahf jnp,pn xchg sbbl cmp shrl ja lods jne jmpq stc mov pop push (bad) or movsl mov insb retq lret stos loopne lea jo mov enterq push mov (bad) lods (bad) adc sti sub mov lods adc push (bad) add rex.R loope jb cmpsl rex.R lods rex.WX pop add xor sahf stos pushq (bad) icebp adc xlat (bad) rex.WRB loope add retq lods (bad) jnp mov data16 lods mov lods gs cli rex.WRXB jae push lods xor jo xlat and lods std (bad) movabs mov jnp (bad) (bad) leaveq sub or fldcw mov js test mov sbb xorb mov jl mov pop rex.WRXB je icebp lods cmp push test pop mov test in push rex.WXB and lret jo push test cmp mov lods push push jno es push xor cmc and movabs stc and data16 (bad) pop cmpsb (bad) mov (bad) jae or jge mov stos xchg test adc mov or sbbb or int3 xchg mov mov mov (bad) jrcxz or adc xlat (bad) (bad) mov subl pushfq std or mov imul and sub pop clc jo adc pushq mov rex.XB lods test lods pop cld adc rex.WB repnz jno adc add (bad) (bad) adc (bad) fsubrl mov mov xor mov xchg lea stos rex.R data16 add add insb rex.RX lods callq (bad) (bad) push (bad) add shrb jl jmpq jrcxz test and test jp loope (bad) jmpq jl add lods scas stos cmp (bad) jge cwtl repz clc cli mov rex.RXB mov mov xchg and cmp xor mov rex.RX insb lock xor movslq lods addr32 es add mov cwtl outsb jrcxz stos ja movsl (bad) lods xlat add (bad) add (bad) cmp data16 stos neg rex.RX loope mov or mov or movabs push lea mov movsb ds movsl mov test cmpsl gs scas push sub stc mov adcl lods roll enterq sub (bad) addr32 add (bad) (bad) test pushq adc rorl stos movsb (bad) cmp scas add rex.X (bad) adc ss sbb cmp cltd lods callq mov (bad) fisubrl jmpq pushfq mov mov mov jnp pushq movabs xor nop xchg movabs adc (bad) leaveq add rex.WXB loopne rex.WX movsb add (bad) scas rex.WRXB stos imul rex.B jns fdivs add in cli (bad) push jmpq pop xor stos in std lods callq rex.RB rex.WXB xor (bad) push (bad) mov lods xchg xchg lret pushq rex.WRXB pop sub pushfq (bad) sub movslq adc scas (bad) (bad) out (bad) xor outsb lods decl cmpsl adc out push sahf or rex.WR in outsl lahf cwtl orb scas and jno int3 rex.WR mov lods xchg cmpb iret mov callq push orl mov shrb cmp and lods mov mov insl movabs sahf fidivrl lahf fcoml cli sbb mov js sub std add jo pop adc and test mov lods retq jge add lods xchg sub xchg (bad) cmc mov cmp mov pop jrcxz (bad) mov rex.WRX cwtl pop sbb adc or mov mov ficoml movsb adc clc imul lods lock (bad) mov pop jo lods mov movabs jbe outsl lret or cmp imul lods mov ficom lods (bad) xor in and std sbb add sub movabs lods push (bad) or rex.WRB scas movslq sbb (bad) pop mov lods test cli rex.WX cmp lret loop push mov pushfq xchg mov push xor jne ljmp cmc cli and movabs adc mov rex.WXB rex.WRXB mov stos jg cmp pop lods insb iret sub in jb mov insb adc pop stos nop lods xor callq cmpl (bad) push sbb lret cmpsl (bad) adcb xlat stc pop ja (bad) rex.WXB mov push int3 (bad) out sbb push ror ja cmp rex.RXB add and jl jns and (bad) adc ss sti scas std adc rex.WRB sub mov fsubl mov jbe xor test popfq adc (bad) add pop jno lods loop idivl (bad) in jg lods pushq (bad) mov (bad) add jb sub shrl (bad) lods (bad) stc (bad) adc rex.WRB xchg mov addr32 add jle jl lods fidiv push jne ds lods (bad) xor mov rex.XB and hlt adc stc pop mov xorl lahf negb add lods imul (bad) pushfw shrl (bad) clc cwtl test lods gs testb pop mov fidiv sbb lods adcb (bad) sbb adc (bad) out adc and (bad) (bad) stos mov std pop jmpq lods push sub add (bad) mov jo imul mov rex.WB mov int3 sub mov callq lret jle imul sub (bad) sub cld sub lods rex.R ds sbb lods fist (bad) shlb jl jo cmc scas sub lret ficompl and or mov rex.WXB mov (bad) fdivp add movabs mov rex.WR hlt fstl mov pop pushfq cmp mov rex.WX divb mov loope in lods cmp fs pop xchg pop push (bad) sahf retq scas getsec jne (bad) sub movsb iret mov stos jb push (bad) movabs sub (bad) test std fidivl sbb (bad) xbeginq cmp out rex.X lods test loop xor mov shrl shrl in mov jns jae (bad) hlt loope lods jno (bad) (bad) sti (bad) loope insb movsb rex.RX movabs rex.WRXB add (bad) jno fwait (bad) lods add adc (bad) in lods cmp cwtl lods insb pop retq adc retq (bad) rex.RX mov pop xor fmuls insb stos (bad) lea jb outsb (bad) pop out cmpsb push (bad) fcmovnb lods add (bad) int3 (bad) (bad) movabs sbb lret cmpb cmp rex.WRX push es sub lods movl cwtl mov pop rcll xchg sub test adc mov or test pop or sub rex.RB and stos (bad) add add enterq push cltd sarb or test popfq jmp cmp outsb add cld out icebp mov rex.RX movsb repnz (bad) imul mov stos adc (bad) retq movsb retq sahf (bad) in lods jb leaveq fiadd sub rex.WR stos pop (bad) lods push mov (bad) mov imul sub sbb test ljmp jrcxz leaveq xor out lods ror lock lods and cwtl stc int3 xchg mov lods negl push xor test insb xchg loope or (bad) cwtl imul jg retq cld add mov test in rex.XB addr32 xor data16 fcompl clc mov retq or sti in shrb xor pop sub mov (bad) lods and and (bad) out mov fbstp out or outsb fadd movabs mov (bad) out mov rex.RB insb adc scas sbb (bad) jno push xchg jo int jb shll xor jne sub sbb lods mov sub shlb rorl loop popfq rcrl sbb adc scas and movslq add lahf push rex.RX rex.W (bad) xchg pushfq retq in sbb mov mov rex.XB lods shrb popfq fnop loop lods pushq pop rex.XB scas xchg jmp in jg or jrcxz (bad) in (bad) cli hlt movslq adc subb mov cld or stc mov rex.RXB (bad) stos xlat subl pop rex.XB (bad) rex.R xchg sub and callq loope (bad) xor adc rcrb hlt add cmp rex.RX sbb shrl in pop fwait sub xor imul mov cmp (bad) movabs loope callq sbb xor int3 jmp push pop jae rex.WRB movabs jmp adc ds rex.WR flds imul pop rex.R sub je (bad) and jle lods adc adc lods rex.WRB repz mov (bad) in mov enterq xorl jnp ds sbb lods (bad) in rclb scas rorl movabs add hlt movsb xchg scas mov je movabs xchg xor mov pop mov xchg cmc out lods rex.W xor loop lods stos jb shr xchg lods lret shrl rex.RXB test clc pop (bad) mov insl jnp scas iret stos pop pushq adc movsb (bad) (bad) jl mov (bad) pushfq pop lods (bad) xor (bad) pushq mov lea mov mov (bad) rex.W lods addr32 (bad) xchg and lods xlat int3 scas movabs or retq push (bad) lods fadds (bad) mov add insl (bad) push data16 mov test (bad) in je stos rex.B cmp scas sahf pop adc rex.RX sub std rcrb pushq jae rex.B movsb cmp (bad) push adc loope pop (bad) test out repnz fldcw movabs mov lods scas orl sub xchg clc movsb rex.WRB xor xchg lret lods mov (bad) movsl outsl vcvtdq2ps enterq cmp rex.XB retq test (bad) mov mov cli loopne test xchg cs lret imul xor mov int icebp mov (bad) popfq push add (bad) retq sub xchg sbb fldcw mov pop lods push sub mov insl (bad) (bad) (bad) xor fistpl mov paddsb movsb repz mov andb lods pushfq fistp subl sub mov (bad) push jp or mov (bad) rex.WX data16 mov cli lods (bad) push rex.XB fs lods rorl jns rex.WB push xorb jle sbb (bad) sarb shrb ja enterq (bad) cli scas lock (bad) rorl jne in mov adc hlt mov lods pushq adc insb (bad) cmpl jns popfq (bad) stos pushq mov (bad) xor xor mov lods jae (bad) cmp testb loope out faddl mov mov movsb leaveq jne fs sub callq xchg mov lods xchg retq mov fimull xchg cmp mov jl mov xchg lods jg xchg add sbb cmpsb rex.X xlat (bad) mov and stc jmp bnd pop rex.WXB push xchg xchg lea lods retq cmp pop ficom cwtl mov lods rex.X add lahf jg or lods nop test sbbl in jno scas mov (bad) or lods (bad) insl std or ja sub rex.WR stc or (bad) (bad) sub mulb movabs push rex.WRB punpckhwd (bad) (bad) lods iret mov mov test callq out test xchg or xor mov and add loope (bad) mov outsl rex.XB sbb out (bad) xchg hlt mov jrcxz jns cli sub sub icebp rex.WR rex.R lods or clc add (bad) andl jae cmp repz sarb lods test (bad) rex.R adc in cmp rex lods pop adc icebp data16 mov scas rex.R xlat or (bad) and mov pop ja cmp add add push mov fldl sbb movabs ficom stos cmp jae scas add add out cmpsb decl xlat movabs lods jl (bad) mov mov pop rcl jge push adc jmp add in stos mov sub mov imul or xor lods movsb out roll (bad) lods out jae (bad) (bad) jne lods xchg or push lods (bad) xchg movslq in rex.WR lods int3 ss lret clts jnp sub loop cmpsb rex.WRXB ss push pop xlat int jrcxz xchg (bad) or lods lods int3 icebp ja xor adcl imul iret sub cltd insb mov mov sub retq adc loop push xor (bad) cld sbbl mov xchg cmp xor jo or sub mov sbb lret std lods int3 rex.W rex.WRX add lods mov pop pop cmpsl fisttpll (bad) adc movmskps movabs lods je (bad) mov mov (bad) (bad) imul adc rex.WR mov cmpsl enterq cmp retq (bad) (bad) je stos in rclb pushq pop movabs mov push movabs xchg jge jo stos retq cmp movabs sub lods (bad) or sti out add jbe pop lods movsl orb sbb movslq mov mov cmp movsb (bad) pop rex.WRB retq scas xchg cmp (bad) fist xlat jl pop movabs jnp lods rex.WRX cmp and cmpsb mov scas mov ja jo in fld retq lods pop rex.WR lods (bad) idivb jo and es loop pushfq adc mov insb data16 rex.RXB rcrl add rex.WXB ds movslq push lods movabs (bad) rcrb sub cltd cmp movslq (bad) rex.XB ja adc (bad) (bad) fisttp rex.X xor sbb leaveq mov mov sub (bad) mov adc lods and cmp xchg data16 movslq iret out cmp stos lods (bad) xor shrl lods xor jnp mov decb lods adc repz fstps and loope mov cld nop mov mov add cmp sub loopne sbb loop cmp cmp rcll (bad) (bad) mov add (bad) outsb mov pushq push imul xchg imulq jae cld testb sbb lods adc (bad) (bad) cmc repnz (bad) lret (bad) lods mov (bad) gs xor fwait jnp mov mov xor mov mov gs pushq subl (bad) iret movabs push cs mov sbb mov xchg adc mov es test sbb cmp cltd movabs xchg test nop out lret jbe (bad) mov rex.WB lods adc (bad) lods (bad) ss add xchg lahf lods (bad) stos rex.WR xchg rex mov cmp sbb or rex.RXB rex.WXB jge scas in cmp adc jge loopne,pn and (bad) out int test xchg add test test (bad) outsb insl (bad) and mov out loop test xchg stos scas rex test mov cmp mov retq enterq rex.XB (bad) cmp test or cld stc cpuid (bad) pop (bad) lods jle cmp (bad) mov lods or movabs xor (bad) mov adc pop fsubrl sub fsub (bad) test rex.WX out in mov mov xchg rex.WRXB adc clc jno mov std pop adc stos cli (bad) sahf rex.XB add sub sti fsubrp lods rex.WRXB cmp cld rex.WB push movsl and lods rex.RB or (bad) test out in xchg pop stc mov lods sub stos leaveq lods xor sub out cmp mov sub jbe fldcw add adc jmpq rex.WR and std rex.WR xchg lods mov pop mov (bad) jo lods mov (bad) (bad) push repz movabs repnz jne hlt (bad) repz fnsave rcl xchg outsb adc sub adc xor movabs (bad) mov sbb mov mov shrl stos int cld rex.WR in fbstp pushfq add mov cmpsb add cwtl jle cmp mov and (bad) (bad) scas lods push mov sub (bad) jnp xchg xlat and rex.WRX cmp rex.WRXB jns (bad) int3 cmc lods stc fsubr (bad) mov mov test lahf scas ss (bad) sbb stos xchg js cwtl cld insb (bad) fistpll lods std pop pop outsb jge or lods (bad) xchg push scas mov hlt add sub push mov cmp jmp add movabs rex.WR push xor or movsl lods and fsubrl stos movabs movabs jns and in scas lods imul (bad) rex.RX mov (bad) cmp xchg callq lods jne jae andb mov shll je cmpsl movslq popfq add mov cltd rex.RX xchg clc jrcxz lods int3 or out rex.WX rex.WRB rex.W add add (bad) loope fcoml xchg lods fsubrl sub je (bad) lods (bad) insb lock movsl cmp retq enterq jae rcrl insb push mov clc in lods (bad) (bad) cmp fsubs movabs ror push adc insl test (bad) cmp (bad) pop sbb rex.RXB out (bad) decb mov stos mov cmovge or cltd add xor pushfq scas fdiv sti jne loopne rex.RB (bad) or lods (bad) (bad) cmc rex.WRXB in insb fistpll xor insb lods xorl sub mov iret lods loop js lret mov out sbb rex.WRXB repz movabs (bad) lods outsl mov sti (bad) lods or pushq xor xlat and (bad) jmp divl retq adc jge push pushfq (bad) scas rex leaveq scas insl xchg lahf mov test and add (bad) lods xlat push pushq imul rex.WX (bad) rex.X outsb cld (bad) orb and or (bad) movabs lahf rex.X and (bad) (bad) sbb adc lret rex.RB rex.WRXB sahf push lahf scas rcrl fldt sub jle stos rex.R push xor mov je mov mov jne subb sbb lods (bad) sti xchg shlb mov and roll mov je rcrl scas add mov push sub test (bad) (bad) sub push (bad) hlt fsts out mov jne jge cld lods rex.WXB push xchg inc lods (bad) test imul insb test (bad) popfq (bad) (bad) lods pop cmpsb jmpq jl rex.X rex.XB out (bad) fdivs insl sbb (bad) mov (bad) ss (bad) movsb enterq cld scas fistpll pop and push movabs rex.WB or stos test rdpmc mov sarl (bad) idivl adc pop rex.X movabs jae jp in (bad) push in cmp imul mov mov xor lods sbb clc insb (bad) mov mov insl mov lods (bad) retq mov jrcxz sub movabs outsl push rex.WXB lahf cmpsb fdivrs loope sub mov sbb jge movslq rcl icebp test lods (bad) mov mov xchg sub add test adc mov and adc jns and rex.RX rcr mov rex.WXB movsl xlat out and adc jg (bad) (bad) and xchg sub mov loop (bad) (bad) rex.WRB xchg retq lods cmpsb retq jg or adc rex loope pop (bad) (bad) sarb (bad) cmp or lods int3 (bad) cld mov shrl xchg hlt (bad) out sub (bad) loop mulb mov lods cmp mov jmp fcmovnb addr32 lods mov lock lods mov (bad) pop mov xchg lods mov add lods (bad) decb xchg mov mov push (bad) mov and fildll xchg sbb loopne iret scas jb lahf (bad) mov xor stos (bad) adc xchg movslq (bad) insb mov insb sti cmp rex.B leaveq (bad) stos rex.RB rex.R push rex.R rex.WRXB jnp rex.R (bad) jb lods push pushq jnp jns lods push movsl (bad) (bad) adc or retq (bad) ja jl rex.WRB rex lods (bad) jb retq mov xor (bad) push rclb (bad) mov sahf xor lret xchg outsl mov (bad) (bad) mov in incb stos rex.X shrb (bad) outsb lods flds pushfq in je push mov in sub push rorb mov jmpq ljmp xchg insb sbb cld mov (bad) movsb jae (bad) rcrl adc mov mov int3 push out (bad) pop lods addr32 je andb lods sub adc hlt push mov mov (bad) mov lods lods fs pop shrl mov and rol lods jbe rex.WX and jmpq mov xchg retq out hlt lods (bad) divl adc pushq lods and and (bad) jle adc pop lods (bad) loopne sub add jno insb rex.X fnstenv movsb mov pop lods jbe (bad) (bad) and rex.RXB rcll retq jb mov xchg (bad) fs jle (bad) cmp pop xchg rex.WXB and sbb lods rcrl in fldcw add sbb shrl cmp (bad) in (bad) (bad) add lods add pop ss and lods mov adc mov cmpb scas test xchg (bad) lods push insl icebp pop (bad) shrb or loope mov (bad) xor (bad) rorb (bad) xor rex.WRX mov push sbb fwait sub movabs xor add (bad) (bad) ficompl js lods add rex.WR addr32 shrb mov icebp xchg (bad) (bad) push je sub push int lods mov rolb imul movsl movabs mov rol insl lods or xchg sbb out addl stc cmp fldt or pop movsb (bad) stos rex.R shrl mov retq jl lods xchg lahf jle rex.XB fimul or pop loopne nop cld cmp (bad) (bad) clc mov test test mov sub in fmul mov test movabs (bad) std and push lods pushq mov mov pop out sub sub xchg (bad) jl insl (bad) or mov mov icebp lods pop (bad) in xor lods sub lahf (bad) adc adc lods imul mov xchg jl lods cmp sahf (bad) int3 in push (bad) mov enterq (bad) or mov mov (bad) jo adc cs (bad) lods insl sarb lods jns out mov rex.WRX mov scas cmp adc mov (bad) (bad) in cmp push (bad) lods mov mov je (bad) (bad) sub sti data16 scas addl rex.WB push push rex.XB lods int3 movabs mov (bad) stos in sahf sub in lods sub lods rex.R popfq jp nop xchg xchg lods test and lods movsl (bad) movslq xor scas mov pop test mov (bad) rex.WR jge lods and pushfq out movabs rex.R and mov jl rex.W xchg test lods ficom jo mov jge sub (bad) pop push enterq or mov (bad) scas (bad) or or push lods (bad) xchg mov cmp popfq scas repnz mov in pushq (bad) cmp lret scas js jrcxz sbb cmp test gs mov data16 in test fldenv test imul (bad) in xor cmp int3 cmp mov lods (bad) outsl (bad) pop pop fist (bad) fisub out movabs add mov lods stc mov cmp loop xchg cmp out shrb (bad) (bad) fldt js icebp rex.WB push cmpsb jae cmpb (bad) jge adc lods retq mov sbb mov int3 (bad) movabs andl sti xchg retq rex.B and mov jrcxz add rex.WXB rex.R movabs rex.WX lods mov stos pop popfq or lods sub or jae jns movabs and mov xlat mov adc lods fist int3 mov scas js retq pushfq lods sahf mov push rex.W sti mov pop pop stos xor mov mov js pop (bad) xchg (bad) jnp (bad) (bad) cld adc cli js add outsl cs add mov sub xchg adc mov lret add out and mov cwtl fcoml xchg lods (bad) std rex.RXB sbb mov fadds movabs mov rex.WXB cmp movslq in xchg shr jp in ror mov rex.WXB lods cli movabs pushq lods adc lahf or in outsl lods iret rex.WRX lods mov mov je xor scas cmp lods jne push or scas cltd lods cmc roll jo movsb sub in (bad) rcl lods adc imul or xlat jmp and popfq sub in sbb cmp fmuls (bad) scas mov lods test (bad) pop jo,pn movsb notb mov insb pushq sbb add rex.B rex.XB (bad) test (bad) mov lods jbe fwait mov outsb rex.WRXB imul in (bad) lods adc rex.WRX jmpq mov rcl repz retq mov (bad) (bad) lods xor stos movabs jae stos sub sbb mov in flds orb (bad) xchg (bad) xlat lods (bad) lahf mov in sti add lods loopne rex.W test scas jmpq roll loopne fnop xor lods pop mov jmp stc test xchg rex.XB rolb (bad) push (bad) push mov xchg fistpl shrb mov xchg sti mov (bad) cli insl rex.WX ss sarl rex.RXB add rex.R test lods mov outsl rcl pop test addl or rex.RB lods (bad) dec or in (bad) lods repnz stc mov in rex.WXB or rex.RXB xchg or add jg outsl and pop (bad) test jae ljmp mov adc pop ss jnp shrl std test (bad) test lods mov cs fadds test test mov (bad) in pop (bad) repz pushfq xchg scas movsb sub scas stc fbstp sub pop vunpckhps mov hlt out scas cli lods stc or in (bad) (bad) mov xchg lret xor loope mulb movabs push sub sbb xlat pop sub xchg rolb std movabs retq scas jrcxz (bad) enterq (bad) sub mov sub jns lods (bad) mov out add out mov (bad) movabs mov int3 lods mov stos and stos fwait sbb and jp in push sub js pushq sti lods retq movsl jle insb sub js lods or pushfq mov add (bad) xchg movsl (bad) mov lods rex.WRB rex xor lods mov mov xchg scas pop add cld sub (bad) jle scas push jmpq in jno pop stos pushfq js (bad) rcrb stos imul lods out fstpt pushq sbb inc mov sub cmp (bad) scas xchg fmulp jne data16 add push push jae mov popfq lods outsl rcll xor lods in (bad) imul cmp xchg lods rex.X mov int3 fildl loop mov int3 movabs imul fldl insb adc jrcxz lods movabs adc rcrl sub callq stos rex.RXB rex.RX (bad) lods push insb frstor push pushfq jl xchg lods sbbl fdivl sub (bad) movsl (bad) mov lods xchg and int3 xor sbb movabs test lods (bad) insb es rex.R rex.WX sub cmpsb lods insb sbb lods movslq pop int fs mov jmp in add cmp rex.RB repnz subl mov movabs (bad) lods sbb mov ds lret movabs jg stos adc xlat movsb mov (bad) xor or test je lods movsb mov add fnstenv mov je in repz or rex.WR movabs rex.RXB adc sub int js lods subl rex.X rex.W xchg pop mov mov (bad) sub mov lods mull pop push lods mov scas rex.RX rex.WRXB (bad) sbb lret (bad) rex.WB imul mov lods lock or (bad) xor add lods push add sbb shlb mulb stos fldt add mov push (bad) lods jl movabs (bad) retq in adc rex.X sub and (bad) lods lret jrcxz (bad) clc and iret sbb pushq rex.X adc in xchg in callq lods xchg mov jmp cltd jbe cmpsl xor lock rex rex.W test (bad) pop pop pop xor fidiv rex.B iret xor mov pop jo shrl pop and sbb and lods test cmpsb rex.WR fldenv and (bad) addr32 push stos xchg movslq pushq mov fildl rcrl jge push (bad) mov jns subb pop jnp mov stos (bad) int or out (bad) stos add movabs (bad) movabs fdivrl mov jns (bad) out std rex.WR and mov shrb jbe jl test cwtl rex.XB shrb sbb js in cmp sbb or shrb (bad) (bad) callq sbb sub sti (bad) lret iret je jmp stos cld (bad) jl jmpq callq out clc (bad) test (bad) imul xchg loope jl sub sub (bad) mov rex.W movabs addr32 mov clc mov rex.X jg fcmovb jge enterq xor add xchg sbb mov (bad) (bad) lods pop mov cmc mov pop mov mov fadd add (bad) adc xor mov mov rex.RX shlb (bad) rex.WRXB (bad) cltd jmpq mov rorb (bad) (bad) mov (bad) fwait (bad) (bad) lahf rex rex.WB test fdivs icebp iret pop lods ffreep jl fisubr lods xlat (bad) rex.XB pop outsl adc int3 cmc lahf mov pop in loopne rex.B rex.WX lods sti iret (bad) (bad) jmpq fwait out (bad) adc mov sub mov add (bad) stos rex.RXB mov or add (bad) jne mov (bad) push sub (bad) cmp insl js insb add sub scas imul (bad) mov rex.WB mov jmpq push xor loopne lods fnstenv or test rep cs and jnp test mov rex.WXB callq out jle loopne xor movsb mov lods or sbb jbe rex.X (bad) sub adc or std (bad) adc mov loop jne sub push jrcxz cmpl mov xchg insb sahf hlt (bad) int3 jmp rex.RXB lahf ja (bad) adc out ss mov and test fisttp and cwtl (bad) lods (bad) mov or lods fnstcw stos mov jno xchg lods hlt sahf je (bad) adc sub jne icebp lods out or jle scas jmpq cld clc in sbb sub idivl (bad) rcll iret loope movabs mov rex.WX (bad) or add movabs neg mov jns jl (bad) cmc (bad) repnz (bad) fldt fidivl lods jrcxz int xchg js in add test int3 push imul mov jmpq lods rex.RX jp (bad) (bad) retq rolb jnp rcrb (bad) iret push in jb jmp mov stc (bad) or lods sbb mov lahf repz add xor rex.WRXB imul in add (bad) lods (bad) nop retq jge (bad) in sub jae add (bad) xor or jrcxz andb iret mov (bad) or lods nop or xchg data16 push loope mov jns push out xchg fwait lock mov (bad) xchg or jp movslq enterq sub ds mov xchg xor and (bad) mov lahf fisttpl or out scas outsl xchg (bad) mov movsl pop lods mov repnz sbb (bad) fnsave sub lods lahf pushq xor es mov mov or xchg insb lret rcrb movabs add (bad) insl retq rex.WX int3 xor scas xchg mov insb push pop loop lods jne mov imul sbb lods xchg fsubrs and rex.WR rex.RXB lods jp insl repz xchg sub lods sbb mov fildl gs fiadd (bad) and rex.WRB pop adc cmpsb outsb (bad) sbb rex.WRXB clc stc sbb stos xchg adc in int3 (bad) or lods cwtl fnstcw ljmp leaveq cmp stos rex.B pop xor scas movsb cmc hlt fldt outsl or sbb mov in or mov pop mov xchg pushq rcll mov and loopne or insb retq imulb push repnz fisttpl mov xor and lret stos xor cli adc divl mov mov mov fistpl enterq lods movabs retq (bad) int3 or in es jbe lods add lods mov (bad) jns cmp jo (bad) add adc loope (bad) and lods cld (bad) rex.WXB addr32 mov test (bad) jo sbb xchg rex.WRX addb add pop adc cli leaveq sub add pop test or jl in test (bad) (bad) push cmp add push lods js mov mov es (bad) sub (bad) lods stos mov jae outsl jg sarb (bad) andl movslq and mov xor lods rex.WXB fs popfq (bad) adc cld add push adc (bad) (bad) pop xor (bad) repnz data16 mov (bad) lods add (bad) (bad) rex.RB lods lahf shrb fldt cmp sub imul mov iret outsl mov insb or test lods add adc cs sub and (bad) cld pushfq mov mov in leaveq js sub repz adc rex.WRXB rex.WRB lret sub push or rex.WR pop (bad) mov movabs ljmp outsl repz rex.RXB cmp add mov rex.XB cmp mov test or xchg pop xor jmpq xchg lods mov fldcw and popfq pop out sbb pop (bad) int xor rex.B add or pop xor (bad) mov mov adc sub xchg add lods sbb push (bad) hlt out test cmp rex.WR cmp xor addl (bad) xchg pop xchg hlt int lods cmc jae xchg stos xchg sub (bad) cmp sbb callq enterq cmp and in rex.W push xchg pop push subb rex.RX rex.WR mov add (bad) lods add fmuls (bad) fldcw rex.WRB fisttpl loopne movabs xchg mov jge lods rex.RB neg lods movslq adc lods callq xchg out jg lock jp fbstp and xor jnp movabs sub sbb lods push hlt rex.WX scas cld outsb cli lods jrcxz scas (bad) shrb lcall (bad) rclb stos mov lods fild mov mov and pshufw es push rex.B cld or imul xchg mov (bad) mov sbb pop adc xor fsub mov (bad) (bad) cmc in lods int (bad) sbb jp xor sbb push jo add mov mov movsl xchg insb sub pop xchg (bad) adc mov jrcxz lods lret and (bad) mov (bad) mov test lods sub (bad) lea jmp jae jb xor lods jns ficomp mov mov rex.B pop xor es pop retq cmp sub gs movslq scas lea and rex.WR nop lret and fs lods inc out sub cs adc jrcxz (bad) repz mov retq and mov retq fsub or and push (bad) sbb out insb orl movabs shl or rex.WB xor scas out pushfq xchg adc (bad) jge adcl pushfq iret (bad) lods rex.WRXB (bad) out rex.R lods (bad) scas pop (bad) mov jns mov xor testl lods pop retq xchg cmpb scas (bad) sbb cmp push rex.WR rorb pop sub sbb stos movabs (bad) mov out sar (bad) (bad) pop cmc movabs sbb or imul push push sub (bad) sub jae data16 fcomi in movl imul push movabs lock jae add mov or mov movabs scas int3 rex.RXB xor or cmp icebp mov rex repz cltd mov (bad) js adc (bad) pushq fnstcw rex.WR jrcxz loope rex.WX mov jbe (bad) je cmpsb mov mov lods (bad) gs pop fildl pop rex.XB fs or (bad) (bad) nop cltd sti shlb add lods rorb stos cld pop or lods rex.RX loop in mov add stos (bad) ja xchg mov jnp imul (bad) adc fsubrl rex.WB adc mov popfq loopne in nop mov lods out (bad) vmovq pushq imul xor jmpq lods jp cmp rex.W in lods movsl sub rex.WB xchg sbb push sub jnp cmp cmc (bad) lods pinsrw loop lods xchg fadds (bad) out int3 rex.X cmp sub xchg subb outsl test enterq add pop clc push rex.R subl rex.WRX iret je sbb sub loope fcompl mov and mov stos cmpl movsl mov out lods (bad) or jmp repz sub ss mov in mov (bad) std (bad) jnp and insb rcrl cmp rex.WRXB lea add sub insl pop sarb (bad) and (bad) leaveq js in stos int3 mov adc (bad) add imul in jge mov lock sub mov (bad) and sub cmpsl fcomps sub lods and insb pop test jno push sub sub adc add shrb cmpb xchg jle rex.WRXB lea jno (bad) cwtl jne add or (bad) sbb imul test (bad) fadd lret lods (bad) push push imul adc (bad) xor (bad) (bad) rex.B cmp lahf retq xchg xchg cld pop add xor test mulb retq sbb and (bad) rcr push lods xor add pushq std in (bad) (bad) add adcl add lods insl push xor (bad) subb cmp shrl std and jrcxz cld pop adc (bad) nop cli out or movabs test jle lods sbb or jb mov nop (bad) scas xchg jae out (bad) je sbb rex.W rex.RB mov (bad) nop ss and and lods push fimul mov mov jo test jae test push mov popq mov xor insb scas movabs stos (bad) mov (bad) shrb repz jbe push sub jns xor in sub mov mov repz lods (bad) insl rex.RXB sbb pushq mov shrb sbb mov imul jmp add jo mov jnp or sbb ljmp out lods mov add shl sbb lods adcl testl imul (bad) pop fwait sbb out stc cwtl es xchg mov sub mov cld mov mov pushfq lods pop and mov (bad) (bad) rcrb and rex.W adc mov std lods movabs lods sbb repnz imul and xchg sub mov fwait mov rex.X pop (bad) fldenv outsb cltd xchg repnz sahf sahf shl and movabs lods xor push fucom adc addq data16 push leaveq scas pop sub jl (bad) or retq (bad) and lods and lods leaveq fiaddl fs push (bad) mov adc lods (bad) mov push movsl out push pop lods jge sub movabs clc mov sbb lods adc mov push sub out sub add rex.RX clc lods jge (bad) (bad) sbb or add out sbb xlat loop jg (bad) mov lods mov lret (bad) cld lods in add xor mov rex.R sti clc js,pt sahf (bad) fmuls add jp loope sub rex.RX and imul lock pop xor lods mov mov cld sbb pushq rex.R cmp lods jp push callq sbb xchg jb cld lret hlt (bad) jns (bad) cltd sbb cmp in incl or imulb mov or push lods cs add icebp stos nop pop cmpsl fnstcw xor lods adc movabs mov stos flds movabs (bad) in xchg jno and jmpq jbe (bad) lods sub sub rex.WRB (bad) jo subb and add pop mov cmpsb scas fwait mul mov mov test shrb jae (bad) lods (bad) mov test in scas (bad) sahf sub sbb xlat adc rex.RXB callq test sub cs add jno lods cltd fstp rex.X push loope adc fildll xor leaveq add retq sub or mov and cld rex.X jb mov lods jno jrcxz cmpsl nop callq movsl sbb std loope mov (bad) repnz lods xor movsb sbb repz movabs lret lods lods sti xlat mov loope rex.WRX rex.WB fdivrs (bad) or movabs jo push mov out push pop xchg mulb lods and pop adc (bad) adc (bad) cltd js hlt xchg imul je jg stos rex.RB bnd xchg rex.WR jge lods iret outsb (bad) rex.WRX pop pop xchg sub sarb movabs mov mov cmpsl mov sbb sub lods movabs movabs fnsave lods rex.WRX test test outsb mov (bad) xor mov repz scas (bad) lea out mov sbb sub cwtl or (bad) test jge out es nop cli pop lods pushq int mov jmp lods mov es lods sbb rex (bad) shl (bad) adc mov (bad) lods rex.RB xchg jno sahf adc push ja sub in nop lret push sahf (bad) pop jns je (bad) fist mov data16 xor or lods xchg cli mov or test rex.WX insb test stc sqrtps rex.WR jne and jae jp addr32 je (bad) mov callq retq jmpq sub movabs push rex.RX shrb mov subl jmpq xchg pop ds adc rex.RXB or lods add xor rex.WB pop leaveq mov out lods lock int mov xor lahf pop sbb add (bad) mov (bad) iret (bad) callq jb in mov shrb (bad) pop pop sub mov mov or movabs lods (bad) scas lret (bad) mov mov rex.WR int3 fisttpll sub lods (bad) (bad) pop repnz mov rorl leaveq test fisubr (bad) mov mov stos scas mov out out or sub (bad) sbb rex.WX (bad) jns (bad) xchg (bad) cmc xor shll adc icebp and jns gs retq xchg and in or (bad) (bad) mov mov enterq stos xor fcomi jmpq pop mov test pop adc mov lahf pop loopne sti test in mov pushq scas (bad) retq mov sbb pop lock scas and outsl add sub pop stc pop sub vpmaxsw (bad) (bad) rex.WRB mov or (bad) gs or cmpsl sub sbb adc xchg rep sbb pushq sahf jnp loop rex.B lods retq sub test adc and jbe (bad) (bad) push fstl callq mov pop sub in jl leaveq fwait pushq scas stos xor pop (bad) lods sub jrcxz jp cmc or out hlt (bad) adc xchg orb cmp out stos callq iret test cld (bad) jne xor repnz fcomps lods jmpq ss and scas rex.X scas nop lods retq xor fcomp or mov in mov xor mov rex.B data16 (bad) adc (bad) sbb faddl mov push pushq or stos xchg jb or lods lods mov jne pop mov lods ja rolb sysret sub rex.B lret cld adc repz stos out int3 mov mov rorl test or push lods and fdivp imul rex.RB movabs rex.WR (bad) sbb mov mov rcr data16 lods stos mov jl,pt and sub jo xchg (bad) xor lock or lods push in decl fdivp in xchg fdecstp xchg mov lods mov push loope rex.WX rex.WRX scas popfq or loopne mov and test (bad) adc rorl lea mov rex.RX enterq xlat mov xor imul xchg mov pop adc jp xchg lahf (bad) adc lods push (bad) or (bad) (bad) js shrl mov pop jl (bad) lods rex.WX and iret lret js mov push hlt jbe sub sub roll (bad) xchg rex.WRB add iret cwtl (bad) sti lods sbb and lods (bad) sub movl icebp xchg jg rex.RXB jl jbe or pushfq xor loopne je scas xor lods adc rex.WRXB rolb (bad) adcl and sub (bad) nop cmc lods xchg movabs xchg pop (bad) rex.RXB or lods outsl shll je cld or lods mov movsl (bad) pop (bad) vpmuludq in rex.WB mov mov repnz mov lods pop jno (bad) (bad) mov imul (bad) xlat rex.WX (bad) in lods cli cmpsb sbb (bad) mov lods pushq adc (bad) lods loop mov cmc mov faddl or lock sti es jle lods cmp mov out scas pushq cld pop shrl movslq fcompl (bad) cli sbb or jbe scas jmpq push mov or sbb sub in movslq test add and jne jmpq adc loopne pop loope sbb movslq jg sbb lods std mov icebp mov fdivrl jg je movabs add mov jne out add push (bad) rex.WX in (bad) in push int cld pop hlt (bad) pop stos leaveq fistl loope mov xchg lods adc push xor lods mov cli (bad) xchg jae push (bad) addl xchg movabs clc lret popfq mov mov (bad) and (bad) imul mov out sbb lods mov rex.WB adc (bad) rex.RXB setbe addr32 in cwtl push cli cmpsl rex.RX cmc cltd cli jge add retq lahf shrl scas shrl insb pushq add adc orl in sbb adc sbb (bad) mov scas mov (bad) jne lods rex.RX mov xchg xor xor rex.WRB push add mov or stc clc fldcw cmp mov jrcxz movabs rex.WX mov popfq and sub retq (bad) stos sub sub (bad) rex.WR data16 mov rex.W jp loope rex.WRXB test ds (bad) pushfq jg leaveq push shrb jb mov scas pushq out adc idivb adc shl pop test std xor and (bad) cmp xor xor and fisubrl jbe loop in popfq data16 lret stos nop adc movabs mov test pushq xor pop push cmc sbb push outsb sub (bad) scas jb rex.RXB push mov roll add rex.R lods (bad) lods stos movabs movb or rorb jae fidivr in mov rex.WXB js lods jge out loopne stc and xlat retq insl push enterq scas movb rex.R (bad) scas lods movabs mov sarl movabs stos and adc fisttpl sub sbb cmp movabs jrcxz lock mov jns push mov icebp int paddsb mov lods nop (bad) jno sub lods lods sbb fs sahf (bad) pop movabs movabs adc and sbb cmp sbb or std and sbb insb mov mov push std (bad) push enterq stos movsl jbe cmp or xchg sbbb lods jnp rcrl pop (bad) rex.R jmpq rex.XB mov pop lods (bad) or rex.RX retq mov fist xchg icebp add ffree lea orl mov pop sub (bad) sbb sbb insl loope cmp mov jl jg movabs mov imul retq or and mov jnp add rex.WRXB jo sub (bad) je sub xchg movabs rex.RB outsb push cmp movabs or repz xor imul (bad) rex.RX fwait xor (bad) test (bad) movslq and fs stc addr32 test fsubrs cmp xor rex nop cmp outsl lods loopne rorb adc rorb leaveq and lods jge (bad) pop int movabs jo movsb shrl rcr (bad) cmp or cmp and insl leaveq pop rcr in ja mov mov pushq rex.XB loopne (bad) lods movabs pushq xor sub sub rex.W rex.RB scas int out movabs add stc leaveq imul (bad) rclb and mov test or lods retq mov mov sub fsubrs movabs lcall lret movabs movabs stos in mov movabs leaveq sbb loopne mov (bad) mov rex.WXB fcomip xor cmp (bad) rex.R xor fs xchg stc mov (bad) lret pop push outsb (bad) leaveq subl imul je rex.RX fmull (bad) in data16 rex.W mov jl jmpq xor (bad) mov adc rex.R add movabs mov vmovaps cmp mov mov sub mov sahf rcl xor lods int (bad) push lahf or xor imull jb xor lods lahf jae xor std rex.RXB test in movsb rex.W pop lods (bad) movabs cld mov scas rex.RB jns xchg test lods rex.WX cs mov (bad) (bad) sub jrcxz rex.WRX xchg mov fadd fs (bad) insb in sub shr addr32 lods adc in (bad) pushfq (bad) (bad) mov and pop sub cltd mov add nop add imul mov (bad) lods (bad) pushq cmp in cwtl mov sbb (bad) jmpq stos ja push enterq cmp xchg cmp movabs (bad) lods sbb jmp (bad) rex.WRX or (bad) (bad) stos insb out mov pop xor lods rex.RB adc (bad) mull (bad) scas mov mov lods pop jge (bad) loop xchg pushq jae and lock mov int hlt cmp in sub rep movabs cmp or or add retq pushfq punpcklbw pop cli push sub add imul movabs mov in sub lods clc inc cmpsb jmp sbb rex.R rex.XB (bad) (bad) sarb and xor movslq mov stos (bad) jae std add test loop rex.RB rex.WXB (bad) iret scas fdivs out insb (bad) (bad) stos add sub jmpq (bad) cltd out scas mov subl xchg subb pop or cltd lods (bad) mov sahf (bad) cmp lahf mov rex.WRB callq xor add jmpq mov mov stos rorb (bad) or mov enterq scas pop cmp test sbb sub mov js add imul scas mov add cmp xchg clc insb jp lods or push cmpl lock outsl add jae xchg (bad) lods fild cmp jmpq sbbb xchg (bad) mov rex.XB sbb lods out rex.W jle (bad) pushq sti mov movabs mov lods pop callq pop fmul jno cmp rex.WRXB xchg jbe mov xor int retq sub test pop rex.WRX xchg cld loopne test sahf adc lods stc adc (bad) insb jns fisubrl pop mov lods cmp movb and hlt fwait sbb lods retq je jmpq rex.R (bad) fisttp imul rex.WX xchg rex.WR repz in and lods push (bad) (bad) xchg mov add mov lods xor rol outsb sahf or adc lods cld push sti data16 rex.RX xchg mov and adc lods rex.WRB sub int imul or xor movsb xchg test xor fcmovnb (bad) retq lahf lods insb js adc subl adc rex.RB insb cltd fimul push sub pop mov rex.R rex.WR jbe (bad) movabs rex.RB rex std (bad) lods ss rex.WRX (bad) rex.RX pop xor pop mov xor ja stos cmp xchg insl rex.WRB (bad) pushfq imul imul shrb mov rex movabs or (bad) (bad) xor or int3 rclb (bad) pushfq lods insb push sahf lods add (bad) mov push sub jb (bad) xor int3 rex.WX stos and mov fs sbb retq sub xorl addr32 rex xlat shrb (bad) and retq (bad) lods lods cmc rex std mov rep mov ss xor xor sti mov jo shrl stc lea retq sbb mov xor (bad) test imul and ss pop adc sbb stc out test xor gs imul imul fsubrs in adc (bad) (bad) (bad) cmp in (bad) add xor stos in (bad) in pushfq pushq (bad) jg cmpsl adc (bad) (bad) adc sbb lods int3 add mov mov adc lods in fstl movsb lods push in rcrb cld (bad) scas stc (bad) out (bad) xor lods jrcxz fmul (bad) and stos mov or push int3 or lods stos mov and loop sti lods movslq sbb fs pop lret outsl push cwtl rex.RX lods xor jmpq (bad) pop or sub rex.W lock (bad) jo xchg push rolb or lods sbb jp mov insl leaveq add lods rex.WRX fwait xor (bad) sub cmp js (bad) (bad) movsl push rclb insl cmp lods popfq xchg roll xor xor mov mov mov stos sbb fcompl add test adc test pop lods rex.RX movsl rcll xchg xor rex.WB jl,pt stos fwait sub lods rex (bad) jns roll retq (bad) jge jl lret push callq out cmpl lods loopne push scas (bad) (bad) jmp lods (bad) fnstenv test jae or lock imul sahf rex.WXB cmp (bad) lret xchg mov add xlat rex.R (bad) adc rex.WRXB sbb (bad) (bad) or (bad) (bad) mov cmpsb adc mov (bad) jle scas or mov out or sbb (bad) lods mull in or jge lods or adc stos decl (bad) rol rex.R cmp cmpsb lods cmp repnz cmp (bad) xchg lods rolb sbb pushfq stc lods iret movsb jns xchg mov adc test pop scas outsb push (bad) (bad) pop test (bad) xchg stc scas or addr32 iret sti pop fcompl push (bad) (bad) mov loope ficompl lock rex.WRB (bad) imul jrcxz lods js movslq icebp clc cltd xor out cli add iret lods orb xchg lods pushq (bad) xchg jg (bad) mov in sub pop sbb sahf jo fldl lods and (bad) scas (bad) sub stos sahf adc cltd out sub mov mov lods cmp test rex.WX mov cmp lods lahf imul lods enterq icebp mov lods int3 cmc loope or xor cmp pop outsl (bad) (bad) in jmpq add pop rex.X xlat cmp in rex.WR mov fadd ror mov jmp (bad) scas (bad) popfq sub add (bad) mov sub gs jle (bad) xchg clc pop pop in (bad) (bad) (bad) (bad) insl hlt mov rex.WRXB cmp out rex.WR push adc scas outsb lock cmp (bad) mov mov jnp xchg xchg sub (bad) movabs add mov jp (bad) or subl addr32 xor scas rclb lods retq icebp pop sbb outsb add push lods scas stos xorl leaveq jge mov xchg movsl lret repnz ja in and int leaveq (bad) stc jno (bad) in mov movabs lods jno pop xchg push test lea mov in int (bad) mov mov (bad) pop lods fs sbb mov rex.WB rex.WRX sub lea es (bad) add fcmovne rclb rex.RX lods loop mov pop scas loopne rex.RB movabs js outsl jrcxz rex.WR callq pop mov sti hlt in add movabs adc (bad) nop mov jbe jno mov in (bad) (bad) (bad) (bad) xchg adc and je (bad) (bad) shrb cld (bad) push rex.WRXB lods mov ds (bad) pop sbb (bad) (bad) data16 movslq mov mov jle adc in sarb fs movabs rex.RB lock jg rex.W push retq adc mov push imul cmp callq sbb fdivrl sub popfq xor (bad) fdivrp leaveq lods push xchg push (bad) ss lods and and gs fucomip retq std (bad) jg retq or ja lret imul js imull adcl jb adc retq movabs sub rex.WR js cmp jmpq and xchg sbb iret in lods mov rex.B xchg (bad) cli jge lods and (bad) push scas rex.RX in jne sbb fwait lods imul int3 subb mov lret test (bad) (bad) subl sub std or pop sbb movabs add hlt rex.WRX jp loope cmp or sub cmp lods movabs xor sbb fsub lods mov jmpq fidiv lods push xchg (bad) xchg (bad) mov sub sub sbb callq jl jle (bad) lret pop pop mov scas xor mov shrb adc sahf lods movabs sub fidivl add clc movabs cvtpi2ps rex.R (bad) stos fcmovb mov movabs rex.RXB movsb pop sbb ds (bad) clc push (bad) lret loopne jg hlt out mov jmp repnz mov xchg fsubrl rex.RXB mov or rcll lods (bad) icebp and mov jo fldlg2 add adc scas sbb callq (bad) icebp (bad) xor (bad) fldl (bad) data16 callq rex.X sarl xchg shrl cmc (bad) clc imul pop rex.R enterq cmp lods fldl (bad) sahf stos xlat imul and pop lods jbe lods mov add rex.RB xchg lahf jae outsl js jno xchg lods sub rorb stos fadd mov lods cmpsl add push jae jge scas push lods (bad) xchg rex.X xor hlt stos jnp in mov rex.WRXB mov lods sbb add push lods cltd test rex.R scas rex.WR jmp xchg add (bad) pop (bad) (bad) cli es cmp sub add push lods cld movabs mov adc adc xchg (bad) xor lods lea movsb movabs fs (bad) pop retq lahf test fstps (bad) (bad) jns xorb (bad) jo ror test cmpsl insb push out stos pop rex.WXB rex.WXB mov retq mov (bad) adc pushq (bad) rex.RXB mov popfq jns or jns cmc addr32 loope push mov pushfq hlt (bad) fstps movabs xlat lods mov pushq mov jg push subl imul rex.RB fsubrl rex ja rex.RXB repz xchg (bad) ss (bad) adc and lods in movups adc (bad) sub pop jns mov add and xchg xchg callq cmp sub or jg sti (bad) sahf (bad) push mov jrcxz test xor rex.WB push clc lods mov or js add incl pushfq movabs mov out (bad) (bad) rex.WXB int movsl xchg (bad) or clc pop mov (bad) notb jle mov inc lahf (bad) mov mov mov xor mov fnstsw mov paddusb sub (bad) subl in (bad) mov lock cmp mov lods (bad) cmp sub (bad) pop (bad) mov jl jrcxz retq movslq js sub icebp fsubrl jge mov cmp shrb loop push pop add lret iret jp sarl out in mov in mov scas iret mov pop retq sti (bad) movabs mov (bad) rex.RX xor lods jle push imul rex.R shll test add rex.WRB lods (bad) cli mov rex.RXB movabs ficom add jrcxz movsb xchg mov retq sti and rex repz hlt lock lods jno adc mov cltd movabs lock mov (bad) (bad) (bad) and add (bad) xor jg callq rex.WB jnp insl movsb (bad) adc movabs movabs mov (bad) lods incb lea or scas jne (bad) insb jae add jno (bad) retq cmpsl (bad) add lahf and mov movabs cmp mov cmp int mov xor lods add add cmp hlt sbb (bad) xlat enterq (bad) outsl movabs rcr or mov sub (bad) or je pushq (bad) in rclb jno (bad) mov mov mov mov lods stos adc cmp lods sbb add (bad) (bad) movabs subl (bad) outsl mov sub sti rex.WRB or jb jo rex shrb rex.RXB xor add pop lods mov (bad) test subl retq (bad) pop jle add jno cli sub sub rex.WRX fistpll movabs sbb sbb cmpsb popfq lods jnp scas pop ja mov (bad) rex.WRB pop sub rex.X mov (bad) (bad) mov and pop push jno push lods stos (bad) add mov jl lods cmp test and repnz gs adc in push movabs test jb rex.R sbb movabs pushfq out clc pop (bad) (bad) imul lods (bad) or adcq mov fisubrl incl pushq sub test adc adc loop pop xchg pop in clc stc jg add xchg jno lods xor fstpt or movb mov and jnp (bad) (bad) xor or stos out push repnz jp (bad) add insl sub fidiv fidivrl adc (bad) jns sbbb sbb ja rex.RXB rex.WRXB pop sahf mov in cmp lods and mov loop mov addl (bad) sbb (bad) (bad) insb lods movslq sbb cld mov mov in jb popfq xlat and lods ficoml lods or mov (bad) fs es cmp cli mov pushfq or add (bad) (bad) lods and mov rex.RXB rex.WXB shrl data16 idivl and sbb mov mov (bad) mov idivl or fdivl scas (bad) sbb mov sbb sub or movsl cmp movabs callq push xchg outsb jp vcvttsd2si retq popfq loop (bad) fildl scas out rex.RXB mov lods (bad) (bad) xor mov sti movsl and mov rex.B sub adc sub ss xchg push movsl mov pop or sti (bad) lods (bad) in mov stc sub and jmp (bad) mov add fstl xorl loop mov add rex.WB ss rcrl (bad) imulb (bad) hlt add push rex.R and mov bnd jo rolb mov jg adc ds lods (bad) sub out xchg rex.WXB mov add (bad) test rex.W xor scas mov push (bad) fcmovu lods imul mov push outsl xor imul movabs add lahf lock jle (bad) lods or std adc jns sub fnstenv rex.RX icebp imul stc mov rex.WB push stos cmp jp int3 andl jne cld and mov add cmp cltd sub pop callq mov retq xor mov xchg sbb (bad) push (bad) lods xchg in js add int3 jo loope mov movabs or adc sbb movabs lret imul shll (bad) and movabs lods (bad) add hlt pop mov test lea stos test xor sti jg jmp in lods sar fcoms sub out test mov lods jle test movsb lods rex.X js mov (bad) push push rex.WRXB sub (bad) sbb retq fcmovnbe stos test insl movsl lea rcll lods orl sbb movsb sbb hlt lods fwait (bad) outsl mov lods loope test mov stos rex.RB adc (bad) retq adc jb rex cmp rex.RX repnz cmp shrd (bad) test and and rex.WRXB es nop lea pop push adc sarl lods (bad) lahf mov rex.R data16 test add in in rex.X scas mov repnz fimul out cmp lret lods iret out (bad) adc xor mov jns movsl add rex.WR jnp lods jmpq jb loopne xchg movsl rex.XB mov cmpsb rex.WRX movslq lods rex.R movsl (bad) and xchg scas cld xchg jg clc ja mov mov out (bad) in ss outsl or hlt lea push lahf leaveq push rex.WXB scas fwait (bad) repz fistpll cli rex.RX pop rex.X fwait retq ljmp sahf rex.X lods mov mov fldcw lret and lods (bad) imul mov scas pop (bad) xor pushfq mov (bad) lods cmp mov stos lods and stos out add jmp popfq or rex.WRX sti movabs push adc test insb out (bad) xchg (bad) popfq rex.R lods xchg fildll paddb rex.XB and fadds mov cld in test stos fisubr cmp notb (bad) (bad) and jmpq lods loope sbb and jl rex.R jno fdivs xor scas scas jns notl mov or (bad) outsl or jg rex.WRB adc push add retq enterq cmp fisubrl fs lods xor jle out (bad) lods scas pushfq shll cmp (bad) lods rex.WX movsb and jae lods fcoms cmp rex.XB (bad) outsl mov fucomi rex.R (bad) cmp cmpsl shrl rex.WR adc pop adc push xchg (bad) movsb callq add (bad) lods jl lods adc add pop outsb ss jns rex.XB sahf sahf ds lods in (bad) and jmpq and and cs movabs enterq sub add (bad) and (bad) enterq push out stos xchg insb (bad) xchg rex.X sahf pushq add movabs mov mov sbb data16 jbe clc xor mov cmp scas in pop (bad) addr32 cmp and cld jrcxz callq cmp mov xchg lods andb scas jge jrcxz xor retq sub xor repnz and mov fs rex.XB lods movsl roll rex.WRX incb push lods in divb gs jp lods js jne and (bad) rex.RB mov cmp and pop mov gs xchg add mov in xchg hlt outsl add jns imull (bad) js,pn lods incb push add stc pop iret mov sbb or mov cmp sub and insb lods sarl scas mov imul je jno jl cmpsb lods mov (bad) sbb std sbb sub imul retq lods or out xchg lods push fisubrl (bad) sub insb or lods jmpq mov stos fs sbb divl pop cmp rex.WR stc retq pop scas cmp sbb retq lods enterq pop lods ds xchg lods loop jno push imul in out xchg fwait (bad) push cltd jmp sbb or add leaveq stos sub rclb lods lret add or xchg and mov add lods movabs addr32 hlt hlt and scas cmc jae rex.RX test push outsl mov callq (bad) lods (bad) popfq insb xor sub xchg add sub or rex.R xor mov hlt cs stos cld cmp jno in xorb out adc cld rex.WRX in mov (bad) lods fidivrl int mov cmpl rex.RXB xchg (bad) xor loop xchg ffreep adc jrcxz in sbb and lret xor cwtl lods cmp or fldt and add or rex.XB sbb lods pop (bad) pop xor or lods mov jmpq test cmp (bad) ja subb fstpt sbb and jle lea sub lods imul pop cli (bad) lods (bad) jl sub mov pop addr32 sub jb lods push cmp mov retq mov jnp test pop pop rex.W fs lods lea mov sub sub fs rex.X (bad) pop sub stc (bad) lods test notb test lods test retq in cmp lock mov pop (bad) lods movabs pop xchg (bad) dec cmp mov sbb cmpsb jne adcl movsb movabs (bad) imulb and push hlt (bad) (bad) mov imul jnp push sub adc cs lahf mov sub and lods add loop sub jg and jge (bad) sbb repnz mov (bad) add xlat (bad) lods pop stc pop lret cmp lods mov rex.XB mov mov xchg leaveq imulb pop sub xchg cmpl rex.W cmc nop test mov and (bad) in lods rorb and sub (bad) cmp (bad) icebp callq out clc out fsubrs ffreep (bad) lods (bad) (bad) movsb jg jo push retq sub test mov cmp (bad) test jge push rex.WR sti lods adc jle sub mov (bad) (bad) rex.WRX addb mov pop (bad) or int3 out cmp lods stos mov jnp sahf (bad) or lods (bad) cmp mov adcb loopne (bad) jg mov or rex.XB pop test xor jnp sub fwait lods (bad) (bad) adc jno xchg sub mov cmp rex.WRB movabs stc and mov cli adc loop lods pushfq (bad) (bad) rex.WR mov jae push or push rolb and fwait lods loope jmp xorl jmpq leaveq enterq cs or mov in adc mov mov stc addr32 scas (bad) or sub cmp out repnz repz scas add rex.WX xchg cmp adc mov subb mov cwtl (bad) mov subl rex.RB out lods push cmpsb scas add lahf push (bad) lods sarb rex.WB cmc xor lods xor add (bad) shrw (bad) or mov pop retq (bad) (bad) lock fcompl (bad) rol rex.WXB jmp js or or push or ljmp mov imul xor pushq sub int xchg pop or xchg roll (bad) (bad) add in out adc xor in adc lods rex.RB cmc cmpsl test mov jle jnp sbb xor movsb fidivr rex.W lock pop cmpsl sti or in sub cmp sub shll jno lods lcall callq enterq loopne lods fdiv movabs xchg lods cld ffree mov cmp je lock mov xor adc sti lods roll lods pop add scas pop lods rex.WX pop rex.WRB lret test and lods ficompl pop jp cmp sub test test adc imul repnz (bad) add (bad) and ja add sarl jg (bad) mov movsb sbb lret xchg scas jo mov adc push mov shlb stos jl add jle fimull rorl (bad) popfq sbb rcl movsl movabs fldcw (bad) fdivrs movabs mov movabs rex.RX mov lods xor decw fwait lods rex.R and rex.RXB mov lea (bad) xlat rex.WRXB xchg ja insb jle rex.R lahf cmp or insb or lods cmpsb (bad) adc fs jb jns rex.RB addr32 in mov xchg push adc rorl lea mov push int3 fs rex.WR jmpq scas (bad) rcll sahf xchg rex.WR (bad) stos and cmp repz sbb (bad) in mov (bad) cwtl lret jo xor (bad) retq shll xchg mov fist (bad) adc and lods jns xor and test sbb stos (bad) test stos push imul in or adc cmc (bad) (bad) sbb cmp (bad) mov jle mov or int sub mov in sbb pop mov (bad) sub add pop retq stos mov (bad) rcrl stos mov loop mov clc clc mov pushw movslq (bad) ficom (bad) mov (bad) ja xchg (bad) push in sub adc jno mov stos lods outsl roll (bad) and lods int3 add cltd sbb cwtl add addl rex.WX stos stc (bad) fdivrl jns mov sub stos add sbb pop jb xchg (bad) loope or (bad) (bad) or rex.WXB (bad) movabs (bad) stos stos xchg ss shrl rex.WXB lods push callq nop cmp pop or adc (bad) lods jo (bad) xchg in andl rex.B jg jo in and (bad) cmp cmp lods sahf leaveq jnp repnz rex.WXB xchg cltd rex.WRB cs in outsl xor (bad) jnp pushq sub testl xchg mov retq clc popfq jns insb out jle mov and (bad) cmp lods sbb mov int3 fcmove out js add (bad) jae jrcxz sub adc mov (bad) movsl xlat scas stos lret mov sbb jrcxz in insl or lods (bad) (bad) or lods imul rex.WX pushfq maxps xor insl rex.WXB mov (bad) insb xchg lods rex.R lret push sub adc insl pop iret lods fldl je jp in loopne rex.WB rex.XB out (bad) lods cmp cli push fwait ja rex.WXB push nop rex.X sub rex.WR rex.WB add (bad) mov scas lods (bad) scas add pop or icebp (bad) rex.WRXB lret fnsetpm(287 in mov sbb rex.B jae sub rex xchg data16 popfq mov mov retq mov xchg and rex.WR cld sahf adc adc fild mov or mov cld in mov hlt sbb rolb lods add ficom (bad) js je rex.WR rex.RX notl rex.WRX fwait (bad) rclb mov sahf (bad) repnz inc cmp in movabs scas jae subl enterq add jae lods outsb mov lods jnp hlt mov scas in mov xor lods pop (bad) rex.R data16 lods imul adc push lods jge xorl mov cmp lret push out loopne sub (bad) int3 cmp data16 je push jne (bad) (bad) repnz jmpq xchg test sub retq lods enterq data16 or add notb lods test jle adc cli pop mov mov nop in rex.R ds mov or mov pop rex or cmp and sbb movabs loop rex.RXB repz scas (bad) outsl jnp mov lods and mov and rex.WRX xchg and stos sti sbb cld jrcxz out scas lret movabs xchg (bad) hlt test cld (bad) cld lods add (bad) adc add lock lods andl pop addw and or add (bad) mov rex.WR movabs cmp test fist and and lods (bad) xor cmp push and jp pop jne fnop sub cli jo lods rex.WXB or mov cs and in adc mov (bad) je push out (bad) (bad) pushq repz cs mov or mov je popq rex.R lret retq repnz loope retq xor sbb add callq xchg mov adc outsl in (bad) and (bad) movsl test scas sub (bad) or repnz mov rex.WR ja cmp adc mov sub (bad) push (bad) test movsl imul fdivs sub rex.WRX insb xchg mov jmp add jrcxz pushfq jb jbe popfq lods movabs fcmovb out rex rex.WXB movabs loopne (bad) fs test (bad) mov lods fadd push je or stos (bad) sub sbb fwait stos rex.WR (bad) data16 mov in mov mov rex.XB jge jno jmp shrl loopne stc scas leaveq in or cmc subb lods pushfw lret (bad) sahf pushq push sub jmp movabs mov cmp rcrl data16 lods (bad) xchg in rex.WRB xor mov sub pop pop jmp xor jl lods out xchg movsl insb sub vmovups out lods mov mov fidiv add rcll (bad) cmp mov pushq (bad) fcom (bad) (bad) cmp (bad) lods jns scas shl test fildll (bad) xchg cld jmp sbb stos movabs xlat rex.WRB cmp (bad) and mov retq add icebp (bad) mov push cmp rcrb cvtps2pi xchg icebp rex adc insb insl popfq stc lods (bad) (bad) rclb fcmovu sbbl outsb (bad) xchg pop (bad) loope out jrcxz (bad) mov test sar stos (bad) mov cltd fdivrl sti xchg mov xor rex.XB xlat mov cmc and xchg scas pop loope adc int sahf xlat pop rex.WB rex.B lods shrb in fsubrl sub mov adc pop (bad) (bad) imul shr jbe in movabs xor rcrl stos lods mov pop (bad) pop rcr push mov or (bad) cmc or adc xor cmp jo mov fstl xchg sbb cmpsl out lods movsb (bad) xor push lods xor faddl mov movsb outsl in cmpsb xchg shrb jg mov rclb cmp (bad) loop movabs pop cmpsl cmpl fsubrs fld clc (bad) scas jne lea add mov cmp mov pop (bad) icebp xchg nop stos (bad) outsb out js mov fbld (bad) cwtl int lods loope movl mov cmp lods cwtl cmc stc (bad) cs (bad) add lods add out jg lods (bad) in mov stos (bad) and pop (bad) cld imul rex rex.RXB in insl movsl (bad) or (bad) mov mov shrl push lods mov sbb jmp vxorps fcomp mov push or insb ja rex.RX scas rex.WRXB rex.WB retq xchg cmpsl lods cli sbb jmp mov out scas movabs lret cli adc movabs lock xor outsb (bad) or (bad) sahf js (bad) lods callq movabs xchg scas (bad) pop leaveq mov callq mov mov cwtl retq (bad) jmp fistpll (bad) push or lret je loop mov stc rex.WRX test rex.R fsts xor (bad) sub lret (bad) pop leaveq lods add rex.R jle lods (bad) sub cmpsl pop movslq mov mov jp rolb outsl out lahf mov gs jl lods pop adc shll cwtl add mov out insb loope (bad) rex.WB fwait sub jo (bad) (bad) add or mov outsb (bad) fdivrs fcomi and xchg sub jbe and lods pop adcb repnz add insb gs stos sbbb cld mov rorb clc shr out adc test cmp lods jp scas pushq cmc (bad) mov rex.WR cmpl pop rex.R outsl (bad) rex.XB lock or and js rex.B pushw mov xor outsb push leaveq pushq int3 mov jge (bad) lods test std loopne mov and mov movabs loop lods (bad) imul lea adc incb mov rex.WX js rolb test lods push add sbb leaveq cmp adc outsb fnsave ds data16 lods retq jmpq cmp add test rex.XB add in xchg mov leaveq scas mov rex.B mov cltd (bad) movsb add pop lods push scas xor (bad) sti jb xor add rex.R js shlb and shr sti in mov cld add jp lret rex.WB xor add test or movabs push repz add mov (bad) data16 movabs (bad) sub (bad) pop mov outsl adc (bad) mov or cli cli ja clc ss jle pushq fmul pop lods (bad) sbbl movabs xchg movslq insb lods sbb std (bad) rex.WRB shr out lock cwtl jo sahf rex.X mov jp in pushq insb mov movsl lods pushq jle outsl lahf cmp lods jmp and cmc rex.X lods jrcxz adc mov mov loopne imul xchg and (bad) (bad) push retq mov fwait iret jo (bad) rex.RB mov cmpb (bad) lods iretq (bad) add out lods fisubrl cmp insb or jg sti movsl gs ss lea xchg mov jns shrb scas (bad) mov negb mov lahf nop (bad) sbb cmp loope retq jp sub (bad) or adc sub (bad) jae (bad) shrd cmp (bad) (bad) sbb jg movabs jge rcll lods push (bad) pop or rex.B xchg movsl (bad) rolb (bad) sbb pop (bad) push hlt xchg addr32 add lods jle lret mov lods xor fcompl lods pop sub xor es xchg sbb sahf add movsb cmpsb jne out scas fwait pop popfq (bad) mov (bad) adc outsl (bad) in lods fwait mov popfq imul test cltd in sbb (bad) gs imul movabs mov xor mov (bad) test pop lods in mov or jnp jae in xchg sbb and jno rex.WX movabs sub lods cmp jle mov jmp lods mov rex.XB (bad) xchg add sti xlat retq shrl sahf adc (bad) sbb adc xor lock xor rex.WB lock sub mov int3 mov lods cmp (bad) testb mov add sbb stc and xor addb test cld sbb js lea or adc mov rex.B movsb test (bad) jl out pop cld mov (bad) sbb or rclb enterq xor cmc adc pop std (bad) pushq sbb xchg (bad) shrb lods mov push movabs adc lods outsl jle (bad) ss (bad) and in (bad) stos rex.WXB xchg jne pop outsb int (bad) stos lods mov pushq mov scas mov (bad) (bad) lret (bad) pop jo callq add clc jmp lret xor movsb rorl xchg (bad) (bad) adc jnp lods sbb adc (bad) mov fnsave (bad) mov lods xchg rex.WRB sbb (bad) and or out xchg lods (bad) (bad) and imul mov xchg cmc js leaveq (bad) mov lods xchg push add scas (bad) sbb and (bad) scas jbe sar push (bad) out mov (bad) pop add addr32 retq jmp rex.RX jo imul jb (bad) adc xchg or insb mov in adc cld lahf clc sarb mov jge rex.X xor rcrb jne add cmp adc rex.X rcll jmp cwtl mov sub or sahf sub push (bad) xor out mov in adc and (bad) lods cli (bad) mov hlt movabs add out sub mov retq callq (bad) js sti jae (bad) pop lahf fucomp add int3 icebp (bad) out xchg mov add rex.B fdivs cmp mov sbb jb rex.WB (bad) xchg mov fucom cltd mov in mov (bad) cli cmovb jo movsl (bad) rex.WRXB (bad) (bad) mov (bad) jae sub xchg add loopne (bad) lods out xor in and sbb mov lods repz jge lret sbb movabs add scas fisubrl in jb sub hlt imul cmp (bad) lods pop sti adc out insl rex.XB fs mov sub stos mov fistpll (bad) (bad) retq test lods stos rex.RX sbb or xchg shr je jae (bad) lods push stos pop rex.X (bad) push (bad) sub outsb add and or jne mov rex.XB enterq cwtl ja add subb (bad) sbb cltd (bad) subl xchg (bad) sub mov adc lods and xlat lods rcr stos cmp in lods cs (bad) mov sbb cld scas xor sub xchg sub cmp enterq test rex.RX adc data16 mov cmp pushfq lods add sbb sarb (bad) mov adc (bad) sub sub mov pop lods add pushq (bad) or lods (bad) mov (bad) leaveq sub lods (bad) rex.WRB rex.WRX lods movslq (bad) shrd (bad) (bad) xor pop mov mov (bad) rex.WRX cmp out push jg lods callq movslq imul out mov in cmc xor cld add mov lods mov pushfq rorl in cmp sar add cmp pop (bad) repnz outsb lods (bad) int3 xor lods loop push (bad) pop (bad) cmp pushfq stos clc push (bad) lods mov or scas movslq push xor rcrb lods shl xor cmp jge adc rex.X scas push rex.WX (bad) push jb (bad) mov stos scas out adc mov lods fldl2e jo (bad) and adc xor lods mov pushfq (bad) xlat push pop pop movabs and pushq adc movabs add rcl test mov add in (bad) insb fidivrl retq test (bad) loopne lods or jmpq mov mov frndint lods rex.WR stc xor mov int3 lods add xchg pop lods je mov add clc and int3 jbe jle stos in outsl (bad) adc or sti (bad) enterq idivb (bad) xlat cmp movsb lods sub retq fwait mov lods cs adc sub cli sbb sub subb cmpsb pop (bad) xor mov lods xchg rolb fidivr sub retq push data16 lods pop mov scas retq lods iret in rex.X imul in vunpcklps (bad) push cld data16 test lods rex.WRXB test movabs imull add rex.WR loopne lret (bad) push sbb shlb rex.RXB retq jmp (bad) lret adc and cmp mov test xchg pop xor test mov adc mov mov rex.XB scas adc (bad) mov sbb sub mov sbb (bad) xchg lods xor lret rex.W jrcxz sar push (bad) lods test loop fdiv pop rex.RXB mov callq rex.W callq lods mov cmp add sti (bad) ja (bad) xor lret jrcxz movsl jle pop sbb rex.R jb (bad) mov sbb rex.RX xor cs lret in (bad) or and (bad) (bad) jmp stos lea (bad) (bad) sbb xlat adc lods (bad) (bad) rex.RX pop int sbb mov rcrb add or jb movsb shl test push jns popfq lret mov rex.RXB lods prefetch or mov movsb (bad) lret rex.WRXB rex mov rex.WXB test adc sbbb movabs cmp (bad) sbb insb mov jp (bad) in vpaddusb lods (bad) xchg add xlat addr32 scas lods rorb push fwait (bad) add lock stos mov mov xor mov jno test je lea movabs (bad) lods test (bad) lods adc adc xor retq lods movsb test iret mov adc (bad) stos hlt out retq lods mov scas repnz jge (bad) std xor add out lods mov rex.WX js lods gs mov (bad) jbe (bad) lods rex sub (bad) outsl mov scas (bad) adc adc (bad) rex.WXB insb mov rex.WX pop lods sub adc add lods rex.R rex.WXB jmpq or rcr stos adc sbb sarb sbb jge shrb (bad) hlt lods pop rex.WR mov (bad) stos in (bad) retq sbb jl pop sbb mov jo shrb sbb or out pop lods repz mov imul scas out std leaveq rex.XB (bad) rex.WRB rex.W rex.WX rex.X push xchg sub int (bad) (bad) (bad) or mov rex.WR addr32 lods add mov lods movabs sbb stos xchg stos add add (bad) (bad) (bad) int fldcw movabs cmc fisttpl xchg lods mov push shld cmc mov lods test sub pop pushq mov mov std (bad) mov and jp rex.R xor sub push xor lahf jrcxz (bad) xchg je (bad) pushq movsb in stos fmulp xlat add cld mov (bad) hlt xchg jae lods cmc jrcxz callq lods (bad) (bad) xorb and mov (bad) cwtl mov and fildll hlt sub movabs fadds stos mov lods jmp push pop mov mov in in movabs xor (bad) add movsb rcrb mov (bad) (bad) push test mov and and rorb (bad) cs mov xchg lods pushq rex.RX jl mov sbb stc stos mov xchg add je jge jo mov popfq jge sub and enterq scas cld and (bad) sub sti lahf lods repz xorb rex cmpsl movabs (bad) lods push pop stos nop (bad) icebp je xor stos roll lods xchg out mov rorb mov stos test and test movslq rex.XB stos loop fsubp xor pop test jmpq (bad) (bad) pop pop sti rex.W xchg imul mov pop test lods sub jrcxz jns pop (bad) lods gs pop ficoml adc (bad) test fcoms add sarb (bad) fidiv mov xchg (bad) data16 rex.WXB sub jb cwtl (bad) rex.RXB lods enterq callq lods pushfq (bad) xchg movslq test cmp lods ds nop ja (bad) cs int3 (bad) rex.XB jns js lods stos sub mov lods cmpsb adc imul add lea mov fdivs rolb or lods xor lods insl movabs push cvtdq2ps pop rorl cmp mov add data16 xor (bad) test xlat jnp cmp (bad) repnz outsl sub jns ja lods (bad) fwait out or mov jl lods sahf pushq jne mov sub leaveq xchg lods (bad) cmp jl test movabs cld rex.WB repnz fucom xor fidivl xchg rex.WR (bad) stc imul movabs pop outsl (bad) sub and outsl xor xor movabs pop or mov movabs pushfq test pushq jmpq (bad) sub int3 adc out mov sbb push test add xor hlt mov test ja jb insb cld loop jg,pt insl rex.RX jbe lods xchg outsb push in mov scas xchg adc cltd lods (bad) cmpsb enterq stc lods adc (bad) push in pop mov fnstcw stos jp or mov rex.RB xchg cmp test cmp pop decl out lret (bad) rex.WR lods sub sar xor fdivl int loop scas push movabs clc ja lea add loope lods out jae pop push jmp scas mov pushq stos (bad) sub jno jo lods lods sub xchg jo imulb ss mov or (bad) sub adc (bad) out xchg rex.X test xlat sbb enterq lods cmp lods jo jmp (bad) ja decl repnz shlb rex.X add cld lret adc cmp (bad) fisub jnp out movabs or lahf sub cmp cltd movabs or outsl lods mov push add repz std sub xchg mov and (bad) (bad) retq cmp imul mov pop mov jmpq jne rex.WRXB lock in cmp mov and insl in repnz movsb pop movabs cld fsubrl out hlt and xchg sub (bad) idiv cld (bad) movsb mov xchg (bad) fsubrl cld (bad) mov lods fcmovb loope movsl outsl and mov (bad) fsubrs mov or outsl pop pop loopne fdivr movabs subl (bad) add pushq out (bad) add sbb int3 sub adc stos (bad) sar insb jb or (bad) adc or clc jle clc rex.WXB es or mov movsl mov pop test or loope (bad) and loop in callq (bad) mov add sbb add je mov rex.WR sub movabs imul or xor (bad) popfq push jrcxz movabs (bad) xchg mov hlt rex.RXB movabs adc movabs scas xor fsubp (bad) cmc push neg jl callq jne decb andb (bad) jae and and (bad) fcompl cmc mov xchg cs push and pop test pushq out lea jo lea push cmp sahf rex.R mov xor lret and outsb adc je jo xlat outsl sub lods cmpb stos callq pop cmp fwait cltd xchg (bad) sbb loopne jl cmp (bad) repz jns mov movslq leaveq mov rcrb xchg cwtl lods orl mov (bad) fyl2xp1 jb jns fcoms lods imul xor lods jbe rex.RXB adc sahf xor mov rex.RXB sbb addr32 lods fnsave jb adc add (bad) and lods and jb ja nop push (bad) movabs lods add cmp sar test retq mov jrcxz xchg jns (bad) es test push cmpb pop (bad) push lods (bad) xchg mov pop cmp leaveq sbb lods pop scas (bad) movsl rol pop xchg movabs push xchg mov pushq out (bad) fnop add lods sbb cli pop cs cmp mov movabs lods shrb (bad) test fistl out xchg scas fldt test out cmp mov fwait imul idiv mov adc rex.W in xchg adc in and cltd and sub jo andl add (bad) cmc insl pushq insl vpaddusb rex.R outsb fstl sbb cs mov gs (bad) xchg and pop rex.X sub jge lods je out addr32 ss (bad) movabs (bad) xchg hlt stos stos rex.WXB jmp imul in cld mov push cli lods jl cld sbb pushfq jo rex.RXB adc in add mov addr32 icebp lods mov mov adc sub ss fwait or mov std cld fbld mov push lods mov mov rex.XB ds xor add idivl fdivr and cli (bad) xchg and add and in movabs mov lods ficoml mov sahf outsl mov sub in sbb pushfq (bad) lods (bad) movslq adc mov callq (bad) and and pushq (bad) (bad) mov (bad) add cltd stos cmp sbb rex.WRXB xchg sub lret lods xor and lods mov faddl imul lods (bad) movabs lods lahf rex.RXB mov rex rex.R iretq hlt add adc pop fildll pop jbe,pn insb gs add xor push sub (bad) add adc (bad) test xchg sub rex.WB mov xchg shrl jbe (bad) outsl in adc and lock jne add lahf cmpsl add repnz (bad) lret test stos cmc loop rex.X insl test in mov (bad) rex.WRX mov movabs add add lods cmp imul lods (bad) retq rex.WB cmpl cli pop fisub pop adc xchg scas fmull mov cmp (bad) scas add (bad) test adc (bad) sahf xlat and or mov xchg leaveq jno icebp cmp (bad) stos lods sub loop pushq enterq stos leaveq mov mov lods sbb sub pop sbb sbb stos pop sub (bad) xor pop sub mull push movabs lock js lods cmp repz lods rex.WRX iret sbb lods nop mov xchg lods retq mov sarl pop mov in mov scas xor subl lods (bad) addr32 mov jg test (bad) rex.WRB xor icebp repnz test lods mov jp data16 xchg (bad) rex.WX test retq or (bad) mov sbb je (bad) jae pop mov and mov cmpsl lock lods pop adc sub (bad) sbb lods cmova (bad) jmpq rcr (bad) callq jle or enterq lods or add cmc mov add add and fisubrl lods (bad) pop add xor sbb mov loope push repnz enterq lods sub (bad) lods test out lods xor jrcxz enterq stos pop lods shrb rex.R mov and add mov rex.WR (bad) out (bad) fwait rex.RXB (bad) shlb stos jg jo test jb in (bad) out adc rorl xchg cmp insl xchg scas lods rex.RB loopne icebp sarb rcrb test adc cs movabs lods imul and (bad) sarl clc and rorb adcl lods sahf loope movsl jno pop rex.XB fldcw retq mov sarl in movabs (bad) in mov ds test roll lods (bad) sbb movabs sbb or mov repnz js lods jrcxz jle xchg jno nop lods movabs pop (bad) insl sahf or sar retq scas mov (bad) sbb cmc (bad) in int ds rex.WR (bad) pop insl movabs jns lods es adc in push cmp outsl icebp vorps push movabs xchg fmull imul cmp fwait or cmp xor pushq subb movslq retq imul rex.WRXB xchg out lods mov leaveq rcl loopne scas cmp push or add lods movsb mov movabs or rex.WX pop popfq fidivr fst cmpsb sub cs xchg mov xchg mov add lods jae add adc out iret and (bad) (bad) cmp pop cmp (bad) xchg or jp loope scas sub jl jmp lods shll lods xchg xor in add lods (bad) sub loope lods adc (bad) (bad) (bad) addr32 sub and add scas in popfq jnp xchg fs adc lods icebp mov sti jb rclb callq loope (bad) faddp xor mov test mov mov (bad) cmpsb add or mov jp jrcxz xchg lods or sbb insl mov lret rex.RXB sbb movabs rex.R jmp and ja cld lret movabs imul sbb mov outsl xchg out ljmp mov lret scas loope sub icebp and mov mov rex.W mov xchg push push test sahf in ds rol xchg sub rex.WRXB nop out lods (bad) in rex.WXB rex.WRX rex.WRXB stc jmp adc xchg lods ror push push sub cmpsb cmp lods xchg pop (bad) sub rex.RX out lods add (bad) pop cmpl jge ffreep pushfq lret lods sbb rex.WRB out add hlt jp or lods (bad) test movslq xlat mov rorb mov lods out (bad) shll outsb xlat js stos adc pop scas rex.WRB (bad) cld (bad) (bad) movsb xchg mov (bad) lods sahf sbb jb cmp lods mov fdivrs fmuls lods pop (bad) std add xor jle xchg rex.RB insl mov mov cmpsl in adc pushq mov clc (bad) cvtpi2ps in pushq jbe mov push pop xchg sbbl (bad) movabs (bad) lods data16 and iret jno jp lods xchg pushq and lods xor (bad) lods (bad) jo jge pop (bad) lods lret in ja push cmpl loop adc lods adc (bad) pushfq fisubr jae xchg lods fwait mov mov fidivr jnp sbbl cmp xor rex.B or sub and jge fdivl cmc and lods mov jp shrd rex.B mov xchg or sub shlb lods decl sbb or movabs adc movslq lret sbb rex.WR and add lret in and fisubr jb (bad) movsb adc rcl (bad) shrl jmpq fiaddl (bad) (bad) cmc rex.WRX retq rcl (bad) movabs stos loop int3 mov mov and pushfq cmp mov (bad) outsl lahf xlat pushq push add pop insl pop jno lret mov rex.B in sub fsubrl popfq adc adc hlt (bad) push icebp mov sbb (bad) mov fcoml retq sub roll je rex.X (bad) mov xchg cmp xchg add int3 cli xor pushq xchg pushq push (bad) retq int fdivs mov cwtl imul test mov (bad) or lret (bad) rex.WRX int3 mov adc ja rex.WR imul push or xchg popfq insb push rex.WRB push ss clc mov shll (bad) stos mov (bad) xchg rex.RXB rex.WR pop (bad) out jns gs jl (bad) outsb cltd scas imul sub (bad) (bad) hlt int ss adc fsubrs mov (bad) (bad) rex.B je mov push (bad) lock xchg and (bad) (bad) movabs mov add test movabs sub icebp mov stos sbb cwtl outsl jle (bad) lods cmp loope shr adcb jbe je lods lret movsb mov (bad) in (bad) stos mov lods pop cmp movslq cmp add in (bad) (bad) cltd movsb (bad) stos jmpq mov rex.WRB movabs (bad) cmp sub jl and lods mov fdivr cld or (bad) movslq xlat sub std xor adc sbb in in repnz test mov or fcoml lods cltd mov sti mov push insl rex.R shlb vxorps shll lods jne add and and mov mov cli std mov mov fisubr lock mov mov (bad) mov or jrcxz xchg pop or sub (bad) popfq xchg adc push (bad) rex.B addr32 adc lods mov shlb adc in retq jp (bad) data16 lods in rolb insl vhaddpd mov movabs fsubrs and mov jl pushq sbb rex.WR loop lods push pushq scas mov (bad) scas mov xchg outsl pop rex rex.R repz sbb or (bad) fsubrs jae jle mov sub imul fs add mov sbb cmpsl lods adcb or jmp es jnp pop add mov scas mov cli scas lret rex.WRX (bad) in out (bad) pop movabs imul pop (bad) retq and or sub adc (bad) mov ss cli rex.RX mov mov jno movabs or pushfq popfq lahf xchg push test rex sub fidivr (bad) scas adc jrcxz gs callq adc mov rex.X es lock insl or xchg scas (bad) insb adc in (bad) and loop lods (bad) mov insb lahf shrl xorl mov (bad) movabs cmp lret (bad) (bad) subl fcomps enterq pop push sarb cmp (bad) mov lods test pop and cltd mov out push (bad) lods or pop adc in (bad) sub stos adc xchg out pushfq lods js int or mov (bad) sub retq cmp sbb repz jbe push xchg mov cmp (bad) int3 xor pop rex.R andb xor add in clc jo mov pop (bad) mov rex.WR mov xchg rex.XB or ds mov xchg xor adcl fisttp insb push mov lods xor fs in lods (bad) xorl or lods rex.XB rex.RXB movsb movabs imul clc rclb (bad) imul mov (bad) movsb sub jnp (bad) stc mov je fwait int3 sub sarb lods xor xchg and jge ds out xor xchg loop sarl mov mov rex.WRB pop retq push mov add sbb (bad) (bad) push xor outsl lods (bad) roll adc xchg lods cmp (bad) (bad) lods jbe mov cmp movsl sbb sub movabs movl mov cmp lods lock jne popfq add lods jle rex.X (bad) mov sub lods cmc ficomp pushfq rex.WXB lods iret outsb push addb sub mov stc scas rcrl (bad) insb jnp push lods movslq or pop jrcxz outsl adc nop mov push add push lods or mov fwait (bad) (bad) rex.R es jns cld (bad) mov push (bad) sar xchg jae xchg mov (bad) jb incb lods fimull add sbb mov and pop outsl sti orl cli adc push sahf pushq cwtl stos addr32 int3 and fsubl enterq rex.WRX movsb add (bad) es fistl stos push mov movabs enterq mov (bad) pop lods movabs sub (bad) lods rex.WRXB stos enterq outsb scas in fsts bswap (bad) sti sub out and retq adc fstps adc cs movslq loope ja lock fwait movabs pop out (bad) lods (bad) xor xchg fs mov pop lods (bad) idivb mov or retq stos (bad) rex.X shrl test mov jg int3 push (bad) test cmp and outsl movabs rex.RX js cmpsb psubsb loop mov lret xor mov add sbb andb xchg ds (bad) sub jg mov sub add cmc (bad) movabs movsl mov (bad) imul imul sub push xchg or jns (bad) pop std mov in rex.WRB fwait int (bad) stos mov mov cmpsl pop xor leaveq insb pushq insl adc movsb (bad) mov insl iret mov jbe xchg jl fbld rex.WX pop insl lods in pop loopne xor lods movabs and enterq in push adcb mov jno fidivr jnp push popfq rorb sbb jmpq fwait rex.WRXB jge rex.W push jo test xlat data16 xor out lods or test jg leaveq mov rex.WRXB and stos (bad) retq in pop (bad) add (bad) es cwtl pop in test iret rex.XB lods add adc cmp fwait adc rex.WX leaveq enterq sub pop lock (bad) pop movsl stos cmpsb xchg pop xor push stos js or push out adc in mov jg shrb rex lods xchg and shld lock (bad) rex.WB push pop (bad) or adc jrcxz lods push xor scas test sub pop movabs cs outsl push out cmpsb (bad) mov (bad) pushq mov rcrb outsb adc push jae fcomip cli notl movabs (bad) repnz xor scas xchg outsb movslq xor rcr lods sti (bad) jne cmp and mov mov cld or vpunpckldq (bad) xchg mov test adc mov lods clc movabs ja xor je sub pop sti idivb movabs sub loop (bad) xchg add fdivrl pop out repz (bad) jo sub (bad) lods ds xchg insl cmp movabs pop (bad) insb mov cltd lods add xor mov or add notb lods cmp jmp lods imul movabs adc rex.WRXB leaveq cld es sbb jno data16 (bad) test int3 lods sti add lods scas push adc movabs jmp loop pushfq cwtl sbb lods (bad) sub movsb out xchg insl lods retq and cld sub lods rex.WRB add loop mov (bad) rex.RB cmp xchg rex.WR mov cmpsl jb cmp sub xchg sbbl (bad) lods xchg (bad) adc sub fadds movsl test (bad) or adc adc mulb or mov jo cltd out subq add sbb scas out sub add lods test test or add mov xchg pushfq fisubr jb insb mov rex.W pop (bad) (bad) mov sub fs sbbl and fidivr sub in adc jbe stc mov andl rex js lods add sub movabs sub adcl movabs cmp scas int push add rex.WRX gs andl callq mov movslq xchg loop mov xor mov jns rex.XB xchg xor scas lock cmp jo,pn lods sbb (bad) mov lods movabs mov (bad) (bad) xchg cmp jns mov sbb pushq mov jae cld subl rex.WRB stos mulb mov in sbb lahf cs xchg jbe xchg sub rcl rol (bad) lods (bad) sub mov (bad) adc or sub je adc movabs outsl mov mov pushq mov and lods mov sarl lods (bad) pushfq (bad) rcll stos scas out pop jne cmpsl mov mov movslq mov mov imul sub jge (bad) test (bad) add sub (bad) lods rex.WXB loopne,pn lahf mov out pop subl (bad) or xlat js sub push insl (bad) lods movabs add scas lods xor repnz lods fs jg add andl jle or pop (bad) jmpq clc or push (bad) stos (bad) fstpl xor lea or mov stos (bad) stc nop mov xchg retq cmp cmp rex.WRX mov jae adc (bad) jbe mov jns xchg (bad) rex.R add lods mov push pop loop xchg jle rex.WB lods xor cli sbb lods lods sub (bad) add int lods (bad) sbb stos xor lods je push xchg mov adc icebp jl lret sarb rex.XB mov xor cmp lods (bad) (bad) rex.WX js sub fsub out stos movabs jge fisttp (bad) xor cmp push and clc loopne scas (bad) mov jbe sahf or jmp lods mov ljmp mov sub sub jrcxz xchg mov popfq lods lret test xchg test mov stos pushfq in cmp adc mov shrb mov fnstenv add (bad) jmp xor (bad) sti (bad) fistl cmc jp lods fisttp sub cs callq js rex.XB fiadd pop sub lea imul lea (bad) imul int3 rex.WXB std in jbe sub addl sub push adc int xor mov sub callq add jo in adc (bad) shr cmp cmp subl push pop rex.WX jge pop (bad) icebp add insl adc rex.WRB (bad) (bad) test (bad) enterq scas push and lods jae test (bad) or mov push (bad) (bad) sub cltd mov jrcxz callq (bad) cmc rex.R sahf pushfq repnz in cmpl scas rex.X xchg out and (bad) mov push rex.R jae outsl xchg (bad) and mov in cmp int3 gs (bad) mov sub adc in rex.W mov (bad) (bad) mov (bad) mov xchg lods decl or xchg adcl lods (bad) or rex.RXB out and fldcw mov (bad) rex.WX jge and xchg rex.B push pop jno lods (bad) test test in (bad) pop hlt fs push fs lods jmpq jo scas (bad) (bad) rex.WRXB sbb scas lea es jl lods (bad) fimull adc mov xchg and (bad) movabs test add push hlt lods frstor jo and push lret or movslq cmpsb mov lods ja stos test lods retq cmp lods cld sti mov pushq repnz outsl (bad) xlat stc in lods shrl cltd (bad) mov imul rex.WB rex.R push movsb sarb lods cmpsb in mov lods push xor mov stos pushq pushfq mov and mov (bad) pushfq fdivrl cwtl roll (bad) lods sub fsubrs lods mov (bad) test lods sub fmuls mov xor (bad) or rex.WR addr32 (bad) movabs (bad) or rcrl rex.WRB data16 mov frstor (bad) loop sarb mov lea adc shlb (bad) scas out lods xchg std fcomi xchg xchg add rex.WRB adc rex.WXB xchg sub shlb mov fwait mov and shrl fiaddl cmp cs adc shrl mov lods (bad) jb jmp leaveq mov lods cli popfq pop (bad) mov (bad) and insb (bad) (bad) (bad) lods out sbb hlt (bad) iret shrl (bad) mov (bad) adc sub insl cwtl adcb lret (bad) xor jbe shll retq jl insl xor movabs sub (bad) lods jmp repz (bad) int mov cmp in xchg (bad) mov int3 in rex.R push jb out sub retq rex.RB add rex.R xor in mov loope (bad) lods xchg cmp rex.WRX cmc movslq mov xchg rclb mov push lods leaveq cli cltd jmpq lods (bad) and and mov rcrl (bad) rex.RXB test mov in sbb pop lods mov int3 stos movabs sub mov sub sbb insb pop imul add fisubrl js cld callq ja xor iret pop lods sub jno or movsl jl in xchg xchg mov mov mov (bad) ljmp sbb push (bad) retq in lods rex.X or out cmc mov roll jl lods movslq mov jae xchg (bad) rex rex.WXB rex.W (bad) faddl ss lret je jrcxz adc (bad) movsl (bad) cmpl jrcxz fs mov pop scas sbb rex.WRB sbb rex.WRXB lahf enterq ds xchg negb add mov lahf shlb lods loopne in nop jno scas rex.WRB out mov mov add jg lods insl je xchg cmp shrb jl int3 jo lods jp (bad) xor mov adc adc cmpsl sarl sub sbb jmp emms xchg gs mov hlt sahf xor (bad) rex.RX lods xor xchg lods out cmp rex.WB mov fldcw pop out hlt lods rex.WX mov lods retq or (bad) stos push cmp test adc adc lods rex.WR sbb jo mov outsl movabs (bad) (bad) loope push (bad) jrcxz fnsetpm(287 rex.R repnz pushfq sub xchg and subl out insb js add lods rex.W rex.WB mov int sarl pop lods (bad) rex.WRX in rex.WR rcl mov (bad) (bad) (bad) mov push jmp vcvtsi2sdl pushfq (bad) fcmove jnp lods (bad) insb movsb sub lods shl sbb stos cmp gs fstpt sbb mov adc lods push or mov (bad) xor sub adc imul (bad) mov or negl mov movsl lods and (bad) sub rolb sub std pcmpeqw rex.WRB cmc rex.R movabs xchg movabs xor jg mov sbbl mov (bad) or in cld (bad) push popfq sub push test int3 out rex.RB mov mov xor js (bad) xlat xchg retq (bad) (bad) imul or callq fdivl xlat xor test insb movsb cmp lods (bad) jrcxz and jns imulb retq push adc mov rcrb in in xchg shl lods ds (bad) pop outsb jge xor push or sub callq xchg lods repnz pop sub and xlat mov imul jbe fsubr scas cmpsl (bad) fwait jno mov (bad) sbb (bad) lods adc or pop sub adc and mov xor int mov jg and lods mov repnz sbb test pop imul imul out enterq faddl (bad) mov pushfq and movsb mov outsb ja mov scas (bad) in int3 lods movabs vpminub out mov push scas fsubrp sbb add lods mov outsb fadd lods (bad) icebp adc jb xorl or (bad) jl mov (bad) addl lods (bad) callq cld sub (bad) jl jl lods xchg add mov xchg movabs or pushfq mov movabs pop add std or or sub xchg (bad) rex.R orw lahf and movsb adc (bad) rex insb jns stc movabs je pop test jl (bad) rex.WRX insb sbb jnp ss jne xlat in cmc rex.B int3 lods jns rex.XB mov add adc (bad) in loopne icebp push fisubr adc scas shrb rex.R retq sbb push cmc scas out or rex.X cld rex.WRXB lods jne sub and movabs (bad) std data16 lods pop xchg lahf jg (bad) lods divl add mov mov fcompl sbb rex.RX mov mov retq sub xor rex.R repz (bad) push out callq rex.B sahf rex.B mov jrcxz rex.XB jae xchg std or (bad) and sbb insl leaveq (bad) fistp rex.B add mov sahf mov callq int3 and jbe rex.WR mov int3 rex.WRXB adc mov scas add (bad) rex.WB or (bad) repnz rex.WRXB (bad) jnp mov stc sbb stos sub cmp xchg jae icebp add callq loop (bad) sbb pushfq mov cld cwtl (bad) sbb in fsubrl cmp popfq (bad) and mov push in add mov mov xor test and stos add repz rex.XB pop pop lods or (bad) scas (bad) add loop in add jns in mov (bad) enterq or adcb scas fdivrp push mov jl sbb and mov mov cld lods out cmp outsl xchg (bad) jp sub and out (bad) cmp movabs mov repz lods popfq xchg callq rex.WRX data16 adc lahf adc rep xchg sub and and (bad) xchg retq rex.WRX mov lods and (bad) test leaveq pushq (bad) scas (bad) (bad) add rex.WRB (bad) xchg xor mov rex.WRX push je scas mov mov cmpsb sbb lods xchg sub lods jge mov nop (bad) lods xor insb mov rex.WRXB lods pop push (bad) out test lods adc int or add pop cmp enterq lods out test insl mov lods in cmovb push jnp adc xchg mov push scas and fildll rclb sub in test test and pop xor xchg lods lret mov mov test cli rex.RX subb ja mov mov (bad) lods loopne push sub lods shr neg fnsave lods test js in out xchg sub xor out xlat jne lods lods mov mov fistl je in (bad) lods repnz rcrl (bad) mov movslq jg lock insl cli jle movsl repnz fldt mov sbb (bad) pop adc (bad) cld jne lods pop ds fstl pop pop (bad) xchg cmpsl cmpsb (bad) pop movsb insl (bad) cmp out iret pop movabs pop subb lods rex.RB push push faddl mov and xchg rex.R stos out mov rex.WRXB in (bad) test (bad) sbb (bad) insl rex.RX sahf movabs add lock lods in rex.WX (bad) (bad) or or and sub xchg mov lods (bad) pop leaveq (bad) xor repz outsb and jo mov fidivr fwait push (bad) pop lods mov cmpsb cmc test push jmp mov lods rex.X data16 std lods jrcxz jg rex.WRXB or sub cld mov pushq fiaddl xor cmpsb sti or adc cmp adc icebp add mov jmpq scas out add push xor xor adc jnp rex.WRB cmp sub mov mov mov sbb subl cmc clc nopl ja (bad) mov imul (bad) sub in retq rex.WRXB or (bad) pushq cmp mov jp mov fwait jo mov lahf adc mov repnz mov jnp push jp add xchg ds fdivrl sbb sar mov ja cmp out int3 div mov rex.R xor (bad) movsb (bad) add cmpsb (bad) (bad) cli xchg (bad) push movsb sub rcll mov push stos pop mov sub ja fucomi out (bad) movslq lods fdivrl in out (bad) out sbb jle add xchg add movabs xor cli stc insb mov xchg rex.WRX (bad) mov push insb or outsl xchg (bad) xor jrcxz cmc push mov mov xor add idiv xor pop adc lods shr rex.W lods jmpq pop lods (bad) movabs repnz mov and cmpsb or rorl add add mov pop clc lods lods pop xor pushq outsb ja sahf add lods mov mov or lods decb push mov cmp mov lods xor js scas jns or add sbb rex.WB rex.WR movsl (bad) (bad) pop ljmp stos mov (bad) cmc adc std add adc js rex.WXB (bad) xchg lods and outsl test stos rex.WX outsb fidivrl push in jnp (bad) out sub movsb stos jl roll and xor add jb movsb pushq (bad) sub sub sbb lahf pop (bad) (bad) mov in mov cwtl lods retq stos enterq lods fdivrs fcmovbe je nop mov rex.W push (bad) sub xorl lods jle fsubrp (bad) loopne cmpsl stos movl cmp movsl rex.WRB adc or and (bad) fwait xor scas (bad) and mov pop (bad) (bad) mov in idivb jmpq sub push cmp sarl lods jbe jae jns xchg lods (bad) scas sbb mov cmc adc fmul adc jge xchg xor mov retq rex.WB rex.WR repnz xchg loope mov jb stos mov jbe pop stos cmpl (bad) xlat sbb lods loop add (bad) sub sbb adc lods mov rex.RXB (bad) mov xchg rex.X stos stos (bad) mov and (bad) lods movsb es sub jp jmp ds or movabs mov xor sbb callq lods (bad) mulb (bad) es xchg movsb out pushq and jno pushq (bad) cmp xchg addr32 repnz mov mov push rex.RX in cmp rex.WR test lods cmp hlt stos leaveq add mov retq in (bad) cs scas adc xchg (bad) push cmp adc mov xlat mov (bad) jno lods mov mov (bad) mov ficom mov (bad) or outsl rex.WRXB xor rex.WR scas icebp or jp add lods jo mov (bad) (bad) (bad) (bad) lods lock sbb jmp rex.W (bad) bnd subb fidivrl (bad) and int3 rex.RX push jg jne jmp fnstenv int scas fsubrl out jg cmp stos movslq test push fstl xor clc imul push xor cli fisubrl nop or mov adc lret lods xchg sbb (bad) push or mov rorl iret (bad) or add data16 movabs lods int3 movsl or (bad) mov mov scas rex.WR repz movabs sub loope rex.RB sub or xchg or retq lods pop pop cmp rex.WXB (bad) add out sahf cmpsl pop add movsb scas (bad) and jns in xchg add lret (bad) fsubrs pop add rex lods xchg loope or adc movsb rcl mov cmpsb add retq rex.R or out adc outsb clc jns add xchg notl test mov mov adc mov popfq (bad) (bad) lahf adc cmpsb shl cmc xor popfq (bad) fistpll adc and insl in hlt test retq sub stc in mov cs mov cmp stc sub incl (bad) sub cli out movabs pushfq fdivs push or cmp sub (bad) adc movsl loop (bad) mov mov pushq jl xor (bad) add push scas push repnz xlat fidiv movsb mov mov movsl jae movabs bnd mov mov divl jge xor xchg mov int3 sbb jnp sbb lret sahf lods push stos push sbb jb pop lods loop mov mov testb loopne movabs and mov adcl mov stos (bad) mov sbb push rex.B mov imul jle cmp adc push stos retq rex.XB lods xchg rex.X xor fdivs sbb retq xor shrl add cltd cli jo and jnp sbb test lea sub sub loope clc cmpsl (bad) (bad) lods fsubrs and mov ds popfq js insl hlt mov notl and xchg (bad) in adc rex.W lods icebp and cmpsb js pop xchg movslq mov adc imull sbb clc lods add xchg xchg jl push (bad) lock (bad) mov js add (bad) xor mov add push movsb mov jge mov push mov adc andl mov movsb vextracti32x8 insb pop mov mov (bad) push mov push xor (bad) test mov mov test fwait callq (bad) pushq int and jl adc outsb add cli jae rex scas or adc mov pop (bad) (bad) insl cltd icebp (bad) fldz popfq rex.RX out mov sub mov decl xor repz test lods popfq adc fldl in pushq rex.WRXB lret mov stos pop xor lods cmc in frstor xchg xor faddl and sub mov sahf rcrl sti fdivr (bad) cld and (bad) sub icebp movsb or ficomp in movabs lahf push vunpcklps (bad) sbb roll jnp lods test push mov jo (bad) lods sbb clc bts cld xchg or lods cmp xor retq lods pushq xor lods sub pop loopne int3 lods (bad) jno fsubp int rex.W push fcoml (bad) jp movsb stos jmpq mov shrb and test push mov or rex.WX cs (bad) (bad) pop subl (bad) cs movsl and std add or retq addl faddp mov scas mov insb sub out pop adc sbb pop movabs movabs lods mov lahf (bad) pushq rex.WB cmp std sbb (bad) out sarl rex.WXB stos shrl fcmovnb cmp mov sub sub mov or sub div cmp lods loop fwait (bad) and or sub xor cmp lret (bad) sahf jbe lods or rex.WRXB rex.WX retq test movabs (bad) std (bad) sbb ja lret scas sbb (bad) in jbe (bad) sub test xchg (bad) rclb and jns pop jle mov lret lods mov (bad) xchg rorl je test fisttp sub lods push stc adc pop lret lods mov adc or rclb pushfq scas jp fwait (bad) loope loop lods or popfq (bad) (bad) lahf xchg loop lods mov cmp adc sub std callq push cmpsl mov push or adc and sub (bad) lods (bad) imul lods vsubpd rex lods stos pop cmc lret jns je adc jg icebp mov leaveq std add addr32 jns movsl fwait sub (bad) nopl (bad) lods decb mov and loop (bad) sbb rex.WB stc sbb lods iret pop rcll xchg outsl jbe sbb mov movabs rex.RX scas push (bad) iret mov sti hlt (bad) gs lods rex jmpq pop jmpq jo rex.R icebp cmp push lods cmc rex.WRB rex.RB sbb and pushq (bad) in (bad) cmp mov adc (bad) jle xchg rex.R lods cs pop add (bad) mov jnp lret push add cld pop cmpsb lods jg cmp insb fsubr movabs jnp in xchg jns sbb sub or lea add movslq sti add lods (bad) pushq outsb and gs std fnstsw push sub mov sub jrcxz xchg clc adc lods lea (bad) lar rex.WRX stos jmpq in mov rex.R movsb jmp pop (bad) outsb in scas lods push jns stc sub cmp ror mov and (bad) cmp lods mov jns (bad) add mov sbb mov xchg rolb jrcxz in cmp mov rorb push rex.RB sub (bad) scas int3 xor xor insb mov (bad) nop scas pop rex.B lods movabs fs sbbl fnstsw sbb iret or stos test xor rex.WR adc cmp lods jle fdiv push cwtl (bad) mov lret lods rex.WR iret mov adc push (bad) (bad) mov xchg scas scas cmp test scas (bad) and (bad) (bad) (bad) or mov out mov rex.XB adc jo sub std repnz fisubrl addl mov rex.X ss mov pop scas jb (bad) jbe xchg mov (bad) mov rex.XB (bad) movabs mov cld (bad) pop in adc lods (bad) outsl loop adc rex xchg jge out jp ror mov or sbb sub sbbb pushq lods cmp movabs mov ds adc (bad) stos (bad) or jb mov out (bad) (bad) stos (bad) (bad) icebp push sbb (bad) rex.WX lods movsl gs or cmp mov lods fs fnstsw rex mov pop adc mov mov stos (bad) gs loop or rex.WB data16 movabs movabs mov jbe shll jns fisubrl add lea fsub and xchg adc push rorl out (bad) (bad) sub mov lahf cmp sbb mov lahf (bad) adc mov es (bad) movsb pop out mov mov rex.R rex lock (bad) mov jmpq rex.B movabs sahf (bad) sub xor incl mov pop adc mov sub or in fimul rcll pushfq jmpq out stc mov or out adc pushfq fsubr scas fldl scas xor in add and xchg sub or data16 xor or cltd mov mov adc ds stc pop stos movabs or mov add sub (bad) sti faddl mov retq nop (bad) push movabs jb retq sbb (bad) cmp xchg mov cmp rex.WB test rex.WXB enterq (bad) pop (bad) xchg (bad) mov mov adc outsl adc pop sbb (bad) sbb adc or (bad) jne pop movsb pushfq ss lock clc mov pop jb jnp lods pushq repz rex.B enterq pop rex add in rex.WXB add fidivl push push sbbl imul outsb loope (bad) shrb jrcxz mov mov (bad) lods adc (bad) loop jge mov rex.WRX lods mov xchg sbb sub rex.RX and scas pop and movb ja lret lock imull movabs sub sub mov rex.B jl in mov rex.R lock mov xor lods fildl mov cli pop sar test movsl movsl mov outsl jno add loopne test rex.RB es (bad) lods (bad) add out push out add sub jb in movabs rex.WRX (bad) mov shrb sahf mov vmovddup xor (bad) sub pop and (bad) mov mov mov mov movabs decb scas test (bad) mov sbb fs jg nop sub adc lods jno insl jo insb mov fld shrl enterq insb or (bad) pop (bad) jnp jne stos in ja retq mov rex.W rex.WXB movsl pop add (bad) icebp and sub retq add mov enterq (bad) fsubrl addr32 movabs adc int movslq or leaveq sahf pop out stos (bad) fist sub xlat test jmpq (bad) fildll mov or jno jbe sbb scas (bad) cltd (bad) rex.WR test nop rex.WR rorl rex.WRB movabs xor pop in mov mov rex.WRXB fldl jle lock rex.XB adc xorl roll (bad) xchg sbb retq and cmp callq pop movslq sar cmp or scas cmp (bad) sub sbb (bad) and outsl mov adc rex.RB je mov rorb rex.WRX mov scas shr rex.WR push incb movntq out and rex.W (bad) (bad) movsl stos movabs mov rex.RXB retq or rex.X push sarl jno (bad) movabs lea (bad) iret movslq loopne cli lods (bad) (bad) cmpsb fs outsl adc (bad) fmuls addl rex.W add lea pop mov mov adc scas rex.WRXB out movabs xchg lods rol iret adc adc mov je cmp sbb cmpsb mov loopne scas jp xor or movabs jrcxz cmp lods enterq sub jns retq retq je stc fdivs (bad) imul or pop or jns lods rex.WXB xchg adc sub imulb mov lods clc mov lods xchg scas xor insb rex.WRX xchg test pop insl mov fs jmpq sahf sub sub sub mov add jge add lods ss adc xchg out xchg xchg (bad) rex.RX rcrl (bad) imul (bad) (bad) lods cmp stos rex.WRX rex.XB mov cwtl test (bad) cmc adcl insb cmp movsl rex.R lods in pushfq pushq sbb cmc adc or (bad) or rex.WRXB ss add jbe (bad) jmp js repz add sbb cmpsb jnp (bad) sub mov stos movsl jno decb mov js,pt rex.B adc data16 jg cwtl (bad) insl xor movslq lods add cmpsb (bad) cmp lods sbb sti jb clc scas enterq hlt mov fcomip int jo gs (bad) mov and sub jbe mov lods pushfq rex.RXB movabs repnz (bad) and retq jb adc jbe,pn (bad) sub mov lods mull loopne lods leaveq or xchg and stos fmull stc jae pushq scas pop (bad) xor or in mov enterq mov mov data16 lods adc in pop insl movabs in push lods sub jns (bad) callq push xchg (bad) loope mov lods pop sub sbb lods test cs (bad) lods (bad) and cmp test mov sbb mov mov (bad) pop insb je movabs fiadd mov (bad) test sub lods adc cwtl test in (bad) push cmp lods add mov lods rex.R mov (bad) rex.W rex push sub sub cli jo int adc rex.RX rex.R test lret adc (bad) outsl rex.RXB add sub vmovaps retq sub and xor rex.WXB adc sahf (bad) mov (bad) lods sub (bad) clc pop (bad) icebp adc imul sub movabs xchg (bad) (bad) mov xchg jmp cmpsb retq or rex lods cs pop (bad) mov (bad) rex.RX add xor lods mov xor je sub sbb adc rep lods jo rex.X push (bad) pushfq roll movabs xchg mov icebp pushq lret shrl pop lahf lods rex mov cmp lods xor movslq sbb fsub sahf or or or (bad) jl popfq lods mov int3 (bad) jne (bad) cli push nop shrb stos add cwtl xor mov sub out rex.XB int3 lods scas hlt cmp js rex lods mov loope add pop movabs lret add and mov fcoms adc or fwait lods rcrl mov test (bad) mov (bad) or sti shl loop mov and or sub rex.RX or jle rclb rex.XB movabs retq ja lods add mov in fcompl fsubrl iret sub ds add (bad) jo cmc lods loope in data16 (bad) fldcw rcll pop in jbe push clc xor test (bad) in jp out (bad) scas mov test rex.W mov out (bad) rex.WX xchg jmp scas mov sub lods test sbb pop cmp stc lods xchg rclb (bad) lods lahf movabs test mov pop mov mov (bad) mov pop adc movsb push jo jge or outsb add jl adc movsb scas (bad) repz (bad) lods push cli outsl rex.WXB rex.X cmp es (bad) jle lods movabs mov (bad) lods xchg xor cmp or retq lods sub loopne sahf and add leaveq mov ds movsl mov (bad) scas mov sbb (bad) cmp (bad) cld push loop mov (bad) rex.WXB adc lods imulb cmpsl pop push retq hlt jne movabs enterq scas cmp jne mov adc mov lods mov and sub in jnp (bad) test pop out lods sbb lock or cmpsb lods nop stos rorb jbe (bad) add sbb popfq add callq stc rex.WB xchg outsb and fwait (bad) insb pushq subl xchg gs jne lods xor sbb rex.WR loope or push and fdivs rex.XB push push fldcw xchg adc movb mov xchg pop ss imul add movabs js sub test (bad) lods and mov js repz cld mov (bad) add adc sbb rex.WX je outsb adc ss sub (bad) jno int and lods sub (bad) and adc pop pop jo movabs jnp pop (bad) mov imul rex.B or mov popfq jo rex.X rex.WXB js mov jl xchg jp (bad) ss loop pushq (bad) xchg mov pushq cld sbb push movsb in imul imul adc lods xchg push and (bad) cld push sub (bad) (bad) add jo lods (bad) ds mov test rex.WXB shrl add out mov (bad) lods rex.WX rep or fs add clc fdivrl js rex.RB (bad) in xor mov cs out sub rolb xor pop mov jle add lods and and ss sti rex.WRX es sub in push outsb (bad) rex.WRX fwait lahf or jns jmpq je pop enterq xor mov mov lods lods (bad) cli add lods mov xchg insl rclb lods pop rex.X xchg push lods (bad) hlt stc (bad) add int lods data16 lret icebp scas adc mov (bad) je lods xorl cmp adc out mov sub sub lea (bad) stos stc rorb xchg mov out subb mov mov (bad) imul movabs pop sbb fidiv out sub xor in sti adc adc lods in xor andl test (bad) cs insb and or lods in orl jp or lods add test adc pushfq jno outsl outsb movabs jl mov ss lods pop (bad) adc stos mov rex.WRX xor rol mov jle lods jae mov mov out out cli ljmp hlt mov ss mov add rex.WXB cs lcall rex.RX out enterq and adc mov (bad) sbb (bad) rex.WXB xor lods cmp rex.RXB leaveq lods (bad) adc pushq (bad) insl loopne sub (bad) cmc or je cmpsl movabs test in js cmp stos pop jnp rex.W adc and cld push movsb (bad) mov lods rex.RB rex.XB (bad) mov jge pop (bad) out fmulp adc mov (bad) fsubrs xchg mov mov leaveq jge (bad) sub rex.RB or pop lods lock incb add lea testl js jg (bad) jp mov lods xchg pop push pop mov mov rex.WR outsb in mov sub or or sahf rex.X jg rclb rex.WRX adc xchg shll (bad) out mov lods fs sbb mov lods jl notb push and (bad) out mull movslq jl stc pop lods (bad) cmp outsb rex.X lods andl sbb lods leaveq scas xchg rex.WXB repz rex.RXB addl test (bad) xlat mov cld push jp mov sti in lahf in mov mov mov fcoml rex.WRX adc adc callq cli mov (bad) mov in out (bad) push add or mov stos or movsb movabs mov ficomp movabs fdiv or add mov adc insb pop sbb xchg lods mov or pop sub lods iret mov xor xchg mov insl movslq (bad) rex.WR lahf mov movl (bad) (bad) (bad) sbb (bad) movsq add adc lods add in cmp cwtl ljmp pop imul add fisub rex.R (bad) (bad) insb enterq push xor out (bad) pushq mov rorl fadd or rex.XB outsb push rex.WR jne lods cld stos int gs jl lods jmpq xchg rex.WRB add xor stos movabs (bad) (bad) lods outsb int rex.B repz (bad) jns je sbb sub and rex.RXB rex.R lods in xchg add jg lods popfq movabs scas in xor rex rex.WRX in pop push loope mov xlat pushq cmp (bad) sti lods sub add lods xor movabs lods (bad) and in lods enterq mov in lock jns jp xchg and cli scas out jae mov jo xchg mov rex.WRX repz or loopne jmp out mov sbb in mov lods jnp (bad) sbb rex.WX jbe jl loop pop cli kmovw (bad) fcmovne sub cmp subq mov and or orb mov test or cmp imull (bad) movsl xchg lods or shl and pop (bad) mov ja lods test rex.W movsb sbb out mov in test sub test xor cmp loope cmpsb lods lret or mov rex.WRXB or movabs mov fnstsw (bad) xlat ror movabs nop push lods rex.WRX or sbb mov andl sbb lods leaveq (bad) rorl movsb (bad) push mov xchg fdivp mov hlt adc xor add (bad) mov fisttp xchg mov adc callq push or (bad) add rex.RX rex.WRX (bad) rex.WR lods jno push jbe test or leaveq (bad) (bad) fnsetpm(287 in jge testb lods add jp sub xchg lods leaveq rex.WRB rex.R (bad) mov ds movabs sbb mov adc lock (bad) js jo cwtl out xchg (bad) adc ficomp (bad) rex.R cmpsb jg xlat sub lods jo (bad) cmp mov sub callq xor lods mov rex.RX scas popfq cmc and sarl (bad) sub add xchg pushfq lods (bad) mov imul jge cwtl stos (bad) mov adc decb lods (bad) insb imul xchg cmp add mov mov testl sbb lods (bad) mov sti hlt add scas imul (bad) xor sahf je test (bad) shr sbb cmp sub js push imull out add pop cli sbb pushq cmp scas mov jno fwait xchg sbb rex.WRXB jl mov retq sahf and jle retq movabs jnp push (bad) mov (bad) mov pop or (bad) es gs (bad) jbe int3 iret cld mov pop sub leaveq xlat in movsb (bad) pop (bad) sub clc adc loop (bad) push lods lods adc push (bad) cmpsb lods pop out add rex.WXB mov sub or (bad) lret imul sub xchg mov fistpll lods rex.WRX jo jmp jrcxz lods loopne repz (bad) pop stos adc leaveq lods xor xchg mov scas (bad) repnz out mov rex.XB add lods cld jg movabs std add mov fdivrl lods pop push rex.RX cwtl lods mov je movabs stos cmp pop scas std xchg loop mov sbb adc movabs rex.WRB push sti mov repz sub mov mov lods loope cmp enterq lods mov rex.XB cmc xchg lods sahf ffreep cld push fildl lods ficomp sti data16 add outsb lods mov rex.X (bad) jne lods (bad) stc push sub icebp add push lods ds jp (bad) mov test std adc sub and lods fidivrl (bad) cmp int3 not add (bad) add jo movabs or pop xchg (bad) xor xchg mov enterq leaveq add movsb (bad) (bad) test ja (bad) or add fs (bad) movabs jl fcmove rex.R jge adc cli je mov insl ss or in adc (bad) nop pop lret (bad) rex.RXB (bad) lods jae jo stos in (bad) fwait (bad) (bad) cld add sub mov xchg pop stos test rex.WR rex.WRB xor cmp sub sub cld adc popfq xor or out xlat out in callq test movsl repnz (bad) (bad) lods pop retq data16 mov mov jle rex.WRX insb jnp xor mov (bad) std int gs sbb test pushq jmpq fs and and (bad) adc fimul pop loop pop movabs fidiv sbb rex.W lea or (bad) lods test add (bad) push sbb leaveq shrl scas adc stos pop rex.WX lods lea or test stos rex.RB mov mov lods lea out mov jmp movabs rex.WRXB lahf test test sub (bad) (bad) mov stos jns icebp adc lret lods pushq fildll jo gs movabs mov lods rex.R std sbb rex.WRB rex.WRX xor addb lods jmp sarb lods cmc hlt add or in retq mov pop pushfq pop (bad) es rcr lods test mov mov or out test adc lods add add loopne iret rcll retq and rolb test in (bad) (bad) shll incb stos sahf rex.WRXB rex.WXB rex.WRX test push add sti lods rex.X int sub mov cmpl rex.W imul xchg pushfq (bad) popfq mov push psubusb rcrb retq xchg (bad) lods jne lahf mov mov mov fstps rex.WR lods movabs scas (bad) mov movsb (bad) shlb mov lods xchg leaveq (bad) add jno mov (bad) xchg cmpsb insl mov adc (bad) xchg lods rex.WXB cmpsl hlt rex.X cmp sahf add or or pop in mov push nop lods pushfq rex.B (bad) fwait (bad) repnz (bad) cmp sahf lods (bad) (bad) sub sbb in rorl cmpb (bad) mov rex.X sbb (bad) mov rex.W lods lahf out and std lods sbb push lret lea jo xlat adc movsb jnp fidivrl sbb sbb scas mov cmp fbld out mov lods xchg or lret je decl roll lods sbb (bad) jae cmp pop mov imul xor mov cld pop test mov or (bad) movabs lret lods (bad) xchg in xlat (bad) flds or sub push (bad) jrcxz (bad) shll movabs pushq (bad) jmp sbb movsb movsb test rcl lods out push jp pop sbb es lret mov lods adc add iret cmc subl gs mov lods xchg scas jle (bad) or jns mov rex.WRXB push push ja (bad) and fiaddl mov clc mov (bad) sbb sbbl rex.R repnz xchg retq mov jmpq (bad) mov movabs push cmp rex imul sbb mov cmovns rex.WX callq shll hlt pop (bad) lods (bad) cmc insw jl cwtl push add leaveq lods mov xchg lods jns imul rex.RXB loope lods movabs or imul je sbb and rex.RXB lods fdivp (bad) sarl or in movabs cmp in rex.WRXB rcr mov (bad) add frstor (bad) xor (bad) rep rex.WRB data16 add test (bad) sub (bad) fldt jge insb scas icebp xchg out xor shlb xchg outsl lods add lret sbb movslq pop pushq scas cmp mov rex.WXB or xchg rex (bad) cld sti (bad) jmp pop fsubs push sub mov test adcl lods jle lock lods clc pop jnp (bad) (bad) test mov sbb lods clc lods and retq (bad) adc mov adc test add sahf add stos rex.RXB jmp lret lods fisttp sub (bad) testb shlb xor retq xchg retq lods int3 (bad) sbb mov fs sub hlt (bad) mov jo stc jno xor in lods lock xor fistpl mov sub loopne or adc sub lods and push pop (bad) push (bad) iret mov jae adc sbb add (bad) mov lods retq sahf orl int adc lods leaveq rex.X rex.XB lret xor add in rex.B xchg and imul sub sub insl (bad) lods rex.RB (bad) and shr add lods jrcxz adc and in es xor scas xor (bad) jge and (bad) push sub jl,pn lods ror nop mov (bad) ficoml (bad) sub push sub stos mov mov (bad) cld insl mov stos in cs jle cld sbb mov jnp lods (bad) nop rex.RXB scas add stos imul mov lods jle rorb add xchg test pushfq (bad) cmc lods rex.WB lods xchg xor fs add (bad) js stc addr32 fiaddl adc mov sub push (bad) mov (bad) or cmc (bad) jrcxz adc sbb hlt pop mov adc leaveq test imul sub pop lods sub adc (bad) sub lods scas andl callq cmp test push (bad) mov movabs mov or cmp xchg fdivs rex.WB lods fisubr add lods leaveq stc outsb xlat mov rex.XB imul or mov iret and adc xchg push sbb mov adc (bad) add loope (bad) pop int neg movabs rex.WRXB addr32 movabs lods mov and rex.WXB movabs rex.XB scas mov jge mov or xchg jmpq movabs (bad) (bad) test lods cli mov (bad) adc and xor mov sub adc fcompl xor movsl rex.X (bad) lods rclb and ss (bad) cmpsb movabs in js mov lods (bad) adcl sbb movabs push cmp or (bad) mov rex.XB fwait int jp neg mov lret out vaddsd scas rex adc callq push xchg pop cmp add iret lods addr32 jnp mov nop insb movsl je sbb loop or fldt loopne push mov lods testb xor and jne sub or jge rex.WRB fildll cmp lods jmp retq ss jnp rex.WX xor adc lods rex.W cwtl jg fsubs push (bad) xor and mov movabs loope lods lea rorl out xchg or insb lret clc mov xchg fistpl and add clc test movabs jge movabs jp lods add xor pop lods fcmovb sub out imul (bad) fs test lods and xchg cmpsl pop xchg adc sub xchg mov (bad) mov sub xchg (bad) mov (bad) jmpq add (bad) sub movabs sbb stc insl jge notl fldt mulb out lea or (bad) mov (bad) xor jno xchg clc in gs (bad) adc and loope fist cmp in and mov adc andl rex.WRB or (bad) xchg cld jae mov adc xchg rex.WRX in pop adcl notl imul retq adc or push mov cwtl in (bad) and mov sbb test repnz add rcll push mov int3 test mov (bad) (bad) (bad) push lods jo (bad) mov lods xor adc in (bad) (bad) test jnp popq sub test xchg (bad) mov jp mov icebp and in stos (bad) cld test out retq rex.RB lods imul out lods out stos adc test jbe movabs lret movabs (bad) outsb test test loop insb and xchg (bad) lods mov hlt fldl rex.WX lods stc mov sti sub mov lods (bad) cmp (bad) nop scas lret (bad) jmpq rex.R sub loopne mov rex.WRX lods fistpl cld (bad) (bad) outsb scas lods pop add pop scas lods lahf (bad) fsubrs in lods hlt out in xchg rex.WRX fldcw (bad) pop lods mov (bad) sub adc cwtl data16 ror scas cmp (bad) fsubrl mov sub lods (bad) pop rex.RXB rex.RX cmp mov adc (bad) (bad) sub lods nop out xlat xchg rex xor (bad) jo cmp scas cli fild push ss push cmp ds paddd (bad) xor xor hlt adc movabs mov jns jbe (bad) or rex.WX (bad) loope movabs jno and stos (bad) lods pushfq mov rex.WR fsubl lods test mov mov mov xchg lods push cs (bad) pop xor pop push mov lods cmc add (bad) lods add pop and mov xorb lods xor rcrb xlat push lods (bad) and callq gs cmp sbb movabs test push mov rex.WX ficom (bad) mov jo lods sbb sub (bad) mov movabs (bad) or cmp pop fldz (bad) out sbb mov cmc pushq sub jl mov cwtl adc pop pushfq popfq mov or mov scas in cmp jb jbe mov pop sbb out lods fmul repz (bad) rex.RX fwait add scas pop in add movabs imulb push rex.WRXB and (bad) (bad) sti xor cmp stos pop scas jo sbb idivb jle xorl test insl data16 pop sti int lods outsl icebp jno movsb fidivr push pop mov mov (bad) nop mov or lods mov (bad) mov or lods movsl rex.XB rex.B rclb cmpl out cmp rex.RX movabs addl js in jl or (bad) xchg (bad) retq mov movsb rex.B (bad) xchg clc lods jrcxz and movslq pop fs ds cmp loopne xorl xor (bad) loopne lods mov cmpsl jbe hlt mov lock push cmp jns fwait fs sbb push (bad) or rolb std cmc (bad) jnp sub enterq or mov xchg out xchg or movslq cmpsl gs out jrcxz imul or movabs xchg fild mov mov pop in jg sub mov and rex.XB rcll rolb addr32 xor test or rex.R push mov (bad) addr32 enterq test rex.RXB frstor xor (bad) and scas sbb test and movabs mov or insb and popfq jnp jrcxz mov sub mov mov mov adc (bad) rex.WX xchg jno sub lahf outsb adc (bad) stos mov pop in loopne roll (bad) cmpsl loop xor or sub push scas insl (bad) je cmpl sub (bad) mov mov rex.B (bad) push (bad) imul sbb (bad) jg pop fildll (bad) lods mov sub adc and push sbb jp jl rex.WRB rex.WX rex.WRXB lods insb (bad) test retq cmpsb test lods jg (bad) iret mov or sbb retq rex.WR mov rex.WRXB fwait (bad) cmp callq rcrl outsb push sti lods jl add paddq lods test cmp jae xchg lods mov fwait xchg lods fldcw cmp push lods (bad) xchg ds pop or lods testl mov mov int sarb sub insl add lods lret jge add mov xor fstpt scas iret fcompl (bad) sub lods (bad) push movabs sti lods cmc mov std (bad) rcll retq xchg ds adc xchg (bad) (bad) lods rex.RB (bad) jb data16 xchg rolb (bad) push std mov (bad) rex.WRXB jmpq test sub rcrb (bad) mov mov retq sub sub jno ljmp outsb sbb ficomp pop ss lods xchg mov mov jmpq stos sub mov cld pop jbe insb repz test jo (bad) (bad) sbb cs fisttpll and scas add movslq (bad) (bad) fcmovnbe sub (bad) adc lret jl or lods cs rcrl mov clc test lods jno movabs fimul push pushq (bad) rex.WB and shrb cs add cmp fldcw mov xor in rex.RXB fcmove pop rex.WRXB mov cmp pop mov (bad) outsl (bad) cs fwait add fwait (bad) rex subl movabs in hlt lods sbb gs sbb push sub mov lods mov rcr xchg movabs jae int3 or jp lods xchg pop movabs mov shrb fwait rex.WRXB jge and rex.WRB fiaddl insb out sbb lods (bad) xor cmp movabs rex.RX add xor (bad) jno jp jl xlat rex.WB push in cltd lods adc pop jge fnstsw scas xor xchg (bad) mov stos mov cmc (bad) pop mov mov pop movabs cmc ffreep mov push mov sub mov lods rex.WB test xchg xchg std lret (bad) xchg lods pushfq movsl loop pop gs callq pushq lods jrcxz movabs lods (bad) lahf sub rex.R fnstcw lcall lods in mov pmaxub outsl jnp sahf rex.WRXB pushfq rex.WRB lods adc cmp (bad) pushq repz jle and loop lods jg (bad) mov jbe sbb xchg mov push hlt cs lods (bad) ja lret (bad) mov adc in (bad) shl rex.WR and (bad) adc std in iret and jns mov std lods sbb sub and or push rex.XB outsb in jmp (bad) imul seto orl xchg mov or out fildll mov or fwait lods imul sub push (bad) jns pushfq (bad) mov out lods xlat test xchg outsl jmpq int (bad) lods (bad) test cmp (bad) cwtl mov in xchg out pop test lods popfq (bad) sbb lods jrcxz mov scas (bad) push and fcmovnbe test sbb adc imul test sbb int3 lods add lods lock shrl mov rex.WB subl and push shr lea pop sahf sbb lods repnz adc or imul rex.RX mov xlat nop sub sti push lods pop sub retq mov retq add add sti in rex.R int sub in fcompl test xchg scas sub mov cli (bad) xchg in enterq cmp lods test lods sub pop fsubrp sub in clts (bad) stos rex.X add cmp fdivrl (bad) addl sti jae sub test add add jnp add cmp rex.X xor jne clc sub in rex.RX cli add adc div std addb (bad) cmp rex.R (bad) fldl stos cmpsl lods mov rex.WRXB and in mov in adc lods loop addr32 movsl cld add scas jle stos pop xor mov lock sbb loopne lea movabs test lods mov movabs (bad) cwtl (bad) jg lahf pop outsb mov lods cmpsl sub shrl (bad) scas pop sub cld sbb rex.WRXB push lods (bad) (bad) jle xchg lods popfq jrcxz pop mov (bad) jo and scas sbb xor lods (bad) sahf (bad) loope pushfq out mov cmp mov add movabs xchg fwait push cmp mov rex.WR (bad) sbb cmp test mov mov scas (bad) out rex.R mov lods (bad) xchg lods in js sub retq (bad) movsb or in int3 or outsb imulb in mov mov lods xor out (bad) mov vpcmpeqb mov and mov fldt rex.WXB fldl data16 sub (bad) mov scas xchg xchg sbb orl and lods mov test ficoml mov movabs add lods mov enterq or mov add shrb stos pop subb scas lret or fcoml je (bad) subl pop sbb pop scas mov icebp (bad) in stc mov popfq movabs push jnp clc (bad) pop jae retq sub fstl mov xor (bad) lods rcrb rcl imul fildll iret xchg insb lods scas clc or mov xor or lock xchg std lea lods ss rex.XB rex.RXB js lods cmp xchg jnp ja insb fisubl and mov sub test add out adc pop sub xchg xchg lods add retq mov stos jl sbb lods int sbb sarl lods mov fcmovu rex.RX or out sarl movsb sarb stos or jge xor retq xor (bad) cli mov cmp lret insb lods js mov mov sbb lods rex.RX (bad) pop xorb pop sub jbe xor retq pop adc (bad) push jmp rol xchg xor jnp sbb fiadd mov and (bad) mov int rex.B sub pop (bad) jnp lods leaveq jmp (bad) (bad) lahf subb xor xor roll sarl (bad) pushfq rex.B mov outsb idiv callq retq push test sarl (bad) insb (bad) push xor cmp jnp lock mov or lods cli rex.WXB mov sbb insb sahf (bad) rex scas (bad) add sbb rex.WB mov lods (bad) mov cli add roll mov lods mov jg jmpq mov push and fistl loop jp rex.WRX rex.XB faddl sub add mov nop lea jmpq rex.WR mov lods fdivrl mov lods movabs fwait push sub cmpsl icebp lods fildll lret (bad) mov lods and pop in rcll mov movabs pop add loopne xlat mov int3 xchg stos (bad) cmp movabs mov sahf mov xor insb or xor (bad) je iret in pop ss and clc in push movabs lods in shll (bad) jg xor mov cld lods ds (bad) leaveq pushq (bad) mov sysret movsl mov test sti (bad) jge negl fsubrl mov lock loope xor test (bad) scas repnz lret jno lods add loope imull mov rex.WRXB in adc cli lods push sub or movl sahf cmpsl cmc (bad) cld lock cld fsubrp mov (bad) cs mov (bad) rclb rex.XB xchg xchg movabs rex.RXB scas and lods leaveq (bad) insb clc pop adc mov scas xor loop (bad) sub push (bad) rex.RB (bad) cs mov xor (bad) (bad) (bad) popq and (bad) stos fnstenv or js (bad) jl lods pushfq xchg xor or ja or mov pop mov add ja or sub xor and iret add (bad) adc pop cmp fisubl (bad) lods sub (bad) fcoms callq rex.R movslq outsl loopne lods fimull (bad) (bad) lods sub mov (bad) sbb lods movsl int (bad) addr32 (bad) retq loop push (bad) lret lods sub rex.WXB (bad) xchg pushq and jbe (bad) cli stc add lods cmp loopne (bad) add lods xor jnp insb pushfq (bad) (bad) (bad) mov xchg jno rex.WR sahf cltd test in out out repz in (bad) addr32 adc or (bad) fistl lods xor stos gs sub cwtl mov rex.RX fstl mov mov scas stc mov xchg and hlt adc retq rex.RXB lock or lret lods (bad) fcmovu sub (bad) rex.WRXB (bad) cmp in scas mov ljmp rex.WX pop or rex.WR pop mov mov push mulb (bad) jl jle sbb shlw mov jno pop (bad) ss xlat scas (bad) icebp in (bad) jns (bad) sti rorl add insb int and lods repnz lods xchg xchg add movabs (bad) out xorl rcll push decl jp sti mov lret mov or stc (bad) (bad) cmp retq cld test lods rex.RX lahf fisubl test in lahf pushfq xchg (bad) lods mov xchg in imul (bad) pushfq sar (bad) lods (bad) mov fnstenv movsl sub (bad) (bad) mov int3 imul push mov rolb lods popfq (bad) and fild scas rex.R fisubrl rex.WB add sub iret repz and shrl push sar jg adc sbb scas mov stos cld out jmpq movabs roll or (bad) push insb insl adc sbb in rcll rex.WXB jno (bad) push divl lods sub jae rex.XB test mov mov popfq mov pop sub pop nop (bad) rorb (bad) ss int3 jae lods cltd imul adc (bad) (bad) adc int test rex.WB lods pop pushfq (bad) xchg movl push sbb jle adc add rex.WXB rex.WR lret int sbb jrcxz cld insb cwtl icebp sub lret hlt (bad) (bad) push mov adc movsb loopne stos sub cli (bad) rex.WRX mov mov cld cmp mov cwtl adc and push cli jno rex.R xchg (bad) fwait adc (bad) fimull cltd test mov hlt and insb scas rex.X fidivr mov add pop adc push out gs rex mulb (bad) cmc adc sbb (bad) (bad) test insb sbb test rex.RXB je lods xlat es pop ss (bad) in add lods pop test mov xchg out fsubrs (bad) int3 xchg pop (bad) (bad) int3 test jnp movabs sbb xchg lods add fnstsw mov sub or fbld in mov jns xchg in xchg mov stos rex.XB (bad) scas sub mov xchg (bad) mov scas in push mov imul sub in (bad) rex.WX or mov xchg sbb push movabs sub jmpq xchg scas out scas xor (bad) jg test cmp es fcmovu lods jns rex movsl movabs mov (bad) repz outsb test xchg (bad) mov mov mov lods repz push imul sbb movabs stos test jge lods rex.WX js (bad) adc (bad) iret fcoms mov rex.XB (bad) retq mov test (bad) mov push sahf sub cmpsl ja adc scas or ss lods (bad) mov sub lods add sub std mov push fist movsl stos mov mov (bad) imul jb lods movabs mov mov lret lods xchg (bad) repnz (bad) roll (bad) pushfq fsubr ds je sbb rex.RXB ja add xchg mov js xor insl sarl callq ss (bad) mov outsl cmpsb mov rex.WB rex sbb push lods xchg fmuls jmp stc xor push xorl and and repz pushfq rex.WRB imul jnp mov pop addr32 mov (bad) enterq (bad) mov xchg pop repnz sbb js lods add sub test movsb xor movslq rex.W rex.R (bad) lods mov pop sbb lret stos sbb loop mov mov ja or add mov movsb and fiadd lods sub cmc push sbb mov pop mov (bad) scas (bad) mov es sbb sbb (bad) mov (bad) push mov push lods jnp or (bad) cmp lods (bad) imul lret rex.WB repz shrl and leaveq (bad) cmp in (bad) hlt mov fdivs or movsb (bad) xchg jb (bad) mov loop retq adc fimul mov push fildll jo add nop out stos cmpsb test test hlt jl jg adc and lods sbb push fsubp lods (bad) pop data16 sti push mov clc iret lods or sbb scas jne shlb adc rclb stc ficompl nop (bad) mov movslq (bad) jrcxz (bad) or cmp and lods adc loop (bad) lods jns std movsb and (bad) mov lods movsl out sub movabs in mov mov sub lahf outsl fsubl rex.XB add loopne cmc lea pop sub loope lods mov lods add sub rex.WXB rex.X lods loope clc mov sti fimul sub scas movabs in sub jmp mov and sbb (bad) test subl (bad) outsb rex.WRX and in mov pushq int3 fwait out xor add movb pushq cmp lahf jae add (bad) add cmp retq pop out insl rex.R lods and fnop rex (bad) jp lods fidivrl rex.WRB outsl lods jg push cmp or mov mov sbb rorl jp rex.RB lods mov movslq in jne test mov out lahf lret jb outsl pop xor andb mov lock shrl push movslq xor lods sti decb xor imul mov or cwtl sub sub and jo pop lods mov (bad) (bad) (bad) lods mov xchg out jae jns repnz mov shlb ljmp fcmovbe (bad) xchg stos ja sub loope movsb mov xor scas int3 mov (bad) cmp add or add pop lret ljmp std lods pop mov (bad) hlt mulb rex.WXB cmp divl sbb mov (bad) popfq jb mov mov rex.R rex rex.WRX cwtl or (bad) fsubl mov insb mov (bad) lods push xlat cmc jle rep fldcw xchg mov (bad) andb faddp (bad) cmp and lods rex.XB rex.WXB mov lods rex.WR (bad) loop (bad) (bad) subb and (bad) jmp add lods test (bad) cmp push std mov and jrcxz insb cmp jne rex.XB cli xor imul mov xor and sbb push lods xor xchg loopne scas popfq mov rex.WR loope xor rex.RX add in (bad) lret and rex.RXB sbb lods cmp incl lods rex.XB int3 and rex.WRB out or movabs rex.XB sbb xchg and fwait in rex.W pop (bad) rex.WB andl lods sti rex.RX cmp mov mov lods adc repnz mov imul fwait (bad) lods (bad) cmc fucom push jle loop je xor xchg fldt enterq sub adc in jmp rex.WRB stos (bad) in int3 sahf or jl jb push lea sbb xchg retq jnp sub mov lods (bad) (bad) add nop cmp movabs movsl jp pop insl lret xor jo jno (bad) or (bad) lods in (bad) cmc (bad) rex.RX lods mov or (bad) lods rolb shll jmpq cmp mov sub je shl sahf scas insl mov scas (bad) adc int3 or leaveq rex.RB adc add push rex.B movabs adc xor je test jrcxz lods rex.W movsl (bad) rex.WRX adc mov adc stc lods in imul imul mov cmp rex.XB xor push hlt jo test adc jp lods xchg (bad) sub mulb lods xchg cli cmc scas (bad) ja (bad) outsb sub movsl lods addl stos lods adc ss lods mov subb pushq mov mov rex.WRXB (bad) nop enterq rex.XB imul sbb scas lods mov in popfq clc fbld add imul sub scas mov (bad) mov rex.WRB inc loopne and callq (bad) lock jle test lods stos push callq rol adc mov lods cmp pop stc leaveq adc fstpt popfq (bad) pushq lods ja push mov callq hlt int js lods sbb sahf scas xchg es scas retq jno and cs (bad) fisubrl adc movabs je loopne cmp insl jb jbe or rex.WRB jne cmpsl xchg mov in mov mov (bad) sbb adc cld scas xchg and (bad) sub pop adc (bad) push mov or rex.X rex.WX xchg cmp mov movslq adc nop mov lahf lret movsl sub stos jge js mov pop movabs jno rex.WRX test xchg mov rex.WRXB jg add (bad) lods callq pop push add pushq xor add callq (bad) fidivrl adc insl rex.WXB mov rex.RB loop (bad) mov shlb sub int movabs push ficompl in mov lret in insl shrb add pop jnp stos decl in sbb shrl push mov lods (bad) rex.WR adc fucomi lods fadd pop popq rex movsb andb add (bad) add ss out in (bad) (bad) test mov (bad) pushq lods (bad) jmpq mov (bad) rex.X repnz xor jg sub iret mov movabs rex.RX fwait hlt sti mov jp in sub rex.XB lret test rex.WX cs fs repz rex.WR insb out (bad) lods sbb rex.WX mov outsl xlat sbb mov js stos cmp in cld fwait test lods int in mov clc std or (bad) xchg cmp mov (bad) lods mov shll cmpsb ficom sbb mov pop stos jl ljmp outsl xchg lods loope push imul test sbb or ffree mov xchg or imulb and cmp (bad) adc mov xor fldcw sbb mov in (bad) or jmp (bad) ds lods pop test imul pushq lods (bad) mov cs lods jbe xor mov (bad) scas fwait (bad) adc cld cs popfq lods icebp jne test add sub xchg ja nop in lods xor (bad) cmp sbb jne fsubrl jp psrad rex.WRB lods adcb (bad) push rex.WR cwtl shr fdivl stos pop mov ficoml rex.RXB stc sbb rex.RX xchg xor hlt ds hlt movslq pop push xchg xor in test pop mov sub nop sahf or scas adc fldcw (bad) jrcxz lods pop rex.WR mov adc stos lods rex.WRX jp (bad) (bad) repnz adc gs lods (bad) jmpq push scas sar mov or mov and cmp nop rclb int3 lock (bad) fwait and stos sbb lods jmp sti (bad) movabs adc movslq fimull nop repz int3 sbb loopne insb repnz out adcb lods xchg mov rex.X xchg and (bad) sub test stos adc jbe sub sub or mov lods repnz cmpsb pushfq cli (bad) (bad) stc stos adc sub cld gs mov (bad) test add (bad) mov scas xchg movsb cmc sbb adc cmp js (bad) sbb (bad) movabs add leaveq (bad) sub mov (bad) rex.RX stc push jnp sub sbb cmp mov leaveq jp movabs repnz cmp in nop ja pop lods xor xchg cmpsb mov xchg lods movabs iret movabs or subl stc sbb int3 mov cmp fcmovbe cmc lods pushfq mov rex.X rex.XB push movb xchg fsts rex.WR mov or test mov cmp lods rclb add adc cmp insb jnp insl lods jb mov mov (bad) xor cs and lods sbb pop rex.RXB (bad) or in mov mov shrl lods retq out test ja jo (bad) jae cmp test pop sbb stos jo mov xchg add insl (bad) loopne insb (bad) hlt stos add rcl scas fistpl mov lods adc pop test cwtl mov rex.WRXB pop (bad) (bad) lods vmovupd lods retq lods cmp cmpsl xchg movsb push sub retq mov andl lods sbb or add (bad) rep leaveq xor popfq repnz movabs rex.RX mov (bad) and (bad) mov mov jrcxz ja retq mov jg mov movabs outsl lods movabs sub pop mov sbb mov or jmpq jb mov (bad) lods in add cmpsb movabs (bad) pop lods pop xchg (bad) loope pop pop repz pop add imull (bad) cli and in cmpsl mov std (bad) or lods loopne jge push pushq jl shrb (bad) stc retq sub lahf (bad) data16 rex.WRXB rex.WR out jbe sbb sub or push fs rex.WRB cli test (bad) mov retq jmp jl or movabs lods (bad) add shrb and (bad) rex.RXB mov gs es movabs sbb push callq (bad) sub mov rex.WR rex.WB enterq mov push lods (bad) mov rex or sub mov lods rex.RB pop (bad) jo xor or (bad) data16 in retq popq push cwtl test fsts cmp loope xlat xchg lods lahf fildl scas movabs sub lods pushq and mov movabs dec loope push sub hlt vmovntps cltd loop in lahf movabs stos out mov (bad) movsl rex.B rex.XB pop jb stos mov push fucomi (bad) and fldt dec pop retq rcll cmp push mov cmp fnstsw (bad) jmp and or fsubr (bad) jg or pop (bad) sub (bad) fcompp ficom adc xchg movsb stc pop (bad) (bad) test sub fwait sbb xor jge sahf ror (bad) lahf test lods movabs mov sub jbe (bad) jns mov cmp lods add callq mov fisttp jbe sbb (bad) outsl push cmp sti xor mov fbld pop mov lods mov adc scas pop adc scas sub (bad) (bad) icebp adc (bad) repnz lock outsl sub rex.WRB faddl jo ss push movabs mov mov mov (bad) jns adc rex.RB (bad) xlat (bad) outsl xor jmpq in retq (bad) cltd loopne (bad) movabs shrl (bad) (bad) hlt push loope mov iret in js stos rex.WRXB fwait vmovsd fs lods push cmp movabs (bad) shrl movabs js mov and (bad) lods (bad) push jl fsubr or mov xor lods mov rex.WRB gs lods jae rex.WR xor movabs enterq out push and xor retq sub sarl mov (bad) adc lods jns xor pushfq rolb lods retq rcrl decl scas cld (bad) push fwait (bad) add or (bad) iret es jnp lods adc (bad) vcvtsd2ss cmp push vmaxps xchg sub scas cltd fisttp xorl (bad) mov cmpl mov rex.B lahf pop pop sub lods xor or std push pushq mov lods enterq or (bad) jmpq jrcxz sbb rex.WXB rex.W insb pop cltd jl xchg sahf (bad) test cld push (bad) rex.WXB in push shrl mov and mov in rex.XB js int (bad) lods mov mov pushfq lods cld (bad) jo test subb push cmp mov sub lret (bad) fcmovne lods ss mov (bad) (bad) jl lcall fcoms jbe (bad) rex.XB sub xchg add (bad) add iret mov movsl scas lods outsb jnp (bad) pop fs (bad) mov add (bad) cmp loopne lods mov insb stos (bad) iret cmpsb rex repnz sbb lods rex.WRX (bad) pop cmp mov mov movslq cmpsl mov movabs (bad) jno sbb fcoml jrcxz test mov (bad) pop mov mov cmp testb mov popq pop sub rex.B nop data16 push sub (bad) mov lahf or lea sbb pop (bad) fs lods xchg push mov xchg mov jp lods (bad) lods xchg (bad) lock stos mov mov sub popq xor mov sarb iret mov sub or adc sarb cli (bad) add adc (bad) add (bad) lods (bad) cmp jl fcompl lods data16 or rex.RB divb mov in (bad) lret xlat push sub lods (bad) mov and std gs jno in mov cmp loop out lret (bad) mov jp (bad) jnp imul rex.R jne rex.B ds (bad) pop mov lea callq pushq mov lods (bad) (bad) movsl ss lods add mov rex.XB shrl stos sbb mov sub jns cmp push and (bad) retq mov fldcw ss lods (bad) mov jnp mov lods xor rex fs and repz sbb outsb insb jbe test lods test ss jne pop retq stos xchg cmpsl (bad) lods cmp and add rex.WR in add jae loopne jg adc rex.R xchg lods add cmp mov test fisttp rex.RXB (bad) rex.WRXB sbb (bad) xchg scas out scas xchg or cmp clc test xchg (bad) jrcxz mov mov jmp cmp adc stos sti or fisubrl (bad) popfq movsb lods cmpsb rcrl mov in push scas and xor repz cmp imul hlt push retq lods in cmp (bad) jmpq xor adc repnz or in fs jrcxz stos (bad) lods fwait loop es (bad) lods mov fldt xchg scas and imul callq lods pushfq movsl cmove mov lods js jne (bad) loope mov lods es and pushq jno jne xchg in lahf jl sbbl pushq (bad) (bad) or rex.WXB jg imul movsb in sub int mov cmpb lods (bad) xor xchg out or adc sub movabs repz jle mull (bad) or cmp in (bad) retq and data16 fildl lods rex.WRB (bad) mov movabs jmp cmpsb stos xlat push mov retq or (bad) pop (bad) sub or add out xchg mov mov and rex.RXB mov fstl orb vmovaps retq rex.XB (bad) mov movslq clc (bad) lods lods sti xchg mov xchg rex.XB gs sub pop fisubl and mov (bad) mov outsl adc sbb xor or push cwtl (bad) sub movl mov enterq lods (bad) xchg sub movabs (bad) lret add lods loopne or pop lods scas adc sbb js sbb (bad) lods push sbb sub rex.WRB and mov fsubrl vpaddsw (bad) loope lods and rex.WX rex.WRB mov jb addl mov mov stos leaveq rex.W lods (bad) loop movsb jbe (bad) (bad) in (bad) adc mov (bad) jno pushq icebp add sbb lods cltd int3 shrl add rex.RX test (bad) (bad) mov mov lahf mov jg outsb rex.WRXB cmpsb es (bad) ljmp adc sbb xchg (bad) cs cmp xor movabs xchg pushfq lods popq movsb lods int and mov fs xlat movsb (bad) lods js pushq lcall sbb and (bad) adc and sub or pop lods iret sbb or enterq lods rex.WRXB scas rex.XB lock cmp insb nop jg (bad) mov test push lock pop out imul rex.WRB jns xchg jbe xor (bad) pushfq stos scas (bad) jne loope fimull mov rex.WRB jrcxz (bad) add (bad) retq rex.WX gs jbe adc (bad) push lods or outsl or mov (bad) (bad) push imul sub and popfq lods cmpsb jp orb (bad) std in hlt jbe (bad) insb loop lods cmp movsl jae fprem movabs test mov cltd (bad) in mov lret scas (bad) (bad) (bad) cwtl xor out (bad) jae or mov (bad) cwtl (bad) (bad) (bad) rex.WR xchg sub pushfq sub adc jb jnp xchg gs iret mov rex.W lods stos cmp mov fwait cmpsl adc xor lods or nop jns lods sar loope mov mov mov mov rex.WRX lods nop xor jb int (bad) or cmp pushq jg jne stos adc scas jbe push xchg out or rex.XB mov or pushfq rex.WRXB movsl mov mov and add idivl add (bad) je es rex.WX movabs rex.R popq add mov stc xor rex.WRXB jmpq callq (bad) imul sarl xorb or test lret sub xor (bad) mov mov rex.R ds ja sbb lods mov (bad) push or shrb sti cld lods (bad) cltd pop int3 xchg add stos jl rex.WRX lods fcoms sub rex push fwait mov jle loope xor rex.WRX xchg sub movl scas test jp movabs add loope mov fistpll rex sbb rex.W add in mov imul retq add fcomip sarb lods movabs (bad) cwtl add outsl mov movslq mov (bad) repnz jbe sub retq mov sti lods scas rex.WB (bad) mov and stos es (bad) retq lods repz mov xlat loope cmp lods mov nop je jno fildll and (bad) fs (bad) xor push mov lods rex.X scas fwait push mov jp (bad) orl shrl out jl and ss and loopne pop mov mov lods lahf or lods loopne addr32 popfq enterq sbb (bad) mov rex.XB lods or test movabs loopne cmpsl je pop mov xchg sbb mov (bad) xchg pushfq sbb (bad) movsl int lods popfq add (bad) push lret (bad) mov or xor (bad) negl (bad) cwtl xchg lods (bad) jne fistpll nop mov lods and adc rex.R rex retq sbb cmp mov or xor rex.RB rex.WRX or sbb jae test mov or push jnp out jg scas rex.WXB in fisubrl (bad) fwait and or push repnz (bad) pop fnstenv lods rex.RB loopne sbb lock outsl push fsub rex.WRB fsubp rex.WRX pop (bad) out lods jno lea ds cmpsb rex.WXB pushq jmpq jge (bad) (bad) clc sbb push rex.WRX scas xchg out je jns in ss sarb jb sub add pop mulb sub (bad) cwtl fstpt ficompl lods movdq2q (bad) mov lods jnp xchg (bad) pushfq imul js mov sbb test mov push jrcxz sub fs mov sub lahf push (bad) jb mov (bad) (bad) add (bad) popfq add (bad) movsl insb bt (bad) sti adc mov int3 insb lods xchg outsb js mov adc mov lods (bad) sub ss roll jo cmp cs test add push xor (bad) shrl cmp push data16 lods leaveq (bad) push shlb out (bad) movsb adc jo (bad) mov (bad) fiadd sub add subb jp lods mov adcl add lods xor repnz xchg outsb scas pushq pop sbb (bad) jbe lret stos movabs sub xchg jno rex.WR fdivl lahf mov cmpsl adc lods popfq int sub pushq and jrcxz rex.X and rex iret imul movabs pop xor xchg rex.R pop add rex.RX (bad) mov adc rex.WR movabs add (bad) adc in test xor mov lcall add adc xor retq (bad) lods retq rex.WXB ljmp sub test jno xchg ja je lods rex.WXB push popfq loopne sub shr lods (bad) std and fistp scas retq (bad) sub lods repnz imul (bad) lods sahf or cmpsb xchg lret test and ja push add mov xchg test xchg rex.RX lods es jns jrcxz rex.WR movslq jbe fistp js and cmpsl cmp push insb lods jp lret lods enterq test mov mov cwtl lods add rex.WRXB repnz or cmp and lods jge jne pop sbb push test movabs enterq rcl imul cmp sub cltd movsl (bad) (bad) adc lods jo movslq loopne (bad) rex.B push (bad) xor (bad) in lods jle (bad) sub add stos and mov mov pop mov insb add pop jns cld and in sbb movsb mov retq clc fwait add xchg adc mov mov mov cmp fist adc scas cmp mov xor mov fwait test push lods mov rex.RXB (bad) insl xlat outsb adc movabs stc mov push sbb mov movabs sub and mov xchg cmpsb xchg pop hlt or sti pop adc adc movsb outsb and pop xchg jno add sar rex.WRB xor stos ds cmc imul orl xor test (bad) test fcmovb in movabs callq rex.RX (bad) mov adc (bad) lock xor mov jb iret rex.WX mov movsb imul (bad) and movabs retq xchg mov stos (bad) xlat rex.R (bad) cmpb repz push (bad) adc mov sub jg (bad) adc rex.WR jmpq xchg and sub (bad) movsl add cld lods (bad) pop jns (bad) (bad) clc jo int3 jno imulb (bad) add push xor cmc sbb rex.RX fimul (bad) rex.WR jae scas or lahf xchg add cmp out test (bad) rex.RXB mov jp lods cld adc js lret xor (bad) or cld lods mov xchg (bad) mov je insl push mov lods or jne in lods (bad) ds icebp js lods xor rex xchg pop (bad) mov xchg jae or stos push rex.WRB rcr sub xlat and mov rex.W lods lea shrl add enterq rex.RXB lods xor xchg pmulhuw jb jle pop (bad) push adc sub cmp (bad) pushq cld mov rex lods (bad) fldenv (bad) movsl rex.W rex.RXB rex.R fwait rorl push mov movsb xchg pop scas cmp (bad) add test fildll mov ds fcompl pop sbb mov (bad) push cmp adc lods jbe clc repnz push int lods (bad) out and add stos xor mov pop sbb in mov shrb stos sbb lods sbb lea xor ja jns mov sarl and (bad) test lret popfq es mov pushfq (bad) mov xchg or (bad) movabs scas mov (bad) pop sub push rex.WRXB fldl cmp jge lods jp stos fild xchg mov jle sbb lods loope and callq imul mov cmp mov movsl out (bad) in vpmaxsw rex.WXB sub cltd jo mov pop xchg mov pop cmc fdivrs rorb xchg cmp pop jge out mov push cwtl add out ja (bad) mov scas loop push fsts push or add out rex.WRX push cs data16 test movsb push faddl outsl xchg (bad) sbb mov rex.X imull lods js and (bad) (bad) stos callq (bad) jrcxz movabs (bad) mov cmpsl (bad) lods jle vinsertps rex.RB popfq xor rex.WX lret mov cld movabs lods pushq or test sbbb popq mov adc lods jle mov rex.WR stos cltd scas ja clc rex.RB push jno mov rex.WR or (bad) test rex.WRX adc movslq test lods rex.WXB (bad) cwtl jg cs sahf insb xorb adc fwait mov (bad) retq xchg lea movabs out (bad) jae scas (bad) add ds (bad) add rex.W mov je (bad) test std lods jno ficoml in lea ss cmp xlat rex.WXB (bad) or sub (bad) jmpq vandpd movabs imul lods jge push (bad) rex.XB mov (bad) retq xor std js mov lea lods sub cmp in rex.WRB rex.WRX mov movabs cli (bad) and cwtl repz cmp push mov jo xor sbbl lods push lret jp push mov cmpsb (bad) int3 ja jl sub rex.WX fnsave rex.WRXB sti pop jo xlat lods in (bad) mov sub lods in loop repz (bad) ffreep sahf lods loop xlat pop (bad) lahf lods lret jne jae pushq icebp js (bad) push (bad) add lods ds jl int lods (bad) fdivrs (bad) repz or lods and (bad) or lods xor stc sbb incl retw je mov lods in in add mov hlt mov (bad) mov push insb out xor lods pop rex.WXB jnp lods fcomp mov mov mov je xor mov add mov adc mov (bad) int3 add or jmpq sub in push add in mov insb lods pushq mov callq imul hlt xchg (bad) sub or pop pop and lods retq in loop data16 loopne insl push mov push in pushq movslq imulb in ja test sub mov sub adc mov mov pop fwait std mov (bad) stc in mov (bad) jnp scas andl jae in push mov movsl ja stc insl nop adc in (bad) subl sub lods rex.XB mov cmp pop (bad) rex.WRXB sub (bad) stc add jno lods adc or sbb subl lods cld sbb (bad) or (bad) lods movabs scas mov mov int3 sub outsl add jmp rex.XB mov lods js (bad) jmpq movabs adcb and sub push imul (bad) mov (bad) addr32 (bad) (bad) cmpl rol (bad) (bad) in lods mov cmp mov fcomp scas imul std sbb sub scas cmpsb or adc lock mov jns sub scas jle out jo shl mov fcomps jmp pop imul fs (bad) sbbl xor insl repnz movsl rex.WR rex.WRXB and fucomip and mov movsl stos or mov shll stos jns pop (bad) scas test lods retq frstor jns or mov rex.XB repnz sub (bad) cmpsl jbe mov loope (bad) jnp stos (bad) xor rex.RX std rex.R and adc xchg outsl fsubs or pop add subl (bad) data16 stos jle nopl fldenv rex.WX movabs lea shlb out jmpq mov mov lods sub push sti test roll rex.RB or cmpsb icebp pop lods cmp rex.RX jrcxz insb test pop enterq rex.WR movabs fldt (bad) (bad) cltd hlt jl adc in out (bad) push lods xchg fwait and push mov insl cwtl cltd adc lods mov out movsb mov outsl cld icebp (bad) out movabs ja fmuls shrl retq lods scas rex.RB add test (bad) movabs xchg mov mov stos gs fidivrl imul out sub in adc and (bad) push xor (bad) lods xchg div orl (bad) (bad) scas clc add pop rolb cli scas mov lods add idivl jne movabs sarb (bad) cmp fsubp add adc pop sub imul sbb ror pop mov push scas test lahf cmpsl (bad) jp fcmovne lods (bad) (bad) es lods and jbe (bad) cld repnz jo lods pushq (bad) or mov jb sub xlat jp mov lods (bad) sbb push sbb stos mov or cmp or sub cltd std and sbb xor mov (bad) lret cmp (bad) mov lods jl test cmc ficomp je (bad) mov rex.WXB lods cltd or cmc push push mov (bad) pushq xor pop mov sub sub imul decb rex.WXB adc lods mov test fmull cmp pop jrcxz xchg and fnstenv outsb jns scas xchg rex.WR or data16 and fstpl add fidivrl (bad) mov sbb cltd scas mov insb adc movabs pop test rex.RX mov fildll rex.W sub add (bad) hlt (bad) mov mov add rex.RX sbb fimul iret xchg pushq sbb mov sub mov cltd fisttp stos mov rolb adc lods outsb sbb leaveq fist or xchg add fs idiv (bad) js retq std rex.WX xor push (bad) clc fstl popfq sub adc or repz sar sbb add or insl sub cld sbb pushfq ja in in push (bad) outsl sub rex.WRXB (bad) (bad) and mov add test push xor xor push scas mov pushfq jl outsb rex.R rex.RX xchg scas sub fcmovnbe lods rex.R movsb rex.X iret or (bad) lods rex.WRXB push imul lods int3 (bad) (bad) (bad) fcomps jne lods in mov push mov flds lods jb stos add jns stos clc rex fs int insb or retq rex.RX movabs sub subl subb int lods rolb jg lods (bad) insl mov enterq xchg fsts test add lods (bad) pop mov cmp mov outsl in je mov adc (bad) (bad) (bad) lods stos inc mov lods xchg icebp add mov push push scas pushq imull stos data16 shlb and mov cmp or adc movabs movabs (bad) jmp loope clc and push (bad) out mov int cmp rex.R add (bad) shrl xor (bad) ja (bad) or rex.WR cmp lret sub sub xchg (bad) or (bad) jnp jmp (bad) movslq lods pop mov test (bad) xor pushq int adc add fildll lods rex.B std scas rex.WRX push lahf adc add cmp (bad) jmpq pop rex.WX rex.WR fnop scas clc pushq xlat and (bad) or hlt scas adc cmpsb sti out lods mov movslq in int push mov xchg (bad) scas sub add push (bad) mov sbb lock jl xchg shrl pop push (bad) mov out pop mov sahf (bad) lods (bad) callq rex.WXB movabs int3 mov lods cmp (bad) sub or (bad) sti movslq ja mov gs lods fwait or xor (bad) in sbb movslq sub add js rex.R rex.W lret push insb (bad) fs cs outsl movabs lods movabs (bad) (bad) movslq outsb mov callq xlat push sub mov jns cmp (bad) movsb lods xlat fwait pop (bad) add jb insb push lods mov sbb cltd movsb push rcr sub repnz add (bad) fldcw out test in retq test ja mov fnstenv fs roll mov jbe in rex.WXB mov stos mov imulb sbb lock in movslq cmp orl mov js lods hlt lods cmp mov je or rex.WRB adc xor sbb adc fucomp rex.R movabs mov iret insb subl (bad) ficom movabs lods sbb lods cmp (bad) adc xchg jmpq sti mov mov outsl movsb lods (bad) cs and push int lods or icebp (bad) lods jle rex.R jns imul cmc jrcxz fs mov (bad) (bad) iret int fcompl xchg mov fwait loopne cmp (bad) lahf add sbb retq xor push rex.R push jbe stos cmp xchg sbb rex.RXB mov retq push in mov ds pop int lods (bad) pushq sbb (bad) fiaddl pushfq sub lret push jmpq idiv movabs or mov pushq jnp (bad) pushfq lock rex.R lret cmpsb js addb (bad) pop mov cmp fisubrl lods retq (bad) push fist sub scas push fisttpll pop cli mov add vminps mov stc (bad) imulb jne shl rolb fld pushfq lods xchg (bad) fldl or (bad) push leaveq insl (bad) insb sbbl or lods outsb (bad) jno mov es lods pushq (bad) fisttpll and add lods (bad) (bad) lea (bad) jae add cmp mov lods jnp or test rex.R (bad) mov or jl pushq retq (bad) mov sub jge rex.RX xor rex.WX loopne rex.RXB outsw add in and lods mov stc fisubr push lods cltd retq mov int3 mov xchg xchg lods (bad) fwait jb xchg addr32 (bad) lods xchg ja sub xor (bad) test loopne xchg movabs sti addr32 rex.W mov fstpt scas stos mov addb (bad) cmp and fnstenv pushfq lods js and (bad) hlt movsl scas add out xchg cmc jg retq and repnz movslq jge pop cmp lods fistl retq push outsb and repz shl (bad) int cmpsb mov je mov (bad) rex.WRB mov (bad) movabs fstpt insb (bad) lods (bad) testb insb test mov jnp (bad) mov xchg sbb scas movsl xorl mov xchg rex.WB out rex.R in push cltd xlat cld sub (bad) jb xchg in rex.WRXB mov rex.WXB or movsb sbb lods mov rex.XB cmp sbb js lods cmc lea xchg mov fldenv in add sub xchg shrb lock add test xlat (bad) lods xor je fnstsw (bad) lods (bad) rex.RXB js retq pop rex.WX imul sbb pop and or (bad) lock in xchg pushfq sarb in (bad) stos pop adc xlat mov sahf lods fwait push sbb xchg int3 adc lods (bad) xor out rex.WR addr32 mov mov add sub adc sahf imul (bad) fild stos (bad) in or sub in rex.WR (bad) movsl sahf leaveq test clc es test pop addr32 pop mov int xor sub out int3 lods mov pop mov or sbb mov rorb retq xchg mov or out cmpsb iret lret jno std and stc rol sub (bad) mov lods cmc cltd pushq lahf adc xchg lods mov cmpsb cmp (bad) or (bad) and in mov (bad) cmp mov xor lods insb add lret jne flds pop test jg rex.RX adcl in loopne js xor callq mov xor out mov jb mov leaveq fcomip add add cmp lods jae adc (bad) (bad) sahf lret mov lods xchg (bad) iret sub add (bad) scas (bad) xor test adc movsb cwtl (bad) outsb cwtl scas mov je push out clc stos lods cli out add jns xchg mov sarl data16 sub mov in (bad) xor sti sbb (bad) fild cld rex.X rex.WRX pop es sbb (bad) fidivl pop rex.WRX pushfq adc adc in (bad) (bad) or push int rex pushfq in cmp out (bad) push (bad) test pop movabs sti mov sub cmp sbb cmp jmp stc repz jrcxz jle adc scas shr movabs (bad) sub cmp or mov outsb sub jbe loope mulps rex.WXB lods and fsub popfq xor lods retq mov stos pop je and fwait jmp out push jle xchg cmp insb nop mov lods in rex.WX jp cmpsl cwtl lods cmp lret shll sub movabs pop mov xor (bad) or lods cmc or rex.W rorb loope rex.WR sub callq rex.W xchg data16 (bad) jb sbbb js lods in sbb (bad) fisttpl movabs pushfq (bad) (bad) movslq mov jp rcrl ss (bad) rolb lods lahf sbb pop (bad) lods mov sti (bad) jg lods loopne (bad) je repz shrb (bad) rol (bad) (bad) sub add mov cmpsb lods movsb (bad) (bad) shll adc pushq fnstcw js lods (bad) movabs xor lods or xchg mov mov retq add clc (bad) rex.WRXB (bad) sub fisubr lods (bad) je test cmp (bad) fwait mov cmpsl rorl mov fxam add (bad) insb (bad) rex.WXB push pushq jg lods adc loope xchg pop push mov stc push shrb (bad) fmul enterq in push xchg sbb adc pop scas scas jg lods jrcxz add mov sbb lods dec addr32 cmpsl cmp out adc xor lods xchg sub and mov lods sub pop jg xchg mov popfq in adc outsb lods faddl mov out jno xchg (bad) xchg cli hlt movslq (bad) push cmp pushq (bad) mov (bad) cwtl mov scas cmc fadds pop lock (bad) lods xchg add (bad) sub rex.RX imulb jmp int3 mov andb rex.RX mov cs lods scas leaveq shlb and (bad) rex.XB jmpq movabs jl mov (bad) in mov stc pop lea rex.WB gs and movsb mov leaveq lods (bad) rex.WRXB adc push stos adc in callq shlb and clc mov jg jle or mov push or lods or (bad) shlb nop stc rex.WRX cmp or fwait jnp rex.WXB ror loopne sub xor push (bad) mov lods cmpsb sti (bad) sbb xor (bad) (bad) outsl pop retq cli rex.XB pushq xor frstor (bad) nop pushq adc rex.W add movabs popq mov cs and jo adc pushq xor loope sti es rex.RB mov rex.XB sub fnstsw movabs (bad) (bad) mov shrl outsl rex.X (bad) (bad) sbb callq fsubrs repnz (bad) lea sbb xor test outsl fmull or je adc sub rex.WR popfq rex.WRB xchg xor xchg mov mov imul xor retq in mulb outsb lods and jmpq data16 mov (bad) adc repnz in stos push (bad) cmpsb lock int push (bad) lret or fmul imul cltd xchg sub adc (bad) mov xchg mov lods (bad) addr32 mov fucomp sahf mov sbb (bad) add xchg rex.B (bad) (bad) cli mov mov insb fs sbb adc pushfq repnz out xchg mov sub vrcpss cmp hlt sub (bad) (bad) xchg cmpsl insb imul movabs fnop scas test insl xor cmp data16 (bad) adc sti sbb loop lods leaveq adc hlt (bad) imul or lods (bad) xchg stos sub jmpq movabs lods (bad) mov retq (bad) ljmp adc adc out add outsl cld movsb test adc cmp (bad) mov jp mov sahf cld cmp es addr32 push pushq or (bad) cmp xchg cltd (bad) lret (bad) scas cwtl in xor ja ds mov out scas (bad) mov jne pop out lods leaveq clc out adc sbb outsl and sahf jo mov pop adc lods mov repnz lods push push adc pushq xchg icebp loop fiadd (bad) push xor mov jmpq add jmpq and shlb cs add rex.RX mov scas xor lods add (bad) push adc insb movsb jno enterq lods sbb iret push mov insb lret cmpsb movsl push callq lods add xchg adc xchg lods push sub sub rcrl xchg (bad) movsl sub add adc lods rex.RXB and (bad) pop jmp outsl sarl or xchg or sub (bad) insb xor loopne pop push jl in scas cwtl xor nop push lods adc in rex.RXB (bad) xchg jo icebp push out lods xchg movabs jns popfq lods jne (bad) add pop cli (bad) mov movslq mov shr (bad) fs (bad) movabs sahf add sub pop mov (bad) mov and mov in movslq mov notl in lods cmpsl adcl jb stc pop insb ffreep lods jne xchg add lods xchg movslq ja mov (bad) cli jg or mov sahf mov scas mov adc (bad) decl rex.WX stos lret mov jo test (bad) repz push (bad) xchg add (bad) scas push stos xchg jg (bad) rex.WX pushq (bad) jmpq fimul movsb icebp xchg (bad) cmpsl test js movabs (bad) cmc (bad) mov (bad) adc out stc (bad) mov rex.B sbb loopne mov lods (bad) (bad) scas jmp (bad) mov test xor lock in paddd rorl rex.XB scas rex.RXB (bad) and mov xor adc mov or pop imul rex jnp cwtl mov rex.XB cs (bad) in stos addr32 (bad) jle (bad) out rex.R rex.RX (bad) pushq enterq movabs add or out push lods fwait sub (bad) sub movabs lods xchg mov sbb movabs lods mov cli movsl (bad) (bad) lock (bad) lods int3 pop pop mov add and lods mov xor int (bad) cltd mov adc lods insw mov (bad) adc cmp or scas (bad) (bad) rex.WXB (bad) mov out sbb sbb adc rex.X (bad) sub add fwait sbb sub adc retq jl leaveq add (bad) lods loope test jne cmp rcr (bad) movsb jnp jae fucomp movsl sbb shrl or jmpq rex.RB adc or mov mov std repz adc lods rcrl int add jo movabs sbb or sar and (bad) rex.WR xor iret cli mov roll rex.WXB insb and movabs lods mov rex.W lods mov sbb rex.RB rex.B rex.WXB xchg mov scas jl xchg and cmp jo stos xor and mov (bad) retq sub (bad) std and pop mov xor outsl jno rex.X add (bad) (bad) std or lods (bad) (bad) cmc pop push jg sbb mov movabs xchg lods pop mov and enterq lods scas push mov or jle sbb cmpsl cli jrcxz lods iret (bad) (bad) insl cmc cmp push rcr sub rex.RB rex.RXB mov (bad) rex.X cmp push test pop add testb lret cli mov push in lods fnstcw movabs in movsl (bad) fistp mov and fsts or cmpl cld cs (bad) test lods xchg pushfq lea push outsb repnz (bad) out (bad) xchg jl (bad) lods push push cmp mov addr32 and (bad) test sub fstpl pop sbb pop adc jne adc xchg js cld add mov pop clc rex.RXB flds cli xchg cltd jbe (bad) rex.WRB rex.B lods outsl test mov lods stos rex.RB sahf (bad) pop mov hlt rex.R (bad) lods (bad) movabs add scas add lods stos mov popfq fld mov scas pop (bad) cmp push cli pop lods adc cli lea fsubrl shl je push lods cmp out js jae lods pop cwtl (bad) fcomi loop rex.RXB sbb movabs (bad) test pushfq lods stc pop and test lods repz or push lods adc mov sub es lods sbb jo popq jle and fidivrl (bad) xchg and add rex.XB (bad) pop add fs movabs lods and ds subl lods add sbb add mov mov mov cmp adc mov xchg sarb jo (bad) mov xchg enterq mov out scas cli adc pop (bad) (bad) pop pushq mov jne (bad) (bad) xor mov repnz lods stos mov (bad) jo js pop in sbb cld adc (bad) rex.WB fstps lock add adc mov mov shrb (bad) lods (bad) add and sub shld jno mov push (bad) xchg pushq rex.WXB scas (bad) cwtl (bad) repnz fsubl sbb test lods hlt (bad) add mov clc mov mov (bad) lea je mov insb repnz sti lret test xchg jnp retq retq lods mov rex.X and sub rex.B rex.XB scas gs (bad) sub mov (bad) out ror adc fcompl stos shrq insb (bad) and push in rex.WRB repz loopne fsubs pop sub (bad) shrl fisttpl lods rex.RXB scas xchg pop pop rex.X ja push jmp add sub sub lods addr32 cmp lret sbb mov insb jmpq mov stc or rex.X xchg rex.WRXB push loop (bad) nop lods mov (bad) jmp lods (bad) sti (bad) xor (bad) lods (bad) (bad) sub xchg push lods pop rex.RXB pushq xor or (bad) insb sub outsl (bad) insl add mov (bad) clc adc loop movsb std jno jp mov xor add insb insl sbb fcomps stos (bad) ficompl outsb mov fsubr (bad) cmpl pop lods rex.WXB pop stc cld or lret lods or add mov lock in out lods cmpsl stc sbb (bad) mov mov je push imul (bad) (bad) stc mov addr32 lods xor pop (bad) movslq scas mov test cmp mov add movabs cmp rex.RXB andl scas cld pop (bad) lods insb js push (bad) mov cmpsb or sahf in retq sub mov lods sub fnstsw xchg or cmp jl push lret xor jns or push push movabs in xchg mov or lods icebp adc sti xlat scas mov movslq subl lret adc mov sbb icebp or lods rorb add lods xchg or adc test sarl stos (bad) mov loope xchg jl incb lods add (bad) xchg mov rex.WRB add (bad) cmp and xchg lahf js and in cmp rex.XB leaveq out cmp scas cmp lods test xchg insb rex.WB rex.RB in decl sti fisubr gs data16 rex.X (bad) stc sub sbb mov movabs cld insl sub (bad) xor (bad) sbb in (bad) lods or push rcl jo pop lods pop in ss sub adc (bad) (bad) mov mull xor in imul adcl add iret stos pop cmp gs or add (bad) cwtl pop cs pushfq test jge sti xor out push or (bad) add rex.WXB pop or rorl lods lods rex.WXB xchg stc cmp test addr32 fsubrs (bad) adc gs jge loope outsl push jns push sahf hlt divl mov mov (bad) xor out int (bad) and sub sub imull cmp jle xchg retw mov (bad) mov add cmpsl (bad) (bad) push rolb xor (bad) (bad) (bad) push stos pop cld jno (bad) retq in scas sub rcr nop xchg xchg (bad) scas mov outsl adc sbb movabs xlat or in sbb fwait (bad) ja lods rex.WB lock (bad) lret (bad) cmpsl lods pop jrcxz cmp (bad) (bad) mov (bad) scas outsb lock subl sbb movabs in callq mov pop loop (bad) (bad) scas ficom lods insl (bad) fisubrl hlt (bad) je stos in iret sarb xchg mov scas xlat (bad) (bad) out xor mov mov (bad) in lods (bad) cmp push lods cs std (bad) sbb cltd retq or sbb fsubrs push sub movabs negb movslq decb mov rex.RX lret lods cld test js jp stos (bad) xor rex.RB outsl lods adc (bad) (bad) xchg jae (bad) (bad) rex.R sub (bad) push (bad) mov lods lods gs stc jae sub lods add cmp jl jg pushq jno add loop jns sbb sbb fcompl (bad) addr32 sbb cli movslq stos add pop pop gs (bad) mov je (bad) mov (bad) fldcw (bad) sbb sub xchg ds sbb imul sub popfq std js lods fstl push (bad) mov mov movsl insb pop jno (bad) repnz (bad) sub lods or rex.WRB leaveq jbe sti lods js sbb xchg fisubrl lods subl cld mov xchg in jmp jp jle lods jne rex.WRXB pop push loope (bad) lods adcb (bad) lods or (bad) stc cmpsl lods cmc rex.RX xchg in pop enterq add push fildl fildll rex.WB jl es cmpsl in lods movslq jge sbb cld add mov mov (bad) cmp (bad) lods outsl int3 add xlat test mull cld loope imul fbstp mov sbb mov mov sbb push (bad) fcmove pushq (bad) mov enterq pushq jrcxz jo cmp nop lods or loopne lods add out fldt movsb cwtl fsubrs data16 lods out cmp and sub (bad) (bad) push lods (bad) (bad) (bad) nop retq xchg mov movsb sub jge scas push insl stos fstl or in mov and pop (bad) movslq lret sbb scas jb sub addr32 adc decl and popfq fldl in hlt mov pushq cmpsb xor nop or movabs jb fmuls stos jne rex.W lods sbb and rex.WB (bad) lea out (bad) lods cmpsl fimul lods mov mov mov jge test pop sub or clc xor pop (bad) mov movabs cmp cmpsl out jne hlt jmpq sti mov stos lods rex.X mov jae jae mov loop,pn (bad) cmp and lods and (bad) xchg lods (bad) cmc out stc movsl notl sbb subb mov jns leaveq shl mov adc jo lods and rex.W mov lods jle fisttp (bad) jb or mov addr32 callq movabs push lock movabs cmp icebp sbb mov in jne sub sub cmp cmp rex pop (bad) push lods fwait outsb and lods (bad) psubsb in mov jl (bad) push xchg (bad) or movabs push and lea sbb in lods xchg outsl add js push (bad) lods adc or lods mov cmp rex.WB rex.WR pop cmc sub xchg fmuls pushq sub stc sbb lods jg pushfq xchg loopne pushq (bad) jge test lods push sarb sbbl jb sub (bad) lods in cmp add jnp (bad) loope int3 (bad) (bad) mov lods rex.WRB (bad) or fucomi movabs adc mov cmpsb sub pushq fsubrl fs (bad) out xor scas add cmp fisttp insb mov lods stos xchg popfq insb (bad) (bad) push jae mov loope and fiadd mov in or jl lods rex.WRB sbb cli xchg mov pushfq jae (bad) popfq xchg es movabs fldcw lods sub pop (bad) movsl scas retq rex.WB (bad) jle pop test mov mov jmpq (bad) sahf rex.W jbe add jl jnp mov xor cmp ja jg rorb (bad) pop (bad) sub sub in and rex.RB in lods lods test (bad) fdiv xorl jg rex.WRX mov fstpt lods stos (bad) cmc (bad) in pop mov mov and (bad) add (bad) (bad) sub shll mov test std pop add clc lods (bad) push (bad) icebp (bad) mov lods in mov fisttpll xchg sbb jns xchg push mov adcl (bad) (bad) popfq (bad) (bad) mov jrcxz,pn rex insb movslq lods sbbl and xchg sbb iret loop movabs (bad) or mov imul pop cmp rex.X rex.WR stos hlt add sahf rex.WRXB repz lods add icebp lods out (bad) and or rex.WX rex.RX test stos cmp sub xchg rex.WRX (bad) mov (bad) pop cmp lahf repnz push mov (bad) (bad) test lock sbb lods add xor fldl fcmovbe in and adc lods (bad) lods data16 jns subl (bad) and imul icebp std pop adc movsb lods (bad) int3 rex.RB fsts sub rex.WR (bad) jp lods out lea lods add pop sub lods in jb (bad) adc (bad) stos adc ljmp pop loop hlt or js popfq xor jnp mov movabs jg and (bad) sahf or loopne shrd cli fs mov fist iret and add jge (bad) sub rex.B mov jb (bad) movabs mov movsl (bad) push jnp xor lods sub (bad) out iret repz (bad) jp lods enterq sbb in lods jle (bad) pop jmp fs sbb cmp sbb sbb lods cmp (bad) iret (bad) sbb sub imul enterq stos mov xchg cmp (bad) adc sub adc lods cli xchg pop and out xchg sbb lahf pop (bad) sbb or insl int3 (bad) (bad) stos (bad) lods mov xor lret pushq rex.WRX ds lods sbb xchg sti push fdivl sub out sbb push lods lret jge push cmpl rex.R rex.WX rcll (bad) imul fmull pop movsl lods jp (bad) rex.WRB or test scas xor adc stos push out mov lods add and (bad) xlat xor sahf mov cld rex.R sahf xchg pushq or mov or pop lahf sbb lock gs (bad) cs rex.RXB in mov lods jo sub pushq loop sqrtps mov adc pushq pop scas mov (bad) (bad) (bad) lret stos je repnz mov sbb xor push or fisttp rcrl hlt rex.WRB rex.RX popfq lahf add add sti mov rex.R rex.W (bad) sub jge sub adc loopne sub in rcl sub and adc fsubs insl (bad) jmp (bad) jns clc sub (bad) insb (bad) pushfq mov mov (bad) lock pop js lods sub adc out stos out jp (bad) (bad) hlt fimul xchg adc stc cs mov (bad) test mov jno rex.X hlt or movsl ja scas pop subl fnstenv int3 mov sbb (bad) (bad) rclb lods je and add cmp lods xorb rex.WB (bad) data16 mov mov mov (bad) scas add lods mov and sub mov sbb xchg jo mov loop cmp mov (bad) rex.XB pop or or repz sub pushq lods jb jrcxz mov leaveq movsl or (bad) jge imul rex.WRX or sub and insb leaveq lods pop outsb sbb mov fmuls in push test (bad) movabs cwtl rcrb or mov and stos lcall movabs scas (bad) rex.W int3 cld or (bad) lods callq movabs je mov and shlb sub callq bnd lods mov pop rex.WRB lods or add out sub movabs mov mov mov imul pop mov (bad) adc xchg jns add lods and (bad) rorl lea lods pop xlat rex.WRXB mov ds addr32 jno fist sysenter shl int cmp (bad) sahf rex rex.WR stos xor rcl cwtl mov sbb mov data16 jo mov cmpsb gs (bad) in cmp add lods loope cltd subb rex.WR gs mov (bad) pop rex.RX sub cmc mov (bad) xor gs mov lods (bad) (bad) (bad) fist rex.WX xor sub sub shr test cli lods lahf test mov lods jle xlat mov out pop and sahf lods push mov ror sbb lods xor movsb in ja,pt mov add rex cld mov add jg lods (bad) test xor mov sbb movsl movabs xchg in lods subl fstl (bad) lods stos mov rex.WXB (bad) scas lret jl clc lods fs loope mov (bad) xchg lods mov push rex.W out pushfq stos cmpsl out or cmp insb lods mov mov add lods push test (bad) cmp outsl lods and (bad) ds rcl sub insb (bad) pushq idiv scas fs nop outsb mov movsb lods outsl (bad) insb imul and xor (bad) rex.WRX adc stos (bad) pop pushq mov callq and (bad) sahf sub sbb (bad) (bad) cmp mov xchg (bad) popfq sub add movslq pop (bad) and addr32 mov (bad) xor sbb sar lods (bad) cld pop mov (bad) movhps adc push mov stos add in pop rex.X pop mov leaveq rex.X pop repnz (bad) (bad) mov (bad) jge add sub rex.WX out test mov mov neg stos in cmp and jge jns loope jae (bad) sub (bad) test (bad) adc lret scas sub (bad) lods nop subl test (bad) adcl jae movabs in mov (bad) je (bad) movabs jrcxz lods cltd (bad) add (bad) (bad) mov rex.WXB sub (bad) lods clc sbb pop push mov add loop lods mov and (bad) lods adc xor and pop cmp (bad) fistpl add shrl jmp lods cld rex.RXB mov rcr adc lods out rex.WRB rclb sub mov add (bad) lods cmpl (bad) rclb (bad) (bad) lock in (bad) mov retq jl sbb and sbb test (bad) sub stos rex.WRXB fs shrb xor negb sub lods cli lods sbb iret fsub xor cmpsb movabs or rcrl push rex.R movsb repz xchg lods pop movabs lods stc or adcl je sbb rex.WRB jp lods push jae imul cmp sub cmp movsl lods fcmovne sbb test (bad) and mov fwait cmc test xchg ror outsl push in (bad) cli pop add adc outsl and out jnp (bad) jne in mov sbb rex.WR xchg scas test sub loop jl lods sub iret (bad) je fsubs in and push fwait and or (bad) xor pushfq rex.WRX cmp repnz mov (bad) push lods (bad) (bad) nop (bad) and sbb sub sub jo (bad) mov scas ror or sbb fildll cld xor lods pushq lods retq pop je mov adc cmpb mov rex.WR enterq jrcxz es xchg rorl jo mov jp jne (bad) mov jb test adc retq test adc movsb (bad) mov xchg lods int out mov xor out rex.X jmp sub (bad) movslq add jb mov sbb sub sbb add rex.R loope mov (bad) enterq hlt add mov adc xchg mov cs shld (bad) add lret hlt mov lea mov and rex.WXB (bad) jae xor add lret fcmovne leaveq int3 rex.XB adc (bad) sbb rex.WR mov pop (bad) jrcxz vmaxpd pushq jg xor (bad) (bad) sarb mov mov movsl mov jo cmpl and ss add out stos cmp cwtl mov js fucomip icebp add lods (bad) in cs xchg lods cmp movsl rex.XB out sbb movabs mov clc rex.RXB icebp lret insb fwait xchg and xlat lods sub imul rex.WRX (bad) xor mov sbb xor pushfq in addr32 (bad) out sbb lods out push pop jg mov cmp shrb lret out pop (bad) in xchg xor sub jrcxz and rcll xchg (bad) pushfq comiss retq callq scas mov or lret jb jmpq xchg adc sbb adc jle pop rex.RXB lods rex.RB rcl ja int3 clts lods cmp (bad) rcll (bad) mov xor jne xchg sahf cmovg jle pushq (bad) mov xchg mov xor rex.RX (bad) pop sti jl jo mov (bad) mov cli out mov in retq iret lock jle movslq scas mov adc jb rex.WX iret push rex.B in mov rex.XB out lahf adc ficompl sub adc cmp rex.WRXB mov cld and jrcxz (bad) or sub lret lea mov adc mov pushq rex.XB jno (bad) rex.XB sbb (bad) mov or adc mov sbb adc (bad) sbb test mov or lods in je xchg (bad) mov sub lods in stc cmpsb and stos (bad) in cli mov and jmpq xchg mov mov lods std icebp add sar add stos cmp mov (bad) cld adc lods jnp test lods js rex.WRB rex.WB repz pushfq (bad) add sbb mov sbb mov mov (bad) lods pushq rex.R sbb xlat rex.W xor sbb adc movabs decl shll xor lods stc loope rex.WRX jrcxz imul push (bad) lods mov cs decl rex.RX push imul test lods push cld rex.WRX pop imul movabs xchg and or test adc xor (bad) in sarl pop je cmp cmp (bad) sub jae (bad) mov (bad) lods cmp cmp sbb push push in enterq fimul sub jmp movabs or int3 mov sbb (bad) mov mov sbb lods movabs mov ja mov mov or movabs (bad) lret jmp add rex.XB pushfq movabs out sbb xchg shrd outsb mov sub xor mov punpckhdq cmp shlb mov scas (bad) mov scas jrcxz push pop adc ds rex.WR rex.WRXB loope in scas lods rex.WRX and imul xchg adc lods xchg mov mov insb rcrl add xlat es int3 pop mov fcoms movsl (bad) sub pop outsl lods pop imul jge je mov (bad) add sti (bad) push fild imul fiadd (bad) and jns je,pn lods push jne stos rex.WRX xor xor push pushq ror xor rex.R sub mov repnz js lods movslq or stos sbb out fwait pop sub outsb pop and pushq (bad) cld shrl xor lods (bad) (bad) stos loopne rcrb mov rex.WR ss (bad) stos mov jmpq xor (bad) ror rex.WRB sahf (bad) fnstcw xchg insb je movsb mov mov mov pop mov jne push (bad) mov cmp cmc adc out js (bad) insb xchg cmpsl rex.WRXB mov flds hlt insb mov cmp rex outsb sbb cs movsb fsubrl xchg clc jmp adc sub out in pop (bad) js mov (bad) (bad) mov (bad) lods loop pavgb repz push pushq cmp rex.RXB (bad) (bad) mov retq rex.WB sub sbb roll int3 xor adc (bad) movups fdivrl push rolb scas fldcw iret rex.WR insl movslq out jg lods fwait movabs mov lods jrcxz mov mov popfq xchg mov sbb int3 push insb rol rex.X lods push jmp rex.W rex.WRB mov in movslq stos addb cmpsl shrb fsubl outsl loope mov push rex.WRB lods cld (bad) mov pop test es in shrl push hlt add imul ds sub and (bad) pop (bad) (bad) pushq clc scas (bad) movsl add repnz jbe rex.R mov push data16 callq xchg shlb add push rep (bad) sub xchg xor (bad) pushq cltd lahf mov (bad) (bad) js and test retq imul jmpq mov pushq jrcxz mov lods push sbb cld and test adc (bad) lods leaveq callq pushq cld mov outsb rex.RX sbb sar lret lods adc jae cmpsw mov jns lods in insb movsl mov sub sti rorl mov xchg (bad) sub add outsb movabs cmp scas cmp or (bad) sub int3 and gs lods pop fdiv and and lods sbb decl test (bad) rex.W push pushfq cwtl jle jl xchg push sub cmp adc and sub (bad) movabs push lods (bad) jne movabs ds out push (bad) lods out mov cli sbb (bad) mov xchg xchg loop lods insb mov div gs movabs nop rex.B rex.WR and shrl jg mov xor xor adc fidivl and jns (bad) stc (bad) (bad) add mov mov mov rex.WRXB (bad) mov add add fldt lods fs cmp out (bad) retq (bad) loopne rex.WRB rex.X mov movsl js lods add jmpq mov insb xchg (bad) sub jp out scas adc cs mov je xor sub repz (bad) rex rex.WRX push sub ljmp sahf lods out fs sbb add mov outsl (bad) mov orl roll mov (bad) jge movabs mull iret push in fmull (bad) jo rex.WX hlt lods rex.XB (bad) lods leaveq (bad) retq test lods jmp cmpsb fisubl rex.RB scas xchg adcb lahf sahf es loope repnz out rcr pavgw shrb jle int3 sbb lods outsb or xor lods ror (bad) (bad) int3 rex.WXB (bad) xchg in std xlat mov lods rex.RX movabs add enterq stos ja mov lods iret (bad) imul mov (bad) movabs rex es or lods mov nop ror (bad) out (bad) sub sbb xchg add js xchg scas sbb iret in icebp and (bad) cwtl stos insb loop and cmp movabs and insb test in pushq enterq lods mov mov jo or std or in lods hlt rex.XB cmp lods push adc (bad) ja or mov rex.WRX lea je shrl test mov or jns sub xchg rex.XB (bad) rex.WXB (bad) jp and gs (bad) sti callq (bad) imul insl xchg (bad) jp mov lods xchg (bad) mov iret test (bad) push lods clc cltd xchg rex.WRXB retq movabs out lahf mov out (bad) lods lods xor mov lahf adc rclb movabs (bad) movabs insb rex.W lods sbb mov lods (bad) and adc (bad) mov (bad) jno sbb frstor jne rex.RB scas scas fbstp fidivl push rex.WXB stos enterq add lods rex.RB lods cmc (bad) xchg fidivr sbb (bad) add pop adc (bad) sbb adc in or lret in sub fwait lods std adc jno data16 jge popfq jmp loop mov pop ss sub and in movabs add fldt (bad) jge (bad) shl std out movslq or repz callq scas dec movabs or out cmp fwait jg mov or cmp lods jo sbb insb cmp imulb cmc cld shrd (bad) jge imul push sub loope mov in gs jp lods outsb jnp mov or ds and retq (bad) jae (bad) (bad) (bad) lock out (bad) and xlat mov sbb push mov lods cmp (bad) retq xlat lods (bad) lahf nop jnp jmpq movabs sar rex.RXB retq (bad) loope insb sbbl rcl or lods sbb lods rex.WR (bad) pop pop gs mov lods ss shrl pop (bad) mov fnsave rorl je cltd lods or (bad) mov xchg clc (bad) sub lods iret add movabs lods cmc adc sub and leaveq fwait mov cmp enterq lods mov cltd (bad) or mov add or (bad) movabs sbb lods (bad) add add and lods mov mov pop (bad) (bad) movabs fldenv out adc pushq (bad) jg lock rex.RXB (bad) in xor movsl rex.WRXB (bad) push int3 movabs mov popq (bad) movsb rex.RXB (bad) sbb lods movabs and lret (bad) faddl adc std sbb mov xor outsl cld rex.R lods mul fwait movabs or insb cwtl rex.WX sbb jno sub or rex.RXB fwait test adcl retq sahf loopne cld movsl sbb add pop lods mov movslq mov (bad) xor lods fsubr js mov jns rcrb cli subl test xlat sub stos pushq sub mov imulb rex.WRB or or sti lods stc or add lods pop scas push ror repz movabs test push (bad) mov add jae lods cmp cmpsb adc (bad) or shll fldcw or ja movabs sub jb adc movabs int3 xor add (bad) xor adc pushfq lods imul lahf stc insl add jge subl icebp data16 (bad) cmpsl jne (bad) rorl jbe adc lods adc (bad) rex.WX mov rex.WRB (bad) or (bad) leaveq shrl mov lods stos adc rex orl insb or lods or (bad) in nop sahf sbbl loopne rex.WB (bad) stos adc pushq push pushq xchg insl and lods (bad) or callq stos jne (bad) jae cld fdivs add or cwtl lods (bad) lock cmpsb rex.WRXB xchg movabs repz jg insb pop sarb mov movabs fimull (bad) or in rex.RXB es cli jae xchg sbb stos (bad) fwait rex.X pushfq jbe rcll subb sub adc test (bad) in or loop xchg rex.X mov mov insl andb lods movsl jrcxz (bad) in rex.RX pop adc (bad) mov or imul (bad) cmp rex.WRX mov js sub lret test and add out in or xor rex.RX rex.WR fs test out (bad) rex.WRX pop jns pushq lods xchg rex.RX rex.WX push cmp rex.RB (bad) (bad) (bad) out pop enterq sbb rex.R (bad) jo mov lret je adc adc adc rex.RB jno ljmp mov repz (bad) sarl jne pushq shrb test fwait and lods jne (bad) add xchg mov pushfq mov or sub cmp rex.R mov jbe rex.X rex.RXB lahf push pushfq lods cmpsb in add xlat mov out cmpl in sub xchg add jo (bad) add lods js cmp push decb fmuls adc push lock xchg (bad) rex.WRB xor hlt clc stos mov (bad) (bad) mov nop add rex.XB lahf cwtl shrb movsb sbb mov (bad) (bad) mov xlat data16 rcl pop stos sub mov or push fildll jmp xchg mov retq pop sub lods (bad) stos mov divb rolb mov andb in push (bad) stc sub (bad) (bad) lods cmpsl xor movabs es int fadd test hlt lret xchg lods jno and insb adc pop cmp lods test xlat pushq out loop lods (bad) fmulp cmp jo sub sub cmp rex.WR add add nop lods push hlt enterq (bad) (bad) adc cmpsl mov xor (bad) and lods (bad) outsb jge ficomp rex.WRXB cld out stc pushfq mov pushq lods iret int rex.B rex.RX xchg fwait pushq negb and std (bad) fisubrl jbe or lods lods and (bad) es scas mov mov mov xor jl adc lret lret mov lods pop movsb int3 shlb (bad) repnz addr32 cmp data16 movabs jne xor out scas addr32 in repnz lods rex.R mov add cld sahf sub xchg rex loop push mov mov pop sbb lods mov (bad) movabs pop pop adc movabs sbb mull hlt push lahf lods jp sbb fldt mov test addr32 mov (bad) jl subl imul sbbl cmpsb int3 rex.WRB mov rex.XB test lods out insb xor pop in (bad) mov sub push (bad) fdivrs (bad) or rex.WRXB rex.RX insb stc mov xlat clc xchg in sbbb test lods (bad) rcl (bad) jmp (bad) (bad) sbb lods push (bad) fildl lods fwait and xor rex.WRXB rex.RB pushq mov fwait rex.WRX jno sarl or retq retq gs repnz lods (bad) rex.WB fnsave rcr (bad) nop (bad) (bad) mov pop xchg cmp xor lods cmpl or cld lods rex.WRX test adc add movabs rex.WR (bad) cmp (bad) (bad) insb sub xchg push adc xchg (bad) rex.WR xchg sbb push mov pushq lret mov rex.X (bad) lahf icebp out mov xor scas cs sub jrcxz sahf and (bad) andb rex.RX mov movabs add scas shr (bad) out lods add clc rex.WXB test (bad) lea stos mov loop fnsave rex.RB out lods pop popfq xor jl mov rclq (bad) test sub xchg ja (bad) lods movslq (bad) push cmp rex.WRXB cs xchg sbb subl mov test sbb xchg and pop (bad) lods (bad) mov cs (bad) (bad) jae sbb rex.W rex.RX outsl test fs fisubl rex.XB shll sub rex.WXB rex.WRB data16 lods adc fnop fisttp rex.WB (bad) xchg lods (bad) (bad) adc lock test xchg cmc xor lods rex.WR (bad) std ja xor and rorl rex fstl xlat movabs or sbb mov cs lods (bad) (bad) mov enterq lods mov (bad) outsl iret (bad) movabs pop xor xorb (bad) sub fiaddl cwtl (bad) cmc sti lods mov shr adc cld gs rex.X rex.WR and out mov xchg lods icebp mov xchg push vpaddsb push lods hlt sti rex.WB or (bad) pushq push rex.WRXB sbb jb iret lods push (bad) movslq rex.WRX adc cmp (bad) fisub rex.XB pop lods lods in rclb and mov rex.RX vandps mov mov cmpsb lret mov out mov rex.XB cld rex.WR movsb rex.WRXB sbb lods fimull and lods test scas sbbl add lret xor or sub scas outsl jnp sbb pop cld (bad) scas movabs mov test fimul rex.XB (bad) cmpsl and repz in cltd sahf and movsb int mov fsubrl rex notl in cmp cmp loop xor (bad) mov rex sub es rex.WR (bad) adc (bad) rex.RXB fwait add loop lods push in shl mov mov lods sub scas mov add loope pushq (bad) ds jae ja stos in test push lods adc es pop adc jo insl lods sahf jp jbe mov lods sbb (bad) sub je retq lods hlt imul lods ss mov movsb fs (bad) imul sub mov (bad) sarb popq fstl jmp (bad) push jnp mov retq je sub lock pop sub cmpl retq clc sbb (bad) lods rex.WRX lock xchg imul ja rex.WX (bad) or (bad) pop xchg rex.X rex.WRXB lods pushq mov clc leaveq lods (bad) sub adc jnp movabs in lods (bad) stos mov sbb roll (bad) mov (bad) gs lahf xor sti in and or scas jp outsb loope sub pop scas cmc mov imull nop push fsubrs sbb movsb lods jns vucomiss xchg in movabs add out callq mov scas and sub lods fwait test (bad) insb lods repz movabs or mov adc std imul imul rex.X repnz rex.WR movabs sub xchg fsubs (bad) lods adc test insl lock lods adc sbb pop push stos (bad) lret sarb lods jne sbb imul callq imul rex stos mov (bad) add adc pushfq sarb in push pop cmp js scas pop (bad) movsb xchg adc (bad) shrb (bad) loopne pop xchg in scas (bad) sub adc jle mov add loop fwait lods jle xchg lods xchg faddl mov mov xor and adc fcomip cmpb (bad) jl rex.WRX add iret retq mov movl cs idivl fcmovnb ja and (bad) jle fwait xchg int leaveq sbb outsl (bad) sbb sub fstl imul (bad) pushfq lods iret scas fcmovb outsb jg imulb adc out sbb fwait pop movabs insl cmp clc rex.WB pop and icebp js fldcw fildl and mov callq adc (bad) ja lods lock cmp lods (bad) pop (bad) fs mov (bad) mull (bad) test lods sbb pushfq je xchg (bad) (bad) lods test cld adc out xchg scas cs sub adc rex.WRXB adc (bad) sub mov jp sbb rex.RX std fldl loop and pushq cmp xchg xchg (bad) je sub lahf sbb fisttpll lods (bad) adc xchg sub vpcmpeqb add xor adc lret loop in lea movabs add stos fs cmp jmp out cmp in clc jl sub adc add in js fincstp sub sub adc int lahf sub push or rex.XB outsb (bad) movsb lret lods enterq insb mov add lahf xchg movslq (bad) lods or xor adc mov lods jno mov rolb mov lahf rex or cld lahf fisubr push sub lods sbb adc sbb mov mov movsl fwait xchg mov lods (bad) roll sbb add adc and rex.WX xlat (bad) movb lods rex.X mov jrcxz enterq sub sub (bad) xchg scas mov (bad) pushfq add insl in clc movsl out leaveq (bad) stc jle adc jl lods add mov popfq mov out push callq and lods movabs out mov rex.WR callq mov xor or outsb xchg jnp cmp enterq fwait enterq (bad) imul or in push mov push scas adc mov mov mov adc (bad) add (bad) int3 jbe mov test imul rex.WX xor scas retq movslq lods xchg cld sub cmp rex.XB lods insl (bad) sbb pop xchg cld fistpl in out pop sti callq (bad) retq or sbb cmp jbe xlat lods sub xchg xchg lods jrcxz setle nop subb mov lods push (bad) (bad) xchg rex.WX fistpll addl clc loopne stos (bad) lods mov sbb fdivp add xor (bad) push je sub pop mov mov sbb in xor lods sbb (bad) jne (bad) cli sbb or mov retq movabs orl test push sub rcrl cli insb movslq leaveq (bad) out orl int3 mov mov stos scas pop push cmpsl rex.RXB cmp lods push xor cmp (bad) in andl cmp fisub rex.R lods js outsb sub in (bad) popfq mov add push lods movabs out (bad) scas popfq (bad) push fldt rex.WRXB rcrl pushq (bad) movabs xchg mov xor pushq cwtl lods retq lahf mov gs (bad) lods or push sbbl leaveq lods std and idiv pop cmpsb retq movabs fnstenv and adc movl movsb pop jbe (bad) (bad) (bad) stos stc sahf test cmc test rex.R lock and shll outsl movsb mov sti or push (bad) or loop je mov pushfq sbb cmp (bad) jno stc mov test mov jbe stos rex.X rolb sub (bad) (bad) insb lods push (bad) cld jg rex icebp scas pop rex.WRXB shrl pop (bad) jg and or ja xchg push movsb jnp mov fdivr test pushq outsb test cmpsl xor xor leaveq adc lods xchg (bad) (bad) js pavgb (bad) es lods rex.WB cmc lea mov jne in (bad) mov cmpl xchg adc cs mov pushfq callq jae xchg (bad) stos (bad) (bad) in jmp sub rex.WR scas mov push pop lods or test movslq (bad) jnp lods in push (bad) fmuls sub pop outsb mov add cmp (bad) lods sub jo pop pop stos fwait jrcxz icebp (bad) mov int jnp jbe lods movabs (bad) cltd adc and pop fldenv movsb shlb sbb sbb cmp pop pop cltd rex.B clc (bad) scas (bad) lods push (bad) adc movslq jne mov enterq adc std out sbb sbb and sub fldl lods sarl data16 (bad) sti lods pop and (bad) jmp sahf je cmp rex.WR fadd pushq mov mov adc mov add cs jae mov in pushfq mov shlb cmpsb js movsb ja add add test push movsb add popfq add xchg jp pop cmpsl repnz cmpsb fcompl mov rclb (bad) in cld sub stos leaveq (bad) movsl pop rorl fsubr scas cmp (bad) jl int3 leaveq (bad) rcr jrcxz add jge mov jb ja mov repz and rex.RXB fsts mov sub cmp movslq sahf jbe rex.WR movabs insl (bad) add repz cmpsl xchg std ss lods mov sahf lods callq je cmp add cmp (bad) push int add sahf mov or movabs xor shrb push movslq insb fcoms lods movabs xor jno xor insb xchg (bad) and xchg jne sub pop adc in in xchg rex.WRXB lock jp fimul test lods and and pushfq jnp fisubrl or nop lods (bad) imul js rex.WRX mov jnp fcoml rex.X fcoml add or (bad) in mov retq xchg (bad) rex.W pop mov test (bad) lods rex.WB (bad) sbb and scas jg mov pushq push cmp je sub test lea mov outsb or rex.RXB (bad) jge xchg pop idivl jae movabs movsl mov xchg rex.RX imul jae or sbb jmpq cmc lods (bad) movsl shrb mov cmpsl jbe fwait lods sub mov jne lods pop lods (bad) rorl scas sub mov add fldt imul xchg hlt retq and jl lods (bad) rex.WR (bad) mov push nop orl sub (bad) cld repnz out (bad) sbb iret jbe mov scas jae and (bad) pop test scas sub adc mov lods (bad) (bad) cli xor cs xchg rex.R lods sti stc out (bad) or lods jno xchg shrb (bad) lcall (bad) ja scas adc std mov mov (bad) enterq pop add fld xor rex.WRB mov mov fsubrs (bad) lods rex.RB jle sub jg stos (bad) (bad) out xor rex.WR es lods leaveq or mov in jbe clc cmp out movabs sub jns (bad) scas mov xor (bad) or (bad) mov mov js lods and stc and lahf cltd push (bad) rex.RB in sbb movabs mov (bad) movsb rex.WR rcrl ficomp test mov cmpsl jo (bad) retq pushfq cs and add insb fsts lods sbb mov adc jns (bad) rex.XB mov loopne push lods rclb sub sbb or sbb add movabs sbb jae adc xor loope (bad) loopne or cmpsb test jne sbb (bad) and mov clc lods or mov mov (bad) pop subl (bad) mov imul mov (bad) sarb sub cmpsb cmp mov lods jb loopne cmp xchg and and mov scas movsb xchg rex.WR xchg pop add sub add xchg (bad) sub (bad) jrcxz or jb push jle lods je rex.RB (bad) pushq cmp (bad) xor xlat lods jns scas test cmp mov xchg cmp movsb xchg stos lret and sub (bad) movslq in sbb jle cmp ds js xchg (bad) (bad) (bad) lods test mov lods push sub mov lahf mov push add lods mov jbe add fisubr ja add fadds (bad) lea adc mov adc cmc (bad) js lods repnz mov shrl mov movabs popfq mov scas enterq outsb and iret lods stc lret add retq mov loope sub mov (bad) divb add test int rex.WR adc addl (bad) lods int repnz mov frstor movabs movsb cmpsb adc cmc sbb (bad) lods mov std cmp (bad) xor punpckhbw sbb mov and cmp loopne lea jb fistp mov mov lods xor mov insb pop pop xchg mov pop scas sti test (bad) fcoml lods in or ja mov rex.WR rex.WRX jge lods outsl jne movabs or adc rorb sub addl lods jmp movsl sub out and sub rex.WRX (bad) cmp fmuls (bad) push rex.XB movsl lods rex.RB mov popfq stos cmpsl push mov in sahf (bad) add insl in loopne sub cld mov loope cmpb lods test cld repz enterq movabs adc sbb imul lods js xchg jns xor add push sub (bad) and mov mov mov es lods jo out (bad) movsb jb,pt pushq xchg repnz pop shl cmp imul add mov outsb cltd imul pop retq rep stos xlat data16 retq (bad) jge in scas jbe sub adc xor cmp sbb out pop (bad) (bad) icebp xchg xchg jmp fsubs lods xor rex.RX add lods mov mov mov cmpsb mov add cmp iret lods sbb pop or lods mov std xor seta repnz retq mov loope rex.R mov pushfq cmp sahf jmpq clc mov movabs xchg pushq mov test push (bad) stos sub ja movabs rex.RX outsl rex.WRXB cs mov cmpsb lods movsl rcrb rex.B lret xchg enterq push (bad) scas ficompl (bad) (bad) adc adc (bad) mov rorb mov and jae xchg adc xor (bad) test xor sahf jb add lods cmp mov push adc push lret lods (bad) sub jle mov or iret insb mov rex.RX fwait mov fisttpl ror jle lods sbb or mov push push adc lods push fwait not push (bad) jns lods mov or sbb fs rcrl (bad) lods (bad) jp push js rex.WRXB rex.RX movabs (bad) lods jne mov (bad) rcrl incl in iret xlat cmp push sub cmp lods popfq test insb rex.X leaveq rex.WRB rex.XB sar (bad) mov sub sub (bad) mov out scas repz lahf out or (bad) lret (bad) lods rex.RB es jg lock pmulhuw scas out decb rex.WB mov xchg push movslq movabs cmp xor (bad) int3 and gs sbb movabs and test xchg and (bad) pop mov jno adc (bad) mov rolb sbb icebp adc cld lods adc je scas or fsubr lods add fist rex.X jg cmpb mov add mov add (bad) test leaveq (bad) xchg stos cmp loope or movsb movabs (bad) insb callq (bad) and adc xchg (bad) sti or mov stos orb pop fistp sub pop ss or stos cmp (bad) xchg pop ljmp fsub in movabs sub mov roll (bad) movabs mov and test cld stos lods nop int jbe rex.X (bad) movabs rex.WRB xor repnz sbb and rex.B cs rex.XB stc lods (bad) xchg gs pushq (bad) mov test cmp stos mov in mov std shrb xlat jl mov scas or sub rex.WRX (bad) (bad) movabs xor lods clc jl lret cwtl jg jnp lods rcll stos std (bad) mov mov (bad) or sbb pand lahf mov (bad) and cld movabs pextrw jns lods jmpq sahf callq iret and mov adc stos sbb test rex.R (bad) subl mov out imul mov rex.WRB pop insb hlt mov and rex.WX rex.WB xlat movabs and lods push repnz retq or sbbb sbb xchg orl fsubrl or movsb stos pop in jno pushfq lods jge rcr jae nop fwait rex.R scas stc rex.R negl in add ljmp rex.R (bad) cwtl mov adc sbb je xchg mov lahf (bad) movabs (bad) sarl in mov sub mov (bad) (bad) or pushq xchg add scas rorb scas imul int3 fimul orl lods shlb adc loopne shrb sub cmp (bad) pushq movabs mov lods nop xchg std jae mov xchg and pushq mov xor sbb insb xor cmp and cmp insl cld stc jo stos rex.RB test (bad) jae mov mov xchg retq pop subl mov (bad) ja add pop (bad) lods movabs sub repz jl adc xor xchg or xchg repz ja (bad) jmpq std shlb movabs or pushq fsubrl rex.R lods lea fsubl push clc movsb rex.WRX add retq mov add lods xchg and sbb push (bad) mov sbb sahf lock (bad) mov test adc paddsb mov shlb mov ja rex.W xor loopne sub nop (bad) enterq sahf pop or in rex.W jne jns rex.XB fs sub shr rex.W cmpsl rex.WRX (bad) shll rex.RXB lods (bad) (bad) sbb mov scas out decl add (bad) mov or lods rol xchg (bad) xor jge lods (bad) and xchg push jmpq scas mov test shrl mov stc mov (bad) push rex.XB xor (bad) cli or adc fwait cltd jno lods enterq sbb movabs mov lods sti loop lods rex.RB rex.WB mov xchg insb test (bad) push sub movq cwtl lods (bad) adc mov rex.R movsb ds xor (bad) mov push (bad) imul or adc push loopne nop hlt fldenv (bad) cmp jnp xor xchg scas mov (bad) push jo rex.B sub in es rcrb in push jno (bad) out cmp (bad) cld mov push sti sub in cmpsl (bad) mov mov mov or push pop lods xchg andb sub rex.B (bad) xchg (bad) (bad) retq scas stos ds pop retq (bad) insb (bad) outsl out cmp (bad) rex.WR rex.W rclb in vmovupd (bad) repz rex.RX jp xor pop std rex.B rex.WXB (bad) mov mov xor xchg push sbbb push leaveq rcll and sbb mov loopne push mov (bad) pop test test std mov out rex.RB mov sbb gs movsb iret cmp scas popfq rex.WRX outsb mov scas rcll sub sbb in (bad) out sub outsb iret movabs jmp (bad) (bad) and testb cmp lret test scas sti jmp scas incl adc sub testl (bad) lods rex sbb repnz sbb lods (bad) cli rex.WX (bad) (bad) mov and jl gs lods and je ss enterq push fucom xchg xor pop (bad) pop or cmc (bad) loop test push in cmc outsl stos rex.WR movslq rex.WB lods rol rex.RXB or xchg fmull xchg mov adc int rex.WXB pop mov (bad) jmpq hlt or add (bad) (bad) sbb sub mov adcb lods (bad) jrcxz (bad) (bad) pushq xchg movabs mov mov pushq lods data16 faddl jb ds retq adc ficompl sbb xor jae std popfq int3 test jns mov shl pop sbb mov sbb lahf mov out lahf and jne lods (bad) xor insb out outsl adc repz lea data16 and rex.WR (bad) pop mov ja rex.R lock or movl stos jb out xchg and rex.RB (bad) mov or xchg movabs (bad) adc sbb imul clc sbb lret movabs lods xor scas cmp jne out icebp fs (bad) push adc (bad) lods add push adc scas stos jl fistp push lods icebp cmp popfq scas xchg es lods sub (bad) and jnp lods pop xor fwait addr32 pop imul (bad) (bad) pushfq (bad) adc insb cwtl jnp scas out rex.X or js es movabs stos loope (bad) mov (bad) pop lret mov jno lods cli (bad) fnsave test rcrb in lret clc rex.WRXB rex.WRB sbb (bad) lock movabs decb addr32 jo push sbb shr sahf lock sbbl sti push shrb out mov lods mov push cs jp repz sarb lods xchg and subl movsl cmpsb push (bad) cmp sbb retq (bad) adc dec xchg mov and (bad) (bad) loope xchg rex.WR jo (bad) sbb in xchg jle cltd (bad) sub sbb add mov test pushq xchg lods mov loopne xchg rex jmpq mov xchg mov or mov leaveq scas and (bad) ds add push fwait insl sarb mov push (bad) rex.WXB je xlat mov shrl gs sub loopne cmp cli shrl out jp lods stos enterq out adc mov cmp scas add out or lods xchg movsb shlb sarb out rex.WXB cmpsb jnp fldl mov fsts sti xchg test or jl movabs (bad) fadd idiv lods subb lods out mov lea sub or cmpsl cmpsb xor fwait addr32 int3 rex.RX mov and lods enterq mov (bad) ds std lods pop or cmp loop pop test movabs pop rcrb (bad) mov lret jnp movsb movsb mov stos rcr (bad) mulb retq mov scas cmpsb sub (bad) cmp movabs out movslq data16 add (bad) mov jle scas scas adc xor (bad) test cld lods cli fnstenv in and add add add test push bswap testl rex.XB jp add rex.X insb or fwait retq add (bad) movsb repnz add (bad) stos lock (bad) mov movsb adc rex.R jne testb xchg andl jmpq movsb movslq cmp (bad) (bad) imul cmc mov hlt sbb in add (bad) fsubl and jb movsb adc (bad) mov jp movabs mov nop (bad) pop and cmpsl jmp and gs pop (bad) lods rex.WRX sub data16 (bad) push movsb test cmpsl lods fmul out (bad) cmp pop rex.WRX cmp (bad) xor sbb mov rex.WRX fnsave xchg xor mov iret lahf mov shr callq push mov xchg outsl movslq rex.RX jmpq mov cmp or test cmp std jbe pushfq push sahf sti lods rex.WRXB fs adc out lock or jne xlat test mov lret test (bad) pop mov jno fisubrl callq adc in mov sbb (bad) pop jo clc (bad) pushq lods (bad) and cltd adc mov sub ja push mov adc retq sbb xor insl mov iret push mov or mov sub (bad) movsb (bad) mov (bad) lods pop enterq cmp sahf and lods test xor movabs rex.WX mov mov data16 xchg test jl mov fnstsw or repnz mov (bad) jo pop jnp insb adc jae sar cli (bad) mov (bad) sub leaveq std outsb and out insl (bad) (bad) adc sub stos (bad) push push stos data16 mov rex.B imulb pop sub movabs xchg cltd movabs imul rex.RXB lods loop mov scas cmp and sbb in movzbl push rex.RB and movslq addr32 clc add (bad) (bad) sub test subl adc and (bad) jg xor sti rcrl lods out repz jle rex.RX pop lods addr32 jo flds nop pushq push rex.WR or stc sub insl add jl jno sbb in sbb mov retq (bad) notl rex.WRB rex.RXB int3 imul sbb sub (bad) rex.WRXB add faddp adc push rex.X (bad) mov pop in cmp push test subb rex.WRXB je ds mov and cli add mov push adc mov movabs cmp (bad) cwtl fcomps add movabs xchg (bad) lods xor retq and roll cmp retq xlat xor fldt addl fsubrl ja sub cmp mov lods callq (bad) adc mov or sub andb push lods xor callq mov cmpxchg add lods pop rcrl in cmp adc or iret jns adc lahf adc sub pop push cmp pushq rex.WRB leaveq cmc rex.WR pop mov sub retq lods lea rex.WRX or out and (bad) adc lods pop rclb and sbb (bad) (bad) cwtl mov fcomip rex.WX xchg (bad) mov loop or sub and movslq adc retq jb mov cmp pushq add push pushfq push rex.WR popfq mov pop (bad) (bad) xor rex.RXB scas push movabs scas (bad) push rex.RX lods sub in mov sub stos insb (bad) mov sbb (bad) or xchg stos ja loop movabs stc jo xchg stos mov rcrb push repz mov js cs lods test (bad) jle lahf pushq loopne jnp test shll in xchg shrl out xchg mov rex.XB add rex.WR pop (bad) jrcxz (bad) jbe xor mov orl stos cltd shrb retq jle cmp mov xor and retq test mov shrb stos mov add lods mov repnz test imul loope imul cli cmp movsb cmp xor test xor jmp add outsl (bad) xchg (bad) int3 mov mov cld bnd enterq or or (bad) sbb je sub add push mov lods mov add iret cmpsb hlt lods fisubrl adc lods movslq xor scas icebp or cltd out callq fwait or sti rex.WR jmpq out lods dec jge sub rcrb ja lods or rex.WX movabs fnstsw adc lods lret (bad) in rex.WR rex.WXB lods push rex.WX pushq fidivr loope out mov add retq add lret xor rex.WB (bad) and adc retq scas cmpsl movsb (bad) cltd fistpll stos mov movslq push psrlq stos mov int3 rex.WX in repnz loope retq insl add xor mov (bad) lods test (bad) jne mov sub leaveq jbe scas (bad) sbb fwait push (bad) sub rex.XB repz (bad) and pushq rex.B xchg adc add stc pop (bad) fcmovb xlat push rex.RXB pushq (bad) hlt lods jae xchg pop add jne lods int xchg mov test mov int3 jae je lret rex.XB fisubl test clc pop lods mov or xor insl jne jp test jnp cs mov out sbb jb mov cmp iret fwait pop lods sti rex.W sbb fidivrl sbb movslq fsubrl ja mov stos and movabs xor js test movsb stc jo (bad) data16 sbb rex.WXB and rex.XB test pop mov sub outsl mov rex.R lods rex.WB lock xchg lods scas xchg pushq int3 mov lods adc mov lods or mov cmp mov jg lods retq mov (bad) lods scas movabs sub sti enterq add mov sub or rex stc sub sbb mull (bad) movsb push mov loope rex.WB or cltd stos xor cld retq cmpl adc (bad) (bad) rex.WR (bad) es insl xchg addr32 mov scas mov imul xor in cwtl rex.WRB rex movabs out outsl xchg (bad) rex.WR scas sbb rex.X stos rex.WRXB insb mov jbe mov out (bad) jl imul sbb sub adc cmp mov int3 mov (bad) sub sub rex.RB mov jg lods and sbb adc (bad) or outsl push mov scas cltd rex.RXB rex.WRX xchg cli sub sub rorl mov xor mov jrcxz mul pop rex.WB repnz push fidiv lods (bad) cmp xor xchg jl stc mov or int3 test sub movsl lods fbstp decb cmp mov scas (bad) stos enterw (bad) and lock lods or add cmp std lods mov loopne loope decl rex.WXB mov rex.WR adc std decl mov (bad) sub lret push mov mov xchg out add push lods je pop xorb mov imull (bad) fist cli adc cmp rex.R cmp add andl (bad) lods rex.WR cli jl test mov mov movsl (bad) insl fdivs iret and loopne test cmp sahf fwait lret faddl lods loop jmpq pop lods pushfq rolb mov (bad) ffreep mov sub in jns jge lods in adc cmp (bad) (bad) sub (bad) pop int jne lods in gs movabs (bad) sub mov mov lods xchg mov (bad) ficom (bad) ss movsb mov iretw mov cmc sti stos adc addb jrcxz mov cmc mov leaveq outsl cs jmp (bad) lahf lods sahf sti add xchg movabs lods out xor adc rex.WR (bad) (bad) int jg (bad) lods mov (bad) mov lods out pop (bad) rex.WRXB rex.WR std fdivr xchg mov movabs xor mov or lods out sub sbb rex.RXB in lods mov in rcl sub lods xchg enterq (bad) pop sub push xor pushq rex.WRX jo rex insb (bad) sub push sbb rclb mov cld (bad) lock mov (bad) or (bad) lods int push fcoml retq movabs or lods (bad) and imul adc test shrl mov (bad) lods (bad) (bad) jmpq mov callq imul out lods loope jge and mov stc (bad) fcmovb enterq and adc pushq (bad) mov (bad) (bad) jp jl (bad) lods sbb sarl (bad) mov movabs js movabs idivb mov mov insl mov add xchg (bad) ds roll sub sub mov push xlat push ja loop and mov movabs sub ja loopne mov and add cmpsl sbb sbbl push sub test mov adc fistpl cld outsl xchg movsl (bad) jo repnz outsb cmpsb scas mov outsl popfq add jbe xor xchg mov sub (bad) sub sbb rex.W pop (bad) jo xor jle (bad) sbb (bad) in sti xor orl rex.WRX rex.WX (bad) rex.R lods mov callq lods (bad) test (bad) mull lods rex.WR (bad) (bad) leaveq sbb sub lret retq add imul outsb pop fcomip mov lods sub lahf jge shrl mov (bad) (bad) movabs xchg xorl (bad) push sub lods int pop cli scas icebp imul lods add sbb jle (bad) rex.R out cmp jrcxz jne (bad) pushq add lods movabs adc lods outsl (bad) rol (bad) mov xor xchg mov sti lods (bad) cmp or out fwait (bad) mov push scas callq (bad) jle fwait roll clc mov fstl mov cmp rex.WX mov retq addr32 adc rex.WR retq or adc cmp repz shr (bad) in xchg gs rex.RXB shll xchg retq rex.X jbe scas push rex.RB imul cs jp lods (bad) add mov test mov rex.WX test add stos mov mov sub xchg (bad) jl jbe shrl sbb lods push xor je lods rex.RB (bad) pushq (bad) mov mov rex.WB lods (bad) (bad) pop add push xchg sbb and movabs sub out paddd jl add js xchg mov (bad) lods (bad) enterq stc ror fbld imul xor movabs mov xchg clc add rex.XB adc fdivs or sbb (bad) (bad) repz js scas lahf rex.WB cmp (bad) and rex.WXB lods ja mov (bad) (bad) lods jns pop (bad) data16 pop (bad) (bad) ja cwtl lods iret movabs (bad) or lods pop lahf mov mov retq cltd push and or lods cmp pop and push push fisttp pop sbb adc (bad) jno rex.XB (bad) (bad) rolb mulb (bad) jnp xor adc sbb (bad) icebp pop push add movabs clc in mov or in cmp (bad) push insb movsb int3 rex.WRB mov popfq sti mov repnz sbb jmp sarl (bad) cmpsb pop int3 andb lods rcrb movabs in loop lods sti and jrcxz xor pop lods add fcoml out out retq fs stos add and movsb popfq lods push popq outsb lods mov sub xor lret pop rex.X lret movabs scas mov and enterq imul adc push ja cld js movsb adc int repnz pop sbb (bad) lods rclb (bad) in out std (bad) es rex.R jbe lods xchg sbb scas mov loop (bad) xor scas adc (bad) mov (bad) (bad) insl sbb cmc xor and xchg and sbb repz fcmovnu movabs negb (bad) (bad) sub cmp jmp adc lods and xor push jne sbb lods ficomp mov mov sub ljmp lock pop scas mov sbb addr32 movslq movabs sbb mov xchg (bad) vsqrtsd push (bad) jo lods test mov stos (bad) outsb or add sahf lods jl jne (bad) pushfq lods sti movabs (bad) (bad) xlat jp lods sti rcrb cmp xchg scas iret mov xor mov lods std in push int mov lods pop jo (bad) jmpq (bad) scas pop or or out and test movsb fs rex.WRB pop cmpsl lods (bad) sub sub pop or in sbbl clc movabs or mov test mov sub mov fwait sbb sbbl rex.X lods jl fs sub lea (bad) leaveq outsb scas pop sub jne lods pushfq mov clc (bad) stos movabs mov scas mov jle lods ss rex.RX (bad) rex.RB fwait add add shrb in lods mov mov rol jrcxz rex.R rex cs mov (bad) rcrl movsb xchg scas sbb add lahf mov rex.RX rex.WR test mov sub lods jb jle jae add fstps jp cmp or cld lods out add (bad) cmpsb hlt lods (bad) iret in (bad) rcl lods jg rex.X insl push loopne jmp cmp lret int fwait je subb lods outsl (bad) (bad) sub pop rex.RB rex.WRX or pop sbb xor sahf repnz clc sbb lods mov mov (bad) enterq xor movabs decb xor jl jmpq sub pop leaveq add xchg lods mov rex.WXB xchg test lods or sub pop lods mov sbb xor loope pop es (bad) movsl lods jbe mov insb fwait adc xchg (bad) pop fcmovne int3 mov cld js (bad) ss lret fs cwtl mov shr addr32 movsb data16 pop or and stos leaveq out sub rex.WR mov test jbe imul (bad) js and icebp (bad) (bad) pop (bad) (bad) in jge xchg sbb imul rex.WB push xchg add sbb jae (bad) fidivrl mov movsl xor rex.WRB data16 repnz (bad) (bad) jnp (bad) add test (bad) loopne movabs mov in sti retq rex.XB mov shr (bad) stos and in imul rex.WXB enterq retq xlat add (bad) imul or mov addl xchg (bad) ja cwtl loope mov rorl pop adc lods iret in test shrl xchg mov jno int and jl jle iret pushfq cmpsb add in rex.R hlt rex.WRXB jl outsl mov callq mull notb lret test sub out push xor in popfq testb pop add (bad) pushq xor lods retq (bad) cmp fsubrl lods and std push cmp lods scas jl jmpq nop pop xchg lods sbb flds (bad) pop (bad) (bad) lods (bad) sub out add cmpsw lods test adc lods rex.WRX jbe rex.RX es insl retq cltd (bad) fisubrl fnstsw shrb lods mov lret pop push jmp fcompl jbe pushq cmp shrl movsl test mov rex adc lods mov out or stos cmc rex.WX enterq lods jno callq sub (bad) add xor add cmpsl and cli sub add rcrb add rorb iret rcll lods jo cltd int3 rex.RB and lcall push sub movabs mov lods rex.WRX push ss pop test (bad) pop cmp clc (bad) mov rex.WXB cs jmpq (bad) es jo jne jbe clc movslq test lods cmp (bad) rex.WR rex (bad) loop (bad) cmp jae lods pop (bad) xchg xor mov (bad) leaveq movabs js lods movabs mov sub cltd (bad) stos lods jl rex.RX mov insb adc out jo (bad) pop mov (bad) in sbb add pushq (bad) xchg push (bad) mov callq je cmp subl adc jp sub xor scas (bad) in jmp adc mov xchg add (bad) sbb mov rex.XB lea cmp cmpsl out (bad) lods (bad) iret xor fstpt lods push int cli xchg pushfq jno lods outsb pop sbb pop cmc mov (bad) insl leaveq jge lods movabs adc stos mov (bad) repnz sub lret outsl cmc jrcxz sub rex.WR out cmp (bad) in sub xchg repnz and lods lahf or (bad) clc pop adc repz (bad) add pop (bad) clc pop in outsl (bad) or movabs mov add stc sub in xor xlat test out xchg scas mov and pushq fldcw and in sub rolb lods xchg or movslq lods sbb test mov (bad) movabs mov lods or or rex.WRXB jbe scas imul callq rex.RXB (bad) mov (bad) (bad) lods adc push (bad) pop push sbb rex.WX jmpq pop or rex lods push or pop int test cmpsb lods nop scas add cmp mull pop adc mov xchg lods mov icebp rex.XB cltd rcll mov (bad) push jb xor lods rex.X jne rex.WRX jle stos pop push xor movabs insb lea xchg push cs mov shrb add outsl sarb rex.WRX jnp pop out xor add movabs mov clc lods callq test shrl shlb int3 mov leaveq add loopne mov add fwait xchg rex.B push mov mov pop or sbb (bad) sahf scas (bad) (bad) retq mov jbe jp loop lods cmp enterq mov loopne (bad) outsl popfq rolb cwtl (bad) retq pushfq (bad) out mov lods (bad) pop in jl xchg scas (bad) stc xchg sbb lods sub and lock pushfq push mov loope (bad) lods mov lods sbb lods int lock pop mov sbb mov (bad) xchg lods test cli sti rex.RXB ss mov (bad) data16 add mov fincstp orb adc jrcxz rex.R pop mov lods lret stos je cmp loopne or sbb lock jge stc test (bad) test xchg mov fisubl add (bad) int3 mov cmp hlt scas (bad) push stc sub in int3 xor xor cltd retq movabs in icebp sbb movabs jge rolb or mov data16 jnp hlt js jp fildl sahf jns or sub cmp rex.XB lods fisttpll push (bad) mov mov mov cs cmp mov nop jno add push stc rex.R shlb rex.R fwait movabs and movabs push mov mov jp lods in xchg (bad) mov fs enterq sbb nop lods cmp in hlt mov lods sbb cmc mov (bad) lods pop xchg cmpsl mov lods xchg es lods (bad) rex xor push jmp andb mov or and or or mov lods sub mov rex.R loope pushfq in sahf sub imul (bad) mov stos out add (bad) rex.R lods insb cmp mov stc rex.WX loope cmc in (bad) lods es pushq in xor (bad) int3 in js adc xor js,pn ja test xor scas cld xor jns movslq movabs mov xchg jb outsl js adc nop cmp test cmp rex.WRB jge or lods mov (bad) (bad) leaveq mov rex.B stos sti push movsb fs scas fwait (bad) shrl lods fdecstp (bad) mov lret pop fldl adc xor divl adc enterq rex.WRXB cs mov mov in mov mov (bad) mov (bad) lods mov xlat jmp jp add rex.WR hlt (bad) or mov cli add push test and jle adc cltd leaveq test callq push add jno or mov rolb or (bad) (bad) (bad) jns mov cmp cltd (bad) mov add in mov jrcxz out cli jmp rorb movabs mov sub (bad) or je ffree clc pop outsb insl (bad) jns jno in jbe push out xor (bad) (bad) insl jo loope movabs cltd nop (bad) (bad) sub loop mov and rex.WX scas sub rex.R fidivl stc mov jo outsb (bad) or cmpsb lods test (bad) cli rclb lods mov push movslq insb (bad) lods and in out or mov and movabs lret nop fwait rex.XB (bad) lods out adc sub (bad) lods in lret xchg outsl lods mov rex.RB rex.RXB lods mov mov lods xor lret shrl lods fs jp and js lods in and stos (bad) lahf (bad) rex.WX gs pop mov lock fsubrl lods (bad) repz (bad) (bad) add rex.WRXB or sub jb movabs clc or fimul (bad) push lods adc (bad) cmpsl jg jb mov xchg lods je fwait add xor outsl fcoml mov push adc lret sub cmp rex.WRB repnz or movabs (bad) mov test adc add int movabs (bad) pushq jmpq rex.XB or test stc in push mov mov and scas adc jns movabs in cli (bad) lods jmp repz test imul rex.RXB xchg or mov add mov adc and retq (bad) hlt sub nop adc (bad) (bad) (bad) lods pushq sbb adc cli jno lods repnz fdivl mov insb clc fnstenv movabs sbb mov rex.WXB push pushfq lods and cltd (bad) sub sbb (bad) fs lods pushq stc mov out rorl mov in (bad) adc jge fwait add in callq jp test sub rex.WXB rex.WX adc sbb or mov mov (bad) rex.RXB mov rcll fs rex.WRXB outsb push sub (bad) and jmpq or jne cwtl movslq fistpll stos in movsb sub xchg jg fiaddl add (bad) sub sub push fimull cli lret xor out iret mov mov outsl mov (bad) repz rex.WRXB leaveq push insl mov imul (bad) outsb xchg push jo and stc cmp enterq int3 leaveq (bad) rex or jmp movabs lods adc movsl in lods ds cli cmp cmp cmp movabs or pushq clc sbb scas mov or ror fwait insl rcll lret mov sub (bad) cld jne fisubr sbb outsb retq in lret sarb cmpsb lods jae add fisttp (bad) (bad) lods push pushfq imul lods fsubrl cltd jp xbeginq lret cmp sti sub hlt mov lock mov mov jl cmp test stos orl lods or out (bad) (bad) retq (bad) (bad) test sub je imul jo scas push sbb cmpsb jl (bad) nop fldt mov lods cmp and mov (bad) push loopne int lods cmc rex popfq mov (bad) mov cmp movabs jl lods pop sub xchg lods fs pop (bad) rol cmp stc (bad) out std rol add lods rorb clc add mov (bad) lods sbb lods sbb (bad) xor and xlat lret jb int3 (bad) cmp jnp pushfq and sbbl clc push mov xor out jl movabs lahf sbb jge out hlt sbb xchg scas jmpq and lret mov imul out push iret pop jl xchg lods rcr test pushfq icebp vaddss and adc sahf add (bad) in lea lods movabs (bad) mov (bad) (bad) out lods int3 jb movsb (bad) rex.R mov fs xchg js je push jl mov lods mov (bad) jbe lods lahf int3 stc (bad) adc fdivr lods movabs out pop adc sub add lods clc movabs pop cmp or lock add lods sub outsb add lods rex.RX add add out (bad) (bad) sub sti or ss lahf pop push js int3 (bad) jrcxz,pt andl jge fwait negb pop (bad) rex.WRX xchg mov bnd rex.RB es jmpq push (bad) sbb pop pushfq push jae js lods or jp xchg retq (bad) cwtl lods fnstsw add sub lods int in xchg cmp stc cmc subl retq (bad) rex.WX mov mov ja loopne jmpq lahf out mov (bad) (bad) and lods jne (bad) add (bad) clc outsb and rex.XB scas rex.WRB rol pop (bad) mov scas jnp mov jl cmp (bad) callq push (bad) xchg rex.B enterq lods rorb rorb stos rex.WXB shll subl mov mov cmpsl fs lahf mov xor and (bad) fidivr xorps cmpsl jb and loop rex.R nop test pop fldcw sub and (bad) jl (bad) mov adc cmp lods movslq in xchg (bad) rex.RB subl jnp leaveq or and and test in jns movsl stos repnz in rex.WRXB cmp add (bad) rex.B mov scas pushq faddl sti nop mov (bad) pop add in pop adc (bad) add and (bad) movabs mov (bad) in mov xor xchg subl (bad) lock pop (bad) jmp lods and sbb rex.X in (bad) xor mov (bad) jo sub fisubl xchg iret mov rex.WR rex.WXB (bad) or (bad) lods rex.R fwait mov cmp mov scas xchg pop fisttp loopne cmp cmp (bad) movabs rex insl adc adc insl rolb pop jb xor mov std rex.WR add ss imul ds xlat xor movslq movabs and fldt loop outsl push adc lret adc (bad) rex.WRB movabs mov cmp add outsl xchg lods pop xor (bad) and pop es or (bad) sub jmp rex.XB (bad) sub cmp adcb pop pop lods test or jrcxz pop xlat pop lods sti adc (bad) xchg push stos sub lods insl mov jne lods cmc add cmp (bad) xchg enterq outsl repz loopne jg add pop lods cmp clc xor mov (bad) or shrb (bad) (bad) lods xchg out push xor lods (bad) test cmp loopne (bad) lods mov push subl stos (bad) mov cli mov idivl xor mov cld (bad) insb lods leaveq out jmp out sbb mov (bad) std and sub imul scas push subl lret sub in jae push pop mov sahf imul jbe fs lods int3 es or movl sahf cmpsl sbb lods gs lods (bad) or test test lods adc cmp jmp or (bad) pop rex.RXB (bad) or push xchg movabs (bad) cli rex.WB data16 rex.WXB rcrb (bad) shrl lods cmc cwtl test loop sub jmp and sub sbb callq lods mov rex.RX adc sub orps nop test adc lods movslq push add push outsb (bad) lods std xchg adc xor rolb lahf sbb gs movabs imul pop lea lods (bad) lahf cmp fmulp pop add lcall lods rex.RB rex.WR (bad) out jp (bad) mov insl cmp mov decl (bad) xlat movabs movsb je (bad) mov or pop int3 xor sub push ss xor xchg callq add cmovs (bad) lret movslq repz (bad) movabs fisubr fistp lods ds (bad) and popfq hlt nop stos callq (bad) jl lods mov rex.RXB xor adc loope pop adc cwtl stc movabs sub rex.XB fdivrl in test scas (bad) rex.WRXB movsl lods pop repnz orl (bad) push (bad) mov adc rex.B or lods rex.XB xchg fmul shrb or jrcxz rex.WR adc repnz nop sahf xchg lret jnp (bad) int sub (bad) jge clc pushq mov rex.WX bnd scas (bad) jno mov int (bad) jb lods jo xchg xor decb mov lods jle add mov rex.WB movsb jno cbtw rex.WXB pop adc xorl xor rex.WR subl in rex.WX mov movabs lods movabs repz and jne or lods (bad) adc ljmp lods pxor stos mov mov adc rex.RB out jge rex.WRXB sti lods rex.WX (bad) add sarb mov mov fisub out lods rex.RB and cmpsl (bad) icebp mov stc sbb mov popfq sbb mov mov mov rex.WB jae scas sub lea sbb mov mov (bad) frstor lods repz test (bad) cmp jl mov mov icebp insl fnstcw lods (bad) div mov xchg mov mov loope (bad) in insb pop or (bad) scas and sub lods clc jne xor or fsubrl insb jnp add lods xchg ja stos xchg mov rex.WRXB cld bswap icebp rex.WRX xlat cmp mov mov es or retq (bad) mov xor adc adc stos test data16 sub insl add mov fnsave jl lods mov rex.R in es adc jne push cmp scas in or rex (bad) sub cwtl mov rex.X (bad) out test jmp adc test jbe stos and (bad) mov push sbb xlat rex.R lods movsb int sub push mov scas pop sbb mov xor (bad) in out mov scas add add (bad) rex.WXB (bad) sub adc xchg int3 fisubrl or (bad) or push nop out movabs lods (bad) cld (bad) mov xlat mov out std imul imul int3 (bad) loopne add shrl in xor (bad) rex.W and outsl mov movsb movabs callq pop xchg scas lods or push vcvtps2pd jbe jne jge sbbl push (bad) (bad) (bad) js lods or xor rex add enterq out scas mov lods jmpq sarb in sbb in std jo shrl (bad) hlt lods rex.RXB (bad) (bad) pop adc sbb insl xlat (bad) (bad) mov adcb mov lahf mov andl stos jo sub in (bad) lods jmpq pushq jae pop (bad) add adc movabs scas mov (bad) sub fsubrs lret lods add jge (bad) rcrl lods retq leaveq and roll movabs or movabs (bad) or adc movabs shrd out sbb mov mov fadd or movabs or scas sti or mov insb (bad) xor push rex.RB xchg or jmp rex.X xor or (bad) cmp (bad) mov add stos imul push out jno add lods rex.W pop sbb (bad) lock mov (bad) rolb cmp test (bad) sbb mov lret and fildll sub movsb ja adc movabs jo roll je add adc pushq lods xchg pop xchg xchg scas add stos lods pop rex.WXB rex.WRX pop orb xor outsl (bad) lods mov retq pushfq pop rex.X sub add (bad) mov adc lods stc (bad) movsb mov cmc cmp fmull sbb (bad) mov stc imul sbb test movabs in (bad) fcmovb scas rex.R rex.WX (bad) xchg rex cs clc cmpsl sub int3 sub rex.XB rex.WRXB stos nop mov shrb jbe cmp and movslq lret cli xor add insb rex.RB rex.WXB test jmpq imul outsb (bad) lods xchg mov sbb cli (bad) (bad) lods es xlat sub retq nop (bad) mov (bad) adc ror sub (bad) mov lret cli jle mov cmp cmp jo in mov movsb (bad) mov rex.WRB scas int3 sbb add insl loope insb lods add retq (bad) sub cmp mov movsb or rex.WRXB add lods lea clc mov out fldcw xchg push and cmp mov retq fcoml gs lods jbe jb (bad) push loop mov adc (bad) mov (bad) cmp stc adc push test test movabs cmpsb sti rex.WRX rex (bad) scas out roll in push (bad) (bad) lods xchg lods scas nop pop (bad) jns ja test je (bad) lret (bad) retq rex.R jge fwait (bad) xor jg in mov sub fsubp add mov jp add shrl or in mov repz add cwtl rex.WR nop (bad) and insb lret mov cltd lods mov mov (bad) mov pushfq and fmuls (bad) js jrcxz jbe enterq (bad) callq stos rex.W xchg lods sub xchg xchg movabs and (bad) in icebp hlt movhps pushq mov mov pushfq (bad) callq add (bad) fbld sbb scas movsl icebp (bad) adc sub movsb xor scas lret (bad) repnz cld (bad) adc lods sbb subl pop lods xor or (bad) fwait sbb fsubrs xchg movabs in push mov sub data16 enterq sub ja jge (bad) adc (bad) push (bad) stc lods rex.WRB xor scas stos je add cli in push mov movabs lods movsl xchg add clc lods rcrb and mov pop lods int3 xchg rcrl imulb (bad) movsl lret and jg rex.WXB jle cld test adc rex.WR rex.WXB mov xchg hlt xchg lock mov movabs add push xchg lods movabs lods mov loop add lods shrb sub sub push lret lods imul push mov add pop sub push rex.RXB or lock lods enterq mov lahf movabs sahf pmulhuw movabs (bad) addb fcomp lods rex.WRXB add lcall imul lahf sub sub mov lods mov mov (bad) out push cmp scas nop jns (bad) jne push adc stc stos (bad) xchg rcll mov movabs cmp adc callq js or fadds (bad) and movsb xchg rex frndint movabs (bad) rex.WX rex.R jnp rex.WRB scas xchg test in push iret mov add out (bad) sti jne imul lods (bad) rex.XB jno xorb (bad) rex.WR mov std test cmp mov mov incb gs nop (bad) lods insb jg mov (bad) lret xor pop mov jns add stc fsubr (bad) pop clc and lods in sahf imul push rex.RX vpunpckldq lods xor gs rex.WRXB or jns adc test insl mov or pop xor int3 xchg cld enterq lods movabs in xor or and in stos loopne stos (bad) mov and rex.B rex.R mov adc push and fldt (bad) adc xchg adc or stos jae or fsub mov mov sub fildll rex.W cwtl mov jae add mov (bad) retq mov jb jbe outsl popfq adc rex.XB add movabs lret movsl jge lods verr mov rex.WXB mov cli (bad) scas adc pop xor (bad) movabs mov (bad) sub lahf lods mov sarb (bad) (bad) insl movabs mov int (bad) mov sarb enterq mov sub jno and rcrl cs out (bad) (bad) adc (bad) mov int3 (bad) rex.WRX stc in xor add mov loop cmp push pop clc and sub rex.RB mov scas mull push (bad) cmc in andb sub ss mov (bad) lods rex.WB push sub and mov jno pop lret xchg rex.RX lods loopne or (bad) movabs insb cmpsb xor lods rcrl fwait rex.B add lods repnz mov imul mov in (bad) leaveq stos lret (bad) fistp imul rex.WRXB test sbb pushq adc xchg lods adc (bad) mov adc pop sub xchg xor jne mov push (bad) jg lret mov pop jmp rex.X out rex.WRXB lock (bad) mov (bad) loop (bad) out shrl in xchg jae push jnp (bad) (bad) xor je (bad) test mov pop test (bad) fldt rex lods lret movabs mov lods in (bad) xor lods stos (bad) fwait outsl imul lods (bad) fdivrl in cmp addr32 push pop mov int adc cmp jns mov int add adc fdivrl scas out mov (bad) test mov or repnz movabs mov lods mov and jrcxz (bad) scas add in pop sub rex.X outsb cmp movsb rex.WRXB movsl in in mov and test movslq pop add push cmp xchg rex.XB cmpl or movabs sub cmp jb jno fildll rex.W hlt mov mov mov stc mov cld out enterq mov insb in leaveq pavgw clc lods push faddl test push push fucom push lods cmp pushq (bad) stos scas in or xchg jl or jmpq data16 (bad) insb mov enterq rex.RB jno lods in outsl xchg mov mov in lods rcll and (bad) xchg out fadds mov repnz jno xor rex.WXB testl lods cmp xchg insl add sub cmpb jrcxz retq cmpsl movabs sbb scas adc fwait sbb js imul movabs cmp std lods add (bad) movsl lods cmc sarl sbb cmpsb pop (bad) jns adc mov pop mov rex.W (bad) rex.X lods mov fsubrs xchg xchg out lods pop test (bad) cmp notl lods or (bad) sub (bad) sti lods rcll adc loop mov pop scas adc icebp mov hlt in (bad) cmp movabs fwait xlat xchg clc in enterq mov xchg leaveq movabs addr32 rex.WRB hlt stos rex.WRXB enterq scas out ror andl rex.B mov (bad) pushfq std rex.X add xchg retq movabs lods mov callq movabs rex.WX pop xchg in mov (bad) pop insb mov sub push fistl jg (bad) cmpsl test in jns orb lods mov xchg and cmp sti lods and jle lods rex.WRB cmp repz and test (bad) (bad) sub add outsl rolb (bad) (bad) sub lahf xlat xor xchg jns mov mov jg imul lods xchg xor icebp in shrl int3 or mov imul and fidiv addb (bad) scas jb sarb mov scas (bad) rex.WRXB leaveq xor int3 sub mov cltd and lods js imul adc lods mov and mov xor jno add scas adc rcrl rex.WB ds adc scas icebp and lock mov rex.W lods retq in xchg mov sbb adc (bad) jb movabs sarl fild (bad) movsl mov jo push (bad) lods sbb rex.WRX adc sbb (bad) es stos lods (bad) add jle mov mov push add sub (bad) imulb sub and jns mov xchg sub mov movsl and rex.WX movabs ffreep out lods push in lock mov shlb (bad) mov adc repnz push rex.XB lea lods je retq (bad) or stos xchg jno rex.WB mov fmuls std sbb xchg lods in cmpsb and (bad) sbb leaveq stos adc or push (bad) jrcxz jle pop ss (bad) in lods (bad) (bad) rex jge adc ss mov add movslq xor lods xlat jne mov mov cmp (bad) sub hlt gs test cmpsl (bad) add lods (bad) rex jne jb or sub and jg (bad) jl xchg sahf imul xor (bad) add sub add (bad) loopne lods outsl jle rex.WRXB cmc mov movslq add and rcll mov jl,pn jae xchg lods jns (bad) (bad) (bad) jne lods mov push mov pushfq rolb lret or movsb cmp int popfq (bad) xchg push sub std lods jrcxz mov push movabs out lods loope rex.WRB movsl (bad) ss rex.XB rex.R lods icebp add jrcxz cmovb mov push (bad) lods adc lods cmpsl adc es insb rex.WX lods pop adcl adcl stc adc pushq lods in out stos ja (bad) mov (bad) mov sub (bad) xor or (bad) (bad) sarb nop sub jge mov loope stos (bad) fwait lods mov jmpq andb test mov in or lods out gs retq (bad) movabs push movabs xchg pop lods popq (bad) sbb sub stos xchg mov rex.WXB shrl rex.B stc loopne jg incb mov and sahf in mov jle lods (bad) int or movsl stos lods and xor mov xor (bad) add out jo lods iret jge push and jl pop lods mov sub pop mov or loopne sti rex.RB rex.WR xchg (bad) in enterq shrb fld rex.WX movabs outsb (bad) rex.WRB (bad) lods stc mov mov push lods movabs sbb movsl pop test sti sbb sub rex.RXB rex.W roll in xor stos and rex.WRB lods movabs cmp sub jrcxz mov lods in imul mov xor cmp (bad) (bad) mov in add lods (bad) jg rex.WRXB and (bad) rex.WR rex.RXB (bad) addr32 xorl out lods sbb lods fs (bad) and rex.R rex.B out outsl (bad) je push (bad) mov (bad) movabs scas sub loop or mov xchg sahf cmpsl lret rex.WRX lock out (bad) stos sub (bad) (bad) pop (bad) lods xor nop in iret and movabs rex.WX cs sub clc roll lods out movabs clc or sbb insl test popfq rex.X lods jg pop mov cwtl sub sbbl sub sbb (bad) loopne rex.WB jne xor stc xchg or mov cmpl rex.WX pushfq pop std xor lods out xchg mov sbb mov and cmp fidiv sub xchg stos mov imul and clc rex.RB mov rex.WXB js rex.WR repz push insb (bad) addl iret cltd scas fidiv xchg outsb repnz sti and out movabs in imulb ss in gs test lods mov outsb cld push xchg and (bad) adc lods xchg enterq pop cmp rex.XB lods rex cmpsl sbb movslq mov (bad) rex.WRB pushq (bad) cmpsb in outsl fsubrp push and and retq in mov mov int3 (bad) imul scas pop cmp ja or add test mov test mov (bad) (bad) mov (bad) lods adc xchg clc or jo clc lods cmp add sbb std (bad) cmp fs ja fdivl mov mov outsl lods xchg add xchg push (bad) es and lods fiadd jns mov sbb movabs sub lea sbb lods (bad) or add lods fildl int lods (bad) out pop jg pop push sub rex.XB sub loopne mov (bad) gs cmpsl mov callq stos rex.X mov scas sti mov jns cmpsl hlt sbb imul pop rex mov pushq xchg sub movabs stos mov add add mov (bad) sbb add scas push je in mov pop rex.RX sub lea lods jrcxz push (bad) jmp or (bad) sbb outsl or cli (bad) movb (bad) xchg repz xor (bad) pop adc rorl imul movabs movabs (bad) data16 (bad) scas jo (bad) insb and stos xchg jmpq (bad) int fldl movabs mov jle callq movsb mov out retq adc movabs xlat xor add lret xchg or fmuls outsl adc mov mov sti hlt sub scas int std (bad) outsb pushq rex.WRX (bad) mov int3 rex.RXB in lea (bad) mov xchg cs int3 fisubl pushq jrcxz pop scas and cmp mov imul cmpsb leaveq lods int cmp (bad) jrcxz movabs add callq mov cmp xor and (bad) pop ja rex.W test cmp push scas sub xlat scas movabs xchg sti js and pushq (bad) xchg in gs lods (bad) mov pop xchg retq mov scas cmp (bad) push hlt mov xrelease (bad) xor cmp mov (bad) stos jge (bad) idivb (bad) insl (bad) sub movl lods pop cli in fimul pmulhw ja mov stc jne mov test scas sbb mov jno mov push lods test (bad) cmp rex.WRX rex.RXB rex.RB add fcomip sbb lret imull xor xor lods pop mov scas (bad) sub ja sbb movabs mov and or icebp rex.WR pop mov or xor mov (bad) mov sub jge rex.WR (bad) rex.WR rclb mov icebp rex.WRX jo insb repz mov in (bad) scas movabs icebp cli jmpq add or (bad) (bad) rex.WRX xor test sti push repz jge mov hlt in or sub mov sbb shrb jp jmpq mov out cmp push (bad) loope ja (bad) cli pop xor gs ja stos jrcxz (bad) (bad) retq lods movabs xchg outsb jb sbb xchg add add stos (bad) jbe xchg pushq or (bad) push insl lods incb sbb add imul fildll (bad) test (bad) lods xor scas push in lods fdivp (bad) fsubs pop pushq lods jp jns cmpsl jmpq mov (bad) loop jne sub jno mov test xor ja lods adc out and add test and lods andl sbb mov lods rol jg (bad) and lods cmp push test or scas imul in cmp jg or mov lods mov push xchg (bad) lods int3 jae (bad) movsb sub jns (bad) insb insl hlt lods mov adc mov and lods fdivrp or lods push jl (bad) in cmp imulb jge cld (bad) sub ja jns xchg lods (bad) mov mov retq rex.WXB sbb mov (bad) sub push push lahf mov (bad) mov pop insb mov mov pop movsb (bad) insb icebp fisub pushq add mov mov cmc sub rex.WR mov xchg out push lods add cmp sbb rex and and in mov fnstenv lods negb mov lods cmpl stos fld insl add xlat iret lods shrl movslq lods xor sub lods add movsl adcl (bad) cli (bad) lods cli popfq (bad) jns xlat rclb adc callq add sbb push mov adc int3 mov flds inc lods xlat out pop stos repnz (bad) sbb shrb sbb scas sbb lea mov (bad) stos mov pop jle cmp shrb push imul (bad) lods int xchg and mov jae cli movabs pushq rex.X in rorl in in in lods mov insb cmpl xor xchg jnp std test loop lods add mov retq or (bad) fwait (bad) lock std sub xor fmull pop retq mov gs imul in or cmp rex.WR lods rex.X mull sti pop out sbb fldcw mov fdivs add movabs pushq pop (bad) (bad) shrb push test xchg in lods cmp stos movabs mov adc lods cmpsb (bad) adc retq pop lods sub insl movabs jo push ja lods and sarl imul rex.WXB loopne es insb (bad) (bad) push sbb lods movsl xchg test rex.R rex.XB xchg stos mov imul mov rex.WX xchg or (bad) push mov lcall (bad) retq cli rex.WRX mov (bad) insb enterq or out in out or (bad) lods mov mov stos fnstenv lods adc pop jnp xchg cmovle pushq mov stos sbb mov add push loop (bad) mov mov int3 sub or pushq mov jo,pt (bad) mov mov out movabs pop (bad) jo pushfq test leaveq mov rex.R lods lcall mov (bad) (bad) cmc idiv cltd jnp sahf and pop mov lock insb test pushq flds test adc out outsl xchg cmpsl xor rep bswap (bad) sti push rex.WR (bad) push xor sub popfq xlat jno cmp icebp outsl nop out (bad) push rex.WB (bad) pushq (bad) push cmc mov stos sbb loop imul jmp leaveq int3 repnz fsubs pop mov and movsl and sub lods test add pop add xor (bad) je mov out lods pushq repnz lods retq fldcw xor lods jbe cmp jo mov (bad) movabs add movsb push sub loope pop in testl sub lret ss pop scas pop test test mov (bad) lods retq rcl ja imul mov cltd mov adc and mov hlt (bad) movabs rclb std ja mov jo xor (bad) xor lahf xor xchg in (bad) idivb stos push movsb sub jg movsb (bad) mov mov (bad) jns data16 out movl movabs push test lods rex.WXB sub nopl (bad) lods popq rcr in outsl pop jg callq sub cmp xchg lods rex.B push xor jb in mov (bad) (bad) mov sub jp test lods jl cltd or or (bad) outsl pop jg mov imul out mov mov (bad) mov mov pop ljmp adc pop pop lods callq xchg int lods push nop rex.B sbb sbb xchg xchg int3 or xor (bad) iret mov push cmpsb notb jmpq cli shrl add setp mov lods jb rex.W rex xchg xor lods add sub or test jmp lods movsb rex.WX rex.X repnz and lods rex.WRXB xchg test rcl xchg insl (bad) mov adc lods (bad) out lret jnp repnz mov (bad) push (bad) lods sbb lea mov int3 lods movabs out or imul lods mov sbb rex.WB jl in pop add cli movabs lods out rex.WR cmp sahf mov sbb jae mov nop in icebp lods cmp xor pop adc fnstcw add jge mov adc mov scas lods and lock mov mov scas gs sbb pop (bad) push scas jo cmc (bad) pop jb xchg insb cli imul stc retq retq cld sub lods iret rex.XB rex pushq adc cmc movabs or sti mov mov rex.WRB and jg loop (bad) rex xor outsl insb xor in (bad) sbb lods add xchg rex.WRXB lock rcrb in adc (bad) jae (bad) cmp mov (bad) loop xchg test movabs mov adc (bad) hlt retq notl sar or or hlt push lret scas pop movabs retq cmpsl out fsubrs xlat (bad) xchg mov jb mov out add (bad) adc out (bad) add fdivr add (bad) in insb rex.RX outsl sub xchg jb rex.WR fs cld jrcxz jne (bad) in xor int3 add fwait cmpsl sahf scas xor or rex rex.RX (bad) jl rex.B sbb (bad) lods cli pop js mov callq lret sub lods or jb mov fsubrl or (bad) leaveq mov in clc sub movabs sbb test rex stc or imul rex.WX mov cmp add test sub fnop mov testl lods mov out sub rex.WR lods jno xchg push and cmc cmp mov mov sub (bad) mov in lods (bad) pushq or sbb js cltd lods (bad) rex.WRX int callq push out lods sti loopne fs sbb (bad) jg xchg cli stos (bad) push xchg hlt xor movabs stc shrb in popfq rex.WRXB lods jmpq cmpsb sahf jnp lahf lods nop loopne lahf lods and cmp mov sbb or (bad) adc push iret rcrl rex.WRX (bad) lods and jrcxz stos outsb adcl (bad) mov lods mov pop rex.X loopne lods cltd sbb mov vpaddusw ja pop sbb lods orl repnz sbb add popq mov outsb adc jl rex.B lods in movslq test imul pop fcmovb mov rex.WXB lods ds mov pop xlat out lods (bad) xchg mov movsb cmp lods sub test cwtl mov mov rex.B xor push movabs mov adc jl mov (bad) adc xchg or movsb mov rex.RB retq (bad) and int add iret sub lods mov out test test stc cmpsl sarl insb (bad) mov xor (bad) (bad) (bad) rex.RB (bad) (bad) test pushq movabs mov mov lods je add mov (bad) lret rex.W rex.W imul sbb lods test andb lods stc add sub je and mov (bad) pop pop int3 test lret lods rex.RXB mov lods rex.RX jo std pop imul xchg out mov push mov (bad) cs mov mov fwait xchg pop sub lcall pushfq adc fdivrp rex.WRXB xchg adc sub or and lods stos or iret pop (bad) stos jae mov rex.RX lods fdivrl fxch mov add jne xchg sbb retq cmp lods out mov jb xchg out cwtl rex.WRB fildl hlt insb rex.X xchg lods sub push cmp out je xchg lods xchg fadds faddl (bad) (bad) cmc lods cli mov mov rex.WR and sbb in mov sub in jne add lods rex.RB jno mov scas and shl fisubr (bad) mov jp sbb (bad) (bad) jo xchg mov (bad) mov scas or lret cmp in test in (bad) and in stos sub enterq rex.WB (bad) xchg rex.B movabs lods xor jne sti adc lods ficom add (bad) insb push lods xchg pop jno outsb xor (bad) sub leaveq movabs adcl mov cmp rex.RXB (bad) jnp in push sub fcmovu xchg fsts insb gs (bad) int lods loope fsubrl xor push (bad) hlt lods jns mov (bad) add jnp int3 pop cli push rex or shrl cmc rex.WRXB fsts lods xor pop rex.RX (bad) lods mov fisttp fisubr mov test lods imull sbb addr32 retq add cmp pop sub lods sbb fbld jmp cld (bad) xor outsb popfq shrb hlt ds xchg jnp test sbb mov (bad) mov jrcxz mov cmp sbb mulb imul add adc adc jns jl mov (bad) jle cmp scas sahf adc lods mov test add pop jns repnz rex.WRB cs movsl xlat out scas rex.W add lods mov (bad) sub (bad) lods (bad) sub push (bad) mov loopne pop lods sbb rex jno add adc push scas xor (bad) lods roll ds jge or (bad) scas sbb sub lret test test adc repz (bad) lret add mov callq data16 fstl int retq lods (bad) cmpsl jle cmc rex.RX lods data16 mov xchg sub (bad) pop movsl imull (bad) push (bad) mov rex.WXB (bad) imul cltd out rex.XB repz sbb jle rex.WRXB sbb (bad) cmpsl fucomip lods xor mov scas (bad) (bad) lods repnz xor add (bad) scas pop mov ss test jge (bad) add or xchg and lahf jne lea xor adc push sub rex.XB xor (bad) push test or adc xchg enterq xor enterq (bad) cmp rcl rex.WRXB in movsb cmp imul mov and add out movsb (bad) insb (bad) sti fldl2e pushfq xchg je stos (bad) icebp mov retq mov (bad) jb xchg rex.R (bad) pushq mov sub or sub rex.WX lods rcrb rex.XB js (bad) xchg and sub mov add lods (bad) (bad) (bad) (bad) movabs jnp fldl mov cmp scas rex.RXB out xor push stos cmpl callq ljmp or es in (bad) xor repz subl cs shrb or cld clc pushfq lods sbb pop fs xor rex.WRXB fiadd pushfq lods je (bad) rcrb lods (bad) fwait and movabs ja jo lods (bad) jne out (bad) mov cltd lods pushq xor xchg (bad) mov sbb lods (bad) out cmp lods push (bad) adc in scas ja lret jb (bad) or (bad) jg jle mov cmp xor lods cmp xor jb pushfq repz lock out (bad) xchg (bad) sub and scas xchg callq adc (bad) (bad) jl ss movabs hlt sbb mov lods and cmp cmc mov mov cli cld sbb mov cld jns repnz clc push lods lock rex.X and in (bad) rex.WR jmp lods mov xchg adc sbb or (bad) movabs xor cmp lret icebp test adc sub retq cmp clc test loop add pop scas (bad) mov (bad) scas lods outsl (bad) es test mov retq cmp xchg jno js mov (bad) jp xor movslq pushq test cmp fistpl pop push rorb lods sbb or fsubrs testl push insb imul mov xchg and xor pushq movabs (bad) lods sbb insb and jl fsubrs nop rex.RXB cmp lret cmp mov lret lods push faddp xchg pop lods cmp shlb ds movabs jne xor (bad) imul int jae sbb std (bad) or insl popfq jo sub fxam mov add jl (bad) cltd leaveq jmpq adc sahf lahf (bad) mov xchg push mov sub jb fldt xor lahf push cmc test movabs imull jno sub fnop and jl rex.WR mov push xor scas test callq mov js pushfq or pop outsb sub loope adc rex.R or mov jrcxz ds (bad) xor (bad) jmpq sbb and mov jae cld fistp cmpsl lods pop adcb jp jmp pushfq xor add jnp and scas rex.X roll scas and clc movslq xchg test adc lods sbb stc xor jg (bad) pushq (bad) xchg je rex.WRXB pop insl add (bad) lock scas mov rex.X in (bad) (bad) (bad) xor movabs xor jbe sub popfq movabs sub mov adc rex.WX adc mov lods sub movabs adc scas cwtl xlat (bad) add lods retq je xchg pop iret out lods sub insl push and or jp cwtl (bad) jle and scas mov (bad) insl jbe adc add (bad) std (bad) scas cmpsb and adc sub pop (bad) fldl mov lods (bad) sbb jae lods outsb sbb xchg test sahf movabs lods xor pushq insb mov xchg movslq fwait loop cmp (bad) (bad) jb movabs jno sbb lret sub (bad) insb (bad) and (bad) jae repz (bad) sub cmpsl (bad) jmpq adc add jmp cmp dec lods fiaddl cwtl rex.RXB rex.R lea es sbb nop data16 rex.WRX rex.XB loop shlb (bad) movslq movsl je rex lods out ds jns js scas fcompl mov (bad) mov leaveq stos mov xor fstpt (bad) (bad) repnz stos js rcrb or (bad) rex.WRB rex.WRXB int sub mov (bad) jo lret fadds mov (bad) stos mov push sti rex jbe (bad) imul (bad) xlat lods or push lock lods (bad) shrb mov std rex.WR int3 sub jp je adc sub (bad) jg mov insl rclb sub in fdivs lods xchg add add rex.X mov push cmpsb lods pop test in jmp lods or movabs shrb callq mov mov or fwait sub xchg ja pop mov add mov xor outsl lods movslq test (bad) lahf xchg or (bad) lods (bad) movabs fstp fildll xchg data16 fldcw and movabs rex.WX mov roll out mov (bad) ja push xor clc (bad) out add scas rex.WRX loop int in lods (bad) or (bad) add pop adc (bad) lods mov sbb (bad) mov (bad) cld (bad) fwait mov sub sub or retq mov and jne movabs mov lods ss xor lods rex.WRXB imul pop jmp and mov rex.RX (bad) lods push push rex.RB incb or rex.WXB mov iret shlb and lods mov movabs cwtl (bad) push push xorb rex.WRX stos movabs push sbb ja (bad) lods mov cwtl sub scas in mov mov fucom sbb (bad) test pushfq mov cmp enterq and (bad) movsb lret lods jbe shr or lods (bad) mov rex.WB mov iret pop sub or or (bad) (bad) movabs popfq jle (bad) push sub (bad) in pop subl xchg adc lods test fnstcw rex.WR cwtl (bad) (bad) xor movsb shrl xchg in lods xor test lods pop insb xchg xchg retq lods mov (bad) or js or cli lods jp imul rex.WRB repnz xchg sub hlt xchg push (bad) push cmpsl (bad) out lods jmpq jle and add sbb (bad) imul rex.WB test cmp retq or cmp pop jl ror push icebp (bad) rex.WRX rex jae pop add pushq adc (bad) sub rex.B (bad) (bad) rclb stc rex.RX fldt xchg cmpsb mov add sub jnp leaveq mov sarl rex.B rex.WR addr32 sub adc adc jl cmp add scas mov in (bad) jle movabs lods outsl addr32 out cmp lods mov xchg cmp push cs lods mov add lods xor ror and jb adc vcvttsd2si cmp andps (bad) lods js and or movsb mov (bad) fidivl cmp scas sbbl mov cmp movsl mov movabs sbb xor cli adc jmp adc cmc xor ds adc out (bad) or rex.R lret and add fs cmpsb movsb stos rex.WX jl or sub in mov or mov rex.WXB sbb in push rex.X mov imul or (bad) stos cmpb and cltd cmp jl push jrcxz mov sbb out test stos (bad) cmc sahf and loope mov je xor xor cwtl add adc sub rex.WRX je lods mov mov mov cmp or js adc sub in xor vmovsldup adc cli out mov and sahf loopne outsl sti fnstcw pop lods retq rex.WB addr32 (bad) outsb cli imul sub (bad) movsb rex.X sti lods mov ja movabs fs callq lods mov js xchg lock rex.WRB rex.WR out sub add cmp loopne and mov lahf lods jl jg adc mull (bad) insb (bad) movsb jge (bad) mov adc cmp xor fcmovbe cs add clc (bad) push vdivsd lods fiaddl movabs (bad) hlt rcrb and test mov pushfq lret (bad) pop rex.R test shll sub xor fwait cmp (bad) xchg sbb mov shrl movabs (bad) loope lods fisttp jmp lods and sti push xor std lods stos icebp rex.X pop mulb lods rex.WR xor (bad) jg lods outsl (bad) (bad) stc repnz xor (bad) (bad) lods sub pop jo xchg callq lods clc in rcrl fiadd lods mov (bad) loopne int rex.WX rex.WRX cmp (bad) retq js sub mov xchg (bad) xchg sub adc out or lods (bad) (bad) insb imul in scas movabs rcr jg xchg adc lods lods (bad) xchg movabs hlt rex.WRX mov lahf mov mov je (bad) lods fstpt (bad) xchg cmc fcoms (bad) (bad) (bad) jbe ljmp insl pop rex.RX (bad) cltd mov sub test lret jae fwait jg lods xchg adcb (bad) (bad) sub rex.R std rex.WRX (bad) (bad) adc sub notl push test clc lods (bad) xlat movabs stos insl sub lods leaveq mov enterq jmp (bad) cli and outsl jle lods fnstcw rorl sbb imul pop lods repz orl or pushfq test sbb movsb jle jmp mov rcrl rex.RXB jge lods (bad) jl xor sbb cmp rex.R xorl rex.RX mov rex.RXB cld lods movabs mov jmpq clc xchg scas fidiv sub pop mov mov and movabs jo in adc lods outsb mov adc fldt jl (bad) lods xchg sbb lods cli rex.WRB or mov retq or (bad) movabs add pop xor cmp lods pop xchg or test outsl lods clc mov adc push lods callq mov lods xchg push mov lods add (bad) cmc retq lods sbb rex.RX add sbb fsts insl lods jb xor jrcxz outsl mov mov movabs (bad) sub repz shrl lods rex.WX adc (bad) rex.WXB scas nop sub lods ja loope sbb mov (bad) (bad) movsb movabs clc jrcxz (bad) test xchg pop (bad) sub pop rex.RXB test movsl (bad) popfq or imul (bad) cld negl loope xchg test pop adc outsb jge jrcxz sti mov fldenv insb mov push ficoml mov (bad) rex.WRB lea adc movabs rcrl xor loopne add sub lahf imul lret shrb rex.RXB (bad) retq mov lods adc in xchg loop test (bad) fs sbb movabs in cmp cld clc rex.WRXB mov mov xchg pop sub (bad) jne xor (bad) lods pushq imul jae je (bad) push mov mov (bad) scas and mov outsb rex.WR jl rcll sub and add adc lods es (bad) fisubrl cmp push stos outsb imul enterq iret sbb popq xor (bad) push movsb movabs cmpsb (bad) mov popfq retq (bad) (bad) lods pushq sub test push rex.RXB jl lods pop jnp movzwl stos mov mov lods jbe (bad) hlt xchg ds imul lods mov mov or scas cmp rex.WR adc (bad) (bad) insl add jp test enterq scas in mov mov ss lret outsl (bad) leaveq xor scas mov rex.RX fisubr ds lods (bad) add cli loopne rex.X repz sahf movabs jmp loopne lods imull loope ss fsubl mov repnz mov rex.WRX movabs mov jns imul cmp (bad) rex.B fcmovb mov jo and mov test jns push or lods mov rex.WB sbb lods cmp fistp jg lods gs in add lret retq imul mov sub mov js lods mov sbb fucomip imul mov lea in mov mov (bad) push cmpsb scas rex.X (bad) mov lods gs pop test ss pushq addr32 ja out outsl add loopne lods xchg in (bad) sbb rex.X push lods (bad) hlt (bad) fs ss fisubl out pop retq lods movabs loope pop stos (bad) (bad) mov movabs push icebp mov shll cmp add je movsl lods cmp push (bad) or pop jae rclb (bad) mov int3 stos fldcw or lods sub test push sub rex.B lret (bad) pmuludq sti pop mov xor test sub add jle xchg or add (bad) mov repz je loopne (bad) mov xchg xorl (bad) addr32 xchg cwtl movsl leaveq mov test sub fsts (bad) and jnp lods or (bad) fldcw add rclb mov out js adc (bad) or pop or lods enterq loope nop ja lret (bad) rex.WR add cli lods lock add lods mov jrcxz (bad) test mov (bad) scas cld lea xor (bad) or rol xchg rex.WRB callq jmpq sar cmp add xchg lods (bad) (bad) xlat fnstenv cs and xor sbb rex.WR es or (bad) add (bad) pop rex.WRXB lret xor push (bad) add or mov jb (bad) lods rcll mov mov rex.WX rex.R in sbb lods jae mov mov push pushfq test adc xor lods push adc mov pushq popfq insl adc f2xm1 iret or std cmc lods mov fsubl rex.RB movslq or xchg xchg jle in imul xor fist in adc clc iret add mov mov movabs push pushfq lods xlat jg test mov movsb (bad) (bad) or loopne lods (bad) movabs repz punpcklwd ja mov scas sub sub nop mov movsl sbb test movsl jne in (bad) or (bad) sar sub mov mov insb insb fcomps rex.W rex.WRXB xor jne insl add movslq (bad) or data16 (bad) jp jl pushq jne xchg and jno je fstpl mov add rex.WRB mov stos loopne in sbb xchg ss and mov xor cs xorl add scas xor cmp retq rex.RX lods or push xor scas (bad) sbb jmpq mov popfq fisubrl fcomps rorl lea fistpl cwtl lods sub in cmp shrl out cld (bad) (bad) mov adc retq in pop gs jge jp sub callq (bad) adc (bad) sbb lods mov ss retq insb adc fidivr stos cmp mov imul (bad) add lods rex.WXB xor sub (bad) loopne test (bad) sub sub scas cmc stc pop lret in outsl or rcrb adc mov jp sub cmp sub mov mov lret stc addl jae je mov mov jns subl movsb hlt sbb lods rcrl (bad) (bad) mov mov jl or push stos xor or rex.RB fildll cmpsb rex.WR jne lods repnz add jp lods out rcrl (bad) lods clc (bad) (bad) andb mov sbbb pushq adc and xchg adc sub es lods out cmp cmp jnp lods add rex.RXB pop mov stos rolb xchg lods rorl out mov imul mov leaveq movabs mov add lret (bad) (bad) fwait sbb cs (bad) (bad) push es int3 jbe retq in (bad) in ds pop rex.RX xor push divl in (bad) pop cld push sub mov (bad) mov retq lods add rex.WB or lods rex.B fucomp pop rex.XB je jb push mov (bad) mov mov adc jnp lods int3 push scas lods or fidivr insl (bad) je lods sub (bad) sub lods cmp outsb and lods rcll (bad) hlt ss lods mov adc xor jle sbb std ss lock sbb je mov insb shll xor (bad) xor mov mov jmpq idivl rex.B mov xor xor jmp andl and xchg rex.WR movabs movlps cmpb xchg lods push cltd movabs enterq fadds mov fsubr movabs rex.WRB jmpq ja rex roll and sbb ds popfq int3 rex.X adc mov cmp shrb (bad) lods pop std in cld iretw jnp (bad) mov lea test movabs rex.WXB rex.X sbb jp (bad) xor (bad) stc lret jrcxz rex.WR (bad) mov (bad) or sub rcrb test out adc and stos mov shrb movabs cmp and (bad) or pushq and lea jnp lahf xchg fs rex.X pop imul insl lods cwtl xchg hlt (bad) icebp sbb lods (bad) stos sub cmpsl (bad) (bad) adc scas cmc (bad) cmp loop imul mov mov xor test rol insb lods rorb or jge fwait iret mov lods mov loop sahf cmpsl scas cli (bad) (bad) rex.XB sub mov mov jns jl movsl in rex.WRXB mul adc (bad) (bad) rex.XB jp and sbb (bad) test push (bad) pop (bad) cs outsl icebp iret adc data16 movabs shrb (bad) pop in (bad) fwait cmp insb and (bad) fistpl rcr sbb pop sub repz movabs mov in or movsl mov cld cmp scas rex.XB jb (bad) adc hlt (bad) mov lods hlt cld (bad) notb bnd rex.W and in jno cmpl cld sub hlt sti pop jmp rex.WRB (bad) jrcxz sub (bad) scas and and (bad) lods fsubl (bad) add push xchg movslq lods rex.X rex.WXB shrl mov push je cmp jle mov mulb leaveq sub sub xlat jbe shrb in jp stos rex.W xor push xlat scas push je lods (bad) xor add or cmpsb lock mov pushq loop outsb push cmp out and mov (bad) test cmpsl mov (bad) rex.RXB insl in and (bad) movabs pop iret scas pop xchg in icebp add lods imul add retq mov lods jne (bad) mov adc je mov (bad) mov out in rorl rex.WRB sub mov nop (bad) imul xchg and movabs or stos cltd rol mov mov cli mov lods scas xor fidivl movabs xchg sub scas (bad) out jmpq jrcxz (bad) adc je jnp xchg add rex.W xor lock cld jb sbb jl shrb push (bad) xorl movabs lea stos xchg scas mov sahf insl sbb or rex.R insb sbb mov rex.WX movslq adc subl (bad) pop lods (bad) push jge fisttpl rex.WX enterq lods and xor int lods outsb or mov jno hlt mov (bad) in jnp outsb pop (bad) pushq push movsb test fs lods clc sub (bad) rex.B xor out and lods mov es fwait (bad) lods or (bad) adc xchg xchg insb sub cmp loopne or xor in pop mov scas rex.X sbb cli mov or leaveq lods scas loope in xchg xchg sahf xchg (bad) mov cld (bad) cmp mov test (bad) lret in (bad) fisubrl rex.R sub rolb pop nop pop lods ja fildl jl movslq rex.X mov cwtl jne ds add (bad) (bad) js insb jge xlat cmpsl mov or cmp lock pop xor sbb mov adc int (bad) xchg (bad) test mov (bad) lods rex.WXB repz mov pop addr32 mov (bad) sub push movsb xlat in movabs scas stc leaveq jp rex.RXB mov xor adc sub lock rex.WR fidivrl xor adc cmpsb scas imul loop lods push push fwait jrcxz push xor sbb add mov xor pushfq jmpq cmc lods xor lods (bad) fcoml popfq adc movabs adc push sbb pushq push (bad) (bad) push fsub movabs lods add jbe lods adc and sbb enterq lods gs mov movslq mov push sub cld in insl rolb movabs mov lods rcll in rex.R lods stc add cmpsb nop mov mov sti or cli (bad) sub (bad) add jne jmp ss (bad) lods enterq sbb rol (bad) push xor popfq (bad) rex.RB rex.XB rex.WRB add clc (bad) lahf rex.WRX lods mov and (bad) fstps sti cmpsb in test (bad) adc lods jle loopne fist pushq cli lods sbb cmp gs movabs mov imul lea sarl (bad) insl lods mov ds frstpm(287 and mov add cmp mov (bad) mov outsb sbb shll xlat test and je (bad) lods sbb jge out cmpl jrcxz or pushfq sub (bad) test jl lods (bad) xor mov js rex.X push lods fsub idivb pop and rex.WRX push mov sbb scas (bad) lea jne in fisubl rex.WB and ja sub and mov pushq xchg mov xchg std adc sbbl retq loopne cwtl rex.WX clc mov and in mov pushq rex.WB xchg test lods xor rcll test and movb movabs out subl insl fstl xor pop test rex.RX popfq sub lods (bad) add mov mov mov xor lods stos int3 loop rex.RB rex.R out in fwait jmp adc loope (bad) (bad) pop je push jmpq movslq (bad) rex.RB (bad) loope pushfq fsub adc jnp movabs push xchg adcb pop js out rex.WR xchg pop (bad) retq (bad) stos push jo sub cs (bad) (bad) or mov fsubp add rex.RXB test cmp movabs xchg jl jle xor (bad) pop (bad) test movabs lods cmpsb cs out lods lods lahf adc pop nop sbb flds lods in or mov jb (bad) stc loopne out push pushq insb and add cmpsb (bad) mov ds adc sbb and sub push test or cmc (bad) (bad) sub (bad) mov (bad) imul rex and ss rolb cmp rex.WXB (bad) and imul (bad) adc fsubl negb xor add mov (bad) add (bad) (bad) cmp sub in push movabs mov insl (bad) pushq test (bad) (bad) sbb fisubrl rex.RXB or sub (bad) xchg rex.WR movabs outsb lods cmp sub scas rex.WR gs or add xchg hlt (bad) popfq repz (bad) mov sbb fimul sbb lea cli (bad) (bad) sbb lods mov cmp or mov movabs rex stos rex.X insl callq xor xchg xchg rex.RXB mov xchg (bad) fidivr add sbb (bad) pop pushfq mov adc (bad) sub imul lret xchg pushq mov callq lods sti loopne lods cld adc scas (bad) or rex.WR jmp (bad) pop enterq mov icebp xor jns or (bad) in rex.W rcrl add js in cmp test jnp (bad) (bad) jne movabs mov in out adc rex.WRXB gs lods cmp (bad) in rex.WRB pushq sub lret (bad) lods mov xchg sarl lods rex.WRB sahf pop mov imull jmpq fdivrs mov lock (bad) insb jns (bad) popq jrcxz lahf xor callq rex.RXB lods fs enterq cmc pop lods fdivr pushfq xor test push lods mov sub retq jns pushq enterq rex.WRX lods movabs (bad) movabs cmp adc std mov lods add rex.WR jmpq adc retq mov lods out loopne mov fwait movsb mov and insb repz mov stos jp,pt cltd in in xchg jmp (bad) lods insl (bad) rex.WR data16 jo sbb lods movabs cmova cmp test (bad) sahf lock in xor cld mov movsb mov or jb mov pop lods xchg movslq sbb lods (bad) in (bad) and lods cmp sbb add rex.R movsb (bad) and mov mov xchg rex.X jno xlat rolb test mov lods pop int3 add adc sbb or add jae mov (bad) out (bad) sub push cs sub lods cmp rcl lahf sub rex.X (bad) lods or (bad) cmp lods (bad) mov sahf (bad) mov loopne mov rex.WRB mov in add and in (bad) jl ja mov push adc lods jns rex.RX addr32 sbb xchg hlt add shrw jno std sub cli rex.WX lods xor xchg fs lods mov callq cli (bad) std mov mov (bad) popfq rex.WRB pop mov mov or pop stos xchg (bad) test add jbe addr32 cmpsb adc push sbb insl fcoml insl pop stos test rex.WRXB (bad) rex.RB adc jo pop shlb cmp mov and xchg stos (bad) (bad) lods sahf xchg retq xchg sbb add and mov std lods xchg mov (bad) (bad) (bad) mov sbb rex.WR xchg (bad) lods shr xor scas rex.RXB xorl out jp (bad) (bad) movsb lret sahf movabs nop adc (bad) lods in adc sbb (bad) movabs add (bad) shrb sbb mov jae lods fwait xor (bad) popfq lods shll cmpl and jno add mov stc stos sbb test imul sub cmp jno (bad) (bad) jp lods lahf xor cmpsl rex.RB (bad) stos enterq movsb hlt mov cli (bad) (bad) jge movabs popfq pop mov shr int3 (bad) mov js and sub xchg mov in xor and lahf jle lods xor xchg lret xchg (bad) sub xchg icebp movabs mov rcrl (bad) mov mov (bad) push insl (bad) adc jne lahf sti lret (bad) mov lods add rex.W xorb (bad) pushfq out (bad) lods lea mov and xchg (bad) jmp rex.RXB (bad) lods mov (bad) mov and xchg shrl jbe mov in popfq iret (bad) ljmp mov fnop (bad) sub rex.R lods xor sbb jl lods out stos pop push rex.W push divb lods adc clc rex.X xchg scas mov mov mov movabs mov mov movsl (bad) pop jrcxz xchg lods mov and add pushq mov test sbbl xor pop fldenv ja cmp xchg sub cs (bad) sbb sub lret js jnp lods loopne rex.X (bad) (bad) retq cli rex.RB imulb lods rolb mov or je sbb xchg and lret push movsb mov movabs and shll mov jp mov sbb cmp xor rex.WRX decb retq cmp out enterq ror adc adc rex negb retq jo jns push sbb sbb lods (bad) jmpq je clc out lods cld jo,pn in outsl jno jg insb lods pop add mov in int jle xchg xor (bad) (bad) or add mov (bad) lods rex.WRX icebp rex.WR loope (bad) (bad) test lods (bad) xchg cmp mov sbb test push in xchg js or or jno (bad) pop sahf or (bad) rex.WR orl xchg push fdivrs mov add (bad) sbb lods xor addr32 test nop movsb enterq out or cmp sbb fninit shrl pop xor lods (bad) fiadd cld lods adc insb mov lods rcrl jnp cmp lea rex.WB jo clc (bad) (bad) mov je push shrl int movsb int (bad) (bad) in cmp rex.WX cld jmpq out stc or push sub lods retq cmp push (bad) lods jb add scas mov rol movsb jmpq jge cmp (bad) push (bad) push add rex.RX lret push lods sbb rex.RB fisubrl jp movsl cltd shrb sbb cmp sub cld and in sbb xchg lods xor pop jns lods (bad) ja adcl sub nop iret mov out pop out outsb (bad) repz lods in je addr32 andl jge mov lods rex.WRXB cmp xlat cs lods andb mov mov fistl mov cmpsb pop scas imul sub (bad) scas repz mov jb (bad) push lods test pushq (bad) mov sti mov out (bad) jle xchg retq lods rex.X pop adc scas je lahf shr add mov (bad) iret (bad) sbb xchg jo lods test xchg (bad) push jl test pushq and insl xchg (bad) (bad) pop lods test xor shrl sarb retq (bad) and lods sar xlat imul or stos shll jmp stos cmc and and scas mov in cmp in fisubrl jle sub lock mov xchg and xchg mov xlat (bad) jg push xor mov scas loopne rex.B lret ss sbb rex.WRX mov out retq int push jnp es test xorl lock and in add push cmp lods lret test rex.WB repz (bad) jmp lods rex.R push (bad) lea outsl sbb pop fisubrl xchg mov xchg data16 (bad) cmp movups imul add and out jns lods scas push pop mov cmc cmp cld push lods out adc rex.WX fistpl lods (bad) (bad) enterq and repnz repz or gs add rex.WRX fcompl mov cmp fcomip lods rorb movslq (bad) lods mov mov (bad) insb loope adc rex.WR jo mov cmp and test cmp push shll sub (bad) sti pop lods mov push fisubr push jno lods add nop je and ffreep pop es stos (bad) shr (bad) retq fdivrl lods (bad) pop sub xor andl and rcrl mov test mov std xchg callq mov cmp pop sti enterq push pop cwtl cmpsb adc (bad) xchg outsb mov (bad) lods (bad) sahf rex.B addr32 outsl xchg in fsubrl cld fldl xchg callq or in jbe sbb movabs jbe movabs sbb jnp lret rex.R xchg (bad) sbb xchg add mov jg (bad) sbb (bad) lods jno xchg stos ficoml movabs adc mov cmp mov sbb insb push push and scas (bad) pop pop in xchg insl gs fcomip or xor push sbb rex.RB movabs lret jbe cmp lods jge xor mov data16 adc and xor outsb sbb incl pushq clc imul xor cld lods lods sub or and in rex.WB xchg (bad) fisubrl and xor push mov movabs xor xchg scas rorb in sarl rex.WX pop jo mov pushq out (bad) popfq (bad) out xchg sub rex.R (bad) or rex.RXB (bad) lahf (bad) add lods cmpsb (bad) repnz addr32 jge cld mov fisubr scas lods pushq (bad) callq (bad) jbe sub add pop in lahf pop lods shl cmpsb fldcw adc clc movsb adc mov rex.B jge,pn scas cld gs add mov movabs callq xor push mov outsb out pop in movsb (bad) fstps scas scas addr32 jns popq out sub jge callq movabs mov movabs (bad) pushq lods loope popfq xor xchg sbb int3 (bad) rex.WR pop (bad) sub sbb pushfq add rex.R cmp sahf xchg mov scas outsl (bad) stc push cli popfq lods lods rex.WXB jge pop (bad) mov xchg mov mov lahf xlat push mov pop sub mov xchg sarb lods clc cli add cmp (bad) scas (bad) cmpsl lods mov or loopne jnp lods push cmpsb roll lods movabs sub sub imul mov (bad) jb sub add pop and add lods rex.WX (bad) mov mov adc fsubrl in in subl (bad) mov test jbe add repnz xchg mov js lods (bad) push and rex.WRB add jnp or cmp cmp cmp fild xor mov lock rex.B jrcxz lods adc in jl lret mov jmpq lock jae movabs (bad) jo mov in (bad) or mov (bad) addr32 clc adc popfq cs data16 mov pop stos mov or cmp out mov (bad) (bad) cmp xchg pop sub subl stos mov addr32 test stos outsl or rex.WR jno mov rex.R scas sub (bad) in rex.RXB retq sub scas mov lods imul mov lods cmpsb pop rex.XB cmp rex.B push stos pushfq lods sub js or mov sbb (bad) (bad) adc fiadd nop test shrl mov retq xor loop out push or mov cmp cmpsb ja jbe (bad) mov rcr lods leaveq (bad) bnd js push lods std (bad) (bad) lods push mov add lods sbb (bad) iret and scas fisub (bad) jno callq cmpsb lods sub pushq rex.X push movabs imul retq adc callq rex.RB scas jbe int3 add insb js push mov (bad) xor fnstenv outsl adc ja scas scas sbb mov rclb incl cld xor mov (bad) jg cld shrb rex.R stos and sbb cld icebp lods int3 (bad) popfq out movsl adc pop (bad) adc (bad) jbe es in movsb xor imul rcrb and or data16 jp leaveq or mov lods mov (bad) fist movsb (bad) out and or iret mov jmpq mov or mov rex.W mov pop test fsubr cmp push lods test adc lods add cwtl sarb and imul scas pushfq (bad) jg lods (bad) xor and mov (bad) imul scas xlat loopne jmpq lods data16 mov rex.WR rex.WR add xor fmull shlb (bad) jnp lods and jl pushq mov mov lods pop mov xchg xor push (bad) fucomi js pop (bad) es lods mov mov mov (bad) mov insb adc jnp scas jo (bad) add xchg cmp repnz cmp mov xor cs jo bnd xlat movabs mov push cmp sub lods cltd jmpq lods jb (bad) and adc test subb int3 je fist cmp hlt stos rcrb movabs sub (bad) stos adc addr32 lods or subl imull out add fnstsw push sbb lock imul clc test xor ss mov cmpsb rex.W shrl rex.X lods int pop and callq rex.W rcrb (bad) mov lods rcrb (bad) stc lods ja in add outsl lock lret rex.WRX (bad) jmp clc mov (bad) lea loop test jge rclb ds rex.X rex.W repz pop js mov jle jrcxz sub cmc (bad) lret fwait popfq stos cmp movslq imul sbb lods rex.WR (bad) jbe and mov lock and mov (bad) loop adc stc lods lahf lea test rex.WRXB adcb hlt (bad) stc test cmpl rex.W cmp movabs or lods movabs jmp xor mov (bad) sar je push (bad) (bad) push pushq rex.RX es paddusw sub insb add cmp push jmp xor xor adc (bad) rclb jo adc rex.B rex.WX rex.W (bad) ror mov (bad) scas fwait adc or pop jmpq (bad) movabs gs cmpsl in jbe add cli mov lods addr32 xor hlt es jbe xchg cltd lods loope xchg (bad) fcmovnu cli (bad) notb out lods clc fisubr sub adc retq lods cmp stc vmaxss lods rex.WRB cwtl leaveq pop in (bad) mov adc (bad) js lods xor and outsl fsubrs stos mov sub sbb clc xchg sub xor (bad) orl stos rex.W lods test adc stos rex.WXB in out push (bad) in sub in add pushq (bad) jmpq movsb paddb xchg jb lods add out rex.RB lods repz xchg insl sub outsl adc mov mov rex.WX clc lods cltd shl (bad) nop imul pop out sbb test mov sub ja cwtl pop or insl jl outsb xlat jno out mov (bad) sub rex.WR jo lods xor mov lods (bad) add add xlat jb (bad) movabs (bad) jrcxz nop mov xlat mov push add lods sbb pushfq push mov sbb (bad) nop xor or pop pop xor lods add test callq pop imul in imul cmp lods or movabs fldcw movsl fisubl seto jmp jno rex.WXB lods mov shrb minps cwtl push or push xor jg rex.RX lods lods rex.RB add xchg (bad) or and adc fs (bad) scas cmp sbb (bad) test (bad) cmp or (bad) test (bad) push cmp pavgb xor lcall sbb xchg (bad) (bad) in outsb mov movabs adc mov scas retq jo mov (bad) or movabs test fstpl xor loopne and lods jbe sbb scas rex.WRX rex.RX in lods imul or xchg fwait jnp movabs jae push pop nop loop es (bad) (bad) cmp jge or sahf fsub lods (bad) icebp cmc mov cld rex sbb push (bad) jmpq repz lods mov mov imulb (bad) es test xchg rex.XB retq lods fildl sti std pop sbb idivl push lods rorl sbb xchg int jrcxz lods std fsts push sub cwtl insl stos mov rex.WB fidiv outsb xorl rex.RX mov pushq adc int korw cld sub sbb xorl stos lods fdivr jb fwait pop mov lods int3 idiv rex.R lods (bad) movslq push fstpt clc adc nop scas mov fist rcrl insl sbb cmp mov mov xchg cltd in movabs fdivs lods jbe hlt (bad) adc xor jmp retq adc pop cs jle jo (bad) lods xor shrl sub insb mov (bad) add out out lods rex.RX sub mov lret adc sub add mov xor or mov outsb movsb jne mov adc cmp xor out (bad) stos mov retq je xor lods in (bad) (bad) cwtl stc (bad) test lret sbb xchg jns pushfq movsb retq sub (bad) hlt and popfq cltd xchg cli std mov out sbb or sbb pop addr32 mov scas xor imulb push pop (bad) lods lahf add movsl cmp js lods (bad) adc jae (bad) mov pop jle push sbb rorl cld lods jg sub repnz mov mov fsubr or ss lock mov movsb lods rclb or xor xchg and cmp cmp test (bad) int test fs mov (bad) sarl mov jnp insb sub rex.WRB rex.WRX xlat ficomp push jbe fnop add je cmp stos movabs or xor jrcxz cmp cmp in clc notl outsb mov add lods or rex.R flds jmpq scas nop jns addr32 mov cwtl jbe sub lods and fs (bad) add jnp xchg ds mov xchg popfq xchg (bad) ljmp iret ss (bad) (bad) sub imul scas xchg jmpq or xor retq push rex.RB sub xchg mov movabs emms xchg rex.WR fwait jle data16 mov add rex movsb mov in rex.WRX clc test xchg (bad) sti pop or in iret mov lea jp scas jrcxz out cmp adc xchg push lods mov or lods pop mov rex.WX jl lods (bad) loope add (bad) push sbbb xor mov ds mov add movslq insb pop mov xchg lret stos in fisubr gs rcl or pushq shrl xchg retq imul movabs mov fist test sbb or lods (bad) mov fidivr jb mov adc add or (bad) movsl subl pushfq mov clc or sub or fidiv jo test sub out push cwtl repz insl popfq cmpsl jg test (bad) or out jo int sarl mul or lods mov decl sub rex.WR sbb mov rex.XB sahf sbb shll rex repz lods clc (bad) sub pop and fs xor pushq (bad) movabs repnz (bad) push xor fucomi push mov rex.X stc sub and (bad) insl lods fwait and repz out mov rex.RX mov xor outsl test push (bad) stc pop adc mov ja or push add lods mov (bad) or mov mov jnp or (bad) rex.WRX mov rorl sub cmp or push mov movabs loop lods adc scas mov pop add (bad) imul or repz lods (bad) repnz sbb push add mov (bad) add mov add (bad) lods xor sub fldenv jne xchg xchg xchg movabs or jrcxz jnp (bad) (bad) jb callq xchg push imul lods (bad) mov movsl int3 (bad) nop adc insb rex sub in imul mov jl and and adc int3 movabs jne jo sbb mov (bad) mov insb fild (bad) add mov out clc jno retq lods mov xchg mov idivb lods cld push cmp add fisubrl or scas jb adcl lods mov (bad) xchg lods jno (bad) (bad) imul imul push sub loop and rex.WRXB test retq xchg scas rex.WR faddp push pop rcl sahf jno (bad) mov leaveq fldt enterq rex.WB or pop or movslq (bad) and hlt rex.B repz insb mov lods movsl push cmc (bad) cmp mov mov hlt sti lods (bad) (bad) out sbb cld lods add (bad) (bad) sub movabs (bad) (bad) xchg mov lods xor mov cli lods cld (bad) lock sub xor push rex.WXB fwait std mov lods add adc sbb pushfq mov retq (bad) rorb jae rex.R and movsb fsubrs xlat fnstcw pop or sbb jae rex.RXB cmpsl push imul mov scas sub jl data16 cli push lods (bad) in rex.WRB rex.WXB add pop mov lods rex.RX fst push repnz push lods and loope lret adc (bad) (bad) shrl add jp iret mov gs out movabs leaveq add sbb xor sbb add add pop (bad) jle sub lock lods mov icebp sub and jns scas xchg retq mulb (bad) mov xorl jp pop (bad) scas hlt rex.WX mov (bad) imull xor lret adc movslq mov ror insb adc cmp mov fistpll mov sub xchg mov mov and adc xor ud1 xlat rex.RB mov lods cli push test mov mov sub jns cmp and jle sub rex.RB loop outsl cmp add cs int3 js jp cwtl lods pop ja (bad) icebp push in stos adc test (bad) push clc sarb jrcxz pop sbb (bad) jle lods sub retq pavgb push rcrl lods insl xchg rex.RB movabs test (bad) or (bad) lods pop (bad) retq mov out repz jns int3 sbb or in hlt cli retq sub xchg lods rex int3 jg ja or adc xor pop retq xchg out enterq (bad) sti adc outsb rex.RXB jmpq jp jg sub mov or insb (bad) movabs rex.WXB sub and pop test cmpsb movsb (bad) xchg enterq pop (bad) scas mov sub (bad) add in (bad) lods mov rcrb loope pop jrcxz js sbb mov rex.XB rex rex.W cld out scas rex.WXB adc cli (bad) scas adc movabs std rex.WB rex.WRB and cmp adc jne movabs gs rex.RX lret insb neg rex.RX lret xor mov in add adc retq (bad) and shll (bad) lods xchg stc or mov lods rex.WRXB rex.WX insb loop sbb pop (bad) add stos (bad) cmp movabs sarb rex.WRX jrcxz movabs mov movabs (bad) sbb test test (bad) pop (bad) mov xchg jmp sarl lods (bad) repz loope rex.R lods (bad) rex.WB push and (bad) (bad) jne add jmpq (bad) add push (bad) add cmp sbb (bad) sti jl jg xchg gs add ss sbb pop lods orl out lock rex.RB pushq rex.WRX xlat or movsb cmp and (bad) (bad) add int lods jle xchg xchg mov sbb je rex.RXB int3 (bad) mov stos imul lods (bad) fsubrl cmp (bad) and ja mov xchg iret mov imulb xchg (bad) cli (bad) mov mov lret jg cld hlt cld sbb mov cmp rolb (bad) fs sub cmp sahf insb imul add pushq and (bad) out rex.WR and pop sub sti (bad) scas mov xchg int3 mov xchg clc mov (bad) xor (bad) xchg lea movabs cmpsl je cmp push lods sar (bad) orb (bad) je outsb lods int3 (bad) adc (bad) mov and lods (bad) xor pop lods and lock (bad) mov mov rex.R or jl and xor cmp and (bad) lods stos popfq cmp fstps test mov add in clc mov cmp test jge xor cmp hlt add push add rex.RX shrl loope and (bad) jmpq (bad) sub out ss lods sub pop mov xchg and adc int mov (bad) stos mov clc lods jb scas mov mov push mov jmpq xor jl jns mov ror scas rex.WR sbb sbb cwtl (bad) insb xchg (bad) stos jae xor xlat lods outsl pushfq push xchg nop loope,pt lods adc lock cs movabs pop insb (bad) jno lods test jmpq xchg lods andb adc (bad) lods sbb loopne je setp movsl jno rex.WXB scas jne imul (bad) stc mov (bad) push (bad) pop lods and sbb fisubr mov pushq cmpsl mov lods (bad) rex.WX mov push icebp mov mov movabs jbe lods (bad) imul xchg movsb callq adc lods (bad) jb movsl insb (bad) xchg rex.WRXB mov (bad) sub lods sbb rex.X decb sub andl xor rorl jge std or xchg add imul mov mov add (bad) scas out xlat jne lods std lods and sub lods pushq (bad) (bad) xor test add in (bad) stos sbbb xchg sbb sub xchg cltd retq lods stos addr32 jnp adc mov adc (bad) loop lods xor push push cltd rex.B lods ss prefetch stos lods or (bad) cmpsb rex.WR mov lods or jp mov jmp cmp (bad) loop icebp movslq add (bad) push callq adc cwtl sub test xor lock and fildl jle push xlat pop stos (bad) sarl mov mov jle jb sub js push insl outsb jmpq test sbb and mov or movabs push incb addr32 mov cltd shr lahf (bad) mov mov (bad) imul adc imul movabs sti mov lods testb xor es lods jnp int (bad) fidivl mov (bad) out add jl movabs rex.WRX (bad) shrl xchg cli lods (bad) rex.RXB clc xor scas (bad) cmpsb jnp ficom rex.R mov jg cld enterq (bad) mov mov movsl shrb push lods movsb movabs pop pushfq lods scas xchg (bad) unpckhps or (bad) stos xchg jg out int3 nop mov (bad) lods (bad) rcrb xchg lods getsec mov sub (bad) pop lods xor push and std or lods ficomp sub adc lods (bad) imul test jl add mov cmc mov lods push fdivrl add rcrl xorb (bad) nop scas movslq push or and movsb sub rex.WRXB (bad) or (bad) adc sbb cmc lods mov shr (bad) xor mov test test ffreep lods (bad) add xor xchg movslq mov mov adc lods add or pop mov lods rex.B (bad) (bad) rex.WR fiadd sub mov (bad) in (bad) (bad) fnop lods jge ja rex.WRX cmp mov mov fcomip rex.R xchg jmp jg cmp lods lret mov mov cmp xchg cli (bad) add rex.WXB xchg lods jmpq outsb rex.WXB out test mov or push sbb pop test lahf adc jrcxz or hlt mov addr32 movabs rex.B xor cltd fdivs push sbb rclb test movsb ss xchg mov fidivr (bad) cmpl or out pushfq testl retq rolb mov mov fwait xchg fs movsb sbb out mov jge lods es (bad) add cli fldenv and rex.WRB pushfq fisubr rex.WRXB sub push jne test idiv mov push cmpsb pushfq lods jmp adc add xlat shlb out (bad) rex.RXB rex.WX mov int3 scas enterq scas (bad) cmp (bad) mov jo leaveq stos xchg xchg unpcklps imul enterq push stos mov jb sub rex.WB pop or mov or mov cltd nop (bad) (bad) jne scas adcl or mov adc cmp and fwait jrcxz mov imul lods addr32 (bad) mov outsb sub test iret xchg (bad) std lods or nop lods rex.WX fwait pushq clc (bad) mov mov paddb xchg lods retq rex.WB jmpq push lods rex (bad) xor sbb (bad) (bad) (bad) insl lods xchg rex.WRXB insl loopne push rex.R mov clc jnp and cmp (bad) ja push add mov sbb lods (bad) repz (bad) (bad) (bad) jge std rex.WB push lods fs xchg push (bad) lods out in and xchg mov xchg movabs rex.WXB fisubrl push and shrl xor adc (bad) movabs mov add repnz jmpq rex.RX fisub mov and (bad) mov and or lahf lods pushq adc mov fs lods cmp sub out lods stc rcr test cmp or rex.R leaveq or (bad) lods pushq rex.X fwait (bad) lock test or clc adc scas cmp cmpsl xchg insb xchg outsl push (bad) push (bad) lods (bad) retq (bad) jno scas lea fsubrl mov cmp or in jle adc out or ja (bad) movslq movabs mov es (bad) xor addr32 rex.X lea sub xlat iret out sub stos sbb mov cmp outsl xchg push leaveq out (bad) mov rcrl int3 stc cs in push vcmpsd mov or rex.W ficompl push sbb cmp pop (bad) xchg xor outsb (bad) mov mov lods (bad) scas cmp jl addl push xchg mov pop movabs fwait outsl mov lods js mov (bad) mov fldt (bad) lods (bad) pop retq rcrb stos pop mov scas xchg rex.WXB rex.W add in test sub mov outsl scas (bad) es mov jg (bad) sub mov int pop sub out rex.RB mov rex.WR (bad) mov sub lock shll movabs (bad) movabs (bad) rorl rex.R (bad) and loope rex.RXB sbb xor scas clc lret outsl mov divl (bad) mov std or lahf ja adc lods (bad) out (bad) cmp jnp mov push (bad) jge cmc in movsl xlat jns lods (bad) imul adc add fnop scas cld ds movsl hlt or testl sbb cmp (bad) fs cmp retq test mov ds mov xor (bad) push pop stc int3 sbbl rex.WRXB mov adc (bad) mov pop mov scas lods rex.WRB xchg lods sbb or rex.WR adc fnstcw imulb add icebp rex.WB sbb fisttp mov out xor leaveq scas nop movsb icebp rex.WB jnp cmpsb cmp rex.WXB stc jnp rex.WR xchg mov out lods sub pushq lods add push loopne sub (bad) lods sub popfq test icebp lods loop add shr lods or lock clc fs fstl jg leaveq mov and pop fwait cld xchg push stos rex.X and lods test out xor callq pushq push fsubrp cld add rex.W ds flds pop fmull sbb ficomp cld ja (bad) movabs int pop adc push outsl (bad) lods cmp jne rex.RX mov jmpq js lods add pop ss lods xchg mov mov lods sbb test cmp (bad) mov sbb (bad) jg fwait jns xchg movslq rex.RX fildll subl xor rex.WRX (bad) stos mov mov mov add sbb lods push xor (bad) imul push mov (bad) js (bad) ja cmp int in movabs imull retq (bad) rex.XB pushq mov (bad) cmp movabs xor (bad) addr32 mov out jg sbb rex.WRB (bad) (bad) in je rex.RXB movabs mov fimul sbb (bad) jp push roll push retq pushfq jmpq pop lods mov mov fisubrl rex.WR adc cmpsb mov push cmp mov add movabs movslq lods sub push add cmc vpcmpgtb stos mov xchg in sbb pushq xor adc lods sbb iret xchg jno sub lods scas lods jnp movsl insl rex.B mov fs pop pop in sbb adc lods xor cmp mov int ror ss rex.RB cwtl out outsb mov sbb mov fildll (bad) movb (bad) lods out repnz fs callq rex.XB pop stos rex.RXB movabs (bad) sub adc test push in movabs sbb cld sub cmp sbb adc int3 popfq adc stc lods (bad) movabs rex.WXB lods jle adc (bad) jp (bad) fcmovnbe lods sbb movabs insl (bad) out or and mov and adc (bad) sub hlt data16 loope fsubrl rex.RB lods lock jmp push rex.WXB fs and and cmp out cmp mov mov add jns cmc (bad) and lea xlat mov fsubs loope jb add cltd insl pushfq rex sub int (bad) push xor (bad) xchg mov lods fsubl icebp in sbb imul (bad) sbb sbb movabs fwait ds (bad) out cmp movsb xor mov lods rorl (bad) sbb rex.WB sub scas hlt xchg lods int3 mov fdivl es ds fcoms jl mov adc jne (bad) jo rex.WB setbe lods scas (bad) (bad) sbb cs stc rex.WRX mov retq jae out jrcxz (bad) xor rex.WB add (bad) rep jmpq loope outsb movsb cltd repnz insl insb repz scas sbb or pop (bad) lods cld and outsl repnz popq lods jrcxz xchg mov sub lahf lods sbb xchg lods sti (bad) (bad) popfq (bad) jno xchg lods add std pop xchg hlt lods rex.WRXB cmp pushq or decb lret rex.WRXB repz jg orl subb pop nop jno (bad) insb push mov out mov xchg xchg sub lods jo pop and or stc mov mov and lods xchg bndldx rex.X mov sbb lods sub shrb (bad) sti (bad) test in fwait push jmpq xchg xchg (bad) push jne (bad) add sarb mov mov clc mov rex.W lods (bad) out or (bad) leaveq lods adc icebp mov and sub fidivrl mov fst mov movslq push xor test lods push mov mov test lods test es lret movabs adc push rex.RX mov cmp pop divb pop cltd cwtl scas xchg lods cmp data16 addr32 pushq rex.WRB mov lods xchg idivl repz mov lods lods (bad) push movabs js (bad) insl lods lods cs in outsl fisttp rex.W adc jo jp in rex.RX jrcxz scas mov (bad) cmp outsl mov not data16 pop rex.WX rex.X (bad) rex.XB sbbl xor loopne rex.RXB rex.RB rex.R or (bad) lods jne mov not out lods hlt pop (bad) int or imul (bad) lret lods (bad) int scas sahf (bad) lods sbb jmp (bad) lods ror xchg imul hlt movsb mov rex.RXB jo mov adc mov (bad) retq jmpq (bad) (bad) retq (bad) xchg sbb adc lods cmp in xchg stos int3 cld lods or sbb sbb mov imul ficoml adc lods repz (bad) mov insl scas or sub in mov xchg insb jbe xor mov (bad) sbb or sub add pop xor mov std (bad) movsb rex.W imul cltd xchg add and add shr lods pop push pushq mov mov lods xor mov lahf outsb adc lods movsb (bad) sbb jg xorb idivl add jmpq rorb xchg fs cmp popfq pop incb (bad) cwtl mov xor or rex cmp adc (bad) lret adc (bad) andl sahf (bad) lods (bad) (bad) repz add and add addl cmp push mov retq fs (bad) (bad) adc shrl (bad) sub in jmpq sub psrlq lods sub int3 xor lods repz add (bad) cmp test or adc add rex.WRXB movsl fwait adc lea rex.R subps retq in lods rex.WRX fs cmp mov in popq movsl cmp fadds movabs fcmove fildl lods retq rex.RB rex.WX movabs mov pushq (bad) pop lods stos out (bad) (bad) (bad) xor mov push xchg in mov out test fcoml pop (bad) in sbb test jge lods ror mov cld test (bad) in imul (bad) pop add push add lods fsts cmc and (bad) xchg std fsubr lret sub clc xor mov andl loope xchg mov (bad) decb movabs int3 jle lock mov xor push je sub adc lods pop fnstcw pop lods xchg mul lea (bad) (bad) (bad) adc adc nop and jb pushq fwait callq popfq lock mov lods sti adc enterq frstor mov lods push int3 and jle (bad) (bad) lods adc outsb leaveq pop movslq (bad) push jne cmp (bad) pop xchg (bad) clc mov lods sahf and cwtl jo rorb or mov cmpsl pushfq adc lahf and xchg (bad) adc stc rex.WRB icebp cmc lods or add mov xor lods or cmp xchg movslq imul pop (bad) icebp lods lahf adc sub add pushq movabs pop out jae in sbb jb (bad) mov stos xlat (bad) fldt nopl mov xor sbb (bad) (bad) hlt xchg int3 or cld mull sub shl cli fnsave cmp and rex.W in addb shl mov (bad) hlt lods (bad) icebp lea cli negb cmp lods mov jle adc shrq jmp pop loopne add push adc sub push stc mov mov xchg and nop test movabs mov and leaveq jo or mov in lods push adc cmp lods movsl mov jnp cmp or jae cmp mov adc andb scas lods push (bad) repnz callq retq pop xchg jle adc retq test cmp and cmc rex.WR mov xchg jp mov lods (bad) shll cld lods adc pop sub imul pop lods imul jae js rex.X lods ror out rex.RX in jbe lods (bad) (bad) cmp (bad) jrcxz,pn nop movsl or test mov out and lods (bad) rex.X jo (bad) stos shrl sti ja in or xchg xchg movabs rorb mov pop clc jmp add lahf (bad) ds (bad) mov movabs jno jg in sub stos sahf movabs or xchg hlt pop (bad) (bad) mov mov mov sbb insl sub rex.XB and lods rex.W stc (bad) cli lock lods insb pop xor mov cltd hlt sbb loop notb in test pop (bad) lods (bad) or cmp and xor mov (bad) lods adc cmp loop mov jmpq mov cs pop mov out stos jp je enterq lock mov nop lods shlb jge adc rex.RX int lods (bad) retq adc cmpsb (bad) stos fisttpl add xchg rex.XB nop mov add mov loopne retq movsb push faddp jno push lods adc mov (bad) fcomi lods sahf sbb icebp lods push rex.WRB pop (bad) adc loop pop (bad) jle and movabs or lods cmc lods cmpsl pop shrl stos jrcxz (bad) rex.W lods jne mov fwait (bad) push enterq in roll lods mov and movabs movabs movsb in mov mov fwait rex.WR (bad) mov (bad) test stos jmp roll roll js (bad) iret std movsb mov lods loop loope cmpsb clc mov xor rex.RB jne or (bad) lods cmp stc sti mov (bad) rex.XB imul test rex.RX cmpsb mov in cli lods (bad) xor rcrl lods cmp sub pushq lods in in test rcrb movsl xchg rex.R imul (bad) cmp wrmsr lods sarl sub jnp adc adc sub int jmp add insl cwtl iret rex.W and mov fldl sub adc movabs in cmp movl mov shlb jno (bad) lods fldcw sar (bad) add add lods jne push outsl mov fldt cli pop lret lret xchg ja xorb mov roll lods and lods adc test lods rex.WRXB cltd movabs fwait (bad) mov push mov mov pushq cmp (bad) outsl clc xchg in rex.WRXB fsubrs lods shrb cmpsb (bad) mov lea jbe or pop jno out lods jne (bad) std add in sti stc (bad) or rex.XB scas mov sub (bad) adc push jmp (bad) rex and mov cmp (bad) xor xchg sub out xchg (bad) rcrl (bad) (bad) jne sbb or popfq idiv fbstp rex.WRXB rex.WRX lods cwtl rex.X xor imul loop lods push int3 fsubl adc add notb bnd rex.WR icebp in ss cmp je or cmpl xchg mov (bad) scas (bad) (bad) cld lods clc mov lods mov jbe sbb fbstp mov rex.WX xchg jae lea cli fsubrs fcoml sub rex lret scas add sub xchg sbb ss repz cmp (bad) (bad) mov (bad) xor cld fwait mov rex.WR testb jbe rex.RB xor lods push movb lods mov int out lods cmp xchg add mov cmp cmp movslq rex.RXB out nop lods rcrl cli (bad) xchg sub mov rex.WR (bad) pop movslq or rex.RX (bad) sub repnz or adc (bad) or xor adc sbb and sbb mov xor or rex.X lods xchg rex.WXB cs fwait test push lods iret (bad) fidivr movabs or add loope callq add imul test sub adc insb sbb rex.RX imul sti (bad) jl fs lods retq cmp and std add sub sahf sbb outsl movabs (bad) ror sub (bad) jrcxz fisttp loopne icebp add faddl rep stos xchg in xchg enterq jb lods lahf push sub imul faddl xlat add movsb mov out (bad) lods and jo lods test pushfq lret lret lods (bad) stos movabs popfq jl lods cli fldl scas pop fsubr adc adc adc sub mov rclb fisubl add mov (bad) lock lret mov adc mov callq cmpsl mov movabs lea clc sahf stc xor adc and rex.WR lret sti fstpl xchg sbbb test mov roll jmpq sti shr in movslq mov sub scas loop fs pop mov mov mov jns mov cmp (bad) mov testb sarl mov rex.WB xchg pop outsb (bad) lods push mov movslq fwait jmp rex.W cmpsb cmc or mov jge lods xor mov mov add jo lods sub jl xlat data16 mov fs lods xor imul (bad) lods mov pop or (bad) pop pop lods or (bad) push rex.R mov mov fisubr insb outsl or (bad) lods jne mov lods push jmp pop pushfq imul stos cmp mov xchg stos (bad) jo jb icebp lods adc xor jg js xor pushq shr ss sub test repnz popfq add cmp outsl adc and movsb cmp cmpsb (bad) lahf and (bad) pop xchg sub jne add loope insb popfq or sub pushfq pop xor jo jae (bad) (bad) in mov sbb insl sti pop xor add imul (bad) add push lods popfq movabs fnstsw scas insl sbb add sbb outsl pop or movabs sub (bad) xor icebp cmp stos (bad) add (bad) div or lods pop mov xchg cltd fwait (bad) cli and xchg in (bad) fimul lods ds xlat push sub pushfq pushq mov mov mov lods cli jbe add stos push sbb insb insl jae out outsl push out insl (bad) mov lods mov and add insb rex.WRX test push or (bad) callq lods (bad) insl xchg (bad) sub xor (bad) rex.WRB in (bad) cld leaveq add jmp imul insb lods outsb (bad) jnp movabs adc jrcxz add pop (bad) mov (bad) pop sub insb sarl js inc cmpsb retq mov push out rex.RXB pushfq sti and scas lods mov sbb rex.X rex.WXB mov and (bad) xor xor (bad) mov movabs jnp or fldenv scas sub mov sub (bad) mov mov retq test or sub in scas xchg jnp adc mov cwtl push ss adc loope pushq sub push ja pop lods shrl (bad) xor (bad) retq xchg jrcxz (bad) xchg lods xchg out sbb out pop add (bad) jmpq jne lods movabs insl (bad) mov or fidiv outsl (bad) loope rex.WX in stc rex.WRB ss xchg leaveq lods fs sub mov in lods mov rex.WRX pushq xor insl cmc (bad) (bad) (bad) jle sub cs (bad) rorb jmp adc (bad) sub testb out lods in add loop (bad) push lods stos jne (bad) loope xor lods jrcxz xchg jns add rex.RB mov rex.RXB (bad) add lods xor cmp xchg stos fdivs mov lods mov lea sub callq vmovshdup sub (bad) rorl movsl sbb lods pop xlat subb sub add (bad) cmpsl test mov add (bad) test xor mov pop adc fmuls repz mov loop loop lods (bad) pop imul lret imul mov outsb (bad) lods fs rex.W pop xchg stos cmp loope movsb lods adc mov and (bad) jl lods (bad) or fidivl sbb std lods mov lods sarl cmp test xchg idiv sbb xchg in mov jbe movabs adc pop rex.XB repnz (bad) loop fsubrl (bad) sbb nop (bad) xchg data16 sarb in jle xchg pop (bad) lods addr32 cmc sahf cwtl (bad) movsl fsubrl test es rex.X or stos out mov pop lock jmpq lods (bad) mov (bad) sbb rex.RB enterq pop cs (bad) js test stos cmp rex.WRX (bad) retq sub lods mov sbb movabs sbb repz mov in ja shrb or cmc (bad) mov xor cli (bad) sub sahf mov clc add or (bad) push pop (bad) adc adc movsl insl fwait rex.RB in out movabs (bad) popfq rex.WR jg outsb jge mov adc lods lods xchg movabs (bad) es (bad) movslq mov lods rcrl shrd jmpq lods sub cmc out cwtl (bad) pushfq lods add and lods sub stos sbb fs scas fldl sub add lret xchg pop lods pop sarl fildll (bad) (bad) retq lods (bad) clc pop add lods mov and out in mov lock out and mov stos add or out pop add lods add ficomp (bad) push rex.WB add adc lods and mov movsb rex.WRXB jp lahf scas fdivp jmpq je add stos test jo repnz rex.RX rex.WRX imul add and int3 out mov cmpsb cmc rolb stos scas lret jnp lods mov sub xchg decl xchg lods adc jae xchg (bad) movabs rex.XB fiadd xor or insl lods rex.RXB gs mov or rex.WB scas test test (bad) push mov insb mov xchg imul hlt nop jno callq cmpsl lods sub jl (bad) out sub callq lret insb scas (bad) repz xchg lods jne mov (bad) sbb push xorb test sarl in lods jae cs jne test retq cli or clc lods jns sbb or loopne jnp jrcxz repnz rex.WR push retq rol cmpsb scas rex.XB pop sbb mov add lods or rex.R callq fidivrl sbb (bad) lods cmp lods xorl lods adc (bad) out rex.X jns mov outsl (bad) xlat fs mov movabs and lods je rorb (bad) repnz lods lods and sub push fucom in insb retq pushq xlat repz jae cmp xor movabs sbb (bad) lods (bad) push imul adc and stos lahf jrcxz andl (bad) (bad) and (bad) cli and cltd repnz cmp hlt sti test add lods (bad) shrb loopne fldcw (bad) cmpps xor sbb rex.XB jp test and xchg xor scas popfq cld nop adc jle pop lods movabs jl xlat sbb rex.B fldcw pushq mov out divb sub (bad) icebp adc out test add insl fidivl or (bad) xor scas outsl (bad) xchg mulb repz mov jne in (bad) mov xchg (bad) add retq push lods rcl sub mov movabs mov xchg rex.WXB mov lods cmpsl mov stc sbb lods jge (bad) hlt (bad) push mov int3 sub sbb xchg (bad) loope iret cli mov rex.WRX lods sbb (bad) and lock (bad) in (bad) jae or repnz movslq lods lods loope retq mov sub notb add mov jg (bad) or adc shl jae out xor imul in add jne mov xor lods ss addb (bad) lods sbb stc rex.WR (bad) in shrl jle fadd xor pushq jne rex.B cmp mov (bad) lods mov and adc test nop jmp fwait (bad) rcrb mov int3 mov mov pop popfq ficoml loop lods stos stos jns (bad) and lret and mov (bad) jl sbb lods int icebp xchg (bad) pop clc push add jbe js shl (bad) xchg push (bad) in cld test or pop pop (bad) lods (bad) out pop icebp loop xchg pop cld rex.WXB repnz lret push xchg lods cmpsl shrl rex.WR loop mov push sub add cmp and out in in js rex.WRX fwait or int jp (bad) (bad) fwait sbb sbb mov sarb movabs insl sarl (bad) test xor movabs (bad) loopne lea adc insb je movabs jns (bad) callq retq or cmpb xchg js scas mov gs in pop cs lods lods pop sub iret mov add (bad) (bad) movabs jrcxz test retq (bad) in ds mov lods hlt stos xchg fstl (bad) cmpsb sub jnp sti add shrb andl mov (bad) add (bad) and cwtl jp push mov lods rex.WRB push cmp test lods add jrcxz stc scas xchg sub add pop movabs test cld sahf lods mov std leaveq sub test vpandn (bad) lahf (bad) jl callq mov rex.W lock loop pushfq lods cmp mov out jl shrl movabs pop stos (bad) outsl or mov rex.RX lock cmp rex.R mov imul lods scas (bad) sahf pushq adc lret xor pop (bad) xchg in cmp (bad) jmpq insb sub (bad) cld lods fs push cmc mov imul sbb sti loope lea adc add int3 jbe loopne rex.WRB jb jmpq test lahf (bad) jrcxz xchg mov rex.WRB xlat cmpsb rex.R cld jg mov (bad) rclb or nop jno lods es jg cmp adc nop callq (bad) xor mov pop jnp mov es or sub push lods cmp xor (bad) test jrcxz cmp adc adc adc add cmpsl sbb sahf rex.WX adc push neg lods mov mov jb or cld fdivl sbb lods repz in cmp outsb (bad) or std mov test out and rex.WB decb movabs (bad) outsl adc lods jns (bad) movabs (bad) lods adc outsb rex.RX mov mov (bad) sbb hlt or lret xlat cld in lret add or rex.WRX sub mov in in movabs callq adc mov add mov and xlat callq or push jne movslq pop lods clc adc rex.WRXB sbb rex.WRB push setb mov scas rex.XB push lret xchg movabs out outsl lods pushq icebp movabs mov add jns mov xchg in movabs cmpsl (bad) imul mov rex.WRB stos leaveq xor retq (bad) rex.WR xchg mov sbb adc rex.WRX cld (bad) mov (bad) xorb mov add in add sbb adc lret lods (bad) (bad) rorl nop lahf and or shrl jbe fmuls add jge jle (bad) or ss gs mov pop clc rex.X scas cmp (bad) or in (bad) lods push push subl rex.R lods movabs pop lods jge (bad) mov add cld or negl mov cld sahf mov fsubrl (bad) outsl cmp pushq lret (bad) mov rex.R rex.WRB jb fmul jp lods and mov lods mov cmp sub std (bad) and xchg movabs outsl cmp mov fdivl pop lods (bad) xchg jg cmpsb sub mov cmpsl stos push xor jne mov clc iret mov jl enterq stos jmpq pop xor cmp mov adc rex.W cmp pushfq jge rex.WX addr32 xor lret lods fmuls push in lods adc out mov sub int fld (bad) push (bad) movabs cli jp pop (bad) repnz ds in pop rex.WRXB lret or xor int adc imul lret fisubr in js cmp loope mov jbe int rex repz lods icebp and xor pushq or jnp sub (bad) add jbe push pop add and in add xchg out in mov (bad) jg jb push rex.R jl rex.WRB repz pop enterq outsb in cmp (bad) fldcw and cmp test jrcxz jge in fldcw imul cmp sub fwait mov enterq (bad) clc sub pushq outsl leaveq test shrb (bad) (bad) fldt scas insb xchg outsb adc in or sbb test pop adc or adc lods loop cvtps2pd roll and or sbb mov (bad) rex.RX subl jns (bad) jg movslq rex.W jns fwait mov (bad) rex.RXB imul out lock cmp and cmp retq rex.X lods jg js pop fiaddl sti lods and mov faddl out test decl lret idivb pop jb test cmpsl (bad) (bad) hlt lods xchg scas push (bad) (bad) mov xchg lods xor (bad) addr32 mov add mov fld mov cs mov (bad) lods mov pop and rex.W fwait lods or loopne rex (bad) lods ficompl jae test cmp clc lods mov lret lods movsl ljmp add push cmp mov rex.R adc sbb add rex.B add cltd addr32 sub cmpsl callq (bad) in lods cli or add repz mov movabs or (bad) insb scas xchg repz mov lods mov jrcxz pop lods rex.WRX cmp jae movsb sub out lods movabs mov (bad) lods sbbb mov stos and jb rex.RX xor stc (bad) adc retq fisttpl adc lret stos adc (bad) fldcw js jae pop pushq sub out mov movsb imul lock rex.RB es rex.WRXB hlt adc mov callq sbb loop rex.RB imul rcll mov test (bad) jnp cmp (bad) roll cld outsb jp movabs out xor jl xchg mov xchg pop mov (bad) or push movslq or (bad) mov mov add adc xor cmc cld pushq and out sbb xlat mov movabs rex.WRX lods pop clc adc lods or fldt lret in lods test movabs nop xchg sahf out xor js movabs fildl ds mov and mov rex.XB mov xor adc sbbl lock rex.X outsl lods movabs mov in (bad) mov lods insl cmpb rolb sti movslq rex.R lods testl (bad) scas mov mov callq sub fsubrs addr32 fsts xchg (bad) lods adc pop sub (bad) (bad) lods mov cmp xchg (bad) popfq jg mov (bad) scas movabs mov mov (bad) out xchg push lods (bad) xchg shrb js cmp retq movabs add or pop insb (bad) and jrcxz icebp cmp lahf add adc es lods mov loopne cltd mov jg and lods movslq xlat jno jl lods push pop xchg jae lock adc fnstcw fisubrl cltd rex.R test (bad) or jmpq stos icebp loop cmp pop rex.WB lahf mov add mov fcmove or insl and lods jg add es mov mov repnz movsl jo xchg mov (bad) outsb rolb pop sbb (bad) leaveq cmp adc adc (bad) (bad) (bad) mov mov xlat mov (bad) mov sub lods or add and rex.X cs cmpsb xchg lea rex.WRB add retq lods or mov (bad) fcoms lods cmp orl lods jg rex.RB sbb xorl cmp rex.WB mov (bad) xchg cld or add loopne push retq fs repnz rex.WRXB cld push testb xchg loopne rex.R mov fldt jp jl xor rex.XB mov enterq and cmpsl out rex.W and cmp lods and xchg pop jae in rex.WB fwait scas outsl mov jmpq cmp loopne sahf fcomps and scas fiadd jl popfq in (bad) movabs rex.XB (bad) lock add fistl and stos mov xor pop scas (bad) add data16 in (bad) or mov push pop (bad) shrb fwait rex.WB lods popfq sub jmpq fcmovnu rex.WR fs cmp (bad) sub mov (bad) mov mov (bad) pop rex.WR iret or mov stos mov test jno jl xlat (bad) loopne movsb cmc adc lock mov xchg (bad) in popfq lods mov jae insl lods mov sub mov (bad) repnz push ja (bad) (bad) repz xor (bad) pop mov rex.W (bad) mov cmpl sub pop mov push scas movsl scas mov retq fnop rex.W jle shrl rex.X pop lods scas xor pushq mov fdivrl fimul cmp or fnstcw (bad) cmpsl data16 fstpl ss pop (bad) sbb lods enterq xchg rex.XB lods out push rex.R movabs test mov (bad) xor stos (bad) (bad) cli cld rex pushq lods push xlat negl and rclb or mov ffree lods mov add (bad) jge or imul movabs lret jl fisub push icebp mov insl sub clc (bad) sahf (bad) jrcxz mov test push add (bad) add jge icebp lret movabs xchg rex.RXB hlt mov lret scas int3 mov add addr32 addr32 add lret or icebp lods loop loope rcll lods lret (bad) (bad) sbbw rcrb (bad) mov (bad) movabs mov (bad) clc out outsl mov (bad) push (bad) pushfq rex.WRX int3 in fnsave clc cwtl insb or leaveq push push push lods jb sbb jg fisubr adc repz lods in adc rex.WXB xchg (bad) lods xor fsub testl adc push jle rclb shl rex.X jge fisubr (bad) or jg (bad) in popfq jo lods (bad) adc rex.WRX xchg test xchg (bad) (bad) je imul cmp rex.WRB mov and xchg lods xchg fs rex.WRXB fisubrl adc lods insb xchg mov jae movabs (bad) lods adcl movsl mov rex.WRB mov add imul lods mov xchg pushq movabs sub fstps sub stos lods jae or rex.X jne xor movabs (bad) lods adc fdivrs fldcw push add or movabs insl add (bad) adc movabs repz pop data16 sub add or fiaddl cmpsb vcvtdq2pd adc stos rex.WRB push jmp rex.WR mov or (bad) stos cmc and and push sub mov and iret and out (bad) adc mov leaveq retq fbld jb stos mov adc mov mov (bad) (bad) cmp subl lods (bad) fcomp retq lods loop cmp (bad) lods xchg sbb rex.WXB xorb insb rex.WX xor lods mov cmp lods rex.WRX rex.RB rex.X (bad) (bad) ja pushq cmp sub xchg hlt jns rex jrcxz (bad) lods sub scas in lahf mov mov jrcxz (bad) (bad) fnstsw pop scas rex.RX sbb fucomi rex.RB test in or lods ja fcoms mov (bad) cmp add (bad) (bad) popfq xor lods cmpsb mov pop fnstcw push xor in sbb (bad) lea retq rex.W (bad) fidiv cld cmp lret mov shrl cltd and test iret (bad) in js jle loop test ror rex.W fs xor in lods add sbb (bad) mov stos movabs push lods sub jl lods repnz pushq psrlw in outsl retq or movabs stos add leaveq add loope (bad) lea adc (bad) cmp out xor pop stos jnp int fstpt jmpq lods sarb sub enterq lods mov xor sub mov rex.WX es rex.WR or cmp lea rex.RX (bad) loopne xchg lods (bad) loop jae mov lods (bad) stos cltd std es leaveq pop (bad) lods nop jl icebp cmp test subl mov lahf and lock rex.WRX test pop leaveq cwtl (bad) or sahf and in jo jg xor in adc lods mov rex.W test adc pop mov and (bad) (bad) push popfq rolb stc cmp and callq xchg lods adc loope insb mov mov rex.WR or test lods fistpl (bad) roll (bad) and mov cli pop lods js lret cmp test scas jl movabs mov rex.W insl xchg rex.WB adc pop mov mov (bad) rex.WB add (bad) sbb mov lods adc mov jo xchg outsl mov push out lods std jae xchg pop shrl sbb sahf ja jrcxz rex.WR int mov (bad) rex.RX lods mov mov add push or fstpt mov fisttp lret insb and xchg mov fcmovbe loope rex.WB (bad) lods jne (bad) in sbb lods lods mov pop rcr sub xchg (bad) or (bad) sub shlb scas adc ja (bad) jmpq add cltd ror hlt mov mov mov cmp pop or lods pushq (bad) cmpsl mov rclb sbb pop mov lods pop subl (bad) lods cmc mov movabs enterq cltd mov cmp sbb lods xor jp xchg lods and pop (bad) (bad) xor xchg sub xchg rex.WRB (bad) pop in lods and jmpq mov rex.WRXB push (bad) sahf jnp lods and (bad) add sub rex.RX lods rclb fcmovbe movl push imul insl out (bad) and movabs scas mov (bad) shll pop rex.WR rcrb push lods sbb (bad) xlat (bad) lods and js rex.WRX lods sti retq sub icebp gs int3 pop fldcw jge loop xchg mov adc (bad) sbb lods jnp push add xchg stos lods (bad) mov xor (bad) lods pushq pushq jmpw sub xor (bad) retq (bad) adc test (bad) outsb jae movabs je xchg loop fcomip mov scas bts rex.XB out sbb test add sbb fnstsw shrd outsb cmp add lods xchg js imul fwait adc je sahf div pushq jo xor add mov cmp pop xor loope sbb xchg callq or rorl movsl loop lods push xchg (bad) mov je or nop stos rex.WRXB jns (bad) pushfq retq mov or orb (bad) jl repnz leaveq lods pop in add in insb pop clc lods retq nopl lea stc callq lods xchg test adc pushfq add shl pop cmp (bad) insb (bad) mov jbe (bad) (bad) lods lea jae movsb out rex.WRXB retq (bad) mov lods insl pushq test rex.RX sub sub loopne jae pushq (bad) int jo mov (bad) movabs rex.RB movabs insb loop test mov sbb fisttpl (bad) (bad) test and mov xchg (bad) (bad) mov insb (bad) pushq in mov sub icebp setp fnsave mov (bad) cmpsl xchg lret movabs lods lahf outsl in in (bad) int3 (bad) xor pop xlat mov rex.RB sarl rex.WX movabs in shll (bad) fisub adc pop add xor mov cmp cmc outsl and fstpl in cmp mov pushfq loopne pop push sub vmovaps rex.R (bad) mov cli (bad) out mov xchg shll roll hlt jae in mov rex.WR rex.XB outsl flds ja and pushq rex.XB mov testl jmpq pop cli mov in xor lods add push adc (bad) lods rex mov lods xor rex.WRX lahf xchg movslq outsl out mov and stos (bad) mov add clc mov (bad) xor lock lods je stc imul in adc sub sub enterq jbe jnp (bad) pushq imul cltd or or scas lea rex.WR scas movabs xor lods sahf push rcr shll (bad) sub (bad) jmpq lods mov mov sarl (bad) scas test lahf (bad) sarb lods callq std lods in hlt (bad) cli mov pop retq add test movsb and xlat retq lods or test (bad) int je adc ds and lods cld (bad) mov pmulhuw cmp xor callq rcll movsb andb cli fld push imul gs and jb xchg or test or adc jns sub xor and and push sub in iret sahf xor sbb mov lods xor or cld (bad) (bad) mov rex.WRX out jg lods loopne out rex.WRXB (bad) pop lods xor sahf sub cmp pushfq callq (bad) rex.R repnz outsb mov sub pop ror pop cmc or add rex.XB pushfq push rex.RX repz push rex.WB out ds jae xchg int3 (bad) leaveq lods pop jno insl cmp loope cltd pop (bad) shrl (bad) je rcll sahf icebp adc js lods mov xchg fwait (bad) rex.RX pop add rex.R or data16 push add in out mov xchg movabs lods cmc (bad) or (bad) (bad) data16 or adc cmpsb movabs test pop iret (bad) rex.RB je xlat outsb mov pushfq (bad) movsb pop (bad) imul (bad) cmp lods xchg push movabs xchg jae (bad) add imul ss movsb (bad) and xchg lods clc mov cld jbe adc sbb movabs ja lods sbb out push lods lock xchg ja add lods imul and xchg and callq rex.R (bad) jbe movabs pop (bad) insb rex.RX lods xchg mov std (bad) (bad) incl rcr fildl scas lret rex.XB es (bad) pop lods ss jae pop mov adc jmpq pop rorl sub jns adc insl faddl sub (bad) rex.XB outsb jb rolb repz and (bad) xor movabs or shlb jo xlat fildll add lods cmc rex.WRB and xor sub shrl pushq sub stos rex.WX mov js subl sub mov ja mov add int3 fldt xchg (bad) out cmp push (bad) pop lahf fadds lret in adc (bad) lods push movsb adc sub (bad) movabs (bad) sbb (bad) jne or and mov repz rex.WRXB sbb lods bswap scas outsb sbb or xchg cmp cli (bad) fildll sarl (bad) pop enterq and pushfq rcrl outsl subb (bad) ja xchg stos lret mov sbb xchg push subl cmp (bad) scas lods add (bad) jg or rex.RX rex.R pushq lods (bad) loopne xor rex lods (bad) std sbb mov mov scas and loop,pt movabs rex.R scas repnz ds rorl gs mov jne xor xor cli adc cmp ja faddl cmpsl out sub xor (bad) mov mov divb jmpq subl out jrcxz adc sbb stos cmp cld sbb lods int or cmp hlt test and iret je mov lods gs sub xor mov leaveq ficomp add xchg movabs setg rep je (bad) ds rex.XB rex.WX jmp (bad) rex.WRXB pop rex.W stos shrb cld lods push (bad) or fs iret fwait (bad) mov xor andl repnz imul mov (bad) mov (bad) (bad) retq and bts shrb rex.WXB sub enterq data16 lret rex rex.WRXB pushfq xchg lods rex.XB (bad) hlt adc mov outsl rex.WRB rex.WRXB sbb (bad) lods fidivrl rex.XB jp imul and rex.WRXB pop (bad) mov pushq fnsave sbb (bad) (bad) jmp (bad) (bad) and mov fisubl insb (bad) rex.W movabs scas adc lahf fnsave test pushfq cmp insl push pop and lods rcrl sbb cmp movabs cmc fidivr in and jge ss lods xchg rex.WRX pop sbb mov dec (bad) enterq lods or ja pop outsb (bad) movslq xchg rex.RB mov cwtl or (bad) lret xlat and movsb xchg mov adc int3 (bad) (bad) pop (bad) add or rorb insb test adc lods stc (bad) adc movabs popfq lods (bad) (bad) rex mov jrcxz mov rex.WXB imul out sub mov in out test cmpsb mov enterq sub add mov sub lods adc pop or (bad) sub lea pop divb retq test push loop neg (bad) fisub mov adc pushfq shrl (bad) (bad) or or int mov in imul rex.B xchg and in xchg int3 lods pop rex.WRXB (bad) neg movabs (bad) pop (bad) lods imul pop shr lods (bad) adc jbe (bad) ljmp and fs xor (bad) (bad) mov cmp (bad) lahf xchg insb add lods mov xlat (bad) sub scas cmpsl and iret imul mov sub (bad) rex.WRXB cltd adc sti cmp int xor (bad) and mov rex.RXB pop rcrb lods fidivr jb pop scas int addl (bad) sub adc rex.WRX or test mov jge je (bad) lods fisttpl jle adc lea push cmp movabs (bad) test lock cs lods insl lahf cmp and ss jnp rol fs sbb jmpq cmp ss rex.XB mov stc mov pop rcl and lods rex.WB rorb rex.WRX (bad) fwait psrld (bad) lods jle pop sub sub rex.RXB jl lods clc add sbb cmpsl mov cmp push jns repnz movsb (bad) enterq insb mov fdivrp (bad) lea (bad) xor cmp mov fstl (bad) adc rex.WRX out jrcxz xor std lods cmc add (bad) (bad) jb callq scas je sbb outsl (bad) js sahf push test test jmp cmp add (bad) imul addr32 in mov data16 push mov pop rcrl in push lods mov icebp repz (bad) rex.W (bad) rex.X (bad) rex.WRX xchg lret andl fldl insb cli pushfq rcr lods sub retq xor adc fs ja fstp test pop mov (bad) jl stos xlat scas push mov cld push icebp rex.WX lods sbb out ja popfq enterq imul lods in jmpq rex.WRXB add insb (bad) sbbb xor lods (bad) mov xchg out (bad) mov lods rex.XB (bad) xor (bad) (bad) in jl lods xchg mov sbb lods jge push pop stos fildl pop or push mov lods adc pop xor (bad) jne mov mov movabs mov imul and xchg add adc xor or add xlat scas pop rex.X jno rex.WX leaveq shr int lods (bad) (bad) mov mov cmpl insl in mov es adc data16 (bad) rex.X hlt adc lods cmp rex.WXB out (bad) lods repnz add rex.WRX movslq mov stos cld xor fadd push sbb repz rex.WR and lods mov or lods rex.WRXB ss xor (bad) sub sahf std movabs and ja retq stos sbb sub outsl test or cwtl jg je testl push sbb mov mov lods in je shrl scas lods sbb or gs imul hlt xchg pop (bad) and rex.R je jl cmpsl movsb pop add lods rcll js (bad) and (bad) cltd pop je lods mov cmp mov mov clc sub retq sbb lods mov and adc jle lods xchg pushq jmp lods (bad) or (bad) and jbe movsb bnd lods fcoml sub xchg rex xchg std lods orl (bad) fisubr (bad) mov mov and xchg int rolb jl pop lods es rex.RXB jg frstor faddl rcll and sub (bad) (bad) lods addb rex.X lods rex.RB sbb mov ds and sub xor cld pushq pushfq data16 cld pop movabs movabs rex out (bad) fisttpll mov test rex.B or lods and andl stos hlt cmc xor or lea pop nop stos test cmp mov cmp mov mov (bad) cld add adc mov int3 xchg outsb shrb lods pushq movabs cld insb fidivl lods push cmp sbb (bad) insl cwtl or mov and xchg lods scas test movabs mov lods (bad) (bad) cltd pushq cmc push and mov (bad) pop retq or movabs push sub or adc int3 (bad) jns mov add (bad) scas fs and rcrb (bad) movabs loop fldt (bad) imul fldcw (bad) pop and lock (bad) cmp scas jge movabs rex.W mov jo (bad) (bad) lods jp movabs negl jne sarl xchg hlt mov fstl mov sbb jrcxz push lret rex.WRX pop sub mov lods push fwait push and mov rex.RB (bad) xchg xchg movabs rex.WB or adc jne lock and retq loopne lods fnstsw jnp outsl sarb mov jo lods mov (bad) lock lods cld rex.WXB clc push sub sub popq (bad) mov or movabs jmp jo xchg cmp lods out jns stos rorb or sub mov mov cmpsb pushq jns mov lret or test rcll (bad) xchg test sub cs (bad) sarb mov add sub or adc (bad) mov and rex.WR mov jp jb or sbb xchg add lods push ja jne data16 (bad) mov addl prefetch mov retq jb sarb pushq movabs or mov stos or xchg sub adc or insl clc (bad) lods test adc mov out cmp test insl cmc mov fildll (bad) outsl adc sbb pop stos cmp sub mov (bad) loopne movabs stos sbb or mov stc jo hlt mov pop callq and clc xor (bad) lods mov add xor jg (bad) sbb (bad) in retq (bad) pop and cmp stos xchg jbe add (bad) movabs popfq xchg rex.B rex.R (bad) push lods cmc (bad) and std mov movsb callq lods cmp xchg rex.WR pushq ja in movsl mov adc lods and mov jp sub cmp adc (bad) stos xor push ss pop nop sbb lods mov sbb stos cltd cs rclb std or jge out imul jne test rex.WRB imul fdivrs pop jbe sbb fdivl lock rex.WR rex.WX push fidivrl fadd cli lods mov ss in mov je jnp cli jmp gs jp rex.RB scas or imul (bad) pop xor cltd in mov test rex.WR sub pop or movsb shrl mov adc or jge rol mov (bad) in (bad) and rex.WB (bad) mov push (bad) xchg or (bad) fsubrl lods roll lock fcomps in cwtl (bad) movsb cs xchg mov mov std mov rex.W cmpb xchg mov movabs sbb retq sub cmp mov movabs lcall (bad) pop int outsl adc mov cmp retq data16 (bad) (bad) adc xchg (bad) sti frstor movsl push (bad) ffree cli out sub xchg jmpq lods std (bad) repnz orb orl adc (bad) movabs xor lods outsl mov clc jl lods fnop rex.XB shlb mov out or sahf rol in and fcoml (bad) cwtl cltd sub adc (bad) movabs xor pop int3 push lods rex.B xchg loope (bad) test and (bad) in sub (bad) jmpq add mov xor hlt (bad) adc jo adc jo mov (bad) adc sub sbb popfw rex.WX (bad) mov rex.RX insb out jb lret cmp movl pushq int rex.WRB nop rex.B stos lret sbb pavgb cmp jno xchg sbb fistpll test cmp out or mov je stc mov or pop xchg add (bad) (bad) incl je lods (bad) rex.XB rex.WX rclb rex.WXB (bad) jo negb repz xor (bad) (bad) outsb rex.B imull addr32 (bad) xchg rex.R fisttpl pop sub xor ss sbb sub scas (bad) (bad) (bad) jb lods (bad) xchg movsl mov pushfq jle jp (bad) ja lock je sbb xchg cmp adc movabs cmc out mov cmp (bad) and (bad) rex.WRB lahf shr repz (bad) fisub push rex.X fsubs lods nop pop ds (bad) mov xor fsub lods jge scas xchg cli stos mov (bad) iret cmp push nop lods add rex.XB data16 imul stos int lods cmpsl xchg pushq sti and cwtl jmpq enterq lods lods imul and jle (bad) cmp and (bad) leaveq or mov pop xor jg fcomps stos and rep (bad) adc lods or fs or stc mov adc mov retq movsl (bad) cmp adc lods (bad) test scas mov pushq (bad) or mov add sub movabs rorl scas rex.RB jp xor cmpsb (bad) scas addr32 mov mov sbb out movslq adc mov ja cmp (bad) imulb shlb scas mov pushq push (bad) in xchg jno jne psubq (bad) mov insb lods sbb xor out (bad) sub rcl lret lahf test rex.RB rex.RXB (bad) xchg lods (bad) (bad) rex.WR insl or adc add xchg jbe mov sbb mov shlb fs lods jnp add vxorps lods jno (bad) cmpsl xor ljmp mov (bad) nop or xor push imul popfq mov fcoml in mov fs sub icebp lea lock mov lods ja mov lods and lods in pop (bad) movsl ja jg xchg lods lret (bad) sbb imul out lods incl not add je sbb jo lods mov mov lret jp (bad) repz adc adc decl jbe movabs or cmp mov (bad) pushq (bad) or mov pop jmpq (bad) sbb cltd sub xchg (bad) jae movabs movslq out push sahf scas mov (bad) (bad) mov adc movsb mov lea or mov (bad) rex.WB fidivrl rex.X (bad) or sub sub or cmp shrb rex.RX cltd and push (bad) mov (bad) and push movsl lods adc pushq movabs adc mov or lock stos lods rex.WB xchg lods insl jle jae (bad) enterq rex.XB (bad) fst bnd lods jmpq (bad) mov pushq cmc scas jl out jnp movsb imul pop out mov sbb out test mov sub repnz xchg jae or and loope insb jb (bad) cmpsb mov and cmpl lods hlt leaveq stos imul sbb lods mov (bad) lret mov (bad) lods pop icebp rex.WRXB rex.RXB mov out (bad) in xchg xchg rex.WRX push clc rolb add pop add lods retq (bad) (bad) jns (bad) movabs (bad) popfq incb sub js lahf mov mov (bad) cwtl xor test add or xor (bad) iret pop and test sarl stos sub mov popfq push jb add movabs mov (bad) retq mov rex.WXB pcmpeqw jbe mov pop (bad) test nop in jns pushq lods pop or add scas lret nop data16 jle lods adc push cmp sbb int3 (bad) negl add mov jg rex.WRX in stos pop lods xlat (bad) (bad) rex.WRX in rex.RB lods mov xchg in fcomi outsb or (bad) lods retq fucomip (bad) psubusb movabs insl ss or mov (bad) cld lods cmpsb sub int3 movabs stos pop (bad) in fisttp lods imul retq (bad) outsl std push test retq lods (bad) jp mov gs (bad) rex.WX clc shl movsb imul mov mov xchg push push lods and leaveq pushfq mov retq imul lods (bad) push sub rex.X fwait cmc pop cmp sahf adc je sub lods sbb sub jns leaveq pop mov cmc movabs sbb or (bad) stos adc sahf or lods cltd adc movabs insl js xor rolb ss or xchg fimull mov cli leaveq and outsb pop pop movslq add movabs jmp outsl movsb adc (bad) movsl or lods adc mov movabs (bad) sahf rcll (bad) in sub cmpsb xchg adc (bad) pushfq lods (bad) (bad) xor data16 or mov rex.WB mov pop lods or negl lods fiadd (bad) cmp decb lods sub mov add lods fild sub lods movabs cld retq adc (bad) insb mov xchg cli xlat push mov pop lods ds enterq insb lods (bad) pushq (bad) push (bad) subl xor adc sbb je lods mov add xor lods pop test rcrb fmuls sub rex.XB xor rex.WX (bad) lods mov mov callq (bad) sub loop sub movslq mov ss mov mov lret jge sahf sub (bad) (bad) mov sub push pop xchg xchg movabs jnp lods imul jl push (bad) (bad) mov stos rex.RX movabs mov rcr pop shrb pop rex.RXB rex.WRB (bad) add subl sub movabs and stc sbb imul (bad) test loopne scas test mov sub mov adc je pop scas pushfq (bad) in fldt lods sti jmpq jo idivl movabs mov cli jmp (bad) es (bad) popq (bad) rex.R jp fwait in adc out hlt (bad) xchg pop cs test insb lret fildll sarb movsb or adc retq cmp lods cwtl jl mov (bad) mov stos and lods and rex.RB lods (bad) (bad) cwtl cmp and (bad) addl test fildll out rex.WXB sbb or test faddl xchg sub je iret (bad) cmp sub rex.RB add xor (bad) (bad) ficompl adc ds lods sahf stc leaveq ficom jmpq push fs movslq xchg clc jrcxz (bad) pop (bad) lods mov sbb mov insb stos (bad) mov fistl roll xor (bad) adc lods loopne hlt (bad) pop (bad) sbb jl ja xorl retq and adc es sbb fisubrl movslq in mov xchg lods sub pop stos in movsb sbb xor or cmc (bad) (bad) xor movabs jle lods mov and movabs sbb cmpl movabs (bad) mov rex.WRX adc sub movsb incl jle test (bad) retq cmpsb jmp or (bad) add insl jns mov xorl cwtl test sbb fldenv (bad) pop rex.B rex.WB scas mov es pop pop js lret jnp mov and (bad) add scas xchg test clc xchg push int shrb (bad) mov xchg (bad) insb push jrcxz jno loop movabs (bad) (bad) sub xchg fwait rex.WR (bad) adc comiss rex.WX and in (bad) mov lods faddl pushq enterq imul lock mul xchg sub ds cmp (bad) repnz (bad) cmpsl xchg mov xor sbb imul xor nop sub leaveq lods and adc rex.R (bad) jae cli rex.WRB rex.B rex.WRX rex.X rex.WX (bad) xchg retq out (bad) pop fwait (bad) (bad) mov mov mov jl lods jno jb out or (bad) and jmpq out rcrl lods lahf mov rex.WRXB sti movabs or cmp pop je sbb (bad) lods (bad) loopne lods pop mov in cmp test fisttpll stos std rex.B lods in mov lret in xor adcl push rex.R out enterq (bad) add add pop sub rex.WRB movabs out lods retq push rex.WXB mov rex lods std (bad) push cwtl or (bad) jb rcrl xchg js sti neg movabs (bad) rex.XB mov lret or cmp mov scas lods and cmc add rex.WRX mov (bad) jbe mov xlat add sbb sub (bad) (bad) lods repz (bad) jb gs lods xchg (bad) fimull fildl sbb fmul rex.WRX rcrl lods mov xor xchg (bad) push mov rex.WB rcl cld fsts in in callq mov std (bad) xor adc mov sbb rex lods mov mov imul int3 mov sbb gs lods xorb sub (bad) xor mov jbe in (bad) and out (bad) mov (bad) int3 (bad) push (bad) and movabs push out mov test push shrb fwait xchg push sarl insb negb adc sti lods rex.WRX cmp (bad) subl cmp int3 iret outsl movsl jle mov pushfq lods (bad) cmp add rorl test sbb int sub and mov jle ja negb movslq pop sub adc (bad) and xchg ja (bad) or rex.WB iret (bad) shrd movabs lods jmpq enterq test mov movabs mull insb and lods push (bad) rex.RB sahf xchg jne mov outsl jns mov and sbb cltd add lods (bad) push or push (bad) cmp lods rex mov (bad) jnp adc pushq lods fstpt shlb test xchg lods stos push cwtl insb (bad) sti cmp lods (bad) ds sub push sar or fildl sbb cmp lods js and lret sub (bad) and lea pop rex.WRB stos scas xor jo (bad) (bad) lods lea sub fcmovb adc and or movabs popfq (bad) scas (bad) cli pop test scas retq vcvttsd2si ja (bad) mov lods out cli add fdivr popfq lods lods add leaveq mov fwait rcll rex.WR sbb xchg pop sub out mov lock lea data16 xor mov imul mov callq movabs pop mov (bad) adc insb sub pop mov sbb iret xlat mov or (bad) (bad) lret scas int3 add loope jno shrl (bad) xchg mov lods movabs lods or jbe push mov sbb pushq cmp popfq movabs push test shr outsb push lods ss insb popfq rex.WRX sahf pushq sbb in and mov mov pop xor mov in and cwtl sub xchg int lods mov (bad) or or jnp mov fcomps testb jne xlat (bad) addr32 and lods add (bad) mov (bad) out lods jl add cmp test xor in add adcl movabs data16 mov xchg lods orl (bad) cwtl rex.XB movabs (bad) ja jns and rex.X mov movsb mov xchg pushq lods ja and leaveq shlb xchg (bad) xchg xlat lret cmc addb imul lods or mov in movabs loop lods jnp imul sub insl jmp add icebp callq sub add jne jmpq fstps xor push movabs rolb cmp pop cmc lahf fucom in mov (bad) int sbb jb add xchg jb stos xchg push iret mov and mov and out fidivr pop and rex.RB sub xor mov test lock mov sbb xchg stc in add in sbb push rcl sub test stos lods pop push mov rex.R fsubp lods sbb rex.WRX sbb (bad) (bad) (bad) mov pushq rex.WB cs test jnp jg lods ja repz out scas mov (bad) movsb xchg (bad) ja nop (bad) rex.WRB (bad) mov sub adc mov insb cmp pop cld out lods out (bad) lock rex.R rex cli jae xchg (bad) insl adc lods mov test and mov and test fsubrl adc cwtl pushfq cmc (bad) fidivr mov in mov add (bad) int rol sub sti in cli cld out (bad) (bad) (bad) lods movslq xchg cwtl pop sub movsl retq lods scas rex.RX rex.WR fwait std (bad) clc (bad) cld (bad) nop lea lods cwtl stc adc movsb out stos lods rex.WR js lahf in scas rex lods adc in xor (bad) mov jbe lods cs jp push xor adc rex.RX (bad) jle notl xor in xchg insl jb nop sub pop out (bad) rorb (bad) add (bad) outsl fisub (bad) in add rex.X pop (bad) popfq cmpsl mov in lahf jo sbb rex.X lock xchg retq rex.WR jmpq mov pop movabs mov mul repz movabs rex.X fsubrl rex.W repnz lods fisttpl push jns fsubrp rex.WRXB rex.W mov (bad) retq lock add pop shl icebp (bad) stos pop scas rex.R adc sbb sub mov adc pop sahf lret cli add sbb rex.RX cmp or xor retq popq (bad) je lods (bad) sub adc and adc (bad) subb lret (bad) or add insb rorl loopne adc push cwtl (bad) xor lods (bad) xchg mov xchg rex.WB jl addr32 lods loopne mov rex.RXB adc (bad) mov push (bad) rolb jae lods or rex.WXB cmp sbb cltd mov and loope rex.WR mov jnp or push lods (bad) cmovne movabs or xchg pop mov rex.WR mov shlb add or jo mov movabs xor push sub sti rex.WB mov cmp jae retq sub stos jbe mov stos (bad) (bad) cmc and fsub rex.RX cwtl and (bad) mov lods push mov outsl lret cmpsl fdivr sbb lods fldenv out or lods push (bad) mov pushfq lods mov (bad) (bad) retq (bad) sahf xor push lods (bad) jae (bad) mov loop mov lods lods xchg fistl cmpsl jnp callq adc lods xchg push (bad) ror rex.R rex.WXB lods add hlt mov adc mov mov mov cwtl out push lret lods sahf adc js jnp fs lods stos jge mov mov in lods movsl pop sub mov jno xchg sub outsl int3 lods xor decb movabs push flds lods movabs (bad) add sti nop rex.WRB out lods (bad) (bad) out rex.W ss fwait pop pop fidivr retq cmp jrcxz mov add (bad) stos (bad) pop pushfq fwait (bad) mov test lods and lods rex.XB fimull hlt lods retq stos lret fldcw push jge lods cmp loopne out push out push jae lods lahf cld insl enterq sub test rex.WRXB pop lea fsubl (bad) imul xor cwtl lods movl or push and rex.WRX xchg mov insl rex.RXB cld gs insl subb pop fsubr mov movabs (bad) pushq and jge and mov notl jbe sbb adc out mov data16 mov and jns adc (bad) incb mov (bad) sub jge or ds xchg mov lods and mov test mov (bad) (bad) test stc add or xor scas and sub sarl sbb or repnz and and cmp mov push movb lods mov (bad) lcall test adc lods insb fwait (bad) sbb mov jmpq and push add jmp xor (bad) outsl lods movabs rex.WRB lock sub jae fsubrl push es (bad) loope sbb ja rex.WRB xor rcr sub fstl mov xchg lods mov out rex.X gs push sub fs (bad) lods jae pop loopne pop mov (bad) add outsb cli jg clc sbb add rex.WRX and mov lods xor mov and mov push rcr mov xor (bad) push sub xorl outsb repz retq rex.WRX pushq rex.WX imul mov or xchg jbe fildl in iret sbb mov rex.R jne,pn loop xchg pop lods adc enterq lods pushq (bad) lea sub ljmp (bad) sbb movsb stos lret fdivs xchg rorb (bad) jmpq jnp (bad) (bad) outsb fwait lock adc sub scas mov pop cmp test lods jmpq jo rex.WXB xchg push fwait sti mov add iret (bad) mov fwait or (bad) lods gs sub cmp scas sub sti (bad) cli retq jg lods jno and xchg push (bad) fsubr pop mov add rex.W pop andl lods cmp xchg out adc lods insl mov cmp fiaddl imul insb outsl cltd pushq and outsb jmp mov (bad) fist shrb orl lods cli sub jle adc xchg lods movabs xor loop out lods jne cwtl outsl xchg mov rex.WR shlb (bad) pop (bad) lods shrl lods mov jae fwait xchg movslq (bad) xor (bad) lods (bad) in sbb mov cli lods mov or shrb push mov xchg rol xor sbb adc rex.WXB jbe subb movabs enterw jl xor mov lods mov jp int3 imul rex.WRB or imul lods push fdiv (bad) sub lods cmp rcrb movsl or mov scas pop stos lods jno rex.WB push xor nop lods jmp and pop mov lods in (bad) mov (bad) lods rex.WRX retq rex movabs sub xchg push shrb fsubr xchg shll leaveq (bad) (bad) jne cli mov movabs std loope lods or movabs movslq and (bad) (bad) cmc push mov cltd adc push jno xchg out sbb cmp or push movabs cmp ja sub adc repnz push notl test lods sbb push and movabs insb (bad) cmp rorl loopne lods mov (bad) lods rex or lods sbb mov pop xor xor xchg cmp push lods jle push shll jo (bad) mov and rex.WX clc rex.RB rex.WX mov mov (bad) pushfq mov sbb js adc adc (bad) lods jmp pushq mov push test jg mov rex.XB rex.W jns lods sub jle iret (bad) mov rex.XB (bad) rex.WR mov lods shll (bad) mov or sbb xor enterq mov xlat xchg add adc push mov sbb add push in roll faddl lods retq lea insb jl cmp iret lods fsubl (bad) pop cs lods scas lea not adc rex.RB cmpxchg8b (bad) int mov pop jae add lods add xchg fwait lods sub movsb mov or (bad) jl scas psraw lret push or int3 lods rex insl movsl (bad) xchg stos test jo (bad) out lods xor jmpq mov rcll (bad) imulb and (bad) sbb rex.RX mov rex.WX rex.WRXB pop mov jg (bad) (bad) (bad) sub jnp xor test lods loopne or cwtl and (bad) jmpq sbb lahf in lods testb push lods cs xchg iret rex.WRB int3 int3 (bad) xchg rcrl mov mov pop ja movabs add mov lods jle (bad) (bad) retq adc mov lods rcr (bad) jns insb lret lods movabs (bad) lods adc pushq (bad) (bad) pushfq lods sbb jle sahf jnp adc sahf sbb hlt sti pop scas rex.WR rex.X scas out loop mov or adc sub sbb (bad) (bad) sahf xor mov loop rclb insb adc rex.R (bad) movsl mov and rex.RXB (bad) (bad) (bad) lods push clc (bad) and xlat sbb movslq js pop lods xchg fildl mov jl or mov rex.WR movabs rex.WRXB (bad) fdivrl xor adc jnp int testl sbb rex.WR sbb lods sub iret mov rcrl scas scas callq cmp xrstor (bad) (bad) mov (bad) (bad) adc cmp pop mov mov sbb int3 jbe sub adc rex.WRXB fwait push test (bad) shlb mov clc (bad) int adc mov lods rex.RX rex.WR (bad) mov leaveq scas stos (bad) (bad) shlb mov rex.X (bad) lods rex.RXB (bad) scas adc pop sub mov callq jno (bad) cmc rorl lods sub clc pop data16 lret adc out pop add int3 pop cltd mov or shlb sbb (bad) out pop sub retq fistp mov scas in jb xchg pop clc adc rex (bad) rex.WR std (bad) mov (bad) cmp pmuludq rex.WR movabs cmp rcrl or xor loopne and lret fcom or outsl lods mov fwait int3 pop imull test js pushq xor (bad) int lea test pop (bad) and mov jae rex.WR imul leaveq imul or jrcxz push mov sub lods pushq stos repz sub shlb jmpq (bad) lods jb xchg popfq (bad) cld scas push pop mov sahf mov rcrl repnz outsl cwtl (bad) in xchg jns fwait mov add lret sbb int lods cmpsb fcmovbe movslq pop mov mov xor fidiv sbb int cs rex.WXB rex.WRXB (bad) cwtl mov xchg xchg out lods (bad) mov retq lods jmpq test movabs xor (bad) loop pop cltd rex.R movabs out lods (bad) or xor xchg and pop sbb mov push or xchg fbstp rex.WRXB gs sub sbb sahf (bad) test push cmp or adc rex.X shrl (bad) scas (bad) cld (bad) lods nop mov (bad) cmp xor lods (bad) and lret push insb sarl rex.RB movabs mov or mov xchg rex.WR repz addl pop add in (bad) rex.RX je jo cvttps2pi cmpl sub lods mov add (bad) lock pushq rex.R cli fs mov movsb movabs retq adc ficomp (bad) movabs or lods xor rex.WR cmp lods xchg lea or loop test mov cld adc rex.WRXB rex.WR pop mov jo sahf jno subl lods repnz (bad) fwait jmpq xchg mov cwtl lods lods orw fnstcw loopne push lods adc test xchg (bad) sub rex.R rex.WRX lods cwtl mov insl fwait js movabs cmp sub stos push xor (bad) add jns sub push sub mov out enterq scas rex.RB rex (bad) pushq js rol mov or (bad) (bad) adc flds and lods mov cs sub (bad) lods xor je (bad) adc scas sti (bad) mov fnsave insb push mov movabs callq pushfq repnz (bad) rex.WXB rcrl or std sub addl test and adc rex.RX int3 (bad) rex.W scas (bad) test rex.RXB push hlt jb adc out movsb movsl mov xchg insl scas push ja pop cs cli or jo (bad) (bad) xor adc jbe orb lods xchg add in sbb mov pop xchg (bad) lods (bad) sbb cli movabs rex.WRXB sub lods xor mov add or addr32 cld xchg rex.WRX (bad) cli mov lea pop subl cmpsl mov in test stos (bad) mov add sub cltd js fisubrl iret mov stos fsubs lea ds xor stos (bad) divl (bad) scas retq in scas mov (bad) or scas and insb sahf jbe (bad) (bad) je fistpl jno (bad) lods outsl add in sub in add lods add mov loopne mov (bad) lods push dec add (bad) and cli js test adcl xchg xchg jp adc sub test test insb jb sub movabs out xlat lods xor pushq test push nop scas adc mov or in pop leaveq scas rex.RXB jg movsb (bad) sub retq lret lods add test int (bad) imul push loop xchg imul lods movl inc movabs sub mov push int3 out movabs cs lea out enterq sbb and jbe xor (bad) cmp jp (bad) je movslq stos add sti add mov insb sub retq in mov in rex.WXB add mov rex.WX jo (bad) adc or rex cmp jnp and rex.WRX lea (bad) test cmp push (bad) jo mov fcoms cmp scas rex.W fwait sub retq lsl pop (bad) retq jns mov imul fisubr push lods stos scas insl ror adc xor loope and jne orl fsubs (bad) out rex jo in mul loopne test sbb lods mov scas jne jmp lods nop mov rorb add callq test xlat push sub std xor cmc (bad) (bad) retq inc outsl pop stos add (bad) imul sub sub mul sub or leaveq (bad) rex.RXB movsl jb jle xchg hlt mov in scas ja sbb jno fsubrl psubusw (bad) add lods (bad) and jne,pt push sub sub hlt mov jge fsubrl mov lods insb (bad) in xor int3 jno (bad) cmpsb cltd (bad) roll (bad) add ja out cld xchg lods jrcxz mov cmc jl lods push pop lea clc scas lods cld iret addr32 lods sub push add (bad) (bad) mov xorl lods loope fildll lods sbb adc or (bad) pop lret xchg lods sub mov sub jns (bad) callq add loope mov sub pop lods shrb xchg jb rex.X movabs push mov xlat sbb rex.WB lods sub rex.B rex.RB in (bad) (bad) and or out xor lahf lods sti cmpsb (bad) adc data16 stos xchg clc mov lods (bad) (bad) sbb cmpsl scas mov jb sbb int3 add ficomp lods int fadd pop insb cmpsb (bad) mov rex.WB rex.WRXB add (bad) rex.X mov cld xchg rclb mov (bad) pushfq lods cmc jae jne rex.RXB add test mov loop rex.WRB repnz mov insl cmp pushfq fidivr rex.WXB lock stos fstps movsl mov or mov mov pushq retq lods (bad) int add xor sbb stos (bad) (bad) or gs test jbe jl add fcomip rex.W lods sbb (bad) adc sti cld sub rex.RX fisub lock rex.WR outsl movsb jo mov stos cmp rex out pop (bad) (bad) mov sbb jle rex.WRXB (bad) fwait stc pop lods loop (bad) push jb adc xor scas in mov (bad) lods pop and lods (bad) mov mov insl ss add (bad) (bad) sub repz popfq (bad) fcmovb (bad) shrl push lea callq mov pop psrad fwait (bad) xchg jns popfq pop mov rex.RXB bnd (bad) (bad) jmpq jle (bad) or (bad) (bad) cmp xlat retq (bad) in lret out pop and cmp (bad) push cmpsl and add scas xor int3 and or lss xchg (bad) sub sub insb or cld mov cwtl xlat rex.WB mov stos lods (bad) lret xchg iret push mov lahf adc movabs testl sti rex.WXB or xchg (bad) jo lods (bad) int pop test mov cmp jae lods in (bad) outsl fwait sbb insl cwtl jb mov or pop test fistpl lods add and mov imul (bad) (bad) push xor or push loop pop sub scas jle lods cwtl cs orps cmp pop repnz jno in pushq or and (bad) cmp mov in (bad) (bad) jle mov rex.WR orl jns and adc pushfq rex xchg lods jg fstps jnp mov test lods push mov rex.RX rex.R mov (bad) scas pop xor jg (bad) in movabs sub test hlt mov rex.WR movabs rex.RX rex.B rex.WXB ja lods js xchg in (bad) std fimull ljmp rex.RX lods or add rdmsr and mov ja rex.X rex.WRXB xchg cli nop pop callq sbb scas mov xor shr xchg (bad) rex.R sub mov rex.RXB lods imul (bad) je pop push scas cmpsb pop mov jl mov (bad) data16 test adc out or mov push cli loope scas (bad) sbb lods (bad) (bad) (bad) pop mov push imul lret push enterq cmp mov (bad) ss lahf lods rex.XB jae sbb out sbb test subl int cmp cmp sub sub in (bad) (bad) movabs (bad) mov rex.XB jne (bad) mov jmpq fmull (bad) (bad) pop mov jns mov mov (bad) (bad) sahf lods jne push rex.WX fs cmp js retq sbb (bad) or xchg fldcw (bad) iret leaveq lods movabs cmp (bad) (bad) in pop cmpsl enterq cmp (bad) (bad) lods add pushq icebp or lods jb jge xor mov lods mov movsb icebp out and fcmovbe (bad) retq jl,pn in std rex.X pop rex.WXB sbb sbb cmp mov rex.WX adc mov out lods jbe loope movsl fstl lods hlt adc xchg sbb movabs repz rclb clc xor jle movabs and int icebp jns sub rex.WRB jo rex.B jle movsb jg xchg rex.X mov (bad) stos scas adc fcmovu mov int3 lods es (bad) add cmpsb mov sahf sbb or cmp lods roll enterq xor mov mov shrl fxch jae or test or sub (bad) pop rolb xor (bad) pushq (bad) movslq movabs mov mov xchg fcoms test adc sub lods lock incb lods icebp push lods jl (bad) js int mov int3 mov movabs mov jp lods push movabs and sub fisttp lods movsb movabs mov xor cli lahf lods sti (bad) sub push out xchg mov je lods add cmp leaveq mov sub (bad) sub adc cmpsb out lods mov mov shrb mov cmpsb (bad) ljmp (bad) mov xchg cmp getsec imul stos int3 rex.WRX mov rex.WX xor mov cs int3 lods (bad) rex.R outsl sub (bad) shrb lods jnp int xchg sbb xchg scas addr32 gs pop rex.WR idiv or imul sbb stos adc or stos mov (bad) lret lods cltd jl cmpsl xorb pop je or stos cli xchg addl cmpsl xor movsl mov pop xchg (bad) jns scas (bad) mov cld jg in scas imulb insb insb pop jo movabs hlt (bad) (bad) jb rex.WB lods pop test (bad) je andl lods cmpb xor psraw lods outsb (bad) sub (bad) cli js mov xchg sbb fldcw mull mov repz sahf (bad) addr32 cmp mov scas scas fs jrcxz (bad) rex.WXB repz (bad) adc packssdw scas lahf fld pushfq icebp adc mov repnz sub in mov sti mov jmp out cld lods fidivr test movabs es lods js jmpq add lods test or insl scas mov jbe repz adc fiadd adc out add adc (bad) lods and (bad) sub adc lods jmp cmpsl stos add lods xor rol in idivl (bad) test rclb clc lods loop jmpq (bad) lods push (bad) push icebp sub rolb lods (bad) add (bad) cs ja lods mov mov lods int3 (bad) jne (bad) cmpsb mov cmp fwait je out in int adc shr push adc add rex.XB lret xlat insb cmp ja data16 (bad) hlt je cmpsl and clc data16 outsb retq int3 add cmp repnz pushq mov std xor xlat mov fwait push cmpsb incb insb mov shrl add add or cmp (bad) in (bad) xor rex.WXB xchg xchg testl lods rex.B cmp pop fdivl movabs jbe mov sub (bad) (bad) and pushq xchg lods cmp jp in add popfq lods and (bad) lret jnp nop add in fsubl mov lea roll add (bad) lods adc test (bad) gs lods (bad) jmpq mov lods xor (bad) xor jns rex.WRB leaveq repz test push lods (bad) lock mov rex.WRX lods add xchg shrl (bad) lahf (bad) lods rex.W loop rcl adc xor (bad) lods rex.B rex.WRX stos or (bad) xlat scas mov fistl rex.WR rex.RB gs rex.WR enterq lods insl add (bad) rex.WRXB out stos cmpb sarb sbb mov cs add lods (bad) je sbb sub lods movabs jle (bad) in (bad) sbb lods cli loope fidiv or pushq int3 (bad) mov imul jmp cld jg scas (bad) lods movabs xchg add jge and (bad) addr32 push iret lods cmp lods rex.WRXB imul vaddss mov jl scas int3 movslq loop lods jg and and (bad) lods fistpl leaveq (bad) sbb lahf rex.R rex.WRXB lods callq (bad) lret data16 fstp lods lods or rex.WB stc loope rex.W (bad) mov lods cmp (bad) xchg (bad) test lods (bad) cwtl lods xchg jnp (bad) rex.RXB or and or mov orl add sub and cli sub mov xor (bad) adc lods int imul cmc xchg outsl outsb xchg movabs iret pop xor or xchg push scas lods mov jl mov sahf retq lods (bad) fwait jrcxz xor lods mov (bad) ds (bad) pushq mov shrb sub int3 pop sub adc sahf lods outsl (bad) jl imull (bad) sbb out lods fldcw sub (bad) movslq (bad) (bad) (bad) push sbb stos out (bad) (bad) or adc push mov push lods xor sub adc rolb (bad) ja retq out fucomi and in lods je and xor adc rex.RB int lods jge rex.WRX xlat cmpsl add (bad) jo lods mov (bad) in movsl test (bad) iret cli pop xor (bad) jnp lods rex.W sbb movabs scas pop scas lods (bad) sub fwait (bad) or pushq cmc (bad) jl and (bad) setle or scas sbb movabs (bad) (bad) stos jg lods (bad) jno push rex.RB pop (bad) leaveq (bad) and pushfq lods jle fsubl xchg (bad) pop jg nop (bad) pushq subl (bad) fildll (bad) lods mov adc out mov (bad) xor pushq movabs scas cld jmpq xchg (bad) ficomp (bad) cmp mov test (bad) lahf loope mull mov xorl sub xchg rex.W stc lcall lods stos fisubl in lods sub (bad) (bad) xorl movsl mov pop hlt pop xchg lock push lods rex.WRX js rex.WR mov fsubrp adc jg or cmp add jmp (bad) rex rex.WRXB sub fsubrp pop in cmp scas in sarl pop xorps clc sbb fadds lahf (bad) adc lods (bad) in stc icebp mov adc xchg imul xchg (bad) jnp int3 jo stos (bad) test (bad) xchg lock or stc adc lods add cmpsb pop rex.R rex.WB gs push repnz scas xlat mov and mov (bad) lret or stos mov test fsubrl (bad) mov lods mov jmpq mov adc adc sub insl adc mov (bad) jmp xor movabs sub (bad) rex.R cmp (bad) adc (bad) mov or xchg (bad) pop adc lea add lods add mov pushq mov sub clc lea and movabs fiadd lods (bad) rex.WXB rex.WX fs mov loopne fcoml jno (bad) lods (bad) xchg adc mov cmp pop lods (bad) pop retq sbb fs test loop rex.RX imul mov lods (bad) xor pop mov hlt jge xchg pop jae cmp lahf mov rex.RXB add or lret scas testl rex.W (bad) mov imul cltd jns movslq pop lods push rex.RB add mov xchg rex.X repz rex.XB xor xchg cmpsl ss lods addr32 jne mov add lahf ja retq lods or mov (bad) leaveq mov lock fstpt lods pop push imul repnz mov mov jae lods (bad) (bad) jmpq movabs mov cltd int3 hlt loope and cmp movslq mov mov mulb movslq push sbb or jne lods lods fisub push xor js adc pushfq add lods mulb stos xchg lods xor sbb (bad) (bad) mov nop movabs (bad) (bad) sbb lods or int xor in imul shlb cmp loope testl lods mov mov nop mov retq adc fdivs (bad) (bad) lods (bad) mov (bad) (bad) stos mov mov and adc (bad) hlt and and lret fincstp outsl lods (bad) fwait cltd push (bad) rex.RX cs lods (bad) rex.RB retq (bad) movabs mov xchg (bad) stos adc mov (bad) xor (bad) xor xchg (bad) rex.WXB or sub xor test pop xchg (bad) fcmovb fs mov sub add lret shr in mov lods rcrl (bad) sub mov addr32 jnp lods out (bad) iret (bad) fstl (bad) roll repnz or loopne (bad) popfq and (bad) pop lods imul adc fisttp retq add cmp cs mov in rclb (bad) lods mov movsb xor fwait (bad) callq loopne lea iret jmpq (bad) es or lods clc mov ja lods (bad) xchg mov xchg mov cmp (bad) pop movl rex.X fsubrs and lock (bad) adc pop lods adc cmp lods out adc (bad) fisubrl rex.WB sahf lods ficomp lahf cli lods add jmpq mov add jmp cmp (bad) notl sub lods xlat je insb or or lods data16 adcb (bad) pop insb sub (bad) rex.WRB adc fldt notl lods pop mov (bad) lods mov je push lods lret xor cwtl sub (bad) test notl sub mov sti lods cmp add scas rorl xor data16 fs mov fistpl in mov pushq xchg imul int3 nop (bad) rcll (bad) pushfq js xrelease or outsl lcall cli pushq sub (bad) pop out jg mov push enterq lods (bad) jmpq lret out fldcw cmp cltd cmp mov sub pop mov rex.R rex.RXB lahf cmp cmpsl push rex.WXB pop lock idivb xchg mov hlt enterq lods mov sub rex.WRB xor movsl fldl xchg imull xchg scas add clc pushq or (bad) orl push adcb insl shrd and sub add (bad) lret int jb enterq sbb mov sub pop cmp outsb jo es xchg lods (bad) cwtl jl imul add xor jb mov mov jns mov rex.WRXB rex.R stc xor sub lock adc (bad) fnstenv rcl mov jns jb sbb cmp mov imul fmul (bad) cli add mov or mov (bad) out jmpq fwait (bad) add cmp out mov adcb iret lahf cltd imull pop jrcxz ds movsb and sbb lods cld lods repnz sub rex.WRX lock mov ljmpw insl lods (bad) movabs cmp or jmp in test mov sbb cmp xor movslq outsl lods imulb rex.W rex.RXB retq movsl movabs (bad) jns push lods fldl imull (bad) xor (bad) ffreep lods (bad) icebp movabs (bad) cwtl loopne lods loop pop adc lahf push jmpq cmc scas rex.B outsl movabs adc xorb add rex.WX pop cmpl movabs (bad) int3 stos adc cmp enterq xchg data16 and mov (bad) lods sub push (bad) sbb ljmp jb pop vpmuludq cmp mov stos pop sub lods rex.X push (bad) retq sub mov lods addl rex.R scas (bad) (bad) movsb or jns lods (bad) sbb adc (bad) movb hlt and test cmpsl sub sbb (bad) lods callq mov imulb jmp cmp movaps fmull xchg add fwait pushq or shrl mov add leaveq out cld pop stos (bad) movsl (bad) jle mov pushfq fldcw cli pushq pop mov xchg fildl iret xchg (bad) cld repnz mov in jno rolb repz rex.WB test (bad) fld adc scas sbb (bad) out cmpsl cld xor cmpsl sbb in fdivl in mov (bad) shrl hlt (bad) movabs movabs (bad) stos rorb nop mov (bad) fidivr or cmp fcmove add movabs lods rex.RXB mov pop mov (bad) movslq cmp mov cmp (bad) lods jns loope (bad) push (bad) mov cld sbb cmp add imul rex.WR rex.RXB mov in sbb insb out lods add gs loop,pn sub stos stos leaveq push repnz rex.WR imul rex.X mov push rex.WR rcl leaveq fs stc sahf xor add ja in orl or xchg (bad) mov rex.WR movabs popq or adc xor rex.XB (bad) js movabs mov fdivl lods adc cmp xlat scas fisubl mov sub es popfq scas stos (bad) repnz xor movabs jle lods (bad) stos stc cld adc and movabs xor jnp xchg mov mov cmp test pop in rex.XB rex.WRX (bad) and mov jnp sbbb pop mov cmp sub sub (bad) ja or fbld test jmpq (bad) xor lods rex.RX outsl shl lock jmpq (bad) jle fsts (bad) rcrl test xchg sbb movabs sarb (bad) out and xchg push lods fldlg2 or sub rex.XB (bad) hlt sti pop mov shrl or xor (bad) mov jrcxz (bad) and and (bad) scas stos sub movabs es movabs ja sub sbb jnp mov (bad) xor mov sbb (bad) jp jg int3 lods movabs rex mov shlb lods (bad) rex.WXB mov movabs or scas sub lea mov adc mov rex.W sbb or loope data16 clc jmp in retq je or (bad) sub retq movabs push in lods rex.WXB (bad) movabs pop add in out out lods cmp cltd pushfq jbe cmp xchg roll jbe movabs rep (bad) sbbl repnz (bad) and test pop mov lods clc xchg rex.WR push cs test sub test adc mov adc (bad) test xchg cmp rex sub movsb fmul mov cmpb lock (bad) (bad) js rex.X cmc mov jo sbb mov (bad) rcrb add in jne test js mov (bad) (bad) mov xor xlat sub cmpl or (bad) adc push icebp add or mov sarl std (bad) imul fidivl lods mov icebp out lods add add jnp (bad) mov rep int or mov imul faddp sub sbb push movabs mov pop retq mov jns test out sub xlat add divb pop test xchg shrb and stos (bad) imul (bad) fwait (bad) (bad) (bad) cmp movslq jb out rex.WRB movabs (bad) cwtl mov scas (bad) and repnz stc cld sbb cli lods sub or (bad) mov adc sub cmp movsl rex.WRXB mov jbe add mov push jrcxz sub (bad) mov pop retq xchg adc fild mov jb add mov (bad) gs push mov cmp rcr mov or xchg or (bad) test movsb fcomp stos jg xchg cs lods icebp or mov xchg (bad) jp and lods loope fildll (bad) and pop lods xor mov mov push loop test cld movabs shll (bad) mov mov pop xchg lock lods ror add movsl faddl pop lods or mov push lods sbb scas lods cld and std xchg (bad) movslq lods pop in (bad) popfq jne loope movsl adc push add sub push (bad) jl lods mov lea rex.WX std rorl loop (bad) xor sarl fild mov and (bad) in sub stos out (bad) fs shl (bad) fdiv lods adcb cvtpi2ps pushq push and imul ds xor mov rcrb repz out movabs (bad) jb lods xor out mov lods and (bad) mov popfq jp lods clc pushq pop pushq mov or rex.WX (bad) (bad) addr32 sub push rex (bad) movabs and scas cli sbb jno or shlb lods jl sbb xchg sub outsb adc sti int3 xor lods mov mov (bad) sbb lock adc lods rex.WXB movslq rex.RX mov lods (bad) int adc pop rex.WB cs shll in sarl (bad) lods cwtl js insl fs mov add mov subl retq data16 sub pop xorl lock retq scas fcmovbe in (bad) sbb shrb test (bad) mov fisttp fwait jns clc lods lods hlt callq adc add movabs and xor add lods jle jne fs xor imul pop lods xchg (bad) enterq (bad) sub repnz (bad) fimull lods sbb out sti idiv rex.XB lods fwait in rex.RX pop adc fadd mov rex.XB fs lods (bad) repnz cltd sub (bad) lods mov mov fwait ds (bad) rex.WXB retq rex.WX or in stos outsb insb fldenv clc iret out fimull rex.WXB pushfq retq sub and movsb shrl sub ds movabs rex.WB mov test loopne lods jl pop rex.RX pop jrcxz sub push add mov repnz push push mov imull test rex.WRX rex.X cmp jl rex.WR lods rex.X sub xchg sahf lods std mov rex.RXB (bad) pop in insl push cmc (bad) (bad) cmp add mov scas adc cmp imulb mov (bad) xchg popfq (bad) je lea (bad) rex.RX cmp (bad) jae push sbb movabs ficoml mov loope or in pop movabs cld leaveq rex.B cli add pop (bad) adc sbb notl scas (bad) mov leaveq (bad) push scas outsl rex.X adc icebp lods jne divl xchg jle (bad) mov add (bad) fsubrl mov fistpl cmp and add xor lods xor addr32 (bad) mov mov mov rex.WRB repz and (bad) rex.WX sub negb rex.WRXB ds fs pop rex.WB ss pushq (bad) and jae mov mov xchg mov or (bad) lods es stc (bad) lods sub push repz add push lods mov in adc mov lods pop test adc add push (bad) popfq (bad) lods (bad) pop sub sub xor movslq xchg sbb fsubrl fnop sbb movabs movabs in rclb pop jb ffree sbb sub jp int (bad) adc and rex.WXB mov and lods jg pop (bad) outsl lods mov mov xor mov xor xchg xchg lock je cmp shr insl sbbb add movslq adc cld repnz adc mov mov fmull subl mov idivl rex.RXB (bad) (bad) lods mov jno rcrl movslq (bad) imul jl mov rex.WXB int xchg lods fidivr sbbl push orb fimull sub xchg rex.X cmp scas push rex.RXB xor lods xor (bad) (bad) add (bad) rex.WRB sub jb push fildl (bad) (bad) add add add rex.XB rex.X sti loop repnz out or xor shr callq (bad) and (bad) imul rex.W movabs movabs clc xor and jb pop cli fidiv notb insb int3 and jb (bad) cmpsb (bad) rex rex.B mov mov data16 sti or mov (bad) lods mov pop sub jno es or subl cltd clc pop adc adc in lods (bad) sub loope lods pop add loop (bad) jmpq xchg jbe mov lods mov mov mov pop sub hlt mov and push push roll (bad) push rex lods cli sti and testl rex.XB rex.WB and (bad) adc sub cmc lods retq jmp cmpsb jae lret mov mov mov sub shrl add jne cld mov lods pop mull (bad) (bad) (bad) mov fildl add lods test pop sub or stos mov in mov mov adc lret mov int sarb (bad) sub push mov loope test rex.WRXB lods fistl movabs (bad) lock lret clc and lods mov fwait lods out add add lods (bad) jae adc imul cmpsb rex.B stos vpacksswb mov rex.WRB jne pushq stos insb sbb test lods jmp xchg cmp test or (bad) mov enterq lods sub mov lods callq mov lahf lods in xor add add jmpq (bad) stos pop lods (bad) negl adc cli int3 or nop mov jmp sub xorl mov rex.WRXB xor test xchg mov lods out jb mov mov in lods cmp push sbb (bad) pop rex.XB cmp fidivl out adc clc rex.WR lods lret rex.RX out xchg out retq cmp mov in (bad) fmuls pop add rcr lods sbb pop sub mov sbb (bad) add lods jg orb xchg notb add mov mov xor cltd mov (bad) jrcxz rex.WB rex.RX callq lods loope lods pushfq movabs (bad) rex lods cmc jmpq rex.WRXB lods js scas out (bad) mull lods add xchg int3 popfq fucomp add rex.WR xor push repz xchg jmp (bad) push rex.WRB cli (bad) pushfq mov xlat rex.W scas retq and (bad) fwait mov (bad) add pop lods pop and push and lods mov rex.WRB sbb sbb sub (bad) cmp lods (bad) sbb clc lret and rex.WXB pop rex.X sub scas mov ss in mov xchg insb jl lods push or (bad) cwtl sub lods cmp xchg pop cmp xchg pushq or lods sub rcll xchg movabs jrcxz mov mov repz rex.RXB pop lods movslq (bad) rex.B imul xchg (bad) loop lods adc mov mov fist mov sub sti jne imul jo xchg add xor addr32 fcmovne jne lods sbb or cli mov sbb scas mov adc lods in rorb (bad) test (bad) pop (bad) jle enterq or scas rex.WR insb repnz mov jb cmp add outsb and mov push mov test jg lods cmpsl sahf lock sub xlat callq movabs mov cmp test (bad) insl lret xor hlt divb movabs stc and rex.WRB hlt rex.B lahf out jb adc pop xchg mov fbld push push sub loope sbb pop lods loopne int mov shrb ja pushq (bad) and pushq int xchg (bad) (bad) xchg test xor enterq or retq lods fabs jg repz cwtl pushfq mov retq sbb add mov add pushq fdivp mov callq cmpsb mov sets sub mov sub sahf pop mov sti fimull movabs loopne mov rex.RXB rex.X rex.R rex.RX (bad) (bad) cli fstpt mov pushq in movsb or adc icebp loope movsb notl jrcxz out test in out sahf clc pushq push mov in neg adc in push lret lods stos adc jne or xor (bad) popfq jge mov rex movsb sub clc retq rex.XB and push jg pop lods xor sbb stos (bad) sbb mov fnstsw mov cmp cmp pushq rex.RXB rex.RB rex.RX sbb mov lods mov sub jle mov movsl retq pop out and mov sbb xchg mov pushq (bad) movabs (bad) test cmp rex.WRB fnstsw fldln2 lods int3 jp (bad) xor lods imul test repz push sbb callq xchg scas add add mov (bad) sub jle pushfq adc in outsl rex.RX rex.RB lock stc push movabs (bad) fldcw pop int rex.RB shrd mov addb push loope sub lods jbe lods fsubrs jns sub ficompl sbb (bad) lods lods (bad) sbb es adc add scas insl test jge cld popfq rex.WRB test sub cmpb retq (bad) scas negb adcl (bad) mov mov add sbb sbb (bad) xchg lock (bad) mov and (bad) push notb retq and mov (bad) imul push callq pop jrcxz xor retq mov lods jl jmpq xchg lods enterq cmp (bad) jo sbb insl (bad) cmp (bad) bsr scas pop cld addl rex.R out shrl rex.B rex.X retq adc add dec mov (bad) rex jns (bad) (bad) and xor rex.WX sub fwait rex.WRB rex rex.W lods rex.R lods shlb mov (bad) sub loope (bad) rex.WR jbe adc mov ds jl test jae fisub adc cmp jnp mov lods adc and adc ds nop mov add clc cmp outsl sub insl (bad) adc sbb fistp jmpq pop clc lods lods mov mov scas rex.WR (bad) sahf gs sub jb std movsl cmp sbb scas sbb cli rex.WR lods sbb (bad) lahf fiadd sbb fwait (bad) mov rorl mov lods (bad) rex cmc imul rex.XB fs lods (bad) jno mov test (bad) rex je mov (bad) (bad) data16 cmp clts mov jl (bad) hlt (bad) mov movabs stos (bad) stc lods shll fs jnp mov scas pushq mov mov fistpll push sub mov cltd cmp (bad) outsl lods lret mov movsl ss movslq (bad) retq push (bad) push (bad) or lods xchg mov leaveq rex.XB es lea mov lock hlt lods xor pop sti push callq cmc (bad) mov es pop jl adc mov retq (bad) leaveq lea mov xor sub pop (bad) (bad) data16 xor jno lods rex.X add int jp (bad) and mov sahf xchg xor push in lods and add mov jmp (bad) sub movsl jg adc rex.WR adc lods rex.RXB cld rex.WRB xchg pop jmp (bad) xchg sbb adc (bad) jb jnp push mov callq stos (bad) pop sub scas mov lods and jo or insb scas (bad) gs (bad) pushq sbb clc movabs fxch cld (bad) in rex.RB pushfq rex.XB (bad) js in sbb loopne movsl lods xchg stos shrb in loope mov adc insl lods jrcxz in pop in retw scas mov psubd sti lods fs fmull mov je rex retq fs add (bad) jno rex.X iret cli cmp test pushq sbb fsubrl imul mov ficom icebp cmc (bad) stos and rex.WR or (bad) in test clc test mov roll jg sub std (bad) add lods test xchg sub stc fcomp addb adc cmp xchg mov in mov movabs lock (bad) rcrl (bad) cmp or and push sbb cmp (bad) and push lods (bad) adc rex.R callq and pop lods lret cmc rex.RX ja pushfq lods es scas rex.RB repnz xchg jae scas pop movabs (bad) mull movslq lods decb orb lret jl clc sti movsl stos mov lods fimul int sahf mov mov and out cli xor movabs subl cmp xor jno push cmp or and sub (bad) repnz in pop xchg sti lods adc andl mov (bad) mov sub or (bad) cs cmp xlat in loopne (bad) movsl sbb leaveq insb mov jl sbb addr32 rex.R pop pop xor test and xor and mov lock (bad) out lock cwtl jl scas xchg sub cmp lahf sahf out mov rex.WR rex.WR test pop xor sub shrb adc mov (bad) divb or (bad) leaveq rex.WB and movslq int3 stos mov pop mov pop sti rex.WXB scas lods cvtpi2ps rex.W xor lods mov popfq mov lods in add icebp xchg fdiv pop mov rex.RX movabs test in (bad) lahf cs lods adc shrb xor and sahf xor and clc outsb or leaveq jo sbb scas movabs lods lret scas (bad) movslq insb mov jge rex.WR (bad) mov pop add sub fbld xchg pop in vxorps add lods xor sbb jnp test rex.RB movsb (bad) sub sbb clc (bad) jbe push test loop jns rex.RXB sub leaveq xor int insl mov (bad) rex.RB xchg jae lods xor mov adc mov cmp rex.WRB fisttp lods mov movabs mov cmp rex.WRXB lods sbb and cltd mov add add lods pushq sbb (bad) pop jmpq sub mov (bad) lret jo mov mov repnz (bad) xor cmp jle retq push cmp and stc lods mov movslq (bad) in vcvttss2si (bad) mov sti lret sub cmp shr xor bts cmp mov (bad) scas mov scas sti int3 push add movabs mov lods sub (bad) and and (bad) js jae cmp xchg clc test lods add adc or cmp (bad) rex.X lods rex.WRB jno mov rex.WX popfq and lret fwait pushfq (bad) outsl cmp (bad) imul fdivl mov (bad) lods cmp and rol pop lods mov mov vmovq es outsl xor sub rex.RX rex.X cmp lods rcll rex.RXB callq rex.X mov mov imul mov or lods out xchg pushq rex.WRB adc sbb (bad) or mov jne movslq (bad) xchg movabs retq lods or negl (bad) clc mov lock cmpsb mov mov push (bad) adc sub outsb imul push (bad) test (bad) (bad) movabs es lods or mov rex.RX movabs rex.X movslq sub sahf lods (bad) out rex.WR fwait mov fildll xchg decb and gs mov outsb or pop xchg pop lret cmp lods movabs adc lods fs xor jo icebp xchg rex.WX (bad) xchg add movabs jb lods sub cld lea cmp lods outsl (bad) jge (bad) rex.X fldlg2 or and cmpsl fcomps xchg jnp adc mov outsl add je stos xlat sbb push and jb (bad) rcrb rex.WRX lahf xchg mov lea popfq lods (bad) sbb (bad) (bad) push (bad) lods xchg sub sbb fistpll fimul (bad) outsb sub popfq nop lea lods loop jae xor cmp (bad) xor test (bad) (bad) decl push stos mov cld stos or rex.WRXB outsl sub sti (bad) movabs xchg cld lods pop loope (bad) add mov xorl rex.W cmc enterq mov add in rex or callq rcl fs add xchg sub clc hlt lods rex.WRX imul xchg (bad) cs (bad) test cmc (bad) push push (bad) mov stc adc (bad) lods xchg fcomip in push add lods and pop xor (bad) stc lods cwtl mov sbb lods roll in movabs popfq sbb rex.WR imul mov stc cmpsl rex.RX pop adc cld cmp mov rex.WRB mov movsb callq mov (bad) (bad) cld sub loope add push sub cli rex.WRXB mov adc xor mov enterq push adc or test xor xchg loopne repz movabs push adcb sub rex.W rex.W stc and (bad) add cmp push pop sub (bad) push sbb fnstsw xor stos rex.RB rex.RX enterq (bad) shrl rex.WRX loope movb movabs xlat sbb cmp movsb cmp cs jns adc lods jae ja rex.WXB shr xchg xchg xor cmp out repnz jb stos sbb test cs xchg (bad) jae rex.R adc add out mov movsl repz cli (bad) mov push fdivl push lods jb xchg test scas (bad) mov rex.WX lods rcll and jae lods (bad) xlat jno notl fsubs (bad) rex.WR xchg lods (bad) pushfq (bad) mov lods (bad) xchg in xor cwtl jmp enterq lods adcl ds in nop cs repnz in imul outsb imull (bad) fwait adc in (bad) scas loopne rex.WRXB xor ja or add mov movabs and lods scas xchg or repz rcl (bad) fsubrl out test mov mov mov pushq ficoml xchg stos rex.B ds decb callq mov outsl xchg incl mov (bad) int movabs fs addl or mov popfq sbb scas pop (bad) (bad) (bad) push cmpsb lods add js mov in gs lods lahf lea addr32 insb sbb or out cmpsb jrcxz or repnz lods int icebp pop adc or (bad) lret lods sbb sub rex.B outsb lahf jp xor loop jle mov hlt rex.W cmp scas insl push rex.RX pushq pop mov (bad) lods xchg in pop bswap insl rex.XB lods sahf (bad) fdivs addr32 or rex.WRB repz lods cli addr32 xorb mov mov (bad) sbb sub rex.WRXB je jle cmc lods xchg in push adc scas (bad) cmpsl movsl enterq rex.WX xlat stos cmp scas adc pop mov mov in fsubr (bad) scas push int3 fiadd push or or mov add cmp mov (bad) mov or pop fwait (bad) subl lods cmpsl (bad) pop in outsl rex.W rex.WRX (bad) or vcvttsd2si sbb psrad lods ds push sub lods (bad) adc add jo xor rex.WB rex.WRXB lahf (bad) lods cmp decb pop rex.R in mov jl (bad) movabs pop lods shlb out pop or mov movabs mov mov test lods in rex.WRXB xchg lahf push (bad) cmp stc mov cmp mov rex.R rex.WB out fsubr pop rex.WR (bad) fist movsb mov adc xorb lock (bad) add ficomp jp retq jb in mov rex.WB pop and lahf (bad) rex.RB mov xchg mov (bad) ds movabs sahf jg fmulp sub add movabs xchg mov add mov es mov cli rorb xchg scas negb rex.B rex.WRXB shrl jns xchg fistl xor push and sbb loope mov add sbb pushq pop in (bad) lods sbb (bad) xor and (bad) and sub (bad) pcmpgtw adcl mov xchg mov cmp xor sbb (bad) mov test int3 xor cmp (bad) in rcrl mov lods gs xor or xchg mov shll adc jo sub (bad) (bad) mov shlb icebp movslq lods sbb add jae and lods outsb (bad) pushfq fcomip out xor xchg cmp out jrcxz leaveq and cs push (bad) jge cld sub (bad) lods rex.WR rex.XB sbb push (bad) xlat xchg sbb movsb in cli icebp shrb jge xchg js nop (bad) (bad) shll lods and mov add cld mov add rex.R xor lods rolb sbb sub rex.WRB repz stos adc mov and scas mov sti lods rex.WR jge (bad) add in stc lahf (bad) (bad) or movabs sub rex.W loopne (bad) and jge jmpq (bad) lods or retq lods not xchg (bad) fist out jne and jmpq jrcxz add ds fsubrs jno mov lods rex.X popfq pop cmp (bad) adc or push or jge movabs mov mov rex.WRB repnz lods (bad) stos mov insb and mov sbb (bad) hlt cmp add adc pop lods mov sahf sub mov lods fldl notb xchg (bad) je cs (bad) ror sub cltd jno mov sbbl sub fcompl (bad) mov sub fidiv mov (bad) jne or (bad) stos mov sub scas movabs out jmp test xchg retq and rex.RXB fisubl (bad) stos (bad) or fcmovnb mov pop push int3 shrl or int3 jge lods addr32 xor (bad) lods mov pop test mov xor cltd lods cmp outsl jg cmpsl (bad) test cmc rex.X rex.WXB add movabs sbb mov jbe xchg scas cmp pop subb lahf sbb ja push lods adc (bad) mov mov (bad) (bad) imul enterq loope rex.WRX adc lods (bad) pop callq sbb sub (bad) adc fisubr sub movabs (bad) jno ror rex.X insb test adc lods lahf mov (bad) loope loopne (bad) lods mov out adc repnz (bad) xor or jae mov add out repz lods and (bad) jle fldcw jne movsb test or or jp jo cmc cli out lock cmp lods outsl sub sbb mov xor in cltd (bad) jo popfq rex.WXB push scas jle bnd test lods xor test lahf push scas push sahf lods adc lods callq mov (bad) and mov lods lret pop jg push out movslq movsl cmpsl subl sbb fadds push callq lods imul mov in (bad) jae (bad) xchg sub lods add in lods sysexit rex.X jp outsl rep rex.WX rex.RB cld xor (bad) stos pushfq xor rcrb sub or cwtl mov je imul mov pop add lods stc and jmp xor fdivl jb sub adc jne lods insb or sti stos rex.WB jo jge sbb idivl sbb fdivs mov fnsave scas (bad) (bad) rex.RXB rex.WXB (bad) cmp lods jle fwait test sbb vunpcklps jbe (bad) jne xor or (bad) add xor out pop (bad) (bad) push movabs (bad) (bad) jle xchg addr32 and xor movq cmp sbb nop sub xchg rex.WXB repz rex.RB mov (bad) cld and enterq jno lods and or push (bad) (bad) movslq cmpsl xor jp pop adc (bad) test mov and xchg sarl out imul in rex.WX push stc or outsb repnz jp scas jne cltd xor push (bad) jb add scas in (bad) and insb mull (bad) nop movabs rex.WRB loope stos xor and mov sub lods xchg xor (bad) pushfq lods pushq mov movabs cmc lods stc iret pop test retq rex.WRX (bad) subl (bad) (bad) add mov lock (bad) mov (bad) (bad) or and push notl mov jno test lods fadds xchg lods xor imul pop adc retq cld pop or stc test and stos rex.B push in or mov fdivs sub or addr32 lea lea rex.WR gs xchg (bad) stos out ss loope (bad) jb (bad) int3 mov (bad) xor lods jle lods (bad) (bad) scas loopne mov (bad) icebp out xor lods sahf xchg cmp xchg push or and popq loop rex.WX or mov add sahf or lods or xor lods movabs sti adc scas mov rex.XB sarl cmpsb (bad) sbb nop mov jno sub lods leaveq (bad) int xor rex.RX scas enterq or sti je rex.WRX (bad) rcrl lods (bad) sar rex.WRB jrcxz adc neg stc (bad) in mov add iret lods rex.XB pushfq push xor (bad) mov or jge lods xchg mov pushq xchg loopne (bad) movabs cmpsl sbb lret mov push (bad) pop rex js cmp stos push jg pop sub or fdivl jb dec lahf (bad) push xlat adc out sbb sarb (bad) movsb jg and lods sbb (bad) and out mov (bad) mov mov add lods lahf sahf rex.R mov movabs and mov mov (bad) jnp push mov or sti (bad) lret js lods cs adc sub or (bad) lods movabs mov stos imul roll (bad) ds lods fistpl xchg stos (bad) lret add stos (bad) repz leaveq rex.XB scas retq lods imul push or in insb fs and lock lods ljmp shrl sbb test (bad) mov stos scas xor mov add sub add shlb lods psraw iret movsb jrcxz lods loopne (bad) cltd scas insl notl add lods cmp imul lods xor imul in rex.W cmp (bad) lods test fs imul mov or (bad) lods loopne movabs lods jns xchg shrb or (bad) jbe ljmp xchg (bad) jge gs (bad) rex.RX pop cmpsb (bad) (bad) stos rol add imul callq (bad) retq (bad) movabs (bad) shrl xchg movabs and lods retq jl adc sahf and add sub mov incl lods icebp cwtl out sarl addr32 sub (bad) inc clc (bad) rex.XB insl or lods pushq cli sub mov (bad) jl (bad) mov rex.B rorl lahf movsb sar callq pop mov lods and imul lods out jo mov add xchg out in jbe jl sub in mov imul scas push xor mov pop movabs or insb cltd (bad) movsl rex.WRXB (bad) adc roll add rex.WB lock (bad) jne stos fisubl rex.RXB (bad) push mov adc pop callq add rex.RX test xor rex.B rex.X pop std xchg mov mov xlat lods mov pushq mov xor sub mov or (bad) movsb out movabs jmp loope retq rex.RX pop rex.XB lods or adc jge mov (bad) in shlb pop adc cmp jne fisubrl mov sti or (bad) xchg lods (bad) sbb adc pop sti mov je (bad) rex.WR or pushfq fwait adc (bad) mov sbb int3 (bad) mov lret mov jne adc test add fdivrl jg test mov mov jns cmp cmp rex.WRB cmp cmp add mov int3 (bad) movabs cmp fstps xchg movsb gs sbb cmp movabs test cli push jnp push add mov or cmp lret jbe cmp outsb mov mov addr32 lods xchg lods data16 fcomi sbb movabs xor rorl sub movaps cmp pop insl out retq jo adc pushq (bad) xchg xor loope in outsl add nop (bad) pop sbb cmp hlt mov adc adc or imul or test (bad) fnsave sbb mov stos sbb mov callq jp je and rex.RXB mov sub xchg sub cmp and movabs insb imulb and mov push andl adc lods rex.WRB and rex.B push add rex.WR lods rorl nop lods (bad) sti xchg jo ss scas mov mov mov retq mov (bad) sahf lods (bad) fsubrl mov (bad) hlt cmp xlat jb movslq stos in pminsw mov pop (bad) (bad) jo jg rex.RXB (bad) xlat push lods mov and xchg sub jmp sub xchg (bad) cmp (bad) lods rex.B js push add clc leaveq xchg (bad) outsb lea mov int3 rex.WR data16 mov jb cmp sub xchg movabs int3 (bad) (bad) pop jg lods (bad) (bad) cmc (bad) pushq mov test jbe cmp mov mov hlt lock lods cmp cmp or loope in or enterq (bad) shlb retq orb fsubp sub xor adc lods (bad) cmp rex.WXB rex.RXB cltd push sub lods lret cmc jo (bad) rolb (bad) mov lods adc push mov stc mov rex.XB cmpsb (bad) jb leaveq xchg and scas je shll jl insl xor out movabs push idivl scas paddd xor pop mov mov mov int3 xor (bad) nop (bad) std mov (bad) (bad) jl sub and retq (bad) mov int3 (bad) (bad) movsb rex.WR fs (bad) lods fisubrl (bad) in mov jge loop nopl ja retq scas pop scas adc sti scas outsl xor rex.XB (bad) push xchg pop mov (bad) (bad) cmp (bad) std movslq in js fidivrl nop jne cld (bad) fistpl (bad) sub mov mov retq fidivrl (bad) mov in lods jne (bad) adcl rex in scas mov add fisubr fisttpl xor (bad) rex.WB sbb (bad) icebp pop cmpsl (bad) (bad) lods mov rex.WR scas lods fnstenv and jge mov in sub push mov cmp sub jp (bad) in fwait add insl imul mov test mov outsb (bad) (bad) leaveq leaveq pushq mov pop movsl lods pop cli movabs jmpq jne xchg cmpsb adc iret xlat int3 jmpq mov (bad) pop push mov jae pop (bad) and adc mov sub callq xchg (bad) test sbb sbb (bad) pop (bad) rex.WB and movabs jns jo xchg pop retq lods out lret mov add lods icebp (bad) rcrb ljmp cmpsb jno stos (bad) cmp imul cmp or cli push sub repnz mov test shl rex.WRX lods pop jo cmp (bad) movabs test mov lret (bad) push (bad) out lods je push fidiv or mov out push loop pushfq mov lods mov rex.R retq rex.RB rex.RXB sbb in ja (bad) (bad) lods xchg xorps or retq mov js (bad) shl add (bad) sub and movabs sbbl scas rex fsubrp rex.B lock imul pop mov enterq and cmpsl (bad) in ds sbb shlb sub rex.XB int push lods pushq insl xchg (bad) jmpq mov (bad) in movsl movabs (bad) neg fildll adc (bad) adc rex.WXB lods repz test cmp pop rex.WB jl test or rex.WR lret test movabs push ds cmp cmp cs rclb retq scas mov (bad) cmpl jmpq in in push or movabs movabs loop adc lods jge,pn cmp or (bad) int sub shrb cld or or jae rex.RX xor pop icebp fs fwait adc pop lret pop rex.WX ja fs adc lods (bad) test sbb jl stos outsb mov leaveq adc loop gs add lods sti lahf imul fwait add loopne int adc sahf lret lods adc shrb movabs out jmp rex.RB rex.RXB sub lods loope (bad) xlat imul clc adc cmp sub jbe ss sbb add jbe movabs push lods (bad) jno pop outsl cwtl cmpl cmc mov (bad) (bad) rex.WX rex.WB data16 (bad) or stos loope insl repnz rex.X sti rex.RXB and out rex.WRX rex.WXB push rex.B mov je std or and fisubl mov lods adc (bad) clc lods xchg (bad) lock mov sub adc add insb mov (bad) lods xchg xchg sbb int mov xor (bad) test push sub fsubrs xchg in lods sub sti mov (bad) lods mov (bad) (bad) je lock clc rex.RB mov loopne xchg add movabs cli mov ds xor pop cs movsl insl and pop (bad) jle scas xchg in jbe or mov in ja jns test ds sub xor lods xlat and outsl leaveq in lret stos xchg mov lods pop movslq (bad) popfq rex.RB jmp rex.X inc and sbb retq in fidivr movabs (bad) sub test in sbb stos push pop cmpsl sbb (bad) movsb in jrcxz pop rex.XB and fmull lods fistl insb (bad) in or sbb (bad) cmp lods xchg test imul (bad) (bad) out (bad) (bad) testb jle xor je mov (bad) rex.B in jg nop int out cmpl mov xchg lret xor sub imul (bad) (bad) jb iret in shrb mov sub (bad) adc mov cmp movslq callq jb adc scas cmp fildl rex.W jrcxz and retq lgdt push (bad) pushfq adcl movabs fildll mov loopne xchg adc or (bad) sub mov movabs jno sub lret or (bad) (bad) pushq push stos adc and rex.RXB data16 (bad) fldt add (bad) (bad) mov int3 mov cmp mov or mov gs (bad) movabs and rex.WRXB adc jle nop (bad) (bad) pop (bad) sbb lods jne fldt jo jl mov cwtl pop loope push or callq fisttpl faddl sub test cmpsb xchg fwait lods (bad) imull mov mov push je jle cli movabs xchg in fiadd jle mov test scas xchg cld (bad) sbb mov shlb scas pop hlt xor lods icebp add imul lods enterq movabs int3 decb jne lods loop or sub lods insl loopne test add hlt add pop (bad) scas mov pop or add in out je rcl nop js int3 xchg movabs lea and scas (bad) fcompl test rex.WR loop mov out negl jae retq lods (bad) push pop shrl mov lahf pushq and lods clc (bad) loopne (bad) mov out cs mov stos insb imul std callq xor fiaddl sahf lods imul cmpb rex.RX lods scas (bad) in rex.XB in jle mov fwait sahf mov movabs xor movabs xor scas (bad) mov rex.WX in or in jne fidivl lret (bad) and lods sbb add movabs scas mov pushq jae lods out push loop (bad) (bad) movabs movabs xor jo sbb lods lods pushq jns stos cmp jns sbb rex.WRXB mov lods or sub push lods rex.WB andl xor sub adc sub scas stos mov sub loopne (bad) imul (bad) xchg insl (bad) mov sbb movsb mov (bad) add mov add jge fcomps stc xchg enterq leaveq (bad) xchg adc in sbb iret movabs or lock enterq jle adc (bad) lods popq imul pop push (bad) addr32 roll rex.WR enterq mov mov lods (bad) cmp mov adc insl mov imul imul xor (bad) shlb ss lea adc stos pushq in jg mov add je or out hlt jl lods sub sbb cld repz or (bad) (bad) (bad) lods mov sbb add repnz lods mov lret jb lea test int stos in idiv add enterq fmull (bad) mov push lods lret mov (bad) cltd lods out xor xor jno lods jl mov sub (bad) movabs push cmp mov cltd (bad) in leaveq mov mov rex.WB rex.WR rex.WRX mov in or adc jb and jnp jmpq jne mov cmpsb repnz int3 scas cmpsl mov enterq stc in movsl or xchg clc mov mov rcr test cmpsb jge lods jmpq roll and (bad) mov movsb mov xchg pop mov mov jmp mov insb lret xchg mov xchg lock cmp lods (bad) mov or pminub mov in or sub insb (bad) jl lods mov test (bad) movsb leaveq adc lret pop retq and popfq rex.WX add (bad) xlat cmpsl lods xchg pushfq es jmpq cmp lods (bad) imul lods (bad) jbe xchg fistpll and cmp test mov stc push lahf imul jrcxz or insl lock retq (bad) mov faddl jl test add mov or movsb xchg mov push (bad) mov mov lods sbb decl (bad) in sbb add (bad) sub rex.WB enterq test in movabs sbbl jg adc (bad) lods pop retq jle nop stos lock lods sub je (bad) cltd rex.WRXB scas rex.W xor cmpsb cmp jp movabs rex.WB lods push popfq (bad) jne (bad) jb jns lods icebp cltd leaveq jno mov (bad) mov jrcxz pop rex.WB jne mov cld shrl push cmp movslq fldcw rex lods mov (bad) pop xchg std shrb mov rex.WX adc stos xor fucomip callq adc test lods in (bad) pop rex.RB loopne lods out or rex.WRXB lods xchg cld sbb (bad) repz test cltd mov xchg xor cli sbb test jae (bad) in jmp or cmp clc xchg mov sub test add fucomp cmp jmp jg movsb xchg lods rex.WRXB jns lods and rex.W fildl sub sbb pushfq lods sbb movslq repnz sbb (bad) xor movslq lods mov lret movabs test cmpsl jmp or mov mov (bad) sbb lods cmc loope sbb (bad) (bad) lods outsb loop scas push in pushq lret adc std xchg scas rex.B xchg add mov or rol (bad) lods (bad) lods pop mov cmp retq and lods jmp sub in mov in mov (bad) mov movabs (bad) sbb mov (bad) (bad) sub rorb push xchg (bad) rclb xor mov push rex.WRB rex.X rex.X enterq jns (bad) cmp in cmp lods lcall loopne rex.B (bad) fwait xlat sbb rex.WR pushq xchg lods (bad) xor outsb lods and sub imul fwait sbb lock push rex.WRX rex.R rex.B pushfq adc rex.WRXB repz (bad) push int movabs (bad) rex.WRXB movsl (bad) and pop (bad) lods enterq adc pushq cwtl sub xchg cmpsb (bad) xchg (bad) mov movabs fmull (bad) mov hlt (bad) mov jrcxz and rex.WR sub cmovne repz mov outsb cmpsb and adc jns adc rex.WRXB sub leaveq push movabs sbb jle xlat add (bad) int test stos (bad) or lret paddsb ror lods sti adc add imul fdivs pop fnsave mov lods in (bad) jmpq fsubrl xor cmp rex.RB decb xchg lods insl mov rex.WRX incl lods in out retq fldl lods mov pushfq xchg subl scas xchg fildll and mov (bad) adc es (bad) scas movsb stos xchg in cwtl out adc lods cmpsb push cmp movabs sahf rex.B scas movabs (bad) xor movabs (bad) movsb movabs lret jmp outsl and lods mov (bad) pushfq sbb (bad) in (bad) out sub cmpsb cmpsl (bad) std (bad) xchg jge lods ja scas mov rex.WX rex.WR mov rcr jnp movabs scas (bad) mov vmovupd jbe mov rex mov sarb or or cltd lods push (bad) rex.RB jnp lods jg int3 jle mov stc movabs fs lods or cld hlt xchg callq clc mov or insb retq lods movabs (bad) (bad) jg cmp xchg lods xchg lea or adc test fldlg2 or cld stc int3 (bad) lret stos or popfq mov cmp retq sub rcrl lods push jmpq add adc push lods and xchg mov jo or lods sbb cmpsb rcrb loopne and lods xor jge lods jae pushfq loop imul jnp std rex.WRX scas adc insb in xor imul in lret cmc lods mov data16 add push int jbe sub (bad) movsl hlt lods iret (bad) sbb xchg cs lods in and sub callq (bad) cmp rex.RXB and sbb sbb lods callq and rex.XB rex.WR (bad) outsl mov lahf sbb sub hlt jl (bad) loope mov lods fdivl pop imul (bad) rex.WR xchg fbstp mov sbb add pop (bad) sub in lods sbb pop lods clc enterq adc pop fmull jge (bad) retq mov xchg movabs add rex.WRXB jbe cli clc and lods pushq or (bad) insl lods movsl mov (bad) jle mov rex.WR rex.WB xlat js (bad) jne (bad) pop cmp sub push lret (bad) rex.WRB cmp (bad) lods cmp (bad) mov cmp lret in (bad) shr fldcw pushfq (bad) rex.RX movabs rex.WR rex.R out xchg push lods callq mov mov stc cwtl lods jbe pop repnz int add fmull hlt ja mov out lea and pop outsb scas xor in adc (bad) lods push cli cmp jne (bad) outsb or in lahf neg sbb jne lods rclb add xchg sti insb pop (bad) mov push ss gs mov add mov (bad) jne in push lods pop ss rep data16 mov stos lods mov adc faddl lahf in loop int adc sub lock imul js mov cmp adc rcrb lea (bad) (bad) xchg test (bad) in loopne mov (bad) sub mov lods xor (bad) rol xchg or jae repnz callq jmpq lods rex.RX adc lods rex.XB in rex.WX pop lods (bad) je es sbb data16 lahf (bad) pop lods cmp rex.WRXB lods test mov xchg mov lods ficompl lods loope add sub (bad) stos push pop lret add rex pop loop add cmp clc leaveq xor sub pushq mov mov in cmpsl (bad) js shrb xchg and outsl int3 je jrcxz int std mov popq rcrl add xchg lods lea (bad) andb movabs test imul xor add jge xor cmp orl pop lods movabs outsb pop pushfq jo movabs lods push bnd in or js rex.WR rex.WRX xor and int3 cmp adc rex.WXB retw fwait adc lods test (bad) repnz retq lods add adc rex.WR addr32 lods (bad) fwait or rex.RX (bad) (bad) lods cmp callq rex.R lods orl out stos neg and xor pushq jp rex.B retq rex.WR xchg addr32 cmc lods test xor jae fstpl insl pushq pop (bad) test sbb (bad) cmp jnp fimul cmpsb mov and lods add stos addr32 pop lods mov sub or gs lods (bad) in rex.X retq add push mov lods js mov mov nop rex.WB fwait (bad) mov imulb mov adc lods out mov subl imul (bad) out or retq in movabs imul adc mov mov (bad) outsb pushq loopne je or stc add out (bad) gs jo fwait lods sbb or int or frstor and enterq cmp iret or cmp lea lock mov rex.RXB (bad) lods sbb jg mov and lahf stos rex.XB rex.X mov std retq js lods sub xchg (bad) and movabs sub mov jns mov adc and lods or imul lods outsb (bad) out sahf xchg fwait lock and add (bad) sarl callq (bad) cmp or jne push cs lods xor xchg (bad) fnstenv retq rex.B pop (bad) clc sbb mov adc sbb xchg (bad) sub xor or jnp lock repnz sar (bad) psubusb mov (bad) mov adc lods loopne (bad) and cmpsb jne stos xchg sarl ficomp outsl jrcxz repnz and lods rex.WR adcl (bad) mov adc cld (bad) cmp int push rex.RX cs jbe icebp mov std fdivrs pop (bad) push lods jnp rex.W rcl xor rex.RXB movabs add jl jmpq xchg outsb jge (bad) pop lods cli rex.WRXB in std int3 sbb lods xor jle lods out adc (bad) rex.XB fldt sbb add jno or testb adc test and movabs stos rex.WR hlt lahf mov icebp enterq add (bad) imul rex.WXB (bad) andb lods cwtl loope mov mov xchg cmpsl adc in mov test xor fdivs (bad) es jge lods cwtl (bad) fisubr or icebp and sarb shrl es rex.R adc cmp (bad) (bad) movabs and xchg fld mov (bad) jmp int3 fsubrl fisub cmp (bad) xor (bad) pop fnstsw mov or xchg scas movsb (bad) imul xor (bad) mov adc rex.RB rex.WRX xchg (bad) fbstp lods rorb rex.WRB jge xchg (bad) scas ja (bad) (bad) lods xlat cmp rex.XB and rcl sub mov fiadd xor xlat stc pop mov rex.WX mov mov add (bad) int3 rex.R ror xlat rex.WX rex.WRB jle jl mov rex.RXB cmc adc jb insl rex.R loope mov cmpsl mov rex.WR out mov mov test orl mov rex.R je callq mov xchg jge shr insb scas push rex.WRX outsl cmovo pop rex.WXB hlt cmp and rex.WX cmpsb scas jno bnd mov xchg retq or lea repnz movslq (bad) jb push stos mov cmpsb mov mov xchg (bad) xor xchg mov lods (bad) cmp add (bad) rolb xor nop scas mov fcoml sbb (bad) xor (bad) rex.WRB xchg (bad) movsl sub mov gs stos mov jl (bad) insl or lea lods or loopne (bad) (bad) rex.WRB adc cs cmp rex.W lods scas retq adc (bad) out fdivrl (bad) lods rex.XB mov (bad) (bad) callq outsl (bad) mov add scas cmp push loop jnp rex.RX scas pop cmp idivb (bad) push mov lods scas mov ja lods rex.WB add mov cmp xchg mov jl lret jnp (bad) lods test (bad) rex xchg lods or (bad) sbb mov mov push shll pop xlat pop sub jb (bad) rex push push cmp fldcw mov (bad) (bad) pushq in mov mov jl mov xchg rex.WR data16 rex.WX cmpsl rex.X out lahf lea mov rex.WR outsb fdivrl stc xchg lods lods cld rex.RX loope adc rex.R add clc lods fdivs imul fs (bad) adc (bad) sbbq fwait mov (bad) jg int3 dec sub mov lods sti rcrl xor (bad) and imull cmc rex.XB (bad) stos (bad) lahf or sub test loopne mov lret sub (bad) cmp (bad) (bad) outsl lods xlat xchg movabs fcomps cld cs and xchg or stos (bad) rex.R jle test loopne cs stc (bad) and mov ja mov jrcxz jnp xchg jle rex.RB (bad) in rex xor movabs mov (bad) sti enterq in jp test movsb mov sub (bad) rex.RXB or (bad) (bad) mov shl xor callq movabs xchg mov stos movabs pop add sub movslq movabs sub jmpq xorb insl xor sbb in pop jp stos in cli fstpl adc and int3 sbb hlt sbb test shlb sti rex.WRX data16 clc xor jg add movabs rex.WXB pop iret lods pop fisubl lods push int lods cli add or or mov sbb jl icebp in scas add in push cmp stos lea xchg stc pop cmp movslq cli (bad) cmp mov rex.RX clc rex.WR mov xchg push retq sub adc movabs xor and clc pop mov lods cmpsl imul mov add movslq lods cmp ja add lods (bad) (bad) push mov cmp lods sub cld test (bad) rex.W add pop scas je (bad) rex.RB (bad) sub pop insl mov rex.XB fsubr lods fimul (bad) fwait js clc pop mov loope mov (bad) rex.WRB in (bad) mov cmpsb mov cmp (bad) rex.RX repz push xlat and sti lods (bad) movabs ss mov push rclb sbb scas incl mov (bad) mov in pop loopne retq or rex.B rex.WR sbb test xor mov pop retq out cs rex.WRXB shr (bad) movabs lock pushfq lods sub (bad) (bad) scas push cmc stc lods movabs (bad) (bad) movabs jrcxz cltd (bad) or jne or loop mov je or insb out (bad) mov int3 in test notb movslq out cmp mov ds fimul scas (bad) addr32 jb (bad) hlt movabs add rex.R clc scas sub iret adc lods pop sbbb xor mov fadds xchg and jae sub xor movsb (bad) xor mov jle rol lea jmpq cmp or mov adc insl lods sahf sbb (bad) or sbb or sbb sub movabs xchg mov rex.R xchg js xlat mov sarb xchg scas insl (bad) (bad) or pushq lods (bad) cmpsl js fldl adcl rex.XB rex.RXB cmp int movabs jg lahf mov mov rex.X lock push fsubrl mov lret loopne fisubrl xor rex.R or adc jo adc and sarl mulb and rex.WXB jl movabs fwait lret rex.WRX and adc lods mov repnz cmpb (bad) mov movsb iret out lods pop mov ds loopne (bad) lods adc xchg jnp orl xor rex.WR rex.RB (bad) xchg out retq cs mov mov cmc adc jl mov adc sarb adc and lods jl or sbb repz (bad) (bad) (bad) xor add jno push std fdiv pop cmp stc jmpq movabs xchg (bad) lods jne (bad) flds xor rex.WXB scas fisttpl lods test xchg jmp mov cmp (bad) cmc lods ds xchg movslq push cmp and cmp xor jne sbb mov pop (bad) jg cld rex.WR mov lret (bad) rex.WRXB rex.WR stos scas cwtl (bad) (bad) movabs movabs pop loopne int3 (bad) lods test mov or push xorl rex.X int3 mov adc adc lods xor (bad) nop push rex.W rex.WRX or (bad) xlat shlb shrd (bad) out fdiv push lods cmp retq rex.XB shr popq sub ss insl movabs (bad) sbb rorl xor test push lods es add loop rcr rex.X lods scas rex.R rex.XB (bad) mov rex.WRXB sbb icebp rex.WR mov lods outsb in add fdivrs lods out or imul repz rex.WXB xchg (bad) retq sub (bad) push (bad) sti jmpq add xchg mov (bad) out lods jne mov mov in jns jge lods jrcxz xor push outsl jge lods lret sub xchg movnti fdivp jns (bad) cmp xchg mov mov mov fimul bts rex.WB jns adc movsb lock out pushq lods xchg xlat cltd retq and sbbl rex.WR lods loop (bad) push pop movabs fistl mov (bad) rcrb loope xchg (bad) cs lods loop insb out pop cmpsl fildl (bad) xchg lods (bad) jns data16 jmp (bad) in jne (bad) (bad) cltd imull xchg rex.B xchg in movsb shll movsl fisubrl sbb movabs xor lods out mov xchg pushfq retq lahf xlat add rex.RB std lods pop (bad) sarb adc cmpsb push pushq imul int3 sub sub or invd rex.WRX in xchg int3 outsb callq xor loopne and nop xor cmp test mov or rex.WRXB jge sbb mov mov mov jnp sti or in or add mov sbb mov (bad) xor lret repnz jnp test cmpsl sbb (bad) jl fcmovnu (bad) (bad) xor rex.WX lods fldenv in (bad) jg rex.W mov (bad) rex.WXB test stc lea scas loop mov rex.WRX in roll lods imul jno in stos lods pop ss imul add clc test sub or (bad) out sahf (bad) scas sbb cs fwait or decl (bad) mov hlt clc mov sbb sub lret xchg mov xchg jae ja in movslq (bad) gs lods (bad) testb movabs outsb mov xchg pop pop jae adc cmpsl jo mov rex.X gs cmpsb rex.WRX add shrb add fisttp rcr es movabs mov (bad) jae,pn (bad) (bad) retq mov lods rex.X jb (bad) lods stc movabs mov (bad) mov adc movabs movslq fstpt xchg (bad) jnp xchg mov shld xchg cwtl int xor popfq fs fcompl mov (bad) (bad) xlat mov mov xor (bad) nop lods and (bad) cld lods xor mov cmp jge callq imul popfq sub (bad) (bad) fmull adc int jg loope xorl shrb mov xchg outsl adc adc scas lods (bad) xchg (bad) or fldcw ss mov fs sahf xchg sbb retq add fcmove lea std pop xabort and rex.WR or stos stos cmp lock mov rol movsb (bad) (bad) scas lods imul cmp lret cmp fst and lods mov or mov retq lods rex.XB fwait lret mov lods fisub rex.WRXB jne movabs pop (bad) movsb lea jnp cld pushq mov jrcxz mov lods loop jb in mov push cmc xchg sbb outsl cli jrcxz movslq push test shrb nop mov rex.WRX sar pop jns cltd and lods and push mov sbb (bad) pop movabs jle loope lahf pop cld add rex.WXB gs mov mov lods (bad) (bad) or jg dec mov ja movabs xchg adcb out test cli rex.WXB sub loop out sub movabs sbb stos xor xchg lock mov jl jmp rclq je add mov mov lods in pop xchg insb out test ss lods (bad) mov sbb xchg mov lods cmp insb pop xor movsl jae fs cs (bad) std outsb cmpsb xor (bad) mov sub in mov pushfq sarl fisubl movsb jo mov pop fistl cmp stc (bad) push int3 ja xlat test subl pop jmpq jns mov cmp retq scas insb mov sub mov jrcxz idivl jnp je insl jmp adc (bad) shr cld mov (bad) jno stos pushq movabs pop sub mov mov retq retq mov sahf (bad) in add mov js movabs rex.W roll pushfq lea (bad) adc lods mov (bad) cmp adc xor (bad) repnz jge add sbb scas scas loop test add xchg pop stos rex.WRX lret (bad) test movabs adc mov rex.RB rex.WR cmp andb mov xchg roll rex.WRB jns mov jle imul pop xchg or sbb (bad) mov xchg shlb vpsubw fsubrs sbb add xchg push xchg sbb int xlat ss mov add icebp xchg out xchg lods (bad) jae (bad) mov (bad) (bad) lods add lret push pushq (bad) hlt add lods mov callq xchg movsl imulb xlat jbe and lods mov add lods xor int stos mov jl lret rex.WRX sbb jae insb in xlat or jmpq movabs movabs stc sbb movslq or stc scas xchg rex.WB in (bad) sahf test lods cmc pop (bad) lods int rex.WR rex sub pop jb movabs movabs imul xor mov add fadd push push cmc callq std sub cmp (bad) sbb stos rolb outsb jge lods xor push rex.B pushq mov mov test xor mov addl cmp or mov int jl lods (bad) (bad) cmp push xchg jge sti cld adcl (bad) lret xchg or loope mov cmp insb mov movabs xchg lods or (bad) xchg in lods sbb pop cli rex.WX movabs rex.W lods (bad) sti insl jle fs mov mov cmp (bad) out retq enterq lret add lods cltd rex.B mov and xchg and repnz and insb add mov lods lret pop (bad) mov (bad) sbbl mov sub scas int and rex.WRB rex.WRX add (bad) mov sbb lret rex.B pop movabs mov lock push mov xchg mov mov xor sub rex.WRXB rex.WRX lods xor orl xchg lret je (bad) and scas ficompl xchg mov pextrw rex.WR stos (bad) fnstenv lods mov in adc adc retq movabs sbb sbb (bad) ds sub xchg pop mov or lods mov mov (bad) jns movabs (bad) sub rex.WRB xor int xchg or jne sub repz retq lods or (bad) (bad) in (bad) (bad) lods mov pop test movsl rex.WRX lods mov mov lods jmpq setns shrl mov out jo (bad) lods sub jmp (bad) cmp rex.RX movabs mov jo sarq jle loope cmp xchg cmpsb enterq sub in int3 ss pop xchg mov xchg xchg repnz in sarb scas in sbb fnstsw lods fisubl mov cmpsl insl or outsl sub movabs int xchg pmaxub cmp in rex.WX lods (bad) pop callq loopne or mov ja fmul and rex.R rex.RXB mov sub lods lahf in mov imul lret (bad) stos (bad) or in in pop sub xchg lods mov rex.WX data16 or loope shr pop sub cli retq sbbl adc lods idivl xchg pushq cmc lods stos enterq movsb mov and data16 (bad) in test lods or mov stos xor (bad) lods adc xadd or xor rex.RX xchg jp mov movabs xchg out (bad) mov mov sbb andl mov enterq mov (bad) clc jrcxz movabs rex.WRB xchg cmp pushfq add sahf cmp sbb scas (bad) adc lock xchg rex jmp lods lods or lods jo xor jnp lods rex.WX (bad) (bad) xorb mov insb adc pop lods cli cwtl mov or rex.RB int out fmull (bad) lods out jle scas mov sbb and jg (bad) lods ficomp int3 not jmp pop data16 insl xchg rex.X fs xor lods pushfq pop std and rex lods mov out jl xchg clc sbb movsl adcb lods mov jrcxz fdivl adc rex.WXB lret pop lods xchg cmp (bad) imul add fstpl scas movsl fsts adc lret mov pop mov or mov ja lods idivl or mov rex.RXB (bad) loopne mov retq cmp mov jo xchg (bad) mov movsl ss jo clc scas decb test add movsb mov outsb lods (bad) xchg (bad) and pop pushq mov adc mov in stc jne in rex.RB jmpq test shrb and retq (bad) sub xor stos rex in loopne lods fmull sar mov clc pop xchg lret pushq jl movabs in add lods mov and movabs (bad) or lods rex.RX mov jnp (bad) lods je and negb xchg shrl retq icebp rex.WRB sbb pop xchg lods and (bad) pushfq int3 mov (bad) sub sub es enterq jle movslq mov pushq jmp xor (bad) stos (bad) (bad) rex.X rex.RX and stos cmpsb cmpb (bad) jrcxz idivb cmp movabs lret scas adc fdivs out push (bad) test pop scas sbb adc or rex.XB scas push sub mov leaveq or in int3 jrcxz pushfq insl jmpq jns (bad) fwait rex.WX rex.B repnz int3 scas jae js xor retq adc rcl cmp and lods (bad) jo add imul xchg lods fdivrl or scas (bad) shr rex.XB repz lret repnz hlt (bad) adc (bad) mov mov out fldcw adc rex.B imul xchg jb rex.WR push mov jp rcll xchg rex.W js rex mov (bad) cmp cltd jne stos fbstp push out insb insb movabs cmp test xchg or xor gs mov xchg enterq mov fldt outsl and (bad) mov mov cmp scas std loop mov add pop lret mov (bad) je lods xchg rex.X rcr mov clc or adc test clc jg pushfq cmp fcmovnu add lret or and jg in (bad) repz incb rcrl loope xchg insb mov (bad) (bad) xor or (bad) add lods add vandps lock in roll movslq sub jge lock adc jrcxz (bad) sub (bad) movabs sub add lods cmp pop add insl add lods in int push (bad) testl (bad) cmp roll add test (bad) adc lods rex.XB (bad) fidivl xchg retq mov jae mov notb rex.R lods pop xor test retq rex.WRX cmpsb mov xlat rex.WB in mov mov lods stc cmp lods pushfq retq mov push rex.X sbb sarb and adc adc (bad) fsubrl adc lods sub lea xchg (bad) and nop sahf cmc jmpq lret or mov jnp jl data16 and xor or mov fldt mov cmpsl es (bad) xchg clc repnz rex.WB adc sahf (bad) stos adc or adc rex.RXB sbb (bad) nop (bad) out add or push lods rex.R hlt ds lret test mov insl sbb (bad) cld movslq mov jb js roll rex.WRB adc lods fcoms lahf je pop lea mov mov xor lods (bad) fstpt add outsb lods movslq mov lods rex.W repz loopne sub lods (bad) jnp fmull insl outsb (bad) fwait cmp leaveq pushfq loope lods cs xchg stos (bad) add lods xor adc pushfq lods xor mov or in loope lods add push (bad) jbe and lods mov sub or xchg int clc scas cld sbb scas (bad) sbb scas movabs je jnp cld push (bad) rex.RB scas (bad) jmp sahf mov jrcxz mov (bad) or fwait push push sbb scas hlt add adc jmpq mov stos (bad) lods (bad) int rclb sub cld ja int (bad) mov xchg hlt push lods lods jp cmp lods (bad) (bad) pop insl leaveq sar (bad) sbb jnp lods outsb lahf xor (bad) fadds orb cmp (bad) pop pop sbb rex.B lods (bad) push rex.R rex.RB xor mov add outsb xor cs or out rex.RX movabs add outsb lods clc insb lret sarl pop xchg xor rex lods or in pushq mov jo (bad) xchg rol insl lods add rex.WXB mov jmpq pushq repz cld test push xor or or xchg subl mov xor lods stos mov mov (bad) movabs mov pop (bad) fstpt pop cmp add jmp jo mov jp movabs repz xor lods lret mov fistp movabs mov movabs sbb leaveq lea fldt and out sbb lods loopne movabs rex.RXB (bad) adc jo (bad) stos (bad) movabs lahf jbe cwtl mov jne jle sti pop mov scas pop pop jp rex.R ss incl movabs rex.WXB lods cmc in pop cld (bad) mov loopne insl mov mov in mov push and xor jp scas (bad) add lret and rex.W out adc xchg sarl add xchg jge sub mov lods mov jae pop xor leaveq (bad) xchg fimull sbb in lret add (bad) lods sub callq or stos cmpsb (bad) lods xchg cltd fs std rcrl sub lods jge or test (bad) out (bad) jo notb iret movslq movsl rex.WRB fidivl sahf mov mov pop nop jmpq pushq (bad) scas ss stc cmp rex.WRB out (bad) pushq cmp jge push xor repnz lea je or (bad) rex.B (bad) jns imul sbb sub xor scas rex.WB fwait data16 ss out cmp stc lods jnp rex.X lahf movslq loopne sub mov movabs lods mov scas (bad) jnp adc (bad) and mull in lods xlat shrb mov lods xor fildl (bad) adc sbb (bad) lods cmp jmpq mov lods loop and (bad) rex.WRB sbb xlat rex.WB push retq and xchg xchg sub rex.B fsubrs cmpsb xchg in xchg mov scas pop mov mov scas xchg or rex.RXB (bad) (bad) jo movsl test lea std sbb fstps ljmp (bad) fidiv mov mov (bad) sub mov in (bad) pop sti out ja push iret pop and mov mov adc adc add sahf mov jmp int3 ds (bad) js jae cmp or cltd mov rex.B test jrcxz fnstsw cmp xor mov (bad) or pop cmp jno (bad) jmp lods rex.WR orl mov (bad) adc mov (bad) sbb lea and adc xor sahf rex.WRX (bad) jno adc fnsave sub int nop test rex.WXB sti (bad) sub stos (bad) jmp mov sbb sub iret (bad) imulb lods rex.WB ss pop sub (bad) fwait lods rex.WX adc out std mov enterq (bad) subb or pop movsb rex.B mov sahf push loopne rex.XB test ds jl scas pop cld fs lock scas (bad) cmp jne jbe rex.RXB cmpsl lods add imul ds scas mov callq mov sarl jb xchg rex.WXB rex.B outsl scas loop lock sti out movabs xchg xchg (bad) sbb out test movsb (bad) rex.X pushq (bad) fistp imul pop push sahf mov or (bad) jg mov (bad) mov jrcxz movabs xor nop xor (bad) movabs pop rex.X or and insb lods cli es xor jbe (bad) mov sarl clc xchg fstp scas mov out leaveq outsl mov xor in lods (bad) and loopne pop lods mov rcr rex.X sub lods imul test mov sbb lods (bad) pop (bad) xchg movabs (bad) sbbb callq in jb (bad) rcrb push mov sub repnz outsl sub fldcw iret shrb mov in shrl (bad) (bad) fldl movslq (bad) pop rex.WX fwait in push and and xchg pop scas in cli cltd (bad) mov xor xor movsb (bad) (bad) adc fisub gs xchg push xor fsub mov lods pop rex.WRB test mov push out adc in (bad) rex.WRB xor (bad) xchg mov cmp (bad) jmpq push iret mov xor rex.R lods or shrl rex.WR lods xchg fiadd and adc adc lods mov jp rex.RB rolb movabs imul xorl and rex.XB lock cld rex.RXB pop jbe add jne popfq gs imul xchg mov rcr add pop (bad) (bad) sub sub roll mov add movsb pushq xchg jb fadd and popfq pop outsl lods cmp rex.WRX jbe retq lods (bad) out push xchg and lods pop mov fcom mov jmp add and mov rex.WRB cld xchg (bad) adc insl out or cld adc iret cltd jl lods mov jno shl rolb lods mov (bad) lods lods (bad) sub icebp (bad) lret jle mov jne sbb cmp retq pop sbb jp lods (bad) in sbb push fs jno scas pop imul callq hlt mov xor sar rex.XB pop push sub and rex.WRX cmc insl mov sub jmp mov adc jne stos mov lods nop push lock rex.WR lods (bad) jg je or shrd int3 in and jno adc or push cmp rex.W lods and mov sbb movsl fdivl icebp movsb mov enterq test (bad) je cmp sbb out clc (bad) rex.WX jrcxz sub incl cmc pop adc add imul cmp mov sbb adcb rex.RX in sarb hlt mov js push xlat rex.WRB lods loop pop (bad) cltd addr32 lods mov rex.WXB movabs (bad) xchg add scas (bad) mov (bad) rex.WRX addr32 test std or mov int3 cmc lods sti push ljmp add (bad) (bad) (bad) movl and lock lods lret (bad) mov (bad) (bad) adc insb out cmp (bad) ds (bad) xor nop sbb rex.WXB rex.WR ss (bad) in in cmc stc (bad) add or notl adc (bad) jrcxz sub in test lods mov jo cltd rex.W mov (bad) hlt fs mov in hlt stos movabs lods adc cwtl mov (bad) test int mov (bad) in cmpsl mov pop test lahf callq adc imulb rex.RX rex.RB and imul adc mov (bad) mov sahf movsb lods retq rex.WRB xchg xchg and in cmp es (bad) cld xchg ljmp rex.WXB in (bad) xlat lods cmc (bad) subl and (bad) scas or push jo jnp movslq stos scas int (bad) pop push mov mov (bad) pushq retq mov rcl leaveq adc js pushfq lods test mov jg mov mov movabs sub lods jg nop shrb outsb xchg (bad) stos or lods loope out pushq retq mov cmp jbe sub int3 out mov xor loopne (bad) lods mov and loope lods xchg cmovle popq (bad) ror cmp sti and lods push (bad) lea jne lret sub imul mov or sarl mov pop test ja (bad) jne lods and rex.WRB (bad) lea sub decl mov cmp mov lods cmpl movsl mov lods icebp out mov mov mov mov (bad) scas cmp rex.RB rex.WB stos jb (bad) or xor je or mov lea fs xlat xor scas rex.WRX fnstenv lock jo (bad) stos stos adc (bad) in lods mov test retq movsb sbb xchg test fstps xchg cld lods (bad) adc and addr32 (bad) lret mov (bad) xchg rex.X (bad) insl stos lods movb in adcl sub mov fist scas insl (bad) mov sub int jge test lock mov repz mov out lods (bad) movslq push shrl test loope add (bad) xlat add imul mov (bad) lret lods jae clc or mov (bad) stos sbb sbb sub rex.WRB sarb pop movsl (bad) out insb and fisttp rex.WXB outsl sarb test movsl jmp rex.WRB jl (bad) or out (bad) jno sarb mov xchg lods imul pop fidiv mov jno (bad) lods cltd (bad) test jle rex.WRB lock (bad) pop jo (bad) mov (bad) rex.WRXB jp scas and in xchg lret rorb outsl push loopne insl jb lahf push add test enterq mov sahf in ds (bad) mov in xor jne mov lods mov pop lods cmp cli mov mov add jnp cmc mov mov imul enterq rex.W cmpsl (bad) in lods rex.WRXB add ftst rex.X leaveq test sbb add je insb lods sti (bad) xchg sub cld test mov sub (bad) popfq outsl gs (bad) adc (bad) lods add xchg jg cmp scas pushfq adc pop mov or (bad) callq jmpq add (bad) stos xchg hlt adc sarl scas movabs stos jmpq ds rclb (bad) clc test pushfq int3 jno stos mov scas (bad) cmp mov rex.WB test movabs mov sbb vpshaq (bad) mov (bad) icebp (bad) sub (bad) (bad) retq movabs jmp add xchg popfq sbb add ja push shrl sub xlat (bad) mov (bad) cmp mov lods cmp (bad) cmp mov and gs rex.WRX movsl adc imul mov or int3 push pop roll rex.WRXB repnz mov lahf lods movabs mov test mov and or fldl mov cmpsb rcrl rex.WRX imul in add mov cmp sbb imul stos leaveq add (bad) (bad) mov xor jb (bad) cmp rex.WRXB sbb (bad) retq sub sbb (bad) mov and lods (bad) mov (bad) xor push movnti lods xor ja (bad) movsl jnp rex.WX insb sub (bad) xchg stc mov outsl mov jrcxz sbbl out shrb orb int3 lods rex.WR rex.WB movslq jmpq sub xchg enterq push or xchg fwait rol (bad) scas jbe jns insl mov lods jb jp cmc xchg mov lods xor imul test jp add repz mov mov rex.WRX (bad) xor sub (bad) jrcxz outsl sarb and callq mov imul mov ss scas push imul lods lret mov (bad) scas lods push (bad) mov pushq sub pop je cmpsl lods sbb outsl fs lods xchg pop cld jge notl cmp rex.WXB cli lods add push test pop lods out pop sub sub lods add roll push xor mov jmp in test cmp or scas psllq lahf hlt (bad) mov imul jge sahf (bad) cld in shrl (bad) stc jb in mov lods out retq movabs xchg sub outsb rex.X xor xchg loope jae fisttpl mov xchg notl jg mov jne mov (bad) mov ror ss in (bad) ja adc adc jno and add sbb add (bad) mov xor insb sahf (bad) cmp mov (bad) jge retq stos push std and add std jno mov cmp sbb cmp rex.WRX adc andl xchg loop rex.R cmpl (bad) jmp sub sub (bad) pmulhuw mov cs sbb (bad) pop shrb lret fs fldcw test sub xor movabs (bad) ljmp mov sub mov lods and rex.WXB push icebp adc push lods mov lods pop (bad) xor mov jb scas ja (bad) stos sub or xor pop mov lahf or (bad) lods test sub sti (bad) xchg lods callq test pop (bad) lea (bad) lods pop push insb out mov (bad) gs ror mov (bad) fs and push insl lods movsl xchg lods jbe pop push mov sub popfq (bad) and shrb outsb pushq stos subl movsb jmpq insl scas (bad) fldl or rex.RX or cli jp rex.XB mov and rex.WX xchg push or pushfq cmp xor movsl jge sbb sub adc int jg adc add or lods xor lahf mov (bad) adc retq lea lods insb pushq repz movabs sbb (bad) test rex.WRX shrl cmp imul mov add retq add (bad) mov xor cld pop out sbb rex.RX rex.WXB add xor or movabs cwtl rex.WR lods cmp and out pop add hlt (bad) rol (bad) (bad) lods test mov (bad) outsb (bad) (bad) sti (bad) rex.R in (bad) xchg movabs fidivl lods or mov add adc sub adc rex.R push cmpsl idivl xor cmp mov or and out fadds pop pushq mov stos shr (bad) (bad) sub mov xor (bad) movabs cmp shrb fildl push adc fiadd mov mov (bad) sub sbb jrcxz rex.WRXB mov movsb jo outsb and pushq xlat pop (bad) lods fiadd sahf hlt clc std mov lods xchg (bad) rex.RXB rex.WR andl movslq (bad) jo xor stos movabs popfq jo jge add sub (bad) movslq sub stos stc pop insb pushfq fiadd fistpl lods jbe fwait xchg ja negb adc pop xor mov fst mov cmpsl loop sub adc retq add pop retq enterq clc lods xlat cmp movabs rex.RXB mov jne add xchg lods (bad) sub mov lods (bad) fisubr mov jl sti pushfq mov out lods lods push jg scas push cli adc imul push push pop in xchg cmc mov lods xchg jl sahf pushq (bad) and pushfq mov xlat rex.WR (bad) nop lods outsb icebp and adc rex.R movslq rol add lods and scas negb icebp lods mov mov fsts pop or test jle loopne mov cmp (bad) (bad) lods sbb cli pop stos (bad) (bad) rex.WRX repnz sarb jo je mov jge fldcw je or out lods mov jl mov cs jl rclb (bad) pop scas sbb sub pop faddl lods jae jo movabs (bad) loop in mov adcb cmp retq mov out jge lods xor lods pop lods lcall jne flds xchg sbb clc push jno xchg ds xchg movslq sub test mov xor adc lods pop mov sub mov in (bad) (bad) retq rex.WX rex.WRX lods pop jrcxz rcll out pop pop and je setp add xchg insl in rex.WB add cmpsl lods cmp mov lahf push scas push (bad) (bad) mov fstps mov mov movabs pop (bad) add lret and insl (bad) jb (bad) push sub rex.X lock push cwtl lods xchg movabs adcl or retq or (bad) rex.WXB enterq cli rex.RXB mov push retq iret sbb mov xchg (bad) lods or cltd or (bad) stos jle adc cmp lods xor add lea (bad) test out push fs in mov or lods rex.WX movabs leaveq fs mov shrb and lcall fimul repz lods (bad) sub add (bad) mov lods and (bad) retq test cmp rex.B push scas lods vxorpd xor out shrl mov xor mov mov popfq jge lods xor rorl data16 test jns sub lods test lods adc pushfq stos test rex.WR es pop (bad) scas xor or data16 nop mov (bad) lods sub xor lock adc rex.B mov hlt xchg fdivl fldt add pop lret mov stos leaveq and sub rex.WXB or xlat cmp lods mov cmp add shlb xor loope pushfq test (bad) (bad) jmpq sub and xorl cli adc insl clc jns cld loope rol push (bad) mov xor int stos (bad) xchg jmpq rex.R adc jno rex.W repnz (bad) add cmp shlb rex.WRX and rex.WRB sub (bad) and push rex.WB lods sbb lret rcll mov xor cmp loope test in sbb rex.RX rex.R sub cmpsb rex.WR repz jae xor add sahf cltd mov ja (bad) mov outsl out imul lods jmp enterq outsl pop mov scas popfq mov imul rex xor stos fldenv rex.X out adc rex.WB enterq add mov enterq mov adc jp in lods out or hlt (bad) cmp lods fisub rex.WRB (bad) xchg lods xchg sahf int3 lret push nop sbb rcr rex.RXB rolb sub enterq loopne lods fnstenv jle scas pxor cmpsl (bad) in out sbb lods or callq sbb jle rex.WRX cltd add out mov mov int3 sbb xchg lods mov jge (bad) mul lods jnp or jb int3 movl jb scas cs lret in jmp lods or test lods insl mov outsb mov lods add xchg (bad) or imul movsl xchg mov lods or jns mov rcl jnp mov sub jp sti (bad) int xor mov xor xchg outsl movabs or fdivl (bad) xchg rex.WR lock pushq rex.WRXB mov jb fidivr pushq pop jge pop (bad) gs xor adc sahf mov xchg push pop add ja out add mov movsl cmc scas xor cmp rex.WR sub sbb shll adc or fld sti lods loop cmpsb lret lods lods mov jae xchg movsl xor leaveq (bad) (bad) or in (bad) pop pushfq sub rex.R mov jrcxz decl (bad) cli sbb in shrb lahf loope fstpt sbb (bad) add js (bad) mov fldt clc (bad) xchg pop add xor mov mov (bad) add insb rex.XB mov rex.WX rex.WX mov push lods imul sbb mov mov mov insl push and fstps or repnz fidivr mov mov sbb fldt sub add rex.R (bad) mov rex.XB lods fdiv (bad) (bad) xchg fs sub (bad) hlt rex.WXB popfq nop mov js lods xor (bad) (bad) in repnz mov jo test lods mov mov (bad) xlat and sbb (bad) xchg out (bad) pop fsubrs psllw (bad) xor jl sub movabs cmp (bad) insb ja sub popq mov or (bad) lods mov pushfq loop lods cmp jbe lock mov xchg push jno fdivrs jb and stos adc (bad) xchg fwait loopne lods xchg add adc mov (bad) rex or mov (bad) xor retq cmp xchg rex.R jbe cltd rex.RX addr32 push test sbb rex.RB imul rex.WXB out in add cmp rex.RX (bad) (bad) sbb loope out in pop scas movsb mov mov and orl adc mov ds add lods movl insb movabs retq rorb mov xor js rolb sbb push pop cmp lods rex.WRX hlt pop sub cwtl in mov jmpq rex.W lock (bad) cmpsl xchg lods imul movsl rorl rex.WX rex.B and adc fincstp mov xor fcoml mov mov or xchg sub in scas pushq cmpsb cmp insb cwtl fcompl (bad) insb jl jle pop test (bad) insl mov lock test mov push jns lods rex.WXB (bad) xchg movsl (bad) or mov jp mov fnstcw test je test jns stos in ja sub lods loopne out add or rex.RXB sub (bad) push add pushq rex.W sub loope (bad) sub in shrb xor jp rex.RXB adc cmp (bad) fstps mov sbbl stos scas mov lods or rex.R cmp sub cmp fisubr sub or shrb rol int3 js lods retq lahf jbe or stos js and cmp (bad) fldcw cmova sahf xchg lods imul rex.WRB adc add mov sub scas jne lods (bad) fistl mov fsubr jo sbb int3 or and mov xor int ja lret shll test jno fcoml lods (bad) icebp mov sbb (bad) lods data16 cli lret cmp rorl adc rex.RB lahf rex.WB sarb retq (bad) (bad) sarl or fisttp push nop pop sub test rex.WX gs test lods (bad) mov imul xchg int3 rcll rcrb rex.B lods (bad) mov jnp mov faddl cmp jns lret push lods sbbb fdiv lods xchg cmp rex.WRXB jmpq (bad) (bad) ss jne lea cld fs sbb lods rex.WR (bad) adc xor fxch pop (bad) rex.WXB push sbbl add mov fisubr (bad) test je jmpq leaveq enterq add ja pushq scas (bad) div add (bad) push add loope (bad) callq mov push pushq or fs scas enterq (bad) add jl retq repz mov lods notb mov rcrb xor lods stos add mov stc lods mov cmpsb mov lods in (bad) out xchg test (bad) xchg sbb jle scas adc out test rex.RXB mov clc sbb lods stos rex.WRB repnz jb sub mov adc scas and movabs lea cmpsl jl (bad) mov shrb sbb lods pop std outsb rex.WRX (bad) jno lods js (bad) and out lret sub sbb push xchg in or jmpq adc rex.RB adc loop sub sbb scas adc rex.B repz lret add ja rex.WR rex rex.WRX fldenv insl cmp scas xchg push sahf sub and mov adc cltd cmp (bad) lods adc mov callq pop (bad) (bad) mov es sbb lods and cltd rex.RXB cmpsl or stos std je (bad) xor scas sub jb sbb sub pushq mov (bad) rex.RXB xor adcl out stos mov jne and mov mov (bad) lret and (bad) data16 in (bad) mov add (bad) scas jg and mov mov lods jmp fnstsw or (bad) add stos sbb lods sub and or (bad) lods cmpsl adc cmp rex.WX xchg test out cld ja (bad) insb jl xor in xchg lods mov xor (bad) bnd or xchg out pop sbb loope stc lods (bad) (bad) sbb mov jmpq rex.WRB stos push mov shrb sti (bad) push mov iret pop shrl decb fisubr rcll (bad) rex.XB cmp nop outsb mov (bad) sub (bad) mov in lods rex scas sub (bad) nop push mov gs (bad) sub imul xchg retq xlat or jae pop in loope test mov or subb cmp callq (bad) pop sub pushq xor (bad) jne int mov adc mov jp mov xorl xorl jbe adc lods out mov stos scas fsubl rex.WR movsl in lods push lods rex.R stos int3 lods fwait test fisttpll mov hlt sbbl (bad) push jne add xchg (bad) in (bad) lods popq rex.WRXB add lods callq fwait mov mov rex.R hlt sbb cli movsb movslq scas loop test lods movabs iret mov xchg pop adc mov (bad) (bad) mov icebp push lods cmc mov iret movsb fs lods scas sahf repz add stos cmp pop lods (bad) xor add mov lahf pop cld loop rex.RX lods fs (bad) (bad) shlb movabs cltd jle (bad) mov lods outsb and bnd push pop lods pop adcl lods xchg (bad) (bad) maskmovq adc cltd movabs cmp test gs adc lods sbb xor (bad) mov shrl sbb in movabs stos out por rex.XB loope sbb or add movabs mov adc loope xor sub adc mov xor imul (bad) mov data16 (bad) (bad) vmread cmp (bad) xor lods mov fdivl lods or jnp movsb rex.W scas (bad) mov pushfq pushq adc push stos out test sbb sub rex.R pushq adc rex.B (bad) divl mov jge rex.RX mull cli leaveq test mov imul cmp sub sub scas lret mov movsl xchg scas cmpsl cmp cmc pop out lods shrl (bad) jb,pt movslq fs test jmp fimull leaveq test sbb jb (bad) push cmp sarl (bad) retq fsubrl (bad) lods ds test in xchg mov fiaddl es leaveq rex.X sub out ficomp (bad) cli (bad) ss (bad) add or std (bad) sub mov and xchg scas xchg mov in hlt (bad) sbb in lods sbb rex.WR xchg jmp pushq jrcxz (bad) outsl jmpq lods rex je (bad) test mov rex.WRB insb (bad) mov repnz mov rex.WR (bad) and (bad) and xchg ja jl ss mov lods pop mov (bad) adc mov mov in cmp rorl sub fldt lods cmpsb pushq adc lods sub add xchg mov loop (bad) (bad) adc leaveq xlat shr push fwait lods mov xor cmpsb test movabs cmc (bad) test callq xor add mov rex.WRXB mov (bad) rex.X out mull (bad) outsb out or in lods mov cmp and rex.WRXB adcl jae test (bad) cmc mov (bad) and loope rex.RX rex.XB jmpq insb rex.WB shrb and mov hlt ja mov add lahf rcll sbb cmp (bad) (bad) xchg movabs callq mov scas insb outsb fidivl add (bad) lods add fcoml (bad) imul movabs adc cmp xor callq imul sub mov popfq fwait lret cmp (bad) insb in rex.RX scas jb rex.R repnz sbb mov cmp lods xor (bad) xor mov jmpq mov and sub rex.W push lods loope push mov lods jg fimull xor (bad) mov jl cmc or sub cmp out movslq or or imul insl adc out mov add stos callq mov movabs xor lock pushq (bad) test pop pinsrw jge jg movsl rex.WRXB loop mov rex.WR or scas pop retq out adc (bad) out loopne retq jne (bad) data16 rorl imul (bad) cmpb rex.WX lods mov (bad) hlt gs pop mov retq lods add movabs jl (bad) sahf fimull stos loopne sub or fidivrl lods mov add rorb mov repnz hlt rex.WXB fwait outsl movabs ja loopne lods or insl std jnp fisubrl loop (bad) rcrl rex.X (bad) movslq cld and jge mov scas cmp jo mov fdivl add or rex.R (bad) pop iret rex.WB adc mov insb nop int3 negl fwait andb lods lods jne jrcxz enterq (bad) xchg mov int lods movslq scas pushq int3 (bad) mov (bad) icebp lods pop adc or sbbl (bad) insb lahf imul mov std sbb gs cmp mov xchg retq or rex.RB cmpsl sarl callq mov in outsl jle shrb mov push lods mov pop sub pop rex lods jnp xor cltd mov adcl mov pop out out (bad) push scas add js mov std in mov mov xor sub outsb jnp and enterq cmpsl scas retq (bad) mov mov shrl fldt sbb test jno xchg (bad) movabs xor sbb mov retq lods incl fs leaveq test rex.WXB fwait mov and lods fstl lods jl (bad) mov or loop sub sbb xchg loope push cmp add int3 lods negb (bad) fwait test outsl in (bad) xor (bad) (bad) xchg lods and mov (bad) rex.WRB rex.WB lods mov in int3 mov imul xchg add rex.RXB loopne xchg jns lods or rex.X popfq in mov js (bad) sub int3 xor (bad) (bad) scas scas stc rex.WRX jne pop in cltd leaveq pop lods rex.RX xor sbb adc sub xchg sub push lods adc ss rex.RXB lods push jge lea mov pushq mov cld ss loopne mov (bad) sbb sub lret mov jns jp mov fidivrl decl adc lods (bad) adc push hlt mov lods jbe cmp stos (bad) or (bad) cmp cmp mov insl shr mov mov xor sbb repnz loope clc (bad) add sbb adc xor (bad) sub rex.R jl pushq adc je lods sub in mov repz fwait lahf (bad) insb (bad) add mov in and shlb add andl jmpq cli jmp cs xor out out (bad) mov js cwtl mov sub cmp mov add (bad) out rex mov xchg lahf sub xor fwait retq adc insb insb sub cmpl rex.B rex.X movslq sub stc sub cmpsb lret sbb push popq rex.X (bad) imul xchg imul push test and mov mov je jrcxz and (bad) adc in rex.RXB xor rcl lods retq (bad) ja jbe and lods mov adc fisubr xchg lods cld in jns add cmp pop sahf jo rex.B cld (bad) cmp imul add mov (bad) lods cmp xchg (bad) mov rex.WR jno sub (bad) sub shrl rolb or cmp mov cmp mov adc (bad) cli in xor adc adc out mov loope movabs pop or xor addr32 cmp jl and shrb and lods push mov mov pop mov mov js xchg pop adc lods lea (bad) rex.W fbld addb std cmp xchg fmuls add mov xchg mov rex.B rex.WXB add lods in push cmp cltd cwtl outsb shrb mov add bnd movabs rex.XB add cmp mov fsubl xchg fwait stos sbb jmp xchg cmp in rcll rex.W sbb js xor xor int3 (bad) (bad) stos fldl stc and (bad) mov mov stos xchg and hlt lods cli (bad) mov in rex.XB (bad) mov pop adc (bad) rex.W rex.WB mov movabs in and lahf ja out xor xchg lock jb rex.RX mov sbbb imul xchg sub icebp (bad) xchg (bad) in sub push jg (bad) mov lods (bad) add cld push xor (bad) or (bad) or jo sbb adc (bad) or (bad) push mov stos (bad) cmc hlt sahf jns testb (bad) lods int3 adc cld jbe lods rex.XB ds rclb pushq mov popfq in lock (bad) lods fildl or negb rex movabs insb cmpsb enterq or rex.RX adc add iret or lods rorb scas lods rex.WRXB rex.WB lods push pop (bad) rex.WRX fiaddl mov (bad) push jg or mov cmp mov lods (bad) repz lods push imull xor xlat (bad) fidivr out (bad) adc cli mov fcomi add and (bad) (bad) pop lods jb pop sub jg mov fist insb or jmpq (bad) (bad) loopne jnp sub lods or push pushq jbe cmp xchg rex.WR jb lods in sub pushq shlb mov mov fmul rorb (bad) idivl add lods rex.X xor lods loop lods mov mov stos mov insb sarb pop or sbb lods push (bad) mov rex.R ss jrcxz add test imul add adc out pop popfq mov add sub lods jle sbb mov xabort push jle movsb hlt (bad) pop mov loop rex.WRX jrcxz lods cmp lea je in cmpsl mov jg adc ljmp imul push pop int push movabs movabs jmp mov scas xchg fnsave in es pop sub rex adc push (bad) (bad) rex.W lods in retq lods retq cli pop push rex.XB xchg mov mov mov (bad) sahf std sbb lods xchg jns cmp mov mov pop imul pop pop (bad) rex.RB rex or or ljmp jmp sbb lods add lods mov in pushq rex.R test or sub callq push sbb loope pop lods out push popfq (bad) outsb rex lods sbb adc and insl not stos jae xchg shlw es movslq std (bad) (bad) gs movl (bad) fdivr cltd sbb test mov outsl ffree cwtl in (bad) mov pop or lods rcl callq insb lods sub je (bad) movabs mov insb lahf out outsl or rex.WXB (bad) fs cmp jp lods jmp (bad) mov sbb lea outsl (bad) lods cmp (bad) pop or mov iret loope mov mov imul adc (bad) lods and (bad) scas pop add (bad) ja rclb mov (bad) rex.WX (bad) outsl pop or mov (bad) xchg dec sbb fildll in or shrl cs xor int3 (bad) mov lods rex.WXB (bad) mov rex.B rex.WRB stos pop rex.WR mov (bad) sti pop cwtl enterq lods (bad) fwait push fmul in mov mov (bad) out jrcxz lods (bad) fs xor shr loope xchg (bad) rex.WRX (bad) lock stos jge xor scas pop sbb movabs lea lock movabs lods mov push cmc or imul add (bad) jne js rex.WRB mov (bad) stos imul std adc (bad) sub out in or rex.WXB rex.XB cwtl add fidivrl ja sub clc fnstenv (bad) sub push orb (bad) lods cltd test (bad) sar in mov cmp jne jo sbb fcomps jg int3 mov sbb xchg rol movabs movabs hlt stos sbb add iret xor lods (bad) push stos movabs sbb repz pushq sti cld (bad) (bad) mov in sahf fstpt rex.RXB (bad) xchg callq xor fdiv jnp paddsw push jno movl and (bad) and lret or rclb (bad) and test sub shrb mov add mov scas jne lods sub repnz xchg push (bad) scas cmp in imul xor cwtl lods and decl lods test xchg cltd (bad) stos mov sub and stc lods (bad) xchg push cmp retq nop test jb (bad) clc out test vpcmpeqb cld movabs lods (bad) sbb sahf in int3 in negl stos xchg or rcr sbb and cmp (bad) fs lods rcll sub stos cld and rex.RXB hlt andl xor and jl lods or rex.XB mov sbb lods cmp (bad) cmp rex.W and mov fisubr sbb stos rex.RXB pop test mov jbe jae js jnp or lods jp stos sub (bad) jrcxz jl lods and xchg (bad) rex.WRXB sbb mov fs jle and xor pop cmp mov je jne mov nop sub imul (bad) mov rex.X adc fidiv mov stos mov cltd insl test add (bad) or (bad) and and nop lock cmp shrb shrb fstpt out cmp lock pushq xchg movabs pop (bad) stos std stos cmp fnop in add push (bad) push insb out jno push nop (bad) add cmp (bad) in and mov and sub outsb and jb lods in rex.WRX lods rex.WB adc xchg jnp sub sarb ss (bad) mov movabs mov lock push sarl sahf fsubr add sub (bad) repnz rclb (bad) es (bad) mov adc xor (bad) xor iret int3 (bad) add jmp jbe adc rex.XB pop lods lock mov cltd movabs (bad) mov movsl scas lods add movslq lods add adc cld adc (bad) cltd lock (bad) jo lahf insb or repz sub lods in (bad) rex.XB int3 ja adc lret mov clc (bad) mov jae sub repz cmc add pop rex.B imul xor lods (bad) mov lods sub jne (bad) mov jmpq in (bad) cmp rex.XB lods imul fstps mov (bad) lods sub add pop insl jl lods pushfq pushq mov ss jnp adc outsb push imull lods mov sbb or scas push xor pop (bad) (bad) in sub lods fldl fisubr (bad) retq stos (bad) mov (bad) rex.WR movabs mov or jl out scas mov roll push cwtl sbb pop or lea cmp lods imul (bad) xchg insl sti jg sub sahf mov (bad) int jne sub repz sub pop adcl int movsb jb pop mov out and adc (bad) sbb sbb and lock jae movb js outsl (bad) (bad) test pop stc rex.W adc int3 cmp mov clc fildll vpmullw jrcxz or (bad) out xchg stos push mov scas add mov jnp pop adc adc rex.WRX and fiaddl lods sbb (bad) jnp retq rex.R and cli mov xlat adc imul jle sbb shll mov sarl jne adc mov (bad) out rex.WRXB add xor and sub (bad) rex.XB (bad) lret outsl mov (bad) (bad) sbb xlat or lods movabs mov je icebp std (bad) ja mov xchg xchg iret int3 rcrb sbb adc movsl adc in test adc cmp and movsl rex.WR (bad) cmp (bad) (bad) add fs lahf (bad) iret idivl hlt xchg lods retq xor outsw jle sbb in mov and cwtl lods pop retq mov roll push (bad) je (bad) rcll cmp outsl movabs cwtl (bad) fsubrl rex.R rex.WRB rex.XB scas mov loopne mov mov xchg xor inc mov push adc xchg retq lods int jle retq rex.RX fs rep xor fwait lods in (bad) pop adc neg (bad) cmp movsl cld cli adc loopne in (bad) enterq fadds in addl jge pop je and lods lea pop lods lods add insb loope (bad) rex.WX xor rex.RXB rep (bad) sbb pop movsb (bad) shrl lods in stos (bad) lret mov loope (bad) sub or (bad) rex.WR fstl scas outsb scas lods cwtl loope add jns lods sub sbb imul xchg enterq rex.RXB fdivs pushfq sahf cli add shrl (bad) sbb scas sub lret (bad) mov loopne in notl sub leaveq test (bad) movslq push lods jge outsl mov int3 push cmp push imul (bad) add (bad) lods pop shrl pushq outsl clc retq pushfq insl loope jb adc pop xor (bad) (bad) lods xor mov lahf rol lods (bad) rex.RB xchg cmp add pop (bad) xchg cmp jns fsubl test pop (bad) lods outsb mov retq clc movabs (bad) lret and add sub jbe (bad) in sbb mov vminpd loop out (bad) mov lods pop retq imul (bad) (bad) xor retq jg adc lods jo out jbe jb jle mov mov mov ficompl insb (bad) push (bad) jl scas test (bad) movsl (bad) icebp fldcw data16 movabs (bad) rex.W shr (bad) pop lret sub outsl add and pop mov cmp mov sbb (bad) in lods popfq clc lahf cmp loopne retq std fsubs xor add pushq insb out push mov jmp (bad) jns or sbb xor pop sub add mov fbld cmc push pushq or movabs adc pop (bad) movsb cmpsl lods repz roll sub fsubrl mov (bad) rex.RB test lods stos nop rex.RX xchg mov std rex.WR mov sahf pop mov mov jg lods (bad) mov push mov jno lods (bad) sub loope mov je stos lods leaveq sahf pop sbb pop lret xchg xchg (bad) lods pop or or movabs or repz (bad) xchg (bad) test jo adc sub stos insl jp int mov cmpsl jmp xor stos mov jae pop insb flds or rex.W mov pop rex.XB cmp mov mov mov mov fsubs outsl sub callq loopne rex.W lods (bad) (bad) sbb movabs test add lods mov cmp test ja lods rorl or (bad) cmp mov incl cli rex.R in rorl (bad) cmpsl (bad) jns scas imul hlt add sub mov add sub insl leaveq shrl in or xor mov (bad) mov push imul add cmpsb cmp in mov add out xchg retq sbb roll lods (bad) (bad) js scas outsl movabs fildl sub (bad) mov (bad) lret lods xchg xchg (bad) negl mov in mov cli xor sub lret sbb sub in xchg movabs cmp imul jge xor rex.W lods movabs sub and push rcrb xor (bad) jno cmp or lods imul (bad) pop (bad) rex.RB (bad) mov and xchg fstl imul rex.WX adc sbb cltd and movsb lods popq push fstp fdivrs (bad) pop adc out mov jno fildll or sub imul (bad) andl subl (bad) loope stos add and scas pop subb scas stos adc lods insb out (bad) adc fadd (bad) sub xor clc sti je adcl jne cld movsb lods fs mov test (bad) mov mov lock lods (bad) (bad) int jp (bad) (bad) stos hlt stos xchg xchg pushq mov (bad) (bad) jrcxz enterq (bad) cmc outsl retq (bad) sub (bad) mov jo stc scas sub xchg push xchg insb in sbb pop stc sbb sbb (bad) sub (bad) mov cs (bad) jne lods cwtl test mov (bad) rex.RB int cli ja and jne jnp mov in loop (bad) loopne enterq fldl lods cmp cmp lods (bad) and fs rex.R repnz fdivs or jrcxz rol mov xor push jnp and rex.WRB rex cmp rex.R movabs adc xchg jo imul test xchg gs jp push rex.WRXB insb jg (bad) sbb stc stos (bad) cli test xor add cltd pushq (bad) cld cwtl out xor (bad) sti sub add sub sbb rex.WR jns rex.WRX lods pop add (bad) push (bad) xchg lods rex.WXB jrcxz jb mov es js sbb sbb fldenv ss cmp lods (bad) rex.RX je insl cmp lea xchg sub or movabs insb repnz xor mov in cmp xchg popfq int sub sbbl pop mov (bad) mov cltd mov add lods mov xor xchg insb mov rex.RB adc pop mov lret test (bad) push scas cs nop (bad) (bad) imul in xchg fwait data16 movslq roll pop xchg adc mov (bad) (bad) lret retq clc mov (bad) sarl and (bad) mov lods outsl out push mov je pop lods xor add test cs in (bad) fcmovnbe pushq repz sub jae mov add or movabs scas int3 movslq (bad) callq fdivs or xchg (bad) jnp shll mov mov lret jae add jp movsb and pushq rex.WRB lods (bad) (bad) fbld sahf and test icebp push movsl (bad) test lods push xor stos lods mov add jne and adc pop cltd pop adc pop xchg sub out in shrb jle fldenv mov es mov retq sbb pop punpckldq push pop mov (bad) pop (bad) or push lods jne in xchg xchg push lods lea mov lods int3 add mov jmpq xlat movl adc rex.WB xor mov sbb lea pop ffreep loopne (bad) mov test push jns (bad) fsubrs (bad) or jo rex.WXB out outsl adc xchg (bad) jb cmp (bad) adc leaveq (bad) test (bad) mov (bad) push or sub rex.WRX adc cld (bad) sahf (bad) jg lods std movsb popfq pcmpeqb push sub test mov jne jmp stos adc lods sbb xchg nop jns rex.B scas jb mov or xchg mov outsb cmp sub in rex.RX movabs movsb imull decl shrl out xor or mov enterq iret xor mov (bad) scas mov rex.WR or rol lods je jae cmp or lods loope cs cmpsb adc scas mov movabs (bad) movsb cltd lods rex outsb getsec or repz xor sti and lret test ds mov push popfq pushq (bad) lea jne rex.X add cld (bad) sub rdtsc jmpq lods in jb retq addr32 insb outsb and lea loope rex.WB and sbb (bad) or enterq or and jge pop (bad) rorl lods movabs jmp jo push lods add in rex.RX orl mov pushq (bad) (bad) addr32 jle lods cmp mov test test or movabs rex.WRB xchg insl cmp je lods icebp (bad) jb jnp in lods rex.WRB scas or (bad) and sub in sbbl iret lods rex.RB rorb lods (bad) test adc and fiadd pushq rex.WRXB sti lods in orl enterq and cld clc adc (bad) adc rex.WRB incb and (bad) push movabs int add lods fdivrl movabs mov or lods test mov or outsb data16 sub je (bad) repnz cld out (bad) lods or xchg lods stos mov (bad) pop test outsl sbb or cmp push scas lods cmp lods outsb and mov adc add adc and es pushfq cmp jl sbb faddp shlb jg pop (bad) rex.WRB rex.R (bad) mov clc lock movabs test add adc cmc lods xor outsb rex.WX enterq cmp (bad) (bad) fdivl out push push movsb xchg lods repz rex.WB xor adc rex.R xchg retq cmpsl rex pop sub lods mov xor (bad) mov xchg enterq lods lret xor mov (bad) mov mov rex.WRB (bad) sarb jrcxz sti mov lods adcl add int add pushq pop lods cmp lock rex.RB pop lods adc fstpt enterq scas xchg es add lods mov ja (bad) shrl stos cli or lods in (bad) rex.WB lods cmp or out fldt (bad) jae add pop and (bad) add or xor mov lods cmp rex.RXB fs mov push leaveq lods int3 std or divl je (bad) lods ja sahf jmp sbb rex.RX adc lret movabs mov or sub rex.WXB rex.RB (bad) es fldt mov rex.X xchg (bad) outsb jge cmp test ja fidivr sub jg sbb shrb hlt loope lods stos out sub (bad) add test lods retq adc pushq lods pop and jmp (bad) adc mov mov sbb cmp lods rcr rex.RX xchg in (bad) mov in mov rex.X (bad) (bad) (bad) xor sbbb notb (bad) adc rol repz lods mov mov sahf mov vdivsd rex.R cmpsl sti popfq test or (bad) out sbb sub callq adc xchg rcl sahf cwtl ds (bad) mov stc or stc or rex.WRXB pushfq hlt ss xchg pop or jo int3 xor es jae xor jg or add retq add retq std jae xchg test movabs jmpq in roll xor xor rex.R mov xor movsl pop sbb lods ffreep (bad) xor (bad) push (bad) rex.WR xchg mov addr32 rex.X sub adc clc and es adc sub xchg (bad) movslq xor mov lret rex.WRB rex.WX lods sbb and shll pop addr32 js xor mov sub fdivl in ss test fnstenv test xchg in in rex.WB push movabs jo pushq mov (bad) sbb lods mov shll sub xchg or clc cmc imulb rex.W (bad) movslq shrl in rex.XB mov cmp xor movsl jnp sub push or repz icebp or cli sub add rex.RXB test nop rcl mov lret es lods mov jo rex.WR jbe xchg adc sub (bad) sub (bad) or rex.XB xchg movabs lods xchg shrb fisubr mov mov sub adc fsubrl cmp shrb pushq scas mov lahf and ss scas rolq sti mov pop (bad) xor fxch scas or push and movslq xor enterq (bad) retq xor repz sub or (bad) jo ja mov push sub jne adc (bad) ss (bad) (bad) xor sub push rex.RX (bad) fsubrs jle je and lods adc ja mov addr32 and sub push pop imul mov in lods sbbl sbb outsl cmp (bad) add cmpsl and cmp xor scas fildll (bad) add stos jno mov es mov (bad) test rex.XB rex.RX cmpsb (bad) sbb adc lods rex.RXB rex.WXB mov imul (bad) mov jrcxz in mov je mov lahf push xchg sti jb test outsb cmp clc pop jae cmp lods mov jg (bad) rorl xor or push pop sbb rex.WX fbstp out mov out sbb rex.WXB mov add movabs outsl jmp lods mov test adc imul sahf lods rex.R ss push cwtl retq shrl pop movabs pushfq rorl std lods or cld imul xor xlat jmp stos mov pushq in outsl push cwtl jo je insl test rorb (bad) (bad) shrl in lahf rex leaveq or sbb rex.W push sbb xor insb sub sbb imul rolb ss jge in push (bad) (bad) cmp cmp sub jns jno adc xlat lods xchg mov pop mov xchg push lods add (bad) out ja movabs mov fwait imul push sbbl movabs stos fnsave fmuls iret cmpsb js pushq adc xchg lods add mov lods push (bad) sub imul lods and cs movslq lods xchg test push cmp rex.RB sub xchg xor cld popfq sub outsb (bad) jbe rex.WRB sub mov cltd xor rex.WXB sub ss cwtl (bad) lods add mov mov jl mov rolb (bad) rex.WRB xchg out in int scas rex.X fwait (bad) mov push stos pop push pushq outsb insb retw xor sub mov rex.WX mov std rex.WB data16 iret jp pop xlat scas pop outsl add jbe rex.W notb lods sbb (bad) adc (bad) lods (bad) int3 movabs mov sub stos rex.W mov lods movabs pop mov andl mov lods (bad) or push (bad) and lods ja pushfq push fldl jae or scas rex.WRXB fwait jrcxz lods rex.WR movabs lret (bad) adc test xchg lods mov fdivrp mov mov adc mov lods xor (bad) test movslq sbb stos adc xor popq xor lock movabs (bad) in adc rcrl jp (bad) push jb mov push pop pushq js scas pop push mov adcl imul mov mov (bad) add jae rcr (bad) loopne int3 or test lods add lahf data16 mov rex.W xlat outsl sbb xor jl mov test mov jge add lods (bad) add pop or jb loop (bad) add mov (bad) lods mov (bad) add lods pushq (bad) repnz lods cmpsl xlat in pop cmp int3 sub lods cmp mov stos insb and in fldcw jp cmp lods sbb scas push jge jno or imul mov mov outsl js sub hlt sub scas lods (bad) or sbb and cmp adc mov movabs sbb test mov lods and adc imul divb mov mov (bad) sub or mov lods popfq jno pop insl cmp movabs setae movabs pop enterq mov out repnz cld add cmp adc or push rep in jnp fisttpll adc rex.WRX enterq lods callq pop lods ja pop retq xor shlb lods and retq xor mov cmpsb cli pushq rorl in rex.X rolb pushfq push push rex.R lea clc lret retq movabs out (bad) sbb sub xchg jb clc xchg lods jns adc sti (bad) mov shrl lods test pop lock rex.RXB lods bsf test sbb cmpsb (bad) lods and lods loope in fsub ss lods fild ja test out rex.W rex.R (bad) (bad) lods outsl jo andb xor sub lods sbb cmc jge stos in rex.WRX rex.WXB scas (bad) lret jae loop sub out fist sub loope pushfq push lret lret rex.WR repz xor jns movabs jle sub scas adc jmpq out out icebp insb fimul imul test imul sub sbb movabs sub lods shll jns,pn out xor push sub in mov cmp outsl (bad) jmpq push add imul and (bad) mov sti xor fst mov out mov je test movabs insb retq xor (bad) rex.WX lods lods sub (bad) sub xor in movabs lods or scas pushq lods cmp jg pushfq (bad) or rex.WX cmpsb icebp (bad) rex.B or (bad) data16 movabs scas popfq fcompl imul rorl jnp jg sub jmp (bad) fwait push cmp (bad) lods (bad) mov cld outsl add test outsb mov rex.B rex.XB out (bad) ss sbb insb (bad) lods rex.WX add stos mov in pushq pop xor cmp sbb lods mov sti mov lods xchg rex movabs rcrb cli add stos cmpsl xchg and jge cmp add cmc lods retq push imul xchg pop or iret rex.RXB mov mov lods shll cmp fisubr pop (bad) xor iret mov lods stos int cwtl je sub jl cmc gs ja (bad) in sbb fsubr lods scas outsb (bad) addl and shrb (bad) nop retq rcl movslq mov add pushq jns sbb shlb jle and callq stos xchg lock (bad) movabs (bad) or xor rorl lods (bad) (bad) cs imul lods jns (bad) (bad) jbe movabs mov insb pop imul (bad) (bad) sub movabs xor fsubr xchg lock loopne lods (bad) (bad) sahf jg insb lods mov (bad) pop clc sahf cmpsl jno stos (bad) repnz (bad) jbe callq xor adc je in add sub ss xor jle mov lret mov rex.RX lods pop sub (bad) repnz enterq adc pushfq lods sub jns scas sbb sub sahf sbb test pushq (bad) hlt movsb (bad) fsubrl outsb and clc (bad) sub and mov cmc test js pushq lods rex.RXB adc mov lods loopne scas jnp repz negb sbb mov xor push rex.RX lahf adc pop rol xchg (bad) mov hlt jrcxz fs jp cmp (bad) cmpsl rex.XB insl sub out lods (bad) mov push int3 (bad) cmp mov pushq push movabs (bad) or (bad) jmpq stos leaveq fisubr lods sbb rex.WX test out add mov cld rex.XB mov (bad) or or lods hlt es pushq or xor mov movabs (bad) fwait mov fdiv xchg sbb (bad) stos lods pushq add insl add mov ja lret cmp test lods movabs int3 jg lods stos mov (bad) add repz scas js cmp shrl stc (bad) jno adc movsb lods insb xchg jmp data16 test adc or xor and cli leaveq scas xchg (bad) scas (bad) adc adc in movabs (bad) ja adc fdivl sub xchg rex.WXB and retq add int3 loope lahf push cltd (bad) and fisttpl (bad) push jb rex.RXB xchg mov scas repz orl pop mov popq push idiv add jns jp or add rex.WRB cmp xor rex.WR mov decb (bad) insb xorb movl lods sbb iret pop mov js rex.WRXB lret repz xor adc push lods movsl repz mov lret (bad) xchg (bad) adc rex.RXB (bad) push push lods imul mov cs je mov xor (bad) cli test (bad) mulb mov (bad) mov lods jb xchg xor shrl or lods (bad) jne mov lods outsb (bad) xchg cmp or pop in add mov xor adc push lods int3 rex.R lods push sub insl (bad) xchg lods xchg mov and rex.WRX (bad) sahf pop (bad) rex.WRB fisttpll jo or sub sbb rex.WRB scas hlt xchg xlat (bad) rex.WRXB popfq rex.XB movabs pop rex.WXB rex.WB sub adc xchg adc iret loope test adc js retq add scas jo fmull sbb jle mov mov out (bad) popfq jo xchg test xchg xchg mov jmpq test mov (bad) sub in mov (bad) (bad) stc lock (bad) xlat (bad) push adc out push stc xor cmp push push jmpq (bad) mov sbb rorb sub (bad) fisubl fisubr xchg cmpsl hlt rep adc jbe mov (bad) (bad) es rep sub test (bad) movslq in cmp or lock sub fiadd (bad) lods cmp (bad) pop jb nop xor insb add out mov sub pop rex.RX (bad) (bad) (bad) jne adc sahf sbbl rex.WXB je scas (bad) lahf jmpq sub (bad) mov imul and cmp (bad) jle sub cmc out (bad) stc hlt (bad) movsb sahf subb cmpsl rex.B add mov xor or outsb nop insb push fisttpl lods sub push (bad) jmpq (bad) movabs pop mov repnz mov mov clc fsts int3 loope out xchg in fs scas push jp jmp retq (bad) movabs data16 hlt jmp lret je stos retq leaveq mov push faddl out sub lock xor xchg lods scas rcll mov scas or test pushq mov push pop cld roll xor jge lods (bad) (bad) incb (bad) sub retq jae mov xor js jg stos out (bad) add cmp and mov shlb lods jmpq sbb cld divl lods jnp es loope jrcxz xchg rex.R unpcklps xchg lods rex.W ja subb add in cmc add or fsubrl or adc ja (bad) lods and xchg mov lods rex.WX push adc adc rex.WXB (bad) in cmp fs add (bad) je lahf (bad) icebp pop add mov repz add std (bad) mov roll int shrl or xor jae scas fdivr xor pushfq jge movabs mov (bad) jle rex.WXB ja (bad) add mov lods add push cmp cmovne hlt sbb sbb sbb sub (bad) movabs in xor (bad) movabs (bad) cmpsl lods jnp mov mov (bad) rex.R outsl sub xlat cmp (bad) rex.X ds sti xor mov (bad) lods fadds xlat mov stos in rex.WRB and imul rorl lods and rex.WR fsub js lods pop sbb cmp cmpsl test xchg cwtl jmp enterq in mov cmp adc sbb sub and (bad) fldl lahf xor int movabs faddl or push xchg rex.WB lods (bad) pushq and pop add lods not out xchg and imul xor lahf or int3 pushq lods (bad) js movabs rex sub int add iret rex.RB (bad) jp test ror or rolb xor cltd (bad) or test pop scas cmp (bad) rex.WXB rex.B mov jb int3 movabs sbb scas jp adc (bad) (bad) mov mov pop xor (bad) in out popfq in and out fisubr in adc cld sahf add or callq sub int3 jp lahf sub rex.WRB int rex.RX sbb movslq jno out sub xchg mov ljmp cwtl lret cli cld movabs add (bad) stos in sub push xchg cwtl add repz mov cli xchg test mov repnz cwtl jp sbb mov hlt stos in cmp out ss fldcw (bad) ja lods movsl (bad) repnz cmp movabs gs mov lods imul (bad) fs mov movsb jmp fdivl push or test cmpsb imul es std xchg sub lods jmpq jne lods rex.RXB (bad) rex popfq enterq lods loopne pushfq imul imulb mov in outsb push sub (bad) popq lods cs icebp adcl fcmove pop callq cltd lock mov rex.WR ss outsl insb push mov (bad) lods adc mov stc mov in int cli mov lods lret es jns push lods out push in xchg mov movslq xor (bad) in lods xchg add nop movabs add mov xchg jae push stos lods adc (bad) pop mov pop (bad) mov xchg repz (bad) insb in in cld cmp (bad) adc pop xchg pop rex.W lods (bad) lret cmp sbb mov fwait and mov xor mov mov rex.WRX test scas jns sbb rex.RX lret sub sub mov shr (bad) out clc fwait (bad) lods adc test scas mov add ficom (bad) (bad) (bad) clc sbb stos in xor (bad) fucomip pop fdivrl movslq scas and test movabs outsl mov cmp pop mov lods and pushfq loopne cli jmpq leaveq scas cmp out jo adc lods fld mov jp (bad) or in lods (bad) pop mov lods addr32 mov and rex.R (bad) ftst stos jne (bad) (bad) (bad) mov lods xchg and xlat xchg addr32 jg xor or rex.RX cmp test sub jb insb fiaddl mov mov loop cmp sub in lods movsb mov loopne test es cmc mov lods pop retq (bad) jb (bad) movabs (bad) hlt imul (bad) cmp push mov fwait or jne lahf outsb stc xor lods hlt rex.WRX cs loopne (bad) mov movsl rol jae sub shrl jnp lods lret (bad) xchg xchg je lods mov mov sub outsb xchg jns fisubl in xor jae mov xor (bad) rcl add (bad) movabs lods sub rcr mov stos loope lret push retq pushq movsl test int3 jno es pushfq jbe ja lahf movabs (bad) stos out pop scas (bad) imul pushq rex.WRX sbb in (bad) je movzbl lods sahf cmp jns sub pushq in jl movabs rex.W enterq test and or lret cld scas adc fnstsw in in mov js lods loopne test sub (bad) pop (bad) jnp and push out lret scas sub lods mov shrb mov fldt fucomp xor movsl (bad) test popfq pushfq lret in cmc adc xchg cli or mov cld (bad) mov rex.B jrcxz cmp rcr jne lods mov (bad) ror mov fs rex.R xchg and or mov (bad) gs pop xchg push (bad) lods (bad) ja loop (bad) sub cmp pop lods xchg add and mov imul mov lods fs xor scas fwait xchg imul iret pop rorb add jno adc jg scas rcrl sbb jbe push adc je and clc popfq (bad) test movabs js fistpll sbbl fistpll mov pop mov jnp mov rex.R testl mov or mov rcll movabs cmp mov (bad) clc and movabs in mov sbb sub rcrb mov sbb cld (bad) rex.WRX lods (bad) in pop xor movabs loope scas es (bad) jp lods (bad) lret out xchg (bad) rorb ss (bad) outsb rex.WR shl (bad) xchg mov je lods fadds mov rex.X fcoml (bad) popfq rex.WR or mov in sahf cwtl xlat (bad) mov fdiv lods adc jae jno pop test insb sub (bad) in in int3 (bad) jge mov rex.WR rex.X lret mov (bad) lods adc mov leaveq fiadd retq lods rep mov lods push push jge xlat jne rex.WR popfq push add lods mov adc notl lods sub rex.WRXB mov jno (bad) pop mov std mov ds sub mov adc mov insl mov stos cmp sbb retq test xor int gs cs push repnz mov jmp rex.WR sub lods retq (bad) test lods rcr (bad) mov push lods pushq gs imul movslq mov (bad) or lods pop in add xchg fisubrl movslq (bad) out rex.RXB lret and retq scas imull (bad) in sbb xor fmul jns push cmpsl stos out (bad) mov sub in mulb popfq insb jle rex jo lods pop repz outsb movabs fisttpl cmp lret add pop xor rolb xchg (bad) movsl idivl cld fs ja (bad) sbb in (bad) mov in cld int3 (bad) rex.WRXB sub fnstsw cmp add lea lock movabs mov xor (bad) xchg and (bad) je xchg lods jmp cli cmc movabs push pushq data16 cmp mov callq mov lods sbbl (bad) lods mov mov lods es data16 sbb in fcmovu cmp cmp retq add sub rex.B in (bad) lods sub push (bad) (bad) xor insb mov mov pushq nop data16 in (bad) mov mov adc repnz sub xor ds loope or je sahf scas mov fcomi rex.WRX xchg cld hlt (bad) fsubrs xchg sti mov mov (bad) fildl cwtl (bad) or rex.WRXB (bad) lret (bad) stc test in or cmpb test adc out cmp lock xor cmpsb mull cmp and loope ljmp mov out pop lods push mov xlat outsb fs test push hlt jnp (bad) (bad) pop mov lods and cmpsb xor (bad) xchg clc sti in (bad) cmc (bad) lods fisub add lods loop cmpsl loopne popfq sbb lods lahf xchg mov data16 lods mov (bad) stc cvttps2pi hlt mov pushq mov adc lock shl cli or cmp insb movabs stos sub imul (bad) (bad) fildll jb xor outsl leaveq in pushq lods (bad) rcr sbb leaveq jno movslq xchg data16 cmpsb mov adc (bad) retq ja stos movabs (bad) jl sbb lods (bad) mov xchg popfq push (bad) shrb loope loop lods fstpt adc sub sub je nop pop rex.W loopne push or movabs jg (bad) add fildll (bad) mov adc lahf mov stos pop mov retq mov in out movabs retq pop sub xchg (bad) int cmp fwait lods leaveq jne andl push test movabs in xchg (bad) js cmp sti ss adc cmp shrl sbb (bad) callq xchg (bad) (bad) and mov lods cmp adc outsl imul cmp test mov rex.WX mov jns sub push pop (bad) jae (bad) xor loope mov leaveq mov pop mov fwait cs rex.XB (bad) in rex.WB rex.WR jmpq rex.W lods pop sub movabs cmp jb out js lods mov sahf rex.XB add rex.WXB icebp xchg mov sbb sbb test (bad) rex.B loop,pn mov sti lods cmpsb jl or (bad) or (bad) lods push movabs (bad) xchg add mov movsb xlat sub insl (bad) test int fsts fdivs lods or mov adc add xchg mov add lods xchg xchg fxch (bad) cs test cmp jns scas movabs data16 push negl sbb mov (bad) or outsb rex.WRXB lods push fisubr add xor test pop (bad) fnstsw or test andl stos popfq xlat (bad) adc xor (bad) mov (bad) scas cld je mov jae adc xchg rex.R (bad) (bad) sbb pushq in rex.XB (bad) mov imul loop mov rex mov movabs sbb outsl sbb pop lods rcrl jb movsl lods ja mov cmp cmpsl add stos add lods sahf rex rex.RXB add (bad) sbb mov lea xchg adc insb xchg cmpsb icebp gs mov (bad) stc xor jns (bad) xchg lods pushq test rex.WR rex.B rex.RX (bad) pop (bad) (bad) lods testb sub rex.X (bad) lods mov iret rclb lret ja (bad) (bad) stos sti mov (bad) or rex.RX cmpsl test in iret mov rex.XB enterq and (bad) mov insl (bad) jo rex.WX (bad) mov int3 (bad) sub jno and cld mov mov (bad) (bad) scas or (bad) mov sarl fldt (bad) adc retq (bad) xor xchg insl cmp mov clc push scas lods cmp lret xor mov sbb xchg cmp or popfq (bad) push mov movabs sub rex.WXB sub and (bad) lods mov sub pushq add fwait rex.WRB and out mov repnz shrb clc lods and out rex.R xchg pop test mov sahf data16 imul jne lcall mov rex.W iret fwait mov cmpsl jmpq sbb adc sysenter iret push nop (bad) mov cmp ja movabs pushfq rex.WR mov movsb cmp mov mov sbb (bad) je mov clc scas leaveq js adc (bad) int3 rex.WRXB mov add jb mov or (bad) cli (bad) jrcxz cs out (bad) and or repz loop lods in jb (bad) jrcxz jp rex.X rex.WXB xchg stos rcrb (bad) divb lahf adc rex.WX (bad) mov insl xor adc lahf (bad) in jo test icebp movsb lahf pushq pushfq sub test callq mov adc (bad) and xchg (bad) or test lods scas and ror (bad) callq pushq jmpq insl mov orl push movabs test imul stos rex.X movsb movabs cltd adc data16 scas rex.RX movsl push (bad) in test fstps roll imul push mov shrb cwtl loopne stc lods fisttpll out loop jnp rex.WX adc push fadds or lods and int3 popfq fnstsw cld (bad) movabs push jb pop lods xor clc rex.RXB in adc cmc mov cmp xchg hlt lods (bad) ss adc lods adc sbb test jge lods or (bad) fisubr int stc mov rep sbb rex.RXB icebp xchg rex.WB scas or pop test pop add leaveq xchg (bad) retq cmc (bad) lods fnstsw cwtl jg add or (bad) mov (bad) stos notb iret (bad) mull sbb sub xor popfq int cld xor add jle xchg lods movsb jmp jo lock cmp je test ds xchg lods (bad) (bad) and pop lods lret sub insl cmp lods and lods xchg rex.W mov stos faddl jmp lods and rex.WB xlat push or movslq add mov xchg and sbb jnp cld push xchg pop imul js imul test movabs adc mov add fisttpl lods (bad) sti mov mov sub callq jo stos or sahf (bad) test lods push xchg loope or fdivs xor mov (bad) mov (bad) cli rorb pop es push and adcb sbb rex.B push loopne movsl cmpsb pop pop retq lods enterq cli mov lods mov loope xor push movsl lods stos add test sub xchg adc xchg lods rex.RXB cmpb outsb lods fwait cmp shrb mov or (bad) lods (bad) rex.R and fldcw mov rex.WR int adcb rex.W (bad) sub (bad) (bad) rex.RX repz jne cmp rex.W jl cs leaveq mov jae subl (bad) cli lods or lret rex.WRX rex.XB cmpsl shll jmpq pop pushfq mov cwtl movslq outsl jg pop test lods out outsl (bad) fucom shrl cli movabs jbe lods jae testl lods (bad) (bad) mov shrb lret xchg jg fucomp std loop imul sahf add adc adc lods jg pushfq mov adc rex.XB pop scas (bad) leaveq mov sbb or cmc add lret cmp push add or out jmpq cmp mov jne jbe adc clc rex.WRB jno push scas jl rex.RX lods adcb lods sub pop mov or rex.RXB out shrd mov sub add jmp (bad) stc pop mov outsb jne rex.XB or rex.RX movabs sub xchg add rex.XB pop xchg mov lods fldt cmp lods rex.WB xor movabs (bad) push sahf jl and push out (bad) cmc (bad) loopne data16 sub adc rex.W stc test repz sarl jnp or stos pushfq push xor sub jl gs outsl out xor push push jae push (bad) mulb jnp mov mov mov cmp idivb cwtl hlt cmc push stos mov lods lahf callq (bad) addl clc sbb (bad) (bad) jge in mov adc out rex.WRB imul enterq imul (bad) hlt adc lock (bad) mov (bad) push scas (bad) jnp and sub insl lods (bad) sbb movsb lock retq lods xchg mov sbb pop (bad) mov (bad) (bad) fwait lea add lods cmc and lods jae push push rex.WX sbb sub (bad) rex.WRX movabs jp test (bad) shrb scas fildll in rex.WRXB push sub push lods jl (bad) xor pop enterq xchg retq insl shlb xor out (bad) mov jp sub and push xor addb (bad) cwtl mov fisttpll lods mov xor scas and lods lret jle jrcxz cmp scas mov push fldt (bad) or scas adc rex.X adc push jns (bad) cmp clc lods loop setnp rex.WX retq rex.XB out pushq in loop cmpsl jle xchg js (bad) retq (bad) lods pushq gs rex.RB (bad) jmp sub (bad) cmp (bad) mov (bad) (bad) cmc movslq pop (bad) test in fcmovnb insb adc outsl sub movsb mov push xchg lea lods shll (bad) xor out lods orl sbb int or lods (bad) outsl jge rcl sbb and lods insb clc insl fwait or loope add jb rex.WRX rex.W fistl mov mov lods pop mov icebp movabs mov push (bad) push jrcxz jp and (bad) in jmp (bad) loop sub popfq loope cmp test sahf subb xor fs (bad) cs jmpq pushq retq movabs lods mov (bad) sarb xchg xchg cmp rex.XB add (bad) cmpsl lods sbb mov in mov push cmp lods add rex.B repz (bad) rol rex.XB lods mov (bad) jle out jno (bad) pushfq rex.R (bad) outsl cmp in sub lods fnsave retq pushfq sbb and movslq xchg mov sarl scas fmulp lods lret mov xor (bad) callq in mov sub (bad) callq and addr32 insb sub je (bad) jae jl in mov add mul bnd (bad) lods jae cmp adc mov push loop or rex.R mov jbe mov stos movsl js (bad) (bad) mov adc int3 (bad) mov lahf adcb xor xchg lods cmc add lods pop lea outsl jmp loopne shrb cmp fnstenv enterq vpand cld pop xchg lods pop xor callq hlt js imul xor test fisubr mov jns and icebp xor jo movabs sahf sbb rex.WB rex.WRB sbb rcrb (bad) pop leaveq popfq cmc mov sbb and outsb mov hlt jp cs (bad) mov or sarb xor fnop movabs in xchg lods andl in (bad) jo retq (bad) (bad) xor jle adc mov cmp callq fimul jno outsl in rcrl xor and mov fisttpl cmc jp jbe pop (bad) and jne jo mov (bad) jle lods (bad) sti jnp (bad) or fiadd jl cld lods movabs sti lods or test jmpq (bad) mov (bad) or test xchg pop roll jge jo sbb idiv sub fwait movabs xchg retq (bad) (bad) test test (bad) sub xor jge mov adcb rex.RX cmpsl jb divb jrcxz (bad) addr32 sbb mov hlt cmp mov mov movabs out rex.WX xchg scas js rex.B rex.RB rcrl xor (bad) rex.WXB rex.WRX lods rex.WR rex.XB rex.W rex.RB rex.WB xchg test (bad) jbe (bad) (bad) lods out (bad) in pop mov idivb jmpq cmpsl orb movabs hlt and (bad) in xchg (bad) mov sub cli (bad) test mov jmpq push (bad) (bad) hlt (bad) pop scas movsb sti fcoml xchg (bad) xor lods push sbb mov xorl repz adc lods test cmp lods xchg lock fs test jae movsl jg test rex.WR insb mov lret rex.RXB cli rclb rex.RX movsb adc (bad) scas cld (bad) (bad) jmp mov sbb popfq (bad) jp in scas fdivs xor add lods stos rex.WXB out (bad) cld xor movabs rex.RX adc test push lods cli add xor pop lods in (bad) and mov callq add sar orl mov lods retq lods or add in movabs lods movabs fisubl fsubrs cmc jge sub movabs jl push lods xlat jle andb (bad) lods jb push jbe retq int3 sub sub out jo loop stos (bad) rex.WRB jnp sbb cmp rol (bad) rclb cmp hlt loope scas (bad) (bad) and add (bad) mov lret xchg cld adc mov (bad) sub xlat (bad) jmp lret rex.X imul and test repz sub push cmp mov and mov lods mov and adc xrelease movabs mov rex.WXB mov sbb sub xor (bad) (bad) in and ficoml lods mov (bad) lea in leaveq push loop sub lret outsb mov mov ss jo push jmp out and cmp or (bad) popfq lods pop xchg insl jl lods sbb and lods (bad) repz lret mov push rorl cwtl lods pop (bad) cmc (bad) pop imul (bad) outsb jrcxz jnp xchg cli mov mov sbb rex.WRXB push cmp mov stos int pop rolb retq (bad) and callq popfq imull sub ss sub data16 stos or or js icebp adc test ror rolb (bad) mov adc adc mov insb xchg insl sahf jno mov movabs sub rex.RB mov lret jmpq (bad) mov cli (bad) mov mov adc in pushq jp add lods push fsubrs (bad) lret mov shrb mov rex.X out mov enterq fisubrl (bad) xlat movabs sti (bad) rorb (bad) out push mov (bad) jbe enterq shll stos rex.B adc mov adc shrl retq imul jns lods fwait es cmp adc lods mov push sbb lods jb callq (bad) lods fbstp pop mov in insl or add adc lods mul icebp rorb sub adc outsl loop pop jl lods cltd push add movabs xchg mov mov lods popfq and and fistp (bad) addr32 retq pop cwtl retq rex.RXB mov push sub jae insb sbb jp lods stos sbb jb lods mov cwtl mov clc xor insb notb (bad) (bad) mov pushq (bad) sub in (bad) sub in sub add mov (bad) cmp adc cmp and clc (bad) fs cltd (bad) imul (bad) callq sbb (bad) pushq mov sub scas fadds (bad) (bad) mov rex.WRXB rex.RX (bad) lock addr32 adc pop fwait test lods mov sub and out in (bad) sub int sub pushfq incb and (bad) mov mov cmpsl adc sub (bad) mov push scas and (bad) sbbl sti je movabs stc (bad) sub notl mov repnz mov mov cli lods (bad) rex.WRB hlt lock ljmp rclb sub fstl mov jp (bad) cmp push pushfq adcl (bad) fidivr push shl adc jmp mov xchg cmpsl mov stos (bad) loop in rex.RB outsb xchg lea js rex.WB and jge out lods (bad) xchg pop mov (bad) jns stos movabs lods (bad) (bad) insb adc xchg psubw popq movsl fs movslq mov movabs movslq and rex.W retq rex.WXB cmpsb mov fistpll (bad) lods cli (bad) retq fidivr push xor lods rex.WRXB lea and pushq mov lret mov xor mov add (bad) fsubs xor rex.WRX rep mov cmp mov movsl lods lea jmpq stos (bad) loop rex.R addr32 cwtl add cmp addl xchg (bad) rex.RB (bad) icebp pop addr32 scas mov (bad) pushfq push movslq outsb xor retq movabs movsl cmc scas sbbl js (bad) nop scas (bad) scas xchg sbb lret lods ror jg jge leaveq lods mov adc rex.RB scas (bad) movabs xchg rex.WR xchg (bad) lods (bad) xchg cmpsl cmc push lods in pop adc and sub iret mov addr32 movabs sti popfq jbe ss lods xchg rcrl scas jmp mov add mov test sub and loope imul fcom iret or xchg mov mov rcrl popfq lods stc rex.WX js shlb mov outsl loop xor pop sub push pop imul xchg mov adc xchg in pop imulb flds cli (bad) movabs push lods xchg (bad) cltd movsb pop retq fs lods sub stos xchg (bad) xor mov scas xor lods cmpsl addr32 (bad) (bad) scas shrb and insb shl sub mov adc (bad) (bad) (bad) pushq xchg retq pop imul rex.WXB (bad) in outsl scas cmpsl xchg (bad) shrb or lods in cltd xchg hlt (bad) cmp xchg cli xlat sub je and lods or sub lods and faddp sahf jne jp test jno adc std xor nop jl push stos (bad) hlt jge out loop (bad) jbe lret imul rex.WRXB insl mov clc fs fbstp xor mov jmpq xor mov cwtl lret cld hlt cltd (bad) push lods (bad) movsb mov loopne push adc lret and cmpsb test fildl repz and out movslq rex.WRB mov lods mov cwtl rorb lret sub insb sbb (bad) cmc xor (bad) sub add pop rex.XB push lods rex.RB movslq xchg xchg retq cmp lods rol imul sbb (bad) sub stc movsb jne lods xlat xchg (bad) pop add adc sub jae and or (bad) jns xchg lea repnz subl mov ss mov (bad) push sbb pop rex.WR (bad) push and shll cld hlt lods enterq rcrb lods pushq fwait mov in lods movabs nop pop cwtl movabs cmpl lods xor lods mov out xor mov xor mov lods push rex.WRB mov (bad) (bad) mov (bad) jae xchg (bad) scas movabs mov xchg shrb jne mov jge shrb lods (bad) or jne mov (bad) nop jns push add sub and or rex.WXB mov jmp std lods jp fstpl adc stos and pushq leaveq rex.WR lods rex.RX movabs jne std pop jbe jl data16 rclb jg add movabs test mov loope adcb rex.WRX movsb out sub (bad) js leaveq sbb gs addr32 rex.X or pushq js retq scas or xor (bad) pop (bad) lods stos cmp std rcr lods add subb mov push mov stos rex mov (bad) loopne movl movsb push sbb imul mov rex.RX retq in mov decl cltd jo jnp mov add rex (bad) or rex.B iret mov jmp jl rorl rorb (bad) jno (bad) mov pushq js pushfq jnp mov loop push test jne (bad) cmc or jb cmp mov lahf xor scas or sti data16 imul in lods sub (bad) add mov negb sbb (bad) adc mov xchg (bad) outsb mov jrcxz push (bad) leaveq (bad) scas or sahf push lods sub (bad) mov add rex.WR sbb (bad) push mov cmp push lods rex.W pushq mov stos js lahf mov add sti addr32 sbb rex.WRX sbb mov and stos cmp movslq (bad) jo cmpsl mov in push jnp adc lock sbb test sub mov cltd and data16 jo mov hlt mov add cli rex.XB in leaveq jmp rex.RX rex.WRX fwait pop xor xor add pop scas (bad) out push lahf loope (bad) or (bad) int3 sub mov fidivl xchg add lods and rex.WRX rex.WR xchg or rex.WB push mov jae jl lods pop data16 jg adc or jge test lods lods sbb push lods adc cmp push (bad) sub mov (bad) jbe orl movabs lods mov (bad) cmp jns int3 (bad) add repnz push sub jle xor mov xchg add movsb es mov fnstcw mov sub rex.WRX lahf cli jmp rex.XB callq mov rex.WB rex.WR (bad) callq rex.WRX adc insb gs icebp sub adc cli jrcxz sub mov (bad) movsl and mov add cmp mov vpsubd rex.XB rex.X (bad) or push (bad) xchg scas fcomps cld in retq or (bad) in repnz or pop mov add lahf or imul outsb sar lods fincstp stos mov imull rex.RX (bad) cmp (bad) mov cmpsb stos scas jb mov fbld lods retq roll pop in sarb pop mov fs jns mov outsb lods pushq sub movabs jp lods leaveq xor imul and clc sbb (bad) (bad) mov js pushq pop cmp xor and or movsb std add mov clc mov mov (bad) cmp adc lods lret cli jp negl mov sbb or fadd enterq xor (bad) lods (bad) rex.RB cmp and mov mov rcrl jmpq scas (bad) and (bad) cli (bad) cmp hlt add leaveq callq nop add mov fldt xlat cmp int3 fstp rex.WR (bad) outsb retq mov xchg (bad) stc subl jno pushq add mov cmpsb lods test (bad) pop mov push shrb shrl push lahf fisubr mov jae push sbb xor gs movabs rex.WX iret add or xor mov mov rex.WRB lods rex.X rex.WRXB mov lods pushfq sub cltd cmp lods and lret rcr xchg lods xchg xor test fdivrs or mov in sarb fwait rcrl (bad) xlat sub jno scas cmp fld rex.RX jmpq mov xor insl xchg pop movslq rex.RX sbb test or sub lcall lods movabs adc jge jle pop scas xor lods sahf mov rex.RX fnstcw xor (bad) and rclb rex.WRXB ficompl fdiv fisubr or imul and enterq imul (bad) rex.R mov fwait rcrl (bad) mov cmpb xlat mov repz lods sbb enterq outsl shrl mov stc retq adcb jg sbb lods push std sti in (bad) cmpsb (bad) lods (bad) (bad) outsl cltd xor or or out in add gs or (bad) in add push (bad) mov rex.WR rex.X js (bad) sbb add jle movabs fwait jbe in xchg lods (bad) nop stos xchg sub cs adc sbb lods rex.X rex.WR lods in in fwait shlb movabs jo lahf adc lods (bad) stos jg (bad) lret mull add mov lods jmpq cs rex.B jne stos fsubl xor cmp xchg jo lods (bad) ffreep pushq rol rex.RB (bad) (bad) mov lods insb xor imul or sub divl hlt cmp pop pushq in add and mov cmpsb mov pop add rex.RB sbb adc in in (bad) xchg add movabs xchg rex movslq stos cli rolb sti rex.WX xor mov movsb (bad) pushq (bad) lea add mov insl adc or rex.R repz mov mov cmpsl xor sub or out lods (bad) jae mov (bad) and gs stos mov pushfq add shl lods xor xchg faddp pop insb negb subl and imul lods fisttp push jns sbb stos mov (bad) movabs push cmpsl lods add shr lods out stos cld roll rex.WR xchg and pop jbe xor or mov popfq sub adc mov xor (bad) mov xchg (bad) icebp imul jb or add movsb sbb xchg jge mov and (bad) xor lock (bad) addr32 cmc sub scas ficoml or jmp sbb jb fcmovb xchg in insl jo (bad) and lods and mov mov jb flds mov divl lea (bad) test jno cmc and xchg or stos (bad) mov fs jrcxz xchg lods in movabs sub in jne movabs (bad) es (bad) (bad) lods cmpsl xchg sahf (bad) stos retq mov (bad) sub rex.WR cltd mov sbb stos mov or (bad) pop sahf movabs rex.WB (bad) sub add sub movabs mov jbe or xor es mov rex mov rex.WRB mov lods js lret (bad) cmp icebp rex.WB jbe shlb lods stos mov loopne (bad) xor lods outsl (bad) sub sti movsb add rex.WRXB mov mov mov mov adc test fildll retq sub movabs fs ja mov movabs lods jmp xchg in jp xchg rex.RX sbb lods pop movslq cmp cltd (bad) rex.WXB jmp stos mov add (bad) xchg lods mov (bad) in and in lods (bad) mov test insw (bad) and add adc imulb pop repnz mov push add (bad) rex.WR repz cmp sarb pslld adc int3 (bad) lret movabs lods rcr in retq and sub movabs (bad) push lods mov sti (bad) cltd sub mov movabs rex.RB sub (bad) jg and pop stos fildll in rex.WRB retq movsb (bad) fldcw (bad) mov loop mov insl rex.WX in lret (bad) (bad) mov adc movslq xor callq orl retq lods shll cmpsb jne shrl fwait sub shrl imul test (bad) neg add shrl and int movabs (bad) push sub lods (bad) cmp movabs jg lock lods xlat adc sbb jns xor clc lock jl mov stc in fcompl lods or nop or lods mov rex.W addr32 lods in cmp xor imul (bad) hlt (bad) push insb mov (bad) movabs or shr cwtl loop lods mov xchg movsb rex.WX jmp idivb jrcxz fnsave pushfq (bad) sub cs rex.XB mov xchg jrcxz movslq fsub int sarl nop sub es or push callq (bad) add xchg pop scas outsb jge movabs lods rex.WX (bad) jrcxz insb lock decl loope lods movsl nop jns hlt sarl out scas push push cmp add (bad) leaveq js movb scas push addb clc in (bad) lahf rex.XB (bad) cmp mov mov repnz (bad) lods (bad) xor pop (bad) fs or or pop push jge rex.WR gs rex.RXB rep (bad) rex.WRB jge xor jmpq movabs jae mov iret jl lods sti pop movabs lret mov xchg cmp rex.WR adcl (bad) movabs or scas jno (bad) test fwait xor (bad) lods cld movslq sbb movsb int int3 adc movsb movabs (bad) jle add (bad) lods test test subl rex.X stos stos out (bad) test xor add or mov rex.B jns cltd insb adc sbb pop gs stc jle js rex.W mov (bad) mov pop stos out rex.WRXB mov sub scas mov dec lods add adcl lods add jns es lods in test (bad) lods cmp mov xor add test (bad) (bad) fcomp xor lods mov add sub repz mov mov mov mov data16 rex.R sahf mov or pop xchg movabs and mov cmp in test stos pushq lods and lods out jle scas add rex.R leaveq (bad) in sub fwait (bad) lods lea cmp push sub cmp (bad) xor popfq jl lods repz push lock syscall pop insb sbb shrl (bad) out push add ja cld jrcxz lods outsl pop rcr mov xlat rex.W lods (bad) rcrl mov mov (bad) pop (bad) test jns jp cmc jmpq mov adc or lods (bad) jne rex.X mov lods retq push rex.RXB cmp xchg mov or out or lahf in lods gs (bad) jmpq and push pop jge jb cmpsl mov hlt push mov (bad) incl rex.WX fsubr cmpsb rex.WRXB data16 and outsl xchg xchg mov jg fs data16 lahf lods xchg mov pop jp push lods push sub movabs (bad) mov (bad) sbb test cmpsb add mov out xor adc (bad) in add movsl lods mov ja in (bad) jg movabs cwtl xor rex.WB mov movabs rex.RX (bad) xchg movsl gs jmpq rex.WX jb xchg (bad) divb shll mov and rex.RXB lahf push (bad) cltd andl test lods push imul mov scas fmuls in stos (bad) (bad) (bad) rex.RB sbb lods jge ss rex.WXB cs (bad) pushq jmp testl add lods rex.WX pop cli int ja repz imul xorl xchg pushfq xlat rex.WR add test (bad) xor xchg rex.X (bad) sub xlat lods and mov in sbb add cmp int cmpsl incl (bad) mov adc in movabs mov rex.RX adc in xor pop mov (bad) lret and fisttpll decb rex.WRXB in xchg cmp pop xchg sahf lret cmpsl iret jp lods ds (bad) add sub lock mov test xor lret push movabs ds jmp imul test xlat stos jg push mov ds scas lret orl mov lods pop (bad) mov js stos lahf (bad) rex.W cmp enterq push lods rex.WRX fnstsw pushq rex.WRB or (bad) sahf sbb rex.RXB in pop cmpsb movabs insl mov sbb lods (bad) (bad) jbe jns and push movabs or (bad) lods movsb (bad) rex.W xor scas imul in jne mov addr32 callq rex.WRB out mov mov cmp mov pop jnp movslq adc js xor shrl pop (bad) mov sbb push (bad) xchg lods jrcxz lar cmp outsb out lods rex.RX or in rex.WX iret pushfq lods (bad) push or lods rex.WRX cmc out sbb mov and scas xchg fcoms (bad) lods lret mov add scas icebp imull mov rex.WB sub (bad) imul mov mov add sub scas sbb insb imul (bad) mov lods sbb adc mov mov fdivrl xor pushfq movabs xor stos mov sub ja lods jmpq fnstsw lods cmp xor imul clc jae and insl fwait lods movabs lock sbb rex.WRB hlt xchg lods mov ja hlt cwtl add stos and (bad) and pushfq xor fist cmpsb jae jl test pushq adc sub jae xchg fistl leaveq (bad) sub pop (bad) subl hlt jns test and movsl (bad) cmp sub sti idivb jns fisubrl mov and (bad) (bad) jnp lahf out (bad) leaveq pop in mov (bad) lods lods out (bad) icebp idiv or sub rex.WB loop movabs lea rolb (bad) jge rex.WRB mov mov and sub push mov out sbb jbe jg or (bad) scas pop lock pop shrb movsl (bad) lods fs mov add sub ja sub (bad) xor sub repz push or nop out cld mov (bad) scas mov out lods imul xchg (bad) sbb lods scas lods xchg mov mov rex.XB mov lods adcl xor pop retq xor or rorb lods sbb xchg lods xor jne (bad) jle clc nop and movsb out retq lods mov (bad) or and shlb lods stos cmc clc enterq pop enterq mov mov add pop outsl test rex.WXB mov (bad) xchg jae jge pop lods in icebp mov (bad) add lods and rex.R fincstp add (bad) push lret or lods (bad) adc xchg (bad) test jno jo xor (bad) push rex.X sahf sar mov (bad) fs rex.RX cmp (bad) ja rep fisttpl lahf (bad) lods sub lods push movabs mov (bad) push cmpsl push mov push sbb add cmp (bad) test sub mov outsb jge mov ds movsl mov mov (bad) mov test adc mov xor rex.W xor (bad) push lods cmp movabs mov add rex.W ja lea insl xlat es push lods push add lret (bad) mov repnz imul xor (bad) (bad) add push movabs add je movabs rcrl lods mov xchg fucom or andb cmpsl nop pop cmp mov loope add subl pushq stos xchg in ds and xchg mov rex.WRXB (bad) lock pop insb imul lret rex.RB lods mov mov lods (bad) rex.WRXB or pop mov mov repnz sub stos add mov out (bad) or lea cld or add (bad) movsb adc subl rex.RB in adc add and nop and in cmpsb in (bad) pushq (bad) (bad) (bad) push int jle (bad) stos rex.X ds fidivl mov add add cli (bad) (bad) pushfq mov mov xchg addr32 xacquire lods rex.RB sti lret add sub pop push sub and test pushq scas sub movsb or or add cmpsl pushq mov push addr32 xor adc rex.X jrcxz add (bad) (bad) out loopne jne ja and lret lods xor hlt xor rex.WRB push sub jb sub stos lods rex.RXB xchg (bad) (bad) (bad) and lods xchg rex.RX fwait out test stc pushq push je insb sub gs lods xor mov rex.WB lods jle cmp mov cltd lods test sub sahf out cmp pop rex.R rex rex.WX sbb mov lahf mov push rex.WRX cmp mov (bad) mov push lods add cmp or (bad) rex.XB sarb lea mov in sub sub cltd lods popfq or icebp gs or lods mov jrcxz xchg jae adc rex.W rex.XB movsl insl (bad) xchg lods pop (bad) add rorl movabs pop out lods mov rclb mov cmp mov (bad) int3 jle pushq add ds fldcw jb pop lods sahf shrb test icebp (bad) in js mov add mov (bad) scas cwtl sbb mov insl cmp rex.WR in pop in addr32 sub xor sti clc and (bad) lock jge (bad) ficompl pushq mov mov add rcr jge lods movabs (bad) jo push jle movabs data16 jns insb insb fmull movsb pop rex.XB or lea sbb (bad) hlt and mov adc sbb sbb stos rex.WRX mov es pop mov repz fucom rex.R lods mov jg imul cmpsb add cmp rex.WX jmpq or cmp mov cmp jg lods sahf sub add mov (bad) insl in icebp push xor scas test insl cmpl xchg xchg jae rex.WR lods mov movslq sub push movsb in (bad) sub mov sub add jle or fsubr clc retq cs sbb sahf callq cmpsl or fs mov std or (bad) movabs lret (bad) movsl (bad) repz sub fisttpl (bad) stos lods jl (bad) sbb mov outsl mov pushfq lods ja (bad) enterq stos lods add mov or cmc mov rex.R repz movabs xchg jne jmpq xor lods rex jns in or lods xchg fldl and stos or mov xor lock sbb bswap push sbb push fdivrs xchg lods cmp decl lods push jge or jae orb sub lods sbbl adc movabs rex.X lret xor scas (bad) adc or push fsubl mov (bad) loop lods sbb cwtl rex.RX (bad) orb movabs cmp lods mov and and rex.XB xchg int (bad) pop sub movabs pop data16 xchg movslq imul mov stos enterq adc scas int3 lods cld mov mov lret lods sub in scas rex.WRX sub (bad) cld lret stc adc loop cmp cmp jb shrl scas xchg rex.X pop ror sub rex.R scas and pushfq shll sub rex.WB pop subl lods mov insl test xchg scas (bad) fs adc and js add add adc (bad) icebp imul add movabs int mov (bad) jp (bad) adc rex.B imul lret test or loope and mov or int fimul rex.B mov (bad) fstps cmp fimull je and sub lea xor movl mov pop (bad) mov cmp lods or (bad) jmp leaveq and jo rex.WB out jmpq cltd pushq pushfq fdivr js enterq movsl xchg adcb in add sbb lods cmp in clc cmp lock movabs in add sub lods jg adc repnz (bad) movabs or lods seto cmp or lods rex.WXB fldpi sbb fistl in (bad) lods adc rex.RB (bad) gs add in lods pushfq sbb scas lods movabs insb mov rex.WB rex.RXB callq pop mov out sbb in lret xor adc fsubrs rex xor jg or stos jno mov (bad) jge lods rex.RX repz mov or lods mov jg es test jo (bad) rex.WB mov enterq scas je iret and fisubl adc rex.W add jl sub inc rex.RB rex.WB testb pushq push cwtl mov (bad) incl scas mov subb and (bad) shr rex.RB movsb mov pop jb add xchg push lods sub (bad) jmpq ja movsb sahf clc lods in (bad) xor icebp jne callq rex.WR push pop (bad) lods (bad) (bad) mov sub jb cwtl out mov mov jnp xor jbe pop (bad) or movabs pop mov adc lods (bad) int scas leaveq lods push rex.X decb cmp jae lret sbb sar std mov mov (bad) or jl lods fwait lahf jnp adc (bad) movabs sub out (bad) in lods fnstsw je mov rex.WX jrcxz movabs mov jnp xchg lods sbb rex.WX in retq jb rolb jae add (bad) or jno iret outsb lahf lods sarl mov pop retq lods mov xchg ds lods add (bad) rex.X push (bad) pop jp lods mov (bad) xchg insl lods mov callq in mov jl outsl push retq mov std insl (bad) movabs xchg (bad) insb retq (bad) (bad) (bad) movabs jl sbb cs mov lea xchg adc test (bad) in sub je (bad) test pushfq or movabs jp (bad) pop sarl data16 (bad) rex.X in push movabs sbb repz imul lods sbb cli (bad) or lods (bad) iret outsl mov (bad) rorb test mov jne adc adc rex.R rex.B cs test xor clc rex.WB jl int3 lods add sbb and add popfq push rex.XB lods sbb sub push rorb mov lods xchg stos imul (bad) (bad) cmp mov movabs add jl mov push out lret mov or push mov mov lods (bad) in divb int3 addr32 movabs andb lods repz xor sbb jno cld (bad) push sub lods rex.X jo retq rep or movabs je jg hlt (bad) xchg mov mov mov sub and fsubrs outsl jb lods enterq (bad) (bad) mov enterq lods sub jb cwtl xchg lods rex.XB push sub callq stos in std xchg pushfq xchg mov cmpsb jg and lods mov jne js sub paddb lods sahf adc add scas lret movslq shrl mov xchg lret (bad) (bad) (bad) (bad) in mov jle incl jrcxz movabs add and lods callq movsb pop sub rex.RB or lret mov push rex.WXB shrb int add fldt or and xor or mov retq popfq or pmaxub lods movabs testb (bad) pop sub mov (bad) insl mov xchg shrl rex.RX movabs rex.WB scas retq xor faddl test (bad) rex.RXB rorl xchg mov pop lods mov test cmp fwait (bad) (bad) lods rex.XB in incb sbb cmp xchg fsubs and out movabs mov sub (bad) sub sub sbb stos (bad) (bad) pushfq fnstcw mov cs mov sahf fiaddl push test in xchg adc lods xchg out retq jle ja rex lods jne xor lods in callq or rex.WRXB popfq nop pushq lods xor shrl in lods rex.XB retq movabs cmc jle test in and mov iret shrl mov jbe std cld (bad) pop (bad) mov fwait shrl lods out rex.WRX shrb out lods loope shrl lods out rex.X mov xor mov scas ss retq sub insb (bad) movabs xchg icebp adc add sahf rex.WRB sub jmpq jo cmpsl add mov nop sbb xchg scas sub lods callq rex.B rex.WRX pop out (bad) in lgs and mov out mov cli ficom stc rex.RXB sub cmp sarb in lods (bad) int mov jmpq mov clc pushq sub xor jmpq mov (bad) adc ja test idiv insl ss cs test mov je sbb movsl mov adc (bad) in leaveq (bad) scas mov out sbb callq rex.R enterq mov (bad) jno in rex.R (bad) jae push movslq rex.RX in sbb mov or (bad) (bad) out mov fldt lods faddl addr32 adc xchg lret lods mov mov insb retq jl test callq pop lea (bad) xchg mov sub lods roll xchg lods enterq movabs xchg int (bad) test (bad) (bad) lods fisttpl mov insl xlat movabs imul xchg mov jo cld mov fsubrp (bad) adc (bad) jge push in or (bad) jle or retq rex.WRB insb (bad) cmp mov lods out xchg movabs fsubs popfq mov lods (bad) orl mov outsb fwait rex.WXB (bad) or loopne (bad) mov scas ds in sahf push cmp and pand shrl add test subl sub rex imul lods rex.WRB jrcxz (bad) out stos movabs cmpb (bad) icebp sub sti and movabs xor mov je rex.B rex.WRXB repnz mov mov movabs jne xor shlb lods leaveq (bad) sbb cltd (bad) or jg nop cmp movabs (bad) mov jge or test lods jg rex.WX (bad) addr32 (bad) lods mov pop lods rex.X adc adc sub out add lods lea and jne scas mov out add jmp outsb xchg (bad) scas push jo and mov adcb rex.WRB insl mov (bad) (bad) fnstenv jge lods cmp sub (bad) jns retq ds out (bad) (bad) in xchg shr pop insl xor scas xor sub (bad) in jl adc sahf adc rex.WR or sub (bad) testb mov mov mov ja test jne and lods sti cmp ss sbb mov (bad) movabs sbb sub sbb je sbb addr32 rex.XB (bad) ja (bad) rex.WRX (bad) movsb (bad) jo (bad) fs cli jns pop lods (bad) cmpsl xchg or cmp rex.RXB sarb and lods stos lock jmp in sbb mov (bad) xor dec lods xlat rorl pop shrl sub scas jrcxz lock push add lods fstpt int3 mov mov mov lods insb rex.XB repnz mov rolb in add jb or pushfq mov xchg xor sub lods retq cmc mov iret or and outsb sub sbbl cli rex.RX (bad) (bad) cmovbe rex.WRX movslq mov push out adc lods rex.W xorw add sub xchg (bad) scas xchg jg jrcxz pushq pop (bad) js sub int3 xor insb rex.WRXB and pop sub in push rex.WXB jnp push lods pop retq stos (bad) rex.WR lods out xlat xchg mov stos outsl mov fisub (bad) (bad) pushq push (bad) jmpq or lods push movsl pop xchg xchg mov adc cmp jmpq andb push lods rex.XB test jmp stos sub stc adc popfq pushfq fistpll movabs mov cli fild test pop (bad) xchg test shr (bad) (bad) cwtl add (bad) xchg imul scas stos rex rex.WRX lea (bad) jo (bad) fisubl hlt leaveq sub adc pushq cltd cmp cmp in adc (bad) scas sub (bad) or (bad) mov ss cs adc jo test xchg pushfq pop popfq sub fnsave int hlt (bad) pop in and lods add sub lods xchg ja and enterq (bad) (bad) loope,pt (bad) adc popfq mov cmpsb callq lret rex.WRX mov xor popfq mov fs rex.WX cmp or sbb adc lods sub xchg xor xchg xor loope mov and sahf fsubr imull mov iret faddl sti mov cli sbb mov in fs and jae xor adc movsb cmc mov out ja add lret (bad) cs outsb (bad) or sub movslq (bad) mov (bad) pavgw callq ja or movsb add jl test (bad) pop callq sub jp cld jns fsubrl iret in insl (bad) xchg lods scas mov push xor stc add sub lods adc cwtl outsl cmp pushq jmp jb,pn adc (bad) outsl cld cmp sbb push sub movabs lods scas pop imulb or or loope pop pop or rex.RB sbb pop insb xchg subl sahf jno pop sahf movslq lods push std in int (bad) cli xor and cmpsl jge adc pop rex.X (bad) repz and rex.WR mov pop adc mov scas fidivl dec movsb imul mov enterq leaveq andl adc xor repnz int3 scas ss sub (bad) sbb lcall movabs clc mov retq or xchg rex.RB add roll lods pop jmp and (bad) scas cmp sysenter retq add ja lods loop sub mov and popfq (bad) pop cmpsb scas (bad) xorl sti push cmp mov outsb jl in out stos rcrl mov fstpl xchg lods movabs insl pop mov fs sarl lods adc (bad) sub enterq es sub (bad) xor mov nop (bad) fsub (bad) pushq xchg push add lods rex.B out cmp stos bts pushfq and jnp xchg sbb outsl lods rex.WB clc (bad) scas pop sbb lods mov jbe (bad) lods or jmp test adc (bad) roll mov outsl xchg xor cwtl push popfq xor lret (bad) xchg in iret nop mov rex.WX stos rex.WXB pop sub icebp cmp sub retq fmull and jmpq mov std rex.W mov push and imul xlat add (bad) insb and xchg lods (bad) (bad) popfq shll xorb data16 hlt rex.RX mov imul sub sub lods iret shrl sbb imul in add rex.WXB movsb sub (bad) js imul sub pop (bad) jl (bad) jmp fldt sub pushq (bad) cltd mov (bad) jl loopne rex.XB push (bad) adc sub stos lods xchg rcrl pop je stos movabs or push adc mov pushfq imulb sbb out scas rex.RX (bad) sub clc push cmp roll loop insb lods rex.RX adc cltd (bad) scas sti imul xor retq rex.WRXB rex.RXB sbb sbb mov (bad) xlat and (bad) cmc sbb scas xchg fsubrs mov (bad) (bad) sub cmc mov jnp and rex.R js rex.B cmc rex.X loop adc jmpq mov (bad) int notl adc (bad) ja movabs jle rex.WRX xor mov fwait in lods or lods cwtl repz cs adc sbb lods rex je mov mov or sbb imul rex.WB leaveq stos in mov push sub imul loopne push lods stc xor test leaveq mov sbb scas movsl repz data16 out pushfq (bad) (bad) hlt push (bad) (bad) lahf es lods mov divl sub movb xchg pop xchg sub movsb stos xchg rex.WX xor int add mov adc lods sbb test lods add (bad) mov push or sub cld adc rcr push sub decb fdivrl (bad) stos cmp shrl addr32 (bad) cli (bad) lods push cmpsb xchg (bad) xchg rex.X movabs xchg rex.B cs xorl addr32 ja xchg or add movabs mov and sahf in js add pop cmp mov (bad) clc in add scas (bad) movsl mov movsl test xor sub je lods movabs int3 scas (bad) lahf sub and clc movabs sub outsl jle retq out rex.WRXB fcmovb adc mov mov jns (bad) movabs push repnz lods out adc sub sub test (bad) mov (bad) scas add cmp xchg and test add retq (bad) xlat lods (bad) (bad) adc lods pop in movabs (bad) mov jl retq (bad) rex.R lods and (bad) (bad) cmpsb cmpsl ficompl (bad) sbb jbe lods rex.XB rex.WR scas mov push (bad) hlt jg (bad) pop enterq (bad) sub retq mov (bad) (bad) je sub add nop hlt or mov (bad) lock mov add sahf jle sti in repz clc sbb sub (bad) bsr in jae movabs xor lods add jae sub jbe rex.RX push pop jmp jle (bad) stos lods fadds lock adc movabs (bad) rex.WX addr32 out lods icebp lods (bad) mov sbb adc lods xchg xchg xchg sbb pop lods adc idiv (bad) mov (bad) xor lods and fisubr or adc mov rex.X fldt push out lods fs lock mov outsb add lods (bad) movabs (bad) or lods fidivr je jmp adc ja (bad) mov sahf outsb lock out loop (bad) jo rex.WR (bad) xadd add lods ja mov lret push and mov (bad) (bad) pushfq test mov push push scas jne ds (bad) or gs ss in push rex.B shrb (bad) in push pushq (bad) rex.WRB rcrb (bad) push test (bad) sub pop sub (bad) push rex.R xchg or cmpsb lods (bad) sbb sbb fldcw fildl cmpsl lods test mov (bad) out pop lods jrcxz xchg sbb fsubrs clc int3 mov cwtl add push repz je pop movabs rcll rcrb in sbb add mov data16 (bad) push mov in rex.R xor lods int3 and insl cmp cltd mov (bad) mov lods rex.WRXB cmp sbb lret data16 pop mov jne lods rex.WRX (bad) mov (bad) mov cmpsl outsb in ds push int3 push rex.WRX push data16 pushfq rcrb cmp and or clc sbb cltd repz push out in retq sub je mov cmp testb rorb je pop mov pushq insb cmc lods in sub lea adc callq fsubl or cs mov test stc subl sub or jrcxz pop adc scas or sub jae flds loopne add subb rex.WRB (bad) jo cli jg (bad) mov adc fimul xor push enterq movabs lods fs xlat es pop scas (bad) movabs or adc xlat stos lock (bad) xchg jge sub insb and pop retq scas je jae sbb std scas callq ficoml shrl in int3 lods jo pop rex.RB (bad) loopne adc lods (bad) cld mov clc jrcxz jg rorl mov adc fistpll movabs sub iret mov jl test jbe in rex xchg rex.XB xor mov (bad) negl gs fiadd add mov movabs movabs rex.WRX sub pushq jno pop xor fdivrs push pop retq scas rex.WX sub mov jrcxz rex.RX xor sub lods in cmc mov sbb shll jns addl add ja rclb repnz pushq (bad) rex.WXB xorl xor sbb rex.WRXB (bad) mov adc add movabs add add scas mov jno in in (bad) neg mov stos insb mov jge imul mov xchg lods pushfq add (bad) or jne movabs movsl out and jge lods pop sbb xor movabs mov clc scas or std (bad) push repnz lret pushq push test je mov pop adc lods lods xchg loope (bad) stc sbb in rex.X xor lods (bad) std or xchg jmp lods jl push push (bad) sub add cwtl rex.RXB ja jae xor pop sbb push fsubr lods (bad) and xchg sub sub rex.WB mov (bad) (bad) mov (bad) lret movabs add rex.WR pop (bad) jo lods (bad) xlat (bad) cmpsl or xchg mov ror mov movabs (bad) movabs (bad) (bad) sbb (bad) rex.X lods scas push ja pop test hlt mov movabs popfq test mov sub jnp mov imul adc (bad) sti add mov xchg retq lods mov add xchg (bad) (bad) retq loope rorl sbb (bad) movabs cmpsb cld ds xchg (bad) lret retq (bad) add adc stc rex.WR sub (bad) fbld jmp fcoms adc movabs add scas lods mov cs or jns movabs (bad) pushfq mov outsl adc sbb (bad) sub rex.RXB lods es stos xchg rex.XB rex.WRX pop lods add mov xchg xor mov pushfq xchg xor pop jnp or lods mov fstps sar rex.WX or (bad) xor adc (bad) fxch xchg (bad) iret lods test (bad) loopne repz mov cmp fld1 fldt rex.WR lods pop (bad) xchg repnz sarl push lods jmpq jle cwtl scas xchg mov sub cli (bad) clc xchg lods mov callq movsl movabs mov sbb lods stc fldl or in ja adc cmc sbb out ds fwait adc or (bad) sbb or in xchg pop out insb insl (bad) cmp movabs sbb addb jae stos cwtl outsl push pop mov loopne mov and fs sub pop mov cld pop xchg push popfq xor (bad) mov in cmp mov ss add mov lods add adc fdivr out sbb sub adc adc cmp mov (bad) (bad) clc adc (bad) movabs ja int3 sbb (bad) push fmull imul imul add lods callq add sahf adc mov insl xor jl cltd lods cmp sbb xor jb rex.WR rex.B rex.WXB sti in stos fidiv sub jle and xchg rcrb jnp pop movups and stos pushq sub cmp add pop jl or mov lods cmp jrcxz fdiv adc scas cmp popfq hlt cld lods adc out (bad) clc or fwait cmc (bad) sub leaveq (bad) loopne adc shrd mov mov (bad) sub mov adc lahf mov mov fidivl lods js or lods (bad) stos std or push out lods lock sbb movabs cmp xchg lods out (bad) loop fidivrl (bad) sti add cmpb sub xchg and push or mov xlat mov mov retq orl imul xlat jne xchg sar (bad) xchg pop (bad) scas lods int3 icebp pop test movsl je lods cmpb or mov pop rex.R lods add sub xchg insb pushfq lods out sub loopne xchg mov rol mov adc in (bad) jl cmp (bad) cmp enterq je popq std ja stos fs or xchg lods jmp incb adc jae (bad) sbb lods cwtl iret out mov int adcl jg (bad) push or je sub sti adc in in lods xchg (bad) test sub push movabs jo jp and je subb movabs (bad) addr32 lods outsl pop add adc enterq mov xchg out cmpsw rex or cli sub fcomps pop lods int3 andl and pushfq stos (bad) in icebp lea add and or insl rex.WRXB clc (bad) mov es sub sbb mov mov push cs lock lods rorl push sbbl jns mov mov gs add jle lods mov jge js lods ss and jo,pn fsub mov lahf lods (bad) imul fisubr loop adc jg adc mov sub (bad) add (bad) test (bad) sahf add shrl enterq scas pop popq mov cld sub mov and popfq int3 sbb clc xchg lods or rolb lods adc rex rex.W xchg or test cmc jge lods ss adc xor std pop push loopne (bad) lods (bad) addr32 sub xor (bad) imul movsb (bad) pop rex.WRXB mov cli retq outsb jl and push rex lods mov or mov (bad) pop cmpb rolb or rex.RXB or sub mov lods mov add or jg adc rex.WXB lods mov adc pop push rex.RX fnstenv outsl xchg adc icebp fcompl jns xor lods pop mov movabs (bad) mov lea notl lods pushfq add callq scas loopne in adc xor insb mov (bad) rorb or std callq lea sub ror in sahf mov rex.RB add test insb sub fildll or movabs out mov rex.W add sub or lods cmpsb insb sub lods jnp movabs rex.WR mov scas pop rex.WB (bad) lret clc lods (bad) out mov mov nop jo (bad) rcrb xor outsl or loopne (bad) loop loope fwait lea rex.WRX push lods mov in add fildll mov (bad) rex.XB shl add jmpq cmpsb std rex.WRXB mov rcll and je (bad) scas (bad) fstps out (bad) adc push (bad) (bad) loope push vaddps retq (bad) std jnp jae push (bad) sub cwtl (bad) mov fidivl adcl (bad) xor mov fsubl mov nop jne rex.WRX lahf test loop or pop in scas cmp sub xorl lret outsl adc rex lods jge xor lods or test scas mov lret xchg push or adc and ds rex.WR cmpsb jmp shr (bad) add lods mov pop lods cltd test (bad) mov cs (bad) (bad) (bad) lods retq std rolb lods (bad) nop (bad) leaveq jb pop jbe test (bad) jmp (bad) sbb push imul or xchg or sub xorl adc clc and push pop cwtl jns stos sbb (bad) jbe (bad) push rex.WB sub xchg test nop cmp (bad) callq xor movabs repnz (bad) add lods mov or adc add dec int rex.WR cmp vrcp28ss and scas rex.WR sub mov xor test test (bad) rex mulb mov cmp jb lret in ss pop mov outsl (bad) rex.WRX cli sbb mov repnz fucomi xlat mov (bad) adc lret movsl (bad) cli push mov sub repnz leaveq lods xchg sbb mov add out sub gs movslq out mov pop mov test mov hlt scas lods cmpsb rex.XB push sbb xchg jb mov and xchg in add sahf movabs or (bad) add (bad) rex.X mov lods sub jle cmpb shrb adc rex.XB push clc (bad) (bad) std (bad) (bad) or out stc (bad) pop lods xchg pop rex.R movabs (bad) cld or (bad) or iret rex.RXB cwtl (bad) jmpq pop add std xor out insb rex fisubrl cltd push (bad) test add push pop lods pushq or lods rex.RB rex.RXB pop lods repz mov jmpq sbb fs pushq hlt pop outsl loop or jmpq lods mov push movabs rex.WB lods cmp rex.B sub lods jb cltd rcll (bad) lret rcrl scas movsl (bad) mov adc stos pop jg repnz adc stos rex.WXB rex.RB mov pushq mov scas push push rex.X rex.WXB (bad) scas or scas xchg xor nop or retq (bad) mov mov rex.WRB adc stc push lods push pushq mov int lods cmp sti mov pushfq xor lods add (bad) mov and lods xchg or lods notl cmp stos add sub adc xorl push (bad) jb movabs pop jae jl int3 lods sbbl (bad) fiadd add ror mov lods rorl lods lahf push (bad) xor clc rex.R lods sub (bad) mov lahf cmp lret lods cmp repz push fcomps rex.RB insl lret add rex.WRXB (bad) out (bad) out fnstenv mov insb jno retq std (bad) xor lret scas cmp int push icebp stc subl xor xchg xor imul mov xor (bad) (bad) callq mov jbe js mov sbb lret loopne adc jle lods mov std faddl test scas imul pop insb cli sub and jo shlb rolb sar (bad) lods es lods lods jns leaveq pcmpeqw ja vpmulhw xor (bad) imul jle and xor (bad) and int lods mov adc stos xchg idiv and fnstcw and mov ja rex.RXB insl ss movabs (bad) test negl or jbe (bad) xchg iret rex.WX (bad) pop sub cmp mov lods test enterq lods int3 (bad) in jb or lods and mov (bad) movabs (bad) in mov lret fcoml movsb rex.WR add sub enterq scas (bad) mov xor fsubr lods adc cld sub (bad) lods ja scas loopne (bad) mov mov sub xchg movabs mov in sbb sbb lret lods out fs sub out es fsubs mov mov mov mov mov jg mov (bad) in (bad) loopne rex.WRX lods push out pop movabs (bad) jmpq addr32 xor movabs sub lahf jmp pop movabs jge lods (bad) rex.B (bad) in (bad) std (bad) lret lods mov (bad) rex.RB (bad) and lods scas jle test (bad) jne (bad) in push and cmp xor imul insl es xor in rex.WXB lods fst shrb stos (bad) sahf cli lahf rex.WRX cmp rol cs rex.WRXB insl (bad) (bad) lods add (bad) mov callq lods xchg (bad) (bad) (bad) or (bad) movslq and xor jno rex.RX iret lods pop je cmp (bad) jp lods movsl fisubl cmc pop sbb sbb lods jg fbstp mov mov rex.WRB xchg mov add jp lods (bad) (bad) push out push and mov or shrl push rex.RB nop shrb test jge adc lods add iret add jmpq test or lods out rex.RXB pop mov and xchg cmp push rex.RB xor retq rex.WRXB cwtl mov stc and lods and rex.WR repz rex.W lods fisubl lret js or xchg mov rorl xor lods sti es out jnp mov movabs (bad) rex.RX or clc (bad) (bad) enterq (bad) jb mov cmp insb and xchg in jno jl imul sub rex.WXB or rex add rex.WR out sarl or fdiv xor imul lods sub cmp cs sub and lea hlt mov scas data16 sbb repz enterq retq cmp jg push lods icebp leaveq pop mov add sti pop adc retq cld push lods lock or mov (bad) loopne xchg stos jno js nop pop add flds xor retq fdivrp movabs (bad) insb mov icebp stos mov push insb xlat xor shrl xor lods jae ror cs or in (bad) out add shld out rex.B loope repnz in int3 xlat out rex.WXB (bad) (bad) mov lods add and (bad) fbld lods mov icebp in cmc scas xchg jp (bad) mov rex.RX mov cmpsb hlt sbb fwait rex.WR mov push pop add adc add sahf test or lods jns jp or adcl sub sub lahf (bad) in mov ja xchg mov (bad) imul ss lods mov sub add addr32 jns fsub loopne scas cmp pop mov int rex.B push fisubr push test (bad) cmp lods pushfq push pop (bad) (bad) pop movsb gs (bad) retq (bad) cmpsb icebp mov adc lods ds loopne or and icebp sub mov out cmp movsb retq sub add mov test retq scas rcrl int3 rol or rex.X shrb shrl or xor in push xor (bad) jnp stos push mov rorl stc pop pushfq jne lock rcrl and lock imul jg addr32 je mov js (bad) (bad) or callq and jne cwtl rcll or jg cmpsb mov lock out add mov leaveq lahf jo (bad) add rex.WRXB xchg stos in rex.WX push ss xchg push xor outsl cwtl or clc scas jb lods (bad) jle (bad) test cmp es divl xchg (bad) cmp movabs movslq rex.RX iret leaveq movabs lock lods mov pop rex.X (bad) ja adc and sub rex.WR gs js scas or add push pushq mov cwtl stos bsr push add push fidivrl adc outsl (bad) iret clc push sbbl (bad) in addl scas movsl (bad) js mov lods rex.B xchg (bad) cmpsl xchg mov shrb insl sbb xor cli sub lret xchg pushfq shll and callq jae or and mov mov cmc xor sbb lods outsl in mov ss push jp and lods lock mov lods test cmp lods add fwait addr32 (bad) lahf lods sbb xchg xchg stos pop sub xchg lods js sub add (bad) lods mov insl movabs add int (bad) cmp mov xchg scas xor cmpsb jns lods insl (bad) adc loopne loope or adc js lods (bad) (bad) (bad) cvtpi2ps mov loope rex.WRB lret lods rex.WRB rex.B cltd xor lods xor leaveq mov setle cmp mov stos (bad) jbe hlt rex.R xchg lods pop test in scas movabs pop (bad) lods mov lret fsubs and xlat lods rcll retq jg mov sbb pushq sarl fldpi iret frstor sub insb (bad) add cmc add (bad) sbb (bad) movabs (bad) xor pop adc add lods mov xchg or mov (bad) mov (bad) or stc rex.W cmpl lods ds and stos cmpsb add stc pushq or stos callq clc movabs cmp sahf adc mov jae adc lods jo (bad) (bad) add mov xchg js and scas pushfq jl loope mov test pop int3 cld lret push jo push mov rex.RXB (bad) movabs mov out cmp lods jg rex.WB add lods (bad) adc fcomps add scas (bad) mov rcll cmp cwtl jl lods movsb mov (bad) lods retq push pop (bad) mov test movabs (bad) vcvtps2pd callq pop sbb xchg rex (bad) rex.X mov push xchg xchg movabs jae lods gs es retq repnz icebp add (bad) sub or stc lods and xor lods jbe cltd xchg adc je fwait jno cmpsl mov imul or test in xlat add add int3 mov pushfq (bad) rex.WRXB fadds and (bad) adc rex.WRB lods fs xchg enterq (bad) jbe (bad) sub rex.WR ds test cmp mov lods (bad) icebp adc imulb sbb rex.RX stos (bad) xchg xor lods jge cmpsb out rex.WX lods cmp push (bad) loope movl outsb fist lret or (bad) popfq (bad) xchg (bad) lock sub adc adc stos in lods mov (bad) movabs outsb and popfq cmp (bad) adc in mov (bad) sbb jrcxz shr add push (bad) mov or out jl or mov divb push sub mov insb mov loope pop adcl cmp rex.WXB sub imul rex.WRX rex.RB adc mov cmpsb lods test std sub test (bad) jmpq lods lret sbb hlt add or adc icebp push ds lods (bad) in rex.WXB movabs lods outsl mov mov mov mov pushq mov cs pushfq (bad) jge fwait lods rorb push addr32 mov (bad) int3 rex.RXB lods (bad) jb push or movb in lods int jno jge pushq cmpsl cmp orl and iret out (bad) movabs and or icebp movsl sbb cmpsb sub fwait sub movabs or mov sub cmp xchg loop in jl movabs lock lret mov mov (bad) adc scas outsl (bad) rex.WRB mov adc lods (bad) (bad) int3 mov rorb mov fdivrl int lods xchg sbb jnp lods adcl mov lret pop rcrl lods xchg xchg add icebp fisubl push rex.RX push movsb fstpt mov lods adc movabs jne adc int3 (bad) clc in hlt loope xchg lods mov and movabs xchg xor stos jmpq mov fisubr add (bad) mov cmp lods (bad) (bad) sbb sub outsl pop mov xlat cmp rex.RX mov clc pop (bad) mov mov xor ss mov xchg adc (bad) xlat stos retq fldcw cmp (bad) lods and rex.RB rex.WRXB insl pop movabs fisubrl jns (bad) lods sub test repnz mov (bad) rex outsl jo insb mov fildl (bad) fisubrl adc lods mov jmp jbe cmpsl (bad) movsb sub add in lods xor cld jbe (bad) or xchg sbb int3 add sbb mov jbe fdivl nop iret (bad) and rcrl (bad) movabs rex.XB mov push lods shl out mov push pushq in sbb pop sub lods adc push fwait in in vmovdqu pop movabs mov lods sub jnp cld ds sarb or xchg jle lea or out rex adc stos (bad) rex.WRB mov (bad) jp cmp out sub shrb (bad) callq mov js ffree jns int or (bad) (bad) pushfq test mov adc (bad) mov (bad) xor movsl int sti sbb mov (bad) rex.WB (bad) pop (bad) xchg lods rex.RX jp (bad) insb jmp push cmp shrb mov lahf lods shlb clc jl jae rex.RB insl (bad) mov cmp (bad) shrl mov rex.B rex.WRXB mov loopne (bad) (bad) mov insl xchg jns xor fwait add sbb pop mov or push in add (bad) mov jb test mov in in sub rclb movsb xchg mov (bad) push or xchg (bad) xchg ficom lods jae push lea stos jl mov enterq rex.WX lods test inc mov cmp test lret sub std int3 pop retq adc fs (bad) cmpsb xchg xor shlb cld mov (bad) retq pop rex.WX repz (bad) nop mov adc sbb in pushq mov add movabs sbb callq scas xchg sbb mov and mov rex.WXB stc repz rex.R lods pop clc (bad) xor xor mov test ds roll lods mov (bad) mov or lods cs lcall clc pop (bad) (bad) mov (bad) out scas pop int3 mov scas pop pushq jp jg adc movslq add sub clc int and xchg shr rex.W xor mov (bad) (bad) jmpq stos fs jae cmp ja mov (bad) repz xchg cld leaveq fsubrl je sbb add (bad) insl xor sub stos xor fucomp (bad) pushq std notl lods in stc (bad) out je sbb xchg sbb sbb push lods test pop mov test xor stos and (bad) (bad) (bad) mov mov (bad) lretq adc int3 (bad) lods xor adc lea (bad) or retq cmpsl xor mov rex.RB jmpq fsubl rex.WR mov rex.RX jno xor retq lods cld (bad) fdivrs sub int mov pop sbb in pushfq cmp lods xchg insl mov clc stos sahf out mov lods sbb xor test lahf movabs insl lods callq jge mov xchg pop sbb (bad) sub fnstcw (bad) stos repz retq jb mov lea (bad) gs jmpq (bad) jp push mov (bad) (bad) sub outsl clc xchg mov mov imul (bad) add fprem imulb (bad) (bad) sub je cli movsb std stc outsl add scas mov sub adc mov jb mov outsl shrl cmp xchg cmp (bad) cs (bad) loop cmp (bad) sbb mov mov imul add cli and (bad) (bad) lods push xchg out rex.WXB mov and adc insb (bad) test rex.RXB sbb mov stos mov or jmp es xor or mov jno in roll sbb (bad) movabs (bad) or and jbe cmp mov (bad) jmp cwtl add or mov fsubrl fstpt int push adcb mov jnp (bad) stos popfq jmpq mov jmp (bad) lods out mov mov loopne sub std jg lods insb xlat sbbl stos mov shl sbb (bad) lahf lock (bad) test test sub jrcxz (bad) rcrb and rex.RB (bad) (bad) lods sub fidivrl cmp fbstp retq or fmull fs subl nop cmp (bad) pop push mov jle sbb add (bad) jl (bad) out sbb test roll mov cltd in imul cmp fldt (bad) xor mov and (bad) rex.WRXB rex.RX xchg mov insb jmp sbb pop xchg rex.WR add cmp xchg push movabs xlat and pop cltd push mov jrcxz shlb in lods pop jp pop movabs ds movsl xlat int3 rex.WRX rcrl push (bad) add imul rex.WRXB stos mov rolb mulb insb jns (bad) lods movb sub insl ja mov stos mov sub push int scas mov rex.X mov (bad) nop pop lods xchg sarb cmpsb fwait mov mov lods add add fwait test xchg popfq sub int3 addr32 lods and lahf cs andl out or out rex.W sahf (bad) sahf movabs pop in cmp pop int3 jbe sbb cmp lods outsb pushfq insl lret scas adc jns (bad) (bad) scas and add sbb stos mov push cld adcl cmp mov xor fs loop lock clc cvttps2pi movabs (bad) in xchg push cmp jae neg jmpq mov sti rex.WRXB rex.RB mov (bad) or lods movabs out movsl mov movabs sub lods movsb repz or cmp in sbb (bad) or (bad) imul (bad) rex.R pop (bad) scas pushq scas add rex.RX or sbb jne sti jne js mov movabs push pop rex.RX pushq fucom icebp lods test rex.B adc lods rex.R mov or or mov sub pop pop (bad) xchg xchg (bad) adcl rex.B loope add (bad) sbb lods loop jge retq mov (bad) rorb xlat pushq loop (bad) pushfq lods cld cs (bad) negl or jns add movsl and mov test (bad) xlat or (bad) cs scas scas stos xchg jno in jbe and (bad) mov (bad) (bad) rex.WR mov cmp scas idivl or add push xchg scas in test sahf sarb jmp jne out rex.B repz and or int3 mov rex.R lods subl xor addr32 fcoml xor mov mov negb std pop clc movabs gs xor out (bad) or mov in lret mov (bad) jae rex.RX cwtl loope (bad) int3 in mov pushfq adc (bad) lods out fisttpll and mov insb lods js jno xchg rorl pop roll sbb cmpsl mov int testl outsb fsubrl (bad) scas fiaddl stos pop out sbb lods pop cmp addr32 (bad) rep movsl pushq pop jnp movsb jp lods icebp mov rex.RB callq (bad) movabs sbb js imul (bad) (bad) adc rex.RX mov lods (bad) mov lods xor xchg xchg cmp lods lahf pushfq es xchg movabs sarb (bad) out movsl movabs and sahf and rex.WRB fisttp movslq hlt sub pushq jg lods rex.WB (bad) (bad) adc (bad) adc mov insl push (bad) std test and push xor or rex lods push or (bad) popfq mov mov xor sti rex.RXB mov fs lods (bad) orb ja sbb scas jae sub xor sub mov movsb fsubrl or lods lea cmc mov cmp gs or (bad) movsb jg,pt xchg (bad) incb movsl sbb in mov cmpsb lods stc fdivrl and movabs mov sub push pop stc xchg and stos shrl or lods imul iret lods push xchg jmp xchg pop lods fbld ficom loop out (bad) jge out es (bad) mov (bad) lret cmp loop adc sbb insl push adc mov hlt mov test cwtl push sub (bad) jge lods fwait mov (bad) out jl stos lods lods pop fs sub lea sub xchg (bad) cmp (bad) sbb (bad) test data16 mov mov rex.XB out add sbb adcb (bad) movabs xor xor retq movabs loop fdivrl loopne mov xchg adc test add movabs xchg lods pop ficompl callq rex.WRB stos cmp push push (bad) sbb sbb and jrcxz sbbb and mov (bad) in xchg and rex.WRXB mov outsl and es or mov cwtl movabs cltd add mov nop fwait xchg retq movabs or imul push lods sub int mov and shrd loopnel out mov lock mov test and sub lods imul xchg fldt out lods push (bad) (bad) pop test mov outsl addr32 cli insb add (bad) scas mov scas pop movsl test insl cmpb fildl mov pop jle mov mov mov (bad) adc cwtl xor xchg mov retq repz (bad) jp lods rex.WX data16 pop jl and andl rex.WX rex.RXB sub rex.W rex.RB lods cltd xchg cmp mov (bad) movsl (bad) rex.B (bad) movl pop push movabs mov clc pop sbb mov mov or push shrb rex.W movabs add mov shr scas outsl mov shrl (bad) out pushfq push mov (bad) lods pop ja or ss clc mov xor xor lods movslq movabs cmp rcrb push rex.RXB fiadd add in ja mov pushq leaveq add pop push fdivrl stos rex.R mov pop sub (bad) in lods sbb jo (bad) movsl loope (bad) inc nop sub lods (bad) cmp int mov leaveq rex.RXB in lods jb cmp stc lods sbb adc xor lods push (bad) push rex.W ss rex.WR rcrb lods (bad) cmp ffree jl jne mov rex.R sub sbbb lret or lods je roll adc lods testb scas rcrb push cmpsl in rex.WR fadds push (bad) xchg and mov rex.WRX lods cmpsb fcoml add (bad) (bad) jo (bad) (bad) stos mov mov loop ss fs jrcxz popfq lods xchg sahf cmpsl or shll jle mov test fiaddl (bad) add rex.WR rex.WR leaveq mov cmpsb repnz mov lods jp sub xchg cli fnstenv or or (bad) sti lret (bad) enterq out movabs cs sbb in jrcxz movabs iret movsb sahf jnp iret movsl (bad) jo mov test mov rex.X mov pushfq insb cmp imul adc (bad) cmpsl and fucomp jo cmc lods xor mov iret lahf mov retq and rex.WRB ljmp shrb rex.R (bad) adcl (bad) retq int lods mov fildl sar xor sti or jns popfq ds nop fs and mov jmp retq or rcrb mov fwait in retq xor sbb add (bad) add and mov rex.WRB adc adc mov mov loope js movsb pop xchg andl je mov in jb movabs lods cmp and cltd rex.RX mov movsl mov xor (bad) insb xchg sbb and sub fisubr (bad) adc and cwtl movabs sub rex.RXB test sbb mov mov rex.WB fmul movabs lods xchg pop mov lahf movabs stos mov scas addr32 jg insb jrcxz test ja movabs xor rex.RXB data16 xor sarl stos adc adc (bad) adc movabs (bad) lahf lods add out pop movslq iret in add mov and test (bad) scas jge mov mov rcrl movabs sub cmpsb divl lods cmp leaveq sub test scas (bad) or icebp and js int jne jb pushq add adc (bad) and jp push adc (bad) callq mov rolb xor out clc sbb sbb movsl scas out retq adc add or mov int ror fstpt mov xor lods iret test js rex sub insl rex.RX mov jae and lods cltd cmpsb rclb (bad) xlat and sbb sub add jg lock xchg pop (bad) int3 (bad) divl (bad) outsl insb loope rex.WXB (bad) cmp lods cmpsb insl int3 xchg sbb xlat callq adc and or jle add lods rex.WX fwait jle retq stos imul xorl mov lods lret shlb cli out xchg cmp push loope stos pop sub rclb imul or adc mov jmpq shll xor pop rex.B imulb shr lods mov stos loope stos lods or in cld test rex.B scas (bad) ror jmpq push lods bnd mov (bad) jbe rex.R test jb add lods push (bad) mov jbe (bad) lea lods (bad) xchg pop movabs (bad) add js jne fdivl mov jbe sub rcrb push (bad) (bad) (bad) lods and lods data16 adc jmpq lods movsl add jle lods push (bad) mov mov cmp pop (bad) shl (bad) jbe rex.R jnp rex.RB test add stos (bad) or pop or (bad) mov movabs sbb lods and mov (bad) pop test cmp mov je (bad) mov cmp lods and es (bad) int fbstp mov (bad) (bad) or popq fs lods add jb ss (bad) lods fsubr rex.WX movsl cmp iret lods lea mov (bad) mov sbb mov mov push cmp lret mov add fisubl adc loop lods cmc cli sbb (bad) lods and mov pop pop shrl push cmp rex.RXB xor movabs int3 std xchg ja and or xor shrb xchg int3 and pop jno stc lods (bad) rex.RX or jge cmp rex.W rex.WRX rex.WX retq je shrl rex.R add rex.WRB jae sub lock or (bad) scas rex.WR cmp mulb xchg pop rex.RB rex.WX (bad) adc lea and lods out loope jno (bad) in add pop and pushq fwait push test xchg movabs mov (bad) (bad) cmp (bad) or callq ja sbb dec sbb sub mov xor sub test push out mov (bad) mov iret rex out add movabs adc jg mov jb es xchg lods (bad) xchg in nop mul scas lods (bad) or lods pop adc mov jo (bad) lods movabs test out hlt pop cld and (bad) push (bad) mov lods and mov flds cmc lods callq (bad) hlt lods jb (bad) xlat rcrl es clc (bad) rex.WR rep mov icebp pop pushq mov (bad) cmp sbb ss in jns retq (bad) mov in lods adc outsl rex pushfq mov or lods rex.WX (bad) popfq (bad) subl rex.WRB jp or (bad) stos sub cmp mov movsl pop lods push pop sbb sub (bad) data16 icebp pushfq sbb enterq lods jb (bad) (bad) pop xlat js enterq mov mov rex.R ljmp lods cmp mov ja mov and (bad) rex.WXB mov lods xor rex.RX adc enterq lods or xor and rex.WR stos jns jo jb outsb outsl lods push rclb and rex.W repz lods jae mov sub (bad) roll xchg lock movabs fldt lret scas and insl rex.WR mov lods outsl or enterq lods movslq rex.WRXB xchg pop and push sub mov scas gs cmc subb sub jrcxz movslq cmp sub (bad) testb (bad) xchg cmp mov es popfq xchg lods retq push rex.WRB mov std (bad) in cmc ss sub cld pop jae and imull xchg or lods clc andb js lock scas xor repnz sti rex.WRB roll mov test lret push push loope out mov pop pop rex.R stos std sbb (bad) xor in and subl jb ficompl out stos fucomi sbb (bad) fmull (bad) cltd mov sbb nop sub scas pop adc lods and loope mov in test sarl pushfq test rex.WXB imul int inc (bad) push (bad) sub shl and push (bad) cmp insb stos (bad) jbe mov insl in outsb xchg cmp out rex.WR or lret scas xchg pushq lods repnz rex.XB out lods xor xchg xchg jb push callq (bad) cli out lods rex.XB (bad) or push push repz clc in cmp retq sub in sahf js sub insl ds in (bad) mov rcl lods (bad) cmpsl mov movabs sbb push callq pop in stos jmpq cmp stos mov repz cwtl or adc (bad) mov lods (bad) popfq es movslq mov mov js mov sbb ja cli lods mov clc jp jge popfq lods xor fidivr mov data16 out or push cmp (bad) rsqrtps hlt adc xor lea sbb mov lods adc adc adc xchg clc sti mov pop mov cwtl (bad) cmp callq cmp mov and stos push scas xchg mov andl and add (bad) lods fbstp out pop mov rex.WRXB adc adc xchg clc jnp lods pushq sbb adc (bad) vcvtdq2pd jl rex.X test sub mov lret pop adc rex.WRB rex.B fwait stos mov or (bad) adc rex.RX cmpsb movabs andl jrcxz and cwtl mov sub sub rcr in pop sarl sub rcrl stos xchg rex.WRXB (bad) add lods push jne mov xor add (bad) sub (bad) sti lods addb hlt (bad) pop scas xor push jnp stos jle movabs stos cmp fld (bad) mov xor int and and movsl lods sbb xchg (bad) and addb mov flds int jb (bad) repz jl sub or push mov rex.WRB rex.RX fistl lods insl movsb loop pop (bad) lods (bad) mov fsubrs test pop (bad) retq lods lret sbb retq lods cld jae mov movsl jg lods (bad) add rex.RX rex.X cs jrcxz sbb sub sub outsb adc cltd sub and (bad) int sbb test xor xchg test sbb or sub xor sub out pop add test cld nop (bad) sbb rex.WRB rex.WR mov (bad) mov mov insl (bad) jb lods xchg out sarl rex.WRB mov pushq xchg cmp (bad) lea shrb fldt fldt xchg xchg or stos (bad) jg mov sub imul shrb rcrb cs repnz pop (bad) hlt callq rex.WRB mov (bad) sahf mov (bad) mov int out cltd cld add xor (bad) mov sub sub jae lods mov cmp rex.WX out lods scas repnz mov in clc cmp sub mov (bad) mov rex.WB rex.X (bad) cmp mov (bad) test lods ds ror out mov lods (bad) rex.WB or add pop and lods add lods rcll fs in out xor sbb test pop (bad) rcrb rex.X in rex.WB mov ficomp or pop rex (bad) mov movsl (bad) sbb add sbb sti stc mov (bad) stos jns fdivp push add pop cld lods cltd imul out (bad) jmp stos outsl cmp or xchg jne push rex.W ss lret xor pop lods xchg cmp rex (bad) rex.W lods adc cmpsl sbb movsb imul retq cwtl xchg pop add in xor lods (bad) hlt cmp lods xor push push movabs cmp icebp lods fwait (bad) popfq (bad) (bad) sbb push (bad) rex.RB cmp mov movabs insl gs and add xchg jnp xchg mov sbb loop adc retq cltd cmp sbb pop rex.XB rex.WX pop and rex.X enterw push mov mov cld cmp add mov add lods push scas (bad) mov sub lods or movabs adc lods repz fistpll rex.WR lret popfq pop hlt test pushq jl lock xor std stos (bad) fs (bad) cld sub in or mov adc or (bad) xchg add ja pop add xchg lods scas sahf mov (bad) mov push insl (bad) in (bad) add jge jp adc test shll ds sub cmc jl verw gs (bad) sub out or cmp (bad) mov lods es test pop jns sahf test rex.WX rex.XB (bad) (bad) cmp scas mov xlat jnp enterq jae jmp test xor (bad) callq in (bad) rex.WXB xchg movsl pushq lods (bad) mov (bad) mov add ss lret fadd js stos stos enterq (bad) rcr mov lea fmuls jp add cmp mov in (bad) lods int loopne in (bad) jge lods sbb mov lods push (bad) push xchg pop lods pop rex.WRXB movabs jnp or sbb xchg pop cld lods mov movabs mov add xor movabs adc sahf (bad) (bad) movabs and out pop (bad) jae pop xchg lods movabs shrb lea or ror ja rex.X jns push retq scas scas (bad) mov (bad) or (bad) mov jne sub rex.WXB jmp mov add neg js imul xlat mov rex.RXB jbe movabs movabs stos xchg cmpsl jo cmp push mov cmpsb sbb jp cwtl (bad) and test in mov jno test push adc lods push mov and mov testl lret push xor (bad) (bad) stos (bad) lret cltd jae jge (bad) adc push rex add mov lea mov mov rex.XB test movsb movabs sub int3 not sbb sbb test (bad) pushq imul or ds jnp lods (bad) rex.WXB data16 in sub xchg loope je push mov mov sbb or iret movabs xchg clc loopne lods sbb mov push gs lods add (bad) std sub rex.R nop out (bad) (bad) iret lods movabs lods repnz (bad) add (bad) sub xor fbld lods mov clc rex.WRB cld (bad) (bad) je fsubr lods (bad) mov stos movabs pushq sbb lods test pop (bad) mov subb sub adc (bad) and or push lods fistpl orl scas or testl push stos lods test pop mov lods rex.WRB push xlat sbb scas test jb or gs mov lret sbb push mov insb shrl rex.RB lods cld sbb xlat mov lods out (bad) sysenter es leaveq lods mov push add (bad) fdivl insb stos xor sbb mov mov push mov nop (bad) shrb movslq unpckhps loopne jp pop sbb pop sbb (bad) rex.WB in mov int xchg pop iret lods enterq jmp mov insb and jnp (bad) sti scas (bad) rcll (bad) cld (bad) xchg test int insl (bad) push lods (bad) xchg sub loop jns scas or mov je mov fcoms xor mov js pop sbbb es (bad) push mov jb (bad) (bad) roll stos out mov jbe (bad) adc mov in xor lods xchg lods rex.B pop sti imul stc sub lods pop (bad) test (bad) mov retq out sbb jbe cmp (bad) stc rex.WRB cmp push stos out (bad) jmp sar lods in sbbl adc lret (bad) and (bad) push (bad) leaveq out es mov jbe scas cmp (bad) mov adc mov rex.RXB rex.WRXB (bad) (bad) adc stos lret movabs rex.WRB rex.WRX add jmp out lret data16 test jp leaveq (bad) fisubrl jmp movslq push (bad) movsb pop jo insl or movabs xor movsb loope mov lods push mov insb xor and psubusw and pop sub movabs (bad) add lods mov mov adc lea lods adc sahf lock and mov jl jns movabs rex.WRX mov (bad) jge (bad) rex jo lods push (bad) jne rcll add and mov lods imul jrcxz mov lods fisubl hlt cli lods (bad) stos pop imul sub mov (bad) rex.B outsl (bad) in mov xchg movsb (bad) rex.WB rex.XB pop scas pop xchg xor out rex.WRXB cmp mov stc and (bad) fdivr cmp mov movslq sub scas mov xor rcl sub sarl xlat out sti xchg decl outsl (bad) mov mov out movslq mov fisubl in xor or (bad) mov insl mov sbb mov retq sub pop ficomp rex.R lea movslq xor jge cli rex.X sub add cmp cltd jmp adc cld cs enterq sbb (bad) stos out jmp pushfq xchg xor mov je rex.RXB (bad) xchg popfq (bad) adc rex.WXB cld shrl sub sarl lods or jmpq rex.WRX (bad) fwait pmaxsw sbb cld mov lea xor or sbb sti (bad) in or shll addb (bad) jns (bad) jp xor rorl rex.WB add (bad) or xor mov (bad) xchg lods int and fadds xchg mov cmp (bad) sti mov js movabs mov cs mov addr32 mov mov (bad) jnp cltd push push movslq sub std movabs in cmp jne pop jb iret lods xchg (bad) negb imul mov (bad) mov subl in add (bad) (bad) movabs (bad) loopne subl (bad) jmpq jle lahf iret and push pop imull add add insl jrcxz jbe rex.R movabs popfq lods xchg jo std js ds imulb mov (bad) pop scas stos mov fcoml js (bad) jno (bad) movabs or cmp outsb jge in sbb rex.XB jae jle je xor mov mov fwait rex.RXB popq and add movabs xlat cld out mov cmp adc push push lods pushfq push mov lods cmp lret mov xor outsl mov lods (bad) rex.X lods (bad) mov mov xor xchg mov add (bad) cwtl mov adc (bad) sbb jl adc push add or (bad) jne fcomip test sbb (bad) xchg rex.WRX lock in mov rex.WB xchg ficompl (bad) adc lret or (bad) stc hlt mov and pop out insb add in (bad) sbb sbb rex.W shrl xchg adc fs ficoml mov pop lods jo rex in push testl (bad) fwait (bad) add add rex.X adc in es xchg jns mov mov jmpq ja sbb mov mov sub imul add add repz cmp adc lods (bad) out push fs rep test or (bad) paddsw stos push rex.X lods enterq xchg pop (bad) add fnstenv lods sub fdivs sbb add pushq rex.RXB xchg or roll lods icebp cmc out sub loopne xchg (bad) loope sahf scas xlat xchg outsl add mov ja lods addr32 xor retq pop cmp or iret cmp push repnz outsl movabs rex std sbb cli cmp and pushq in (bad) cmp test lods push rex.RB (bad) scas sbb in (bad) mov pop jo sbb (bad) jge and sub jns and mov and add lods test lahf cmp in lods lock adc lods clc cmc orl jp insb (bad) push fnsave push in pop mov in (bad) mov cmp sbb in adc cmp lods xor mov (bad) (bad) (bad) xchg cltd sbb jnp or movabs mov sub xchg movslq pop xor jnp and out retq add clc (bad) rcrb lods loopne,pt adc (bad) in (bad) lea jns repz sbb movabs lock jl in sbb (bad) (bad) rex.WX sub cmp push xchg fsubrs movsb sub insl add div lods shl jns add or in int3 imul movabs jg cmpsb pop test lods cli rex.WR rex.WRXB lods movabs xor test (bad) pop add int3 data16 jae fstps lods mov mov lock (bad) push mov mov loop push lods rex.WRX (bad) pushq shrl mov out (bad) xor sub cwtl or push in insb cli fcomps lods movslq fild (bad) loope add scas insb leaveq pop mov (bad) repnz xchg (bad) lods cld (bad) rolb (bad) (bad) xor leaveq in cmp adc lods clc rcrb and jnp lahf (bad) xchg pushq movabs mov rex (bad) and hlt mov rex.WRXB clc loope rex.RB mov (bad) int3 rex.W cltd pushfq in sub outsl rex.WX (bad) (bad) xor out or adc fdivr fdivs movabs pushfq (bad) (bad) lods rex.X rex.WRB test in movabs (bad) sbb sbb jmp lods xor push fbstp movslq (bad) imul cmp jb loop mov sti test (bad) adc (bad) pop lods notl rex.RXB lret sub sub leaveq sub test lods repnz je mov pop lret insl (bad) enterq mov lods rex.RXB rex.B rex.WR rex.R imul fistpl subl rex.WXB lods pop (bad) xor push xchg mov cmpsl (bad) fsubrl xchg jl adc lods sahf and ds lods enterq adc cltd lods (bad) lahf xor movabs or xchg (bad) adc in iret sahf jg jo mov sbb mov in cltd jne push rex.R sub (bad) mov sbb subb (bad) leaveq rex.R rex.WRB iret lods gs sbb ja jp stos adc mul and cmp add add sarl lods pop adc push je or xor (bad) (bad) lods pop (bad) outsb fidivrl xchg imul sbb lods (bad) lods data16 adc lods sbb movabs out (bad) lods (bad) rex.WXB jge adc lods or jmpq rex cmpsl mov es (bad) (bad) cli sbb scas in rex.WX nop mov xchg pop (bad) rex.WB stos mov lret (bad) or (bad) (bad) lahf rex.RB sahf sbbl scas sbb lock jp int3 lahf adc test (bad) rcr fsubl test lods mov pop mov mov push or xchg bts decl retq jnp nop xor cmp rex.RX test xchg retq lods rorl icebp scas loope shrd sub or scas mov icebp in (bad) lods xchg or xchg scas or lods mull outsb sub pop retq jl mov movslq rex.WRXB loop imul in xchg lods pop sub mov mov pop rcrb (bad) or por (bad) outsl scas fldt test (bad) lods mov lods cmpsl test icebp jg (bad) push or outsl adc xchg add xchg insb or scas rex.X cld xor pushq rex.WRB movabs lods mov (bad) lock lods (bad) (bad) push jo insl gs mov adc jg xchg pop lods mov add or pushfq cmp jle lret xor scas rex.WXB in (bad) or mov fsubrs (bad) or (bad) shrb xorb xor imul (bad) pop repz out xor (bad) sti sbb push callq outsl cld rex.RX mov loop mov callq test and cld rex.WB insb (bad) movslq adc and (bad) pushw scas sbb imul in push rex.R repz sub cltd or rex.RXB movabs pop (bad) mov and lods jo loopne (bad) jmpq adc (bad) or (bad) jno stc (bad) push lods int3 pop out stos xor cli fmull or sahf (bad) lahf xorl pushq int mov maskmovq stos icebp jnp (bad) lods es (bad) fiadd or callq xlat imul (bad) movsl ss cmp rex.WRX (bad) ffreep and pop roll negl lods sub and lods cltd cmp mov cmc fstpt mov lods iret sbb insl test shrw fadd or icebp lods xchg (bad) enterq mov mov (bad) xlat rcrb stos movabs (bad) jp int3 pushq xchg (bad) adc jb rorl and jle lods (bad) addr32 sub and lods push xchg (bad) (bad) mov (bad) test push sub cmp lods outsb or je scas lods mov sti rex.W (bad) int3 jns lods jrcxz (bad) imul lods pop sahf in rex mov sti enterq adc mov std in scas int enterq lods clc loop adc lods (bad) push jl gs cld (bad) mov push xor mov adc movsl int3 pop movabs lods xchg lahf sti ror xor lods out pop stc lods and jl movabs cli lods outsl rex.WB mov adc jge push je cmp mov movslq cmp imul mov in mov push shrl es movsb (bad) pushq lods jne jbe push fwait mov imul jl rex.RX mov leaveq xorl or xchg lods cmpsb cmp sub pop adc or cmpsb lods mov iret (bad) cs pop out retq addr32 mov xchg in std (bad) jbe loope lods sti mov and sbb (bad) jo sahf lret cmp shlb push mov test std mov cmp lahf pop cli push lods subl xor rex.WR repz out xchg rolb rol ud2 or fs lods (bad) jmp (bad) mov out or cs mov jnp lods movsb and jo stc jl mov lahf xor (bad) leaveq cmc mov and mov jl sub (bad) jnp mov (bad) iret mov js in (bad) pop xchg out movabs lret or (bad) fs rorb retq gs add in movl cmpsl mov push pushq lods rcrb adc lods test jg cmp scas (bad) xchg (bad) pushfq mov sub (bad) lods (bad) (bad) pushq movsb pop add pushq mov jae cmp mov (bad) jne insb sbb stos mov icebp jrcxz shrl or (bad) ja rex.WR mov lock pop repz test movsl cmp insl mov jp rcrl (bad) cmc pop imulq add mov add xor rex.W rex.WXB xor movabs mov mov lods outsl mov (bad) adc mov xor add fwait mov push imul sub mov and test int cmp mov andb mov sub mov stos nop jmp adc jle xor in (bad) cmpsb subl jno add retq rex.WRB cmp icebp xor int (bad) mov mov out int3 lods jbe jnp lods sbb icebp ds xchg add push repnz lods push movb pushq jno xlat andl pushq cmpl test (bad) stos sahf movabs fdivs lret lods mov or rex.RXB push cmp scas and hlt rex.WRXB cmpsb out lods mov (bad) pushfq pushq rex.W rex.RB sub jnp sub cmp out jo lods (bad) sub mov push rex.WRXB rex.B lods popfq es and mov mov mov lods mov or lods loope add addr32 cmp movabs sti rex.RX (bad) xchg cmp mov add mov insb jge lea (bad) jl add sub pop je fcoml jge rex mov rex.R pop movslq pop lods add push adc (bad) jmpq imul jno (bad) or (bad) mov mov jae mov (bad) lock retq sub jo cli test rex.RX rex.RX scas cld sub mov (bad) xor push int3 (bad) cli mov callq andb mov test fidivr lret xorl xor insb xchg test (bad) mov xchg pop mov mov mov rex.WRB (bad) psllq jge sahf xchg adc lods rex.RXB rex sbb enterq rex.WRX push (bad) int3 xor lretw insl xor insl (bad) popfq or xor lods jb in (bad) ds push jne iret sbb and xchg and test cmc push mov mov xor ds sbb lods fistpll adc sbb subl xchg pop (bad) movsb mov fisubr mov jg jrcxz cmp lods mov xchg cmc adc xchg movabs cmp mov or lods ficomp and adc push jno repz insb mov (bad) movsb movabs xchg mov mov xchg (bad) pop fsubp mov rorb repz push mov (bad) (bad) fidivr lods stc (bad) adc popfq lods imul cmp xor test (bad) jno out xor mov push loopne lods (bad) sti data16 mov lods or sbb xlat scas or and rex pop and test movabs rcl vcvtsd2si mov out add jns rcrl scas (bad) lea (bad) lods addr32 pop jg push pushfq lods sbb mov and (bad) fcoml loopne scas rex.RB int (bad) adc rex.XB and rex.WB lods jae (bad) jno cmpsb mov lods rex.R mov es xor mov (bad) jae push pop stos insb (bad) rex.B rex.RXB mov pop test mov callq (bad) (bad) stos rex.WXB cwtl add cmpsl xor cmp (bad) mov lods rex.XB gs ja and (bad) decb fwait imul add (bad) insb lods rex.WX jnp (bad) fiaddl sub cmp sbb lret iret add adc (bad) in jno sub push pop lret in (bad) hlt in lods jl jnp lods es cmp mov sbb xor movabs sub rex.WB pop xor or lods subb mov mov nop rex.RXB sub rcrl rorl rex.RX (bad) rcl lods rex.WRXB (bad) adc lods (bad) popfq cmc cmp (bad) jae xchg addr32 mov (bad) mov stc mov xchg rex.W loope pop mov rex.WRXB lods add mov jnp andl rex.WB (bad) sbb adc and imul stc and cmp test mov cmpsl jns stc pop mov (bad) ds or cs stos mov fs rex.WX lret adc mov (bad) lods xor add sub lods je ficoml jmp lods xor jb lods cmpsb (bad) sbb rex.XB rex rex.WXB scas enterq cmp in jbe (bad) xchg xchg pop adc (bad) push fidivl ja cli loop movsb mov pop mov xchg scas xor in sbb fsub or stos sbb xchg and (bad) lods imul mov movabs (bad) or and (bad) punpckhwd pushq cmp pop (bad) movslq (bad) lods scas xchg jmp fsub in stos cmp retq rcrl rex.WR (bad) retq lods adc add xchg out lods out (bad) rcrl jae mov cs cmc scas xchg jl or sub in and sti push int3 mov mov (bad) lods mov rex.WX jb cmp xlat in rex.WB rex.W xor lock movabs (bad) sarb lods or (bad) (bad) cld lahf lock adc in movb movabs and (bad) fldenv test int xchg adc movabs lods rex.WRX out sub or scas rex.WRXB mov stos xchg lea ds mov (bad) lods rex.WRB movsb mov or sbb test xor loop fnsave rorl xor sbb mov and jbe add lods test sub adc shr sahf xchg (bad) xor es (bad) sub add jbe cmc cli rex.RB mov scas repz xchg rex.WRB fistl outsl in add int3 push (bad) (bad) rex.XB mov jp repz jmp xor rex.RXB scas movslq xor rclb lret xor pushq cmp (bad) lods (bad) or pushq mov lea sub repz or lods sub rorb cld xor cmp pop or cmp int3 mov (bad) cmpps movabs xchg stos push stos out sbb lods pop imul rol test fcmovne test stos (bad) out std test sub jnp in rex.RX (bad) movabs xchg scas outsb loope int3 lods mov rclb (bad) lret loop (bad) ja bnd rex.WX rex mov and mov mov adcl movabs cld mov (bad) fisttpll add lods test mov lods cmc rex.WXB movslq mov add stos add outsb mul mov xor ficoml (bad) rex xor ja cmp or mov or (bad) (bad) repnz lods cmpsb (bad) (bad) jo js lods imul int cs mov mov push movsb sbb lods adc jmpq out sub mov xor or sub xor mov mov mov int mov xor rex.XB (bad) add and xor (bad) lods rex.WRB rep (bad) sahf or and jbe cmpsl fs rcrl or mov lods callq add leaveq test lods sbb sbb loopne icebp out jo lods (bad) and mov push sahf in loopne pop mov or fsubl (bad) cmp pop fsub xlat (bad) lods clc (bad) mov scas cmpsb (bad) movsl lods lahf sbb jmpq cmp (bad) jl mov in jrcxz nop lods jno out outsl mov (bad) jrcxz movabs imul rex.W lods rex.R addr32 iret rex.WR lods rcrl and enterq in jmpq sbb sub (bad) retq pushfq mov rex.X lods push sbb test fldcw movabs push mov jp enterq and fadd cmp jno in lods rex.WB mov movabs sub adc rex.WXB pop sub sti je mov out imul lahf and shrl insl jo mov movabs hlt (bad) mov jmpq repnz out lret outsl in cmpl lods cmp adc sub (bad) jmpq iret push (bad) movabs xor lods xor mov sub test movups lods or mov stos jmp add cmp adc rex.XB lods jbe mov lret sti popfq or retq scas int mov jge rex.R lods rex rex.WRXB add repnz or out cmp lods mov xor hlt out stos movabs push lods jge repz int3 mov iret add sahf jmpq in fs sbb cmp loope repnz cli data16 sub sbb rcl and mov rex.WR jg rex.WRB pushq mov xchg sbb mov add xor mov lods adc pop add jo rex.X mov mov rex.XB fs rex.RXB jne (bad) jg sbb jge xor loopne or lods sbb push jnp outsl (bad) je,pt rex.XB xor retq rolb (bad) xchg mov (bad) leaveq int (bad) (bad) iret sub mov lods (bad) (bad) loope,pt xor sub in in add lods pop (bad) xor sbb mov cld fstpt cmc subl xchg popfq lods xchg enterq (bad) pop rex.RXB in push lods sbb jle shll and callq and lret and mov mov shr movabs mov fwait (bad) mov add lock cmp add lods rex.RXB outsl mov movabs cmp rex.RB rcrl (bad) sbb (bad) pop rex.X packuswb sub sub fiadd sahf movslq fidivrl (bad) retq stos (bad) mov push cmp shrl movabs and int jno adc (bad) stos (bad) fucomi retq adc mov stos jl adc xor cmp lods lret retq (bad) sbb (bad) sub (bad) loope adc not sahf rex.XB lods (bad) xor xchg pop rex.WXB jrcxz pushfq rex.X mov (bad) in xor in loopne mov ja add fcmovu lods push ss fs pop lods test lahf add lret (bad) rolb in adc mov rcrl icebp xor rex.RX and mov test add popfq fwait test push mov cmpsl movslq mov js (bad) mov lods insb sbb stos nop mov lods (bad) xchg add (bad) mov mov mov gs lock push adc movsl xlat jnp repnz test in xlat (bad) push icebp js je jne scas movb (bad) cld shll sub (bad) loopne xor repz fdivrs (bad) xchg mov or cmp push jnp lods sbb test sbb sbb repnz jl jbe jp sti mov push jb (bad) add rex.R xor pop lods cld retq mov rex.RX movsb scas rol xor sbb (bad) shrd repz rorb lret rorl push adc pop jge (bad) movabs popfq (bad) test xor (bad) lods (bad) (bad) and jmpq jae in mov cltd lock (bad) pushq or mov test lods mov xor in nop (bad) scas scas xchg add jne fsubrs jo xchg cmp test rorb in mov rex.RX movabs mov adc jnp (bad) cmpsb (bad) retq xchg nop hlt rex.W sahf and jb cld movabs loopne out cwtl mov out in (bad) iret sub fadds (bad) insb xchg xor (bad) (bad) jp mov pushq rex.WXB mov cmpsl js cmp (bad) push jle and pushq mov (bad) mov fwait pushq cmp lods leaveq xor (bad) jno pop ds int icebp scas rex.WR mov mov cltd out push outsb loop fstps movabs shrl sub scas pop rex.R jns lods (bad) incb rex.RXB jmpq sbb (bad) and xor faddl xchg jb rcrl clc adc jae lods jp (bad) cs (bad) and mov mov fisttpl lods pop in rex.WRX jnp cld lods xlat rcl int3 add jae adc stos lods pop sub int3 sbb pop stos lahf mov adc je lods lret rex.XB jle lods js xchg insl jae addr32 add mov scas popfq lods (bad) mov out lods int xor pop mov sarl mov cs (bad) xchg in test and (bad) test pop out pushq rex.WR rex.X movslq callq sbb sub rex.WRX lods vorps xchg (bad) lods sbb or mov (bad) mov push lret lods sub lret imul adc scas xchg in and push lods xchg lret (bad) adc (bad) lods mov js cltd movabs xchg adc push xchg jg pop (bad) lods iret pop shrl addl icebp scas (bad) lods pop (bad) rcrb and in or repnz adc xchg movslq jge leaveq (bad) (bad) fsub lods out cmp mov add mov ja push (bad) lods clc adc cld pop iret scas pop sub lods mov rex.WB (bad) rex.XB mov pop xor or sub (bad) mov scas push int (bad) sbb pushq rex.RXB fistpl pop add movabs vxorps pop imul fisttpl lods xor shll (bad) cmp push lods and push mov rex.WR rex.WX sti test test jge add fmull mov push and iret mov (bad) sub movsb xor lods jne xchg in (bad) cld push hlt lods or js xchg push rex.RB outsb (bad) movsl mov cltd (bad) in fstpt jmpq rex.RX mov leaveq sub (bad) rol cs add jbe pop or (bad) xor movabs and rex.WB movsl push cmpsb (bad) mov (bad) stos mov in sub sti add fild out retq rex.X mov jmpq movabs jo xchg mov mov (bad) rex.RX sub retq rex.WRXB in in out movslq rex.RX sub mov (bad) adc jrcxz leaveq mov push add rsqrtps (bad) jmpq lods xor sub jle (bad) mov or lods ja (bad) outsb jae lret (bad) shrl and xchg in pop lods fstpl rex.WRB lods (bad) mov jbe pop or in movslq lods out scas insl test stos ja cli mov mov repz cmp adc jp add rex.RB test push (bad) imul or adc jp callq scas or movsb (bad) (bad) rex.W lods xchg adc (bad) pushq lods sarl popfq lods je xor sbb clc lods movslq jmp cmp mov jno jo notb mov (bad) iret stos movabs (bad) jmp mov sar lods cmp mov stc (bad) xchg sub and movsb add push (bad) sbb cmpsl sahf movslq je xor lods rex.WRB rex lods sub rex.R imulb adc mov sub cmp sbb cmp sbb jrcxz (bad) test rex.RB jns xor sahf cmp lock mov shrb adc movabs mov movabs test ds test loop js and fimull pushfq loope out cmp in leaveq (bad) out jns insb outsb push loope pop jl ror js xchg mov fsubs add rclb loope cmpsl subb add test out lods or (bad) divb cmc push rex.WRXB add cmp (bad) movabs test shrl repz adc push jo sti orl mov xor movsl iret hlt sbb mov adc jnp (bad) and (bad) test rex.RXB xor mov loopne,pt add adc xchg mov callq rex.WRX (bad) sub (bad) (bad) xor xchg test (bad) lods enterq sbb mov sub xlat scas rex mov clc xchg (bad) lods out adc je sbb jns (bad) lods pushq xor retq in lods insl mov cmp rex.WRX sub sti sub pop (bad) jmpq icebp in sub (bad) pop mov (bad) (bad) (bad) lods lret (bad) vpsrad mov cmpsb fdivrp (bad) sahf adc (bad) mov lods sub xchg lods loop or (bad) rex.WR jp fld mov sub out ja adc scas sbb lods imul add rex.WRX rex.WRB mov fwait sbb rex.RB stos fistl scas lret (bad) imul (bad) mov movsb mov xchg and xor or mov int3 shrb (bad) movslq or lods movabs pop stc (bad) mov in xchg lods pop loopne cmp cmpsl sti lods cmp xchg in rex.RX in and movabs scas lret push fdivl cmp cmpl lods cs fadds outsl mov cld fstl sub mov pushq xor sbb lods lahf fstps repnz (bad) jmp fsubl imul mov (bad) xchg loopne jno mov (bad) sahf jmpq clc (bad) lods icebp add cld stos in jb fild jrcxz xchg sahf fiadd shrb (bad) scas xlat jp test imulb pushq (bad) out insb imul pop mov add mov clc jae mov (bad) mov sub cmp retq sub out sti ss rex.WRX rex.WX vmovaps and mov pop mov in ja mov fldt adc fsubr mov lock jle rex.W lods mov mov mov mov (bad) (bad) xor (bad) (bad) push sahf sub cmpsl lods xchg rex.RXB int3 movabs sub lods mov retq pop and xor mov jno stos add (bad) scas js xabort (bad) in (bad) fcmovnbe movsl cmp lods and cld or movabs xor cltd cmp mov incl lods fs sub push (bad) pop repz ffreep xor or mov sbb stos iret cmpsb jb mov push (bad) adc add rex.B pop test in sub (bad) sbb (bad) lods psubq pop (bad) std shrb imul pop insl jl (bad) lods and rex.WR repz (bad) lods stos xchg rex.WB sti (bad) in shll jrcxz pop scas lods jp js adc rorl and imul movslq pop retq rorb data16 mov and mov adc test (bad) cmpb loop xchg mov or rex.X test rex.WR rex.WRXB enterq add movabs and push lods jnp jl in jne mov rex.WRB push lods sub loopne sub pminub mov in mov rex.WR pop add lock mov (bad) (bad) xchg fs sbb mov (bad) lods mov cmp mov int data16 clc and scas (bad) movsb mov stos lods rex.RXB xorl adc in xor rcll out callq outsl ds insb xchg cmovb (bad) imul shr add retq sub stos repnz xchg movsl lods rex.R rex.RXB pushfq in and (bad) (bad) fisubr cmp insb imul sub jg (bad) sbb lock mov xor out movsb retq insl (bad) nop lods mov insl adc and pushq rex.RB cs js lock (bad) rex.X jns (bad) rex.W cmp out lods popfq push sbb lods cltd (bad) pop clc jmp lret outsb jle add movabs stos cmc je and lods loope out lods leaveq pop xor adc (bad) (bad) rex.WX rex.B ss or mov mov lods (bad) adc stc lods outsb add rex.XB mov adc sbb and and sub adc enterq lods mov popfq pop jb lods cmp repnz mov mov test lods rex.RB fldcw rex sub and jo xchg cltd jge push rex.RXB jb xchg (bad) lods (bad) pop add sbb ljmp mov cmp mov lret mov (bad) rex.WRB sahf mov xchg rex.XB cmp sahf scas data16 xor movsb rex.X add mov adcb movabs xrelease gs rex.XB pop retq sub push xor (bad) jrcxz add callq mov cmp pop movabs lret cmpsl cmpq cmp jp int3 movabs mov (bad) stos pop (bad) mov mov push (bad) test xchg sbb xor or cmp repnz xchg jo fdivs movslq (bad) ficoml xor out std (bad) mov lods adc (bad) out add pop xchg mov outsb xor cmpsl lods movabs or adc jmpq add ds pop pop sub in lods loop jrcxz xor out rclb stos mov in mov (bad) lock popfq lods (bad) fiaddl andb push rex.WRB rex.RXB out jl lret rex.W (bad) add shrw add jns and (bad) mov sbb rex.R cmp rex.B mov (bad) (bad) out mov mov retq mov rex.XB (bad) je mov or rex.WRX mov xor mov movabs lods (bad) mov adcl jb and callq lret sbb movups sbb xor lret addb add stos jno rex.WB imul (bad) lods (bad) sbb fmuls rex.R out lock xor jo mov scas (bad) xchg xor push imul fwait (bad) jno (bad) adc (bad) out nop (bad) nop xor sbb push and out mov lods (bad) jb jg xchg imul mov (bad) cmp sub rex.R int3 add lret addr32 cli rex.RX scas sbb lods mov rex.RB rex.WX rex.RXB jle mov (bad) mov rex.WRX jo rex.RX pushfq sub stos fwait in int3 xchg cld or cltd jns lods jl (bad) shlb movabs mov (bad) sub leaveq mov (bad) pushq in or xchg jmp rex cmp and movslq xchg rex.WX xor add sti lret sub cmpsb jb push lods stos or jbe clc adc mov lods ja (bad) retq rorl getsec cmp sbb sbb rex.RXB adc lret repz callq (bad) sbb pop in rex adc lods or pop in jno in test lret pop movsb cli cmp rex.XB push lods cmc xchg in mov insb lock mov jno mov cmp cmpsb mov int3 lahf fldt test (bad) fwait or push test decb lods cli fildl repz sub callq rex.WRXB shll jno sub and nop lods cltd imul movabs sbb push and popfq or sbb pushfq mov mov (bad) mov in int3 lods mov loope cli in stos (bad) insb xor mov add jmp xchg test std jmpq rex.WR rex fwait adc mov mov insb sarl jge add lods lret (bad) push (bad) (bad) add jmpq lods int fidivl iret imul jns jb in (bad) repnz (bad) jge (bad) pop ds pop popfq jnp pushq pop or (bad) jge lods xchg mov push or jmpq outsb pop pop nop lods mov ficompl sti rex.WX push lret xchg rex out xchg insl jg (bad) mov (bad) push movsb outsl cmc mov gs insb adc jne movabs std lods jae shlb xchg sbb nop or jnp xchg pop lods push xor cmpsl mov mov pop adc lods rex.WRXB sahf (bad) andl jrcxz shrl cmp test xor add fs mov stc add retq (bad) mov sbb mov scas sbb cmp repnz insb (bad) (bad) nop jp mov xchg test sbb mov movabs mov (bad) lods xchg jnp sbb lock jns movabs shr movabs xchg sti mov lea cmp callq movabs or rex.WRXB sub (bad) xor mov in divl test xchg or xor pop movabs mov imul loopne test add cli mov loopne lahf fldt rex.WR xlat lods pop (bad) mov callq movsb insl test mov pushq mov push mov or or xor repnz stos pop std lods callq add nop lods test (bad) (bad) mov (bad) hlt imul lret jl (bad) js rex.X xor cmc test scas cmp adc adc jl or scas out mov in ds push sbb retq mov imull mov test imulb (bad) enterq (bad) cmp (bad) jnp rcrl lods callq cmp in stc lods or icebp cmp jnp xorl jns int3 rex.W lods popq (bad) or imul cmp outsl sahf jp push outsb lods fwait mov or rex.RB pop insb (bad) pushfq sarl xor cmp (bad) jp shrl sub lods push add es (bad) cmp lods (bad) clc (bad) (bad) jge and pop rcll pop pushq rolb sub movsl movabs rex.R xor ja sbb nop push sti iret jmpq stos xor sub lods pushq mov mov cmpsl rex.WX cli addl test mov cltd mov cmp xor xchg adc (bad) pop lods cld data16 or lods lret pop cmp rex.WRB lock lods sub jmpq rex.XB retq jp movslq (bad) hlt mov sbb sbb scas (bad) lods cltd (bad) (bad) pop fs and cld fsubrs stos rex.X test cmp lods sbb sahf jnp lods push cltd rolb pop js jne decl cli sbb pushfq lods test addr32 mov loope (bad) or sbb (bad) retq and iret (bad) jle (bad) lods jrcxz xor (bad) adc lea pop jbe adc and leaveq mov icebp lods (bad) cld testl (bad) movabs (bad) adc lods rex rex.WRXB fcomps out lret std popfq lock subb mov xor pop add lods push rex.RXB in rex.WXB mov cmp mov rex.WR xor or (bad) pushq rcll mov lods notb insl js rcrl or callq fs xbeginq mov add cltd movabs repnz push pushfq sbbl xor adc rcll iret xlat add mov rex.WRB lods xchg rex.XB and cltd mov (bad) pop jbe or mov xor xchg xor rex.B imul cs cmp pop fs mov ja fstpt je data16 subl sbb add lods in (bad) test sahf sbb in test adc (bad) imul adc lods and mov fcompl xchg movabs (bad) jle lods push (bad) jge ss lock shr fucomp lods xchg push rex.RB rex.X jle rex.WR je (bad) push or fmuls int3 mov lods mov hlt loopne mov mov addr32 mov (bad) jae (bad) lahf (bad) mov lods ss std or gs mov insb lock jno lods mov (bad) lods mov scas sub lods out jno adc fs loopne mov adc lods mov rex.R out es cmpsl test mov rex.WX rex.X cmp sub mov in icebp add rex.WRX add (bad) xor cmpsb xorb adc mov (bad) insb cmp mov and mov sub rex.RXB mov (bad) test cs (bad) in lods insl in or test (bad) (bad) ja out pushfq adc mov (bad) callq fwait jne repz (bad) enterq (bad) movslq xor jl in cmc movabs in and jo sub cli fdiv (bad) sub addr32 in jo (bad) je mov adc pop cltd add movslq scas fmull sti test adc scas mov adc (bad) test mov fwait pushq pushq cmp sub fcoms in mov in loope mov in leaveq adc sahf mov mov add xor mov std mov rex.B push cli test cmp fucomip push or mov repnz (bad) xchg std cwtl retq addr32 push iret movsb rex.RX movabs (bad) xor lods or fdivrl (bad) insb movabs insl mov cmc pop mov in clc xchg cmp xchg mov mov leaveq xlat (bad) cmp lret xchg sti pushfq rex.B rex.X mov je sub imul popfq (bad) (bad) fist insb jl xor push stc pushq sbb rcrb lods mov int adc addr32 sbb or xchg lret movabs lea or (bad) xchg (bad) pop cmp (bad) stos nop jnp mov (bad) ja adc fwait in add rex.RXB push popfq test (bad) (bad) mov comiss and lock (bad) movabs push movslq xchg or movabs (bad) cmp lods mov pop cmp adcb ja mov repnz jp cmpsl xor movsb mov pop jmpq rex.WRB imul movabs stos movabs sbb (bad) cmp pop (bad) icebp push mov lods (bad) sbb lods test movabs sub push mov mov rex.RXB repz pushq roll sub lods repnz movsb fbld cli (bad) push nop jrcxz xchg jp popfq rex.WRXB sbb lods jmp rex.WR fwait mov sub movabs (bad) fstp sub adc ss sahf scas mov out (bad) je (bad) fiadd sbb rex.WR movslq in scas fisubl (bad) pop mov es or lods test lock pop push (bad) lods sbb mov sbb rex.WR rex.X rex.B movabs ja jrcxz lods (bad) push lret jne jbe or (bad) (bad) jae pushq sub rol pop mov test push (bad) int shrd leaveq shr hlt lods and (bad) imul cmpsl out push (bad) fildll leaveq movsb or rex.XB vscatterdpd rex.X movabs rex.WRX jmpq jg (bad) lods sahf cli pop rex.B fisubrl mov push fdivrl cmp xor movabs (bad) jl rex.W sti lods pop jg rex.RB test xor in (bad) rex.WRX xchg pop fsts adc lods out cld mov (bad) fistpl cmc insb cmp scas lods adc rex.WX addr32 test retq cmp (bad) imul sub pop retq lods jl movslq std js enterq lods in ficomp fildll lods push xlat (bad) add retq int3 lods push jno add jns addr32 stc or repz repnz cld lods (bad) retq leaveq push xchg pushq test in (bad) mov lods (bad) movabs gs push (bad) (bad) lods and sbb mov push lods rex.R lock test lret lods add adc ds lods fdivl movsl rex.X hlt lods test repnz je sub adc fisubrl mov adc xor mov icebp or lods xlat shrl lods jae xchg repz and insb cmc rex.WXB stos movslq add rex.WR lods mov out add and mov scas sub iret cmp je adc lods xlat in mov xor and xchg sahf lods rex.RXB fnstenv stos clc rex.WRB imul mov jle jnp std and sbb mov push rex.WRX sti sbb cmp retq popfq test stos imul sbb out mov add retq test adc ds imul fistpll imul fstl clc or int xchg pop (bad) nop test adc lods cmp pop fsubr ss lods (bad) (bad) outsl rex.WRXB jnp cmc rex (bad) lods xor cmp mov (bad) (bad) sub sahf (bad) (bad) popfq and loope jbe icebp lods shlb xor push cmpsb test stos xchg pop (bad) loope pushfq mov in (bad) movslq rex.R xchg test (bad) shlb pushq incl mov and push mov lea outsb xchg (bad) negb retq cmp mov fcoms rclb movabs pushq lods xchg cli adc lods push jbe outsl xchg test sub xor jno pop mov sbb xchg fdivrp (bad) lods in sbb rorl add movabs xor adc cmp test jae sbb rex.RX (bad) jne mov xor movslq (bad) add outsl adc int3 hlt movabs test (bad) adc loope jno xchg fidiv mov add lods mov jns mov mov adc cli loopne (bad) movabs xor scas movabs movabs insl (bad) and rex.WX in movabs mov stos push cmp movabs lods xchg stos mov pop lods int in or pushfq imul fsubrs push (bad) scas push rex.RB test (bad) xchg int3 and (bad) push lods jp lahf mov std (bad) lods mov xor cmp mov push cltd and mov fiadd retq push xchg stos (bad) cwtl or imul and mov lods lret cmp and xor push cwtl jnp repz lods pop (bad) pushq cli lods pop or cmp lods insl add add je lods rex.X sbb nop rex.WRXB insb sbb (bad) cltd lods stc jb add sahf rex.WRX (bad) lods pushq rex.WX lock and shll xlat mov xchg rex.XB rex.X movl pop xchg or add insb xchg (bad) in imul data16 jne pop jnp jmp pop lods jno xchg jae test sbb (bad) (bad) rex.WR enterq and jbe adc add (bad) (bad) mov ror subl (bad) mov cmc mov pop sbb fcomp lea scas (bad) insb movsb and push insl enterq or add lods or rex.WRX sbb push jbe or or nop (bad) add rex.RXB (bad) lret test and sahf jnp lods sti and xchg sbb push (bad) (bad) mov sub rex.W lods or popfq outsb sahf (bad) (bad) lods mov jrcxz (bad) jo mov mov sbb loop scas fldcw jno or xchg clc and sti repnz movsl ds lods jge (bad) pop enterq stos xor adc sti (bad) lods (bad) and rex.XB fcomps hlt (bad) fstp test xor mov lret pushfq add out lods stc jno lods adc lods in xor mov sbb mov loopne pop icebp (bad) test sub retq push rex.RX rex.WR jnp fistp lods retq cld (bad) mov testb adc ja mov callq movabs xchg adc imul test int or jns mov lods ss loope (bad) mov sbb test in callq lods pushq add pop adc lods jns shr (bad) insl sbb add lods stc mov test cwtl mov popfq xor sub ljmp idiv (bad) movabs add push mov sub push int cld push lods mov sub int3 (bad) pop cmp push movabs adc rex.W mov xor add or (bad) jo rex jb fmuls ds (bad) cmp add mov rex.B cmp mov or fucom xchg mov (bad) (bad) push repz mov callq push pop pop jmp fwait stos xchg addb (bad) jmpq lock mov imul shr mov pop xchg cmp xchg lods (bad) lock data16 movslq (bad) out (bad) add pop sti (bad) lods sub mov xchg clc sbb (bad) icebp sbb popfq mov xchg rex.XB andl lods xor jmpq add or (bad) andl (bad) add sub (bad) (bad) (bad) movsl lods and mov adc xchg iret xlat mov adc cltd out mov mov cs movslq push sbb (bad) mov xor test lahf (bad) push stos lods rex.RB jo sub scas (bad) movslq (bad) mov lock in ja (bad) not test shrl cmp sub fmuls imul outsl (bad) mov lret mov lea xchg in jg ficompl mov sbb xor sbb adc scas rolb or add stos test rex.B insb xchg ja lods cld adc mov lods cmpsb in test movabs (bad) icebp lods rex.WRXB (bad) (bad) es cmp retq cli scas xchg rcll pushq rex.R rex.WRXB rex.RXB rex xchg je sbb xchg push in jrcxz or jae loop (bad) and sub cmp test (bad) jrcxz jle lods xchg (bad) mov loope insb and pop (bad) jno jg rex.WRX rex.WXB leaveq mov (bad) sub (bad) in cld mov mov sub test lods rex.WB cmpsl adc sbb cmp stc mov (bad) mov insb pop mov (bad) ss rex.W rex.WRXB pop adc js (bad) sub scas (bad) (bad) jnp lods movb mov rex.WRXB imul sti movabs and xchg (bad) jge add mov repnz mov xchg mov leaveq test sahf rex.RXB xor jmp loop scas test (bad) adc rcr (bad) cmp push (bad) retq xchg mov rex.WX rex.WRX or mov xchg lods movb (bad) lods rol cwtl int mov xor pop lods hlt (bad) rex adc fldenv sbb push rex.W mov mov mov rex.RXB (bad) je in mov or rex.XB fs retq push (bad) mov insb insb movabs lods lods xchg pop (bad) add mov adc test xchg xor test cld lods (bad) xchg add fildl jbe pop cmp retw faddp sbb lock icebp (bad) pop rex.WRX lods cmp sahf xor xchg movabs cmp rex.X shl int3 rex.RXB adc (bad) repnz sbb lods sbb mov jl push pop pop iret (bad) jl lods imul xor enterq lods adc testl sub (bad) add popfq mov rex.WB repz mov fwait mov jbe pop lods test popfq cmpb xor (bad) or add lods clc lea retq (bad) pop (bad) repnz or mov leaveq (bad) push in lea lahf int3 xchg es pushq lea outsb lods and cld (bad) mov mull adc shrb outsb repnz insl sbb lods scas (bad) xor rex.WRXB adc fsubrl (bad) lret (bad) rex.RB lock (bad) cmpsl and in adc mov lods cltd (bad) mov jmpq mov lods ss int3 scas cmp xchg add hlt add lods out data16 lock push lods test adc pushq (bad) jnp lods cmp movabs (bad) rex.WRX fs cmp cmp sarl mov rorl lods lret (bad) retq leaveq movabs push jmp or rex.WR std pop lods mov and clc retq gs (bad) imul xor loopne push (bad) hlt lods lods mov jo rex.XB or sarb rorb repnz jo push xchg sub or pop sub fxch add fdivs pushfq xor loop cli movsl lods mov push (bad) or mov test popfq jg scas pextrw data16 fnstsw enterq mov sti sub (bad) jge pop lods mov push icebp mov or xchg (bad) or push mov xchg sub jl rex.WRB jae movabs cli mov fwait scas rex.WRXB test adc add (bad) xchg add rex.WB sarb lods addl sahf scas push (bad) jmpq sub out sub lods (bad) mov (bad) outsl (bad) (bad) (bad) lods jns jge movsb adc stos movsl mov in (bad) mov (bad) stos (bad) jb std rex.W fwait mov jae cmp lods xacquire out mov fisttpll lods adc dec xlat adc scas fnstcw xchg adc mov lods xor rex adc cmp lret out in mov (bad) insb sbb push adc lods out rorb mov cmp (bad) rex.WR sbb cmp lods cmp or lods and insb jnp mov lods ds or lods rex in xor fsubrl popfq sub xor sbb loope movabs sbb repz nop push sbb imul js mov push pop pop test enterq mov add mov sub lock mov cld rex.R lods mov (bad) shlb push add lret pop scas jrcxz (bad) cwtl xchg test pop (bad) push movsl sbb xlat or add loopne in sub sbb sbb xchg test rcll pop int3 cmpsb mov (bad) rex.RB jmpq cmp rex.RX rex.XB (bad) sub mov xor jp lods rex jrcxz xchg xor cmpsb or retq add pop lods and pop pop roll push pop (bad) movabs test stos fs (bad) (bad) rex.WX in pushfq loop stos int (bad) and int3 cli adc (bad) stos pop shrl lods iret cwtl adc or rex.WXB and cltd scas outsb jmp cmp xor mov rex.RX lods (bad) icebp push (bad) sub lods pop and rex.WR add leaveq test xchg mov jrcxz in adc xchg xchg repz (bad) mov cmpb clc lods (bad) in scas int (bad) cmp sahf (bad) nop data16 and lret jno clc lods test adc sbb in cwtl xchg mov (bad) repz xchg int add std add callq (bad) mov rex.WB ds (bad) neg and push and rcr (bad) or xchg (bad) xor int3 push scas jg pop (bad) mov xor adc mov (bad) mov in push in in pushq (bad) cltd mov mov xorl cs add (bad) (bad) and (bad) (bad) loope icebp adc sub (bad) xor pop xor (bad) adc rex mov imul rex.R (bad) adc (bad) pop or out movabs mov pushq out add outsb (bad) (bad) callq rex.WXB cmp (bad) enterq (bad) movsb mov add rex.WRXB push imul nop fwait push nop rorl mov lods or and lods sub xchg or xlat in (bad) rex.WB in (bad) xchg mov lods (bad) test scas lods xlat add rex jae jp in js fs and jae pop lods (bad) in rol cltd scas (bad) cltd adc rex.RXB mov jrcxz retq cmc fisubr xchg rex rex.B cmp sub subl (bad) xor mov lods movabs mov jno rex.WRXB shll clc pop cmp lods and sub and cmp cmpsb loope or jns mov shlb cmp jrcxz lahf mov fwait push sub rex push sub int3 add retq lods mov mov movabs rex.WR loope mov sub lcall lods pop pushq mov adc cmp rex.RXB enterq int or sub xor insb lea adc out push int3 (bad) out jbe jo in sub lods rex.WX sbb (bad) pushq sbb outsl cmp in and xlat cmp jg lods loop mov movabs mov movabs (bad) mov add cmp icebp cltd loopne outsl lods jns cmp mov push add repz rex.RXB data16 mov xor movabs sbb push sub cmpsl cwtl (bad) fsubrl jno (bad) add loopne movabs pushq cmc mov sub push enterq fwait retq rex.RXB movabs lods mov sub (bad) jmp mov rex.RX test (bad) sub add stc sub rex.WX fildll imul mov add and sub (bad) movabs jge rex.RX in stc xor mov sahf in in rex.RXB or xor xchg sahf cmp add jb shll xchg rex.B add rex.WRB (bad) (bad) retq (bad) stc rex.X sub jnp insb mov subl int3 lahf mov (bad) jno pushfq mov stos pop pushq imul pop lods rcrl cld add lods sub sbb hlt data16 loopne mov and mov out mov and mov cld add lods (bad) sbb mov pop xor lods xor sbb lock stos decl es add adc sub cmc xchg ja fisubrl push rex.RXB pop pop or pslld rex.WR and xor mov in (bad) movabs leaveq xor rex.WB (bad) jmp (bad) rex.RXB movabs enterq xor (bad) fst stos pushq fsubl mov pop push stos iret rex.RXB mov imul es out rex.WX jmpq push xor jnp mov sbb test pop scas adc (bad) (bad) lods movsl (bad) sbb lods repnz (bad) (bad) es xor and rex.X sbb mov rex.WRXB sub mov jp mov idivl or pushq sbb or lods jno jg and (bad) push out retq mov (bad) or or clc (bad) lods xchg sahf movsl fidiv add xor mov add (bad) mov retq or xchg sub rex.W (bad) (bad) loop lea rex.WRXB xor cltd movabs jg sbb mov rex.WB (bad) jrcxz loop push and push sub in push lods sub xchg fs and (bad) cmpsb in pop out lods jns retq (bad) ds mov imulb icebp xlat push lods xor lods or cwtl add add mov incl lods sub idivb sub xchg scas pushq rex.W shlb (bad) mov cmpsl xor jne jle lods in in xchg in lret in rcl xchg and add adcl (bad) fprem sti lods mov cmp movabs jmp test (bad) stc lods nop (bad) callq sub (bad) sub lods lahf sbb outsb movabs retq lret pushq setle shrb lods loop jmp xorl mov push mov mov sub xor jmp repnz add outsb fild rorl lret mov scas mov (bad) (bad) pop (bad) pushfq movsl rex.R callq stos (bad) je (bad) (bad) cltd fsubrl (bad) loopne sub movabs lods mov mov mov lahf shrb (bad) gs jge adcl xor lret xlat lods (bad) add ss fildll lods fdivr lock rex.WXB out lods roll rclb out mov (bad) pop ljmp (bad) jge jae lods repnz add iret hlt mov (bad) sbb fildll xchg pushfq (bad) jno pop lods movslq leaveq jg mov je (bad) lods xor lods adc pop rex.WXB lods (bad) andb rex.WRB fs lret push rex.R sar lods sub add (bad) xchg adc sub pop or push test stos push outsb mov (bad) mov out je shrb adc lods cmp and rex.RXB mov lods pushfw nop mov pop and fidivl jbe in in adc sahf lock push cld movabs adc cmp orl mov rex.W adc loopne movabs lods or mov (bad) sub or fidivrl rex.RXB rex.WRB xchg push lret outsl rex.WRX ficompl sub push cwtl (bad) rex.XB rex.XB rex.WRXB lods mov sub frstor jne mov mov xchg lods jb mov sbb ja (bad) (bad) xchg cmp add jmpq or scas push mov movabs (bad) out jl rolb rex.WR (bad) lods (bad) cmc cltd add cmp clc scas fidiv sub insb cmpsb movsb test addr32 jo or lods cmp in (bad) add stos (bad) jae rex popfq test sbb lret leaveq rex.WX callq mov jb cmp in mov rex.RXB (bad) xchg cld movsb add push rex.WRXB lods (bad) hlt insb lret movsb sbb movslq cmp lods repz rex.R bnd adc push cltd imul outsw pushfq mov jrcxz rex.X rex.R sub sub stos add je rex.WB xchg xor cmp lods rex.RX xor fidivr jge movslq sub movabs (bad) rex.RXB adc add sbb cld cmp xchg insl or (bad) (bad) nop (bad) adc (bad) stos jmp mov fidivr sbb xlat or ds lret and sub lods sahf add (bad) lods movabs imul movslq lods rex.XB adc jo or and (bad) push rex.RX jmp out (bad) (bad) rex.WX insl pushfq lahf (bad) jge mov rcl (bad) mov (bad) fld pushq sub roll (bad) pushq mov add (bad) lods fs scas idivl insl (bad) sbb (bad) (bad) callq lods sbb lahf movsb subb in lods and add lods jnp lret mov add mov out (bad) in rex.WRX rex.XB mov (bad) vpackssdw ficompl cld add or out jb cli (bad) leaveq cmp (bad) scas rex.RX mull mov rex.WRB mov loopne cmp insb fist sub or faddl icebp pop push lods xchg stc hlt add jb rex.XB imul or popfq lods (bad) subb and mov jb movabs (bad) rex.WRB rex.B jle int mov lock lahf test icebp scas jns,pn cmp roll push (bad) test or movlps (bad) movabs cmc loop xor (bad) xor (bad) lods movabs outsl rex.RXB (bad) sub enterq pop in rex.WRX add cwtl loope jmpq jp rep xchg or (bad) in or fwait cmp lods sbb rorb adc scas cmc rex.RB and lods add int (bad) out or in rex.R pop out lods scas mov test rex.WX in lods movslq xor xlat pushq (bad) push xchg (bad) jmpq push push lods rol jbe (bad) (bad) fldt je insl lods mov loope pushq add cmp mov fsubs stos stc (bad) jmpq or sti fnstsw cli (bad) (bad) clc rex.WRB outsb lods (bad) mov sbb movabs movsb je scas unpckhps mov xchg xchg jb lods shll testl sahf cld sub xchg leaveq es or nop mov repz (bad) cmp insl lods xor mov (bad) add stos lods xchg in sbb lods jne adc fisttpl sub xor jo (bad) jno adc fdivrs outsb or scas movabs out jle adc scas fcmovb lods adc mov jl jge push mov sti fldlg2 lods push movabs sbb es fstl retq cltd pushq xchg mov cmpsb xor pushq xor push lock jne subl (bad) add negl push (bad) hlt jns pushq xchg rex.WRB rex.WXB cs mov fwait xlat mov movsb loope rex.WX xchg imul test addr32 jg lods push repz (bad) (bad) adc retq and pop in mov addr32 (bad) sbb sti jae mov push lods pop pop rex.RX in addl pop adc (bad) fisubr (bad) mov rex.RB or jae xor and fild stos iret stc or lods int cmpsb in jmpq loopne imul sbb stos scas ja outsb or lods (bad) fldcw jb xchg leaveq (bad) cmpsl rex rex.WRX sbbl lods lea rcr rex.R lods add (bad) mov cmpsb rex.WRXB repz lods sub and out jrcxz std (bad) jnp lods xchg scas lahf mov rex.WXB mov lods adc add leaveq jbe jle iret sbb (bad) scas sahf rex.XB out fs loopne in fnstcw rex.WXB lods add popfq xor (bad) rex.WX (bad) mov and add subl rex.WRXB lods (bad) jb add movabs jo (bad) lods push (bad) xchg rex.X rex.WRXB lods cs sub shrb imul mov sub lods addw add (bad) mov xchg insb pop outsl movsb insb mov lods rex.X sub jb (bad) adc jg lods pop mov and xchg jge orl (bad) lret sbb xchg adc and jne xor cmpsl sub enterq jmp lods cwtl mov pushq jae stos xchg fs sub sub (bad) cmp (bad) lods adc std movabs lods and sbb lods (bad) stos sub (bad) (bad) cmp (bad) insb mov je xor iret adc outsl (bad) scas (bad) test cmp rex.WR mov adc lods out (bad) in lods in lods hlt sti push cmpsb jp sbb jb xor icebp (bad) lods movabs rex.RB in sbb scas mov (bad) gs jns outsl mov sar adc push std fwait mov sahf popfq mov rex.WXB movslq (bad) pushq mov lahf movabs imul in pop mov pushfq lods data16 adc rex.WB lret fwait (bad) sub mov leaveq mov je (bad) (bad) or scas jmpq scas movsb out lods mov ds movabs popfq (bad) mov addr32 cmp stos and mov rex.XB divb sub adc rex.WB jl (bad) cltd rex.WRX mov lock movsl scas idiv (bad) cmpsb xor sti mov movabs cmpsl popq push movabs mov cmpsb in mov mov lods repz adc cwtl rex.WRB stos cmp mov push or stos (bad) stc push mov in (bad) mov pop lods in add iret repnz movslq ja shrb add clc pop adc rex.WR movabs pushfq adc movsb lods mov addr32 xchg cmp stos mov out sbb mov rex.B rex.WRXB jmp rex.RX out rex.WB cmp fdivr shll rex.R sbb (bad) insl loopne mov xchg and test stc or jge test movsl (bad) rex.W adc repz insl (bad) fistl insb add xchg mov cli or adc lods add fcoml retq sub sbb jg (bad) cmpsb lods pop (bad) repz cwtl movslq in mov fnstsw jae in adcb lods jrcxz movabs sarl sbb add pop (bad) jns imull scas sbb (bad) xchg and mov mov lods rex.WB out sarb pop cli stos ds scas rex.R fildl lret (bad) sbb rex.RX rex.WXB add pop movabs (bad) sahf fdivrs test lods leaveq sub movabs ds xlat jg adc pop cmpsl (bad) jmp fs out rex.RXB rex.XB (bad) mov (bad) mov add pop test (bad) sbb in in (bad) test in movabs fwait jnp js xchg (bad) sbb mov xor jg mov rcrl mov sub int3 iret shlb and lods mov cmp cmpsb (bad) push (bad) adc test rex.R lods lret cmp adc callq movabs rex xchg in mov (bad) jae xor in fsubrs mov mov or pushq fcomps out subb xor imulb fwait callq push xor xchg (bad) lods add in sbb mov add jo mov rex.X sbb mov xor movsl test lods rex.WB outsl or lods mov (bad) movabs or jo mov rex rex.WR (bad) pop test test fiadd sbb push (bad) adcl cmp or incl add test (bad) rex.R rcrl stos add (bad) stos cltd (bad) lret sbb int3 cwtl rex.RX test lock fimul movabs jg xor add nop in adc stc fwait adc fs pushq mov cmp loopne adc mov adc cli fldcw retq xor pop movabs pop mov imul insb in sbb stos lods stc (bad) or clc (bad) cld jb imul (bad) mov sub decb rex (bad) push add add (bad) in ja fsubrp callq adc mov fcoml js sub shrb (bad) or rex int3 js pushfq in sbb cld in or stos pop fisubr (bad) pushq (bad) adc stos (bad) testl callq sbb mov mov jb,pt sub cwtl jge sbb cli fbstp fcoms adc (bad) cmovbe insl (bad) in sbb add rex.X mov js mov add pop mov adc rex.XB mov ds add test in (bad) cmp std test rex.WX xor hlt ficom rex.WRXB (bad) pop sbb imul sahf subl fildll (bad) (bad) mov lods sbb mov or jl in movslq sub mov movabs decb retq fwait (bad) mov in (bad) mov lods (bad) cld pop mov and out or push mov adc (bad) sub pop fmuls rex.WR xor push pop lods lock (bad) callq iret rex.X jl (bad) pop pop push addr32 test sub rclb jne rex.R decb imul popfq movabs fildll sbb rex.XB sarl jge mov mov in and fldl xchg rex.RXB (bad) cmpsb mov adc pop jge jb imul mov mov (bad) lods leaveq add rex.R ffree mov xchg and fs in (bad) lea mov mov sub in or pushq rex.WR cltd cld cs sbb scas outsb push sub std imul movsl cli sbb rcrl lods stos loope (bad) pop mov mov rex repnz mov cmp (bad) mov jg lods (bad) clc cmp pop sbb xor fwait js fsubl (bad) sti jrcxz loope out mov rex.WXB mov addr32 push repz adc rex.WXB movsb test pop rex.RXB mov lods cmp sub lods movsb leaveq and mov (bad) (bad) mov jmpq mov mov mov imul pushq rex.WXB insb pushq mov scas jge fwait test fmul sbb (bad) sub pop mov sarb lods ds rex.WRB jp lock pop movabs and ror lea outsl (bad) jne add mov cmpsl loopne push fwait addb cmpsb movabs mov fiadd stos rex.WXB xchg callq movabs jno mov rex.RXB imul jne fcmovnbe sbb imul sbb fwait mov int adc sub retq cmc (bad) outsl push or add lods xor or lods (bad) pop retq (bad) and jrcxz lret rclb and sbb sbb sbb rex.WB ds shrb (bad) cmp mov mov (bad) xlat rex.WRB pop pushq cmp mov fsubrl movabs or outsl movabs faddl push movb cmp jae lods in mov icebp gs mov loop lods (bad) stc rex.WRXB and (bad) or pop adc std lods jrcxz add push sub xor movsl pop xchg jbe push mov pop jb in out out (bad) scas (bad) test (bad) icebp lods imul repnz mov rex.WB stos jmp mov sub psubb xchg in xchg outsb add fstpl jl cltd movabs loope cmp lods xchg (bad) pushq in scas leaveq sbb in icebp stc scas cmp enterq mov jmpq (bad) movabs xchg sub lahf mov in mov jo mov pushfq xchg test add rex.WB xor pop adc adc idivb mov lods stos loope and adc sub (bad) fistpll jnp movabs ja rex.WRXB retq movslq sub loope movabs scas rex.RB mov rex.RXB cmc cwtl and jne (bad) sahf mov outsb jns sub mov out rex.WB mov bnd fcoms sahf outsb in test jmpq vandpd lret scas fcmovb or and jne push sbb (bad) scas out (bad) pop (bad) jns insb and sbb (bad) rex.WR cmc lods mov (bad) test or out in mov (bad) popfq repz sub xor repnz movsb test jne add jl neg lods retq push (bad) enterq or in jl lahf je (bad) lods mov rex.WXB sub jae push lods rex.B rcrl imul and scas xchg int3 ja cltd out lods (bad) loopne jmp (bad) movabs sbb push add movsb movabs mov adc lods out push or lods repz sti mov lods fdivp xchg xchg subb jl rex.WXB lods adc imul rex.WX rex.RX cmc int3 pushq push hlt fldl retq nop cmp test rex.WRX test lret lods mov in jnp xor rex.WRB lods and pushq xchg movabs mov movabs sbb or test lret retq (bad) add lods push or cwtl icebp cmp mov adcl mov (bad) outsl cmp scas sti cwtl out in (bad) hlt movabs xor (bad) xor mov sub or rex.WRB adc jbe mov loopne pop movabs (bad) (bad) mov cltd pop lods jbe fmul outsb or sub (bad) out fildl pushq jnp in lods (bad) data16 sbb mov sub in xchg and in retq sub sbb outsl je repz jae (bad) scas mov mov rex.WRX push jns lods rcrl or (bad) rex.WR scas nop sar pop movsl cld add stos lods (bad) mov add jg callq mov (bad) and (bad) mov sbb (bad) sahf lods cmpsl xor cmp push repnz rex.WRXB sbb lods nopl push sahf movsl pop std lods fnstsw or rex.WRX scas repnz sbb addr32 ja cld xor lods jge xchg pop stos mov out test cmpsl ror sbb fistpll in jle pop lods jge mov test mov lods mov mull rex.R clc and cmp jle (bad) (bad) push cmp jne fcompl rex.R or lods (bad) xor pop callq lods jmp sbb mov cmp loopne mov es imul lods (bad) int3 fisubr (bad) adc lods clc fisubl (bad) sbb lods rex.WRX rex.WR jg fcmovne movabs stos fs and retq retq sub mov and xor cmp lods test (bad) push cmp pop out insl xchg jnp jp xchg enterq and (bad) xlat stos lock jae rex.RB or int3 loopne cmp stc add cmp imul lods pop jno fisubl push leaveq jnp test and push imul fsubl insl enterq lods mov (bad) cmpsb xchg xchg jle (bad) rex.WB sub xchg xchg pop je add scas in out std (bad) lods sub lret lock xchg callq fdivr test lods mov or (bad) xor (bad) outsb add push (bad) add mov lods imul pop xor add jbe adc insl jae jne (bad) xchg jg sbb or rex.RB rex.X je ficom mov imul mov cmp (bad) xorl rex.R mov imul clc add sahf rex.WRXB adc (bad) (bad) (bad) xor callw lods cs push cld lods jae cltd (bad) (bad) fincstp sub cmpsb rex.XB lods pop (bad) cmc lock mov lods callq jg xchg pop mov mov (bad) (bad) or xor cli adc insb mov lret xchg outsl out xchg lods stos sub movsl jne rex.X js lods jge out mov (bad) cmc data16 mov (bad) xor xchg cmpsl or movslq (bad) mov lods add movabs imul mov rex.WR cmpsb loope std pop or rex.X js lahf lret jns (bad) outsl push hlt retq sub ds lods xlat mov (bad) lods pushfq cmc loopne adc insl stos rex rex.W iret jno cmpsl xorl sbb movabs adc rex.WRX or (bad) lods stc data16 adc (bad) lods outsl xor sub addl retq jo pop lods rex or nop mov sbbl (bad) faddl mov add lods rex.WB popq out cltd outsl lods jo (bad) fistl int lods ds cmpsl mov jnp xor callq jbe cmp sahf (bad) pop out (bad) and lods mov mov and (bad) (bad) mov xchg rex.XB sub xchg (bad) rex.X mov mov mov in xchg push stc test (bad) leaveq jne pushfq movabs sub adc testb ror js and pop push mov push rex.XB push movabs addl mov xor (bad) sbb scas popfq push or shll sbb jmpq (bad) pushfq sub jb push out cmpsl or or (bad) add cli adc mov mov out mov add cli out adc xor int mov stos pushfq and imul rex.RB ds mov incl movabs sti (bad) sbb mov (bad) sub stos cmp mov mov xchg movslq insb mov out or movabs mov cld or shr lods or fidivr mov xchg in stos xor lods (bad) loop mov rex.WX js (bad) ss jrcxz mov add lods ror mov (bad) mov cs movabs int3 callq xchg stos cs sub jmpq pop movabs int3 xor xchg cmp rcl add in in lods loope pop insl cmp test (bad) jge rex add sahf lods int3 xchg and movabs add rex.WX (bad) adc jo pushq std lods adc xor movabs (bad) (bad) push enterq movsl lods addr32 (bad) jge xchg lock (bad) mov sub rex.WXB and mov pushfq rcll push imull mov pop fs sbb (bad) std mov and pushq out dec movabs sub jle add retq (bad) fs (bad) pop lods out sbb rex.WX movslq insl mov lods mov icebp enterq outsb lods pop cmp rex.WXB mov sbb or add outsb lods lahf jl jg ja pop lods adc jnp xor fs (bad) fwait mov sub insl lods pushfq rcrb jno adc lods cwtl js test stos shll (bad) pop cld out cmp es rex.WB lods mov imul (bad) (bad) movslq rex.WX xchg add mov add rex.WB lods (bad) pushfq and rex.W mov rex.WXB mov outsb jl add imul jp sub test xchg orl (bad) lods push pushq clc sbb lods push fldcw je sub fcmovnu lahf (bad) or xchg lods push cmp push (bad) shrb jle mov xchg rex.WRX popfq stos sub push imul (bad) or outsl or lock (bad) jae mov mov mov (bad) (bad) sub rex.WB lods ss stc cltd jns mov lahf pushq in lret mov adcb test push jnp sub stos lret mov xchg scas retq rex.X movabs cwtl lret cwtl shll mov cmp xchg in (bad) (bad) fsubrs jmpq testb lods (bad) jns jrcxz (bad) outsl xchg jne and movabs pushfq xchg lods jmp and (bad) icebp ficompl (bad) lea testl (bad) stc mov pushq gs sub pop sub callq push clc add lods (bad) je or push es (bad) (bad) shrb insl fstpl mov out hlt int testl xchg mov (bad) mov adc mov (bad) jle (bad) fwait pop hlt mov movabs ljmp rex.WB sti mov jb push or mov fmull xchg and adc push pop lret fnop jl cli adc scas sti push xor push in or cmp xor xchg add jge movabs testb (bad) mov xlat lods mov xchg mov lock clc jle (bad) hlt retq lods xor (bad) mov (bad) pop mov cld pop (bad) movsb and mov (bad) fnstcw lods sbb movabs pop (bad) jae fimul rex.WB shrq mov adc rex.WR addr32 sub jmp sbb pushfq xor adc mov repz mov xor fs xlat fdivl cmp lods mov lret lods mov mov scas loope stos test jrcxz (bad) mov (bad) and rex.X fisttp xor jl and rex.WRB mov mov cs std (bad) iret imul rex.RXB rex.B lods pop movabs shrb lods (bad) js (bad) jo pop xor sub lods repz lret (bad) lahf or push (bad) or fldt xlat lods push lods test adc (bad) mov (bad) lods leaveq rex fs mov fs mov insb fucom loope rcrb rdpmc mov repz mov (bad) (bad) enterq pop insb push jmp and movsb repnz jns lods push imulb (bad) push fmul lods stos and pop cmpl movsl or (bad) stc lods xor adc pop mov lods mov or leaveq lods out movabs push movabs pop lods outsb or retq mov lods hlt leaveq scas (bad) movabs ds lods lock mov xchg xchg in lods jmpq xchg fldt je xor jbe add nop data16 (bad) callq fucomip mov fadd (bad) pop cmc lods cmp xchg mov (bad) lods rex.WRB pushq rex.X stos sub adc and jg lods rex.WB (bad) lods jge test lods mov (bad) (bad) pushfq dec mov sbb in rex.X movl lahf jns rex.RB rorl (bad) rex.WRXB xor mov sbbl add int mov out stos xchg (bad) xor jmpq lods sbb loope (bad) cmp test sbb movabs push xchg xor insb push cltd sub iret movabs (bad) mov or mov leaveq xor outsb (bad) rex.WR mov jbe (bad) ss lods rex.B adc and in (bad) sbb (bad) push insb and lock rcrl jl jg (bad) pop jge rex.B rex fwait mov or out movsb sub rex.WX rex.WR cld std out sub lock mov mov (bad) pop or sub hlt mov sbb in shr in lods sbb fiaddl scas xor jb mov in jo (bad) and xor (bad) rex.WRX rex.X (bad) in retq or and cld loope xchg and mov xor sahf jns pushfq test imul pushfq (bad) retq out lods (bad) (bad) mov mov or xorb (bad) and mov clc or fist cld (bad) lods popfq push (bad) jmpq scas push (bad) rex.WX cmp jae mov jmp (bad) rex.XB mov (bad) adcl rex.RX test jg out imul adc push sub hlt rex.XB jno push sub test je outsw adc or insb incl push je popfq cmp mov test std adc sub (bad) jge fnstsw out rex.WX lods cld cs or fs adc movabs subl add (bad) scas rex.WRX (bad) adc and (bad) xor cmp mov pop pop rex.WR rex.WX or mov je sub and and lods out rex.WRX mov jno sub fs pushq sub mov rex.WR sahf scas (bad) sub lods mov or imulb lods rex.WR rex.RX jae lahf rex mov pushfq add sub xchg (bad) jns add test (bad) (bad) push sub (bad) mov imul std ja movslq in pop pushq (bad) sbb lret (bad) scas sub jrcxz test jg add in (bad) shrl mov cmp adc scas cmp cs lret shrl jg mov es mov sub xor push movsb mov lods movb cltd adc stos popfq clc sbb movsb scas js lods or rex.R rex.B add sub (bad) mov rex.X xchg cmp in (bad) or shll lods lods mov outsl hlt and icebp andl jle add cmp jmpq adc std cmp shll mov adc insb fsubrl jmpq (bad) mov repz lods (bad) addr32 mov lods sahf adcl mov imul xchg mov lods xlat movsb mov xchg imul lods (bad) mov rex.WX retq in mov (bad) ss xor and lods (bad) rex.WRX mov or jl rex.R or lods or add (bad) adc add rex.X repz callq xor leaveq jae add int3 test mov push test mov test adc in lret data16 retq retq xor pop pop (bad) scas and cmpb mov mov callq jmpq in rex.WR add mov adc add sub add rol in rex.WXB sub roll lods sbb test mov leaveq jno rex.RX or rex or scas pop test roll sub hlt sti xor and sbb xchg scas ss hlt std (bad) (bad) lods loopne callq rex.RB rex.XB outsb lods cmpl mov xor push (bad) icebp mov (bad) and sbb movabs sbb push lods jmpq rcrb int3 rex.B out movsb adc int3 (bad) jg lods push push cs jne jp (bad) callq mov adc add cli loope mov rex.WX xchg push add (bad) jbe mov and out je pushq fwait or or pop decb notb fildl lret jnp (bad) stos cmpsl jg xchg addr32 leaveq xchg enterq sbb or (bad) and xchg sahf test jo lods movsb (bad) xor lret out jns xor fwait mov pushq xor add (bad) sti pop repz pop cmpsl lods (bad) stos jnp rcl adc in cmc mov jae fild retq and lret leaveq stos push shrb or cwtl push jno adc pop add mov vpshufhw mov leaveq mov xor cmpsl out mov pop cs js in ss and callq mov rex.WR rex.X fisubrl rex.WRB add movabs (bad) mov out lret (bad) out xlat mov jl outsb sub cmp cmpsb cmp rex.WXB rex.WX sahf (bad) xor and insl pushq mov jae jns or adc movsb jne xor in (bad) cmpsl test shrb cltd (bad) nop lods out jnp outsl movabs sti movabs movabs sbb je push lods add jno or mov rex.WRXB lods lss stos pushq outsl lods jbe test mov sub lods std retq scas push (bad) mov xchg (bad) sbb fadd rex.RXB popfq jb stc scas andl pop iret (bad) (bad) rex.WRX btr sahf jmp or sbb scas fdivs loopne mov outsb cmp (bad) add lods loop movsb rcll xchg push mov imul movsb mov adc sbb add rex.RXB xchg insl xchg mov jne movabs rex.RB jg mov pop xlat lods cmpsb adc insb jne sub cs fiadd jbe cmp (bad) stos lods jp sbb rex.WX lods sub stos lret (bad) xchg mov rex.WXB adc (bad) js or (bad) cli repz (bad) or cld lock xchg adc jo cmc fwait mov outsl retq (bad) jmp std rex.WRX or movabs pop lods rex.WRB jp test sbb xchg int3 imul in pop (bad) sub mov (bad) pcmpeqd and addl mov jmpq ja (bad) sbb jl scas fbstp rex.RXB repnz mov retq cmp xor lods clc ja pop movslq loopne lods rex.X rex.WXB jo sbb (bad) rorl jnp pop (bad) push outsl (bad) (bad) in addr32 pop cmp lods (bad) out (bad) rorb mov loope jno (bad) mov adc pop sbb push imul mov callq add sub lods fdiv (bad) fbstp mov mov jns (bad) (bad) iret pop in mov xor rex.WXB (bad) (bad) sbb insl std xchg pop mov int adc pop mov insb sub movabs fucomp lods xor sets xchg js imull stos mov pop (bad) xor jne (bad) movsb mov xchg test fnop xchg rex.RX imul cmp lods (bad) movabs lods and mov add movsb sahf cli fs lods iret cmp outsb movabs (bad) lret (bad) lods imul in (bad) sti fldcw pop (bad) pop fdivs fisubrl pushq sbb (bad) jg enterq cwtl and lods adc out out lods (bad) (bad) lods sbbl in mov retq sub adc xchg shrb (bad) rex.RB cmp enterq adc (bad) mov and scas mov out (bad) sbb cli in imul loope cli mov lea mov or scas out sub in pushq pop (bad) cwtl and mov sti fmuls jno clc (bad) rex.RB lahf scas xlat (bad) push scas xor leaveq fwait pmaxsw adc rex.RX xchg scas mov and movl (bad) jne cmc je pop cmp loope xor std (bad) mov or in cltd jno add imul mov mov and insl lods fisttpll (bad) mov sub cmp jo push mov mov movsl insb jle jg movabs (bad) rex.WR rex.WXB or lods xorb cmp sub rcr sub lahf xchg lahf (bad) mov scas push xor mov stos (bad) cmp fs xchg (bad) repnz (bad) cwtl and rex.B rex.W sbb mov addl lods rorl mov fsts mov mov movsb in int3 pop jns (bad) out cmc rex.XB adc xchg retq add in retq and sub (bad) (bad) lods xor rex.RX rex lods repz out and sahf shrb lods fistp (bad) cmp (bad) shlb movsl rex.WRXB repnz xchg insb out (bad) and fnstcw cmp movsl enterq lods (bad) mov xchg cmp lods repnz mov retq rex.WRX lods xchg gs (bad) fdivrs cs mov repnz (bad) (bad) add cmovns movb pop or (bad) cmp pushq and in mov (bad) rex.R (bad) popfq xor leaveq enterq (bad) stc adc stos stos xchg out rex.X rex.WX loope negb jno icebp rex.RB out (bad) or rex.WRXB (bad) pushq ds out lret movabs insl rex.XB (bad) sub cmp or pop or cmp mov xchg (bad) in lods es (bad) (bad) mov (bad) in outsl cmp fnsave jbe jl shr lods xor lea or hlt mov mull cwtl (bad) push pushq rex.RB rcr sub in ja lods xchg stos adc xchg or jbe imul mov in leaveq (bad) sub in fildll imul mov jge jp mov adc imul mov mov rolb cld mov fistp in mov (bad) sub sbb movsb (bad) and (bad) pop lods cmpsb (bad) gs out or (bad) (bad) retq int3 in lods retq jbe sbb (bad) rol mov lods sub sarb cmp lods lret test xor stc cmp repnz iret (bad) jno pop (bad) loop rcll jrcxz (bad) sarb rcr sbb enterq mov lods pushfq jmpq jp stos (bad) nop xor rex.W repnz push rex.WR fwait ds lods (bad) and retq iret nop (bad) xchg mov push (bad) lock in in rex.W (bad) or lret (bad) sub ja sub push leaveq rex.RXB lods xchg jle rex.WRB pop adc rex sub or stc loop jns (bad) scas (bad) lods test jae retq stos fcomi or push mov movabs rex.WB testl (bad) fdivrs xor lods mov jo (bad) stc cli jo lods lods cmc jb add shrb (bad) fucomp test mov ss (bad) mov jbe and stc (bad) pop mov test (bad) out xchg repz mov repnz fisttp fdivl (bad) cmc push in pop fdivr (bad) lods (bad) cltd mov pushq adc outsl cld fidivrl leaveq add lods cmp out lods cmp rex.XB jrcxz imul stos sub fldcw out scas movslq stc lods or sahf (bad) lock push lods pushfq leaveq and add or jmpq nop mov hlt adc (bad) lods rex.WB clc imul sbb (bad) popfq mov adc rex.XB (bad) fwait addr32 xor and adc (bad) mov addr32 jo in rex.XB ja mov cmp fcmovnb imul cmp in (bad) rex.WRX (bad) (bad) rex.WXB sbb movabs fwait stos negl push jmp sub or or lods jne ss imul rex.WR fmull mov (bad) (bad) js (bad) (bad) push (bad) sub icebp add xor jns add adc mov jnp mov and lret movabs jp cmpl sub (bad) and stos xchg out insb loop mov adc test rcl mov jne (bad) add push sub (bad) cwtl or in repnz xor sub add lods iret rex.XB fildll or test xor mov pop fcmovnu xchg sub cwtl lods pop rex.RXB stos out jb lods js add (bad) clc leaveq cld (bad) lods mov and rex.B lods mov rex.WRXB rex in lahf sbb xchg mov shlb repz (bad) lods rex.RX xchg pop stos jae (bad) jb lods mov sti lods lret pushq out mov ds sbb rex.RB jnp ficoml outsl pop lods rex.RB shlw mov and retq or (bad) rex.WRX addb xor fldcw cmp mov (bad) stc lods xchg (bad) adc lods xchg rorb lods adc cmp (bad) mov (bad) pop lods loope jp movabs pushq sbb cmp mov xor lods (bad) or and (bad) hlt jbe imul adc cli lods rex.RXB lahf rex.X (bad) (bad) cmp rex.RX pushq rex.WRB rex.WRX and (bad) sbb nop stos push sbb add mov (bad) mov js rex repnz (bad) lahf in rex.WRB mov jno popfq fwait lods pushq jae sarb lods mov xchg in (bad) out outsl cltd jg and sbb cmp and lods (bad) rorl rex.X lret or cmp adc fcoml (bad) stos xchg xchg lods hlt cld out and pushfq xor fmuls outsb test gs mov mov int adc lods mov incb ror lods cli lods enterq rex.RX retq rex.WR and stos lahf mov (bad) movsb out rex.WRXB enterq cmc lea rclb lods movabs adc mov mov (bad) mov movslq int3 pop out rol sub push imul (bad) rex.XB rex.XB stos cli pop add pushfq imul mov stos lock rorl rex.WXB lods and insb (bad) sub (bad) nop jg mov mov lods jne scas enterq callq sub xchg (bad) pop outsb lods nop mov (bad) (bad) loope mov xor sub or rex.RB repnz jg test sti jp (bad) subl js sar adc xlat sub and xchg add adcb stc movsb stos rex.RB push movsl mov shrb lods icebp or (bad) mov mov loope rex.WX movabs mov adc add loop (bad) pushfq notb out lods jmpq mov shrb movabs push ljmp sbb scas imul jl lods push (bad) loop cmpl adc hlt (bad) (bad) (bad) test mov ds mov fdivs lods cmp lods mov or cmpsb jge rolb scas sub mov mov or rex lods xchg pushfq (bad) mov rex.WRB fisubrl mov lods leaveq adc add mov xchg mov mov or pushfq adc mov rex.WRB jb rex.WR mov sub addr32 (bad) sub or out cmp mov lods cmpsl (bad) (bad) mov xlat mov and enterq sub lods lret fcmovu add pop (bad) imul insb movsl je rex lods outsb (bad) mov pushq or retq sbb jl in (bad) int adc lods (bad) jnp fdivrs lods jmp xor rol cmpb jmpq jb loopne and adc jge scas lods movabs xor adc lods jnp (bad) out jl (bad) and in (bad) lods xor sbb xor movabs mov scas jrcxz xchg in hlt mov lret adc lcall pop rex.WRX movabs jbe xchg popfq cmpsb mov movsb test lods (bad) shr gs loopne (bad) scas fmull mov int3 or loope repnz lea movslq mov rex.X mov sbb rex.B and jg movabs int3 sub lods outsb and stc pop scas leaveq cltd mov mov add jge scas ss rex.X lods pop pop in cmp rex.WXB lods xchg cld (bad) repz in sbb mov mov fiaddl rex.RX adc sub lods (bad) (bad) sbb rex.XB (bad) (bad) stos in mov lods (bad) pop jle xor (bad) lods rorl pop sub rex scas xchg pop lods cwtl jp fidivr movabs xlat outsb lcall lods (bad) retq mull cmp lods movsb push xor cld retq lods xor pushq jle lods jbe gs xor fildll loop (bad) fwait rex.X (bad) xor ds rex.WRX mov cmp jmp push lods xor sub rex mov xchg shll or stos rorb jnp rex.WRB mov mov xlat rolb in cli test cmp rex.WX adc je movabs or lods or cltd xchg pushq retq movabs test lods sti mov vpshufd adc lods mov rex.RXB xchg mov (bad) loope movabs movabs jno sbb movslq pop stos rex.WR jg mov sub (bad) or lahf insb mov mov adc mov lods scas outsb sub (bad) cltd std insl stc insb test mov insb pushq shrb movabs and (bad) fs and popfq fisubr pushfq retq lods jg movsb adc addr32 rcll sub mov insl lods gs mov add push scas mov je lret rex.XB data16 std (bad) mov sbb jne test sub mov cmpsl adc (bad) (bad) sub sub (bad) (bad) cvtps2pi retq scas cli mov fildll xor lods mov subl shll stos test movsb test lods movslq fstl lods sbb (bad) stc pop rex.WB rex.W sbbl (bad) mov jbe xchg in lret sub (bad) (bad) xchg jge or shrb clc loopne mov pushfq cmpb adc adc iret mov mov retq fidivrl outsl imul lods or (bad) sbb mov rex.RB ss cmp loop mov and lret lods lock xchg mov xchg lods out xchg xchg jae sub and lods pushq rex.WXB lods mov and add repnz es roll jg lods push mov adc add hlt push sub mov add mov xchg movabs (bad) xchg in fcoml lods cmpsb (bad) iret out rex.WR retq push insb lods add push mov pop retq addl lods xchg jrcxz cmp lods ds callq scas fwait movabs push out xor (bad) (bad) test lods callq pop or stos scas xchg fstpl outsl lods add cmpsl out (bad) outsb in ficom mov jmpq xchg (bad) hlt lea out lods rex.RX movabs pushfq xchg loop (bad) fwait cmc jne imul pop (bad) stc mov xor test xchg ficoml mov or loopne cmp pop andb rex.WRB adc insl xchg xor rex movabs fucomi rex.WRB (bad) pop xor (bad) fist jo sub jmpq rex.WXB sbb rex.RX add and (bad) (bad) and lods pop cltd mov jp repnz jo or loope outsb out lods flds retq mov xor push rex.RX mov outsl lods icebp or pop rex.RXB pop lods stc (bad) mov mov mov sub fstpt (bad) scas fwait sub (bad) cmpsl (bad) or and lods cmc xchg (bad) xchg in and test lock jle incl lahf xor (bad) lods test pushq movslq mov (bad) mov mov nop int loope jb adc lods retq rex.WRXB adcb (bad) sar sub jge cmc movabs icebp (bad) mov int3 test lods adc vpunpckhqdq outsl mov pop xchg mov pushq lods (bad) jo or lods mov xchg cld adc mov (bad) xor lahf lods (bad) cmpb lods (bad) outsl enterq add out (bad) addr32 lods (bad) sub pushq (bad) (bad) out adc sub jne movsl mov and push lods ss fisttpl fisub fdivrs rex.WRXB rolb lret (bad) rcrb mov xchg or lods jne clc iret xor sub (bad) mov or (bad) sbb lods rorl and leaveq mov pop rex.RX (bad) xor and (bad) rex.WX rex.WRXB fldcw repnz (bad) shll jrcxz or in in mov sub pop in js int3 lods jo push out mov (bad) xchg js stos sbb xchg (bad) enterq lods mov movabs in cmp and shr push movslq sbb ja int sub callq (bad) xchg adc (bad) sti test xchg movabs jle sub sbb pop push mov rex.WXB (bad) fisub cli leaveq sbb rcrl int3 je (bad) movabs (bad) pop mov xchg test or xchg pop out sar and scas xchg (bad) incl stc push movabs (bad) lods or hlt mov (bad) adc xor movsl jge mov fisttpll mov popfq pop (bad) mov movsl pop ror sar xor pushq rex.WRXB movsl rorl mov and mov jbe (bad) je mov or mov (bad) retq lahf fwait rex.X push cmp mov jbe rex.WRB mov (bad) sbb fs mov scas rex.W cmpsb push hlt rex.WB jnp movsl pushq movabs adc add rex.B test rex.XB retq imul in jl out lods mov adcl loop or rex.WR push xchg (bad) mov xor xchg movabs outsb mov sbb mov cmp rex.W jnp and orps adc sub incb sub jg loop add (bad) mov add shlb cwtl rcrb xor mov subl add mov (bad) jb sub (bad) or lahf mov movsl adc (bad) pop (bad) sbb add int rex.WRX pushfq cmp mov movabs sub vpunpcklwd popfq in lods xchg incl xchg mov std fwait sbb adc mov rex.RB (bad) pushq adc (bad) cmpsl xchg jge add stos push (bad) test lods rex.WR jne stos mov stos xchg lods (bad) fiaddl rex.XB mov pushfq xor mov pop in mov mov adc fcom test (bad) cmp (bad) enterq lods pop movslq mov in mov test movsl iret scas lods mov leaveq add lods wrmsr (bad) xchg cmc mov lods mov sub adc out leaveq lods cs jp fcomps pop xchg outsl or (bad) scas lods orl or pushq lods pop retq subl cmp rex.WXB adc outsl rex.WR lods xchg pop cmc or add test (bad) sub pushfq adc outsb insb adc xor (bad) cmp outsl movslq out (bad) cmp fwait js loope in movslq sub mov rex.WX callq mov int3 lods insl (bad) adc xchg lods sub push stos sub add fsubs pop add or int3 (bad) sbb and lods cmp or xchg adc repnz sub rex.WRXB mov hlt sbb jno xchg sbbb in rex.RXB push adc sub rex.WRX ds scas jno mov rex.RXB push fldl adc lods or mov je xchg std rex.XB rex.WRX je retq push rex.X imull (bad) (bad) lahf mov sub pushfq (bad) push cmp in or cwtl add loopne fisttpl or jrcxz in xchg pop lods cmp retq push add sbb lods rex (bad) iret jp jns lods cwtl testb hlt popfq (bad) lods pop pop rex.WX out mov test mov xchg in pop cli xor fadds enterq jl sahf lods and lret cli rex.R xchg scas data16 pop test and rsm sbb mov out pushq sbb stos sub fmulp sbb (bad) rex.RXB rolb (bad) rex.R mov mov sbb cli es and (bad) cmp (bad) (bad) stos cld (bad) (bad) ss pop xchg fildll repz stos mov cmp stos mov retq incl adc ror lods push or jnp pop (bad) cmc mov shll pop lods rex.WRX (bad) sub leaveq (bad) (bad) adc movsb (bad) mov (bad) (bad) sahf sbb lods (bad) and mov mov movsb mov mov push lahf lods movabs out xchg movsb sub retq mov mov fwait sti mov mov add xlat ja xor in rex.WXB mov divb mov (bad) mov sbb mov mov fdivl pavgw fisubl add rex.WB mulb repnz mov incl xchg sub mov mov int3 in movl sarl sbb test adc movabs rex.WRX (bad) or lods mov pop rex.XB mov imul or cwtl rex.WX rex.WRB sub pop push sub fmull lret xor mov (bad) (bad) stos sahf mov stos lret repnz jmpq movabs sarb icebp pushq xchg sub out movsb (bad) sbb cmp lods shlb incl stc out subl mov jns lods loop rex.RX fs gs fs mov xchg fildll cmpxchg in mov add (bad) sbb cmp scas xor cmpsb and callq lods xor retq cltd (bad) sahf or lods test in test scas and sbb je lods (bad) rex.WXB imul repz (bad) xchg jmpq pushq (bad) insl rcrb loop mov nop xlat shlb rex.R rex mov pushq (bad) out pushq sub sub jmp cmp (bad) (bad) insb (bad) cli rex.WXB jnp jae mov insl retq subl push (bad) movslq push out jb mov fsts sub cmp rolb add shll lods (bad) mov add cmc lods gs cmpsl cmp sarb mov xchg mov or lods or adc lods adc rorb mov xchg nop scas sub (bad) lods sbbb notl push in push (bad) xorl in xor lods in mov fstpl cmp addr32 and or xchg (bad) pop subl and movabs (bad) (bad) mov out lods fsubs cmp jno scas lods test cmpsb pop lods movabs push fwait xchg callq ss paddusb int3 mov (bad) sti lods (bad) pcmpeqb hlt (bad) adc fmull xor mov xor sahf fbstp sbb lock in stos cmp addr32 or pop ja lods fs mov std add or rex.XB rex.RX ss fiadd cwtl adc mov jl movabs sti es rex.WB rex.X sti (bad) sub fimull (bad) pop mov cmc (bad) fnstsw jns (bad) mov sbb xor mov (bad) sub rex.R clc jmpq cli callq or adc (bad) or mov repnz sti movabs jrcxz lock xor xchg jmp pop lods test sbb pop xor xchg (bad) js insb (bad) add (bad) adc push cmpsb lret test mov jrcxz out (bad) lods jbe xlat sbb movabs lods pop repnz mov xchg movslq mov lods loope retq (bad) mov lods xchg add sub mov add imul divb sbb pop adc lods rcll lods mov mov rex.WRB or xchg test (bad) lahf out lods clc push pop (bad) ss test repz movabs mov mov mov lock mov cli (bad) rex.XB int3 (bad) movabs loope out rcrb mov jmpq lods pop cmp push and retq sub sub mov rex.WRB (bad) (bad) jno sar lods and add jrcxz pop fnop mov fwait scas mov jle add in jnp addr32 push pop insl fs jnp rcr (bad) pop cmc lods push sub (bad) movsl lods loope (bad) ja or mov (bad) pushfq test lods scas out fbstp enterq lods (bad) (bad) movabs es movabs adc insb insb cmp popfq add or enterq stos imul (bad) jbe sbb ss and orb pop mov stos (bad) (bad) sub xchg mov test icebp add test sub loope fidivl lods std movabs gs jno (bad) bswap mov rex.WB mov lods xchg add mov repnz insb jno sbb ja rex.B jnp mov int xchg fadd fbstp xchg mov sbb (bad) (bad) lret add sahf sub lods mov nopl insb or (bad) int popfq hlt loop,pt cmp (bad) ficom stos enterq xchg fcoml rex.B data16 xchg rex rex.WRX lods fiaddl insl out js fcmovnb rex.WRX rclb (bad) movabs sub rorl loope (bad) (bad) sbb (bad) scas cltd push sar cmp (bad) xlat add outsb int3 (bad) adc sub fs sbb jns sbb push and popfq movabs insl vunpckhps icebp sub add (bad) jmpq or add add decb sub cmp fsubrl xchg (bad) fucomi sub jnp add stos push movabs mov and stos push lods rex.WXB fdivrp ficompl shlb or in mov addb mov orl lods and andl mov add (bad) divl rex.WR (bad) adc retq sub and fiadd shrl cmp jbe mov (bad) (bad) sub fbld push sbb fs adc cmc imul lahf or cmp sub sahf insl sub mov push scas ss loop (bad) in mov fsubrl js insl rex.X (bad) mov lods or cs jmpq lods and jae jge lods (bad) test scas cwtl and jle sub mov mov lret movslq (bad) jns lods faddl and in cld or test fstps lods sti mov pop xor cmpsb imul add rex.RB mov (bad) xlat mov outsl stos sbb jb movslq movabs repnz mov (bad) movsl mov rex.WXB sub lods sbb lods push xchg mov neg test fistl mov cmpsb lods xchg add (bad) frstor xor jno jmp (bad) lods retq cwtl mov adc (bad) xchg (bad) sbb jns retq movabs mov insl movsl movabs hlt xchg adc rex.RB fisttpl (bad) lahf sub cmc shlb (bad) fsubrs retq pushfq cmp mov jmp roll retq sbb sub imull movslq enterq lods test rex.WR rex.XB mov orb xor cmp mov mov (bad) int3 test fistpl (bad) stc mov mov adc in fucomp push adc lods fcompp cmp (bad) lods in xchg ss roll lods pop or or icebp cmp (bad) jbe sub es (bad) sar lods std xor hlt movslq retq adc rex.WRXB repz (bad) mov ja faddl (bad) mov mov xchg (bad) pushfq sub add and clc adc xchg sbb int3 mov sub fldz cmp (bad) jrcxz mov cmp (bad) rex.WR sbb data16 lods movsb rex.WRX (bad) clc push (bad) sub cmp retq and ja mov test jb in add cwtl movabs adc mov rex.WX loope fnstenv rcrb jo cmp out jns lods adc add (bad) lods mov (bad) stos rex.X lods push pop sbb (bad) mov jrcxz xchg xor in in mov adc jl outsl xchg addr32 (bad) lods (bad) sub testl cmp cmp lods jl insl push decl mov pushq fcompl or cmp fwait outsb or (bad) scas clc incl in rex.WX sub push imul and lods lods jo (bad) enterq jb sbb movabs insb pushfq rex cmp mov stos pop or jns or enterq movups fildll (bad) insb jne scas shrb insl ss in leaveq add (bad) cli adc (bad) xchg sub jmp mov stos stos movabs lods retq sub rex.WXB callq (bad) adc loope pop in sbb mov enterq sub in lods push loopne sub jge imulb stc in lods outsl repnz sahf rex.RB lods jbe int std mov lods leaveq or (bad) mov outsl (bad) adc imul jne mov (bad) retq scas mov add lods pop clc lods jne and xchg lods scas hlt xor jbe mov cwtl jg add lods ds cmpsb jne fdivrl xor push cwtl stos (bad) xchg pop xor mov movabs sbb insb mov (bad) rex.WRX ss mov lock lods rex.WX xchg lods (bad) addr32 test fild scas scas idivb xor leaveq jg xchg rex.WRB shrb cltd sar shlb movb mov xchg or rex.X jl sbbb clc rex.WX movabs movsb push rolb mov jge lahf (bad) or and jb jne xchg movabs test loopne nop insb (bad) push jae rex.WRB rex.WX mov enterq rex.WB fwait lods jmpq lods add add shrd (bad) or sub jp (bad) pop lods callq imul jp mov fbld sub xor out cwtl sbb (bad) rex.R adc in xor imulb cmp sub (bad) pop adc stos fiaddl mov enterq (bad) xchg test (bad) mov (bad) jrcxz out xchg stos outsb movslq (bad) rex.X mov sbbl insl adc adc pop xor (bad) lods pushq (bad) (bad) nop and lock sub and lea cmpsb fcomp in rex.R (bad) pushfq push mov outsb (bad) lods stos rex.RXB and jmpq ja popfq lods cwtl xor test fwait shrb (bad) lods rex.WXB jne mov cmpsb callq rex.RB xchg (bad) pop leaveq sbb or lods cs adc sub int3 (bad) adc movb mov mov mov cmpsb lods shrl or fsubrp add lods retq mov or (bad) imul and (bad) (bad) lods cmpsl (bad) sbb movabs sarb syscall xchg mov or mov jrcxz movabs rex.RXB lret cmpsl (bad) insl sub (bad) cmp push mov rorb (bad) lods mov (bad) mov mov fist jg push sub retq lahf test mov xchg rex push sub addr32 (bad) jnp movabs add lods sub out subb mov (bad) pushq pushq nop push and sbb jmp stc and insb rex.WRXB insb enterq or and pop lods pop callq lods push xor mov jnp (bad) mov lods xor (bad) sbb (bad) lods cld test and movsb sub mov repnz push pushq mov jo and (bad) mov shrb outsb rex rex.WRXB rex.WB rex.WRB push (bad) adc pushfq sub out cmc mov subl shrl mov rex.WX and fs movsb adc (bad) scas jrcxz enterq rex.R movabs data16 sub insb test lods cmpsb hlt mov fsubrs rcl cmp movabs xor mov mov rex.WRB xor mov faddl (bad) iret jne xchg rcrb int3 jns push cmp pop mov xor lods xchg leaveq fsubrl push (bad) sub sub retq stos mov js pushq adc lods push mov (bad) hlt movslq loopne (bad) lods repnz xchg lods sub scas retq sbb imul iret jno lods rex.RB (bad) pop lods rex.R xchg rex xchg out add test (bad) rex.WRX stos jne mov rex.WB push (bad) push repz andl hlt or adc xchg (bad) (bad) jbe pop scas out mov int3 lods je pop sub add fwait (bad) jb jge jo loop (bad) (bad) or (bad) sbb push sbb mov mov lods pushq rorl mov lods scas xchg (bad) sbb fs (bad) clc lods xchg sahf insl repz jrcxz add decb sbb mov loope mov (bad) (bad) lods (bad) test sar mov sbb out test cmc std xchg lods jrcxz jmpq rcl and lods and cmpsb mov lods xor xor pop (bad) xchg or mov movsb rex.RB retq sub stos mov sub addr32 rex.WRXB imul (bad) retq stos (bad) lods mov stc lret mov sub pop in iret mov jb sbb adc xchg sub stos xchg movabs mov and retq sub mov (bad) retq lods push cmp repnz (bad) test sub jb (bad) lret mov scas and rcrb in rex.WB lahf movabs and cld adc mov insb or or rex.WB rex.WRX sbb (bad) push cwtl sbb xor imul rex.X lods fisubr (bad) push scas imul stos cmc rex.WRX jnp sub cmp fwait (bad) test jns repnz lea (bad) int3 jmp lods popfq sub xor pushfq lods je es mov (bad) mov lahf mov scas mov mov (bad) lods xor mov jne cmpsb jnp jg mov adc in mov out mov sub mov movabs mov pop push mov clc retq fs jmp callq out mov xchg lods mov add (bad) lahf lods fistpl lods add (bad) rex.WRXB or retq movabs cmp fisubr ds or cs jle lods sbb (bad) mov rex.XB xchg lods add add lods (bad) sbb mov (bad) or cmp out int3 xchg mov adc mov pop (bad) mov test in clc add jo ficompl fs lods rex.WR mov test xor jmp sub mov movabs rex.WRB in push fistpl ds mov (bad) retq rex.XB mov lods lock xchg mov xor (bad) mov vhsubpd sahf adc push je (bad) jmp lods cmp sub push lods mov cmp cwtl add (bad) push sub (bad) scas fsubp mov sti scas pop scas push lods cmpsb cmp sbb mov add (bad) adc pushq retq (bad) rex.WR rex.R cmp lods cmp sbb rex.WRXB js add cltd sub rex.WRB (bad) add xchg pop lock sbb sbb mov adc (bad) cmp sahf xchg mov sahf jmpq cmc push movsb mov out lods iret imul (bad) lods rex.RXB cs lret lods leaveq adc cli scas or rex.X sbb mov sahf add lahf add stos xchg (bad) imul add cmp (bad) lret adc in adc sbb or xchg imul pop lods sbb or cmp nop data16 scas sub mov and add mov leaveq or pop mov stos mov lret rcrb sub retq popfq and rex.WX or fisubrl retq lods repz adc or xlat mov je pushq movabs lods jl sub outsl adc rex.RXB repnz rcl jno fsubrs sbb retq movabs or or lods jae jg enterq lods jb out lea insl rex.WRX sub (bad) rex.RXB jle adc (bad) cmp scas callq mov andl data16 mul rex.B (bad) pop rex.WB lods jmpq sub cmp xchg xchg mov insb sub fsubp push lods (bad) push mov cmp lods nop out addr32 loopne int3 movabs sbb fistp mov (bad) mov jl or in mov adc outsb scas shrl push pop sub jne movsb (bad) imul decb mov lods iret jno cmp in negb xlat (bad) sbb push (bad) xchg (bad) test push lret movabs movabs rex.X jge push mov adc fisttp or push (bad) xchg jnp cli mov fwait callq pop clc rex.XB test (bad) jns jmp xrelease lods clc xor mov (bad) rex.WXB cs xchg stos pop and xchg lods sbb fwait lret cmpsb nop movsl (bad) xor (bad) sub out scas sbb rex.RX test test movabs jnp imul (bad) lods add or movabs rex.X or test data16 jrcxz mov roll mov lods cmp lret rex.WB rex.B sub xor jae iret xchg divb and lods mov jl out xor fdivrl pop lods iret sub cmpsl imull lods pop in (bad) pextrw mov (bad) mov jl movabs movsb fidivl movabs mov lret fwait or (bad) jmpq push cmp mov jl sbb lods sti fdivl mov lods (bad) mov jmp push (bad) push (bad) rex.WRB int fisttp jrcxz addr32 cmc jl fisubrl jrcxz xor rex.XB add sub rclb scas stos fnsave (bad) lahf (bad) out int3 pop int3 lods and mov rex.WRX (bad) adc mov sbb mov insl pop scas cmpl retq pushq mov jae push lahf fwait add movsl (bad) or or jg jge (bad) ja rex.RXB rex.X add lods rex.WRB jmp sub (bad) loope add add stos rex.WRX rex.W shrl mov idiv lods (bad) xlat loop icebp add mov mov movabs adc (bad) int lods cmp rex.W jl xchg rex.WXB rex.WRB lret mov fisttpl add mov jp clc retq adc bnd movabs xor (bad) lock movabs sub test (bad) and incl (bad) rex.RXB (bad) jmpq and out sbb or in ja test stc jne (bad) jg (bad) mov (bad) xor xchg adc push (bad) (bad) rex.WRX loop mov add lods push rex.WB pop pushq mov je cld movabs cmpsl cwtl lods pushq pushq (bad) scas rex.W rex.WXB stos pop sub and mov sbb sahf shll gs mov mov xchg addr32 xchg movsl ja callq stos enterq fistpl push ficom add rex.RX (bad) jb movsb imul sbb mov mov (bad) inc pushq rex.RB xor and mov lret clc (bad) outsl rex.WR movslq push lahf callq int3 adc adc test lods rex.RX sbb test (bad) adc sbb shrl rorb lods int3 (bad) cs mov rex.X add mov sub sbb add scas pop xchg movabs cltd pop out rex.B pushq xchg popq fcomip movslq mov jge mov lock sti jmp stos (bad) adc sub sub fild cmp movabs (bad) pushq repnz mov xlat rex.XB jge clc xchg jns pushq mov adc lret in or rex.RB rex.WR xchg scas mov leaveq ror lods cltd imul add xchg callq xchg scas fdiv test add movabs add sbb fwait lods cmp rex.RB pushfq rclb pushfq rex.X lods rex.R mov add shrb rex.WRB or push (bad) pop xor test (bad) xor sub pop lods retq xchg (bad) (bad) mov sub in (bad) (bad) (bad) pop lods jmp sahf lahf xor mov push (bad) movsb callq add js lahf push jo retq stos mov (bad) loopne sub (bad) add (bad) lods (bad) out xor add mov (bad) movabs (bad) lods lods and mov lods js outsl cs push rex neg lods rex.WRXB and xchg mov lods mov sub or lods push mov add push mov jnp lods pushq std cmp push or lods jp out test hlt rex.WR fmuls (bad) mov sbb movabs cwtl lods mov and mov and cmp xor rex.B (bad) insl (bad) jge out lods xor xchg gs scas pop sub shrl (bad) (bad) lods rex.WB mov lods stos adc (bad) in mov and pop xor shrb cmc cmp jbe lods sbb icebp insb push pop retq movsb push pushq lods int3 mov (bad) movslq sbb pop (bad) insb or mov rex.W lret xchg lods and or mov jle fisubl test stos sbbb (bad) rex.WRX (bad) shrl fistpl (bad) cli (bad) ffree mov test or rex.RXB adc stos xchg xor push jne rex.WXB insb xor retq and sbb fimull jge mov rex.XB in sbb xchg mov or loopne mov (bad) int3 jmpq xchg stos lods callq lods leaveq movabs repnz lods xchg sbb mov rex.R rex.WR (bad) cmp movsl fsubrs movabs sub out (bad) mov mov lods push and lret test fcom hlt sub jb in cs (bad) movl rcll adc cmc pop mulb movsl xor cmpsl lods int3 mov insb fldenv stos jno pop push mov xlat in (bad) sub lods (bad) xchg sub sbb (bad) cmpl add mov cld insb (bad) rex.XB pop xor and rcrb lods fldl retq rex.WR std scas rex.WRX (bad) imul cmc adc mov add xor sbb leaveq movsl fiaddl (bad) mov or (bad) cmp std mov in (bad) lods or (bad) in adc mov jne test rcl pop stos mov jle mov rex.WR rex.WX adc int3 repz sub retq xor mov lods and add lods iret test jp ffree cmp sahf xor jmpq mov rex.RXB imul sub push sahf imul cmpsb lods add rex.WX xchg rol int3 (bad) mov fdivs sahf sbb scas fadd sti mov ds sub pop pop insl (bad) push jl repnz lods xchg mov repz jp (bad) addr32 jo clc cmp lods leaveq notb and (bad) xchg in stos roll push mov (bad) lods rex.WRX jno sub xchg lods movabs xor in pop leaveq scas retq cmp adc and mov ja push (bad) add xor imul (bad) insl (bad) sahf insl movabs mov (bad) mov enterq cmp lods sbb jae pushq lods adc test and pop lret cli test mov xchg mov scas out sub fldenv (bad) ds movslq lods cld cwtl movabs mov (bad) lods mov clc jns push mov test rcrb (bad) mov sub scas jmpq (bad) mov jmp adc fistpl rex.RX pop lods stos (bad) fcoml hlt gs lods repz mov xor shrl rex.R (bad) fstl movabs xor addr32 rex.RXB push add xor test cmp lods pop frstor cmp out in adc lods test and pushq rcr out lods mov sbb stos mov (bad) pop jae mov rex.WRX rex.WRXB lret fucomp stos mov mov fcmove push out out imul pushq pushq mov jae xlat data16 jrcxz retq fisttpl mov sub stc flds push fwait sub iret scas xchg (bad) lods fldcw testb mov (bad) mov push and (bad) loop sbb mov cmp insl retq scas out xchg rex.XB or sbb (bad) cmpsl stos lret (bad) (bad) sub in in mov xor int (bad) loop lods jrcxz mov lods xchg sbb (bad) popq mov xchg mov adc imull mov mov (bad) imul lret push mov icebp mov jrcxz or cmpsl mov (bad) cmp jnp pop scas scas mov stos (bad) jrcxz fmul push jbe mov jns push mov xor in repz add mov cmp mov scas jb icebp rex.X in addb (bad) lods cwtl sbb push jmp lods mov ss lods jp or shrb fnop add cmpsl mov stos (bad) mov rex.RB adc mov xchg push add sub cmp jne or test mov xor sbb and sbb gs pop xor (bad) cmpb cli cld rex.R jle lods popfq rex.B (bad) out rex.WRB rex.W ss jl orb xchg sbb (bad) lods rex.WRX rex.WRB (bad) stos push lods cmpb add outsl push int3 add or rex.WX data16 pushq sbb mov xlat mov data16 lods jg jle in cmc pop fldcw xor rcrb xchg rex.XB jne gs sub or (bad) rex.WRB mov pop fstpt lods movslq int3 or stos out push and insb movsl movabs add push sbbl movlps push in movabs xchg in mov (bad) lods sub (bad) icebp movslq callq hlt pop mov xchg shlb stos sti xlat and rex.WRB (bad) es jb cmc mov mov xor cmp nop lods and leaveq (bad) sarl (bad) adc xchg sub sbb xor (bad) rex.XB cmp repnz lods xchg cs out decb lods addr32 rex.RB loopne sbb push (bad) (bad) pop scas jp movslq stos rex.XB lods loope cwtl insb insl (bad) (bad) pop lods jge xor (bad) sahf vmovss push lods out test cli fisubrl and mov (bad) rcll xchg shrl adc cmp lock out flds js jle in lods adc jae scas (bad) jmp (bad) (bad) sub push xorb jnp fsubs lods cmp je add push or cmc lods push sub and xor lods rex.RXB xor xchg and pushfq and jne rex.WB jnp,pn out pushq callq popfq push cmp mov stc lahf scas lods test lgdt icebp adc adc sahf fwait adc scas mov sub pop data16 rex.WRXB retq (bad) or lods (bad) jbe xchg mov outsb leaveq in (bad) push loopne cmp jo mov (bad) jb (bad) mov (bad) and movabs add rex.WR js mov add int (bad) test jge movabs xchg add jg or shrl and (bad) sub pop jo pop lods jle (bad) (bad) jae movabs (bad) or sbb cmp insl insb lcall push rex.XB or rex.RB or adc jmpq (bad) mov je ss (bad) mov lods jns insl js mov outsb lret rex rex.WB push sbbl push out cmpsl stc iret repnz adc or mov (bad) lods repz movabs cltd pop mov popfq fmull shrl jge lods (bad) out loopne (bad) clc xor mov mov scas rex.WXB sbb movabs sub or jbe leaveq addl rex.X (bad) lods rex.WR stos movabs or sbb mov (bad) and lahf repz jnp fsub lods stc movslq test adc mov push (bad) sub and pop jb scas rex add sti (bad) (bad) scas scas fisubr cmp imulb pop test mov incl rex.WR movsb test movabs mov lods fcoms loop sarb jl movsb rex.WRX rex.W data16 cltd ja subl and movabs xchg movsl (bad) iret in sub rex.WRXB mov (bad) rex.XB lods (bad) adc sbb and pop sub mov test jns scas fildl mov cmc insb ja cli mov retq loope (bad) and jne fisubr lea lret lods mov (bad) popfq rex.W sbb stos negb roll (bad) jp pop (bad) mov xor stos xchg es jb retq xchg sbbb shrb lods pushfq pop (bad) push xor xor int3 out pop or (bad) icebp callq stc outsl rex.B test add sbb lods in xchg mov mov (bad) and mov roll rex.WX sub rex.WXB out movabs sub (bad) xor in movabs add and cmp cs cmp sbb mov sub je sar test mov lods shrb adc retq out movabs mov sahf mov cmpsb stc in mov movslq mov jp sub rex.XB mov in xor sahf xchg test sbb sub (bad) movabs mov js sbb stos cmpsl sub rex.B rex.WXB cmp and stos scas pop rex.XB adc mov cmp jle sbb cs lea pop lods rex.RXB rex.WXB lock in lods mov clc insb ja mov imul xor iret lods outsb loop mov xchg es mov and mov mov repz cmc (bad) out push (bad) fdivp rex.WXB xchg outsl ja int jns (bad) insb mov adc and (bad) adc fcompl test cld mov (bad) scas mov push mov movsb jg movslq cmp jae adc lods mov fs std lods jge scas outsl (bad) sbb test je leaveq lods rex.WXB push mov orl pop lods sbbb mov xor (bad) ds jmp stos mov shll movsb rex.WRB rolb mov js clc lods hlt pop (bad) rex.WRXB (bad) insl lods sub mov pushfq jns test push mov (bad) adc or imul sub loop lods pop mov lods test (bad) adc (bad) lods push and mov ja insb mov or fcompl add add (bad) jl adc mov mov imul rex.WRX mov out lods fimul cmc sbb (bad) (bad) shr pop (bad) movabs push popfq outsb test adc jne not cmp enterq lods mov mov test test mov xor insl lods mov pop and push in test roll mov add lods in push or lods mov lock adc sbb lods pushq shrl push rex.WXB movabs je jne cmp rex.X lods cmc and mov lods (bad) adc xchg rolb and pushfq in xchg jge lods rex.WRB repz fs xchg outsb scas (bad) xor in mov mov ja movabs cmpsl lods xor jne push jmpq add mov or jbe lods push add repnz jp cld test stc loope xchg mov push lods rex.XB sub je lods int add fmuls lods mov push cmpsb (bad) (bad) (bad) add cld push adc (bad) lods rorl (bad) or (bad) test lods mov mov test test fwait or pop shrb sbb cmp (bad) clc (bad) mov outsb fcomp out adc fldcw imul (bad) rcr lods sub push stc stos insl callq xchg rex.WB (bad) lods adc (bad) and lods xor cmpsb (bad) stos jmpq lret and scas stc pop mov xchg lods pushfq movabs (bad) outsb in imul cmpsb sub jmpq pushq jo mov leaveq pop cmp retq jp lods (bad) sti lcall jmp cmp (bad) and cmpl xor mov and in insl jge add jae ss adc (bad) jmp mov scas mov cmp rex.B icebp hlt jle lods (bad) (bad) mov push int mov scas sub lods (bad) test cli pop push enterq add or leaveq mov sahf rolb movslq scas cmp (bad) pushq lods jg (bad) sub insl (bad) xchg jrcxz rex.WX scas fnstsw mov shrl rex.WR stos icebp xchg sub int mov cmpsb jle sub sub insb cmp test mov jb xchg in ss (bad) sbb rorq rolb xor loope push lods out lret jne (bad) rep rorl movabs addb sub (bad) add std rex.WRB ss test jle js lods xchg mov lods jmp in push cmc add (bad) cmp xor scas or retq insb adc sbb adc mov imul test and in pop cmp cld (bad) pushq adc rex.XB lock es rex.WR shlb mov lods rex.W rex.WRB (bad) cmp fwait lods mov mov rcrb shrl jp rex.WXB rex.WRB enterq jo pop shrb cli rex.WR cs (bad) es push cmp mov cltd rex.XB callq (bad) push (bad) jo xor movabs or sahf rcrl cld xchg mov data16 int jle retq and mov and (bad) xchg mov xchg int sub xor xchg movslq push xchg mov sahf lods xchg rex.WRB pop lahf rol lods jns jae xor (bad) xor roll jle (bad) mov adc sbb adc fistl idivb test lods data16 or sbb rex.WRB add jge icebp stos jrcxz insb adc pop rex.WR fbstp push lods cli mov and fcomp (bad) sub stos pop je xor scas xor or (bad) adc (bad) sub data16 scas pop mov out adcb adc rex.WXB test cltd popfq or push shrb mov mov movabs adc rcrb stos pop lods jmp mov sbb rex cmp pop mov retq int3 pushq lods enterq (bad) orl jrcxz rcr rex.X lods div sbb hlt jl lods jnp jmp std xchg cmp jmpq pop xchg jae rex.WX retq sub scas cli jrcxz lods (bad) (bad) std out add rex.WR fs jl (bad) xor loope (bad) rex.X leaveq sbb mov fildll sub (bad) int3 (bad) rex.WRB mov jo mov data16 test (bad) jge lods fisubr js rex.WRX rex sub stc mov or rex.WX sub xorb rex.RXB scas rcrb sub sbb sahf (bad) (bad) out (bad) add xor scas mov jbe (bad) push lods (bad) mov jns test adc int3 mov scas (bad) and add and in in lahf jnp lods repz lods add (bad) divb (bad) fldt jbe xchg stos scas (bad) mov fisubr callq adc movabs loopne movsb (bad) mov lods jns movsb jae mov sahf sbb sub xor add sub xor out and mov ror stos adc push (bad) (bad) push (bad) sbb sub or (bad) movabs pop jmp sahf (bad) cmp jg movsb mov jo cli sbb mov and mov (bad) and sti stos mov int3 rex.WRX mov movsb loop,pn sub scas leaveq sub mov jne (bad) rolb lret loopne pushq xor and (bad) sahf ss (bad) scas sbb cmp ficoml adc lods ljmp rex sahf push mov orl pop ds imul mov shrl insb loope adc jb (bad) pop test callq cwtl rex.WRX (bad) mov sbb lods mov xchg xchg mov xor ficompl movabs test pop fistl mov add adcb lods or movabs fadds lods retq clc cmp popfq and cs cmpsl adc imul pushq outsl add nop jns hlt pop retq xchg rex.WR and mov pop rex.X movsb add adc repnz in pushfq xor repz clc movabs subl in retq mov xor pushfq or pop adc lret lods lods fisub rex.X insb sbb adc je add vpsubw movabs fwait cmp lods loopne out scas mov popfq push push pop imul enterq lods cld rex.WX addr32 lods fnsave callq retq mov add lods cmp lret xchg add mov es js movabs rex.WR pop stos sbb ds (bad) adc xor or (bad) (bad) ljmp loope movsb in (bad) or cmc int3 leaveq pop sbb mov (bad) add adc (bad) mov rol movslq push sahf (bad) jl mov sbb (bad) std (bad) xor (bad) imul mov pop sbb in jns fidivl loope sbb sub and lods callq insl mov test (bad) sub fldcw pop or repz jo (bad) or lods sub sub stos jle (bad) pop mov std sbb jbe adc retq lret je subb mov mov movabs and (bad) scas (bad) imulb mov sub push cld stc fidiv mov lods and ss stos cld (bad) adc imul stos push mov (bad) or movabs mulb jg mov test lods adc scas jo outsb vhsubpd scas sub lock mov rex.RXB xor pop std xchg add (bad) test test pop lods sub out fldcw cmp pop movsb orb outsl (bad) and jnp sub stos pop ja mov pop xor in mov xchg callq sub mov rex.RX or faddp adc cli (bad) or loop retq int (bad) loop lods sti test lret (bad) mov pop jp add mov adc imul mov in push jmpq lahf push jmp mov maxps rex.RX xchg and (bad) jmpq scas cmp lods push enterq fadds sbb adc hlt sub add jne mov mov push rex.WRX or out lods mov (bad) out lods (bad) lods in (bad) (bad) rex.R lret movabs jle add mov and rcrl lods out cld rcr rex.RX jp movabs rex.W lock mov push (bad) rex.WX (bad) and enterq std (bad) sub pop cmpsl mov adc (bad) movabs sti rex.WRXB mov test fs (bad) mov push pop addr32 push (bad) lods pop sub jae rex.X mov lods (bad) pop fs push xchg lods sub rol xchg adc lods (bad) pop (bad) xor add xor lods rex.B out or (bad) or rex.WRX xorl lods outsl (bad) xchg jne and jle cmpsl lods cltd rex.RX xor sbb lods fs (bad) xor jle lods retq add jmpq pop retq and orl mov pop out push std sub rex.XB pushfq jb imul rorl in jbe or cmp (bad) adc xor rex.WRB sbb (bad) mov data16 rex orl test (bad) callq or sbb in ss icebp rex.WXB in and jge movabs rex.B push lods sti jb jge jns cltd lods cmpsb clc jbe stos callq push jge lods (bad) (bad) (bad) jns mov pop movsb lods data16 loop sahf subl mov cwtl adc (bad) (bad) lods std jae xor rex.WB add push (bad) lods test pop loop jrcxz sbb lods sahf idiv adc adc mov fiadd (bad) sub xchg je jrcxz xor ficom fbstp int pop xchg mov pcmpgtd enterq cld (bad) push xchg push mov stos in cmc cwtl or pop test push sarl add (bad) jg (bad) retq lahf clc out jl or (bad) jo insb rex.RX lods xchg (bad) and pop inc or cwtl (bad) outsl in xor lods pushq leaveq (bad) fsubl fcoms insb insb sub hlt (bad) xchg cli push cld andb clc lods mov (bad) cmp (bad) int3 and mov retq xor sub xchg (bad) adc xor add insl in mov gs mov rex.XB push and cmp jns mov (bad) movsl (bad) vpmaddwd (bad) sub (bad) or fistpl xchg lods popfq shrb addr32 sbb cmpsl (bad) (bad) add movsb lods (bad) lock cli callq hlt lods sub pop lods xor pop mov cmc movabs imul or lods rex.WRXB outsb sbb mov cmc or pushfq (bad) fistpll test lods imul (bad) jne (bad) (bad) rex.WXB xchg sahf or lods cld lret imul out (bad) scas mov lahf in xor xorb (bad) sub cmpsb test xchg jo cmc lods jb test lods jno jo adc sbb (bad) rex.X cmpsb js cs std adc xor jae (bad) mov lret jrcxz sub lods pop add push retq lods callq iret in stos adc mov lods cmp cld mov leaveq xchg lods mov (bad) loopne pushq xchg lahf jg jl fisubrl jrcxz rex.R (bad) gs sub stc pop xchg (bad) lods xor rex.XB repnz or in insb movabs cmp mov (bad) sub outsl and movsl fsubrs (bad) scas faddl (bad) push add fiaddl and mov (bad) fwait js (bad) adc movabs in mov xor sbb pop add or lods ja push in add movslq (bad) cmp (bad) and lods add adc stos lods pop (bad) repz jg shlb lods rex.W mov xor test add rorb ja fdivr jno adc and in cmp rex.WX cli test int loop mov cwtl mov scas movsb xchg sub rex.RXB add stos mov jp (bad) nop enterq jno (bad) orl rex.X push mov (bad) sti sti (bad) lea rex.B push sahf imul pop lods (bad) jae,pt fs mov movabs sub sub repz fcmovnb sahf pop adc pushfq movabs mov incl lods lahf adcl lahf jae ficoml lods and sti (bad) pop leaveq lods movsb sub lods rex.WR jmpq pop jp sbb or jne mov adc vmovntps (bad) fisub add hlt jae mov cs cmpsb mov xchg mov out addr32 scas push movabs add rcrb add cmc sub cwtl repnz lods (bad) loope scas xchg add jo out adc in adc in jb sahf (bad) mov rcrl mov or fwait mov add retq cmp rex.WRXB (bad) (bad) sbb fidivr pop (bad) scas sub (bad) xor (bad) lods mov (bad) je mov fimull rex.R sbb push lods gs xchg out push (bad) popfq (bad) add (bad) jp shrd (bad) cmpb mov push xor mov stos (bad) fcmovb and out insl cmpsl rex.B out scas rex.B sbb adc mov fisubrl imul test xor mov movabs out stc (bad) (bad) insb insl and and iret leaveq jo sub push retq pop lods repz jl outsl push orb pop retw shl adc (bad) hlt xchg jmp out mov jo outsb mov stc and sub (bad) mov pushfq add in (bad) jbe movabs loop (bad) imulb xchg xor (bad) xchg mov jno xor addr32 (bad) sub lods xor leaveq mov out sbb scas test fidivl rcrb sub fisubr and in sub add mov outsl or xchg rex.WRB sarl mov rex.WRX jmp enterq in jle mov jae (bad) jp or in mov outsb push movabs mov lods adc imul scas xor movsl xchg or (bad) in out cmp iret adc lods sbb in mov rex.WX cltd fcmovu mov (bad) (bad) insl mov roll lods pushq xchg (bad) pop lods repnz (bad) fidivr nop lods cmpsl jmpq movabs push movsl stos out xchg pushfq (bad) movabs lret sub rex.WR retq mov lods lods (bad) (bad) ficom mov mov lods scas xor mov lods es gs fdivs lods or pop pop xor xchg jmp rex.WR stos mov jmp and out pop (bad) (bad) (bad) fucom lods mov mov mov scas lahf add (bad) test mov test add hlt and rex xchg mov sbb rex.WXB jns repnz or cld stc test negb or mov mov movabs sti insl (bad) fstl sub mov pop sbb movabs sbb lods test (bad) int retq or subb (bad) fwait and (bad) sub in movabs sub adc (bad) test xor add clc adc out out (bad) adc sub mov (bad) (bad) or and loop pop mov sub xchg (bad) (bad) movabs (bad) lods cmpsb adc (bad) andl or xor stos lods pop cld out xchg xchg lods fistp cmpsl cmc lods (bad) out mov lods idiv ds push pop addr32 mov xchg xor lods (bad) sub icebp and fcmovnbe fnsave lods (bad) in sbb rex.WRX mov lods outsl (bad) rex.WXB fsubrp push and (bad) movabs xchg or lods pop pop mov jge add test and mov pushq cmp callq lods rex.WRX fisubrl fcoml (bad) shrl test add jl pop rex (bad) rex.XB mov adc je hlt lods stos and or xchg push jne rex.R xor lods jg clc (bad) jl sub and pop add lods lea rex.W (bad) in fs xor es pop mov (bad) (bad) mov adc clc xchg mov jb rex.WB movslq data16 repz pop jmp xchg outsl lods fcom rex popfq jo retq rex.RX stos int add xor mov insb movabs in lods xor jp (bad) rol xorl lods jnp jns sub (bad) (bad) lods (bad) push out lahf pop jb mov rex.R ja shrl (bad) xlat lods insl insb (bad) xchg test mov mov (bad) jg cs fdivrl lods (bad) and je sbb mov test pushfq (bad) lock retq lods jrcxz push pop ss insb push xlat outsl and rex.W rex lret adc add jno fisubrl mov jmp mov cmp lahf and stos pushq insb xchg (bad) (bad) mov scas movb movabs jnp (bad) xor stos xchg and cs addr32 rex.WX and xchg or cmp push mov add sub jmp sbb lahf mov add sub in stc movslq lods jmp (bad) xchg mov push mov add lods repz pop std adc push mov jns,pn scas push es hlt movabs (bad) push or lods sub int3 stos lods and or mov cmp pushfq cmc movl stos cmp cltd rex.X rex.WB add sub mov and or movsl ds adc mov clc insl xchg icebp cmp lods xlat sub cmp sbb and sbb lods and cltd and lods rex.WB xchg sub add vcvtdq2ps mov imul mov (bad) fidiv push rex.WRXB (bad) leaveq mov scas lods rex.RX and scas stos rex.R int pushq lods lock out or rex.WXB add mov scas xorl adc imul rex.XB rex.WXB loopne (bad) xchg scas jp push jmp xorb rcrl xor (bad) in (bad) lods mov cmp movslq lods movabs mov mulb rex.RB pop cmc mov enterq lea pushq je rex.WXB out jb rex.RX xor out enterq mov jl sub repnz cwtl rex.RX mov repnz sar fcmovnb lods jmp adc rex.R mov sti fdivrs rex.X movabs jno pop sub (bad) rex.WRX rex.WX xor test out cmpsb mov sbb scas (bad) sahf mov xor fldt (bad) stc mov lret test lret (bad) mov (bad) insb and push adc mov repz jmp js leaveq xchg lods in out rex.RB cmp (bad) lods mov xchg (bad) fsubl cmpsl subb xchg movsb lods rex.X xchg jl lahf test mov pushq stos rex.X lock test or adc (bad) mov ss rex.WB repz or scas pop mov or cmp fsubl lods pop rex.WRB sbb pushq loope pop movabs lods push pop push pushq pushq and lods jp mov callq push icebp adc or cs xor lods adc jnp rex.W es or mov retq (bad) repz lods ja,pn mov stos (bad) (bad) in xchg cli shlb mov xchg jp (bad) movabs outsb movsb lods (bad) adc (bad) callq sbb retq rex.WXB movsb lods sub xor (bad) lods jno mov mov fisubr callq nop (bad) sti lods rolb or mov cmpl out (bad) xchg lods add rex rex.RX mov lods gs push (bad) retq rex.WR rex.WB movsb sti mov (bad) rex.WRB movslq movabs lahf jle sbb sub xor popfq lods movabs mov sub (bad) mov outsb in hlt push pop rex.B pop xchg sub (bad) out stos lods pop (bad) data16 push mov xor lods fnstsw int cmp lods lods pop movslq rex.WX push pop mov xchg and sbb jmpq cltd xchg or or lods mov xor hlt and subl push pushfq movsb push cmp (bad) rex.XB lods loopne,pt retq subl and mov xor pushq sub pop (bad) ds xor fsubl lods jl cli xor cmp jne (bad) cld movslq sidt (bad) mov insl loopne (bad) (bad) imull decb cmp mov push pop rex.X mov lahf lods fmul hlt in imul rex.XB xchg mov or mov clc retq sahf (bad) mov mov mov fldt (bad) push or loopne imul jp fcompl sbb jrcxz mov loopne (bad) sahf xor and (bad) rex.X out xor sub outsb lahf or es retq fistp insb xchg scas (bad) (bad) stc rex.X pop in cli xor xchg jl lods fstl out push mov lods fcomp mov cmc jp sub rex.WX or (bad) mov cmp mov ss sub retq ds cs test cli rex.WXB mov (bad) sbbb movabs adc sarl loop test pop faddl (bad) push mov in cwtl sbb outsb lods ds ja lods loopne pushq (bad) lods xchg jbe xor or (bad) test sahf scas push lods (bad) cs jns rex.RX retq roll fsubp (bad) lahf xchg sbb mov fdivs xor stos xchg mov sub in addr32 jb xor jl mov in (bad) out gs lods (bad) pushq imul add addl in and cwtl fistl (bad) lea or mov roll callq (bad) adc or mov adc rex.RXB sarl lods (bad) rex.WX fcmovbe sbb sahf in mov adc shll clc lods and rex.X add jmpq mov (bad) mov jb (bad) xchg mov data16 imul movabs xor fadd mov icebp test cmp retq (bad) mov adc and adc cmp jg xor fs in frstor xchg iret insb test sbb adc movslq sub add jp pop sahf cmp cmc pushfq or and jne xchg xchg (bad) mov repz (bad) lods ror fldcw movabs (bad) pushfq shrb outsl sub sbb or lret lods pushq add (bad) sub pushq lods fwait (bad) sbb rex.RB xor fidivrl (bad) leaveq (bad) and stos xchg add out jnp scas mov mov (bad) xor mov jle rex.WRXB icebp mov in rex.RX rex.XB rex.X xlat adc xchg rex.XB mov xchg in js cld xchg lods (bad) adc test xor add scas movslq cwtl adc or (bad) rex.XB mov mov std sub pop (bad) adc retq and cld adc add fwait mov mov rex.WR rex.B stos out es pop in (bad) or mov jne in cwtl sub (bad) sub ja jp outsl or jmp rex.WRXB pop cs (bad) add lods mov mov rex.X (bad) and rex.RB mov addl callq (bad) outsb insl fdivl mov cltd adcl (bad) sub adc cld add fwait (bad) fsubrl ds (bad) mov lods cltd ss add js (bad) roll adc sub rex.WRX (bad) (bad) movabs in std mov in mov repz sbb (bad) (bad) add cmp pop cmpsb (bad) lods sarb leaveq mov add icebp (bad) movabs pushq imul movabs or lods mov rex.W rcl fstpl (bad) xor int3 sub xchg cmp lods pop ficomp movabs cld lods jae jo rex.WX mov rex.R jns movslq jae add lods stos and movabs or fsub test mov sub std jb rcrl sub mov lahf test lods push sub loope ja or test or leaveq xor xlat adc lods jne rex.WXB rex.RX in test enterq sub (bad) lods pop mov xchg and lods push nop sbb outsb lods mov movsl mov push mov (bad) mov rex.RB repnz cmpsb or pushq fisttpll sub int3 cmp insl cmpsb lods mov push (bad) add movsl sub cmp xor nop (bad) jg rex.WRX packssdw movsl rex.XB mov jle lods mov lret and shrb not (bad) lods movslq add popfq mov int and mov jno (bad) or rex.B lods xor and insl sub xchg sti add cmp lods fild add (bad) movabs (bad) imull adc lock (bad) mov movslq lods rorb (bad) sbb in (bad) mov cmp cli xchg sub (bad) xchg lods xorl rex.WRX (bad) cmp lods lods (bad) imul lods xchg xchg pushq lods popfq lods xchg pop rex.RXB adcb scas es enterq lret adc mov xchg rex.WX jmpq and (bad) or loope pop je (bad) and fdivl adc mov (bad) leaveq mov pop shlb int3 xor push add mov cmp and blcs ja movsl and mov rcll pop scas cli out cmp mov in add or int3 (bad) and jo in adc mov shrb sub add mov xor push pushq cmp mov lock cs adc rorb loop cs (bad) je xchg shr jno (bad) cmp pushfq loope (bad) sbb lahf rex.WB jg lret (bad) pop lock pop stos es mov mov (bad) cmovp xchg mov (bad) add ja enterq (bad) cwtl outsb rex.RXB (bad) jbe adc rex.WRXB cli fmuls xchg rex.WRXB xor jns rex.R (bad) shr and retq movabs add pop andl xor jge cmp jno callq fs rex.RB add jno jmp out movsb mov scas pop test sbb or lods in (bad) mov mov (bad) mov rex.WX adcl xchg (bad) loop out movabs lods fsubl jne rex.WRX lods out pop lods xchg mov (bad) movabs (bad) retq sub xchg xor adc cmp sub enterq fisubl in retq scas push rcl fistl scas cs insb (bad) test xchg pop clc clc lods add or cmp cmp rex.WRX rex.RXB rex.WRXB xchg std push fmuls jae insl addr32 outsb lods retq roll mov jl lods (bad) cmp (bad) faddl je lods stc mov in pop (bad) pushq leaveq pop cli jns pushq add movabs js lods ss fbstp insb cmp mov push std or mov xor xchg mov xor (bad) mov cwtl cmpsb test test sub xor adc push mov iret jb lret test and cld mov (bad) mov andl sub cmc rep sbb (bad) rex.R lock shrl jb lods push loope (bad) sbb test jae lods ja repnz lock je lods xchg fcoms and (bad) pop (bad) movabs fsub and and cwtl stos (bad) (bad) bnd xlat insb mov lods sbb movb cmc sbbl mov xchg mov rex.RX repz adc shrl test in lahf adc (bad) fdivp adc or (bad) pop sbb gs fwait sbb or jmpq rex.RXB xor lea rex.W out sub mov jge ds sbb fucomi lahf or stos mov jnp (bad) (bad) push fsubl sub and fnsave (bad) lods in stos enterq push lods callq xor loope xchg jmpq jo (bad) lods sahf sub or int fnstsw lods (bad) sti push sub std cwtl (bad) lret rex.WR (bad) lods pop rex.RB pop mov or jl outsb lods lock jno stos rex.WXB sti mov rex.XB sub (bad) jmpq popfq kmovw mov xchg jle sub out adc popq xchg insb (bad) rex.R cmp rex.R rex.WXB mov cmpsl jns mov mov lods mov negl (bad) jno movabs out mov rex.WRB lock mov movsl rcrb xlat mov lods lretw (bad) add movsb test in (bad) mov xchg add mov (bad) insl scas mov imul jle notl lret subb and lods (bad) mov nop (bad) mov out adc repz imul jnp add lods or movsl fs lods mov sbb cmc or push stos pop mov rex.WB repz xor mov adc lods imul mov push sbb mov mull (bad) cwtl mov mov sbb or add jns add rex.WRX lods xlat (bad) cltd shll add mov (bad) jb mov lret (bad) rex.WR addr32 push (bad) jae lods (bad) repz scas jmp xlat rcrb cmp xchg mov orb (bad) xchg test lea pop in out sub lods popfq mov lret fwait movabs (bad) sub add lods xor (bad) pushq xor pushq rex.X fmulp mov in lods push cmp lods iret push imul push popfq scas mov (bad) enterq rex.X xchg test sub out push adc test rex.XB xchg cmp rcl mov es rex.X (bad) (bad) rex.R xor fsubs xor sub (bad) mov rex.WRB (bad) and std and (bad) fcmovb cmp lods cwtl jbe shrb xor loopne xchg (bad) xchg lods jb adc sahf push and pop mov xlat cmp (bad) lods or pop cmp mov xchg fstpt add (bad) outsl out cmp lods cs jmp lods xor sub (bad) loop test sub test cld iret fisubrl (bad) int3 mov int3 sub lret jmp movb mov (bad) sarl xchg in fldl mov xor adc loop cmc push sti (bad) out jbe fldcw jge xchg retq sub imul lahf jge rex.RXB cmp pop lods cmp rex.WR fadd or sub loopne rex.X stos rcll in mov or mov loope lods iret and (bad) rex.W and sub pop xor cmpl sub negl lods enterq subb cmpl lods sbb add cltd lahf and adc sahf pop mov (bad) (bad) mov rex.WR not subl (bad) movsb jae push mov cmpsl (bad) mov or add sti push outsl lods push (bad) lret fsub jns scas lods insb int or rex.X lods (bad) nop outsb sub iret mov (bad) lock scas lods hlt shll lods fidivrl (bad) (bad) jl lods (bad) xchg mull (bad) mov or retq test and callq pop movabs movsl rorl or test push and jnp rex (bad) jo shr ja stos add scas mov ds retq or cmp lods cmp mov mov stc (bad) lods subl vpsrld push icebp (bad) adc rex (bad) popfq jmp mov lods or (bad) (bad) sub push xchg sbb (bad) icebp callq and push xchg lods mov rex.W int xchg (bad) data16 jne rex.WR cmp cli (bad) std adc jne outsl jp pushfq cs mov lea sub in and xchg rex.WXB lock insl (bad) pop lods cli retq out xchg rex.RXB pushfq hlt adc jp rorb in add mov (bad) notb popfq fildll roll loope jl fcmovnb (bad) mov jl in outsl idiv ds in jb xchg scas jp fwait sub pop mov (bad) (bad) lods mov rex pushq out stc push stos push (bad) je (bad) or add (bad) adc fnsave push mov mov mov or lods lea cld movabs movslq sti sub rorl pop mov lock adc adc sub js rex.RB push mov xchg cli mov cmp adc sub (bad) lods jo iret jg jl shll mov (bad) rex.RB (bad) or lods clc (bad) test sub pushfq or stos (bad) jns outsb jge movabs out data16 xchg and fiadd je scas or outsb (bad) and (bad) insl lret sahf or mov sbb popfq test std lods pop mov icebp cmp fs std rolb lret (bad) (bad) (bad) shrb in or loopne sar rex.B rex.WRB rex.R pushq lods mov loop (bad) scas (bad) (bad) mov mov imul push xchg lods jb movabs out lods sub mov mov and lods (bad) imulb sbb rex.R rex.X lret adc out lods sbb pop (bad) pushfq retq jg sub stc cmp adc rex.WRB fwait cmp xchg pop ss mov mov (bad) jno cs lods jbe pop sub mov pop fisttpl jo sbb sbb and mov mov rex.R xchg loope mov imul (bad) mov test push sub rex.WX push repz notl (bad) mov lods adc lock (bad) jno lods nop jrcxz add mov lods and rex.WRXB fisubrl sbb mov (bad) lods (bad) leaveq rex.W adc movabs loopne sub out in fxch rex.X lods jmp rex.WR in loopne add fcmovu mov mov rcll es sahf xchg lods jnp,pt mov (bad) add (bad) push add add lret xchg lods movabs xchg retq fsubs add jl enterq movabs sbb sbb idivl and pop lods jnp xlat stos cmp add sub rex.XB pop mov rex.WRB cmp test (bad) lahf jle retq push xor xchg xor adc fldcw lods movabs pop rex.B sub scas leaveq rex pop sub mov cltd (bad) jmp movb icebp out stc adc pushq sub (bad) adc rcll shrb push out ds and scas xchg int3 cs (bad) sub pop pop sbb jmpq (bad) movsl mov (bad) lods ja hlt adc (bad) xor cmpsl pop (bad) jb lods notl xchg test (bad) (bad) add lods nop mov xorl and fadds loopne rex.WX mov xor lret jl nop sbb (bad) lods rex repnz jrcxz stc jl cltd push idiv js xchg mov cs xchg pop test lods rex.WRXB addb mov loopne cld sbb movabs sub sub cmpsl xor (bad) imul add jl lods (bad) sbb fs push xor push pop shrl jmp scas sbbb pop data16 jle xchg ja xchg lods (bad) pop jo push add lods (bad) mov xor loope fisubl rex.RB movabs mov (bad) xchg stos int3 clc pushq mov xlat pop std xor (bad) rex.WRB add pop lods outsl jne cmc scas movabs stc mov cwtl mov loope nop (bad) (bad) (bad) jbe lods xchg xor and movsl stos stos adc xor cmp rex.WRB cs xchg push callq push stos in push sub jne push lods ss jb lret cmpsl callq mov push sar mov jmp (bad) sbb jmpq sti movslq push (bad) fsubrp push (bad) (bad) lods sbb jb in jns scas insl stc rex.RXB pop (bad) jrcxz or sub sar add fwait lods (bad) jmpq lods jl mov add (bad) pushq push jmpq sbb lods in push mov or mov add std and (bad) xchg sbb sti rex.WR hlt sbb mov enterq movabs mov rex.WRX add xlat rex.WRXB sbb (bad) stos sub mov sub adc sub lods rex.R popfq jge rex.WR fwait lods jl pop leaveq fwait sbb xchg enterq (bad) lods cwtl scas mov or lods jge int3 adc stos lods pop clc in movsl movsb and gs jle movabs pop cmp scas popfq jne (bad) rex.WXB in out (bad) and pushfq (bad) stos imul shrb rex.RX rex.R or add movabs adc lods divb mov or test (bad) mov (bad) lea test jns rex loope lods or fdivs and insl sbb mov mov movabs adc lods sbb xchg pushfq movslq rorb imul rex.RXB fsubr push movabs outsb lahf rol sbb pushq pop test jmpq lret rex.WX xlat (bad) (bad) rclb xchg out mov rex.WRB rex.R mov test mov imul cmp movabs rex xchg scas rex.R lods cmc and lret cmp jne lret (bad) outsb fcompl lea int3 rex.XB mov imul mov lods gs and sbb sbb or jg int lret mov adc sub scas jnp stc pop and mov vdivss stos xor test clc jl rex.WRX sbb and (bad) cltd (bad) in pop test rex.WR movabs ss sar add jae shrb rex.WX add sub xor mov subl rex.WRX lods jno outsl (bad) cli frstor lods adc xor scas sub xchg cld pop cmp mov mov adc (bad) int icebp leaveq xchg callq stos jo loopne mov fistpl mov mov jg pop test movsb lods (bad) add lods (bad) xchg test fildll (bad) xchg jnp and std movsl jbe sub rex.WB sub mov stc mov sarl fwait leaveq jbe outsb pushq push xor xchg fild ss rex.WB jl movsl sahf (bad) sub callq fwait sbb (bad) xchg shl adc outsb rcrb mov loop test (bad) je movsb stos rex.RXB cmpsb fdivrl jns mov xor xchg sahf push popfq (bad) push enterq repz sub (bad) rex.WRX insb pushq rep (bad) mov (bad) shrl cld pop loope pop mov and mov std fsts int3 jo (bad) sub lods lods adc outsl mov push adc (bad) icebp sub decl fiadd test cmp (bad) scas add out jl jno pushfq rex.RB es cmpsb xchg (bad) rex.RXB pop stc pop in mov push lods scas xchg mov lahf orl sarl push lea fistp pop test roll leaveq movabs pop rex.B (bad) imul rex gs (bad) mov (bad) fprem push repnz mov int3 retq fldcw int hlt push loopne push (bad) sub retq add cmp cmp loop xchg (bad) (bad) push xor pop add jl int3 lods lods vcvtps2pd idivl rex.R mov (bad) fwait sub jmpq icebp cwtl sbb int3 sbb lods pushfq jne outsl or (bad) lods (bad) jo (bad) (bad) (bad) sbb lods sub test (bad) lret lods es (bad) sarb rex.B sub jbe and add lods faddl cmp jle adc movabs or sahf rex.XB mov outsb cwtl and xchg mov sub adc andl mov add out pop adc xchg or je test push (bad) data16 (bad) sbb mov fstpl test fbstp sub sahf cmpsb int3 mov rex.W rex.XB cmp sub icebp repnz pushq sbb (bad) xor adc sub add fiaddl repnz cld popfq jb in xchg mov (bad) in movabs lahf cmp and or mov jg rcr adc (bad) and movabs loopne in cld xor mov rex jns in callq in mov or add je (bad) loope (bad) mov (bad) pushfq movabs adc callq (bad) (bad) shlb rex.RX in pushq stos in out mov imul or fnstcw rcl scas adc cli sbb sub mov jmpq ja (bad) fnstenv test (bad) and stos push xchg cmp icebp retq stos rex.WRX rex.RX pop lods mov js ja nop sub repnz sahf cmp rex.RXB pop mov or jbe scas pop jae add scas (bad) and data16 hlt and movabs stc rex.WRX in sub outsl lods mov fs ss cli and sbb sub pushq (bad) cmpsl icebp (bad) stos (bad) mov pop lahf js andl mov imull push fwait lods sbb gs scas pushq sub mov ja mov mov movsb xlat rclb lods adc clc jge mov mov mov (bad) xor sub jp neg or hlt stos xchg or fildll lods lahf out xchg rex.RX scas movabs mov cmp xor (bad) xor lods leaveq cmp sarl add mov test rex.WRXB jle lods pop lods fisubr (bad) nop (bad) insb in sbbl insl enterq (bad) cmp and loope out mov add in sub push mov dec enterq sti (bad) lods mov shrb mov rorl test je xor lods sub jns rex.RXB lods xor mov sbb fmulp retq (bad) pushq mov scas rex.WR callq jge xor jbe pushfq test cmp xor in movsb pushq (bad) imul lods and rolb mov lods test jrcxz fidiv mov out (bad) out lods and fsubrs movslq pushq movsl mov (bad) out pop xor jle scas lods shrb stc divb cmp insl cmp lods mov (bad) pop sub outsl (bad) int stc pop adc rex.XB rex.WXB lods cmp cmp rcll rex.RB pop in push mov insb jg mov movabs rex.WB sbb (bad) add mov sbb lods sbb xchg mov push lods movsb fsts pushq xchg (bad) (bad) in (bad) pop mov rex.B sub add stos pop and movabs (bad) rex.W test (bad) (bad) rex.RXB cmp jne lods ficomp movabs (bad) ffree sbb (bad) js test pushq int loopne sub (bad) mov leaveq (bad) fildll push fsubrl mov stc (bad) and xlat sub (bad) sbb (bad) (bad) mov test movsl cs push sub rex add jns xchg (bad) rex.WXB pop lods push jmp loop mov pop lods lret push in xchg cmp rex.WRX rex.WRXB lods cmc sbb idiv movsb jrcxz stos popfq sub (bad) sbb movslq sub adc cmp shrl add test faddl jno mov push lret retq enterq subl outsb and (bad) adc sub pop sbb lods icebp clc ds rex.WR pop lods push pop (bad) xchg jo rcrb ja lea xor (bad) adc loop or std clc mov add sub pushfq add mov cltd in cmp add int lret lahf sahf xchg lods mov retq mov push sbb mov (bad) mov sub jnp outsb or pop lods stc (bad) adc push sub pop push mov fwait rex.X jno (bad) outsb and (bad) retq rex.WRX adc movabs adc mov imul lods test sbb lods test jg cmp mov rex.WRXB test or rex.B adc (bad) shll rex.XB fs and lret mov loope lods pushq repnz test sub or mov rex.R add add lods xlat cmp or addr32 retq vmulpd mov stc int3 lock (bad) (bad) xchg jbe sub add mov mov test incb ss lods movsb xor stos rcrb cmp cmp or xor retq mov out and callq cs shlb adc lods jmpq out stc test xlat shll movabs jl ja xor mov cld cmp rex.R lods movabs test rex add cmp mov cmp sub ds lods adc pop xorl gs in mov enterq (bad) add mov (bad) pushfq mov fsubs xor mov or jl and add mov rolb addr32 test cmp lahf or paddsb or movabs rex.WRX nop cmp mov scas cltd and or (bad) jmpq rcr jp sbb lods ror mov movslq sbb rex.B mov outsb jge leaveq pop (bad) outsl mov adc outsl iret add jne mov (bad) in xor repz movabs mov lods jge sbb sti mov (bad) (bad) shrb adc xor cltd or jle lods jno lods (bad) je rex.WRXB sub movslq in imul and jp out nop (bad) sarl push xor in jrcxz fbld (bad) or rex.WRX retq mov rex push fnstenv push lods ficompl (bad) retq movsb rex.WB xor mov mov rex.WX (bad) lods pop scas sahf pop pop repz mov int stos (bad) in outsl mov retq cs callq insb push lods (bad) orb or pushfq pushq jrcxz cli pop test or jno popfq (bad) and mov pop scas in fs data16 rex.RXB int3 xchg jo sub add clc lods pop sub mov test fild popq mov lock (bad) (bad) cli shrl mov sub xchg xchg mov sti repz xchg lods push cmp xlat loop fwait scas ja mov gs int int incl jl lods or movsl (bad) sub cmp jrcxz lods subl (bad) sub (bad) xor jp rex.WB scas sub and jno pop adc movabs add or mov scas jns sbb js movb loope rex.WRXB lods andl (bad) fucomip pushq lods mov fmuls (bad) out roll orl (bad) sub sub es jb rcl mov mov movl js pop scas and adc (bad) outsb in adc (bad) add (bad) in adc test rex.WB xor in rex.WR xorl xor insb mov in jle add xor add and movsb shll rex.WB outsb nop rclb xlat lods or movsb sbb pop cld jmpq mov lret cmp lods lods cmp (bad) sbb outsl mov notb (bad) lods fwait jnp or (bad) lods (bad) sub cmpsl hlt (bad) cmp jmp movslq cld (bad) (bad) xchg subb rorl (bad) (bad) test lret mov or fdivrs scas pop jle enterq rex outsl mov xor rex.B movsb imul lods mov outsb (bad) hlt lods vxorps cld and (bad) lods cmpsb jl fbstp or xchg sahf and sub fidiv rex.W rcrl sub rex.B rex.WX sub adc retq jl faddl int mov (bad) cld or sahf lods in cltd mov lods push rex.WRX rex.X jp lods add jbe retq rex.WXB cmp (bad) xchg xchg (bad) (bad) repz fldcw sub repz lods (bad) sub (bad) stc rex.W subb rex outsb xchg jrcxz rex.WXB sub rex.B mov add mov mov add lahf lods mov (bad) and movabs stc sub lret jg scas stos cmp pop cli xor lods xor rex.WRX rex.RXB (bad) jo pop (bad) in and (bad) lods je sub jmp (bad) xchg std mov test xor xchg lods loop ss sbbl (bad) xor retq lods add popfq sub sub or (bad) repnz push lods jrcxz lea sub mov (bad) pop add or lahf or scas push jp mov or rex.WRB fidiv push mov enterq (bad) lods nop or test clc push lods cmpsl xchg ss test or pushq sti (bad) test mov jb (bad) or mov fsubs xchg sahf (bad) rex.WR data16 in fcoml rex.WX sbb mov callq scas movsb stos outsl or int cmp mov lahf notb lods rclb (bad) pop sub cld sub scas xchg mov int rex.WX rex.WR (bad) movabs (bad) test pushfq add cwtl jns add fs push (bad) mov adcb lods int3 mov pop or orb movslq sbb lods stc (bad) clc mov pop jno sbb sti enterq jnp mov or push out movsl mov lods sub xor cmpsb mov (bad) or (bad) je loope outsb mov int3 pushq (bad) movsb iret lods xchg test lods push sub out lods negb adc (bad) jrcxz leaveq callq or ja xchg lods repz adc rex.W cli cmp sub jge rex.XB adc std add xchg (bad) outsl (bad) sbb scas movabs jl out cmp lods jmp adc xlat idivb (bad) and sub add int3 (bad) mov in test ficoml cmp sub sub (bad) lret cmp cld jne outsl adc (bad) jmp movsl xchg ja (bad) lods movslq sub jg add lret jne test in ds mov adc xchg (bad) sub jae or pop lods xlat iret cmc cs mov lods jne xchg shrl (bad) (bad) sti adc (bad) jrcxz fucomi rex.WR lods cmpsb loop (bad) (bad) xchg lods xor or movabs rex.WRXB imul (bad) or and hlt lods sub (bad) and mov mov add rex.WX push lods (bad) or pop rex.WRB rex.RXB rex.WB ds pop (bad) sbb imul xchg fiadd xor mov xchg rol add mov push rex.X lods insl lret xchg test jge mov lret add xchg pop (bad) lods mov add lods leaveq xor xor jp sarl and (bad) xchg xlat scas in or mov jns clc and sbb nop (bad) insb subl test mov mov xchg jp pushfq lods enterq rex.WR sub fucomi fisub pop rex.W rcll repz push lods movabs shrl lret (bad) movabs (bad) sahf mov (bad) movsl jno shlb xchg (bad) jge lea insb jbe retq adc add nop rex.X lods pushfq adc je scas (bad) cmp lods pop add (bad) mov in jmp rex.WRB cmpsl fsub adc jnp (bad) adc (bad) lods or imul (bad) jne lods xchg stos sahf jp std pop in (bad) push stos js repz rex.X rex.WRX je hlt add (bad) outsl (bad) mov add adc sub jo rex.RX (bad) out mov xchg popfq scas jmpq lods addr32 fcos or pop sub fbld adc callq movslq insl outsb sub jae fsubrl test xchg int3 sub mov lods or test std retq sub sub rex.X and jg lods add je shl ds mov movsb jb and (bad) imulb sbb or mov loop nop add xchg (bad) test (bad) (bad) movsb (bad) data16 insb movsb movabs (bad) (bad) fwait pop mov shll cld js lods and pushfq mov adc lods je (bad) retq fwait popfq (bad) in cwtl jp add mov jbe lods stos rex.WR andps xchg mov callq cld adc lods stos movsb cmc rcr fldt sub (bad) pop sub movabs cmp sbb fstl sub stos jle adc rex.RX and in test sub (bad) (bad) out lods enterq out mov (bad) je imul andb cld rex.WR (bad) enterq scas sub rex.RXB hlt and and fdivs insb sbbl cs (bad) mov sub mov retq stos (bad) cmpsb jb lods cld adc fildl data16 xor cmp or cs icebp scas mov sbb in (bad) jle mov shrb (bad) iret scas mov jmpq (bad) (bad) lods in fwait ss in sbb je andb (bad) jnp (bad) sub and xor in rex.RB outsb (bad) cld std sbb sub adc xchg adc jo fiaddl cwtl adc rex.WXB rex.WR fcompl mov adc enterq rex.WRXB loop xor xor and (bad) mov add leaveq lods int3 rex.WR adc or incl cwtl retq stos lock leaveq or lods add (bad) hlt (bad) cmc movabs add imul lods cmpsb add xor sbb sarl leaveq lods shr (bad) or pop ss iret shl loope lods andl xor lods fisubr popfq fwait cwtl (bad) nop lods ljmp movsl enterq lods adc and shll retq xchg (bad) rex.WX jb (bad) sbb lods movabs jge ds mov xchg sub xlat rex.R rex.WXB add int3 (bad) sysenter pop sbb xchg insb sti (bad) pushq scas rex.X (bad) mov insl mov (bad) pop int3 in mov ss lods (bad) cmp jb mov pop lods imull (bad) clc iret rex.R lods cmp imul sbb (bad) rex.B lods lods out xor vdivss mov mov lods xor or adc or fwait cmp sub scas imul push out lods jb cmp pushq xor mov rolb xchg hlt repz stos lret lods rex.WR mov movabs (bad) xorb cld sahf xorl sub je xchg in jb lods pop adc sar lods lock mov xor test jae add sub cmp addr32 subl (bad) data16 (bad) jg push faddp lods ja adc js (bad) mov jmpq scas push lods and add movabs (bad) repz test and (bad) xchg mov or ror rex.R movabs sub xchg mov cmp in lods rex.WRX and or and cmp xchg lock movabs xlat in (bad) add out mov jge retq rex.RB fisubrl and shll stos retq scas rex.WR push repz jo enterq sub jmp mov callq loop (bad) sbb fisttpl stos retq mov rex.RX cmpsl lods test retq rex.RXB stc xlat lods xchg (bad) jrcxz movabs xchg test or cld stos scas ffree (bad) insb insb rex.W mov xor stos sub ss rex.R rex.WX test xchg push data16 int3 mov scas add ja jnp lods sub cs rex.RXB test mov mov ja scas mov popfq pushq and (bad) movsl out lods and shrl in xchg js shrd mov test cmp mov pop lods (bad) loopne outsw sbb xlat jbe xchg xchg (bad) (bad) rcr lods repz mov es cltd lods test jp (bad) (bad) sbb xor fcmovnb pop icebp mov (bad) scas lods xor jl jnp lods or xor (bad) xor lods sbb (bad) data16 mov out movabs rex.WR decb test add mov and fcompl scas shrl outsb xchg or rex fwait mov lods pushfq int3 out repnz xchg add test or std lret xchg rex.WX retq lods xlat ds sbb jl enterq (bad) movsb fidivl or cmc push xchg push xlat test sub pop pushq imulb cmp sbb sahf or movabs cli (bad) lods (bad) sbb jge jo lods js movabs mov (bad) adc pop adc js pop lods push nop rex.RB rorl rolb jp sub or mov (bad) jle add movslq lods rex.B fwait mov jae mov rex.WX lods mov sbb (bad) mov (bad) pushq enterq std fdivs outsb mov stos rex.WX xchg rex.XB sub insb mov lods repz (bad) mov rex.WRX or pushq retq mov jl cmc (bad) (bad) mov cwtl or rex.W (bad) (bad) mov out imul je xchg (bad) int or (bad) insl pop (bad) scas ja cltd mov rex.XB gs jno rex rex.WRXB xor xor (bad) loopne (bad) lret push and cmp pop jns retq and or or test mov (bad) push fisubr jp rex.RXB add lods mov rex.X fstpl fsubrs mov lods icebp out (bad) xor fldcw fwait xor mov test stos or xor add scas int imul lods js add rdpmc lods test scas cmpsb test (bad) sbb fmuls mov lods sbb mov jl movabs mov mov in mov (bad) lods fnstenv scas cmp in cmpsb lret loopne rex.XB out adc jg rcll fiadd rex.W fstps enterq ja pop rex.RB fcomi lods cltd jg rex.WR add adc enterq (bad) flds retq and cmc adc (bad) out gs stos test (bad) rex.WR sbb popfq sti adc test movabs rex.WXB push cmpsl scas add (bad) (bad) (bad) sub jo stc sarb lods jge adc jl add adc rex.WX xor lods enterq scas jo (bad) lods iret int and outsl xor mov cmp lods hlt cmpsl jmpq (bad) sahf xor xchg mov (bad) vpshufd ss jnp lods mov (bad) movsl enterq jg (bad) mov rex.XB rex.WXB rex.WRXB ds in lods rex.WX xchg lock int3 jl test int (bad) leaveq (bad) scas lods push (bad) and (bad) (bad) mov cmpsl (bad) xchg xchg lahf adc mov add mov mov cmc repnz sub mov sub (bad) je (bad) lods test test mov mov rex.WXB (bad) (bad) rex.B rex.WB movabs lock scas cmc push imul push sub mov or or in adc int push movsl mov or lods or pop rex.R or or lods add lret rex.WRX retq mov add retq cmpsl sbb sub pop rex.R xor (bad) rex.WXB lods mov pushq subb hlt jo mov loop in sbb lods test and xor popfq imul fwait je xchg xor movabs cltd (bad) adc repz pushq jnp jo rex.XB (bad) hlt (bad) mov movabs leaveq je rex.WRX in xchg std clc decl mov fwait pop (bad) mov movabs lods pop (bad) ja mov test lock adc sub (bad) xlat rex.WR mov xchg lods test lret mov callq movabs scas xchg push adc mov movabs jmp (bad) or adc (bad) sbb lods or push movsb lods (bad) (bad) push mov pop jo test jmp stos cmpsq rex.WRXB cwtl lahf lods cmc test stos mov rex.WRB lods fs push pop vcvttsd2si adc cmp scas cmp rcrb xor ror test push iret xchg pushfq sub leaveq jp xlat (bad) jg addr32 fisttpll shrl add test shrb and (bad) push icebp scas data16 lods (bad) xchg cltd gs jae test mov jle stc inc jmpq lods idiv add cltd mov lods cmpsl xchg rex.B movabs pop (bad) lock cwtl sbb lods jmpq pop test pop xchg in cmp fwait rex.RB or rolb push int3 adc (bad) stos sbb ja (bad) mov rex.B repz retq movabs fstpt rex.WRXB cmp (bad) add (bad) or cmp fimull sub cli jl add leaveq loopne fwait mov sbb and sub rex.R lods stc adc sbb cmp and add out add (bad) popfq sub adc fnstsw fsubs repnz mov imul mov pop mov pop mov (bad) data16 insb loop and imul rex and mov jno mov out cmp push scas (bad) (bad) adc loope je movabs jnp push cmp mov xchg in xchg xchg je push in mov (bad) test lods cmpsl (bad) mov rex.WRB (bad) pop ss sub (bad) imul add sbb mov mov test rex.RXB rex.RXB xchg jo mov (bad) sbb int3 js mov movslq jbe (bad) imul pop lods clc enterq pushfq mov (bad) fiadd lods callq xor sbb sub (bad) mov enterq lods pop rcll out (bad) jmp cmpsb insb jnp mov (bad) pop add lods adc hlt std xor pop stos mov lret sub rcll mov jmpq or rcl sbb rex.B sbb mov xchg nop sbb rex.WXB rex.B stos (bad) xchg cmp cmp rex.WR cmp (bad) vxorps jae add lods xchg rex.X (bad) or lods mov mov iret xor stos stos sub mov fs pop lods push xor rex.XB lret cmp sahf (bad) (bad) sti mov test (bad) add xchg (bad) mov test mov adc xor mov callq lock fstps sbb outsb mov popfq cmpsb xlat adc movabs sbb js (bad) xchg ljmp pop sub rol (bad) mov sub test xor cmp insl stos int3 jmpq test lods mov je scas lods (bad) pushq stc mov pop je mov fs retq (bad) cmp lods ja,pt sqrtps clc mov scas mov (bad) scas outsl mov adc lock je xchg in mov and mov scas or cli adc or (bad) jmp retq orb movabs imull lods scas jmp sub outsb test (bad) je movsb jo mov mov and push cmc xchg cld xor (bad) test sbb pop mov cs callq jl jmpq (bad) mov mov cltd in leaveq pushq xchg test lock mov scas imul adc (bad) mov and mov imul xchg lock jle repz (bad) fcmovbe (bad) (bad) pop roll lods mov mov leaveq lock lods (bad) in pop sbb xor lods rcrl testb jb leaveq pop pushfq push lods outsl xor mov (bad) sti cmp sub mov cld (bad) int jl (bad) (bad) rex.WRXB ss xchg add scas fdivrl pop (bad) xor pop and lods mov add pop lods clc jnp gs xchg retq xlat fs insl mov mov lahf rex.X xor lods lods xchg pop sub in mov in (bad) mov jnp cli scas mov rex.XB sbb (bad) movsb pop cmpl rex.RXB lods movabs pushq (bad) imul lods push scas pop add jae mov fisubr lods sub mov rex.WRB repz retq (bad) mov xor movabs add pop lods sbb mov rex.RX xor xor mov or sub imul fwait sahf rclb push jns (bad) nop jo sbbl cwtl jb sbb scas shr mov rex.RB lea lods (bad) shrb shrl rclb cmpsl shlb in lods (bad) jg jge insb pop (bad) cmp mov mov cmp stc (bad) repz insb (bad) cmc sub lret std rex.XB mov mov test popq and fldl scas (bad) rcr (bad) in rex.RXB insl leaveq add cmp cmpl movsl mov sti (bad) sub rex.WB imul insb (bad) rcrb test in adc mov cmp pushq lods jbe xor lods adc pop jmpq rex.WRXB push icebp and lods mov add xchg data16 jb ja (bad) test adc jmp addb sbb jle mov (bad) jnp cmp cmp or popfq lods (bad) mov insb clc jl (bad) (bad) rcrl fwait or mov roll ficoml mov cmc and jae cmove int3 rex.WR xchg xchg movabs rex.WX rex.WRXB and in ja (bad) rex.WR (bad) lods cmpsb adc pop mov fwait jmp movabs hlt js adc cmp pop mov adc icebp xor hlt cwtl out lods test rex.WRB rex.R loopne sub pop rex.RXB or orb lods cltd js pop leaveq insb mov sti rex.WR rex.R movabs lods add fmul hlt mov imul (bad) rex.R rex.RXB mov add lods sahf out mov fnstsw push lods sub (bad) (bad) test add iret sbb pushfq ljmp rex.WB movabs jge xlat scas mov sub sahf sub push iret (bad) fsubrl (bad) mov rex.RX push stos pushq fnstenv cmp cmp imul mov sahf (bad) or lods jmp insl (bad) rex.WX rex.W and (bad) popfq out lods mov rolb lods js (bad) sub xor movsl rex.B rex.WB repz add or (bad) xorl push jo jrcxz cmp adc mov (bad) subb adc lods jmpq cs jne movabs adc jrcxz movabs es in leaveq cld pushq push pop lods rex.WX and movslq rex.WB out (bad) int3 add scas movabs lods cmpsb cmp adc (bad) cltd mov shrl test int3 out mov xchg sub (bad) scas xor lcall stos pop rex.X lods clc xor or lods cltd mov cs (bad) shrl mov cmp lods push movabs or add sub lods loope movsl push add sti xor lods pop mov scas lods nop xor stos xchg xchg fiaddl mov ficomp xor jne mov lods sbb (bad) clc (bad) lods fsts xchg xor jbe (bad) lods lahf add repz sbb lods jge (bad) xor data16 (bad) (bad) push rex.RXB rex.RB jbe mov and xchg mov mov jns lods fs (bad) sub cmp hlt fisttpl sbb stos imull stc rex mov in enterq fmull sub jne add mov sub movsl lods enterq scas mov jrcxz mov lods lahf jb (bad) (bad) stos rex fisttp cmp sbb sub sahf cwtl add (bad) lods push (bad) jg mov pop push enterq pushq lods movsl adc (bad) lods sub add (bad) cld rex.RX jbe (bad) rex.WRXB (bad) jle mov jnp js out shll outsl (bad) push insl (bad) sahf (bad) mov (bad) push fwait lods adc mov xor push movsb and xor lea stos ljmp adc rcl mov jns stos out lahf mov lods push ss nop (bad) fnclex scas je rex.WB (bad) xor callq lods pop mov ficoml mov xchg jrcxz or (bad) sti xor pushq out xlat lods jg hlt (bad) (bad) or shrb mov scas mov pop es jnp add roll rex.X jb or shlb cmp xchg rex.WXB rex.WRX rex.WRXB cwtl pop es adc mov addr32 lods add (bad) mov sbb (bad) in mov jno adc movabs and lods fwait xchg ja mov add and sbb (bad) (bad) lods mov (bad) xlat push lods cmp in insb lock xchg (bad) rep (bad) push jno (bad) sarl jge cltd sub mov adcl xchg or out sbb jae idiv pop (bad) lods sub mov (bad) adc mov shll popq xchg lods mov mov jle lods std mov (bad) cli out ss scas popfq mov sub xor mov (bad) retq mov fsubrl mov ja lods and iret decl sub fistpll leaveq movabs lahf mov fs lret mov rex.B test (bad) push xlat (bad) clc jae mov mov add (bad) jbe and cwtl mov movabs shrl in (bad) xchg callq (bad) adc rex.R (bad) (bad) (bad) jge outsb and lods in loop mov (bad) add xorb cmp test lods (bad) (bad) sub adc test xor jnp je jnp es ja mov (bad) stc lods clc (bad) cmc sbb gs (bad) jmp (bad) rex.RXB (bad) (bad) rex.X insb (bad) cmpsb push (bad) jle scas pop jle rex retq test adc callq pop lods sub (bad) rclb rex.X mov scas adc (bad) cmp cs and add and or (bad) mov xchg fidivrl pushq pop jnp movabs fldenv (bad) add rex.W mov sub insl test sub adcl fisubr mov or out out lods scas (bad) rex.WR movsb jns movsl pushq lods jae clc vmovddup add sub jbe rex.WRX scas mov icebp orl adc nop add mov paddb jmpq adc jge pop movabs mov movslq roll push mov rex.RB mulb (bad) cmc repz test (bad) sub jo sub (bad) rcll xlat xor mov sub lods jp xchg rex.WR sbb in push cld shrb movabs mov stos fidivr fldl in and (bad) jb,pn rex.WB lock scas (bad) lods (bad) (bad) push sbb (bad) lods or or or cmp rcl xchg insl movabs scas mov loope insl faddl hlt cld test rex.WRX pop sbb cli jp (bad) xor mov addr32 lret sahf in sub cmc rex.WX movabs jp ss jb lods mov je pop xchg rex cmpsb (bad) rex.XB rex.WRB retq movabs movsb lret lods in movabs retq rex lods mov mov sub cmp rex.W bnd adc lods rex.WRB ds or sbb cli jae rex setle retq rex.RX jb mov outsl add clc in stos fwait rex.WX jp lods cmpsl push or (bad) cmpsb imul xchg mov mov movabs (bad) rex.RXB loope and test and pop mov jmpq push fs test rex.B es or jns lods (bad) cmpsb add insb movslq stos jge mov xchg cmp rex.RB add lods movabs push rex.WB mov in rex.WR js sub fstl add add sti stos mov (bad) or stos cmp mov movabs mov push jg loopne jne sub callq movabs add jo stc mov sub sub fmulp lods sti out movabs loopne in imul nop lods mov loop pushq lods (bad) sahf je xor div adc pop stos cs fwait lret movsb (bad) shll sub cmp rol sbb (bad) nop leaveq add (bad) movabs and lods movabs scas add (bad) loopne push jmpq cmp stos movslq hlt xchg int3 rex.RXB sub rex.WR add (bad) mov mov rex.WXB cmp jo (bad) lods (bad) (bad) xor icebp in lret (bad) lods insb decl and int insb mov jl adc sti outsl insb (bad) repz or pop outsl sub in mov sub add add pcmpeqb mov clc add jl lods idivq movabs mov (bad) sahf (bad) jge (bad) mov fildll rclb mov rex.WX adc (bad) callq in fdivrp cmp mov jg or (bad) negl add cli movslq notb adc sbb rex.WR loope cmp (bad) rex.WRXB push fwait outsb (bad) scas mov sub ss (bad) (bad) movabs jnp int3 mov adc xor fnop (bad) cmp lods or mov test lea cmp jb lods pop xor and cmp outsl xor jge adc xchg jmp clc pushfq ds xor sub mov xchg xor cmp cltd out rex.W mov movabs push jmp pushfq (bad) imul lods sbb cmp rex.XB insl cmpsb cli jge add rex.XB rclb mov adc adc repnz (bad) fidivr rex.WXB lods fcoms pop push mov retq mov (bad) sub fwait loopne (bad) mov xchg in pop cmp lods (bad) mov outsl jne sbb xchg cmp sbb adc rex.WX or retq sbb rex.RB lods (bad) pushfq out cmc mov cmp repnz lods adc sub test sub lods sbb push rex.WB adc cwtl lods jae ss lods cvtps2pd or cmp mov cltd fsubrl int3 rex.WRX hlt fwait callq rex.WXB push js add (bad) xchg insb lods bswap push mov xor cltd lods (bad) rex.WXB pop js (bad) pop lods add lock mov movabs je loopne repz xor (bad) sahf mov jmpq add mov int loope xor test hlt mov lock mov (bad) rex.RX xor sti (bad) mov cs rex.WRXB rex.B loope (bad) adc (bad) repnz pushq jnp rex.WRB movabs jo gs sti lods mov push mov and shrb (bad) (bad) xor jmpq sbb mov and sbb jp jns lods popfq (bad) leaveq stos (bad) mov rorb lret xchg nop (bad) lods (bad) rex.RX (bad) hlt (bad) sbb rex rex.X (bad) (bad) pushfq maxps out (bad) cld sahf (bad) or jb retq sbb lods in and and lods decl xor (bad) iret shrl xorb (bad) rex.WRB mov jl sarl mov retq clc or xchg cmpsl movabs jg faddl out add pop pushq rex.WRB pop packsswb hlt test (bad) movabs mov rcl rol jg (bad) fstps sub outsl mov pop jmpq (bad) adcb jg stos xor jb pushfq insb sub adc push loope mov rex.WB rex.WR icebp out (bad) xor ljmp sub sbb xor in (bad) jl jno loop xchg mov fsub (bad) sub jmpq xchg (bad) pop and (bad) out push lret movabs fcomip lods jne mov jrcxz fcmovnb addl (bad) vcvtss2si sbb rex.WXB and cmp fiaddl jb xacquire stc retq gs movb mov jo lret cmp adc xchg test js xchg mov stos (bad) (bad) fldl rex.RXB scas popfq adc lods push (bad) imul lret imul movabs or pop mov sub shrl fisttp lods icebp (bad) cld (bad) xchg (bad) add scas sbb jp insl jbe xor gs sub (bad) rex.WXB jo movabs jmpq and lods jl fwait (bad) repz rex.R (bad) cwtl mov (bad) or rex.RXB jb cld jo rcl cwtl (bad) stos push push rex.WB jae cmp xlat imul mov scas (bad) repz cli or lahf mov out leaveq insl mov scas shll mov and pop rcr int3 (bad) jbe imul sti adc (bad) jl and scas js (bad) sbb lahf or shrl add lahf push fcoml popfq lods xchg xchg pop movabs stos lods jns shrl sahf cs lods adc rex.WRXB movabs stos cmp lods or test rex.WRX jge push mov (bad) adc loope mov int lods xchg (bad) (bad) jmp (bad) lods rex.WR jmpq sbb testl in insl js test sti enterq mov lret or mov rex.R clc xchg jrcxz sahf jnp xorb fdivl mov push movabs mov outsb xchg sbb xor pop (bad) nop movsl movabs stos imul fldcw cli js cwtl xor out pop lods mov xchg loopne pop in incl push lods (bad) lods cs iret jo jae mov and ljmp lods (bad) loope mov lods repz stos adc stc adc scas jo adc mov jbe retq movsb scas fwait rex.RXB or psadbw push in mov jb (bad) movabs test xchg pop mov fsubrl adc (bad) sub push lods mov nop xor mov rex.RX addr32 push (bad) lods sbb mov mov sti mov (bad) hlt rex.R lods jmpq movabs shrl rex.WXB mov jle stos xchg mov (bad) adc lods add and sub pushfq add rex.X lods loopne mov cmp jno movabs in xchg cmp sub rcr rorl stc adc sbb stos adc mov xlat stc add mov repnz xchg or orl cmpsl (bad) cld rex.RXB rex.RX add add mov and add sbb jmpq jo cmp or pop popfq or sub insb rolb jnp out nop (bad) in pop and lods rex.B xchg sbb cmp add jg pop rex.RX rex.XB adc lods gs lods mov test sbb (bad) or addr32 or xchg mov adc add pop add movsb insb rex rorl add sbb lods fdivrl stos mov dec pop (bad) (bad) xchg rex.WX fidivrl add mov push (bad) sub xor (bad) in fisubrl cmp jp mov ds (bad) fwait lods xchg jg xor rex.RB xchg jge scas hlt pop sub pop (bad) jo outsl mov rcl push cmpsb (bad) mov ds rcrl cld loop retq (bad) jmpq lods adc lea and movsl mov xchg outsb lods pop nop cmp movabs outsl lret icebp and sahf sbb insb rex.WR sbb sbb int3 xchg lods callq mov xlat or xor nop pop sti rex.WR cltd (bad) movabs cld xor lods (bad) or (bad) cltq fstpl mov fwait adc lods cld or add rex.WRB (bad) lods rex.B outsl icebp xchg xor mov (bad) xor add lods jnp xchg in clc stc lea lods hlt mov cmpsl push adc cmp int movabs sti xchg pop movabs (bad) lods (bad) (bad) imul jno stos stc mov (bad) lods (bad) xchg or leaveq data16 jae movsb nop mov retq lods adc scas addr32 rex xchg jbe in jge mov pushfq stos (bad) movabs sbb lret nop adc test xor (bad) insl pop lods jbe repnz (bad) sub in nop mov (bad) mov pop idivb out or sbb (bad) or mov hlt jbe,pt sbb lods (bad) pop stos pop ss add (bad) loopne xlat (bad) push sub rex.RB mov out (bad) jg (bad) and es rex.R mov (bad) jae lods mov (bad) sub pop add in icebp fs jns mov add add jo jns (bad) lods adc pushq (bad) and callq hlt adc rex lods (bad) cmp pushq lods mov leaveq sbb cmp scas and pop lahf cmp popfq repnz pop jno jle pushfq sub mov cltd mov scas (bad) sub pop or or cmp nop retq mov retw (bad) outsl (bad) lods rex.XB push lods jno (bad) (bad) jns (bad) movabs mov jl (bad) mov in scas cltd jl cmpsl (bad) stos loope sub rex.X jo movabs sti pushq loopne push lods rex.WRB ds sarl lods sub movsbl sahf jp mov mov clc pop lods rex.W lea lods and (bad) insl adc outsl (bad) lods test scas add and or sub in cwtl add in jp lods addr32 cld cs and callq rorb cwtl sbb or mov test sti sub mov icebp rex.R fidiv rex.WXB fsubrl pushfq adc mov lock outsl retq mov mov es sub xchg in (bad) jo cmp mov lods movsl enterq add lods rex.WRX jno rex.WXB shlb movabs fs rex.XB (bad) jp rex.W sahf pushq lods (bad) leaveq jnp and add (bad) (bad) lods cmp sub pop leaveq lods (bad) adc test lods jrcxz push cmp push lock lods fsub push pop (bad) pop callq adc lods sbbl cmp (bad) rex.W in (bad) rex.RX hlt mov setb or push movabs cwtl pop (bad) xchg sbb ds scas sarl mov add rex.WRX (bad) push insb xor rex.WR ja or lods jl popfq outsl push cmpsl jo jnp mov or in sub sub (bad) cld lods fstl mov scas sbb insb (bad) iret cmc stos xlat rex.RXB mov rex.WRXB cmp jno lods sbb rex.WX lods repz and scas pushq mov fs xchg mov loopne mov xchg sub lods enterq sbb fildll mov sub sub fiaddl or add fsubrs sbb (bad) loop outsl fcompl mov and cmp jg test int out push push rex.WR test retq xor out (bad) shr (bad) test jbe stc sub insb or lods fwait imul insl lods pop cli hlt movslq cs xchg shrb push jno shll xchg lods push sbbq retq mov test push xchg sub addr32 and xor fistl xor lods sarb (bad) adc push sub cmp (bad) mov add mov fisubrl jb lods vucomisd sub enterq test lods or pushq xlat sbb push and int pop cld or pop rex.WX (bad) sarl jbe adc test in push mov xor xchg (bad) lcall add mov push and (bad) cmp lods (bad) imul lods or movabs add pop mov insb leaveq rex.RXB pushfq sbb cwtl loopne sbb lods jl xchg sbb out jb (bad) (bad) mov hlt rex.WB rcrl hlt hlt (bad) stos (bad) sti cmp stc outsl push int3 push (bad) (bad) loopne push movsl loope sub in adc xor sub mov mov and cmpsb mov xor je rex.RB push lahf (bad) push (bad) add es sti sub jmpq add cli rex.XB xchg jrcxz (bad) or (bad) cmpsb sub lea fisubl jmpq cmp xchg lret mov lods jmp pop or jo adc cmp and mov adcl (bad) rex gs sbb (bad) scas nop jrcxz add shll cmp mov out ja cwtl adc in vpunpckhdq ss jg mov xor nop in mov pop mov and cld cltd sub mov pop (bad) sbb rex.RB lods scas adc fs (bad) out rex.R pushq stc (bad) lods ror cmp addr32 and std int3 jrcxz cmp in mov shrl repnz ss rex.RX (bad) cmpsl (bad) cld and lahf mov (bad) (bad) xchg jrcxz lods or in sbb xor sbb ljmp pushq mov rex.WRX retq rorl push (bad) lods cltd mov shrb (bad) push cmp pop data16 sbb rex.X in mov outsl or fcompl lods addb mov (bad) lods movslq shrl movabs (bad) jle sbb test mov xchg (bad) cmpsl shrl imul test iret std and mov cmc (bad) js xlat mov jo mov test sub fcoml subb xchg in in sbb mov cmp lods (bad) jge push or xchg sti and push rex.RB movabs (bad) sub sub add xchg or mov scas lret rex.W xchg (bad) pushfq mov (bad) cmp adcl test or out cld popfq push fiadd and rex.RXB mov cmp xlat (bad) lods add in (bad) rex.RX sbb pop in xor stos fistp pushfq adc movabs sub fidivl lods jnp iret or nop lods jns rex.RX lods fnstsw int mov scas shrb js movsl lahf icebp mov andl rex.WX mov cmp adc in movsl popfq jle xchg int3 rex.WXB or sbb mov push sub vaddsubps movabs ja loopne in rex jns insb sbb jae and fadd jge jbe fwait test mov shrd sub (bad) stos imull adc xchg xchg cmp rex.WRXB cmpsl sahf mov lods jle xlat add jmpq xor in sbb imul lods retq mov shr loop pop lods cmp xchg mov stos fs jg sub repnz push movsb loopne lods push cmpsb retq rex.RX stos (bad) xlat scas add rex.WR rex.WX fildll xchg mov (bad) fwait sarl retq movabs fucom hlt sub test cmp lods rcrb add scas rex.R stos cmp jl (bad) sbb (bad) sub mov adc mov (bad) mov js xchg or vmulsd jg push mov mov lods leaveq je (bad) or rol addr32 jp and jae jne test rex.X (bad) xchg adc xor jmp mov cli or cmc addr32 cli xchg (bad) sub (bad) je jmp sti adc hlt cli test (bad) outsb xchg insl mov (bad) push flds clc sahf leaveq sub or add or lods in cmp vucomiss cmp cmc out (bad) lods testb jbe pushq adc (bad) stos jno callq sbb gs fwait in jb mov cld movabs add xchg adc xor clc adc loope fs movabs sbb repnz shlb adc rcrl rex.WB out and lods shr mov add out (bad) push mov outsl mov add rep lahf cmp jle int3 retq cmc jp stc xor jo add popfq xchg test sub jp lods jae cmpsl iret insl sbb lods ss sti mov movabs clc sub xchg rex.WXB lods fs lock add pop test lods outsl cmpsl mov rex.WR sbb insb (bad) mov (bad) imul jmpq sahf jns (bad) (bad) fmull out (bad) lods rex.RXB out pop lods cmp cmpsl and lods (bad) xlat xor in cli stos orb (bad) lock xor int3 insb pushq test outsl mov rex.RXB rcrb outsb (bad) lods jmpq (bad) sub stos push movsl jl cwtl out sti lods jno add cld sbb sub lods or addr32 fcompl xchg jrcxz xor fisubrl jmp out or mov imull movsb std xchg (bad) or sub (bad) xor lods scas leaveq add sub pop (bad) cmp shrl callq scas cmpsl ja adc loope sbb add movabs or add jbe adc int xor adc (bad) jne sub sar add (bad) add in mov adc movabs jbe and or rex.WRB or sub pop sub sbb rex.X leaveq xchg fsubrp test (bad) xchg pop cwtl add mov jp movabs cmp lods (bad) xor mov (bad) fsubl scas out repnz scas vcvtdq2pd push jl xor mov xlat add scas (bad) sbb cltd (bad) add and xchg test shl and gs js lods test pushq fsubrs adc sbb testb (bad) cs xchg sub rex.WR mov rex.B int sbb add mov out push and adc mov lods sbb movabs pop (bad) rex.X rex.XB sbb rex.R lods imul vpaddsw mov jmpq rex.RXB sub push enterq adc mov mov mov (bad) xor lret shrl (bad) mov test jbe (bad) fs lods xor sub cmp (bad) outsl rex.RXB xorl push lods and test je jge (bad) fbld loop or mov jg and adc pop lods popfq adc in scas fsubrl (bad) mov nop or lods out adc fs imul (bad) pop add cs lods lods push cli out in mov scas add retq or enterq js (bad) stc fxam xor xor xor (bad) lods sub rex.B jae push sub scas xchg xor repnz fs and adc and clc push int xchg lods rex.RX loop out lahf movaps lods pop jnp add (bad) mov pushq rex.WR movslq (bad) sahf js mov iret int3 lock mov pop jl (bad) jo test sbb ja pushq lock or (bad) cmc mov rex.WX rex.B jae enterq cmp mov rex.RX sarb lods push cmp rex.RB lahf mov push add fildl pushq lods out cmp sahf stos scas (bad) mov sbb and fwait jnp pop adc lahf and andb xchg flds mov icebp lods cwtl adc sbb lods test xchg and pop adc jne shll mov xchg jrcxz adc in add (bad) and movabs movsb es lods jae jbe pop rex.W (bad) decl fisttpl lods (bad) out clc (bad) xchg cwtl cmpsl es rex.RB and adc rex.WXB in movabs lret adc xor jo xchg stos or fisttp movsb mov cmp or repnz and loope add (bad) (bad) shrl callq (bad) lea scas pop mov movslq sub jnp mov shrb xchg cmovo sub lods (bad) (bad) xchg stos add jg lods rex.XB mov ja lods out js in pop add rex.WX xlat jae jo test cmp or cmp fdivrl jl lods fadds mov pushfq out sbb push cmpsl pop (bad) xchg sahf (bad) (bad) or rex.RX xchg lods or cmpsb test lods adc jne push loope (bad) pushq rcrb xchg mov fldenv lret cld mov lahf icebp rex.W push pop cwtl and or adc cmp sarl iret hlt jb adcb sbbb (bad) lods shlb sahf sub movabs jns pop xchg mov insl rex.R mov faddl mov out cmp leaveq repnz pushq jns add xor fldcw stos int3 push rex.WB enterq test pop push sbb movsb mov and or (bad) int3 scas insl push sub (bad) jb mov jrcxz jns lock mov sbb cltd sbb movsb fidivl (bad) lods (bad) jbe cmp out jne (bad) add in kmovw retq rcr in sti rex.RB xchg (bad) movabs (bad) imul rex.WR fs xor mov sbb shrl out lods (bad) rcrl add jbe jb ds cmp mov (bad) jne xor lret rex push out mov mov mov lods in addl (bad) sbb (bad) (bad) rex.WX jg test adc out (bad) xchg rex.RB adc cmp leaveq pop in movabs pushfq sahf lods push loopne (bad) (bad) xchg in lods fwait sbb jge jp or adc cmp or (bad) lods int3 cwtl xchg mov scas lods lret retq (bad) rorl sbb retq repnz sbb adc xlat cmp fisubrl leaveq (bad) lods popq outsb rex.WXB outsl (bad) cltd popfq mov in nop sbb sub (bad) jmpq cmp adc cli int3 (bad) xor leaveq cmp jns mov jae add sub or loopne shlb lods (bad) cmp in retq xchg sub adc adc rclb scas lock mov add adc cmpsl lods js (bad) mov rex.WRX shrl mov sub cmp leaveq xchg add test movabs jmp movslq (bad) jne lods stc (bad) (bad) out mov rex.WXB movsl mov (bad) test repnz jle mov sub (bad) rex.WRX mov (bad) mov fistpl jg push cmpsb adc scas rex.W scas nop (bad) lods rorl vmulps fs (bad) pushq mov sbb fsubrl pop rol mov push jmp rcl mov xchg (bad) int3 mov lods xor jg rcr sub mov imul xor loop lods jge fcoml hlt mov (bad) (bad) (bad) rex.WXB movabs rex.R sahf sub mov add pop in out sub in icebp xor adc adc jg mov cs movslq (bad) (bad) stos scas lods cmp (bad) js ficom mov rex and out in test jo cmp cld movslq push loopne data16 sub lods je mov mov retq repz adc stc retq add xor push lahf (bad) (bad) sar lea sub jbe push and loop scas mov stos sahf (bad) rex.B push rex.W repz add mov (bad) in (bad) mov rex.WB (bad) lods rex.WB adc addl xor mov in add std cmpsl adc fsubs add (bad) xor or sbb cwtl cmc mov xor lock (bad) retq fsubrl pop push hlt jae add jo movb (bad) mulb fs (bad) and mov sbb (bad) (bad) xchg xchg jl lods xchg movsb movabs rex.WB and repnz adc add mov js rex.B gs (bad) mov insl mov test pop fwait adc jns movabs sbb subl add test lods rex.B scas xchg rcrb movsb js out cmpsb mov lods (bad) pop xor (bad) popfq imulb lods push (bad) (bad) test test adc jmp scas and (bad) fwait sub add lahf sbb push lods mov add testb andb pop fadd lods int sub negb pop jb movsl sbb lods (bad) std rex.WX ficompl and jb (bad) lods movabs mov stc (bad) (bad) (bad) sub pop (bad) sub or (bad) adc nop mov lods jmpq mov rol cmp mov or sbb std push in (bad) or repnz cmpsl jl movslq insb movabs rex.WB decl lods repnz pop test loop,pn rex.WR or out add pop mov loopne jnp rex.XB lods stos mov rex.WRXB (bad) lods (bad) (bad) jb (bad) mov rex.W leaveq (bad) adc movabs imul cmc pop insb insb jno mov and outsb mov mov and push (bad) movsb (bad) or pushfq mov xchg lods out push sbb test or xor (bad) xchg stc scas jno scas mov mov out xchg cmp iret xchg push mov (bad) hlt mov mov scas lods xlat in xor lods push jbe jle andl rex.RB add sub test pushq sbb xchg divb lret rex.WRXB lea insb jne mov xor in (bad) cld hlt mov mov movslq cmp xor sub rcll adc test (bad) lods sbb sbb cmpsb jmpq jo roll sbb sti insl xchg lods movabs pop and lods lea outsl lods sub jl movsb and lods adc movslq rex.RX rex.RXB test lods int outsl xchg adcl add stc and mov lret clc cmp callq (bad) std es lods clc mov (bad) xchg stc rex.W rex.X outsl lods test gs lods add add (bad) insb leaveq lods sub jmpq (bad) outsb rex.WR sub adc scas and cwtl outsb xchg rex.RXB jne jl lods cli stos pop stos fs mov (bad) xchg xchg lods cmpsl (bad) cltd (bad) lods lods xlat mov jbe rex.WXB xchg mov test repnz pop rex.RB xchg retq repz lods mov rex.WX out jnp lods pop rex.XB lock pushq jae (bad) mov int lods int3 jne or cli stos in rex.RXB mov (bad) cmp mov xchg cld (bad) retq sub rex.WRB stos nopl out sbb jl shrl repnz movabs push pop rex.WR lods (bad) sub lods cmp (bad) mov sbb lods and xchg (bad) cs adc (bad) out sub adc (bad) in mov mov in or ror rex.RB xlat fiadd scas cli loopne out mov cmc fcmovnbe jns clc rcll pop jle and mov xor push (bad) sahf popfq and movsb mov mov lods add mov (bad) xor lret popfq pop stc repz outsb (bad) add fild lret lods jno mov mov (bad) cmp mov cmp xor adc (bad) push pmaxsw in int3 fldenv cs mov je (bad) in sub lahf rex.RXB push subl rex.WRX cmpb repnz repz pop test push xchg sub imul sahf pushfq mov rex.WRX popfq mov insb movsb sbb lods stc loope pop fnsave rex.X movabs sub lods xor push (bad) cli idivl lods fsubrs (bad) je sbb lods fimull xchg rex.RX in push mov sbb (bad) pop lods push (bad) (bad) jp or sbb (bad) xor mov add ljmp lock push push (bad) repz movsl movabs pushfq mov lahf cmp rex.R rex.W rex.WRX rex.WX lods push or mov and mov rex.WR (bad) lods leaveq xor movabs (bad) out mov jle mov mov orl movabs cmp retq xor outsb sti push faddl mov jno imul mov xchg rcrb rex.WRX mov testl (bad) add lods add push cwtl cli (bad) mov (bad) (bad) (bad) rorb xchg push negb mov xchg imul out xor jne sahf xor adc rex.X mov callq lock fwait mov adc pop test xor sub imulb pop outsb ja add pop out jp mov fbstp or jbe (bad) stos retq mov andl sub xchg andl cltd fucomip sub movabs cld xchg rex.WXB stos mov mov scas push (bad) lods cmc (bad) pop add icebp lods (bad) ds mov mov xor pop (bad) adcl adc rex.WR loop lods and push cmc (bad) (bad) add movabs retq fwait and test fwait mov cld test adc sub movabs mov mov in xor in movabs jo mov callq jne (bad) or stos hlt xchg pop retq (bad) insb mov (bad) mov fdivrs (bad) cmc jg mov in subl xchg xor mov sbb lods cwtl (bad) sbb lods sbb (bad) and add movabs or lods (bad) scas (bad) rex.WRB mov push int3 shrl xchg lods movabs or movabs sub sub lods jns (bad) or lret mov sub sbb lods or insb rex.WR (bad) outsb sbb xor scas or cmpsl mov (bad) and retq data16 cmpsb mov rex.X lock xchg sub loope mov (bad) hlt scas imul cmp mov lock sti f2xm1 (bad) add rex.WR stc pushq lods mov xchg movsl lods xor cmpsb ss jg lods push stos (bad) pushfq push pop jl lods (bad) hlt lahf mov (bad) gs out repnz outsb lods shld add (bad) movabs jmpq rex.WRB scas or callq shlb rex mov xor (bad) jae repnz fucomp pop int3 push shr int3 jb repz lods mov rex.WR rex.RX popq sbb sub int xor mov sub xor repnz (bad) (bad) and lods jl movabs fadd mov cwtl cmpsb lods jp rex.RXB and pushq lods rex.R adc (bad) mov and mov in jns mov cmp movabs rex.WR and jb lods (bad) pushq adc (bad) lods or lahf jnp cltq mov sub xlat std in loop and sub test adc fstl rex.WRB (bad) cmp movslq rex.WRXB mov mov movsl (bad) rex.WXB pushq sbb stos pop (bad) cmp or xor pop sub pop lods mov rex.RXB test stos lods cmpsb in or scas push pop outsl (bad) jg push (bad) mov xor push leaveq imul movabs or jno out sbb test mov sub cmc imul insl lods rex.X callq sub frstor mov popfq cs push lods or sub lods clc adc mov sbb mov sub lods in mov lods jle fsubl cltd (bad) pop loopne lret pop (bad) (bad) jg scas xchg pop orl rex.XB xor lods adc in cmpb or fs adc movabs and (bad) push jmp clc push lock retq pop cmp mov adc rcrl stos mov add mov (bad) ficoml (bad) lods rex.RXB push (bad) (bad) pop (bad) stos pop fs jno pop cmp or cmc xchg fisubr (bad) addr32 rex.RXB (bad) mov sub add pop (bad) ficomp lods fucomi movsb sub xor (bad) je jmp test andl fwait jg in loop je enterq lods fisttpll cmp (bad) mov jnp fistpll movabs jo (bad) mov (bad) cs cmp lods xchg js mov lods (bad) fstpt movabs or repz mov mulb push pop test mov xor xchg clc add (bad) sub xor frstor jle cld in sar mov imul (bad) cltd push sub movslq (bad) xor in mov retq xchg xchg or rex.X (bad) fmull xchg sarb cltd rex.X pop mov (bad) (bad) andl mov (bad) rex.WRXB jno insb nop sub insl jmp pop divl push test lock (bad) mov adc out add mov lret outsb xor push pop xchg pushfq insl (bad) lods sbb repz xchg xlat je lods cmp (bad) mov lret lods rex.WRX lea rex.WX lcall rex.XB lods mov cmpsb retq rex.W jnp int3 lods mov jb (bad) test jae movabs jg iret xchg push rex.WRX rex.XB je lret mov jge stos mov testl (bad) lods repz hlt pop (bad) (bad) xor add mov jns sub pop or jge push jbe xchg or fild xchg (bad) lods sub (bad) push lods cmp (bad) outsl insb icebp out adc xor rcll mov rex.WB loopne pop lods pop rcll outsb add iret rex.WRX sarb cmpl jbe add (bad) lock and outsb pop mov mov pop rcl mov (bad) (bad) (bad) cmp lods ss xlat orl (bad) enterq stos mov movslq hlt jo ja rex.RXB enterq xchg mov pop or std (bad) std push (bad) (bad) mov sahf and add decb or clc movsb mov sub (bad) test (bad) mov lods xchg adc (bad) rcr mov lret mov clc lods icebp nop adc lods pop jb (bad) ds mov incl mov (bad) pmovmskb in lods movsl repnz add (bad) lods push test cmp sbb retq callq (bad) cmc iret scas add (bad) sub mov pushfq (bad) sbb cmp adc mov outsl (bad) sbb sti mov sahf (bad) xor enterq jns orb or mov jge or (bad) rex.X mov loop movabs pop ja shrl in add (bad) xlat icebp loope (bad) sbb movabs xchg (bad) lods mov scas jl test push lods or rex.WXB in hlt jno jo pop xchg pop adc faddp lods or js (bad) lods insb in (bad) ds mov lods es (bad) pcmpeqd lods lock add xchg push xorl movslq scas rex.R (bad) and mov movsb jne and repz lods push pushfq sub (bad) fucomi mov (bad) mov pop callq (bad) scas jrcxz js mov stc lods mov pop sbb pop sub out (bad) (bad) sub nop (bad) shrb rex.WRX (bad) lods push add sub retq icebp or mov cmp hlt or (bad) sub mov rex.WRXB imul cmp sbb jle mov fisubr xchg pushfq and mov lahf xchg (bad) pushq out retq lahf add leavew scas lods xchg fisubl ds stos adc xchg mov (bad) jmpq sub movabs xorl jns (bad) insl cs lods mov out (bad) or adc enterq lods movabs cmp cmc imul (bad) add test jbe sub mov lea cmp hlt scas lods sahf xchg stos jle mov lods movsl fcom jo sbb xlat lods (bad) mov test lock (bad) sbb lods (bad) mov cmc fcoml scas add rex.XB sbb (bad) (bad) mov mov pop sub popfq iret cmp insl (bad) movabs rex.WRX mov xchg mov (bad) movabs adc rex.WRXB lods clc jo decb scas rex.W adc rex.WX jge lods mov mov loop scas mov xor pop enterq shr out pop add mov mov test rex.RXB iret movsl mov js and lea sub mov mov cmp lret repnz cmp rex.WB rex.X (bad) cmp test sub rorb stos cld sub ss test lods jrcxz (bad) mov jg in roll stos push jbe cmp add insb (bad) lret retq cmp (bad) sbb pop (bad) (bad) add (bad) lods lea sbb mov mov lods icebp (bad) or lods fisub rex.WX adc lret jl (bad) rcll mov (bad) or cltd cli (bad) in sarl lods (bad) pop (bad) nop mov lods int3 lods push xor jae mov stos and cmp (bad) rex.WRXB lret sbb jp lods punpcklwd out lea lods retq fdivrl or jb lods (bad) or addr32 jbe icebp mov in sub rcrl lods adc add xchg sti lods (bad) sub add xchg sbb or push xchg out mov mov scas rex.WR rex.X jnp add lods retq in scas adc cmpl mov pop mov adc mov adc lods mov (bad) fbld pushq rex.R fwait movabs (bad) (bad) (bad) lods mov retq mov lods leaveq movabs or stc rex.R mov outsl cmp sbb rcl cmp pop sub mov (bad) xchg lret (bad) scas imul pop fsubl mov mov in (bad) rolb lods jne test (bad) scas fsubrs testl decb cwtl cmpsl lret lods pop (bad) xor (bad) roll (bad) callq lods sub js jae (bad) cmp retq jo sbb adc jmp jmpq movabs (bad) sub xchg mov jge movabs rex.WX xor mov add jno mov rex.WXB add ja cmp (bad) mov pop scas (bad) sub fs fcmovnbe jmp leaveq jnp in push iret mov divb rex.RX (bad) addr32 shrb repz scas pop add sbb mov cs mov movsl adc (bad) (bad) lods jb jmpq mov mov std cmpsl rex.RX shll fisttpl addr32 cld ficoml (bad) pop sub add enterq movabs xchg int3 sbb stos push sahf (bad) mov jl (bad) sbb lods fs sub xlat lods xor push subb cmpsl jnp and and jg mov mov fadds loopne imull (bad) (bad) data16 mov lods in jne (bad) or (bad) cmc in pop insl push pop (bad) sub (bad) xchg test in sbb cmp rex.WRXB subl rex.RXB movabs retq jle mov xlat sub mov sti retq cmp sub test lea (bad) lods (bad) adc mov fisubr (bad) enterq and or in sub mov popfq leaveq test lea rex.WRX lock lods (bad) addr32 cmp sub mov add lods cmpsl enterq (bad) jnp (bad) rex.WR (bad) pushfq in pop jno mov jg mov xorb (bad) imul sbb (bad) sbb cmpsb outsl add mov jno repz add mov mov add rex.R idivl xchg rex.WR imul lods sub mov and and xlat fldcw mov iret rorl push cmp add imul push rex.W xor pushq fwait rex.RXB stos sbb (bad) or repnz ffreep push leaveq xor mov fisubrl add mov rex.XB add test (bad) xchg pop sbb xchg popfq rex rex.WRB rex.WX lahf adc movsl in clc (bad) test divl retq rex.RXB rex.R retq mov mov sbb sub (bad) jl sti adc (bad) movabs sub xor hlt or pushfq lods movsl testl retq imul shrl mov movabs fild rex.WR insb in cmp adc in lods sbb push mov (bad) movsb or cld mov pop or scas callq lods xchg repnz repz jne or movsl sub retq retq pop jns adc and sarl mov cmpsl or cmpsb movabs cmp mov shrl sbb out popfq cwtl cmp (bad) (bad) andb imul mov lods push push rex.WXB stos pushq (bad) mov fsubl mov mov rex.W fwait je push loop push rex.WRX fdivl sbb stos (bad) jbe popfq imulb pushq pushfq rex.W cwtl stos fbld pop mov lods and hlt mov iret movsl (bad) rex.W adc lods push data16 sub clc (bad) cmp negl fsubr cmc (bad) insb mov data16 retq add add callq push pop in mov or mov addr32 add lods shr (bad) sub adc mov in (bad) xor xor retq out stos lods xchg and scas shrl data16 jo pushfq nop movsl fsubr rclb stos adc imul outsl pop mov lahf xchg iret movsb (bad) out cmpsl cmp imul outsb sbb add mov add retq mull pop sbb and (bad) mov fstp or lods rex.WX repz movabs scas jle movsb cmp rol cmpsb lods rex.RB nop xor cld addl (bad) mov push (bad) pop lea mov rex.XB (bad) fnstcw callq (bad) rex.RB stos stos roll (bad) (bad) rex.RX and or (bad) lods jg pushq test imul push jg rex.RX lret int3 (bad) (bad) shrb xlat (bad) sub in stc sbb in outsl xchg cmpsb fildll scas mov roll shl mov adc ljmp (bad) jo scas mov repz (bad) pop fidivrl iret and lods push (bad) xchg jl (bad) mov movslq xchg stc push lods sbb out sbb movabs clc or jmpq (bad) rex.RXB push lock insl imulb rex.X cmp and (bad) mov jl sbb mov (bad) fstpt in imul mov in stos xchg or sub loopne stos loop mov or add mov push in movsb stos gs mov xchg push mov movabs imull test mov xor rex.B int3 pop mov sar pop subl and fadd mov cmp roll icebp (bad) sub ja sbb (bad) pop imul shlb add (bad) (bad) mov mov (bad) (bad) movsl mov xor rex.RXB jmpq lods adc pushq movabs cmpsb fs scas sbb mov lods mov repz sub sbb js mov cmp jae mov cs jo xor cwtl rcr mov lods or mov roll add xchg xchg mov rex.RXB or mov (bad) jnp rcrb sub rex.B mov scas callq mov lret jb jns movabs (bad) in fld1 rclb sti mov lods cld add movsl in scas rex.RXB jo push cmpsl in sbb sub or rex.RXB in fstps adc and incb add orb enterq xor out test rex.WB jrcxz out jns adc pop mov scas (bad) sarb rex.WRX mov mov scas mov sbb cmc pop adc push (bad) lods cmpsb (bad) popq (bad) mov (bad) add (bad) mov hlt popfq jmp cmp cwtl and jae (bad) int mov cmc (bad) sub enterq add or and (bad) lods ja jmp enterq mov (bad) fistp pop mov mov add js stos pushfq es (bad) mov enterq cmp jns lods lods (bad) pop jnp cmpsl add mov cwtl test lods int3 out rcrl rex.R xor adc mov callq sbb xchg (bad) test (bad) cmp or lods mov sbb xor rex.WR mov retq rex.WB add mov (bad) shl jp ds lods cmp mov movabs movabs sbb in loope loop lods rex.WB shr (bad) fwait xchg xor (bad) lahf mov lods (bad) popfq jp out add icebp clc mov push cld outsl sarb (bad) adc movabs fadds jae imul push gs movabs xchg lods imul or cmp sub lods add movsl lods xlat mov rex.WX idivl je rex.WR lods adc (bad) mov push sbb movsb (bad) shrl jbe rex.WX mov (bad) outsl and shll rex.WRXB fs xchg (bad) outsb retq ja rex.XB mov (bad) rex.R in jp fwait mov jno cmp lods mov (bad) sbb rex.XB or jle xchg lods rex.WRX rex.RB rcrl lahf in outsl jb rex.RXB push rex.WRB lods or or cmp stos (bad) int (bad) push xor sub cmpsl jne retq out scas (bad) lods jns jle pop (bad) outsl rex.WR mov scas rex.WXB stos add subl jns mov out sub in jp in cwtl rclb (bad) stc mov (bad) cmpsl clc sub sbbl and xchg pop lods rex.WRX rex.WRX jg int3 fdivl cmp pop or mov lods fiadd pop lret ja lods rex.R mov out and mov or jae xchg outsb rcrl jle fcomi lods xchg repnz lahf lods mov add mov sbb cmc cltd xadd in push shrl in sbb mov lods ds and xchg xchg add (bad) retq test rex.RX addl scas sub adc in (bad) divb stos mov jne movabs mov insb mov mov lods jmpq add (bad) imul push test leaveq or or (bad) js jg vmaxsd gs ds movsl hlt lret js mov or cmp fldcw cs jnp fwait (bad) loope (bad) fsubrs idivl jo lods jae repnz (bad) addr32 adc adc mov movabs scas xor loop xchg xor cmp movabs mov xchg leaveq (bad) rex.X ja rex.W xchg rex.WRX mov xor test addr32 pop lods (bad) add mov rcr cli movabs xchg iret lods fs rex.WX lods sub pop sbb out sub and (bad) sbb mov cmc push imulb push lret data16 retq test mov (bad) cmpsl lods or (bad) sub jbe add lods ds mov (bad) and (bad) nop jge insb subl mov or adc pop fisubl xor lods xor adc shrl sar and sub and lods hlt push jle test out fsubrl rex.W rex.WRXB stos (bad) push (bad) mov rex retq (bad) and lods (bad) pop movabs (bad) loopne or mulb add lods rex.WR xlat out lods (bad) nop push sub rex.B (bad) or (bad) xchg fistp mov sbb loope cmc (bad) mov (bad) hlt pop imul or mov test shll (bad) jae enterq in cs and mov pop scas lods int and mov repnz xlat in (bad) movabs addr32 pushq es sahf xchg rex.WXB xor sub (bad) mov ss sub push cwtl xchg jns lods js rex.WRB fcmovbe lock push sub mov stos lods mov pop addb (bad) cmp mov fwait cli scas rex.WR adc add insb lods sbb lods mov clc adc jmp jge lods push jbe rex.RX (bad) stos (bad) sub (bad) idivb rex.X scas (bad) lods icebp sub or pushfq fucomi and out xchg (bad) in lret pushfq retq mov lcall pop lea and out jmp lods cld (bad) pop jbe andl in test (bad) xchg lods int cld rex.XB flds retq movabs clc jnp and retq lods xor rcrb pop scas nop lods outsb rex.WR outsl xchg lods rex.R cmp jge mov cmp shrd adc xlat jns mov xchg (bad) sahf frstor subb xor (bad) sub popfq rex ss xchg loopne add rex.RX (bad) lods rex.WRX rex.R bnd lods mov loope rex.XB rex.RX or lods scas (bad) cmp push mov add lods (bad) out test push lods rex.WRB add adc xchg jbe push adc sbb mull lods movabs adc and (bad) lods and callq std lods mov mov xchg lods add cmp mov jb lret imul callq mov (bad) lods stc mov or jmp cli rcll clc push (bad) and fwait movabs cltd sub mov mov cmpsl cmc add loope add mov sub loope (bad) stos lods sti loope insl fist sub sub ficom add adc jmp (bad) cs pushq push in rex.W je mov scas insl sti (bad) out cmp xchg (bad) movslq std leaveq (bad) xchg cld pop insl rex.WRX push adc mov (bad) sub (bad) in mov lods jnp mov repz cwtl cltd or lods (bad) jg xor test lods (bad) (bad) cmc lods mov xor or sub add lods shlb (bad) movabs (bad) lods cmc pushfq scas xchg sahf callq jbe std or (bad) lret sti pop test xchg cmp test push fsubrs (bad) mov (bad) sub (bad) in (bad) movabs mov out fisttpll jge xchg icebp sub mov adc xor or rex.WR mov adc clc and cmp push lods pop rex.B cwtl add lods (bad) mov lods pop cs test push (bad) mov xor mov lods (bad) xor cmp in movabs (bad) add es add pushq jmp (bad) cmpsb and adc lret mov add xor rex.W test outsb lods jbe rex.RX insb movslq jnp lods (bad) cmp rex.WB mov je rex.RB std js mov int3 push cmp cltd movabs mov adc adc rex.WR push lods (bad) int3 jp cmpsb callq cmp mov push mov gs xor iret stos mov rex.WX adc mov xchg cltd callq mov ss outsb push adc icebp (bad) rex.RXB int scas leaveq jle cmp out rex.R push int3 pushq cmc scas movabs jnp xor repnz rex.WRXB or fsubp cld (bad) pushq mov adc ds sbb push sbb pop pushq lret sub in repz je mov adc mov movabs (bad) (bad) xchg (bad) lods fs rep mov int3 lods mov pushfq fldt fbld mov jno pushq insb pop (bad) (bad) xchg cli xor out push rex.WRB jnp lods mov (bad) faddl testb adc (bad) cmpsb sub scas icebp pop (bad) lods movabs iret jo in insb add xchg retq int3 mov fist jmp lods in or jp (bad) insl sub and mov mov cmp negb nop and lods mov sbb add jp sub adc sbb movslq mov lret sbb mov adc (bad) jbe subl (bad) adc lret test movabs fdivl stos (bad) sub jmpq rex.WXB sub (bad) (bad) fisubrl pop scas pushq mov xchg icebp or out mov lahf test (bad) callq lret (bad) pushq stos lret mov sbb lods rex.WRB jrcxz adc (bad) jp adc icebp add mov rex movabs xchg or fld mov sub xchg and add mov sub and mov push clc push (bad) lods movslq decl lods jnp fwait (bad) lea js (bad) push pop pop lods push pop mov pop (bad) add xor insb xchg scas push adc pop fstpl rex.R adc (bad) and xor pushq rex.WRB lods fsubrl shl loop mov (bad) sbb jns rep xchg (bad) cltd idiv repnz mov push (bad) notb pop add out push js lods xchg xchg pop rex.WR mov xor stos fdivrp pop rex.WRX clc nop je rex.WX sub (bad) mov test clc (bad) (bad) movabs xchg jl adc int insb sub adc pop jp xchg std push cmp jo std jge mov lods (bad) cmpsb mov int3 sbb push movabs lret in add xchg lods (bad) callq lods push rex.WX push icebp add int (bad) shrb sub sub pushfq xor popfq lods (bad) cltd xor mov mov (bad) ja cmp rex.WXB fildl test xor lods mov push add movslq test in out movsb mov or lahf clc sbb jmp and loop lods insl rex.WB sub lock lods and pop callq pop mov (bad) outsl add scas lea (bad) add mov enterq adc pushfq add push lods cmp (bad) notl xor cmpsb cmp fidivr ja out lods int3 push retq add imul (bad) fcoms lods mulb xor icebp lea sub cltd rex.W rex.RB lock add insb mov rol xchg sahf rex.X mov pop mov test rcll insb lods std cld mov mov je xor jbe adc mov sbb jmpq iret in mov rex.WRB mov mov sub cltd lret out movabs add (bad) mov cmpsb movsl or (bad) mov sub ficoml sub ss adc pop movabs xchg fcoml add (bad) popfq mov int movsl incl mov push mov in mov (bad) sbb add popfq loop in lods (bad) add hlt adc adc rex.WRB cwtl sbb or adc push iret cs jnp jnp sbb and rolb int3 outsl rex.RX cwtl incl vmptrld add stc mov cli pop clc cmp sbb outsb mov xor xor loope and sub movabs (bad) push iret enterq lods xlat rex.WX sbb xchg sbb xchg lods int3 in out jnp movabs ds (bad) cmc xchg mov sbb rex.X (bad) (bad) sub (bad) sub (bad) or add enterq lods cld or loopne mov lock rex.WR jp and lods divl cmc adc addr32 nop mov xchg sub cmpsl (bad) rex.WRX enterq adc mov test icebp popfq sbb (bad) jo movslq (bad) mov pushq movl jle mov lret pop lods xor push mov (bad) stc lods (bad) mov mov retq rex.RXB sub xorl js jmpq cmp mov cmp mov stos icebp rcrb sti push rex.WR addr32 lods and (bad) jnp rex.X xor rex.WXB mov cmpl mov adc sbb imul sub lret mov rex.XB (bad) int sbb jrcxz rcrb sti not add loopne lods sbb icebp je mov jns or sbb lods or imul xorb jl lods xchg cld sbb rex.WRB shrb (bad) adc scas rex.WXB in jg mov or rex.XB or movabs push sbb (bad) mov cs add fisttpll adc loop cmc rex.RXB jo insl (bad) mov rex.R lods add jmp rex (bad) repnz movslq in (bad) cmp mov hlt sbb enterq pop xchg imul out mov test fldlg2 add int xor or (bad) pop sbb fisubl fstp push cmc fidivr cmp (bad) push testl fimull (bad) (bad) (bad) jne jmp rex.WX (bad) mov mov (bad) mov out mov mov lods in rex.WXB andl pop in jns test (bad) xchg mov divl rex.WB lret lods (bad) mov xchg and rex.XB lods mov and xorl or (bad) mov (bad) imul push xor out sbb xchg movabs and and rex.WRB mov movabs sbb pushfq in and vxorps scas mov fistpl pop sbb movabs shrl imulb rex.RX rex.WX lods fidivl xlat xchg lret lret mov adc nop sbbl (bad) mov lods rex.WRB rex.WRX or cmp lods and mov (bad) int (bad) iret lods push rclb mov cmpsb mov mov test mov js push mov lods xchg jmpq (bad) je jnp jo ficom fdivs adc (bad) ja sbb mov (bad) jae hlt cmp (bad) lods jg and (bad) (bad) callq add mov lods rex.R rorl mov rex (bad) mov in sbb outsl cld mov mov or int3 lods (bad) xor or lods sbb and sbb movsl mov sbb push mov or sub xchg jb fcoms loope mov lock rex.WRX xor xor or mov pop cmp (bad) mov pop or iret lods mov cmp mov in pop mov imul sbb rex.RB add int3 pushfq rex.WB rex.WX xchg fisubrl or (bad) int3 or in cmp lock or lods test jg test rol rex.WRB (bad) lods mov xchg iret lods lods cwtl callq mov pop mov rex.RB adc sbb xchg sbb in jle fnop stos movslq cmp imul mov sbb and insb fnstcw cmp sbb rex.WRXB pop lods lods (bad) cmp retq decb scas nop pop subl mov shrb sub jbe and mov and mov cmp lret sbb pop cli (bad) in rex.WXB out xor xor cmp (bad) lods cltd int3 cld sbb sbbl cli lret rex.WRB xor rex lods rol xchg test push or repnz cmp shlb movslq jmp retq test mov (bad) fdiv lods movabs (bad) jo push nop pop mov (bad) mov rcl pop (bad) in std and scas hlt scas ja jnp xor jb lods mov (bad) fidivrl xchg insl pop adc adc insl lret pop divb pop lods insb (bad) in push jb leaveq mov sbb in movabs stos stos movabs icebp (bad) insl cmp xor out xchg out jae xor insb scas fdivs in sbb mov jg add (bad) in fldt mov fsub jmpq (bad) (bad) pop movabs (bad) jns (bad) cli rex.WRXB gs cld sub movabs rcll in add repnz sub add lods cmp in jg lods cmpsb (bad) rclb or mov cwtl stos rex.X pop pop (bad) insl add cmp cmp sbb es and lods (bad) adc (bad) (bad) adc movabs rex.W data16 shr rex.X (bad) (bad) lods rex.RB rex.WRX cmc fldlg2 adc lods sub mov mov xor rex.B lods lock enterq or lods xchg retq jge adc lods sub (bad) mov cmp sub lods movsl (bad) rex.R repz stos (bad) cwtl test push (bad) rex.WR lods nop sbb shrb rex.RB or xlat movabs cs sbb (bad) in sub retq sub rex.WXB xor callq stc es mov adc jae out xlat lods push cmp rex.R movabs rex.RXB xchg mov scas roll sti lods (bad) faddl jge rex.WR push mov jbe mov rex hlt (bad) test jno (bad) (bad) pop cmp in rex.WRX jg not mov retq test in pushq sub add imul lahf incb lods or sbb test jb out or sub retq xchg in rex.R push adc (bad) fs pop (bad) sbb rex (bad) push (bad) (bad) jno sbb mov and hlt (bad) lea lods jmpq stos jp cmp sbb pushfq lock mov adc fs retq mov rex cmp subl movabs iret lock movslq sub in xlat or mov lea mov (bad) jge lods sub rex.R jnp xor lret fcomps cmp lods jns sub push (bad) pop jne xchg std test in stos sbb add xchg lahf rex.WB lods movabs mov out stos pushfq sbb lea stos adc insl shll adc (bad) adc lods fcoms (bad) imul sbb notl mov or xchg adc jl mov (bad) roll sub pushfq movabs (bad) insb xlat data16 scas cli movslq fcom xchg movsl test mov fwait lods (bad) mov jae xor scas or movabs xchg repnz (bad) (bad) shll leaveq stos (bad) mov (bad) push (bad) unpcklps lahf sbb lods sbb clc fimull lods sahf sub jrcxz rex.R mov mov (bad) int3 imul cmc (bad) lods xchg add xor in stc stos rex.WX mov add gs (bad) xchg pushq clc adc lods jle outsb rex.WR retq adc and sub xchg mov push mov mov or (bad) sti int3 addr32 lods xor getsec sarb movabs (bad) (bad) (bad) es (bad) andl sti adc add clc insb or out (bad) js insb sbb jo lods mov rex.WRB mov push scas (bad) pmaxsw cmp lods movslq sbb stos adc loop (bad) add iret ja push (bad) lods cmp mov lods sbb insl mov movsb rex.RX adc cmp movabs loope (bad) mov fnop push hlt rex xchg jne test (bad) sub fldenv sbb js and (bad) mov pop movabs cmp (bad) lret sbb imull stos sbb jnp rex.WRX mov (bad) test rex.RX loopne sbb insl fadd xor je sub jo mov test retq scas rol ds lods jle,pn mov nop sub test lods scas mov jp jo xchg test (bad) insb rex.WRXB (bad) movslq rex.WB lods shrb sub fs lods or (bad) sahf mov cmpsb lods fsubrl (bad) repnz xchg cmp test jg sub lahf xchg (bad) lods sub (bad) (bad) (bad) (bad) jb mov rex.RX sub pushq add or jns pop movabs out int3 lods cmp (bad) lods out xchg (bad) repz mov test adc (bad) nop ja sub (bad) xchg and lahf or mov mov leaveq add pop xor add cmpl out (bad) xchg (bad) in je cltd mov cmc jo sub pushq add mov (bad) sahf xor int mov imul and mov sub adc jmp and sbb (bad) xor mov fs in out stos test add adc add mov lods add (bad) rex.WB lods mov xchg jge add jno stos fcmovb push (bad) xor (bad) sub insl adc (bad) fs jg lret int3 rex.B sbb cmpsl jns imul movabs popfq rex.WR data16 std adc rorb test movabs (bad) mov shl in clc cld lods cmp (bad) sbb adc cmp stos adc adc imull rex.WRXB cmp or cmc jp lods xor movsl cwtl jns fisubl rex.RB fisubr adc lods mov sbb adc add rex.R lods xchg pop mov lods (bad) mov movabs roll (bad) leaveq mov nop movabs popfq mov xor sub retq sub sbb rex.R lods (bad) or cmpsb shlb (bad) rep (bad) cmc mov rorl lock add xchg ja rex.RXB mov mov movsb in clc or sub scas sbb xchg add lods (bad) out pushq mov mov cmp and jne (bad) lods movabs rex.WRX sbb (bad) or lods (bad) mov mov orl (bad) mov mov test sub divb xlat cmp or ds pushfq ss mov rex.RX std movabs adc pop enterq mov movl push mov or xor sub lods rcl (bad) xor jnp lock fldcw scas mov xor (bad) insl lods mulb rex.WX test cli push cmp fs lods (bad) xlat (bad) jmpq sub movsl rex.WXB lods cs loop loopne test fsubrl out in xchg in mov lods sarb pop test rex.RX cs mov pop in rorl and rex.X (bad) rex.WRX xchg mov faddp int3 mov shrl pop clc jp stos rex.WRXB (bad) in out adc (bad) scas icebp and (bad) sub fmul sub sub or add movsb js (bad) mov lods in test mov push and (bad) jmpq mov sub xchg ja lods es (bad) sti movabs (bad) scas lods insl rex.RB mov (bad) xchg div lods cmp cmp (bad) sub sarb rcrb testl cmp jmp nop ja jle xor cld pushfq sldt fistpll loop lock in lods adc xchg or add xor rex.R (bad) xor and jns or cmpsl lods mov jne gs insl mov sub sub mov add fwait shrl in rcrb jmpq (bad) out lods insl xchg movabs pop mov fiadd vfnmadd213ps xor jg mov sub and (bad) xchg js jmp and (bad) sti lret jne cltd int3 in (bad) xor lods movabs xor fbstp lods outsb add out unpckhps rol xchg adc jp (bad) rolb icebp int3 xchg scas pop (bad) sub sub xor fldt sahf sti movslq clc pop out jae mov cmp cli movabs stc jae sbb jbe (bad) retq adc sbb ds (bad) jns loop jmpq outsb rex.WR lods (bad) mov (bad) test (bad) out lods movabs xchg (bad) rex.WXB xor imul sub jrcxz pop pushq clc in mov (bad) and pop pushfq (bad) mov movsb lods jb fistp add imull (bad) jae lods divb movabs rex.WRB lods (bad) jl sub add in nop or addr32 mov jne (bad) xchg rex.WR scas outsl cmp scas rex.W push in and movslq out rex.WXB add mov sub sbb shrb add rex.WRXB (bad) fwait sbb lods frstor add std or rex.WRX adc sbb rex.WR rex.RX pop shlb fidivrl lods movabs sub or and mov xchg rex.RB sbb cmpsl movsl xor lods jbe retq movabs (bad) rex.X and mov enterq sub or mov (bad) outsl scas rex.WR xchg repnz and lods jg or push popfq sub cmpsb lods xchg fbstp mov movabs mov in (bad) andl lods (bad) cmp cld callq in mov push mov (bad) add mov retq lods adc std (bad) lods pop (bad) xor es sub retq lret mov stos rex.RX sahf jp mov rcrb jg js push lea lret vfmaddps movslq mov mov mov subb (bad) xor fist ficomp lods cmp rex.WRXB xor pop shll mov mov scas and loope mov jb xor pop (bad) cwtl xchg (bad) push jbe mov cmp sub or or mov and jl mov mov push xchg (bad) mov or movabs mov add sahf xchg sbb test sub xor cli and cmp fidivl push (bad) cmp movsl rex.WRX (bad) mov inc iret (bad) pushq jnp lods push add and jae rol sub push sbb mov (bad) fiaddl xlat rex.WRB or add jrcxz movabs mov lods shlb scas mov cvttps2pi (bad) mov mov sub subl jg jp sarl (bad) cmc and or mov shrb jne imul push and in vshufps imulb outsl jl pop (bad) shrb test test mov sahf insb jnp push (bad) lods xor es cs cmp retq adc pcmpeqb lahf gs movabs fcomps rcrl rcll rex (bad) sub (bad) out retq or and (bad) jo scas subl (bad) fsubrl rcrl mov (bad) stos adc mov pop sub enterq popfq movabs mov sub movabs jl jg movabs stos sarb sub sub mov mov sub and (bad) (bad) pop sbb ds jne movabs mov stos retq loope jnp xor xchg (bad) fwait imul add fsubs lods add test mov mov sbb cmp scas (bad) mov imul (bad) in pushq lods sub cmpsl rex.WRX kmovw ffree rex.RXB lods (bad) cmp jg lods add rex.WRX add iret sti lea mov in in movslq xchg addr32 scas or or rex.RB rex.WRXB mov loop jge (bad) or ja sbb scas push fs in movslq (bad) outsl mov or (bad) sbb push lret movsl insb sub stos mov sahf in lret sub cld or jno jmp mov lods cmc flds (bad) (bad) lods jle out or testl cmc mov jmpq cli xchg loopne retq sub or lods rex.XB push pop pushfq sbbb or rex.WB sub stos pop xchg and lods hlt cld or rex.X mov or es (bad) lods pop sub pop tzcnt xor fistpll xorl lods shr stos (bad) jl mov and (bad) mov add jb xchg sub rex.RX cltd rolb sbb movabs pop shrl sub stos sarb mov movabs (bad) pop push sub fs lods rex.RX fnstcw xchg (bad) lods mov std adc push xchg jb out mov sbb sub fwait or ffree out add rex.RX add mov xchg insb push push popfq je adc rolb lret fcomp scas popfq or insl push mov cmp sbb (bad) ss leaveq (bad) (bad) test (bad) jmp (bad) outsb test in lock rex.RX lods rex sti fcomps test lods int3 and jle push mov cltd (bad) vaddss lods rex.WRXB xchg movsb pushfq fdivrs adc stos mov iret (bad) sub (bad) xchg (bad) lods jns fisttpl cld sbb xchg (bad) lret movslq (bad) rex.R pop (bad) xor jrcxz stc mov push mov es jb pop add scas pop sbb in in add cmp test cld outsl (bad) mov lods icebp js add pop movabs retq lods (bad) cmp (bad) pop leaveq mov in rcl cmp lods ljmp sbb jge add (bad) jno sub loop clc mov (bad) lods (bad) adc sbb test pop add xor rex.XB enterq mov lods cltd add rex.WX retq mov cmpl mov xchg and test insb in jbe (bad) sub rcrl mov (bad) lods test (bad) shrl (bad) push movsb cmp and (bad) data16 insl mov ja pop mov in mov add enterq mov add mov mov (bad) adc movabs xchg add or add mov outsb lods shrb pushq xchg lods adcb out insl stos rorb and repnz out mov rex.RB mov pop cld lods clc (bad) sub rex.B cld (bad) sbb rex.WR lock fs lods (bad) rex.WB rex rex.XB jg cwtl lods jb callq loopne movhps jmpq sub (bad) cwtl (bad) movsb imul (bad) rcll lods loope mov pop cmpsl enterq rex.R cmp (bad) mov mov leaveq and pop rcll (bad) pop fadds std test mov lods scas out sbb and mov callq scas sbb rex.WRXB mov movabs outsl hlt fsubr lods mov push (bad) (bad) add lods jo (bad) mov rex.RXB push (bad) jle mov pop or pminub int3 jmpq retq adc or ror lods or in stos int retq mov (bad) add ficompl and lods push imul in imul sbb (bad) fisttp rex.WRX scas (bad) adc pop add adc add (bad) lods mov (bad) sbb add leaveq or enterq int3 xchg pushq (bad) mov add scas lods in (bad) (bad) (bad) cli mov (bad) jns (bad) jae loop leaveq loop test jrcxz in mov rolb push jg in rex.XB adc adc lods add cmp scas outsl fdivrs in fcmovb movabs jl lods or out mov movsb adc fxch and (bad) mov (bad) (bad) (bad) jp (bad) std scas ficomp lods lret jg sbb jge cmp rorl xchg imul mov mov xchg xor lods push and decl add xor insl fcompl lods sub pop hlt rex.RX or lods pop cmc sub rex.WRXB movabs cli (bad) sub mov rex movabs int3 scas mov jbe addb lods cmp (bad) movsb (bad) jns rol out add push fwait (bad) and insb stos retq push lods and pop mov pop lock lods mov add lods and int sbb callq lods mov cld insw out scas enterq out sbb rex.XB (bad) in rex.WX (bad) adc sbb mov (bad) cli addr32 rex.W lods xlat and pop (bad) adc lods sub sub adc (bad) lods fs nop pop popfq jmp rclb cltd lods (bad) pandn adc vpsrad lods stos movsl out shr lock lods rex.XB rex.WRB jmp or movabs push mov mov scas add sbb rcrb in or push lret xor insb cmp lods je sub cltd lods sub rcrb lea shll (bad) cs outsb hlt (bad) mov test xor pushq adc lret addr32 xor in (bad) movabs nop pushfq jmpq addr32 mov (bad) data16 ja movabs adc lods rex.X xor cmp repnz (bad) stos lods sti push cmp push lods hlt mov es and scas (bad) std rex.WRB ss movslq in mov addr32 in xor rex.WXB repnz (bad) mov add mov leaveq scas cmp lods push pop lret (bad) lods (bad) (bad) rex.W adc hlt or fisttpl sarb subl mov jnp add lods xchg sbb test stos loope sub divb ja and (bad) subb (bad) cmp cld cmp sub rex.WRX lods mov inc adc clc enterq xor in (bad) lods and repnz (bad) mov retq and int3 rex.WB sbb rolb pop rex.XB icebp (bad) insb out scas callq adcb rex.XB sub mov (bad) rex.WR push lods and cmp sti (bad) xchg sarl fwait lret lods and je fcom adc (bad) jmp xchg add xchg loope lods push (bad) rex.WX repz rolb (bad) je jne imul mov mov push sbbl (bad) (bad) insb push rolb rex.WRB mov jmpq mov sub push movabs add (bad) pop insb (bad) stc bsf mov jbe rex lods cs add lock stos or rcrl insl addr32 lods pushq (bad) in mov (bad) ljmp lods imul adc out lods pop sub mov cmc lods rex.X cmp xor retq mov rex.WRXB testl rex.W (bad) rex.B out iret stos lods push sub mov or lods jg (bad) pop (bad) cmc lods push in push loop sub add test jbe (bad) lods movabs and fbstp xor mov and (bad) rex.WR jae adc lods lods rex.WRXB lods lea retq mov jns and lods test fistpll rex.RX sarl cmp movsl mov adc test lods (bad) mov lret sbb mov and lods (bad) jne sarl int imull push lods pop xor subb (bad) rex.WRX mov rex.WRXB mov cmc stos sbb inc rcl sar (bad) adc pop lods xchg test xchg jae rex.WRX rex.RB and lea jmp (bad) and adc sbb and or and cli (bad) or lods (bad) shrl cld lods sbb jnp movsl pushfq push lods insl sub xor lods data16 mov cltd rex.X rex.WRB fstps xor ds (bad) jns (bad) lods mov mov and mov lods movabs xor sub fistl pop repnz rex.X cmp cld mov int or xchg idivl jne push rex.XB lret push xor pop add fldcw pop movslq mov (bad) adc frstor scas cmp icebp lods jmpq fisubl sub popfq xor add mov or (bad) insl lods adc cli (bad) (bad) and lods ror xchg (bad) loopne rex.WB fsubrs xchg (bad) push (bad) divl lods sub imul ljmp cld xor movabs cmp movabs mov mov sbb (bad) lods xlat pushq mov lods stc rex.WX xor mov lods out mov mov xchg adc add xor mov xchg rex.WX rex.XB retq cmp jp (bad) lret or sub xchg rex.X mov scas (bad) (bad) lods jg movabs icebp adc xchg movabs out cmp or movslq mov vunpcklps xlat lods (bad) fs jp mov fnsave imul fincstp cmpsb adc lods loope rolb lods rex.WRXB movsb xchg lea lods jmpq pop retq xlat jle cwtl mov and lods je sub lods jl sbb (bad) insb sbb nop pop fidivr rex.B add lods es xor fwait retq vcvtsd2si rex.WR subl loope,pt cwtl lods gs push (bad) rex.RB rex.B xor lods rolb faddp pop rex.WB add scas lods movslq xchg clc mov in mov lods (bad) push jrcxz retq rex.B sub sti movabs lods sub (bad) stos jl (bad) lods int3 fs mov add jmpq sbb and rex.W xor cmp clc add sbb rex.W (bad) lods cmp xchg xchg clc mov fldl rex.RX or xchg ja test cmp (bad) mov hlt jg in retq cmc scas add and (bad) and lea shrl sbb frstor fisubr lret jge ja rex.R fisttp (bad) setbe lods sti pop movabs (bad) sub jbe subl pop out pop subl xchg rex.RB jp push mov (bad) insb push jns scas js xchg retw in mov pop addr32 jns,pn stos rex.RX add (bad) rex.WR fdivrl pcmpgtb shrd rex.WB jo lods (bad) gs add (bad) cmp mov sarl movabs cmpsl lods fcoms pop lea rex.WRX loopne or dec mov mov (bad) adc sub lods cmp rex.RB and lods sbb iret (bad) push rex.RX movsl adc fisubrl and rex.WRB adc (bad) icebp test subl decb (bad) lock xor cpuid and add in xchg movabs fildll cs in in jae lods es sub sbb movabs rcrl lods ficoml cs rex.RB pop rol retq faddl outsb loope jl scas mov std jno pop mov out push lods add sbb leaveq push sar mov ror add sub (bad) pop (bad) (bad) rex.R imul pop lods mov movsl rex.WB cwtl fsubrs ja je movabs sub or stos jo or callq rex.X sub (bad) retq lock lods rex.WRXB (bad) mov rex.WRB scas sbb xor cmp rclb (bad) pop adc gs add xor lea mov and (bad) jle xor insb adc retq sub stos (bad) repz rex.XB sub or mov fistpll movabs jo jl in mov (bad) rex.B leaveq (bad) mov pop loope or in push (bad) (bad) xor mov sbb shlb adc (bad) fs rex.WR xor jno lods lret outsl cltd cmp (bad) jo in (bad) or and fs mov push stos insb and xchg pushfq scas xchg push add add (bad) clc test fdivr jrcxz mov (bad) xor btl jns mov lods testl sub movabs movabs lods movabs adc or xchg xor and retq (bad) ja or jae es imul xlat movslq sbb mov rcll lods clc lods rex.WRXB (bad) callq sub movabs adc rex.WRX movabs sarb push adc adc mov lods cmp and out push or scas pop rex.WXB mov sbb (bad) stos fnstcw or shll (bad) mov (bad) popfq imul cmp and lods repnz lock xchg retq push xor movabs (bad) or mov sbb insl shlb (bad) pop rex.B fs mov maskmovq idivl faddp movabs stos movslq mov cwtl xchg insb sub rex.R add scas rex.WR popq rex.RXB lods clc (bad) cmp sub (bad) (bad) (bad) jmpq cld (bad) sbb imul jb rex.RXB (bad) jo (bad) stos cmpsl add lock adc hlt scas (bad) mov adc sub (bad) xchg movsl rex.RX xlat lods (bad) (bad) mov mov xor pop xchg mov pop scas fsubr xchg rex paddsw icebp test add add movabs or add jmpq fbstp lods xor shlb (bad) xor lods (bad) sbb cmpsb jg orb fcmovu rex.RXB and add xchg push movslq jmpq pop mov lods xchg sub add scas and cld (bad) test rorl pop imul or rex.WB pushq scas movsb cmp sbb (bad) scas mov stc xor or (bad) (bad) lods jmp pop rex.RB lods loope mov add xchg adc cmp vmovupd movabs lods fdivs std and add lods gs (bad) sbb fidivr lods lods movslq movsl (bad) callq shll (bad) lods mov pop xor sarb xchg xorb lods retq in rex jbe lods sti xchg adc outsb mov (bad) or lods rcll js sbb jnp (bad) jg cmp jns rex.R cld lods jrcxz or insl and pop movabs hlt fadds popfq lods pushfq (bad) movabs adc fs (bad) out fnop mov cwtl pop xchg repz (bad) sti sarb push in (bad) add mov cmpsb jl lods cli (bad) ror test xchg add sbb jne adc push lods enterq adc add pop in outsb testl and outsb mov or test stos retq fwait xchg lods and out or rex.RB lods xchg mov cs (bad) in rex.RXB pushq jnp in cmp (bad) rex.WRXB pop negb sub mov cmp adc add mov int mov hlt rex.WRXB jnp (bad) movabs sub pop or fmuls (bad) pop rex.RXB fsubrs jne pushq scas std push cmp add (bad) out or and rcrb lods jo pushq mov add es mov fwait mov fidivr stos lods add adc (bad) lods out ja movabs or sahf mov movabs loope cs (bad) jmpq (bad) (bad) or int3 jb outsb xlat js (bad) add (bad) xor mov in jle add add push int3 mov sub rex.WX mov gs (bad) (bad) scas test jrcxz sub mov jbe imul lahf cltd movabs sahf gs sbb scas add jle mov outsl jle insb insl sbb (bad) cmp sarl insl rex.WRX out enterq pushq popfq scas lods int3 imul out ss (bad) mov add push scas or mov rex.WR adc lods lods test jae xchg mov dec test rex.WRX push (bad) rex.XB (bad) adc scas in add and movsl mov stos sbb insb movabs out (bad) pop imul test out scas mov or cmpsl pushq lods (bad) lret (bad) or shrb mov test iret lret xlat jno test scas rex.WXB jo mov xchg imul cmpsl rex.B rex.RB (bad) out and fnsave leaveq and scas xlat jl lods gs sbb sbb outsb mov (bad) xchg lods cwtl jrcxz (bad) mov cmpsb lods outsl icebp rex.WR add or cmp scas test sub (bad) cmp lods add (bad) lock jmpq or rex (bad) gs insb sbb mov (bad) or lods insb in outsb jne ss mov cwtl lods test pushq in fsub or shrb fldenv lods push rex adc mov xlat xchg retq rex.XB rorb lods ss data16 fistpll (bad) pushfq stos rex.RXB lret movabs pushq lods psllq mov in adc xchg (bad) xchg rex.XB rex.RB outsl sbb addr32 lea pushfq or sbb lods (bad) scas (bad) jno sbb (bad) cmp mov xor cmc mov and test jb lods rex.R (bad) out pop mov mov mov rex.WR lock shl xor pop mov xchg stos add mov test adc fisubl je add pop lods test and test movabs fwait add sub (bad) outsl lock retq jne (bad) fwait add movsb lods mov cmp imul test xchg rex.X push sub (bad) sub lods push loopne in scas int test pop mov cmp in shrw es lods repz jmp lret xchg mov fldl (bad) xor lods lea mov push or test xchg lods or test ror rex.W rcrl sub lods adc je int es stos iret sar adc lods and roll enterq test fwait lock packsswb push cmc add xchg jmpq jp in mov adc movabs fwait mov push sahf (bad) loop jmp imul gs jl lods lcall jae test movslq out sarb lods mov sub outsl push push in (bad) roll enterq test pop retq insl movabs movsl lock fs cwtl scas or adc pop push cmpb cmp (bad) push lock lods stos sbb (bad) xor gs and loope (bad) sub fmull (bad) adc rcll stc je (bad) setno or or stc sub xchg stos (bad) outsb adc rex.WXB rex.RX add rex.WB movslq hlt xchg and xor movabs outsb xchg in pop push icebp popfq (bad) insb mov out movabs cmp sti xchg sub add (bad) cltd lea imul xor out fwait movabs adc data16 jns lods movabs (bad) std ficompl lods js rclb and imul loope push sahf cltd lods rol js push mov adc rex.RXB fucomi sub cmp and sahf xchg popq lods lahf mov jmpq push (bad) push retq lods ss adc rex.WR jo rex.WXB movabs in gs fcomps loop sub xor mulb (bad) lods (bad) icebp (bad) push insb (bad) callq rex.WRXB lods (bad) rex.WXB pushq sahf xchg lods jnp lock repnz jnp lods jns retq pushq icebp lret popfq jle lods (bad) (bad) (bad) lret mov int mov (bad) (bad) pop (bad) (bad) (bad) movsb enterq outsb hlt push (bad) mov fs mov movsb mov rol or mov cmc mov sub (bad) outsb (bad) clc xor (bad) (bad) mov subb sub sbb lods out cmp idivb movsl mov fildll callq xor mov jg push out fldl mov cmp sub fstps lods cwtl lods mov (bad) leaveq cmp jg stos cmpsb movabs subl and sub sahf scas pushq adc or lods mov rex.W movabs xlat lods push lods sub xor (bad) pop rex.RX jmp cltd lods (bad) leaveq xor xchg movsb icebp push loope (bad) imul pushfq cmp shrl (bad) mov cmp scas rex.RX lods outsl (bad) ficompl lods sbbb negb int3 retq clc imul jp cmpl pop movabs sti sub test fldcw sahf mov jl repz loop (bad) sbb lods popfq and and insl cmp in mov pop mov lods mov add sarl (bad) mov ljmp mov sbb jl movabs data16 mov idivl test pop mov jg (bad) movnti sub jle in (bad) fsubrl rex.WRB movabs lock (bad) (bad) in outsl rex.RX test pop lods nop mov (bad) mov movabs loopne rex.WRB icebp rex.WRXB or rex.RXB ss (bad) (bad) push jbe cli push stc mov (bad) loope es mov sbb jrcxz (bad) jno xchg lret cmp lods mov cmpsb push cmpsl adcb rex.XB fs rex.R imul movabs jle pop mov rex.X adc cli mov pop add cmc fdivl insl cwtl (bad) rorb roll lods fisubrl and (bad) fdivl lods add (bad) icebp (bad) or lods and xor push frstor push mov jge lods rex.WRX lea clc stos jae outsb (bad) xchg sub hlt pop rex.W pop jns mov lods mov sbb pushfq cmpxchg shrb (bad) jl (bad) push mov mov pushfq xchg fildll lods push jmp mov notb jl scas fisttp outsl cmc cli (bad) lods (bad) sti pop adc rorb (bad) (bad) movabs pop jne mov jbe pop retq cltd roll in add xor scas lods adc (bad) stc xchg lret loop loope lods jb in or test fidivl fsubp lods out lahf xchg js pop sub popfq scas ja callq in mov in test mov movabs or loopne sbb sbb sbb lods pop cmp lahf lods vmovq js data16 popfq leaveq stos adc (bad) test xchg mov rorl (bad) jne in in mov cmp and mov (bad) rex.WRX mov frstor add xor sbb push fadd lods leaveq mov fisubrl cmp xchg frstor lods fisttpll xor rex.W test stos hlt mov gs (bad) (bad) stos xor jb (bad) stos lods (bad) add cld stos adc pop data16 fild or rex.RXB jae push pop pop and cmc movabs movabs or insb movsb mov iret adc lods (bad) movslq mov scas rex.RX push ss xchg hlt repz int sbb (bad) int3 jno mov rex.RX rex.WB rex.WR sbb imul outsb sub xor mov (bad) (bad) rclb test movsl (bad) lods push pushq cltd and int3 jns cmp lods (bad) xchg ds sub sub rex.WR cmp rex.X sbb (bad) in cmpsl movsl rex.R push enterq mov pop rex.WR rex.WX fisttpll movabs mov sbb lods scas add movsb and (bad) lods adc jrcxz sbb int mov or add rex lods add repnz (bad) xchg mov push lods jae enterq cld rex.WRX (bad) jge xchg pop xor movabs es xchg rex.B movabs jae lods xor mov lods lcall (bad) push imul enterq adc and push or fisttpll lods out (bad) mov mov jmpq sub add lock lahf cmp sti iret mov (bad) sahf xlat mulb scas imul insb rex.R jns or test sbb sub lods mov add push (bad) movsl rex.XB movabs or rcrb ficoml cmp jle xchg rex.RXB mov jo xchg sbbb mov mov mov lods push rclb out jae add test push xchg rex.RX xchg push (bad) cmp sub rex fidivrl lahf imul fsubrs in (bad) scas movabs lock mov sbb sub rex.WRX shrb pop (bad) fisubrl pop (bad) xchg movabs mov mov adc rex.WRB int3 icebp adc (bad) movabs mov jmpq mov int3 lods jg,pt pushq cmc adc or cmpsb xchg mov add in xchg rclb shrl jrcxz sbb stos iret and testb sti (bad) jl (bad) push sub mov movabs cli rex.RXB and (bad) sub int3 xchg addl jae mov lods pop movabs push loopne mov cmpsb (bad) lods lock adc lods fmuls jae loop fs lods pop test xor (bad) rex.XB (bad) cmpsb jo mov jnp scas sub je pop loopne (bad) imul std mov faddl lret ljmp adc lods not test xchg movabs lods xor and lods push xchg mov (bad) lods roll (bad) mov stos rex.WR adcl push faddp lods pushfq cwtl fnstenv jnp stos push sbb (bad) sub (bad) fild retq cltd mov jb iret in rex.RB insb or sub (bad) in sub (bad) jo in lods xchg jmp faddl mov lods retq cmc (bad) decl movabs (bad) cmp jns mov in cmp rex.WRB (bad) jbe rex.XB lods lea sub mov scas in (bad) test adc xchg jbe (bad) xor pop adc add or pop (bad) lock lods (bad) mov std adc shr fistp xchg (bad) lock lods rex.WXB fs and rorl lods rorl add loopne or xor pop incl sbb rex.B xor add int3 and imul pop std lods pop test sub outsb (bad) rex.RXB mov pop repz lods (bad) xchg pushq fsts callq mov add sbb mov fldenv test rex.B retq rex.WX push imul sarl adc (bad) stos js push movsb or test xor add add rex.WRXB nop lret (bad) movabs (bad) (bad) cld (bad) loop xchg (bad) (bad) xchg sti movabs lods js cli ljmp jnp lods push addb mov cs xor jmp xlat (bad) (bad) negb and addr32 lods rex.WR mov loope lods (bad) js mov movabs sbb add (bad) hlt (bad) add pop sub movabs stc sbb scas (bad) out and add rex.RXB jne or sub lods pop adc rex.RB cs lods sbb cmp lods add jmp mov fwait or (bad) (bad) adc rex.RX mov lods jnp or or repz rorb loopne jl cltd mov stc mov clc (bad) cmp callq callq sub mov (bad) jae adc mov in hlt rex.WXB (bad) add out movabs sar adc xlat and pop (bad) xchg test por retq ja jg add lret jno (bad) jmpq sub stc hlt fsubp ja xor fisubl push mov xchg sti pop mov cltd (bad) adc mov lahf fadds xor mov mov mov in mov cmp mov or mov cmp (bad) scas jbe outsb (bad) insb in outsb lods int pop pop mov fs sbb xor mov jrcxz lods mov jnp test lods sbb sbb (bad) lods insb push xchg (bad) and mov test nop mov lods in in xchg pop in bnd jmpq fwait xor mov movsb sub fwait scas cltd and jmpq (bad) pop scas sub movabs lret test sahf lock rcrb (bad) mov out mov (bad) sahf mov (bad) in push (bad) adc test or out jl scas mov movsl (bad) push (bad) fucomi (bad) (bad) movabs cld sarl push movsl (bad) sbb sahf mov sbb mov gs fldt cwtl xchg hlt stos fsts or jo mov xchg (bad) je (bad) pop sub insl jno cli test jmp neg pushfq stos scas (bad) add iret pop sub sbb xchg rex.WXB lock jo stos rex.WRX push cmp adc movabs (bad) adc xor sbb nop (bad) rex.RX or cmpsb mov push adc mov jge mov negb pop movabs mov (bad) cli xchg sub or xor stos int sbb mov rcrl out cli andl xchg sub (bad) cmp adc (bad) xlat lods xchg xchg int in xchg mov sbbl xor sbb rex.WR std push outsb lods fsubs out rex.WX or (bad) (bad) in scas addr32 (bad) xchg lods (bad) sbb fidivr lods int jp (bad) andl sbb jle sub sbb fcoml xlat enterq fs and shrl mov push out jo pushfq mov movabs and xor mov repz sbb jrcxz sti add in (bad) mov (bad) (bad) mov sub jnp in xlat adc and adc orl adc in ja (bad) mov cmp movsb rex.W movq fs or rex.WR xor pop mov rex.R rex.WX xchg jrcxz xchg push jp movabs rex.R in scas (bad) (bad) mov jmpq rex.WB jo (bad) test add adc (bad) or jge (bad) rorl (bad) rex.R subl cltd sbb shlb mov pop rex.RB (bad) xchg lods sbb cli mov popfq pop sub jmpq xchg pop (bad) and sbb sub mov xchg lock loopne xorl and mov push stos gs rex.WRB lods out xchg (bad) movabs or rorl mov gs xchg loopne rex.RX xor push lods nop cmpsl ds rcr flds lods andb (bad) lods imul popfq xor push adc out stos rex.WB (bad) stc (bad) (bad) lods jne divl xor cld cmp lods sub test shrl insl repnz xlat lods jl pop je cwtl rex.RXB adc sahf or clc int jb cli pop (bad) sarl add or test lods (bad) test fstps pushq cmpsl in outsl (bad) sub mov (bad) lods mov (bad) cmp int (bad) stos or (bad) (bad) (bad) fmul mov lods movsb sub mov lods es rex.RX cmpsb cmp scas (bad) andl xchg (bad) fwait mov addr32 rex sub movslq retq sbb movabs or scas (bad) push xor jmp (bad) jns (bad) mov or insb mov (bad) sbb xor mov jmp mov sbb sub adc shr (bad) mov xor push in rex.WRXB and mov lods rex.WX (bad) mov lods xchg movsb sub in xor and pop (bad) (bad) pop (bad) (bad) lods mov pop in (bad) push or lods in (bad) lods mov movabs jmpq rex.WB movabs fcmovnu sub lret cs cmpsl lods mov (bad) or (bad) int3 popfq sub mov xor or loope and and cwtl in movsl (bad) scas (bad) mov sbb jno sub ja rex.RXB flds push fucom scas (bad) imul pminub mov sub pushfq (bad) lods test in adc mov and pushq (bad) pop cwtl lods hlt lret rex.RXB out mov nop rex.RB (bad) mov jne mov (bad) pop movsb fild jb rcrb mov mov insb sbb (bad) xor xchg adc cld or data16 rex.W test push (bad) cmp in jo rex.WB in mov jnp cmp scas enterq jbe cld push jae (bad) sub push imul xchg fsubs loopne std test in xor nop lods lods rex.WXB adc (bad) xlat (bad) lods cmp (bad) scas nop int mulb adc lods repz test cs retq mov pushq rex.W rex.WB (bad) jle fist sub je retq stos ss fadds cmp pushfq mov pop adc out add rclb adc in loop (bad) insb mov xor push rex.R mov retq mov (bad) (bad) mov (bad) fdivrl jne mov sbb xor movslq lods sbb add repz int sub insb fsubr cmp rex.WXB sub jae mov in std adc jbe retq and mov sbb (bad) loopne repnz movabs sub mov int lods mov in adc mov pop xor iret or xchg (bad) (bad) ds (bad) (bad) add pop rex.XB lock rolb (bad) rex.RXB lahf xor cmpsb testb popfq lods sbb int3 sub xlat in retq push lods addl (bad) scas lahf xor and sub addb ja cmp jb clc scas rex.WRXB scas mov mov lods cmpsl retq pop adc cwtl stos mov in mov (bad) add lret outsl (bad) scas (bad) (bad) out (bad) xchg mov rex.WRB (bad) test (bad) (bad) stos loope movabs (bad) and xor (bad) mov je (bad) rex.WR rex.WX (bad) jle lods insl stc rex.RXB lret test (bad) mov sub xor movabs jne mov cmpsl cmp mov retq fldl adc lods jg rex.WX rex.WB pop mov pop loopne lods lods sub or fistp rex.WR stos xchg loope stos callq mov rex.WXB sub test movsb adc xor sub mov stc mov (bad) fisubrl callq cmpsb pop outsl cs xchg clc (bad) jle mov (bad) xlat lods cltd pushq sbb pushq scas sbb sbb out gs roll movsb repz rcrl lods jno (bad) jl jo push lahf pop (bad) pushq sahf cmpsl in add mov adc lods shrb sub movabs lahf cmp mov mov push fdivrp ja and sub xor gs cmp (bad) stos je push addr32 insb stos or lods mov pushq fidivr movsb idiv (bad) insl ds xor test (bad) int (bad) and cmp insl and sarl movsb xor xchg movabs jge lods mov add mov lods sbb imul cmc stos adc mov add or sub rex.WXB mov movsb and rep (bad) adc (bad) jp rex push adc mov cltd rex.WRX (bad) mov lods rcrl mov push sbb lods rex.WRX jp jl retq (bad) rex.WRXB push fwait lods jno movsb in rcrl pop xor test add (bad) (bad) sub lods enterq (bad) cmp (bad) lret addr32 in mov lods xchg (bad) clc rex.RB stos sub (bad) or xlat mov loope mov scas (bad) adc out stc retq (bad) pop sub loop (bad) sbb fs mov (bad) (bad) clc lods (bad) and lock pop sub (bad) clc lods fwait add std sbb xchg lods and and lret nop jmpq stos lea lods jo xchg rex.XB push out push mov mov lret sub jbe (bad) mov cld pop push subl imul jp xlat and lods rex.R jrcxz pop add mov pop jnp in adc xor adc mov (bad) sub int3 js (bad) jno sahf and insl rex.RXB js fimull rorb cmp movabs xchg add in roll mov sbb sbb scas (bad) mov out sahf rex.B adc (bad) mov movabs enterq xchg add add es pushfq xor roll rex.XB rex.WRX sub out adc rex.WXB cmc std pushq xchg rex.W jae mov (bad) adc repnz (bad) push (bad) pushfq adc fs retq jo out insl (bad) or in je (bad) scas push fidivl out pop rex.X gs or mov cld stc insb out rex.X setbe (bad) rex.RX test fbstp rex.RXB loopne in gs (bad) callq adc xor jbe adc pop jge in or fsubrl (bad) insl pop insb (bad) lock add shlb ds push mov xchg loop push callq xor add je push clc rex.WXB fwait test stos xchg (bad) sub movsl pop (bad) and lret lret xor sti std lods cld vandpd fcompl test lods (bad) std (bad) test push or in add or rex.RB leaveq (bad) test out (bad) mov lods jb jmpq adc xchg or rex.RXB (bad) pushq mov (bad) mov add and movabs rex.RB orl jg cmpsl rex.WRXB (bad) jnp out shrl cmp adc (bad) jmpq roll (bad) rex.X hlt xor jmpq lods or insb cmpsb mov sti (bad) clc nop lods cmp in or std mov sbb insl lods xor xor rex.WR push or lods cmp movabs xor and clc mov xlat out mov add cmpsl xchg test adc sbb addl jbe callq movsl clc xor mov int repnz iret sub pop sub jmp fiadd rex.WR loop mov (bad) (bad) xor lods rex.RXB push (bad) fdivs jbe movabs je lods rex.RX pop rex.WRB lods clc lret int3 (bad) (bad) (bad) loop adc xor icebp lock shrb sub (bad) icebp and rcrb jb mov push scas jnp pop jno js stos (bad) lock orb mov xor cwtl je lahf adc xchg or lods cmovns (bad) pop lods cmp rex.WRX ror sub (bad) in xorl push add pop xor test cs (bad) mov mov rex.RXB lods rex.XB sbb ds (bad) subb xor outsb jmpq lods iret xor pop cmp (bad) fildll rex.RB ss xor adc mov jle out push pop movabs (bad) mov xor adc fwait and lods pop (bad) push in rex.W lods push sahf movsl sarb mov adc sbb push rex (bad) mov mov sub lret in rex.B pop out (bad) xchg lods mov insb loope and xchg in (bad) or sub lods (bad) sbb xor stc push jrcxz incl enterq lods pushfq rcll sub (bad) push fmul fiadd shrl and and sahf jp int rex.XB mov sub movabs (bad) fs lods adc and fwait xor xchg lods (bad) (bad) sub xor mov mov in jrcxz test shrl add in mov pushq fwait rex.B mov mov adc or or cltd in rex.XB jge jnp sbb cmp frstor jnp icebp data16 mov decl xor (bad) lock (bad) in adc repz mov sub movslq mov (bad) movabs and jne mov and nop push jp cmc lahf in cs out cli fmull in sbb push jae js sar lods mov (bad) jbe in and jmpq mov add rex.WRX (bad) jbe (bad) (bad) (bad) rex.X in je rex.WRB jp or adc mov xor stos cmpl icebp cltd imul (bad) lods push int3 mov pop fs cmc lods jmpq scas mov icebp shld mov mov xor jne movabs sub sub lods pop jl pop mov mov enterq mov lock sub pop adc in rex.X rex insb sub out stc adc and or icebp xlat sbb mov lods (bad) mov (bad) mov (bad) (bad) addr32 fnstcw jge rex.WXB hlt adc sti outsl std shlb repnz rex.WX rex test jb fcompl xchg (bad) insw andl cmp (bad) mov sbb rex.WRX enterq mull jbe mov xor movabs lods rex.WRXB sub adc add rclb insb adc push data16 movsb and fnstsw adc loop lods mov rex.RX xor mov push xchg divl (bad) pop mov lods xchg push scas and mov lods mov jp mov iret sub adc rex.RB in retq rex loopne repnz mov xor mov data16 setl xor lods adc mov (bad) mov rex.RXB lods sub icebp pop stos mov movsl mov (bad) cs sub (bad) shll test and cli (bad) movsb lret (bad) repz fisubl lods (bad) fmull imul mov loop pop lods mov andl jle jne mov out and (bad) test outsl lods int jg loope (bad) mov or jb fadds movabs loope and lock xor pushfq sub jno (bad) lods (bad) xor mov pop test notb jmp add mov nop in jno mov leaveq rex.RX rex.WB test xchg and push lods lods sbb mov (bad) cwtl (bad) mov mov pop sub mov sub rex.R lods insl (bad) popfq xchg imul (bad) sbb adc movabs sub orb mov test rex.WRB and sub rclb imul sti lods sbb cs jle out ja rex.RX imul (bad) imul (bad) sub lods mov push js cld xchg xchg mov (bad) mov imul test adc xchg stos pushq xlat sbb retq rex.WB rex.WRX rex.WR mov addr32 or scas in sbb in mov lea cltd mov fisubrl lods test ss fs add push rex.WRX clc or int jl jbe rex.WX rex.WRX jnp add (bad) cmp (bad) pop movabs mov cwtl xchg pminub (bad) jge subl fcompl (bad) retq lods jae sub lods (bad) repnz rex.WR stos rex.X lods sbb sub jmpq (bad) xor mov in (bad) xchg fwait lods mov and scas lret mov xchg (bad) xor insl xor icebp jbe mov lods movabs xlat and xchg imul adc pop (bad) lods cli mov sub (bad) sub lods and jo xchg callq push iret loope fptan pop lods out xchg (bad) cmp imul int mov add cmpps fsubrl (bad) mov ds jl push (bad) sub or js loopne lods sahf cwtl scas and clc lret cli rclb jge lods jo iret js xlat push stos movsb sub (bad) jne je ficompl (bad) xor mov jnp jnp lods (bad) addr32 and adc rex.X movsb jbe insb outsl loop lods rorl cmp mov andl sbb lods in push and movabs orl cld test add add adc (bad) test cld ds jl loop lods test out rex.WX retq (bad) mov out fistl fcompl retq cmp je rex.RB (bad) jns jae in gs rex.B scas (bad) cmpsb test out sub fisubr xchg rex adc in scas (bad) or rex.WRB sub rex.WRX in lods pop rcrl xor push divl in sbb sarb scas movabs repnz (bad) mov rex.WR mov imul adc lods cmpsl scas (bad) mov (bad) ja shrb or stos leaveq mov (bad) pop rex.RXB pop test mov (bad) lods xchg (bad) mov (bad) clc or adc rex.WR es add rex.X add in lret add (bad) mov add imul stc ss scas jmpq (bad) xchg lods std mov pop lret outsb lods (bad) sahf out scas rorb cmp loope mov rex.WR lock imul add hlt push lods (bad) or js repnz jge or (bad) fs test mov add out (bad) fld scas frstor or sub loopne rex.XB (bad) (bad) xor lods scas mov test test movsl and (bad) (bad) adc lods push pushq or rex.B jg mov (bad) lods rex.WRXB pop cmp and adc cmpsb imul add mov (bad) jle (bad) mov cmpsl sbb (bad) scas or ds lahf jns int push in (bad) sbb mov jnp xchg sub jg movabs pushq rcrb sub rex.WR retq lods rex.X xchg pop decl lods xor out rex.WRXB lret movsl mov push (bad) sahf mov push (bad) psubq clc mov mov (bad) stc lods fwait insl cs out cmp cmpl adc fiadd lods sub ss icebp jmp iret (bad) or mov rex.WRB out rcrl lods incl sbb (bad) mov rex.RX sub xor lret mov push sub sub mov push jg imul imull out cld (bad) lods (bad) push add loopne jle sahf rex.B or mov or frndint mov data16 loope fsin cli clc (bad) xchg in lea xchg sahf adc (bad) pushq jno movslq (bad) (bad) cli loope and pushfq icebp mov lods pop rex.RXB (bad) (bad) retq add lret callq int3 xor and push lahf rex.RB adc hlt lods mov mov outsl imul pop insb add mov (bad) rex.WR outsb lods rex.RB popfq faddl lods (bad) sti sub xor shrb div xor es cmp (bad) mov fildll ror fadd adc rex sub jmp mov pop xor std lods and sbb orl mov mov jmpq mov movsb (bad) or lret add lods retq movabs mov in mov sbb lahf sar lods (bad) xor (bad) xchg outsl decl scas popq mov jns lods mov push or lods sbb (bad) sub scas in loopne and lods mov lret (bad) rep xor sub or mov cmc pop (bad) push sub xchg sbb sub scas mov jg jl adc add push mov jmp fwait add add (bad) stc sbb add sarb (bad) lock mov jmpq and stos sbb ja mov scas jae in fdiv mov add fs enterq retq in jmp out stos xchg xor mov subl cmpsb jp or jrcxz scas shlb out (bad) enterq mov (bad) stos pop sub imul (bad) movslq lret (bad) sbb xor callq pop (bad) cmp sbb leaveq xchg in movslq loop imul imul push sbb mov scas (bad) scas lahf rex.WR repz sbb lods rcrl (bad) (bad) lods jb cltd add fsubs rex mov movsl lods xchg je rex.RX es movsb pop lods gs jae addr32 rex cld add (bad) cmpsb adc cld test or xor nop (bad) adc in mov out jle movabs lock rex.WB (bad) int3 in xor sarl movabs (bad) (bad) movslq rex.RX sbb movmskps jo lods adc imul rex.X xor sub movabs mov lret lods adc push jrcxz pushq lods xchg stos cld movabs sbb mov imull int3 rex.WRXB out or scas xchg mov and mov roll xchg rep outsl rorl test and (bad) sub je lahf ffreep rex.X pushq fsubs cmc (bad) ss test mov push xchg stos cwtl jmp lods cmpsb push int3 loopne xor (bad) in rex adc in rex.X test lods mov rex.WR sbb callq test cmp xchg and gs rex.WR (bad) sahf mov hlt lods jne out nop mov in pop cmp or mov (bad) adc stos add mov mov int inc add rex.WB sub lods retq add je fildll movabs sbb sbb (bad) xor leaveq push (bad) sub sub retq and pop sub (bad) jb shlb movabs stos (bad) jb popfq xorb xchg mov mov mov push es lods scas (bad) sub movabs sub cs mov sbb xor in movslq addb stos xor mov cltd hlt rex lock xchg xlat cld (bad) lods mov pushq scas mov (bad) adc adc lahf in sub or (bad) and in movsl loop mov pop stos or (bad) (bad) xor icebp (bad) (bad) shrl xchg adc sub in mov int3 xchg stos mov cld es loop (bad) cmp push fcoml repnz mov in mov dec rex.WX movsb lods mov popfq cmc or sbb push lods xor rex lea adc or sbb movabs bnd jmp shrb (bad) (bad) cld lahf out out mov mov outsl clc lods jo fwait pop ss rex.RX add (bad) lods std sbb (bad) out cld mov (bad) rex.WX cmp in lods pop outsb lods mov cmc scas jp (bad) mov mov (bad) jo lods jbe push xchg cmp movabs mov sub xor mov push rex.RB test rex.WRXB lock sbb std movslq add (bad) push loope xchg or (bad) (bad) imul std unpcklps lods cmp add mov push sbb pop mov cmpsl lods sahf (bad) mov rex.R scas sub jb sbb sub out lods loopne pop adc xchg (bad) lods sub lods enterq fdivr adc xchg test (bad) stos cmp ror lods in sub cmc mov mov lea jge paddb in loopne movabs rex.R scas rex (bad) imulb mov mov xchg add (bad) mov adc jns (bad) (bad) lods (bad) int3 imul sbb pop rex.WXB gs rex.RB scas stos mov rex.WRX in jne js xchg sbb rcll imul int3 cltd (bad) in rorb rex.WRB retq adc decb push lahf and rex.XB rex.RB rex.RX (bad) jae (bad) int out fcmovnbe scas fsubrs fsubl add insl lahf in fsubrs rcll cwtl sub nop adc (bad) icebp or clc lods es jae stos rex and repz rex.WB leaveq and int3 adc mov fnop lods jnp js imul lret lods xchg test and lods lret loopne sub (bad) (bad) lea adc mov mov movabs cmp rex.RXB sbb (bad) outsl mov push mov nop rex.XB jns mov movslq or lahf sbb mov lods cmpsb jo mov movabs icebp mov cli (bad) sbb xchg lods (bad) (bad) or adc pop adc jmpq mov lods (bad) outsl lahf (bad) insb sbb fldcw jo jno jp (bad) xchg enterq lods (bad) jmpq adc lret callq push lret jns out and or movabs leaveq mov or in jp addw movslq ds rex.W jb mov cmp rex.X lods lods in push add loop lods sbb (bad) imul nop cmc or mov (bad) sbb add int3 sbb scas idiv (bad) lods test out sub (bad) lods loop (bad) (bad) and std popfq movslq sub jns ss jno lods fstps mov or lods pop (bad) fs cmpl imul (bad) mov lods sahf sbb rex.B (bad) lods mov or rex.WR fnstsw lods rex.XB cs addb insl (bad) ja (bad) loopne (bad) out push and imul (bad) push jo mov xor cld (bad) lods pop sub or cmp movabs sbbb lods jg lret movslq es mov push xchg gs sbb and (bad) mov lods mov xchg rorl loopne lods jne add mov jae test loop enterq pop pushq outsb mov (bad) xchg int3 (bad) adc (bad) push scas shr sub callq lods out (bad) and in (bad) adc xor scas movabs insl lods cmp jmpq movslq mov lods movsl (bad) (bad) push xor lods or (bad) cld scas pop mov (bad) jo fmull add sub add test ja mov push rex.R cs mov mov cmp cmp jnp add mov sub mov xor lods ficom (bad) fcomp test fistpl sub adc mov lods out (bad) rex (bad) mov jmp pushfq mov lods sahf repnz sbb (bad) lods xchg sub movabs scas sbb sub lods jg insl (bad) es xchg and jno or lods mull jae jbe or sub fisttpll or (bad) lods lods cmp lcall retq lods (bad) rex.B clc pop push movabs add js xchg rex.RXB (bad) jmp shrd cmp add lods in jp adc movabs out (bad) clc (bad) mov (bad) andl rex.WX sub add (bad) or out mov mov sbb add sbb push cmp lock mov xor sub adc movabs pop rorb xchg lods (bad) neg adc mov lods pushq pushq cmp pop scas fsubp mov push mov clc cmp (bad) xchg lods xor jmpq pop fidivrl icebp (bad) mov adc sub xchg jrcxz mov sbb mov lods repnz fcomi icebp add lods jns jmpq loop mov and (bad) callq in add rex.WRX mov (bad) ss stos sub lods fsubl or fisubr cmp mov adc pop lods (bad) rex.WXB pop sub (bad) sub fildll jns (bad) lods cli sbb repz jae adc (bad) xor rex rex adc xchg and xchg rex.WRB adc push scas enterq add in sbb int3 xchg (bad) (bad) mov (bad) jge pop jle or shll lods push (bad) fdivrl cld xchg or xor sbb and (bad) adc lods sbb rex.WB rex.WR cmp test jge fs hlt (bad) lods xchg jp (bad) repnz (bad) scas mov push push mov pushq clc rex.WX (bad) incl jg (bad) mov stos mov xchg pushq lods adc rex.X mov notl add (bad) sub (bad) retq push (bad) jbe sbb leaveq rex.WR push cmp loopne pop stc stos lret mov rex.X faddp xlat sbb lods fisttp xor fcoms cmpsb fidivl sbbb xor xlat movabs xor pop stc lods mov cmp mov in xchg lods nop or ss stos data16 jmpq out rex.RB mov lods add jns adc adc add subl xchg es shll lods adc cmp hlt pop or sub stos (bad) sarb lods mov add (bad) (bad) or sarl rcll (bad) jno adc fwait (bad) adc mov (bad) rex.X xor xlat lods lods (bad) (bad) notl movabs leaveq pop sbb sbb fiaddl iret scas xor (bad) js or mov retq (bad) repz add out lods add jne rex.XB or xor rex.WXB movsb (bad) lods (bad) mov mov adc add (bad) fistpl ds and add cmp jnp pop rex.WR rex sti cmpsl ror movsb js lods pushfq jmp xchg cld movabs pop mov push rex.WRXB (bad) adc (bad) int3 mov push sub jl lods jg cmc loop push and push imul jnp (bad) stos sbb cli rex.WR and scas pop (bad) stos in jns mov insb nop rex.RB cmp and (bad) sub (bad) cmp jne cmpb movabs data16 repz mov mov push and fwait jno lods jnp (bad) pushq adc lods iret (bad) outsb cld xchg shrl cmpsb jns int3 imul (bad) or idiv icebp lods push stc outsl fdivr fnstsw adc cs lods fdivp or mov pop rex.WXB lods adc rex.R lods fstl rex.WX addr32 rex.XB xor lods (bad) jae xchg nop lods add or adc (bad) lods in in js jrcxz jnp lahf and adc jns pushfq mov xor (bad) mov pop movslq lods add and icebp xchg adc mov pushq movabs jno lods jrcxz rex rex.WRX or sbb adc in adc sbb icebp mov js sbb (bad) pushq scas adc mov (bad) cli xchg lods xlat add stos and cmp jnp sbb fisubl movabs add and cltd sub callq pop loopne cwtl fcompl cs fwait or loop (bad) shrl xchg iret and fnstcw enterq sub (bad) in ja jno xchg in cmp mov (bad) pop lods (bad) xor (bad) out (bad) cli shrl sub mov je stos (bad) lods gs hlt add lods (bad) rex.RB scas pop sbb add and xchg scas stos push cltd (bad) lods imul jmp roll mov (bad) stos jl pushfq pop mov cs retq mov rex (bad) mov jno push mov lods xlat mov sbbq scas rex.R sbb sbb outsl (bad) movabs leaveq mov or mov push jnp xor (bad) stos negb xorl ja ja jno mov fsubrs mov loopne mov mov (bad) movabs out (bad) (bad) mov (bad) and jmpq mov xchg or or cmp xor jp lods pop (bad) jae lock cmc sbb or adc pushq sub rex.WR mov mov push stos clc (bad) push in rex.WRB pop lods sub (bad) outsl cmp out mov sbb rex.WX stos mov xor movabs lods rex.WRXB mov cwtl insb sub jo rex.RB mov xchg adc lods pop leaveq (bad) add (bad) loop rcrl push pop test pushq pushfq testb mov movabs (bad) (bad) jp lods and mov ja push mov lods mov lods (bad) xor (bad) ss (bad) jno mov cli es cmp (bad) lret lods loopne jno push add leaveq lods mov (bad) mov stos rcr repnz lea push hlt mov jbe jae popfq add sub lods pop jg (bad) and (bad) lods rex fs sti cmp icebp scas lods add (bad) hlt mov je mov pop (bad) (bad) cwtl xor rex.X stc enterq mov adc push cmp add sbb retq lods cmp or jne (bad) lods fcmovu ds idivb pushq nop movabs sub loop lods add mov lods sub pop adc clc mov (bad) jbe or sysexit jne movabs lods jrcxz sub lods adc (bad) xor out loope fidivrl mov hlt add (bad) lods (bad) shll xchg lods adc (bad) jne out scas out jo (bad) in xchg add mov mov mov (bad) movl rex.W push jg or rex.X int3 xor cmpsb lcall lret sub mov jmpq movabs sub sub cltd lods (bad) sub movb rex.B fwait xchg mov jg mov ror lods mov sti adc (bad) (bad) (bad) adc (bad) out jg stc stos and mov (bad) and cld repnz (bad) jae stos adc lret fsubrs pop xor lods (bad) mov jnp lods lock adc cld sbb lods mov sbb lods loop outsl pop sub jb adc lods (bad) mov pop lods cmp (bad) movabs in js xor mov xchg scas movabs pushq out mov and adc mov rex.R sub (bad) movabs scas mov xchg jl insl lods ss cld movsl out jg lods (bad) xor cmp ja rex.X movabs je jns lods (bad) movsl movabs xor fs jmpq retq (bad) mov mov (bad) (bad) lods ficom jle (bad) cmc (bad) lods sarl adc sub std xchg lods mov jnp mov jne and mov push xor test lods rcrl rex.WXB adc data16 stc rex.WB cmpsl mov pop sar xchg fs lods insl pushq lret or and sub sarl (bad) in lods (bad) pop iret movabs shr out or rex.WX and adc xchg jp scas test fbstp int3 cli jbe leaveq jnp jp jae fsubs jle (bad) imul test insb je (bad) cmp jne fwait lret lods and xchg data16 jrcxz in (bad) decb scas pop xchg gs lods rex.RB jns adc movabs pop (bad) lods (bad) rex.WRXB sahf scas rex add rex.X mov pop lods (bad) jp mov adc lods movabs pop fdivrs mov adc cmp add callq (bad) (bad) movsb rex.WXB movsb rex.WRX sbb (bad) mov sbb stos push xchg ss (bad) fmull clc rex cld pop stos jns sbb sti pop rex.R and mov leaveq xlat movabs movabs jae in mov sbb (bad) add mov (bad) cld pop (bad) push (bad) enterq stos movabs push rex.WB or (bad) mov push test in adc (bad) loopne lods mov rcrl out in sub fildll (bad) and enterq jle (bad) pop mov (bad) repz rex.X fmull retq add loop enterq lods movsb (bad) hlt adc lret shrl cmp int3 rex.X jl rex.WX (bad) jne jmp rex.WRB (bad) and jmpq pop cwtl or scas test clc (bad) out xchg sub frstor lahf add stos out (bad) rex.WRX ror sub rex.XB xor mov sbb lods stos in jle jp popfq shrb push rex.WRXB cmpsl rex.B (bad) clc rex.WR mov test movsl cs vpsubb or lods ja (bad) jle lahf out xlat lods cmpsl (bad) add sub idivl roll in mov (bad) (bad) lods (bad) (bad) or xor lods and ja (bad) (bad) mov mov push icebp (bad) jo lods je fadds (bad) (bad) mov jge test sub (bad) stos (bad) sbb jge (bad) rex.WR pop jnp (bad) lods scas (bad) imul mov scas iret mov insb data16 rclb sbbl roll outsb rex.WR rex.W (bad) (bad) fsubrl cmpsb out lods callq rex.WB retq loopne mov push sahf mov jg rex.B sbb lods movabs lods push sub in or lods sti (bad) movsl pop xor or rex.WRX (bad) iret lods lret rex.B movsl xchg lods jmp sub out pushq (bad) neg (bad) test xchg (bad) lea out movabs test jae xor rex.X lods sbb and (bad) pushfq xor or lods (bad) sbb int mov jg cltd fldt lods adc pushfq xchg lods mov or (bad) lods rex.WX xor or insl mov cmpsb (bad) xchg lods movslq nop test gs lods (bad) jae xor adc int3 loope (bad) or cwtl and add adc ja in hlt rex.X cli movabs jns (bad) (bad) adc add lret test lods xor xor rex.B insb pop adc add or test scas sub test sbb pushq push fwait or out push jbe in outsb mov rex.R add movsb test mov sbb (bad) mov movabs jl (bad) jmpq repnz sti clc jo (bad) mov or push fnstcw mov pop rex.WR (bad) sub sub or pop (bad) mov fdivrp sbb jmpq rex.WXB and or out push fwait or inc xchg (bad) mov fiadd rex.WB cmc adc xchg movabs (bad) movabs cli adc cmp pop cmp (bad) mov cmp jbe stos xchg push mov popq (bad) add cmp jmp outsl mov imul add mov fwait push adc cmpsl std and movabs sub in movabs test lret cld adc add lods push in mov sbb add loope movl jmp lods lock cmp or and adc je lret callq sub jno sub mov add outsl jne fsts (bad) roll (bad) mov cli out fnstsw nop mov jmpq outsb leaveq lods jbe xchg mov rex.W cmp rorl xchg xorl (bad) jnp pop jrcxz loop callq (bad) add scas retq cmp out scas loopne stos jne (bad) sub or repz mov gs int rex.WRB fs movslq cs outsl jne adc leaveq (bad) push (bad) pop or pushq sbb fbld stos add movabs cli stos cwtl rex.R pop rex.WRX push mov jbe (bad) mov rex.RX (bad) scas in fistpll (bad) or xor fldenv adc (bad) (bad) lret pop enterq lahf jmp mov (bad) (bad) loope sti and jge int3 xchg push xchg and repz lahf push pushq rcl sahf cs lods test (bad) cli stos adc clc retq xchg rex jrcxz xchg lahf mov callq movabs adc push fdivrl cmp in mov or in cmp cs cltd (bad) and adc rex.WB ds mov or cwtl test retq (bad) lods push lret retq lods (bad) (bad) lock lods rex.XB (bad) fs nop lods pop orl cmp imul jae fsubrs rex.WB es rex.B lods (bad) jge add cld sbb es adc cld scas (bad) and mov in cmpsb loopne lods rex.WRB pushq mov movabs jrcxz (bad) add adc xlat mov adc lock lods hlt rex.RXB pop (bad) rex lods int3 rex.RB enterq (bad) adc push add movabs (bad) orl mov pop js callq loopne sbb mov pushq (bad) test pushq mov adc sub insb fstpt movabs mov rex.RB leaveq lret sbb (bad) or icebp xor sbb jge (bad) mov pop jnp sub shrl xchg lods pop (bad) xor (bad) fstpl in pop (bad) xor outsb lods rex.WRX movsl add (bad) clc mov mov cs loop rex.WRXB scas xor cmp mov add rcrl adc xchg jbe outsb lods push fadds lret movabs or lahf test movabs lods in cli and cmp jmpq icebp lods test sub adc scas mov fisttpll fsubs (bad) (bad) sbb lods es cmp sbb lods (bad) xor (bad) icebp movabs lods sarl pop lods xchg int and cmp imul lahf sub pop mov adc cmpsl rex.RB cmpsb lods popq leaveq pop jnp (bad) sbb pop in jge fcmovbe (bad) lods add and (bad) lods mov mov xor pushfq imul int3 (bad) (bad) or lods clc test add push rex.RX (bad) sbb jne leaveq pushq and rex.X push cmp mov add rex.WR push loop mov sahf (bad) and sbb lods in and int3 and (bad) or stos rex.WB je jl cmp movabs insb cli lods sbb jl sbb (bad) adc adc movabs pop rex.WXB or lods xchg xor rolb rex.RB rex.WX scas and xor mov sbb cld and rex.RB cmp insb mov push xorl out lods and insl int hlt iret jno mov sub (bad) pop add (bad) mov kmovw push fisubr rex.WR (bad) mov sbb xor pushq xchg hlt mov stos mov movabs lods xchg rex.WRB lods (bad) sub cwtl cmpsl (bad) jns rex.RXB xchg (bad) jrcxz xchg and mov and lods mov cmp add rex.B insb adc fisubl lods pop out add (bad) fwait callq nop jmpq (bad) cmpsl clc or pushfq sahf sbb cld lret (bad) rolb adc sbb cltd mov push movabs lahf (bad) sub jnp sti mov lods mov rex.WXB (bad) lret fwait push add xchg mov test (bad) testb or rex.RX xchg lods rex.WRX pop cli pop fsubrs rex.X fwait retq insb or adc mov and xchg mov es cmp leaveq cli fisttpll (bad) xor je nop gs mov js jrcxz ds (bad) mov (bad) mov enterq sub (bad) shrd scas push fisubr retq jne jno (bad) push (bad) or add mov sub out sti movabs test (bad) rex.WXB movabs adc mov (bad) retq sub fist sbb xchg cld jg lods cmp out data16 or test xchg lret lods adc pushfq lods (bad) ja cli mov repz movsl lahf and repnz lods (bad) cmp (bad) (bad) adc cmp lods xchg xchg sbb adc mov fcoms lea (bad) lods rex xchg int3 mov (bad) jbe adc enterq cmp or sahf mov lods vmptrst ds sbb js sub rex.WXB jle mov jmpq (bad) rex.WR jge lret (bad) test jge cmp (bad) jl jmpq movslq mov fldcw jg mov jnp out sahf jne push and out lods (bad) or (bad) jb jno rcr sub or pushfq imul adc jo cmpsl sub rex.RXB movabs pushq pushfq lods push mov lods sbb ds pop rex.W movslq retq movb sub pop scas in add mov (bad) sub xchg add push pop adc test mov pop adc sbb data16 sub (bad) jl jae stos or shl (bad) pushfq cmp cs xchg xchg shr (bad) adc pushq pop sbb out rex.WRXB retq add cli jb fwait mov rol xchg lods stos xor mov add mov mov scas lret xor sbb test sub cmp and test outsl loopne iret adc jge sbb ja movabs sub movslq (bad) shl fisubrl fmull (bad) jnp (bad) mov pop loopne jo in lods iret cltd mov jnp mov cwtl outsl jle cmp callq jne jrcxz jno in or retq pop adc test sbb (bad) subb or ja sub scas lods (bad) mov lret mov add rex.WRX rex.RB rex.WXB mov outsl and rex.WX testb popfq (bad) jo int jnp cmovbe lods adc insl cli sahf rcl std pop retq xchg scas mov popfq sub lods (bad) mov (bad) stos or cmp lods add or (bad) lcall iret rex.RX fildl cwtl or in movsl scas sbb lsl rex.XB pop callq lock lods cli (bad) adc (bad) cs sub cmp fldt cmp mov int3 pop sub (bad) hlt jns mov (bad) movabs lods sub retq xchg mov mov out fcmovnu sbb pushq rex.XB lods (bad) pop and cli pushfq cli shlb or jne jmpq jmp jp add jl mov lods push pushq sbb (bad) mov lods imul (bad) rex.RX (bad) lods xchg (bad) movsl mov (bad) (bad) rex.WRX sub retq jrcxz xchg imul retq insb imul jle pushq rex.RXB rex.WRXB mov sbb repz jbe and lods rex.WRXB add lods rex.W xor lods out add rex.XB mov movsl pop (bad) (bad) lods push insl and jg stos rcrb rex.B jo and jle mov (bad) (bad) sar testl push mov lods mov cltd repz lods (bad) jmp orb mov mov mov sbb (bad) fldl imul mov lods fsts push add xor jle jno rex.RX divb retq (bad) sub cli mov scas scas mov sahf add mov in int retq lods add pop (bad) movl and lods (bad) fsubrs int3 cmp add rex.XB lods add stos xchg lods repnz jmpq setg mov mov rex.WRB jo adc imul sar mov movslq or jrcxz faddl lods mov cmp in sahf movsl je sbb jrcxz lods jmp pushq rex.B movabs movabs sub cld sbb or popfq jo mov jge mov (bad) cmp add sbb shr lods out adc xchg rex.R rclb movslq lods cmp push rex.RXB retq sub loop data16 mov jae xor std in (bad) or and stos push rex.WB rex.WR sbb rcll (bad) pop pushq rex.WRX stc jbe xor pop mov sbb lods mov sub movabs lret mov ss out lods (bad) add add (bad) es icebp movslq test test in movabs pushq movabs stc or mov rex.WXB shrl (bad) (bad) mov rex.XB in scas mov rex.WRXB lods enterq rex.W cltd int rol cs (bad) shrl popfq mov sub (bad) movabs cmp in (bad) outsb fisubr sbb cmp mov sti sbb sbb in sub jg adc jns lods or mov fimul sbb loopne hlt lods outsb rex.WR loope rex.R (bad) rex.X (bad) pushq cmpsb fs add sbb pop cmp lahf icebp notb movsb mov cmp jmp sub loopne rex.X mov cmp xchg ja enterq jmp push sahf adcb rex.RXB sbb movsb test data16 (bad) (bad) hlt int callq and add imul lods (bad) (bad) scas xchg rol pushq lods fcmovu cmp js cmp lods movabs lods ds and je popfq rex.RXB (bad) mov (bad) xlat cmp cli fadd (bad) pushfq gs jo push mov es scas (bad) and rex.B jnp mov andl xchg xchg push out rex mov lock ja int3 xchg movsl xor push lods out jne movl movabs (bad) scas cmp test stc retq mov push movsb lods callq mov adc (bad) (bad) (bad) (bad) cmp loopne pushq jae sub fldl out lods (bad) cmp fcmove mov leaveq rol (bad) lods jns fisttpl cmp rex.RXB je outsl movabs es push and sahf stos imul or rex.RX lods (bad) test and (bad) (bad) fwait mov stos lods in mov sub lods add push xor fstsw cmpsl retq clc lods fmulp sbb mov ds (bad) jge scas pop retq jb insb or repz movabs retq fs vucomiss mov xchg lods rex.RX in mov (bad) lods loopne out sbb stc mov (bad) (bad) jb mov test jmpq lret rex.WRB sub int jmp (bad) mov cmp rex.R insb ror sbb and lods imul jae lods mov clc in or lods pushq push cmp lods stc sbb (bad) (bad) cwtl lret or xchg mov xchg loopne lods sub cltd cli and in adc stos sub and jne (bad) loop fcmovnb sub mov rex.RXB int lods fs (bad) (bad) not pushq lods adc mov or (bad) ss adc or rex.B rex.W repnz sbb (bad) retq fdivrs xor (bad) movsl jnp mov rcrl (bad) (bad) (bad) fidivrl xchg jae mov jo in es and lock fisubr cmp out rex.RB xchg add scas fnsave clc sub sub test (bad) sti stos lock fwait scas callq imull rex.WX jrcxz or sahf out rex.RX iret movabs or shrl adc xor cli sarl popfq scas (bad) ja movsl fiadd push sahf cs lods rex.W add xor jo (bad) dec jb (bad) adc lods sub sbb addl rex.RB rex.R jo (bad) or sti jbe add sbb cmp in jb fcomps mov cld xchg pcmpeqb (bad) popq jmpq cmp enterq (bad) leaveq scas fimull sbb movslq stc imul (bad) (bad) jl lods sub adc movabs lock or in int (bad) pushfq subb ljmp xor sbb mov mov jne idivl and (bad) pop xor jns lods xchg mov sbb cmc movsl repnz cmp (bad) enterq add (bad) rex.WX sub shll addr32 or jmp ja data16 shrb lods (bad) cmp subl mov lods (bad) or push scas (bad) xchg sbb lods movabs jmpq mov (bad) lods (bad) and je test mov fwait pop decb (bad) mov pop insl or imul sbb out xor and xor lods and jne rex.WR sub (bad) retq cmp xlat lock and pushq (bad) lods jnp (bad) xchg or rex.RXB lods cltd add scas lret push lods adc mov adc jle pop (bad) loope cmpl je mov cld mov sub mov xchg mov add rorl stos lods leaveq pop rex.WRXB stos xor pushq ljmp (bad) xchg rex.R mov lods data16 push xor ja out push jno in rex.WR (bad) adc test callq pushfq imul rex rex.WXB loopne out out sbb add loop jns lods adc jne outsb xchg repnz push in rex.RX movslq (bad) lods lahf mov icebp scas mov (bad) popq (bad) pop mov jno or lret xor fs lods sub movabs movsb jns sarb xlat lods mov push rex.WR adc pop or loopne (bad) lods retq push jmpq in lods or lcall mov xchg jl stos nop stos sbb rex and in rex.RX adc fisubl gs or (bad) pop mov movsb loop mov (bad) std imul cltd addl jbe sub vsqrtps and mov lods mov callq out xchg sarb and or pop sbb stc mov mov hlt or cmp lock push imull rex.W mov in mov in mov rex.R stos adc mov fiadd je xchg movsb xchg mov sarl stos popfq fildl mov jb add pop fdivl mov xor adc rex.WB rex.WRXB rex in xchg xchg shrl jp (bad) cmp sti cltd subb jno cmc adc cs std jrcxz xchg lods sbb es in scas pushq cmp fidivrl lods push xchg xlat imul leaveq callq and jle adc (bad) je mov lock rex.WR rex.WXB cmp cmp add mov mov iret and imul (bad) and (bad) repnz or sub cmpsb add adc mov (bad) shr rcr fs lods hlt or or scas (bad) xchg xor mov hlt sub gs mov jge in (bad) (bad) mov adc mov cld (bad) (bad) rex.WB mov rex.WR adc movabs out movsb std xlat retq fmuls ror mov in adc mov (bad) scas shrb insb jrcxz (bad) repnz mov cmp enterq imulb mov jnp fisttpl mov xor rex.WB outsl sub (bad) movsb gs cli mov mov comiss mov mov pushq sbb or lods lods test (bad) (bad) jne pop rex.WX movabs pushq xor incl es lods adc stos and lods jo (bad) stos insl movabs lods in add fs jrcxz add mov lods sbb push pop nop adc lods rex cs add rex.RXB rex.WR cmc mov mov jge test xlat lods in retq cmp lods loopne (bad) flds hlt gs stos add and (bad) lea sbb xchg repnz test retq fldl adc rorb xchg loopne sti pushfq add loop mov in (bad) lret rex (bad) (bad) (bad) js xor lods xor or push lods movsb scas and or rex.X lods (bad) cmp js loop or (bad) callq lods jno rclb movslq movq lods fsubrs rex.WB and mov mov rex.RB in push rex.WR in sbb repz mulb pop (bad) mov pop jrcxz cmp mov nop mov xchg jp sub (bad) jns test icebp or out lods cmpsl push callq sbb (bad) (bad) push lods lock mov (bad) sub roll push fmul shl mov add jge rex.RX mov mov xor lods mov mov rex.WRXB and mov (bad) insb fcom add hlt in test or add cmp sti (bad) jmp sub add insl xchg movabs and mov or notl lods cmp jnp cltd (bad) add jge movb rex.WR rex.WRXB jle (bad) jae sub rex.RB (bad) lods xor add add in add lods jbe (bad) cld (bad) in clc lods add push repz mov test sub movabs test std mov jnp movslq add mov (bad) sarl fistl cmp xchg in adc and lods mov scas adc lods mov callq pop scas (bad) sub lods cmc cmp pop xor (bad) jne js sub (bad) or push movabs xor push imul (bad) clc lock sub mov in sahf (bad) es rex.R and imul mov (bad) fs (bad) lods xchg jno fwait hlt sub lahf fdivrl movslq lods pop fprem1 add push insl fwait mov icebp (bad) out or lret pop sub clc pop lods or repz (bad) lret stos in gs sar fcomps (bad) mov mov ds pop lods rex.W adc imul lods js lods outsb pop mov cli lods cmp (bad) nop add xchg test add in (bad) outsb cltd adc jge (bad) (bad) ja xchg (bad) lods mov push xchg or lods nop push cmp pop (bad) addr32 sbb stos callq xchg imul sub and rex.WRXB fs push fwait mov lods stc jle clc add shrl (bad) or cwtl (bad) repnz loopne (bad) test lods xor rcrl or lods rex.RXB (bad) xchg loop xchg lods movabs or sbb rex.RB rex.WX es xchg xor and je jno in adc or ja or or mov (bad) lods cmp xor (bad) pop test sub jle add lods enterq mov or (bad) or mov cmp cmpsl rex.RXB lods cltd (bad) (bad) sti or jl sbb cltd add or push movsb lods mov pop pop retq movsl xor outsl pop lods mov imul fstp lods sub stc loop lods test out jno lods jne sbb and lods fwait lock adc lods rolb (bad) or mov (bad) sbb and lods add (bad) fstpl rex.RX pop shlb sub rex.WB loope jrcxz scas and (bad) pushfq fiadd mov test push int3 (bad) cltd jge xchg lods gs sbb xor mov rex.R lods cwtl (bad) jo mov or cld loope ss xchg rex.WB (bad) lods test loop ja mov sub loopne in sub lods (bad) jb rex.W lock adc or lods and (bad) sub lods out jae pushfq fld (bad) sar jns (bad) jp (bad) int3 cmpsb pop mov lods xchg (bad) jo cli adc and hlt xchg cmpsl mov sub in insl sti fsubrl fucom (bad) sbb mov add push jae in (bad) mov iret lea fldt xor insl mov adc lods repz enterq sub sbb movabs sbb (bad) rex.XB rex repnz xchg movsb and lods mov fsubrl jnp mov int3 rex.WR jmp outsl jno (bad) sbb lods je (bad) and xlat cmp mov cld jbe cmp fisubr adc loope lods enterq nop sbb xor rex.WXB lods mov rolb mov push sub leaveq (bad) loopne testl or and (bad) or jae in cmp (bad) (bad) retq lret xchg or mov (bad) (bad) mov hlt pop (bad) rex.R imul lods (bad) rex.WX je stos (bad) lods push shlb cmp pop std stos (bad) stos pushq sarl mov cmpsb lods imul add jg lods movsb test mov xlat mov andl lock push cmc int3 pop sub cmp adc hlt adc shr sbb sub shll add mov rex.R cmp stos shlb (bad) lahf lods adc fldenv fs out test mov mov faddp xor and test xchg ds pop rex.R rex.WRXB stc and lods xchg jbe imul lods movabs ss lods mov xchg push test scas cld jbe out (bad) imul (bad) clc jne xchg mov jb stos andl mov js cld pushq jb stos adc cwtl fdivrs orl and ficom in (bad) stos je mov xchg mov rorb (bad) movabs fsubrl push mov mov xchg mov sub push fwait mov mov cld rex.WR sbb push mov fnstenv or or or ljmp cmovae fldcw movsb sub loope cmp sbb add pop lods jae push mov popfq (bad) rex.RB mov cmpsl (bad) jrcxz movabs lods incb repnz addr32 adc jno (bad) shll mov outsl lahf mov mov testb xchg cmp rex.W (bad) lret rex rex.WB xor nop imul cmp (bad) lods xchg (bad) mulb push and int (bad) (bad) jo scas test sbb out cmp push jl je js adc rex.B js or repnz mov mov cmpsl pop mov (bad) pop (bad) rex.RB xor (bad) (bad) mov faddl jrcxz insb lods sub repnz in fldl adc jnp pop retq push rex.XB rex.XB clc and lods test jae stos adc lods (bad) (bad) int (bad) (bad) mov lods fdivrs xor imul movabs or fnstcw and lret callq jno in (bad) lods (bad) out xchg mov and mov adc cld or mov pushq movsl movslq outsl push in fcmovnu lods idiv pushfq and push cwtl lods shlb pop pop insl test lahf pop (bad) adc add lods rex.R mov xchg sub push sbb lods (bad) fucomip xchg test (bad) incl rex.X lods pop (bad) lea or lods xchg rolb fisubrl insb (bad) (bad) shll leaveq imul jb push mov rex.WXB and (bad) gs lahf (bad) xor mov sub (bad) adc mov stos fdiv rex.WR xchg or movabs jns mov mov (bad) adc jmpq (bad) movslq sbb retq mov test jge mov (bad) add sub push shll retq (bad) jne rex.WRX shl insl mov and lods pop add (bad) clc iret (bad) jg imul adc mov je insl (bad) xor lods jmp fiadd pop lods mov test xchg lods add and mov in (bad) jge int pop rex.R push (bad) movabs adc jo retq (bad) cld enterq (bad) rex jbe jno in mov leaveq mov lods rex.XB (bad) add mov cmp sub lods adc jne xlat test xor xchg mov in (bad) xchg (bad) lods sub rex.WRXB fdiv adc cwtl add pop xchg push rorl adc lahf and int cmp pop (bad) lods adc mov std pop adc lods (bad) js mov (bad) mov out xchg lods mov in stos out mov mov scas rex.WRX jmpq (bad) sahf in sbb sbb (bad) iret lods (bad) sub (bad) mov lods xor pop sbb rex.X (bad) enterq xlat (bad) xchg push out mov or (bad) test shr rex.WR rex.X jle clc push jp clc fidiv rex.XB cmc rcrb addb add adc in xchg fwait sub movabs xchg add mov test xor jrcxz je xor stc (bad) or in lods push int3 (bad) out rex.WR xor mov xor stc mov sub xlat callq sti out rclb mov add mov rex.RX int push in jne xor movsb lods leaveq jbe xchg cli pop or gs notl lods lret sbb stc stos lods fcmovne jge lods fwait retq (bad) (bad) lods cmp jb insb jg lods lock sbb and rcll mov or lods (bad) add push je mov (bad) jns movabs shrb data16 je jmpq enterq stos vpextrw (bad) lods xchg movsl adc or mov movabs add lods stos rex.WRX xchg pop lods sub adc jge insl mov loop jle rex.RXB movsl adcl retq lods rex.WRX outsb add adc setne (bad) push jmp (bad) movsl rex.B (bad) mov in retq cs pop lods sti out (bad) adc movabs rex.RB cmp loope sub in in xor rcll sub (bad) (bad) movslq data16 pop scas xchg lods jnp jp or rex add vcvttps2dq or rex.B mov rex.RXB cli lods hlt add stos in stc lods in push fwait rcl jb mov (bad) jle sub (bad) mov mov lods xchg (bad) pop std retq in rcll movsl lods mov subl ja mov hlt lret xchg or lods (bad) xor rex.WX mov movabs pop enterq lods add rex.WX imul jo callq cmpsb cmp (bad) test xor (bad) jmp lods mov cmpsb mov (bad) rex.WXB xchg mov or sub rex.WB (bad) pop clc stos enterq gs mov push adc mov pop nop push cmp adc rex.RB pop xor adc retq sub movsb cmc mov (bad) decl push push add and insb lods xchg rorb add scas popfq (bad) sub xchg push sbb in lods test fs pop (bad) mov fdivrs push pop add mov mov mov in and jo icebp lods fnop (bad) push add loop mov hlt mov and test cmp out outsl repnz mov pushq shll lods insb jb xchg subl (bad) cmc mov lods (bad) movabs adc callq push pushq add out or sbb rex.WRXB movabs (bad) mov (bad) jp mov jbe (bad) insb shrl push mov fmull fidivr (bad) lods mov mov xor mov push cs int adc jl rex.WX loop jl push (bad) cmp jo,pt imul sbb xchg rex.WRXB or lods push sbbl xlat in stc hlt (bad) or jae rex.WB (bad) rex.WXB insl mov out push retq js and jbe lods rex.RB rex.WB rex.WXB xchg insb sbb scas imul scas movabs pushq add jp outsl lea repz xor xchg lods sub imul push stc lods clc int sbb (bad) scas push loop xchg jbe xchg (bad) fmulp sub repz mov out int adc mov xchg push (bad) add sbb rex sahf xchg push rex.WR jmp adc jmpq iret xchg mov (bad) (bad) push test pop mov lods add decb test mov in lret lods push mov pushq roll (bad) test cmpsb int pop (bad) jmpq lods lret mov cmp (bad) sbbl or mov or add mov add cmp in or sub ds imul mov stos movsl cltd (bad) mov rex.WR lods (bad) xchg je jmpq (bad) rex.WRB cmpsl jmp std and nop or mov rex je mov xor lods out enterq and adc shrl jrcxz insb (bad) lahf in sub cmp scas sub scas push rex.B mov callq mov cmp in push cltd (bad) xor mov out xor insl inc outsl cli lods adc sbb mov cmp sub add lods sarl (bad) mov rex.WR scas repnz test (bad) sarb in (bad) cmp shl scas xchg (bad) jne sub lods imul test push adc lods (bad) (bad) sbb enterq sub pop add mov mov mov xchg lock pushq mov imul jge jp pushfq test xor adc fcoml xchg xorb (bad) addr32 gs xor int3 (bad) sbb insb xchg rex.WRXB js scas imul div mov lret push sub xchg xor mov fwait push and adc movabs fisttp mov mov sbb scas (bad) push add xchg (bad) movslq cmp xlat notb rex.B mov jmpq (bad) icebp and (bad) shrb (bad) repnz gs mov add (bad) scas add sub sub push rex.R rex.RB mov repz jns mov and jl insl movabs lods callq cld and mov sub (bad) stos rex.WR add (bad) incq (bad) loope outsl rex.X cmp sub vshufps sub (bad) add insl lods clc adc sbb add sub or roll sub decb sub cwtl test sub jp,pn (bad) push lret lods jg movabs retq mov add jmpq push mov cmpsl rex.RX iret test lods (bad) adc jnp adc data16 rex.RXB mov fsubrl (bad) lret loope lods rex.XB paddq test loop xchg jp fmul lods (bad) (bad) mov xchg jl out mov xchg mov cmp xor (bad) insl sub (bad) je or imul mov rex.R (bad) sahf (bad) xchg xor lahf (bad) out pushq imul jns cmc ds leaveq loope sub lods stos retq shll test xor (bad) insb cltd movabs lods jrcxz cld and ds sbbb xchg mov cltd jmp (bad) js lods mov rex.WR retq or jp lods stos sub shl sbb lods mov insb not rex.WB jg xchg retq mov int3 mov pop (bad) xchg (bad) scas cmp fmul or push fdivrp push sbb mov sub mov lret (bad) or fldenv (bad) rex.WRX rex.R (bad) lods stc adc add mov mov mov lods xchg pop sbb lods pushfq test pop (bad) lods (bad) (bad) sbb (bad) mov outsl or test (bad) lods xor loope hlt cld in xlat adc in mov js (bad) mov push outsl (bad) insb test sbbl sti xor out outsb sbbb lods and scas iret movsb mov rex.WRB push pushq cmp (bad) std lahf rcr rex.XB callq sahf sub jae (bad) clc imul lods cmp shlb outsl adc or lods cmp sahf and movsl xor pop (bad) rex.WRB mov (bad) add movslq sbbl mov mov and std lods adc js rex.WRX jp idivl jno rex.WRXB and jb jle cld movabs in cmp (bad) ja rex.WRX rcrl addl rex.WRB int3 movabs shrb out lods sbbl mov enterq std or mov imul add adc add mov add sub or js,pn lret mov xchg or rex push xor imul jbe movabs in mov shrl lret and sub lods and pop gs xchg rex.X out (bad) mov mul scas (bad) insl addr32 and in (bad) cmp or add xchg rex.WR repnz lods pop mov (bad) enterq callq insl cmp faddl add mov and mov fidiv movslq lret sti mov pop lret push add or or lock (bad) add sub mov adc xor rolb movabs rex.WRX retq fwait es (bad) lods lods adc sbb (bad) mov jp stos flds add out out xor loope push jg lods fs and lods cmp movabs (bad) lods rex.WRB cli lods sbb (bad) jbe jl pop lods fidivl cmpsl nop lods icebp sbbl ffreep and pop mov xor cmp mov mov sbb xchg jne rex.WR adc movabs jae mov mov (bad) pop rex.WR je insb lods insl rcrl pop test mov repz ss rcr lods (bad) mov out jrcxz hlt and or jbe movsb ja retq (bad) test lods lcall std push xchg out pushfq clc jp test mov mov sahf in fucomi scas mov stos (bad) xchg and cld and (bad) lods movd xor mov (bad) out loope xor sub mov clc sahf rex.X rex.WR insb jge rex.WXB sbb lods pushfq adc rex mov pushq cli mov xor test stos xor push sub xlat lods je (bad) xchg in add and outsl callq (bad) mov xchg rex.X sub sub or not scas mov lods rex.XB lods mov jne cld fsubrs out rex.WB (bad) push and pop push lods fucomi push jo in sbb movabs test (bad) rcrb rex.RX add cmp (bad) xor xchg (bad) cmpps sbb mov add jle enterq sahf stc fdivs int scas ficoml repz mov fadds sub xchg movabs sbb (bad) mov fild stos fnstsw xchg jg lods xor rex.XB lods sub mov insl cmp xor rex.WR jle xor scas je and data16 rex.XB lret in push jns sbb add cmp sbb xchg mov sar data16 rorl jae lods xor jns lods pushfq push add (bad) test je mov rex.RX test xchg repz stos movsb mov rex.XB retq mov pushfq lods xlat xchg clc rex repz outsl retq adc stos or and (bad) shrd rex.WB mov popfq insb (bad) movslq addl rex.WX mull mov out (bad) (bad) adc fadds loop pop add mov mov sub insl popfq rex.WRX fnop push stos mov rex.WR in test repz jb movabs (bad) icebp sbb lock push int3 (bad) movslq (bad) (bad) mov (bad) out add cmp cld xchg es lods outsb (bad) xor jo icebp mov js adc mov sub sub sarl sbb sbbb pop sub cmp and add sahf data16 movabs in mov add mov push test iret xor rex mov pushq fimul insb sub fprem1 gs hlt rex.WRX scas sub mov icebp out xchg cli sub pop loop and pop (bad) in lods imul (bad) or lods fnsave or lods retq mov xchg in rex rex.WX xor (bad) lea sub add callq adc mov rex.W shr insl mov out or pop stos movsb rex.WB rex.WX push or push fstpt lock cmp mov (bad) mov lods js retq add rex.X mov mov adc movabs lret mov jae lock sub mov sbb mov repnz test es xor cmp stc ss (bad) lods std jae pop (bad) and rex.XB and lods xchg outsb imul fildll add (bad) jno xchg sub outsl mov lea jp lahf loope in jns (bad) sub sahf push cli scas mov fldcw lods xor jno adc lods outsl mov leaveq rex.R or mov movabs icebp (bad) out out stos ror mov jmp mov cmc pop mov xchg clc cltd fildll enterq (bad) out sub test adc mov and subl cltd in js leaveq rcl callq pop cld rex.WR jl rex.WB cmp xchg out jmp rex.W adc jmpq rex.RX xchg in adc scas rex.WR frstor movabs sti je insb push scas add fs (bad) xchg adc test sub jge pop leaveq cmp lods mov fistpll rex.XB and (bad) mov (bad) sub and idiv icebp incb and sbb out rcll mov jnp pop sbb xor and retq loopne imul leaveq lret sub cli xchg mov add (bad) (bad) lods lods in adc in pop retq push (bad) rex.WXB idivb xor movups (bad) jl stos push sub sub mov fs mov (bad) mov add rorl lret pushfq lods callq adc xor adc popfq pop xchg add movabs jne movsb rex.W rcrl rex.XB rex.RXB adc jp mov retq or jl sub lods loop rex.W jns outsb and cmpl sahf lods xchg rex.WRB cmp sti lods lret push lock lods or mov add jle bnd (bad) cmp outsb (bad) jo cld adc (bad) lods and (bad) shrb or or mov ss shrb in lods fwait pushq sbb fsubrl clc subb popfq jae xchg sbb xlat (bad) test lods loope adc mov xor repnz sbb add xorb xor scas addr32 rex.WXB sub xchg data16 stos scas test (bad) or add lods incl and lret icebp adc mov (bad) in rex.WXB add adc mov stos lods pop (bad) testb jne lods loope mov cltd clc addb test push (bad) data16 rex.RXB cld je (bad) lods mov xchg jrcxz (bad) mov pushq mov jmp popq test (bad) rol subb xchg mov mov insb inc (bad) test push callq cli lods adc sti and rex.RB rex.RX movabs shll xchg xor mov rex.R jle xchg int add popfq scas imul sarl ja push lods (bad) scas lahf (bad) in lock out iret pop imul xor lods movslq hlt gs xchg movabs orl jp push fcoml rex.WR (bad) sbb data16 shrl (bad) rex.XB cli fsubrs push imul rex.B xorl xchg xchg retq rex.RX or scas mov popfq lods test (bad) lret (bad) sahf rex.WRB stc movabs lock mov out retq test sti in imul adc lods insl add mov or (bad) lock pop pushq or cmp lods sbb (bad) pop sbb insl xor in push (bad) ficomp ja adc fnop sbb stos insl lret sbb test mov nop hlt (bad) lods mov or mov out cmc and push lods orl popfq lods (bad) adc cwtl add xor shrb xor cwtl lods jae (bad) mov mov lret rex.WB test insb fdivr cwtl lods imul in test (bad) shrb orl pop je fwait cmp jg loopne (bad) scas jp (bad) (bad) mov hlt mov movslq and sbb jp in sti insb loopne mov mov add rex lods cmp test mov rclb in pop xchg movabs xchg movabs xchg movabs loop sub (bad) mov jge iret mov lods pushq (bad) add cmp test mov xor int3 mov scas movabs jb jle jg and test pop push lods rcrl mov mov (bad) cmc mov movabs adc adc lods fbld rex.RXB pop lods cs cltd mov xchg lods jl fs movabs (bad) test mov lahf lods xor mov pop (bad) lods addr32 fnstenv cmp (bad) lods fimul and lods and cmpsl jnp rex.WX push cwtl xor mov push rclb mov mov (bad) jmpq lods jmp clc mov mull mov out xchg rorl lods xchg jmpq retq jl rex.WR repz pushq sti xor mov and cwtl add (bad) out jle (bad) pushq (bad) pop insb pavgw jns (bad) lods (bad) int3 retq (bad) in lods icebp (bad) stc sbb scas js callq adc rex.X lods in mov rex.WR stos movabs add lods subl rex.WXB (bad) mov (bad) add and pushq (bad) outsl (bad) sbb push test xor (bad) rex.WRB mov test imul lret and lods sti clc jbe (bad) and and (bad) test adc lods lea mov stos jle rex.RB shrb or pop lods sti (bad) (bad) lock jrcxz pushfq lods xchg fs out push push (bad) sub mov lea sub (bad) je icebp lods cwtl jg (bad) and testl jmpq js xchg lods test pop fidivrl lods add jns sub mov rorl adcl sbb (bad) jmpq pop movabs fcmovne mov mov int3 (bad) insl jmp adc int3 sub or cmp callq adc jmpq lret loope and lret (bad) sbb (bad) sbb mov lock adc (bad) in (bad) push sub sbb mov xchg test movsl xchg sub and rex.RXB subl jb xchg (bad) mov rex.WR xor rex.WR adc (bad) (bad) scas rex.XB sahf mov (bad) cmp cmp rex.WB rex.RXB lods pushfq loop clc pop sbb add lods movabs lods sub mov (bad) stc add jle es add xlat (bad) (bad) (bad) mov sahf lods fstps jno (bad) (bad) rex.WB xor jae jg in and sbb jo cld lret fcmovb sub mov and pop (bad) pushfq scas sub hlt xchg jne retq cmp cmp mov sub (bad) adc and jo mov (bad) in cmp pop cmc (bad) lods shl (bad) cs repnz (bad) lods sub fadd retq or rex.WRB leaveq mov out (bad) lods mov movabs ja fndisi(8087 lods (bad) andb or add or rex.XB divq and and xchg shlb cmc rex.WR jle in (bad) rex.WX mov and pop mov js (bad) lods testb test (bad) lods (bad) outsb loop cli addr32 (bad) sub add ficomp mov add xor xchg or sub jne rex.W clc sub mov cmp xor jo adc cmp jnp adc sub sbb push (bad) lods js cmc xor scas sti pop je rex.R sub (bad) je xchg (bad) lods sahf xchg jmp adc rex.WRB adc scas pop in rex.WX (bad) cmp (bad) lods test (bad) jbe stos jo lea test mov sar (bad) jno or rex.X mov imul and mov enterq out imul pushfq pushq (bad) mov outsl mov or push mov push xor rex.WXB test repnz scas lods nop mov enterq push cld pop insb in xor mov push rex sub lods mov xchg jrcxz,pt in in jbe add lock and cmp xchg add callq (bad) pushq xor lods pushfq and (bad) cmp mov push cmp outsb addl rex.WRXB adcl scas rex.RX movabs fadds adc (bad) pushfq push lahf cmp (bad) lods clc mov iret stos mov cmp push mov clc (bad) fild lods shrb fadd cmp add lods jae (bad) adc in in (bad) cwtl leaveq in pop rex.WX outsb jmpq scas lock (bad) insb mov fldcw jg (bad) jo sub cmpsb pushq (bad) mov rex.B mov movabs (bad) mov in mov cli (bad) and sub ss sub fdivs sub imul leaveq and es mov nop hlt (bad) mov (bad) cmp hlt in stc cld adc lods repnz mov push ja mov (bad) cmp movabs mov push cmpsl in loope cmp jbe lods and cli (bad) sti lods rex.WXB (bad) xchg rex.B fs pop std adc fcoml lret mov gs or and cmc mov test scas add rex.WRXB adc sbb rex.XB sub jae cli imul loope (bad) clc mov xchg pop (bad) xchg cmp lods mov mov rex.WRB mov xchg (bad) lods push cmp (bad) xchg add pop rex.RB lock jno xlat scas or movsl sbb rcrb lods idiv mov rex.W fmul and adc out movabs imull add outsl (bad) insb sub test neg rex.RX stos hlt (bad) pop lods iret xor rex.RXB mov notb add movsb fisub leaveq rex.RX movabs out push lods loop or add rex.X adc test mov test pop sub sub loop or (bad) (bad) stos fs and (bad) xchg jle stos in xchg pop (bad) sbb (bad) mov jo jge flds iret xchg retq rex.X (bad) lods xchg jns sub in (bad) in sbb mov in sub mov (bad) jrcxz test cmc std movabs push sub push setae sub sub (bad) movsb callq rex.X iret pop and rex.B add cld cmpxchg jne or shll add sbbb cmpsl cld outsl lods cltd rex.B repnz callq cmpsl mov jg lods mov (bad) and jbe in mov lods (bad) jge and lea sbb callq cs movabs add (bad) add lods adc rex.X rex.WX rex.XB mov insb and jmpq jo sti lods mov jne adc sarl cmp xor add xchg push mov retq loope lahf stos (bad) cli sbb leaveq std mov movsb lea sbb (bad) mov fisubrl sbb xchg push mov lods mov or lods sub mov (bad) rex.WR addl lods (bad) adc xchg jb imul outsb sbb lock push (bad) (bad) imul iret sub rex.WR cmpsb test pop add lods (bad) xlat adc rex.WRB adc (bad) sbb jmp pop add mov lods mov and sub and sbb sub retq cmpsl sbb movabs (bad) add mov sbb sbb test cs jmpq rex.RB in stc stos mov jmpq data16 push insb cwtl jl add push lret add xor shrb icebp (bad) cmc cmp mov (bad) mov mov adc jae rex.WRXB stc (bad) frstor sub fldenv mov (bad) imul insb retq cli fbld (bad) pushq data16 rclb (bad) rex.RX lods (bad) jno stc push clc pop out pop mov jno ds cmp rex.WB rcrl lods movabs rex.W jbe rex.WRXB imul fsubrl jb ja (bad) pushfq jp (bad) mov lret nop xor test and mov (bad) rex.W fabs lods stc movabs rex.B mov cmp jrcxz xchg lods or pop (bad) cmc or addr32 mov rcrb mov cli cmc (bad) adc sbb (bad) rex.WRB mov or lods or mov add pop mov sub (bad) lods jnp rcll mov lods (bad) sub (bad) push stos push repz sbb push pop lods (bad) add pop stos movabs jo cmp adc (bad) mov xor out (bad) sbb mov cmp scas (bad) mov in pop roll sub rex.WRX in sarw add push lods rex.XB rex.WRB addr32 jp retq xchg rex.WX mov rex.RB int3 out enterq cmp (bad) or jbe push int3 xor in adc lods (bad) test cmp sbbl fninit lods cmpl decb movabs movabs (bad) sub fnstcw sbb rex.RXB (bad) add (bad) push xor movabs (bad) retq jl (bad) sub (bad) push scas xor push xorb es mov lods cmp jne (bad) shrq sub mov and icebp rex.RXB fwait (bad) xor jrcxz outsl fcompl mov add test faddl cs cmp mov xchg fst mov lods push mov insl pop add (bad) scas add (bad) in sarl mov sbb sbb xor pop insl adc lods cmc (bad) (bad) xor test cmp movabs xchg cmp mov movsl loope xchg jo insb mov adc movslq int add and shlb add movsl movsl fcmovb add and (bad) out adc push add insl rex.RXB mov and lods hlt mov xor push outsl adc lods and in jbe (bad) lods jne std lock mov jle jns (bad) cli adc mov add (bad) rcrb out cld jl nop lods jns cmp pop (bad) rex.WB (bad) sbb retq (bad) shll imul (bad) or (bad) adc insb lahf xchg pop cmp sbb or lods in iret ffree movsl (bad) jo lods movabs fwait xor movabs pop (bad) sub lods stos test push cs (bad) add jnp lods stos movabs rex.RXB (bad) (bad) subl retq (bad) hlt pushq movabs imul push sbb imul test mov and (bad) rcrb (bad) pop mov fcmovb lods add repz fldt mov (bad) jne cmp jge sub out sub out or push clc rex.B ds addr32 movslq ds retq sub sbb insb test insb (bad) (bad) out int3 or jrcxz (bad) cmpsb adc lods xor xchg imull sbb loop push sbb xchg lods (bad) scas insl not jb sub xor leaveq stos (bad) push test retq test pushq lods (bad) (bad) movabs add jnp push and jno xor scas subl in rex.WR xchg in push popfq stos mov imul mov (bad) adc mov scas faddp pop jle pop lods retq pushq (bad) adc sub xchg adc cmp rex.XB test cmp xor nop cld xor jrcxz add push adc insl or mov xor (bad) push int3 rol js rex.WRXB pop adc (bad) cmpxchg sub pop out outsl insb imul push sbb adc (bad) (bad) mov ds scas js movsl mov (bad) (bad) lods adc je retq mov sbb (bad) mov xchg mov insl movsb (bad) (bad) out test sub sub setno and mov int or rex.WRB (bad) pop adc enterq in outsl xchg mov jmp sbb orb jns insb push cmp (bad) adc (bad) (bad) in lock sub xor pushfq cmpsl imul and mov cli (bad) cmp movsb cld jmpq xchg mov rex.WX fs mov cs in or (bad) jne pop jle rcll xchg (bad) (bad) insl outsl lods lret (bad) jrcxz mov and es adc or (bad) mov pushq pop sub lret stos lahf adc (bad) lods adc lods cmpsb mov mov sub lods rex.WXB jle xor adc (bad) and imul rex.RX lods outsb movsb adc insl sub push sub rex.X rex.RX pop cld cmpsb (bad) sbb lea lods sub mov mov cld cli incl rex rex.WRX loop ja movslq lahf pushq lods push sub (bad) movabs js (bad) rex.RB fsubr shr add pop nop lods retq (bad) xchg callq lods (bad) js add add (bad) stc test (bad) mov loopne in xor (bad) (bad) callq test lea adc rex.XB jne add je data16 imul lret adc rex.R cmc fwait adc lea jrcxz mov adc (bad) sbb insb cmpsl jns adc or hlt (bad) rex.R fs rex.WB xchg push cmp sub addl retq movabs movsb std xor rex.WRX lods rex.B xchg pop stos xchg andl rex.RX std push scas cld rex.RXB test cmpsb lods stos rex.WR insl (bad) mov out lods mov sarb (bad) in lods movabs (bad) xchg int3 cmp mov lods cmp push mov sbb out pushq xchg pop lods pop xchg out (bad) ja lods pop cmp rex.WX rex.W mov sbb and sbb stos pop mov lods jbe rex.WX ss push lods movabs add stos lahf jrcxz imul lods rex.WX movsl lods mov outsb leaveq pop lods rcrb movabs mov rex (bad) jnp fdivl mov in lods (bad) (bad) clc add mov jb jle xor lahf fdivrl shll pop std and repz repnz ss cld sbb pop mov cmpsb mov (bad) jl mov fist xor js lods (bad) xchg or jo (bad) sti xchg fsubrl popfq jmp ficomp mov lods (bad) (bad) (bad) movabs xchg adc adc lods outsb rex.RX iret (bad) data16 repnz mov rex.RXB rex.WR mov fisttp (bad) adc scas xor sbb rex.X adc leaveq jrcxz out data16 and cmp cmp rorl jne mov incb stc pushfq lret sbb (bad) js lods fiadd out cld fildll (bad) xor lods mov add jle (bad) test test push sub xor or popfq callq pop adc pop outsb or lods sub stos sar rcrb test (bad) lods je rex.X jrcxz or jg mov jnp in pushfq jmpq mov and sub add mov cmpsl (bad) stos xchg imul movabs hlt pop ja (bad) pop lods (bad) movsl lea in scas mov lods push rex.WRB sbb mov jbe adc sti cltd (bad) fmull ss adc sete lods jbe (bad) and xchg fisubrl mov test lods in movslq lods flds and mov sbb (bad) mov scas mov mov mov imul fildll imulb scas (bad) cmpsl rex.X (bad) xchg retq add data16 xorb mov rex.WB (bad) rex.X jmpq rex.B push ss js rolb mov sti jae sub cwtl outsl mov lods (bad) mov jb mov mov adc jo mov imul rex.X adc adc cmp (bad) lods nop vandnpd fstpl (bad) lods stc mov mov or sbb lods mov (bad) loop rex.RXB movabs enterq (bad) sbb in jb mov leaveq push test jl (bad) rex.WRB mov shll fistpl jnp rex es rex.XB sub add cmc xor lods or std lock test cmp adc (bad) rex.WXB cli adc (bad) clc and cwtl retq sub fwait rex.RX mov or lods fnstcw repz adc jne mov movabs add and test and mov fsubrs rorl xchg (bad) retq mov rex.RB mov fcoml lods or movsb es hlt jbe (bad) cwtl (bad) out test je fldcw or lahf cmp adc movabs xchg popfq lods xlat pushfq adc subl jb lods movslq pop (bad) rorl xchg leaveq scas mov pop lods push in insb movsb xchg (bad) pop jbe (bad) adc mov mov sub cmp cmp cmpsb popfw sti int3 movslq xor and sti sahf fwait ds test rex.W cmp mov adc sbb mov sbb cmp xchg add lods flds enterq lret (bad) popfq sbb stc cli idiv lods shr rex.RXB jb xlat clc clc lods rex.RB or scas rorb movsb int3 sbb pushq xchg fs (bad) rex.WRXB jno pop out lods hlt push sub adc sub mov rex.WRB retq loopne stc rex.WRXB push sub (bad) sbb js scas rex.WRB cld in pop lods sbb retq xor pop jae movabs (bad) sarl lods jb sbb sub pop and xor jrcxz in test cs es pop mov nop xchg sbb (bad) scas rex.X callq outsl incb xchg rex or movslq out nop mov mov sub lods mov (bad) imul lods sub testb lock or jae movsb push outsl rol lods xlat sub rex.RB lock stos push addb loopne movsb pop insb push mov xor lods hlt clc ds cmpxchg (bad) es in mov nop scas or loope cmp fcompl out mov cmpsl add and sbb stos insb jl movabs lods ds (bad) rex.RX sub pop push xor (bad) in insl insl hlt pushfq adc nop fwait cmp pushq jg xchg jo out jno add in mov ds sub movabs test mov sar lods scas (bad) add mov pop movabs lods sbb mov stos gs (bad) cld fs jae add lods pop mov (bad) lods rex.XB (bad) mov rex.RX xchg (bad) (bad) xor pop out scas (bad) outsl pop lods adc imul lods mov push (bad) out cmp (bad) add stos mov lods xchg rex.B rex.WR sbb lret (bad) sub ds cmp or mov lock sbb pop add (bad) pushq mov cmp scas and rex.WRB xor rex.WRX rex.WRB cmp out xlat jae rol test (bad) xor lods outsl lea int lods jne (bad) repz lret (bad) mov popfq mov sbb lods sub mov out jmpq imul outsl fdivl retq mov and loopne faddl pop lods repnz (bad) lods sbb adc jae lods mov pushq popfq mov mov out sbb movabs xchg cwtl mov es dec lret cmp (bad) addr32 add sbb mov and xchg sti test xchg sub int lock cmp (bad) fcoml mov adcb lods rex.XB mov pushq xor (bad) repz cmp rol mov (bad) pop mov rex.RXB push pop sub mov or rex.WR adc jg insb (bad) std (bad) retq pop movslq mov (bad) rex.WRX movabs sti cmc lods mov mov rclb (bad) ds or or sbb (bad) movabs push and sub (bad) push ljmp push (bad) add or rex.WRB stos adc (bad) cld mov test mov rex.XB lods (bad) sub xchg add outsb in out cmp fcompl (bad) lods (bad) sub pop xchg pop cmpsl pop lods xor (bad) movsb repnz sub cltd lods (bad) jg movabs mov fcoml (bad) in (bad) sub xlat rex.RX add rex.WXB jg push rex.W repnz lret sub add insl cli out movabs lods (bad) and adc (bad) fxam rex.XB rex.WRB cmp xlat sub rorb lods mov cmp test lods adc jns xor (bad) jae rex.RXB jne cli cmp lods (bad) rex.WRXB test (bad) sbb jg lods cltd (bad) cmc mov sahf in lods sub pop in adc je mov fs lods es xor lock test loopne adc adc jno pop jl and rex.WRXB (bad) lods imulb (bad) je jbe sbb adc rex.B mov imul retq cmp (bad) in insl cmpsb mov or rex.RXB (bad) lods cs jge mov scas jo sub mov adc int xchg clc (bad) je movsb cmc in pop orl and loop imul sub sub rex.WRX out std out movabs jbe (bad) sbb (bad) rex.R lods jno mov callq mov movslq sarb (bad) mov xlat repz (bad) lods add lahf pop movabs cmpsl xchg jno xor mov out mov pop mov rex.WRX rex.X mov rex.WRXB (bad) mov rcll lea popfq cmc sbb or flds stos rex rex.WR rex.WRXB jae xor stos sbb test jbe lea (bad) xor enterq lods rex.WB mov cmc movabs (bad) mov xor cld or mov pop (bad) fld mov in adc (bad) clc sarb in roll mov test movsl movsb xor shrd jge pushq shlb div jl fistl cmpsb xor lret (bad) mov lods loop movsb mov adc mov repnz imul cli and rex.WRX adc (bad) mov mov cmp lods cwtl out addr32 sbb pushq orl in imul rex.WRB gs callq mov sub cmc sub rorl in jnp out jno (bad) scas pop imul or and mov mov rex.W (bad) adc xchg ficoml xor or movabs sbb push popfq lods mov jge xchg xor lods xchg sbb sbb movabs (bad) mov xchg push lods pop movabs rex.WRX (bad) cmp jle cmp movsb rex.R stos (bad) imul jb movsl je sub mov fcomi rex.WX lods addr32 retq cwtl adc je mov lret xor fwait sahf lods stc outsl pop scas js add lods sbb popfq mov in (bad) (bad) mov adc lods xchg mov (bad) add jbe callq movabs out loopne cmp mov stos scas mov adc fwait in (bad) push xor mov cmp scas and xor mov outsb (bad) leaveq add rorb lods insb adc clc fwait rex.B adc add rex.WXB lods mov rex.R cmpsl (bad) jae int3 ficoml addl mov mov lods (bad) xchg shrb push (bad) fmuls jo jrcxz movabs jns in insl fstpt out (bad) imul (bad) in sahf add movslq sbb cwtl in (bad) test cmp or lods sbb add sti in xchg fwait sub rex.RXB in shrl xchg mov imul mov pop mov in outsb mul cmp test fdivs add add (bad) movsb nop rex.WR rex.B sub adc (bad) (bad) pop rex.RXB or add mov add jb xor ficompl fstl adc stos (bad) add movabs (bad) ss (bad) fcmovb (bad) rex.WXB rex.WX loope lods add fldl outsb jnp mov mov and xchg (bad) or imul loop or std out push rex.WR jnp andl rex.WX (bad) pop lods mov mov jge shl xchg pop retq in iret sub and sbb rex.WXB lods loopne mov add or out mov sbb pop es (bad) scas cmp or jmpq cld or lods (bad) mov ffree mov (bad) lods out stc fs sub rorb mov shlb pop lods test movslq (bad) sahf jns jle sbb scas push mov sbb xchg test add lods fmuls sub stc rex.WR movabs jl scas pushq push sub imul mov sbb movslq push lods rex.RX pop je rex.WB adc test cmpsl push jmpq (bad) adc or (bad) xchg out movabs xchg push mov add stos and std cmpsb pop mov rex.WRXB insb scas adc xchg mov xor add cmp adc and mov stc push mov test (bad) enterq outsb movabs (bad) sub (bad) jb cmp in add pop xor imul (bad) shrl push sarb or pop cmp sti pop lret rex.WXB lods add sbb movabs jg jo subl push stos (bad) (bad) mov rex.WRB jno lods stos test mov or push stos fs mov xchg rcll loop sarl out sti sub rex.WRXB mov xchg rex.WR jrcxz mov nop sub adc add fadds rex.WR retq adc (bad) sbb int sub mov jae rex.W sub (bad) fcmovnb adcl iret (bad) stc mov fstl fldl mov xchg rex.WXB add mov rex.R int jnp mov jae pop (bad) lods nop hlt stos sbb (bad) mov rex.WRB js or or cwtl shrb mov xor in retq (bad) adc pop data16 pop mov retq lahf repnz sub decb scas lock in out lods insl (bad) scas incl pushq cmpsl pop rex.WXB mov test cs rex.RB (bad) pop add scas add lods mov rex.WRX stos std ja js (bad) lods retq adc adc rex.X cli push jae lahf lods jns push cmpsb jnp loope or int ds repz out insl mov adc (bad) ja loopne fnstenv in jb std mov lods push fucom add notb lret sub and cmpsl outsl jno lods lock and mov sub lods (bad) cmpsb (bad) mov or lods jne mov scas pop outsb lods cwtl test and (bad) rex.WR test leaveq lods pop out cmpsl mov sarb in gs mov (bad) or (bad) cmpsb insl vpcmpeqd out movabs or shrl pop mov sbb push jae cli mov nop out mov scas (bad) (bad) rex.WR fwait lods retq (bad) jbe retq cld lods sahf out rex.WRX gs xchg int3 adc mov or rex.RB sbb rex.WR jrcxz incl adc jg xchg pop sub leaveq mov outsl movslq jns jle sbb (bad) leaveq ja jle cld cs xchg sub mov je stos xor imul icebp lods movabs pushfq cmp add scas (bad) iret (bad) cmp sub lods push cld out (bad) pop movsl fisubr in push sub rcrb (bad) stos notl test cmpsl stos (bad) sub test test ss xchg jle loopne clc cld sbb sahf scas cli (bad) stos adc movslq (bad) xor cmp jne mov and in (bad) lods xchg mov push test cmc pop sbb mov divl sbb repz lods sahf pop mov cld shrb cmpsl sub movsb mov clc data16 adcb (bad) add (bad) lods jnp mov (bad) add lods mov sti or in stos ds jo rex.XB rex.RX cs lods scas xchg and fucomi cld adc sti add push pushfq addr32 jmp lahf mov mov gs adc adc subl leaveq xor mov mov jrcxz xchg jmp cmc push cmp fstl and jmpq lods cmp pop mov jb lret repz cmp push jae (bad) lods (bad) jbe (bad) cld idivb rcrl adc (bad) (bad) repz and and mov (bad) pushfq cvttps2pi add rol add lods cli insl jb rex.B rex.WR fmulp test jnp adcl push xor (bad) mov xchg je imul roll (bad) fidivrl lods add mov int3 and in pushq lock (bad) movabs repz es mov jno mov outsl and hlt cmp sti lods (bad) and callq lods rex.WXB scas movabs and mov add orb rex.RB xor push mov lods fisttpll sbb lods rex.WR out nop clc jmp pop adc jae (bad) jl rex.B lea xchg rex cmc pop mov cli mov jne movabs (bad) mov jmpq mov test add (bad) or add movabs enterq push sbb clc shr mov adc cltd xchg adc ja push jae rex.RXB jae add imul adc in jb clc pop loope pushq rex.WX xchg jne insb adc sub (bad) mov (bad) rcrl mov callq movabs push int3 add add insl mov cmp sbb imul and xor fildl movabs sti test cs callq mov and int lods fdivp add pop (bad) sub movslq mov mov rex.WX mov test loopne rex.WXB adc shrb test and (bad) movabs lods cli cmp push std pop je scas mov add out jnp adc xor ja jno in in mov rex.R (bad) mov fistpll (bad) cmc or or xchg int3 jno icebp int lods mov jns jo pop fstpt mov cwtl add and rex.WX mov stos or sbb xor cwtl callq rex.WRB ds cld ja hlt rex.WRX rex.WXB pop push sub pop rolb add rex.WX xor lods (bad) push rex.X xchg paddusb cmp mov ss stos push test cmpsb jb fiaddl mov mov fldt mul or repz mov add pushq add jmp rex push decl (bad) fs out xor pushq mov jns rex.WR sub mov jno mov adc sbb mov (bad) movabs rex.RX xor and movabs adc adc int3 jns mov movabs add in (bad) (bad) stc movsb nop or add icebp movsl sub fildll pop fdivrl (bad) out sbb lahf repnz pop insb sahf jmpq (bad) mov xor xlat insl pop or jmpq pop add adc push sub (bad) data16 insl sub adc mov fnstenv icebp repnz jo jmpq out mov gs fildll std adc push lock int3 xchg cli lret lret mov pushfq push fwait pop (bad) mov ds hlt add mov stc mov in in popfq lods sub jmpq pop (bad) lods hlt adc fisubrl (bad) cli xchg jle test (bad) sub fstl (bad) (bad) cwtl sub lods sbb pop test (bad) jle lods inc rex.WR xchg (bad) mov mov push xor lods movabs ja adc movabs cmpsb lods (bad) rex.X jbe jp scas test mov in rex.WRXB sbb lods add mov lods push rex.WR outsl sbb callq fisubr stc push mov xchg lods jrcxz add jb imul sub out or xor in mov (bad) (bad) rex.WX mov (bad) pop cmp (bad) rex.WR lods sub pop sub imull fnstenv mov xor shrl xchg cmp mov mov mov or xlat orb (bad) movabs sbb lods scas shlb ja idivl lods lock (bad) sbb mov je ficomp push (bad) test sub rex.WXB sub sub in xchg mov lods shrb cmp mov rex.X rcr cwtl (bad) sbb lods mov scas test or adc adc shlb xor push (bad) mov adc mov loop and (bad) push sub and cs movabs push fwait in lods rex.RB or rex.R fs sbb xchg lods and xchg scas mov (bad) jge jne add add sub ss lods gs jae sarb icebp push (bad) adc lods stos enterq rex.XB retq xorb in imul pushfq cwtl or int3 subl (bad) stos mov int rex.WRB (bad) or (bad) stos or mov (bad) mov movsl outsl mov adc mov (bad) (bad) mov movabs mov jns fisttp xchg mov lods push adc (bad) pop retq sahf lods sarb (bad) add fdivs imul hlt add jb rex.WX movslq rex.RX mulb (bad) pop out cli mov (bad) rex.WRX iret cld rcr lods loop pushq push (bad) add rex.WRX xchg movabs lods scas cmpxchg sbb and xchg cld (bad) jge es repz repnz test mov adc loop push sub mov sub loope vfnmadd213pd add and adc lret or cli (bad) jmpq and pushq notb mov (bad) add push jnp imul mov lods fsubrl (bad) repz out fstpt rex.WB lods xor lea movabs sbb or sub mov adc (bad) lods mov adc rex.X jbe scas or (bad) jns mov movabs callq stc jp rex.R enterq sbb or adc pcmpeqd out sbb iret retq sub movabs lods rex.WRX cli clc mov rex.XB movabs mov idiv test cmp cld push outsb sub stos cmp test rex.XB (bad) in sbb or lods lret xchg neg xchg jrcxz (bad) lods fidivrl or jge test (bad) stos sbb and add lods jg enterq sarl add xor xchg sbbl push movabs in add rex.R ja add rex.W hlt lods and test ficom imul out lock mov (bad) cmpl mov sub (bad) lahf pop pop xchg pop es movabs gs xor cmpsb (bad) ficomp mov icebp jg sub mov push decb push cmp push mov lods jnp jns (bad) movslq jg sbb cmp xchg mov add retq xchg sbb (bad) push mov jge sbb out lods sub xchg callq mov in mov jb sbb adc pop lahf out lods rex.WB mov mov mov mov stos fstl fmul sub push movsl movabs or es lods cmp rex.R cmpsl rex.WX stc adc mov lods (bad) sub (bad) jbe mov pushq out (bad) xor sbb std push int3 add sub iret rex.WX sub lods (bad) (bad) sub lods pop (bad) mov push rex.XB retq movabs mov out lods add (bad) (bad) pop sub ja je and adc movsl mov (bad) (bad) or push movabs lods rex.XB cmp fcoms cmp stc lods addl lahf sbb cmpsl in lock add imul cli rolb repnz rex.WXB sub iret movsb xchg (bad) retq (bad) imul rex.WXB add (bad) movabs (bad) sahf pop sub decb lods fmuls (bad) mov mov rex retq lods or cmp or scas or (bad) clc imul movabs cmp ss js jae hlt fptan cmpsb (bad) (bad) fldl lea sbb out std jae or sbb push rex.WRB stos jl je mov movabs rex.WR jo mov adc adc (bad) jle jnp lods vsubss lods rex.XB rex.RB in rcrl (bad) cmp subl out mov add rex lods imul (bad) mov cmpb test movabs (bad) in rex.RB rex.RXB insb rex.WRXB fwait xchg subl jns scas mov cld pop lahf xchg jb pop test scas (bad) jrcxz adc adc xor rex.RXB jo scas pop mov movabs adc insl (bad) jg (bad) xor repnz std cmp scas mov push (bad) fwait (bad) sbb je add rclb ds mov movabs enterq leaveq test movabs xlat test pop je lahf sub repnz fwait add (bad) mov or (bad) shl rex.WR hlt (bad) (bad) mov fsubp (bad) jmpq or rex.B and imul and (bad) sbb (bad) test callq adc in outsb add cmp mov (bad) add stos sub xchg jno add sbb pop pop sbbb repnz js mov adc mov rex.RXB jge stc add clc jrcxz add add (bad) adc sub movabs data16 (bad) mov jmp out adc rex out add scas cli pop (bad) jg adc sbb mov jg,pt cltd movsb fist xor loopne pop lahf rex.WXB xor addr32 cmpl push fild rex (bad) xor xchg sub and rex.RXB out fnstsw out std lods scas lret mov xchg in (bad) mov callq cmp xchg xor loop mov jo icebp insl xchg rex rex.WXB xor sub rex.WRX adc pop mov add lret jnp mov (bad) mov ds or lods cmp in outsl (bad) int3 mov enterq rex.WB lock test pop cmp fstps (bad) stc sahf stc (bad) jb (bad) fbstp fs xchg (bad) xor sub rorl retq sub pop imul sar mov add in test rol mov cmp test rex.WX or cs xor or mov js xchg mov (bad) callq (bad) sbb xor jp rex.WRXB rex.RXB rex.WRX lods (bad) mov cmpsb subl sub imul xchg mov mov add xlat (bad) adc movabs out loop lods rex.WX push (bad) mov xchg lods cmp pop jle gs sti or cltd or sbb test ss lahf jbe jne lods add (bad) fiadd lods xor in sti lods pop adc adc (bad) rep retq xchg jrcxz cmp scas cli sbbb jge jns push stos int push sbb lods retq cmc and (bad) stos jbe movabs (bad) or mov (bad) ds rex.WRX popfq rex.XB in mov fdivl and lods scas (bad) pushq stc (bad) mov or or (bad) test stos mov lods cmp pop sub retq or je add stos adc xchg cld sbb mov lods (bad) cmp enterq rex.WRX cmpsw push (bad) mov rex.WRB sub lods jb iret insb and retq xor adc rex.WRB push (bad) test scas xchg jnp sub (bad) lods mov jmp mov or sub pop or xchg insb sub and (bad) fdivp out lods stos sbb (bad) and mov xchg or lahf mov shl mov (bad) push cmp lods or rex.B lods pop (bad) mov stc enterq mov repnz (bad) cmp jo es rex.X xchg scas retq sbb movsl mov (bad) jmp out lods imul (bad) cmp (bad) fwait mov jbe jge xchg in adc pop movabs sbb std data16 sbb cmp rex.WX cli cli lods jae mov jns (bad) imulb pop rex.X push rex.XB rcll lods cld rcll mov add mov (bad) cmp mov jle (bad) cs xchg cs clc and mov movsb (bad) cwtl (bad) fwait rex.WRB (bad) test test lahf mov jno xchg (bad) scas push repz mov (bad) rex.R lods jl rex.WRXB lods (bad) (bad) ja sub lods mov jge shl (bad) mov subl lods push test lea xchg stc lods rex.WRX jne ds pushq jns int loop lods rex.RX leaveq and cmp lods xor in jnp jo mov lahf push enterq test and add push sub rex.RB mov imul or loope movabs rex.WRXB (bad) rex.R or rex.R outsb stos xchg lretw jo,pt and sub stos pushfq (bad) stc jmpq (bad) cmp cwtl mov insb (bad) mov sbb xlat int divl movslq push cmp sub mov mov rex.WR adc sub in (bad) mov and xchg xor hlt (bad) rex.WRXB or fbld pushq (bad) push sub xchg push scas xchg or or mov adc test (bad) adc lods std cmp sbb movsb test (bad) jne repnz (bad) ja stos lods (bad) and fistp cmp rex.WRXB int3 movsb repz lods flds cltd xor retq (bad) std repnz add lret mov or (bad) rex.XB adc nop stc or test mov (bad) mov shrb jmp sbb fwait stos lret jne mov push pop add cmp insb jp (bad) sbb (bad) idivb mov cmp add retq mov mov lods or mov int3 cltd outsb lret push scas stos mov or insb lock in sbb lret cmp rex.RX lods mov cmpsl xor (bad) std cmp movsb sub insl (bad) (bad) test lahf sti (bad) in (bad) or mov lea xchg pushq adc (bad) (bad) fs outsl lods lret (bad) es icebp mov (bad) out lods fmuls jne rex.WX xchg lods shlb and (bad) insl jl (bad) mov negl in js sub xor int3 test out jl lods adc xchg mov add outsl roll fsubrp (bad) stos lods imul ja push xchg rex.WX idivb or pop pop in imul sti lods rex.WR jno rolb sbb rex.WX std (bad) push rex.RB lods loope sbb leaveq rex.RX data16 or or rex.WR xchg (bad) sbb scas test (bad) rcrl jmp (bad) lahf (bad) lods jle outsl movabs lock pop mov xor add (bad) out cmc lods mov jge lods sahf (bad) mov (bad) lods sti es sub rex.XB leaveq stc or jg movabs rex.WRX sbb cmp mulb (bad) mov adc mov mov add (bad) fsubrs sbb cmp jmp sbb out sbb rolb es (bad) movabs (bad) hlt rex.WXB (bad) fisubr int (bad) lods sbb xor sbb loopne stos mov jmp test fild xor mov lods xchg movslq rex.WX rex.B fwait add scas xlat mov (bad) lret mov loopne decb cmp addr32 lods lahf mov outsl enterq mov mov mov rex.RXB shrd sbb xchg or shrb cmpsb push fadd jp sub mov jg push movabs and movslq lods std js rex lods rex.R movabs (bad) and fist lods fmuls in push cmp pop lods (bad) sub cltd (bad) cwtl push sbb lock sub or pushq (bad) clc stos cmc enterq cmpsb jo lods (bad) mov (bad) retq sbb sbb mov jno cmc mov lods retq jg in cmp (bad) jae leaveq shrb in jp lods sbbl mov xchg fwait rex.WR mov lods jae loop rex.XB lods and cmpsl jnp pop (bad) pushq movsb lods mov movsl lods rex.RX imul mov jb pop jmpq mov sarb push mov xor (bad) (bad) lods sub jnp (bad) stos (bad) test negb mov imul mov nop movabs mov vmulss mov push sbb pop cmpsl sahf (bad) lods cltd push cmp std or sub rex.B (bad) lods cld fisubr (bad) pop jp inc sbb and cmp retq lods (bad) jb mov xor shrb fwait lods out rex.R popfq (bad) rep (bad) add xchg movabs lea add adc mov cmc scas rex.W (bad) sbb rex.X add pop mov movabs jge callq lods adc imul xchg stos callq or xor sbb fnstsw rex.R pop mov sbb (bad) fwait lods outsb add je push jle fsubr pushq (bad) loope (bad) push leaveq lods mov je mov hlt xchg shrl (bad) lods cmovo imul mov mov rex.X mov xchg test sub jle sbbb lahf stos (bad) cmp sub movabs or or popfq and leaveq mov sbb fldt mov pushq rex.WRX test push jmp xchg rcrl xchg int jno pop addr32 adc cli and decl (bad) push scas (bad) loope faddl rex.RX rex.WXB es xchg rex.X in pop adc retq or rex.WRX jge lods stos rex.B jne and movsl (bad) or add movabs mov scas mov mov rex.R sub rclb sbb rex.RXB or jo xchg jns stos cmpsb (bad) sti push movabs or mov xor pushq scas mov lods mov imul xchg mov lods fs sub add mov movabs enterq movabs jne adc jns stos sti (bad) cld scas mov retq and sahf lods test ds and test scas (bad) sub mov rex.WX lock jl sub push rex.RX xchg or adc scas insl pop (bad) sbb push sub sub rex.WR test scas add imul xor rex.RXB mov imulb out jbe stc add mov in pop leaveq jge (bad) stc add (bad) in xlat jmp (bad) mov mov sub xchg jne mov push xchg jge push (bad) test (bad) lods (bad) rex.R test loope movabs fs add sbb ja and stos callq movd sub xlat cmp push mov je jne fs xchg sub (bad) mov rex.WR lock rex.B pop rex.WRXB mov lods rorl jmpq add nop retq fsubrs and rex.RB push insb and xchg popfq repnz (bad) (bad) pop fsts movabs adc scas pop cld roll lock movsb movabs scas (bad) mov mov stos pop jnp lods repz in stos lods movabs mov lods and cmpsb sub sbb xchg xor xchg rex.WRX mov add lods fwait jo in xchg push scas xchg lods mov add rex.WXB gs pushfq xchg pushq lods cmpsb add (bad) pop cmc sbb lods cs rex.X (bad) pop mov popfq lret stos xchg test rcrl rex.WR lods adc jae cmc mov lods sti (bad) sub (bad) and mov sub callq mov movslq stc adc retq (bad) (bad) (bad) mov (bad) jmpq jrcxz pop sub sti stos xchg repnz adc sbb lods xor sub lods std movabs cmp lahf callq lret jne mov popfq in cmp sub movsl in leaveq (bad) cmc xchg scas mov rex.WRB lods repnz sbb dec sbb repz mov in imul out imull mov retq callq movabs notb movabs (bad) rcll and jmpq cmpsl rex insb movabs or (bad) cmpsl lods retq pushq mov rex.WR insl jbe and xchg sub rex.WX (bad) (bad) movabs in mov test adc pushfq ss outsb mov cmp push rex.XB mov (bad) jno cmp lods push sub sbb rorl mov pop jmpq movabs cmp jb shrb sbb fiadd mov mov icebp retq pop retq and lods lahf push hlt adc adc rex.WRX xchg movabs cwtl xchg rex.WRX (bad) mov je outsl xchg or mov jbe xchg sub jrcxz lret mov fsubr mov mov and lahf movabs fwait fs sbb xchg imul pop sub ds callq (bad) sbbl pop (bad) rex.WRB outsl shll or xlat out push xchg xor mov lods mov rclb lods loope orl pushq sub lods movsl and add cli or callq sbb loope out cs stos lods mov movsl movq cld imul decb (bad) mov insl jnp mov cltd sbb pop rex.XB pushq ss or xor fidivl or (bad) xor add (bad) pop outsl lods lret loopne popfq jb rolb mov rex.W in (bad) rex.WR xlat vrcpps sub add xchg insb mov lods retq sbb or mov cmp loop mov movsb imul jg fwait adc push xorb push sub xchg pushq lret xchg push idiv test (bad) rex.RXB rex.WRB data16 rcll test cmp insb push add rcrb cli rex.WRB test mov cltd xrelease sub and lods scas stc sub outsb loop adc (bad) (bad) (bad) or leaveq imul pop mov movabs stos sbb xor sbb movabs repnz mov cmpsb movsl mov mov fucomip cli or loope in sub js lods in cwtl shlb mov adc loop push mov lods mov shrl xchg (bad) pop lods jns jle mov add sub (bad) adc lods pop ss jae movabs (bad) and xchg fsub (bad) scas fmul andb add scas (bad) fs sbb (bad) out enterq lods or retq cmp lods test mov (bad) and cld cmp lods sbb sbb lods push sub mov (bad) lea rex.WRXB lods sub movabs xor out hlt (bad) sahf stc push cld lods cs mov jb mov xor sbb loop mov rex.RB pop movslq sbb jno cmp fs lods rex.RX cmc insl (bad) xchg (bad) lods int xor movslq push in addr32 sar rex.WRX mov subb int lods ja sahf pop mov sub lods rex.B rex.WR mov jne sbb (bad) (bad) stos in mov (bad) callq (bad) rex.WRXB (bad) ja es fldl mov and lods (bad) in (bad) add (bad) stos adc rex.XB xchg orl (bad) lods cwtl jge mov lods rex.RXB jns and pop sar (bad) add rex inc rex.WRXB pop lods cmp (bad) adc pop scas cld adc pop mov cmp mov add in (bad) stos mov (bad) scas xor pop (bad) push (bad) lods and add rex.WB xor (bad) mov (bad) lods mov (bad) pushq imul ja jne sub cltd (bad) stos rex.RXB xor cli pop lret rex.RX sarb push mov pushq ss adc movabs (bad) add lahf out and sub push xor adcl pop adc movabs sbb push (bad) mov pushq (bad) lock in pop xchg jmp cmp or int scas stos mov enterq sti pop mov xchg (bad) sbb (bad) add lods mov (bad) lret xor or mov imul cmpsb (bad) push pop clc and lahf outsl lock xor fwait adc sahf xor stos retq pushq lods push incb lods in mov movsb jbe adc in pop pushfq (bad) enterq (bad) sti loopne rex.WB (bad) xor fwait movsl jb pushq in retq (bad) jl cmc in push add mov repnz int cmpsl test fs cli in mov pushq lods adc data16 test repnz rex.WXB (bad) sahf (bad) rex.WRXB lods movabs je in sub sbb jnp or and mov lods mov ss rex.W xchg rex.X adc lods adc xchg in sub je (bad) sbb retq and stos pop scas push lods sub (bad) (bad) pop (bad) lods jo pop mov xchg (bad) incl xchg cmp rcrb shrl (bad) lods cld add jo rcll nop rex.B addr32 rex.WX add out lahf (bad) lods scas loope rex.RB lock shll mov (bad) (bad) in (bad) (bad) xchg cmc rorb test imul lods cmp mov shl (bad) sbb jmpq lods clc out cmp fsubr lods iret loope stos movsb movabs (bad) rex.WX repnz (bad) jnp sub lods pop pop imul mov adc in cwtl enterq lods cli adc clc xor (bad) (bad) push in push lods xlat cmc shrl lods movslq lock adc imul cli push lods outsb retq (bad) retq sub mov stos sub cmp cmp cmc clc lods xlat cmp (bad) mov jbe out movabs and rolb movabs (bad) test mov cld hlt (bad) mov pop movsl jmp int3 jrcxz insl lods es jl rex.WRB lods (bad) nop (bad) jae rex.WR (bad) pop xor or lods lods data16 sbb cli mov mov pop (bad) fwait scas lods pushfq push cmp mov lods or rex.WXB ss (bad) imull movsb xchg sbb adc popfq lods (bad) data16 addl (bad) mov int3 add cmc (bad) test cmp (bad) (bad) shrb add lods fcompl jne (bad) cltd sbb lods mov and lods pop (bad) rex.WRXB leaveq mov adc jae jo sub mov or je js fimul mov adc (bad) push pop movsb cmpsl jl lods jge jp xchg in (bad) (bad) (bad) mov rex.RB sub fs jmpq cmp cs orl stc loopne rex.WX sub cmp (bad) jmpq test repz addr32 xor divps (bad) jns loopne sub (bad) mov push (bad) jnp movabs jmp outsb imul sahf sub mov (bad) mov mov adc fisubr (bad) int3 cmp movabs xor push lods movsl cltd sub rcr add add (bad) repz movabs lods sbb (bad) sbb xchg lahf rex.X jg sahf mov movabs (bad) mov lahf imul (bad) xchg jge cmc sub or sub (bad) xor jnp (bad) mov cltd test cmp push xor xchg retq leaveq and jno lods mov (bad) rex.WRX adcl lods fwait mov and mov cmp mov (bad) mov insl or rex.RXB sub add xchg test out jg retq lea movsb int test (bad) mov lods and ss adc mov fdivs mov int leaveq mov and lods sbb outsb push cmp pop (bad) lods roll cwtl push movsl out movabs scas int3 sarb lods and mov or sahf mov mov lods loope lret and xchg scas lret pushq lods cmc lods (bad) and (bad) pop insb (bad) test addr32 lea sub movsl movabs mov mov mov data16 lods mov fmulp stos shrl add mov ja adc (bad) jl lods sbbl and xor (bad) jl stc (bad) sub mov or movsb and sti pop adc es fsubrl imul ja jo xlat push lods mov (bad) pop (bad) jmpq in rcrb (bad) or adc (bad) (bad) in mov clc sub rex.WX add (bad) add or mov lods jg fild mov outsl lock test adc lods rex.RB add std mov sub and add test pop (bad) xor lret (bad) rex.WR callq cmp adc and pushfq out (bad) adc lods mov or retq jmp sahf (bad) icebp lods cmpl push movabs sbb jmpq fwait (bad) test orl lods (bad) out adc int3 (bad) int jle (bad) movabs testb mov movslq lods sbb or (bad) cmp data16 (bad) (bad) scas movslq sbb rex.WX push callq test sub (bad) cmp mov (bad) jmp rex.R jp outsb xlat stos out add sub or pushq lret lods (bad) (bad) mov and mov mov cmc xchg lods add sarb lods sub mov iret (bad) xchg cmp push and shrl lods (bad) (bad) fimull scas mov mov (bad) pushq stc lods push cmp xchg leaveq sub push fwait sbb stos add (bad) jne imul add clc cmpsb lods (bad) stos movslq pop cmpl mov scas (bad) push mov or mov jmpq lods clc sbb mov rol pop lods movabs testl (bad) and (bad) pop imul (bad) in in (bad) jno lods fwait or jrcxz std movslq add lods scas fsts shrl mov scas (bad) enterq out sub outsl lods pop scas mov pop in lods pop mov cmp jns (bad) cmc shrd movsl ja jmpq sbb jo lods int imul cmc jnp in insb fcmovnbe xor or mov repnz insb lock and rex.WB (bad) je or mov loop wrmsr repz (bad) clc fldt sub ss (bad) imulb int3 es outsl lods movslq in btsl pop repz pop mov xlat fstpt popfq and cmp lods and sub lods jb pop xchg pop iret adc fdivl adc (bad) xor rol lods push int cmp fwait pop (bad) imul data16 pushq jns rorb xchg (bad) xlat mov int3 test cmp js and pushfq movabs rex.RXB xchg or scas lea (bad) fldcw lods rex.WX callq jne (bad) sbb pushq mov jmp fwait hlt (bad) sub lods mov xchg je add out rex.WB cmp mov (bad) es lods sbb mov cmp (bad) stos retq push (bad) pop mov mov je rcrb xor (bad) add out lods lea pop xor (bad) add add cltd or sahf mov xchg outsl scas xchg xor retq add mov pop mov sbb mov (bad) int3 pushq mov or jbe sub scas pushfq xchg rex (bad) fcoml (bad) movabs adc (bad) push sti rcrb addl jg xchg push lods fcmovne (bad) (bad) push imul xchg xchg add lods jns mov lods or callq scas int xor (bad) push add loop xchg test je (bad) rex.WRB pop jp lods fimul (bad) (bad) enterq scas jne mov sub sub sub rex.RXB insb incl mov int3 xor stos adc movabs shlb scas xchg js mov mov jne sahf sub sub movsl rex.WR retq lods push iret jnp icebp out scas mov scas sti in jmp rex.WXB mov xor movabs (bad) jp add out or adc lods outsb adc out icebp (bad) sub fdivr in cs pop scas jno ja rex.WRB lods pop loop pop out ftst xor out outsl or rex.RXB sub adc sarl xchg lods lods ss sbb lods loop outsb adc push adc push (bad) sbb push data16 and fldenv movabs rex.B scas lret rex.WX xchg jno mov lods retq (bad) cmp push pop adc cmpsb pop rex.WX sub leaveq ss (bad) (bad) or mov and scas rex rex.XB int3 lods outsl adc mov lods add (bad) push cmp movsb jo fsubrl xchg popfq lods (bad) (bad) xor out (bad) or in xorl movsb in shl in lret adc cmp sbb (bad) sub (bad) cmp cltd out lods hlt int adc punpckhwd movabs lock mov out (bad) and lods imul repz movsb mov cmp idivl retq inc xchg mov (bad) scas fcomps xchg insl sbb pop or mov out decl cmp movsl lret sub movslq xor (bad) xor lods int (bad) adc sbb callq cs shlb push (bad) loopne,pt stos (bad) out sbb (bad) cli xchg sub (bad) or lods jno cs js (bad) movabs (bad) sbb leaveq xor lods push push outsl push mov in push stos push cs xchg gs (bad) add lods mov (bad) rcrl lods adc or mov (bad) clc lods xchg adc js ss loop and cmp fidivr mov cmp or movabs or jge cwtl out (bad) scas (bad) fidiv pop cld cmpsl movabs pushq (bad) fadds (bad) push lods xchg rex.WR rex ds (bad) add movabs pop push sti loopne loope jmpq cld imul mov mov movsl pushq in cli pop fcoms lahf cmp fucomip adc stos movsl add sbb in movsb xor retq mov adc adc fldcw mov pop movabs mov stos (bad) rex mov fistl out mov mov jo mov gs adc lods sub jle scas cli (bad) mov sub add lods (bad) (bad) jge rex.WRXB jns rcll insl rex.WXB and fnstcw cld lods fcoml rex.XB data16 or mov add xor clc sub (bad) sbb insl jp rex.WR rex.XB shrl outsl adc in jne movsl in adc add (bad) fs cmp insb insb ss pop shlb in mov movsb scas jp and mov lods add sti movabs js push lods (bad) movabs cld callq xchg mov jp (bad) jrcxz,pt cmp addr32 push (bad) cltd add xor clc adcb movsl rex.X sti sahf repz mov (bad) stc (bad) xchg add xchg stos cld repnz mov (bad) jg xchg pop rex.R (bad) (bad) out es push imul je (bad) mov (bad) js jae mov pop lods (bad) cld loop or sub (bad) push stos movabs xchg out in lods xor xor xchg xor (bad) jns scas sbb lret sub jg mov (bad) fadds rex.WXB push fwait jmpq lods rex.X or (bad) mov movsb add stos adc rex.R cmc fs or or imul (bad) push mov mov je fidiv jl lods or pop adc xchg adc pop (bad) rex.R movsb shrl adc out sub pop pushq cmpsb iret (bad) outsb stos nop lods retq sbb repnz imul adc retq rex.WXB scas movabs movabs (bad) adc mov cli gs lods add in xchg (bad) pushq cld sbb enterq adc rex.WRX lods cwtl rex.WX cmp (bad) outsl (bad) sahf jrcxz mov push lock rex.WRX iret jno (bad) sub in mov mov (bad) jne clc mov push lea lods and rex.WRB sub lret cmp cmpsl adc lods cmp mov add insb stos movslq movabs add je pop out imul pop shlb test lods mov (bad) jmpq insb xchg rclb mov lods mov rex.XB and and (bad) and scas retq or movabs test icebp sub scas out leaveq stos (bad) pop movabs cmp lods sub or lods movabs imull jbe mov and xor popfq pushfq pop sti mov xchg rex.X add xrelease jo add stos mov leaveq movsl stc lods movslq rex.WX mov cmp movslq test jb adc fstpl mov fadds mov popq sub (bad) (bad) cmp (bad) rex.RXB push push in outsl sub rex (bad) fnop jl xor (bad) jne add in cmp test sti ja rex.B adc rex.WRXB mov rex.WX repz pop lods stos out (bad) or adc insb lock movabs rex.WX lods push (bad) mov pop lods pop imul stos pop in sti mov (bad) lods rex.WRX rex.WRXB add out pop imul (bad) mov lods (bad) sbb scas mov adc mov popfq movsb pop lods jb sbb enterq callq sbb (bad) sarl div loopne nop test push scas movabs jmp rolb or xchg scas movabs sti lods lret testb out push (bad) sub jae sahf or leaveq xor mov test lods sti outsb cltd (bad) jne push lods add xchg loopne (bad) lods xor mov pop movsb shr nop xchg rex.WRB rex.WB repnz mov push jg scas and mov fildll xor add rex.W test push lahf (bad) (bad) mov or mov lods xchg mov pmaddwd (bad) lods loop,pt push pushfq rex.RXB rex.WRB lods imul cmp (bad) mov mov or adc je lahf lods fidiv (bad) (bad) (bad) lods mov jle add movabs sub cmc imul es test loop in sbb (bad) scas movabs repnz push lods rorl adc stos lods pushq lods xor cmp add ds lods push cmp fnstsw pop sub rex.WRXB rex.WXB rex.RXB retq cli jp rex.X sbb jmpq lods push int3 mov rex.WRB imul loopne pushq fs rex.WRXB xor mov (bad) lods mov and lods outsb ja pop (bad) jmpq xchg sbbl rex.WXB cld lock or push rex.WR out xchg lods insb jne push fs es mov jo mov lods insl add stos mov std lret ja fldt sbb (bad) (bad) test mov rex.WX (bad) lods pop int3 jae xchg mov movslq (bad) (bad) mov (bad) retq lods cltd xchg rex.W out xchg jmpq mov rolb in sbb pop sub data16 popfq mov insl mov xchg mov rex.W test (bad) rex.X mov addl and movabs icebp cli cld sub rex.WB jb sub lods cltd pushq pop movabs add cmp loope in rex.RX or cli mov xchg jae (bad) mov (bad) xor hlt leaveq adc sbb movabs scas cmp mov scas jae cmp pop sahf adc pushfq insl mov mov mov xor repz sub xadd and rorl xchg insb push (bad) lods rclb (bad) imull sub rex.WB sbb xchg fnstcw rex.WX lods clc movsl mov test (bad) xchg fsubrs xchg sarb lods sti fwait in lahf xchg out mov xrelease rex.WR je fbstp int and xchg icebp push or sti jmp add lods xor int3 imul lods retq jo outsb mov test lods cli sbb xchg pushfq retq jge std (bad) out insb stos sbb sub nop lods cwtl pushq test (bad) gs and lahf rex.XB mov (bad) pop mov outsl adc add fisubr (bad) rcll add rex mov jmpq (bad) adc cs sub sub sub mov (bad) (bad) (bad) fldt roll movabs mov scas or clc mov or mov mov mov push rex.WRXB xchg bt xchg insb cmp lods lods (bad) sbb lods mov add mov rcr in rex.WR or js pop and retq cmp lods jno mov sub mov jae fwait and mov xchg pop jl test movabs (bad) lods pop cli rcrb insl mov andl pop out pushq sub or or cltd add lods (bad) sti rex.XB and (bad) in (bad) and nop xchg rcll js rex.X loope (bad) jrcxz stos pop mov retq (bad) std mov fdivl mov mov fiadd mov (bad) pop (bad) cwtl rex.XB or fwait movslq imul sbb mov mov adc gs stos mov fsubrs mov lods out (bad) in ss and mov push lods ficom callq rex.WRX test je in loop jg cmp (bad) test jge xchg jle lods in (bad) fs sbbl xorl (bad) (bad) lods fucomi ss data16 shrb jmp sub stc cs retq mov xchg jo cli pushfq movslq mov in lods lret push (bad) lea rex.RX xchg or subl (bad) add movabs xchg nop (bad) pop rex.RX cmp mov repnz lods rex.R xor leaveq (bad) (bad) rex.RB sub sbb retq push popfq and (bad) movabs movabs mulb mov callq or mov (bad) rcll (bad) movabs (bad) repnz xlat cmc cli xchg imul imul fwait sti lods pop rex.RB pushq cld movsb (bad) lcall and sub stos and pop (bad) or and shr shr and lret jl pop rex.RB jrcxz or (bad) push loope sti ss retq pop push jo xchg (bad) pop stos (bad) mov jb push mov xchg test repz retq cld push xor cmp sbb rex.RX jnp out cmpsl stos (bad) pushfq and ja adc pushfq lea cwtl incb icebp sub mov or (bad) xlat pushfq sbb xorb adc insb pop add mov mov mov out add movabs sbb fwait rex.RX (bad) mov ficom cs rex.R push mov (bad) (bad) (bad) add add (bad) es jrcxz rex.WRX stos sbb popfq loop mov fwait test (bad) std (bad) fisttp stos movslq or cs sbb rolb stos xchg test jl out mov test ss adcl mov cmp xchg insl lods mov imul jo (bad) fimull pop lods jrcxz (bad) xchg mov test test insl push cmp xor outsl (bad) cmpsl xchg movabs mov sub xor cmc sub adcb or pushq leaveq in cwtl push sub insb xchg jl lods sbb rex.XB lret adc std ffree subb rex.W rex.WX jno imul outsb hlt fldcw rex (bad) add pop xlat mov sub jrcxz mov enterq lods outsb fstpt add repz (bad) stos pushq xor mov sbb stos (bad) ss adc and sub mov cld rex.RXB xlat insl (bad) lods gs mov lods sbb jae push rex.R movabs mov xchg pop pop rex.X outsl sbb (bad) or xchg adc imull rex.X cmp push xchg or popfq add ficomp std test pop or stos idivl mov loop pop rcll mov insb jne rex adc movabs lods popfq pop (bad) rex.WR sub add lods int lret xor stos sbb (bad) jmp insl (bad) sahf fidiv xor jns push adc mov xlat adc lods jle rcll xchg jns nop retq jge repnz mov sbb ror cld (bad) scas xchg fsubrs sbb ja pop (bad) int3 negb retq jb pop lods xor rex.B (bad) jbe (bad) loop (bad) stos rex.RB in xor (bad) (bad) adc jnp or fisub iret lea adc clc mov fsts pop push sahf jp mov (bad) rex.RX sar fimul (bad) lods xor (bad) add lods xchg in popfq movabs jg and movabs (bad) xchg rex.WRXB xchg (bad) in mov rex.WR lock cmp jno rex.RX sarl mov insl jg insb xor adc outsb out (bad) repz stos lock (bad) loopne retq cmpsl mov mov xchg or scas sti or (bad) xorb lods (bad) (bad) (bad) callq (bad) xchg icebp test lods loopne movabs cmp (bad) jnp sbb lods leaveq je xchg jae rex.WRXB cmc mov add (bad) lods cmp es outsl mov lret imul or insl or (bad) jbe addl scas rex.B xchg (bad) pushq popfq rex.RXB rex.WR lods movslq (bad) mov mov mov jnp jg lods xor out jno mov movabs (bad) cld lods pop (bad) add test sub xor pushq add cld pop enterq pop std ss rcll scas lods xlat pushq or mov (bad) test cmp js mov (bad) movslq xacquire (bad) lret shlb adc pop lods sahf imul pop xchg mov jne movabs (bad) jno (bad) loope or mov sub (bad) mov mov shlb xor or rcrb lahf jnp jae int3 fwait mov (bad) or lods mov lea mov xor loopne lods out lods add adc scas push movslq xchg sub in pop cmp scas stos xchg (bad) (bad) pop (bad) jmpq (bad) movabs fcoms cmp lods imul jae mov fsubrl lret stos cmp nop test popfq push mov or leaveq shll in or or and in movsb mov lods movabs or rex.WX jbe rex.R lods movabs mul test lods rex.XB sarl rcrb or cltd and fsubrl mov lods xchg push (bad) (bad) outsl (bad) movslq movabs jns scas test mov pop pop in in cmp and rex.WRB rex.WRX ja push jmp sbb rol test lods xor cmpsb std xchg icebp sub rex.WRXB (bad) mov lods test lock movabs pop push mov imul push jrcxz outsb xlat mov (bad) rex.WXB (bad) and in lods jge mov (bad) sbb mov and icebp mov cmp and (bad) sub stos push (bad) lods pop loope lret jbe jrcxz in (bad) out cltd cmp or (bad) sti rex.WRX mov rex.WR fidivrl cld fmul cmpsb rex.WB lods (bad) movabs xchg add (bad) cmpsb cmp in vpsubsb outsb movabs stos mov insl (bad) ffreep loopne or (bad) mov cld rex.B cmp outsb (bad) adcl fldcw shr (bad) (bad) (bad) cld scas (bad) es fiaddl (bad) sub pop data16 lods movabs sarb mov push sub in mov pop lods stos movl stos leaveq add mov lods gs cmpsl mov mov jmp rcrl xchg rex.XB rex mov and mov (bad) mov add fisubl cmp outsb rex.WB xchg lods int xchg mov mov lods push sub negb mov (bad) mov popfq movabs insb rex adc ss and pop retq fisubrl sub pop xchg xor mov loop xchg callq movsb (bad) jp imul adc (bad) (bad) test lahf je sub cmp test fdiv mov divb (bad) pushq lahf mov mov ror retq cmp or mov cs jrcxz jo insb (bad) lahf test sahf jp lods push in xor lods cmp rolb addb rex.WR (bad) outsl rex.RX (bad) rcrl mov mov xor sbb int (bad) jmpq cmp push movabs adc mov jne cs movslq (bad) fwait pop mov sbb (bad) cmp ljmp (bad) (bad) out in xchg (bad) cld mov retq (bad) fcmovb pop clc imull rcr in movabs shll rcrl (bad) lea mov rex.XB es stc xor xor rex.WR je out lods push rex.WX mov rcrl (bad) (bad) cmp jmp jne sub retq rex.WRB ss sub xor sbb fstps jnp in (bad) sub fistl sub movabs xchg cld push lahf lods jne push or (bad) (bad) mov hlt mov cltd movabs lods xchg out repz (bad) (bad) rex.WR scas ror roll jg xor test lcall push jns rex.XB jmpq pushq push jle rex.RX ficomp addr32 cmp movsb xor cwtl sbb pop mov out jmp mov hlt stc scas (bad) stc fidivrl xchg jb (bad) xchg lods (bad) rex sub rolb stc (bad) stos push lahf movabs sbb (bad) mov imul js insb or mov loope adc test lods mov test repz out rex.WXB (bad) adc xor icebp adc lods sbb xor shrb push loopne test imul sub movsl mov (bad) cli sub (bad) imul adc movabs rex.WXB rex.WRB and xchg frstor rex.RX fmulp add orb adc jmp and in push je enterq retq mov int insl cs lods mov imul jmpq sub cmc mov jbe in add loope jns (bad) lret lock rex.W mov std scas lods cmp es cli xchg mov push roll retq dec xor cmp xor scas and ja lods jrcxz (bad) adc mov retq mov test (bad) jmpq mov cmpsl addr32 out (bad) pop rol je mov lods rex.RB jmpq cld mov leaveq iret movsl (bad) imul and test xchg callq outsb jg stos mov and sarb mov test or sti (bad) mov mov lods mov add adc sti and mov movsb jb leaveq int3 push jge mov std frstor loope jl ror sub popfq (bad) push xchg sub ja mov (bad) roll rex.B xlat or repnz pushq pop sub rex.WB shrb in leaveq scas jns ficompl rex.WRXB (bad) lea (bad) adc (bad) jns stos mov mov in imul sub and push lods push stos (bad) stos xchg in jo stos movabs fmull mov xor ja sbb mov stos loop cmpsb rex.WXB movabs (bad) rex.WRXB notl hlt int pushfq (bad) out movslq adc xchg mov movabs mov mov test scas sub decb sub clc adc cmp rex.WRX mov adc mov clc sbb std cmp lret jnp (bad) out loopne fwait (bad) (bad) (bad) xor lods jbe lahf sub js cld loope imul jrcxz mov pushfq lods mov xor jp jne jns imul lods add jmp rolb rex.RXB sub push (bad) movsl sbb sub and rex.RB mov rex.X in mov mov and jns rex.WR jmp rex.WXB jle in (bad) gs pop adc cmp cmp adc lods ss (bad) xchg fdivl rex.R scas stos mov mov stos (bad) (bad) retq cwtl mov mov cli outsb scas (bad) and (bad) or cmp rex.RX mov mov (bad) lods push and rorb ja (bad) pop int (bad) or add lahf retq adc hlt sbb rex.RX lock rex.WB mov jo (bad) jne xorb outsb mov imul add ja rex.RX mov adc cmc sub (bad) js jge jo out jnp rex.WR rex es and mov mov (bad) jns (bad) mov (bad) mov lods enterq (bad) (bad) xor callq mov insb cmpsl out or sub out cmp and mov push lods movsl xor lods movabs rex.RX cmp or clc scas lret mov rex.WR rex.WB loope mov movslq lahf sbb lods lods outsb sub (bad) rex.WR or fs lods nop ds add mov sar cs cmp or sub out negl (bad) data16 pop (bad) push mov stos lock ss hlt insb in clc xlat xor mov (bad) lock cmp cmp (bad) lods adc ljmp pushq jns (bad) imul xor cwtl sub retq in lods repz sub std lods push out loope,pn cwtl xchg sbb imul lods cmp outsb cltd mulb pop scas out xchg mov jne sub ficomp scas movabs (bad) mov retq xchg clc adc shll sub ja insl out xchg add loop in lods lahf (bad) rex.WX addr32 xchg retq (bad) add pop lods jp and ror subl (bad) lret shlb shrb (bad) rex.WRXB rex.WRX movabs jrcxz sbb pop lods (bad) (bad) insl rex.XB pop rex.B mov mov sub stc rex.RB lods cld cmp test es data16 ja cmp lea jns sub add rex.WRX lahf xchg push sahf rex.WR stos or rex.W mov mull jmpq (bad) add retq (bad) lods jrcxz xor (bad) je or test add lods jae (bad) xor xchg jp sbb ds or adc sbb movabs (bad) (bad) jrcxz test (bad) loopne or mov mov iret enterq (bad) jbe adc mov cmpsb mov data16 test adc (bad) popfq jbe shrl rex.WRB pop scas xchg rex.WX jne mov xor scas rex.WXB mov loope movsl rex rex.WRB icebp and rex.RX lahf nop scas divl pushq mov fisubr xchg rex.WB lods and mov repz stos adc rex.WRXB cltd xchg jmpq movabs (bad) shrb lods movsl xchg sbb cmp cli xchg (bad) cmpsl rex.XB lods lock pop mov test (bad) mov repnz xchg push add mov fcoms mov scas push (bad) pop (bad) cmp stos rcrl sbb (bad) movabs movsb (bad) fnop mov lods xchg add rex.WRXB test xor lods or rex.XB mov (bad) scas mov jo popfq lods jp xchg cld sbb sbb stos movabs fsubrl mov push mov xlat int3 cmp (bad) sub mov movabs fidiv leaveq movabs rex.RX fwait shrb addr32 (bad) movabs add leaveq data16 lods movsl hlt lret rex.RXB rex.RX std stos sbb pop xchg insl lret mov stos outsl (bad) jae xor xchg cmp stos and rex.WR sbb or sub xchg (bad) subb pop (bad) (bad) in mov mov lods (bad) mov movslq test xor movabs (bad) cld push outsl imul cmp lock rex.RX rex.WRX pop loope ss rex.WR shrl xchg outsb jge mov callq jl lods pop pushq or fwait retq hlt ds lahf or rex.RXB repnz xlat cwtl ds and xor mov iret rex mov lods fsubrl addr32 pop test mov xor jrcxz or cmp jl in xchg add lods add gs adc pushq xchg mov pop stos pop cmpsl sub shrl mov nop lods push pop jb iret outsl xchg fcoms in (bad) mov cli fldenv and mov cmp test es vpmaxsw ja add jge outsb cmp int mov (bad) in jmpq jge cmp in cmpsb movabs fcmovbe lods rex.WR int in clc lods rex.WB mov xchg (bad) rex.WRB push sub rex.WR (bad) and add or cli sbb (bad) cmc mov enterq xchg mov movabs mov movabs pop adc rex.WRX imul cmp cwtl scas sbb cltd and cld pop mov jge cmp in adc leaveq adc xchg decb mov pushfq (bad) xchg sarb sub push mov sub or sub xor or or fsubl rex.X pop movabs lock and push jp leaveq jno loopne (bad) pop rex.WRXB rex.RX (bad) push push sbb ss (bad) (bad) sbb (bad) mov imul (bad) loop out adc mov fldcw sbb popfq lods rex.WB rex.XB adc add cmp rex rex.RB xchg test mov retq (bad) stos rorb cltd mov test movabs add xor push (bad) jbe ds (bad) and xchg leaveq stos or pop rclb (bad) lods cwtl mov cmpsb (bad) lods or (bad) push fs rex.WR repz cmpsl rex.WRB in (bad) scas andb movsl adc imul cmp and cmp rorl mov (bad) cli cmc lods lock jg jbe out and stos movabs add cmpsl rex.WXB jge subl (bad) add lods or and ficomp rex.WR xor xchg (bad) fst popq lods jrcxz test jno movsl imulb std (bad) loope adc popfq insb scas fidivrl out lods jno push pushq fwait ss and (bad) sub mov test js stos fdiv and mov rex.R mov clc sub or pop adc lods push sbb jmp push out jmpq in cmc mov sub cmp or xchg stc rex.XB mov shr cmp movabs xor sub and xor mov pop lods rex.WXB sub lods or xchg pop test lods jp movaps fdivs (bad) ja rex (bad) test sub insb lret cmpsb pop lods cmp cmp (bad) callq jbe lods outsl cwtl subb fwait mov out ja jns (bad) lods push div mov rex (bad) shrb add in cltd lock fnstsw in stos test fstps cmpsl mov jnp lods rex.R out xor xchg movabs movsb adc adc adc and sub scas mov adc in (bad) adc lods fsqrt (bad) sbb iret test movsb pop lods cli rclb sub mov mov fisubl sub adc test and scas (bad) stc add mov adc rex.WRB callq lret lods (bad) (bad) in iret imulb (bad) movabs (bad) mov out add lods loop rex.X movabs test add (bad) add push and adc (bad) scas loope adc (bad) (bad) pop lods test (bad) ja mov xor (bad) jp (bad) lahf mov (bad) rorb (bad) or test lods out enterq jrcxz xor (bad) mov lods mov je lods sub test xchg lods insb rex.WR rex.WXB add jl add lods xchg out add (bad) rex.RX movabs out sbb pop hlt add cld pop repz (bad) and lods (bad) (bad) adc sub cmp cmp sar rex.RXB add mov jl cmpsb or (bad) scas movsl mov rex.WRB in xchg adc clc cmp push (bad) fsubr ja mov rex.RXB xchg (bad) sub addr32 jrcxz popfq sbb add adc or xchg int lods callq sbb insb test loopne hlt mov icebp mov outsl sub fidivrl fdivr lods rex.WXB pop sbb movabs xchg out gs scas lods imul lahf lods int3 (bad) push cltd rex.RXB iret movslq shrb es rex.B or icebp in (bad) sub cmp pop rep rex.WX rex.WRX jb int3 lods mov decb pop lods mov rex.WR jmpq retq rex.WXB xlat mov rex.WB imulb add jno add sub fistpl lods add notb stos cmp lods jl test retq xor icebp rex.WRX pop insb cmp lods test (bad) xchg scas orl in divb test out xor xchg rcrl cvtdq2ps scas push sub outsl fs in pop adc clc sbb imul (bad) sub rex.RXB pop lods xor ja ss mov rex.RX xlat sub jno mov scas push (bad) or (bad) minps lods xchg rcrl cwtl insl mov ss fsubrl xchg (bad) lea rcrb push fs lods movabs mov push (bad) (bad) fisttp mov fxch xchg pop mov insb (bad) xchg (bad) cltd xchg test rex.RXB or movabs adc xchg mov cmpsl int (bad) fucomip and and push mov lods in sub insb (bad) ss movabs outsb mov cwtl fsubp in mov gs movabs int3 in fcmovnbe push jno scas in or add xor lock (bad) stc mov pop rex.WXB movabs shr rex.WRX and enterq mov in lahf xchg and pushfq (bad) adc int rclb frstor xor (bad) rex.WRXB loop sbb cli (bad) lods mov (bad) rex.WB xor outsl lahf int3 (bad) rex.WRX xorl data16 mov incl adc mov (bad) (bad) repz fucompp jge pop pop fdivrs mov cmc rex.WB rex.RB jrcxz rex.WR (bad) adc push (bad) rex.B push rolb (bad) adc (bad) scas cmp loop movsb pop scas (bad) jo (bad) mov mov sbb or cmpb enterq (bad) sbb fldcw in int3 (bad) sbb mov jno es sbbl (bad) sbb push cmp (bad) cmp lahf jp retq sub movb cmp lods (bad) notl movabs add movsl loop insb (bad) rex.WB (bad) ja scas (bad) maskmovq rex jnp movabs jb mov mov (bad) xlat (bad) ror movabs icebp add out xchg out (bad) insl mov jp data16 mov pop pop insb push fnstcw jb xchg or hlt (bad) (bad) cld (bad) leaveq movabs test jge (bad) int add (bad) xor faddl (bad) stos mov lods (bad) insb xchg cmp and (bad) fs rex.WB sub pop (bad) stc or add stos lods movsl divb jmpq in rex jg stos adc mov outsl (bad) outsl sti movabs imul pop or (bad) movabs and lods xchg rex.WRX push cmp mov or test cmpsb rex.WR mov rex.W mov insl movabs adc repz (bad) adc cld jmp jl mov loopne fwait xor xchg lahf lods xor adc and addr32 lret jbe mov xchg subb lock cmp pop lods jo adc or jbe (bad) mov movabs enterq mov xchg cmp rex.B int3 jae adc outsl movabs (bad) (bad) lods pop sub sbb add pop mov fnstsw jge cmp mov mov mov (bad) jl rcl sub pop jbe (bad) scas lods cmp rex.RX notl mov lahf (bad) out mov push scas or mov rex.WB lods jo rex.XB scas movabs ja mov lahf int add add lods push mov scas pushq fwait pop cld out sti and push jno cmp adc lods cli and xor test mov mov insl or push and and lods mov sbb out adc mov outsl cltd js rex.WRB add jno mov jae add stos incb xchg mov mov cld mov adc lods (bad) cltd movsl add mov (bad) cmpsl ja sbb clc rcrb lods mov fcoms lods jno cwtl mov addr32 clc hlt lods lods and mov lods mov loopne cli (bad) rex.WB insl popfq mov (bad) push mov jb jae fwait lods rex.RB rex.WX (bad) mov jb movslq push ja lods in (bad) shrl sahf (bad) (bad) cld sub ss cmpsl lods cmp mov jb rex.WR int3 pushq adc cmp lea retq (bad) jo lods (bad) je mov push cmpsb lods jns pushq push outsb rex.WRB rex.RXB rex.WXB mov cmc rex.X or (bad) cmp mov pop ja sbb mov movabs rex.WB rex.RXB int3 stos rex.RB hlt out add pop sbb scas xchg or adc lods pop shrl add sub mov lods adc or rex.W (bad) enterq cmp imul insb loope jns lods sub rex.WRXB mov clc lret movabs mov jbe sub out test lods pop loope fiaddl movabs adc pop (bad) fs xor lods adc and mov pushfq cltd add (bad) adc jns ror notl lods jmp icebp adc pop jb imul movsb cmc mov push lods (bad) sub (bad) jge mov lods cmp pop adc (bad) lret lods nopl cmp push lods sub xchg and lret retq lods movabs push add in iret subl rex.WR mov movsb int sub sbb lods imul movabs lea outsl mov cwtl or lods gs (bad) or mov jbe retq fistp out data16 lods or stc fisub or rorb sub imul cmp mov and (bad) pop mov or and sub fldcw xchg jne in (bad) cmpsl or andl lods fwait cs test mov movslq iret test jb fisubr (bad) mov retq cmp lods adc popfq pop retq (bad) rolb sub nop jmpq mov enterq lea jmp stos jbe loope xor cs cmp movsl rex.WRX lods insb loop callq mov sbb sub rolb je lahf hlt scas mov mov outsl lcall fsub push push ficom stos rex ja jle jns mov movabs mov (bad) sbb adc xor jle movups test sub movabs push (bad) sbb movabs lods add or jmpq movabs shl sub pushfq fnstcw cs (bad) cmpsl rex.W addr32 sub out lods (bad) push rex.WRB (bad) ja in rex.WR mov stc sbb sub xor mov lods jno xchg jnp nop pop jns (bad) rex.XB loop rex.RXB rex.WRXB adc xchg ja imul clc sbb retq test fildll mov test (bad) mov ror lods rex.RX rex.B cmpsb adcb sti outsl sub je hlt lods stos mov mov (bad) imul (bad) es or in lods push lea mov rex.WXB rex.WR lods push loop (bad) insb (bad) fldt sub rex.RXB push sub test es jp xchg fwait mov out jge repnz jne fildll movabs lods movabs cld adc lods and xchg (bad) sub xchg rex.W cmp leaveq lods sbb (bad) repnz (bad) and pop (bad) (bad) (bad) sub jmp in cld vhsubps jge mov movabs fs xor imulb data16 and add pop mov rex.WX movslq (bad) rex.WRXB lods mov fildll retq subb je movabs cmp lods push xchg rex.WX retq in sub push or (bad) lods push stc lock out pop and clc nop int stos add lods sbb sbb fwait test adc sbb xchg rex.X movabs rex.WRB (bad) movb xchg cltd mov int fiaddl lods adc (bad) (bad) movsl jns xchg fistl jae movsb jnp sub (bad) cld out (bad) jns mov scas mov mov sbb add and jbe imul leaveq rorb fsubrl jmp adc cmp outsl or sbb mov insb in add rol (bad) sbb movabs rex.WX adc or mov insb rex.RX mov stos push shr cwtl fisttpl (bad) movabs imul scas outsb outsl pop mov sbb fmul scas lods cmp fcomps xchg cli leaveq push nop out (bad) rex.WRB stos xor rex.WB (bad) lock jg (bad) callq loope in (bad) push int lods movabs loopne cli callq mov adc jg stos cmp enterq or (bad) lret lret sub sub je fstl push mov movsl (bad) jmpq xchg std jge lods (bad) xor adc movsb mov (bad) insl jne mov outsb or rex.WRX jb movabs (bad) push mov stc and rcrl movabs (bad) cmp mov idivb adc movslq and jl add jo rex.WR (bad) and xchg adc lods jne in mov fmulp mov rex sbb stc pop (bad) xchg jns lods scas jmpq jns mov add mov lods xchg xor pop (bad) sub or (bad) leaveq rex.WR mov mov je stc xchg fsts cs nop in xchg lods (bad) cmp sub scas lods pushq xor sti stos xchg rex.WRX and lods mov or test pushq lods mov push (bad) es (bad) sti mov mov mov lret jb fwait lods or fidivl rex.WR insb insl rorl hlt lods (bad) js lods (bad) cmp dec stos sbb movsb scas (bad) fstpt and mov adc lods and sub adc test insb outsl fdivs push vhaddpd in scas sub (bad) outsl in xchg movslq cmp jo lea cmp jne imull movabs mov adc jmp cld xor cltd pushq rex.R mov (bad) (bad) mov xor (bad) andl (bad) (bad) jbe jmpq mov (bad) jno fisubr mov std ja in es sub (bad) out mov stos mov cmp (bad) hlt rex.WR repz mov adc jle mov lods and jne jno lods psadbw sbb rex.RB repnz lods sub clc jmp (bad) in in imul scas clc jp jns adc (bad) popfq mov hlt loope or movsl rol mov movabs hlt addr32 cli (bad) xchg lods (bad) mov (bad) (bad) in mov cmc mov rex.XB adc insb mov shrl mov ds imull addr32 adc (bad) clc add push xchg sbb rex.WR (bad) pop decl shrb adc (bad) or retq imul jmp rcrb int (bad) rex.X lods in xorl test mov loope jnp adc xchg (bad) (bad) pushq data16 lods sbb fdivl fwait adcl rex.XB xchg out std sbb roll fadds sub xchg movslq jae xor (bad) (bad) jmpq out lahf lods (bad) jns (bad) lret ja in es add xchg lods or sub xor and movabs orl fsubrp sub xchg (bad) mov xchg (bad) cltd mov test mov insl rex.X rex.RB imul mov fwait in je int3 lcall movsw leaveq xchg addl jmpq (bad) sbb out rex.RX lods adc sarb mov fldcw insl je or sti pushfq ds in jo mov outsl (bad) gs (bad) sub jrcxz callq test lret mov sbb stos (bad) rex.WRX retq rex.WRB (bad) stos rex.WB fwait repnz (bad) sbb jle movabs (bad) rorb fs sbb mov adc xor hlt orl enterq (bad) pop cmp jg lods cwtl xchg movslq jne rex.WR rex jle ficom test adc fst xchg retq lods push jbe (bad) enterq lods jmp imul jle (bad) lods rex.WRXB pop outsb cmp jge insb push movabs (bad) lods jp (bad) iret scas (bad) ja (bad) ficoml jne push rex.RXB in in (bad) int sarl mov loop mov pop sbb pop sub sbbl rcrl xchg lods imul (bad) jns pop mov lods jnp jl push cli retw scas pop (bad) je or imul (bad) (bad) lods mov movslq xchg popq imul and mov cmp in mov pushfq lods pop outsb sbb movsb sti sbb mul rex.R rex.XB rex.XB ss iret pop (bad) (bad) or rex.WRXB lods mov sub out cltd in mulb stos cmpsb in add jge mov rolb add sub scas mov (bad) pushq cmp stos rcll nop add mov sbb (bad) movabs cmp rex.X adc enterq outsb repz scas push cmpsb xor out adc andl fsubrs (bad) mov mov mov pop enterq jb rex.RXB retq sub (bad) sti cmp mov mov loope or cmp (bad) (bad) push mov cmpsb jl or (bad) (bad) xor flds xor (bad) cltd movabs gs and movabs xor xlat (bad) jmp add (bad) mov stos adc cmp lods jns movsb mov (bad) stc roll rex.WRX lods test (bad) pop mov rex.XB lods pop (bad) xor test and andb jne xor movabs gs mov iret lods pop xchg in sbb out lods in pop add (bad) mov (bad) jl cmp rex.WX xchg pop mov adc lods jnp int3 ja movsb cmpsl test cmp pop lods adc mov sbb stc add lods add or mov xchg mov and or (bad) jno subb int3 test insl repz pushq (bad) movsl jle movsb cwtl mov test jp lods cltd test nop add repz add jbe sub rex.WRXB jno or (bad) sub rex.RB and (bad) cwtl jo mov out movsl mov mov clc xchg (bad) scas rol retq and retq cmp sub (bad) repnz lret mov sub int lods xor (bad) fsts sub lods je add add (bad) mov push insl (bad) xor movabs rex.WXB rex.W scas in in out xlat (bad) lods decb sub rex.RB retq pushq ja lods (bad) mov std in xor leaveq lods jb and pushfq mov jmp jo fdivrl (bad) scas rex.WX mov rex.WR rex.RXB test lahf repz lods cmp loop mov mov push or (bad) mov lods nop rex.B push outsl shr or cmp mov sahf mov sub lods rex.XB pushq sub sub pcmpgtb orl sub mov xor xchg mov mov lods jg mov mov rex.WRB lods xchg xchg rex.WR (bad) scas (bad) cld adc popfq or scas imul xchg movslq pushfq pop ss pop sub rcrl xchg lods jbe push pushfq sbb xorl lahf (bad) or pop lods inc xchg mov jge test out and icebp (bad) data16 in (bad) (bad) rex.RB cmp cmp (bad) hlt (bad) movabs adc test in cmp xchg or (bad) stc rex.WRX out jb test sub lods and js adc (bad) loopne mov xchg in mov dec lods ds enterq or lods mov rex.WB pushq shrb addr32 pop addr32 push lods movabs (bad) or (bad) jrcxz or lods adc in jmpq jnp mov xor and adc rex test sbb xchg je cmc adc movslq mov push fidivr jmp xor fstl mov mov mov lods sarb (bad) nop lods callq rol movslq mov popfq fwait jl pop lods lret fs iret stos (bad) mov add callq mov (bad) push cmp lods mov and shrl rex.WB mov cmp xchg movabs movabs sbb int3 rex.WR jb (bad) je mov out sbbl sbb adcl sbb (bad) stos pushfq movsl movabs jnp jp rex.WB rex.WR pushq (bad) data16 (bad) lods enterq je sbb lods (bad) (bad) rex.WRB xor rex.WB push andl xchg push (bad) lods pop jne pop cmp hlt pop and mov adc in lods (bad) jrcxz fimull sub ljmp in lods rex.WRX mov es lods pop sub (bad) mov rex.XB lods xor fiadd sahf out add lods movabs fdiv stos mov lock (bad) or sbb sbb stos mov mov (bad) ds pop lods xor (bad) sbb insb iret stos (bad) xor mov sub movsb pop or movabs test (bad) out jl rex.WB jle add xchg shll and sub negl sub and mov xchg pushq out and movabs xchg in add mov out popq loope es cmp add mov data16 mov sbbb sub push sbb sub movabs out (bad) int stos cmpsb sti jg cmp mov push mov lods (bad) jmp repz jbe lods fnstsw gs push rex.RX or shr (bad) movslq test and lock xchg callq lods stc (bad) sbb mov jb push sbb xlat sti ficoml add (bad) lods nop or std sub mov jbe jae and mov lods xor add mov sub lods adc xorb sbb es lods test sub push retq (bad) stos pop faddl (bad) sti mov sub test stos pop sub imul push lods (bad) xlat int (bad) cmp movsb in outsl insl xchg lods fnstsw add (bad) sbb std fdivrs mov sbb xorb rex.WRB repnz icebp lods pushfq pop movabs add lods movl mov rex.R iret scas jae mov xorl cmpl test test scas mov rex.B es xchg sub mov jge in cmp sub adc mov lock mov stos cmpsl jg retq mov iret imul lods test adc (bad) lods (bad) sub test test lods clc adc rex.WRB rex.R (bad) push (bad) leaveq (bad) fs jle stos ja adcb hlt add adc pop cld and insl shrw pushq lods xchg es cmp movabs pop (bad) (bad) sub (bad) outsb rex.RX and add shlb int (bad) nop sub outsl adc rex.RXB rex.W rex.X add callq and mov js mov (bad) rol negb mov lods mov rex.RXB mov addr32 sub cltd (bad) movabs sbb movabs cmpsl (bad) or lods rolb rex.R mov vpcmpgtb (bad) adc leaveq movabs cmp int add cwtl cmp rorl add int xor sahf (bad) (bad) fadds out movabs cmpsb cli pop mov test cli lret lret loop scas (bad) in movsb add outsb mov stos loopne outsb jne (bad) cmpsl (bad) es (bad) ja int3 stos scas jge repz stc fsub scas insl leaveq xorb rex.WR int3 and sub pop ss imul sbb in sti std lods mov enterq je pop (bad) out in xchg icebp jnp mov (bad) (bad) jo xchg sbb cld mov gs lods scas sbb (bad) lods faddl pop mov jnp fisubr mov shrb lods (bad) xor rex.W movsl and push icebp rcl (bad) sub lods rex in mov lods rex.W rex.R (bad) (bad) rex.WB lods cmp add jnp cmp mov sbb cltd ror xchg lods (bad) add scas or movsl xchg lods rex.RB xchg cs js in sbb add (bad) (bad) rex.XB jle cmpsl js mov lahf in jns pop repnz (bad) adc lods pop cmp mov add mov mov and (bad) clc sbb fwait rex.RXB cmpsb rex.WR lods xchg (bad) jp cmp pushq rex.RXB sub (bad) jne sub and (bad) xchg lods shrb out cli (bad) movslq fisubl pop jae in jmp rcrb (bad) lods rex.RB outsb xchg mov nop (bad) (bad) mov mov hlt orl mov sbb add retq movabs mov sub mov insl jg in xor xor (bad) add js test lods (bad) and rex.XB gs ja sub cmp pushq out adc fcompl or retq scas mov rex.WRXB pushq data16 or and mov repz sbb jrcxz lods pop pushq and pop je,pn add sbb mov pop rex.RXB mov gs jno lods sbb xchg js lods out in mov rex.R (bad) (bad) add cs jnp movabs or callq in movabs xchg (bad) (bad) retq inc (bad) xor mov lods rex.WB outsb lock (bad) adc adc or add scas out repnz movsl and std sub jle xor mov pop jmp mov pushq (bad) std lods hlt jg push fs outsl add jmp jg (bad) out rex.WR mov movslq ss mov rex.WRX movsl sub pushfq lods (bad) fwait adc rex.R clc loopne int3 jb xlat pop lods add andl insl stos lods out mov mov fcomps pop mov cmpsl in (bad) mov and jge retq in push lods imul outsb pop xor mov lods sub mov in rex.XB repz and cmp (bad) (bad) and sbb lea rex.WXB lods jno add (bad) and out lods jb (bad) rclb enterq repnz std lods jno test loopne xchg movabs sbb loop stos or movabs rex.WRB in imul int3 add mov (bad) or out ror jge mov scas (bad) sbb fsubp movabs cmp lods es insl sbb mov pop je jnp lods fmulp cs popq test add std sbb retq in push mov stos fdivr (bad) or pop mov cmp (bad) icebp pop xchg pop mov xchg and jge sub cld outsl stos adc (bad) or jnp (bad) rex.WRB cs rex.XB push (bad) lods push shrb cmp ljmp movabs sub xorl or (bad) idivb movabs sahf rex.X adc (bad) push int3 lods lods rex.RXB pushfq insb jge mov mov pushq jnp cwtl jg rex.RX sub fiaddl pop mov xor or or jrcxz sbb sub cmp shll (bad) and jg out cmp pop (bad) shl lods (bad) movsl jg sub mov rex.XB mov imulb test add (bad) adc or (bad) mov and rorl fistl jns lods and in rorl icebp lods rex.WXB in (bad) xchg add add mov rex.WXB fdivl lods rex.WR mov cs out lods gs loope mov cmp add sbb sub (bad) xchg in jne pop mov lods insl movsl mov cwtl lods rcrl cli andl scas adc cmc (bad) lea lods lock pop test xchg in addl (bad) mov jge rex lods mov mov pushq (bad) pop sub lods callq lods cmc in adcb rex.WRXB xchg pop vmovhps scas pop add add test adc sbb lods (bad) push pop ja (bad) enterq push add repnz lods sahf xchg add or cli lods xor rex.WB jns,pt test insb push in mov mov fmuls scas jae push pop xor lods and imulb push mov movsb rex.WB in cmp jno xchg rex.WR (bad) lods rex.RXB rex.X movq rex.RB (bad) in stos mov jb mov mov cmp stos in rex.RB sub movsl push lods xchg mov (bad) ss xor js fild test pop mov rex.B mov cmc movabs lods pop sub xchg cmpb ss (bad) lods stos fs (bad) rcr leaveq or push (bad) or push cmp mov lea mov scas mov push (bad) leaveq (bad) mov (bad) rex.WRB ss sbb xchg repz (bad) mov xlat lods and sarb hlt sub enterq (bad) xorl outsb jge lods mov jg or (bad) (bad) sub sarb cmp movabs stos sbb jae pop (bad) lods scas mov lret sti lods rex.WR movsl loopne (bad) lods jbe add in push add and cld sbb sti in ja mov movsl lods mov rex.WRB and jnp pop cld xorl sbb scas (bad) pop (bad) pop imul mul mov cmp stos lods test idivb adc lods cltd test sub lret jge mov (bad) scas rex.XB mov (bad) or lods xchg pop (bad) loop retq lods mov mov jbe hlt push mov loope loop add sbb or imul add fildl mov pop std movabs in mov xor push rex.R rex.WRB sbb xlat (bad) fidivr sti insb sbb push cmp mov out lods jmp vdivpd cmp or lods cmpsl or jae (bad) rex rorb pushq shrl push mov icebp mov or and fisubr movabs sbb scas retq incl repz xchg xchg rex.RB mov (bad) jnp lods xchg add rex.WB int movabs mov jp xchg loopne sub cmp mov (bad) xor lods rex.R je pushq cld jmpq (bad) rex.WRB in es cmp lods fadd xchg sbbl xchg rex.WRX pushfq fdivs mov mov (bad) pushq and repz mov mov and out test mov mov xor mov lods rex.WB xchg (bad) rex.WRB loop lods rex.WRXB rex.B lret push neg leaveq (bad) (bad) mov xchg jbe xchg scas mov or jmpq mov and (bad) lock lods mov (bad) push (bad) retq jge out sub out adc in cli jrcxz rex.RX mov (bad) push lods jns xor out rex.WR sub fisubr push sbbl mov adc movups (bad) mov in mov std lret lods add (bad) movabs pop (bad) mov fsubl adc retq subl jge out and in and mov (bad) sub (bad) mov stos scas cli callq test in adcl (bad) rex.WRB clc jae out fldcw (bad) int3 cs cmp insb rorl lods (bad) and mov leaveq lahf jg xor pop in mov int data16 mov enterq hlt adc or pushq (bad) jns movabs rex.XB mov test lods rex.R stc ss xor lock xlat lods enterq rex.RB cmpsb jle rex.WXB lods callq fs mov popfq xchg (bad) jae pop lods repnz push push xchg lods xchg rex.WX addr32 or lods and xlat ja jb (bad) cmpsl mov cli rex.R sub xor mov or push (bad) add (bad) lods cmp xor rex.WX pop imul push mov shl lods int3 movabs cmp lods mov out out jb and xor sub (bad) or and mov movsb outsl (bad) mov (bad) sbb (bad) (bad) sar repnz lods ja fcmovnbe mov imul lods movsl rol rorl outsl cmp retq fcmovnu lods cmp pop cmpsl rorl cmp fadd jmp repz (bad) std cld mov lods lea outsb mov cmp sub or in jb xchg fwait sub mov push (bad) lods insl cmpsl mov movsb flds movl stos (bad) add pop lods add test scas rex.WX pop sub mov shll push nop test lods stos xchg or pop xor (bad) pop lods fild (bad) clc es adc (bad) scas lock lods retq jp mov mov pop lods sub movsb sti push rex.W lods adc rex.WB (bad) scas add xchg sti mov in je rex.WXB add iret scas outsb push jmpq gs sbb jae lods lods cli jp movsl jrcxz out pop cmp mov js xchg in (bad) shrl pop callq in ds pop sbb mov pop add pop xor mov lods sub cmp jae adc stos jmpq (bad) outsl and rex.WRB in outsb insb sbb lock mov adc push movsl out subb xchg movabs out mov lock imul clc setns adc pop int pop rex.RXB ss cs cwtl js sub rex.WX rex.XB mov rex.XB sub out iret enterq rex.WRXB div scas outsb jmp data16 push adc mov retq lret add pop jo std hlt test sub jp addr32 xchg iret scas rex.RX data16 imul xchg decl movslq (bad) or mov (bad) out push in mov mov rex.WR xchg lods test xor mov cld (bad) incb cmc pushq and cmp out pop (bad) pop xor rolb rex.WXB movabs cmp test lods mov rex.RB mov add cld cmpsb sbb fdivrl lods enterq rex.R lods repz and cwtl vpmacsdqh callq rex.WRXB rex.WRX repz rex.R jge clc mov icebp cmpb pushq xchg mov imul jrcxz xchg sbb lahf rex.WB mov (bad) insl out in lock mov push cmp popfq lods outsl cs leaveq xor sbb cld lods pop pop adc xor sub lods push sbb push loopne mov sub push pop cmp out jg insl fsubl test jmp cmp nop rex.X rex.X out fadds popfq or ss (bad) sbb rex.WRB gs mov rex.W imul rex.WRX lock out (bad) fcom lods fsubrl rclb or lods notb mov sti (bad) and cmpl mov or (bad) lret push iret in jge callq movabs sub es mov lret push xor (bad) (bad) hlt (bad) movabs incb lods mov fstps push lods insb cwtl or stos mov xor lods (bad) sbb rex.X movabs jae sub rex.WR rex.WR in xchg cmp push and repz sbb insb (bad) sub jns xor test mov scas fld pop shrl lods xchg (bad) fs rcrb jge scas lret enterq xchg or jnp lahf and rex.WX stos mov lods icebp jae jmpq outsl callq cwtl add scas (bad) or mov hlt sub lods (bad) (bad) xchg and mov (bad) lods lods or (bad) push mov mov test xchg sub sbb xor imul lods movsl rex.W (bad) sarl mov out jnp jge or loope adc and movslq out push and xchg pushfq jmp faddl (bad) or test (bad) lods fsubs callq jl xor xchg pushq adc adc mov fild adc lods rex.RX and and ja (bad) orb scas rex.X faddp in jo lock imul out jrcxz pushq lods imul xlat int3 enterq lods or xor scas in xchg stos xor jnp adc cmp jle rex.WRXB mov in (bad) data16 lods pop rcrb icebp mov stos cwtl test cli push lods mov mulb lods cmp pushfq mov lods scas rcrb rex repz rex.X (bad) and rex.WR lret out lods sub cltd movabs scas cmp (bad) and lods mov sbb mov (bad) pop in sbb sbb int3 js (bad) in (bad) pushfq stos lods and outsb or retq mov cli (bad) lods and fildl lods imul mov (bad) enterq fsubs (bad) adc mov cmp outsl xchg jb sub cmpsb mov mov pop movb int mov sti in sbb hlt movsb repz pop cmp jle lods fwait mov sub xchg fnstsw lods sub mov or rex.XB pop rex.WR xchg in (bad) lea (bad) enterq cmp loopne (bad) lods pushq sub lods add xor cmpsl lret rex.WR sti mov js movabs fwait enterq lods jno adc in je movsl rex.R es not mov (bad) add adc xchg leaveq repnz clc pop movabs in rex.WRB cwtl add (bad) sub (bad) mov lods push or movabs repnz shrl sub xor mov xchg icebp sahf cmp iret repnz test loope rex.WX (bad) (bad) mov movabs neg sub or jp fdivs scas jb hlt pop xchg fsubrl repz es (bad) cmp sub adc testb ss mov lods data16 pop rex test push in movabs rex.WRX (bad) mov (bad) ljmp (bad) jns vphaddwq movabs or sub clc lock cmp (bad) xor cmp jae repz or sbb mov adc lods in in outsl lahf (bad) sbb lock mov jbe test (bad) js xlat xor (bad) (bad) in lods sub sub icebp mov pop (bad) pushq or retq (bad) pushq jb pushfq rex.R pop lods xchg int ss movabs movabs (bad) imul cmc lahf out xor cmp idivb lods mov xchg data16 cmp lret cmp (bad) cs test loop sub lods pop (bad) push clc callq pop retq cmp rex.X jae rex.WRX lods out fmul and xchg test rex.B lods (bad) lods rex.W rex.WR fcoml lahf lods xchg (bad) movsb cmpsl mov lods and leaveq rclb mov jns (bad) and rex.WB fcmovu rex sub sti add cmpsb jae mov push loope (bad) mov shll (bad) cld push mov (bad) int lahf (bad) cli lock jmpq jle imul rex.R (bad) js (bad) jmpq sub (bad) rex.RB cli xorl (bad) cmp jns,pn lods sub xor lods sub hlt rex.WX (bad) push cmpsl mov cmp cltd (bad) (bad) mov xchg cmp scas ds in add and mov lods ficomp (bad) and scas rex.R fldt rex.RX add sub cmp iret (bad) out (bad) lods rex.WRB imul jge sub vandpd lods and or jno mov js callq mov mov movsb pop lods (bad) cld lahf add xchg test sub sub leaveq rex.B punpcklwd mov add lret (bad) fwait cltd lock add lods (bad) mov jmpq (bad) insl (bad) icebp lea sub lods cmp mov rex.XB rex.RXB stos callq shrl sub lods or pushq adc lods in sahf mov je repnz in push test subl addr32 lea (bad) push insb loopne int (bad) cmpsb (bad) adc pushq cmp cld lods pop (bad) mov xlat repnz jrcxz fdivrp push mov leaveq adc and adc imulb adc test pop rex.RXB or pop enterq rex.WRB lods jnp xchg shll movslq add icebp xor cmp stos iret sarl test add popfq sbb mov (bad) rex.XB sub jae rex.RX lods retq push hlt lcall xchg pop lods cmp mov jge (bad) (bad) retq sbbb cmc lods callq test stos cmp rex.WR fcompl movsl ja (bad) (bad) scas rex.X movabs sbb shll mov cmp rex.R test mov (bad) sub sarb push scas mov xor adc addr32 push (bad) mov jmp and jno mov movabs int3 rex.WR cs xor faddl lahf retq and add and fcompl scas lods mov and lods loopne enterq and mov rex.WRB or scas lret pushq mov (bad) or sub xchg lods jnp pop sub add vpaddsb imul xor mov adc lahf lods and cld pushfq mov cmpsl jae lods (bad) add (bad) flds mov mov lods int stos movabs rex.WRX push cmpsb fisubr roll lods fsts in pop enterq jnp jno sub hlt divl lods rex.XB or test in out jp sbb (bad) stos lods out (bad) scas push sub pop lret sbb in stos xchg ds cmp sub mov int3 pop add add lods enterq lods jb sub in xlat out sahf adc stos cmp mov test retq jp lods cmpsl mov fs xchg stc scas in subl (bad) sub xchg int3 test (bad) and enterq js (bad) (bad) xchg ja jmp cld xor lods sbb js (bad) mov iret (bad) sbb jo out in cmp sub sub movslq or rex.RX pop pop scas cli mov in adc (bad) retq clc mov imul scas sbb sub lret adc mov sub mov jb (bad) add xlat ljmp or pop mov mov lods sbb add lods mov cli fwait sbb add and rex.R or jmp stos or mov movslq (bad) pushq lods cmc jg cmp (bad) sarb adc pop and sub mov (bad) loopne mov lods sub test mov fsubrl (bad) in mov cmp fldcw icebp mov lret fild leaveq test outsl sbbl (bad) xchg movabs jrcxz in movabs cmp sti int3 popfq add jo cld cmpsb sahf jne shrb add and push fbstp fcompl jnp lods pushfq js stos push (bad) int lods ja gs sbb xchg lea rex mov xor sbb mov jl rex.WRB rex.R enterq cmpsb jp pushq (bad) (bad) shrl pop xchg subb jbe lods jns es fwait pop mov cmp or rol repnz jbe fistp lods loope retq xor (bad) (bad) retq in rex.W insb imulb mov cmpsb fisttp movabs xor mov lods out out movabs jns mov lods jo xor xchg mov sub mov and pushq mov mov int lods test js xchg sub sbb push hlt rex.WR sub outsl movabs fisubr sub mov adc or sbb or push mov loop jg pop mov add test xchg rex.WRB pop lods mov je lods callq rex.RXB repz rcll (bad) xchg sbb lods pop sub outsl or stc scas rex.WB jno mov pushq ds int3 add cmp push (bad) rex.WB lods mov loope sti mov lret (bad) es and pushq lods rex.WRB xor add lods subl movsb callq rex.WRB jne es cmpsb xor mov subb std xor jns adc mov stos add lea sub lods or xor xchg jrcxz sub jle test lods pushq fwait outsl add or mov int3 rclb lods (bad) nop cmc cmp add mov lret sub in jne adc xor lods insl test rex.RXB jg movsb cmp (bad) adc lods rclb rorl or and jns cwtl lods imul rorl sahf movabs xor scas es ss mov fs rex.RX lea mov (bad) sarl mov (bad) pushfq jnp jge decb lahf rex.WR rex.WR lret mov (bad) xor add in mov cmp add in pop jbe faddl or in (bad) scas fiadd out movsb or add rex.WB sub add popfq fwait add (bad) sbb jmpq mov and sub nop fstp rex.WRX jns mov leaveq and addr32 test rex.WX (bad) lods add rep (bad) (bad) (bad) jg fs mov (bad) (bad) and lods jae jno movsl (bad) jne lods sbb (bad) mov (bad) (bad) hlt int jge clc mov (bad) cmp xchg loopne xor jl stos loop and out pop (bad) sbb lahf cmp insb and lods je sbb lret faddl xor clc pop add sub pop mov rex.WRB (bad) movsl fmull mov pop lret int3 test mov enterq (bad) rex.B xchg fldcw imul nop xorb jae imul rcrl rex.X test movsb (bad) and loope fsubrs (bad) rex.R movsl jnp mov lods rex.WRXB (bad) (bad) xor jle icebp mov (bad) xchg (bad) stc pushfq icebp clc pushfq sbb lods or (bad) movabs retq (bad) xor movsb rex.X and and lods adc movsb push (bad) in and sahf out leaveq lods sbb jge cs rex.W in repz lods jg rex.XB mov mov (bad) (bad) push xchg cmp lods out (bad) adc loopnel mov movsb lret jae mov and sahf sbb (bad) cmp xchg mov insb jb rex.B xor nop lods add xchg push mov sub or and jle mov shrl jbe xchg and rex.RXB negl push rex (bad) fistpll stos movabs push jp xor rex.WXB lods jmpq lods rex.X lods stos hlt (bad) rex.WX cli pop leaveq mov cmp repz cmp mov xchg movsb rclb cmp retq (bad) or push mov lahf mov cmpsb sahf rex.WR mov callq jno sub pop rex.XB (bad) scas jle xchg iret mov and (bad) mov jae or shrl (bad) insb test sub hlt cmp outsl retq mov rex.WRX rex.WR (bad) loopne rex.RX sub adc pop retq je mov mov lods iret xchg add adc mov xor shr sub xchg jg retq rex.X nop jl adc xor test mov push es jns lea in test in sub sbb xchg push (bad) (bad) lods lahf xchg rex.X lret xor (bad) rex.WB (bad) sbb mov rex.RXB loop lahf push lods movabs (bad) mov jrcxz rex.R adc sub xchg sbb lea movabs or retq fcoml lods movsl and loop insb lods add mov jne jbe rex.WX (bad) movabs rex.XB fcomip mov (bad) lods xchg (bad) and mov xor rex.W roll sub jle jge lock rex (bad) mov (bad) mov push out lods or cs lods pop stos mov shlb lea pop adc mov sti adc fisubl jrcxz popfq or addr32 (bad) jge lods mov cmp outsl mov shrl es movabs (bad) (bad) lea or add lods (bad) (bad) sub mov fadds or rex.XB rex.RX lods jg xor jp retq ja cmp (bad) setle or cmp mov cmp xchg rex.WB mov xchg (bad) (bad) mov movsb rex.R (bad) pop (bad) mov mov jl add (bad) sub mov lods rex.WX jmpq sbb sarl adc lods sbb sub lahf repnz push lods test rex.WX rex.XB rex.WRXB pop adc mov scas js imul jmpq jl mov xor and loope mov lahf lock mov xchg lods outsb adc adc lahf (bad) test shr (bad) mov jp pop scas mov push subl lods (bad) mov xchg (bad) (bad) or movabs lret loopne movabs (bad) fst rex.B movsl or in adc movsl (bad) add subb add xchg int addr32 cmc xor (bad) movabs data16 jns jb pushq out test xchg nop fcom mov lods rex.WRX mov (bad) add xor lret sbb mov jmp sub or loope pop sub lods movsl sbb adc fildl or fnsave insb xor rex.WB subb in lods rcrb insl lret lods imul sti outsb fcmovb in (bad) jb lods shrl lods push (bad) mov rex.RX rex.WX lods in movsl xor int mov lods and mov addr32 shrl xor and lahf (bad) vmovlps xchg add callq xchg sub mov stc lods adc ffreep (bad) adc push scas xorb (bad) adc int3 mov (bad) pushfq fimul jnp add in retq sub (bad) int popfq pop lods adc jle xchg xlat jp shrb mov mov fiadd mov movabs (bad) insb out add stc lods mov or insl add sahf scas mov adc mov imul in (bad) movabs test push movsb rcrl mov add (bad) jbe rex.RX jmp (bad) js int push (bad) je adc rex.XB es jb add fmuls add push rex.RX rex.RB jge xchg fildll std jns sub xchg xchg mull insb jle gs rex.X mov rex.WXB cmp xchg shl xor rex.WR rex.W (bad) (bad) lods and xchg sub movabs mov test xchg (bad) or jmpq lret cld (bad) (bad) gs outsl mov push scas rex.X mov adc sbb push sar or paddsb movabs jno lretw loope (bad) stos lock or sbb or movabs adc addr32 add scas mov movabs push (bad) or mov (bad) mov cmpsl ja stos (bad) int cmp mov pushq test roll loop (bad) stc mov int imulb mov movabs retq mov jl out ja test rex.WXB rex.WX shlb fnstsw mov xor popfq lods lahf (bad) (bad) jnp cmp mov (bad) sbb (bad) (bad) loop mov fisubrl rex.B xor (bad) jrcxz icebp cltd mov and or jae mov pop cmp iret scas mov callq cs cli lods fwait out xchg pop (bad) mov sub sti mov add rex.XB jmpq std rex.WB push flds loop and repz (bad) ja pop lods jge lret ficoml clc test (bad) out shrl xor insb cmp sbb mov clc outsb jl scas lods int ss popfq retq lods jrcxz movslq sbb out add mov test (bad) rex.RXB je fsubrl lods add jae movsb (bad) (bad) pushfq mov subl imul or lods fdivp sbb sub rex.B xor mov stos rex.WRB rex.WR cmp or add (bad) mov mov int3 movabs fsts pop adc gs jnp out push xchg movsb lods cmpl test mov lods push and movabs imul in add fs loope repnz or sbb fsubrs jae xchg xor rex.RB mov in mov stos adc (bad) repz rex.RX fs sar lods (bad) mov lods or mov icebp xor push cmp movabs add (bad) loopne (bad) std mov push test test in notb rex.XB int3 sub test add push outsl jrcxz int retq in jl and pop adcl mov (bad) in xchg mov jp cmp fwait (bad) out retq roll cwtl rcll pop inc fs data16 xchg callq fstpt jo (bad) adc stc retq fisubl xchg lea rcrl add mov testb (bad) jge cmpsb (bad) xchg jb adc fildll cmp cmpps int3 pop jbe mov fisubrl (bad) rex.RB mov scas mov lods test fnclex in mov add sub lods rex.WR lret sbb fldl (bad) add movsb cmp imul fdivs in out xchg in test mov loop movabs mov jmp xchg outsb rex.WRB (bad) shrb retq mov mov subb sbb pop cmp xor mov sahf xlat test (bad) jno adc jne lods push cmc stc movabs adc js (bad) fs cmp lock cltd push shrd push cmp jl rex.WX pop (bad) push outsl mov (bad) mov fadd sti lods rex.WB pop imul pop push add (bad) xchg (bad) rex.WXB enterq (bad) jns (bad) lods add mov ja mov js lods movabs insl nop lods insb adc cld mov sub xor lods mov stos addr32 stos or jns mov movslq (bad) sub adc retq js mov jb mov test scas pop mov or fdivl test (bad) or mov mov xorl adcl add cmc insl (bad) fwait adc and sbb jmpq push push (bad) (bad) enterq in rex.X (bad) fsubl mov xchg jl movabs xchg lods mov mov movabs fsubrs rex.WRB lahf adc scas mov in or (bad) imul rex.WRXB movslq or lods (bad) adc pop clc fidivr test lods loopne xlat insb (bad) neg fsubrl movsl in and rclb (bad) sub movabs (bad) lods rorl iret add mov jo out jo pushfq push test pop push fstpt lods enterq in vcvtsi2ss sub (bad) mov sub (bad) or sbbl out (bad) or stc sbb add rcl push stos enterq ja rex.RB fwait movabs leaveq mov jbe jns lods mov lret lods push lods and xchg push mov mov clc lods mov loope andl or sub stos pushfq lods outsb flds or lods mov sbb (bad) fldl stos or out retq retq scas (bad) lods xor (bad) test add rex.RXB jl sub shrb pop lods (bad) lock jo lock pushfq push lahf mov mov mov retq imul mov lods clc or movabs stos sti shrl mov rcrl add (bad) add sbb cld push (bad) sub pop fisttpll (bad) imull sbb lods cwtl sarl callq lods es mov cwtl mov mov retq cltd cmc int add lods movslq leaveq callq fwait or mov mov adc xchg jbe lods mov idivb leaveq and fldcw (bad) mov test sbb cmp jge lea pop iret (bad) in imul lods nop shll adc in test mov (bad) lods (bad) (bad) adc or and (bad) (bad) (bad) movsb outsb rol (bad) enterq rclb (bad) mov rex.RXB sub lahf fist lret pushq jg xor rex rex.XB and pop pushfq jl sub lret fldt ja scas (bad) lock lods mov mov fwait sbb test movabs movsl rolb pushq test lods and gs jb scas rex.WR mov fldt fwait rex.WR lods out pushq mov adc or clc mov popfq adc lea outsl loop mov int3 pop lock div lods stc andl rex.WXB rex.XB movsl repnz ss mov (bad) mov mov mov test (bad) lods sub lods mov jle lret sub mov addr32 movabs pop cltd lods jnp sti jrcxz and jp mov (bad) jp lods scas adc pop cmp sbb jo enterq (bad) add callq cmpsl outsl sti jb xor retq and or jp xchg adc (bad) mov xor sbb mov lods xchg movl rorb shrb shrb lods rex.X adc (bad) jo lods cmp mov (bad) lods in movsl out sub (bad) push cmp push in hlt (bad) ficomp (bad) ss es jbe clc adc pushq (bad) decl lock (bad) lods or and lods jg and jne xchg rex.WRXB (bad) cmp rclb add adc adc es insl sub fldt pop rclb pop jo fldl lods push hlt or adc xor xchg lods cmp push popfq xor mov pop pushfq mov jne (bad) int3 xchg mov (bad) shl fldt lods and adc xchg push mov out insb and add retq and xor fcoms (bad) and mov rorl fsub lods clc push testl fs cmpsb int3 mov jb rex (bad) mov mov sub or (bad) scas sub nop movsl shrl lods pop mov mov rex.WRX (bad) movl sbb movsb (bad) jle mov (bad) outsl jae in sbb lods pop push ds int ficom pushq in loope test mov iret fisubr jp or push movsb mov out stos (bad) stos (bad) rex.WRXB lret nop (bad) (bad) add test movabs jmp sub mov std jle (bad) (bad) (bad) (bad) scas xchg (bad) xchg rcrb and (bad) negb xchg add xchg loope mov in rex.XB and insl insl (bad) (bad) pop mov mov orl insb rex.RXB lods cmpsl rcrb jl (bad) callq pop pop xchg in pop fwait mov ffreep mov fsubr mov sbb movsb jb mov movsb xor in (bad) out (bad) and xor push sbb or callq (bad) lods outsl cmpsb (bad) (bad) mov flds outsb add imul test lods pop and (bad) lods sahf test cmpsl cs movabs movsb test movslq (bad) sti jp lods rex.XB rex.WXB rex.RXB popfq xchg stos xchg insl (bad) lret lods adc sbb xor sbbl cmp imul or xchg lahf loopne mov xchg sub or mov mov (bad) sbb mov sarl lods jg ss rcll jp lods and (bad) cmc jp stos fld sub loope lods sarb scas rex.WXB rcll (bad) loope jb or or (bad) lods in and pushfq xor stos (bad) rex.XB jne sarl or (bad) add imul jp lret mov jp rex.RX rcll jmpq push idivb (bad) fnstenv sub (bad) (bad) jo scas sub pop (bad) sbb (bad) pushq or out out jmpw sbb stc scas loopne (bad) rex.WX in lods add cs jmp mov lock lods rex.WB repz mov jae (bad) ds incb (bad) es adc lods mov (bad) (bad) jp jbe rex.B rex.WRXB repnz sbb (bad) jno clc pop xor cmp fnstsw nop mov rex.RB cmpsb movabs lods iret addr32 (bad) (bad) mov je in push out lods sub jb (bad) lods jmpq (bad) xor jne lock sub in push xor sub and add mov xadd lods (bad) rex.WRXB ja icebp mov scas lods pushq sbb fisubrl cmp (bad) pushq rex.WXB xor retq enterq lods fstpt jl pop jno xchg rex.WRX mov (bad) loope adc sbb movslq scas cld sbb sbb sbb mov data16 (bad) sub lods neg jno mov pushq retq mov in ja,pt cmpsb xor rex.WRX fwait sub push int pushfq lods xor mov cs (bad) and sub (bad) mov fcompl lods lret jg lods (bad) adc and xlat cmp lods decb mov pop clc (bad) jmp scas stc or jbe test clc rex.R rex.R fwait imul pushfq rex.WB jb hlt (bad) insl mov repz lods xchg stos (bad) lea (bad) sub lods jo or repz adc rex.B cmpsb outsb and mov outsb sti fnstenv test jb rex.R (bad) (bad) xchg (bad) insl adc sub jne in lods xor sub push cli (bad) (bad) ja sub pushfq fisttpl rex.X mov rex.WRXB jmpq (bad) (bad) fmuls lret push sub in (bad) mov xor mov lods hlt mov movabs (bad) (bad) sub sbb rex.WRB mov and sti pop mov sub cmp movsb pop rex.X rex.WRB pushq xchg jo adcl mov lods xor icebp cld mov adc add callq lods loopne test shrb rex.RB loopne or push cmp enterq out add mov jg js jp jrcxz fisubl or cmp mov xchg icebp fucomi mov lods xchg add rex.WXB mov cmpsb gs mov rolb clc and add (bad) xor test roll movslq adc test callq (bad) pop lods jl int3 (bad) (bad) cmp jmp fsubl retq stos test fsub and xchg mov int scas jne jb mov subl in outsb lea sbb adc rex.R rex.X rex.WRXB mov cmpl test cmp rex.RX (bad) mov sub scas cltd add lret push cmp (bad) xchg mov test cmp add outsb cmpsb (bad) or lods jp rex adc cmp fildll adc roll (bad) sub rex.RB repz scas fldt sti (bad) cli movabs lea lods sub cwtl mov push (bad) add (bad) and xchg xchg in pop scas push xor lods je cmp xchg or rex.WX pop lods and jns or cmc pop rex.WB repz fcmovbe movabs scas pop insl and adc cmp add and mov retq ss ja (bad) xor scas mulb lods int3 lods and imul (bad) jle lods mov test push repz xabort mov mov (bad) sbb movslq rex.WXB rex.X cltd rcll adcb int in rcrl sub lods rex.WX je sti mov mov (bad) sub cmp or in pop stos mov and xlat xchg fadd insb mov xor sub xor rex.WXB repnz pushq mov imul and je xchg mov leaveq xchg sahf (bad) fs and xor jo (bad) mov (bad) sub pushq in xchg fiaddl rex.W rex.WB sub mov out movslq (bad) (bad) cs fnsave (bad) mov adc shll lods imul int3 lods adc mov rex.R lods icebp rex.WRB js sub fistpl retq cmp pop mov je retq adc pop mov fcmovne sub sub mov (bad) lret mov pop popq mov adc stos mov jae std loopne in xor pop (bad) sbb push rcrq es cmp push lods mov sub xchg ja adc loop test movslq out (bad) mov mov cltd xchg retq lods (bad) mov clc and rex.WX mov xchg lods jno jns (bad) movabs rex.XB shrl (bad) pushq add rex xchg movabs (bad) movsl rex.XB rex.R shlb xchg mov lods (bad) movsl jmp lock lods sbb jg lods nop xorw cld (bad) lods lret mov pop add or add (bad) lods (bad) pop push xchg and cmpb (bad) mov (bad) negb rex.WR nop stos sbbl cmpsb retq jle jo or subl adc xorb movabs mov in ja xchg rex jo push sub mov (bad) mov add or stc (bad) and cwtl and jo sub add (bad) stos sarl (bad) test (bad) notl xor movabs and jne cmp movabs in (bad) cld rex.XB adc retq add add jb xchg (bad) mov mov adc mov mov rex.XB je jno or fiadd negb pop (bad) icebp fistl sbb sub cli fnstcw (bad) (bad) rex.WB (bad) fiaddl ds (bad) leaveq jo mov rex.WXB ds lea mov cmp rex.XB cld stc cvttps2pi add (bad) or rex.WRB mov iret sbb cld (bad) lods (bad) test lods (bad) stc mov pop sar lods cmp es mov jge in jb sbb lods sbb rex.X adcb int3 (bad) pop lods add mov and in lods pop sub (bad) fsub add (bad) in lods popfq pop out imul lods mov (bad) xor (bad) scas rclb cltd (bad) sub (bad) movabs gs cs mov mov sbb in mov rex.WXB fldcw punpckldq (bad) cltd mov or sub push stos cmp jmpq and jns shll mov (bad) sbb movabs imul imul ds hlt loopne xlat (bad) enterq xor rcr rex.WR (bad) (bad) fwait (bad) rex.WR retq scas cmp or sub lea (bad) lods xchg xor add jl jne pop sub gs lock sarb fistp mov out cmpsb mov movslq (bad) sub mov sarb hlt fstpl cmpl (bad) sbb lock (bad) test cwtl es sbb in sub mov movabs sarb mul decl lods shr (bad) sub xchg rex.WXB movabs jnp pushq adcl fnstsw hlt mov xchg outsb ficompl leaveq rex (bad) (bad) jle mov xor movabs rex.WXB rex.B lock ficompl shl movabs movabs movsb fs fs lods jbe pop (bad) repz rcr cmpsl out movabs adc out hlt cwtl test lods test jbe insb (bad) rex.WR lods rex.WXB and (bad) fistpl rex.RB rex.WRX (bad) lods icebp adc pop (bad) (bad) mov mov lahf rex.XB loope jle xor or mov sbbb sbb fstl mov in add xchg lods iret (bad) sbb jge xchg fisttpll cwtl lahf popfq orl and adc xchg in (bad) jne lahf repnz (bad) xlat retq out lods jns jp sbbl or in in incl shrb xor rep data16 add (bad) lods mov out in (bad) es test (bad) fldt enterq xor sub and (bad) insb pushq movsb (bad) sbb lods or out pushq lods (bad) repnz rex.RXB (bad) xchg callq xchg (bad) mov push mov lods (bad) (bad) xchg add shrl pop or lods push adcw lock shrl pushq and jl scas stos sub sub jrcxz lods xor mov and callq or test jl jg in mov addr32 (bad) rex.WXB repnz stos adc stc (bad) rex.WX shlb mov jb callq or mov lods push movsb retq lahf push push pushq mov je popfq retq cld adc scas outsb (bad) lock sub js lods rex.WB nop cmp movabs pop mov mov jbe pushq xchg and sub test ja lods in add es lods rorb gs lods movsl sub pop (bad) (bad) (bad) rclb cmp fwait stos mov cmp cmp cmpsl xchg (bad) rex.WX int3 gs sbb mov pop test (bad) add (bad) (bad) and es (bad) (bad) in xchg add icebp rex.W jl lods adc rcll adc cmpsb push callq pop vmovddup sub pop retq lods lods lret (bad) and data16 mov (bad) (bad) scas sub jrcxz add push pop sbb cli pushfq movabs lea push stc lea xor adc add stos mov fisttpll mov loope cli jmpq or out mov or negl out cmp sbb pushq in cwtl test sub retq (bad) rex.RB mov in push in adc sti lods rcrb je test movsb lods (bad) int3 (bad) sub cmpsl callq add mov xchg sbb leaveq mov hlt stc int3 adc cmp stos push cmp sbb adc (bad) lods sahf rex.WX lahf jbe and lods or lods cwtl js lods cmc or lods and xchg cmp nop add movabs jmpq xor fcompl insb mov gs mov out movabs rol lods shll lods xchg (bad) loope jmpq sbb movabs mov add addl loope pop scas adc repz cwtl lods in xor lret xchg xor lahf lock fwait and rex.WRB lods test cmpl stos (bad) jmp mov (bad) je rex.RB sbb pop xor cmpsb movabs xchg retw fsubrp pop lods jge movabs icebp (bad) sub cs (bad) or ja or loope mov cmp adc and pop out mov adc jp mov lods pushfq add and (bad) hlt stos (bad) mov test xor enterq lods mov scas out mov adc rex.R insl jns sarb pop fmull xchg xchg lods mov jrcxz lods xorl and iretq scas shll sbb (bad) lods int3 movabs movabs (bad) (bad) leaveq scas pushq (bad) lods ficompl js lods push adc sar xchg lods pop push mov xor or lods jmp cmp (bad) xchg jo test test adc xchg sti lret cwtl xchg rex.WXB pushq mov cmp data16 jno leaveq cltd add (bad) mov fildl lods iret sbb sub jmp and pushq movabs test add jo pop rex.RXB cmpsb mov (bad) scas add sub callq gs (bad) (bad) xchg cwtl out rex sbb int shrb add rex.WXB (bad) cmp lods rex.WRXB or loop fwait mov nop lods sbb fldt ds sbb jbe cmp adc movabs push or fcomp adc push test addl (bad) (bad) test movabs bnd mov add jbe add cs adc lods (bad) jo sbb mov lea cwtl (bad) xchg push shrl pushfq test in in and and incl stc add (bad) out lods clc movabs lret mov (bad) rex.WRB add add jae (bad) (bad) adc sub movabs push clc mov sti out jge addl cmp lods stos push (bad) sub rex.RX add adc or mov loop or mov out lret (bad) or adc xchg shrl xchg lods xor (bad) pushq cmp repnz fistpl push icebp mov movzwl or push movsl pop cmp lods mov rex.X sub mov sbb push (bad) mov cs (bad) sub adc jo sub ja sbb rex.RX cmp or jno js xchg loopne mov retq cwtl test and mov rex.X (bad) lods (bad) cmp xchg lods ja and (bad) mov sbbl mov popfq repz lods jle loope pop adc clc rex.R scas sub sti cld stos pop in xor fcos cli sbb cmp movb nop sub (bad) jg int3 sbb cmp fistpll or jge in cli (bad) enterq lods loope cmp notb and mov (bad) push push rolb sbb xchg pushfq data16 pushq push fwait pop adc xor cmp out lods (bad) (bad) (bad) pop loope cmp in add (bad) pushq sbb (bad) and movabs icebp or jbe rex.RXB (bad) push movabs (bad) sbb sub je test (bad) xchg mov rex sub (bad) xor scas mov adc movabs lea movsb add rex.RXB mov or jl in decb lahf (bad) rol pushfq (bad) push xchg adc (bad) adc sbb add mov xor mov int sub callq adc test rex.XB mov nop pop in fcompl sub lods fs movslq and (bad) fisubrl cmpsl xlat xchg fsubp xor test adc movsb jmp callq rex.WX (bad) (bad) and add xlat test cmpl mov sbb mov fldt stos sarb popfq xchg subb cmp repnz mov int3 mov movabs (bad) int3 fisubr pushq pop scas cmp (bad) fcoml je xchg rex sbb jg lods test rex.XB rex.R lods xrelease (bad) callq adc outsl int3 scas loope jnp rex.RX cmp stos rex.WRB (bad) movsl mov (bad) (bad) pop cmp movsb enterq xorl xchg lret jae in mov rex.XB jnp jo (bad) rclb lods xlat add xchg rcr in xor cltd jg leaveq test scas rex.RX decb movslq jo cmp lret stos pushq scas callq scas mov lret sub (bad) stos rex.B cmp in mov mov out sar xor mov adc mov ds adc (bad) add out in mov rex.WB rex.WX jmp pop add adc lods idivb movabs test (bad) in add rex.RXB (bad) lret sbb pop lods data16 imul (bad) lock subl (bad) push in pop adc (bad) or movabs push jle test cli pop scas (bad) in (bad) xor or xchg (bad) mov scas (bad) (bad) (bad) mov sbb lret add (bad) or (bad) pop mov stos movslq std add cwtl lods iret rex.WRX pop (bad) orb cmp shrl movb scas stos mov js notl push cmp sbb in shrl xor rex.RXB test lahf sub sbb mov xchg push jl and lock enterq xor mov mov sub enterq mov mov sub in movabs stos stos adc cmp or pop (bad) jbe (bad) cmpsl cmp retq mov xor nop pop lods (bad) sub mov cwtl fcomps adc push pushq (bad) (bad) mov jne pop rex.WR mov sub loopne jp sbb rex.RB xor pop lock pushq adc pop or jb add sbbl add (bad) push hlt mov cmpsb fwait data16 mov std xor mov adc xchg lahf (bad) imul jle in fisttpl scas jl sub pop sub rex.WR lahf popfq lods retq addr32 jne sbb lods movsl xchg fildll out cmpsl test sub xchg adc push lods jle (bad) or sub jo rex.WB cmp mov push movabs rex.RXB data16 retq mov add lods jo and adc jg sub rex.WXB push mov and or (bad) imul (bad) pop lahf adc rorb (bad) xchg incb out add add jbe lods faddl sbb repnz lods insb (bad) pushq adcl or scas add mov mov (bad) nop addr32 je test idiv int rex.X int3 scas movq (bad) mov (bad) lods mov mov (bad) lods mov mov stc push pushq mov lods iret xchg mov xor hlt adc out push lods scas (bad) mov pop mov pop (bad) pushq in (bad) lods and adc fcmovnb test mov sbb xchg movabs (bad) enterq lods jle adc rclb or rolb rex.RX mov xchg shrl mov pushq loopne lods jle adcb scas rsm retq adc fistp (bad) lods mov out pop stos movabs cmp mov (bad) out and clc (bad) lods xchg loopne callq scas test (bad) xchg movabs or ja enterq stos add sbb pop jae mov pop cld add or sub sub cmp nop mov stos xchg lock xor pop enterq (bad) mov sub lods xchg sub mov cli addr32 pop (bad) jbe (bad) out lods cld (bad) std cmp loopne in and movsl mov in adc jge xchg scas sub xchg pop sbb fs outsb repz or pushq stos movabs cmpsl cmp shrl jnp mov iret rclb insb cmp or adc lahf (bad) rex.WB xchg insl jl rex.WRX test lods xchg rex.B movslq pop xor fwait jne push lods pop rex.RB rex.WX rex.R lods xor je mov and imull sti mov (bad) loope cmp jg (bad) rex.WXB mov lods movabs or push (bad) outsb sti jo push lods fstl and repz mov sbb lods loope xchg lret rex.RB rex.WRX rcll add gs xor mov rcrb fidivrl in shll adc xor rex.R iret (bad) mov pop int and sub sbb rex.WXB or rex.X and imul test push stos adc pop retq sbb pop movsb rex.RXB repz lods add pop addr32 jns xor int3 (bad) fld lods fisubl mov loope js xchg ja lret mov sub (bad) pushq movabs shll jb lods scas cmp jrcxz push or test in movabs movabs sbb rex.WRXB movabs mov mov (bad) cli mov (bad) test sub add push push sbb lret pushq movabs pushfq or or in cmp mov mov (bad) icebp xchg lods addr32 retq cmpsb shll loop (bad) xor jo and lods xchg sahf push mov (bad) (bad) (bad) mov rex.WXB xchg push cltd wbinvd lods scas in not cmpsl andl (bad) enterq add or fidivrl lods rex.WXB rorb jo cmpsl movsb psraw clc (bad) lods or and jrcxz outsl scas mulb out std out jne retq cli or (bad) xchg add lods lods pop add in push rex.RB or test jl pop lret rex.WRB js rex.WRX lods push cmp fmulp rolb stos out jae jne imul rex.R xchg mov rex.WX (bad) mov lahf in pop mov ljmp or rex.WXB jo (bad) cmp add jns movabs cmp leaveq adc rex.WR add mov lods and ficompl imulb pushq mov adc rex.B (bad) mov movsl rex.WB int3 xchg imul push jae mov jae push movabs popfq cmp insl mov test or jmp mov cld (bad) mov orb sti adc ja and (bad) rorl (bad) (bad) fsubr adc lods push (bad) mov stos mov push xchg mov sub lods sbb test data16 insb sbb test push lods (bad) mov and sub movabs add movslq ds subl mov jns stos sahf rex.R adc stos lods rex.B rex.WRB rex.WR jne xlat data16 repnz incl pop mov (bad) pop add (bad) loopne lods mov pushfq test popfq fidivrl faddl fs (bad) insl lret mov lods rex.WRXB sti lret (bad) pop lods (bad) sub retq enterq fsubrl cwtl lods mov mov add lods lods sub (bad) lret lods (bad) movabs jmp and movabs rex.B in add mov clc adc loop and xchg sub (bad) mov (bad) rcrb lods stc jmpq add rclb xor sub (bad) jb and movsb mov rex movslq insb clc (bad) insl or (bad) ds adc and repz (bad) sub add mov hlt imul in adc shrl fs shl movabs xchg fstps add (bad) rcrb out jge cld test lods mov xchg rclb movabs lods mov mov test lods test retq cmp (bad) mov mov xor jns lods movabs rex.X scas jp cmp add rex.WR outsl clc xchg rcl mov sti test js mov mov incl retq xchg nop lods (bad) rex.WRX cs (bad) push and stos jae movabs push sub shrb in out popfq and cmp (bad) rex.WB mov lods (bad) push rex.WXB cmpsb callq rol (bad) (bad) fstpt shrl or lods xchg or rex.WR rex.WRX mov js callq mov fnsave scas hlt fwait (bad) adc add lods jg cmp js sbb addr32 movslq and sbb and imul movabs imul sub push imul pop mov mov add cmpsb cmc mov loop mov cmp sub sbb popfq add push cmpps jo outsl sub rex.B (bad) xor rex.WR (bad) mov mov mov rex.WB mov repz loop lahf push (bad) ja je mov (bad) lods fldcw xor xchg mov or mov lods (bad) in xchg cmp rex.RX iret xchg insw (bad) loop mov (bad) fisub pop enterq xor xchg (bad) mov lret or adc scas (bad) jmp mov jnp mov lods pop sub loopne outsl lods (bad) js add loopne fsubrl sbb in jo rex.X gs adc fldt pop int xor or mov sbb push lods test (bad) repnz lods in pushfq cli sahf fisubr ss cmp lods icebp add adc pushq ljmp adc xchg (bad) cmp add test in add je rex.WB add and cmp xchg mov or sub test test outsl mov movsb lods xchg or adc in movabs mov mov clc lahf mov movslq lods xchg (bad) cmp jle add add lods or mov stc mov fdivr out mov je movsb cmpsl scas jb (bad) sub cmp rex.R xchg sub sbb movabs cmp xchg and lahf in or rex.X mul xor rex.WRX fcomp in stos retq stos out (bad) out cmp cmp pop mov rex.WRX jne movabs push lods ss in pop xchg and retq lods fsubrl out jo and jrcxz lods je es sub pop mov sbb lods mov lods rex.B sub (bad) in jge xor fmulp rex.WB std es ds mov jne out repz jns mov (bad) ss jl rex.RXB in or (bad) xor (bad) rcll scas mov (bad) loope cli adc out adc (bad) faddl stos cld movslq (bad) mov sub movabs std lods je xor movabs (bad) retq lea xor callq cs (bad) xor sbb (bad) (bad) (bad) decl (bad) (bad) sub rex.W es lods (bad) leaveq gs and pop test fldt sbb add push insl scas lods (bad) cmpsb rex.XB rex.RX int3 test lods rex.WRX icebp jmp mov or lods rex.WRXB rex.RX neg repz rex.WR rex.XB outsl std (bad) scas jmpq imul in jmpq mov loop mov sub (bad) insb xorl add sbb sbb in rex.WRXB mov gs stc xor (bad) (bad) rex.WR mov mov int3 int3 (bad) adcl cmpsb outsb rex.WRB lods or mov nop jg cltd cmp int3 cmp js jmpq in push or push lahf mov clc push cltd lea rex.RB fsubr fistp cmp stos add repz rex.WRXB subb cmp sar xchg pushq lods mov rcrl xchg pushq lods (bad) sbb stos (bad) cwtl orl in jp mov rcrb mov mov add scas (bad) cmp xchg push test wbinvd in or jnp lods (bad) mov lret je adc fldenv jno movabs vpaddusb lods pop rex.X push sub add fs shrl xorb cmp stc cld and jge mov mov cs jp pushq or jmp add loop sbb rex.WRB mov (bad) jb jmpq and adc fidivr sbb pop test sub or rex.WR jle testb test stc and (bad) jg (bad) lea repnz mov rex.X int3 in test mov rex.WRXB (bad) sub stos jrcxz or xor xchg push cmp push fdivrl scas (bad) shrl movabs add enterq push test retq (bad) iret cmp lods movabs pushq and icebp adc rex.WRX xchg sub (bad) roll sahf cwtl out adc or (bad) or test lods insb (bad) outsl (bad) addb pushq movabs adc fcmovbe mov (bad) and rex.WRXB data16 xor adc (bad) movabs pop mov lret cmpsb rex.X and push testl test movabs lods loop pop pop mov mov scas (bad) mov cmp sbb sbb movabs sbb std or fwait jg (bad) lods test add sub add or je jmp nop adc lods sbb push xchg xorl xor mov (bad) sub imul xchg mov push rex.W and rex.WRXB add rcrl iret retq lods movsb jge xchg cmp add mov std sbb jl mov movsl out test (bad) insb mov and xchg icebp cli rex.W mov mov leaveq orl push rex.R push out adc xchg pop adc (bad) ficoml in xchg int3 js lods loop es cmp lods int3 (bad) faddl enterq xor and (bad) sub addr32 in (bad) lods sub movb adc push (bad) sub adc xor rex.RXB mov (bad) (bad) movslq lods and shrb movabs rcr sahf rex.WXB cmp (bad) cmp cmp scas stos pop cmp add (bad) insb gs lods xchg pushfq retq pop repnz pop or rex.RX sub jno cmp jg or (bad) repnz adc cld movabs mov rex.WRB mov andl lods retq push and and jmpq mov (bad) popfq or lods (bad) jl jns (bad) ss rcrl (bad) cmpsb lods movabs icebp rex.XB lods add cmpsb mov sahf movslq loopne pushfq rolb (bad) lods stc in sub rex.WX pop (bad) jo rex.RXB jno scas push jge mov or idiv and mov pop mov sbb outsl lods push imul (bad) and or pop lods cs stc xor or cmc movabs pop mov adc add (bad) (bad) scas (bad) jo and stos lods int in movslq and cli rex.WX (bad) (bad) xchg jg lods sbb movsb mov pushq lods insb lods xchg xor rex.RXB jle pop lods pushq repnz test (bad) decl loopne lods gs sub psrad lods loope test jnp std sub (bad) (bad) mov (bad) jmp vmovdqu xchg iret rex.WB sub lods or (bad) mov xchg scas pop xchg sub hlt loop rcl lods xlat lock (bad) in (bad) fisubrl mov and (bad) adc jg sbb fwait insb test sbb rex.WXB lret shrd fsubrs lods sub fwait mov stc lret lods pop add mov lods push xchg cmpsb rex.WB xor xor (bad) jae subb (bad) mov flds (bad) and or or push lret jne mov xchg (bad) (bad) lods out sahf retq lods or movl scas fs or or stos rex.WXB popfq (bad) xchg adc outsb xchg data16 outsl rol imulb lods ds xorl push (bad) sahf jl movabs sub js adc jmp mov rex.RX (bad) repnz (bad) jmpq jno or jnp fs lods mov push rex.RB rex.WB lods out cmpsb rex.WRX pop jle mov sbb mov rex.WR sub and pop stos xchg (bad) xchg and or ja (bad) (bad) lods xor push add in sbb (bad) jg rex.X fisubr (bad) lods adc mov adc (bad) or rex push rex.RX mov scas jl in (bad) pushq sub or pop mov repnz lods mov xor scas rex.X gs sub scas and (bad) (bad) lods rex.WR rex.WRXB xlat mov jge sbb scas rex cltq lods mov rex.RX adc scas stos lods push mov add gs mov scas retq adc adc in cli lods adc fmulp scas jns mov mov movsb std (bad) mov adc flds mov gs imul nop movsb jae mov (bad) test adc movsb (bad) cmp movabs push (bad) rex.R rex.RX add rex.WXB lods jrcxz (bad) mov rex.RB and adc (bad) (bad) clc lods sub movsl out (bad) mov jge lods xchg test out in mov xchg lods pop mov lock sub xor cli lods fs pop std xchg retq retq cld and in clc rex.WX lods (bad) test sarb rex.RX movabs (bad) mov lret push fcmovne lods (bad) (bad) xor xor sub xor in rex.RXB es cmp movsb rex.WB rex clc (bad) mov movslq cld in (bad) loope sti cmpsl rex.R cli cs lods rex.WRXB xchg test clc pop (bad) adc in (bad) add outsl outsb lock cld lods xchg mulb pop iret jg pop cld rex.WRXB outsl add sub or jge jno lods mov test push fcomps insl (bad) pushq mov and lods mov mov mov sub mov cmpsb (bad) fs xchg and rol and es jnp (bad) cwtl mov mov sub jmp cmpsl hlt (bad) sub (bad) (bad) int sbb out rep roll mov fisubr repz (bad) movsl jns orl sbb cmp xchg push or lret sahf lods (bad) sarb fnstenv lods clc mov cmp fisub shlb mov pushq jae push xlat cmpsb in rex.WRXB lods popfq fstpl je sbb outsb lods rex.R mov or (bad) sbb or lock mov in lods rex.WXB mov adc lods hlt (bad) idiv scas rex.WRB rex.WRX data16 test int3 sub adcl xor or jmpq mov decb fldl lods pop sbb lock mov (bad) (bad) cmp movslq scas (bad) (bad) mov hlt lods (bad) rex.WR imul cmp cmp mov loop imul jne insb lods sub lods test mov lods adc xor or jle test out in xchg (bad) jbe (bad) callq rex.R push popfq jmp movabs (bad) (bad) movabs rex.WB loope popfq repnz xor fmul (bad) imull lock or pop ss adc in mov (bad) callq fsubrl jrcxz movabs loopne data16 (bad) lahf iret mov mov xchg (bad) lea faddl cmp (bad) stos (bad) xlat rex.WRXB out rex.WR mov scas mov (bad) callq pop shrl sub icebp rex.RB pushq mov mov mov insl movabs popfq sub lods or outsb stos push in rex.WX jnp cld gs mov (bad) loopne pushq in lods test (bad) cmc (bad) mov (bad) data16 insb rex.RB movsb jmp in ficomp mov andb cmp lods rex.X sub sub mov cwtl andl test cmp movhps rex.WXB xchg sub std mov (bad) push sbb mov lods jo pushq jne (bad) shr (bad) mov jle sub rex.WR (bad) in (bad) jbe outsl cmp lods lret in sub lock mov (bad) adc mov jnp lods rex.X sbb xor insl (bad) jb cltd fs lods movabs lea jo adc lods test push subb (bad) in fsubrs cmpsb jbe push sbb lods sbb js test subl rex.WXB test (bad) rex.RXB adc lods mov cmc scas int3 mov test cld lods mov callq (bad) sahf push ja fstl xchg rex.WRX fmul movabs fstl pop push pop mov pushfq in and out js (bad) fldcw push pop or mov js mov in sub nop sti sub or push in (bad) adc lods lods mov adc imul in rex.WRX rex.X clc (bad) retq movslq lea cmp pop leaveq imul xchg testb or stos leaveq fs jg insb outsb or mov scas cmpsb test mov retq in adc (bad) mov and jb add nop repnz cmc (bad) cmp jp test xor sub cmp jmpq (bad) stos flds jg mov xlat rex.WXB (bad) in retq jbe,pt movabs (bad) jmpq sbb xor jmpq xchg (bad) jmp rex jnp in adc movsl icebp clc add retq rex.WRX rex.RXB movslq lret add sbb sbb (bad) scas movabs sti retq scas callq mov rex.WRXB add xchg insb add fldt enterq pushq fs cmp pop lcall (bad) (bad) mov test mov hlt sbb outsb sub jns loope loope test retq pop (bad) mov movsb cltd cmp (bad) cmp mov stos movsb add retq stc movabs (bad) add movslq sbb in and lret xchg mov sahf (bad) (bad) mov (bad) (bad) or (bad) sub sub add ficoml mov mov rex.XB and loop add lods or lret sbb (bad) mov (bad) (bad) lods xor enterq test fmull rex lods adc mov iret fcompl cld and (bad) pop retq lods (bad) repnz int nop push (bad) push lods jmpq imul int3 xchg out jl or or or (bad) jnp,pt mov in std xchg outsl insb fisub mov insb (bad) cmp testl mov (bad) mov mov cmp push outsl (bad) cmp mov loop jae test push (bad) sahf cmp adc sub stos jrcxz rex.WRB cmp outsl lods jl mov popfq lods rex add or repz mov push add movabs mov jb mov imul fs rex.XB rex.WRB mov repz movabs mov jmp lods lods (bad) lret imul lock cli out (bad) jg imul lods sub xchg sub sahf repnz and xchg (bad) sub xor stos rol or (bad) or lods pop add stc (bad) lret rex.WRXB rex.WX retq sub (bad) mov jns iret or jb pushq mov subl outsl sub and rex.RB rex.WRXB scas nop enterq push lods sarl shl callq sub movabs rex.WRXB rex.XB retq mov mov xor nop (bad) and stos sub sub ss (bad) lods mov jg fwait and shlb mov js pop jo test (bad) jmp (bad) shlb add shrb mov mov mov ja mov jo (bad) rex.WR xchg mov cmp loop pop lods or adc xor gs (bad) rol rex push adc jns (bad) mov gs xor imul mov sbb pop pushq movsb int adc or fwait popfq clc push (bad) jg lods sub push test push sbb rex loop lods (bad) mov rex.WRXB outsl jns cmp movsl imull mov enterq mov in movsb (bad) and (bad) or sti je lods adc xor xchg and sbb or icebp add lods fimul (bad) xchg xor jbe rex lods retq outsb decb test imul xor loopne or stos adc jbe in sbb sbb stos pop or cmp (bad) lods pop clc rex.WRB mov mov std lods rex.RX stos cmp ja (bad) stc lods mov hsubps lods rex.RX cmp mov mov (bad) sbb rol jmp fdivrs cmp movslq (bad) fsubrl jmpq jnp push sbb (bad) outsl lods (bad) xrelease jne movsl lods test rex.B insb lods mov (bad) cld rex.RXB (bad) mov jo stos mul insl movabs rex.WB and mov rex rex.WXB pop sub in std (bad) in xchg lods or adc insl and outsb add lods mov or pop pop movslq in jne (bad) mov (bad) mov xchg orb test (bad) xor mov sbb out and lods push icebp movabs movsb movabs fstpt insb fldcw outsl leaveq rcrl pop sti cmp cltd mov lods xor ffree cli (bad) int3 stos rorb sub sbb cmp loopne fstpl or lods hlt stc cmp or sahf (bad) (bad) fdivr in mov clc adc (bad) jl lret movabs sub in icebp int3 or cwtl mov rex rex.W (bad) add fcoms (bad) imulb rex.WRXB sbb (bad) (bad) rex.WRXB scas mov adc (bad) pushq jp mov rcr and sbb sub add rex.WX sbb cmpsb or (bad) push lods or and (bad) xor mov (bad) es repnz mov out xor and adcb test cltd lods int3 lods mov (bad) lods (bad) mov cs imul out (bad) lods lret adc stc add fidiv (bad) pop and add mov ja adc fs add (bad) movabs out push add cmp (bad) (bad) sbb rex.WRX lock add add rex.XB adc lret fisttpl jp xchg pop xor scas rex.WRX rex.W stos lods push mov (bad) sbb (bad) jrcxz int3 sub rex.WR sub stc insb sub (bad) and xchg sarb cmp rcll cmp mov hlt ss push sub rex.X lock lods sbbb sub rex.WXB ss jae clc lods jbe (bad) xchg hlt mov mov xor loopne rex.RX adc shrl mov (bad) sub adc mov adcl xchg lods hlt adc lret sbb outsb es std mov divl xor pop (bad) adc stc rex.WR mov mov or insl rcll push lods jne cmp fwait retq (bad) rex.WR shrd std rex.WXB es mov lods pop mov jmpq add add mov (bad) movabs sub mov push adc adc rex.WRB xchg (bad) push pop rex.XB mov adc rex.RXB xchg outsb cmp fwait and rex.XB cli loop push (bad) xor and mov ss jmp pop callq cwtl rex.WXB push jno xchg test and mov test imul sbb fild loope lea lods fs xor stos mov lods mov lods lret (bad) retq xor mov cli jp (bad) in lods jbe pop roll (bad) mov and lods (bad) pop mov add jae outsl sub callq xchg xchg pop (bad) lahf or (bad) sub (bad) std (bad) push movabs es stos and lods clc loopne (bad) sbb cld rex.RX jle and lret rex.WXB icebp stc adc ljmp mov lahf rex.WR repz ficomp cmp (bad) cmc sti scas stc mov enterq rex.XB loop xchg and lods mov addr32 or xor add lods lea jl insb mov pop adc adc sbb fcoml push fwait imul rex.X rex.XB cld jnp mov (bad) adc movabs pop or sbb (bad) stos xchg subl js scas stc jmp addr32 or cmp (bad) std clc (bad) lods fstpt fdivr pop shrb pushq xor retq out imulb fwait xchg push lods fsubrs jl or shlb mov mov movabs (bad) rex.WRB jle jo mov jo clc (bad) pop add mov in in or mov jne mov in lods adc pushq movslq retq (bad) callq jmpq (bad) (bad) out xor jl mov cmp sarb lods xchg mov (bad) jrcxz callq sub (bad) cmp jmp lods hlt mov jp (bad) mov js sub (bad) scas jne pop pop cmp jrcxz pushfq cld in lods (bad) rex.R or jbe mov iret hlt mov scas mov mov mov sub (bad) jrcxz test xor jae out mov sahf xchg rcll fs sub rex.RXB int lods (bad) xor orl jns inc sub lods mov lods rex.XB rex.RX sub adc xchg (bad) (bad) (bad) mov mov shll lods jmpq je lods or mov leaveq sbb lret sahf or hlt stc pushq sbb scas pop sub xor in (bad) mov lods sub enterq mov movabs sbb cli pop lods pop rex.RXB or ljmp (bad) in ja pop jl lods pop mov test jg in cltd xlat mov (bad) rex.X loope insl in lahf sbb jo mov (bad) jbe test out loope fisub sub repz jns adc lods outsl (bad) movabs mov mov iret mov fnstsw pushq lods mov retq mov (bad) sbb popfq in xlat lods jle xchg (bad) sub movabs nop (bad) movabs (bad) mov push jne cmp push rex.B xchg or adc movslq cwtl cli sahf pushfq jg movabs (bad) and (bad) xchg js (bad) push adc rex.RX rex.WRX (bad) fstpl or cmpsl and mov movsb imul movsl movabs rex.WXB cmp lods adc pop lods cmp insl xor mov rex.WRXB mov jb leaveq mov jl push pop jge (bad) xchg cmp cli retq mov mov vmulss sub (bad) scas lods sub mov stos pushq pop (bad) xchg (bad) in orl andl push adc adc loope fistl (bad) jnp mov andl stc jb or (bad) movabs lods rex.WR add sbb scas outsl retq add outsb shrl rex.WRXB (bad) lods pop (bad) rex.WR jmpq addl lods adc adc lods (bad) in jnp iret out cmp movabs mov out je and in rex.WRXB gs jo xor (bad) pop (bad) lods sub rex.WXB mov inc lods leaveq and movsb repz (bad) sbb lods fildl ds test movabs lods shrl xchg stos mov (bad) mov retq repnz and pop cmc in lret lret scas lods fs cmp mov push out test ds pushfq (bad) lods xlat in pop (bad) mov mov or and xchg (bad) mov or xlat lods adc (bad) push xor lods sbb jle fnstenv sub stc mov push and lods pop xor xchg (bad) mov sub mov (bad) lods mov cmp and movsb mov sbb rclb or adc sub leaveq test mov sub jbe (bad) sub (bad) (bad) out rex.WR sbb insl mov je lods sbb js rorb cld jmpq test lret lods shlb mov add and mov cmp xor jae (bad) lods or cmp notb mov rex.WB xor cltd lret outsl jb rol movabs int3 test sub (bad) (bad) rex.W sub fiaddl mov add movabs or jne movabs sahf lods clc add mov add jno rex.R jne lret loop (bad) stc rolb addr32 add rex.WRX xchg scas push sbb add and xchg retq push pushq pop jnp imul push add mov (bad) pop stos pop mov data16 push adc retq lods and fadds (bad) pop push (bad) jrcxz movsl test rex.R nop fdivs lods adc pushfq (bad) (bad) push idivb movl xor xchg clc rex.WRXB rex.WX mov mov adc movsl jno xchg stos ja mov xor sub movabs stc lods (bad) cmp shrb adc mov and movabs scas callq (bad) in (bad) xchg repz lods (bad) rex.WR sbb fisubr cmp jg rex.W lods jl push cmp movabs (bad) callq cmpsl lods rex.WRX mov movsl add mov add retq mov faddl jne (bad) icebp movabs (bad) and retq stc (bad) cmp addr32 sub lods mov or mov jl jge add lods addl mov mov fldt xchg int3 or (bad) (bad) mov orb sub cld (bad) outsb lods loop imul cmp jo rex.WX lods adc rex.XB push mov and cmp ljmp jmp int lea hlt (bad) sbb mov xchg lods leaveq rex.WRXB (bad) (bad) fprem1 mov sbb rex.XB pushq sbb rex.XB rex.WRB add hlt movabs cmp lods mov clc rex.RX sbb fimul in mov imulb and repnz (bad) movsb jb mov (bad) cmc rcr stc mov js addr32 rex.WRB add sbb jl (bad) insl nop adc test ficom adc xor rcr add adc testb imul stc sti subb (bad) jne sbb int in fdivr rex sbb lods rex.B fidiv lret pop sti sub add mov adc xor rex.RB (bad) stos adc (bad) mov fdecstp scas jb clc stos test (bad) (bad) (bad) retq movabs pop fs movabs lods adc (bad) ljmp sbb and xchg jl xchg fadds ja mov cmp mov rex.RXB xchg std stos push lret rex.RX loop lods int3 cmp mov push lods (bad) sbbl and lods (bad) (bad) adc cmp (bad) cmp rex.WXB (bad) adc mov mov pop lods add fcmovnb lods ds ss cwtl lods stc movabs and jo (bad) fisttpll pop xor mov adc in retq sti enterq lods popfq sbb (bad) lods test sbbb pop jae jle test jp or xor repz (bad) sbb callq (bad) mov movabs lods stos adc jnp cmp jno sub in xchg mov jmpq rol lods icebp mov pop stos rex.WXB push (bad) int3 in jb pop lods adc (bad) (bad) lods shll (bad) rex.WB int rex.XB cld cs (bad) clc sbb xor pinsrw rex.WRX nop cs adc cmp adc outsb enterq repnz or jae xchg stos add cmpsl lret jmpq fsubrp in enterq mov icebp (bad) pop mov (bad) lods mov xor lods outsb xlat rex.WRB adc movsb lods rex.R jl lods xor mov rex.WRB rep adc (bad) idiv push movsb rclb lods adc movabs cmp sahf jmpq pop andb shrl xor sarl subb addr32 push jno pop mov or lods sub movsb lods lahf sub (bad) and (bad) lods imul loopne out (bad) lods (bad) lea (bad) leaveq (bad) mov out shrb insb cmp (bad) sti cli shrl movsl sub xor test push or sub xchg rex lods (bad) scas lret (bad) sbb or lods mov pop jne cli and stc (bad) lods xchg (bad) jno push (bad) test mov icebp addl sbb movsl pop out imul rex.WR mov jmpq lods rcr repnz or or add and rex.X ffree in cs movabs sbb rex.WXB sub sub xor (bad) push (bad) imul (bad) cmpsl xchg movsl in (bad) or shll sar rex.WB movsb stos clc insl lods sahf xchg sub lret ja (bad) in (bad) mov mov (bad) xor mov faddl leaveq xchg scas (bad) outsl or mov lods xor pushq jmp es cmp lods movsl hlt add lret scas sbb mov xchg push pop scas mov (bad) lods retq in or xchg add lods jne (bad) cmp cs lods and xor imul insl out movabs (bad) cmp (bad) test mov insb mov lods (bad) (bad) int xchg stc mov movabs add (bad) add ficoml in mov (bad) pop jo scas mov rex.WB sbb cld (bad) cltd popfq nop add lods jmp adc jl jo add pushq mov outsl mov ror addl scas (bad) hlt fbld out test pop (bad) (bad) lods xor sub xor test rex.WRX (bad) in cwtl rex.R (bad) mov jmpq mov fwait cld cmp jae ds lods out push fisttpll sbb mov rex jg sub cmc mov adc test fstl lods mov sbb (bad) lods rex.W xchg scas test (bad) (bad) mov cmp cmc cld fbld mov rex.WR ja adc addr32 mov sahf (bad) cmp add mov or shrq add mov pushq add (bad) lods cmpsl mov mov cmp in and scas fcomi jnp out insl push mov cwtl mov lea mov gs retq mov add test sub and and shlb push in sbb (bad) lret int or lods pop int3 mov rex.R (bad) (bad) jb adcl jbe mov enterq in sub and xor push fldcw lods in or enterq clc jo fnstenv mov cmp (bad) (bad) lods xor ds scas jne cmp lods mov pushfq mov lods test rex.WRXB xor scas lods rex.X adc rex.WRX leaveq lods test rex.WRXB mov pop (bad) (bad) rcrl adc rex.WXB mov clc push lods rex.W jns fidivl rex.WR rex.WXB insb jne sub rex loop sbb fnop lea fistpl negl (bad) xchg clc std (bad) pop or in int3 adc mov fisubrl sbb pop insb push rex.RB (bad) mov xchg rex.R lock xor in sub jl sahf (bad) push (bad) lods mov pop (bad) lods rex.RB movb jmp jno jns movsb rex.WRX push and xor mov jno movl shrb sub (bad) in (bad) leaveq xor rolb mov sbb adc cmp (bad) idivl (bad) addr32 or add in sahf popfq test pop insb rex.RXB xor jns sti mov loope in mov cmc fdivp mov cli rex.X sti in pop add mov icebp mov xor jge or push int add retq rex.WX callq rex.WXB rex.RX mov mov xchg (bad) mov xor jo adc in insl in rex.RX movabs stos jg (bad) (bad) xor jmp adc (bad) lahf (bad) cmc test pushq insb xlat and lods xchg addr32 jno and or (bad) lods sbb mov test jle retq cltd out mov mov sub sub pop lods mov movabs movsl sbb rex.WB rex.B js sbb xchg jge stos callq rcrl (bad) jrcxz cltd or rex.WX rex.XB movabs mov jrcxz xchg lods and mov je loope gs lret mov cmp pop push rex.WX lods (bad) movslq rex.XB jl pop lods mov data16 (bad) cmp cmc out xchg movsl sub loopne cli stos retq push repz jmp out mov (bad) cld lods xchg (bad) xchg pop add add sahf sysenter iret rex.RX orps jns cli push adc and mov rex.RB adc in stos mov int in (bad) xor lods (bad) sbb outsb repz ljmp or movl or je pushq and lods add rclb jl mov fadds mov clc (bad) cltd lods repnz mov or lods and push int pop mov rex.WRXB pop in mov shrd (bad) adc mov sub movabs lods cmp xchg mov loope sahf add rex.WX sbbb and movsl rex.WRB test mov in in clc mov loopne rex.WXB mov push lods xchg cmpsb cmp mov pop (bad) pop gs insb add sbb push lods cli xlat mov rex.WRX add xor add enterq stos sahf fstl jae clc or xchg xchg insl and mov pop rex.XB push xor lods pop loopne test fxch and add rex cmpsl out popfq clc jns rex.WRB mov pop (bad) lods (bad) scas (bad) jge stc rex.W retq (bad) cmp jo lods fstpl jp ss lods push fimul movabs add push in mov mov mov rex.RB stos scas data16 movd and add or lock outsl lods xchg icebp mov lods adc (bad) hlt movsb rex.RB popfq jne (bad) adc rex.R stos mov sub test jl out jnp es jle ja (bad) clc push lods cmp mov rex.R movabs and fs lods (bad) int add rorl shrb je rex.WX cmc lods rex.WR jno xor outsb stos movsb or (bad) mov imul xchg mov std and leaveq mov in rex cld lods (bad) jle (bad) fistpl mov cli sti cmpl lret push sub jno push ds test int (bad) and jl cmc (bad) loope stos (bad) int callq fldenv rex.RXB es rex.W movsb and xor pop push lods xor cmp iret xlat add lods int3 and (bad) mov or fildll repz (bad) sub add shll sahf or lods out adc jge mov gs fcmovb fimul subb push sub lock sub (bad) lods (bad) add mov jne rex.RB jle fdivrp (bad) cmpsb lods addb rex.XB add movabs cs xchg (bad) insb push rol lods cmc mov lock je and mov cmpsl lea (bad) xor sub (bad) in rex.WRX pop lods rex.WRB scas (bad) out loop lods adc sbb lods rex.R (bad) sub rex.WX xor decl loopne mov fiadd lods (bad) xor mulb movabs rex.WXB stos mov gs sub (bad) add mov adc cmp push (bad) mov mov sub lods jnp jmp adc push repz sti retq fstl ss cs (bad) in mov jne stos jo push jmpq loope sbb sub sbb sub and stos xor jno sbb rex.R rex.WRB lea insb (bad) (bad) fimull loop cld lret lret sarl movabs rcrl enterq testb (bad) (bad) in movabs cmp test jle rex.RXB es mov es xor fst rex.X xor jne adc enterq movabs sub mov lods mov or callq xor rex.WRB lods (bad) sub loopne setp lods fisubr cwtl mov rex.R jle nop (bad) sti movslq sub int lods xchg rclb push repz lods mov scas mov (bad) or lods mov jg icebp movabs jl (bad) mov sbb (bad) xchg (bad) shrl jle adc outsl lods push jrcxz jo jne fisubrl lea jae push rex.X (bad) jb rex.RX pushfq lods pushq fnstenv sbb callq shrl lock rex.WRB or mov test in cmc retq mov lods sbb adc (bad) fadds scas in in mov pop mov cs xchg stc cmc jrcxz pushq (bad) cmpl cmp lods mov pop pop (bad) lahf jns lods (bad) gs out (bad) or mov (bad) cmp or sbb cli in or mov lods fistl (bad) (bad) lods stos in push loopne hlt mov pop sub sub insl movabs pop pop mov (bad) jo sub test cmp (bad) (bad) lock imul push rex.WX sbb push (bad) sub (bad) rex.WRXB lods pushq pop mov insl movabs mov pop mov popfq repz int3 fldt sbb xchg imul in mov xorl rcrl pop adc lock (bad) imul (bad) pop jmpq rex.X faddp add lods fsubrs movabs rex.RB add gs hlt mov outsl rcl sub iret mov sub mov lods insb sahf push roll lods jno or fs mov mov (bad) mov scas retq (bad) mov shll xor or or test mov (bad) cli cmc in shll rex.WRX stos mov or (bad) mov leaveq stos mov repnz (bad) lock jae addr32 (bad) jb (bad) test mov cmpsl pop movsb sub js mov (bad) push (bad) lahf test lods sub xor lods stc out movsl jae xor pop jl push out lods loopne mov mov cld jge lret out (bad) rex.WX leaveq rex.X (bad) xchg (bad) push in jmp cmp rcrb (bad) cld or movabs xor mov fisubl mov adc mov (bad) (bad) movsl loopne test xor (bad) (bad) sbb lods mov pushq scas fcom (bad) cwtl mov jne jl fs sub xchg lods cmp cli pushq imul test add jg jns test cmp fwait callq out or push movabs sub push xor pop lods cld jb repz (bad) retq subl insl add fs insb scas mov or jo data16 pop push mov sbb jne sbb movabs jo (bad) xor (bad) shll xor (bad) in rex.WRB ss sbb iret (bad) sub pop lods (bad) jg cli test stos int3 mov mov sbb scas push faddl rolb push outsl lods sub jle lods mov pop out pop add lock xor sbb xchg mov sub lods adc add rex rex.WB jno mov (bad) push rex.XB xor decb loope clc (bad) (bad) in rex.RB xchg stos mov mov test (bad) in add rex.RXB mov (bad) mov insl sarl stc or mov es (bad) sub adc rex.WRX rex.B repnz push (bad) fdivr leaveq cmp lods jbe movabs (bad) or lods (bad) int3 mov retq rex.XB scas rcrl in xchg jmpq pushfq repnz je cmp mov mov test (bad) int xchg or nop (bad) imul mull lods rex.R insl jns rex rex.WRXB cld mov add lods add xor mov in retq adc sub stos movabs out in clc adc lret (bad) (bad) xchg popfq fdivrp movslq xor adc pop scas sbb add sub (bad) jbe movabs adc test movabs hlt std mov enterq rex.WR cmpsl cmc test rex.WB rex.WB imull sub jo (bad) stos movabs cmpsb fs int3 popfq subl lods sbbl jae test leaveq ficomp and rex.WRXB rex.XB jbe lods xchg out rex.W xchg xchg (bad) and or xor rex.WXB jb rex.X xchg fsubl stos or ss rex.WR lret lods movabs fwait mov out xchg in insl fucom fisubr cmp sbb and mov (bad) jmpq lock and movsl stos movabs incl pop sub fcmovu push fs stos jg imul mov push sub cld sub lods (bad) sar rex.RXB hlt lods movabs rex.WR sbb in adc jle lods (bad) lock xor xchg cmp stos loopne test jb add scas lret mov xor enterq pushq or jbe push lock out rex.R rex.XB repz fnstcw jno int xchg sub add (bad) pop retq sarl adc and pop push cmc lods loop sub int3 xor lods sbb rex.WXB mov stos pop mov testb ds add (bad) cld rex.B (bad) and imul mov test cld or lea sarb xor xor and mov test test in (bad) jo ljmp add add (bad) sahf lods insl sbb nop jle lods test (bad) fwait outsl lods out cs sti movabs movslq adc lods rex.XB scas push sub add sbb cmp fwait loope pushq lods rex.WX gs enterq push mov jne lods add imul rex.WXB xor pop test ror mov mov rex.WX rcrb adc je mov rcl in adc lea lret shrl lods lock sbb test lods (bad) xchg pop ja or sub add mov add lods mov (bad) retq cltd lods fwait pushq (bad) (bad) (bad) rex (bad) (bad) add mov enterq callq pop cmp jrcxz sahf rex rex.RB jmp insl ja js (bad) shr sbb sub xor rex.WRB loopne xor sbb lods es mov sub mov pop mov (bad) (bad) lods cmp fisttp mov (bad) pop retq lods stos mov lret jge mov jae lods mov test lods lods cmpb sbb es mov nop pop xor rex.WRXB (bad) iret mov (bad) repnz adc pushq xlat jae and and lods mov addr32 cli and mov decl in in xchg jle or lods sbb lahf or (bad) lods fiaddl (bad) decl shrl adc stc insb rex.B mov movabs sbb cmp and mov (bad) int test movabs mov pushq (bad) cmp cmpsb mov outsl pop rorb rex.XB movsl jle rex.WR (bad) push movabs (bad) cld rex rex.WX pop xchg mov (bad) xor rex.WR lods fs and (bad) (bad) adc lods movslq and rex.RXB pushq sbb jae lods jmpq int cld negb mov and fisttpll and adc outsb (bad) xchg sbb (bad) (bad) cmpsl movsb push cmpsl outsl and mov pop fstps push (bad) andl in cmp (bad) (bad) and lods xor outsb je mov mov mov jg lods or out fsubrl (bad) lods jmpq (bad) sbb scas movabs mov lods retq (bad) mov mov mov mov push (bad) jns mov addr32 retq lods and movabs jno fwait adc xchg push gs (bad) jne push shrl rex.XB hlt xchg scas scas mov lea gs icebp mov mov movabs pushq stos rcl addr32 xchg xchg mov scas lods fcoms (bad) lods xor adc fildll cmp mov rcl push cmpsl adc cld pushq enterq in xchg loop negl fcomps sub sub rcll outsl scas jns sti negb pushq imul addr32 (bad) rex.WRX xor lods mov mov rex.WRXB rep mov test lods jge jo sub icebp pop movsb popfq jbe leaveq rex.B push push mov sti or rex.WXB (bad) pop lods sbb fildll fldcw lods repnz nop (bad) in jne rex.B repnz lods sbb mov andl lahf movabs retq out sub sub movsl loopne lods add jp pushfq mov (bad) (bad) rex.RB or in jb adc lods sbb sarl retq push lods pushq mov movabs push sub sub movabs shll incl rex.RX push and lods and mov int imul or in mov (bad) (bad) movabs test je cmp pop xchg (bad) xor sub jge out ja rex.RX addr32 mov movslq repnz in clc mov xchg rcl or int xor mov add rcr jg scas loope push push xchg xchg (bad) sbb push sub xchg lods in push test or sub (bad) push (bad) (bad) stos nop es cs cmpsl hlt in (bad) jne mov std sbb mov add imul mov rex.R (bad) mov hlt vshufps sbb rcrl pop xlat movslq int3 cmpsl sub xchg push sbb pushq loop int (bad) jns sbb (bad) scas mov jmp (bad) rex.R sti in outsb sbb out or or rex.RB lods push cmpsl rcrb xor xchg mov jb (bad) (bad) lods sti std add int3 cmc or (bad) (bad) orl mov test jnp fidivr sub (bad) jl cld jbe ja notb in out sti mov pop mov mov mov enterq stos movabs rex.RX lahf and outsb (bad) callq xchg mov xchg xor retq or mov retq in adc movabs mov cmp stos (bad) popfq add (bad) sahf sub movabs js fistpl xchg and in (bad) pop pop sub fisttp xchg pushq sbb lods vrsqrtss lods in mov movabs sti (bad) (bad) xor shrb sub (bad) lods roll and sbb ror add imul push movabs loopne rex.XB lahf mov std (bad) pushq fsubrl cmp xor (bad) insb je imull pop hlt (bad) xchg pop mov mov mov je popq xor hlt insl iret lods cmpsb rex.WRX rex.WB mov lods jp add sub sbb out jge sub rex pop (bad) scas rex.WXB rex.R (bad) hlt lods (bad) enterq movsb cmp cmp lods test std lods lret and jmpq (bad) test int3 movabs lods movabs stc sub in outsl stos iret fcomip (bad) cmp xor xor stos scas push mov xor (bad) enterq fs sahf jno loop sahf callq sub lret sbb lods cmpsl test cmc test cwtl and pop loop or stos lock add sar lods rex.WRB pop loope jb scas xor (bad) push insb (bad) flds out lea rex.WXB add loopne (bad) insl lret in mov loope imul popfq mov mov or cmc pop cs (bad) (bad) movabs rex.WRB and mov ja lods push mov pop or sbb (bad) rcll (bad) in scas rex.RXB fwait add movabs (bad) pop test rex.W rex.RXB enterq adc fsts cld callq lods and sbb stos xor cmp test pop mov (bad) in rex.WRXB jbe and or mov lods clc mov add sub mov int3 insl and (bad) lret sub xchg push sbb lods test (bad) sbb cli lock rex.WB rorl jrcxz je jb and fdivs (bad) lret (bad) lods adc repz and add cmpsl (bad) and xchg sub jnp loopne rex.R cmpsb (bad) movsb mov lods repz scas addr32 cmpsl (bad) or lahf (bad) lods mov xor jmpq popfq push movsb mov retq mov (bad) pop and fiaddl lods stos and in and gs fisttpl rex.WX mov stos rex.WR sub sbb pushfq mov lods (bad) insb sub outsb pop sbb cwtl mov push cli movabs push pop adc (bad) lods mov cmc push fsubp xor push fs mov push icebp sbb sbb cmp mov sub insl lods data16 jmpq ja add lods cmp jl xor subl rorl rex.B pushq movabs push push in jns (bad) lods pop jae (bad) out jno (bad) imul pop cld xchg insb rex.X add lret std (bad) shll fisttpll cmp (bad) mov (bad) ja mov sbb mov cld cs (bad) stos adc rex.WRX je xor mov sbb movabs (bad) and cmp and adc or and js mov sub notl and (bad) xchg cmp scas xchg add jno scas rex.WR mov sub lods (bad) xor pop xor (bad) adc mov roll rex.RXB cmpsl add xchg lods nop in (bad) mov (bad) insl add mov pushq push cmp and sbb repnz mov adc xor rex.R push stos xchg cld sbb std lods cli sarl rex.B andl add cmp lock (bad) and add imul jne icebp pop (bad) rex.XB out mov pushfq jrcxz sub sarl (bad) fadd adc iret lods pop jmp mov addl cmp sub sbb sbb sub (bad) jns add mov clc pop stos ljmp sbb mov cwtl sub (bad) lods mov adc and rex.WXB xor rex.W sub rex.R orl loopne pop jb rex.WR adc in (bad) rcl rex.WRB or movl (bad) fwait pop mov mov jb or xchg (bad) (bad) adc pop (bad) stos xchg add ficompl sub xor cmpsb jnp andl sub cmp in fs es adc lods rex.W mov rcll lods repnz cmp push xchg lods rolb adc iret add or or xchg xchg (bad) fstps js int3 sub movabs clc cli lods loop adc mov jmpq test fcomps lods movabs rex.B cmpb nop fisubrl mov xor rex.RB jns (bad) xchg callq xor scas mov test movabs out (bad) mov cmp cmp addr32 mov rex.WB (bad) out jg test xor mov (bad) (bad) cmc mov xchg ljmp mov sub sub outsb enterq xorl movabs mov rex.XB movabs test js (bad) fs in rex.WRX rolb jl mov pushq je in or (bad) stos scas in add (bad) stc mov mov fbstp cld loopne lahf mov xchg int (bad) mov cmpsb shlb and repnz add stos pushfq (bad) rex.WRXB shrb cmc imul sbb adc pushq cld movsb (bad) cmp enterq adc repnz mov (bad) stos mov movabs std nop (bad) pushfq lods rex.RX movsb xchg stos jrcxz jne je out (bad) sub stc adc jmpq jmpq outsl (bad) lods cmp cmpsl scas rex.R lock movslq stos pop cmp js (bad) (bad) rorl lret adc leaveq lea sub mov (bad) imul lods repz in cld and addps movsb sbb loopne in repz adc lods xor int and in (bad) scas add loopl imul jl cmp hlt lods jrcxz pop js shlb (bad) mov rex.WRXB add psubusw sub fisubrl divb rex.B pushq (bad) in jo pop or lods and (bad) xchg mov adc adc imul jp cmp pushfq sub (bad) mov jno mov cmpsb stos retq lea jne fcmovbe rcll lods pop movabs in rex.WRX sub (bad) mov pop jrcxz (bad) fistpll mov lods add (bad) cmp xor (bad) lods (bad) scas jle cs lods or dec loopne pop adc in js rex.RX adc or (bad) rex.RB and stos rex.RXB (bad) jrcxz (bad) xchg loopne ds rex.B mov pop ficomp (bad) lods mov adcl pop (bad) sbb rex.RB stos imul xrelease (bad) lods mov in (bad) pop xchg cmp lods mov (bad) in xchg and lods (bad) ficoml in push jae mov xlat leavew sub mov mov int3 hlt psubq int pop rex.WR push rol (bad) xchg lods rex.X mov and cmp pushq cld pop add rorb mov push nop mov test pushq sub cltd or (bad) lods callq rex.RX lods mov sbb add movabs (bad) movabs xchg mov (bad) leaveq push scas insb loopne xchg cli pop (bad) insl scas shrb rex.WB lods mov (bad) jbe lods add insb repnz sahf or mov cwtl lret iret ja fdivr scas outsb outsl stc adc (bad) mov sbb je and in push jo lahf stos push addr32 (bad) lods xor push (bad) int3 mov xor or insb loop sub and repz rex.WX movslq sub mov icebp in mov mov xor xchg jrcxz mov mov scas add std outsb loop lods retq mov push push lods jb rex.RX (bad) outsl xchg lret sub (bad) cmp movabs jbe (bad) pop add lods mov (bad) add (bad) clc xchg ja imul lret test add cmp fs (bad) loop rex.WXB cmp (bad) rex.RX out fildl and vfnmsubpd rex.XB sahf (bad) rex.X rex.WB outsb rex.RX lods es scas mov and cld pop mov (bad) mov sar test lods hlt sti and andb out lods xchg lock je addl lods rex.X in lods pop rex.RXB cmp loopne and lods sbb pushq or cli rex.WRX jns mov jrcxz retq fdivrl xchg mulb fildll (bad) lods insl rex.WR mov push hlt mov shrl rex.RX push sarb add xor (bad) sub or sub (bad) scas subb frstor lods movsl rex.XB (bad) jb or leaveq add mov sbb (bad) cltd xchg out mov rex.WR push lods rex.W movslq rex.XB rex.RB jae notb imul (bad) (bad) lods enterq outsl (bad) out xchg je movslq scas mov (bad) pushfq adc sahf push int3 (bad) lods (bad) (bad) pop (bad) retq out rex.RXB lods cmp stos jbe xchg mov or and cmpsb add (bad) cs notb (bad) in mov jrcxz push mov pop or cmp sti lods push rex.X xchg jp mov or lahf jge pushfq rex.X (bad) push xor or lods stos rex.WR je (bad) lods in jb jle mov dec xor pushfq test (bad) sub push insl rex.WRXB clc adc leaveq cmp lods data16 (bad) cmp test (bad) xor add rex.R mov mov lods out stos xchg jmpq sub pop xlat mov fnsave pushq adcl rex (bad) add push xor push (bad) in (bad) rex.WB in or push add and fiadd or sub test adcb add fs loopne js (bad) fcos int idivl jl repnz decb (bad) lods out (bad) fcomi sarl sub jne stc lods rex.W loop jrcxz hlt or insl xor mov lods jmp scas push out (bad) rex.WB pop rex.RB jns repnz nop jrcxz sub scas pop pushq pop jae movslq fwait (bad) lods movsl rex.RB jle fcoml icebp push ss cs es add mov cmp js mov (bad) (bad) push movabs stc fs cmpl push jmpq mov lods or jle sbb sbb out movslq lods and callq mov rex.WXB jo (bad) movabs mov cmp rcr scas stos imul sbb in rex.WRXB stos rclb or in movsb push enterq rex.WRB int lods fnstsw jp imul (bad) notl sub jnp or (bad) clc and mov ja mov notb retq movsb cwtl addr32 jmpq lods cmp pop and xchg stos movslq (bad) mov (bad) xor mov jg and (bad) lock (bad) xchg pop sub mov or scas push es scas int (bad) push (bad) mov movsb mov insb pop rcll sbb add or add callq movsb (bad) in outsw jns xchg movslq sub pop (bad) mov jno (bad) fsub rolb data16 sti stos mov pop ja in lock outsb lods pushq xor cmp frstor push xchg lock lods cs imul adc mov cmp jnp pop pop pop movabs cmp rolb xchg add outsb lods gs cltd sbb es sub mov mov add or sub repz test orl cmp lods (bad) (bad) (bad) cmp sbb mov outsl adc imul sarb leaveq mov pop (bad) rex.WXB rex.W xor lods movslq cmp sahf lret pushq leaveq xchg in lods xchg sti lret repnz insl rex.WB loop mov mov pop lods sbb pop adc cmpsb lret callq rex.RXB xchg test push (bad) enterq (bad) rex.WB mov jns adc in loopne sbb adc (bad) cmp xor mov push lods sub out out jl stos xor jmp (bad) mov mov and add mov push lods rex.WX movslq add sbb mov mov or push lahf fsub (bad) lods divl (bad) insb mov rex.RB lock imul mov stos (bad) lods jge or (bad) xor sbb nop mov retq imul in sti rex.WX sub jp sub mov push (bad) movabs push scas je xor (bad) out std (bad) sub (bad) mov mov popfq and test mov sub movsb rex.W xor (bad) insl adc je add or insb jno clc (bad) mov rex.XB cmp mov and out repnz shll cmp nop (bad) xor imul es xchg jae pushfq and fiaddl repz mov fisubr cmp cmp adc movabs (bad) xor sar rex.R movslq cmpsl retq popfq mov lock shrl jle lods sbb pop fiaddl imul callq movabs out es fwait leaveq js lods (bad) push out movabs repnz repz and out rex sti push jge (bad) mov cmp adc and mov lods pop (bad) jno test mov jle lret (bad) in (bad) mov cmpsl (bad) jo movsl adc in mov insl mov sub js mov (bad) rex (bad) lods pop (bad) adc lods add sub jns rcrb (bad) outsl movabs mov enterq (bad) (bad) ds lods pop clc (bad) sbb js imul sub xchg and mov retw es and stc jp test cmp cld (bad) push in scas mov cli scas (bad) xchg gs xor in mov fsubrl or addr32 pushq lods popfq icebp mov jne jp lods movabs movabs cmpsl adc pop (bad) (bad) jo rex.RX cmp lods and in or andb jae lods rorb (bad) out or and mov lods (bad) rol push pop jrcxz lods clc subl mov movabs (bad) scas xor and sub outsb lods sbb push adc (bad) bswap xchg int3 xor cmpsb stos (bad) mov outsb or jnp addr32 es stos sbb lods push outsl lods or jle and cmp test stos cmp fistpl or in cmp cmp lods iret sahf in mov sbb sub rol mov movabs outsb mov int mov (bad) push adc rex.RB add (bad) gs cmpsl loope jno mov xchg shl rex.WX or sub adc xor test push push pop (bad) sub pop stos (bad) rex.R icebp cmp iret xor test adc or fs sahf lods ja jne and jmp (bad) rex.WX sbb and sub cmp jmpq mov lods pushq mov sub jno (bad) lods adc ss (bad) rex.B cmc jl sub scas out rex.WRXB (bad) movslq sub or sub movabs mov roll popfq xor lods ss mov xor lea jae stos lcall (bad) mov xor (bad) jl movabs pushfq xor rex.X xor rex.R rex.XB pop stos lods cmp mov jmp sub push rex.RX lods mov icebp xlat mov (bad) fsubrl cmp lods (bad) rex.WB rex.WRX hlt stos jo (bad) mov cmp mov (bad) loope lods fucom push repz sub mov mov scas fmul xor sub add scas rex.WXB cmc pop sbb mov addr32 pop retq mov rex.RB stos lods stc insb mov or (bad) xorq mov (bad) in and scas cmp pop in (bad) xlat mov adc sub xchg scas movslq imul lods roll adc or adc cmpsb mov fwait jp movslq mov sahf (bad) ficompl in and cwtl iret in lods (bad) mov (bad) mov ss addl and lods pop mov xor add lods sub rex.WRXB (bad) (bad) (bad) addr32 lods imul (bad) in in fimul sub imul sbb loop lret mov vpsrld scas pop repnz test xchg rex.RXB subl rol retq xchg and (bad) lods xor or scas je jae sbb mov scas mov mov cmp (bad) or xchg (bad) movsl lods xchg out movabs sbb idivl lods jb jl (bad) hlt icebp dec push (bad) movabs in (bad) test (bad) sbb pop mov cs mov (bad) (bad) sub cli popfq mov and rex.XB fwait rex (bad) cs lods fsubrl movsb (bad) jno sub sbb lods push (bad) pop (bad) rex.WB iret fsubs rex.RX add lods or xor in pushq jle movabs int3 gs sar lods out rex.R rex.WXB (bad) mov lods adc xchg (bad) jmp test mov cmp test cmpsl rex.X rex.XB sub sub andl sbb mov jo rcll or add fwait callq stos mov cmp mov pop xchg movsb mov movslq lods int out leaveq xchg lods cltd pop icebp mov and xor rcrb scas movsb (bad) xchg adc xlat xchg cld mov retq rcll (bad) jb sbb (bad) or sub stos mov push rex.RXB xchg lods (bad) mov rex.WB fcomp mov pop sub (bad) (bad) stos lahf sub movabs lock lods cmp xor xor (bad) (bad) lods (bad) test mov xor or lods sbbl cmc fildl (bad) rex.RB push insb jle shll imulb out add sub (bad) push jnp data16 (bad) or push lods lret icebp nop popfq push mov mov mov lods fsubs push mov imul stos insl mov lods int3 test icebp rex.WR (bad) xor sbb sub stc imul roll push and and out add rex.WX pop test lods movabs mov lods mov and jns lods mov retq je movsl pop mov (bad) rex.B xchg int (bad) pop adc lods (bad) jmpq push or jne lods retq mov (bad) (bad) sbb int3 pop movabs jp mov or (bad) jle in rorl cmp add lods (bad) mov mov xor add out mov movsb shlb mov mov cld (bad) adc lret mov (bad) retq (bad) lods (bad) xchg (bad) leaveq cmpsl pop (bad) callq lret lods (bad) xor in movabs mov mov sub fstpl push imul retq mov test cmp jns in rclb vunpcklps rex scas mov (bad) cs out cmpl outsl movsb push (bad) movabs (bad) jmpq test stos and rex.WRB and pop cld out (bad) mov cmpsl stos mov (bad) (bad) leaveq sbb adc xorl movabs pushq cs xor sub and cli sub decw pop setle movsb lret outsl sub scas (bad) rex.RX rex.W mov or xchg in push mov mov add jns sub mov lods fidivr adc sub mov lahf (bad) mov lods (bad) mov lret shrl sbb cmp lock in add lea rex.WB in rep out rex (bad) cmp stos rex.WXB sti sbb and lods test jnp movabs push lahf jae or pop lods int3 and jne (bad) xchg hlt clc (bad) (bad) mov pop movsb scas mov lods jns (bad) push (bad) mov xchg (bad) and push in movsb outsb ucomiss adc cmpsl push sub lods ja in push sbb shrl sub fstpt mov lods (bad) push (bad) fildll xlat push lods imul gs movsl sbbl (bad) jle rex.WR (bad) xor jl cli (bad) leaveq movabs jp fdivl leaveq (bad) insl adc add (bad) fsubrl lret (bad) pushfq add movabs add stc (bad) in (bad) add (bad) rol add rex.WR mov mov xor sbbb (bad) addl (bad) add jle jp sub rex.W and pop or hlt mov rcrl rcrb lret sub mov xchg pop mov add mov lea retq cmp mov xchg (bad) data16 stc xorb lods cs insb xchg push mov mov cmp ss rex.WX fadd push fcmovb cmpl or pop int3 sbbb stc mov fwait lods jl sbb jbe mov cld mov xor add adc jae (bad) fcompl rex.RXB stos movabs sbb lods cld lock out pop mov stc repnz scas (bad) xchg add mov in int3 mov scas mov rex.WR lods in imulb scas mov (bad) mov lods int movabs pop repnz pushfq lahf cmc add lods insb (bad) rex.X mov repz (bad) (bad) jo cwtl roll mov jae movabs cmp retq mov imul push fildl movabs or xchg lods fs adc lods adc je rex.RX shrb and loop xor adc or in lods rorl lret add nop rolb push lods or decl or out retq mov out lea xchg repnz lods mov push rex.W int rex.WB insl roll out jae shrd popfq fwait stc imul sbb psubq jle or loope sub jns mov lods js in xchg lods sbb (bad) (bad) lods push xor jne xor movsl and pop rorl xchg mov pushq or cli sbb stos xchg xchg int3 test adc and sti nop callq (bad) mov sub cmp stos add cli out xor callq sbb mov movabs cmp jle movabs rex.RB lods and (bad) cli rex.X (bad) or (bad) (bad) (bad) insl test cmpsl adc mov fldt retq test cltd sub enterq lods or sahf mov xor out cmc add pop (bad) lods icebp cmpsb (bad) mov sbb (bad) insl pushq fnstcw adcb test loopne mov pushq cmpsl lods callq rex.WXB movabs rex.RX cli xchg xchg push and lods mov lret vaddsd sub mov pop and test out xor sub loope jle cmp mov (bad) lods sbb jno sub push insb ja lods movsl (bad) mov sub pop sbb sub test shll lods add mov (bad) movabs push retq cmp lods jnp jl shrl mov scas mov mov lea cld and lods jge mov in out sarl jns scas loop (bad) rex.RX adc sti mov (bad) cli or jg movsb insb jns sahf movabs xchg rex.WX lods adc xor lods lock (bad) jo test iret movslq adc gs mov mov lods outsb cmc clc pop (bad) mov lods sub mov jns lods adc rex.WR cs callq enterq imul cmp or popfq outsl or (bad) rex.W fistp cmp lods cltd xchg rex.WR insl test mov fistp lods movabs insl mov jbe mov fnstenv mov test outsl mov shrl out scas sub xlat cmp pop xchg add push lods rex.WRX (bad) movsb pop rex.XB rex.WRXB loope sbb and xchg lods nop iret adc lods cmpsb sbb xchg int and cmp xchg and rex.RB (bad) sbb sbb lods pop (bad) repz lahf jb insb or movsb shlb lods jg rol add popfq (bad) lods mov test enterq sbb and (bad) adc lods movabs lods sbb retq andb movabs addb mov (bad) (bad) pop cld rex.WR fisttpll push cmp sub (bad) lods sbb (bad) jbe rcrl testb cmp add add mov adc (bad) je sub fstps popfq out (bad) add (bad) lods sub stos lea sbb jge movsb jl in ja pop cmp pop insb fs mov pushq mov mov push paddusw (bad) push lahf out or scas clc int3 xor sbb sbb movabs cmp jmpq (bad) pop xor rex sub (bad) sub (bad) or (bad) sti (bad) ja (bad) rorb movabs pop (bad) lods loopne mov mov stos iret scas cs mov mov lods fistpll cld sub movl rex.WRXB mov outsb iret ja lods out xchg fnsave cwtl pop stos mov xchg fistl movabs or scas loope (bad) cld cwtl sbb rex.W jne rex.WRXB movabs stos sahf test nop lods insb cwtl (bad) mov stc enterq xor rex.XB xor imul lods in hlt mov (bad) shll cmc adc lods repnz mov sub push pop (bad) scas sbb out xor mov sbb test std jg hlt mov mov and rex.WB (bad) lahf retq mov rex.WRX xor adc (bad) jmp mov popfq sub outsb lods sbb (bad) popq fmull mov mov pop addl cmp jb rex xlat leaveq pop pop pop (bad) lods push addr32 sbb mov mov movsb jmp mov (bad) js pop and insb cmp outsb lods retq (bad) sub jge test rex.RXB or pop data16 test js subl jmpq in stos sub xor lods jge movsb (bad) (bad) sbb fdiv subl sub andb xchg adc sub lret mov movabs js mov pop imul cld cmp cs push cli push lods or (bad) sahf sbb leaveq jg mov es mov xchg fwait vmovhps and sub (bad) hlt and and add nop data16 lret lods pushq mov pushq (bad) and rex.X pop enterq mov push adc cmp or cld mov repz mov add add (bad) lods or fdivrs sbb (bad) cmc (bad) fdivrl ds stos retq pop cmpsl movsb mov adc lret cmp mov out std loopne lods (bad) xor (bad) push lods js xor scas nop pop rex.WRB pop or rex.RB jg (bad) sbb lods lock imul adc add or xor insb pop js fwait in (bad) jns shll movd scas or movabs rcll (bad) sbb add cmpsl fdivs (bad) or sub add lahf pop out out and jg mov addl lods rex.X sub mov push add lods data16 (bad) lods stos and add enterq mov rex.RB (bad) mov adc in fimull rex.X cmp add sub jrcxz insl lods lret mov out jno lret mov and (bad) lods imul (bad) adc xor scas xor cwtl cmpl cmpsb out add lods and sub (bad) pop mov or ja jb mov add push outsl cltd retq test adc popfq (bad) lock icebp jns rex.WB roll ja fisubl jo mov movsb stos rcrb mov jrcxz lods cltd icebp cmp (bad) scas mov (bad) jne in in (bad) in mov (bad) (bad) sub or sub iret shrl (bad) pushq movabs mov sub out shrb stos xor in rorb out mov lods or fistl mov rex.B xchg outsl fldcw jl scas (bad) enterq xchg sub movabs andb lods lcall scas in lods lret mov movsb jno lock sbb rex.WRB or scas movabs cmp test rex.WRX jrcxz ja xchg mov or insb add rex.WRB sahf (bad) pop (bad) jmpq scas sub lods test xchg jg rex.WR (bad) repnz data16 cmp add rex.WRXB vpmaddwd out lods jns xor mov movabs test mov mov (bad) sub test stos outsl flds fistpl in mov cwtl icebp mov add pop sbb and cmpl rex.W lahf fsubrl or int3 rex.WR lock vpsrld cmpl (bad) clc pop lret sub scas sub hlt ror jnp lods pushq sub ss (bad) (bad) mov sbb insl xor loop,pn push push adc push fldl adc xor mov xor cmc mov xor cmpsl je xor or movabs lret jge xchg add jmpq cli sub push (bad) pushq es mov rolb std stos scas (bad) push je (bad) xor repnz adc clc (bad) rex.RX out popfq cmp xchg lods xchg retq (bad) lods rex.WRB repnz adc rcrb cwtl jnp fsub rex.B lret (bad) fldcw xchg movabs iret and in mov pop pushfq mov (bad) add out insb (bad) cmc test lods test adc lods rex.WRXB retq mov (bad) adc and pop adc in xchg lock rex.WRXB lods movslq adcl sbb je rex.WRX jno push rex.WR je shll rex.R rex.B movsl lods xor movabs cmp imul and setle lods cmp test xor mov cmpsl mov mov mov jge mov add (bad) rex.WR mov callq mov movslq lods (bad) adc sub rex.W retq (bad) pop icebp xchg add pop mov rex.WR repz loopne xchg mov pushfq jae pushfq fildll xchg xor out int3 cmp lods xchg shrl mov ja mov push scas (bad) cli lods jb jnp int notl rex.WRXB jo push lods cmp in outsl rex.WX iret pushq (bad) mov or jp adc adc sub (bad) hlt and lods (bad) (bad) cmp and push pushq stos notb loope outsl sbb addr32 testl pop jbe sbb out lods mov mov and sub rex.W adc in mov fdivs rex.WR insb xor (bad) movabs xchg lods fisttpl mov (bad) (bad) mov jle jbe cmp lret hlt ljmp cli sub (bad) xor cld mov jge insl or sub mov notb mov cmp pushq xor fistpl test (bad) (bad) lods rolb add add shrl leaveq stos sub (bad) (bad) rex.WR fwait retq testl int leaveq repnz mov pop stos je push rex.WR lods sub test adc mov cld in stos mov (bad) pop (bad) mov (bad) fsubs movabs sbb lahf (bad) jmpq (bad) xor js je xor push stos lea xor sbb imul mov (bad) in and stos adc in (bad) add movabs xchg ror fnstsw (bad) add outsl xor hlt scas lods rex adc scas sti idivb movabs lods xchg int3 rex.WXB rex jne (bad) out lods jns data16 clc jp lods mov mov sub int loop subq lods jp clc movsb out xor imull (bad) mov subl jno (bad) in sbb mov (bad) lods lret and push rex.RXB lods adc mov shr xor out lods rex.WB mov cld fimul cmpsb (bad) mov test jmpq lods and cmp fwait lea imul es scas (bad) or adc out rex.RX orb cmpl sbb shrb sbb add xor es mov int3 enterq test pushq rcll mov rex.R insb shlb mul mov xor sub (bad) rex.RXB push or sbb cmp mov faddp cli ficompl and sbb fbstp test rex.WR callq (bad) push add (bad) int ss (bad) (bad) movsb test mov callq enterq test mov rex.WB frstor (bad) cli stos sub cwtl cli cltd mov in fldenv rex.R (bad) or xor faddl sub notl rex.B test stc fimul adc jbe rex.RXB mov cmc adc cs pop (bad) xor stc callq loopne (bad) mov bswap sbb nop add lahf adc cld leaveq in lods sub adc sbb sahf sub data16 (bad) insl rex.WX in flds insl fistp or rex.WRXB callq jo rex.RB rex.RXB adc xor stos mov adc (bad) loopne xor xchg pushq rex.WRX subl iret lods cmp lods (bad) test mov je test rep or scas mov (bad) adc jl lods and cmpsl callq lods sub (bad) lea xchg (bad) (bad) sub mov sbb outsl or xchg inc lea mov or push divl mov mov (bad) pop lods rex.XB lea mov movsl xchg rcrl lods popfq jle insb (bad) int3 mov add jg movabs and shr scas cmpsb (bad) (bad) test xchg mov cmp sub stos sbb (bad) retq mov mov jno or test int fnstsw (bad) (bad) xchg adc callq xchg mov in rex.WX sub sub lods int pop xor mov fnstcw lods fsubp (bad) rex.WB lods (bad) fsubr pushq sub loop and imul loope in gs push cmp fstpl sub test (bad) rex.B je clc in movabs lods jle and adc (bad) (bad) lods xlat rex.X test push (bad) imul ds (bad) stos movabs sub lods sub (bad) xchg movslq stos (bad) (bad) mov test rex (bad) sub jle push lods jrcxz jno movabs jge rex.RXB add jp rex.XB xchg add rex.WRB and sub or and mov jo jnp lret in adc jle iret lods movabs xlat lods (bad) mov sbb movabs ja stos mov jle ffreep test cli adc movabs mov and sub xchg fimul mov jrcxz fldenv mov in adc pop sti mov out xchg out movabs in (bad) sbb (bad) movsb xor lret or sahf in hlt mov out (bad) (bad) sbb pushq jp mov insl lods test rcr sbb cmp adc cltd or lods pop sub pop rolb (bad) faddp cmpsb leaveq lods movabs testb jae sti scas movslq insb rex.X (bad) mov cld add jl (bad) jo lods adc fdivl add (bad) mov jmp out cmpsl (bad) or roll in lods or (bad) mov loopne lock in outsb test jrcxz (bad) test jle xchg pop std lods lret movsb movabs lods callq in xchg mov mov pop push retq and (bad) jmpq in movslq and cld adc clc out (bad) rex.WR and stos or (bad) lods movsb rex.XB ss sub insl lods xchg and sub add push mov movsl out lods and push loop lods mov add add scas (bad) sbb xor sbb pop pop mov (bad) jmpq pop retq mov sbb sbb leaveq add jns test movabs (bad) lods cmp pushq (bad) clc sub xor add negb sahf rex.RXB es lods lock cmp and hlt xor mov in lods imull out rex.B movabs (bad) cmpl ss sub mov fstps fdivl add rex.WRXB rex.XB jbe mov js or sub clc adc (bad) (bad) mov pop lahf cmpsb mov adc movabs xchg (bad) data16 fstpl js push movabs movsb (bad) and sub push int sub push fmulp divl xor (bad) in or sarl (bad) jno jne fsubrl sub in (bad) es scas pop std mov leaveq jbe add ja in pop jno (bad) mov pop (bad) outsl push lods test (bad) fbld repnz (bad) loopne sub pop sbb cli clc scas loop mov rex.R in or pushq xor adc (bad) lods (bad) rorl xchg clc mov push movabs xchg rex.WRB lods mov je incb mov xchg cmp fildl (bad) scas fcmovbe mov sbb loope mov and adc xor (bad) lods sub cmp sub jae out adc add fldt (bad) push mov add push movsb rorl lret rol lods add (bad) fisubr repnz (bad) stos cmp rex.WRXB (bad) mov stos jae push lods jae xchg movsb (bad) mov and lahf xor scas xor scas jo (bad) jmp rex.WR rex and rex.WR jl cmc and sti callq nop mov (bad) cmp jo mov rex.WR movsl lods mov sub jns mov xor rex.WRB mov (bad) (bad) mov iret (bad) icebp push xchg scas movabs ja mov test (bad) mov cmp rex.WR rex.XB jnp (bad) push movabs (bad) movabs movabs mov sub pushq rex.WRB xor movabs or xchg pop (bad) mov push lods jbe adc lods add loopne lods rex.RX movabs (bad) rex.WRXB or (bad) int3 xchg (bad) push cmp imul sbb (bad) pop cld (bad) lods cmpps mov sub xchg lods imul mov (bad) and or in lods xchg pushfq scas fadds (bad) outsb lods adc gs scas pop rorb xchg subl movabs or mov lods fucomp std iret xchg test rcrl cwtl pop jbe sbb jns sbb addr32 stos lret ja mov sbb cmp sbb rex.XB mov xlat loop insb (bad) popfq xchg push shll fsubrl xor sub xor xchg insw lods xlat movabs lods jae cmp lods pop jmp and clc rex.WB enterq cmp lods in (bad) adc je loop (bad) int3 test (bad) movabs ss sbb adc fimul cmp mov lret sbb pop sub rex.W xchg rex.B mov jge sub xor cltd push xchg (bad) lods stos rex.WB sbb mov rex.W adc callq or jrcxz sub lret cmpsl rex.WB test jns lods shlb leaveq adc flds lods or push adc movabs (bad) lock sti jle xchg test pop (bad) rex.R add out cmp sub (bad) rex.WRX (bad) jo fisubrl xchg out mov xchg jle mov movabs jne mov ror xor mov lock add (bad) (bad) (bad) (bad) mov test xchg andl js mov pop mov mov jb sbb loop movabs loope or cmp adc movabs subl sbb loop push mov lods (bad) (bad) jno or lods in (bad) sub (bad) in (bad) movabs mov pushq mov cmp push or leaveq (bad) mov adc lods mov movslq xchg add cld (bad) fsubrl pushq test pop idivb or xlat add lret fwait enterq sbb cmp (bad) jge lods repz and scas (bad) and enterq mov ss lods sub mov iret lods xor sbb mov mov addr32 shrb movabs jnp jae in jge cmpsl push stos mov mov mov lods movl iret and lret fdivr repz pop xor or lods (bad) sbb (bad) rex.WX rex.WR in repnz addr32 rex (bad) imul lock mov or retq movabs push mov cmp (bad) rex.WRX jae test jbe xchg stos jl stos sbb callq cmp movslq xchg and (bad) xor adc retq and sub (bad) je cmc or xchg (bad) and imulb vpaddq mov test cmp rcl rex.WB mov cmpsl out rex.WXB mov mov cwtl cld fxtract sbb lods int3 test sbb lods sarl and rex.WB repz (bad) rex.R jbe adc or mov mov jbe fsub andl insb fadds jns movabs or adc cmp (bad) sbb stos (bad) clc and lods insb pop jp xchg imulb lret mov (bad) jmp iret rex.RB nop mov mov outsb or or lods test xchg in ja cwtl rex.X nop int or jmpq (bad) (bad) lahf mov mov outsl jl,pn in loope (bad) fsubr movsb mul popfq outsl adc pop leaveq cmp (bad) and (bad) jne in pop movabs lods cmp pop in cltd jno (bad) sbb (bad) int3 and movabs cmpsb rex.W (bad) add fld movsb leaveq in pop adc rex rex.RXB pop lods lods mov jno fdivr and hlt jle loopne scas shrl in adc adc (bad) lods xor js rex.R data16 mov (bad) (bad) push movzwl pushfq movsb rex.WRB popq cld (bad) in (bad) mov rex.RB pushfq cmpsb mov (bad) pushq or push xchg lods pushq or lods xchg adc lods iret adc (bad) jle stc mov (bad) movsb (bad) lods int in icebp sti cmc xor (bad) jne loop outsl lods rcrl mov in outsl cli xchg sbb push mov cmp hlt (bad) test cmpsl (bad) lret mov sub xchg loope lods push and in sahf add insb mov adc (bad) add mov imul jmp rex.XB mov rex.WRXB pop data16 movsb adc or (bad) sub xchg lods adc (bad) rex.WXB or (bad) stos sub retq cli fnstcw xor xchg scas push mov lods in nop std and jnp in roll jne imulb lods (bad) rex jl adc lods (bad) mov (bad) (bad) (bad) (bad) xchg mov xor scas (bad) lret iret mov movabs xchg (bad) sbb jge (bad) lods scas int (bad) (bad) shll in lods retq leaveq jnp fisubr rex.WRB (bad) (bad) (bad) add xor xchg pushfq mov rorl push int3 icebp mov cmp lods sbbl callq or rex.WXB mov cs scas adc (bad) (bad) add xor and mov cs movabs adc test stos and cmp movabs lods jl cwtl mov adc lret lods (bad) xor loope movabs rex.WR test mov lock sysexit lods je enterq push push stos (bad) cmpsb movabs rex.WXB rex.WRXB imul push pop push (bad) (bad) mov lahf cmp mov scas cmp fldcw retq stos addr32 rex sub icebp std xchg jge (bad) mull roll stos (bad) lret jle lods adc pop lea loope lods (bad) movabs xchg movabs jmpq xor movabs movsb cmovp outsb leaveq ja insb (bad) outsl repz rex.XB mov sahf callq add pop cmp scas rex.WRXB fldl xchg fildl jge pushq stos (bad) sub loop xchg stos or sub retq rex.WR (bad) sbb lods (bad) rex.WX rex.R cltd lods jp in outsb rex.WRX (bad) out cli adc (bad) (bad) sub movslq subb fdivrl movsb test (bad) icebp (bad) ds in sbb lods out fildl sub pushfq add mov sub test pop rex.WRX callq push lods mov sbb lods jnp xchg xor lods cmc mov (bad) mov (bad) rcrl rex imul cmpsl jge xchg cmp rex.RX pop jb rex.WR rex.WRB xor test xor jb add std stos imul rex.WB rex.WR rex or sub cld stc rex.WB lods mov xchg jmpq lea cmp xchg mov fimul insb callq mov movabs rex.WR jo adc hlt mov or pop rex rex.WR xlat shrl hlt cltd movabs mov fsubrp stc jle movabs or int3 cmp xor fistl insb jp lods (bad) (bad) idiv mov pop xor adc je jne in lcall movslq lods xchg add add (bad) sbb iret ds lods mov adc jno add out xchg lods scas fstpt push pop (bad) xor iret sbb loope lods movslq (bad) lods pop rex.RX jnp mov (bad) je es lods (bad) imul adc mov adc jno xor stc mov insl lahf push (bad) fcoms xorb rex.WR lods (bad) iret jns std rex.WRXB rex.RX fmul divb pop sbb mov loopne jne sbb xchg rcrl retq rex.W stos fucomip mov add and sub sbb lcall lods (bad) (bad) mov sub lods je lea sub (bad) lret nop add sar sub sbb (bad) xchg adc lods (bad) ss jae mov mov pushfq jns jl (bad) cmpl sub adc cwtl movabs repnz retq sbb cld jrcxz stos or int3 xchg rex.B mov adc xchg mov mov lock xadd lods (bad) rex.WRX push rex.WR push jle (bad) and out mov fstp test stos cmp ss retq xchg movslq lods rex.WXB rex.B cwtl rorl mov lods in pop mov stos ja scas test rex.WX adc rex.WR repnz jne (bad) mov mov test (bad) (bad) push ss pop add mov jbe add stos fwait je lret (bad) (bad) cli mov (bad) movslq jae outsl pop movabs xor (bad) stos outsl test mov rex.RXB je movslq jae jg add repnz (bad) rex.B fs addr32 xor jns lods cmp pop (bad) (bad) out scas push xor and adc lods jno add push cmp jp ss rex.WX mov movsb jno (bad) in xor out stos mov pop rex.WRXB lahf lods cld sub test add lods adcl or mov lea lods and adc ja push movabs add mov test retq test jle pop shll (bad) rex.RX insb lea sub adc rex.R out in test mov (bad) mov out mov add sub fdivrs mov mov or lea jbe sub fs jns rex.WRXB lods jle add lods in rex jg fdivp sti test movabs (bad) push rex.R rex.WRXB imul mov push mov mov (bad) (bad) rex.WB mov mov sti outsl rex.WX imul enterq icebp out add stos fs xchg fcompl fcmove lods xor sub add (bad) lods mov jle lock or lods push xor mov adc (bad) jbe lods (bad) ds faddl mov rcrb cmpsl jae test insb pop or faddp enterq lods (bad) jrcxz test lods stos (bad) inc rex.XB insb (bad) int loope sbb sti add (bad) movsl insb mov xor sub cmp rex.RB lods lea (bad) pop pushq js (bad) adc movabs movabs jp (bad) loopne xor (bad) in xchg mov mov rex.WRB (bad) insb or jle stos adc mov xchg jae loopne lods mov xchg mov ja lret sti jb pushq cld in and jnp fmuls lods sbb (bad) xor mov sub sarl mov xor lods lret rex.WRB rex.RXB xor add lahf (bad) pop sub rex.WRX mov loopne (bad) rex.RB (bad) (bad) movabs add cmp jne scas mov sti in mov cld jae push scas fadds xchg sti or int3 movabs lods sub nop std (bad) or xchg stos stos fs rex.WXB lods cld fimull adc jmpq rex.RX xchg jge test scas sbb adc outsl mov and loop pushfq movabs sbb rex.B cwtl sbb fsubl lods xor mov ja xor adc adc mov lods pushfq clc je repz fcompl repnz adc int rex.X add rorl (bad) movslq sti mov jl mov add (bad) sti mov xor (bad) shll mov fcomi fwait jb sbb cli and xor mov rex.WRXB rex.WR andb push cmp (bad) pushq mov insl jmp jo sti mov movsb fild in xor and (bad) pop ja rex.RX (bad) shrl (bad) push sbb (bad) adc sbb (bad) int3 int imulb repnz sub fs lret and iret mov (bad) rex.WRXB faddl lret add (bad) in je (bad) in out vpshaw (bad) cmp fcompl callq (bad) cmc int3 xchg mov or xor sarb pop jl scas outsb sub in xchg scas (bad) retq rex.RB (bad) xchg lods cmp (bad) cmc adc insl scas pop sbb adc je sub (bad) lahf rex jp int3 jb add sbb cmc pop rclb rorl test lods pop sub shrb int3 ja lods fisttpl repnz test rex adc or xor int3 push jbe push push rcll (bad) lcall scas or in rex.WRX sbbb xchg out and jrcxz std icebp stc lods push loopne push sub sbb sub mov outsl lock or rex.WR sub mov lods (bad) lods cmc loop pushq movl mov adc pushq movabs jp negl lahf mov out test sbb push mov (bad) hlt or and scas retq and (bad) hlt clc rex.RXB cld mov cs (bad) cmpsl sub push movsl retq or ffree mov mov js insb jno enterq (bad) mov (bad) xor shl jnp cmp test pop scas cmp rex.WX adc jmp push fwait shrb and sarl data16 or rex.R push pushq addb rex.WRB mov movsb and lods rex.WXB int and (bad) (bad) cmp scas xchg test jo cwtl (bad) (bad) retq lods mov jae (bad) clc cmc enterq xchg (bad) sbb xchg add (bad) (bad) pushq (bad) xchg jg out sub movsb jne lods sub shll mov scas callq popfq lods rcrl (bad) mov rex.B int3 rex.WR add movabs sbb sti pushq stos stos rex.WRX xacquire or lods xor in scas cmp gs mov add cmpsl (bad) std rex.WRXB rex.WRXB (bad) callq (bad) lods movabs lods push in xchg (bad) (bad) loopne hlt sahf pop sbb (bad) or add (bad) push scas stos lods (bad) (bad) jae mov fwait pushq pop addr32 xor xchg imul pop (bad) in mov jle (bad) movabs (bad) fisttp lods and pop rcll (bad) sbb xor shrl repnz cmp mov add sub scas out (bad) out scas clc movslq rex.WRXB shrl mov and lods add push outsb mov adc lods (bad) lahf rex.RXB notb in pop (bad) movabs sub (bad) test lods hlt cli xor adcb jg js jne lock pop lods pop or sub cmp rex.RX js mov (bad) std (bad) jns and mov mov (bad) rex.W or cmp adc and jge add and lods retq scas data16 and ror and rcr pushq (bad) fwait jns cmp lods (bad) imul (bad) mov lods in (bad) stos rex.RX incb int and rex.WX (bad) insl mov mov hlt sti (bad) or test sbb add outsb mov (bad) mov scas add ja nop rorb pushfq rex.X adc clc loopne mov jne cmp jnp pop lods (bad) addr32 rex.RXB jns lods rex.WXB repnz (bad) repz scas pop and lods shr (bad) (bad) push fs scas cmpsl mov (bad) fdiv sub shrl xor or (bad) (bad) lods callq mov fucom test lods imul or (bad) scas callq rex.XB stos test lods (bad) xlat fstpt (bad) xchg lods insb icebp rex.WRB xchg rex.WXB xchg fisubrl adc mov xor lods xor sub lods and fisub lods callq rex.WR mov sbb (bad) stos rex.WXB icebp mov stos mov xchg jrcxz mov adc insl cmp mov jmp sbb pop cmp mov rol cmp lods xchg mov cmp mov sub cld rex.WR decb fiaddl loopne callq push push insl xor repz (bad) or mov loope rex.WRX test rex.RX sub (bad) std jno data16 (bad) cmp lods retq jne insl imul (bad) push cmp roll lods xchg sub mov and jb out push out cmp cmc (bad) (bad) lret adc movsb pushq mov ffree sub insb (bad) mov lret mov (bad) xor retq lods iret ds xor mov repz and jl iret mov scas xchg jnp vmovupd pop xchg mov mov or push lea insl movabs imul (bad) xor out push jnp mov jae lods (bad) pop mov shrl lret mov mov je rex.RB sbb lods (bad) mov fildl mov (bad) lret scas and rex.RB add cld lods pushq xchg movabs adc (bad) mov rol mov lods imul rex.WX lret rex.WXB and (bad) lods gs mov sahf es mov sub pushq (bad) rex.WX push sub out lret or pop fstpl mov mov rex.WXB fadds retq sbb lods std (bad) rolb test test addr32 cld enterq imul (bad) push lods movabs (bad) mov fstpl fsubrs lods xor pop test je mov lods push cmpsl loopne sbb imul pop xchg mov (bad) sbb mov jl push lods imul shrb rex.R rex.WB in mov or jae lahf sub je sub rex.X rex.WR andl mov adc out rclb xchg (bad) lods enterq sub sbb lret rex.WR mov or in mov (bad) rex.WRX cli jge cmp faddl lods movsl sbb (bad) (bad) negl add lahf (bad) lods jne pop imul out lods push (bad) pushfq orl movslq mov or mov in sub hlt jne xchg lods jbe lods movabs sub (bad) fcomps sarl push jo and lock (bad) sub sub or (bad) mov mov mov in lods cmp jo callq fldcw (bad) mov insl or rex.RX (bad) xchg or (bad) shrb rcl imul jne jo hlt (bad) jp scas (bad) adc cltd in test lods scas rep mov lods shll mov jno lods sbb cwtl outsl lods jae test (bad) jl jns rex.WRB fwait mov fs stos mov or pop cmp cld and jns (bad) (bad) mov mov jge xor movabs stc adc add sub popfq int3 and xchg xor mov lods add cmp lods (bad) sahf sbb movsl jns jnp ror (bad) sbb lods sub or movabs or int3 (bad) jbe add (bad) xchg gs rex lods shrb out mov fldl rex lods sub mov and icebp mov and add (bad) addr32 mov xchg adc adc cs lods out sub out mov cmpsb mov xchg or sub nopl in movabs cmp retq (bad) jns lods (bad) imul rex.XB movabs test retq mov sahf or movslq push (bad) mov lahf movabs iret mov subl roll lods pop rex.WB pop jne es cwtl pop (bad) (bad) adc decb sahf lods jo sbb ror (bad) add adc and (bad) jae (bad) ds mov fmull (bad) (bad) ffree push push lods cltd (bad) (bad) xchg pop jbe data16 adc (bad) mov callq sub mov in ss pushq pushq and jmp (bad) rex.R cli sub cs lods popfq lea jns xchg scas rex rex.RB popw scas (bad) xchg pop movsl xlat adc lods fstps fdivl sub jrcxz mov jle outsb shll mov int lods sbb divb callq (bad) (bad) sbb (bad) in fadds insl lods sarb pop (bad) sti addr32 lods (bad) iret jnp out rex.RXB in outsl enterq pop (bad) push movabs mov rex.WXB rex.RXB sbb rex.W jl sbb rex.WRB mov jb mov lods shrl jno (bad) cmp and (bad) pop xchg lock (bad) cwtl (bad) stc ja xchg (bad) rex.W pop fcoml lahf scas jg (bad) add shrl loop and lods stos (bad) or (bad) (bad) repz mov in in movabs out rex.XB sub sub rorb add movsb mov (bad) movabs test (bad) mov mov (bad) xchg mov (bad) pushq jbe lods rex.WR xor rex.WR sti pop jno adc (bad) jne ja mov rex.WB movabs (bad) (bad) sti jge sbb test loop in (bad) cmp movabs cmp xchg pushq lods or sub (bad) cli rex.RB repnz mov in mov add xchg (bad) push leaveq lods pop pushq pushq int3 mov xchg jge sub mov lods fimul push iret (bad) sbb xchg cmc or pop lods xor lock sahf outsl mov js cmp mov enterq ss jno (bad) push jb in addr32 xorl xor or not imul sub jnp (bad) push (bad) xor movslq scas mov movabs callq clc xor lods sub xlat in xchg mov out decl sti rorb cmp sbb rex.WRB and jb (bad) retq and mov or and push lods movabs sbb xchg rex.WB lods gs or mov add mov (bad) (bad) rcl stos push js and (bad) hlt xchg pop lods and outsl and (bad) jle sub fidiv movabs in mul or mov lods (bad) cmpsb rolb mov add or fbstp lods mov push (bad) loope outsb (bad) lods pushq movslq mov mov mov leaveq and rex.WB or lea in mov out addr32 shrl add lods (bad) and lods (bad) pop nop leaveq adc rex.R scas insb and xor cmp hlt sahf cmc add push lods (bad) xchg rex.WRXB movabs retq movsb cmp rex.WX jns scas imul rex.RX pop addr32 sbb xlat or (bad) add stos mov (bad) xor enterq (bad) mov fbstp test out push lods repz stos repnz mov cmpsl (bad) in lods push sbb mov or lods jbe (bad) out lret (bad) mov sbb adc ss in and subl xchg popfq cmp repnz test pushfq test (bad) mov movslq imul xchg sub sbb (bad) outsl lret cmp (bad) jne sbbl imul movsb xchg mov (bad) xor in fwait add movb movabs pop (bad) in loope rex.WRB lods insl test out xchg pop lods jno (bad) push xchg (bad) sbb xchg cs mov cmp or hlt and callq mov (bad) mov loopne sbb shrb mov jo xor add xchg mov jp (bad) mov sbb (bad) pop sarl mov rex.R mov jnp enterq bnd mov jge lods callq lret lods sbb add clc in xor clc es jbe sbb cli and lods (bad) jae (bad) jno retq rex.WRXB repnz mov lods (bad) pop sti and lods mov xor xchg (bad) sbb int xor outsl shll decb testb (bad) (bad) mov movabs fcmovu lods xor adc (bad) movabs xchg loop out icebp rex.WXB lods insb pushq lods in cmp mov movabs lods xchg pop mov stos lock rex.W rex.R mov sub fsubrs movabs cmp or xor and int iret xchg jle (bad) (bad) sub retq popfq (bad) sub lea jo pop sub pop (bad) movsl add es enterq cwtl lods jo scas (bad) addb adc fwait (bad) fisubrl movabs pop xor push rex.RX (bad) decl pop mov retq and repnz xlat fcmove or movabs mov lock rex.X jo jns sub outsl jmp (bad) pop jg sbb sbb pop pop sarl insl or rex.WX ljmp mov (bad) xor lahf rex.XB je xor xor push insb xor test adc movslq adc add mov (bad) movsb (bad) mov rcrb es mov addr32 fmull (bad) cmc lea xchg in movabs mov add and orl imul in repnz out rex.WB cmp stos or add adc lret pop pop jns shrb sarb js movsl cld mov fiadd mov add add xchg or rex.RXB jl mov fldenv add (bad) stc or mov cwtl rex.B (bad) jmpq rex.XB cmp rex.B cmp rex.WB fdivrl mov jno clc mov xor (bad) (bad) mov retq jp pop sbb jne pushq xlat rex.WR adc test jrcxz adc fnstsw rex.WRX clc movabs mov (bad) jbe pop xchg sbb adc add jnp stos mov or rex.X test movabs repnz adc lods fiaddl or test lods roll mov jge clc lods and jns mov xchg jrcxz insb ja stc sbb lea and out (bad) rex.R cmc push ja scas xchg cwtl mov mov sub gs jp mov lods addr32 sbb in (bad) enterq pop mov mov (bad) xchg fisub xchg nop mov adc sahf lods jmpq loop xchg sbb lods mov std sbb jge push lods cmp rex.WB xchg xor lock movabs xor sbb sahf add cld add pop test gs rex.WX repnz and jg enterq jmpq sbb cmp (bad) sar cmpsb (bad) xor pop adc pushq mov (bad) movabs (bad) sub and mov adc mov jbe mov test insl mov jne mov sahf sahf sahf enterq lahf sahf (bad) (bad) mov loope cmc out orl insl imul retq sub and imul add in xchg (bad) (bad) sbb (bad) in in adc movabs sub cli lea adc mov xor mov adc (bad) xchg xor (bad) xor (bad) movabs incl rex.R fwait xor cqto sub add rcrb add mov clc push push movsb lods shll pop (bad) rorb mov sbb retq test int3 add scas callq jg xchg pop shrl pop popfq jnp adc sbbb cmp stos fmull rex.W stos rex.RB jmp and push sub lods ja cmc fisubr (bad) int3 outsb jo xchg movabs lods jg rex.WB stos scas pushfq rex.WXB fwait push pop adc fbstp (bad) (bad) clc jb ja lods stos push rorl mov sbb (bad) (bad) xor sub (bad) mov pop (bad) cmp lods out jo (bad) fisubrl enterq movsb jmpq and cltd imul std cs push xchg mov test jl int3 jns cmp xchg lods xchg mov cli mov (bad) sbb cmp enterq adc mov lods shrl sar (bad) (bad) pushfq out (bad) ja addr32 movsl mov sbb fsubs faddl mov rex.WRXB sbb shlb nop movsl fdivl es js sahf mov adc rex.WRB rex.WR xchg xor fyl2xp1 enterq lret sbb rex.R repz cld movslq rex.WRXB xchg and cmc shll pop retq negb adc mov in (bad) scas rclb adc sti fldcw xchg sub cltd jmp insb je ja xchg sub sub (bad) fimull clc (bad) movsb loopne fwait jnp mov and xchg or sbb subb add or movabs and xchg sbb leaveq cs jl lods pop sub pop orl callq (bad) sub int3 sbb lods cwtl in movl xchg (bad) (bad) add add adc mov adc int3 insb pop jbe callq sub orl (bad) (bad) lods (bad) (bad) in mov (bad) jb cwtl movabs outsb movabs (bad) cld xchg sub pop vpcmpgtb mov (bad) mov rex.WR and (bad) xor lea (bad) lods rex.B in mov callq shr pop rex.WRB rex.RXB lods mov cltd test (bad) scas xchg and jno or push jns in lods rex.WR (bad) rex.RB adc test add sub rorl stc xchg xlat jnp mov test pop int jrcxz je scas mov mov push in jge hlt cld cmc scas mov movabs movsb sub rol adc or lods xchg jne xor movsb idivb mov jae mov mov jbe imul or in mov in lahf out (bad) iret (bad) lods fldt rex.X test movabs test or jbe cltd cli rex.RB rex.WRXB mov movsb rex.WRX cwtl loop xchg mov mov setg in movsb (bad) (bad) movsl mov (bad) xor mov (bad) lods andb jrcxz cmp jno pop (bad) mov mov mov push test int jae jnp movabs add repnz frstor sbb (bad) std (bad) add adc out (bad) shlb add insl pop sub stos in jo sbb insb fistl mov clc adc ss sub mov rex.WRB repnz ror and scas insl lods mov mov mov push (bad) mov lods sbb sub mov (bad) jno xchg lods imul (bad) test out and (bad) movabs iret lods xor sbb sub movsb movabs addr32 push (bad) int3 lods adc xchg mov movabs ja retq sbb mov jge in sbb (bad) adc pop sub mov lods rex.WRX sub callq fstps xor loopne cltq outsl lahf lods add (bad) sbb rex.WXB adc push mov jl pop lahf push add add lods cwtl jp rex.WRB repz pop pushfq xchg lahf clc movabs sub movabs xchg lods outsb cs sub lret push rex.W rex.RXB movabs mov mov push sti mov push fcmovnb lods loope mov add or movabs (bad) mov cmp stos mov nop insl sbb mov movhps lods imul lods sar movabs out mov jrcxz (bad) (bad) rex.WRX repz stos xchg add je scas (bad) rex.WX rex.WRXB xor mov (bad) jns (bad) fsubrl xchg imul loopne test cmp lods (bad) scas (bad) (bad) negl fcmovb mov repz movabs loopne sarl mov mov insb sbb in movabs hlt mov sub (bad) mov mov in fs lods (bad) fbstp test enterq jne adc or and (bad) jo sub xchg lods (bad) or roll xchg lods mov mov int xchg out jo mov movabs imul adc xor int3 adc jg cmp sub mov xor iret rex.WRX sbb mov data16 (bad) cmp add sub fs rex.RB add xchg sub loope or xor cmp lods pushq and lock and xlat int3 in (bad) adc mov sti loop test fiaddl sub and (bad) enterq lods xchg (bad) push sub mov movsl lcall outsb xor fs (bad) icebp rex.B test fcmovb not and (bad) fldl xlat add xchg test adc (bad) sahf mov fisttp loop rex.RX movabs stc xchg cs insb xadd std fwait add (bad) pop rex.RX or scas add sbb and xor (bad) in and mov pop cwtl test jo mov jl rcll lods jl cmp push bnd pop movsl in callq add jo xor test fcomps mov rex.RB insl movslq mov push (bad) lretw jg sbb sbb (bad) repz fldcw pop sub (bad) addl rex.WX ds mul (bad) scas popfq repnz cmp outsl cmp and out sbb lods lahf (bad) test lods sbb push (bad) jo movabs popfq loopne xchg add adc in (bad) mov retq xchg lods add test (bad) (bad) mov sti pop lods rex.X cmp push lods cmc or rex.B rex.W jle (bad) jae lods ficom pop std (bad) mov lock rex.R sub lods pop (bad) push insb add jge (bad) xchg testb xchg (bad) pop rex.R rex.RXB sbb push cmp lods pop sub (bad) lahf add xchg rex.RB vaddps jmp (bad) negb callq lods adc fild xchg cli rex.WXB leaveq addr32 mov in fcmovu pop stos shll movabs lock (bad) xchg (bad) test in mov hlt and fdivrp leaveq scas and sub jl sub fs sub cmpsl jae int3 xor rex.WRB cmpsb iret add (bad) test and (bad) sub imulb test bndstx (bad) lods jmp (bad) (bad) lea add sarl lods sti bndstx (bad) (bad) mov je ja adc push loopne jnp movabs jb shr or mov (bad) in jmp movabs lods movabs push add stc and in push or sub out jne rex.WXB sub mov or mov (bad) pushq or jmp xor repnz retq (bad) js in sub test (bad) rex.WR add fmull sarb subb idivl (bad) jb (bad) loopne (bad) rex.WRB jg rex.RXB (bad) fldcw movsb mov shrb pushq cmp incb pop std lods sub xor xchg movabs loop shrl fcompl in in rex.W xchg shrb test lods mov add xor callq insb mov sti (bad) (bad) lods cwtl sub fsubrp lods movslq scas push pop rex.RX xchg lods test stc lock leaveq (bad) xchg andl pushfq (bad) lods test lret imul movabs cmpl lods (bad) add in sbb adc retq push sub movabs ja (bad) or out sub lods mov int lods movsb add add sub ja pop std xchg out adc (bad) lahf fisubr (bad) push rex.RXB add fsubrl (bad) and mov sbb (bad) rex.RXB movabs rex.WR pushq in lods cld icebp ss outsl sub rex.XB flds lods mull rex.WRX pop lods mov jmpq imull ficom and push sub std (bad) pop movabs add fcomps rex.WRXB in or shr movabs push jne (bad) lods (bad) rex.WXB clc rex.WB mov insl test add sub pop mov lods push rex.WB lret movabs add enterq jae sub cmp lods movabs jl lods push add outsb int nop and test mov xor int3 (bad) pop (bad) stc (bad) xor lahf in and push fsubs mov mov movabs iret mov andl movsb push fwait in lods pop mov jnp push (bad) hlt (bad) adc scas rol js pop xchg cld (bad) cmp imull push sbb mov pop sub (bad) (bad) cli and adc out (bad) loop jmp add pop push test jne mov ja pushq (bad) in decb test lods jge mov fwait (bad) subl (bad) imul outsb jno jl or loope loopne (bad) push mov stc pop rex.R sub movabs pushq jns (bad) sbb test je stos inc movabs rex.R cs mov clc leaveq fist (bad) xlat mov in (bad) out fstps (bad) mov pop and rex rex.WRXB mov mov js or (bad) scas (bad) mov and cwtl push cmp rex.XB sub xchg fisubl movsb adc movsb cmp scas push xor jae sbb jg (bad) (bad) lods and jo std movabs add movabs mov rex.WR fwait sub pushfq pop pop adc sbb enterq lods fcompl pop cmovnp jnp rex.W push cmp in outsb lods fnstcw and movabs scas rex.R mov push jno cmp hlt test (bad) xchg and lods in push callq lods (bad) or shrl imull (bad) movabs mov fstl (bad) cmp movslq jne pop mov xchg xchg add xchg add xor rex movsl scas frstor cmp rex.WRXB lods xchg movabs jno lods loope es hlt ss push movslq (bad) mov shrd cmp clc cmp mov xchg cmp mov cmp and or rex.WRB push test imul (bad) shrb mov ds (bad) lods pop sbb jle and pop mov out cmp mov sahf sbb jne (bad) movslq xor out jge je mov rcr jb sahf stos xchg mov lods (bad) push xor fwait out lods and sub lahf in jrcxz mov pop subl sbb rex.W insb scas pop rex.RXB (bad) and mov push sub xor repz in (bad) (bad) outsl pop add test scas (bad) fldcw push callq mov int adc sbb js lods movabs imulb cmp movsb jmp test sub (bad) testl jae push movabs cld movabs mov xchg cld fmul rex.WR (bad) cs and pop scas cmpl mov xchg lahf sbb add (bad) adc push push mov scas nop rex.XB subl mov mov fstpl movabs or gs (bad) push and js scas xchg xchg rex.XB iret in pop mov imul fadd int3 (bad) out push iret rex.RXB cld cmp lods loopne adc mov (bad) jb mov outsb imul pop scas and rex.X and cmp cmp adc jp notb mov mov js mov lods rcrb (bad) mov scas scas outsb imul fmul mov mov subl (bad) jnp pop add lods jne (bad) (bad) insl repnz pop shrl jno lods xor mov rex.WB addr32 or rex.RXB (bad) (bad) rex.WRX out cmp cmp and xor add lods je in lret push lock mov rex.R sbb jmpq es gs sub fildll jo (bad) movabs rex.WX out sti lods xchg sbb mov (bad) mov in cmc imul in xchg scas xchg lods (bad) int3 rorb add lods mov fs icebp movabs (bad) int3 pop lea movslq in leaveq (bad) rex.WR movsb and movabs in lods cwtl mov and pop cmp xlat add insl insb (bad) outsb xor rex movslq in fcomps rex.XB mov and out adc add mov sbb insl fstl xchg fdivs mov ja (bad) jae scas xchg sub jb sarl stc mov cld movslq sub je xor jbe retq movabs imul rex.W mov (bad) (bad) lods ja mov lods sbb sbb rex.WXB stc and mov retq or jg rex.WB jo movslq movsl mov xor ja rex.R mov gs fcmovb fildll cs and mov rex.WRXB gs lea sub data16 sbbl add (bad) add add int je pushfq shrb xchg pop (bad) sbb add loopne mov faddp movsb xor mov or loop retq add lret stos sub sbb sub add mov movsl nop jns jmpq jb,pt mov (bad) xor jle test jae pop or jl lgs subl mov (bad) mov in scas lods cld push sti (bad) xchg movabs fwait and rclb rex.WR lods fadd in retq lahf mov shlb sbb (bad) rex.RXB adc jbe rex.WXB xlat insl lods (bad) mov bnd retq mov movabs sub hlt or add adc repz (bad) sbb (bad) pushq adc cld cmp lods lods movabs mov and adc rex.R jge ds mov clc xlat (bad) lods rex.X lods xchg xlat es jb rex.RXB mov (bad) sub pop (bad) in in movabs repnz sbb rorl mov add int3 jbe mov lods lea fisubrl (bad) sub cld or adc cmp mov rex.WXB mov (bad) (bad) (bad) lods lea cmp pushq fwait (bad) outsl loop mov rex.WRB es jb mov pop (bad) insl movabs rex.R jmpq fcoml lods data16 cmp (bad) test leaveq cmp loope sbb fisub xor lret lock jle sbb mov (bad) cmp (bad) stc lods rex.WX push add (bad) (bad) jnp add lods stos (bad) mov test mov cmp jbe pop mov movsb mov subb cs lods test jle je or scas pop clc mov xor shrl movl rcll cmpsb out or jp rex.XB adc adc lods fisubr fmul or pop test adc mov xor (bad) push lret jrcxz lret pop cli add lods cmp push (bad) in lods xchg movsl sbb scas mov (bad) jle (bad) jbe cmp lods stos stc andb shl xchg sbb movsb rex.RB retq push mov cmp sti out (bad) push jl callq mov xchg jnp out rex.XB fisubr rex.WXB icebp lods (bad) lods popfq pop rex.R push sub cmp test (bad) mov sti test (bad) stc js in add popfq movslq mov in mov cmpsb adc lods add mov push in mov (bad) jmpq movsl and (bad) (bad) lret movabs (bad) adc insb sti xor shrb clc mov lods add ss pushq xchg imul lret pushq (bad) es rex.X mov (bad) mov jp lods xchg retq rex.XB cmpsl mov sbb cs cmp (bad) callq push (bad) addr32 sahf lods shrb test add in (bad) cwtl mov and scas sbb jl clc sub loop lea xor lods ffree sarb pushq fisubl mov adc jo (bad) (bad) mov (bad) lods lods mov adc sti imul push or lods ljmp xlat mov in cwtl jl or mov and rex.R add add movsl sbb sub sbb xchg insb lods (bad) jne,pt cmp (bad) shll (bad) lods negb xchg push lock jrcxz add rorb push lahf pop mov mov rex.RXB lods out xchg (bad) rorb sbb lods in stc (bad) cli rex.XB rex.RXB rep lahf (bad) rex rex.WX movabs stos js fmull sub mov sub cmp adc sti lods (bad) rex.WRB push callq repz rex.RX sub ss (bad) subb lods adc sub mov cwtl adc adc (bad) sub (bad) mov sahf rex pushfq add roll or sub adc (bad) mov icebp shl (bad) and mov callq jle in lods movslq lods (bad) movabs out lods mov sbb xor (bad) movb mov icebp out cld sub push rex.R pop (bad) jns in (bad) (bad) and stos pop insb sbb test pushq xlat sbb retq or xchg mov lahf cmc cmp xor rex.WRX fistp or insb or insl (bad) sbb test retq or cltd xor (bad) (bad) cmp outsb mov lods imul and rorb and mov mov es cmc roll rex.R (bad) enterq lods data16 test adc xlat cltd lods and cmp (bad) out cld mov scas xchg outsb cmp loopne adc leaveq mov lods out xor sahf hlt rex.WR (bad) (bad) cltd pushfq fldcw lods ss xchg cltd cmp out enterq lods (bad) out icebp add sarb test callq cld or shrb lea lods outsl gs pop lock fisubr pop sub lods in (bad) push scas mov add movsb (bad) imul rex.WRXB lods jge xor hlt jmpq nop pushfq pushfq fdivl sub lea fcmovu in insl rex.WR sar out jmp xor insb scas sub fwait adc xor test or lods jb out enterq fs mul adc fcompl or insl mov sbb lods or rex.XB mov in out lods (bad) adc pop sbb adc lods mov cmp pop insb in rex.B rclb rex.WXB fwait sbb cld (bad) movabs lods add (bad) fcomps cmc pushfq loopne cltd lods in rex.WX sub add mov (bad) (bad) rorl mov (bad) cltd xor test jb enterq lahf fildll xor rex.R pop sub pushq xor jbe scas stos fwait jns sti pop movsb push movabs jb test sub ss scas (bad) loop je pop fldt sub scas (bad) out loopne int lahf lods rex.WRXB xor (bad) push insl (bad) rex.RX shrb jmp lods insl cmp imul imul mov movsl xlat xchg std loopne lods lret fwait (bad) sub loope js gs test hlt enterq data16 in lods or rcrl jnp (bad) stos stos mov pushfq rex.X scas (bad) stos out js rex.WX xchg mov callq stc sub jmp test add cmp lods mov cmp xor mov imul jae (bad) xchg jge sub cmp adc jnp enterq lods outsl leaveq enterq (bad) out sub lods rex.R xor lods sbb xorl xchg (bad) lea rol (bad) clc xchg rex.B (bad) test loopne cwtl enterq pop (bad) clc lret lret xchg sub adc xlat int3 mov insb stos sbb fwait imulb or jg loopne mov insl int3 insb xchg and pushq scas mov movabs scas cmc scas push enterq jg mov cmpsl sar xor (bad) adc (bad) pushq outsl rex.WR je (bad) (bad) int3 lods retq in rex.WRB lods mov stos add pop retq imul and fidivr xchg cmpb jne movsl test movsb movabs sub add cmp cmp movabs mov ss or lods mov adc lods (bad) loope xchg adc adc int je mov xchg xchg and insb loop (bad) push pushq mov add lods mov (bad) mov mov (bad) pushq or cmpsl or or (bad) jae adc (bad) cli mov rex.WB (bad) mov rex.X sbb adc lods pop (bad) xchg xchg adc rex.WRXB fs sub not mov or mov xchg lods int (bad) rol (bad) rex.WXB int3 or int3 (bad) (bad) lods lock lods jp mov (bad) lods leaveq jne (bad) js mov loop outsb sar jg movabs sarb mov sub (bad) sbb or repnz ja fadd cmp xor mov lods adc add in jo popfq movabs sbb int3 (bad) lods rex.WRX (bad) stc lods scas mov xor adc imul fstpl mov vpunpcklbw rex.W rcrl int3 out pushq fsts lods (bad) cmp retq xchg int add lods fsubr (bad) pushq xor mov cmp mov rex.RXB (bad) sub retq lock stc imul (bad) icebp rex.WX cs xor je mov (bad) (bad) lods repnz lods callq add adc pop (bad) xor lods (bad) retq (bad) fisubl int3 fwait sub mov or imul lea (bad) push leaveq movabs int loop add sub or icebp pushfq cmpl mov push xor adc sbb std (bad) fwait loope rex frstor in cmp add loope out popfq shrb rex.WR in rex.RX rcrl lods pushq and sbb mov lods rex.R popfq rex.WRB (bad) xlat scas retq jmpq stos (bad) in (bad) lods (bad) lret xorb (bad) and movabs jns enterq scas push cmpsb popfq or loope cmp rex.W xor sub shll popfq or adc rex.WX rorb lea shrl (bad) (bad) (bad) pushfq stc insb sub clc (bad) insb sub test (bad) (bad) test roll mov xor repnz push and rex.XB (bad) (bad) (bad) pop movslq sub cmp cmp mov fist sarl (bad) rex.RX xbeginq pushfq xor lods out ror pop and int sub rex.WRB test retq imul in mov shrb add icebp loope jb xor pop sbb test cmp or mov test sbb mov cld sahf jg xchg jg,pn and mov fnstcw xor push xchg jne (bad) xchg add lods add loopne mov adc lods (bad) mov lret negl add retq (bad) int3 (bad) (bad) insb ss lods mov sub mov movslq cmp lea and (bad) pop jmp (bad) mov (bad) mov repnz or (bad) jne cmpb or orl lea fadd sahf lods fucom (bad) rol (bad) lret notl fimull (bad) pushfq stc jmpq retq imul lods xchg mov rex.WXB jb jle mov rex.WRB repnz fs test and mov vpsllq ficom (bad) cmp or pushq mov xchg push lods (bad) in jo (bad) (bad) lods lods (bad) stos jb sahf sbb popfq pop rex.WRXB repnz xor sub jns xor add cmc movabs or scas es fwait shrl pop sahf rcrb test push (bad) jns insb or and or ficom roll lods pop (bad) add (bad) sbb mov jae mov (bad) in (bad) (bad) fnstenv (bad) or insb dec (bad) rex.WX movabs imul xchg mov (bad) cmpsl je cmp lahf stos jbe or in and not rorl lods push lahf in xchg sub (bad) cmp js fwait popfq or xchg jb or in (bad) or mov scas scas out cs adc and stc enterq shll cmp mov mov rex.B cli rorb or lea insb bnd sbb (bad) retq lods (bad) in and nop (bad) pop sub movsb or fldcw cmp lods mov in xchg lret (bad) and cmpsl rex.WR fsubl sahf clc cmp jmp pop in repnz (bad) repz xchg lods mov in xor movabs ljmp test (bad) (bad) movabs insb bnd repnz (bad) and xlat rol lods and jbe jnp sub test std lods or repnz int3 repnz or add iret scas jl (bad) (bad) insb ss add mov sub and pop int lods mov add imul sub or adc add and mov lods fdivl loope enterq popfq iret lods sti (bad) fsts (bad) (bad) adc or popfq push lods and xor pushq push sub jmpq movabs scas (bad) jmpq mov and sbb pushfq rex.RB rex pop mov (bad) clc (bad) test xchg movslq mov (bad) mov je imul rex.WR add push or or fbld (bad) lods adc xor sbb lret rex.RX (bad) rex.R (bad) (bad) decb (bad) (bad) (bad) (bad) test and test add sub lret push in rex.W int3 movabs insb sub (bad) hlt movabs or mov jl add mov and popfq and or retq cli pop repnz and or movsb or adc movsb mov retq mov mov xchg rol test fistpll xor rex.RB jne push jb movslq jae outsl fs gs mov jns not movsbw lea mov jmpq add jmpq push mov lods stc clc ror jmpq jmpq je bt jmpq sub lock add adc mov sbb add int xchg cld out mov (bad) mov fs je rex sysenter mov out fsubrs leaveq and sahf sti out lods rex.WB (bad) cmp in bswap add pop nop xor pop (bad) icebp and cmp sub icebp out (bad) lea rex.WRXB or adc rorb (bad) xor pop movabs (bad) sti adc (bad) (bad) std ds mov stc xor cvtps2pi (bad) movabs mov pop xor (bad) jmpq sub lahf add xor adc (bad) (bad) decb movsb sbb (bad) icebp cmp out mov cmp cmpsl test add (bad) (bad) (bad) jnp mov (bad) movslq (bad) pushfq rex.WRB jrcxz in mov stc xchg vmovaps rcll in rex.WXB rex.WRX mov rex.X cwtl jl mov sub cmp cmpsl xchg jbe fs xor push mov pushq icebp lock add add cmp add sub and mov cmp and fisubrl xorl retq scas (bad) js adc lahf pop rex.RB movabs (bad) push (bad) xor popfq and sub in adc mull (bad) cwtl pushfq retq icebp movabs xchg sbb sbb cmp sub push cmp test notb jno sbb mov sub fs rorb cli add jmpq jmpq add rex.W gs jo gs jb jns je rcl cmc sub add cmp inc neg sbb sub not shr shr shr shl shld mov test add cmp seta jmpq jmpq mov setle lea jmpq add rex.WB gs jne addr32 jb jae outsb je add push gs insb imul rex.R je add xor add add push ja je pushq je jo add push jb movslq jae xor jb je jmpq adc jmpq je rcr lea bt mov bsf (bad) testb loop shrd add bt not mov stc cmc stc jmpq add rex.RXB gs jb movslq jae imul (bad) je outsl outsb add (bad) xor fadds add movabs or add jmpq jmpq bswap movzwl movzbw not jmpq jmpq callq jmpq je ror ror stc shld push lea sar movzbl btr mov inc xor dec mov sub movzbw movzbw lea lea lea jmpq jb cmc test cmc cmp jmpq adc retq stc cmc cmp movsbw movzbl lea movsbq lea bswap bswap jmpq jmpq jmpq je jmpq jb bt cmp jmpq add rcl dec neg inc sete mov setns dec dec inc and xor setl not jmpq add rex.RXB gs imul push jo movslq js add in and mov add callq jmpq jmpq not stos jmpq add rex.RXB gs outsl outsb jae insb gs add (bad) pop add jmpq jmpq jne sar dec clc mov bts rcl rol sbb sub sar mov cmp cmc bt stc sub test jmpq pop jnp and jne mov (bad) div xor test insl cmpsb movabs gs or (bad) adc mov cmpsl cli subb mov scas lret sub and in rex.WB (bad) (bad) (bad) (bad) jl shl (bad) fbstp xchg adc test add mov (bad) rex.WRX movslq mov (bad) mov mov fldcw sbb (bad) mov push (bad) insb imul addr32 movl retq xor cmp cmp jmpq jmpq jle push sbb or retq mov (bad) adc movabs and rex (bad) lret cli hlt jmp adc add movabs adc push outsl fwait and test (bad) lock push es add (bad) (bad) (bad) pushq sub jno cmp add or or movabs mov (bad) sub cmpsb test outsb or hlt add rex.WRB rex.RB rex.B test rex.XB fidivrl (bad) adc ja pushq (bad) rex.WRXB mov (bad) mov add jno rex.WB (bad) mov lret and fs cmovnp (bad) (bad) cltd rex.WR stos rex.WRXB cmp callq enterq adc fdivrs rol (bad) cmp rcl in (bad) (bad) (bad) clc jbe sbb (bad) outsl adc leaveq je lods add add pop callq stos jl xor (bad) pushq rex.WXB rex.WRXB (bad) rex.WR std (bad) add repnz (bad) (bad) (bad) jg mov scas test rcl or test add add add add sbb rorl jb stos mov mov ja adc rex.X lret loop sarl cmp mov cmp mov jbe or callq sbb cmp adc popfq (bad) pop cmp or test repnz sub sbb xchg jne cmc mov neg and mov or shr mov bt sub jmpq xchg jg mov (bad) retq rorl add sbb packsswb pushfq ds jg sbb rex.WRXB rex.WXB xchg mov rol rex.WXB or je stos mov rcll fsubl jns scas sbb rex.X es (bad) add fnstenv or jae xchg xchg (bad) (bad) (bad) (bad) sti mov or (bad) (bad) cld (bad) mov sub mov out mov loopne mov rex.R (bad) xor mov rex.WRB rex.WRX sti rex.RB out sbb jnp ja lret mov fsts je loopne (bad) (bad) (bad) decb add add or push jne jg sub adcl in rex.B sub cmp cltd xchg pushfq cmc fs and push sub sbb test mov stos cld cmp jns mov mov lret imul cs jae xchg callq bsf bsr setge add ror ror clc mov test clc cmpb jmpq jae pushq jmpq mov cmp test jmpq lea setle movzbl jmpq push xchg (bad) (bad) or out rex.XB add mov icebp in xchg rex.WX test cli or (bad) rex retq mov adc int rex.RX pop xchg adc callq or (bad) js push rex.RXB rex.XB xchg repz (bad) sahf mov add jae jns (bad) (bad) (bad) (bad) std (bad) jmp sti retq (bad) add add adc mov mov (bad) divl lock rorb jle rex.WRXB retq add (bad) jp and sub cmp pop mov movabs shll lods (bad) ficoml (bad) xor (bad) xorps mov jg movslq adc jmpq outsb cmp (bad) and (bad) jns sub es sub jno sub (bad) rex.W and (bad) insl pop pop test nop and lea sbb sarb sub xchg (bad) xchg in out xor mov xor add stc mov (bad) test mov jns (bad) ror mulb test stos lods mov fcomps jnp jmpq jmpq rex.WR mov fnstcw loop jge and jnp jp rex.RX (bad) je mov xor (bad) addb cmp popfq jg (bad) (bad) and retq outsb out (bad) xor int3 (bad) cwtl pop and (bad) rex.X pushfq (bad) lods addl movsl (bad) (bad) pop pop cmp sbb pop fwait std rex.WRX mov or xorb data16 retq add test jae (bad) movslq xorb in mov mov subl test (bad) (bad) div xor (bad) out (bad) and xor test sti adc imull cmpsb jp (bad) out pop movsb imul or xchg test ss xor sahf xor (bad) divl jmpq retq test (bad) cmpsb rex.RXB rex.WRB out and sub or rex.WRB loope (bad) pop test (bad) (bad) cmp mov mov jmp (bad) xchg mov int push rex.RX cmp adc xchg mov (bad) mov cmp rex.RB mov xor add push mov jp xchg retq sub int (bad) int xchg ds (bad) jmpq out (bad) sub or mov mov lods fwait mov or imul imul mov (bad) mov movslq (bad) movslq test cmp out fiaddl scas imul pushfq lret mov and cmp (bad) mov rex.RX pushq jge (bad) nop mov fdivrp callq sub icebp fldl push xchg decb (bad) (bad) (bad) (bad) test fwait xor out rex.X sub stc add in jg (bad) (bad) and rex.R loop js pop enterq push test sub insl enterq movslq push hlt scas ds (bad) pop cmc or callq jbe mov mov xor (bad) adc rex clc jmpq jmpq jne bts shld mov test sub jmpq ja jmpq je cmp clc clc test add stc jmpq lea lea movabs not jmpq je movsbw sets push adc setp sub mov movsbl btc btr sub movsbl movsbw lea jmpq add imul pushq imul (bad) insb insb jae jmpq stos xchg sbb add int3 jb rex.WX cwtl rex.WRXB and popfq rex.WR data16 movl jo adc cwtl rex.RXB push mov jrcxz cmp sbb fnstsw sub lock (bad) add std cmc rex.XB rex.RX enterq (bad) add (bad) adc std xchg in jg add add or cltd and (bad) rex.WX mov mov sub push (bad) retq stc test rex.WRX (bad) (bad) neg pushfq jae data16 rex.B outsb sbb jb testl (bad) pop pandn jmp jrcxz push lock jo lods retq xlat js cmp and mov xor jmpq pushq jmpq jmpq data16 add in jle push callq push or (bad) scas insl xchg movabs cmp fs addr32 (bad) push je popfq cmp rex.B mov cmpxchg nop (bad) xchg retq mov jge ror mov sar push (bad) push lock lsl xor mov (bad) test mov out (bad) rex.WRXB popq (bad) mov pop (bad) pushfq test lea rex xor in fsubrl (bad) xchg hlt int3 rex.WB repz int3 sub (bad) (bad) decb (bad) (bad) (bad) (bad) nop andl sub movabs rex.RX (bad) or (bad) or adc cmp pop ja icebp sbb (bad) (bad) lock lods leaveq stos fdivs shrb (bad) sarb movabs movsl je pop repnz sub rex test and rex.WXB cli movabs rex.WRB lods sar shl fildl cmpsb mov jg jle ss push jns xchg sub jmp pop push sbb pop cmc (bad) repnz (bad) cmpsb xor rex.X mov sub mov (bad) movabs mov mov (bad) (bad) (bad) decb callq mov (bad) cmp (bad) add lea sub mov push jge out mov xor add pop push (bad) mov lret or pushq imul in push bnd rol or mov insl cwtl jrcxz jmpq test jmpq test jmpq neg push bt neg xchg bts mov (bad) hlt add in sbb enterq rol push bts push rcr bt push rcr mov cmc cmc jmpq bsf xor mov add test mov jne push shl and sub shld mov neg not sub jmpq add rex.RXB gs imul add fstps (bad) movsb add jne setb lea lea mov jmpq add rex.RXB gs jb movslq jae gs jo jmpq jne clc bt test stc movb test clc test clc test jmpq not mov jmpq jmpq pushq jmpq add rex.RXB gs rex.WB imul add jmpq movzbw mov ja callq jmpq je stc add stc test jmpq jmpq add rex.RX gs imul icebp mov sahf (bad) xchg sbb movb (bad) cld xorb cmp cmp mov jnp xor outsb rex.R and je mov adc adc sbb mov cltd iret push fcoms adc retq sbb xchg rex.WRX rex.WB rex.WXB sahf (bad) test in fldenv rex.WR loope add pushfq leaveq lods std jg sbb mov ss mov pop pmaddwd loop (bad) leaveq std rex.WRB movabs add int mov xchg sti mov cmp mov fisub cmpsb mov (bad) jb cmp jae callq fs (bad) int rex.R jmp rex.WRX xchg jg add and add add jb push hlt (bad) mov cmp lahf rex.WRX xchg sbb add xchg rex.RXB rex.X (bad) fcom cs callq fucomi int3 mov nop jle adc cs fneni(8087 (bad) sub jb shrb sbb mov cmp and mov push stos or (bad) negl sbb (bad) (bad) std or add std fsubp (bad) sub or (bad) mov lods sar rex.WRXB pop adc cld lods (bad) mov (bad) xchg scas sbb adc scas xchg sti gs lods (bad) (bad) push fcom mov loopne adc cmc (bad) add (bad) jb jl fnstenv xchg add add or callq pop (bad) (bad) fadd push lock cltd (bad) fldl sbb xor rex ror mov inc mov lea shrd bswap sub btc mov bt sub stc bt bt pushq cmc test bt cmp cmp jmpq jmpq jae jmpq jmpq jmpq jmpq mov xlat rex.B jo std lods andl hlt icebp xchg rex.WRX mov fisub int add mov testb (bad) movsb mov out in rex.WRB rex.R rex.X nop popfq gs cmpsl cs int3 test retq rex.WB xchg xchg (bad) jns (bad) movabs jnp mov pushq jnp (bad) sahf rex.RX movsl lods jg sbb or int (bad) (bad) (bad) decb (bad) (bad) (bad) ljmp adc (bad) int3 test rex.WRB sbb pop xor mov test (bad) (bad) jbe (bad) (bad) fnstsw in push movsb mov jge lods (bad) pop xor xchg jge jle inc xchg callq fldt cs imul repnz mov movabs fmull gs (bad) push ficom pop adc (bad) mov rex.RB cltd insb mov cmp cli loopne cmp mov jns or (bad) or xchg jnp xlat cld sub (bad) rex.X rex.WXB sbb push lock jmpq xor adc rex.RXB rex.XB test cltd pop outsl insl cli pop repnz out cwtl int xor xorb and xchg rex.WX ja outsb not sarb rex.WRB jnp jo rex.R rex.X repnz (bad) (bad) decb (bad) (bad) (bad) ljmp adc jl cltd sbb cmp (bad) mov cmp (bad) imul jle cmp add add fcmove pushq add ds jo (bad) mov jl push repnz movabs jae jl (bad) lret jmp mov cmp (bad) negb (bad) (bad) rex.X xlat sbb movsb (bad) jp imul imul fild movabs mov fs je retq jl xorl push data16 sub idivb mov sbb mov js sub push cmp add insl or push (bad) leaveq add add or (bad) (bad) sti mov xchg (bad) and jge jns fmul data16 outsl rex loope xchg pop scas sbb jl rex.WRB fildl je stc sbb cmp imul mov or (bad) mov xchg callq in cmp je xor fs mov cmp jnp pushq (bad) lods sar xor (bad) fisttpll jrcxz mov sbb lock cwtl rex.RX ds pop pop push mov cli pushfq rex.RXB push (bad) (bad) jg mov insl enterq sub sub cmp jle pop pushq mov push mov sbb int3 (bad) xor adc pop mov in mov xlat push mov (bad) (bad) sti mov cwtl test (bad) (bad) (bad) sti pushq sbb (bad) jmp fidivl push jb rex.R decb cs xchg movabs popfq xor fistpll add add lea or (bad) rcrl insb lods addl scas mov xchg push cmc xchg notb xor mov cmp pushq jmpq jne lea cmc movzbw test mov bt jmpq bt cmc stc test jmpq ja jns jmpq jne movzbw cmp sbb sub rol mov shl add clc or shr mov test stc jmpq jne or shl sub inc mov shr or xor shl add sbb mov cmc stc bt bt test jmpq jmpq add rex.RB jne push gs jne movslq (bad) insl gs add andl add fcom (bad) not mov stc rol add seto mov mov mov jmpq jl callq jmpq jmpq je jmpq je jne bswap lea movsbw jmpq bswap pop jmpq jne shld shl lea xor or adc stc mov sub setae add sbb stc clc test mov stc test jmpq mov not movzbq lea pop retq je stc bt cmp cmp jmpq dec cmc jmpq jmpq sub jmpq (bad) mov (bad) (bad) rex.RXB out stos lret jno sub stos or lods xchg adc outsl pop pop jnp test sub rex.WXB leaveq (bad) (bad) pop pop mov (bad) sub adc and xchg xor jne mov push subl movabs scas jrcxz addl xchg mov mov lret stos cwtl mov (bad) mov and push push cli sahf sti (bad) xor mov xor (bad) pop cmp sub push lock stc stos adc icebp test ds int (bad) mov and add pop xor add add je jb movslq jae imul (bad) je outsl outsb add rex.WRB movabs test cmc add jmpq shr add jl and sub rcr shrd lea inc add neg btc dec mov neg test neg or mov test test bt bt repnz jae jne stc cmc movb bt test test je je and rex.W icebp btc push or mov ror sub movsbw movzbw lea jmpq add add add cmp add je add movabs test test test test test test test test test sbb rex pushq test enterq fsubrs or sub add sbb xor scas push scas pop scas (bad) scas pushq scas add add add add sbb test js mov mov test or cmp pushq add add add stos enterq fsubrs lock clc stos add sbb xor stos push stos pop stos (bad) stos pushq stos subb stos movabs stos enterq fsubrs lock clc stos add lods and lods lods rex.W push lods pop lods (bad) lods pushq lods subb movabs lods enterq fsubrs lods clc lods add sbb xor lods push lods pop lods (bad) lods pushq lods subb lods movabs lods add add add andb movabs add movsb rex push movsb (bad) movsb jo andb shlb add xor (bad) movsl jo andb movsl shlb movsl add xor (bad) cmpsb jo andb cmpsb shlb cmpsb add xor (bad) cmpsl jo andb cmpsl shlb cmpsl add xor (bad) test test test test test test test test test test test callq test adc sub stos rex.W push stos pop stos (bad) stos jo js subb stos movabs stos fsubrs clc stos add sbb push stos pop stos mov add or add (bad) movabs mov movabs movabs callq movabs and movsb rex rex.W push movsb pop movsb (bad) movsb pushq movsb andb movabs movsb enterq fsubs movsb clc movsb add sbb xor movsq push movsl pop movsl (bad) movsl pushq movsl andb movsl movabs movsl enterq fsubs lock clc movsl add sbb xor rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor mov mov add add add movabs movsl sub rex movsq push movsl pop movsl (bad) movsl pushq movsl andb movsl movabs movsl enterq fsubs lock clc movsl add sbb xor pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor cmpsq push cmpsl pop cmpsl (bad) cmpsl pushq add or add add add add add movabs js mov mov test add add add cmp push movabs js mov movabs movabs test mov mov cmpsl shlb callq cmpsl add sbb xor rex.W test test test test test test test test test test test test test test test test test test test test test test and cmp push test pushq test nop test test mov mov test loopne callq test adc sub stos rex.W push stos pop stos enterq or mov mov mov stos shrb add add movabs js andb movabs and movsb callq movsl xor movsq push movsl (bad) movsl add rex rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor cmpsq push cmpsl pop cmpsl (bad) cmpsl pushq cmpsl andb stos sbb xor stos push stos pop stos (bad) stos pushq stos test add add add lods add sbb add xor rex.W push scas pop scas (bad) scas pushq (bad) add add add movabs add lock and movabs mov add add shrl add add mov add add add movabs add movsb and stos add add add add add stos callq stos add lods and lods lods rex.W push lods pop lods (bad) lods pushq lods subb movabs lods enterq fsubrs lods clc lods add sbb xor lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas movabs scas enterq fsubrs add add add loopne callq movabs and push movabs callq movsb add sbb xor movsq push movsl pop movsl (bad) movsl pushq movsl andb cmpsb (bad) cmpsb add add add xor mov cmp cwtl cmpsb mov cmpsl sbb xor callq test cmp pushq test mov test or cmp (bad) stos pushq lods rex lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas shrb scas loopne callq scas add xor add add lock sbb xor movabs callq movsl push movsl (bad) movsl mov fsubs (bad) cmpsb dec rol sub push dec and neg push shl add push jmpq lea lea jmpq callq jmpq jne add ror sar mov bt bt clc clc add clc stc clc movzwl xor sar inc mov cmc clc add bt clc stc clc mov cmc clc cmp jmpq jne setae mov jmpq jmpq add add jne test clc movb stc test jnp je inc shl push bsf sbb xadd adc mov and sub jmpq add rex.R gs gs rex.WRXB pushq movslq xor stos and cmp leaveq and scas in fadds std (bad) movb cli rex.WXB rex.WR jbe pop xor std rex hlt xchg jbe xchg cmpsl out or movabs (bad) mov out cmp lock add (bad) mov rex.WB rex.WRXB fidivr (bad) insb sub or cmpl rex.XB loopne cmovle movsb std (bad) (bad) sbb mov cmp out (bad) rex.RB cmp add sbb sub cmp rex.RXB (bad) int (bad) or mov jg std pop lock sub clc ffree (bad) stos mov sub cltd (bad) loop mov cmp movabs rex.WXB xchg add push gs imul push xchg or sbb addr32 fst cmpsl sbb scas rex.RXB insb rex.B rex.WRX rex.WX rex.RX or mov addr32 jns add adc sub fnstsw xchg ss fisubl fs sti and mov mov (bad) or insb (bad) (bad) (bad) jno (bad) push clc pop (bad) pushq fbstp (bad) xchg fs pop cmp rorl or cmp and xchg repnz mov sub in mov (bad) add decb (bad) (bad) (bad) inc test add imul lret jmp rex.R jmpq leaveq sbb cltd imul xchg in xchg sub retq popq rex.WR (bad) pop mov imul scas in je mov and mov rex.WR (bad) lret (bad) add jne setl jmpq jmpq jae clc test clc cmp jmpq jp cmp icebp fldcw fdivr in mov (bad) fidivr (bad) jp sbb (bad) (bad) (bad) repz pushq outsl nop pushfq cmp loopne xchg loopne lret sbb xchg frstor cltd lock movabs andb (bad) rcrb jmp and test adc mov jg rex.RB jne jae test sbb or cmpsl movslq push callq jg imul adc mov popfq test adc pop add int3 jrcxz (bad) sub mov icebp xor (bad) (bad) (bad) decl lsl (bad) rex.B in cmpxchg push (bad) pop (bad) mov or (bad) rex.WXB rex.RX repnz stos int3 (bad) add addr32 xor (bad) mov (bad) hlt adc mov or xor (bad) mov fld xchg int3 movabs mov mov rex.WRB (bad) (bad) cmc out cmpsl (bad) sub add rex.WB rex.RXB repz std in rex.WRXB js mov movslq mov fidivrl adc jo sbb xlat adcl sbb push xchg or lods xchg push (bad) (bad) (bad) decb mov sbb test test sbb rex.WRX cltd mov (bad) jnp cltd (bad) cmpsl scas movabs popfq test iret scas add push je rcl movsb cmp rex rex.RXB repz (bad) (bad) cmp and push cmc mov sbb mov movabs in adc sub leaveq movslq rex.XB rex.WRX cmpsb jae jmpq jmpq jmpq ja bt bt bt clc imul bt cmp test jmpq jmpq push sets not jae lods bt cmc bt cmc ror jmpq jmpq add rex.RX outsl ja add movabs jmpq ja setns sub adc data16 mull out add lea clc sbb cmc mov sbb mov stc repnz jmpq jne ja sete pop xchg xchg pop xchg not movzbw pop sete jmpq mov pushq jmp adc in xor rex.WR int3 mov ss rex.X xor fwait retq std incb rex.RX or xor cwtl and (bad) movabs test (bad) or iret repz fidivr mov sbb sub out rex.B cmp xchg clc (bad) rex.WRB add movsb mov push push jnp fsubr popfq mov add add jb outsb add test add stc cmp stc movb stc jmpq add rex.B fs jae push outsl imul jb jbe insb gs jmpq add push gs gs jae rex.WRB gs mov bts mov clc bt and clc test jmpq mov movsbl push shr jno bsr ror mov sar bt sub movsbl movzbq lea jmpq pop jmpq add push je rex.WR outsl imul jne movslq outsb rex.RB je jns setg mov jmpq jne clc shl or adc xor bsr btr mov cmp neg add or neg setg mov jmpq jmpq jmpq push push push rex.WB cs rex.WR rex.WR mov es lea lea jmpq push rex.W rex.RB rex.WR xor cs insb add test mov leaveq wrmsr jmpq enterq xchg jge mov bt movsbl sub setge setae movzbl movsbq lea jmpq bswap bswap mov bswap movzbl lea lea bswap xchg mov setle mov setle mov mov not movsbw lea jmpq je clc stc sub clc bt cmp test cmp jmpq callq cmp or jmpq jmpq je cmp sub clc jmpq cmc test jmpq ja callq clc stc or jmpq je mov lea jmpq pushq jmpq je cmp stc cmp test cmp jmpq mov jmpq xor jmpq add rex.RXB gs outsl fs gs outsb fs add (bad) andl cmc stc stc cmp jmpq sti jmp rcr int (bad) (bad) adc or sbb repnz (bad) fiadd lods data16 or add clc fisttp in (bad) jrcxz jle (bad) mov or mov test addb (bad) push rex.WRX push movabs and jne sahf xchg cli ljmp vmovshdup (bad) (bad) (bad) std or cmp (bad) (bad) (bad) std xlat clc (bad) ss (bad) push cli xchg sub movabs sub in mov xchg sub or pushq (bad) pop ds add add mov pushfq stos mov (bad) and mov sbb (bad) xor (bad) movsl (bad) lahf movabs cltd lret pop rex and add outsb hlt and xor fwait andl xor cld movabs jae btr xadd clc mov and mov neg sub shrd mov test jmpq jmpq pushq jmpq pushq jmpq add push push rex.B rex.WB movslq cmc bt cmc cmp retq jae shr sbb cmc shl mov lea inc mov sbb rol rol add mov cmp jmpq callq test cmc stc cmc or jmpq callq cmp cmc bt clc sub jge jne jmpq add push imul jb add mov and jb test pop mov xchg sar and pop pop xchg push lea pushq mov or pop xchg adc mov xor in movabs cs sbb rex.WRXB pushq or fiaddl movabs (bad) enterq fucomi add shll loope scas add rex.W sbb xorb add (bad) in add (bad) (bad) decl movabs jne sti xor mov (bad) fadd jbe cli scas cwtl xchg xchg out (bad) xchg mov pmaxub (bad) xor rex.R neg jbe icebp fcoml movabs jbe cli jg add cld push xchg push (bad) xchg sub xchg jne xor lret pop (bad) pop (bad) mov data16 or and imul add cld rcr jbe xrelease add jbe std xchg test imul xchg mov (bad) (bad) js std out add (bad) adc sub add (bad) fstps sbb imul movsb ja std xchg jp cmc mov add (bad) jmpq add rex.RX cs ss insl add (bad) rex.WRX stc sub sbb xchg mov (bad) leaveq adc mov int out xchg add mov movl (bad) jl jp add test movabs cld je stc cmpsl pop (bad) fldl (bad) popfq lock movsb lods nop pop repz movabs xchg leaveq jbe cmpsl idivl sbb pop (bad) in rex.WX (bad) push adc cmp mov pushq movabs add pop (bad) (bad) pop mov insb mov (bad) lock jl cli xchg adc add mov (bad) sub xchg cmp (bad) push jg add jg cli retq scas jno xorb stc fcomp or (bad) or (bad) jg add clc rex.B clc js icebp xor sbb xlat nop xchg popfq (bad) out mov (bad) (bad) add sub (bad) and addl xorb (bad) js addl mov cmp rex.XB jo mov fcmovnu shr ljmp lods adcl mov cli jns add jmpq fst sbb rex.RXB es adc mov cmpsb cmp (bad) jge std rex.W (bad) pop (bad) push jnp (bad) int3 in rex or push fnstcw or cwtl shr adc test push sub push (bad) add xchg cmpsl mov cmp push (bad) (bad) iret test std in cmpsb cli rex.WXB movabs movslq je and rex.WX imul (bad) jg sbb nop sarb add sub xchg mov adc rcr bts neg add shr btc mov test cmc jmpq dec jmpq jne test jmpq add rex.RX jne pushq rex.X data16 add lret jae add or add jmpq test jmpq push rex.RB push rex.WB rex.WRXB rex.WRX cs insb add pushq cmp pop shr mov outsl jmpq rorb test (bad) push stos push mov and mov cwtl outsb xchg popfq adc and (bad) xor (bad) mov adc lret ja (bad) out and cmp movabs callq fs je xor stos fs xchg hlt xor (bad) (bad) (bad) std or add (bad) (bad) (bad) incb xchg push rex.WXB and pop add ja rex rorb add add or mov adc outsl out mov sarl (bad) repnz xchg (bad) pop imul rex rex.B jge faddl ja adc (bad) jbe (bad) (bad) iret repz cwtl lret (bad) jo mov insb (bad) jno sbb cmc and sbb push test jbe imul bt cmc cmp ja jb test stc bt cmp jmpq test jmpq (bad) icebp loopne mov and xor int3 add out movabs adc mov (bad) lahf rex.RXB rex.X movsl (bad) jle pop mov cld repnz mulb rex.XB lea or sub rex.WRXB movabs jle (bad) fs rex.RB push icebp or xor xchg lock nop int mov (bad) int push test and jp js sbb stc sub sub rex.RXB (bad) (bad) decb (bad) (bad) (bad) (bad) test and insl rex.W (bad) movabs in insb enterq push or cwtl lea (bad) rcrl rex.RXB sub fidiv out sbb or (bad) pop (bad) pushq movslq sbb andl imul add rex.X insb fs jb jae gs imul jmpq jmpq jmpq add rex.WR outsl outsb push jae jb add mov add jmpq add rex.RXB gs outsl fs gs jae rex.WRX insl add test (bad) jmpq mov shld rcl jmpq jmpq add push je push movslq imul jb jb test test stc clc cmpb jne jne btc mov test add stc jmpq add push gs movslq pushq movslq lea jl adc retq jmpq je bswap bswap mov mov movzbw lea movsbl xchg lea not setl setg mov jmpq jne cmp jmpq add insb jae jb insl jo add test cmc decl add add push gs gs jae rex.R rex.XB add je je jb jne rex.WB outsw push add mov bt cmp cmp jmpq movsbw mov bswap pop movzbw not not mov mov movzbl movzbw movsbl mov mov not lea mov retq jmpq jmpq clc test clc cmp jmpq mov mov rcl add neg rcr mov clc test jmpq jne setns mov jmpq je cmc clc bt cmp jmpq add push imul jb je movslq add pop or fucomip mov sahf (bad) not not not lods clc cmc test clc add clc jmpq lea jmpq movzbw pop mov pop not xchg pop mov pop jmpq jmpq movsb mov test lods cwtl lods rex.WR insl lods pop js jl movslq insb jp (bad) xor mov int3 rex.WX sar cwtl subl js mov lods sbb (bad) (bad) pop scas test scas mov test movsb pushq sahf mov stos je sbb mov movabs rex.WX fs pushfq cwtl (bad) popfq pop sahf test movsb int pop mov outsl negb pop mov pop jo rex.WX (bad) xchg pushq sahf jle push stos jo sub cmp mov cs sbb mov pushfq (bad) rex.WRB movabs int3 imul movsb cltd (bad) mov mov shll int3 fimul je or jrcxz outsl lods rex.RX pushfq sub push in lea mov nop xchg lods xchg xchg jl jle js stos jp test outsb outsl pushq je jbe jo jno jae pop pop pop pop scas pop pop pop fs rex.W es add fsubrl scas (bad) test int int3 (bad) rex.WX mov rex.WB sub pushfq insb (bad) sub push (bad) in vcvtpd2dqy push sub mov cmp mov rex.WRX mov repz fisubrl pop test gs movslq xchg or in or sub (bad) rex.W (bad) add scas outsl pushfq or negb mov (bad) pushq (bad) sbb movsb jle (bad) add adc or loopne in fdivs imul lock in jle (bad) and pop sbb add movabs hlt rorb jle (bad) mov popfq leaveq mov add pushfq adc mov or in fdivl imul cmp rex.WR xor jl mov je insb xor iret mov or out (bad) add xor iret adc in in or rex.WR mov cli and xor iret mov adc callq (bad) (bad) adc (bad) (bad) sbb int3 stc push mov (bad) mov sbbl rex.WR mov jl mov mov rex.WRX mov stos pushfq (bad) adc jl sahf scas retq loopne loope cmpsb lods add add sub or pushfq xchg mov int add insb add lods sti callq or int3 add push (bad) (bad) orl shlb sub scas rolb movsb adc xchg scas mov xor lea mov push mov xchg mov xchg (bad) sbb rex.R movabs (bad) mov hlt jne movslq xlat pushfq test cwtl movslq xchg xchg push rex.WRXB (bad) xor pushq cltd mov (bad) callq mov es jl mov in sbb int3 rex.WRX (bad) or (bad) xchg xchg jl mov (bad) jl in jnp in outsl xchg jl int3 lahf mov (bad) (bad) rex.WRB add (bad) jbe mov lea sub jle test rex.WRB mov pushq xchg jnp lea bnd loope sub pop pop and pop xlat pushq lea mov xchg xlat xchg xchg and jns (bad) (bad) xorl mov (bad) add xor iret in sbb jl fs movsb xor iret in hlt hlt or (bad) test imul (bad) cld cmp pushfq outsl mov rex.R cmp nop je push pushfq sbb mov mov xor jne add movsb mov (bad) insl scas retq ja sub xchg mov cltd rex.WR insb mov hlt test loop and mov enterq mov sbb pop int3 rex rex.X lods test cmc cmpsl xor lock out fbstp int3 cld and jmpq lods (bad) add or (bad) (bad) lods jge fistpl outsl mov mov (bad) push and movabs rcr repz movabs adc (bad) push insl lods rex sti mov or outsb sub xor add (bad) push pop outsl rex.WRB shrl sub pushfq fwait push add (bad) bt callq fdivr sti fmuls repz movsl cmovg mov fwait mov sub je lods outsb or (bad) mov adc (bad) or jmpq (bad) data16 lods rex.WX rex.WRB in pop rex.WB (bad) data16 leaveq (bad) lods xor sbb mov rex.XB rex.WRX rex.WR xchg jo lods (bad) sbb ss pop mov (bad) leaveq jns mov lock lods (bad) lods retq jge mov rex.WRXB test (bad) lods jrcxz xor xchg sahf (bad) stc add lods fnop mov retq lods fdivl hlt push jmpq insb rex.WX mov roll scas or sbb or lea push or jo lods or sbb cmc add cld pop stos (bad) jns icebp cwtl (bad) push or mov sbb imul enterq (bad) rex (bad) mov insb pop gs (bad) scas cmp movslq adc lods xor (bad) pushq adc adcl adcl pushq fsub pop retq stos lock iret pop jnp add lods (bad) movsl xchg lods push ror ffree cs rex.R add (bad) loopne fs cmpsl cmp scas cld (bad) sub jns out rol mov or adc sub mov out lods rex.WRX popfq rex.WXB and cmp sarl push repnz cmp gs lods in loop addl and xor pop sbb (bad) (bad) movsb jb mov push stos sbb and fdivp test fwait rex.WX xchg sbb xor lods jae repz mov mov mov (bad) rcll and mov (bad) ss je pushfq mov mov xor mov fmull stc xor mov mov mov stc add movabs (bad) lahf stos test scas rex.WX sub adc mov add dec mov pop test pop hlt mov pop (bad) mov pushfq (bad) pop pushq movabs (bad) in mov iret insl mov mov int3 or mov mov insb and stos xor iret movsb sbb mov pushq movabs fbstp idiv sub test pop (bad) pop xlat popfq cvttps2pi mov movabs popfq sub pushq sub (bad) movabs xorb ror rex.WR movabs sbb testb scas jle (bad) lods iret rex.WRXB mov movabs hlt or or and (bad) sbb imul sbb lahf jle (bad) cmp imul clc or sahf in xchg mov mov jo lock lods sbb lret (bad) sub imul rex.B (bad) sbb (bad) jle (bad) loopne imul or movabs lods (bad) (bad) lods (bad) jge mov (bad) hlt int rex.WRX (bad) insl xor hlt or test vpmaxub xchg (bad) ds movabs jle enterq lods test imul leaveq (bad) test imul sbb out xchg xor iret rex.RX jno (bad) retq jno lods imul rex.X imul sbb iret movabs int3 sbb subb or movabs jle (bad) cli xor imul sbb lret movabs hlt adc imul orl jle retq iret rcrl xor (bad) lods add in add add (bad) ffree sbb add add (bad) and xor add imul retq sbb or or add (bad) push retq sbb or or add retq sbb or or add add or or add add add xor rex.WXB add add (bad) sti retq or or add add incb sbb (bad) rex.WR callq (bad) mov pushfq pushfq mov rex.B pop xor insb je scas xor pop sahf int (bad) (bad) int3 test je sbb and mov in pushfq mov pop scas sub sub mov pushfq lea insb test sub scas int pushq pushq int or clc and lods adc xchg popfq add imul push shl popfq xchg adc push lea cmc mov and (bad) cmpl jle lea pop loopne mov loop mov (bad) pushq enterq jge sbb imul (bad) jo xchg or xchg lret je enterq (bad) adc push ror movabs xor jl xchg cld xchg rex.WXB enterq mov mov pop mov movabs rclb repnz sub sarb sbb rex.WB (bad) and test mov outsb cmp insb xor js adc sub jns push pushq add sub pop clc enterq vmovdqa insl xor push mov rolb test mov fcompl movabs pop insl pop sbb icebp pop pushfq scas rex.B (bad) xchg (bad) outsb pop gs mov stos jne lea stos jne and (bad) (bad) fstpt imul mov enterq xor in stos mov rex.WRB jns out rcll pushfq sbb movabs popfq mov (bad) cwtl movabs (bad) add popfq pop xchg add xor push add repz std pop or sub mov enterq xchg jp xchg xchg leaveq ss enterq (bad) (bad) sbb mov pushfq enterq (bad) (bad) mov jl cwtl rex.WB jnp data16 jl nop (bad) mov enterq mov movabs (bad) fmul fcomp mov rex.WB mov retq movabs mov outsb mov sbb pop outsb xor lea xchg shlb mov cmp enterq jl enterq jbe mov sbb outsb mov sbb cwtl jno test je rex.R mov sub outsl jle enterq imul add nop add mov sbb jbe std loopne out negl iret mov movsb enterq fcoms mov enterq mov fwait jl mov mov pop (bad) scas sub jns xlat sbb enterq jbe (bad) cqto mov sbb mov jns sub mov enterq push loopne (bad) (bad) nop int (bad) imul mov nop (bad) sti or negb movsl mov test enterq xor leaveq pop (bad) mov enterq add mov xchg cmp mov rex.R je data16 mov loop nop callq (bad) push (bad) push int3 sbb sti cmc mov test xchg fsubs test pushq data16 gs mov jo rclb imul loopne (bad) mull movabs addb mov gs je xchg and mov (bad) popq xchg clc enterq sbb xchg out sub xor or shrl rex.WRX enterq shl rex.RB mov clc lods xchg adc sub fbld fisttp cwtl sbb mov xchg rex.RX xor ss mov xchg test xlat jg leaveq pushq sbb xchg (bad) enterq rex.WRB outsb in clc xchg mov enterq movsb rcrb xchg sti jl movsl enterq push iret xchg mov jne mov xchg lea fidivl pop mov xchg rex.WB enterq fsts lea jge (bad) movabs movabs movabs rex addr32 (bad) xchg pushfq (bad) movabs mov mov (bad) (bad) jne pop xchg jle mov jbe sub jns je enterq xchg je leaveq mov jg xchg shrl pop idivl movabs jns loop (bad) jne mov jg imul mov lea mov mov imul enterq sbb xor mov (bad) movsl mov add (bad) hlt mov in hlt (bad) push xor iret xor test out jp in mov jp inc mov stos sub lods test add adc movabs movslq (bad) push lods enterq (bad) (bad) sub lods in int andb je (bad) xor push push (bad) (bad) sahf mov pop in jnp (bad) rex.RXB rex.W rex.WR fidiv push xchg rex.RB sti rex.WXB sub add push sahf mov scas and test mov sbb cmp lods rex.RXB int and rex.WXB (bad) stos pushq cmp jrcxz sbb test mov mov jo stos (bad) sub lcall (bad) int3 xchg movsl jae mov rex.XB xchg lods xor (bad) mov (bad) fwait insl mov scas mov lods (bad) clc jle in fildll sti cmp lods sub lea stos movsb xchg lods (bad) push push mov test adc cs pop lods lahf mov xchg cltd lods mov and mov xchg (bad) ja sub push mov cmp adc sub sub retq lahf test ja mov rex.WRXB push movabs jle icebp mov rex.WXB shll pop hlt sub cmp pop (bad) out cmc (bad) enterq add sub test insl mov rex lods enterq (bad) rcr (bad) xchg (bad) cmp and shrb or mov xchg lods movabs mov subb test mov pop xor xlat mov shrb lock movsl (bad) femms jrcxz jo lods in (bad) out test jne jmpq sbb (bad) in stos xor jp push fsts shrb add stos rex.WXB xor (bad) xor or xchg pop imul sub icebp jbe jmpq js mov (bad) (bad) jmp lods (bad) je andl cli scas cmp out lods fistp test rex.WB (bad) lods unpcklps ja outsl sub hlt rex.WRXB jp mov je mov xor xchg cmc mov pop retq (bad) hlt adc (bad) jne cld mov incl add and es cmp (bad) lods xchg mov sub (bad) xorb cld repz jb (bad) cmp adc pop lods (bad) jae enterq test mov sahf movsb adc scas jns add sbb clc scas movslq or (bad) (bad) lods (bad) cmp movabs fmuls push outsb out pop and lods push movabs cmp or xor (bad) in stos cmp mov cld rex.RXB sub test xor lods rex.WB or loop jmp fdivl lods (bad) add xchg or jp mov (bad) sbb lods jb out std test fmull callq xchg movslq add (bad) and jmpq mov (bad) mov lods sbb mov xchg (bad) movabs jg stos add lods jge cmpsl gs in lods out fnsave lods mov jp clc (bad) jns (bad) (bad) je seta adc jge (bad) push loop cwtl lods movabs mov lods or xchg callq push movabs sub push ja icebp (bad) scas movsl mov xchg jo sub (bad) adc xor int3 in (bad) push callq and mulb mov mov scas (bad) fnstsw subl std adc (bad) sub add mov scas pop cmp (bad) mov jnp scas rex.WB cmp (bad) in (bad) or lods rex.WR (bad) add and sbb push mov jnp sub rex.B lods rex.RB cld int3 rex.RX lods pop xor pop addr32 add jns test xchg rorb sbb xchg stc movsb jo,pn fwait rex.XB mov (bad) (bad) rclb ja lods xor add fisubl lods outsb cld js (bad) mov ficomp xchg pop lods push fstps lods es and mov lods rex.XB xor pop (bad) lods sti sbb add lahf mov jae repz lret movabs mov lock and jb mov add (bad) ds mov (bad) adc insb pop fisttp adc pop (bad) sub test repz mov lods sub add jmpq faddp pop movabs fstpt sub mov movsl jge (bad) sub push imulb retq mov sub xor movabs or (bad) lods jmp fistpl jns sbb mov jb movabs imul sub and adc rex.WXB rex.WB (bad) mov xorb rex cmp sub fimul pop (bad) adc addr32 lods or fcompl pandn adc and add sahf retq cmpsl (bad) lods fldenv rex.R rex.RXB or movsb mov push addr32 rex.WR insl (bad) outsl lods rex push lods adc out (bad) or fld (bad) fsubr sbb movsl rex.XB xor jge stos jbe lahf jae scas test sub mov lods rex.WXB mov push adc idivl xchg jns insb mov ds insb retq mov mov jae mov pushq or add adc gs (bad) and and sbb xor mov jae lods movabs (bad) subl xor (bad) jb mov rex.WRXB hlt scas loope cmp and mov mov xchg sbb xchg lods (bad) mov jg xchg int3 cmp pop xor scas data16 (bad) jns in rex.B mov int3 cltd xchg iret xchg jns lods mov rex.WB scas adc or in xor or xchg outsb jle xchg lods rex.XB js retq cli lods push pushfq (bad) mov xor imul fdivr (bad) (bad) sbb add fcoml mov test jmpq fldenv adc lods cmp out lahf sub std lock icebp adc push xchg rex mov or sub outsl jno rex.B mov in sbb stos leaveq push push repnz pushfq lods rex.WR mov xchg lods mov push add cmp (bad) lods iret mov xchg (bad) scas pushq (bad) mov rcl movabs pushq sahf xor movabs sbb (bad) imull and jle rep ss jl lods pushq sahf rex.WRXB (bad) out stos fdivp pop and rex.WR (bad) in rex.RB lods sub xchg insl rex.XB leaveq add cli pop pop jns sbb insl mov sbb jrcxz mov (bad) movntq pop xchg cmp lods cltd and sahf lods (bad) scas jae rex.WX lods (bad) cmp out cmp fisubrl jl (bad) ja subl sbb mov xor lahf and rex.WXB fwait test jp xchg (bad) rex.WRX or cmpsb mov lods rex.WX mov fbld mul lods jl (bad) mov repnz xchg add xchg sarb sbb mov mov lods stos movabs mov add jrcxz in repnz pop out or lahf add mov (bad) lods cmpsb push xchg mov sbb scas rex.XB loopne (bad) mov xchg sub cmp fist icebp out mov sahf cmc xor jrcxz (bad) lods (bad) pop push cltd rcrl lods fcmove stos and in addr32 xchg adcl (bad) jne rex.WRB lods xchg jb or in adc (bad) sbb pushq (bad) adc (bad) sub movabs mov xchg jo lods int (bad) mov fwait rex.X xchg lods add idiv rex.RXB (bad) repnz (bad) mov (bad) test xor lods (bad) (bad) leaveq pop pushfq (bad) in pop scas jnp jmpq mov popq rex.WX movsl sahf fcomip retq sub test or jle retq mov mov lret (bad) lods imul (bad) sub rclb (bad) lock movslq fisubr sbb fadds xchg adc jbe loope rcll int hlt lods out sbb data16 pop xchg movabs adc test rex.R (bad) imul rex.WRX push (bad) add lods int or out fistpll cmpsl movabs (bad) outsb (bad) lods movabs mov jl (bad) insb or lods lock enterq loop sti mov xchg xor add or retq rex.WRB rex.WB repz sub xor (bad) lods (bad) rorb vmptrst jle jnp (bad) rex.B jge imul (bad) mov lods loope add or lods (bad) lret loopne mov cld lahf pushfq rcr lods sbb retq (bad) lea sub xchg lods movsl icebp xor lods rol (bad) cmovae rex.WR mov retq lret lods rex.WRX outsb lods in sarl stc (bad) push lods fidivl sub mov mov fldcw mov lods add movabs mov iret outsl mov stc idivl push cmp or pop rorb movabs in fcoml cld stos movabs (bad) adcl shrb (bad) jne stos sbb adc lods rex.XB rex.B fimul sub xchg rex.WRXB movabs jmp mov cli or loope mov (bad) (bad) ljmp retq pop rex xor or push jge lods je out pop (bad) (bad) or (bad) xchg (bad) clc sub retq (bad) adc (bad) (bad) lods jnp jmpq imul lods xchg cmp xor lods outsl (bad) push cmc jno pop fnsave lods jrcxz outsb or (bad) rex.RX jno rex.WRX shrb mov jae mov (bad) or add fwait cmp negl pop cmc lods enterq (bad) add fisubrl test jp lods rex mov rex.RB in nop xchg lods xlat sub and (bad) jmpq or movslq (bad) mov xor pop fwait add cld and mov lods subps clc leaveq popfq adc add (bad) lods rex.WRXB (bad) adc add sbb adc push (bad) xchg mov shrl jae (bad) pop lods (bad) loop or add jne (bad) stos (bad) cmp scas (bad) adc gs (bad) rex.XB lods fildll (bad) jbe jge lea (bad) pushq es mov pop cmp xchg mov movsb (bad) lods in or lods (bad) adc cmp rex.WX test jb insb push fsubl lret sarl (bad) mov nop sbb js (bad) mov cmpsb pop sarb jrcxz xor rex.WRXB cmp imul outsl out sbb xor mov imul rex.WXB rex.WRXB sub stos xlat xor sbb cmp lods (bad) out mov jo push sahf rex.WRX sub lods retq sub or sub lods shrl enterq cmp xor cltd (bad) popfq (bad) lods loope or lods push cmpsl (bad) xchg js xchg lods xor jge pop test lods (bad) stos (bad) stos cltd add sbb loop push cli repnz lods fldln2 jle and pop je (bad) stos (bad) add in movsl (bad) or movabs mov rex.RB mov sbb or lods in cmp cmp jmp mov in (bad) push add retq sub jne jl rorb mov or movslq mov push stos mov shrl xlat and or (bad) icebp fsubl and jo xchg test jne movslq add push jae in and rex.WX fld test and mov (bad) mov in add fldcw (bad) lods xchg sbb add lret jb sbb mulb cmp (bad) mov xor push cwtl cmpsb rex.R lods rex.WRB retq cld rex.WX pop mov sbb popfq lahf mov rcl cmp jl pop in and pop mov (bad) jne int3 callq lods mov and stos pop sbb ds enterq lods xlat and jg jbe and and xor sbb lods pop rex cmp lock adc jmp shrb in sub stos rex.RXB pop xor mov cmpsl (bad) mov iret mov mov out mov mov testb movabs or and stos cli ficompl jl (bad) rex.WRB jbe in movsb push lods adc and sub movabs sub mov lods fistpll rex.RB sbb sub pop test jb rcr mov xchg push sub jg and adc jns callq add lods fisub sub lods shlb (bad) lahf cmpsb lods mov (bad) (bad) cld test and or scas or jmp rex.RB mov lods sbb sarb or loope mov ja push lods jbe sub add movabs pushq and xchg rex.WX rcrb xchg xorl cmp sarq lods jg add adc jae movabs lahf xchg rex.WB int or in test subl in nop std (bad) adc lods outsb movabs jmp cwtl movabs (bad) fstpt sbb (bad) sbb lods xchg enterq (bad) popq (bad) rex.WRB adc movabs cmp cmp lods mov xchg (bad) stc imul lods loop push imul lods (bad) out je callq fwait (bad) fisttp (bad) jo je push mov pop jno lock push lods xchg (bad) rorl rex.WRXB jae push rorb scas (bad) push cmpsb pop sub adc mov mov clc movabs rex enterq (bad) andb rex.WRXB push mov pop pop cmp rex.X xor mov stc pop jle int3 mov pushfq (bad) jp or lret jmpq lods pushq rex.WXB pop movsl (bad) (bad) add shrl or mov rex.RXB rex.WRXB jb xor cmp popfq retq mov or adc rex.WR popq jl (bad) jg enterq (bad) or (bad) js insb movslq (bad) add pop lret xchg cmpsl cli push in mov add ffreep (bad) add movabs jg pop movabs mov pop lret loop (bad) (bad) pop sub lea and xchg mov push add int rorl and lea mov mov (bad) rex.WRXB jp in (bad) rex.RX xchg rcrl fstpl xor jbe sub int mov xchg cli in (bad) movabs xchg mov jg jne je xchg nop jns outsb and sbb cmc pop cmp pushq rex.WR js lods (bad) test jle jl sub test outsl lods js jl and lods push mov lods mov (bad) add pushq sbb fnstenv mov std in sub mov loop (bad) push mov repnz mov test push movabs in rex.WX (bad) fstpl push fs int jnp (bad) pushfq cmc callq add mov (bad) xor jae mov mov (bad) (bad) mov addr32 stc or jmpq jg and repz or movabs insb subb test push push (bad) mov gs (bad) outsl ljmp jno fisubr sti test cmp add pop rex.WX pop lahf cld add sar (bad) (bad) pop movsb (bad) add mov insb xchg mov cmpsb int3 test rex.RB rex.WRXB (bad) or (bad) jb add callq bt stc test mov jmpq jmpq clc cmp jmpq jmpq ja rol sub and shrd btr jmpq jmpq mov mov jmpq jmpq ja sar cmp adc add ja inc adc mov clc test cmp jmpq je test stc cmp cmc add jno stc clc cmp jmpq bt add jmpq bsf mov jmpq ja cmc neg ror shl sub test movzbw add xor or clc mov clc adc (bad) lock cmp repnz jmpq mov pop (bad) test mov xchg scas faddl rex.X sar add stos and pop jl pop and cmpsb cmp and adc (bad) cmp ja imul sub xor es outsb sarl pop rex.RB (bad) (bad) movabs jne sub sbb movabs rex.WB mov in test (bad) (bad) rex.WXB mov pop loope or (bad) movabs push and (bad) mov (bad) sar (bad) (bad) decb (bad) (bad) (bad) (bad) mov rex.RX jno stos xor sbb fidivl loop xor (bad) add jns (bad) pushq in mov xchg in (bad) movsl iret (bad) cmp js sub test not shrb (bad) movabs js (bad) movslq callq xchg rex.X (bad) stos push mov adc push sbb repnz (bad) sub add sbb and xchg jrcxz xchg movslq push mov cmp adc cmc in and (bad) test (bad) (bad) (bad) (bad) decb sub pop adc jo stc sub cmpsl loop (bad) stos test or jrcxz cmpsl retq cmp (bad) test xor mov jo (bad) iret pop xor notb (bad) mov sbb jmpq je jmpq add rex.RB jne push gs jne movslq (bad) outsb addr32 addr32 add stos (bad) add cmp lods rex cmpsl xchg rex.WR rex.WRXB pop mov es rex.RX or (bad) mov rex.B adc pop rex.WRXB bnd sub (bad) rex.WRXB rcr adc (bad) push negb pushq xchg add or (bad) xchg clc add rolb lods ja cmp mov rorl pop cli out lock hlt fwait nop cmc jo (bad) (bad) add cld stos (bad) retq pop cmp adcl (bad) sti cmp jp sbb jmpq add rex.RXB gs outsl movslq rex.WB outsw push add std sahf (bad) (bad) rex.WRX in movslq sti add subl jg in jrcxz (bad) push jnp rex.WR xchg fwait rex.WX js sahf cmp mov xchg movsb mov push sub repnz out rex.XB or (bad) movsb cli rex.WRB jp cli callq int3 (bad) mov sub mov int3 sub mov add jg mov mov mov (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) fcomps movabs (bad) movsb fnstcw jge cmpsl mov in mov in rex.WRB retq js push jb popfq jle xchg imul retq pushq cmp mov sub adc mov mov rex.WRXB xchg adc (bad) sbb cli movabs gs scas retq xchg mov jrcxz adc test ds retq repnz xchg ss mov lahf (bad) push std movabs (bad) sub (bad) ss in cmpsb rex.RXB and push pop push (bad) fsts fucom mov push rex.WB cmp sbb pop enterq jae outsl test xor xchg (bad) clc out popfq (bad) mov adc cltd or sbb pushq (bad) and lods out adc rex.XB mov test stos jmpq (bad) decb (bad) (bad) (bad) (bad) fsubrs push cli js std mov cmpsl jns jno xchg push icebp repnz negl js mov es (bad) cmp cmc ds jmpq in (bad) xchg xor lea cmp mov scas mov pop mov xchg sti pushfq rcll scas and mov stc movsb (bad) adc lock xlat mov push (bad) sub std rex.WRX (bad) xor mov cmc (bad) xchg movsl lahf add imul push xor cli iret negl movabs jle mov imull (bad) and mov mov sub or (bad) xor (bad) (bad) (bad) sti mov bswap rex.X fwait adc addr32 test cmp es xchg test imul or sbb or xchg lock sub mov lret fadd fnsave roll adc rex.WRB xchg xor movsl mov and loop (bad) mov mov xchg adc imul shrl or test rex.X andl movabs loop jns add gs adc jo jp fdivrl scas mov or mov adc mov and shlb pop enterq (bad) xchg rex.WR ds mov add mov or shr pushq (bad) (bad) (bad) std or lea (bad) (bad) std fistp callq shlb rex.XB add add mov and rex.WRXB stc fnstsw mov (bad) mov fidivl mov sbb adc callq sarb nop (bad) push sbb mov mov loop rex.B jmpq jmpq add rex.RX jb (bad) je gs (bad) addr32 lods lret (bad) decl adcl faddl add add je imul gs js jmpq callq jmpq (bad) js xor stos xchg stos pop add movabs cmp (bad) repz (bad) or repz out or add mov adc add sub rex.WX shl adc cs or (bad) stos fdivrs rex.RXB (bad) rex.WB nop mov push sub leaveq cmpsl (bad) add xchg push rex.WR addr32 stc push lods (bad) jbe fsubr mov mov push (bad) in rex.W loope and jae xor jg pop rex.W pushfq lret jrcxz (bad) jnp rex.RB iret mov (bad) (bad) decb (bad) (bad) (bad) (bad) mov (bad) push jns sub addb (bad) fistpl adc adc (bad) lret fcomp sub jbe jb sub in rex.WRXB pop jmp pushfq test movabs outsb jrcxz pop xor adc je rex.WR mov sub lods push movsb cmp mov pop insl pop mov xor mov sub movabs loop (bad) (bad) fistpl add orb (bad) flds (bad) sub jrcxz sub lahf sti jmpq (bad) decb add (bad) and push mov rex.RB cwtl (bad) gs mov test stos (bad) fistpl and vcomiss sub add rex.B rex.RXB ss int jae cld jo imul fstpt loop push mov (bad) push (bad) rex.WX and (bad) and or mov mov js push add rex.WRB imul jae insb jne gs add add insb push outsb ja outsb fs jmpq lea setne pop bswap pop lea movzbq not not pop not movzbw pop retq jmpq and stc mov stc stc cmpb jmpq jmpq and xchg lods sbb xor push cli repnz movsl int3 add xchg rex.X (bad) repz jrcxz (bad) and mov clc or rex.X cmpsb not pop push stos mov jl pushq push mov out movabs xchg (bad) (bad) in lods imul pop xor xchg (bad) jmp sbb in je pmaddwd xchg jg repnz (bad) (bad) std or push rex.R (bad) (bad) std idivb add jb rex.RX jnp adc cmp add add mov or add add pushfq rex.WB jrcxz push jg jge insl (bad) and (bad) mov jb retq xchg (bad) cs js rex.WXB mov (bad) jne cmp test bt test add stc stc cmp bt add jmpq cmp jmpq jmpq cmc cmp jmpq je cmp cmc jmpq add rex.WRB je rex.X gs outsl push imul add rex.RXB gs rex.RB rex.WRB rex.XB add enterq sub or and rex.R fldl and icebp out (bad) (bad) fs (bad) xor cwtl (bad) rex.X pop rex.R pop (bad) sub add (bad) imul (bad) xchg retq test cmc rex.RX (bad) sbb addb outsb cmp xchg xor (bad) neg cmp rex.WRB ss push (bad) push mov xor jmpq stc mov popfq jge lock (bad) (bad) std or mov (bad) (bad) (bad) incb pushfq mov out mov xchg cmp outsl (bad) lods lret mov cmc sbb rcrl mov icebp mov add jb (bad) repz rex.WRXB and fldenv (bad) or xchg movabs jbe iret or (bad) fbstp fsubrs (bad) cmp data16 es addr32 mov cmp xchg mov pop mov lods (bad) cltd mov mov lods mov sbb add imul movslq insl gs imul and mov test add cmc or jmpq jmpq jbe mov jmpq jmpq mov cwtl enterq adc xchg (bad) xchg xor mov loope (bad) rex.WR adc jne insb rex.WR jge mov sti in mov xchg jl stc gs jne callq je jnp mov mov pushq jno jg stos adc rex.X add (bad) rex.B lock xlat (bad) jmp sbb cld pop adc and cs in (bad) jb (bad) (bad) cli mov (bad) (bad) (bad) sti subl xchg jg adc (bad) (bad) (bad) std mov rex.WRXB push mov movsb (bad) repz mov rex.B in shrl out callq rex.WB mov popq push (bad) (bad) out rex.RX adc je xor jp mov and sbb (bad) loop enterq lcall xor movsl fs cmpsl je mov nop xchg or lea mov jo xor push lods xchg jge (bad) xchg (bad) (bad) (bad) callq push and mov mull mov add rex addr32 gs xchg adc (bad) mov (bad) (bad) rcl outsl fmull movabs mov pushq mov movslq bnd retq decl rex.WRXB rex.XB (bad) fwait mov or jns,pt (bad) out sti es mov push xchg lods jo stos mov mov add add rex.XB int3 (bad) out (bad) or scas mov in jp adc add xlat int3 (bad) mov test jge jg jns lret icebp and ja in (bad) shrb xchg rex.XB xchg in mov xor cmc in cmp pop fldl cmp or in scas mov (bad) jmpq jrcxz cmp mov fistpll mov jl fstp mov cmp nop lret lods xorb sbb adc jmpq test sub jmpq jmpq je jmpq ja jmpq jmpq jmpq add push gs jne jb push (bad) insb jne add mov sbb jl or lea in pop xor mov mov mov nop and cmp cs rex.W mov movsb mov lods cltd mov frstor jl (bad) pushfq popfq jns movsl mov (bad) movsb sub popfq rex.W mov andl fcompl xor lock movsl in xor lret sub mov (bad) mov fstl fwait xlat mov rex.WRX mov (bad) mov movsl pushq mov sarb movsl popfq stc (bad) mov rex.R mov popfq rex.WX mov mov (bad) mov mov test mov jne and rex.WRX pushq mov mov es movsb iret mov mov int3 movsl popfq xchg (bad) mov and jl cmp push push mov (bad) and and rex.WRXB lret cltd popfq mov sbb addr32 movsb movsb iret mov sarl mov insb retq sbb movsl sbb jns pushq repnz mov adc mov mov fsubs callq pushq test cmp int3 and in popfq mov pushq scas fs je cmp popfq icebp jbe xchg and mov or lret movabs insl scas mov jmpq mov es movsb lret mov (bad) movsl sbb popfq jae shlb mov movsb mov icebp mov movsb popfq mov pop leaveq push rex.WRX mov and rex.WR xor sbb lock popfq je mov rex.WR pop cmp or sub popfq rex.XB (bad) gs mov popfq loope mov jno sbb movsl int3 popfq mov sub mov fs mov sub xor jno popfq repnz push nop sub (bad) je (bad) mov jne,pt stc and pushfq (bad) sub test mov mov rex.WRX mov addr32 movsl pushq sub movsb lret mov je in pushq (bad) push lock lret rex.WRX mov mov rex.R mov push mov sbb mov mov rex.WRX mov rex.WB movsb xor or and pushfq lock (bad) adcb mov movsb lahf mov mov enterq jg sub mov movsl pop popfq sbb sbb loope hlt or movsl mov int3 popfq sbbb cmp mov retq movsl and pushq mov frstor xchg movsb mov jp pushfq rex.WRX mov (bad) mov pop or sub mov movsl rex.WR jb int3 adc pop popfq divb jmpq or rex.RX lea mov xchg jns mov xchg stos mov mov mov subb iret (bad) jne test push popfq (bad) movabs mov pushq mov movsl cld xor sub cmp and movsb mov xor pushq scas mov mov mov sub mov (bad) mov movsb xor in movsb (bad) mov testl out jo cld xor sub jp fdivl popfq popfq sub jns int3 popfq adc and and in mov mov mov movsb pushq cmp xor enterq insb mov cwtl movsl jl push rex.WR mov mov rex.W mov (bad) movsl sbb cmp pop xor jo mov sbb (bad) popfq mov or and mov movsb lret mov sub in je rex.WRB cmp mov mov xor icebp mov movsb popfq mov xor mov xor mov and push mov pop add mov movsb pushq cltd xor iret mov mov movabs jne repz sub (bad) popfq rex.XB in iret cli xchg mov mov enterq rex.R sbb imul mov movsb lahf mov (bad) mov cld mov test mov mov mov xchg sbb decb jrcxz xchg or (bad) movsl pushfq mov rex.WX js fs movslq rex.WX mov rex movsb mov (bad) mov movsb xor xor fcompl mov and add cs cmc ja mov rex.B rex.W stos add (bad) iret sbb pushfq scas rex.W pop mov mov (bad) movsl cmp fidivl callq pushq push (bad) cmp sbb popfq xor (bad) mov or popfq (bad) push add (bad) mov add fs mov pushq mov enterq insb xor movabs mov pop mov jl rex.RXB rex.RX sbb (bad) mov mov popfq add mov push int mov rex.WR push mov popfq lock jmp hlt pushq in mov int3 popfq int sarb lock je add and rex.WRX lret clc rex.X scas mov mov (bad) rex.R in popfq or (bad) xchg lahf popfq cli jmpq (bad) movabs jo mov lret fs insb popfq lret cwtl (bad) std sbb popfq or je jnp cld popfq retq mov lea xor sbb sbb rex.WXB repz mov lea xor fs mov pop lea fsubr popfq rex pop in jmpq sub stos sub rcrb jo (bad) mov frstor pushq mov movsb sahf mov movsb mov mov (bad) xor mov jno callq popfq xchg loopne cmp mov jo int3 mov (bad) movsl or pop loop mov movsb mov xchg jrcxz sbb mov icebp mov movsb lahf mov mov (bad) sbb pop outsl stos rex.WR shlb or (bad) popfq fwait (bad) (bad) movsl int3 lock out mov lock popfq and pop mov mov mull or rex.X ja or adc in (bad) popfq mov adc pop mov ja in popfq dec pushq popfq scas clc cld sbb insb mov icebp mov movsb lahf mov xorl es movsb lret mov fsubs mov cmp push cmp pushq (bad) test pop mov addl lock js fisubrl nop movsb cld popfq scas add mov hlt (bad) popfq rex.X enterq mov rex.WRX lock mov lods jrcxz retq cwtl mov pushq mov cld jo (bad) (bad) scas mov jl movsb popfq int3 scas icebp mov mov mov popfq test sub nop xorb push stos jmpq sub sbb and xor lock push (bad) mov pushq mov movsb popfq mov mov push insl scas mov mov enterq mov xor (bad) mov cmp mov es movsb lret mov mov mov nop (bad) in jmp mov mov xchg leaveq (bad) xor lock sbb cmp add cltd popfq cs lock lahf sbb scas insb cmpsl popfq (bad) cwtl in mov cltd rex.WR callq xchg mov mov jge mov jo (bad) jl xchg cmpsl xchg lea icebp mov mov mov jbe mov jle popfq mov mov mov out movsb lret mov push movsl sbb or mov and popfq rex.WX pop scas cmp popfq rex.X mov (bad) mov frstor pushq mov movsb popfq mov mov lret mov movabs mov rex.WXB jne in popfq (bad) mov rex.WR repz rex.WX mov test cld pushq jne mov icebp mov movsb popfq mov mov mov cmp mov mov movsl pushq vsqrtss pushfq sbb or cld mov rex.WRX sub rex.WX jne mov es test mov outsb retq pop mov outsl mov movsl mov insb pushfq pop pushq movsl popfq mov xchg mov mov rcrb add popfq retq sbb sbb movsb mov icebp mov movsb lahf mov mov enterq (bad) pushfq mov pop jbe insl in lahf mov mov (bad) stc ja adc sbb (bad) add and pushq popfq xchg rex.RXB (bad) icebp popfq adc mov icebp mov movsb popfq mov jb mov movsb lret mov je mov mov insb (bad) xor lods mov jae or cs mov pop mov mov (bad) decb xchg mov rex.R mov stos pop adc movsb jo int3 mov frstor (bad) movsl sub cmc (bad) jno fcompl insb jo cld popfq movslq rex.WR cbtw pushfq mov mov popfq mov rex.W jl mov sbb and popfq mov movsl insb popfq in and sub mov insb popfq rex mov je mov rex.WX lock popfq lret pushfq (bad) mov nop jno pop lea pop push or popfq sub mov insb popfq movsb jge pushq (bad) mov mov mov movsb imul es test mov mov frstor pop int3 sub add jno adc jl stc divb lret mov mov or cmp popfq and int3 xchg movsl mov mov (bad) mov xor cs insb or mov push int3 popfq callq sahf popfq mov je jge pushfq popfq xlat xor popfq xor (bad) test loopne popfq rex xor and in popfq rex.W mov jp mov xor fdiv movsl pop popfq hlt mov or (bad) loopne popfq mov xor jno pop (bad) xchg jmpq movsb pop mov xchg decb int ja pushq mov movsb popfq mov and jae mov movsb xor mov and (bad) movsl sbb popfq add jge xor orb lret (bad) xor movsb rex.WB mov (bad) movsl cld int3 (bad) rex.WX sub cmc mov sahf rex.WXB lock int3 popfq adc mov sbb mov mov movsb movsb mov or mov sbb push mov decb sbb enterq popfq fistpll mov push mov callq mov sbb int3 rex.R sub rex.W (bad) mov push mull mov mov cltd popfq rclb mov (bad) cmp mov jl rex.WRX (bad) (bad) (bad) nop mov xchg pushfq pop cmp jle mov in iret mov cmp mov addb mov mov pushq int3 pop mov movsl (bad) mov sbb int3 mov es movsb lret mov mov mov mov mov sti mov pushq mov cmp nop lock jl movabs jmp cmp (bad) popfq mov lock jmpq or (bad) mov rex.W mov mov fs cmp popfq jg jp popfq orb enterq push in (bad) std cmp rex.WRX xor mov add (bad) mov lea mov movsl jl in cwtl in mov mov mov jns mov rex.WRX lret mov (bad) movsl sbb (bad) xor outsl int3 mov vlddqu scas mov mov mov mov frstor in pushfq jge pushfq subb popfq xchg or gs xchg movsb mov mov mov jbe (bad) movsb xor test mov pop scas insb lahf popfq addr32 jo mov adc imul mov fnsave (bad) adc faddl mov frstor (bad) mov push callq xchg std iret mov pop (bad) xor popfq (bad) mov pushq sti and cs mov mov jo fsubrl add pop pop jmpq fmuls mov (bad) (bad) icebp mov movsb lahf mov (bad) scas out sub movsb mov jmp add divb mov scas cli gs mov test mov int3 popfq outsb mov test popfq (bad) mov fisttpll in movsb lret mov push movsb mov (bad) mov rex.WRX mov divb js stos test stos mov lock int3 popfq nop icebp mov movsb lahf mov mov mov mov frstor pushq mov movsl stos fstpl or popfq mov xchg fsubs sbb mov cmp in popfq lgs mov and xor xor movsl popfq pop mov (bad) scas mov sbb test sbb adc enterq hlt mov push sahf (bad) mov mov popfq (bad) cmp enterq mov mov mov mov nop mov rorb mov or popfq or cmpsb lea mov jne cmp jae mov movabs mov movsl in (bad) callq (bad) fcompl sub popfq or push divb mov cmp jmp rcr mov or mov icebp mov movsl in int jb mov movsb jo xor push mov and popfq rex.R lret in popfq jnp (bad) adc popfq mov retq pop sub mov leaveq in rex.W mov frstor pushq lret xchg popfq imul popfq movsl jne and movsl enterq (bad) insb add add (bad) in shr shrb and mov movsl cld popfq fwait (bad) je movsb std cwtl mov pop cmp and movsl movsb hlt popfq lods (bad) je test popfq add xor pop mov jl movabs sarb ror popfq retq js insb popfq sbb rcrb popfq movabs mov mov idivb mov retq pop enterq cmpl ss (bad) (bad) add (bad) enterq rorb (bad) or jne (bad) popfq loope gs movsl add popfq rex.WRX movsl rex.W lock in je movsl (bad) retq test popfq xor ficoml insb sbb jp and sbb gs pop pushq popfq orb outsb and popfq movabs add cmp mov mov idivb movabs mov js lret sub (bad) mov imul rex.RXB mov mov data16 mov movsl (bad) (bad) popfq jnp cmp (bad) mov jo cmpb mov or popfq xorl lahf popfq shlb pushq popfq andl jne and cmp lock popfq outsb (bad) popfq jbe gs lea popfq mov mov mov or (bad) in int3 mov mov je mov sahf mov (bad) fs nop lea lods int3 mov or or jo callq sbb movabs adc popfq mov js and xor mov (bad) sub mov add sub rcll mov enterq mov clc xor xchg cwtl test and mov mov jge mov movsl add cwtl jle sbb retq mov fcompl adc int3 popfq (bad) mov lahf popfq cltd js mov mov push lock enterq jne (bad) popfq sub mov movsb mov pop jnp callq add (bad) int3 lock movsl xchg xor xchg push mov jo cmp xor pushq popfq (bad) hlt (bad) test insb mov jno orb (bad) mov popfq mov (bad) rolb (bad) cs mov sub pushq xor sbbb mov rcl adc mov mov sahf adc cld popfq iret ss push mov or mov popfq mov iret mov movsl popfq and mov jne and popfq adc leaveq sbb push ss pop xor push sub jl jno xor popfq push (bad) push cmp sbb xorb rex.R sbb (bad) fmulp xchg sbb adc movsb and mov rex.RX rex.W lock mov repz sbbl xor int3 push mov mov test push adc fs adc divb popfq enterq (bad) mov push sbb pushq enterq lock push cmp movsl push callq add stos sub shrb xor popfq xor push mov jne xor popfq cwtl jno xor mov mov movsl pushq sahf pop enterq sbb and push popfq (bad) mov mov mov callq adc popfq jmpq mov movsl and (bad) jo mov jmp enterq nop hlt ds mov notb popfq mov movsl (bad) popfq (bad) lock insb ds and mov mov repnz (bad) repz repz icebp sbb xor popfq (bad) (bad) pop in mov fnstsw mov xchg (bad) xchg popfq andb mov fbstp shrl mov and loop sbb mov lahf popfq xchg or mov (bad) cmp movsl rex bnd push int3 rorb ja mov or fsubrs jne lock movsb mov jbe mov add mov (bad) pop cmp rcrb mov add movsl mov popfq add popfq (bad) mov mov scas (bad) xchg movsb mov rex.X je popfq (bad) mov mov mov pushq callq retq (bad) fidiv test pushq mov xorb mov frstor lock rex.WR repnz mov movsb mov je mov and mov stos (bad) jne popfq sbb popfq mov pushq popfq xchg rex.RX xor and (bad) jne popfq (bad) pushfq mov retq pop in mov and xor pushfq in cltd and sbb pushq (bad) sub popfq (bad) mov cmp popfq retq andb movsl mov mov cmpsb push lock nop (bad) popfq js mov int3 je and popfq mull popfq pop movabs int3 mov retq movabs mov int3 and and sbb int xor popfq xor mov or enterq (bad) fcomps faddl ss dec movsb pushq popfq (bad) stos leaveq movsb movsl mov je sbb rex mov lret lea enterq mov or jp popfq adcb mov (bad) mov sbb outsb (bad) movsb movsl pushq xchg xor and pop (bad) mov movsl pop repz jnp jp popfq addb mov popfq add (bad) pushfq adcl mov xchg xlat mov nop popfq cmpb rorb sub movabs cmp test sbb fdivs adcb enterq mov jo mov fcomps sbb mov (bad) in movsl (bad) pop mov or mov nop sbb cwtl cltd mov retq add popfq (bad) mov test pushfq pushq popfq (bad) (bad) mov push mov in mov mov sub mov mov mov popfq (bad) pop mov sbb mov movsb mov imul pop xor fidivl adc in fadd add cwtl popfq movslq mov popfq test push add or movsb pushfq jmpq pop rex.WR popfq pushfq outsb movsb in sbb mov mov mov rex.WX popfq (bad) jae je pop popfq (bad) pushq popfq pop notb mov test out mov imul popfq or cld xor imul pushfq popfq sarb pushq movsl xor rex.WRX mov callq fmull jne mov es mov xchg js mov sbb popfq movabs cmp xor rex.WR cmp pop jo pop mov popfq lods jno mov mov mov jb sub loopne pushq push jae mov nop pop mov jl out ja pushq mov movsb lahf mov mov (bad) cmp (bad) enterq mov mov pop lock mov rex popfq mov pop pop cmp int3 mov jp xor gs popfq xor mov shlb or sub je mov mov adc mov mov movsl pushfq popfq xchg mov mov mov frstor cmp lret mov enterq imul callq jo lock cmp mov leaveq movslq and popfq mov popfq add js rex.WX popfq out sbb in mull adc mov mov test mov mov frstor pushq mov movsl or sbb lea negb mov rex.W cltd (bad) xchg rex.WR mov rex.X movsl pushfq insb mov mov pop jo xorl jmp (bad) pushq mov movsb lahf mov mov mov lret adc mov adc pushq add int3 mov or cmp popfq notb mov icebp mov movsb lahf mov mov mov mov frstor lahf sub sbb enterq popfq enterq (bad) sbb sub nop mov popfq (bad) js or jns adc clc add es movsb lret mov xor stos (bad) movslq jmp out negl movsb or pushq es mov mov mov adc movsb mov or data16 (bad) mov adcl pushq mov enterq (bad) pop sub int3 mov addl test mov mov hlt movsl rex.WR ss sub (bad) mov int3 lock adc mov sub mov jge rex.R pushq add popfq shrb rex.R rex.WRXB mov mov divb mov mov cld test sbb rex.WRB es je mov mov pop movsb mov sub (bad) mov frstor shlb mov rex.WRX mov cmp cmp sbb pop sub (bad) mov movsl (bad) mov sbb xor pushfq lcall mov rex.RXB mov (bad) mov mov mov mov or popfq rex.WRXB mov mov mov movsl jmp mov gs in mov mov mov ja or mov pushfq and rex.WRX mov sub fs scas mov mov enterq (bad) pushfq mov cli (bad) movslq mov jne jno sub jp popfq (bad) cmpsl and es mov mov mov jo mov sbb rex.WR imull lods mov and movsl xchg mov sbb imul mov movsl xor (bad) adc movabs movsb lahf mov mov movsl popfq xchg rex.WRXB rex.WRX fsubs sahf std enterq fwait test movslq int3 sub sub js mov gs sbb imul mov movsb jo add movabs rex.WX or mov rex.WXB in (bad) (bad) and (bad) push push in shrb frstor (bad) movsl in int3 (bad) push imul movsl xchg mov sbb push (bad) rex.W pushfq popfq xor mov mov hlt subb mov mov lock mov lgs movsl cld lahf rex.RXB and mov rex.WRX (bad) or add mov fsubl mov movsb xor jl lret mov mov lock mov (bad) (bad) lods xchg movsb mov jbe and movsl pop (bad) loop in xor cmp mov insb cmp jne (bad) add mov push rex.RB pushq mov movsb xor addb (bad) stos pop popfq leaveq (bad) rex.X lods (bad) popfq lock mov rex.RXB rex.XB pushq in pushfq subb mov mov mov sbb out jp popfq cmpb out cmp mov mov mov test nop popfq (bad) jne sub movsl pop popfq sub (bad) int3 mov push (bad) cmp nop retq addr32 loope sbb test ss fwait cmpxchg popfq (bad) out mov retq mov cmp movsl jo adc fild popfq insl or mov or callq divb popfq add adc pushq push in je (bad) adc in pushfq mov fidiv popfq movabs retq pushq cmp mov popfq mov sahf rex.WB enterq xchg add jmpq cld movsl mov insb mov popfq pushq movsb mov mov movsl mov jp sbb mov ficompl pushfq popfq mov popfq add mov add movabs lahf popfq sub and xlat and xchg sbb scas (bad) adc and pushfq cmp rex.W popfq iret mov gs enterq mov xor lods cs fs popfq xchg scas lock lea mov and mov jo popfq mov mov jp pushq popfq mov mov mov mov movsb iret mov mov rex.R sub rex.W rex.WX mov jne xor movsl in popfq rex.XB mov mov pushq xor mov sahf (bad) push xor mov lahf mov jne mov pop (bad) (bad) mov outsb push mov rex.WXB sbb xor lock cmpsl mov movsb xor imul xchg movsl je popfq lahf lret mov cwtl popfq mov mov (bad) pop lock (bad) (bad) or test movsb popfq retq mov mov movsl mov mov jo fcompl lret cwtl mov mov mov mov fs jle insb mov rex.WX mov jno scas mov es mov mov retq enterq int xchg std iret insl rex.WR (bad) mov mov rex.WX sbbb pushq mov jno scas mov es mov insb (bad) mov mov mov mov pop je adc cwtl xor mov adc insb mov add popfq xchg mov mov sub in (bad) outsl es add mov (bad) sbb cltd pushq in popfq jae mov popfq mov (bad) lock (bad) callq jl mov mov pop jne pushq mov je push (bad) sbb adc jmpq and mov mov or pop or popfq sahf jne sub mov jbe rcrb mov mov xchg in popfq push movsb sbb rex.R xor ja (bad) xchg add mov movsb jae jo jp popfq pop nop mov sub and imul jo xlat mov jg in cmp lret movsb test mov mov nop jns popfq (bad) mov movsl int3 nop jb mov nop jnp popfq (bad) add popfq movabs int3 pop mov sbb cmc cwtl sbb sbb std callq sbb mov pushq lahf gs or int3 popfq outsl add popfq xchg mov jl iret rex.WR rex.RX (bad) pop mov push (bad) popfq repnz movsb xchg lods push mov jmpq je movzbw bswap not mov not movsbl not mov jmpq jne cmc bt test jmpq jmpq callq sub lea rcl shrd add js shrd sub mov clc clc stc bt cmpb jmpq jae jmpq jmpq bswap mov jmpq bt cmc add cmc or jmpq jmpq jne sets mov jmpq add rex.XB outsl jae push gs imul insb add add insb and (bad) jmpq cmc sub bt test repnz jmpq jmpq mov jmpq add push je push imul outsb ja outsb add (bad) repz bt jmpq add rex.XB (bad) je rex.R rex.XB add (bad) repnz fbld add cmc test cmp jmpq je stc cmp sub cmp test clc cmp cmp jmpq jmpq cmc sub bt neg test cmp lea movsbw movsbl not lea movzbw movzbl pop jmpq shr mov rol shr or sub rol bsf add mov bt test bt clc sub stc jmpq add mov stc jmpq jmpq add rex.WRB jbe imul test test cmc sub jmpq je lea mov jmpq add rex.RXB gs jae jb (bad) pushq movslq outsw jb (bad) je outsl outsb add sti bt movzbl shr (bad) lock inc adc mov bt and shr mov cmc jp stc cmc repnz jmpq add rex.XB jo imul (bad) incl add je je rex.W outsb fs add in retq pop (bad) pop jle xchg cmp jle sub loope in rclb mov lock xchg (bad) cmp (bad) sub out iret out adc sub xchg mov push sahf mov mov callq callq lea cmp rolb es pop cwtl rex.B rex.WX (bad) cmp cmp insb movabs mov sbb (bad) decb (bad) (bad) (bad) callq xlat loope (bad) adc jb push push divl pushq (bad) pushq jb rex.WXB mov xchg sbb xor in rex.WX add cltd cmp scas movabs (bad) xchg lea xchg js pop adc mov mov mov push rex xchg and fldl jb out cmp movabs or cld pop jle (bad) insl or rex.R mov (bad) (bad) shl fstpt (bad) roll pop xchg fs or push div add (bad) movsl jg jo lock out fisttpll sbb nop andl pushq (bad) callq adc push test or mov popfq mov out (bad) cmpsb cltd cmc outsl out fnstsw or lock ficom (bad) (bad) decb (bad) (bad) (bad) callq rcrl adc cli (bad) stos scas mov (bad) leaveq lods (bad) sti in insb or xor push rex.X xchg lea jge push add xor mov movabs (bad) movabs rex.R test or mov mov (bad) stos lret rex.W pop test push xchg push (bad) mov jae cmp xlat sub add jge lea jg or je mov add add movlps pop (bad) add add or xchg out or mov pop rex.WRXB pushq lret repz clc xchg jbe mov rex.WX lret cs (bad) fldl xchg (bad) (bad) (bad) sti mov fsub mov jb stc mov sub movslq (bad) jo xor cmpb mov movsb (bad) movabs rex.R loopne and mov jl rex.WR nop (bad) (bad) jae rex.R stc es rex.X (bad) mov mov insl je test stc jmpq neg jmpq mov sub nop mov mov scas retq rex rex.RXB cmp cld icebp mov rex.WXB (bad) mov nop pop pop and movabs or mov jns fbstp lret in cmpsl pushfq xchg adc add retq jno lods sti (bad) pushq outsl fldt push mov hlt pop icebp sbb (bad) (bad) std or fdivrp (bad) (bad) incb movabs fmull cmc negb mov sti repnz retq (bad) enterq mov add add jb rex.XB ds or andl cmp lods gs fnstenv movabs sarl sar sub rex.RB lods test or mov js sbb mov adc mov mov add push insb gs jmpq je bt movzbw bsf push sub bsf sub bts mov rcr shld sub shl sub movsbw not not jmpq jmpq jmpq jne sub btc jmpq inc xadd mov cmp sub not lea jmpq fpatan out (bad) pop stc int3 adc gs push push mov (bad) sbb cwtl push jl movabs rex.WX and imul xchg cmp xor xchg (bad) jo imul or jle cwtl (bad) hlt xor rex.WB imul fstp xchg stc add add (bad) retq stos rex.XB rex.WRB jmpq rcl rex.WR sub (bad) lahf rex.WB sbbb (bad) (bad) decb (bad) (bad) (bad) decl cli xchg fisttpll mov sti scas fdivp cli cmp xchg adcl or fadds (bad) push out (bad) in div push sub lods (bad) pop cli fwait sbb shrl jge insl or insl (bad) movabs jp jp sub (bad) stc or adc or in fistp cli fcomps pandn mov sbb in adc out movabs imul jge int3 xchg (bad) fs or mov int movabs jrcxz jl pop jmp int3 adc imul nop jrcxz dec and push clc xchg cli fcomps fabs mov cmp loop cmpsb mov (bad) xor adc or data16 cmp ds rex.WRX lods sub (bad) cmp mov cs (bad) (bad) decl in jbe leaveq mov movabs pop mov insb jrcxz mov and std (bad) mov jb (bad) (bad) stc or xchg (bad) in (bad) loope vcvtss2si stos jg sbb mov mov icebp imull push mov push mov loop mov xchg or movabs mov sbb rex.RX lods sbb mov cmpsb mov cld add sub loop repz (bad) add lods fwait rex.WX jno (bad) insl pushfq sbb add add mov (bad) adc add add or and (bad) (bad) (bad) sti mov xor enterq jle out sahf addr32 pop (bad) data16 rcrb movabs adc lods mov (bad) mov xchg movabs (bad) xchg mov adc sbb mov std xor popq mov jmpq rex.R gs movslq outsl rex.XB outsb je outsl insb add in fdivrs rex.WX jle mov push mov outsb push xchg sbb xchg out fistpll rcrb pop jle xlat sub xor (bad) movabs mov jbe push rex.WXB adc mov outsb movslq lods cmp add mov pushq rex.RXB addb mov cmc sahf push movabs push in rex.XB mov xchg push sbb scas (bad) (bad) (bad) decb (bad) (bad) (bad) incl pop retq ja imul mov push rex.WRB (bad) test lret fadds add (bad) (bad) nop/reserved (bad) lret sbb and xor add nop hlt sub (bad) icebp pop cmp xchg cli xchg loop movsl test jb insb mov rex.R repz retq add stos (bad) pushq insb int lret adc pop cmc xchg scas jns fdivl mov cmp or jle,pt out mov in int stc loopne rex.WB xchg mov jl rex.WRB rex.WRXB push mov xlat xchg cmp sbb adc lret sti push (bad) xor sbb stos sti fidivrl xchg fistpl xchg rex.WB xor cmp subl lods leaveq mov add or (bad) (bad) cmp jno retq orl (bad) (bad) decb (bad) (bad) (bad) incl rex.WRX rex.WXB xor (bad) push mov rolb addr32 lods fs insb (bad) rex.WR rex gs shrb rex.RX cs retq movsb cmc sbb stos mov cmp (bad) (bad) xchg (bad) scas lock in stc mov mov fsincos add fwait xor rex.X pop movsb rex.WX sbb sbb shrb rex.R adc sub test mov pop mov insb jbe js sbb or stos imul push or xchg out lret (bad) clc xchg insb rex.WX mov (bad) sti imul add pop jl (bad) (bad) incb mov (bad) jle mov mov cmp pushfq xchg cmp mov shll adc movslq mov pop push test jo repz cmp (bad) jge jo sbb mov stc (bad) pop cli scas add adc mov mov clc mov rex.WRX rorb hlt insb pop (bad) mov rex.WB movabs mov push movabs iret (bad) sub push xor retq sbb adc (bad) imul lahf ljmp pop rol (bad) int (bad) sub fbstp nop sub and mov lock mov cmpsl (bad) and rex.WRX (bad) jb (bad) jp faddl xchg rex.WB xlat rex.WR and jle fcmovb jo adc leaveq lods lret rex.RXB ja rex.WRB (bad) jmpq (bad) mov imul pop jmpq pop add rex.WRB cmp sub mov (bad) rex.X imul clc addr32 movsb lods rex.W es jns sbb sub (bad) rex.WRXB pop shr mov jns sbb scas cmp jle lret (bad) fnstcw mov outsl add sbb jmpq add rex.W gs jo gs insb outsl movslq jmpq callq jmpq test pushq clc cmp jmpq lea lea lea movzbl mov movsbq mov jmpq cmp jmpq (bad) mov rex.W lret cli lret xchg push mov idiv xsha256 cmpsb push pop (bad) (bad) xchg (bad) adc stc fldl pop pop test push mov fcoms in out cmp sub add jge jnp sbb (bad) pop pop (bad) addr32 nop repnz movslq (bad) rex.WR icebp retq push mov xor push int3 rex.X ja pop retq jo mov ss leaveq or (bad) scas xchg iret jp (bad) jae ja pop stc repz pop or fidivrl cs rex.RXB rex.WR (bad) (bad) decb (bad) (bad) (bad) decl mov insb in ja rcrb mov in sahf out movabs pop jno repz imul and rclb loopne negl rex.WRX jp lea pushq (bad) push adc adc (bad) loope sbb (bad) popfq add add imul jae test add jmpq je jmpq bswap pop setno mov bswap bswap bswap mov movzbw mov retq jmpq jmpq not bswap mov setp btc je mov lea shld mov and mov seta push bsf shld mov shrd sub movsbl neg xor movsbw mov movzbw lea movzbl jmpq or jmpq mov jbe rex.XB pushq cwtl rex cmp mov imul loopne shr (bad) lahf enterq (bad) jp imull movabs fildl insb xlat int3 insl pop adc cwtl (bad) pop jmp movabs (bad) (bad) outsl iret rex.XB xor pop clc rex.WRXB sbb out sbb callq fdivl adc cmpsb xchg lock mov cmc adc and (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) test (bad) pop jmpq jb push mov xchg (bad) rex.RXB cmp jns lret cmp cmp cs sub cltd stos sti icebp xchg (bad) leaveq movslq rex.WX adc mov xor xchg mov and (bad) mov retq jo loop test clc cmc xor test jmpq add rex.WRX gs jo rex.X data16 jb gs cmp test add movabs lea sub adc xor sbb movsbq mov shl add mov add add test sar mov cmc test jmpq clc bt movb jmpq callq clc stc clc cmc add jmpq jmpq ds jl jge jle stc loop lahf adc jmp div loop mov rex.XB in roll pushfq retq (bad) (bad) lahf lahf sbbq push lods add push mov or adc and (bad) cwtl ja xchg not movsb mov leaveq (bad) cwtl repz jge je and and pushq int3 xor mov gs (bad) add mov lret (bad) (bad) (bad) ljmp leaveq (bad) cmp pop (bad) std stos xchg xor xor rcr rex.WRX (bad) jae xor fld jne scas mov xchg rex.B sbb and xchg lods mov push (bad) pop in fwait cmc jg jno sub fnsave movsb xchg jl,pn (bad) mov jmpq rex.X cmp nop (bad) leaveq insb retq stos scas int3 sbb sbb sti cmp xor mov (bad) mov sub cmp add (bad) in loopne (bad) xchg stos or or imul (bad) mov rex.WX push pushq push xchg pop (bad) pop jnp hlt movabs mov pop cmc cmp (bad) mov cmpsl rcr retq ss jmpq cmp (bad) cli loop hlt xchg xlat mov cwtl push pop xor cmp rex movabs in movabs xchg sub (bad) (bad) (bad) ljmp fdivs or fdivrp push (bad) or sbb pushq stos (bad) mov popfq mov lods cmp sbb lock push movsb rex.R or insb retq rex.R stc test sub adc and add rex.WB fs roll (bad) or and mov rex.B and rex.X jl notl (bad) shr outsl mov sbb insl mov add movabs or movslq (bad) mov lea (bad) clc mov cwtl jo cmc rex rex.RX jbe xchg jmp incl add add je sti int3 cmp xor adc or add rex.X jg mov (bad) cmp rex.W fisttp add rex.RB mov sub repnz loope data16 sub cmp mov mov sbb (bad) jne lea add je gs imul rol (bad) push adc sar cmc movzbw push add inc push ror push mov stc sub bt mov test stc cmp test je jmpq test xor bt clc cmp stc shr jmpq stc movzwl or sar rcr not mov stc jmpq ja rcr add ror add sete cmc xchg xchg xchg neg rcr mov ror cmc mov clc bt push add bsr mov test stc sub jmpq jne cmc bt add cmc add jmpq jmpq jmpq ja ror cmp stc add cmc jmpq add rex.RXB gs outsl outsb jae insb rex.WRB fs rex.RXB (bad) clc add jmpq cmc cmp jmpq movsbw lea lea mov jmpq callq jmpq ja jmpq add rex.WB gs push outsb imul mov bt cmp cmc bt sub test cmp clc jmpq jne ror adc jmpq add push gs movslq insb gs gs pushfq adc add test decb retq jne test test stc cmp jmpq add rex.RB jne push gs jne movslq (bad) insl gs add mov jle fisttp cmpb add pushq jmpq jmpq add rex.XB (bad) je push jb movslq jae jae jae jb add test retq jp adc jmpq jae stc add shr mov jmpq add push gs outsb fs imul add jmpq jmpq jmpq jae jmpq jo adc cmp pop int3 ja mov rex.WB jno and add int loopne (bad) xchg mov jnp sub cmpl xchg mov rex.W mov (bad) adc add add or adc iret movsb hlt movabs pop lret (bad) adc rex.WB rex.WXB movabs cmp sbb cmp mov rex.WXB fsubrs stos cwtl ficoml retq mov lret push cmp shlb lret not bt add (bad) testl mov bt jmpq jmpq add rex.RB jne push gs jne movslq jns gs add test (bad) add cmp adc rol lea add bswap btc dec rcl mov bt add test test clc jmpq add rex.RXB gs imul add push (bad) imul jo imul add jmpq jmpq cmp bt mov stc movsbw clc mov mov cmp sub cmc repnz jmpq add rex.RB jne push gs jne movslq jns gs add mov (bad) xor add add jmpq jmpq jmpq add imul fs gs outsb je not bswap mov jmpq je lea cmc push inc not bts mov movsbw add sbb cmp sub jmpq add push outsb pushq gs gs imul gs in mov int in (bad) or (bad) je andb jae (bad) (bad) enterq mov (bad) or lahf push rex.WRX jo movabs xor bswap movabs cmp clc loop shrl push (bad) enterq (bad) lods rex.WB (bad) fildll add (bad) mov (bad) fstpl pop test loope lahf cmp pop rex.WRX fisttpl lock mov (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) test repz repnz (bad) jmpw xor mov xchg jae outsb rex (bad) in xor movabs rex (bad) std (bad) lods mov fwait xchg clc (bad) test mov out fadd cmpsb jle (bad) add rorb retq or jmpq jmp add neg mov clc jmpq cmp jmpq cmc test stc xor jmpq or jmpq cmc stc cmp jmpq jmpq je xchg mov lea jmpq ja shr rol rol js sub shld clc bt add clc inc adc mov stc stc ror mov bt stc test cmp repnz jmpq clc mov dec cmp shrd mov test mov cmp inc stc neg push btr lea jmpq jmpq mov jmpq push push push push xor cs insb add add (bad) imul hlt inc rex.RXB cmc cmc test jmpq sub jmpq add rex.RX rex.RB jbe jb outsb insl outsb je je imul rex.RB (bad) decl mov adc mov or jmpq add rex.WRXB outsb push imul (bad) je outsl outsb add cwtl rex.XB (bad) callq ja jne not mov jmpq jmpq jmpq add push push push push jne jb push gs imul jb (bad) je outsl outsb add jno (bad) jmpq movabs add add callq add cmc cmp cmc movzwl inc btc bt mov test add jmpq bt movb stc test jmpq clc mov (bad) xor lret rex.WRB fwait (bad) adc jmp mov rcl lods and xchg cmpl leaveq cltd rex.WX clc (bad) shrl rex push (bad) jb xor mov rex.XB enterq rex.WRXB je mov sbb (bad) cmc jno jae adc test cld ss (bad) (bad) (bad) (bad) fist fucomip and mov loopne in rex.RX cltd scas mov xor cli (bad) stos cmp (bad) mov xor xor shll lret rex.RX jo test mov rcrb int rex.WRXB adc mov push out (bad) push mov retq rex.RB add rex.RXB gs gs movslq (bad) jo add test jmpq je cmp cmp test jmpq stc repnz jmpq jmpq add rex.WR rex.RXB gs outsl outsl outsb push gs imul add push and rclb lods (bad) (bad) stos push xchg sbb int sub in (bad) pop pop mov out sbb pause cmp sub rex.WXB imul je adc lods add fwait lahf cmp adc addr32 add xlat mov or adc iret retq rex.XB push rex.RB xchg loop fstpt jbe (bad) divl loop (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) cmp scas lret lret lods rclb mov cld ds fwait clc outsl (bad) int3 ja rol add sbb sub mov movslq pop push cmpsl mov rex.X (bad) scas (bad) leaveq push insb (bad) (bad) mov iret int sub cmp repnz jmpq jmpq jne bts shld sbb xor movsbl rcl not stc mov cmp adc sete sbb add bt mov test jmpq data16 nop lock (bad) rex.XB out (bad) lods and (bad) in scas sbb test js push xchg push rex.WRX sbb or (bad) add jb mov pop mov cmc (bad) pushfq orb pop imul push (bad) scas lret xchg fisttpl (bad) pop mov (bad) (bad) (bad) (bad) jl sbb lahf or ja xchg (bad) iret pop fdivl xor mov jae scas jge jle (bad) lods loopne rex.RB mov mov movabs mov rorb (bad) jmpq je stc cmc cmp jmpq jne bswap bsr xor shrd mov add shl add clc sar mov test test test jmpq jne shl rcr cmp mov test cmp test bt cmp jmpq add rex.WR rex.XB rex.WRB jo je imul adc btc btr mov stc clc cmc cmc shl jmpq callq cmp jmpq not neg sub mov clc test jmpq adc movslq clc or xlat add or in push (bad) mov cwtl rex.RXB cs xchg rex.XB jg jl rex.RB jnp mov pop rex sbb pop repz rex.WRB test sub (bad) rcr xchg jrcxz lret add cltd cmp cmc in repnz stos jg clc sbb add ja mov int sbb loopne jge shlb mov rorl cmp jmpq ja jmpq data16 (bad) lea sub inc ror btc dec mov cmc stc jmpq callq jmpq push lea jmpq jne shr not clc mov cmc bt or jmpq je cmp cmp jmpq pushq jmpq add rex.WRXB outsb rex.XB imul add xchg (bad) cmp add add insl imul outsl movslq jae test add jmpq std outsb xchg ror (bad) xor (bad) (bad) int mov rex.RB lahf adc in or hlt callq jnp jne mov iret testb movabs xchg push sub mov shll out pop hlt adc push fmull xchg (bad) xor ja mov or scas int3 js cs rex.WR rex.WB (bad) (bad) sti mov rex (bad) (bad) (bad) cld (bad) lea rex.XB fs cwtl test sahf xchg adc xchg adc outsb add stos test rex.WRXB mov sub add add insb cmp nop push adc loop or mov push xor mov (bad) out mov retq cli cwtl xor hlt pushfq (bad) sub in xor retq (bad) movslq mov adc cmp mov and mov movsb mov jmp mov rcll or (bad) movabs cli mov loope ficom mov rex.RX pop scas rex.RX or mov and rex.RB jo or in adc push cmp rex.RX data16 jne outsb cmp (bad) and push ficompl ss mov (bad) sbb sbb xchg mov nop push mov rex.RX cltd mov (bad) mov in je jmpq jmpq (bad) flds or adc xchg add adc lret (bad) (bad) cltd rex.W or (bad) jmpq popfq and (bad) nop sbb adc cmp movabs cmp rex scas cmpsb or mov push mov rex.WRX pop cmp mov xchg cwtl rex.WRB pop rex.X rex.XB addb xlat push xor std cs xchg sub and pop sbb mov and mov sbb jbe subb mov (bad) (bad) decb (bad) (bad) (bad) incl pop (bad) (bad) lea xor mov jl outsl (bad) xchg (bad) or mov (bad) cwtl jmp mov insb jge (bad) pop rex.B ss stos add rcrb (bad) jnp lock or adc xlat and lea push mov (bad) pushq shrl lea add cwtl retq jmpq add rex.RXB gs outsl fs rex.WB outsw jb (bad) je outsl outsb add rol add push (bad) je rex.WRB je pushq add sub cmpb jmpq add rex.R jae jb gs enterq push rol ror mov clc cmp jmpq add rex.RXB gs imul je je xchg bswap setp lea bswap movzwl lea movsbw movsbw bswap lea movsbl not mov jmpq not jmpq inc stc not cmc neg jmpq rex.XB sbb (bad) rclw or mov (bad) fs rex jmpq test js rex.WRB pop xchg sbb xchg rex.RXB loopne vzeroall (bad) outsl lret jmp mov stos mov roll jo iret lods (bad) cmp (bad) (bad) (bad) std leaveq rex.XB add cmc movabs push pop ror sti repz (bad) (bad) xor adc hlt sbb popq ja rex.WXB jbe js insl mov outsb leaveq js fwait (bad) es jg cmp movabs rex.WRX cmp ja insl (bad) lahf js ja (bad) xorl testb rex.WXB es ds cmc stos sbb or adc xchg ja jns rclb jns js test jns jg rcr sbb jns jns rex.R rex.W lahf std mov adc jp rex.XB rex movabs rex.WB jle movsl cli rex.WXB add movabs movabs retq mov sub and cmpsl sbb mov pushq pushq jo and jno jns mov (bad) jno jns mov or xchg sti jl jp scas ror xor jb jl push push push and rex.WRXB fwait int3 (bad) and jae jnp (bad) mov jl je enterq rex.RXB jle xor jge jge rcll jne mov cmpsb jle decb xor mov (bad) jbe rex.WXB jle cmp hlt cli callq retq lea andb (bad) fstp outsb (bad) jg jo jmpq rex.W js stos push in (bad) movsb mov js sub adc setnp cmpl xchg mov mov subl and loope pop orl cld test div out adc movsb adc callq repz stos pop sti incl andl or ds adc leaveq (bad) pushfq or xchg test mov stc jno mov test mov fs add (bad) jle jbe out shll cmp (bad) fsubl jb jl stc out (bad) movabs (bad) shrb xlat stos (bad) and pushq sub rex.WR rex.XB addr32 jno push or rex.WXB jne ds pop adc jge sub popfq adc fnsave nop lret (bad) mov fmul loope sub mov jg insb andl in ds mov jae push xchg sbb insb pop lahf sbb pop fs xor sbb cltd (bad) (bad) in push cltd rol imul imul push popfq add or pop xorl xchg jle mov and rcrl rex.WRXB loopne (bad) add cmpsl add jb rex.WR subb shrb (bad) rex.WR sbb jl cmp mov mov (bad) lret lret mov add (bad) test rex.R fnclex (bad) (bad) (bad) cld callq (bad) (bad) (bad) std or and adc push rex.RXB insl or mov cmp (bad) xor mov jle out xlat sbb fldt adc outsb callq or xor jno xlat mov mov movslq (bad) (bad) inc fnstsw (bad) push (bad) mov test sarl fist xchg (bad) and enterq retq adc cmc (bad) push jg push clc (bad) jmpq cwtl mov (bad) hlt and in fistp pushq (bad) int3 push ss rex.RXB insl lods mov insb mov test rex.RXB adc (bad) sbb xchg addr32 fiaddl add je insb (bad) jae rex.WRX insl gs cli or add (bad) and add cmc cmp cmp jmpq jmpq callq adc ror mov bt stc shl jmpq jmpq jmpq pushq jmpq add fnsave int3 add iret (bad) (bad) movabs xchg sub pushq outsl test or rex.WRX scas rex.W sbb mov rex.RXB int retq push and mov pop push xor sbb (bad) repz jae sbb test cmc adc push mov or mov retq sbb mov mov (bad) stc push rex.RXB popfq out jnp outsl repz rorb (bad) jno rex.RX adc jae hlt xor mov (bad) mov pop jle pushq jp pushq jmpq ja jmpq jae cmc jmpq jmpq neg cmp sub cmp clc bt neg stc bt clc cmp bswap mov movzbw mov lea setnp pop jmpq jbe rcl sub and dec rcl xchg mov bsr bsf shr btc mov movsbw rol add xchg movzbw shr inc mov sar shrd clc shl add mov mov jmpq test out and test xor out sbb mul cltd rex.RX (bad) or cld imul rex.R (bad) xchg rex.XB push cmpsl rex.WB rex.W rex.WRXB cmp enterq sbb mov shrl fwait movsl in (bad) adc test push mov jecxz xor sub (bad) sbb std jg,pt or cli (bad) sahf (bad) cmp in sbb adc (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) test lods adc adc sub testl retq xchg mov mov (bad) adc mov sti mov enterq rcll rex.W sbb rolb or sarl (bad) mov sbb xchg jb (bad) je rex.RB outsb je add xchg sub add clc adc sub cmc dec add btr setbe stc mov cmc inc mov stc repnz jmpq jne btc mov rcr sub or bsf mov stc sub cmc stc cmp pushq cmc cmc cmp jmpq jmpq rex.RX mov (bad) mov jbe (bad) outsb rex.WRB enterq push rex.WXB rex.WRXB push test sbb int (bad) mov push pop jns push test adc insb or data16 (bad) leaveq pushfq adcb add scas lret movabs jbe sub (bad) (bad) (bad) jl (bad) jl jno pushq pushq pushq negb test jmp enterq loop outsl push add jns adc mov outsl rex.WRXB sbb js fisubr add je outsl imul outsb outsw jb (bad) je outsl outsb add xor in jmpq pushq jmpq add rex.RXB gs gs je jo imul lahf jo decl xchg sub add mov sub sub dec (bad) lock add bts neg mov and mov bt repnz jmpq je cmp cmc bsr push stc bsr mov mov rcr bt sub movzbw jmpq jmpq cmp cmp jmpq jmpq je stc jmpq add (bad) in jmpq pop gs xchg loopne (bad) add subl mov push lahf sbb std and adc stc shll sbb sbb mov insb nop negb (bad) jge fnstsw rex.W retq (bad) rex.WRB mov fwait mov push cmp cmpsl (bad) sub roll in cwtl (bad) mov push jmpq (bad) pop add pop mov xchg (bad) pop mov clc in pop cmpsl sarl jrcxz (bad) ds xor rex.WRB repz lods sbbb rex.WRX cmpsl test movslq adc in jrcxz xchg (bad) pop insb (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) test test rex.RX mov sub std cltd movabs scas xchg lock xor loop (bad) addr32 jno (bad) test jle jp lock callq add sbb in loopne shll movsl imul movabs add movabs mov add insl xchg pop rex.WRB lock sbb adc (bad) scas es (bad) nop jo mov pop push (bad) mov outsb (bad) rex.WB movabs outsb ss rorb mov (bad) scas movsb (bad) jl (bad) mov cmp negb loope (bad) jp push add stc xor cltd sti jp mov xor (bad) xor xor lock jp stos shlb (bad) in lea rex.X hlt sbb (bad) mov add xor jb sbb (bad) rex.WRXB jmpq cmp jmpq clc out (bad) fildll cmp (bad) sarb fsubp (bad) roll rex.R xchg repnz jmp cmp rcrl clc adc lods (bad) xchg (bad) add cmpsl or push ror (bad) xchg xorb jle rex.WB stc rex.WR lea (bad) nop xchg xchg mov mov lcall sub std gs (bad) (bad) decb (bad) (bad) (bad) (bad) (bad) incb push ja adc pushfq sbbl add movabs pushfq imul out xchg cmp sub pushq fldenv out mov and ja push repz push std sbb in shll popfq xchg int3 jp sub and rcrb sti out lret and cs or (bad) lock (bad) or (bad) mov xchg (bad) (bad) push (bad) clc loope insb fwait mov test xor pop lock xor push mov cli lock rex.WR mov (bad) xlat out fs add fimull mov rex.WRB sbb jmp sbb rex.W adc cmp xchg loope fiaddl jno pushq mov cmpsb cmp addr32 rorb jnp nop enterq and cmp sub push adc callq add lret pop (bad) mov loop jae mov leaveq icebp push add in xor xchg rex.B pop sbb mov and (bad) jrcxz sub sub rex.WR (bad) rex.WRXB mov es cld cmp iret nop (bad) lret mov movabs pushq (bad) (bad) decb stos sti mov rex.RXB rcrl ja or jo xor mov fistpll outsl mov frstor sbb (bad) xor mov stos mov xor cmp jl (bad) (bad) mov mov repz hlt pop loopne movslq pop cmp rex.WX int3 adc cli rex.WRB push cltd testb mov addr32 pop (bad) (bad) (bad) mov jrcxz iret movsl jg rorl rex.RB lock jae bt bt jmpq add rex.WR movslq rex.RX add add push (bad) insb imul add add jne pushq jb movslq outsb rex.XB movslq add adc mov movabs sbbl add cmpsl popfq rex.X mov mov adc xor rex.WRX xchg mov add in mov (bad) andb jne cmp pushq cmpsl lods jle retq fisubr pop (bad) (bad) jb rex.WX cs int mov outsb cmp mov movntps std (bad) fadd pop repz (bad) (bad) push lods (bad) paddusw cltd xchg rex.WX xchg and sbb cwtl xor pop (bad) iret rex.WR scas test leaveq mull push sbb out div cmp xor rex.XB rex.RXB sub movabs rex.WXB test jo cltd or cmp xchg add ss or scas xchg addr32 mov rex.WRX (bad) cwtl int3 sti mov in sub fisttpll iret lret mov push mov test pushq mov and (bad) pushfq push rex.WRB icebp icebp std in rex.WRB movabs cmc and imul and movabs jle (bad) mov xor xor test push pop shrb push add mov mov adc roll punpckhbw scas xchg outsb (bad) pop jb xor xor test (bad) mov rex.WX btc mov rex.X fdivrp (bad) (bad) decb (bad) (bad) (bad) (bad) test movsb or sbb leaveq mov movl nop xchg std in jp sbb and add (bad) or iret fs divl addr32 adc pop mov mov cmpsl clc add out lret out lea (bad) std xchg xor adc and push fisttpl rex.WB rex.XB xchg mov addr32 cli ficomp push rex.WRB mov callq fdiv xbeginq push pop clc add mov xchg popfq (bad) lods adc adc (bad) icebp imul fdivs mov outsb mov push mov or xlat cmp (bad) shrb sti iret xchg pop xor (bad) es push sbb pop (bad) (bad) (bad) sti test (bad) (bad) (bad) (bad) and adc jne or popfq mov sub cmpsb movabs or add add add add jns mov cltd rex.R rex.X xchg mov cmp sbb in or and cmp rex.WR out xorl jbe fdivs lods data16 hlt stos xchg lret icebp lahf xchg mov cmpsb or rex fsubp enterq xor imul sbb sub callq sub jo cmp nop cmp (bad) mov (bad) or cmpsl loopne roll nop (bad) in adc (bad) cmp lock mov movabs jb (bad) mov loope jp shrl (bad) mov jne (bad) mov and mov retq pop clc mov retq jnp sbb push sub push sbb mov out (bad) movabs in incl retq popfq add jmpq cmp cmp jmpq add rex.R gs jb jns outsb jbe jb outsb insl outsb je insb outsl movslq je test test add jmpq add cmc cmp bt jmpq cmc bt test cmp jmpq add rex.XB (bad) je push imul imul cwtl cld add fild mov sub je (bad) (bad) sub (bad) hlt repz (bad) xlat add pop adc mov (bad) push jo (bad) nop push shrl and callq nop movabs (bad) cwtl mov out mov mov sarl or subl push mov (bad) (bad) decb (bad) (bad) (bad) (bad) test int3 cs or mov lret (bad) jns mov pop stc retq ja sbb adc jp iret (bad) fldcw push or add repz push cli rex.R loope repnz fcomps adc lods sub xchg add loop (bad) pushq mov mov callq ja jmpq add rex.W gs jo imul gs imul (bad) jne gs add mov out (bad) rex clc (bad) nop fdivrs rex.WRXB cmp xor retq xor xor pop mov imul jbe pushfq sbbl or mov pop insb mov (bad) pop sbb (bad) adc jae fwait push movabs push cmp and cmp mov mov out add iret (bad) add lock (bad) (bad) std or mov std shl rex.XB stc push retq cld add add or cs adc xor (bad) shrl retq mov pop rex.RB mov xor rex.RXB cmp scas lret ds (bad) lea rex.WRX cltd sarl pop push rex.R sahf cmp sbb pushfq cli add adc movabs add movslq gs outsl imul add jb jne insb rex.B insb outsl movslq jmpq je stc jmpq je jmpq push push xor xor fs insb add rex.RXB stc test bt stc test jmpq mov adc rcl not sar mov cmp clc clc push sub bt mov cmc jge sub jmpq cmc bt jmpq add push gs (bad) outsb fs rex.XB jne je jmpq sub cmp (bad) mov cmp cld shr add (bad) xlat adc ss mov (bad) mov or mov mov (bad) or mov mov rex.RXB rex.WR loopne mov gs (bad) pop cmp fmul mov fadds loope add retq mov flds push rex.WXB cmp fstps leaveq xor loop lods and mov xchg xor (bad) (bad) decb (bad) (bad) (bad) lcall repnz lret jae pushfq xchg jo (bad) mov sub imul rex.WR and sbb (bad) mov jns insl sbb xor sbb jae add shll (bad) (bad) mov xor out adc sahf shrb sub cmpsl leaveq shrb in xor pushq cmpsb shll sbb out frstor lret mov (bad) loopne cltd movslq mov rex.XB rex.WRX test mov xor shrb hlt cmp cmp sahf rex.WX rex.WX adc (bad) es lret xchg mov movslq push out loop movabs gs pushq sbb out and icebp adc rex.WX add (bad) jno (bad) (bad) decb (bad) (bad) (bad) lcall cli movabs gs sub rex.R imul add sbb imul jno mov imul (bad) cmp or scas test add test rex.WB ds lea scas mov mov mov cmp cmp js andl rex.WRXB repnz ja fldt fwait add add jae lret fiadd insb (bad) cmc cwtl movabs mov sub cltd mov add jo mov cmp stc mul (bad) (bad) (bad) sti mov add ds movsb stos std cmp ja pushq cmp clc lret (bad) out ficom pop (bad) add mov mov add (bad) ficomp rex.RXB sbb pop (bad) and rex (bad) rex.RX mov in rcrl xor add neg rcl neg (bad) lock cmp add ror bsf rcr mov stc stc mov bt jmpq add rex.WR rex.XB rex.WRB jo je imul (bad) add bt rol cmc clc clc clc mov cmp add bt test je jne sar mov lea bt shr mov stc test stc jmpq stos addr32 sub mov xchg roll sub (bad) (bad) mov mov fiaddl divl je iret std shll jo cwtl clc fild (bad) (bad) ja mov (bad) sub push or (bad) xor lods and mov sbb pop outsl retq (bad) sub test cmp mov mov repz rex.X jns iret mov adc js pop adc notl (bad) in (bad) jp (bad) pop or sub popfq pop xor cmp retq cltd rex.X mov cmc imul nop cmp pop (bad) xchg (bad) sbb cmp mov (bad) sbb pop (bad) add (bad) (bad) sub cltd xchg (bad) mov push stos sub mulb rex.RXB rex.W (bad) (bad) decb xorl fstpt stc mov sbb out jmp rcrl (bad) out fcompl cmpsb xor insb (bad) test cmp sarb es movsb sbb callq adc mov rex.WRX andb add sbb sbb jmpq add push gs imul (bad) jne gs add add imul movslq jne je imul add setne bts add push neg movzbw mov rcr sar sub setno not lea bswap lea jmpq mov mov not mov mov lea lea jmpq add rex.XB (bad) je imul add add push gs movslq imul imul movslq fmuls and imul mov cmp mov rcl sbb (bad) callq (bad) and test xor mov rex.WRB push (bad) (bad) pushfq sahf int sub clc (bad) stos xchg jmp ja mov xor rex.RX es (bad) (bad) add shll rex.XB rex.W push pop add add (bad) cmc mov sbb sbb and (bad) adc (bad) pop jns insb (bad) or mov xchg mov out jb ja out rex.WRX iret rex.R subb rcr jbe pushq mov mov and outsl movsb pushq mov lods xchg adc insl lret movabs and vmovq mov (bad) push movsl ljmp (bad) imul or lock (bad) or (bad) pushq sub imul jno movabs xor in sbb fisttp retq scas enterq gs or sarb lock (bad) cld jge cli jnp rex and pop xchg push mov insb (bad) mov (bad) lahf test test nop insb xchg jb pushq sarl insl and add cmp lods data16 imul mov lods and insb ss repz in jl movslq pushfq xorl push rex.W rorl out je outsb jle jge insb (bad) cmc jne insb add cmp addr32 sbb (bad) push jl sbb insb xchg jbe insl divb sarb (bad) lcall leaveq (bad) rex.WX push (bad) lret (bad) rex.RXB rex.WRB jnp jp jl xchg int rex.X jmp outsl cmp sbb test (bad) rol scas incb movabs cmpb outsl push sahf (bad) loopne adc or subb cmp sbb mov cltd rex.R retq subl imulb (bad) (bad) (bad) icebp sub jo cmp jno pop stos and (bad) xchg test push jp jno jae data16 cmp cwtl in mov test jae rex.WR jae (bad) nop cmp test imul fucomp movabs sub cmpsb cmp pop insb sbbl adc (bad) psubusb mov callq mov jns lea or push negl ds rex.XB out in (bad) jl lods mov mov rcrb adc push jmp mov test (bad) popfq psraw sub data16 (bad) sub fmul in (bad) mulb add movsb adc insl pop (bad) push pop jle out test push cmpsl cs cmp rex.XB shrb movabs pushfq (bad) mov sbb stc jns ds cmc ds rcll fdivl (bad) iret mov (bad) add clc xchg ds mov std mov mov (bad) (bad) (bad) (bad) ljmp addb or popfq scas pop cmp lret lock insb stc mov rex.XB repz xchg int cmp fmull pop addl xchg pushq cmp jp imul or lret ds mov sbb (bad) push loop add je imul jae add mov movzbw mov jmpq test jo jmpq add rex.RXB gs pushq rex.R gs je jo or jmpq jne clc jmpq jmpq add rex.RXB gs outsl fs imul js add test sbb mov movsl rex.W stc bswap cmc rol sub neg neg mov bt sub jmpq clc jmpq test and add add (bad) and add (bad) (bad) adc add add sbbl add pushq adc add add pop sbb add and add add movabs rex.RXB add add (bad) xlat sbb add stos sbb add add add push adc add add cmp add add loopne sbb add add pop sbb add add add add fwait ja add add add sbb add or add add add sbb add push and add add (bad) push and add add mov add add adc add add jnp sbb add or add add add add (bad) jae add add add add add cld sbb add callq add add add adc add add add imul add add add add add add add add add sbb add add data16 adc add add rorl add add add mov add and add add add sbb add add add movabs and add add sti mov add xchg jns add add add sbb add add add add add sbb add push and add add rex.XB sbb add (bad) add add add push and add add adcl add add cwtl rex.RXB add add add adc add add (bad) (bad) adc add add fild add add add sbb add add add and add add mull add add and add add add mov add add adc add add rex.RB sbb add sbb add add add add in adc add add rex.B add add (bad) sbb add add add (bad) add add jmpq add add sbb add and add add je sbb add jnp add add add or add add add add add push and add add cltd out sbb add sbb add movabs (bad) add add add sbb add add (bad) rex.WXB add push and add add std sti sbb add add add adc add add lret adc add add sbb sbb add add add sbb add adc add add sti rex.WB add mov add shll add add add (bad) (bad) add add add sti sbb add add add jnp add add add or add ja sbb add add add add add sbb add add add adc add add mov sbb add sbb add adc add add stc rex.WR add add shrl add pop pop and add add fcomp sbb add outsl and add add pop or add sub adc add add cltd push adc sub adc add add mov (bad) add add add nopl add add xchg (bad) sbb add add add add add add sbb add (bad) and add add movabs (bad) adc add add fwait (bad) adc add add outsb retq add add xchg cli sbb add add add sbb add add add add cmp add insl pop adc add add rex.RXB and add add add add add sbb add sbb add loop add add add cs add sbb add push and add add mov add add add rex.WX add add add add add add add sbb add push and add add xor sbb add or add add add add add adc add add cwtl push adc add add mov sbb add add add add add add add add add add pop adc add add in mov add add add jno add add add add add add add add add insl add add add add adc add add imul add es sbb add add hlt push and add add xchg imul add rex.WR add add mov adc add add pop push and add add and add cmp add add add or add mov sbb add sbb add or add add add push and add add and add add add add and add add mov sbb add add sub sbb add sbb add xor add add add add add add add sbb add add add rex.WRXB add add insb jo add add add push and add add adcb add add add add add add add add add add add adc sbb add add add add subb add add orb add add add add add cmp add add add add add add add add add add add add add add add add add add add pop (bad) sbb add add add add add add add add pop adc stos push and add add mov sbb add add add jrcxz add add add add add sbb add cld sbb add rex.WB add add add pushq add add add adc add add sbb sbb add (bad) (bad) add add add add add add add sbb add adc add add jo sbb add jle add add add adc add add add add (bad) adc add add std sti sbb add and add add jg sbb add add add add add add (bad) adc add add pop rcrl fwait sti sbb add add (bad) outsl and add add cs sbb add push and add add imul add add rex.B add add and add add pushfq (bad) sbb add push and add add rex.XB add add add sbb add fcomps add add add push and add add jle sbb add rex.WR add add mov adc add add test (bad) add add add pushq add add add sbb add nopl add add sar sbb add adc add add push callq add add add jnp add add add or add add add add sbb add add add nopl add add mov (bad) add add add (bad) (bad) add add add mov add add add sub add jle adc add add in jb add add add mov add lea add outsb (bad) adc add add test and add add sbb sbb add add add (bad) (bad) add add add add pop adc add add add pop and add add gs add xchg add add add add sbb add or add sub add add add add add fcomps add and add add add sbb add (bad) (bad) add add add (bad) adc add add je sbb add mov add mov sbb add adc add add adcl add add add sbb add add add add add and add add (bad) movabs adc add add (bad) mov add sti rex.WB add add add sbb add sbb add mov add out (bad) add add sarb add mov and add add add add add imul add adc add add xchg jns add add add adc add add add callq add add add rex.RXB add add (bad) cld sbb add add mov add add adc add add xchg sbb add sbb add scas sbb add (bad) adc add add mull add add add add add add push adc add add mov add add add add add add add add add add add add sbb add (bad) adc add add cltd out sbb add sbb add add add sbb add (bad) jb (bad) push cmp jmpq add rex.WR movslq rex.B insb outsl movslq jmpq stc lea sar bswap sub mov lea mov movsbw pop movsbq mov movsbq mov pop not xchg movsbq xchg pop jmpq jae shr stc btc jmpq je jmpq xor stc jmpq mov jmpq movsbw setbe lea jmpq jmpq cmp jo je jmpq jb cmp stc cmpb jmpq je cmp add stc test cmp jmpq jno ja bt stc jg clc imul cmp test bt bt add jmpq (bad) mov sub xlat cmp (bad) cmp movsl rex.B (bad) add (bad) rex.W adc jp xchg sbb lods sub retq add jmp sahf xchg pushq adc (bad) out js mov (bad) (bad) pushq test (bad) adc (bad) movsl movslq insb mov pop mov and enterq (bad) (bad) xlat cmp (bad) (bad) incb rex.RXB rex.WB mov jrcxz movabs enterq adc fcmovne (bad) movabs stos out sub sarl jrcxz pushfq mov adc out outsl or cltd sbb xor rex.WR iret retq js xor sbb or mov add test jmpq jmpq ja bt stc stc clc imul test cmp test add jmpq cmc add jmpq setnp not mov bswap jmpq jbe xadd rol mov bsr add bswap mov cmp shrd add bsr and or rol movl bts shl mov clc cmp jmpq rex.WRX rex.RB push xor cs insb add test (bad) bt shrd add (bad) cmc movzbw test mov test cmp cmc add bt mov bsr sub mov inc mov stc clc cmc cmp jmpq jmpq jmpq jmpq test jmpq mov cmc test jmpq add jmpq je not sar btr push shl jmpq jne lea neg rol or xor btr mov mov not ror sbb add neg sub add test mov clc test jmpq jmpq clc repnz jmpq jmpq jmpq jmpq add push push rex.B rex.R insb imul movslq je add (bad) and add cmp test cmp cmp js ja test adc rcl or add inc (bad) hlt neg mov bt clc stc clc cmp jb jb test test cmp jbe ja jmpq and cli xchg loopne (bad) xor ja or or lret cli lock jmp sub mov jbe mov loopne adc xchg mov clc mov xchg std rex.WRX rex.RB pop movabs jg imul mov jp xchg adc rex.WXB (bad) in mov imul cmp fidivrl sub and and adc (bad) decb (bad) (bad) (bad) (bad) (bad) mov lret cmc pop vcmpord_spd (bad) mov cmc jg stos callq jrcxz test movsb (bad) out xor jge (bad) xor mov es imul or negl subb out imul adc pop add mov movsbw rcl shld bswap sub lea lea lea lea jmpq add rex.RXB gs outsl movslq rex.WB outsw add adc stc cmp cmc or jmpq loop adc mov faddl mov xchg rex.WB test adc xchg rex.W xchg shrl mov imul jns sbb stos mov fcmovu lods sbb (bad) repz xor (bad) (bad) rex.WXB rex.RB cmpsb (bad) pop pop cmp jno mov imul addr32 insl movslq sub (bad) or (bad) repz (bad) (bad) imul lret pushq xchg cld mov (bad) clc mov (bad) and (bad) pop add jne btr mov rol shr bsr movsbl sub bt stc mov test sub test pushq cmc cmp bt test cmp jmpq jmpq lods jge (bad) sub xchg shrb clc mov pop mov and out mov fdivs rex.RXB xchg (bad) (bad) (bad) cmc jrcxz or movsl jb pop xor fbld retq (bad) push mov scas jge (bad) (bad) pop jp mov rcll push (bad) movabs (bad) mov fcoml cmp add mov (bad) (bad) push sahf lock push push or mov (bad) adc mov out sub addl pop cmp fiaddl and out movabs sbb movslq orb movabs cmc jmpq je bt sub cmc cmc stc clc cmp jmpq add rex.RXB gs push rex.WB outsw add js rex.WRXB out (bad) xor in sbb jb xchg addb callq (bad) in cmp mov sbb rex.RB mov insl pop popfq lret sbb rex.R sarl (bad) (bad) popfq sub (bad) push rex.WX mov imull imul iret or xchg retq (bad) lea icebp pop in (bad) (bad) (bad) (bad) decb (bad) (bad) (bad) decb xor scas int xchg retq mov movabs jbe (bad) or rex.WR imull loop push rorl add imul rex.WRXB (bad) sub (bad) push loop cmp mov std (bad) insb ss je mov imul xor sbb mov movsbw bsf rcl mov cmp stc sub jmpq jne not lea jmpq jmpq xchg mov xchg mov lea movzbq setl lea movzbw xchg setb mov movzbw lea movzbw movzbl lea jmpq (bad) mov fs pop js outsl adc movabs loope mov fstp dec repz cmp jle jnp and sahf cmc out movabs sbb retq (bad) sub hlt xchg sub pop repnz or pop sbbb rex.W stos jle and mov loopne rcrb js mov in sbb and push rex movsl push addr32 rex.RXB sbb decb (bad) (bad) (bad) (bad) xchg push mov push es cwtl and rex cmp mov cmp add cmc rex.RX jno (bad) mov (bad) mov lret ds jb sub scas rcl mov sbb rex.WRB add out nop in rex.RB ss xor cmp test xchg cmp rex.WRX xchg stc (bad) mov or test mov push test pop jns (bad) fadds sbb xchg out adc loope rorl iret callq and jle (bad) pop rex.W (bad) jg std popfq xchg lods sti lock (bad) lahf jmp jge hlt mov mov sub mov roll jmp mov movabs outsb (bad) movabs sti cmp pushq rex.RB mov rex.WX (bad) (bad) (bad) (bad) xchg push movabs mov in rex.RX out cmp or push push ss insl lods (bad) push cmp (bad) mov xchg test movsb pop sbb push rex.XB fdivrs test sbb mov jrcxz sbb cld (bad) in (bad) movabs rex.WXB and cmp movsb pop sbb xchg jae (bad) clc retq xor rex.R jb adc cs mov mov rorb in (bad) pop adc sub mov (bad) (bad) (bad) decb sub rclb movsl jnp add add cmc fs scas sub (bad) sbb loopne ja rex.RX (bad) addr32 fstp sbb int3 int repnz cmp jle cwtl ja rex.XB add add (bad) adc jns adc xchg cli xor jo outsb rex.R gs je jo add test in sar or bswap sub jp xadd mov movsbw shld rcl bt mov and shr shrd movsbw rol mov cmc or jl je clc jmpq add rex.RX jae gs (bad) insb jne add test add add icebp inc neg movsbl push xor shr mov sets test shl dec sub not bswap movzbw lea jmpq adc jmpq jmpq add rex.XB outsl jae rex.W outsb fs gs (bad) (bad) mov mov mov shl cmp (bad) icebp (bad) ror shr mov mov cmc or jmpq ja jmpq jmpq add rex.RXB gs jne jb outsb je jb movslq jae jae sbb or mov stc mov mov mov cmc btr sar mov mov stc test sub cmp test repnz jmpq jmpq jmpq jmpq add rex.RXB gs jb movslq fs jae add add jne push jb movslq jae jae add rex.RXB gs je imul push add jl test rex.XB data16 (bad) jnp cmp movsb (bad) in and lods sbb test rorl rex.WX retq sbb (bad) repz in xchg jno push add lods (bad) (bad) fwait adc shr jmpq pop (bad) (bad) (bad) imul mov test (bad) (bad) (bad) (bad) mov mov cmpsl rolb or sub (bad) push xor std mov cmpsl retq adc in lahf fnstenv sbb rex.B cli test sbb (bad) icebp (bad) mov rex.X stos and and fnsave xor jmpq jmp mov dec push fs or mov (bad) mov (bad) jbe push test (bad) sub pop gs sbbl and (bad) cmc rex.WRX rex.RB lcall or loope lret sarl cvtpi2ps push rex.WB mov (bad) (bad) jl fisub mov mov incb (bad) and jg xlat outsb and retq jge (bad) mov xor pushq (bad) (bad) (bad) push push cmc xor sub xchg jge (bad) xor jg pop push jmpq test stc stc clc add jmpq add rex.WRB gs (bad) rex.X js add test bt movb clc test test jmpq jmpq jmpq jae jmpq jmpq jmpq cmc cmp clc neg jmpq movzbw mov seto lea mov bswap lea jmpq callq jmpq jmpq clc cmpb jmpq jmpq callq cmc cmc or jmpq pushq jmpq jmpq inc clc not bt cmp test clc neg test test stc stc sub stc bt jmpq je jmpq add rex.RXB gs jne jb outsb je jb movslq jae add not not lea lea jmpq jmpq jmpq je test stc bt sub jmpq add push gs insl gs pushq add add gs je rex.WRX insl gs imul mov sub sub neg sub mov neg shl and (bad) lock mov mov bt bt test jmpq jmpq add rex.XB outsl jae push imul (bad) je outsl outsb add hlt jae add xchg jge decl movabs cmc bt stc bt add jmpq xchg mov sets mov jmpq add rex.RXB gs imul jae jmpq mov (bad) (bad) mov rex.R (bad) jmp mov jmp sub add imul hlt in loope xchg test fdiv (bad) lock or mov mov ja,pt (bad) imul jmp fsubl outsb adc xchg (bad) xor mov es (bad) repnz rex.WRX rex.WRX adc rex.RB test and ds pop (bad) hlt or lock js stos or xchg (bad) out mov mov orb (bad) (bad) decb (bad) (bad) (bad) (bad) test ja cmp fwait rex.B std in retq mov sbb (bad) loope rex.RXB negb and push sub xor lock jno (bad) (bad) cld fistpll add sti cmp mov adc add je outsl insl insl (bad) outsb imul mov pop hlt (bad) jmpq je jmpq jne btc sub cmp test mov shr sub add cmc test mov bt jmpq jmpq jne not mov jmpq jmpq jmpq movsbl mov mov lea jmpq jmpq jae not btc not and mov shl mov and cmp mov mov test test bt sub bt jmpq or jmpq add rex.R insb imul imul js cmp cmc repnz jmpq add rex.XB (bad) je push pushq add rex.X (bad) jmpq cmc cmc cmpb jmpq push movslq xor cs insb add add imul jae rex.WRB gs outsl jb add test (bad) decl mov push (bad) icebp rcl mov setp sete sub movzbl bswap sete setne lea jmpq callq bsf and ror add lea movzbq mov bt cmpb jmpq jbe jne setae jmpq jmpq sub neg add cmp test shl mov neg ror rcr mov bt stc stc repnz jle jne cmp cmc bt clc movb clc test jmpq rex.RB sbb (bad) jmp sbb mov in ds rex.RXB addb add mov retq loop shl (bad) (bad) rex.RXB or or loopne pop (bad) mov movabs xor cmpsb outsl fcmovne jmpq mov rex.WXB and rex.WB xchg enterq iret jmpq xchg mov movsb cmc sub push mov decb (bad) (bad) (bad) (bad) test je outsl (bad) retq loope or jnp and (bad) fistl (bad) mov xor and (bad) adc (bad) leaveq (bad) jne test (bad) cmc cmpsl (bad) adc fdiv movsl nop mov jnp add cltd xchg sbb repnz add dec add cmc xor rcl add dec xchg lea lea jmpq add rex.W gs jo jb (bad) je add jmpq add rex.RXB gs jae jb gs jne je rex.XB rex.WB add jb or jl (bad) in xor ds (bad) out sbb (bad) icebp mov outsb imul (bad) pop (bad) es jrcxz mov sahf rex.XB sub mov lods mull rex.WR testb mov enterq jbe js adcl in rex.WRB pushq (bad) hlt push mov mov (bad) movabs mov pop movabs and (bad) (bad) decb (bad) (bad) (bad) lcall mov sub lret rex.XB mov jge insl rex.RX pop rex.R xor jne mov fucomip (bad) (bad) lock sti gs and jrcxz jbe rex.WRXB movabs cmpsl (bad) jo cmp movabs fwait movabs shlb (bad) or mov movabs mov (bad) and add sarb ficompl (bad) or imul jl insb push lods test (bad) (bad) mov (bad) mov add adc sub cltd push rex.WR stos jnp rex.WX imul es icebp (bad) decb or out add sbb jrcxz mov sub cmp lods (bad) mov (bad) add pop data16 sbb (bad) (bad) (bad) decb (bad) (bad) (bad) lcall mov mov jne rorb icebp sahf cli cmp out mov popfq mov cmp adc ss movabs insl movabs negb xor enterq jmpq adc test or fisttpl jl adc mov lret xor movsl xorl jae sub or and movabs clc movabs add adc fistp jle test push mov (bad) cmp cmp jb adc (bad) out add add mov rclb or stos mov rex.WX rex sti mov outsl cmpsb or add adc pop out rex.W push hlt xor (bad) es outsb (bad) (bad) fdiv rex.WXB sub insb rex.XB (bad) loopne jg outsl add jg and insl movsb rcl mov rcll in shl pop cmpsl mov (bad) movabs jne jmpq jmpq jb bt cmp cmc cmpb jmpq add push jns je insl push (bad) jb insl gs jb rex.WB outsw add xchg loopne imul bt stc add jmpq dec test cmc stc test xor jmpq add rex.WRX gs jae jb outsb jne add shrb rorl jmp mov and mov mov xor mov cmp cmp cmp cmpb jmpq in and rex.RX xchg movsl sbb fimull stos pop js rol imul shll xchg rex.WXB push out pop (bad) jno adc sub cmpsb scas rex.RB lret lock movsb (bad) (bad) imul insb movsl mov lahf xchg add imul nop mov add push rcrl xchg ss add add or jge mov cltd rex.WXB rex.WR pushq xchg divl or or js notb jp fidiv (bad) mov pop and (bad) mov bnd xlat jo push add jmp rex.WR xor jmp or data16 sbb (bad) add mov imul xchg rorb (bad) scas rex fiaddl jnp rex.RX leaveq sti add nop push mov cs in push rex test (bad) xor and xchg jge xor es push mov cs (bad) (bad) decb push in pop leaveq push mov mov mov or xor xlat adc movsl mov jl rex.B rex.RX sub and jge rex.WRXB (bad) loope jp rorb pop lods sar jb (bad) mov (bad) jmp or repz gs push sarb rex.WB sub sbb sbb movl (bad) (bad) jmpq jne btr xor adc sar stc mov or clc add adc rcr rol stc mov jmpq bswap pop jmpq je jmpq callq jmpq ja clc stc cmp add test or jmpq je add movzbw push add rcl mov bt stc shl btc sub movzbw lea jmpq movb bt cmc test jmpq jb stc bt cmpb jmpq not mov test mov rex.W mulb mov add add ror shr movzbw dec shr or mov add and sub add bswap jmpq jmpq je setnp jg xchg movzbw lea mov lea movzbl mov movzwl bswap mov not movzbw lea movzbw mov jmpq jb jbe cmp jp jae (bad) testl mov sbb rcl mov jmpq je test jmpq stos jmpq add rex.XB (bad) je rex.XB insl jo je (bad) insb gs rex.XB movsb not movsbw pop jmpq jmpq pushq jmpq jne jmpq jmpq je bsr shl mov sub push not cmp mov data16 lock sub not movsbw lea jmpq je data16 fisttpll adc sub scas rex.WRX add xor loopne iret cltd push xchg sbb lret out movabs rex.WX gs sub (bad) movabs scas in out add lea (bad) jae loop fwait mov out push add jbe lret xchg fsubrs (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) test add lock insb or (bad) lock notb jp (bad) mov (bad) ds nop fwait scas (bad) add sti movabs and pop insb push mov repnz push xchg (bad) fildl rex.W add retq lods fstpt mov jb rex.WRX hlt popfq out sub adc (bad) ss (bad) mov enterq adc sub mov add xchg jge (bad) mov sbb imulb imul jmpq add rex.RX rex.RB jbe jb outsb insl outsb je je imul leaveq jmpq (bad) enterq push (bad) outsb jno mov sub loop nop rex.WB sbb in (bad) (bad) scas lret in sbb fldcw mov loope (bad) or or or add insb (bad) xchg out (bad) lret rex.WXB addr32 lock hlt jmpq lahf adc fiadd rex xchg add mov mov (bad) mov rex.RX (bad) (bad) std or (bad) incb jle movabs xchg mov loope clc push popfq stos lret stos jne (bad) mov int xchg negb add add jo xchg xor movabs (bad) stos sti add xchg std mov xchg xchg in and pop xor push cmc xchg notb jnp movsl mov addr32 add xchg stos movslq xor and adc jge (bad) cmpsl repz fsubrp mov (bad) out cltd cld jmpq add rex.RXB gs rex.XB add test rex.WXB callq fcomip fisttp test or (bad) jmpq jae jmpq add rex.WB imul rex.XB je movslq push movslq outsb add add je imul stc jmpq jl pushq jmpq cmc jp sub cmp cmp jmpq inc clc js stc stc not cmc cmp bt clc neg cmp stc sub bt bt cmc neg cmp test clc cmp jmpq ss xchg sti fsubp (bad) fimul repz lods sbb nop sub faddl rex.X cltd pop pop (bad) (bad) (bad) (bad) stc callq pop mov mov (bad) mov out popfq out xchg xchg jno fadds movabs pop mov (bad) (bad) sub push mov rcrb push (bad) cli pop xlat and jne callq mov mov (bad) (bad) (bad) (bad) test push movabs mov mov rex.WX stc fld pop repz and rorb fs or icebp xor movabs sarl jo movsl xor nop stos jne (bad) xor lret addr32 pop movslq (bad) cld fistpll hlt rex.WRB mov rex.WR xchg shrl push jns je insl push imul insb jae jb add add je jns je insl rex.R gs jne je rex.XB rex.WB add add callq in and cmpsb sub (bad) jmpq jb jmpq jmpq add insl outsl jne gs gs outsb je push lock std std mov rex.B jge test cmp mov (bad) (bad) ss subl in jge mov rex.RX in (bad) pop pop iret add jrcxz sub test pop std xchg movabs ss jrcxz xchg (bad) xchg lods xor and test mov callq enterq faddl (bad) mov ljmp cmp in jmpq pushq jmpq add rex.RXB gs pushq rex.WR movslq add add jae outsb fs pushq add add push outsl movslq je add test rex.WB push mov cmp add cmp jmpq jmpq jmpq jmpq jmpq (bad) adc movabs (bad) and mov xor movabs (bad) lahf movslq sbb (bad) xchg rex.B cmp rorl or vcvtdq2pd mov nop ss jne movsb cltd popq enterq xchg jge loop (bad) sbb callq add cli (bad) lahf fdivrs and (bad) (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) mov (bad) js jnp out (bad) fildll fldt rex.XB int3 (bad) cmc test add cmp loopne push rex.WB xor xchg rcr mov clc popfq stc sahf movslq movabs cmp cmpsb mov loope movabs (bad) (bad) lock in mov (bad) pop xchg pop lods es jb in or (bad) sub and add je imul outsl outsb rex.WB outsw push imul push jne jb push gs outsl jb (bad) outsb movslq outsl jne je jb jmpq add push jns je insl push imul insb gs imul movabs lret setbe not mov xchg jmpq mov shld inc mov stc cmp jmpq add rex.WRXB outsb push pushq add (bad) (bad) (bad) jmpq mov movsb (bad) decl xchg bt cmc imul jmpq jne setge test mov mov cmp bt cmp test or jmpq jmpq je cmp stc clc cmp add jmpq lea mov movzbw mov jmpq pushq jmpq ja cmp add stc bt or jmpq push push rex.RB xor cs insb add test mov lea mov movsbl movsbw mov not mov mov jbe lea jmpq pushq jmpq inc dec data16 repz mov cmc and bt add bt clc test add stc sub jmpq jmpq callq jmpq stos jmpq dec stc cmc xor clc shr jmpq jne not movsbw jmpq jmpq callq not add add bt btr movzbw mov bt stc bt test cmpb jmpq insb stos pop je adc mov (bad) hlt test add xor in jns hlt shrl movabs mov int3 (bad) ja xor mov mov or xor callq sahf fidivr enterq repnz imul es sub fdivl pushfq pop mov jmp pushq xor in and es enterq (bad) (bad) jne outsl movabs cwtl (bad) or movabs rex.R mov push xor pop or sub int3 pushq js add out mov lods push pop sub and test mov enterq jae xor ficom popfq mov mov fnstenv out pushq outsb push cmpsb adc shrl in mov mov stos xor frstor xor rcrb jb jo out adc sar gs or outsl rex.WX jg cld lahf rex.W test fisubrl (bad) imul lock jmp (bad) sub in lods je mov movsb pop pop pop or scas mov xor out (bad) (bad) rcrb mov es js sbb sub movsl cmpsl lods sub add addb mov mov adc movsb mov (bad) adc leaveq (bad) add cmp divb pushq push pushfq js mov pushq cwtl (bad) ficoml or push (bad) (bad) fldcw out adc int scas scas in pop pop pop rex.RX jnp lret rex.WXB (bad) outsl (bad) add enterq gs jns (bad) callq popfq scas pushfq rex.X adc repnz (bad) fs (bad) push out ror popfq jae sahf out int sub movsb imul pushfq rex.WRB ss mov (bad) mov xor jns jp (bad) imul xchg mov mov test pushfq sub mov jmpq push pop rex.W sub add mov insl pop jns or mov mov cmc xchg test imulb jl imull lahf rex.XB (bad) (bad) mov sbb cmp push push movabs add cmp enterq ss enterq imul retq mov jmp fcompl push sub ds pop pop jl rex.RB mov pushq mov jrcxz stos mov scas fisttp sub mov mov mov mov or sub adc in pop mov in jmpq and or insb rex.WR sub sub (bad) or xor (bad) (bad) pop sub (bad) mov iret hlt xor stc pushq clc pushq lock pop adc xor cld mov xor sahf xor sub add add sbb scas adc imul mov rex.XB xor sahf pop test jmp push sbb cmp xor or in (bad) (bad) (bad) std sub rex.RB insb xor cld movabs int jno mov jbe lret hlt shll mov movabs rex.WX rex.RB es mov push sbb outsb lret sub cltd sahf jl jnp mov (bad) popfq mov (bad) push mov shlb rex.WR es pop (bad) mulb cltd xor fs (bad) (bad) movsb pop sub cwtl jge lods (bad) pushq mov popfq (bad) mov insb scas mov jl mov jo push sbb mov scas sub rex.WR mov outsb sub and rcl rex.WXB rex.WX or shrl rex.R negb sbb sbb test add int3 xor mov int in rorl cltd dec (bad) mov enterq sbb adc movabs out pushfq test mov in rex.RXB jno loopne mov (bad) (bad) movabs pushq xchg iret retq (bad) stc pushfq mov insb movabs imul (bad) jo xor sbb push or mov fidivl mov iret pop (bad) pushq lods nop faddl insl movsb mov sbbb lock pushfq mov mov (bad) (bad) or cmpsl movsb mov xchg int3 sub (bad) sub imul rex.WXB lahf test mov jmpq cmp pop movabs sub and int outsl pushfq (bad) mov insl fcoml movabs test sbb addr32 lock (bad) pushfq jnp cmp mov insb (bad) jo xchg retq (bad) xor loope and rex.WRB stos mov push mov nop js rex.WRX xor fcompl movabs iret lods gs cltd xlat jb jno adc movabs (bad) movabs outsl iretq pop cwtl or or fmul xlat fwait cmc outsb data16 push gs (bad) callw rex mov xor cld std lahf lahf insb sbb andl and mov or (bad) add je (bad) (bad) out repz rex.WXB ss je adc lahf test (bad) (bad) shrb mov movabs es (bad) sbb sbb out cmp add test adc jae (bad) addr32 mov mov (bad) (bad) repz (bad) xor rex.RX test pushq rex cs popfq loopne sub sbb adc pushq sub adc mov rex.XB mov adc test cmp adc xor sub adc retq xor rex pop xchg rex stc sbb xlat pushfq pop add xor movabs pushq je (bad) sbbb xor jge adc movabs or pop js push rcll pushq rex.WRX imull (bad) (bad) callq mov popfq mov decl (bad) data16 jno fwait sahf (bad) mov mov add (bad) movabs pushfq adc mov mov add (bad) mov sahf callq (bad) adc rol (bad) fwait mov js push mov ds add cmpsb xchg mov fwait data16 cltd adc (bad) mov mov xchg or pop pushq pushq lahf sub lods (bad) mov out and jge mov cs jb mov adc (bad) vunpckhpd add cmp je (bad) pushq (bad) in xor rex.R movsb lods jo out jne or mov pop (bad) loope xchg mov movslq (bad) shrb add jp pop pushq (bad) mov (bad) push sub (bad) add (bad) pop out pushfq movsl mov mov outsl (bad) outsb or sub cmp mov mov rex.RB (bad) xchg imul mov decl scas jo int3 stos outsb xor movabs callq (bad) imul jb imul rex.RXB (bad) (bad) (bad) adc pop pop mov push sub outsl cwtl test add movabs enterq pop popfq imulb mov pop mov movslq scas jne fbstp cwtl int mov stos push lret insl fldt mov cmp outsb outsl test in (bad) xchg rex.WX add sbb sar mov sbb jl cwtl stos mov movabs int3 sbb and mov sub test adc repnz rex.R (bad) (bad) mov (bad) sbb mov jmp cmp je mov mov mov xlat in add out loope sbb jne or int3 xor int3 outsl (bad) pushfq or callq outsb test add rex.WR (bad) (bad) jg (bad) cmp cwtl hlt jbe in scas jge (bad) adc (bad) (bad) rex.W and mov rex.WRXB retq ds pop push repnz pushfq add adc (bad) (bad) (bad) sub loopne (bad) in mov fwait js test bnd xlat (bad) mov in mov sub shr cltd insl xor and push fisub (bad) xor or fidivr pop sti mov xor xor mov outsb jle cwtl jns and mov retq int (bad) movsl sub cmc (bad) cwtl xchg lea mov jg std (bad) or movsb lods test adc or scas (bad) xchg test sub jns movabs or mov leaveq fs or (bad) popfq pop mov (bad) (bad) retq rex.WXB (bad) (bad) repz mov (bad) jmpq enterq pop cmpsb rex.WB outsb (bad) stos enterq movabs in pop shr out loope enterq movabs or mov mov int3 jp cmpsb adc (bad) (bad) retq mov fcoml retq mov es movsb movslq retq adc in xor packssdw adc (bad) jb mov (bad) out mov int3 callq xor scas in add jp xor or popfq xor lods mov out cs enterq movabs iret mov (bad) pushfq mov (bad) lret or jae movabs popfq insl sbb js std (bad) pushq xchg cmp lret jrcxz push test sub movabs mov rex.R and (bad) add sbb mov mov fdivs rex.RX mov sbb callq pushq clc (bad) mov sbb fcmovnu int stos movabs (bad) (bad) retq roll enterq adc movsb pop (bad) setp outsl retq rcrl rex.WRX cmp xor insb (bad) (bad) mov mov fdivl jge (bad) mov int3 add cmp sbb pop pop jb mov mov outsb xchg cs add imul fmull or adc mov cmc rolb (bad) sar sbb (bad) mov (bad) fisttpll fwait jne std cli add mov sbb xor cltd movsb lret and mov jge stc (bad) rex.WR js ja rcl shrb xor (bad) sub in cmp loop (bad) mov adc mov icebp mov (bad) sub loopne loope insl jg test add stc rex.R pop sbb movabs out outsb scas mov xor (bad) callq cmp sahf fdivs rex.W out jnp (bad) adc rex orl (bad) (bad) shlb movsb and xchg (bad) mov movsb movsb movabs mov insl mov adc xor out (bad) adc test pop pushq ss pop xchg rex.W movsl insb sbb (bad) xor outsl stc pushfq add fstpl cmpsb int stos (bad) imul nop (bad) icebp mov js (bad) xor in pushfq xlat mov mov pop add xor sub mov or mov (bad) (bad) icebp sub (bad) cwtl or std insb mov pushq insl xor mov cmp outsb div mov (bad) and push test leaveq or (bad) in sbb rex.WRB lock repz or fs out rex.WXB test movsb mov out gs or popfq xchg lock insl imul ss fdivp pop mov add scas jae scas out mov mov mov cmc cs adc emms rex.XB out mov sbb jle push and jmpq cmp jp sbb mov insl lock outsb push scas lods cltd rcrb xchg mov (bad) in jo xchg cltd adc jp,pn stos mov rex.RX jo (bad) rex.RX cld rcrb rex.WRB push (bad) stos pushfq adc (bad) add (bad) pop fwait enterq xchg fsubrs push out out pushq ss addr32 (bad) mov fcompl mov int pushfq add cld outsl mov add or shl or sbb movsl rex.WRX imul jne lock xor lods sbb cmp sbb cs hlt outsb sub stos int (bad) jns (bad) (bad) pushq je pushfq test cltd rex.RB ss pop jo mov cltd fildll ds (bad) cwtl cmp outsl mov rex.RX adc sti jmpq iret int adc or fidivr scas sub and or lods enterq jns test mov nop sub mov lret lea lock or xchg enterq icebp addl sub adc sub (bad) sbb rex.WX (bad) adc in cmpsb add cli xor sub cwtl adc pmaddwd adc adc pop sbb (bad) jg es xchg (bad) (bad) xor mov jbe scas loope callq and movsl jno lret and in movsl (bad) jno int add movsb imul mov jae outsl popfq (bad) pop fisubr mov or movabs sarl and clc loope rex.B mov fsts jg add rex.WR cltd stos (bad) in scas cli (bad) movabs repnz out out xchg callq rex.WX xchg sub orb mov std ja lahf cwtl pop rex.RX sahf adc shrb cld xlat jo movabs cmpsb rex.WRB jns insl movabs fs fmuls in movsb xchg (bad) shrl pop cmpsl adc rex.W sbb jae jl jns lock xor out (bad) adc fwait sub and pop xlat push (bad) and rcrb mov outsb xor stc lods xor outsl mov out jmpq clc sbb xor lods mov (bad) pushq insb mov pushfq pop rex.R movabs fidivl mov and enterq cmp lods pop jge in mov int3 pop adc std or sti (bad) test mov repz xor (bad) clc jo int scas and and insb fidivrl cmc jmp mov out xchg push push adc iret (bad) push rex.WRX insb mov int3 push (bad) adc xchg fild pop sahf (bad) je mov jne xor rex.RXB insb adc cli sub movslq xor (bad) mull cld loope sbb movsl xor (bad) mov (bad) outsb sbb (bad) sub out xchg fmull cmp outsl add cld movsb cmc jp sub fwait xor rex.WRB in rex.WR es xor (bad) shrb lret (bad) (bad) xor or jae mov xchg popfq jns xor push xor (bad) je repz or cmp es jle jno and sbb lret xor (bad) cmp sub mov es mov imul or mov mov pop lret addb push sbbb sub pushfq nop iret movsl push sbb mov (bad) (bad) ss pop rolb mov int3 jmpq notb mov xlat fadd mov js jo (bad) fwait pushq sbb jnp callq sbb movabs pop mov imul popfq xor movslq sbb (bad) movslq clc jmp xor cltd mov movsb in push sbb xor enterq mov (bad) xor cmpsl scas lea cld cwtl callq movslq mov mov adc adc outsb fsubrl fstl hlt mov mov (bad) (bad) rex.W test rex.WR (bad) mov adc xor int3 (bad) test clc mov mov cld pushq rex.W (bad) mov outsl scas jnp test mov shr jmpq outsl push xor rex.WR jo (bad) sub mov leaveq (bad) or fcmovu callq mov fcomps sub nop adc scas cmp xlat jl sbb mov or jp sub loopne (bad) or jg popfq sub xor lret pop (bad) movsl sbb mov xor sub adc xchg std adc rcrl mov pushq xor mov out imul imul out movl jno es in (bad) je mov lods rex.WR adc scas rex.X jne popfq outsl repz or (bad) cmp pushq pushq or fnstcw sub sbb std and out enterq rex.WX mov in sbb mov push ror mov sbb repnz sbb loop rclb cld sub hlt jg xor popfq in es loop std or pop rex.R cmp (bad) enterq std fwait xchg (bad) rex.WRXB test sub sahf (bad) sub callq adc rex.WRX mov fidivr rex.WRXB fdivs int (bad) (bad) iret mov push popfq subb mov nop and sub insl adc sub fdivrs mulb fstpl (bad) mov (bad) mov in xor jne fcompl cmp sahf mov push iret mov int3 and pop sub xor imul pop mov scas out sub mov int3 (bad) xor rex.W fcompl test vpmulhw xchg jmp xor lret clc mov sub outsb jl outsl cmp add push outsb cli fidiv callq pushq ss insl xchg mov out lods xor (bad) mov add cltd (bad) outsb xchg sarb xchg (bad) add (bad) xlat not mov rex.WRX sbb sub ja sub pop lahf (bad) test repnz pop icebp callq jne (bad) and mov scas cmpsb (bad) mov pop jns xor nop xchg xchg jo pushq (bad) (bad) rex.WB adc cmp in (bad) insl cmpsl shrl (bad) add xorb cwtl outsb fsubrl rex repz clc (bad) fs xor sbb js add jbe (bad) mov enterq movabs xor shlb sbb mov add rex.WRB sbb ss (bad) pop scas mov lahf push (bad) (bad) js mov jle test loop rex.WRB rex.WRX add jb xchg mov lahf add push fwait sub sahf cmpsb pop mov leaveq or ss push (bad) out (bad) adc leaveq out std in (bad) jge shlb jge jo lock (bad) xor cwtl push or lahf outsl es stc jne cltd retq (bad) test cmc and adc (bad) or sub adc adc add pushfq jg ds scas (bad) lods out sbb add add push sahf mov and mov mov sub cwtl sbb and and idivb rex.WX fsts je repz rex.W popfq pop outsb jae mov test pop cs pushfq iret add jle mov (bad) mov sub (bad) or and cld sub ss (bad) (bad) mov clc iret movsl rex.WB retq fcompl jge xchg out movsl icebp stos loop add jp jns maxps rorb mov fsubs jp jne jge jmpq jmp je pushfq mov mov pushq negl out adc fs stc mov mov nop pop es icebp sti jb mov sbb add sbb faddl add jno sbb iret jp movsl cld sub jl fsubrl rex.WRXB lea (bad) fmull sbb xchg pushfq mov movabs mov adc loope pop rep mov movabs negl pop and (bad) rex.WR rex.R fdivp fnstenv es ss fwait cmc (bad) mov out cmp rex.WRX int3 rex.WR pop sub and scas sub jmp loopne mov ss push sbb es cmpsb mov mov mov pop rcl jno pop adc and (bad) mov imul addr32 int3 (bad) mov jb xor mov mov rex.WRXB xchg test mov sub pinsrw mov cmp test (bad) insl loop lods mov push mov test sbb rex.R rex.WX cpuid sub mov pushq movsb sahf mov rex.W pop sbb xor cltd lock jle imul mov jp not (bad) mov in pop mov mov jp fmul out mov add fucomip lret cmpsl lret out (bad) pop mov cmp nop cmp rex.WRXB enterq es (bad) cmp ljmp jl cmp outsb test pushq rex.W fldenv sbb mov xchg jae xlat fdivl xlat in repnz in js (bad) scas test movb mov adc cmp (bad) jnp xor rex.RXB jmp jbe (bad) in ds rex.WX ja iret (bad) (bad) sbb iret sbb fs xor cwtl xchg xor (bad) repz int sub lods xchg jle xor mov and shr jae std lock vaddsubps and mov loope (bad) mov movsb (bad) shll sub gs insl popfq (bad) xor pop xor (bad) sub in in mov outsl mov add (bad) sub fld rex.WR cltd mov rex.B mov sbb (bad) sahf test mov int3 and and lret lahf xor rex.R sbb scas adc pop or out lahf add adc mov lahf jle (bad) jo cwtl sbb jbe js fwait js xor (bad) xor pop (bad) in xchg fs sub int3 test lahf (bad) in rex.R mov stos in ja adc or mov cmp (bad) rex leaveq scas ds add push mov (bad) data16 xchg push jmpq add rex.XB push (bad) (bad) test rex.WR xchg or movabs (bad) pop jbe test adc sbb sub mov movslq (bad) out or movabs sub (bad) (bad) (bad) insl rex.RB mov (bad) add cld fs pop mov (bad) fucom xor sub xchg in movabs hlt test or adc mov add (bad) (bad) adc cli mov jbe jmp rex.WB push cmpsb (bad) outsb cmpsb fildll iret jbe movsl int3 pop (bad) push adc mov mov rclb add std imul push cmp (bad) (bad) out cld lods mov and xor cmp push sahf pop jns pop jle (bad) outsl sbb popfq xchg int3 lahf cmpsb (bad) rex.RB (bad) shrl or pushq jbe jne jrcxz int mov popfq rex.RX or fcoml int3 or push (bad) clc (bad) fcomps xlat lahf icebp pop (bad) lock cmpsb mov (bad) (bad) js addl in rex.WR rex.WRB scas xor rex insb sbb mov stos stos jne xchg scas scas scas (bad) sub cwtl (bad) icebp shll insb je je xlat faddl and test (bad) out sahf (bad) mov insl popfq add sub outsb (bad) adc scas insb adc es loopne (bad) lods sbb lea sarb ds mov movabs xlat and (bad) imul stc xor shr rex.RXB sub adc rex.X sarl shll xor popfq (bad) scas (bad) lret mov mov mov add pushq xchg (bad) xor insl (bad) mov popfq sti xlat mov hlt lret data16 adc (bad) (bad) popfq movslq sub adcb (bad) pop rex.WX (bad) out js neg fsubs fwait xor jmpq pop or je add or test mov imul movabs pop adc movsb (bad) mov jb rex.WRXB rex.XB pop mov sub adc mov push popfq outsl sbb (bad) jnp fs int3 lods movabs sarb cltd (bad) jp mov or jle jmp pop (bad) test mov cmpb imul mov mov and rex.XB or jp in insb scas pushq (bad) mov (bad) rex.B movabs (bad) ficom pop pushfq lea mov jo (bad) xor out insb movabs or out pop add std add jbe rex.WRX movsl fs in scas rex mov lahf (bad) in and mov in and in loop insb cltd or test mov movsb sub xor lahf sbb mov insl mov repz (bad) insb jmpq xchg js jo (bad) sahf sbb jp add and rex.WRB clc decl rex.RB rex.WRX xchg mov and std rex.WRX hlt jmp scas mov add pop jp xchg lret rex.WB jne or ss pushq enterq in jmpq test sub jne jge pushq iret movabs jo rex jb cmp test xor in callq add movslq (bad) cwtl hlt rex.B jns sub retq iret movsb adc int3 cmp cmp jno pop adc xor jno mov sbb fcompl sti rex.R jrcxz imul je mov lret sbb imul lret rex.WRXB movsb jo nop enterq mov gs in xchg jns lret cmp sub sahf add lret (bad) cld subb (bad) jmpq rex.WRX xorl fsts fmull (bad) repnz fldt out xchg jne mov adc es mov mov nop sub jrcxz lret xor mov or scas cmpsb add xchg mov fbld sbb xor sahf sbb cmpsb js mov jnp add out and pop cltd rex.WR (bad) repz jg jne insl icebp or lods adc rex and (bad) test icebp mov adc adc push mov sbb xor xchg nop hlt out nop sbb imul enterq sbb (bad) lock out and xchg scas movsb nop enterq xor sub test lret ds cmc movsl add cwtl std rex.RXB fldl je shlb (bad) pop pushq mov fldt adc sub sub mov pop sub or mov imul jrcxz add movsb popfq imul xchg and movsl jg jl mov (bad) or and loop sbbl cs mov sub jne callq lahf pop test insl out out mov cld js (bad) ss and insl insl rex.RB outsl mov movabs jne cmp mov jns push jmp (bad) callq cmp (bad) (bad) adc popfq (bad) sti cmpsl adc fnsave sahf jb (bad) or mov and push jns (bad) jnp movabs jo lods rex.WRB js adc addr32 (bad) (bad) test jg,pt hlt jge ds xor xor sbb jmpq cmp mov xchg (bad) rcrl mov pop fsubs xor (bad) shll es push (bad) and mov push rorb and fwait jl mov xchg pop sbb fdivrl sbb imul sbb rex.WRB cli mov or rex.WB add or jl xor add mov cmp xor hlt sbb xchg scas (bad) int3 and sub rex.XB xchg lret jg sbb jo jg scas out lods or mov repz shl adc cmp fwait cli adc rex.WRX outsb repz xchg (bad) xlat testb fs xor popfq cmp rolb (bad) int3 xchg pop adc jb out pop insl xchg cmp cmp pop jl adc pop adc (bad) sti stos rex.W rex.WXB rex.WRX in push pop sub xor (bad) mov sti add je out stc movabs notb mov xor add pop cmpl leaveq test scas nop sub xchg sbb adc (bad) (bad) retq or out cmp (bad) or movsl mov xor (bad) repz pop push and rex.WX movsl sbbb mov mov mov (bad) movsb adc mov sub (bad) cmp mov rcrl mov add mov lods add (bad) imul int3 or pop sarb clc sub add mov xchg xor or lods cli in jno je cltd adc or addl (bad) mov sbb cmpl push (bad) hlt pop mov cld pop cmc fiadd lods test lock pushq mov fnsave in lret xchg (bad) sub mov sub cltd sbb add mov rex.B cli ss pop (bad) ss jl and (bad) and imul xchg lods cwtl stc push movabs xor or mov orb mov (bad) sub test test jle (bad) int3 rex cwtl mov adc mov scas (bad) fild xor out je cli (bad) mov scas out cltd sub (bad) stos leaveq sub fmulp adc cltd js add pop mov rex.WR fdivl (bad) (bad) rex.XB jmp movsb loope out (bad) insl add mov out addr32 callq rex.WX or in hlt scas xor push (bad) stc pop fisubr test (bad) cmc or icebp mov adc mov or xor jl je jns rcl in cld scas stos ss movsb out (bad) in (bad) in cs adc push fidivl fistl rcr mov lods testb cmp fidivl jne jb cmpsl sbb jo sbb and je fsubrl xchg sub push (bad) js or jmpq rorl retq in pop sbb add movabs repnz callq (bad) or mov sub mov (bad) iret sbb mov xchg test movabs sti fnop and (bad) repnz and idivl xor jns cli in mov test (bad) movabs sbb stc test add mov sahf (bad) neg paddb movsb scas or movabs lods (bad) (bad) add (bad) lret jl sub negl mov fmul adc adc xchg xchg pop mov sub enterq rex.RX movsb add fnsave (bad) movsb pop sti fist cli pop fildl enterq ss sbb scas mov fsincos in xchg enterq (bad) sub (bad) jo and cmpl sbbb pushq movslq in es cltd or notl mov gs mov sub mov mov rex.RB cmc fwait adc pop sbb (bad) or fnstsw (bad) outsb xor cmc mov fistp lods jo pop xor mov adc pop xlat sub lods movabs mov mov in cmp lock pop jae sahf rex.WXB out insl out jp enterq cwtl add (bad) in adc mov and add fsubl (bad) (bad) push jnp test jbe lahf adc rex.WRXB rex.WB out lock in fstpl loop sbb icebp add and enterq sub sbb (bad) es mov stc pop (bad) stos in fxch callq (bad) (bad) sub mov pop imul sahf out popfq test leaveq rex.B rex.WR fwait cltd movabs mov jne fwait int3 mov or pop callq (bad) mov mov mov outsb add repz test lods mov pushfq jbe pushfq mulps scas in (bad) (bad) jrcxz enterq jb cmp fsubr adc mov movsl cmpsl retq rex.WRX add dec jp imul adc seta xlat jb xor mov rex.WXB in sub out (bad) rex.W jne (bad) xor (bad) mov movsb int3 xor (bad) cmpsb js mov (bad) xchg imul fsubr stc insb (bad) popfq sub fcmovne (bad) movabs mov loope movabs fsubrs ja and cltd insb in (bad) roll lods jrcxz rex.WRX pushfq adc jrcxz pushq iret loope movslq xchg (bad) mov add sub outsl fstps stos insl xor lods out lret movsl in leaveq js out enterq adc fiaddl shrb sub js pop rex.WRXB jg add xor (bad) popfq rex.WRXB sub (bad) mov mov sub cli or pop jl sbb rex.W leaveq (bad) adc (bad) in (bad) movsb mov rex.WRX push push out sti (bad) or stc rex.WRB rex jmpq cmp xor and ds cmp scas (bad) and cmp jns jns ficomp or jle (bad) jbe test xor (bad) cld xor scas idivb jno jne (bad) (bad) (bad) outsb push in mov (bad) out adc fild stc (bad) xor test mov sahf rex.WX or sbb (bad) int3 (bad) fcomip xchg and pushfq test mov cmp leaveq (bad) sub and xchg repz sub push and nop mov test mov mov add cmp mov xor xchg pushq insl in xchg or ja add outsb int3 jrcxz cmpsb icebp vpunpckhbw scas int3 xchg loopne sahf movabs (bad) (bad) (bad) and retq cltd jae cwtl iret xchg popfq (bad) jrcxz popfq fs adc and popfq scas jrcxz addr32 fcom std sti rex.WXB (bad) sahf mov mov out cmpsb pop pushfq insl pushfq sub xchg mov out in in mov in rex.RXB cmpsl out out jne mov mov adc pop fidivrl stos in rex.W test (bad) cmovl (bad) stos pushq fsqrt fnstenv pop pushfq in (bad) jrcxz sqrtps addr32 ss jl xor cmpl push (bad) adc mov enterq (bad) adc mov mov cmp gs mov (bad) jns out icebp mov (bad) movsl mov int loop jno cmp movabs mov push rex.R sbb sar (bad) sbb cmp (bad) out (bad) rex.RX pop iret jmpq in rex.WRXB or lret push pop sub std stos pop add enterq jl xor add pop mov (bad) xlat add jo adc ficompl xchg iret subb mov mov sahf int sub sub (bad) jle (bad) or ds (bad) jo insb mov rex.W rex mov enterq jns test movabs mov push movsl adc hlt adc loopne rcl (bad) loopne icebp int leaveq mov callq lahf out rex.XB movabs sub push (bad) mov pop cltd jb mov mov icebp jle mov sbb xor frstor xor rex.W hlt sbb (bad) pop stos cmp xlat mov (bad) (bad) mov (bad) push movsb ja out fiadd add in mov jne adc sbb rex.RB push xchg xchg rcll loopne shlb movabs (bad) fwait iret out xor (bad) add adc mov imul test sbb fcoms jno fsubl add sub lock jno sub mov mov movabs cwtl adc fs push mov pushq movzbl jb outsb je sbb mov pushfq push movabs mov sti mov fcoml rex.WRB (bad) rex.XB cs push pop cmp or sbb jmp insl movsb lods add and jge lock stos cwtl lock mov xor adc jo movabs xchg test ja (bad) (bad) rex.WXB (bad) (bad) outsl (bad) add cld mov add in or (bad) testb mov sbb jg (bad) insb rex.WR xor and in and jnp,pn (bad) popfq movabs int3 test cmpsb xorl retq cltd rex.WRB mov hlt jae mov outsb pushq push int3 rex.WRB lea jl callq and mov pop in callq pxor mov outsl (bad) stos cmpsl (bad) (bad) add rcrl and jge xlat cmp in sbb xchg movabs callq roll xchg cmp jbe insb imul mov jo (bad) xchg cwtl (bad) (bad) (bad) mov out (bad) insl and (bad) and insl xlat pop and or stos out je test or insl in imul movsl shr xchg mov stos and add rex.RB outsb sub sub sbb lret jo xor (bad) push jg and xchg or mov in out insb sbb (bad) pop cs imul in or in jno (bad) push add testb pop rex.W jp mov (bad) jbe (bad) movsb xlat mov stos fcmovnbe jl sbb add cwtl loop rolq sbb sub test faddl ss test (bad) scas lahf xchg out mov sbb or scas fiaddl (bad) ja rex.WB jmpq rclb je cmp movabs mov not mov test cli pop in out repnz xchg sbb (bad) sub push (bad) pop (bad) scas sub test in rex.WX pushfq addr32 fmul mov int3 xchg push test int (bad) or je int3 sar pushq mov test scas (bad) sub push jns fcoml sbb (bad) sar cmp (bad) popfq data16 (bad) fisubrl jns or (bad) imulb flds push stc loope xor adc mov std (bad) xor test rcrl scas jns insl rex.XB cltd movabs (bad) test sub (bad) mov jno mov in jle (bad) jo imul (bad) mov xor push shrl (bad) outsl test and sub add or rex.W rex.XB cli fwait adc cmpsl xchg xor (bad) insb cli lock cmc movabs mov stos jns add add sbb roll insb xor test sub fbld add jns mov fnstsw xbeginq add mov fnstcw pushq mov callq fnsave pop mov (bad) addr32 lahf test int3 insl (bad) rex.WR rex mov and mov pop rex.XB pop shr mov imul fwait jl imul rex.WR movabs jge enterq out loope sbb (bad) mov rcl adc ds mov sub outsb cmp sub push lahf add sub (bad) (bad) int xor popfq scas cmp (bad) addr32 sahf movss (bad) in cmc jl mulb lret fs pop imul ficom out sbb (bad) adc cmc out pushfq test (bad) js adc or imul (bad) cli scas (bad) mull mov cmc jne rex.RX repz fistl pop push movslq cltd jne jp mov movabs out insb add mov xor enterq sbb ss adc rex.B xchg sahf push pushfq mov mov mov mov and addr32 (bad) int3 cmp and mov sub adc movsb xor pop jns in rorb jo callq cmp movabs hlt or or cmp shrl test xor jne mov mov in insl xlat mov (bad) xchg mov insl movslq and je sahf popfq (bad) pop fisubr enterq pop callq xchg rex.XB test mov test in pop insb stos jmp enterq cmp stos or and out (bad) fs movabs mov lock sbb rex.RXB fwait scas in jb xor xchg lods mov adc (bad) test rex.X scas hlt popfq xlat lock mov test cmpsb insl xor pushq shrb scas rex.RB ds mov push xor mov pcmpgtw mov jne data16 jns mov out es notb pop adc mov (bad) int rex.RXB jno pop (bad) push pop nop in xchg out jp mov push mov sbb push mov outsb adc sbb movabs out (bad) (bad) (bad) leaveq retq pop pushq rex.W mov sub push movsb movslq jrcxz sub rex.WB int pushfq sub out ror cmpsb fbld out insb xchg pop sub pop (bad) (bad) leaveq in jrcxz insb in rex.WRX movsl (bad) movsb mov adc jmp push ss jge fdivr nop mov jbe adc callq and imul sbb adc outsl fdivl mov or test or mov outsb xor sbb mov fildll outsl and movabs stos loope and sub cmp xchg pop insb ss rex.RB ss cwtl pushq sbb callq (bad) mov xorb xor xlat and fstps mov xor test mov (bad) int js mov movslq imul (bad) pop fs pop jle pushq out rex.WRB stos movsl (bad) outsb xchg hlt pushq mov (bad) add movslq mov addr32 callq rex.WRB leaveq rex.R rex.WB ss jmpq out fadd cmpsb adcl pushq lret (bad) cltd shrl movslq leaveq mov add adc sub rex.W repz pop (bad) int or or cmp fxch mov in and add push hlt or (bad) shll fxch movabs lret (bad) mov roll insb sbb mov retq mulb subl fld1 xor (bad) sti (bad) movsb movsb jnp add or out (bad) enterq xchg movsb fwait xor outsl xor (bad) movabs jno outsb jmp xchg (bad) add mov xchg scas adc callq (bad) sub cmp leaveq (bad) cmp popfq sub push xlat sahf test mulb pop insb push cli jns (bad) mov gs (bad) mov (bad) adc lock cwtl jmpq pop rex.XB jmp mov and xchg js retq (bad) jmpq stos (bad) pushfq sbb (bad) shr pushfq insb cli and movabs jnp scas xchg insb (bad) xor test mov out cmp (bad) (bad) (bad) pop (bad) sbbl jne scas in movabs popfq int in pushq lahf movsb out jo,pn mov hlt popfq pushq in repz iret (bad) pushq enterq and scas sub loopne ja movslq test jnp sub int3 mov fbstp mov cmpb notl push (bad) or jle (bad) xlat sbb cmpsl mov mov mov clc rex.WX iret movabs movsb rex.WRB leaveq mov cmc outsb sti and orl out jp int3 sbb int3 movabs rex jne hlt pop imul (bad) (bad) xchg insb int3 xor outsl pushq je sbb sub not js mov lret sahf jnp or cli test mov mov jns xor ror out iret lea mov (bad) mov pop loop (bad) lock cld fs mov mov insl adc xor (bad) xor (bad) rex.WRXB mov cmp callq out (bad) movslq mov pushq mov callq adc imul incb pushq and mov int3 popfq xor or (bad) movslq sbb (bad) lea int adc enterq push mov movslq sub cmp addr32 xor stos lret callq (bad) movabs fmull xchg rex.WRB cld cwtl push jmp rex.WXB xor imul in out scas cld subl sar cmp pop insl add (bad) mov adc hlt int or jae fcoms jbe (bad) jno cwtl cmpl mov and cwtl data16 mov adc rex.XB cli rex.RB (bad) rex.WR add fstpl pushfq or mov mov shl xor jns (bad) movabs or xor loope (bad) xchg mov int3 rex.X adc rex.X sbb ja imul mov pushq fisttp adc pop cld add rcll sbb add rex.WB pushq mov xor outsl fs fcmovnb test sub sbb sbb mov cwtl addr32 (bad) cmp or (bad) (bad) pop (bad) or (bad) (bad) mov lret mov stos sbb cld add adc mov jns fdivr adc rcrl xchg cmp xchg mov int3 or mov sub jmp jns mov (bad) rex.X in shl (bad) fs sub outsl sbb stos push cli imul ss int mov sub jrcxz notl cs mov push rex.WX rex.WB jno (bad) rex.WX shlb adc cmc pop (bad) (bad) pop mov and (bad) sbb (bad) sub ja or xchg mull mov mov push mov in rcrl (bad) jp pop (bad) mov out je sbb fucomi loop mov hlt test sub adc or out leaveq (bad) cld scas pushq outsb notb or sbb stc test cmp enterq pushq (bad) add jle push lea mov sbb je leaveq xchg xchg jne scas pushfq mov hlt callq mov cwtl (bad) test adc and ds pop data16 mov (bad) movabs lahf in pushq xchg es sub clc rex gs cmpsb sub cld lret mov test mov mov out sub out mov (bad) stos adc mov retq jle rorl in and leaveq js test cmc and mov mov rex.WRB mov pushfq insb (bad) sub mov insb xor scas sbbl sar pop pop cli out sti (bad) cwtl add orb divl (bad) (bad) mov jl rcll xor cmp mov rex.RXB add (bad) adc rex.RX cwtl xor test leaveq mov add pop fcom leaveq (bad) pop iret out gs or gs fidivrl lahf xchg adc movslq mov mov jp or je leaveq (bad) rex.RB rex.XB scas in ja fst rex.R rolb jo lret rex.XB adc fdiv stos movsb js lea mov stos adc test mov sbb rcrl mov std cmp rex.XB repz gs add add xchg mov cld leaveq jg sub mov or hlt mov popfq mov movsb (bad) sbb adc fldt test sub sub sbb cltd jo cmp adc and (bad) mov insb rex.RB xor incb mov test xor pop stos and retq mov jo in sub repnz mov divb pushfq mov cmp mov rex.WB (bad) jp add jrcxz cld rex.WR imull cwtl jo mov test (bad) jp xchg iret push movsl and sub xor pushfq mov icebp lea cmp ja fisubrl fmul (bad) push xchg addr32 cwtl imul push ss int3 jbe cwtl (bad) int3 xor or je sbb cmpsl int3 ficompl rex.WX pushfq adc (bad) incl fsts jns test (bad) iret ss mov xor outsl sbb imul retq (bad) movsl ja (bad) movabs lock jo xlat insb (bad) pop mov mov sub fdivr xorb pop test loopne ds (bad) cmpsb mov (bad) sub mov sub test rex push leaveq popfq rorl cmpsb retq (bad) popfq mov rex.X cmpsb rcr imul mov imul test test imul cmp mov ja jns mov mov (bad) sbb mov outsl sbb outsl movabs rol jne (bad) xlat rex rex.WRXB out stc lahf jnp jne insl or mov (bad) rex.RX pushfq movsb testb adc rex.RB in callq enterq jle (bad) rex.WR cmp (bad) ja sbb icebp (bad) stos rex.WB rex.R sbb fiadd clc (bad) pushq (bad) mov adc add int cmp callq (bad) in std xchg push cwtl (bad) mov add test (bad) cmp test stos iret cmc sbb add mov test movabs xchg mov mov cmp mov xchg data16 (bad) rex.WR shlb insb jbe mov sub or pushq (bad) insb (bad) lods (bad) mov ds (bad) jp cmp jns fldl outsb retq mov xor (bad) mov addr32 adc jmp insb (bad) (bad) (bad) rex.RXB mov cmp mov pop adc mov jle sbb (bad) mov or insb xlat xor cmp imul push xlat cmp mov notb (bad) (bad) xor (bad) (bad) or adc and rcrl fisubrl adc sbb cwtl jle,pn test jmp (bad) fwait movsl (bad) (bad) cwtl stos rex rex.X ss (bad) es mov sub sub out xor adc push (bad) (bad) sarl cmp outsb jp pushfq (bad) sub rex.RX adc enterq xor xor mov ficompl sbb outsl movsb int3 mov mov cmp mov outsl movsb lock (bad) scas jbe mov cld xlat jbe out push in add pushfq rcll (bad) sbb insb int addr32 jb add (bad) outsb cs mov retq ds sbb (bad) rol adc push hlt movabs cmp cmp xchg in rex.B mov movsb and (bad) mov andb jo pop cmp xor test in xor xchg cmp cwtl (bad) jne lahf scas (bad) int3 rex.WX imul (bad) mov loop pop sbb push scas adc (bad) mov callq scas hlt in mov addb mov clc mov cmpl outsb repnz scas jo js add insl cli adc loop retq rex.RX fs adc jno in adc jmp add xor mov mov adc pop (bad) cmp in sub ja adc (bad) loopne rex.WXB (bad) movabs (bad) mov loopne jp (bad) push push and loop xlat sbb (bad) jb mov sbb mov rex.WRXB sbb (bad) rex.WR pushfq rex.WRX fs sbb or xor movslq cmp outsl movabs fnstenv (bad) rex.WR js cltd mov lret mov scas (bad) lods sbb cmpsb (bad) (bad) mov stos sbb or insb rex.R outsb (bad) jmp idiv int pushfq rex.WRX mov rex.WRB test rex (bad) xor fnsave int3 jmp cmc adc out pop sbb mov iret add mov mov movslq fcmovu mov scas add (bad) sbb jne add fwait fwait ss lretq jge (bad) xchg rex.R or rex.W jbe cmp xchg sbb jg out outsl or xchg push (bad) pop (bad) adc jae (bad) and xor cmc add std imul jge outsb push mov js movabs outsb sar rex.WR xchg leaveq cld xchg rex.XB rex.R (bad) jl xchg push jge in mov fwait lahf cmp sub fstpl out neg hlt lods push mov callq scas add mov shrl insb movabs rex.WRXB (bad) (bad) sub xor mov pop insl rex.X rex.WB rex.RX ds mov xchg mov (bad) int pop repnz mov jo or mov xor retq out mov rex.WXB and adc (bad) (bad) jle (bad) pop (bad) movslq loop add lods lahf (bad) movabs mov lahf cld js mov stos loop push mov pop fdivp pushq leaveq xchg rex.WR (bad) fwait lea jp (bad) icebp cmp scas or movsl cli mov sub outsl mov outsb mov or rol pop jrcxz fldcw or enterq orl (bad) mov int3 lret int3 loopne callq lahf movabs and sub jmpq sbb mov (bad) movabs test scas xchg fstpl outsb mov stos xchg sbb int3 (bad) in loope insb rex.WB mov (bad) mov scas mov rex.WXB gs popfq nop fiadd movslq lea jne sub lods ja adc fcompl lahf xchg movabs idivb push (bad) outsb scas insb (bad) roll lret sahf fucomip fstpl rex rex.X jmp fwait callq enterq (bad) or stos outsb retq fiadd (bad) (bad) cmc jb cs adc rex.W enterq sbb (bad) mov sbb mov in (bad) mov in cmpsb sbb and adc rex.WX add pushq ja rex.WX rex.W (bad) mov adc (bad) mov cmp adc pushfq (bad) and outsl (bad) (bad) addr32 imulb fs stos (bad) (bad) mov iret stos mov (bad) popq mov pop in push mov mov stos rex.RB (bad) enterq sahf pop rex.R scas loop pop jne xchg sub (bad) js (bad) mov xor xor subb mov fs fdivrs movsl mov jmpq mov popfq imul cmc js mov (bad) or (bad) movabs add lret (bad) sub stos outsl test out out adc jl cwtl add fwait and mov scas stos ja push test add mov (bad) add int3 jg rex.R leaveq (bad) stos (bad) xor sbb std (bad) insb je jbe (bad) repz imul lret xor enterq jle fs mov (bad) je loop ja std (bad) rorl mov js mov cmp rex.WRX (bad) jns pop rex.WRXB sub pushfq mov and jbe test pushq mov lahf fs add adc sub xchg lahf adc adc mov gs pushq xchg push pop mov (bad) icebp rex.WRX sub rex.X (bad) xor sub pushfq movsb mov sub sahf js mov xor int3 (bad) mov push movsl outsb (bad) lret fdivrl pushfq rex.X (bad) fs js fcoms jl push lods (bad) and sub imul mov ja movabs test stc jns cmp cwtl and cmp (bad) or sbb rex.XB add or scas jns (bad) (bad) mov int mov cs push std sub popfq out pop in and cmp mov jbe mov cmc test lahf scas fidivr jge (bad) xor pushfq int3 movabs jbe fidivr movabs insb xchg loopne jmp adc jnp jno pop jl xchg adc cmp cmp rex.X scas popfq sbb outsb sbb lods imul xor in (bad) js je cmpsl out sub pop std xor insl cmp movabs cli out lods mov sti mov add xor jmpq repnz xchg insl (bad) add xchg insl (bad) int3 cmpsl mov ffree jo movsb (bad) leaveq mov (bad) rcr repz test fmuls push (bad) cmpsb sub jnp and sahf fdivrl mov imul popfq in jbe or fimull insl sbb je lods ds hlt enterq pushfq adc int3 mov jno xorl adc mov popfq sahf je cmpsb pushq insb add jge mov rex.WRXB (bad) ds movsb imul mov out push fsubrl (bad) in add faddl insl scas ficom (bad) out cmp mov push mov xorl or pushfq pop fs and sbb out and (bad) pop rex.WRX outsl rex.RX jp divb scas (bad) (bad) mov scas retq push and scas sub pop test cli out enterq xlat lret add stc mov push cmp mov sbb int nop push scas mov cmc or sub sub push (bad) adc insl jo mov jb lret fst pop jl jne adc or rex.RB jb cmp cmpsl jl cmp adc test pop and leaveq gs mov rex.WR rex.RX stos and push sbb (bad) xor retq shrb xor mov sarb jl loopne sub sbb lock (bad) int jns out (bad) out fisub int3 or jmpq roll cwtl loopne xor outsl cli xor sbb mov add sub pushq (bad) fisub stos sbb movabs popfq mov jnp jmp jne mov jnp fistpll imul push (bad) or in push lea outsb rex.W enterq test pushq jge leaveq cld (bad) lea pshufw sbb adc lods fldl cwtl imul (bad) pop retq pop retq mov out pop (bad) cltd es xor pop imul rex.RXB (bad) movsb (bad) jle pushfq jno or hlt hlt mov jg outsb (bad) ror movsl enterq sub repnz fistpl movabs sub or jae adc lock (bad) pop fs xchg outsl int push xlat cwtl mov sarb mov push enterq sbb andb ja cli sahf insb mov rex.R nop jmpq rex.WXB popfq (bad) add shr adc push cmpsb push adc (bad) adc cmp add fs push movabs (bad) movsl or or pop pop rex.WXB subl adc mov (bad) push cmp decl (bad) (bad) cmc sbb es pop fildll adc sbb mov rex.RXB lret pop lret fwait adc imul loop mov (bad) test fstpl jmpq test sub (bad) shrl sub push mov movd sbb rex.WRXB xor (bad) pop mov (bad) mov int3 lret mov mov (bad) loope xchg rex.XB pop mov pop (bad) mov in mov adc sub iret (bad) xchg jno bswap adc nop lret cmpsb sbb (bad) movsb and pushfq pop rcll jbe (bad) (bad) mov jo and ja sub adc test rex.WRXB scas add insb fwait mov test or insb jne mov and mov outsl cmpsl (bad) movabs loop adc std xlat int pop mov hlt stos add sbb rex xchg movabs adc mov sbb (bad) xchg (bad) shrb pop movsl or movslq rex.RX add cmp xchg (bad) add add lret pop xchg jmp (bad) stc (bad) (bad) xor ja rex.WRXB and rorb je sahf test push jns mov xchg pop add fnop lretw stos mov imul adc sbb test rex.WB add jge xchg loop (bad) pushq cmp mov stos pop (bad) jno std stc popfq hlt out cmpsb pop sbb xchg jnp sti xor insb mov (bad) add sbb pop adcl rex.X (bad) mov fsubl pushq and (bad) mov jmp cmpsb sbb movsl data16 js or sbb retq or movslq popfq lods sbb and hlt rex.W out mov xor rex.W lods repnz sub fcoml pop int in sbb int3 js lret (bad) in push adc xor retq rex.R scas or jo xor insb sbb xchg mov (bad) rex.XB adc and out rex.WB jne pushfq sub iret (bad) xchg int3 push subl retq and (bad) adc in outsb jo pop pushq rorb add add (bad) (bad) sbb pushq movslq or jp or (bad) rex.WRXB (bad) icebp in jg add rex.WRXB fwait insl xchg sub (bad) jmpq lahf fxch and sub adc (bad) notl jb popfq add jbe test leaveq sbb (bad) mov and (bad) xor pushfq (bad) rex.B cli cmp imul push xor jne (bad) (bad) add sub pushq loope cmp test in sbb mov mov cld or xchg scas cmp pop add hlt and (bad) testl shrb cmc xchg mov nop rex.WRX sti mov stc pop leaveq or pop rex.W insb push int3 js lret (bad) xlat sub (bad) pop lods fild movsb in (bad) fcompl mov cmc (bad) pop lea mov pop sbb in mov scas cli fsubrl retq add in insl lods (bad) repnz pop lea add (bad) rex.WRXB mov imull push fadd fwait mov push cmp retq (bad) sbb cld fnstcw push out ja es push xchg movsl or callq mov adc cmp sbb jge mov scas cltd rex.WRX lock (bad) lods xchg fucomp cli in xor scas jl in (bad) fisttpll rex.WRX scas mov int jae scas mov in or int3 and fs mov je cs pushq mov adc sub pop mov retq sbb cli pushq push (bad) sub xlat (bad) loope test int or (bad) lret gs (bad) adc cmp rex.XB test (bad) pop jb xchg mov lods stos rex.R pushq (bad) mov mov (bad) rex.RXB out leaveq sub sarl mov gs movsl (bad) mov stos rex.WB pushq pop out (bad) leaveq sahf movsb scas shl jp cmp leaveq (bad) lock repnz popfq cltd (bad) (bad) insl cwtl hlt jle rex.RXB xor mov mov (bad) data16 mov xlat lods (bad) (bad) mov (bad) outsb (bad) sbb movsl in jle mov mov faddp jmp imul xor and xchg (bad) add mov popfq (bad) (bad) adc lock or loope inc rcl rex.W cmpsl xchg loope movsl (bad) int mov lret pop outsl mov lock out movsl mov hlt insl (bad) scas xchg in jrcxz jl sub nop mov cs addb std and mov adc out faddp lods xor adc mov rex.X (bad) and lods rex.WRX add rex.XB adc jl pushfq push movsl iret add add outsl xchg or std movabs int mov xchg movslq rex.WX jo test scas (bad) insb test imul adc pushfq rex.WR add rex.RX pop (bad) and adc cmp (bad) adcl (bad) negl adc popfq mov sub xlat retq rex.WR (bad) clc scas mov out (bad) rex.WR es sub xchg jl gs insw xor pushfq xor cli xchg movabs (bad) mov xchg repz testl add int sub outsl sub jmp jg ds movabs callq (bad) insl iret push lahf es jp pushq cmp sarl outsb pushq (bad) rorl and sub (bad) sub test (bad) rex.RB repz pop mov mov rex.RB ja sub mov movabs (bad) xlat in or imulb movsl pop mov fadds jrcxz movabs leaveq xlat cmpsl pop movabs push rex.XB jle iret mov lret movabs test imul mov idivl push jo xor (bad) incb sbb clc in jnp pushfq (bad) add jns (bad) test (bad) jle in lahf xlat or xchg xchg rex.WRX jno,pt or and sbb cmp gs (bad) mov scas (bad) ja es movslq rex.WB ficomp pop pushq mov adc sub sbb xor mov add adc add pop sbb xor cs icebp sarl rex.XB popfq lock add xchg fistl pushfq (bad) test outsb js (bad) int jo popfq (bad) (bad) add fs pop (bad) (bad) (bad) (bad) pop movsl movsl (bad) mov add cmp or andl adc fistp leaveq jns rex.WB std movabs (bad) jmp jmpq rex.W imul pop sbb add test sahf (bad) jmp movabs addr32 jo addr32 xlat jrcxz mov nop push outsb (bad) xor mov xor pop (bad) pushfq and pop jl jno mov mov stos jne pop testb add (bad) mov and xchg cwtl rex.R push lods (bad) push movsl jle (bad) jle rcrl callq lods add adc and (bad) ja pop pop and loopne adc rex.W mov rex.WXB xlat je mov rex.B add adc sub (bad) jmp sbb jb xor jo (bad) test rex.RXB fnstcw ja jno (bad) data16 jmp pop fwait leaveq sub pmaxsw (bad) mov lret xchg pushfq mulb sub stc enterq leaveq ja add sarl mov and xchg scas xor rex.WRB xchg repz pushfq xchg xchg jb jg mov jns jns (bad) pushq push int3 ds jp fcmovbe (bad) out (bad) in in popfq (bad) lods cwtl rex.X (bad) int3 mov rex.WR (bad) test jmpq sbb cmpsl mov and cmpsb sahf test mov adc lret and movsb xchg movsb cmp mov rex.R mov (bad) mov je cmp pop push add lahf sbb rex.WR clc jae jmp pop adc cs xchg (bad) lret in (bad) retq subb ds adc sub adc push mov sbb imul add rex.WR shll pop mov mov mov jmpq mov (bad) imul mov sub insl sub xlat js mov (bad) (bad) insl cmp (bad) loope rex.WRX xor rcrb jo pop mov xor push rex.W adc int add rex.X rex.W xchg (bad) insl cmp mov std (bad) mov cmp imul sub cld rex.WX movsl out pushq rex.WRB test rex.XB xchg outsl rcrb push ja iret cmpl outsl fcmovbe in enterq push (bad) jbe lahf (bad) cltd fs xlat add movslq adc mov mov (bad) mov adc rex.WX pop stos cli (bad) rcrb loopne pop lods pushq (bad) pop mov (bad) (bad) rex.WRXB jp cmp pushq sub mov (bad) subl push imul outsb adc sub clc rex.WRXB add (bad) push cmc sub cmpsl popfq (bad) (bad) rex.X (bad) cmp (bad) sub lahf jmpq adc cmp es fnop cmp add sub movabs rex.WRXB cmpsb (bad) (bad) movsb loopne movabs sahf xor movsb outsb mov sbb rex.W fcomps push (bad) leaveq or mov rcl or (bad) jbe mov (bad) (bad) (bad) (bad) (bad) or (bad) shrl (bad) cwtl add cwtl shlb test (bad) jae sbb mov xchg (bad) mov cwtl fs jp cmpsl rex.WRB jmpq cwtl jnp sbbl enterq push xorl mov push rex.WRB (bad) jge (bad) lahf jmpq (bad) mov or es pop cmc mov push lahf shrl negl scas mov jnp jae (bad) (bad) jae mov (bad) enterq sub insb je lret add out stos pushq (bad) push sbb int sbb int3 js lret ficoml and jmpq (bad) enterq jl or sbb sti sahf cmc (bad) pushq sub movabs jns rex.B rex.WR sub lret popfq mov ror mov sbb retq push xor repz (bad) xchg rex.B ficoml xor sbb test mov jmpq and jge xchg sbb movabs mov (bad) cmpsb in jne jae cmp sahf insl (bad) sub sbb insl pop rex.XB xchg sbb rex.WRX cltd rex.WR loop pushfq mov insl ja add add loope push out (bad) xor (bad) imulb pushq cmpsl mov rex.WR or (bad) in lahf jnp cmpsb rex.WRX out xchg fidiv add xor lcall sub int out in jne loope test cmp ss pop fs and loopne mov (bad) (bad) adc pushfq mov clc cmp sti (bad) outsb mov int pop rex insl retq retq rex.XB rcrb sbb jno sbb cs repz push (bad) mov add add shlb fstps fwait cmp sub and lret repz jo mov sahf lcall (bad) sahf cmp rex cmp (bad) cmp jne imul xor lock mov sub xor sbb xor mov sub xor mov jne mov leaveq enterq stc movabs xor push sbb lahf mov movsb hlt adc sarl cmc adc out test sarl outsb movsb pushfq callq (bad) (bad) sub icebp xchg mov int3 iret cmp in test sti cld (bad) outsb sub mov insl lock int3 roll or rex.WXB and push pushfq and je orl adc pushq ds (bad) add scas test cmp fdivrs sti mov repz cmp insl and scas rcl int3 rex.WRXB in mov imul fidivl scas sub jno adc jl repz mov or (bad) (bad) adc in sub (bad) movsl rex.WRXB rex.W fwait mov sbb or test rcrb sub (bad) jbe data16 jmp and jg add add loopne (bad) out jle movabs push pushq std adc mov pop rol (bad) jo or sahf jns push leaveq rex.WRXB fwait cmp and jne callq jae rex.WRB fcomps callq (bad) push jl rex.WRB js jns ja hlt push sbb and (bad) mov ficoml push sarl rex.WRX sub adc fwait jno repz int3 jno adc stos cmp mov scas add fs pop movslq addr32 push int pop (bad) stos xchg rex.WXB (bad) js test mov (bad) rex.RB (bad) sbb callq and hlt cmp add idiv test int mov xchg pop popfq (bad) cmp rex.WR cmp (bad) shrl cmp pop in pop xor lock jb insl xor scas cmc enterq insl insl add push movabs pop loop outsl stos xor (bad) push pop xchg (bad) lock adc sub cmp mov mov pop cwtl adc sahf jae (bad) xor rex.WRX ss jge adc in jae cmp pop std cld ja or jne add add hlt ficoml adc insl stos retq enterq hlt jmpq (bad) xchg movabs leaveq outsl (bad) data16 movabs int popfq (bad) (bad) mov (bad) mov (bad) (bad) and out xor data16 and push (bad) outsl data16 add outsl fistp mov pop outsl (bad) out jo in pushq xor popfq divl and movslq int stos movabs data16 jbe and (bad) or negl dec lahf push jbe shlb sbb hlt jmpq cs (bad) (bad) ja movabs rol add es (bad) test rex.RX fldcw lret add stos sub sbb jmpq jl rex.B sahf lret mov test data16 movsb and rex.WRXB xor (bad) sar sahf int int3 sub cs (bad) xchg jno (bad) (bad) sbb jae adc or (bad) pop outsb adc mov lea stos xchg cmp jbe pop stos rex.RXB or cli adc ja xor pop jne push jl sbb mov vpcmpgtb cmp mulb rcrl jmpq mov mov lea test shl (bad) sahf xchg lcall or mov jl and in jge cmp sub cmp (bad) insl dec rcll or mov imul sahf stos lods shll out divl jrcxz hlt in sub pop rex.R add mov popfq push jmpq callq loopne out sbb rex add sbb push popq jno or mov mov xchg (bad) mov jl outsl je js jb adc pushfq mov add fidivrl (bad) jbe xor outsb pop adc mov popfq in mov int cwtl movsb mov mov (bad) jl ja and jbe and movabs rex.RXB pop xchg cmpsb mov jp jo xor scas or xlat sub jmp sbb sbb xor sbb adc jmp jne callq lea pop fwait hlt ss je lret lret repnz adc sbb movsb xchg std (bad) fistpl (bad) or callq xlat in jnp mov shr xorl sbb in outsb lret jg pop (bad) mov (bad) (bad) (bad) leaveq outsl jb repz iret sbb shrb mov std out pop lret xchg push xchg add sti rorl push (bad) or pop fmull mov xchg sbb or mov pop jmp lods (bad) popfq xchg (bad) xchg mov movsl (bad) sahf outsb fdiv roll shll addr32 and ds hlt or mov (bad) (bad) hlt mov jmp mov std (bad) mov pop xchg cmp and pop cwtl rex.WR movslq xchg push icebp mov add int mov rex.WRX sub data16 js or ss lahf (bad) sbb and xchg leaveq mov addr32 lahf rex.W ja iret jnp movsb cmp fsubrl fidivr (bad) pop (bad) fisubr xor adc (bad) loope jmp fs xor mov cmp xor push (bad) (bad) rex.WRX adc or (bad) jge leaveq andl leaveq mov adc rex.B (bad) mov adc xor and nop mov rcrb fiadd movl add sete rex.WXB (bad) sub enterq movsb adc mov (bad) xlat insb lret sbb insb test mov ficoml mov sbb or jne rex.XB cltd je fdivrl pushq sub movabs (bad) ja xor sub mov push ficomp jle cwtl adc test movabs (bad) ja nop (bad) jl add jg nop xor (bad) mov rex.B mov mov (bad) div pop xor adc sub repz js (bad) out roll (bad) scas (bad) (bad) pushq insl rex notb jge rex.WXB cli je jnp mov in (bad) pop gs jbe rex.RB jl test xchg movabs es pushfq mov sbb adc stos data16 (bad) pop and imul (bad) xor hlt decb insb sub movsb push (bad) je jg mov sub sbb leaveq faddp (bad) jbe sbb cmc mov add push and add addr32 jl xchg xchg (bad) sti add callq loopne mov mov xor sub (bad) sbb sarb (bad) lea cmp sub xchg jl (bad) xor (bad) sub (bad) js lods pop pushq pushfq push nop rcpps (bad) int xor nop or nop (bad) outsl (bad) pushfq xchg nop (bad) int fdivs pop rex.WRB mov jp callq outsl callq pushq cmp outsb (bad) callq or psrlq pop pushfq sbb callq xchg (bad) mov (bad) jmp out xor sti outsb scas test retq adc sbb loopne xchg rex.WRX sti nop loopne mov popfq pop ss xchg cld xor callq mov xor mov ds jo (bad) jl sbb push or sbb rex.X mov movabs rex.WR movabs imulb (bad) je enterq (bad) sub mov pushfq (bad) mov mov retq mov xor sbb and rex.RB mov cmp out xor xor int3 pop in roll fs rex.RXB add clc stc pushfq sbb xor sbb jmp comiss pushq adc pop addr32 loop movabs jbe cmc adc hlt fildll mov and adc mov rex.B rex.WB popfq jo pop xor (bad) in retq adc jl idivl (bad) xor (bad) mov andb jae mov mov xchg cmp cmpsb imul adc pop rex.WB (bad) (bad) mov pop ss pop and fidivl mov rclb adc mull roll and int3 push loop orl xchg mov or rclb or rorl pop shld test xor rex.RX repz mov add adc push test cmp (bad) nop clc (bad) test data16 mov (bad) (bad) pop lods mov test pop insb push leaveq xlat (bad) or sbb jle vpshufhw jl pop lahf outsb rex.RXB add (bad) mov test jrcxz scas movslq leaveq movsl jl (bad) fist adc pushq cwtl adc cwtl xor cwtl int lret insb stc sub cmp jo (bad) andb pushq add incl (bad) jae test mov push mov and rex.WRB cwtl and sbb xor (bad) movsl test sub outsl scas xor (bad) gs movabs push icebp cmp xchg xor movl rex.X mov or (bad) movabs test mov (bad) insl stos cltd lods mov je es rex.WB jae rex.R hlt pop gs sahf jg repnz fcomps rex.X int3 rex.WB rex.XB push std fidivl (bad) rex.WRXB rex.WRX mov imul loop rex.RXB or sti (bad) mov (bad) in (bad) sub (bad) in repz in je (bad) (bad) sahf pushfq cmpsl fucomp (bad) cltd scas mov jnp fldcw mov mov xchg mov (bad) vcvtsd2si fidivl mov (bad) shl sahf mov (bad) hlt movsl rex.WRXB adc test sub es mov in mov pushq (bad) scas or movabs and (bad) lock insb (bad) hlt out rex.WRX xchg mov imul imul (bad) cmp jmpq mov jmp jl xor and out (bad) test rex.W and ds sbb ror sub lahf and int3 shrb sub out (bad) (bad) pushfq xor sub mov test (bad) sub pop mov mulb es cld (bad) leaveq xor push add ja (bad) out shlb (bad) mov and rex.XB out add clc rex.XB fisttp xchg (bad) sub pushfq (bad) pushq xor xchg jp movabs fsubrl push add adc xor mov xchg cmp or rex.WRXB xchg insb rex.WXB rex.WRB mov (bad) stos int3 fsubs mul cmp leaveq xchg jne andl pop mov xor xor push add rex.WB sahf jns mov or icebp adc rex.WRB mov stc jmp je out hlt shlb faddp callq icebp (bad) mov jo pop rex.WRX xor pop insl or (bad) and in cltd stos (bad) push cmp xlat or (bad) (bad) fnstenv mov pushfq (bad) adc (bad) mov stos add xor stos cwtl test mov (bad) jns pop jae popfq jg outsb pop (bad) (bad) insb jb xchg push or je,pn or rorl jo xor test test mov jnp mov xor add (bad) leaveq lret stos jp cltd out enterq (bad) or fstpl pushq in add rcrl out in sbbl rex.RXB (bad) movabs not and ficoml scas mov clc int or (bad) adc (bad) xchg cmpsb pushq fmulp (bad) rex.WRX out movsl scas mov sub stos mov mov mov pushq mov (bad) jo mov enterq stos (bad) (bad) testl test pop add fcomp and (bad) in push fsubl pushq loop push sbb mov pop add rex.WRX rex.X and mov fidiv (bad) rex.XB mov rex.WB cwtl decb es callq notb lahf mov mov jle callq (bad) and mov mov orl sub loop rcrl rex.RXB pop stos jae test push (bad) (bad) es fcoms mov and cmp shrl mov cmpsb (bad) cltd jnp lret xchg mov cli jae movslq (bad) push fyl2x rex.RXB (bad) outsb xor rorb (bad) cmpsb imul int sahf sub cli movsl lea xor mov pop scas movabs pop insb outsl jmp out rorb rex mov stos rex.W pop xchg jg sbb movabs sub lahf hlt push xor (bad) push xchg pop push lea out rex.WXB leaveq mov iret movsb ror je scas (bad) pushfq pop scas rex.RX jae rex.RX (bad) in add std pushfq imul sub cmpsl mov (bad) jb mov (bad) jb pushq push int3 xchg fisttp jb popfq stos jmpq add pushfq jo lods sub movabs pop lock rorb mov mov gs cwtl jo imull loopne (bad) test outsb icebp lret or jmp push cltd or movsb loope sbb rex.B (bad) or adc sub mov ss jge cmpsl or test insl rex.B rex.RXB lods movabs jmp mov sbb jno mov mov rcrb xor mov rorl imul push movabs leaveq je jo jl push rcrb mov out jne fsts (bad) sbb es popfq mov sbb fnstenv (bad) mov in rex.RB add loope mov mov ja jl mov mov gs nop mov rex.RB sarl pop (bad) stos push out xchg repnz (bad) negl cmp pop stos js (bad) imulb and repnz cld sub leaveq xchg (bad) iret stos movslq pop scas jrcxz (bad) push mov pop (bad) fldpi (bad) addr32 frstor adc mov cmp mov outsl test (bad) rex.B and cmc xchg test mov sbb sub rex.WRX leaveq (bad) test jno outsl movabs jne jo stos (bad) shrl clc xchg jle imul mov rcrl enterq movabs jmpq mov xchg mov xor jge enterq sbbl leaveq shl xchg (bad) add (bad) cwtl cmp (bad) adc and mov cld rex.WRXB pushfq rex.RX adc (bad) (bad) mov movabs rex.WR rex.WRX rex.WXB callq jo xor pushfq hlt mov movsb rex mov js jne nop adc (bad) cld subl (bad) jbe rex.WR roll fdivp add or rex.XB cwtl push cmp mov and (bad) pushq (bad) pushq mov sub js and adc cwtl cmp js fdivs jno mov (bad) lahf adc movsl cmp mov cmpsb int (bad) imull pop (bad) (bad) rex fldcw movl cmpl (bad) (bad) movsl fdivrl rex.WRX gs mov cs (bad) in test setnp cmp scas movabs pop pushfq adc cmp sahf mov test ror xor test (bad) (bad) and mov pop jp outsl lahf pop jbe mov test repz sbb (bad) xor popfq int sub (bad) adc popfq sub insl rex.X lock xor insl push mov sbb shrl movabs fdivr je int mov outsl (bad) push lret in xor adc push sbb callq retq sub or mov fcompl push mov (bad) and pop pushq movsb adc jp xor push (bad) stos cmpsb test sahf adc jp rex.WRX movabs fistl loope (bad) (bad) scas xor sarb push xor retq xor sub cmp or and and loope or (bad) xchg (bad) mov lret clc mov (bad) je rex.WRXB outsl leaveq (bad) insl cmp (bad) je int rex.WB rex.WRX adc pushfq mov sub add add pop jmpq repz push adc push mov sub xor adc out and mov (bad) mov xchg (bad) adc (bad) insb andl xchg adc sarb insl movabs insl pop cmp pop adc insb xor iret sub adc stos mov std gs in rex.X adcl lahf push sub (bad) imul adc jg mov adc or movsb outsb enterq mov es lret stc sub cmc imul insb jae icebp pop loop (bad) rex.B mov pushfq cmp outsb rex.WR xchg loope rex.RXB movabs outsb rex.RX sarl mov rclb adc std rex.WR insb (bad) fs outsb (bad) jl callq cltd std jnp sbb pop mov sbb mov push jb (bad) int xor lock insb outsl scas jb xrelease push mov test rex.WXB repnz sbbb sbb cs adc leaveq lods movabs sub rex.X rex.WB sbb pop jae scas mov mov xchg (bad) add mov rex.WX ja mov test ss outsl callq enterq outsl jb jmpq ss lahf cwtl or cwtl std fwait sub and (bad) insb jnp mov imull lahf pop int3 xlat scas adc (bad) movsb mov mov rex sbb mov or mov and add jae adc movsl (bad) jg cld rorb mov imul mov and sbb mov movabs cmpsl retq (bad) callq icebp xchg (bad) insb out btr (bad) xchg test xchg rex.WRX pop add (bad) roll (bad) adc jbe (bad) adc js (bad) (bad) xchg add xchg fsubr pushfq mov sarb pushfq pop (bad) shrb jns cmp pop rex.X cs xchg (bad) xchg mov lods rex.WX cmp leaveq adc test retq mov sub and mov (bad) (bad) jl mov adc movl (bad) imul jae insl (bad) loopne jno fdivs cld mov jno movsl repz test adc or outsl leaveq xor gs cltd push or mov push add (bad) out rex.X out mov add mov (bad) (bad) imul xor jb pushq push xor jmp xor out cmpsb callq xchg callq mov mov fiaddl cmp cld adc fwait stos (bad) (bad) sbb fldcw jb (bad) hlt (bad) (bad) jb in int3 rex.WRX scas sub (bad) xchg lods jns (bad) and rex.WRB sahf pop (bad) cmp imul mov pop sub sbb jae movabs pop sub rorl cmp rex.RB clc outsl movabs sbb scas js pushq xor sub jl xchg (bad) xor repnz push and and retq mov movslq sub movsl jg test sub insl rex.XB add jge fwait test (bad) mov pop out sbb outsl add rex.WRXB (bad) js rex.X rex.X fwait rex.B in stc imulb pushq jae mov add adc out popfq addr32 xor in sbb cs ss cmpsb mov (bad) sbb rex.WX repz lods in adc (bad) in cs mov pushq xor cli cmpsb sbb sub sbb pop (bad) test (bad) shrl adc (bad) hlt test sub sahf je popfq mov cmpsb stc or sahf insl push fcmove lret scas sub jo sub or out cmp xor fwait and lret mov es or (bad) (bad) (bad) rorb cs add pop adc imul (bad) (bad) cmpsl push pop xor mov xor or movsl (bad) sahf insb (bad) or es out fmul add loop out pop scas mov outsl adc movabs xchg add jb rex.W scas pushfq cmp and cmp hlt mov mov mov rex.WX rex.RB adc xor jl (bad) cmp test sti jrcxz sbb js mov mov fistp fdivl sbbl xor xlat sbb insl lock cmp mov and xchg xchg sbb mov sub lahf push xor test popfq xor mov sub adc data16 jbe (bad) sub lahf mov and (bad) movsb test pop callq sbb (bad) push jle and mov (bad) imul lods cmpsl (bad) loopne (bad) (bad) fs out mov mov pop (bad) (bad) andb pop (bad) lret mov popfq (bad) xor popfq insb and repz movsb pushq mov push callq stc addb test cmp je in shrb mov mov mov fwait (bad) mov adc cmpsb sbb rex.WRX mov jnp xor (bad) rex pop hlt (bad) gs mov (bad) movabs pushq rex.X mov movd insb ficompl scas sub loopne data16 mov mov cwtl pushfq push out fnstcw mov or loop (bad) jge fimul pop sbb fwait (bad) js in test add rex.XB and insl mov hlt retq mov fbld rex.XB xchg insb imul insl jl mov rex.WRXB fwait add shr sub lret (bad) movsl in rex.WR jb rex.XB xchg jne xor xor cmp test movabs cli pop pushfq frstor add sahf stc decb leaveq ss fadds push rorl pop sub sbb or imul data16 pushq jne rex.X scas jbe cld or and (bad) (bad) lret insb cmc mov jo sahf movabs (bad) jne loop outsl pushfq jns es (bad) (bad) in cwtl pushq sbb movsb rex.WB rex.WX (bad) mov (bad) add push jno nop enterq imul adc outsb or out cmp scas mov sub rex.RB sub mov cmp adc lea xchg or adc (bad) (bad) rex.WRX addr32 je movsl callq jmpq insl cmpsb cltd mov pushfq iret frstor enterq sbb iret push fwait xchg cmp add jno xor jb (bad) cmp insl and lret (bad) (bad) rex.W xor leaveq leaveq nop scas loope (bad) and rex.RX push xor icebp sub sahf sahf and cmpsl lret andl rex.WRB mov jmpq sub mov sarl xchg movsb jns jae hlt cs jg mov xor test adc mov test jl sub pop pushfq rex.RX xrelease (bad) ds (bad) out cltd sbb movabs xchg xor sub and xor rex.RB sahf (bad) pop sahf repz xchg cmp jo insb popfq (bad) mov cld retq mov and (bad) outsl outsl jns sbb xchg xor (bad) (bad) sbbl sbb or jle xor out mov ficom xchg (bad) addr32 rex.WRB hlt mov rex.WB loopne mov mov (bad) push movsb movsl hlt pop jo lock pushfq xor jno and rex.RXB jp lcall jl rex iret sub push push test jl pop in imul push cli jmpq ss pop enterq mov xchg mov (bad) cmpsl lahf cmpsb insb sbb (bad) push lahf outsb out cltd jrcxz adc (bad) (bad) (bad) (bad) roll mov (bad) cwtl jns mov xor push or fmull scas xchg mov (bad) mov adc mov adc jl (bad) (bad) lret and sub out (bad) sbb add retq mov add lea movslq lods leaveq js pop sub pop push xor push xchg (bad) mov popfq rex.R xor (bad) fistp or jp mov rex.WR es jne mov add cmp and rcrl jae add std (bad) (bad) in (bad) sbb mov sub hlt mov (bad) rex.WXB (bad) rex push cltd jle adc jl or imul xor (bad) mov rex.WRX shrl add (bad) iret sbb mov mov mov xor sti mov jle cmp movsl sbb fisttp movslq rex.XB sub push movsb pushq int3 mov sti or mov mov cmc in ja fwait hlt sbbl lret lahf fwait adc mov xor (bad) mov repnz data16 fist fsubr sahf jno imul int xor test rex.WXB (bad) (bad) stc pop insb in rorb lock rex.B (bad) gs lods mov (bad) or mov loopne test shr xor cmp xchg (bad) and cmpsl (bad) out mov xor cmp (bad) int or add xor xchg cmpsb jp jbe imul jmp movabs outsb jp push movabs out adc mov sub imul scas mov cld scas pop xchg (bad) push movslq adc adc mov out (bad) (bad) (bad) mov push (bad) fadds callq imul xchg outsb repz scas pushq and out cli jno mov in pushq rex.WX out lods rex.RX ja and mov js (bad) sbb (bad) jns retq pushq xchg movslq cmp fcoml sahf rex.W jne rcrl test (bad) xchg sahf adc or test movsb retq pop push insl pushq mov rex.WRB rex.R adc rex.RB js add mov leaveq mov or mov rex.XB ss xor pushfq pop lret ja jmpq movsl adc pop fbstp (bad) (bad) pop movsl (bad) mov rclb (bad) in (bad) adc stc jl add push lret movabs xor (bad) cmpl add (bad) lret add adc rex.WRB sub xchg jne fidiv jbe test mov lahf cmp adc sub iret (bad) rcrb callq loopne pop xlat nop cli lods jne rex.WRXB rolb rex.WRX cmp mov imul movsl lret sub (bad) (bad) sbb ljmp (bad) cmp add jae mov sub callq ja sbb xor rex jns (bad) adc mov (bad) insl test sub (bad) or adc scas (bad) in clc in jnp pop mov xlat hlt rex.B sti adc test (bad) xchg or leaveq scas js test pushfq jns clc sbbl add movl mov add sbb adc pushfq cmpsl sbb (bad) int3 mov mov mov (bad) insl cmp retq add sbb and mov (bad) sub int3 je shr (bad) lahf ss in mov jmp fs movslq negb xor cmp cli push jns xorl shl cwtl (bad) fistpll pushq insb lea fwait pushq push and xor cmp lahf xchg (bad) cmp jnp imul out (bad) pushfq xorb leaveq lods (bad) pushq jns cmp jo in push sbb movabs stc mov fmulp mov pushq push mov mov rolb leaveq mov sbb callq cmp sub rex.W and pop in gs faddp or (bad) (bad) adc fsubl out leaveq (bad) out jnp push fstl fcompl (bad) (bad) js xor jns or mov out retq (bad) mov int3 mov adc insb mov lret shrl (bad) xor sbb clc jge adc (bad) callq scas and lret pop jo roll outsl (bad) (bad) insb lods jmp mov rex.WB outsl xchg loope xor insb (bad) sbb mov lret (bad) or (bad) pop scas sbb outsb sub enterq cmp rex.WB ss or (bad) in sar fmull (bad) mov movabs cmp test mov in xchg mov and fidivr adc test in mov (bad) pop scas (bad) (bad) leaveq jno add mov cmp xor mov rex.WB jns rex.WB in leaveq sub loopne (bad) sbb callq rcrl xchg and sbb xlat pop int mov and sub leaveq loope fistl in fistpll adc cmc jno pop (bad) fmuls or pop lods jrcxz,pn and xor icebp pushfq adc add mov xor adc je movslq ror mov imul int3 (bad) xor ja test movsb (bad) mov jbe pushfq clc movsb (bad) sbb mov movabs cmp jb movabs in leaveq insb rclb movabs mov push callq add sbb hlt rex.WXB or rex.WR shrb jo insb push xchg sub js push outsl mov (bad) lods pop movabs cmpsl adc movabs adc data16 (bad) jne sub sbb cmp (bad) rex rex.XB lahf jbe outsl (bad) mov out fisttpl (bad) out cld je sub out mov and (bad) nop add (bad) jb adc insb rex.WRX jns mov iret gs jbe gs test (bad) jbe lret sbb and leaveq xlat hlt rex.WRX rex.RXB (bad) fs mov rex.RX and sarl cmp test rcrl repz popfq rex.WR mov (bad) (bad) and jmpq cwtl lea cmp (bad) enterq (bad) pop test (bad) movabs retq jns int3 cmc jns sbb pop push icebp (bad) in imul sub add ficom mov xorl enterq adc pop lret jo mov xchg add (bad) lahf adc add lods jnp hlt xchg xchg (bad) in (bad) pushfq xor fnstsw mov pop jmpq adc (bad) es (bad) (bad) pop (bad) ja (bad) (bad) pop pop add sub (bad) (bad) (bad) (bad) xor pop int3 fmul popfq je sub rex.RXB cli (bad) cmc outsb (bad) (bad) imull in add (bad) int3 in (bad) jae scas mov pop rex.RB movslq mov (bad) (bad) movabs sub mov (bad) rex.RX xchg sti xchg shr lods cltd mov lods pop rex.WR adc cmc std andl stc or sbb iret pushfq rex.XB rex.WRB rex.WRX callq pop mov adc movabs stos mov sti cwtl pop cmp vsubss pop sbb pop sub outsl movabs out ds rex.WXB sbb out std in xchg jo pop stos ds sbb mov rex out callq fucomip mov cmp lock sub cmc in adc movabs sbb scas (bad) popfq jb test orb pop mov imul xchg jg push sbb lret enterq (bad) rorb pop (bad) mov or scas jrcxz cs pushfq jno or enterq jo retq cmc (bad) cmp xchg mov nop jb movabs rex.R cli cmp rex.WR rcrl std pushq (bad) shll jae (bad) (bad) insl int3 movabs sub (bad) loopne mov and push mov and mov (bad) movabs movabs (bad) rex.WX cltd insb fsub sbb jae jmp ds pop pushq or adc scas clc mov int3 add (bad) jp popfq jl ss cwtl adc cmp ja pop rex.W rex.RXB (bad) jnp push insb lret in cmpsl or movabs js add rex.XB jns (bad) (bad) stos rex.RX movabs movslq cmp in movabs and xor int mov mov fs out callq callq xor and xchg xor fucomp rex.RX mov test rex.WRX rex.WRX sbb addr32 int rex.WRB sub out (bad) sbb (bad) cmp leaveq std jae out andl jle cmpsb push loopne insb (bad) jmp fsubl popfq jno outsl or insb pop xor pop mov add fisub push (bad) cs jae rex.WXB rex.XB pop cmp (bad) (bad) jno imul xlat (bad) mov (bad) (bad) rex.WRXB out rex.RX xlat pop (bad) xor jp js (bad) fmull cmp rcrl sub push sub pop fistp movb jns test pushq sub rex.RX adc insb pushfq jg jb rex.WRX rex.X cmc fwait adc jb sub (bad) xor xor hlt rex.WB xor cmc addr32 rex.WX fstpl lret rex.WXB add in jmp push popfq rex.RB fnstsw rex.RX mov movabs cmp adc repz xchg jmpq loopne pop rex.X fwait lret add gs mov imul in xor je xor and repnz mov int addr32 sbb xor movsb sub test icebp mov es leaveq adc (bad) int insb scas movsb rex.R sbb insb lret pop mov sub (bad) xor callq xor jno xchg (bad) add mov loope (bad) mov in jae fwait pop (bad) jne rex.WX cmp rex.WRX callq outsl add rex.B fstpl (bad) rex.RB sbb pop xchg jl insb adc add addr32 push shll rex.B adc xor push xor adc jo cwtl push sub cmp rex.WRB movabs rex.RX push lea leaveq (bad) subl or enterq cmpsb movsl sbb mov adc cld jae push cmc loop fisub int add rex.WRXB jrcxz and (bad) cmp xor insl (bad) fcoml xchg or clc test xlat insb and rclb mov rcl mov xchg fidiv sbb (bad) push out stc incb xor mov fisubrl (bad) pushq mov rex.WXB and callq push movsb movsl movabs (bad) (bad) mov nop sbb mov mov sbb callq in xchg callq sbb stos (bad) cltd jne rex.RX push imul pop pushq int jne,pt jns movabs cmp sahf and pop sub adc sub xchg adc pop adc cwtl pushq pushfq push repnz mov repz rex jp rex.WRXB mov (bad) imul repz xchg rex.WRXB lahf (bad) jmp ja int xchg jrcxz mov sbb mov (bad) lret mov pop xchg movsl sahf mov mov movsl pushfq (bad) cwtl imul lahf (bad) fild cwtl push rex.XB ss (bad) and and outsb sub (bad) (bad) out lahf movabs ja (bad) callq mov out (bad) mov movsb pop (bad) adc (bad) sub mov scas shrl outsl lods fs pushfq xchg outsl leaveq jmp adc jrcxz or mov repz movabs mulb push jo ds or in sbb movsb mov pop xor (bad) int (bad) jmpq jrcxz (bad) ss xchg sub ja xchg imulb (bad) retq lret xor std mov outsl fdivrl pop xor jge and gs scas xchg add fwait cmp adc pushfq jne lahf sub divl adc mov pushfq mov repz mov adc js int3 (bad) sub (bad) repnz sbb out mov fwait mov clc ja adc (bad) rex.WXB lock push add adc xor leaveq mov add add cltd xor xor mov xchg sbb jmpq jrcxz cwtl adc addr32 movabs and push jae adc or pushq imul rex.W imul jne pop pushfq xchg xor jmpq jno push adc pop imul int3 lret (bad) roll add mov (bad) imul divb iret sbb cmp push lret add or adc xchg lret movslq fstpl jl cmp adc loop movslq (bad) rcrl mov or lret rorl loop imul jl jl and ficoml add sbbb cli mov adc in insb movsb mov movabs fstpl (bad) (bad) xor movabs xchg cmpsb mov rex.WXB pop xor jmp out (bad) xor scas roll nop nop cwtl or cmp cld enterq pop adc pop callq lret xchg jbe sbb pushfq fdivrs outsl mov push cwtl outsb cmp rol rex.X (bad) add jrcxz rex.W xor mov insb (bad) and mov je js (bad) rex.WRX push jb mov outsb mov popfq insb mov and mov lahf lods push (bad) pop mov mov add iret mov leaveq adc mov (bad) rex.WRXB hlt shrb int mov push sbb xchg jp mov mov movabs sub rex.WB icebp sub cwtl (bad) iret shrl or xor int3 (bad) xchg rex.WRX cmp scas rex.R xor int movsl mov ss xlat or (bad) fsubrs outsb addr32 mov mov jl sub insl in rcll enterq jbe pop cmp imul mov int movb fbld jns (bad) sbb (bad) roll mov rcrl movsb movabs sbb (bad) mov and fldcw test scas ds fisttpl nop movslq and insl mov (bad) push pushq jmpq sbb (bad) je ror mov clc (bad) mov outsl test ficompl rex.WB fwait test sar fwait cmc orb mov and rex.WXB jnp mov pop popfq mov stos repnz or rex.WRXB sbb test (bad) sub vhaddpd mov xchg add fwait in (bad) xor scas movsl mov jae push stos xchg xor movsb movabs movsb (bad) pushq cmpsb test or je adc cmp mov sub fidiv xor pop mov sbb add xchg rex.WB (bad) add add sub movabs adc (bad) pop rex movslq (bad) sahf fsubl (bad) outsl lods (bad) xor fsubrs pop insb roll cmpsl lret je adc (bad) mov rex.W scas sti add (bad) sbb add insl (bad) mov (bad) jrcxz cmpsl pushq mov xchg imul mov xor test (bad) xchg add push (bad) mov lret leaveq ffreep enterq mov mov mov add movabs mov xor adc mov stos jns rex.WB rclb hlt pop (bad) rex.XB (bad) jo and push rex.WX (bad) pop iret ss (bad) leaveq hlt (bad) jge je stos sbb out in imul out sahf fmul mov pushq sub pushq lahf adc movsb mov mov hlt js movabs adc pushq rclb out sub popfq push xchg sbb mov xchg mov stos push rex.RB cmpsl rex.RB xchg sub push scas js out or (bad) xchg sub (bad) fcmovb lret jo test (bad) (bad) jo rex.X xchg rex.RXB mov pop clc sub (bad) sbb rex.WRX rex.WRX hlt pop and nop push loope (bad) imulb pop xorl xor xchg (bad) mov (bad) nop rex.WRB cli sbb cbtw js (bad) hlt fs movabs pop fwait push pushq sahf movsl (bad) (bad) (bad) push cltd add jns stc mov stos out xchg xor sbbb jg sahf jno xor lahf jo gs add adc cmc and xchg xchg movabs test rex.XB jl jl or test in (bad) (bad) gs cld jbe push (bad) loopne test movabs mov rex.X (bad) divl mov test (bad) adc sahf (bad) (bad) cmc xor pop (bad) pushq jge mov in stos (bad) cmp lret (bad) xchg jo repz mov cmc jb (bad) (bad) cmc movslq jge rex.WRXB mov pop mov mov mov addr32 or add lahf lea jo std outsb sarl adc loop jge out mov movabs rex.XB mov cmp pushfq (bad) xchg rex.X std add out scas adc in out jnp jl adc jge sbb popfq sub rex.WRB add pop (bad) jp jrcxz in rex.RXB lret rex.WXB test cmc push lock sbb in cmp jrcxz out or insb sub int3 pop pushfq (bad) adc out insb js popfq (bad) rex.B mov sub jrcxz rcll add or mov mov jo or pushq imul lahf jne jmp loop adc lret rex.WR cmp mov fadd scas popfq jno sub imul mov (bad) add (bad) rex.RXB pop movhpd cwtl int repz ss pushq es xor rex.RXB and (bad) sarb pop mov jb iret rex.XB mov sub mov movslq push rex.XB movabs and pushfq adc add outsb or pushq outsb sbb addr32 pushq rex.WRX movabs in mov and pop loopne fld test push add push mov mov jmpq jle sbb callq jns rex.R fmul cmp sti pushq out add or cmpsl movsb movabs pushfq xchg fimul sti or or pop fimul (bad) icebp jbe (bad) fsubrl (bad) pop sub imul cmc stos (bad) lret retq xlat in addl (bad) movsl and jno cmp sbb jnp rcrl setns xor imul (bad) mov movabs mov (bad) add lock adc pushq jle cld xchg insb pushfq js insl add (bad) mov in rex.RB or (bad) fiadd sub imul movsb cltd adc xor leaveq movabs adc (bad) add (bad) (bad) mov (bad) int3 and (bad) adc (bad) out nop retq shrb xchg hlt (bad) mov rex.B ss fidivl ss mov mov int sahf sbb xlat (bad) outsb stos pop vorps pushq cmp rex.RB mov add jbe cmpsl cmpsb shll adc xchg out jle test cwtl cwtl pop jno rorb fdivr std and xor pop test (bad) add test shrl mov (bad) je mov sti and lock scas jno scas std mov imulb push jo cltd fsub (bad) or (bad) jl pushq adc (bad) (bad) ror lods mov fcoml xchg push sahf mov rex.WRX sub (bad) cmp (bad) data16 lods int3 test mov stos out out out rex.WRX or out iret test adc mov rex.WR mov pushfq xchg cmc (bad) lahf xor pop mov sbbl or movabs jmp jnp fidivrl adc sbb test hlt fistpll mov (bad) (bad) or rex.WX pop mov leaveq (bad) mov mov jns jg ss jne jb sbb (bad) mov mov sub roll mov jg sti mov jp mov (bad) addr32 mov loope rex.WX jns (bad) hlt adc push cld fwait xor repz sbb (bad) stos popfq fistp int rex mov xor outsb int cmp push rex.XB movslq and (bad) ss jl push jo andl ja pushq and jle test mov ja je jae pop push and test and cmp jnp jl cmp adc (bad) callq jne xchg mov pushfq adc cwtl and rex.W clc (bad) callq (bad) rcl or imul adc hlt jo xchg cmpsl outsl rcrb nop ss sti mov (bad) mov repz rex.X sti (bad) cmp addr32 pop pop out retq pop sbb pushq fldenv cmpsb retq mov jo mov outsl lahf int or std rex.RB (bad) ja xor (bad) (bad) mov jne loop mov mov jae sub mov nop xchg shll std rex.WR gs subb and or (bad) pop sbb movsb outsl pop movabs out xchg enterq insb lods cltd mov je pop callq outsl rex.R insb outsb adc xor cmp es enterq scas and mov cmp sbb (bad) sbb or cltd (bad) jae callq retq iret sub mov pop mov rex.WB push (bad) pop cwtl stos insl stos sbb sub xor outsb (bad) mov fs js rex.WX cltd push in cmpsl xor in jns adc and pop (bad) or mov adc (bad) and sbb out mov rex (bad) out rclb sbb pop mov cltd and sub mov fimull leaveq mov add mov movabs test mov mov orl movabs rex.RB rex movsl rex.X or mov jae out (bad) mov rex.R sub fwait mov pop jo xor (bad) sbb xchg pushq cwtl movslq pushfq mov enterq rex.R rex.XB loop jbe insl (bad) in movsb (bad) xchg sbb sbb jae xor (bad) or jne std stos adc or sahf rcr subw sahf or xor (bad) lea cltd cwtl xlat push test (bad) cld (bad) cli movabs adc mov in fnstsw sub sub add cli adc mov insl insl cld push add test mov and (bad) pop std pop add fiadd scas add (bad) jmpq movabs cmpsb cmp adc rex.XB (bad) fildl pop sti test fcmovne loop int out add movabs int nop mov jge adc test mov adc rcrl and lret rolb xor jne (bad) xor hlt lret (bad) mov rex.RX mov push jno cmpsb in es enterq js xor (bad) pop test (bad) insl (bad) popfq lods lods sub push lret outsl cmpsl sub mov retq sbb add rex.W push rex.WB rex.RXB rorl stos pop movabs (bad) lods (bad) push push (bad) (bad) roll xchg je insl imul xchg and (bad) adc insl add (bad) repz rex.X js lret pushq scas sbb sbb fwait leaveq mov mov lea adc lods ror xchg ror int3 test rclb rex.WR stos (bad) mov push fisttpll adc and mov test outsl push add adc push movsl int3 callq js jne mov and hlt xor pop pop (bad) movabs cmp pushfq (bad) stc or mov std (bad) mov in push jne in pushq sub or (bad) or ficom loopne mov mov movabs imul (bad) mov or lret stc add push adc xor data16 pop adc stos sti add adc rex.WXB ja gs test and nop rex.RB cli sub jb sbb mov fcoms jns mov test repnz adc (bad) mov pop test jo mov shlb (bad) and jp lahf (bad) mov movsb (bad) callq cmpsb sub rclb or (bad) jns and mov rex nop shrb test (bad) mov mov (bad) (bad) adc adc or add lahf add es and in mov rcll jo (bad) jle jae xor (bad) lret adc mov sti in cmpsl in (bad) or rex.RXB jno,pt mov lea xchg movabs mov scas shrb mov mov mov lahf movsb pop pop stc fisubrl adc add cmc cs lea loope rex.R iret adc rex.WRB add iret popfq jnp test jl xor test (bad) and cmp clc pop add jmpq cmp sbb (bad) vcvtph2ps (bad) stos xchg sbb pushq rex.WR scas ror rex.XB stos add lods mov (bad) sti jmpq cli adc xor (bad) (bad) mov callq js pop sahf adc repz sbb (bad) cld jne jmpq (bad) ja sbb imul lods cmp scas mov lods push sbb mov (bad) mov mov in cmp adc rex.WXB pushq rex sub callq (bad) rolb lahf mov mov fild xchg push out jne cld outsb sbb orl stc jbe sbb rex.WRXB lahf pop (bad) imul sub (bad) (bad) adc (bad) repnz mov push insb (bad) jb movsb pop rex.RXB mov (bad) outsl (bad) sahf mov xchg (bad) pop lods cmpsl mov push xlat sbb mov sahf xor pop retq mov pushq xor xor fs fsubrs in cltd jo (bad) bswap scas test movabs hlt iret and (bad) cmpsb test int3 fidivr rex.WR cmp test mov jl mov rex.WR cwtl in test ja roll lret xlat cmovl (bad) mov cli rex.RB xor int cwtl (bad) mov push cmpsb or mov movabs mov insl out pushq push stc (bad) test (bad) fcmovnu int3 pop jrcxz mov mov mov jmp testl (bad) shrl movsb retq and jmpq repz adc (bad) (bad) xchg pushq (bad) cmp jae pop fstpt test xchg out cs (bad) mov add adc scas jns cli test cs (bad) mov (bad) pop popfq (bad) and movsl cwtl cmp retq (bad) or fldt rex.RXB icebp (bad) stos imul popfq mov sbb and lods sub xchg in xor lahf enterq mov mov sti test divl jle data16 push xor jae (bad) lods retq imul mov xchg (bad) xor (bad) or (bad) mov jrcxz cwtl out outsb data16 add cltd adc cmc cmc adc mov pop xchg enterq cmpsb mov cmc (bad) push enterq out cmp jne (bad) pop rex.RB rex.RX loop fstpl add rex.RXB repnz rex.WB push rcr (bad) (bad) mov fadd callq cwtl loope fcomi std xchg (bad) in (bad) xor pop shrl rorl xor (bad) mov imul scas icebp pop pop jnp sub rex.WB pushfq loopne test push cmc mov pushq sbb lea (bad) movabs mov shrd (bad) lfs jbe cmp test mov test (bad) lock int insl (bad) sbb (bad) cld pop test movabs callq movsl cmp retq stc or pushfq adc callq lods mov push in lret int test cmpsb and sub (bad) es fldcw movslq mov xchg rex.XB stos and iret stos hlt jp cs (bad) iret sub (bad) ds (bad) or mov or sahf pop rex.WR testl sti pushq retq negl mov and pop mov mov test hlt mov cmp enterq pushfq xor in mov insb pop or outsl scas rcrb cwtl mov jo push ficom movsl jmp lahf xchg rex.RX push jmpq and mov mov or rex.X jb cwtl jne jrcxz add (bad) cwtl pop cs movsl pop (bad) outsb pop (bad) (bad) or fnsave movsb (bad) mov cwtl test enterq sbb add sbb adc push sbb test pop (bad) sahf (bad) sahf (bad) (bad) mov mov jmp (bad) lock movsl sar adc fs jbe (bad) sub rex.RB xor rex.B jbe popfq adcl mov lret add in sbb cmp rorl add and mov push or movabs faddp (bad) cmp mov cmp (bad) mov outsl sarl movsb (bad) movabs insl pop enterq movsl jmp mov (bad) xor idivb pop repz adc jle mov test mov movabs in out es icebp movabs pushq mov movabs jnp mov ds adc xchg rex.WXB (bad) mov out sahf (bad) icebp int3 cld sbb pushq repnz scas cmp jns int gs jl (bad) or sbb push mov push scas rex.B pop rclb notb (bad) test callq mov jge (bad) pop lahf and ja callq mov test movabs fs pushq cmpsb (bad) icebp sub cmp rex.WXB nop push sbb repnz and enterq jrcxz push out retq xchg faddl add xchg rex.R (bad) push (bad) callq (bad) sub mov adc mov out add cwtl movsb pushq pop mulb jnp pushq rex.XB mov popfq mov insb or imul xchg mov xchg rcl (bad) movslq fidivl or (bad) lret gs lods jo jbe xor xorl adc jl add fwait adc (bad) push xchg xor mov popfq (bad) icebp ficomp add adc or pop rex.WRX clc or (bad) add leaveq mov (bad) lods je popfq int3 lock js xor fwait callq (bad) loopne jrcxz in lret cmp loop sub fldl insb test add rorl jle cwtl int icebp rex.WRXB xor pop fldt mov rex.X push sbbw rex.WB sbb mov int subb or vphaddubw cmp rex.WB cs rex.WRXB sbb stos (bad) rex.R insb adc lret xor popfq rex.RB sarl mov sbb rcrb mov divl js jne sahf adc add jne bnd jo cld insb rex.WB rex.X rcrb (bad) insl mov or in (bad) ja (bad) mov imul fdivs (bad) mov mov add xchg andb popfq cmpsb jbe xor (bad) lret rclb rex.RB sub sub test popfq test test cmp loop cltd jne cmpsb movabs test mov cld test mov (bad) cli xadd ja and mov xchg test (bad) test icebp and rex.WR (bad) cmpsb sbb (bad) insb sbb (bad) out sub insb scas and jnp int3 rex.WB adc sub rex.WRB out lahf (bad) xor ficompl xchg std or adc mov xor lock (bad) xlat xor (bad) lret sub lea rex.X sub in scas jmp jne mov (bad) mov rorb jns test and or lods mov (bad) icebp shrb scas stos adc fisubrl cmp test stos and and mov add push rex.X and adc repnz out pop stos js pushq adc (bad) mov jns in (bad) (bad) rex.W pop rex.W pop rex.WXB pop retq test cwtl mov rex.B sub mov xchg movsb (bad) mov ror movsb jae rex.RX mov (bad) (bad) mov int mov xchg rex.WX pop icebp (bad) pop (bad) imul add (bad) add jo in (bad) mov sub lahf sbb std rex.WR fmulp (bad) lea jl xor (bad) testb js movabs (bad) fwait mov jg push (bad) mov push cmpsl cmpsb (bad) xchg pushfq lret sbb stos (bad) xchg leaveq es mov sbb xor outsl lahf movsb (bad) adc and (bad) add sbb (bad) pop xor adc outsb fwait scas xchg rcl pop (bad) imul jmp movsb adc divb sbb mov fdivp sbb (bad) (bad) mov movl xchg xchg push int3 ds gs adc rex.X cmp mov mov push jrcxz xlat scas stos rex.WRXB mov (bad) push sub jo cmp mov jae add mov scas movabs addb (bad) popfq xor retq rex.WRXB repz movslq pushq xor (bad) (bad) rorb pushfq cmc xor pop stos gs mov xchg mov (bad) and (bad) and loopne sbb pop (bad) adc xor cmc movabs rex.RXB cmp jb cmp xchg or pop imul jne mov movsb (bad) mov int3 jno in xchg adc mov bnd xor lods addb out sbb xchg add sub loop jmpq mov cltd (bad) in rex.WRXB stos out jrcxz int3 add (bad) rcll (bad) fwait push mov jg out pushfq pushq cmc sbb fwait and xchg (bad) jnp retq sahf xor jne jg shrb (bad) jne (bad) jae pushq sahf adc lahf fs loope mov outsb lret pop (bad) adc fnstcw outsb movabs cmp (bad) insl rex.XB je jnp mov pavgw mov movslq jbe movabs cmp pop int3 mov lods (bad) kmovw xor (bad) decb or pop fldt mov mov mov int3 mov jrcxz je (bad) sbb data16 (bad) lret enterq add sub pop jrcxz (bad) int3 cwtl sbb pop or jb gs add popfq insb iret setae jne frstor mov sub push fmul push test in test repz xlat push insb rcrb in jns mov mov mov sub je mov (bad) (bad) sub mov push xlat xchg xchg lret (bad) jp (bad) (bad) (bad) (bad) mov test fdivrl cli (bad) xchg rcrb cwtl adc jb xchg mov xlat pushfq mov rex.XB int3 fs and (bad) pop icebp sub rcrl rex.R lods add sbb addr32 sub cmpl enterq mov insb mov and std xchg xchg cltd mov (bad) push mov movabs sahf pushfq add test pop rex.R cwtl out cmp rolb sub ja adc ja adc callq rex.WRX jl sub push movabs mov cli ds sub adc (bad) fwait rex.WRB cmp (bad) retq imull xchg repnz pop std out sub xor pushfq scas lods pushfq nop out rex.WRB jae (bad) (bad) rex.RXB mov stos std rex.RX fcomps callq mov or push (bad) rcll jns rex.B rex.WXB lret (bad) pushq repnz fsubrp xchg rex.W (bad) notb xor jno sub rex.XB (bad) gs cmpsl pushq jbe rex.X retq lods scas in (bad) test jmpq sub jo lock scas push cwtl lock loop jo jmp xorl rolb mov add je jo outsl jg rex out sbb sub rex.B shrl (bad) cwtl (bad) rex.WRB lret (bad) sbb xor (bad) rex.WX jno and (bad) icebp test cmpsb sbb mov movabs rex.WRB (bad) (bad) f2xm1 mov (bad) sub jns callq repnz movsb lods (bad) xor lahf (bad) int3 sbb sahf mov push xchg xchg sbb sub xchg pushfq pop fsubp data16 stos sub stc add and sarb mov pushq nop movslq cmc xlat out (bad) mov pushfq push rex.WRX outsb data16 sbb push (bad) insb sahf adc push mov mov fidivrl jle pushq (bad) add jns test push and (bad) jp (bad) and mov outsl xor jno lret fmul std mov retq mov sub lea fidivl xor sub adc add (bad) icebp rclb mov adc (bad) je pushfq jl cmp imul in (bad) mov pop (bad) sbb mov add movsb pushfq jrcxz fwait pushfq jp xchg jb (bad) add (bad) fbld or fnstenv xor xchg insl (bad) ja (bad) popfq or xor sbb pushfq int jnp jp cwtl out mov jae jo adc outsl and jbe out pop pop movslq mov and sarl mov adc pop pushfq jge adc push addr32 gs (bad) push fs sbb pushq xchg in cmp mov loopne scas mov std rex.X mov pushq std (bad) rorl iret add hlt mov (bad) (bad) (bad) push mov or int3 rex.RX sbb mov jnp cmp stos xchg movabs mov pop mov retq push xlat rex.WB out mov outsl adc insl stos mov (bad) or pop mov cmc movabs shrl stos in nop (bad) push fst mov mov scas rorb push mov xchg fisub frstor (bad) push mov (bad) fdiv movabs in shrl (bad) (bad) outsb jl push (bad) pop movslq mov div js jbe adc scas ja stos add leaveq add callq (bad) mov pop pop scas outsl lods xor out (bad) pushq add xorl sub out es int out or iret test mov adc xchg mov xor mov scas stos pop (bad) test popfq pop mov sbb cmp int gs stos (bad) cmp rex.WRXB scas stos mov add outsb xor adcb or lahf pushq cmp enterq and sub stos mov scas mov out jae movabs (bad) mov (bad) mov jbe enterq adc cwtl mov callq mov adc notb insb pushq xchg ja cmp imul (bad) or sub sub xor mov lahf mov (bad) xor xor jbe roll neg mov icebp cli or mov outsl push leaveq enterq xlat lods hlt jns jne in pushq xlat insl add callq in scas rex.WRX (bad) jbe cltd iret fild int jb testb sub lods cmp rorl movabs mov pop jmpq in cmpsb insb add stos (bad) imul push in je negl fwait (bad) jno pop popfq add add and mov cmp (bad) adc sub scas fiadd pop je mov mov mov rex.R je lret cmc xlat and stos lahf test lods cltd test mulb mov scas mov cwtl test add or out stc sbb push (bad) jno int3 xchg mov jno jo rex.XB jge xchg cs push xlat orl mov xchg data16 rex.WR sbb adc mov (bad) xor vfrczsd hlt xchg movsb rex.WB xchg sti sbb mov xchg sub jno cltd jle sub or adc rorl (bad) mov fcomps add mov callq (bad) push rex.RB adc (bad) (bad) lods movabs mov out xchg xlat mov mov xchg cmp sbb test xlat jae (bad) sti cld sub jg (bad) pop xchg add (bad) out mov imul movabs movsl in movabs mov imul stos xor xor push int3 rex.WR add jp mov (bad) repz xor repnz rex.WRX shrl int3 popfq scas and iret scas mov lods mov mov add iret stos scas movsb mov cltd xorl mov add cmp jnp sub mov pushfq sbb xor (bad) mov and ss cwtl sbb mov rorl sub scas sub sub xchg (bad) hlt movsb mov movsl cs (bad) mov movsl mov scas insb movsl mov outsb movsb test mov jns mov lods outsb lock movabs int3 ja in insb outsl loope movabs or jnp test mov jno imul mov (bad) sbb clc movabs (bad) int3 mov insl insb (bad) test jle enterq pushfq mov rex.W movabs stos (bad) adc mov (bad) (bad) popfq divl nop sub mov jmp cld jne jp insb (bad) (bad) test xchg add or or sub rorl lock mov gs test rex.B xor fstps (bad) jle test mov adc xor pushq jp (bad) popfq pushfq adc test cli or paddsb in ds push popfq push jl mov std movslq scas sub (bad) (bad) xor jns sub stos fstpl stc rcrb xor scas enterq lret sub lret mov sub fstpl je mov sbb (bad) je ds in xlat or (bad) pop (bad) xchg pushq pushfq (bad) xor pop sub jb subl test mov rorb rex.WXB add fadds cmp (bad) rex.RX gs movsb out iret insl rex.X jo stc cmc callq rex.RB mov jb jmp (bad) data16 movb jl leaveq pop xchg cld cld ja mov mov pushq ss mov movabs test mov faddl pushfq add push scas rex.W rex.XB (bad) sub jb lock stc xchg or xchg xlat (bad) jno enterq mull xor cmc ficomp jno sbb lahf fisttpll xor rex.RXB cmp push (bad) movabs hlt retq rex.WRB adc imul lahf rclb or or jno out int jmpq xor insl (bad) sub (bad) mov (bad) je cmpsl rex.WB adc leaveq (bad) jne jl pop gs sub sub enterq lods adc mov sub (bad) (bad) (bad) pop jbe add cmp mov shrl sbb test sub scas and addb ja add add and in add leaveq rex.RX (bad) (bad) or adc mov pop (bad) callq lret sbb xor test js cmpsl sub jne addb (bad) mov shr mov sbb sbb xor faddl xor mov callq lods rcl ss (bad) outsb jne stc scas bnd sbb roll stos add pushq jmpq (bad) jl (bad) sub popfq test outsb cmp fmul xor push insl imul jnp push add jl sbb imul adc pushq adcl jnp (bad) ficomp lahf or fnstsw mov in mov push movabs (bad) mov imul sbb imul insl xor mov fist movsb adc movabs cwtl js leaveq push roll retq movsb fist (bad) (bad) jns pushfq rex.RXB sbb add add int stc (bad) imul std decb je (bad) xor retq fnstenv rex.WRX (bad) rex.RB add xchg loope rex.WXB rex.R rex.R callq (bad) rex.WR ss imul iret rorb rex add or sbb (bad) icebp (bad) adc in push fildl out rex.WRB add movsl retq mov and (bad) xor xchg insl mov push mov jae movslq stos int mov adc (bad) and decb (bad) jo lret ror (bad) push jge jbe pop mov callq push (bad) mov shlb adc addr32 retq clc or rex.RB lods (bad) movabs xchg movaps adc jmp xchg fidivl loop scas fstpt lods add rex.RX (bad) xlat adc (bad) sub fwait jmpq fsubl jne out pop scas mov sbb pushq nop out rex.RB fs addr32 xchg fwait adc rex.X and rex.WRXB insb scas andb test imul insl callq (bad) push rex.WRX rex.WRX mov int3 mov mov mov stos movabs pushq out lods mov jns and icebp rex.B gs push mov sbb sub jns pop xor (bad) pushq outsl adc push nop or mov int scas hlt rex.R mov cmp mov or pop test pop jbe test movsl ja pushq adc adc mov mov movsb jns mov and and callq mov cmc pushq cltd test adc incl rex.WX lahf rex.WRXB rorl cwtl movsl pop rex.R std adc enterq pushw imull ja or pop sahf out sbb pushfq sbb (bad) (bad) jp movabs add or jb jbe mov and jne pop in (bad) addl sbb cld decb (bad) jbe sub pop add cltd push cmpsl sbb mov and outsb lret cwtl (bad) mov mov hlt (bad) cmp mov mov mov pop nop mov and rex.WRB add pop adc rex.RXB or (bad) shrb pushq (bad) in js sti add je out fbstp js imul and lahf out movsb pushq mov mov sub jae xor push mov in pushq and mov movsl pushq (bad) enterq out adc cltd rex.WR lods lret xor sub xchg cmp movsl mov mov vrsqrtss movabs in adc jns push loop cmp jns retq cmp (bad) cmp xor add (bad) jae rex.WB movb mov sar cmp in sbb sub jae test xor (bad) rex.WB or xor scas scas pushq cmp lock pop cmp out cmpsb rex.R jl adc (bad) movabs rex.B xchg mov mov sbb rex.WX ss outsl xchg (bad) leaveq ja jnp adc lock (bad) fs stos rex.XB callq jp pop movsb rex.WX sar (bad) rex.WXB jb,pn mov (bad) jo sbb rex.R cwtl add push ja std lret pop (bad) outsl scas scas ja mov int3 sub cld add scas bnd sub ja xchg outsb hlt outsl fwait pop or gs xor outsl adc (bad) int3 (bad) mov test push mov int3 pushq jrcxz pop repnz adc sahf mov (bad) (bad) insl pushq rex.RXB enterq imul scas sbb nop rex.WXB xor add (bad) (bad) xor callq movsb js (bad) (bad) (bad) xor add adc mov imul fiaddl pushfq popfq mov in test callq (bad) rex.X fidivl test pop outsl sub mov mov (bad) out ja adc stc in sbb jb pop fist rex.W data16 mov xchg movslq cmp mov js sbb sbb mov cli stc (bad) lahf imul and leaveq (bad) and xor insb adc sahf add (bad) or mov in cmpsb mov loopne (bad) ja mov add enterq pushq rex.W add pop pop popfq push hlt test lock (bad) int3 retq retq scas or jg je jne xor cmp or jns push rex.RXB (bad) and (bad) sub xor divl adc fistl adc addr32 movabs sti and mov mov stc stos mov ss mov lret hlt add in cwtl imul (bad) mov (bad) movsl (bad) mov cwtl and js mov jge shrl mov (bad) fsubrl (bad) movsl movabs xchg (bad) leaveq stos rcrl lret (bad) hlt adc jo addr32 imul rorb (bad) mov scas jne fimull pushfq (bad) adc sbb (bad) ja sub fs js fwait adc mov scas ds fmull fstpl retq rex.R (bad) mov xor in (bad) insl mov adc (bad) lret add pop hlt (bad) xor and add mov cltd fildl sbb enterq (bad) (bad) in (bad) divl or popfq sbbb ss sbb (bad) (bad) mov or sub or stc test leaveq movabs add and (bad) pop (bad) (bad) (bad) add in mov adc cmc lahf stos js lods xlat (bad) jmp jae xchg nop sti in xchg (bad) and mov adc movabs xchg push (bad) cmc mov add (bad) int idivl add js push fdivrl jb or leaveq loop and (bad) and mov rex.RXB addr32 pushfq or jae push (bad) clc rex.W cwtl mov jmp xchg xchg (bad) mov fs xor sahf fcoml cs sbb pop hlt fs (bad) (bad) sub xchg rex.XB fstpt fbld cmpsb es repnz movsl push pushfq xchg cmc add jl cmp out (bad) mov rex.X (bad) imul mov test repz jne add rex.WRB rex.WRB subl (bad) jg stc fwait jo sub (bad) movabs or movsb mov cmp mov xor mov (bad) sbb pushq (bad) jl scas leaveq in xlat rex.WRB repz add sub mov pop pushfq adc pop rex.R subl mulb in loop in or and mov xor pop cmp mov mov stc xor (bad) (bad) incb jbe add lods lea rex.XB (bad) jae push pushq rex.XB adc (bad) test mov (bad) adc jle cwtl popfq fcompl pushq rex mov out cltd movabs cli push cmp or (bad) pushq cmc jrcxz rex.X add xchg je pop cld movslq int3 ss mov rex.R cmp jae (bad) std hlt jrcxz fbstp jp test insl test push (bad) sti rex.XB movslq mov mov rorl xor fistl cltd add in pop pushq mov push ds (bad) mov movabs jp,pn sahf fcomps jge fcmovne push pop sbb movsl enterq lea jbe leaveq push lock add xchg and je and mov (bad) (bad) pushfq pop sbb movabs insb outsb adc fiadd adc (bad) leaveq xorl in loope jl test in sbb jae sbb xlat retq andb mov ss nop mov sahf lods enterq mov out sub mov repz jae callq sbb mov push xor (bad) ss lret add lret rex outsl jno out jns (bad) mov sarl fbstp (bad) rorl je cs or test mov or enterq mov rex.XB (bad) (bad) adc notl jne mov imul adcl fwait movabs xchg ja decl rex.RX (bad) jae adc jrcxz insl xor rex.WRB rex.R (bad) rex.RXB sahf fistpll (bad) mov mov pop fadds (bad) xor int3 loop sbb add mov scas cwtl out es (bad) sbb xor (bad) pop (bad) clc mov callq incb ficompl xchg xor callq (bad) rex.WRB sub jmp add cli (bad) cmpsb insl sbb jl (bad) mov xor lock lods jno loop (bad) imul sti pushfq sub test (bad) mov popfq lahf imul pop rex.WRX (bad) imul enterq enterq rex.WB rex.WR insb movabs insl mov (bad) (bad) popfq fnstenv add (bad) add stos (bad) stos scas add cmpsl movslq imul (bad) rcrb insl lods sub movabs addr32 jrcxz adc jns (bad) or lock cwtl sub pushq (bad) (bad) xchg in mov pop js int3 and (bad) sbb stc xor loopne jp pushfq mov insl (bad) bts mov test jns mov sbb in (bad) pop pop outsl ja xor lods insl rex.WX iret lods rex.WRXB outsb in insl repnz (bad) mov rex.R cmpsb in or xchg cwtl rex.B xor retq leaveq test rex.W cs clc mov jl xor (bad) cmp sub ja rex.WX lods rex.X out scas xor pop sahf and jrcxz cmp insl and (bad) test mov rcrb cmc adcl test movabs sbb (bad) jbe and jnp imul (bad) fdivl xor stos (bad) (bad) mov insl rex.X retq (bad) cmp scas neg fsts jg adc loopne test (bad) jns xchg fmuls scas push int addl and mov lods in cmp jo (bad) sub rex.WRX test outsb (bad) mov sbb outsb pushq insl pop xor pop stos rex.WXB pcmpeqw and pop (bad) (bad) pop out pushq (bad) (bad) enterq (bad) sbb fcom fiaddl out ja rex rex.X pop es pop (bad) sbb mov mov shr xor pop lock insb cmpsb iret cwtl sbb mov jle mov imul rex.RXB xor add jnp or int3 jl cld scas int popfq fdiv lea pushq jb rex.RX push cmp push sti out mov stmxcsr in (bad) shll pop pop mov stc cmp cmp mov sbb rcrl cmpsb (bad) sbb cwtl comiss outsl pop cs or mov (bad) callq mov or mov or fsubl sub adc cld (bad) movabs xlat xor cmp rex.XB and sbb sbb imul xor lret mov adc mov test orb jmp rolb movslq add fdiv mov (bad) jle add mov jge mov add pop sbb fs lahf (bad) imul imul pop (bad) jo (bad) mov outsl (bad) mov sahf clc (bad) and cmpsb insb xchg movslq test stos pop push jl rex.XB addr32 movsl (bad) mov sahf and outsb fidivr mov mov mov mov ss xor mov and sbb movslq pushq cwtl rex.RB (bad) fdivs and rex.W adc (bad) fs cmp rex.WB scas fidiv xor (bad) rex.RX outsb rex.WB rex.WR in sub ds test mov imul jns xlat in push sub mov leaveq add adc fwait sbb (bad) in leaveq pop in rclb sub jb sub int3 mov rolb xlat sbb cmp pop movsb cmp movsl rex.WB fstpt rex.WRXB pushfq xor je jl push sub sub adcl sbb sub xor rex.WR paddsw je sbb jno hlt rex.WR rex.WXB cmc data16 orb sub mov hlt mov pushfq (bad) and (bad) mov xchg sub mov (bad) (bad) sbb rex adc sbb out mov adc fcmove test mov rex.W movabs adc movsl iret pushq rex.WRXB mov mov int3 cmc sbb adc shrl (bad) jbe pop xchg cs (bad) es frstor iret retq int rex.X (bad) int3 int rex.WRX (bad) sub push movb xchg (bad) xor xchg sbb ja in rex.WB insb imul rex.RXB (bad) cwtl rex.R adc pop mov (bad) fisubrl mov mov adc cmp popfq rorl (bad) shrl fimul out lahf insb jns cmp imul cmp subb adc fs add and cmpsl stos pushfq lret movslq and sbb fstpt addl jbe add stos sub jb xor sti add xlat push jge pushq mov or leaveq movabs rex.XB ja popfq pop rex.WRB cmc pop (bad) movabs shrb outsl addr32 add sahf fisttpll (bad) insb pop (bad) cld jne std rex.R std lahf cmp movsb loop test push mov jrcxz fisubr movabs add add (bad) adc cwtl sub test jg rex.RXB (bad) icebp enterq mov (bad) pop adc jno mov sbb mov int3 mov rex.WRXB add pushq (bad) rex.RX int3 pop xchg jbe adc rex.WRX insb (bad) jne lods (bad) jg (bad) add mov (bad) test leaveq pop scas icebp (bad) rex.WXB cmp (bad) cs movabs adc mov push jp (bad) pop sbb nop popfq xor pushq and pop lahf adc lret lea mov xlat imul sbb jno cltd adc sarb (bad) lods adc outsl cmp fdivrl mov rex.WR fiaddl repz sub shll pushq loopne mov mov popfq (bad) iret and je push and ss movabs retq cmp loop jb ss iret sub stos out (bad) out xor sbb lods lahf sub push lret outsl rex.WRB sbb hlt sub pushfq outsb rex.W pushq rex.WB mov insb addr32 (bad) jb fdivrl cmpsl (bad) mov mov movabs sbb int ss rex.WB (bad) rex.WRX mov sub iret and (bad) insl int sbb push mov nop movabs popfq mov mov (bad) xchg jb rex.RB outsb loopne fsubr jle lret mov nop xchg (bad) pushq (bad) cwtl mov jrcxz pushq (bad) out test mov icebp movabs push xbeginq rex.WB sbb xchg push mov movabs adc xchg jg (bad) jge fiadd (bad) xor insb movabs rex.RXB jl sarl cs js add xor cs sti jmp idivb (bad) (bad) insb (bad) test movabs xlat or iret enterq movabs pop popfq mov test retq cmp jp movabs xchg shll xlat cwtl mov xor xchg idivl mov test or sti jmpq (bad) (bad) mov je (bad) sti je movsb sub insb hlt mov and xor jl pop je mov fdivs xor sti je sbb rex.XB mov adc xor cmpsl (bad) xor lods shll mov mov or mov popfq movsb xor push push (bad) mov push sbb cmp in xor leaveq (bad) test jge mov ja pop sarb jmp cmp or (bad) in xor in cmp rex.WXB sbb and cmpsl stc xlat push nop in xor fnstsw insl mov jg movabs mov scas rcrb (bad) subl xchg cmp int adc cltd mov fildll rex.WX fmull mov pushq loop or mov subl (bad) mov int mov hlt jmpq sahf mov movabs retq rex.W notl (bad) xor sub dec rex.WRXB jns movabs (bad) (bad) lret mov (bad) (bad) mov (bad) xor mov mov rcrb int3 pushfq mov out int (bad) or leaveq fs mov pushfq mov xor mov movsl xchg (bad) mov pushq and (bad) (bad) pop leaveq scas andl iret movslq subl in sub callq xchg imul test xor adc (bad) movabs (bad) push rex.WB add rex.RX (bad) add leaveq (bad) imul gs insl cltd (bad) in lea ss push scas cmp jmpq addr32 (bad) ja xor jbe jnp in jae mov mov pushfq sub jns (bad) adc movabs xor scas cmp rcrl cmp pushq xchg fisubl lea ja retq test enterq mov push mov stos (bad) insb xor rex.WB ror xor push rcrw int (bad) insb adc add gs insb add imul cld cmc test (bad) icebp insl mov fwait xorl imul pop or mov or jmpq in sub rclb rcr add mov cmpsb rex.RX cmc loope mov fildl roll (bad) rex.WRXB or lahf js pushq pop fidiv (bad) test cmpsl lods mov mov (bad) adc sub sub jbe int callq nop sub (bad) lock rex.XB add retq and scas popfq popfq jbe fisubl pushq mov mov rex.WR adc jo pushq int3 xor rex.WXB pop test (bad) fistpl jl sub iret (bad) movsl mov icebp mov test cmp retq fsubr movslq (bad) add retq ja or rcrb pop movabs pop cmpsl pushfq rex.WRB (bad) xorl (bad) push mov pop xor lea (bad) orl (bad) rex.WB (bad) adc icebp cmp pop scas mov sti rex.WRB sbb (bad) mov nop jns rex.WRB js mov pushfq mov scas lods in or mov cmc mov xor jnp mov cltd jl jp and (bad) movabs movabs or movups out stos cmp movabs je mov rex.WRB repnz cwtl ja lods jmp fnsave mov (bad) rex.XB xchg js jmpq cs pushq jbe mov cmpsb sbb pushq outsb cmpsb xorb (bad) jmpq sub sti (bad) fdivp sahf cmp pop repz pop mov adc xorl cmp nop xchg mov jl fwait in (bad) jne test mov xor and jns movsb out (bad) lahf movabs rex.RB cmp sub rex.WXB cld pushq vpcmpeqw jg (bad) gs pop and insb adc sbb test xor rex.WX push rex.RX (bad) cmp in push jmpq jo rex and pushq rex.XB (bad) fwait jno cmp mov insb jns in xchg imul movabs data16 sbb (bad) out sub sbb sub push sbb sahf adc test int3 addr32 mov rex.WRX rex.WX xchg test imul or (bad) rex.W mov pop rex.RB and icebp xchg adc in push notl rolb int3 enterq js mov popfq nop cs pushq sar int3 jp clc (bad) mov mov (bad) rcll adc movsb int (bad) xor rex.X rex.X (bad) sbb insb xor (bad) clc test je cli xor cmp lods rex.XB adc (bad) scas retq and or adc sahf adc pushfq adc (bad) ss rex.WRB cmp add push mov rex.RB mov imul in je test pop out testb movsb insb lret sbb push lahf imul xchg and pop outsl rex.RX jno pushq mov movslq or mov pop loope (bad) mov push in out ja xor repnz jne fidivr sub mov insb popfq adc movabs mov (bad) rex.B scas outsb ja outsb jl pop cwtl pop in and (bad) sahf ja pop ss outsb (bad) iret mov xchg cmpsl std ja xor gs out enterq jo mov adc rex.WRB mov (bad) and popfq mov out jno (bad) pushq mov xor xor pop sti in popq cld (bad) (bad) scas xor jno xchg fcmovnb adc callq (bad) mov insb jmpq and rex.XB mov insl test test mov imul (bad) (bad) leaveq repnz cmp adcb fdiv leaveq out stc rex.WRX icebp jbe pop gs pop jg cmc cmc pop or mov push and ds insb cmpsl rex.WR repnz fist jl rex.WRB mov add test movabs rex.W jle and imul rex.WR mov cs cwtl or notl mov sbb sbb push lret cmp sbb rex.RB (bad) loope rex.R rex.RXB mov sbb sbb pop leaveq mov fisubr pushq iret pop pushfq gs and loope or je retq imul je sbbl sbb push or jge in push rcrl std out leaveq cli lretq data16 stc pop scas add callq movslq add sub add mov (bad) cmp fwait mov jge cwtl ss movslq sbb push pushfq and mov movsb cwtl fcompl push pushfq cmp int mov fisttp xor mov sbb (bad) rex.WRB leaveq pop rex.R mov rex.WRXB mov rex.WX sub flds test mov sbb mov cli jge fstps pushq xchg rex mov (bad) sar cwtl jmp and mov out sbb pushfq xor and pop jl (bad) movb jmpq movslq push xor fsubl jp add (bad) adc sbb sub mov repnz add xor xor cld sub notb test lahf push and loope shll es insb rex.WR scas sbb rorl enterq sahf vpunpckhbw mov (bad) mov pop rex.WRX rex.WX fstpt out jl sub je movsb mov (bad) push cmp adc xor jl (bad) vpshufhw clc add (bad) rex.WRB fs nop adc mov (bad) in (bad) mov stos in btr xor (bad) (bad) cmp jno nop mov (bad) pushfq fildl (bad) lret pop or pop pushfq mov xchg ds sub (bad) jbe and (bad) mov out and int adcl pushq lret xor mov pop and and adc pop cmp rcrl add (bad) rex.X mov out jmp outsl movslq (bad) mov or mov pop es (bad) scas std cs (bad) (bad) js mov int3 jae int3 out nop mov in (bad) push or mov and sbb iret movsb popfq jmp pop pushq clc pop jl ja mov (bad) fmuls cmp lods outsl jmpq xor mov sbb cmp sahf nop movsl sbb js xor in (bad) add in rex.WX rex.WRB outsb pop enterq imul mov hlt int (bad) movsl jbe callq mov pushq in sbb (bad) in nop rex.WR rex.WRXB rex.WXB movabs (bad) rex.WRXB jae mov pop repnz cmp (bad) fisubrl js sub jns rex.WRB mov (bad) mov sub push lock pop lods movabs out sbb xor mov push xor sahf hlt (bad) in or cmp pop and int3 repnz adcl mov (bad) mov adc gs cmp rclb std movsb add xor fsubrl (bad) sub fildl test scas pushfq lret lods cmp rex.XB rex.WRB rex.XB fwait xchg xchg in rex.WRXB addr32 icebp addb mov sbb data16 (bad) (bad) cmc outsb mov or (bad) jl scas callq jmp loope out mov outsl pop popfq imul je mov sti mov (bad) and std sub movabs cmpb movabs mov movsb pop insl jp jle orl and xor (bad) stos nop xor test cmp repz js pushfq add mov enterq (bad) (bad) cmp adc jp fidivr out (bad) mov and add jg test shrl or lea movsl imul push neg iret or nop add (bad) in rex.B mov pcmpeqd fwait rcll (bad) add fisubrl rex.WXB (bad) repnz cli test jno rex.WR pushq (bad) (bad) add cmc pop pop cs adc loop std lods lret insb testb fistpl mov jrcxz movabs and lret sbb add movsl or push sub (bad) (bad) icebp mov add or cmpsb stos rex.RX (bad) int jb test sbb out iret xchg sub (bad) rex.WXB jl sub push (bad) ds rex.XB xor (bad) rex.W lret cwtl outsl mov adc cmovae sub rex.WRXB pop sbb xchg iret sbbl fiaddl (bad) mov movabs rcll xchg (bad) mov pop (bad) cmp out scas xor xor add orl lock sti lret nop test gs (bad) loope mov stos (bad) xor mov int mov pushq xchg adc rex.W (bad) iret rorl scas cmpb outsl pushq popfq pushq (bad) scas (bad) add mov cmp mov loop sub xor js int push movabs stos in adc stc jrcxz cmp sub and stos loopne fs jne xor pop adc cmc mov lahf jo (bad) jl jns rex.RXB pop xor adc (bad) sti test jnp (bad) adcl jae xlat pushq (bad) insb (bad) je and pop fwait cwtl int3 int3 pushq mov adc or adc hlt (bad) (bad) leaveq retq imul push hlt popfq ja sbb int3 xchg mov adc xor fist jle scas mov popfq jl push ss adc mov mov (bad) jle jp mov xchg pop adc pushq pushfq push (bad) adc mov sbb xchg add mov and xchg or add add pop pushfq out add jp movb sbb or cmpsb nop sbb mov (bad) idivb and leaveq enterq mov cs fistpll (bad) mov sahf outsl test (bad) ja mov sub xchg push negb mov jb data16 sti shrl pop (bad) pop callq (bad) rex.WXB (bad) add insb sbb rcl lret scas jae cli insl push xchg sbb lahf loop add (bad) loopne (bad) mov (bad) mov push add xchg stc cmp or scas (bad) lret pop pushq jb add (bad) icebp loopne (bad) jb add leaveq scas retq sbb sub out scas loope xor rex.RXB sahf cli (bad) fsts loop (bad) fcoml or or jge pop add jae repz in (bad) (bad) leaveq (bad) add xor repz popfq fwait sbb lahf (bad) fildl test xchg xchg jnp scas scas push insl movl xchg jle std in (bad) pushq jmpq sbb mov int3 lods mov in (bad) jge scas jae and cmp (bad) lods ss pop (bad) mov lret loop cmp enterq mov jns pop (bad) jmpq in and scas rolb int3 (bad) cmp rex.WX (bad) roll pushq std nop cmp xchg je pop xor mov mov lea sub and adc (bad) or pushq mov rex.WRB rex.WR rex.WB retq sbb pushfq sahf sbb pop lret add rex.RXB fstpt ja and stc lahf add (bad) rorl iret hlt cmpsb (bad) xor (bad) sub pop repz gs mov callq addr32 in rex.WXB xchg jrcxz movabs rex.RXB imul clc and movabs pop test add sbb cli leaveq (bad) rex.WRX and iret pop ds rex.W rex.RX sub mov mov sti sahf or lahf fwait mov sub sub sbb js repz xchg int3 rclb jg or jno rex.WX pop stos mov push pop sbb cmp sbb insb cld rex.RB icebp push test rcrb mov mov lahf sub xchg adc and movabs pop out mov xor or shrl xchg jmpq pop fbstp ds xor jae mov imul repz pushfq cli rex.X (bad) roll lret mov and sub outsl scas adc cli mov lock jns add (bad) mov (bad) mov rex.RXB (bad) cltd (bad) mov test icebp rex.R (bad) mov mov mov mov retq rex.WB mov add and repnz rex.R add stos xchg mov shlb or add (bad) adc pop out push mov (bad) stos rex.RXB rex.WX xchg xor lret test mov cmpsl rex.RX sahf sub cmp mov jnp (bad) pushq sbb fildl cmc in adc cmp out imul sbb (bad) rex.RX jb (bad) jo enterq loope or rclb push sub retq stos out sti in or scas fadd rex.WRX xor out pushfq pushq outsb std fcmovbe cmc mov decb jmpq jge mov sti callq pushfq (bad) (bad) (bad) movabs add mov cli mull rex.WR sub js mov cmpsb sub jns rex.R lahf in (bad) (bad) movabs mov cmpsb (bad) mov in or cmc (bad) xchg sub pop xor sub jns xor add rex.WB rex.XB movabs clc cmpsl test sub push sti ja rex.R and adc pop cmp jmpq shrb sbbl (bad) popfq cmp rolb xor xchg sbb fwait sbb mov lods mov (bad) mov movsb scas xchg shr insb (bad) mov pop mov test enterq sub mov outsl (bad) jl sub scas movabs imul movabs mov push push mov cmpsb mov roll cmp xor test rex.WRB xchg lock repnz hlt pop and ja stos fstl jne test outsl mov imul (bad) pop cltd ja scas adc xor test repnz fwait push (bad) es jle cs int rol scas outsl int3 adc rex.WRX add sbb (bad) rex.WRX rex.R repnz lock (bad) jl (bad) (bad) imul mov (bad) test (bad) (bad) (bad) std retq hlt movsl sub mov and (bad) movsl test (bad) (bad) outsl cld std xchg jne sbb jo (bad) in vmovsd (bad) fisub movsl xchg lock imul pop mov (bad) mov jg scas mov xor xchg test rcrl mov sbb sub (bad) rex.W outsb mov pop jl shl outsb jl pushq (bad) rex.WR rep test (bad) push movsl rex.X cmp mov stos in incb (bad) cmp mov mov jmp jbe sahf in stc add rex.WX cmpsb push (bad) xchg jge rex.WRX fiadd je rex.WRXB out std fild jg rex.RX (bad) scas pop je jne rex push push or out leaveq lods (bad) sub xchg movabs fsubs jmpq adc sub (bad) rex.WRXB cmp in gs jg outsb (bad) scas mov jo (bad) hlt int3 mov sub cwtl movsb ror cmpsl rex.WRX test rex.XB in lcall pushq mov mov mov xor es pushq mov in mov xor in or mov hlt mov in cmpsl rex.R (bad) adc pushq rex.RXB js (bad) jb lods (bad) ja sub jge (bad) lret ja sbbl cmpsb xchg in (bad) rex.B xchg mov mov rex.WRX pop pop (bad) setns movabs jmp mov (bad) adc jl repz or sarl es rex.WRX sub adc (bad) mov outsl jns or sahf stos push mov mov adc (bad) callq (bad) scas add js mov movabs push out lods jns pop fildll xchg adc pushq lods add rex.WXB insl rclb dec out sarb test jmp icebp scas (bad) addr32 test movsb (bad) icebp and fdivl or and shrb sbb neg in (bad) and (bad) test js mov (bad) movsb xchg pop hlt xor xchg add mov stos xlat xorb lahf jae rex.WRXB mov mov rex.WRXB repnz adc add or cltd ds jle in mov push idivl clc adc jo out and in or jne callq movabs push icebp movabs jp lods (bad) add cmp jo (bad) scas xchg cmp adc xor jle stos jle in adc js mov imul pop es lahf jne out lods jl pushq cmc outsb hlt xchg mov add insb rex.XB rex.B rex.XB pop jb jbe fucomip rex.XB loopne (bad) out and insl fldenv movsl scas hlt pop sbb test (bad) hlt rcrl stos hlt cltd (bad) mov movabs int xor add pushq and mov xor fsubrl pushq add scas insb je icebp mov cmp jp add rex.WX rex.XB (bad) lret (bad) imul pop sahf (bad) imulb out add or roll adc sarl pop (bad) sub pushq jns js jno (bad) mov (bad) jrcxz cmc shrl jge cld mov and shrl stos xor xchg es (bad) hlt sub jns pushq mov pop fisttpl xorb insb jl repnz outsb add lods (bad) scas (bad) jmp test fidiv in rclb movabs rex.WRXB insl outsl adc scas lret jrcxz jbe (bad) (bad) pop adc sub ss xor mov mov xchg je out cmc lret cmp jrcxz jne in movslq xor (bad) test (bad) cmp jo sub rcrl sub jns mov adc movabs ss sbb xor (bad) scas (bad) scas jle (bad) jle mov mov xor fisttp (bad) mov push or (bad) imul outsb jg push in popfq test retq add outsb (bad) rex.R cmc int3 fildl rex.WR add js rex.WB rex.B xchg lret scas mov (bad) mov insl (bad) ds or adc (bad) mov pop fwait jnp (bad) lock lahf ja fs jae mov es rex.WR fs mov xor mov ss and imul rex.RXB rcrb cmp sbb cmp jo lock in mov mov mov ss xor in (bad) pop (bad) and (bad) sub jae mov xchg je cmp (bad) int3 sub stc enterq rex.WRXB rex.W mov xchg or int stos (bad) cmpl test rex.WRX xor stos or mov mov push imul (bad) pushq add jae (bad) callq stc es cmpl movslq out out (bad) cli js sub subb je fsubl loope mov jbe jb cmp or retq out mulb (bad) cli mov (bad) jns out je mov (bad) cs rex.R sbb sub in adc cmp jnp out and jnp jo rex.RXB sbb cmp and or lods adc (bad) shll or cltd jge pop or out (bad) scas sahf lea and (bad) adc insl xor sub enterq test (bad) mov pop js divb mov (bad) fs jge stos cli add jae mov test (bad) rex.RXB (bad) xor insl in lock jnp (bad) rex.XB int3 movl scas mov int3 adc pop callq sti enterq sbb or mov (bad) scas rex.RB rex.WXB rex.WB movsb fwait pop out outsb in mov (bad) mov test (bad) add mov (bad) jg mov xor test add cwtl icebp mov rex.X xchg rex.WB vdivsd rex.W (bad) xor adc rex.B sub bnd (bad) in (bad) (bad) jo in sub mov (bad) hlt (bad) (bad) add (bad) mov rex.WRXB push ss test pop push int pushfq iret imul fs (bad) movslq sub (bad) adc (bad) push ja nop enterq (bad) sbb cmpsb sbb or and imul pop or mov lret mov rex.RB sbb adc mov fdivrl outsb mov jo jmpq xchg adc pushfq xchg jg and mov pushq and repz adc xchg rex.B cmp xlat stos pushfq xchg (bad) push pop outsl dec imul mov jl jrcxz or add or mov (bad) retq insl jle pop lods and lods (bad) outsb sti add pushq rex.XB loope push xchg jrcxz lods cmp xor js (bad) xor and outsb icebp xor test mov outsb stc (bad) mov lret insl lock js sbb int rcll jp jne sbb (bad) out gs rex.WB add and pushq add ja in sbb mov (bad) ror xchg movabs mov jmpq jg mov sarb mov test sub mov (bad) xchg test xlat (bad) in lods cmp mov jno xchg insb add push cmc mov jnp out fistp add mov nopl ja fs adc ds sbb rorl mov (bad) pushq jae out fadds jns rex.XB icebp xor fwait add (bad) jmpq sub (bad) rex.WRB xchg outsb js cltd callq xchg (bad) scas sub mov mov rex.R rex.X (bad) (bad) gs and (bad) js pop mov cltd test adc mov pop xlat callq jg lock sti pushq adc (bad) cwtl pushfq shll int3 setns adc cmpsb movsl enterq (bad) adc sub sbb mov xor (bad) jle or xchg lods fild pop (bad) (bad) (bad) (bad) stos pushfq iret pop mov (bad) rcrl out rorb and popfq fs or ja cmc stc xchg out movabs or ja cltd int3 (bad) (bad) push icebp add ds mov xchg fidivrl xchg jle rex.R and jae movabs (bad) mov (bad) data16 (bad) repnz rex.WRX int movsl pop pop (bad) movsb mov jmpq fwait int leaveq (bad) scas mov sub rex.WXB repz fimull add add cmp rex.WR mov and pop mov jge mov xchg rex.WRB rex.WB outsb rex.RX lods (bad) idivb insl xlat fldl adc mov jbe (bad) (bad) sbb rex mov fsubrl mov push rex.W in xor sub fisubr scas hlt rex.XB mov sbb andb sub in mov jne callq jrcxz imul rol or or fstl mov cmc insb fidivr hlt mov lret fs mov jmp jmp stos mov cld in jo push jb je pushq (bad) xchg xchg mov je push xchg int3 (bad) (bad) (bad) or (bad) movsl xor scas mov scas test cmp rex.XB pop adc (bad) mov and imul push cmp xor stos adc xor (bad) adc std (bad) adc int3 jg mov add stos xor int3 enterq fwait repnz faddl jae scas sub mov sti xchg pushq mov jl and pop (bad) pop (bad) rclb ss cwtl sbb ss out leaveq addr32 insl rex.WRXB imul js iret rex.R pop out (bad) in xor fcmovnu pop mov jge or fcomi test adc movabs mov (bad) cmpsb out imul movsl callq or xor jns sarl idivb gs pop pushq cmpsb (bad) (bad) xchg out nop (bad) mov icebp (bad) xor jne (bad) cld sub xorl (bad) rex.RB and jmp stos enterq (bad) push fs idivl (bad) and (bad) adc outsl test pushq sahf jns jl cmc (bad) or out test mov shll or rclb mov xor mov lret imul rex.X rex.WX jb mov and xlat in rex.WX lahf mov add clc xchg int scas (bad) leaveq add xchg insl hlt enterq (bad) movabs sbb cmp mov add (bad) xor scas push cmpsl (bad) jae leaveq (bad) (bad) fs int rex.R rex.WX sbb and mov push mov fdivrl lret jg jl and retq cmp (bad) outsb or lods test pop cmp xchg (bad) addr32 es pushfq movslq (bad) (bad) sub xchg sub movabs jle xchg sbb jp pushfq movabs scas (bad) sbb in fidiv push jl test push rex.RXB jmpq ds mov (bad) sub sub xorl sub mov (bad) jg ljmp test mov rex.WX rex.RXB and pop push int3 xorl sahf in callq xchg cmp movabs add (bad) mov xor sbb (bad) rex.RX jp mov xor mov outsl movabs fidiv in xor movabs test clc push mov mov sub mov cs hlt mov cmpsb xlat cld mov mov adc std jns cld cltd lods add xchg cltd movabs mov test je push sbb test rex.WX adc jrcxz jo add push clc xor or sub sbb (bad) mov or (bad) jno insb fist int3 movslq mov fldt push lret ss pushq mov mov sbb sub jae (bad) jae mov xchg pop mov movslq (bad) (bad) lock xor add outsb or and sub xor mov movsl mov mov cwtl ja fidivrl mov popfq (bad) adc cld in xchg outsb mov mov (bad) pop test movabs movslq sub mov xorl rex.WRX movabs sub jnp ja mov movabs add rex.R or add movabs mov fs jb pop movsb movabs xor xchg popq cwtl scas imul movabs jmp sub mov xor mov xor movsl xchg je mov sbbb xor nop (bad) cmp cs lock sub push add and sbb rex.WR rex.R rex.RX rex.R sbb pushq or callq mov pop insl pop (bad) in imul add cmc mov nop or lret mov rex.WRXB mov ja rex.WRX roll divl es jne mov (bad) pushq fs movslq addr32 mov imul jg enterq adc je (bad) rex.W xchg (bad) sarb fldl popfq cwtl outsl sbb sahf push pop cmpsl outsb imul rex.W pop mov pop (bad) stos notb fcmovnb std pop js sbb (bad) mov in lods jae adc sub mov rex.R jb lret sbb hlt movsl movsb (bad) rex.WX (bad) imull scas and scas data16 repnz rex.XB lods es jns mov insb jmpq rep imul mov pop in pop push mov sarq movabs and (bad) mov sbb rex.RX fwait fs jrcxz fiadd mov rex.RX rex (bad) jne rex.WRXB xchg mov lret pop sbbl (bad) cwtl jnp pop je jrcxz rex.XB sahf test xor (bad) repz movabs sub sub xchg add rex.W mov lret pushq xchg sbb and jae movsb (bad) js (bad) mov cs insl (bad) stos repz jp jne int3 sbb stos rclb loope and cld lods mov fdivrs cmp fcoml outsl jbe sub out cltd lret loopne stos adc add (bad) lahf ljmp test (bad) xchg movsl cs stos mov pop or (bad) jg (bad) (bad) sub xchg movslq and repz jmp in enterq add pushq xchg jmpq (bad) subl test jo mov lahf xlat add outsb mov adc pushfq (bad) test pushfq movabs (bad) test rex.WRX sub jae (bad) (bad) scas pop int3 (bad) pop xor xor int push mov (bad) xor sub scas cltd iret jmpq test insl movsl xlat (bad) lret scas int adc push xor scas lret mov mov loope shrb insb mov add int mov int3 pushq mov callq punpckhwd fnsave and retq or (bad) movabs pushfq scas rex.WR jle and lret subl imul pop mov enterq pushq cmpsb js fwait cmc and pushq mov pop jns add out add adc jno in sbb cmc xchg movsb lea pop sahf (bad) xlat (bad) fnsave sbb sbb push ja xchg rex.WB stos cmp orb fisubr or sub pop (bad) sub rex.WRX rex.WB jo rex.WRB adc (bad) (bad) xor leaveq imul cld fwait fwait pop test repnz outsl (bad) sbb imul xor mov mov mov add or rex.B adc jmp push xchg cltd fstpl enterq js sub and jns rcrl cmp rex.RX lea adc pop jmp sbb enterq xlat pop mov jb jrcxz mov outsl leaveq xchg fdivs (bad) int3 fnstenv rex.R add mov scas mov lret push in pop jle jns clc pushq fbld test mov sbb lahf movsb movabs mov jno callq lock mov cmp mov repz ds mov (bad) addr32 mov insb insb mov rex.RXB out adc out cmp pop in jle or or jne cmp mov mov pop lods jne shr fist out mov lahf sbb rex.RX rex.WRB insb retq scas cli out pushfq jns jo adc sub (bad) add mov push movb jnp fdivl repz rex.WB fwait lea cmp sub (bad) (bad) mov int3 add pushq fisubr pop (bad) leaveq scas and xor mov pop movabs cmpsl xor jo fs (bad) (bad) or ds sahf jl mov rex.WX (bad) shrl lods notb rex.RX icebp loope jno orl or fstpt movabs or test rex.RX insb (bad) callq (bad) movsb hlt scas cmp fildl or fwait mov sub imul lret (bad) rex (bad) xchg (bad) fs ficom xor int jns (bad) pop push push es outsb int3 pop xor adc (bad) (bad) shl repz add (bad) out sbb mov lret in sbb sub or out callq xchg adc in cli mov test rcll test (bad) sbb rol (bad) rex.RX rex.WRX rex.WB scas adc stc rex.W cmc pop fsubl mov rex.RXB cmp xchg mov (bad) scas nop jmpq rex.WRX sub xor rex.WRX imul mov (bad) in (bad) add pushq cmp clc rex.XB fsubl (bad) sbb (bad) andb mov in jge stos movabs addr32 (bad) scas shrb xor rclb icebp js stos add jle sbb imul push in std js retq cmc xlat jrcxz cmc pop movsb fmull mov fist (bad) lretw gs cmc jns (bad) mov jb lods cmp jnp mov mov vpcmpgtw cmp rex.R (bad) movslq movabs mov (bad) rex.W rex.W sahf test pushfq mov (bad) pushq sub sbb out sbb sbb nop movsb int jns cltd adc testb (bad) cwtl adc add cmp (bad) (bad) fst (bad) or (bad) jmp stos pushq xor (bad) jrcxz xor rex.WXB rolb in test lods (bad) cmpsb int3 and jo leaveq (bad) lret movabs shrl cmp pushfq bnd repnz xor jae loope sub insb add lret jne orl int mov mov adc int3 adc jne add mov jp mov or or scas xchg (bad) (bad) rex.WRB rex.RX fs or sti in pop xchg cmp loop (bad) pushfq (bad) sti xor adc (bad) xchg cmp add jg pop mov in fldcw stos (bad) adc pop (bad) mov jmp imul pushfq jo and (bad) cmp push mov scas (bad) (bad) (bad) mov xchg xor in adc (bad) or ffree mov test rex.WR (bad) or pop mov xor cmp test mov hlt in or sbb or lea iret callq mov mov sbb mov (bad) pop cmp adc sbb xchg lretq sbb test out mov sub (bad) mov in scas iret stos xor pushfq fnop cmp vmovss outsb jg jmp scas rex.WRX rex test sub jb ds mov xchg iret mov sbb fs jb push bnd sub sbbb or insb xchg (bad) fistp mov mov jge (bad) out imul pop sub ja fbstp (bad) and rex.WX mov sbb or xchg callq jnp push (bad) or fdivrl mov sahf fxch jo js and mov pop jns (bad) jl push jbe (bad) test fstps in enterq mov (bad) (bad) imul xchg xor push test insb imul movsb jo or lret pop (bad) mov fisttpll add (bad) cwtl jns (bad) mov pushq je sbb pushfq (bad) lods jb,pt pushq decb (bad) in mov xor (bad) mov data16 push ss test test jl xchg rex.WX decb jns out (bad) add pop std sub (bad) outsb or imul inc fwait (bad) jo cmp and adc sub or xchg xlat pop pushfq test sarb adc jle pushq cld lahf int3 test (bad) cmp in movabs and add mov (bad) cs (bad) mov insb insb scas jo or lahf cwtl enterq fisubl rex.W test iret rex.X in int3 xor loop xchg in mov fbld sarb mov cld leaveq outsl rex.WRB and (bad) sti out ja push fsts (bad) mov or (bad) or stos (bad) adc or rex.XB (bad) xor fsubrs xchg sbb movabs movabs jrcxz push (bad) adc push sub sti in cs jl cmpsb (bad) scas movsl cmc movabs fsubl neg (bad) lods rex.WX jo callq enterq (bad) cmc jg pop in stos enterq sahf insb test pushq scas ficom test rcrl pushq xor or fwait sub lods (bad) (bad) enterq pushfq jno lahf in pushq pop cs (bad) mov (bad) shlb in insb fist lods std scas repnz (bad) adc js int3 (bad) push jae (bad) rex.WXB jbe loope andl (bad) mov ds mov lods sub xor stc movsl or jmpq jbe fcomps mov ja sub rex mov movsb (bad) movabs pushq (bad) cltd stos outsb (bad) xor rcll movabs (bad) xchg pop (bad) test xor es pop mov jae xor clc (bad) sbb cwtl fidivr (bad) xor movabs push jno pop xlat jbe sub js sub mov cwtl cmpsl (bad) pushfq outsl xchg cmpsb pop (bad) lret mov outsb cmp push (bad) in cmpsb rep add sub xchg test sahf fwait mov out add pushq popfq data16 retq flds stos ja leaveq cwtl (bad) rex.WRX sub lods icebp pushfq mov rex.WX movsb rex.WRX insl (bad) out lock in mov mov incb out popfq adc fdivl pop or rex.XB pop mov cmp roll (bad) mov in rex.WXB jb sbb mov jne ds outsb flds xchg movabs or movabs rex.WRXB cli (bad) rex.WXB jbe (bad) in (bad) cmp shll leaveq sub push mov or fimul add test xor repnz in jp pop rex.WRB or fwait (bad) rex.XB or out xor popfq xchg popfq or xchg ds mull lods imul adc add jo (bad) rex.R cld jns (bad) jnp movabs imul sub shrl pushq cmp movslq testb out adcl cmpsl cmp sar loop lret (bad) and mov addr32 sub pushfq test enterq mov mov mov or mov movabs mov xchg popfq adc in mov mov adc sub sub shll sbb mov rol outsl jnp movb data16 xchg movabs (bad) cmp jrcxz pop (bad) sbb cmp out jrcxz or (bad) sub jno rex movabs imul sahf push rex.WR xor (bad) popfq add mov out rex.W loopne and mov and or cltd sarb cmc sub mov sbb (bad) cld mov mov scas cmp pop in (bad) in and gs je jp sbb sub (bad) xor xor mov xor add in stc sahf out sbb enterq (bad) jnp cmp jae cwtl stos (bad) pop movsb mov mov cwtl xor jrcxz fwait mov ffreep cwtl rorb out rex.X insl rex.B je imul push jmpq (bad) mov (bad) cs mov pop (bad) scas (bad) icebp and cltd add sbb jmpq jge xlat adc popfq cwtl jno rex.W xlat insl scas loope sub je cmp ss (bad) add push or in mov (bad) adc jrcxz testb mov jo mov rex.WB sub (bad) (bad) cmc mov mov (bad) es jne add sub cmpsl sbb (bad) lods sub mov (bad) lea scas in (bad) movsb add jne movabs sbb cmc (bad) lea movabs and (bad) out in xor (bad) rex sub sahf sbb add mov insb (bad) js addr32 lods push xchg mov lret pop mov callq mov js sbb jmpq int3 movsl js jne xor enterq pop enterq lahf adc (bad) (bad) adc rex.WRXB (bad) movslq roll sbbb hlt outsl xchg nop jmpq xor mov imul es out insl leaveq sbb ja movsb jrcxz lods leaveq add (bad) test (bad) imul out (bad) sub rex.WR add fucomp ja rex.WXB (bad) add (bad) mov fnop pushq jo add cmpsl (bad) or mov xor rclb (bad) in (bad) icebp subl negb fdivr imul test mov adc add mov mov push jno cld jae jne int3 xchg fstp mov xchg or outsb pushfq sub xor mov (bad) icebp or sbb cmpsb and pushq movslq test cwtl (bad) (bad) icebp lods (bad) js add rex.WRX xor stos rex.WXB (bad) xor test rex.W (bad) stos xchg mov xor lods or sub rex.XB rex.WRX xor sbbl in stos add and int3 and fs test int3 (bad) sbb sub (bad) lahf add mov test scas (bad) sub and xchg mov insb rex.WB xor adc jmpq clc lret ffreep divl subl sbb (bad) and rex.RB stc (bad) (bad) xor (bad) sub out jge xor shll repz mov and mov mov movsl lock jge mov movsl int mov xor push sahf loopne,pt (bad) mov callq cmp jnp rex.XB xlat scas rep xor push cmpsb mov mov scas mov and mov fs mov adc ss scas push ja mov leaveq jp popfq xlat data16 outsb (bad) rex.W ss add jo sbb mov jrcxz adc mov adc rex.RXB or out xchg push sub out outsl rex.XB movabs ss and insl out scas imul add lods xchg or push pop cmpsb fistpl cmc add test sarl test (bad) mov or rex.B rcrl cltd (bad) fist and popfq rcrb movsl (bad) cmp movabs rex.WR xor scas mov pop stos and je adc pop stos mov (bad) mov hlt sub add mov int3 pop pop and cmp adc pop (bad) rex insb loope out sub movslq dec xor add nop (bad) rex.WRXB (bad) movabs (bad) add rex.W js callq jl clc mov cmp jo and and and jae pushq lods xlat out (bad) hlt (bad) mov (bad) and (bad) pop addr32 (bad) pop lahf fisttp mov shrb cmp test jrcxz pop (bad) lret mov pushfq lret fwait jnp sbb push shrb scas cmpsb cld (bad) mulb imul mov rex.XB xor movsl nop lea (bad) pop (bad) adc jp xchg sub pop rex.WB add rex.X pop loop mov jns iret (bad) outsl rex.WRXB js pushq rex.WRX hlt (bad) mov mov (bad) (bad) xchg sub add sub sbb (bad) sub adc stos (bad) scas xor push rex.RB mov imul mov orb int3 gs push or mov int lods xchg sbbl mov fwait popfq or or popfq mov mov stc pop or test je stos xor movsl stos rorl lods mov pop mov in lahf pushq pushfq mov (bad) (bad) jge sbb stos sbb (bad) jmpq pushfq add data16 int3 callq adc out rex.B mov sub jbe rex adc add fs ja cli adc in movsl xchg mov cltd sti sub rex.RXB sahf lock mov fild cmp mov mov rex (bad) (bad) (bad) jns std sti scas adc lods (bad) (bad) scas orl addr32 pop out lods xacquire jg mov rex.WB rex.WRX cltd jb fist add pushq imul ja mov (bad) lahf movsb jnp (bad) jl js int3 iret hlt iret mov iret loope sbb jae mov (bad) and fwait (bad) mov shr rex.RX mov rex.WRX cmpsb pop (bad) subb cs xchg (bad) jb xor movsl popfq nop test add in (bad) data16 xchg outsl pop add mov iret test (bad) jne push retq xor jno fildl mov or fs shll retq sub cltd rex.WX jmpq push (bad) rcrb (bad) ja jne mulb int3 loope add es mov rex.R movslq imul test adc jge outsb cmp out imul in (bad) fldt iret rex hlt outsb sbb xor callq outsb (bad) rclb mov or (bad) popfq cmpl out or pushfq adc (bad) mov movabs or pushq fild mov rex.WR cmp mov stos jge (bad) cmp fcomps mov mov add (bad) (bad) rex.WRX mov mov out jp adc stos adc (bad) fnstsw lret movabs out mov (bad) outsb repz and retq jno popfq sbb xor sbb cmp (bad) (bad) scas (bad) mov pushfq jne (bad) rex.WRX mov insl add mov rex.WR js test movsb xchg (bad) cmp rex fs (bad) xor mov rex.WR adc std (bad) retq faddp rex.WB rex.WX adc rex.WRB movabs (bad) mov or rex.WRB (bad) je sbb es ja icebp stos (bad) fcomi mov movsb push mov sbb xor clc mov (bad) xor pushfq and xchg (bad) (bad) test xor adc callq sub cld mov icebp (bad) (bad) lahf jmpq (bad) mov lret or add push test movabs out xor fbstp mov mov movsl (bad) cmpsl test imulb fnstsw xchg cmp (bad) (bad) leaveq sub mov pushfq (bad) adc mov rex.WRXB jb lret mov movl sub cwtd mov sub push (bad) movslq retq sahf sbb fwait mov sub adc retq (bad) lock imul (bad) and sbb in pop and sbb ss (bad) es std mov lods jns cwtl sahf js rex.RXB (bad) psubd jno callq sbb movsb push imulb pushq rex in (bad) pop pop imul rex.WRX pop mov sbb xor outsl or in fwait pop pop mov pushfq leaveq jle ss xchg (bad) add or adc pop js mov jns sub pop push loop adc (bad) mov imul pop es pop pushfq push in sub clc rex.WX mov rcll mov out cmpsb cld jbe addr32 mov pop movsl jmpq movabs rex.WR sub adc loop scas in callq mov in scas (bad) fcompl callq pushfq xor mov cmp cltd je in fsubs insl retq movabs mov lea fstps cmp rex.WR rex.WRB rex.WX in (bad) rex.R rex.RB push (bad) lock sar insb sbb in insl nop (bad) sub xlat loop and (bad) and imul in xor mov fmull rex.WRXB add sbb and sub jbe imul (bad) mov out xor ss pop jle es ja mov jmp (bad) and repnz xor mov rex.WR sbb cmp cli (bad) (bad) rclb (bad) loope (bad) ja or (bad) lret (bad) ja (bad) mov jp pop sbb lea rex.R clc enterq insl jne (bad) fiaddl cmc jp mov iret mov cmp jo leaveq fwait repnz test jl add in std outsb (bad) jne fcomps retq lret (bad) push or sti (bad) sbb mov insb in in retq cmp retq incb jle cld movslq pop insb movsb stos xor push std (bad) testl lods mov scas sbb insl (bad) lea rex.WX or pop xchg jne je rex.X rex.RX (bad) xor je mov retq sub (bad) cmp sub jl (bad) fs pop add (bad) pushfq mov stos cltd in cmpsb mov cmpsl (bad) pushq xor xchg (bad) outsb test push cmc and (bad) jb jp out or xor and (bad) es rex.WRXB (bad) push cmp mov jnp jbe (bad) xor insl and rex.WRX adc xchg (bad) std xchg popfq pop ja (bad) sbb icebp mov movslq jmpq mov sub movslq xor lods insb data16 pop out (bad) jne xor fisttpl (bad) or rex.RX jnp (bad) pushq add (bad) jbe (bad) xor add jmpq notl cmp lods sahf rex.WX test icebp sbb jnp fisttpll mov jns xchg (bad) push (bad) cmp shll (bad) mov mov addr32 jl xor (bad) mov mov (bad) (bad) test movsl mov movsb fadd imul (bad) fstl pop int3 leaveq lea fidivl mov out and test in cltd adc mov int3 pop xchg jo sub pop lret lret adc add scas (bad) mov mov (bad) add sub cmp jl std leaveq cmpsb rcrb addr32 mov (bad) ds and or mov add and push scas insb mov fwait out (bad) cli sub push sarb lods mov sahf xor pop outsb pushfq jge cmp adc movabs xor pushq or add xlat imul (bad) (bad) cmp fldt int pushfq cli rcll pop movabs sub sbb jbe mov (bad) test je loopne rex.WRX pop fnsave leaveq cmp fidivrl movl jbe mov (bad) ja movsl movslq imul (bad) addr32 xchg mov (bad) xor rex.RB rex.WXB out (bad) cld sbbb out lahf mov xchg push (bad) pop int fwait je pushq (bad) js (bad) rex.WRXB pop pushq rex.W rex.XB sbb fs fwait lods push (bad) rex.WR (bad) adc (bad) and and add scas push pop (bad) xlat (bad) mov mov adc rex.WRB (bad) pushfq push (bad) je movabs (bad) mov (bad) stos jnp (bad) jns retq pop imul xchg mov js pop fcoms jg mov js pop jmp xor leaveq jnp out jnp (bad) mov or jne push (bad) adc rorl mov or lahf (bad) rex.RB stc and lock insl lret rex jo cmp rex.RXB rex.RX push pop faddl sbb (bad) insb xadd out pushfq xchg (bad) fmull (bad) mov (bad) (bad) fidivrl icebp jne fdivs sahf xlat movsl add (bad) xlat rex.WX cld nop mov lock (bad) sbb mov test rcpps fdiv js or rex.R ss rcrl (bad) pop insb mov jge sub adc lret sahf mov (bad) sbb sub sub mov mov xor xchg in lods add jns cmc rolb pop fildl mov js jmpq rex.WRX js data16 loopne rcl stos add sbb pop mov (bad) (bad) push pop add lock mov sub leaveq cwtl sbb in jmp (bad) out movabs jmp sbb sub xor rex.WB ja hlt and pushq (bad) fs std push (bad) (bad) mov push pop std movsb outsb movslq cmp (bad) jae pop add cmp adc adc xor pop (bad) sub rex.RXB leaveq in ds hlt sbb (bad) icebp push sahf addl sbb sbb sbb mov and sahf xor (bad) jge add fprem1 mov add jl sub mov out insl and xor lea ds movabs rex.XB imul cmc mov loop stos xor rex.WR test mov pop test lret int3 repz scas xor (bad) pop enterq mov ds rep rex.X cltd sbbq xchg rex.WXB pushq (bad) pop rex.RX or push rex.B rex.WRX bnd lret mov insb (bad) (bad) imul jmpq pop adc fimull sbb mov std push xchg rex.WRXB push out je fnstenv and jb xchg in mov outsl scas int sbb adc pushq cmp rex.WX cmpl (bad) sbb (bad) rex.WXB (bad) (bad) xchg iret data16 adc idivb (bad) rex.R shrb scas (bad) test in jrcxz (bad) ja movabs rex.WRXB xchg sti cmc addr32 iret mov lock out addl adc pushfq add cmp (bad) pop rex.WX rex.RX xchg sub xor mov movslq or in fistpll movabs (bad) (bad) lods jns sub mov (bad) mulb movsl (bad) scas (bad) and and (bad) mov xor cmpsl sbb or test andl mov pushq mov repz add addl (bad) adc cmp stos jle movabs add jbe int ror mov xlat and mov cmp adc mov fcoml (bad) ja or and pop sub insl sub (bad) jns sub out cs in sub rex.X (bad) adc test jo (bad) lret shl mov add mov sub mov push add stos mov js rex.W lret scas (bad) pop (bad) test in mov shrl mov jns insb out lahf mov rex.W xor sub rol pop (bad) rcl pop sub xchg mov scas (bad) (bad) mov test pop sub sub mov (bad) fidivr lock cmpsl jns lcall fbstp mov cmpsl fnstenv cmp adc imul xchg movabs mov or sti je mov (bad) jb cltd insb shrl sub scas sahf pushq pushq (bad) mov mov rex.WXB mov (bad) xchg sub mov mov jmpq sbb mov sti out (bad) mov adc callq (bad) or movsb rex.WX stc lret add sarb lahf sub addr32 in rex.WX out int3 (bad) orb imul int3 rex.RX stos retq lods movabs jns add (bad) sbbl stos hlt in pop mov sub (bad) adc pop rex.W fwait testb adc mov (bad) jbe and sbb data16 (bad) fsubrl (bad) movsl jne jmp shlb mov xlat sub xchg jbe push retq cwtl movabs outsl cmp test js lcall cmp push (bad) ja test adc mov subl loop (bad) jrcxz jle mov jnp mov pop sahf outsb sbb in pop insb adc push fucomi pop movabs xchg movsl pop jrcxz mov (bad) sbb lret loop rex.RB icebp jnp in (bad) jno nopl sub imul or data16 movabs (bad) or shr imul je sbb (bad) stos (bad) sbb mov xor rcl iret (bad) (bad) mov pop sbb xor pushq rex.RXB movabs icebp rex.WX (bad) iret mov cmp flds enterq retq enterq movabs shr rex.WR rex.XB adc (bad) (bad) sub sti mov rex.WRX pop ss pop fisubr or icebp cmp stos jne (bad) enterq cmp rex.RX (bad) (bad) adc cwtl xchg sub std cmc mov insb cld xchg adc sbb (bad) pushfq adc clc fdivrs jb mov adc sbb (bad) (bad) and xchg (bad) sub mov xor or cmc xor (bad) rex.WR movslq in rex.WB int adc mov pop fmull add rex.R mov mov push pushq fist rex.B (bad) mov outsb imul int sbb int callq out mov lock fsubs es je (bad) fbstp int3 sub cwtl xchg pushfq jmp loopne mov mov movabs add vdivss rex.WRB (bad) (bad) pop imul mov sbb pop movsb xchg (bad) jo (bad) mov mov rorb mov (bad) mov add (bad) mov jno pop outsl rcrl insb ja sub add xchg sbb mov rex.WX jnp (bad) (bad) mov lods cmp (bad) mov jns mov mov rex.WXB fwait leaveq movsb (bad) imul ds (bad) jae push sahf add fildll pop push sti xor rex.RB popfq jl jp ja adc adc out or mov imul push in imul sub (bad) sbb (bad) add (bad) jnp (bad) jns sub insb lahf fwait out cmp adc push rex fsubl mov sbb lods adc out js movl sbb movslq ficompl xchg mov pushq out lahf (bad) cmp (bad) insl movsb mov xchg callq in mov (bad) mov jmpq ror movabs jo xor insb rex.WXB jno jb push jbe or retq sti out fwait sbb jl (bad) add test jne jg cmp pushq int3 pushq and (bad) mov xchg rex pop xchg lock nop mov sub (bad) iret adc rex.W jp insl mov jns fnstsw mov xor xlat or (bad) cmc (bad) nop rex.W movabs add clc sbb (bad) mov sbb (bad) nop (bad) cwtl int sub iret out jno out addr32 sub outsb hlt and jp sbb mov xor push (bad) adc sub adc stos and jp movsb repz xor in (bad) insl retq xor jno sub retq pushq and outsl (bad) shrl adcl loop test cmc pushq (bad) xchg (bad) push jbe (bad) and jo mov xor jge enterq (bad) sbb jne cltd movsl (bad) adc pop add test (bad) int3 jbe retq (bad) (bad) je mov lahf ja mov cli add fdivs clc xorl ds (bad) es mov imul enterq out jl mov xchg add or pop cltd mov xor int lods movabs scas push lods int scas out sub (bad) (bad) mov adc jb cltd jne xchg rex.WR lret add rex.RB lahf adc int (bad) in and (bad) jns js mov (bad) fistpll enterq fstp rex.R fwait pop mov pop clc movb lods sub int insl xlat out pushq shll in or xlat out and fldl in (bad) mov insb (bad) jmp pushfq rex.X push stc popfq xor retq pop cmc stos test xor mov lods pop scas in or mov iret jp (bad) xchg in test divb cmc pushfq ss int3 sub jo jns mov (bad) and or repnz out cltd push pushq xchg mov icebp scas scas shrl pushfq int3 movabs mov rex.WRB fwait mov int sub xorl (bad) pushq jne in adc mov lods xchg test jno add test leaveq cmc adc xchg adc fwait cli adc fldt push add test xchg cmp (bad) rex.WR fwait or scas or sub sbb movabs sahf mov movslq sbb sbb rex.R rex.R rex.XB jmp (bad) out (bad) sub mov (bad) fwait rex.X out mov xchg mov or js cmp push lea test adc lea rex.RXB rex.XB pushfq loope ficom cmpsb mov or adc stc fwait jb enterq cmp (bad) mov mov (bad) fxch and lods (bad) sub (bad) (bad) repz or xor in pop xlat jp (bad) fucomip lret stc cmp shll data16 std (bad) add jp sahf out ds ds xor fmul jb mov (bad) (bad) (bad) xchg out mov jns sti add mov add (bad) push rex.WX push add xchg iret cmc (bad) (bad) push push add rex.WB (bad) adc out cwtl rex.WRX jno test (bad) (bad) and pushq sbb mov xchg jge dec jns xor jg mov jl test test callq or mov pushfq scas (bad) (bad) rex.WRXB pop sahf shll (bad) insb adc (bad) mov divl cs jne movabs pushq sbb rex.WB movabs and jg cmp (bad) enterq fwait movabs cltd lods int3 and jno mov pushq pushfq or adc lahf cltd movsb push rex.RX adc hlt pop callq fsubrs gs and and jbe cmpsb xchg sbb push sarb rcl js sahf movsl mov outsl xchg push rex.RX scas popfq ja test fs fadds test mov or nop notl rex.WR retq mov jbe in scas sbb and rex.XB fsubr push pushq movabs cltd movabs (bad) push sub insb fcomps cmp add and movabs jo (bad) cmpsb mov mov insl jne (bad) mov sub movsl xadd rex.W imul or mov orl sti fisubrl in (bad) out repz cmc rex.WRXB jrcxz (bad) pop pop push icebp sub fnstsw mov jno cs in int3 mov mov movabs mov sub test adc or xorl mov adc cltd xchg push (bad) (bad) adc xchg int3 (bad) mov pop stos mov mov or addr32 jbe int3 jno jnp mov lock mov adc jns adc xor lahf (bad) insl movsb cmp add rcrb (bad) sbb lret cwtl xor mov movabs (bad) (bad) sub loop callq (bad) mov or outsb int3 je jp sub enterq js ja pushq mov jbe mov cltd cli outsb add pop (bad) push lods rclb stos lods (bad) mov callq cmp push imulb lret decb stc add (bad) cld popfq lret stc frstor mov jp pop pushfq test mov in fildl insl (bad) leaveq jns (bad) shlb outsl rex.WRB fwait (bad) pop (bad) lods cld (bad) (bad) pushq js or add test mov in (bad) mov fnsetpm(287 fadd (bad) jae cs xchg pushfq (bad) fidivrl stos (bad) std sbb (bad) in (bad) jo subl rorl test loopne adc adc adc lret (bad) mov test mov jbe es or sbb jbe jl cmc movslq sbb adc jo mov xor cmpsl addr32 mov out (bad) movabs ja popfq jae out fisubrl xchg or push sub mov mov sbb jns xchg cmpsl xchg pushq (bad) iret shr imul fnstcw mov pop js jns xchg push mov js data16 movsl push add mov (bad) mov xchg mov cmc and push (bad) int adc xchg std mov in pushq (bad) xor (bad) (bad) pop mov movsl js mov pushq subb rex.RXB outsb rex.WR push retq rex jrcxz lahf (bad) fimul stos hlt jns sub jns pop shrb js int ficompl mov sbb rex.RXB repnz (bad) xchg enterq (bad) mov mov insl xor pushq fwait lods js mov mov xor jo test ss out cmp mov jns jb (bad) xor xchg lods (bad) jns pop mov (bad) jno es repnz out repz lea mov adc repz xchg je repnz sti jle jno mov repnz (bad) jp rex.R icebp adc mov sahf xchg or xlat je mov and jp pop xchg ss je lock (bad) xor (bad) (bad) jo jo je rex.WRX es divl out mov cwtl enterq jmpq and movsb je in imul sbb enterq jp sub cmp mov and pop pop mov rex.RXB and xor int (bad) sahf mov callq add jp adc retq cld jge cmpl test and sti in (bad) sub out iret and std cmp add add and (bad) jne push movsb leaveq fs loope cmp scas add ja adc (bad) mov sub lahf rex.WR cwtl and insb addr32 (bad) test jl xor jrcxz test push mov (bad) rex.WRXB movsb mov outsl xor fwait js pop fdivr fs jb int int insl popfq movabs cltd (bad) pop xlat adc jmpq mov retq lock adc jno mov mov stos or cmp mov cmovnp rex.WRX js out mov in pop out leaveq sub (bad) pop mov or adc jp sub add (bad) jo hlt and jl mov (bad) lods jo stos cmpl outsl movslq or popfq rex.RX mov xchg adc imul pop rex.W imul callq mov imul rex.XB div pop andl lods imulb in int (bad) xor popfq jmpq or jle xor cld vminps mov sbb cltd jg fildll (bad) jle iret loop xchg mov lods jle sub sbb sbb mov sub insl xchg pushfq cltd jne,pt in callq rex.W mov imul add adc pushq or cld stc adc or (bad) xor fwait pop lods jo test adc lea (bad) imul cmp sub pushfq xor (bad) outsl and test jbe mov lea mov mov insb gs loope adc (bad) in int xor sub jl stos (bad) callq icebp leaveq (bad) cltd test movq fsub ffreep (bad) idivl and or cwtl (bad) jnp mov test pop pushq rex.WX fwait cmpsl add xchg mov mov sti (bad) mov std sarb cli out or pop (bad) add and pop mov rex.RX jg rex.WRB mov iret adc adc cmp xor sbb loopne mov and fcom jp retq jp fdivl test fiadd int3 scas js mov jae sahf (bad) jp (bad) (bad) add mov test add sub jns je scas cmpsl js je rex.WB mov adc stos sbb rolb ss xchg in imul mov mov sub pop outsb pop scas cmp mov rex.WXB cwtl insl or rcrl jno xor (bad) cmpsl add adc in fdivs cmp in sbb sub cmpsl jle rex.R rex.WRXB mov mov rex.WB lahf sub (bad) (bad) adc int3 mov out mov mov sahf sti negb pop cwtl (bad) popfq int3 mov push sbb or adc movsl and mov es sub adc mov je cld (bad) sub enterq std and es scas mov rex.WRB and rorl (bad) rex.WRB mov rex.WB pop movabs lods rex.WRB mov (bad) jo add xor cmp xor cwtl je insl ficompl xor jg push rex.WR rex.WR xor rex.WXB callq jl mov lret push cwtl pushfq adc or pop and in fsubl pushfq je xchg rex.WRB repz popfq rex.WR jb (bad) xor pop mov leaveq fs pushfq rex.RXB cs fwait sub cmp xchg xor mov int scas and mov iret mov or mov (bad) jae iret pop out cmpsl jle popfq mov outsl adc ja (bad) hlt (bad) (bad) shr (bad) pushfq cs in jno rex.WB pop push sub pushfq in lret cmc iret je or (bad) fnstsw adc mov retq (bad) mov jrcxz fsubrl adc jbe jnp mov adcl gs in callq adc mov and out (bad) jbe and (bad) push fwait rex.WB lods cmpsl int3 (bad) jns (bad) ss add (bad) insl jle mov data16 lods out int3 and pop lahf xchg mov rex.WR (bad) in notl ror pushq std test cmpsb add (bad) scas adc (bad) (bad) mov mov xlat lea and jae push (bad) data16 leaveq test lods (bad) cmc pushq sbb test adc mov cmp loopne xor mov mov test sbb mov lahf out div fsubrp rex.W rex.WRX lret loop negb (bad) mov jp rex.R cmpsl cli add fiadd sahf mov sar nop retq leaveq iret imul push lea mov nop jp (bad) ja sbb jge lret jle mov mov xchg adc rex.R repz jbe xlat or mov lret add int3 mov repnz test stos rex.XB movabs lahf iret or (bad) rex.RXB (bad) pop (bad) std movsl adc pop rex.W sbb jp pushq push lock rex.W scas callq mov add xchg shr add retq loope sarb jmpq rex.WR push pushfq test outsb faddl gs jle enterq mov mov (bad) movsb pop int3 (bad) fidivrl jne (bad) movabs movabs notl mov insl ja mov add movabs sub xchg cmp (bad) ja xchg movabs cmp adc and test xchg ss stc cmc adc repz xchg or mov mov fstpl jg push stos rex.WB jne lods hlt ss fimul outsb sahf mov test jmp repz sbb out out enterq cli (bad) (bad) popfq (bad) (bad) out imul js hlt mov mov jrcxz mov jnp xchg movabs int3 cmc movslq sub rex.XB cmp mov (bad) rex.RX stos xor pop sahf xor rex.R sub fprem1 sub stc out rolb ror (bad) pop icebp xlat mov or jrcxz xchg pop (bad) cmpsb (bad) sub insb iret sub addl cld adc mov xchg sbb or test hlt and mov mov rex.WRB (bad) retq cmp or leaveq addr32 sbb (bad) mov in (bad) fwait xor jmp scas (bad) test movabs out imul add (bad) jnp (bad) xor or cli int mov xchg (bad) cltd rex.WX ds iret insl mov rex.R jae addl hlt clc (bad) sbb sub or retq (bad) xchg pushq mov leaveq or sbb fsubr mov mov mov lock mov add push pop movabs jmp pushq jl lret sarb push sub (bad) jnp sub (bad) test rex.WRXB rex.WB rex.R add pop or (bad) movsb test adc gs (bad) sti addr32 jle mov rex.WRX and imul (bad) and xor movabs hlt mov (bad) (bad) popfq insb nop lret lock jg int gs mov jno cltd adc fwait (bad) mov mov callq outsl xor shlb callq jle or outsb mov adc cmp and xor sbb (bad) (bad) or rex.WXB (bad) out rex.WR adc jo push xchg xchg jbe cs cld (bad) out sbb jrcxz xchg sbb int3 (bad) data16 movsl adc rex.WB rex.B loopne frndint add mov frstor xchg pushq popfq push (bad) rex.W lret jns sbb scas test mov rolb movabs jle mov sbbl lock out mov rorl xorl xor movabs mov jno (bad) mov xchg stos (bad) rex.R (bad) lock (bad) xor cli sub ja shrb out repnz (bad) rcr cld callq (bad) mov and jbe in mov fs fidiv or or add push lock jns (bad) (bad) xor (bad) mov mov mov rex.WXB pushfq adc pop stos push sub std subl movabs add mov pop mov xchg leaveq cwtl (bad) fcompp lret mov and loopne xchg frstor adc fsubl cmp add movabs enterq fwait rex.RB pop xor imul mov xor roll repnz repnz loopne (bad) xor out jnp mov or pop xchg cmp cltd jbe jns push sbb out xor cmpsb jns (bad) jge ss lret (bad) (bad) xlat neg mov cmpsl cmpsb (bad) and mov divl cmp sti sbb mov pushfq (bad) mov jne rcll out nop xchg mov rex.W push mov imul (bad) es clc mov sub add xlat clc pushfq int3 jne xor (bad) cmp add ficomp pop xor adc movabs jle (bad) ljmp fwait adc in rex.WRXB negl movabs outsb (bad) or push outsb test rex.X rex.R imul movabs int cwtl int3 pop (bad) sbb and sbb jge mov test fmul mov sahf xchg sahf (bad) cmp rex.WRX mov jbe mov xor cwtl rex.RB mov adc fmul and pop mov lahf add rex.WB es (bad) add sbb xlat in test push mov mov (bad) loop (bad) (bad) xchg cmp (bad) cmp cmp rex.WR add roll mov int3 mov xchg mov movabs (bad) jne rex.W movsb ja sahf out mov rex.WX (bad) adc push fnstsw (bad) push cld enterq mov retq rex.RXB je cmpsl adc jno (bad) rex.RX mov fnstsw rcrl xchg movabs mov movabs and lret movabs nop xor (bad) push hlt adc in xor mov xor pop xor es ja rex.WX es outsb sti mov icebp outsb or (bad) in push mov rex.XB push mov pop movsb lock and enterq (bad) or sahf stc (bad) jnp jo mov (bad) lret insl movsb pop mov in scas shrb mov sub mov pop pushfq rex.RX jo or xchg add hlt add insb jns (bad) fnstenv jle loopne or add ja int3 add xchg pop mov incb (bad) (bad) xchg (bad) mov je cs mov fisub mov insb pop sub (bad) sbb mov std ss fnstenv cs (bad) cld (bad) xchg jl xor xor insb add jb adc (bad) test push subb int3 mov movabs jo movaps jmp sub jbe rorb cwtl psubd adc adc adc rex.WRXB rex.RXB mov add push push loopne test add (bad) cmpsl imul scas in rex.WX jne xchg jmp and cltd (bad) push int3 movsb mov add (bad) (bad) (bad) cmp sbb mov (bad) add cmp pop cmp cmpsb rex je (bad) adc xor and loopne nop insb test (bad) mov xlat rex.WR scas lods fsubrl add jle xor adc mov out out imulb xchg xor mov mov (bad) pushq rex.XB scas mov in test shr out (bad) subl ja pushfq (bad) pushfq cmp sbb sahf cwtl (bad) mov enterq (bad) outsl mov cltd addr32 sub js fisubl (bad) outsb xor pop jno jns jle sbb xor sahf add es pushq xchg je adc rclb fimul js stc int3 push mov cli imul out loop jb cmp (bad) cmc mov pop cs loopne and sub add mov in retq xchg fisub leaveq cwtl hlt sub movabs fstpl test mov cmpsb pushq in andb or in in mov sub mov adc add outsl mov int3 test (bad) (bad) ss (bad) jbe lea lock rex.WX ss mov mov test fistpl sub (bad) es (bad) xor jb (bad) xor fidivrl rclb mov (bad) pushq cmp (bad) (bad) test scas (bad) (bad) (bad) ficoml (bad) data16 test add mov rex.W iret sahf (bad) stc movabs callq push xchg mov add sahf (bad) test insb insb js (bad) (bad) jrcxz stos cld adc xchg xchg sub insb mov (bad) lret (bad) or sti out mov add movslq mov (bad) test cmp int mov fistp mov add test jne in adc jns fbld jb pushfq andl sub sbb rcll add jle (bad) stos cld mov lock (bad) jbe movsb or outsl (bad) mov jae rex.WXB and in rex.B push test test rex.RB outsb popfq shlb or sub (bad) sbb push (bad) enterq xchg test pushq mov xor je movsl pushq pushfq cld (bad) (bad) fisubr and jns (bad) lods and jne rex.XB scas fsubrs movabs (bad) cwtl pop cli (bad) sbb xorl in xchg jns clc xor (bad) mov mov add jnp rolb rex.XB mov shll callq (bad) rex.RX cld (bad) jo scas fidiv out (bad) pop sub in cmp (bad) (bad) (bad) push cld sub cli (bad) iret stos (bad) (bad) pushfq movsl pushq mov rex.W test enterq xchg (bad) rex.WR push sahf in cmp or mov insl enterq add mov push (bad) out (bad) int shrb movabs adc (bad) mov addr32 sub (bad) (bad) pop (bad) mov and mov insl pop sub push xor in (bad) mov movslq pop retq test xor ds int test cmp outsl pop cmp pushfq sbb jrcxz lock mov push es cltd jnp shll imul mov retq pop rex.RB rex.RX stc xchg cli xchg or retq sub fsubrl xchg out scas (bad) cltd (bad) movabs hlt (bad) pop push jbe js lods (bad) (bad) adc adc lods cmp or imul cld rex.RX (bad) or mov popfq hlt push pop mov pop mov int3 data16 fstp push jo cltd shr and (bad) lock add (bad) imul adc movabs mov mov or cltd jne out cmpsb movsl lock (bad) movabs fstpt (bad) (bad) cmc iret repz rex.R sub rex.R ss lret out add (bad) xchg sub sbb (bad) movabs out loop imul test xchg std adc rex.WX add imul test (bad) (bad) and clc xchg jns xlat scas adc sbb xor cmp rex.R cmp rolb rex.B mov jo xchg sub mov lods and sub in test cmp mov in imul xor rex.WRX (bad) pop lahf jno lea cwtl and xor push mov movabs mov iret jnp iret movsl rex.WB push movsl mov mov rex.B cs mov addr32 int3 (bad) rcr ja pop mov cmp rex.WXB movsb cwtl rex.RX jae cmpl push and movsb mov jl add xchg adc or cld mov fcoml pushq xor adc insb js fs (bad) mov movsl xor pushfq movabs add movsb jrcxz lock sub mov jns rcll cmpsb insl xor mov xchg mov mov and mov stc in (bad) outsl leaveq (bad) push ds fwait (bad) xlat sbb (bad) cmpsl movabs adc jmpq add (bad) pop (bad) cmc int3 imul rex.RB pop js jp (bad) movabs (bad) (bad) jle and shll mov (bad) stos leaveq (bad) sub cmpsb cli insl (bad) cs fwait out iret (bad) fs jle adc cs rex.WR jno adc xor xor or jo add pop xchg js pop subl add or cmp cld adc xchg test ss callq mov sub test test scas fiaddl xor int3 movabs rex.WRB iret sbb adc test popfq (bad) retq pushq jl push xchg add mov adc jmpq and (bad) pop popfq cmpsb sub fwait mov shrb pushq movabs sub pushfq es imul in add xchg (bad) jrcxz xchg fsubl (bad) rex.WB mov rex.RB jo (bad) (bad) pop adc fidivrl shrl jne fiadd rex.WB rex.WR rex.WR clc cmp scas (bad) out (bad) (bad) pushq rex.RX fsubrl cmc sarl jl movslq xchg mov rex.WR iret jo in pop imul movabs scas sub insb (bad) stos out movabs (bad) rex.WR rex.WRB movsl rex (bad) loope xchg movabs js pushfq rex.R cmp insl lods xor fdivrp (bad) (bad) jle sub (bad) clc (bad) (bad) insb sub pop sahf cmp sub test repz rex.R data16 rex (bad) rex.WRX mov push mov or fs jne mov callq mov xchg test enterq jp cmp stos cmc rex.XB out mov in (bad) rex.WX (bad) sbb movsb add pushfq xchg stos xor or jge stos mov pushq cltd retq xor or (bad) movslq adc jbe adc (bad) lret imul and mov cmp repz jrcxz mov mov xchg adc stos lea (bad) (bad) xor rcll std and rex.XB sahf and lods cmp loope cmp (bad) adc pop jo (bad) or and mov movsl sub mov movabs adc pushfq insb (bad) mov sbb xchg in movabs clc (bad) (bad) js lret adc (bad) jb insl rex.WRB sar xchg je test adc sub movsl int (bad) mov mov push pushq int je xor addr32 adc rol scas add (bad) insl sub xor movsl jmp (bad) cmp xor or xchg (bad) mov mov rex.R (bad) mov jne sahf xchg outsl sbb jg movabs fwait je cmc mov je pop sbb sahf vpackssdw fnstsw sbb mov add sahf movabs mov or jbe decb rex.XB push lahf (bad) stos decl mov rex.RB sbb scas adc lahf (bad) pop mov xor clc (bad) jae rex.RB mov (bad) insb rex.XB je (bad) enterq adc adc jae (bad) push add push lods mov mov outsb outsb adc int ss adc jo int3 cld pushq stos int3 insb mov mov (bad) retq mov shlb mov insb rex.RX pushq (bad) push divb jno movsl cmpsb test (bad) mov pushfq mov sbb lret repz pushfq mov jle pushq in xor hlt mov (bad) or mov jae cs mov (bad) (bad) ds and negb or add sub mov out adc hlt (bad) sti std loop pushq sub (bad) scas movabs fmul movsl xor imul rex.RB cmc je lret mov rex.R out sub mov mov (bad) (bad) mov mov lods lock mov outsl mov (bad) ja sub lret pop (bad) (bad) (bad) mov adc mov cmp pushq sti (bad) mov (bad) (bad) lret enterq cwtl push rcr (bad) add add xor rex.WX adc mov xchg ja rex.RXB (bad) fsubrl sub rex.WRB mov jns push rex.RXB int push sbb cmp rex.RB pushq sbb mov jns cmpsb xor (bad) rex.WX movabs sbb jo repnz lods pop in mov jg stos jg rcl rex.WXB lods (bad) js mov xlat rex.RB shrl (bad) adc (bad) lret fistp jl xchg push or stc std mov or fdivrs sti in cltd rex.WR movslq add callq mov divb adc rex.B fbstp pop js and pop (bad) sbb rcrl in mov push rex sahf mov and (bad) pop push pop pop cltd (bad) xorb fidivr (bad) sarb stos push (bad) (bad) or xchg insb jbe push mov xchg cwtl (bad) rcrb imul cmp pushq (bad) mov xchg fidiv mov mov hlt adc loopne rcrl fisubr negl fsubrs rex.WRXB rex.WX mov push add outsb ss cmp sub imul leaveq jno mov (bad) xor pushfq (bad) adc add int scas mov movslq int3 jne (bad) (bad) mov (bad) (bad) fs lea sub rol nop mov add rex.WR mov (bad) xor (bad) pushfq mov pushq sbb mov test (bad) lret adc mov stc mov imul pushq jns movabs imul jo cmp int3 xor shrb sbb xchg addr32 and pushq data16 leaveq mov xchg xlat xchg sub scas add sti mov or sbb movsl add loope adc mov rorb xorb xchg jbe (bad) sbb mov insb cmpsl stos sub in outsl jg mulb in fs gs xor adc movabs mov ds jae xor push es stos outsb outsl mov out add ja stc sbb mov jp fimul sbb cwtl (bad) (bad) test test jo (bad) (bad) (bad) bnd fisttpl (bad) xchg mov scas test adc (bad) mov rex.WR jbe cli ficompl or mov sti mov or data16 (bad) cmp idivl sub js xchg lea sbb (bad) mov and pop (bad) rex.WRX ja (bad) mov (bad) mov mov fstps test sub rex.RB rex.WRXB xchg adc mov stc out sahf fs insl pop (bad) (bad) callq adc jns (bad) rex.RXB mov je int iret mov push (bad) sub movabs fiadd cwtl rcll enterq pop push ja mov push (bad) stos (bad) mov xor lret test mov xchg hlt jbe (bad) div leaveq psubusw cmp rex.RX fwait jo addr32 fisubl jno or leaveq cwtl sbb rex.XB mull rex.RB rex.WX in and push lea shll ror stos icebp shrl (bad) (bad) insl (bad) int3 add andb mov (bad) or inc (bad) mov (bad) and imul adc (bad) shrl (bad) in adc pop stos push ficomp rex.RB (bad) lods fisttpl push (bad) je mov stos jo in or scas hlt and cmp stos (bad) jns mov stos mov js clc (bad) rex.R nop retq clc and sub (bad) cli sbbl movabs popfq in or sub cld add jns leaveq sbb mov mov mov jo adc test fcoml fiadd mull rex.B sub adc mov (bad) and add sti (bad) lock xchg sti movabs pushq (bad) (bad) adc xlat imul add jb push int jno xchg mov jns and cld in add and sub xchg int adc lods (bad) imul xchg scas xchg adc jl jb in push mov (bad) test lret and outsb and pop rex.RX gs (bad) adc cli pop pop sbb in outsb (bad) sub rcl (bad) subb rex.WRXB jp adc addb scas (bad) rex add rex.WR adc ss mov (bad) fiadd callq js push rex.WRX mov adc hlt imull iret cmp lret jge jle rolb stos stc (bad) scas sub test movsb imul xchg add xlat retq add push movabs callq mov mov loope add vpacksswb (bad) pop cmpb (bad) outsl scas in std cmc jne (bad) sbbb rex.RXB jl or jo (bad) out jle and jl or (bad) cwtl (bad) (bad) scas mov sub out jnp insl data16 movabs xchg sahf ds and sbb xchg fbstp pushq sbb retq (bad) test add mov cmpsb rex.RX imul nop loope std sub xor pop mov adc (bad) (bad) and sub fld1 stc cwtl adc mov xchg mov mov jl rex.W rex.WRB cwtl and and jb sti add insl fwait cli scas lods sub mov sub movabs int3 rcll stos (bad) push mov xor (bad) mov jns enterq int3 outsl push mov (bad) out (bad) mov xor outsl mov mov movabs pop rcrl enterq movsl rex.WR movsb xor cli and stos adc mov and rex.XB int3 pop imul (bad) movabs nop rex.RB mov mov and pop mov movabs cld add loopne insl scas cli mov int3 mov fidiv in cli imul movabs mov frstor lock mov (bad) sub jrcxz xor xlat fdivrl rex.WXB fcoms and repnz cmp clc jmp test cltd movabs pop (bad) out mov sahf test rolb ljmp add push lret imul adc (bad) add fwait sbb rex.WRXB rex.X retq (bad) (bad) adc cli outsl sbb rex.X jae or adc sar xlat rex.B (bad) add (bad) (bad) icebp sti xchg data16 mov adc add movsb out mov repz pop (bad) sub (bad) and int3 (bad) iret xlat rcrb callq lods setle cld pop movabs jl (bad) mov xor rcrl (bad) js sahf lods (bad) pop xchg xor test add push mov mov mov fcoms outsb and rex.WR mov (bad) (bad) sub or callq movabs add repz outsb mov cmc pop (bad) mov (bad) cmpsb rex.R loope fcomps mov movsl popfq movabs pop scas fistpl (bad) rex.RB fdiv or es mov push mov sbb adc mov stc pop xchg (bad) gs movabs jl pop jae (bad) jae sbb stos js,pt imul subl movsl or ss or fcom mov (bad) pop jno xor repz movsl jns fisubrl out callq adc mov xchg movabs mov repz rex.RXB out movsl (bad) mov fidivl iret push pushfq ja adc enterq mov cmp lret cmpsl outsb jle jnp movabs and (bad) xchg fiaddl adc mov mov add fadd iret add out pushfq add and in movabs jns mov adc (bad) scas shl mov mov (bad) rcrb push idivb jno mov flds (bad) mov pushq rex.RB addr32 xor je leaveq xadd jns jno xchg repnz xor cli sub (bad) xorl mov test mov rcrl sbb (bad) int3 mov leaveq mov (bad) xor (bad) cli sbbl adc in shrb add cmp rex.R mov int3 sub mov movabs sub out popfq (bad) lods repz pop mov mov (bad) loop icebp js fistp sbb movabs mov xlat orl shrb fldenv cmpsl sahf gs in (bad) mov mov mov es ror pushq mov cwtl rex.RB jge xor add test xchg add (bad) sub leaveq scas lahf jb int3 cmp fdivl insl rex.RXB vsubpd notb imul (bad) lahf in addr32 jo lock fs cmpsb lret mov sub (bad) fisub pushq mov (bad) xor mov sbb mov pushfq mov mov cwtl cmc (bad) xor and js sub jns test mov imul (bad) (bad) (bad) imul jge push rex.X movsb (bad) (bad) (bad) adc mov outsb addb (bad) outsl cltd callq pop mov mulb sbb pop imul adc outsb mov mov xlat icebp cwtl rex.RB xor rex.WR push insl imul je fs xor sbb test (bad) rex.RB add rol xor test sub lock int3 stc jne (bad) in add (bad) mov jae cmpsb gs mov addr32 ja rex.X xchg fdivrs or cwtl push (bad) insl insb jo stc (bad) (bad) cmpsb roll fistp insb mov xor movabs push scas lahf test fmull (bad) jb fsubl loope cmc in lock sub enterq (bad) adc int3 pop and mov mov mov fnsave cltd (bad) fdivl adc add in int jae (bad) sbb ja adc add movabs rcrl (bad) mov iret rex.WR (bad) adc adc lods out popfq rcrb or jmp movabs and and sti lahf mov add pushq (bad) pop (bad) and sahf mov movsl cltd sub jmpq xor sbb lret (bad) sbb in clc sbb mov mov out add sub imul (bad) adc in test stos adc movabs lock cld add mov cwtl xlat fsubrs lods and adc jmp rcrl sub adc rex.RX (bad) jne mov iret sbb mov xlat add in stos jne mov sub jp fs xchg and popfq data16 callq retq callq rcl rex.WR in out scas out in and mov mov jb rex.WX test hlt jo jnp jle mov mov (bad) sub jno (bad) pop cmp pop (bad) (bad) or std (bad) rol idivb rex.WX xor mov or imul js imul sub (bad) pop hlt jne jo cs and enterq test cmc shrb cwtl or fdivp (bad) movsb mov pushq add mov jo xchg (bad) or mov jge lock xor rex.W push jmpq mov enterq mov movabs ss pop rex.R (bad) movslq rex.WX js (bad) push test rex.XB fnstsw jbe fldcw push rex.WR and xlat (bad) (bad) cmpl ja ss fwait jrcxz push movsl (bad) adc (bad) shrl add enterq ss lret and jp stos xor lret mov cs movsb pop loopne rex.WXB rex.B sbb adc sbb sahf divl mull pushfq pushq cltd or loop sahf pushq jle (bad) jns push scas jp test stos fwait xlat sti out movabs fisubrl jno mov clc xor sbb rex.RXB xchg cmc (bad) (bad) (bad) (bad) (bad) test or mov or rex.WRXB sahf sub test vpcomuq (bad) xchg mov sti retq stc pushq imul or rolb adc sub js rcrw xchg notl cmc mov icebp jg (bad) mov (bad) jns test idivb movabs insb (bad) (bad) mov mov jrcxz mov (bad) xchg add incb lods cmp test movabs (bad) scas lahf lock jnp cmc adc sub add adc fsubs (bad) lea jns out in scas add cmpsl cli sti (bad) jrcxz enterq jne xor mull rex.WRX rex.WXB (bad) cmpsl sbb adcl (bad) adc cmp or mov test cmp insb data16 push pushq jne in lret xchg add jb imul repz and rex.R or (bad) mov scas (bad) adc fisttp imul jrcxz (bad) mov adc mov mov jmpq clc sahf int3 and cmpsb mov insb sbb jno push sub push xchg movabs rex.X rex.R (bad) sub (bad) ds rcrl mov cmp iret sbb mov hlt pushfq pushfq rex.WRX rex.WR (bad) fisub (bad) (bad) xor (bad) rex.R rex.RB loopne test sti jmpq stc rcrl es pop insb scas (bad) (bad) test (bad) rcrl je hlt (bad) popfq out movabs leaveq enterq mov icebp mov movabs mov (bad) mov sub rex.X lods pushq movslq xchg leaveq mov rex.WB loopne mov rex.RB ss lods sub (bad) iret push mov lret lahf adc ffree push jmpq push pushfq pushfq subb mov lret push jge stos add ja ja rex.WRX xor leaveq xchg xorl out rex.W movabs sarl in fist lret (bad) rex.XB callq pop (bad) fwait cmp sub xlat push (bad) jno pop je xor iret (bad) push (bad) pop mov movl xchg out out jo cmp pop outsb xchg jge cltd fmul push (bad) adc adc add movabs mov iret fucomi in lods cmp cmc pop lods mov movslq mov adc mov xor jno rex.WRB movabs (bad) rex retq mov mov sub retq rcrl callq lahf cli stos mov scas insb and or (bad) mov add rex.WRXB repnz callq rex.X and std lods pop rex.RX sub cs mov movabs lods adc mov jbe or movsb and xlat movslq jmpq rex.X sub in stos idivb adcl mov popfq adc (bad) cwtl (bad) jmpq loop fimull fisub ss rex.WRB sub stos sbb cmp rex.R rex.WR add mov mov scas xchg idivb cmp fistp sbb pop add jae cli (bad) (bad) (bad) mov int fwait mov mov jns lea lea stos add outsl (bad) int sbb repz push mov cmp rex.RX imul pop adc jnp,pn xorl enterq lahf stos jg movslq cmpsb gs and xor adc out sbb add mov sbb cmpsb (bad) leaveq jmp (bad) int3 loopne pop rex.RB xchg adc imul xchg movsl retq jg cwtl (bad) (bad) (bad) in (bad) movsl adc test insl adc xchg out add loope in add adc pop sahf out rex.RX rex.WXB leaveq xchg jge negl fwait pop rex.R sub push jge or and push jnp mull ficoml rex.WB leaveq xchg jge (bad) mov xchg xchg cmp clc jp pop js data16 (bad) push (bad) mov mov xlat pop std pushq cmp cmpsl push or (bad) cwtl (bad) xchg (bad) pop cmp rex.XB rex.R out int3 and pop out pushq mov pushfq (bad) (bad) xchg int3 (bad) adc sub mov xchg stos (bad) cs nop (bad) or in sahf mov (bad) mov cwtl or rex.R js pushq push pop (bad) rcl xchg sub vpsubsb jle pop cmpb (bad) and js add and add cmc fcompl fild je repz rex.RXB rex.WRB mov insl popfq adc sbb (bad) xor loop outsb retq mov cmp rcrb lret sub sbb std hlt pushq sub rex.RX testl pushq movslq addl add cmc (bad) loope (bad) xor movslq je popfq in (bad) (bad) stc movsl jl (bad) and xchg rex.WRX (bad) (bad) push cmp (bad) xlat out rex.R rex.WX mov adc lea (bad) btr callq jns rcl mov rex.RX and (bad) mov add ss ss (bad) cmc sub rex.B test xor add xchg cmp xchg retq test mov or cmp sarb lods mov pop xor xchg jne (bad) (bad) add out rex.WRXB callq push insb je and and adc push jne add or scas jns outsb pushfq jg jns push movsb stos xor jns pop cli outsb outsb pop mov adc imul notb lea mov adc mov (bad) hlt notb (bad) cmp rex.WRB (bad) mov rex.WRB addl outsl insb pushfq (bad) movabs mov mov (bad) xor (bad) cmp incb cltd cmp (bad) jbe push xchg (bad) add rex.R lock movabs xchg test pop mov rex.R push lods rex.WRX loope sub data16 loope fnsave rex.RXB add sub rex.X outsb (bad) (bad) je jge rex.RB and sahf mov (bad) (bad) rex.WB cmpsl adc (bad) xchg (bad) lcall xchg xchg insb lret pushq mov icebp jle rex.RX movsb je jno jl xchg outsl jae movabs imul out jb mov lahf movsl scas cld mov lods scas cmp adc std int3 rolb and scas out mov rex.WXB fs mov push stos scas mov adc test mov cmp movabs fs jge (bad) (bad) stc mov data16 std (bad) (bad) (bad) repnz callq cmp rex.WX mov adc out add cmpsb xor mov mov insb hlt sarl push sti (bad) jge mov add test sbb addr32 pushq outsl jns pushq je fstl (bad) sub adc cli and out mov in mov mov fldl cmpsb enterq in addl (bad) jg xchg rex.WRXB mov ja jns out retq or mov jo xor insb xor notl pop (bad) movsb roll fiaddl push mov stos cld sbb sbb cmp movslq add int cmp test insl jp lods insl jg add stos (bad) sub sub (bad) (bad) roll cmp rex.WRX pop mov xchg jb (bad) or pop xor add ds int stc and movabs out (bad) int rcrl mov out rorb out callq sbb cmp add jl sub retq jo (bad) je leaveq fsubrp (bad) jrcxz mov jl shlb push jmp (bad) jbe and mov (bad) sub adc (bad) xor rex.WB test mov out (bad) fsubp je jne popq pop (bad) in adc mov cmp int rex.WRB (bad) int3 retq test rex.X lock outsb lret xchg sbb outsb sahf (bad) test mov movabs test pop pop fsubl push incl lods (bad) lahf mov cwtl jno mov nop outsb lret xchg (bad) mov and mov xor (bad) imul sub rex.R rex.W gs icebp xor and xorb int ds mov fsubl out lods (bad) test imul (bad) sub lods xchg imul adc mov notb mov xor (bad) rex.RB cs lock lret movabs sub int push jne jne imul cltd adc mov sarl (bad) (bad) repz xor xor (bad) test (bad) test sti mov retq mov pop (bad) add enterq lods sahf mov test adc (bad) ja cwtl out rex.X mov adc cmp movsb pop rcrl xor adc mov lret xchg jo mov cld add cwtl adc xchg jne or rol mov (bad) add out (bad) jl and (bad) imull adc sub rex.WRX adc rex.WR scas xor sbb outsb int3 pushfq fnstenv xchg xchg cmovnp out push popfq or pushq xor pcmpgtb mov jo sti cmp test outsl (bad) mov imul in movabs lods mov (bad) movsb test xor sahf xchg xor rex.X rex.WX je mov sbb int3 and adc callq lahf adc (bad) adc (bad) mov callq lret (bad) mov jmpq xchg cwtl cmp cwtl stc data16 xor push rex.RXB test mov cmp rex.XB lea add push movabs add mov loope movl push sbb cmp cmp rcll jl add (bad) jns mov lods fcmovne int sbb cmpsb mov adc add rex.W ficom rcrb out fmull enterq js cmp sub add test cmp or cmp test leaveq adc pushq jno out pop cmp ja jnp xchg movabs push (bad) rex.WRXB adc pop rex.WB idiv icebp jne (bad) int adc (bad) adc scas pop cmpsb je or push scas (bad) xor jmpq mov out sahf sbb adc (bad) push (bad) lcall popfq pop push push xor (bad) movsl or (bad) fsts mov pop jp (bad) test adc loopne (bad) leaveq (bad) data16 rex.WRXB push (bad) mov mov mov sbb pop mov sbb stos movabs adc (bad) ss rclb adc scas jp adc rex.X pop rex.RX sub push pushfq xchg cmpps hlt jne pop rex.WRX jmp rex.R jrcxz rex.XB cltd push sahf or (bad) pushq rex.XB stos pushq push callq rex.WRB mov (bad) rex.X or or mov rex.RXB ja (bad) int hlt int3 adc rex.R js movabs mov jg iret (bad) stos int cltd jb xor adc pushq div movabs pushq cmp rex add leaveq pushq addr32 xchg (bad) sub push int3 addr32 mov xor add insb insl mov jns insl (bad) mov fldt pop popfq xchg cmp jge pop cwtl sbb rex.WRXB adc (bad) sbb xchg mov sub clc fs rcrl (bad) movabs (bad) xor je (bad) mov es lock lods sar sub xor rex.RXB sbb (bad) int imul rex.RB jns (bad) add sbb sti mov xchg xchg (bad) fld (bad) cs add jmpq test (bad) clc std imul movabs and sub rex.WR (bad) push sub sbb adc rex.X sub stc jge repnz rex.XB and loope popfq lcall rex.X cmp (bad) (bad) and fwait or lock (bad) sub xor (bad) insl stc lock sbb or adc cli add fsubrs cmc (bad) test (bad) rex.RX (bad) sub (bad) out fiaddl mov lods jbe sbb (bad) fldenv loopnel pop mov leaveq (bad) jl jb cltd (bad) test mov xor rcl cmp mov pop fdivrs insl adc lea mov ficom or jp cwtl mov mov and (bad) (bad) cwtl ds sub mov cmpsl xor sar rex.WXB out lea xor outsb rcrl lahf and (bad) loop (bad) fwait push pop adc mov (bad) adc mov retw addb mov (bad) (bad) int js je (bad) rex.WR fldcw retq loop je adc enterq mov out scas (bad) push faddp cwtl movabs mov adc scas stos js jg sbb mov int3 shrl pop (bad) (bad) cltd (bad) mov jle jb cltd rex.RB imul pushq adc lret int3 (bad) xchg jbe push xor jmp test insb leaveq cmpsl callq (bad) pop jne mov movabs movabs (bad) jg cli sub push in fcoms mov xchg ja shrl loope in (bad) scas (bad) or movslq mov in in sbb pop sbb xor cmp mov int sbb (bad) jns ficomp rex pop sti xor cmp (bad) (bad) es ja sub xor cltd clc lahf xor pushq test roll scas cltd cltd xchg mov insl pop ds out add popfq xor (bad) movabs push rcl adc push movsl cmp (bad) outsb (bad) test jo cpuid mov jnp andb int3 mov lret pop jo addr32 mov movsb pushfq jg sahf pop pushfq nop or (bad) test jne cwtl (bad) xor sti cmp sub mov lock (bad) jge xchg ja jns xor (bad) scas (bad) (bad) mov push (bad) scas in pushfq (bad) jmp sahf (bad) outsl add pop cld mov push ds movsb add xchg (bad) mov mov or (bad) movabs xor jl scas (bad) jg or (bad) xchg in loop pushq sub in mov fiaddl insl xor rcrl fnsave gs (bad) mov jmp cld pop test (bad) and mov scas fildl lock flds ja bsf mov adc cmp add imul jnp (bad) mov mov test mov cmc jbe sub fwait jg (bad) or fsubs divb stos cwtl (bad) (bad) test adc loop lock xchg jrcxz (bad) pushq mov pop insl (bad) mov xlat rex.X mov xchg (bad) add rex.B movsl adc test movabs enterw je outsb rex.RXB add movslq add mov out mulb (bad) cmovae xor test (bad) fnstsw pop insb test movabs iret push cmp sub push sub cli insl (bad) mov js cmp mov and pop jb div lock pushq leaveq xor or enterq rex.WX cmp fstl outsl or movabs adc movsb mov in mov xlat xor (bad) sub es xchg jl movabs test icebp add imull xchg mov adc (bad) sbb rex.RB pop rex.RB xlat int retq rex.WR in leaveq add test xchg lahf or mov (bad) imul push popfq adc jb and popfq insl rex.WRB rex.X movslq rex (bad) insl (bad) loopne xchg (bad) pop jmpq jae or fcoml dec xlat scas mov jbe push mov fs lods mov int or mov clc mov (bad) (bad) mov movsb test rex.WRX or imul (bad) jmpq jb rclb jge (bad) and (bad) subl jmpq (bad) mov jae std (bad) rex.X xchg xchg (bad) mov (bad) neg test jns cld mov ja mov out jmp (bad) jl lods addb test sti or sbb out movabs sbb fcompp mov (bad) rex.W out test leaveq (bad) adc callq jne cld add mov roll outsb or sti (bad) imul sbb cmp (bad) push mov mov pop (bad) lahf iret xor push (bad) lock pop orb int push jmp add pop xchg rcll (bad) (bad) (bad) pop enterq movabs xor and (bad) push movslq and imul jns mov pop repnz fcompl popfq (bad) pop add add mov (bad) mov movabs xchg notb loopne rex.WR xlat (bad) mov repz mov jnp rex.WB movabs xor leaveq out or jmp lods pop push xchg hlt callq fs jae push and js push xor stos pop mov (bad) imul jl push jbe pop add mov int3 mov int3 (bad) mov sbb mov pop ja imul sub lods (bad) and xor pushq jno cltd mov sbb jne test rex.WRXB cli and jl (bad) (bad) mov add adc jp and sarb xor cmp mov mov push mov movabs leaveq push rex.W rex.WRB xchg (bad) mov sub pop sub cmovb nop cwtl adc (bad) out (bad) (bad) mov add xor ficoml int lock adc mov std or out lods mov mov mov rcrl mov fsts jnp xor rex.WRX hlt cltd (bad) and mov pushq cmpsl jno out xor xor mov and adc ja lock out rex.WRXB push jae jmp mov mov adc jne test cmc adc mov movslq mov out mov push sti cltd mov add scas pushfq cs cwtl (bad) push xor jno (bad) rex.RB adc xor sbb sbbb mov leaveq rcrb lods movsb adc mov sti rcrl mov sub cmovbe add adc (bad) movsl iret and scas ja push (bad) hlt movabs cmc (bad) sbb leaveq out fimull leaveq enterq rorb rex.WRXB fadds loopne (bad) loopne mov sub fcmovne ficom jbe sbbb shrb mov vorps (bad) lret mov jl sub add outsb addr32 adc and js imul cmc xor xchg cmp (bad) pushq in xor push sub jns std push scas mov lahf or lret scas fstps (bad) cmpsl adc jb outsl cmp adc (bad) mov (bad) mov mov adc int xor sub push pop fwait pop rex.RX mov enterq (bad) rex.WRB sub fwait jo mov adc fs lahf mov (bad) push pushq jo xchg (bad) loope fnstsw int3 (bad) mov xchg cmp jmpq js fcoml rex.X (bad) loope mov sahf pushq pop mov sub jo sbb ja jb rex.WXB (bad) rorl repz nop adc mov sub shrb cmp test sbb sub (bad) (bad) push mov pushq or ss jbe sub rex.WRX fiadd mov sahf ss sub outsb sub rex.RXB cs (bad) test rex.R cs out movsl (bad) insb add popfq rex.WR xorl push subl in sub mov adc rex.WRXB (bad) popfq cmpsb movabs (bad) js (bad) xchg shl xchg retq test ffree fs icebp mov insb scas cmpsb (bad) adc int scas divb fwait adc rex.WR pushfq sub pop js mov outsl fbstp or scas sub (bad) fisubr lea jl xor add (bad) sbb (bad) adc mov adc rex.WRB mov popfq outsb addl in pop nop mov (bad) cwtl sub lea mov scas and mov pop callq insl (bad) mov sbb iret sbb mov mov pushfq popq (bad) in mov xor (bad) pushq outsb movabs push mov mov (bad) mov lods xor adc rex.X rex stos (bad) add data16 (bad) test xchg leaveq lahf leaveq leaveq rex.X movabs mov xlat jns (bad) notl fisubr repz rex.W or cli adc outsb (bad) sbb sub mov enterq mov stc in mov or or (bad) callq pop movslq movsl sbb shr movabs cmp add jrcxz sub add ss jle lock pop sbb add pop xchg xor xor pop test (bad) sti (bad) rex.R nop push movabs cs add es pushfq cwtl sbb in (bad) cmp mov repz xchg rex.WX rex.B rex.WB clc add repnz rex.WRXB cli frstor mov pop mov (bad) (bad) rex.WRX (bad) add icebp fsubr (bad) test mov cli in faddl js imul rolb (bad) push jp (bad) sbb pop subb cmp (bad) cmp pop fiadd jmp fidivl and xchg adc std ds or xor mov test (bad) adc cli add (bad) pop or mov jno or adc stos xchg (bad) push fisubl xchg sahf out rex xor faddl push (bad) xchg pop xlat std js jno push pop (bad) xchg add (bad) (bad) iret std sti movabs (bad) sub rex.WR rex.R cld cmp mov (bad) fstps mov and stos jbe rex.RB rex.WXB mov nop cli rex.R (bad) xor mov rcrl xlat in jno test lret hlt je pop rex.WR push flds jae test jb data16 or rex.WXB mov fwait pop rex.X jo popfq scas scas stos callq jl sub adc (bad) cwtl jns cmp pushfq (bad) repz mov fs xor in (bad) mov xchg xor div add jno adc rclb push (bad) outsl cli pop subl ror int xchg rex.WRB xlat fisttpll cld (bad) cwtl sub sub push push (bad) jne cmp scas pminsw (bad) int3 adc (bad) mov xchg adc js (bad) (bad) sbb stos pushq pop ss (bad) stos jns xchg icebp pushfq rex.B int loop pop flds jae movabs imul movsb pop test icebp imul fucomip (bad) fist scas mov stos in rex.WX addr32 out out movabs push sbb enterq mov add insl and jb out xlat loopne ss pushq rex.W sahf pop test adc mov pop and rex.X adc mov (bad) jno pushq js jle xchg (bad) jns sub insl rex.X (bad) sub (bad) fwait sub (bad) xchg movabs cmpsb repnz xchg pushfq je scas and cmp adc jae mov outsl scas movslq (bad) or (bad) rex.WR in or mov idivb jmpq xchg jo cmp adc fwait xchg adc cmp (bad) stc jp rex.XB (bad) cmc (bad) cmpl adc fidivr scas (bad) mov (bad) adc sbb push insl out iret (bad) (bad) mov (bad) callq scas mov and (bad) rex.WR fstps mov ss sar loopne xor jbe xchg mov subl (bad) (bad) pushq pop scas retq sarb adc clc adc cmpb cld lret movsb js,pn out mov jns insb mov (bad) mov sub callq xlat mov cmp rolb test (bad) jo pop xchg mov sub sub rex.WX (bad) sub jae pop js xor and lahf callq es xor xchg (bad) or and div rex.WB adc int3 in jo sub int adc jp xorb xor stc shrl sub cmp adc retq fdivl shrl jne sbb out rex.R pushfq sahf rex.WRB jns and rex.WRX xchg ss sahf add jge sbb lods enterq cmpsl pop cltd retq adc sub xor pushfq (bad) enterq rex.WXB je lret or mov fwait jb xor jle xlat rex.X (bad) cmc nop (bad) sarl jle and mov imul mov lret mov (bad) (bad) (bad) mov sub pop cmc mov cmp mov cmp repz (bad) or insl adc jno movabs pushq jo jne scas pop retq mov rex.WX (bad) fnstcw fistp ljmp adc jb insb mov (bad) outsl enterq adc (bad) (bad) cmpsl (bad) sub cmp adc fs loop in push (bad) fidiv fcmove test out jns (bad) ficom (bad) je mov insb jge pop jle lret mov in or lea jne pushq test rex.WB movabs (bad) add and mov std gs cltd sbb sub test sti scas jae pop stos sbb in fdivl movabs (bad) (bad) sbb rex.WR pop lahf addl (bad) imul shrb in mov rex.B fisubr jae,pn pop icebp rcrl (bad) mov xlat cmp lods jl xchg or cltd test mov sbb and leaveq mov pushq jrcxz cmpsb mov (bad) or add or cli outsl sbb (bad) add rex.WRXB icebp push movabs movsb sar js sbb hlt adc rex.WRX (bad) outsl sub mov jns xchg xchg mov ss lret cs js fstl xor lods sbb mov gs jrcxz (bad) xorl rex.RXB jmpq leaveq stos fcmovu jbe scas (bad) out mov jo movsb jbe xor imul push jmpq int3 pop jns xor cmp movabs leaveq jp scas mov cwtl lods (bad) loop mov (bad) rorb test or loope mov jrcxz add cmpsl hlt jo negb mov adc xchg mov rex.WB rex.WRX rex.X (bad) (bad) mov mov add ja in fisubrl xlat jp int3 (bad) out mov jns fisttpl callq movabs iret test ss rex.WX (bad) retq xchg shlb mov mov test xbeginq sbbl lret jnp (bad) adc rex.R push lods rcl faddl es scas adc jo (bad) pushfq int3 mov xchg js rex.WX and mov jp mov cwtl sbbl jbe or pop scas (bad) mov jle rex.RB stos mov jnp nop jge xlat (bad) rex.WXB sti adc cqto nop mov jnp mov jle add gs push cwtl add fiadd mov xchg negb (bad) jrcxz sub add cmp int3 pushq adc rex.W outsb mov jnp xchg (bad) test add (bad) mov jns (bad) mov stos int sbbl add xlat rex.RB pushfq pushfq sbb test xor (bad) (bad) (bad) outsl orl scas std nop mov mov movsl ficompl stos mov pushq sub ja shll retq mov pop sbb jnp (bad) outsb movsb (bad) rex.WRX movslq enterq and cli sub (bad) mov adc iret loop xchg add repz push roll (bad) lods lahf mov addr32 and (bad) jle std outsl push and scas fs (bad) shll add sub (bad) add fiadd sub cmp lods xor adc js (bad) data16 outsl popfq (bad) rex.WRB movsb mov sahf rcll test sub (bad) (bad) stc sub sub adc test psllw add repnz shrb (bad) rex.R sbb pop callq cltd scas in xor mov or (bad) callq add jmpq js (bad) shr mov adc (bad) cmp rex.WR xchg pop fidivr mov jp popfq popfq xchg mov movslq rex.RB fidivl mov jns cwtl xlat jl fldl cmp jle outsb or rolb (bad) cmp lods shrl movsl sahf push movsb cmpsb ds mov pushfq int3 rex.WX rcll test adc pop ficompl outsb lahf int mov clc xchg out stc xchg cmp retq sahf pop (bad) (bad) add fidivrl (bad) lods ss xor mov mov out and out scas sahf sub jle rex.X xor (bad) mov hlt fidiv (bad) imulb rex.X rex.WR pop cwtl addl fist add pop fcoml jle mov sbb lahf jns test xor pop (bad) mov add add adc sub (bad) (bad) (bad) je rcrl mov sub fs cmc xchg hlt (bad) pop retq jge and or lock pop xchg cmp sbb xchg mov rex.WXB icebp (bad) mov sub (bad) fdivrl ds mov jbe add mov xor shrl mov xor outsl leaveq popfq cmp cmp stos jle (bad) mov mov (bad) mov sti fs enterq jo int3 rex.RXB mov popfq std rex.XB ss (bad) sarl testl rorl shrl out rex.WX push mov cltd pop (bad) cmp rcrb movabs cmp xor cmp imul fild (bad) movabs subb add insl jae or stos mov es xchg jle mov push mov mov sub rex.WR rex.RXB (bad) adc or enterq cmp lea mov add (bad) leaveq xchg rex.WRXB imul (bad) (bad) subb (bad) or xchg loop rcrl rol test xor push mov adc lsl adc in cli sub in stc xlat imul cmp jno jae add sub mov int3 (bad) jnp out shrb (bad) mov movsb scas pushfq test (bad) pushfq lock cmpsb scas rex.WXB add out (bad) (bad) mov cwtl je test xchg leaveq rex.WRXB fs out callq rex.WRX xor out mov jbe leaveq rex.X (bad) (bad) xor xchg sti or fidivrl test movabs imul (bad) in iret xorl jae sbb je scas sub fs ja fcoml (bad) rex.WRX mov out ds insl cmp mov (bad) mov movabs scas (bad) insl movslq or mov mov es (bad) scas out sub (bad) incb (bad) imul cld movabs stos movslq movabs rex.WRX sbbb out (bad) stos pmaxsw test or or (bad) rorl movabs add ss jrcxz push mov or jp jg cld js stos mov (bad) mov rex.X sti faddl push shrl jp popfq mov negl (bad) add fsubrs add (bad) rex.RX movslq gs (bad) outsb adc rex.RX push add (bad) mov add pop vpcmpgtw mov sbb scas sub nop movabs xor or rex.WX fs pop out adc cltd jno nop xchg retq shll enterq stos sub mov adc jo cwtl sub andb adc pop test out movslq jo sbb xchg out cmc adc mov (bad) stos (bad) out (bad) scas jmpq ja (bad) in xchg rex jp ss fistp adc fs sub gs ds (bad) rex.WXB xor pop (bad) sahf xchg mov (bad) test (bad) mov ja add pushfq (bad) jb push (bad) pop push pushq xor enterq pop outsb fs stos (bad) callq (bad) push js (bad) scas cwtl xlat add rex.X mov (bad) (bad) movabs pop pushq mov movabs xor je (bad) (bad) rex.WX movsl loopne rex.WX (bad) cmp fwait movabs movabs xlat movabs rcrl pop mov mov movslq cmp jbe sbb int rex jmpq pushq insl or ss lret (bad) addr32 lret test lea por (bad) insl insb adc sahf add stos pop negl outsb out jo add cmp (bad) jo (bad) (bad) divb mov add mov divl sub pop pop mov mov int3 stos jno insl sbb xor jbe sbb mov mov (bad) sti imul insl or retq jg stos rex.WR add jle fwait int cmpsl sub mov and cmc xlat in pop sub (bad) (bad) in (bad) leaveq rex.WB rex.XB cs sbb sbb add rcll je fidiv pushq push mov loop pushq and adc shl or in xor (bad) xchg fcmovne mov cmp je or pavgb xchg rex.WRB mov in stos pop mov (bad) add xchg pushfq sub adcl (bad) lods rex.RB jl (bad) rex.R jrcxz test sub popfq rorl mov xchg lods fs push test jo sub jle mov (bad) int jl lea test hlt hlt pop out jmpq hlt test fldl std hlt (bad) ds xor imul cmpl data16 jmp xor sub enterq movsb movabs (bad) sub (bad) pushq rex.R mov jl sbb (bad) mov mov add not mov sahf add pop mov xchg xchg (bad) (bad) adc scas jns adc xor jb cli jp fwait xor jmpq jae cmc xor je sub shr sbb (bad) (bad) es add jp (bad) ja mov pop sub pop fildll sub test sbb push movabs or mov movabs sarl imul cmpsb mov rcll add test int cmpsl and divb cwtl (bad) and xor cld adc mov add cwtl and outsl adc cmc test ror rex.W rex.RXB mov jne (bad) add lret mov out ja rex.X (bad) or repz xor fistpll (bad) cmpsb lahf push movslq mov fmul test adc outsl (bad) jns (bad) rclb push mov and rex.WRB xor rex.XB cmp outsb data16 mov movsb or xor xlat adc retq ss xor fsubrs pop cs sti (bad) in add pushfq leaveq jbe jne,pt clc rcrb rex.WRX mov fsubrp xlat lret imul cwtl lret popfq xchg (bad) ror rex.XB adc (bad) outsl roll sbb xor int mov lahf pop mov or pop rex.WRB pop (bad) js mov shll (bad) subl (bad) mov (bad) mov rcl cmc xchg hlt jl cs and js sbb (bad) pushfq scas fmul xor retq jp leaveq lock and pop cmp rex.XB (bad) out (bad) mov cmp xor retq xchg xlat jns fldenv lret cltd std xorl test fcoms ja rex.RXB (bad) (bad) pop movl enterq lar push addr32 test pop sbb fs enterq callq in shrl sbb fwait adc and xor (bad) adcb cld (bad) sbb iret (bad) (bad) jbe push push mov orb test push (bad) test rex.RB iret rorl lock imul fidiv int mov (bad) sub or pushfq jmp (bad) adc leaveq cmc movabs xchg (bad) rsm adc (bad) mov (bad) xchg pop push scas (bad) (bad) imul (bad) push or sbb movslq mov (bad) (bad) shl leaveq popfq adc (bad) mov mov jmpq cmp out loopne push rex rex.B sub mov loopne stos cmc out rex.B insb (bad) adc lret (bad) out es jl (bad) jno movsb in pop pushfq jne in int3 test mov enterq sub lock pop push and insl movsb push (bad) mov rex.X insb movslq (bad) test mov mov (bad) lods ss mov (bad) pop rex.WX xor lods cmp cmp in test callq sbb xchg and xor lahf (bad) cmp cs jns mov js mov insl repz mov mov (bad) mov std rex.WR fwait (bad) jmpq int3 jo movabs ljmp outsl mov shrb mov addl enterq rex.WXB fidiv (bad) or mov movslq rex.WXB cmp cwtl rex.XB jne cmp out data16 mov (bad) (bad) (bad) rex.RB subl fs in fmuls jmp or outsl cltd xor jns mov sub and stos mov fsubrs mov and xor mov (bad) outsb push cmp in sub (bad) or add xchg cli fs in jl add (bad) frstor or jae cmp xor rex.WXB and retq push cs mov (bad) sahf nop mov imul icebp pushq lea cwtl push mov or out rex.WRX je cwtl lar mov (bad) mov (bad) in data16 sbb (bad) cmc or cld cmp push rex.WRB callq adc callq cs popfq loope (bad) pop cwtl fistpl jl (bad) sub sbb rex.WRX pushq (bad) (bad) ss mov (bad) jbe rex.RXB (bad) mov xchg insl xor ds scas out xor lods push rex.WXB sti jmp jp (bad) out mov and pop rex.RX adc add pushq rorb rex.RXB (bad) movabs mov fidivl and xor out sti rex.WRXB fiadd ja fcoml sub fwait xchg test pushq enterq stos mov and mov movabs test (bad) jne callq adc scas (bad) push (bad) data16 loope adc test xor scas jmp data16 (bad) cld xor cmp callq in lods sub push rex or adc cmp add cld add cmp loopne ss lahf xchg xchg sub (bad) loopne (bad) in mov je cmpsb sub andl data16 rex.WRX (bad) loop jge jo movabs in (bad) in clc rex.R movabs and fcompl jmpq cs ss movabs pushq rex.WRX or mov xchg cmc cltd (bad) icebp cwtl cs idiv scas sub fidivr or (bad) pop scas (bad) test fwait rex.WRXB pop outsl add outsb (bad) mov ds js (bad) mov mov cltd (bad) mov cs xor jns roll (bad) xchg push pop jl sahf in (bad) test push in scas mov popfq ss cwtl cwtl (bad) cwtl mov mov xchg jbe xlat lahf (bad) int3 enterq or ficom rex rex.WXB xchg pop insl xlat loop adc (bad) pushq rcrl add stc rex.WRX movabs pop cmp mulb (bad) ja adc ja std jns addr32 push rex.WRB jl scas je adc jne xor (bad) lods jae insl (bad) sbb mov je sub fdivl rcl (bad) sub sahf sbb mov scas jle sbb (bad) sbb in add sub sub test push xor rex.R outsb scas xchg sbb and sub outsb rex.WRB lcall fisubr rex.WRB rex.XB sarl xchg (bad) rex.WX insb pop jp iret (bad) nop sbb movabs (bad) jo (bad) pushfq rex.RX outsb imull leaveq push callq push lods scas scas adc mov pushq (bad) mov int (bad) (bad) mov cwtl (bad) imul in mov in lret outsl jne sbb je sub (bad) stc js jbe clc js (bad) jrcxz (bad) add loopne add gs or sarb roll sub pushq in mov jns (bad) lahf jrcxz cmp movsl mov or xchg sbb xchg sbb adcl sbb push rex.X pushq sbb and push pop mov sbb rcrl or stos sti jne retq mov (bad) or mov jbe sahf sti hlt sbb pushq sub sbb push sbb rcrl cmpsb mov (bad) (bad) adc shll mov sbb xor xchg loop pushq movsl cmpsb pop int3 (bad) pop push lret sub mov push xchg fs adc (bad) test add lahf lahf movabs iret mov add mov cmpw lahf shrb add movabs insl mov sbb lahf movsb fsubrs es jmp (bad) fst (bad) int3 pop outsb (bad) pushq sub cmp xchg movsl addb adc cs repnz adc mov popfq movabs addl or rex.WRX movsl mov pop add jo lret jmp hlt xlat add test or pop scas (bad) (bad) movsb pop jno hlt leaveq data16 sbb (bad) xor sub (bad) in js lahf mov (bad) js pushfq sub nop push int sti (bad) test cli push iret rex.WX leaveq stos mov and adc sbb (bad) shrl jae rex.XB std insb sub jg mov push orb int3 std sahf mov add sub (bad) movabs jmp rex.WX xchg shrl roll fisub pop adc movslq mov jrcxz cltd ds insl pop (bad) push outsb mov mov add callq adc pushfq mov lea callq and lods push (bad) mov sub push rclq push jne sbb adc clc imul ja leaveq mov xor mov and sub sbb mov cmpsb (bad) xor movslq cmp jp or int (bad) adc out ja xor popq (bad) int3 xchg (bad) adc push pop ss pop sbb insb movabs xor jrcxz (bad) xchg movslq (bad) rcrb push xchg adc jae dec adc movabs jno enterq mov mov loop xchg xchg insb stos jo xor adc jns popfq or (bad) insb cmp rex.R ja push (bad) (bad) lret (bad) imul mov cmp fsts fldcw test rex.WXB cmpsl sbb push fsubrs retq rex.WRB imul scas pushq mov add test jnp std movsb sbb movslq rcrb mov stos rex.X (bad) rex.WRXB (bad) in scas (bad) js xor negb (bad) sti lea outsl xchg add mov (bad) fst hlt andl sub (bad) stos pop (bad) rex.WRXB (bad) mov (bad) sbb js loop ss (bad) movabs mov or (bad) sub rex.WRX mov fidivr loopne (bad) nop callq cwtl (bad) test (bad) adc loopne rex.WXB int lahf test pop stos sti fcomps jne popfq lret xchg (bad) jae or push js push xchg scas (bad) fucomi test xchg mov sbb (bad) mov mov rorl mov mov test fcoms cmp jbe and mov xlat and lods (bad) cmc scas (bad) std jg rcl jo lahf shl pop sarb cwtl fnstsw notb mov and xchg xor test lret jne iret (bad) in pushq movsl lods (bad) cmc rex.WXB fnstsw insb pop sbb sbb push gs cmp iret jns mov adc sub nop lea mov mov (bad) cs mov add (bad) sbb cli rex.WX int cltd insl outsb imul frstor xchg cmp orl and int3 (bad) mov jae push pushq out sbb test cmp mov jne cmp shrb outsb movabs (bad) mov rorl adc loop adc (bad) cs and mov jg xlat or movsb sbb sbb sarb xor hlt mov xchg in (bad) pop and adc insl push jbe (bad) jg js push mov imul data16 rex.WX jo lods jmpq mov lock push xchg push push sub xor test cltd (bad) rex.RX jnp out pushfq sub scas add xlat int3 jnp orb (bad) mov rex.RXB movabs adc and fwait adc xor sub xchg (bad) (bad) test mov sub pushfq pop int or (bad) retq (bad) sub outsl scas xor pushq imul movabs (bad) fdivl sahf (bad) stc (bad) loope leaveq popfq push sub adc std in rex.R stc fld in leaveq stos (bad) fstl push (bad) push xor sub fildll mov and (bad) mov sti in test jp pushq adc lods xor and and out movsb cmp jge xchg callq popfq (bad) out xchg add je insb cmc iret lods iret in cmpsb mov jae movsb mov loope sti push cltd imul (bad) add leaveq add (bad) push pushq fidivr in pushq fisttp cwtl divl pop (bad) fisubrl fisttpl mov fcomps mov lahf movabs adc jnp (bad) cmc rex.W rex.XB jo and jmpq add jl adc jl (bad) pushq int3 jp movabs je jl mov movabs movabs or stos (bad) (bad) loop cwtl cli sub out jo add jb (bad) mov jnp (bad) outsl sub rex.RB push iret push or es mov xchg pop or cmp mov add data16 rol mov pushq es pushq xorb vmulsd push cwtl add insb (bad) sahf adc rex.WXB mov xor lock fisttpl mov cwtl mov repz in pop and xorl fiaddl (bad) xor (bad) imul sub (bad) mov jne movsb sbb cltd (bad) adc jge shlb mov pushq adc retq or pop or mov in jp enterq lret enterq adc rex.W sub int3 jbe push lret (bad) add fwait mov rex.W mov std jl mov movslq rex.WRX rex.WRX addr32 jns or retq (bad) mov stos ljmp fnsave cltd jbe (bad) test (bad) push add ja and loopne negl ja mov mov fisubr (bad) mov rex.WRB sub and (bad) shll mov add jl mov mov test rex.W nop/reserved shll cli outsb movsb incl jbe (bad) pop xchg (bad) jns rex.WR test xchg mov rex.XB (bad) (bad) adc addr32 mov rex.WRXB pop (bad) insb fsubl std mov add xor xchg add xchg sub in test add sub sub out pushfq enterq (bad) cmpsl pushfq mov push pushfq rcl (bad) fwait (bad) test add in (bad) adc (bad) shrl jmp ss sbb insb test out mov xor xchg (bad) mov xor sbb insb pop insb cmp jmpq stc add pushq shrb mov sub in rex.WX imul pushq jne hlt xchg push push leaveq (bad) jns (bad) jl push mov movabs rex rex.WRB xor pop js stos jmp pop rex rcrl mov pop or movabs scas fisubrl hlt jae (bad) fs sbb (bad) cs imulb jmp outsl mov retq jbe movabs mov shl (bad) push add in xor (bad) lods add xchg in jae (bad) lods (bad) pop outsb int3 (bad) xor movslq rolb xor loop xor jle (bad) mov repz jns mov cli scas js xor jle xor jge iret cmp adc callq (bad) iret sahf sub mov mov (bad) stos push jp rex.RX int sbb (bad) sbb xor mov sub mov mov jnp std mov pushfq (bad) xchg rex.W int3 pushq (bad) mov fmuls jle mov stc sub fmul movslq xor iret stos and (bad) in (bad) or rex.R add (bad) sub pop adc js jle sbb mov jne jmp (bad) pop xor add adc or pushfq out fstpl repnz adc stc mov (bad) pop and and xchg test out subl out scas (bad) sub jns mov es jmpq or lods add (bad) fsubp jle fwait (bad) cmpsl fdivrp and add or testb (bad) mov imul shlb rex.WB std lret mov js add sbb clc add and callq cld rex.WR icebp pop adcb (bad) (bad) mov (bad) xchg sub rex.WR lods in mov rex.WR fild sub movabs (bad) fmulp jno (bad) icebp add imul mov insb insl mov (bad) cmp leaveq or add movabs callq (bad) fiaddl mov add fcoml ja add js repz adc in insb mov jle outsb mov mov push mov (bad) mov (bad) mov (bad) movsl rex.RB (bad) test pop cld push cmc cmpl jmpq insb jno xor sub rex.WXB movabs mov movabs pushfq mov jno mov xor push xor mov pop mov sti mov loop imul pushq xor rex.WRX mov test xor (bad) mov popfq xorl data16 (bad) hlt (bad) (bad) loop pushq xor repz test leaveq fsts or sbb ds pushq int mov rex.W mov and (bad) pop movsl (bad) rex.WR (bad) jne movabs sti es ja cmp rex.RB jo rex.R sarb sbb jb iret hlt or mov and (bad) rcr retq int mov data16 hlt adc (bad) movsl cld mov movsb outsb pushq ss ror sbb cmp outsb retq add sbb insb mov movsb or insl (bad) imul pop callq sbb mov (bad) ds (bad) jbe insb cmp movsb adc repnz shrb sub rex.WRXB push insl movabs iret int mov mov mov mov fnop (bad) jl xchg out xor imul cmp int mov jmpq mov in mov rex.R mov sbb enterq js (bad) int jne es push retq int (bad) mov mov rex.R imul (bad) (bad) mov hlt fucomp rcl fdivl sbb rex.WR movsb outsl sub mov je or rcl sbb (bad) cmp test add int (bad) (bad) jae (bad) iret scas out cmc (bad) retq int push callq sbb movsb movabs imul repnz sbb mov lret jb jbe (bad) (bad) rex.WXB insb outsb in (bad) sbb push nop int xor hlt pop add sbb (bad) mov mov rorl movabs jae cltd test ds retq mov sub rex.RB insb gs insb sbb jno adc lret and xlat sbb mov lret iret int pop mov pushfq movabs rex.RX lock xor xor imul cmp pop fistpl icebp out xchg xor or push jb push lret push sbb mov cwtl outsb mov pushfq outsb mov (bad) rex.WRXB mov jns imul and pop (bad) mov pop (bad) data16 sbb mov adc xchg sbb pop idivb movsb test callq adc mov xor mov sbb sub sbb adc xchg mov push xor callq rex.R xor iret rex.R hlt xor callq in sbb outsb or xor outsb iret sbbb mov mov pushq int popfq mov mov pushfq movsb (bad) sub int mov pushq adc cwtl or xor pushq hlt movsb sub pushq int popfq cmp sbb rex.W push mov pushq int popfq js rex.R (bad) movsb hlt sub int shr rex.WR (bad) xor pushq int3 movsl (bad) popfq cwtl movsb cld sub int mov outsl xchg mov sbb or movsb sub int popfq in xor pushq push movsb (bad) sub int popfq sbb or pushq nop movsb mov (bad) movsb xchg sub int shrb popfq (bad) xor pushq enterq pushq int popfq mov rex.WR xor outsb clc outsb movsl cmp cli mov and js nop xchg in icebp test andl cs js rex.RX pop lcall jle imul pop stc push add callq hlt (bad) lock (bad) xor sahf cmp ds loope data16 xchg mov sbb int3 loope sub cli (bad) jmpq xor movabs cwtl and insl sbb (bad) cltd mov push sbb (bad) ja iret leaveq rex.WRXB pushfq pushq pushfq cli insl hlt fs mov fmulp rex.XB rex jb pop lahf mov cmp imul movsb idiv rex.RXB cmc stos callq xlat es jnp lahf xor fwait (bad) jns push sbb lock pop sbb pushq callq outsb sbb push stos loope out cs test pushq rcrl std push pushq mov xor movabs rex.B rex.XB xor retq insl insl rex.RB rex.WRXB int3 adc or popfq xor enterq outsl jae or pop pushfq movabs rex.WR rex.WRB fs (bad) jae fs (bad) cmc pop clc pop mov (bad) int pushq sbb js int (bad) add movsb pop insb shll adc rex.XB popfq ss sarb shr in clc jne fdivs iret pop rol incl loopne xor pop data16 mov (bad) (bad) (bad) test mov push (bad) movabs sbb icebp xor (bad) test mov jge movslq (bad) cmp mov movsb (bad) jns movsb popfq mov rex.WB lahf icebp or mov push (bad) mov movabs or rclb fsubrp movabs int3 leaveq (bad) xor (bad) (bad) pushq iret movabs sbb mov or (bad) out mov cmp movsb and sbb jo and pushq iret xor sbb jns fnsave callq cld rex.W cmp jnp icebp pop or add jns cwtl subl jnp test jnp scas scas insl testb adc (bad) stc cmpsb movsb mov push (bad) adc mov xlat (bad) testl vpaddw sub mov push rex.W (bad) (bad) frstor cltd pop push movslq adc mov xchg movabs xor sbb js rex.WX insb (bad) (bad) sub xlat mov fwait enterq xchg mov mov (bad) movsb (bad) jno mov (bad) sub adc or insb insb and jmpq iret je cmp rex.WRXB pushq pop cmpsb lret rcll (bad) int3 or (bad) ds (bad) outsl pop hlt outsl rex.WRB cwtl pop lret xor rex.WRB mov movabs scas mov ds movabs movabs rex.WRXB adc xor xchg adc xor cmpsl imul sbb mov adc loope xor ja mov int mov cmpsb (bad) (bad) fdivs sti sbb leaveq movabs pushfq pushfq test repnz mov adc addb sbb xor lea adc mov es scas (bad) mov rex.RXB movabs sub lret pop insl jmp add nop movslq (bad) in add sub or sbb xor sbb int3 jg mov cltd in lret add pushq adc sub rex.RXB mov xchg fstpt jb fdivs icebp rex.WXB push cmpsb sub flds retq add cwtl sub cwtl push cmp jmpq add sub add cmp xchg rex.WX jae (bad) insb xor (bad) sub imul lods (bad) mov insb (bad) (bad) mul sbb xor adc frstor rex.XB mov xchg xor cwtl rol imul jo iret callq add xchg (bad) jns sbb insb pop jae ds in push lahf popfq rex.XB retq adc (bad) mov test (bad) popfq movabs xor mov xchg mov adc es outsb mov repnz (bad) in pop cmp test or jg jns int3 mov stos (bad) push (bad) stos fs (bad) fdivr cmp xor rex.WXB ss mov ss lahf or xor hlt rex.X (bad) divb cltd test repz jns (bad) mov in mov adc stos and sub xchg jb stc (bad) (bad) (bad) jle pop cmp (bad) jnp retq mov mov jb (bad) jg in leaveq xlat (bad) pop hlt mov imul imul icebp (bad) mov mov lods jp jbe js add adc mov outsl pushfq (bad) jp repz pushfq (bad) movsl xlat jmp movabs sbb adc pushq sbb (bad) loop jbe adc imul rex movabs adc pushfq add xlat insl lret sbbb jge push mov callq (bad) or jae cmp rex.WRB movabs rex.WX lahf (bad) push mov in (bad) xorl or adc movslq sbb jo rcrb mov (bad) adc xchg cmpsl imul lods jbe test pop mov rex.R jbe mov (bad) rex.X and pushfq sub data16 scas lea lret xchg in mov in pop mov nop lret ja adc and (bad) iret cmp movsb xchg js pushfq jne jmp popfq sbb cmp cwtl imul ja (bad) scas shll (bad) sbb (bad) mov outsb mov out subl iret pushq (bad) fimul test add mov ds pushfq or mov xor insl sub adc rex.RXB rex.WRX (bad) je xor int (bad) (bad) pop pop mov add imul sub adc mov jg rex.RB callq mov scas jg add (bad) (bad) mov outsb jbe rex.WRXB xchg add (bad) repnz cmp flds ja test rex.WXB in mov (bad) jae sub fwait test (bad) fsubrl rol int3 sahf jp movslq and movsl pop int3 mov pop xor out scas fisubl int (bad) fmul (bad) adc leaveq sbb cs mov (bad) rex.RB rex.WRXB xor (bad) (bad) mov adc scas fistl or mov rex.RX xchg negl add outsb movabs rolb jno sub hlt xchg mov retq iret xchg cmpsl outsl (bad) jb enterq outsl insl (bad) (bad) callq cwtl rex.WR insl xor xorl (bad) and pop (bad) ds (bad) (bad) cwtl sbb sbb popfq mov pop gs xlat cltd pushfq or (bad) in sbb rex.WRXB mov mov (bad) sbb add pop enterq repnz adc rex.WR mov iret retq ja adc sub xor pushfq int pushq cltd int3 mov je xor add sub movabs (bad) cltd fdivrs roll test and (bad) outsb idivl out mov testb mov (bad) popfq add xchg int push mov out (bad) pop add bswap mov test repnz and (bad) pushfq mov (bad) mov cs cmp (bad) (bad) callq callq rex.RX (bad) (bad) fidivr mov xchg fmul push xor cmpsb test mov (bad) (bad) clc pop jns test lods fmull xchg rex.WRB iret sbb xchg int3 (bad) adc mov add push (bad) xchg rex.WXB xchg cmc rex.RX in popfq adc insl mov push fs pushq movslq imul (bad) push outsb outsb pushq insb nop rex.XB cmp xchg pushq test cwtl movsl (bad) adc adc xchg insb sbb fwait shrl jne add xlat out (bad) scas outsl scas lahf test jo mov and outsl ss cmpsb sbb (bad) mov mov adc xchg scas mov jg callq xor popfq (bad) pushq insb pop (bad) es (bad) clc retq out outsb (bad) lock movsb int movabs add rex.WR lods (bad) xor rex.WX rex.R rcrl stc mov psllw or mov test scas fnstcw mov mov test (bad) cmp fildl sub popfq push sbb lods add lret xor and outsl sub in and add stos movabs fsubrl jg fsts addb test cmp repz in pop mov add xor push (bad) popfq (bad) sahf sti in fdivrl test jno (bad) rex.WRXB sub retq scas pushfq movabs or in rclb jno pop loope and rex.R rex.WRXB sbb movabs cld (bad) and test mov pushq sub faddl iret rex.WR movabs sti jae add in mov sub nop (bad) jle addr32 int3 jl rex.RX add (bad) (bad) in jne xchg mov and add (bad) push rex.RX cmpb data16 stos rorb sahf rex.RB cmp mov (bad) in testb jae add mov in repz and movabs sub sahf adc callq xor cmp addl rcll xchg in rex.R scas hlt lods mov addr32 adc xor mov sub adc adc xor stos jns vaddsd (bad) sub shrb mov sub rex.WX push stc mov mov mov (bad) mov mov (bad) cld mov sbb movsl js cmpsb rex mov (bad) outsb hlt lods gs xor mov iret (bad) addr32 (bad) add clc or rex.R cmp xchg jmpq (bad) (bad) iret mov rclb sub add and adc pop nop fucomip fwait jo mov (bad) out sbb std push cwtl xchg mov mov xchg push (bad) pop mov jns pop negb in movsb shr pushq and (bad) mov rep data16 pop movsl push test mov lahf push retq cmp movabs mov divl and mov popfq cmpsb sbb int3 cmc int sub and roll (bad) (bad) pop out mov add cmpsl and mov pop jo loopne sahf mov negl jae push mov pushq jl sub pop or mov jae clc pop (bad) mov scas mov out xor (bad) cwtl mov jmp int3 mov xchg rorb cmc pushq rex.WRX cmp (bad) ss and outsl pushfq je js rex.WRB popfq stos cli scas stos (bad) rex.X movabs sti (bad) sub rex.B adc (bad) ficompl (bad) or and cmp and rolb loope movsl fldt movslq or pop xor fldl movslq xchg and rex.WRB sub mov ja rex.RX adc pushq cmc xchg mov cli sbb pushfq cltd xchg movabs ja jb sub sub jno pushq (bad) mov insl mov movabs mov mov push mov (bad) out rex.RX jae,pn sti (bad) and mov rex.WRB rolb mov lret and (bad) icebp pop jmpq xchg out cld pop jb outsb movsl mov lahf jmp adc mov int3 stos enterq sub out addr32 adc cli retq (bad) sbb cld cltd stc push sti insw (bad) xchg rex.WX (bad) sub jns sbb out pop rex.RX jrcxz mov movl lods mov shll xlat gs sub pushfq mov stos or pushfq rcrb test fsts mov fcmovb or out pushq pop fs xor popfq lahf ja jge sbb (bad) (bad) ss rex rex.WR fs cmp pop fcoml test movsl scas mov imul sarb rex.WRX rex.WRX cwtl mov cmc mov (bad) jno xorps (bad) rex.WR rex.RXB cltd roll (bad) jno insb rex.RX insb leaveq jno adc jne jnp rex.XB imul add fs data16 imul jl (bad) cli in stos lods cld mov lods (bad) mov mov sar mov loop ficoml add (bad) or int3 pushq test stos xor add sbb scas mov jp leaveq imul (bad) cmpl push cmp je jb fwait mov add cmp xchg int ss insb callq mov cli xor test (bad) mov cld mov icebp stos cmc pop (bad) (bad) (bad) jrcxz push test (bad) scas nop out fisubr fs cs (bad) int es addr32 sub and (bad) sub (bad) sub sahf rex.X imul mov xor cltd adc adc mov ficom mov jne in xor mov (bad) in out mov xor ficoml femms (bad) pop jmpq pushq mov jrcxz xor out sub rex.XB add sub addr32 xor push and test frstor pop rcl (bad) or shll clc pop and and (bad) sub fmul ja adcl fisubrl subl xchg int3 rex.XB mov (bad) mov pop pop sahf add adc mov repz jae or scas adc mov sbb mov test (bad) mov mov add mov adc mov jbe (bad) sub leaveq in in adc xor mov lahf (bad) repz mov adc gs mov (bad) (bad) insb jo test (bad) (bad) lahf sbb pushfq (bad) iret mov ds out pop adc cwtl jg lret jo mov mov (bad) int3 loope movsb (bad) (bad) int3 jno jbe adc add xchg hlt test cmp cld sti stos (bad) xor (bad) xchg sub fimul push lods sbb (bad) adc popfq (bad) mov rex.WR (bad) stos js ss (bad) (bad) mov rex.X ud1 rex.WXB mov pop jns pushq sahf jmp ss stos ja rex.WX js sub rcll adc jo movsl movabs test (bad) (bad) sub push fcomps int mov (bad) fistp (bad) sub rex.W es pushq mov lods (bad) jrcxz mov sbb push mov add out idivl je mov mov movslq mov pushq add adc fidivr push jns rex jb (bad) clc and js mov jo (bad) (bad) (bad) gs stc cmpsb rex.WRX push rex adc mov mov lahf cmp pushq (bad) scas and pop mov xor mov outsb mov popfq jae (bad) xor movabs hlt rex.RB rex.B mov js imul and (bad) (bad) hlt (bad) lock mov xor movabs popfq mov test imul (bad) hlt lahf adc adc pushfq push imul movabs pushq rex.B (bad) fnstcw scas (bad) iret movabs insl test fild leaveq mov js pushq (bad) nop (bad) lret or xchg sbb or int or adc (bad) xchg (bad) outsl mov ss pop icebp jl or pushq cmp rex.RB jno (bad) test pushq (bad) rorb cwtl mov (bad) sarb mov mov movabs rex.WR insl rolb and xor xor mov fs jbe stc movabs mov (bad) fidivr sbb push mov cmc add mov (bad) subb pop (bad) mov and add es sub mov (bad) add ss (bad) movabs in movabs insb enterq movabs sbb in insl rex.WRXB sarb cld (bad) andl cmpsl movabs mov cld icebp xor mov loop (bad) scas (bad) sarl test shl pushfq or rex.XB xchg jle rex.WR jns rex.WRX rex.WRB pushfq test rex.WRXB (bad) pop (bad) adc jge rex.R push imul and retq comiss (bad) in jb rex.XB mov cld rex.WR fidivrl mov (bad) sub imul sahf imul mov sbb outsl mov sub rex.B xor jmpq sub mov int pushq ss mov (bad) mov popfq mov (bad) (bad) retq (bad) pop or rex.WB (bad) jbe sbb mov ja mov in or cltd pop and rex.RX ss loope scas rex.WX push mov add mov adc out sbb idivl rex fistp mov lret rcrb hlt cltd pushfq fistp push repz int movabs jg mov (bad) js sbb jl lods insl nop mov or out or loop sbb cli (bad) mov insb mov sbb lahf fstpt (bad) (bad) stc int (bad) and xor fsubrl (bad) movabs cmp sbb jo or push mov xor and leaveq enterq fcmove out imul (bad) out push and movabs cwtl jns iret push mov add mov stc and (bad) fwait push sti and jb pop mov (bad) xor (bad) jp mov std adc push rex.XB cmp mov in out (bad) jmp mov xchg loop (bad) mov ss or cld jle repz xor sub rex.R sub (bad) rex.RXB subl jnp out sub in pop xor xor rex.WX adc jbe (bad) ja jno rex.WX rex.XB cmc jbe rex.XB fwait pushfq sti enterq xor sbb insb rex.WR movslq (bad) movabs sar lret fs sar in movabs xlat cmp sbb mov addr32 mov jno in mov movabs movsb xor movabs sub rex.WB xor sub and mov (bad) in rex.RX pop mov sub (bad) stos adc int3 mov (bad) retq (bad) sub mov mov adc xor js popfq cltd bnd pop sub jne xor sahf (bad) xor pushq fsubrs cwtl rex negb int3 pushq outsb and callq outsb xorb jns popq and (bad) pushfq movslq and xlat (bad) (bad) ja cmp mov mov ss sahf retq cld mov jb,pn movabs mov or push mov cli js sub outsb stos (bad) cmpl cs stc xor add imul jns (bad) rex.RX cltd (bad) (bad) push fsts (bad) repz cmc push ss faddl cmp rex lahf popfq xchg fcmove mov xor pushq neg iret rex.WB lock (bad) mov data16 pop or (bad) jae sbb xor imul sbb adc mov (bad) stos add test mov jrcxz mov (bad) (bad) rex sub pushfq leaveq fwait adc lret rcll push sbb (bad) push (bad) (bad) cmp mov movsl jp mov rex.WRXB loope in frstor xor pushfq lahf int (bad) rorl mov retq test mov jmp outsl out (bad) (bad) outsb int cmpsb test clc outsl mov (bad) pop add pushq push leaveq (bad) fist (bad) in and lods xchg jmpq adc rex.W rex.WRB mov mov (bad) data16 mov leaveq pop out sahf jmp pop mov (bad) scas (bad) mov mov jns mov adc sub int pushfq or js int3 mov lahf adc enterq and cmc (bad) pop fld callq mov cmpsl rex.R sarl (bad) cltd imul (bad) pop sbb out stos enterq fldenv lea loope in sub icebp mov lret adc (bad) add callq push stc stos (bad) test sub movsb outsl test (bad) adc enterq movsb xchg fwait (bad) int3 cmp and nop sub (bad) sbb cltd adc lretq push (bad) jmp test int3 (bad) insl fstpl mov pushfq mov scas mov iret mov test stc sbb sbb rex.XB rclb jrcxz rsqrtps scas mov mov mov (bad) cmpb jae lret adc fs pop sbb shlb rex.WRX scas stos fmulp (bad) punpckhbw add callq fdivrs (bad) movsl or jmp jae leaveq xor and movsl sub pushfq rex.WR rex.X xchg pushq test xor mov adc rorl pop cwtl mov sahf (bad) mov stos orb leaveq add (bad) insb xchg and and adc shrl (bad) orb jp rex.R rex punpckhbw and cmp fstl test jp adc test insb (bad) adc addb (bad) lods rex.RX test sub clc sbb jae movslq imul mov int mov mov (bad) mov push xlat fisubr dec rex.WXB insb ds int3 (bad) xchg add rex.WX pop shll jbe sub (bad) add (bad) sub fdivl pop add jg int lock add jb (bad) imull pop add (bad) pushfq mov fwait (bad) in test test lock sti fnop sbb adc jns (bad) jg,pt (bad) mov rex.WX (bad) (bad) xor enterq mov int3 shl jle (bad) xchg cmp and jnp in callq movabs shrl ficomp nop (bad) int3 add cwtl (bad) mov jb xor (bad) imul pop sahf push mov sti rex.RX loope sbb rex.WR add sbb sarb enterq mov out mov data16 add and outsl andl sti or (bad) hlt mov cld add (bad) (bad) mov (bad) pushq mov mov test pop and test adc jne mov stos mov mov stos mov mov sbb and rcr sahf mov mov insb test clc add (bad) lret adc (bad) (bad) (bad) movabs sti outsl mov movsl movabs mov jne movabs fcoms (bad) int fnstcw xor int3 mov jo (bad) (bad) adc xchg mov movabs cwtl cmp gs jge adc mov mov jle pop pushq insl sti fdivl repz xchg mov (bad) (bad) jrcxz sub cmp lods (bad) icebp adc (bad) (bad) stos mov xorl stos repnz mov fisttp and leaveq fsubr pop lahf mov cmp jmpq rclb scas sbb rcrb imul push cmc add rex.WB (bad) test adc lret adc loope adc jrcxz (bad) pop iret pushfq mov retq xchg jne (bad) pop (bad) mov sahf mov cmc subl sbb (bad) jg sbb insl add mov je shrb testl rex.RB jno mov andl (bad) rex.WRX cmp shrl setb xchg xor pop (bad) pop popfq add add mov cmpsl add xchg (bad) (bad) adc clc mov adc iret xchg cmp mov (bad) outsl xor sbb test stos shrb sub cltd xchg (bad) movsb and (bad) iret mov (bad) jge xor test sub ds fdivrp mov mov stos add and pushfq add loopne movsb mov pop push cmp or sub lahf popfq mov scas adc stos insl (bad) movsl xor rex.WRB rex.R scas fdivrl xor movslq addr32 rex.R sub leaveq cmp jb sbb hlt xchg pop jge int3 clc and and retq jae shrb (bad) (bad) mov xor jnp jp pop movabs jmp xor movsl cmc cmp shlb push shlb out fs rclb rex.W or cmp push rex.WRXB xchg add scas cmc mov in adc sub test mov mov mov mov pop jrcxz mov cs and scas (bad) stos push movabs popfq pushfq push rex.W rex.X add int3 mov adc rex.B rex.RB mov pushfq mov movabs pop lods gs jne jne fistp adc jge add or (bad) dec cmp insb test insl fnstenv test pop mov xor int3 sub pop sbbb jns movabs iret pop mov pop xchg shll addl fnstenv cmpsl rex.RX fnstcw jmp movsl adc add (bad) rex.WRB cld lahf (bad) (bad) sti mov jo (bad) cmp mov test push xchg (bad) out rex.RX add mov mov (bad) jno pop sbb rolb (bad) pushfq xchg jae adc and rex rex.WR cld cld (bad) adc pushfq movsb mov add leaveq jg (bad) lods mov out enterq (bad) sub stos (bad) in insb mov cmp testl jo,pt cmp int adc lea movabs push out in adc (bad) cmpsb cltd and movsl lea hlt outsl pop insl outsl adc xchg add or (bad) movslq cmp data16 scas iret callq add leaveq xchg and test mov (bad) test mov roll scas jrcxz lahf mov test adc sbb xor fistl (bad) movsl je lret push jae lret mov sbb sub int3 movslq imull jbe xor mov adc (bad) adc cmc int3 imul (bad) stc (bad) pushfq pop sub cli jno (bad) stos xchg jno test gs jnp and jbe sub xchg rex.W (bad) push mov rex.WRXB pop (bad) pop int3 cmp rex.XB sub (bad) sbb mov out in cmp xchg adc test (bad) lret mov (bad) or jmp stos cwtl jns fcmovnbe loope retq nop out lret xor xchg cmp xor movabs (bad) (bad) nop out mov pop xchg lret rex.RB fcoml incb and (bad) (bad) fs out pop (bad) lea enterq mov movabs (bad) imul roll and scas mov add int shrl insb cli jmp rex.WRXB cld add xchg out (bad) mov lret scas pushq repz repz adc lods mov popfq push leaveq xor add mov iret or pop pop xchg movsb jb rex.WB mov push fs insl mov cltd leaveq (bad) pop adc ja add rex.W enterq outsl (bad) int3 retq jl xlat callq mov repnz fxch (bad) test adc icebp pop (bad) cmpsl lahf (bad) add cmpsb mov out xorb mov xchg imul mov faddp je stos cld add jns mov jp xchg rex.X rex.RX sbb hlt (bad) jmp sbb sub out loope mov insl test add rex.XB imul out mov xor sbbl sub fsubrs data16 sar (bad) jbe (bad) lods adc (bad) adc stos (bad) pop sbb add pushfq cltd (bad) ss jae repnz jl rex.RXB outsl mov adc pushq rorl xchg mov jge callq fbld nop sub (bad) (bad) adc jns cwtl movabs mov sarb jb rex.WRB adc insb repnz jl (bad) mov jge cmp mov movabs pop popfq jns retq add mov sub mov push jns sbb outsb scas (bad) adc movsb (bad) cmc imul stos rclb incb cmpsl sti jo leaveq mov pushq cmp retq add (bad) jb sbb rex.XB sub rex.WRB repz subl out insl adc sbb test rex.WRB or enterq jl sub (bad) jmpq cmpsb retq add xchg (bad) iret cmp and lock incb xor (bad) push jp gs xchg pop sub adc jns pop jp ja jmp nop push js popfq mov cld outsl enterq in stos imul cs rex.XB or rorl retq mov push in mov punpcklwd and rex.WRB (bad) in pavgw in mov (bad) retq test (bad) or adc rex.B (bad) stc and js idivb fiadd leaveq or std mov rex.WRX loop jp fldenv sbb mov adc icebp rex mov or (bad) stos (bad) movsb divl or (bad) rex.WRXB mov push insl (bad) sub add (bad) in imul mov mov xor insl leaveq (bad) jle lock mov repz nop sub insl lods stos (bad) sahf fmul push cmpl out mov movsb popfq imul rex.X in mov rcl xor mov out xchg (bad) sbb fstpt je popfq rex.WRXB sub mov (bad) test sahf pop jle xchg ss (bad) sbb mov enterq adc xlat jb sbb cwtl jrcxz mov adc roll cmp xchg rex.WRX sub ror mov jno sbb cwtl outsl ja gs jmp jle cli shrb (bad) ffreep movsl add std mov stc sub lahf rex.WRXB divl ds (bad) ds je mov adc (bad) xor mov int3 (bad) fsubr andl stc cmpsb ds mov cmp cmp pushfq (bad) cwtl test rex.WRX std movabs mov rex.WRX gs stos out (bad) movabs sbb in movabs test sbbb adc xchg pushfq (bad) test push shrb (bad) mov leaveq (bad) xor mulb add xchg lock mov mov sbb sahf cmpl mov jbe cmp (bad) ja lods jmp (bad) cwtl movslq (bad) insl adc (bad) popfq xor (bad) pushfq xchg mov test movsb and movabs rex.WR or movabs out movslq roll mov cmc rex.RXB gs add mov movabs in movabs push lahf movabs sub pop sub sub imul jrcxz jmpq outsl pop sub scas rex.WX sub adcb jmp push jb (bad) sub (bad) lahf (bad) (bad) pop rex.W test cmp pop rex.W or cmp (bad) fnstenv (bad) xor add retq js je push push in jle lods test xor push in and and lahf (bad) hlt addr32 adc movsl lods scas in out (bad) add imul mov adc sbb and rex.WRX int3 out (bad) sub or rex.RXB xchg (bad) rex.WR xor imul scas lahf mov fildll add out movabs rex.RX pop test insl sarb in add hlt hlt mov popfq in enterq jle (bad) lods jns andl outsl in (bad) std xorb mov sahf mov cli (bad) (bad) sahf mov (bad) (bad) ficoml pop popfq fdivr (bad) add lret movabs std or movslq mov sbb orl sub pushq rex.WR movabs xor iret stc popfq ficompl lock sbb fistp retq int3 subl test repz lahf int movabs pop jmpq cmpsl rex.RX movabs xlat mov xor cmp jno mov sub cwtl scas movsb stc mov scas hlt js pop fmull mov rorb imul xor lret outsb rex.WRXB xor fdivs (bad) iret cwtl xchg cmp adc xor rolb mov cwtl fdivl jns ror rex rex frstor clc (bad) mov (bad) (bad) (bad) cmp xchg ss (bad) push jl xchg loop test int xchg mov adc outsl (bad) or subb xchg gs data16 cmpsb insl mov rcrb xchg (bad) mov lods fld ja (bad) movabs out mov sub sbb mov or cmp mov sub insl (bad) in lods pushq (bad) pushq mov js shll roll rex mov popfq ss lods mov imul jnp push scas retq add jb jne fdivl adc fwait rex.WB mov test rex.WB test out jae gs ss xchg movslq and sbb (bad) and pop and popfq and xchg cltd adc mov insl rex.R scas and mov cmp rex.RX jns mov pop mov adc add rex.XB (bad) pushfq adc pushfq fdivs outsl cld mov scas mov xchg out xor adc jns in xchg js adc sbb jl lods jns pushq (bad) mov ds scas rcrb push stos mov mov imul fwait movabs cmpsb (bad) rex.WX xchg or mov add mov mov mov pop jne shrl sub js movabs sarl fs xchg pushq repnz cmpsb lahf shr loopne or insb xor int3 adc cwtl mov xor (bad) mov je sbb test sub sbb callq cmp and pushq (bad) adc sbb (bad) insl lods cld retq jmp add insb push imul stc rex.RX rex.WRXB xor jo jne (bad) jo rex.WRX mov stc or pushq and (bad) sbb sbb mov enterq in loop je cmc in movabs mov adc cwtl mov and pop mov lret mov insl jg (bad) (bad) outsl cmpsb (bad) and out push in pop push mov sub movsl push and sub movslq movabs and sbb sahf xor xchg adc and scas (bad) rex.W rex.R cmc pushq outsl sahf jle hlt movsb pop (bad) clc lods (bad) push pop jle push sub push rex.XB rex in movabs in int3 shlb cmp mov mov andl pop mov mov xchg add rex.WB popfq pushfq mov stos movabs (bad) hlt enterq movl pop rex.RB movabs mov adc imul (bad) stos scas rex.WRX (bad) imul (bad) movabs subl stos lret imul leaveq loope in movl add (bad) rex.WXB pop rolb jl andl mov jrcxz pop xorl pop lock sbb jmp rex.B rex.R adc jbe pop cltd adc xor mov adc roll add in in jge enterq test mov scas sbb push or mov lods gs (bad) pop cltd rex.RXB xchg sub (bad) rex.RXB movsl push (bad) xor mov cmp (bad) sub and cmc jbe cwtl movsb hlt (bad) xlat sahf sbb rex.XB xchg movabs movsl hlt andb je adc cwtl divb mov insb retq imul sbb lods sub leaveq or mov sub jb mov adc pushq callq mov test movsl mov (bad) jae and sub (bad) jg cmp (bad) xor xchg lods (bad) repz or jno (bad) cwtl jmp stc (bad) mov (bad) rex.WRXB pop xor and sbb pushfq (bad) iret callq xor sbb int3 movabs xor (bad) in (bad) int3 rex.W rex.XB cmp pop (bad) imul add xchg or sbb sub (bad) cmp jb rex.WRXB rex.X mov pop imul (bad) sti push movsb sub xor cwtl mov imul sbb jbe jle xor cmp lods movsb popfq std mov out cmc mov mov add add adc (bad) cmp adc cmc es stos xor mov rex.WRX (bad) out std jp iret mov adc outsb (bad) insb ss sub (bad) enterq ja callq (bad) scas (bad) in mov mov shrl adc push (bad) (bad) (bad) cmpsb (bad) pushfq jae (bad) ss pop (bad) (bad) mov xchg retq jbe (bad) rorl lods stos add and test (bad) pop cmp stc and mov mov push mov sbb pop mov sub xor movsl callq movslq (bad) mov scas add or pushfq lret insb mov push (bad) scas js insl xor or sub jmp jns or jae xor ja pop adc pop (bad) rex.WXB fstl xlat push mov scas repz sahf (bad) push sti (bad) rex.X adc callq scas sub add (bad) cli outsl add divl mov vunpcklps cmp rex.WR xor lahf fbld and xor outsb (bad) imul jo test and je imul mov and in pushfq nop jbe fwait pop jbe (bad) (bad) (bad) sbb faddl imul add std rex.W (bad) in lea (bad) pushq jmpq pushq add loope jno jmpq out fnstenv clc in or scas mov adc push out insl (bad) imul loope pop sbb adc scas (bad) xlat push pushq outsl (bad) jge sbb jno push callq sub or repz js (bad) scas adc xor or (bad) in add rex jmp mov add (bad) pop movabs adc mov (bad) sar lods sub sub sub add cli (bad) sub js movabs stos sahf add pushfq adc repnz mov stos adc add (bad) fidivl mov (bad) insb jb int cs stc jle sub js mov (bad) pop cltd decb loopne (bad) ficoml (bad) stos jae xor rex.XB adc rex.WXB cmp and cmp (bad) test cmp rex.W (bad) iret fs xchg mov xor and (bad) (bad) insb lret xor sub xchg xchg cmp popfq and rex.RX shr xlat rex.WX xchg xchg mov rex.W imulb movsl loopne add jg iret test lahf out push mov callq fisttp retq pop (bad) xor jrcxz xor pop out (bad) mov mov mov mov retq xor (bad) ficom mov jo shrb sub jmp stos rex.XB (bad) mov sti mov sti sub insl mov add pop and jg js or sarl out rex.R sub test xor and jmpq xor int3 pushq pop test mov in sub adc lahf adc ja movsb (bad) pushfq adc (bad) and (bad) nop movabs jg (bad) cltd adc xor test loopne enterq mov xchg jl sub adc jae insb and loopne cmc stc faddl mov movabs jne out and test test stos adc (bad) mov out sub in mov xor xlat in (bad) jo jno mov mov nop (bad) mov loope sub sahf je (bad) (bad) lret cmp mov (bad) fcoml test (bad) scas mov adc jnp (bad) (bad) scas movslq pop std sub mov mov rex.WRX or adc popfq insl xor in sbbl mov mov xor lahf out jle cltd add jbe adc push rex.B pop insb mov (bad) rclb or jp sub xchg pushq (bad) cwtl repnz insl cmp lock pushfq adc add lret jnp mov sbbl addr32 xor in and (bad) movabs movsb pop cmp movabs loope out pop (bad) mov pop icebp movsl scas and fdiv or mov (bad) (bad) movl jle xchg cld (bad) shrl or (bad) mov gs mov adc popfq push xor cmp (bad) int3 lret (bad) leaveq test lods xlat lahf sub in xor test callq (bad) jns xor (bad) mov mov add movl callq add and xchg mov xor pop sbb hlt out rex.XB loope andb test (bad) sbb mov movabs loop,pt cld movabs lock push movabs jo,pn push and mov fdivrs mov (bad) sub mov out adc in rcl and fstpt jbe or iret movabs je xchg pop add sbb lods (bad) xchg (bad) lret sbb lods (bad) (bad) lods jb mov pop pop jns and mov mov mov mov cli sbb adc retq add and movabs rex.RX jnp adc mov cmp sahf fsubrl rex.RXB insl jmp push jrcxz mov pop rex.RX movsl (bad) or (bad) int3 (bad) xor lahf mov mov mov cwtl adc pushq (bad) movsb int cli sbb (bad) pushfq (bad) sti hlt mov (bad) pushq (bad) (bad) add mov mov scas (bad) jnp (bad) mov pushq xchg sbb jmp cmc add mov push rex.WXB (bad) sarl movslq movabs rolb rclb pop stos nop (bad) stc insl stos xchg in xchg push pop outsb stos insl (bad) pushq or push jo (bad) cwtl jmp scas xor push push cmc mov cmpsb insl outsb add (bad) outsb rex.RX add rex.RB es and xchg (bad) (bad) mov gs addl fcoml js pushfq cmpsl mov sbb (bad) (bad) out mov orl mov mov out pandn mov imul scas in jns clc sub sub rex cs sbb rex.R jp,pt rex.RX cmc loope lret sub ja rex.RX (bad) cmp rex.WXB adc cwtl outsl adc adc retq scas (bad) pop mov int fisttpll imul pushq rcr sbb in (bad) sbb xchg sub cld insl mov test (bad) rex.R (bad) (bad) jb xor sahf (bad) (bad) std cmp lods rex.B js loop pop pushfq nop (bad) insb jne xor add std xchg mov pushfq (bad) mov rcrb iret mov rex.B sahf sub and sbb rex.WX pop (bad) bswap stos out jbe or pop pushq mov pop rex.R pushq pop iret fcompl data16 stos out xor scas out pop jrcxz cltd (bad) lahf adc pop retq push lock cltd rex.X rex.W pop (bad) cwtl rcrb (bad) cld movb pushfq (bad) (bad) jne clc pushq orl movsl out lods (bad) loop ja rex.WRXB fwait sub scas fsubs lods mov loope cmp repnz callq (bad) rex.WRB rex.WXB (bad) enterq lock mov cmpsb adc (bad) pop pushfq pushq sub movsl xorl movabs jno jrcxz sbb cmp mov mov (bad) lods pushfq xchg vpshuflw mov cmpsb lret cli in jne and leaveq popfq pushfq mov movsb jmp (bad) xchg xor mov out rex.RX loop insl jo mov or sahf jg push add sub (bad) pushfq (bad) js adc fsubl xor (bad) iret xchg movabs rex.XB cwtl sbb mov js (bad) (bad) xor in (bad) sbb add jns mov ficom scas mov xrelease mov mov (bad) rex.WRX orb sahf repnz xor shlb iret sbb cli jbe pushq leaveq adc int3 xor mov xor mov movabs jne and jge es insb rex.RXB cltd pop lods movsl (bad) jg popfq (bad) hlt mov fwait jle popfq cmp movsb movabs (bad) mov mov cmp popfq adc roll mov mov enterq popfq xchg movabs notb jge ja int jae add mov movslq mov jp xchg mov push out xchg add mov mov sub rex.WRB (bad) movlps iret jp fwait mov int3 (bad) fidivrl pop xor scas rex.XB rex.X enterq add (bad) rex.XB and (bad) cld cmp in stos mov (bad) loopne lret cwtl sbb movabs sahf xor rex.RB fcoms rex.WRX repz or (bad) gs (bad) mov callq (bad) (bad) sub rex.RXB enterq xchg rex.WRX (bad) ja xlat test lods adc mov lock add test movsl insb mov mov out adc out cmp add mov and xchg pop fcoml xchg js stos rex.RX mov movabs clc in rex.W test adc rex rcr sarl addr32 rex.WRB sub (bad) jmpq rex.RB lahf (bad) nop pop ds (bad) sbb adc mov movsl sbb sbb (bad) (bad) pop cwtl and outsb (bad) callq movsb pop (bad) int3 pushfq outsb cmp movabs nop rclb (bad) mov xchg vpsubusb rex.WRXB (bad) mov in xor rex.RX and (bad) pushfq jle jg adc rex.WRXB cs mov add (bad) out rex.WX rex.WB scas test or pop (bad) movsl retq mov (bad) mov xor int mov js mov xchg rex.R (bad) (bad) lret ss popfq lahf push cwtl mov sub mov (bad) fild (bad) (bad) cmp retq cmp xchg pop (bad) cmp mov stc je (bad) (bad) outsb xchg enterq add movsb fwait adc pushq (bad) (bad) int add mov (bad) leaveq in sub xchg mov pushfq sub xor retq (bad) pop (bad) xor (bad) and sahf mov out movabs (bad) jo adc adc (bad) xor fidiv mov scas mov test rex.WX mov mov scas jmpq rex.R mov mov addr32 add lods jrcxz notb pop fcompl sub push jl xor mov out lret ljmp test add (bad) xor jo negb notb lods (bad) sbb sbb adc sub shr sbb jl in (bad) movabs jbe rex.RX xchg div add mov pop orl in sub adc loopne add jnp sbb subl jnp clc scas adc iret (bad) mov xchg add (bad) retq mov shll (bad) fidiv (bad) movabs icebp xor rex.WR (bad) mov rcl sub pop int3 outsl push int3 fwait js pushq adc stos lods addr32 rex.X pushfq xor pushfq xor mov jns (bad) pop ror js callq jo sub rex.RXB and sub mov xor insb pushfq mov loop mov test jo (bad) mov or pop js push lahf pop mov imulb sub jno out mov andl ficomp xchg jrcxz jmpq movslq xchg ja mov (bad) xchg (bad) mov jle je movsl jae mov (bad) sbb insl in or adc and (bad) jmpq cmp mov fcomps mov ss pushfq scas movabs stos movsb out (bad) stos leaveq add add add mov xor rex.WXB rex.WX sbb cmp fs sbb sbb test movslq cmp (bad) or out add sbb in cmp testb cmpsb pop or cwtl movl sub sbb adc pop xor mov cli test push inc (bad) pushq test mov (bad) xor xor adc mov mov leaveq lods mov fcmovnb xchg (bad) pop rex.X sub (bad) ja mov sub popq jle pop outsb (bad) movabs sbb (bad) jo (bad) int3 fdiv adc add js insl (bad) sbb lock gs (bad) test mov cmp mov cmp or pop (bad) (bad) lods orb xorl sbb fcompl add mov mov fbld fxch rex.R incl cld xlat jbe rex.WRB sahf fbstp cwtl rcll fldcw sub imul fnstcw xchg es cmp mov mov mov sbb mov xor add or lret xor rex (bad) in rex.W in out and jno (bad) xchg push xchg sub leaveq or add int3 fidivrl add lods (bad) or sub jmp cwtl xor cmpsb rex.RXB rex.WB fldt pushq mov movsl cmp xor xchg xchg je jg pushq mov orb fs jne (bad) adc adc jne xor and lock mov (bad) icebp pushq pop test sbb mov pop enterq movabs insb leaveq (bad) in ds push movabs insb adcl and mov jmp pop movabs jns out (bad) sahf (bad) mov rex.RX data16 hlt mov test mov (bad) lret sbbl mov rex.B pushq mov outsb push jb sub push fstpl out out mov (bad) adcb pop mov insb retq and cmp sub in add cs fcmove (bad) or out lgs je callq mov sub jmpq callq rex.WB addr32 out (bad) rex.R mov rex.WRX mov rex.WB (bad) ss sub rex.WX mov or jo xor mov (bad) jbe pop rex.RXB lret mov adc mov sahf jo dec and neg (bad) negl (bad) pushq sub insl (bad) iret lahf rep ja sbb (bad) jne push sub mov (bad) rex.RXB rorl retq ja add sahf cmp pop addr32 (bad) js stos xor (bad) fdivl je pop jl cmpsb xchg hlt mov xchg popfq enterq lea pushq xchg rex.X sbbb (bad) insb (bad) xchg rex.RB jg pop (bad) je fsubrl (bad) movabs std jmp imulb xchg in jno xchg movabs (bad) and (bad) (bad) (bad) xlat rex cmc out or rex.WRXB xor cmp jl (bad) cld lret ficompl cmc jle jae (bad) mov out add pushq (bad) imul cmp (bad) pop (bad) cmp shrb pop cs mov rex.R push xor sti mov addr32 cmpsb retq (bad) mov cmpsl lahf (bad) sub stos (bad) (bad) adc rex.RX cld jae divl and mov movabs es in rex mov jle jo pop enterq add movslq in or cmp (bad) callq xor leaveq lock test js mov imull rex.RX imul sub scas cmp sub lahf add cmp mov pop or jne loop rex.WR mov and imul (bad) mov loope stos jmpq xchg (bad) (bad) pushq mov imul (bad) (bad) (bad) mov pop jo (bad) je (bad) mov pop cmc sub sbb push push sub orl pop je lahf sub (bad) sbb cwtl test sbb xor andb jmpq sti (bad) mov fidivr in rex.W in xor lahf xor cmc adc fisubl sub movabs adc out pushq or js iret sbb ja in (bad) in sbb rex.WR (bad) mov out fnstenv xor stos cmp retq jne jb sbb mov pushq (bad) xchg and mov test xor mov ficomp mov mov scas and pushq cltd sahf pushfq add rex divl mov pop xchg mov insl jl push (bad) adc mov (bad) or push and xlat sbb jbe cmp pushq fdivs (bad) (bad) icebp pushq iret int xchg mov (bad) andl lahf out xor mov (bad) (bad) pushfq scas hlt insb sbb scas sub sub testb rex.WR movabs fisubrl loope jl (bad) rcl jl xor test jno cltd insb push jbe pop rex.XB (bad) fidivl pushfq (bad) test mov sub fucomp loop cltd push vpabsd rcrb jns stos ds sbb fwait enterq repnz mov rcr rex jns jmp movslq ficoml lods (bad) add jg mov test js mov xchg fwait sub ror out xchg insb mov mov (bad) (bad) (bad) mov rex.XB rex.WXB cmp adc sub loopne scas xor ror mov pop cwtl retq sub (bad) adc push fisttpl rex.RXB jl movabs movabs cmp in in mov or add (bad) xor je jns rex.WRX adc (bad) pop (bad) (bad) (bad) stos lret (bad) rex.XB xchg rex.R mov imul sub sub test cltd (bad) rcrb jrcxz mov (bad) sub mov test rex.R rex.W jne jp jno or test outsb rex.XB lret xor mov (bad) push or insb test xor (bad) ss fidivl or ja mov imul movb xchg fwait mov movslq ds cwtl jnp (bad) pop out jo (bad) and fsubrl (bad) cmpsb mov (bad) mov xor xchg xlat cwtl jmp stc fnstsw xchg mov pop mov (bad) in add enterq rex.WX (bad) adc scas sbb roll jno jbe pop movlhps ja jl sbb adc adcl cwtl fstpl and lret test push andl adc jb ss jb data16 and jl cmp pop adc and (bad) and adc test shrl (bad) ds (bad) fldl jns (bad) mov (bad) cmpsl (bad) cqto mov (bad) enterq lret lock (bad) cmp sub pop add (bad) mov and addr32 popfq in or jmpq iret js add jl,pn pop sbb out pop fwait mov stos sub (bad) jp mov mov add mov mov sub (bad) insb loop in scas cmp ss fcoms movsb adc (bad) (bad) (bad) loop mov rex.WR iret or add test or std and pop or lahf (bad) (bad) pop sub js fisubl sbbb test lret test jnp,pn mov outsb pushq ds insl pop jo jbe enterq mov scas (bad) (bad) mov (bad) sbb and es (bad) jnp sahf adc rex.WRXB (bad) js jns mov add add mov (bad) insb sub mov idivb pushq or hlt stc int ja (bad) jl pushq lock pop (bad) rex retq jge jl pop push leaveq scas in and outsl insb adc mov add and mov (bad) mov (bad) callq movabs callq mov sub int fs (bad) xchg (bad) (bad) icebp jno test sbb push sti sarl pushfq test cmp jne (bad) fnsave jl mov rorl fwait jbe xor (bad) (bad) je retq push loop sub (bad) in (bad) pushq (bad) (bad) enterq add rex.WR pop (bad) mov test (bad) (bad) js pop (bad) xchg outsb mov rex.WB es mov mov (bad) push mov adc mov test mov pushfq mov enterq sub sub and cli mov rex.XB (bad) or lahf (bad) idivl jo and negb adc rex sub or (bad) or adc (bad) outsb mov mov xor lahf and mov int outsl jb in or cmp jge incl ja add pop lods mov repz pop pushfq (bad) mov add mov loop jg (bad) cmc (bad) scas scas add mov cld movsl adc (bad) stos jne jp js mov sub and outsb mov or sub add stos rex.WB xchg xchg sbb (bad) insl rex rex.XB cld subl adc orl xor jg lret (bad) sar cmpsb jns add (bad) jmpq cmp rex.WRB xchg movabs insl rex.WR rex push sub mov insb cli xchg sub lods and add imul scas ja mov push mov cli xchg cwtl mov lock (bad) pop movabs cmpsb std in mov mov (bad) (bad) sub mov pushq (bad) stos add pushq movabs sbb movabs rex.RXB out shlb int3 jge (bad) (bad) and (bad) (bad) push es repnz rex.WX test cmpsl xor jl jl push rex pop pop jge xchg (bad) movabs adc rex notb (bad) rex.RXB rex.R data16 imul xchg sahf mov xor insb jle cmp mov in jae pushfq and add mov pushfq xchg (bad) rolb cmc mulb mov movabs jo xchg (bad) xor cmc jrcxz outsl sbb cs rex.X pop (bad) rex.WR sub xchg cmpsl xchg stos jp (bad) in repnz (bad) sub cltd insl (bad) idivb push (bad) cmp mov cmc js (bad) hlt sub pop out push (bad) in sbb pushfq (bad) cmc in add mov and lods outsb (bad) test lods js js out mov (bad) int3 (bad) pushq rolb addr32 xor leaveq lcall mov pop xchg pushq cmp jbe pushfq mov or imul or mov (bad) movsb gs nop jl (bad) lods jl pop imul (bad) pop mov push out cmp mov xor or mov insb fsubrl enterw (bad) iret xor stos in pushq jp imul or lret (bad) mov (bad) xlat mov mov js clc sub pop add adc int scas mov add (bad) je (bad) fimull sub adcl in addr32 (bad) sarl cmp (bad) shll (bad) (bad) add (bad) jge,pt ficomp rcll (bad) (bad) (bad) push movabs out je jmpq outsb movsb mov lods or and imul or rcr (bad) mov imul fstps ja out mov popq shr or addr32 sarb mov sahf mov in push stos sbb jp sub cmp test movsb sub rcrb movabs lods jge (bad) (bad) xchg sub add movabs jns movabs popfq xor jbe lahf jae mov sub (bad) outsb (bad) pop lods loop out (bad) (bad) (bad) pop mov or (bad) test mov sub (bad) pushq and loopne test fldl mov enterq rex.RB (bad) or (bad) (bad) mov mov cmc mov movabs xchg mov sub cli jl imul jl mov (bad) movsb adc fiaddl pop hlt test mov outsl add test clc fwait outsl sbb test pop jmpq mov out fwait adc loopne je rex mulb movabs data16 (bad) (bad) sbb (bad) rorl xor icebp mov adc push mov rex.WRX jp sbb jbe add or push cli add movabs xor addl imul std popfq (bad) (bad) sbb not cli (bad) (bad) movabs fs mov cwtl xor in test lret rex.WR (bad) mov (bad) int push rex.RXB (bad) pushq movsb sbb imul (bad) (bad) fwait sub jmp rex.WX ja push jge rex.WR jbe in (bad) and pop cmp cmpsl rex.WB (bad) lea movsb (bad) (bad) (bad) pop fsubp pushfq addr32 fcmovnu rex.RXB pushq repz loope pop rex.RB repz lock add movabs xchg rex.XB xchg rclb in adc imul sbb rex.WRX xor and (bad) mov test sbb (bad) sub in or cmp (bad) adc jb xchg (bad) sbb mov lock insb adc movslq xor xor sub movsb jmpq out push outsl fidivl in sbb jg sub lods out mov cmpsb in push push iret mov sub rex.WXB rex.WRXB (bad) test insl push rex.RB jns push in mov xchg stos repnz jnp incl out adc (bad) out insb imul imul fldl mov fwait sahf (bad) mov or pop cmp lea sub adc (bad) movslq (bad) test ficomp push outsb mov leaveq (bad) fs and insb (bad) cli jno lret outsb popfq push xor (bad) iret add movabs xor mov (bad) (bad) rex.WR (bad) in xor gs test lods sub adcb pop leaveq stos fs pop jne mov cmp fstpl (bad) and jg xchg imul (bad) pop rorb insb jbe xchg (bad) rex.RB cli mov adc imul mov insb and push mov pop std rex.B out sbb mov fadds mov push mov int callq callq fild xlat pushq pop mov (bad) adc stos pushfq jb lret adc movslq pop loop sbb enterq or pop adc movabs fiaddl and push ds xor rex.RX mov jb xchg jne js scas and fcmovnbe xor sbb pop rcl iret (bad) addl adc jbe in cmp adc rex.WB sbb sbb (bad) cmp and fadds cmp cmp gs ja pop rex.WRX lahf push enterq mov rex.WXB adc callq adc xor cmc xchg mov pushq insb outsl insl int3 jmpq test (bad) fild sub mov mov idivl lret jp (bad) mov add lods add cld sbb enterq and push push test cld mov movabs int3 mov shrl add test ss (bad) add (bad) adc fidivl cld add pop jne popfq (bad) loop popfq (bad) nop pop add lahf jle enterq (bad) cltd insb push pop lods pop sub jns adc jo sbb sbb imul movsl xor sbb adc movabs or stos lods fisttp pop pop push lock movabs cmp pop insl callq mov rex.WRX mov mov ficom cltd xor jae retq leaveq outsl or fwait (bad) mov gs sub scas nop cwtl ljmp pop insl stc (bad) cmp enterq mov cmp sbb rcll xchg sub mov (bad) add (bad) callq (bad) stos jrcxz adc cmp xchg cmp popfq jno fildll stos out xorl in test cmp lods push and ja pushfq sub cwtl outsl (bad) jns sti roll out hlt hlt push sub test jne stc insl divps js je (bad) xor xchg pop cmp (bad) mov fldt sub faddp clc sub testb push mov sarb xchg mov mov mov cli cmpl (bad) shll (bad) outsb cmc jp pop test jge push sub cld rex.WX movl push cmp (bad) add pop rex.WRB jae lahf movsl mov imul stos shrl rex.WR and maskmovq (bad) mov (bad) scas mov out adc cli sbb lods rex.WB movslq sub or leaveq fsubr jbe pop subl cmpsb xor xor sub (bad) popfq mov jge movabs adc (bad) rex jl xor cmp sub imull sahf adc sti add repnz shll jp mov rex.WRB (bad) (bad) retq cmp rex.B mov (bad) sub sub lahf (bad) and pop mov gs rex.WB mov insb hlt cmp mov (bad) retq pop stos je (bad) scas mov ror popq jne mov mov (bad) or mov retq out mov rex.RXB xor add negb addr32 addr32 push mov stc ja jnp nop rex.W fs imull pop pushfq (bad) pop imul add xor movsb mov clc pop (bad) rex.WRXB in lahf cmpsl imul leaveq add cmp pop cmpsl js leaveq insl packuswb mov lret cmp fldl int jns addb pop imul jle test jns stos push or outsl pushfq pushq mov movabs jg xchg xchg insb pop mov mov adc movabs lea (bad) jl jnp mov movsb mov mov (bad) in mov cmp (bad) rex (bad) hlt imul mov pushq test cmpsb popfq lahf repnz fmull fcmovbe stos int3 out jl sahf adc or fcompl jnp mov sbb jmp cmp jno add (bad) pop mov loop jmp sbb or cmp rex.RX add (bad) js push (bad) jbe mov rex.WR shll cli sbb and (bad) sub in scas fist out lea insl out sbb xchg roll enterq setl mov scas mov movabs (bad) shrl loopne (bad) jbe scas movslq movsl sbb vmovlhps orb sbb rex.WX scas int3 sbb (bad) sahf in add ror mov ja stc insb rcll (bad) (bad) cwtl pop pop mov mov and test lods jmp mov imul rex.RX in popfq out int3 (bad) mov movsl rcl hlt mov adc (bad) in lods data16 incl imul or shr loopne sbb test mov sti cmpsl int test mov xor cmp adc lahf movsb cli xor adc int (bad) sbb outsb cld (bad) cmp popfq (bad) cmp clc scas mov movsb sub adc iret movsb xchg retq rex.WR test adc sti jrcxz std cwtl retq and mov sub movsl rex.XB pushfq (bad) out mov hlt sub add cwtl adc (bad) add cli movsl lock outsb popq jo cmp lahf xor outsb (bad) fnsave movsb xor clc subb pop (bad) rex.RX jnp mov loop in test jae cmp mov adc movsl xor add and sub mov jo ror add (bad) and test jl sbb cli xorl loopne mov add outsb pushfq (bad) xor jp sub sbb mov cmp mov movups fidivrl pop cmp out jnp mov nop hlt pushfq add jle jbe jrcxz insl fwait test insl push (bad) es mov cld imul test add sub scas sahf add cltd fdiv mov scas hlt mov test pushfq sbb hlt cwtl sbb hlt movsb sbb lock enterq sbb ds (bad) shrb int mov sub ds (bad) outsb fs (bad) mov mov jle mov (bad) jo int3 mov or adc adc rolb callq add sub (bad) sub rex.RB jns outsb mov and mov in test add mov mov or insb in cmpsb mov movabs addr32 int3 and cmp lahf cmpsb (bad) fisubr lock ficom int3 insb cmp imul (bad) xor sbb jmp sti in cltd data16 push pop repz rex.WR leaveq xor stos sbb and enterq cmp imul mov pop push mov lock rex rex.WX es pushfq push popfq mov sbb sub push jne (bad) (bad) xchg clc (bad) cmpsl jbe lret movabs rcrl mov adc std stos and xor fbld rex.X sbb sbb int3 xchg fcompl mov mov mov (bad) cmc adc popfq je rex.W ss imul imul imull lods xor mov (bad) xor subl pop push je pushq pop pop mov fs or mov nop pop outsb jl js popfq test movsb (bad) pushq fiaddl loope (bad) rex.RB pushq scas pushq pushq iret test sbb test stos pushq int3 xor (bad) and hlt rex.W outsb push (bad) push fwait sbb cmp or (bad) mov xchg or ror hlt test mov fsubl fdivr in pushfq mov or or or int test mov clc (bad) outsb add (bad) (bad) outsb add mov rex.R mov mov rcrb lods or movsb lods mov outsl movsl xor (bad) insl rex.RX xor cmpsl jne orl pushfq mov fistl fsts (bad) out in or insl in fs jmpq int3 test rorl adc (bad) outsl adc out (bad) cli mov pushq pushfq (bad) xor loopl outsb mov clc pushq pushfq cli xor out xchg add clc sub cltd sbb xor adc ss test movslq scas leaveq push (bad) xlat fs rcr add js jmpq push shll add sahf jrcxz xchg xchg xor test mov sub out and imul push jp lahf (bad) (bad) xor jb xor jbe (bad) push mov cwtl jmpq js outsb jmpq mov (bad) (bad) rex.WX stc rex.R xor sub sahf negb lret push sar xor movsb hlt mov sbb sahf pop enterq pushq clc rex.WRX rex.RB xor js mov scas (bad) adc jl cmpsl (bad) (bad) (bad) mov je (bad) shlb xchg and pop scas imul imul adc addr32 rex.X cld xchg jne (bad) pop (bad) fwait stc movsl not orl pop leaveq callq loope loopne or jp pop add cmp imul (bad) xor fs imul rex adc jbe sbb popq scas rex.W fdivrl or xchg sarl scas lret mov mov (bad) cmp lret rcrb in imul sbb jns mov outsb in leaveq sub mov cmp jrcxz movslq mov cmpsl outsl (bad) mov and jns (bad) insb jne outsb pushq and (bad) cli sub rex.WX adc jge adc data16 jmp sub jo and int3 js xor push (bad) (bad) (bad) test fwait loop fdiv test sbb mov jge enterq lret decb jle addl in mov (bad) jl pop mov adc rex.WR movabs rex.W movslq orb nopl in add or pushq sbb and sbb (bad) push lods (bad) push xor rex.WRX mov mov mov add push pop (bad) (bad) sub and sbb mov (bad) lahf xor (bad) imul (bad) mov in stos xchg push test retq retq and jle sbb cmc rex.WRX (bad) test jo (bad) insb pushfq repz (bad) sahf callq rex.WRB gs imul nop pop movabs insb (bad) rex.WRXB jmpq add mov mov add mov test pushfq retq (bad) sub (bad) adc jae and imul (bad) lods jg pop jg (bad) adc lret (bad) pop adc mov pop jmp insb (bad) mov cmp idivl je ja cmc mov cmp add pop jmp out or repnz jns insl shrb lock int iret fdivrl and (bad) (bad) addb cmp (bad) mov int xchg scas in lock enterq push adc negl pushq jbe or (bad) jns fcoms jo fstps shrl mov gs pushq pop jne sbb (bad) mov mov push and (bad) in enterq out sub jns fs movabs sar mov pop stc out xor and (bad) rex.WB (bad) leaveq pop jp push and add sti test rex ds push or and cmp pushq adc sub std mov cwtl retq or in lret rex.WXB jg fdivl fsubrl xor (bad) cmc (bad) hlt (bad) mov test sbb (bad) jae (bad) xlat testl and imul test adc (bad) out jbe (bad) xchg cmp add jns loop push mov mov mov hlt mov xor nop lret xchg andl cmpsl add cmp rcl xor incb mov cmp cmp (bad) stos popfq movsb rcrl mov (bad) rex.WRX mov (bad) pop cmpsb adc movabs movslq scas test jae cld pop cwtl rex.WRB adc rcrb xor rex.WB leaveq pop add add (bad) ja nop (bad) movabs xlat mov or rex.RX fmulp sub scas (bad) (bad) (bad) pushq repz lahf adc loopne ja add (bad) stos in mov adc cmp cmpl mov rex.XB clc and nop lahf jge push (bad) sahf sbb or and xchg callq rex.RXB mov fs sbb movabs rorb jmp int3 hlt (bad) stos jb test rex.X stos pop sub add xchg mov xlat pushq mov lock fs sbb xchg jo sbb mov pmullw jb push xor lea (bad) and cld xor insl mov stos rex.R rex.WRX pushq add and mov imul out pushfq jmp lock and fstl lea stos mov rex.XB rex.WRX sar push mov lods and je sbb (bad) (bad) sub lret jo stos or subl fwait stc xor fidiv add mov loop pop adc in sahf mov cmc outsb mov and and fstl lret jrcxz rex.WB add mov pop pop pushq stos cmp int xorl (bad) push ficomp sbb sbb mov insl js cmpsb sti add xor (bad) sub int3 add loope and loop rex.WRB mov xor jmpq xor (bad) sahf mov pop mov adc (bad) (bad) (bad) sub sbb and mov sub divps jl scas jb xor (bad) rex.WR adc jbe cmpsq ja movabs lahf pop cmc push test loopne pop enterq jp add jno (bad) sbb je mov adc xlat rex.WXB or sbb push and fmul test fldt mov push push (bad) cmp fbstp fdiv fldl retq mov jns shr ss rex.WRX addb clc ss or mov outsl jo add imull je jp (bad) push jg insl xor mov enterq add fwait sbb scas sahf ja adc cmc outsb push jle in data16 insb add (bad) pop test mov (bad) (bad) fsubrp rex.WX sti (bad) cli stc movabs jbe (bad) or jne cs adc adc cmp in out outsb adc mov int in xor enterq jae sbb cmpsb icebp adc adcl rex.RB hlt pop cmp (bad) or push sbb ja add scas add xorl scas rex.WX outsb rclb insb cmc push xchg cmp xlat cmp cld mov mov int3 mov add rex.WRX movslq xchg push mov out insl xchg (bad) int repz popq pop (bad) movsb jne decb test pop sub jbe and in stos fildll stos fisttpll pop (bad) out mov push mov lock imul push xchg (bad) stos add xor imul xchg add ja rex.WXB addr32 jno stos xchg sub jb sbb stos cwtl xor (bad) sub (bad) pop jmp xchg lea cwtl pop je setns stos int3 stos cs popfq roll outsb and push rol mov rex.WX mov push (bad) sub xlat pop lods adc ds (bad) sub sbb jno mov pop (bad) xchg imul rex.WRXB (bad) shrl pop (bad) or cli jmp (bad) xchg cmc (bad) loope mov movl add (bad) mov jg insl (bad) ds sbb xchg leaveq fdivrs mov (bad) mov rex.RB pushfq add cwtl icebp faddl rolb jp add and fs (bad) mov (bad) xchg add in cmc xlat sbb xchg rex.B movabs scas mov pushq fwait ss iret xchg sbb xorl mov (bad) push or mov xlat fcmove rex.XB fst enterq adc repz cwtl pop imul cmp pop xor data16 (bad) fstps sti fild fnstcw scas out add addr32 xor mov adc enterq or scas (bad) push (bad) movabs int3 jmpq loope loop in ficom fimul add add decl (bad) (bad) insl cmp int3 adc (bad) (bad) fcoml callq cs sti stos (bad) rex.WX jnp rorl sub jno retq movsl cmpsb sub (bad) movsl xchg in sahf xor lods (bad) (bad) mov and rol rclb movsb mov andl xor test popfq (bad) int3 movabs pushq pop or cli in jns lret lock stos test and and adc retq imul (bad) fnstsw sahf shrl (bad) movsb mov js iret (bad) cmp test push cmpsb (bad) fwait cmp outsl (bad) pop (bad) sahf movabs jne (bad) (bad) retq mov xor cli mov (bad) lret pop cwtl jl lret pushfq rex.RX outsl (bad) mov lock rex.WRX and sbb (bad) mov sbb mov cmpsb retq or and (bad) mov jns sub insl loope sahf and (bad) int3 mov mov sub enterq test and fisubr jns int3 sbb fidivr sbb test (bad) (bad) xor (bad) sbb mov mov sub mov (bad) jo xor pushq insl (bad) mov icebp pop mov adc rcll xchg pop cmp clc sbb adc clc add sbb rcrl rcll jne rex.RX xchg rex.B mov insl rex.WB data16 (bad) fnsave push pop and sub mov rcrl shrb mov loop sub fisubrl (bad) rex.WRX jno mov movabs xlat loopne movsl add cli or jp fbstp in or je mov iret lods scas (bad) xchg test xchg rex.R sbb or (bad) (bad) mov (bad) mov stos jo mov (bad) outsl movabs xchg sbb fs sub pop mov iret (bad) insl (bad) mov addb scas jne add cld push test je shll sahf and pushfq gs test leaveq add insb je mov sbb (bad) in (bad) stc (bad) pushfq sub rex.WRX jbe add cwtl mov mov scas in add sub pushfq shrl (bad) roll pushfq (bad) (bad) (bad) cwtl pop fdivrl mov enterq cmp (bad) (bad) out jrcxz ja fdivp mov jno test stc (bad) pop (bad) (bad) jne cmp add rex in in rex.XB lods mov add nop (bad) mov in (bad) scas xor stos mov retq jbe fcomi imul cmp mov cmp mov sub xlat seto mov cwtl pushfq (bad) stos add xlat cmp mov (bad) push xor (bad) outsb insb ss jae stos test add mov mov mov mov (bad) xor mov push (bad) movabs movabs movsl (bad) lods pushq lea add pop pop (bad) insb je fwait add test xor js sbb rex.R addr32 or ror insb add (bad) sahf test lret rex.WX add jo jo in jbe xchg cmp negl sahf mov jl rcrl cmpsl jmp mov scas icebp and cwtl xchg iret adc jmp push rex.RX jp lcall sbb jbe xor pop repnz xor (bad) add movabs (bad) retq or test cltd lahf (bad) jb scas cs fstpl (bad) cld sbb pcmpeqb (bad) scas ficomp jno testb mov test rex.WR pop rex.X (bad) fwait sbb iret (bad) hlt mov push lea outsl rclb (bad) mov cmp mov xorl (bad) sahf mov adc int andl sbb rex.W movabs mov outsb rex.WRXB jle popfq add pop sarb or vpshufd cmpsl sub sbb and jg shlb pushfq cli jo (bad) mov sub test int3 xchg jp sub sbb cltd mov insl cli shll mov mov (bad) in sbb scas mov xor rex.WB push pushfq jmpq fstpl mov jbe mov cmp imul outsl jns pushfq mov sbb xor js (bad) fsub lea and mov sub addl cld xor sub (bad) rex.WRX and cltd rcl mov rex.WRX cmp out adc jmp (bad) adc out vpshuflw rclb jg xchg pop (bad) mov cmp add cmp stos fwait test fcom jae add in xchg xor mov and int3 mov orl (bad) retq jae xor stos mov ss retq scas mov ja jl fwait adc push out rex.RX (bad) rex.WRX mov push mov mov mov shrl and xlat (bad) imul or imul pushq fidivl jmp movsb fistp pushq xor mov cmp xchg faddl fsts icebp push clc mov add add mov rex.R push std and jns add rex.R lock xor (bad) out or jns sub movsb xlat shr rex.WRXB add rex.WX hlt rex.R leaveq stos add (bad) in mov sbb xor in mov rex.WRB std movsb je popfq jne scas fsubrl adc add psrlq je test mov add mov pop out (bad) js test movsb pop (bad) movsl insl sbb jge sub sub insl (bad) mov cmp movsb movl loopne add lret cltd rex.WR push xchg mov mov (bad) add (bad) and sbbl mov cltd int3 xchg hlt popfq (bad) loope imul movabs cmp xor jno and (bad) lahf adc (bad) rex.WR rex.WB jg shll (bad) sub fild movsl xor xchg pushfq jb mov jg lretw sbbl addr32 fldcw (bad) (bad) adcl sub js and (bad) cld jns insl retq lea (bad) in enterq (bad) (bad) rex.WB fiaddl adc addr32 retq push (bad) pushfq outsb movabs mov sub and mov rex.WRB test jne xlat jae lahf jne fsubrs cli mov (bad) out xor pushq repnz sahf (bad) imul rex.B fcomps sub rex.WXB add cmp pushfq icebp pushfq mov mov movabs (bad) nop jo rclb test sahf rcl sbb idiv add (bad) adc imul je (bad) outsb int3 sub jns pop xor fidivrl xchg add movsb sub pop (bad) in pop mov jl outsl and leaveq xor (bad) rex.RX (bad) (bad) (bad) movsl rcrb (bad) cli outsb xchg pop jmp lahf scas rex.XB insb pushfq out movslq ja scas xor movsl js loopne pushq xor ja movsb sub sbb adc fsubrp scas sub and (bad) test rex push jmpq cmp (bad) pop rclb sahf cwtl rex.WR in insl callq outsl and (bad) add fbld negb sbb retq in int3 sbb jmpq sub mov pop pop (bad) sbb lret xchg jo icebp xchg loope cwtl insb movabs mov mov std fldcw popfq (bad) mov mov cltd sarb pushq lods xchg xor cwtl test mov mov (bad) jae sar mov adc jb movabs fs (bad) (bad) pop (bad) mov mov incl (bad) (bad) jo and rex.WXB jne mov (bad) (bad) (bad) movabs (bad) (bad) movabs add shrb or pop (bad) jns jne scas mov (bad) pop rex.WXB cld add mov leaveq test movabs rex.WB orl out callq loop rcrl and rex.WRXB cmp movl (bad) (bad) mov shl jae rex.W (bad) or ja jno adc fs sub (bad) mov ss fwait jns push push sub push loopne xchg int3 (bad) imul int3 scas cmpsl push loopne pushfq rex.WRB push cmp jb lret (bad) rex.R or push int3 (bad) (bad) adc jns mov (bad) repnz mov pushfq (bad) imul mov je xor clc jmp repnz rex.RB test xlat movsb insb faddl cmp rex.WX movsl sahf or xchg (bad) rex.RXB xchg jle mov fdivl push shll cwtl sbb xor movslq pop scas (bad) rex mov rex.WRB callq rex.X sub insb movsb mov xor fsubrs (bad) pushfq mov cmp mov or sbb movslq js jl (bad) (bad) (bad) (bad) rex.R cwtl imul jrcxz (bad) mov shrb movabs add (bad) pop movsb (bad) jns out js imul (bad) in adc (bad) (bad) fptan imul out mov (bad) adc mov movabs adc decl rex.WRX stc enterq pop push shlb (bad) cwtl pop sbb add mov fwait in cmc or xor pop pop or add (bad) outsl and scas push (bad) mov or add rex.RB stos and xor or mov enterq add mov add mov cmp (bad) lods (bad) cwtl stos xlat cld insl movabs add mov (bad) test movsb outsb in adc shrb fs mov mov mov stc rex.WB jl cmpsl in or movabs rex.WRB mov int cmp jmpq cltd sahf or mov sbb xlat cmc mov mov (bad) sbb pop imulb jg lsl (bad) rex.WB xor mov rex.WR jo xchg cld xchg ds int mov sub cmc xorb and (bad) push and stos (bad) adc sub mov lock scas pushfq adc mov lret out mov cwtl loopne push cmp pushq insb sahf mov jns incb movabs (bad) ja mov imul imul add and (bad) imul test jne imul iret mov xor sahf pop rclb (bad) insb sahf sub imul outsl pushq enterq mov out fxch retq jbe sub add (bad) pop lahf mov fdivs jae mov jo sbb mov pushq sahf movsl test je nop (bad) negl cmc addr32 rex.WB movabs mov jle rolb mov imul xor mov xor cmpsl imul shrl (bad) rex.WX pushq (bad) push (bad) mov (bad) es lods add or sbb (bad) cwtl out cld (bad) shlb and jrcxz (bad) fisttpl pop adc sbb out mov sbb hlt rolb pushq imul pushfq jo je rex.WRB cwtl (bad) push cmp (bad) (bad) sub pushq xchg lock mov test shl lock xor pushq in stos mov jl scas hlt outsb sahf mov rex.RX in rex.R sub pushq xchg push test movabs mov fdivr mov sub jo paddq sub jmp sahf imul (bad) jp mov insb cmpsl out jo jg (bad) pop or jmp and or rcll mov mov cwtl sub sub insl pop jns clc jrcxz fdivs ficompl mov iret fistp (bad) sahf (bad) (bad) jmpq and (bad) loope lock jp mov or enterq pop xor int jne pop mov pop adc int fdivs rex.XB repnz adc loop movabs fs in and and movsb rolb hlt rex.R orb rex.WX loopne sbb mov sarb mulb (bad) (bad) mov mov jns (bad) loopne rex.RX mov jg (bad) callq mov mov jge callq test mov xchg je mov add (bad) repnz (bad) jge (bad) sahf adc pop push mov jne repnz xchg stc (bad) lret jmpq sub fidivl shr lea test movabs imul cwtl movabs and and sbb popfq or mov gs stos iret jmpq pop pop push mov movabs retq test sbb divb test push pushfq (bad) cld mov rex.WRXB rex.WRB cmc imul mov rex.WRB xchg icebp lods rex.WRB (bad) cwtl jne mov int3 (bad) outsl adc imul mov sbb ror nop pop pop mov mov xor rex.WRB mov mov pushfq out (bad) (bad) enterq pop rex.RX cmp xor jmpq jb loop (bad) xchg leaveq data16 movsb je xchg (bad) push cmp sahf leaveq ds lret rex gs fwait jne leaveq fmull mov je shrb pop insb lret mov pop mov (bad) mov mov mov jge (bad) popfq ja (bad) cwtl xor sbb (bad) lret add pop rex enterq nop rex.RB popfq (bad) add (bad) ss out (bad) fdivrl sub faddl (bad) js gs nop (bad) sub scas pushq add (bad) rcrb jns (bad) jo cltd fcomps sti sar movabs mov sbb sub lret xchg js (bad) leaveq imul or test adc js mov rolb (bad) adc xchg scas rex.RX (bad) or retq cmp rex.WRXB adc ss pushfq and cwtl or (bad) in popfq outsl sbb mov sbb and (bad) cld (bad) insb push (bad) icebp retq sub mov outsb or cwtl sbb loop add (bad) (bad) scas gs jno lret retq ss insl rex.WRB addr32 insl sbb movabs rex.WXB push in jb movsl loopne pop xor rex.WR mov rex mov (bad) mov (bad) push xor fs push or int or (bad) xlat pushq xchg cmp jns,pt insl mov jg gs sub xchg and test mov add (bad) cmp (bad) xchg (bad) (bad) mov in cmp xor jo rex.W jne (bad) test pushfq in fsubrs sbb push insl cmc int3 fadd addl bnd mov jno xor out (bad) je ss (bad) iret jrcxz push (bad) adc insl int push vphaddwq pop sahf in hlt xchg rex.WR rex.R xchg mov adc push pop enterq out sbb sbb (bad) popfq lret hlt fmuls or or jle gs pop pushq outsb hlt jb in (bad) mov add fs mov (bad) cwtl jno cld jnp iret pop mov cmp imul scas (bad) add rex.WB imul xor cltd insl xchg ror mov cmp sub in jrcxz push (bad) add enterq mov mov mulb xor in (bad) mov adc cwtl (bad) sub mov fmuls adc sahf or add jne lock fdivp xor cmp and callq leaveq adc int3 sbb stc cmp add and js rex.WX test movabs leaveq (bad) or add movsl (bad) and add nop retq pop fidiv ja repz mov push mov mov nop (bad) int3 (bad) stc pushfq (bad) mov mov sub adc xor (bad) mov mov ds popfq or sub icebp mov std negl pushq mov cld cmp cmc mov jmp shr out imulb sub xor stos fstpt jrcxz xchg xchg lock (bad) xchg hlt int je out test (bad) xor ds sub jrcxz insb adc xchg mov push rclb jb imul sub xor pop enterq js xchg (bad) mov (bad) mov ds sbb push pushfq push (bad) outsb (bad) rcrl je jle cmc imul (bad) rex.WRX rex.WRX (bad) hlt ss callq xlat xor mov adc adc lock push xor (bad) pop (bad) xor adc lock fstpt rcr rex.RXB mov punpckhwd jne (bad) jo (bad) fs test jne (bad) jns loopne hlt (bad) fs imul outsb push xor xchg pop rex cmp js in jmpq sbb sub sub enterq in (bad) (bad) cmc jmp (bad) sahf stc push mov and cmc (bad) pop cmp xchg pushq int imul sbbl cwtl jge jle mov (bad) cmp (bad) pop pop jno outsb je (bad) mov push or data16 and pushq gs pop (bad) jne sub andb mov ja outsb or (bad) or sub fcoms xor jne mov cmc mov imul in jrcxz cmpsb rex (bad) rex.WRX rex.WRX (bad) cmp movsb stc ja and push push xlat (bad) mov adc retq in outsb or pushq sbb xor mov rex and push (bad) xlat jnp setne pop movabs jb xor insl jo movsb iret (bad) fwait xchg (bad) sub (bad) jge jb sub xchg lock jo jg cmpsl shlb rex.W loopne mov pop push pushq jmpq push in jg fcoml andb test cmp out add mov hlt mov (bad) pushfq or sbb push and sub add rex.X movabs (bad) pop lods movslq push cmpsl hlt adc imul movsb push sbb mov and ja (bad) nop sbb in jne test imull sub push (bad) outsl fwait in pop rclb and ss sub rcll fisubl pushq (bad) imul loop stos sbb clc subl mov xchg cmpsl iret sbb test mov out scas adcl push pushq xor adc (bad) scas and out test sub cwtl rex.RXB test add and mov jo rex.B jno rex.RX rex.XB lock mov and adc movabs in out adc sbb add adc xchg sub xor mov (bad) adc movabs pop sbb rex.WR rex.B jne imul sub movabs mov or sbb movsb adc rex.WR (bad) jno or stos ffreep jle pop test lahf (bad) (bad) mov in fisub fsubp adc (bad) test jb jbe jo jbe stos icebp adc adc mov sahf xchg or or rex.WRX adc sub stc pop pop imull adc pushq mov (bad) (bad) or neg pop (bad) je (bad) repnz adc mov push xor jmp adc cltd enterq fild lret add std mov pop cmpsl sub sub mov (bad) push xchg mov adc (bad) add mov rex.W (bad) jle pop mov hlt (bad) (bad) adc sub movsb push insb xor cmp outsl xor (bad) rex.WRB pop add add jmpq mov pop push push or in (bad) in xchg in push or outsb repz retq in fstpt lret add (bad) mov push decb cli hlt or sub jl hlt (bad) repz lock pushfq movsl jne lret shl or xor add and xchg jle mov testl mov mov retq (bad) jae,pn rex.WX jne movsl sub (bad) hlt lods clc cmp lret (bad) mov add mov jo adc (bad) outsb add (bad) (bad) xor sbb insl sbb sbb mov jo mov movsb or mov (bad) imul insl (bad) andl and add out movabs push adc fsubrp cwtl (bad) scas fistpll imul outsl (bad) mov test xor es mov rex.B js jno mov jno rex.WB xlat popfq adc sub in (bad) jb rex.XB mov jne mov xor (bad) scas push add mov out xlat rex.R (bad) mov sbb cmpsb rex.B pop mov imul rex.RX mov xchg in loop outsb test int3 sub insl (bad) fincstp insl lahf (bad) and ja jae cmp test cmp push rex.WRXB adc jne ja clc push jmpq pop push add mov flds lods cwtl rex.WR cltd and movsb cmpsb mov (bad) rex.WX (bad) stos retq push or and rex.WRXB lods fidiv rex.RX adc imul (bad) outsl mov shrb scas or xor mov xor je stc sbb xor loope push add fmul sbb rex.XB cmpl add imul vpcmpeqb xor sarb adc out addr32 imul add cmc cmpsb jns loop pop (bad) push jbe and rex.RB rex.RX sub lea jne mov movsl adc (bad) mov (bad) sbb lahf (bad) shl mov (bad) repz ss pop (bad) js or mov (bad) and push jge pop cmp cmp sub lods adc add imul adc xlat pop repnz mov andw (bad) jge fwait and fs (bad) addr32 pop movslq rcrb sub rex.X rex.X std mov test retq mov (bad) addr32 insb and and je test cld lret pop test scas subl cltd mov movl js (bad) addr32 add add pushfq rex.WX mov stos sarb sub sub stos mov lret insl cmp xlat movsl mov cmpsl imul sub movsb (bad) push rex.B movabs mov pop outsl (bad) or js pushfq jno sahf cmpsb mov (bad) cmc mov adc sub mov rex.WR imul pop pop (bad) sahf sub (bad) mov pop movabs leaveq pushq (bad) xchg sbb (bad) xor jo int adc lahf pop push add in add pushq adcl (bad) pop pushfq mov ss flds or or lock and lret loope rex.WXB or rex.WB (bad) shlb jbe sbb jns or pushfq movabs xchg sub pop xchg (bad) cmp retq es pop push sbb je outsb mov stc cld lods sub jno push sub int fistpll in movslq lods or out pop sbb int3 add adc (bad) xchg (bad) adc mov add mov pop scas adc or movsb nop push rex.WXB mov cmp mull lock add pop adc (bad) and adc shlb movsl jmpq pop stos movabs (bad) stos adc cmc in sbb fnstsw jbe mov jbe fcompl (bad) or xchg jno sbb lea pop push rex.RXB sbb cmp out jge jle fdivrp mov adc bswap mov mov (bad) test stc (bad) pushq ds jne add (bad) mov jl cmp mov in mov jmp rex.WRB push retq sbb cmp rex.XB cmp test movslq rex.R es loop add (bad) mov icebp pop sti cmp (bad) insl retq cmp xorb mov insl ss cmp lret sub adcl int3 jne push (bad) mov std sbb adc cmpl jb push jmpq cld vmaxps addr32 or hlt push mov add insb (bad) cld cmpl mov cmp cltd icebp mov and xor outsb (bad) sbb pop or cmp jl adc add xor test xchg fs callq mov data16 and add (bad) iret test rex.B repz outsb pushfq (bad) in and rex outsl push lahf (bad) adcl test in scas loopne hlt (bad) (bad) rex (bad) push pop movsb test mov ja rex.R enterq mov test mov (bad) mov fwait jb mov test mov cltd lret pop test jns (bad) sbb pop jo stc xor adc insb sub (bad) (bad) retq movsb test mov pushfq js lahf outsb int mov (bad) xchg jb push (bad) jnp (bad) rex.R es (bad) push xor nop mov pop orb hlt ja es mov jmp lods pop or jb mov sub cmp ds sbb jne stc rex out xchg js cmp xor push adc decb (bad) test (bad) lods mov lahf popfq mov (bad) nop outsl outsb imul test imul mov rex.B retq (bad) rex.R (bad) mov cmp mov (bad) xabort or rex.XB cli in add retq iret sbb rex.RX add (bad) (bad) mov rex.WX je jmpq pushq jle mov pop mov ja (bad) sub sub js rex.WX outsb xor or leaveq cmp mov (bad) insl movsb icebp retq (bad) add jne movabs andl (bad) movsb (bad) outsb lods sbb outsb (bad) sbb sbb ds (bad) js xchg cwtl rex.W xchg negb cwtl rex.WB sbb movslq (bad) fdivl gs rex.W pop pushq mov mov hlt jg stos rex.WB xor in int3 (bad) cwtl ss ror test xchg stos sti in repz ja cmp jns ss cltd imul cmp jb and in std insl sti cmp or (bad) (bad) ja sub pushq lret movabs ficomp test adc cld xor fsubrl xor mov or divb mov rex.RB sti jae iret imul xor adc (bad) xor clc js sbb cmp retq in retq movsl pushfq cwtl jmpq outsl rex.B mov fcomp clc push rex.WRX jno jl mov sbb rex.W rex.W rex.WRX mov rex.RB cmp (bad) xor and rex.WB nop popfq add popfq jo mov pop push cmp clc (bad) adc movabs (bad) pushq addr32 mov lock stos or (bad) push pop lret test adc (bad) and pop (bad) (bad) push in rex.R cmp pop mov jnp sbb rex.R (bad) fwait (bad) outsl mov or (bad) cmp mov jmpq fsubrp push lock (bad) jns (bad) (bad) sti or jno xchg movslq in orb rex.WB test (bad) movabs sbb xlat (bad) mov out fidivl repz fs mov mov xlat lods rex.WRX (bad) scas xchg clc imul scas leaveq xchg mov xor (bad) adc cwtl xor popfq sbb loope js xor cmpsl pop lock (bad) (bad) adc (bad) mov jno push mov sub test xlat push cli lods pushq ja fsts pop in jo add jrcxz cmc adc (bad) (bad) fdivs (bad) cmc jbe rol sub mov movabs rex.WXB jmp (bad) xlat (bad) cs sbb jbe stc (bad) push js xor xchg push rex.W es mov xchg in add (bad) fwait (bad) mov (bad) imul fstp leaveq jno (bad) mov xor imul mov rex.RX jae callq icebp (bad) (bad) or mov pushfq adc pop imul sbb add (bad) lret clc jmpq mov (bad) rex.WX insb movsl sub test in outsl andl sub repz mov mov movabs push js lock sbb lret jp outsb sbb (bad) push movabs insl sbb and lret test fildl mov xor (bad) jne in jbe int pushq jno sbb leaveq (bad) pushfq mov neg jnp sahf xchg or add mov out stc pop adc sub test vaddsubps (bad) pop lods cli adc (bad) retq jae jo rex.WR (bad) sbb and cwtl nop sbb xor rcl scas (bad) rep scas push hlt adc movl in (bad) (bad) cwtl mov push xorb lock xchg (bad) movabs adc je (bad) mov mov out cltd sub cmpsl js adc xchg lock rex.WRX cli pop mov xchg sub adc icebp jnp (bad) subl (bad) cltd (bad) jno (bad) ja ja icebp cmp jbe xor jmp pop mov (bad) divb mov pushfq pop rex.WB add rcll fisttpll (bad) adc movslq (bad) add or xor sub fildl movabs mov fistl pushfq xor or adc data16 stc fldt imul mov (bad) xor fcoml cld (bad) jne (bad) rex.B (bad) mov (bad) rclb (bad) repnz stos cwtl (bad) ss imul ja jne add cs repz mov mov pop xchg jae fldenv pop in pushfq add mov ss cmpsl (bad) sti add mov pop sahf scas cs lods insb adc loope adc enterq outsl jle std jg xchg add adcl leaveq (bad) xchg adc test lret jnp jns cmc in mov adc cmp cmc xor (bad) cli insb jae comiss scas add test rex.WXB shrb adc (bad) jb push rcrb (bad) sub xor jp sub xchg cmp jne fwait pushfq xorl data16 xchg movsb push cwtl stc add cmp sahf adc iret cmpsl and xchg xchg mov jmp in mov imul pop rex.WRXB adc (bad) xchg rex rex.W rcrl retq (bad) cwtl sub rex.RB rex.X jns lret ljmp pushq pushfq out movsb jp pop mov loope mov mov cli (bad) mov iret imulb mov pushq push sub int3 outsl test mov add outsl popq (bad) xlat mov xor pushq (bad) cld or js retq sub cs sub std xor xchg imul (bad) add iret imul ficomp cwtl push pushq and adc sbb (bad) sbb jnp rex.WRB (bad) (bad) lock out or push scas (bad) (bad) stos iret out mov mov cltd insb (bad) js adc mov mov add or test jp wrmsr jp cmp and mov adc sub adc in rcr rorl (bad) mov cmp icebp pushq (bad) push movswl movabs out cltd fist rcl jns rorl popfq ficompl jg mov (bad) out insl (bad) (bad) fstpt pop insb insl data16 and icebp test adc xor std jnp push cltd add fldl (bad) popfq out (bad) xor iret icebp pushfq (bad) jrcxz jmp sub mov cmc mov xor fs sbb mov adc and rcl jae mov movabs (bad) adc jrcxz movslq pushfq gs mov mov mov enterq (bad) jp out xchg xchg mov int3 cwtl mov (bad) jmp movsb leaveq sub mov sarl cwtl ficoml insl pushq mov faddl and rex.B lods clc scas cmp rex and push mov sbb test or fidivr add rorl pop in xor lret int3 cmp sbb retq xchg pop in (bad) and repnz ja add add sarb rex.B cmp cwtl stos push pushq leaveq imul jrcxz mov sbb ja cmc (bad) fcoms sub scas add mov (bad) imul lret movsl jne in xchg cmp mov test sbb xor es adc cs (bad) sarb push out mov add mov notb push (bad) ficomp enterq mov add clc sbb (bad) in (bad) (bad) add movabs xchg mov (bad) (bad) jl mov cmp add scas gs rex.R pop lret data16 or xchg fstl in or (bad) cmp mov adc rolb cmpsb (bad) (bad) setne mov adc rolb enterq pushfq sti in in rex.R rex.B mov ficompl outsl mov mov mov mov test add cmp add pushq outsb sbb test rex.B and cltd stos int3 ss rex.RB pop mov mov jnp jnp cmp mov fwait sub ds loopne fdivrp test addr32 leaveq lods pushq int3 (bad) imul sub scas pushq (bad) cmp jo js retq (bad) mov push movabs adc subb add outsl mov adc mov nop and stos out pop xor incb (bad) pop xor fldt lods sub sub rex.W callq mov (bad) cwtl fs rex.WB sahf rex.WR insb adc cmp out pushq or (bad) test cmp movabs adc pop sbb sbb add adc mov adc enterq sarb clc insl sub xor jrcxz,pn sub rex.WX push adc xchg test push movsl sub jno in cs jrcxz clc pop mov pop push data16 mov js sbb (bad) cmp mov cwtl mov out (bad) (bad) mov and in add xchg jns fucomi (bad) pushq sahf or sub sbb js mov insb rex.XB fs xchg imul movsb fcompl cmpsb je adc rcrb repz jle cmpsl xor pushfq enterq mov (bad) pushfq xor in xchg (bad) cmpsl outsb loop pushq jns sbb (bad) sub mov test xor mov je mov add enterq sar mov fcoms or gs test subl pushq sub sub pop add shrb stos pop sti in outsl retq jo mov andb adc cwtl cltd or stos scas xchg fisub pushq popfq mov scas loope imul or or lea xchg rex.WR (bad) loopne pop adc pushfq (bad) adc je (bad) stc vmovdqa adc push movsb outsl pop (bad) enterq int sub and mov decb out mov rex.B fwait maskmovq divl fsubrs xor push mov (bad) (bad) xchg xor (bad) jmpq (bad) adc mov cld (bad) out and xor (bad) lahf xlat fcoml cmp and xor pushq mov jg add icebp cmp test mov xor fcoml (bad) shrb fs fistp or add rex.RX xor and sbb rex.WR jns lahf pushq pop fs outsb rex.X in leaveq or sahf mov subl and stos adc je enterq lret adc retq outsb lea test adcl jae scas movsl out jns adc fs callq loope std fwait lea fsubrl fdivs enterq lods in mov pop retq rex.WB stos rex.RB mov std (bad) add cwtl outsl add lahf (bad) add scas fcoml out push out (bad) fnstsw cmp jae add cmpsb movabs mov movsb adc (bad) rcl jns mov (bad) mov adc add cmc sub or xor lods js mov adc (bad) cwtl pushfq sti out out jl mov rex.RX (bad) fs mov imul or imul in jle movabs cld andl or (bad) in mov jl and jmp stos scas out sbbb in leaveq add mov cwtl imul rex.RX movabs (bad) lahf push (bad) (bad) jo (bad) insl out (bad) rex.W (bad) lea ss jmpq fist sbb (bad) push lods xor jne (bad) mov mov test xor test lock imul mov jns (bad) mov rol jmp (bad) add add out lods (bad) xor (bad) mov in int in in mov jno callq (bad) loopne adc pop cwtl (bad) (bad) (bad) mov (bad) fadds xor or fidiv add in test jl sbb mov cltd adc movabs test mov ror cmp xchg mov scas enterq lods repz pop cmovns lret callq mov retq jne xor test test jno push sub jns xchg jle fisttpl (bad) mov mov movsl scas fldl imul pushfq or or outsb jle scas mov lret jae pop add rex.WXB ds lods (bad) addr32 fstps pushq divb gs jb enterq mov fldlg2 sub div mov movzwl (bad) sbb (bad) rex.WRB pop lods insb (bad) (bad) (bad) ja mov (bad) leaveq adc and pop rex.RXB outsl mov js loop fwait mov sub (bad) cwtl loope (bad) cmp (bad) je sahf (bad) negl mov adc (bad) cwtl and (bad) test or cltd (bad) movabs imul mov mov (bad) hlt (bad) mov add lret gs cmpsb insb adc rcrl jne (bad) test jbe movsl insl lret test xor (bad) cwtl jns fidivr loope adc sbb rex.WB rex.WRX rex.WB fisubl pop nop enterq and rex.RXB jae shrb fidiv js xor pop and jge mov sub mov pushfq fbstp mov ja (bad) xchg rex.WRB pop pushq rex.RB scas (bad) push movabs gs mov pop loopne (bad) xor sbb int3 in adc ja mov cmpsb ss stc (bad) rex.R (bad) mov jg callq adc adc stos cmp (bad) jne,pn movabs js jmp mov jne mov ss adc out lods incb js (bad) adc addl in xchg (bad) (bad) lods cmp jb rex.R rex.WB and (bad) xor xor jmpq cmc cmp mov xor jb js js mov fldt pop js (bad) (bad) pushq sbb ficomp outsl stc callq xlat pop mov sub imul jbe jl xchg xchg imul movabs (bad) movsl (bad) movabs movabs cli adc mov out (bad) lret jne cmpsl es sti jmpq callq mov adc (bad) movsb data16 jns (bad) callq jo sbb leaveq jg jmpq roll nop (bad) cwtl outsb sbb (bad) outsl jnp test test movabs sub (bad) (bad) cld sub adc sub and xchg (bad) pushfq and in adc mov shlb rex.XB insb pushfq jg movsb xchg add xor jbe pop fimull (bad) sbb pop (bad) jae xor push mov icebp add test mov push mov mov rex.WRX pop imul sbb pushfq (bad) pop test jmpq jne jp (bad) mov jrcxz adc xor fiadd (bad) adc rex.R jo sahf outsl mov mov callq std stos movabs or rex.WXB ss jle rex.WRXB xchg sub xor add cmpsb or (bad) test jle (bad) out adc or or xchg (bad) lahf iret mov xor es and (bad) rex.R repz add mov or xchg or add (bad) xor mov push or pop (bad) (bad) movabs rex.B out (bad) lock pushq test mov movsl cli out xchg movaps (bad) repz out push mov add fdivrl add jno movsl fldcw (bad) xor fsubl cwtl rex.W add test mov and movsb fwait adc mov jbe or sbb mov or xor movsl (bad) mov icebp pop lret fsubrl mov (bad) lods insl xchg insl fcomi cmpsl imul jb (bad) rex.R lret test mov sub mov stos movsb test xorb nop cmpl mov (bad) mov movsl sbb lods adc mov movsb std movabs cmp stos adc leaveq (bad) out jnp imull cmp stos rex.WR cli imul leaveq lock lods and fcompl movsb out (bad) movabs mov enterq movsb cld movabs int mov mov enterq cs mov cltd add ffree stos fistpll or xor popfq loope js in in mov xchg fsubl (bad) in imul (bad) test xor mov (bad) movsb mov xor lock (bad) (bad) fsubr xlat rclb fsubrs sahf imul or sti ds test adc add in imul or rex.RB jno insl fcompl jno mov mov adc movabs xor rorb mov or sub pushfq clc cmc outsb jno mov leaveq add faddl sbb imul cmpl rex.XB or xor cmp retq fcomps lret in subl mov clc callq push jl lret outsl retq jmp rex.WRB (bad) xlat out std add cmp (bad) cli (bad) xchg insb (bad) fsubrs jbe jo (bad) imul std mov add rex.R movabs mov jns sub test js (bad) movabs retq int adc mov (bad) sbb push mov sbb xchg movabs out popfq (bad) pop (bad) (bad) (bad) subl shrb fmulp lods pop icebp insl ss (bad) movabs add or (bad) je rex.WRB and (bad) sub enterq mov xchg pop jp fistp pop (bad) xchg push fwait (bad) add (bad) fdivs jb mov rex.XB rex.W (bad) mov fidivl pop ja retq gs jrcxz or insb jl xor mov jns fucomip fcompl jmp add (bad) add pushq stc jo fs leaveq pushfq (bad) rcrb rcrl ss movsl (bad) movslq (bad) mov adc pop repnz or (bad) rcr rex.RX fs roll (bad) and xor xchg jmp callq mov rex (bad) (bad) (bad) pop pop es ds clc push hlt (bad) ror or fwait sbb rex.XB fwait movabs jae cwtl (bad) mov jl sub stc jno mov mov outsb mov fstps movsb add idiv mov iret pop mov add jl or and xchg fnsave pop rex.R fwait leaveq pop add mov (bad) fnstsw mov rex.WB outsb sarb test in rcrb xor cmp jb popfq lahf fwait (bad) repnz adc jns (bad) out xlat cmp (bad) sub shll int3 cmp xchg gs jl std jp loope hlt and push jrcxz mov mov movsl lret rex.RX pop shlq xchg (bad) fdivrs negl movsb in pushq or (bad) jmp syscall or movabs jno sub (bad) gs sbb add jo (bad) js adc out out add xor mov int3 js lahf imul cmpsb leaveq adc (bad) jg and push clc mov rcl adc mov (bad) stc enterq out loope pop in insl rex.RXB xor rorl lret cmp callq xchg (bad) cli ja (bad) lret (bad) jb jbe mulps xchg xchg (bad) rex.RB adc xchg rex adc cmp (bad) sbb push cwtl in mov test insl (bad) sub add callq retq add mov lahf stos insl mov test movslq (bad) cli hlt rex.WRXB retq jns int adc add mov scas sti jrcxz out stos mov xor sbb (bad) sti (bad) sar cs cmp mov pushq (bad) xchg nop movabs (bad) stc (bad) jnp (bad) (bad) (bad) (bad) push movabs movabs mov je push outsl adc mov (bad) jle xor jrcxz add xor (bad) jno sarb ss jae test pop (bad) jmp xor in jbe je xor popfq jno cltd ficoml (bad) (bad) mov and mov or pushq mov insl (bad) gs in (bad) add xor movabs pop lahf retq hlt mov repz fdiv scas pop xlat test push pushq test sahf cltd (bad) jbe test mov push (bad) out std mov sbbl cmp lahf imul jmp cmp mov ja jrcxz fs rex.WR or mov insl xchg movabs pop hlt mov shrl fsubrl retq mov out mov or sti loopne or int3 in add in lahf out (bad) rex.RXB int3 vmovaps rex.R adc jne (bad) callq test jae fdivl (bad) nop (bad) pop mov xor add callq fs xor ficomp mov adc rex.WRB add xor mov jge jne (bad) (bad) xchg xchg lahf mov in xor cld (bad) jno rcr or fsubrl sub jb push rex.WXB stos je (bad) mov xor insl jns int gs add adc or outsb scas pushq jns movl jbe out xor stos (bad) (bad) outsb xor testl cmp lea sbb iret (bad) xor fiaddl mov rex.WXB (bad) cmpsb rolb test xchg jo ror out (bad) in add mov fs enterq (bad) stos out xlat test add cwtl mov (bad) insl out xor xor in push and imul add sub fcoms loop or cwtl (bad) std (bad) stos hlt (bad) cwtl adc or mov sti fldt push mov sbb pop adc (bad) lock (bad) fistp fimull scas int sti mov jne and (bad) out sbbb (bad) scas test je and test (bad) adc mov (bad) test pushq insl rex.B (bad) fnstcw jmpq jp (bad) out outsb sub and sbb std xchg movsb icebp notb callq in adc push fdiv cmp cwtl mov (bad) cmp fcomp jg scas mov mov movsl enterq int3 loopne jo out jae gs enterq add cs movslq in cmp enterq jne loope (bad) (bad) mov fisttp (bad) sbb enterq mov mov (bad) jb sbb pop fnclex fidivr ss sbb fisubl sahf jrcxz imul and mov sar or mov loope cmp cmc (bad) shrl movabs xchg movabs retq sahf lock idivb jp imul xchg lret add jle cs sti outsb push rex.B add xchg push sbb loop scas rcrb adc pop push cwtl rex.RX jne (bad) shlb rex.B repnz (bad) fbld jno jae popfq and sbb rex.WRX test je sbb rex.WRXB sbb int3 in (bad) xor (bad) (bad) rcrb sahf shr jbe ss push (bad) (bad) callq mov push push mov add jnp add out xchg int3 jns cmpsb (bad) in pushfq cld mov adc std jb iret cmp stos (bad) jbe xchg lock out add in (bad) adc movsb cmp cmpsb (bad) popfq adc (bad) std sbb (bad) sub vfmsubadd231ps rex.RXB rex.WX push mov sbb sub add retq mov rex.WR mov cwtl and test rex.WRB mov sbb mov jrcxz insb rex.B (bad) xchg (bad) mov movsb sub in adc mov adc cmpsl jge outsb and stos (bad) pop (bad) (bad) ss movabs mov test mov test adc (bad) pushfq popfq (bad) add shr sub push (bad) adc loope (bad) xor sbb or sub es pop jle sub loop out loop push imul (bad) mov mov jns stos (bad) add mov mov pushq sub jno loopne mov js jns insb enterq xor mov imul sub movsb iret rex.RB fsts jno in stc mov mov (bad) cs cmp rex.WRX int3 rex.R mov pop fcoml and (bad) (bad) in pop mov cmp pushfq jns cs jb sub jnp rex.RB sub out in fistpll rex.RB imul cmc adc leaveq ds lea insb push push jae pop (bad) jnp outsl test (bad) movabs pushq (bad) mov sub pop jl pushq sub jp sub cmpsl xchg lahf adc cs imul imul pop mov jmpq (bad) in test int3 add (bad) cwtl shrl stos push and (bad) js test cmp pushq cltd vpunpcklwd ss fs fwait (bad) (bad) rorb jo sub add and movsl lahf add js stc xor je outsb rex.WRXB mov adc je mov push mov jle enterq pop jp sbb (bad) (bad) ficompl sahf scas add jo jno out enterq (bad) (bad) mov (bad) mov mov out cmp je mov add sbbl je lods fild pop loope out pop mov insl adc pop (bad) lahf gs xor lahf test stc add shrb xor cwtl (bad) mov rex.XB (bad) jne and mov imull adc nop repz in decl rex.B in (bad) adc je lea outsb subl rex.RXB xchg pop xchg cmp in movsb cmp jmp out xor (bad) lock adc sbb mov xlat ljmp insl (bad) fwait sub xor fisubr (bad) mov rex fiadd (bad) jmpq (bad) adc cwtl jns loope xchg and scas sub and insl rex.XB js ja rex.WRXB cmp mov (bad) jle cmc movabs in xchg mov sbbl jo lock outsb mov or push in stos hlt mov out (bad) std xor fwait testb fisttpl adc (bad) add cltd insb out jle cmc rex.RXB jb (bad) out int mov pushfq in jnp (bad) push out jmp adc cmc int3 shlb jmp (bad) outsl or push mov mov (bad) mov and add in (bad) (bad) cmpsb mov leaveq (bad) mov data16 sarb mov cmp sahf test add add enterq sub jo in rex.WX add (bad) mov sub rex.RB fwait cmp mov fcmovnbe push hlt sbb cld and std jg rex.WR xor js test lods xchg cmp rex.WRB mov stos imul movl sbb (bad) jb cmp add xchg and (bad) pushq (bad) fstpt sub fstl movabs cmp pop out mov rex.XB xor stc (bad) pop in cmp (bad) rex.WB xchg test rex.RXB movsl sti in fdivrl mov xchg push jnp and pop add out cwtl fstl sahf (bad) in out and sahf (bad) cwtl mov jne pushq jns and cs movsb rex.WRB cmc rex.WB scas (bad) mov rex.WX push in cmpsl (bad) test jbe mov and rorl jmp pushfq incb jl (bad) test fnsave cmp sbb movsl jns int3 cmp (bad) addl jno cmpsl retq xorl mov stc fcmovb sahf cmc pushfq cmp mov (bad) (bad) rex rex.W callq popfq mov (bad) (bad) out cld mov mov push xor (bad) loop movsl cmc stos in je (bad) xchg cwtl negb rex.W sub jmp cwtl sub (bad) (bad) (bad) cmp rex.B or pop nop (bad) jno sbb (bad) mov rex.RXB lods mov decb lods rex.WXB (bad) (bad) fidivl mov (bad) stos je mov test sub movsb cld sub rex.WX js or or jle mov jl popfq outsl insb jns (bad) (bad) (bad) rep push push scas enterq jne (bad) (bad) mov lea xchg fildll add out mull mov (bad) int3 add retq sbb test and jp sarb js pushq scas cmp imul repz (bad) xor movabs mov sub icebp fwait retq mov stos jae sbb insb cmp jns test xchg rex.RX xor push movabs xchg mov sub or rex.X sub (bad) mov scas lea mov imul pop (bad) cwtl adc outsb pushq (bad) cmp fwait pop mov outsl (bad) movslq int3 test (bad) mov sub xor mov adc adc (bad) mov (bad) je mov adc movsl movsb cwtl in scas pop callq and lret repz insb jno lret cld popfq test mov retq jge js xchg rcr jno lods xor jmp mov cmp add add fnsave sbb rorb popfq (bad) xchg sub loop mov scas (bad) lea and xorb mov jo mov rex.WXB mov ja movslq insl pop xchg fcompl rex.WB mov pushq mov mov iret (bad) mov (bad) ja test cmp jge repz fisttpl in adc push (bad) mov rex.B fwait sbb insb mov jnp movsl mov mov pushq pop jne mov lahf and lret xor adc (bad) mov adc (bad) xor mov (bad) imull (bad) mov xchg lahf xchg test xor sarb mov stc out sbb movabs jbe cmp pop add sbb pop xchg adc iret out fdivrp loop test mov jne (bad) (bad) movsl leaveq mov ja ja out stos or mov data16 push leaveq callq and iret xchg xor fwait out pushfq scas callq xlat xor (bad) jrcxz (bad) fistl sahf rex.RXB cmc int3 (bad) rcrb out fcompl cltd or clc repz leaveq (bad) idivl lahf xchg sub mov xchg rex.WR test popfq jb jno rex.WRXB (bad) cld sub fstpt jb pop (bad) (bad) movsl adc push or ficom in fwait mov rcrb (bad) (bad) out mov out test mov popfq in (bad) out pop fucomi jbe (bad) push es fwait in rcrl je in (bad) sahf (bad) out fdivs and and lea and mov fs ja mov pushq jne fcompl mov leaveq mov leaveq jae rex.W je xor sbb adc mov mov loope je std dec rex.W xchg out sbb xchg (bad) iret ja mov mov orb cmp cwtl xor icebp cmp out ja mov and adc movslq sbb mov mov cmp sarl (bad) imul jne lods leaveq pushq (bad) out pushq out fwait mov add pop lahf callq adc repnz outsl shrl mov mov adc movabs iret mov jl pushq in mov js rex cmp lahf fistpl (bad) jae adc sbb or xor add and xchg lahf shrb rex.X lock repz adc (bad) pcmpeqb add mov (bad) pop push jbe test pushq hlt jmpq ficomp lock xor mov repz lods hlt xor std rex.WX std adc hlt pop pop lahf sub mov mov (bad) pop sub (bad) mov movsl jne int callq callq cmp add sti jno rex.WB je je or test mov push jno add add cmpsl rorb pop sub cmc pushq lret js scas int jmp movabs lahf (bad) add (bad) xor pushq push insl cmp mov or rex.WRB es movsl pop and jae insl pushq rex.RX cli (bad) rex.RX adc push mov std in enterq jns rex.WXB pop xchg push (bad) test cmp test (bad) lret (bad) sbb pop sbb imul movabs xchg flds sbb movsb xchg or xchg (bad) in fidiv pop sarl imull cmp imul outsb pushfq cmc (bad) pop (bad) jmpq insl test (bad) hlt in lahf jg insl cld (bad) mov rex xchg je nop retq jle lods jne adc imul fs (bad) mov or rex.WRB (bad) movabs orb lcall jns pop movsb out test mov xchg (bad) insl sub pop (bad) (bad) mov jbe jb xor fbld mov mov je (bad) sub scas mov fstpt mov stos xchg mov jp (bad) (bad) mov (bad) jne (bad) mov mov movsb test in pushfq fwait sub pushfq sub pushq addr32 (bad) push pushq (bad) hlt sub scas repnz test stc pushq sbb in imul mov jle mov (bad) loopne insb int3 insb leaveq (bad) jns pop adc insb (bad) jmpq jle jns movabs sbb and movslq cmp mov sahf movabs or cwtl cmpsl or movl rex.RX (bad) (bad) sub fldcw sub rcrb lea mov popfq xchg or pushfq jrcxz (bad) mov mov fsub adc rex.RXB insb (bad) adc icebp (bad) adc test in xchg int3 int (bad) lock mov (bad) pushfq adc sub cmpsl (bad) rex rex.WX lret mov icebp imul fdiv and imul mov adc (bad) pop sbb (bad) xor data16 cmp outsb movabs outsl mov pop sbb lock in lods (bad) loop (bad) mov stos or movsb lret xor pop (bad) jbe and divb mov and test (bad) mov mov mov out imul cmpsb (bad) fcomps test pop repz and sub (bad) sbb int3 jbe addr32 cmc hlt repnz add movslq (bad) mov rex.WR ja pushq scas in ja jno (bad) mov movabs (bad) jns (bad) hlt sbb xor fimull pop xor xchg rex.RB adc mov mov push or int3 fdivr mov callq leaveq outsl test add repnz lret pop rex.RB divb stmxcsr std sbb iret mov sub xchg or pop sahf repz test adc rex.WX pop es (bad) lods cli shlb out (bad) insb adc out ja sbb fwait (bad) (bad) (bad) movsb insl xchg and in sub rex.RB rex.WR (bad) pop xchg lret cmp sub (bad) in stos cltd movabs (bad) (bad) and xchg jbe rex.WXB outsl mov addb sarl stos adc (bad) insb (bad) mov adc xor mov sbb push xchg (bad) rex.RB cmpsl (bad) (bad) pushq adc adc rex.WRX pop sbb mov pop adc icebp rex.B (bad) sub test (bad) out mov jl jne fistl sub push rex.RB (bad) outsl and jae mov (bad) pushq in fisubrl pop outsb lods (bad) mov fisub jnp cld test cmpsl adc mov sar subb mov retq (bad) adc fstpl add (bad) gs pushq test (bad) movslq gs imul sub loope sbb test xor (bad) lock pop test add sub fsubrs subl adc mov add pop rex.R jno fidiv mov fwait (bad) jmp int3 out fidivrl xchg jg mov cs test imul (bad) cmpsb jo int imul pop pop adc hlt roll (bad) (bad) jns iret (bad) lods callq std (bad) pushq mov and (bad) sub pushfq sti add (bad) in mov test mov retq push xchg jrcxz divps sub sub jns movabs and mov rex.XB and (bad) lahf adc rex.WRXB (bad) mov callq and xor ss pop xor cwtl mov lock xor jmpq (bad) (bad) addr32 sbb clc je or adc add sub adc rex.WR fwait (bad) push xchg sbb movabs jmp xchg (bad) rex.WR lods mov sub pop xor ficomp mov js xlat sbb sbb cmpsl mov loop sbb mov in mov xor pushfq hlt jmpq lods pushfq stos adc invlpg (bad) mov rex.XB (bad) pop rex.RX frstpm(287 orl sbb mov add rex.WRXB sub movsb adc mov push mov fadd mov mov mov pushfq test cmp movsl mov shll leaveq mov loopne ss in mov (bad) imul mov xor iret push sbb test jmpq push pop sbb mov pushfq or add movabs int (bad) shll pop cld sub std jne or int3 sahf mov (bad) test lahf fisttpll sbb jl sub clc (bad) mov outsl ror imul and sbb fsubrp fs or (bad) (bad) lea cmp rex.W rex.B rex.WB movabs es jne mov int3 lret sbb sarb adc mov (bad) rex.RX stos xchg insb sub or add int xor (bad) mov ss (bad) jl (bad) pushfq cwtl mov xor stos xchg in or or sub loopne (bad) cld (bad) imul add es jns mov sub (bad) neg test add insb hlt (bad) mov fwait xchg imul in xor scas sahf mov (bad) mov shrb rex.RXB hlt add push fs rep rorb sbb mov lods lock popfq rex.WR gs rex.W (bad) push cwtl mov rex.WRX push mov js (bad) stc (bad) mov lahf or fsubrl mov out pushfq stos std mov mov mov sub rex.WRX push jl (bad) insb cmp xorb outsb insb pushq xor or cs pushfq sbb pop fcompl xchg cmp frstor mov mov fldcw adc (bad) fwait add pop lret pop mov js mov pop push lods gs sbb loope (bad) scas (bad) movabs cld mov xchg jmp jns xlat mov std rorb xchg cltd mov insb pop fisttpll ror icebp out fs jns mov cmp cmp (bad) loope popfq (bad) mov int3 popfq cli loopne std lret pop rex.WR rex.WXB rex.XB out ficomp (bad) fmull enterq pop imul pop adc fs xchg pop callq mov pushq test lret cld sub data16 mov lods add xchg (bad) decb add mov pop sarl cmp mov (bad) pushfq cwtl rcrl adc fidiv icebp mov mov add sar rorb or fadd cld cld callq clc movslq mov jo int3 sahf pop cmp adc or fldl outsb cmpsl pushfq (bad) hlt sahf rex.WRXB stos jns cltd lods xor jrcxz (bad) mov movsl mov test mov movsl in leaveq xchg push jg xchg or in addr32 pushfq pop jo mov add mov (bad) callq xor xchg adc in ja int3 std jl add mov push (bad) fimul rex.RX rex.RX rex.WB mov cmp scas sub adc mov fmull lret mov xor in cmpsb rex.WXB cmp xor jl adc sub nop ds and and jl jl scas xor in push pushfq outsb pop iret cwtl rex.W mov adc (bad) loopne clc (bad) (bad) or pushfq outsb cmp fsubr xor callq mov mov pop (bad) rex.WR in ds popfq mov outsl or clc lahf insb rex.WRB in mov mov insl cld gs mov (bad) fildl pushfq or sbb jl and adc pushfq adc xor pushfq mov adc pushfq sub (bad) mov pushq sub (bad) test (bad) in stc xor mov int3 mov pushq rex.WRB (bad) cmp lea jno xchg movsl mov (bad) adc adc xor mov or add mov outsl xor (bad) stos mov cmc movabs jmp hlt rex.R out sub iret in mov mov outsb or ss sub cmp or add (bad) mov jb cmp pushq scas (bad) push rex.WRXB rex.WRX adc (bad) and jle in std mov callq push pop jp test lea out mov (bad) addl movsl movabs mov fs je out and rex.RXB loope sbb test mov mov leaveq (bad) rex.WRB mov adc retq popfq rex.R pushq (bad) add xor and mov cmpsb mov pushq retq (bad) (bad) add sub popfq adc mov or (bad) fidiv enterq cwtl cltd rex.WX (bad) out mov rex.WRX pop (bad) movabs out pushfq mov mov cmp loopne movslq jne loopne movabs jae outsb sub fildl mov rex fild (bad) movabs xchg loope (bad) int adc jge hlt movsl cld je xor (bad) leaveq mov sahf cs rex.X xchg rex.XB out (bad) ds mov (bad) add jle sbb adc lods je shld add bsr cmp mov shld adc add add and mov stc test jmpq add rex.W gs jo jb add add gs je rex.RB outsb je add and cld callq fdivs neg bt rcl add setbe jmpq sub bt test cmc pushq stc test clc cmp jmpq mov not movzbl mov not mov bswap lea mov movzbw jmpq jmpq add cmp rex.WRB repnz jl test xor pop mov mov xchg jp jnp adc (bad) std (bad) (bad) movsl rex.X pop or and mov jp or (bad) outsl (bad) hlt mov (bad) sub (bad) stos mov mov xchg (bad) (bad) (bad) (bad) xchg stos (bad) (bad) lret pop jnp loop fisubl xor (bad) scas (bad) retq (bad) adc retq pop and decl xchg sub sbb adc jrcxz jnp push clc sub (bad) add lea mov pop out or jmpq add push je jb push gs imul icebp mov and mov loope cld hlt (bad) cmc movsb (bad) push jnp in fiaddl jrcxz adc in loop dec in fldl2e test add or stc jb mov jae mov xor outsl retq clc pop and cs fmuls sti sub int push add xchg or pushfq adc std movb pushq mov rex.WRB test pause lods jmpq or fisubr (bad) stos imul (bad) cmpsl repnz lods pop (bad) outsb push push xchg imul clc clc (bad) adc and sub lea cltd mov xchg xor (bad) movabs fs cltd (bad) (bad) (bad) std (bad) out adc insb sbb add add in sbb jo std sub jo je rex.WRB loope cmp add jp lock push (bad) test faddl mull cld push sub pop and fstpl rcl in push ror add scas test (bad) mov cmc movabs outsl push jge loopne retq (bad) xor (bad) jnp pop andl (bad) out fcmovnu rex.WB fmuls stc popfq mov sub adc movsb jge rex.WB pop xor and mov clc stc rcrb (bad) pshufw mov jnp,pt cld lods loope in ss jno sti sets (bad) (bad) mov repnz cmp mov cld stos or (bad) jnp sti and (bad) rex.W repz sarl (bad) pause (bad) je incl js ss (bad) stc je,pn (bad) xchg int3 add (bad) repz movabs jb out (bad) xor cmp or xchg add adc je scas jl add cmp pushq xor movabs (bad) lods and mov jnp lock adc (bad) movsb cltd callq nop cltd lret lret pushq mov push popq jle jmp movslq nop jg add lahf out lret xor enterq rex.WRB cmpl rex.WB fildl and push sti add scas movslq jnp add jnp add clc in or jg pop (bad) rex.WR popfq rex.W rex.XB rex.WRX sbb sahf rex.RXB mov cmp fisttp std or (bad) pop addr32 jg pop out jle rex.W jnp pop jbe (bad) push jmpq movsl int3 (bad) pop sbb (bad) and sub jmp addr32 (bad) (bad) xchg (bad) xor cmp popfq add int3 data16 push add mov mov setbe lods clc add jae cmc stc bt neg jmpq jae xor mov movsbw stc mov mov and btc mov test bt bt clc sub cmp jmpq jmpq callq jmpq cmp cmp test test jmpq callq or rcl add and bsf sbb dec mov test cmc bt cmpb jmpq add rex.RXB gs outsb jbe jb outsb insl outsb je je imul (bad) (bad) push sub clc repnz jmpq add rex.XB (bad) je push outsl outsl insb pushq xor (bad) jo pushq shlb add mov shrd cmp ror mov rcr movsbw btc movsbl mov cmp stc xor cmp stc repnz jmpq add push gs imul je bt cmc jmpq pushq jmpq callq jmpq add push gs (bad) jae rex.RB outsl jb jae mov mov cmc bsf btc mov shld mov bt test jb test sub clc cmc bt cmp repnz jmpq not not jmpq add rex.RB jne rex.R gs je jo imul add rex.RB je jb jb je movslq push movslq outsb add add addr32 (bad) je rex.WXB gs add sar shr pushq add je mov setne lea movzbw mov mov movzwl movzbl lea mov movsbw mov jmpq cmp jmpq lea jmpq add rex.R gs gs push gs imul cld (bad) callq clc cmc add movsbl mov cmp cmpb jmpq add rex.R gs gs rex.R rex.XB xchg popfq std (bad) clc shld rol sub jmpq add rex.WR rex.RB jne gs je rex.WR outsl outsb push gs imul clc stc add jmpq add rex.B insb outsl movslq rex.B rex.WB imul push imul cmpb jmpq jmpq add jmpq add rex.XB insl jo jb push je imul test add cmc sub jmpq add push imul jb gs add rex.WRXB outsb push gs imul pushq lcall jo (bad) (bad) mov (bad) iret rclb add icebp test enterq pop movslq fstl fnop (bad) out mov (bad) (bad) jae sub mov (bad) mov hlt mov jnp imul mov cmp js (bad) stc cmpl int add jne mov (bad) mov (bad) std mov (bad) jg add add cs or notl fwait mov (bad) rex.WR (bad) jmp jge xchg jae stos nop not rclb rex.WRX rex.WRXB xchg rex.W push cmp sbb cld push icebp sahf mov repz je mov adc jno sbb gs callq add je gs gs rex.WRXB pushq movslq movslq imul bnd mov iret inc inc mov bt cmc test add cmp movzwl bt mov mov test test jmpq adc jp callq jmpq jmpq jmpq jmpq add rex.XB (bad) je imul gs outsb je imul insb add adc movsl clc mov bt test clc shl jmpq add imul test add jmpq cmc test jmpq callq movzbw add btr clc mov cmp jmpq ja cmp rol ror sub ror setle add movzbw mov shl mov cmp clc test bt repnz jmpq add push gs pushq rex.R gs je jo cmp jmpq callq inc add bt mov jmpq jmpq jae jmpq jmpq add rex.RXB gs imul movslq mov orl cld callq enterq stc mov not rcr add not mov setnp not mov jmpq movb bt test cmc test jmpq jne rol and mov test cmp or jmpq add rex.XB rex.WB imul add mov sub cmc clc clc repnz jmpq jmpq callq test bt clc cmp or jmpq cmc clc cmp neg jmpq test jmpq jmpq jmpq add rex.WB jo jb outsl outsb (bad) je rex.WR addr32 push jae jb mov jmpq not lea xchg xchg mov jmpq jmpq add rex.XB rex.XB (bad) je rex.WB jae (bad) outsb movslq (bad) xchg js pushfq nop xchg fiaddl mov (bad) clc (bad) jns jae loope (bad) jp jge add movsl cwtl rex.WX xor xchg icebp frstor (bad) insb push lods sub nop adc (bad) lods (bad) lods pop out in out out mov retq movsl fidivr add sbb add cvtdq2ps (bad) sub (bad) cmp es ja in (bad) (bad) data16 in (bad) xchg enterq gs or insb or (bad) (bad) decb (bad) (bad) (bad) (bad) xlat fdivl cs cmpl cli scas (bad) or clc adc icebp rex.WRB retq out xchg push xchg jbe adc pop (bad) push (bad) push rex.X test (bad) or (bad) (bad) mov (bad) std jge pushq rex.WX ss cmp sub (bad) lock xor cwtl movslq (bad) pop jle or xchg (bad) mov pushq mov xchg mov retq imul out (bad) mov and (bad) (bad) out xlat sub lret (bad) (bad) mov cmp and sarl rex.RB push sub mov xchg xchg idiv outsl push rex.WR sbb rex.WRB or lahf sahf rex.XB adc test mov lret scas insl xor in sbb or (bad) cmpsl (bad) (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) xlat stos cmp fwait mov outsl repz (bad) xchg and or (bad) (bad) fisubr mov sub push rex.B jle (bad) imul sub loop mov (bad) xlat js cmpl sub pop adc cmpsl (bad) rex.X (bad) mov callq pop xchg (bad) cld xlat out (bad) mov xor xchg adc (bad) add add mov push or add or (bad) mov (bad) (bad) test divb sbb insb mov (bad) jnp imul out retq sub jns xadd (bad) (bad) sti mov mov retq jp fldenv stos addr32 and (bad) cmp xchg xchg out imul (bad) mov or movslq or and mov mov loope addr32 rex.R rex.RX rep jo in insl xchg repz and rcr jns sbb sbb rex.X add push imul jb je movslq (bad) jo (bad) jmpq (bad) xor repz sbb mov rex.WR je sub repnz in (bad) rex.RX cmpsl sti lock sbb mov fst xor (bad) jb imul jmpq lret jb ja imul lahf xor test (bad) (bad) repz icebp cmpsb adc xor and scas faddp (bad) lahf and test (bad) rex.WRX xor jae mov rcl pushfq add sbb pop and (bad) (bad) std or pushq incb movabs mov movslq add add outsb cmp (bad) xor test insb (bad) outsl retq movabs jl jno mov (bad) (bad) lock pop sub jle cmp mov jbe movabs or push jmpq lret movabs (bad) add rex.RX jne movslq js add test xchg std (bad) clc movzbw cmc sub mov ror rol jno xor sub cmc movsbl test bts mov clc sub cmc stc stc test pushq cmp bt clc cmp cmp jmpq add rex.XB insl jo jb imul jbe sub xadd sar mov adc bsf sar sar add adc mov rcr neg stc add bsr movl btr bt inc sbb mov jmpq out push jge testb jae sbb cmp test push and rex.WRX (bad) cmp neg or push rex.WRXB clc cwtl rex.XB sub in (bad) stos movabs ja mov (bad) mov lahf clc rex.WB and mov cld imul int3 loope lock sti outsl (bad) pop mov lock sub iret loop lret icebp sar (bad) (bad) decb (bad) (bad) (bad) lcall pop rex.X rex.RX es imul adc (bad) push rcr (bad) xchg xchg outsl or (bad) movabs mov rex es lret (bad) rorb nop mov sar xchg scas fwait mov push rex.WR add movslq fucom (bad) (bad) je stos add out cld fs cltd scas push rex scas mov and mov mov insl (bad) adc and stos and lret or cmp or mov movsb and neg or fwait rex.RXB sarb rex.W stos or fisttpll fldl and mov movabs sub es mov jmpq (bad) (bad) movabs fsubrs cltd test (bad) sbb lret test (bad) retq sub (bad) (bad) (bad) decb (bad) (bad) (bad) lcall movsl or rex.XB xchg std pop cli add jrcxz rex.WXB sbb test pop cmp add (bad) pop movslq vrcpps (bad) shrl rex.XB xor jg xchg push (bad) (bad) in (bad) jg mov or pushfq add sub sbb pop jmp add jb lret xchg cmp (bad) jle rex.RXB mov cmp sub (bad) sub movslq mov jmp out in retq bndstx lret mov (bad) fcmove in leaveq cli (bad) rex.RB movsb outsl xchg jns fstpt retq sub mov add add (bad) add cmc cmc add add or push (bad) (bad) (bad) (bad) (bad) sti mov repnz icebp xchg test mov out retq data16 xchg mov cmpsl (bad) out mov fildll mov jl test (bad) and (bad) rex.W rex.RX data16 ja rorb pop jns adc je stos lret movsb mov outsl movabs push retq (bad) jp int3 jmpq pushq jmpq add rex.R jae insb jne pushq insb jbe jb (bad) movslq add test add jmpq xchg movabs lods (bad) mov rex.WX cmpsb mov callq push cmpsb rex.RB sahf sar rex.RB xchg push rex.WR imul cmp pop loopne lahf mov xchg mov fidivr cmp cmp xchg push (bad) (bad) (bad) std (bad) xor (bad) adc (bad) (bad) push callq (bad) or (bad) (bad) movslq fwait sbb jbe (bad) rex.RXB roll retq or jl rex.R xor std jb (bad) add push sahf or cmpsl hlt ja jo rex.XB movabs jo lods (bad) xchg jnp sbb cltd (bad) and rex.WXB je xor fbstp mov jo movsb xchg add test add cmc cmp sub stc cmc cmp jmpq jb clc jmpq add rex.RXB gs (bad) jae rex.RB outsl jb add rex.R movslq gs outsl imul movabs mov pushfq jae or cmpsb movabs out sub or (bad) sahf push push xchg je adc sub cmc (bad) add rex.WX xchg ds insb or sbb xchg nop rex.XB mov jae retq out and fnstenv mov sub repz push out fwait adc add jp sbb (bad) (bad) (bad) decb cmp movsb mov int3 rex.WX rex.WR mov mov sub add icebp (bad) pushfq out mov or fildll rex.W (bad) sub (bad) (bad) (bad) pushq pushq rex.WRB in andl xchg mov out xor push (bad) mov add ja hlt clc xchg (bad) mov xchg icebp (bad) push xor jbe push jl add clc push push jmp mov jb jne rex.RXB shr mov cmc stc or jmpq add push gs outsb rex.WXB gs add std (bad) jmpq jne rcr xadd mov clc sub bsr xor mov cmp sub bt bt cmp bt pushq cmp cmp jmpq jne test movb cmp test jmpq clc test test test jmpq lea jmpq lahf mov adc icebp mov jnp lods (bad) cmp and in cmp mov shr movsl (bad) loopne insb pop fs movabs loop mull (bad) pop int std pop clc xchg imul mov loopne rex.XB fwait in (bad) mov in (bad) adc add (bad) (bad) (bad) (bad) testb (bad) out mov xor sbb rex.X stos add rex.WRXB hlt fdivl mov repz mulb imul rol and outsl adc clc xchg mov mov cmp or add (bad) or jne out mov sbb sti add rex.RB jo jns insb imul add (bad) movzwl movsbl bswap jmpq adc sbb cmp cmp mov jmpq jmpq bt stc cmp not not lea bswap bswap pop jmpq jmpq cmp cmp jmpq je cmp bt jmpq jmpq jmpq jmpq mov not not mov bswap movsbw movsbw not mov retq shrd shr push lea rcl mov lea sub rcl cmp sub jmpq neg adc clc mov sar mov neg bt sar ror mov bt bt cmc mov stc stc test test neg cmp clc add bt bt neg jmpq cmp out cmp push pop pop jle sbb cmp (bad) neg sti (bad) (bad) cmpsb adc retq mov and and callq out adc movslq jp insb (bad) pop jne insb lret jns cmp out test lods rex.W sub jb and and lret pop pop mov xor mov sahf imulb xchg cmpsl ss sbb gs loope (bad) (bad) cwtl (bad) jne add (bad) std or (bad) hlt (bad) (bad) (bad) incb cltd out int3 mov scas sbb jo movabs out fadds and sbb punpckhbw insl rex.WB cs repz fidivr enterq in (bad) or rex.XB imul xchg push mov mov movslq (bad) (bad) push movabs (bad) (bad) (bad) push hlt (bad) movsl push mov je mov and mov jmpq cwtl jge jns cmpsb clc add or lods rex.XB es imul mov xlat add sbb pop xchg mov mov stc xchg int3 movabs sarl int sbb sub and xchg mov or (bad) add movsb adc sar sbbl sbb rex.X xor and (bad) (bad) std or sar (bad) (bad) std lods (bad) mov rex pop mov ja sbb mov popq sbb xor cmc movabs push pop adc add add xchg add rex.RB scas mov add cltd mov stc cli scas stc xchg stc movabs (bad) imul sbb pushq movslq rex.RB jne and and pushq add je je rex.W outsb fs gs enterq jrcxz bt jmpq clc bt bt ror jmpq add push jb je imul std (bad) jmpq je bt and add stc and sub mov cmc jmpq mov lea bswap movzbl movsbw pop retq jmpq test jmpq clc mov test jmpq stc test jmpq loope stos out mov (bad) scas push and rex.WRXB cmpsw (bad) insl pop pop mov add lea (bad) mov subb es mov (bad) testb adc xor cwtl sti rex.WR (bad) (bad) outsb xchg test callq jo or jle minps lea in lahf mov loop (bad) lahf xchg js rex.XB or adc rex.R mov decb (bad) (bad) (bad) (bad) loopne pop (bad) cmp (bad) mov (bad) movabs fstpl or sarb hlt out icebp (bad) add in mov (bad) ss rex.WRB rex.XB js in mov cmp rex.XB movsl jrcxz ljmp loop adc lret movslq (bad) jne or addl mov int enterq push (bad) (bad) sub shrb sbb jrcxz sbb (bad) cmp pop xchg and rcll cwtl xchg int int adc pop insl push sub xchg (bad) or mov rex.RB adc in xchg lods (bad) (bad) pop movsl jg sbb xchg xor pushfq sbb out jmpq pushfq (bad) movabs push push cmp mov and or pop xor movabs sub icebp repz (bad) (bad) decb (bad) (bad) (bad) (bad) loope in mov sbb add xchg loope (bad) nop enterq rex.XB sti in lods (bad) (bad) mov movslq cld loop adc rclb loope movabs clc xchg xchg repz or mov movsl mov (bad) or fmul popfq int3 mov js (bad) or jge (bad) test adc fdivrs add je cmp repz mov (bad) (bad) xchg jne int (bad) in lods test loop adc jrcxz add cwtl mov add loopne or add add mov add add or cmc mov add sahf (bad) or (bad) sti mov jg (bad) jle repnz (bad) add adc or (bad) jno xchg pop cld mov xchg movb xchg je mov incb loop mov mov imul (bad) mov fmull mov jns xchg (bad) (bad) add rex.RXB gs gs imul jne clc mov stc or jmpq (bad) and cmp xchg scas (bad) mov lahf and (bad) popfq cmp push rex.WB lahf push push sbb and cmpsb sbb pop lea (bad) add mov or (bad) push rex.XB sbb cmp push retq and xchg cmp (bad) movslq mov retq in shr rex.WXB (bad) pop push and cmp rex.WRXB (bad) (bad) (bad) std js mov (bad) (bad) sub pop rcr jae add jl adc outsb xchg rex.WRB jp movslq outsl mov out movabs lret xor (bad) add add or sub (bad) int3 (bad) (bad) adc sbbl std rex.WRX in sbb push hlt sbb sub stos (bad) adc imul mov leaveq mov rex.W cwtl or add popfq test mov jp movsb pop (bad) add rex.WRXB outsb push rex.XB rex.WRB outsb (bad) addr32 add add je insb imul rex.R je add outsl push std decl lea icebp push movsb jmpq (bad) icebp sbb mov btc xor btr sub movsbq jmpq jmpq jmpq not add add not mov jmpq add push pushq xor rex.WRX gs add jmpq adc jrcxz sldt bt jmpq add rex.WRX gs jae jb fs add je outsl imul outsb outsw jb (bad) je outsl outsb add and cld decl xchg std (bad) jmpq mov (bad) xchg (bad) addr32 or mov cwtl pushq mov fsub fnstenv fsubrp ror cli and fstl mov (bad) cmp (bad) jb je je mov or cmc jne rex.WXB rex.WRB jbe fwait cmp sbb fisubl xchg (bad) lahf push adc leaveq mov and mov packuswb movabs retq outsl mov cmp cmp outsl loopne xchg mov mul rex.X out (bad) cmp ds out (bad) or rex.R loope lock mov cmp (bad) (bad) decl rex.RX fimul outsl mulb icebp rex.WR test sub sti (bad) sub and rex.RX lret (bad) (bad) pop outsb cmp fwait test (bad) fisubr enterq ds movabs mov (bad) cltd lahf and mov retq push rex.RX and retq push jmp subl mov push cli add adc repnz mov mov jge pop js jne add rex.X (bad) nop rex.WRXB gs movabs js fstl add jl cltd lahf xchg xchg (bad) cmp and (bad) mov xor cwtl rex.R cmc (bad) out xlat jmpq lods (bad) jg jl (bad) (bad) (bad) decb push cmp gs xchg mov loopne (bad) (bad) push insb or add movsb and stos (bad) and mov and test sahf sub pushq jae jbe lock movsb xor sub jno jne mov jge mov and fwait test push mov rex.B push jb mov xorb sub (bad) movabs movabs out mov vmread push test jge and in jrcxz (bad) (bad) decb int3 (bad) test xchg data16 test imul add jl retq cltd or fisubr callq push (bad) js xchg mov xchg jae sti (bad) sub pop mov xchg rex.X lea scas int (bad) pop (bad) cmp mov jle cmp add add sbb add add add (bad) adc add adc jp sbb add add add (bad) add xor add sbb add add add outsb adc adc sbb add add add adc test adc bnd add add add cs add (bad) sbb add add add or add (bad) sbb add add add fstps add (bad) sbb add add add adc (bad) sbb add add add adc xorb add (bad) sbb add add add (bad) adc sbb sbb add add add rex add sbb add add add repnz add add add add add cmp add add add add add or add adc mov sbb add add add sbb add jmp add (bad) adc js adc sub sbb add add add (bad) add cmp add sbb add add add (bad) adc callq out sbb add add add (bad) adc clc cmp add add (bad) and pop or (bad) jmpq ja cmc imul bt stc clc add jmpq mov bsr shr rcl push rol neg sar push xchg shrd push btr push or push btr shr bswap mov btr bts mov movzbw sar shl mov test or jmpq jmpq add rex.WR (bad) imul add adc stc test jmpq mov jmpq out imul rex.WX test (bad) test pop add fadds lods iret cli (bad) retq mov jrcxz retq fmull flds stos jne movabs mov (bad) enterq mov jmpq icebp leaveq test push shlb mov or out cmp jg rex lods (bad) (bad) fidiv add mov pushfq (bad) out rex.X fwait lahf cmp test mov xor stc ss lock add sub mov jge and (bad) decb (bad) (bad) (bad) jmpq sbb mov lret xor insl loop mov sbbb (bad) loope fmuls mov (bad) (bad) sti rex.WRXB mov push (bad) jnp sbb cmc mov in rex.WB mov mov cmp rex.WRB and sub bt stc or shr shl rcr mov test add jmpq add push rex.W imul je outsl outsb add rol testl sub mov cmp cmpb jmpq jmpq cmc clc or jmpq test shrd bswap mov bsf btc sbb sub sub movsbl movzbl lea lea jmpq sbb repz loope sbb (bad) in int sbb in fiadd movabs mov push xchg sub mov ds rex.XB rex.WR sbb cmp mov (bad) rex.WRX sti sahf scas jmpq gs pop rex.WRXB add std rex.WXB rex.RX (bad) movabs sub js mov xchg rex.WR push fnstcw sbb (bad) (bad) std or ss (bad) (bad) (bad) std movabs lods lret add add xchg (bad) mov mov and (bad) cmpsl xchg hlt ss jbe movsb repz add (bad) (bad) fisubrl adc rcrb or or push out imulb sbb mov movsb lea pop jmpq add rex.RXB gs (bad) pushq movslq cmc xor sbb (bad) in callq movabs jbe (bad) adc lods movabs (bad) mov sbb test push mov mov out mov xor and pop push movabs or cli rex.W mov sbb add sbb fildl or jns iret rcr cmp sub (bad) (bad) decb mov (bad) xor cltd or adc (bad) (bad) (bad) test fldl rcll add xchg cmp adc mov jne pop push adc test (bad) mov (bad) mulb or outsb pushq xor cmpsb jno rex.XB (bad) add pop lock (bad) mov sub rex.W mov add push rex.RX gs gs outsl jb add int3 test test test jns je cmp test add cmp stc cmp jmpq jmpq sar bsf bsf mov neg mov add rcr jno mov dec jmpq jmpq je adc test neg or push jmpq jb jmpq movzbw movzbq jmpq cmp bt stc movb jmpq jmpq jne mov xor movsbl or sub btr rcl mov stc cmp neg add and stc setae shl mov bt test clc test jmpq jmpq stc push jg cmp jno push lods sub (bad) sbb test rex.XB fs mov add shrl rorb mov loopne or xchg nop rex.RXB mov fstps and adc idivl scas sbb cmp xor jmp mov xchg gs clc add adc negl rex.WRX (bad) (bad) rex.RXB (bad) jno mov (bad) (bad) add adc js mov and (bad) ja jno sub cmp loope sub rcrl (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) test add outsb rorb jmpq or mov rex.RX pop rex.WRX (bad) fwait int imul movslq rex.RX mov push cmp (bad) mov mov mov test xchg jge icebp (bad) callq bt rol add bswap mov bt bt stc cmpb jmpq je jmpq pushq jmpq stos (bad) sbb sbb (bad) sbb mov pop cli insb (bad) or rex.W (bad) xorb mov pushq mov jle fsubs xor iret test add mov rex.W pop retq lret cwtl test mul mov fdivrs (bad) cmp imul sub jl data16 (bad) movabs or js lods sahf xor mov mov (bad) sbb sbb (bad) hlt xor iret (bad) sbb mov (bad) pushq imul sbb sbb mov pop stos mov fs sbb hlt mov (bad) cli and imul out sbb jge,pn xor mov jo (bad) hlt (bad) or or imul rex.RX sbb cs cli pushq iret or add fcompl (bad) test imul or and pop out (bad) callq rex.WRX jle (bad) jle imul (bad) (bad) pop (bad) mov rex.WX add popfq adc loopne (bad) jle (bad) (bad) xor iret xchg sbb retq (bad) (bad) push xor adc iret fcompl xchg (bad) mov imul test (bad) es imul callq or jle (bad) pushq cwtl sbb mov (bad) out xor (bad) test loop popfq xor sub mov hlt (bad) rex.WR lods pop (bad) pushfq (bad) je sbb mov sbb pop pop movsb sub (bad) (bad) hlt mov and sbb or mov xor iret (bad) sbb js sub sbb iret lock test mov imul fs and (bad) in cmp imul (bad) sub xor hlt sub rex.WR int3 mov (bad) xor mov pop lahf mov sbb and mov stos movsb (bad) xchg mov mov loop mov jle (bad) mov iret mov mov sahf adc pop (bad) (bad) faddl pop or jle retq stos je test lods popfq imul or movabs sbb sbb in (bad) in pop movabs callq rex.WX je clc push (bad) mov jns adc movsb popfq and mov loop push add and sub mov nop rclb xchg cwtl add (bad) cs shrb xchg xor test popfq lods int3 (bad) jb rex.WR mov mov clc movsb mov stc mov (bad) mov jns nop imull (bad) xor lock out (bad) outsl pushfq mov jg imul mov int3 (bad) scas fs mov mov callq insb xor jl subl cmpsl mov test and mov test rex.WR in jno scas (bad) rex.RB test out rex.W sarl scas and rex.W jns rex.R mov (bad) (bad) mov mov mov movsb and (bad) cwtl jp push jae (bad) js xchg gs es jl retq hlt mov rex.RX jbe pushq push je pushfq xchg in mov xchg xchg je xchg rex.WRX (bad) int in pushfq and leaveq jns outsl je int3 xchg ja pushq outsb in sbb rex.W push mov outsb sbb xor (bad) jl sbb sub test xchg int3 je and out fld xor rex.WX rex.X lret (bad) and (bad) cmpsb cmpsb mov mov xchg (bad) xlat cld jns xchg xor test iret mov pop iret je insb enterq (bad) xchg test pop mov scas ror jno xchg mov test (bad) and mov xchg shrl mov mov (bad) cwtl xchg jp cld jae js xchg mov sub movsl movabs (bad) (bad) pop callq insl jl (bad) xchg nop (bad) jno enterq mov mov push mov test pushfq mov pop test movsl jo test pushfq je insl mov jns mov mov movsb and mov mov popfq cmp jno outsb xor pop jns mov rex.WR insb test pushfq (bad) enterq xchg (bad) jg xchg or js test int3 test cld jo movslq mov jb movabs imul notl ds imul in pop pop imul fcompl in movsb movabs mov outsl scas iret rex.R jo mov cld xor add adc add stos in jrcxz mov lods mov mov pushfq popfq sahf lahf lods cwtl cltd (bad) fwait movsb movsl cmpsb cmpsl lods movabs enterq (bad) (bad) (bad) xlat lods rcl rcl mov mov (bad) lods rol retq insb insl outsb outsl lods pushq jne ja jo jb pop pop pop pop lods pop pop pop pop fs (bad) (bad) (bad) (bad) lods mov xchg xchg scas nop xchg xchg xchg jl outsb or jnp test (bad) orl rcl mov xor mov xor or jle imul xchg imull fstps mov sarb jo nop (bad) hlt jle js xchg imul sbb enterq test rex.RX pop or pushq jo (bad) jne and movabs lret ja push stos mov test cmpsb sarl gs js xor sbb int3 xor sahf mov shrb loop mov xchg rclb (bad) out fs rex.RXB repnz popfq (bad) jns mov loope push test jo int3 js cmpsb lea jge xchg (bad) callq (bad) mov or divb js mov int3 rex.W xchg push jp movabs rorb or pop pushfq scas (bad) xchg imul in and xchg (bad) (bad) ror fs (bad) xchg pop push loopne out or (bad) or mov jne pop (bad) jl xchg rcl in (bad) iret retq mov sahf (bad) (bad) (bad) (bad) xchg rex.W rex.W ds (bad) pop pushq outsl and rolb sbb outsb mov repnz sbb callq or (bad) adc push sub mov mov test rex.WR jle pop xchg xchg adc repnz adc and xchg sbb insb sub pushq (bad) xlat (bad) je jns (bad) hlt lret mov push mov xchg push movabs (bad) addl cmp xchg jl mov test jp stc xchg pushq xor and rex.WB ds gs enterq shll data16 outsb in bsr (bad) xchg mov loopne and fistpl jo mov iret (bad) xchg sbb push mov js (bad) jne mov pop jge movabs jle sbb xchg adc cmc mov xor rex.X xor insb fs leaveq jl (bad) xor lret cmp test cmp imul xchg rex.WB js cmp test xchg mov sbb movabs mov xchg push xchg imul mov xchg rex.WR mov mov je enterq mov cmp cmpsb cmp test pop mov jnp xor pop rex.WR iret pushfq sbb or mov imul in jns movsl (bad) cmpsb xor sbb popfq movabs movabs callq movsb test imul xor xchg xchg jle (bad) add imul xchg xlat outsb movsl cwtl mov js pop gs cli pop outsl in xlat ds (bad) jo sbb mov rex.R shrb jl sbb jl sub cmc xchg and retq xchg mov or jb (bad) (bad) mov scas pop pop pushq (bad) es lods mov mov pop jb sub lahf in mov in movabs outsl mov xor or (bad) std cmp scas loopne in subb xchg sub pushfq fildll std cwtl test sub adc int (bad) lret (bad) or je or fbstp xchg int3 (bad) mov movabs (bad) jnp stos decb subl (bad) cmp and adc sub (bad) (bad) sub scas ds fwait adc callq hlt xchg stc imul rex.WB pushfq scas rex.XB or scas (bad) cwtl (bad) mov or lods rex.WXB xchg mov rex.WRXB repz shrl sub sub sub xor xor sbb sbb and and rex.WRXB rex.W rex.WB rex.WX rex.WXB push push push push lods push push push cmp ds cmp rex.RX rex.RXB lods rex.B rex.X rex.XB in out out callq hlt cmc div lock icebp repnz (bad) fsubrs out loopne loope jrcxz or or or adc adc std (bad) (bad) clc lods stc cli sti add (bad) (bad) add rex.WRB jb sub jbe push pop sub fisttp int xchg int3 pop sub in int3 outsl xchg xchg jl nop mov xor xchg adc (bad) fdivrl sbb movq je mov lret rolb add pop jl movsl int3 outsb retq leaveq insl mov test movsb int jae cmp (bad) sbb pop test cmpsl jno scas mov mov and sub mov (bad) cmp (bad) mov mov (bad) jp int3 pop (bad) mov xchg mov jns popfq xchg xor pop in decb sbb add lea mov not mov add jg mov xorl mov (bad) mov xchg add rex.W mov rex.WXB adc adc leaveq adc cs (bad) enterq (bad) pop fs jg jns xchg sbb (bad) sub cmpsb lods (bad) add jg mov (bad) pushq (bad) xchg jnp mov lods cmpsb mov xor pop rex.WRXB jo mov pop pop push jne (bad) imul data16 adc fisttpll xor mov pop push pop xchg insl jbe rex.W out mov or repz jbe rex.WRX imul mov data16 insb movabs sub mov int3 and std xor xor xchg jae adc push (bad) xor sarl movabs sbb pushq jne popfq mov (bad) (bad) stos rcrb (bad) shrb leaveq mov xor retq out xor mov popfq (bad) lahf (bad) movsb xor mov cs fcoms (bad) add rcrb mov add (bad) jns js mov movabs stos mov mov mov or jle jb int3 sbb mov xchg outsw pushfq and int3 jl int xchg out lret xchg rex.WX cmp xchg (bad) movsb out cmp (bad) mov and xor test imul or jle movl mov jl pushfq pushfq int sbb imul adc or or loopne iret sub cwtl in neg mov fdivrl (bad) callq rex cmp push (bad) rex.W iret and sbb xor xor sub (bad) movabs hlt or (bad) movsb xor iret in sbb mov (bad) or xor iret xor test jl xchg jle (bad) enterq iret mov adc callq test jl iret in popfq cmp (bad) sbb cwtl sub movsb pushfq popfq add ss mov jle vpinsrw rcl rex.WR xchg pushfq imul or push lret xchg in outsl mov repnz cmpl (bad) callq mov int3 addr32 int or xchg retq pop rex.WR fs movabs (bad) insb jle int3 pushfq jp xchg push nop or adc xchg push (bad) sub and pop movabs in jrcxz cmp movsb popq pop movsl (bad) cld xchg mov (bad) jns test test and jnp js pop leaveq movsb mov (bad) cmpsb mov xchg jl scas pushfq jp ds xchg rex.WRXB (bad) int xor pop adc int3 mov movsb mov jns pushfq loope or rex.WR sti jbe mov (bad) xchg mov pushfq incl mov stc mov sbb outsb out hlt mov rclb mov jle outsb (bad) jns cwtl pushfq cmc rcl add mov je sti (bad) (bad) int3 imul js mov jbe sbb mov jp pushfq adc lahf mov gs (bad) jl add jle callq xchg xchg mov mov jne fstpt mov cltd movsb or ja sbb (bad) jb popfq int sub sbb jns adcb mov js cmpb cmp fnstsw int shrb mov movabs (bad) mov xor rex.WRX (bad) (bad) scas pushfq or ds xor and rex.RX (bad) jno push xchg imul (bad) rex.X mov mov imul sbb outsl int3 fistpll mov sub js stos jo fmulp cltd js mov hlt push (bad) rex.WRXB vunpckhpd (bad) ror rex.WRB cmc pop retq sti lea std mov fs rcll (bad) test mov pop or rex.R imul or retq (bad) movsb rex.WRX pop in sub pop je fs mov (bad) movl iret cwtl xor mov jne mov outsl je pop cltd cld (bad) mov int3 int xchg insb imul mov sbbl test pop xchg in jmpq pop (bad) (bad) xor movsb pushfq int sbb data16 cld sbb fcompl or cmp xor rex.WR hlt sbb pushq rex.RX pushfq mov movsb fsubl xor je pushq js (bad) insb movsb rex.RX popfq insb mov pushfq mov add sbb (bad) adc pushfq (bad) pop sbb int pop sbb pushfq ds (bad) or push fcompl mov pop pop cltd xchg pushfq fmul xor mov (bad) pushfq jae outsb (bad) fstp ss or add mov pushq or (bad) mov shll movabs sbb movsb faddl xchg mov pop (bad) outsl data16 mov (bad) (bad) outsl pop int mov mov pop mov pushq xchg movabs xor iret loopne jmpq xor (bad) cmp rex.WX enterq or ss cld xlat rex.R mov imul fistp pushfq mov rex.WR js pushfq sbb adc (bad) insb ror ja imul jle xchg rex.WR pushfq int3 loopne (bad) adc mov mov or in pushfw iret hlt push pop push sub pushfq movabs in mov (bad) movabs jne jb mov jae test mov stos pop xchg xchg mov jnp add xor lret jle push lret jne in jbe pop movsl pop sbb ja (bad) mov movabs sbb enterq stos jno and enterq sub pop ficoml pushq jo mov mov insb fcompl test xchg es and in movsb sub adc mov (bad) push mov adc cmp (bad) (bad) hlt pushfq rex.WXB or insb imul (bad) test mov (bad) rex.WR (bad) movabs cmpsb insb movabs rex imul (bad) iret cmp lahf (bad) add je callq es mov movabs scas enterq xor iret js add iret rex.W pushfq hlt mov sbb (bad) (bad) mov test mov xor (bad) jbe movsb mov imul mov je sbb mov xchg sbb sbb nop hlt insb sbb jge xor rex.WX fs enterq (bad) mov mov (bad) and sahf xchg mov mov movabs movabs movabs (bad) neg rex.X xor retq xlat (bad) imul scas lods scas xor imul sbb in popfq test lods stos lahf pop lea mov iret outsb cmp (bad) enterq jle and std sbb (bad) and adc movslq retq cmp rex.WB rex.WB rex.WB rex.WB rex.WB cmp cmp push test sahf (bad) cs stos (bad) hlt (bad) (bad) jnp or stos sahf insl pop stos lea lahf (bad) cwtl mov outsb out insb rex.XB iret mov fldl enterq std jne mov mov (bad) cs xchg in retw insl jl stos stc movsl ror sub sarb rex.RX cvtdq2ps xchg xor test pushq jmp fnstcw or insb pop jae leaveq adc mov jg cmpsb jp jge jns cmp cwtl pop imul jns pop js (bad) rex.RX enterq jrcxz imul out jg sbb sbb xchg leaveq rcrb stos adc popfq (bad) fwait imul cmc pop lea int and cmc stos jbe jne rex.R jp pop jg jle jns mov (bad) rolb xor lea (bad) push or mov jae (bad) push test pushq mov mov jg loopne cmpl (bad) mov (bad) pop sbb rex.B rex.X or notb cmpsl (bad) cmpsb je jl mov out cmpsl es cmp mov xor (bad) (bad) mov in imul xchg or shrb jae add je cmc mov mov cld cltd push (bad) fs xchg xchg sub ss fdivrs clc push cwtl mov outsl mov (bad) mov stos data16 repnz imul xchg jne xchg pushq rorb cmp or (bad) jne jg js (bad) rclb roll movslq je mov (bad) push decb (bad) (bad) retq add popfq pop int3 adc (bad) (bad) shrl mov xchg xor mov (bad) scas outsl rcr rex.WRXB insb jle mov xor pop rex.WXB test pop mov jge sub enterq sbb mov js sbb jp mov pop mov xchg add xor je and fldenv mov mov rex.X (bad) negl (bad) cmpsb push xchg out je js test mov (bad) cmpsb xor xchg int3 pushq (bad) orb nop jo nop bnd (bad) (bad) testb popfq int3 jge xchg ror movsb pop shll (bad) stos cwtl iret or mov mov mov pop pop jl jo sbb cs stc xor rex.W xchg mov fimull hlt movslq (bad) pop (bad) movsb cmp xchg mov xchg jp jne or insl pop cltd mov xchg out jmpq iret jbe push mov add and mov xor imul mov hlt enterq cmc mov xchg int3 mov int3 xorl jno enterq (bad) jle mov (bad) fist mov jbe pop adc rex.WXB sbb xlat fcmovnbe test mov (bad) xlat xchg and rex.W fwait (bad) (bad) xor (bad) (bad) or mov mov xor mov imul je cwtl (bad) (bad) mov (bad) (bad) jns and (bad) gs (bad) pop add fisttp mov mov mov vpinsrw rex.RXB mov sbb xor xchg clc imul jo hlt loope pop insl sahf (bad) xor mov sbb cmp cmpsb mov mov xor rex.WRXB leaveq pop movsl add (bad) jle pop pop (bad) xor xchg leaveq test int3 clc mov jno xchg xor jl push (bad) xchg mov in jnp stos clc js mov xchg (bad) lods callq mov (bad) (bad) pop xchg leaveq (bad) jl xlat (bad) retq fsub add stc rcrl jbe sbb xchg xchg mov (bad) jmp (bad) sahf rex.B mov jae jnp pop jne vmovdqa sarl shlb pop xchg xchg fidivrl cmp mov rex.RX pushq test fidivl xchg or push xchg (bad) (bad) mov rcl pop jrcxz ss hlt (bad) (bad) cltd jno cmp (bad) xor adcb (bad) rorb adc test gs ds and lret (bad) out fldt fwait sbb in (bad) test mov xlat rex.WX sbb adc sub xor sbb out cmp cmpsb jg push retq mov retq push enterq int3 in std fidivl and jmpq xchg movsb push pop sbb callq xchg out jne jg rex.B add (bad) and and sub rex.WB cmpsb cmp jb jns mov nop xchg push add or rex.XB mov (bad) rex.RB (bad) test rolb test out scas jno test jrcxz xlat imul jmpq sahf insb cwtl test jno (bad) sub (bad) cmp insl nop callq and retq pushq mov xchg mov pop jae mov pop ds push mov fild rex.WXB pushq mov movabs pop imul insl (bad) lahf pushq (bad) sub mov pop jbe sub movsb hlt je (bad) insl outsl jno xchg sbb jo rex.WRX jg rex.X add leaveq pop repnz cmp sbb mov jne sahf mov mov rex.RX or out xor push and movsl rex.XB lret rex.W scas jnp jg cmp add jp lret jns rcll loope jp (bad) and rex.RX add xchg jg cmc cmpsb fdivrp lret out mov jae mov jne (bad) lret pop pop movabs movabs (bad) mov jno pop retq push adc (bad) pop pop mov and sub (bad) or cmp cmp (bad) movslq rex.WRX ds mov mov adc (bad) (bad) jle adc (bad) es fisttpll push in cwtl lea pop lahf jno mov and xor (bad) mov mov cmp movabs movsb (bad) mov movsb sbb pop mov jne outsl cmp (bad) jp xchg (bad) enterq xlat test rex.WXB fdivp xorb adc fimul xchg fsubrl fdivp lret mov mov insl fs hlt loope outsl adc je enterq pushq movabs je sahf imul pop (bad) iret adc and js sbb int3 sbb or clc test push sbb (bad) pop sbb cmp cmp xor repz hlt ds xor mov cmp jle (bad) sub cmp sbb mov or mov imul cld push callq test jl iret adc popfq fdiv or (bad) je imul mov in callq mov popfq add xor or xchg (bad) int3 xor iret cmp jmp pop sbb in callq pop jle (bad) cld push xor iret and test fs jge push movsb fdivl add pop xor iret movsb xor rex.WXB mov adc popfq rex.R and cmp jle (bad) add xor iret xor mov (bad) or xor iret xor mov pop or xor iret xor xchg hlt je (bad) jle (bad) in rex.WRX movabs or rex.R (bad) add rex.WR faddl xorl xor je leaveq jg mov insb (bad) pop or or nop mov pop xor jno push jmpq mov and mov cmp leaveq movsl adc mov mov test xor rex.XB enterq sbb movslq movabs add xlat ror lock sahf movabs sbb ror xor (bad) ja (bad) movabs and retq rex.WB rex.WR fs pop outsb ja jne mov movabs pushfq rex.XB pop mov rcrl movabs xlat out cwtl insb icebp mov jl (bad) in pushfq cs mov (bad) xor jl pushfq in movabs out pushfq mov movabs lea mov xchg jno push or in push popfq nop mov mov (bad) cltd int3 sub rex.XB rex.WXB xchg ror lods rex.RXB jmp xchg cld (bad) scas push jle pop push ffree int3 insb and lods sub jns rex.WXB fdivs js lods cltd adc retq mov push (bad) mov sbb insb (bad) movabs outsl xlat movabs mov xchg js rex.RB addr32 callq pop test adc test (bad) notb push rolb add lahf jne xor pop xchg inc sbb jle pushq xor jl,pn (bad) push (bad) fsubrl sbbl and push test (bad) xchg cmpsb pop outsb rolb xchg cld and cmp jno out out retq fmulp (bad) rex.WRB rclb mov xchg pop movslq outsb pushfq xchg fsubrp rex.WRB mull xchg xchg nop sub and jb sti xlat and je adc imul lret or (bad) cmpsb jp movabs sbb fsts jae pop pop loope cmpsb push iret xor jp push cmpb sbb or and loope add (bad) jne data16 and (bad) adc pop popfq in jns xchg jbe (bad) (bad) xor mov movabs adc gs outsb addr32 stos rex.WXB mov xchg js stc (bad) push faddp cmp lahf fisttpll (bad) (bad) mov retq test cmc js (bad) pop jnp,pt or movsb (bad) imul je mov ss sbb out rex.R pop fidivrl mov rex.RX (bad) add imul pushfq outsl cmp int3 adc lea scas xchg jge out lods mov insl mov pop jb negb mov movsb sub int shrb faddp jp pushfq sahf int3 rorl (bad) jg out int (bad) rcrb mov jne mov leaveq (bad) mov out rex.WRX adc movsb mulb lods sub (bad) sub (bad) pop pop jnp or pop and pop pop (bad) hlt and jo cli rol jnp jno movsl push add mov jbe jmpq mov test stos sarl mov mov rex.WXB insb sahf cmc fdivs pushq pop xchg jbe jbe jno loop pushq jg rex fisubrl out jno and pop xlat pop cmpsb cwtl xor cwtl xor (bad) add insl hlt imul cmpsl rex.W int3 rex.WRB out (bad) add mov pop mov (bad) rex.WRX pop rex.WRX jb cmpsl lea andl jne out (bad) jo jae mov jne insb mov jno pushq pop outsl je outsb leaveq pop adc mov jno leaveq mov (bad) sahf cmp push callq fcmovb cmp clc lods rex.R adc rex.WXB int3 mov (bad) mov imul loopne jb js fsubl jb movd push (bad) rex.RXB jrcxz mov rex.R outsl (bad) (bad) movabs (bad) sarl and insl cmp pop jg sub pop outsb out imul rclb pop jmpq adc xchg rex.XB (bad) xchg fisttpll int3 cmc outsl lea mov jno mov xchg (bad) insb jo sub mov sahf (bad) hlt int3 fsubrl movb xchg and outsl adc out imul jmp cltd lods loope fstl mov je pop je mov xchg (bad) movsb xchg outsb pop in mov mov (bad) enterq mov test retq out rcrb and lahf imul enterq jo jns mov xchg (bad) cmovo sbb lahf adc sub jb mov rorb or cmp outsb outsl outsb adc loope rex.WR mov cld jp cs sbb jae rex.WRX rex.WX gs jb stos movsb imul stos jne movabs mov fwait pop rorb jb sbb (bad) mov (bad) repnz imul out sub push (bad) add (bad) enterq callq cmp mov add jo or gs (bad) rex.WRB rex.WX (bad) cmp (bad) int pop mov jp (bad) push pushfq ds mov leaveq (bad) cwtl (bad) mov outsl int3 callw popfq clc movabs rex.RB lret or rex.WXB cmpsb or out cmpsl mov pushfq (bad) rex.WR xchg mov jne (bad) jo ds xchg pop lock jns mov or nop rcrl lahf (bad) jne retq test jge add add rex.XB sbb in rex.WRB jmpq pushfq (bad) hlt addr32 mov (bad) xor or int xor pushfq outsb sbb mov imul out pushfq (bad) jl sbb lea iret sbb insb test mov sub (bad) sub sbb jl sub or imul lock cwtl out sub int3 sbb outsb fsubl int3 jo sbb mov pushfq (bad) (bad) imul sbb mov ds movsl fs movsb mov movabs add add pushq jl rex.WRX rex.WRB and rex.WX iret mov pop rex (bad) pushfq rex.WX stos pop pop mov pushq test cwtl add movabs rcrb sbb imul mov pushfq fnop and popfq ja movabs cs cs movabs cltq fcompl movsl adc enterq (bad) (bad) sub pushq mov popfq xchg movsl pushq outsl rclb cs sbb scas and fdivl (bad) and and int mov pop cld test or movsb cmp pushfq addr32 movsl cmp movsb movslq cwtl hlt movabs sub mov mov popfq outsb pop sbb fstpl cwtl sbb and sahf rex.W cwtl sarl faddl or je ja xor xchg stos fwait test add cmpl insl (bad) rcll (bad) pushq mov ss mov jge jno mov outsl pop jl (bad) xor fsubrl adc sbb (bad) xchg mov cmp test pop scas jnp xor je movslq (bad) cwtl push or cwtl je mov (bad) setbe pop (bad) pop xchg test adc retq and mov mov movabs loope xor mov movsb sub rex.X cmp pushq fdivrs mov (bad) fxch cmpsl mov movsb movabs push adc lods rex.WX movsl mov rex.WRX movabs enterq lods and rex.WRB movabs jl movabs (bad) and in push adc pop fdivrs popfq mov xchg (bad) jb int3 (bad) rex.X sbbl add rex.X push mov repz mov stc jae jo jbe rex.WRB cwtl (bad) outsl (bad) sub and movabs xchg movsb and outsb int cmp sbb rex.WX xor xor pop (bad) (bad) repnz nop sarb cwtl (bad) (bad) test pop test jno es push sbb xchg fwait (bad) mov addr32 xchg shl cwtl sbb and fs mov (bad) sbb cli (bad) (bad) (bad) (bad) pop xchg jl sub movsl xor rex.RX cmp cmpsl rcrl mov (bad) mov loope cmp mov rex.WX or jbe hlt rorb xchg lret sub movsl mov mov and fstl (bad) rex.WRB cwtl cmp xchg push rex.WRB cwtl rex.WRB imul sub mov mov push mov test jns cmp sub popfq (bad) (bad) int adc mov (bad) repz popfq (bad) int adc fdivrs popfq (bad) pushq (bad) (bad) fbstp jrcxz (bad) add fsubl imul std fwait hlt rex.XB mov (bad) (bad) or int pushfw rex.RXB sbb decl clc and cli (bad) pop rex.WX rex.RX imul fwait hlt rex.X loop popfq lahf test lret rex.B add (bad) popfq lods xchg rex.WX test jge add insl pushfq js callq hlt rex.X or mov jbe mov divb sbb mov mov pop xchg insb (bad) ja int rex.WRX hlt out jrcxz sub rcrl sbb and mov insl adc std test or add rcrb (bad) add (bad) rcrl (bad) add or (bad) popfq and jmpq jne sbb (bad) sbb jae insl or rex.B ds stos jmpq popfq (bad) mov fwait add imul (bad) lods cmpsb imul rex.X andl or (bad) (bad) popfq movslq popfq sbb add js (bad) or (bad) (bad) popfq rex.W shrb test je xchg mov rex.RX mov int3 sbb cmp rex.RX jl (bad) popfq or mov pop loope mov popfq sbb test xchg sub jo fild iret mov pop sub ss cmp xchg imul clc movslq add sar xorb pop js or imul jmp mov lods popfq rex.W rex.RX add xor sti test mov and mov test insb add sbb test pushq xor cli sarl mov fwait in jmpq (bad) or add cli sarl in scas and add (bad) mov test loop mov out or lret rex.X sub xorb movslq add add xchg mov popfq ficom cmpsl movsl jmp mov cmp std sbb rcrl (bad) add (bad) (bad) nop (bad) and (bad) int test insl mov xchg (bad) int test or jbe rolb (bad) rcrl rex.XB movsl xor rex.RX (bad) rcrl cmp pushq int fwait xor imul int callq mov (bad) rex.RX (bad) rcrl or adc outsl (bad) rex.WXB pop push incl js adc enterq cmpb lea lret gs sbb fs sbb pop rex.W (bad) cwtl mov int3 lods (bad) fcompp pop xorl int3 mov jb jae callq (bad) test imulb mov rcr (bad) mov mov (bad) stos xor jmp rex.RB cmc and in rex.RXB and leaveq leaveq jg imul pushfq lahf pop jns (bad) xor rex.WRX mov (bad) iret rex.RXB xchg nop add bnd movabs leaveq sarl mov jo (bad) (bad) mov (bad) fisubr mov ds (bad) mov es add mov mov rex.R (bad) sbb addl (bad) cmc pop mov jb shrl cmpsb movsb fcmovnbe je jbe int3 sar pushq jge movsb data16 je fs jns int3 cli pop (bad) (bad) push sbb (bad) int3 (bad) jl jnp mov insl fbld shrl or imul sahf rclb jp mov insl pushq outsl xchg xor mov (bad) scas imul mov mov pop xor mov jne adc (bad) push pop xchg mov and imul pop js xchg cmpsl pop popfq (bad) int3 jle cmp xchg mov xor lea xchg int (bad) rex.XB sbb movsl rex.RXB cmpsl (bad) or mov fcoml cmpsb xlat shrl cmc jmp jb (bad) xchg fcoml rex.WRXB push sub rex.XB fmul push rex.WRB lret xchg pop pop mov xor shrb cld loopne mov mov int3 sub insb in fdivrl cli movabs cltd imul scas rex in neg rex.R cmp rex.XB rex.WB rex.RX or (bad) cmpsb mov outsb enterq rex.RB (bad) rex.RXB rex.R retq add outsl lahf movslq cmp sbb callq shlb callq jmpq leaveq and (bad) rex.WRX (bad) jno mov js mov clc (bad) insl sbb sub mov sub rol fs imul (bad) rex.X loopel and (bad) jno xchg mov xchg mov xchg rex.WXB xor sub (bad) rex.RX rex.R rex.WB lret outsb mov mov repnz (bad) (bad) loop or (bad) outsb (bad) add pushq and lods pushfq cmp fiaddl mov jmpq mov and (bad) cmp mov (bad) scas jo pop xchg loope sarb or jl sbb lods rex.WRX rex.XB (bad) xchg jne scas in loope lret pop rex.WB addr32 sub retq js (bad) rorl repz ficompl pop add faddl jno insl (bad) adc sub mov test xchg pop push (bad) sbb adc jle data16 cmpsl fistpl mov pop rex.B add jle outsb (bad) cmp sub rex.WRX jge,pn lods rex.R or in pop xchg mov lods (bad) jne (bad) push xchg jmpq add sahf xchg imul mov (bad) iret fimul (bad) callq xchg sbb adc sarl (bad) sbb fmull add jp cmc xor je sub cmc rex.RB rex.WX xchg (bad) mov xor iret or or pop jns sbb loopne pop stc movsb loope jno rcrb (bad) movabs jno mov (bad) (bad) sbb jle rex.WRB es retq or (bad) adc (bad) xchg fstpl out jg rex.WR sbb rex.WRB je mov xchg xchg movabs insl rex.WRB jo sub mov pop and rex.R rex.WRXB rex.X pop int imul nop (bad) xor (bad) loope pop mov (bad) mov mov mov rex.WB xlat loope jne (bad) test xchg mov pushq mov repz imul pushq mov and pop out popfq in outsl (bad) mov imul mov rclb data16 loopne rex.WRXB (bad) (bad) sbb movabs hlt stos xchg mov fcoms (bad) int3 push test enterq test fistpll cwtl push pushfq xchg ja popq (bad) je mov (bad) (bad) mov rex.WRB sub push (bad) lock rorb cmp rolb jl in pop movsb xorl hlt cmpsb xchg pop (bad) pop (bad) mov add leaveq (bad) sbb in add retq (bad) push pop mov push movsb and mov neg (bad) mov movabs fimul cmp mov (bad) (bad) (bad) insl lret in outsb insl mov jns (bad) pop jne outsb xchg mov jo (bad) mov xor retq pushq fcoml mov std mov imul mov adc cmp mov cli jnp lock (bad) leaveq stos xchg (bad) xchg in rex.WRX sbb rex imul (bad) push loopne (bad) je outsl retq jbe xor rex.WX (bad) lahf movabs and jnp jmpq (bad) mov pop shll (bad) (bad) fidivl fnstenv rdmsr (bad) rex.WB add mov loop stc jnp movsb fldcw mov ja in xchg je jae rcl push je and jb cltd mov mov out fs mov jl pop insl movsb (bad) adc rcrb movabs mov jne add or rex.WRX lahf rex.X movsb fwait pop pushfq cs (bad) pop pop repnz cli div cld or and iret movabs (bad) (bad) pop gs (bad) test bnd xor shrq fcomp leaveq addb sbb pop and cmpsl push and movabs int xor rex.RX jbe pushfq icebp int3 (bad) push and jb lahf rex.WXB gs adc jge test and jb push jno outsl retq ficompl leaveq ror sarb test cmp mov mov jno mov mov add fisttpl mov rex.WXB leaveq jb cmc xchg (bad) out addr32 and cmp xchg and cmpsl pushfq insl (bad) test push ss pop nop outsb sbb pop (bad) mov jo in pop xchg add xlat leaveq adc pop add and jae rex.WR outsb jo (bad) and int3 scas pushq fs mov push xchg sbb (bad) enterq mov mov pop rex.WRB mov cmp xor jno fwait mov test mov int3 xchg test (bad) jns xlat xchg adc leaveq int3 sub test fcompl xlat faddp (bad) xchg out mov xchg movabs repz jle retq in jmpq nop xchg je fwait jbe sarl jae movabs leaveq jne pop mov pop icebp pop (bad) (bad) lahf xchg adcb xchg adc jg movslq in fwait mov (bad) pop xor retq pop nop stc lretq movslq es jne mov mov pop (bad) mov pop (bad) rcll (bad) movabs jg xchg rex.WRB ja sbb and scas (bad) jb stos rorl push retq jns subl scas pushfq mov repnz test lea test popfq mov out mov jge jge lret icebp xchg rex.WRB jle cmc pushfq mov es mov (bad) sarb cli sahf repnz mov icebp mov mov mov sub rex.WX insl rex.X push sub (bad) shrl jp push jo test rex.W adc pop cltd xchg jae movslq cmc jl xchg jl mov rex.W mov mov xor fs outsb retq fwait sbb cmpsl sbb movswl add movabs cmp sub cmp add loope push fistpll cli cmp fsubl imul fistl rex.WRX rex.WRXB jp rex.WRB je scas callq movabs cmp neg movabs sbb xchg inc mov scas pushq xchg repnz enterq xor je outsb retq imul loope push mov jb sahf lock (bad) notl xor imul pop push fsubl lret sbb pop pop pop cmp insl adc (bad) xor mov rex.B fiadd rex.RB test jo mov jne cs jg je rex.WRB rex (bad) jp sbb repnz cs (bad) scas (bad) xorb retq (bad) cs add push movabs xor and fimul je je test push clc mov ror scas mov ficomp jae (bad) test pop movabs sbb pop lock movslq sub (bad) pushfq xlat rorl jg fimull push push or xchg xchg rex.WRB movabs rex.WRB rex.WRX pop fidivr pop sub sarl or int3 jbe stos js stc jle sbb fisub pop or mov rcrb enterq std xchg cmpsb jbe movabs fidivrl test xchg jg sahf (bad) xchg pop jle jno imul outsl mov outsb mov push mov (bad) int3 jne lret (bad) pop rex.WRXB je imul enterq xchg movabs lret cmp pushq pop rex.WB popfq mov (bad) rex.RX (bad) movsl addr32 fs rex.WR rex.WX jle (bad) jmpq pop popfq rcl rex.X out mov sbb and jge push fs mov (bad) movsl movabs imul lret cli xlat pop jbe pop cmp mov mov insb jmpq add lea rex.WB pop lods addr32 scas or test xor sub lods mov mov lods mov mov mov mov cltd mov mov adc stos jp pop popfq test movabs hlt mov lods pop hlt rex.W (bad) (bad) pop sub (bad) mov pushq sahf nop enterq sbb loopne xor add movslq out xor mov sahf (bad) (bad) pushq sahf ds sbb jbe xor xchg je sbb data16 (bad) sahf rex.RX sbb pushq xor mov (bad) (bad) sbb fidivl jp cli sbb jb xor xchg je sbb vfnmsub132ps (bad) je sbb insl in xor lea popfq (bad) sbb mov je sbb jne xor xchg je sbb gs (bad) enterq sbb imul enterq sbb pop fnstenv jns stc sbb jno xor xchg je sbb (bad) loope rcrl sbb mov mov popfq pop rcrb mov adc (bad) callq (bad) (bad) adc (bad) notl (bad) push adc (bad) (bad) adc (bad) (bad) adc (bad) out sahf (bad) rcrb xchg sbb stos rcrb imul (bad) jmp sahf lret rcrb mov sbb fwait rcrb pop rcrb mov adc (bad) sti adc (bad) xor (bad) repz (bad) push adc (bad) adc (bad) and (bad) jrcxz sahf retq rcrb adc (bad) add hlt mov sbb pop mov enterq sbb fs xor pushq (bad) cwtl pushq lahf scas mov enterq sbb shufps fildll adc movsb adc mov movabs (bad) stos pushq sahf lods enterq sbb hlt mov sbb lahf mov cmpsl sahf stos enterq (bad) add pushfq fwait test stos mov imul mov or imul (bad) lahf (bad) cwtl (bad) scas cltd imul movsl retq (bad) cmpsl retq sbb add gs jb iret adc (bad) ss lods mov movabs fwait hlt movsb add stc subl lahf repnz lret scas and jae (bad) push mov xor mov popq fild (bad) mov fucomip movsl pop mov rorl jo mov cmp loopne sub stos test mov mov (bad) sbb fadd adcb xorb nop cmp xchg xchg and retq addr32 xor mov jl lret jle loop leaveq add rex.WRB (bad) enterq (bad) in mov mov popfq enterq sbb iret xlat xor outsl je sbb (bad) rex.WRXB mulb (bad) pop jl jne push stos (bad) lods sbb int mov rcr adc in add (bad) hlt rex.XB mov mov add lret movsb (bad) rex.X rex.R (bad) data16 mov (bad) cmp or (bad) ss (bad) stos pushq or ss jmpq sbb jbe stc adc retq imul adc mov faddl mov mov insb rex.B gs rorl rex.RXB idivl sub (bad) mov loopne int3 (bad) sub pop mov leaveq rex.W pushfq movabs stos jnp lea mov movsl callq xchg jl mov sbb out rex.W rex.R (bad) movabs jo mov cmpb lods sbb pushfq cmp dec lods cmp je rex.RB insl lods rex.X or int3 clc jmp fildll lods pop and lahf in push xchg mov cmc mov lods jae lods cwtl in stos (bad) (bad) shrl hlt int3 lods xchg (bad) (bad) pushfq xchg jo insl lods mov jle mov or test add mov scas xchg cmp mov outsb (bad) rex.RXB add insb in jns jrcxz lods repz loopne rcr stos push mov loop sub fcomi lods (bad) (bad) faddl clc cmp lods iret callq rex.RX rep mov rex.B and scas (bad) mov lods test (bad) enterq cmp popfq jo xchg fs movabs insl loopne stos jge out rex fisub pushfq stos fsts xor cmp stos lods rex.WB mov rex.WRX stos test push lods mov movsb and or adc xchg mov nop lods mov clc pop jge cmp movabs (bad) adc stos xchg cmpsl in lods clc mov pop callq in mov sahf (bad) lods rex.R rex.X xorb mov out incl fildll lea enterq mov js rex rex.WRXB mov rex.WB fistpl in callq clc lods fcmovu xchg adc lods xchg mov faddl out shrl scas mov cmc subb pop hlt insl scas lret jge lods mov sub mov leaveq cmp xchg rex.WR mov and (bad) repnz loop stos and in (bad) pop fdivrl push lods fucomi fwait sarl sub (bad) (bad) cmp rex.RX lods int3 (bad) adc (bad) rex.XB es mov (bad) scas sub cmp (bad) rclb and (bad) lods loopne sahf mov movaps lods mov retq mov data16 xchg rep mov and mov lret push cmp stos cmp rex.WR fimul mov xchg (bad) lods movabs sti (bad) mov nop movsl or xchg xchg lods jp fadds or fbstp pushfq lock mov int rex.X cmp mov ficompl callq (bad) jrcxz movabs loope cmp lods ja je,pt xlat mov lods jo mov cli jbe add xchg jmp pop iret mov xchg mov pushq (bad) (bad) imull ficom xchg pop sbb lock scas imul lods ror test jmpq ds data16 test lods (bad) (bad) rex.WXB out mov (bad) and shlb cmp mov lret adc (bad) xchg scas movabs sub pop lods and jbe sbb xlat cmp cmp lods mov (bad) cmp loopne stos int out fdivr fildll outsb (bad) adc lods add loope xchg (bad) out lods icebp (bad) rex.X mov jnp xchg mov movsb or (bad) lods jl mov test mov int3 and mov jne lea nop (bad) test lods mov adc mov pop (bad) lods test out (bad) scas (bad) lods mov (bad) mov jno lods xchg jne jnp retq lods fstl data16 mov (bad) in pop add push lods jmpq repz incb ss rolb (bad) (bad) pop rex.WX rex.WRXB shrb stos fcomi (bad) pop loop lods rex.XB iret rolb jbe callq lods sbb xchg (bad) mov rex.WRB xor leaveq scas sarl adc negb je (bad) (bad) mov scas iret movabs add sahf cwtl (bad) (bad) lcall fnsave insl rex.WRXB cli and (bad) xor in (bad) lea sub mov jbe enterq xchg xor xor cmpsb cmp push orb (bad) mov js shlb sbb jrcxz (bad) cmpsl movsb leaveq mov ror xchg out insb xchg or pushfq stos out (bad) xchg add add movabs mov fnsave jns rcr out (bad) mov add or loop xchg in sbbl sub adc pop push stos rex.WRXB rex.WRB hlt enterq jbe pop mov movabs js xchg clc xchg mov xor xorl xchg push ss insb pop jb adc or and fwait int3 sahf xchg js sbb lock mov cmp push rcrl or fdivs rex.WR adc out mov push mov pushq scas movsb push (bad) popfq test or xchg jge hlt jno rex.WRX (bad) cld jno popfq scas cltd movabs js xchg mov in rex.WRXB mov in outsb rex.R sbb test mov int xor pop iret sub adc in pop sbb pop (bad) mov cmp movsb imul rorb cmp in faddl mov int (bad) cld rex rex.R int3 add mov xor sbb (bad) in xor int rex.WXB pop mov callq loop cltd mov xor lea int3 insb xlat cld (bad) cld cld sub push in mov mov xor (bad) incl mov jo push mov mov xlat pushfq mov (bad) sbb pop fs mov and rex.WRB mov (bad) push (bad) test add xchg mov imul xor sbb ljmp movslq stos jno,pn jle mov data16 or xlat lods enterq xchg xchg (bad) sub rex.R addr32 popfq enterq sub and xchg and pop loop xchg xchg sub insb xor stos shrb mov or enterq cld xor xor mov rcl or sub jl insb or int movabs mov add mov jle cmp pushfq sub jle sbb enterq ror int sub xor test cld add rex.WR movabs int3 xlat cmpb cmp popfq fdivs sub nop jns xor mov sbb jp mov and mov mov shr xor xchg (bad) mov pushfq test callq int3 jne sub callq fadds (bad) cli rex.R lock int rex.WXB mov mov pop xchg xor je pushfq test xchg mov xchg sub or test (bad) or push xchg insb mov mov movabs int sti fcomps (bad) nop movabs lods out rex.WR (bad) cmp mov lods insb nop mov sbb imul and in sub (bad) xchg (bad) hlt jnp push sub mov cld shl xor cmpsl callq fwait mov sbb fs and cld fdivrl sub xor loopne add in insl pop and (bad) scas enterq ss scas xor in xor int3 cmp iret std mov retq xor int3 cmp (bad) je fcoml mov add rcr xor mov faddl scas int3 and add (bad) fbld lods iret movsl jl cmp int or int add xor cmpsb movabs push test pop cmc movabs (bad) and mov movabs or sub xlat sub xchg ja retq test cmp out pop cmpsl mov imul int movabs (bad) fs jb imul cld movabs sbb sbb sbb fdivr (bad) jae callq pop int3 int3 movabs outsl (bad) pop movabs rex.WR rex.R xchg movabs (bad) scas sbb sbb mov and je cwtd xor mov cmpsl sub mov insl sbb xor fadd cld xor movabs fstl xchg (bad) xorb movsb pushq or jl (bad) hlt adc int3 rex.WRXB xor ss fcmove int3 (bad) jns sub xor int3 jle loopne int3 xor sub mov xchg xchg sub cmpsb push rex.WB and movsl mov hlt mov sbb pushq or outsb sbb mov sbb (bad) fs jne add rex.WB and movsl in sbb std movsb add outsb int mov cld lahf push (bad) insl sub mov in rex.WB push cwtl fdivrs nop test sbb or (bad) add pop lods jl (bad) iret xor sbb scas add mov movabs cmp fdivl (bad) movsb (bad) hlt int3 xchg sub xor movsb xchg cmp rex fwait movsl mov mov je ror mov xor mov mov rex.WR mov fdivl xor add movabs callq addr32 hlt pushq lret fmull and int3 pop push shl xor rex.WR xor pushfq leaveq movabs (bad) lods sbb js xor mov sahf jl mov mov mov (bad) pushfq mov test jl out sub mov mov (bad) pop mov sub mov popfq movabs xor and sub xchg popfq sub mov mov or scas fcompl rex.WRXB (bad) mov mov rcrl (bad) movsl lahf xchg push xor repnz int3 cwtl js mov lods sahf cld pushfq or in mov repnz js mov popfq sub pushfq sub movsb lods cld (bad) or fcompl or (bad) stos negb insb scas outsb test (bad) sub insb retq jg mov sub hlt popfq mov mov pop mov mov iret callq enterq int jb pushfq (bad) outsb mov je lock adc lods stos or movabs pop mov sub test imul stos xchg enterq mov mov je hlt xor stos pop mov mov mov (bad) sub sti fwait clc pop xor addr32 ds and pushfq xchg fwait pop xchg xor mov movsb movsb nop mov pop cld mov (bad) je mov xor mov sahf mov lea test add js pushfq mov mov mov out movsl (bad) mov movabs (bad) lods jl pop pushfq ror sub (bad) loopne (bad) (bad) insb mov divb movabs mov in test pop mov (bad) sbb sub jo mov fisttpll rex.W rex.WB rcll gs mov stos sub cli loopne movsl xchg jge je cltd lock (bad) mov rex.WX mov callq mov cmc sbb out movsl sahf nop mov xor jle test movabs pop xchg add imul jne subb ds (bad) (bad) fmull pop jl jns push xor pop lock test mov insb ss js sub (bad) movsl out xchg (bad) shrb mov mov mov in mov test popfq fdivl sbb (bad) fsubl lahf cltd lods (bad) cld mov mov lods stos in test pop rex.WRX pushq repz (bad) jno lods outsb in mov mov and sub sbb gs rex.WRX pushq out mov hlt movq mov and lock movabs rex xor (bad) xchg retq insb (bad) jno movsl cmp jmpq rex rex.RXB movabs cwtl (bad) callq cmp sub movsl (bad) mov imul lods lahf outsl mov mov mov or fsubrl je or fisub xor mov js popfq test xchg mov (bad) and test or pop pushfq mov xlat fmulp rcrb movsb (bad) cmp fwait (bad) cs sahf mov sbb scas leaveq mov mov movabs stos mov mov in ds mov (bad) mov insb js sub push cmp mov mov add loope pushq in negb cwtl shrb sbb loopne (bad) rex.WXB (bad) mov cmp sub imul mov mov add test stos push jbe pop mov (bad) movabs (bad) shlb fsubl js (bad) mov mov fdivl pop fs hlt mov xchg clc int3 imul insb mov callq xor sbb adc ss mov xor mov pop mov scas ds cwtl add mov jmpq pushfq (bad) pushfq and std sahf mov enterq mov ds stos jl dec mov in rorb cwtl (bad) addr32 mov mov pop xchg cmpsb insl fdivl outsb xchg sbb movsl enterq mov (bad) out lods (bad) clc mov movabs stos enterq pop movabs push adc stos cli cli mov pop xor mov and mov add mov rex.RX fnstenv (bad) cli imul mov lret fwait mov fdivs pop lahf cld mov popfq je sahf lret pushfq adc pushfq mov lods cld rex.RXB push repz sbb stos insb cltd (bad) icebp mov sub mov rex.R sahf jo xchg jle add sbb add (bad) xor out out scas jb test cmc insl (bad) mov adc or leaveq stos subb add xor mov cmp callq fs xlat sbb imul mov mov jle lods and (bad) pushfq movb mov test scas mov jnp (bad) xchg fcom push sbb (bad) shrl je rex.B (bad) popfq movsb jg pop mov xor popfq and cmp or popfq (bad) fcom shlb shrl cwtl xor mov mov insb in xor rorb xchg mov adc pushq mov pushq pushfq push sbb jmp mov xchg mov (bad) mov outsb scas int jne insl rex.R pushq int3 repz (bad) js cwtl (bad) and (bad) rex.WRX rex.WX (bad) enterq or sahf fsubrl cmp sub jbe xor (bad) mov adc test adc je mov mov jne ja mov rcrb pop adc and mov jae lods xor sbb iret mov repnz mov popfq pop mov movslq icebp mov stos mov callq jne movsl cmp push enterq test fdivl mov (bad) mov (bad) je and jmp mov (bad) xor lods add fdivr or mov pop mov test or or movabs mov sbb mov fsubrl je pop callq mov (bad) xchg pop mov sbb (bad) (bad) (bad) movsb jge mov and mov (bad) mov push xor mov movslq mov pushq clc xor mov (bad) xor jl mov jmpq mov mov test rex.RB movabs mov pushq mov (bad) sub cmp (bad) sahf lods cltd cmp out lods popfq cld mov mov mov add test stos or rex.WRXB clc insl cmp pop lahf sub ds add lea scas (bad) (bad) mov fs mov clc rex.WR fadds test int3 lods and (bad) or (bad) rex.WR int3 in xchg or rex mov mov jmpq pop add mov shrd (bad) xor test cmpsl je cmp rex.R lods cwtl cld sahf or fmull lods push push or rex.WRB js stos pop in fsubs sbb fsubs in sub xor in rex.XB outsl test jg (bad) sbb mov xor sbb mov sub rex.WR pushq xlat cwtl mov pushfq mov callq sub sub or push pushq subl or lods mov mov in mov sbb or fcoms int3 adc outsb stos cld outsl in scas jl addb loopne repnz outsl cwtl sbb rex.WR callq mov movsb pop mov pop cmp pushfq jne (bad) mov jne scas mov (bad) mov pushfq rex.X mov (bad) mov movabs test rex.RB jo and mov mov rex.WR cmp rex cwtl xor rex.WR repz std iret pushq sub pop mov fisttpll outsb mov lahf or fldcw (bad) mov lret rex.R js mov lods mov or test orb (bad) xor or rex.W mov rex.R jo mov jne jl insb insb xor cmpsl enterq cs clc rex.WRX mov js mov int (bad) add pop cwtl int3 pushfq (bad) mov or pushq (bad) movsb gs add (bad) movabs rex.X xor sbb test mov (bad) or callq shlb lock shll shr cmp mov cmp rex.WRX and rex.RB mov cwtl lods xchg cmpsb int3 jp sbb pop xchg add xor rex.WR negl in callq adc rex.WR in test in (bad) lods movabs (bad) and mov (bad) sub movabs data16 sub sub movabs (bad) shrb (bad) fmull mov xchg rex.WRXB fs fsubl mov std callq adc mov pushq xchg movsb mov and in icebp rex.WR jbe in popfq mov fs int3 (bad) or repnz pop and (bad) mov rclb lods movabs cltd jb loope mov rex.WXB push sub rorb mov mov (bad) rcrb fmul mov cmpsl hlt rex.X push mov cmp clc stos sub lods xchg (bad) (bad) xchg cs add sarb adc pop movsl callq mov rorl add rcrb (bad) fcompl (bad) (bad) mov callq je lods mov pushfq callq cld pushfq in push mov mov mov (bad) (bad) mov rex.W mov push shrb sbb sub ss rex.WXB (bad) js sub test mov cmpsl push push insl mov mov mov movabs pushfq mov enterq lods lret mov sbb mov sbb addr32 js or rex.R retq scas mov rex.RB mov pushfq data16 in xchg clc jne mov movabs sub test callq cwtl test jae and lock mov mov gs shll mov in adc or rex.WB es jnp sub adc int3 nop in mov xchg lea pushq pop rorb movsb jl test mov (bad) push cmp and sbb int (bad) jmpq cmp pushq xor cwtl cmp adc mov adc xor lods cmp (bad) mov rex.WR lahf (bad) jg lods pop movabs add (bad) cmpsb (bad) sub cmp pop mov (bad) and in pop insl cmp div lods pushfq je mov insb mov or enterq std stos rex.RB push outsb callq (bad) (bad) mov out (bad) sbbb sub mov pushfq add outsb rex.RX and mov fs std jbe and test sar enterq clc rcrb sahf pushfq sub mov cltd test test movabs or ja and lods jle or xchg cmpb cld adc lret (bad) outsl or adc sahf pushfq enterq test movsl cld lret mov rcrl sahf sbb lret (bad) imul mov mov (bad) (bad) es jns cwtl mov js out imul insl cmpsl lock sbb rex.X movsl iret int3 cltd js xor mov and movabs movsb enterq lahf mov (bad) test and adc xor push (bad) pop icebp (bad) xor mov fwait out rex.WX movsl (bad) and (bad) lahf rex.WRB rex.WRX enterq movabs adc cmp sbb iret sahf (bad) xor test mov outsl addr32 sbb loop cltd jle mov insb xchg test sub cwtl gs rcrl nop movabs cmp lods cli enterq xor mov test in pop xor mov (bad) callq pushq pushfq pop (bad) lret movsl cs mov xorb push insb mov divb int3 sbb or sahf push or mov enterq sub rex.WRX mov out add sahf mov pushq sub mov pushfq loopne loope pop test cld mov lahf movsl cmp movabs test test mov pushq jl hlt int3 pop test (bad) mov js movabs enterq je mov adc (bad) mov or (bad) mov (bad) mov imul (bad) imul (bad) mov movabs or or (bad) cmp (bad) rex.WRX mov mov imul and rex.WRB je movsl cltd (bad) test addr32 mov adc mov push fdivl imul pop or rex.W insb rcl xchg sbb or rex.W sbb rex.WR outsl mov mov xlat subb pushfq hlt mov popfq or adc test mov push movsb rcl (bad) lahf jno cmp pushq xchg fdivrs enterq lods sbb icebp sarb fisubl or (bad) or mov pop and (bad) mov add mov insb stos pop insl stos pop (bad) adc fbstp add (bad) cmp rex.RX fbstp (bad) in (bad) stos (bad) mov mov cwtl repz cmp and std out iret mov pop jo pushfq outsb movsb or or sbb and jo jbe insb jp cmp shrl rep (bad) rex.WX (bad) mov push cmpsl pushfq in js lods xchg movsb jl cmpsl and rex.R (bad) int3 (bad) shr stos (bad) mov mov rex.W stos data16 jb outsl movsb sbb callq addr32 xor pop or ja (bad) (bad) or insb pushfq mov lods imul mov adc pop mov jl mov lods cmpl mov push cmp xchg popfq insb outsl xor xor (bad) rex.WX movabs test mov mov jno int3 sbb (bad) pop test int3 hlt cwtl add test (bad) (bad) movsl int cmp loopne add loopne adc in sub movsl addr32 or rcrb rcll lret cmp cld mov adc sub xchg mov and je cwtl outsb mov (bad) enterq rex.XB xchg movsb in shrb rex.RX (bad) insb mov divb movsl (bad) mov outsb pushfq (bad) xor fcomps pop imul pop movabs cmp fisttp (bad) test jmpq movabs rex.W rex.R cmp cmp insl rex.WXB (bad) movsl xlat adc outsb lods lods retq cwtl movsb fadd lods fbstp pop negb cmpb enterq (bad) xchg jl cmp (bad) cmpsl cltd mov movabs fwait mov mov or (bad) jl or je addr32 (bad) mulb pop jge sbb scas fsubrp in cwtl addl xchg int3 pushq vdivps mov mov je rex.W fdivl or (bad) rcrl enterq js xor popfq pushfq cld (bad) lock sbb lock fnop rex.R xor pop fsubrl je sbb ds pushq or (bad) and sahf cmp je out mov rcr lret addr32 adc hlt lods sahf mov je push jle mov loopne mov xor (bad) test pushfq movabs mov push pop pop je leaveq iret (bad) lods (bad) jg lret push xchg test sbb iret pop int pushfq mov jle pop rex ds mov (bad) nop jno mov mov rcrb leaveq mov xchg cwtl or cmc rex.RX ljmp mov jmp xor rex.WR adc cmp pushq gs add sub pushfq lret rorb mov movabs icebp jbe mov jb test sub mov pushfq mov fsubs (bad) xlat callq pop out rcrb shr mov movsl lret insb rex.WR rex.B jae mov movsb sbb iret ficomp retq xor repnz mov jb pushfq mov rex.WB movsb movsl je subb mov (bad) sbb loope movsb pushq mov pushq sub mov lahf lods (bad) scas test scas mov and (bad) sub in mov sbb mov (bad) lret int (bad) xor cmc xor int3 jbe pushfq sbb and (bad) mov jae lods je fsubp mov jne pushq outsb nop repz cli cli andb sub jo rex jbe movabs lods pop test cwtl insb pushq sarl roll adc cltd test cmp sbb int3 js or pop int3 push test pop jbe (bad) test enterq movabs repnz cmp lods jo mov rex.WRXB jne rex.RB lods jno sbb insb (bad) rex.WRX pop sbb pushq and sarl sub fidivl cmp repz and cmp (bad) fs mov imul xchg adc cwtl out mov insb pop cmp jle mov pop jo pushq outsl movsb hlt mov jmpq pushq push mov pop mov mov int3 (bad) adc hlt jo rex.WX jo rex.WR mov int3 mov mov fsubl rex.WR cs jmpq pushq adc sub rorb sbb pop jb mov test (bad) shr (bad) (bad) lea xor iret rex.W rex.WB xlat movabs (bad) (bad) cwtl (bad) roll pop and (bad) mov xchg adc mov cli fadds jmp (bad) add pop add test (bad) add movabs xchg movabs cmp mov std fs cwtl add stos rex.WXB push nop lock jl rex.WR gs xor jg cmp lea mov rolb movsl (bad) (bad) sarb fadds (bad) mov jge (bad) shr sub (bad) js and or rex.WRB je and sub js xchg mov xchg scas mov jns sub insb or and pop pop rex.W xor push (bad) rex.RX scas scas cmpsl scas pushfq imul (bad) pushq mov rex mov pop jb or movsl pop lods sbb stos (bad) (bad) mov mov mov or cld (bad) pushq xor test je es sub in pushfq movabs mov movslq rex.WX iret xor movabs movsl (bad) mov movabs sub mov mov (bad) xor mov (bad) jl mov (bad) (bad) je cltd or (bad) ss outsb jb mov mov (bad) or jo mov pop test xor mov xor rorb pop iret cwtl xchg pushfq hlt js std cmp test pop jge popfq rex.WR mov or (bad) pushfq sbb fldt in in pop sbb insb stos or movsb in callq movabs cs sub cld idiv jae jo xor (bad) test rex.WR mov or lock movabs imul iret movsb sub (bad) pushfq cmp push imul jo xor int rex.R repnz add (bad) pop rex.WB mov and ja hlt mov callq and mov hlt test test mov fucomi mov idivb (bad) mov pop mov pop mov mov (bad) mov or mov sub lret xlat add and pop pop pushfq movsb repnz (bad) mov cs rex.WX movsl cltd and in and mov (bad) fsubs lock callq movabs int3 data16 cwtl ds imulb rex.WXB rex.R cld rex.R pushq pushfq shll mov mov xlat adc nop enterq pop mov (bad) (bad) mov mov pop lahf movsl add (bad) pushfq imul add push movabs xor imul add (bad) movsb lahf rex.RXB and jno sub (bad) xchg jb popfq jae shlb (bad) mov test pushfq cwtl pop (bad) mov jns (bad) sub sarl sahf mov mov mov shr mov js fcomps push and js mov ja rex.R and (bad) sub (bad) sbb mov xor iretw lods (bad) pushfq mov rcrb mov adc loopne push xchg movsb mov clc pop and out movsl lret stos rex.WXB rex.WR (bad) and vcvtps2pd push movsb pushq in scas jg sbb test cmp in pushfq mov (bad) mov rex.RX hlt rex.WB test clc add cmp stos lods rex.WXB mov (bad) cmc add out pop repnz test or add mov popfq in mov rol (bad) pop pushfq sbb (bad) (bad) enterq fs add or and pushfq jl shr ss and jno movsb (bad) xor cmpb (bad) enterq pop jae,pn (bad) movsl xlat jmpq test cmp pop pushfq sahf mov (bad) adc cmpsq movabs fimul sbb sub mov mov clc in or cmp cmp test (bad) cwtl imul lods callq mov sbb (bad) or enterq test js sub hlt sub int3 xchg (bad) incb (bad) insb jmpq fmuls lahf mov sahf lods movabs cltd xchg fwait (bad) push sub lock mov (bad) xor rex.RXB rex.WRXB lahf (bad) rex.W ja stc jne mov (bad) mov mov mov rex.WRB (bad) rex.RB fdivs mov stos test int3 mov add mov jl movabs mov mov (bad) mov pushfq js mov movabs or sbb insb mov jl movabs (bad) in mov (bad) mov (bad) movslq hlt xchg movsb jle mov clc callq (bad) push mov movslq scas mov fwait mov movslq shrb jmpq xchg (bad) orb int mov in insb ljmp mov jne mov mov js movsb ja or (bad) cs pop jo fs adc jmp add sbb jmp xor cltd adc rex.XB pop and or scas pop loop in js fs push mov mov cwtl (bad) pop mov (bad) sbb fcoml xchg or adc popfq fdivl shr xchg pushfq movsb sbb mov movabs (bad) int3 pushq sahf insb (bad) cmp push shrb fdivl and std (bad) clc test mov shrb test out movsl jo mov int insb pop xchg fstpl js lahf lock mov ds pop imul mov push shrb sbb sbb pop shl and movabs imul cmp fcoms mov mov sub icebp int3 xor push mov in ja jmpq lock outsb sub xor movsb loopne,pn adc pop pop mov rex.WRB rex es insb cwtl test test cld sbb push pushq (bad) (bad) ds lods pop xchg js rex.WR movabs pushq rex.WR mov and mov in mov xor adc movabs or rcll popfq cmpsb stos xchg xor push movabs push xor stos lods pop mov xchg retq repz lret test lods js jl xor mov xor xchg mov (bad) rex.B cwtl (bad) lods (bad) push (bad) jne add cmp ds loope mov movabs add sub mov hlt fmul movabs sub mov movsl mov mov mov xchg cwtl add mov (bad) rex.WB mov movsl shrb mov and cld jl rex.R sub je in outsb rex.W retq outsl sub mov xchg mov movsl (bad) sarb mov movabs (bad) out pushq callq rcrb mov cmp callw rex.WR pushfq or cwtl mov movabs sub and loop mov xchg xchg movabs pop or jge incl enterq mov lahf mov xchg rex.W ja mov pushq lods and pushfq xor (bad) (bad) xchg fnstsw movabs xor jge callq adc mov (bad) mov pushfq rex.WR cwtl jle insb mov pop xlat pop cmpsb (bad) ja (bad) jbe in adc sahf ss callq cmpsb repz adc test (bad) or scas int3 outsb test jb cwtl jb je sub add mov lock lret cmp mov movslq lret pop mov pop pushq mov std out movsb stos add test lods (bad) movabs (bad) mov cld test sbb (bad) and icebp cmp mov sar fsub cltd rex.WX outsb pushfq mov rex.RX sbb mov rex.WR insb rex.R movabs rex.RB rex.WRXB out jle mov sahf sbb lret adc (bad) cmpsb lods mov stos pushq push movabs movsb push iret xchg (bad) insb popfq loope xor lahf (bad) or movabs faddl mov (bad) pushfq mov xchg cmpsb jle sbb pop mov adc xchg or int3 jne or je mov cwtl movsb sub repnz jne movsb hlt stc rex.WR jne movsb test sbb movsl movabs pushfq test sbb fmulp mov (bad) insb and enterq nop mov xchg test cmp (bad) fistpll (bad) stos sub (bad) adc clc rcrl mov adc xchg insl (bad) out outsb cwtl callq sbb sbb fdivl lods cld movsb pushfq pushq rcrb or data16 sbb pushfq xor xor pop xchg jmp xor sbb pushfq lea sub (bad) sub clc lods movabs test sahf adc rex.WB fsubrs (bad) sbb xor cwtl xor fmull in and pushq rorb jo xor xor xor popfq ss lods pop cmp xor rex.WXB (bad) shrb (bad) sub or movabs sahf mov mov xor clc and cli sbb pop cmp sbb clc rex.R fs and (bad) (bad) fs xor callq xchg gs mov jns sbb test jo movsl lea js in xlat mov vmovaps callq rex.RXB cld jnp test test imul lock sar mov int3 sbb hlt adc std jge imul rclb fistpl movsl mov sarl leaveq sbb push andb loop or in pop mov mov xchg rex.RXB mov sub pushfq ss mov mov mov and jbe callq rex.W rex.WRX movabs sbb imul (bad) cmc pushfq sbb int3 idivb or jg (bad) lahf lahf cli or and cwtl sub nop sub xor pop ss imul lods or popfq or movsb jl pushfq pushq popfq or sub (bad) cmp lea mov mov pop movsb pop popfq in mov ror mov adc pushq xchg mov mov rol mov fdivp mov sub sbb je mov fimul (bad) scas jns xor pop cmp in hlt jmp xor (bad) mov cmp jle fmul mov (bad) sbb cmpl rex.W pushfq retq rex.WXB rex.RXB xor test mov shr jo sahf sbb or or (bad) sub (bad) mov rex.WX pop adc (bad) add ss pushq xchg movabs je mov jge sub movsb fdivs imul xchg (bad) mov mov lock push in movabs iret cwtl sub hlt (bad) adc sub and test sub lahf (bad) (bad) jl cmp jo int3 std sbb callq mov sar jmp xor (bad) add jl and rex.WR jne andl xor jg pushq leaveq jl push imul pop pushfq out jrcxz sahf or std mov pop mov mov rex.WRX mov push pushfq mov (bad) pop pop sbb pushfq hlt sbb sub and movabs fsubrl rorb (bad) add push sbb mov pop rex.WRXB jo in xor sub sbb cltd mov xor xor xor lahf cmp shlb adc ss (bad) push fmull pop mov movsb mov mov fs mov in mov jl xor movabs (bad) movslq in (bad) sbb xchg rex.WR fnstenv movsl rex.W test mov mov retq movabs push pop sbb mov mov mov (bad) or (bad) je mov jp std sbb je mov mov (bad) and popfq cld js cs retq xchg popfq xor (bad) je xor sub sub enterq repz pushfq imul loopne sbb rex.W push mov (bad) cld int sar lock pop mov jle pop rex.WRXB (bad) add pop jnp mov jb sub jmp xor mov cmp or idivb test iret mull cmp mov rorl jo pop pop pushfq iret movslq (bad) xor lahf mov mov in rex.WX imul or (bad) int3 jae enterq rex.WR test movabs sarb sub xchg iret fs xchg mov mov fdiv pop je pop je sbb lods data16 movsb pop addr32 test popfq leaveq xor repz pushfq xor rex.B int3 fs xlat mov sbb add xchg lock sbb loopne xor rclb mov push rex.RX int3 test sbb movsl mov and lods (bad) (bad) add adc rex.WRB lods repz test cmp cld ss int3 adc xor pushfq repz sub movabs pop int3 sarb insb sar repz stc scas movabs popfq insb sbb (bad) movabs movabs mov rex.WRB rex.WRX data16 pushfq cltd xlat jbe and mov insl rex.WB lret js and mov movabs imul cwtl mov shlb add jp shlb adc scas jnp xor cwtl mov sub pop imul test test pop pop xor iret mov sbb rex.WR fdivl rex.WRXB (bad) mov rex.WB test (bad) xor loop and iret shrb cmpsb cwtl int3 xor sahf (bad) xchg (bad) add xor sbb ds mov mov sbbb cltd mov cwtl movsb stc push insb hlt sahf gs movsl lahf xchg xor js test cld subl fistpl and cmp js pushq mov rorb addr32 or sar addb (bad) or rclb sar pushfq rex.WR popfq insb sub lret nop cmp xchg ja or cwtl (bad) movsl (bad) out insb mov lock cmp (bad) mov imul rex.B sbb push adc rex.WRX callq rex.WB and push pushq mov cld fisubl add (bad) sbbl data16 leaveq (bad) rex.RX int lret scas out rex pop sub movabs sub loope and in imul (bad) rcrb je pushq mov cmp mov rex.RX pop test outsb scas cmp fs push sub cmp sbb rex.WRX pop int sub insb (bad) xor mov (bad) (bad) (bad) pop (bad) (bad) pop test lahf xchg (bad) fstpl mov xlat or and rex.R sub sub rcl pop sub in lods lret rex sub (bad) lods jo xor add pushfq lods movabs push jae xor and (bad) outsb stos rex.RB rex.WXB lods (bad) sbb add jne sub (bad) js out (bad) rex.WX outsb (bad) lods test outsl jle movsb xchg add lods rex.RXB test jmp lods xor frstor loopne hlt push mov sbb lods jmpq std int3 pop rex.R jrcxz pushq (bad) sub xlat lods loopne out adc adc xor mov lods (bad) rcl and fisubrl iret (bad) rex.RX pop lret mov sbb pop leaveq push pop add lods out imul lret outsl xor test xor lods adc decl rex.WB pushq sarl (bad) cld lods out mov pop lods jg rex.B xor jb cli imul lods jns out xchg lret cmp stos pop (bad) lea (bad) movsb (bad) ffreep test cwtl sub adc lods pop and adc cmc (bad) (bad) (bad) rex.X loop pushq sub sar cmp sub lods loop rex.XB (bad) cmp (bad) jge xchg enterq fcomps (bad) roll loop callq mov jo cmp insb add (bad) mov lock xchg push add fldcw lock retq cmpsb mov (bad) add roll int fistp mov cmp outsb fsubrs (bad) sbb jns outsl ljmp mov pop mov movabs sbb loope xor loope mov loop and stc push scas adc cltd lods addr32 cmpsl cmpl loop pop push sbb jge mov shlb and xor ffreep (bad) rex.RX movabs insb (bad) mov (bad) lea lods jge (bad) (bad) roll xor rsm fsubrs mov sub movslq lock outsb sub rex and test lods cmp rex.RB cld and scas lods notl iret fdivl jrcxz rex.X rex.RX in (bad) out push lods sub xor rex.RXB rex.WRXB rex.X sahf in adc rclb (bad) je (bad) lret scas icebp stos sub fbstp cmc mov xor ds int3 rex.X in lods push fsubl (bad) test shrb seto fsubrl add sub int rex.R lods push sbbl cmp xchg scas cmc (bad) mov sbb fadd fs rex.B push icebp xchg test enterq leaveq jnp pop (bad) ficoml loope jb fild movabs rex.R fldt cmc add pushq fisubl (bad) stos xchg xchg lods mov jns push mov jge (bad) lods (bad) lret lods gs lret rex ss rex.R adc (bad) and in repnz lods movabs mov cmpsl jae movabs (bad) test (bad) (bad) outsb fimul rex.WRXB xchg add cmp sub nop repnz rex.WRX movsb (bad) outsl fwait and lods xor hlt retq vandps mov retq ja stos rorb jne lods fldcw sbb sbb and imul lods jnp in out (bad) cld mov shrl lods (bad) and je lods xchg jns pop (bad) or lods rex.WRXB stos or cmp mov rex.WR add rex.RB movabs insb lods pushq sub lods rex.WRX rex.WB jns lods mov (bad) out adc mov gs adc scas xchg pushfq out adc push add jne jae rex.RB xchg lahf adc mov jle shrl sahf and stos enterq cmp cmp adc or sub lods clc or mul hlt pushfq fnsave sub adc lods or retq fs mov jns (bad) subl rex.W jmp xchg jl cmp (bad) (bad) jbe sub callq movabs gs xor movsl push or mov mov and (bad) mov imul enterq lods xlat icebp (bad) xor lods clc and rex.WXB (bad) (bad) lods jb in adc lods mulb retq xor cs pushq pop lods std in adc pop cld faddp sbb cmc and fs lods mov lods (bad) insl add jmp and lods adc and lods mov mov mov loopne cltd mov scas and jbe xor (bad) add (bad) or lods fs lret (bad) lods ss cmp (bad) or or (bad) lods adc mull xorb int lods rex.WB (bad) test or scas movabs scas rex.WXB mov movsb in jno int std movslq test stos stos insb (bad) rex.RXB int3 cmp lods in test jne movsl pop movl rex.X mov jmpq (bad) sbb movsl nop (bad) lock adc imul retq cmc lods lods (bad) (bad) in jo pop cmp xchg sti mov adc js rex.WRX and retq cs test sahf movabs scas lea cmp lahf mov (bad) adc jmpq (bad) fild pop movslq sbb jo mov rex.B scas push adc sub es rex.RB lods sub pushfq scas rex.RXB lods add stos cmp (bad) (bad) (bad) lods (bad) cltd mov (bad) stos jle mov movabs jrcxz lods lock mov sbb sub es lods iret jae sub scas push clc push callq lret stos rex.RXB and (bad) int (bad) movabs (bad) imul rex.WR (bad) subb cmp lods rcrl pop rex adc or test lods in pop clc push adc lods leaveq loopne (bad) es movabs sti rep (bad) lods cmp jo in rcr scas or rex.WX or sub cltd and jne jmpq leaveq xlat mov mov cmp push rex.XB pop and scas rex.WXB out in data16 pushq imull add rex.WRB pop (bad) xchg lea movabs in (bad) lods (bad) out outsb sbb cltd (bad) lods lea shrb cmp divl rex.WR or sahf cwtl (bad) lods jge xchg (bad) in test lahf mov mov adc (bad) rex.WR pop rcrb cmp lods callq mov sbb mov lods fdivrs jbe movabs xchg jge lods xchg in add rex.WR lods movabs (bad) hlt outsl adc outsb sarb adc and repnz in iret cld mov vpsrlq rex.WRXB cmc cmp jo sarb rcrl lods cli sbb jnp movsb adc rex.WRX scas mov (bad) push rex.WRB xchg or ffreep cmp mov rex.R out mov jmp jl add and (bad) push popfq callq mov movsl out cld fidivrl or (bad) jl scas (bad) pop (bad) jno or sbb mov lods cli mov mov fwait mov jbe mov cmpsl xchg lods (bad) clc mov insb enterq int3 imul lods cld (bad) cli icebp cmp xchg shll adc je retq movsl mov (bad) movabs xchg jg in int xchg mov (bad) xchg rex.WRX ds sub repz xor cmpsl mov enterq out sbbl stos test rex.WRB push or fidivrl and jrcxz cmp jg rex.R gs jae fwait or lods lret mov out adc mov loop (bad) lods je (bad) adc mov movsb cwtl adc repnz fstl jb test lods sbb cli shl mov (bad) lods retq insb fildl and lock fdivrs (bad) lods cltd xor mov xchg sub or (bad) mov lods int3 sub or mov xchg enterq cmp lret jle xchg mov in push in cmp lods movabs jmp xlat hlt sbb (bad) lods fidivrl fstl rex.WXB movabs sub or add test mov cltd mov sahf sbb mov (bad) lods push cmp loop rex.WRB rex.WB scas mov (bad) and and lods neg adc jl subb rex rex.WX (bad) movabs pop lods cmp mov std xor sub rex.XB add add addr32 callq je adc (bad) or cltd cmp scas shr js out cmp mov hlt fistl lods addr32 mov lods sub icebp jl cmp js (bad) lods movsb hlt rex.WRB enterq lods insb lods and movsl sub mov cmp mov test (bad) cld out retq (bad) (bad) xchg adc int3 sub es scas (bad) fcmovnu fsubr and cmc idivb or lods (bad) push rex.WRB pop jae mov rex.WXB push lods xor jne jae popfq xor scas lret rex.XB (bad) sub loopne movabs sub (bad) or test mov sub out ss add cmp add insb out xor jo imulb (bad) rex.WX xor rex.WRB sbb and shlb pop xchg mov fs lods out repnz mov or mov mov mov rex.WB jbe sbb imul add retq mov cld (bad) lods mov andb rex.WRB rex.WR jl lods pop adc data16 (bad) js xor mov (bad) xchg mov adc lods pop test sbb movabs cwtl xchg scas rex.RB es add scas fstpl lahf shlb in mov rex.RXB cmp in sbb cmpsl fistpll lods and lea jo cmp in (bad) rex.RX pop jno sub enterq lret mov sub retq outsb nop sub js (bad) xor repz movabs xchg adc rex.RX add lods loopne (bad) test lods rex.X lods xlat xor xor cmp and imul rorb rex.WR rex.WX rex.WRB and and push outsl (bad) in stos sub xlat callq lods (bad) lock fadds fs mov outsb pop sub sub rex.WX and (bad) stos pushq callq or sti popfq (bad) sub sub and cmp repnz gs xor cmpsl insb rex.WB mov push mov rex.WX add xor lods add (bad) add rex cmp fs lods pop sbb xor sub sbb test enterq stc jrcxz (bad) or rex.RX sub jo (bad) test sub mov movabs sub cmpsb cmp sub mov sbb scas xchg (bad) flds mov lods (bad) pop repz xor pushq (bad) ss fsubl mov jrcxz movabs outsl cmp es (bad) movabs lods push movabs mov rex.WRXB scas cmpsb add insl push (bad) pushfq sub sbb push int3 iret adc mov scas sbb cmpsw (bad) sub retq (bad) mov rex.B movabs mov rclb or lods mov push xlat outsb rex.WR cmp shl cwtl lods (bad) rex.RB (bad) adc in gs lods movslq (bad) loopne adc (bad) test adc (bad) ss shrl and movl (bad) std test rex.B xor fisub (bad) sbb fildll psrlw stos xchg push ficom xor (bad) ficoml in rex.WB fs sahf xlat stos sbb push sub int adc or sbb mov (bad) scas stc insb ficompl sub retq enterq rolb std sub stc xchg jne movsl sbb mov mov hlt cmc mov cmp lret rcrb jg (bad) sub (bad) jne and or testl rex.X shlb (bad) add retq jbe sbb lods sti pop sub fdivrl (bad) xchg loop,pt mov (bad) rex.X int neg rex.B in out std xchg sub add cmp sahf insb loope bnd (bad) lods xor nop movabs xor lods loop (bad) sub mov lods xchg adc pushq mov adc adc jae push add jl movabs (bad) int3 out pop push mov loopne push and (bad) push lods gs xlat test lods lods sbb data16 leaveq cltd jns push loope lods std adc mov mov xor or xchg (bad) lret mov jge loopne sub sbb xchg cmp lods jrcxz sahf jl rex.WR jns xchg xchg test cmp loopne rex.B adc (bad) test lods pushq rex.WRX shrl (bad) stos or cmp mov cmp mov add xchg mov (bad) jne js lods push (bad) jl rex.X (bad) (bad) xor lods pop mov mov lods movabs lods xchg mov (bad) push or stos mov and mov adc or lods cs fisubrl lods xorb mov leaveq xchg lods mov cmp lods mov sbb mov sbb sti mov fistpll mov xchg scas movabs add enterq add in mov fnstcw (bad) lods repnz insl push sbb mov (bad) (bad) mov lret out in in rex.RXB cmp negb (bad) out fldcw and mov imul in clc insb pop lods xor add sbb lods lret iret add (bad) (bad) xor movabs enterq cmp in push sub cmpsb mov insl (bad) cmovp rolb (bad) pop lods mov stc lods rex.W rex.XB pop or lods mov es push lods cld pop mov (bad) add mov xor sbb retq rex.R (bad) pop lods (bad) ss enterq mov mov xchg lods xor (bad) lods (bad) rcll rex.X fldt xor cmp add sub mov rex.R in or mov stos test stc sbb fdivl mov mov rex.WRB (bad) cmp pop adc rex.RB mov cld ja (bad) test lods cmp fisubrl mov addb retq cmp insb je lods test (bad) or lods enterq jae sbb ja cmp scas push sbb or movslq cs cmp push cmc jge or or mov retq cli lods pushfq rcll add mov (bad) mov movabs (bad) (bad) pop lods clc mov or xchg scas mov pop pop push lods rex cmp rex.WB pop (bad) rex.WRXB push adc fidivr cmp or scas mov add and jbe movabs cwtl xchg pop outsl test jmp jno (bad) stos push outsb fstl mov (bad) (bad) xchg lret (bad) sbb stos ds mov imul sbb (bad) ja movabs lods lods sbb rex.RXB mov pop movabs xor cmpsl mov push cmp adc (bad) popfq movabs out sbb lods sbb sbb mov lods jg fidivrl or cld lods and hlt pop add (bad) mov push and (bad) je std stos movslq mov pop rex (bad) pop jbe movabs mov (bad) sarb insl xchg je and icebp (bad) lods jnp movabs rex.W xchg popq (bad) or stos repz xor push cltd cld (bad) pop js test mov mov or push sub mov or pop and rcll insl fsubs lods lea sbb loop and stos sub rex.WX sbb adcl mov cmp pop lods std fimul lods shl mov (bad) jo rex.W add push movabs rex.RXB (bad) movsl insl xchg adc lods movslq xchg stos imul xchg (bad) jge mov lods jbe rex.WRB pop cmp cmpl (bad) leaveq rex.X (bad) and sti xchg cli movb lods cmp sub push imul in loope sub lods xor jno rex.B xchg push cmp movabs rex in movabs (bad) sub or lods fs retq sahf fsubrp rex.WR stos sub imul cwtl in mov and xchg fnstenv test lods sub adc xor adc test icebp cmp imul rolb fildll push mov lods sahf mov fildl int3 sub repz rex.WXB sub sub lock (bad) lods jo repz repnz adc cli lods (bad) mov (bad) sbb outsl scas or enterq cmp rex.RB shrb sete std lods cmp pushq cmpl cmp sub push lods cmc (bad) scas jbe movabs adc add retq or (bad) leaveq ljmp jmp lods mov xlat rex.WXB xchg stos out mov jnp lods (bad) (bad) (bad) cmc jns mov sbb cmp (bad) sub xor cli and add jno imul mov in ja lods pop jbe fimul std lods orl mov fwait pop xchg shrb (bad) add imul pop or stos xchg (bad) mov (bad) jg in pop rex.XB mov outsb lods jl insl push pop jo clc push xchg retq mov fwait retq lods (bad) jnp in mov std or je and rex.RXB fwait (bad) pushq (bad) sar and rorb cld lock rex.WR repz jne rex.WX scas jle jrcxz in movsl iret add gs xchg (bad) push notl mov cmpsb or (bad) pop adc fisubrl leaveq in add sbb js lods negl outsb (bad) pop lods ss or lods cmpsl cmp mov or rex.B rex.R lods push ficoml cltd outsl (bad) xor mov cmp pop and push cli lods jmpq jmpq push jmpq mov jmpq jmpq lea jmpq mov jmpq push jmpq mov jmpq jmpq mov jnp pushfq jmpq jmpq jmpq jmpq pushfq jmpq bsf movzbw not not mov jmpq add jmpq mov jmpq jmpq jmpq push jmpq jmpq push jmpq sub shl mov cmc cmc test add jmpq setg movzbq jmpq push jmpq push jmpq mov jmpq push jmpq jmpq jmpq push jmpq push je push jmpq jmpq callq movzbl mov jmpq popfq jmpq jmpq push jmpq jmpq push jmpq jmpq jmpq jmpq push jmpq mov jmpq push jmpq push jmpq popq jmpq mov jmpq jmpq jmpq push jmpq mov jmpq jne sbb mov jmpq jmpq jmpq push jmpq push jmpq push jmpq push jmpq jmpq jge divl ja mov jmpq ja mov jmpq push jmpq jne shl sar sub xorb setb jmpq not not pop lea movsbw xchg pop mov lea pop bswap movsbw pop mov mov setge sete pop movsbw xchg xchg pop not jmpq movzbw jmpq push jmpq pushq bt clc add cld bt cmp popfq jmpq push jmpq btc mov bsr mov test stc not cmc mov stc cmc bt clc add jmpq push jmpq inc bt ror test clc bt cmc push sar shl sub bt sbb stc stc pop cmc sub bt jmpq mov jmpq push jmpq mov jmpq push jmpq mov jmpq push jmpq jmpq add mov not bts cmc add xor and rcl xor bsr mov bt jmpq mov jmpq div jmpq jmpq jmpq mov jmpq jmpq push jmpq xchg mov shrd or ror inc mov cmc jmpq jmpq jmpq dec jmpq push jmpq push jmpq pushfq jnp popq jmpq pushfq jmpq jmpq jmpq push jmpq jnp dec cmp cmp cmp bt xor cmc cbtw clc test cmp cwtl cmc clc cltq bt clc bt sub jmpq push jmpq push jmpq mov jmpq jmpq jmpq push jmpq jmpq push jmpq jmpq push jmpq mov inc not xchg inc rol ror bts neg bt not movzbw shrd inc mov setb sub bt and shrd mov btc bsr lea sub ror cmc shr movabs btc shl clc add clc adc test mov test lea btr add shld inc ror mov neg setp sub shld cmc neg stc add or lea bt not shr shl sub cmp neg mov sub lea not dec setnp sub movzbw lea bts movzbq btr btc not mov clc ror cmc add jmpq push jmpq popq jmpq push jmpq jmpq jp mov jmpq popq jmpq clc sub cmp cmc cmc clc shr jmpq pushfq jmpq jmpq push jmpq je jmpq jmpq jge push jmpq jmpq clc ror stc test stc push not bsf not btc sub mov btr or pop test test jmpq push jbe push jmpq jmpq jmpq jmpq bsf xor mov shl ror not mov jmpq sar mov movzbl neg sbb dec shrd xor or rcl and sub rcr setl ror inc sbb xor rcr add sub add shld xor bswap dec mov mov test cmp jmpq jmpq pushfq jmpq jmpq push jmpq jmpq push jmpq push jmpq push jmpq jmpq mov jmpq jmpq push jmpq push jmpq push jmpq jmpq jmpq jmpq push jmpq movzbw lea movzbw mov movsbw bswap bswap push dec not mov lea xchg xchg lea inc mov bswap movzbw clc ror (bad) (bad) xor not inc lea sar mov bt shr not mov sub shl shld and bswap bts adc bsf mov sar lea lea btr btc movsbq add movabs adc shrd add bsf (bad) repz mov bsr cmc add stc ror mov sub shl sub seto adc add shrd bts not shl cmp neg clc ror sub not sub movsbw movzbq bt bt mov cmc stc cmc ror test cmc add jmpq jmpq jmpq jmpq jbe mov jmpq mov jmpq jmpq pushfq jmpq jmpq mov jmpq jmpq jmpq jmpq push jmpq jmpq mov jmpq push jmpq jmpq jmpq jmpq jmpq jmpq push jmpq jmpq pushfq jmpq popq jmpq push jmpq jmpq mov jmpq mov jmpq mov jmpq bt test stc bt add cmc clc cmp sub jmpq cmp clc bt shl jb mov jmpq jmpq popq jmpq push jl push jmpq push jmpq push jmpq and jmpq jmpq jmpq push jmpq jmpq push jmpq mov jmpq push jmpq push jmpq jmpq sub cmc bt cmc bt mul jmpq push jmpq jmpq add jmpq bt sub cmc stc cmpl jmpq je callq mov mov mov jmpq bt bswap lea bts mov test cmc jmpq push jmpq jmpq push jmpq jmpq bsf mov bt stc jmpq popq jmpq je bt stc clc cmp jmpq lea mov bswap mov jmpq push jmpq jmpq sub jmpq divq jae mov jge mov jmpq jmpq push jmpq cld cld cld cld jmpq popq jmpq jmpq jmpq pushfq jmpq jmpq clc sub jmpq jmpq jmpq jmpq push jmpq jbe pushfq jmpq jmpq pushfq jmpq jmpq jmpq jmpq jmpq jne push jmpq neg mov cmp test sub test shr jmpq jle pushfq jmpq push jmpq pushfq jmpq mov xor mov stc sub jmpq jno pushfq jle popq jmpq jmpq mov jmpq xchg cmc bt clc jmpq push jmpq pushfq jmpq push jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq mov jmpq bsf inc sar cmc mov or not stc mov cmc sub clc cmc mul jmpq lea jmpq jmpq mov jmpq jmpq jmpq popq jmpq push jmpq lea jmpq mov test and mov (bad) (bad) mov clc cmp jmpq jmpq jne push jmpq jmpq jmpq ja clc mov rcl rcr adc lea dec sub shl bsr lea lea sbb cmc and cmc movsbw bsf sub jmpq inc cmc clc clc cmp not test cmp cmc sub test stc add bt xor cmc cwtl jmpq dec jmpq mov jmpq jmpq cmc mov clc mov clc add jmpq callq movzbl mov mov jmpq jmpq pushfq jmpq jmpq jmpq popq jmpq jmpq jmpq cmc jmpq push jmpq bt clc cmc ror jmpq push jmpq push jmpq cmc stc cmp add jmpq jmpq jmpq add bsf xor rcr and add sub add rol movsbw stc mov stc sub jmpq dec jmpq push jmpq jmpq lea mov jmpq push jmpq jmpq popq jmpq pop not ja movsbq bswap pop lea bswap movsbw movzbw pop retq mov jmpq jmpq jmpq bt mov xor adc not ror mov jmpq jmpq jmpq jmpq push jmpq jmpq push jmpq jmpq jmpq jmpq jmpq mov jmpq setae inc cmc movsbq ror adc not xor lea mov rol sub rcl not and setle test mov setg neg sub lea rcr movabs rcl cmc xchg add bsf ror xor bsr mov test add test movzbw add mov stc (bad) repnz sub sbb shrd add bsr sbb movzbw shrd not and mov neg sar shl test rcr sub test sub clc sub stc setb movzbq cmc lea mov jmpq shl not movzww bt stc xchg cmp cmc cmc cmc xor jmpq jmpq jmpq push jmpq jmpq pushfq jmpq jmpq jmpq jmpq push jmpq jmpq test jmpq mov jmpq neg ror sub (bad) lock bt bswap cmc sub clc ror jmpq push jmpq mov jmpq push jmpq jmpq jmpq jmpq push jmpq jmpq push jmpq jmpq not jmpq jmpq jmpq jmpq movsbw bswap not mov jmpq pushfq jmpq push jmpq push jmpq push jmpq stc bts mov cmp test test cmp sub stc cmp add jmpq setbe bts shl mov clc jmpq pushfq jmpq jle not pop bswap bswap jmpq push jmpq add neg shrd or mov sar add adc bt mov (bad) idiv sub sub add lea not shr sbb cmp neg xor or sub sub setl btr rcl sub not movzbq movzbq bswap btc bswap mov bt ror clc cmp cmp stc add jmpq mov jmpq push jmpq mov jmpq push jmpq push jmpq push jmpq pushfq jmpq test sub jmpq sete pop jmpq jmpq bt mov stc add jmpq jmpq push jmpq jmpq bt and jmpq push jmpq lea jmpq jmpq btr mov jb sub jmpq test sub jmpq popq jmpq jmpq pushfq jmpq jmpq stc cmp clc add jmpq jmpq rex.W lock btc mov test shr mov bt jmpq jmpq jmpq popq jmpq push jmpq push jmpq jmpq or mov shr jmpq jmpq test jbe add jmpq bts cbtw mov bsf bsf not mov bts sar bsr mov cmp cmc cmp sub jmpq popq jmpq push jmpq jmpq divl jmpq jne not jl dec bt xor cmp cmc jmpq push jmpq popq jmpq push jmpq mov jmpq jmpq push jmpq rcl bsr mov bt mov clc cmc cmc cmp sub bt stc imul jno mov jmpq push jmpq push jmpq mov jb pushfq jmpq push jmpq jmpq jmpq jmpq jmpq jmpq jmpq clc stc not bt bt not cmc sub cmc test and jmpq push jmpq pushfq jmpq push jmpq lea movzbw bswap jp mov jmpq jmpq je jo stc bt cmp jmpq mov jmpq lea push dec movzbw lea pushq lea mov movabs jmpq push jmpq shld movsbw mov cmp bswap bt clc bt sub jmpq push jmpq jmpq jmpq mov jmpq jmpq push jmpq push jmpq push jmpq push jmpq push jmpq jmpq popq jmpq popq jmpq cmc bt cwtl bt test clc cmc cltq test sub jmpq popq jmpq jmpq push jmpq lea jmpq jmpq jmpq not jmpq push jmpq pushfq jmpq jmpq jmpq cpuid jmpq jmpq push jmpq pushfq jmpq dec dec movzbl bswap mov dec dec push movzbw jmpq test bt cwtl test jmpq push jmpq jbe mov jmpq pushfq jmpq stc jmpq add bt test cmc xor cmc jmpq push jmpq mov jmpq jmpq push jmpq lea movsbl mov jmpq jmpq jmpq jmpq jmpq push jae push jmpq bswap movsbw lea push setbe push movzbw lea push movzbw mov mov setge push jmpq jmpq mov jmpq jmpq jmpq jmpq push jmpq jmpq jmpq sub add movzbl stc cmc cmp cmp xor clc test cmp cmc add jmpq je mov jmpq jmpq jmpq cld jmpq jmpq bsf stc mov adc rcr mov clc clc sub stc jmpq jmpq push jmpq jmpq cmc and jl pushfq jmpq inc (bad) lock mov test sub jl cmc test add ja pushfq jmpq sar movzbl bsr (bad) not fiaddl fdivr lret icebp and add rorb ss and shr sbb add shl clc bt bts xor movsbw rcl add rcr shrd add shld inc stc mov cmp clc sub jmpq push jmpq push jmpq push jmpq push jmpq jae jne clc cmp test sub cmc xchg cmp jmpq push jmpq push jmpq add jmpq sets not pop not jmpq jmpq mov jmpq push jmpq popq jmpq push jmpq push jmpq lea jmpq jmpq jmpq jmpq decl jmpq push jmpq push jmpq clc xor jmpq jmpq jmpq push jmpq push jmpq shr rdtsc jmpq jmpq push jmpq jmpq lea jmpq jmpq or mov cmc btr xadd mov sets sete neg mov clc cmp sub stc test clc shrd jmpq jmpq jmpq mov mov jmpq push jmpq jmpq shl clc dec mov cmc clc xor jmpq jmpq popq jmpq push jmpq push jmpq jmpq push jmpq push jmpq push jmpq mov jmpq pushfq jmpq push jmpq jmpq jmpq rol jmpq pushfq jmpq add shrd shld or mov cmc stc bt add jmpq movzbl sets jmpq jmpq jmpq jmpq jmpq jmpq callq jmpq push jmpq mov jmpq mov jmpq jmpq jmpq jmpq push jmpq jmpq jmpq jmpq cmc test jmpq mov bswap rcr notq sar test setp mov cmc bt bt test sub cmp jmpq push jmpq mov jmpq jmpq jmpq pushfq jmpq jmpq jmpq jmpq adc dec sbb cmc movzbl stc xor clc stc jmpq jmpq jmpq jmpq push jmpq (bad) lock add jmpq bt jmpq jmpq pushfq jmpq popq jmpq popq jmpq push jmpq jmpq jmpq push jmpq popq jmpq push jmpq ror inc jae neg mov rol mov data16 lock mov test test sub jmpq push jmpq push jmpq jmpq jmpq jmpq mov jmpq not jmpq jmpq mov xchg bswap pop lea pop jno not not bswap pop bswap movsbw movzbw pop retq push jno push jmpq jmpq cbtw and add shld mov bt stc stc xchg cmp bt xor jge inc cmc not cmp test stc bt add test jo cmp test add stc jmpq not clc mov clc sub stc test stc shr jmpq jmpq not mov jmpq popq jmpq mov jmpq jmpq push jmpq push jmpq test setbe notl or mov jmpq push jmpq jmpq lea push jmpq jmpq jmpq mov ja pushfq jmpq stc stc mov clc jmpq jmpq lea jmpq shl rcr bt setae mov stc xor cmc ror bt xor jmpq jmpq js push jmpq jmpq jmpq push jmpq jmpq jmpq bt ror cmc clc xor cmc clc mov stc cmc stc bt sub stc sub jmpq test sub jmpq push jmpq jmpq cmc add jmpq jmpq jmpq jmpq clc test mov sbb clc stc sbb add jmpq xchg movabs pop jmpq jmpq shr movzbl mov shl xor (bad) icebp sbb add dec bswap movsbw setp not dec setbe movsbl bswap dec rol shld xor neg movzbl clc mov clc jmpq push jmpq and stc clc test cmp jmpq push jmpq jmpq mov jmpq sbb cmp btr mov rol add shr dec cmp sub jmpq popq jmpq jmpq divl jmpq cmc test test xor stc cmp jmpq popq jmpq jmpq jmpq mov jmpq popq jmpq push jmpq jmpq mov jmpq cmp jmpq push jmpq push jmpq jmpq push jmpq add sub (bad) lock mov sbb rol sub sbb jmpq popq jmpq mov jmpq push jmpq push jmpq jmpq movzbl movsbw push movzbw movabs jmpq jmpq jmpq jmpq push jmpq jmpq cld mov movsbq lea std push mov lea movzbw mov ja std std cld jmpq pushfq jmpq jmpq bt cmc cwtl cmp stc stc jmpq mov movsbw mov not jmpq push jmpq lea cmc xor stc clc jmpq rep data16 (bad) or stos (bad) add dec pop cmp or mov pop std std cmc test popfq jmpq mov jmpq jmpq jmpq not mov jmpq jmpq push jmpq jmpq push jmpq sar ror btr bsr mov rol cmp add not mov mov jmpq pushfq jmpq push jmpq setge inc setnp setbe jmpq jmpq adc mov dec jmpq jmpq mov jmpq jmpq push jmpq jmpq push jmpq jmpq mov jmpq bt jb add jmpq push jmpq lea jmpq jmpq jmpq push jmpq jmpq jmpq mov jmpq push jmpq push jmpq jmpq jmpq push jmpq jmpq shrd jmpq mov jmpq jmpq push jmpq jmpq je mov bswap movsbw mov jmpq bsr rcr mov mov rcl bsr sub mov jmpq jmpq jmpq jmpq jmpq push jmpq jmpq push je push jmpq push jmpq callq movzbw setae mov jmpq jmpq mov inc mov inc xchg mov inc rol not ror btr not rol mov xchg bswap sub not sub shr stc and btc xor sub xadd mov neg shld lea shl shrd rcr movabs jmpq jmpq jmpq jmpq jmpq jmpq jmpq bt stc sub clc clc cmc clc mul jmpq jmpq lea mov jmpq popq jmpq jmpq jle push jmpq jmpq jmpq popq jmpq popq jmpq push jmpq dec jle cmp xor jmpq push jmpq push jmpq popq jmpq jmpq popq jmpq jmpq jmpq push jmpq mov jmpq jmpq jmpq jmpq jmpq jmpq push jmpq push jmpq jmpq push jmpq popq jmpq popq jmpq bsr xadd and movzbw mov btr rcl shld mov jmpq push jmpq jmpq push jmpq push jmpq je jmpq jb push jmpq popq jmpq jmpq stc xor cmp cmc cmp bt cwtl stc jns test cmc cltq stc jmpq jmpq push jmpq push jmpq push jmpq cbtw test test cmc cwtl cmp cmp sub jmpq jmpq jmpq mov jmpq push jmpq push jmpq jmpq jmpq mov movzbw jmpq jmpq je push jmpq push jmpq cld jmpq jmpq lea movsbq mov jmpq dec jmpq push jmpq mov sub mov rcl (bad) repnz movsbw xor adc and sub mov movsbq lea dec movzbw rcl ror shl add not and bsf movsbq xor movsbl mov cmp jmpq jmpq jmpq inc stc stc neg clc stc clc bt sub jnp add stc cmc cmc stc sub jmpq jmpq jmpq push jmpq jmpq jmpq push jmpq mov jmpq mov jmpq jmpq jmpq jbe push jmpq jmpq stc add jmpq jmpq jne push jmpq popq jmpq mov jmpq push jmpq jmpq bsr and rol lea cmp bt jmpq mov js dec jmpq mov jmpq jmpq movsbw push jmpq cmc sub jmpq mov jmpq neg (bad) lock rorb add bswap xchg shr mov rcl mov test cmc bt add test cmc stc stc shld jmpq movzbl push movsbw bswap push jmpq push jmpq popq jmpq jmpq push jbe push jmpq push jmpq push jmpq cmp jmpq pushfq jo popq jmpq jmpq lea pop retq cmp cmc stc test jmpq clc add jmpq popq jmpq add jmpq pushfq jmpq jmpq jmpq push jmpq mov jmpq jmpq mov jmpq mov jmpq cmc shl test cmp shr test or cmc clc clc xor test bt add jg decl jmpq jmpq push jmpq cwtl cmp cmc cltq cmc clc clc clc sub jmpq popq jmpq jmpq dec bt test xor cmp cmp cbtw cmc stc cwtl jmpq jmpq bt add cmc test add bt stc cmp xor clc jmpq jmpq mov jmpq cltq stc bt bt cmp sub jno mov jmpq lea not movzbw mov jmpq pushfq jmpq pushfq jmpq jmpq push jmpq jmpq jns mov jmpq pushfq jmpq mov bt jmpq push jmpq jmpq push jmpq inc clc bt cmp neg cmc cmc jmpq pushfq jmpq mov jmpq rep data16 negl sbb cli popfq jmpq jmpq jmpq push je push jmpq jmpq mov jmpq pushfq jbe popq jmpq push jmpq jmpq push jmpq mov jmpq push jmpq jmpq jmpq push jmpq pushfq jmpq jmpq jmpq jmpq jmpq je pushfq jmpq jne jmpq push jmpq jmpq bt sub jmpq push jmpq jmpq push jmpq push jmpq jp pushfq jmpq inc mov adc pop bt pop adc pop lea lea movzbw pop add cld pop xor pop cmc std popfq movsbw not xchg movzbw pop mov xchg pop jmpq push jmpq add jmpq mov jmpq jmpq bt sub cmc clc cmp shl jmpq jmpq push jmpq test btr add mov and (bad) repnz xor movzbw cmc movzbw ror stc stc bsr xor setne btr rcl ror sbb xor ror bsf sbb mov cmp cmp cmp jmpq jmpq push jmpq jmpq stc push sets dec cmp sub cmp ror stc rcr pop cmp cmc cltq bt test cmp sub jmpq pushfq jge popq jmpq jmpq jmpq push js push jmpq push jmpq push jmpq mov jmpq ror mov mov not mov stc jbe not test bt not cmp clc cmc sub cmc clc cmp and jle mov jmpq jmpq add jmpq push jmpq cltq clc stc clc stc sub jmpq data16 repnz not jo mov mov (bad) lock clc (bad) lock setae mov jae mov mov jmpq jmpq mov jmpq push jmpq sub jmpq jmpq push jmpq jmpq push jmpq rep mov bt cmc pop sbb inc ror pop cmc popfq jmpq stc add jmpq jmpq clc rol jmpq push jmpq mov jmpq mov jmpq push jmpq mov jmpq add jmpq push jmpq jmpq jmpq jmpq push jmpq jmpq jmpq push xchg cld lea std mov jmpq jge push jmpq jmpq jmpq shl jmpq push jmpq push jmpq push jmpq jmpq push jmpq jmpq push jmpq pushfq jb popq jmpq jmpq jmpq jmpq push jmpq jmpq jmpq jne bt test jmpq jmpq jmpq jmpq mov jmpq push jmpq push jmpq push jmpq jmpq push jmpq push je push jmpq jns mov jmpq jmpq push jmpq sub jmpq push js push jmpq mov jmpq jmpq jmpq jbe or sub clc bswap lea clc cmp lea jmpq jmpq jmpq jmpq shl mov test mov stc not clc cmp not jmpq jmpq jmpq push jmpq push jmpq jmpq jmpq lea bswap jmpq xor bt xchg clc cmp jmpq push jmpq jne or rcr or bsr xorb sets jmpq pushfq jmpq mov jmpq jmpq pushfq jmpq jne push jmpq add xor bt rcr ror not bsf neg inc sub seto movsbw bts cmp sub ror movzbq not movsbw mov jmpq cmp cmp sub jmpq jmpq popq jmpq setbe movsbq setp push movzbw not movzbw not mov jmpq jmpq jmpq jmpq push jmpq jmpq cmp test sub test test stc stc movl bt or jmpq popq jmpq jmpq mov jmpq mov jmpq dec jmpq jmpq dec jmpq sub jmpq mov jmpq jmpq mov jmpq popq jmpq jmpq push jmpq mov jmpq jmpq jmpq push jmpq push jmpq jmpq mov jmpq popq jmpq push jmpq jmpq jmpq mov jmpq jmpq push jmpq push jmpq push jmpq rol dec bsf cmc mov test add jnp callq jmpq dec jmpq clc bt cmc stc add jmpq jmpq jmpq push jmpq pushfq jmpq jmpq jmpq push jmpq stc addl cmc clc cmc jmpq jmpq popq jmpq push jmpq jmpq mov jmpq jmpq jmpq jo ja sub or setge not mov sbb lea xchg test bsf sub bt clc lea sub shl and rol sub lea movsbw mov movzbl pushfq jmpq push je push jmpq setle mov jmpq mov jmpq jmpq jmpq not pop jmpq mov jmpq push jge push jmpq jmpq push jmpq cmc cmp jmpq mov jmpq mov jmpq popq jmpq push jmpq setne bsf mov test cmp bt sub jmpq inc cmc clc test bt lea cmc clc not clc bt add bt stc clc stc xor test sub jmpq push jmpq push jmpq push jmpq push jmpq mov jmpq push jmpq popq jmpq jmpq jmpq mov jmpq jmpq jmpq push jmpq cmc and clc test cmp jmpq jmpq jmpq jmpq jmpq mov jmpq inc jge cmc ror jmpq push jmpq jl mov jmpq jmpq push jmpq rcl rcl rcr movzbl clc add jmpq push jmpq jmpq jmpq push jmpq push jmpq mov jmpq popq jmpq push jmpq dec cmp clc cmp cbtw cmc jmpq push jmpq jmpq push jmpq jmpq bt sub jmpq jmpq stc clc jmpq bswap lea pop retq jmpq jmpq jmpq push jmpq je seto bswap movzbw mov jmpq mov js mov jmpq jmpq pushfq jmpq push jmpq push jmpq jmpq imul jmpq jmpq pushfq not not std jmpq popq jmpq jmpq jae push jmpq jmpq jmpq jmpq jmpq jne bt cmp shrd mov jmpq jmpq add jl mov jmpq ja jmpq mov jmpq mov jmpq jmpq jmpq jmpq jmpq cmp jmpq jmpq jmpq mov jmpq pushfq jmpq push jmpq popq jmpq push jmpq jno push jmpq popq jmpq push jmpq add lea mov cmp cmc clc bswap clc cmp bt add jmpq jmpq jmpq push jmpq push jmpq push jmpq xchg sbb bts mov xor not mov clc add jmpq jmpq jmpq push jmpq clc stc cltq cmp sub jmpq push jmpq lea lea movsbl mov bsr sub ror and shr shld mov adc lea stc movabs shrd shrd add xadd btr sar or mov setl shld add add clc mov inc seto (bad) testb fmuls mov push cmc rcl not sub btc neg data16 repnz movzbl bsr sub movsbl shld sub bt movzbq movzbw seto bt clc mov cmc clc clc ror stc test add jmpq movzbw mov test jmpq push jmpq mov jmpq jmpq ror mov bsr mov cmc adc dec and mov jmpq push jmpq push jmpq jmpq shld movzbq shl mov stc jmpq jmpq push jmpq jmpq push jmpq jmpq bsf bts cmc mov sub rcl bts shld mov cmc sub jmpq js clc and jmpq push jmpq not jmpq cmp (bad) repnz mov sub cmp mov cmc cmc bt add jmpq jmpq jmpq jmpq test jmpq xor jmpq mov jmpq push jmpq pushfq jmpq mov jmpq add ror mov cmc add jmpq push seta mov lea inc clc cmc ror stc adc not cmc rcl jae xchg mov movsbw sub cmc xchg and bts adc shr mov dec neg btr sbb lea lea movabs bt btc shl sub add cmc sar lea mov jmpq push jmpq mov jmpq push jmpq bt add jmpq jmpq jmpq jmpq clc mov sub neg bt setl mov test cmc sub cmc shl jmpq jmpq mov rcr and test stc add bswap inc stc movzbw neg btr clc rol sub bsf btc rcr add add rcl mov clc bt cmc cmc add jmpq push jmpq jmpq push jmpq push jmpq jl push jmpq push jmpq seto sbb cmp jmpq jmpq es mov jmpq jmpq popq jmpq jmpq jmpq popq jmpq jmpq push jmpq bt ror test jle add jmpq jmpq cltq clc sub jmpq jmpq jmpq push jmpq jmpq push jmpq xchg bt sub jmpq cmc cmc stc imul jmpq jmpq cbtw stc cwtl cmp stc test clc cltq bt sub jmpq mov jmpq jmpq push jmpq mov jmpq jmpq popq jmpq push jmpq lea jmpq pushfq jmpq popq jmpq mov jmpq mov jmpq mov jmpq bt stc sub jmpq push jmpq jmpq sub jmpq jmpq jmpq jmpq jmpq jmpq jmpq push jmpq push jmpq jmpq mov jmpq jmpq shld mov clc inc add mov bt sub cmc cmc test shld jmpq jmpq push jmpq not mov jmpq push jmpq jmpq xchg pushq movzbw movsbw not movabs xchg movzbw jne mov xchg lea xchg movsbw push setb mov bswap jmpq mov jmpq push mov push movzbl push jmpq not jmpq xor clc stc cbtw jmpq jmpq push jmpq mov jmpq mov jmpq jmpq jmpq mov jmpq not jmpq add shld bts mov setbe cmc cmc add mov bt clc sub jmpq dec xadd mov clc cmp setb mov cmp sub jmpq cmc add jmpq sub jmpq push jmpq jmpq jno mov jmpq jmpq push jmpq jmpq jmpq push jmpq push jmpq xor stc clc cmc xchg stc stc jmpq mov jmpq dec jmpq stc add jmpq pushfq jmpq bt cmc addl stc stc push clc test bt sub jnp jne cmp sub jmpq push jmpq push js push jmpq jmpq mov ja pushfq jmpq push jmpq jne jmpq jmpq push jmpq jmpq jmpq push jmpq push jmpq push jmpq bt mov rcl (bad) icebp seta mov bt sub cmp bt stc shr jmpq popq jmpq pushfq jmpq jmpq popq jmpq jmpq shld mov cmc cmp bt cmc sub jmpq push jmpq cmc shld sub mov bts mov test cmc cmc jmpq lea jmpq jmpq jmpq push jmpq push jmpq btc mov test stc mov cmc jmpq push jmpq inc test not clc jmpq jmpq push jmpq jmpq jmpq popq jmpq jmpq jmpq jmpq push jmpq mov jno mov jmpq push jmpq push jmpq push jmpq jmpq push jmpq jmpq jmpq jmpq jmpq rep shr cmp pop not cmc stc pop cmc jmpq lea cld push ja lea mov jmpq jmpq jmpq jmpq jmpq add add add add or add add and xor add movabs xchg and add add cltd (bad) add add add and add add add add push es add add add add add add add add movabs (bad) add add add movabs es add add and add add add add and add add in add add add stc and add add (bad) add add add add add and add add add add add add add add ja add add add es add add and add add add add shll xor add (bad) pop and add add and add add add add (bad) es add add add add add add and add add pop es add add adc add add add es add add and add add and add add add add shll xor add movabs shlb add add add and add add movsb (bad) add add add movsb (bad) add add add and add add and add add add add add stc and add add pushq add sbbb add add add pushq add add add add add es add add (bad) es add add add add add add and add add shlb add add add in add add add add add std and add add es add add add add shll xor add (bad) cmpsb and add add movsb (bad) add add add add add add add add add adc add add add shlb add add add and add add and add add add mov add add add (bad) es add add pop and add add add add es add add movabs and add add add add pop and add add icebp (bad) add add add and add and add add add add fisub add add add es add add add add add add sbb add add add push es add add fsubl add add add and add add jno add add add add add and add add lahf and add add and add add and add add jno add add add add add pushq add loopne and add add and add ficomp add add add and add add (bad) es add add cs add add add and add fsubl add add add lahf and add add adc add add add hlt and add add ja add add add add add add add and add add add add movsb and add add fisub add add add mov add add add mov add add add add add add add add add and add add es add add add add add add fisub add add add xchg (bad) add add add add add add add std and add add (bad) add add add add add movabs and add add add add cs add shlb add add add (bad) add add add add add add add cltd (bad) add add add hlt and add add add add and add add add adc add add add shlb add add add movsb and add add and add add movsb (bad) add add add add add fisub add add add rex.XB xor add shlb rex and add rex.XB xor add sub add add add cltd (bad) add add add add add add add icebp (bad) add add add and add add and add add and add add add hlt and add add xchg (bad) add add add in add add add and add add and add add adc add add add add add movsb and add add add add pop es add add add add and add add add add scas and add add add add add add add add add add shlb add add add stc and add add add add scas and add add and add scas and add add xchg (bad) add add add es add add add add add add and add add fsubl add add add movsb (bad) add add add pushq add add add in add add add add add sbb add add add add add shll xor add adcb add add add add add and add add cltd (bad) add add add adc add add add (bad) and add add ja add add add or add andb add add add movsb (bad) add add add cltd (bad) add add add ficomp add add add add add and add add add ficomp add add add xchg (bad) add add add fcomps add add add adc add add add (bad) add add add fsubl add add add shlb add add add push es add add cltd (bad) add add add and add add add add push es add add add add fisub add add add and add add and add add adc add add add scas and add add add add es add add and add add add add add add es add add fsubl add add add add add add add cltd (bad) add add add and add add lea inc rcr sub and clc xor setae and bsf add mov shr shl jmpq push jmpq push jmpq push jmpq jmpq lea jmpq mov jmpq push movsbw not push lea bswap movsbw repz not push not inc push jb mov setne push dec jns mov bswap push dec pushq movsbw movsbw xchg movabs js mov movsbw movsbq not setle push xchg bswap jmpq stc bt clc ror bt test clc cmp add jmpq 