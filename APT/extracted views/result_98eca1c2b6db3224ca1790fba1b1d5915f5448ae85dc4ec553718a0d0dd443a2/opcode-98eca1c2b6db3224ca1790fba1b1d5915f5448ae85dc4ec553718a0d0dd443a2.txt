(bad) jg push mov inc xor movzbl mov mov pop ret mov mov mov push lea sub push push push (bad) incl push call lea insl xchg push fstp (bad) decl lea push call inc mov add mov mov add inc add outsb popa push (bad) jge out pop mov int3 rep cmp xchg or mov add push and adc jne add insl mov jb popf mov adcb enter fs and and dec inc orl xor xor out (bad) outsl push cltd cmp gs test mov mov sbb mov (bad) or or in ret lods cmp add (bad) fs xor push dec xor mov flds xor gs clc add cmp pop movsb cmp or xor divl mov push inc mov imul shr push (bad) xchg fisttpll push push push lret or outsl sti insl and or cmp dec je add xchg gs clc ret and cld cld xor fcoml push inc (bad) int3 cld add pop bound ret shrl jne sarl insb sar dec movzwl push add int3 icebp cmp add (bad) cld mov xchg les popa mov push sub loope pop sub push pop mov xchg pushf insl fwait unpcklps sbb test ja,pt pushf sub inc inc and int and adc pop and push leave adcl mov push mov insl mov push and leave or jne jo movsl je fs jo test push push daa insb orb add ret cmp mov adc fldcw sbb mov sub jne push cld cld fnsave add (bad) jne inc lods stc int3 int sbb call sub pop mov xor push or ret xor scas notb jmp (bad) mov test scas sub rol inc dec mov mov push insb cmp xor cmp pop xchg lods cmpl pop sbb push or inc (bad) in mov sbb mov test pop sub adcl cmpsb dec or xor rorb (bad) xchg add fs shr inc dec dec mov push push dec popa out cmpsb mov inc lock mov pop fcom in (bad) mov insl pop pop pop add leave les mov pop push mov push mov movsb cli jne popf mov pop js inc xchg add mov mov or push stc and pop mov pop push mov mov pop (bad) fstps test jmp sarb xlat mov sub push fs mov jmp clc sub push std inc sbb (bad) cmp sub idiv cld mov jbe movsbl leave (bad) mov (bad) mov and lea push inc cmp jb pushf ds mov and add out div imul jne or xor xor xor pop push add add pop cmc fcmovnu inc rolb sti or add imul (bad) mov stc shr inc inc cmp mov jb pop adc fdivs fwait in lock ret pop cmp shr mov or add push mov mov cmc sbb jns adc push dec es lock push jns hlt outsb mov mov fmulp int add xor les add rcl xlat aam or pop (bad) rorb sub mov or rolb (bad) jmp pcmpgtd add push jb mov mov sbb cmp or sbb ret insb push mov mov push (bad) jmp in es push mov adc pop sti pop fwait insl dec aam imul out jo je (bad) cltd xor mov sbb mov fcomps in lods push push push roll (bad) cmp jne (bad) data16 push clc push (bad) int or fstps and sub clc data16 insl ror or into std movsl pop loope sub daa fistl adc cwtl std add (bad) loopne and sub xchg add or imul stos adc (bad) mov fdivl push clc ret sub (bad) ret loope xor jb or shrb imul push mov mov jns out fildl pop andl add add stos (bad) lea sbb stc adc sbb dec ljmp movb adc outsl aad mov (bad) push cs and mov mov out sub cmp pop or imul xor push jne or jne add jne or jne cmp xchg or or jne bnd add inc das pop popa adc xor (bad) je (bad) pop sti push sbb neg ja cmp jno (bad) dec repz jne or push loopne or sarl or (bad) or xchg lret rorl inc push dec xchg (bad) jne mov cs aad pop repz pop les mov movsl rclb pop movb lret (bad) fidiv add (bad) add or insb lahf jmp clc add jb icebp pushl jle lea push loope (bad) xor xchg jnp je mov jnp (bad) or gs adc ja lea movsl add shlb sub sub sub out cmp xor add fcmovnbe rclb js or cmp pop xchg xchg push mov sub mov imul mov sbb push mov dec sbb outsb push mov scas mov xchg xlat outsl jmp fwait mov jle adc cmp jne in out lds jl (bad) jle fnstsw (bad) imul push add add adc or (bad) jle and in inc sar cmp (bad) sbb mov or pushf in popa push push fnstsw jb test xor adc movsl test lret orl fldcw iret adc aaa pop jne or and daa fs add pusha pop and popf pop daa test push in push addr16 xor xor in push jbe mov mov rclb pushf orb lods push xor outsb sti enter hlt push inc xor or pop (bad) jo sarb lods or add test pop or dec int sahf pusha mov int mov pop andl mov je mov and mov push xchg std adc subl jmp mov shll insl ret test push mov add aas cs push push lock rcr xor pop clc add dec outsl mov fs mov (bad) fadds rcl cmp inc xor jnp add xor push jl arpl inc les loope in push imul push cmp dec (bad) mov pushf movsl add cmp sbb xchg cld push push cld subl cmp jge inc fisttp (bad) lcall data16 add pop mov adc inc xor jg inc jp dec push jl fcoml cmp lea dec dec rolb jecxz adc adc inc mov sbb ja pop lahf hlt inc loopne fwait sarb jmp outsl ret sahf pop hlt je jne mov jae or (bad) fsubrs test gs push sbb sub jmp sub rcl mov jmp mov mov mov sbb sbb inc mov mov inc testb sbb jno push mov pusha adc jo push sub push adc dec insl lock adc sbb clc or cmp inc and idivb add es out mov and icebp sbb dec xchg jle repnz mov movb inc add dec call adc inc adc add fs imul sbb jmp jge decb rorl mov ss sbb in pop xlat inc adc dec inc mov fisttpl fbstp test and dec jne mov fwait rorl or adc fs movsl mov mov jne sub inc out push push lds ja push mov pop push jnp cmp push dec xchg add sub mov call sti rclb orl mov mov (bad) pop sbb mov daa lret leave jb cmpsb in test sbb int3 sub pop fprem fs lret push sub mov inc es mov stos cmp test add es mov mov call jno xchg mov push lcall pop xchg scas lods mov in jmp outsl pop mov adc cmp mov test sbb outsl lock addl std scas (bad) int3 jmp mov mov mov adc cmp jnp mov dec in jne aas push xchg fmull enter sbb fcom xor add dec sbb dec loopne push dec lods loopne inc cmp or fldt inc sub leave mov out push push cmp cwtl fldl mov lret fistl stos movsb cld push sub int sbb daa jne xchg jno js test lds call into xchg xchg xchg adc mov jmp xor pop cmp ja sbb pop (bad) ss cmp pop lds add js insb adc and sahf add lock lret pop stos popa (bad) ljmp sbb and push mov add mov push cld fmuls shlb movsb lock push cmp sti dec sbb pop xor sub repz fs movsl loope popf rclb cmp int3 add test int3 mov jne sbb mull dec cwtl scas call adc add test add cmpsb and sbb daa aas sti loopne test pop xor mov sbb or loopne pop dec incl sarb pop or loope push dec sahf push adc mov inc movsb nop jo (bad) flds push movb mov push and and fldt pop adc popa gs mov sub sub sub insl mov fsubrl xor lret xor xor xor sub aaa pop cmp cmp lods pop xchg sarb inc fstps inc and inc lods fstps dec sub cwtl lcall dec dec xchg push push xor push aam imul je sarl pop pop push pop pop int (bad) xor dec pop push pusha popa daa clc shrb arpl cld dec xor out gs mov push insb enter (bad) jb rep inc mov sub sbb add (bad) cmp mov mov (bad) lods mov icebp mov mov add push movsb fcmovnu push or data16 xchg adc sub sbb js jne jmp jb cmpsl aam xor sub jo add sub jo inc (bad) js aad (bad) rdmsr shrb aam (bad) lea mov dec loopne cmovo in sar and mov fmull shlb dec cltd fmuls push pop push fsubr (bad) iret movsl fiaddl cmp ds cltd movsl (bad) mov push xor inc lcall bound hlt add jb pop incl jo movb nop xchg in inc loope sub inc push sub fwait lea and and out inc cs (bad) dec pop xchg lods cwtl jne aam es add pop sub stos adc jmp mov cmp inc add cmp sub push xchg ret add jle fiaddl (bad) cld enter push cmp (bad) roll fidivr cs push xor jb mov mov sbb jge out clc push sub lret cmp and iret sbb jne in lock sbb sbb push push mov test rorb scas lea push mov pop xchg push sbb push fsubl cmp mov jo lock (bad) mov inc push in and inc sub adc or xor mov adc hlt jmp (bad) repz adc int3 shl cs pusha fldz fmuls and push hlt push (bad) lock pop mov iret test call cltd movsb or int3 add mov pop cltd sbb cld add sub jo and mov lcall fsubs dec divb push inc movsl cs mov inc cwtl pop aas ficompl fs sti pop insb mov incl mov imulb jmp fbld mov insb ss adc divl enter add lahf adc int3 insl mov std leave adc in or cmp add xchg shl add pop sbb pop ret daa shll xchg pushf cmp ja enter int3 xor test lock icebp (bad) lret (bad) imul in stos lds imul in inc sub and stos aaa nop and mov movsb inc mov mov pop rcrb cmpb jne orb jne add add or sub ret mov cmpsb movsl dec es xchg jg xchg std addl xor dec negl in push pop je in scas shl sub ret push sbb inc mov mov inc iret int dec jb dec or push or call enter mov in pop jmp scas add cmp aam rcr xor movsb outsb sbb pop in xchg inc nop xchg daa fcmovbe xlat jmp (bad) adc inc xchg in aam push sub add imul inc and int loopne adc pop decl pusha pop in cld jmp cmp or jge jb add dec add js movsl push rcrb loopne push in push mov jno xchg mov insb and adc adc les imul mov cmp push gs mulb or pop jnp enter fnop mov mov inc sbb pop mov shr insb movsb push add and dec rcll ret out pop cmp sbbb imul jno repnz xor pusha (bad) aas xor mov add pop insb xchg or enter pusha cmp xor inc insl inc out adc add aam and mov and aaa inc inc push outsl mov jge push inc push pop jo sub xchg xchg ret int3 jbe clc lcall mov ljmp leave insb dec icebp add je add xchg xor mov movsl insl nop add cmp popl les leave jae add or add pushf push cs imul mov scas outsl mov jb insb loopne xchg xchg addr16 dec pop pop inc sahf or pop push dec (bad) xor in (bad) hlt add enter cli lret xor xor in sbb enter rcl and iret test mov mov sbb rclb (bad) sbb out mov and inc mov push adc lods inc or cltd js cmp jp push test cli neg lea mov add out xor insb sbb push bts sub outsl mov mov or mov xor cmp push testb pusha sahf hlt (bad) cmpsl sbb xchg inc cwtl push sbb leave xor jmp in loopne enter (bad) cs cmp pop rorb pop cmp pop dec push inc jo sub pop pusha sbb or add inc adc (bad) or daa roll mov push mov mov fs or dec lods movsb mov subb push fchs push sbbl or add sbbl sbb pop rolb mov fcmovnu or xchg int lret nop lods hlt cmp test lock xlat dec mov inc add push (bad) clc xorl outsb jae dec pusha dec and mov daa xor inc jmp push mov test pop pop pop clc add inc cmpsb fs pop fdivs insb xchg test mov cmp test xchg ljmp lea push xor jns int add (bad) pop sbb push int push dec ret shlb testl int3 adc jb adcl push leave fistl jnp ss add leave and add out sub insb and decb push add cltd add mov rcrb dec icebp lcall inc sbb test pop je dec fstp mov cli sbb adc imul xchg (bad) jo lods mov cltd jb pop enter and dec insb sbb fsubs adc mov jae and inc add inc lock push shr pop cmp sub mull jne ffreep pop mov mov cmpsb movsl movsl movsw push cli sbb dec fisub mov add jl xchg rol dec hlt pop shr js ja fnstcw xchg test outsl push mov xchg mov rcll fistpl pusha fist je push mulb mul push mov not fsubrl icebp xchg push cmp jp nop adc sbb fwait cmp push aam lahf js or sbb mov scas mov mov sbb or adcb add xchg bound pop push (bad) lret stos cli mov sbb add push dec mov xor mov mov mov add sahf sbb mov jge aaa es int3 push call xor cmp pushl fldcw mov mov xchg xchg mov mov mov pop roll xchg mov mov xchg mov addl or jmp imul mov stc sahf pop lret mov enter sahf sbb imul cs lea xor addl jae test or adc subl fldcw stc jmp xor cmpl and add mov inc pop or sbb movb out inc sbb jecxz js add lea pushf sub xor mov mov or cmp xor test test push in in out inc nop in pop pop jmp test inc jae push push mov divb addr16 dec (bad) movl adc fwait mov mov sbb push add push inc les xor push jp add fdivr add xchg xchg out add or and pushl fisttp push jecxz push enter insb aad lock push or into inc lea mov sub test inc xor dec sbb push xchg mov adc push xor fs pop and push fcoms mov add sbbb or subl xchg rorb (bad) xor mov ret push add sub lahf jmp dec or mov and dec add cmc sub add hlt imul or pop push mov aaa pushf enter inc add pusha mov or inc or pushl and adc sbb xchg sarb bound jnp fldenv xor or xor hlt cmp and mov sbb sbb mov rolb sbb pop adc (bad) test inc adc loopne das pop test mov sbb sbb fcomps jbe addl jbe popa pop imul add test cmp jne push pop clc fstl mov mov dec or xchg push push fs cmp mov into cmp (bad) sub cwtl push cmp mov jo pop xchg pusha lods pop sub arpl das push mov cs loop sub cmc and shlb mov dec test jle outsl or xor or jne icebp jg sti dec test jg add add sarb movb dec lods inc cltd push pop or or ret clc mov rcll fnsave add add lea loop leave clc xor sti jne jmp iret sbb pop mov add fsubs push push (bad) adc (bad) jg xchg and add and mov or dec ret jne dec push loopne push inc jno cmc mov mov add scas xlat sub or mov (bad) outsb or (bad) push sbb leave ret idiv sti adc sub and adc dec arpl (bad) add push pop xor ja rep jbe xchg cmpb pop push push cmp test mov lock test lea subb cmpb add xorl das push jecxz cwtl loope es jb and loop cmp jmp push inc push inc inc push or (bad) push mov xchg test faddp ret andl clc sbb pop mov std aas cli nop cmp mov sti mov movsb push push and incb mov cld in jns inc sahf in jmp scas add pop in cli test loope cli xlat (bad) xor and lock std add xor sub mov xchg (bad) and push addr16 inc (bad) jne xor aad add inc push outsb dec (bad) or or xlat sub adc enter ret push daa push shlb popa pop and aas sbb jp lcall mov xchg sbb imul popa dec inc or dec push in pop je jbe cmp push inc push and xchg jge js fwait push call (bad) pop jno out int or push push nop cmp xchg mov xlat cmp dec clc adc out les cld or jb add jo nop pop add inc enter jl clc cmp xor test push pop and pop test add add lock jns loope inc or push and xor jne orl or insb and test xchg pop push lea cs frstor pop ret adc add loopne add das inc clc jl sub adc add cmp in xor push andl std bound mov jle loop push push or cli popf sbb mov pop (bad) loopne push xor adc push mov dec clc jne bound iret xchg jge fwait dec mov add and ficom push xor pop jbe shrb sub mov pushl adc push adc or leave mov fldcw add mov adc leave test mov add add test les daa test push or add ret je pop and cmp pushf cmp mov clc sbb cmp out mov adc jb scas or jo (bad) pop push fidivl xchg call mov or rolb dec inc loopne push es shrb popa mov inc xor dec mov xor movsb mov pop mov test pop push mov adc sbb or movsb rorb sub insl inc sub enter pushf imul sub stos add rcrl jns jl je add repnz pusha add in js cld pop enter sbbl pop cltd inc xchg insl sub fmul idivl inc hlt cmpl jl inc outsb xor mov push push pusha imul adc (bad) or test xor movsl fsub in pop rcll hlt loopne lds (bad) sub mov or scas fwait or add enter in bound call inc movsl inc call sub mov lock inc mov and mov lock testb or xchg push int3 clc sub sub sti ljmp jmp or or sub add jmp (bad) sub neg push and cmp ret nop lea fs sarb mov mov add mov adc pusha hlt and clc cli jbe in pop je pop xor dec pop leave xor mov inc add mov fsubrs jmp test mov mov loop pop mov (bad) inc mov jl mov les ror push mov adc push stc test xchg or sub int mov xchg lock insb mov adc push fdivp pop pusha mov jg leave mov lock xor sti enter sbb push adc pop jbe add push aaa pusha inc adc insb pop cmp mov pop aam dec sti xor daa sub ds clc add mov lcall dec rcll and sub mov mov call icebp push push jno xchg xor hlt mov push xchg push les in mov cld cmp mov jbe push pop jmp mov add inc or mov add push push dec sbb (bad) sti pop adc dec lea jns push push sub mov or insl leave push clc jo ficompl movsb cli imull lret or out adc add (bad) cld out (bad) jb test or movb jb add sahf sub and jecxz and add sbb inc mov stos or jne jmp pop test mov jge sbb push shlb xor push in pop sub mov mov test xchg hlt or inc int movsl dec add enter pushf dec sbb aaa lock or sub fdivr roll push loop jne lea mov sub mov lret jle and je,pn dec inc push xor (bad) dec dec inc xlat lock inc inc add xchg mov stos push jb inc and push shlb jg lcall pop fistp pop pop pop add (bad) notl sarb fdivl (bad) je adc or jae pop ds xor and mov fs sbb jbe int3 mov mov mov ljmp rclb je jb (bad) xorl xor pop test pop pop or push mov fsts dec into add aas mov and jo ret (bad) jae enter push push pop lea fmull inc cmp rcr dec sar sarb mov push push sub push mov pop adc lock add cmp fdivr mov cmova cli xor sbb sbb fcmovnu and inc xchg jmp mov xchg and dec add stos xchg mov mov push test roll sahf add fsubs or adc dec aam test or dec push jl fcmovne aad ljmp mov xor scas push mov inc lcall icebp addr16 stc enter or clc inc jb and mov lcall xor cmp stc and shl add mov out lods insl xor sbb cmp sti pushl js shr shl add mov fstpl adc fidiv xchg add ljmp mov sub dec hlt push pop push mov mov mov pop ss rcll dec leave out (bad) add and mov add cmp sub fld fsubrl or hlt std movsl in mov jle (bad) lock dec xorl inc adc loop adc rorb lret (bad) add dec mov push or inc jne cltd andl push and jno cmp inc add mov mov cmp cmpsl icebp pushf inc pop mov adc push fs push xchg or ja mov push jecxz adc cmpsb in adc leave mov push mov push mov mov cmpsl sbb je pop or sbb lock push lods lock lds orl pop std inc pop ss enter sub or movl add lret sar mov mov adc mov and jnp lret adc and (bad) and pop fild inc insl mull (bad) push jge dec xor mov jmp push add fcompl fidivrl je add jge jae sub flds fiaddl int inc imul cmpb out cmpsb jnp outsb cmc and sbb sbbl idivb pop add cmpl mov cmpb (bad) loopne pop jg push sub sub xchg mov pop adc jge loope pop gs or sub cmp or ja sub add mov xlat jne orl or push jmp cmp mov xchg pop nop lock mov sbb inc ja imul sbb mov sbb adc and pop pop ss std scas test inc fnstenv scas cmpb adc inc or dec sbbl xchg loopne mov hlt xchg dec je clc push loope mov ss add pop sub pop mov jl pop stc out push stc rclb or jne (bad) cli aas xor jmp add adc std sbb scas fdivrs mov out inc mov neg mov xchg test cmp jge push and insl add and or pop inc cmp mov repnz xchg mov popf out outsb mov jl sbbl out loop nop and inc add les sbb dec fstp push sub inc mov mov ljmp sbb push jl lock sahf cmp lcall inc (bad) cld dec sbb adc or pop lds add sbb je push or (bad) adc adc mov jmp es shlb in cmp fwait adc mov xor (bad) les push push add cltd mov mov push jmp add add dec and nop or sub push jne (bad) push lds or adc mov pop cmpl imul je push andl add mov xlat inc add daa es sahf stos stc jp mov gs subl pop push popa in dec ds inc jns decl adcl nop ret sbb sbb out add fwait (bad) mov ret rcrb dec push clc clc fidivrl aad jge adc mov inc push das xor fnstsw test leave test inc dec std cmp inc daa addr16 mov fadds sbb (bad) and sbb mov adc pop and lea add (bad) ss in push inc loope or rcl push xor (bad) not mov sbb xor or inc fdivrp xlat sbb ret mov pop in push pop cmpsl aaa xor fs jmp jne enter je mov jmp lahf insb movsl and pop push cmpl sub jmp xchg jbe jmp or add enter dec std imul add xchg jmp fadds test je mov fistl or shrl push add sub jecxz lret push rol pusha push (bad) mov lds sbb cmp mov push inc push sbb push popf rcrb mov cmpsb push push outsl cwtl and add scas int3 push nop mov sub loopne jge push push jge dec or int3 dec out js daa and xor fwait clc add push in push sarb lret or fs jmp test pop not stos add and mov notb adc pop adc xor cmp les fcomip pop dec notl shl sbb in mov (bad) jge and inc push and jnp sbb jge data16 sbb aas andl adc movb popa std xor sub nop int3 in adc push lret jecxz in jl add pop ret xchg and mov mov xor in cld sarl negl inc imul pop adc mov push jle cmc rclb xorb gs push je sti out cmp push movb and push inc pop push test adc movsb mull push sub xor xor movsb test rol adc xchg mov js mov inc and and and adc mov inc and dec mov add push dec add dec push (bad) inc pop cmpsb xchg inc dec or sub sbb sub or test sbb sub lods mov or inc mov pop dec xor adc cmc icebp adc mov and pop std adc add or or icebp push mov push mov push xor das mov pusha and cmp fsubrl das jne hlt outsb leave fs push mov sub dec sbb imul push test jl repnz imul or insb les imul les or ljmp lahf xlat aaa fstl jle add or (bad) std je mov add loope mov sub das xchg in push add int3 push pop jae dec cwtl leave imul push out sbb mov and push push stos adc mulb cmc inc lods imul stos fmuls push ret mov pop repnz subl mov shrl xlat popf dec aad pushl into stos adc or add outsl fsubr dec aam mov cmp add mov push add jne push popf sti pushl pop movsbl inc jmp xor inc adc int add inc cmp jle and adc and sbb push cmc mov mov fcmove dec bound add mov arpl inc add xlat cmp fwait lods or and jle mov mov push hlt cmp loopne das in inc add js bnd mov mov xchg lock mov pop cmp imul (bad) incl add mul seto neg or push stc jb push jne mov add inc stos nop mov mov lds test (bad) aad xchg inc push or ltr loop aas cmp sbb and out adc fsub cmp std mov and xor cmp mov xchg adc mov test lea (bad) push mov mov jbe fadds daa sbb pop sbb lods adc ret imul cltd sub dec xor (bad) clc mov add push add pop or ja add lea inc mov pop push das adc (bad) sbb mov popf adc call push and movq icebp fildll dec adc mov xor call cmpsb and mov push dec mov pop add push pop mov addl push lods mov imul xchg fdivrl sbb pop sbb add inc cmovae jne cmp jne mov pop div jg ja mov mov cmp and je push pushf pop (bad) jle fsubs push dec imulb fisttpl mov std push pop or xlat out nop insl jmp inc push stos inc or sub pop push or or daa inc xor push inc mov sub sbb mov sub mov cmp inc inc inc sbb icebp pop mov pop cmp mov in clc shr fadd fwait outsl les (bad) jne shl dec imul out lea jl mov clc insl loope imul push xor ljmp lret in ja sub jmp popa movb inc pop lock jg aaa pop icebp insl push mov and dec inc or inc test js adc or in jne roll cli pop (bad) xchg jl addb into lea add jbe test test lret and cmp dec decl test mov mov (bad) dec mov mov or hlt scas pop dec inc mov ret shlb xchg (bad) cmp push ja lods leave insl or add cmp fisttpll cltd xchg insl add mov das add dec decl or in inc in jb insl inc inc imul pop adc push jae movsl call call outsl ja call dec loopne in mov push xchg dec push or lock inc or jne addl enter pop es dec inc cld add sbb ds cmp mov in movb inc push shrb in or fmull push (bad) xor add or or jnp add sub inc push add xchg leave clc pop jmp cli lret add (bad) cmp jne cld or and cmp jb fsubrl inc test stos jbe fwait push popa push sub fwait inc sub ljmp xor mov inc dec loopne ret rcr loopne push and or pushf jae (bad) jmp or decl jmp mov jbe cmp jae mov daa xor mov push or test lods jge pusha popl add (bad) outsb add into xor dec lds cld xchg incl mov dec push dec jl sbb jo hlt cs call pop clc xor loopne or fucomip arpl add push sbb jge push test push (bad) dec in mov or shll jne std in cmp mov sbb cmp aaa sbb adc fs sbb jae mov jne push add mov in hlt in in jl xor loopne mov pop insb cs out adc push lret jg nop push dec rorl repz add popa lcall xlat jae popa cltd ja fdivrs dec lods jae inc jno mov movsl nop jne or lods hlt pop push (bad) ja inc jmp lea jle add lea or (bad) sub jbe cltd sub cmp jl xchg inc ds mov cmp out popf push mov push or jge jae jmp pop mov mov push mov mov xchg jo mov sbb sbb out push lret loope cmp add add mov lods (bad) sub push add inc add add mov mov mov popa sahf gs dec lods jno mull mov js push dec mov dec hlt aad inc mov mov mov add mov ja fdivs inc sti add leave mov add jecxz or lret bound xchg jge data16 jnp adc out rol addl or pop adc roll push ficomp lret sub xor ds fwait xor mov sahf lods mov test xchg mov bound inc or add push mov and aam inc dec inc jle cmpb aad push jecxz jbe add xor pushf ret push xchg pop and adc mov mov punpckldq pop push mov pop fmuls or lods (bad) mov les out push fbld add mov push sub adc int jle pop push lea mov roll pushf cltd sbb std adc outsl fisttpl add icebp mov sub xchg test adc adc cmp movsl add mov add aam xchg incb xchg adc inc fldt pop pop jecxz lea add xorl sub or out hlt and repnz inc cmpsl pop or insb sub aam inc and xchg ljmp and es icebp pop stos ss add pop add inc push mov push sub mov jbe push adc adc mov sbb mov add or pop mov cmpl imul dec sbb mov inc jecxz cmp xchg add adc cmp push xor call (bad) lret xor fistpl fbld jbe sbb add lret lock push mov dec pop fwait lods mov or sbb lcall sub cmp (bad) lahf add (bad) dec sub pop cwtl mov arpl inc mov int3 and int adc pop pusha aam push ret sti push test inc js jge or mov or xchg push mov les and cmp flds adc jl push sub jae jbe dec jns push fidivr sbb mov repz clflush push push push push push rcrl movsb add sub xor or push out (bad) push or fistl rolb add pop or xchg mov sbb push sbb mov and pop jle pop out aad or aaa pop mov add add mov mov (bad) pop cs in ljmp stos mov push push sub pop mov or add nop pop adc lods add mov or decl fdivrp fidivrl jbe mov add aam push mov insb mov rcll les pop mov push inc loopne hlt push roll js push (bad) sarl inc imul sahf inc mov jne sub icebp cmp inc ror mov adc out jb pusha (bad) sub inc dec jl jne dec xchg mov sub dec or or inc faddp sahf in mov push sbb adc push dec nop inc jnp,pn jo dec js sub or and cmp mov decb push jmp add add shlb stos sti push out add or in fs push aaa testl shll push push or test pop loope adc mov jl jmp dec jecxz sbb mov data16 lea fidivl add push outsb mov scas sbb rolb xor test pop je xor (bad) xor mov lds das add add test ljmp and pop adc add mov xchg and xor and mov js ficomp testb shrl jg in std mov add sbb jo add push push js add cmp add cltd mov ss aaa scas mov shl or sahf sti pop cltd adc (bad) mov sub dec adc jo scas aam xor adc ret out pop ret or add insl mov sbb push xlat into add (bad) fwait pop pop rcll pop (bad) push cld pop xchg lods imul jle fisttpl mov dec adc jnp sbb add addr16 push std pop pop shl or or or pop les add mov les pop cmp inc ljmp rcl enter mov das mov xor sbb push pop adc sub aad add sub scas push sub sub mov jo push test pop mov loope (bad) mov jg ja mov lock pop int ljmp add inc pop nop and mov push int3 je movsb inc push or add das xor inc sbb ror xor sbb adc retw mov ror test mov xchg sub mov aad pop int3 mov add das push cmp add adc or es sub rcl hlt dec bnd lret cmp enter push push or lock push lds mov push je sbb or sbb jno lcall or mov and imul lock es add repz inc cld adc cmp push dec jb lods xchg sbb push jp (bad) fnsave ret mov fmuls mov mov or sar pop inc leave and push inc add mov int3 dec mov fiaddl push ror ret popa push xor test mov in sbb sub adc fcmovu mov sbb sub xor in and fist sti fist sub push push pop xor add popa xorl sti imul push insl adc clc mov fildll or pusha test pop mov fstpt je popa add jl test ficom (bad) or cmp gs or adc mov add xchg adc iret pushw ja jnp push or mov adc mov flds inc adc adc adc pop or sbb add push mov jp das inc nop (bad) jne int ret call mov fwait adc mov sub fcoms push push je test loope ret aam dec js jmp mulb icebp call ds cmpsl adc or aam xchg add push dec cmc cmp pop dec push adc imul adc fiadd mov pop mov push lods xorb add idiv jge jle lds andl adc hlt jl cmp xor add sahf mov fist mov jmp push in rcrl (bad) push dec jno pop in push movsl dec push pop push sub push ja mov adc mov xchg add dec cld lsl lss xor clc (bad) push mov (bad) fidivl rcrb addr16 out daa adc xor lcall inc movsb push push stos es (bad) in popa test push inc jbe add mov and or pop or sbb outsb clc cmp mov sub addl ret adc cmp orl mov jnp,pt jnp clc cwtl rcll and cmp xor mov inc push push inc test ret mov jl push pop (bad) inc mov push sarb out add mov or push jno xor inc add add sub movsl push lock lcall adc and test jle mov mov sub push mov je daa sub adc or aaa pop add mov pop ret push pusha xchg xlat or or xchg into add pop jmp xor pusha mov pushaw lods leave mov int3 fs pop pusha mov shrb fs jae ja ret fisttp dec or dec lcall or adc and scas test mov pop push adc pop sarb out loope cmpl or push cmp push ja push mov mov pop cmovbe stos (bad) in imulb jge cmp xchg sar dec fidiv mov inc popl pop dec (bad) call or in out push pop ja jne in and incl sarb push add (bad) sti push dec out cmp mov push push cmpsl mov cmpsb ret sub xchg jb cmp lea bound inc sbb sbb push ljmp mov add pop inc push push push lcall fidivl test sbb aas test pop js popf inc addl jne mov cwtl ja jg cmp xor fwait jne inc dec jne pop mov jl inc jmp or cmp loop jecxz inc jmp inc ret pop mov clc add adc mov inc rcll shr inc inc mov dec cli sub rcrb adc adc test pop and mov dec inc and in mov and stc cs jl rorb adc sub or push decl xchg pop aam pop or nop subl jbe int3 push lea jg mov adc (bad) push sar xchg jmp int3 int3 push fninit fnstsw cmp jne flds mov and cmp jne fucomp ljmp call sub or adc pop pop pop fwait dec cltd and shlb add scas jmp fisubrl add fldt cmpsb adc clc cmp jb jb sbb push sub sar add mov push lods dec push cmp jbe dec push jecxz ljmp call call lods cmp imul (bad) jne xor je or push orl je dec pop add dec add mov andl out rep pop and lods cmp jbe jecxz stos inc jmp jecxz stos push lcall xor insl pop jecxz mov mov incl mov sbb lods mov cmp cmc dec mov cs pop stos mov mov and sbb lea xor or arpl je xor push xchg add fistpl adc add inc pop lods pop push sub cltd test inc fs inc fwait mov add pop scas inc cmp bound jle add cmpl ljmp sub lret scas adc lea cmp add pusha sbbb fdivrp jmp test je mov adcl outsl push mov fs (bad) mov sbb or out test stc jg decl jne add rolb or (bad) (bad) into je rcrl mov add fdivs mov mov shlb arpl and ja jge jbe hlt cmp mov inc jae pop imul or je and mov outsb arpl cs fsubrs lods pop xor adc inc adc lods loopne add push adc pop sub mov leave outsl inc popa jne sti inc xor xor cmp jae and cmp jbe es jae shrb or xor (bad) cmpsb and adc sysexit sub scas mov push fsubs pop cmp bound js dec bnd mov fs mov sub sub sbb xor adc or sub and fs sti addl mov (bad) jle lea dec push xlat push sbb cmpl daa subl push push mov or dec push inc outsb mov in cmpsb es fs aad (bad) inc jmp subl out mov add adc pop inc mov lds xchg pushf mov fisttpl or mov add sti lds push scas mov or xchg in sbb adc mov shr cmpsl pusha sub js mov loopne pop aas mov aad aas cmp loopne or dec jmp cld sbb jmp pop mov xchg loopne aam fcomp outsl lret mov adc and loope in mov and je mov inc xor pop sbb scas popa in sbb cmp push or aam scas mov cmp push or mov aaa mov (bad) out adc stos mov jmp jbe fcmovnu cmp popf push loope jne sbb mov cli or push in jae fstpt add inc test sbb fs sbb and mov pusha jb sbb xor mov adc imul nop leave xchg cmp pop ljmp adc push outsl fldt xchg cmp mov push test je push les mov addr16 aaa or lea jp sub in insl sbb je inc jle inc jle pushl adc sub pop jmp sub je test decl je dec jne push lds jge addr16 lret pop jb xchg bound lret pop mov jnp in sub js aad bound jmp inc or inc in pop lock sti scas inc add ficomp lods jbe je add mov arpl cmc add fidiv jg call xchg invd jne push push push dec out jmp xor push jl sbb jne gs xchg push scas rol xor aad leave mov push dec cld sub jbe (bad) aam and in adc inc mov sbb cmpsl push cmpl divb mov icebp mov pushf jnp mov or data16 fimul les pop mov xor add or (bad) out xchg lret aad int3 xlat lcall in push shrb fmuls dec (bad) out fistp sub insl adc or rol lea enter sbb (bad) or insl rolb add push cmp push sahf push xchg push rcrb pop adc or xor rcr in test mov sbb das cmp addb fildll xor dec lea mov clc and je sub add jae cwtl movl scas fs aam dec pop adc adc push cmp je push jae rcl mov push lret inc fildl push fldl fmull call bound test cmp test or pop sbb fld1 jmp inc lods fistp add inc in add dec fmul and jne (bad) std insb scas addr16 fldenv jne xchg jb sbb inc xchg add and push adc inc je mov imul push lea insl out jmp fmuls jno repz or jl fmul jne sti fld ficom rorl movl mov or cltd fstps (bad) fldl add adc jp push sub in insl dec add sub ret cld mov decl scas pop loopne or subl sbb popa jb mov jns pop and inc jb aaa jmp shr mov sbb jae imul add push or push inc jno add in cmp in fcmovne and fistpl push out lock orl or mov xchg and or sub or cmp stc cwtl push outsb adc lods (bad) lret subl jnp fnstenv (bad) fcoms jmp fisub sub inc fsubl mov cmpb test adc dec lock pop jne inc lgdtl or in sbb sbb addl fmull lret incl sbb inc into (bad) shrl (bad) je jecxz je sub sbb ret pop or push sbb mov and dec cmpsb pop mov jbe dec js,pt adc xor sahf out jmp add or ret pop ss jne xor sbb dec icebp ds mov clc outsl insl cmp je cmp je adc add lret fstps dec xor daa and pop mov adc add adc sbb mov inc test adc adc or pop into in push add test test ds mov push xor mov minps adc dec cwtl rcll mov jae adc aaa ljmp jb cli push imul add pop and or add mov aad mov and add in scas ficompl or clc movb jmp xchg popa outsb lahf cmp and sbb fsubl and pusha and into jbe pusha pop xchg pop cmp sub pop (bad) pop or sbb sbb sbb (bad) pop inc mov pop jg inc sahf push lea fisttpl test push into push jl or lds test jp adc push ss pop adc in andl pcmpeqw inc stc jne jmp hlt imul or jb jne push push dec into dec xor or mov push call sbb add lea cmp mov or (bad) xor inc push inc xor mulb aas cmp mov cmpsl imulb fwait in ss xchg pop adc jmp insl xlat mov rcr jmp es lea int3 add cltd xor sub pop xor ret fisttpll enter or fsubp fsqrt fyl2x repz adc mov dec adc add sub adc lea cmp pop or mov jmp test int push mov aad inc or add (bad) lea outsl repz xor xchg add cmc mov push or push push int test int adc mov in mov int outsl call jecxz mov and inc or mov or inc push adc sbb mov decl sbb cmp and xchg mov add or ret push shl or pushf jg pop loopne lret sti add ss and in cmp push ja int in add rorb adc push shr and xor repz xor out jle add mov sarb pop xchg loopne and cmp jbe stc (bad) pop add jmp movsl xor or pop insb xor or stc jmp ja fwait pop push and int3 sub dec (bad) mov cld add cmp dec jo xor or inc call das jnp sub dec fldl2e mov cmp mov lock rcr fsubrs std fstp adc icebp or push inc inc repz dec rorb add and add sub and or stc cmp push pop addr16 lret sbb test push mov dec cwtl or jb popf xor sbb jae xchg andl aam mov cld bound adc lods or push outsb enter ja xor jnp or pop pop sbb or insb popa and outsl loope mov and jg push xchg popa push (bad) roll fwait add dec mov dec lcall scas xchg imul add int push and push in adc fimull in lcall in mov jg out ret and cmp add jne fsubrs ja and lock loopne loop mov or jns or add movb pop sbb call xchg add movsb dec add mov mov outsb sub cmp jo (bad) push pop or test aad cmp jmp cmp mov lcall adc sub ret decl mov jnp std lods (bad) adc or jne push add push push cmp ja xchg or (bad) je call sub or subl sbb adc push sbb cmp rolb inc loope dec loopne mov cmp mov out sub jb pop cmp jne mov or cli sbb repnz fistl ficoml fs ret jnp sub add mov or push push adc sub aam sub sub or (bad) pop cmp cmpb call hlt mov out adc ds push mov std je test popf push sahf push setg dec xorl adc inc push inc xchg adc jo and inc add scas xor loopne pop mov cmp hlt xchg (bad) adc adc mov fstps fisubrl in fdivl mov xor dec sbb mov adc jbe cmp push add and add clc lahf sub mov sbb pop mov scas test std and pop mov adc or in jle jg das fisttp jb pop xchg addr16 movb push test xlat inc inc fbstp add mov lahf jb dec mov (bad) fadds (bad) xchg std ret or (bad) in adc icebp and in fsts jb push in call call add or test xorb mov rorl (bad) or or lock mov add push leave cmp test cs mov test decb sub inc insl inc sub pop ret movsbl push or add jle dec jmp mov adc adc jbe and bound xor cs pop adc stos loop ja out (bad) (bad) jmp scas sbb (bad) je lea sub mov dec adc dec mov pop int andb (bad) incb fmuls shr ret mov adc rep mov and stos lret cmpsb fimull sub pop or push adc jae pop dec adc mov mov fsts cld call cltd xchg and and dec and mov mov out adc cmp insl clc push cmpsl pop or lea or rcll mov sub push jbe push lea shr inc mov fisub sbb out add pop cli pop jbe pop jmp mov mov mov inc xchg fisubrl inc sub addr16 adc addr16 dec adc sbb push mov out sbb mov stc add notl and adc push (bad) paddq xlat adcl fs push push push or push pop jmp into add sbb pop jl sub push pand arpl xor sub pop xor popa add sti daa fimul adc and adc imul cmp ja mov jge call sub lahf outsl sbb mov sub xor loope into mov pop mov pop in inc xor dec inc in (bad) repnz pop test mov jb inc push ret movsb push pop jnp out adc jnp push push jg cmp addb insl aas (bad) or dec movb out adc incl in dec mov or mov push mov (bad) scas test sbb les push and pusha push adcb add (bad) jne mov cs shrb aas or into pop push inc push fs xchg sub sbb rorl push or stos jb (bad) or xchg mov jecxz fstpl in cmpsb int3 das (bad) (bad) mov cltd add adc outsl call hlt add pushf or shrl jnp lock in xchg stos jge cld jae pusha cld (bad) aaa call dec pushl enter add lret popa add sbb pop cli cli push adc mov mov aad xor (bad) orl idiv push mov mov and xor mov ret pop jp push add push inc and imull pusha addl mov das xlat or or aad jmp int inc mov cmp je sub shlb and add mov dec (bad) loopne insl (bad) and add fmuls push lcall mov cmp js push mov pushl adc pop rorb push inc mov push inc cmpb (bad) or mov mov and push rorl or out lcall add xor and cmp or mov (bad) push add mov inc pushf or ljmp xchg test or or (bad) and ja aaa fmull push mov mov inc inc dec lock pushf and and pop loope popa test add and fdivl lret cmp inc and xor xor push ret push arpl inc ss mov cmp cmp arpl or jns add inc sub cmp je rolb fsubrl xor pop push fstpl xor nop je mov cmp addl cwtl mov cmp inc inc out cwtl cmp push fldz sbb inc cmp ja pop push (bad) fdiv add fwait (bad) js push and (bad) lret push sub add xor psubusw xor or adc fstpt or roll mov iret insb loop cs xchg jae test (bad) outsb aaa or fiadd mov gs jne mov popf test add xchg mov add dec jne dec sub jae inc out (bad) ret rcr sar inc mov inc and xor adc add mov xor stos dec es fs fdivrs push pusha xor push test mov lahf rcll mov inc cmpb pop mov mov sbb mov sbb unpcklps sbb inc dec xchg dec cmpb bound ret sahf push mov fs mov inc pop ret or and sarb not cmp jbe test pop inc es sbb ja roll pop in (bad) bound push mov pop ret bound (bad) arpl add ljmp cltd mov or dec fisubl cmp sbb lea pop pop add cli js or hlt imul insl pop mov jmp push sbb cmp mov mov cmp and js jne inc test or daa mov adc in scas jle cmp jae repnz mov sub ljmp pushf mov repnz or pop or fld fadd sti loope mov hlt out es insb (bad) add pop sti jne data16 or add mov sbb push or test or and mov pop add wbinvd mov fs loopne ss add lcall sub push or inc add adcl push pop cld jmp nop ret adc popa mov xchg adc or cmp and sbb bound invd and and or clc fwait jmp jbe or add sub test out insl dec insb push pop adc add fwait pop mov add and add dec push mov pop mov inc inc inc and mov fisub add fbld add add and mov push or lret data16 (bad) pop adc mov inc rcr xchg ljmp dec movsb xor push inc out jb mov mov sti out adc push lcall or loop jnp fistl popa dec mov rcr push fsubp xor shr or push mov add bnd mov adc cmp pop pop mov iret lret mov daa lret inc inc push inc sub fstpl call adc ret mov xchg fcomps adc dec dec push cmc sbb ljmp lret fstps leave not jg xor leave leave xorb or pushf jo cmp sarl sarb xor pop imul fwait je or sbb insl rcrb or or fstpt in cmp inc or icebp ret (bad) stos jnp add adc xor push mov mov or mov adc cwtl rclb cmp cmp jnp ds inc das jne pop (bad) mov shrl xor or outsl cmp pop adc fisttp cmp jmp xchg cmp imul outsl pop or std out lea add and jne jne add test xor sbb xor insb and add rorb mov sub add and add test push cmp xor dec mov pusha fsubrs pop push dec pop stc ror push add out scas fsubl dec push (bad) sub push (bad) js,pn cmp dec or lahf fmul leave pop push mov outsl or mov mov loop or jmp leave data16 jg xor push nop int3 dec test jp js mov cli outsl sbb lea mov inc popl pop addb sbb imul push pop test add lods out push or std cmp out shll pusha sahf fidivl test adc add xchg int3 out push cmp dec inc push xor push fmull aaa fstpl mov adc push jo aaa and dec nop push sarb jnp cmp push pop xchg (bad) out and pop into sub add pop push mov add lahf call dec js ffree aaa cmp mov mov insb sbb mov or add dec add xchg into dec cmp add or repnz add roll mov and cwtl push mov fsubrs jns stos push xor mov movsl ljmp jb pop xchg test pop and mov inc sbb push lcall jle sbb push mov ret popa ret adc sub push out and inc inc inc inc push push dec dec inc inc inc inc inc inc cmp inc inc inc inc xor sub inc inc inc inc and sbb cmp inc inc adc rcrb mov mov xor sbbb repz jge rorb bnd lahf rcrb out xor lods mov add xchg xchg mov xchg xchg xchg int3 rcl fcoms loopne call in lock clc popf and xchg cld add add sbb popa mov or test sbb sbb mov movsb mov pushf (bad) and xor xor sbb adc xor xor or add fs xor xor fs inc enter jl js jo enter xchg nop in xor (bad) loopne fmull popa dec roll fs sarb rcl icebp jp sbb ss dec adc mov add add dec repz inc pop inc pop pop pop pop inc (bad) cld stc push inc dec push inc push inc dec dec push push push jns fmul out je insl push outsl outsl je and inc push pop sbb repz and pop push inc dec dec push jae out insb jle outsl and inc dec pop push dec dec imulb dec inc dec dec dec xor push setbe pop and cmp aas stc inc dec push push push dec push inc pop push mov in pop sti push inc inc dec inc cmovbe inc inc sbb jbe lods int inc push dec dec sbb inc jbe lahf in push dec push dec dec dec dec push dec rcpps (bad) stc xor dec addl dec push jb fs sti aas fcmovnu je xchg inc out push inc push gs imul sbb jb outsb je inc dec arpl jg inc jne insb fs jne bound sbb push cmp popa bound outsl dec jge test dec popa insl gs inc push push inc rcrl arpl jae data16 push imul dec push pop jno cmp cmp mov push xchg pop inc mov notb incl dec or inc daa jo scas xor jae inc dec jo fadds ja push pop inc out insb push mov and imul outsl jne jae loopne stc imull push inc inc dec push pop inc inc push inc xor jbe inc addl iret mov or or insb outsb imul pop in sub repz data16 sub sti arpl add insb jae adc fisubr push lods insb add outsb outsb outsb imul jae je imul idiv jg xor cmp xor xor and xor xor mov mov xor add divl inc popa je add arpl scas adc sub wbinvd sub cmpsl movsb pop inc js ret jo outsl adc push push inc outsl lcall mov hlt and gs je cmp inc sbb push push imul (bad) enter outsb pop jae roll (bad) bound add negb dec xor inc stos push popa jae fisttpll mov je dec gs inc cmp mov gs fs inc fwait pop push sub in xor xor pop jns je sub mov out adc xorl inc push xor mov in sbb dec movsb push outsb jnp cmp cmc xchg mov stos adc daa inc and jge mov mov fs xor jnp dec push push inc inc sbb push inc jae mov jbe and push push dec or loope insb sti jb push pop or mov (bad) cmp and lea aaa mov mov jnp lea imul push cmpl sarl xor fucom stc mov sub jo arpl and add mov push gs mov mov fdecstp insb je jo ja add dec mov sub adc pop cmp int3 or xor out scas mov add sub das sub outsl imul js mov lods push test push push inc scas jnp jbe shrb and add insl sub and xor xor imul cmc data16 sbb inc sub dec jle push add adc push adc jmp jae xor outsb cmp cltd and mov pop and outsl js lahf mov imul xchg ja sbb inc inc testl (bad) (bad) ficompl push pop (bad) mov dec pop cs push mov out popa mov push jne jl insl clc addr16 pop insl popa push pop popf addr16 je inc push leave sub pop pop popa inc jne aas in push mov je adc cmp xor popa jo pop jbe arpl packuswb mov insl lcall insl imul or or movl dec arpl ja and inc cwtl fstpl push inc sti jae push (bad) mov movsl inc inc dec dec dec dec dec adc pushf fnop sub pop lret arpl aaa (bad) (bad) sarb push insb insl add jle popf incl js jp outsl xor sub mov jae push xor popa out push push inc cmp dec sbb lea ja pop xor jns aaa push add cmp add xlat jne ret aad cmp jne jmp add pop sub addl mov pop mov mov sub ds and imul ret sbb pop dec stc sub mov xchg add dec pop pop add ljmp imul mov inc jae arpl jae and or sbb and pcmpgtb into add sbb stos lods sub in insl mov cwtl push add clc mov and gs jo inc outsl ret or adc aaa mov jns gs and xor or cmp lods imul js ja sub xlat pop insl or insb inc arpl or or xor jp xor pop rcrb xor jae data16 xor mov push popa inc inc xchg jne fisubrl insb cmpsl cmp pushf insl mov add mov jns add and sbb add and repz mov (bad) enter insl mov lret icebp or jp jb and ljmp sub scas insl pop dec and imul mov xor inc (bad) arpl in (bad) (bad) dec clc call in loopne loop in call in jmp and int push idiv in icebp in imul call sti cmc push out jmp in out and aam jge sti repnz and jmp cmova adc or ja sub inc (bad) outsb pop lcall pop aam sbb push and xor jne push jmp lods mov inc push pop inc dec mov or dec insl jae imul jns das add sbb ja push arpl dec outsl jbe inc or mov and je add pop xor rcll out popf cmpsb in (bad) xor adc int je frstor and xlat mov arpl push adc es mov lods pop cs inc xor inc jmp (bad) or or imul mov cmovnp insb mov inc sub loop and push aaa mov ja and pop incl xor pop inc inc mov xor fcos adc mov mov pop insb dec xchg inc mov nop lea out hlt in popa xchg das std idivl and jb jb or fs jno (bad) repnz nop pop enter or nop or inc stos nop or nop and test add in imul xchg inc dec xchg ljmp leave outsb mov dec push cmpsl and lret fs ss jl int cmp xor lret and xchg or mov mov leave test push and ret inc fbstp jecxz pop fbld and xchg mov and mov or aas lods or punpckldq fs test lret dec clc pop dec das or in dec rclb scas fsts (bad) cmp cltd cli scas jne push leave nop or hlt (bad) das inc pop les test add in repz testb wrmsr mov popf negb loop pop push fs cs (bad) popl add add inc loopne or (bad) adc addr16 add dec aas dec jbe pop jb cmc lahf repz and aam jge xchg xor fistp sbb adc sbb and xchg jo imul sbb cmc inc push leave test out fs xchg inc in xchg inc call jb dec bndcn dec ljmp out adc cmp jb sbb hlt inc ss or cmp dec xchg cs inc jb xchg negb add enter idivl nop cmc xchg inc pop dec repnz aas daa dec int ss jb (bad) fbld mov mov sub mov sbb das sbb mov loop and xor ss pop xor jmp xor imul and xor sub nop inc adc sub and mov pop cmp sub sbb sub nop or enter fsts sysret lahf enter and cmc repz fsts sub pop repz and enter aas pop das or fs or repnz jb or das xor xor push inc data16 (bad) nop rcll (bad) in hlt push push fsts lahf xor xchg inc mov fs cs pop (bad) icebp xchg add mov dec mull movsl clc or xchg fsub psubusw cmpsb xchg or mov jns sti mov and and shrb adc sbb scas insb and rolb dec xchg xchg jg or pop pop ret nop aas xchg div jg enter dec iret pop das fs and scas outsl nop mov sub lret rclb mov flds sbb bts bswap and (bad) ror mov sbb pop and sbb aas xchg and xchg mov ret mov push add cmpl add cmpsb stos into (bad) nop lea test mov cs push paddd xchg pop movsl add fs std cld pop or das cmp pop (bad) das leave nop or add jns fsts sbb sbb nop or jne test in or xchg hlt popa and xchg (bad) pop test pop das clc das push nop or dec das pop in push leave add repz sbb mov inc jb mov insb and jbe pop (bad) dec xchg mov xchg pop and fs fdivrs xchg ret lods dec xchg movsb in mov clc jg xchg ret scas bsr xchg sbb xor jb sbb inc xor dec pop lea xchg or sub push inc mov cs dec xchg negl pop dec xchg outsl xor insb cmp pop inc aas pop jb xchg lahf and jp or and cmc div xchg inc pop lret hlt imul outsl outsl insb dec xchg push das xchg cmp fs cmp fs xchg lock jl repz xchg or fs inc jb xchg repnz and or xchg and jae and and mov jo sub imul fnsave and and out leave nop lea xor nop or sbb xchg inc inc iret pop pop inc ss and inc ss pop jnp fs xor (bad) das inc ss pop lds fmuls pop xor out dec and xchg and das leave test es inc repnz or pop setl bswap nop aas xor negb inc pop enter cmpsl pop rorb and mov aaa sbb jmp and ljmp and inc (bad) push leave test push xchg or iret fs and mov xchg or bnd fsts in or int3 scas fsts pop in or nop or shrl jecxz push fsts pcmpgtb in lock xchg int into jg and mov jb mov addb inc loop fnstsw or pop fbld outsl (bad) je sbb xchg and xchg and enter jae dec jmp or pushl nop or nop lahf fildll std in or leave mul push das and outsl bound movsb cmpsl xor mov xacquire shrb clc enter lcall xor sbb cmp mov stos ja nop dec enter insb leave test aas or ret xchg inc push push clc (bad) mov das gs mov enter or insb enter adc mov and mov pop outsl mov enter mov sbb das fdiv fsubs sbb push outsl pop idivb and nop pop fldt and nop add leave rcrb nop pop fdiv lahf pop pop or lods dec nop or nop outsl push aas push inc add mov insb enter mov and or fs sub nop or xor pop mov inc rclb test incb pop mov std adc pop jg xorb aaa pop mov mov std inc mov aad aas mov movsb cmp mov out movhps imul lret ljmp stc cmova std adc fidiv dec mov inc sbb jb mov pop aad jbe xor add push lsl stos fs adc fnstsw lahf jb push jne test jmp inc das or test jg std pop outsl hlt out test push inc (bad) lcall mov mov repnz test pop cmp add add ja jg popa stc push mov xor test mov (bad) xor jmp pop scas or gs xchg dec add scas mov mov (bad) lods dec popa push or scas int mov leave loop add sbb aas rorl adc add clc addb dec ds jo stc xchg add mov imulb or pop add or push add aam mov inc popa arpl incb push jae popa insb jnp inc push dec cmp outsb adc scas inc adc push pop dec inc mov and je stos mov insb xchg push and mov popa and stos inc push aaa fwait and push push imul sbb js ljmp bound push xor in sub pop lods pop jecxz pop push imul addr16 add or add ds push cmp pop mov test (bad) add addr16 sbb and add push dec push add adc addl add (bad) add inc and pop imul in dec enter xor sub dec jmp xor cmp sub sub or into xchg add xchg add pop add insb xchg lret add rol mov sbb test sub test aas (bad) (bad) (bad) jmp pop je insb jo inc sub dec arpl pop jae imul sub dec push inc (bad) (bad) (bad) decl push bound outsb jb inc xor imul cmp xor push inc sar push xchg dec xchg jno imul ja jns cld (bad) (bad) pushl xor xor xor inc inc aaa cmp dec dec dec dec inc inc dec inc push push push (bad) ljmp add push dec pop pop bound push pop push push arpl mov imul mov lods xchg pop mov aaa ss sub xor int lods xchg pop (bad) jno fucom imul icebp popa bound neg jnp and cmp push neg jnp xor cmp dec push inc pop test push and in out (bad) mov or xchg add cmc clc adc adc push push adc pop (bad) (bad) mov je inc jns gs outsl push imul insb outsl (bad) fcos inc lds jecxz insb jae jb outsb push or push inc stc arpl inc cmp imul dec imul cmp xor arpl pop adc and jo xor inc push jae dec popa outsb fs push dec jo (bad) push add dec gs jo insb mov fistpl arpl push or gs jns push gs and push push pop fldl divb je add add incl push imul jmp jo sbb adc push jbe push imul sbb and std mov mov insb out add imul ret sbb inc inc jbe aas int3 lea fs imul add lds push jb xor cmp mov cmp fimull pop jne jo fwait adc inc fistpl cltd test inc mov les or and adc dec cli or xchg rcrb imul inc clc or movsb je (bad) mov push push or sub inc sbb inc adc mov mov mov imul mov popa and xchg and cmp outsb (bad) test outsb mov cwtl mov popf sbb add insl or xchg icebp (bad) ljmp jnp add and outsw mov jne mov xchg inc (bad) or popa sti mov adc push icebp arpl lock or lret es test lds inc imul pop (bad) sub ja imul movsl (bad) and inc out add (bad) mov lock push bound (bad) xor push insb inc rsm adc lods mov push push push or in sub gs or leave faddp cs sub dec fmul push sub mov and pop adc sbb dec mov push inc mov cmp push add push popa dec cltd pop pop sub outsb dec outsb push fwait insl cmovno sbb ret jno inc jle daa xchg fsubrl and pop or lds mov mov mov add ret inc sub cmpsl fmull adc mov push inc loope sub dec mov mov jge decl add sha256msg2 mov mov mov pop sub adcl enter cmpb ss and adc mov pushf js sbb inc jne adc mov cmovl ja jae dec insl pusha je data16 loopne jnp xorl js sub bound inc sub add jmp dec add dec jnp mov push (bad) jae repnz xchg cmp int inc and nop decl add out fnstenv pop mov add repnz subl or add fcoml and push xor and pop add repz cmpsl in add ss jno mov mov mov inc lret pop fwait mov or sub sti inc add test mov sbb add enter cmp adc cmc add pop ret add add add adc add add add inc add call int jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add faddl add add clc inc add pop inc add add add add or add add adc add add sbb add inc add xchg inc add sub add inc add stos inc add cmp add inc add aam add in add repnz add add add add add inc add add add sbb add add add xor add add add add add add push add addb add push inc add add add bound add add add add add add add dec inc push dec inc dec xor cs dec dec add push inc push dec xor cs insb add pop push push xor cs insb add push imul outsl insb xor cs insb add inc inc push push xor cs insb add inc push dec cs dec dec add inc dec dec xor cs insb add inc push xor cs insb add xor xor fs insb add add fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add push gs jo outsb dec gs add add jns je outsb jo outsl je arpl je add inc gs gs outsl jb push popa jb insl jae add gs outsb imul add add jne push jb arpl jae jae add push dec inc gs outsl insb fs popa je inc add ja jo imul (bad) jg push mov inc xor movzbl mov mov pop ret mov mov mov push lea sub push push push (bad) incl push call lea insl xchg push fstp (bad) decl lea push call inc mov add mov mov add inc add outsb popa push (bad) jge out pop mov int3 rep cmp xchg or mov add push and adc jne add insl mov jb popf mov adcb enter fs and and dec inc orl xor xor out (bad) outsl push cltd cmp gs test mov mov sbb mov (bad) or or in ret lods cmp add (bad) fs xor push dec xor mov flds xor gs clc add cmp pop movsb cmp or xor divl mov push inc mov imul shr push (bad) xchg fisttpll push push push lret or outsl sti insl and or cmp dec je add xchg gs clc ret and cld cld xor fcoml push inc (bad) int3 cld add pop bound ret shrl jne sarl insb sar dec movzwl push add int3 icebp cmp add (bad) cld mov xchg les popa mov push sub loope pop sub push pop mov xchg pushf insl fwait unpcklps sbb test ja,pt pushf sub inc inc and int and adc pop and push leave adcl mov push mov insl mov push and leave or jne jo movsl je fs jo test push push daa insb orb add ret cmp mov adc fldcw sbb mov sub jne push cld cld fnsave add (bad) jne inc lods stc int3 int sbb call sub pop mov xor push or ret xor scas notb jmp (bad) mov test scas sub rol inc dec mov mov push insb cmp xor cmp pop xchg lods cmpl pop sbb push or inc (bad) in mov sbb mov test pop sub adcl cmpsb dec or xor rorb (bad) xchg add fs shr inc dec dec mov push push dec popa out cmpsb mov inc lock mov pop fcom in (bad) mov insl pop pop pop add leave les mov pop push mov push mov movsb cli jne popf mov pop js inc xchg add mov mov or push stc and pop mov pop push mov mov pop (bad) fstps test jmp sarb xlat mov sub push fs mov jmp clc sub push std inc sbb (bad) cmp sub idiv cld mov jbe movsbl leave (bad) mov (bad) mov and lea push inc cmp jb pushf ds mov and add out div imul jne or xor xor xor pop push add add pop cmc fcmovnu inc rolb sti or add imul (bad) mov stc shr inc inc cmp mov jb pop adc fdivs fwait in lock ret pop cmp shr mov or add push mov mov cmc sbb jns adc push dec es lock push jns hlt outsb mov mov fmulp int add xor les add rcl xlat aam or pop (bad) rorb sub mov or rolb (bad) jmp pcmpgtd add push jb mov mov sbb cmp or sbb ret insb push mov mov push (bad) jmp in es push mov adc pop sti pop fwait insl dec aam imul out jo je (bad) cltd xor mov sbb mov fcomps in lods push push push roll (bad) cmp jne (bad) data16 push clc push (bad) int or fstps and sub clc data16 insl ror or into std movsl pop loope sub daa fistl adc cwtl std add (bad) loopne and sub xchg add or imul stos adc (bad) mov fdivl push clc ret sub (bad) ret loope xor jb or shrb imul push mov mov jns out fildl pop andl add add stos (bad) lea sbb stc adc sbb dec ljmp movb adc outsl aad mov (bad) push cs and mov mov out sub cmp pop or imul xor push jne or jne add jne or jne cmp xchg or or jne bnd add inc das pop popa adc xor (bad) je (bad) pop sti push sbb neg ja cmp jno (bad) dec repz jne or push loopne or sarl or (bad) or xchg lret rorl inc push dec xchg (bad) jne mov cs aad pop repz pop les mov movsl rclb pop movb lret (bad) fidiv add (bad) add or insb lahf jmp clc add jb icebp pushl jle lea push loope (bad) xor xchg jnp je mov jnp (bad) or gs adc ja lea movsl add shlb sub sub sub out cmp xor add fcmovnbe rclb js or cmp pop xchg xchg push mov sub mov imul mov sbb push mov dec sbb outsb push mov scas mov xchg xlat outsl jmp fwait mov jle adc cmp jne in out lds jl (bad) jle fnstsw (bad) imul push add add adc or (bad) jle and in inc sar cmp (bad) sbb mov or pushf in popa push push fnstsw jb test xor adc movsl test lret orl fldcw iret adc aaa pop jne or and daa fs add pusha pop and popf pop daa test push in push addr16 xor xor in push jbe mov mov rclb pushf orb lods push xor outsb sti enter hlt push inc xor or pop (bad) jo sarb lods or add test pop or dec int sahf pusha mov int mov pop andl mov je mov and mov push xchg std adc subl jmp mov shll insl ret test push mov add aas cs push push lock rcr xor pop clc add dec outsl mov fs mov (bad) fadds rcl cmp inc xor jnp add xor push jl arpl inc les loope in push imul push cmp dec (bad) mov pushf movsl add cmp sbb xchg cld push push cld subl cmp jge inc fisttp (bad) lcall data16 add pop mov adc inc xor jg inc jp dec push jl fcoml cmp lea dec dec rolb jecxz adc adc inc mov sbb ja pop lahf hlt inc loopne fwait sarb jmp outsl ret sahf pop hlt je jne mov jae or (bad) fsubrs test gs push sbb sub jmp sub rcl mov jmp mov mov mov sbb sbb inc mov mov inc testb sbb jno push mov pusha adc jo push sub push adc dec insl lock adc sbb clc or cmp inc and idivb add es out mov and icebp sbb dec xchg jle repnz mov movb inc add dec call adc inc adc add fs imul sbb jmp jge decb rorl mov ss sbb in pop xlat inc adc dec inc mov fisttpl fbstp test and dec jne mov fwait rorl or adc fs movsl mov mov jne sub inc out push push lds ja push mov pop push jnp cmp push dec xchg add sub mov call sti rclb orl mov mov (bad) pop sbb mov daa lret leave jb cmpsb in test sbb int3 sub pop fprem fs lret push sub mov inc es mov stos cmp test add es mov mov call jno xchg mov push lcall pop xchg scas lods mov in jmp outsl pop mov adc cmp mov test sbb outsl lock addl std scas (bad) int3 jmp mov mov mov adc cmp jnp mov dec in jne aas push xchg fmull enter sbb fcom xor add dec sbb dec loopne push dec lods loopne inc cmp or fldt inc sub leave mov out push push cmp cwtl fldl mov lret fistl stos movsb cld push sub int sbb daa jne xchg jno js test lds call into xchg xchg xchg adc mov jmp xor pop cmp ja sbb pop (bad) ss cmp pop lds add js insb adc and sahf add lock lret pop stos popa (bad) ljmp sbb and push mov add mov push cld fmuls shlb movsb lock push cmp sti dec sbb pop xor sub repz fs movsl loope popf rclb cmp int3 add test int3 mov jne sbb mull dec cwtl scas call adc add test add cmpsb and sbb daa aas sti loopne test pop xor mov sbb or loopne pop dec incl sarb pop or loope push dec sahf push adc mov inc movsb nop jo (bad) flds push movb mov push and and fldt pop adc popa gs mov sub sub sub insl mov fsubrl xor lret xor xor xor sub aaa pop cmp cmp lods pop xchg sarb inc fstps inc and inc lods fstps dec sub cwtl lcall dec dec xchg push push xor push aam imul je sarl pop pop push pop pop int (bad) xor dec pop push pusha popa daa clc shrb arpl cld dec xor out gs mov push insb enter (bad) jb rep inc mov sub sbb add (bad) cmp mov mov (bad) lods mov icebp mov mov add push movsb fcmovnu push or data16 xchg adc sub sbb js jne jmp jb cmpsl aam xor sub jo add sub jo inc (bad) js aad (bad) rdmsr shrb aam (bad) lea mov dec loopne cmovo in sar and mov fmull shlb dec cltd fmuls push pop push fsubr (bad) iret movsl fiaddl cmp ds cltd movsl (bad) mov push xor inc lcall bound hlt add jb pop incl jo movb nop xchg in inc loope sub inc push sub fwait lea and and out inc cs (bad) dec pop xchg lods cwtl jne aam es add pop sub stos adc jmp mov cmp inc add cmp sub push xchg ret add jle fiaddl (bad) cld enter push cmp (bad) roll fidivr cs push xor jb mov mov sbb jge out clc push sub lret cmp and iret sbb jne in lock sbb sbb push push mov test rorb scas lea push mov pop xchg push sbb push fsubl cmp mov jo lock (bad) mov inc push in and inc sub adc or xor mov adc hlt jmp (bad) repz adc int3 shl cs pusha fldz fmuls and push hlt push (bad) lock pop mov iret test call cltd movsb or int3 add mov pop cltd sbb cld add sub jo and mov lcall fsubs dec divb push inc movsl cs mov inc cwtl pop aas ficompl fs sti pop insb mov incl mov imulb jmp fbld mov insb ss adc divl enter add lahf adc int3 insl mov std leave adc in or cmp add xchg shl add pop sbb pop ret daa shll xchg pushf cmp ja enter int3 xor test lock icebp (bad) lret (bad) imul in stos lds imul in inc sub and stos aaa nop and mov movsb inc mov mov pop rcrb cmpb jne orb jne add add or sub ret mov cmpsb movsl dec es xchg jg xchg std addl xor dec negl in push pop je in scas shl sub ret push sbb inc mov mov inc iret int dec jb dec or push or call enter mov in pop jmp scas add cmp aam rcr xor movsb outsb sbb pop in xchg inc nop xchg daa fcmovbe xlat jmp (bad) adc inc xchg in aam push sub add imul inc and int loopne adc pop decl pusha pop in cld jmp cmp or jge jb add dec add js movsl push rcrb loopne push in push mov jno xchg mov insb and adc adc les imul mov cmp push gs mulb or pop jnp enter fnop mov mov inc sbb pop mov shr insb movsb push add and dec rcll ret out pop cmp sbbb imul jno repnz xor pusha (bad) aas xor mov add pop insb xchg or enter pusha cmp xor inc insl inc out adc add aam and mov and aaa inc inc push outsl mov jge push inc push pop jo sub xchg xchg ret int3 jbe clc lcall mov ljmp leave insb dec icebp add je add xchg xor mov movsl insl nop add cmp popl les leave jae add or add pushf push cs imul mov scas outsl mov jb insb loopne xchg xchg addr16 dec pop pop inc sahf or pop push dec (bad) xor in (bad) hlt add enter cli lret xor xor in sbb enter rcl and iret test mov mov sbb rclb (bad) sbb out mov and inc mov push adc lods inc or cltd js cmp jp push test cli neg lea mov add out xor insb sbb push bts sub outsl mov mov or mov xor cmp push testb pusha sahf hlt (bad) cmpsl sbb xchg inc cwtl push sbb leave xor jmp in loopne enter (bad) cs cmp pop rorb pop cmp pop dec push inc jo sub pop pusha sbb or add inc adc (bad) or daa roll mov push mov mov fs or dec lods movsb mov subb push fchs push sbbl or add sbbl sbb pop rolb mov fcmovnu or xchg int lret nop lods hlt cmp test lock xlat dec mov inc add push (bad) clc xorl outsb jae dec pusha dec and mov daa xor inc jmp push mov test pop pop pop clc add inc cmpsb fs pop fdivs insb xchg test mov cmp test xchg ljmp lea push xor jns int add (bad) pop sbb push int push dec ret shlb testl int3 adc jb adcl push leave fistl jnp ss add leave and add out sub insb and decb push add cltd add mov rcrb dec icebp lcall inc sbb test pop je dec fstp mov cli sbb adc imul xchg (bad) jo lods mov cltd jb pop enter and dec insb sbb fsubs adc mov jae and inc add inc lock push shr pop cmp sub mull jne ffreep pop mov mov cmpsb movsl movsl movsw push cli sbb dec fisub mov add jl xchg rol dec hlt pop shr js ja fnstcw xchg test outsl push mov xchg mov rcll fistpl pusha fist je push mulb mul push mov not fsubrl icebp xchg push cmp jp nop adc sbb fwait cmp push aam lahf js or sbb mov scas mov mov sbb or adcb add xchg bound pop push (bad) lret stos cli mov sbb add push dec mov xor mov mov mov add sahf sbb mov jge aaa es int3 push call xor cmp pushl fldcw mov mov xchg xchg mov mov mov pop roll xchg mov mov xchg mov addl or jmp imul mov stc sahf pop lret mov enter sahf sbb imul cs lea xor addl jae test or adc subl fldcw stc jmp xor cmpl and add mov inc pop or sbb movb out inc sbb jecxz js add lea pushf sub xor mov mov or cmp xor test test push in in out inc nop in pop pop jmp test inc jae push push mov divb addr16 dec (bad) movl adc fwait mov mov sbb push add push inc les xor push jp add fdivr add xchg xchg out add or and pushl fisttp push jecxz push enter insb aad lock push or into inc lea mov sub test inc xor dec sbb push xchg mov adc push xor fs pop and push fcoms mov add sbbb or subl xchg rorb (bad) xor mov ret push add sub lahf jmp dec or mov and dec add cmc sub add hlt imul or pop push mov aaa pushf enter inc add pusha mov or inc or pushl and adc sbb xchg sarb bound jnp fldenv xor or xor hlt cmp and mov sbb sbb mov rolb sbb pop adc (bad) test inc adc loopne das pop test mov sbb sbb fcomps jbe addl jbe popa pop imul add test cmp jne push pop clc fstl mov mov dec or xchg push push fs cmp mov into cmp (bad) sub cwtl push cmp mov jo pop xchg pusha lods pop sub arpl das push mov cs loop sub cmc and shlb mov dec test jle outsl or xor or jne icebp jg sti dec test jg add add sarb movb dec lods inc cltd push pop or or ret clc mov rcll fnsave add add lea loop leave clc xor sti jne jmp iret sbb pop mov add fsubs push push (bad) adc (bad) jg xchg and add and mov or dec ret jne dec push loopne push inc jno cmc mov mov add scas xlat sub or mov (bad) outsb or (bad) push sbb leave ret idiv sti adc sub and adc dec arpl (bad) add push pop xor ja rep jbe xchg cmpb pop push push cmp test mov lock test lea subb cmpb add xorl das push jecxz cwtl loope es jb and loop cmp jmp push inc push inc inc push or (bad) push mov xchg test faddp ret andl clc sbb pop mov std aas cli nop cmp mov sti mov movsb push push and incb mov cld in jns inc sahf in jmp scas add pop in cli test loope cli xlat (bad) xor and lock std add xor sub mov xchg (bad) and push addr16 inc (bad) jne xor aad add inc push outsb dec (bad) or or xlat sub adc enter ret push daa push shlb popa pop and aas sbb jp lcall mov xchg sbb imul popa dec inc or dec push in pop je jbe cmp push inc push and xchg jge js fwait push call (bad) pop jno out int or push push nop cmp xchg mov xlat cmp dec clc adc out les cld or jb add jo nop pop add inc enter jl clc cmp xor test push pop and pop test add add lock jns loope inc or push and xor jne orl or insb and test xchg pop push lea cs frstor pop ret adc add loopne add das inc clc jl sub adc add cmp in xor push andl std bound mov jle loop push push or cli popf sbb mov pop (bad) loopne push xor adc push mov dec clc jne bound iret xchg jge fwait dec mov add and ficom push xor pop jbe shrb sub mov pushl adc push adc or leave mov fldcw add mov adc leave test mov add add test les daa test push or add ret je pop and cmp pushf cmp mov clc sbb cmp out mov adc jb scas or jo (bad) pop push fidivl xchg call mov or rolb dec inc loopne push es shrb popa mov inc xor dec mov xor movsb mov pop mov test pop push mov adc sbb or movsb rorb sub insl inc sub enter pushf imul sub stos add rcrl jns jl je add repnz pusha add in js cld pop enter sbbl pop cltd inc xchg insl sub fmul idivl inc hlt cmpl jl inc outsb xor mov push push pusha imul adc (bad) or test xor movsl fsub in pop rcll hlt loopne lds (bad) sub mov or scas fwait or add enter in bound call inc movsl inc call sub mov lock inc mov and mov lock testb or xchg push int3 clc sub sub sti ljmp jmp or or sub add jmp (bad) sub neg push and cmp ret nop lea fs sarb mov mov add mov adc pusha hlt and clc cli jbe in pop je pop xor dec pop leave xor mov inc add mov fsubrs jmp test mov mov loop pop mov (bad) inc mov jl mov les ror push mov adc push stc test xchg or sub int mov xchg lock insb mov adc push fdivp pop pusha mov jg leave mov lock xor sti enter sbb push adc pop jbe add push aaa pusha inc adc insb pop cmp mov pop aam dec sti xor daa sub ds clc add mov lcall dec rcll and sub mov mov call icebp push push jno xchg xor hlt mov push xchg push les in mov cld cmp mov jbe push pop jmp mov add inc or mov add push push dec sbb (bad) sti pop adc dec lea jns push push sub mov or insl leave push clc jo ficompl movsb cli imull lret or out adc add (bad) cld out (bad) jb test or movb jb add sahf sub and jecxz and add sbb inc mov stos or jne jmp pop test mov jge sbb push shlb xor push in pop sub mov mov test xchg hlt or inc int movsl dec add enter pushf dec sbb aaa lock or sub fdivr roll push loop jne lea mov sub mov lret jle and je,pn dec inc push xor (bad) dec dec inc xlat lock inc inc add xchg mov stos push jb inc and push shlb jg lcall pop fistp pop pop pop add (bad) notl sarb fdivl (bad) je adc or jae pop ds xor and mov fs sbb jbe int3 mov mov mov ljmp rclb je jb (bad) xorl xor pop test pop pop or push mov fsts dec into add aas mov and jo ret (bad) jae enter push push pop lea fmull inc cmp rcr dec sar sarb mov push push sub push mov pop adc lock add cmp fdivr mov cmova cli xor sbb sbb fcmovnu and inc xchg jmp mov xchg and dec add stos xchg mov mov push test roll sahf add fsubs or adc dec aam test or dec push jl fcmovne aad ljmp mov xor scas push mov inc lcall icebp addr16 stc enter or clc inc jb and mov lcall xor cmp stc and shl add mov out lods insl xor sbb cmp sti pushl js shr shl add mov fstpl adc fidiv xchg add ljmp mov sub dec hlt push pop push mov mov mov pop ss rcll dec leave out (bad) add and mov add cmp sub fld fsubrl or hlt std movsl in mov jle (bad) lock dec xorl inc adc loop adc rorb lret (bad) add dec mov push or inc jne cltd andl push and jno cmp inc add mov mov cmp cmpsl icebp pushf inc pop mov adc push fs push xchg or ja mov push jecxz adc cmpsb in adc leave mov push mov push mov mov cmpsl sbb je pop or sbb lock push lods lock lds orl pop std inc pop ss enter sub or movl add lret sar mov mov adc mov and jnp lret adc and (bad) and pop fild inc insl mull (bad) push jge dec xor mov jmp push add fcompl fidivrl je add jge jae sub flds fiaddl int inc imul cmpb out cmpsb jnp outsb cmc and sbb sbbl idivb pop add cmpl mov cmpb (bad) loopne pop jg push sub sub xchg mov pop adc jge loope pop gs or sub cmp or ja sub add mov xlat jne orl or push jmp cmp mov xchg pop nop lock mov sbb inc ja imul sbb mov sbb adc and pop pop ss std scas test inc fnstenv scas cmpb adc inc or dec sbbl xchg loopne mov hlt xchg dec je clc push loope mov ss add pop sub pop mov jl pop stc out push stc rclb or jne (bad) cli aas xor jmp add adc std sbb scas fdivrs mov out inc mov neg mov xchg test cmp jge push and insl add and or pop inc cmp mov repnz xchg mov popf out outsb mov jl sbbl out loop nop and inc add les sbb dec fstp push sub inc mov mov ljmp sbb push jl lock sahf cmp lcall inc (bad) cld dec sbb adc or pop lds add sbb je push or (bad) adc adc mov jmp es shlb in cmp fwait adc mov xor (bad) les push push add cltd mov mov push jmp add add dec and nop or sub push jne (bad) push lds or adc mov pop cmpl imul je push andl add mov xlat inc add daa es sahf stos stc jp mov gs subl pop push popa in dec ds inc jns decl adcl nop ret sbb sbb out add fwait (bad) mov ret rcrb dec push clc clc fidivrl aad jge adc mov inc push das xor fnstsw test leave test inc dec std cmp inc daa addr16 mov fadds sbb (bad) and sbb mov adc pop and lea add (bad) ss in push inc loope or rcl push xor (bad) not mov sbb xor or inc fdivrp xlat sbb ret mov pop in push pop cmpsl aaa xor fs jmp jne enter je mov jmp lahf insb movsl and pop push cmpl sub jmp xchg jbe jmp or add enter dec std imul add xchg jmp fadds test je mov fistl or shrl push add sub jecxz lret push rol pusha push (bad) mov lds sbb cmp mov push inc push sbb push popf rcrb mov cmpsb push push outsl cwtl and add scas int3 push nop mov sub loopne jge push push jge dec or int3 dec out js daa and xor fwait clc add push in push sarb lret or fs jmp test pop not stos add and mov notb adc pop adc xor cmp les fcomip pop dec notl shl sbb in mov (bad) jge and inc push and jnp sbb jge data16 sbb aas andl adc movb popa std xor sub nop int3 in adc push lret jecxz in jl add pop ret xchg and mov mov xor in cld sarl negl inc imul pop adc mov push jle cmc rclb xorb gs push je sti out cmp push movb and push inc pop push test adc movsb mull push sub xor xor movsb test rol adc xchg mov js mov inc and and and adc mov inc and dec mov add push dec add dec push (bad) inc pop cmpsb xchg inc dec or sub sbb sub or test sbb sub lods mov or inc mov pop dec xor adc cmc icebp adc mov and pop std adc add or or icebp push mov push mov push xor das mov pusha and cmp fsubrl das jne hlt outsb leave fs push mov sub dec sbb imul push test jl repnz imul or insb les imul les or ljmp lahf xlat aaa fstl jle add or (bad) std je mov add loope mov sub das xchg in push add int3 push pop jae dec cwtl leave imul push out sbb mov and push push stos adc mulb cmc inc lods imul stos fmuls push ret mov pop repnz subl mov shrl xlat popf dec aad pushl into stos adc or add outsl fsubr dec aam mov cmp add mov push add jne push popf sti pushl pop movsbl inc jmp xor inc adc int add inc cmp jle and adc and sbb push cmc mov mov fcmove dec bound add mov arpl inc add xlat cmp fwait lods or and jle mov mov push hlt cmp loopne das in inc add js bnd mov mov xchg lock mov pop cmp imul (bad) incl add mul seto neg or push stc jb push jne mov add inc stos nop mov mov lds test (bad) aad xchg inc push or ltr loop aas cmp sbb and out adc fsub cmp std mov and xor cmp mov xchg adc mov test lea (bad) push mov mov jbe fadds daa sbb pop sbb lods adc ret imul cltd sub dec xor (bad) clc mov add push add pop or ja add lea inc mov pop push das adc (bad) sbb mov popf adc call push and movq icebp fildll dec adc mov xor call cmpsb and mov push dec mov pop add push pop mov addl push lods mov imul xchg fdivrl sbb pop sbb add inc cmovae jne cmp jne mov pop div jg ja mov mov cmp and je push pushf pop (bad) jle fsubs push dec imulb fisttpl mov std push pop or xlat out nop insl jmp inc push stos inc or sub pop push or or daa inc xor push inc mov sub sbb mov sub mov cmp inc inc inc sbb icebp pop mov pop cmp mov in clc shr fadd fwait outsl les (bad) jne shl dec imul out lea jl mov clc insl loope imul push xor ljmp lret in ja sub jmp popa movb inc pop lock jg aaa pop icebp insl push mov and dec inc or inc test js adc or in jne roll cli pop (bad) xchg jl addb into lea add jbe test test lret and cmp dec decl test mov mov (bad) dec mov mov or hlt scas pop dec inc mov ret shlb xchg (bad) cmp push ja lods leave insl or add cmp fisttpll cltd xchg insl add mov das add dec decl or in inc in jb insl inc inc imul pop adc push jae movsl call call outsl ja call dec loopne in mov push xchg dec push or lock inc or jne addl enter pop es dec inc cld add sbb ds cmp mov in movb inc push shrb in or fmull push (bad) xor add or or jnp add sub inc push add xchg leave clc pop jmp cli lret add (bad) cmp jne cld or and cmp jb fsubrl inc test stos jbe fwait push popa push sub fwait inc sub ljmp xor mov inc dec loopne ret rcr loopne push and or pushf jae (bad) jmp or decl jmp mov jbe cmp jae mov daa xor mov push or test lods jge pusha popl add (bad) outsb add into xor dec lds cld xchg incl mov dec push dec jl sbb jo hlt cs call pop clc xor loopne or fucomip arpl add push sbb jge push test push (bad) dec in mov or shll jne std in cmp mov sbb cmp aaa sbb adc fs sbb jae mov jne push add mov in hlt in in jl xor loopne mov pop insb cs out adc push lret jg nop push dec rorl repz add popa lcall xlat jae popa cltd ja fdivrs dec lods jae inc jno mov movsl nop jne or lods hlt pop push (bad) ja inc jmp lea jle add lea or (bad) sub jbe cltd sub cmp jl xchg inc ds mov cmp out popf push mov push or jge jae jmp pop mov mov push mov mov xchg jo mov sbb sbb out push lret loope cmp add add mov lods (bad) sub push add inc add add mov mov mov popa sahf gs dec lods jno mull mov js push dec mov dec hlt aad inc mov mov mov add mov ja fdivs inc sti add leave mov add jecxz or lret bound xchg jge data16 jnp adc out rol addl or pop adc roll push ficomp lret sub xor ds fwait xor mov sahf lods mov test xchg mov bound inc or add push mov and aam inc dec inc jle cmpb aad push jecxz jbe add xor pushf ret push xchg pop and adc mov mov punpckldq pop push mov pop fmuls or lods (bad) mov les out push fbld add mov push sub adc int jle pop push lea mov roll pushf cltd sbb std adc outsl fisttpl add icebp mov sub xchg test adc adc cmp movsl add mov add aam xchg incb xchg adc inc fldt pop pop jecxz lea add xorl sub or out hlt and repnz inc cmpsl pop or insb sub aam inc and xchg ljmp and es icebp pop stos ss add pop add inc push mov push sub mov jbe push adc adc mov sbb mov add or pop mov cmpl imul dec sbb mov inc jecxz cmp xchg add adc cmp push xor call (bad) lret xor fistpl fbld jbe sbb add lret lock push mov dec pop fwait lods mov or sbb lcall sub cmp (bad) lahf add (bad) dec sub pop cwtl mov arpl inc mov int3 and int adc pop pusha aam push ret sti push test inc js jge or mov or xchg push mov les and cmp flds adc jl push sub jae jbe dec jns push fidivr sbb mov repz clflush push push push push push rcrl movsb add sub xor or push out (bad) push or fistl rolb add pop or xchg mov sbb push sbb mov and pop jle pop out aad or aaa pop mov add add mov mov (bad) pop cs in ljmp stos mov push push sub pop mov or add nop pop adc lods add mov or decl fdivrp fidivrl jbe mov add aam push mov insb mov rcll les pop mov push inc loopne hlt push roll js push (bad) sarl inc imul sahf inc mov jne sub icebp cmp inc ror mov adc out jb pusha (bad) sub inc dec jl jne dec xchg mov sub dec or or inc faddp sahf in mov push sbb adc push dec nop inc jnp,pn jo dec js sub or and cmp mov decb push jmp add add shlb stos sti push out add or in fs push aaa testl shll push push or test pop loope adc mov jl jmp dec jecxz sbb mov data16 lea fidivl add push outsb mov scas sbb rolb xor test pop je xor (bad) xor mov lds das add add test ljmp and pop adc add mov xchg and xor and mov js ficomp testb shrl jg in std mov add sbb jo add push push js add cmp add cltd mov ss aaa scas mov shl or sahf sti pop cltd adc (bad) mov sub dec adc jo scas aam xor adc ret out pop ret or add insl mov sbb push xlat into add (bad) fwait pop pop rcll pop (bad) push cld pop xchg lods imul jle fisttpl mov dec adc jnp sbb add addr16 push std pop pop shl or or or pop les add mov les pop cmp inc ljmp rcl enter mov das mov xor sbb push pop adc sub aad add sub scas push sub sub mov jo push test pop mov loope (bad) mov jg ja mov lock pop int ljmp add inc pop nop and mov push int3 je movsb inc push or add das xor inc sbb ror xor sbb adc retw mov ror test mov xchg sub mov aad pop int3 mov add das push cmp add adc or es sub rcl hlt dec bnd lret cmp enter push push or lock push lds mov push je sbb or sbb jno lcall or mov and imul lock es add repz inc cld adc cmp push dec jb lods xchg sbb push jp (bad) fnsave ret mov fmuls mov mov or sar pop inc leave and push inc add mov int3 dec mov fiaddl push ror ret popa push xor test mov in sbb sub adc fcmovu mov sbb sub xor in and fist sti fist sub push push pop xor add popa xorl sti imul push insl adc clc mov fildll or pusha test pop mov fstpt je popa add jl test ficom (bad) or cmp gs or adc mov add xchg adc iret pushw ja jnp push or mov adc mov flds inc adc adc adc pop or sbb add push mov jp das inc nop (bad) jne int ret call mov fwait adc mov sub fcoms push push je test loope ret aam dec js jmp mulb icebp call ds cmpsl adc or aam xchg add push dec cmc cmp pop dec push adc imul adc fiadd mov pop mov push lods xorb add idiv jge jle lds andl adc hlt jl cmp xor add sahf mov fist mov jmp push in rcrl (bad) push dec jno pop in push movsl dec push pop push sub push ja mov adc mov xchg add dec cld lsl lss xor clc (bad) push mov (bad) fidivl rcrb addr16 out daa adc xor lcall inc movsb push push stos es (bad) in popa test push inc jbe add mov and or pop or sbb outsb clc cmp mov sub addl ret adc cmp orl mov jnp,pt jnp clc cwtl rcll and cmp xor mov inc push push inc test ret mov jl push pop (bad) inc mov push sarb out add mov or push jno xor inc add add sub movsl push lock lcall adc and test jle mov mov sub push mov je daa sub adc or aaa pop add mov pop ret push pusha xchg xlat or or xchg into add pop jmp xor pusha mov pushaw lods leave mov int3 fs pop pusha mov shrb fs jae ja ret fisttp dec or dec lcall or adc and scas test mov pop push adc pop sarb out loope cmpl or push cmp push ja push mov mov pop cmovbe stos (bad) in imulb jge cmp xchg sar dec fidiv mov inc popl pop dec (bad) call or in out push pop ja jne in and incl sarb push add (bad) sti push dec out cmp mov push push cmpsl mov cmpsb ret sub xchg jb cmp lea bound inc sbb sbb push ljmp mov add pop inc push push push lcall fidivl test sbb aas test pop js popf inc addl jne mov cwtl ja jg cmp xor fwait jne inc dec jne pop mov jl inc jmp or cmp loop jecxz inc jmp inc ret pop mov clc add adc mov inc rcll shr inc inc mov dec cli sub rcrb adc adc test pop and mov dec inc and in mov and stc cs jl rorb adc sub or push decl xchg pop aam pop or nop subl jbe int3 push lea jg mov adc (bad) push sar xchg jmp int3 int3 push fninit fnstsw cmp jne flds mov and cmp jne fucomp ljmp call sub or adc pop pop pop fwait dec cltd and shlb add scas jmp fisubrl add fldt cmpsb adc clc cmp jb jb sbb push sub sar add mov push lods dec push cmp jbe dec push jecxz ljmp call call lods cmp imul (bad) jne xor je or push orl je dec pop add dec add mov andl out rep pop and lods cmp jbe jecxz stos inc jmp jecxz stos push lcall xor insl pop jecxz mov mov incl mov sbb lods mov cmp cmc dec mov cs pop stos mov mov and sbb lea xor or arpl je xor push xchg add fistpl adc add inc pop lods pop push sub cltd test inc fs inc fwait mov add pop scas inc cmp bound jle add cmpl ljmp sub lret scas adc lea cmp add pusha sbbb fdivrp jmp test je mov adcl outsl push mov fs (bad) mov sbb or out test stc jg decl jne add rolb or (bad) (bad) into je rcrl mov add fdivs mov mov shlb arpl and ja jge jbe hlt cmp mov inc jae pop imul or je and mov outsb arpl cs fsubrs lods pop xor adc inc adc lods loopne add push adc pop sub mov leave outsl inc popa jne sti inc xor xor cmp jae and cmp jbe es jae shrb or xor (bad) cmpsb and adc sysexit sub scas mov push fsubs pop cmp bound js dec bnd mov fs mov sub sub sbb xor adc or sub and fs sti addl mov (bad) jle lea dec push xlat push sbb cmpl daa subl push push mov or dec push inc outsb mov in cmpsb es fs aad (bad) inc jmp subl out mov add adc pop inc mov lds xchg pushf mov fisttpl or mov add sti lds push scas mov or xchg in sbb adc mov shr cmpsl pusha sub js mov loopne pop aas mov aad aas cmp loopne or dec jmp cld sbb jmp pop mov xchg loopne aam fcomp outsl lret mov adc and loope in mov and je mov inc xor pop sbb scas popa in sbb cmp push or aam scas mov cmp push or mov aaa mov (bad) out adc stos mov jmp jbe fcmovnu cmp popf push loope jne sbb mov cli or push in jae fstpt add inc test sbb fs sbb and mov pusha jb sbb xor mov adc imul nop leave xchg cmp pop ljmp adc push outsl fldt xchg cmp mov push test je push les mov addr16 aaa or lea jp sub in insl sbb je inc jle inc jle pushl adc sub pop jmp sub je test decl je dec jne push lds jge addr16 lret pop jb xchg bound lret pop mov jnp in sub js aad bound jmp inc or inc in pop lock sti scas inc add ficomp lods jbe je add mov arpl cmc add fidiv jg call xchg invd jne push push push dec out jmp xor push jl sbb jne gs xchg push scas rol xor aad leave mov push dec cld sub jbe (bad) aam and in adc inc mov sbb cmpsl push cmpl divb mov icebp mov pushf jnp mov or data16 fimul les pop mov xor add or (bad) out xchg lret aad int3 xlat lcall in push shrb fmuls dec (bad) out fistp sub insl adc or rol lea enter sbb (bad) or insl rolb add push cmp push sahf push xchg push rcrb pop adc or xor rcr in test mov sbb das cmp addb fildll xor dec lea mov clc and je sub add jae cwtl movl scas fs aam dec pop adc adc push cmp je push jae rcl mov push lret inc fildl push fldl fmull call bound test cmp test or pop sbb fld1 jmp inc lods fistp add inc in add dec fmul and jne (bad) std insb scas addr16 fldenv jne xchg jb sbb inc xchg add and push adc inc je mov imul push lea insl out jmp fmuls jno repz or jl fmul jne sti fld ficom rorl movl mov or cltd fstps (bad) fldl add adc jp push sub in insl dec add sub ret cld mov decl scas pop loopne or subl sbb popa jb mov jns pop and inc jb aaa jmp shr mov sbb jae imul add push or push inc jno add in cmp in fcmovne and fistpl push out lock orl or mov xchg and or sub or cmp stc cwtl push outsb adc lods (bad) lret subl jnp fnstenv (bad) fcoms jmp fisub sub inc fsubl mov cmpb test adc dec lock pop jne inc lgdtl or in sbb sbb addl fmull lret incl sbb inc into (bad) shrl (bad) je jecxz je sub sbb ret pop or push sbb mov and dec cmpsb pop mov jbe dec js,pt adc xor sahf out jmp add or ret pop ss jne xor sbb dec icebp ds mov clc outsl insl cmp je cmp je adc add lret fstps dec xor daa and pop mov adc add adc sbb mov inc test adc adc or pop into in push add test test ds mov push xor mov minps adc dec cwtl rcll mov jae adc aaa ljmp jb cli push imul add pop and or add mov aad mov and add in scas ficompl or clc movb jmp xchg popa outsb lahf cmp and sbb fsubl and pusha and into jbe pusha pop xchg pop cmp sub pop (bad) pop or sbb sbb sbb (bad) pop inc mov pop jg inc sahf push lea fisttpl test push into push jl or lds test jp adc push ss pop adc in andl pcmpeqw inc stc jne jmp hlt imul or jb jne push push dec into dec xor or mov push call sbb add lea cmp mov or (bad) xor inc push inc xor mulb aas cmp mov cmpsl imulb fwait in ss xchg pop adc jmp insl xlat mov rcr jmp es lea int3 add cltd xor sub pop xor ret fisttpll enter or fsubp fsqrt fyl2x repz adc mov dec adc add sub adc lea cmp pop or mov jmp test int push mov aad inc or add (bad) lea outsl repz xor xchg add cmc mov push or push push int test int adc mov in mov int outsl call jecxz mov and inc or mov or inc push adc sbb mov decl sbb cmp and xchg mov add or ret push shl or pushf jg pop loopne lret sti add ss and in cmp push ja int in add rorb adc push shr and xor repz xor out jle add mov sarb pop xchg loopne and cmp jbe stc (bad) pop add jmp movsl xor or pop insb xor or stc jmp ja fwait pop push and int3 sub dec (bad) mov cld add cmp dec jo xor or inc call das jnp sub dec fldl2e mov cmp mov lock rcr fsubrs std fstp adc icebp or push inc inc repz dec rorb add and add sub and or stc cmp push pop addr16 lret sbb test push mov dec cwtl or jb popf xor sbb jae xchg andl aam mov cld bound adc lods or push outsb enter ja xor jnp or pop pop sbb or insb popa and outsl loope mov and jg push xchg popa push (bad) roll fwait add dec mov dec lcall scas xchg imul add int push and push in adc fimull in lcall in mov jg out ret and cmp add jne fsubrs ja and lock loopne loop mov or jns or add movb pop sbb call xchg add movsb dec add mov mov outsb sub cmp jo (bad) push pop or test aad cmp jmp cmp mov lcall adc sub ret decl mov jnp std lods (bad) adc or jne push add push push cmp ja xchg or (bad) je call sub or subl sbb adc push sbb cmp rolb inc loope dec loopne mov cmp mov out sub jb pop cmp jne mov or cli sbb repnz fistl ficoml fs ret jnp sub add mov or push push adc sub aam sub sub or (bad) pop cmp cmpb call hlt mov out adc ds push mov std je test popf push sahf push setg dec xorl adc inc push inc xchg adc jo and inc add scas xor loopne pop mov cmp hlt xchg (bad) adc adc mov fstps fisubrl in fdivl mov xor dec sbb mov adc jbe cmp push add and add clc lahf sub mov sbb pop mov scas test std and pop mov adc or in jle jg das fisttp jb pop xchg addr16 movb push test xlat inc inc fbstp add mov lahf jb dec mov (bad) fadds (bad) xchg std ret or (bad) in adc icebp and in fsts jb push in call call add or test xorb mov rorl (bad) or or lock mov add push leave cmp test cs mov test decb sub inc insl inc sub pop ret movsbl push or add jle dec jmp mov adc adc jbe and bound xor cs pop adc stos loop ja out (bad) (bad) jmp scas sbb (bad) je lea sub mov dec adc dec mov pop int andb (bad) incb fmuls shr ret mov adc rep mov and stos lret cmpsb fimull sub pop or push adc jae pop dec adc mov mov fsts cld call cltd xchg and and dec and mov mov out adc cmp insl clc push cmpsl pop or lea or rcll mov sub push jbe push lea shr inc mov fisub sbb out add pop cli pop jbe pop jmp mov mov mov inc xchg fisubrl inc sub addr16 adc addr16 dec adc sbb push mov out sbb mov stc add notl and adc push (bad) paddq xlat adcl fs push push push or push pop jmp into add sbb pop jl sub push pand arpl xor sub pop xor popa add sti daa fimul adc and adc imul cmp ja mov jge call sub lahf outsl sbb mov sub xor loope into mov pop mov pop in inc xor dec inc in (bad) repnz pop test mov jb inc push ret movsb push pop jnp out adc jnp push push jg cmp addb insl aas (bad) or dec movb out adc incl in dec mov or mov push mov (bad) scas test sbb les push and pusha push adcb add (bad) jne mov cs shrb aas or into pop push inc push fs xchg sub sbb rorl push or stos jb (bad) or xchg mov jecxz fstpl in cmpsb int3 das (bad) (bad) mov cltd add adc outsl call hlt add pushf or shrl jnp lock in xchg stos jge cld jae pusha cld (bad) aaa call dec pushl enter add lret popa add sbb pop cli cli push adc mov mov aad xor (bad) orl idiv push mov mov and xor mov ret pop jp push add push inc and imull pusha addl mov das xlat or or aad jmp int inc mov cmp je sub shlb and add mov dec (bad) loopne insl (bad) and add fmuls push lcall mov cmp js push mov pushl adc pop rorb push inc mov push inc cmpb (bad) or mov mov and push rorl or out lcall add xor and cmp or mov (bad) push add mov inc pushf or ljmp xchg test or or (bad) and ja aaa fmull push mov mov inc inc dec lock pushf and and pop loope popa test add and fdivl lret cmp inc and xor xor push ret push arpl inc ss mov cmp cmp arpl or jns add inc sub cmp je rolb fsubrl xor pop push fstpl xor nop je mov cmp addl cwtl mov cmp inc inc out cwtl cmp push fldz sbb inc cmp ja pop push (bad) fdiv add fwait (bad) js push and (bad) lret push sub add xor psubusw xor or adc fstpt or roll mov iret insb loop cs xchg jae test (bad) outsb aaa or fiadd mov gs jne mov popf test add xchg mov add dec jne dec sub jae inc out (bad) ret rcr sar inc mov inc and xor adc add mov xor stos dec es fs fdivrs push pusha xor push test mov lahf rcll mov inc cmpb pop mov mov sbb mov sbb unpcklps sbb inc dec xchg dec cmpb bound ret sahf push mov fs mov inc pop ret or and sarb not cmp jbe test pop inc es sbb ja roll pop in (bad) bound push mov pop ret bound (bad) arpl add ljmp cltd mov or dec fisubl cmp sbb lea pop pop add cli js or hlt imul insl pop mov jmp push sbb cmp mov mov cmp and js jne inc test or daa mov adc in scas jle cmp jae repnz mov sub ljmp pushf mov repnz or pop or fld fadd sti loope mov hlt out es insb (bad) add pop sti jne data16 or add mov sbb push or test or and mov pop add wbinvd mov fs loopne ss add lcall sub push or inc add adcl push pop cld jmp nop ret adc popa mov xchg adc or cmp and sbb bound invd and and or clc fwait jmp jbe or add sub test out insl dec insb push pop adc add fwait pop mov add and add dec push mov pop mov inc inc inc and mov fisub add fbld add add and mov push or lret data16 (bad) pop adc mov inc rcr xchg ljmp dec movsb xor push inc out jb mov mov sti out adc push lcall or loop jnp fistl popa dec mov rcr push fsubp xor shr or push mov add bnd mov adc cmp pop pop mov iret lret mov daa lret inc inc push inc sub fstpl call adc ret mov xchg fcomps adc dec dec push cmc sbb ljmp lret fstps leave not jg xor leave leave xorb or pushf jo cmp sarl sarb xor pop imul fwait je or sbb insl rcrb or or fstpt in cmp inc or icebp ret (bad) stos jnp add adc xor push mov mov or mov adc cwtl rclb cmp cmp jnp ds inc das jne pop (bad) mov shrl xor or outsl cmp pop adc fisttp cmp jmp xchg cmp imul outsl pop or std out lea add and jne jne add test xor sbb xor insb and add rorb mov sub add and add test push cmp xor dec mov pusha fsubrs pop push dec pop stc ror push add out scas fsubl dec push (bad) sub push (bad) js,pn cmp dec or lahf fmul leave pop push mov outsl or mov mov loop or jmp leave data16 jg xor push nop int3 dec test jp js mov cli outsl sbb lea mov inc popl pop addb sbb imul push pop test add lods out push or std cmp out shll pusha sahf fidivl test adc add xchg int3 out push cmp dec inc push xor push fmull aaa fstpl mov adc push jo aaa and dec nop push sarb jnp cmp push pop xchg (bad) out and pop into sub add pop push mov add lahf call dec js ffree aaa cmp mov mov insb sbb mov or add dec add xchg into dec cmp add or repnz add roll mov and cwtl push mov fsubrs jns stos push xor mov movsl ljmp jb pop xchg test pop and mov inc sbb push lcall jle sbb push mov ret popa ret adc sub push out and inc inc inc inc push push dec dec inc inc inc inc inc inc cmp inc inc inc inc xor sub inc inc inc inc and sbb cmp inc inc adc rcrb mov mov xor sbbb repz jge rorb bnd lahf rcrb out xor lods mov add xchg xchg mov xchg xchg xchg int3 rcl fcoms loopne call in lock clc popf and xchg cld add add sbb popa mov or test sbb sbb mov movsb mov pushf (bad) and xor xor sbb adc xor xor or add fs xor xor fs inc enter jl js jo enter xchg nop in xor (bad) loopne fmull popa dec roll fs sarb rcl icebp jp sbb ss dec adc mov add add dec repz inc pop inc pop pop pop pop inc (bad) cld stc push inc dec push inc push inc dec dec push push push jns fmul out je insl push outsl outsl je and inc push pop sbb repz and pop push inc dec dec push jae out insb jle outsl and inc dec pop push dec dec imulb dec inc dec dec dec xor push setbe pop and cmp aas stc inc dec push push push dec push inc pop push mov in pop sti push inc inc dec inc cmovbe inc inc sbb jbe lods int inc push dec dec sbb inc jbe lahf in push dec push dec dec dec dec push dec rcpps (bad) stc xor dec addl dec push jb fs sti aas fcmovnu je xchg inc out push inc push gs imul sbb jb outsb je inc dec arpl jg inc jne insb fs jne bound sbb push cmp popa bound outsl dec jge test dec popa insl gs inc push push inc rcrl arpl jae data16 push imul dec push pop jno cmp cmp mov push xchg pop inc mov notb incl dec or inc daa jo scas xor jae inc dec jo fadds ja push pop inc out insb push mov and imul outsl jne jae loopne stc imull push inc inc dec push pop inc inc push inc xor jbe inc addl iret mov or or insb outsb imul pop in sub repz data16 sub sti arpl add insb jae adc fisubr push lods insb add outsb outsb outsb imul jae je imul idiv jg xor cmp xor xor and xor xor mov mov xor add divl inc popa je add arpl scas adc sub wbinvd sub cmpsl movsb pop inc js ret jo outsl adc push push inc outsl lcall mov hlt and gs je cmp inc sbb push push imul (bad) enter outsb pop jae roll (bad) bound add negb dec xor inc stos push popa jae fisttpll mov je dec gs inc cmp mov gs fs inc fwait pop push sub in xor xor pop jns je sub mov out adc xorl inc push xor mov in sbb dec movsb push outsb jnp cmp cmc xchg mov stos adc daa inc and jge mov mov fs xor jnp dec push push inc inc sbb push inc jae mov jbe and push push dec or loope insb sti jb push pop or mov (bad) cmp and lea aaa mov mov jnp lea imul push cmpl sarl xor fucom stc mov sub jo arpl and add mov push gs mov mov fdecstp insb je jo ja add dec mov sub adc pop cmp int3 or xor out scas mov add sub das sub outsl imul js mov lods push test push push inc scas jnp jbe shrb and add insl sub and xor xor imul cmc data16 sbb inc sub dec jle push add adc push adc jmp jae xor outsb cmp cltd and mov pop and outsl js lahf mov imul xchg ja sbb inc inc testl (bad) (bad) ficompl push pop (bad) mov dec pop cs push mov out popa mov push jne jl insl clc addr16 pop insl popa push pop popf addr16 je inc push leave sub pop pop popa inc jne aas in push mov je adc cmp xor popa jo pop jbe arpl packuswb mov insl lcall insl imul or or movl dec arpl ja and inc cwtl fstpl push inc sti jae push (bad) mov movsl inc inc dec dec dec dec dec adc pushf fnop sub pop lret arpl aaa (bad) (bad) sarb push insb insl add jle popf incl js jp outsl xor sub mov jae push xor popa out push push inc cmp dec sbb lea ja pop xor jns aaa push add cmp add xlat jne ret aad cmp jne jmp add pop sub addl mov pop mov mov sub ds and imul ret sbb pop dec stc sub mov xchg add dec pop pop add ljmp imul mov inc jae arpl jae and or sbb and pcmpgtb into add sbb stos lods sub in insl mov cwtl push add clc mov and gs jo inc outsl ret or adc aaa mov jns gs and xor or cmp lods imul js ja sub xlat pop insl or insb inc arpl or or xor jp xor pop rcrb xor jae data16 xor mov push popa inc inc xchg jne fisubrl insb cmpsl cmp pushf insl mov add mov jns add and sbb add and repz mov (bad) enter insl mov lret icebp or jp jb and ljmp sub scas insl pop dec and imul mov xor inc (bad) arpl in (bad) (bad) dec clc call in loopne loop in call in jmp and int push idiv in icebp in imul call sti cmc push out jmp in out and aam jge sti repnz and jmp cmova adc or ja sub inc (bad) outsb pop lcall pop aam sbb push and xor jne push jmp lods mov inc push pop inc dec mov or dec insl jae imul jns das add sbb ja push arpl dec outsl jbe inc or mov and je add pop xor rcll out popf cmpsb in (bad) xor adc int je frstor and xlat mov arpl push adc es mov lods pop cs inc xor inc jmp (bad) or or imul mov cmovnp insb mov inc sub loop and push aaa mov ja and pop incl xor pop inc inc mov xor fcos adc mov mov pop insb dec xchg inc mov nop lea out hlt in popa xchg das std idivl and jb jb or fs jno (bad) repnz nop pop enter or nop or inc stos nop or nop and test add in imul xchg inc dec xchg ljmp leave outsb mov dec push cmpsl and lret fs ss jl int cmp xor lret and xchg or mov mov leave test push and ret inc fbstp jecxz pop fbld and xchg mov and mov or aas lods or punpckldq fs test lret dec clc pop dec das or in dec rclb scas fsts (bad) cmp cltd cli scas jne push leave nop or hlt (bad) das inc pop les test add in repz testb wrmsr mov popf negb loop pop push fs cs (bad) popl add add inc loopne or (bad) adc addr16 add dec aas dec jbe pop jb cmc lahf repz and aam jge xchg xor fistp sbb adc sbb and xchg jo imul sbb cmc inc push leave test out fs xchg inc in xchg inc call jb dec bndcn dec ljmp out adc cmp jb sbb hlt inc ss or cmp dec xchg cs inc jb xchg negb add enter idivl nop cmc xchg inc pop dec repnz aas daa dec int ss jb (bad) fbld mov mov sub mov sbb das sbb mov loop and xor ss pop xor jmp xor imul and xor sub nop inc adc sub and mov pop cmp sub sbb sub nop or enter fsts sysret lahf enter and cmc repz fsts sub pop repz and enter aas pop das or fs or repnz jb or das xor xor push inc data16 (bad) nop rcll (bad) in hlt push push fsts lahf xor xchg inc mov fs cs pop (bad) icebp xchg add mov dec mull movsl clc or xchg fsub psubusw cmpsb xchg or mov jns sti mov and and shrb adc sbb scas insb and rolb dec xchg xchg jg or pop pop ret nop aas xchg div jg enter dec iret pop das fs and scas outsl nop mov sub lret rclb mov flds sbb bts bswap and (bad) ror mov sbb pop and sbb aas xchg and xchg mov ret mov push add cmpl add cmpsb stos into (bad) nop lea test mov cs push paddd xchg pop movsl add fs std cld pop or das cmp pop (bad) das leave nop or add jns fsts sbb sbb nop or jne test in or xchg hlt popa and xchg (bad) pop test pop das clc das push nop or dec das pop in push leave add repz sbb mov inc jb mov insb and jbe pop (bad) dec xchg mov xchg pop and fs fdivrs xchg ret lods dec xchg movsb in mov clc jg xchg ret scas bsr xchg sbb xor jb sbb inc xor dec pop lea xchg or sub push inc mov cs dec xchg negl pop dec xchg outsl xor insb cmp pop inc aas pop jb xchg lahf and jp or and cmc div xchg inc pop lret hlt imul outsl outsl insb dec xchg push das xchg cmp fs cmp fs xchg lock jl repz xchg or fs inc jb xchg repnz and or xchg and jae and and mov jo sub imul fnsave and and out leave nop lea xor nop or sbb xchg inc inc iret pop pop inc ss and inc ss pop jnp fs xor (bad) das inc ss pop lds fmuls pop xor out dec and xchg and das leave test es inc repnz or pop setl bswap nop aas xor negb inc pop enter cmpsl pop rorb and mov aaa sbb jmp and ljmp and inc (bad) push leave test push xchg or iret fs and mov xchg or bnd fsts in or int3 scas fsts pop in or nop or shrl jecxz push fsts pcmpgtb in lock xchg int into jg and mov jb mov addb inc loop fnstsw or pop fbld outsl (bad) je sbb xchg and xchg and enter jae dec jmp or pushl nop or nop lahf fildll std in or leave mul push das and outsl bound movsb cmpsl xor mov xacquire shrb clc enter lcall xor sbb cmp mov stos ja nop dec enter insb leave test aas or ret xchg inc push push clc (bad) mov das gs mov enter or insb enter adc mov and mov pop outsl mov enter mov sbb das fdiv fsubs sbb push outsl pop idivb and nop pop fldt and nop add leave rcrb nop pop fdiv lahf pop pop or lods dec nop or nop outsl push aas push inc add mov insb enter mov and or fs sub nop or xor pop mov inc rclb test incb pop mov std adc pop jg xorb aaa pop mov mov std inc mov aad aas mov movsb cmp mov out movhps imul lret ljmp stc cmova std adc fidiv dec mov inc sbb jb mov pop aad jbe xor add push lsl stos fs adc fnstsw lahf jb push jne test jmp inc das or test jg std pop outsl hlt out test push inc (bad) lcall mov mov repnz test pop cmp add add ja jg popa stc push mov xor test mov (bad) xor jmp pop scas or gs xchg dec add scas mov mov (bad) lods dec popa push or scas int mov leave loop add sbb aas rorl adc add clc addb dec ds jo stc xchg add mov imulb or pop add or push add aam mov inc popa arpl incb push jae popa insb jnp inc push dec cmp outsb adc scas inc adc push pop dec inc mov and je stos mov insb xchg push and mov popa and stos inc push aaa fwait and push push imul sbb js ljmp bound push xor in sub pop lods pop jecxz pop push imul addr16 add or add ds push cmp pop mov test (bad) add addr16 sbb and add push dec push add adc addl add (bad) add inc and pop imul in dec enter xor sub dec jmp xor cmp sub sub or into xchg add xchg add pop add insb xchg lret add rol mov sbb test sub test aas (bad) (bad) (bad) jmp pop je insb jo inc sub dec arpl pop jae imul sub dec push inc (bad) (bad) (bad) decl push bound outsb jb inc xor imul cmp xor push inc sar push xchg dec xchg jno imul ja jns cld (bad) (bad) pushl xor xor xor inc inc aaa cmp dec dec dec dec inc inc dec inc push push push (bad) ljmp add push dec pop pop bound push pop push push arpl mov imul mov lods xchg pop mov aaa ss sub xor int lods xchg pop (bad) jno fucom imul icebp popa bound neg jnp and cmp push neg jnp xor cmp dec push inc pop test push and in out (bad) mov or xchg add cmc clc adc adc push push adc pop (bad) (bad) mov je inc jns gs outsl push imul insb outsl (bad) fcos inc lds jecxz insb jae jb outsb push or push inc stc arpl inc cmp imul dec imul cmp xor arpl pop adc and jo xor inc push jae dec popa outsb fs push dec jo (bad) push add dec gs jo insb mov fistpl arpl push or gs jns push gs and push push pop fldl divb je add add incl push imul jmp jo sbb adc push jbe push imul sbb and std mov mov insb out add imul ret sbb inc inc jbe aas int3 lea fs imul add lds push jb xor cmp mov cmp fimull pop jne jo fwait adc inc fistpl cltd test inc mov les or and adc dec cli or xchg rcrb imul inc clc or movsb je (bad) mov push push or sub inc sbb inc adc mov mov mov imul mov popa and xchg and cmp outsb (bad) test outsb mov cwtl mov popf sbb add insl or xchg icebp (bad) ljmp jnp add and outsw mov jne mov xchg inc (bad) or popa sti mov adc push icebp arpl lock or lret es test lds inc imul pop (bad) sub ja imul movsl (bad) and inc out add (bad) mov lock push bound (bad) xor push insb inc rsm adc lods mov push push push or in sub gs or leave faddp cs sub dec fmul push sub mov and pop adc sbb dec mov push inc mov cmp push add push popa dec cltd pop pop sub outsb dec outsb push fwait insl cmovno sbb ret jno inc jle daa xchg fsubrl and pop or lds mov mov mov add ret inc sub cmpsl fmull adc mov push inc loope sub dec mov mov jge decl add sha256msg2 mov mov mov pop sub adcl enter cmpb ss and adc mov pushf js sbb inc jne adc mov cmovl ja jae dec insl pusha je data16 loopne jnp xorl js sub bound inc sub add jmp dec add dec jnp mov push (bad) jae repnz xchg cmp int inc and nop decl add out fnstenv pop mov add repnz subl or add fcoml and push xor and pop add repz cmpsl in add ss jno mov mov mov inc lret pop fwait mov or sub sti inc add test mov sbb add enter cmp adc cmc add pop ret add add add adc add add add inc add call int jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp 