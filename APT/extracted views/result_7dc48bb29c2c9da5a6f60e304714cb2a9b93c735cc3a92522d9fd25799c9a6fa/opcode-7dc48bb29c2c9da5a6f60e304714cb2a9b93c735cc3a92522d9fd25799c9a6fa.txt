test xchg mov jge,pn js pop mov cmp fucomi push push add mov outsb scas lret dec mov int3 or push inc lahf inc out fild and jno insb mov fldenv ljmp pop add cmp or pop or sarb or mov dec sahf pop in push aas mov test jecxz xchg jno add or (bad) out aad dec fwait xor adc inc ljmp lcall js nop inc push ret lret (bad) std (bad) mov cmp fsts bound fadds arpl pop mov leave jge push outsb leave mov clc leave aaa stos push cmpl push dec inc push sbb push dec into insb enter fidivl inc cmp dec inc decb lret mov xor cs push lret lcall jb scas mov std loop sub in push pushf mov leave (bad) int3 repnz enter mov mov dec xor dec push insb jne outsl enter add fs loopne or test loope add and popa movsb notb scas mov pop xchg in cs jo fcom xor xchg add add xor sub fistp int sbb je scas sbb jecxz popa sbb inc adc add or xor inc lcall inc mov mov (bad) insl jno xchg nop ljmp das movb lea je push cmp call movb pushf add add jns push clc bt movzwl sub xor mov push add cmp mov cmc mov pusha test mov jmp inc inc dec xor cs insb add (bad) into test add and fs jae movzbw pusha not mov push movb setne pop mov pusha not pop mov pushl lea jmp jge lahf and lahf mov in hlt xchg neg loopne rorb mov fsubl mov mov cmpb mov push cmp sbb xchg jns imul lea jb mov in es xor adc xor xchg cmp insl mov fcom mov xor and inc sbb mov pop mov lret aam add stc cmp (bad) (bad) xchg lea push nop ljmp subl fistp dec loope pusha sahf push scas aaa mov (bad) jb fs fnstenv (bad) and inc pop lea je not add shr inc seto inc mov jmp mov movsb sbb dec cli ds jnp cmp pop cmpsl cwtl (bad) dec test xchg jno xchg and stc pop add push (bad) (bad) cwtl jg jno fucom int adc xchg pop pop pushw outsb adc mov dec adc int3 push xlat xchg xor sbb (bad) xor fwait xchg enter inc addl aad test add sub insb dec xchg push jmp clc test stos xor mov movsb xchg aaa (bad) cmc dec ljmp outsb sbbl pop jg (bad) add in cmp fadd arpl xor sub mov lods add push pop outsl test (bad) fadd mov dec inc jns movw adc jmp push mov jg cli movsb mov and (bad) lret repz nop out inc mov jle mov movsl stc (bad) jno std jmp xchg enter dec ret or stc add stc inc or lea lcall lods repnz (bad) fsubl jbe jl,pn (bad) xlat push xor dec xor lahf arpl xchg dec add jbe sub fadds xor mov add fcoms cmp daa adc xor inc fcmovb mov jno jge gs repz mov cmpsb sbb jno mov jge jnp (bad) leave xchg in stos xor jbe repz dec push das add mov pop out into adc lods (bad) popf aam or lret mov sbb gs data16 test arpl out pop in lcall and repz scas dec mov adc sub adc ljmp push lods (bad) mov mov xor subb test mov mov xlat out rorb aad stc mov cli sbb call test lea outsl xor inc stos je incb inc jns lds aaa pop jle ret pop add pop stos xor add pusha ds xor int3 (bad) icebp adc mov stos adc jmp stos xor dec dec sbb call ss inc cmp dec or mov dec jne inc stc or jg or (bad) cwtl data16 push sti and pop adc icebp xor xor dec addr16 mov push stos jae pop fadds out iret inc add and mov movsb and scas xor (bad) enter lods xor push mov xlat call jb xchg lods les lret ret dec lods pop jg pop sub aas cld xor (bad) push jl bound xor rcrb mov adc shr inc xchg mov push call repz hlt dec aam fisub idivl out aaa and ret nop scas aaa cmpsl clc (bad) pop mov lret cmc ljmp dec int3 push out add mov xor nop iret shr mov test stc add jp test mov (bad) push ds scas jo cmp push pusha mov mov movb lea call jg pusha push mov pusha pusha push movw lea jmp mov enter xor pusha rcr mov stos pop outsb sub sub and or push mov lret js xor mov adc xor xchg push add paddsb pop mov mov mov xchg push rolb push fsubrs xor hlt cmpsb sti mov test mov inc sbb jb xchg or fs mov jbe dec dec sbb popa sbb fstpt push lret out jo dec mov cmpsl sbb mov mov repnz push push xchg sub test mov aaa rorl push in test mov xor pop stos pop loope aad mov xor call xchg out dec mov add xor popf scas lock fldcw imul add outsb jae (bad) jo popf cmpsb pop and inc cmc dec stos xor jns mov add ffree fstl fsub and cmpsb push and mov pop in cmp pop in dec inc cmp xchg mov or dec mov cli jbe and mov (bad) push pop add ret and fsubrl mov mov sbb jg aad jnp mov add aas loopne in mov cld in fadds jno mov loop mov sarb inc lret (bad) out xchg dec or je fs mov push repnz cmp mov or cmp loopne loopne sbb cmp cmp mov push pusha pop mov mov loop cs stos xchg mov or jae mov (bad) je xchg pushf nopl lahf pop jae xchg jo shrl push xor fbstp or xlat sub insl cltd xchg incl xor cmc mov jne lock fxam cltd and out lret dec fwait and adc pop cmpsb mov pop test mov lods mov cmp push stos movb lea jmp movzbl lahf bswap movl sets lea pushf mov movl pusha push push pushf pushl popl pushf pushl ret pusha movl call xchg arpl imul dec cmp push or call and pop imul pop imul and dec in jmp cmp icebp ljmp lea inc jl in xor movb dec iret fs mov ja add out dec insb add pop les jl in pop loop into std movsl sahf adc or cmp and cmp repnz pushf lret lock mov jg add pop rcll xchg sub adc ret fwait daa xchg inc das lock inc lret push sub jbe inc add push sub dec pushf call cmp fiaddl push movsb adc cmp adc ret cwtl pop add cmpsl push cld push jo lds inc enter dec push push dec sub push enter bound fild and daa test jge jp and mov push fidivl pop jge add lock (bad) and imul mov xchg stos popf test xchg fmuls pop dec add jbe stos cltd jp jae xchg cs pop in jge call push test jns fnstenv xor fmuls (bad) aaa and ds sub jo and cltd movsl fsubs lret mov ret (bad) daa jp add xchg scas das add inc gs je dec popa outsb fs add inc jnp,pt das pcmpgtb mov fwait lods test jb bound sub out out mov in xchg aam mov loopne sbb or xchg insl jns aam cli dec inc jl mov sbb int3 (bad) xchg stos mov loop xchg into inc push push adc mov out push loopne mov roll (bad) sbb icebp adc push jae mov in push sbb mov je insl repnz ljmp pop mov cld bound xchg or cltd stos lcall xor sbb xchg xchg fisub fcomip imul mov cmpsl aam shrl push stos je sbbb xchg fldenv and inc pslld jb mov testb movsl push in add test ss adc xchg adc add jo ror mov orb std and mov fildl (bad) mov pop add pop incl hlt adc imul lods xchg das jo dec jnp or cltd in jno test mov push pushf lea jmp dec dec je mov mov rolb dec pop js inc xchg mov mov pushf addr16 sarb outsl sbbb lds and mov xlat enter xchg dec jno test fcmovb sbbl shl idivl pop aas lock fs (bad) inc inc (bad) aad into in sbb ret out xor and xor es iret or jne dec repz fnop ret test xor mov (bad) sub mov mov inc (bad) sbb mov or into jno jno test cmp call call pushl test push pushf jmp pushf mov movl mov movb pushl ret lea jae neg mov inc and adc mov btc rcl mov pushf test bt clc sub pushl test cmp repnz pushf jmp and shrl jbe pop loope iret lock fcoml daa mov mov imul sarl jecxz cmp imul enter pop cmpsb fldl2e sbb ja push jle push pop lods dec and fbstp mov rcll lcall in lahf loopne and mulb or add xor (bad) lahf daa cmp inc xchg mov cli in clc or data16 icebp fldenv (bad) (bad) mov div jmp jno sbbl int xchg call pop inc faddl popf xchg lea in jno aad lods xor add es iret repnz adc push sbb inc pop fs insl out xor pop in jb mov sbb dec mov fsubl cmpsb mov jnp shrl test adc jns outsb out xor push mov scas icebp std inc push lea out into shr and sub sbb xchg int3 arpl pop (bad) nop das jo lods mov in (bad) fmul sbb cli in sbb sbb add add adc cmp push pop xchg lods adc es outsl stc data16 or sbb aaa and in or push pop push mov cltd bound mov sbb fwait std fwait push mov loop into (bad) aas fisubrl es and (bad) outsl addb scas shlb repnz mov loop aad cmp add cmp sbb or mov jno (bad) inc dec sarl sbb out inc fisub lock xor shr push movsb test stc (bad) sbb sahf inc sbb cmp cmp dec jno jg pop scas dec dec inc cmp sbb call adc mov push sub sbb stos sti fisubr neg mov ret clc adc roll aas push sbb pushf leave or faddl inc lock movsb fwait das iret mov add xlat loop cmp iret cli or inc pusha mov fwait cmp imul js stos hlt xor xor push jne repnz in scas jnp pop (bad) jno sti jb lea not push pusha fidiv jo adc add out repz cmp mov loop ja jp insb mov rorb pop pop (bad) outsl aaa adc and scas (bad) lock hlt clc insb cli xchg push ret test out jmp pop sbb lock cli addr16 loop jne sbb or leave xchg mov sti jne pop int xlat js cmp (bad) or xchg in stos fstpt arpl push ljmp pop outsb xor or mov pop push cmpsl push jle jmp lods xor cmpsb out addr16 out jb inc or dec xchg xchg push stos adc push inc hlt iret stos mov jne cmp fwait mull push add loop in and mov arpl jge xchg stos mov cmp push or xchg sbb dec pop dec xor test leave jle xor (bad) testb mov (bad) mov jns push push lret sub gs fs daa pop inc sti out mov stos xor xchg mov jge rcrl jae mov mov in jnp lret or push popa sti mov xor add adc aam xor mov xchg jo jae (bad) mov insl and jae or imul jno cmp ljmp (bad) divb adc cmp xor fwait std dec fnstsw mov push in subb adc js frstor jle pop mov jo push insl xorl pop jns sti jbe in inc stc fnsave dec dec pop into jb mov fldl in xor dec stos in stc stc jo jae scas out mov inc rolb adc repnz jo push imul jnp xchg pop stos jno push roll sub jnp xlat sub cmc stos or xor adc add in rorl ror sbb pushf mov jmp dec imul pop or sbb and inc stos nopl bnd pop jecxz cltd pop aaa mov idivl inc fs scas iret pusha shr mov mov imul xchg aaa inc adc xchg gs push mov sbb mov hlt insb push mov insb gs jae and jne cli push iret mov lods lds xchg xchg or jmp jno jne out dec adc cmp cmp repnz sbb fildl mov pop leave jmp jno fs cmp add shll dec out outsl cmp xor mov jmp (bad) add xchg mov cmp mov cwtl and sub jo mov push shrb fmull fbstp aad xor push stos or sub jge mov mov adc dec push pop sub pcmpeqw jne imul dec in js pop imul pop pusha arpl ljmp dec dec gs xor cmp mov pop add inc inc leave and (bad) das loop inc lahf sub fisttpll roll and push jae or es mov popa scas jp push xlat jg jne fimul loopne sub fs jb aam je jl outsl jno mov and xchg pop push jo jno popf (bad) jae (bad) xchg cli iret pop repz ja cmp inc pop cli sti pop xorl jg leave sub fldt cmpsl call sbb outsl inc pop movsb mov inc stos sbb adc lea shrl xor gs shrl in fstpt movsb int push pop dec stos xchg scas pop jb ja,pt mov push lcall pop push jecxz gs add ja jmp jno stos not cmp rcrb mov jo jge mov daa jb xor pop jge dec inc inc lcall mov repz xor insb mov mov movsb lahf lret outsl push addr16 int int inc pop add imul insb cmpsl inc pop std pop sub (bad) xor scas add bound jl add sub inc lret test fsubl add sub adc dec mov call pop dec out adc repnz push ljmp dec xor stos lret outsb pop insb sbb xor rcl or outsl dec aad je xlat xlat sub jae aaa push push insb cli or jnp and jbe sub aad inc jns fbstp and xlat push clc dec jno std pop sbb pop sub aad addr16 pop std ss jecxz je mov fs les addr16 movsb jo in dec fstpt aad pop jb cmp xchg mov stos cmp pop pop stos incb xor lea or mov sbb out aas jne enter xorb jo jne push push add divb aas xchg aam push xor xchg push inc loopne jae (bad) jp insb js arpl (bad) jne adc xor push lret imul sbb add imulw or adc push outsb fwait push repz pop pusha out data16 push lea aas (bad) xchg push pop (bad) aad das jg cli ja hlt xchg loopne aam insl mov xchg lret (bad) imul lock or xor iret xor and jno cmpsl addr16 stos hlt push aaa lds imul jmp xor imul test mov jno mulb lods push inc out imul xchg imul or cmp fstpt push repz inc inc mov fcmovb ja loopne (bad) xchg sub das test xchg fucom mov dec adc sub push (bad) push cmp xchg popa imul jae das pop jp xchg out xlat std (bad) fnstenv loope dec jnp and inc std xchg insl jae push imul sti xor mov pop out mov out add mov mov pop push shlb jno imul lock imul pop call in push mulb nop loop jne movsb push push gs inc scas call dec mov dec mov pop ss jo andl mov je cmc mov mov scas add lds js testb imul pop xor pop pushf mov push test mov loop lods ja xchg sbb arpl outsb popa pop scas push fnsave jo jne fwait add mov pop sub ret scas fwait fwait out imul adc jnp mov fildl jecxz movsb xor shlb mov cmp xchg add or jae xchg out mov mov pop test pop mov iret mov arpl movsb or ret pop jp repnz pop or movsb push scas mov fisttpl imul icebp pop adcb dec shrl in fsubl mov lea xor and test sti inc shrb stc and pop insl bnd xor sbb dec inc cwtl cli push inc lahf lret xchg push movlps outsl sbb out adc mov push into dec fs xor aam leave movsb mov ror pop push stos int3 movsl scas inc call jb and call cli jb cmpsb dec mov mov stos stos (bad) (bad) sub and arpl push ds or movsb or inc or movsb ss mov insl jbe stos xchg sbb mov icebp add sub rcr sti and sbbb imul inc stos xor or jp stos mov dec ret inc inc in ja xor cli jp stos icebp pop and push cmpsb stos fwait out out cmp cmp mov xor outsl aam sub lret jno mov push ja sbb xchg outsb dec adc aaa jp xor sub push arpl push daa aaa mov sub (bad) or dec xor movsb cld sbb push sub cwtl lret inc loopne mov dec lea push dec hlt gs repnz (bad) xlat arpl sbb jbe arpl xchg pop pop scas sbb outsb mov ret arpl movsb push push sti cmp fiaddl repnz sbb stos loope cmc aaa lock test mov fwait mov jnp rcrl and sbb jae stos cmp (bad) test jnp int pop fcoml movsb adc mov nop in fstpt xlat data16 test popa mov mov xchg fs movsb int push push leave insb fstpt imul sti mov xlat insl lahf lret movsb adc sbb sarl aas jmp ja mov jbe and rorl or daa mov xchg hlt lcall movsb iret ljmp add jnp jnp fisubrl (bad) jae lock ret cmp (bad) mov jns or mov loopne push dec push bound lret test mov enter inc fs cmp insl add movsb jl jo sbb mov sub xchg inc stos shrb cmpsl sbb inc inc fs jb jae stos pop imul lock or adc int outsb dec adc xor insl mov out movsb aas fs mov (bad) jne add leave pop es jnp cli test test mov mov lock dec (bad) test fdivs dec popf push stos out jne adc add fcmovu rcrl sarl pusha push divb jmp ja stos dec aas dec mov adc mov pop sbb aas mov push mov sbb sbb and pop jg xchg cmp aad fcoml cmp push ja pop outsl adc sarb mov cmpsb mov fistpl jnp or loope lods stos pushf decb ja sbb aas ret data16 mov xchg jnp int insl popa jo ja movsb mov cld jnp fs int3 cltd jns sub dec lret xor loop,pn jnp mov out lods je rcll (bad) and xor xor cmp jno movsl xchg in hlt fldl repz stos rorb shl les pop stos xchg fstl ret mov sbb push dec outsl mov xlat cmp hlt int3 addr16 jb sbb test lds in hlt andl push jnp movsl fwait aaa mov ret cmc ja jns (bad) (bad) shlb dec js imul das or cmpl xchg insl adc lock sbb mov (bad) mov pop fs test (bad) loop pop push fcom cmc push push xchg xchg adcl (bad) (bad) sti xor add sbb add jnp in pop out xor inc je pop mov mov outsb insl stos cs ret xchg dec lea mov lret (bad) testl mov push sbb mov dec popa (bad) into mov xlat lret das out mul jp mov xor mov adc mov jb (bad) loopne jmp pop sub dec arpl mov dec xor inc cmpsl pusha jnp cmp arpl lds xchg out in inc repz sub adc xchg jb jae stc pop cmp mov pop dec (bad) cmc data16 imul jp insl mov sahf add (bad) sbb es out fisubr mov (bad) jns lcall or addr16 cmp call (bad) arpl andl out add mov (bad) ficomp lock fwait cmpb cmp lods stos movsl stos es and or dec jecxz cmp addr16 out add cli mov dec lahf outsl pop cli jp hlt notb test mov jbe jne sti enter in jae sub jmp sarl test dec sbb xor lret fistl stos xchg std mov cmp pop pop dec sbb inc cmc ja and (bad) mov addr16 cli cmpsb insl mov pop inc out push scas push shr dec jae xor shrb adc cmpsb pop inc and arpl (bad) mov roll pop aad imul gs mov and pop dec add cmp jmp outsl in movsb xchg imul outsl lahf sti hlt in addr16 cli pop pop out test pop push inc imul sub sub imul jle jp in std adc movsb sbb mov imul aam jae push dec dec sub in add push pushw insb repnz sub sbb arpl pop or in ficoml stos adc lret outsl xor (bad) sarb nop cmpsb ja lret dec or jns clc lea aam cmpsl fldenv xchg mov ret push hlt ljmp push push mov mov dec mov push cmp in sub (bad) leave cli push cli xchg out lock stos fisttpl insl lds fcmovnbe bnd es stos hlt push ljmp stos iret cld xchg push bound jnp scas loop dec lods sbb xlat adc je imul lcall sbb lods or sub scas movsb movsl outsb iret push in ljmp stos imul sub push fs pop cld ja lock jmp push inc ja pop jb mov std jns xor mov imul sbb sbb push int jp cmpsl imul jns das stos dec icebp (bad) (bad) stos fcmovnb stc in xchg insl adc (bad) xchg scas nop orb xor data16 (bad) pop sub stos mov push scas add jb (bad) aam stos push sbb js movsb mov aam repz out push add int3 addr16 std jne lock xor pop inc cmpsl jbe mov out rorb mov pop xchg pop adc jnp xchg imul lods jno mov sbbb ret sti add jmp addr16 scas sub cltd mov jp insl sub stos stc ljmp inc (bad) loopne aaa or dec leave pop inc cli adc xor lret xchg lcall dec pusha jnp inc mov pusha imul add loopne fs imul std jae xor push roll or mov subb out shlb push cwtl pusha addr16 jp push mov sub ficomp and ja test mov jp mov add mov pop dec jl mov jnp ret cmc (bad) in jae cmp fwait xchg push adc dec rcll adc negb and mov imul imull movsb mov rcll xchg or jmp lds or mov cmp ds movsb je sub idivb pop insb xlat cmp sub xor shrb decl push movsb repz ss jge js push mov in jae rcrl je pop sub fstl jbe add lret and movsl jmp das jnp xchg fs out aaa adc xor sbb or dec in test (bad) sub xchg xchg mov xchg pop inc cmpsl dec mov adc mov mov mov call das idivl xchg dec pop fs fcomps dec arpl into pop (bad) pop mov add lahf (bad) mov jb push (bad) or das sub mov test xchg repnz mov (bad) jmp (bad) push xor ss and pop jecxz cwtl (bad) arpl dec pushf cli jne insl sbb stos or mov iret jnp leave (bad) jne in addr16 mov fs fldlg2 shrl dec lock aam xchg push jne fsubrl dec add cli xlat gs fs stos inc lcall cmp fisubrl mov out repnz mov (bad) pop mov jne push xor xchg gs call cmp or loop lea test inc roll and cs movsb test (bad) das mov jnp pop sbb imul out lcall das daa lret sbb pop test sbb (bad) dec (bad) cli xchg sbb in or jae mov stos dec out sbb jae or jo movsb mov nop adc mov pop gs push in divb dec (bad) fimul stos repz pop add std and mov daa add or jae stos dec adc mov fidivr mov jmp and jl je repz test adc adc int3 repz push (bad) out jbe (bad) push aad jle or jb popa xchg cmp push adc fdivrp and es div mov xchg call jnp push push loop cmp not insb ret dec jecxz fidivl mov rcr mov jae or into fs dec dec and pop fsincos cli jae ret sbb sub mov jo push inc imul add push pop jge fidiv jb mov ss xorb (bad) sub jecxz (bad) pop or aas xchg mov (bad) jnp pop fisub out lds (bad) mov loop cli jp jno push jl jle dec shll jb push ret adc xchg push in sbb popa add mov xor jnp iret gs push mov enter and push outsl mov inc movsl shlb mov sub mov jo cli dec push inc xor inc dec xor stos out cmc push mov out pop cmp xchg rcr dec mov jmp xchg jo cmpsb ja nop fwait in movsb xchg bound mov lahf push imul inc (bad) aad (bad) pop aaa lds lds imul mov cmp cmovle ljmp mov mov hlt jp sub std xchg sub cmpsl jl inc (bad) ss pusha jge cmp pop push movsb shl outsl rcrb rorb movsb addr16 testb jb aad sbb fisttp or imulb mov sub mov mov jecxz adc xchg shll fadds sub aam (bad) mov scas aam std adc jp mov inc sbbl pop int mov xchg add ss cwtl mov sub jge movsb xor fldenv stos push mov sarb stos daa les xchg testl out outsl pop imul fiadd and leave jmp nop jmp push mov iret adc ret imul inc mov sub dec clc push in inc adc mov ret sub cmp add mov ficoml scas sub scas jb sbbb mov mov jae addr16 out xchg ret sub (bad) stos mov mov sti jnp push fs or dec aad xchg push cld xchg iret and aam imul in pop and xor xchg js out popa dec pop arpl fildl ficom jb mov dec mov mov pop outsb popa xchg les lds in pop mov int3 je nop sub mov mov out scas sahf jge (bad) pop rolb sbb rcrb rclb or (bad) sub popa jg enter xchg or into add sti les stos cmp (bad) jecxz push xor sbb fcmovb mov popa sub fstps xor outsl addr16 movw add ffree jecxz jnp mov ret mov daa popa xchg popa rorl push sub mov push rol lods dec adc dec lcall xchg bound xlat stos mov pop mov int (bad) xor jbe jb aaa cmpsb sub bound cwtl dec jp stos adc jge dec jnp aad fwait cmp outsl inc aam inc psllq dec scas mov dec push inc cmc dec mov pop stc pusha or (bad) sti subb xlat pop ret dec dec loope iret fimull out lea (bad) cmpsl clc ret sub jnp mov adc loopne mov jb sbb xor inc jno roll imul cmp inc repnz push push in pop inc mov test scas shrb push loopne icebp (bad) jle cli imul cmpsb push mov jnp xchg pusha push or cli add sti mov pop and rcl adc int shl sarl sub outsl pop push or sub data16 ja pop (bad) fldcw loopne mov std or cmpsb adc fldt jno shrl loop in das (bad) (bad) mov hlt mov (bad) cld lock inc hlt adc mov ffreep mov iret in xchg jle jne mov xchg xor mov outsl add mull out jbe or mov fisttpll inc mov stos out psignw fisubrl sahf sub lods ss xor (bad) lcall ret cmpsb pop hlt pop pop (bad) jno scas xchg mov (bad) cmpsl sub dec adc sti and push ror jmp int imul fldt xor lock lcall push pusha add pop les call popf push and xor (bad) ret in out arpl loop dec into aam xor xor xchg push aad jp pop cmp je push sub in pop scas cmp xor (bad) push mov movsl push (bad) sti jae es mov jae lret (bad) sub popa movsb adc jae adc jbe inc dec into (bad) insb sbb jmp int ret push adc repz inc mov shll hlt jnp mov pop mov push dec fldt mov mov and jecxz sbb push sarl movsb rcll aad pop sub ret cli pop jae mov lds mov movsb mov fs lcall out inc jae (bad) scas aas add jnp stos adc scas push outsl sub adc mov or push arpl mov sbb push mov je xlat dec sbb jno cmp xor stos push cmpsl sub icebp and push cmp jecxz or pop ret cltd push das xor pop pop imul outsb imul adc jne pop dec jae insl outsl imul andl test inc xlat popa or outsl inc jne push imul sti imul and pop in pop shr bound fadds dec int3 aad sbb sub push dec push pop arpl dec dec stos stos jmp jnp adc and fisubrl push jne inc xor mov fisubl and popa dec aaa inc jno (bad) and dec inc mov cli lret into in sub mov cmp mulb cmp gs (bad) loope xchg aad push outsb push cmpsl add and rolb adc jmp pop sbb sub hlt adc and xor xchg jae push and cli in inc arpl arpl (bad) in pop mov nop fbstp jmp mov imul xor dec fildl loopne mov stos inc push pop clc lock insb outsb out and pop sti mov imul dec es arpl insl addr16 sbb popf cmc jp out aaa stos loop dec jge xlat pop jnp sub negb push inc in xchg pushf mov scas sub in (bad) mov sbb cmp rcr xchg inc ljmp and jge lea popa jl inc mov imul scas xchg stos (bad) (bad) jb adc mov xchg mov or mov scas jecxz (bad) lock notb je pushf cmp xchg movsb (bad) mov je fisub lret subb jo adc loopne inc stc fmull cmp insb sahf push popa sub push mulb loope sub add jae stos xor imul push movsb leave push (bad) clc inc mov pop stos mov out mov sbb fidivl inc mov xchg add les jnp cli mov in pop inc lea inc outsb stos out push ja shr ja dec and (bad) mov in std aaa and arpl movsb xchg fadds das inc inc aas adc cmp stos adc outsl (bad) lahf movsb int jbe scas or and js out mov sbb in xchg sub mov inc jbe idiv ret movsb cmp jno pop push add mov imul fs xorl dec pushf xchg or mov mov lret (bad) mov stos jbe cmp fs enter pop mov sbb out adc (bad) dec mov cld cmp mov ss imul movsb jbe dec movsb out bound and xchg push push pop jo clc mov ret ja mov adc out xchg cld out popa xchg ds add ja jno in fwait sub pop push hlt mov stos jns jmp xor cmp mov jnp xchg je stos pop das xchg repnz push xchg mov pop adcl mov ja stos (bad) nop xchg cli repz (bad) aaa mov enter ja ret inc ja mov pop adc push sbb out fsubrl hlt arpl jge (bad) sti inc aad ss (bad) pusha add in in inc stos mov fnstenv js cmpsl jnp out sub jne arpl mov jp push mov dec sbbl in mov stos mov sti ret lcall inc dec loop int add cmc push mov push mul movsb into (bad) mov push sub (bad) cmp inc les sbb sbb das int stos hlt add xchg adc out push cmp dec push ficoml adc push insb ja hlt dec and jne mulb sub jo test ficompl cmp xchg jne repnz sbb push mov sbb jb daa jno hlt outsb ljmp mov aas in aaa arpl lock out movsb and outsl pop cmp sti adc add scas enter clc mov outsl dec sbb fmuls insl stos inc push sub inc inc repz jno jo jb or loopne sub mov (bad) fsub push fldt sti call jmp divb lock ja push cwtl lahf adc inc lret or aas mov lret cmp sti fsubs mov pop xchg pop insl push das pcmpgtw lret stos in bound or vpsubsw js mov push rcrl aad stos sbb dec dec cli loop inc push lea mov cli (bad) in outsl leave pusha push popf gs jne pop fnstenv jg push mov fs or push int mov mov pop insb push sub lcall ja mov jae gs jno push imull sar xchg aam pushf add mov mov jae jbe pop shll sbb or xchg mov pop loopne (bad) jbe pop insl jno addr16 or adc dec (bad) xor out jne dec mov mov movsb leave xlat xchg out sbb xor insl jb mov jp add insl shrl add mov jnp pop inc repnz dec xor or in jge cld stc mov inc add cmc movsb cltd sbb (bad) mov adc sti jmp sbb cmp jnp leave std add lods inc cmpsl sbb clc test out push and push xchg mov sub fcoms dec adc jnp inc pop push pusha jecxz push rdmsr fs mov xor mov repz push bnd xchg pop stos and test jne cmp pop repnz into jb cld push jne sbb inc xchg jb loopne aaa inc mov iret and ljmp dec or mov push dec inc jne fdivrp inc pusha push sbb jno negb jae stos rcll pop xor inc fs popa jnp jge shrl xor cmp loope push and adc lret pop in fnstenv popa dec (bad) jg sbb test xor mov fiaddl lds aad jae or or fsub (bad) ss pop sbb pop popf dec add push imul ficompl ret scas cmc sub aaa dec or cwtl gs aam sbb (bad) mov push lret out rorb outsb or std or push in leave push xor jb movsb push sub cmp fstps stos test sar lock outsb cmp (bad) js xchg ret xorb arpl (bad) aad sub push pusha clc pop mov aam pop lods mov push xchg push and dec imul fiadd adc sbb pop jo movsb jno jae cmp xchg and jl and push xchg loop negl sbb mov and jp jg fstps push stos pop stc (bad) icebp jne cld jmp ja xchg dec push mov jo fs jg pop xchg inc mov loope inc cld idivb sbb mov mov push or inc jbe neg repnz pop out cmpl xor mov imul out divl fsubr mov stos dec inc sub gs and xchg inc loope movsl ja push testb or sahf pushf cmc cmp into sub pop (bad) jne add cmpsl out dec sub sub push adc push or mov push nop fistl pop mov pusha and and xlat cmp sub imul xlat lods cmp sub push fnsave mov xchg sbb xchg mov lret stos xchg (bad) sti cld add pop movsb dec into gs mov (bad) pop or xor sub inc pop call add mov ret imul je xor movsb push mov mov push test jbe or stos ljmp push jle das push ljmp ret mov sti stos jnp idiv inc ror ja ret ds mov popa iret push sahf cli arpl (bad) or sub mov stos jns lahf pop xchg sbb jle add pusha dec adc jae sbb and push js iret ss push popa sbb push cwtl cmp add mov mov shll int push and popa movsb push mov in int3 or fs lret stos dec (bad) mov jmp jno jb inc jb pslld inc fcompl bound xor jno dec loope arpl loopne mov fldt loope cli pop cmp add mov lret imul jp ret icebp or inc xor mov mov cli lcall and mov jge notl cmp inc and ds (bad) cmp (bad) imul inc mul jno inc mov jae pop fistp fst sub jl cmp aas push push jne loope and fist add jnp lods push inc xor sub mov mov cmp in sti lea cli push push inc mov dec scas (bad) aam imul aaa push neg mov nop cli insl inc jp,pn mulb adc push lahf jno cmp jb test jnp mov cld ss jg push mov add rcll jbe or mov ljmp (bad) jp jae mov mov add fidivl cmpsl mov xor repnz inc ret pop jne,pt xlat and jne jl neg inc stos pusha xchg jp lret (bad) xor pop mov mov jp pusha adc mov (bad) jb lods jp sub loope sub jp pop pop or jae (bad) mov scas inc jno imul shll sbb (bad) in test mov adc ja jp decl inc ret sub out je adc pop and sbb push out aad imul divl cmp imul lock data16 mov inc mov jo lock lcall push pusha sub je dec mov mov jecxz inc mov xchg out mov into (bad) out ljmp mov arpl cmpsb inc dec movsb call sub stos cltd add inc pop cwtl jmp fdivrs xchg inc mov add and (bad) sub ds (bad) ja call xor sti sub inc dec dec push cmp jae xor adc (bad) movsb sub mov pop cli mov mov stos negl and cmpl sarl mov stos sbb mov inc arpl or cmp xor cmp inc ret idivb scas or repnz fdivs xchg push pop insl sar adc cmp cmp push pop push sti push cld nop adc jmp xchg insl xor loope mov pop push mov and subl jae out dec hlt adc sbb scas jae and jmp sbb mov ror push cmp dec stos fcomps rcrb inc movsb leave pop (bad) jnp mov stos frstor mov sub dec xchg in cli icebp lods (bad) int3 out sti adc out jnp stos lods sbb jmp and test push (bad) xchg repz mov pop sbb adc pop repnz dec cli lret movsb mov sahf mov jg stos orl hlt sahf cli cmp fs jecxz divl rolb loope jge cwtl les sbb xlat pop in and test loopne dec cmp insl mov je jg (bad) xchg jmp in mov test cmp scas fisttpl je sbb sti outsl xor sarb gs je cmpsb mov add and ret sbb insl leave add mov fidivrl jle stos xchg (bad) cmp cltd jae and cmp test dec sarl sub stos call mov adc and fsub push je fs out or int ja rdmsr icebp test mov push cmpsl add adc cmp imul dec movsb div xor addr16 mov ljmp fistpl sub add xor push pop sbb pop test in jo leave pusha or jae jecxz (bad) pop pushf into pusha sub inc loope or mov stos xor insl ds or cs inc repnz add and xchg push cmp pop cli imul and mov leave ja xlat jns lahf ret leave jnp dec xor dec mov cltd dec pop add inc xlat movsb loop xor fidiv outsl or fistpl arpl inc xor dec jno cltd (bad) push cmp mov cmc jnp mov or enter ret aas enter fincstp mov xlat gs pop jnp stos iret ljmp or adc pop ret (bad) or ret xchg mov sub mov mov jae or mov iret jge sahf jae sub fisttpll mov mov out ja leave gs pop push mov jg cmp pop push decb pop ret dec fimull dec insl aaa mov arpl cmc shll fistpll push (bad) (bad) (bad) stos mov dec outsb es rol popa jae jecxz fwait pusha sbb adc sbb movl into outsl mov add cli popf inc inc (bad) mov or int and insl jmp sbb into pushl and and cmc test push lea int3 stos push jns repz xchg add jp scas int3 jo mov movsb cmpsb ficoml in push sub sub dec stos dec jo add ss xor cmp cmpsl mov out jbe jno bound insb xchg dec jp fcomp fwait sbb imul cmp xor repz and cwtl or hlt (bad) inc in inc movsb inc jg enter mov ja lcall insb push pop inc je pop and repz daa add es jns fcmovnb call jl cmp mov xchg jp xor xorb pop addr16 sub and mov xchg jp cld push in cmp insl add call aaa xor pop jp or test fldenv sahf cmp mov cmc into fs jle sub cmp jp sbb add daa aas jb shl jno jo sbb jae mov pop pop lcall imul loop (bad) pop scas lret jp ficomp mov sub cwtl clc jnp mov cmp repnz insl test jp or jp sbb out jg std addps dec loopne lea jp push popf cmp aam xlat pop mov popa pop pop outsb gs sub adc fisttpll clc dec cmp sub popl ljmp clc sub test sarl popf insb mov jae pop je mov das leave mov jmp hlt add cmp stos cmp stos push push lahf shr cmp mov jmp jnp and call stos outsb sbb pusha push jp cltd addr16 mov sub or xchg pushf fistpl test repz aas int and fildll repz sahf jne xchg dec stos (bad) jb lret jp fs lods bound xchg inc jno fistpl sti sub add add push fs in idivb js inc out leave shrl inc jne sub xor sti cmp mov pushl inc pop js mov sub mov in inc and jp mov push test mov mov mov jp cltd push and int (bad) mov sti not arpl dec add xor lock cmp mov test mov cmp lahf jns aad push and push jp mov testb push add mov jnp mov mov add lods mov jo ss xchg mov or pop xchg and (bad) mov and mov rcr imul and xor scas sbb cmc imul or dec mov sub gs jge mov cmp lahf stos outsb push push ja jne mov xchg mov adc lcall mov jne pop or les sbb test and add pop stos fiadd xchg jo movsb (bad) push dec mov xor lods inc xlat ja jp out cwtl stos repz out add push ret loope stc xchg stc push sahf dec lret pop jp in mov dec xor dec in cmp stos addr16 jne jno je dec or dec mov addr16 rclb adc dec adc dec sbb adc out mov roll adc sub loop sbb sbb pop cwtl lret jo add aas lahf mov pop shrl les cmp stos fbld stos mov sbb aaa and dec mov pusha bswap mov test jmp mov lcall cmp dec lods ljmp es pushf lcall call sbbl mov pop xor dec lea xchg outsb xlat push or ja repz pop jmp inc fwait (bad) jno pusha pop aaa mov sti sub xor dec loope jno clc xchg lret pop xorb push mov xor stc lods gs ds negb sbbb pop mov rorl mov mov add jp pop cwtl adc ja sub mull mov aas stos pop sarb jne scas mov jae pusha mov cmp xchg jnp sbb adc lods jbe stos xor adcl and imul rcll xlat daa insl sub gs adc stc mov int dec hlt mov stos mov cli xlat and inc mov pop cmp xchg arpl inc insl jno pusha lds jbe arpl movsb call sti stos (bad) dec dec mov jne mov sbb lds pop inc inc aad pop shrb add push sbb stos pop mov pop cmp jg ljmp and jp in test xchg jnp push adc jp js xor mov les (bad) lret jp jmp or lret jp mov lods fs bound sbb ficoml (bad) mov mov loope mov lret jecxz idiv mov pop out pop mov in push mov (bad) xchg pop sbb push sahf jp cs add push test pop jno clc fidivl cld jp adc loopne shlb imul sub lcall fwait outsb ret ss sbb push sub and mov sbb cmp fiaddl adc jl das mov (bad) cmpsl jp daa cmc int3 pop mov add mov ds dec out insl lret sub sub or divb add test add xchg xchg cld mov nop insl les jge imul (bad) mov call xchg inc (bad) and cltd lock fistpl leave mov or dec in jno or outsb inc pop fcmove movlps mov sbb pop push push sub js sahf xchg cmp mov dec addr16 outsl xchg pushf xchg and ja sarb mov scas jns jp adcl cmp jl jmp fisttpl xchg int3 mov dec or int jbe stos addr16 mov fistl lods out adc in mov mov (bad) cmc ret fs xor in cmc stc test jbe or jge fmuls in fs sub mov inc cli sub jnp adc mov sti stos es cli pushf cli lds clc xchg movsb lahf jg scas cmpsb dec push sbb shlb cmp or (bad) je aas lcall pusha push mov stos adc js int3 dec ljmp fldl or mov xlat mov adc sub rcl loopne jns pushf mov pop stos push in movsb outsl sub adc push cmp sbb xchg jmp ret das lcall in into mov imul stos enter movsb xor call ljmp mov cmp fcomp jnp cmp test sbb lods test adc pop sti xchg addr16 sarb repnz test imul inc push ja ds pop cli aam add in jp movsb (bad) out enter cmp ja mov mov fcomps stc idivl fistpl out dec mov test (bad) aaa or cmp lgs cli mov or fwait adc dec jmp lret xor lock lret arpl jp mov aaa pop mov (bad) mov dec jno loopne,pn push add push xor test (bad) out pop inc mov jp (bad) jle ret inc mov jp xchg xchg fnsave jge aam xchg push jnp loopne and mov jnp xor lcall out mov xchg jl and jp or jle lods movl sbb sbb movsb push pop test loopne dec cmp mov out stos pop adc shrl cmp pop dec lretw sub xchg iret pop dec cmp cmp loopne add push push pop sbb ja inc enter jno fcoms call xchg loope,pt jbe fcmovne jae mov lret imulb stos xor daa jmp cli shrl mov scas push gs sbb and enter adc stos jle ss rorl test dec cmp pusha pop fs popa mov insb arpl test idivl xchg (bad) cmp pop shll push or and fcoml and jl xchg xor ss ror and dec int sbb ja sbb lods fcoms pop fcomps pop sti test stos xor leave imul cs fwait xor inc movsb dec push mov or xor add pop rcl or imul frstor jno in mov (bad) mov sbb jae int3 cmovb fildl jp lea (bad) js sbbl pop xchg or jge xchg or pop lea push ret stos (bad) mov push pop loope loop jbe out xchg iret out jnp stos rcl dec loopne addr16 pop jmp stos cmc aaa adc das ljmp daa fstps pop xor repnz or xor jmp rclb push (bad) sbb idiv ror scas mov jnp pop stos xchg sub and in fs and sti inc jnp or (bad) out fisubl in and pop repnz popa outsl add jbe push repz addr16 dec arpl stc push ret jle push stos mov shrl pop dec insl hlt stos loop stos mov daa stos pop jp sub add movsb cltd lret lret and mov addr16 sbb rcrl jnp imul lds lods xchg jb sub adc mov out fs mov nop cld push xchg roll mov scas imul xor xchg stos pop sub sahf (bad) lods push fwait jno fstl mov pop or cmp sbb push ficompl (bad) mov out out or repz mov jns (bad) fst lahf adc mulb in jp cmp jmp pop aad sub jae or jp xchg mov jg out dec les leave jmp dec test pop lods (bad) gs jp addr16 in test lds mov sarb pop xchg repz xor mov xchg sbb cwtl lret outsl pop mov inc shlb cmp add mov lret adc (bad) call xchg dec pop js pop push adc push cmp sub stc jg jno mov sbb ss adc aam mov sbb (bad) iret dec sub cmpl movsb jb adc rorl (bad) fistl dec movsb inc stc sti mov out jae mov jnp mov mov icebp movsb cmp inc and jae (bad) or push inc out pop notl mov push (bad) mov scas das pop xor rorb xchg sbb add repz js cmpsl call imul andb inc pusha popa push jnp adc pop lock repnz xchg push push cli sub lahf mov push pop aaa clc dec jle imul js xchg pop aas cmp out mov and pop sub and sub dec aas mov daa mov adc sbb lcall into imul cmpsb loop lea jb out outsl fwait std jne sbb xchg imul cmp outsl idivl addr16 dec mov out pop ja jmp sbb cmp ret cmp pop cli push xchg xor scas jne popa and mov stos arpl mov xchg jns mov in out push hlt (bad) outsb jne adc pop aad sbb fwait sub push pop lock scas and sub dec sbb cmc sub loopne adc push push cli push jg sarl and lahf push sub inc les outsl pop dec hlt jle push std cwtl or (bad) mov pop jo xchg imul pop push scas daa jge aaa std aas ja mov mov bound test inc sub add push dec cmp pop jnp arpl repz adc jmp fst lea ret movsl ffreep cli popf or cmpsl push sti lahf (bad) ja mov mov daa test inc or mov sbb mov inc loope jp dec push addr16 add jmp dec mov es pop (bad) mov jp (bad) std mov push js inc push dec call xchg dec daa adc out xchg shlb sbb dec push xchg sarl mov push test cmpsb sti fisubrl lret mov pushf fistpl stos lret jne ljmp xchg jno sub dec arpl cmpsl addr16 jnp adc movsb pop jbe add shrb (bad) scas pop add pop xchg call lods adc jns fbstp inc in jp cmp stos add push dec mov sub lods mov mov sub hlt arpl hlt lea sarl iret mov loopne mov outsl repz test sub sbb jae stos mov jnp xlat movsb and xchg sarl push mov pop adc je movsb xchg add sti push aaa shr shlb (bad) cmpsb jecxz js mov in imul outsl pop (bad) imul call (bad) cmp ss popa dec mov cmp ljmp mov sbb adc mov imulb cltd (bad) stos pop cmp push adc (bad) pop testl jne mov dec and ss sub jnp or jmp ss bound rcl and cmc (bad) stos adc test (bad) aam xor xor lret in ss mov xchg dec cs mov pop push movsl popf mov or scas xchg test inc push and bound mov out lret loope mov fcmovne ljmp (bad) mov sub fs movsb xor dec mov cmp inc cmp repnz mov fbld sbb jl sarl stos jbe add inc idivb jne mov xchg jmp ret or lret sub push jb mov pop fisubrl push pop and andl jecxz lods mov and xchg iret add push push and ljmp sub or mov data16 int dec fwait dec push imul xor test (bad) in roll xor jmp xor and or cli pushf mov pusha push fwait pop fcmovbe (bad) das rclb ret xor cmp je stos pusha lret push adc ljmp adc add xor mov dec inc aad push int lds (bad) mov sbbl jmp lcall and push mov shll ret cmpsl mov lcall jbe ret or in or jnp or mov pop sti jle (bad) jnp lcall cltd cli mov xchg mov xorl je cmp pop in or push retw jbe lcall dec sub loop pop jp cwtl mov push imul mov aas mov mov mov push xchg fstps and stc cmp cltd jnp fidivr ficoml pop int jp mov loope or add rcrl and (bad) fsubrs cmp fildll sahf jp loop add push lcall push and lds std cli fldl jmp pop jp or inc loope add pop icebp push fimul jnp push and mov fbstp cmpl popf push push (bad) jae sub jo dec movsb push pop mov pop pop jp add xor xchg sub inc and cltd add sub push addr16 push xchg and fistp xchg pop xchg cltd xchg cli jp ja addr16 cmp inc outsb and in les adc mov ja mov dec stos (bad) (bad) data16 lea jg mov push jle (bad) in mov inc clc sti mov inc stos xor arpl loope inc fwait popf and ja lret movsb fwait lcall and pop mov jae add sub pop int3 push mov pushf xor movsb jecxz mov and mov or jae pop pop sbb jne gs mov jne dec push mov clc mov sbb ljmp scas or cwtl rcll dec mov cwtl dec loope mov pop add (bad) jbe jno xchg sub scas push sbb sbb jne sarl cli into stos adc jmp dec repnz out xlat fwait gs mov lea sbb loop loopne jle ret pop aas inc imul hlt arpl adc faddp sti (bad) je ljmp stc xchg jbe (bad) testb stos (bad) repnz fildll sub sbb xchg cmpsl jp mov ror jp addr16 dec sbb inc add icebp dec popf cmp movsb roll xchg (bad) xor cmp dec mov jp jmp daa dec cld out loop mov mov imul pop sub xchg ss pop jbe xor bound sbb imul lock imul outsl jne stos cltd loopne jb hlt sbb adc fdiv mov jns pop cmpsb cmp and fisubr popa fildl mov fwait mov sbb int and andl roll rcrl mov es out inc (bad) shll inc daa xchg pushf sub in fidivrl imul into jne repnz push jp push sbb jp repnz test xor fsubl add std xlat popf cmpsb dec mov (bad) in or mov test imul nop pop sbb andb sub dec or popa xor imul dec mov (bad) sbb add xor ja lcall xchg mov jne sti stc inc mov dec pop sti or inc dec ljmp push push icebp (bad) dec jno jg xchg insb aam ficompl ds outsl aaa jp mov (bad) lods xchg mov xor jb mov jp inc testl sbb mov leave outsl dec mov outsl sahf adc jp jmp call jne shr (bad) mov dec xchg sub jmp in inc jno lea dec (bad) cli psubb pop cmp imul cmp repz mov cmp shl pop mov lahf clc ss leave jp pmulhw nop bound jp sub push xor or into jp push push (bad) and push in xchg push jg ja stc mov fsubl inc test xor mov jno mov loope or movsl jae sbb lcall inc jno imul es imul shll pop jp pushf add sub sub jp insb addr16 rolb sub add adc call loop xchg mov jp movsb movsl aaa roll add xor cs mov jp jmp sub xchg pop int3 add push add inc fs inc cmpsl jp add pop lock cwtl aam cmp push in fstl jnp leave test jp xchg rorl pop fistp cmp fidivrl xor adc les inc jnp,pt es idivl in pop xlat outsl bound mov call adc jp push fst test (bad) cmp mov cld xor xchg lea stos dec sbb cld lahf sbb insb cmp (bad) in (bad) mov pop push xchg test test movsb out mov arpl jle mov aam ja sub jmp addl cmp cli or inc arpl or mov std cmpsb insl movsb sub jb adc adc ja xchg pop cli pop xchg xchg fldenv sarl dec or or mov sub fistl jae mov mov sbb mov aad fidivl push xchg and push mov dec jbe push divl insb nop imul (bad) sbb jecxz pop stos push xchg jge sbb int sbb adc and mov lahf push add (bad) jp xlat bound jp aad addr16 jbe lcall ret cmp jp mov stos test mov dec jp push xor cld jp sub lock cli mov mov sbb test aaa or (bad) mov hlt dec imul push gs xchg jmp pop test daa stc cmp loop jno and das xor cmpsb imul push or mov push add or pusha mov push daa mov cwtl jecxz jo mov cmp adc xchg cli dec cmp popa divl lock fsubr push jp jle test push cmpsl jp leave sub xorl aad lret jp shrl ficoml into or stos or repnz push xor test cmp mov pop jmp pop mov adc or pop imul cld mov dec mov dec sar jp jge xor jno rol (bad) xor jp inc mov (bad) jp xchg lds and or adc xor push pusha sbb or shr and jp push scas dec dec or adc out shll in fbstp stos roll mov js jp int dec mov test jmp outsl dec lds movsl inc cmp ja jne out add jbe (bad) add xchg pop cmpsl cmpl fstps push mov cli gs adc mov sbb jp xor cmp bound jp (bad) push arpl stos fs imul lret push mov dec dec (bad) es jecxz jp or dec sbb push jno cmc xlat insl insb pop cltd cmp jp cmovns in inc sub ljmp (bad) jmp out sarl int3 inc stos fdivr cmc popa mov cltd mov jp imul mov insb and jne dec mov and mov mov or test sub ds jbe hlt cmp mov inc mov push je cmp notl xor push inc cmp or leave (bad) lods iret stc fisubl sbb add jp xchg inc cmp pop push fld jb lea ret mov lahf inc outsb cmp ja popfw or iret lds jae stos mov xchg pop pop add or push push js iret fstpl arpl xor int jp mov add and xor xchg es fcomps push stc mov jecxz jnp dec imul mov push imul push jne inc mov cli aas xchg jp add jl test jp cmp adc push jmp cmp dec test fdivrs mov jp scas xchg and add pop pop mov mov jo jns jmp sahf push jp or jp cmovno mov xor jp jmp subl cwtl dec sti cmp jp inc fcoml push mov aas mov xor jno mov das repnz sub push push outsl and cltd imul and test je pop cltd imul (bad) popa scas add jnp and dec or repnz jp lret adc jns jp fldt add pop jp push cmc cld in inc popf jp (bad) adc ss pop mov cmp mov stos xor sub dec movsb jp lret outsl (bad) mov inc out iret jnp push xor (bad) cli fwait pop lods cmp cli push enter std jp andb fcomps (bad) gs pushf dec in add xor or arpl mov push popa jp cs aas xchg jo mov ret enter pop fstpl clc cli jne xchg and arpl imul int sbb xlat out jnp cmp clc sarb cmpsb shrl jp push inc xchg dec cmc jp dec (bad) push daa (bad) (bad) insl pop les jnp inc cs push jae jp fstps mov xor loopne rolb jmp push cmp pusha and pushf push fsub loope outsl pop xchg pop mov mov into cmp xchg enter jp lahf pop cmp jp sahf inc lock ljmp inc jo push mov shlb sub cmc je inc cli mov lock sbb mov lret mov pshufw cmp insb mov pop jp stos leavew or mov dec cmp dec aaa pushf pusha xchg movq loope mov jnp jo lock mov ficomp out mov mov and aas sbb jno mov jne or (bad) push or imul jp scas std ljmp (bad) jp lret iret jle cltd sub dec adc push jnp push xchg inc sub fistpll push pop aas loop mov inc adc dec repz ja jle jne into ljmp fbld fnop adc sub sbb (bad) jnp xor sbb mov int3 dec dec lods jb xor mov jp mov jne mov xchg inc fist and pop sbb jp stos imul jp ss sbb mov stc scas cmpsl jecxz jne popf mov xor fwait sub push jp lcall xchg sbb jl sti mov xor daa push lods dec (bad) and popa cli inc push lcall pop cmp bnd jnp inc xor adcb lcall sti daa add pop inc push mov mov std je xor dec adc das push mov dec cli add jp cmp lea mov push mov dec mov push insl jg xchg mov push popf js dec cmp inc jae divl andl or sub fidivl jb mov cli push mov cmpsb xchg pop xchg sub sub mov mov mov pop mov jp cmp movsl jno int popf pop into sbb fisubrl adc jmp scas clc and inc xchg jp jmp jg xchg out mov mov push fdiv jp adc dec and aaa mov add mov cltd cmp cli xchg sbb insl imul popf jp push xchg in call test jo mov int and in nop loopne sbbl jmp mov outsl pop fistp in test jno mov cli push bound jp and jae cld leave push ret lret rcll ljmp imul in pop dec ja dec je daa sub jne adc in mov aam push ja xchg mov jp and or in dec xor mov mov adc mov and mov sarl xor insl push es jp hlt dec fs xchg push fidivl lret sub sbb pushf push dec das test mov jmp push xor pop push jo jbe cmp dec movsb cmp dec scas xchg fldt (bad) inc pop in or mov nop push into sbb stos and xchg pop sbb scas insb fs inc mov scas daa pop int fidivl inc scas lret ljmp jg dec dec sbbb inc pop cld jp and push loopne or jl out aad hlt lcall clc vpshad cltd std sbb jl pop stos pop xchg mov sub jp adc ror fldl test or xchg sahf je push jecxz fwait movsl cmp cld mov sbb dec jp xchg adc inc mov (bad) cmpsb push and sbb pop movsl vpshuflw mov daa xor cmp (bad) sub jmp mov xor mov enter mov xchg (bad) cmp push xor (bad) imul pop jbe movsb test mov addr16 (bad) insl frstor xor repz mov fs stos push mov xchg pop dec popa sub cld stos fistp dec (bad) and mov jbe jbe xor lret xlat hlt push dec out pop stos mov mov and ljmp mov lcall mov scas mov outsl add arpl dec negb cmp pop ja nop jne dec cmp pop push mov in repz xorb mov imul jecxz mov push mov mov adc stos in and clc push (bad) int add fs sub xchg rcr insl and adc sahf sub mov mov xor pop dec cmp hlt mov or push cmc pop (bad) jb repz dec repz sti in fimul jp imul xor mov add out sbb cmpsl pop pusha fs jp xor mull lahf std xor sti mov cmp mov jb fistp cmp sub or push clc jo push pop dec mov pop jle jp pop out push cld jp jno (bad) cmpsb push fwait arpl stos movsb sbb clc pop bound inc leave lret loop cmp stos mov push jle ss pop test xlat (bad) (bad) jo stos dec in imulb jmp scas jae or push sahf lods insb sahf notl movsb je sti cmp test mov popa stos inc sahf jae popa inc mov arpl out inc data16 ja clc or leave fist pop bound push ss lods cmc ss pop movsl sar xor inc clc gs (bad) arpl shrl sub cmp xor hlt loopne insl pop dec scas mov imul (bad) push sub mov cmp je mov push inc xchg into dec sbb add mov out or inc pop stc stos jnp ss loop stos push inc jno test mov cmpsb fldcw mov jnp push repnz adc xchg outsl stos mov (bad) repnz stc sbb in push mov test push sub orl or cmp fistpl inc in pusha cmp lock and iret sti int3 xor mov movsb xchg push mov insl mov iret cmp cli mov inc push in cmp or es jnp dec sti stc dec addr16 lret mov mov movsl sti push sub (bad) cld mov loop or mov mov insl xchg xchg outsl stos and push mov movsb movsl loopne cmp xor ss pop sti loopne int3 pusha into push jno stos es jp loope test arpl ja or and jnp sbb mov fisub (bad) fisubrl jp push jl pop xchg pusha cmp fdivrl (bad) lea adc add fldenv xlat ds enter das (bad) das arpl test aaa inc xlat dec je jno mov arpl (bad) dec hlt add insl enter fadds xchg push enter sub adc aas or pop dec in sbb stos xor stos shl or rolb xchg outsl clc stos cmp insl (bad) mov or cld jb add dec ret jno inc fdivp jmp inc out test add sti mov cmp call and movsb xchg dec sub push sbb into cs pop mov sti dec stos jb cs cmp xchg sbb mov mov xor fbld out sbb aam mov push mov push ljmp inc lret icebp and stos lahf shl fs xchg pop push dec stos iret and or (bad) cmp sub hlt in and adc imul pushf adc cmp inc cmp shll push push pop sbb adc pop push (bad) jae insl dec inc lea push push mov mov xor leave dec mov inc or decb mov out rcl popa jnp bound mov sbb sbb pop dec sub push cmp je je inc into sti cld popa movsl or pop daa and loope adc mov leave scas je xchg jnp jecxz inc or and push ljmp mov shlb hlt inc cltd loopne push pop mov out mov leave jne jmp fisubl gs sbb xor shrl sub adc push (bad) sbb lcall icebp sub push repz cltd arpl or sub aaa shll xchg and ret pop dec pop mov or xor xchg mov push bound mov fbld stos add imul mov pop push out cmp arpl xor out fs mov sbb (bad) or xor and lcall jnp test add (bad) js enter je jmp in mov cli ret sahf in inc lods (bad) push mov mov mov and mov push bound int xor sbb iret mov fidivl push jp push xor sub test fwait mov movsl repnz jne dec (bad) mov sbb leave sub xor cs push add loopne xchg push pop xchg jp mov test inc push stos into jle push clc stc insb dec jnp dec jno (bad) rcrl pop jmp sbb movsb dec cmp movsb sbb loope fisttpl mov lret or adc mov push jg mov jnp mov out dec movsb sbb subl aad sub dec (bad) pop jne stos inc sub sbb mov movsb int3 cmp sbb pop pop xor mov inc push pop xchg cmp bound dec imul inc daa pop sub inc rclb sti pop inc out pusha push int mov adc mov pop sarb jmp dec repz fbstp jp pop add jmp loope outsl mov test cs movsb jae mov mov push pusha daa adc jne lret xchg pusha fildl frstor lock fs aad jecxz cs cmp sbb fdivs ds or sti daa sbb mov jnp movsb test add js fidiv mov leave adc push lret mov mov ja les mov xchg jnp cmp lahf popa imul jb jae lret repnz mov pop popa (bad) jbe xor push cmpsb mov jmp sub aaa data16 sti daa stos or pop cmc in push xlat dec sti push shl push movsb sub adc fcmovnu xchg cmpsb mov (bad) aam mov cwtl lret loop jp inc outsl mov sbb movsb out jo dec jp pop insb hlt aas sbb pop imulb inc or cmp push jp invd jle xchg dec js scas lods and out cmpsb jp mov xchg or ret add and xor jmp mov cmpsl clc mov pop stc jne jb das sbb (bad) sbb jp aam mov aaa nop mov cmc sub sbb jge dec cld mov xor (bad) popf hlt jae test sarl sbb popa fstl xor jp repnz out fs sbb arpl xchg lds in (bad) cmc cmpsb sub lea mov aam rclb insl and push (bad) out xchg dec jno popa arpl sub mov mov lock aam pop or jmp sarl lea cmpsl or fcmovnbe push ret cli and hlt cmpsb pop cld (bad) xlat outsl (bad) xchg insl adc in adc or ja pusha imul arpl jl mov popa lahf mov pop jg lcall mov pop pop hlt jnp popa ljmp jbe leave (bad) into pop mov pop pop iret (bad) adc sbb lret std and arpl aas mov sub push jmp mov jecxz in xchg jae sti lret fisubl sbb js pop imul and jno cmc ucomiss push push pop jae pop adc fildl stos (bad) fbld mov xor ds imul jle icebp lcall das out nop jnp out data16 jne mov stos mov loopne es lds xchg int push (bad) xchg or fwait lock or mov adc movsb fldpi mov popa mov fistl jmp jo clc fcompl stos sbb inc mov mov dec repz inc xor cwtl pusha mov sbb and (bad) push (bad) enter dec in cli or cmpsb or insb stos icebp cmp int and negb or fistp xchg add movsb or in push out inc lods dec sub pop loopne rclb leave mov mov pop dec das inc cmp inc pusha push test jno (bad) in jns xchg loope jmp stos out leave push loopne fistp sbb cmp fucomip movsb (bad) icebp ror es nop xchg js dec into (bad) cmp mov bound js cwtl iret lods push sbb in xlat into mov test rcrb mov push lret mov (bad) ja dec daa rclb mov push out mov cmp sub sub jno,pt stos cmpsl orb aam jg push pop scas pop (bad) pop sub icebp mov and subl mov cmp mov cli daa fs jns dec or outsb mov xchg idivb inc lcall outsl sub inc cli add inc lods pop jg stos scas xchg lret into fisttp bndldx pusha mov fs lea int nop pop pop sub jmp push adc mov xchg push adc mov je sbbl test mov xlat std sbb idivl (bad) jmp add movsb adc cwtl sti lcall sub sahf sti and dec mov sub inc aad cli mov push xor loop sub clc cmp pop cwtl add or aaa test and (bad) jl add jp inc sarb insb push mov push pop xlat adc lret jp in jl sti icebp add adc cld xor imull lcall sti add adc xchg (bad) (bad) jp push and jne dec jp and mov mov jns scas mov pushf leave or icebp jge dec inc add jno (bad) fistl push add repz jp dec sbb pop pop mov mov in fwait inc insl out pop cmp in inc cmc jg call sub jp dec outsl dec bound outsb jp pop sbb add pop imul jo mov stc cmp cmp aaa or push cmpsb ret inc and (bad) jb int3 cltd call imul jp inc xor jb ss add xor outsl adc dec daa imul mov fnstenv mov pusha jnp nop jg and into popa imul idivb sbb (bad) ja jns jbe inc mov lds je push and xor das out insl hlt jmp int3 push sahf mov lods dec cmp imulb popa sti aaa mov repz dec popa arpl repnz dec xchg lret add mov cmp daa pop cmp mov lods inc inc rol pop and insb sub ja,pn xchg movsb (bad) fdivs dec scas insb push cmc jmp stos out jo push mov in cmc fcmovbe adcl jo je push add mov sbb mov dec dec sar fiadd sbb jae dec mov lret push push mov push jp stos iret mov fsubrl imul (bad) fdivs iret or inc xlat in xchg xchg mov gs int3 cmp pop or mov enter nop and mov dec or insb jae jp sbb xchg gs movl pusha and push adc cmp roll jecxz jno loope cmp gs mov pop (bad) jge cli inc or (bad) fldenv pushf push inc in ret push cmp add stos movsb ret sahf push sub xchg adc xor loopne imulb pop jb ja push or mov fdivrp pop jae lahf stos sti xlat push gs xchg add stos inc loope movsb or jb sbb push mov dec imul inc and add imul outsb sbb movsb pop int int out jmp xchg dec stos xor mov pop jnp dec sub fs cs xchg iret jbe push (bad) inc xchg sbb dec addr16 movsl mov test insl rcrl hlt sbb sbb sbb add stos aas push sbb push jle adc test addr16 mov scas cmp jo xchg mov cmp pop mov fs xchg inc inc xlat push push dec or push imul mov pop insb jecxz imul ficompl mov adc movsb inc jno (bad) frstor nop shll cli jmp movsb out (bad) dec sti aad das decb sbb cmpsl xchg lods aad mov jb cmp je xchg ja stos adc or or pop std cmpsb mov inc insl sub orl mov xor and fistpl lahf cmp lock rcrb pop mov sti mov sub and cmp dec insl cmp icebp inc mov push movsl repz cmp out mov scas push les cmpsb pop dec cmp stos insl lret rclb (bad) adcb mov push mov movsb mov jae subb call stos mov jl lea jnp add loope push push aam push hlt js mov fsubrl pop ss movsb cmp jecxz (bad) outsl clc sahf mov mov fstpt cld lods pop adc mov or sti jmp lret dec cld sti dec cmp imul ljmp popa scas hlt cwtl imul test adc pop repz loopne pop int cmp xor add pop stos mov scas stc insl roll (bad) xor pop loop int3 (bad) ss je pop and arpl shll pushf mov stos or xchg push inc test xor cmpsb sti push stos mov jne cmp mov in cmpsb ljmp fistl int enter clc les push out jge movsl lahf jae mov push pop mov cmp in jle out jge fidiv ss out outsl mov jl pop xlat jb add lds cmpl sub mov jbe notb mov mov sub jo in mov cmp ja pop cld xchg jne je pop mov inc push push fsub fisubrl mov and mov ja nop push sbb repz rcll bound adc lahf xchg add push imul sbb pop dec jne fwait stos cmp clc pop mov out mov sub insb jge inc stos shrl frstor stc ret mov repnz sbb jb movsl das pusha jne mov cmc sub push push lea test mov lret sarl lahf sub pop mov mov cmpsb andl pop shll aaa inc push jae cmp pop mov mov rolb or sbb pop hlt sub adc outsl repnz or pushf cmp test loopne push jo or nop fisttp and jno mov fistpl cli sti cmp push pushl ljmp addl jnp out (bad) xchg push ret inc (bad) ja jo scas jmp and mov sbb sti movsb mov xor xor cmp add sub jae mov stos xchg jne aaa imul ret adc lods es sub movl xchg dec arpl push and mov mov fldt pop fsts (bad) jecxz inc cmc pop (bad) mov stos adc xor sub sbb ret xchg inc jae stos jmp mov push clc push pop xchg mov repz outsb (bad) les clc mov in pop fildl movsb xlat mov das or fiadd daa mov aad xchg cmp int hlt imul push cs (bad) or sbb or gs scas jnp sbb xchg icebp pop movsb inc dec dec fldcw es stos push pushf pop insb mov inc outsl cmp movsb sbb inc scas in (bad) outsl arpl dec addl xor xchg add outsl jnp sbb ret rcll arpl and pop enter dec fsubrl out repz xchg ss pop pop les xor jno push pop out and push test xorl mov daa or mov lods aas xchg in (bad) loopne lock cmpsl lcall push hlt adc loope movsl sti pushl and or bnd cmp mov mov test popa pop push iret lods pop inc fadds mov inc push outsb ja clc push dec mov jns mov cmp (bad) mov out mov lods push ja or rorl js and adc lods cmp xchg or out hlt movsb out sub mov inc pop pop pop lret adc pop ja xor sub mov cmovb out mov mov stos sub push mov cmp jae scas jecxz xor cld enter mov jmp (bad) scas xchg pop and jne dec sub sahf inc push movsb mov lret jl cmp or repnz sti xchg (bad) or push jmp push or sub push push dec stos (bad) xor add (bad) xor popl nop push inc (bad) jnp pusha inc jl in arpl inc pop inc jnp inc fildl jne jmp out mov cmp cmp stos in sub dec add aas icebp pop and js pop pop movsb add mov inc and mov jae cwtl add je movsb jle mov jmp (bad) fist cmp jns adc je test jmp jge add mov jnp movsb nop ret cltd (bad) fildll mov jmp pop jp xchg scas je decb and jb idiv jbe mov push imul stos outsl xor push sub dec jnp sahf or sub jecxz insl repz enter mov push mov dec mov mov jmp clc and dec aas mov mov orl mov repnz out fs outsb sti sub sti pop pop pop sbb lods add clc push fstp or pushf in sbb mov (bad) stos sub jnp sbb xchg int3 mov push cs sbb (bad) jnp fs inc pop sarl mov cmp xor dec pop push ja xor adc sub stos mov inc jb lods sbb ds fsub inc clc repz mov or inc mov and outsl push add add mov (bad) sub (bad) mov push repz nop int jl lahf sti dec sub push stos xchg sub lods push inc cli lods popa movsl push mov cmp rcll add and cwtl push xor jne dec pop aam mov mov (bad) mov js (bad) jno mov addr16 add popa dec ficom idivb jne adc popa movsb iret push or inc sti idivl sub push stos mov xor popf (bad) push out mov cmc sub push mov stc xor xchg cld push test movsb movsb sbb (bad) push xor repz xor (bad) add push roll pop pop ret sub cwtl cmc pusha fiadd jae fbld or js,pt mov cmp adc jl jmp fstpl movsb add in ljmp mov jno pusha or cld imul sbb mov pusha lret lahf push (bad) xor mov loop push mov test jmp clc out (bad) push imull push pushf int3 je testl jno imul movsl lock stos out into add or or loop and jae std (bad) stos fisubl in inc ror cwtl dec cmp push mov mov sub or clc cwtl int3 jecxz jp notb jo js loope pop adc jp mov repnz dec xchg daa jo test ss inc mov sub mov xor inc add adc leave sub decl sbb jp sub addb lret jp pop aam pusha in mov jmp popf pop jge aaa cmp insl les sbb sti ds lock sbb imul push jp mov pop stos sbb fstpt jno shl push jp push leave sbb daa sarl lcall lods rorb fcoml pop fidiv (bad) cmp jmp daa jno mov xor pop dec movsb mov jns sub pop mov adc shrl les ljmp lret xchg (bad) fdivr mov fistpl mov leave jmp out and mov pop jnp push nop test xor mov jb xchg shll xor fwait data16 jg pop lea out repnz das iret in and arpl dec lock mov jno and xchg insb clc jnp lret repz add mov jle jmp push test enter lea loope call pusha and mov stos mov mov out jne mov pop sub scas sub subb sti push fs add inc push scas (bad) xor add jnp push lret push add ss stos sahf subl mov rcrl sub xchg testb push mov mov arpl cmp mov add outsl push aas cli data16 dec add ret fwait jnp stos mov pop popf ret pop pop push xor test popa dec testb cmpsb loopne push ss jo mov mov std fucomip add dec es shll mov nop dec xor inc aas fcmovnu cmp or mov jb ss mov movsb ret out jae push int inc cwtl or int3 hlt ret pop lds ja push mov fildll (bad) out mov iret mov push scas pushl (bad) (bad) aad jg cmp ss push jnp lcall jl (bad) icebp out fs xchg jno outsl mov cld test out xorl (bad) stos push jmp fnop (bad) xlat in cmp fs pop mov adc cmp jmp xlat push push out sbb into jnp sti mov out int3 mov sahf shll bound or jp cmp mov ljmp mov fdivr out lret sti inc mov jge (bad) adc and cmp fldl dec push pop jecxz lahf jp mov xchg jp sbb mov cmpsb sbb sub cmp jp pop outsb inc push xor loopne push jp push and outsb js xorb (bad) xor cmpb cmp or adc pushf and cld jbe jno cmpsl mov mov push or mov or xor fimul jb pop and insb nop stc jnp icebp ds in and stc cli add lods xor push je xchg nop xor fwait jnp in call jp and inc jne (bad) xchg mov sub rcr int or test ss jp insl inc daa mov or adc (bad) xor jmp inc dec sub mov mov fisubr loope and jmp jp jb iret in push jnp jmp icebp xchg jecxz fdivrp xor xchg rclb sbb cs fwait jp stc adc popa sub es mov scas imul mov rcrb jp data16 (bad) jp ljmp jp add mov ficomp shrb pop ljmp or jp test xor push push mov stc fstpt (bad) rcl es or pushf pop insl dec (bad) pop lahf inc test arpl sub push jb jle mov (bad) dec ret out or ja (bad) aas cmp jbe adc sub push fstpl push subb loop sbb fisubr cmp mov dec sub mov cltd jnp xlat lods mov mov jnp pushf popf push jmp scas js gs sub mov jg cwtl rcll lds push das je jp cmp adc jp fdivrl push adc sub fucomp aas cmp loop mov jne in packssdw jle mov das jge dec jp por int xchg jnp (bad) and ficomp push jae xchg loop xchg jp xor xchg jmp lea out lret cltd cli inc bound mov adc dec inc repz cltd sbb xor scas stos adc aam out mov add lods leave add add dec and jnp xchg daa int push movsb cmp stos pop xchg xchg xchg jp std push fdivrl mov stos test sbb addl and (bad) fcomps jp popa inc cmp sub jp jge pop into jmp (bad) jp dec and jne,pt xchg jge rclb jo fstps pop sarb arpl sub jp mov jae jp lahf jns dec sub fdivrp sub arpl inc dec jnp pop mov jle imul aam sbb cmpsl and mov mov dec pop movsl cmp (bad) mov call ret int3 mov mov xchg jp inc shll xchg repnz idivl adc cmp (bad) dec or sbb (bad) mov jae test pop lcall push xchg pop xchg (bad) out mov es push xlat dec jne jge mov sarl arpl push stos or fiadd iret stos sbb out cwtl jnp inc insb mov aas jecxz cmp insl ret outsl idivb mov (bad) lret cmpl xorb scas add icebp mov xchg (bad) pop jne adc pushf push xor add mov pusha inc jle fldt jp insl (bad) or or jmp (bad) jp cmp add insb aas fmuls test test shl pusha jp,pt mov pop xorl pop fwait adc aaa sbb pop add inc sbb push push push inc pop mov in cli gs or xchg lds mov loop jp mov cmp ret adc insl repnz pop lds andps push sbb jnp insb es sub fmull push loop sti and add ret xchg and jp xor arpl push lods insl icebp adc cmp ja jp push fsub cs xchg add push jnp insb (bad) lods push fstl hlt jg rorl mov inc pop lret dec xor rorb divb sbb mov jp mov push lahf pop xchg lret adc sahf cli pop (bad) xor xor add ja dec das sub mov scas mov aaa (bad) (bad) jne je push mov in add pop mov sbb loop loope cli scas popf fistpl insb sti jg xor mov xor dec lret shrb rolb fisttp push ja and lock or or push test sub divb movsb cs inc lahf xchg cwtl in jnp loop or aaa out jne and adc hlt mov xlat fdivrl dec sbb movsb jp push mov out leave iret and and push jp (bad) jno xchg push insl adc cmp lock lret adc imul lods inc inc imul clc xor mov ja inc call dec and (bad) and jmp scas cmc jle daa xchg mov nop repnz inc and jp addl bswap insl and push fnop jp cmp fs lds sbb mov jp in into jmp mov inc aam xor ficoml or sbb je mov jge sub int nop push loop aam xchg add cmp ja sub out fcmovb sub mov test insb xchg sbb dec pop loopne addr16 mov adc push push sub test call sbbb cwtl pop jle sar dec sahf mov xchg repz ja (bad) pop fist aam pop sub ja sarl add shrb mov lea mov movsl xchg dec outsb outsl jp sub cli inc jmp lods push push dec jge pushf ljmp jp sbb aam pop cmp jno fdivl mov hlt adc jbe jne dec std jns jg js cld xchg push sbb sbb sub in cs in mov imul lcall mov adc push xchg orl adc mov in jp stos les aas sbb mov sub movsl mov cmp clc call andl cmp xor stos daa push mov or push cmp out stos pop sub inc mov lcall push cmp gs mov xchg js sbb push jne sahf (bad) pop outsb mov out outsb jl lea push in jne ret push ljmp xchg xchg add std dec (bad) (bad) mov mov stos xor mov push add pop pusha cwtl mov ja ja xor jl dec cli mov jp (bad) pushf push jnp repz movb movsb xchg roll mov and push loope je mov push lret sbb gs jmp mov mov jp mov push and xor or inc lcall and mov arpl jns pop mov dec shrl gs mov sbb sahf adc xlat sbb cmp push push cwtl aad mov stos sbb pop pushf lds inc out jae jnp jb xorl test push sti imul fcmovu out inc lock mov push sub mov ss repnz push (bad) jnp mov jl iret and cli cmp jp push mov and xchg inc jno dec and cli lock add cmc dec sub fcoml cmp push cli and or cmp xchg lds mov and fstpt mov idivl jle (bad) in mov ficompl leave jnp mov pop jp mov cmpsl loopne jno inc push fwait mov insl inc lds dec adc (bad) dec jp inc scas imul mov test dec les add jge jle mov or pusha repz gs aas jp popa incl mov mov mov (bad) in mov jp inc cltd ja or jp sbb sub das test jle daa add aaa sbb sub jp dec fistpl push int3 bnd inc das lds pop pop jp jge dec in push idiv push mov pop jp or xchg or je cmp sbb imul sbb inc push cli scas jns jp mov shlb fwait mov push stos pop mov dec enter out jnp cld pop pop jp test fcoms fcmove pop rorl jp sub cmpsb icebp jno jae cmp and and jp pop es insl das mov outsb shl ret cmp cmp (bad) push xor int3 out mov lret sub mov adc scas add (bad) mov les dec cmpsb stc mov xchg jp inc sbb js (bad) jp dec pop sbb or cmpsl and insb inc gs xchg idivl popa push inc mov jge lock xor pop mov jge pop arpl cmpb (bad) insb mov lea hlt mov cmc jne mov (bad) pushfw sti push icebp or jp add cltd push ss jp rcl int3 jb (bad) jp rclb dec iret testl mov or aam pop fcoms sub add adc lods std inc jo jae push mov inc arpl mul push jne jo mov mov pop or out dec insl es lods jp or jp (bad) sub ljmp xor jns jns xchg das jmp popf adc divl shrb das push dec xchg lahf jns and push cmc loope movsl cmc sahf scas mov push sub aas fnop jg mov mov jno jbe mov jle pop add jnp sbb adc push add test push xchg sbb fwait iret cmp jp xlat pop (bad) (bad) push imul push mov or push mov jp xchg pop push lock mov jp fwait pop (bad) sub jp repnz push xchg adc cmpsb mov fcom cmpsb bound jo add or popf xchg cmp xchg jmp mov mov xchg int3 andl aam cmp cmc jle test es out imul mov jp lcall jmp mov cmp and cmp or data16 mov out push leave sub call jmp xchg ficom add adc stos frstor bound pop inc cmp test fwait mov test pop cmpsl jns add popa cmp lret repz sub stc jnp outsl lea gs jmp aaa jp pop imul cli jne aad mov mov adc sbb jno dec lods xchg cmpsb insl mov aad xor or jno xchg fstpl jo push out dec repz insl icebp push out (bad) fnsave push repnz push ja dec sub mov insl dec mov fldt insl inc ja push inc out inc jnp mov shll je sbb mov jne flds es dec scas dec jno or xor cmpsl lcall sub push sub xchg cmp fidivrl xchg xchg (bad) out pushf jp in clc jns jg sbb leave push cmpsl and add mov mov test xor pop and mov sub and in jae mov dec test ljmp sbb pop inc mov mov lahf fwait jp mov pop mov lock pop movsb xor imul jp stos mov gs fistl xchg pop or gs pop sahf js dec jg mov inc (bad) jle push ret mov in mov and xchg push pop insb les mov pop jne (bad) lcall lret jp mov pop jb test xchg fs in dec testl pop xor pop add ljmp jne ret cli ja repz jp out dec and xchg pop ficomp dec dec das sub jp into ret mov jp stos leave out ljmp mov jle sbb cmpsb jg mov xchg lret add jp lea aad push addr16 mov movsl push popf pop sbb xchg push sub xchg out lret movsl mov arpl push sti xchg das ds jae mov cmpl andb int popa lock adc sub push push jne icebp shll jp das sub jp movsl jb push leave lcall mov lcall cmp aas insb mov popa lea jo cltd test outsb js mov dec mov mov fldenv test push jae push mov lahf test push in push push jecxz jne imul jbe ficoml jecxz out (bad) xorl xor push mov cmp imul fisttpl xchg push cmpsb ss inc lcall int mov xchg sbb cmp leave das inc dec cmpsl cmp repz cmpsb arpl insl std push pop bnd inc fwait sti mov mov (bad) in add jp or fs (bad) cmc loopne adc jl ror jno dec aad xor xor shl pop mov jne ficomp jge imul jnp inc mov dec inc and jp xor jp pop pop les cltd stos xchg ja ret mov imul xor stos shrl dec pop sub push and sbb jl ja push xorl cli mov shll dec lock and pop out pusha pop insb jae cwtl inc sarl sub insl add cmp jp int jmp jp pusha pop cltd jnp jo or lret mov jb and sub jnp cmpl sub push mov push jp lahf (bad) pop cs cmp mov loopne mov lret push jns sti sbb inc fsubrl fstps into and sbb jbe cmp (bad) fadds out popa or lods fs jp sarl lea jp,pt push call std repnz cmp and sub addb in repz pop jbe jp test jmp fstpt insb in sub push popf (bad) dec and sub inc jp add (bad) call aad jp or es sarl xor push jne dec loopne and lret (bad) sti scas jp insl inc sar dec scas sub into sub out js clc xchg jmp jp in sti dec add adc sub or imul jnp pop lahf sbb sbb mov xchg movsb or addl push out enter jp mov xchg jo dec jae,pn xchg add insb adc int3 cmp jae and cmp jp pop (bad) loope in (bad) pop inc jae lcall jp int3 rcl pop push and jae test rorb ret jae in jp je pop mov or pop mov or mov pop push fldcw jno adc cmp mov push mov cmp adc repnz scas shr aas jp xchg dec cmpsl adc or fdivrs sub test cmpsl push sbb mov loop cli jg call cmpsb int3 mov stc cmp jge mov in inc mov dec mov cmpl dec mov xchg ja adc int push mov fidiv mov sbb sub stc aad jp movsb lea test jp mov or sbb jge jae inc push pushf idiv fidiv add jp (bad) jno jne dec xchg dec cmp test pop dec aam dec addr16 dec cmp or adcl mov sbb in or push pop test dec or jmp call xor push xlat mov in dec xchg fdivp adcl hlt jnp jge out pop pop std cmc cmp xchg cmpsl int3 mov ja out dec pushf fnstenv lcall adc cld mov push popf jne dec sub jb mov scas pop add pop repz sbb fisubrl jg (bad) shld sub sahf and pop push xlat fisubrl lahf imul out inc cmp sti push mov (bad) mov and jecxz jae sub pop cmp mov stc out ja sbb xchg inc outsl jno mov push jge rcrb or ret mov pop sbb testb jp cmp sbb jp inc mov fwait inc jb dec imul popa inc push jbe ror sub cmpsb dec sub mov cmp daa insb in jae sub mov pusha pop jge jp dec jmp outsb aas (bad) (bad) loope sub mov jecxz je jl andb pusha add jp cmp sub xchg add aam call push jle dec xchg or push loope cmpsl les out jns push loopne into sub sub sub jp loope not cmp xor or sbb push cmp jp (bad) (bad) xor or nop add lea insl je subl enter arpl push mov imul add jl pop push mov mov cld mov xchg or xchg mov mov dec es imul in ds sub xorb jp lahf sbb fs jecxz,pn jo aaa mov xchg ja loope sarb mov pop mov xchg adc add ret xchg inc xchg iret jge outsl xchg (bad) mov fimull pop aad std adc sbb dec scas xchg add jne in xchg mov aaa lcall test gs das shr lock insl or sbb addr16 enter cmp repz jno jnp (bad) adc jp insl add xor test sub sbb popf inc idivb xchg cmp jecxz sbb xlat test mov dec sbb cmp push out aaa (bad) push jp (bad) in into pop xor cmc gs and mov les mov adc dec ret jp dec arpl int jns or mov lea data16 negb adc and sub lods mov jp cmpb in test xor (bad) lock push mov jp cmpsb adc mov bound push xchg lret sbb pop insl sbb push jp xor inc cmp (bad) icebp daa or lods mov pop fwait lret mov nop push loopne mov push lahf lcall in (bad) jne sti aad sub inc xlat fwait sub lcall push or mov fninit xor fs lock leave sub and lods jp les (bad) jecxz push sub jp push pop jle cli jp inc dec (bad) gs or inc push lret or jl lahf adc push jp (bad) repnz cli mov das jne pop mov or cld xchg or sti pop sahf fwait idivl mov jp mov xorl inc push jecxz mov pop lcall xor jl mov (bad) jp mov inc fwait jne pop int mov pop jp enter movsl dec out jge jp lods add cli aas jg push notb popa mov sbb out cwtl xchg push inc xor jmp int3 cmp (bad) sbb fcompl leave sti (bad) out cmpsl or loop jno pop mov aad stc xor out cmp xor pop add jne dec cmp or inc sbb in ret ja nop lcall in mov cli jge jp dec dec jl lret mov or fimull jne jo out les lcall mov cmp push in xorl imul je (bad) in pop arpl in fwait cmpsl jns sysret push les shl (bad) gs jecxz fnstsw aam cmc clc insl stc loopne push sub xchg daa inc jecxz cmp mov mov mov fcomps and push lock jne ja jg add mov jp je jns dec mov jp sbb repnz xchg fdivrl fwait sub jno ret popa adc stc cmp cli pop or pop jecxz and (bad) (bad) pop cmpsl lcall sub jmp out clc mov adcb fcmovnu jecxz sub jne inc sub in sbb ljmp cmp ljmp test pop lds sub negb loopne xchg xchg mov cli sub inc icebp push pop fisub lea xchg ja data16 mov xchg ret jp push dec mov jno jmp cwtl ja hlt jg decb mov or leave mov test (bad) push sti adc loop xchg jns insl and xchg sbb sbb mov jnp jne sub jecxz xor jp rorb test and jp sub in add ja in stos fidiv das mulb sbb jne popf das sub jbe dec repnz pop outsl lcall dec cmc add sbb sarl imul addr16 jne int3 in pop sub fs xchg jp adc xorl dec repz scas sti or out xchg stc dec stos pop push jno sub cltd mov (bad) cld and xor mov movl out rorl popl inc aad xchg lds jp cs adc xor adc aam lods and pop fldt add push mov xchg call xor jecxz cmp mov out mov add jns fistp ja or mov mov jo (bad) mov inc mov (bad) xor fnstcw mov pop adc fwait cmpsl (bad) imul lods ret sub mov mov xchg pushf jp inc and jne pop xor inc lock sbb sub adc sti mov pop jp jbe push (bad) xor popa (bad) mov popl lods jnp iret sahf or out icebp adcl lods (bad) cli test jp mov nop popa jp mov add cmpsl clc jp std jne pusha jno jp pop sahf add xchg inc sub cs fiaddl jge xchg js push jbe jp inc out dec push out pop add adc jo fdivrl outsl lret jp (bad) xchg insl mov add mov inc push sub sbb scas dec hlt jmp daa mov cmp loope sbb mov outsb adc cmp pop mov push mov in loop cli ja movsl push sub into lds (bad) sbb gs cmp jo daa add cwtl decb jp xor add jl aaa stos bnd pop lods cs add pop add inc sarb jle jp arpl aad ret (bad) mov fsub push inc outsb fiadd dec and adc push lahf jp push cmp mov aas fwait jne loope sbb ret inc pop xor sahf data16 insl (bad) lods fsubl jp pop cmp mov push fnsave mov mov mov mov ja inc in dec mov cmp fsubr or jp in pop (bad) in iret jno add lahf push pusha fildl inc pop mov insb sbb push jno cmp xchg mov xchg ret mov mov int3 arpl inc mov aam mov inc dec lock pusha inc cmp cmc cld movsb (bad) jbe in xlat adc mov sub inc outsl mov jne mov shl lea inc push enter cmp imul (bad) jnp sbb mov jp in inc cmp icebp arpl int3 adc push pop fmul push imul pushf popa aam (bad) js gs and jae sub pop repnz cmp bound mov or outsb dec xchg js push daa inc (bad) pop imul aad and jp or mov pop insb inc xchg pop aas cmpsb cli jo fldt les addr16 lret jecxz out leave add sti mov jno pop jge fiaddl or jmp cmp jns je add xor sub push jp and fcomp mov es ss fistl inc jp pop xchg add fidivl cmpsb pop mov push mov sub dec xchg mov fwait or (bad) enter aaa jge daa adc jae insb dec jno mov lret gs stos mov movsl seta leave xor pop aad cmpsb mov test movsb inc addr16 sub negb mov insl mov popf pop push mov mov icebp sbb or or jge dec cmc jae rorb jne enter in add jp ss daa ja xor rcr test mov (bad) cmp xchg ja fsin mov mov ror lcall jne out pop cmp movaps std xchg fsubl popa jle fs jnp sub dec fwait or jne cmp out repnz cli or jno sbb test enter jnp fstl mov inc lret lods cli jp outsb les aas mov and cmp and cmp cs adc jge push inc mov jne jp in iret add xchg push xchg rorl jp movsb test outsl dec cmp pop hlt cwtl sbb mov loop shl inc aas inc lods in mov popa lret mov bound xor mov add push jg inc popf pop rcrb adc (bad) addr16 lock mov push jno sub les imul jnp (bad) xor call in pop xchg mov std cmp aam mov jno int ljmp aas cmc xor adc and out mov add mov add stos mov stc jnp pop jae jp xchg push nop insl (bad) adc insl jb (bad) aaa push cli xchg xor cmp mov in test or sbb (bad) jne stos rcrl (bad) jno inc sbbl inc ret lock mov mov stos (bad) incl jbe ljmp es stos fsubl (bad) mov sub pusha jb pop lods stos call xchg and jl pop ljmp cmpsl imul jp js ror test cmp xor cmp jnp mov pushf (bad) ret les sysenter xchg out in cmp aam (bad) loop xchg push cli sbb push loopne incl mov jp ja dec sbb mov xchg xchg mov fisubrl mov je lret cmp dec inc push subl push xchg or rorl and xor fdivp jge hlt jno pop jp adc mov jbe push xlat popf jg jp xchg aaa cwtl test lea mov pop sbb jmp (bad) xor adc inc mov jbe adc pop fdivl jmp pusha js mov aas mov xor mov fidivrl cmp xlat xchg xchg cmp hlt gs fwait popf xor mov jne arpl aam fimul fs xchg pusha fild jo add pop jle jp inc or mov outsl (bad) stos test lcall jae (bad) loope push fdivrl (bad) jnp jmp imul stos sub fs cmp pop in lret xor sbb inc mov mov mov jae mov lea arpl or pop jnp or jp mov mov in xchg add loope mov mov enter pop sbb pop push sti daa pop lret sbb push mov cld (bad) je iret daa test pusha inc fimul hlt inc shl movsb push push or push sub xor popf sar mov dec lds mov stos gs cs jo pop andb jg leave test stos sub (bad) gs out mov out cmpsb push loop aam lahf xchg adc cld xchg cmp xlat addr16 out test sbb pop outsb cmc jmp divl sbb sbb dec and (bad) es nop cmp jl add jnp xor sbb arpl bound pop add mov ja ljmp in ljmp and out push orl addr16 insl jnp mov jp cmc cwtl mov stos call dec loop push clc jo mov sbb jle push push jmp push stos mov dec insb mov sbb rorb scas loop cmc fs movsb and lahf inc jecxz sbb xchg inc sub jnp pop jg lods mov or sub pop mov rcl push shrl xor sub dec pop pop aas into in mov (bad) dec and or ja stos bound ds (bad) pop dec mov (bad) jne pop fcoms scas adc and mov int3 clc cmp mov movsb mov xchg imul enter sbb dec cmp aam or and sub insb sbb add int3 (bad) js add movsb push cmp or sub xchg inc insl xor dec js jae or jnp adc dec lcall or xor mov xchg cmp ficoml (bad) dec int3 lcall xchg adc bound cmp mov dec into mov repnz rolb ret int movsb clc jne movsb dec arpl push push icebp leave cmp inc mov mov inc adc sbb jmp je sarl dec movsb sub xchg add mov iret pop push subl jns or mov jnp mov test jnp xor cmp lret in fwait jp xorl push mov inc (bad) fnsave or int3 out add test (bad) sub call into (bad) in sti pop cmp mov inc sbb xchg gs imul notl jp fisttpl aaa dec leave ljmp daa rcrb and jp cli jle addb lds (bad) gs cmp dec jns jp add push dec sub pop jp mov mov mov pop mov push out cmp clc sarb (bad) insl xchg movsb sub out pop in in stos pop fcmovnb cmpsb jge sub jae aad jae mov inc lea jecxz push pusha or les movsb cmp addr16 cmpsl gs xchg arpl jbe stos dec test add idiv subl mov jae dec out es call stc fisubr bound imul popa movsb shll ja pop lods negl xorb mov sbb pop inc add (bad) mov and push ljmp aas imul ret gs sahf in es push inc push mov sub fdivs stos lock adc inc sbb mov jne scas cld fucompp lea xor xchg adc inc mov xlat insb mov dec cmpsb cmp ret clc popa mov imul aaa loope cli push sbb js insb inc jp out inc or xor mov xchg xor jp xlat adc jp mov sti mov push sub sbb test sahf jnp dec jmp mov xlat jp aad xchg jecxz ja lret adc (bad) mov sarb mov jne gs xchg pop (bad) shl jmp dec sub (bad) jp pop hlt dec xchg or ret ljmp pop jecxz pop imul mov jl cltd mov adc es dec sub jno pop mov jo insb jp sub xor mov jp or ss sub jp pop xor mov jb cmpl jae jne movsb (bad) aaa adc mov mov pushf dec sarb jne push stos adc stc stos bound or test test mov jp ret idivl push arpl (bad) jl pushl or mov scas cmp xor pop jecxz (bad) cmp call mov lds (bad) mov push ja mov (bad) imul mov inc mov into inc arpl cmc aas or in mov cmp lock mov push sbb fwait ja fstpl (bad) idivb sti mov xor fmul jnp cwtl jge pop and cmp (bad) flds pop cmp push xchg cli push and dec jnp or mov scas stos jge push xor push out mov pop xchg test jae pop lods les (bad) (bad) rolb and mov mov jl jnp inc xor ds add dec jno jge lea dec in sahf out lcall pop cwtl rorb mov xlat std mov lods cs xor ret mov push call mov xor jp xchg in popa push test sahf jp movsl mov notb mov test iret in sahf imul aaa inc push xor jp mov or ss add and scas xlat jno inc cld out test ss pusha jb aam addr16 xchg pop (bad) mov movsb (bad) jp cmp xlat dec sbb push push cmpl mov lods pop in jnp (bad) jle popf dec (bad) insl cmp js jge ja mov or xor (bad) jp lcall gs push fsubl mov (bad) add cmp xchg mov cltd jnp test sti xor arpl sub mov movl js jnp iret in cld outsl xchg jp shll mov xchg sbb push es shll jle mov mov js fild (bad) mov loop cmp cltd xchg push fwait scas jp cmp mov pop imul pushl in pop jp pop xor pop dec pusha push nop into push idivl cmpl xchg sub cmc fs dec cld mov fldcw pusha addb or xchg push imul cmp jp jbe push add xor pop test xacquire jo (bad) jns push sbb push (bad) fdivrl pop aad jno pushf movsb jp dec in lds cmpsb inc sbb popa insl test push jno jo push push or lret push aad mov mov lcall pop sbb arpl jo jne aad dec lock jne into pop sbb adc cli ja (bad) cli jp loope lret aaa std or jne test (bad) not pop ja jne pop inc fistpl bound ret sub jmp stc fwait xchg loopne out hlt imul push std pop aaa cvtdq2ps stos pop cli inc je cmp xchg push cmp roll cmp adc mov pop sub dec pop inc sbb gs or mov rcl clc mov sbb lcall (bad) mul push and mov pop ret sub stc popa jmp cmc cld push mov hlt ja mov pop xchg mov cmp roll push xorl push loop pop sub clc mov imul sub sti leave mov mulb inc outsl bound sub jo clc or adc loope (bad) jmp pop push hlt push add js pop stos je and mov lret (bad) cli lods and jne pusha loope sub stos xor add les (bad) or or pcmpeqw pop jns cld repnz push stos or sbb repnz and xchg cmp fnstcw mov shr jp repnz dec xchg loopne arpl inc in dec gs or lods std xor mov cmp sbb jne cmp icebp ja sbb fmul in mov hlt pop aaa fwait mov int out in xchg inc sub cmp jno inc sub inc sub fnstsw xchg mov mov add rorl out movsl add insl mov ret negb xchg insl adc out cli sub inc sub rcl cli dec xchg inc dec xor cmp rol or jns and or sbb mov mov cmc mov ret popf cmpsl rcrl nop jp mov pop adc xor je mov movsb (bad) jo jp lea xchg popf add jp loope stc mov in test in jp xchg sbb add pop add mov jmp dec popl cli xlat xchg lock imul (bad) and mov std das (bad) xor icebp pop dec jo imul xlat jae add sub test jne dec (bad) fimul adc inc fs mov loopne ljmp jne fstl jnp and bnd fstpt add pusha jnp pop pop push clc mov dec rorl mov mov scas add fisttp stos leave (bad) mov bound pop das or (bad) lcall pop mov (bad) jb dec and add cmpsl mov negl dec call repz pop (bad) repnz cmp imul lcall jp and jl pusha lods jle pop push and aas xchg loopne insl andb sub jnp je push add adc (bad) cli jnp inc jp push insb in les andnps adc mov inc xchg sbbb popa jne scas les out ret add jns pop or scas dec ja jmp pusha push push lea xor pminsw sahf or push and repnz gs jnp aas mov (bad) mov movsb jae iret pop test xor mov mov mov and jns nop repnz inc ret stos sub decl stos loop cmp dec bound mov loope push adc mov imulb (bad) insb cmpsb push mov out mov fist sub cmpsb jge leave pop movsb hlt mov jb mov subl hlt dec ljmp xchg push jnp inc sub fldenv insl stos sbb mov stc arpl jns xchg push add mov mov add arpl movsb mov inc repnz pop jne sbb popf xor dec mov in mov mov dec jno stos stos std inc push sub mov inc test cmp adc cltd pop jnp cmp data16 push loope iret push movb insl leave stos adc arpl or xchg je push jne jne and pop cli cmp pop dec cmc lret stos push scas stos mov nop (bad) in or mov jp stos lret dec cs jae stos icebp call cli sbb (bad) out add jae je stos outsb sbb or sbb jb mov leave iret icebp call idivl dec push xor dec sti outsb pop jbe lahf out xchg push hlt xchg (bad) mov (bad) negl sti and cmp sub mov mov mov jp push jbe mov loop jecxz lret jnp stos (bad) sbb dec mov dec push xchg pusha sarb notb (bad) pop cmc hlt mov (bad) cmp adc popa inc sti push lds div add and cmp enter add mov or ja scas mov jno jo push clc hlt xchg jns jp std mov sbb cmp and push sub dec shlb das add jns jp les xlat pop fisubr lret je xchg bound ja pop pop mov test shrl xorl aaa ret aas mov dec adc imul jge imul jns fsubs jno ficoml pop and jp pop dec mov mov jae in mov leave jp (bad) (bad) sti aas jp aaa adc inc (bad) lret ficompl push xor int3 movsb mov mov lcall call fnsave xor adc addl xor cmp hlt decl add out testb inc das mov mov sarb jmp int sub and test (bad) aaa hlt and cmp fstps (bad) and jbe iret and jp stos mov jp or lret leave push jp test fs pop aam sarl or dec jp mov aad sarl push popa sbbl int mov insl jecxz sub sti cli lods shr sub mov pop adc and jb pop lods (bad) sbb xor sub sbb jne insb and mov jp mov xor in xchg data16 xchg mov push call lret cmp mov repnz pusha xchg mov fs inc in popf sub and adc test or or cmp fcomps mov imull shlb mov mov shrl iret ret imul pop int jne rcrb ret jne pop popf xchg jmp fdivrl out jne sbb push daa test pop imul in push stos pop es jp adc cwtl push jno mov and xchg cmp outsl push loope pop and jae adc iret repz (bad) push sub pop xchg clc dec pop stos popa sub pop pop cmc lahf cwtl sbb cmp add sub pop pop bnd mov das aam pop push (bad) adc sub sbb lret test pop push sbb cmc pop xchg fs cmp out xchg push lcall mov jnp pmullw xor xor adc pop shl cwtl inc sbb xor sbb ret mov push mov cmp add clc ficoml dec sub xor (bad) repnz lea push lds sbb mov mov and inc lods das pinsrw shlb mov mov sub add imul mov popf mov xchg sub jae adc mov sub or cmp lcall (bad) sub ret into ss dec rcr fs stc lcall (bad) xor add sbb leave dec and pop stos pop out cltd call mov xor jnp mov sbbb sub cmp jnp call mov jnp add rcrb push mov mov inc mov xchg fs popa insl and es insb hlt pusha mov lds int3 pop jae dec fnstsw jl mov stos mov imul ss sub fs test inc inc cltd (bad) mov pop push and xlat jle push arpl cmp jecxz,pn insl push and aam add insl jae out call mov and icebp iret xor aaa insl shlb (bad) es scas adc lcall cmp xchg subl (bad) int dec mov in testb cld push ficompl popf lcall popa adc inc fs stos push neg xor sub mov and aas clc push inc sbb sbb adc cmp sub sti jp stos cmpsl sbb dec test (bad) shl mov xchg out cli hlt mov push mov scas loopne pop cli and sbb movsb push aas jl jne pusha inc mov ja pop jns movsb fisttpl cmp jo push mov pusha push pop mov out jne jmp std jmp pusha xchg xor pusha sub in push mov lea ds pop hlt arpl mov pop test push push sbb cs roll push mov shrb fwait inc popa jns push sub in sbb stos xor cld ja xchg add or mov (bad) fidivl xor inc nop arpl inc (bad) cli xor mov mov and das xchg sub pop and jp add (bad) insb jle out jp gs mov scas cld outsl test cld repnz stos xchg pop mov xor cmp fimul xor test (bad) int3 hlt dec outsb mov sub push pop push jecxz push ret stc xor pop mov data16 push cmp pop pop sub inc sub pop mov (bad) js mov mov stos (bad) mov pushf cli xor xchg outsb outsl movsb popf and shrb addl push pusha bound nop int jae idivb popf test or jge pop test sarb push sbb mov pusha dec movsb adc stos jmp dec mov cmp push jnp and imul mov ss enter inc jns xor sahf inc dec xchg sbb jp sbbl sbb jnp sbb sub mov movsb gs sub dec test loop cmp xor pop xor mulb outsb dec fstpt pusha js jne mov lahf adc idivl lock jecxz insl adc push sahf jnp lret pushf lahf pop or xchg dec data16 jne pop loopne fdivs es sti lea pusha lock mov iret add addr16 js dec jg mov jno ljmp test fdivs je imul jbe xchg rclb test cs pop mov repnz pop pusha testl push mov test stos pop ljmp inc shlb and fwait imul aas in imul xchg out out arpl inc lea out pushf imul subl pop jno imul int3 imul outsb fldl jp pusha out jae insl push loop dec dec imul xchg lds dec jae mov jae ja push jo sbb jne addr16 jae pop mov jo dec rcr iret mov stos sbb or vxorpd mov jo shll jle jecxz jge in aas (bad) sub jp repnz ljmp sub ljmp movsb mov push jnp xchg cmp cmp jl jo inc and jmp adc jge out daa pop or inc lock sub (bad) pop mov daa mov das pop call adc pop sti (bad) jl cmc fisubrl jne fwait jae int mov in movsb jmp out jl (bad) je xor inc decl mov cmp in adc test add mov ja shl inc xchg xor mov xor add jmp push (bad) cmp and xor inc sub mov jl dec popf xor adc iret leave add cld add jbe mov mov pop cmpsl dec mov jne mov push pop pop mov nop stos jae push clc (bad) pusha aam outsl ja imul stos xlat jno jge pop stos add aaa lds xchg mov mov adc stos mov mov sub fimull std inc xchg pop imul mov sahf pop push ljmp jmp or js xorl inc cvtps2pd ja sub cmpsl cmp and dec into mull xor aad jne push push rcl out push in jns mov out sbb sbb in pop loop stos cmovae mov xor and inc faddl lock insl addr16 and daa jmp mov sbb call and lea mov stos mov jae mov mov mov enter inc jo cmc pop pusha fisubr and xorb fwait xchg push push push pop jmp jmp jge adc lods movl adc jge xor arpl adc cli mov aad jne add push adc int3 arpl imul enterw jo adc js jo addr16 cmp ret testl and loope insl js sub fisttpll pop insb xchg and cmc dec jmp arpl imul mov xor movsb repnz les pop fs xor stos out xor xor ljmp rolb pop cmc inc sub mov movsb jb outsl arpl out mov and mov sbb or aaa inc je sub in ss add stos and push mov pop push dec push stos inc popl ljmp arpl leave push cmp xchg xor xor cmc call pop lea sahf scas stc adc push jns outsl pop jae fs inc lea adc push fistpl imul and add idivl mov scas pusha sti push out addr16 lret fstpt xchg xor or js aaa jb imul mov sbb pop repz xor sarb mov jbe adc cmp (bad) jae xchg in sub mov jle dec shll pop aaa stos data16 and shrb gs and add lock gs add jge pop pop cmc insb jle sbb and aaa push imull mov or xlat loope (bad) mov pop lea mov push sub jne xchg lea jl sbb or imul pusha lods (bad) mov test sub cs and adc mov scas mov ret lret out data16 aam sub mov repz mov js inc sub lds pop jb ficoml ret outsl mov inc stos or inc pop icebp jbe loope adc test sub divb sbb push imul ds test mov sub lock leave adc repz int cmpsb in gs aam or pop and lcall xchg mov movsb loope push outsb in dec xchg arpl arpl out xor repnz jne or xor fimul adc imul mov push arpl orl adc fisttpll jmp inc and daa fldl xlat mov arpl out jl out add xchg mov pop lret dec imull pop push pop sbb ljmp repnz sub adc (bad) mov int pusha lret rcpps lea cmpsl pop cmc lret popa addr16 mov (bad) jnp pop out cmp cltd inc cmpsb adc (bad) pop stos cmp mov imul (bad) xchg and (bad) aaa push jae jbe add imul out pusha pop addr16 int push lods (bad) sub sbb jno ficoml mulb and jae pop pop jne std jo ja int3 je iret jnp jnp nop xlat hlt and aad (bad) das stos mov dec jne cmp lea jae cli dec cli jno out arpl (bad) (bad) push mov inc lods mov insl mov mov jne fisttp arpl jl mov cmp loope stos pop (bad) jb cmp push iret dec fdivs xchg inc jle rol sbb and inc dec cmp cmp sahf mov xchg dec ljmp jo jae shll fs js std sub fcmovne mov cmp cmc or in mov lcall test insl cmp call out insl dec pop or jno sahf push lock loope movsb in cmpsb jb fldenv xor int pop daa xlat sbb imul test (bad) addr16 cmc in push push mov jae ss pop or push inc jne fisttp xchg (bad) lcall mov jno xchg stc adc mov test loope ret pop fnsave sub add (bad) jecxz adc xor push cmp xor xchg xor push sti les out and sbb pop fs (bad) jmp sbb hlt in dec mov inc jecxz movsl in les pop repnz out jne fsubl shl mov imul int3 movsl xchg mov frstor push add mov addb dec xchg out xchg fwait or push out call mov mov cmp pusha je stos rclb jl xchg dec ret mov in out mov cmp or and push jo cwtl dec test jp nop sub xor dec outsl pop pop push pop test aad test xchg cmc jb insb dec nop dec pop pop push xor stc push dec repnz popa shll xor out jne jmp adc push out je xlat mov xchg and pop sbb lds xor rdpmc mov repz mov repz pop pop mov pop pop mov stos mov xor (bad) xor sbb lods lock notb mov push mov inc repz data16 mov ss push xor es bound lret pop pop mov addl addr16 jl dec (bad) xchg cmp (bad) mov pop xor scas adc gs inc ret stc mov xor xlat push rol pop xor cltd sahf int cmp and adc sahf add cwtl adc (bad) and xor ret out rcrl ret gs mov repz data16 dec pop push aaa push movsb push pop pop push aaa arpl jae sub xor pop or gs in push fldenv pop mov add ret sub lea pop mov test mov stos aas imul sahf sbb lcall sarb inc mov cmp push imul pop cmpl loope gs xchg pop stc xlat or insl lcall ss pusha lea jg cmpsb pop bound add mov gs stos fimul mov jge rol in (bad) cmp data16 add pop xor outsb arpl adc or pop jb out jbe or arpl mov stos movsl arpl pop fidivrl dec cmp rcl dec mov fbstp shrl and jne movsb xchg (bad) jno jno stos in (bad) push sti add inc idivb loop cmp add icebp mov insb mov sbb xchg and mov addr16 jne xor push imul jo jge push fisttpl sub icebp pop addr16 fildl addl adc cmp outsb mov in push divl push out mov std aaa (bad) cmc mov xchg push sub test inc gs inc mov sti jg fistpl jecxz jne sbb lods mov cmp popa inc stc lods (bad) jae arpl pop (bad) cmc push or fwait inc int test inc cli pop jl pusha in lcall jo adc icebp cmpsl jae out adc xor mov icebp dec cwtl xchg gs (bad) adc xchg lods popa push xchg sti adc addr16 (bad) (bad) cmc (bad) jl aad pushf lods imul stos (bad) push enter jle outsl outsb arpl pop dec hlt je lock aaa jo jae mov arpl and lcall daa push outsl mov adcl dec insl repnz stos jne (bad) jnp pop out inc sbbb inc sti push or pusha arpl fs outsl imul pop jg jg cmpsb and ja mov (bad) shll fnop add jp sti (bad) cmp push imul pop std and xchg je inc insl pop xor (bad) xacquire in mov pop insb stos xchg (bad) pop (bad) jae sub clc or addr16 add insl inc in sti jnp xchg xchg adc out or push cmp cmp xor push ljmp jne hlt sti fistpl sti cmp mov data16 fs (bad) lret popl subl in stos mov xadd adc push cmp push loope repz cmpsb xchg xor movntps test xchg pop jnp outsl insl cmp outsl leave mov xchg dec push jecxz push xchg repz imul gs mov out fsubrs cmp in in arpl ja pop jb jo jno ljmp mov pop (bad) aam divb aaa testl out lret cmc add xchg mov adc shrl lock mov and out pusha mov xor sub jo mov mov fldpi lret cmp cmp pop pop mov dec xchg pop xlat ja (bad) jmp add test sti loopne ja imul pop je mov cmp fcmovb (bad) sub jmp cltd loopne mov out aaa insl inc mov lock movsl pop jo pop rcrl pop fstpl in inc cmp cwtl pop lea call sub sbb jnp iret or scas sbb add movb rcrb dec insb lock idivl add mov out out xchg jecxz sbb sub fs lea lock or cmp dec les add pop push push js data16 sbb std lcall jl pop mov outsb in mov or mov push decb xlat sub addr16 repz jecxz negb stos pop dec in adc (bad) mov sbbl mov mov sub dec pop lea in negb in push out dec sbb add fldenv pop mov push mov pop xor inc mulb stos scas sub jmp mov add add or std orl rorl cmp jo out imul sbb xchg movsb pusha int inc (bad) imul xorb outsl fs arpl push push (bad) scas pusha adc xor repnz adcl movsb or xor adc mov sbb mov imul lea or mov pop jae lea dec xorl push mov jb adc sub jae mov outsb lret push mulb push insl push add jo pop pushf fs lret and stos dec lcall mov leave jne stos cmp mov inc lret daa out push add lock sub jo bound or cwtl cmp cmp inc stos xchg mov push jmp and xor pusha arpl test fs mov in nop sub enter ja in cmpsb movsb insl mov pop jne mov add jns push daa xor fcomps imul jb shll icebp sti mov (bad) je jecxz clc sub negb sti mov ljmp dec inc push jnp testl push dec mov ret shrb bound xlat dec stos ja pop les out add jle in cmp enter imul sbb add sub je push (bad) lods ljmp shr imul sub sbb lock std bound cmpsl pop stos iret xor hlt sbb cmpsb pop gs popa push rolb adc stos aaa sub cli xor ljmp sbb nop ljmp dec jns out adc pop xchg out pop inc sbb dec aad in push xchg cli push inc sti inc repnz sbb cmpsb (bad) js outsb adc clc mov popa and xor pop ljmp sub jns mov jbe pusha imul bound dec lea iret sbb xor or mov jg cmp je mov int3 int scas fs dec out xchg sub mov dec push cmc jo pop lret js iret jl in pop add stos aad xacquire and ss jb or insb pop mov push gs jno bnd call and aaa jo aad (bad) xor pop ljmp jb pop inc inc addr16 mov jno xchg or aad xchg sub adc sub fs or xchg inc pop fildl mov (bad) nop xor pushl jl mov mov repz repz (bad) sti out aaa aaa jo push inc stos dec dec jns add mov adc lcall mov faddl mov loop leave cmp or stos test mov pop push fdiv dec xor es dec fstpt das jecxz jnp stos pop sub mov pop pushf push dec sbb inc dec stos push or fildl hlt xor adc rcll (bad) outsl mov push push xor xchg xor aaa orl mov cmp sub adc xchg jmp jne lods in xor xor dec popa dec aaa dec test daa add (bad) jo inc andl or push inc pop xor movsb mov aaa sti push mov inc leave pop fsub ror dec xchg das add ret sbb jmp mul xor je stos adc sti (bad) js fs jg scas fcmovb sub iret fwait out adc loope lds and push setae rcll movsb scas das xchg arpl call addr16 fs stos rclb pop push imul inc mov out adc jo cmpsl popf sub and lret or es sub pop jb sub in pusha mov add fidivl repnz mov inc pop iret je pusha jl sub dec cmpsl outsb push popf in sbb jne jbe gs mov pop jae mov adc fldt sub stc or adc adc loopne mov and leave push adc repnz sbb cmp push test mul aad or push xlat sbb lds jg and jp aad iret xchg mov out rclb push out movsl and mov xchg push and mov jo test clc and sarl sub sbb ja testb arpl pop test push add inc sub or cmp stos mov cmpsl mov loopne cmp mov jle cmp gs adc push mov jbe add pop add mov mov jg,pt stos lcall imul mov jge lret (bad) fidivl aaa insl test popa movsl xor mov xor pop push jecxz jae mov xor jmp cld lret push insb call jno jno ljmp mov push dec int3 adc fistl int pop stos int sub sub inc xor xlat pop jecxz jmp insb outsb neg xor jo popf repnz push inc outsl lods stos push insl inc outsb aad fcom fbstp lods insb dec jmp jecxz divl xchg jb xorb cli pop mov dec mov adc jb mov jo xchg je mov inc negl mov adc jne xchg add lea (bad) lahf dec jb stos (bad) dec push xlat stos or (bad) xor fs xor je pop (bad) (bad) or imul push lret jg pusha fldl mov (bad) sti add lea cmp hlt jmp arpl jne sub in ja lahf and pop add pop xor xor push (bad) cmp outsl orl out mov mov mov arpl jae xor jbe sub imul mov mov hlt xchg or repz imul sbb mov stos (bad) jmp inc xchg inc call mov subl sub xor jo jbe in xchg mov pop jmp fcmovu andb jb jl mov and push divl push inc ja loopne insb lods mov and sub fstl sub nop push outsl dec pop mov pop sti cmp jg and notl dec stos push repz and cmpsl call subl inc divb aad adc cmc push push mov mov stos mov xor dec xor aaa adc push lea pop mov jg mov mov fadd test sbb push call inc inc xchg inc outsl lcall mov and test jae (bad) ja movsb mov emms shlb pop cmp rcr or push dec mov sub pushf outsl fwait addr16 mov (bad) lock mov es loope push jl sub mov mov mov js adc pushf adc repz inc and mov jne sub das frstpm(287 push mov mov sti push mov jns pop sub adc cmp inc sti add pop callw mov push inc arpl daa sbb out pop lods mov ja fsubrl in push pop dec imul dec sub arpl es setg sub jg fstps mov addr16 adc jae jnp mov test mov pop cmpsl pop pop lret pop push or push insl mov loopne pop sti pop ljmp comiss mov aad jl out mov push mov rsm mov mov aad jl jbe jge add push sbb pop push enter adc or fs mov cmc sub lock leave inc sbb sahf lea dec out repnz push (bad) icebp jne aaa (bad) mov jnp int mov loope mov push pop test xchg lods xor lcall (bad) fcmovnbe mov pop jbe scas mul cmp pop or mov les pop (bad) xor rcrl lret push jp call jno sub sbb push jecxz insb mov and mov inc dec (bad) lds pop lods dec sbb and arpl dec lret (bad) jb or imul jbe bound imul insb repnz cli mov add inc pop insb lcall shr cmpsl jne iret ljmp in aaa push mov call aas cli and push push adc mov dec or stos fistp cld popa pusha lret dec es pop inc add and cli imul rcrb imull inc outsb wrmsr fcmovne fisub shll fs out dec push mov (bad) jle flds fbld insl lcall lret push push psrlq std iret pushl out cld loope push sub rorb add xchg or pusha sti push (bad) cmpsl fcmovnbe adc in or mov nop or cli sti sarb push mov xor mov jae pop fwait aas jle jno sub fisubr jnp xor out pop xor mov cmpsb ljmp aaa outsb (bad) and aaa cmc iret leave mov dec cs jnp add mov mov jo mov sahf add xor xlat mov repnz adc sub int3 ds or push adc je lods jae dec cmc arpl in inc arpl clc mov pop int3 mov aad push sahf cwtl lock stos jae mov imul jge pop push arpl fs adc lock stos pop lea ja outsl fist (bad) stos es dec in aaa repz pop (bad) or sbb sti and mov je pusha and (bad) pop push push xor push aad and and out icebp jecxz mov adc mov xor insl stos pop cmp push jmp cmc ljmp mov lret xchg xor cmpb pushf adc adc js jb add fistl shrb je add mov inc xchg dec inc sbb dec cmp mov insb stos and addr16 cmp xorl jb xor cmp sahf loop in push jp in sbb out roll jnp cld inc (bad) push and or pusha jmp in xchg out push (bad) mov and jo test mov aaa cmpsb and sbb fisubl sub mov ss or fildl or test mov test adc xorl and jno insb jo jae inc mov aam pusha mov inc jo mov push pop xchg dec data16 les test xlat scas mov pop xor ficomp fs jb ja push push cmpsb lret push fwait call aas gs mov fs shr aaa cmp sbb lcall jae xchg cmc adc adc pop (bad) (bad) jmp jbe test adc dec vmread pop repnz jno add push in jo data16 jne sub xchg je sbb dec arpl insl or adc pop push xor jl mov adc adc xchg dec cmpsl loope (bad) pop xorb jle jbe and add sbb das add mov or fwait rclb pop xor pusha jb dec iret fsubl pop pop sbb jno hlt push insb jmp pushf out xor outsb jecxz outsl jo jae dec mov hlt scas in cli inc dec sbb jae jbe push push mov in jmp and and insl cmpsl dec lret mov or imul push mov mov les gs outsb and jg sub cmp mov icebp mov mov dec imul pop jp inc xor mov or aad inc sbb sub sbb gs leave xor iret xor jle pop push stc dec std or adc dec jl jmp gs stos cmc in aas imul xchg inc pop adc mov xor (bad) pushf add sub gs fcmovnb inc and mov or out jb add lcall imulb pop fidiv add (bad) mov dec and adc mov jmp lock outsb sub dec jp arpl lds mov dec dec repnz mov daa insl and jmp test cmp pushf push (bad) mov in pop jge nop sub fstl pop (bad) mov mov xchg jnp inc jne mov mov stos pop xor pop dec in adc xor mov mov lea fwait mov push cmp arpl or jp jne sub addr16 pop stos int push aaa dec mov sbb pop dec fs push inc mov out xor adc mov inc in rolb adc outsl dec jle adc cli cmp lcall sti lea xchg pushf sbb sub popa mov mov add cwtl add lcall mov mov sbb pop jg outsl cmp sbb jmp dec icebp (bad) mov aad sbb test inc addr16 imulb push cmp aam xchg jnp jno dec fnstsw pop mov pop mov mov ja shll stos push dec xor inc sub cmpsb mov cmp es sbbl imul or add arpl pop xchg mov add add fldcw std jo sarb outsl movsb pop mov fstps mov arpl out push insb jg mov xor jmp stos les or outsl mov jno xor mov stos jg icebp mov std lea cmp repnz or or xor pushf and ficoml push inc add cmp push or xchg sbb fiadd inc sub outsl xor and xchg arpl outsb icebp sbb lret loopne addr16 fs repnz mov jnp cli into (bad) mov insb mov xrelease fsubs mov je push stos (bad) stc dec push sub or mov pop xor pushl imul jecxz add (bad) jno add cmp (bad) jmp pop cmc mov addb hlt insl push jnp es sub pusha sub mov jb mov stos sub fidivr add loopne adc in imul cmpsb jae and pop xor mov aas jne rclb mov movsb sbb xchg jmp addr16 adc out loopne divb insb outsb std fmull cmp popa ret jae jmp cltd icebp je aas cmp mov int les jno lock jge mull iret pop xlat pmullw outsl dec movsb xor nop addr16 in repz sbb gs out jl inc lret sub mov lahf (bad) inc mov sub notb sti sti mov push rcrb jbe mov inc dec pop push (bad) imul jg cmpsl push arpl cmpsl pop jecxz lea jns jecxz jae push jnp add jle xor out pop xor inc cmp mov movsl out cmp lea mov xor xor loop ja repnz aad scas fwait add jmp bound stos inc sub lds ficomp ja jb cld pop aas (bad) jbe fsubrs xchg jg cmp lds jbe dec mov cmp cmp (bad) cld push cmp ret or sbb jb insb fwait jmp push xchg movsl push movsb call mov sbb cld and inc dec pusha leave mov outsl mov daa adc das cmp outsl pusha roll insl xlat and sbb mov xor mov outsl xor in outsw jb sbb out pop mov push sti cwtl mov inc jne jge clc push add fisubl stos daa lcall rep imul insb out in test pop dec lret sbb lret push inc pop xchg imull ljmp pusha xlat imul test and cmp jnp xchg out in repnz cmp jmp sbb nop test and jb inc stos out pop enter adc pop clc sub adc push inc push or fmul sub adc fisubrl and jmp sub xor mov cmpb fsub xlat dec test xor bound xor insb push add mov xchg mov push cmp mov (bad) xor in pop loop iret cmpsl xchg mov arpl mov push je sbb hlt jae sti sti fisubl mov mov loop and jno mov roll (bad) and cmp push mov dec in mulb jg mov in test jge je mov jns mov iret sub and add and lock addr16 push stc xlat bound imul sub push dec xor outsb pop (bad) hlt push jecxz xor sbb pop iret push inc or jb mov push int3 sti arpl out in xchg xchg xor dec rol jbe (bad) jb shrl cld cmp das push repz sub lcall lods (bad) jbe movsb imul cmp call mov xchg pop shrl cmpsl (bad) xchg cltd pop jmpw pop in imul pushw cwtl adc pop dec lods mov xor (bad) pusha and inc xchg xor ret in aad add das pushf fwait xchg inc xor sti and shrb out dec mov inc mov test ja (bad) xor adc fidivrl subl jno push mov jo pop es xchg xchg inc xchg pop jne (bad) loopne lea mov (bad) mov arpl repz mov pop call xor or jae jno jns jo xchg sbb sub rcrl add pop rcll and pop fbstp mov dec and out cmp pushf scas shll cmp xchg sub pusha fidivr sbbl (bad) shrb jae sbb mov rcrb cmc mov or insb js nop shll cmp xlat mov xor lods dec leave pusha jg jae and and jae cmp push and insb ja or push into jecxz ret pusha sub movsl dec fsubl mov data16 adc andl je arpl das das cltd xor iret dec stos pusha mov jb lds aaa addr16 in leave push mov sub xor imul jmp jg enter mov push (bad) rcll push and sub adc jg pop xor jb stos sbb addr16 ss sub pop jmp adc into fadd (bad) pop cmpl or xchg (bad) adc xchg ret push sub pusha sub incl je sbb adc gs loop out push js ljmp pop sbbb imul mov loopne stc lea xor js inc sub inc imul inc je fcoml das cmp cmp scas mov or jg icebp mov sub ret cli jne sbb pop sub mov aam mov mov mov jbe add addr16 xchg mov hlt mov xchg lret xchg mov add gs xor scas pop xor xchg popa xor dec ss inc mov mov movsl dec xchg repz or icebp mov or push pop mov add xor xchg mov ficompl inc xchg xchg and mov dec dec mov repz in push sti iret pop sbb add dec adc and dec jmp sbb push inc dec outsl mov fldcw (bad) aam sbb or scas jmp mov call lret or xchg scas daa lcall jae cmc or in sub movsb sti xchg dec mov in xchg xchg stc cmpsl out into sub mov imul decb pushf (bad) adc jae frstor hlt repnz lret lea enter movsb imul lret fistp popa iret cmp mov gs fldcw sub clc aaa mov popa lahf (bad) (bad) mov adc in mov fwait pop push inc icebp add clc outsl pop in xor add push push xchg loope or lock dec test and mov imul cmc imul movsl out outsb sub sti ja (bad) and iret sarl (bad) sub mov popf outsl push mov sarb mov ljmp icebp nop xor shll push or pop dec mov flds add jo arpl pop and fcmovnbe aad jecxz mov inc push or ja sub sbb jno out (bad) mov xchg xor sub (bad) sub call xor loope outsb jae shll add sub sbb cmp jmp mov push out rol dec outsl xchg jno aam lret xor cmp cmp (bad) jno xchg cmp out sti sub aas daa mov lcall movsl mov mov pop stos movsl ret add mov ja cli (bad) ret shrb sbb lock fdivrl stos sub pop lds repnz insl bound hlt (bad) jno iret stos (bad) pop jae push pop outsb xchg mov std fsts es je mov cmpsl out cmovg stos jecxz dec insb scas repnz xor stos out adc push (bad) and cmc and leave stos and fwait outsl push aad xor push mov and nop adc push aaa je dec loope mov insb and stos in jns orl push or pop fnop les fisubl ss stos push inc outsb inc or test inc cmp push mov pop xor mov xor bound push cld jo loop push push xchg pop and inc push repnz outsl leave out cltd or dec add (bad) mov int sti loopne and aam pop arpl pop cld mov sub imul sti nop shlb jg stos push mov push dec sbb popa jl daa dec into lea stos jle xor movsl adc imul fwait or fdivrp pop lret arpl fs push inc xlat stos push dec stos lcall rcrb inc adc icebp add add dec inc outsw xorl push cmp push into inc cmp into cmp mov dec sub fistpl ss dec dec hlt loope dec sbb sahf jae add xor add inc out addr16 cmp outsl cmpsl enter dec icebp fnsave andl insl insb (bad) mov mov push dec addr16 stos js or popa dec mov sti pop mov inc mov data16 int3 sub push add push sahf mov cmp ljmp addr16 sahf daa cmc loope sbb (bad) bsr ret cs imul cmp cmp mov mov outsl cmc sub xor outsl dec imul sub es (bad) scas divl xor shrl gs or pop in inc fildl and out cmp dec gs sbb dec xor mov pop pop push insl in mov dec jmp mov insl addr16 icebp jns pop xchg mov cmp or adc pop pusha pop cmc or pop add xchg loop pop cltd cmp out addr16 in aad ret pop roll jae clc (bad) (bad) or xorl negl aad push rcrl dec cmpb mov pop jne jo push cmp push pop push ljmp inc xor out gs jno cli in js testb mov int3 and ja jg fistpl imul iret cmp data16 xor es and stos loop push out insl loope mov hlt mov scas cmp insb push cmp mov out jae cmp cmp ja cwtl in js imul push pop iret jae pop hlt adcl pusha fistl in sbb punpcklwd xchg jnp fbstp mov (bad) je insl cmpsl mov mov cld sub dec mov sbb xor xchg sub cmp dec lahf test cmp push add sub insl sti mov out imul inc xchg int push cmp sub call jne jno bound (bad) arpl rolb push mov push dec add js call mov ljmp fs loopne (bad) loop mov fstps call and xchg pusha das cmpsb cmp lock lds insl cmp mov push stos inc fsubr ret sub leave adc adc idivb std xchg jne jmp lock (bad) jo cmpsb cmpsl mov test out inc in fs cmp out loopne cmc shll jns lret (bad) std mul adc push mov (bad) lods push sbb fs mov nop cltd push ljmp aaa (bad) sub sub dec insl jnp jge (bad) call stos jno mov mov adc fcmovne jns fsts dec or cmpl push inc jle (bad) aaa lea dec lock test add sbb sub (bad) xchg jmp ss fs jb push jnp fucomi stos sub push push jmp sbb fisttpll sbb out lock mov pand cmpb sbb gs cmp dec jae idivl add (bad) jmp aaa movsb loop add jae add imul mov inc fiaddl sub xor in jbe js mov ja out cmc out ret xchg test push mov cmp test scas jnp das loope ficompl adc aad in repz movsb insl add in jge ret negl aam lea xchg xor imul jg jmp pop incb (bad) xor inc add lods stos pop sarl add xor rorb hlt movsb iret movsl ja jg lret pop jp pop movsb pop adc cmc and lock push std loope mov insb xor cmc loop loop ljmp loop jmp cmp xor in or sub jo dec lea incl inc and jge push sub ds dec std pushf stc xchg (bad) je push ret lcall ja mov inc bndstx lcall stc jno leave fcmovne cmc in jl jmp push mov xchg dec and mov fiaddl sbb sbb ljmp lcall push je fisubrl stos rclb cmpsl ja lret xor mov shll nop in add out sub call pop xchg sti ficompl and gs popa addb and cmp mov fcmovne into push jb sahf mov xchg sbb (bad) dec mov ljmp es mov xchg fldl (bad) stos mov aaa sbbl fldcw movsb popa mov xor dec jbe or sbb jae jb jbe xchg jmp or dec mov sti mov mov out stos popa les das sbb sub cmpsb mov rol insl and dec mov pop inc aad ljmp cmp (bad) jle sbbl fistl repz and mov cmpsl push in stos xchg lea cli movsl xor lods clc mov xchg mov or sbb jle leave xlat cltd pop popf jmp rcrl xchg pop jg nop dec jecxz jo test jnp or cmc xor xchg cmovl icebp add add es push cmp cmp test sub sahf or enter je ret xor (bad) in mov pop aas mov lret arpl scas jno movb xchg sahf out cli push test inc ljmp jge (bad) mov sbb push jo insl mov xchg subl jne out mov lcall mov int or pop arpl nop xchg jne add jge mov pop jle mov pop pop cmp mov xorl mov pop sub aas gs mov pop pop je (bad) push push divl (bad) std push aad imul std pop repz aas std pop insb pop outsb jbe std push push imul cmpsl imul dec sub movsl aad mov push and or xchg popf mov imul stc out cld jbe sbb jb mov xor xchg pop dec fdivl and push and jbe lods stos mov popf in mov push lcall fstl pop and mov aad adc clc mov cld mov or outsl out push add sbb pop pusha jp fcoms arpl stos fistpll push imul jmp sub and jne frstor mov roll cltd push test subb jns fisubrl jo jecxz push sub out cmp mov and push stos jnp fwait movsl mov sti jns push pop pop lret hlt pushf (bad) fidivr jmp xor repnz xchg iret dec pop stos icebp out xchg mov lock push in ja je rep and mov cmp bound jl push popa ss fs js xor das inc xchg xor (bad) xchg push stos pop push je ljmp mov push (bad) xor pop (bad) or ja jmp ss push add push ficoml lock aam or push lock jne leave clc fildll int stos scas pop insb or (bad) xor jmp (bad) and imul popa jle lcall icebp insl aas mov insb int3 jecxz imul (bad) pop xlat pop outsl mov sub inc xor hlt or popa insb nop sbb jno mov xor mov pop ja mov jbe clc lret dec add aas icebp call fs xor sbb push sub jle adc mov sbb mov daa aam mov xor jle or (bad) cmp (bad) jae push jo jae cmp mov (bad) adc (bad) out daa push mov daa pop lea idivl jb mov mov jp aad lds (bad) jno push fcomi or (bad) shrb fs in rcl ljmp mov lcall cs add call ja and repz (bad) xchg (bad) mov (bad) lret pop repnz jne jl pop dec ret dec sbb test (bad) mov xchg and bound push jb fadds lock mov data16 push shr adc jg (bad) aaa mov push xchg xchg in (bad) (bad) xchg jns dec outsl loope mov pop in xor movsb push mov mov (bad) je loop pusha xchg ja cli push mov loope nop mov lahf cmc rolb sbb cmp inc insl fsubs pop inc bound decb fistp loopne (bad) idiv mov sarb rcrl pusha push push fs arpl fidivr stos arpl mov sub hlt xchg jo stc cmp (bad) pusha loope add insb scas idiv jecxz jnp cmp inc pusha out mov jae cli xor gs lea je inc insl mov fwait inc inc or les fnstenv dec shrl rcll jno add mov imul (bad) pop mov addr16 xchg and push and xorb fs loope mov pusha cs xlat mov mov add xchg sub mov adc subb and sahf mov sbb aas jno lea inc pop loope and adc push xor sbb cmc out jno in fs arpl jle mov hlt cmpl cmp lds mov add xor push cmp push cmp sub jnp push loope rorb mov gs arpl mov xor xor popf ljmp jb mov and outsl mov (bad) sbb or js xchg nop jb sub lret ret push pop pusha movsb xorl stos jb sbb jno arpl xchg aad into push cmp adc mov fldt pop pusha sti ficomp jo stos push lret loop jle jmp popa add jnp aam pushl jle push clc pop pop js lods rcrl push push or lea add bound inc lcall mov dec mov add (bad) scas push add and imul xor ret data16 std xor rorb mov mov adc out dec (bad) leave and popl les mov pop mov setne xor mov sbb repnz or addr16 aaa or fs pop add jae fistpl mov repnz dec insb dec jne out in adc (bad) xor sahf sti mov jb add mov pusha jb lock out xchg rcl pop pop in pop mov xor mov fs icebp and hlt test xor push sti imul addr16 mov insb sbb hlt test (bad) dec (bad) adc loope punpckhwd fldcw push test inc pop dec dec fwait loope int and mov gs movsb arpl jmp js push dec addr16 dec pop (bad) pop fs into push jmp lcall stos sti push pop insl cmp inc push mov adc arpl add add jp mov repz or add sbb out icebp inc ljmp ljmp ja jno mov mov push cmpsb mov xor dec mov out dec (bad) into es dec enter (bad) dec hlt cmpsb jae jge push (bad) (bad) cmp jle (bad) push cmp pop fcmovnu dec pop pop int mov push test in push jno mov xchg pop ds hlt test jae ret add test dec pusha mov icebp adc test repnz jecxz popw jne mov aaa das sbb jo hlt addr16 mov pushf push cmp gs test jne rcrl mov arpl js fldenv mov mov sbbb sar push arpl jnp dec sub cltd add (bad) leave jb imul js inc xchg inc lret std cmc adc xor cmp (bad) mov out or pop mov dec push std mov pop (bad) lahf pop mov cmc stos (bad) cmpsb mov lret aaa lock mov or pop pop sbb loop and loope ret adc pop es jle js ljmp mov mov sahf out mov xchg sub pop jle fisub push fwait loope and fildll outsl popf pushf and fwait push mov ficomp fwait je jno ret xchg xchg sub xchg jmp loope (bad) orl lods (bad) in outsl fistpll jae push inc jecxz xor fs pop jb inc dec cmp fistpll jmp in xor popa dec (bad) neg fnsave lahf mov jno insl ljmp lcall stos jb leave add push in mov mov loope mov les add ret jle frstor jo push sub outsl add xchg stos imul push stc dec shll pop mov jmp lods add pusha sub test (bad) sub ss sub loope es pop fmull sub sub test daa and mov aaa mov xor cmp lea add add mov xchg push rcr cmp rcrl pop jnp xor (bad) rcll mov cmpsl cmp jmp shrl xchg and xchg pop shl cwtl jg push (bad) out (bad) pop fs out ja and jecxz pop lods jge movsb fdiv and or xor push andl pop lea sbb popa mov insb bound cld xlat pop inc adc inc lods lea jns dec mov aam xor mov push cmc jle jnp imul (bad) icebp not cltd arpl mov push dec push jge xor subb subl add sub (bad) sub xor pop xor gs push and inc pop pop (bad) negb mov dec popa imul sbb lcall pop out push inc cltd (bad) fbstp stos and in mov leave lret add inc lods mov jae insl dec movsl push pop ret decb ljmp push insl dec movsb and cmp pusha jecxz das gs adc jno arpl aam push mov lea pop imul pop push jo mov movsb ja sbb sub cmpsb das lock mov shrl test out and test push test mov ret iret es (bad) push adc cmp or stos sub or test orb rcrl call dec js inc dec xor sub arpl dec jmp je cli out jns adc mov addr16 dec and dec cltd nop cli loopne mov stc (bad) fldt cmpsl jne cmpsl sub std sbb add (bad) pushf cli js mulb mov adc out pop stos inc stos sbb mov xchg sbb mov daa xchg aas js adc jmp clc inc stos enter push jl rcrb popa sub sahf sbb jmp mov dec dec rcrb cmp call mov pop repz add testl aad jecxz inc clc fmuls cmp sti (bad) pop ja in movsb mov dec sbb je mov fcomps imul push in and pop mov arpl or icebp imul das sub mov fisttpll xchg push imul pop inc and negl jmp daa mov adc scas inc add dec fadd shrb push rep loopne imul lock adc rcrl fmul imul ret jb adc mov arpl mov xor mov imul dec (bad) jo add push jp dec pushf jb popa testl bound xor inc dec imul inc fwait outsb idivl pop mov xor cmpsb pop sub dec mov and scas into mov outsl add ror repz add test push push ljmp dec xlat push add xor scas jg sti arpl icebp pop insl xor pop push mov push ja add sub (bad) sti inc and pop cmp jmp jno pop jmp mov fbstp cmpsb xrelease sub idiv xor jae daa mov xchg mov fcoml out jae jne sahf pusha hlt cmp (bad) clc sbb cwtl jp ret add jb imul fstl shll push and adc imul (bad) movsb mov gs aaa ljmp jp xor inc aaa gs add mov pop fildll clc xchg and icebp imul lret lret jp xor fildll xor ret aaa gs mov jb dec rcrl imul push ret dec jp xchg sbb cmpl and lcall cwtl insl pop loope imul pusha jne push pushf mov fiaddl jae and mov outsl jnp (bad) lea xor jge xor pop jno mov insl scas and aas sub ljmp pop fisttpl dec pop in push push xchg pop out add sahf mov imul stos jae sahf xor and (bad) stos adc jl mov movsl insl and or gs mov (bad) lds dec out sbb adc adc dec ljmp fiaddl ret xchg xchg (bad) fucom mov mov jbe jb mov enter pop aad adc adc mov mov jne lret incb mov arpl xor sub in imul xchg dec jae jle cmc lret nop daa push out imul loopne daa sti rorl pop imul pop jne call xchg leave fcompl (bad) cltd dec lock cltd outsl movsb aam jnp mov adc pop call mov add jns pand or inc sub xor fldcw mov cmp out aaa push imul (bad) stc jno fs das lock aas cmp rorb mov mov idivb stos xor mov inc fs and fldt ljmp stos sub jmp pop xor pop cmpl jne inc sbb dec pop lods cli in or push lret pop insb (bad) lcall inc in stos lds add bnd mov and or insl add push mov jle jbe add jne mov lret insl add xchg mov ffree adcl and insb js ja stos lcall stos fwait ret (bad) mov jg mov pop jns xchg dec lret sti ja sbb aaa ljmp rep fs (bad) cs jg xchg mov (bad) xor insl jp mov rcl or jo je outsl mov stos pop inc mov mov iret jmp inc mov push cmpl push cmp insl call push insl jecxz xorl test insl cwtl scas mov shll vpunpckhdq jne adc add sbb dec (bad) or dec mov sub test jmp daa jp imul cmpsl lcall shrb pop sti inc mov (bad) mov pop es daa lahf ret jns dec pop jno out aaa jge mov ret fs repz jo cltd jne shrb pop xor pop out xor pop gs imul inc mov or xchg jp fistl push stos pop scas xor inc inc mov (bad) into push dec mov dec fisubl (bad) outsl stos xorl jno stos sub clc jbe test pusha lret mov movsb stos sti xor pop and leave outsl mov nop (bad) xor mov or dec les push pop popa cltd lret xchg stos cmp out jmp fcomps jecxz in mov ss sbb nop lret mov icebp push dec stos ret mov dec pop shrl xor sub jmp insb jbe icebp cmp and mov sub lret arpl enter mov xchg jnp gs pop cmp push mov lret inc sbb das dec pushf pop sub push inc xor fstpt mov push xchg jmp stos xchg sbb dec cmpsb rorl out and cmpsb pop mov cmp jp cmpl test arpl addr16 push xor mov imul jns shrl mov or dec fs mov imul stos ret iret daa out ret loopne repnz jecxz jo sub or mov fwait inc mov xchg add xchg push jae xchg (bad) pop pop cwtl sub ret adc popa fs sbbl icebp imul dec aaa pop sarb mov adc fistl mov cmc mov sub jmp cli ljmp sbb cmp daa popa push stos call lods mov fs ljmp and outsl dec jae repnz pop and ja shll mov lea and aam js inc cmpsb mov ss fldt aas in cmc add pushf sub xchg (bad) idiv das adcl mov xchg jne adc idivb pop or xor cli lds add sub insb ret mov stos mov sub loope or or repz (bad) roll jp mov popa pusha xchg fwait sub std jno mov sub ror jecxz pop push popw ja lock out aam mov in adc adc mov and in js cmp repnz aas dec inc ja stos in in fcomps sub test jle enter int xchg and cmp cvtps2pi mov cmp cmpsl gs sbb jmp jae outsl add push pop stc repz cmp int movsb jnp stos loope sbb push test test xchg mov jle outsl jmp adc xchg loope add ficoml fucomi subl push xchg inc xor cmc mov (bad) movsb or fucomip cli push test xchg inc xor lcall (bad) jecxz jae mov add mov push cmc int pop ljmp mulb inc clc mov jno xlat loopne mul ret push mov flds cli int mov fbstp divb push idiv mov sub adc push ja jbe mov int3 push test mov mov or arpl mov insb adc outsl sbb outsb ftst scas in outsl jne out xchg sub sbb jo ds pop mov movsb (bad) push leave rorl and push insb xorb mov outsl xor fiaddl adc pop jnp ja sub mov aam (bad) icebp add in in push push into dec xchg pusha sbb je gs repz scas jg push and popa sub pop jb ja pop outsl cmp imul stos mov dec pusha sti mov hlt (bad) insb inc (bad) push hlt cltd fucomi jp imul jbe (bad) jb mov xchg imul mov lods pusha cmp pop and add push add (bad) into mov repz jmp jb push push jne lret scas icebp mov adc je jo or scas fistpl push xchg mov mov repz (bad) repz fbstp stos dec push aad insb pop pusha pop ja and jno and ljmp insb xchg adc popa and add icebp in adc bnd sub pop sub pop cmpsl je fstl in xor das or enter stos pop push gs xchg shr scas ret mov popf pop jecxz fcmovnbe iret xor pusha xlat int3 (bad) mov stc mov jne pop inc and imul je hlt add aaa or bound jo in cmp or (bad) rcr jb int out dec pop notb stos pop jle int cmc (bad) repz fcomp inc xor mov jo dec add lea sbb or icebp mov pop jecxz mov sti and sub scas inc mov sub stos fs ret sub dec (bad) stos add jmp xor mov gs jbe xor sub pusha pop push cmp push pop mov inc fs movsb popf adc fs loopne cmp clc jl outsb sub xchg jl nop sub ljmp inc out ret jnp jo xor xor jmp add xchg add push jp push cmc jnp xchg xor inc out gs sti sbb push cs mov push push addr16 and and xor das ja stos mov (bad) negl sti aaa jne rorb bound sub push and loopne xor jecxz add cmp inc inc nop je aam or fsts repz add out aaa aas and ss int3 pop push mov pop dec lock imul scas fs sti call imul cmp jle xor inc sub adc mov dec mov xlat aas mov jne faddl xor mov push in jne cmc gs jecxz pop and (bad) out ljmp aam divb outsl in int3 xor cs sbb mov and and inc aam jmp movsb jl (bad) cmc out sbb push lods insb cwtl jo lock sbb jb fs adc push stos push xlat gs clc jns mov or jb jns mov mov sub aam jae addr16 mov aad not or lcall adc imul add hlt push ret and and pop or mov sbb add push popa sbb (bad) jmp mov cmp mov mov sti xchg pop sbb jnp roll xor loopne sti xor jo or and and in mov stos or jb fidivl sbb gs icebp jge xor aas xorl imull and push adc clc mov les inc adc mov jne mov push inc test mov sbb rcll lods insl inc xchg inc and cli stos sub ljmp ljmp cld call mov mov sqrtps ja pusha push jo (bad) loope pusha dec xlat aas addr16 stos scas pusha (bad) iret sbbl push jae stos jmp mov pop push repnz arpl cmp pop mov imul xlat outsl jae repz dec sti je or mov lcall orb inc add jbe xor cmp ja into call or arpl or flds insl cmpsl inc jns ljmp sar fs arpl push hlt cmp jbe test ljmp mov pusha (bad) push mov mov test or loopne out cmp ja adc adc repz jl clc je std or out stos addr16 mov jge (bad) cmp xchg arpl je sbb and fnsave mov adc loope lods (bad) cmp jle mov mov jge clc push test aaa push arpl inc jmp add push pop outsb xchg out std sub leave pop jns jmp ss mov fidivrl orl insl lcall mov sbb push inc adc push loope dec inc cmpsl cmp inc insl lcall sbb and fbstp aam fadds js je mov loop leave popa pop insb pcmpeqw xchg bound js add ljmp (bad) dec fsts (bad) ljmp jmp and stos test (bad) jno std pop ja imul int in stos lds in aas jmp sti jne outsb xchg pop xor lcall xchg mov xchg mov (bad) push push loope sbb jb imul mov jg insl fbstp push cli mov jecxz aas xchg push jp pop push jne mov and iret dec fwait lret shlb sbb jmp fisubrl int3 out jae mov xchg push mov jge dec (bad) xor mov sbb mov mov fs cmp mov or inc sbb jnp cmp enter outsl cltd call lock ja insl cmp cmpsl (bad) cmpsb adc xchg dec add or jle (bad) mov inc loope fwait xchg mov stos repz sbb xlat cmp or addr16 inc pop movq loope mov dec push xchg push gs sub sbb cli cmpsb imul xlat push xlat ret aad sub sbb mov mov jp cmp mov pusha jnp rol out add mov lds inc cs fsub push push inc pop sub cwtl pop cmc stc dec dec cmpsl mov lret or adc sub sub sahf add pushf mov dec popa pop in gs pop sub cmp mov push stos jg lods mov ljmp mov sub add add lea fstl in repz scas ret xchg pop add mov pop dec lds adc das push sub dec imul test cmpsl negb les negb mov inc dec popa ljmp jae mov in arpl sub mov rol or mov mov push push push or mov int3 ret jae cltd mov rorl fdivs dec add test lret sub inc dec xor insl stos mov es xor sub mulb jle std xchg fs jb jno pop xchg cwtl cmpl mov push paddb jecxz jns dec jnp mov dec jbe add xchg and mov pop into jns push stc mov pop mov mov iret jge and inc gs add js (bad) int movsb (bad) xchg pusha sbb fldt sbb lret imul aam lock aad xchg outsl in cmp loope xor add mov pusha pop xchg movsl arpl loop insb inc cld (bad) push jnp lods pop xor or mov inc xor push ljmp push je sub repz ror sub movsl push or das cmp xor dec faddp jmp fs jo stos push mov or xor cmp jge testl fistl outsl int sbb inc movsb repz insb repz add daa xchg jmp dec ss and dec cmp sarb ljmp add shrb jb es or fdivs pop xchg cmpsl clc insb and xchg (bad) jg adc addr16 pop sub sub and or mov aaa stos test push and xchg stos je sti cmp (bad) jae sub bound inc sbb push pop pop (bad) fdivrl cmp mov cltd loop sub lret dec mov xor xchg cmp dec adc es dec mov rorb or push jb add or jne jno je fucomi jns iret je popa jne cmp push mulb mov jecxz jmp ljmp bound outsl stos leave cmp inc fisttpl (bad) flds cmp dec mov xchg gs pushl sub divl cli sub into sub loop (bad) jle sbb or adc xor loope insb cmp and mov xchg insl cmc stos ss test dec sbb inc add imul pusha sti xor stos cmp lahf dec or ljmp lods jne loopne nop stc in addb sbb stos lret fistpl jecxz dec and mov mov ficompl mov outsl xor add lock cmp repnz test xor out xchg mov sub rcrl int3 fwait pop add or rcll imul push mov inc frstor in dec (bad) aam bnd mov ret js cwtl xor mov xchg mov out mov push clc sti dec xchg data16 jb (bad) jne lea and repz or jle xor jnp mov jno movsb leave cmp insb mov stos inc (bad) push mov (bad) sub mov arpl movsb mov mov push dec arpl jb cmpsb and jb (bad) xchg xchg fidivrl leave aad and add sarl repz pop out and loopne xchg cmp and mov sti fsubs mulb lahf cli sub dec nop es mov ficompl push mov out popf lret pop jne and xlat mov push loopne out pop (bad) sub cmc or cmc outsl dec sbb ljmp repz imul adc icebp dec push sbb insl ljmp mov cli pop inc daa fnclex pop insb pop mov or es adc cmp sub pop gs loopne rclb sbb fistp ds repz aaa ret aas pop push js dec or test lock mov inc lock pop adc pusha xor int stos out ret fildll xchg es clc adc jae inc cli mov or sub or ds lds jbe xor sbb xchg loop jle shr jae fwait mov xchg mov sbb pop sti push (bad) push lret jno sub stos push xchg stos in imul xchg int stos lea cld incb jae stos pop (bad) negb repz cmp or pop outsl add (bad) pusha arpl add int3 mov repz fwait in gs lds jecxz mov pop addr16 jae loope jnp mov xlat rolb rcrb add mov gs mov icebp mov inc lret lds mov imul add pop dec xor daa mov lods addb sbb inc insl jne or int cmp loopne in imul xchg mov jno mov aas arpl mov outsl dec ja jae inc inc add xor ret aad shl rclb pop fcomps ljmp jno jmp lea stos jmp add rolb cmp aas push and or insb add mov inc daa les xchg sbb cmc mov mov dec mov inc (bad) dec lret dec xchg bound or or sbb cmp push (bad) jo or pop xchg int3 and stos fisubrl fmull call mov rcrl pop cmp push mov mull add xchg fstps cmp mov (bad) (bad) sub out insl sub (bad) sub push enter ds repnz mov int out imull push fmul fs frstor rol aad jns mov fwait imul out call sbb ss push int xlat (bad) aad sub ret mov pop (bad) pop imulb int3 push cli fsqrt mov jb sbb rol cmp mov jbe add xchg mov lret jbe mov push ja mov dec xchg repz xchg or jmp sub sub outsl xchg sar sbb inc add subl sub leave fstpt js jg adc jb jmp jmp mov insb and sbb orl cwtl pop insl jnp jno sub test sti and xor xchg add jmp adc jg pop out dec xlat cwtl popf in scas pop mov lea jb cli test out jl push mov push loopne js int3 ljmp sbb jae,pn inc gs repnz push cmpl movsl or cmp cwtl push pop cmp aad fistl pop rclb ficoml mulb fmull das dec mov cmc aad imul shrl sbb aad iret call clc mov (bad) mov sbb lcall add push mov mov lea and jmp pop sbb jg arpl ret mov int3 out mov mov icebp mov lock push push jo bound sub hlt addr16 hlt das pop xor inc push cmp pop (bad) and pop mov cmpsl ss inc stos pop dec inc jmp in movsb std es (bad) dec in mov dec fs xor pop insb fmull mov popa lock sbb xchg icebp add mov mov (bad) int icebp mov icebp mov mov xor sbb ficoml or repz shlb in cwtl cmpsl xor stos dec (bad) imull stos icebp mov or in repz pop dec mov cmp sub stos mov mov in popa aaa or push es dec sub (bad) xchg push (bad) clc push add (bad) mov mov jno movsb test pop sbb dec xchg je jno popl inc push adc dec mov cmp mov mov repz fs movsb add addb loopne aam js gs adc jmp int int3 popa leave addr16 stos xchg ficomp cltd jae dec movsb fstpt pop lods leave xor loope outsb mov pop mov aas imul push dec outsb dec push sub movsb sbb push test cmp loopne loope aaa inc je arpl fldl push push xchg add stos pop adc add pop add push loopne cld fs imul push repz in test outsb mov icebp faddl fnstenv inc cld icebp andl mov lods inc scas leave sbb iret shrl pop popa in rcrl arpl cmc adc push cmp stos das addr16 imul dec pop test outsl stos mov mov scas jge dec lock insb mov xor adc gs xchg gs push xchg ja mov xchg push rcrl imul sub int3 sub lock mov inc jbe mov cmp mov xor push mov lock addr16 add stos xchg and sbb test fs or xchg xchg lret or pop test flds (bad) push adc std jg lcall lock and cld or out push inc lea test dec popa (bad) or xor jbe loop shrl (bad) mov out mov sbb add pop stos dec add test add jl push (bad) push es (bad) or dec inc stos scas xor les inc sahf fimull pop push pop xor inc mov repz outsl or push and xlat insl jecxz imul pop cmc mov add ret xlat push cmp ss and inc aad mov jg sbb sub mov xor mov inc jb pop push popa inc ja sahf hlt and adcl cmp adc xchg inc (bad) jnp arpl jo sub jne out addr16 pop aad movsb ret shlb add lds in arpl int push jnp xchg lea iret imul add loopne xchg xchg cmp adc pop mov pop arpl cwtl aas pop fstl pop pop mov ss or mov mov (bad) push pop xchg mov sub jo aas sub pusha inc jg repz xchg aas lods push outsl add ljmp and jle sbb shll adc xchg dec lea jno pop sbb rolb jmp cltd mov jnp icebp pop sbb movsb fdivs xchg xchg fild mov ss pop clc (bad) arpl pop mov ljmp sarb adc dec pop pop pop sub fmull pusha repz adc int mov and pop fidivrl jecxz lret mov inc cmp aad xchg xchg cli (bad) pop inc imul scas sarl cmp pop int cmc xchg lret dec xchg cmovb sub in dec jmp sub push cmpsl mov imul mov rcrb ds cmc inc fldt dec out mov sub and je ljmp mov dec jmp call pop stos jle pop fwait scas push cmp and sti dec and dec roll je repnz inc xchg xchg sbb and push dec xorb mov mov cmp (bad) loope jne or fdivs sti mov pushl push dec jecxz cmc pop cmpsl or test fisttpl fwait cmp pop jnp insb repz jg int mov jno fsts daa les push dec push out mov insl push xchg jg lret jo das or adc ljmp or insl add push sti xchg jns (bad) mov jb pop and mov dec sub das push shrb (bad) mov pop sub int push inc mov cmpsb adc lcall sub add xor jbe ret jle dec mov outsb and xlat mov mov out and cli mov sbb and int3 push or sarl xchg jmp inc adc aaa lds mov (bad) pop add bnd push cmc fs bound dec (bad) in jns nop fldenv arpl add fs pop add sbb adc sti ja out jg movsb fsts js daa push (bad) ja sbb mov arpl cld pop cmpsl cmp cli jo fisttpll ret or mov sbb hlt out movsb pop cld adcl (bad) int3 mov shl adc das ret mov inc aad out jecxz mov jl adc int3 adc xlat repz xor dec dec sub xchg jmp xor lods xor (bad) data16 xor xor loopne hlt je mov push add mov movsb bound jecxz test (bad) inc ja mov rep xor push pop ret mov mov push stos aas dec cmp imul mov lret sub arpl addr16 add xchg and insb into pop bound mov inc mov fildl mov test fcmovnbe gs or xor inc or popa lcall divb cmp adc adc dec in xchg mov push inc cmc and push int3 dec jne cli push xor mov jns icebp jae fimull push movsb imull addr16 jns push mov jae fcmovb shll int fs imul lret lcall push add (bad) outsb pop or mov fildll push add sub inc inc sub pop in sbb xchg pop int3 lods scas and sbb (bad) jp aad (bad) jl imul pop jne fucomi shrl out inc inc into gs push mov outsl push jp lds gs pop push repz stos fs dec xor jmp push ret cmp repz pop push jg divb das stc or gs push pop cmp xchg add movsl negl jp aas dec lcall cmp lret dec sbb sbb gs xor pop and jmp loopne popa aam mov cltd jns jp pop mov push push mov xor jp xor jge sbb rep inc es cmp adc cmp sbb jp cmpsl sub call lds push ret jp jns sbb ret dec cwtl add out dec and jo jno stc inc inc cmp cmp es push mov mov aaa lret jp pop pop mov push mov (bad) mov xchg xchg popa aad mov (bad) jmp inc popa push pop cmp mov (bad) dec cmpsl jecxz push in or jbe outsl cmp cmp outsl imul fsubl dec outsb fwait test (bad) xor adc pop stos add mov test dec push xor sbb jnp addr16 arpl pop pop pop push push push push dec jp dec dec inc inc inc inc cmp xor jp sub and jp sbb adc jp or add jp stc sti cmc div repz jp jmp jecxz jne (bad) aad rcl jns cs (bad) rol mov das mov aaa jp stos movsl cmpsl mov cltd fwait xchg xchg xchg xchg jp (bad) mov jge jns std jb in lahf mov out fisttpl xchg xor mov pop adc add dec xchg inc ljmp mov icebp imul xchg iret mov lea jmp xor (bad) hlt xchg movsl popf lods cmp xchg cltd (bad) out cmp imul (bad) adc pop fwait xchg xor fsts (bad) das add bndstx inc imul push mov and xor sub mov inc jnp adc pop icebp mov mov int cmp int3 call (bad) (bad) jbe (bad) xor out xor dec mov lea push mov int hlt rolb out pop cmp bound cmp inc push pop mov scas outsb ficomp stos cld pop sub lea dec (bad) xlat lods das cltd cmp xchg pop sub lea lea aam and pop mov cmp jns mov fcomp push cmc lock xor xor sbb jp sub sub mov xchg and pop shll mov dec add (bad) jl push cmp mov mov aaa mov push icebp mov cmp fild sbb gs sahf adc ljmp lods mov xlat shrl fwait stos inc or (bad) pop sahf testl cmp mov cmp dec or pushl jbe cmp and inc mov add mov into (bad) or push (bad) movsl aas je repz xlat sub mov lds imul adc and cld xor xlat and or pop cmp jbe mov inc cs jae or mov das outsl in mov pop or add in push daa mov jns and dec in cmp xchg orb cwtl adc in fs mov push add adc inc push loop ret and pop cltd inc js lea pop dec scas loope xchg push adc and icebp mov mov notb fldl cmpsl (bad) push inc scas and cmpsb dec scas icebp and push mov addr16 add rcrb orl inc xor pop mov imul repnz pop insl call push pop mov lds cmp inc pop out icebp xor in jo sub popf or cmp insl push or and and xor dec xchg pop xor pop aas icebp pop ljmp mov std cmp and ja sub jae xorl jne xor in jbe ja insb xchg add stos std aad out divl das ja movsb ja ja (bad) add aad ja push inc pop test jne mov ja stos jnp nop (bad) ss je jo insb outsb jp push pushaw bound pop pop push push push push dec dec jp dec inc inc inc inc cmp jp cmp xor sub jp sub and sbb jp sbb adc or jp or add cld (bad) jp cli hlt div repnz out jp ljmp jp fcmovbe (bad) rcl int3 into sub ret mov mov lods jp test movsb cmpsb mov cwtl lcall mov (bad) jl jle in xor (bad) xor out int3 (bad) (bad) xor pop cmp jnp (bad) jmp pop popf mov xchg ljmp mov jno dec sbb (bad) xorb gs xor fistp dec imul dec (bad) jb mov lods adc dec mov lods pop cmc fwait push xchg movsl mov mov push lea add out lahf popa fcmovbe mov pop jecxz cmc repz xchg test cmc sti jae inc adc mov (bad) test inc repz out (bad) xor stos and leave lods pop xchg rorl cltd lahf push push rorl add cmp jbe imul or jmp rcll cmp ja int je fnstenv in pop fwait cmc mov inc jecxz push popa mov daa push xor xor stc mov std negl mov xlat adc pop repz fldt mov rcrl add fildl ret inc jmp lcall data16 fwait cs sti div mov cmc xchg in jmp sub mov roll out ljmp (bad) sub add adc jbe iret and adc sub movsl repnz xchg sbb inc xor mov jnp mov inc mov mov jns mov push xor (bad) mov add sahf cmp jmp xor cltd jmp fcmovnb pop test mov mov xchg outsb aaa pop insb cmp aas lds and pop xchg pushf test xchg lret ja mov ret scas sub jmp xor cmp lea xchg into dec loopne mov xlat fwait lods dec cmpsl (bad) mov cmc or movsl jmp stc ds xchg add dec push lcall push xchg mov dec inc mul (bad) fwait dec lods scas mov data16 jg jnp sti (bad) pop cld aas dec cmpsl mov adc sbb dec stc les shr aaa mov push scas ret arpl gs add imul xor jmp inc orl gs sti and mov push add sbb sbb fisubrl cmc jae popa lods inc daa movl jb xor xor sub ficoml jmp adc sub mov test xchg inc fstps sti dec fwait out push movlps push nop jmp push scas jb das pop dec cmp cmp and or flds jg push mov lret xchg repz gs or and fs push bound jnp xchg inc push xchg cmc xor gs fs mov pop adc mov lret repz fs sti xor jmp push adc sbb and xor xor dec push push jge arpl xor aaa cmp fs push mov shlb loop ljmp repz jnp xchg xor fwait push je,pn push inc xor ret push add push or gs jmp push cmp push repz fs cmp mov jae mov fs push push xor shrl fs lahf fisttp jns jl mov outsl jno (bad) sti inc jno pop xlat ja imul insl jb or add or imul cmp mov pop dec sub push mov mov add test or jnp outsb lahf je lock pop stc jbe push adc cltd insb ja das jns xchg (bad) pop ljmp dec push cmp ret popf pop fsub scas ja imul mov test push mov or push pop mov add jb mov or dec outsl mov add fsts into adc ljmp (bad) nop insl (bad) mov adc gs mov push xchg or lods inc cltd fisttpl push cmp fwait stos mov and cli xchg imul clc push sti (bad) or jb aam notl sbb or dec jp test test test push cmp int pop dec adc outsl pop push dec or jp xor or repnz sub jnp adc mov jp mov ljmp and adc jp and cld mov cmp fldt ja insb iret jp mov add xor imulb and jno mov scas ljmp and cmp mov sbb je sbb jl cltd jp test sbb cmp loop jg jp mov sub mov je loope (bad) mov jl or cmp cltd add aad imul push jne cmc repz fistpll pop mov fabs sub inc int mov leave mov add outsl sbb adcl gs sti xor cmc sub push or clc out mov icebp dec std push (bad) mov mov aad dec xchg test sbb xchg sbb iret test lods fldcw int popf dec fisubl repz inc xlat test xchg cmp xor stos lret xchg insl mov pusha and arpl inc xor dec scas pop cltd adc loope sbb ror loop pop cmp adc sub fcomps push pop adc dec pop imul inc ret inc stc insl or dec arpl lcall cmp repz jbe add mov jp (bad) xlat mov popa icebp add jp into jmp dec inc lods inc insb jnp aas xchg (bad) xor mov cmp jno add pop xor out dec lds or push clc xor (bad) jp cs push icebp cltd sub jne in inc es jns mov jp scas lahf aad inc std jp or adc fnstsw es mov xchg pop mov jp xor xchg xchg adc aad dec mov icebp fldt sbb (bad) imul sub cmp scas test pop in aaa in rcrl pop out lods in fisttp popf and daa push imul sub test adc sbb int ja pop shlb cmp fwait adc push xlat dec mov jae adc adc shrl leave movd int sti iret pop repnz lds push (bad) arpl push pop pushl lret mov mov gs aas out jp sub inc movsl dec mov mov loop mov lods icebp jge sub inc push ret pop mov cli scas (bad) stos jp insb xchg inc or not pop mov or jnp fbld jp stc cmc out lret iret (bad) jp inc push pop imul cmpsb sbb ficoml xchg fs imul adc adc gs sub popf jp jo adc jne scas jp jno dec sbb fisttpll (bad) (bad) lods jb or xchg cli mov fisubl lcall not mov mov mov cmc lods cmpsl dec adc and mov pop mov xchg sub lea xchg lds test aam push cmc arpl leave jnp and jp sbb jmp insb sub in jnp je mov xchg sbb iret inc cltd mov or mov pusha imul xor jae jae adc and jne repnz xor adc inc inc sti xor adc jne cmp (bad) loope aaa ja arpl mov gs xor jecxz je add stos in fistl mov sub xor ljmp mov push xchg cmp xor pop jecxz ret push ret xlat mov notl xor adc adc xor xor jnp mov jnp ret adc aaa adc cli inc nop dec stos push and mov arpl roll popa jecxz lcall mov jmp xor push mov jb push jmp mov stc xor (bad) jmp test ret out inc or bound push jnp xlat or data16 mov mov lret ljmp xchg call arpl cmp lods add inc sub jle (bad) push dec pop jl mov cmp imul pop addb loop mov and cmp arpl pop and sub mov mov test cmp or cmp ljmp (bad) pop dec jnp in jmp lret pop push ficoml mov (bad) lods mov (bad) and sti ficompl xchg mov and aad push hlt ljmp arpl popf or movsb mov jg notl lea adc bts test fiaddl push pop pop mov andl arpl imul loope fwait jmp or jmp out dec push gs mov push sub test out and shlb cwtl repnz or mov out lcallw sbb jne pop cmp jne push divb (bad) cmp mov das xor jmp sub cmp mov jmp push sbb inc aaa and idivl xor sub xchg mov mov jmp andl push sahf xor dec push xor mov xor aaa push repz fs push xchg ja jae jmp push sbb div ret xchg fs push sub imul ret aaa (bad) cmp repz or xor jmp push push aaa xor adc fs push stos aaa jg jp in call outsl test (bad) fistl pcmpgtw xor sahf scas add outsl rorl push mov repz jl or cs mov inc mov lret fstpt (bad) and mov fadd xchg xor aaa lcall cmovo xchg lret jge test jne fmul xchg out push dec adc mov or pop pushf rolb sbb lretw push dec push popa imul or xlat test aam das pushf pop stos out sub enter gs jne mov mov mov mov in mov das jp jo and lods mov mov jp cmc sbb sbb cmp cli mov rolb push jp sub mov jmp xchg fwait insb aas jno xchg dec ret cltd fs jne lret xor sbb arpl inc repnz jno gs ljmp or sbbl xchg jne lea cli lods sub jne dec mov dec adc stc ds idivl jge mov xorl loop rcrl or dec imul ret mov setne imul push jne mov sbb pop dec sub pop sub sbb test xchg sbb cmp jb inc jp cld cmp sbb pushf adc (bad) sub cmp cmp xor shlb sbb int3 out cltd mov or lds or pushl rcr scas repnz clc popf lahf xchg mov imul std mov jp jg shll repz xor test adc movsl mov dec (bad) jns cwtl mov mov sarb dec dec pop push cmp movsl lret gs out jp icebp add incl sbb cld cmp dec jp xchg xchg scas jp aam loopne (bad) sbb mov iret pshufw enter into lock les data16 scas clc jp rol outsb js add jp pop mov and les jne into jne aaa testl xchg xchg push jp jb xchg aam (bad) mov in jp rorl push jae xchg imul cmp cmc inc scas xchg dec fdivs add mov pop jp jmp fs jae xchg xchg push add rcr adc push pop imul push (bad) jae movsb inc sbb cmp jp and loopne jp xchg pop insb inc mov ja sub imul cmp cmp jp xchg in jmp imul aaa nop jns push jo test mov sbb xor jnp xchg jne jmp mov xor aas fwait scas enter pop into jp fdiv lods mov xchg jp mov push jp clc inc nop scas sbb out push dec push add stos jbe les sub rcll pop sub and (bad) jne fsubs mov cmp mov cmpsb fwait sbb pop add jp fildl stc jne (bad) jp in adc mov lods pop jp jecxz mov jp sub aad lods sub mov jp jmp jp dec jae sub pop push imul pop dec push loop inc sbb lret nop sbb adc inc add repnz in xchg lret imul dec sub and jo jle cmp mov mov into std ret sbb repnz out (bad) cs loopne lret popf lods fdivrs inc int pop into outsl addr16 std sub aas jmp xchg push jmp (bad) xor sub imul xor inc (bad) cmp jecxz mov mov pop je push insl dec jp and mov jp mov pop cmp popa lcall fwait iret pop sub pushf xor cmp or (bad) mov gs lcall stc mov add dec mov xor stos sub dec arpl jae pop push jb pop adc add sub dec mov lcall xor mov bound loopne dec test mov test pop push or jp lret outsl cs fwait (bad) jne in cmp mov lock pop jp or sub lahf jnp clc ficom mov xor lcall mov sti mov push jp add push jp pop jb mov aas jae dec push (bad) je jg jp lret or fidiv fldl push cwtl clc pushf or sbb icebp or aam jecxz pop daa shrl lock or das clc jnp sub (bad) ja pop xchg jle cmpsl loope jnp imul sbb movsb test pop call data16 xor pop jne xchg iret and inc ljmp cltd inc jno ret dec into mov lcall jp sub fbstp out dec repnz mov jns xor pop cltd xchg sbb arpl mov ljmp jg and sub jmp ss cwtl xchg dec or into in dec xor jecxz mov jg jmp jg outsl mov pop (bad) mov jp xchg jnp int push inc jne jecxz lds (bad) mov push jl gs xchg jns mov nop ret add insl addr16 repnz into adc loop xchg fidivrl mov adc or inc mov dec jo mov outsl push out xor loopne loope mov sbbl (bad) mov test pop dec jp jle dec out and jne mov test stos adc subl jne movsl xor lock jnp or and insl rol and pop jnp nop add jp bound xchg mov xor and cmpsl inc dec sub aas jno fcomp add mov ret js jmp inc aas jno or mov mov add rol sub mov rorb sbb inc rep cmc push pop stos jp rcrl imul sub dec (bad) xchg les daa jl xchg fs adc and fdivrl xchg movsb imul rcrl loopne cli (bad) jnp push cld jp ret cmp dec ds xchg out push push jp orl inc and add mov inc jg mov in insb fwait ror sub push adc lret test jne outsb ja xlat icebp cmpsb mov imul mov jb cmp mov inc cmp or push (bad) dec jnp and imul cli js jno shr sub jnp mov or mov lock loope sbb aas test mov repz jp (bad) fiadd cmpsl pop jge jo pop inc iret push lock mov lcall popf insl xchg cmp imul dec (bad) out jp insl inc in je cwtl inc jmp sub jl jo lahf notl or jp jmp lret inc mov out push jecxz enter pop icebp mov dec lock imul jp push xchg popf add dec rcrb outsl xchg and ret rcr mov clc call test jp ds dec xchg gs aaa jp inc lds cltd push fstl movsl dec push mov popf adc inc dec cmp inc in aad jp in notl ja mov sbb test fnsave and lock shl lods pop or gs sbb xor pusha pop (bad) in push stc daa jp lods dec divl lahf sub ja jp pushf cmpsb push cs cmp jo out scas and pop dec imulb mov pop jp cmp nop xchg ja jp (bad) mov das insb in insl jbe shr dec jnp popa mov jp cmpsl loop push mov jp call inc mov or (bad) scas jp imul adc int sbb mov loopne arpl and loope or stos lahf xor push or dec push xor or jne sahf mov jno sbb or shrb jne jl nop jnp pop std jp in lods fdivrp test pushf jp mov out add mov les xchg sbb lock sbb and (bad) jno ljmp sub je cli fiaddl test sbb mov jp push and fadds cli pop insb jmp clc test push jp jecxz jo test jbe int lret add pop pop rcrl jp hlt lods (bad) lret dec out arpl je jno sub fidivrl sub outsb push enter daa fmull stos pop lods cli aas scas xchg hlt fwait fs mov push popa jnp jns sbb xchg mov cmp pop xor mov lock push mov jecxz mov adc rcrl aaa xchg or xchg xor lods or mov das and mov jp xchg pop cmpsl aas fmull lret add xchg (bad) jne lcall mov and push cltd adc frstor (bad) pop das lret sub ds mov mov (bad) jno xor popl adc aam nop std fwait adc dec jo pop (bad) jecxz and (bad) cmp dec mov pop bound rcll mov lea jle jp inc cmpsb mov jbe test sub jnp out mov mov xchg mov xor mov pop mov dec mov jp fisub in jp xor (bad) mov outsl jno sarl ss addl sub mov leave in cmp data16 divl jp fs push addr16 les lret mov insb in cwtl and adc clc jmp add (bad) in mov das mov inc mov xor mov fnop cltd jp and and pop (bad) js sbb dec or (bad) add iret inc sub cmp xor mov jne js cmp and push ja stc cmc iret mov (bad) sti or arpl xor inc cld lods fwait xor push pop sbb mov leave movsl ret repz jb dec fdivrl or int frstor push mov jae xor inc jbe push xor xor je cmp jnp sub hlt xor and jle sti pop imul mov xchg push xor inc hlt lods les pop daa xor adc mov add lret mov pop insb and (bad) rcrb in cmp js pop ret and sub sbb repnz jae (bad) jae int3 push adc imul inc dec gs jno imul dec fs push pop xor gs imul gs addr16 ljmp imul pop jecxz push fs fnsave dec xor cmc pop jmp push xlat dec out imul andl push fwait xor xchg and adc jbe cmp jo jb push push aaa and xor push xor xchg cmp inc cmp inc dec push dec jmp adc xor dec pop push push jae push adcl dec pop addr16 mov (bad) mov push pop push aaa cli repz push fs push ret xor adc (bad) dec aaa inc repz fs push aas xor aaa cmp mov sti push aaa fs mov adc test xchg push (bad) pusha mov add (bad) (bad) addr16 add inc imul rolb inc (bad) dec test pop sbb add js jne cmp mov repz mov gs loop ljmp sbb xor pop push push xor xchg fs push mov push mov shll jecxz repz push sbb aaa dec adcb (bad) xor lcall push fidivl add sbb inc jecxz xor push arpl out test int jns mov pop fisttp sti sub fwait imul les loop mov mov lods arpl gs mov das jnp jb lcall leave sarl fcmovne repz stos pop lds sub dec test movsb push xor push add (bad) cs aaa dec repz fs push push lods sbb fistp add dec aaa adc rclb sbb push mov cmp aas (bad) pop fldl ror aad lds xor in xchg mov pop mov dec xor cmp test cmp mov cmp rorl and out inc loop insl cmp sbb dec js andb xor in fldl iret (bad) xlat sub int3 pop inc lods test repz test pop cmp jg pop sbb in mov jmp cmc dec mov lods (bad) xlat pop xchg mov jge cmp push jnp insb cmc icebp jnp pop cli (bad) mov mov test lea pop fistpl xlat popf jp xor popl jbe xchg fildll jnp in push jp pop push mov std sub jp jb enter jp (bad) jg je pushf xchg jp outsl les hlt dec or jp js sub lcall test clc or mov pop fstpl stos cltd sub pushf jb test or inc icebp stos scas jns int mov dec std push movsb lods (bad) jno or fstps inc ret sub push dec out sarl and aam mull sarb enter shrl cmp sbb push jnp sti cmp (bad) cmc repnz cli (bad) or inc jb sti sarl or daa jo push (bad) shll xchg jp adc ret incb or fcmovb dec pop sub jle cli jne jbe push lock bound jp ret les int3 cmpb lahf outsl lods inc jp das (bad) aam xor sbb sub add mov fnstsw in sub jp adc add (bad) xchg imul cmp sbb sub lea pop mov mov inc and lret adc shr insb imul push ja and scas lahf xor jecxz push pop in sbb cmp (bad) mov orb aam push int3 fdivrl dec (bad) and cld ja dec cmpsb subb cmpsb mov push lods imul cmp ljmp loop lea xchg jbe dec jp out outsb dec les mov cmp or jp jge insl jmp (bad) insb lcall ror mov jl dec jp addr16 out fbld xor xor fwait jp mov jp jnp,pt and les aaa cld sub (bad) cmp or hlt stc dec pop jp pop jne pop add jp fs out pushf xchg int3 ss (bad) outsb cmpsl mov mov mov sbb jge sub mov jp xchg jnp dec movsb daa jl cmc xlat lahf sbb (bad) lock sbb das ljmp outsb xchg sbb (bad) dec jp xchg and mov jmp jbe sti or popa jp andl cmpb cwtl fstps ljmp push loopne sbb in insl xchg sahf dec jp mov xor adc es sub (bad) int3 cwtl cmp mov jp dec lret cmp push outsl (bad) call cmp arpl adc repnz subl ss pop jp std mov outsb jp add in fdivrl popf adc shll jecxz lds xacquire or shll mov mov xchg or outsl test pusha mov jp sbb (bad) pushf jle adc cmpsl or xchg fidiv int pop mull mov test sbb rol and mov mov pop pusha or cmpsb pop pop sarl xlat push cmp jp fistp lods inc inc je imul add xlat ja repz movsb (bad) cli lods loop stc shll dec in das push xorl ljmp jae sti jp fsub xlat test add addr16 pop xor jnp fwait inc mov bound sbb les jg cltd push arpl enter es jnp jno and loope push (bad) test add frstor push into xchg jp pop push popa inc ljmp int3 jp aam sub jp les enter daa jne mov adc sahf aad pop pop jp add daa jp push out aaa add push mov lcall call jp adc sub xchg test test mov add jne sub mov mov lds mov imul fcoml cmp stos jno stos or nop pusha jp ss mov lahf pop jp popa xchg adc jmp jp sbb xorl je lock stos lcall add xchg jb (bad) cli xchg popf xchg and cli pop enter pcmpeqw lods (bad) cmp cs jp jnp mov jp testb push (bad) sti jnp push pop jl lret or pop cmp scas jmp in outsl bnd cwtl or jp sbb xchg xchg jecxz add rclb inc sbb jbe sub loope (bad) xor gs bnd insb lea inc out lds push mov ficom or sub cmpsl cli (bad) and xchg test fs enter jns mov mov enter and cld push fidivl clc cmp sbb mov aam xor pop bound outsb mov lock outsl test scas fwait jno jne loope xlat ljmp cmpsl dec movsl jae cmp lcall push jecxz popf push jecxz ljmp fstpl sub jge int xorl (bad) cld mov inc lcall (bad) jno cmp lea xchg adc and pop push sti adc jnp and jg outsl out or pusha nop roll add dec js lret jp mov mov popa inc xor clc mov lahf hlt push sti (bad) mov jp out enter insb ret cmp sbb repnz jnp sbb mov repz sub mov jp rorb lea pop cmpsl ds fwait pop je enter dec jne lods or adc (bad) jne cmp mov (bad) xor cmc cmp jne inc lods mov sbb repnz addr16 dec jle jp xor in or pop outsb ss mov rorb cmpsb shld lods pushl test adc ret cmpl mov jns pop jp lea aad pop fwait iret jg jp or push jp cmp loopne in jp daa add test imul push xchg jp dec test and cmp xor jne sahf testl jp das push adc jg cmp hlt out (bad) in jp loopne jae dec push pop jle jne (bad) jmp adc in mov ds rcrl repnz into das jp dec dec push stos leave jp mov lea enter dec ljmp hlt sub add rcrb inc mov and push sbb or pop adc pop or dec sbb pop sbb gs mov jp bound nop dec out xor fdivrl jp jecxz add xchg cmpsb movsl into test ja (bad) xchg cli sahf not add popf jp int3 ljmp jne mov cmp add fisubl jp mov add dec jg jp loopne jne mov mov push stos mov or pop js clc rolb mov mov jp lahf arpl mov mov (bad) lock and out mov mov xchg pop dec add movsl jmp pop jp push pusha loop adc les fwait jno xchg insl pop mov add cld jp push arpl mov mov push dec sbb out int jp (bad) in scas jp adc cld inc out leave adc sbb or imul jp stc mov push lret jb jp insl aad xor aam push cmp or pop jp dec daa mov or xor jp insb xchg cmp fwait add dec adc mov ficom xchg jge jo lcall imul xor fnstenv mov fcoms add jno popa adc dec stos fcoml mov adc inc cmp mov pop das test sub cmp jno mov cmp add arpl (bad) dec gs cwtl jp (bad) mov cltd adc jge aaa mov jne test dec and jg mov sahf or icebp mov adc jns xchg scas lds fistpl mov or cwtl outsl mov loope cmp xchg fdivrs mov rclb cmp fdivrs jle add jp sub push and aaa popf je xchg adc cli insl jb xchg fwait jnp mov insb jp jbe mov jp repz test clc jnp pushf movsb push sti sbb cmpl aaa jecxz inc xorl push xor xchg fdivrl mov sub setae gs call fucomip push out mov fdivl idivl push cs std movsl int pop push movsb xor jp (bad) in cmp in adc fildll neg xchg nop push ret rcll jb xor add addr16 pushf les xchg fs add and push adc xchg jae sbb mov lcall xchg stos sub push pushf fmull and ljmp push out push inc ret mov sbb dec jp sahf pop cmp stc and xchg cmpsb mov fadd pop jo sbb sub xor jns or add jp xchg sahf pop cwtl aaa (bad) std jp (bad) mov les in inc in repz roll sub ja pop xor out out jp adc inc aaa loop pop pop aas jne int loopne add repz prefetcht1 jp out ss in jbe fisub lea and pop aas mov cmp sbb arpl jg dec les jns (bad) enter in cmpsl jp inc inc negl (bad) mov lret imul mov mov jp scas or int and sub (bad) loopne inc jno mov lods lds pop loope imul add gs jmp mov ds es mov fbstp lods inc in adc xchg mov mov lds cmpsl or sub mov out push pusha xchg (bad) addr16 aaa inc xchg jbe adc or mov fmull shlb and imul sbb lock xor jp popf sub hlt imul xor add inc jno mov fcompl test in pop cmp out clc mov jp or or movl sub cmp jl push loopne popa (bad) xor jp mov aas xchg jp (bad) aam fwait mov test and mov into pop jp daa (bad) mov or mov stc aas cmp test iret pusha push int3 xor int xchg insl push sbb cmp jp shll test les lcall jp repz pop sbb dec gs inc mov imul jp xor daa jp outsl lret sbb pop mov and mov sti or sub aaa xor movsl push into add dec and (bad) jp mov fcmovnu mov cmc jp push xchg mov jp push (bad) lods lods push jmp jp jae (bad) repz or cmp aad mov or pop xor lock jp sbb hlt pop pop fiaddl dec mov (bad) jne adc push mov ss hlt xchg jmp adc or and loop outsb or xchg mov lea icebp addr16 sub jo test pop jmp insb aam xchg test dec (bad) xor mov loop ret pop (bad) mov out cwtl pop xor cmp ficomp mov mov data16 sbb mov adc (bad) ja jne push and jp stc fisttpl leave in add pop cli aaa mov cmp pop and mov les mov pop sbb sbb stos test dec mov add ss int3 loop inc jae add xlat mov (bad) gs push mov xorl mov mov nop or cli jle dec lahf outsl sbb and push pop mov cli pop mov jmp (bad) jno imul push fisttp pcmpgtb mov (bad) fcompl dec sarl cmc movsb (bad) pop stc test push jnp sti lock repnz cmp lds xlat push pop fidivrl (bad) mov jmp mov addr16 dec sarl push dec fucomi pop jae lods stc lret sbb lret jp mov mov sub (bad) call mov outsl ja mov and dec gs test fisttpll pop data16 dec push sub daa imul lock jno jbe adc mov ljmp aaa or idivb jp jge dec xchg addr16 jp cmp sahf jmp push cmp push call jp sub ret mov xor sub pushf ja imul lods (bad) xor mov xchg jno sbb dec js das movsb dec enter nop inc adc dec adc sbb xor sbb imul repz pop aam pop leave push out jp jge and jp pushf cmpsl push in in imul sbb push jmp sbb scas mov xchg adc (bad) mov sbb xchg in ljmp cmp cli cmc icebp sub add fwait mov jp cmpsb cmc jle xchg test cmp dec popf jp mov mov aas pop pop ds sbb aas cld faddl jp hlt sbb dec clc cli mov push jecxz pop add popa adc or mov inc and (bad) xchg out or dec pushf jp push xchg push add je rcrb add jp fbstp mov push ljmp lea fcmovnbe mov outsl dec sub cmp es es out flds xchg mov xchg fcoml (bad) cmpsb xchg insl mov cmp (bad) mov jno ret out jnp gs pushf idivl imul jp mov cmpsl jp test in push jge xor loopne inc icebp cmp xor jnp jp and mov cli out in and cmpsb dec jp out add jp call push js fdivrs movb iret std sub jp push pop push jp fs mov loop dec push fcompl mov jp or or ds (bad) jnp jmp cmpsl mov scas mov sbb inc loope shll insb inc mov fwait cltd sbb mov mov jp lret idivb sti jo jne jg cs mov lods pop lret outsl call pop jae out bound and outsl sub sub int pushf xchg cmp lcall mov or mov in std xorl arpl cltd int3 and jae pop mov jl inc lds mov push jno mov test ljmp jnp outsl pusha dec mull jp xlat push and dec add (bad) mov inc lock bts jp scas nop mov push fstps or lahf mov jno cmp xlat xor clc cmp cmp lock sbb and cwtl shlb rclb lock ja sub out insl inc sub sarl inc mov outsl lret popa aas mov mov push addr16 and dec and movsl push mov jne test mov or fimull das jp lods inc daa bound popa jp lock mov in fimull shrb jne xchg mov jp xchg addl add push mov mov pop mov mov addl mov pusha mov mov fsubs jecxz xchg mov push int3 lahf aas push in (bad) cmc mov or dec fwait cmp inc and cmp lahf out dec lods xchg fildl repz or (bad) mov lcall cmp xor inc mov push add push sbb fst add test pop fdivrs add push dec fs mov jnp and test jmp cli pop aam xchg mov xchg push addr16 sbb das add fwait inc in mov mov hlt sbb test fimull sub rorb mov lret insb jb cmc sarl fnop mov jp sub push xchg or add inc test hlt jp jns cld xchg xlat sti mov ja xchg and jne sub pop or lcall js sahf cli push cmc mov and data16 pop cmpsl push loope inc jnp test and jne inc xchg inc aas xchg dec xor pop add decl cmp mov mov gs xchg and jp and dec mov lcall jns inc jle test lret adcl sarb mov js shlb jnp add xchg inc outsb xor jns jp sub push pop lods imul (bad) scas xchg adc inc lods pop xchg pop es push cmp outsb jp inc sti cmp push pop pop cli pop xchg pop adc jg popa push sub inc jo ret js sti in cmp dec mov mov hlt sub je and adc pop jne mov pop imul mov jnp jno add jp pop loope std pushl sbb mov mov frstor adc ja mov imul jne aam xchg js push xchg cmp test cmp jns sti push std or xchg sbb dec push or xchg test mov inc (bad) fs es push jne (bad) sbb hlt mov das jp aaa test cmpsb sub pop adc add mov mov push in add xor mov sti jecxz xchg jp clc xchg pop xor rcll std and cld or imul jp sahf sbb push lcall je test ja loopne pop imul testl mov mov lds ja jae push into sub lods imul mov xchg fnstcw jb push test pop test mov pop mov lret push pushf hlt xchg in add push push call aas out mov and sub jp jo adc mov and jle pop jp lods nop push inc hlt jno rcrl nopl push jae xchg pop cli out inc lcall adc add out push add fisttp jp pop (bad) (bad) pusha sub ljmp xchg loop cld pop je loope xchg gs mov xor fcoml pop push mov (bad) cltd stos push fdivrs dec cmp pop jmp test jb rcrl inc jp xor stos mov jl xchg mov shlb ja xchg ja mov int3 mov jne movsb (bad) mov dec adc imul inc xchg add loope jnp (bad) xchg insl push aaa cld ficom out rcrb pop jnp inc xchg and pusha gs and cmpl lds jns and lret pop ss jb out ja jmp cmp adc nop add dec cli mov mov dec xchg xor bound cmp arpl popa mov lcall mov sbb push or sub xor pop mov ja loopne cli xor jge mov ja sub sub test dec add jo pop jp into jb (bad) xor addr16 xchg pop mov xor add clc imul and jae jo mov fmul out movsb addr16 pop mov inc dec daa cli cmc js rolb jecxz inc pop push popf pop (bad) lret add jae sbb adc jp push int dec jmp jge lcall cmp lret out push adc mov pop mov or in sub cmpsb les pop pop mov movsl lods stos fwait imull pop sbb cmp in cmpsb shll arpl je loop (bad) mov mov inc inc dec cltd xor cmpsb xchg mov inc or push cld mov ja out mov (bad) ficompl cmp clc jmp popa test xchg rep in ret cli repz lea push adc sub ja leave push xlat cmp fdivrs dec mov mov or jnp pop push pop sarl ja xlat sub movsb subl (bad) addr16 cld nop and sbb out pushf xchg inc mov insb dec bound add jp xchg test or xchg daa mov jno enter nop lret xchg or mov jp mov mov insl jge and in cli sub pop jmp dec mov mov pushf lcall insb (bad) cli cmp fstl stos lea mov mov and mov aaa xchg push pushf bound mov adc mov gs jle mov cmp je mov das adc dec insl out std cli jmp mov xchg pop or cmp xchg test dec sub and xchg es pop icebp (bad) cmpsb mov fwait sahf xchg into add aam out jp push jle je mov jmp out pop aaa sbb repz xchg es mov icebp insl loopne cwtl cli mov je sbb lcall daa cli clc jp pop icebp add into test in lret mov pop mov pop aad ret pop pop popf aam jp mov lock (bad) outsl std aas lea jns sbbl out fsubrl cmp mov mov jp inc popa xchg out cmpsl in iret sti adc mov fsubs lods popa bound fmul jg gs mov in jne jl push popf jg sbb jp xorb bound sarb mov cli stos lcall inc cltd cwtl sbb stos mov xor mov dec (bad) cmp mov jp mov inc dec aas fwait je sti xchg push mov test loope adc pushf dec jnp mov inc (bad) xor cmpb mov push sub sbb add lret (bad) pop jp mov aas mov jae sbb jp out inc sub xchg or stos ret mov or dec mov push xorl stos sub and pop inc jno cmpsl push mov por fildl push jmp add jecxz cmp push mov imul add dec (bad) iret sub mov lock (bad) xor lret or xchg xchg pop jp push jg out adc ja sub scas sbb hlt jne cmc (bad) mov icebp mov clc dec js push jne adc mov call lret cmp bound loopne push (bad) repnz stos test or sbb jmp pop jne mov xor jp inc mov scas inc jp xchg sub dec jp sbb lret aam adc (bad) std jae dec push inc sub and bound pop mov (bad) stc lret ja pop cmp and scas mov nop (bad) xchg std (bad) call out xor pop jecxz test cltd test dec jg aaa jge cmp js out mov lock or inc jge cmp (bad) shrb mov push dec in cld and push leave sub jnp das or xor adc inc daa data16 lret gs mov jno jp bound lods dec out xchg lret aad cmp pop xchg out andb jp imul mov das addr16 dec fcomps add jp adc jp dec jmp xor pop mov pop xchg mov fdivl jp add jp (bad) into in lcall lds add inc and push test mov mov (bad) sub popa mov xchg fmul jno inc push and xchg (bad) mov cld jle mov inc add call mov sbb push bound sub jnp pushf icebp jp sbb repz cmc xorl outsl repnz mov aaa gs mov mov popa jae addr16 insb jo scas sbb cltd xor jp mov or mov push lods push jp or inc (bad) cmpsl mov std out jo xchg mov sbb push test sub aam fcomps cli xchg mov cmc cmp jp dec popf adc into lahf aam cwtl nop jnp sbb mov fcompl xlat and xchg mov add xchg dec jp clc mov (bad) jp jne add (bad) push lea leave push push dec mov data16 mov jae fs imul jp push mov faddp xchg jp inc out icebp std mov dec int icebp and mov aas pop xor sbb or push fs or mov and ljmp pushf enter pop mov test pop jne ss out push mov call sbb jno dec andl popa xor pop xchg sbb aas notb cmp xchg (bad) idivl adc in dec fnop test jno add and sbb mov jg jp push and or jp out push mov gs or lods jecxz fmuls push jp xor lea repz sbb mov mov push aaa sti jl mov in lods cld jmp push mov pop or inc jp cmpsl (bad) out sub and cli adc jle inc pop xor pushf jnp xchg pushf cli js (bad) jb (bad) cmp imul ja inc push sbb and xchg rcr aam sahf adc cmpsb jmp loope cmp test pop and mov ja movsb xchg cmpl in add xchg xchg adc xchg daa xchg and fstps dec (bad) mov das jp sahf xchg add pop xchg sbb push mov and or adcl sub lock imul or jno test fdivs aad pop mov push sub pop mov jl push es imul dec je cmc push fidivl jp xchg ss fidivr jnp lahf sbb (bad) fstpt aad mov jp gs pop jae loopne imul pop jp sbb push pop sub dec inc bndldx jne pop pop sub test mov mov (bad) repnz xlat fdivrl das push sbb xchg sarb xchg jo add jbe jmp dec xchg mov loope mov dec inc jp pextrw adc mov jp dec in mov push jp add cld or cmp cmp mov jp cmp stos fidivl in pop int in push dec out jp jl cmp pop (bad) sbb out cmp jp sub and repnz push cmp ret in dec push mov and adc pop mov push push jno dec mov pusha lock adc and mov xor add jp jbe dec es xchg jp scas sti mov jp ds or mov and mov mov pop (bad) jecxz mov movsl loop mov mov inc pop sti cltd xchg bound (bad) aaa iret add push jbe out mov adc jae xlat cs pop cli jle jge jp dec loope cli push fmul stos lods ja cltd repnz hlt call jp (bad) aas ret fstpt xchg add pusha gs sub mov (bad) and dec pop jp popa popf fisttp mov sub inc mov add cltd sbb mov cld fcmovu pop mov dec lds (bad) ja dec shrb pop sar outsl jp movsl inc repnz ret xor jp fisub xchg mov pop xor adc (bad) xor ja mov leave jno mov lcall stos jl int mov push loope jne jno inc movsl aam ljmp jmp icebp (bad) lods rcrb mov mov xchg shll stos push addr16 pop cmp mov aas rolb mov insl std xor dec ret mov idivb cmpsl loopne leave ja or mov cwtl repnz je mov cmp mov gs inc imul incl sti and mov iret pop sbb sub cwtl sbb scas add cld in inc sti iret data16 popf enter pop cmp popa push cs adc dec clc xchg sarb js or jecxz mov cmp push pop (bad) add pop fxch and jo cmp in cmp adc test jno (bad) mov pushf push aam adc sub adc aam repz (bad) jp xor cmpl popa cmp jp adc jns nop sbb xchg xor cmp int3 rolb (bad) mov mov popf jne das or push jmp mov lcall sahf js mov sub lods cwtl out fcomi sbb fst leave jp in adc lea or cmp aaa mov xor xor mov jecxz adc push fimul cmp mov jp mov mov jl (bad) insl imul and add jp hlt or cmp jb mov push pushf jp mov scas add push sub jae frstor xchg pop pop and ds jp cmp xchg lea sub push or dec (bad) pop jp sti movsb lea aad (bad) jo cli cmpsb imul les fsubr sub ret icebp (bad) pop xchg enter mov rolb jmp mov pop and int3 scas (bad) insb test jne prefetch or xchg mov into stos push jp fnstenv jns mov cmpl cli mov push pop or sbb cmp ljmp js imul xchg popa and ja mov jp addr16 pop insb add notb (bad) jne mov aad (bad) shl mov jp sbb jno test mov or or aas mov insb loope (bad) or or xchg scas jp fdivrl (bad) jp sti mov gs fcomp into sarb cmp shll sbb (bad) jp ret idivb cmp mov jnp push add stos or pop add rcl push pusha jg xor mov jp mov cmpsb cmpb cltd add rolb mov add repnz adc mov jp xchg mov ja mov mov or lahf push inc fidivr mov sbb sahf in in jp aad jo sbb stos pop adc ljmp inc into sub add fdecstp inc ljmp add je aam decb push pop mov movsl push ja (bad) lock insb mov cli sub pop pop ja lods aam dec pop lret sub outsb int3 cmp shrb sti dec and mov fldl lea icebp jb mov jp push xlat bound sbb jp add stos ffreep jle imul push adc pop fcmove inc imul xor jp lret scas cmp mov ja insb inc sbb (bad) cmc clc inc fwait mov xor iret jno jp jle mov ja lahf jns lret push dec cltd jp (bad) aaa dec leave aad add pop mov and cli jne stc pop fldt imul not popf ljmp mov inc sbb or jp jno add mov adc fwait jp mov cmp sub loopne mov cmc insl add gs je inc repnz sarb push sub out aas repz xchg xlat inc scas mov xor mov mov xchg leave sbb cmp add jp mov and pushf xchg cmp popa jb sub jecxz jp icebp testb fldt and rcrl or mov push jl xchg mov cmp popa (bad) mov add mov lods pop ret cmp lds mov ljmp nop jp and or stc dec test enter mov cmpsb mov xchg loopne jp cld lock mov xor scas cli pop and dec pop cmpsl cmp push movsl push addr16 sbb xchg cmpsb sub add jno rcl jno nop xchg in ljmp lret and fiaddl cmp dec jne imul mov popa jle stos pop xor in into sub lahf jp inc out pop push inc xlat add mov idivl jl gs into inc jae fidiv testl push xchg jp xchg sbb test jno sbb pop and call jne aad in test xor sub pop add jmp mov bound cmp iret cmp cli mov popa in dec cmc (bad) mov cmpsl and inc ret fnstsw in loop add jp inc mov icebp dec ss cli mov adc sbb divb pop les lods and lock mov popa jecxz add push out dec ja jg add pop xchg dec ja decb mov shrl rclb lds aam jno in sbb lahf cmp and cmp jp xlat out or push lods jno icebp inc xchg jnp jp fnsetpm(287 adc jp ss dec pop xchg out cmp xor sbbl mov jmp shrb testb jae mov sub das push jne pop jnp push jg xchg and jp pop fist sbb and jmp outsl jne shlb ss mov nop popa adc mov xchg sti and push stos test push jne jne,pt add mov leave (bad) loop add (bad) cmp in addr16 das push stc je cli pop cmp xor imul and push jl cmp xchg nop mov jle mov mov cmp aad push xchg cli (bad) jns pop lods mov jp shll push rcr inc xchg push cmp in jo cmp adc push (bad) dec push sub rclb fisttpl jb push jp adc push (bad) (bad) das insl dec ss dec and sbb aas jnp jnp fdivl orl in std jne lret dec xchg lods call gs addl int rorb mov and insl inc jp out and mov lret jno cmpsl int ljmp jnp push push jecxz lds js (bad) repnz dec testb lcall imul push or psrad cli sbb es jo pop (bad) jp mov arpl jno jbe adc cmpsb ret mov jecxz pushf or pushl lcall test pop push cmpsl pop mov (bad) jne mov pushf mov jae xchg mov test mov idivb inc ja push sub scas pop mov mov xor adc jp sbb adc stc xor pop in add icebp jnp loopne mov adc lods mov push add jne insl or and xchg add hlt add sbb jg mov fidivr pop sub cmp sbb mov test scas push leave dec xchg mov andb adc push sub out cmp test adc inc test or imul push call mov push sti or cwtl out mov lcall jbe mov jg es aas aam cltd cwtl mov flds mov jnp xchg add sbb outsl and lods inc dec inc mov xchg jp sar jno ljmp lret push bound or dec sub jnp je lds aas jecxz sti (bad) or push data16 sarb xor xchg pop xchg ja and rcll jp popa shlb or jge repnz push (bad) cli aas dec sub in jmp adc pop scas dec lock push ss insl mov cli pop xlat or jp mov push addr16 test jbe jnp or xlat jne movsl sub xorb sub add mov xor cltd push cmpsl xor in jo ljmp shl rcrb cld mov add out imul add and sub bound dec pop jp sbb addr16 jecxz lea psubsw sbb repnz pop or lcall mov jne loope leave mov aam outsl add cltd cld hlt inc adc jae pop and (bad) and sbb xor lahf lock (bad) movsl sbb mov inc xchg fstpt add mov lds lea xchg leave je and out fcmovnbe or push jmp imul popa fsub daa xchg jmp mov loop or ljmp hlt mov pop adc aaa ret popf jne sub fstps mov sub mov xchg add (bad) lea arpl adc sbb lret js in sbb inc xor xchg fwait es jecxz inc jp jbe mov mov (bad) out cmp mov pop (bad) pop lods and push sbb sahf xlat test add addr16 xchg or jg lods dec jmp adc dec imul mov push sbb sbb push pop adc rcll jecxz push cmp adc xor jmp pop aas mov negl arpl cmp inc stos scas push jp fs xchg and sub ficompl push or jp jg (bad) xor leave push dec lcall and mov daa dec push into dec mov cmp lea add adc (bad) and dec fildll adc adc cmp sub daa push jno push (bad) jb je push mov and mov iret fistp loop sahf xchg cmp mov dec dec xchg cmpsl stc mov jp,pt in aas sbb xor nop pop xchg jbe push and xor imul into push es scas mov fistp pcmpgtb sti fisubl das push pop aas loop mov push jns jmp cwtl mov imul adc sub jp mov add push add mov mov jae mov dec xchg cli lods dec inc sbb test mov jmp cltd jp push int3 fstps add xchg sub and insl dec push jno sbb xchg loop jp stc out fidiv lods pusha pop enter cmp pop mov rclb lcall dec leave dec pusha pop pushf cmp jp or (bad) std jp xchg mov pop ja xor loop scas jns jp std nop lret cs movsb xchg mov push lea jp push lcall (bad) loop jne pop push xchg imul into sbb mov ret jne test js sbb xchg push stos push into mov out jp dec cmp daa xor insl test mov (bad) lock or mov lret sti cli icebp add js jp fimul jns shlb popa inc mov pop fwait test imul ja lds loop mov hlt and or aad fnstsw cmp add cli mov mov fdivrp cli push pop or lret movsb xchg (bad) mov cmp ja push sahf ficoml mov iret push stc fwait pop out pop cli cmp jp inc xor sti sub repnz mov in int popa xor xor lea mov pushf add stc stc jnp xchg (bad) fistp cwtl sbb bound in and lods mov push adc jbe imul mov out jne movsl sub (bad) cmpsl fsqrt mov jl pushf jnp xchg and inc ss cmp or pop (bad) adc xchg arpl icebp jp push loope add sub dec and xchg (bad) push repz popa les mov jno adc jp fdivr aad loope mov mov int3 sbb ljmp jp push xor sbb sbb sbb jb mov sub fsubrs jp and arpl push jne jge ja sbb jnp xor push mov cmpb into repnz push fs lret jb mov cld jp sbb adc add cld popa ljmp test inc jp push sub xchg lahf loope jae inc push xchg push js cmp stc mov fs xor sbb jp mov cmpsb int3 pop (bad) in popf aam pop xchg aaa sub inc fwait push popa cmpsb xchg insb test jl out dec xor mov loop jp push imul fnstsw ret test jb out mov jecxz cmpl fdivrl pop lea mov dec xchg pop stc scas dec mov jp arpl test mov ret jne add movsl ss mov pop cmpsb popa scas mov addr16 (bad) stc imul sar xchg jo dec mov mov aad in fwait pop jp sub push xchg pop fidivl mov mov jp stos arpl jmp push mov jo ja jl out dec or nop es add dec test or insl inc insb and fsts dec dec pushl push and sub scas mov lcall (bad) adc lds adc xor dec loopne fldl adc pop popf push pop or out jecxz jle jne arpl pop push xor and add (bad) cld cmc cmpsb jne pushf push vmread adc cmp je jg push cmp and cltd sbb loop cmp xor dec data16 mov dec call loope call rol insb out fistpll xchg adc add push fwait mov (bad) imul jle cmp xor adc dec xchg ficoml jp ret ret jno push (bad) mov mov push jae add xor jnp aas shll inc daa jp adc dec push push xor mov mov mov popf jg sub xor cmpsb adc sub sbb and repnz lcall xlat cs es pop aam nop xor push sub cmpsb ss adc cli in idiv (bad) hlt xor cli push hlt std mov adc jmp sbb jg cmp ljmp mov xor xchg pop mov ja jnp sbb jecxz orb jno mov add jp ficomp mov jle fidivrl push aaa pusha lds push jp je repnz cltd imul sbb jnp fwait test fldcw sahf xor int3 js jnp in inc dec jp insb inc movsl push xor addr16 sahf aam pushf enter popl sub scas mov cmpsb (bad) fisttpl mov gs push (bad) and sahf fchs cmpsl jp push movsl mov push jnp sbb (bad) jne sub fwait (bad) movsl jp mov test jp sbb aam sahf push ja hlt xchg fsubl or cmp add insl push jp xchg sub adc cmp fmulp pop xor mov add mov inc sbb mov int3 out sbb sub jp or xor xor int3 ss jne pop mov out jo aaa and pop or and add dec jp inc xchg ljmp pop jl stc ds jnp push cs repnz (bad) pop (bad) imul cmp mov aam adc sbb push cmp cmp mov jg jnp jp scas push and ds js sbb mov divl andl (bad) ja lods jp pop jnp push sub notl pushl jg xchg fidivl cmpsl int3 and repnz jge jp xchg loopne xchg daa xor imul push int3 rep icebp lahf sbb je dec cmc xchg nop jnp fildll jp sub and jecxz jne addr16 inc enter xor sbbl std mov ja pushf xchg sti sbb cli jp aad es dec mov pop mov jo lret cmp sub enter jp mov jp insl sub pop mov xchg gs xor test repnz std js cmp (bad) fs imull insl rcll sub mov adc popa pusha sub repz subl xor (bad) fcom mov jmp das int3 ss inc fst jne lcall mov pop fcoml lock enter jg push sti mov stos adc push xchg cmpsl fnstcw sbb or cs add mov mov das scas inc (bad) jnp push in xchg out mov push fldl2e stos jp pop mov xor (bad) or mov (bad) insb jnp sub cwtl cmp mov in (bad) popl js push dec cli mov mov mov cld xor test les in mull jp xchg popa jecxz insb push jb fisubr repnz leave inc int mov add xchg bound fmull sbb xchg and (bad) loop jne jmp jb pop inc xchg iret mov sahf stos loope int mov sub pushf adc shld jne jnp fldenv dec add pusha mov jae fdiv cmc ss popf pop icebp mov jne and jp xor ret pop inc inc xor or inc lret sbb cli jnp xchg add arpl cmp mov sub sub adc outsb jp lret mov pop dec imul arpl jb das xchg push call ss cmp xchg jl lds outsl fwait pop inc inc les xchg ja popf xlat hlt jp fist or bnd pop push pop jmp mov or xchg jp inc cmp xchg and pop sarl inc jmp lret mov inc push arpl out pop inc inc sub adc in addb and stos rep outsl jmp jnp outsb or inc ja into mov (bad) dec mov push jp dec push sarl xchg xlat arpl inc pop out mov (bad) jle add popf hlt push push inc adc mov iret jmp int test push (bad) jp into stos (bad) mov pop adc jns arpl jp adc lret shll mov push (bad) in lods mov mov jge das rcrl test fs jg sahf cmc pop push sti cmp fs xchg add jge movsb into add outsl jne cwtl aad cmp mov xor scas mov mov push xchg fist popa jge add jnp ret shll arpl cmp fcomi jmp jne jl stos negb adc mov pop flds repnz jno pop mov test jp inc and and mov mov pop imul jp mov fldt jnp mov cli and mov lds (bad) mov and mov cmp mov dec adc push xor sub sbb hlt cmp js fwait jp mov sub stos jmp (bad) icebp xchg jnp jae push pop xor shll out lods inc and xor push push es ja sbb js sub cs cli in fdivrs mov mov sub jbe fnstcw mov mov xchg pop jns push ja mov mov sub movsb std outsl repz sahf (bad) mov mov jne fsubs sub and adc pushf leave stos add scas addr16 int test jl fs sti into adc or fidiv scas mov xor jp aas jg push test outsl mov and rcl insl mov loop pop sub jnp jg ljmp inc fstl pop outsl lret arpl dec mov cli mov pushf adc jge dec mov mov inc sbb nop lret sbb and jp or lret outsb shlb jp shll je in test sbb adc jb pop push jnp sbb ljmp jp addb xchg sahf xchg jns and inc loope push out add jbe push or jl lock lods push sub cmp enter hlt mov in sbb dec mov ja push lret aaa and jp xchg mov out sub decl push mov inc ja das sub pop fistpll addr16 leave dec in jge dec jp and int3 jno mov rclb pop push xchg mov dec mov fsubr lea ss repnz sahf sbb jnp mov fstps stos into test pop scas jo jp pushf pop mov cltd sbb (bad) lds jp xchg insl je xchg xchg jne push xchg fidivr clc fiaddl mov fs scas jne stos add (bad) pop (bad) (bad) xor stc xchg sub mov adc sub xor adc mov jnp test fidivrl add inc xor lret sti pop cmp jecxz cmpsl jno enter sbb into ret aas ffreep jnp push imulb mov mov jnp or jp loope xchg xor leave jne scas or cmp and aad nop jecxz cli clc sahf dec xor inc fisubl test icebp pusha push mov xor ja out in mov lcall pop xchg dec (bad) cltd mov (bad) dec jmp push lods call xor imul pop inc xchg mov scas jp test repz jp push repnz sahf sbb jmp test mov push repnz adc jmp pop mov scas jp cld jne inc jo add out dec cmp in adc lcall mov pushf push mov int add or repnz (bad) out push mov mov (bad) fwait inc lcall add imul mov inc add iret jbe insb sahf push or (bad) jp xchg fwait adc dec jp pop jmp loopne mov sub repz mov push insl cli and pop fnclex pop xor (bad) fdivrl sub scas pusha push int inc xor loop mov and adc aas jne inc gs cmp dec sbb or sahf cld jnp out inc jb in jp lds ret jp xchg ljmp or pop fmulp sbb ret push jp add repz icebp mov adc incl cmp (bad) cli sub stc dec sbb (bad) sbb jg ficompl cwtl inc in jmp add xor call or (bad) pop and push rcrl bnd aas dec in (bad) jno xor jbe gs or and dec pop test out sti cltd xor xchg mov popa pop pop imul mov mov (bad) stos or out xor inc insl jp mov xchg outsl gs dec xchg mov lods (bad) pop test adc sbb sbb push out lret outsb cwtl dec mov inc sbb xor jl (bad) jnp test (bad) fmul fistpll idivl push shll lods in dec (bad) jnp sahf add xor jecxz or jl xorl and inc mov in insl xor dec stc mov movsb (bad) ss jge test sbb loop int3 in push (bad) call popa mov negl xchg mov dec lods push aaa adc jp int3 out jg mov ja or cmp sbb mulb jne add pop xchg sbb sub xor pop mov dec inc pop cli jb rorl popa sbb add imul jp loop,pn xor popa xchg clc sti ljmp test popa sbb add pop (bad) push lahf mov mov and pop ja xchg sbb sbb data16 jmp sub push mov test subl mov insl xchg sbb jp leave sub jne arpl jmp xorb movsl cmp pop je adc mov sbb (bad) out stos pop ds shl mov cmpb sbbl fwait or jge jae cmc dec jg cli mov jns cmp jge xor add jg push jp,pt test outsb jb cmp in or movsb jp imul fs das jp jno mov (bad) jns or jle (bad) mov xor stos pop or add int3 ja lock lds lods adc jl cmp push xorl fidivl cmp mov fdivrs sub ss lret cld adc mov insl scas stos or jnp pop popf lret xchg sbb and jno fisttpll in enter (bad) jne cmpb and inc in mov mov mov mov daa rol mov rcll pop jmp cmp cmp scas pop cli in add loopne call jp loope idivb enter cmp push mov mov cmp jp push sbb adc sbb push loop mov cmc cwtl sbb or arpl insl stc xorb std cwtl pop movsl je push sbb lock pop jne push pop aas add and or sub xor jp mov mov les sub cld imulb addr16 in into sub dec dec ret insb repz xor pop jnp push pusha xchg push jp out mov repz call dec sub mov sbb jge mov fdivrs pop mov aam cmpsb mov xor lret out mov jnp,pn push jae inc fldt xlat and xchg push int mov pop mov cli cli shl nop cmc popl xchg pop jp push and addr16 movsb jge sti call les scas stos sbb std sti ljmp or pop sbb sbb loop (bad) je lret jmp jp fstpt incl aaa jecxz dec insl imul rolb mov jnp ja cmp jno shll stos and mov sti fs test add ret or push and jnp pop cmc jp (bad) push sub xor lahf outsl or insb pop fsubs xchg cmp ror into and dec fldl mov lret movsl loopne pop add or push (bad) lods cmpsl je cld enter jmp mov jp mov jp cs mov mov pop fwait (bad) outsl jp js ss push add ret xchg jp hlt jg cmpsl jne sbb cld or (bad) jo stc pop sti lds mov inc ret int3 scas sbb out jge insl add dec test add jp out add lcall mov clc push je fild ret sbb xor lret lret push pop cmp clc pushf pop jp dec cmp jns je aas pop lret out mov mov and push and sub add or arpl mov push jg or fiadd aam jno cli rorl (bad) fnstsw ret jne inc lcall jp insb dec call jp cmp pushf cmp nop popa mov inc cld jecxz div out jne lea mov dec out or leave test pop lahf gs jp mov add jp dec sbb jbe enter pop jp popa push pop jecxz xor lahf jns mov inc orl arpl pop xor lods xor mov cmpsb mov test loop or dec adc xchg xchg jne push xor dec cmp cmpb cld sbb loope fwait jne hlt (bad) adc lcall mov mov push xlat popa adc pxor dec cmpl inc outsb mov and icebp mov aas jo (bad) dec sarb xchg fs sbb jp and jns cmp dec imul fisubrl pop cmpl jmp (bad) jp mov pusha push outsb mov jnp add mov test pop mov pop or jp gs xchg call addr16 and int loopne pop mov lea clc add dec or or inc insb (bad) pop mov jmp cmp or jg mov aas outsl loopne sub cmp xor stc (bad) jnp mov jp or cli vcvttsd2si (bad) push jp mov jp movsl push fbld int movsb repnz clc fwait push addr16 mov sbb mov dec cmp inc or fisttpl and sbb pop cmp or sbb movsl inc lock pop bound sbb cli scas mov nop gs cmp repz outsl gs push adc or lods jbe adc fwait sbb jp fnsave stc mov loope ret ja sbb dec sub inc and push jnp lret xor aad jmp testb push ja imul jbe je mov pusha inc sti push out lods sub inc cmp add das or insl and imul mov cs xorl leave pop mov jne aam cmc aas sbb std mov mov dec mov adc aad xchg xchg jp into dec out sub outsl sarl mov push push out mov and mov xor ret scas dec lock hlt iret push cli or add dec pop add mov in pop lods or aas jno test sbb lret lcall inc sbb cld jp push icebp adc pop push pop fldt add mov xchg in pop stc push int imul cli dec (bad) xchg xchg jp shl test in push dec or pop mov add or jnp (bad) (bad) sahf adc jnp inc bound in test jp test sbb je add sbb cmp or push xor jp mov dec mov int3 out movsb ret push push ljmp int jns test or or dec cmpsb push mov jne addr16 push push clc adc adc outsl test xchg push xchg cli add mov (bad) xor ja mov add jecxz sbb dec push scas mov xchg dec push pop icebp mov insl stos mov push shll loope and rcr (bad) jp (bad) xchg jge xorb loop xor sti cmp adc es ret scas dec ja out jmp ja mov push cmp add fsubs insl sub loopne idivl outsb repz (bad) lea test pop mov dec cmpsb jge das lahf mov dec scas sub jp push or jp push and mov gs loopne pop insb (bad) cmp and jp sub sbb add inc push aad adc jp pop adc jecxz (bad) jp stos sub ljmp ret out cmpsb mov jg mov ret and insl dec push cmc mov lods xchg adc jae popa adc push repz push ja xor xchg mov jp loope dec lret sarl sub xchg xchg out loop push push lds push loope imul mov jns (bad) adc jmp pop loope mov mov and sbb jnp popf mov jp push jne cmp pop jnp pop fstpt mov mov popa jp das ljmp mov inc xor js mov jno test adc in rol out gs xor (bad) lret (bad) in sbb int test cmpsl push sub push dec sub iret test jp daa jb aaa loopne sub fidivr or dec cltd sbb cmp cld or jp jecxz ret das xchg cmp pop jbe repnz push icebp mov mov cmp dec cs inc mov call sbb inc sbb jae push jnp subl jp (bad) mov imul cmpb movsl int3 lock inc fsubs xor jno adc test dec mov in dec icebp inc ret neg xor cmp pop pusha shrl jp cmc arpl jecxz push shrl outsl scas xor jnp sub imul cmpsb cld es mov sbb cmc push jnp or lods mov (bad) daa out pop dec dec cs insl lods (bad) movsb jnp fucomp lds jmp jae ret arpl push adc popl and ja bound lret in (bad) cmp push sbb faddp push inc (bad) jp daa mov in pop gs sub xchg sbb test push lret push (bad) jae dec out aad push mov mov adc pushf lea or outsb (bad) mov and xor pusha adc pop jne test dec fwait inc stos lret (bad) pop (bad) jp outsb push push cmp sub pop gs push scas test aas test jp sub (bad) jae dec cli insb jne shlb jg fs jle test pop sub xchg push (bad) jp call (bad) cmp adc fldl xor adc jp pusha loop add mov add jnp sbb pop jp sahf nop and xor jp (bad) dec popf xchg jo mov ficoml (bad) mov sbb mov jp and int xchg and jp xor mov in sbb and cmp fidivrl dec shlb cmp popa shr dec sub loopne inc in insl into xchg xchg push push sti xor push sti jecxz gs out stc xchg adc (bad) mov outsl arpl jne gs inc mov out sbb pop ret sar sub pop add cli jnp mov ret out pop push add xor (bad) mov (bad) mov gs fimull push pop sbb repnz add cmp inc xor pop push jp je stos mov or stos pop xchg xor (bad) xor lret es adc pop pop sti iret push mov jae push mov sti (bad) fmuls cli mov fidiv push ljmp ss dec das jge mov cmp mov or fsubs fdivrs jns jbe and pusha sub jp icebp cmpsl hlt jg jl stc divl lret dec xchg jp scas cld je loopne fadd shll push xchg lcall mov into fnstcw ds es jne fistl aaa ret pop jno out mov cmc push sub xor lds repz mov clc dec jp pushf aad jge cmc std dec cli scas jns jp cmpsb aam in push sbb jne,pt scas test ljmp cmp mov ja hlt jge loopne jnp xor (bad) jno fwait cltd mov push loope ret mov in negb into push stc stos popa cltd pop or hlt clc xchg dec int3 pop mov inc cli icebp popf jecxz fs fbld or lret cli jp xchg xor or dec and rol inc cmp mov rcl push (bad) mov test stos dec movsb jp inc mov dec sub popa rorb inc mov mov or or (bad) mov inc cmp xor fsubs mov jle shrb or sub cmp das inc outsl (bad) mov pop sahf lods jp xchg repnz js,pn stos in adc add ret jne in int xlat aam fwait lock shlb ljmp shll jno fwait jo ds mov push loopne jp movsl mov call push fistpl xchg lret sub sbb incb in addr16 iret jae adc adc call sbb cli xchg mov add push jae popa nop adc jne jbe add xchg movsb jp push pop fyl2x (bad) std loope jno jp sbb cmp pop mov insl les pop jp dec outsl or mov xor jno sub push mov test ret jp fwait pop cmp or push cmp sbb lds movb call aas mov push jo xlat clc inc in lock loope rorl and sbb hlt mov push out enter jb jnp loopne iret ja inc xchg popa movsl dec mov jle pop insb add fprem jp aad adc sbb loopne cmp inc push xor add decb insl jnp dec xchg daa arpl inc mov fmul js pop (bad) xchg adc jp sub jge out ljmp and mov sbb jno rol fisttp lcall (bad) mov pop stos push jp stos mov les lcall aas pop jnp sub lahf jns jp movsl add rorl mov sub pop jne adc jmp adc loop jecxz pop (bad) mov pop jae cmp push sub pushl mov push xor iret xor js mov inc repz add xchg sub cmp xchg xchg mov sub jns out jnp mov fs (bad) fwait cwtl mov mov aaa lcall inc ret sarb pop inc (bad) pop mov lock cmp jp lret inc imul inc scas mov js push inc jp or xor pop aas lahf dec ja sbb jp sub int3 enter inc and xor loop outsl (bad) sbb sbb in jp cmpw pop fistpll popl pop jp sub xchg or adc fs fwait jno and in mov mov xor fstl mov sub lret dec sbb dec data16 nop jae scas add mov popl mov and notl pop mov aas repnz inc cmpl out ds mov les adc loope aam stos adc dec push scas mov pop jp pop ret and mov jp sbb sub inc in and mov or jl cltd les stos mov outsb popa je cmp outsl fs sub cli mov xor mov fcompl xor es add mov inc sub xchg test adc cli sbb pop pop fdivrs in mov aas in pop iret jno idivl sbb or add push lds insb dec sbb jmp je adc jmp mov insb les lcall ret in pop jg aas ja imul in int3 jp mov jne pop std xchg xor fdivrs inc cmpsl jp add add (bad) loop nop jmp rcr xchg clc or shrb mov ja mov in xchg push insl fist jp mov jnp jp push mov scas test mov xor mov mov inc and sahf leave sbb pop jle sbb adc pop mov xor js xchg popf hlt lock movsb sub pop mov cmpb pop cmp sbb xor xor xlat aas popf pop cld push pop pop fnstenv arpl and add mov mov (bad) xor lock (bad) lret or add stos jmp dec mov pusha mov stc and jnp or inc inc sub out je inc lods jnp loop xor push pop jg jmp dec xchg sbb add mov test adc mov inc cmp cli ja add add not or addr16 xor js jno shll mov pop (bad) in into fmull fsubs add jnp sub jb dec and mov mov out mov jg lahf mov jne ret adc nop sbb jp loopne iret fs jne push dec scas pop (bad) jo mov stos fstps sub ret stos and jmp fadds sbb sub scas mov jp insl pushf xor in jb jp pop add ds scas sub gs idivb std jecxz cltd add pop fs test cld mov fadds jp cld push rclb decb and adc das sbb (bad) lods inc dec xchg rcr or mov mov lret decb sahf push mov xchg fidivr adc or (bad) jne test shrl fsubs ja (bad) sub jnp sbb sub pusha mov and pop std in jb lret (bad) hlt mov rorb stc jnp add pop jnp fcomps jg cmp bnd mov cld and push rorl cmp rcrl gs (bad) mov add loope lea jp push jb or mov add ja dec pusha cmp cli jno in ja lods in push mov movsb dec pop (bad) ret jp push xchg stos sub imul das add adc gs imul std add jp mov mov mov clc (bad) push nop sbb in scas es movsb push fcmovnu imul jp jge test cmpsb inc test cli cmp rcrl int insb js mov je jp andl pop pop mov inc xchg sub mov insb aam hlt ds pop cmp cmp jle and and sbb mov popa sub inc jae jb mov in lahf mulb and (bad) mov imul div in pop and inc and (bad) mov fisttpll jle push inc jp sti loope jmp xchg stc mov ret jae pusha xor push pop sbb fstpl mov out mov xchg ljmp cmpsl and lea jle loopne test adc pcmpeqw cld inc cs and jp push lret incl adc cmp sbb (bad) mov fwait mov push push addr16 stos enter js mov and gs pop push (bad) loop sub lods inc sub mov mov and clc cmpsb stos push test or xor push xchg xchg pop aas adcb pusha popa rcrl jno fwait pop repz (bad) mov jno inc xor inc push test inc jb loop pop pop ja (bad) mov cmpsl add iret imul jle jnp xchg insb call add push adc pop inc rorl repz adc dec (bad) lret rcl jne push pop loopne imul push cmp outsb stos jp,pn data16 xor jns (bad) popl sub mov jp xor xorl lret mov and ret mov cmp sarb addr16 mov lds xor pop mov fsubr test jp les das jp dec imul aaa jl sti jns out xchg and repz out or xor dec cmp fcomps pop mov (bad) mov pusha xor dec in or cmpb and nop pusha adc fsubr add loop aad (bad) jno jecxz mov jne inc or ret rorl pusha rcl xchg movsb outsl mov sub pop push inc shr jle cmp orl aas sbb fwait jnp,pt addr16 push add mov xor jp (bad) push xchg je xchg dec add aad or push and jo jp js push clc fstps cli lret out jp inc xor leave or mov dec inc cmp fcmovbe outsl mov mov cli in add lea cli shlb lret daa sahf add mov (bad) jne pop mov mov int xchg jp jns out add lods int sbb ret sti gs mov fcomps sbb lods cmp jnp push cmp pop and dec leave js sarl and enter pop ja stos fisubrl or jnp sbb push inc push hlt jle mov jp arpl adc lcall clc lcall dec pusha mov ja add in mov mov inc xor mov dec mov push movsl dec jl dec test jb imul loope cli stos sub (bad) (bad) fildll andps cmp sarb jae inc iret stos and pop mov jp pop loope adc jp outsl outsb mov xchg out or pop out dec (bad) je push jp repnz addr16 sbb fwait sahf jp add xlat mov inc clc icebp xor rcr fwait mov (bad) call lods inc mov mov mov fbld leave push dec sti out aaa jp mov int iret cld jbe push cmp jp or jp cwtl push pop mov sbb jmp jnp cmpsl or clc scas cs outsl imul pop in out or jmp test sahf adc fwait cmpl arpl lea aaa push xchg sub ljmp jp sub xor mov fcoml imul and test jp add (bad) aad adc cmp pop push xchg sbb mov dec inc jno mov pop jb rolb movsl (bad) jp (bad) lods mov add jae imul popa push sub psubusb xchg mov movsl out scas insl and push jno clc jnp and inc jo mov bound mov int3 or ret cmp jbe adc and les addl daa rcl push cli aaa xchg sbb jp adc xor add jg inc mov call sti jle jnp jo add jg pop push jmp lds insl dec pop repnz ljmp jp int3 ljmp (bad) xchg jne cs in (bad) stos ds jp mov xchg cmp jmp cmc jl jno cs cmp jns cli adc loope add out jp aas cli jne test repnz adc je mov pop mov (bad) js into flds lds ljmp sahf leave jp jnp add movsb add jp lds mov out dec pop push jbe xor fs mov stc sub sbb imul mov (bad) enter pop imul cmp insw or jae push xchg lcall adc dec jp imul inc dec dec fs xor insl (bad) sub cs jp push es je dec add xor xchg popf push lock push xlat cmpsl push xchg mov sub or outsb mov mov mov jle xchg jp mov dec stos xchg pop test xchg jp add mov mov sbb movl pushl sub push and data16 (bad) xor gs and jns scas (bad) and (bad) or add lret rclb andl jle popf xchg mov ja pop in iret inc jb cli arpl sub aam push cwtl shlb mov cmc jp xchg out lds gs jne xchg push (bad) cli xchg dec inc outsl popa and pushf mov es inc in popa inc sti sbb fs jp xchg in loop les movsb push mov cmp ja (bad) loope leave insb arpl pop outsb out xor cmpsb mov inc test xlat out cmp push sub mov in lret icebp addr16 push cmpsl pushf repnz jnp push int3 (bad) and (bad) jne jae negb sub adc pushf in imul inc hlt sbb mov mov mov mov aaa arpl daa jnp test add adc lcall push xor sar cltd mov mov outsl pop cmp fwait sti push mov bnd inc pop jnp mov inc mov dec scas and dec cmpsb push mov sub (bad) fild cmpsb inc jp or mov xchg push xchg jp (bad) movsb loop in inc pushf and xchg out ret inc (bad) jno pop ss std mov push fnsave test fwait mov mov fmull xchg jp dec jmp addr16 cmp (bad) popa out jnp xchg xchg pushf test lret cmp jp mov cmp std cmp addr16 popa adc cmc test sti push dec and xor adc jl stc movsb out sbb fwait jmp ja (bad) push lea (bad) jo fucomip cmp xchg ss xchg orb mov sub (bad) (bad) pop pushf std inc xor ret mov shlb mov mov add test jp aam lea (bad) movsl xor out in sub mov insl idivl ror cmpsl lods push pop jp stos and (bad) jb xor xchg nop imul bound jp aad mov jp mov xor jb scas insl adc divb dec data16 fistl jne rol hlt (bad) (bad) lahf in stc (bad) xor stos jae addr16 push inc jnp adc shrl pop lods mov cld popf push jp cmp mov xchg lcall mov imulb cli std xor jp lahf mov fs cwtl xchg push cmp xor mov mov lcall and sub jno sbb test cmc pop cmp jnp adc insl iret jmp mov sarl int3 cmovbe divb mov loop popa push mov bound adc icebp sarl xchg ret scas push dec sub test cmp loop fistpl mov add jp or sbb jp jecxz dec leave dec mov jmp jne pop adc scas fisttpll push mov das mov adc popa xor sahf std imul inc and jge shl movsb sub insb sub fstps jne xchg push std ljmp jp mov add inc mov jne jl xchg cmpsb cmp pop jnp ds add or push sbb leave and jp add pop mov cmp dec mov aas test and cmp shl ljmp push lock cmp inc jp inc push and or sbb jp lret mov test sti mov out jp shlb lods add mov adc jno pop fnstenv sbb repz jp rolb lods add cmp cmpsb jno bound sahf es imul clc loope mov jp mov mov sub sbb add sbb leave xchg int3 jp push mov sbb sahf outsl js stos xlat and jge stos out cli outsb adc xchg pop ja mov sti mov and or cmc test int (bad) in sub push fisubrl inc int3 out pop cmp mov je sbb jnp std dec repnz out popa leave pop lods (bad) jnp adc and adc adc (bad) or test ljmp pop jno das jnp into mov xor lret fnstsw stos or pushf jp (bad) xchg insb mov mov gs dec ret int outsb cld jp mov dec jg sub jp xchg push push push dec cmpsb and jp jb es jp push add sbb ret pop xchg push lods int or test cmp xchg gs jp in popf xlat jne call pop xchg iret fisubl jp cmpsb pop or mov ds mov add sti sub imul hlt add adc jle pop push js jae (bad) sti sub jp cwtl icebp sahf (bad) sbb fwait push sarl sub pop stc push add pop sbb jne mov mov mov xchg (bad) cmp movsl dec jp adc mov cmp dec leave ja lds nop mov dec (bad) js push mov jnp in rorl xchg push outsl scas out (bad) and adc lcall test adc pop fldcw insl and dec add call jno pop xor loop in imul or das pop adc arpl mov call or gs lret mov pusha (bad) mov cmp xor xor flds mov jp and lods mov out push stos fs jnp fwait mov jp inc xchg adc and sti pop sub scas dec lret imul mov fidivr rcll sub inc sub xor bnd mov jo inc adcl aam push xchg subb ficoml push and cmpsl jp loop imul push jmp pop or ljmp adc das mov jnp jno in outsl jae insl lds cli jle cmp fnstsw je loop xor inc (bad) call je add xchg and fisttp jb pop mov ss jo leave mov push clc xchg mov in dec popa arpl js dec jp and push and xchg inc cmp inc jae repnz hlt test mov lret sbb mov jp jmp rcrl mov sub mov mulb cmp bound dec es arpl scas sub int sbb insl cmp popa sahf adc stos dec leave cwtl jp es add repnz jp imulb adc jnp arpl ss jb jp sub push push and xchg or pop adc (bad) pop mov or or jecxz rcll into jp push pop pop pop in outsb cmp or sbb jl fs mov fidivl int3 jp aaa mov sub xor leave dec add jo daa fs enter mov dec pop push or add in inc mov mov mov or mov mov adc in add ds cmp (bad) (bad) sarl jbe idivl jno test pop push arpl insl or jle cs add xchg lcall jo ror cmpsb lods sbb lret cmp gs adc push int3 and (bad) jp ja fcmovu lcall jp cld pop cmp fmuls ret xor dec cmp or int3 xor cmp push dec xchg jno cs mov pop jns int3 les lock adc loopne jecxz test xchg sub mov lods jno xor sti mov das fistpll push jp xchg ret sbb aam sub clc sub inc xchg and (bad) jp (bad) jge out subl stos or cmp jne int mov jnp das jge dec gs icebp or jp jle hlt cmp mov jge ds push inc jno mov cltd shrb jnp pop inc dec js jno dec out cld xor xchg pop fistpll xor jp sub gs pop fistl cmp xchg push jmp xchg (bad) test adc mov loopne push faddl (bad) pop repz jbe jnp jns adc sub test mov scas inc jne (bad) das sbb lcall push pop cltd aam nop adc (bad) movsb enter cmp divl aam xchg popa lret mov pop mov sub lret inc (bad) xor push jp sbb lods cmp adc popa jecxz mov jo or jp (bad) mov sub stc mov iret or das stos cmp arpl jp gs mov add sub mov (bad) jae sub mov sbb ret push loope jp or push pop mov int dec jp in add xchg or sub (bad) (bad) mov pop push ja outsl out fstpl mov mov or sarb es lcall das jmp stos jno push loop icebp inc jb cmp ja in (bad) sti xchg mov dec xor jnp jg test pop jns pusha std cmp shrb test jbe rcrl repz and sti sbb ss and lds js jmp aam inc jp cmpsl dec popf dec cmp mov mov sti scas mov fstps repz mov rclb xor movsl jp popf jg inc dec ficompl ret xor add mov sbb sub jnp sub pusha cmp fwait mov inc jb lret ret mov (bad) enter pop pop cmp pop pop pop pop lret xor enter int sbb mov add jge jp or xchg pop ds cmp pmulhw adc insb mov gs mov cmpsb mov or lahf push loope xchg stc cmp cmp cmp pop in jne mov jp inc sub mov pop lea mov pop pusha mov jl xchg mov jbe jp xor add push push or sbbl sbb or inc jp push mov cltd rcl mov gs pop push xchg test sub adc dec fistpll push mov (bad) jbe fistp sub jmp jne popa orl lds enter dec push loope jp dec sub inc (bad) jp iret in mov jmp std mov fstps lea or or aad addr16 dec loope mov in push daa add mov jae jmp lock jg lock fimull stos jp jl mov jp cmp (bad) jno jne daa or or out jp jmp adc loope sub daa rorb jp fcomps dec popa push sub scas jp sar (bad) fstpt adc xor sbb repz pusha inc cmp jne mov push mov jp sahf pop stc mov ficomp bound jbe loop mov jne dec (bad) (bad) mov cmpl mov jp scas frstor jne (bad) fadd adc mov or lahf jo fsub inc adc out repnz and je mov jp push (bad) out int dec loop pop add fisttpl pop pop (bad) add push nop mov mov dec jge and dec dec or sbb dec jp addb dec lcall dec call sbb dec lret cmpsl jmp pop pop jge mov jecxz jae cmc jp imul push xacquire mov ja in jne adc popa xchg aas pop lahf sbb push arpl aas ja rorl movsl mov in fidiv icebp xchg mov cwtl xchg xor or sub loop xchg jmp punpckhwd xor pop cmp push mov gs xchg adcl push fs call or dec or mov test movsl leave call test sbb imul sti (bad) jge cmc sub cmp fwait pop adc xchg xchg test and inc punpcklwd xorl ret imul loope jne cmpb inc and stos xor pop into test (bad) jae clc inc sbb pop cmp xchg push pop xchg cs mov dec jge stos das adc sarl hlt dec loop iret sub (bad) lret enter cmp ja xor mov jae mov mov add sbb fcmovbe aad sti fwait lcall repz mov jb stc mov fs call xor or pop xlat mov imulb dec sub jp sbb jno test out inc ljmp clc push pop push xchg and jp pop les mov push in inc xchg sar jne cmpb loopne std mov in mov sahf pop xor jp xchg pop loope and lret mov insl outsl (bad) lods jne test dec or cwtl sbb clc xlat ret pop sbbl or enter pop cmp les inc push add inc xor pop mov sub xchg daa add pop (bad) je in ja jne notb push sti xchg xchg adc jp mov fwait and push shrl bound mov frstor pop pop xor imul mov sbb jbe js mov inc arpl dec scas xor mov popf loope insl out ss pop add adc xchg inc sbb jp out lds jp xor rcll and pop pop sbb jp dec addr16 xchg cmp add cmc jge jae out inc es mov das cmp (bad) dec mov xor adc sahf inc outsl ret jp push scas test mov push xlat in mov ret aaa xchg push ss popa xchg sarb (bad) popf (bad) je sahf fwait stos fldt into sbb test jae jg push pop (bad) lcall movl imul push ficompl lea cmp jno bound jno push jge jno and aad movsl outsl lock int pop loope imul incb cmp sub xchg inc call xor inc addl pusha ret arpl repz jecxz neg imul inc adc fs adc jnp lods pop jno push or push jmp xor addr16 jecxz mov add fdivrl test jnp cmpl fs sub add mov incl imul or push sbb adc jne insb jnp or or negl mov sar je jmp jecxz pusha jnp imul lcall pusha pop jbe lods mov mov mov aaa cmp divl mov mov (bad) push daa lods movl mov inc inc xor jmp fidivr (bad) pop ljmp pop pop mov adc repnz jecxz into xchg pop pop xchg mov popa mov ret xchg sub or dec pop jns xchg jbe mov or jp sbb pop nop lea dec fwait (bad) repnz insl dec std mov jnp jmp xchg add mov cwtl pop jbe sti std push ficoml sub jnp xchg loope jne inc or push pop dec daa je iret lods lahf sti std xorb (bad) pushl xor xrelease stc add pop jnp sbbl aaa dec jmp inc jle xor or gs xor mov push loopne push (bad) movsl mov jp or stc cmc push push jp mov dec jp and enter xchg das je sarl push add and jno push pop cmp mov jno popa push xor pushf xor pop clc and sbb jp mov ja gs jp movsl mov inc cmpl aam cmpb call or fnstenv mov data16 cmc sub push inc pusha cmp jg imul decl and dec inc in or or mov sti dec movsb insl inc dec lahf jne jns mov stos pop jp ficomp sub cld (bad) sub mov out lret jae stos and into cmp insl insl (bad) adc xchg es mov jp fsub mov lods mov int3 repnz jo jg sub jno push bound xchg insb pop adc in cmc jp push and repz pushf scas (bad) out test sbb cmp push sbb push sbb xchg sub push lea jne shrb jp jo push (bad) mov js sti outsb jp adc inc jbe aas lds jge xorl pop mov jp cmpsl ljmp enter adc sbb dec scas xor lock inc sbb cmp popf xlat clc mov xchg mov stc fstpt or pop mov mov add lcall pop xchg lods test out and jno xchg arpl sti sbb outsl lret lods jp stos rorl jp popf jg sbbl mov cmp jb aad cli push mov push (bad) xor jne and jnp add jbe lret pop jne cli adc xchg outsb cmp mov or pushf loop fnstcw xchg imul mov jl incl je jge andl cmp lds pop and push (bad) pop mov fadd test and inc jae in pop sbb sub pop imul xchg cmpsl jp adc dec jno jp sub jne jbe jp mov pusha outsl js push inc fnstsw lea dec ds mov aas fwait sbb jg cld jg jp bound repz mov add mov fimull jp call xorl jl jp mov cltd into push dec cli aam push pop fdivrs iret xchg pop sti out movsb sbb dec insl adc mov loopne dec add outsl stc je and movsb (bad) out push jp mov mov addb jno mov icebp jp adc fsubl outsb pop or mov nop stos stos jp and js cmpsl pusha mov sbb mov jae jp fwait stos sahf mov insl push loop sub cmp fisttpl arpl add frstor jp push xor push xchg mov jp mov gs jne ret dec test adc popf push ret arpl mov inc jp and jp sub or daa hlt mov (bad) sbb jp popa or adcl push test adc adc ret aad push cmp jp das outsl and insb jp loope cmp das xor and sbb sub cld aas ja aas cli sub test das add xorl lret je fldenv adc cmpsb jmp or xchg ficom inc daa xchg mov jae mov into jnp (bad) lock jp call mov and cmp ds xor lret cmp lods jp push pop sbb dec or jle jp movsb xor jno sub jp and (bad) outsl inc fimul sahf pop cmp mov cmp add add lcall das mov pop stos inc bound add xchg adc (bad) jbe (bad) jae dec ljmp pop rcrb js jnp mov out pop (bad) xor cmp mov pushf push test jp xchg xchg xchg mov sbb jp fucomip lret aaa ret sbb jmp or adc xor imul jp push jp ret jne jb mov cmp rcrl sbb in loopne sbb ja inc int pop inc mov mov pop lods mov lret xor inc jp int3 fnstenv ret (bad) xor or imul mov leave jp pop js mov mov push xrelease jae or push repnz es xor mov mov pop xchg xlat sbbl pop jne int3 out daa shrl jns cltd fisttp xorl mov mov or jp and adc jecxz ljmp sti xor (bad) add (bad) mov aad or fwait ret popa jp ss fwait jns mov cmp cltd jle add jmp cmp cld add cmc cmp enter push pop in pop lods inc lcall add ret stos iret and (bad) mov (bad) mov sbb mov cwtl gs fistpl xorl mov or xchg mov in jle jne mov push push mov push repz cwtl out sbb pop mov jecxz jp icebp jb push pushf int3 movsb jae outsl add stos outsb inc (bad) or insl cmp fidivr loope test cmp pop xor fucomip loopne cli or clc lcall (bad) pop movsb lods loopne sahf adc mov jp inc cmp pop les cwtl jmp xor inc sti pop xchg mov jae mov xor mov inc fdiv push mov xchg clc pop push fmuls cmp das or fwait aaa add lds mov push xlat mov aaa bound data16 fsubl inc jae cmpsb pushl (bad) mov cli push aas mov add fwait je das mov or xchg arpl dec sub cmp into pop lcall cmp adc insb sub mov std je int3 lock xlat xor add popf jp mov fwait iret cmp xlat sbb pop cli ds or pop and dec jp jle aam lock imul and loop jne mov nop movb fadds cmc pop sbb ljmp std xlat jp add sbb xor sbb pop aaa sbb xor sbb aam mov cmp lret inc jnp mov sub test popa xchg jo test mov pop out jno mov aaa inc pop (bad) sub (bad) int jnp icebp jp sub (bad) out dec cmp sub jle je divb pop cltd adc test call fiadd jno hlt mov jp jns cmp and sbb mov mov outsb jnp fwait pop jne cmpsl push stos jno pop jp stos xor fs shl stos and arpl (bad) popa stos pop fs jnp dec sub movsb adc fnsetpm(287 test (bad) clc lret or and push ss mov lret inc mov shll aas nop cmp mov outsb lret cmp (bad) pop pop jo mov mov sti jns inc sub arpl fld1 dec mov dec and outsl sbb add out mov add (bad) ds adc jle fs sub movsb push addl push xor add push or sti jb push cmc push push push xlat test pusha push incl inc mov pop push add push bound push stos cli sbb (bad) jecxz movsl mov insl adc pop repz push (bad) jo and dec jb (bad) mov pop movsb sub dec imul or push push inc add call xchg pop jb shl cs sbb int inc add sbb pop stos fdivp or add mov inc mov or lock insb xor mov arpl pop cmp inc mov xchg inc test insl js lods (bad) dec push lock jne test cmp mov cmp cmp dec jp push cmp js es popa mov or ja aaa sub test cmpsb sub dec mov ret add jns je pop jp,pt or or pop out test sbb cltd jp sbb fidivl int addr16 lea (bad) fistp outsb jnp cmpsl movsb pop lods mov xor or (bad) (bad) out or cwtl repnz xchg push ja jbe iret mov lahf aam cld dec dec lret in sbb shlb aaa (bad) adc loopne shrl mov pop daa push jp cli pop jo push jb or test inc mov inc mov inc jae pusha jnp push repnz ss dec insb insl test iret xchg push sbb jnp fs repnz and add pop jmp pop push fildl lods add fwait or (bad) pop outsl clc mov jno fistpl xchg test gs or mov mov push jo test inc test lret stos adc jae imul loope addr16 insl stos sbb imul push mov mov popf pusha sbb ret push lods nop int repnz in sti (bad) jb pop push in (bad) pusha out push fwait ja add dec je mov mov arpl iret dec inc inc movsb es fldt sbb jnp xor gs mov (bad) mov mov popa addr16 insb add clc (bad) (bad) fimull mov xor rep sbb in push lcall or mov fistl inc jecxz hlt in (bad) mov and (bad) pop mov cli f2xm1 enter daa jno lret adc gs mov rclb xor cmp stos ror push loopne jbe xor jae push out mov mov in push xlat and mov mov pop adc iret and dec pop movsb popa ds sbb push rep movsb fnstsw loopne pop stos bound lods inc sub test mov xchg aas pushf mov jl,pt xchg lods test push lahf mov out mov push jp inc mov push push sub xchg and lods lret scas pop fwait xchg cltd cmp adc cwtl movsb or jne mov fucomip shl xchg and dec ljmp jle push test inc lcall add xchg mov pop dec inc pop push rcll and lret pushf sub sbb scas cmp cltd cmp imul mov popa mov cs imul or sub xlat sub ja pop aam test cmp and sbb ja sub aad std test cs mov xor mov enter nop imul sti jne inc sub ret inc jecxz mov jne test inc jae cmpsb enter stos sbb add jnp enter jp adc fistp stos scas scas xor sbb sbb xlat xchg arpl xchg add sti jmp insl (bad) mov fcompl cli adc lock imul insb inc pop jae jp sbb (bad) push (bad) in outsb pop (bad) and add clc stos jp mov jge jp out scas popf (bad) mov sti test jp cmp mov adc (bad) mov xchg xorb jp cmp int3 enter jns or cwtl loope cmp mov imul cmp loop hlt mov fisubl push and (bad) jae inc jnp ds jne (bad) cmp sar mov pop mov jp shl xor inc sub loope mov sbbl add dec xor aam push jmp pop sub pop jmp arpl add shrb push jb icebp nop pop shl cmpsb rol cmpsb or cli shll ret mov inc ds (bad) jp lock or idivb xchg jb mov cmc mov iret push jp inc stos leave mov jmp add cmp imul loopne jp add pop pop pop pop mov xchg fnsave mov (bad) mov xor add jnp leave std ja iret sahf mov mov push pop xchg ret jno dec cmpsl push cwtl push pop jae (bad) mov dec mov add imull pop fs xlat jg movsl (bad) inc xor fistpl jno insl xchg gs arpl daa stos mov sbb inc notl imul aaa and imul pop pop dec cmp call xlat arpl jp mov pop in ret lret push std cmp sbb stos popa cmp push xchg into movsb dec cmp mov mov fs test repnz mov imul pop push clc icebp push cmp pop inc adc test xchg push sbb rep jnp inc movsb xor imul outsb pop stos xchg sbb in cmp outsl mov movsb sbb xor sub cmp jb mov stos inc sbb stos call sub dec (bad) rcrl bound imul dec mov pop xor sbb iret sbb push fisubrl jmp fs mov fisubrl sub jae movsb lret shrl das or sar insl movsb imul jne pop push test xlat inc cmp sbb xchg cmpsl lods add add (bad) jp dec xchg inc popa inc ret arpl inc or and out push lods lahf jp jns or mov sbb (bad) fidivrl sar mov xchg les gs pop int3 cmpsl and lea je mov lcall aas (bad) hlt ja jae adc dec dec jno add ljmp fmuls adc jp daa mov jbe icebp mov leave ja jp jnp xor push sub sub into in ja ja sar fist adc dec lret icebp popa test sub sahf jne (bad) lock push imul push lret negb push push nop in cmc movsl or pushf enter lods mov push out mov pop mov in inc cld push fistl in and js test xor loopne fdivrl sbb pop pop and jle and inc cld xchg rcr insb fs sub mov inc stc test lcall jb push scas pop outsb rcrb insb loopne mov sbb pop cmp xlat dec dec lret out pop pop mulb add push add (bad) dec lods mov int3 pop jae sarl add inc outsl mov inc push mov cmc jae fs inc pop arpl sub scas hlt jae lahf mov xor rorl jp hlt pop pop pop dec jp dec imul jb outsl inc cmpsb addr16 push ljmp lods repnz ds jmp xlat fprem push inc sub outsl fstps add xchg push stos jp cltd pop enter loopne xchg mov lahf mov notb pop xchg mov mov and push cmp mov mov dec popf or cmpl push sbb outsb sahf loope inc test cmp movsl pop push jnp jns jp or dec and lret sti mov (bad) mov (bad) jp sbb out enter dec add leave xor (bad) cld jp add xchg pop jp out addr16 dec mov jae or inc xchg add test nop popa fnstenv jo cld push andb pop fistpl lock mov shll inc or xchg fdivs in jae xchg mov add movsl fwait or into loope xorl cmpsb jnp dec jle pop jo,pn dec jns jp sbb jl push insl and cmpsl inc mov jp add cmp dec cld jle pop movsb (bad) jnp scas pusha mov mov out mov in or jp mov and jp or push dec (bad) mov pop mov movsb ds jp in fildll mov idivl xchg mov adc shlb cmp cmp add shrl movsb inc mov dec mov inc aaa add orb gs pop or mov push jnp jno cmp insl and push popf aad mov hlt call xor test dec jno lahf lock cmp ljmp jo cmp in call mov jae xchg mov mov xchg sbb mov pop cmp gs jp dec jae add jne fildl push adcb das pop sub cs mov jmp out ret lret mov (bad) icebp jb jnp pushf (bad) insl mov dec dec jno clc jp iret lret popf mov jp cmp les out jo stos mov dec lahf fdivrl scas lret insb inc pop jne push (bad) mov jp dec adc repnz xor sub mov pop adc pop das ljmp jg aam jne push xchg sarb dec fistpll lods pop push jecxz push add iret stos test or mov jp cmp jl into shll xchg and inc insl test dec call jl mov pop cli jmp pop je sbb jbe imul enter andb fs cwtl icebp es or and scas jne stos mov ja sti test mov ja stos push pop cmp int3 ss fldenv in and xchg and jp cmp aam stos mov fcoml (bad) outsl mov inc inc jno jge rorl insl js add aas or pop int3 mov cmp fidivl cmpsl mov push imul mov orl push xchg sarl fs stos hlt push or imul movsl add in sbb dec in fs mov or mov xchg xor push dec jo dec sbb jne dec movsb inc ret inc popa dec stos mov xor xchg and xchg push call int3 adc lea (bad) or (bad) ds dec cld or iret or pop mov outsl je push int mov jg push xchg jno mov nop loopne insl xchg addb into cmpsl push lret inc movsb or xchg jbe jnp mov leave cmp mov dec idiv fstl sti in gs fmull or mov sbb ds loopne cli (bad) pop pop sbb mov shrb xor inc adc lds add ret adc inc and daa sbb bound jb loop pop and jp mov sbb jmp arpl (bad) mov lea call pop mov jp jle aaa cmp sub xchg div aad stos imul pop fwait pop pop jp mov xlat jp dec ljmp dec jmp lret fstp jp xor psubusb in sub jecxz sahf jns adc call dec jl imulb jno jp fs sub jmp mov mov stc cmp pop add push or outsl ljmp push lcall mov stos xor ja in outsb out push mov xor lea into test sub jo ret pop cld sbb dec and pop sbb pop (bad) pop in sbb (bad) jo or mov repnz push push push aas lods jno insb pushf outsl jnp push xchg sahf push roll add je clc cmp xor jo jne push loop dec dec jmp mov pop aas and mov xchg ja bound inc lahf negb hlt hlt outsl stc push cli mov mov idiv aam add cmpl xchg ret mov in mov inc lahf call mov ja sub fstps pop popa sub mov push cmc out dec imul in cmpsl loop sub cmc into xchg jns fs test push mov xchg adc and cmp xchg jbe sbb leave jnp fcoml fdivrs leave or dec mov mov jmp ja out sbb jae inc mov movsb pop push xor xchg cmp mov cmc mov imul jns jp bound lock push cwtl xchg sub mov ftst sub push xchg (bad) leave sti cmp dec pop jnp ljmp or and fwait aam fcoml call rcrb sub inc mov pop pushf or jb (bad) jae stos mov loope jno xchg xchg lret ljmp mov mov stos sbb pop pop add pop int3 mov mov sub lods jbe leave movsb jno daa jp inc pop mov stos popf in pushf ljmp mov lret add mov push cmpsl out lds pusha imulb rcll ret stos mov (bad) sbb cmpsl (bad) push jae imulb or outsb push pop jp inc pop cmpsl je mov lea cld inc inc xchg int3 sub mov xchg cld cwtl mov fdivs and (bad) test (bad) jnp daa stos repnz repnz dec sbb mov jns jne pop shll std jle fidiv addr16 jnp push adc sbb cmp and jb cmp and fnsave pop pop push dec lods cmp (bad) mov ja ret and iret adc push gs dec add outsl jne dec imul xchg pop sbb out jp js dec es and mov xor xor push jecxz cmp push sub jp mov jne sahf stc xchg dec rcrl lcall ss mov pop cli loopne loopne ret ror jno mov (bad) mov fstpt mov mov lcall (bad) scas sub jmp dec mov push and add and (bad) cmp mov imul push je dec sub dec (bad) push mov cmp sti pop mov mov jnp loopne dec ljmp pop std jae push mov bound sbb stos cmp lahf xchg pop (bad) jae mov das cmp sub jne imul pop ljmp test aas aaa jp sbbl sub cwtl jp fisubr gs mov or push cli adc movsl pushf pop nop js cmp adc ja push jp mov lods jp mov int pusha xchg and jnp popa xchg pop inc jnp shlb push sbb mov jp clc add xchg xor push ljmp sub mov div xchg cmp mov call lds xchg stos scas or imul repz pusha int inc push mov les mov sub xor ljmp jne inc xchg test pop shrl xor mov in and gs push fiaddl stos (bad) sub mov sub or add sub sub jne cmc adc repz imul imul push cmp addr16 xor dec test push call idivb fbstp (bad) mov test ret mov sub sub inc jnp nop mov jmp stos add jns push sbb out iret jns and sti ret push and jp xchg aas mov iret fsts pop sbb xor mov push lds rcr jp pop fstl imul dec or out leave stos hlt ds or ja cwtl sub inc inc mov add push cli jno mov push xchg mulb pop sahf sbb jp inc repnz pop xlat xchg sbb or (bad) nop jae mov outsl fist jp or negl int3 gs ffreep cmpsb pop idivb jnp mov sbb and inc xlat mov or inc jb cld jle lock cmp sbb lcall js and sbb jne dec movsl lock jno mov lods cmpsl sub and addr16 out outsb xor leave add jmp sahf mov add ret cwtl test jmp push jne dec in cmpsb xchg cmp add sub movsb jb mov sub inc mov mov int3 mov cmp adc sbb jp or scas jecxz xchg add xchg adc sbb cmp ss popf sub mov jne jecxz jp push popa push aaa add insb movl imul dec sbb pop jp push xor insl dec lahf in pop into dec imul mov aam adc popa jnp pop cld xlat jp and jns jp sub ret mov inc push inc push cmc xchg sub xchg and popa cmp jp jns mov jnp (bad) popa cmpsb test mov (bad) negb mov mov cwtl mov addl sbb pop push pushf cmc sbb inc adc xchg mov jp mov insl sti dec cmp clc jp lea shlb sub movsb lret dec hlt jp pop dec cwtl and pop arpl mov mov test int3 or (bad) sub jp jns mov jno nop jecxz cmp xor imul daa movsb push sarb lods cmp shld xlat cli jb pop aam adc adc clc xor pop and gs aas in ret sarl loopne xor ja movb sbb xor mov loope add aas inc jne or and cmp out popa mov inc icebp mov mov inc mov cli jo test cmpb or lret cmp aaa (bad) cwtl pop xor jp rcll mov fwait xchg into inc jp sti aad jnp,pn add sbb sub sbb dec movsb call pop (bad) push pusha cmp mov jp lret and jb push dec gs mov mov pop popa xor push pop mov adc repnz out jne arpl lock sbb jp xor push push adc int (bad) jmp stc clc mov push and ss jp aas xchg fistp jmp xchg or mov (bad) aas out jl pop adc jp and movsl scas decl push lar pusha ljmp es arpl xchg and jae adc mov (bad) popa addr16 cmp mov mov test mov mov (bad) mov loope cli cmc std cli ja inc xchg and shll adc jne test mov mov push jnp cwtl dec pop dec out insl (bad) push adc sar mov jp outsb dec dec mov mov mov mov jecxz into lcall es fcmovu sbb out test dec imul ss cmp jp lret dec or mov (bad) shrb mov add mov jp sahf pop mov gs inc mov std not ja inc fsub out iret scas sbb fwait or dec dec nop loope popf ljmp cli add (bad) mov lock pop sbb push add dec movsl cwtl stos push jne mov cmp sbb jle in mov cmp lcall jp call xchg jno xchg ja xor hlt mov dec out add add mov sar ret pusha and adc cwtl insl jb insl and and sbb jno sbb jbe out aas xor xchg adc out jnp iret fnop and xchg lret sub ljmp outsb stos std jle popa stos (bad) (bad) push (bad) and stos sbb jecxz fs enter movsl and cwtl imul sbb jl roll cmp pop push scas insl jo fisttpl push xor cmpsb mov jp rcrb repnz or dec pop in lret std xor imul jg mov outsl arpl dec test (bad) aaa or shrl bound popf inc mov push dec jns (bad) pusha fisttp add in mov lods loop sub imul jp pushf ror cmpsb paddsw pop jb jmp int3 addr16 xchg or sti or mov je stos mov movsb mov lock jbe scas insb and jnp clc cmp jmp or jne or dec jle in mov mov and cmc dec jp pop fldl2e out lds loopne cmp fwait xchg mov push loope add jne pop outsb js adc inc imul mov jne sub test imul jne test sahf fcmovb fcomip dec mov mov dec jmp fwait or push aam lahf sbb sub std mov cmp xor mov and jmp insl ja jp xchg mov cmp xchg fidivr push mov push dec push pop sbb push cs ret push push and xchg mov sbb aas cld jp push ds or dec add push test adc fidivrl push and aas mov mov sub jmp arpl dec imul outsb cmpsb fwait jne jo push nop rcrl (bad) fildl sbb std xrelease aad mov lods sbb sub jp outsb outsl or jg pop fs push inc jb adc inc sbb daa idivl lret ja repz jp pop push lock xchg inc fdivrs jbe inc sub (bad) mov or push out jle jp je pushf jmp lret sub dec idivb fimull cltd mov jp cwtl fmull out test dec dec mov dec fistpl clc pop sbb sarb imul or inc mov add mov pop daa mov mov cltd enter scas mov out (bad) aaa loope test mov and jae jns stc (bad) adc ret clc mov scas pop int jae cmp jae push adc fmull or jnp loopne add idivb (bad) (bad) or popa or jno iret (bad) gs cltd cmp fwait sub push push shrl pop inc stos mov mov xchg in ficompl mov (bad) or cwtl jno inc insb push sbb mov add add lcall xchg lret jb cmp mov jle ja jnp add push loopne int xor mov sbb cld cmp and ljmp repnz cmpsl addl cmpsl mov in jp sub and test jp dec in xchg adc repz mov inc lcall jns pop sti mov xor loopne ret pop cmp jmp mov inc dec inc sti dec add jp out out lret add mov cmp mov pop mov mov les jp mov and lcall sbb xchg pop mov in shrb lods jp,pn mov or add cmc dec mov mov jp lahf out jecxz icebp jp dec mov jnp or stos cmp xchg mov xor jecxz mov mov and inc cmp lock lods loope (bad) in jp jno mov mov mov adc push xor cmp mov pusha int3 out jb inc cmp enter jp push xor lret call mov cli or std js inc or out das ss nop scas mull popl mov xor sub or scas jnp mov aam shrb push dec in fs sbb loope lods test stc mov iret gs mov jns stos or out rolb imul or mov jae (bad) ss sbb fcmove (bad) adc adc dec dec pushf (bad) or add movsb mov xor adc mov fsubrl dec pop sub divb mov pop jne (bad) lret push adc cmp xlat sub mov and lea mov and scas sub add dec pop pop insb pop dec pusha mov jp pop daa outsl fisubl cmc jo mov ffreep lock sti mov mov cmpsb outsb pop mov and rcrb sub aas dec cmp shll xchg or mov and mov cmp test pop js mov push inc out dec mov xor js je and jmp test je jo pop mov ljmp inc ret pop pop shr (bad) cwtl dec subb push push xlat cltd sbb jp and cli pop std push jbe sarb or pop mov fnstcw ret push jp lods ss lods ljmp pop xor cmp jnp setno lahf mov add add push jnp int fistpll sbb addr16 icebp inc jae or push mov pop inc and ss movsb stos mov (bad) in roll xchg jno adc adc jmp sarl aaa in xchg int lds lcall mov or fcompl cli cmp and mov iret rclb jns fistp cli test aam push test mov mov mov and or sbb repnz fwait andl cmpsl dec jnp nop enter xlat popa rcl sub jp dec lea inc fucomip nopl in add clc mov mov mov lods (bad) sarb push popf adc cmp jge lcall fwait ja add lret repz jg jp jo xchg jo sbb and mov cmp aam daa (bad) mov jp mov add call inc cwtl pop adc ss dec out std mov cmp sbb pop sbb popa cmp mov push lea jp sbbl sub mov and (bad) ret sub ljmp jne fild leave jnp push adc add mov cmpsl jmp (bad) xor jo fisubr aas rclb icebp add dec and jp imul jp adc (bad) aam pop aad bound es mov dec insb test mov jl push sbb or mov sti cwtl movsl int popf and je inc repnz jle jbe sbb (bad) mov lcall fsubs adc (bad) int inc mov add movsb popa and into outsb mov jp mov sub repnz add mov lcall (bad) ret jp cld sti popf mov pusha inc imul mov (bad) call jle fnstcw push lret bound out popa ret mov dec (bad) mov xor xor pop cmp push cwtl addr16 pop pop jp lcall popf nop fstps adc stos (bad) (bad) jo mov cli fs xor int insl pop inc imul loop stos lcall (bad) (bad) ja andl fild fucomip (bad) mov sub shll push add lcall cmc and xchg outsb loop repz ds sti xor mov shrl bound fcom and test pop fldcw gs adc dec and shll movsb sbb cmp fldpi mov stos or inc mov insl mov ficomp lahf mov fcoml cmpl sub mov popa jecxz mov or lods lahf push adc sub pusha inc (bad) mov mov gs or arpl inc jg cmp ja jno (bad) mov sbbl xor xor sbb js cmp xchg or mov adcl xor std fsubrl out shrl mov sbb jmp jb iret mov outsb jnp lds lcall daa mov inc or mov adc xchg (bad) push adc mov dec loope pop pop adc iret call dec dec push ja into imul loope jae rep (bad) jp (bad) mov and jno push cmp mov push cli lcall hlt pop pop mov lock jne xchg out ret pop mov lahf cmp or cmpsl aaa mov (bad) fldl loop cltd fimull pop or nop mov mov dec movsl fcoml and dec dec sub mov pop dec jne adc ficomp mov cmp ljmp jns fdivrs iret dec adc ret cwtl jp (bad) jmp mov cmp mov jnp loopne xor push add fisttpl mov das push xchg popf xchg jne mov jb loope clc lret data16 (bad) jo cld fdivs cmpsl cmp hlt cmp lds aam jp popf dec rcll sub enter jp cmp mov mov cmpsb adc test cltd sti mov mov or aad xor mov or popa daa into push fnstenv test cli pop cwtl jl pop lock mov add fwait cli lahf mov shll inc int and jp xchg bnd xchg out imul mov cmp pop add pop jp add mov (bad) sub mov sub (bad) cli insl mov cli lods mov (bad) mov fcomps or mov adc popa and push shrl sub cmpl (bad) xchg popf mov icebp cmp or rsm xor mov jmp jp mov jmp aad mov test test mov aas cmp mov andl jp and nop add mov mov jne push xor jmp sar mov jae jns (bad) xor push je (bad) mov lret cli cltd dec lds cmc jl insb xchg xor jp cmp scas adcl imul pop lcall jp loopne call dec push iret pop pop mov jp popf push xor inc imul pop sbb cld dec jae or imul dec and jl xchg mov add xchg inc pop sub jp call imul cmp push cld insl xchg insb push (bad) ret push lcall outsl (bad) aad flds sub cli xchg mov jae stos inc xchg imul dec sahf leave adc pop insl out testb lock xchg mov push sti cmc inc dec ja inc mov (bad) (bad) in repnz loop ja shll orb and out aaa cmp or int inc and mov lahf lcall call cli ja (bad) xchg add fsubrl jp jb inc xor sub and pop fcmovb out sarl jae push pop mov (bad) cli push xchg jp mov pop cmp push sbb aaa xchg lea mov popa push mov cli or stos test out sarb push sbb lea pop arpl lcall jne fnstenv mov dec aam lret sahf jno or adc ret cmp in jp sti movsb cmp in (bad) std xchg popf jnp or mov mov in pushf xchg jp (bad) mov ja js add inc cli dec or dec fwait cli jp adc push fcomps jo inc inc bnd jae pop cli push pop ljmp in push fisttpll repnz dec add fisubrl mov stos add jg out icebp daa cmp idivl cmp add fcmovnbe jge adc loope inc jbe movsb push xchg mov lahf in addr16 (bad) xor je push (bad) cmp dec cmc mov outsl or sti push test pop movsb mov adc rorl pop fsubl aam imul ret push mov jno js pop mov cmpsb out stc out dec xchg pop inc or mov jae xlat fildll je stos cli cmp fiaddl rorl push fwait mov xchg test pop push mov out stos lcall fldenv addr16 mov outsb cld pusha ret popa int leave stos popa adcb out nop dec stos xchg (bad) lcall mov fcoms inc and push dec in mov fucom ljmp je mov dec push int and fnstcw pop inc push jne les aas jmp pop (bad) xor mov cmp pop push loop fstpt stos test js jo enter or adc and sub daa sti stos outsb fwait movsl loope push div lret xchg mov sarl sub test xchg dec cmp fldenv movups int xorb notb xchg sarl lahf rcrb aad in in (bad) (bad) div (bad) (bad) lret xchg mull sbb dec movsb in mov out xchg stos mov enter shrb mov jmp and (bad) or iret mov in inc inc adc add jmp addr16 sub and push repnz dec or push (bad) ja mov gs add repnz jp mov hlt gs outsb sub mov icebp jmp enter adc xchg fcmovne stos mov jg movsb xor mov and add sub push xor or test or sub ror jp rclb imul pop cli jnp inc push lds jle jne mov push jns fldt xor popa inc out lret and lahf xchg in jne int inc xor jp push movsb aaa inc adc jno mov mov out (bad) in iret mov std ss or mov jne pop push lods jne xlat sbb xchg and (bad) movsb push cmpsl lcall mov push mov mov sbb mov jge popa cltd (bad) jb lea mov cmp push movsb (bad) call (bad) ja lods shlb adc push mov mov sub sbb pop outsb clc lea jno daa xchg xor sbb shl cli jae add sbb mov leave lods inc (bad) sbb in leave pusha inc mov jp xchg push jp insb fbstp scas mov inc imul xchg jp stos jge lds xchg test jmp xor jle cltd imul test outsb not cmp pop mov jmp inc mov jp lods inc (bad) icebp xorl sbb lcall (bad) mov add je sahf cmpl pusha js fcmovnu nop mov jp mov sbb ljmp imul or jb inc mov sbb cld shl sbb push lcall (bad) (bad) jne test sub lods leave jne sub stos sbb adc mov out sbb or cmpsb xchg js xor test xchg movl mov push dec pop cmp lcall dec mov jecxz inc mov jno cmpsl in add dec jecxz sbb cmp push in lahf fnstsw mov mov mov arpl movsb xchg outsb shlb cmpl jnp xchg adc push add jp stos pop and sarl push cld mov pusha dec mov aad ds jbe fcoml (bad) pop (bad) fldt arpl push movsb mov dec cmpsb imul pop jle xchg push movsb dec cmc sbb mov mov insb add shrl jae daa imul je ljmp ljmp test das pushw sbb adc sbb fwait pop push (bad) and or cmp add sub fs sbb jae pop shrb pusha dec lods or daa gs enter jge fsubl js sbb std popf repnz rorb arpl adc arpl js cmp int push dec xor insl je jno (bad) xor test outsb push push mov movb jp dec jae cmc (bad) mov sbbl ja aaa cmp cmp sbb mov jae cmpsb ret jp pop or test xchg jle sub jp lods jl pop ss cmc lds push gs jp shll es jge fnstsw fwait int3 sub mov fidivr cmp mov xchg mov xor and (bad) mov gs subl popa cmpsb lret movsb add dec push mov jne jp jg adc mov movsl lar test jecxz inc jno ss lods inc jp jecxz sub in enter stos gs xchg in mov je popa nop jnp repz mov mov pop sub dec out and cmp popf aad xchg movsl js jl jle pop shrl mov xchg loopew xor clc jp mov je ret lret std sub in imulb insl mov add mov out fwait mov inc neg test insb insl mov mov daa adc or mov orl jne inc xchg add sub jne out fs (bad) lock cmp inc and gs stos int into pusha inc pop out mov jae (bad) test jp push pusha jne (bad) (bad) mov mov imul or sbb pusha out cmp popa mov sarl dec nop lret pop lahf in mov pusha jmp loopne sub sbb hlt nop ja jge (bad) cli jne mov push cmp les sbb mov ja out negl gs fiadd ja scas or mov push xor and imul mov stc xor je xchg xchg daa jp insb inc addb sbb push add aad jo cltd addb loopne pop adc pushf add clc popa dec inc cmp pop lcall jne or fnstcw xor mov sbb jnp and push jp fistp dec jp lock (bad) out cmp jp sub and xchg push dec mov xchg push mov mov push sahf in push aad fcompl loope sbb pop mov mov mov lods movsl sbb test dec and std sahf loope mov push mov xchg aaa mov js fldenv clc lret int3 xor (bad) leave pop jmp cmp lock push sbb inc mov loope xchg mov dec das cmp sub outsl and sbb stos cltd mov sub xor push cwtl sbb xlat push ja imul xchg or dec mov or sub cmp das sbbl jmp ds imul mov mov mov dec jp push lods adc inc pushf adc in sbb jp ds xlat sub fistpll jbe sti nop pusha mov sbb sub push jb fs aam and fdivrs push es lret cmc imulb jp shlb arpl movsl fisttpll mov mov pop incl stos fsubl lods jne xor push jg fs jns jne fstps test pop xchg sbb mov push mov add rcll loopne invd cmp dec mov adc lods das in push mov repnz xchg dec movsb icebp sub adcb lcall xchg lea sbb lret jp adc or lcall or (bad) arpl cmp jbe jne mov cmp pop mov int3 insl out icebp (bad) mov add jp xchg lahf ret adc cmp (bad) lret cmpsl push jp push (bad) jno cwtl lcall hlt ja mov mov out inc stc cltd jmp dec lahf dec pop mov fnstsw mov (bad) xor jp cmp (bad) dec in jp mov lahf int mov cmp and jnp jno push and scas sub xchg sti push mov jne add sti data16 lods gs loop stos popa es mov sub movsl roll sub push jp lret sbb call cmp imul insl pop icebp jp add int3 xor jae jnp cmpsb fidivl imul aam (bad) mov xor lcall sub ds fcmovbe iret push inc jnp out sbb insl imul stos pusha and jecxz,pt sbb mov fnop pop mov sub out ja,pn sub jbe xchg pop mov pop pop sarb loopne cmp out cmp adc fs mov cwtl add mov jns test es lcall jp or dec cwtl imul rcr mov dec fdivr sbb test mov std aaa or dec lcall adc xor push jp cmpsb inc scas fdivl popf movsl dec stos dec leave fidivl jecxz jg jno mov push fisubrl jp mov or mov imul push mov or lret jnp sub xchg cmp pop fnstcw dec mov xchg aas inc outsb mov dec imul sbb addr16 push push jne push outsl mov jle jmp pop jp int pop jb out xchg clc jp inc lods add nop jg push xchg loop add loopne aaa ja mov xchg pop pop js in test (bad) jo xchg dec push movsl xor outsl lea ret xchg jp dec fistpll (bad) jno jne aam add cli loope sbb xchg lea sub pop mov jmp enter jp cs repnz xchg jne sub (bad) outsb add lcall mov fwait sbb jne jmp mov stos or dec xchg ds push dec pop rcrb inc mov test lods cld sub pop mov sub adc sub push and push stos nop movsb push jbe pop jl test pop jl cmp mov fs xchg inc icebp pop lcall outsl gs sub push not imulb jae lret cmp pop insb jnp dec add xchg (bad) fidivl in js jl movsb das (bad) jae xchg ja mov jo sbb sub add and je popf or imul push fdivrl int leave mov mov scas mov aad mov (bad) movsl popa cmc dec iret xchg inc aas test inc sbb aaa stos fldcw mov shlb mov inc adc add xchg imul sti cmp mov cmp and jp pop aam out sub jp push cli mov out stos mov fcmovu jmp cmp add jb pop sbb mov xchg aad jp pop sbb imul and add lret lock lea xor fisttp shr pop push jne je stos inc jne jns and sbb clc pop stos or xchg cs insl inc pop int cmp xor sbb andb dec pop add mov push hlt aam mov lahf stos inc jecxz aas adc (bad) and xchg std rclb movsb fisubl xor stos push (bad) xchg outsl jmp nop clc cmpsb ror jg and lea push sub push cmp pop jnp stos sub dec xor xlat jns push and sbb inc push and (bad) aam xor addr16 fsubrl sahf out cmp pop cmp or xchg dec cmp add je jo and jne sub movlps and stos sub push leave or mov test push pushf sbb jne push xlat push push inc fistl test fild or icebp push out hlt insb add mov adc push (bad) stos mov xor sub jg cli xor mov stos pop pop (bad) fdivrl stc fstl imul push cmp xor lock pop inc pop sub js fisttpll pop push ss fwait je fsts in data16 insl test enter or cmpl clc mov cmp jp push inc popf jp adc pop mov cmp repnz jne in andb mov and pop out jle shll xchg dec push jle mov mov movsl pop sbb imul jp mov fcoml sub mov mov repz loop mov mov lahf jno imul pop (bad) testb les jbe dec lock xchg cmp test jle add movsl xchg jp and in clc mov push lea or add call fistl cmp fstl jp mov mov out jne jnp mov add jp push and jp jg inc in jns shrb jne add mov nop insl fcompl mov add jp arpl or mov jne mov xchg sbb jg divl pop fcmovu in and movsb dec iret jno and jb repnz mov push pop mov fs popf xchg xor bnd test hlt aas shll push jbe xchg lcall pop jp adc jne pop jno adc push and xchg mov mov out popa or jnp daa add fistp sahf adc imul sbb insl fwait pop stc pushf push sbb mov jb cmp lods jp cmp in or push pop add jne pop mov pop fwait or popf xor add loope dec test sub les sub jp js push adc movsb add fwait shll imul and dec js out cs ds or dec popf jp pop mov xor or cltd xor add das arpl stos pop lods push cmp rorl inc gs xor daa ja std ret jnp xlat loopne icebp (bad) stos popa fcmovb cltd cmp repz ja stos jae,pn sub in sar dec arpl imul push inc or test cmpb clc inc xor loope lret sbb jbe out ret mov cmp dec cmpsl jne pop pop inc ret adc outsb jl dec adc sbb sbb jp mov add (bad) inc lahf pop mov outsb stos dec adc loope ss sub sub pop mov outsl fs out iret mov cld pop aam xor int popa pop clc xor xor movsl lcall outsl lock add pushf xor or int3 xchg dec add xchg sub in sti clc cld and sbb neg sub cld aaa adc push jne shr cmp idivb xor xchg insl sbb mov xchg dec stos es fcmove or popf dec mov push test pop decb mov into leave jg cmp or test mov cmp push cmp jl fild jmp jbe arpl pop xor dec mov cmpsb je pop add jnp in xchg or adc and xchg push dec std call xchg and dec jne stos mov fistp jl jp xchg mov repnz sbb push or mov or imul xchg sub push cli xorb fstl xchg out inc mov mov repnz fistpll jb push add mov mulb inc push fldl2e cmp sti add sub fwait jo xchg loope inc sbb fnop ret or cmpsl fsqrt jp fwait pop jl sub jbe xchg lcall cmpsb mov jp dec xchg ja push outsl insl lds (bad) mov jp xor lahf xchg cs and cmp (bad) (bad) test push and dec mov mov mov dec les jp xchg xor sahf pop xchg inc iret xchg subl (bad) mov sbb rcrl xlat and fadds sbb xchg (bad) xor jb insl mov outsb xchg xor jp (bad) repz mov subl int3 ret rorl sbb out clc cli xchg sbb pop pop jp cmp ret mov je sti fxch sub ja xor or fldl mov out pop cld jl lret jp je lcall (bad) jp ja fisub and aas ljmp jge dec sub int sbb sbb lods lret call ds push xorl mov jnp loope jl aaa into bound inc cmpsl cmp sub xor cld jp aad loope xor ja enter rclb dec insl popf adc leave mov test jp add sbb aam dec sahf idivl mov push jecxz clc and mov bound adc jg adc mov jo mov jmp cmpsl mov mov pop sub hlt idivl jp push push mov repnz cmp push (bad) clc sbb dec mov jp lcall std into ljmp jp fidivl pop jns not cld cli repz lret dec out pusha mov xchg loop (bad) mov cmp fistpll xchg jp movsb or out dec sub xlat shll jg mov gs mov mov push push loop push jno cmpsl insb lcall div sti mov dec cmp xor bound (bad) aad cmp daa xchg ret fwait mov andl das shll fldcw xchg or mov insb dec lcall enter jnp fcompl inc cmp arpl jnp xlat stos fldl rolb and pop jne (bad) jbe push daa cli in mov imul jbe cli mov cmp sbb aad xchg jp mov jp call lds rcrl in dec mov jp lods and (bad) sbbl test lea adc and mov fstps add mov push pop mov stos sbb out fist les fidivrl lock dec sub jp mov fs dec jno shll jns mov cmc mov sbb mov rcrb es jnp jge jp mov clc push lods bound pop xchg loopne or mov out sub pop fs jne mov xor jge sub pop sbb popa xor jbe ss icebp nop imul into sub pop bound test pop sti imul jns mov lods dec dec and jno or (bad) adc jp mov jb push jp mov adc mov cmp pop fbld je pop sbb xchg popa shl pop jp ficompl jp loopne repnz push loope lret sub out div aas push add jle jp,pn std test sub push mov jb stos and dec out dec cmpsb pop mov cmp mov stos loope gs push jp mov loopne jp stos xchg (bad) icebp add aas cli aam fldenv stc mov loop add and pop mov aad mov or leave sub push cmpsb push inc (bad) (bad) jae cmp xor cmp je (bad) jl negb cmc iret mov cmp pop ja rolb fwait (bad) hlt rol or in jp or inc repz loopne or mov add jge mov push mov imul xor sub mov int push popa pop adc pop mov lret sub aad jae jnp cmp hlt lods lret jmp sti jg je dec and sub jae (bad) icebp testb js or jge adc pop cmp lret jp mov sbb jp push adc sbb jp (bad) jae lds aaa (bad) sbb sti (bad) hlt cmp jne xchg cmp cli lahf adc cmpsb dec cmp and inc insl mov xchg test sub std loope jnp data16 adc sub inc jp std ss aad xchg jp in sub test xor cmc (bad) mov jl mov cmpb je outsb mov stc (bad) jno insl ljmp fistpl mov mov mov rcr repz imul sti aad fidivrl xchg leave pop xchg push mov mov pop fnstcw (bad) or lea fwait test ficompl mov (bad) mov jbe outsb sub xchg addr16 lock sti or cmp dec push mov cmpsb insl clc adc sbb (bad) mov in jp mov pop pop or cmp dec jbe fbstp (bad) xchg daa fmuls clc lret ljmp jecxz icebp sub cli out addl int3 mov (bad) fisttpl inc push xchg ds push test sbb outsl shl push ljmp popa inc jbe jge movsb movsl push jb add dec cmp fwait and adc xor out sub sbb pusha push es cwtl mulb adc mov lahf xchg jne inc push or clc lea kmovb (bad) es jns fildll xlat gs daa leave call sbb andl je sub dec sbb ss pop xchg clc push outsl cld sbb movsl lods sub flds cmpsl pop aad mov and xor pushf dec and iret cli jp int sbb sub sbb scas sub mov test movsl xor imul pop fwait ljmp sbb mov (bad) mov sti clc es jne cmp pop lcall xchg in (bad) mov dec jle jp aad push mov bound or add test fwait inc pop sbb xor xchg imul shll mov jmp push jnp shlb mov and mov (bad) and or cwtl icebp ficoml add sti cmpsb jne out mov ja sbb sub addr16 jp (bad) pop inc in mov dec cmp cs int3 sbb mov ja sub fcoml add mov (bad) jb test imul xorb repz push daa jnp insb (bad) dec jp push loopne jmp cmpsb mov and or mov or hlt loop stc jg fstps jne mov cmp jno add jnp nop leave xor int3 mov jne (bad) xor jns sub jmp cmp push dec add outsl cld mov fwait hlt mov mov pop inc (bad) das fs out subl push jecxz mov data16 popa xchg (bad) and cmp lahf jp dec cmpsl adc cmp test dec addr16 add in push (bad) adc lret jp aaa cld xor pop mov fprem fnstcw mov or test daa inc lock enter adcl loope aas mov pop outsb sub dec leave sti in insl mov sbb xchg pop dec gs stc rcrl test push jo inc sbb mov cmp ljmp gs mov int3 mov pop mov cmp add cmp mov jae adc (bad) sti fsubrs je adc push cwtl adc add dec sub popa and push test push mov aas cli adc test or pop aad (bad) adc lcall mov adc and imul mov shrb int3 cmp cli ror fisubrl mov pushf jle das ja mov jmp jp jbe adc cmpsb or test add insl data16 dec sbb sbb push gs push mov ja mov mov push in aam push jae clc rcrb test (bad) arpl clc sbb stos cmpsb mov inc sub sbb jl adc out std mov mov xor xor pusha jl out in mov lds mov mov stos adc pop add repnz sti out and movsb push mov outsl mov sbb jmp fcomps imul dec jecxz pop jle loop mov xor mov sub ljmp int out pop rolb mov cmp mov add lods mov inc cmpsb cmp sub imul push or mov sahf aas fldt js mov cmp inc ds cmc test mov jne ficom loope cmp mov push jae sbb cli inc iret fs add fstpt jb add or jo pop inc mov enter jle fcomp mov push sub sub sbb cmpsl ss jp aas xchg inc mov jg ret imul cli sbb cmpsl dec lcall shll dec ror mov faddp mov or loop jo sbb aaa xchg jns inc cld dec movsb jne lahf mov jp in fstl push dec jp js loop jb dec jne cmp jns jno cmp adc sub inc jbe xlat (bad) fbstp mov add sbb imul sub ss jg and les call lcall jnp (bad) repz xchg jnp mov scas jp mov and mov hlt incb cli test adc sub imul mov jae aas push idiv pop adc xchg cmp hlt adc cmpsl sub cmp xchg fsts xor aas sub mov mov inc mov sub test adc imul int3 pop in push fwait jae sbb fild sbb mov aad mov aam fildll sub or mov mov ljmp test inc sti pop push cs cld xor adc or jge mov pop imul push jp fnsave xchg les dec push xchg xchg push pop stos cwtl push shll stos pop pushf cmp push outsb sub test dec dec sarl fistpl out lock ret insb xchg stc dec ret cmp sbb cmp mov (bad) jno adc add inc mov xor lods (bad) je adc mov loope clc sti lds imul push ret cmp mov adc cmp jbe adc sbbl in xor rorb cmp jp arpl sbb sub jnp lret (bad) cwtl dec pop gs cli jns aad fsubrp inc mov bound cmpl xor loopne andb mov jnp lret jbe cli test add pop jo mov jne fnstsw mov push popf mov je loope cli mov ljmp xorl pop ret jno loope mov das add test shll jge imul inc adc std and sbb fs das sub jle mov popa jae jbe ret imul push cmp jnp decb inc aas imul test mov dec inc es mov push jge jp mov pop lcall scas push inc add aaa test cs insb jl outsb andl int sarb lock sub cmpsl add mov lret in pop push mov adc sbb jbe sti aad mov addr16 pusha js in shrl outsb mov lods movsb iret std jno pop fnstenv pushl push ljmp pop mov pop inc stc cli push inc outsl jp cmp dec into mov jp in xlat add add jp test enter bswap ds jp sti insl das pop pop idivb inc mov or subl test (bad) mov pushf scas imul or cld mov sbb ja sbb cmp lock pop xor mov subb jmp pop jp movl mov push pop push xchg mov jl and imul ja jae fcmove mov mov jno loopne in adc bound repnz aas xor push (bad) mov sub xchg pop dec fs mov cmp ficompl inc loop jb out negl movsb or mov mov mov cmp adc xor jne adc xor xor push sub imul aas xor or cmp xor lea repnz push arpl adc xchg jb,pt xor dec pop jae sub mov cmpsl in dec (bad) inc pop mov (bad) outsl sbb dec cli jb pusha push sbb sbb lret fwait ror popa pop movsb mov dec loop (bad) out sbb (bad) cli push pop stc imul mov stos outsl jecxz shr (bad) mov fdivr outsb outsb mov ljmp popl dec idiv test adc mov adc add dec test loope jp add sub into enter pop dec jmp lea push jnp mov loopne and xchg fs pop dec test popa jp inc cwtl pop cmp jg push push sbb push scas jp imul out jp cltd (bad) pop push outsl xor and aas iret (bad) mov in aaa sti imul leave mov sub fucomip xor jl (bad) aad ret xor rcrb loop xor jne pop loope inc sahf idivb jl cmp push in fwait divl sbb mov jne cmp jp pushf push aaa les call jp cmp jae inc jno xchg ja (bad) decb repz mov sarb xchg pusha xor dec and xor pop add jmp add aas push fnstenv fcmovnu pop pop cltd std dec jnp out xchg jp mov movsl (bad) (bad) pop dec sbb cmc sbb leave fidivrl jns mov push movsb push (bad) hlt push or sub aas test jne push cmpsl int mov mov cli push bnd shlb arpl jp cmp ja sbb cmp jp cmp js jnp rclb sbb jg mov cmp cltd adc cld push cmc jno mov inc jp dec les pop pop fwait push aas sbb fldt sahf sti jp pop mov dec and ret js lods popa data16 pop sarl test jp in (bad) jne scas (bad) push pop rcr xchg fwait pop jne xchg lods inc sar call cs or push lea jbe std sti out repz call or push jns lcall inc jnp out mov ss xchg mov push ja mov loope cmc js into lret and pop sbb jge adc push and in (bad) int cmp out fldcw das and movsl jbe xchg gs fcompl leave pop fnstenv ret dec std jg icebp sub pop xchg xor cmp or jo dec pop adc jb sbb js and orl inc xchg incl je jne sub movsb dec enter jae and fcmovu jne (bad) enter sub push dec pop sbb push sub pop jno inc sbb cmp test ret into mov push dec fwait idivb push fsubrs push mov jb mov and mov push add sarb mov insb adc push ret pop (bad) mov jle jp (bad) inc decl cmp ja xor sub cltd and push sbb xchg (bad) jne bound cmp pop jp loopne,pn fildl push repnz xchg add adc sbb xorl (bad) push insl js push jp data16 in mov add add mov adc (bad) ss (bad) dec (bad) test aas xchg les jg mov pop add gs arpl movsb mov addr16 mov imul xchg jp or push sub adc pop ret dec in es ljmp cwtl fisub push xchg inc cmp loope jne lahf dec pop das pop js jae mov xchg or cmpsl icebp cwtl scas lahf jne jmp cvtps2pi pop push xlat pop sbb fcmovnu sbb gs pop cld mov gs dec cmp push and les mov pop pop ret mov jp push mov push and mov lods cmp (bad) ss push sub jle xchg in mov xchg lret cmp and popa cmp rcll mov dec jne adc cmp (bad) xor or cmpsl jp and dec insl lea lock popa fwait sti in gs je sbb jb fsubl (bad) xchg push or pop lock xor jp sbb push cmp xchg aad mov je ds xchg aas mov or push dec or ja aad mov daa call gs je stos jge jg lret jp push adc push xchg imul cli cmp inc movsb ljmp insl cmp fisttpll push jp mov dec gs jae ret jno push sti clc test out jg jno inc icebp push add and incl popa push (bad) jno push add emms in sbb xchg add cmp fwait ret pop data16 cmp bound out jnp pop movsb adc fadd dec jecxz aad (bad) and mov movsb adc push pushf mov sbb sbb mov repz pop push sbb out inc cld add gs pusha into lahf and enter iret test xor imul mov jp sbb xchg icebp sub or pusha dec test or jnp aas (bad) adc insb inc loop out mov mov clc jbe (bad) dec cmpsb dec xchg mov pop sbb dec jp mov mov push mov nop/reserved xor popa dec es int3 data16 repz mov pushf fisttpl or out test mov imul jmp sahf sbb iret jne out lahf sbb in mov insl dec int mov rol popa adc dec inc insl sub and cli lea leave and cmp in dec subb outsb add cmc cmp out mov (bad) jp sub adc xor sub insl lcall adc add jp jecxz mov mov or call or jle mov mov pop enter pop mov (bad) lea jo gs and adc jbe mov rclb cmpsl loope jp ficomp or test push dec mov push (bad) lock sti (bad) leave lods pop dec push jge jnp mov cmp icebp mov and decb cltd pop mov xchg and nop fwait xchg dec mov or call mov fcmovb dec xchg mov mov lahf push jecxz in (bad) push mov xlat push fcmovu xor and (bad) cmp dec test imul imul rcr popa xchg xor ret or or call sbb mov mov jp inc loope lea mov mov or adc aaa cmp mov cmp xchg sbb dec xor and jp xchg fdivrl jp mov ficoml cmp into imul cmp push and icebp rcl sbb insb push mov subl xchg and add jb xchg jno lods adc pop adc push and xchg sub addl lret fisttpl pop out loop cltd ret and test mov stc mov test fstpt js sarl push shrl inc fistl cmpl push adc jg sbb (bad) mov pop cmpl cmpsb sub jp pop fstps mov mov or mov lds pop inc ja lea fist sub jp les (bad) aad push jnp addr16 bnd out add mov scas aam add jge imul imul and cmp pop int3 dec push cli and cwtl lahf mov cmp movsb ljmp xor jp mov shll xchg mov inc jnp add pop jnp in and sub pop sbb xor movsb lahf das adc adc xor jne loopne fsubl adc push nop adc jbe fwait pop sarl sti clc jp lar xchg stos or cmpsb into gs movsl fstpt inc mov mov push int push popa leave mov movsb push test sbb sub pop fimul out lret fildll lret stos and cmp jns xchg mov lods jp jno icebp ret jne adc xchg pop add loopne add sbbl push test jnp jnp xor jecxz ficom sub add xchg jae pop ret jbe pop adc jp test add jae sub jp sti push daa xor inc outsb jbe cmp and xchg leave stos fidivl gs add sbb jg xchg sbb cmc sbb lahf pop jmp cmp dec jp mov push xchg sbb pop jp lods mov outsl jp fcompl js int cmp pop adc clc xchg jne mov insl and into fstl adc inc mov aas jo jp lods pop loope std xchg push dec mov insb add mov dec jnp pop cltd popa jp adc ljmp jns shll dec aas jmp adc add or fimul ret xor adc insl push xor cmp mov mov push movsb xor jb mov jle push jl push sbb cld or and jp (bad) cmc and jo pop stos test jge rep push dec xchg mov xor fwait pop jp or adc sar mov lea in (bad) push fs xchg mov mov clc pop jne cli pop adc cld test outsb pop daa lea aam jno stc (bad) mov sar mov mov add jg fmuls js (bad) lea mov (bad) xor aam xchg out fs jns rcr jp fistp (bad) pop cwtl jbe dec xlat scas sti popf lret rcll loope mov and push mov enter (bad) pushl ja push cli lret gs xor cmpb shll fidivrl sbb das test add sub push sub test leave daa int3 jp and (bad) and mov add sbb adc repnz fs push mov popa or adc xor sti xor or jnp (bad) inc scas mov in insb inc jbe pop subl daa adc push jp int ja jmp loopne cmp dec cmpl es aas call push and addb mov pop pusha push cli dec and sahf fdivrl cmp jecxz scas sbb xchg sarb shlb xchg jp jmp repnz outsl add jb jp div inc xor dec mov jp pop sbb cmc mov in sub aas cs outsb fs cs mov jp jg aaa fdecstp pushf mov lea jp cs movl mov mov xchg (bad) or es or cmp jno fucomip mov call jge mov pushf rcrl push inc imul cli mov in stc mov push inc jo mov notl jno dec pop add mov lret test movsb notl ret and adc xlat add jp dec (bad) mov test mull hlt ja loope cmpsb and outsl sub clc loope jns cmp movsl sub jnp xor mov jno cmp in dec mov mov dec pop icebp mov pop xchg pop or lods xchg iret adc push loopne mov sub pop pop push pop pop mov mov xor stos shrl add inc jae add xchg insb not out jge ja xchg aaa and push js mov mov dec insb dec pop add pop dec test sti dec xchg pusha cs pusha pushl jl push jp repz movsb imul mov into les and push repz inc jmp jg dec cli add lock out sbb mov fdivrs out and sbb push ja dec movsb stos cld je pop ret mov pop imul js sbb adc imul pop bound pusha (bad) ljmp cmpb call sbb arpl push ror outsb dec pop jp mov dec scas jne mov repz sub fcomps mov xorl sar mov repnz inc xchg es in xchg jb jp adc dec ret mov fwait mov jp sbb cli out jp and adc lret sti out xor movsl dec push arpl pop mov rcrl cli inc lret sbb mov imul mov dec (bad) jp xor hlt cmpsl popa test das stc fs jnp popa insl ret add mov ret dec jne inc cltd pop cmp loop bound sub sbb push add mov invd adc add stos jno xor repnz in add cwtl add cltd xchg mov lcall lods jge mov jne rcl insb test (bad) jno out cli jg call push or mov in out dec popf pop outsb addr16 or mov jo ljmp mov ret stc mov call add insl daa fisubrl sti int into test inc or jp sahf jp lcall stc ja loopne outsl inc cmp (bad) or adc mov jp ds push pop ja adc fstps test mov jnp push (bad) mov add jne cli pop mov sti (bad) in and cmp add push mov iret sbb cli mov and xlat adc je sarl pop icebp (bad) dec (bad) repz test inc mov movsb jp div jae insl popf xlat push call out mov js mov dec mov jnp (bad) icebp jne sbb xchg xchg lcall cmpsl add jne std ljmp (bad) jp and fldt or jp sbb leave jp (bad) fcmovnbe xlat popa cmpw imul addr16 mov jle xchg jg mov jecxz xor int3 cmp imul cmc cmp stc cli out push jbe jg jno enter xchg mov nop dec sub sub jle add xlat jmp jnp mov repnz sti aaa pop mov cmp js cmp imul sahf dec push sub enter shll jne inc rcrl jl cli xchg dec sub cmpsb pop lds pusha dec addr16 iret ret add xchg sbb in sub movsb jle mov lahf push inc pop add jecxz pop outsl andl jae push push add mov mov cmp andl mov xchg lea jg jno push xor loope popa popf push mov jp lcall jl fsubs jp jg (bad) sti cmp repnz insl cmp mov mov cmc aas adcl fsubr es jl mov jp mov imul (bad) insl loop out dec and pop fnstcw mov jp inc mov mov mov adc mov sbb jp xchg pusha insb lea jp lds andl loopne jle xchg jp movsl iret lea cs add repz jnp adc js (bad) in iret test jp or sub sub and enter (bad) add jg inc scas or sbbb mov jns sti aas cmc inc mov pop insl xchg xchg xchg cmp popa cld (bad) dec test push data16 inc pop aam (bad) hlt (bad) repz sub xchg and stos dec sub cmp xorl movsb (bad) mov icebp bts jle imul idivb cwtl gs xor (bad) pop popa test fisttp mov nop pushf repz das adc je inc jo leave les loopne mov fisubrl adc pop mov fnstenv push mov lods pop or popa xlat dec mov jecxz jp cld sbb pusha jp repz clc fwait movsl jp pop adc mov test xor mov lret fstps loope js loopne adc mov and sbb in lret inc imul sti mov and sbb mov push ja mov aam pop inc jecxz push ja repz cli sub mov in test dec jp aas loop xchg push vsqrtss sub (bad) mov jge cmp push data16 jmp lret sub into add jno add fistp std lcall cmp jnp pop mov rcll xor jp sub xor pop jge rcl jns leave mov mov insl cwtl dec cmpsb icebp test fistpll push ret xor xor cli ja das mov sti mov mov mov xchg mov push in add gs pushf dec sub mov and outsl fnsave sbb int idivl mov and adc enter call jbe aam rorb sub xchg cs push iret ljmp sti sub mov movsl nop (bad) cmp lret adc push lods cwtl scas xchg jg inc sbb or cs jmp xchg mov stos stos push sbbl popf mov adc xchg inc adc arpl test (bad) mov stos ret ficompl testl aas clc xlat and pop mov call jae aaa fisttpl aad test movsb pop std ja adc pop hlt cmc add dec mov pushf sbb shl jecxz loope sub inc lock mov jp ljmp jp cmpl adc sub stos pop sbb popf repz xor push jbe adc jmp sub adc sbb aas jmp stos nop test fstpt shlb mov divl pusha sbbl lcall push pop add jns fs rcl and pop sti pop jle js fild adc jle xor add dec adc cmpsl cmp mov fimull fs inc iret in (bad) adc jmp push shlb jns mov inc out mov jne cwtl arpl jg adc stos ret sub and out xlat sahf xchg dec fwait xchg sbb int jp pop xchg xor jno push jle jg enter insl popa cmpsb lret sahf push push aad jns xchg jne cmp sub mov sbb ficomp jnp maxps push data16 jo aaa push jge cmpsl enter fdivs xor in jne in add dec fidivl mov shrl and add add xor sbb (bad) in out jnp ficoml mov fistpl jae in fwait add shlb addb sahf ja lods xchg mov je lret push sub xchg add jp and or xchg add or mov repnz jl jp jle pop aas cmp nop mov rclb loope xchg ja push rcrb xor push xor sub lahf jmp out jp pop inc pop dec xor xchg insl or xlat scas mov movsb mov inc and stos jp movsl (bad) shr jns orl shrl cmpsb imul jnp mov adc xor gs jmp pop or jecxz test xor aad sbb push xor sub inc or sub xchg (bad) mov pushl sub int3 aam sarl jmp fistpll inc imul sub lahf and test fnop fcmove xor pop pop loope mov loopne xchg loop add gs mov addr16 or sbb adc mov xchg push out js push in inc gs sub test jg cmp mov push loop stos (bad) and add dec inc dec mov and into ja cmp dec imul ds aas mov fisubrl cmpsl xchg jecxz dec mov cmp stos fs jl adc xchg jp jge inc pusha adc loope lcall mov cmpb jp adc (bad) jnp pop jp test stc cmpsb mov lods and (bad) and fsqrt add jl mov jnp jle mov dec sub sbb sbb push test jp xlat jecxz mov cmp mov je gs cmpb jge aas fsub cmpl inc xor lea out mov cmp pop push lods stc rcll fisubr pop cmp sarb mov push sub fistpl jp add adc call ds pop xchg and les or mov jge ret jmp jp sbb xchg cmpsb and add inc out mov lcall popa fst pop add pop dec push jp inc (bad) sbb stos lods push sub inc cld pop jnp jno stos ret aam jle sbb movsl add and popa sbb lahf cmpsl pop jne scas lcall enter dec repnz imul outsl ja sarl out cltd xor jne bound outsb or dec popf test push xchg jmp fldenv mov jno sub (bad) xor shufps pop dec (bad) aas inc xor call pop ds dec imul sahf dec cmp addr16 movsb dec test sbb dec (bad) xchg sti push pop adc gs leave sti pop arpl cld mov gs adc fistpll (bad) sub xor movsl xor jg mov aas push dec (bad) aaa jmp pusha jae fldl (bad) fmul xlat sbb xorl pusha cltd imul mov or std js movsb mov cmp jns lock lea cmp mull lods outsb jne popa add stos out insl jb sbb flds ret mov mov addr16 mov adcl popa adcl dec inc test jbe shl enter out xor test pop bound sti stos pop icebp lds repnz add or cmp sbb adc mov adc pushf dec xchg dec mov insl loopne (bad) pop gs stc or dec or add pushf mov mov and sahf lock lcall pusha jnp mov mov sub xchg int3 sub ficomp push mov hlt repz imul cmc lods sub (bad) stos inc mov stos incb inc xor icebp push push dec mov sahf dec pop jae sbb das fs loopne dec adc jp push push es xchg movsl push mov idivl bound dec fidivl pop xchg xchg ficomp insb (bad) push xchg dec jne push cmpsl jecxz mov fucomip dec add pop int push arpl pop inc in mov mov inc jb ret push cld mov (bad) pcmpeqw repnz sbb pusha bound push dec or das sbb rcrb jl jnp out ja popf and mov xchg in out mov es xlat sbb cmp and int3 jp les gs cmp cmpsl shlb inc icebp loopne jno or insl out jmp js nop jp (bad) xor dec sbb pusha (bad) xor adc fistpll icebp addl fs int3 jnp jne,pt sub aam cmpsb imull fs jo pushf xchg pop aad fistpl jns insl add out ret sub pusha stc bound incl stos js sahf dec ja mov imul fucomp hlt push movsb (bad) pop iret push test or xchg mov cmp sub jnp cmp mov lret test xchg cli xchg xor scas or fisubl nop add lret cmp or clc push pop xchg pop lahf aas addr16 sbb pop push (bad) cli xchg push xor or (bad) xchg mov mov fwait jno sub sbb lods out push mov push aad sub movq dec pop xchg jae (bad) loop cltd nop fwait movsb cli add subb flds adc (bad) jno fwait sub or push ja imul das mov push ja mov fnop fucomi mov pop inc sub push (bad) arpl cmc push daa jo push (bad) pop lahf mov adc pop mov bnd and push rolb and push fistpl dec jmp xor jp pop and pop pop lret fwait cwtl pusha nop and stc sbb pop (bad) sub sub push arpl hlt ret int3 jnp mov test jp adc iret loop call cmp dec mov gs daa or jp inc lcall xchg jp inc and ds and lock adc or popa psubusb fstps mov imul jp xor data16 mov popa cmc push sbb gs mov orl inc das mov test movsb add adc and or mov sbb pop sti mov test bound jp jnp out mov cltd jl adc js xchg lret push jne push jp mov jne mov (bad) jb pop xchg jbe mov insl aad cmp sbb xchg loope or add mov out pop pop aam leave in scas (bad) je mov (bad) sub and into push sbb aam inc or jp cmc movsl lahf fwait dec mov les inc jae sahf dec sub sarb inc idivl sub fwait test insl dec daa dec cmpsb cmpsb jp sub sbbl mov in and adc jae jae cmp fbld and inc jp inc sub inc sbb aad mov out add push sbb cmp out test mov push (bad) sbb or int3 sahf jne ret fild cmpsl jnp or and daa adc jp mov jno sbb cmp xlat loope jnp inc loopne jns gs cmp lods jp sub test mov jp and ficomp cmpb (bad) mov sti inc jo xchg jl pop fist lret mov sti inc mov pop mov dec fwait rcll jp movb xlat sbb in outsb jmp clc or dec mov fwait std jg mov test shlb loopne push mov inc xor popf push mov rorb es fcmovnbe and push or jns jp gs sub sbb std push jp imul mov mov lcall pop pop mov sbb xor lahf in xlat rolb pushf ds fs lock enter movsb into jnp ffreep sbb adc cmpsl jno arpl push add jp mov fxam dec sahf out mov pop pop or dec test pusha jp out aam pop scas hlt cmp out xchg pop cltd pop scas jp mov in les gs lret or test sbb push or inc push cmpsb xchg mov xor es shl pop pop in jle jp adc sbb jecxz and subl jne sbb dec lahf sti (bad) ret addr16 pop and xchg dec in push adc jbe fs jnp dec outsl jmp ret scas imul jnp cmp and inc lret sbb push sub mov xchg pop loopne je,pt pop pop and and pop pop stc mov mov cli aas add inc sahf addr16 jl movsb jno pop gs aad jae jmp mov popa and pop js insl jae outsb das add push pop popa js insl gs jnp sub int3 mov popa dec and shrb int orl jecxz sub in clc lahf lods (bad) fs cmp shr stos gs (bad) idivl (bad) pushf push push jnp dec in enter cli mov sahf jo fs out inc cmp mov xor mov jg inc xor addl add mov mov cld and pop fnop outsb jmp dec push sti shll sbb fstps pop jp test rolb mov pop daa jp mov test aas stos aaa cld sti mov adc cmpsl xchg jne out outsl ja cmp and jmp sub mov xor jae and std out or leave bound cld stos xchg into sbb pop sub mov out in or jnp cmp bound loop push (bad) jp scas (bad) xchg sbb aad jp push aas sbb pop and jp or (bad) jae xor mov lret mov adc sub jp adc (bad) addr16 xor ja insl sarl lret adc int cmp (bad) jmp ret mov les push sbb mov (bad) cmp mov jp repnz add in and out inc (bad) jp jmp dec test fdivrs popf js sub mov fwait je xchg sbb dec sub call push sub loope xor dec insb jno mov loopne push bound or arpl dec push xor lret cmc aam cwtl mov jnp sbb jno imul or pop aad mov rorl jp pop (bad) icebp jb fstps mov jmp or pop stc lahf mov lea mov das imul cltd xchg mov test ret popf scas ret mov inc scas out lret je ja lcall sbb int sbb sti dec in jp jecxz,pn pop out in cmpsb sarl lods hlt repz jg add imul mov and jno xchg jb sub scas das lret inc stos lock mov lea (bad) cli cmp mov aas scas insb jns movsb stos xchg jp xchg ljmp push ret iret sbb or ret xchg int fwait dec mov rorb push pop clc jnp pop adc jp movsb daa xor sub mov repnz cmp and popa js pusha sbb jp adc sahf addr16 fdivrl sbb mov iret cmp pop jp ljmp jno pop fcmovnbe movsl dec mov xor mov pop lea cmpsl stos dec jp or jmp pushf sbb adc aam ret jnp cmp and jbe xor jp mov ret xchg push xchg (bad) dec mov mov ja dec ja test sahf pusha jg cmp pop mov cli or movsb pop jmp add (bad) mov or leave cli sbb int je inc das jnp fistp pop xchg rcrl test test lret cmpl inc lods aaa jge jp dec les inc divl add and test (bad) mov jne xchg (bad) jbe inc mov push dec pushf dec sti imul or add mov xchg cmpsl imul aad lret xchg jbe or dec xchg jp test dec (bad) xchg aas jecxz jae xchg cmp insb out xchg push or out inc aam or sub mov scas jp loopne cmp (bad) mov pop push xor pop add add xchg mov loope (bad) cmp (bad) mov scas mov insl ljmp fwait adc and fucomip add lcall arpl addr16 (bad) xor cmpsl int3 scas and jne ret enter cmc jp fistl cs add (bad) lcall test (bad) hlt popf jp mov dec aam mov mov jp sahf sbb inc mov sbb jno cmp add jecxz lret ljmp mov mov push decl jp add mov and ficompl flds repnz cmp lcall aam jne lahf lods mov loopew mov jmp testb and js add (bad) mov jne mov test stos push and (bad) fldenv add jno loopne mov stos in mov (bad) jne arpl stos pop sub testb mov xor dec push popf addr16 ret data16 aas mov adc aad or movsb repz icebp lahf sub dec out mov mov add sbb (bad) stos jp dec jmp cmp nop stos dec jne int aam hlt (bad) jb jns mov mov or gs sub mov jne pop cld enter cmpl mov scas lcall aaa enter cmc pop adc outsl cli (bad) sbb jnp andl push fdivrp sbb ret xlat inc and pop imul adcl mov inc inc mov hlt clc xchg fbstp insl les call jp push cmp out pop xchg push push (bad) movsl cld hlt mov jl and (bad) mov mov mov xor ja cmp mov fnstcw cmp cli dec cmp sub sbb cltd pop xchg jp jno pop gs dec jbe xorl lea sbb add jg (bad) cmp out cmp jno imul es mov iret pop sahf jp fsubl shrl idivb enter enter fldpi mov fdivrl cmpsb jns sbb xor aaa mov xchg sarl push fs jnp push xchg pop mov pop xacquire jp rolb in jp fisub or xor pop sbb and outsb jp (bad) call xchg xchg pop jbe sub insb push inc dec pop add ss in stc aaa insb mov dec fidivrl mov inc cmp or jp in mov pop pop sub (bad) jnp sub ljmp add in jnp mov out sub movsl (bad) mov mov mov dec daa push cmp fistp fisubl pop pop popl adc loope push push mov inc sbb push jmp dec pop pop aas andl xor popf pop jp clc mov jbe sub add outsl xor ret ss xlat adc pop paddsb mov fwait cltd loopne xchg test outsb sub cmc jbe (bad) xor nop popa jnp push iret lret push xchg mov sbb stos dec stos pop push imul arpl jge gs dec sti int3 inc mov cmpsl hlt imul pusha jge lcall dec (bad) leave aam sub jp xchg dec jmp push rcrl push xchg pop shll test pop mov xchg es jecxz movsb pop sarl inc insb push cmp sar adc aam js ja nop inc xor mov aam inc jp mov out jp jl lods mov and test cmpl pop jae jmp mov mov clc pop je push pop add pop pop and push push popa imul lcall dec mov lock xchg decl jbe out cli outsl dec jge mov or push push stos loop add das aas inc mov hlt push inc cmpsb scas xlat stc mov mov lds outsb les inc inc jo clc adc jp int adc push mov out movsb mov popa pop inc in (bad) sub lock push adc add aas xchg int3 fwait gs jns cld mov pop sbb cs imul cwtl mov loope xchg daa mov imul jp mov jp insl out inc jb pop scas jp adc das out enter idivl ss sti hlt and aam lcall lahf cli xlat xor or (bad) mov mov add pushf adc aad in jns imul je jbe movsl (bad) cli lahf xor ret mov or jp dec repnz popa into push sub mov inc adc push jp test iret out ja jne out mov lret xchg or sub (bad) mov pop pop bound push mov gs mov sub sarl sbb add pushl xchg jg jae sbb neg popa rclb inc adcb into dec jne fisttpll mov sub es out lds jp,pt clc outsb sub jmp mov repz in out xchg and dec or outsb xchg xor idiv push int add std fistp jp cwtl dec push icebp out jnp and adc subl iret sub fdivrs mov pop subl scas ret lods inc jae dec push pop jnp icebp in sub cmc imul lock aam push (bad) mov inc or or cs (bad) mov cmp and inc add lock jnp jbe les mov pcmpgtw shld mov cmp pop jno (bad) sbb inc dec fistpl cmc xchg nop mov movsl inc mov sub lret push dec push push cmp stos add test lods into push in inc fist push jns cmp sbb push pusha popa cmp fs pusha clc mov in jno repz popa cmp gs xor jp pop jae fdiv mov jno imul mov jp cld aas jne inc fwait jecxz sti das imul mov scas mov push push sub push pop sbb jnp xor das jecxz sbb (bad) fdivrl dec mov xchg jp incb mov pop test dec popf sti subl cmp jne (bad) mov xor inc xchg out or loope outsb shll ja jno inc dec dec mov mov xchg sub scas lcall cmpsb add test dec std inc fucomi dec test or js iret mov jne push push sub jnp push pop mov mov jnp inc mov movsl ret jge mov iret movsb cld fstpl imul (bad) mov pop inc imul je jp or gs jg jp inc frstor ficom pop xchg aaa cmp sub fnsetpm(287 mov icebp fisubr push iret jno fist push insb pop loope xchg mov push push shl add sahf push gs mov xor pop jp insb jno aaa or add cmp jmp outsl and jne push pop mov mov sti mov aad (bad) jne loope mov jg push lcall sub mov xor mov imul stos mov jae lcall mov aaa push std pusha xchg jne dec or mov (bad) cmp mov andl sti bound push jnp (bad) fstenv xor add clc jnp and mov xchg bound add cmp sbb mov shrb lret lret in stos push insl out mov xchg fimul jg insb cltd cmpsb ja inc adc ficom js jge cld xchg sub mov cmp rcrb das push fcmovnbe cmp stos mov call sbb stos sarb imul aas gs (bad) push xchg lcall ret cmp lcall (bad) pop jp jecxz push xor inc or mov xchg dec (bad) mov push jns rcrb idivb mov jp mov cmp cmp insl dec es jp mov nop int lcall push sti jo push addb stos jl cli mov cmp cmp es ja inc xor mov mov data16 inc jge fidivrl push sub cmc (bad) mov cli inc jp inc jo adc jle sub bound mov jp popa xchg or inc dec mov jle jnp ss dec fldenv stos lock jp mov test mov jmp cmc jge out push jp cs shlb pop cltd das dec jp adc (bad) testl sbb jp insb (bad) mov test cltd clc lock and jo add movsl cmpsb mov (bad) ja mov xchg pusha sbb popf sti (bad) pop jp in arpl dec mov in add cmp cmp gs and rcrl mov add jae sbb inc xchg and jnp xchg stc cmp xor push lods imull nop jp test jne gs pop rorl mov inc fdivrs jecxz clc mov jnp add and sbb in cmp mov loop jle out mov jmp insl sti in lea xchg pusha out pop insl inc out adc cli dec pop fmuls aas pushw test jecxz adc cli sub scas cmpsl or mov jae xor inc hlt xchg xchg mov lea aam dec and ljmp js push stc fstpt aam sti pop mov jp sub mov int shrb jp mov mov sub pop mov jae fnsave sub xchg mov movsb jno addl cmp dec (bad) (bad) sbb xchg mov push cmpsb mov ret jmp imul andb sbb pop out loope jnp in int3 sub les movsb iret test mov jp mov dec xchg cmp cmpsb push mov jp adc sbb pop ja inc or aas fimull data16 cld xor sti jno loopne and icebp mov push jp inc cltd insb pop fcomps popa int test je pop and lret jp xchg cld hlt dec cmpsl sub xchg adc xor add and sbb sub arpl sarb imul or gs xor jns fisubr mov mov add pop insl push loope cli mov inc push jp nop and movsl (bad) xor pop mov xor daa pop cld add (bad) jp xor lock aas aaa popa enter jle push dec insl (bad) xor mov jp cltd jbe enter dec jb jp adc xor loope or ja call xor cmc mov jmp lret call mov push sub imul leave lret inc sub fidivl jecxz sahf mov mov sub jp cmp scas (bad) lea ficom lmsw call xor andb jb loopne lea fbstp popa enter addr16 jne fnsave rcr clc cmp push in lock popa in cli out dec push pusha jl in inc out jae sub mov pop loope (bad) lods gs jp push pop mov das inc pop jp xchg jae stos gs popf mov mov add aad mov test imul shrb dec pop xchg loope je mov popa xor cmp inc mov add jp pop std jecxz in adc test xchg into movsb sub sti mov xchg test mov insb pop cs sub jmp bswap ret pushf sub icebp cmp (bad) call jp pusha adc xor xchg jp cmpsb sub push outsl push (bad) in add jp inc or addr16 and popa int jl (bad) je mov push dec pop sbb pusha jnp data16 (bad) or jnp das cmp pop jnp (bad) mov test je leave mov loopne sti xor sub stos data16 bound lods cmpps sbb xchg or roll mov jnp call mov gs xorb jg stos add xor inc push mov sbb cmpsb sbb out mov push pop adc xchg push fnstcw or mov pop sub les xor sub sbbl lock jnp rorb inc jg xlat pop bound daa movsb lret es insb inc jp mov push adc push popa jecxz (bad) jmp jo xor rcll cmpb cltd or jg mov push out (bad) mov jecxz dec xchg sbb pop jge jnp mov sbb arpl adc add stos mov xor xlat loopne pushf jp pop je outsl jne aas push dec xor sub dec test lret jbe mov popa in inc mov or imul xchg xor xchg mov push mov push fcomp (bad) lahf pop ja std fistp lcall lret cld ja jbe cmp sti add inc daa sti xor imul outsl insb test aas cmp pop stc in cmp ss cmp fnstenv inc mov lcall pop xchg in call adc ljmp ret (bad) jp mov pop call push mov cmp mov jp or or mov into push std imulb inc add inc push enter mov out or in push cmp jp mov clc iret sub ret in or add jp mov xor inc jmp mov lcall test and ljmp jns adc repnz dec das sub lods sub jne inc scas pop lods insl jmp and mov popa adc dec out loope jo add adc fmull pop cmpsb sbb es lahf xchg icebp jmp sub sahf movsb hlt dec xor imul jnp nop das insl mov insb movsb lea sbb fldl ror mov sti jp movsb shl sbb jl cmp stos pop stos fisubl xchg dec pop jo mov push shrb je lcall daa jnp mov pop mov add fcoml pop cmp jbe push jge js shr insl stos add (bad) (bad) pop jns sub sub and dec pop mov xorb (bad) sbb (bad) dec (bad) arpl int3 aaa push mov jno pusha inc cmpl mov fsubs mov or cmc dec sub xchg movsb repnz mov add xchg xchg pop and sub cmpsb cld rcrl pop cmp jnp sbb fstps stos jmp stos or push mov jb cmp push loope xchg aaa inc les xor adc cmp jo sti rolb add push pop insl push imul adc enter insl push inc sbb sub (bad) repz inc jle jnp dec pop push lock mov cmp sahf jbe sbb aam pop jae mov cmp aas pop pop pop push in adc sub in iret sub push fs push jle push xchg jne xchg scas je sbb mov notb dec jmp subb and outsl popa lret inc inc push sbb jmp int cmpsl mov pop dec jae leave sti arpl (bad) mov in xor je imul (bad) aam jo jge pop jp jae data16 in leave xchg xor aas mov xchg mov jmp mov adc sbb sahf or add iret pusha jnp fxch inc lds or add aas movsl int3 mov jnp gs sub mov leave bound jne ds aam dec in int jp aas xor push dec sti subb (bad) iret jp cmp push pop repnz and imul cmp fdivrs mov jp mov push (bad) jmp or or or fldcw fiadd jecxz cwtl popa mov xor arpl pop loopne,pt or jmp push imul ds and or (bad) shrb jmp (bad) repz push out jp mov mov pop mov aaa mov mov push jb insb dec daa pop imul mov jp loop sbb cld xchg fnstsw repz daa add sahf ljmp (bad) cmp icebp push sahf mov push or sub ljmp repz lock aas push mov fbld or dec mov mov jbe jnp pop inc aas sub fnstenv pop push scas rcll xchg sahf (bad) mov outsb divb insl pushf je fyl2xp1 jg adc sbb jmp into push add push mov stc in sub jnp ret ss cmp icebp mov mov out cwtl repz test dec outsb jp mov out enter fucomp ds push (bad) jp iret jge jno xor mov repnz cmc or in jecxz popa nop jmp stos or std mov xor adc pop sbb int3 add or or cmp clc test push and push loopne or jp out xchg lret inc sub push call test arpl sarb jp mov dec out mov jbe ja pop and decb cmpsb jp in pop adcl js mov aaa or pop fyl2x es out jp cld mov inc push mov mov jp inc repz and or sbb mov (bad) pop loopne fsubrs lods xchg or out lahf ja or lret jns dec cmp adc mov xchg mov lcall sub jle or jae pop sbb loope fs sbb pop pop mov nop repnz in es or jp and xor sub jp test popf push (bad) xor loop adc nop (bad) iret gs fisub or push es sub pop jl lret xchg push ja (bad) lret xchg xchg mov inc (bad) mov and ja adc cli stos lcall aas sbb add (bad) fimull sub jmp pop and ljmp xor cmp cmp imul test dec adc sub aaa jle mov or inc sub sbb shr pop clc jnp fistpll pushf jle jp and xchg imul add mov cli jb xchg xchg (bad) jp dec out scas mov or jmp pop mov sarb xor sub fstpt arpl pop mov push jb pop aam push jle cwtl scas popa mov mov (bad) add mov mov sub mov pop dec dec cwtl data16 cmpsl jo dec cmp cmpsl xchg (bad) and ficoml jp add dec push pop xchg ficomp gs dec and or addr16 in lret xchg push insl cmp dec into enter addb jnp lahf push aam lret test add mov mov sbb js pop mov mov psubsw (bad) and adc add ljmpw jns xor and enter and mov mov imul outsl cwtl lcall test mov mov or in gs add mov mov pusha mov jmp jne (bad) fnop in sbb hlt xchg add (bad) js adc shll jne test gs pop jge or and imul jecxz xor mov fiadd lds fstps push imul mov cli pop cli pop (bad) out xchg sbb cmp sub cld pop fdivp jp mov mov inc xor xchg xlat nop sar push pop dec pop add std hlt jne xor pop mov cmp call repz fldl js jae cmpsl cmp in push push lahf cmc repz push and mov movsb adc mov sbb push sti adc stos jmp cmp in mov jle and testl imul jo push loopne dec movsb arpl pop pop shrl mov jmp pop cwtl movsl push movsb sbb stos mov push xlat inc dec mov push sub movsb scas push clc iret sbb cli js jb in jo arpl mov in out mov sbb jp xlat stos pop xchg inc insl enter pop outsl je mov sbb stos mov xor mov xchg adc insl jno jp mov lret mov sbb cmp arpl jb lods rolb test jecxz dec ds xchg imul pop dec aaa jl stos fidiv xchg in js push sbb or push call add lret jnp (bad) lret xchg cmp je sti and sub mov add cltd add movsb pop mov (bad) cli loopne mov or inc cltd or add and mov push lret jge adc stos sub xor enter cmpsl fs xor add cwtl sub imul insl add pop mov dec es cli and repnz pop iret mov jecxz mov push push outsl cmpsb out (bad) fdivl out shlb add addr16 lea push mov and cltd jnp fimul cmc movsb or cmp aas jae int3 sahf pop pop push inc arpl inc cmc cmpsl fldt stos test pop adc mov pop mov insb sub negl lret mov je add pop push push xchg inc imul cmpsb mov dec insl lods xor sub ljmp stos test mov cmp or std xchg xchg sbb cmp mov mov sbb adc imul mov mov ja dec ljmp mov fbstp fwait cmc dec pop xchg jp mov sahf pop ret cld and lcall mov cmp push sbb popf jp outsb movsl dec inc jmp imul jo pop outsl push rcl and xlat cmp in les and mov pop pop push lea jp pusha push movsl mov sub pop outsl jno xchg imul jecxz xor mov add cmp adc leave cli dec int jp imul outsl jne mov in jmp lods cmp adc push or outsl lcall sbb mov cmp (bad) sti jp mov mov into mov fwait test test adc bound xchg call mov xchg pop mov adc xor and push outsl dec inc xor jne jmp les xchg out xor gs int3 in jo dec sub xchg jg jp jle in les push clc xchg sbb testl stos int3 shll shl ja xor mov stos jbe jp mov scas test xor shlb xchg leave dec mov stos cmpsb pop bound cltd pop sub (bad) jmp cs (bad) jbe enter mov or test ffree jnp mov das popa add outsb mov pop push cs in fisttpl dec scas lret adc jbe aad sub aad lea mov pusha cmp push sbb mov mov (bad) ljmp sub dec adc xchg or adc jp lret not xchg fdivrl leave pop jae andl cmp mov lahf mov orb pushf push ret mov xchg and iret cmpsl sub sbb (bad) pop jle cmpsb (bad) leave cli pop dec sub jg fbstp insl sbb cmp ss xchg pop popa jnp add (bad) in lcall cmc and cwtl mov push jmp outsl fdivl jnp inc pop idivl movsb jg dec (bad) nop jp stc cmp cmp mov pop repnz movsb call in lahf dec add sahf aaa (bad) mov pusha arpl pop adc in dec mov outsb or jmp inc arpl repz decb sbb adc mov aam movsb icebp cmc std shlb (bad) mov xor jbe jp inc in (bad) fisubr sbb sbb enter jecxz cltd jmp int jae jle jno pop aaa stos dec sti in mov call (bad) fild add pop dec mov jne arpl pop ret fcomps out xchg inc addr16 jnp or icebp imul scas dec pusha in xchg pop lret in into sub cmpl pop jp mov loop jp addr16 clc (bad) xchg jl fwait mov test dec lret test in imul adc add jo inc pushf mov xor test mov test or xor pop gs aad icebp push enter sbb pushf (bad) xchg sbb adc sbb jnp lahf jns jge cmp xchg sti test imul cltd insl leave xlat stc add jno or mov sbb sarb sti out clc jp xor add jp or jbe dec pusha jno jns repnz jo cmp jp push ficompl dec mov xor sbb rsm leave sub inc fwait pop jp push pusha les (bad) jecxz or or ljmp jp lds push mov cmp int jne cmpsb pop divb push (bad) cltd fcompp dec leave and inc (bad) (bad) cli test (bad) adc jl xlat jae (bad) call pusha jp (bad) popa out inc stos jb ja xor icebp add add jmp inc sti ljmp gs aam pusha push mov insl (bad) out sub pop ds mov lea mov lahf ja xor mov sbb mov jp dec mov popa lea mov push mov push test fisub jl jp sub xor cli aam shrb vmptrst xor jp jecxz,pt push fist mov gs int sbb stos aad mov fdivrs jle jne ret fisttpl pop and inc push loop cmc jge out hlt cld ja dec int3 jae sbb insl inc sarb mov jle jbe imul sbb cmp lock mov test sub jbe lea mov mov adc adc xor ret loope push pop (bad) sbb in adc and mov daa imul pop arpl mov pusha (bad) cmpl xlat mov mov xchg jns bound out jg xchg call jp (bad) jns push test inc ss lret bound fsubrl cmpsl lret add jp lret movl subb xor pop cmp lahf inc insb mov repz leave push or ret aas clc in inc pop mov jnp gs inc out mov (bad) bound xlat hlt push lcallw mov stc jae dec jmp mov push data16 pop fistl mov pop xrelease (bad) imul es lock jae push outsb adc jp fstps cmp jp test add sti sbb das push inc setl jmp popa xchg push pop insl out jnp add mov push push movsb out jnp inc jp xor aaa and popa jmp hlt ds jp pop push loopne jne movsl sub imul cmp jns mov int3 jp lret jmp sbb sbb sti mov fwait sub cltd mov lret into imul int3 jae not pop jp and sbb mov lea mov push sbb add inc jp pop cmp out mov pop or stos mov cwtl insb xor fwait push pushf outsl jbe fildl adc pusha inc xchg sahf push pand jo pop sbb sub rolb adc js xchg bnd dec popa cmc fnstcw dec and pop push adc fstp xor ja stos mov push mov xor testl (bad) jg mov ja mov daa adc add push sbb lret inc mov or jp aam andb mov jns pop outsl sub dec sbb mov pop shlb inc mov mov adc gs mov push mov (bad) gs xchg push hlt std or xchg (bad) xchg jp in cmc sub mov fisttp popa jecxz pop call mov lahf pop imul out or clc mov jp insb (bad) in into jb inc ret push cli sub or fisubl (bad) mov cmp lds xchg and pop mov imul mov xor outsl sbbb sbb push jl cmp push pop mov fiaddl mov push mov jmp fcompl insb add xchg fistp dec stos cli mov mov jnp mov jp lods push sbb test push gs ret mov insl imul in out dec xchg gs iret jae push mov pop push jmp shrl jp and jg (bad) mov ds out add cmp imul push das or ljmp mull imul fisttpl dec jp jg jbe pop pop daa cmp orb lock fidivrl (bad) mov fwait cld gs jg sub ja popa scas (bad) cmc das (bad) daa sbb xchg adc in sarb mov mov and lret dec jmp lock push push sbb stc mov mov jp dec shlb aam fbstp dec dec sub cmp movsb std or add inc jecxz lret sysenter movsb push pop cli lock mov dec fwait pop jp (bad) lea add sbb addr16 cmp jbe jp lea inc xor pusha ret bnd (bad) or les pop jp pop mov cltd sub cmp inc push dec mov push jmp mov xchg sbb jnp mov cmpsl adc inc fndisi(8087 adc cmp (bad) outsb (bad) fisub ljmp loopne ret jmp jns pop jp es int3 inc arpl lret imul sub push imul xlat iret sbb imul jbe mov mov jp dec repz xor lret sub jp or sahf js dec jp enter or (bad) jb pop push mov dec movsl adc les dec in jb addl xchg cmp dec int data16 jle cmp mov mov cvtps2pd outsl ret pop lcall gs imul es rolb lcall mov lret ret sarl icebp jle mov movsb dec sub push jne mov mov mov out addl jecxz movsb xchg sub jp repnz popf jg and mov fwait jle push leave pop imul sub gs push nop outsl inc push pop xchg adc push pop cld xor sub sbb cmp mov ret or jne lahf jns lods dec xchg cmpsb fwait sarb sti dec mov mov lock xor addr16 xor cmp push scas jne mov gs jnp mov sti fcomps or ja lods aaa (bad) hlt mov cs aam pop ja cwtl (bad) sti add insb push jnp pop repz gs adc jp adc add jae int mov and insl cmp push loope jp out pop pop mov icebp pusha jmp aas mov in add shrl subl pop push in icebp sub fnop mov dec outsb (bad) xor dec outsl add popaw or pop jnp push stos in mov popaw popf jnp xchg jl mov stc push push sbb movsb jp jle out dec and jns bound sub pop mov fistl dec out xchg mov mov xchg clc cmpsl push push jo xchg popa cld int3 jp and xchg inc pop fcmovb or fimul jle inc lods int3 mov call jo add and dec cwtl push rcrl jge ja jp push jnp fadd insl pop gs sarb mov jge fwait popa inc jp into mov stos jp pop subl inc dec push sti mov je sbb fildl add shl insl jl push mov loope sbb jnp xor fldenv hlt jne outsb jp sub pop add jp mov jp push and cmp sub into cli cmp hlt pop aam lret sti fisubl push mul pop jne clc dec iret movsb mov jno pop adc cmp adc xlat test mov push bound fistpl mov sbb jg loope and jmp arpl mov dec push cmp sahf mov sub xor (bad) sti inc imul push test outsb push sti insl or ja and lcall pusha jnp in or icebp imull adc ja push adc jne (bad) lret mov sbb xchg leave imul pop adc (bad) lock mov cmc cmp xchg pop inc iret nop cltd mov out movsb sbb popa cmpsl mov push pop (bad) sub jb das cmp inc loopne dec les sahf testl gs or arpl outsb jp pop inc cmp jno,pn stos mov pushf or (bad) je xchg mov lds jns ror mov stos pop xchg js add ja and xchg icebp sbb sbb jg imul iret mov add in stos cltd lret inc std fisttpl (bad) jmp xchg ss xlat inc xchg imul xor lock popa cmp xor dec es jno xor stos inc adc sub inc adc push arpl push lea cmpl inc adc cmp or dec je movsb into sarl pop push hlt cmp out stos popf jno sub mov aas (bad) out arpl xchg gs stos (bad) lods rcr pop sbb xchg push pusha cmc add cwtl jbe pop (bad) sar push stos sbb push push push popa popa xor or jp or and jmp mov jb icebp cmp pop imul push jnp dec pop push add jnp movsl push mov adc lods lds pushf push push xchg iret or mov lea fnsave (bad) dec test ljmp and (bad) and je psubsw dec into (bad) mov cmp xor sahf fwait pop icebp andl repnz and nop lcall dec pop lock jp movsl mov jno pushf push xor sub cmp repnz mov dec lea sarl xorb sarl and mov jge cltd mov mov xor (bad) xor add insl jns addr16 sahf jl lfs (bad) push sbb jecxz jp sbb fistp ja jp or dec movsb ljmp pop fidivl add push sbb xor nop sbb sbb adcl push jp cmpsl (bad) in jne jae jp or dec mov pop fcmovnu adc jne sbb pusha mov das ljmp cs lcall lahf jg jns or xor jno ss mov jp add rcll pop xor popf push pop lcall aam sub push sub sub stc fldt push hlt xchg imul mov xchg mov sub std (bad) call insb jnp (bad) fwait mov dec push (bad) jb jp shlb sub ret inc aaa iret fstpl pop and mov adc sbb test pop mov sbb pop adc lcall (bad) add pop push inc xor imul lcall or insl jns daa dec cs adc dec stos inc jp test adc mov mov sbb xchg (bad) or jmp add mov jns js jl test inc mov cmp push mov xchg js adc add daa adc sub xchg sub jnp push cmp fst dec call daa (bad) mov cld push fs ss xchg fcoml inc mov xor jb inc movsb (bad) and push sub enter mov dec shrl mov loope mov or mov sbb adc repz mov daa or imul jp sub jo fldt mov in sti add xor shlb add in sti js gs mov inc outsl bound sti or (bad) shrb popa sbb js dec mov aas mov ss jne xchg in (bad) sub jp or jp adc int3 loope sub jns cld (bad) or rorb sbb lret icebp cmc jp testl pop nop loop sbb repz adc add or frstor adc cmp mov cmp bnd inc dec mov movsl imul popa mov lds mov ss enter cmpsb cmpb stos cmp dec and lds divb cmp das xchg mov jp dec push bound loopew jge cmp mov lods mov mov sub imul or data16 xchg scas test lret loopne jp pop lret outsb call pop or inc adc lret and js xchg dec in out add inc push ret ja jne jle movsb adc or aas inc jp jo shrb aaa fmul jp and shlb das imul jp jae dec cmp jbe push jmp js jp fcomp mov sbb test iret movsb fwait cmpsb icebp test popa mov jp dec packuswb or sbb jmp jge popa jno jne jnp aam fstps lahf test jbe hlt xchg test fwait cmp mov push aas mov or push sbb fwait dec mov lea dec sub aaa mov pop jg mov lret jp (bad) xorb pop pushf insl mov sbb jp add dec mov cmp sbb mov jg push push ja movsl mov pop lcall (bad) fdivrl das or sahf repz inc enter mov mov les pop and inc mov imul push repz and push push in loope pop vmovups loop das ja out ret movsb push icebp imull sub pop fstpt rorl pop insl xorl mov daa (bad) mov gs push jne and jno movsb or jno xchg adc repz ficoml lret mov stos push add or ja mov stos lahf loopne in clc mov aad push (bad) cmpsl dec test xlat jae or and mov iret pop (bad) inc out mov or gs outsl xchg loope iret fistpl mov repnz (bad) push push cmp or mov aaa mov lcall xchg repnz sub rol add push jg outsb outsl ja or iret jno ss pop scas pusha (bad) fisttpl inc jb ja xor cmp push imul jecxz dec mov inc fdivp jle sbb imul icebp in cmp cmp pop inc lock add inc sub cmpsl sbb jae pop movsb sub lods jnp or push push sub sub add or stos sub lods jae in loope xor in pop inc aas xor jne repnz data16 jne inc pushf out pop jns shlb movsb pushf setns subl data16 or xchg mov jnp cltd stos inc sarb xor js push aas cmp fnstenv inc mov js (bad) outsl cmpsb jp jl mov repz out gs and pushf push pop popl mov test imul jnp stc jnp pushf (bad) loopne adc ret pop (bad) or and adc jne (bad) dec adc jne add mov mov fimul adc jle or mov jecxz icebp and leave jp stc js loop dec int push ret in or jle jns loopne loop pop cmp push cmp push mov jmp int in (bad) jnp idivb scas mov je movsl jp push sarb fcomps pop pop test and das sub inc sbb lahf je flds ret jne les mov mov stos in jno repnz cmp aam dec mov jp xchg insl xor jbe push (bad) aaa dec (bad) insl nop add sahf jle cs icebp cld sti popa push aaa jp fldl push jns ret (bad) mov mov repz ja jbe pop jne stos push pop imul mov test in test jnp hlt and addr16 xchg sbb mov inc sbb xor jl (bad) je rolb outsb (bad) shl shrb sti mov push or sbb push fldenv stos add push dec out dec adc inc dec data16 or pop pop lcall enter and ret popf mov (bad) sub mov dec push fnop stos jg xor mov sbb (bad) mov mov mov ret sub fadds cmp push shrb loop push mov enter xchg lret shrb dec repnz jae int sub cmc xchg movsb dec inc je not sbb inc leave je adc lock or add pop std inc jb out lret cltd insb out push push mov stos xor out movsb test sahf nop push stos adc pop xor inc das dec dec pop mov rorl jnp sub pop cmp mov and xchg fldt icebp (bad) (bad) ja stos mov mov jb ss lret add cmp sbb or mov cmpps mov leave inc jp fwait sbb outsl xor mov push cmp jnp mov mov insl fdivrs mov and mov jo pop jp cld je fbstp adc jns aam ja adc cmp (bad) mov xchg jecxz pop sti jp loope ds pop xchg popf (bad) mov jnp stos ret movsl jp call or ss cmpsb push fistpl clc jp and test stos pop xor aas add iret add push lcall dec mov jp testl inc sahf fimull jmp mov jp xchg ja in in jmp dec jae dec and aas mov sub pop jp sub int cmpsb add adc xchg xchg mov hlt xchg je mov mov push fstpl or mov es movsb jne nop dec sub int mov fwait pop mov inc in jns add test ljmp and cmc xor sub popa loopne out in (bad) jp (bad) imul dec and loope test sub pusha jp popa jmp jge or mov fwait leave imul mov push icebp (bad) out cmpl out das inc (bad) adc lock cmp add xlat orb pop enter mov fwait popa pop jp xchg and adc push in dec and xchg mov cmp cs loopne cmp jp jnp pusha push add ja xor fcoms adc sbb gs push and movsb les aas add sti insl mov lds repnz out sbb loopne or lcall gs (bad) lcall jp ret cmp sbb jp testl or push cli mov or test pop fbstp and mov divb popa (bad) jmp mov jne mov add faddl dec stos push xchg dec push sbb and jp pusha dec movsb fisttpl mov mov mov add jmp push adc fldenv lret xor jg mov ret das xchg push sbb shll jp in jbe dec lcall and jp test sub jne loopne ljmp push insl push mov cwtl ljmp sub lcall xchg loope mov dec out and sti sub mov jbe int adc sub lds pop or aaa jge xor test loope sahf jp arpl gs int3 pop mov addr16 mov mov fldt out call hlt (bad) aaa cwtl inc mov lea sbb popa xchg and mov lods out inc cltd jp push popf test push iret movsl aam pop inc dec mov cli fild mov mov cmpsb enter sub inc insl push stos mov loope jp pop xchg lea sbb sahf jp and push dec push jne shrb xchg loop sbb push sbb sti sub adc lods loopne,pn sahf push mov jp push fimull aaa ja xchg and push or or aad (bad) cli sahf jnp (bad) dec sub inc lahf add cwtl or mov dec outsb js out dec and xchg test mov adc rorb jne xchg das sbb xorl mov scas xchg cmpsb (bad) cmp sbb inc adc jle jmp imul xchg stos xor jne add or xchg sbbb pop cmpsl sbb push fistl subl cli (bad) pop shlb fs mov sub and push loope xchg pop popf (bad) mov add enter gs ds loopne adc adc sbb xor dec push sub jne scas popa fmuls or push mov (bad) mov jp mov and sub jge sbb jg pop xchg push and sti incb xor hlt jp movsb and nop gs dec jae ljmp adc gs cmp push add pop sbb pop xor out popf (bad) std lock add add pop inc push inc int3 lret jp popa push mov sbb jne mov dec mov dec hlt cld fidivr lret inc sbb jle jbe pop cld jp bts jnp xorl fisubl lret and mov aaa add jnp jp jb inc scas xchg jmp jp out or jecxz adc xchg jge xor bound bound scas roll movsb jne sbb das ret sbb mov stos mov hlt and scas jp fdivp andl jae inc push mov mov pop clc mov xor sbb xchg loop cwtl cli aas cmp pop add mov or mov pop pop mov (bad) xlat mov test test mov add adc and jae fwait insb add cmp sub and cmp and sti dec mov sbb je mov fs imul dec cmp and adc add hlt jp aas pop stos dec rolb jno push ss add and es cmpsb repz sbb iret sub adc jmp mov fcmovu pop push xchg sbb imul or fs jnp outsb dec pusha rolb xor out fldl push or ss pop aaa pop insb std int3 jb sahf call sbb stc ljmp jmp sub xchg stc sub xor sub sti test shl jp arpl int3 jp pop pushf xor iret ds push aas sbb mov jo cmp push roll les pop sbb lock jp mov fst insl in and or out enter mov jge pop push enter lods jp ffree inc arpl mov aaa jno mov xchg lret out adc mov es int3 pop insl sbb inc insb data16 xor arpl mov popa xchg aam lea hlt add pushl pop lea cmp repnz push or or xchg pop push and jp ret aad fist out xlat and sub add jnp adc lods les mov dec jg roll xchg arpl in mov scas mov mov mov pop sti inc lcall or test pop push jge adc pop jp (bad) xchg aad aaa int3 mov push mov bound arpl ret out std ficoml out sub lods test lds mov popf scas lds pop jbe pop fistpl cmp daa adc fsubl insl jecxz enter lock jno push (bad) sarl stos and mov arpl in inc mov push popl gs mov mov jbe sub in divb mov stos iret imul stc mov ret jle adc xchg cmpsl jp pushf mov dec lds adc jp mov sbb jne iret or (bad) lock jmp loope lret mov push les div cs fyl2xp1 cmp jp xchg dec pop insl cmp xchg mov adc loopne xor dec je in stos movsl lock mov dec push div cmpsl inc imulb sarb faddl mov daa cwtl jp cld jle (bad) mov and cli jg mov mov sbb sbb or rep adc mov sbb in into imul lahf fwait cmp fwait out je or stc jnp jne mov push mov rcrb aad hlt lea fwait pop (bad) xchg stc outsb mov mov ss jnp sbb dec jp mov popf jg adc (bad) mov mov scas pop push mov aaa sub cltd mov xchg jo add pop lahf jbe mov jp cmp leave inc mov mov mov arpl jo fistp hlt dec cmp sbb mov add stc sbb inc sub push sbb or fst mov or gs push jnp mov aas push inc iret mov adc jb lods jp add mov in add (bad) aad lret js inc jne push pop sbb cld dec gs inc jne (bad) add fistpll popa repz push pop stc dec fidivl jp outsb les jp cld mov dec sub push jecxz pop jp ljmp xchg push (bad) jae dec push and test or cmp inc push adc cmp nop adc sbb jne xchg daa and jo (bad) aas dec push cli pop les js jp jne jl ret (bad) or ja mov and push test adc jp cmp inc cmp insb pop sub dec add stos jp gs jp mov lcall in jb and jp sbb mov dec lds (bad) (bad) cmp jp ficompl pop mov inc jp push mov icebp jmp jns mov stos cli inc aaa repnz cld mov (bad) je cld shlb jp hlt cmp and sti int pop mov or daa adc pop xor gs sbb fnstcw mov mov (bad) jp ds pop pop mov xchg out lcall ja xor js fldenv pop xchg rolb mov jne mov sub xor das cmc add mov push gs lea dec sar adc inc cmp and ja jge mov jl and push lods jp cmp ljmp lock lods jg sbb lock (bad) das arpl jp jo bound hlt xchg fcompl mov in xor push loopne in cmp lods and (bad) leave jmp sti inc mov (bad) or (bad) fsubs jne lods mov ret popa mov inc sub movsl dec mov call jg jns xorl push push imul je lds gs mov fidiv sbb dec push inc insb dec orb xorl xchg mov loope jp aad inc jl dec es (bad) jp push dec fs sub test test pusha xchg ljmp jp out in inc pushf sbb out mov add movsl fldcw xorl sbb (bad) mov lret ss dec jae scas xchg movsb jnp movsl jo aas dec loope jnp sbb inc fldcw iret dec fdivs cmpsl jb jmp pop jge das add cmp divl scas dec mov addr16 inc in or add jl lods lds add mov outsl popa aas cmc int fimul sub or sbb sub enter jp in movsl inc cmp ret popf jp clc je (bad) push jg insl push and push push js das iret sbb ret mov (bad) loop jp cmp ficoml add adc (bad) cli cmp xor cld xor or cmp insb inc sub jnp push ljmp int3 inc inc stc adc aas mov jmp mov jbe (bad) lret inc lret lret jp int (bad) repnz cmp jmp xchg pushf std dec (bad) mov ja icebp (bad) cmp ficomp ja pop push je push mov mov dec aam loopne cld xor mov pop lock iret mov mov not leave mov lret movsl mov lahf or jge leave mulb aad loopne outsl insb (bad) mov cs (bad) jp in push push pop mov sub cmc xchg pop xchg outsl (bad) and ja jae arpl sub (bad) (bad) push fdivl xchg imul (bad) mov insb jno (bad) dec lret popf lcall mov sub loopne daa lcall push fcmovnb outsb dec or jp push jno xor push ss popa nop repz and lods (bad) out mov mov mov fdivrs sub fwait es xchg add rcrb pop (bad) ja jmp push sbb movsl dec aas cs iret cli sbb dec jnp cmp fiadd jecxz cmp jl adc scas stos movsb jp inc (bad) sti iret pop pushf jne jo jg mov xchg dec scas xchg sub nop fist sbb and test inc ja fcoml xchg mov jle mov adc ss mov enter jp in (bad) sub lret xchg jp dec push sub push shrb sbb jb inc mull je and addr16 cmp arpl insl sbb es push xchg jp cli mov or jne scas and xchg jbe sahf jp (bad) popa leave sub sarl push cmpsl hlt fsubp popf cmp popa or (bad) jne adc dec lcall pop or cli mov jmp pop aam out mov (bad) sbb clc sti or xor and movsb jne,pn shrl cmp inc mov and pop insl sub inc push mov jmp sbb cmp mov (bad) xchg pop in inc push xchg adc add lret and mov jmp loopne aam sub xchg (bad) jp insb notl jp cs movsb push sub mov clc iret mov pop adc push gs sub push xchg out js jp test adc pop mov xor xchg test pop or inc adc jb sbb lea sbb fs mov ret ljmp ret add xchg adc pop mov das xchg in insb lock mov mov add mov jp dec (bad) mov les mov mov dec das sub fs adc xchg jp jg lea clc lds and ja sub sbb lcall xchg addr16 pop push jp push mov or idiv sbb cld jbe dec (bad) cli addr16 addr16 (bad) dec test lahf repz cmp call cmp icebp (bad) out iret pusha jp dec jb test lods (bad) jne inc jne inc fcoml mov sahf lds or out sbb jp ficoml add insl mov add cwtl jae and or xor decb mov sub insl fildl xor je mov cltd jne (bad) shl jmp sahf sbb dec push jnp,pt insb (bad) arpl test sti xor out stc js push push push jp jnp outsb jbe mov inc aam push mov sbb gs jge push popa in mov jp int3 imul pop iret outsl sub adcl inc push les rolb loope inc iret jne push stos pop cwtl std icebp dec (bad) lock movsb mov outsl mov (bad) push add stos iret add jno mov ret out lcall add dec mov xlat push addr16 sar mov nop lcall subl addr16 stos scas cmp cmp dec mov mov fxam inc enter popf stos repz or jno inc xor imul sbb rorl shrl jecxz fwait icebp inc pop lret cmp lods fstpt pop lret mov icebp xchg mov dec repz cmp xchg mov xor call (bad) je stos mov xchg xlat push and pop arpl sbb cmp dec add outsb mov xchg js add xor roll movsb cmpsl cwtl jp mov sahf aam sbb jb xor sub mov inc inc in les frstor adc jnp fistp insl lds jb mov sub jp jecxz xchg lea jb aas mov and and and xchg pop jp add out fisub push jge fwait (bad) pop mov (bad) jp xchg xor pop push xchg jge testb out (bad) jae sarb cmc push push sbb mov add mov mov mov jmp dec pusha or cmp jp xchg and push jecxz popa in jno jb add cmpsl jne mov movsb jns pop aam iret popa es jg sub inc jp lods test arpl lock (bad) in divb lcall xor jb mov cmpl cmpsb jp sahf lcall daa loop roll xchg fsubs jno aas xchg les push xor mov pop adc fsubs inc jp pushf xchg aam mov sub fstpl sub mov pusha pop sub xchg push and and jp sub sbb jne mov xchg jp dec xor jp ret xchg js cmp jmp lods jp shlb rclb cmpsb stc fnop pop sti enter insl jp push jmp icebp jae fildll loopne xor mov xchg mov jp mov or jne pop xchg fistpll pop jp js sub push push (bad) hlt jne xchg dec push dec jns (bad) and lods (bad) aas mov clts pusha aam lods mov test fmull rcll ret adc add cmp mov mov fldenv dec push adc adc or and shll movsb jno cs sub into sub ja xor cli inc repnz iret pop cltd xor mov mov fwait clc jp imul movsb into in xchg sbb scas lds jne cltd or push adc dec stos dec insl pop pop push daa mov mov or lret fisubl sub adc sbb push and jp out cmp pop lcall jae in insb mulb (bad) je push notb adc push scas out jbe jne cmc mov and xor gs shl out popa sahf jp sbb in (bad) xchg pusha inc mov push add xchg cld adc dec mov movsl (bad) push jbe mov dec push sti stos orl mov or repnz call cs push mov ror jecxz ja jne xchg shrl push mov cmpsl pop jne sbb (bad) xchg loope (bad) pusha idivl mov scas loop push jmp jecxz mov jmp add add imul punpckhdq pop and jbe aas mov adc jnp ljmp mov popa push stos bound xchg ficompl dec xchg popa pushf rorl shlb aas sub sarl xchg cmp push xor xlat fisttpll jge jp mov stc ljmp jne lcall jp push test je cltd push mov jo (bad) mov pop adc div lods inc repnz inc jno jp push outsb (bad) jp cmpsb or xchg mov dec dec sbb jp push and adc sub stos push inc push sub adc push mov ret mov pop stos cltd or mov bnd xchg pop loope mov mov inc mov jp mov jns xchg jp inc int3 sbb jl int push sbb cs gs aas mov rclb mov imul push or das adc mov pop sbb sub jge js sbb xor inc pop mov pop mov push adc cmpsl int pop insb (bad) cwtl mov dec addr16 jb sbb cmp lret jns mov jp or inc mov test (bad) and loope sbb xchg pop dec cmp push jnp sbb lret xchg cmpsl dec jnp sub adc pop aam pop sub cmp ret ja aas jbe nop bound mov fbstp jne scas dec and mov test lahf push sbb and sti sbb test jno xchg mov push ficoml repnz aad roll jp leave shll jb popa dec sub sub mov pop sarb pop in sbb sahf sar sub adc call dec lret (bad) cmp daa (bad) aam jno xor xchg jge sarb lret sbb push icebp sub sbb push and (bad) adc mov dec mov sub std or jecxz xlat test in shll sbb out pop push jmp xor clc stos addr16 movl pop lea mov cltd lock imul mov xor or bound rol arpl pop arpl sub lcall dec (bad) mov pop (bad) (bad) in test sbb cwtl out movsl insl loopne jne mov fidivrl insl inc xchg xchg jp pop pop push push pop outsb sbb fcmovu mov inc cmp fisub fwait push pop pop repnz inc jo push ret aam sub pop lcall cli cwtl out ss cmp dec jmp stc sub jne and sbb cmp jp cmp xchg out in lds loop lea iret adc incl stc ret xor popa jp es mov lods (bad) outsb fwait mov ret leave cmpsl jnp sarb add clc jnp repnz jecxz xchg jp addl sarb sti jp out xchg ljmp xor cmp and adc jno lea (bad) jno push aaa inc insb (bad) (bad) lret xor mov in addb mov scas mov repnz cmpsb incl adc fdivl subl jp push and (bad) mov sub pop and xchg or push pop shlb repnz dec sub cmp jp lret mov mov dec imul jb (bad) dec mov imul and (bad) dec jg sub adc aad mov xor int sahf dec les mov scas sub out jne testl sbb jne popa lar (bad) aas cmp pop sub outsb sbb call cs leave cli lret repz ret int fnstenv jecxz adc and add jne (bad) hlt (bad) jp mov shlb (bad) jp nop and sti push (bad) xor inc icebp lcall gs lds (bad) or xchg add fnstsw enter adc mov mov or mov jne sbb ljmp imul push dec lahf gs jge ss inc jae,pt inc mov fsts lea sub jnp jge cmc cld adc jae dec cmp pop fidivl sub das cmp jmp (bad) scas (bad) xchg mov fisubl jg pop sbb stos and test adc add fstl cli mov dec push mov mov inc es scas test jp ljmp sbb jns push in jmp xor dec lcall add sbb jnp mov std lds ds jbe mov out mov cli loop jp dec daa xacquire mov jp sbb sub lock cltd mov or fs sub inc xor jo dec cmpsb lret mov int (bad) fadds sbb or aas mov mov dec jmp (bad) xlat mov testl pop jg ret and aaa cmp sbb fimul jae je negl scas fisttpll mov sub inc fwait ja aaa and pop sarb test cs (bad) mov mov lods inc dec xor cmp icebp lahf fnstenv mov js adc jl repz notl cmp inc sbb bound iret mov push pop cmp adc and fisttpl stos push push add jp jbe add mov xor xchg aad orl arpl cld ss xor test push outsl loope cmp jle xor push xor lea (bad) lods add aas aas cs xchg cmp pop iret jnp fist test jge add lcall popa test pop test test inc int mov test sarl sbb mov jp cmc cmp xchg cld dec jp inc cwtl mov jne imull xor movsb add sbb test cmp loope rorl aas jo and dec (bad) ja stos (bad) xchg movsb jne or xor insl mov dec xor inc insl loop lods in pop add cli (bad) jne ret imul cmp pop insb lahf xchg popa or push jp ret pop ja jne dec jb jns fnsave add mov and lcall or sti cmp and cmp dec jp icebp sbbb xor lods dec stos cld out adc cmpsl lods add stc dec lds (bad) jp xchg sub rolb cmp je (bad) jne xchg popa or gs sub xchg shrl jl sbb ja sbb aam insb jmp fstpt stos add movsl mov (bad) aad add jbe movsb jecxz mov xor fmuls pop sub movsb dec and jl push xor aas mov or or fstpt lahf adc dec jle jnp pop push aas xor aaa (bad) pop jne stos (bad) mov sbb jnp mov out setp lret inc pop dec xchg xor sbb shlb fistl cli scas ss and in and (bad) mov xchg cli out inc jne lret pop movsb mov mov xlat fstl jl ljmp call test add jp rsm jmp pushf push cli and ret push fstpt and push incl xor cmp add adc scas int xchg jnp mov popl lds pop pop lahf dec lret and adc int jle jp jg test dec dec popf push inc mov fcomi adc inc dec addr16 mov (bad) push cmp fbstp iret push mov arpl mov nop xchg sbb sub push sub faddl popa xor jp nop and dec cmp push sbb movsl cmp jb inc inc les int3 sbb xchg jns mov add mov lods ds push fdivs imul ss mov cltd jp sbb aad sub ja or mov jge or (bad) out stc jne add mov jnp stos aam insl jecxz pop sbb imul sbb mov clc mov rcrl cmp stc repnz xchg jp lock push lea rcr jp call lods (bad) jp pop in xchg and loope xor cmp jno inc ret pop sbb sbb add cwtl pop inc xchg mov negl cmp (bad) pop pop mov lcall cmp ror iret imul loop mov lret lahf (bad) in jp aas and inc gs add push stc cmc push popa pop iret xchg insl adc push push jp (bad) mov mov inc mov inc pop adc lock fwait and jp cmp ficomp and (bad) push jmp rcrl add fs iret inc adc xor jp mov std sbb mov jge push sbb cmp ret icebp jg jne mov xchg mov outsl jp fwait pusha outsb or mov mov jge (bad) sti out sub or imul les sub cmp pop sub pop mov push (bad) sti cmp (bad) cmp movsb lea mov call inc sarb mov mov loop insb jp add mov sbb mov inc pop add in push mov jp int icebp add and ret add es push lcall lret jne dec ds cmpb aaa mov fs loopne aad jp lock mov ljmp sbb mov mov iret cmpsb insl xchg out pop jnp fnstsw addr16 lds xchg (bad) cmp xor mov dec mov lret xor popa popa jbe cmp ret ja arpl jbe xorb jne dec out imul pop cmp aaa sub jg stc data16 xchg xor jp push shrb or pusha xorb inc lea inc insb pop lods bound xor fildll cmp cmpsl or idiv cmp je scas or cmp or cld in (bad) (bad) cltd mov dec adc cs cwtl ljmp mov xor cmp stos pop adc mov xchg lret sbb xchg shlb inc (bad) sbbl push ja pop insl les push xchg arpl cmp adc insl cli outsb push and stc xor push hlt cmp xchg push std jmp dec (bad) jb cmp mov push push mov outsl and jo in xchg xchg out loopne cmpsb (bad) js inc fwait (bad) hlt sub mov sti push stos jmp push sub fs jnp fmul mov cmp clc mov jo ja aad mov pop loopne aad lcall jno xchg out jae test mov dec sub rcrl lret (bad) or inc xchg stos mov sub imul push push mov jp or test into pop push and adc movsl ret mov inc cmp cltd sub cmp pop push sub cmp pop jb in (bad) jmp imul cmp pop lret push outsl int stos stc daa or xor xchg jle stos or iret push sahf xlat fistpll dec in mov scas xlat lods lret mov mov mov (bad) negb sub jle xor jns pushf ret idivb fistp cli cld sbb imul or xor fistp repz mov jp inc (bad) pop mov pop or cs roll sti pop sahf fs jecxz cs sbb cmp mov or jne and jmp jns mov xchg je xlat inc sub stos js hlt jno jbe shlb mov cwtl inc xlat jnp xor pop mov mov sub int imulb jb or movsb push adc out xchg outsl sbb pop pop movsb adc dec dec loopne ret test ds lods (bad) ja jle (bad) repz divl sub mov test gs out mov jne xorl push fistp hlt jno je cli scas pop stos cmp jne pop inc repnz sub mov mov out jg js (bad) xor and loope jecxz ret jp pop jge addl int3 jp xlat pop aas stos jmp aam jae,pt imul sbb jp or aas cmp faddp mov xor or imul or cs bound and mov or into movsl popa in push sub mov jge rcrb pop or lcall push sub pop sti mov iret or icebp adc scas dec cwtl jnp push xlat decl cmp test ja fwait rorb jp std aam je adc ret jno imul les (bad) cmp subl lcall adc stos add (bad) mov in pop mov push mov or jbe repz ljmp jno jne adc jnp push imul (bad) aas popa sbb sti in sbb xor sti (bad) mov hlt stos push or push jg jae xor popa jnp mov mov gs cmpsl sbb ret push sarb stos (bad) and std arpl mov sbb movsb jb (bad) pop adc push sbbl scas std jp mov (bad) pop pop in pop movsb push (bad) sub mov jge mov pop push xor xor xor sub (bad) cmpb lcall clc lock ror dec or jno stos pop cmp mov push loopne fcmovbe sub inc popa ja push fnstcw mov shrb jecxz jl jbe bound xchg movsb pop cwtl rorb and mov mov in js sbb (bad) mov insb out jne (bad) push xlat mov sbb (bad) and add mov inc pop nop sub ljmp sub and sbb fs mov sbb pop outsb adc fsub (bad) ficompl sbb inc inc jle push push inc sbb pop cltd outsl out (bad) cmp mov dec les out mov push cmpsl add jae jbe and xchg sti testl addr16 cltd pop jbe out sub call xor out mov inc pusha adc lods jp add add dec ss ljmp lcall gs aam add mov xchg js pop call mov jp (bad) mov inc jp std fbld cmp imul jae ret pop cli outsl mov adc lahf fwait cmpsb jp and and push mov popf pop cmp xchg push cmp aaa arpl push (bad) mov jnp adc adc cltd mov push cwtl jp push arpl mov mov add jne sbb loopne (bad) sbb jne xchg sbbb fld jne push movsb iret loop cld fildll addr16 add add and cmp jle adc pop popl xchg jns mov add jne lcall outsl clc fucomi push inc jo adcb ja in imul mov and dec cmp or lods cli fcompl hlt shr imul shll jle jp pushf pop pop fdivrs pop (bad) fstpt (bad) xchg sahf dec dec or xlat mov mov or sbb jbe das stc pop and scas add rcrl cmp jp xchg (bad) jne inc data16 test xchg sbb sbb mov daa gs jo je mov sbb sti sbb push int jp dec gs test mov rorb sbb mov pushf ljmp clc lret out adc mov or and xorl cld mov inc xchg faddl leave inc sbb imul inc or xor pop mov (bad) lods add xchg add jbe and hlt cmpsl mov xor dec fisubl adc enter cmp test jp cmp or aas adc xor jmp adc call int3 repz lock pop div mov and mov xchg in sti inc jg insl stos jns out sbb xor lcall mov jae xor pop adc lcall mov mov movsl int push outsb mov ret pushf fmuls lahf adc repnz daa xor pop insb (bad) sbb jle lcall in (bad) rcll xor adc mov jp in dec imul addr16 fnsave mov xchg jp lcall jecxz sub in ret cmp in repnz (bad) gs jp dec xor and and (bad) xor into jne xchg lds cs fstps jl stos jns hlt jp (bad) in and push or hlt (bad) xor data16 fdivrl or movsb jl shll inc sbb (bad) cmp inc jl sub push pop loopne xor ds sbb sbbl jp cs mov or jp jo mov (bad) sti adc sub out or lods jp lret sbb xchg xchg jns insb mov mov add cmp cli test cld push inc pop add dec (bad) and out sub cmp sub lods (bad) jecxz mov and lds incl lahf sbb (bad) and iret pop jp popf xlat (bad) insb (bad) pop lcall int stc jae icebp jb push hlt cld xor jmp sub popa mov imul mov jp xchg in or sahf push loop mov scas dec jp mov jl icebp outsl inc xor xchg imulb mov sar icebp leave sti and xor xchg sbb sahf jnp mov sub jp sub stos xchg jo,pn jno mov les pop jp cmp clc mov jp dec lods popf sub stos push hlt jl (bad) inc scas (bad) push stos hlt fcomps cli insb or xor mov adc stos or insl jp cli jmp movsb das rorb enter lret gs fs jae add and (bad) std lahf dec xchg sub jne adc xchg cld outsl cli (bad) and dec (bad) mov adc (bad) daa sahf ja or leave je outsb or pusha inc cmp fwait bound insl dec call (bad) adc jecxz lahf jl dec push test cmp fdiv sbbl shr push and dec test xchg cmpsb push jp push xchg pop xor jp mov lods stc lds popa mov mov inc sbb mov inc stos into and mov or in divb jp inc ret dec or fimull jp addr16 xlat mov jp sub movsl imul sbb into push dec jnp push (bad) icebp dec jp test gs pop (bad) shrb popa (bad) fmul jbe xorl out jno jl (bad) mov fs cmpsl jnp rorb jp fimull sub xchg repnz test or mov cmpsb mov insl push or aam ja ds mov enter and jp stc or or popa mov enter addr16 sbb (bad) fidivrl pop sbb loope jns jp xchg jl idivb mov mov or sbb loopne inc (bad) es jge jp xor sub test jp sbbb xchg cmp dec sbb dec jno stos dec insb push sub jp and dec or inc fs mov jle xor cwtl clc je jb pushf imul pop mov sub iret fisubl aad call sahf fldt mov scas sub jmp (bad) int imul test add scas mov jp xchg and mov loop daa sbb insl and (bad) out pop jp insb add lret push or test shlb or out cli mov xor push jb adc push popa add or jnp cmpsl push int or inc fsubrs cmp aad or jb add mov into adc popf xchg ret test push pushf pop push sub jecxz xor lcall lods inc jne dec idivl scas jne fist pop xchg (bad) bound xchg jp xor xchg or pop jp mov cld daa jp mov rorb test jns mov insl adc mov aas dec adc push into sbb ljmp aaa jge xchg jecxz cmp push mov jnp jl inc ja iret mov or arpl dec shl jae jne push and dec lcall fimul enter cmpsb sahf lret or std xrelease call or xor pop mov (bad) jl or cli mov into mov sti sahf mov adc andl in xchg xchg push das sbb jp testb imul pop aam xchg push scas sahf ficoml out imul fbld jp (bad) sub clc xor iret push mov mov jnp adc test pop mov imul mov mov jl push mov stos push arpl xor xchg aas mov dec adc gs popa scas andb and jp push iret mov (bad) pop cmp jb sub int (bad) stos add rcrb (bad) dec (bad) mov aad in mov add jnp cmp out mov in dec push lock es (bad) int addr16 push dec pop stos nop cmpsb pop (bad) add lock sbb lret std jmp or cmp insb shrb clc xor mov imul jnp jge mov jp dec std cld pusha or mull push inc and jp ja fdivl mov fimull push push es push mov xchg mov rcll mov xor mov js inc movsb pop sbb adc cmp mov cmp dec adc lcall cmc scas int3 loopne add and mov pop inc cmp ror inc jge mov movsb fnstenv (bad) jb push lock loop jae sbb pop xchg cld xchg test insb leave mov in int3 jae xchg cmp dec repz arpl sti cmp xchg andl jmp push loop lret push and arpl ss add out xchg imul jb adc std xor (bad) fistpll fnstsw xchg jbe stc js fwait cltd bnd out in mov mov sbb jp and mov jp (bad) jns aad xchg jp (bad) movsb add test jnp mov jmp mov cmp test and xor adc dec imul jp pop icebp in mov add (bad) js rorl cmp popf aas jae (bad) jnp add aas inc repz cmp sbb in mov test xor jp sbb inc cmpsb imul push mov (bad) or out int mov mov roll or arpl rorl jnp ljmp jp jb out lret (bad) mov cmpsb sub stos mov insl fadds js pop dec cmpsb add loop adc inc pop xor pop mov ja stos or xor movsl jp xchg outsb jp add hlt jbe,pt mov jae sub int outsb (bad) lock xchg push adc and push ja xorl ror sub mov mov lcall pop in out in clc mov push in mull (bad) neg mov mov xor or jne cld xchg jne xor cmpsl dec int3 jnp movsb insl pop fistp js mov jle (bad) sub aad cmp insl jnp outsb lds xchg fmull push mov mov sub shr movsb rcrl add or mov push sub js (bad) jnp jecxz xor push pop xchg lcall mov jg dec cmp sub mov ja adc pusha inc enter daa xchg gs and aad dec sub scas jne test aam add sbb sarl (bad) mov dec xor in sub sbb push popf hlt jns inc stos iret in (bad) cmp push std jp (bad) mov sbb mov mov xor dec jp inc ja pushf xlat movsl dec ja mov icebp jle int (bad) jnp cmc std cmp lcall ret dec sub fcmovb sarb fildll pop push jno lock sub in jp mov cli fistl mov push mov or aas and ds out in andb fistp lcall jne (bad) ret and mull test (bad) xor and sub cmc aas mov mull lea pop fwait adc jp leave add mov jg jp pop ret push jmp push xor inc sub xor idivl mov or push loope and imul jp and fistpl xorb (bad) xor mov cmp cmp inc stos imul pop (bad) sarl push adc sbb gs and jne movsb mov out shll dec insb xchg addr16 adc mov orl scas imulb or pop pop in add and jo pop push mov mov jnp push (bad) mov xlat in inc jae jp movsb xchg mov add push pop sti stos int3 inc push fldt mov imul mov lret ljmp add or or shrl jo insl dec xlat push mov in mov jle pushf enter (bad) mov je out xchg mov stos sub arpl mov mov daa mov lds jl sub jae xor mov (bad) je lret xchg push jecxz ljmp repz daa fs jp stos or js outsb or mov fs mov repnz xor jo out or ljmp xorl in mov xor loope mov jns mov bnd movsb nop fsubs cwtl mov dec push (bad) push hlt in xor scas addr16 insl xlat fs mov xchg arpl ret mov mov sbb xlat add outsb stos fisubrl and pop movsb ret pop mov jl add ljmp lahf xlat dec mov pop stos push mov sti (bad) movsb lds jae jl jmp add mov adc pusha mov jp aaa mov aam push sbb test cmp popf push fildll xor jp nop (bad) fmuls jp loope dec das ja decl and push in les mov jb mov test out or cs add push xchg and xchg pop push adc mov cmp test enter pop rorl test adc mov pop insl push inc ss gs fistpl mov dec cmpsl and out jp cmp rorb rcr jp or sub cmpsl adc and sub popf jbe inc leave jnp mov ja (bad) rep cwtl fdivrs jp inc sub jp or mov dec pusha adc mov lret arpl nop jge in orb pop lahf jp popf xchg adc push addr16 lea mov aas insl xor jb sub int3 jnp push and add add pop dec stos (bad) dec and xor jp es addl and ficomp mov popf jg jno sbb inc and lods jae pop push loopne jnp mov dec add sbb cmpsl std push fs cmp ljmp xchg jp pop outsb leave cltd jmp loope push and jp push push (bad) mov js push repnz loopne add push sub add jp ja jae mov mov adc or jg pop fwait dec ret and std jbe mov mov dec cltd lcall adc jb hlt (bad) and dec jle mov jl lret ja out inc loope or lock mov gs sbb mov xchg popa sbb mov ja js jo aad xchg jnp stc insl dec pusha stos push push mov es xor jnp imul or jb cmpsb cmp sub adc fs sbb xchg (bad) ficoml inc push cmpsb cmp jnp stos adc cli cltd arpl pusha push icebp mov mov add fwait ss jno pop push test arpl lcall lret and clc inc sbb les imul adc pusha sbb jne sub ss call outsl cmp mov add out push ds jne dec lcall mov outsl stos mov clc (bad) (bad) inc out out ja movsb popf (bad) mov sbb clc push ja aas daa aam inc mov insb add add pop aam cld ja jl les sti sub jno inc jp pop addr16 xlat jecxz jp xchg jmp lret fiadd dec cld pop leave jmp and into ss std mov pop bound outsb mov rclb push mov popf stc and fcmovnbe sbb mov push xchg es dec cmovge dec clc jns xor aam xchg out adc jp adc push push mov cmp pop pop je daa mov rcrb fucomip adc stos ljmp scas inc rorl hlt fdivrl cmp movsl iret jecxz lcall movsb (bad) mov enter mov jp push jmp gs jae cmc jl insl sahf hlt dec xchg jno out jp pushf mov cmp xchg sbb xor fild cwtl or aad fcomps adc pop mov inc lea add jne (bad) and cli mov cmpsb ja dec stc jae leave mov gs jp dec (bad) and xor jne mov and je or addb dec jmp lret ja xor stos and jne inc enter cmc add adc pop pop push pop and movsb mov jae sub jp das test fdivs jp mov mov or mov jecxz jp mov ds xchg dec popa push repz pop lea mov dec and dec add repnz idivl jle aas int3 js ja cmp mov imul sub cmp or jb jno in daa sbb dec cmpsl loopne inc lods sub mov jnp mov sub testl pop jg push (bad) xor fdivrs sbb xchg fs pop stc pop mov cmp cmp xchg mov xlat jp jne mov dec xor ret pop arpl (bad) lock sub movsl mov testb pusha jp jns push jecxz mov clc (bad) xchg mov rorl xchg push jp add mov cmp mov mov cmp into fistpll pop in fwait daa jp inc sbb mov insb dec cltd dec in ds cmp xchg sub jecxz lret ja lret loopne mov cld jp clc jmp (bad) cmp lcall pop enter xor jle and in outsb dec test mov cli loopne xor add sahf xchg scas test or mov adc (bad) cli js adcl (bad) push jp mov (bad) sbb push rep dec fbld xchg jp fcmove sub jge les push sahf pop scas sbb push aas jp xor loop jp int3 out add pop sarl cltd pop push pushf lret ja and movsb daa sti sbb stc fstpt jp xchg or and jp cmp dec das inc outsl sub int dec jp pop (bad) pop xor jne cmp mov aam cmp mov sbb das iret pushf sbb aaa add push mov mov push inc jp adc cmp jns dec jno and dec or jp lods into and xchg aam push xor leave xchg sub mov ret mov ljmp cmp mov gs sbb mov test sarl xchg out stos add xchg je mov sbb mov cmp jg add lock divb xchg mov xchg cmp cmp ja gs flds lock mov mov loop mov jbe sti cli outsl test (bad) fdivl lcall call sahf jp adc lods pop and push loope push insb mov sub imul test repnz fistl or popa stos fiaddl stos popa iret adc xchg ja dec outsl int3 xchg pop fnsave jle aad mov pop and inc popa outsb out test pop arpl ja inc inc stos nop mov aam enter or xor lods dec nop mov dec or (bad) fisubrl imul adc inc movsl popa out and movsb rcr js dec rcrl add push in sbb adc add test jae mov out cmpsb mov xchg jp ror std arpl dec stos sbb lcall int rorb or stos cmp aaa mov jne leave inc xlat stos shlb fistpl imul push push jae jbe jmp arpl ljmp push out mov movsb stc fidivrl push adc dec push stos sub cltd cmp subl in pusha jl addr16 xchg and jp nop push loopne cmc or jg push ja test sti sub pop jp fcmovu jle in mov mov jbe (bad) ja cmpl mov ljmp call js add enter dec mov out or mov or and xor arpl push inc jp fidivr out das mov insl adc xlat mov sub js sar xor lcall repz jecxz test add xchg mov or aas inc fwait pop cmp mov jno cmp xor xchg aam das flds lret xor sbb mov cli call fisubr ljmp ja or mov push sbb mov mov xor or inc xchg test pop jo dec std (bad) jp fcomps arpl faddl inc push and addr16 call dec mov mov into insl sub fdivs xchg and loope inc jle ja rcrb cmp mov jp sub add jecxz ret jnp subl daa lcall cmp aaa xchg movaps dec mov ja mov mov xchg adc pop sbbb dec inc icebp shll jbe mov adc lock cmp dec imul add orb jne mov jl xchg jp pusha xchg lods rclb idiv call fistp jae rorb jp pop and dec cltd inc movsl jno fstpl cmp jp gs call (bad) and pop test jno icebp inc sub or mov pop pop pop rorb inc mov fisubrl pop aas sti mov xchg loopne sti sbb mov sbb xchg sbb xchg cmp pop fwait sub insb test dec roll jne hlt popl mov shll jg sub fsts jmp test pop pop xchg cmp imul mov pop dec stc out (bad) jp sar mov fidiv (bad) jne lods dec out jne mov jecxz ficoml xor mov out push pushfw xchg dec dec lret ret and jle jmp jo jmp pop lret mov pop pop cwtl push enter dec ds mov push adc inc push xor icebp sub pop rcrb adc imul arpl icebp sbb xchg xor sarb fidiv (bad) stos xchg jp add fiaddl cmp popa scas subb in (bad) mov mov add repz xchg ja,pn cmp cmp jl outsb nop sbb ja or jp int mov mov sub sbb andl (bad) lods loop jp mov sub xor lcall das xchg loop jp mov mov in dec int jno (bad) jb loope in das js cld fimul sbb bnd hlt ds inc push loop cs ja adc sti cli cmp jp test notl ret fidivrl mov pop sub cli dec adc je jne in out or pop (bad) mov out mov pop fstpt and mov pop push cmp mov xor nop jecxz jae js jp xchg and cmpsl adc jmp lcall add bound pop fwait popf jp adc xchg jp outsl sub xchg xor jae cld ja popa jecxz push rorb push cmp push or rcll or jp jne adcb push add lcall test jne icebp aam ds add stos pusha xor lock dec mov std push out jp test xor shrb mov in inc sar and test cmp and aas push les ja fld add mov jbe mov sahf cmp mov imul xor jp pushf mov test es push sbb lret push pop sti xor movsb mov cld sbb push mov mov jp aam jge add (bad) or addb jp test dec pop sbb fs (bad) sbb jp je insb out pop lods notl or fdivrs out sti jp ret adc mov dec lock push jne cli cmp out pop sbb fdivl mov (bad) (bad) les pop aaa decb mov jecxz outsl mov jmp cld test out mov mov mov sub iret stos hlt or into push mov movsb xor push in in aam pusha pop add scas jne sbb jo je js das outsb push stos mov test pop (bad) pushf lods pushl push jns insb cmp ja cmp dec jno mov jns in popa or lds stos mov insb movsb (bad) repnz sub or cwtl mov sub repz add mov adc ja aad sti push inc insb idivl jle inc stos movsb cmp fadds cs lods dec stos lods push in mov mov movsb or stos mov shrl fildl pop inc mov mov sub loopne and stos outsb (bad) pusha sbb or add movsb ret bound push pusha mov addr16 popf stc jle push jae jmp sbbl sub stos test ret sub pop mov mov in imul test xor je (bad) cli and es pop (bad) jg (bad) adc mov push enter xlat mov jge xor mov mov mov jl dec out arpl inc mov mov movsb aad outsl jg jnp pop sbb clc int jl push incb mov js cmp push stos out test fcoms pop sub iret and push fs inc mov pusha in xchg cmp sub leave addr16 jmp pop stos dec mov xor dec fistl cmpsb jp je shrl jo (bad) pop pusha mov stc and xchg dec arpl pop jbe sahf sbb imull sti xchg rclb ret sub sub outsb mov xchg (bad) int mov imul mov fnstcw lods fmul (bad) add gs fbstp in stos in jo aaa das dec (bad) cmp push inc mov add pop pushf cmp sub and jp ficoml fs (bad) shlb sbb and repz mov movsl shll jbe push adc cwtl mov sub pusha adc adcl cmp mov and aas jnp or dec popf insl dec js and cli and jg jp shrb ljmp fbstp or push ret lock negb leave cli outsl or pop and jp ret ss (bad) mov sbb insl stos sarb push add inc aaa adc jmp jg dec push insl xor jle pop push enter mov mov das into cld (bad) aam stos xchg lods test adc xchg dec in inc jae (bad) fidivrl push faddl sbb sarl test dec mov cli dec test and dec xchg lods push or jle cmpsl int3 lret js or aas jp (bad) movl test movsl in repz push lcall faddp and jp or push mov and xor adc mov fdivrl fwait cmp jp cmpsb pop dec scas dec fs cld push cmp lock test out and sbb or rcr aam pop (bad) sbb sub fistl fcomps jp lods (bad) jl and loope push lahf (bad) jne mov mov aas adc jmp inc jp inc dec jmp sbb cwtl test or inc js mov push xchg jp mov test sub roll (bad) pop pop xor inc lret add (bad) movsl jge ss outsl les jne or mov sbb insl sti jp jbe and ds mov adc stos ss sbb lahf jns fwait and xchg test push (bad) xor repz (bad) jmp mov arpl and (bad) jo add sti in mull repnz fnstenv xor fsubrs cmp in dec push test cwtl push ja inc insl xor lods test cltd lcall dec mov jnp pop pop push xchg mov mov cmp push jg,pn push lret lret stos (bad) push adc imul sub out in pop xchg xchg int3 cld sbb mov lret mov cmp xlat push arpl imul inc add ja dec sub push pusha clc aad mov stc nop out dec and xchg out adc arpl arpl cmpsb popa and mov into mov adc xchg out lcall aad mov les ficompl test push popa mov jp ss add clc mov cmp gs imul jmp mov jne push imull and sbb stc fstpt popf jae shrl sub out (bad) xor adc out nop mov lret fimull shrl pop push jp dec pop idivb jo and and mov setle pop lods (bad) ljmp leave sarl mov mov inc sbb pop jno xchg push jmp jecxz sbb cmp jp mov xchg sbb shll inc jp or pop push push xlat add aam dec mov mov fwait mov xchg das sbb (bad) mov lods repnz mov jmp jnp inc jmp sbb jmp dec stos jno mov (bad) sar push sub mov mov mov adc push adc in push jnp cmpsb jmp jns cmp mov ds cwtl dec lds push ja and mov mov pop (bad) in mov shrb loope stos pop (bad) sbb dec jnp pop adc lret imul ja and les loope insb int3 out imul mov or jo adc lahf aas jp scas or and dec jg xor movsl out aam es lret lds inc andb inc clc (bad) enter dec cs pop mov adc mov xor mov cmp in (bad) xor mov jp test xchg fcompl scas sub cltd or xchg add sbb ljmp mov add js scas mov test mov je jns test dec test mov lock faddl xor fucom mov adc dec cmp dec jle and and jbe dec jae push insb or adc mov test push sub idivb sarb shrl xchg and out in pusha fs roll movsb sbb lret (bad) cmp pop jp mov xchg mov arpl int repnz sub xchg jbe aad push pop push sbb outsb stos xchg jnp stos mov fwait movsb popa or jg fisttp enter mov into stos mov xlat dec inc clc repnz fimull inc leave movswl dec xchg cmp xchg popf addr16 sbb pop push cli or and inc clc imul ret fstps inc jmp cmp insl inc (bad) int xchg and dec mov pop outsl flds cmp roll int3 aas mov sahf push mov sub mov out dec gs pop adc push ljmp lret imul add in js (bad) dec lcall jge enter fdivs push js jbe push or dec adc push cmp out jecxz stos frstor in inc push out insb pcmpgtd int sbb pop jp lahf xchg mov les outsb hlt test cmp mov cmp icebp js jl xor push sti jp nop cs pop fstpt jle jp adc mov or dec orl inc push push test push sahf mov add out cltd lea lods out inc push bound mov mov jl xchg xchg adc sbb fs jp fbstp popf jno sub pushf outsb das or int3 dec cli jmp orb imul pop xor and cli cmp xchg or (bad) mov mov jp paddq mov insb mov hlt dec and or leave cs add lds das imul xlat sbb popf call sub push cld sarb enter pop mov imul sti call sbb jp mov sbb test jle shlb mov add rcr push jp testb jp mov sbb mov or stos (bad) notl and lret loop mov stos lret inc mov jne idivb aam push fwait orb dec mov fiadd jp cmp lea cmp cmp stos in pop pop inc xor fwait xchg sub jp,pn jg jbe nop pop wrmsr dec test adc pusha xchg push xchg leave ljmp cmp inc or popf ljmp pop imul test into ret jp mov sti or inc ss pop sub testl movsb ja das or pop cmp outsl (bad) sub (bad) lods add sub decl dec jp hlt mov jp mov fucomi jp ret or outsl pusha push jmp mov lret jp sbb cmpsl push popa jge fiadd rcrb cli arpl sbb adc packsswb ds mov insl repz and outsl or cli das dec aam sbb inc js xor (bad) or sub jecxz pop fwait jne push outsl xchg inc and call mov jno xchg cli push push (bad) jp mov add lods inc jb fs cld mov sub enter (bad) int sbb cmp jo hlt repz int3 jbe scas addb jp xchg sahf jo gs and mov pushf ret pop jns out fsub leave movsb or (bad) sti jnp jae xchg jo and imul sub pop insl jp pop xchg std cltd scas dec or in lcall dec gs stos pusha repnz (bad) sub lret pop push jne dec (bad) insl push aas adc xchg clc pusha ret loop and mov sarl inc pop leave inc movsb jecxz push stos int3 arpl add dec (bad) arpl stos pop outsb xchg (bad) jp aad push out mov in mov mov mov add das mov inc fnstcw xchg cmp sub stos fidiv repnz mov cli sub jp test mov shr mov lods inc ja test dec (bad) int3 hlt add (bad) outsl jmp jle fdivs gs and test push add jl adc popa lea loope insl mov dec and pop xor jp sbb ss in ds test cmpsb jp pop xor inc popf jp (bad) fcoms jp sub push jp insl jecxz mov jbe adc (bad) jb xor lods insb mov and xchg sbb add or mov mov jp inc xor push jb jp sub jecxz lods cmp clc xor (bad) out sub in mov lcall in add mov inc mov adc lods pop loope lock jp lret das loop imul and call je sub pop dec imul cmpl dec push cmp ja sub and jp inc pusha mov jg pop xor fwait aas sbb fisttpll push push dec xchg add shr mov out arpl movsl jp or and mov vmrun dec mov pop jp mov lods mov repnz fnstenv mov rorl das nop cmp and inc (bad) (bad) jp pusha imul aaa dec imul jnp pushf push fnstcw cli cmp mov repz cmp cmc sti jp xchg jns fimull mov push xorb nop pop das imul add jne lods xchg int3 sbb sub push js int in mov (bad) cmp mov stos out outsb jp (bad) jecxz jp nop mov std dec push push mov sub (bad) cli out test xor lcall cld (bad) mov test sub cmp push adc jb mov jmp sub xchg sbb and out js sbb mov sub mov lds fidivl xlat mov ret or outsb aam push mov adc je scas rcll fwait xor out xor mov cmp movsb or ffree adc and repnz insl (bad) or in cs decl call jne add ds test jecxz cmp out aas std mov mov lcall jno sbb outsb mov enter jb pop push mov xorl daa mov cmpsl icebp xchg pop jp nop aaa lea xchg cmc sub leave sbb (bad) bound stos pusha add in adc stos jp hlt lods (bad) mov pop sbb ret mov jp fistp stc jnp adc fwait jne jo mov pusha dec mov bnd mov jp cld jle mov shll and pop fidivr xchg insb lahf lcall mov jno std jbe and or stos jp ds lods outsb test addr16 adc les jbe and jnp cmp mov cmpsl out (bad) xor lods imul sahf jp in and jp hlt lahf aas je bound das add cmp mov in stc ljmp scas lds or loope xor push pop cli inc jbe add in enter jnp dec cmp pop ja mov pextrw xorl lcall inc test sbb lret xchg test insl test arpl std (bad) (bad) dec rcrl mov mov sub and mov rcl loope add push jp sbb popf stos jmp jb mov pushf in push loopne repz xor mov xchg mov xchg pop fnstenv jp xor popa sbb in lds cmp in imul adc adc adc cmp sub inc shrl stos sbb push gs fild outsl fidivl ds jbe movsb dec (bad) mov mov cmp pop and or sahf das aaa cmp jecxz pop add aam movsb pop sub out sbb outsb mov rorb cmp cmp lret jne (bad) mov sbb jle (bad) rep or inc jge movsb mov cwtl jne sbb into add mov daa shrb mov mov and imull outsl ret jp in (bad) jb add pop push aam cli xrelease loope cli mov rclb insb adc jmp movb stos and add loopne add out jno xchg adc aam push jg in cmc jle insl cmpsb lock dec xor scas sub cs add xchg jmp aad sbb jae xchg pop cli shlb mov test cmp cmp shll jp and mov je das cmp push dec inc xchg xchg icebp shl hlt cmp mov jp mov push jp sbb or jp mov mov jp cld mov xchg jae dec ja test cli or in jp fldenv xchg pop mov sti mov out shrb lcall ret fwait stos and inc stos mov mov cmpsb dec lods js cmp mov push (bad) jno lea sbb jp (bad) dec outsl jmp add jnp lods (bad) arpl mov out jp (bad) push cmp jp inc clc mov gs sbb xchg xor ret out test push mov pop push xorl popa lret jnp in int3 scas xor lock aaa insl pop cmpl jne (bad) mov xor enter jp fdivl cmp test dec dec repz add shll sub lods pop pop push cmpsl mov jne mov adc cmp dec xor shl shr mov xor pushl imul push insl lock cwtl sbb scas ret or jnp jmp (bad) clc lret call push jne sbb xor lret jecxz movsb or or imul xchg in pop sbb stc clc jp or jmp inc andw push rol mov push sub mov or hlt cmp cli cmp or and mov mov pop mov mov add movsb jns pop mov loop jns sbbl lods jp fist or sub jp mov sbb imul insl lds mov jb mov cmc sub cmp sub jge mov push test mov jae je cwtl jnp dec and push lahf das sub sub mov ds dec fnstsw cmpsl push sub loopne test es lea shr sub jbe jp pop and cmp fldenv push jp js push rcrb insl sbb push mov popa inc pop ja push js mov push rorl xor cmpb adc loop adc aad hlt insb adc jp xchg out aas cmp addl mov mov (bad) mov sub jmp fnclex inc jp test mov lret and test js dec lcall xor adc dec jno in cs push jp (bad) mov cli dec and ja ljmp test pushw mov in shrl divb mov jno lds movsb subb mov or es (bad) xor pop pop jp sbb rcrl sbb lcall sti jle scas jb or inc fadds repnz hlt and or shr mov pop sahf lcall sub ja shlb cmpsl les jp cli mov sub cmp push fdivrl lret repz jne push mov in push jne mov xchg rcl mov movsb and ja in imul test or mov dec enter jecxz or mov cmp adc (bad) stos insb aaa jnp and insb mov rorl enter inc pop sar lcall cld jne mov jg jecxz cmp pusha sub sub std jae test dec xlat sbb imul mov enter iret cmc (bad) lods popa mov ds fcmovnbe cmp jno dec mov iret and (bad) push or jne sbb cmp cld sub insl pop xchg incb pushf xchg pop cmp jno xchg (bad) jns jb xchg out call push inc sub popf sbb gs xchg rcrb pop mov cmp (bad) adc in popf xlat lahf iret mov movsl sub (bad) jp pop enter ja mov mov xlat jmp fstpt jne cs pop ja jl popf das scas mov push sub stos mov idiv cmpl jp stc loopne (bad) mov cmpsl push or pop xchg jbe jp sub lds dec cmp lcall jp out add icebp push cld xchg jp xchg fmulp test adcl stc je es fidivrl push adc pop jne mov jnp stos test push add in xchg jle (bad) jno ret popa mov and pop adc push mov jne xor dec sti mov daa mov push in outsl stos dec jp scas mov xchg or cwtl lods rorl fcmovb ret divl mov mov hlt mov sahf jno sbb stos jns jmp test adc jp push adc jno std pushf mov lds cli jne jg push ja icebp jp and cmpsl push pop ja (bad) scas mov (bad) sub mov inc xor jbe sbb fmulp mov les cmovp pop jp push aad cli sub xchg adc xor fisubrl fldt loop jp arpl xchg mov pop push clc ja adc cmp dec jp aaa (bad) jmp mov pop jp cwtl cmpsb adc nop sarb inc out or mov jp mov push jg gs ficompl stc pop fucomip add xchg cmp js and add (bad) push pusha xor and divb mov jl pop xchg jge sarb mov xchg mov nop add popa push dec jnp or mov andl insb add lock loopne sub jp mov jp sub sbb fcmove mov pop inc push aam jnp into and push and xor cmp pop pop punpckhdq pop or jno push out pushf adc push adc inc xor loop cmp shll std cmc (bad) jno scas dec cmpsb mov lret in sub jnp push mov xor jg pusha mov cmp mov movsl add pusha adc sbb clc mov mov jmp aam aaa inc adc or iret fldl xor jp,pn push xchg aad sahf cmp and cli pop inc or mov int aaa lods into mov stos mov sub push sbb iret cwtl jnp stc add xchg push push dec cmpsb pop lret (bad) mov dec sub movsb (bad) in clc notb int pop je xchg jecxz push jb test arpl (bad) jo push data16 xorl shrl cmp les jle jg daa andb xor lods sub inc stos mov and (bad) repnz xchg push lods or xchg xchg test dec xchg push insl dec cmp inc jle addr16 call imull push in xchg stos sbb sbb (bad) pop movsb fsubrs nop jae adc xchg push sbb (bad) into dec mov sub or jbe ffree lahf lea mov xor jae pop push clc pop mov sub pop daa pushf dec inc cmp cmp sub jb mov das daa mov cs mov push xchg repz inc out mov jg lods xchg mov or cmp popa fmulp mov int3 aam pop gs mov mov pop out cltd mov inc push sbb pop cli jae push gs pop scas lock bnd leave pusha je std gs stos push ja bswap movsb jle mov jne mov jne mov sbb and stos les fidivrl xor icebp inc loopne cmp pop ljmp and and mov sbb ss pop mov push mov push push jns inc adc popa lds push xlat xchg cld subl out mov (bad) stc insb dec pop jg daa (bad) je inc cmp pop movsb jle popa (bad) cmpsl push sbb daa sbb inc cli movsb jae mov icebp stc push clc ja jae push dec lcall fsubrl dec ja lods sub jnp or push push (bad) adc bound mov dec movsl (bad) jnp mov arpl roll dec lea mov cld sbb xor mov push call dec cmp sbb sbb push dec mov mov ljmp mov jecxz xlat imul cmp out test mov fidiv jecxz je arpl popa sbb mov add push leave pop idivl movsl push lds add fidivr stos jl xor gs jno (bad) fisttpl pop (bad) outsl loop das jg sbb mov mov jae insb fsubl das mov loopne sahf cli dec mov imul pop aaa push nop dec sbbl mov imul mov cld (bad) stos mov pop inc jnp (bad) mov jb push int3 push arpl or ss xchg jp ficompl jbe shlb (bad) push (bad) sbb mov lret (bad) dec and sti loop out lds cli cmp xchg test scas test mov aad notl jl pushf idivb mov (bad) pushf mov int fidiv mov leave out test mov and xchg pop jp cmp inc lock addr16 loope ret mov imul int3 fcoml test xor fistpl dec lea cmpsb leave mov mov mov ret dec adc add mov xchg das add stos and push or imul and cli or pushf cmc lahf mov sahf imul out pop enter into lcall mov popa push add sub jp mull stc insb cwtl sub and push or (bad) add dec call out inc rol es sbb jp into aad pusha aaa sub pop shr pop jns js jp xor xor (bad) inc icebp sub sbb je fsubs cmp mov mov jp in (bad) xor adc cmp jp int cmpsl (bad) jb cmc xchg hlt fdivrs add lods test push nop mov push outsb push jmp push (bad) or jp scas jnp orb adc mov ficompl adc add cmp inc mov sti mov mov loop pop cli fstpt (bad) int ss (bad) mov or dec icebp push push xlat stos clc jne std xor sub dec js ljmp push jo loop dec and cmpsl shrb inc in mov xor cmpsb jne (bad) lea lahf jns sbb or aad inc fstps adc inc test sub pop xchg in fist (bad) adc sti xor pop (bad) jae cld sub pop clc movsb jns (bad) repz add xorb mov roll jnp mov sbb divl popf add or sbb jns mov jp cwtl rep inc repnz mov add sbb je inc das jmp dec mov adc out popf adc jmp movsb jecxz mov add mov bound mov cli jns lods fdivp (bad) or aam jnp xchg xchg ret gs jno sbb inc rcrl addr16 sbb ds stos pushf loopne enter push mov movsb adc insb xor lcall pop push leave mov addb repnz mov pop mov (bad) js jge pop mov cmpsl jmp sbb jnp ret in inc ja jecxz adc jae cs sub jmp lret or pop popa stos sub clc lret xchg sbb ficompl int push or movsb xchg and gs inc jmp pop in add movsb sub jmp jg lea out aaa popa adc sti mov mov dec cwtl inc lret cli dec lcall and lret imul fistp js mov lods cmp stos mov lahf mov ficomp insb in arpl push xor (bad) mov in test pusha dec int dec call cmp rolb pop cmpsb push xor mov lcall movsb mov (bad) and xor push out or pop je xchg aaa xor mov add sahf sbb dec or enter (bad) popa insb pop (bad) jno mov xor int3 jne inc pop dec call lds lock imul add xchg push addb shrl (bad) lock je adc jne inc xor lods (bad) fcmovnb add cmp xchg ljmp rorl shl jle mov int pop cmp bound les loopne inc jg fildl lret stos and out mov sub inc jo and test flds and mov sti into push mov and xchg push pop sub outsb sbb fs outsb xor lds outsl pop jae xchg rcrb adc lock jle jne clc int mov mov sbb inc lea xor into mov inc js cmp movsb popf cs in fcomi pushf xchg pusha mov mov sbb mov je nop sbb jne outsl push stos or jecxz stos or fisttpll dec pop stos sbb cmp movsb ds fisub adc ret in pop mov out xchg adc inc pop les test bound cmpsb out and fimull pusha xor (bad) test inc das pop pop mov rorb scas jle in repz loope ja inc insl das divl jmp sub sub aam jne add sub rcrl jg pop mov stos and rdtsc mov pop jae or mov inc xor xchg outsl push sti mov aaa outsb pop loop mov sub fisttpl std mov jae jle add stc jnp mov aad dec xor mov sub jmp sub int decb push jnp outsb sbb dec repnz jle jmp adc shrb jg adc repnz les insb out sub dec adc or push sbb mov and cmp into rclb push and xchg dec pushf movsb vcvtsi2sdl xor fcomps cmp (bad) pop movsb imul outsl aaa les jnp loopne stos js (bad) mov fs jg mov enter insl stos (bad) mov std cld (bad) stos sahf js mov xchg cmp pusha push aad loop loopne sbb rcrl dec mov outsb dec xchg pop pop push fwait popa incl ja loope xchg outsb arpl jb insl sti sbb sub pusha mov mov push and sahf cltd mov inc xchg roll fs push fisubl mov inc shrl ljmp jb fistpl add jbe push mov mov mov jae xchg mov test xchg ja call cmc out movsb adc xchg or popa or lods push andl adc (bad) cli or popa jnp out clc jae insb rcrb mov push add sub sbb insb lea xor js fsubrp sub sti repnz out mov imul sbb ljmp mov cli sahf imul jp pop push pop gs hlt pusha bound jle xchg inc mov or mov hlt cli je movsb push mov gs inc imul out frndint jo add sub gs pop (bad) xchg fs in int xchg sub lods cltd jmp dec jbe fs mov aaa mov mov cmp inc movsl test outsb mov adc aam imul (bad) pop mov push push pop ja daa fs adc pusha (bad) movsb push mov or cmpsb inc mov sub test into pop sub popa dec mov aas dec ret and inc jle dec jb xor inc add mov sbb enter sti stos pop in xor dec stos aad movsl cmpsb and das pop and push in jl jmp sub lods mov cwtl aaa dec stos leave les xlat movsb std xor jecxz icebp cs dec bound outsb (bad) and jb aaa ret add jno sbb jmp and sbb pushl dec sbb mov and add or pusha out imul jbe loop jnp jge mov jae dec and std mov in dec iret sarl cmc imul sbb inc or cmpsb sbb mov jge lea insl aas lret cmpsb (bad) jp ja mov data16 cmp stos sub jp int test fwait pop mov pop or pop jecxz cs sti jns mov or mov sub imul clc loope sarb xor test jp push cltd sbb and in push lea mov stos mov jle push jno mov jp mov enter dec jg jae pushf jmp inc js addr16 mov inc sbb jnp mov mov jle inc sbb fcmovnu int3 pop jp addr16 movsb (bad) xchg fdivrl mov ficompl cmp jp pop pop (bad) lds xchg cmp fwait inc pop ja pop adc mov jp jns repnz cltd out add (bad) mov push dec sub xchg ds pop setne sub inc mov rclb (bad) xor pop jg pushf pop xchg mov loope cli cmpxchg call sbb mov mov jne fdivs dec push add sbb sahf addr16 mov push jp xor pop imul or sub sbb jge xchg cmp xor add sbb cmp icebp jb or js out popa xchg ljmp and jp mov mov jp mov xchg xor adc adc roll mov arpl icebp sbb mov push loop aam outsb pop sbb pusha sub in or pop adc jp movsl ret mov mov cs in jp fdivl sub ret insb test ficom lahf sti sub or je jne pop lcall xlat mov mov push imul fist pop (bad) int3 scas jae cmovns lea dec push js jns dec sbb mov loopne jae push cmp or test inc pushf push dec sbb push lock ret aam popf out dec pop loope call movsb or dec ja push jnp mov addr16 dec movsb mov stc rorb xlat jl inc dec sbb fisubl mov pop or sub mov mov cmp pop aas out dec dec (bad) inc inc jbe add imul cs les mov (bad) push push jb sbb xchg iret add sub add xchg test test sub mov je rclb pop sub jp xchg les imul push in loope xchg jmp ja loopne stos pop dec xor sub pop push out dec jp pusha lea mov stos sbb sbb sub push mov push popf dec sahf lods in es int fidiv in push push ret dec fs (bad) push test adc push insl lahf (bad) mov mov insl (bad) push stos call shrb sub ret push test xchg pop pusha mov mov push loop lea push inc xchg push xchg fidivrl (bad) dec arpl cwtl mov cli addr16 xchg pop adc add jecxz sahf cmp mov insl ljmp xchg stos (bad) shll icebp add jns vorps hlt jle cli pop cli mov pop ret ja xor push cs jo test pop cwtl fxch pop add mov sub mov addl (bad) jp push cli jne loope out (bad) mov dec pop test insl mov and jp out test ss out sahf or imul out push pop jne jno adc mov imul push mov scas js dec pop xchg lret js add pop incb cltd ds sbb call cmpl xorl jmp jnp pop imul les xlat test popa mov mov jp ret inc jae fnstsw outsb stos enter out jp xchg mov push lret dec mov and mull jp dec ret cld mov jp sub sub out out lock lds push jae xchg cmp mov push pop sub and xchg mov pop mov scas mov shrb and cmp jp xor dec mov xchg outsb jp ret sub popa adc xchg imul push (bad) ja stc lcall mov xor mov add inc cmp dec insl shll je push cmp jp or push xor jne mov cltd adcl call stos mov mov clc jp xor mov xlat and dec jnp inc es in and cmp xor lods cli test lret jle add push push clc les adc xchg dec cmp pop xchg fmulp pop jne mov mov pop or movsl insb xchg add jo in push add jg add icebp jnp lea ret dec cmc mov js push dec xchg clc (bad) scas cmp jbe (bad) bound sub pusha or pop cwtl push inc sub adc fadd sub jp sbb in jae jp xchg popaw adc cmp leave mov jp cwtl xchg push rclb hlt inc clc or jp popa adc jne inc out arpl aas jp int cmp mov inc or jp xchg loope xor insl inc popa fsubr cli adc jmp stos test jnp xacquire xchg mov push cmpsl or jle ret pop test inc xlat mov lret sub fistp jl (bad) loopne add mov (bad) aam pop hlt inc dec sub add jne ficoml dec mov test jmp aas call pop pusha rcrl pop stc jg ja bound cld xor dec mov popf loopne xorb pop in movb addr16 sub pushf push sbb (bad) lret and (bad) pushf pusha push or fidivr and sbb jp cs xlat (bad) sub jp leave xchg pop arpl jae inc lret mov push sub mov fidivr loop fisubl lret push movsb nop push cmp xchg mov imul dec (bad) mov sti in inc fs add mov pop (bad) jp rolb daa loopne,pt push dec and xchg loop xchg in and sub jp xchg pop pop les leave jnp mov and inc sub jp (bad) aas push insb xchg pushf xchg rcll dec jne add adc jp popa jg sub mov ljmp mov dec in cmpsl (bad) (bad) xchg icebp adcb test inc insl mov imul cli mov pop insb add in lret jnp cs mov mov aaa cmp jns dec add adc fsubs (bad) jb js adc insl sti jecxz ja (bad) cli and shrb stc cmp je mov mov jp fwait sbb push push sub scas clc mov rorb pusha xchg clc jp out dec jno fidivrl pop add bound je mov jg xor arpl movsl dec sub sub mov or loope enter stos jp (bad) fistpl imul add adc loop push sub out and sub or inc cmpl in adc jb and add xor iret mov inc movsb jge adc popa lea xrelease das sti pop pusha addr16 insl push inc xor mov js imul iret push es in lds jmp add sbb fisubl pop mov xor in rol jle js xchg sarl and pop pop notb mov dec je adc les lcall cmp jb jecxz pop jmp gs pop stos mov mov push movsb jmp js push cmp and xor iret movsb jbe in push subb jge scas (bad) mov add xchg inc add push jbe push push push xchg jmp or mov sub sub add jno lcall jg ljmp mov aad out sbbl (bad) dec inc mov mov outsl movsl int jp movsb gs jnp fs stos push cmp sbb mov pop (bad) sarl in dec shr sbb jb pop add ja call fs ljmp (bad) ret jnp mov jo repnz sub stos popf repz pop inc (bad) lock jb xchg mov and lret push jbe arpl aaa movsb fbstp mov xchg fs pop insl xor lcall jmp push push jge scas pop imul xchg insl in sbb int3 movsb jp jge jae lcall (bad) jnp stc mov adc sbb jp push mov jp stos xor mov jne ficoml or xor sbb jp adc mov pop in fistpl jnp jg or pop mov or inc and xchg jp push testb (bad) push in dec outsb jp add mov xor in gs fistp imul jp fcoml daa int lods sbb test ror es add jb cmpsl xor mov (bad) ficom mov jnp test sub xchg lods sarl jg aam and push jl push dec in movl inc xchg addr16 dec lods std sbb arpl aam pusha sub inc int or test (bad) (bad) ja ds ss mov xchg stos rcl sub (bad) mov test jp nop sbb cmp mov adc daa mov pusha push daa rep int in dec popf cmp aas test mov arpl jmp pop dec inc clc scas ret add ror out cmp bound xchg lods mov dec (bad) jp (bad) jo pusha mov mov jp or scas jne cmp dec test and hlt jns jbe mov cmp dec jg or sub les cltd jno sub in sub inc rclb pop xchg jnp cld mov fnstcw call leave out ja aad pop unpcklps xchg mov sbb mov std jb mov lcall in mov xchg (bad) adc cmp sbb xchg loopne gs pop or into mov xor shll pushf cmc ljmp inc or stos jne ret mov cmp mov jg inc xor mov imul jnp (bad) decb push dec jp inc fwait (bad) repz jp sub rclb fiaddl mov in push outsb mov jp sub mov inc cmpsb in cli ret xchg fs daa pop pop imul sarb addl lret aam cld (bad) push popa jp scas mov scas mulb (bad) sub mov sti cmpsl push int3 sbb lcall xchg fsubrl mov pop cli jge jne test cmp xor add int fildl mov mov mov (bad) sbb (bad) negb sahf xor insl mov adc mov inc xor pop loopne sti sahf jl jne xlat mov pop mov aaa ret xchg and insb stc out jecxz lock std xlat xchg fnsave out test (bad) xor jmp jp mov dec inc outsb sbb jp fiadd neg pop in jno aaa adc cmp (bad) (bad) call test jmp cmpsl push test mov rorb xor sti das inc fld1 jae shll cmp push dec and mov fsubr adc pop aam push stos fcmovnu jae xchg bound dec or cmp xor inc in into cmpsb adc jne sbbl sub (bad) jecxz sti jp test mov pop sahf jmp cld jne push fisttp pop jno sub mov jo (bad) fnstsw in mov (bad) push dec xorl test call push movsb bound add aad cmp loop push jae mov sub jbe test stc xor pusha out call ret gs cli pop fs repnz sbb (bad) ds pop mov lret ss sahf mov stos mov ret popa sahf and push and or xchg xchg lds incl imul daa cmp jp (bad) std dec inc mov jp push fisubr ja xor (bad) sbb hlt cmc add outsb xchg dec test jno or jno mov jnp leave mull and gs (bad) movsl stos inc loope cmc mov out pop imul call pop movsb call cmc insb int3 xchg pop xor daa cli ds aam jp (bad) and and lret push fsubrl jno sbb lahf xchg jg sti fstps pusha movsb xor jp xor repnz jmp cmp add fucomp cltd lcall adc aas lcall mov push cmp cwtl cmp mov mov movb cmp decl rolb add mov in in jl lea test jbe dec das xor mov or les pop scas jl jp mov jp out clc push out out mov cld sti lods (bad) outsl ja mov cmpsl in div je sub inc adc stos arpl in lahf jnp movsb subb fstps ror pop sub pushf int aas pusha push push loop imul ss std pop (bad) mov sub outsb and sub xrelease sub fistpll pop arpl xchg sub (bad) lods adc dec add pop out js mov lea pop sbb sti push jb dec dec pop push mov jp mov jle out arpl mov sub jno aas (bad) stos xchg sbb fidivr sbb stos std jne orl out repnz mov outsl in pop add mov pop clc push std popa cmc (bad) or mov sbb pop xlat and repz (bad) lret mov pop pop cmp dec mov push mov in mov pop pop je jl xor cmc ss shl add lock mov push mov sti mov adc jnp in mov add push and divl push sbb loop adc cmp fstps cmc xlat mov xacquire into lahf pop pop xor ret jp fldl push in jp jg mov es xor push and jno into push in (bad) je movsb xlat mov push mov (bad) adc xor and dec lods xchg mov mov cltd cmpsb xchg cmpsb jp out stos xor bound mov mov pop pop pop ret lock pop mull callw cmc cmp mov adc jge inc insb jnp addr16 or cld nop cmp hlt je arpl aas xor imul xor mov dec and ja mov ret fs pop push popa xchg clc jne or mov mov cmp cltd push cmp gs cmp das xchg sub jp bound push add aaa xor das sub (bad) pusha jne adc test repnz lret mov jo out outsb xchg aam add (bad) mov cmpsb fistpl jg es push push (bad) jp xchg test shrl mov xchg out dec add stos sti pop sbb xor push cmp and cmp jl inc repz inc pusha loope mov std and into and push imul imul add in jp mov or pop pop movsb aaa lret cmp call mov ds in aaa les lods xchg lret fwait sbb (bad) jae rcll jno sahf pop pop pop stos jmp cmp mov (bad) insl push sbb insl mov or iret sbb insl cs or add std push cwtl dec movsb iret cmp pop lcall mov mov or aaa dec pop mov mov out popa mulb cmp pop xorl scas mov cmp sub inc jae jg imul push fwait inc ret gs iret pop (bad) mov ljmp call int3 js xor mov push pop dec bound jg sub mov cltd inc call pushf into pusha push or loopne int3 lods aas xchg push dec scas push jl dec dec adcb arpl loop clc into pop sbb push adc out pop inc fstl cli or out jnp stos mov xor adc push movsb popf mov sti int rclb fisttpl fcmovnbe fisubr inc xor (bad) ds cmpsb test imul push adc repz mov stc stos cld and imul cmp and je pop (bad) lcall (bad) js lcall sbb or int3 imul sbb xchg xchg outsl jns add mov dec mov sbb movsb inc xor dec jp aad cmc call xchg mov mov in iret or xchg push sub pop mov sahf mov sub pop lea mov dec xchg popa xor daa inc lods jp ficompl add andl aas imul sbb lods jns (bad) or pop inc or ret (bad) outsl pop ja sub loope dec mov jl push arpl cmp pusha popa loop dec call popa lret iret fdivs ja or loop (bad) mov jae pop leave adc fldl (bad) stos jp fsubrs jg jmp mov inc seta in scas jp lods mov jmp dec lret adc jno ja pop sbb ret fdivr and sub jp jb xlat push rcrl mov jne mov xchg pop push push lret mov imul xchg mov (bad) add xor push lods es adc lcall (bad) (bad) loope jge sub jnp mov dec cmp lds pushf loop stc jae sbb sub clc (bad) gs inc pop xchg iret xor loope negl sbb dec push sub (bad) cli or icebp ret popa mov inc xor sbb aas jl mov dec fdiv idivb sbb mov mov sub pop pop mov sbb cwtl js jp add xor and ja scas mov mov dec mov mov ja mov push ret push add cmp ret mov sti xchg sbb pop cltd test jp mov jno jp,pt testb pop mov pop insl jae addb js aaa sbb or lahf xchg in jnp add enter xchg mov jmp adc jmp call rcrb and jno (bad) in push orl movsl adc adcl sub mov repnz xor shrl iret mov clc jae or movsb mov push mov stos push rcll outsl fidivr iret mov push scas dec imul mov das clc lret fnsave stc loopne adc jns aaa xor jp repnz xor inc push add jb lahf scas out clc cli jmp cmc adc fwait sbb out mov jecxz pop sahf dec or lahf rcrb and sbb (bad) jp or xorb and xor cmpsb adc cmc sbb pop jl mov stos adc in adc arpl jge mov popa lea push mov (bad) add lahf push out add cmpsb mov out pminub mov ffree pushf mov dec jno mov xor lret test and xorl xchg jge xchg sub mov cltd adc and scas imul sahf push movsb dec mov int3 ss imul mov icebp (bad) cmpsb (bad) ja add sti rorl lcall xchg pop sub in sbb ja push push insb fnstenv jb in dec inc add cli push mov pusha add dec in cmp sbb jecxz xchg jns cmc mov roll add fidivrl enter add inc out loopne cmp add out in jp adc dec jp mov jp or rcrl fdivrs jp xor sbb pusha push sarl pop cli fsubrs into pop fs stos pop ljmp cltd (bad) pop xor insb push outsl adc inc xor pop int push hlt sub stos into mov daa cltd test enter lods inc sub stos sbb in push push mov jbe ljmp mov cld pop addr16 stos and imul xor loop mov adc inc test outsl or jno xorl popa jb test jmp pop mov pusha adc adc clc add dec ljmp sbb enter insl test pop dec int jb repz xchg test push pop push ficompl pop pusha jne dec mov pop inc hlt jmp add sbb mov movsl mov loope push ja and dec sbbl fisttpll (bad) ja adc pop fs adc dec (bad) psrlq ficoml stos inc arpl sub scas sub and push in fcmovnu adc push mov cmpsb loop pop loope xor (bad) xor sub push or or mov popl jmp int3 cld jge ja pop xor stos fldl and jbe lods mov rcr inc out gs in adc xchg mov mov cmp lea push sbb sbb mov jle add jns fisttpl add movsb test imul sahf lods xchg addr16 jnp jo data16 cmp mov ljmp ja (bad) xor stos enter fdivrl push jp test pop mov sbb xchg div cmp jp mov inc rcl dec imul addr16 adc xor pop mov repz std push ss mov inc sub int3 cmpsb sub pop xor xchg mov data16 dec (bad) or jne adc int clc mov sbb fnsave add es out enter jnp js jbe xor dec push fist faddp (bad) mov std in repz popf daa adc or or insb jp sub adc insb add stc mov mov int rorl sti ret push add add jp xlat mov pop or cs jp shlb jp pop lods aam fldt sbb int jp pusha rclb jp adc mov sbb and xor jo cmpsl dec call icebp jge sbb pop imul test call dec pop movsb out mov adc cmp (bad) inc cmp fimull das jae pop dec jb dec or inc je insl idivl dec jne xchg insl ficom jnp jmp xchg adc cmp push mov jg pop enter xchg (bad) jae dec xchg cmp aas movsl in inc or mov pop aad jp mov outsb fnstsw jp push insb pop pop cwtl dec xchg insl mov cwtl fucomp jmp insl (bad) or repnz popf mov cld imul jae sub adc aaa mov inc cmpl mov popf xchg and dec gs pop ret sbb dec add mov cltd cli (bad) cmp mov das mov push jmp mov cmpsb loop addr16 (bad) jne and mov shrb jp insl dec mov jp and out mov mov jnp dec pause loop sub jno and and and cmp jp outsb (bad) daa lods in test fcomps inc jne imul out push out sub es test jne or push fwait jo (bad) xor fs jp mov jns xor cmpsb in add mov sarb inc (bad) inc xchg (bad) mov int3 mov loope pusha mov repz adc cmp aaa scas xorb pop pusha dec sub jne or cli jne cmpsl ljmp gs mov mov out mov or jp in push fwait sbb fidivl sbb cmp pop ja sub sub mov andb pop adc out dec jo xchg test pop mov lea scas das ds jp mov inc hlt jge addr16 mov jne push cmp nop pop cmp or cmpsb push and dec push cmp adc (bad) dec gs jns jbe cli aaa mov inc xchg push cmpsb jne pop sbb mov or adc xor jp sbb sbb js jbe (bad) in sub xchg in (bad) sbb ds decl pop adc movsl nop outsb (bad) cli lahf lcall jnp jo das mov es cmpsl jp popf pop ds inc add jg test mulb pop or mov cmc dec movb jno cmp sbb dec icebp fprem pop pop imul ss cli fiaddl ficoml pusha dec sub cmp fistpll pop pop pop repz jp push sub les or dec nop inc sbb dec aad jle dec fisubrl aam jmp jno in pop lcall lret push (bad) in outsb mov test xorl ds fistpl add fdivrl arpl (bad) mov insl cmp jmp adc pminsw push movsl add iret fldt dec scas inc jle ror (bad) fild sub jg push xchg arpl aam cmc stos cmpsb test mov call pop pop push sbb adc sub popa ss and (bad) xor and lods leave sub lcall pop fldt jp (bad) mov jp sub outsb push jecxz inc cwtl imul and jp mov sbb test mov add cs pop sbb dec sbb cmp add jbe or popf and or outsl dec jae in dec fs cwtl push (bad) js mov jae mov addr16 ret jmp enter into pop popa push xchg inc cmp push lock and jp xor lock inc and lcall in ljmp mov adc int dec sub mov mov jnp cltd ja mov push bound jae std divl sbb jbe movsb nop pop cmp jb inc or js mov xor fwait cwtl xchg adc js shr xchg jecxz mov jo pop sbb push cwtl jp adc add push sub cmp sbb popf cmc mov or lahf jne push jo out jg mov mov jl xor pushf (bad) repnz sbb imul cvtdq2ps xor inc test mov xor mov jnp push fwait xor movsb jp or aaa (bad) push (bad) arpl sub mov lods cli cmp loopne jae,pt movb mov adc and pop in sub in mov and inc mov addl xchg loop sbb enter sub cltd js les shlb ljmp cmp movsl das jp js ret dec ret fdivrs mov mov mov mov clc jno inc popa xchg jle xor adc daa gs mov das jl pop (bad) iret xchg add push mov imul fstps stos inc hlt push xchg xchg stos add int3 xchg dec xor jae sub movsb lret js mov (bad) push mov sahf sub into adc popf dec push movsb lcall out ljmp inc pusha mov jnp xor adc pop jg,pn pop jae popl sti push (bad) ficoml push (bad) fnop sbb cmpl in add jp addb rcrb inc cmp mov sub imul add mov dec lret pop xor fidivrl stc (bad) jno sub lahf and cmc iret cmp js mov cmp mov cltd roll aam dec push gs pop (bad) adc jne mov lods das int cmp stos iret jl push pop jbe mov jne ljmp fild pop jg ss mov popf ret and into sbb orl jg mov mov xchg lea imul mov sub adc jp adc fcomps pop mov dec (bad) out sub add jp sbb movsl out xchg cld pop or lahf nop jp and xorl nop jmp repnz jnp push aad sahf lcall or add jp stos sub xchg xchg jp jbe data16 pop cmp lea xchg jmp (bad) out in ja mov fnstsw jp fldt add scas (bad) into push (bad) into mov xorb xor jnp xor xchg mov pop jl jbe inc xor mov loopne push shrl stos mov jno mov int3 sahf fs push xchg fcoml xorb xchg test lods in xor cmp mov (bad) fcoml sbb push gs pop add jecxz inc call in adcb mov stos orl and adc jmp xor sbb dec or push fstpl xchg jp mov insb inc sbb mov push sub (bad) jp sbb pop or test jmp dec jne movsb dec pushw mov test sbb ja adc push mov mov push inc jae iret fs bound movsb mov pop inc adcl stos dec pop repnz xor rep sub jp sbb cmp push pop pop int jae mov push lcall je clc add xor jp ljmp add sti gs sub pop jle lahf into loope hlt outsl setg scas inc cmp sub xor mov hlt sarb add orb fstpt aas daa xchg cwtl sbb mov adc cmc xchg icebp mov push ljmp rolb dec sahf iret mov cmpsb jp pop ficoml outsb jp (bad) mov aad sbb ja xor lock adc xor or mov lods sub jno pushf testl out lret or fdivrl inc adc cli sub daa fisttpl add jp rorb mov sbb sarb and and push pop jp xchg jl mov ss mov jp int gs cmpsl mov pop push mov outsl fwait sbb jne aad xchg lods (bad) es jp rcl stc pop imul lods test (bad) jne pop pop inc into or push shlb jmp jp insl lds loope jo loopne ret popf jg mov pop cmp dec in adc (bad) cli idiv in lds cmc xlat cmc sbb jnp xor ljmp test push xchg inc lods dec rol or sti arpl jae pop xchg push mov sub cli xor mov pop fstps mov push inc scas js (bad) xor std cmp dec call xchg and into sbb jae out jp popa mov loop icebp mov je add iret sub mov jno lret lret imul les ljmp jne jo daa add dec mov jp pop adc sbb sbb outsl (bad) and dec imul cmp fs sbb push imul les xlat pop (bad) add jl iret jmp xor mov jge flds sub push dec and mov pop jge mov jne mov dec out test test mov or sti (bad) nop cwtl sbb lea ss jb mov inc push lods inc (bad) mov push outsb jne xchg adc or mov dec sbb into test jl add mov sbb mov push mov mov push xor cmp mov movsb mov mov outsb adc leave test jno push mov jge jnp adc repnz jp sbb lret push lds sbb mov jp add in dec mov dec xchg sub out sub jge popf xchg aaa mov jecxz jl jp cltd mov ret imul jg add xlat popa sti shrb mov adc es pop stos repnz stos dec mov insb outsb out lret bound dec pop xchg mov mov repz fwait push insl sbb dec mov mov daa mov fwait jl (bad) xchg mov push insl or and jo movsb jg cmp scas pop mov ret dec stos xor xor mov or xchg insb dec mov push and lock pop sbb lret cli mov cmp mov and xchg xchg mov inc lods jmp mov repz dec aad ds ss mov arpl mov out mov rclb jge test into lret mov adc add push cld adc mov sahf cmp int movsb call mov and pop xchg inc jnp pusha ret aam outsl cld inc test cmp pop in das jno add imul jge cltd add (bad) ljmp dec mov ja aam lret stos dec fistpll stos frstor jno xor add enter call cmp dec pop jb fisubrl mov xchg inc jbe scas or popa mov jle push cmp movsb mov aaa add inc jmp push cli mov icebp pop inc lcall mov (bad) jg (bad) jle xchg mov aad cs popa (bad) pop mov notb mov mov add cmpsl gs movsb cmp jae push js mov sbb dec stos addr16 mov lret fcmovnu sub add int sti inc sahf jb jmp adc sub leave adc jecxz push xchg cmpsl lods and loop hlt in imul stc cmp xchg or inc ss out ljmp and dec lock std cmp aad cmp mov mov inc or fs mull mov cltd or cmp cmp pop xchg clc les insb testl ret clc ja in mov cmp loop pop repz and xchg fcmovnbe inc jmp fs test inc sbb sbb inc pusha push (bad) cltd in jbe jge imul jl inc je sub lcall dec and cwtl decb ret dec sbb jp aad mov in ret mov xchg xchg jp in fstl mov lock mov fxch pop jne ds add mov sub push sub push cmpsb sti inc arpl xchg inc fdivrl and mov psubsw inc xor insb dec and stos movsb (bad) lea xor adc or imul xchg mov xorl pop mov arpl fs imul xchg mov lahf fidivrl and inc or push add lds out pop sbb dec leave fimull and les popf and or ret pushf (bad) in movsl cld mov imul sbb mov gs mov insb and (bad) mov pusha loop pop xor cmc jbe cli (bad) test cmpsb insl pushf adc cld lret call add lahf jp push adc movsl imull jp enter pop ret mov popa push (bad) call xchg pop inc xchg sbb mov cmpsb or push add jnp iret imul xchg mov lds add pusha mov movsl dec stos mov and dec inc xor push cwtl aas lods hlt sbb lret pop jo jg cmc nop mov mov insl xchg movsb popa xchg jnp sbb mov push out mov dec dec lock inc or xchg pop popa stos outsb push addr16 mov cwtl jno add cld jmp mov cld fldt repz repz fdivs mov mov xchg push jmp xor push je pop fs and mov dec and cmp shll stos jmp bound sub in xor pop cmpsl push (bad) sub push mov shrb jne pop jbe enter stos fcomi out in stos jne in aam xchg repz push mov jae out insl adc outsl pop out scas scas push outsl jae inc movsb sub loop ljmp insl push (bad) mov adc daa int insl test repnz lret xchg pop mov jne fs inc pop mov int jo xor add or push dec inc adc cmpsb mov cmp je xchg (bad) pop jns xor movsl (bad) push dec jae enter outsb pop cmp mov cmp cltd pop int3 or fs jmp (bad) fild cs push imul ss xor and jl mov sbb sbb cli mov pop dec scas int sbb push push aam rcrb in in popl clc sub jo roll popa pusha fs movsl into mov into adc ja or daa push add movsb sbb mov (bad) les push jmp lret adc arpl shll test in lret aaa push jl,pn pop sub data16 cmc pop outsl out in jge pop and std xor idivl aam or das pushl inc adc push pushf pop sahf js or fptan lahf xor aas imul (bad) mov ja lret inc jp (bad) pop mov sub addr16 mov xchg iret mov push sbb sub lahf xorl mov push cmpb pop enter pop lcall out xchg xor xorl and jp push popf or test mov in jp push push in into mov jl mov ljmp mov hlt jp dec ljmp insl test or mov pop movsb push add jne lock pop and mov mov mov andl aaa push pop push xor and dec call push jp sub push inc mov cmp incb xchg and jnp in jmp jno add lcall ret lret aaa jp cltd insb adc mov inc (bad) push jp dec (bad) jne or add sub repz out cmc xchg jmp loopne insb jnp xchg out into movsb insl std sub orb inc jge or mov test cmpsl dec int3 jg cmpsb insl hlt dec jmp and sti jle dec sbb and adcl ret sub inc jp out imul int3 dec sbb das in jge mov mov mov inc sbb insb (bad) mov fidivl aas pop fyl2x sbb rcrl inc imul xor fwait push jp les cmpsb popf push jmp movsl xor stc xor add psubb shlb pushf and aas sub inc sti bound popf cmp jne xor inc adc imul loopne jno out ljmp xchg (bad) mov xchg xor pop fnop outsl and jmp push mov cmpsb xor lcall jecxz adc (bad) movsb jbe jno adc jno mov cmpsb mov dec nop push js pop ret ljmp nop or sti mov dec sahf aam mov out inc negl inc pop adc lret fnstcw sub dec jp sti jl fwait push xchg and das mov fildll jmp mov jno ja es std xor fiaddl ds push xchg push testl xor pop cmp fstps (bad) (bad) jp pushf movsl mov and addr16 lock pusha (bad) mov ljmp in lcall rclb jae pop (bad) lcall lea and inc cmpsl and xchg mov cmpl push dec xchg jbe cmpsb lock or push loope mov imul fistl pop jp and add loope std inc pushl sbb shr stos sbb jp outsb push push and and cmp outsb lods push inc xor adc pop das xor jne (bad) xchg push mov pop mov addr16 or xchg xor js sub jp mov jmp jb enter mov mov sub int3 mov lea jp fnstcw fdivrl push loop mov mov push popa adc mov jp outsl cmp xchg lret cli fdivl jge (bad) insl pop fisttpll data16 (bad) cmp loop xor xchg (bad) push inc mov mov repz outsb jns and mov jne mov (bad) xlat sbb or loope loopne pop pop lock add pop jnp xor (bad) mov add test iret add repnz xchg xchg jne push in imul mov pop frstor jmp jp shl mov jmp push jnp mov sub cmpsb mov ds insb mov mov push jns fnstenv xchg push aaa shll mov adc push movsb icebp inc cmp push fsts sub leave jno and pop int cld scas cmp or jecxz cwtl jp pop cltd xor arpl add jo inc sbb mov add sbb daa sbb ret popa gs or shlb jp jbe push popf jg lret xor cmp out scas sbb dec (bad) insl sub or push sbb fs stos pushf jno cmp in inc jne cltd inc lds fwait xor jp lret mov jp ja and dec push sbb gs push ljmp sub int3 jp ficomp jecxz jl mov testb lea test or mov fisttpl aas in out sbb push dec out lret mov movsl pop es arpl dec daa adc aas iret pop insl push pop pop jnp shl insl fsubr push inc sbb fistp int add (bad) jnp (bad) cli loop repnz mov das sbb jp fstps test out cmpsb gs jp leave sub (bad) jp add pop add subb (bad) mov or cli add andl jns cld jp in lahf xchg pop push sub push jmp movsb push push movsl dec and sub cld jbe test (bad) clc jp push movl add push das enter xchg out inc mov and sahf stc mov test jg inc push daa divb popf leave and jp push jmp int xchg pop sbb sbb inc and cmp adc sahf data16 into xchg jp jae cld fsts add sbb cmp xchg arpl jle mov test or pop repz sub out jp inc insl and mov scas add push lock jne xchg jp inc movsl cmp dec popf aas dec mov in jp adc dec aad repnz dec ljmp jg mov dec call mov pop enter jp cmpsb (bad) mov mov out adc push mov lret shrb add popa and cmpb mov ret dec lret mov lret jno pop (bad) jle out mov repnz pop fsubrs enter add adc push jae das add data16 nop and sahf jne shlb sti xor (bad) call cmc cld or stos lcall fwait idivl mov dec mov movsb fwait clc test jp in outsb inc mov hlt jnp add push inc jl stos mov and loopne push (bad) icebp clc (bad) sub (bad) and fcoms mov notb inc mov pop and sbb int3 add mov test sbb sub lret insl cmpsl push mov push sbb out jp arpl shrb mov jne out sub in gs jp repz and nop and add and mov jp (bad) push outsb inc xor lret das jmp (bad) jp adc mov sbb insb xchg jp outsl rol jne cmp sub xchg sti mov add scas push inc out enter jle lret cwtl sbb push cli cmpsl pushf (bad) xor sbb adc outsl mov sbb mov or jne mov push add pop ljmp inc add pop cmp pop add mov pushl sarb les aad push mov inc cmp push mov (bad) mov push fimull sub sti gs mov and hlt addr16 daa jle loop mov subl aas inc js (bad) out mov fs jo dec in cmp cmp ja hlt lds rolb jp sarl sbbb xchg repz pop (bad) ss xor inc inc mov pushf jbe jnp or stos push push inc lock cmp (bad) int (bad) cmp insl lods test in std mov outsl clc out mov and xor fidivrl lcall jp xorb mov jp add xor test mov cmp lea in add jne out call sti add cmp stc jno xlat inc aad sarl icebp add inc jnp mov jno cmpb jp into jmp jb add out mov lods cmp dec clc mov (bad) dec test test xor push ja and std and pop inc mov enter pop or cmpsl rcll (bad) jne mov call cld jp movsb xchg scas test xchg or cmp jp inc dec cwtl xchg xchg fwait jp repz ja int3 imul add jp popf (bad) hlt dec ljmp jmp cmpsb pop fdivr cli mov mov lods inc fbstp dec pop pop pusha pop mov pop and mov (bad) popf ja stos into mov inc divl outsb lret adc adc lcall loop mov jp sbb add (bad) fdivs and mov popa shl cmp jo addl ja xchg fdivl enter je addr16 or push stos pop sbb inc ds je lcall js iret (bad) dec cli xchg xchg arpl add aas ficomp mov and dec lea sti (bad) lods jle jbe jp cmpsb adc push scas ja loop mulb mov mov jnp lock push test add mov push and add in push out inc outsl mov fidivl jecxz sbb imul xchg fnstcw sub fs insl (bad) repz mov out (bad) add dec sbb fbstp gs lock js imul mov pusha sub ja ds stos pop movsb (bad) mov test gs cmp stos lds test mov jnp lods pop out sahf daa jg dec shrb mov jle dec mov pop gs push and sbb jle out xchg (bad) addr16 imul pop push cld fst popa test jl cwtl sub cmc jnp sbbl iret mov add and xchg push mov push stos gs cmp adc stc loope push js sub jne jae cmc mov pop mov jns dec mov stos or rorb push fdivp jno loope pop xchg mov cld addr16 push popf (bad) mov fbstp mov (bad) and pop fisubr or push js mov lret or stos jne adc inc call inc imul jp push fildl and add jo sbb stc das in add ret insb ljmp lods fstp pop loop mov in clc pusha push test mov imul jne ficomp mov fcmovbe out xor mov mov jp xchg mov dec iret test test xchg mov ja notb into sub std push jnp loope push sti jp out pop pop adc call adc pop imul and sbb and or add fdivp add xchg aad into jne fmuls std xchg rclb xor popa lcall pop pop (bad) lock push pop clc pop sbb jne stos cmp inc mov jp add mov les jp mov mov aas jne xchg mov test or jp fist dec ja cltd jecxz (bad) repz jg (bad) cmp dec das ljmp mov and test les (bad) cwtl cwtl insl push push repnz cmpsb cli sub or jp sbb jb outsb and lcall sbb jp sbb js (bad) xchg loop out stc inc leave jnp pop jb mov and mov (bad) ffreep or add outsl aas lods or adc pop dec fild push sub sbb mov imull pop in pop xorl ds out adc cli or inc sbb xchg jp out lds daa mov sahf bndldx clc cmp pusha testl adc das stos js (bad) sub mov sbb or pop lret stos pop cmovs (bad) out outsb cmp repnz sub push sarb xchg mov in test rorb and sahf aad push dec jp sub int push cwtl in idivl dec inc aad cli push shrl fistl loope (bad) imul fwait pop insl (bad) mov or loope out in cwtl jp ret and inc xor aas jp xor or cmpsb stc xchg ds xchg test lcall sub cmp jp cmpsl pop lahf jns sbb jp xchg push jecxz push loope dec push push mov jns movsl scas test outsl cmp xchg jle fist xchg gs imul xchg add jp inc ret lods inc cld dec cli fcompl pop and push sub push popa daa cmp jnp aaa push jge sti popf jl and sub lea orl scas imul test stos jo mov (bad) (bad) mov ja pusha movsb fisub mov enter jno aad shr jne jle mov sbb xor jne arpl fidivl xchg cmp cli jge out repnz gs fstl mov add mov cltd fprem shll xor ss stos jns (bad) repz cmpsb pop ret fdivrp pop adc jnp loopne xchg dec clc jne inc ss cmp pusha loopne inc sbbl loope dec iret dec xchg adc lock scas mov cmp lret add or jne hlt dec movsb dec add xor outsl jmp fsubrl adc nop jae ja or mov inc push cmp inc fs jg rolb cld bnd jp pop ret mov stos jp movsl add lods jp push xlat mov jp clc fs lahf sbb pop scas jmp jge adc cli rcl jp push cmp jg cltd dec (bad) in xor mov int3 jmp pop fmuls sbb sbb jno inc (bad) aaa sbb fwait daa jmp mov fs push xor mov xchg sbb dec sti pop arpl repnz sub jnp jnp or andl (bad) dec imul pusha push sbb mov cwtl aaa sub mov jl jno push gs je outsb adc or dec mov movsb (bad) fisttpl xchg or gs pop ret adc pop sbb pop nop pop in gs (bad) out mov pxor insl jp out clc mov in sbb xchg pop mov mov jne sub pusha pusha sbb addr16 iret pop jne mov ds dec xchg jle icebp push jp cli inc stos (bad) es xchg cmp mov xchg xchg in repnz (bad) push sub scas xchg cli jecxz push xor popf push dec sahf push xchg lods and jnp fwait pop mov je push add fadds and xor mov popf les outsl lock pop xrelease jmp std (bad) xchg sbb jp pop ret adc pushl adc lods test pusha push shll jecxz (bad) mov lahf pop fcmovu adc sbb xor mov xchg inc and subl adc add fcmovu jecxz jp scas cmp sbb xor jne ret rcl fstpl cmpsb shrb cli js add push push xor sti and shrl mov das inc aaa dec retw pop xchg ss leave lret cmpsl dec fs lcall xchg pusha imul jp cmpsl js inc insl jne jno into test in xlat enter outsl je push jp fsubl push sub mov push aas jno inc mov or jne fldcw mov push test pop jp push arpl pop cmpl xchg add mov repnz fldl add in insl inc mov mov (bad) mov push loope sbb sub imul sub pop js cmp jge dec or shrl stos outsl movsb mov dec push xchg inc movsb mov stos js inc loope (bad) (bad) push movsb jb shr fildl jg aad xor push jbe test add and adc aaa movsb fist sub xchg push icebp addb lods xchg shr (bad) jl inc (bad) mov ss jmp jae (bad) out ja push cmp dec mov push (bad) xor lahf stos dec jl outsl adc (bad) fchs adc int push push lds loope sub inc cmp aas jae ljmp nop cmc jb ret jp jnp inc gs push imul adc xchg sbb arpl dec jge dec sub imul mov cmp call mov jo movsb std push jae loopne sti add xor adc jp adc push pop out test (bad) and rcr (bad) out outsb mov stos std cmp sub gs jmp pop sti mov leave jne cmp or jnp divl nop cmp inc jno mov mov jg shrl sbbb xor pusha daa adc mov int3 leave jp push test mov pushf cmc sbb cmp dec pop fs ret jnp xchg jns gs xor cmc mov fcoml pop popa pop push lahf sbb sahf sbb cmp mov mov cli push or inc mov pop sahf mov sub sbb ficom cmpsl mov bound insl push mov add jp nop lods jno repnz dec jne xor std (bad) sti push (bad) int insl cmp scas push fisubl jnp xor jne stc pop mov xor mov aam aas inc jo add dec jp adc loopne dec outsl (bad) cmp test inc ret hlt std fbld jne mov test dec xchg adc and int3 in cli sub and mov jne dec cmpsb sub adc adc sub hlt fs aas shlb jp add cmp cmp xor cmp fsqrt (bad) add push mov sti jp or into aas test xchg mov xchg xchg and sub lret push and popf push repnz pop dec (bad) add popa push iret pop out sbb pop sarb inc int3 lret xchg mov subb pop fwait sbb call sbb mov dec inc mov loop stc mov mov sbb ficoml jp popa push sub cmpsb ljmp jl aas imul jp popf dec imul test sahf jns pop mov sbb sbb dec test sbb mov aas pushf mov lret jle xor jp lret int adc mov imul cmp mov cld add icebp cwtl ljmp (bad) out mov jp xorl dec popa xlat (bad) cmp push jae jg xchg pop jp xor or test jp push popf mov pop adc cld (bad) dec call or dec mov enter jl jno pop fbstp int out mov cmpsb xchg xchg out xor fldt cltd xchg stos dec mov fbld loope ret je addr16 xchg dec jb sub add adc jo mov xchg jp jnp sbb mov ficompl push xbegin xchg ja repnz fstps push es add push jnp xlat (bad) xor xorb add pop lds push sbb and push push outsb test pop lcall jno xchg pushf iret mov add cltd cmp jle pop bound mov dec leave or pop stc push mov or lea xor bts fcompl mov inc insb ret (bad) dec gs dec addr16 and push and jl stos mov leave movsb dec lret pop pop cmp xchg and fimul and mov and ljmp jb push scas jnp or adc test js pop into cwtl push adc push jp ds or pop ljmp imul sub jb ret mov pop fcomp pop mov shlb mov mov jnp loopne jmp mov push add adc jnp in cmp cmp icebp rcll fwait mov test push and inc dec sbb sub mov (bad) mov sbb cwtl sti sti jge push xchg negb dec (bad) aad cmp dec xchg push mov jp jge pop xor jne inc pushf sbb sbb insl cli inc mov sbb add ficom jp in (bad) (bad) fdivs movsl fildl mov (bad) sbb jp rclb jns fisttpll pop mov ficompl sahf fldenv pushf adc lds inc in inc add jb rol bound (bad) jecxz mov clc cmp ja xchg fsubrs mov mov push jp hlt jge daa sarl pop push iret std or jp jb int mov (bad) dec rorl xchg jp and jp mov xor cli mov cmp leave jp test mov ss jbe sbb stos mov xchg test mov xchg jb inc loopne xchg jp jne cs push xchg mov popf sub loop lcall pop jp imul mov jb fsubr xchg scas lds mov xchg bound xchg fbstp insb sbb mov scas out stos bound mov cli repnz pop add push imul mov int3 cmpsl push mov mov ja cwtl xchg mov inc sbb adc sub adc xlat mov rorl xchg and mov dec imul add sbb mov dec jne jae sub lahf mov sbb leave push je jp,pt sub adc push data16 out xor sti or loope movsb (bad) xor inc stos mov push push xchg (bad) (bad) vucomisd jp pop adc inc jno leave or inc xchg dec stos mov or lods nop push call aaa inc push fdivr js std iret sahf mov aam scas fadd mov cmp mov adc jle cmp lds pop xchg stos cmpsl mov sahf fistp mov stos imul lea stos lret outsl and jbe push push outsb push imull movsb cmp mov fidivr adc lods ja cmp xor stos cmp xor hlt add scas jp mov sti push movsb test or dec dec aam mov dec mov pop push repnz fwait push movsb mov dec leave pop enter pop sbb cmpl std jns js icebp xor mov and jecxz and fwait insl jle test or movsl jno inc dec mov mov mov mov scas out jne and sti ds xor sub jle push loope mov in movsb adc scas cld stos leave gs pop inc cli pop mov or cmpsb dec sti sub dec and jge inc out stos lret push stc cld ss test aaa sarl dec sub ja mov inc jne push fcomps pop xchg insl dec in in xchg mov cmp ja push mov xor aas stc shrl mov mov jp mov in sbb lcall dec sbb push shll jnp pop jp (bad) xor rcrb ret lock mov mov jnp stos out mov jp push dec es clc cli dec outsb or jo test cmp adc mov dec fwait inc rorl mov xlat cmp sub xor (bad) cli adc aad lret scas mov adc cmp pop ficoml jp mov pop clc das mov jne push loopne pop mov mov mov jmp mov sarb inc mov jp ljmp cmp pop jp lds dec jp mov push cmp pop adc test jp jmp ficoml push inc out dec das std xchg jp fnsave (bad) clc mov in pop test mov mov scas aas mov or pop add addb ret mov cmp and (bad) jne (bad) aam mov pop sbb mov sub and icebp movsl jp xchg push and cmpsl mov insb lods mov mov das test mov pop sub lock mov jmp aam push (bad) sbb ret cmpl jp icebp pop sbb stc xor sbb mov pop pop mov jl jp xlat mov sahf js push scas test fisubl sti (bad) cmpsl dec jnp das icebp xorl inc mov rorl and lcall wbinvd xchg loope mov lret pop push and push js sub stos fisubrl ja push dec cwtl jge mov cld fsubrp xchg cltd adc xor push dec icebp cmp push jp loop test ret jno repz jp cmp push cli mull stos rdtsc jae pop pop xor ja xchg mov inc xor sub jne mov mov cli mov inc fdivs out loope or jge aam (bad) mov xor fnstcw inc sub inc cs sbb xchg mov jge add fnsave dec ljmp cmp repz (bad) jmp fistpll cmc sbb jmp push test jge popa sub divl out mov adc mov xlat or gs jmp cli xchg stos ret lahf jp xchg pop xor sub jle dec mov xor imul sub stos ss jno cli jecxz arpl sbb gs ja out jnp push mov and mov cli mov into sub popa ss push mov or (bad) gs das jbe xchg sahf jp mov fistpl jl (bad) dec (bad) jmp lret mov lea ficoml hlt jp clc pop xchg inc scas or jp adc xor jp sub push add jne mov insl inc lahf mov dec ja or adc jmp out mul (bad) gs enter test jge imul (bad) sbb adc in or jp xchg (bad) sbb add mov aam add jmp pop sbb push mov or dec in mov sbb adc jnp jp test cmpsl jne jb add iret ljmp cmp lret push add sti out in outsl cli or jo xchg fnstsw mov ficomp repnz fidivl movsb (bad) jbe jne fwait mov stos rcrl inc in jnp (bad) inc cwtl pushf cmp add mov inc stos xor xor pop mov add cmp cmp les fs (bad) out fwait es inc pop pop add cli or jno pop leave enter jnp or and repnz cltd mov imul sbbl int3 inc bound clc xchg xchg inc dec push out add jb movsb inc popl rcrb and mov ja jne test shrb dec outsl lret ret mov cs imul (bad) rcrb jp movsb xchg clc sti add pop jb js dec mov movsb mov lods test ljmp mov inc mov xchg enter inc jae mov or mov cmp clc pop jle fisubl adc dec hlt (bad) pop inc jae cmp imul xor jo repnz bswap jae out mov mov movsb sub inc mov enter jae adc sbb jb xchg mov ret add mov mov dec stos cld fbld or push aam imul sbb xchg outsl jne (bad) imul mov mov sbb cmp fstpt stos inc in mov pusha mov push mov sbb movsb pop xchg fs lds xor lret pop fisttpl jge iret sub stos movsl adc jmp ja jecxz push sbb daa jb lcallw and or mov xchg arpl jns out xor push scas mov ret jp bound fcompl imul shlb xchg lahf adc pop push jne add and sub pushf push or in fadds cmp pop aas (bad) in cltd mov xor ficoml mov jp fs jne mov cwtl (bad) in push or jp (bad) ja xor mov cmc and jnp sti andl mov sub in insl cmp xchg cli cmc nop and imul in in inc jp ret pushf repz nop cmp lods cli ret lock inc sub (bad) xchg or rcr push mov inc xor adc outsb pop notl mov cmp in dec iret cmp cmc mov cli ds outsb mov fnsave pcmpgtw sbb scas mov mov and mov push aas mov jp,pt sub jg sub sbb iret inc lods loopne cli fs xlat xchg mov movsb stc js fldenv and xorl jle iret jo jae cmp sbb je shrl cli pop pop add pop gs stos push cmp stos xchg or sub jmp cmp inc xlat pop clc lods (bad) icebp fwait cwtl jae cmpsb xor mov mov or push std mov and fcom andl push sub je lea jp ljmp sbb mov cli mov sbb sti gs pop sbb jno xchg pushf int3 out lods push cld jp jl inc dec out jne adc push stos jo jp je jmp pop sub mov cli ror mov jp push adc jmp jge adc fcmovu xchg and out inc jp lahf jns movsl lret gs data16 mov cs mov std idivl das lea icebp mov outsb push push fstpl dec jl ficomp xchg push mov xchg jbe or sub jmp imul arpl xlat lods inc sub sub mov pop inc mov cld jo test sbb cmp dec gs inc pop sahf int ss movsb aam pop ja or je pusha add push dec call cwtl int test fs (bad) in inc int3 inc out mov fs movsb push push cli dec or sbb shlb lods rcrb xchg ja gs mov hlt pop mov add negb in and xchg or andl add or aaa hlt test jo cld cmp push mov lock jle fsts (bad) dec jp in or cmp ror insl add stos sub repnz ljmp inc pop or js (bad) gs dec popa out shll jne sub add aaa arpl mov fisubr int ja adc add in and loopne,pt fcoml (bad) and ja in cs inc mov mov and mov fwait mov mov sbb inc out pop adc jp ret sarl mov lods add and jne mov popf mov in jae xlat jp ret data16 cmp pop sahf adc jp (bad) aam popf push test mov cli pop movsl fwait add xchg dec xorl stos and in fwait daa push int3 (bad) xor repz popf (bad) jp or pop mov rcll jecxz inc pop xchg jp cmp iret stos lea xlat mov cmp into inc push sub xor mov call jge push int3 hlt mov jae movsb pop je (bad) push int repz xlat xor mov outsl mov lods ror jp inc sub pusha inc xchg sub scas adc cmp cmp sub push push adc je in mov dec xlat mov (bad) stos das rol cltd push mov lret or (bad) data16 jnp fs movsb dec and xchg ljmp xchg (bad) sarb xchg data16 and sbb in pop out dec roll pop cmp movsl repz or xchg and js push pushf fsts cli inc das or jae insl dec adc cmpsb cli aaa sbb shrl (bad) (bad) xlat insb jns (bad) mov dec insl cmpsl cld es xor outsb lods pop jno imul das and scas arpl movsb jp (bad) jmp mov lret hlt repnz stos mov mov sub in out cmp jae mov ss mov or add bound fs push xchg sbb xchg into jl add loopne loope dec jp inc cmpsl cmpl sarl out lcall pop mov jnp stos mov bnd aad mov ret push daa jne and jnp imul mov repnz ret int3 jae (bad) sub leave jmp (bad) das sbb inc xor clc mov jae sahf push (bad) jnp sti mov mov (bad) xor jb stc mov pop xchg push jne aaa add cli ds repnz cmp jp cmp in iret add aas adc cmp push sbb lods cmp jp mov mov jne mov or inc jp mov jmp mov aaa add cmp inc mov push pop hlt hlt jne (bad) jnp popa xchg and push sbb pushf sbb inc jns or in sbb sahf pusha bound and dec sarl or jne hlt mov movsb call jne and jp les jnp insl xchg or sahf icebp imul int stos mov xor popa repnz pop push pop and xchg imul sub inc pop mov ret sahf dec or mov sub dec sbb dec push mov xchg popl sbb imul cwtl bound jl lock add mov popa jb cld andl inc pop xor imul xor int push cmp jnp mov mov imul movsb stos insl js push ss std arpl popl dec ljmp jecxz lea cmp pop aaa rcll mov sbb orl (bad) icebp in mov out xlat scas dec movsb clc jecxz and (bad) push or add in popa jl push ss pop xlat movsb adc (bad) jno add cmc sub cltd xchg lcall jbe ret xlat jne ret jl stos es loope jp inc pop and bound cmpsl xchg aas shll imul js push (bad) movb movsb pusha popf xchg push mov bound inc pop notb dec test sbb lds pop scas pop xchg cmp jnp rcrb fnstenv stos data16 mov stos xchg push dec popl jne movsb int imull (bad) cmp jo loope xchg movsb mov jae mov out or cmpsl repz cmp pop rorb ret lock movsl (bad) cld je add lret aam jg sbb pop jp sub rclb xchg stos lret mov ja mov ret mov testb xor cld jp data16 or dec jp mov mov mov imul leave mov popf xchg adc jp stos enter popa shl pop and xchg lcall cmp sti cmp cs mov jo push rcll in push sbb lret cmp idivl or mulb out jae cltd sbb in cli ljmp icebp data16 (bad) sbb inc cmc push (bad) jge xchg insl int3 adc xorl push xchg cmp sub roll data16 cmp aas push add out arpl jp lods xor (bad) jp inc enter jb insl inc xchg loope jecxz mov (bad) jp (bad) lret scas sub dec sub nop inc std jne repnz stos fisttpl ljmp iret je add ja addr16 pop jge pop decl dec fdivrl lods test pop jb cwtl mov fs lret sbb loopne inc mov bnd jp sbb and test addr16 scas (bad) push lcall mov jns mov adc cmp jne bound cld jmp push lret jns dec scas mov or adc xchg cmp shlb gs jb dec sub ljmp xor xor fdivrs lea int3 (bad) dec jp cwtl dec call in into pop adc jp mov pop jmp add fdivl cmc leave push push jl jbe mov jnp ljmp fwait (bad) jg iret mov cld js pop aas movsb jns cli push xchg sub xor pop aam lods cli pop xor jae into and xabort clc inc cs (bad) xchg add call jp inc dec outsl and (bad) xchg push mov and jnp addr16 sbb dec loope repz nop fnop dec out or and dec shr add or es dec popa cmp cmp mov sahf pop pop enter pop shl das cltd pop sarb rcrl test mov inc mov mov in ficom pop push sbb jle pop arpl jbe mov jl iret and enter shlb stos lcall and sub jp insb add mov pop mov xor (bad) (bad) sahf mov push jns inc jp insl push (bad) push sub and jp clc cli jne sbb jp ds add lea icebp js addl mov pop lock fldenv mov js xchg cmp movsl test gs sub jge push jns mov jbe jnp icebp enter repnz and js pushf sub mov pop imul add std inc and fidivr sbbl or dec imul cwtl (bad) jne clc mov jae fstps dec pop (bad) mov sub or ss mov xor mov inc loopne or ja aam ds sub jne mov test aaa ret sbb jno inc outsb jmp fsubs (bad) repnz bound adc jbe les jl inc and sarl xchg adc jmp idivb add inc jp cmp gs arpl ss and xchg loop push push mov mov fidivl vmovd jp pop xchg sbb pop xchg out test sub dec dec jmp fnstenv icebp (bad) mov loop stos in add scas add lret (bad) es pop cmp or dec add pand inc jle jb icebp insb inc jmp jnp xchg popf in push int ljmp (bad) jnp (bad) mov mov cmpsb jne scas mov mov jo push rolb xchg ja rorb pop mov and gs clc testb cli addr16 cmc jp mov je lods in and dec jbe repz imul add mov pusha hlt jp insl les jnp stos out jnp ret clc lret rorl inc shlb sub mov movsl fnstsw mov fdivrp daa adc js add lahf add jp jo xchg push and fistl xor das mov jge ljmp leave cmp pop stos sbb fisttpl mov ja cmc enter xlat mov push cmp pop xchg push jno inc jmp dec sti movsb cwtl dec jne add and stos mov or (bad) adc mov insb hlt adc stos lea dec cmpsb xlat mov mov arpl fstpt arpl andl mov ret inc sbb stos inc ja loope add sbb sti cmove cmp gs ja mov xchg js lret lret jbe pop arpl sbb test fist (bad) inc in mov iret rcll xchg shrl xchg and stos jns pop or gs jmp sbb fs mov call sarl mov dec and ljmp mov addr16 aad mov popa pop adc mov rcrb pop jle insb adc ds pop xor stos les sbb adc cmpsb xor cmp clc xorb inc out sbb les inc aam push das (bad) and in fcomi lods js cmp movsb fldcw xchg je in fstps es adc mov gs cld mov nop lds dec mov jae add mov insl jnp mov jno movsb subl jnp movsb and insl cmp cltd clc cltd pop out inc cmp mov (bad) or movsb lcall cld push (bad) repz or push cmp mov add or push inc popf int3 popa out cld (bad) in mov ss jb mov dec fidivrl inc aad clc cmpsl sub jp lods cmpsb xchg fstps ss pop je aaa (bad) rolb pop jmp mov stc fisttpl xchg mov je push in jns mov test xchg cmp lds loopne jp test rcrb add es push fucomp or pop cmp xchg stc add cmpsb mov leave inc adc cmp push sarb adc stos sbb jp mov rcrb popa or pcmpeqw call clc arpl popa push push push pop pop (bad) (bad) icebp inc and inc subb add icebp lret mov pop aas gs push and pop mov fsubrs xor xor xorl hlt add and mov addr16 mov add leave jo mov inc out push mov (bad) xor cwtl lret jecxz out mov stos lea (bad) fild mov test push cmpsb mov cmp call insl mov fcmovne nop mov adc xchg (bad) stos aad enter push decb jne addr16 pushf andl mov cmp ljmp jnp testb pop repz movsl jmp das pop nop imul stos push mov add repnz sub mov jp mov pop push mov movsb mov loop cwtl mov lahf lcall fdivrl jne jp arpl mov sub lret push jno jne mov nop mov loopne jg sbb sub (bad) dec pop dec orl test add loope popf dec fwait mov push and lds (bad) mov pop pop pop pop jl shll push mov jle lcall aad fcmovnu pop fmul adc push mov ret jp and daa (bad) jbe fsts jmp add data16 add js rcrl inc lock std dec in pop stos fnsave gs sarb jno shll jp xlat adc ficompl jp push jae mov cmpsb pushw xchg fwait cwtl xchg test lcall add mov addr16 and jnp arpl cmp push or movl out int inc jp call test pop xorl inc and lcall imul sub jmp xchg popf pcmpgtb jp adc xor pop pushf xchg cmp dec fs mov arpl jecxz sub test dec movsb shr mov ja mov ljmp cmpsl mov ss lcall in int outsl (bad) popa repz je inc mov jp mov cwtl hlt jne pop jo cs mov jne pop out mov test mov xchg mul sbb idivl sbb xchg mov (bad) dec lcall cltd sbb jp fwait aaa fildll push scas test inc (bad) (bad) sarl ret or jne lods add ret jno shlb mov xchg jp ds push incb loopne repz pop cwtl pusha lea jno pop ficoml out insb (bad) mov out push adc xlat pop or hlt dec pop icebp enter mov movsl ljmp mov lret cmp mov inc mov insb and sub arpl jp inc jbe cmp aas jp mov or movsb xor cmpl pop imul or mulb sbb sub mov mov and push pop popf pop icebp jno sub jp data16 lds push popf cli inc add xor mov mov hlt lds add xchg jno pop dec pop cltd sbb ljmp and into jp push mov push and or jp (bad) push mov pop (bad) mov mov pop push ret imul shll sbb jae sbb inc fdivrs inc shlb fisub and push push xor cmp mov pop sub sub xchg inc jp insb movsl cmc cld ficom sbb jp add sub sbb sbb lret std hlt ja xchg stc jp jmp jle push inc jno (bad) jp inc (bad) and pop mov dec pushf add dec idivb sub jp insl pop pushf incl jne pop mov pop push (bad) in inc cmp mov jp outsl mov (bad) xor cmpsb dec (bad) cli mov aas mov add js mov jb mov jnp repnz ja (bad) mov xchg xor cmp jb lret je inc fildl mov mov jg push lea pop in (bad) repz scas jp cmp mov mull or jnp pop outsl outsb ret in ja ja nop push lcall add cmp sub dec dec jno out leave cs mov int3 mov (bad) popa gs das xor pop push (bad) xor mov xchg sbb stos arpl ss cmp movsb outsl xchg insl jecxz mov fldenv aaa enter dec pop dec (bad) sub jno fsubrl dec cld aas movsb add push mov sub inc gs mov andl ljmp clc (bad) ss xchg or inc and adc mov mov adc sub sub (bad) jb or les stos or (bad) in sbb add jle adcl stos jno mov fcom hlt jl xor pop push pushf cmp stos test js inc cli and jae ljmp dec insl and xlat and pop push jp sbb mov cltd mov loopne stos mov stos das mov sbb and mov inc jnp push dec mov addb lcall lcall jnp xchg popf xorb jne sbb sub and mov enter pushf aad decl push xchg jp xor mov icebp add sbb xchg jno (bad) cli lcall xor fcomi cmp pop jp mov xor jg lret movsb pop cmp add (bad) stos les out mov ljmp aaa into arpl (bad) xor and loope sbb xchg cltd pop mov stos inc insb fdivl mov shll rcll cltd je aad push (bad) dec xlat enter sbb les jnp dec outsl push xchg pop outsl jno and aaa enter pop sbb int xchg fistl icebp in sti xchg stos add xor cld ret js aas iret mov add push divl (bad) out stos cld pop sub inc adc arpl jnp and fsubs push and jge ja rorb repnz in mov jmp bound fistpll push pusha jge stos pop je ja (bad) mov leave repnz cli ljmp add mov push mov cli outsb pusha fs adc lret std cmpb cli enter jp xorps sub rcrb outsl js sti xorl xchg mov mov dec test cmovg adc jp icebp aam cwtl sbb inc xor ret popa loop jae shlb cltd mov imul and sahf pop fildl push jp loop adc xchg fdivs mov in xor lock (bad) jne lahf hlt mov pop mov xchg or push dec pop sub sbb aas jno,pt out sti gs bound lea jp sub push xor enter in jge sti jns dec push sahf jp sub pop mov dec fs jae lock dec rclb xchg pusha cltd push cmc stos mov adc mov fnstsw lret pop inc cmp les mov fiadd sbb (bad) mov cmpsb xchg test bnd adc repnz aad jns fcoml jecxz nop insb (bad) (bad) lret inc imul push call jno lods mov movntq out je addr16 cltd push add inc sbb lahf jle je inc hlt movsb xchg xchg dec pop (bad) stos gs cld loope push test fnstenv push mov iret push pop shll pop sbb and aam (bad) ret add xchg shlb xor stc jae popf in fucomi sub movsb lcall xchg inc hlt insl inc fldcw sub jae bound push cmp (bad) iret rcrb fsubl xor push xor inc imul lret (bad) mov add jmp fimull addr16 xchg ss pop andl in scas outsb cs xchg sbb lock leave add out into jmp jp pop push pop or cld fidivl ss (bad) sahf sbb lock mov enter ja mov push xorb mov xor push sub fcoms fs sub mov add into roll fisttpl lret and inc inc xchg cmpsb push push jle cmp aas stos sub or push mov cmpsl in push (bad) fldl ja jno out sbb mov inc dec int sbb jecxz jle cmp push flds sbb mov mov cmp ja les hlt lds lret addr16 fwait xchg ja stos adc leave and jae or sbb mov sub loope push aam jl or add xchg addr16 sub subb mov or pop stos cld dec lea mov repz dec mov fninit lret ret sub jp stos pop aas pop and cmp je adc outsb dec movsb out lret xor das dec or ficoml sarb xor nop jmp or aas xor mov lds (bad) xor fldl sub rcl mov ja ror scas or push mov sahf xor pop inc stos xchg cltd inc cmp fwait mov out shrb xor pop push pop test jb pop fstl lcall movsb push outsl enter sbb push jb cmpsb int3 aad jae xchg add dec rcl pop push in call nop in dec ret dec lock xchg xorl roll inc sahf andb add mov ja std movb sti cmp rorb cwtl jp loopne xor sbb cmp dec jecxz nop ja push dec push pop fcmovb sub int dec outsb push cmp mov sub ljmp push mov jp roll out sarb lahf test jp xchg lahf sbb dec js mov cmpsb dec inc jp push pop ret xchg in jp fldcw fnsave push sbb mov loopne stos jp repnz sarl cmp jecxz cltd dec mov addr16 fsubrl stc adc enter gs bound mov dec js aam pop mov in clc je mov and dec mov cs push lods test or push jnp mov jp adc sarb or in jp lret pop push mov xor shll aas mov xchg scas xorb test add cli orl pop test jp nop mov insl (bad) dec stc sbb out pop and int3 jae mov aam lea jnp xor add pop movaps (bad) je cmc xchg out mov mov push ss xchg xchg cmpsb jp shrl iret mov push mov mov sbb jne ss daa xchg repnz and inc jp fsubr aad ficoml gs mov mov (bad) je lret movsl jnp aam (bad) jmp or pusha xchg fbstp sbb popw lcall xchg pop xor and pushf jle xchg arpl mov or mov cwtl inc jo int out fwait cmpsb push (bad) das sbb mov shrb mov divb test mov cmp push je int3 inc ja ficompl mov dec mov jnp pop fwait adc in movsb imul (bad) sub jne and icebp loope movsb jecxz cmpsb insl sarl push push aas es stos push push lea jmp aad pop cmp push adc aas jecxz data16 xor (bad) xor sub mov cmc add sub cltd adc push sub rcll leave in sbb out push stos repz mov pusha mov aad pop or ljmp pop repz sahf in lret fs jae jo mov scas jbe adc dec xchg cs gs pop mov pop loope in fadds (bad) imulb push jmp sti ficompl pop ja int3 inc push ljmp jae sub cltd add adc fisub in adc mov shlb aaa push out pop into popa (bad) clc push clc sub pusha sbb jne je push pop outsl (bad) (bad) mov pop add dec jbe xor andl dec movsl pop jne dec fidiv loope sbb cltd push sub mov idivb add and addr16 (bad) cmp adc mov je push mov jmp jne mov xchg mov and daa rorl iret jae std jno xlat sbb mov jne inc lods bound lods jp mov imul imul mov int3 scas xor fwait stc push push popa nop push mov aaa add sbb (bad) mov insl xchg insb push push jnp pop (bad) stos jp leave in xchg out cld mov xchg push pop push (bad) jb lret gs cmp add sti (bad) or call sub cltd sbb test rcrb cmp sub mov data16 sbb stos dec mov call push pop cmp xchg mov sub scas jae mov rorl mov jno dec pop fnstsw push repnz cmc push stc mov push clc mov call cmp mov insb cld iret frstor mov push out mov test (bad) mov mov xchg popf cltd sbb stc decb cwtl jno scas adc ljmp test je push adcb pop les jp mov orl (bad) ja fstps sub add mov inc std jno clc mov adc ja jg xchg rcr jnp iret lahf jns jp adc test cli cmp or pusha push ss pushf xchg sti mov (bad) aas icebp jge and sub loopne (bad) sti pop out loop cmpsl cltd mov or pop mov addr16 in pop mov test push push lods arpl sbb add adcb ret les stos pop sbb lret jne mov lods mov mov je inc mov fimul hlt stos lock xchg cli push rcrb cmp lds pusha movaps (bad) pusha jno inc and rcrb push jns imul inc mov ja stos adc xchg idivb mov pop ja out add push clc test je pop int3 adc mov or pop xchg arpl dec cmpsb incb dec add inc lods arpl cmpsb sub fnop aaa cmpsb push lea ja test sub mov mov add int3 lcall jl cwtl adc test inc gs xchg sti movl and or fsubrl xchg or mov lahf sbbl and gs dec sub cmp lods iret aam cmpb popa ja shr dec mov jmp js popa cmp push jecxz dec sahf jno,pn pop jae xor ret and leave sbb xchg test mov and push pop scas fs insl shrb xor cmp lret int (bad) shll add sub mov stos xchg push sbb sbb xchg testb test inc jge sub xor imul push cmpsb add ljmp jbe outsl pop jne push xchg or sub mov enter push add fucompp enter mov and cwtl fsubs mov mov jne or test mov js cmp in mov addl jbe adc sbb cld fcmovnu jecxz xor outsl jp lret push fs add mov jl push jp rcrb dec sub dec push jnp ret ds ljmp jle jge sbb add or stc das mov subl sbb or inc daa fwait jge aad hlt inc or xchg (bad) jp adc shl outsl mov mov push push sub xor arpl dec loope mov (bad) insl rcr cmp fwait movsl popa mov lock sahf cmp mov ja jmp mov adc xor rcll fnstenv mov in test outsl xchg insl out aad sbb je or loope xor lcall cmp out fidivr xchg add cli push out pop xchg dec jne,pt pop icebp loope jbe stc lcall and push or pop stos mov (bad) sub int shll push int3 (bad) mov mov loop sbb xor jp sub imul dec jp sarl mov aas pop imul fs sti mov cmp cs das mull je movaps js jl sbb mov jp cld and and pop or xor fstpt ljmp ret clc cmp adc jp mov mov mov and out clc lret ja sbb clc xor out paddsb cld ficomp gs (bad) jnp ljmp sub (bad) and hlt ja out push fisub jo ss testl js cli xlat xchg pop jp adc mov jp iret call pop jno pop fist push jno sub outsb adc int (bad) xchg cmp adc cmpl lea mov dec mov jnp or inc jp addr16 idivb jp outsb lcall in add cmp mov xchg pop aas ja nop icebp mov enter and jle pop cwtl stos xchg dec sub cmc js adc jno or test sub insb jnp nop xchg fcoml sbb je fcmove jge mov add xchg hlt dec jle add mov jo mov (bad) iret movsb std cmp out shrb sbb mov fst mov jb cwtl cmc fdiv (bad) js xchg shlb jp dec mov incl jmp stos pop fisttp jp iret inc jo scas sub outsb inc (bad) jae repz inc (bad) jnp lahf in mov lret mov inc sbb cwtl gs outsl shrb mov pop mov jp fistpll gs aad sti jns adc xchg int ja adc mov jp sbb inc adc pop sbb in sti into push sub push jno jnp pop dec mov inc (bad) enter arpl jp psubsw jbe in jp dec stos aaa ret iret xor cmpsb (bad) popf xchg in rorb stc js jmp fsubr jg das fstl mov icebp subl mov lea ffreep cmp (bad) (bad) cmp cli lahf fistpl rcr pop cmp xchg push clc sti (bad) bnd dec std push pusha jp cltd add push pop add sbb xchg sbb jge test fistpl mov jne jno fsubrs imul sbb lock dec cmpb or ss sub popa in out xchg mov scas mov push int jnp mov xchg sub cli push xor iret stos pmulhw lcall xor push adc ja imul push sahf push and pop out lcall movsb (bad) mov jg pop aaa inc jge pop xchg jo jno (bad) out mov (bad) stos test mov sub cmp fldenv adc jb pushf xchg push xor pop lahf push test push icebp sbb movsb adc mov scas loop std aam into mov jae inc (bad) in or cmp aas lret push std leave cld pushf mov insl ret xchg push ret clc aam je sbb jge mov jne ret sub (bad) jmp jecxz push jp loope sub push (bad) sbb adc push or push idivl dec jmp insl loop mov inc (bad) jg lahf stos popl push push lea jp or add jle aam das xchg clc sub (bad) sti mov lods popa popa sbb xor push cmc sub orb push sub jp sti aad addr16 ret dec jno xlat sbb add jne mov loopne (bad) jnp jnp out (bad) das add pop cmp and out pop inc ja or dec push xor out clc pop pop aad jp push rep loope ljmp add pop xchg sbb add into mov popf xchg jno jmp enter or in adc sbb jecxz jo dec mov imul xchg jbe xlat lcall xor push xchg gs std cmc sub or jbe lcall in inc imul mov ja repnz xor jle adcl icebp arpl (bad) pop mov pop fistpl push jp (bad) ss es imul dec out xchg push lock xor or insl mov and (bad) mov mov jns jae int daa (bad) ret pop in iret mov jp cli jae inc mov imul xor jb mov repz repnz stc mov cmpl xchg pop stc mov jp adc jle jno mov repnz scas mov loope mov dec js add pop xchg mov cmpl out shrl sbbl aas xor pop and push sbb loop nop cmp lret inc cltd cwtl loope out cmp xor add jp (bad) xor jmp pop xchg nop bound gs jnp fistp mov (bad) jp outsb jbe inc repnz jno (bad) das mov xchg jp out divps push iret (bad) out mov push fcoml xlat mov test and jne inc or lret sub jnp je cwtl mov mov gs enter xorl test jne push fwait jb iret adcb std js sbb jbe mov dec out scas push (bad) adc mov stc pushl mov sbb call push gs jbe std jbe and fbld jnp pop xorb insl sti jb into lret lahf xchg dec aas xor jge push arpl cmp jne mov cli pop jp int3 es pop pop pop xchg adc mov add push fisttpll rorl lret out cmp jns push mov xor jecxz mov lcall sub fcmovb xor pop jmp sub imul sbb test sub sub push xchg stos adc xchg cmp sbb imulb inc sahf pusha into cmp lcall (bad) or lcall sbb adc adc fsubrl jg mull loop pop stc push push outsl pop fmuls or xor mov pop mov sti xor stos xchg mov popl mov loop or jge xor sbb movsb jns ss jle jbe jnp or add dec sub icebp imul xlat push sub call arpl xchg loope mov insl (bad) nop xor push xchg fldcw inc clc gs jne sub mov (bad) cmp or lea arpl jne pop loopne inc cmp int3 pop xchg jl imul lds loopne les cmp jo stos ja test mov ss mov cmp jb iret jmp adc dec dec call jae inc xor cld movsb jo in mov push cltd in shll daa stos fnsave push inc out addr16 jle cmpl fcompl sahf xor mov mov data16 cmp or inc ja jle cmc int3 pop js mov xchg stos popa in or mov xchg xor or sbb and fwait push jno adc xor ret inc js sbb loopne xchg cs lock bound sub cli dec pusha inc inc call xchg xor mov mov bound fisubl xlat in xchg pop jp push clc cmovge push cmpb stos dec scas insl ja sub testl cli pop dec adc xchg into inc icebp loopne cmpsl pop ljmp dec sub cli pop cmp mov inc mov mov arpl (bad) adc sub rcll aas lds jp or inc ds divb pusha int std sti pushl lahf sbb mov cmp and pop fldcw insb pop stc andl push iret sahf ja jl jb ret int push popa jle push jle rorb jp psubsw test popf push imul gs repz inc sub scas cmp or sbb loopne fcomps pop push imul mov or lret lret cmc cmp aam faddl cli lahf fldenv dec mov cld adc daa sbb out pusha adc bound adc push outsl pop je fs mov cli insb jnp jl xlat xor cmc ret jo mov fstpt jnp ds pop cmp lret incb (bad) loope pop and xchg jg mov test jp bound cmp jecxz cmp lret (bad) movsl lea mov (bad) ja test inc mov xchg nop jecxz sti dec mov push sbb jbe inc inc xor inc cld pop xor in inc mov jbe stos mov ret sbb push rorb sub sbb sbb sbb inc insl imul cwtl fsubl mov pop fnstsw insl sbb mov sub or or movsb jbe clc cmpsb aam daa adcl movsb mov (bad) mov jne lea test pop inc movsb pop sbb inc insl arpl movsl addr16 mov insl jp mov jg aad out ja stos (bad) mov dec sbb pop inc mov leave xchg cmpsl cmp cwtl mov mov xchg mov xchg daa iret leave xor sbb jns icebp stos mov sub fimull mov (bad) inc jbe movsb stc and mov fstpl dec shrl mov clc lret pop or das inc test push push dec stos or idiv test out out xchg jmp push (bad) outsl adcl (bad) iret mov push push jmp jle in mov aaa pop (bad) addl mov test rcrl (bad) jae lret adc pop add pop or push and call adc push and push pop push push imul outsb outsl and dec pop push repnz push jns or jge rcll repnz leave push xchg ja cld cmp in inc in shlb inc ja stos rcll push pop fbld in outsb or jle push (bad) pop mov mov xchg pusha and pop out sti lock in insb xor into inc jp stos pop push sub xchg jo insb (bad) loope rcll (bad) add aad leave add lea jle aaa cmp in push jge outsb cmp repnz stos mov push mov pop jns pop aam (bad) stos cli (bad) and jae push imul je test fwait xchg mov movsb js sbb pop out xor test aad inc stos sbb loopne cmp aaa adc lds jae insb lahf and cmp mov sbb das cmp sub sahf jns xchg mov mulb insl or xor stos adc xor push adc repz scas cmc pop inc insl stos lcall push adc jg jecxz cmp test mov mov (bad) lret push adc jne outsl inc dec mov iret adc push adc push push cli je (bad) outsb int cld mov fwait fwait or push xchg fisubrl imull mov popa cmpsb push mov xchg mov scas dec xlat push or hlt xor aad or push fs insl push mov outsl int xorl push add mov stos imull shr mov (bad) ja pop insb pushf inc dec movsb dec cmp dec adc inc mov jb sub in dec jo ret negb mov notb loop sti rclb ja pusha sbb hlt int mov sti inc movsb cmpsl xchg cltd push imul sub lds sub inc (bad) mov int clc mov dec jae and sbb into sbb stos pop cmpb mov lods jle push mov clc sub jns jne call mov jae sahf cmp int hlt pop (bad) movl adc dec mov repnz sub inc test push cli jecxz mov sbb rcrb addr16 bound mov xor repnz push jl loope and (bad) das cli mov pop add stos repz push push nop mov cld aam mov daa mov div xlat push test sbb dec mov mov jmp xchg push gs push fcoml adc mov popa movsb sub insb push pop cli dec bound hlt sbb aad mov push pop dec jno pushf mov mov xor jne push pusha push mov daa pop ss jno mov sbb mov int cmpsl imul mov out scas push scas lods lret jecxz and mov adc jne or int add mov mov xor push jp dec outsl divl outsb lds in xchg push aad jp xchg pop (bad) sub sbb push and mov int3 mulb jp pushl inc jp xor loopne fcomps jp mov inc jb lret jp pop jl mov (bad) das inc sahf fmuls das pop cli lods add dec imul cli and jmp adc jp call sbb jp out (bad) push sbb fstps pop leave jmp inc loop push jp out in fs sub dec or adc repz cmp ficom ja lret test mov pop popa jp mov stc sbb or xor jns cmp in jp repnz xor (bad) pop pop out ljmp rorl cli (bad) sub xchg pop pusha adc (bad) ljmp sbb or xchg mov movsl mov pop xchg int xchg cli and adc repz jno rorb lcall addb mov and push out or pusha loope sbb idivb jp fisubl ficom ja inc sbb ja jne lock ror loop movsb jp aaa jg in cmp jno mov jecxz add jne lahf inc icebp in xchg jns adc xchg xchg jae or dec push aad scas push das push lods cmp push push mov insb and pop cld or lret je pusha sbb pop (bad) rep add dec jb icebp outsl cmpsb daa (bad) ret adc cmp pop jne xor gs cmp xor add mov jecxz and ret rolb mov push cli pop inc movsb stc mov lea add inc sti pop aam dec jnp cmpsb or push jle mov into pop out xchg sub repnz mov ds sub shl mov lods sub inc mov int repz add jp ficomp lahf ja fs jae addr16 push jo push clc pop inc jge pusha jno cmp jg dec sub pop cli mov ss push and movsb jp dec dec mov arpl pushf pop mov idivb mov adc xchg dec fmuls xchg mov cmp mov xchg rcl repnz xchg aaa ja push fildl repz mov inc je fiadd mov xchg jl xchg lret outsb js push add and add arpl mov ret popf fadds in (bad) jg sbb lods xchg outsl push push cli dec sbb jne mov (bad) neg jnp orw dec addl mov lahf repnz cmpb nop push shrl arpl mov mov sti (bad) icebp inc push mov lcall mov loopne call inc cld adc lcall or cmp imul nop test jp mov jecxz roll jp dec sub aad add xchg loopne cmpsb xchg jp loope into es mov jbe into imul insl add adc pop in xchg pop sti jle es cmp jp pop lcall dec fist bound sbb sub jp dec sarl xchg pop jp (bad) and jp adc aaa out imul in pop sbb lahf jp or inc imul test nop mov dec das jecxz test call add sbbb mov add add in mov sub xchg mov test mov lret add jne enter in and std jp out imul aad mov jl ret jnp (bad) fcoml mov push adc fbstp mov or ja adc (bad) stos sub pop push jp inc and xlat lock aas ljmp test jae and cmp xchg bound jae in mov jbe mov push test js outsl or in imul and enter imulb fdivl fxch jp mov mov mov pop or aaa repz lahf insb jmp xor fild mov rcrl xlat pop push cmp movsb int ret inc rcrl push lret (bad) cmp jecxz xlat add movsb loopne movsl xchg addr16 pop out and gs fsts or push jae jo adc sbb ds pop in mov dec mov pop enter xchg jb sub stos (bad) divl and mov adc stos dec imul push sbb in sub les xchg (bad) mov lods (bad) loope adc pop xchg add jle pop jne call in (bad) pusha pusha mov ja fcmovu mov cmp cmp test dec into sbb mov or sbb adc imul nop jecxz mov cmpsl fwait cli daa jp sbb repz cmp dec or aaa cltd (bad) mov dec push ljmp xchg mov popa mov adc jp sbb mov jnp (bad) mov sub add aam fistl push in inc lahf cmp cmovbe insb inc sbb jne (bad) mov xchg cmpsb jp add or jno pop aas push movsl dec popf mov imul pop fdivr sbb jno mov aam jp and xchg fcompl jne mov loope fidiv fiaddl xor xor inc pop stos push jp mov (bad) lret mov inc push psubsw push xor jp xor mov sbb dec sub adc dec mov dec es xor jp in mov fdivrl dec arpl and cmp aas repnz daa insb push cmp ja sub pop push addr16 jne es stos enter mov lock cmpsb repnz sbb or (bad) mov popf mulb negl cli mov sbb mov xor add (bad) xchg sub and jnp mov es mov aad xchg pop xchg xchg xchg jp je aam arpl out loope sarb adc movsb es repz sub dec call pushf and test repz push sarl jae clc das mov jnp ficoml push jne (bad) lret aam mov loop inc jne shll fidivl outsl sti inc xor cmc jge mov push jp lods mov popf jp pushf push es setle xor cmp aam xlat test (bad) sarb cli test fstpt dec jp cs ss fdivs or pop les scas movsl imul mov jl outsl pop popf push mov pusha push sbb test jne subl (bad) xchg jp mov repz aam or push popf dec and dec lcallw insb test sbb dec fcmove movsb sub std cmp xchg addl xchg pusha xlat and adc aas es jp pop aam out cltd fsubrs popf mov or out fisub scas mov arpl lock pop inc call scas stos push in add push pushf in loop mov lods mov dec int mov jle ds roll push mov inc stos dec mov push push add jmp and push lahf or lcall push jle lret movsb sbb in xchg pop jp pushf int xchg xchg pop (bad) out or cltd pop or leave movsl xchg stos fcoml jmp mov out and mov repnz mov jns aam xchg insl jne (bad) jnp pop or pop pop xchg sbb or les add fsubl mov cwtl sub insb push or or jp add lock stos mov call outsl xchg dec repz sbb lcall es xchg lahf xchg fs jne stos adc xor mov mov mov addr16 mov mov jo adc divl fidivl and push xchg sub jne inc ret inc cmp cmpsb mov sub orl jno sbb repnz adc jmp pop insl xchg stos pop dec xor cli and or fwait jns mov and mov cmp push sbb jp add inc mov jge out sbb jp pop xchg fst mov aas packssdw mov (bad) jno cld sarb loope pop sbb xchg sub or movsb mov insl scas mov add cld hlt arpl (bad) mov dec sub xchg jno scas mov xchg xor jb popa hlt mov pop mov iret daa lods dec loope rorb (bad) xor xor loope ret pop push fstl mov out sbb or adc jp scas xchg lods inc rolb sbb (bad) (bad) rcrl jae addl fnstsw out emms add outsb in jbe mov mov jno clc test fbld lock mov lahf jns sbb das rcl dec fdivr cli and js std mov aaa lcall pushf or aas xchg lcall lods jp lods les mov bndstx stos lret jp sub nop jmp pop xchg mov xchg add fcoml shll gs stos inc jb sub push mov cmp xchg (bad) xor adc mov pop ja and fwait inc jp sub fcomip sbb lods jle sub fs enter test into cli xor jp movsb (bad) cmp mov mov sarb jp mov add pop sub mov gs jne jp js aam pop cwtl xorl std adc cs pop xor mov mov dec xor jne data16 lods repz imulb xchg addr16 test loope sti dec inc fimull xorl xor inc xchg mov mov adc cli gs pop pusha (bad) jne fcoms popa or xor push jmp pop (bad) mov jno jae mov dec mov cmp cmp lea out jmp in push pop dec jb jne jl addr16 mov jp cs repnz mov ret pop xchg jno fbstp jne hlt mov dec cwtl pop cmp jle shl xchg cli das or pop pop sbb push icebp cmpsb xchg jge inc sbb call insl xchg popa mov mov jp inc shl push hlt lds insl jae js sahf ljmp adc fbld sbb jecxz sbb xchg and xor sub cli (bad) test stos gs mov or xchg je pop out cwtl mov (bad) jo aad pop stos pop xchg push sub das lahf mov push inc repz nop aad ds adc xor jae stos and ljmp cmpsb (bad) fstpt pusha rcrb xlat add addl mov push pusha jnp xor stc push mov arpl stos jl jmp leave dec mov xchg test dec pop addr16 sarl or cmp mov cmpsb cmpsl mov popa mov adc push hlt stos adc mov pop inc repnz es insl push mov adc dec cmc ja int3 mov mov push push xor xchg cli adc jmp mov jge lret push jmp xchg xchg arpl repnz jp push cli xchg insl pop pusha pop das mov fldl mov or sub adc sub (bad) or jns inc jecxz out ja adc jae sbb popa pop movsb jb jmp pop mov insl ljmp cmc stos mov out fcmovne and dec (bad) popa add (bad) jno mov lods cmp out pop pop jne ja jg sub (bad) (bad) (bad) xor mov in (bad) aam cmc sti je mov imul mov mov pop inc insb and mov mov xchg mov insb dec dec (bad) push hlt push or lds push int test dec outsb add pusha iret in ljmp push stos cmpsb mov fimul mov ja std pop jmp inc les iret sub jle out mov dec aam loopne inc add sahf ljmp adc or pop hlt (bad) hlt xorl add xchg jne insb rcrb dec sarb and pop test dec aam sbbl fnstenv pushf iret hlt hlt cmp insl xor mov imul push fistl xor xchg xlat iret (bad) ja pop push movsl into add loope test sti arpl sub lret jp or les stos popa sub or mov cmp push mov testb clc jb popf (bad) mov xchg xchg loope add das insl inc mov and cltd ss push xchg push jae adc cmpsl mov mov jl sti (bad) xor stos jno stos mov pop pop cmp fwait jecxz adc mov movsl (bad) roll fistl stos aaa leave xchg fsts mov ror mov dec xor out sbb pop push push lods movsb das cmp adc sbb push cltd movsb (bad) sbb jb lret sub pop add (bad) and xor nop sbb inc mov fistpll lret inc scas out sbb jp icebp sub xor jo and decl mov mov rclb adc xor lock sbb imul out movsb lock or fsin mov inc add je pop lock cmp pop jo insb fsubs and mov outsb rcll imul clc push mov xor sbb insl jl cwtl gs test cld sub rcll sub ja iret stos xor cld hlt mov add xchg outsb mov (bad) or jge out in popa stos clc std ja cwtl inc pop mov scas xchg mov push jne inc in push int push xchg xchg sbb inc ficomp mov jp fcoml push mov pusha xchg cld aam sbb gs jl jno mov sti add add inc cmp mov push sti cmpsb pop pop repz lods xlat mov je adc cmc mov mov loopne pop test lcall jg idivl mov lea sbb ret sub pop dec test cltd fdivrp xchg push cmp and cmp cli jp std mov dec mov fsubrl hlt sbb fistl adc movsb ss clc dec push jno jbe nop outsl inc jo pusha clc ds sti sar pop cmpb mov out pop sub aam imul pop clc mov mov inc gs stos ss mov inc xor cmp inc ja xchg adcl mov sbb imul movsb movsl in (bad) (bad) mov dec lcall mov adc stos sahf (bad) out into pop and cmp cmp in movsl enter and out popa movsb pop fdiv bound out and dec in inc or divl in inc add mov mov xchg in xor mov jge je jl mov in xor cmpsb insl stos out imul nop mov movsb or aaa sbb test addr16 pop bound adc push rclb mov mov jle cmp pop sarl mov iret dec push data16 cltd mov mov lahf repnz push gs push leave inc lahf mov mov fstpt frstor int3 loopne pop out not out pop cmp out jp mov clc push or nop mov stos fwait pop dec movl rorl sub test cmp pop sbb sub add cli jb xchg cwtl push ret aad sarb cmp mov aas mov pop in imul aas xor mov cwtl mov push xor adc rorb lret jb mov lret push jne in cmpsl mov xor mov cmp addr16 icebp ss movsb push out inc fs add inc ficompl dec jbe push mov jmp divb fdivrs enter adc sbb pop push fs enter xchg mov mov (bad) fdivr push cmpsb lahf mov popa dec and pop dec mov push sbb call dec inc sub xchg and jnp mov repnz sub jle rep adc cli mov or mov cmp sbb xchg js pop imul sti jno mov (bad) lcall cmp mov (bad) jno es mov in adc push pop jl mull or pop ss jne jl and aas pop add or imul mov dec test cld hlt cmpb ret jns push mov fisttpll cmc jbe int3 es xlat cmp stos push mov pop mov daa aas inc js mov dec mov clc lret xor mov dec out inc mov pop dec dec stos mov jb jmp notl ja lahf test jp rolb enter lock and inc xorb test insb sahf ljmp mov insb push mov pop push push pop mov das (bad) sbb mov rclb and mov or pop mov outsl mov cmpsb lods bound hlt jp aaa jnp inc and xor int lods ja hlt cld (bad) mov mov cmpsb mov add gs fs and jnp fsubrs xlat jp mov adc ja repz inc adc in lcall mov or and sub ret cmp ja mov mov (bad) repz push iret jmp pop jp and and jp std loope cmpsl and out ljmp cld nop adc mov dec loopne in mov insl test sub fisubl call pop (bad) cmp jo and or inc lret jbe xor mov aaa xchg pop jp mov add or jp,pt lea mov jp sub sar adc add or inc out add jg bound sub jbe mov fistp sub cmc stc xchg jne push or add mov dec fcmovnbe dec fdivrs rcll jp cmp cs push call (bad) xor pop in loopne jp in les (bad) sbb jp call xchg std jmp icebp jp jecxz xor add fist pop pop ret cmp cmp enter lret cli cltd sbb push loop push sub add (bad) pop rclb pop sub enter into adc jnp add jmp mov jp lds mov jp or jp mov mov mov jne xchg adc pop bound inc pop xchg pop xor vcmpss adc mov fmul and jp mov daa cmp push add (bad) xor pop xor repnz jns fwait hlt xor mov xor dec dec imul add in jnp sub xchg mov and or jnp (bad) (bad) bound xchg sarb add inc fistl iret xchg jns jae pop inc xchg jne and ret pop mov jl pop add ret xchg fistl test in xchg jne (bad) jp lret pushl (bad) fistl ds popf jp mov fldenv add mov xchg xor adc xchg mov pop add jp sbb mov es pusha jmp jmp jp push jb mov (bad) mov pop push std cmp ficom cwtl xchg in fucomip jnp cld (bad) mov cs insb adc or das add movsb jp sbb mov xor stc (bad) jno lea mov jp push stos gs repnz sub testl lcall data16 mov xorb jp pusha (bad) je sub inc mov popa inc xchg mov fldcw pop add andl adc leave inc ljmp repnz or xor mov stos jae and insl movsb icebp stos lret jle jne xor fist jle adc push pusha call inc adc (bad) stc movsb sbb xchg js mov jno outsb add ficompl inc push (bad) in mov mov jl cs and dec xchg cmp mov stos mov incl lret push shlb jae or add push fcomps adc iret inc mov mov pushf jle imul add xorl into test sti xor and sbb in insl test xchg shlb inc btsl pop adc fwait stos test inc jae cltd xchg lds sarb (bad) push subl cmpsl cmp and gs addr16 jae (bad) js xchg jecxz mov inc and pop pop stc cmp aam xchg in push loopne mov xlat hlt clc (bad) jp ja sahf adc jbe lock xchg pop and and cli lea es mov xchg cmp shl ret jle cmp or mov arpl mov ret xorl lods jp arpl (bad) mov loop cmp sahf movsb mov or lahf mov mov stos cmp jp mov adcl jp insl jl dec cltd fwait repnz dec mov jp fstl jmp enter or out sub xor aad sbb pop lcall adc or jmp inc cwtl lds mov call xlat fucomp xchg jne cmpsb push int3 repz pop and or mov sub ret test in mov clc mov dec xorl sub sbb std fimull push daa push and pop (bad) ja push xchg xchg mov mov jp pop fisubr sahf in mov jl jmp dec stos jp (bad) mov loope dec xor loop out outsl (bad) mov sbb psrld xor and push (bad) dec push jp repnz insl stos dec movsb iret test push sbb push hlt std loopne stos push loope cmp inc jne or test pop ret or rcrl ficompl (bad) jl iret add dec stc jne outsl jmp je pusha inc rorb test je adc xchg lea push mov (bad) jl je test jle int and xchg dec pop jne push imulb mov ljmp in shll xchg push incb push sbb (bad) sub stos sub jp fldl pusha push and arpl push and mov mov gs dec sub js inc ja hlt jno cmpsb mov sti outsl aam idivb and fmull mov or dec (bad) xor out or add idiv mov stos adc xchg ret out sbb repnz sbb xor lcall sbb mov loop sub xor push in mov insb mov jle jb sarb push rcll adc into (bad) mov repz lea movsb (bad) hlt aas pop xor movsl dec xchg sub adc test mov dec decb add mov movsb cltd and fiadd lahf cmp (bad) (bad) jmp and push fisubl inc mov jne shrl addr16 xchg cli pusha outsl out cmp outsl jecxz cwtl imul mov subl movsb push inc cmp add xchg ret mov cmp dec push lds mov cmp push sbb jno aad sbb xlat loop mov test pop es stc jmp popa std pop clc add test fwait shrl mov jne mov push (bad) adc inc (bad) inc popf loopne jmp stos sub inc adc push mov push sbb ficom mov sbb lea ljmp out or pop pcmpgtw lock or in cmp cltd pop (bad) data16 sub jne mov jnp insb test sub cmp sahf outsl add es jge adc cmp ja push aas das mov mov aam and mov push or jmp test jo inc outsb mov dec hlt cmp imul jg fisttpl clc rcrb xor outsb mov fs push jge sub jp stos mov std shll adc jp ret and (bad) cmc fs mov push sti sahf push iret mov in cld jb mov and inc jmp mov leave movsb sbb mov std fiaddl xchg enter ret mov jae push mov shlb cmp mov sub lods inc jno mov daa movsb xchg popa push frstor jbe fdivl iret mov loopne jl popa stos or add dec test rcl cld (bad) xor push loopne pop in pop dec ds mov dec pop pusha in lret push mov shr add pop inc inc cmp pop push cmp xchg stos insb push leave nop sbbb pusha int3 (bad) push std aad jae je fs loop cmp jb jae psrld jo and or fadds cmp mov sbb xchg xchg idivb pop stos xor push out ss push inc test insl repz out jmp sub js xchg (bad) gs jle nop in pop xlat push xchg repz mov ret enter int mov into mov push bound (bad) movsb or popa add arpl mov cmp mov fwait rclb rcll loope repz mov mov or into insl popa fs imul sbb ja leave or enter cli push aad mov gs sahf lods mov hlt dec (bad) xor sbb push cmp stos and mov repz cltd nop mov gs out cs pop hlt mov insb out inc rcrb movsb dec and mov inc cmp xlat ja lea or imul push ss sub jmp adc mov stos jns fistp shlb xor jnp cld jns jnp popf fimull arpl cmp mov pop dec mov lret ja push mov clc les cmp stos or div (bad) add or pusha mov loop pop add enter mov mov cmpb aas std push in jmp and mov out cwtl jnp stos mov push cmp rclb ret ss (bad) gs lods jp jnp adc fmull cs movb or dec mov pop pop xor in cmp xorl push ljmp inc sbb push add scas lds stc sub mov mov pusha xchg mov sbb jmp (bad) cli pushf (bad) mov fnstsw aaa sub cwtl jp dec mov add mov movsl mov and sub mov fdivrs mov cli (bad) cs test xchg leave cmp jnp sub push cmp movsb cmpsl ret outsl sub jae stos mov sbb out dec dec pop cmp outsb aaa test in pop dec xor fcmovb dec mov out xchg fwait or ret fwait iret in inc int pop xchg jmp mov (bad) je push mov lret aad mov jae xor and jno add dec push dec sbb (bad) push shl icebp inc push in insb cmpsb push fwait jno cs mov xchg jb ss and shrl out out hlt hlt arpl jbe into and nop dec mov lcall adc jmp mov or push fbld out (bad) mov xchg jnp inc push cs jb push hlt jo dec pop cmp xchg out subb xchg mov add insb and and add inc lcall or xchg push dec mov lods sub fldl push xchg stos mov xchg adcb pop outsb iret mov mov xchg (bad) (bad) sub test cmp xchg lret ret into in mov jae fisubrl pop cmp iret or sbb in outsl dec ror push ja jmp add dec mov push push out ljmp int xor mov cli fucomip scas lea dec call mov pop add and mov movsb jg adc inc xchg scas cmp and imul insb ds jne cmp push sub sbb mov enter xor inc dec sub pop mov sub call call ljmp cs mov stos das mov dec pusha push test clc sbb stos mov insb xor jecxz jnp inc cmp inc pop clc jae mov mov mov (bad) leave inc movsb sub aas addr16 jo pop add add xchg xlat mov or rclb add dec xor mov dec jnp jl push ja out inc stos and imul push cmp sub xchg lock movsb imul add inc cld xchg push insb stos frstor xor je push in mov scas add lret pop cmpsl sbb (bad) stos sbb mov xor ds sub icebp jbe (bad) movsb push sub mov aad push (bad) mov sbb pusha inc push imul add sub ror cmpsl add adc ljmp ljmp xlat push dec xor aas test dec add sti mov sub (bad) xor or sbb push push leave xor sub es std hlt test int3 push cmpsl mov cli stc sbb je les imul stc notb mov xor scas mov arpl faddl push cli cmp jg,pn sub mov push or clc inc scas stos fnstenv jns in inc repz push jg or mov sub sub lds outsb xor jg repnz popa mov mov sbb (bad) mov mov movsb pop pop test push mov xchg es and fld (bad) shr je sbb xor bound xor pusha sbb mulb outsb xchg imulb ret aam lcall loop jbe pop lds daa je sub ja inc add cmpsl sbb aas stos enter loope pop int jecxz push dec ret in dec nop shrb movsb fildll popa sti imul cmp dec jl imul stos outsb cmp int ja imull mov imul pop in sti and lret sbb pop inc cmc movsl jnp add jne test cld cmp pushf je pop xchg sub fptan mov inc (bad) jae dec stos pop shlb pop repnz mov sub (bad) enter stos out (bad) shrb or clc push cmp mov imul mov not jmp fstps xlat movb pop in lret add mov aad daa insb int gs dec mov push mov and mov (bad) mul daa or dec stos cmp (bad) fisubl fcompl cwtl or pop adc xchg pop pushf mov stos mov mov outsb in xor mov jo cmpsl add and mov mov xor stos jle (bad) mov lret stos and cwtl ret xchg push popa push mov mov pop je outsl jne mov sbb pushf mov orl scas mov jge fnstenv push ret in ret into dec loope lahf ret cmp inc enter mov mov cmpsl pop push push fidivrl add jae cmc loop or pushf push loope push es jbe test not sub ljmp arpl pop and dec and scas and pop and sbb movsl adc xchg jb mov and pusha adc loope orb (bad) push add aam pop call shll testl out ret mov mov add push adc (bad) lock fs lahf jp cmp cld test adc shlb pop sbb fcompl jne mov movsb stos subl lods ja add jmp (bad) jecxz add pop stos es mov movsb jmp xchg (bad) loope lcall addr16 adc pop or jbe in hlt in sar mov inc inc loope sti (bad) inc adc mov jp int3 jg dec stos or in jno and jnp div push lea mov ret push inc jb or (bad) xchg sarl sti mov cmp std aas add pop jmp xor in (bad) mov ss sub jmp in ret cmp inc shlb mov arpl in ljmp xchg sbb mov mov push mov push incb cltd stos push hlt xor sub xchg fidivrl cmp add pop pop xchg movsb (bad) mov inc test repz or xchg or aam fstpl in mov lods lahf std movsb push scas loope stos cs andl mov mov lret lcall mov push dec push loope mov (bad) mov push sub mov jecxz sahf mov popa or lret cmp mov stos test adc add cmp gs pop ret jne repz push dec call adc mov push sub repnz arpl test push (bad) dec xchg int mov (bad) cmp sahf stos loopne mov jno lock icebp pusha inc mov pop mov sbbl sub movsb xor jno loopne cld lods les xchg movsb (bad) shr clc adc sti jecxz pop out int fidiv gs in xor leave sbb pop out xchg xchg je shrb aam lcall aaa mov cmpl lret clc jle pop inc lock cmp lock and in ja push popl stos (bad) repz ficompl jle inc dec out lods sti fsubrs popa test or cmp call jo dec je push xor mov mov pop jae nop data16 push fildll or push sbb cltd mov pusha sub scas pop je fisubr xor add add imul sbb push xor insl sub scas and xchg push mov pop shll jae outsb js lods in or sbb push xor and out mov aad xchg pop stc orl adc andb cmpsl popl jp and call mov push add repz mov idivb jns jge movsl adc stos push mov ret adc ljmp mov xchg adc adc jecxz add mov mov adc negl pop mov mov push cmp daa ja push pop lods mov push ljmp dec repz shr pop test inc push fs ja mov test ja sbb mov inc jp loop outsb jecxz cltd jns movsb mov std pop clc push cltd inc lahf mov fimull les xor notl daa jle daa stos mov jae add fwait cli je lds push jp dec and fldt or dec idiv pop xchg mov mov xchg movsb mov ja mov xchg mov mov xchg jp xor fnsave xchg inc push clc cli hlt repnz test jp out push dec and mov jp push out je fisttp jno adc lret or ds push mov jge outsl icebp (bad) pop outsb sbb (bad) ja jp push inc and pop jno,pt out enter cli xchg faddl mov call sub orl push mov les sbb jnp pop sahf fwait je lods jp in shll mov cmp pop cli mov int3 jno mov js mov pushf mov sbb mov sti jecxz cli in xchg data16 mov push mov lea (bad) repnz xchg pop adc test dec inc cli imul inc stos or out cmpsb and or inc xlat mov ja movsb insb ljmp out (bad) jne push sbb xor add mov js push xor cmp bts sti mov xor or push scas xchg xchg push ss mov mov outsb rep sbb jg stos ds faddl xlat mov jp out mov inc mov pop sub sub dec popa push lods dec sbb data16 pop (bad) pushf outsl mov aam mov gs repnz outsl icebp imul lahf in pop pop jp jge in inc cmpsb push push daa hlt mov push sub mull jae jbe jo fiadd fstpt jne adc daa adc lock lcall inc ja (bad) pushf jle fnstsw imul sbb jns in add fldt dec movsl fwait imul mov sbb into jnp xchg sbb jl mov sub int mov lea fistpl sbb jp hlt push sbb xchg test jle in cmp adc and cli mov jp xchg addl sbb fcoms mov push mov movsb int dec lret test cmp aas sbb mov pop jmp test xlat mov lahf jns xchg lock push idiv push popa mov jne shl movsb mov xchg bound pushf jno add jne jg pop add mov cmpsl push sub mov and xor mov pop add fs cmp outsl cmp or fcomi and jne cmp lahf sbb ret sbb xor jp or andb outsl sbb jae mov add pop jp addr16 out js (bad) std ja xlat mov jno call xchg jp ret cltd dec mov inc push fwait mov pop cs std jg fcomps fs (bad) xlat lock xchg insb mov pop aam sar (bad) jp movsl add hlt pop stos cmp xor inc jnp cs into jp and jg jno mov les jns and mov xchg sti ljmp jb popf adc insl sbb adc mov or push test arpl dec mov in sti fisttpl gs lahf sbb shrb addb es jp push lock xchg sbb mov cmpsb andb jge (bad) cmp push jl lock push mov mov cmc sbb loop xlat mov pop (bad) (bad) cli repz gs fs xor sbb jmp imul jp xacquire pop lods inc je xor lcall ret add xchg xchg sti jecxz xchg hlt jge pop outsb dec pop lods cmp dec (bad) in dec mov mov aas sub ret jae lahf mov cli ds test in jp jns mov stos mov mov and leave (bad) dec push dec arpl mov ja dec jmp ljmp call sbb vpcmpeqd inc lret xchg inc lret mov int3 test sti test jne fs clc jne xchg in pop jnp int3 (bad) dec movsb or ja mov sbb push out and imull add push arpl movsl (bad) pushf mov adc jecxz adc inc or or or cmp mov stos sub in aad divb jl xor cmc xchg sbb push stos loopne sub cli lods ret fnsave xchg add fsts push cmc sahf inc push out pop mov xor cli daa add stos imul push movsb mov lcall xor xchg popa loop pop xchg lret jecxz pop lock fcoml inc dec stos xor jmp add mov mov (bad) fild sbb data16 mov mov fstpt mov push loopne lock xchg incb add (bad) repnz xchg popf jp cld insl add push and test push aaa sub test pop scas mov dec aas mov daa jp add cs shrb test pushf push aad sbb push xchg fbld les icebp ret popf leave jnp push lret movsl jno xchg ret jmp mov jp mov jecxz mov outsb sub mov mov pop repnz js or test (bad) pop ds lcall orl and mov out jecxz hlt jg cmp sbb addr16 imul bound mov adc jp sbb lret mov lcall jp pop fidiv jne call aaa repnz sbb cmp push xchg jp repz fldl jb (bad) movsb incl stos ret mov cli jbe ror mov repnz and mov xchg (bad) xor loope cli into or mov stos mov and arpl mov inc ja pop (bad) xor (bad) mov pop test mov add fsub jp and outsb repnz jne pop sti mov ljmp jno (bad) and adc jnp arpl inc xor lcall or xor out jp lret xchg lret cmp jp xchg sbb cwtl std cmc insl ja loope xchg jecxz mov lret outsl outsl (bad) mov mov cli and cs cmp call inc jp test data16 pop cld sub dec cmp dec movsb dec ja xor test lea popa push jp push xchg ja fistpll es mov mov das jp xor pop insl ja test repz ret mov mov je cmp addr16 jp ss std jo inc jp xchg int shll xchg popa jbe outsb call cltd sub lret jp jecxz bound and fidivl cltd lret jmp jp,pn xchg data16 jecxz dec jae jnp inc mov cli push lea mov insl inc adc daa sahf gs enter dec push enter mov pop and lret sub push fwait in dec aas and inc sti adc sub mov (bad) push insl data16 mov adc xchg jp push cltd (bad) jbe stos adc adc add (bad) mov cs push and data16 mov jae (bad) orl inc jp fisttp jl mov sub mov xor dec lahf xor out out (bad) mov adcb and bound cli push stos dec xor cmc xor movsb insb lret jne jo aad mov push fs pop in je,pt cmpsb xchg imul ds jp pop cmp (bad) jno stos frstor outsl fwait call cld jbe mov ss dec cmp xorl cmpsb movsb push cld adc sti push bound jno inc jl and cmp push (bad) int mov mov dec les popa or dec gs andl fldenv or call jp mov xor jbe and sti leave stos fiaddl pop xchg mov daa sbb mov (bad) movsb push loop int push cmp dec cltd push sarl mov mov sarb std xchg aam sub fwait dec jae (bad) mov and sti in clc je fs sbb scas mov sti adc pop pop out dec enter xchg nop xchg pop sub pop stos mov pusha xchg add mov cmp and xchg ss movsb mov sar xchg call dec push add xor addr16 jecxz pop sbb dec jnp jnp pop fldcw fiaddl inc sub mov cmc xchg fsubrs sub inc and aaa cmp adc jnp cmp or fldenv movsb int3 das and pusha loop xchg cmp pop sbb call mov shlb jno jge sahf pop jnp cwtl cltd jae mov add out or pop bound cs lds push movsb aad mov pusha (bad) sub lods jne or jge or jge ret ret rcrl mov aaa into sahf jp,pn out in (bad) jns ja xor mov stos add mov gs adc jp imul jle outsl jmp xor jp les out xor push jp test movsl pop pop or lret mov ss jp sub jp lret dec gs pop lods std mov jno sbb sbb jno cltd int lcall or cli xchg loop add icebp pop dec adc jp inc (bad) out pop cwtl fstpt loope or mov out dec jmp pop out xchg int3 repnz ffreep cmc xor daa aad pop fsubr mov cmp (bad) jo xchg je push push dec es jae add xchg jmp xor add call aaa stos dec pop lea push and xor andl jbe ss mov outsl lcall mov sahf lcall dec jl lods pop jp jmp mov or aad jno lds arpl loopne mov mov jl xchg mov xchg fisttpll adc jp or ret inc cmp pop sbb and jb push add (bad) push ljmp add xlat jecxz pop sbb test imull add mov sbb lahf mov sbb mov jecxz scas adc jb mov push call imul xchg jo xchg mov cmp enter adc scas mov shrb inc fsubrl rcrl mov call gs cmp pop dec mov inc ret hlt inc mov inc cmp sub gs and jbe movsb dec testb push loop push cld or or es xchg das cli loope stos push loope std jno frstor inc shrb shll or mov add jge shrl xchg inc push arpl scas sub jno ds jp (bad) xor mov int3 push sbb xlat bound xorl gs fwait dec idivb mov in sbb sbb and sub push mov cmp leave dec in sbb inc ret gs test cs mov mov out call pop cmp pop mov adc hlt les dec insb (bad) xor push xchg jmp jne pop adc jne addr16 repz or push and imul or and call jo cltd jnp dec mov jns pop mov push fsubp jnp jno (bad) mov jge dec add jp push mov pop jne (bad) lock adc lahf add jp pop push sub les jge scas jp enter mov and xchg lea mov pop dec cmp stos (bad) mov test push movsl push jge hlt jmp sub popa cwtl fidiv or insb push sub mov mov cmp movsb or roll (bad) aam or inc jns idiv ja mov dec (bad) lahf movsb or nop adc push (bad) push push mov xorl out dec jns das loop in mov cmpsl movsb xlat imull xchg add iret pop pop cli sbb out dec sub (bad) test insb jp ret dec jle movsb incb jp enter adc (bad) scas fstpt mov jnp push out fsts mov out stc push jb push cmpsb sub fwait add pushf lcall push sub sub test outsl loop aam imul adc cli pop movsl (bad) jecxz cmp andl mov push out cmpsb or inc dec ljmp xchg popf jg std das add in jmp cmp push bound mov inc jp adc adc xchg add push mov push xor inc mov dec dec rcl mov test (bad) mov fidivrl lock xchg int stc cli jne xchg xchg lret and inc sbb out stos loope xor jecxz in jns or jp jne jl int3 sbb sti cmp jecxz mov cli aad sbb pop inc aas fwait mov cli aaa jo mov sbbl lods jp push std pushf lock sbb xor fidivr inc mov cmp inc jp mov mov or (bad) mov xchg mov add xor mov cmc xor cmp sbb mov sbb jp int3 data16 sti std lea mov das fisttp push push dec icebp cmpsb jnp xor call (bad) aas out push stos push in dec mov push jp test or dec xchg arpl std jg out (bad) mov nop loope insb jae cli push (bad) jp jle pop imul pusha fcoml in (bad) gs sub sahf cmp icebp das dec pop pop popa push push inc in insb test stos adc and push adc lods inc (bad) jno jnp cwtl pop pop cmpsb sub jge (bad) ljmp dec das xor mov jg aad jl jp insb lret mov dec jne aad mov inc push jp xor lcall in (bad) or inc inc pusha stos loop fidiv gs pop cs nop jle pusha popf ss loopw hlt dec jl and pop and aaa sti arpl lea cmc dec xor mov scas inc insl xchg mov jge nop mov sbb mov xor fs sub jl jg inc cmp hlt out dec (bad) adc mov or inc xchg and out cmp ror mov jae cmpsb adcb jp out xor jne or jecxz in pop cmpb test mov add lret jne lds hlt cmp add xchg (bad) hlt xor scas and imul ja cmp and iret cld fldt mov nop loop in ds jg jae mov lock lds and or fwait sub push (bad) dec imul scas ja jne popf sub or lods and inc out mov jne imul sub mov or jp out sbb lock push outsl mov iret stos and dec into push jo (bad) push jp push mov sbb cmpsb dec fs cmp ss jae inc push push cltd lcall sahf jne jno sbb xchg jmp insl xor addr16 js sub or inc ret sbb pop (bad) mov cli push cmc aas dec out cli (bad) stc sti fcmovnbe insb test cld xlat push jae mov and hlt (bad) fstl sar mov jp imul jne insb dec adc or fidivr cmpsb jb xchg subl mov or es jp or fnstsw mov sbb addr16 inc xor sub xchg movsl xchg xchg xchg pop fwait cwtl adc pusha push lds push xor outsl psrld lods cmp test and jmp cmc ds dec repnz xor cmp in neg mov inc (bad) and xor out push pop xchg mov icebp rorl jnp jnp push imul jp or push adc insl mov jae (bad) loopne cli popa jb mov mov jns stos (bad) mov popf jno mov outsl xor cli jp add jnp jnp xor xchg mov loopne xor rorl leave fistpll hlt or sub dec ss lea pop bswap sti in mov jo push add add (bad) (bad) das or test dec dec mov and ljmp in push (bad) jne enter movsb loope lcall adc (bad) repnz jbe es mov cmp call push iret add clc jp stc add test sub push xchg and push repz inc ss sbb lea mov jp neg out test or fsubr sahf fiadd jnp push sbb xchg cltd fisttpl sub ret and icebp test push imul fisttp gs loope lcall jo loopne lret adc jp inc mov xor inc mov pop inc outsb lret mov cmp dec mov xor aas out daa add insb add gs sar jnp ss roll ljmp xchg mov sub inc xor imul push mov push push fnsave out aas test pop mull clc cmp mov add adc mov jp fcompl adc stc out push and iret gs je loope add add gs lds adc mov pop add lods mov push sbb add fimull mov aad imul pop pop or pop jbe jae add (bad) push jnp jns adc je mov cmp (bad) pop lods jp mov mov inc sub adc cmp into jno loope test pushf fisubr or js sbb xchg aas test aam jp imul jp dec data16 mov jb jp fs add cmp insb test mov pop leave jnp (bad) pop jnp lret in sub es ljmp leave stos sarl loopne cli xchg outsl call scas jp cmp xchg mov jle aam movsl das mov sbb dec jp add mov jle fbld adc jp adc lcall pop jnp addl cmp and (bad) sti jns cmp stos test xchg cmc jae adc movsb (bad) push iret (bad) adc inc push mov add cmp lds fmuls enter cmp int3 scas (bad) shrl int3 add imul insl arpl test ds test mov dec adc inc mov aam ja movl mov push repz or enter inc out xchg clc out dec sahf shll or fidivr or sbb inc shrl mov ja push push repnz daa add movsb xchg fwait arpl test outsb push int3 mov mov ja data16 mov gs push cld push pop dec movsl (bad) enter jo clc adc xchg adc mov in faddl stc mov rcrl popa dec (bad) sarb movsb cmp scas cwtl jle shrl mov jne test test aaa subl jb cmp xor (bad) mov xor cmp scas pop imul das ret inc mov dec movsb enter mov fs mov in gs pushf xor mov inc jo arpl stc jae fnsave dec dec mov mov (bad) ja imul sbb or add in ficoml dec lahf mov scas in or pop pmulhuw ja add mov sub xchg outsb dec out adc outsb add pop or xchg fiadd jo movsb jl ja dec ljmp (bad) les cmp cwtl cltd shll sub (bad) mov and sbb clc dec inc mov jns mov clc fnstcw mov lcall sbb popa out or inc jp mov xor js add ud1 mov mov stc dec cmc push xor sub jp adc sbb mov ja lods (bad) hlt lahf xorb (bad) jp enter and jne (bad) mov jmp sbb pusha mov or add popf jnp leave mov insl add cwtl cli repnz jmp ja outsb xorb (bad) arpl or clc mov lea popf add in and mov xlat cwtl lods cmp jp push xlat cmp jl push jp sahf push out add scas aam pop fmuls repz xchg clc jp xchg movsl or jp jb add jp cmp out sarl into jno pop loope arpl fsts jp jge bswap jp cmp add shl jne jl or cmpl add cmpsl orl and cmp lock test sbb mov fcoml inc jnp popa shrb mov popa dec xor inc scas out imul repnz sbb cmpsl dec mov jp sbb mov dec sub repnz fdivs cld je scas jle mov pop shll push pusha loop xchg cwtl jp rolb enter and movsl xor fwait js aas push pop cmp in loopne jo fbld jnp xchg imul cmp add fmuls inc or jp cmp aas xchg mov mov add jmp es into ljmp test dec shll ret fldenv cmpb test pop in (bad) jp (bad) fstpl cld lcall push jp xor push adc ficompl ret jo loop frstor push int fs mov push mov shll ja xor testb mov int jp xchg dec mov jg fbld in sub sub jle out pop push cli and mov push cmpsb (bad) jbe popa inc jecxz mov push jb mov sbb aad xchg loop mov jp and jmp sub xor insl insl outsb or ja and jmp or fwait daa push ds jae call int3 scas imul jns jecxz sub jno push pusha mov inc push cli lret adc inc inc scas cmpsb lods jp ja lds cld jne testl push arpl ljmp or lcall push sub jp mov jl jp dec out xchg and dec jmp lret jb sbb popa lcall cmp pop push jnp mov ret cmpsb mov jp pop sub cmpsl mov sub sub (bad) push fwait and mov arpl inc push jp or mov je mov jae mov cli cmp jns jp das insb and into cmp mov sub lock lahf imulb mov jp dec arpl fdiv sbbl imul outsb pushf jp mov sbb sbb dec mov ja mov inc mov cmp aaa fs lret (bad) bound push sbb out jmp stc and jp decl ljmp dec jp mov or insl (bad) in daa jg scas push ljmp mov in jae (bad) mov sbb sbb insl inc outsl rcr push cmp jp xchg mov cmc jns ds aam test dec call jmp (bad) jne cld mov dec (bad) cmc sarb stc into imul jmp xchg fisubrl pop mov (bad) adc fisttp jmp mov push mov xor push fcmovu stc pop push jp (bad) shrl std es ret lea loopne mov cmp loop xor test popf jp pop mov jp imul sub hlt jnp,pt push jmp dec sub mov jmp lret cmc daa jp inc dec movsb xor inc insl push lods mov movl push inc push or addr16 ficom aaa cmp jge jp mov add xor (bad) mov xor jo xlat pusha inc fadds cs test imul ror cld fisttpl insl add cli mov cli adc jle ljmp mov add shrb outsb daa insl fucomp push xchg data16 and rcl sub or hlt dec xchg ja pop push lret pop xchg (bad) dec ss loope jb jae dec gs andl pop or adc jg test pop sub push inc cmc pop stc mov leave cmp jbe xor movsb adc jp mov je lret daa or ficom jae ss hlt and add pop in nop loopne mov cli pop shl or fstl das jne inc aaa mov mov xor mov lahf pop jg mov loope js roll sub sahf jp shll inc mov mov xchg jp adc lret jp sbb cmp jp les mov jp cmp inc mov into imul pop (bad) sub add (bad) repnz loopne sub (bad) cmp inc sub adc aad mov sub sbb jecxz jp xchg jno sbb dec sub adc call xchg lds jp cmc xlat shll pop jle dec cltd dec pop aas fsubrp dec mov pop jge adc mov ljmp add xchg gs dec movsl pop sbb daa push ss push sub leave stos and (bad) push daa mov mov ljmp sbb and mov mov xchg push gs and iret push jp lods push mov rcrl jbe dec pop pop popf clc jp pop stc fisttpll push jp xchg mov jmp push test imul mov jl jge iret xchg xchg jp outsb dec xchg popf ljmp or ret jb sub insl mov mov ss rcrb addr16 in pop and mov pop jbe dec pusha xor movsb xchg sbb jns lahf mov sbb push push pop rcll fwait insl jnp outsl insl ss xor or pop stc popa dec xchg mov xchg enter movsl dec ret or lods in mov jae movsb xchg and subb mov stos loope push or add cmp pop sbb jne xlat jns lahf jo jae je sub loop jecxz mov or out inc lea decb mov test inc mov stc aad adc xor jp jl pushl test es cs repnz mov add fwait cltd jmp jecxz jp inc jno lods pop pushf jp dec fs and pop mov int ss addr16 fs jp lea loop push popa and fdivl stos dec cli adc ss loopw cli mov push shlb in xor push adc pusha mov ret jp dec cmpsl adc pop fucomi push inc jnp jnp sar mov jne xor scas js stc push loope repz je and (bad) pop push imul das xor pop mov icebp ja adc mov icebp (bad) xor jl lods aam jp push xlat dec inc outsl sarl add inc repnz fistpll jo enter add jb sbb rorl pop imul cli jbe jno ja mov insb movsb into jl insb hlt lret popf imul scas cmp pop sahf push jbe (bad) mov push mov lret repz movsl jp test jl sub jnp mov fbld sub jne ret and sub sti js xchg call shr jp xchg les pushf jne adc daa jbe cli cmp xchg pop jp lea imul insl or test imul xchg xchg fucomip jp add lods mov lcall or fisubl mov jns (bad) sbb ljmp sbb pop pop pop mov fs inc in or mov adc push (bad) jbe arpl (bad) imul jnp fistp jle inc pop aad jns dec mov jp xchg xchg clc and imul and js push pop fistp cmc dec jae repnz sbb adc std mov mov stos xchg fdivrl outsl jmp out mov mov sbb int xchg outsl gs mov decb movsb lea mov xchg mov xchg loop cli add push xor cmpsb fcomip add mov (bad) pop (bad) add sti mov fwait adc pop push aaa bound jae xor das or xchg fst mov xchg jp unpckhps jmp icebp ret xchg cmp lock xor push or hlt ljmp dec bound push xor repnz push test jge xor lods mov jg pop (bad) mov xchg push jecxz cli and negl mov loop rolb das mov ret sub lods daa dec cwtl repnz je mov sub in cmp inc pop adc std imul cmp sub stos pop dec repnz xchg pop xchg cmp mov ret into sahf (bad) jmp jne pop icebp cmp pop jae imul push jle jp pop push bound and (bad) int3 loopew fcoml ja dec sti lea cmp xor cmp sub fwait lret aam jbe lock sti cld inc outsb inc jp mov jg cmp stos movsbl xchg or xor sub push mov push dec inc inc jp mov adcl jp jle test add int3 out pop insb jno or xchg lock out jp dec outsl enter out jp inc cmpsl or (bad) cmp jne inc out idiv cmp push in clc jp leave inc mov aam movsb insl (bad) lods in and fdivl cmc aas mov cmp in fnstenv movaps push es into loopne pop stos xchg lcall or cmpl or cmpsb cmc stos push inc jg fwait loope in stc insb jae sub push inc push movl jbe sub lret call jle jae in shrb fistp leave popa in int jno daa lea push out adc scas negl mov cld add data16 (bad) (bad) push insb add stos or ss mov sbb mov push cwtl loope (bad) sti pop lret insl xor dec test xchg or dec adc lods jne cmp (bad) push jge loop pop repz popf mov in mov jo out dec test jnp cmp icebp daa cli mov lds pushf arpl int3 in dec add adc sub xor push lock cmp sbb movsl or pop sti cmp jge imul cmpsb std and ja xchg (bad) push mov sub xor sbb push mov rorb sarb jno push dec ss sub mov pushf andb dec cld faddp and cmc loope cmp ret pop mov mov hlt pop popf fdivrs insb stc xchg hlt push aas jp mov repnz jb movsl gs jecxz je (bad) add mov in fwait les cmp cmp mov mov and sub insl jp (bad) into imul mov xchg cmp jp push repnz mov add imul pushf jp out or mov or iret jo testl mov push lcall add pop aam mov pop and dec mov lods and cmp xchg in jg jne mov les scas lret add xchg andl xor sbb pop stos inc jp sub xchg jp cmp mov mov cmp (bad) jns and sub add mov fnsave das js imul cmc cmp iret add cmpsl cmp jp lahf (bad) (bad) sbb jnp std cmc xlat jp push bound add ja fimul loope xchg push stos mov add cmp pusha dec mov ljmp push pop xor jnp fs jp xchg insb (bad) sbb jbe jp (bad) sub dec and jnp push fcmovb lret rcrl daa add and xchg mov mov rcll out jle rcl xlat daa inc push popa test lock in add or mov das and push gs mov and inc ja repnz (bad) icebp inc sbb pop insl hlt lret leave sub adc lcall pop ficomp leave inc mov jg cmp rorb dec into and xchg jp xchg jge or pop sbb mov cltd ss pop lea mov je rclb inc ret and jp push mov call cmp stos (bad) lcall xor sbb push lcall jne mov sbb jp dec sbb icebp ret push adc mov test (bad) repz (bad) idivb inc imul xor rorl imul mov iret jno imulb jg test stc jbe call push (bad) sbb and push mov ja or xchg enter push jp ss xchg and cli shlb lret sbb push mov xor test cli xchg insb jp enter cltd shr imul ja ret jp push xchg mov sbb jnp cmp mov mov jp daa (bad) out pop add xchg push hlt mov cmpb mov dec or cmp cmpb sbb xchg cltd (bad) cs push popa dec sub jae dec jnp pop pop cmp jp xchg arpl add adc cli sub ss cmp lock inc mov cmpsl sbb xor xchg in xchg ja jp mov jmp xchg jp dec repz test imul add xor loope xchg mov cwtl mov mov jp aam mov push sahf outsl das js sarl push pop or push out lods lods cmp test push inc movsb xchg insl jmp pop cwtl jne adc jp jbe mov iret mov jle jne mov sahf jne shll add mov jle and jne inc mov lret test push in std jp adc cs cli sub clc cmp push dec mov lds sarl gs jmp xchg addr16 jp test cli in and inc mov push arpl mov mov repnz jp in dec jbe call adc js test mov addr16 gs adc repnz cmp cmc adc out pop inc (bad) in fdivrl and inc popf addb movsb pushf es inc clc cli jnp cwtl cmpsb or adc sti inc (bad) lock inc dec or ja mov jle sti inc inc mov scas push sub dec lods arpl movsl add jg adc aaa (bad) inc jb add shrb add sub mov clc repz mov sbb fmuls hlt cmp jle cmp (bad) out pop stos xor xchg sbb std mov pop sahf mov jns ja clc jnp lea cmp xchg addr16 arpl cmp xchg cmp and lock or addb mov jmp fisttp test in jb jp mov adc xlat ja popf push inc mov jp imul (bad) sbb out lret mov sub jp stos add popa xor jp jg loope insb out and hlt mov jns adc push and dec in cmp stc jp mov fstpl inc repnz mov (bad) ja or aas mov insl mov lock fidivrl adc daa shl ret cltd out shll pop inc jae xor ss adc js lahf adc jp test inc fcoml jp mov aad (bad) cli jp stos (bad) stc movsb jmp aas jne cmp jne mov add lea idivb cld jne inc jp into dec in dec loope ja adc xacquire popa jp or jp jae (bad) call aam xor pop jne adcl sub jp aam aad mov cmp lock xchg stos or ljmp jp fisttpl xchg loope cli pop mov or xorb inc jp cmpsl xchg mov (bad) mov scas fnsave jp pop int fsubrl ss cmc std fbstp mov push push inc (bad) repz push (bad) jp inc add xchg jge jp das push out pushf xchg jnp (bad) pop and stc std sbb lds sti jp mov aam inc jp jnp mov pop imul fidivrl cmp pop xchg jp das or enter std xor mov mov in lret dec inc por push jle jnp movsl mov pop ja jg int (bad) outsb inc inc out lea jg xchg adcl imul ret xorb pop xchg cld sub xchg push inc pusha aad push adc xchg insl cmp out and jnp (bad) pushf dec imul sub idiv xchg jbe fdivrl pop push push fwait scas pusha sbb and mov mov xorb jns cltd test les stos inc (bad) (bad) lcall adc mov add pop loop pusha dec jnp and jnp inc or sbb mov dec repnz outsl dec imull test sbb push imul loope cmpsb dec add xor push jno scas mov nop rcrb lods sub pop sub add (bad) sti ja cmp push xchg jge mov inc rcll ja stos out mov pop jp sub dec mov sahf dec xchg adc sub adc add ret stos add dec inc movsb ljmp mov xchg sbb call js decb pushl add aam dec ljmp sub mov pop or fs icebp out loopne push or into mov push add jp mov dec mov jl add cli dec xor stos add or movsb nop ljmp sub fs sbb das mov push decb push jmp pop dec dec jle pop pop outsb mov popa sti les imul stc push inc fistpl cmp lods sub pop icebp sub sub mov and jp jecxz jo cwtl xchg fs iret int jp stos call cmp pop outsl push cld nop dec xchg and and sarb subl sahf ja movsb (bad) cmp xchg mov sub mov push cmp cltd cli push add jae aad in push jge xor cld adc loop les xlat add xlat add lcall ja stos xor int3 out xor hlt lcall jne cmpsb cld lret je lds push ljmp stos mov into lcall sub and sub fisttpll lds pop jnp pop jae cltd sahf mov (bad) repz sar mov rcr fs inc dec repnz push jne ja xor push inc jl jnp pop mov or clc ljmp jne fimull push add cli jne in add out push stos xchg xchg stos repz jg xchg jo psubusb jno push push mov (bad) out iret lods push rep js stos cld mov push mov jmp xor mov sub mov cld mov sub jl aas fwait jae fcomp (bad) les push int3 dec xchg cmp adc (bad) loopne and mov jge lea cltd js add or pop lcall insl cmp stos (bad) and add adc incl jmp ja movsb and jg cltd movsl xchg mov les adc aad pop sti sub mov nop sbb and insb push pop xor jne mov insb jb dec or jbe adcl mov ja sbb addr16 sub push jae (bad) jno pop dec hlt sub imul mov lcall jae pop mov aad cmp dec int push fbstp (bad) cmp jge mov mov sbb sbb pop xchg and or aam push mov jno push mov out push add cmp addr16 jne clc cld xchg dec test xor mov mov mov fwait jae or pop in (bad) jle insb stos out pop pop iret jle pop lahf sub sahf adc jae xchg add clc jne adc into int3 out aam add xorl jae out stos inc cli es xchg gs pop addr16 pmuludq or stos ja inc cmp mov xor xorb orl arpl gs movsb sbb xorb test lret push cmp add pop jns sbb xchg fldt test std jbe aas mov jp sahf cmc mov enter (bad) mov pop popf add insb cli mov jp mov pop stos lock jp ss popf movsl sti xor jp out loope mov in inc jp dec inc icebp rcl imul lock mov and mov mov outsb pop ljmp lahf int3 repz mov dec ja adc inc xor outsl (bad) xchg sub out dec jg mov or cmp push vhsubpd xchg (bad) cmp xchg stc jp push loopne dec sub add and stos pop stc cmp clc gs cmp fs sbbl cli and mov sub int3 scas jp jecxz cmp pop out jle dec mov lcall je cld jb cltd push mov arpl jae inc sbb dec jp (bad) fist aad test aaa (bad) std stc imul ficoml lcall sub dec in jl int aas rcr pop mov push and jp mov add mov jp fcoml out lcall ljmp lahf pop mov imul loope inc loopne (bad) jp test mov jp int mov or mov dec inc fdivrs push test push pop xlat in fisubl es inc jp dec fnsave decl xor and out xchg xchg sub or jmpw mov les add nop jae mov and std inc sub jge lahf adc movsb repz nop mov jne pop imul mov xor jnp sbb xor loop jno pushf jle jmp cmp mov repz cmp add inc fistl jp aam xor jp xor mov cmp mov out jmp (bad) notb arpl scas imul jne push imul pop push sbb xchg sub mov in cs push mov jge push popf ret aaa jno xor pop mov movsb fimull and adc fstpl inc ss add jp push mov jne push sbb cmp jo jns mov sbb mov outsl inc movsl jp mov movsb or out pushf xchg pop xchg mov in inc mov pop ljmp xchg mov orl pop dec fwait xchg xchg (bad) lds ss jle ljmp je cmp clc (bad) push push xor sbb neg int jge call push add sti mov and pop push jmp pop mov lahf insl jno fldt aad and push ja rorb jle and fcomps cmp sahf mov jp gs add inc mov jnp jp test xchg pop lea pop in popa fnstcw mov fcomi or popf imulb sub and (bad) pop (bad) push jecxz hlt pop mov push jnp xchg adc jnp adc ret and and scas ror xchg jp xchg loop sbb lret sub int inc dec out (bad) insl push popa inc mov jnp and lds das into stos and shrb leave cwtl sti loope xchg fdivl cmp jp outsl dec fisub inc fcomp xorb push lret jne dec dec push lods daa xor push pusha xor sub cmpsl mov adc cli mov iret jge push inc sti jg push inc enter and xor andl scas push (bad) mov mov std or xlat out into dec popa loopew jno rolb jb mov jp shlb repnz pop aaa add mov push imul je (bad) mul lods cld push xor cli (bad) adc jnp ret cmp inc mov sti push insl out clc jp jl test imul adc or and jp or aad jp inc mov lods fistp ljmp pop mov std push pop lcall insb add and jp repnz inc mov stos mov addl push jp cmp pop fcoml inc sbb sub jp (bad) mov stc cmpsb cmp mov mov (bad) push mov push xorl cli int3 loopne daa mov into push and jp ja (bad) addr16 shll test sbb and sbb sarb mov (bad) mov lahf jo xchg inc repz jp sbb iret mov xchg cmc lods mov data16 leave dec adc mov jp mov cmpsb fisubl jp stos mov rol sub ret fsubs jno ret sbb jae add (bad) arpl inc jp mov mov pop pop mov jae push movsl jo mov pop sub fs mov cmpsb lods jne push cli adc add adc jne lea mov jp pop or cmpl mov test mov (bad) fnsave sbb jg hlt movsb mov jb loope and pusha adc ds mov inc dec lcall inc jg outsb or or xchg testl mov shrl jb roll lret lret lahf int xor mov sbb jecxz jns mov jp (bad) mov cmp dec mov andl inc cmp (bad) xor pusha clc hlt movsb addr16 arpl mov push sar loopne lods push pop scas jns sub dec movsb ret (bad) sbb fcomps lret cmpl mov pushf jp inc xchg loopne xchg mov adc push mov loope mov aas push fs xor pop mov pavgb insl xor (bad) pop mov fld ss jb insb dec mov stos dec outsl add jp inc dec cmp jp popf hlt and pop andl lds add cltd jnp fidivr cmp jne inc into jns xor adc pop stos dec ljmp push jp cmp cli pop cmc mov dec jp cmp outsl lahf into movsl es or leave (bad) cli jmp xchg inc push out mov jne loopne lods lahf aam cmp (bad) push scas (bad) mov cltd sbb xchg fdiv lret mov out imul dec and mov dec jp pop pop pop xchg adc and jb mov jecxz mov xchg xchg movsl dec cmp repnz ss es inc mov scas xor lahf lcall push sbb adc fs jp push lcall les sub mov jp and cmpsb dec dec sbb das repnz das test sti jp call rcrl or push movsb and call mov sub rcll or iret xchg sub push cmp int mov xchg shrl and jne rcl stos (bad) mov es movsb add daa outsl stos and cmp xchg jp fisubr or iret repnz and sbb mov pop popf repz jp pop out cmpsb stos nop sbb repnz adc subps pop jbe movsb dec sub jne int jae inc rolb pop push pop popa ret mov cmp lods shrb loop loopne ret cmc enter mov inc mov or dec test mov gs aas jp stos cmp loope stos pop loopne mov arpl xchg add stos fstpl push lahf mov (bad) xor push and pop sbb push repnz fidivrl shrl sbb dec scas mov push insl pop aad jne in in add add dec movsb or popf xchg jecxz jp jb sbb not pusha adc cmp int3 add flds mov (bad) mov lahf test pop ja arpl xchg iret fnstcw adc dec mov jp flds xchg xchg push int pop cmp roll (bad) cltd ljmp pop lock mov cmp in pushf pop test xor inc pop and imul cmp add das jp pop js dec test pop mov repnz ret imull sub mov (bad) in outsl stos xor lret jp pop xor cli aas mov lods out shrl pop popa bound enter popf push lcall int3 (bad) sub ss ja mov pop (bad) lret add popa fadds mov sbb scas shl jae stos sub repnz xor add lds mov xchg mov movsl cmp in cmp pop fs insl int3 xchg sbb jae mov mov rcrl xchg scas mov orb out lea movsb mov stos pushf nop cwtl xor cltd pop ficoml add and out pop fs xor sahf push pusha inc jmp mov push and scas jl arpl push pop into aaa and pop inc sarl lret inc push je in xchg roll jl adc pop jne das mov sbb add inc insb mov (bad) std dec lret pop jnp mov sbb fildll cs pop dec push add pop push pushf pop stos cwtl and sub adcb fsubs dec add lods outsl subl stos cli mov xor push clc jns push pop dec test push cli sbb and stos insl icebp les scas cmp stos xchg sub out dec mov mov xchg (bad) pop add sbb push inc movsb or adc rcrl sub cli pop es in mov mov cli jae movsb faddl leave jnp pminsw cld cmpsl sub jo (bad) div xlat leave subl jae imul test push inc (bad) pop neg lea ja push lock je inc in fwait repnz cmp insl fcomps pop repz cltd inc out rolb push adc pop mov mov mov pop lock mov lret fldl xlat imul push sti stos add or mov and push in popf xor xlat iret mov test out sub sub mov (bad) jne jle imul adc gs rsqrtps sbb aas pop jge jbe ljmp jmp imul mov ror push xor dec imul nop and test inc out ficoml sub les nop sub (bad) ss aas iret loop push negl out (bad) (bad) fildll in into jl push mov push fdivl adc sub test jp aad sub add jp hlt mov lret mov and test and popa xor rclb pop popa xchg mov je sub cmp xchg sub aas jne inc mov mov jnp dec sub test js clc mov push lahf jnp aam push popa and imul test shll mov sti scas mov jp xchg ficoml (bad) push jp addr16 inc stos xchg cmp mov (bad) (bad) inc repz jp jae sub sbb std xchg push jne and jnp call js xchg sbb scas jmp cmpsl xorl lret outsl pushf inc mov cmc dec dec cld sbb sarb pslld loop pop dec jp jl sbb jp add or ficom sbb pop mov movsl dec xchg add fsts call cltd lret stc jp push sub jp loope lds in dec or inc in into cmp sub (bad) adc lret imul mov and push mov mov pop cmpl lret fwait cltd ret xchg push enter fs push mov mov loop pop inc popa pop ja push shl data16 mov cmp cmp mov repnz aas insl dec mov mov xchg dec add popa sbb pop add fidiv cli xchg push jp mov loopne xchg push dec aam or xchg cmp dec sti adc (bad) mov stc ja fsubr clc sbb inc in pop xor jne and fs push test mov lds addr16 jno jge fmul stos mov mov dec sub (bad) mov add mov inc sub test mov sub jnp fs mov mov add enter lcall add inc jp or int xchg dec dec jp test jns push push xchg scas ret test push (bad) arpl lret inc jp lods es aad orl push push push cmp (bad) xlat jmp lret xchg loop in scas popa jl dec outsl ret clc (bad) cli and mov fs mov mov dec loopne xchg jp lock lret ja lods mov outsb mov (bad) jne push cwtl ja cmp mov push pop inc cli or mov jae xor mov testl pusha jno jl mov cmp jle jne add mov in mov ljmp lcall data16 rcr cmp cmp imul lds and pop or jno mov xor push and aad and sub adc insb popf sub loope xchg pop jp,pt sub jno mov adc ja insl fbld iret dec das sbb or rorl mov jp (bad) jl xchg (bad) mov jp nop pusha loop push je insl cmp xchg dec aad fidivl jp,pt mov mov ja sub mov xor aam (bad) jo (bad) je clc shl adc cmp dec into cmp jp add loopne arpl scas clc lcall xchg or mov mov xchg jecxz mov bound lcall cli or xchg popa add scas add mov add jp out pop add clc shll loopne out mov and rorb pop dec mov xchg mov cmc jge movsb (bad) (bad) mov mov fwait xlat lods pop mov idivb pop mov mov lahf add cmp inc xchg or pop jnp ljmp push ss pusha and repnz inc inc cmpsl push movsl ja sbb sbb pushf pop xchg mov mov sbb push idivl fildl sahf mov and jno out dec sbb mov sbb pop jp cmpsl xchg ds sub ss (bad) fcmovne mov icebp dec lcall push dec lahf rorb cmp mov sahf js pop mov xor mov iret inc sahf shrl int int3 jp in outsl mov and adc mov mov jge mov (bad) cmp imul (bad) (bad) ret mov jmp jne add jp cmpsl add inc xchg fcoml test gs xchg sbb packssdw test xchg jmp cli fsubs bound cwtl cltd nop int3 (bad) xchg and sbb loop jle and adc mov cmp insb cmp mov es jp mov (bad) out pop push xchg mov mov outsl inc jecxz or and fdivrs test jecxz dec sub fsubr cmp fwait add jecxz stos iret jne mov push popf push popa xchg ss jne cli push or int mov sub adc imul cli bound push jne push push mov sarb inc pushf push fsubrs adc jno insl dec ret xchg btl in test (bad) hlt fwait push cmp cmpsb pop divl xor nop dec sub sbb cltd jp jmp sti addr16 (bad) pushl xchg insb gs mov dec dec push add dec inc stos iret xchg bound jg mov cmc mov hlt jecxz nop popf (bad) mov mov jp jne cmp nop clc sti adc push pop (bad) dec mov mov pop pop push jae icebp cli js mov inc adc sbb jp fistpl jle pop or push dec test inc lods mov addr16 imul mov xor push mov scas pop inc leave jmp jp add mov pop subl int jnp stc jns jne in xor mov mov inc xor jno and leave jns fimull ret hlt shlb and push and or jno fistl jmp and idivb dec mov xor add inc push add les lret roll cmp mov jp pusha (bad) mov jp je fucomi xchg adc mov int dec pop cmp es imul xor or add add dec fwait (bad) jmp jge jmp push jp pop jno push mov or xor adc imul cld rclb roll sbb ds xor jns cmpsl pushl jne stos mov aam mov cwtl jp addr16 jp xor jns shr out mov jp pop cltd and jno (bad) jp popa push mov jp sbb inc subl jp adc loopne sti stc cmpsl loope mov in out xchg cmp ja mov jo xor pushf mov dec jmp push xchg jp (bad) push imul jae les insl into lcall jno push imul adc aad jmp ja cmpsb stos negb aam add lods subl stos mov stos sbb shld sbb (bad) sti mov incl hlt in pop mov sbb cmpsl cmp scas rcl add add fst mov cli test lahf mov outsl sbb ficomp stos xchg dec cwtl mov sti mov push mov mov cmp push dec xor mov rcl cmpsb push ljmp sbb cltd (bad) xor fs stos popa (bad) xlat jp mov sub mov mov jo cmc (bad) pop xchg jge push stos jb push cltd mov inc xlat sti pop scas xor ds outsl clc sbb pop sbb adc push xchg adc or mov rol jo push add divb sub sub lock xchg lcall sub cmp stos lods call sti xchg cmp (bad) frstor ror cmc dec pusha ss inc jns data16 stos sub xor testl pop mov cwtl sbb xor insb lock (bad) dec push jnp clc cmp cmpsb fwait pop dec stc call into stos mov sub rol jp push and cmp out mov dec mov repz add xor pop aad scas mov int3 scas push fdivrl std ja sbb test hlt fs (bad) icebp jp mov ret roll dec pop mov jp xor xchg pop xor jle stos mov pop das in jp sti mov sahf xor push sbb push in inc and fwait leave dec jne pop outsb xchg lahf jl daa cli lea test sub dec loopne shrl out jnp push aaa flds mov ret push shll mov fistpll or subl cmp cmp nop jp test lds stos loope test leave iret adcl jp inc rep add (bad) insl (bad) ficom es rcr movsl add mov js and jg outsl add dec jecxz std dec inc add mov subl pop fcomps jnp loope repnz out stc xorb icebp jb jnp lods add cmp jnp and xchg insl (bad) mov imul (bad) fst xor pop (bad) sahf add push or jp daa sbb cmp xchg insl scas pushf xlat imul in std pop pop lret jge mov (bad) cmp mov dec jae lea mov xor or add fcomps fisubl sbb not repz jae xor xchg idivb sub movsb lret xchg divl popa push jns rol ret or cmp cli sub cmp inc mov mov add jp sub (bad) jl stos (bad) pop push xchg clc mov adc sbb push repz arpl movsb cmp xchg xor arpl fcmovu aaa popa pop fs scas out jecxz das stos sbb cmpsb push lcall sub jmp and sbb cmp xchg jp cmp (bad) in pusha push fildll mov add mov xchg sub pcmpgtw ja mov push dec enter pop mov push enter in xchg jae or stos fs stc sub jne,pn xor ljmpw pminsw insl out sbb mov ja and pop std call mov mov pop inc mov out cmp jp (bad) (bad) lret lea adc pop loope jp dec gs and pop push xor jo ret loop jns add jp ja mov pop mov jnp xor jecxz mov pop out adc mov cwtl mov gs mov pop jbe cmp mov sbb (bad) jnp (bad) jno dec shrl fcomps les aad out jp lahf sbb daa rorb pop jp je jno xor jnp xchg jo repnz jb push xor int xchg test jl mov mov jmp dec jp cmp pop pop fidivl mov ret pop push pop cmp or sub or inc in jnp mov xor and inc jp jmp (bad) mov stos ss ficompl stc (bad) cli push inc xor or mov mov (bad) leave sub insl cmpsb xchg add repz and cltd stc lock sarb mov jmp inc jae sarl loope sbb jp mov push ret inc jecxz xchg das shll mov loope xor mov in adc sbb mov jp pop pop mov (bad) jbe jae pop adc out das or and fdivrl (bad) jns aas push jp jno in aam ljmp and cmp and push sbb dec es or das pop sarl push mov shll jbe lock dec inc pop push out inc mov and add cmpsb (bad) jno or mov (bad) cli cmp xor mov inc jecxz and pusha push mov outsb inc jo mov mov jp xor mov xchg push jp mov jno out mov lret movsl jg push inc (bad) lock sbb repnz shrb jae sbb jnp adc jg iret movsl or mov rcll call jnp sub add sub xchg lret gs add jnp push xor imul pop and sbb jnp pop push cmp fcomps add cld pop mov mov pop mov or ret jne rcll das inc repnz int3 xor add jb imul jl clc xchg push adc pop sbb mov lahf sarl add sub (bad) mov jp inc aad cmp lahf fstpt fs insl shll jb jne std sub cmp adc nop pop mov iret int pop lret dec pop ds fistl stos cmp jle mov mov inc jns xor jl repz mov daa (bad) xchg fstps movsl int3 movsb xchg add cmp inc ljmp les dec rorl nop stos out ss xchg nop pop inc pop xor or ret sub jo push iret xchg pop data16 inc dec mulb cmp (bad) xor into xor aad (bad) sbb bnd xchg sti std stos gs out loop adc cmpsb cli fildll jne pop call xchg cmp cmp mov mov in and sar mov push sbb jnp inc pusha sbb pop addr16 (bad) std sub jmp cmp dec cli inc iretw fsubrs lods roll out (bad) stos stos ficompl (bad) xchg int stos push sub movb ret (bad) jmp jnp or push cmpl sub pop mov pop or (bad) cmp test in xor mov inc dec test jp push orl jne adc sub aaa out mov mov bound movsl push and mov pusha sbb fcoms dec ficoml insb mov es ss dec (bad) push jp add jge mov (bad) ljmp out ss dec jl mull mov mov stos jp es mov xchg xchg jge ja mov cltd and mov jnp jb (bad) push jne or ret aad push in sbb pusha movsb mov and sbb outsb sub stos in data16 xchg sub inc fdivrl jmp xchg add dec push or fs push lods mov mov pusha popa add sbb jecxz dec fstpt stos xor idivb pop adc aas and push data16 mov repnz jle stc mov sbbl dec dec cmpsb (bad) xchg insl jne xchg pop pop xor out push inc jae fs jp (bad) push xor aam imul mov (bad) xor sbb jle cmpl adc mov push lret fildl sbb mov lock cli aam aas lret jnp pop and mov jp nop in or test xchg (bad) aas mov dec in cmpsl mov jnp sbb jg (bad) push stc pop fcoms jp sbb nop (bad) jnp mov push (bad) (bad) fsts cmp dec push stos fnsave jecxz loop xor add scas add movsl cli aam pop dec dec mov inc sub mov cmp pop mov mov mov mov add sti adc xchg ret shl jp sahf xchg call jp adc mov mov jp mov std mov push jp aas push sti cmpsb jmp jae out mov mov mov mov dec lret outsl repnz sbb mov icebp jp je adc cmpsl adc sbb out jp jg mov dec aas xor call cmp adc mov lds xchg in movsl jp jo out les inc mov in add or (bad) nop jae stc xor push jp call ss jp imul mov sub insl or insl lea jmp sbb lahf jle mov xor xchg ja jp mov iret test test jp cmp inc insb (bad) adc pop cmp cmp cli aam adc aam sbb cli je jno mov fidivl dec jle pop negl xor lahf sbb jae arpl jne mov outsl jp adc dec imul shlb sbb (bad) adc insl lret xchg cmpsl fwait cltd je cmp fsubr jne movsb mov adc sti mov cmpsl (bad) cmpsb gs sbb push mov xchg cmp jl ljmp sub loop pop mov dec and int scas adc pop cmpsl cmp daa jae sbb jp mov (bad) push xor rcrb mov addl aas mov or sahf fisubrl aaa mov xorb mov (bad) (bad) jne lock in sbb add (bad) idivl fstl popa mov shlb sti jp push int cmp mov dec into adc int out leave jecxz jnp fldt sahf jecxz xor cmp ja cmc pop mov sahf out insl and test pop sub mov cmp lds jnp movsb in push fdivl insl scas add jecxz xchg dec jae fsts arpl das pop mov sahf add popa hlt icebp es fdivrl stos test mov gs xor pop inc cld arpl mov cltd jns pop insb (bad) dec sbb add jp cmc cmpsb int rorb fstps lret mov or int3 (bad) orl (bad) jp enter mov jnp ds jo iret clc pushl pop fwait (bad) (bad) out cli xlat xchg jmp loope xchg mov xchg andb and mov push mov es cld jp cmp push jnp fwait std jp lea mov push ret cmpsl pop ljmp push xorb daa sub sbb jnp lock push cmpsb les lds sub mov cs mov cmpsl repz int3 add lret cmpsl push lret and loope scas lods mov std push je cwtl clc int3 mov insb add push jno pop cmpsb inc cltd aas mov xchg cli and cld jp inc insb inc daa pop pop mov xor in jge jp lahf fnstcw push xor test add das sbb jnp xchg fnop aam inc jp pop adc mov (bad) xor sbb je jne mov lret dec dec cli push int push or rcl jle idivl mov fmuls jp sbb lods add fucom xlat movsb adc es xor sub sub out or sbb repz icebp stos jmp jp sbb mov xchg and cmp push clc jp mov lods jo lcall xchg jne popf xlat mov and daa jnp stos dec insl cmp mov sar test mov add push sti jns icebp divb inc std divl dec out (bad) jp cmp pop mov add xor lods mov jl push sar popf (bad) jo ffree lahf mov push add std fwait cwtl dec push loopne jae mov sub js sub out test lock xchg insb jno sub sub cli sub mov and test jne mov cmp push loope adc nop cmpsb mov mov mov in jmp mov gs (bad) cmp mov inc mov outsb xlat cmp push es lds pop mov xorl xchg mov xor add outsl js inc ja stc add mov cld jp dec (bad) aaa add addr16 ja push xchg push sbb jge adc adc fisubrl in lret ss mov push gs (bad) lods cmpsb sbb pushf dec rcll jbe xchg outsb push push aam movsb (bad) pop xor pop sahf mov sahf jge jno stos or gs jno int lock mov mov jl gs or xlat adc mov adc iret daa fidivl (bad) add int pusha jnp gs int arpl fildl push inc mov rcll and sub fnstcw clc jle jnp mov xor jo data16 ret movsb xchg sub mov hlt ja xor mov andb inc lds clc out jge ret cwtl dec jp mov jmp add sbb adc mov (bad) mov je sub gs mov cmp insl mov add sub jae jge int3 jp xor or mov xor lods sub push in pusha push sbb cmp pop addr16 xor mov xor push das jp enter mov jo and stc cmp mov ljmp jp adc gs sahf aad push cmp add je cmp mov xchg mov jge repnz push bound or mov cltd sahf outsl sub and (bad) lea ljmp adc or inc insl in sbb mov cmc xchg and mov mov pop aaa test add movsl int3 pop adc jp (bad) jae andb push sbb in ret jne add fsincos mov jne mov sahf mov pop int or sti fwait in (bad) test in dec leave xchg mov ja loope jl lea cmp int clc imul dec dec daa inc push mov lret or out ret scas sub jno or movsbl pop jo loope lock pop stos mov into adcb sbb push jp dec ljmp and mov js pop push sbb inc out xchg cmc sub jp stos into dec sub (bad) shrb push adc stos jp pop (bad) ja sahf testl ja daa les leave mov popa jnp pop nop ja sarl ret push add cli pushf lock jp stc loope (bad) pop aaa sbbl cmc mov sbb jb (bad) adc mov scas sub cmp (bad) jp cld aad fs dec xchg mov cmpsb lds push hlt adc (bad) gs sahf push push jp ficom cld xchg mov insb xchg testb or sti mov mov mov movsb jle mov cwtl cltd jnp sarb sub mov sub and add or dec jnp (bad) loop adc into pop sub jge out jp and les jp rol inc lods sub pop mov js pop cmpb cltd push bound and gs stc jge fmulp popa sub cmpsl pinsrw pop add sbb movsb sahf sbb or xchg das pop fs cld fsubr jae jae leave dec cmpb xlat stos std scas sbb and pusha fs sub ret mov or pop mov dec call cli int3 lods cmc jae jo rep mov popf fwait sub popw and jmp or jno shll jae shrb (bad) sbb sbb cld scas (bad) cmp fidivrl insb out jno inc call sub popa in and aas xor pushl push in ficomp xchg pop jp pop mov fcoml jp daa jle movsl push leave xor (bad) (bad) scas (bad) stos jg cmp jns lcall popa cmp fstps xchg add outsb out add pop jp adc fidivrl push in js jno test clc mov push sbb jp mov jno jp xchg xchg pop inc (bad) dec clc sti sub add shlb jecxz enter push jp int inc outsb dec aaa (bad) push cmpsb xchg or fstps fwait pop subl in popf pop sbb (bad) ja sbb ja mov (bad) neg cmp adc mov pop ja fsts icebp dec pop es test cli and mov std dec addr16 jp add inc insl imul addr16 dec mov es dec clc insb dec cmp cmpsb imul and and mov cwtl daa or sbb add out push popa lcall xchg or jo mov shr mov xchg mov clc cmp lea jle test adc enter std je push xchg into and fdivr orl mov mov jno (bad) mov push jnp lret lcall rorb push dec lret pop imul cmp xorb iret dec in idivb dec pop aad add mov inc mov js gs push add lea sub fistpl (bad) aaa dec jne pop mov sbb je cmp ja jbe iret mov jb rcrb xchg enter dec int3 and mov mov mov xor push jp xor mov push arpl jge sbb push adc lcall repnz rcrl sbb cmp jle mov scas fisttp or mov shll add mov sbb mov sub xchg and repz cmp mov int3 mov add mov bound roll (bad) or test stc lods pop ja in sub push aam mov cs fwait push cmp enter lret jp push bound sub sub ret jp mov sti cmp inc out sbb sub cmpsb jne add pushf pop dec jmp mov mov push sbb arpl mov xor jp jnp jecxz cmc mov movsb pop sbb sbb xchg cmpsl xor sbb mov repnz cwtl fist pop mov push jo jp lds repnz dec popa cs ja mull nop mov jp (bad) lds mov mov jp es dec pop out push and aaa popa sbb sti or sbb adc pop mov sahf mov loop mov xchg cwtl gs daa ficomp in loop idivl sub aas mov mov aas inc pop sbb cmpsb insl rcr and pusha sti mov push jp lea punpckhdq jne jne lds in cmp jp pushf pop cmp push or aam jmp xchg mov push push ljmp in popa or mov stc jno cmp xchg push and arpl mov cmpsl jno cli iret inc ret lock jg aad stos hlt jns push fsubrl arpl sub jmp and inc and movsl das jecxz push pop mov adc sbb cmp fild outsl and mov pop mov push push loopne xor jp push aam data16 push lret jnp jns xlat pop adc iret cmpl jp mov jl and mov es cmpsl call ss push cmp sub out or loopne (bad) lock jp cmp pushl xor sbb popa enter jp inc sarb sahf sbb add adc call mov xor and into pop fidivr stc testl sub jne incb xor lods jnp std lcall repz sbb jge sbb mov fcmovbe cmp mov sbb shll stc and mov cmp out enter fsubrl cli mov mov ja outsb jns xlat pop mov and adc xchg sub jp mov pop ficoml sub (bad) mov call cli mov notb arpl xchg fwait jp test mov push xchg fidiv push sub daa ljmp cmp mov movsb sub jmp les fucom stos cs gs imul fnstsw lods inc sbb xchg (bad) imul int pop cmpl and push fsubs nop add enter aad lret mov or loop dec push scas inc pop push lea xchg clc pusha push popf mov fcoms mov add sub pop push insb pop and stos loopne mov movsl xchg or stos lea push rorb push in jno loopne or mov push insl sbb mov dec jp enter cmp sub or push and cmp adc repz xor stos jno out pop popa mov jnp mov push test rcrb mov cmp out repz jno,pt pushf cmp jle add shl ret shl pusha mov mov pushl add sub (bad) mov pop in sub pop mov je cltd adc xor insl mov je add jp fprem1 daa rol xchg inc std xor jno cli mov test lcall lea ret popf scas push mov lods jnp push stos pop pop xchg xchg mov xchg out and fcmove scas jp sub mov jp xchg sbb jae stos iret jp test adc (bad) jne das xor cld fild sub sbb jne and jg push scas dec rsm sbb push je into pop testb je mov out lea leave mov test push xchg lods jp stos mov enter aas push dec int cmpsl mov (bad) push (bad) iret sbb jg jg flds cmp stos je (bad) js jne scas add jo sbb ds popa adc fcomps adc and mov das sub int3 fxtract movsl and pusha iret leave pop xchg lahf sbb pop pop das (bad) test (bad) pusha jnp je cld push push add xor push shrl movsb adc push cmp addr16 jg ret push imull sub pop neg xchg js cmp xlat cmp cmp add or cs aam mov dec mov xchg inc adc or mov clc ljmp jg das xor in push mov jnp stos jns adcl es mov jns stos aad or mov inc fs repnz lret mov (bad) xor movsb fild xchg cmp sbb roll jmp in fucomp sub mov ja insb fwait ja fwait test cwtl fisubl sbb mov lret inc and mov jg cmp stc sbb int fsub ret and push js das sub aam stc xchg and push or cmp mov stos fbstp aas fstp daa (bad) jbe imul sub iret stos mov mov data16 es lret test push cmp lret mov lret push xchg sahf mov dec outsl or mov popa inc xlat mov in les mov xchg lds psllw aaa imul pop jle push addr16 add sahf xchg jp xlat bound mov nop jmp sub out ficom mov (bad) mov cmp mov mov (bad) fstps push popf jg cwtl les sbb fnop dec mov lods enter sti cmp scas mov insb stos jle cmp test lret int out add mov and nop jp jbe xchg movsb jp fsubs test pop idivb push sub rclb inc mov mov aas cmc cld (bad) clc popf push jl and lea sub jp mov jp mov cwtl loop pop lock lcall inc jl mov sub jp js mov fdivrl xor jp js mov adc (bad) or jp xlat pop jg mov jle pop cmpsl mov fidivr out inc in ljmp inc pop fistpll in je xchg mov pop add and ret jmp dec enter jno sub dec cmp out lds and inc xor inc in aad push sub cmp add hlt mov jmp (bad) fdivl sbb into stos jp divl mov cs lret and mov cwtl jp push push outsl int3 jp xchg neg les fcoml sub adc cmp in inc add or xchg mov popa bound xor add es sub mov aas mov mov jp inc not xchg pop jae repnz pop cltd jge push pushf stos jp sbb fwait mov jne push add movsb repnz add jp mov mov inc mov inc gs iret push adc call scas aas mov cmp mov lds sahf dec pop add mov in add ret xor int3 enter mov jp rcrl cmpl into cld mov cltd cmpsl push int mov das jne sub addr16 jecxz sub divb jbe lahf fwait je (bad) push dec push cmp pop cmpl not jp loope mov jp xchg (bad) jg push fisubr sbb es test jle mov add (bad) mov add bound fsubrp mov xchg in imul jp cmp leave imul pop sti mov cwtl pop cmp sarb inc adc pushf push adc lea dec xchg jnp xchg pop sub je dec xchg xchg lods jp out add daa gs imul cmp lret repz test jp xchg xchg in add sub sub or cwtl mov fdivrs xchg and sahf ret clc ja (bad) xor jne (bad) mov xchg xchg push loop out pop mov (bad) or leave cli add xor das xor pop lods jp inc daa (bad) cmp test (bad) jb jp ret dec dec das jl push mov (bad) mov cld hlt jge loopne insl dec pop repz clc jns sub arpl fwait (bad) jno and push xor mov inc ljmp fistp insb pop pop mov in ds xchg cli jmp xor or jae jne inc jnp and or sbb push push pusha cmp cmc mov (bad) jmp (bad) xchg sbb lcall and sub gs or mov jo mov jae push xor xchg jb xchg and pop pop or add dec sub xorl pop sarb ja imul xchg cmc scas ret call jp or and mov jae in sti gs cmp xlat inc std mov lock sub (bad) in ljmp std xchg push movsb (bad) jp mov ljmp xchg mov jp push or sbb rcr repz adc imulb pop pusha jno jle push subb lret lret cmpb cmp pop cmp mov std push mov cmp xor pusha push and or cmp push aam cmp aad (bad) (bad) pop insl rolb lret repnz cmpsb push out sbb sub movsb (bad) fwait arpl iret cmpsb in enter movsb pop movb inc out and in sub (bad) cs movsl daa adc sub shlb repz leave aad mov pushf fwait add incb cmp jmp xchg jae,pt xor adc stos jmp jae ljmp repnz mov cmp jbe xchg stos lahf mov jns jb dec dec mov jl pop sbb js cmp dec (bad) adc inc xchg fstpl nop jp mov test mov gs (bad) iret push mov sahf test test push (bad) je jne inc mov (bad) jo mov iret ficomp addr16 jnp jbe jp lret xlat cmp std cmp adc mov popf and mov jbe inc imul xchg cmpsl shrl xor mov aas (bad) stc fs in fs cmp test mov inc shl xor mov stos mov xor mov jp push insl les mov push xor jp aaa jb sub ret xchg add imul and js mov cmp mov testb in sbb mov cmp incb inc inc push inc lret mov movsb or jns jp test fistpll jae out add sub cli mov pop cmpsb jbe pop ret add mov adc les sub je fidivl nop jp xchg stos das test cwtl jp out test lods pop andl in jnp cmpsb xchg sub gs ret test pop arpl inc je mov rcll sub shrb jecxz leave mov pop cmp sub or sti fildl stos jp mov idiv jp add insb inc dec dec push mov test add jmp sub popa dec xor mov dec jne push call cmpl mov jp adc push mov scas jp push mov xchg dec sbb cmp mov sbb cld (bad) and sbb pop jno xor cli push jp pop pushf movsl mov pop jp mov (bad) pop cs jmp pop push (bad) jp or mov adc xchg ret jp and cmpsb ja popa inc insl (bad) sub ret adc sbb sbb jge jno arpl fistpll popa fisub adc xor mov add ficoml pop fwait jp xor jp aam adc jp incb xrelease arpl je pop pop sub jg das xchg mov pushf lock inc repnz xor xor cli stc add fs inc adc xor mov (bad) aaa ret jg je aam ljmp pop aas push mov insb push mov orl and rcll jl cs adc add mov cmpsb fdivrl stos pusha fmuls iret movsb sbbb pop mov cmp and cmpsb jno cmpsl pop mov sbb pop cmp xor fucom repz pusha cmpsl fwait or std xor and dec jo mov add test adc push or mov dec repnz mov pop push jo test sub out in movsb das int push xor mov xchg test dec add cmpsb cmp or xchg mov repnz mov mov les stos rcl cld ret add addr16 movsb cmp mov daa and cmp fcoml out inc mov push jle incl scas clc lret xchg mov fs rcpps adc and xor jp mov xor pop hlt mov push mov jnp icebp add jp cmp clc mov jl (bad) or imul lds push cli pop movsl into test cmp in lock sbb or cmp gs and ja adc loopne or test gs lea jg jp addr16 mov scas jno nopl add xchg movsb lahf je cmc jle push and and out je out fcmovbe jp xchg loope mov sarb jp sbb cmp xorl adc fnop mov aas pop jp or jg mov sub and faddl fld xchg mov addb outsl or mov ja cltd ss sarb test jne adc sti xlat jno jp popl imul push and add dec add push sbb jnp mov ss jp ja cmp rol arpl sub ret outsb stos (bad) lods mov mov xor notb stc inc fdivrs and xorl and int loopne xchg mov cmp bound dec (bad) jno imul mov cld mov jne pusha add or les mov jno sub inc insb (bad) jp adc loopne arpl stos and jp (bad) testl jp jmp adc jp cld xor cmpsl xchg xchg inc cmp adc into sbb sbb ja,pn js jnp gs cltd test sbb aaa add jp and (bad) ret ja fsubrs dec test mov push sbb cli jp mov push jne test pop and ljmp mov adc pop ss xchg adc shrl inc jp out xor in int sub pop adc cmp je sub xor jp adc lods (bad) jne inc pop pop fs lcall mov adc push adc sbb rcrb sub xchg ficompl js push aad arpl push jno push lcall push arpl lcall mov sbb aas shrl mov jne jp ficom dec cltd imul pop sub jg mov pop xor bnd les add push daa jne dec repz push cmp sahf sub mov movsb pop cli std push loopne push (bad) arpl push jp cmp jp mulb push cmp cmp jns sarl enter (bad) ja pop jecxz push cmc mov xor sub testb jae jno shlb and outsl gs mov add ret gs repz xchg enter mov mov push xchg cmc mov adc rcr jp std ds mov enter ret push idivb sub fistpl jp ficomp xchg sub popf pop ljmp xchg jb stos cmpsl lcall clc and (bad) test loope xor push jno jl xchg leave movb mov push ret arpl or add ja out mov jae jno mov rcr xchg repnz mov mov pusha jge mov cli jb cld sub and dec movsb pop dec jle inc mov cmp xchg sub mov movsb sub mov gs insb loope je jp pop mov cmp xchg xchg and call pusha jae sub es movsb jnp lret jp rorl movsl xchg xchg std sti pop (bad) pop popa cmp ret imul cli pop (bad) mov sub mov repnz cmpl lret ss sub add jnp dec push popa int mov mov fs cltd and nop gs test and jne bnd cmpsl inc pop mov aas popf jp icebp dec push and xor or popf adc insb xchg data16 cmp pop push jle sti cmp sbb xchg jnp push movsb daa xor les xlat or jno lret fsubrl sti fldcw cli clc ja xor mov les mov in push add mov fucomp cmp test jp daa mov adc lods jne jg xor add dec jp pop mov test xor ret out jp and push (bad) std push jp jecxz push out jecxz lea (bad) xlat xor pop push jp adc dec and add jecxz jp test movsb jp (bad) in dec test jae inc and stos mov in add fcmovne sub popa outsb test mov jp outsl test jp and je mov push jne add dec pop sbb test sub sbb dec adc ja int3 popa ja cmp jo aad imulb mov dec jb or or jp andb mov mov (bad) xchg jno scas outsb jmp movsl rorb push ja dec es jno cmp mov jp and xchg out pop rorl loop mov push xor pusha xchg mov adc jnp or sbb cmpsl popf or pop jp (bad) pop (bad) mov ret jp xchg int jmp mov add scas das jmp pop das daa add fsubr cli icebp jmp cmp inc pop pop (bad) and hlt jmp lcall mov scas inc test sbb jns decb je movsb or repnz shrb jo popa pop pop push ret inc push mov cwtl jl push inc (bad) mov cmp push pop fldcw jmp adc dec sti ja mov loopne mov sub add scas xchg xchg stos in jge popa adc jecxz adc push jmp jno lods fsubrs sub je add add into mov lahf dec add add mov dec inc jno jnp xchg (bad) stos pop (bad) sub lret mov ret jo push pop dec (bad) pop cmp je push mov sub cmp sub in es stc xchg arpl jnp push pushf (bad) mov sbb decl cmp or xchg iret sbb (bad) mov lds cld add stos ja jns jbe adc out test jp push cli aas xchg cmp add outsb dec mov mov jp pusha jmpw test pop or push pop xor mov es and aam cmp (bad) sbb adc push int call jp xchg and ret pop jne fmuls xchg lock jp aad pop mov cmpsb roll mov test pop adc outsb les jne cmp aam sti push push pop push mov cmpl pop sbb mov xchg adc aam sbb (bad) in imul jne cmpsl and add pop pop in xor push cs enter add das xor cmpsl lods xchg (bad) jmp cli cmpsl or pop add imul xor sub adc cmpl addr16 jp lock popf in gs dec enter or xor mov je dec sub xlat js pop (bad) sub mov push jg out cwtl jp out (bad) xor adc ds cmp jp jmp xchg pushf xchg inc out jp push pop lcall sbb in cmpsb sti mov lcall jp pop mov jecxz mov popa adc ficoml inc leave xchg or mov scas sti xchg lea jp mov sub mov (bad) sahf ljmp fnsave dec xor in data16 (bad) leave hlt xor mov push call (bad) ja push xchg adc fildl pusha lock mov sub aam nop push mov out cld je cmp negb push push cmp shl cli out out lods cli das insb xor xchg push ss imul cmpsl int3 lea outsb pop clc xchg push stos (bad) lcall daa fcmovu fnstsw pop pop rclb jns xchg std ja gs out mov mov dec cmp or les into daa lret push xor jp aaa and add out in leave push fwait adc dec inc mov pop (bad) aas repz mov jne and inc movsl xchg push test lret sbb mov add xchg xor cmp hlt xchg lcall mov xor (bad) jp mov leave sub push fstpl inc outsl mov xchg test mov push popf jne fmull cltd (bad) imul jp pop andb or adc jp cmp adc and stos out lret jmp add adc popa pop xchg rcll fnstsw push and push or iret add sub sbb jg fwait push ja jno inc xor sbb jp out std jbe or add or out add push (bad) adc aam in push (bad) dec push jp in mov jp mov in jp lea outsb shr fcoml scas mov int3 lock stc fstpt into movsb push inc jle popa sbb pop stos scas scas jle mov popa or loope cmp or movsl or addb mov popa movsl or xor imul pop push shll jmp or fstpt inc popa or xor je jmp mov mov rcrl mov or dec fldt mov xchg pop adc inc insl (bad) xor jne int lea mov insl dec sbb imul imul jecxz ds inc outsl jno loopne icebp sub jae adc cli push movsl lret jp out xchg mov push jae test imulb cmp jb fldcw push jp push mov imul aas sbb cli ret jno or adc pop sahf lds mov lcall (bad) xor jp pusha out imul js push loopne and popa cmp mov mov jp cli stos jae in les arpl and (bad) call jp out decb pop mov clc xchg pop dec loopne dec scas jmp jno xchg adc mov dec hlt repz jle sub pop frstpm(287 (bad) movl lods or ja ret sarb shl lcall sbb int3 test push mov xchg jnp scas jne cli mov scas clc mov jp enter or inc jno push pop cmc pop pushf lret mov cld fmuls jmp jp cmp aad cmp add mov in idivb pop mov cli jp xor inc iret in jp outsb scas lds fstl data16 push in xchg mov inc cwtl jnp out fcom push clc (bad) adc mov and push int3 jp popf xchg xchg loopne push and div sbb mov or fwait cwtl jno ret jl arpl ja jns pcmpgtw adc pop dec je enter mov mov push xor test add xchg pop mov stos jmp jp xor xorb iret jecxz adc lret aam (bad) stc push pop jmp sbb lahf xchg dec ljmp jecxz jnp cli int3 aas xor jb not scas jp into cmp push push xchg inc cld jno push shll cld cmpsb jnp or cmp and jp inc inc icebp adc push mov push and jae push jnp psadbw ja jmp pop push xchg int3 cli imul jp cmp push mov inc cmpsb push pop and push xor loopne (bad) hlt pop jl pop adc cmpsl ja and inc stc inc jo dec inc int3 lret cld dec jne mov lods or cmpsb or out mov js jmp cmpsb xchg loopne ja mov mov xchg fnsave loopne in mov outsl jl add jnp cmc mov dec fs mov or push leavew imul es cmp push mov fdivrl mov dec sub pop sbb dec insb lock (bad) cmc cmp jnp (bad) sbb insl mov movl push cmp stos lock adc mov mov leave out add pop int3 sbb int popa rol push and test mov lahf dec sub ja ss bound loopne lock xor push sbb or addr16 insl cmp (bad) jmp jnp imul fdivr and ds dec seto xor sbb (bad) mov in ja fidiv add jp dec push pop or int3 scas jp aas rclb add or jp sub (bad) jnp movsb push jp test jle xchg sahf lods gs lock scas add jae pop cld push mull hlt pop mov cli xchg jo dec arpl jae cli ds clc loope jmp aad fcmovb xorl jg adc (bad) jb push ds outsb pop fnstcw movsb jp jg std in mov ljmp aas shl push add dec clc idivb jp push out lcall xor jns cmp shr jp lock std loopne jne dec push lcall jbe int loopne mov ds jne bound icebp inc mov es out jecxz jnp iret dec (bad) cmpsl insl shrb mov ret inc xor cmp lcall cmp pusha mov cmc xchg dec cmpsl mov pop (bad) xlat cwtl js adc daa xchg fiaddl imul mov xchg mov xchg ja in cmp push mov call dec jne pop int3 sbb jb cli pop bound xchg gs sarl push loop clc fimull lcall xorb pop xchg push daa mov lahf sbb mov out sti lcall aam xor ja adc fistpl mov jns cli dec js cmp mov insb daa outsb xchg sub pop dec cmpl pop jle lret ljmp mov stc and jo pop pop fiadd repz pop inc xor (bad) cmp ljmp add sbb out (bad) out pusha and popa scas (bad) mov mov mov pop jp bound mov fcomp mov fs data16 repnz js push xor push ret and jne xchg out sub (bad) dec lret jp jle (bad) insb add jp paddb pop sub jp lret inc mov jp arpl pop popl scas pop repz dec jp js and jg add jmp xorl test shlb and enter cltd ljmp loope add in cmpsl or es aad cmpl add addr16 mov (bad) or (bad) or ret fnsave inc sub dec or or sub mov mov mov adc or jge or jp cmp mov addb lret inc and pop mov xchg jb dec sub cmp or and xlat arpl cmp push jp dec sub push mov sarb lret dec fstpl (bad) aam cwtl stos (bad) rcrl mov leave inc enter aaa int3 ja test mov xchg cmc jmp repnz les rcll sbb mov inc sub repnz cmc ja cmp into flds (bad) xor lret dec jno pop mov fsubl cmpsb gs (bad) mov jp xor in cmp test arpl pop push sbb sub cmp rorb (bad) adc adc mov mov (bad) jno inc popf xchg iret and jp xchg or (bad) int idiv add sub xchg ja negl push inc xor cs jne sbb ss cwtl pop jne mov sub pusha xchg ja xchg pop or mov cli mov lods jp ds adc xchg je inc xchg xor push imul stos in inc adc inc call jo adc dec sti les jnp loope sub and sub xchg cmp lods dec pop cmpsl xchg xor movsb dec and in addr16 data16 ret jp push and mov add lods imul or jp jg lods cs jmp clc jp fbld out xor les cmpsb cli aam mov ret loop lret movsl jp sbb inc jp insb leave pop adc inc jne icebp fdivrs mov scas mov xor xchg dec jae sub jns test xchg pop aas mov cli iret ja jp push pop jle data16 dec jp mov sbb jp jne imul adc pusha jge fstpt fnstsw cmpsb push pushf pop mov cmp cmpsl (bad) or mov sarl jne and mov std stc mov pop fisttpl into inc jnp jbe mov push and (bad) lock fmul sub sbb or pop mov jp aaa jb or nop gs out insl fnstenv cmp sbb cli inc mov and inc cmp or sub mov xor jp icebp add popa push shrl hlt sbb jmp dec add scas sub jno xor cs pop imul movb mov (bad) jbe add stos push jp push popa xchg aad pop lahf jp sub into mov in jno fs stos and jno testb pop cmpsb inc aad pop not sbb popf and jle outsb stos leave xor lret and mov inc lock fsts stos jne andl int mov int3 stos insb cmp inc rep les je xlat test aam in mov stc adc movsb sahf push jno lds mov sbb mov jbe mov sbb repnz push jbe aas ret mov jno movsb idivl pop jecxz and sbb push movsb loope dec test cmp jne movsb jnp std cmpb lcall inc dec jno hlt stos shrl lahf lret pop (bad) push sub enter jae dec xchg out cwtl pushf xlat mov loopne stos and es lret or cmp pushf inc mov arpl aaa or pop adc dec mov scas mov jle push adcl and dec and push sar and (bad) cli cmp je jne and cmp and xchg sbb in imul je mov dec stos pop sbb into rolb mov imull sarb (bad) lods pop arpl (bad) pusha inc imul loopne mov dec jno leave stos inc aaa insl insb jmp sbb ja dec pop lock ljmp das dec sahf xchg inc cli mov repnz jmp call sub sarb jmp aas insl loopne and arpl into mov subl insl lahf and (bad) fcmovu or mov jg inc adc jno mov dec xchg xchg in sub adc xor rol aad stos fdiv add (bad) je mov cmp movsl fdivrs aad orps xchg fcoms imul push push leave into out stos rcr jb or mov dec jg push jae lock xlat insl in imul jno xchg fwait xchg into and lds mov mov jns mov stos sahf and cs int pop xchg mov rcl stos or movsl dec jge add push jle cmp jae fsincos add push mov dec ja outsl sahf sti jb pop movsb int jle mov push mov push in cmp adc cmp add pop jb add mov hlt pusha fldcw mov mov movsb inc add pop xchg scas pop lock lahf insl push mov call pop dec shlb xchg mov inc push mov sbb loopne adc (bad) int3 pop fsubrs xchg fsubrs jl xchg out scas jae inc sbb pop xchg jmp jp icebp out in and dec xchg jno dec sub mov cmp cld jl outsb lahf xchg xchg (bad) gs iret sarl mov push lods or insb fs adc gs cli mov aad call ljmp or (bad) je test aam lret dec xchg loopne mov jae push popa fwait sarl daa mov adcl sub cmp sbb xor clc sti ja jae fistpll pop dec cmp nop mov cli nop add mov jp es push pop fs mov and ss mov cs fcompl jb dec lea lret push push je add mov and outsl xchg jne xchg sbb adc scas adc fidiv pop mov push addr16 xor xor in or or in fs xor push sarl add les jne sub push xor xchg bnd ja inc sub lcall jle ja mov sub jo cltd cmc scas mov add insl add dec (bad) stos sbb push mov clc and sbb sub xchg jmp and into pop push mov jecxz pop fadds sarb js in cmp lea inc cltd movsb or cs gs loope fwait jl movsb sets (bad) jne and arpl cmpsb lea lcall add fidivl outsl jmp sub jne mov adc fstpt je xor mov jp dec insb add adc int jp repnz sbb jmp and jp cs mov (bad) xor xorl xor ret lcall testb and mov in jp push arpl xchg lret rcrb mov jp adc (bad) out aaa push (bad) cmp jmp pushf push sbb movsb xor pop stc sub inc or insl and and leave add jp push pop jae stos out xchg jp rolb mov xchg popf subl or mov lock jp (bad) cmpb and cmc mov sarb mov test andb (bad) xchg or ror out sbb push mov testb mov lret mov push jp jecxz add lods xlat xor popa and add and or mov sub mov or push mov (bad) jbe add sub push (bad) cmp jp cmp inc push mov das mov fdivs ljmp fistpll adc insb mov adc jno push sub sbb nop popa jecxz jmp pop lods mov fstl fdivr mov mov ret mov jp fst das (bad) jnp dec jp xor cmp add jae (bad) cmp jle test dec fstpl push mov pushf jle mov xchg jp fmull inc dec dec in cmp dec gs pop enter xchg push xlat push and sub cltd (bad) in and pop cli inc aas xchg add test (bad) jo bound add pop mov in nop cmp imul sub rclb mov dec jp ja pop (bad) jne (bad) add dec xchg jp mov test dec mov jp dec imul movsb (bad) mov shll or xor stos or pop pushf cmp je mov xchg jge pop pop loop inc jae (bad) cmp fwait sti jle popa mov or fwait xor push daa xchg dec xlat enter add push rolb jno mov push jmp sbb inc lcall add mov inc mov (bad) jl loop mov push mov sub dec movsb in push stos cmp mov loopne pop push icebp (bad) cmc cmp enter xchg bound or test xor pop cwtl fistl (bad) mov mov popf or or out jno mov dec scas pop push jg push adc data16 ds and in mov sub stos cmpsb dec sbb fcmovu add push dec pusha add ror (bad) push shl jge rcl jp push push in add or loop repz fwait les xchg hlt jg ja ljmp (bad) xor jp adc aad mov jno icebp jb sub stos pop scas aas rolb jno and popa nop jae fild sahf jp sub ljmp inc mov cmp sbb jae mov dec aam inc push adc lret in jp cwtl aad addl scas adc sahf ljmp jle adc jae std scas mov clc mov xor pop mov popa mov mov movsl popf xchg jp xchg inc gs xor sbb jae pushf pop xor and jne sub sbb (bad) adc in jae test fistp jb mov mov addl mov xor mov mov dec push sti push add bnd imul push inc dec push in sbb pop and pop jp lret add sbb rcrl dec jp mov mov sarb push loope je,pt pop sub and (bad) jp jns cmpsl cmp dec jne push cli aad sbb ss (bad) fisttp and pop jmp dec aas mov add xor mov jp lods mov mov jmp inc insl xchg dec mov lret pop push pop icebp add repz jp (bad) cmc (bad) (bad) mov out pop dec xchg dec movsb repz hlt push sbb push cmpsl cmp (bad) jno orb sbb dec inc in aas jp mov imul cmp ja outsl or sub jl xchg pushf idivl in scas pop sbb jp stos pop xchg (bad) dec mov jnp,pt mov pop mov sbb aam aas pop jp lcall add jp test push leave mov aas mov lock sbb dec dec cmp movsb je fisubl sbb inc gs mov (bad) xor mov pop adc and stos test loope movl stos or das daa pushl iret xchg mov push stos mov dec fstps xchg mov mov imul popf les lods clc add pop test imul push insl out and sbb push out (bad) out rcr movsl xor inc fs sub daa in stos pop jbe jnp movl movsb adc in (bad) insb lods adc subl stos mov jp and pop and jp out leave mov push push or fiadd (bad) jp push mov pop push popa loope hlt add fwait dec sti xchg inc jp xor sbb imul jp inc fcoms (bad) scas cli fwait roll jbe sti jg cli ret inc scas xchg dec jae bound jnp inc scas mov gs mov std pusha pop sbb pop jbe repnz jb jbe pop stos push pop outsl nop pop loopne ds jae inc ljmp mov push jp dec (bad) sbb push sub jae pusha xchg fisttpl xchg sbbl mov push sbb sarl out dec shrl and push sbb jp,pn mov jae insl jge jp jbe xor mov jp int out in aam push mov jp mov pop loope mov push mov cld insl mov repnz sbb addb push pusha popa leave lret cmp pop cld xchg dec add jne sub xchg stos cmpsb rorb mov lret and push lods mov push stos incb movsb sbb jp stos cmp arpl pop out leave insb arpl push push pop stos xchg icebp into popa jl jae movsb std and and pop out loop add sbb xor (bad) (bad) fist dec cmp pop jb sbb sti insb stos or or sbb out push movsb out mov out cmc shll test stos leave shlb hlt or ljmp repnz push (bad) lock fstpt adcl xchg jo mov test es xchg cmp lcall fildll dec cltd xchg xor js xor scas inc gs aam pop pusha and repz jo mov fldt cs outsl jecxz and cmp inc add cmp stos jmp bound outsl sarl mov (bad) pop clc loopne scas mov rep jb sub and stos mov sti lahf mov movsb sbb and pusha push pop add idiv cld loope fs (bad) aaa adc lock jle ljmp pop jb cmpsl lahf dec jne mov stc mov jae mov stos pop imul pop pop and jle jp,pn or in shll leave mov pop jp es mov cmpsb pop sahf inc out jp sub orl pop mov scas xor or mov mov pop mov testl pop daa cli imul inc dec cmpsb (bad) jae inc dec sub cwtl sub and test lahf mov mul insl jne cmc or test stos mov add movsb insb add and ret lock cmp std pop adc ljmp (bad) mov fcmovnu or fsubl jbe jp adc shrb pop xor jno xor jp dec jl and scas jp into inc adc cmp or cmp ljmp pop sub jp and add ja inc jns cmp xor mov mov leave jmp sti (bad) cli mov ja in fidiv cli das mov js movsb (bad) out jmp lret das jp popf xchg fst mov sub pusha insb jb dec jno daa dec dec insb shlb or and xor mov push inc test mov xor jp pop mov cmc cltd add jp add dec test je mov cmpsb dec jmp pushf jp int push test sbb repnz cmpsb fs inc xor jmp mov js mov cmpb xor aad fs movntps jae lock daa mov jno,pt dec mov dec pop and scas and ljmp jne pop in movsb adc jb in jo imul sub fdivr dec sahf pop or pop fs pop aad dec insb sbbl out jae mov lahf xchg xchg sub xchg out xlat leave aas outsb lods mov shlb mov imulb repz es cmpl pop das dec imul sbb je aaa inc insl (bad) mov clc dec js pop psubw outsl pop push jmp jae cmp lret mov bound js push popf inc jb dec mov test inc fisttpl idivb mov insl rcrb add mov mov or dec call sub fs cmpsl pop bound rcrl pusha jne sub sbb pop sbb xchg pop lret repnz stos mov push or pusha inc stc mov jae mov dec imul pushf movsb shl sub mov push lock mov mov jne ja hlt fsubrs shrb sbb mov sbb mov mov in clc mov mov mov mov pop cmp call and fs xchg idivb rclb stos cmp xor stos leave and sub mov inc notl pop jo cmp clc pop fcomps sti pop push dec (bad) mov pop aam sub pop je lret lahf popa roll inc pop movsb jl mov lds push repnz je fcmovbe jle cltd mov stc stos jbe xchg sub scas js ljmp movsb lods mov shrl push cmpsb (bad) xchg inc je in push cmpsl sub mov mov add or add sbb push fbstp sar jecxz enter stos fcmovne inc pop jg jp adc rclb sbbl xchg out (bad) movsb dec sti jne gs mov test pop aad or nop push (bad) or js pop sbb push fbld negl sbb push sub arpl jae push adc push jge xchg inc inc add inc out mov stos cmpl sbb (bad) adc dec ret dec sbb sbb push push sbb inc cmpsb lret xor fldt dec push lock hlt dec loope pop push fisub orl sahf inc stos js jo inc outsl sub movsb pop repz int arpl lods sub stos mov shlb iret stos push xchg test bound leave adc in cmp jmp (bad) and or ja (bad) mov push push xor xor into (bad) mov inc imul lods cmp stos adc inc incl in sbb fs mull int or or push xchg xlat out push das out cmp jb hlt jno pop cmp mov stos hlt add jns,pt add cmp fidivr jb loope iret lods (bad) (bad) (bad) cmp mov push scas mov mov hlt (bad) lds and movsl jge jns dec stos stos jmp dec bnd jnp andb das mov lods popa sub icebp in inc adc mov (bad) insb mov adc idivl call out mov aad decl push fstpl sbb mov pop imul outsl in jno push pushf mov xlat fcmovnu push repnz dec mov lcall cli es or out (bad) sbb and out das push push out insl movsb or cmp mov pop add fidivr pop fdivl in or xor cmp outsb out jge lsl push xorb movsb xchg imul cmp aad push (bad) and mov mov mov dec into push mov push push out sbb or sbb shl (bad) jp adc mov lret jmp jp inc dec in cmpl xor jp enter ror sbb inc into or jp push nop mov fwait push repnz and push int inc jp lcall jp incb outsl imul (bad) xchg jp leave stos sub pusha jp jmp mov add mov sub xchg inc jbe out out out xor ret in add jnp aam sbb ret jle out ljmp loop ror jge lret xchg dec call mov push dec pop sahf icebp jnp add ljmp pop mov xchg je outsb flds popa mov xor push cmpsl push xchg cli mov popf jp cltd mov pop repz cmp sbb lods das cmp int3 and cld jp and add je add xchg and lcall gs pop fiaddl icebp jmp and std fs jnp stos repnz movsl jbe cmp repz mov push ljmp imul mov pop and fistpll outsl out (bad) cmpsl adc jne (bad) fadds (bad) mov jnp nop rorl jp outsl mov js push mov lret and sbb mov (bad) add (bad) fstl lea mov ja imul cli push mov cltd dec (bad) (bad) jp data16 rolb aam imul jns adc (bad) pop mov ret xor sub jp icebp ror in jne jmp mov add mov rcll lea inc out jne scas push imul inc mov sbb imul push inc jp cmp xor gs lcall imul jne and ljmp lock push sbb in push sub add jp inc cmp push mov and push clc hlt pop ja insb pop pop fstcw inc mov sub lahf jno push push inc cli push sbb fsubl fdiv mov mov aad test dec cmpsb xchg insb arpl inc jp sbb clc repnz popa rcrb xchg fwait pushf sub call lcall ds lahf fcomi jl and ja jg dec mov pushf pop icebp jp popf fdivs outsl mov xlat jp or scas jge cmp xacquire dec jp jns xchg fwait jp xchg jno popa into lods xchg ja arpl jl movsl fiaddl add dec insb push add dec jp sbb out sbb insl (bad) cmc push dec cltd and xor insl stc (bad) negb out test inc mov jp mov imul jbe jp mov mov ja mov jecxz add inc inc dec pop adc std repz dec fstl or pop lods gs aaa cld fimul std insl fs es and cmp add push xchg js push es dec or fwait pop push inc fnop (bad) mov cmc xor fnstsw roll add clc js sub mov push pop cmp cmpsb pop pop mov loop and push inc xor jp xor push outsl ja insl and jp cmp adc or inc pop lods int adc mov mov mov ss in scas test ret adc cmpsl sub or je jmp testb lods fcmovnu jp cwtl xor insb std stos xor call test test or jnp pop iret ss pop push xlat popf jg test in mov or inc js rorl hlt cmp jb pusha jmp mov loopne jnp fnstcw and int jnp pop cltd mov pop or sub and cmp sbb test pop inc jp sub fs mov mov fisub idivl cmovs fsts mov jno int clc out cwtl sbb push sbb push mov cmp (bad) imul or fsin xchg outsl (bad) or xor sti fsubl lret movsb data16 das jecxz pop jg ja and inc jge (bad) iret stos jp fisttpl sbb jge rolb add mov mov scas push inc stc cmp popa dec cmp mul xchg or jno mov push pop sbb inc jmp jp inc jno cwtl mov dec pop sbb sbb jnp jnp insl sbb sub int mov hlt rol (bad) repnz sbb int3 data16 sti js cmp push in out loop adc jmp (bad) xor pop stos cmp jl or aaa mov and mov cmpsl and dec adc pop arpl dec pusha mov jae (bad) cmc rcrb (bad) cmp sarl das add jmp loope fnop int3 je pushf adc rorb pop push jne inc mov (bad) scas and jg mov cltd jp nop xlat cld xor mov xor (bad) add mov (bad) mov repz mov sti int jmp lods mov push push movsb ficom pop or push loop je int3 ret cld ja mov inc sbb pop jae inc pop insl fcoml clc ljmp push addr16 sbb mov xlat dec and repnz orb and sbb stos or ljmp mov sbb andl or movsb scas or push mov inc insb andb mov push cltd mov lods sub cwtl negl iret fidivl sti cltd lods sbb mov push (bad) mov insl mov pop repnz stos lcall aam mov add test aaa stos jge dec pushf mov ljmp pusha push rclb and mov jecxz dec adc add imul enter cltd inc pop fldt adc lret push sub fnop or and leave scas aas test jnp sbb mov mov js iret sub fucomp mov sarb or jae ss mov push cmp inc in in jp cltd adc sti xor jge mov mov repz rorl les adc (bad) add push add stos inc gs xor pop inc mov jne cmp push js leave push mov dec xchg mov test mov popa mov aam lret ficompl add test mov sbb or cs cmp or xchg fidivrl sbb adc lods inc adc jge jne or pop sahf jp stc mov imul stos into jp and xor jnp cld mov js xchg (bad) xlat xchg (bad) adc hlt je movsb xchg pop popa mov dec push popa test mov push cmp cmp mov inc cli roll gs pop xor movsb or testb lock push repnz sarl jns sbb push mov add pop inc push in inc leave push clc (bad) pop push es add shlb xor jp push movsl lret mov add adc lods (bad) stos xlat (bad) ljmp in jae and fstps lods test (bad) divb imul movsb cmpl in jp inc jae jnp mov and cmp sbb fistpl movsb iret js sbb insl scas (bad) or inc negb mov addl leave aad sbb push jns mov repnz and sub add xor add das cmp sub jp pop xorl clc xchg je int dec loop out enter and aaa cli fadds test lds cmc mov mov dec add jnp dec movsl es xor scas in std mov xor fadd push aas sub jg push test jp arpl jmp pop jp aad inc nop sar jne push push pop sub xor mov or popa (bad) in loope mov add xchg shll arpl adc mov push inc gs out inc mov mov jbe pushf dec (bad) pop or push lcall adc out mov lret dec popf xchg xor sti inc push in mov insl pusha jae std repz in mov in inc dec mov inc jp and scas int3 mov imul adc cltd pop xor inc sbb push pop pop pop mov in mov mov repnz cmp jle ret jb repnz jbe mov cmp repnz (bad) mov jnp xchg aaa push jle jp movsb imul xor sbb sub add xlat cmpb sub (bad) in jp jge int3 mov mov jp (bad) in fwait shlb icebp cmpl int or das stos andb sbb jne mov fs dec lock dec push xor fstpl js jp jmp xchg mov push jnp dec out lret imul xchg gs mov or das repnz insb pop ja subl add cli jp pop in lods xchg xor ja adc lock dec gs sbb adc cmc xchg fisubr pop aad mov sbb sub jmp push nop jp mov push xor mov jae aaa lock and cmpxchg jnp cltd sbb loopne push jp jl es lods aas jno stc mov cld sub into popa sub jne mov ja sbb fdivrs cli inc add mov repnz mov add mov repz (bad) movsl fistpl cmpb mov jmp push mov movsb test out pop dec xor notb scas xchg mov jne inc stos ss push cmp movsb in andl cld dec xor int cmpb aad fnstsw push rcrl or or jp sub mov shlb sbbb notl mov addr16 stos in (bad) jp idiv lcall cmp cmp dec scas add push fstpt mov jae ret mov push push call lock les dec adc inc inc aad jb clc jbe mov xchg in lret jo loop xchg jnp dec add hlt sbb outsb mov lret (bad) pop addl arpl push jmp mov repz outsb jp bound xor lea push sub pop test dec enter jg,pn jp jmp stc test pop (bad) icebp (bad) mov cwtl fildl cmp imul hlt mov and jb jp andl lcall mov cmp cmpsl lea mov pop jp dec mov pop stos imul subl fs and sub int3 or das fs sub out and mov arpl icebp sub sub fisubl in xchg jns xchg cli cmp mov jnp lock movsb sub arpl add stos dec xlat (bad) (bad) scas insb loopne jp test add mov jae mov aam arpl mov and xor jecxz sub aad jp cmp insb push subb mov cmp xlat mov jno lahf imulb enter mov and add lcall lea sub mov (bad) (bad) jno cld mov in out sub inc jno xorb fwait sbb mov stos cltd pop aas xor dec sub popa enter xchg mov gs and data16 mov jae jl (bad) mov aas fdivrs jp inc out lds or dec mov xchg adc frstor mov ja dec jl mov popa mov push jae popf pcmpgtb push sahf sti cwtl js jp add lods cmp out inc daa or rorl push push push dec iret sbb pop cmc mov or shlb pop fldl scas cmp or insl adc ja push cli mov ret pop in fnstenv pusha int stos in jg ja push mov mov jmp jp dec xorb adc push pop mov mov inc pop cmp int ss adc cltd and ja outsb arpl test jecxz sbb mov fcompl and mov ds cmp pushf jle mov or movsb scas dec jmp xchg jae das cwtl sahf out aaa lahf int mov cmp pop fs cmp repnz jo movsb pop pusha test sub jge or ja popa push jle out push jb mov mov in push into (bad) lret push pop test cld repnz movsb popf cli pop jne add xor iret push and sarl aaa jne dec insl jecxz bound sti stos call sbb and xchg mov adc ljmp decb dec pop jnp xlat loop mov ljmp adc sbb add xor into jp sbb mov (bad) sti cli push cwtl fcoml popf mov inc add push ret ror mov jp cmpsb push xchg scas dec ds mov clc gs jno pop (bad) ljmp jae cltd loope lods xchg hlt jp sbb push loop (bad) jne adc and mov jp xor jge dec stos jp push inc ret (bad) arpl pop and jp (bad) rep push leave outsl dec and popa inc add jp jno fbstp aas pop push xchg sbb mov insb xchg jne ret test pop jp test lret call popa fnsave jae das dec push xchg jnp pop rorb mov iret add dec inc mov cmp mov cmpsl and dec jp lahf xor ja movsl into daa xor lret xchg jge xor pop sbb xor outsb mov pushf add xor jp lahf pop cltd out mov je bound cmpsb adc cmp lret test rclb ret xor out mov cmp jp lds add adc sub jecxz and push hlt mov pop jne add neg pop stos pop xchg ja test cmpsb jg mov mov loope push cmp in sahf xchg adc lret loope cmpsl jo sti sarb lahf inc stos fmuls jp pop push aas adc les pop sbb mov (bad) out and jnp std ljmp gs adcl loop pop arpl je aaa (bad) call daa jp cmp push sbb or mov sub fsubr dec sub mov shlb jp icebp lock or sbb fcmovnu mov popa (bad) scas inc fcmovbe fdivrl sub (bad) insb insl bound jns jp ret in xchg jp pop push outsb (bad) popl mov (bad) cmc push mov repnz stos repnz (bad) insb dec push push or cmp sbb adc mov clc adc dec xchg aam cltd test mov jns mov push xor in sahf jne rclb jp cld inc in aas xor into fs daa (bad) iret ret cmpsl int jge jne dec gs outsl dec mov (bad) jno int3 loopne jnp mov ret xchg shrb fist (bad) and adc das jle inc fildl jp jecxz out dec scas mov adc stos insl fwait dec sbb xabort push xchg and ja testb cmpsl jne xlat adc aam sbb addr16 popa mov (bad) fsubs jmp mov dec aas cmp inc pop arpl and (bad) adc jp mov call jp lea ret imul lcall mov and fidivr out jbe dec xchg loope sbb jae and clc fwait cmp ljmp lock dec xor jb or mov clc sub (bad) adc add jp int xchg popf push packssdw jnp pop fistp jp cmp xchg popf outsb xor add jo bound cmp jp jne mov js pop adc sbb dec jmp orl lcall (bad) jp sub cmp add das jp loopne js aad leave jp mov add cmp add sbb jbe pop jp je (bad) mov lcall (bad) jno mov popa push in insl dec xor sub mov nopl jb push add xchg adc jp (bad) pop pop stc cld pop fistp pop pop aam mov das jmp jp andl push pop ds or jp add adc mov jp add popa pop imul lcall dec sbb das lret add sbb inc mov ds in jecxz (bad) push pop pop out js push dec fs scas xchg es push jle sbb imul fwait mov enter stos into lret (bad) jno or mov fstpl push jp sub push fmull mov push jp hlt aas sbb loopne (bad) lcall jmp pop (bad) shlb push add lods stos setle sub test lea (bad) jp xchg popf adc fisubr mov jp ljmp fbstp pop jecxz sbb fs insb fbstp cli fldl mov sti add insb out movsb sbb add js aad (bad) ret xchg pop inc out (bad) xchg rorl test dec or stos adc xchg add out in mov (bad) lods icebp jo stos cwtl sbb leave mull pop insb popf xlat or fcmovnbe add cmp inc gs cmpl mov enter stos cld sbb cs mov imul dec stos jne ret inc movsb or mov sub and fnstenv in iret adc in push js (bad) cmp and dec jl ficompl cli jb hlt push sbb loop movsb inc daa jns jmp mov cmp aaa sbb scas rol stos (bad) push loope ja add mov imul sti pop lret mov jns arpl lcall js sbb jbe fnstenvs je push shlb mov fisttp repnz mov dec cwtl inc mov nop (bad) add cmpsb insb loope xchg movsb cmpsb mov adc jg mov mov fidivr fucom add iret movsb aaa fistl (bad) ja mov jge push fdivr sub dec gs mov int push or repz sub sbb pop (bad) sbb aam dec xchg stc bound push stos push ja cmp out mov popa shrl jle pop leave dec es movsb mov enter xor icebp stos in in cmpsl in add repz out xchg adc or xchg aad push mov into xor out mov loop movsb or cmp int3 sub incl fcomps mov cld iret daa xor movsb fdivl xchg push fwait arpl add sub pop xlat mov add stos pop std fisttp push ljmp mov fbstp add lret push (bad) addr16 cmpsl sbb out xor push and aas cltd movsb leave sub pop outsl lods stc add shlb pop stc jo mov sub flds mov lods jae and movb push mov push mov movsb pusha sub adc push cli imul clc mov fistl adc jge out inc je aad jl (bad) hlt jecxz jns inc push sbb xor and push push adc mov jge (bad) dec repz (bad) aam stos pop dec cli stos je out int int3 cltd ja xchg jl fwait push xlat pop inc addl cmpsl cld push jecxz push sub (bad) and in ljmp test (bad) push jp pop mov mov loopne mov fcmove out gs and jae stc gs call outsb or fidiv pop adc dec adc in jb or je out mov cmc mov inc adc add lret mov push mov jp je mov mov fxch push arpl and sub sbb stos jae sub jp jge sbb inc mov popa or xchg in mov arpl adc cli mov je and xchg lcall lcall sub pop or ss es jae mov jbe xchg ljmp stc adc mov std and cmp xor mov loope insl stos push mov mov xor inc leave sbb or push pop fsubr mov popa push sub jno xchg sbb cmp imul imul add bound pop decl mov gs or or lea fwait (bad) icebp jecxz (bad) mov push pop mov jbe pop jp or movsb xor fstps fild and jp stos or (bad) dec jno dec test adc jnp add insl jle inc xchg clc jnp repnz inc fsts and outsl mov sbb into xchg fwait pop jp xor inc outsl dec and iret sub aas or aad push jge insl idivb aas jnp mov inc jp jnp scas dec mov mov std fs cli cli jmp jp and inc mov popa fistp pushf (bad) daa mov add insb xchg mov lock jae (bad) adc pop icebp cmp jle test mov out stc mov cli movsb and ja movsb mov cmpsl jp or loop push lods xchg xchg and adc add enter nop pop push scas lock call arpl (bad) (bad) and mov jmp outsl sahf pop inc enter mov push imul push jl cmp (bad) sarb pop sub fucom cmpsl xlat outsb sub rorb or push pop push sub sti mov push mov add imul fcoml ja dec sub mov inc aas dec jp or sbb add or dec sti push cmp shlb (bad) movsl es into add adc scas mov pop push fcmovnu jne jle adc lcall sbb fdivrs mov lods xchg ss out scas ds inc sub fnstcw cmp jp xchg pop cld xor std std xchg call mov jp xor xchg push fs bound or (bad) gs push mov pop cltd aam nop jmp sti inc sbb (bad) gs popa push xor jp ja and mov hlt aaa mov div enter mov arpl dec aas test cmpsb ja xchg data16 fwait mov cmp loopne inc inc das nop cli cmp mov jp into repz lods mov (bad) pop cltd mov dec or mov out sub sub enter icebp jp mov fnsetpm(287 jp mov std mov imul jne push nop sub pusha sti push sbb stos mov jp add and adcl xor (bad) mov lret jp or xor cmp xchg and adc lds js pop cmp mov dec popa pop jae rcrb jne lea push stos data16 inc push mov cmp loop mov movsb xchg outsl (bad) jne mov (bad) jns insb pop mov std mov mov insb adc addr16 (bad) lcall xor mov mov adc clc jnp inc (bad) and aam out repnz repz in jp jecxz loop mov xchg (bad) fstl jnp mov mov cmp bndldx arpl out jecxz push fimull stos cmc pop mov adc stos movb mov insl les sub mov fs movsl int fimul int3 dec ljmp pop adcb jb pusha jnp int jae (bad) jb in xlat cltd call into cmp pop jnp stos and pop or mov cmc or pop inc and inc push clc xchg inc idivb in es push sub mov ja aad xchg or jne cmpsb xor push enter (bad) popa (bad) jns cmp inc ljmp divb sbb pop dec test out push js rorl add pop fs dec mov rcrb and cld mov stos lcall pop cmpsl ret (bad) or jae sbb mov dec insl sbb sub pop push repz cli push push pop or mov mov fcmovnu adc dec mov inc cli fadd adc loope mov std mov clc xchg scas ret pop cli stos popf movsl (bad) and sbb mov lds cs aam push leave cmpsl mov jle pop add cmp add nop hlt pop dec jns push icebp dec ja fs subl or popa out (bad) sub fildll enter or (bad) mov aaa shrl imul jno btc dec inc int cmp mov xchg aas aas pop jo dec sbb arpl push stos stos jg jb dec movsb sub dec cld test ss int pusha add movsl fldenv cmp test mov jbe jl cmp stos fmull rcrb leave jbe dec or aam jne pusha push aaa daa add stos outsb out and cmp cli jmp cli sub pop rcr das out data16 jno cmp xchg movsb mov dec push faddl lods lock dec addb sub loop mov or les int bound sub or lret gs fucomip or bound in jbe dec (bad) js mov (bad) xchg mov pushf cmp in add pop pop stos xchg mov push dec xchg notb repnz test and cmp jb addl sbb lcall lret xchg cmpsb inc addl int3 cld in sti nop movsb pushl mov orps sub ljmp sbb lahf jmp lea idivb mov addr16 (bad) gs pop jne orl stos das ljmp xor pop cmp and and mov ljmp pop test push out in pop and dec lret add mov pop ja out add dec jge push sub in sub dec sub xchg aad in cmp pop jbe iret les mov movsb loop (bad) pop fisub movsb and adc push (bad) ds or movq sub fmull jae cld stos or cmp fs idivb add or push pop dec jg in or mov jae sbb jb js sbb cmpsb aaa cmp lcall das rep add mov xlat js mov cmp push xor jb pop and mov dec sahf lcall repz aam cmp mov adc popa nop cmpsb inc xor jo inc stos int3 mov mov in mov xlat nop dec arpl es sbb dec add cmc popa stos add andb cmp xlat stos sub lea outsl inc insb sub gs out mov jbe push and sbb push les jmp repnz lret or lret add jle xchg lret fwait push mov pop xchg mov stos pop add out mov mov adc mov cmpsl movsb pop add and dec popa adc icebp je ds push std jae dec pop imul dec jle push fisttpl xchg mov test popa mov pop loopne mov aad jp inc scas aam (bad) sbb iret (bad) repnz inc insb incl pop mov arpl stos jae and je sarl jl or push dec imul negb xchg xor call outsl push cmp pop andl xchg lods aaa cmp sub push ret inc cmpsl popa cmpsl mov rolb adc and testl dec test popf xor and mov loop andb xchg popa cmp lods xchg mov fcmovbe xchg dec jp stos jmp outsl (bad) out or into jge out sbb idivb adc mov pop cmp jp ret ss (bad) mov jp mov not push sbb les jns pushf push sub lds cmp inc jp sbb aad xchg cwtl scas mov popf sbb push ljmp or loope sub out (bad) std dec int3 mov ficomp cmpsb dec jp sahf fcmovnu pop push or int3 lcall fnstsw mov (bad) fcoms add cs mov js sub loope jae aam ss cwtl and xor notb ja pusha shrb jbe jp jb push call iret and in jp xor lcall je xrelease fidivl jp mov lods inc jp adc (bad) mov iret ljmp push dec jno sbb cmp pop sub mov cmp dec popa dec jne data16 dec daa ja stos xor cmp ja jl ljmp dec gs popf xor insl les jp fidiv adc sbb pop cmpsl pop sbb ret rcll mov dec sub jmp sahf std mov addl mov pop push stc sbb pop push pop clc lcall shld jp popf xchg (bad) jmp push ja mov fidivrl sbb in outsl xorl loop sbb xchg fisttp mov xchg push loop jo jp out mov movsb daa je popa xchg sbbl in push jp and sub cmp das sub inc adc add and xchg mov inc jp outsb enter mov inc (bad) mov fidivl shlb cmp sarl push sbb in sub pop pop stc (bad) fsubp lcall mov dec (bad) ret pop bound outsb push or inc mov adc jne gs jg pop and insl mov mov test fist xchg jne adcb les shrb sbb shll les cli repnz jnp mov test add push out gs mov pop cmp out adc jp (bad) mov jle ja sbb aas je popf or popl push jns mov push xor add popa sub ret or ror push inc js add cli jmp or xchg (bad) jne (bad) cmp lods outsl fist mov mov mov push fsubrp mov jl cwtl mov xchg and clc cli xor ss fisubl sbb dec jns ret gs push sbb or dec loope jb sti inc in cli jae mov fdivrl pushf xor nop imul jne jge jl add cmpsl push dec clc cmp push mov mov fwait dec cmpsb outsl xor jno dec mov data16 xor jp movsb fcomps pusha xchg mov pop mov jne loop push mov outsb jne push and jb sahf cmp jp test xchg mov add jp sbb jmp imul sti mov lods (bad) xor rorl flds mov insl add in or mov gs pop (bad) jp (bad) xor (bad) fsts pop dec jg cmpsl xchg repnz hlt cmp aam push mov lods jp jne cmp gs push cmovge in mov test and mov (bad) hlt jmp mov jne das pop stos cwtl stos pop rcl sub xchg stc mov add test jb in int mov xchg shl int3 scas popf lock lcall mov (bad) and bound ljmp lds lock push mov push push add pop jp sub in sahf fnstenv sbb repz inc sbb sbb call push sbb jp cmp cmc icebp jae xlat and jb adc jl pop or fcom scas inc fcmovbe pushf fstps lods jp mov cwtl sbb jae mov fwait sahf jmp mov and cli insl (bad) repz pop inc test jle jp xchg dec ljmp std push js movsl push mov push and mov js pop mov xchg cli add addr16 mov stos mov push and sbb dec jge pop dec sbb fnstcw es cmp mov scas add push jno dec out or pop cmp mov jnp fwait ss or mov jmp jl lds js cwtl imul (bad) fsts inc or (bad) jp mov inc jne imul sbb cmp cmp mov arpl cltd dec push and xchg mov xchg addr16 out inc xchg repz loopne lahf into adc jp sub xorl loope mov xchg ljmp sarb add adc sub xchg lods inc daa cli mov frstor std adc aaa cmp cli xchg xchg mov pop mov fld push es xchg mov push mov jp jb jnp roll pusha push inc push out popf jno lea daa dec leave push loopne testb daa cmpsl shlb mov push shr loop jecxz mov inc pop es idivb cmp lea xlat arpl pop jp lahf cwtl lock cmc mov out ja (bad) sbb mov or sbb call cmpsl les clc jp aam sub dec mov ljmp cli js sub imul jnp gs (bad) mov in jle sbbl out jo jge ja in jp incl add mov cmpsb jno sub mov icebp or loope jp pop fstl fs (bad) insl cmc sbb mov jb in add mov call mov fstps xor jp jle fisubrl add test pushf jae cld mov fld1 and int push repnz lret dec fs jnp add add aad cli aam idiv xlat in inc scas shrl add (bad) mov ret dec pop fdivrl stos cld mov es sbb or clc inc repnz jnp stos and mov cmp icebp stos lcall movsb mov scas fisub movsb mov arpl sub movsb (bad) hlt xlat stos mov jae adc pop imul xchg mov stos mov xchg jecxz ljmp aas jne inc cmc insb test ja jle mov stc mov fnop pop mov sub inc sahf arpl xchg stos sbb inc mov xchg jp and (bad) mov pop jb ja jnp inc out lea pop jge sub jbe mov jae (bad) xor xorl sub mov sbb dec add hlt neg out sbb mov jg mov adc int3 mov push jnp clc (bad) sti outsl mov cmp in ret inc cmp int3 xchg xlat mov icebp popf pop dec ja js pop ja movsb (bad) in mov mov outsb pop mov int3 pop mov roll movswl dec (bad) outsb sub ja pusha push repnz ror sbb pop out into mov sbb xchg xchg mov jbe repz mov mulb das movsb in xchg std pop push dec add arpl repnz mov inc mov pusha mov push sbb dec lock pop dec adc repz mov pop ja (bad) je pusha push movb stos insb xchg cmp fsubp sub cmp dec stc lret jl or and mov jae jnp and je mov daa sbb je dec arpl stos cmpsb enter mov sub fsubrs push notl jecxz mov mov scas cwtl imul sub dec jecxz inc repnz jae sbb shrl (bad) idiv and inc ss test fnstsw pop dec scas xchg (bad) xchg out cli incl jno test sub into sub aad stos loop cmp mov pop add adc xor sub mov xor sub add push pusha push mov rep push (bad) push ljmp fldenv mov daa sahf pushf (bad) mov push jmp push sub cmp mov roll sti popa (bad) dec movsb shrl scas mov imul sbb mov add jmp stos and mov push (bad) pop lods push mov outsb aas push jge les cli inc lcall negb jno pop pushf leave daa sbb mov js mov xchg movsb pop jno lea fwait or inc or pop int3 sbb movsb mov ret test pop inc and cmp lret lahf push and cmp stos mov jno xchg cmpsl inc or mov add jmp xchg mov mov cmp jmp adc mov jno jne fldenv frstor xor cmp lret and movsl cmp lahf adc daa mov (bad) icebp add cwtl fwait jns jp sbb ret lds loop fcoml xor cwtl add xor cwtl jp test pusha fabs imul mov jp xor dec das sub loop push push cmpsb (bad) and jbe mov pop push jp xchg fdivl popa addr16 xchg cmp dec dec (bad) mov mov jne test dec lret jp dec and inc lock mov xchg imul sbb mov jb inc (bad) jb jle dec and movsb add and jmp add jne or ret daa (bad) out insl pop and sarl sub xor stos mov sub xchg push xlat sub orb aam mov cmp jae or or or fsubs fcoms or cmp xchg sbb and pop mov lods out cwtl sub loopne in pop cmc jmp daa cmc stc (bad) xor imul jl mov outsl jbe (bad) fildl data16 adc fiaddl jecxz faddp stc je jbe js int push jmp loopne jecxz imul pop jmp adc cmp dec les inc mov dec mov push xor (bad) cltd adc lcall push inc sbb repz mul (bad) bound in adc jnp add cmp inc cmp pop or or xor push push mov cwtl (bad) mov data16 data16 cmp cwtl loopne pusha xchg cmp lahf ss jne sub aas movsb push (bad) mov fldt sbbl push jg sbb data16 add push adc inc sbb mov shlb mov nop ja xchg popa sub push mov test jp or jae pop jecxz mov mov insl aas clc sti sub jae xchg mov jl mov fistpl add jp cmp aad mov pcmpeqw pop adc (bad) cli jp jmp sbb pop clc mov xorl pop dec out inc mov jecxz cmp jp adc and out cmp sbbl mov int3 dec aad js sti mov mov jp add popa pop leave or js xor xlat cwtl fwait je xchg jecxz push jnp (bad) inc aam jp xchg jbe aas xchg arpl out cli mov adc mov jne lret data16 in ljmp pop xlat xchg mov add jg jp mov jp push inc into faddl fistp rcl js inc insb int3 jp mov mov loope mov mov jp (bad) call pop cld fwait dec jp ss push andl add xchg in jge lret into repz loope insb sub dec gs lahf push out xchg cmpsl mov jb mov jp xchg sbb fcmovnbe push daa push inc lret ret xorl push icebp addl jno mov cltd cmp arpl sub mov adc xor jmp mov mov xor push jp add pop insl dec inc das xlat pop ss gs push mov push jnp inc or popl jp insb inc jo push pop fdivs ljmp in es cmp mov jmp pop std mov lret cli mov mov jp iret lret mov adc fs cltd sbb or repnz scas mov pushf pop lcall cmp nop cli jle xchg jge jo push or cmpsb (bad) mov pop add jle push add mov stc jb jne fsubr and mov cli xchg push pop push pop call cmp jmp scas mov rorb cmpl or cmpsb popa mov (bad) ljmp jg jle loope hlt cmp mov mov pop aam js and mov mov pop sbb andl sub sbb xchg dec in jne jns xor push imul icebp mov pop cmp mov stc sarl mov pop jp push popa inc icebp jns jo add cs push stos fnstenv sub dec cmp dec jecxz mov cmp push aas pop mov scas push cmp loope jle addr16 mov and add pop xchg dec inc es push mov add out and stos test pop sarb pusha pop or daa cmpsl push jp sub xor inc loop stos dec adc push xchg jecxz cltd (bad) jmp enter jp sbb stos mov sbb and dec push and mov daa mov fs pop add and or ds xlat jno aad mov (bad) xchg jp movsl push dec mov test jne scas dec push adc sub xchg adc clc jbe add push popa scas or leave jp dec lock inc mov push bound call shll sub jp and mov popf adc or stos incl js xor lcall repz lret imul sbb xchg pop dec cmp or test mov sub aas mov jno adc dec sub sub adc sti mov aas sahf xchg jne pop adc in lcall out imul idivl (bad) jne les xor mov cmc cmc or lahf mov add mov jns push aas cmp cs push push shrl mov jp inc insl or repz dec mov js mov dec jp jle xchg fwait dec lea enter movsb jp add sbbl sub push sub mov jb stos mov call add (bad) in into and imul jp stos pop mov mov sub pop (bad) mov jg sbb daa push adc ror add daa jno aam inc mov mov push cmc rclb sbb andl shrl sub hlt dec and xor sub test add sti push cmp or in les icebp sahf or mov push jle xchg mov inc add iret divb xchg enter mov js or cmp shl movsl jbe pop fprem push call das mov decl pop stos xchg popa dec inc push (bad) sti in sbb movl cmp movsb xchg std jb cmp fdivrs in mov push push inc insl lds (bad) jno scas leave lea out movsb insl pusha movsb push dec js push insl rcrl (bad) xchg or dec mov xor mov sbb cmp ret sbb cmpsb into adc insb jle jbe push out jmp clc jle imul jae je sbb (bad) sub xchg shll cmp popa jbe cmp push or fcoml sti loop inc data16 cld jle cmc jae jnp jnp jge loop mov out daa pop (bad) rolb xchg push jp jecxz out push stos aaa mov bound or (bad) sbb or pop in mov out xor xchg imul jl mov or popa fcoml (bad) in sub outsb dec mov sub aad insl loop and xchg mov in out clc push icebp mov pusha jnp test fcoml lcall int3 mov add fisubl sbb lea xchg aas pusha cmp sarl daa lcall xor movsb push stos mov jl imul fidivrl pop clc pop cmp mov push xor gs mov flds test jno (bad) movsl sbb das xchg or jbe movsb push sub cmp mov fbld cmpsl les mov das mov fdivrp enter ficomp inc jb jp int inc ja pop cmp popf fild cmpl mov or shrl mov sbb mov (bad) cwtl jp inc sub inc xchg push mov pop icebp add (bad) jp pop sbb dec mov arpl movsb xchg mov dec jae sub ja in out data16 (bad) lods inc (bad) (bad) test movsb add fwait inc push jp mov aad cmp xchg sbb test push add cmp pop repnz jmp ss lea inc push sbb dec jle pop lods mov xchg xchg cmpsb jno and fistl sub xor in mov and mov jl mov (bad) imul loope das popl jae cmp dec jb xor shll sub (bad) aaa lret sub xchg cmp push mov fstpt jnp das mov in jno aas fwait cld lahf dec stos mov or pop push sahf lcall push sub sti dec and fstpt test fwait cmp outsl push jecxz addr16 jp jae aad lds mov jnp test sbb jnp push hlt cwtl jp xor dec imul and mov outsl xchg sbb mov lods cmp jp xlat mov and mov imul popf sbbl mov xchg mov jo bound lcall dec push daa aam sbb out jmp mov jno inc loopne pop sbb pop lods mov mov jp cmp in jp cmpsl mov lahf jne adc mov mov lret ss jp dec xor xchg mov push mov sbb sti lods repz out shlb push mov mov pop push loopne xor sahf icebp int adc popa sarl dec stc jo sbb and push mov xor xor jnp jno mov (bad) push xchg (bad) jne xchg cmp negb int3 push sub cli jbe and fxam add icebp ret jp out lret inc pop fadds (bad) outsb insl sbb jge es xchg mov adc pop mov cmp cmp jnp cs std ret jp cmpl add sbb (bad) jp adc inc out cmp shrl repnz mov jp pop popa ss jmp jp xor xchg inc mov jnp loop xchg mov jp dec test and out jecxz loopne (bad) std popf sub xchg xchg ja inc inc push jno mov push mov loopne jge insl pop cmp loop jbe sbb inc stos les jp add xorl (bad) cltd inc and iret sti push ficomp inc push or je dec stc xchg jp push pop inc lock pop popa xchg fs mov xchg jne mov dec out or inc inc sub inc adc xor inc enter loope orb add cmp ds jbe movsb add mov lret xchg xor divb pop inc in scas or mov mulb add ficom pusha jne cli jns lret jne xchg fistpl mov je add or lret aam jp xlat jle cmp imul mov sub out jae loop jnp dec push jp out lods ljmp mov adc jae jp lret scas (bad) stos idivb lods add jp scas mov push pop jne popf adc fwait adc mov test and sarb xor outsb das call lcall (bad) xlat cs sahf adc jp lods inc mov mov jne mov xchg and out mov jle shll iret mov push inc and adc jp xchg mov std testb (bad) shl (bad) pop out xchg and jnp es xor xor inc and insb (bad) out je ljmp add sti test popa jno sub clc rorb orb xchg jno notb popa fnstenv mov and or lahf push xchg pop push jp jle mov movsb or push dec movsl insl xchg mov inc outsb call mov ja and lret adc mov or add pop xor jnp cmp push leave lock movsl jp mov or add push jecxz out outsb jp daa dec jmp dec xor jae aas dec ja jnp add insl imul or iret fwait aas xor repz lahf inc jmp jg jne mov fimull push xor call jno in (bad) clc inc jnp xchg adc mov push jns mov push jmp inc aam rcrl mov rcrl repz js pop loop mov stc or push out rep (bad) icebp sub aas out dec pop add in sub test mov push mull cmp jmp mov mov mov mov imul out pop sbb repnz sbb data16 repz xchg sub insl sub pop jnp lds add jmp addl stos fcomi cmp xchg jp xor mov and jp idivb nop stc mov push sbb xchg jecxz inc outsb push ja sbb enter iret push sbb mov fdivs aad dec sbb mov (bad) and sbb xor push ficompl clc adc xor imul and aam push int3 addr16 imul pop cli cltd and sub fwait imul mov cltd stos pusha fbstp xlat icebp imul push xchg leave iret ret loop fild adc orl out cs inc xchg jp shll je dec push or xor inc idivl sub or push jno mov jmp (bad) jno rcrl cld test (bad) adc dec or xchg xchg jb fisubr add mov dec xor or dec sub jbe or daa rorb lock jp subl ja mov ja dec xchg xchg jnp test add mov mov inc pop lea mov mov imul clc jp jae adc jle imul push xor add mov pop pop pushf push lods sub cmp mov push and push add repnz cld daa adc push mov pusha scas pushf icebp cld jp xchg sarb xlat scas and fsubr dec mov cmpsl xchg or or xor push push cli insb push push dec xchg lahf and je das mov (bad) popf jg (bad) aad nop mov call xor mov movl jo push add jno lahf pop cmpl sbb and into pop clc fcmovnu pop ja cli mov je xchg popf rorl jae adc mov rcrb loope test lods mov (bad) fcmovnbe (bad) dec xchg jp fldenv lcall and pop inc xor adc std jg pop es test and stos and movsb rorl fldcw xchg or push stos imul xchg test jae add (bad) je jbe xchg es das je movsl ficomp adc movsb and xchg outsl clc mov push aas and stos dec dec xor stos mov std pop repnz sub push repnz mov (bad) dec sahf xchg dec sahf cmp jg pop popf lsl mov into movsl hlt xchg rep add ds inc jnp (bad) sbb pushf pusha add imul sub pop adcl and movsb sbb inc jl sub stos in xchg xchg sbb je cmp xchg (bad) mov inc loop sub sbb pop stos xchg cld xchg mov jae movsb jne (bad) pop dec mov push cmp loope xor ds inc mov icebp sbb stos outsl cmpsb fwait scas fs sti sbb aaa or sbb inc arpl leave pop xor rcrl sub cli cli sub sbb call push lahf aam xor mov (bad) jp clc mov jp shll scas jp xchg loope pushf packssdw cmp pop pop fidivrl mov sbb out enter mov xor out sub lret adc jp cld and cs aaa xor outsb xchg sti jg jns inc jp pop sbb jo sbb stos pop hlt jp add jp dec xor xor aad iret fs imul cli push je xor loop mov (bad) ja push mov cltd jp pop mov aaa lret lret sub (bad) xor and scas jp stos in cmc xchg jecxz insl (bad) aas adc adc mov mov or stos nop sbb (bad) aas test bound cli cmpsl cmp add dec jge fildl sbb jp add jp cmp push test lds fisub pop cltd sbb jnp lods push pusha mov popf jnp xor sub js sub mov lcall dec sarb dec sub adc mov xor cmp push pop arpl inc jp lret rolb mov xchg xchg or pop pop jp leave inc (bad) not imul jo es jne int3 sbb out mov in jo mov shlb add jp jmp lcall jge add adc (bad) xor mov cmc bound dec das or and mov les sbbl cwtl jae mov jp mov pop inc jne sub dec cmp repz push imul push inc lods and lret pop (bad) out (bad) jle jne or jne pop loop rcrb aam clc sti jnp sub hlt aas dec scas jp or int3 dec xor jge jae fcomi cmp jp shlb incb sub jnp cwtl fcoms jp push xchg mov cs lret dec and enter je inc xor jbe sbb xchg in jne xor jae (bad) push cmp stos jp nop out cvtps2pi (bad) or jp jae sub cmp lret lret jno iret dec cld inc xor mov cli insl (bad) fmuls pop mov jp dec cmc ficompl dec addr16 mov push pop jp mov jmp add mov icebp bound stos pushf sub test in inc mov and jnp adc aas dec test loope xor push push (bad) stos push mov je jp mov jmp lock insb or adc stos cli xor inc (bad) jae iret sbb dec leave jp les mov dec jp inc outsb dec and out jp mov cmovo jae dec enter add mov scas jl (bad) or jbe imul pop (bad) jmp les adc jne jns out scas (bad) std mov dec xor (bad) icebp sarb add xorb into jp iret jmp inc int3 add jl push dec jae xor clc sub ljmp jecxz jp scas mov sbb pop sbbb fs xchg fdivs dec inc push and mov mov movsl cld xchg jno sti cmp push cltd stos xchg jb push sbb jg cmp xchg (bad) lods inc mov jp jne inc add stos or push mov mov jnp dec gs jp pop fsub or jl (bad) imul (bad) adc dec out xchg repnz dec sub sti jle movsl xchg ljmp daa insl mov hlt out xor dec xlat adc jne lock lds jmp jb sbb lret add mov movsb enter iret mov mov dec mov xorb ja adcl pop nop cli jo cmpsb cwtl sub inc mov or pop nop cmc insl jnp pop js ss aad jns inc repnz ficom sti cmpsb add insb movsb pop (bad) jle insl jne stos fdivs repnz mov mov mov icebp arpl pop xor bound and daa aas outsl add test dec cmpsb adc imul xchg ret push divb ljmp push cld (bad) in and cmpsb dec je out popa repnz jno sub ret cmp neg addr16 adc jg mov das push lcall pop ss loope push jecxz cmpsl jp shlb gs inc daa les (bad) mov out or jp xchg arpl jp sbb push hlt fistpl dec std cmc sbb jbe jne insl movl inc push sahf mov cmpsb decl inc mov cwtl sbb mov fwait popa jne pusha mov jp loopne std mov jb aam lahf sbb ds add xor mov aas ficom sti fnstsw sbb fsin aam shrl pop test jb pushl mov lea pinsrw es xchg iret pop (bad) fldt cmp ret inc repz push sarb mov xchg out das fidivl stc jnp test rcrl ja or jbe jg mov data16 mov mov push cli imul jmp adc jo (bad) jo dec and inc repnz (bad) lock lods pop out cltd fcomp add jp xor (bad) jae ss sub hlt push dec (bad) mov pop jp mov cld mov lods outsl jmp push pushl mov mov sub jp push aam cwtl sbb mov pop push xorl add (bad) mov jne cmp mov xchg loope add jg or push jbe inc jp pop cmp (bad) das xor enter addr16 scas ljmp jp scas std jne pop xchg cmpl repnz and push repnz shll lods xchg insl stos jmp test dec lcall aas inc ret enter push pop or jb pop fistl ss idivb stos mov and data16 and xlat movsb cmp pop push push repz xor dec movsb mov ds inc in and (bad) repnz outsl dec cwtl jp lret pop pop sbb js out call adc in sti jp scas icebp mov cmp and dec lds testb jnp inc mov adc bound push fiaddl lock popf pop xchg int3 pop cwtl jnp aad jp addr16 je ficompl stos ret adc dec inc loopne jp or arpl loope and int add cmpsl or add lcall push sbb pop lcall das dec lds inc pop fnstsw inc push inc shrb call inc and cwtl jp cmp mov movsb mov and jp stos jge push sarb les mov jle imul nop mov push aas jp jecxz sub adc std cwtl lods jp repz sti ljmp jecxz or inc je add sub jge pop push lret mov cmpl ret cmp mov outsb sub sbb xchg push cli test (bad) sub dec leave stos aad repnz jge push fwait push clc pop fwait mov fwait mov repnz cli mov dec jne adc add ja xchg pop lods es lret cmp fucomp xchg and into dec add aas xchg mov xor pop dec fs lret rorb (bad) adc push and loop push add jp push cmpsb addb out and stos je add push add mov sbb rorl push pop adc pushf outsl mull call (bad) mov jnp stos pop insl pop inc jbe jge enter imul mov sbb or imul fwait mov add inc adc mov inc xor int mov xchg out (bad) and pop jp packssdw jp in add xchg bound jp cmp inc lret mov fdivl mov fnstcw cmpsl xchg push jo pop cmp cmc add xor test sbb jno inc popa dec aaa adc pop insl insb leave sub lcall mov dec push inc out xchg in jp aaa jecxz (bad) xor mov pop push js jmp in sbb testl repnz sti lods pop push sti ss xchg and jae and jl aaa aad jns lahf arpl sbb cli movsb or jle clc sub leave inc push into arpl sub fs mov movsb mov sub stos jnp cmpsl xor mov sbb int3 sbb push rcrl fstps pusha adc clc ljmp push pop xor stos jge add aad mov aam mov sbb lret stos and mov int3 push test cmpsb lea mov adc fs sbb adc dec lret stos xchg ds jb and stos mov pop xor xor jp xor (bad) fs sub or sub outsl adc pop or jbe cltd mov mov rcrl adc cmp push cmp mov (bad) jae sbb (bad) mov loope dec aad imul ljmp cmc inc and popf imul call pop and adc (bad) jp,pn cld in jecxz sub js arpl outsl and xor inc jp in ret mov cld mov inc imul jno inc es cmp sahf xchg mov add pop int mov add lret call mov les push cmp outsb arpl xchg push sub pop add cwtl inc sbb mov pop adc xchg movsb pop mov push iret cwtl jbe push cmpl mov sub lret or adc aas mov test (bad) cmp stc jp xchg push sbb iret movsb pop xchg sbb call mov or arpl pop in jns jp loop xchg push ljmp std pop sub xor push sarl sub lahf in test insl andl sbb jp mov mov add insl clts lods daa cmpl bnd mov test add enter jp (bad) mov push loop ja iret in pushf int3 imul jnp inc mov ja cmp jmp push sub out mov std mov and test push pushf (bad) addr16 pop mov sub cmp jg outsb test out pop lret dec out call dec outsb movsb jns arpl sti xlat cmp push mov pushaw arpl ja cmp pop movsb push xchg pop or xor sbb hlt or adc or repz inc out cmp int xchg or inc ja xor arpl jle dec sti mov outsl jo lret adc push cmp mov sub cmc cmp (bad) cld mov hlt xor movsb sbb cmpsl push test xor (bad) jnp out sub inc jns je mov leave dec pop mov sub xchg cmp lds js cwtl addr16 mov jg mov sub ja xchg lret jns sti pop push mov cmpsb enter or leave pop aam ret cld push inc fstl loop xor mov cmp movntq adc cmc or and gs push pop adc sub stc mov fnstenv push jae frstpm(287 mov jp or add cmp mov pop xchg xchg and jp xchg adc mov data16 cli (bad) fnstcw lock (bad) mov lds pop mov (bad) imul adc push xchg jp adc or pop sbb cli pmaxsw sbb xor xchg cmpl xchg lahf gs test cmp add cmpsb lret mov loope sarb int3 fs jp xchg adc push jecxz rolb dec mov fisttpll arpl mov adc add dec dec inc jae into dec sbb cmovp push scas cmpl test jp lahf leave pusha xchg xchg sahf push in inc mov ss cmp addr16 pop sub imul cmpsb pop mov cmp push sbb sub bnd pop pop (bad) pop or jno mov pop xor cwtl cmpsl add add imul xlat lods std xchg push std jnp outsl rclb jne mov cmp push (bad) imul sbb pop jp push inc mov in movsb jne mov xchg in xor cmp popa xor dec imul cmp dec es xlat xchg fsubrl mov jae notl add jecxz sahf jp aas cmp and pushf or mov jno sub clc or insb mov adc jns jp aam xorb pop jecxz mov jge jbe insl cld pushw sub (bad) mov or add inc jnp (bad) and cmp or jne lds (bad) cmp sbb mov sub mov inc xor out jp icebp inc (bad) xor notl sbb push fnsave daa xchg adc inc sbb mov push int3 lock sbbb test jnp cltd cwtl into fnstcw jge loopne out lret jo sbb pop cmpsl mov shll hlt push sbb push int and inc jne leave outsl or sub cli test inc daa jl jp decb sbb mov jp enter sbb mov sub or sbb fs mov and inc arpl xlat sbb jbe xorb pop mov imul lahf daa outsl sbb jp sub in pop sub pop inc jp (bad) inc imul dec pop jne mov mov loopne fistpl (bad) mov mov mov jne push mov adc push imul pop aad popa push sbb jge jne mov je mov sbb out in cmp mov xchg popf in sub fistpll jae cmp fildll outsb lcall outsl xlat and gs jmp jo ja loopne insb inc ljmp or xchg pusha jnp inc gs add mov mov mov xchg adc scas dec and into xchg out jp push jl xchg cmpsb xor xor jp add xor mov in jp inc jae clc lods jnp push mov mov mov sbb movb in jp pop jl jecxz stc mov sub jo insl push mov cmp push popa fsubr fnstsw push test push lret popf ss mov lds sub je mov xchg outsl sahf leave mov mov sbb out cld jmp ja xor jne and cltd ja xchg inc mov mov xchg sbb jl loopne call cmp and loopne mov maxps add mov cmpl dec add pop sub movsl int les adcl mov repz (bad) icebp jge mov or enter pop (bad) mov pop repz lods pusha sbb mov cmp lea mov mov mov jnp dec lds clc mov dec outsb dec test lods sti out sti (bad) inc jp out adc shl (bad) mov out jae xchg incl pop sarl std dec dec (bad) mov dec daa and popa roll xchg pop lcall jp mov shlb andl pop out cli popa pop loop pop xchg push outsb leave push push imul add jp call leave dec ja jbe enter jne adc sahf cli stc sti jne hlt ret pop xchg fwait mov sub mov adc pop loopne push jl or push dec and jo and or xorl int3 scas xor imul pop inc insb dec push jnp cmp out and hlt or jo repz jne mov jp cmp push xchg (bad) into inc sub imul mov jne dec mov push cld negb cmpsb push jne dec sub mov mov ss cmp xchg jp xchg fdiv mov lods mov pop arpl jp call jns ja out sub sub jle pop out sub add xor mov cmc mov imul fwait and mov xchg jae mov cmp cmpsl cli sub icebp dec jp fs movsl incb aam aaa iret scas ret jp outsb test imulb or mov jae sbb push jmp iret jne jecxz mov nop rcrb or cmp dec add or inc adc and mov add jp clc fimull jmp jp pop adc rcrb inc xor cmp and jp and mov push std push stc int mov jns lcall jp mov movsb push xor mov lcall rorl cwtl fwait jp fiaddl ja arpl sbb out icebp sbb imul or hlt (bad) jp arpl (bad) ret xor add sbb jp xchg jno ljmp addr16 fdivrl cmpsl mov nop stos jp mulb into insl or add fcmovnb insb std mov add pop sub sub and jne (bad) lock fwait iret push popa movsb cs cmp sub fbld cmc xchg cwtl xor xchg lea sti push in xor stos push sbb jb push loop sub push cwtl cmpsb adc mov xchg (bad) jne add jns push push add movsb cltd (bad) pop mov sbb adc xchg push pusha sub sub cmp pop pusha sbb or pop inc mov dec jle js pop sbb inc push dec cmp dec popa xchg jp mov scas lret and sti mov fwait in js adc jnp lea jae fldenv xlat scas mov cmp sbb mov scas sarb lods mov ja les jl mov fldenv or stos ret mov or call adc shrb jp mov sbb jae jae out dec cmpl push jp fstps jp xor shll lahf pop xor jp dec test mov into dec sub in (bad) fstpt in iret sbb cmc mov xor cmp clc sbb bnd jnp out lds sub or imul sbb cmpsb mov sub iret jnp sarl ss or clc addr16 adc popf dec jp mov addb jl pop jne jp jecxz pop mov sbb jp mov sbb mov xchg arpl outsb dec and adc jp or cmp jno out or outsl adc iret cmp xor (bad) push sbb loop or lods push mov fwait test cmc std fistpll fwait sbb mov outsb aas mov cli jl ficomp jp fistpl mov add cmp je xchg mov add mov mov mov popf mov sarb pop (bad) cwtl jne imul gs fildl mov addr16 insl jbe shlb stos punpcklbw jmp test popf int jnp xor pop movsb ja adc fdivrp sbb dec clc fwait int3 and ret cmp jp in fisubrl jg inc xchg or ljmp scas cmp jmp faddl push and imul sub jle jno aad negl jnp hlt lock push loopne call in les sbb xchg addr16 jp jo fidiv push mov jb lahf cmp dec and jno jp mov arpl xchg mov ja enter jg or call xor dec or inc jne fcomi pusha adc pop push (bad) mov scas les cmpsl cmp add add lea shll in int3 in pop xchg (bad) inc sbb mov sbb outsb imull lahf xchg leave and xor addb jno pushf pop cmp mov or and roll sarb lcall jle and push ds repz ror popa mov fs mov and mov leave loopne inc or pop jnp dec in cmp in dec dec add xchg add sub repz jnp stos in xor xchg dec mov mov loopne ds ret adc adc pushf jbe cmp addr16 inc pop pop push addr16 dec cmp in clc xorl stos sub mov mov lret add in sbb rorl mov lret aad mov fisubrl movsb push roll fs lods mov sub addr16 lods gs iret jg jo loope imul shll push or faddl xchg scas aad pop sub jb icebp fstps outsl jae movsb iret aas insl xchg jb mov mov fmull aaa call xchg mov nop pop inc xchg imul outsb movsb out orb jb adc sbb mov push push pop into daa pop jno rcll jnp js push mov js call push inc fmull (bad) icebp pushf dec push jnp stos cmpsb push mov movsl sbb jp push fs fcmovbe pop stos cld ret jo out into mov and jae cmp jnp and jns or ret arpl pushf cmc push push jnp pusha in in stos cmp or pop nop loopne jnp fs rcrl pop movsb int movsl pop fstpl xchg add xchg popf movsb jno xor pop push in loope adc repnz jbe cmp sbb out mov repnz jge mov mov inc cmc jnp and cmp jle pop shlb inc insb popa jb insl cs js dec xor jle mov mov jns mov push jne mov xchg mov fisubrl rcr jnp mov sbb cwtl out xorl pop pop jo mov mov cmc fwait call sbb xchg adc inc lods leave arpl fstl mov ja (bad) cmp inc mov add aad mov push or pop inc popl inc pop sbb inc add jg dec xchg gs mov jns inc out dec mov in bound notb jo add cmp pushf out push in sub mov (bad) mov stos pop (bad) data16 stos jmp aad ret fwait xchg arpl xchg dec pop clc dec or mov imul push pop mov mov sbb movsb lret stos imul pop sub or jae ljmp add push add xlat inc (bad) sub stos ror adc roll dec movsl bound arpl cltd add fcmovbe jnp ss and stos test imul mov imul fwait test je ja dec fs out cli xor pop jp aas ficompl jp push jle mov aad mov leave scas insl jp push mov jae addl loope (bad) or jp stos and dec cli mov inc pop stc (bad) jno out enter addl xchg iret jmp jae pushf scas fwait cwtl add arpl sbb popa (bad) push push fildl out adc dec ljmp cli addr16 addr16 jp stos into cmp out js ficomp inc jecxz mov loopne aas jne jp repnz fisubr mov insl jne mov dec pop jp adc xor bound ficompl xlat cmp pop jge cmpsb mov sub xchg mov push jne mov data16 cmpsb gs adc jnp or and aas lahf cli xchg jbe jae mov roll mov push sbb sbb xor xor sub enter mov mov sbb stos andl jge push sti cmp cmp mov pusha hlt aas jmp or xchg repz xor test inc mov outsb jbe loope dec push fxch or push test push lock scas clc data16 pop mov (bad) bound cmpsl mov cltd add xlat lods push inc out and into ljmp mov mov dec mov pop incb pop je pop xor aas pop cmc sbb mov icebp popf movsb mov rclb stos insl aam sbb pop jae push pushf js pop mov jp stos adc push movsb std cmp xor add movsb add push jbe fsubp pop movsb aam mov sahf loop fisubrl int inc xchg mov stos jmp push inc dec xchg sarb push or mov ss jmp xor cld insb jecxz jno dec clc mov fidivl imul leave jnp lods sub in scas mov inc dec ja sti shll fiadd aas (bad) addr16 incl aam imul repz xchg pop push pop cmp pushf fnstenv pop push ret mov clc pop repnz mov repz sub cmpsb loopne arpl popa sbb or pop push repz in icebp sbb cmpsb mov mov adc (bad) mull xchg xor mov pop sti mov mov fisubl lret andb data16 cli push mov gs or cmpsb jle in fmull and gs lret cmp rorl dec orl (bad) mov bnd xchg inc stos clc mov jns test or mov cmc movsb jns xor fs sahf jmp pusha push sbb fwait push loope cmp or cmc addr16 cmp pop cmpsl in jl out out sub push mov sub sub jno outsb (bad) (bad) xor imul stos dec pop and xor xor addr16 arpl movsb or mov or aad out test lret mov and cmc ljmp enter mov xorl fidivr stc push arpl pop test in (bad) mov mov inc out mov shlb sbb sub or cwtl pop jnp outsl cli pop test mov jne sub dec mov jp sbb mov sahf xchg addr16 aas jnp rorb cmp jp movsl adcb pop mov out xchg (bad) jp cli scas push lcall push mov jp and inc dec mov push jl daa mov mov inc sti and inc mov loop xchg les lcall stc lds inc jne pop gs out movsb dec jg phaddbq and inc xor cmpsl inc cmp push mov jp test or xchg das stc es lea loop mov lods (bad) jp sub pusha or dec jp jns es xchg cwtl dec xchg aam jbe fidivr inc lahf jp add mov (bad) enter xchg imul mov and out mov stos pop dec imul jnp shll cmp stos and adc mov sbb jp mov sti fdivs ja xor cltd fisubl pop mov mov test outsb push stos cli dec mov aas jl push mov push jp mov inc mov mov mov ret xor enter int xchg inc jp std cmc adcl ljmp pop dec test outsl jp mov rorl loopne add jne pop xor mov push jge sub dec pop pop cltd daa sarb and add inc mov cmp push loopne (bad) mov cmp xor adc fmul mov jp mov cwtl pop sbb fistpl pop sbb pop push dec xorl out sbb jne xlat sbb mov mov icebp movsl clc jns and out pushf (bad) mov jecxz inc jmp jne insl movsb add repnz mov mov insl jp es lea xor das fldt or pop inc insb cmpb aad adc sub mov lret mov cmp iret fcoml jp fwait cwtl into stos (bad) cmp add pop fldcw pop adc add stos push in mov dec subl dec cmpsl stos jle enter fwait mov movsb pushf mov enter hlt pop stos nop pop mov stos rcl mov std stos inc jmp dec push xor cmpsb pop cs aad dec cwtl and mov stos lahf mov divb repz cmc popf mov das sbb dec mov arpl stc push (bad) xor test mov pop mov dec mov add lret push in sarl mov jae sahf (bad) sbb (bad) cmp stos aaa inc sbb sub mov repnz dec sbb add add dec jmp loope xchg aad in gs mov (bad) xchg inc in dec stos and add stc jo xchg mov fbld insb lods out imul sub dec mov jae adc sarb add cmp mov xchg jno repz jmp loopne (bad) ss add cli ja inc sub push add movsl loope test cmp je sbb push push ret push rep mov ja movsb lret bound (bad) cmc jns adc je,pn add inc mov jnp pop jg aad jnp sbb cli mov aad outsl outsb mov div xor mov cmp mov pusha dec jno call arpl movsb push addl add or cmc push mov push dec mulb cmp and xlat cmp movsb inc sub stos aaa mov xchg mov or pop inc bound pusha adc inc rcrb movsb jp cmp into dec bound insl arpl lods shr lds adc call mov js (bad) push and mov push sub push xchg gs cwtl lds movsb sub jp sub and (bad) ja pop lds xchg jp lcall ss divl addl xchg mov out jbe loop stos push sbb jecxz mov (bad) mov js jp sbb movsl xchg lods jbe outsl jb sbb xor subl icebp jne das pop scas int3 sbb mov dec sarl jp rcr ret js mov mov push xor cmp lret jp (bad) xor test jne fstp sub dec pop stos inc jae sbb mov jb sbb sub cmp pop jnp sub jp rcll lods xchg fadds mov clc inc icebp add sti je imul out sub lret scas push xchg cld jne cmpsl dec stos dec sub xor repnz jg sarb mov jo pop (bad) (bad) sbb push fstpt and scas pop mov add jge gs shrb jp packuswb jp sub cmp fidivr pop mov in cmp cmp fisubr pop sahf sbb loop bound add dec and call mov xchg int adc mov in test gs add push iret pop insl push inc fisub punpckhwd mov ret pop jno shl cmp cli jmp jp clc jnp lds ja xchg mov hlt insl idiv cli mov stos (bad) lods add jp and sub jne pop xor pop insl (bad) jp sti js mov dec dec imul ficompl xchg sbb jp int3 mov jae imull jl mov add jne test test hlt push jo mov pop mov dec outsl pop sbb mov addb pop mov inc jp dec jl pop (bad) and jne icebp inc sub sti jp dec out mov jne lods cmp shlb xchg mov jnp stos repz (bad) mov jbe ljmp loope notb cli rcl sti sub and fbld sub mov jbe cmp inc movsb cmpsb cmp dec les pop jp jg aad movsb cmp push icebp or adc mov mov sub fisubr inc (bad) shll and push push inc imul or ret and enter mov insl xchg mov xchg sub sbb pop fnstcw push lods jno ljmp pop mov hlt pop push sbbb gs insl popf push add int or arpl jnp mov jne in dec int jbe cmp xor sbb jae xchg and jp jne movsl xor dec add cli je cld ja mov hlt ror fwait jns jp mov mov cmp push gs (bad) jno mov mov out ret lahf xchg push (bad) je std fbstp (bad) cli rol sti hlt mov mov bound or and jg push pop popa dec xor je pusha mov sbb mov shll add cmp or in cli push xchg mov mov cltd mov loopne rorb ljmp ret sti fdivp jle jle jp jecxz outsb es mov mov mov dec xor mov pushf jle incb mov cmp cmpb push jno insl (bad) xor in in cmp or or mov jg mov push cli pop lods jp inc popa and adc in cli push fs and (bad) loop ljmp pop cmp pop pop and jle je mov or or int3 cmpsb (bad) call mov inc inc lahf adc pushfw jg dec cmpsl cmp int3 jp nop jmp inc leave pushl daa push cmp cmp jecxz (bad) push jp out sub sbb popa ja outsl mov jle rorl inc xor jp imul push repnz cmp xor jl dec push imull cmp xor push mov data16 jp (bad) mov inc lcall push pop leave mov adc mov inc fcomp fistpll push (bad) jns aas sbb add jle lret xchg mov movsb lcall aam dec dec jp fs push add mov in cmp aas dec call sbb hlt jg in mov int3 std popa sbb add in imul dec sbb xchg push pop test add xchg push cmpsb jp jge aad (bad) inc jecxz add jp inc jl sbb inc popa add lock jae fwait hlt jbe stos xchg xor cli movsb push jl fldenv sub negl ret sub mov js ja jl movsb push ret and lods jle (bad) jo nop sub je movsb je xchg dec cltd nop push sub (bad) push xlat (bad) dec jne pop movsb lods cmp cwtl jnp fiaddl and imul test pop jno movsb outsl mov inc stos sbb and inc repz mov stos jb add mov mov xchg rclb mov rorl inc lock mov (bad) xchg insl arpl xchg xor dec jo es jb jge cmp mov and mov fwait jno xor popa mov mov shll cmp jb jae movsb adc push add and or cmp sub inc sti xor mov inc dec sarl xchg inc add loop int3 out div clc je sti mov pusha sahf inc daa cmp (bad) or movsb mov ret pop dec push icebp mov fimull jmp jl xchg aad lods jno (bad) int3 push xor jae mov cmp es and cmp arpl xor mov dec stos xchg sbb aad mov pushf mov scas inc dec scas push imul mov cmp fstpt lahf push lcall dec xchg ret sub jb popa sahf push dec jnp in xor mov inc stos jge sub movsl fwait movsl popa je push aas imul (bad) mov addr16 push dec fistpl or pop cmp push dec fiaddl mov push push (bad) jae xchg fs cmp jb or leave ljmp cmpsb jne mov inc push push insb mov pop inc mov mov xchg jge ja leave stos add sbb mov jnp in (bad) and cmp push rol mov push loope lcall nop insb push loope adc movsb cmp sub fcompl ljmp mov dec mov cmp data16 nop jg iret (bad) ljmp jmp dec iret mov icebp into jno inc jb and clc sbb xor je stos sahf sbb xor mov pop in aaa scas push dec xor xchg jb mov add cmpsb or jg fcomps arpl stos adc and mov jns adc mov jp movsb dec test jge jp cmp add hlt lcall dec fldt jns dec jnp dec xor aaa ret pop cmp fdivrs mov sub std daa jp movsb mov dec sub mov jbe add jnp jnp insl (bad) hlt xchg jp push outsl jns xor aad or mov pop xchg es or push loopne ja,pt cli sar jp test ljmp sub mov jp cmpsl xor sbb imul pop (bad) mov xor les lret loop jp inc pop sub addr16 lds fstps jp les divl and cmp pop mov dec in jp push imul hlt mov and (bad) icebp int mov cwtl sbb (bad) stc test ljmp mov push mov inc jae jne pop sub negb cmpsl sahf cmc dec clc pop xchg pop jp int pop sbb mov jno gs in subl and or jecxz cmp into mov cmp jp dec jo fist pushl aad ret lret je inc and pop int mov cmp (bad) inc fucomip add jne push and mov shlb add push call xorl aaa adc and adc jns fnstenv sarb mov lods mov imul push or mov daa fs bound mov int3 mov sub cmp imul jp ss push pop and jnp lret call add insb pop cwtl sbb aad lea push push dec xchg mov push movb pop out mov sti (bad) xor push sub scas inc daa jae fistpll jno lcall pop add mov aad cmp sti and (bad) push cmpsb or xchg rcll cmp xchg cli dec xacquire aaa xchg and sbbl dec push jp inc jbe and cmp xchg cmpsl (bad) movsb jno ret jno dec sub xchg sbb or push jnp cmpsb gs (bad) mov and jp xchg mov repz (bad) jmp jno pop sbb add jp xor pop push fdivr sti test xchg cltd and jl mov jp ds cmpsb out sbb mov popa adc mov fldt mov ds scas mov dec pop push lock (bad) sub aaa jb pop aas imul (bad) ja xchg fidivr jnp cltd in rorl mov call das lret jno fidivl jp ja iret mov adc and imul fisttpl stos arpl inc push mov cli and jecxz stc jp jl cmp lahf jp mov ret adc cmp (bad) jae out lcall mov mov (bad) mov mov adc pop (bad) jne pop (bad) cmc jecxz in and mov int3 mov jp ljmp dec sbb and sub dec cmp stos mov jmp jp cmpsl pop es jle sub push into jne push rolb dec adc jnp mov ret loopne xchg jmp jnp xorl jl xchg push aaa aad xchg jmp push jne or sub push int jp mov adc pop insb (bad) cmp cmp jp or dec movsl cmp sub inc mov mov (bad) int3 cld not jl sbb jo fcomps jns sbb ds out mov jne subl andnps jp (bad) or xorb (bad) scas jb sub je adc adc sub fsubl push std cli jmp xor sub mov pop cmp cmpsl mov jp sub jns std fild loopne ljmp cwtl jp dec outsl xchg xor push pop jae jge inc outsb cli and jp fs pop xchg sbb ret insl cmp pop lret pop xor jnp (bad) mov mov inc mov insb (bad) jnp iret and inc insb out pushl (bad) adc pop adc mov mov jp inc js je xor jno cmp sahf aad sub mov jae out add inc jnp sbb fnstsw push bndldx mov dec jp inc mov pop cltd ja or mov push in sbb sbb jne stc out jo cmp je (bad) pop clc jp mov imul mov out stc jp adc add jl jbe out xor mov xchg jae adc push movsl movsl jge fisubrl sahf or xchg cmc xchg nop push in lret dec lods pop xor mov cmp jmp jns mov jne sub sub stos sbb cmc mov stos and cs imul stos test idivb insl fildl gs loopne sub mov xchg inc in test push cmp stos inc push in repz shlb leave jne cmp (bad) pop inc jp pop xchg and fs outsb arpl inc jp xor mov arpl sub xchg jae stos mov dec hlt sbb jge xor dec ljmp lahf pop (bad) push loop mov scas sbb pop clc aaa push fs out out jne inc stos push xchg popa push lea xor ja stos insb mov sbb mov (bad) fld jl pop jbe jae iret dec addl mov arpl inc repz pop (bad) sub dec lcall lods in pop xor cmp out jge or ljmp iret jne mov mov inc pop jle xlat imul jp sub gs xchg add mov iret movsb add outsb stos icebp aam sbbl loope fisubl mov test jne movsb xchg pop and lret scas es xlat and push insb popf jbe,pn pop cmp push jo mov daa and mov cmp sbb inc stos dec fsubs dec movsb mov cmpsb pop mov jae inc adc sahf stos ds inc scas add stos cmp dec mov mov incb or cmp cmp xlat pushf in (bad) sub mov xchg jns lock lods je dec aam addr16 iret das sbb jnp pop pop pop xchg push sbb push (bad) or push pop lea sbb in lds test ret insl inc ficom test add cmp push lahf push and jp jae scas jmp mov dec mov push adc mov xchg cli pop push or fisttpll jne xchg daa jg ljmp dec xchg lcall lcall dec int mov negl xlat clc push push jp cmpsl mov xchg mov xchg divb dec lods into and jge fsts es fmull in jg insl sbb mov xor aaa imul jp pop xchg or push cld mov arpl in mov mov (bad) out pop (bad) cmp sahf and xchg inc jo cltd sbb push ss repz and out or mov mov mov (bad) aaa imul sbb lcall insl (bad) shrb or negl pop in xchg in inc mov add imul xchg dec fs repz xchg ret add jp negl pop sbb jp add insb test dec lods outsb inc pop mov xor in push and sarb decb addr16 mov adc dec push pop mov lea imul dec lcall jns mov dec das daa mov push dec and cmp mov xorps adcl jbe ret pop aaa fisttpl add xchg je (bad) add xchg jns,pn sbbl out push stos dec xor add es xor add add popa je inc mov (bad) mov rcr ja mov sbb jnp xchg adc xchg loop inc jbe sub or xchg imul jp stc jnp push lods imul fidiv xchg inc idivb jmp inc scas pop fdivrl xchg out jne in pop (bad) insb lock push add mov mov mov (bad) std insl xor nop imul icebp inc cld lcall test repnz jp xchg cmp xchg sbb jmp pop cmp sub bound sbb xchg scas and push cmp xor lea cmp aaa sahf aam fdivrl mov ficomp movsb cmp movsb rcrb lods popa push mov jnp push mov dec out outsb je loope imul mov sub push or fldenv sbbl mov xchg fcmovbe mov jne mov shl (bad) ds stc nop imul popa gs test jae ljmp mov dec jp fstps dec cmpl inc test jnp xor pusha iret imul and fldt mov mov les jmp or pusha cmp test enter mov jno xchg (bad) jo nop and fcomps push jp and sub push inc pop call jp lahf jns ret ss gs mov xchg inc repz aaa dec (bad) push int (bad) xchg and (bad) (bad) ficomp imul jg pop pop cmp adc inc xorl cmpsl pop sub dec jp mov cmpsb and repnz jg jp out and fstl jp gs pop cmp adc jp stc cmp popa mov addr16 sbb (bad) les mov jp sarb push popa hlt dec mov test cli sarl aad xchg mov call sub jne push loopne pop sti cli pop dec sub pop popa movsb inc leave mov jne scas xchg sbb imul jp mov inc ljmp inc js fld clc add into popa cmpsb mov movsl mov cmpsl cltd cmp sbb jae cmp insb cmpsl cwtl jb push jnp push movsl dec dec cmpsl call data16 cs sub jp fcoml (bad) jp ja cmp mov call test or jg insl mov xchg popf push xchg jecxz push cmp (bad) ljmp jne popl dec sub loope or outsl push in inc arpl jb std xor cli cwtl mov ret sub jp add pop jp mov jmp sub fidivr mov xchg scas (bad) in and jp (bad) in test sub dec (bad) mov fcomi and out add add jns adc lods xchg test cmp jmp push popa loopne adc popf xor xlat mov stos mov jns sub movsb aas sahf insb or (bad) int dec (bad) xlat add inc mov pop data16 and leave imul cli imul sub hlt and push dec imul in int mov jle fcomi mov sbb ret dec jne loope add iret lret frstor mov hlt mov cmp or stos pop pop add adc cld inc lahf mov stos sarb dec xor bound int and mov repnz (bad) cld leave sbb lea imul stos cmpsb push mov (bad) stos sbb aad shlb cs fnstcw pop out pop and imul ret sub mov inc repnz lret pop outsb mov sub cwtl dec (bad) xor mov and push xlat mov outsb scas push and inc ficoml mov movsl pop jmp add stos out add and out xchg fstp inc repnz ficomp je cmpsb outsb js and fwait dec dec fdivrp pusha clc mov inc stos out movsl xlat iret xorl add xor lea sub push cmp aas push pop je ss jl dec addr16 sub hlt fisubl icebp mov dec jno or inc ja mov mov out pop sub imul sbb in fisttp bound lahf cli (bad) jbe rol xchg subl into push inc push jp mov sub sub mov fdivrl inc push arpl mov xor push cli repz add stos sbb mov outsl jne cli popa fisubl movsb or sti orl dec gs gs add stos (bad) fs (bad) repnz movsb ficomp add xchg repz mov xchg sti fdivrs lods mov jge fxch mov movsb add stos xchg fwait in cmpsb (bad) fisttpll imul std cmp les popf xor in jb fidivrl jnp pop loopne xlat push in pop pop arpl pop dec dec out pop shrl push into cmp leave das jle scas jp stos (bad) sub cmp addr16 int jne inc stos cmpl cli or (bad) mov adc dec mov aad movsb xchg lcall jae mov sbb in cmp leave cmpsb cs fsubl ljmp divl dec lods rol cli shrl mov nop adc stc inc xchg push fidivr out pop (bad) jne fistp out add shlb movsb push mov push icebp sbb pop stos nop sub xor js stc sbb xchg push jg xchg inc mov mov jnp fdivrs lret adc dec jne es cmpsl sbb jp inc out (bad) loopne mov or cmp lret aaa std jg loop jne shlb mov or notb popa dec sbb mov push dec incb notb sti (bad) mov addl stos pop push scas int3 fstl mov pusha dec xchg rorb cs pop into adcl movsl jae out insl or add test movsb movsl aas aad push xchg sub cmpsb jo push sub imul lahf add dec mov aas jae add out loop movsb xor js dec aad xor inc or cmpl dec inc das adc and imul clc subl cmp jnp clc hlt sbb ss and sub mov xchg ss mov xchg imul dec lret mov sub je bswap jno call inc dec ret shrl sub stos negl mov ja cmp mov xor stos cmp pop cwtl in repz les stos xchg mov fildll adc ja into pop pop dec out ljmp sarl xchg movsb and fisub iret or inc icebp fwait daa mov ret mov and mov push xchg pop and dec loope jnp sbb repnz loop and xor mov cmp cmp xor xchg imul pop lret repz (bad) mov arpl sub test push es add sbb push fs cltd sti cmp sti sahf or jp push ds mov leave adc mov cmpl imul add call add fdivr mov jecxz jp mov cld cmp cmp jp iret xor add (bad) jb mov mulps in fnstcw add jp xchg mov jo sbb fbstp mov pushf gs cmp ja movl jge jmp mov (bad) jp adc mov rolb js mov lcall test mov xor gs jb lods jae lea xchg cli mov movsb pushf sub gs jno xchg clc pusha fs lock push dec movsl lcall (bad) pop popa pop pop nop jecxz pop enterw push push rcrl push sbb mov dec out gs inc and gs and lea arpl or pop pop rcrl in lds and std pop fdivrp pop jo scas stos nop sti (bad) addr16 ss mov (bad) or mov test das mov jne sbb out loope fwait add imul stos cltd jl test push sub jne loopw mov (bad) xlat jns test mov loope xchg pop jnp rcrl jbe fdiv call push push mov pop notb inc push sarl dec add push lcall mov lret adc pop es and daa insl cmpsl pop arpl adc stos dec mov jne push inc mov jmp jns adc ljmp stos leave jg adc push sub mull das jnp and inc mov out cmc mov aaa jmp in lea pop test lcall and cltd stos daa jp imul pop inc sahf ljmp sti or or mov out ret pop and stos inc push aaa lods ret jecxz cmp lds sbb dec mov data16 daa fisttpll ret xchg sti jle (bad) xor jl fcomp cwtl lods fidivrl jp dec iret (bad) in outsb dec jne insl mov loope xchg ret stos pop sbb orl xor mov jp dec in and sahf pop (bad) das jp (bad) jecxz xchg cmp fs or and sub jbe sbb std popa js shll lret or and sahf lcall push jnp shlb xchg push shll lret bound adc lods hlt leave mov idivb repz jp jnp lds (bad) mov sub sbb push or jp or dec jmp lock jne cld jle push mov fidivl add ja or xchg cli out add pop mov adc mov popa xchg daa imul jp jbe mov (bad) xor cwtl jnp lods aad ja call cli icebp add jne test pop pop lcall pop push ja push scas movsb nop clc lds mov cmp push ljmp aad imul pop gs inc mov sbb add inc fsubl cmpsl repz mov cmp jecxz lret push jae (bad) add (bad) jp rcll movsb mov cmp xor xchg inc loope into scas ss stos mov jnp mov xchg (bad) bt and mov pop and sbb mov jnp es jnp mov movsb pop (bad) jb stos fwait pop xchg cmp cmp aad repnz adc cmp stos test pop mov and mov cmp in popa mov mov ja mov repnz movsb leave fs mov and ss clc xchg movsb dec je inc add jmp jo js gs std mov add sbb pop stos push icebp cmp mov sti pop in and cli mov insb ret pop inc cmp movsb arpl jmp setge imul imul jae daa sub pop repnz sbb jo call pop jb mov ljmp pushf icebp cmpsb jnp dec jbe out sbb jno mov mov add jp or lahf jo repz cli push xor sbb gs and (bad) pusha jp shll xchg aad (bad) sarl gs sub or mov pop (bad) xor pop dec xchg jno into not imul or pop mov ja iret xorl xor sub add sarl shrb sub xchg imul nop mov jp push cmp mov paddsw mov test cmc xchg imul subl xor inc push (bad) cltd jb push cli in lock xor sub xchg fs pop mov adc lret xorl mov jo xor outsb test mov sub cmp popf pop xor fdivrs lock insl in inc and jp (bad) into nop scas jno push stc cmp pop push fwait pop sub loopne mov jne shrb push add jecxz jp mov push cld lcall je cmp dec (bad) in push xchg cmpsb cmp jge jp cmp addr16 int fimull xchg loope (bad) mov dec xchg popf sub cmpsb xor sbb inc mov popa inc add push mov push jge sahf jnp nop loop mov ret ja outsl fs push mov stos mov and push (bad) testb mov sbb dec test jmp fwait pop add inc xor cmp fs sub dec pop and xchg lea jp xchg push mov fnop jae adc leavew je sbb cwtl jns lret xchg jne xor jle xlat mov daa jp leave adc mov pop dec cli jg push jp stc sti push fdivrl cmp cs sbb imul pop jns sub mov cltd sahf cmp hlt repz push mov pop jp mov and add push je int3 dec mov popa sub shll pop adc xchg lcall aad bound mov sahf push pop sbb clc pop test sub enter aam mov aaa sbb fistpl fistp ret jae and jo and sahf fcmovnu in fwait mov sub mov pop mov jo shlb (bad) iret push jp add pop gs movsl jecxz ret jp fbld ja sarb leave xchg pop mov in mov mov test (bad) sub jg jp sahf inc lock shlb sbb cmc cli jp adc je (bad) cmpsl add dec ljmp cmp pop cmc mov inc mov nop jecxz inc popa ret out mov and jle mov (bad) jle ret inc fs (bad) sbb movsb cld sub jae mov insl test or add adc stos mov daa xor hlt push repnz push cmpsl add jbe sbb mov loope and (bad) popf mov stos xchg std popa inc stc pusha arpl sbb jae mov sub int ja aad sub cld lea ja sub xchg mov sub aam sbb adc pop cmp in imul xchg push add fldenv jae xor cltd cs lret push dec mov sub mov ja push jmp inc sbb sti mov xchg jb pushf clc add int pminsw sti in sti sub mov cli push inc jecxz sub push inc jg enter push sub sub xor mov pop call das ja inc imul mov jb or arpl mov add jp stos or xchg and cmp or jb jns popa xor cs add outsb push in aam cwtl jne sbb sbb flds or popa movsb ds hlt rclb movsl lret mov jno add jae rclb jb xor add mov push jmp inc push add add mov mov and imul pop xchg je add mov mov dec mov mov push cmp inc gs inc shrl push pop cli jo gs dec loop repz dec pop add idivl jnp push jecxz adc jnp mov leave jnp pop les mov adc jp orl repz jno arpl mov cwtl jnp ja jp inc xor xchg push cmp hlt pop fsqrt ja neg cltd jnp iret add int3 sbb das aas jp sbb out lcall and mov scas or or jle lret outsb test (bad) xchg repnz xchg pop pusha and scas cli and iret test mov pop mov and push dec enter push xchg movsb jp mov (bad) in jp out mov fstps (bad) jp xor push jp jl sbb fimul sbb jge clc ret fwait cli dec insl enter pop mov pop dec mov mov sbb push insl jle inc jae jnp lds (bad) insl inc dec outsl stos fnstsw xchg fs repnz jnp cld mov push sbb sahf push scas pop dec call add pop stos lret (bad) push sub movsb pop and pop lret insl inc ret sub mov movsl fsts fstl int3 mov and in add call pop inc xor lea int3 repz adc (bad) out sub jecxz (bad) or and movsb push xlat sub ret sbb pop insb nop mov pop pop mov inc xchg sbb mov ds fbstp stos pop pop jo out ljmp lret mov xchg and outsl mov xchg xorl cmp fidivrl inc jno std frstor adc fmuls stc mov lcall jns mov push xorb xor cld push shl cmp sub cmp mov jnp jecxz gs cld ficompl pop adc (bad) (bad) xlat in or out movsl (bad) int sub push jne adc aad int mov out or cmp xchg clc pop xor loope sub mov and scas sub cmp jne (bad) xor scas dec sub jno js pop push inc pop inc pop fcmovnu clc sbb pop dec jae inc jp push (bad) ja xor add cmp dec (bad) lods jp lcall xchg movsb jp mov pop sahf cmp push and fistp fcoms push jecxz cld sbb xchg out mov dec in mov out ret jp or xchg out stc xchg loop mov mov rcll leave mov push jmp jnp sti popf xlat cs jp push inc xchg and cld (bad) mov or hlt lcall popa mul mov xor sbb icebp (bad) std fs arpl std jg mov or notb inc int test xchg mov push arpl xchg push frstor pop fnstsw jne psubsw (bad) inc xor out movsb lcall jp xor test popf xor add jg cmp xorb adc addr16 repnz or sti push imul cltd mov mov jecxz insl fwait cmpl sbb mov xchg dec por inc sbb cld gs js and nop push sahf stos dec aas sbb jp loope or sti mov cmc jbe,pt dec out (bad) imul jg aad iret int rcrl int divb cmp rclb sbb jp pop mov hlt inc or stos test mov inc sbb cmp jge xchg mov clc jp xlat mov sbb pop ja rclb adc mulb jo inc clc pop pop imul (bad) mov add adc jp jg xchg mov pushf cli aas sub cmp imul jp (bad) mov mov inc inc dec ljmpw pusha call test push (bad) push imul sub add fisttpl dec sbb push mov mov mov mov inc push gs fwait jp pop pop call push int loope les dec inc lahf ds cmp out inc mov lods mov mov ret je movsb (bad) push and (bad) div jno mov cmp test into or mulb movsb push (bad) in std jnp int fldt jno enter movsb xor push nop arpl (bad) jo out nop sub out mov pusha push fdivrs imul adc push push push repnz mov notb mov (bad) sbb stos outsb jo out fsubrp mov (bad) mov xchg (bad) sub mov inc sbb (bad) pop and xor mov xchg in pop dec sbb push fdivrs imul inc mov test add inc imul mov pop cmc sub not add pop push push jmp int mov cli test pop out jae shrb stos or negl adc (bad) xor out movsb outsb aad ds scas sub scas call sbb ja stos iret mov movsb sbb int loop mov add cmp adc cmp mov testl dec fwait mov xor pop movsl iret sahf int js pop clc stos cwtl sbb push xchg (bad) pop pop or dec mov ja push mov shll jae pop jae xchg imul les adc ret pop mov repnz mov cmp adc ret stos add jle fidivl js jecxz es repz jg push push mov dec sbb dec aaa push sahf dec rcrb cld mov push out pop mov or imul out loopne sarb pop (bad) and mov cmp inc (bad) incl repz pop xchg movsb jne ret sbb stos push adc sarb xchg (bad) and xor pop add mov inc test push stc fistpll out inc xchg xchg shrl cmp int3 in lret add push xchg hlt (bad) cld inc inc sbb lcall sub pop jle ja cmp and and pop (bad) stc jp stos sub xor fisttp inc dec add pop mov (bad) rcrl sti pop fs (bad) fistpll cld sub (bad) mov dec push inc sub add push dec ja les cld fisubrl movsb testb lret sub leave cli and popa cmp fidiv js (bad) jmp mov mov push bound xchg jp lods cmp jnp (bad) xchg insl loop or outsl mov mov popa or lcall jne sti call iret pop pop sbb xor cli sbb sub (bad) jp das popa cmpsb int3 jge test aad test xchg jp (bad) jns jb jp out out imul scas jp adc mov dec mov mov inc push sbb aad aam fs rcll movsb dec enter (bad) mov fmuls push test iret jbe ja (bad) pop loope es pop cmp pop cwtl xchg xor jb and cmp sbb es mov pop and inc daa xchg jmp clc leave push sub roll jp push sbb pop inc out in fiaddl aad dec (bad) lahf jne xchg ja test dec and fimul sub and bound loopne ja scas mov lcall mov add lock push rclb inc jg mov xchg (bad) mov dec ja repz pop das aaa mov stos mov (bad) call add jp or jge jp xchg out mov fldl mov imul adc xchg mov jp or (bad) les aas ljmp cmp mov inc fsubrl pop sub mov dec enter xor push jae iret call xor loope cmp outsl test je xchg jp data16 repz xchg jp adc enter mov aam mov sarl xchg sbbb cltd outsb jns push cmpsl (bad) or jnp hlt sbb jno jle jp cld mov fdivrl stc ss xchg xlat adc sti cwtl xchg add cmp mov add imulb cmp dec jp adc (bad) and mov mov xor mov push repz cltd pop aam lret out sub xchg ret outsl jmp inc xor xchg xor inc xchg ja insl dec popf hlt pop jns gs push pop subl stos test dec in pusha pop nop and ret xchg push ja mov int fsubp push dec in push popf jg xchg insb and or add ljmp sub ja sti jle add inc mov loopne xchg iret sub ja xchg ffreep push fs in stos dec jecxz lods dec pop in mov add add add or pusha ret pushf push fldlg2 mov inc ja test mov jns (bad) dec and sbb (bad) jle insl add mov xor sub hlt push jb cmp fisttpl ljmp stos jns mov cmp inc (bad) icebp call sub jp sbb mov lcall loope sbb sbb int sti cmc sbb lods pop sbb push jecxz sub add push sbb rcrl xlat outsl cltd cli jo or fcoml xor mov fidivl les adc jp decb push sarl lret adc int3 scas clc stc jmp mov xchg pop jno pop adc mov mov and xchg out daa jo pop push lret jp movsb dec fcomip test aam sahf jne je xchg fistpll clc mov and mov lret adcl jp mov sbb dec test pop repnz dec cwtl xchg push imul das push imul ret and into jne sbb xchg cmp sti lret xor sbb cmpsb adc push dec push rorl imul mov jp or fdivs (bad) jl (bad) jp jg movl mov push add insb cmp jo flds cmp aam cmp repnz mov (bad) push jg leave nop and (bad) out mov push sub inc mov jp das test push jae xor imul jnp jo or lcall mov stc jbe ds ljmp insl jecxz jecxz pop inc pop adc pop add int xor sub jns clc fdivr in xorl and dec outsl mov cltd dec ret ret mov pop bound mov inc repz and sub cmp fs rclb lods jnp push inc (bad) push popa jmp push out loop (bad) mov idivb and lods jp pop pop outsb mov dec mov (bad) add popf mov loop iret push pop jp adc jle and ds sti fsubs mov cmp negl xchg mov jae lods stos cwtl insb mov inc icebp sti push lods fiaddl aam xchg loop (bad) jnp mov pop fdivl stc pushf jb and xchg sahf mov mov jno xor not cvtpi2ps sub rcl cmp test cmpsl adc add outsb in jno jno cli bound add sbb fdivs cli int cmc add jno push pop das add jp and ret mov pop aas jp test movsl pop cltd sbb mov jae nop cs stos or dec push scas lret jne xchg mov push out pextrw ja (bad) nop mov lock popa push push sub (bad) adc mov pop jb or jno mov loop mov sub icebp out (bad) sub into cmpsb ds addr16 jp sbb mov jecxz adc (bad) lahf aad jp mov clc inc jp bound daa nop cmp mov testb mov hlt jp,pt and lea add push dec jo loop popa lock testb mov mov pop mov cwtl fnstenv iret mov sbb cmp pop dec jle mov adc lahf inc stos out btc mov sbbl xor or leave pop fsubrp cmp lret aaa popf push test stos imul mov and jp pop (bad) movsl cmp fistpll xchg lahf mov ja cmp dec pop xlat mov int3 js sahf xchg pop or sub lcall test sbb sti fwait sbb jp sarb xor and push test xchg jp cmp (bad) ss gs rol jp in mov push in addr16 movsl xchg mov es xor lods add adc xchg leave ja ljmp movsb pop cmpsb dec insl sbb ficomp xor inc imul js dec addl cltd arpl pop dec dec in imul sub and xor clc sub mov stos int3 cs push das loope pushf jmp adc (bad) pop cmp lcall xor ret aad push pop mov lods mov scas cmp dec xor and xchg les pop mov and jp jge or mov jp fxtract push imul dec shrb and sub mov adc cmp mov pop outsl (bad) xor popf adc das inc rclb jp sti out pop shll lea ja adcb (bad) mov xchg arpl mov icebp sub out ds test clc sub idivl stc es xor pop ds push orl jp inc lods inc lret daa sahf fnstsw dec movsb xor or jp insl shll test ja outsb or loope repz jle ss sbb es sub mov cmp lock jne test mov jae adc aam sbb js pop loop shrl mov mov test mov aas and imul jae inc and out push cwtl cli rcrb jo or xchg or or add stos into push mov lret loopne (bad) fwait stos in ja pop push xor cli out (bad) mov gs sbb cs inc jns fbld mov jg scas insl fistpl mov out add cmp js inc jp sub push jp andl jmp insl jp cs leave mov lcall test jp sub arpl je and outsl add stos dec mov mov cmp xor dec pop push xlat jp or into and mov and ss outsb mov mov loop repnz (bad) insl inc sub sub out inc rorl jp call mov xchg cmpsb dec jnp push fcoml push int3 enter or xorl jp inc add outsb in sarl aam insl fs (bad) rorb mov jns jne out aaa mov jno orb lcall cmpsl xchg and jmp xor or stos (bad) in ljmp (bad) sahf jb (bad) jnp xchg jns (bad) push jp or imul mov idivb xor int3 in jp mov mov nop jae cmpsb popa insl shll push jbe jnp loope sbb sti add jp dec and ds imul jp sbb (bad) (bad) jp (bad) mov aad loop cmp mov xchg jp xchg gs sahf imul dec mov mov pop sbb push popf jnp xchg popa inc in imul push or jp cmp out subl cmp (bad) xchg xor push inc or add sub pop push das jb xchg cli aam and cmp adc mov or imul and iret in sbb in sbbb pop enter fstpl ja add and das mov xchg mov les icebp push mov or dec jp and pop dec insb push cli das xchg push mov pop or aam fisubrl mov cld xchg aas sbb add sti mov mov jecxz pop popf movsb xchg sti sbb sarl cmc addr16 adc mov pushf inc mov add push scas sub aaa jne or fcompl cmp (bad) pop inc gs dec das xchg pop cmp cmp or mov shl mov int out push icebp xchg jp,pt adc push jp lret lahf sbb jp lds cmp mov or xor je incl cmp ljmp mov xorb ds adcl out xchg jne fsubs out jp xchg mov xchg or pushf sub insl imul dec pusha (bad) add mov stc mov insb xchg popf hlt (bad) movsb loope xchg jmp fwait insb jns jno shlb push mov dec fadd sbb fimull xchg cmpsb inc xchg outsb inc (bad) nop gs xor jp dec in enter popf push xor scas cmp aas xchg lock mov jp push add popf push jae mov das lret add dec jb jno insl inc pop cmpsl pop aad ja mov xchg pop and push pop pop icebp ja mov xchg sub ja cmp sbb sbb mov jle jns orl sbb movsb jecxz daa push inc insl das sub adc out cltd sar out movsb test dec ret out xor cwtl or out xlat gs lock repz mov stos sub push bound sub push push cs pop adc nop leave sbb add addr16 mov lcall in cmp movsb cli leave loope call pop xchg xorb sub lock pop inc in mov push mov cmp jl sbb lods and and jnp mov xchg mov imul pop mov and iret mov inc mov lret add or mov mov movsl loope xor arpl jo dec addr16 or ss bound pusha jnp mov outsl push push stos out imul nop popa sbb out mov imul in js inc pop pop (bad) scas fidivrl push mov ljmp inc add es xchg jne push aam (bad) push arpl (bad) ss add cmp orl inc loop add mov inc cld push sub movsb ficomp push mov mov les sub inc cmp jb jne push cwtl aad xchg and cmpsl jmp fs push pop dec movsb bswap sbb mov xchg or addr16 ds jnp push pushf cmp mov sbb mov into bound fsubrs mov cs add pushf mov inc stos fcompl sub repnz hlt iret in sbb xor stos call loope sti mov scas adc cld jmp movsb imul lds jno jnp andl pushf jnp push xchg out pop mov es in int3 xchg jmp xchg push dec pop dec push or fildl mov loopne sbb sub xor sbb ficom xlat or lds push inc lret push cmp jnp mov jns xor movsl xchg and adc jge lret ljmp movsb sub push ds inc insb mov cmp (bad) call cmp outsb jbe add push jp int3 pop scas mov jl jp sbb push add push int cmp add jp add cmp mov push lahf jno repz pop (bad) jb ficoml and jp iret sbb mov inc ret in iret xchg jp data16 mov push inc adc jp outsl call outsb add cmp ficoml dec stos jp adc into pushf insl cld out cmp std pop (bad) repz mov add jl sbb xchg scas inc sbb std push jnp mov push test cmpsb jp and sbb inc pop pop pushf mov jp xlat jecxz mov inc enter pushl les imull iret mov jo stc jnp xor iret and fidivrl adc outsb out sub jae adc or (bad) (bad) jp dec jbe and pop jae xchg jp in lahf pop push insb (bad) std in xchg je xor pop pop xor or pop jb repz sbb dec cmc clc cld adc ret cwtl sti icebp adcb mov aaa and jp xchg push lods or and dec push jp mov push xchg jp lcall or pop dec jae xchg mov xor mov jp push ficompl arpl cmpsb stos adc sbb add pop inc push mov std pop fisttpl pop mov jae mov push jp mov notb std pop jp xor jp test jge or dec imul pop cmp dec jge gs pextrw xor dec jp loope test fildll imul cmp lea (bad) js punpckhdq shrb ljmp cmp sti pop call cmp xor sbb xchg push or mov jns jnp mov xor push and std pop push mov test mov xor out dec xchg inc jp repz rcll xchg push jp bound cmp jp dec fcmove sbb jge popa mov push xchg cmp andl or jae adc pop aam not clc jl mov (bad) pop inc aas dec sub pushf mov std fdivp mov xchg repnz pop xchg sub inc mov jno test repnz in adc and jge push pop jle or sub loopne push mov dec mov gs mov fs fbld fstps ret inc mov rorl stos fs jo mov popa int cld sub insb jle jo cmp mov mov sbb (bad) jns mov inc xchg dec cmpsl xchg mov daa jns inc je add pop loopne stos shrl push jae mov mov arpl leave decb or and or inc adc scas dec sub (bad) jne mov movsl stos jmp roll cmp push pop gs push mov pop pusha dec clc sub stos inc sub mov xchg clc xor inc test cmp adc movsl data16 mov sahf iret inc dec xchg es dec dec pop jecxz jecxz adc dec push insl mov dec enter arpl pop fmuls sub out mov or mov into fs imul fnstenv jne sbb dec mov xlat push or iret mov cli jl stos loope mov mov test leave cli sub insb cmp imul pop repz or fcomps test mov (bad) and sbbb mov sub sub cmpsb sbb jno jp leave push push xlat and jecxz mov adc cmc (bad) mov xlat mov push mov jp and lea xchg dec cli xor ljmp inc and xor insb subl hlt cmpsb jnp xor and imul (bad) mov cwtl cltd jnp das xor test sub add das mov cltd dec shll (bad) lock push mov jp and sub pop xchg stc xor jnp lcall dec int movsb out sub jno addl in sbb (bad) loopne push lcall in (bad) mov insl out pop pop pminsw push xlat jbe xchg mov cmpsb (bad) mov xor fnsave or jp mov push daa mov loope adc pop popf adc cli test or add pop and ljmp adc add stos gs ja test mov dec (bad) dec and nop xchg cltd jbe sbb (bad) pop jnp and mov jge pop into sub xchg xchg loop mov jne or mov jp push jo sub jg jp aaa ffree movsb jns push jp into gs cli les jp inc lods arpl imul inc inc dec push jp or icebp shrb fnstenv jo jle daa cmpl stos pop outsb cmp cmc xchg pushf add ljmp pop sbb jnp mov push (bad) repnz add leave das mov into or cli stos mov inc gs lods mulb inc jns or outsb dec shrb pop add out js pusha clc lea cli adc das push imul stos add int3 inc (bad) lahf dec mov push or xchg or out pop jo adcb repnz shrl gs insb lods push adc xchg divb (bad) jecxz test insb jmp cmp clc (bad) dec adc stos mov cmpl xor jnp jno enter mov stos lret shl mov arpl mov push stos das or dec sbb mov mov jbe clc jno sti mov jmp aaa fs sarl arpl push (bad) rcr and cmp mov popf sti insl inc xchg stos xchg aam test pushf test insl sarl push test repnz pop pop out pop adc loop fistpl test loope stos pop out xchg ja ja cmp mov jp xchg mov cmp out dec leave mov push test jmp rcrl imul mov pop add mulb out mov cmc ja mov pop cmp sbb cmp dec lret push bound scas sbb mov add sbb add mov into out mov stos sub cmp cmpl repnz push aam test (bad) (bad) nop xor scas lcall hlt in mov bound mov xor add negb xchg shrl lcall dec insb fs sbb test daa clc (bad) mov fldt or jmp (bad) jb jp lds adc dec repnz arpl jo xchg cmpsb cmpb mov push cmpsl push popa (bad) in les mov movsl hlt pop jae in insb inc sbb stos dec sub jae pop xlat fsub jbe jns xor mov add xadd jge jp mov lds pop in cmp stc mov mov mov and add jno insb dec xchg mov jecxz jg lahf push imul inc dec stos push cmp sbbl incb fisubl cs fcomps aad jp sbb out int adc mov cmp xchg jle xor shll sub scas jmp push fild mov stc jp xor mov add sti mov rcr cltd repnz test daa int and jle fisttpll mov sub int3 and ja das outsl mov dec jp (bad) jmp nop call jecxz test cmp cli lds aas imul clc aas out sub mov (bad) jg mov inc jnp push dec lds insb addl mov push sub mov jle lods lret (bad) mov sbb ss xchg and mov outsb (bad) cli ja push cmpb mov clc sti add mov mulps (bad) mov ja mov pop push je fdivp push mov jp push stos pop insl dec push cli insb adc popa push jle sub jnp inc imul jp rorl ss xchg stos cltd add jp repz mov setle cmp xchg insl ret dec into jno ljmp jbe je,pt shll ret jp adc insl add add shrb popf adc ja out mov pushf mov cmp mov fstl icebp out sti jp mov hlt add add adc out sbb jle fs jae jae push sbb and dec jp sarl dec jp aas pop ret notb cmpsb jecxz push jp insb push and jb jp push pushw dec outsl popa test push aas mov jne in push clc cmpsl jnp stos into scas jp in incl ja pop imul pop sahf iret stos mov lds enter lcall and fidiv xchg and push or pushf (bad) shlb loop mov clc lods mov xor imul stos jne cmp sub and repnz subl inc or jb xlat push pop jecxz xchg adc ja push movsb ljmp scas int gs jl in scas push lods call (bad) mov dec push adc fs cmp andb shrb jl rcrb shrl mov cmp sahf lahf dec ret xchg stos or mov jp or imul adc inc jo je cs mov pusha std mov sbb push lea icebp dec jp pop cld cmp pop (bad) jp push add dec leave mov mov sub push imul mov in jle jp xor adc jb cmp fwait jns push sbb dec jne inc jmp sbb cmpsl xchg fsubp flds (bad) pusha enter jns mov fbld push int3 xchg xchg jp mov pop xchg out idivl es cs enter bound shrb mull lods mov jnp imul fiaddl rclb push mov mov pop push jp xor inc xor or cltd movsb lret test add jp lock xchg xchg sti sti xor push jae jp pushf lods out test or xchg pop and pusha xchg xchg inc inc sarb and jp inc (bad) stos leave mov cmp ljmp sub es loop (bad) pop leave dec lret dec das adc push jbe or and (bad) pop mov rclb and fnsave mov fidivrl aas or jns dec cmp jp leave pop or and fdivs clc push jns dec mov (bad) ret loopne jp int3 push addr16 inc adc push in xor dec jns push cmp cmp jp push or pop fnstenv xchg dec outsl jmp add ss or les out or stos scas jp mov xchg repnz cmp xchg jne jle aam push mov xor sti push jo push inc adc in sbb imul inc xor mov dec or fnstcw pop enter out jmp (bad) and test or pop lea aad jns loope (bad) in imul std jp dec call gs dec imul fdivr add es push pop (bad) mov xlat sahf jno and mov std mov hlt jecxz mov mov ss mov bound fistp mov int lgs or pop mov ja jge pop int pop and mov in scas dec loopne and jbe cmp fistpll sub outsb iret pop outsl cmpsb bound out (bad) js mov ret ja mov pop jecxz xchg ja sbb add clc sbb imul ljmp fs stos xchg testb xchg mov (bad) add repnz add (bad) cmp iret sub mov fwait sbb lods outsb or pop xchg lea out lds dec cmc call sbb mov push pop aas popa shrl std jp lods gs dec cmp call jp ror test insl jl aaa cld push clc cmp jp arpl and rcll sub or (bad) cld xchg dec jnp addr16 aad adc cli pop push cmp fiaddl dec and mov movsl adc xor fsubrs imul mov cmpsb pop sarl xchg adc repz and in cld (bad) call ja jp jne add inc cmp repz sbb jb jp bound fwait ljmp mov sub in jp adc and outsl cwtl clc jp (bad) std dec hlt ss or pop (bad) push jp (bad) lods mov adc jmp push jg cmp sbb or shll lock xlat lret jp pop jnp xchg loopne sbb (bad) lods (bad) mov mov xor jp jo gs (bad) mov jp (bad) (bad) xchg sbb sahf sahf mov in xchg jns ss ja mov mov push arpl xor jno and out ret xchg sbb icebp cmp mov lret push adcb jp (bad) not push pusha xor mov (bad) or (bad) movsl cmp xchg mov jp insb mov xchg insl inc jp fwait movsb cld jmp divl mov mov xchg ret mov pop cltd jp int3 mov arpl pop pop ja xlat fistpl fwait inc jg and sub mov into popf pop push mov sub dec lock cmp jp nop xchg shr pop mov cmp gs int3 push pop sahf sti adc sub mov sub outsb dec or les jp mov xor loop sbbb out imul mov data16 mov (bad) and xor jae inc insl lock cmc mov mov xchg repz xor cmpsl push push test lds mov enter mov call jmp cmp add add lea vunpcklps aam (bad) leave cmp sub and imul sbb out add ss jmp into dec out mov xor dec add pop jno dec sarl fstps sti aam sub jl adc sti or jne iret loop jle jecxz adc (bad) or xchg mov adc aam sub adc (bad) cwtl movsb xchg and iret nop (bad) imul imul jne xchg scas inc push sti xchg jae shrl add imul sarb add jnp push dec xor fdivrs aad jge in aam dec jnp lret push test jmp lcall jnp fsubs jp (bad) ficom jp inc in outsb ljmp push daa mov pop xor pop mov pop jle jp and jae jp repz or cs lcall scas jo sbb inc inc (bad) aam aaa insl inc mov popf xchg jp pop sbb jle lods jp sub jne push push (bad) mov dec inc jae std insb dec inc fcomps add test shll out lret inc int3 imul (bad) icebp mov jae push dec cmc cmp jp xchg jb mov jo idiv and lock fwait stc or sub mov clc repz in jnp ds in sbb insl pop inc movsb repnz rcrl ret dec xlat lret pusha gs ret sbb inc movsb in pop xlat mov jb ja (bad) jnp outsb cmp les daa pop call fdivrs lods pmulhw sbb cmc icebp xchg cmp sbb loop adc and das lret mov push cmpsl repnz mov sbb cmp (bad) (bad) adc sbb hlt jg je jne pop jae cltd mov push insl xor mov scas cmp xchg pop jp cmp in push sub sbb fist lea xchg rorl fmul repnz jp pop adc imul cmpb (bad) jp and xchg cmpsl cmpl sti xor jp add push insl or sarl cmp (bad) or jp jl lea cmp push xor sub orl mov jae mov loop mov jp push pop and jmp add sti jge add insl sbb mov mov mov add mov cmp enter in inc andl dec dec adc jno movsb or mov insl push cwtl mov jne sbb hlt jle lahf hlt xchg xchg push jg push and lods pop adcl jmp js test iret pop mov xor push add call mov out push dec mov dec mov sti ds aam fildl xor (bad) lock adc sbb out mov cmc fidivl aaa xlat jp mov mov daa inc jbe pop mov jl int xchg test arpl jb pushf jle andb inc insl add jne (bad) cmp xchg mov ret cmp mov cmp cmpsb mov cmp jne mov sbb adc stos hlt addr16 ja and jp in jge jg cmpl movsl or jo jp stc out sub nop push sub push ja js push jp mov ret jno xor inc and ljmp (bad) push jp outsb pop push ljmp ja pushf xchg lcall pop insb popf aam outsl dec test dec stos dec movsb xchg mov iret sbb jmp and or cld dec mov in push push call xchg ja test pop jns pop movsb inc cmp daa sub ret jnp sub aam dec and push add movsb cltd out in xchg dec dec dec push push inc or lods loopne loopne sub jmp inc movl dec dec mov mov arpl cmp jl xchg mov dec jae sub sbb cli inc and movsb fbld jp and in ret js mov or sub push sbb jl aam fldt mov xchg imul mov sti adc rorb movsb sti cmp sbbb add bound pop push (bad) arpl rclb sbb mov pop jo ret outsl call dec movsb pop fsubp pop cmp xlat icebp xchg dec ss arpl adc imul cmp mov and cli dec rcrl movsl sbb mov lcall out lahf ja mov insb mov push je xor inc stos pop add add and inc push or push incb push aaa dec mov movsb sub push pushf ja out imul xor jecxz cs into mov andb loopne jnp fldt sub repz aas out push mov mov shrb and cmc stos nop stc pop jnp shll fld add bswap mov cmpsb mov mov leave jno stos push or pop sub and iret cmp push movsb mov fidivr pop aad js stos out aaa clc movsl sub call imul inc insl add in cmp pop (bad) dec fildll inc xlat test cmp xchg idivb or mov sub cld push sub xlat jne adc xchg jp sbb xor movb jbe icebp sbb out sbb lret pusha aas jg jne jno lods cmp xchg push aaa out cli adc imul xlat push cwtl es stc les (bad) xor ja lea mov or adc or jecxz jp sbb push sbb shrl cmp lcall bound sbb mov and sub lea mov cmp adc popa pop in xchg lcall xchg dec jno pop shll pop cmp inc xor sbb fisubl mov out imul jno icebp lcall sahf idivb jp push push sub mov (bad) cmc pop mov (bad) std push add cli mov push pop mov js mov outsl inc sub push cs aaa xchg shl daa dec jp sbb icebp jp adc jg rorb pop pop (bad) cmp cli dec dec ss in push pop ds pop push (bad) mov sub lret push stos test stc inc mov js into dec in add and bound jno enter cs jp mov jae lret cltd xchg pop sbb cmc jne (bad) mov xchg cmpsb cmpsl mov jnp pop loopne inc mov xor icebp inc push sbb (bad) negl call das test arpl sti pop pop inc popa shlb (bad) mov sbb mov movl push call xor jne ja std inc repz aad push mov xor imul sub jp sub aas xor and in jmp aaa adc lcall push xchg adc out xlat aam sbbb pusha adc lret dec push fdivrl inc mov and loop mov hlt jg xchg jb sbb addl out push shr inc mov and loope adc jne fsubr mov cmp daa and arpl je pop mov jp stos pop adc inc jp cmc aam repz iret sbb jne fcomps jae cli add std (bad) cli movl (bad) fwait pop imul jae mov lcall aaa cmp push incb and xor jp sub xchg arpl fsubr dec mov lahf aad fnstsw jp xchg mov mov jns jns xor add sbb (bad) cwtl lock sbb popa pop add mov hlt push jnp,pt inc add mov push sub jp lret test inc ret pushl mov mov das dec jno sub xchg pop sub icebp push and cmc dec jo jp shl adc jp xchg jmp xchg fisub ja loop pop fxch sti cwtl sub ficomp cmp push mov pushf jle cmp sti test jp out add call lods xor lret daa jne iret xchg xorl and insl clc jns dec cmpsb mov mov repnz and sbb nop mov or push jp mov dec add les add xor mov cmpsb ja loope (bad) es addps and mov or je dec repz add aas mov jnp push push fstps jp push cltd sbb je sub jg imul movsb cltd insl dec movsb or cli jnp dec imul pop jp enter fcomp xor imul xor aas jp mov xchg icebp leave fldlg2 jp add mov jae std xchg mov scas mov stos jo adc mov jp and ret idivl enter jo pop cmp dec cli xor jge lcall fistp push aaa lahf xor in ror mov push adc lcall mov (bad) jb ss clc fcomps movsb lock (bad) movsb repnz jae xchg mov icebp test rcrl stos jne dec cltd xor nop jbe aaa aad push int stos leave mov repz mov incl pop mov pop (bad) in imul mov gs lods mov push push mov mov imul dec mov mov inc mov stos cmp fsubrl add popf jp js stos lods in inc dec repz rorl (bad) mov mov pop add inc xchg (bad) or mov jbe mov jno cmpsl clc imul and movsb push test nop push jp cmpsl or imul xchg xor movsb fbld in dec add mov push sti andb cmp lret (bad) ja jl pop sbb adc imul pop and into sub iret inc mov mov jecxz bound pop jbe mov test sub pusha arpl test add sahf ret fs sbb imul jle cmpsb push sbb iret jbe push in popa stos jmp sbb sahf cmp mov scas mov or xchg pop jnp insl test pop xor pop je pop mov mov loopne aam sub lock sub add stc jp push dec cmpsb pop push stos mov mov add dec push adc add hlt or xchg mov mov mov mov stos xchg adc jne jb mov roll pop jmp stos scas sbb ljmp pusha jbe inc ret pop jae mov das js dec sub in fisubr outsb xchg jno stos ljmp xchg add (bad) lcall fnstsw pushf pop inc pop inc call push rcll cmc andb ja call push lea stos popa mov movsb outsb repz sti mov inc jl ds (bad) movsb insl fldenv adc ja loop push stos int3 xlat insb push pop sahf pop movsb notl pop insl pop jnp sbb scas int or sub xor movsl mov shlb mov inc jae aaa jno repnz bnd push ds int3 ret lahf xchg popa jb mov aam sub inc pop xchg jnp xorl daa stos mov sub popf shrb int movsl pusha popa add ljmp iret daa call adc pop cmpb loopne stos icebp mov pusha sub js insb xchg nop sub mov xor mull inc stos or in iret stos pop cli movsb rcrb push pop dec push sbb and and movsb adc push mov sbb or data16 dec add fidiv dec xchg sbb push movsl fcmovnu push cltd bound out add gs adc inc js in push or ja mov mov les imul fildl xchg sub repz cmc inc push and popw je stos pop xor cmp sub sbb jnp xor movsb xchg jmp das pop loopne lcall and insb hlt data16 in push mov cmp scas mov imul mov js mov add inc in add fbld jne adc mov stos push xchg jge ljmp out iret cmp ficompl shll aad inc fwait jae inc add rcrb (bad) jno sbb bound cmp sar je in lahf mov fwait dec aad push or mov clc je stos xor inc jne cmp shlb aaa jp int mov adc jne mov xor hlt sahf mov pop xor out inc jp sub aaa dec in add or sub jp scas sub adc aam inc jno sub dec sbb arpl mov stos sbb aad shrb das jl test std mov repnz ret ja lea mov add sbb mov push ds dec jp nop jae iret test jno std jg ret and lods xchg pop push mov test nop inc xor push je sbb movsl ret jnp mov mov enter cmp jb sbbb loopne cmp fwait jl shll (bad) dec jne (bad) negl lock mov stos jge jp add popf pop cmp pop int3 add sub jp jns push mov pop iret and sti jl inc insb dec lds cmpsl mov aaa (bad) insl inc jp stos loope (bad) mov sub cli jmp push jp push gs cmp or hlt or sbb inc pop push push jp addb jnp xor pop ds aaa jl xor pop jp push cmp inc mov add sbb mov push aad pop jp loop outsl xor rorb jmp fistpl cmp xchg push xchg dec mov fistpll mov repz inc int fadd mov lods (bad) call pop (bad) daa cmp adc add popa shl xchg cmpb stos mov xor (bad) (bad) cmp xor inc ja pop inc jmp and or sub sub jge (bad) sub mov sbb xchg pop jb test bound jns sub idivb dec jecxz xchg dec stos mov cmp ja jp pushf xchg out mov js imul fwait inc and jne jno rorl aaa xor leave iret int mov shrb push xor ficompl xchg sub frstor movsb lods loop mov sbb jmp rcrb jb mov mov gs mov and sti jecxz mov adc outsl sub movsb hlt mov out ja testl cmc pop jne dec and pop mov mov leave lahf fcompl dec mov clc adc hlt cmp pop (bad) (bad) iret jae ljmp sarl lcall fmuls pop pop push xor addl je mov ja imul mov insl xlat clc mov fistl leave movsb mov ds mov into pusha call call sub inc cltd cmp (bad) jmp pop inc dec xchg cmp sub out movsb or jecxz pop pop outsb and stos or test dec sarb mov (bad) repz sbb mov sbb cmpsl push or loopne lahf lock pop aam jno mov sub pop (bad) fildll test daa repnz in sti sub dec aam (bad) cmp cmp mov es push sbb sub in stos mov jo clc rcrb jbe pusha fs movsb ss jl sub fs ret loopne fmull popa imul dec pop insl pusha push jl imul xor inc jns mov addr16 cmp fs jge inc mov adc jp into xchg lods test lea int or ss (bad) sbb (bad) cmc mov test (bad) sub xchg jo nop pop pop xor fnstenv jae in and add cli sbb cmp or jae ficompl daa into mov mov xchg jnp repz stc fsubs ret test and jge loope cwtl lods inc jae js ja xchg sub xor jp mov stos int3 jno stos test adcb mov mov es movsb loope jbe jp mov popa sahf addr16 cmp push xchg mov imul ror scas mov xchg sub mov out leave insl jbe mov xor xor jle test or lock mov ret fisttpll push je xor cltd and push aam movsb lea mov adc mov xchg push sub mov jp dec sub inc jnp aaa mov addr16 movsb jbe movsb (bad) ja pop ja pop (bad) xor clc mov push inc stos addr16 pop pop imul jae pop xorl or icebp cli fldt addr16 pop cmp je sbb lret enter adc stos mov (bad) enter mov movsl cmp inc stos leave cmpsl pushf and mov pop mov je lret pop fmuls dec je bnd pop mov fstps mov adc loop jle sub add frstor mov movsb insl fisttp jl cmp push pop adc jmp dec je push lea enter stos rorb ror mov jl adc js lods sbb pop aad outsb jo adc sbb mov jbe aas mov jp push nop mov sub jp pushf pop pop xor jmp xor mov test push xor in jp cld xor push nop push mov mov jecxz cmp loop or (bad) cli (bad) cmp mov ret add mov aaa hlt jle clc jp push arpl fwait cwtl jp adc sbb mov (bad) popf cmp mov jp stos lahf lcall (bad) fdivrl jns test xchg jnp daa adc jg rorb sub lcall jns dec jnp cmpsb fcmove rolb jp mov mov out mov scas and cmp add cs cmp push imul repz repnz lcall mov dec scas out (bad) cli fnstcw out jno jle pop fs sbb cmp cmc cmp pusha jp push and cld jnp xchg push jp pop add inc cmp jp add sub repnz push mov std mov push ja insl push stos add push jae in mov iret push push mov out jmp dec rolb shrl pusha push ja stos cmp fnstsw mov jbe stos in (bad) std das add inc sarl lock cmc int3 loope js or (bad) or pop popa push iret dec add sbb xorb movsb dec xor (bad) fisubl jle mov xor sub hlt xchg pop pop push cli xchg fidivrl loope and sbb ret jmp jne nop push ja (bad) mov out inc cmp ret and push cli (bad) pop imul xchg fwait rclb clc nop sbb push int or fidivl cmp test in (bad) lock pop lret pop inc int3 sahf mov mov pop jle pop push stc inc mov jmp pop int je sbb (bad) lea cwtl movsb (bad) into sti xor push rclb in dec (bad) es stos cmp xchg (bad) ds mov xor mov cmp push pop jbe mov or aam inc push mov ja iret leave (bad) mov dec pusha jne call pop fidivl pop sbb stos out add lret jae lea popa in fs js addr16 cmp push popa sbbb add loopne jg inc jp pop pushf push dec and jp mov loop jp not testl pop jnp pop push loope (bad) sarb fstpl pop (bad) jo jp cs out xchg adc test jl jp popa adc (bad) mov pusha sti mov sbb mov idivb mov xchg xor jp sti cwtl lcall out xchg cwtl push outsb push fstl (bad) and add or out insl inc mov jg jle hlt lea jecxz iret insl dec fbstp jne cwtl sbb xchg inc xor lret pop imul lahf push xchg dec mov insl out cmp dec or mov cli cmpsl lahf inc sub ljmp lret out add push ljmp push and or dec aas push testb jno sub insb les je jne mov ljmp pushf adc hlt std (bad) sti scas dec xchg insl xor clc jp pushf adc mov mov out in pop lods dec mov fidivr in into sub push arpl jecxz lcall aaa imul je or mov jp jns jb fs mov cmp jp mov adc loopne or jl push jp cmc jbe xchg xchg sbb dec addr16 lahf jns mov or jno fnstsw aas push pop mov cmc movsl mov sbb xchg jp ds jns mov cmpsl inc push xchg xchg imul insb (bad) sbb dec mov mov xchg and sub mov pop jecxz xor jp pushf xchg mov cwtl aad jno das loope mov or es jbe jle or pop xor add cmp mov repnz cmpsl add jl pop or jp loop push loopne ljmp pop fidiv mov cld gs mov mov push cmp fldcw pop (bad) std mov fiadd mov add int adc repz and dec xchg mov mov pushf jp cmp cs ret pop xor dec cmpsl loop jp adc push jp or and mov jp pop fwait repnz sub out std push jnp ja adc cmp sti call pushf les jp dec stc mov dec mov jp push icebp inc mov pop jecxz jle cld repnz jp mov sub jp fnsave jno cmp mov cltd jnp (bad) push push add rorl ljmp mov xor sub mov mov jp test and lcall addr16 sub mov xchg insl imul loop (bad) jnp add push cmpsl in out ffree xor inc aad mov push jns jle stos xchg lds xor icebp movsb aas dec mov das cmp jl dec jmp mov jnp hlt push fdivrl js addr16 push xchg and stos mov pop cmp int3 cmpsl je sbb jp xlat push mov ja ja dec add clc fisttpll xor rclb gs (bad) jp jnp popf ja or fstpt scas jp stos test test jp adc clc push pushl jae sarl inc cmp loopne daa mov inc (bad) hlt jne iret cmp adcl mov mov xor enter sbb insl dec push insb xchg sub jp or inc sahf arpl (bad) repnz ss inc and fsincos xchg pop pop jp sahf pushw dec popa sarb dec lds popf jg lret jp mov adc jp aad dec mov shrl jg or popa in pop adc insb (bad) and inc (bad) xor repnz int3 jge das inc out push jp push mov mov daa rcrb cmp scas jp mov (bad) std adc pop push ret inc and movsl push call add add loop cli cmp jp or or sbb ret lea pop stc mov pushf lret pop cmp push in sti sub and in arpl or push add sub movsl mov push popa cmpsb not mov cmpl lods mov mov sbb stos (bad) out ja stos mov mov mov xchg rolb stos jecxz nop jb push cmp rcrl int movsb push das xor iret sti jnp sub mov mov mov mov int3 loope icebp fstpl movsb test (bad) dec jno out repnz pop push test ja movsl adc push es stos jno pushf mov or pop pop stos dec arpl mov stos and shll dec stos pushf sub fstps jp jo add movsb sbb jb pop (bad) sti push jne inc movsb clc add mov ret or ja or imul or (bad) mov mov mov ret roll inc mov mov cmp or je jns mov ds push sbb mov pop std jp adc call mov ja insl adc dec sub xchg pop popa mov jnp and (bad) xchg mov daa fsubr (bad) push jno add fcoml jp (bad) jmp fdivrs lds ret popf sbb dec popa add arpl inc add mov subl xchg lods push pop sbb (bad) sbb jp in outsb xchg xor repz ds or sub push sarl jnp dec aam push insl inc jno xchg fdivrl popa lds mov lahf gs jae repz and daa xor or sub gs adc push stc cmp or and adc inc inc (bad) xchg sbb or popa nop jp fstl xchg insl fwait gs outsb add loopne mov ret scas pop and sbb push sub mov jp pushf cmc ljmp jp test push sub hlt clc dec xchg sub dec into dec add jne test sbb mov mov mov jno mov (bad) (bad) sbb cmp sub sbbb mov sahf jp xchg jno adc cmp pop ss sbb dec into mov pop jp mov jmp das add das imul jmp mov jge imul fwait shrl clc fstpt xchg loope dec jp pop fisubrl out (bad) fdivl leave mov jp xchg out adc mov cwtl fsin or jp sub loop jp xchg inc clc xchg sbb lcall and pop sahf out fisub sbb add mov jp add lock adc pop mov clc outsl mov mov inc xchg xchg pop xchg pushf pop inc and repz xchg sbb jae sub mov fnstenv jge cltd push mov or cld jne daa jp cmpsl cwtl cltd sbb dec and loope cmp inc das das adc mov and daa jo pop shll stos sub mov repnz test subl mov jnp add lods xchg sbb cli cmc jae fidivrl jo pop sbb xlat inc lret fs inc mov mov cmpsl push pop mov mov cmc shlb gs mov pop mov rorl orl sbb hlt cmc mov xor sbb cli (bad) (bad) sub jle (bad) jp pusha cmc jne call xchg insl faddp jo push mov jno sub pop pop aas sbb cmpsl pop leave sbb sarb aaa or cmp cmpl sub imul mov jmp add jbe stc pop mov pop lret pop dec push xchg stos and pop sbb popf sbb inc clc popa pop or pop sub in pop push jae jg add jo (bad) jmp dec mov and sub or int sbb xchg sub pushf je divl jns jno call pop fisttp jae jbe stc adc sub pusha push iret sbb sbb movsl sub lahf mov adc add pop adc scas addr16 stc jb or push dec ja mov call push loopnew jle test outsb movsb decl push fldl dec test pushf fwait stos popf jg imulb push outsl sbb jmp sub cmp dec xchg clc cmpl sbbl xor lret hlt mov jle and leave call mov sbb adc fcmovu ret add in test pushf sti xor dec es idivl adc icebp xchg mov mov xor mov bnd data16 jl test inc fldt xchg dec cli lcall add jg dec incl or push mov aaa mov dec jne push bound add and adc stos insl sbb sbb mov scas fmuls lds arpl (bad) or push in dec sub dec scas adc pusha push arpl jbe pusha in enter and jp imulb adc push mov insl mov out mov pop loop sub sbb dec mov mov enter inc sbb fstl push mov test cwtl sbbl push xor mov push out fimull movsb loope mov or ja add test jae jo push jnp imul stos dec sbb mov scas lahf lcall dec popa aam arpl fidivrl int3 or insl add or sahf xor fcmovne out stos inc movsb test js push sub movsb jo sahf cmp cltd shrb and out mov inc jnp out loop mov shll lret xchg call stos insb pop or fucom cmc mov inc or xchg mov sub cmp add push mov (bad) push cltd incl push mov jl add ret loope jbe in inc xchg cmpsb push jp xchg (bad) jb jno fs pushl out ljmp stos outsl or pop bound fcoml arpl sti jns mov fistpll pop adc sbb mov xchg xor (bad) cmp push arpl (bad) push stos dec lret add out adc outsb pop jp mov test jo mov inc xor jp pop xchg data16 inc shlb push sti and push jp push xor sbb adc jp cmpsl mov and pop repz out jp and out add adc mov stc lods out jp sbb xor mov sti mov push ljmp (bad) sbb mov lods mov inc sbb das cli pop mov and jp xor adc fldt add jae aaa repnz push push jnp and dec pop or into sub test iret and mov xor pop ja outsl test pop fbstp fiadd outsl (bad) add es pop data16 ja or data16 and cmp jp mov inc jp sbb mov pop cli cwtl sbb lret mov cmp rep fnstsw mov in jp sub lret std loope or sarb sti data16 sub jp sbb xlat push movsb pop bound jnp idiv lea jns movsb add iret jne mov pop pop inc sbb sbb fsubs inc mov int lock fwait rcll jp cld jne xor sbb sti pop cmp pop and jp cwtl mov push mov aas jle xor cmp insl dec mov mov jno (bad) mov sahf cltd jb cwtl cmp fisttp sub jns sbb cli lret inc pop adc ss push sbb jp sbb xchg mov ret (bad) xor lea xchg or inc dec movsl add add jp test sub pop in fxch (bad) xor dec dec aam pusha mov pop jno sbb jp in inc cmpsb sub data16 mov pop xor jge outsb (bad) aaa jp push pop and imul push in (bad) lods push pop popf jg lret sub xchg cli adcl sub fdivrl je cltd jp sub push int3 or or push sub add and add lret sbb movsb daa xor or sub addl xor mov jne popl out js sub push push cmc jno inc jns jp xor nop bound mov mov jge xchg test clc jne push jne int iret call push pop enter int out scas cli and fs mov lcall scas dec push popa sub gs sti push lret pop movsb fimull rcr xchg adc fidivr ret xchg test clc add daa jb sahf pop push inc lods lea xor pusha mov popa arpl pop dec (bad) fildl stos outsb gs and xor inc push pop data16 clc scas cmp shll jl xchg mov inc mov pop pop jnp bound mov mov and xchg inc inc repnz or or mov mov out pop pop data16 push xchg cmp aas out adc fucomi sub mov std jb testb adc test mov push cmp stos adc pop jecxz pop push aad insl lock out adc stos adcb pop mov dec pop cmpsb or subl stos xchg jne cmp push movsl ret imul lret sti mov mov je mov (bad) ffreep jbe mov in popf sub les (bad) call inc stc int mov pop fmull dec jb cmp and adc aad sti inc dec push loopne ret (bad) mov push repz insb cs mov and sbb hlt mov push mov setae jp cmpsb lods leave movsb arpl mov lret push sbb xchg arpl out add das aad dec ljmp inc fucomi push movl stos (bad) cld push push inc and movsl rorb sub les mov (bad) dec mov mov push dec ds push popa push insb jne pusha iret cmp or outsb lcall call gs jne je push adc shl ret xorl cmp jne jo mov (bad) hlt lret add inc add gs jae mov and pushaw cmp test cmpsl cmpsb leave (bad) sub cmp mov cmp sub repnz sub mov stos lea cmp jl scas sbb inc pop xchg add sub nop test rcrl and mov cmp arpl fs xor cmp xchg push push mov push lods push jae ret out test leave pusha xor or (bad) xor mov cmp jl push pushl dec gs pushw jp stos (bad) outsl mov (bad) fisttpl aas sbb or arpl addr16 (bad) pusha lea ficom jne inc lock lcall xchg mov push mov sbb jo out and dec stos jne push loopne lock ljmp pusha repz out or cli loopne sub push gs mov sub jp test cld mov xchg fild lock (bad) mov enter mov push fnstsw pop pushf jp cmp mov ds jp bound in dec test and (bad) jp or pop fstps sarb ret out int inc jne add pop or out int3 cmp testb lahf rolw pop xchg adc jg xchg sub movsl dec cli loop xor jns dec mov push pop pop ret stos cmp lods es push jl lahf jnp push loopne jno insl xchg test leave jmp xchg clc mov jnp jo pushf cmpsl sub ljmp std pop push and jnp dec fidivl and adc dec sbb test hlt (bad) xor sub jne fstps and cli mov arpl jp test shlb imul icebp pop jp lahf push pop rcll sbb popf out mov mov mov idivb insl adc push xchg xchg jp pusha aas push out aas cmpsl or ds pop nop int jp jnp in shl popf pop jp xchg mov data16 inc and push addr16 jp xchg mov jp lret lock mov into push ret test mov lcall and jne jmp jmp inc mov cli daa cmp cmp (bad) sbb add imul adc inc xchg insl jp je imul rcrb imul iret dec xchg cltd insl subb pop loop jae movsb test lds mov inc xor daa jl pop inc add mov xlat int3 into mov dec js rol std dec stos sub sarl (bad) mov push add mov xor add (bad) sbb ret das repz xor (bad) sahf rorb dec movsb enter cmp pop (bad) je cmp pop xchg mull or mov dec aam xchg addr16 and xchg in push in mov mov repnz adc sbb sub je xchg cli je stos iret fs jns dec (bad) xor loope inc cmpsb mov aas sub add sahf lods (bad) and adc insl cmp or das shll iret stos nop push xchg arpl outsb adc lods sti (bad) pop lahf mov xor stos push xchg inc cmp cld push mov push stos imul sarl mov push fxch int3 mov push jl in popf repz lret movl sub lcall (bad) stc mov out jge or ret leave sbb adc pop ds stos sbb xor xlat lret push lock (bad) stos sub ret std pop push lea (bad) jb gs js add fdivr adc xor stos xchg xor insb adc in sbb add mov mov and pusha shll iret cmp repz std sbb std pop xchg and cmovg mov stos cmpsb jb dec sarl ja aad cmp inc shll in fildl xchg mov fmulp pop lock jno mov jg sbb subl mov inc cmpsb icebp arpl mov sub hlt sbb (bad) daa std je stos lahf icebp xchg mov in mov sti insb insl stos call mov enter push std outsl adc add es or add cld xlat fwait imul cs int mov jae dec lods pop pop and scas insl mov sub mov mov (bad) sub test mov daa fs test clc jnp out add jns jp fcmovu jg dec das daa dec xchg xchg jp aas cld mov cmovne (bad) jb mov sbb hlt cli and loope dec inc jp sbb jmp inc lods loopne shrb and mov pop subb jl xor jecxz inc jbe shl je add or mov fsubrs push mov rcll (bad) sbb sub arpl and jbe test stc jge sbb vpsubb mov leave xchg mov mov jg jp cmp fisubrl les loop xchg jp sbb sbb sti mov jnp push rcrb mov push xorl jp mov jnp jp cmovp popf mov out cmc pop ret push jp sbb dec and sub cmpsb pop sub into mov dec or mov loopne sbb repnz stos mov pop (bad) repz ds sarl outsl imul int3 mov xchg (bad) ljmp cmp cmp rol int shlb sbb mov mov adc pop mov nop inc dec sbb jl mov cmp mov dec inc rcl out in insb and cmp sti cmp xchg popf push movsb rcl jne cmc inc dec (bad) enter cs mov fs jp or mov jp cmpsb add dec jp fstpl into test xor or sub lret out push xchg lcall cmp add dec pop push xchg jp lods push faddl sub imul dec test cmpsl aaa scas cmp (bad) insl clc out adc jno or pop jmp aas (bad) repz (bad) dec movsl jae pop jg push out inc push mov sub xlat jnp daa xchg push lahf (bad) (bad) lds sub inc xorb addr16 sub pop shrb call clc into xor mov jb nop jp sbb xchg jp cmpsb lret add in (bad) inc mov or jp xor push jge or jmp fs cmpl sub imul jp cmc std pop xlat cs cltd (bad) or leave out mov sbb inc xor dec and idivl cmp jns push or in aas int3 aam ja pop (bad) mov lret leave out mov sbb mov mulb adc dec out xchg jo inc mov dec and mov cmp test lahf jp sub mov jne stc fnsetpm(287 lock push jp addr16 pop jns pop mov jp std sub (bad) dec loopne dec loope test or add and push push lcall cltd push pop adc cmp arpl add in out dec lds jp stos std hlt lods pop aad fsubs push ret push popf sub mov in lock out ror and lahf mov jno push bound loop jp (bad) shl cs fistpll xchg xchg pop aas and das cmc push mov lret and movsb daa mov push loope adc mov adc mov mov call xlat mov jp fidivrl push cmp rorl or xchg jp je jne push pop xchg jmp push push mov inc les rcr (bad) loopne out ljmp lahf jp inc cli fstps pop lods jp xor hlt (bad) mov jp add adc jp test or es cmpsb jnp dec push cli pop inc xor jp das repnz sub dec mov and xchg jnp pop push lods nop jp inc and jp gs les popl (bad) jb cmp sbb sahf jp dec xor xchg iret cwtl add (bad) mov dec add add pop movl inc jo fucomip or dec mov enter imul aas mov es or (bad) out push dec mov inc cmpsl xlat sti in sbb or sub shl test mov lock add add lds bound pop aad (bad) mov inc xor push movsl cmp mov aaa cld roll movsb loope je test dec jp jb mov test mov loopne aaa out or aad (bad) repz add inc mov (bad) jmp sbb add xchg loop test jge jp mov push rorb jmp pop pop pop cltd repnz mov je jp outsl inc jno dec popf jg (bad) jecxz into jp dec arpl out mov roll repz xor mov or cwtl loope adc cwtl xchg push xchg adc jp push popa inc repnz mov icebp int3 xor mov add inc lock jnp fsts lcall lret scas add jbe mov dec jle popa fdivrs sbb dec jp dec mov jne fdivrl stos and jp add insl lods cmp mov jp mov outsb cwtl xorl add je loopne in xor loop out negl out sbb pop jp test lahf inc xchg ja jne mov in sbbl dec popa pop sarb sbb adc aad jo mov lods psadbw ja in fdivrl insl test inc subl cltd push lds jbe dec pop int3 leave cli lods push cmpsl jp sahf mov ljmp sub lret dec repz push rorl jp scas pop mov jp stos leave outsb jb loopne ja pop cld std scas lret mov adc fistpl xchg pop pop mov cmp in xchg inc fistpl test fsubrs lods sub iret jp pop adc dec lea les sti aad test lcall jne dec sahf movsl or (bad) mov jg cltd dec xor shl cmp sub cwtl or jmp xchg out dec mov push jp arpl stos fcoms xor inc lock lret (bad) mov dec cmp xchg iret clc cmp ret adc mov adc pop sbb jp and mov ljmp jp (bad) fcmovnu xor popa data16 pushf push movsb psubsw cmp push addr16 lret cwtl cmpsb jp dec clc or xchg lds mov into xchg pop cld mov xchg test push cmp (bad) inc sub adc addr16 jl push sbb (bad) jae mov mov daa stos or sub xchg adcb (bad) cs or push mov stos push arpl imul xchg jp in jecxz outsl push fist push sbb scas mov rclb lds aaa adc gs insb lods inc sbb sub insl jae popf je add add fcoml enter cmpb (bad) cmp jle pop jp sub or cmp pushw fldenv sarl push push aaa cmp icebp adc jbe,pt (bad) insb xor mov aaa cmp sub jp sbb fs mov push out out lods das mov std jp push sbb jno mov call mov subl movsb pop add call mov jmp (bad) stos mov add xchg jbe (bad) rcl divb dec mov mov imul sti cmc cmp insl fnop jg adc jnp mov in add mov xor push lods mov inc outsb sub popa dec inc jp or lods cmp sahf push testl subl (bad) (bad) xor stc jnp dec mov aam test loope into jne mov les fwait xchg (bad) push jp jno sti stc loopne movsl sbb rcrl sbb push adc mov shll fidiv sbb imul insl push and cwtl sbb add in or and jmp mov cwtl cmp mov adc cmpsb push mov pop or cli pop sbb fsubrp popa cmp or jno std popa xchg stos cmpsb je mov xchg aad int3 dec fsubrs pusha int std dec xlat movsb (bad) je movsb pop inc mov stos and xchg mov sub mov cmp scas add shrb cmc xchg mov mov movsb orl ja les stos mov out mov outsb mov mov orl das fs dec jae sahf stos or sbb jnp sub pop bound xchg xor add push popf mov ret stos mov jle xor js je movaps ja sti or sbb add mov sti jnp stos in das cmp loope ror out cmp mov sub cmc dec daa jle fldlg2 sbb mov or sbb rolb jnp sub fstps mov imul xchg mov aam pop popf cmp mov fs cli ficom sbb inc jns std notl push mov cltd mov xor test arpl push mov mov sub cli aam add out jnp jp jecxz lods sarl jo jle sub sub mov mov mov mov enter push je jl jg xlat pop mov jp popa rcrb in dec cld mov rorl jmp xlat je int3 jp inc out push or ss lcall (bad) jae shrb pop xchg jno lods cmp aam lcall push cli or mov jae leave sbb push hlt mov call adcl adc gs fs and iret sub add (bad) push fnstsw movsb ret (bad) sub into mov int sbb nop xchg sub mov inc cmp sub mov cmp jae inc jae stos mov inc mov jmp sub mov icebp xchg stos aad jae in out cmp mov (bad) mov stos or fwait jle xchg pop das arpl or mov xchg and mov push cmpsl cmp dec jecxz inc add xlat lea js jbe push fisttpll bound lret movsb or lods movsb roll or jmp sbb insb scas jecxz cmc repnz dec adcb jae or add sbb (bad) jp push test xlat inc movsl push gs jns (bad) push arpl and sahf lret cmpsb fbld mov cld mov and dec push pop cmp enter xchg aas xor and xchg stos inc cmp sar (bad) or jae fwait iret ja roll mov sti int3 jmp jnp adcl insl dec inc lock xor xchg or xchg push xchg in xchg add loopne adc jnp clc pop sbb add (bad) jne (bad) mov adc (bad) mov flds rorl (bad) jl nop loope xor jp pop pop leave stos sub or lea inc jne test add stos test or (bad) int inc mov push and lret jl out sti push cmpsb test jne mov pusha out xor rorl add lret cmpsb mov jg ljmp and incl gs mov sbb (bad) jmp fcoms mov pop fist orl push int sbb mov test das jmp xchg pop mov (bad) fcompl int (bad) je pop fcomi inc adc into repnz fs jno je imul xor movsb cmc fxch or out out (bad) fistpl xchg arpl jl or jae aas shrb pop lea add pop sub ret or outsl jbe sbb mov jmp cmp stos or movsb mov dec leave xchg mov jae mov imul sbb dec pop add subb int3 push adc mov gs push fwait pop adc rcll bound pop xchg orb out imul stos mov mov jnp mov outsb and mov icebp cmp xlat sbb loopne and sub pop cmp int movsb mov and enter shll or into or rcrl jecxz iret (bad) into insl mov adc push xor jecxz (bad) push in les hlt jp push into les aad sub ljmp pop arpl repnz movsb mov lret cmp sbb xchg mov scas (bad) xchg ja mov repnz push cli lret stos xchg sbb sub rcll imul mov ljmp cmp mov out mov jp xchg daa int je add push fwait adc stos shrb push jle cmp jp in call dec lods cli pusha (bad) jecxz stc rorl aaa jae,pt ret mov int3 cmp jp add and mov addl dec lret lea aam or adc inc xchg insb ss leave dec sbb dec imul (bad) cmp es shrb push out lds test jp testb fnstenv cmp in into or aaa fstpl jno loope pusha xchg push rolb ret pop setns repnz call pop in hlt jnp mov and add xchg int3 fimul mov sbb jp mov sbb dec fwait jno negb loopew mov dec jp icebp scas jmp popa cwtl mov das mov xchg add jne lret mov cli inc hlt mov (bad) mov inc js lcall xchg cmp cmp mov mov cwtl (bad) clc jo sbb (bad) ljmp test sbb push mov imul sbb hlt mov sti fisttpl mov out in xor xchg inc mov ret jp fcmovne mov xchg sbb push xchg sbb xchg lret fistpl or fwait cmp xor pop outsl inc nop jp cmpsl ror xchg adc ret sbbb adc jmp stos or cmp cmp (bad) jge jnp jmp rorl fsubrl mov jbe lds (bad) dec sub adc xchg push (bad) mov add out and jne push mov (bad) adc mov jp int3 sbb jb cmpsl aad fstl mov ja push and add jle mov xchg mov jbe jo pusha dec cli imull xor decb cmp imul mov or lock jp sub jo into jb push push popa inc aas xor and insl call sar lahf cli and or icebp ret pop sub add repnz jp adc push enter push mov xchg mov mov aam ja sub jp data16 add in jp lods nop inc xorb pop mulb loop pop sbb xor popf imul pop and pop (bad) sbb rolb dec push cmp stos jae mov ljmp into pop clc in sar sub adc mov adc fmuls into out sbb mov test cmpsb pusha cs add insb orb mov pop rorb test push inc jnp data16 dec pop push rol inc mov lcall sub xor shrl push push subl stos in movsb out sub push mov aad cmp ljmp rclb lock add loope xor mov push fcomps negb jp or jge push shll push gs push leave pop (bad) cmpsl sbb stc mov jmp fs aad scas jne pop xor fwait xchg sub mov dec sub mov fistp mov sahf fwait pop testb enter pushf xlat sub dec cmp xor push ja add and in dec jp push pop push cmp push and jp lret out imul jne cwtl fs pop mov mov inc xchg and mov addb rcll mov aas (bad) dec jmp sbb mov sbb xchg rolb sbb jp mov loop jne adc pop ds or sub add call test mov inc push fcmovnbe loopne mov add insl inc daa fisttpl mov test inc jp mov xchg pushf sub (bad) mov aas mov shr sbb xor inc insb sbb (bad) scas sub (bad) enter or fiadd mov cmc sbb sub out cmp dec popa jmp and int3 jnp cmp jbe lret in or pushf into mov add inc mov xchg adc das dec and mov cmp test push push ret jnp jns inc mov xlat inc mov popf jp dec test sub jmp mov jp push jo xchg int jp out push xor pusha jp xlat pushf aaa cmp ss pop (bad) jnp pop (bad) jae in repnz jbe lret movsl pop jbe or mov stos divl jns mov je lods fmulp loope mov (bad) mov sub fdivrs mov daa mov (bad) mov test lea out push push daa adc jo and jp jg lock test lahf cli (bad) fcmovu aaa (bad) jnp pop lcall jp mov jno nop (bad) fimull cmp mov cli sar jmp hlt sbb cwtl ljmp imul push imul loopne ds mov enter pop (bad) and push xor xchg push sbb sub ds rcr fprem mov or std imul jnp sub dec xorl xchg into data16 add jp dec fst add out jp ja int3 xchg push mov insl pop dec outsb cmp cmp jo adc xor mov movsl mov mov cmc dec and (bad) mov aas jnp add mov sbb adc mov jp jge inc jo cmp gs xor add jge les (bad) jb lahf arpl and js out scas sub (bad) mov or hlt ret pop jmp icebp (bad) in fstps cmovg mov push jp jl cmp rcr jp xchg sahf jp mov (bad) jecxz sbb and cmpsb cmp sahf mov test cmpsb cmp jg test lret (bad) mov jl lret push and ss pop mov das sbbb mov adc js loope lret je cmp mov mov jp clc pop (bad) xor popa pushf adc movsb imul xor sub fdivrs repnz add xchg add je cs xor js jmp sub lret (bad) sbb mov aam jno or dec aam cmp out cmp xchg jbe sub bound lahf add fistpl mov mov cmpsb jnp jecxz rolb mov xchg dec aad jbe inc cli insb std push mov or sbb call sbb mov mov jbe mov lcall sahf mov mov daa fstpl pop mov sbb xor mov scas pop fnstsw mov lahf push adc mov jp cmc lods sbb or outsl aam fwait (bad) in mov jne push fstps pop rolb test mov out lret test mov mov cmp ret push movsl cmp jp mov xchg cltd jp push mov lahf fbstp ret stos sbb cmp and cmpsl leave popa das in xor ja jl ret adc fwait lcall in rcrl cmc pop cmp cld mov iret mov cmp call and sub nop int3 adc lret sbb (bad) hlt cmpsl mov iret lea jbe stos mov out push shl test ljmp cmp dec sub push mov adc test mov int pop cmp jae cltd jae lret aas out mov (bad) dec mov inc cmp push dec jp (bad) pop cltd sbb adc imulb xor jne daa or mov xchg mov dec and out jno cld xor and sbb fcmovnu pop jmp mov sahf (bad) fldcw arpl outsl pop loopne inc ja leave lds adc imul jge sar aaa add iret ljmp xchg aas out (bad) push mov mov mov popa lea jp dec and ja and jbe mov cmc inc icebp jne cmp aam lock ja test or sub adc sub xor popl scas fxch insl iret std movsb daa out imulb cli int3 mov jp or jmp outsb or daa pop jae andl mov std int3 fs shrl repnz cld sahf sbb cmp jnp adc inc mov jae cld cli sti lret outsb call and cwtl icebp sbb fs std ljmp insl mov (bad) push cmp fmull popa ret cvtps2pi lahf aam in jae in pop inc outsl ficomp mov inc scas int out jp std ja xor clc adc jg pop mov ret (bad) mov std cmc dec ja loope jae jno jb cmp push leave popa dec jp hlt cmpsl ret imul xorl jp das ret cmpsl cwtl test movsl es inc aas xchg jecxz cmp out lcall push ret jbe cmp and cs add jne ret popf in mov insl or insb add cli loop mov adc add adc insb mov popa jae sbb aam (bad) bnd xorl pop fisttpll loope cmp in pop jne rorb mov pop cltd cli xchg xor (bad) cmp out dec sarb pop lods jae push mov push pop push push repz sbb cli pop pop lret xor xor cmpsb fistpll daa mov adc sub pop mov sbb sbb cwtl dec sbb jge inc insb dec into sbb mov enter fstpt dec insl aad sub scas ret xchg jp xor mov insl loop stos add jp fistp out cs jle push pop cli sub repz pop subl icebp xchg shl (bad) jp adc cmpl jnp xor ljmp cli mov pop jnp pop jp cld jmp dec push fwait dec jp iret rcl jl lret push es sbb sub dec adc rolb jp mov ds mov ret hlt (bad) mov dec mov pop test xchg and je add mov xlat test push mov cmp arpl imul fnsave pop dec xor in xor sbb je lret pop mov push or imul insl dec jp mov fldl add xchg pusha xchg enter sahf jecxz xor and sub xchg ja mov mov adc sub jg idivl repnz jnp xlat fmull int3 pop xchg ret cli in adc cli ss sbb lods sub jno sbb scas push mov stos pop (bad) ja mov bound inc inc fs cmp addl rorb xchg and sub mov aad xorl push dec test lds xchg xchg insl and js xor aaa int addr16 pop add jp int3 or pop imul ja add cld nop mov adc pop jmp inc popa jmp test mov and cwtl jg hlt (bad) adc pop fsts jp pusha pop or out rcr fwait cmc xor add pop hlt mov or in andl popf jp push xchg adc insl dec jp hlt repz dec mov aas mov pusha sti mov inc push sbb repnz out push mov sti jp ss lret sub insb inc cmc mov jp sub mov (bad) sarl stos pop aam lret cmp test (bad) mov jp daa call xchg jp xor sub ret (bad) inc enter push into mov daa jnp cltd dec enter mov xchg sahf pop movsb sbb jecxz mov fstl fs repnz pusha bound cli (bad) adc xorl sbb pop cmp mov add xor ja adc ljmp lret dec (bad) jp add pop sub add dec and (bad) js jb push or addr16 cmp or jne fistpl mov cmp pop push sti fdivrs jne data16 out jbe lahf jb cvtpi2ps mov lret cmp push lock or push sahf pop or arpl insl stos scas or lods mov jp mov lock decl add clc dec hlt test jnp stos cmp jno,pn inc sbb jb aas and mov cmp and xchg stos call sbb cmp std repz mov shll sbb ficomp add dec repnz ds sbb pop fcmovu or bound les es mov movsl lea mov sbb cltd mov mov jno fild mov popf fistpl jp xchg cmp dec cmpsl cltd jp mov push mov addl je ret xor cltd push (bad) imul popa mov cwtl fisubl or rcr fidivl jne push pusha mov cmp jnp addr16 jno (bad) adc outsl je push mov lcall aaa jb push outsl jp sbb test aad jno fs jmp aam or adc pushf sub xchg jbe dec jp lahf adc xor out jne insb inc xchg inc shlb and mov stos xor (bad) cmc and or cli lods pusha sahf aas jp dec les lret cmp inc insl out fdivl or pop jmp jg arpl ds lods (bad) and mov je test add fwait xchg pushl por jl jg ficomp jns jp imull mov sti dec push int inc jb cmp shll mov imul das ljmp lock jbe popf orl into push cld lcall insl lret mov push dec scas insl mov jp cmp push and ret lret dec and aaa pop inc arpl fxch sbb cmpsb dec daa jg jno cmp sub cmp mov inc repz sbb push xchg jne mov dec orb enter call cli mov xchg sbb pop sub test cmp pop jecxz ret adc call sub jp nop inc mov xchg cltd jle sub and scas inc fsubrs in push fistp mov test test inc mov jnp test xor jp std mov testl fcomps fstpt pusha nop lock (bad) cmp cmp cmp jp bound or ljmp mov fdivs cmp insb pop pop imul imul push ja outsb les (bad) jecxz jbe xchg jno push xchg (bad) (bad) sbb push data16 adc and mov test xchg jp cli add cmp out jp xchg jp mov test dec push sarl add pop pop les jecxz lret pop or test push push jnp mov imul addr16 int3 (bad) ja icebp shlb call fistp adc xor pusha dec cmp mov es lea pop push loop adcb iret jo sub jge xchg and imul pop and and leave mov adc arpl sbb push fcoms sbb in repnz sub jg stos nop cli sub mul sub jae dec jmp sub outsl in popa jae sbb in dec xchg and inc movsb xor adc pop ljmpw test jge fcmovnb adc add push mov fwait repz bound and out cmp pop mov js and mov into lmsw hlt scas add adc sub pop loopne lcall call imul cmp xor pop inc mov mov (bad) push sti or movsl repz push loopne fstpt cmp mov int push or loopne xchg inc jb mov enter pop cwtl sbb int rcl jae cmpb hlt not adc push mov jb mov cltd ja fyl2x inc and jnp in enter aas rolb lock ficompl jge out pop fbstp jg xchg cmp mov xchg popf push adc fisttpll in test push arpl jp push jge idivl dec lahf jno fcomps lcall ja (bad) pop and mov js xor jp (bad) pop les test iret in xchg cli pusha aam mov or pusha out lcall xor (bad) in inc adc jns aas sub inc mov and pusha cmp sbb fnstenv mov push jl jno adc push in mov imul mov hlt (bad) push jp fld cmp cmpsl sbb cmp int pop inc sar cmp fisttpl js jp xor mov lret jmp loop add in push pop jp and xor jp divl xor jnp mov sbb jp,pt mov sahf negl movsb mov mov mov xor push mov fidivrl mov sbb loopne jno dec sub add xor popf mov in cmpsl jne jo cwtl insl mov iret stos pushf out lcall and mov jl fwait cmp in sub stos pop fwait jp pop xorb mov dec jne lds test in cli push mov jno xor jo (bad) pop jp sbb push pop cmp add je push pusha mov js aas cmp pop xor jnp (bad) daa lea fadd fildl enter or cltd jp repnz inc xor (bad) sub add xor mov stos in loop sub mov outsl jns test xor jp sbb mov dec pop call mov aaa jnp dec cmp cwtl mov push call mov jp int xor outsl js jne lods inc xchg addr16 idiv xor lock push fs dec push out push into jp pop inc fmuls sti jp jno popa inc out mov xchg out pop lahf arpl imul pop (bad) push sub cmpsb mov movsb icebp mov out ret roll stos imul mov and mov fwait sub pusha lahf mov jecxz push scas arpl imul clc sub stos sarl pop stos pop or mov hlt (bad) mov (bad) mov sbb xchg pop sarl sbb outsl pusha clc push lcall inc in ret xchg nop adc sbb inc mov aaa cld jbe aad stos into cmp push lret or movsb sub mov pop popf sub jae loop mov cmp orl jmp sub jns cmp jnp stos sub sar repz push jnp cmpsl mov dec cmp (bad) or out rorl cmpsb dec and jo loope add inc lcall dec push add enter cmp hlt jg out push enter xchg test imul lahf and sbb repz movsb aad push stos inc fstps (bad) mov jle pushf cmpsl fnstenv stc or push mov nop fwait stos inc jmp add dec das xor jp mov js inc mov cmpsb adc jmp mov inc dec cs jp inc cmpsl les jno sub lea sbb clc inc and daa sub jnp jno jecxz dec jmp pop jp push push push pop enter push insl out push cmp jnp into xor jp push push outsl ret pop mov sub pop in and xchg aas xchg push adc aam sub icebp js mov pop jne push ja adc insb jle outsb lret mov add inc dec lods push sahf jp lods loopne insb mov jns arpl push jno inc adc aam jp out (bad) out aad faddp push or lret test roll nop cmpsl mov sbb xor push and sub mov or push stos mov push hlt sub cmp lods dec addl fisubrl sub addr16 mov out int mov mov cmp das xchg mov cmp pop jnp adc into shrb jl fcmovnb insb dec js lcall dec xchg addr16 ljmp push jp dec and dec test jp sbb inc cmp pop xchg cmp or xchg add je mov add sahf pop clc fcompl add pop and dec dec cmpsl mov popf mov rcr adcl push aas pushf jle in mov pop push (bad) out jp in aam push idivl imul pop out or xchg (bad) jecxz fdivrs insl cmpsb (bad) shrb add push popf ljmp fdivrs daa xchg xlat std ja jp inc cmpsb int mov and jb jae push loopne lds sti xchg dec or sbb xchg xchg pop imul cmc or add jp test aaa fistpll or jae adc jmp imul loop in jns pushf ret jo xchg aam je arpl jecxz xor jp dec packssdw adc pop mov rol add jae jp xchg lock scas test imul (bad) repz or in pop ja out hlt aas xchg int3 mov lahf jns lret and jp insl (bad) sbb mov push imul pop ret mov mov jp xchg loope jg xchg fdivrl dec cmp cwtl pop xor sbb pop add ja inc lods mov lret out jae fwait push or pop lcall and jp nop loopne mov fldt or (bad) and or mov xlat hlt fimull mov lods jp mov or sub and fisubl jnp push movsl xchg add jp pop ss (bad) mov and dec int3 in repz imul cli imul mov and es cmc outsb mov cli je (bad) fcomps xor sub sbb push xor mov pushf fwait je jp lds xchg fisubr arpl mov icebp add jnp ljmp or inc mov hlt push insl add jg mov aas cmp jp in test aad sahf testl jmp mov je js sarl push mov in andl sbb sub daa cmp popa jge aad or sub pop imul dec pop movsb mov out stc fcmovnbe test push arpl pop adc mov test (bad) hlt sub push lret int3 (bad) es sub jg add jnp jo cmp dec (bad) jb shlb mov dec jno mov add or (bad) jp,pt cmp (bad) sbb and ljmp jo jecxz sub sub mov nop jecxz or flds inc jp sub ds ja push repnz ljmp rclb jp lds xlat sub push pop xchg push jle sarb xchg push xchg ljmp test jne rcll inc ja out lret loop cld add ljmp repz or adc ret movsb in inc jp adc ret ljmp cmpsb mov mov inc mov imul xor add fimul push pop (bad) dec lock jp mov sbb fstps gs pop lea add fstpt or mov fidivrl jp repnz mov mov imul jnp ja mov add leave stos sarb and xchg pop push jecxz pop mov popa push adc lea dec and pop jb jp fistpl cld jne or out push jae jp jbe push pop (bad) dec mov outsl sbb push push dec in sub pop aad pushf in push loope xor sub sti push repnz rclb testl (bad) or jecxz lods cmp out and mov jp fstl mov push popa clc aam gs rep rcrl (bad) adc cmpsl jnp xchg into in data16 pop jo test fwait pop jp rolb jne and in pop jg mov test icebp sbbl mov sbb jecxz mov mov mov icebp inc in push push and (bad) fistp mov add pusha sbb sub stos (bad) push cmpsb add negl aam rcll jae cmp cmp shrb mov pop (bad) stos pop sub pop mov pop fwait mov insl fs test popa movsb inc cmp and xlat sar mov and pop lea push aas sub daa xchg mov sbb addl sub sbb jns cmp cltd mov out mov repz sahf popa cmp lock (bad) imul rclb insb dec lret je stos mov xchg addr16 scas sub and (bad) mov dec push and pusha sbb mov lock movsb cmp xlat fucomi jle push jne xor sbb fdiv stc pop mov les stos lret lock dec ret ret xor lea cmp push sub mov jl sub sbb gs cmp mov sbb dec addr16 std push int xor int dec sub leave or pop jne lods sbb cmpl mov stos mov fmuls iret dec int arpl aad cltd mov sbb fmull cmp xchg inc mov repz jp pop push lods mov xor std stos test push fimull stos jno or and add aas outsl pusha mov pop lahf dec dec je pushf insl mov adc sub inc movsb pop or stos hlt gs ret fcomi xlat gs mov imul push repnz aas xchg ret adc lret inc inc push sti push lahf pop cmp insb or int dec xlat cmp mov xchg clc dec leave mov movsb lods movsl (bad) addr16 mov jnp cmp movsb pop sub mulb inc xlat incb int mov push pusha clc or jnp stos adc xchg push stos pop mov dec repz ss int divb mov dec mov shrb das mov xor sub xchg add js pop hlt stos add and leave mov mov ja sbb dec movsb out fcomip add test cmp adc mov xchg adc xlat or cmp int movsb pop in stos loop mov jb mov cmp lock adc stos mov decb add jp and out push pop nop push and inc xor push dec mov sub cmp out cli stos and mov cmp xor loope xchg inc lds js stos fs sub pop push and mov nop push pop jae fnsave hlt adc mov dec pop bound jl out cmp es jecxz lods sbb jae lahf decb sub adc jne rorl pop stos xor repz das out je ja and sahf dec mov push sub stos dec xchg (bad) mov mov sti sbb jle mov bound in mov sbb lea fiaddl xchg xor push xchg xchg jne mov (bad) lock mov adc inc jecxz fs addr16 dec pop les pop aaa add add or sbb stos daa (bad) in movsb sub jno jb xchg and pop fstpt or and test cmp add ds iret and gs shll fisttp push add aam insl push popf inc sbb cmp push dec or in nop sub cld adc cwtl jne test or add push pop fistpl cwtl mov movsb (bad) sub push push dec arpl pusha lret div fsubl pop out xor xlat test pop movsb hlt pop push or outsl out (bad) dec sarl jno mov adc pusha cltd hlt test pop and sub jb cli imul lret mov es shr push incb jge mov stos cmpsl add ret mov es gs stos mov and mov sahf adc daa xor int pop adc mov cld fmull loope in aas xor mov inc push or mov int or sahf mov fidivr dec mov movsb mov cli lods sahf and push xchg pushf xlat stos (bad) sbb xor adc sub gs or push mov ja enter or jnp shr stos pop cmp cmp pusha pminsw mov jecxz adc fs add pop jns divl mov mov clc push ret sahf out jecxz ret imul adcl cli mov leave clc lds insl mov mov push push jp mov movsl dec cmpsb push mov pop jne fistpl (bad) jg or stos (bad) popf xlat jecxz inc outsb inc idivb jle das or push lods imul sbb out inc jp adc mov pop daa stc cltd sbb int3 (bad) pop jne insl inc in dec out cmpsb jnp mov sbb dec das sti fild jne sbb or insb mov loop mov repz lahf jbe sbb cmp (bad) into sub lret jno sub cmp addr16 (bad) not mov xchg sub dec dec aad cmp push fidivr lret sti jg aaa push (bad) and push dec ljmp sahf jns sbb scas out cmpsl adc push jp jb dec cmpsb adc sbb (bad) fisubrl pushf xlat jge,pn pop xchg jp xchg push push and addr16 mov fsubl jp js in test addl sbb add mov dec xchg cltd hlt test mov mov pop xor sub push aam ljmp call les inc daa dec jo ds pop add std int3 jle lods arpl das rcl fs sbb xor cld lods push cmp jp mov lods stc add in in sti fimul rep inc lcall cmp xor stos cmp mov push jp call or test xchg gs sbbl addr16 subb dec fdivrs loopne xchg sbb inc jnp sahf aas xchg or and adc in lret pop ja call loop sbb jp cmp mov sbb stc fcmove movsl sbb mov je repz lds jp stc mov imul mov andb mov xor jmp jo cmp add (bad) lea repz mov jbe (bad) sub jp out fcomp shrb dec inc outsl dec pushl addb insl jbe cmpsl (bad) gs push faddl pop pushf jne dec in test jae (bad) stos add je sti mov movsb outsb insl pusha fild pop daa (bad) lea insb lcall add jg in dec je insb dec add jp push and mov jmp xchg lahf jp fdivs add movsl aam jne imul jb jne sub (bad) call cli jp dec jge and loope jp jo outsb mov cmc inc mov mov sahf jno mov mov mov inc cmc mov es adc jp bound popa movsb cmp ds popa mov dec add cld xor adc in aad xlat outsl xchg mov xor jle push ret mov in mov into sub push push pop sti mov shrl enter jb sub mov mov xor repnz sub ja (bad) dec leave roll pop adc mov and jle loopne push xchg adc fs stos adc xchg sub mov setb or mov arpl (bad) out sbb stos cmpsb mov scas fistpll bound cmc int pop dec xor adc inc jl clc movsl xchg mov aaa sahf inc push adc mov and cld daa enter insl pusha sbb rcrb std stos fisub cltd (bad) jp xchg or mov mov (bad) repz xchg out ja sub orl sbb lods ja sbb pop (bad) cli cmc shrl stc xchg jo adc inc sbb enter mov xchg (bad) jns gs jp test mov push movsb loop dec mov hlt testl shrl dec movsb dec xchg popw pop adc pop ret cmp ds rol out imul out inc sub mov jg sub adc stos jbe out sarb movsb jecxz out data16 and lret out jp stos das jb fldcw inc cmp popa and imul pop out or dec mov push dec cld mov (bad) stos sub stos popa pop fs gs das jb jno mov cli and js sub mov push jne jp inc pushf mov pop cmp mulb imul dec dec or push imul movsb ret mov (bad) mov in cli xchg stos pop jne fldcw push ds je stos and je xchg mov js sub jp adc icebp and xor add lret sbb (bad) jp shlb jle cmp mov outsl std fisttpl mov lds jp movsl xchg ds fstl shll cmp dec sub jbe mov xchg mov pop jne (bad) sub adc call jb and sti popa jae jp dec hlt xchg push sbb jp sbb test ret es jp xchg jmp mov cwtl jo shr loop cmpl in (bad) cli stos roll dec clc jp jnp mov and sbb jmp xchg popa jp jo lods add insl mov movsb rcpps xorl add fs (bad) sbb add out (bad) xchg das sahf jl outsl mov pop outsl ror xor ficomp jmp je in pop and add cmp cli arpl cmp and sbb dec aaa mov xchg (bad) fist js mov xchg stc pop pop fnstcw pop jmp shlb mov xorl inc pusha adc push xor mov jp outsl dec cmp pushf xlat jp loopne mov mov jae or pop mov test hlt xor mov rolb adc jmp jp negl push pop xchg and enter dec mov fnstcw loop ret pushf jg les in adc pop xor jno push adcb mov inc les popf dec sub push sub add or gs loopne rorb je imul inc sbb adc dec ja xchg cmp mov jp lret imul imul sub jmp jne cmpsl lcall test leave ljmp in add push and dec scas lret cmc inc or xor adc push ljmp lcall and jp dec sub jecxz out jp add sub aam aas jp inc ret jne jle xchg jp pop sar clc push mov in jne outsl int3 xchg push int add ja push addr16 popf dec stos sti js cmp cld jne stos ret daa cli xchg jno dec jp adc mov ja imul in mov cltd sbb mov mov and outsl in mov dec xchg fimul cmpl insb cmc adc test mov inc pop or jne mov sbb imull lea popa adc jae jnp sti stos mov inc push and movsb sbb gs dec mov add (bad) cltd mov mov clc sbb push mov cmp fwait push jae sti dec repnz jns xor stos sub sub cmpsb movsb mov pushl mov in idiv mov xchg pop sti mov inc and jnp xor mov shll out push inc aad fdivs jp push in scas adc fildll jno mov mov loopne sbb jnp shlb add sub jne insb out stc inc sbb shrd mov xor (bad) mov lret mov mov bound (bad) lock jp and push (bad) xor cmp pop not xchg and enter fidivr push ja or mov int jl push and cmp pushf in (bad) mov scas sub outsl mov mov or pop imul ret cld mov loop stc push lods rcr jp mov int sti push sbb js push xor cmp mov jp (bad) sbb cwtl mov inc scas xchg clc lcall mov mov (bad) loope cs fucomip and sub lods out popa les cmp mov rorl jno or fdivrs dec std cmp mov fnstsw (bad) mov jle mov xchg fildll mov inc in addr16 and shrl inc enter ret jp and push xchg or cld fwait std ljmp cmc mov lcall sub xchg iret lods cmp add into sub pop sti jecxz or bound fucomi xchg mov lods jb sub sbb ror dec nop arpl out inc xor frstor fidiv jnp jp mov call ja and hlt mov outsb gs pop icebp mov push in mov enter xchg repnz and fidiv jbe add push fstpt sub xor xorl jp add push fistpll xor and cwtl sbb std jbe cmp ret add outsl cmpsl mov repz jne imul cmp push and mov sarb pop jp ret dec and jp jmp xchg test gs jmp int3 jp mov sbbl rclb adc stc cli into xchg popa inc xor push arpl mov aas movsl pop cmovne add call aas lock mov push ss cld fstl fnstcw mov and faddl mov mov mov cltd movl cmp dec pop fwait cmpsb adc call jne xchg cmc lahf cli in sub enter mov cli popa cmpl dec (bad) jae nop sbb cli inc mov jp test lods jp clc cmp jp (bad) hlt loope leave pop popf pushf rolb mov aas repz adc sbb jbe jp pop aam movsl iret insb jmp (bad) or jnp sub ds popf pop cmp nop (bad) jmp das add push in dec sub xor mov nop mov mov idivl movsb xchg add ja jb ret xchg mov jo mov ljmp ficoml sbb push stos in or sbb repnz xlat xchg cltd xchg dec outsl (bad) shll imul mov mov cmp cmpsl pop cmp mov sbb sub ja inc scas cld lcall gs dec std je hlt lds stos add ljmp push stos sbb mov jnp or inc mov fdivl mov jno stos (bad) leave dec repz ficompl mov movsl into pop (bad) outsb cli cmp cmp mov and arpl or fucomi xchg out idivl cmp lcall mov cmp sub in mov jl lcall pop je pop jb arpl ror enter mov sbb (bad) fstpt pop mov insl add loop (bad) mov jno fistpl pop movsb aam sbb mov cmp (bad) fs fild mov jg aad pop ficoml jo ljmp call lahf dec add xor dec rol fs fmuls push outsl mov push ja rcrb mov jge ret sbb test pop xlat push mov imul mov pop or jle orl push aas mov je bound push mov mov or mov add les add jnp xor (bad) sbb xor je xlat mov (bad) incb adc fildll movsb mov js movsl add lods lods ficompl (bad) pop dec sbb pop stos mov std std insl push or (bad) iret in jae rclb dec fsubl and sub repnz pop (bad) push mov rorb sbb jne aad dec cmpsl and iret xor loope inc jno nop mov or pusha push lret inc imul push stos clc leave leave test or inc mov dec scas dec sbb mov push dec add pop (bad) sti sub jecxz push jp addr16 xchg (bad) ja ficompl xor jne repz inc (bad) in mov pop (bad) jnp int sub xchg mov push dec hlt ds push ja in ror pop mov push jnp adc lahf sbb dec mov jecxz pop and incb pop cwtl ret push test (bad) pushf jle push adc push dec divl cli mov nop fnstenv dec push outsl stos ficomp jae jbe test dec sti jbe pop stos imull outsl lea push aaa stos inc pop jae fidivr ljmp je mov sti pop ja sub mov jp inc in pushf aad sub fstl xlat pop mov lcall pop out jo (bad) jno jp mov pop or or xor pop mov cmp or cmpsl (bad) out xor pop int3 sti push mov ss push mov pop mull jmp dec fildll cmpsb sub push into sbb repnz outsb adc loope and cmp pusha push pop (bad) jb (bad) es popa test pop xchg mulb outsb sub and adc and shrb sub repz push xor jp pop pop sbb pop inc nop jp dec daa (bad) jae cmp add cwtl jp adc dec fmul js push mov cmpb cli push imul daa jp in shll test xchg or adc jbe mov dec fstps mov in jle jp sub stc sbbl mov sub repz (bad) mov popa cmp int3 cmpsb (bad) mov dec pop pop lods pop sbb fbld cmp mov mov test inc pop loope cli js push popf fstl sbb clc jne insb cmp pop aaa dec stos add int3 add (bad) jnp dec out imul shll das cld xchg jp cltd dec inc (bad) stos out ss std mov cmp xchg (bad) jno sbb cwtl lods jne cmpsb mov cmp out pop mov outsb jp cmp add xchg fcoml xlat cwtl in stos inc int3 jnp sti in mov cmp jge icebp mov idivl cmpsl jp cli (bad) fcoms jmp call in cmp cltd fcmovbe jp out mov and jne je imul (bad) pop dec inc cmp ljmp lea sbb push addr16 mov adc cmc jle jnp jnp idivb shll pop xlat pushf (bad) jp das jno lret testl cli ljmp outsl adc and lret ret adc inc xor cwtl cmp jne out addl in sbb sahf (bad) (bad) cmp popf aas pmaxsw (bad) in mov push pop aam movsl loop push pop pop jae test pop mov loope xchg insl mov push jo mov jne jns mov dec mov pop call mov xchg sahf jno fwait push mov jp (bad) jmp fnstcw aam idivb xor jo jp jae leave inc bnd push (bad) (bad) test ret ja or leave add es jae iret mov fnop push and pop insb test push fisubl or lcall ja cs sti jnp lahf outsl or inc jae in jnp xor jno dec mov sbb pop cmp cmp hlt loop dec or mov jne fcoml jmp daa decb mov test and and aaa adc ss push and add xor pop mov inc jp pop cmp cs jp inc insb out pop and jae push inc bound or jp pop mov js es pop mov shlb jp loopne and lahf jp mov repz dec adc add pop (bad) scas lret lret les dec or push cmpsl jne dec cltd xchg push sub out lods mov jp (bad) loopne mov loop (bad) fild mov push movsl inc cmp sub popa push jno out push and jne cmp jge cli js dec popa lret fs and pop mov jne std adc mov (bad) pushl inc fcomps lahf (bad) mov insl and bound jne lea dec jle add jg addr16 fcoml cmp pop inc jo fldenv sbb into add and push cmp je xchg push mov daa lcall or test jae das inc jno or (bad) movsl out or jecxz ds inc cmpsl jp dec xchg cltd and xlat call pusha push xchg jo ljmp cmp ja xor movsb fucomi mov ret fwait in scas js insb mov mov sahf mov jl jno (bad) enter aas ja std adc stos insb mov lcall xchg (bad) jle jno loope repnz pop clc daa js xor adc push pop stos scas sub int3 aam add clc cmp xor and mov inc movsb jl loope repz rclb mov outsl or movsb sbb dec (bad) jns testl out out cwtl loop je mov pop or mov arpl or xor movsb add decb mov inc sub adc jle js insl js jp adc cmp mov sub mov jmp mov pop or mov push daa icebp popa sub adc mov aam xor cmp pop and in cs adc push sti in xlat jns sbb aaa cltd mov mov data16 xchg mov pop cltd dec sti es inc int fildll mov push repz sub fwait or pushf jmp dec jle (bad) out cwtl mov enter insl fadds stc les sbb sahf ret xchg sti push sbb loop inc stos adc mov jns mov cmp stos in aaa xchg pop out and insb jb andb sbb pop pusha outsl push xor dec inc inc aam movsb int3 mov mov cli adc das cwtl cld ret cmpsl mov push ret movsb icebp xchg stos mov mov pop jp xor jp mov stc cmp inc jae jecxz pop sub fwait jns push loopew sahf jbe pushf test mov hlt stos dec xchg nop jl push jne outsb add jns inc icebp ja in lds and insl mov cmpsb jne repnz fiaddl push jb cli jne xchg or aas sti jle jp out fstpl and int cli dec mov xchg (bad) cwtl lcall cmp xor addr16 mov push sbb inc insb dec sbb jle or mov jp mov insb jp (bad) hlt fst rcr jp sbb fcmovnu mov sbbl or or es dec repnz aas sbb (bad) jno inc mov or je test or lea sub jne push fcom cmpsb inc lds fs fidivl mov or insl aas insb dec in (bad) inc jp mov lcall xchg fisttpll push (bad) ljmp bound (bad) cwtl ja pop popf push mov push in stc add cmp mov (bad) sbb rcrb (bad) mov out outsb jp mov jge scas pop push lock lret aad xchg add dec cmp dec movsl es xchg shlb and or stos test (bad) sbb push leave sti scas cwtl mov jae psubsw imulb mov shll add push dec push (bad) fcoml pop jg loope mov mov pop jp inc add dec (bad) jmp mov mov mov or cmp mov lods imul cmp and repz js jle jp push mov in add aad or ret aaa jp adc sub and out jp data16 mov jp mov aaa cld jp scas lret arpl sbb jne notb dec jmp push jp jbe push pop je shlb cmpsl out insb pop popf fbstp ss add dec pop pop loopne das jnp pop mov iret insb imul insb mov andb jae mov (bad) fsubs or out mov adc jno stos cmp mov push push sti mov cmp cmp (bad) repz and dec fs sti sub jg adc cmp and (bad) xor je cltd lret mov pop mov jp mov les lret out or push mov mov xchg outsl imul ficoml call adc int mov ss cli in mov add push shl jp xchg fcompl rorb sahf mov in das mov out or gs int pop jb cltd sbb mov mov inc mov stc (bad) sub repnz cwtl stos decl mov sarl cltd cs fcmovnbe fldenv mov lds lods cwtl nop pop mov fidivrl fsts inc jae mov (bad) add or movsb nop or inc cmp ja icebp sbb mov adc xchg dec roll xchg pop out mov cmp stos rclb adc or std (bad) (bad) ljmp push rcrb shll jae leave sub cmp (bad) imul stos cmc popf ret and pop dec xchg pushf ja pop push lcall movsb and call out xchg lret (bad) mov popa loope ja nop jp stos testl addb jge lods sbb popa jae pusha arpl pop rcrb in loope je out cld repnz jo fsubs inc mov mov adc inc loopne test cmp pop (bad) ficoml addr16 jbe jge push lret mov movsl add out lcall jnp pop cmp lret popa cmp nop aam imul pop mov sub sbb mov mov adc sahf imul sbb gs push add pop pop sub sti movsb scas pushf jl and sub and push inc pop popa push pop jne stos and dec (bad) and movsl fcmovne jnp leave movsb sbb lock in imul in add and mov mov mov std cli movsb sub gs sbb inc pop mov mov repnz les pusha arpl or mov jae pop pop in cmp fidivrl cli adc in stos aad jle pop fisubl pop xor xchg and mov ret fadds adc dec imul inc out (bad) mov lods sbb pop mov rcl jno aas pop pop lcall lahf mov (bad) shrl mov and sbb inc sarb mov int3 push sub sub fstl pop dec in jge out add stos into movsb dec inc cmpsb in addr16 mov sbb sub push stos push hlt mov ljmp ret das add lret jb (bad) ja mov loop pop mov pushf mov loope xorb mov or lret pop std jns adc jl,pn inc push mov add jge cmpsl pop clc jno adc dec pusha add mov mov mov imul sbb outsb mov or push cli insl mov scas repz and cmpl xor lock cld mov add dec push mov (bad) fwait pop pop sub fcmovb pop xor sub gs sti fs mov (bad) hlt (bad) insl add hlt mov lahf pop out movsl std in lods cmp sahf jne adc ret jecxz pop jp scas mov js mov inc cmp xchg jae mov or bound push cmp cltd jnp cmp (bad) inc insl jae fstps aas jp fcmovu pop inc insb pop mov jp jns push mov pop cmp mov cmc roll loop mov sbb ja mov addb dec jbe aad jp xchg out xchg lcall mov inc mov cld mov lods sti adc mov jnp jg inc jne fstps (bad) cmp jp test xchg ja ret hlt dec test mov loopne mov je add jp push adc dec or stos mov test out mov pop repz ret sub push loopne xorl les xchg imul lret push arpl or xor out jmp into mov xchg ret in or jns (bad) xor bound ret cmp or dec mov xchg mov loope enter push push pop xchg imul repnz in fstps push das loop mov (bad) push and dec out mov jnp pop cwtl pop cmp lcall jno cli cmp out push xchg xor insl shll imul add jg mov jb mov fdivl push xor sbb cmp pusha adc adc xchg cltd xor or cwtl mov incl jp inc movsb loop ja dec bound into sub fwait icebp in fs inc addl scas (bad) dec movsb fwait les into je stos push test lret clc sbb sub lcall xchg mov stos push push cmp lock and inc test cmpl cwtl ja mov adc jbe daa loope (bad) mov sahf pop mov lret lcall stos and push or push (bad) loopne loope lds in dec jne pop pop (bad) clc fwait push (bad) jmp icebp dec mov sub pushf nop dec pop mov and pop push push pop xchg mov xchg mov fnop sbb gs mov cmp cmp or push cld pop and loope fstpt ljmp mov outsb js push push stos pop data16 xchg jae in out jl movsb push stos and icebp (bad) ja test pop jno jle mov or out push lahf lea sar into pop out xchg test lret enter test cld lret push jp lods fstl sub sub jp push sub test mov jns mov add popa nop (bad) repnz and lds and xchg sub ret inc lds ret xor push jp test inc cmpsl push fadd imul gs int aas sub push cmp sarl inc scas jae pop mov mov rcrb and or xchg mov xchg jp fnstenv and mov push pop xchg jno jne fadds lods mov sub adc adc mov ljmp jp (bad) cltd cmpsl int mov imul or jp and mov jne xchg jl jl adc xchg fxch jg sarl push or pop jecxz xchg jge xchg xlat jp in cs bound rclb jp das jo ret inc scas sbb mov popf mov sahf cmp cs or mov and inc ja jnp imul paddd mov cmpsb dec mov fdivrs and lds in iret mov cmpsb pop enter negl insb lock repz mov pop sbb mov xchg jno mov jae mov dec test jp hlt (bad) mov inc lock pop cmp jae ficoml cmp fstl inc sub inc ss jp orb jmp cmpsl jp add ficompl insl xchg jp cmpsb call pop fbstp mov mov repz mov popa mov in lea (bad) mov jns repz test dec outsb xor scas jo and repnz jp mov aad xchg imul jmp and or or mov sub sbb test sbb push dec lret push jp and cwtl mov xchg je jno sbb sbb cs shr enter pop cld (bad) (bad) adc jp out jo loopne push mov cmp inc jp insl inc bound test adc lret test je punpckldq xchg scas inc icebp call pop jne lock aas cmp sar aas inc add sti out (bad) sub jp arpl call test push jp (bad) hlt mov or jle aad int sahf jp scas push shrl das js fcoms scas push ss push mov fimull popf inc call jle push arpl dec jmp (bad) jp in mov cmp push imul xchg jl mov mov test stos cmp mov xchg cmc mov dec imul in jge adc push ja fsubr (bad) lock cli hlt scas test out mov xchg and jnp push jbe xchg push (bad) and (bad) mov cmp adc cmp loop xlat (bad) mov dec imul lret xchg popl cmp in outsl outsb test gs movsb mov sbb jecxz sbb cli in outsb call mov inc jp xchg jmp push jp outsb inc hlt and mov sarl sbb add pop out es push clc jnp xor sub lcall aam sub xchg xor dec (bad) lds xchg push out clc jp mov xor jp ss or ficoml lcall in sub js lret add sbb std or outsb jp ret inc imul and mov ja call icebp shll add cmp jg,pt jp inc xorps and test adc popa lock sub sbb mov mov mov dec push das lret and jnp popf dec cmp cmp daa jae sahf inc cli mov test fs fwait je and jo fild std int jl sub iret shrl push ja xor jno add push push sarl cmc xchg imull mov orl (bad) mov cmp gs int3 leave (bad) ficom aam imul pusha sar xor gs scas cld mov fistpl pop int push jno sub movsb sub push cmp pop push sbb mov cmp stos sub es pop inc mov dec sub cmp imul mov cli push imul shlb test mov fistpll stos mov or sbb jecxz jb mov sar adc ja cmp sbb insl in xor int movlps mov mov shrl push mov rcl es sub push cmp pop gs addl insl pop in xchg jb test jns xchg movsb push mov sub stos in push sbb mov dec pop (bad) mov pop mov inc outsl mov inc int3 ja test (bad) repnz jae lcall sbb pop xchg jl sbb cwtl mov mov movsb inc xor add cli pop imul ja jns lahf dec insl sub fsts scas movsb dec rorl (bad) mov xlat movsb pop and bnd or sbbb mov jno mov jg lods jp hlt movb mov jne repnz lods adc jge dec xchg ss iret pop pop push inc cmpsl add movsb sbb movsb lcall dec fstps dec das jecxz mov mov push cmp imul push incb sbb adc pop ljmp cld push (bad) in ret faddl cli push xor aad ja hlt pusha int mov mov mov popa pop xchg leave xchg js xchg lcall stos xor and aaa jne jae xchg arpl pop and jne inc jmp aas loope stos sbb lcall jp add test test ret fnstsw call int3 or push pop push jbe jp aas (bad) pop dec arpl pushf shrl jnp push mov cli mov jg push cmpsb out pop jp lods (bad) lods imul and cmpsb popa add xchg sarb mov fisttpl inc pop mov js jnp cmpsl inc fnsave mov xor sub call sub push sti and mov hlt repz adc push (bad) ljmp xorb inc sbb fbld nop mov jg pop mov pushf mov orl jp,pt jmp aaa cmp xchg cld nop push xor jp mov pop sbb test jno add jecxz adc daa xor dec iret cmp imul cmp or cmpsl imul aaa xorl push push nop sti xchg sbb stc (bad) xor aam mov test inc ljmp mov (bad) jnp scas xchg outsl les jle inc sbb xor sbb cmpsb mov push pop push fmull jp jle pop xchg push sub sbb test outsb lret fnstcw jp stos adc xorb inc jp push test mov pop fsts pusha in (bad) rcrl mov lret (bad) imul jp sbb int3 jne adc shlb push add adc daa lcall jns cmc mov pop test sar sti adc xchg loopne std xchg fdivrl jmp push insl push cmp or mov mov fistpl cli movsl iret es cmp dec jo in shll pop jp mov mov dec or (bad) imull iret fs jmp add jp xor mov adc jno ja popf fcoms imul inc cmpsl stos iret lea cld jno pop fstpt fwait je inc das test iret cmp lods mov push sahf dec sti xor pop jp jmp xchg or mov pop jne insl cmp xlat push jl and push ss aam ds je xchg sub cmp pop pushf insl es dec popa mov je in cltd add test movsb sbb lcall xor ret jl cmpsb loop aas jnp insl aad sahf (bad) shlb pop mov pop mov out jp inc rolb testl data16 cli adc jae inc lods dec scas jnp xor (bad) add mov std mov cmp aad xor jne sarb mov mov cmp cmpl (bad) sub (bad) jl mov jne pop inc es aas sbb ss dec jae out shll nop mov je incl push push repz hlt push aaa xchg and imul pop jnp jno cmp movsb frstor imul fcmovnb dec adc in insb lods pop int dec lret xchg imul sub mulb js mov mov das xchg add cwtl mov lock sbb push pop inc loop inc cltd out sahf push jp inc (bad) jp sub js test test jno movsb insl addr16 pop test aam lock aaa adc shll xchg divb stos in dec jnp jmp jp and dec add dec adc mov push loop arpl stos insb add lds push pushf cmp jp jb and pop stos xchg movsb sub insl leave cmc push push xchg adc popf adc jl push jae dec mov sbb cmp mov clc iret pop pop mov adc xchg mov fidivr out cwtl sub fnstcw inc pop shrb dec je hlt inc adc (bad) addl fbld adc push std jp jno xor and in jo call inc and out jmp xchg dec inc sbb mov ja test out jmp sbb aas jns or hlt mov imul outsl cmp repz jne mov cs sbb jecxz loope mov jp mov xchg sub jp fsubs inc insl pushf aad cmc mov ret and loope pop or jnp imul (bad) (bad) jp cmp mov cld mov jp loopne arpl push fs mov jb jnp push xchg ds loope jb mov inc addr16 clc pop push cmp sbb sti call xchg mov scas mov and dec mov aam insb and jne inc and inc out cmc stos dec mov dec jle lcall push push xlat js fldenv or push jg jne lahf cltd daa scas cmc adc xchg sub fsubrs hlt or scas mov push xchg and xchg stos mov jl pop dec xor jb stos pop xlat popf jne xor (bad) inc pop or ret icebp clc in jle lahf fs stos ret sbb dec mov xchg xor imul lds jno test mov iret pop (bad) pushf insl jle inc into lret and add push arpl rolb push ret or leave mov or rcr push scas jbe movsl mov mov shrb jae dec sbb push xchg xor mov mov fbld stos lret dec (bad) adc outsb pop (bad) ja jae in mov push scas arpl test ss out mov add fcoml jge mov cmc xchg cli pop push and loopne sub insb add sbb imul lret inc lahf sti out outsl dec adc mov in jb jp push test repz add ret dec push mov (bad) test loope sahf sbb mov xchg jl xor adc stos in mov jae (bad) sub jnp jp icebp push lcall dec or mov daa jp cmc aas je dec imul outsb lds jg sbb push inc cmpsl jp pop adc jne ret outsl sub ljmp jnp sti mov mov popa sub int xor sub ret jno jp,pn loop push ja out movsl fmul xor lcall xor sbb loopne jmp or xlat pop aas push cmp leave imul repnz or pop inc (bad) mov call sub int3 jl add push mov mov leave add dec jp sub xchg test mov jp (bad) pushf sarl (bad) insb into stc je pusha cmp mov mov xor ds arpl arpl and dec adc jp pop inc xor xor jp dec and std sub mov add mov fnop pop push fnstsw dec jp mov std loopne sarl lods (bad) fwait mov je jle inc and pop ljmp adc (bad) mov dec mov pop enter mov xor fwait cmp ja inc fwait lret sbb testl stc dec push loop jp sbb icebp inc jo sbb cmc fwait dec cld mov cmpsb xchg (bad) pop mov sub adc dec ljmp inc shll jno cmp sub mov jae or movl dec je jecxz xor dec push das xchg xchg cmp sub (bad) jno (bad) test aaa push stos loop jg lock push xchg jnp ds pop push ret lock in mov jnp inc xchg daa pop cmp pop imul pop pop sub jp idiv fdivrp pushf scas cwtl jp push pop cmpsb (bad) in or dec xchg add fldt push mov push pop pop add xchg push sbb push insb ja stos clc lcall test ds imul ljmp movsb lcall mov sbb and sarb push push jle push call or rorb inc pop clc add loope pop dec sbb (bad) fcomps lret popa jae ja (bad) aas stos mov dec and sub ja stos and lret lods push adc (bad) jge cli push stos jno jmp cmpl sbb aad mov dec movsb popa mov lret mov xchg scas out je aad sbb mov pop scas (bad) push ja lahf add cs fwait jp push sar push stos mov in push pop xor movsl imul jl mov sbb xchg divb shll add (bad) stos inc cli pop int3 test push inc push jp fdivrl mov add push aas rcrb or pushf je cmp repz in int3 jns imul mov lret sbb mov push insl cmpsw leave out dec decl inc test decl imul jo rorl push stos dec jnp ficomp jns dec cmp pop cmp cmp out cmp dec pop jle ret xchg stos loopne movsb out movsb or call test aad cwtl adc jl lret dec pop lea (bad) sub (bad) js xchg cmp jne sub and lea push push xor movsb mov mov insl gs aad inc mov rcl jae push roll cmc inc ss arpl movsb aaa or mov mov test movsl jns pop addr16 add stos adc data16 fistl jle add push in xor aad lods enter gs iret into inc jl sti shl pusha in mov arpl (bad) pushf adc clc dec xor inc cmp pop inc cltd push sub daa aaa xlat movsl les sub inc mov (bad) call push add mov jb jne jp dec scas add mov jp xchg test push in pop pop inc das call ret jno in dec cmpsl or mov xor ss push jae sti gs sahf jnp (bad) std int out out mov ficoml jns popa xchg add insb jo fcmovu add iret test test sbb dec das mov jp or xor inc or in jnp mov pop jne sbb popa pop (bad) mov leave stos xor sub stos and into sub popf sbb xchg push xchg imul mov pop test xor add jne jl push ja les fisubrl xchg out dec movsb into ret loopne dec imul andb cmp test pop mov ja mov sti fisttpll sbb adc and mov data16 lods loope stos inc jae imul push cmp out stos xlat out mov fstpt out sub jle stc loopne mov sti adc insb movsb or sbb lret gs or add ret and daa mov movsb pop out pop jne add dec stc add xchg mov jo add add jo and cmp fsubl or jp add (bad) xor (bad) lcall jp pop loope xor and int movsl in inc push cmc cmp xchg bound pop lahf jb and mov jge cltd sbb xchg int ds imul add mov fadd add out jp aaa mov (bad) jp cs movsl loopne jl jno mov lcall movntps add (bad) or js jp fs cltd add mov pop stos enter add jl rcll dec push bound mov pop mov es ret or test shll cmp enter and xor pop pop xchg jp loop pop mov fwait ljmp les in cmp jecxz test sahf lds or pop jecxz sbb daa int mov add imul int3 mov aam xchg adc jne mov cmp es shlb std enter repnz jp dec movsb sbb jp pop pop xchg aad jmp jp (bad) xor jp inc fwait sbb push and dec pop cli loop aas mov inc push cmp or std and sub int in lock je gs ljmp sti mov (bad) jp or or mov loope push mov sub mov pop mov cmp (bad) bound jp sub data16 fist lods mov mov roll int jne insb les call and push data16 mov leave jp out outsb es cwtl jmp pushf ret (bad) mov aaa mov cmp imul loopne adc mov xchg in inc clc sub andl scas add jbe std push add leave fidiv adc inc lea sarb xor push dec aas add mov cmp xchg ret fadds sbb ret jp cmpsb mov ret adc mov jp ss mov mov std lahf mov dec outsl adc fcoml dec cwtl jnp mov sbb xchg add outsl (bad) mov inc sub inc jle dec and dec insl loope or mov adc xchg mov lret out pop outsb adc into pop loop stos add repnz mov jg mov dec movsb fsts ljmp jo js shll pusha cmc dec iret jmp inc movsb ja fisttpl sbb cmp cmp mov out lods jno sbb mov lcall sub decb mov sbb jp js imul in jne (bad) ljmp inc cmpsl imul out add fsubr mov ljmp xchg lds inc jp pop sbb sbb out fldt pop cmp mov mov jne std stc sarl adc mov mov xchg fbld cmp add adc daa stc xlat adc lock push sbb mov add lods popf mov addr16 (bad) mov scas icebp jge stc fstpt push or dec sub int3 jno push aaa aas xchg cmp ja daa mov popf pop in ret jmp sbb and pop lea cmpsl sbb pop out push jp or jp movsl lret mov sub andb iret sahf aad das dec add jp shrb pop orl jne insl out sub mov add ljmp jbe push pop rol in repnz mov jp push pusha inc iret xchg mov clc jnp pop lret clc jnp mov xchg add ja lea jp rcll and jno jae jns pop aas xor fisttp sbb push jns cli jns hlt lret jp aam or (bad) pushf push fnop mov (bad) es mov pop (bad) jbe insb jl dec dec push enter lods lret xchg in imul pop push jp or (bad) or es push ret (bad) insl fist jne jnp ja sarl pop (bad) rol jno cmp ss mov mov jo push pop cld mov ljmp hlt jg dec lock add aad mov and sbb xor jb ja mov test lret and popa inc in in pop clc hlt scas cld mov enter ficom mov ja sbb inc jp push mov pop outsb loope xchg cmpsl jp stos adc (bad) or imul xchg dec mov lahf jne (bad) add cmp int3 aad dec stos ds fistpll adc dec mov jbe in sarl stos fcomi rolb or mov test movsb and xchg mov adcl mov jne mov or dec inc repz sti push and insb inc jb xchg cmp scas push mov adc hlt jl loopne cmp pop mov (bad) repz cli mov ja fsubr ud1 (bad) sti jge inc std cld jp dec xchg out aam pop imul jp test cmp mov rorl pop sbb push cmp cwtl cli cmc add enter xor fxch stos fstl jno sub jns imul rcrl pop or mov test loop movsb xor mov xor mov xchg (bad) mov xor int push jp xlat and out mov jp (bad) mov push jp movb lcall loop scas (bad) into jne add jnp xor imul mov dec cli and movsb jp push sub pop (bad) add mov mov push je pop push test mov push mov mov sub ficompl dec out leave sahf jns adc repnz shll cmpsl and inc sbb jp icebp loope scas insb test jp test insl dec cmp jo aas cs loop pop jp movsl into and lret in aad repnz xor loopne lods sbb sbb into xchg dec add lds jg ds mov mov add fs push jl dec outsb jp add loopne outsb mov mov cli xor fisubl jecxz sarl mov mov and cli rcr push mov jns jg sbb jp ja subl rol mov mov js sbb cmpsb (bad) sarb pop scas scas cli push (bad) lret hlt orl jo test mov jp faddl dec int3 adc (bad) gs test (bad) aas sbb jp add mov js dec inc je pop adc cmp insb push (bad) xchg daa mov push pop rclb insl xchg add mov add jp or sbb or mov pusha int mov xorb adc jp jb inc xor repz and pop jno rorl mov sti jb out iret gs fistpl jmp (bad) mov cli in sbb cmp imul jae (bad) jnp sub fbstp ljmp je add stc adc push rorl mov add xchg jecxz jmp mov (bad) mov cmp stos enter adc sbb push xchg pop movsb mov lret aas les and pop leave jb aaa (bad) mov or stos rcrl lahf push jecxz movsl fiaddl repnz jl add jbe adc xchg fs xchg in (bad) sti cmp mov jge xchg insb mov jge jne in fs push repnz out jns mov mov cmpsb push xlat jae mov es scas imul jmp mov add fucomi movsb pop (bad) cmp ss inc int3 je stos push in cmp lcall fsubl pop and cltd jp cmp in add dec cld sti xlat sbb pop sbb pusha fs pop push fcomps sbb jle sub jecxz in pop je xchg pop dec add lcall jae insb sbb mov add mov loop push stos movsl adc cmp aam inc mov shlb (bad) mov movsb gs cmp out cmpsl mov cmpsb or cmpsl ljmp jmp and pop sub sbb arpl pop and inc mov pop sub mov xchg into fstl push and repz in clc lcall jp loop enter cs fwait (bad) xchg icebp rorl sbb pushf mov mov popf push jae out lcall xchg pushf jnp repz add test or loopne lock cmpb sub mov xor jp xlat pop and lods inc and mov dec mov adc pop lea enter int insl jp dec adc or dec jp mov in xchg jp je mov jp int3 fs or ret popf sbb mov jmp jae lods movsb out stos mov gs add jmp xor inc repnz mov jp repz sbb add jp js loop repnz cmp dec sub push shl lret pop pop inc mov jge hlt mov mov push dec mov loope imul insl jge inc push mov inc leave mov dec inc lds test pop xlat fnsetpm(287 pop les mov jmp push (bad) dec addr16 cmp testb fadd jp adc cmp stos push aas js push movsl mov push push xor ja,pn sbb mov inc sahf outsl push popf mov dec xchg je cli cmpsl add jp lcall nop (bad) mov int mov mov and jle das fs xchg jnp fwait dec jns xor (bad) jp sbb adc sub orb sbb into push sarl xchg cld xor jns sbb mov fcoml in mov jp xchg mov sbb dec inc insb mov ret jp dec cmp mov sub push adc mov (bad) jne setbe pop xorl outsb push popf (bad) jne pop cmp push pop xchg movl jp into cwtl mov insl sahf dec outsb xor jle cmc aad xor add insb daa shlb pushf push pop jnp sub shrb mov sub es int3 cmp jne out (bad) adc push adc and int inc mov jge insl in jb push cwtl xor add sbb in leave cli cmp xchg and pop adc cld movsb cmp lds imul jge xor loope pop loop push xlat mov xorl popa testb jne imul or cli inc pop (bad) xchg pusha call loop cld pop lret sarl insl ret xchg push (bad) pop jge sbb roll push jb movsb fsts shrl add dec mov push pop fsts add mov xchg or out leave xchg fiadd sbb test (bad) out stos pop cld mov add sbb lret push imul dec lret stos push insl movsb jle loope repz outsl fwait sti movsb pop sub dec sub loopne les dec sub popa or (bad) mov xchg ss in test repz movsl sub push popf jg xchg insb sbb ljmp les (bad) fdivr mov pushf in cmp jp xchg addr16 adc lods jle ficom movsl dec pop fistpl sahf lods jne mov enter loop das shrl ss xchg sbb sbb in sbb push ljmp push repz into js out lock pushf mov dec sbb repnz or inc jp fcmovnu bound add sbb out aas icebp out test pop sarb or testl (bad) add mov mov popa fidiv mov repnz or pop jne roll cld aaa mov adc stos or aas lcall cmc ja cld fdivl cmp jno sub adc icebp aam sub (bad) mov adc sti add mov clc test dec fnstsw dec mov sbb popa pop fsubrl in (bad) (bad) push push aas jbe loopne jl jl push cmp leave dec push cmc mov mov add adc hlt imulb sub ret pop sbb popa imul dec push mov pop push or dec lock add push lcall pop fist inc rcrl bound test mov sub loop fs enter add jp pop push (bad) sbb (bad) jno push and pop subl pop mov jbe cwtl cmp dec mov dec (bad) jae sbb aam cmp out add test imul arpl dec movsb aas cmpsl mov pop mov inc lds jbe cmpsl cs adc ds and arpl xor lahf sbb mov pop jp push jmp pop pop mov mov js mov ret aad popa jle rcll jbe xorl mov add adc jno imul push jge adc dec add or inc or adc jb popa jp pop movsl fist xor jecxz xrelease repnz scas jp sbb jno fwait mov mov cmp ljmp js popf xor jbe jnp (bad) ss fcomip sbb sub mov fnstsw mov dec repnz sbb jp jmp jge mov push pop (bad) jp push push mov aam adc test call daa leave push mov cmc xchg shl lcall in (bad) push daa mov or es mov test flds pop jp dec lds movsb int3 dec cmp sub sarb insl inc (bad) jl int mov imul mov jmp adc cmp xor mov les lcall aam push sub cltd jp jl mov (bad) jno push loope lahf adc in out pushf xchg mov pop cmp std xor jo or das adc jp jg jmp ja sbb cli mov jne xor sbbl pop xorl cmpsl jb mov inc cmp jp push dec mov sub nop pop inc fs sub xor ss cmpsl sbbl mov or (bad) jno lcall enter cltd ljmp sti test jecxz iret popa mov lahf push inc jp aas cli aam pushf test sarl dec push sbb cs jp dec sbb hlt in imul lret clc imul jb jp cmp das lret imul fstl adc xchg ret cmp sbb stos scas test test outsl push mov mov sub insl add jle in jp xchg (bad) aad cs aam xor pop mov pop js pop and and adc imul js loope xchg ficompl xchg jp (bad) jmp cltd sbb enter mov sbb and jae lret mov repz rep pop ret dec sub push mov imul repnz pop enter sbb mov xor mov ds int adc fs and xor sbb and xchg (bad) push mov inc fsubrl leave test pop fisubr aas xor in xor add dec and inc inc icebp adc lods pop xchg or mov sub pop jns es mov imul jb sub (bad) mov push dec test (bad) int and out or fbld loopne inc xchg or or cli (bad) add insl pop fdivrs jp inc jge inc xchg cmp jp test inc add enter cmp xor jl sti sbb pop add mov inc out sbb jecxz jae,pt mov ja aas add mov jae push jp div rcrb ja in xchg (bad) hlt popf stc ret push cmp clc dec sub fdivrl push out adc mov jne cltd jne cmp dec mov insb sbb mov in fisubrl xchg pop cmp shlb jae cmp push dec dec lcall sub cli jae fsubs push jnp add imul jbe inc (bad) jo pop bnd xor mov or jecxz dec inc stc cmp xchg sub lods repz lahf imul jns das jp and dec test adc fcmovne push decl jp adc and inc lds or lock push jp gs mov rorb popa or jae xchg xchg jp,pn sbb test jecxz jp or in inc jp dec sub push aad jnp icebp inc mov out or inc jp testb in add push xchg dec cli adc bound nop loop sub in or cmpsb add (bad) cltd aas pop mov sti ljmp cmp xor pop ficom dec xchg popa and jno in fstpt test cmc incl lods test pop es pop aam cmp mov jp outsb dec and ret sub fyl2xp1 mov test cmp iret sub lret mov aaa inc sub jp or popf fistpll loope inc push dec ficompl xchg xlat pop popa ds mov hlt in clc cli test cltd popa (bad) enter aad cmp push jp adc push data16 ret or sub xchg in pop xor and imull ret dec ja and mov push xchg jg pop clc or inc lahf mov addr16 jp cmp sahf pop jns idivb pop mov sbb xchg and leave neg mov movsl mov jp xor daa jns mov pop dec cmpsb sti sub sbb push cli insl dec jp sti aad popf xchg in and mov push hlt daa repnz jne and mov mull xor rcrb pop push imul ds ret rclb mov inc repnz sub pop (bad) lods mov je lret pop insl stos enter xchg add or mov test divl pmaddwd notb lcall dec ja adc gs push mov cmpsl lret lods or push (bad) mov mov scas mov jb add push stos inc cmpsb jle push jl aaa mov jp lcall fmuls jbe jg jno test js fs cltd mov jno add sbb cmp imul pop das pop leave mov mov call in sbb (bad) pop push ljmp or rcll sbb xchg pusha push and daa sar cmp inc sub ja das sbb push mov jnp sbb iret push jp and scas (bad) shrb imul mov mov sbb dec inc jae mov cmp inc out inc push insl pop pop jl jg dec out into mov dec repnz mov jp xlat lahf pop dec (bad) xor jae dec xchg cli (bad) mov lahf mov jp jmp nop popa jp loope dec in (bad) mov mov cld hlt inc out imul jnp jle mov xchg (bad) imul sahf push pop dec aam jnp jns iret insb xor cmp mov sub jmp xchg and enter (bad) jp and stos pop gs and es mov stos popa pop jmp push dec insb aaa mov pop inc adc test push xchg or cld ret clc dec imul inc std mov mov das out and pop inc and sbb (bad) sbbb loopne inc out imul loope aas jmp mov sbb sub in stos ljmp arpl xchg inc inc cmp mov mov sub adc mov bnd (bad) imul (bad) mov push int3 test xchg push fs enter jae pop pop mov loop out repnz pusha mov add pusha lret test stos mov mov mov (bad) adc (bad) or sbb cmpsb cmp (bad) jmp add stos jae pop mov mov repnz test xchg mov (bad) es adc lret outsl movsb test cmp xor jns sub push lds stc xlat mov sbb cli jns inc out mov push mov fistpll xlat inc mov adc sahf pop push bound test jbe jecxz lret (bad) int3 js push stos inc xor fs fs sbb mov mov js push fninit pop aas push and jg js fnstsw xorb sub mov sbb inc mov sbb xchg nop lods and mov add jb push pop stos out mov mov inc push mov mov jp insb cli stos nop jg lock jae sbb (bad) scas or mov jae jmp sub xchg cmp iret and ja pop je movsl das rcl jecxz jbe inc in mov mov mov sbb push jne xchg je stos push aam xor (bad) mov jo inc push out inc cmpsb nop dec loope (bad) aaa cmp mov out cmc stos scas or mov inc aas arpl or sahf sbb rcll dec and pop (bad) cmp aam test sti pop pop lods sahf fisttpl or lock and mov pop sub add sti cmp inc mov xchg and (bad) jp aam push xor sar mov jp lret mov xchg pop push ja mul jl push lret in xchg pop icebp test pop fmull fist and mov and loopne aaa pusha popa add mov cmp and dec leave add jnp mov nop jp,pn jne jge adc popa insl push mov enter mov fstpt adcl enter inc dec jp je pop inc add jb cmpsl int3 push cmp clc pushf dec arpl add and cmpsl jp xor mov fwait (bad) in push or leave mov adc push sarl (bad) ss mov scas push popa lods cs pusha sbb sub or gs push push icebp jno jae and push dec std mov sub adc outsb ja xchg (bad) (bad) imul cmpsb jle sti dec lcall enter mov inc add aad je sbb xchg (bad) sbb sbb lock addr16 xlat mov inc gs dec sub mov cmp fwait push jns gs mov enter std pop sbb adcl or bound jmp gs mov test std rdmsr cli sahf (bad) ja mov jle (bad) cmc jg jp mov fmull lret jp xchg cltd sbb dec iret icebp jp mov mov sub xchg pop cmp cmp jp xchg xchg sbb or fistpl jae sbb inc xor add pop jp pop loope aas cmc outsl jbe out mov inc arpl je js dec inc repz ja dec mov jp bound fadd sbb lods leave jp int push outsl or ficompl outsl cld push jp push imul adc enter cli mov int3 jne inc shrl mov push sbbl cmp add mov std sub adc mov mov inc ret and int3 out jp es sub add adc stos jmp test stos jne inc xchg xchg push outsb lods cli pop mov sub (bad) ja stos push mov daa dec std shlb cmp sub lret scas dec les test and test ds jp mov mov mov stos and (bad) jne dec and ds ljmp in gs stos jle sub cmp mov inc outsb call popf pop jnp sub jp mov mov shlb inc jnp imul mov (bad) into sub imul clc mov cli jp fild jp jnp jbe stc lahf push sub iret fnstsw mov (bad) sub add pop mov stos fisubr jecxz jmp cmp xchg loop xchg jnp inc jp mov xchg jecxz mov es or jp out mov cltd jp xor inc jecxz cmp movb mov (bad) and push jp dec out call cmp jmp iret dec cld jp lock jecxz pusha xchg jp test into test cltd movsl jp mov pop jae add sbb in ret ja cmp xchg cmpsb mov push cs ja cli pop push pop scas add jp movsl xor loopne and push in jno mov mov fstps jge gs sbb test or das js mov test pop cmp negb inc in and fs out fldt mov test jp fs cmp sbb jne mov (bad) mov dec cmp jg push int3 in movsb and jae sbb repz push loopne fs js cmc add and dec dec lret mov and imul negb sarb lods mov pop jne insb loopne iret pusha mov clc bound cmp jb in push pop add or das in pushf fsubl incl outsb stos mov adc (bad) sub sti imul pushf push sbb (bad) push push in sub in (bad) and stos fwait movsl sub arpl mov lcall dec mov push adc (bad) jns push or pop test in mov cmp imul mov insb pop dec in adc lcall pop cld in push outsb outsl jo stos sbb icebp scas pop aas or lods dec dec dec mov jp dec gs imul mov or sbb fdivl movsb into in aam xchg sub sbb nop jae pop lahf adc adc pop pop xorl jp data16 aaa sbb clc mov fcoms jnp lret cli sbb jno mov jbe pop mov pop jb outsb (bad) mov cmp aas mov in ss or push mov xchg pop push dec cmp or and rcl jno lcall cmpl pop jno mov outsl fcomip je fsubr sbb ljmp sbb ja cmp leave xchg adc push mov (bad) aam aaa ret out pusha clc and popa lock xchg mov lahf aam (bad) or push mov (bad) mov test adc sbb push jmp jae mov popa mov sub fld1 in pop jns or and pop movsb mov (bad) mov lret dec adc pusha (bad) pop fistl stos pop leave std xchg mov jne mov adc mov dec je insl jp pop and lds mov cli test das mov lods pusha sbb and mov mov adc pop sbb inc (bad) xor test mov lds arpl test fiaddl sbb pop stos xlat push lods xchg push ja adc lods mov (bad) jbe (bad) mov int3 add ficomp mov inc or in sub int jle cmc xor stos jae mov cmpsl jnp ds fbstp frstor add cmp sub data16 inc nop jno mov cmp or pop cli sbb lds sub daa cmpsb xor out cmp cmpsl mov mov dec movsb mov xchg nop addl dec mov pop stos insl dec repz int loope push (bad) cmpsb jne pop push rcrl test jb stos xor (bad) adc repz loope and dec push (bad) repz cs cmp cmpsl scas std std pop sub mov (bad) icebp pop xorl lret sbb aam (bad) or repz cmp jp push sub cmp aas xor jns lcall (bad) cmp jmp mov mov out xchg dec xchg dec push hlt sub loope or pop sub icebp test mov mov fldt dec fwait movsb fcomp add dec cmp xchg bound mov mov xchg test pop xor clc mov arpl inc imul mov mov push (bad) jmp aad push out inc jle push fistpl jle stos arpl cmp add mov xor jl jae ljmp int dec leave clc into mov (bad) adc pop fs rcr flds ljmp inc out mov cmp jmp dec int sti sub scas outsb imul sbb and pop jmp movsb mov out pop pop scas aam and stos ss mov adc int mov call adc sub cmpsl fdivp insl mov lods lahf notl fucomip mov push pop dec cmp mov arpl jbe imul jp popf xchg pusha pop cltd xchg enter push or ljmp inc mov negl push int jmp mov jle addr16 jo push cmp lret sarl pop push loope xor jp rorl jne lock sbb shlb mov jp into gs lea jno ret stc push fwait dec (bad) (bad) sti adc add int or jns aaa pop test stos push pop mov push sbb pop xchg (bad) mov inc xor cwtl ss adc fidiv test xchg (bad) jp fisubl gs jo mov or dec jp mov punpcklwd cwtl adc out mov jp daa xchg push scas mov jp bound int3 sbb mov and push or gs xor imul jo stos dec sub or out das push push pop sub jp cmp lods dec or pop jbe punpckhdq inc lea mov pop lods cld leave jo xchg pop inc dec bound dec and push or pop push xor mov jne mov mov jno pop or loop and mov mov imul add jnp sub fidivr and adc std call repz lcall inc lods inc inc in ja jnp fwait (bad) mov xchg int and inc mov rclb insb out xor add inc pop stos mov mov aas rcr dec outsb stos insl into add out arpl fimull into cmc std jmp popa sub rcrb es loopne sub mov mov cltd mov mov data16 and jp in rcrb loopne jno jb or sub sub dec jmp fs pop sub pop fsin dec dec mov les mov nop rcrl mov sbb xchg sti jp ret mov imul inc in jne jns sub mov in mov enter repz arpl lahf cmp les (bad) jno cmpsb xchg in push lret sarb jne addr16 std sbb xchg adc jnp cmp adc mov and or jp dec lcall shll pushl shll stos and ja sbb mov jne mov xor and jl test pop and rorb mov movsb lods scas (bad) xor mul jmp fs sub negl add or (bad) imull mov ret pop pop in (bad) ja sub xchg xchg loope inc and loope add stos mov pop dec repnz pop je aas sbb cltd mov lcall insl push in sahf aam fucomi xchg sbb mov pop cli pop mov xchg icebp sti inc jbe sbb or fcompl mov ss pop or insl pusha push dec mov mov pushf cmp out cli lcall cmp xchg lea (bad) mov mov testl data16 mov pop je stc ret jns mov adc jecxz sti mov ja clc sub adc pop ja cmp sub mov jecxz push loopne push pop mov pushf pusha and cmp and mov pop mov push cs jb test into xlat push mov out (bad) push dec stos xchg mov stos pop aas mov pop cmp (bad) jb jo arpl and out loope ljmp insl pop jae and push sahf sbb hlt xor jmp rol dec pop popa int3 sbb sahf push hlt pop jno xor push es xchg aad arpl orb inc xchg and sub int3 xchg outsl dec pop push in dec cmp xchg jnp xlat lods pop and mov add mov or adc lea out cmp cmc in mov insl dec testb and stos sub pop inc push (bad) (bad) (bad) (bad) inc cltd loop pushf sbb sarl addr16 gs stos sub jp fs jo es aas mov xor fdivrs and jo stos gs jae pushf mov push jl jg push push loope push xor popl xor adc aaa movsb jecxz in add out cmp cli rolb adc sti movsb sbb fistpll stos sub xchg fimull (bad) jp inc arpl mov cmp pop cltd sub lahf gs cmc push fisubr mov jae and sar fnstsw inc push lcall xchg sbb jp cs jmp mov imul mov je dec mov jp adc cmpsb mov stos (bad) lahf jp mov mov cmp xchg cmp dec scas sbb je inc xor xchg pop push ret gs push andl lods mov lcall pop aas hlt xchg push xorl dec outsl and addl mov ljmp pop rcrb mov jp stos mov xchg sahf movsb sub pop add pop leave sbb xchg mov mov test xchg mov inc leave push hlt stos mov xor jnp jo add push cmp ret inc iret add int sahf ss adc dec xchg inc or jb pop lea cli xchg add mov (bad) shrb cli clc mov aas and sub insb mov sti xchg popf mov cmp jg cmp mov imul and sub sarl adc icebp nop idivb cltd sbb xchg imul aas sub dec imul jae jnp popa inc mov add or lret leave jp lods jle xchg fcomp clc xchg jp arpl mov mov jl cmc xlat adc loope div adc fildl dec ret cmp sbb xchg pop loop test mov outsl dec stc jne sbb adc addb loope sbb mov (bad) mov sti or cli divb fimull imul pop bound pop push add jp sbb mov cmc repnz arpl fstps or fistpll aas xor push jne xchg cmpsl jns sbb pushl pop pop push das mov sbb icebp add xchg push stos cmpsb aas dec (bad) cld sub mov xchg cwtl fnstenv jp mov xchg push jp loope add outsb adc cmp movl sub add sub repnz mov cmp rcl jp mov cmp pop cmp xor lods das jp jg clc cmp shll rorb popa mov jo pop aas cmp inc jp test std gs xlat mov push sub xchg mov test sub lds lods aad xchg and mov insb inc jp adcb jp fldl cmp sub inc jne insl (bad) stos jle test movsb xchg push fnstenv sarl fwait insl call cli aaa xor push adc jp xchg inc jle xchg push aam (bad) bound or out movsl int and xor push adc jl jp push lret pop out sbb fstpt add ret dec cmp mov jge push pop or mov pop xchg data16 call push aad loope push mov outsl or (bad) enter jp xchg (bad) adc jp popf xchg aam (bad) ja cmp nop and cmp sbb lds mov andb mov insb (bad) sub mov xor das (bad) jbe cmc jo mov andb jae inc xchg lahf sub bound jae jg cmc outsb (bad) insb mov mov jnp sti jge mov push imul mov or js jecxz adc dec xor test stos or pop dec lea mov scas mov (bad) jne pop xchg xor loope pushl hlt fldcw cmpl lock inc shlb lret fprem jp mov xchg jne out rolb cmpsl sbb pushf or jnp js loope sub test jns push jp daa inc adc fistpll jp xor cmc jl movsl jg cwtl fwait repnz into scas ja in stc jbe aaa and movsl jp mov inc lods shl es push xchg and and mov jno in xlat adc push (bad) add add mov xor test push sbb add jmp cmp test pop test xchg jp jne jg int3 dec lret shrl imul sub jp jmp cmp jl push jp int3 fcoml test jp and aas inc sbb jp aad iret mov (bad) push subl lahf shlb mov mov adc mov jnp sbb push jp lcall xor (bad) xchg pop loopne aaa (bad) int out enter fwait mov jp sub ficompl dec jmp iret dec aas lret sti jp inc pop inc ret jo int3 jp xor sahf rcl mov jp aam jns pop pop outsb jp lock xchg pusha xor lods sub mov jnp mov adc inc inc cld insl add dec pop cld cmp xchg ret mov ja jns leave adc dec loope cltd rcll gs ffreep jl adc ljmp out inc dec outsl cmp sahf mov xor ret sbb inc out inc aam repnz jg jne dec test push jb fnstsw ja das dec and sti push lret into push int3 push pop (bad) popa dec daa out or jae jo inc add mov sbb push inc sar pop jns repz push push jne cmpsb jg sbb outsb mov mov (bad) lea mov loopne pushf xchg pop jbe jecxz xchg sbb loope sbb std push sub out mov push sbb mov cmp cmpsb movsl push add jne hlt mov jnp and dec rcrl insb lods les sub push pop sbb xchg pop cmp add or int push leave cli cmp ja xlat fcompl (bad) or dec pop mov imul mov jae jb (bad) cmpsb mov or test ja xchg addl insb push sub test pop bsf add and pop loope sti out sbb stos dec mov adc inc sbb lret movsb sub dec int3 lcall sbb dec rcrb popa call arpl js jp dec into leave inc mov js cld xor test jnp dec pushf mov roll jo js push pop aad inc popa mov mov shrl mov es pop stos std and fcomp sbb sti cmc inc scas in sub xchg mov dec sbb hlt es push and jo jg rorb cmp mov dec movsl divps pop cmp mov scas test inc cs daa jp xchg int jle adc or fisub je jge movsb sbb mov jmp fbstp scas in or jmp mov jp sub push pop mov jge cli xor jp pop cmp sub xchg stos jp xor inc movsl jp loopne jb aad mov cs lahf idivl push push cmpsb sbb jno jne cltd aam or sbb shlb sbb lods sti jne or jmp and pop adc cmp inc jnp mov mov lods jnp jp add mov sbb or pop fucomi jbe jp inc sub mov cmpb xor das xor mov scas scas popa lret xor push insl jne add fiaddl dec cmp inc sbb pop mov lret push jne iret stos lock test cmp es out mov aas (bad) scas out mov sti out cli or mov adc nop pusha jp push shr mov out xor jp aad mov jp sbb (bad) dec jp xor repz dec sub jp adc push push jp orl jp into jmp int shl pop cmp xchg out cli and jp pusha pop lret adc mov loop nop rcrl pop sbb jp out or mov in aad mov lock sarb sub out push ja (bad) sub das enter jbe xor test js dec pop xor sub leave test lock mov lcall xchg cmc jge xchg inc ss test fwait adc pop sbb gs mov movsl or jae adc ror int3 add ja rep mov inc fwait xchg jns jno fildll mov xlat mov lea ficompl xchg mov cmpsl rorb test jp add jb sub pop pop jp int3 pop jmp enter andl xor pop mov and jp (bad) cli sub pop sbb inc pop mov cld jmp and lahf dec lret sbb xor cmp sti push test push mov ds jns jmp jp inc repnz (bad) jae test jge iret pusha push stc cmp insb mov dec and sub jnp aad jmp mov cwtl jae jo xor aaa std sti xchg daa jp add movsl hlt fstpt cmp inc inc stos into pop sbb popa stos xchg or dec pop lret jle ret sbb rcrl cld (bad) mov int3 inc push jg xchg cld sarl pusha into or push jbe ja stos cmp negl jl hlt loope and sub movsb jmp jne push out ficomp inc jb mov in xor jnp cmp jo popa sbb icebp leave jnp clc js mov jmp jne jl scas cmp cmpb mov insb dec sbb sti int inc (bad) rcll mov out sbb mov mov mov fnstcw int3 add scas loope in push push daa dec stos adc ret cs lods inc hlt aas jle loope push jo or add nop jae or mov inc push jae add and xchg into sti loope add dec shll outsl std cmpsl int3 outsb rcll add cmp jns dec loopne daa jp fstpl lea mov and jg adc mov outsb lret jle repnz mov ret pop lret lds and bound mov pop clc lcall movsl es push cltd lods mov mov dec pop les in ficompl icebp fwait (bad) movsb jne pushf pop jle jl movsb sbb sti imul jle jp repz jne cmp jae (bad) mov inc or mov pminsw dec daa aad fwait and clc add jnp ror mov and mov movsl lock jae (bad) jnp or shlb jnp out mov cmp inc mov push ja test lea mov iret es sub lock mov or cmc js fs (bad) jo cld jg insb pop mov mov jns test sbb jb add sbb das jp jae imul inc stc xchg std fldl and jp adc adc mov mov dec jmp fldcw cmpsb dec push ret mov mov (bad) mov loope jp pusha push mov gs (bad) xor fcom insl movsb pop jne jo mov arpl mov cmp les test inc jp jbe fidiv pop inc cli lret inc push xchg jl ljmp jno addr16 pusha jnp popf out bound push hlt push mov sbb aaa mov sub lods les pop aad xchg add gs mov es inc inc jno rcrl dec cs stos jle or mov pop sub dec jae cltd adc jbe mov stc rorb js and stos xchg aaa sbb push in sbbb in maskmovq mull mov mov test fstl xchg lods stos dec lock sub (bad) je mov stos les xchg (bad) jae mov dec mov movsl ret stos addl jns cmpsl scas pusha jne (bad) ja jne iret jb rorl pop dec jae or (bad) loopne xor sti inc fs xchg shrb (bad) out push xlat sub (bad) inc in mov ret inc repz push out mov lea mov inc cmp mov lods outsl mov xor xchg mov dec ss adc pushf es imul jae aam push sbb mov in repnz aam je insb dec movsb mov sahf mov or sbb (bad) dec add popa push sysexit jae pop fnstcw pusha push iret inc fcmovu sub fnstsw movsb dec mov lret cmpsb jbe in andl gs idivl dec and push repz stos ret adc insb jmp int dec xchg cs les movswl cld insb stos addr16 xchg jle aaa mov xchg insl or ret fistp (bad) pop mov and lret or dec rcll out xor cmp push add jmp in and (bad) arpl jle add cmp sbb push mov std inc daa fisubrl shrl jb sub jle jnp xchg leave or sub insb jb xor cli stos inc pop mov js (bad) mov bound pop dec add fbstp pop sub jno fdivr xchg mov cmc popl popf out ss or hlt cs mov jmp add daa sub stos push jns push or (bad) int in mov ja frndint vcmppd mov cmp stos inc push jnp adc xor leave fs dec gs fs sbb gs adc pop stos stc cld in dec mov movsl es inc mov cmp sub mov movsb and ljmp dec out mov push cmp ja repz inc add mov std pop sar add out fs ljmp lcall je jle adc sub push mov out popa jle push pop xchg sub jns rcll mov cltd lret mov fs (bad) mov and pop pop pusha in mov stos cli ja cmp jl je mov out gs mov adc stc and subl jge scas adc fildl add imul sbb xor fs push sti (bad) mov int3 cmpsl jns stos arpl cmc lcall ss notb jle add (bad) and or inc shrl push mov mov aaa or mov cs bound fwait into addr16 jge mov jp pop ds push add mov mov cld ret cmp imul rcr andb jo outsl insl int pop les iret inc xchg out dec push mov imul imul sbb repz sbb test xchg (bad) int3 add pushf lcall sub add sub mov jl inc leave les or push sub mov push push mov jmp jae out ds mov fcomps fstl dec pop in xor fldenv push (bad) sahf jp in pop arpl adc jne push lcall jo loope loopne inc xchg jbe mov (bad) cltd cld xor dec lret mov int3 dec adc scas push cmpsb lock jp sub adc xor dec dec and push cli stos insl xchg dec data16 fwait lahf aad fildll add push repnz les cmp mov sbb sub xchg xchg popf jp fs mov out adc push stos dec mov xor bnd xor dec mov ret popf int aas or push mov inc jp inc call xchg sub jp (bad) idivl jns jne cltd jmp aaa sbb dec gs jecxz pop cmp xor add in push cmp jp xchg add sub cmc jne pop fxch push mov jae stos test pop push in jbe loop out jne sahf inc pop stos inc dec nop jb fs jne push mull shl cld push mov jae cmpl push pop call stos lret adc stos mov addr16 xor ret (bad) rcrl sar daa sbb xchg ds push stos out scas or jmp mov sbb add xor adc pop clc aad push push mov jecxz arpl jo lock out (bad) in repz out daa sub push push clc mov and (bad) sub fsubrs push movsb push inc leave xchg mov loope iret stos sbb cld in inc ret fs insb adc add push xor mov xlat inc jae sub cmp mov movsl jne out add imul and arpl adc jne movsl sub jae and cltd sbb repz shll aas loope repnz lock int data16 cmp jae fidivrl jp (bad) add lcall inc pusha sbb push sub pop xor loop jne pushf adc dec adc es fsubrp mov loopne jae sbb jns adc push jp xchg insb inc scas dec mov xchg and jl loope clc jbe or clc xchg clc jl addr16 out rcrl bound test out pop cwtl dec jmp and fsubrs andl (bad) (bad) xchg and aad xor cmpsl push push pop pop push (bad) mulb xor popa int3 inc or xor outsb inc cmpsb push xor jl in mov sbb sub push jp mov xor cmp scas lret and aam das test sub mov jp mov inc cmp (bad) pop sti mov push add lret mov test mov jp sub jmp fisubrl inc lret xchg lds daa lock dec push data16 jo sub cmp adc lcall sbb xchg aas jecxz fcomp or imul cmp lcall ljmp call jb adc jb mov shlb (bad) fistl xor subb cmp adc insl divl cli mov stos mov pop daa xchg in (bad) jp push into mov inc mov outsl push xchg ja mov jp imul orb test add sub jp mov test add xor jg add stos jp rclb mov cltd cwtl jp outsb test lahf add pop movsb and in add lea xchg pop xor ds cwtl push jg les cwtl xchg cmp jmp outsb mov adc jne sti stos cmpsl hlt sbb out cmp mov movsb enter repz clc lret pop push jg fs pop insl push and xchg xor pop and or aaa jl sbb dec add adc jmp push mov mov stos insl jmp ljmp push mov push rcl dec dec sbb insl ja or addl adc push pop repnz xor xchg (bad) or sub bound sbb jae mov pop push and ret jge xchg daa cmpsb cmpsb jl adc inc aas inc push stos test mov pop mov hlt rol ret sti push inc xlat mov imul sub loope sbb (bad) adc into inc out sti stos hlt in stc or push sub mov movsb and popa sarb or mov stos sub dec jmp enter ja sarb or xor cmp flds repnz ror add add xchg add sbb or inc shrl jno xchg fiaddl idivl xchg jecxz xchg mov lahf pop (bad) mov push stc fimull movsb mulb pop fstl sbb jbe (bad) test cmp cld (bad) jmp sub stc lock jle out pop add mulb movsb jle aad xor pop mov int3 out mov in (bad) addl pop mov jb jg loope stos gs stos gs les addr16 add sub icebp jnp js jbe loope dec lcall add or xor mov jg cmp in and pop lcall jg mov inc add xchg xor adcl pushf idivl push pop add arpl jp (bad) setge inc stc cmp sti xchg sbb sub pusha jb out mov mov push jp lods cld xor and std jnp inc xor adc ss insl arpl (bad) jns sar push adcl adc out mov stos insl push xchg mov xchg push sub jp lods (bad) in add daa adc mov fwait xchg daa push inc (bad) mov dec imul sub mov movsl (bad) leave (bad) cmp dec hlt lods imul dec or xchg jbe int hlt push xchg lcall jnp ja inc cmp fs and sahf inc or mov push jle jl and gs pop sub jl xor jmp xor movsb aaa adcl xchg addr16 sub ror cli push pop add lret jno fidiv mov mov std xchg sbb mov gs out push gs dec dec jbe aad mov test js je nop add sarb rcl pop mov inc fs out fistp hlt pinsrw (bad) push adc push out dec sbb dec out push dec cmc outsl sti add mov dec imul xchg dec movsb scas push out add test cmpsb mov sarl call cmp cmp push stos cmpsb cli ja cmp jno cmp xchg loopne sub mov ja std inc icebp jb mov mov ror jno insl arpl lds lods push loopne pop cmp fstl push push outsl leave test xor or ljmp cld mov dec fistl add ds sub loop cmp fidivr mov push lods roll jbe mov jg push pop pop fcoms cmp (bad) int rorb xchg lcall sbb push aam mov addr16 jecxz das loope test or pop fisubr ljmp in xchg dec sub inc hlt xchg sbb insl mov cmp push test jp ret jo mov cld jmp inc js push popa (bad) jecxz leave push sbb jns mov in inc mov xchg ljmp jp popa (bad) jbe sbb ljmp jp mov push mov sub shlb in cmpsb into sub gs enter in lea adc jecxz scas jp xorl mov xor sub loopne fistpl sti in add sarl mov inc rorb sbb jge aad xor pop xor mov scas or (bad) jl imul je push mov xor fdivrs push daa test js fwait inc ja inc mov inc xorl loope mov aas mov sahf gs mov cld je mov orl push fs fwait repz mov das push jp test push pusha jp ret popf in mov xchg mov jecxz (bad) sub in lahf inc jnp testb test data16 jno push xor in into and icebp lea add mov cwtl cltd lock imul ret or inc cmp in mov push pushf daa cmc std popa lds jp movb cmp cmp push cmpsl bnd sahf sub mov cmp xchg and lret mov sbb mov fisubr fcompl mov jae pop push mov (bad) jp inc in outsb push loop dec jp add inc push mov test lret cli outsb sahf sbb ret pushl push sub pop test cmp jne mov sub cmc cmpsl jmp jp adc out mov stos mov cs push loope or pop xchg sbb push jnp inc adc orb sbb sub test (bad) fdivrl cmpsl jp sub imul fild (bad) jnp mov jp xor (bad) addr16 adc pop mov loopne pop sub aas push fiaddl push jp jge loopne sub (bad) aas sub dec mul dec jne in cmp dec sub mov aas bound add xor jl adc dec imul fwait xor ljmp pop daa push xor ret hlt jp fstpl sub (bad) outsb jp mov das jge jne divl pop mov cmp movsb and sub xorl cmc cmpsb pop jne mov jno imul mov cli add jne add popa inc or dec sbb (bad) cli stos xchg dec jp sbb lods imul pop mov pop test (bad) cli scas lock ja jp inc adc (bad) jno xor scas mov cmp mov jb imul inc es pop fisubrl xchg adc adc add and xor aas leave lcall or (bad) lods sbb pop cltd xor in dec gs xor imul int popf (bad) sahf (bad) ja in sbb xor int3 jnp movsl into mov jne push out pop pop mov xor and and (bad) sub ret and movsl jns clc inc add fnstenv dec out pushf mov jns adc push inc and lahf sbb dec mov pop arpl pop sti push xchg cmp bnd xchg icebp inc fcoml dec lcall push sbb ror and xor sbb popa sub mov lea lds jp push jnp cli mov les loop sbb ret mov hlt sti push lcall sub pusha push enter ja jnp push xor arpl ret leave insl cli (bad) cmp jno cmp leave jmp or xlat pushf jle cli pop (bad) jp or pop cs mov imul jmp add sbb gs call pop fcoml and imul imul lcall sti aad sub push popf xchg dec fucomi insl xchg jae into fcos xchg sbb shr and fst mov addr16 stos fbld xchg (bad) test jmp cmp cmp gs ss rorw pop fcmovb jnp out mov xchg pop lods jmp ficompl cmc jne cwtl jp es aad data16 scas pop adc (bad) jecxz push pushf xchg or pmuludq sub testl xchg cmpsb leave mov jmp jne movsl and push sub jge mov mov js jg and jp sbb popf std mov aad repnz loopne insl inc push push cmp jnp sbb adc out inc dec xchg pop jnp test jecxz mov ja std jg fdivs jp push xor lds popf jecxz cmpsl jp test pusha jp and mov dec fiaddl adc push outsl idivb fwait pop jo add or mov pop jp push (bad) mov dec into (bad) shlb (bad) fildll daa pop jecxz jnp enter bound or aas pop insb dec push aaa add jne dec xchg jp cld jle int3 mov jp dec lea jp or scas cmp shl je add lahf jnp pushl push dec push imul roll cli add mov enter inc mov xchg sbb sub adc dec push dec ficoml mov or mov inc out mov push loop sbb sbb (bad) ficoml clc add jns daa adc test lahf lcall push fnstsw cmp and push daa jg jp sbb xchg bound test scas push mov pop sahf adc insb pop and pop adc and cmpl jbe dec in jp push in outsl mov outsb out xchg xchg jp mov adc outsl inc lods mov and jno stos and push jecxz push mov pop fisub cmp jp xchg imul xchg scas pop sbb mov ret jp xorb sarb sub (bad) or jle push or mov stos addps dec fwait movsb lea cmp push ret and or leave movsb cmc add dec xorl negl je stos lods rolb movsl adc jmp mov xor insb cld into cmp sbb stos push sarl or int mov inc jno mov mov jne cld cmp cmc pop repnz jp or imul sub mov inc jp mov xchg pop aas adc popfw sbb arpl xchg pop (bad) mov and push fs sbb sarb mov mov movsb cld mov mov aaa into imul cmc test and dec stc popa jecxz jnp push popf negb sbb scas sarb cmp push test test ja sub pop cs xchg leave stos imul repz inc inc dec jp cmp jp dec fwait mov jmp cmc jp fnsave daa sahf inc gs or js xchg dec in imul pop mov inc xor jbe std (bad) (bad) cmc mov jmp mov push stos insl idiv adc jp cli aam (bad) stos into push daa push jb push add sbb mov arpl mov icebp sbbl addr16 jl jle jl dec out xchg mov gs push clc frstor jp mov jmp push or sti pop aam mov sub dec or jl add mov jne lret out push stos lret jmp in sub cmp loopne call rorb add imul sub xchg xchg int mov xchg jbe cmpsb jo lock nop mov xchg jg jno jnp cmp gs mov push dec lret call orl data16 stos sarl sahf notl inc jmp adc pop fidivr cmp inc in movsl aad sbb cmpsb sarb jp or adc mov jp lcall gs out mov pop (bad) mov fwait cmp add xchg xor stos addr16 jle add insl data16 dec jg movsb stos aas mov dec sub push fsubl lcall in xor imul mov lea test inc outsl add enter rcr je jno (bad) sub insl jae mov pop arpl imul aas je es cmp test fimull popa push incl mov test xor and roll sti push cmpsb stos lods scas and repz and lock inc movsb or mov repz (bad) jg scas inc fldcw fnsave fimull xor cld jae stos test or iret push popa inc lret mov jne xor ret stos (bad) loope dec add inc sub inc mov repz sti mov and lock ret (bad) push jecxz push xor popf dec ljmp jp jle repnz and or scas jae cmpsl int3 imul and fdivrl jge jecxz cltd stos cmp mov mov inc hlt mov sbb mov mov test xor iret jp iret and dec jp test inc bndstx or xchg xchg dec pusha adc out rcr push cli adc add roll or and (bad) mov push xlat (bad) pop push clc jp mov inc lret mov jl out lds lret pop (bad) inc jp inc xor mov mov enter movsb jp pop cltd jnp jno jecxz pop pop inc scas mov xor ja add jns pusha sbb jne push loopne jbe out cli arpl mov ss dec mov pop cmp push or nop pop jmp mov add hlt or lahf (bad) scas pop test mov dec cld mov aas ljmp lcall sti xchg xchg arpl or ret popf or xchg (bad) pushf (bad) jp sub jge jp testb rorb inc jnp or mov mov incl es jl cmp sti jg push jne push push and cli jl jp popa in xchg pop shll test and mov jno xor pop mov out jl jge nop cmp in sarl mov xor sarl sahf sub mov sbb negl jp pop cmp repz cli jp pop pop ljmp aad dec xchg cmc dec push fsubl xchg fistpll xor xor sbb mov aam mov (bad) hlt das icebp push cmp stos mov inc push mov or push iret pop dec sbb pop cmp push fimull mov cmp sbb inc insl cwtl sub inc push jp jg mov adcl mov or popa jp cmc (bad) sub dec mov xor xchg fwait sbb loope mov jnp mov cmp mov lret jge jp adc dec inc jp sub adc mov mov pop pop jge jle jae dec inc cmp dec push les lods jp jb cmpsl and ficompl sbb dec jp mov test (bad) jp cmp pop aaa push pop out subl mov mov push lods cmp leave cmpl pop push cmp sbb inc loop jp push roll outsl push mov data16 popa xor cmpsb imul sbb ret (bad) sub je or push add jb sbb pop xchg fwait jbe clc mov and cmp das mov mov rcrl mov jp jbe mov outsb or jge jp (bad) sti call jne shlb lea fstpt xlat stc jp pop inc out leave add cmovg aad imul lret dec adc mov jnp sbb fwait jp daa push xchg insb push loopne jp (bad) cmc push insl int lds jnp push in inc cld fwait in imul mov dec sub data16 jp sti cltd scas dec (bad) mov lret sub mov cmp push sar jp clc xchg fcoml rorl push insl in adc fwait negb dec jg jp inc sahf and or pop sub cltd (bad) push addr16 add inc jne lcall daa ja das mov jnp scas cs cmpsb fidivr int3 or jl in movsl jp outsl imul idiv sbbl inc push pop loope and dec dec ja int mov mov add pusha rcrl mov sbb cmc je (bad) ftst jne movsl cmp mov dec negl dec jmp (bad) shr sbb inc or in sar aam mov arpl or (bad) mov (bad) cmp lods daa je sahf jle stc xchg gs cmc mov psrlq out call mov sub rolb imul push jge aaa xor jnp xor enter pop pop jmp aad pop xor mov xlat stos loopne jp (bad) mov adc mov mov xchg jne push into pop arpl mov cmp add cmp xchg outsl pop xchg pop jp,pt pop lcall (bad) xor les adcl fstl xor repz jmp or outsb jnp adc mov or mov in inc adc rorb jmp push lods arpl popl and mov inc mov movsb dec cmp repz cmc std loope adc cmp push pop rcrb movsl mov adc fcompl cmp popa push jae repz test roll scas js and push jp jo push data16 xchg jp jnp mov gs cmpsb mov adc ret and enter cli fstl cmp inc pop fwait cmp pop imul and lea mov or xorl adc or jp sti popf iret gs cwtl fstps push lock cli push jmp mov cmpl cmpl mov ja jo cmp (bad) mov xlat mov into fs lods jno xchg out dec jle enter jge add add movsl push add push dec mull lods sti jge fwait jecxz call pop xor xchg jmp jno,pt pop bound sub pop ret push out mov lods fnsave (bad) or jno pushf jnp test mov (bad) mov push add (bad) sbb into stos out (bad) jnp push pop insl inc cli xorb aam jbe and into out mov dec cmp jne out sbb stc hlt jae lods stc jne pop fidiv adc sub xchg pop sub xchg xlat sbb jns lcall stc push jno fisttpl jnp mov add jne cmp stc cmp int3 mov imul sahf xor pop lods shll cltd bound jp adc enter jp cs imul push ret mov push call pop push ja jbe adc jp mov xchg add sub dec sbb inc stos ss jp jmp push dec mov add dec pop push push in add (bad) xchg leave pop xchg mov es imul into sbb inc fwait clc jp repnz jp pop ss mov ja out push ret notb mov add xor pop jmp (bad) adc add fisubl add sub jnp arpl sbb adc fstl hlt sbb push lahf jns pop xor jp arpl or or imul mov jp stos imul loope sbb cmp jp,pn pop mov and and and sbb mov adc jp xor and jp jno inc lods pushf adc or jae mov mov insb das int3 hlt loop pop pop jns inc dec cmpsb stc mov sbb bound xorl ljmp dec sbb movsl xor cmp leave add jne dec push push ret adc std xlat jae (bad) movsb addr16 pop ja sar dec imul movsl outsl pusha fs pop dec movsb add addl and xlat push xchg stos sbb div or jns pop dec cli pusha cld das push mov and or add into aas jbe or jbe test cld imul jae out imul add or in jb sahf es data16 int3 sti inc (bad) mov cmp sti insb out jmp ret pop repz xor fsubr jno daa fwait test inc bound add pusha mov clc sub and pushf push fs xchg mov test jle sti sti adc movsl aaa (bad) mov int3 adc aad inc pusha inc aad enter out in test pusha dec push ss inc mov pop movsb fcomps in mov adc loop xlat add push sub jnp sbb xchg dec xchg cmp dec jae rcll out stos mov imul push sarl sub (bad) bound cwtl sbb push or xchg jbe movsb cld test xchg sbb out push sti les xor cltd cmp push lret push mov sbb pop icebp (bad) sti mov cld mov sbb bound or push push cmp gs addr16 jns mov inc push loop jo lods sub imul dec pop mov mov pop sbb jecxz cmp mov xchg stos jne jecxz rcll call dec and (bad) jp je add jp lahf ret xchg lret or mov xlat xchg cmp mov lret call mov ret ja jnp mov in dec imul xchg test roll lcall (bad) hlt cmp mov (bad) fiaddl jns or and sub popa ret lret dec jno add mov add pop or ret xchg cmp sahf jp les lret jp mov mov cld jne jnp mov dec mov xchg sarl stos push cmp xchg xchg push xchg pop aad inc xchg bound out mov pop idivb cmp xor sarw jp pop rcll test jp cmp repnz sti in into and add push jp inc and dec sahf testl movsb pushf js dec or (bad) sti sti inc sahf jns sbb in inc jo dec sbb sub or adc xchg cmp sbb pop push cmp dec inc outsl pushf imul push xchg pop (bad) mov jp sbb shlb je ffreep push jp out sub repz rcl out and lcall cmp insb sub ja icebp dec es ret sub shll (bad) or jp in xlat or and xor loopne into ljmp add xchg adc cmp (bad) jp int3 pop jne xchg xor gs jp jmp jle add pop xchg sub out aaa cli push push clc adc add js jae mov cltd dec (bad) push imul push sbb and ret mov mov or stos loopne adc (bad) and sti mov lret jp imul adc jp jg jbe (bad) imul jp lcall push xor sahf sbb jno push pop sbb lret mov sbb mov imul fwait pop push jae insl stos or repz cli push aam or mov pusha jb gs je stos adc in sbb push xchg test lds mov pop jle in (bad) es nop or ja pop xchg movsb sbb jno push jp xchg and jp lock adc enter ret jno orb sbb fisttpl das popa jmp ds xor jnp insb das (bad) cmpsb rcrb stos sub (bad) jae cmp cmpb mov and clc mov decl jp fiadd xlat ja cmp mov pop popf xchg jo mov add cmp test mov cmp pusha jp xchg sbb dec pop test dec dec jp call mov inc jnp imul mov jne push stos cmp xor jne call pop pop mov xor test cmpsb ror (bad) pcmpeqb fs mov (bad) into jb ffree add cli das mov ljmp pop pop movsb lods jo cwtl lcall cmpsb jp fnstcw test jp xchg adc fdivl gs lcall in cmpsl xchg popa sub sbb push iret sub mov cmp je lret (bad) xor jp or jo imul movsb imul jae xchg jnp mov xchg mov xchg (bad) pop sbb push inc mov cmp and scas mov cli lahf adc sbb arpl loop cmpsb mov dec push (bad) mov jp sbb add mov jne xlat enter inc lret push mov and and pop mov ljmp repz ret in jecxz sub ljmp jp imul pop mov dec lods das adc int jno dec pop sbb mov mov dec mov mov out out cmpsb (bad) jae fs lods push xor mov add cmp sarl bound das or imul mov int3 ret add add jnp and jp jns into mov fistp sti mov cli fcoml pop aad mov xor mov std jg cmp es pop aad lret dec fucompp dec jp jno in sub js mov popf xchg mov mov or ljmp mov push pop pop mov jge loopne shrl mov dec daa jns cli gs (bad) xor and pop lcall push out xchg jne (bad) insl imul test das jp xor push stos (bad) lock dec xor data16 lea repz bnd adc aad ret imul and es sbb subb mov ljmp std add sarl lods mov imul popf push imul push cmp mov gs cmpb subl adc ds ret sub dec sbb xor mov in ret push fs shr cmpsb add jbe mov nop or leave xchg sti call jnp mov stos add cld add cmp xchg (bad) mov cld loop push rcrl dec cli pop (bad) mov add lret in push jg xor jmp sbb mov dec push test pop jp inc adc mov int3 jnp push pushf jle sub enter add pop scas adc pop fsubs (bad) das sub pop movsb or ja xchg xor xor dec mov or cmpsb jne jmp ret jne push ds (bad) xchg aad fwait sahf jp jbe inc mov into nop jecxz jge mov push mov dec fnsave out pushf test ja imul jnp xor (bad) pusha push es scas das cmpsb jp aam cld shll push sbb aas lcall jle push cli or or jg cmp xor fidiv mov mov push decl imul inc cmpsb push sbb addr16 push (bad) fistpll loop pop fdivr pop jmp lcall cltd fdivr in gs xor add mov mov cmp dec sub jo ja jns cltd les pusha pop pop sarl and sub mov inc add mov mov jae pusha add clc stos ja jnp (bad) fisub xor mov fcmovnbe test out pop (bad) stos pop imul mov jmp into jp test pop jp sbb mov jne adc in fidivrl cmc push mov jp inc insl movsl push sarl dec cs test mov cmp flds repz mov insl cmp mov (bad) in jae leave mov cmp sub out jp fs out xor repz push fbstp (bad) mov push and pop ds push out stos sbb fsubr mov pop imul push bound push and jp fist adc push adc stos sub repnz int3 (bad) out sub leave add (bad) jecxz bnd aas cli idivl xorl push push int3 cmpsb pushl sbb xchg xor mov nop imul jge hlt xchg pop mov jg lar lods (bad) sti nop cmp imul xchg loope dec stos inc cld mov pusha jne insl or xchg xor mov mov icebp fwait outsl mov fdivrs lods imul sub xlat jp inc push loope dec stos in jle das inc mov imul mov or adc push push pushf aaa fisubr mov outsl imul test stos popf andl das sti dec jns in movsb sub jns jp stos push (bad) jae fildll or aam mov stos (bad) jbe nop add mov scas rclb sbb push popa or and pop cmp movsb gs std adc and pop add mov mov mov add in mov stos xchg mov arpl mov xlat jae movsb push movsl fxtract push ss out jb fs fwait rep negl scas and arpl push pop bound push push inc sbb aam dec dec jbe data16 in push dec push jae pusha mov mov sarl xor sbbl jno out pusha jp sub stos or pop push mov loopne aad pop push mov dec out cli push lods pop mov arpl scas sbb (bad) (bad) mov sub xchg imul pop (bad) aad or pop xchg pop rorb (bad) js (bad) lret iret stos dec pushf mov fnstcw clc lret inc (bad) dec jns stos out push movsl jg pop stos repnz pushf pop and pop inc mov xchg in leave outsl add mov loop cwtl iret sub add (bad) cli mov jo imul pop jns ret push dec dec xchg pop lret push sub and adc dec iret or (bad) pop sahf nop pop fistp dec pop mov inc cmpsl fbld mov (bad) clc push dec in jne and mov pop jp stos xor shll push pushf int sbb push repnz aad dec lcall ljmp hlt sbb loop sub into and hlt sbb pusha out sub xor add bound mov mov cwtl sbb idivb stc mov int std arpl les add sub sbb shrb lret ret adc fs dec sbb sub cmp test cmp pop add push stos lock lahf xchg add pop jae jbe inc dec adc stos stc shll or fcomi mov fnop xor insb or mov dec sub jb inc pop sub push push lcall pushf call cmp jecxz movb pop stc lret gs mov or sbb adc ror xlat mov stos add mov cmp push sbb dec fsts (bad) push ret nop jns movsb mov pop es fidivl imull iret cmp sub add mov dec fbstp (bad) aam ficom xchg cltd bound jb lret sub sub (bad) sub insb andb movsl rorl xchg push cld push and clc lock mov sti mov aad mov pushf popa lods out gs xchg cmpsb sahf sub fwait pop dec cmpsl dec inc or sub in data16 lcall dec add push inc pop dec fisttpl out sub xchg scas jnp pop dec call sub dec idivb outsl and ja or add call repnz mov or in mov xorl mov stc test sub add fstpl cld jbe sti or lock sti cmp jp mov and popa fs sbb jecxz push xor dec sti (bad) pop mov daa or ljmp pop push xor popf sub lds inc pusha adc ja gs lret test mov popa push or mov das jne adc cltd fldt mov push jp std push aaa (bad) pop xchg fistpll sbb add jmp gs mov jge jp pop pushl orb cpuid jnp (bad) sbb mov (bad) sbb jp xchg out mov push (bad) cmp sbb lock outsb jbe add mov jp and mov jle stc jp insl mov pop sbb adc cmp xchg mov jp adc xchg jecxz cmp (bad) jb or pop jp and out enter ja push mov cmpsb sbb cmp mov push outsl dec popf sbb sti push and push jp cmpsb (bad) jae stos mov jne xchg add in scas lods cmp fistl sub out add push sarb jp js mov cmp xchg pop lcall sbb ret xchg xchg jp out inc daa jae divb mov dec (bad) gs hlt mov cltd ret xchg sarl mov cli stos push xor orl push out getsec adc cmp dec out jbe iret sti les stos or popf xchg stc cmp clc cmp dec in push lcall mov repz jge mov mov loop insb ja mov pop int3 addr16 sarb jb cmpsl and scas jp cmpsb xchg sub jecxz pop sub xchg imul fstps int jae mov aas xor jp lret fistpl es xchg lcall jle fnstsw push lahf icebp adc (bad) cli aam rorb push mov cmp jns fcmovb outsl (bad) jp shrl cmp ljmp fild mov push imul xchg jo in dec mov sahf adc jp sbb inc fcmove loope jp sbb jge jne jp,pt (bad) mov dec sub sbbl push push jno pop xchg cmpsb dec pusha pop cmp imul jp push loop inc mov addr16 push cld jp call roll jge in add out pop push and loope push stc fistpll adc popa arpl cmpsb xchg fisttpl les jne in scas ret cmp mov in lcall or xorl popa inc mov inc push sbb xor xchg sub cmc mov arpl (bad) mov jp jne pop arpl sbb sub int adc push pop andl dec or int mov jp inc insb lock mov sarl adc outsb or mov jp addb or adc mull mov ret mov jnp jne stos jne xchg mov xchg (bad) aaa jp push popf jae daa shlb cli aas xchg and pushf es mov ja clc lock mov lret std and sahf sub mov cmp shll fs push inc call stos pushf imul add sub ds or js cwtl or es scas mov sbb out ja xchg andl ljmp mov lock aas stos sbb xor sbb imul and ja jnp jg sbb or out add (bad) mov mov inc mov jb movsb or jnp push arpl xchg fimull repnz imul jae lea push dec loope jae or sbb hlt dec add xchg das mov inc fs stos jecxz pusha sub push cmpsb fimul dec cmp jne mov insb xchg movsb call cmp bnd mov cmpb into shl xor cmp fldenv jae adc iret adc cld (bad) cmpsl repnz ficom mov xor cvtdq2ps cld mov rcrl call mov lret pop pop imul div scas dec (bad) cli loope and push cmc jno rorb lahf xchg xchg mov pop cld mov rcrb sarl or or js lock jmp push je movsb jmp jo pop je jns lahf rol sub imul xchg cs insb scas stos xlat adc mov mov movsb sub test push leavew adc and pusha rcrl xchg stos push out push pop dec sub sbbl int3 cmp imul cmp jmp (bad) cmpl fnop mov mov adc jb xchg loope fucomi and lret test jecxz scas pop call or jp repz aaa ss dec stos and lcall jne,pt mov or popa mov cltd pop push repz mov scas jecxz pop mov dec jno aas fistpl jo adc jne cs imul (bad) mov ljmp pop push bound push cli stos jmp mov pop cmp pop mov clc ret out lea gs mov push pop fdivrp mov push sub push fwait das aas mov xchg jp lcall jp fcoml dec dec mov jno sub add pop fisubrl jle jbe sbb pop pop push dec add stos lock clc stos dec pop mov sbb dec clc inc jecxz cmp rolb or jp pusha (bad) mov jnp (bad) jae xor pop jnp out mov jp aaa int3 jo outsl add or or nop jae js jp frstor movsl jp andl cltd fnstenv jp mov sbb pushl cld add jg (bad) and mov imul rorb mov mov jp shll dec bound icebp add les ret cmpl loop dec mov push mov mov jae (bad) push das stos into cmpsb ja jmp jbe add cmpsb push jno stc and pop cmc or mov (bad) jne jae test inc or sub sub icebp cmpl std jp sbb xchg jno dec out cmp fidivrl repnz cmc ret jp dec cmp mov sub jae rorb pop out push jp sbb mov mov jnp movsl dec sub xor add not loope call movsb leave insl pusha aad xor lcall dec and dec push stos xchg cmp cltd add lods jp into dec sub jp test mov in jne cs jnp inc lret jp jmp xchg aas jmp (bad) jp cmp cwtl ja jp shrl push insb out rcll (bad) pop and jp or jmp popa ja lea sub xorl jno imulb cmp inc xor clc dec adc in insb inc test cmp lcall in pop (bad) jp mov scas mov std out sar jae push xor mov das scas push add or cmp sub cmc jge pop mov sahf cli movsl xlat and int mov mov lret fsubs psubq mov (bad) mov xchg movsl test ds mov add jp jbe outsb push cld jle jp rolb data16 (bad) sbb jge xchg call (bad) mov add movsb sbb testb xor jp cld in hlt dec loope mov xorb sbb outsb dec xchg arpl xchg mov mov enter or jns xorl sti (bad) fisttpll ja hlt cmp inc jle xchg pop imul sbb cmpsb lcall dec sub mov or cmc xor sub sub pop push loope outsl mov fmulp icebp clc imul nop and (bad) jmp jmp clc jns xchg arpl jl lahf add cmp (bad) jbe (bad) popf and cmp jnp fadd insl lea mov (bad) sbb sbb je cmp push dec es sub ja mov and (bad) loop enter sbb mov or stos jp mov addl pop pop jp sbb adc or jp rcrl or enter mov mov jg stos je out dec and push sbb mov into jnp (bad) dec inc notl push (bad) xchg jp cmp mov (bad) mov sub sbb rcrb and xor iret stos sahf xor in add outsb outsl hlt cmp push arpl or inc insl dec xchg lcall leave jmp enter sbb imul push or jae push je jmp ret jp add loop pop sub insb aaa pop xorl push sbb pop movsl jg jp aam adc mov pop cmp jno or jl fmuls outsb icebp cmp (bad) ret sub pop pop pushf adc xchg out push or jp lock xchg mov shll ljmp push cs pop es push pop pop mov jge into decl loopne dec mov js cmc in push pop add push fist cmp daa push mov push stos and pop jp les iret adc lock pop (bad) outsb xchg dec jno xchg and fwait jns in into ja fs aaa ret adc jno inc cwtl mov push mov pop adc mov sbb mov mov lds jae jno push jmp (bad) jmp jp mov test imul aas scas jnp xor stc (bad) aam fsincos inc mov call outsl push cmp int dec jl add std mov mov cmp jl sti popf xchg aam and shrb enter mov mov (bad) dec mov fs and pushw in add shl (bad) ljmp sbb mov jbe push adc mov pop and out pop push jp push repnz sarb pop enter dec nop push pop or jb pop cmc mov push jb push cmpsl fnstcw std pop jg insb stos lret and inc movsb xor leave xchg push jne xlat jns lahf mov jnp popa lahf out xor inc push push jle sub sbbb or mov jno repnz pusha pop in outsl push ljmp mov sbb into imul clc and or jns jl dec popa mov xchg loopne push bound adc repnz jp jo adc lret bound push stos dec cmc cmpsb cmp je cwtl popa mov hlt clc and or (bad) sbb (bad) loope inc or and push ja rcrb icebp lret ret insb inc jecxz shrl push stos scas inc cmp mov je out sbb clc pop mov inc test inc pop push in ret add sti mov out rcrb fs or gs xchg lcall scas movsb cmp jns push or sti fcmovnb ret jne lret pop push movsb cmp jno cs fldenv arpl adc dec mov xchg je stos jle leave adc mov xchg push mov cmp add ja jge cmp int addb cmp adc movsb jb pop push inc sub test stos hlt fisub jae add push pop test ja enter imul xor add in pop mov push fs out fidivr pusha push xor movsb addl iret jno cld lret mov pop mov sbb and ds dec xchg dec ss (bad) xchg mov cmpsb ror xor stos sub in sbb ret into jp dec cmp mov pop add stc call push scas movsb ds xchg cmc add push push insb push pop out inc repnz stos jnp leave jbe (bad) out xchg mul mov scas sbb xlat mov pop es sti stc or fwait sub jp fstl xor clc imul and mov xchg adc aas lods jmp (bad) xchg cmp jp inc ljmp mov mov and dec fwait sbbb xchg fildll mov push sbb ret sbb dec out mov adc stc lahf arpl rolb movsl imul xor mov jg ret loopne hlt xor xor aam sub xchg mov xchg das out mov (bad) or les je inc xchg jnp mov mov lret or dec xchg cmp das push gs dec fstpt (bad) jp fstps xchg jbe sub pop xor jp (bad) sti push pop mov jp and ret pushl faddl lea sub sub adc lods (bad) test push pop aad push and and xor lcall stos add mov jl fwait loope loopne mov jp mov adc inc dec das or cmp jl xor call out pop lods mov push mov inc xor lea clc xor sub aam sahf (bad) jp fcomps and loopne xchg in stos adc cmp cmp sarb jb,pt neg push jp ret repnz in (bad) mov jp push dec rcll mov (bad) mov jp push out mov jp addr16 in repnz jp andb xchg adc jp mov lods decl or add sarb xor testl cld inc lret sbb fbstp xchg xchg jmp ficomp out in call (bad) mov aas outsb push jmp fs clc incl sub mov into in push je bound in dec mov leave push mov adc mov sti lret jp loop or sbb add jp popf push xchg mov jp dec lret and add imul imul mov pop rcrb ret and jp mov (bad) add rcrl fist jnp test xchg mov rorb fdivrl or (bad) call scas test daa bound xor jbe xchg sbb cmp div imul fmull subl mov push jl jecxz je lcall fs xchg shlb pop rol sbb inc lret stos fnstcw loopne lea cmp push pop lea lret or jp es sarl jae arpl push movsb addr16 pop dec stos in and jp xchg outsl lds jnp roll push sub push das mov fstl fs adc mov jbe jo cmc push popa mov jne mov hlt repz jnp movsb iret and jp nop jne gs cmp jp rep jle jo inc jp jb jns ss push pop mov or dec stos jo sbb xchg xchg pop mov imul jmp movsb inc xlat out addr16 push cli sbb in pop cmpl sub dec bound imul mov jg mov and xchg jp aaa mov stos push nop jp outsl fwait pop push stos (bad) jp mov iret lret jne aam pop push fcmovu stc insb aas pop mov pop inc movsb mov pop fistl push xchg cwtl stos loope add push inc push push push dec and loope int rorl (bad) movsb cld add lahf (bad) fst out fs mov jno sub push fadd xor clc mov stos cmpb (bad) pop (bad) pop mov mov incb pushf jne cmc out inc mov mov out loopne test int3 sub ja hlt ja mov fsubrl mov aam imul pop sbbb dec pop mov jns je add rcll pop push jp sub bound cmpsb sub pop ficompl clc lock hlt out (bad) push fdivrl cmp and jnp mov cmp (bad) out cmp dec inc inc sbb shl mov in lea jo enter lret xchg add in sahf jnp daa xchg into test jp xor add gs jne xchg jne test (bad) mov cmp mov imul add mul or (bad) xor cld sbb jp data16 mov pop xchg jno mov or fisttp hlt (bad) lock mov out xor sub (bad) jne movsb pop addr16 imul push and gs jp inc aas mov add push jae and fistpl sti (bad) ja enter aad push xor push jp pop repnz or mov sub pop test aaa mov ret or ja js xor cmpsb pop dec (bad) lret push add pop push scas jle cmp aaa popa jp mov aad pop (bad) jne mov mov ret push jge push sub in jp imul roll sti stc push push sbb fbstp push cmp fcmovnu loop mov ret icebp sbb xor mov insb or shll mov push pop test jb jnp addr16 cmp stos stc fwait ret jp in pop cmp sub or jp insl lret mov jecxz repnz push pushf sbb sar lcall call and push dec mov and idiv (bad) insb mov jg xorl fistpl mov fdivl lcall in push mov mov inc insb pop and sub cmp das sti stc jnp in jp xchg xor pushl addr16 jnp pusha xchg insl adc push pushf in xor push cmp or push jnp (bad) bnd jp popf cltd pop imul pop pop sbb ljmp push xor stos adcl js ret jmp bound pop and cs out jb push sbb or lret fst jp sub jnp imul pop divl inc xchg arpl hlt mov dec fmuls cltd fnstenv jo dec test mov rclb pop lret pop adc jg dec insl cmp lret jl sbb (bad) jne stc or inc addr16 cmc push sarb jnp push scas scas xor add dec out pop out jp std (bad) pusha mov mov sti add movsb (bad) arpl gs xchg jb jae or mov and mov (bad) jb (bad) cli js or jp cmp mov jp lea imul inc ret add insb jne adc (bad) loopne insl inc pop ds cmp sub mov insb jp mov fnstcw in jbe hlt add ja mov es jnp outsb push jae cmp sub out imul das jnp lret bnd jle test sarb xor jp leave cwtl lcall sbb stos (bad) lret arpl push cmp shll and pop and stos push mov push dec fcoms xor clc divb and jp xor repz sub mov leave dec push pop jno out pop je pop push repz adc jp lcall jbe pop sbb adc add inc mov lret out leave repnz hlt sahf scas fistpl jmp inc es jno push pop push stos lock cmpsl jno adc mov nop jne jp xlat leave call lcall test out mov adc pop push clc push popa addb fistpll (bad) mov cmp add jp test sub jp mov inc add jo dec fistpl insl xor imul in jp jl aad pop xor mov lods (bad) cmp mov shll dec out scas cltd fidivr not (bad) lret add jnp sub dec iret jp push scas sbb popa jnp mov jge or jmp mov mov popf test pop add dec gs jp loopne rcrb or scas aaa pop jp mov jp js jae push sub jp and pop aaa jl mov sbb adc xor mov mov pop push loope ret int add call lock mov loop pop sbb ja fwait mov jbe inc mov inc repnz popa and mov imul jbe cli enter iret sbb xchg pop jae dec sahf mov out and jp lds mov jno lcall jp clc (bad) aaa mov mov mov mov popa jecxz out cmp adc ret test outsl fnstcw mov mov dec and in into insl jnp sub lea mov dec outsl imul sub cmp movaps into mov xor (bad) dec das lret mov jno sbb cltd lcall adc mov fnstenv cmp xor cmp sbb sbb push jns jmp in add out out jp or jbe and jno push xor cs inc push xchg mov cwtl pusha xchg lods add icebp jp mov push idivl int mov and xchg repnz jp jl inc bound dec sub inc insb push lock stos push negb psubsw (bad) xor stc cmp cltd jnp scas dec push pop cmp push js stc (bad) out sti loope popf push cld lcall ja mov shlb mov fistl inc mov movsl dec pop pop jno sahf push jp out js xchg and jge in inc mov stos sbb pop repnz scas into and jp sbb dec sub (bad) cli cmpsl xchg lahf jle xchg stos stos pop jp jnp sub test bound (bad) xor loopne hlt shlb pop test jg js scas push xchg push jne insl ret sbb mov dec insl mov sahf jp push (bad) mov jne lea xchg jp lock aas mov pusha sbb push ja mov sbb arpl shlb mov inc jl icebp jb aad es lcall pop xchg ja jae mov mov sahf dec xchg loop jp in inc jge and in mov jno loope sbb movsb pop xchg es sti test pop xor sub dec cmp ja jp or xor inc lods inc es into insl xchg or fdivrp jecxz xlat mov popf mov mov adc out cmp pop mov mov xlat jne jno fdivp mov das fs imul andb jp out jb xor fisub xchg pushf notb dec test dec imul lcall jmp (bad) (bad) cmp dec cmp mov sub repnz cs sti ds xchg jle jp dec adc jp sub push cld jbe (bad) aaa lcall lcall pop fcoms (bad) pop aam lcall inc mov pop jp mov lret and pop aam test sub jle jp ds cltd scas in cmp pushf push mov sub jp (bad) jo pop jbe lret dec xchg ss push lcall push dec jp cmpsl roll imul (bad) dec jmp ja cmpl cmp mov dec scas sbb mov sbb lret mov js mov cltd cwtl jne sbb jae out dec jp clc fidivrl jp js push sbb insb cmpsb sub mov add scas stc out insl inc lds clc jnp or pop xchg cmp pop icebp repnz and div dec das insl nop jno jmp fsubl dec inc (bad) jae mov jp and movsl push jp xor loop roll cltd inc add mov pusha pop fldt dec jno bound push js fwait cmp push cld mov jnp pcmpgtb xchg push adc popf add push push bound cmp cwtl adc push jnp or std ss mov (bad) mov lock fcompl pop cli imul arpl (bad) fcmovu pop add lds pop mov stc jg ja xor mov cmp cs ret scas add or push xor leave push mov insl sub test xor insl test in mov push sahf sbb dec stos mov sub int adc and cmp test adc aas lahf es in sbb and clc scas dec cs scas stos jne jno fcomp pop adc jnp adc and lret adc lods aam fcompl daa lcall jnp xchg (bad) gs xor jp lock repz or loop repnz js push jae sahf movsb mov pop dec pop xor es or inc loope xchg add mov inc insl pop mov mov int pop sub (bad) mov inc (bad) mov xor lcall lds fwait pop xlat es repnz mov popa sub jp aam jle ja mov sbb cs add aam jp enter mov jp and jae mov jp fstl cmp jp in push in mov push outsl test mov mov in fidivr push xorb adc push in inc es pop xchg loop and push nop insl add inc lret (bad) xchg in pop and xchg jnp popa ljmp adc mov sub cmp (bad) add push pushf push imul jcxz lock cmp mov les jmp xor loope push inc cmp jp icebp add pop mov mov mov jp loop out inc push jl jp dec ljmp inc insl loopne or cmpsl or hlt std sbb mov lret scas jp mov xchg mov mov push and fmull push xlat roll fisttpl dec jnp adc cmp inc mov and mov into sbb repnz into (bad) jecxz cld mov xchg mov clc or add nop adc (bad) loop jl mov lret out xor adc xchg (bad) or (bad) sti and push lock (bad) icebp int3 ljmp fistpll sbb std les add jp repnz loope xor mov and sbb push scas jne nop call stc jne ja mov xchg aam pop out inc insb xchg xor (bad) icebp dec insb add mov pop jp dec js mov fdivl pop xor incb cli dec arpl inc xchg mov sbb jnp mov cmp and mov push push hlt cmpsb in decl mov mov jae jg lds lods xor cltd inc repnz mov lea sub dec je cmp stos lret push push clc jno inc push xorb pusha push mov fsubs mov mov add xchg inc pop rol aad gs mov dec data16 bound imul loop movsb sbb sub loopne push cmpsb push (bad) jb add repnz ja pop xchg jge add pop sti push xlat dec pusha inc mov ss leave sar in testb test jno insb js pop ja pop lahf arpl cmc les jne fdivl jns or mov pop push adc in repnz or imul out out lds fdivrl popa jg orb sub mov fs pop loopne daa (bad) sbb pop shrl sahf push cltd and loope fisttpl pop and lods dec xlat cmp cmp aad mov bnd sahf je dec testb dec jae stos pop lahf (bad) cmpsl data16 out xchg and and (bad) dec popf sub inc adc and and sub mov fildl cmpl rorl jecxz fisttpl (bad) xlat je mov sbb fidivrl pop sbb lods inc cmp mov shlb pop test pusha clc xchg add inc les (bad) insl sbb mov xor popf xchg mov popa xorl imul stc push mov dec imul dec push in pop jl lret (bad) lret jp mov xor std dec and mov inc jp mov inc ret jbe mov or cld pop test insl enter shr xor and xlat cmp dec add inc sub lret jnp jle dec xor jns jae sahf mov test add jno stos leave out xchg pop sbb fnstenv shll or xchg outsb jnp or jle mov dec mov push or mov loopne sub pop clc mov in pop (bad) add add mov jp fldcw inc ja adc mov jne dec jp fmull adc fstpl dec jp testl mov ljmp cld leave stos test imul pop insl jmp mov push mov jp push arpl and fcmovnu jne repnz (bad) cmpsl sub insb pop cmp xchg cld lea lcall jne sbb jae jge or and push add in adc dec xchg int mov rep insb loope mov stos push push cmp rep int3 stc pop roll pop push or sahf (bad) push mov lcall sbb movsb dec (bad) je out add mov jp adc and ds or push jne inc xor popa or cmp push loopne cli mov mov cli das push pop pop jp stos repz sub arpl and (bad) jns cwtl jp sub cmp sti dec movsb into daa jp cmp cs and jp (bad) jbe cld push sahf (bad) push jnp scas jnp and pop xchg jp idivb aad push insb aas loopne adc scas or push mov aam fdivrs jbe scas push por insl arpl movsl inc inc lcall sbb les mov sub xor push movsb gs jae fstpt ljmp es gs loope call jnp mov jp add jo fcmovu pop pop jns cwtl loope loop lds jno sbb jbe (bad) loop stc adc mov jg mov dec das scas mov sbb inc push mov push jp jg aas jnp dec jno sub push adc dec in mov fistl (bad) rorb lods push (bad) out or jp mov (bad) sbb jnp sub inc jb (bad) out sub cmp mov fbstp shl mov jp mov int3 jp lock repnz xorl mov lea lret sbb fld pop dec sub push dec mov or cmp mov fs icebp mov sbb xchg cli out add jp mov fwait sbb xor movsl push pop f2xm1 shll test dec lret or cli mov pop das ret jno mov sub xchg jp (bad) or xchg jne les outsl pop loop call jnp inc (bad) jae je shll mov xchg xor je jnp xor and jp bound nop imul jp xchg push repnz push enter xchg sub inc mov and or idivb das lock ficoml jmp add cld adc cmp or jge sbb dec or and pop les push and dec add push jno pop inc daa push dec dec jne lods mov out xchg jp push shrb mov cmp int3 imul dec nop pop je imul add sub sbb popa (bad) sbb add fcoms sub sub push jae jecxz sub les ss adc flds leave jmp push xor in scas push push add fwait push mov xor fildl int3 mov cmp lods jp frstor push pusha jo jp test in jno and jnp cltd mov push std add mov sub xor push dec mov roll mov lock mov mov (bad) in xchg mov nop jp pusha pop xchg cmp and lcall pop fs sub repz and fidivr jmp dec sub dec subb (bad) and cmp cs and fcmovne push ret jle add es cmpsb add stos dec test push pop out insl js xorl sti jp icebp fcomps shrl mov jne pop adc sbb xchg sub jmp dec push jmp test pop inc mov lds mov mov fs xchg jp mov lea pop cmpsb cmpb dec jmp xchg mov mov sti pushf lea mov jl (bad) fnstenv adc mov cmp sub dec push (bad) leave ja lahf int sti cmp fidivrl mov lcall clc (bad) jmp cli out push xor mov ret fucomi jb in fbld and fstl adc or jl ss xor add sub push loopne inc cli cmpsl xchg (bad) mov outsl jno daa jo rcl dec mov and mov mov scas orb imul shrl jno imul leave cli dec (bad) and cmpsb xchg cs ja or xchg dec inc add (bad) mov sti js jmp push sarb mov sti je clc and shlb stos xchg xor or pop cli pop mov les aad gs int mov xor sbb mov mov int3 jno jl jnp mov jae bound mov ret ja js xor sbb add mov push rorb fistp xor push ret inc jp inc (bad) sbb daa jp sbb dec dec cwtl loopne cmp pusha adc add mov fstpt mov or stc (bad) (bad) mov into inc jp or paddusb xor mov pop ret add jne push or cli or repz cmp jae jg leave scas movsl push out jp data16 gs push scas jne xchg xchg cmpsl repnz jne pop subb sbb stc jp or sbb jne inc adc sbb movsl fsubrs sbb dec jp outsb sub fsubl push cli fnsave cmc stos adcl imul mov or mulb les push lcall nop out out jmp andl into call or out cmpsb push gs fdivrl xchg mov sub jp dec (bad) jne and pop sbb push cmp jp repz push pop jg sbb jp scas mov insl inc ficompl std stc jge into or icebp jp pop mov cmp or lea adc jns repz mov push repz (bad) insb cmpsl pop sub inc and rolb pushf push jge lea dec jmp mov pop jno inc and jne add ljmp mov jne sahf sarl pop xlat js jb inc sbb dec jmp mov fstpl mov dec mov add jp xor pop mov mov jp adcl cmp rorb (bad) pushf pop push in pop jae pop fildl (bad) jnp inc popa pop ja sub outsb ljmp xchg popa jno ror idivl mov ret fcoml inc in xchg jp cmpl mov fs add popa in das insl mov xchg pop dec out push push or jne push xchg cmp aas lcall cli xchg xor mov clc lcall mov pop call jnp sbb mov cmp adc sbb mov mov imul cli and lahf lods xchg stc cmp pop or test lock dec jmp sahf adc sbb sbb sti xchg sbbl mov push push fcoml mov mov dec popa mov inc pop ja adc jbe adc mov (bad) xor insl push sti jns inc fisttpl imul dec lds sbb xor or in jle clc jnp and push adc or jmp or jnp stos or xchg test mov cmc jp fimull xchg jne mov stos scas imul xlat xchg loope xchg pop jne sub test jp mov dec mov sub and int cli jmp add insb inc aad fild mov into fnstcw testb stos orb cmp idivb movsl mov pop (bad) stos jp jecxz ja or sub mov cmc mov add push push pop fcompl jp cld push xchg and jp mov leave cli xor or int clc testb sbbl inc sbb mov jl adc ja jp test or movsb int3 scas cmp add (bad) pop aam pushf mov jl jae sbb outsl (bad) aad (bad) das sub pusha add mov xchg or sub lea cmp xchg mov mov mov in nop xchg jno into idiv push fstpl and call sub das inc mov mov mov popa neg aad insl adc shll imul mov mov pop repz inc cmp mov sbb dec dec (bad) dec iret mov xchg inc sti addl loop and (bad) jp repz mov xchg idiv (bad) test outsb loop sbb jge jp ret push and movsb std jecxz mov jo pop xchg and sub mov push insb out mov stc jne xor rcrb adc fisubl pop xchg jne jae dec push dec fwait dec movsl push push xor cmp cmp int3 gs jp and jp or enter fidivr sbb mov inc insl out sub mov and dec mov sbb incb push cld pop ss mov sub pop int and out xlat adc jp sub jne,pt cmp jne mov insb sub push push jmp jnp lret jp ret dec movsb popa dec jp mov rol orl mov ret jbe jp xor cli jp adc push pushf cmp or jp inc jns jbe enter popa mov lea and push mov pop xchg xchg enter lret ja pop cmp cltd fcmove push jp pop mov ds mov dec lods (bad) jecxz fisttpl subl mov mov jmp jno imul mov sub xchg push je mov lret jo pop pop pop lods test or fwait in imul shrl enter ret xchg jp rcrb sbb jl inc gs push sub pop sub xchg popf test int aas jp pop fnop jnp or arpl jp out ret gs dec pop add sahf push cmp cmp into pop stos repnz xor imulb jnp lahf mov jp std loop inc js test xchg jmp ret xor jl sub loopne fadd jecxz mov mov dec jg xor fsubl xor leave mov jle cli jne push and lret jp jbe and popa pop adc jp push dec test push test jne fdivrs addr16 adc (bad) mov mov mov fimull xchg or inc (bad) dec data16 mov jle std cmp jbe inc push enter adc cli push push std (bad) lcall jbe stos add (bad) imul gs cmpsl lret jp inc push in xchg mov addl pusha push stos shrl pop jge ret cli fs rorb insl leave push mov cmp ficompl aaa fcomps sub pop mov xlat jp movsb fwait pop push insl imul aad jp cmp sahf pop or ja adc push pop pop xor push or call cmp negl pop mov cmpsl add fwait dec popf jp movsb lahf jge xor sub dec and int fdivrs jg jae shl les push dec push xor push repnz mov jp adc negb inc in jge loope mov inc lcall pop repnz push fsubs jp inc dec or mov stos outsl flds (bad) push test jns rorb xchg int3 jecxz ljmp and (bad) rolb aam jno icebp push jno xchg inc stos addb test shrl jle ja jmp jae pop inc sbb test mov shrb in jo adc push gs jnp lcall inc mov push popa sub xchg fidivr mov and and dec or xchg and push jl cmp aad out pop pop push clc xor lcall and jns xor (bad) push sbbb addr16 shrl cs and mov mov jo stos jg fdiv jmp lahf or loopne (bad) into lret push xor shll cmp mov fildll out cld dec mov mov jno movsl (bad) repnz popa int3 adc ret push loopne jae push push mov and adc jno mov jle fildll lcall jo sbbl (bad) sbb imul leave add pop mov insb hlt imul sti clc sbb jnp xchg test mov insb subl addr16 call jo cmp inc add sahf imul mov xchg (bad) dec addr16 out push fisubl outsl sbb sbb ljmp (bad) lret xor movsl pop mov or dec jns outsb fs jno sbb jp repz ss or sbb lret aaa jl insl daa mov pop sti inc mov cmp cmp loope jne mov inc fwait js jp dec fcomps (bad) xor sbb jp mov sub jp scas push and pop insl mov pop xchg (bad) jnp popf pop push mov in insb sub xor mov fwait in lahf fwait scas out jp gs pop mov enter cmpl sbb cld inc mov dec shrb jge sbb jmp ja and push popa inc hlt rclb dec les and xchg push in jp repz jmp iret jp xor jae imul into cli jp mov push push pop aad dec inc sbb cmpsl pusha int3 jp xchg pushf xor mov cli xchg jnp cltd gs add sub testb addr16 inc insl sub ret cmp jne test dec sub idivb cmp mov sarb mov fbstp inc mov mov aad jl out (bad) ljmp add fistp jmp inc stos mov mov push cmpsb loope and xchg dec push adc mov add ret icebp loop push rcrl push stos jmp out (bad) pop pop repnz inc sub cltd jg xor fstpt inc push sbb test popf add ret lock pushf daa push mov xchg test daa xchg stos (bad) push (bad) loopne test sbb (bad) int mov sti jne mov out add jmp test inc lea pop in jp stos jo in stos icebp sarl jge push and mov mov cmpsl jp mov imul jecxz cmp inc (bad) jb and xor ja movsl je aas jge xor and sub jp inc sbb dec and jnp xchg mov popa insl mov popf dec in sti fstl jp and jmp adc loope jae adc jns (bad) out sbb pop cmc frstor xchg cwtl and cmp popf loopne push dec adc and mov dec jmp loop pop out leave adc repnz movsb add lcall adc xor dec and jp inc inc icebp dec (bad) jp mov xchg push push bound add cli fcmovnu pop fdivs mov and cmp hlt push test das or pop dec jmp ss xor xor popa inc lds and inc xor aam das inc jne cmp int xor std fbstp push hlt stos pop subl sbb (bad) cli scas arpl aas mov repz and jp push jg imul cmp pop aad scas test jp mov xor in xor popa shl mov ja sbb cmp push pop adc jle out add repz cli (bad) fs dec outsb mov sarb cmp inc xor enter ljmp out jno pop mov popa movsb divl xchg push mov push dec mov add stos ret repnz push dec lea mov movsb push sub aad mov sbb aam jmp cld mov or mov pop sbb gs fs adc stos cmp addb jl jp fstpt sub push call push mov pop pop inc jnp dec movsb mov clc dec add mov movsb push (bad) dec je aam jnp push loopne sub rcrb xchg or mov cmp sti repz dec es insb xor jp jmp xorb sbb data16 mov push int adc pusha cmp pop cmpb imul jecxz addr16 push push and mov popf sbb insl sub ret pop (bad) repz mov dec loopne clc fwait sarb jnp frstor mov jp adc xchg cmc or pop jp (bad) mov aaa cmp mov (bad) fnstsw xchg cmp ss xchg mov sub paddq xor pop jp mov punpckhwd les sub mov ja (bad) mov and loope sbb inc repz aaa pop fcmovnu sti mov adc aam or sbb cwtl pop xor mov cmp push cmc std fistl pushf mov push add and mov fdiv jp lds pop out xchg lea inc mov jge push popf or sub or les dec xorl imul ja lds inc mov out lea jl cld mov and fildl xor gs pop inc mov imul gs mov sbb push (bad) in out push cli stos int3 lahf sysret dec ret mov dec in pop enter stos lret and push mov push imul add pop push jae and mov cld inc mov repnz in mov leave jb psadbw fstpt sub stos and (bad) (bad) jmp adc sub push pusha arpl xor dec pop sub stc jle sbb (bad) mov mov mov inc jle add cmpsl je aam fdivs xor mov dec dec imul dec (bad) fs pop pop outsb sub popf ja test fwait xchg sub xor cli xor pop xchg add outsl dec mov int jne mov icebp xor mov daa cli icebp adc (bad) out pop jmp mov shll xor adc (bad) movsb pop addr16 jae insl inc pop jl sti or pusha imull lds into xchg mov pop xor outsl push sbb fs stos push mov push mov ja movl cmp pop (bad) repz jmp (bad) mov inc je and rorl movsl ja pusha imul loope ja movsb mov outsl cwtl sti shrl push in lret lods xor fisub fild das gs mov scas lods inc push lret arpl sbb in push adc repz cmpsb inc fs dec xchg test in js jo sbb adc gs pop (bad) jge mov mov cmp insb jp stos repnz dec xchg inc or mov stos dec xchg push jbe sbb xchg fisub sbb and sahf loope fidivrl jecxz sbb dec or outsb out push inc pop aad testb aaa addl in fldt pop in pop (bad) mov stos xchg xchg mov lret push add jne push out xchg ret (bad) scas (bad) aaa push jnp cmp shlb pop jne mov mov je push sbbl cmpl cld jb jp push mov jp stos cmp push (bad) mov sub jp push sub and add xor and cmp fsubrs sti xchg out cmc dec gs aad sub cs mov (bad) and pop std pop pop lcall push popa pop and sbb or frstor add icebp cld pop push arpl adc dec jp and add ret std mov sbb jae loope cli leave sub daa jne outsb mov in inc mov add dec ja push jnp rorb fnsave mov dec popa rorb in push mov popa cwtl aad jnp jge bound (bad) daa push jp dec lds mov mov pop cmp in shll or cmp int3 and push call test jnp cmp fstps cli arpl xor mov inc or dec and ret lock ja imul iret push les test out sbb jp popf or flds nop jp add jp cmp inc inc xchg fstps in mov jp jns idivl (bad) pop aaa pop mov push jle cli aam xchg aad out pop clc enter mov dec inc insl out insl jo leave jp out dec scas pop xchg or mov xchg push es icebp out lcall xor repnz adc push xchg add cmp jno lock jno lcall mov mov ret (bad) jle (bad) in test (bad) cmc sahf dec aaa es pop adc xor cli pop (bad) imul fnstenv sbb xchg mov cmpsb jp and dec ljmp jae ror scas push cli dec fs push ja outsb push xchg jnp fstpt pop jp or lock xchg imul cmp sarb mov mov inc gs sbb jne push fs sahf movsl mov cmp gs fdivrl mov pop xchg and iret sbb and loop clc or xor loope sbb stc and push jmp add je mov jo xchg lahf lret outsb jns sbb (bad) aas push jno stos mov call imul jns pop stos mov or xchg pop loopne inc dec lock mov pop nop xchg mov repnz sbb les ss xchg push aaa loopne iret ja xchg (bad) (bad) nop sbb sbb bsf jmp xorl repz mov aad daa jp clc sub and popa pop jmp lret pop xchg ljmp rcl lods push clc push cmp pop cmp mov lea pop ljmp pop mov (bad) movsb adc out stos inc fisttpl (bad) ljmp ljmp push dec xor and dec sub inc nop jg aas jns cmp fstl loopne mov push fdivl fistpl mov cmp adc pop xor lret push popa dec and fmul outsb call sti pop dec out xchg mov push stos leave push fwait add movsl (bad) shlb (bad) xor fs cwtl (bad) pop jp push sub mov cmp outsl jnp ret jp push pushf mov cmp lods mov adc cmpsl insl jp movsl xchg fldenv jnp insb (bad) sbb hlt std add adc pop fsubrl mov sub cmp decl cmp aad lea stc ficompl sbb ret das jo mov inc loop,pn adc rorb (bad) add push lock clc adc or mov xor adc mov jge test dec mov xor sbb imul fwait inc pop fcoml jns ret je mov xchg mov divb in lds (bad) sbb stc mov lret mov jp pop mov push cli js leave imul repz mov inc popa cs jo fisttpl inc ss fidiv ret jecxz fwait ja mov cmp iret jne pop inc test popa xor inc iret xchg inc mov ja mov loope cwtl xor pusha ret inc inc sub (bad) push enter insb (bad) or mov sub xor insl hlt xchg (bad) inc sbbl daa jae ljmp arpl mov add lcall pop push and cmc std lret outsl fstl pop mov xchg pusha xor and dec rclb (bad) pop std inc out imul xchg jno mov outsl enter adc inc mov gs sbb in insl sub dec sahf jno jge lock js dec pop inc cmp sarb inc mov sqrtps in push jp inc push sbb insb sbb out mov xchg mov sbb xor sbbb adc cmp and lock cmpsl xchg mov jp xor stos lods (bad) mov dec lret pop cmpsb or inc gs push out pop sbb mov popf push loop punpcklbw pusha sub jnp add and dec dec xchg sbb popa jne push jl test fwait push mov and ret std fadds shrb jp clc out mov ja xchg fmull push insl jge das aad cwtl fcmove inc add (bad) subb mov cmp ja cmp push (bad) cmp sub xlat inc hlt jns inc test ljmp lret push aaa xor jg movsb sarl or xchg push inc jp cmp jbe push lcall stos adc push fist push mov popa sub inc (bad) sahf fldenv jbe pop das lret hlt movsb sarb fdivrl nop jb push popa jae ss fimull or mov call add and fs mov je jle clc mov fimull movsb jns mov pop jp rdpmc xchg xor cmp adc and push ret ja dec lock jp nop adc inc lods jno enter in cli push sub out jp jno mov pop sub push sbb dec or es xorl data16 mov in jg sub push into test in sub xchg idiv add dec lcall aad jge mov scas push fisubrl cld stc and shlb imul cmp push std je lcall scas cmp dec cmpsl adc add lret xorl cli fwait lock adc lds or test insb adc and in pop pop jp pop out outsb jp and jb jo (bad) jne mov mov sub scas jae cli dec stos push jp cmp or (bad) jp inc repnz push jno push jg lea lcall sbb or dec mov loopne inc in out iret out jp or inc sub insl push jne (bad) fcomps ret sub jmp fidivl pop jno clc add sahf push jne ret dec iret or sarl pop push sub aam jp inc stc ror jp cmp shr cmp mov insl inc repz xchg lahf test mov xchg mov xor push mov xchg je,pt jne xor sbb jl xchg sub stc clc (bad) pop (bad) add cld xchg sahf or mov mov fs into fwait jne lds lret ljmp in sub aas loope jp in ja pop call mov adc sub popa stos bound popa jp imul mov xorb inc sbb cmp mov das scas imul pop add es jle test arpl nop and gs out xor fist cmp sub jp mov scas and shlb jp es ret sahf push pop mov mov xor dec pop pop fidivrl push pusha (bad) mov jp ficomp pop sub stos sarb mov les dec out inc movsb pop sbb mov xchg out clc fcmovbe sarb dec jmp movsl pop popf and pushf aam shrb or or xchg sahf cwtl jp jo data16 ss push lahf aas mov jne aam nop psubq int3 scas inc daa fistl lcall push adc mov popf in sti movsb lea in negl lods jne insl sbbl pop aaa popa push fmuls insl sub dec sbb cli mov mov lret jle,pn fistp jecxz sbb (bad) sub mov jne adc mov jl pop fstps push enter mov mov xchg jp (bad) out enter push loopne jnp (bad) mov inc xchg xor dec fistp add and outsl mov das mov push xchg pop or mov std movsb iret mov or mov dec and push adc cmp xchg mov lret jne sbb jg jae sub pop mov add repz adc pop dec imul sub mov cmp outsb mov mov sahf ja aaa adc popf ljmp stos add mov sbb movsl pop pop lcall or jno popa pushf xchg in lcall addr16 jne cli sahf jne fidivrl sub loope in xchg push xor pop xor dec and inc mov xor cmc call xor cs inc dec pop jae jne repz cmp rorl jecxz xor outsb lret sub hlt jle or jnp xchg sub dec push inc in push pop add sub and xor and sub (bad) jp xchg or paddw dec jp jb in and jne xchg cli insl dec xchg mov in cmp mov xchg jp pusha shl scas sub fisttpl jnp lods cli push jne stc dec cltd repnz in sbb push fstl sub mov out jno js xor cmp pop sbb mov mov cmp dec insb int3 es jp inc scas mov xor xchg add inc pop js (bad) cli dec lcall int3 gs mov jmp mov sub (bad) fisub ss (bad) jl outsl int3 out jl daa mov stos mov push in dec aaa push repz dec stos jb iret movsb loope adc sbb js stos pop pop ja jbe xor push clc in (bad) jne jnp cmc insl sti xor popf (bad) mov xchg jae sbb frstor dec mov inc out ja outsl mov sarl pop insb jbe dec add mov in mov and cmp mov add into hlt jae mov repz cli sbb mov pop (bad) dec xchg lcall pop dec mov das (bad) mov jl push push ret or jbe adc cmp push xlat call stos dec cwtl push int stos addr16 jae push cmpsb mov pop jno stos mov lret cmp cwtl jecxz cmpsl fisttp pop bound lods repnz cmpsb (bad) int int3 loop (bad) dec jp mov cld dec addr16 leave (bad) jne int dec loop sbb cs popa sbb loopne mov inc ss push call xor (bad) xchg sbb aad cmp jp mov adc mov push jp cmp inc jp mov aaa cmp dec pushf push jp nop mov icebp or fmull (bad) jno mov dec dec or mov sbb int scas dec jp inc xor jne clc jb jl pop pop push jp xchg inc sbb gs cli jecxz es jmp (bad) out test bswap sub xchg jp xor push push aaa loopne dec roll (bad) push arpl cli cmp bound clc mov fld jb push gs jnp loop lds fistl mov cmp sahf xchg add sub fstpl insl jne lea xlat mov (bad) iret mov mov movsb mov pop mov jbe out jbe sbb daa (bad) sub adc push or and inc loopne xchg (bad) jno rorl into lahf out stc sbb enter xor pop sub pop jmp sbb mov xchg or mov adc push xchg sbb adc push add pop repnz movsl fcmovu lods xchg arpl (bad) movsb bound dec insb or adc inc insl loope pop pop xchg cmp xlat stos cmp xchg add fidivrl sub clc mov sbb push rorl enter sub ja loopne test rcrb (bad) cmpsb jecxz jae dec pop inc out (bad) loop sti gs or loopne sbb mov movsb pop sub fwait stos hlt nop push scas cmp pop jle push pop jl cmp jne inc scas pop movsl mov or inc out stos test cmpsb add cmpsb arpl out (bad) (bad) aaa xchg icebp mov mov ja dec clc mov sti outsb out (bad) shrb loopne out mov jae or mov mov inc ljmp dec sbb and (bad) out xor (bad) sarb jo jae cmp iret out bound pop push and fdivs cmp repnz push in xor fs stos dec mov shrl loopne jo in lods pushl pop stos das mov std push loop mov lret adc cwtl jnp movsb repnz ret ret stos xchg and je pop add and mov pusha insb push stos and sti test mov or pop mov mov (bad) jns rdtsc clc lods mov cmpsl inc inc jno mov adc jne mov adc cmp sub cmp add testl mov jp cs sti bts push iret add pop aas jnp test addr16 pop sub add sub or clc xchg pop shr jnp cmp stc pushf mov and pop fs sub push push add sub rcr mov movsl push popa cli int pop push and outsl push (bad) pushf adc (bad) cmp adc (bad) mov dec cli jbe xor mov out pop ficom mov (bad) push adc jp in and sub leave (bad) hlt jp call dec bound imul xchg ja fistl pop (bad) mov mov mov fsub out jg dec (bad) adc cmp sub or loope xchg push sub xchg loop mov arpl jbe lea pop sub sarb add ja mov lea mov mov sub js jne mov xchg aaa jae cmp jno rcll mov test add loop sub adc (bad) or stos jp mov jns shll xchg movsb dec mov adc mov testl hlt jp adc jne and andl pop jle xor sbb jp stc pusha inc (bad) lcall imul jbe dec (bad) ljmp lods (bad) fs ret aam and mov jb andb inc (bad) and adc push mov jp lret sbb hlt add sarl push popa loopne inc clc mov xor jp es xchg (bad) bound ds sub fidivl jnp lcall jo scas insl test lock ljmp xor (bad) std xchg push in jb mov jne aaa inc lea ss pop sub jl jns adc lds and mov cmp data16 mov mov sbb scas pop mov jne inc xor arpl jg xchg mov icebp mov cwtl jae in pop loope and mov jp nop jae lahf ljmp (bad) outsl shlb test scas sub gs nop cmpsl aaa jb loop fstl xor stos (bad) lret inc pop jp inc xor stos enter jge sbb dec aas hlt sbb arpl cmpsb sbb stos cmpsl jecxz repz in ja mov sub xchg sbb or push fisttpll push jge jp daa iret ror (bad) jp mov sbb lea dec stos outsl or sahf fnstcw xchg cmpsb imul and aas mov cltd sbb call (bad) jns imul sahf ja enter lock outsl dec test ljmp sar ja pusha dec push adc add ss sbb std rorb cmp rorl pop mov loope shll imulb fisub bound sbb test sahf aam jg add not xchg or jp das imul outsb (bad) cld lret repz repnz addr16 movsl popa lock mov rolb jg dec jl int3 mov inc sub sub jp sbb adc std aaa adc jno leave jp pushf aam ret xchg ja jbe dec push lea gs jnp hlt ds jae pop push ja pushf cmc cmp pop stos test or sub xchg jmp pusha nop pop jp pop jle insl dec leave mov fwait mov and push call jae scas sbb je mov test jb push and popf push add mov orl leave inc ret dec imul jmp pop scas test push add mov adc lret es jp testb xchg xor push in cmp jnp ja in xchg lret jl pop push test mov xchg pcmpeqw lods pusha (bad) sti movntps push notb (bad) push pop mov sub leave mov (bad) sbb in xchg push or data16 loop dec cmp pop loop leave pusha lahf jge mov jg jp std lock test sbb lret in cmp jl scas enter out (bad) cmp mov sti movsb cmpl js leave (bad) push movl fs mov movsb dec imul mov pop jp fidivr mov shlb pop jp (bad) sub nop push cmc push jle lea popa fcmovnu ja (bad) mov cmp jb pandn test imul adc test adc sahf mov jne fst or into test jle mov dec pop or mov out jle jmp sbb adc adc mov hlt xor add stc mov je loop push cmp sbb jnp fisubl repz sub jp lds add dec test js repnz push fistpll daa mov imul rcll inc inc sbb rolb clc and mov mov push movsl xchg jnp mov leave jp imul rorb mov (bad) je aas jp jno lret cmp jp mov cmp jns fwait xor movsb cmp lock cmp aam xor (bad) sbb push mov mov mov imul shlb add (bad) jl sub pusha mov jp add or ja xchg insb jmp adc ja adc sti imul div xchg mov (bad) mov jno nop mov (bad) xchg mov popa scas push stos outsb or mov or dec in jno push pop rolb repnz cmp fs cli fistpll in push mov jl stos aam jnp inc adc push (bad) popa in imul xchg repnz scas stos cmpb ja lss xor dec lcall sub jb pop cs arpl das scas mov xchg out rcrl xchg pusha clc (bad) add mov xor out mov mov pusha xchg mov cmp (bad) repz lret mov cmp jp pop adc addb call push add (bad) mov xchg push mov or ret mov pop jno dec in or imull pop leave mov sub aad push jo fisttp aas xchg js or stos insl stos push mov mov (bad) hlt xchg js in pushf leave push ljmp push sti jb dec push mov mov jae mov loope imul jae dec dec dec jnp jne stos in ds mov push dec andl sbb in dec push and push ss addl sbb js sub jb mov aad xchg sbb cmc aam das ret movsb ljmp cwtl div mov (bad) mov insb imulb jbe movsb and mov and jbe jp out add lods or bound ja pop mov loop shll dec sub sbb sub jns popa insl pop jns js mov xorl mov and aas test shrl das pop sbb xchg in loope stos jle pop push mov jns adc lret addl jno jbe add xor pop jl push jg cmp sti (bad) stos jecxz pushf jp dec popa out pop mov inc inc cld sub push scas mov cmp cmp push xchg sbb inc sub push jp cmp loop pop cwtl testb scas mov mov and sti out dec repz arpl jnp push and adc xor in cld add jo sbbb sti dec insl js cmp mov divl cli mov int3 test ret fstps int3 xchg nop push imul add out mov mov test sbb popf add xor movsb xchg insb rcl lock stc and shlb lret sahf fsubs scas pop jg push push test sarl xor jno mov sub icebp push outsl mov add sarl jge popa mov cmp enter pop sbb mov dec pop cltd stos rorl mov pusha push dec cmpsl addr16 push lock mov push out (bad) imul call add xor cmp pusha stc test (bad) sbb (bad) movsb push int3 (bad) (bad) sub adc stos arpl fs addl (bad) imul inc adc int3 leave mov stc jp lea sbb sub jp push popa adc bound movsb inc jns xchg sbb (bad) cmp hlt clc jp gs pop out mov pop loopne pop cltd pop cmp in fwait sbb int xchg loope pusha ds scas les es sbb fcomps scas stos outsl jp inc clc pop push into jl imul add jns scas nop xchg jp and dec mov popf mov leave xchg dec mov int3 mov and jae adc xor cmpsl and lahf cmp in test hlt jae ret mov lds xor and mov inc (bad) mov pop push (bad) lcall call dec push xor and jp jecxz testl mov jp call pmulhw fwait lahf push jmp jg sar jns int3 faddl push loop pusha xchg out mov orb ficompl lret rcl pop jnp cli in in out jg jno std xor mov sbb jp mov xchg outsb stos out lea ljmp cmc cmp dec adc lods repz mov imul mov data16 sti xor inc fldt jo sub (bad) aaa lcall hlt xor bound sbb xchg out jle mov cmpsb jp xor or (bad) jbe aad or xchg jb (bad) push mov outsb out cmp out scas popa mov and or jb fcmovnu sbb gs mov add mov mov cmpl and mov jbe mov js aad adc xchg add loope pop jge jnp cmp inc std out jp mov cmc jle out les in jmp (bad) xor or lret mov fsts add mov xor add xchg mov jp movsb or mov inc xor clc pop add pop gs push jne pop push or ret or sbb lret adc cmp aas sbb shrl adc fscale sub add or pop (bad) or pop cmpsb jne dec sub sbb pop cmp cmpsl cmp stc in aas jl (bad) jne push sbb lret jp ss mov das mov popa rorb mov and jp and xor jl add add (bad) fdivrs insl (bad) sbb xchg daa add or pop pushl insb cmp jp loop pop inc push jp sbb out push ret mov jp in fstl lret push sbb xlat sub jae add out cwtl ja fs gs cmc and js mov add jp cmpsl push out imul or in aad cli inc mov cmp push inc jo (bad) cs xor cmc mov cmp (bad) ja push test int (bad) jp cwtl mov stc jmp daa mov inc ss adc insb gs mov sub pop jnp ret insl mov and ja pusha testb into iret aas xor repz pop pop push fadd inc lcall lret out enter and addl into mov hlt addr16 dec mov idivb das fdivl (bad) jne rclb fidivrl pop sarl fist xchg add and sbb repnz pop insb mov fldcw scas mov pop push dec pushl adc out push jbe aad push mov or pop aam fwait outsl js xor leave aam (bad) (bad) pushl sbb push mov outsl pop push scas adc add cltd out inc and lods pop cmp jle mov rcr or (bad) lret ds add mov mov in cld mov imul cltd mov mov inc (bad) ljmp ds mov (bad) std addl addr16 jae inc pusha lcall adc pop mov pop cmp lds (bad) sbb mov pop sub imul outsl jle repnz lods cmp xor add or cmpsb adc add je add push lcall ja in test sbb xor nop pop in rol pop jae sbb jle ds ss xor aas add xchg push loope add nop aaa cmp (bad) jle adc shll movsb mov stos cmp mov adc pusha insl pop popa sbb cmp lret pop adc icebp and dec fidivr mov arpl sbb movsl and pop mov push sub movsb sbb movsb loopne push cmpsb add data16 sub xchg push fstpl loope (bad) sbb cld mov test and stos mov push sbb xor jns cmc xchg push push gs or fidivl ja xor cld cmp and stc fnstenv hlt inc movsb dec (bad) jmp stos (bad) cmp imul cmpsb add push mov sbb mov and stos shl imul adc clc jno jns sti ss in xor adc fs sub push int jnp mov (bad) popf mov movsb push aad loope popa push xchg fdivrl mov outsb and aad or xchg pop jnp ds jp neg cwtl into push addr16 int add iret cmp adc jb pminsw sub cmp test fstl mov imul loope dec dec mov cmp movsl popf das add jp div sub mov pop or fistl stos mov idivb mov jge xor pop arpl in fsubl adc aam (bad) cli inc mov mov push pop ljmp mov iret ss mov shl lock and jb push fiaddl les mov cmp sbb push pop lcall adc cli push shld jg jne ret pushf int3 add data16 mov push cmp outsb mov dec mov imul loope push sbb les repz xor jne or ss push test lock icebp add int mov mov scas xchg repz adc (bad) sub xor cmp mov fnop mov movsb xor scas in jp js (bad) leave jae (bad) (bad) sbb es (bad) fildll loope pop jecxz xor jp outsl test cld jno or in sti je cwtl jp daa (bad) mov mov or rolb aad popa xchg pop jb lret stos jmp cli out stc imul mov loopne sbb insl pop cltd sbb mov jae clc lret and mov pushf pop (bad) jp xor cmp xor fbld inc gs dec push jp xchg cmpsb adc inc jg inc dec cwtl push cmpsb mov fnstcw xor push pop xor sahf ret mov jne inc lods add add rcrb jp xor add outsl add in shrl ja sbb xchg xor fst push aam jp leave mov loopne lods aaa aas test push ficomp push pop jne out mov (bad) pop pop mov sarb das cli jg push sub mov pop mov insl sbb jae add cli adc pop clc mov sub xchg aaa nop incl ds mov jno ss out pop lods jge pop push and adc in ljmp xchg popf push jnp sbb pop inc arpl cli out xor jp clc xor pushf jno arpl cli (bad) xor data16 nop push in ja mov jnp mov or jne bound mov mov mov sub sti ds xchg imul (bad) fildl and inc movsb cli push mov jp xchg or pop ja ret adc mov jnp (bad) pop mov nop mov (bad) mov dec jp adc daa hlt rcll jne cmp mov push jnp mov (bad) ja in (bad) jo sbb mov (bad) repnz movl jg mov dec or imul fs mov jp into push arpl insl sbb scas ret jp mov adc mov mov pop dec and mov das lea jp cmpl jp dec dec lahf inc dec jp fistpl or mov cld pop pop sub sub and dec fiaddl mov jne int imul pop sbb hlt xchg aam push gs xorl or mov xor mov jno imul push xor jp shrb (bad) xchg mov (bad) je jb lahf jno pusha push and and pop movsb shr les shlb mov mov movsb pop in fistpl sub (bad) in push (bad) cmpsl aad or adc inc arpl and into pop push lret and leave jl lret mov imul (bad) cmpsl cli das movsb popl std jg ja dec repnz xor xchg lds mov jge add jp pop xchg lcall cmp lahf mov pop add pop pop mov loopne sub sti sub inc adc insb enter or jp mov in popa insl adc push jge pushf mov pop shl ret dec stc popa lret in mov rclb jp (bad) addr16 ja mov mov mov divb and lods dec mov xchg fstps sub loopne cli sbb cmp jp pop test adc loop jnp test push clc or pop pop jp ja (bad) out mov movsb jp and cmc mov jp ds aam xchg and cmp mov cmpsl (bad) jmp xchg insl adc jmp mov or sarl arpl pusha int inc fs sub pop xchg mov outsl sti add pop xorps gs lcall scas push inc ret sbb inc fist jl jp pop jns scas fs leave notb pusha add jns and outsb stos test ja push jo or add fidivr cld push inc lods mov sbb or scas rclb fadds fs leave insl pop aad sbb cmp mov pop (bad) sub pop loopne mov (bad) lods cli into dec bound pop adc xor icebp jp pop mov sub and jnp sub xchg push adc nop jae sahf aam inc push dec in jp and xchg push in (bad) hlt outsb fbstp in call lret pusha aas pop sub cli add or jne mov mov ret inc xor and movsl cmp pop cli ds movsb into and push jnp (bad) jne jp fiadd push sub adc dec sbb enter lcall pop and jl ret xor dec fcomps cltd jo pop or sbb xchg fwait hlt jno sahf divb add and push or aaa cmp pop jo rcrb sub sbb xor pop push jmp mov cwtl rclb rorl cmc cli xorl sub pop mov mov sarb sbb mov pop cmp enter insl or add (bad) iret jno lods lds xchg lret sti pop push ret mov push xchg push mov pop mov xchg xor adc fs jns sbb jp push (bad) iret stos test pop sbb inc popa pop out mov mov xchg adc sahf jp enter xchg pop xchg jp jecxz add popf xlat push jmp insl jp and xchg inc sahf cmp pusha cltd mov int3 scas dec lret jmp cli xchg in ja mov push popa dec mov lret clc cmpsl scas mov jecxz movsb pop jp rol call jp jb in inc das test jp mov pop ljmp repz jno fisubrl jae and mov es push test push jo movsl mov jne fdivrs pop jp sub addr16 (bad) push movsl cld scas (bad) shrb mov mov jp sbb sbb mov sbb dec enter je pop jb xor ret inc mov scas cmp xchg jl lds pop mov mov fidivl stc scas popl xchg add mov mov or ja out or jmp aad movsb sub jl and mov into in loopne ss and fdivrl mov pop push adc push inc push lock jne pop mov mov add sbb mov stc xor add or pop push pusha xor jp and clc pop arpl xor lahf icebp addl popf jecxz xor xor adc mov ret pop ljmp inc or pop sbb or (bad) mov mov call mov cmpsb nop cmpsl jl rclb add sub mov jecxz xchg (bad) pusha jmp cmp cwtl sub je cli ret popw ss dec and cmc insl mov jnp mov idivl aad adc movsl jne movb cli in cmp dec ds sbb adc stos enter icebp imul inc sarl test in cmp adc jp rcrb jae mov pusha jge cli pop insb cmpl jle je fbld sub jne lret addr16 jp adc mov sub das ljmp sbb cmp pop jno push movsb lock ret lods xor out inc pop fnop loopne xchg outsl mov into movsl pusha xchg (bad) in lds jmp pop sbb xor jp add pushl cmp out faddl sbb push sbb add sub jp mov dec inc clc dec fstps shlb add or xchg stos dec (bad) ja les adc (bad) jge pop js mov lcall (bad) sarb fs sub pusha push mov fcmovbe cmp add cmp xchg or mov out pusha ret les aad cmp sarl std lods xchg fldcw cmc sbb int stos mov pop sub jnp loope jb push adc mov (bad) xor int3 ja out inc (bad) or int3 xchg iret and (bad) pushf ja mov push mov icebp popf cmp jle mov cmp ret cmp out mov jnp mov adc loopne ret (bad) lea inc jbe mov jle repz aad sub and and (bad) not enter outsb jns movsb jnp dec jne movsl jp inc jo fistpl push sub add cmp lock mov add pop fbstp out dec lea lret call or int3 test push cmpl sbb sahf jnp pop lcall push pop popa xchg call ds jp repz adc daa mov push mov jp (bad) mov mov ret adc pop add pop insl dec (bad) xor add sti je cmpsb je arpl add cld lcall or jp aaa or add sti jp jnp sbb ror movsb jne add out (bad) scas mov arpl jp enter nop jo jae loopne jns xchg iret sahf popa (bad) mov fs fistp fwait sti (bad) insl cli mov sub push fstl test jnp lcall mov in cld mov fild xchg movl icebp daa xchg jp test pop cltd xchg outsb jg cmp mov sbbb popa das sub enter and and enter adc cmpsb test sbb sub jno test sahf cmp push jne adc (bad) sub mov xchg arpl mov cmp push ljmp or fisttpl je loope push loop fdivrl lock jp sbb scas mov and pop imul mov mov stos lods xchg in pop cwtl popa repz mov into xchg sbb hlt cmp adc ja mov jl add inc lret jae adc lahf jb jnp es jae add jl jo or push je icebp lea jbe cmp mov xor sub mov mov push xchg pop loope lahf mov gs lods aas das pop or out pop sbb xchg les mov jne pop fstpt int3 (bad) clc (bad) je jp mov or mov sbb jne movsb xchg lret out cmp les add or fnstsw fldl cmp into fsubl sbb jb daa cs arpl movsb or test jne push add jp (bad) push xor popf and adc ss inc imul fidivl add pop dec stos test push jno (bad) mov adc add inc pop and fdivrl stos xor sub iret fdivrl sub es inc testb movsb dec cltd cmp mov mov stc mov adc push dec pop inc jecxz cmp push mov jnp jbe dec mov jo mov pop push jb push lret xchg sbb test dec mov pop jno es gs jmp push mov icebp sub (bad) mov xorl inc ss sarb push sbb mov fs sub adc xlat jp sbb mov sub shrl adc pop or mov jp push cmpsl mov fwait aas mov outsb pop jbe test sbb in jp jbe add adc mov pop jb push jp jg fnstsw popf adc (bad) and cltd call fstpt (bad) jne imul je pop xor ret dec and inc (bad) (bad) lahf add dec cmpsl mov cltd or push ss xchg add cmp pop orl jp daa lret aam xchg mov and add stos repz stc sbbb jne gs dec out clc jns jne xor js mov insl add add or scas movsb jp mov and rcrl stos into imul jl,pt fld stos sbb ficompl lret push ret ja fdivl add pop push (bad) shlb push (bad) in sub sub lods in int ja mov push insl add test into and ret lock or (bad) out mov jge jae gs dec hlt push ja sub fwait mov jp add nop mov aas stc clc pop jmp icebp imulb (bad) xchg lcall in cmp inc test mov jp fidiv fsubs push and sub pop pop push loopne call inc inc lock stos outsb ja cmp push out cmp add clc jae or imul and pop aam ret mov lcall cli sahf xchg bound mov into insb jge jmp pop stc cmp push cmpsl mov stos ret lahf jns xchg pop cmp jo in push cmpl imul repz jae cmp mov aaa (bad) jo inc jmp or mov cmp ficoml and push mov cwtl jp pop sarb jp fisttp out lods test inc aam pop cmpsl jge mov mov pusha es pop pop test mov mov jp push insb jnp inc xchg pop jp adc and arpl mov lods pop jp test imul int dec pop cwtl ja (bad) sti xchg (bad) loop xchg mov push pop insl cmp push cli mov lcall in push jp pop (bad) bound cmp jno fisttp data16 mov stos lods daa cmpb jae xchg push inc outsl jp outsb call mov inc xor out mov jmp addb lret repnz stos cmp lret mov or jp xor cmpsl pushf inc je and pop sbb jg jb push (bad) cmpsb sbb cli xchg hlt cmp loope cmp ljmp mov gs xchg or mov ror inc push (bad) jbe sbb mov mov push xchg mov and mov rorl ret (bad) cmc jge cmpsb inc mov ret xor sbb or push cmp adc xlat in pop movsb xor jno fs scas imul (bad) inc movsb inc inc inc inc cltd mov clc mov inc movsb daa mov jge gs stos aad mov les or movsb or pop add and (bad) imul mull (bad) push push mov into (bad) mov mov push daa cmpsb mulb push fs cmp jbe out push andl lret call aas cwtl and mov mov mov (bad) sbb push negb jne out jno xchg outsl xor test xchg aas mov xor aad enter in xor push sub jg lret sbb push imul pop and in pop push sub dec mov pushf add cmp push pop push stos popa push xchg sbb fcomip mov bound push pusha (bad) aam mov jnp sub (bad) sbb inc (bad) sbb lret push out mov cmpsb movsb sbb iret lret jno sbb mov dec lcall shlb ljmp std fildll push cli dec les out add jge lods xchg jp dec and gs mov orl mov popf sbb pop push (bad) xor xor lea and sarl sub push fimull mov and sbb clc cmp mov inc xchg fwait cmp pop pop push imul push pop cli jae cmc add aas (bad) das imul push outsl cmp movsl int3 mov add push (bad) cs pop and aam mov pop push rcll sbb xchg mov repz movsl jno repnz add cmp roll hlt imul adc xor sub mov (bad) sub mov stos popa fadds dec sbbb jae sbbl add arpl in js mov push enter dec xchg dec ja stos mov or push popf mov popf movsb icebp dec mov lcall inc loope mov stos std mov scas dec orl call cli stos insl mov inc pop inc clc loope aad pop les sbb out (bad) nop dec add dec or or jb push jne pop push mov lds push cmp mov mov mov imul ret push gs mov push xlat stos mov adc aad adcl pop (bad) ja incb and adc outsb xchg mov mov enter mov into cli cmpsb outsl data16 jecxz gs sbb icebp clc jmp shr mov push jp stos (bad) (bad) sbb cli cmp int xchg sub lcall mov sbb js sar mov out sbb jo cwtl and push das leave push icebp divb test add jne clc cmp pop sti inc gs xlat cmp push cli jns mov xchg add push xchg stc mov jne pop repnz lahf outsl push mov in jp mov adc jbe mov adc (bad) movsb mov mov mov ljmp (bad) jns push sbb xchg or jp inc repnz fbstp fcomps std jne push rcll mov scas mov adc sub cli sbb jp out or dec insl xchg xchg mov jp test jecxz cmp jp inc gs ja and fildll stos imul pop xchg cwtl nop popa cmp or xchg cmpsl fcomp movsb xlat inc jle cmp lret jne mov sahf (bad) and dec clc pop push in jae cmp xor cltd fidivl test ja loop nop mov jp (bad) mov daa mov mov fwait dec mov xorl cli jp mov mov insl sub repnz repnz or cmpsl or sbb fidiv cmp lods cmp mov jge out pop jae sbb (bad) testb xor mov in dec mov lret jns ret incb xor push lcall stos sbb jecxz cmp cli xorb (bad) xor call sarb cmp hlt sahf mov fldl ss ljmp pop imull test push jp fidivr or (bad) jmp loop in jp add mov mov ljmp stc dec jnp jne test lcall inc push repz pop stc jp adc stos mov inc fldt (bad) imul inc xchg lock test jmp mov inc jnp lock cli xorl mov or cmp add xchg mov js les les lods jae sub xchg in (bad) sbb jp sbb dec fadds inc pop jg in xchg sahf jp adc or sbb mov roll cmp daa rol jp and mov cltd jne jae mov int3 loope or pusha mov gs popa rorb dec bound push fs scas imul jae jno test mov mov jp test mov xchg aam lcall bound push loopne jp mov dec scas dec cmp adc mov mov mov push lahf inc icebp sbb iret sbb jae xor or out in pop pop sbb pop jo pop jb push jl xchg mov sbb cld cmp xor dec dec pop xor int loopne sub mov lret das jbe call aad add sub and je jbe or (bad) repz jnp daa add inc fs mov jle mov inc xlat jno push mov sub arpl outsl out mov and pop sarl jnp call dec lret xchg test xlat mov fwait scas inc mov clc lock lahf fidivrl cs hlt gs cli and gs mov addr16 imul jg fs mov mov ret jae push (bad) pop xor loopne xchg mov push stos rcl jp std int shld insl dec jne mov inc jle lcall rcrb cmp shr jp outsl pop adc push test outsb mov pop fldl or jmp xor push out testl adc adc cmpsl xchg mov (bad) std or mov out pusha jae pop loope jbe cmp cltd cli repnz stos jp ljmp sbb (bad) bound mov ja fwait dec mov dec imul inc xor outsb push es jp xor jp ret mov dec (bad) loope cmp inc jp sub mov test lcall pusha push sbb add dec outsl mov fistp ficompl jp loopne in outsl sarb adc jae in cmpl and cwtl in sti jmp inc push sti stc fidivrl (bad) testb test cwtl mov mov imul mov mov push sahf mov ja dec jbe cmc daa sti fsincos sbb scas stos lahf mov cs xchg mov adc stos dec scas jp (bad) lahf sub out add (bad) jmp and imul (bad) fstps sbb lods jp xchg and mov mov sub fdivl cmp sub xchg dec sub add dec lret stc fstpl push iret jp mov movsb cmp cli mov lahf xchg push repnz push insb sub stc addr16 enter stos mov push imul sub sbb add jb push fwait dec aas jbe (bad) sahf jp cld hlt ja leave cmp pop push jp sbb inc fistpll xor ds fmul xchg jp out inc and jp push and dec sbb cmpl ret adc mov inc imul lcall xchg push jb add jp movsl (bad) inc dec jp call data16 aaa pop jne inc mov jns jl (bad) sub icebp ret ficompl popa xor fsts jnp enter dec insl out inc scas or jp add cltd js sbb loopne jle rcll mov push jno inc mov (bad) ret dec stos ljmp sbbb pop leave dec pusha mov outsl lret jle std jae mov ja mov lret inc push jae jle jp dec in cld test out (bad) repnz jp int push sahf enter inc icebp rol pop int3 adc hlt (bad) add jge push dec mov push sub dec les fist out aad add xchg gs dec mov lock mov bound pop sub lods xchg imul push jmp pusha jmp mov lea cmpsb shrb jne movb jnp psraw jp fisttp arpl movl pop enter xor inc sub sub sbb cmpsb gs jnp mov (bad) icebp and dec inc fwait mov add mov das xchg jae jne sahf inc repnz fcmove sbb std mov popa imul pop imul sbb out mov or mov mov xchg call lea sbb push inc imul xchg jecxz jl int3 arpl pop out jp jb mov jp xor sub jp push cmp or lcall in or cltd pop fwait jp and mov rorb cltd sbb ret out cmp out clc lret inc add push test sti out fnsave xor stos jmp jp lea jp dec mov dec dec lret mov addl ljmp sbb nop jecxz sbb cmp cwtl sbb loop jno mov or xor sub sub mov insb xchg mov dec sub mov insl (bad) mov dec sti add scas cmp jp add fstps sbb fild hlt mov js adc cmp dec inc cmp sbb mov dec mov int3 out xchg imul xchg dec dec mov (bad) sbb js pop sar adc inc mov jmp int imul test fcomps enter pop mov movsl mov insl mov push ficompl xchg dec jle push adc gs fldenv push clc notl mov sbb lret fist cwtl push in gs jge addr16 bound lret movsb xchg lods dec dec push xor cmpl push sahf jmp sub dec stos sbb pop fisubr dec mov xlat movsb sub jle or icebp adc or ljmp (bad) das or push (bad) pusha incl adc out or mov xchg or (bad) push sbb dec stos pop and in dec mov iret push sub fnstenv mov orb mov pop pop mov jo cmpsl mov xchg je movsb mov cmp jmp imul rcrb sbb push cmp xor pop xor movsb xor hlt pop mov or xchg leave pop mov subb scas in jg xchg add lock cmp fldt push mov sub mov dec pop fildl sbb aad push test mov test repnz adc mov repz push lret inc cmpb and (bad) repz addr16 out sub push das daa cmpsl hlt and movsb iret pop nop sbb jns inc call imul lret jns jp dec xchg mov cli sub dec pop pop mov sbb fld lds jno rcll pop dec test xor out fidivr ret xor je add jp mov and xbegin lea rcll xchg in insl push mov push shlb inc ja xchg sbb stos into jecxz mov cmp sbb push xchg sbb lods dec add out lds test ja es cmc mov shrb cmp mov mov jb mulb mov sbb add cmp add jmp dec aas push jp add out in test lahf repz mov mov inc sbb insb (bad) or lds push imul data16 mov cmp ja bound push jge push mov jb xchg inc imul fldcw stos dec xor xor fwait enter mov cmp enter stc adc inc xchg adc mov (bad) fild inc inc movsb aas sbb pop push sub data16 jno stos les (bad) mov sbb and stos xor and lret push add inc pop xor jb addb sbb jns adc jmp idivl or test adc sub mov gs push call add add hlt xor stos push sbb int3 dec and aam inc add je (bad) xlat jge jae inc sbb sub mov adc test stos and (bad) xor or fcmovu xchg jg lret pushf lods (bad) mov cmc jbe add andb dec push outsl rep push lcall push imul or cltd popa cmp negb fwait cltd push sub cmp ds push bound repz sti jnp ljmp xor mov fwait inc iret sub jnp pop cmp shlb dec iret fsubs sbb dec pop (bad) mov push loop mov and ja inc test scas test pop jne int in scas adc push fisttp sub xor inc in ss (bad) dec call (bad) lcall xorb and cli mov xchg inc icebp dec mov clc sarb mov jae (bad) es cmp fcoml dec push pop jmp ds sub xor or jp idiv fcompp pop bound dec ret xchg mov pop outsl (bad) sti push mov add cmpsl loopne or not xor push outsl les inc push hlt fistpll xchg mov adc fdivrs add sbb lods shlb in mov push lret int3 test jp and pmulhw imulb shrb jne (bad) fist or daa cmp add mov lea lahf pusha popa jno scas and push add xor gs (bad) lea aad loope cmpsl mov mov int3 lcall push pop cmp iret ja outsb add xlat into inc jno push (bad) pop lock jae lea and fnsave pop mov das cli adc dec pop sbb stos shr xchg loope mov sub test idivl ficompl sti cmp jge mov cmp mov sti inc (bad) es or jp jne (bad) bound xchg out xchg insb inc sub and adc lret test or inc je fildll in cmpl sub or fstl mov add mov cli (bad) es sbb int cld jne mov push or pushl jnp daa dec jmp fstpl jno and pop sbb (bad) addr16 lret fdivrs sbb mov mov push addr16 jecxz mov pushf sub jp mov fisubr in ja jae into mov negl jp adc sbb incb or (bad) in (bad) mov int3 jp jg test aaa sbb pop fnsave cmpb ret jp jge pop xchg bound repz popa das das pop lods dec xlat cmp in je jb sarl sub sub pop (bad) cld aaa iret ja or arpl inc mov sub sti xchg and mov leave push cmpl xchg (bad) cld je int movsb jecxz sub jecxz pusha xchg pop shrl or arpl sbb jae enter xorb or lds cmp stos stc jnp push add and stos sub pop pop arpl les and stos mov jle pop insb out daa jns popa repz fmull or iret bound push jne rolb xorl lcall fwait jp scas dec cs jne cmpsl icebp imul push aad hlt xor sbb cmp out mov mov out cltd je add cs cwtl mov mov add (bad) jecxz sbb jge pop jp xchg outsl pop repz int3 scas movsb sub inc ret or mov add js movsl in xor fldt mov pop mov and bound subl ljmp movb pop call mov daa mov xor lret push cltd cwtl rolb jno mov scas inc push add mov fldenv pop dec xchg in test pop mov ds or push stos cmpsb mov mov mov mov mov pop out dec data16 into sti aas mov jp dec out inc outsb inc ja mov fsubr (bad) mov lcall insl das xor inc scas or sub (bad) mov xchg sbb dec xor dec je pop sub push xchg ret sbb sub cmp mov lock dec test aaa mov sub mov loope cmp cmpsl mov aam (bad) or das and jo insb movsb lret pop ja stos leave dec inc sbb jae out dec sti jne jge shld jo aaa push popf dec addr16 jp mov xchg cmc jne pushf adc fwait paddusb push dec jge (bad) ja lret out dec cmpsl pop fnsetpm(287 jmp mov push or inc jne mov movl pop loope ss lret addl cltd jnp pop in inc mov jmp or cltd (bad) (bad) sub and mov jbe push jp sub or jmp dec and das sarl mov adc decl insl sub xchg es (bad) mov mov xor or sub cli cmp std and pop mov xor cmp fidivl xchg addr16 xor dec dec sbb dec insl (bad) pushf (bad) lcall xorb mov pop fs mov push jb jle pop shlb cmpsb gs test xchg movsl call add xor add cs repnz pop sbb cmp inc jp test lret adc inc orl inc push jp fnstsw addr16 out outsl ret push out jp xor insl add cmp in outsb sbb push cmp popf sahf aad (bad) inc repz mov pop repnz testb fildll std aaa jge dec jp dec loop push (bad) in divps push jmp adc sbb jp push sbb sub cmp pop aad bnd xlat jb lods addr16 shll jns dec lcall call inc jae pop push faddl in scas xchg pop sbb je jmp xor fstl xchg pop push pusha imul rorb xchg pop sub mov and mov cmp mov cli pop pop add arpl push in pop and dec insb test popf jae jnp and outsl jp xchg popa push sub lds addr16 call mov cmp arpl es cld mov sbb adc lcall imul cmpsl mov ret cmpl mov xor or ja sub inc fs jnp adc lods testl movsl cwtl lret dec cs sbb inc movb mov jne dec loopne push popf in jnp in mov jmp push dec and xor out fistl dec push xorl adc mov lret jmp dec aaa ret push xchg add jno jo repnz jl enter mov add lods dec xchg ja pushaw jae dec subl push pop push pop scas sbb inc ja mov scas cmp stos sbb xchg dec flds xlat sarl mov dec stos dec and jb sbb data16 inc imul jg movsl int3 das cmc leave sub mov sub fldt stos or out mov dec adcl gs std cmpsb mov or mov jns or pop dec fcmovne mov pop fstps pop mov adc and dec xchg test jae jecxz subb push sub cmpsb dec (bad) jg mov dec into jp pop cld les mov mov stos gs int3 pop push in xchg daa pop inc iret lcall dec sub outsb xor clc add pop jne pop pop jbe sub dec loope xor dec mov (bad) pop loopne arpl stos lods rorb add push repz jmp pop pop scas push cld pop cmc push repnz ja dec sbb enter or push mov mov push (bad) pop stos pusha clc inc (bad) mov aad bound pop mov fs jp sti cmp push out jg clc or add cs or jp jecxz repz or mov and push add jp lds scas add pop decb add ficom xor push test pop cmpsl xchg mov mov sti mov (bad) repz dec pop jbe dec mov jnp cmp test jecxz (bad) xor fisttp ljmp inc mov fidiv add mov or pop aam fidivr pushl lahf sub sbb das mov and mov xchg or dec in addr16 mov jae orl sub outsb out hlt mov jp inc and push gs cmp jnp adc cmc clc fldt testl arpl cmpsb jae ja ljmp dec (bad) sub outsl lret test jp or mov fs std mov (bad) xor jge sti cmp or jne leave dec pop rclb insl cmpsl or sbb jnp inc imul das sbb in xchg sahf js cmpl jp xor ja xor fcmovnb in jp sbb push sub mov mov scas mov sbb icebp fsubr je into mov call jp inc dec inc outsl jnp jne jno mov stc xchg lock scas mov jns jns jno jno fcmovb push (bad) xchg push fnstenv jp adc ds jne fcomps dec lret lods (bad) sub or cli inc cmp adc cmp lods xor mov pop in ret pusha nop adc cmp arpl pop popf fcmovnu jg sar xor jp int lcall cli adc imul jp adc and add pushf rorb cmp xor cmpsb pusha dec std movsl or pop sub je aas pusha mov adc mov ss test lret xlat imul sti xor add stc add sub inc jnp inc call andl inc jp sqrtps ds add imul and mov adc fnstcw out bound cmp sbb cmp dec movsb iret cld jnp sarl jp push sbb pop aaa inc fdivrl (bad) xor jp out cmp mov idivl push adc fsincos leave imul xchg fcomps jns push js es movsb xchg mov test cmc and out loop pop dec cmp jl adc mov xor sub mov push jg jp and xchg je outsl inc lods dec out or dec inc shll addr16 add gs and mov jmp test je cmp jne jno push sbb pop mov sbb push in jo ja mov jg (bad) mov out cmp inc mov cld inc shrl stos fnop fs int dec lock outsb daa pop lock dec fadds dec jae cmp add or stc addr16 or push lret test push lcall fwait lret stos dec jb ja sbb cmpsb pop les jle jae daa xchg mov pop xchg xchg lods mov and addr16 or in pushf xchg dec loop sbb rcrl sub call jns jp lds xchg mov jb xor adc mov nop mov lret and ljmp divb sbb pop push mov ret sbb dec xchg adc cli mov test xchg xchg fnstsw fwait dec ljmp jmp push arpl jp stc add push add (bad) enter rcrb popa sbb cmc push cmpsb mov arpl in xor ja pop jle cmp mov mov and sti aas xchg xorl push fisub mov jp ja mov gs jp add fidivrl jp cwtl cs daa dec imul mov ficompl repz lock jp stos xchg lret test jp xor mov jp (bad) rorb cmp movb cld loope adc repz jnp mov (bad) jge sbb iret (bad) int xchg mov ja adc mov push mov popa mov mov aad jge ds shlw sbb sub repnz lods jp insb lret sbb andl out jp xchg (bad) (bad) mov loopne xchg imul cli fcompl lret in mov cmpsl mov mov test pop pop jne sub clc cli push fnsave jg mov out idivl iret jmp mov cmp jmp out pop insb and dec mov and mov dec push popa dec cmc jnp pusha cmp mov fcmovnu mov test (bad) pop mov jp jo fdivp jno xor mov fidivl cmpsb es ret mov ds mov lock (bad) mov cmpl repz iret sub push jecxz insl sbb idiv jb jo and dec dec dec mov sbb adc enter or sti insl call pop push pop aaa (bad) jmp xchg lcall lods js lcall mov and (bad) pop mov insb gs lds pushf in jp test xor jne cmp jmp add mov mov add adc mov (bad) pop inc dec mov push xchg out jp mov sub insl mov or mov repnz mov cmp xchg js push insl xor inc pop jnp mov jne dec lds mov out in (bad) (bad) jp push mov jmp lods mov jmp mov std mov push mov lret jne fistpl jns pop adc mov add popa scas hlt mov jle pop mov adc pop push jge shll out mov fucomp (bad) js mov push (bad) in pop mov and xchg xor dec pop repz and nop popa jp mov adc shrb or (bad) cmpsl ss inc pushf add jne mov xchg aas fnstsw push pop cmp pop add cmp insl iret imul idivb gs loop jle mov jp push sahf fwait repnz xchg adc push xchg push pushf push dec pop inc sbb mov pop jp dec call pop mov pop mov cwtl aas test jns xchg jp lods cmc std push xchg daa (bad) jecxz cwtl jp cmpsb mov cmpsl push lret xchg clc mov mov jae mov or cwtl jg jecxz ds adc push mov scas sahf pop aad dec mov sub lahf (bad) adc idivl movsb or push in lcall sarb xor dec push pop jbe mov jne inc stos nop ret jg insb mov add aaa rcrb int3 xchg mov int3 mov xor fucomi jl jae addb pop pop push sbb stos (bad) cmpsb add sarb movsb pop dec out and daa insb ret dec ret cli mov sbb fwait jmp scas out mov test stos sbb movsb imul (bad) in lcall fildl push lret adc add test mov arpl loope cmp cmpsl mov call arpl mov ljmp aad movsb jle aas adc (bad) loopne push cli inc ljmp jae add jnp stos aad jge xor jle (bad) js js mov xor aam cwtl jnp push mov pop lcall sub test ret daa sbb sub xchg xor stos rclb dec in js adc sbb inc push mov imul push cmpsl mov int3 fisttpl push adc ret cmpsb iret mov pop out in fistpl sti cli (bad) out data16 mov movsb mov (bad) cltd sub jb xor sbb cmp push jp or in mov ret aas mov fimull push cmp push jnp jno xorl (bad) mov ja int3 dec jp inc stos mov imul jp (bad) es dec rep ja andl push std int sbb (bad) fwait xchg adc fistl iret jp mov insl pop jp mov jb int3 (bad) stc imul xchg pushf jp jmp adc pop add jg leave iret fcom xor mov lods sub rclb mov adc repnz jnp add lods call jp in push imul (bad) mov popf fidivr xor or mov jno cmp pop cmpsb (bad) enter ljmp dec lock cmp aaa and xor jp in cmpsl or push lret outsb sbb jl inc in pushf pop mov andl int fldcw iret andl pop xor jae imul cli sub stos dec mov mov push jne out ret stos cmp jl rorl xchg gs fiadd mov push fisttp dec xor jg inc push sbb (bad) push test imul pop jnp adc sub stos icebp sbb and push loopne nop jp cmpsb mov and pop popl jbe push loope push imul or leave test jp cmp mov mov test mov or fs fwait jge or stos dec mov (bad) jae pop push xlat cwtl js and or repnz push jp jno xchg jmp push lret sub popa cmp jge jg jp xchg bound jno fidivrl push inc sbb je aad jo xor mov pop out stos inc lret cmpsl sbb ret sub add jp push push (bad) sbb pop jp or sbb mov in aas xor jge sarb bound (bad) loope xor adc stc cli jae jno dec dec sub aas cmp int3 jp scas push jmp jp push mov enter jp idiv cmp lcall pushf sbb mov pop push inc lret shrb sbb push cmp cmp lods (bad) int3 or pushf int push jp inc and xor ja jge dec jp inc mov cli out aas dec and mov (bad) enter jp mov or jno ja pushf adc cli add rcrb and pop mov xchg std jb (bad) pop loope or out cmp push pop loop lods cmp jecxz xchg loope xchg add cwtl stc gs mov adc sbb or js xchg jae inc imul das lds (bad) cmp jnp jnp xchg int3 cmp mov cmpl sub mov jp inc mov (bad) jnp jno mov popf lods in aam lea cltd jnp mov add inc or call xor xchg imul cli cmpsl outsb outsl jp add jne push jp into sub cmp mov jp pop or adc mov push mov jl lcall fdiv pushf jp cmp arpl mov fdivs sbb sub xor pushf lock fst dec jp jge mov int3 movsl sub lcall int rcrb push scas mov sbb sbb fildll mov (bad) jns add push pop dec inc xor jl clc mov ss push cwtl jp outsl pusha xchg mov sbb mov jp scas lds mov jp inc out ljmp mov nop pusha popa add out dec test inc pop insb inc gs and cmp aas sahf jb jnp push (bad) ja xor addr16 mov gs iret cmp test sbb (bad) jle clc jo inc cli bound xchg addr16 dec push stos gs gs iret inc push or xor or in or or push test sub mov add push pop pop stos dec pop fwait push cmp test sbb add jp test aas movsb or stos fildl push cmp jge pop pop push movsl xchg (bad) jge xchg pop jne pop dec xor mov cltd mov dec inc jnp in imul sub iret cmpsl mov pop mov push sti xchg stos lahf lahf mov pushf cs sbb xchg jl popf dec jnp in push sbb (bad) and stos inc imul fidivl inc enter mov cmc call push cli fistp icebp xor shr lea cmp jp sub out mov and xor scas and pop outsl pop pushf push aas cli xchg into adc lret dec sub and fcompl rcrb xchg and repz fs call out dec (bad) mov or jo and jecxz ret cmp movsb jle jne pop fucomi xchg mov mov cli mov xchg jp mov fistpl cmp inc ret std out stos push out jp jg mov pop inc and test dec fistpll ja jp idivb pop xchg adc mov stc fbstp mov add (bad) outsl xor jp dec dec dec mov jge jp loope test outsl dec push or dec add jae dec mov mov jp inc mov pop mov mov mov lret jp pop pop (bad) dec (bad) jl insl cmpsl (bad) jbe in jbe add or inc sub sub xor cmp mov xchg imul pop push lea insb inc push shl imul movsb mov pop es cli rorb cmp xchg sub clc sbb jae cmp int3 stc and jb jl xor adc xchg xor mov (bad) mov mov sarb cmp ss gs push inc xchg test pop push lahf or cmp push aas lock lcall and jp mov pop jp ss sbb mov (bad) add xorl (bad) sub fstpt (bad) sahf fs loope scas jnp pop ret or insb cld iret jne xchg cmc sbb mov push jp stos and cs push dec adc (bad) cwtl adc mov xchg test mov pop pusha push je es insl or push mov xor fldenv clc stos jae (bad) mov nop inc cmp xchg int3 add popa sbb out add stos gs popf add int3 out sub ss sbb nop pop ss iret pop and pop leave arpl out jl jnp add movsb pop mov lods push xchg cmp xchg sbb icebp sbb out mov pusha imul gs mov mov mov and push arpl pusha dec sub stos cmc gs movsb mov sarl jp pop push addl hlt and jb scas (bad) stos in loop aad cltd lcall mov sbb dec test inc cli sbb mov ljmp or push cwtl adc mov pop loop roll fisttp mov sbbl stos notb sub stos pop popf aad dec mov cmpsb pop cwtl jno or push push popf fcmovnb mov xlat or (bad) xlat add mov push mov es lret ljmpw sbb (bad) mov (bad) fldt sbb sbb fnstsw jge inc dec fs fldl push outsb sti fbld push repnz decl pop lock lcall lcall clc cmp mov ret cmp into in jns lahf cmp gs mov (bad) mull in mov xor push rorb (bad) cmc push jbe jnp test cmp int3 daa test mov cmpsl (bad) in cmp dec mov cmp (bad) dec mov xchg imul mov cli insl inc inc in insl into adc cld mov pop pop jbe mov adc jp pop cmp jp imul jp mov fwait mov push xchg push jg and (bad) mov xchg push rcrl (bad) cmp andl xchg hlt outsl andb in inc jae daa ljmp pop leave dec (bad) mov cli mov dec movsb iret out and jp cmp jle adc fdivrs pop mov push mov movsl dec jne dec iret pop jp sub movsb loope push cmp idivb mov adcb pusha xor test cmpsb nop jp popa mov (bad) jno test mov stos jae dec or sub jp (bad) (bad) mov ja add (bad) gs pop imul jno fisubl jp into pop sbb add lret cmp dec fs jne cmc pop arpl mov inc je fidivr or or imul in shl cltd call shll pop fs sti jae enter stos (bad) push mov popa (bad) lds jne das pop aam ja movsb lahf test mov aas cmc fmull cmpsl ja pop inc test jbe mov mov stos in inc inc aam shrb push jle cmpsl push jle pop pop cmpsl cmc jl sbb pop (bad) dec imul aad adc sub dec or repz lcall pop sahf sub cmpl cld xor adc insl inc cs imul sti lcall and jp or outsb jns pusha xchg jo and in ljmp mov ljmp daa (bad) icebp in (bad) jp jecxz ss and repnz sbb ja jp xchg shll jg and imul xchg lods mov or mov add sahf dec jae jae xchg pop cmpsb repnz cwtl mov test cmp sub aas cmc cmp imul cmp cwtl mov sti andb sub push das lock imul inc mov or aaa stos dec bound lahf fisubrl jecxz push imul (bad) and repz jp repnz jns gs insl testl enter mov rolb hlt std cmp or xchg sbb pop push fistpl outsl ret jo cmp ds int3 lret jnp dec push cmp or push outsl or jne xor daa sahf insl testl push repnz mov pop jp mov mov jae jns sub (bad) adc enter in stos inc ret jp adc mov jp cmp ficom adc ret cwtl jp aad cmp jo rcrb mov inc jp lcall gs jns jno add les xchg cmp fiadd movsb inc mov loope adc sbb xorb pop cli faddl cmp mov call sbb push dec outsb loop xor add add adc jno jns jo je dec push and mov test gs mov mov xchg daa mov in in test cltd sbb stc jnp dec jmp dec sub xor push mov scas mov in dec insb mov jnp jo fmuls lahf (bad) in add or mov jne and inc inc ja mov mov mov leave mov adc jp push lods subb outsb adc sti leave push sbb movsb dec movsl fwait cltd jnp push pop mov loop imul or sub fadd out push cmp mov dec jmp push push jnp mov cmp mov dec ja lea rolb insl mov jmp ja loope lret cmpsl cmp push lods cltd std fcomi xor (bad) out sub stos sub jp xchg cmpsl xchg pop ficoml ret out popa push mov xchg cld cs gs ds push roll pop xchg pop adc jp and stc cmp jecxz movsl cmp push addr16 jo jnp xor mov loopne stos mov fidivr enter mov cmp inc or jl or sub jp push xor repz jp dec sub cmp mov scas (bad) repz test aas push (bad) cltd mov jp popf jg nop pop (bad) sub cmpsl adc jecxz jp push mov movl dec push arpl and mov aas jb pop jnp adc jle jge sbb add popa adc imul enter (bad) outsb or in add dec data16 or jbe push mov push sbb addl xchg cmc dec sbbb (bad) jg pusha lock fs mov lahf xor sbb mov mov pop les jnp adcl inc mov mov adc jne fldt cmp out sarl xchg jno lds jb or pop xchg push or push sub jo lcall mov addr16 stos jp xor inc movsb aas cld flds xlat clc dec mov mov sbb popa imul les xor push ss cmp fisttp push cmc or push or mov in dec es fucompp jb push sub je cmp test or (bad) add sub xor in in dec stos ja jnp sbb enter fwait mov movsb xchg mov push mov in lcall mov stos mov mov cmpsb mov push mov icebp dec gs pop insb sub aaa jb fcmovb jbe mov jmp mov mov (bad) jmp repnz mov add nop and sub cs arpl sti and loope sub mov outsl shll in cmp or stos sbb xor sbb ds sbb cld jb add sub xor pop fdivrs or mov js roll adc idivb shrl movsb idivb push sbb pop cmpsl hlt dec or dec (bad) cli fistpll mov cmc or sub (bad) (bad) lock or cmp aad enter fnstcw movb add mov in push mov sbb gs dec enter xchg mov in mov xchg pop lahf nop jae inc in sub fbld bound fidivrl repnz insl mov pop jae addl popa cld scas pop gs fwait testb jne aam (bad) mov shl jg jno push and cmp sbb fldenv rol add cmc and outsb mov pop mov sub xchg flds popa test pop push packssdw pusha popa push mov sbb lods lea out pop cltd fwait push and stos mov loop addr16 daa push jp faddl data16 std (bad) hlt jp pop adc cmp popa ficompl mov cwtl dec pop fnstenv stos jp arpl push jae mov (bad) cmp add xor ret dec mov idivb movsl jne out inc fs scas lcall pop push loop pushl inc jg jp push sbb fsubl daa dec mov jae xor movsl (bad) and outsl mov das inc pop jns adc fs cmp aam mov sti aad bnd mov mov ret maxps ja (bad) and leave jnp mov inc loopne jle xor outsl ror jno add (bad) push push sub test push fcmovbe dec jnp stc (bad) out mov mov xor sti repz pop jp cmp fstpt popf mov (bad) xor dec inc fisubrl inc insl out movl xchg or cmp jp popa aaa sbb dec cli jbe jmp adc repnz jle cmpl mov mov jnp sar ljmp mov cmp or inc xchg bound movsl mov add sbb xlat add and sti es inc jbe test fs mov xchg pop roll mov aad jge push inc ja adc sub in sbb ljmp stos jbe pop sbb leave fs imul sub dec jae cmc add movsb divps add sub and dec pushf jmp test cmp jae cmpsl xchg cmpsb stos test adc push xchg mov xor lds negb into insl inc and mov xchg gs loope pop ret cwtl icebp pop aas int3 sarb jb adc xor mov adc stos pop jp and imul pop stc fcmovu or ds movsl push inc fcompl jp nop (bad) repz pop mov lcall aam xchg sbbl lcall jp mov cli gs outsl dec (bad) lock push stos sbb jne sahf loopne inc cmp xor dec pop cli push lret jp in xchg popa jbe insb xor dec mov icebp push and fstl ds gs sbb inc jl mov jnp test and jbe stos fdivs roll outsb sub stos gs clc popa scas movsb nop clc cmp cmp xchg dec or sbb mov jecxz outsl or xchg iret dec mov jo movsb jbe insb out addr16 push iret ret lcall mov mov jae xor fs scas movsb push shr and mull mov test jle push or sub stos jmp pop inc lea push cs in in ficoml jle cmp and in adc cltd push bound push push mov negb insb cli cmp inc sbb adc mov decb arpl mov ret clc or jnp dec push dec push cmp pushw shll xor mov push stos aad sti ficom fdivrl rorl inc xchg ret jns or adc fstpt stos dec outsb insl sub jne push aad push push xorl testl jge rorl rcl and stos mov cmpsl jb (bad) pop enter jp pusha push cmp gs (bad) cltd cmp stos inc mov pop sub fcoml lret jne in dec popa fs xchg sbb repnz cmp les mov nop jg xor test jmp xor shlb mov gs sub cmp jp xor clc (bad) or scas push test hlt sti add sarb aas insl or mov dec sbb jnp or adc lods mov dec mov pop lds xchg daa mov mov add mov pop sbb jno dec jne fnstcw xchg pop fidivrl sahf mov pop sbb imul jp mov adc arpl push and mov insl out stos add cwtl call out lret jp ret sbb lcall flds add jb gs loop inc imul cmp mov add sub and cmp or addb and inc jp loopne mov xor movsb insl out aaa dec mov inc ret jle sbb mov test push rorl outsb out fidivl xlat (bad) pop push mov mov sbb mull mov ror cmp mov repz stos push mov push andl mov and mov xor adc mov das sbb (bad) jns mov add movb jae dec icebp jb cmp push xor mov jle mov fidivrl jge pop xor mov add pop jns xchg jns adc cli sub repnz cmp lret mov jne xchg insb mov aad jp (bad) push sti call mov sub push jbe out mov notl push lods push add add jl sbb das push and inc sub add fwait jbe jp xchg out mov jp and stos into ret loope cmpsb pop repz (bad) scas aam sbb push jmp jp jmp jmp inc jge pop cli das mov cmp popa fstl sub shl mov jmp xor daa sub insb fcoml (bad) xor jo cltd repnz stc jp andl test outsb int icebp push fs push inc sahf jp icebp dec test cmp mov movsl repnz xchg imul jmp jno shr imul jno mov mov jb or data16 jnp mov jp pusha pavgw mov les dec (bad) arpl sub out sub das cwtl (bad) rcr and push jp (bad) rep mov mov movsl sub scas add mov int add clc insl xchg dec push cli out leave sub pop outsb das add push (bad) jae sbb xchg mov jp add femms or hlt jne ja pop repz xchg xchg mov jnp lds (bad) sbb sbb es std push dec cmp addr16 ljmp and sbb mov dec imul in jp mov loopne jno in mov jl pop div shll xchg mov adc jbe hlt outsl cmp xor jp lods xchg mov (bad) loop insl pop (bad) mov stc popf loope adc popa or les inc push pop lods pop loope mov add mov sub gs inc mov push in lahf shll aam inc in cmp in les inc mov jnp in or mov (bad) jg jp in xorl jnp jp adc loopne sbb lea xchg jno jl adc sub mov jne gs test jp jg int ret or das cmc fdivs rolb jnp rcll sbb (bad) add pushf imul adc mov jne adc (bad) jl mov jle cmp xor cmp ds xchg jp mov mov dec mov pop mov pushf (bad) push bnd sahf in jp mov (bad) mov stos sbb daa icebp mov lea call pop pusha push int jecxz addr16 out adc insb jecxz idivb enter inc (bad) ja sbb jnp daa or aad iret push clc pop mov push movsb dec stc sbb pushl pop aaa inc (bad) jb jmp enter jbe inc sbb push xchg pop popa adc imul lret mov mov rcll mov rolb pop push mov in (bad) insl insl xchg cmp lcall mov test mov xchg push jno push jbe jp pop test xor sub hlt or loope xchg push (bad) in sti mov movsb jle add jns push dec je aam repnz shrb sarl jp xchg leave aas stos punpckhdq es lods nop loop sub adc (bad) mov jp inc push lret or sarb and push push mov fsqrt (bad) xchg fwait xchg mov jp and fwait sbb sbb pop test out dec sti stc jnp adcl lcall pop lea xchg ret jne (bad) rep or mov xchg pop sbb cmp aam push inc mov or rolb movsl pop jge jl outsb xchg out jne add sub sbb cs push add in lods loope leave xor add cwtl sbb jge push sbb rol push jp fldenv sbb dec inc insb gs lea sub fwait out jae cmp (bad) out sub sbb ret sbb jne fidivrl pop mov scas sarl jg ss cwtl or add aam xorl and and enter xor mov push add mov jecxz shll jo ret pop mov jle jp inc lock insl jno repnz lcall test dec pop adc loope ret jb xchg cli sub inc gs (bad) mov sub push add jp xchg fcoml mov dec jno xchg dec out inc popa cmp push mov push cmp outsl mov rcr sbb dec sub lret jne mov push sbb out pop dec push out fnstenv pop rclb and jp stos adc jnp pusha gs ror jae adc pop mov xchg and shrl jnp movsb mov inc add and adc ljmp mov and push stos jns jg fsubl adc fidiv jb out (bad) insl out jge popa lods int3 inc insl xor idivl xchg cmp mov jecxz mov jne jle mov aas imul and jne jecxz,pt add out inc push pop jp dec mov sbb jp test jge cld ret xor jp pop in cmp les xchg xchg cmpsl mov jg dec mov (bad) xor cmp insb out pop mov sub sarl cmp and mov mov mov cmp inc stos jle cld dec sbb cmpsl jp lods std xor pop sub inc shl int3 inc movsb imul imull sub ja pop jp mov sub or jle outsl leave call in jno aas (bad) je cltd aad xchg cmpsl sbbl dec sub and push fst nop ljmp or push hlt in gs jno jp into pop pop int3 mov lret fs jnp xor sub mov insl sub fildll xchg jp mov dec inc mov dec int3 mov xor pop cwtl stos dec jle ret mov xchg jp xchg icebp js repz jge lahf sbb pop push pop mov pop jle jnp jb cmp pop call jns push outsb push lock nop sbb mov testb outsl cmpl cwtl jno adcl lods ficoml inc mov and cmp dec cli lods dec xchg jp scas dec and enter out or insb fbstp mov ret jne shrb pop leave pop insb cli pushfw rcrl jp das cmp out div xchg cmp arpl push pop int3 mov mov ret jp test or test pop iret jp push and jp cltd sbb jg push jp in fnop pop (bad) cmp mov pop cmp mov hlt mov pop mov (bad) js inc icebp shll ret lret jp mov jge sbb jae mov sub lret inc insb mov repz ret mov xchg xchg int inc jg stos data16 and jp cmp ja adc and pop pusha cld jnp pop in jge cmc sbb mov mov ss xchg lds adc shrb fwait jp,pn mov sbb xor pop adc mov jle insb adc test add sbb addr16 jp fwait repz daa xchg test cmpsb mov mov mov (bad) mov mov loope (bad) cmp outsb jnp sub pop lods (bad) sub dec aaa jecxz fisttpll add push push and push (bad) mov pop jp pop fbld xchg mov inc fistpl adcl loopne cmp mov xlat sub jp lods fcoml pop addr16 shlb lods push dec sub cltd (bad) jb addr16 pop rol leave mov test stos daa insl mov mov (bad) (bad) cmp aad cmpsb jp inc jne lds adcl mov sub stos (bad) mov ss orl stc ja jecxz mov push cmp add lock xor dec mov mov shr andl xor pop enter push xlat jns das (bad) repz mov jnp adc (bad) jp and pop cmp push mov pop xor jecxz inc jno xchg pop popf cmp push lods jno (bad) scas lret inc repnz out add jno jbe aas inc gs into leave out jp and pushf dec push lock test lcall pop mov push insl xor test xor imul mov test imul jp dec xchg add mov outsb jp (bad) push pop xor dec inc dec fcomps jp mov pop mov xchg mov (bad) pushf and cmp push ljmp jp aas sbb push scas and jp es (bad) ja andl sbb mov mov or xchg sbb jne add push jp fstps out lret stc and ds adcb push popf push je (bad) lock push jp lahf push aaa sbb xlat push popa and cmc rorl cmp mov imul xchg insl jp ret xor fcmovu mov mov movsb pop mov sbb imul jp mov ss jne mov idivb (bad) test (bad) ficomp iret bound xchg xchg jns adc mov lret jne aam dec iret push add insb das pop inc (bad) stos leave sti fs push insl lds add ja jo mov push ja sbbb les dec jp xor jmp shrl lea lcall push sub sub loopne cli cmp stos jge,pt bound mov xor shrl mov daa mov mov pop sahf sbb (bad) jp ret outsl mov xchg push mov loopne sub mov mov fcompl adc dec or mov pop hlt sti xor jp insb dec out movsb inc pusha inc pop mov iret int fldt push cmp pushl and mov pop sub add scas xor popa dec jp xchg sbbl sbb ret ss cmpsb lret pop test push push cmpsb cltd cmp jno xchg and xchg jno mov xchg dec ljmp call enter repnz clc and mov mov xchg dec popf adc rorb aas jp sub mov insb insb dec mov ja leave insw mov sbb cli jp scas hlt mov push jae jb (bad) aas (bad) imulb mov in push jle jg push ret and shrl mov fwait stos jmp repz imul movsb out in scas xlat test jnp in sub arpl stos repnz negb popa ret push xor es sbb adc pop xchg lods mov sbb shll or lret (bad) push stos sti push jo cmp (bad) insl stos loop int es subl data16 ja cli xchg loop dec cmc pop fnstenv mov sub push into loopne ret push (bad) ja mov pop test jno nop xchg lcall imul addr16 sub mov push lds imul jns in pop inc xchg jecxz jne xor pop mov negb jno adc cmpsb push aaa into jae adc ds mov clc ja inc xlat leave leave sti ret mov jnp (bad) mov aas iret stos jp mov fsubr xorb or movsl dec pop sub imul ret aas jno popf in stos es add (bad) rorl inc imul dec cld fist mov sti pop jg push inc iret shrb fs xlat scas loop mov sub je xchg lods push jp nop movsb push and xor popa add cmp test cli in sub add mov jnp xchg jg mov inc shlb pop icebp mov xor test jle insl jecxz jb jl jp inc icebp mov aas cmp mov jo int dec (bad) insl stos gs or xchg andl add xchg (bad) cmp negb push sbb jb add push pusha clc push or cmp dec xchg and ret sub cmp cmpsb xlat fdivl (bad) (bad) nop (bad) ljmp push movsb ret daa mov push add jnp stos jb ja jmp inc push rclb fwait push stos in out jle add add repz cmp pop jnp stos int sub movsb fwait ja out in sbb mov addb ret cmp fnop insl lock aam ja push pop out sahf sbb add add mov icebp add jae push test scas out add popa jmp cmp jb mov mov movsb pop mov cld rcrl and xchg cmp mov xlat cmpsl cs jecxz inc movsb movb fs and mov bound xchg fisttpll ss js cmpsb bound dec cmp movsb push fisttpl jne cli stos adc add jnp cld (bad) xchg cmc arpl lret imul (bad) out jp es shrl or icebp out cmp movsb jns jle insb out mov and ss adc pop or je push stos mov lahf imulb mov push jp popf push dec outsl fldt adc mov in shlb lret push pushf jle jo mov sbb jne dec and out das fwait sbb sbb into daa leave push es bound jno test add add fldt jp inc lcall mov sti fwait or jp repnz movsl lea mov push mov jmp clc mov jge ja jmp jp pop or push in shrb mov pop sti xor mov fmull or pop pop xor sub std xchg mov xchg shlb in lcall aad push mov jmp insl fstps jnp lahf push mov mov fstpt ds pop cli aam jb push cmp push popf aad cli daa dec in ja xor stc fidivl jge xchg pop inc add jne cmp push lock (bad) jae adc mov jne inc sbb adc xor jg jp stos mov (bad) cmp inc mov jno andb imul aas xchg xchg bound dec adc ja push lods repz cmp adc jp aas pop mov (bad) dec jp pop cld insb stos addr16 or sub cli sub inc cld xor sub push bound pop aas cwtl jp lods xchg mov dec movsb or jp pop cltd repnz int3 mov outsb xorb cmp jecxz and shrb sbb jp inc (bad) aas push call scas cmp mov mov fnsave dec sub out and jno loop aas xchg and sahf dec jp fcomip inc xchg and pop jmp xchg inc stos enter outsl stos les (bad) adc jnp inc and inc js pop in jnp dec and jne jne pop and mov out adc imul repnz or inc pop aam jp lods xchg loope arpl lcall gs mov iret dec jp loopne addr16 adc mov mov sbb cmp mov ror lock mov ja popa aas jle (bad) hlt mov mov sahf aam ja adc mov cltd stos (bad) (bad) ss dec stos outsb sbb movsb jbe dec loopne or xchg ficompl dec jno or inc lock shll rorb dec mov cmpl insl pop loope aaa mov mov jp jne cmp cmc dec dec test inc jb pop add sti enter out shll mov jb pop cmp dec jne xorl and les push mov lods cs mov jp lock loop in das cmp jae pop lret (bad) jb jnp inc push push popl aam adc fildll mov cmp fs pop mov push jp fnstenv push lea ja cmpsl adc int xchg jno lds xor adc pop jecxz dec fisubl push lods es lds jmp cmc pop pop mov (bad) gs out xchg xor sbb (bad) lea lock mov push je (bad) ss sub iret add add dec outsl mov cld and mov jnp lods sar je cld addr16 je int add mov cmpsl xchg fs mov jp or in pop pop jp jbe std mov into pusha pop jnp je dec xchg pop mov sbb or adc inc dec clc arpl into mov sub lea mov mov sub popa stos xor (bad) (bad) jne sub mov sbb dec push push jl cmp push outsl jnp stos fadds icebp or fcmovne (bad) jbe jb xorb sbb addr16 sub cld xchg mov xchg (bad) insb and out push pop push push adc lods stos ljmp sahf in lret sbb repz cwtl add scas stos mov xor pop adc repz bound cs and push jg jns sti out cmp out (bad) jae int3 add iret push push or stos cltd or mov popf jp stos add push jns cmp mov jbe (bad) mov cmp jns mov add push sub jp gs ja cmp dec dec repnz fwait jmp sbb sbb jmp aas dec call (bad) xorl insl cltd fnstcw jge jp les xchg lea movsb cs lret push jp xchg xor inc xchg pop and dec icebp sub jp (bad) xor negl sti dec xor stc hlt mov xor pop fcmovne cmpsl movsb mov pop mov repz or or jle sarb mov xchg arpl xor push lock out dec sub pop ss sbb jp test repz adc outsl repnz lcall mov js dec mov jmp ljmp mov (bad) mov pusha sbb mov and (bad) jnp push andb sub jle inc jp mov je and fdivr cwtl dec sub ret mov xor aad loope xchg add fisubl dec daa dec push jg mov inc sbb jle mov add jecxz pushf imul sub mov sbb mov xchg mov jge add cli pop jo and add and mov test adcl mov jp xlat pop and stos out lea outsl daa dec das xchg mov fadds in push pop sbb jp arpl dec in lods add sarb sub jb push call movsl fnsave jp clc jmp and es or mov aas sbb xchg (bad) mov leave dec jno aam jge mov popa add loop lret jbe movsb cmp sub add sbb mov mov cmp inc stos or faddp pop mov and jmp cmc dec mov (bad) cli pop test dec stos add js sarb jbe (bad) dec in push (bad) stc outsl movsb dec dec mov imul in sbb mov rclb cld nop mov push push lret adcb cmp xchg jnp dec imul ljmp jbe mov inc jge ds jge mov sbb sub movsb aaa or pop dec cwtl (bad) dec clc add jo shrl cwtl push stos jb or jno push push sbb imulb lock inc and sbb fisubr mov pop lcall push imul jae push orb int dec orb imul cmp dec dec cmp icebp push pop xchg pop jp pop faddl dec sbb add icebp loopne push ds xorb dec or cmp les into fwait jp or sahf gs jp xorl adc inc mov adc push push xchg stos mov clc imul jb mov cli int3 adc outsl std sti shl out jp pop sbb inc jae pop fdivrs loopne hlt sub movb mov cmp int imul fyl2x inc mov push add pop fistpll mov push test or jge stos outsl inc insl out fnstenv cmpsl cmp (bad) stc lods add lahf out pop shlb mov jp xor cld jp mov add push mov push mov jmp mov xchg pop sti flds pop aas cmp inc ret mov popa in xchg clc sti mov popa rol jae push adc dec cli lahf mov pop test adc cmp dec add sbb push push sbb push cli cmpsb in sub cmp stos test arpl addr16 dec cs adc xchg pop outsl movsb lods enter insb sub xchg movlps xlat cmc fs mov notl sbb (bad) mov mov mov scas fsincos or xor in sbb mov (bad) movsb sub pop ficoml push movsb xchg sbb pop sbb pop pop subb sub les jbe gs add ret mov cltd decb test cmp inc movsb pop cs call jne pushf fucom cmpsb imul stos pop lret xor sub and das or xor cltd push inc aad lock pop adc dec scas add or js cmpsl das add inc shrl icebp add loopne cmp pop add pop sub stos das sub sub add loopne dec shrb movsb je mov mov ljmp lret loopne cld xchg jnp ja fcoms popf stos fwait lock mov sub xlat mov outsb mov xor movsb adc sub mov stc clc fcoms aad fmulp stos jnp adc jnp jae or popa stos stc dec ret sub ss cmp jnp out add pop imul int inc inc andnps xchg push mov insb addl fnstenv imul cmp fldcw push cwtl ja bound cltd enter int sti fucomi and xchg and clc fildl pusha mov dec cltd aaa and andb or sti push stos les aas mov adc cmp adc push movsb popa push add xchg xchg mov push mov adcl jne add add test jg jp pop mov fistpll xor or pop fidivr (bad) cli mov sbb cmpsb adc sahf jns cmp xor popf pop cmpl aas mov push (bad) xor add data16 push cli sub rcll xchg aas mov imul jns std and mov cmpsb and arpl test sub xchg sbb push mov or sbb imul repz mov xor add ss clc popa inc movsl jp imul push mov adc test add jp xchg sub imul out jns sub repnz lds int3 jnp dec ja jp inc ficompl cli loope js mov rorb sahf nop inc add dec inc push pop fsubl sti repz and jp cmpsl (bad) jg push (bad) or sbb xor mov mov inc fimul jno inc (bad) ja lret add jl dec lret aam jae nop int cli clc push fimul jp pop popf negl cmp sbb (bad) or cmp cmp stos pushf xlat aaa ja mov int3 jnp pop cmp clc cmpl fisttpl pop div mov cli xchg (bad) dec jg movl cli mov jp pusha inc dec outsl (bad) mov cmpsb stc shlb imul xchg adc sbb pop jne xchg movsb call es or jp push movsl adc sbb fistl outsb jnp dec in jae push sub jp cmp scas pmulhw movl mov inc gs dec pop mov mov ja lods pop (bad) jmp dec (bad) jp jne jno xchg ret mov sbb sbb cld ret push arpl jge ror mov jge lcall mov pop ficoml push xchg lret mov pop xor adc dec jmp xor dec jp mov mov inc sbb in fcoml xor stos out (bad) (bad) test out dec push clc cli fs dec jne ret pushf sti lds mov jp inc mov nop negb lret cs xchg pop jae mov xor sti mov cmp add sbb cmp pop lods es mov sub cmp pop adc adc mov sarl sbb scas pusha push adc jg cmp cmp jp jae daa push cwtl stos (bad) jno fucomip dec hlt cmp cs sahf aam pop icebp orb xchg dec sub add dec pop sbb out inc sub jne xchg shll scas pop sbb mov shl shlb adc xchg sbb repz cltd jo (bad) sbb lock cmp loope and cltd insb popa pushf ja xchg lods mov xor mov jp push rclb jns pop adc lds pop in inc inc sahf fninit jg jecxz jp call scas dec lret pop mov repnz pop cwtl jp fnop mov xchg mov inc inc out jp shrl ja arpl mov sub ss jae push pusha cmp adc xchg inc xor cwtl jae jno pop fcomps jle sbb push adc mov sbb gs fldenv enter lcall xlat int adc outsl sbb (bad) popa rolb mov push mov ret (bad) jbe jl ficomp (bad) js mov jle leave adc mov pusha cld sbb sbb jae inc lcall xchg adc mov fwait xchg adc and jbe sbb mov jle in push inc insl push or sarl pusha ja lret dec jne cmp into inc fistpl in pop dec es inc xchg mov mov pusha sbb lahf movsb adc adc mov push mov dec (bad) mov shrl add xor into and add jge push outsb pop lret jbe leave lret nop jmp jl xorb decb inc arpl dec xor out sti inc xchg test push jbe pop inc cli lret dec cmpsb or push mov push mov (bad) mov leave test scas or repz xchg stos push sub xchg js fsin sti sbb popa stos add jmp cmp push (bad) dec (bad) cmc (bad) sbb shr fisubl repnz scas xchg jl jnp imulb pop sbb std out mov gs cmp dec sub icebp cld es sti movsb push mov rclb mov sbb jmp and jnp int cmpsl sbb shll imul (bad) adc lret mov ret xor leave mov rol mov repz ds lret push jnp jnp inc push stos jnp add xchg subb (bad) fwait push pop xor push pop pop shrl roll mov (bad) dec xchg lds push sahf mov jg push push inc dec arpl loope fldenv jne insb dec stos cmpsl (bad) (bad) ja or mov inc std fwait mov mov jnp mov arpl push mov push faddl idivl fs xlat mov fcmovnu es jb and int3 xor dec imul adc lds mov inc mov scas insl outsl mov xchg in pusha xchg mov rclb jge pop into jmp cmp jp pusha push nop adc mov outsl mov and daa jg and pop push lock nop clc jno cmp jns cwtl and jnp inc not outsl imul and dec jp mov mov cmp sbb dec jle pop out and jne jge adc jg lret adc mov inc xor mov jp push (bad) xor cltd dec push cmp ja fidivl dec mov cltd pop sbb mov mov sti (bad) mov cwtl jo aam xor inc cmpsl push je cmp sbb xor pop dec inc sahf jnp or mov or sbb jmp xor negb mov ss mov jp pop outsb (bad) repnz or (bad) or lahf fstp push mov cmp xor das mov das (bad) adc insl aas mov daa xchg stos lcall pop test es sbb inc or dec call insb divb jne mov xor cmpb (bad) lock push cmp add pop jno sbb outsl test jle push cmpsb stc xchg adc cs loopne addr16 ret ret push shrl mov fistpll xor mov stos mov adc test cmp (bad) call dec mov lgs incb cmpsb inc mov scas cmp loope mov mov or cmc add mov imul jae fmull in mov and inc das jp cli jg repnz ja test jp pop pop pop sbb leave sub roll jno pusha pop lea clc add pop stos push enter cltd xchg into push sbb aas insb pop cmpl popa lret movsl shll (bad) cltd pop out nop cmp lods jmp (bad) repnz fs jp imulb inc popa mov cld mov jle pop and lea sbb jmp sub inc xchg es xor roll popa inc jp mov jmp dec fstps out mov clc jns dec push pop scas cs push loope pop push (bad) f2xm1 cli adc insl inc xchg adc push movsl jp mov dec sub (bad) fsubs enter or out fsubrp movsl lea jo (bad) or clc jl in pop inc (bad) mov push xor fdiv mov push loopne sub pusha sub mov scas mov adcl aaa xchg or adc in (bad) popf daa sarb jno cs xchg pop in movsb loope mov mov dec out test shl data16 daa cmpsl js popa (bad) movsl mov aam push cli cmc std push dec lods mov ficoml xlat push adc loop xor push aad sbb fs pop popa push ja or or jp icebp addr16 lock push pop mov or insl adc stos mov int mov jnp jge loope push insl push movsl dec cmp jo js adc dec jp jge stos dec mov cmpb test dec adc jp xchg pushf pop dec mov and pop pop rorl jne push push sti imul dec mov jecxz xchg pop jmp or loope sahf jp (bad) jbe cmpsl int xchg stc jp xchg loopne imul sub push mov pop add push fisub mov lcall pop stos push aad or fwait pop movsb adc mov out mov subb or movsl ja (bad) mov xchg mov mov rcll pop xchg adc pop push stos popa xor or into lea jnp and addr16 movsb repnz mov leave stos inc addb cmp push sbb test movsb hlt scas js subl pop sub movsb hlt idiv and fisttp cs test into das fbstp and jmp (bad) roll xor scas cmp adc mov jne inc pop cmpsl je and test lods pop iret movsb pop sbb aam fwait ja lods loopne subl pop mov cltd jp pop adc mov mov push stos dec imul inc push int inc stc push mov scas adcl pop xchg outsl movsb cmp jl (bad) adc push push add jle in lret repnz rorb sub iret jns stc test roll dec adc mov insb outsl push (bad) pop lcall pop rorb and pusha in push movsb test pop fcmovnbe repnz jmp xchg dec push push movsb daa jns test sub fs out or inc pusha fsts imul pop test out sahf mov sub in imul cmp pop jae popa imul insl enter pop jo push jnp test imulb (bad) movsb in sub clc push repz mov shrl int insl sub pop inc popa pusha fs daa adc pop sub jae bound push aad or mov fimull insl pop push mov ret or sub or arpl xchg sbb popa cli out inc pop inc inc push lcall out js mov cmc pop data16 jle jae xchg mov pop and push scas ss inc call iret push dec mov stos sub (bad) insb aas outsl je ret add js xchg ds imul mov push push dec daa mov push jb (bad) jno sub cli popa in inc js cs sbb scas clc sub mov sbbb add mov imul jle and mov (bad) pop xchg lahf fcomi or cmp hlt adc outsb movsb or cmp jecxz xor xchg inc pop jmp in jmp and add dec rolb xchg add inc ret (bad) ja adc xchg cmp inc xor lds jle jnp jmp out addb or xlat adc pop sbbl aas fcomps (bad) repz mov jmp stc movsb pop leave fs xchg stc loopne xchg jmp sub mov push sbb xchg lret mov jb gs dec insl idiv movsb inc sub xchg xchg and movsb dec cmp sbb push mov cwtl sub cmpsl sbb xor pop je out mov mov mov call loopne mov enter stc xor dec (bad) out aaa or stos mov adc negl mov push movsb inc jo stos jle,pn mov fsubrp (bad) je add sub out cmc sub sub ret xchg jmp call dec movsb cmp jge inc data16 mov push push lock inc subb mov in or and push gs cmp aad jbe jb lret stc xor fisttpl stos push stos mov and push pop and mulb cwtl lock hlt sub loopne rcrb fldt push sub imul mov add inc add sti fdivrs test sbb mov add xchg outsb movsb xchg mov inc jp lret (bad) cmp jbe push dec movsb sarl mov ret xorb popf lock ljmp ret xor cmpsb jp cmp (bad) mov lahf mov jae mov push sahf jnp rcrl test pusha push and jbe mov mov and jle pop orl push loope sbb dec sub push xor mov outsl icebp test lcall inc pop adc mov dec jmp popf and dec stos jne lock mov (bad) mov cmp jae jb jnp dec addr16 jno (bad) popa cs imull cmp jmp (bad) (bad) in loopne movsb xchg jne (bad) and or clc insl cmp jp mov cmpsb sub add jae lret mov scas mov loope (bad) stc mov (bad) mov inc fstl fisttpl cmp add push outsl addr16 cmp int inc aam xchg nop popa mov or lret mov mov sub (bad) (bad) pushf jne adc std into cmp push or jp jne adc xchg add adc push jno jecxz jne cmp out ret jne push popf push xorb sti jb rolb loope (bad) lcall dec sub or sbb mov lret sbb insb in in icebp int mov jnp mov xchg adc pop pop scas add addr16 lods pop adc ja mov jp mov push mov gs sub jnp add fcmovu lcall jp cli and xchg gs fwait push dec lret push sbb stos bound pop dec mov jp in push jmp jp loopne dec push adc imul mov jne and pop or ljmp jne jno bound pop sbb xchg cli push xor mov int3 xor or mov sub lret push int3 arpl imul enter pop loopne (bad) mov and out (bad) jecxz dec gs adc in leave dec mov jmp add cmpl std (bad) mov into dec xchg test std inc mov add push xor (bad) ja sbb cltd jge add aas inc push fild jnp jnp or rorl insb ret push loopne call divl jne gs sbb push mov push mov lret movsl sti int or jle pop das jp or mov jp fldcw mov into imul sub push cmp and sub cmp inc push (bad) rep gs std imul std jp pop push pop xchg sbb jp xor into negl jp xchg dec add test xor mov or jl adcl int3 pop cmpsb or sub (bad) pop xchg cmpsl out inc sbb enter ss mov jp pop shll xor cmp jns repz adc cli ret fstl jp shlb mov pop aas outsl add loop jmp test lcall xchg jnp ror push subl addr16 dec stos das mov cmp loope popa push jns iret into and sbbl out (bad) arpl out mov lcall fs adc jp rol decl pmulhw negb add sub push jp test popa xchg mov imul sarl (bad) jp lods test sub int jns jne mov add test ja pop inc ja jmp or popa inc jp jmp imul or jb add lcall imul lock jp punpcklbw dec sar cmc fs pop shr adc loope jnp mov in dec jne and std movsb fistpl aaa inc shlb dec (bad) int push cmp inc inc sbb push push lea push loopne add int ss inc push lahf fidivrl dec lods xor jp lea mov out test xchg pop fisubr ret mov or mov jp out (bad) fdivr and insl scas jbe jg lcall aad adc add lret jmp (bad) xchg mov shrl and or jp jle mov cmp fnstenv bound xchg jp jmp and jp mov jno xorb adc mov push dec adc orl xchg or addr16 xlat mov arpl or jp jmp sub or mov lea dec sbb dec call cmp enter rep nop adc inc sub sbb xchg mov push imul add std int pop cmpsb jp out dec push mov lret push fbstp jecxz rorl cmp sub adc ja andb dec leave or insb fstpt bound ljmp jp fdivrs icebp lea stos rorl jp sub aaa push jp cmpl jp insl addr16 out jns jp xchg ret jp mov jne jp sub cmp jl mov and pop adc mov push (bad) adc popf jbe fwait mov lcall rol pop imul add and nop jge sbb xchg sti lock push in bound inc mov adc push fdivl sbb push sub xor pop or aas inc push test mov out xor and sbb sub or sarl jnp fcomp sub in mov inc cld mov lret inc icebp dec jle hlt es call ret cmp jp dec sahf adc jp (bad) lea jp cmp jp add stos lret xor add shll jns jb loop cmp stc call and pop mov or push xor jp sbb les xor and cld pop push jae jne (bad) mov pop adc inc adc mov lret sti xor aas je not and (bad) stc mov inc sbb jb and arpl pop mov adc sub movsb icebp add hlt jmp nop fwait sbb jb or lcall jp popf div (bad) cmc std sbb or loope cld dec pop fwait cwtl jne pushf pop mov pop jo and jge pop ds fwait mov js cli cltd fdivrs adc in into cmp lods jp bound lock and enter jg inc das dec cltd or pop jmp sub jmp sbb cmc xchg out xor sbb dec push (bad) mov jp mov incb out jp mov cmovp inc fisubrl test and icebp add (bad) push mov clc adc fninit test push je add aad (bad) mov sbb ja push loope and jno icebp jb cmp or or sub rolb pop dec jp lods xchg fsubl cwtl mov or mov (bad) mov or cltd or mov mov (bad) mov or mov inc addr16 stos insb mov jl popf cld dec mov into arpl (bad) sub aas xor cmpsb in cmp insl (bad) mov jp andb or pop jp mov or out jp xor mov in repz ja movsb jno push test push mov push pop mov adc das in lcall cmp pop xor jp push pop sbb ret aas mov (bad) xor arpl jnp pop insl mov mov pop and mov jmp cmpsb dec add cmp sbb sub lcall insb (bad) fistp jbe jecxz mov pop xchg stos fwait js mov push in add divl gs es jae test dec or es sbb xlat jp push fcompl jmp fdivs dec or popf push in bound ljmp cmpsb push mov cmp push and push sbb mov dec rolb gs outsl or pop mov mov ret jp test mov jae popa add loopne pop outsl addl jnp pop aas mov and lods dec jp cs mov es mov xchg jne fisubr mov pop ja jbe jne in clc sbb sbb xchg jp mov push and and and cmp inc gs add cs sub push leave jp ficomp sbb xchg loopne ja orb mov (bad) outsb sar push xchg cwtl pop icebp aad lcall push cli arpl mov push clc add pop cmpsb (bad) lret das test add and adc incl (bad) jp int push add sti mov jno (bad) xor cmp xchg jp and inc gs roll daa lods sti scas popa nop sub in pop or sbb lcall jnp fcmovne movsl iret in adc ds xlat push push push jp pop jl sub aaa dec hlt mov jae jns pop dec push enter cwtl mov push mov inc lcall ret ss push cmpsb jle ja dec mov test fdivrs mov inc (bad) push cmp mov sahf aam or push mov jecxz outsb and push out loopne fdivr or mov in iret mov in sarb clc xchg jp rorb mov mov jp lret or fdivrl dec xor inc ficomp xchg jp mov js dec fs daa jp lea push xchg inc ja add fcomps addr16 xor out test fs and push jecxz add mov das scas es dec pushf insl lds imulb xor sahf jnp cmpsl mov enter pop pop gs scas je or outsl or xchg fiadd adc neg (bad) push and jp inc jmp out jne loopne lds popl fcoml jne pop cmp cmpsb push jo (bad) ja jbe jb xchg lret movsb cli pop fcomps hlt jne dec inc aaa mov pop fwait jp out fist push add mov orb jne in in inc mov lods add sahf popa and stos jno clc mov jp mov mov insl xor stos push jge jg pop pop cltd fimull ljmp imul sbb sbb mov jmp loope xchg loop hlt inc daa imul sub inc mov jb ret jbe out dec adc xchg push inc mov sbb and mov shrb lret pop pop pop jmp test push mov fmuls jb rorl mul and insl ret cmp data16 dec jp jl in inc push pop jp cli inc insl mov clc xor loop mov sub pop scas shlb cld sarb jp sub fnstsw cmp dec push scas cmp sbb call push fucomp jp mov xchg inc jno data16 loop push push insb jae xchg pop cli dec inc outsb jo rcrl fimul xchg mov stc pop lcall or cmp fistp mov mov stos stos jne xor mov repnz jae pop and mov and jl (bad) repnz imul xor sti subb pop outsl lea push enter and push sbb lock gs inc cli inc stos in pushw cld not mov cmp jle dec aas lds clc pop push gs xlat arpl pop inc cmp test inc inc mov sub (bad) stos das dec jnp mov insb jecxz,pn call popa adc dec out jnp adc rcrl sbb inc inc pop xchg pop ss fs push imul mov mov insl (bad) fcoml iret cli loop inc and jbe popa ss pop mov adc pop or lcall jne dec movsl xchg inc jnp sbb inc xor das test push clc sub xor mov enter jmp popa push int stc lods negb and addr16 and ja outsb aas jp xor shrb jecxz fisttpl data16 cmp push mov (bad) sti scas lahf in jbe,pn sbb or jb adc incl imul pop jne scas mov sahf mov sbb jnp (bad) jbe leave imul cmp aas mov repnz cmpsl outsb imul mov xor xor lahf imul xor add jnp testb jp mov pop push popa aam jg jp (bad) sbb das mov sbb jbe cmp jge push stos mov jp pop (bad) loopne pop push or adc leave jmp dec jp mov jp lret movsl (bad) mov in sbb les in mov movsb std (bad) lcall lret xchg loope jl mov adc dec das pusha jp add jb push fdivrl dec es or nop add mov out mov mov pop or lods (bad) clc ja stos aad test jp and clc sub pushf bound pop stos adc xor sbb jnp (bad) cld cli rcrl jp int3 out add jne test mov or jle aas data16 or add arpl dec xchg sub lea and sub mov sub dec fdivs ficompl movsl add or push xchg xchg incl je jp mov jle sti dec enter (bad) adc outsb or mov sbb inc jp mov int jecxz sarl call xor pop adc push pushf xor jp pusha lds sub icebp rcr mov std mov dec mov sbb insl xor adc mov xor cmp mov xchg pop jbe and xor js xor ds jnp jle hlt ja (bad) shl cmp mov inc and sub xchg sarb push jg,pn push cmpsb jp pop fucomip dec and cwtl cltd lcall mov decl ja mov fsubrs dec adcl hlt jp and xor movsb push addr16 lods lds in mov sub rolb stc sub idivl adc (bad) je mov mov clc jnp lods cmp mov jnp fs mov arpl jp dec sub pop push mov jp mov push dec jp,pt ja mov lods and leave in ljmp cmp mov gs fnstenv cmc jl push jnp inc fwait push test out lret or jp add (bad) cmc mov ret push sub jne rcll cmpsl fwait pushf aas jp xchg mov jno dec clc or cmp cmp (bad) pop insl mov fidivl loop scas loopne xchg jnp nop lods loopne jmp xor lea sbb test out adc inc mov jecxz out mov iret sbb mov pop cmp notl cmpl pop jp es aas imul dec jne fisttp jp jae pushf cmp and sub push jp push mov addr16 mov jo or cmpsb fs cld mov (bad) jae je dec cmp test sahf sbb fwait (bad) sti or adc pop je cmp movsb jns jle pushf movsb aad cld add xlat rclb mov xchg ja insl mov xor add iret xchg sub or pusha rorl dec xchg lods sub mov push stos lock andb add mov push aas dec fwait cmp stos test push sub hlt adc pushl adc pop (bad) jne enter sbb out cmp pop push js lret (bad) mov mov (bad) aas movsb push push adc sti sbb scas imul and jecxz sub jl call movsb out faddl cmp inc or sub loopnew cmc testl arpl lods ret imul imul jmp push sbb jl push cmp sbb add sbb in jmp mov or fistp je push test jb inc fisubl and lea adc pop push cmp dec sub sbb lock add rcrl pop sub xchg mov cmp or bound (bad) dec leave fistpll dec lea mov cmp add lds addr16 leave test add xor imul inc xor dec scas sub or jns and inc loop sbb sbb cwtl (bad) jge push lahf pop cmpsb push cs in call pop jp xor shrb sub (bad) pop or cli (bad) out scas pop mov jp bound jecxz (bad) or jp dec lds mov sahf xor mov xchg hlt (bad) mov push clc fwait aas jp or mov xor sbb lcall idivl cmpsb push int jp ja or sti mov jp sub popf jecxz int pop mov lea sahf cli (bad) movsb loope mov cmp in dec mov imul inc jno sbb cmpsb jp jecxz,pt adc dec jbe adc add fcmovnbe dec mov cmc (bad) ljmp add pop cwtl arpl mov pop and movsl mov pop jp add movsb fstpt cmp mov push xorl cli pop pop mov in or test mov or stc xor mov test js mov shlb scas fstps and imul loope sbb push lcall dec cmp lds js sbb sub adc cs pop mov (bad) ja (bad) cmp mov fldt insl xchg ja stos mov mov jge std xchg stos mov sbb and stos std jb lea cmc xor dec imul int add pop lcall inc jmp xor clc mov imul inc mov push movsb xchg jle clc (bad) (bad) popf ja mov into xchg jge sbb xor outsl mov sbb das outsl xchg xchg (bad) mov mov insl (bad) jne pop je dec out movsl lahf sbb jne pop (bad) mov pushf xchg cmpsl push mov sub (bad) jp mov jp sbb imul mov das or and (bad) pop adc fcoms ret add pop cmp mov jb pusha mov stos fstpl mov daa add popa cmp jecxz push jp mov xor xchg and mov int3 or clc sarb cmp push (bad) mov cli jne int fist lea pop popa cli push loopne clc adc mov pop jns jecxz daa (bad) mov mov popf sbb jp jle pop scas fnstsw stc (bad) jmp add xor inc test xchg jnp pop aad push push lahf push ficoml cmp loopne xchg ljmp jno (bad) (bad) push xor mov fdivl icebp mov cld and pop xchg dec sub jne dec jnp mov mov or dec dec jae mov jp xchg jo (bad) jp fscale cmp jp mov sub mov pop sbb fs jb mov jbe test mov hlt out or aam pop pop sarl clc mov cwtl fildll call add imul fbld int sbb cmc xlat jp add adc lret out jp lods push mov xor jns ja (bad) mov pop jnp jne outsl sub mov loop decl loopne sub fmuls sbb rorl dec mov or add xchg repnz inc add xchg dec sti and xchg jno (bad) jmp sahf out (bad) mov add cli in mov scas cmp mov clc sti dec je mov std jp stc mov inc (bad) sub cmp int3 clc mov (bad) jae and mov adc mov int iret sahf sub sub inc (bad) cmp xchg icebp jp xor xchg jp cld cs xor pcmpeqw inc xchg sbb cmpsl mov into ljmp loope push cmpsl insb jp pop fmuls int3 and sbb inc push xorl dec flds mov mov and stos stos pushf dec sbb (bad) inc cmp sbb jae movsb lods es xor cld push shrb inc sarb sbb out rolb push adc cli (bad) stos lret dec push outsb xor fcmovb push push xor hlt sub add mov dec sub andb or out loop or inc or test inc call gs add mov in sbb pop lds push stos arpl adc enter addr16 inc dec inc cmp mov and sti mov mov jo in jle icebp and add enter repnz aam test push sbb sub int3 lea or lret mov scas insl data16 jae iret sub jno jo out jge (bad) mov and stos addr16 cmp insl (bad) lods aad ja mov mov sbb xor lock jb xor inc add ja sete clc nop sbb cmp sti ljmp sti movsb gs pop pop int sbb dec ss or add mov stos leave cltd fdivs mov out stc mov cli or lcall lds repz lret lods cld lret mov xorl aam pop out or sahf adc stos iret push or xor pop stc jp push mov sbb add inc or insl sub fdivrs sarb aas mov hlt jne in test popf jbe fwait je addr16 push jmp xor lods popf push xlat lea movsl and in jp jo pop and shll fdivrl aaa nop pusha loop pop gs stos into xor fwait jae,pt ret hlt int out call jo jp fldcw jnp test xchg dec fs loopne jnp sub add into jp pop push xorl push and jp shll add mov cmp add mov and jae les jp or cmc scas mov sub jmp sbb pop sbb dec sub aas out cmp sbb mov in (bad) cli lods pop sbb adc jo lcall in loopne push jg lcall mov (bad) icebp imul mov fldl in outsl bsr shll jl bound xor or jnp add cmp xor adc cmpb in cli cmc fcomp mov jl adc loopne shlb adc jbe pop stos ja insb sub xchg fdivrs fnstsw ret push xor xchg or dec inc test push (bad) dec out (bad) scas xchg add movsl xchg mov push jp or je push pusha orl pop pop aam pop cwtl jp inc adc imul (bad) jne mov mov cmpsl xchg scas or loop (bad) das pop pop ds jno pop mov mov jns pop repz cmp popa jecxz gs and (bad) cmp daa jp pop or sub popa js cmc lret cmp faddl push or les inc cltd mov mov je pop xlat add jne (bad) sub jg aas adc push and (bad) in inc popf jp rolb push (bad) sub jae ljmp inc jo ja or lcall into jmp fs insl pusha jae pop jmp fdiv pushf add pushl pop popf push mov inc (bad) jno iret push jp sub add or popa (bad) lahf lcall cltd fistpll mov pop adc mov pop push insl lods push loope jae jnp in mov mov lock or aad mov test cld fwait into jp sub ret imul pushf inc xchg shr cmp xorl and jp cli aam iret dec inc test pop push dec jnp mov pop jp int cmp ror les popf add stos nop inc dec ljmp ja test fimull inc mov xor mov test pop shrl outsl add jne or pusha push and cmp jle dec push sbb xchg cmpsb jp in inc mov arpl mov adc mov scas sub pop cmp jmp (bad) jne test pop xor fcmovnbe lds aam and dec imul dec cmp sbb ret push fistpll sbb mov fstps or cmp jg jp test push xor popa jl lock fidivl add (bad) fs and mov sub xchg sbb iret int or out fidivrl in out mov sbb imul mov sbb (bad) popf xchg jge subb push adc (bad) pmaddwd xchg fcomi fimull stc push int cmp cmc (bad) mov ja lds mov fistpll in int3 lds call rcrl insl outsb xor lds movsb push adc imul fiadd fwait fwait idivl repz je jno ja call int xor sbb inc cmp jp push pop xchg mov mov fdivrs xor leave cmpl adc jne ficomp outsb add jp cmc sub test (bad) xlat ret sub jp jle jbe stos icebp sbb dec jb jp lcall jp aad iret mov jae (bad) clc sbb icebp cwtl fisubl push into jne mov dec aam xchg adc sbb mov push fstpl int3 jmp sahf pop sarb je xchg xor jb sti mov mov xor je js dec cmp cmp dec jo std rclb cmp inc movl test or in repnz xor jg jnp lods xchg sbb lds leave in jnp xchg lret insl stos (bad) jmp stos push cmp ss jne pop sub inc outsb (bad) fidivrl sbb push jno fnsave jae push cmp and jp in popf xlat push stc mov lret inc sub inc xor mov jp pslld push pop cmp mov push cmpsb pusha xchg inc push cmpsl int rolb jnp mov ja inc pop enter mov ror mov dec js mov (bad) fisttpll popf aam sti lahf loope push sub pusha sahf sub pop pop jle and (bad) inc mov imul dec nop and inc push fstps lret cli dec jp mov mov adc lods mov inc aas jne mov jp mov mov pop hlt xchg outsl ja stos (bad) pop jnp sub fimul jp mov daa add cmpl mov cmpsb in je pop dec xor cltd fwait je divb jbe pop fstpt movsb iret test popa leave jge pushf jp jle repnz jp shll mov sar jge in sbb push or cmpl out loop xchg mov cli cmpsl and dec std mov lods cld jae adc cmpsl shll cmp jp fwait mov cmc lret push pushf jp cmp jbe xchg insb insl push push popa daa push push enter inc enter ret push cld pop jo lret push lret in (bad) mov mov fxch xchg or jae jno inc cmp stos mov xchg sarl pop push xlat test out sbb jbe addr16 cmp lret stos popa outsb add movsb (bad) pop dec in shrl or loop dec fwait arpl lcall hlt out loop outsb and lods sub aad arpl xchg xorl pop mov pusha fs popf fimul mov stos inc xchg cmc sbb gs pop pushf xchg aaa mov test imul stos xchg fist or cmpsb fisttpl fistpll out insl faddp jo push or xchg mov inc movsb xorl mov addr16 mov jb xchg sub lods outsb aaa pop push hlt jb mov pop jne mov int3 daa xor mov xchg mov enter or jl inc push sbb (bad) cmp pop nop scas sbb sbb out xorb into insl jb cmp push (bad) mov arpl add mov cmc pusha lahf xor lea cltd lods (bad) fstpt inc insl push sbb inc pusha sbb xchg or push dec sbb jne lods dec or jns jne outsl into xchg stos jp and jno cmc aam pop xchg sbb fmuls jp add mov add into movsl cmp (bad) fldt cwtl sti pop inc xor xchg sbb stc stos ja loopne sub xchg sub jp loop dec jns adc sub enter push cli and loope add adc jbe sbb int xchg push fnstenv ja jecxz jg mov aaa adc icebp add and cmp data16 sbbb push cli nop fs mov lret (bad) jno mov sub pop jp fld inc outsl dec cmp inc inc mov sbb pop lcall stos xchg out push arpl add inc (bad) pop add sarb dec cmp mov shll mov sub jp insb lock sbb and outsb sbb popa test dec add cmc lock mov out dec ljmp rcrb inc jnp cltd stos dec cmpsl jp inc mov xchg sbb sarl mov scas mov adc sbb adc mov and cs popa mov lret inc icebp es mov inc mov fwait stc mov jp dec xor adc dec cmp aas (bad) jb push and roll imul outsl cltd js add clc adc mov jnp out mov and notb push jle loopne and add repnz repz sub jne aas xor add jp dec test pop jne push popa xor sub gs jnp pusha adc xor pop xor add subb data16 jl and xor sub popf push imul pop adc jg lret jp lods clc inc xor pop insl negb sub ret mov (bad) pop in mov dec leave stos push jp pop gs das push mov ja fistp jmp jg add xchg pop dec cmpsb sbb ds pop jp jns jo inc lahf lcall mov jne xor mov sti out jl imul mov ja or cmpb ret or in jo in jp jg popa xor jae flds dec or mov push dec jno sahf imulb mov imul clc out repz mov mov fcmovnu xchg setae pop (bad) add jno push add fbld jp imul aas dec fnop icebp and out push ret loopne xchg or test sub stos jp nop rcrl xor je ret jl mov sti cmp sub inc aas (bad) sub sub sti cld pop movsl jns (bad) lock push lret icebp sahf jnp adc mov in sub pop pop ja xchg lret scas out cmpsb ljmp fstl rcrb mov dec loopne das jb jp pusha xchg pop cmp jb sub dec (bad) bnd mov cs mov cmpsb lods (bad) cmp and mov jp xchg (bad) jno mov (bad) repz sub sbb jnp cmp xor psubusb cmp fimul jmp dec gs pop loop cmpsb cmp xchg inc cmp (bad) sti dec jmp rorl adc aaa or dec push (bad) mov jno stos (bad) fisub mov jp add lods xchg xchg in sbb jno pushf jne jae test sahf inc sbb gs or xor (bad) jmp imul xchg jne mov jmp mov cwtl fisubrl or insl int3 mov lret cmpsl or cli cs movsb sub in loope xlat dec test rcr xor pop push sbb jp xor aam aas dec lcall jge inc or sti pop jp out cmpsb cs loopne push pushf aam mov cmp and and and jl into mov add aaa and ss adcl es sahf popf in inc loopne xor jl into xchg shrl lret jp push add (bad) xchg sub int3 pushf jmp cli jns cld imul xchg ja sbb shr push inc sbb cs xchg pushf aad pop cli ljmp mov push aas mov jnp pop arpl adc stc mov pushl xor adc js xchg call ficompl add std icebp ret mov mov (bad) repz jae cs (bad) je pop mov jne test xlat fwait int3 out dec cmpsb cltd nop pusha aad mov mov xchg in fiaddl and iret jo push jno jo pop stos push (bad) sub inc lcall and jno pop sbb and mov ret dec in (bad) (bad) test dec insl dec mov data16 pop jbe mov (bad) gs insb (bad) fimull jp inc sbb into (bad) sarb cltd lcall sbb jp push cmp dec and orb lret sbb dec jp insl jae mov repnz out pusha push sbb imul and inc clc sub clc int in add rcrb mov (bad) mov sub xchg jno sbb jp mov fsubrl stos and into jle push mov arpl ret add pusha xchg (bad) popa flds in aas mov or lcall jo je jnp mov dec push test add xor shrl orl sbb and pop cltd mov hlt pop std jg data16 jp sub insl jne pop dec mov xor adc jp add xorl jnp ja arpl push lcall cmp mov jne push loopne add icebp mov jp jae lds popf xor arpl fldcw sarl loope sti fnstenv imul jnp out rolb xchg loop ja dec fwait adc add mov daa stc mov sub aas aam ds sbb pop iret es or mov jp sub fwait pop sti stc cmp (bad) addr16 in es pop sbb gs mov mov in mov hlt add xor je out lahf aaa mov jg lcall test sub xchg xchg rcrb add push stos jp imul ja aad jno out or jne jmp stc jnp (bad) xchg or iret daa sbb popa movsb lahf mov xchg nop push mov ja popaw test repnz fstps push rcl lods pop cwtl dec (bad) jb jp mov pusha in xchg jge fwait jbe or and icebp xor inc mov pushf shl fsubl stos mov mov vorps imul stos mov mov sbb adc mov jle in cmp roll cmp fiadd stos popa adc sbb aaa (bad) (bad) cmpsb arpl add cmp ret sub and dec enter repz pop pop pop dec (bad) fisubr mov dec cmp inc div ret inc in inc int and mov stos push (bad) lock fldt mov (bad) xor adc or sbb push mov jbe iret fbstp fisttpl add cs push sbb sbb insl push sbb aam arpl jne ret aaa inc scas push fs pop aad scas lret popa pop imul mov cmpsl or mov rcrb push in sub gs add bound (bad) add sahf (bad) dec imul or push (bad) dec outsl bound sbb dec (bad) push add add xor mov loop repz rolb sbb xchg stos add (bad) mov imul inc pop jbe je ljmp cs stos dec les pop and inc int fwait push aad jecxz adc jnp shl pop jmp rolb cli and std loopne cmp sahf shll scas jle mov int cld xor out push imul mull pop mov in fldenv push add (bad) push or ficomp jnp fnstenv push (bad) dec xor or and sbb loopne rcr loop mov sbb inc movb enter (bad) jp push movsb fcmovnu pop fmull cli jae cmpsb mov dec and cmp mov jp les lret pop popa jmp jmp jle sub adc popa jne push adc push inc xchg rorl pop jp dec mov ja mov add fdivrs int jp popf scas lcall pop cmp jmp fwait jnp mov inc mov inc insl sub mov movsb or sbb rol dec push push ret imul mov cltd fidivl dec fs pop jp and cmpsb scas out jl xchg push jp pop fistl inc sbb or fdivs call lahf movl aam jp lret cmpsb in ja (bad) xor dec mov stc jne out les jl cmp or xchg sbb stc gs sbb mov sbb jp movsl xchg mov jmp stc stos pop ja icebp (bad) mov jp sbbl sub mov or mov (bad) push test sbb mov xor mov hlt (bad) (bad) mov push cmpsl jnp jp sub xchg xor nop xchg jno sub mov pop je bound sub fcomip mov pop in scas or fsts xchg and cmp dec jmp mov std dec cli jnp inc xor insb sbb jae movsl jl sbb pop mov adc push push leave mov out (bad) xor jo imul adc call (bad) (bad) idivb adc fstpt mov stc mov push cmp mov insl jp loope andb lahf jbe push sub scas jp add xchg mov push pop aam or test xchg cld or repnz jb leave mov cli lret fidivr or pushf lock mov mov push jne dec sub imulb (bad) xor rcr jle lret sti push and fistpl push lret shlb fnsave xchg push pop xchg lahf insl mov sub add jp sbb stos mov jecxz cltd pop enter and fnstcw add jns clc mov sbb out repz arpl pop jp xor (bad) jne add out les shlb push (bad) repz adc loope cmp rcr adc (bad) jnp out lcall xchg push jp xor dec clc fwait push dec mov stos cwtl fdivrs lret rcl popf ja xchg inc es inc out ja lea pusha xchg or loop (bad) fstp ja jno pushl sbb or insl repz inc mov jno push bts scas push pop loop es nop cwtl pop popf and out (bad) jmp inc lods jp push repz jl xor pop and jl mov in jl in mov sbb sarb out test jecxz sub jp sub add out rcrl jp fdiv lds and mov mov mov push stos aam push sbb cmp pop push mov jne adc pop fwait push dec pushf test jae fnstcw cmc mov xor mov mov lahf test fcoml shlb jecxz mov sbb jp packssdw xchg or outsl push jmp pushf mov test out jp sbb lods xchg mov pop out shrl mov movl push enter insb (bad) jecxz fs rorl jmp mov imul cmp push imul call lods jp cmpsl ss push data16 adc jp fisttpll fs lods arpl xor dec or ja outsl jmp sti enter daa outsl mov fisubr pop push stos dec lret jp push and dec push and or jp mov push loop fidivl add jae push arpl (bad) test mov sbb mov push pop jp inc insb out xchg and icebp jb (bad) arpl mov cmp cmc inc pop loop xchg xor push sbb sar jmp addl (bad) cmp cmpsl sub ja mov wbinvd adc add or bound dec daa lea cmpsl adc sub imul scas aad adc fdivl inc mov and fldenv jp insb and cmp jae ret xlat jp cmpl cli in outsl fiadd addr16 int arpl daa sbb or mov cli ljmp mov pop cmp pop xorl or jo xchg cmp cmc lret cmpsb xchg mov mov out mov pop outsb in xchg arpl dec mov mov mov mov mov inc and out (bad) xor pusha aas pop xor mov cmpsb jp and jo ret mov sub lcall pop movsl mov pop insl out in mov hlt (bad) jg jg imul pop inc lods mov shrl push adc push cli (bad) sbb pop pusha clc lret gs adc mov ds inc loope hlt jae pop mov mov insl daa push pop (bad) in repz popl imul dec fmul mov or je and sti pop stos sub inc iret push ja stos pop loopne jnp or push inc divl ljmp cmpsb jae adc dec out and jl sub pop adcb sahf repnz mov jno pop or cmp jbe xor scas mov lret je lret pop mov pop and loope xchg stos call orb popa sbb jge jns into jb inc data16 cmp scas or repz in arpl cmp iret clc xchg dec rcrb jne push adc stos in ja inc push xchg xchg cmp outsl inc stos fsubl mov push pop sahf push jp push and dec jne mov inc and sbb jp dec addr16 mov jp fsub push xor outsl insl cmp pop adc data16 dec (bad) xchg jp repz loope (bad) mov test cld adc push sti (bad) sub rcl negb stos pop (bad) jae dec jp fisttp pop aaa inc movsb mov adc push lock push in jp inc inc lahf jl stos (bad) pop inc adc fs mov call mov fcompl fimull mov addr16 cmpsb jp psubusb adc pop stos imul mov popa or sub push fnstsw cmp mov loope sub xchg clc ficoml mov mov cmp mov hlt inc (bad) push jno cmc cwtl (bad) pop lret into gs es xchg add mov imul xor repnz jp mov arpl dec push dec jg mov jg cmc jp jecxz leave test jle jp daa mov and lods add repnz gs jno sub or push mov xchg scas and push xchg or mov arpl imul mov scas lret xchg lret leave test ss ja inc scas lcall movsb dec rorl fadd jno lods gs ja xchg mov and mov xor mov das adc movsb jbe jb jmp sub xchg inc sarb scas push (bad) push sti jecxz sbb cmp fistl or inc aad and pusha jp inc lods (bad) in and gs mul dec adc mov shll mov adc into push adc ja pop fistpl rcll pop mov jp push sub ljmp leave ret mov lret jge cltd dec sub add rorl adc adc mov inc into in fidivrl ficoml mov mov jp jns and push pop stos lret pop pop test mov sbb icebp pop inc xchg mov mov lahf jns mov int3 mov lods pop test and push ja mov (bad) adc cmpl cmpsl mov scas add add das sub or in inc mov jecxz sahf and loope jp cld and ljmp push pop cmp das clc jo mov outsl sbb mov (bad) dec stos mov or mov jb popa jp push pop jbe inc lret (bad) ja (bad) or pusha adc imul jp adc add mov and jb sub fcompl sarl push loope icebp repnz and rorl fstpt xor cli cs pop mov jns js mov xchg aas and inc scas repz mov dec and in enter xor lret add add mov aas dec les jbe push jp add popa jecxz push push imul mov cmp sbb cli or je pop xchg sahf sbb jp loop adc sbb (bad) sub loopne mov xchg jp or insl jp idivl dec cmpsb out sub mov ret jg jae dec xchg push repnz inc jp shlb sub jmp pop xchg jbe scas insl aas xchg icebp mov inc out sti or testb loope repnz jne cmp cli (bad) in jp inc and rcrl fisttpl mov jmp cmp shll scas xor nop jp jmp out into movsb lret jae mov jb add jnp sbb jp adc xchg jp xor jns mov fstps sbb fwait cmp or push cli dec imul loope adc pushf xor fdivrs jg lock jle fistpl inc mov enter pop or mov movsb shrb push mov push inc loope stos mov addr16 stc mov lret jne pop xlat sub xchg jmp gs pop xor andl push cmp addr16 pop jp ss movsl lea outsb dec push mov mov pushf test pop lds ds cli daa std dec ja lret mov outsl inc mov (bad) loop pushf mov insb (bad) xor lcall shl lds std sbb xchg push lods das mov inc push and or in jne mov sbb ret ds pop ja cmp hlt push add mov push mov jp or cmpsl mov xchg jp push push or fnstsw loop xchg enter jp (bad) fsubrs add jp rsm std jecxz insb jnp out lods ss xchg jo inc call lahf sarb int3 cmpsb jp fdivrs nop arpl add ficomp insb in les mov fistl pop sbb add insb sbb lock cld js cltd fsubrs mov shlb jp cmp (bad) cmp mov jne sbb test add mov add or std flds jo jl mov push or lock mov mov clc pop jp cmp data16 inc sahf adc das jo jno scas cmp jp (bad) out pop push callw lea lods (bad) xor stos in cmpsl jae idivb jnp cmp jno call sbb (bad) push cmp insb stos scas mov mov add push daa fdivrp dec ss dec and push mov mov popa scas cmp mov jg pushf dec jnp in pop sbb (bad) icebp lcall lret cmp (bad) sbb lahf adc mov cmp xor mov jp call jbe stc mov stos mov push sub jp mov (bad) sbb clc dec test xor jp jnp cltd ljmp cmp jbe (bad) in mov cwtl inc in push sbb gs and sbb movsb mov and jp js pop aam cmp outsl dec xchg fwait dec movsb jne mov mov stos sub xchg call cmp and xchg ljmp mov cwtl inc dec jp test xchg jno sahf jp clc mov loop xor out lret fcoml test stos test test inc stc sti je hlt repz adc jle insl and adc cmc and or ficoml mov inc loopne pusha arpl sbb mov sbb cmp (bad) insb xchg rolb xor mov stc mov out xorb push test jp mov sbb iret pop jae cmc xchg jp dec and push jg jne adc pop cmpsb mov gs jp loopne push xchg sbb loopne stc je cwtl lcall test (bad) mov sarb (bad) jmp jge aam popf mov mov xlat sbb add mov scas xchg (bad) ja sbbl dec out popa les push mov stos js inc lret scas mov lret sti int3 nop je std fucomip in test jecxz les cmp ret jnp fnstenv mov ja xor out aas testb (bad) mov out sub and mov mov lret jo jnp lcall mov jp testl in cld mov movsb dec scas test loop gs pop out mov jge in repz adc (bad) jae sub pop sahf cmpsb add gs popf mov xor mov mov jnp (bad) (bad) fwait (bad) pushf negl mov jge or push dec pop mov sti ret cmpsl xchg cwtl xchg daa jno imul push add mov lea (bad) sub jg xchg pop popa test xchg loope cmp jp dec pop cmp ss mov std lcall lcall sti mov popa rcl insb in sub fwait cmpl jp lret pushl out insl cmp stos fimul mov insl rcrb dec jge stc mov (bad) pop jecxz mov fwait jle and mov dec mov shr mov cld xlat nop fnsave jp and mov jp mov js pop lds jp (bad) iret sub mov insl pushf aad (bad) hlt adc (bad) out jp and jmp loope push pop mov (bad) ja push insb pop cmp mov sbb jne fdivr inc mov sarb test pushl jp (bad) int pusha xchg dec in inc je push nop mov mov insb cwtl xchg xchg inc cmp les jp pop mov jl mov push call mov jp das mov or (bad) mov loope mov nop scas cmp into fisubr or push mov xchg fnop mov dec mov hlt iret test cmp jp cs fstps sti lcall xor fidivrl insl pushf xchg push fnstcw sub imulb hlt scas ret pop (bad) pop jmp ja adc imul dec repnz adc fldenv jae and shll sbb mov ret push test subl push nop push push dec pop adc sbb movsb es cmpb add popa ret mov jae jns pop jecxz mov jne adcb pushf mov mov cmp and data16 sub (bad) mov adc ret enter out movsb xor dec cmp in mov lods xor xchg cmp push divl aam mov adc or add inc pop push push dec adc je mov int lods jae subl jo into scas cmp cld mov mov leave push fs or xchg sti xor call xlat (bad) sbb in mov je xchg sub cwtl test push test add jno clc push arpl int push cltd call mov mov and imul divb stos (bad) into jl mov pushf test sbb pop bound add out sbb stos add jno push aad sub dec jmp mov out mov and dec pop xchg stos imul lods lret stos push dec push xor movsb shlb mov lahf cmc mov out repz lret iret xor jno fcmove stos cmpsl adc mov std mov imul push out push pop (bad) dec fwait add test pop (bad) sub jmp aam mov into pop xor stos shld lock nop lock repnz jb fistl push arpl fs mov iret push dec or jb loope pusha in rcl repnz stos add mov rcll add jae push xchg data16 mov dec or das lahf gs mov nop add jg pop test dec cld lcall jne les cmpsb (bad) pop jp icebp mov add imul popa outsl int3 jno call icebp pop and shrb (bad) andl cmp pop adc add test into jp in out mov inc xor arpl xacquire mov and jg jp xor inc xor or jp movsl mov stc cmp lods mov jae inc xchg jno addr16 out lds jge and fs mov jecxz mov (bad) fdiv mov imul sbb xchg loop add adc jge imul and fcompl cmp movsl xchg jnp push mov ficomp and add aaa or and jp push clc push (bad) push gs and adc stos dec stc ret jnp cmc cmp adc and lahf mov orl loop je dec dec jp pusha call add insl xchg lods in out cmp cli xchg fstpt ljmp insb cltd adc lock mov jle inc sub dec jo insl (bad) inc sbb and jmp pop mov bound xor lock sub jge sbb cmp ss loopne fmuls jbe or lds lods inc jp add mov jbe daa das fcmovu jp pushf fmuls fistpll mov push mov xorl (bad) repz jnp or cmp in jnp repnz jge add and outsb mov mov jae jnp push and xor insl (bad) shrb inc jp ja call hlt sbb push adc push sahf or sti gs sbb jp lcall adc ljmp sbb add push inc xchg fucomi or mov imul rolb (bad) xchg mov fbstp jne je,pt aas movsb mov ja push push cltd popa stos dec hlt pop cmp mov jnp imul cmp lret test add repnz cs jnp pop sub jbe (bad) add ret inc mov cwtl jle or jb aam mov sbb fistl movsl jp or cs decl mov xor ja dec pop mov in or mov inc rclb xlat push aaa or jmp repz gs jnp out add dec sahf cmpsb ds sbb mov jmp arpl jp mov push cmpsl jg dec test mov ja dec and adc inc jle stc in sbb or call mov jp (bad) push bound loopne jae inc mov sbb or xor or sub push out je bound or sbbl insl test adc (bad) jno sbb aad nop and xorl inc mov (bad) jb sbb dec insl test (bad) loope mov test adcl push mov (bad) cmpsl and les shl call push pop out cmp jecxz cmpl out nop xchg (bad) je or cmp add cmpsl jp xor inc sbb and jne call mov jmp jge jp cmp repnz aaa ret jp and jbe jae movsb daa adc add xchg shrb jnp sub sub push cmp in jp (bad) lcall jp adc adc mov jo push lcall dec lods xchg das jp xchg jmp adc sarl fnstsw ja in sbb mov or pop sahf js cmpsb jle cmp aad je fstps xchg jp fmulp pushf jl mov sub mov jnp jns ss ja sbb jecxz add sub imul mov add imul sbb or or cmp jnp push nop jae dec negl lds fidiv jno scas daa adc ds repnz sub sti stos imul fimull in insl inc cli jno in into cmpsl jp sbb push (bad) sub fcmovnu mov scas add xor mov sti push xchg sahf in xor iret pop push jp pop dec push aad add xchg or and mov jecxz xchg dec cli jge (bad) cltd arpl xlat in das mov lret in cmp pop lcall push push jp out mov les jns stos jo inc fwait movsb in xlat ja or sbb jg inc jp dec out (bad) in je ret sub add sbb xchg ds ljmp jp test es aaa cmp mov mov dec mov push push clc (bad) mov js pop inc mov push jp iret stos dec sub in cmpb (bad) jnp loopne icebp ret xchg scas inc daa fdiv mov or mov cld mov ss fidiv cvtdq2ps jne nop xor sub inc lret cmpsl inc xchg loopne pusha shrb fimull pop lahf pop jns enter jp sbb int pop aad sbb iret fstpl jl out rorl cmp xchg fdivl sub subl pop add sbb push ret (bad) cmp and ja add fcmovnu adc pop aas jp das and push bound pop test pop pop cmp push pop xchg lods and jo mov stos imul fistp pop mov cwtl fisubrl or mov nop in repnz fnsave mov mov xor outsb fcmovb adc mov jle inc add or xchg popa jno dec sub fiaddl repnz mov jle jnp xor jne adc adc sbbl aam add push push sbb addr16 out pop pop aam mul in mov lret xor lret push push hlt fistpl test sbb imul adc pop (bad) xchg das cli cmpb push loopne or ss (bad) jg out pop aam mov jne fnstcw mov xor loop scas ljmp mov jl jae jne sahf (bad) pop jp cs bound sub mov lds jbe lock (bad) mov pop fisubr and push xchg bnd push push clc jnp divb jae loope xorl sbb repz fwait adc add iret aad in pop xor mov rclw pop imul cmp fs rclb sahf aas dec out and gs int3 icebp sbb inc out jp mov xchg rorl jg clc jae stc frstpm(287 rep cli add (bad) add jg fmuls xlat lcall xchg push xchg jnp (bad) rep jp pop mov lret addr16 xorl sub sbb push mov jp mov repnz hlt lods loopne push imul sub adc repz sbb jp ljmp jne pop xor add sarb hlt cmp mov jge cmpsb fildll (bad) push sbb cld xor lock mov mov inc and in ja push push sarb popf icebp (bad) std adc jp fistp add inc jecxz mov mov ja jo sbb cmp cmpl jns sti sbb mov imul pop stc sarl ret jp cmc ja je mov sub lret xor nop jp lds insb sbb add push push out xchg lcall movsb or add mov jns mov dec mov ret insb dec or in in mov cmp add fchs stos mov lds fs pusha mov jmp or add push sub dec movsb xor cmp outsl mov add jne popa mov stc out fstpt fnop inc int3 cmp mov fwait sbb add xchg inc stos jg push outsb lret xchg jne fisttpl lret das scas jge ja dec (bad) and mov lret imul lret pop cltd inc jp inc push arpl jp add mov aas mov gs data16 jns int3 pop ds and mov push dec (bad) in outsb mov mov test push fldl adc xchg dec scas push dec add call fcomip jp fildl jp cmpsl testb (bad) insb subl lock jno cltd ds push sbb cmp cwtl push push jp push orl mov mov push fdivl rclb jnp popaw cmpsb mov in jecxz mov cmp mov or rcr clc sti inc cwtl pusha sbb aam mov test in jae rcrl adc xchg leave movsb jg das pop fs je dec pusha repz or iret std jg xchg mov pop jnp popa jmp jl (bad) mov rcrb adc cmp pop sub movsb push clc mov xor out mov pop decb jae pushf decb (bad) iret mov movsb jne cltd dec repnz popa jle popa sahf jle popa cmp lret inc sbb out cmpsb xchg mov mov scas iret fistp xchg call fmull aaa stc cmpsb jbe pusha mov jnp inc stos push push mov fildll cs subl jnp xor adc mul or mov xor jae mov pop aas test lcall adc dec sub push inc shrl inc out imul mov cmp ret mov push jp pop aad lods dec jle jp rclb jp cmp scas dec inc xor push mov xor adc jnp enter push push mov xchg jo out sbb push xchg mov popa sub sbb and jns push xor insl xchg in jns int3 hlt xchg and mov dec out mov or and pushf jno (bad) stos jg (bad) sub int3 in jp mov icebp jne lods lahf add outsl cmp loopne sub in stos add cmpsl sbbl lods xchg jg jp cmp xor arpl ljmp pop mov insl mov mov mov fwait pop jne aaa jmp xlat mov daa or sahf jp dec mov mov inc jb hlt pop das loope xchg imul pop xchg pop (bad) std jno sub fdivs (bad) (bad) mov mov jnp stc test sub pop popa shlb fcompl push sti cld (bad) jno shrb lahf fisubl jp into sub in push sub dec lcall push loope (bad) mov outsb jae push je dec notl stos add push push (bad) mov je pop mov sub jp jnp sbb dec mov mov into pop (bad) xlat mov push xchg adc movsl sti sub add movsb fwait sahf enter (bad) xor sti in into xor sahf mov sbb cwtl sbb sarb mov sub jp push (bad) pushf movsl into adc lret mov jg xor add (bad) mov cmp lds mov cli and xor arpl outsl arpl gs push mov rcrb jnp dec arpl push xchg sub jp xor jl mov sbbl jl test push jp jne (bad) mov popf mov adc cs sbb mov cmpsl mov jp push bound sbb mov fistpll inc outsl dec (bad) or cmp sahf add or and sti cmpsl into sub dec test (bad) jne sbb je jl pop (bad) ja adc pop call test sarb xchg ffree jbe ljmp xchg mov fstpt les cli jp test stos ret mov cmp movsb out or pop sbbl or jp movsb mov xchg sub and lcall movsb mul fistpll (bad) sub inc mov ja xor bound stos jmp push pop dec adc xor mov dec jae jmp test iret ret dec fildll stc pop push jp in add lds imul dec stos jle xchg sbb cmp movsl cmp sbb pop xor imul ja inc jp adc imul add mov cmpsb xchg add push fimul inc mov or f2xm1 push mov adc bound movsb jp rcll sahf clc dec jp stc loope arpl mov mov push jne lods sbb cli mov mov sbb xchg mov fwait popa push or jbe xchg inc and mov movsl jl dec and in leave sub and add push in xchg cmp enter gs fldt ret (bad) icebp push xchg (bad) cmp repnz jae fisttp push or fs xor or out stc mov sahf leave add pop sub add rcrb sbb insl add movsb aam ja stos push (bad) je pop stos xchg jnp pop and dec jbe or fdivs and (bad) test test lret jp adc mov test loopne call or gs cmc std je add mul jno notb loop jbe cmp pop in sti (bad) clc out adc js fisubl adc dec cmp leave adc adc sbb jnp cmp inc jp call lret scas arpl xchg jmp insb dec adc xchg pop dec in push jp pop pop or jns jp xchg cld xor je sub insl int3 mov xor shrl outsb inc cs aam cmp les leave sub cmpsb jne pusha adc jb and stos mov or stos adc les and xchg insl dec sub push dec cmp cli sub aaa pop cld ficomp xchg and test mov jp sahf lock xchg jp push (bad) insl mov cmpl lcall pop pop stc mov in mov cwtl sti mov adc arpl sti lcall pusha push xor pop jp leave stos mov pop shl int sbb aas in lea loopne mov pop or adc repnz cmpsb push adc push pop mov cmc mov cmp in pusha clc into (bad) imul fstps fistpll cltd insb xor aaa rcr add jecxz out and addr16 test sbb (bad) leave fwait aaa dec push dec jg mov in int3 dec mov std jmp cmp movsb push xchg (bad) jae (bad) lods pop mov fwait sbb dec popa scas pusha push hlt cld pop mov adc out rorl test mov sarl jle pushw (bad) mov in xchg jbe mov ja sbb cmpsb add adc movsb push adc lea jno (bad) jmp xor mov adc sbb jp mov pop sbb jp fwait add and xor nop test xor add jp add dec jp mov fstl data16 std xorb mov sub mov xor gs push jae ret fldl shll pop gs pop push clc (bad) lcall ret mov movsb dec dec gs arpl push int3 xorb inc js pushf cmc lahf cli push jecxz test cs xorl fildll cmp mov sub aas mov popa mov inc xchg mov pop jp jmp xor jp in add mov jne dec orl or add sbb test pop mov sub lcall xor inc iret in jnp shll popf jne dec xor sub xchg and ds and adc mov mov xchg jecxz jb push test xchg lds test daa dec das ljmp mov jno xchg fildl das iret sub sub mov jp mov xchg jno andl stos ret jo jp sbb je cltd pop cs dec aad cmpsb sti mov dec jecxz jmp (bad) fwait jnp sbb mov jno fistpl pop push sbb pushf out mov rorb or in jmp lods jne lods inc mov sbb and enter push cmp xchg test imul mov sub xor dec fs lret gs imul jnp outsl inc daa bound sbb lcall jp mov call sub add loope mov fwait or mov test jle daa push int pop pop mov cmp sarl pop les (bad) mov dec daa adc mov sbb inc mov les scas lret jne pop (bad) scas push ret mov popa cltd push cmp arpl add pop mov sbb sbb aam jbe repz sti aad jmp lret jp push pusha loop daa cmp fistp aas jno inc mov jge mov cmp mov push xor lods inc outsl sbb mov insb imul pushf jg leave fwait (bad) xorb jns int3 leave fwait hlt jle sub insl notb pop stos stc imul movsl fdivl mov and insl add aad sub fcomps xchg mov jp pop jo cmp and jp xor outsb call jae stos stos jnp sbb arpl loop mov jp test dec cld sub inc and sahf jp fcomps cmc or jp (bad) jmp jp lcall lahf push ljmp pop insl dec aas aad mov cvtps2pi iret inc jnp inc jbe into jp mov mov mov test inc fcomp daa shrl push loope addr16 fdivl lret aaa cmp pop dec xchg inc ja bound pop fsts pop xchg push (bad) fs jnp push pop and jp and popa pop xor adc jp lret push sbbl xor mov int3 or daa sbb ja inc and cs ret inc imul inc sbb lds push dec push sti mov pop ljmp pusha jno sub (bad) cmp add sbb cmp push lock jmp call adc cwtl sbb pop lcall enter out dec ja xchg hlt cmpsl in mov lock negb push jecxz dec jp out dec or fnstenv sub mov jno jbe popf shl cmp (bad) or xchg (bad) cmp out stos or or arpl sub pop ficomp jp push xor mov cmp pushf lock stc or mov in (bad) mov add imul mov inc pop sbb mov xchg sbb mov mov sarb jp stos or push ja mov xchg scas push xchg and mov and hlt jg sub jnp dec gs jp cmpsb lret and xor mov xor adc sub pop xor fcoml inc lret repz imul sub lcall js mov in xchg mov dec xor insb insl mov cwtl jno inc int ljmp stos popf enter push xchg enter int3 mov pusha inc pop mov inc repz push jmp fistl in data16 popa pop jbe mov push jae icebp push sub mov dec ror bound add jae insl mov mov es jne clc mov iret loopne pusha jnp jno outsl stos popa decb dec out xchg (bad) fdivrs fsubrs inc movsb fildll push enter leave inc sti xchg (bad) cmp sub push push repnz push stos sbb sbb repnz mov mov int3 jae leave lcall das movsl int3 xor movsb fwait lds mov pop add jmp aam aad xor sub xor xchg lret xchg add jecxz mov mov sbb in inc xor mov repz jae das jo lds rcrb jae hlt or popf imul mov popa lahf shr mov lods cmc mov jp outsb out (bad) stos es pop arpl jae push out pop xorb ljmp movsb popa lds mov add mov mov push imul cmc jp sbb lods pop jp divl lahf (bad) out mov into sub sbb ficoml popa (bad) sbb fs xchg (bad) arpl xchg emms pop cmpsl or add popa inc jg imul imul loopne xchg or in inc lahf daa adc sahf xor and aam push cmpsl push mov lcall sahf jp pusha outsb sbb popa loopne xchg jo jg test out jl fidivr jne andb jge lcall mov ja lahf hlt mov jne loope mov jb inc clc mov test adc test xchg fxch and pmuludq out mov mov xor fdivrp out mov in (bad) sbb cli jle aas cmp out adc insb outsb xchg ja mov pop je ret xchg (bad) adc into jae pop fnstcw mov push mov pop out jbe jg stos mov and pushf jnp jno repz push and sbb mov jp or outsl jp ljmp jp xorl dec stos mov mov es fnstenv push add jo test sub js jns,pn mov mov push ss add leave imul push rclb sti cmp add xor gs test and sub loopne out addr16 fist sub (bad) jp and imul jge pop ficompl movsb fmull (bad) jp xor mov mov imul and les jno add mov into dec shl bound xchg repnz stos out stc imul and ss jp cmpsb mov repz inc jae jl stos int3 jnp mov stos aas add out and mov sbb pop push adc cmpsl ret jp cmp inc fadds icebp ja add jb jp jge bound jne addr16 jbe xor into mov imul loope popa adc xchg xor cmp cmc (bad) jp es (bad) and andl push iret sbb add pop jp ss pop (bad) cli outsl sbb mov es es xchg jp add insb xor or clc stc shl or (bad) cmp out movsb and or pop stos dec sub mov enter or aaa push repz int (bad) clc and mov dec mov std fisttp (bad) mov jp (bad) inc jb movsb inc adc push adc insl cmpsl andl and inc call int3 xchg lock movsb xor mov arpl push cmp daa adc cltd jae xchg es sub lea cld cltd or xchg pop and mov cmpsb jne mov mov gs out (bad) add stos data16 mov and sbb inc mov push sub adc jmp jno mov test movsb inc rcll clc insb dec push cwtl pop iret jl fbstp pop fwait inc dec mov sbb and fs (bad) or test pop cmp cmc ljmp mov mov movsb dec and outsl les or jae jle icebp cmp das xchg sbb lea ja stos arpl cmpl mov daa jno in mov sub loopne mov lods movsb test add sarb xchg pop and pusha fs jl adc mov lods lock sub mov mov cmc (bad) js addr16 stos aad dec push fimul push cmp dec movsb aaa adc leave xchg xchg scas or adc jge xlat push push jae inc mov loope lods sub jp push xchg cmpl pop fs jne aad gs cmc jp std ljmp scas cmp mov cmp out mov mov loop ret inc imul dec push sub and arpl jae cmp jbe movsb sbb nop fidivrl sbb jno stos ja sub cmp push mov subl mov cs cmp xchg ja dec lret pop jp dec call dec jp push add fstp or addr16 stc clc push xchg lods inc mov inc je push nop int push in dec jnp and sarl loope je pop and (bad) push sub (bad) dec fwait shlb aas fdivl mov xchg xor fbld les cmc push insb loope add or pop and jp cmp dec push cmp jae insl jp xchg movsl int3 in popl cmp out xorl inc xor repz mov add bswap xlat ret sahf jno mov es sti fimull lahf (bad) gs dec push jmp lea aaa jge in cld imul lret lcall jno (bad) pop cli scas test clc jle sbb push jl jmp fwait decb lret mov push out pop pushf push (bad) mov hlt jno enter dec gs stos adc mov push add js jg cli add scas fs pop pusha pop push lahf ja cmp dec jbe mov sub popf je cmp hlt adc jp mov and imul test add jne shlb stos pop xchg out xchg cmp and aam xchg sub xor test loopne fcmovb sub hlt mov mov push in jp popf xchg dec out loope dec xor push or (bad) cmp jno push out push ficompl mov lock jnp icebp test mov push fwait outsl jno out mov in call adc xchg test sbb sub xchg cmpsb jp and inc jo mov out mov cmpsl and jnp sub jp cmp jo inc mov sti bswap mov aam lods les fucom fstl mov scas or mov jp push test sarl inc jp inc imul push js push inc fidivr ss sbb test or in int arpl hlt xor leave std sbb adc daa lcall pusha ficomp mov and sub fistl jp imul (bad) jno xor push xor add cld or lcall out icebp pop jne push popf or jp cld add sar cmp xchg jge cmp cmp xchg and add (bad) mov movsl mov jnp pusha (bad) jno lods pop push xchg out add out ja inc movlps scas gs lcall and pop fcoms push push shlb into add xchg sti repz mov shrl mov (bad) aaa dec gs test xor rorl pop aam in (bad) jne outsl lods pop cmp lcall insb fs jp imul and pop pop pop jnp sub stc jp clc mov bound xor mov add jp and jl push ss push lods adc push inc cmpsl xchg sti jnp xchg push push adc adc push and push xchg fabs cwtl add in dec lcall cli js mov pop jns mov jnp dec xchg pop fisubl std xchg arpl incl jp adc jg jp dec js xor pop icebp sbb stc dec arpl cmp jp xor imul lahf jns mov cmp pop stos imul ljmp push jp aad inc lock push loop or xor add xchg and jp mov pop int3 inc mov xchg jecxz ss int jae sbb pop xor rorb hlt add xor dec or fwait and sahf push jbe jle push jns mov cld push data16 pop pop jg xor std fnsave jge sbb fnstsw sub sbb dec sbb (bad) icebp and mov pop popa in dec push aad xchg jne push out cltd mov je jae jecxz sbb fistpl loop in test lret jb loop cmp sub sub cmp mov int jp mov std jg ret jae cmp mov mov stos jnp add rolb jp jmp mov outsb dec jp ss daa add ret (bad) and push cwtl xchg sbb int3 xlat cld add cmc dec adc shll jp dec cmpsb cmp sub jno cmp push mov cli lods adc fidiv shll mov adc mov sub lods mov test or mov sub jge jae insb xchg ss cli rcll mov out enter movsb pop jecxz push shl cmp jmp into adc daa jp lock push fisubrl (bad) mov jp mov test inc jp xor cmc jecxz movsl dec or subl xchg and pop (bad) lock sbb lods ja mov test and or outsl sub push xchg cli push enter inc loope in popa push ss cmpb repnz cmp jp dec stos into mov jne pop (bad) mov jbe sbb stc push bound les xchg jmp insl adc pop jnp (bad) scas int3 dec xor fsubrl lds jae js push popf jae jg ljmp jp xor inc int push jp pop dec ljmp test adc stc cmpsl push jb inc das or loopne fcoms repnz popa pusha fs movsl jge cli movsb xchg mov subb pop stos in push stos add push arpl (bad) test int3 jle adc push aaa in add adc jp dec stos ret aas loop push int lret stos push fisttp jae push cltd cwtl mov jne pusha inc popa jge fs icebp push pop pop push xchg movsl mov movsb pop mov mov pusha dec jl cmp mov mov push fstps lea push orl loope hlt xlat lea imul stos arpl call jle inc (bad) scas jle int sar fisubr and pop cmp movsb call xor daa and cmpl ljmp jl add sbb stos push push mov fisttpl daa inc or mov ljmp fstl lea add push pusha aam xchg mov (bad) imul cli push call dec push idivb pop imul (bad) mov add enter sahf and jp stos mov inc test insb dec lcall push dec je and mov adc mov cmp mov loop cld push sbb testl or (bad) lret ljmp sarl lea scas adc jg in leave shl aam sub into out xor shl sahf fisubrl orb xchg xor cmpb adc inc sbb sarl aas pop xchg movsb mov fadds aas xor arpl shlb insl out test ljmp ret ljmp shrl imul in mov scas (bad) aam inc sbb xchg sub xlat stos sbb inc sbb mov jmp sahf jnp lock or xchg mov inc jno mov or fs xchg or cwtl cmp fs int int3 add dec mov inc imul or flds inc or mov orb or insl jne stos rorb cmp dec cmpsb fimull inc cwtl outsl and outsb fldenv push adc in aaa pop jmp pop dec cwtl xor sub fnstcw cmp (bad) jbe (bad) aad pop push or xorb mov cld mov pop push adc inc pushf fbstp jae dec (bad) push cmpsl jmp push push divb pop inc (bad) lret lcall dec mov mov pop mov addl inc sbb aam ret into and add cmpsl jp push pop cltd jbe mov out mov leave stos test into mov mov loope mov imul imul sub ret push jp hlt lea mov jp xor adc and xacquire cs pop jmp push jae adc sub shl jnp cld js xchg mulb add jp mov pop pop xchg in cmp call gs pop pop (bad) push cli cmpsb addb movsb stos mov pop sbb pop dec lret cli loop cmp (bad) mov jecxz push jp imul inc lods xchg sub push or sbb mov pop sub lods pop push loope pop cltd out mov sub jne lods (bad) add jae setne push cs fnsave jbe jo cmp cmp aaa jne (bad) repnz sub add fs leave jecxz cmp es loopne jae test int3 inc ja movsb or jge pop test push and cmc test int pop dec loope sub stos stc sub jcxz xchg add cmp stc std addl dec fs sub sub push mov aas test pop mov add imul jns sub pop out jle je sarb rcrl sub iret outsl or jg lods cmp cmp loop icebp inc mov mov push pop adc jo cli and jmp xchg jbe mov stos cmpl xor jae cmpb pop cli and or cmp mov shrl inc inc jo xor cmp jp ret nop cmp das mov jp xchg in fistpll pop jns sbb cmpl sub add test js mov dec lods aaa jnp (bad) fnop cmp mov mov lahf push daa lcall out mov out mov sbb cmc mov add dec aam jne pop pop inc (bad) pop aas push shrl int fwait mov out mov je stos bound jo inc cli movsb (bad) in mov mov cltd add mov movsl xchg mov pop sub and pop stos jle inc or leave shrb gs mov push pusha lcall mov movsb sub fwait je out sub inc push andl cmp lcall and lret mov jb jp xor mov out jnp scas xor jmp sub add std or mov jle sbb or jmp jnp (bad) fnsave push movsb add insb inc popa pop lcall fdivrs mov pop out movsb jnp (bad) aam push pusha inc cmp mov or jnp fs cmp mov cli je fwait cltd popa push lock sbb cli and popf sub inc loop lret cwtl xor jp push jecxz rorb dec ret movntps (bad) aad subl (bad) pop xlat mov push cli pop xchg xor popf push bound lcall ja iret dec cli inc repnz jp test nop mov fdiv or pop cmp pop lcall popf mulb jno gs cltd pop mov dec cmpsb adc shlb xor lea (bad) dec lahf in inc cmpsb sbb sti aaa popf leave jnp add (bad) and dec out rorb cld (bad) icebp and or gs cmp fwait or ret int3 mov js cmp lret outsl fidiv jg mov rorl insl lret scas test jp stc jnp sbb mov ret imul stc (bad) push inc lods mov sbb pop cmp or dec cld sub gs jbe stos mov movsb subl in movsb loopne sbb stos cmpsb mov jl mov mov push dec mov push mov rcrb jae mov jecxz aaa rcrl adc mov cmp cmc out popa gs add mov sbb es lcall rorb daa out leave scas cmp cmp call stos xchg mov sub inc adc xor movsb mov mov outsb xor inc ljmp push mov jl int push inc stos or or push mov inc pop stos adc sub mov xchg out lods inc jge xchg aam mov das jl mov addb cs out cmp ror lock fidivr add dec mov sub xor arpl in add out add ret fs int int mov pop xchg add jnp movsb mov cld (bad) (bad) cmc mov dec movsl jp into and mov cmp outsb or arpl dec in jnp mov push and bound adc sub (bad) xor jne mov sbb lea jp and jecxz repnz leave jae lds into repnz clc mov jp jmp cli sbb jle mov or mov pop insl fist mov jnp push cmp xchg imul jp mov push push popa es xchg (bad) mov and movsb dec into cmc and loope (bad) fist jge and xchg pop outsb add push mov movsl stc sub jne jmp mov and popf push scas out out gs repz stos mov ljmp cs aaa bound fstps pop pop je pusha (bad) jne jmp hlt add mov push lods adc cld jae mov out xchg jp in fcomps mov dec mov ja xchg push movsb fisttpll pop mov iret push aad or aad in jp lcall mov jae push dec scas fdivl outsb pop imul loope mov mov mov mov jno aam int3 cmp add dec adc ja movsb (bad) ja xor outsb ja adc jnp cmp sbb cmp push xor or in jne xor (bad) mov mov sti cmp mov gs jne cmpsl lea inc pusha jp mov xor lods inc lahf test dec mov sbb and mov jg stc pop (bad) or les loopne dec pop cwtl sti repnz sub jno mov xor mov xchg fldcw cli push and inc pushf (bad) imul in inc jb sbb ret sub fstps fisttp or cwtl subl mov pop sarl cmc xchg ja inc sbb shlb jp or shlb mov in push jp push fstcw lea mov and outsb and xor or cmp insl sbb push xchg jp and int test adc pop xor mov mov call cmp lods mov shlb jp mov jp cmp jmp xor imul sbb and jae cmp xchg jp add movsb fstpt mov pop aas jecxz dec jp xchg push (bad) or mov push cmpl jnp push inc mov out add jp cmp jmp in fnstcw inc pop (bad) mov inc cli jo pop pop mov sbb sub daa stos xchg inc in adc sub (bad) cmp jp imul aaa cld (bad) lahf jp push inc std lret sbb sahf in and jnp push je mulb xchg cld jp dec out push mov les inc icebp dec fs cmpsb xchg xor test cmp jnp inc jno jle push pop imulb mov movsb mov test pop xor cmpsb jp sub in lcall adcl jp and xor mov leave jmp out aas mov inc dec ficompl or jp (bad) mov sahf sbb jp ja dec mov push negl ja mov decb add push repz sub cmp (bad) xor xchg xchg in sbb nop pop mov push int3 gs dec ja insl ljmp ds mov xchg fisttpll outsb add aad jp cld push mov cmp dec leave mov mov add cld jns inc lea loopne mov es cmp or sbb subl (bad) je push ss push loop pop movsb test pusha inc jnp mov jle fldt inc fidivr mov mov sub cmp (bad) insl daa adc cli lea cmp jbe shl add out sbb jne std add jp (bad) xor fwait jp sbb cmc scas (bad) imul jns mov push arpl lcall imul push int (bad) mov jno jp pop xchg mov jp cmp cltd sbb xchg sub push pop xor mov jmp sbb push cmp cld (bad) dec js push in adc lcall lock repnz pushf adc cmpb out test jge mov xor inc jae jmp xchg mov sbb pop fsubl inc cmp test jl xor push addr16 pop and xchg xchg push cmp aam js mov imul fcmovnb sbb jp mov cmp addr16 push push add mov pop pop pushf sbb cmp pop mov ud1 mov jp ficompl xchg jno outsb inc pop adc push insl in into lahf cmp push popa and mov call fs test jp pop inc mov and cwtl pop add outsb js (bad) pop mov mov sbb push jno stos test imul outsb in xorb mov rcl inc xor jp push push push mov fs sbb mov jnp inc data16 sub jge mulb daa ds and mov cmp fistl jne insb jmp inc idivb pop repz inc repnz gs popa push cmpsl enter dec jecxz aad add es xchg hlt jbe in jno or shll cmp rorl sbb scas adc sub sbb leave cmp xchg cmp push sarl movsb cmpsb arpl or push lds and out lahf stos inc mov bound mov scas stos arpl cmp add rcrl jbe push lcall test loope lcall mov stos sbb outsb test sub subb push enter jae adc repz xchg push inc push repnz push sub mov test movsb add je (bad) xor icebp dec xchg mov in mov dec inc pop mov jae movsb add push mov or outsl bound in or ret fs mov imul xchg imul pop shr pop fldt push fdivr jl in mov test testb popa flds aas cwtl push sub jo cmpsb mov lret jge hlt cmc stos add mov cmpsb mov rcrl (bad) jbe inc mov out daa mov pop phaddwd and or adc mov xchg inc (bad) and imul fs cmp mov (bad) xchg xor sbb or insl mov sarb sti dec jp adc xchg lock imul cli pop data16 ja sub mov xorl or push lock and push jp mov jb ds cmp outsb lret ficoml push lret test (bad) jp test jecxz mov mov rol jae push jl cmp push sub rorb in pusha cmp addr16 or ljmp inc sbb sbb mov loopne push push add sub testb jnp hlt ja mov push xlat mov cwtl (bad) xor sbb jle mov jp and les or or or (bad) pop outsl mov add and cmc jns js leave pop pusha pop pop cmp dec cmc jp test jne fs cmp gs jno jb jmp (bad) mov xor cmp lock inc inc sbb mov lock movsl and or or push inc and xchg jl loope dec scas push add pop insb clc jecxz nop imul xor sarl out mov popa xchg inc cwtl jl dec les shr add hlt dec mov cmpsb mov jp xor xor mull push cmp jo insl mov mov inc sub ja shr decb dec mov test jp adc gs xor jp sbb pop and pushl inc scas push adc popf jp pop push mov nop imul (bad) fld insb mov cmp fmuls jnp pop mov (bad) jp jmp negl (bad) jo shll mov mov inc xchg jp or stc mov (bad) push (bad) push adc add mov ficoml jp xchg sti pushf lahf andb arpl repz jp cmpsl inc xchg jo or jne xchg ficompl jp pop and inc lcall je outsl dec jbe inc rcrl jno data16 sbb ds ret js xor (bad) std ja pop or jbe test mov mov shr and push sub das cmc add popf pop (bad) mov pop xor mov (bad) mov stc idivb out dec test popf rcll xchg sarb aaa jl xor sbb mov cmpb add cmpsl ret pop in imul sbb frstor sub xor dec mov mov pop jp sbb imul xchg jecxz mov (bad) or sbb mov fistpl loop push pop arpl mov stos or es jecxz and in and sub jne jno push into and sbbl add outsb or outsb pop idivl mull pop cs rcrb push mov push cmp inc mov test mov and dec and sub jp incl cmp adc jne jle xchg inc jno pop sahf pop xor loop pinsrw push mov dec lds jno add sti daa mov or aam mov call ljmp pop ror cmp jg jp or pop insl inc (bad) sbb jl pushf xchg in jnp pop pop lea setp jp xchg mov shl aas sbb pop bound imul (bad) bnd stc xchg sub mov jmp jne js add mov xor pop mov jmp addr16 sub pop imul lods int jp in mov add mov jo stos jg jp mov dec (bad) xor mov adc hlt xchg push fisubl js xor addr16 jp (bad) leave or je add lods test mov or insb jns mov pop std addr16 push aas xchg sti repz ja add sub ljmp fisttp mov xchg jp (bad) mov int3 pop outsb dec mov ss sti sbb scas inc lahf xchg jp xchg and cwtl pop sub mov sahf in mov dec incl push popf jg jp loop dec movsl es jp lret xlat sub mov loop adc aas fistpl sti in lds mov loopne scas xchg xchg insb jno pop inc xchg push (bad) aaa jp fadd lods stos push jp dec leave sub scas pop and mov popf movb sarl mov jo jno repnz or jp ficom inc mov push (bad) xor jo mov (bad) std shll inc inc mov subl cltd (bad) fistpl pop push movsb (bad) mov mov xchg cmpsb jp fadds push sahf jne jnp jno pop dec sbb xchg pusha push fs iret hlt hlt xlat push mov andl sbb cmp rcll sub dec or popl jb or pop add xchg insl gs mov outsl ficompl jp daa add jne fs or or cmp xlat jp inc inc out sub ret jp gs mov and inc jp mov and das inc repz cwtl outsl add sbb mov push popa xchg leave push loope mov mov pop aad fldt inc (bad) out lret lret xor add push arpl ja xor scas jp stos (bad) stc test jne mov repnz jle das xor popa pop push push lds xor pop dec mov aaa push dec ret fisubrl pop mov incb enter std push stos gs sarb mov sbb inc pop jo stos sub cli inc mov cmpsl stos fild scas outsb hlt movsb push or stos imul movsb out sti jnp clc lock inc push stos xor jb leave or clc movsl xchg push and jnp stos pop inc shr xchg std xchg sub call movsb daa xchg adc imul and jae adc sbb xchg or in mov push aam mov insb stos add mov push stos out sets imul push sbb hlt shr inc out les pop push xchg cmp mov aam jg in clc cmp push lcall mov inc xchg popa sbb pop cmpsb fmuls je mov xor mov sbb push sub jno inc pop xlat mov aam lret lds xor cwtl icebp testb outsl jns out mov jp lret add sbb xlat gs or sub scas test test orl lcall (bad) into mov insl lds adc stos and mov xor rcrb push pop nop imul adc (bad) sub mov (bad) mov jp push xchg lock jp addr16 add push jp movsb or cli jle mov pop gs cmp pop cmc mov sub mov xchg or mov inc sub add fist aas aaa mov jne cmp ds stos (bad) sbb pusha shrb cli out cs push nop mov jecxz fstpt stos idivl dec jge sub mov jmp add test dec in or sbb jp mov outsl push pop jne adc push aas xrelease pop pushf ja cmp or sub test add add jae int sahf ljmp sub adc test into jge in jp addr16 cli gs ja jp int mov inc lock ja fs mov (bad) push loope adc (bad) daa xchg jp xor leave pop sbb jp dec cs std scas pop jo or shlb in inc and insb push cli cmp pop iret stos mov or xchg mov std jae cli imul (bad) jp xor jp in fwait popf out jnp fisttp sub jp xor jp (bad) pop lcall xchg aas or and es out jp shlb jg jne aam shl pop js jb and cmc cli lds xchg jno lods fistpl sti in jae adc ja add mov xchg pop aam pop sbb fdivrl jne int adc pop add clc out je dec push xchg adc sarl jb mov cmp test cmp or add mov sbbb arpl or sbb push mov xchg gs outsb add pop jp mov iret (bad) pop xchg mov int3 dec (bad) sti test js loop pop mov lcall int dec adc mov or jnp lcall popf sti stc jnp lahf jp push dec cmpsb aam inc mov sub rorb dec push lods xchg pop jp repz stos adc scas (bad) mov imul pop popf leave jnp loope pusha addr16 movsb dec shrl pop lea dec xor pop mov ljmp jp cmovle mov push mov test jg mov xchg jp sub aad loope jp shr dec pop pop ss xor push pop jne and cld push mov adc or mov lock or sbb aam (bad) fstpt sahf (bad) jl xchg fsubl enter mov jg mov push xchg repnz arpl mov sbb cmp cmp xor pusha push xchg mov add or mov xchg (bad) jae mov sub lea ja push inc cmp (bad) cli arpl jo cmp mov jne lock loope jb push cli push pop and cld jbe or jp roll xor addl or jge sbb lds push sti andl stos pop push inc sub lcall mov sahf sbb adc jns fwait pop test cli or and dec mov jle dec pop push in adc push mov popa cmp imul xchg and pop sbb scas lcall dec jbe repz mov js lods rorl jp push adc inc dec and pop lcall jp std push addr16 and cmp pop add cmp sub inc inc cmpsl out jp sub pusha sbb mov or jp sar cld icebp mov dec pop pop sub popa ss (bad) mov lahf fwait je cmp inc insb jp jnp das addr16 pop or cs pop pop (bad) sti loope sub dec jns popa sbb mov mov dec sbb ljmp imul mov das or (bad) xchg inc jp jnp pushl cmpsb jo xchg inc ret ljmp lret jmp jno jge out dec shr pop mov std xlat pushf gs pop je insb (bad) iret mov iret jne push loopne mov fstps lcall jg enter notb lahf cli popw and adc hlt (bad) jecxz push pop jp mov test jno test mov cmc fnstcw pop mov adc cmp dec add sbb push pop mov push jg pop push or (bad) fcomp xor addr16 scas inc pushf int3 gs inc divb pop and insl sub mov push jl js (bad) mov or (bad) out popf xchg pop add jo dec xor cmp cli je popa (bad) jecxz insl leave in hlt jmp jnp inc mov gs jnp xchg rol cmp (bad) outsl ficom or adc lea lds dec ret mov js mov cltd jle xchg lret leave shrl into push inc xor jnp inc and icebp jp sbb sub or dec clc add fistpl mov xchg (bad) out (bad) mov mov jnp jle pop mov negl popa (bad) pop pop inc cli clc cmp push sbb jp mov mov aaa pushf jnp out adc insl inc daa adc outsb vunpckhps leave es jmp sbb stos call in xchg daa jnp pop (bad) dec movsb dec mov dec or enter mov jp lods sub lcall mov sub pop inc or lds test or xchg aas insl inc and lea and repnz jl ja adc fcmovnu mov mov jmp pop cmp lds hlt adc jp mov jecxz mov add fcomps dec movsb mov adc movsl (bad) shr in add andl cld mov sbb leave push jne pop adc and sahf jl fisubl jnp,pt cwtl adc jp xlat and gs mov dec scas mov sbb packssdw sbb ja mov xchg mov (bad) sub pop or inc loop sti in into hlt mov adc jge jmp and insl iret imul ja inc and jge dec sub xchg add sub daa movsb push mov jbe dec mov jnp pusha inc push (bad) cmp jns ja pop jmp pushf xor movsl sub imul ljmp add enter lret stos int cmp lds pop sti pop xor test mov xchg hlt xchg rcll (bad) enter mov (bad) jecxz or out push cmp gs inc pop pop jae movsb inc in mov xor sarb xor cmpsb jecxz out jo xor cmp imul adc dec test xchg xor sbb repz push xchg iret mov ljmp and and sbb mov mov xchg (bad) or and xor xor imul push stos xchg stos and outsl jle shr (bad) repnz arpl int3 mov (bad) add repnz aad jnp lret or in and in xor dec mov repz jnp sub or mov inc mov std rolb push jns sbbl inc and test (bad) movsb imul mov dec mov out jb gs sbb push mov pop les mov push mov dec cwtl cmp lret sub pop fldcw fwait sbb jne fsubrp das mov dec jns cli or ror mov mov pop sub add fsubrs jp adc dec mov std mov sbb mov jp jno testl hlt push and call inc push lea jp pop fsubrs jp in mov jne ret xor inc addr16 cltd mov jp xorb dec xchg testl shll push pop cltd insb mov adc jae repnz out jp mov adc push je call ljmp push iret jne fisttp cmpsb dec mov and lea add jp je arpl (bad) xor xchg jae xor mov cli jp pop div loopne push mov adc test xor lods mov mov add (bad) xchg jp or fcompl pop cmp lods cs sub lcall das inc lahf iret bound jp cmpsl sbbl jp ret xchg mov push lea insl pop jecxz cmp sub scas sbbl fistpll adc mov sbb aas mov and xchg mov mov dec fcmovnu movsb (bad) cltd rorl dec sub xchg movsl mov es loop outsb and push push (bad) jne pop mov xchg pop cltd jno cmc out ss mov hlt (bad) test test inc mov hlt ds fidiv add or sub and xchg mov jge dec cmpsb int3 add jnp push xchg jecxz popf xlat jmp lds gs mov stos pop scas and lret pop insb jmp adc pop xchg and cmp cltd inc clc jnp rcll xor pop inc icebp jp cmpsb out inc inc aas mov jno mov hlt jg (bad) stc cmp sbb push dec jns dec rcrb pushf xor jp mov mov sub bound jp test cmp jp adc pushf push inc pop sub cmc (bad) icebp sti inc jmp push shll mov cli in test test scas mov loope jl jp mov mov push stc pop xor scas insl lock add repnz es dec mov loope push je and loope in aas push mov inc push xorl call and cmp out movl pop hlt stos jle cmpsl fs nop in xchg js aam jae add push jnp inc movsb mov add pop pop dec testb push and cli push cmc mov cmp xor fmulp lret push sub fs stos idivl fwait ret leave xchg ja or dec fbld xchg sub stos pop or test dec movsb dec lret xchg popw out addr16 test outsb jns cli pop stos mov push cltd sbbl dec int3 pushf xchg mov push jge xlat sub (bad) mov mov push and xchg cmp push into icebp ljmp push push xchg cmp mov xlat push mov mov jo pop fmull je mov aad sbb mov (bad) xchg inc jg aam ds daa or scas pusha pop push push leave (bad) movsb lods cmpsb sbb xchg das stos mov mov or xor sarl sbb mov pop mov add add push outsb (bad) insb sbb out aad adc mov dec (bad) mov stos push sbb dec std add hlt insl stos in enter arpl pusha aas arpl and mov stos sbb adc (bad) decl jo xor popf repnz rolb daa insl stos movl push imul sub shl ret cld repnz gs btc push mov pop mov sbb adc and xor arpl adcb push pop cs or pop jno mov popa scas sub cmpsb jp jbe dec stos mov movsb movsb push aam push jne mov movsb out add shl (bad) imul cld cmp pop pop ss mov fist adc mov lea and out dec movsb adc das cli sub push rcrl inc xor mov (bad) ljmp loopne mov jmp inc mov fnsave or add ret insl pushf test movsb and sub subl shl (bad) lock mov adcl mov push scas cmp jnp lret xchg cmpsb xchg shll jae lret loope cmp pop push mov jp rorb (bad) sti ds push dec lret aam (bad) sub pop adc jp add dec xorl and in mov xchg jecxz ret jno movsb popa nop std int pop pop pop shll test push xchg in int3 pop or idivl out das daa arpl lcall repnz pop inc in out outsb jp (bad) lods cs call or jo mov push sbb jp fstl mov inc pop fidivrl cli jg xchg jge mov mov adc aas adc aam pop int3 insl repnz es cli add dec push in lcall test jp jmp fildl pop push gs push imul pop jle insl gs stc fstpt mov cmovs fdivrl push nop aaa lret jne stos stos push sbb jnp cmc les ss popf sub mov adc inc testl fnstsw push jp or mov push lock pop dec stc (bad) mov mov add cwtl adc pop mov call or or jne lea jmp mov mov dec jno or or imul icebp add dec lea jnp (bad) sti xor jno xchg add test add mov lret clc jp adc dec imul loop test push dec or aaa adc dec lcall inc bound in out shlb sahf test push imul adc cmp inc jp mov fisttpl push outsl xor lret add sarb pop pop outsb test sbb xchg jne stos imul push movsl es pusha rclb mov pop jge rorb call jae bound jae cld push gs jbe rol stos pop repnz pop inc popa pushl mov mov and add dec jbe adc (bad) push cmp xor aam xchg push mov mov test push mov xlat push mov xchg fnsave ror stos loop outsl js xorb xchg xor je xchg cltd pop and cmp mov or icebp jp movsb (bad) push imulb jp sub outsb and mov push cmc cmpsb adc aad jnp lock bound ljmp jp lret fcom pop jbe and adc (bad) scas sub mov cltd push arpl push mov bound jp les mov sbb sub jmp dec jge insl dec cmp dec aam ficomp jp push or mov pop aad xlat popf (bad) popa leave icebp jle pop loop jp xchg cmp (bad) mov cmp add mov mov jg push out and jp icebp mov or push pop dec gs mov push cmp ss aam repnz (bad) ja cmc loopne stc imul (bad) fnstcw ss pop push and pop mov and adc sub mov je sub out dec test lods sbb mov cmp add xchg pop aaa dec leave shlb cmp xor mov sahf sbb rcrl in jns std iret jae popl js fisubl or data16 mov push mov jp xor push cmp sub mov mov inc pop addr16 dec push aam jnp les sbb sar ja jno xchg mov mov jp stos pop lods mov cld lret add (bad) fs clc xchg cwtl insb (bad) shr lret sbb lret dec daa pop cmp addl xor sbb daa out sbb dec push aam jle fdivr cli push add fisttpl shl cmp imul add xor aad sbb dec mov adc pop movsb mov xorb mov movsb movsb or push jge pop enter lds pop (bad) mov jns lock pop cwtl mov and or add add test jb inc pop sbb mov mov ficompl std je popa adc les lcall scas cmp jp mov ds push movsl cmp mov nop dec mov jnp add jp or cmp lcall out lcall jp adc lods jle dec cmp mov adc sbb jne leave pop xor in sub inc test lret inc sbb jne adc push loope or ret jp shrb repnz pop pop xchg push xchg pop jp test aaa jb sbb jp dec lea adc mov mov and xlat cmc xchg jp sbb add and adc imul cmp (bad) sub ja hlt sub cli ret sbb es jl pop mov sub push jp mov xlat hlt sub les loopne sbb push sbb mov gs xor and outsl repnz mov jo insb in xor repz pop sti orl xor and xor test xchg xchg movsb (bad) add add add pop jp xchg arpl xor inc stos (bad) or data16 jnp adc imul inc cltd pop ficoml mov adc xchg dec xorb insl xor jnp mov inc loop adc push jp hlt add jle loopne psraw mov or or insb push gs loopne inc jp jne aaa jnp out dec jmp es jp and xchg insl pop adc jne call cld insl jp mov dec sub xor jmp aam fwait pop mov push pop int inc cmc mov movsb mov push aad or xlat mov cmpsb push inc pop pop dec dec or push stos enter inc push or fwait or push out pop mov xor push rcrl mov jmp mov pop into stos outsl or scas jae adc arpl or pusha pop xchg xlat fnstsw (bad) jge mov adc movsb std jns jl insl lock sbb sub ljmp xchg int3 mov jp lret ss jne cmpsl shl mov or mov jecxz cmpsl fcmovnbe imul xor cmp sub xor xchg mov inc not jnp es xchg addr16 jmp push mov movsl fdivrs push adc aas cmc outsb lds scas inc jo mov popf cmp sub jp xor scas dec mov adc sarb jnp outsb or in jae pop sti decl out mov sahf mov cmp and scas and and or mov sti movsb xor dec js mov push jbe mov scas inc and pop hlt pusha push les cmp (bad) mov loope or jmp jne clc fbld hlt pop sbb cmp pop dec lock and ljmp rorb lret xorl sub sbb cmp repnz mov pushf jae popa stos or jbe aad and pop push jmp jae dec add pop imul lahf xor jns mov jnp addr16 fldcw outsl dec jnp pop subb stos loope add popf inc mov outsb pop sbb jae add or movsb fistp sbb mov addr16 jnp mov add cmpsb pop loopne movups jg and add xchg stos das and ss repz jbe adc xchg stos xchg cld lret sbb jbe adc in mov stos xor mov ficoml add and sahf inc faddl cmc xor daa clc or xchg push jmp inc add jae cmp inc inc cmp sub or pop pop stos mov dec jmp cld sbb inc sbb push in ret mov test addr16 mov cmpsb push add testb xor inc jp and mov cmp xchg pushf cmc icebp lret addr16 lcall dec aas out or pop mov or dec cs sbb cmp dec (bad) pop mov xchg or xchg arpl adc pop xchg scas pop int3 inc push lret mov cli jne jge ljmp push push test dec sub dec aas xor or xchg sbb (bad) mov jbe (bad) jp jl gs jge hlt das mov mov cltd jnp mov add inc gs fdivl pop jae jp lock imul aas cmp jp in xchg lods xchg out ja je lea sbb push mov (bad) insl sti push ja mov pop jnp (bad) mov mov jp push out jecxz mov lret pop dec aaa sub es inc loope fisubr mov jp jne jno and (bad) jp xacquire or shrl les pop mov lahf jnp or or sub xchg es popa mov (bad) xor pop lods and sti rep lock mov clc mov repnz aas imul add jp pushf scas les cmpsl mov sbb dec pop jp add or pop jne cs (bad) fcmovbe fnstcw sarb mov or xchg xchg sti std jge int3 cmp mov cli lret cmc fwait ljmp dec sbb pushf flds sub (bad) xchg mov ja les inc jle push sub pop or fwait add rorb fistp ret hlt (bad) xchg scas jecxz jne out in pop adc fwait jb ja xchg and imul adc ljmp jae loopne pop pop movsb or (bad) stc aaa fmuls jp cli clc subl lea mov out cmp sti sarl cwtl pop movsb insl dec dec js es imul pop mov pop outsb jno jmp mov fidivrl out mov fldcw gs fidivr pop fnsave lcall lret push cli aam mov jge shrl andl fs mov in jp sbb xor andl lahf mov pop sbb jp push mov or leave and or clc fstpt mov jp dec loope adc add jp cmc jbe mov fucom jp ret loop int3 mov mov cltd cmp mov in jp push popf jg call mov mov mov jp adc cld jne sti jns pop ds jne cli sub xchg popa or adc jp cmp pop jmp enter stos add or mov lcall addl into cli mov sub mulb xorb xchg adc mov out jp jg (bad) xor lahf aas cmp jne inc jns sub xchg fwait jo into imul push pushf jle adc push mov js shrl sbb pop pop ds dec jl dec mov xchg dec jbe icebp push jae hlt inc pop bnd aad lods fidivrl xchg mov jp das outsl add xchg cltd or xchg jnp dec and push adc in mov pushl jmp mov in sub xor add jnp idivb addr16 xor jo push mov aad fcmovb jp inc pushf mov cmp jnp adc mov jnp xor cmp ficompl imul std mov je das adc mov lahf in data16 cli leave stos push jnp cmp cwtl sbb mov (bad) mov cli out and dec adc aam or out mov jecxz sub mov jecxz sbb jnp mov xchg push or enter jae repz adc mov les sbb arpl aad push iret and ss and pop and jnp shll jno push aaa inc addr16 cli test sbb fsubrs dec iretw lcall jae test iret cmp addr16 roll push jge insb inc stos sbb scas mov dec (bad) pop insb stos push sbb pop leave xlat and stos inc mov stc push inc or movsb sbb shrb push out jb rclb lods shlb pusha sbb push test push lock mov fnstcw stos (bad) aam mov sub fstpt pop les ja andb lea icebp jno js aad into (bad) pusha rorl les or adc jp mov cmp stos sub test mov int lahf add push ja lahf sub fdivr pop xor xchg clc cltd in mov stos push inc pop inc jg out (bad) lcall movsl mov and outsl jecxz lret push or out es sub jnp fldcw fimull pusha arpl mov inc mov out aaa lds xchg jl jb insl push repnz mov fs sub inc dec (bad) cmp or inc testb push aad icebp pop je stos je and jo repz add mov fcoml mov in daa mov out xchg xchg fildll out or je stos cmp sub jmp not cmp imul xchg jo cmp jnp mov insl mov mov ja push push mov in lcall mov ja xchg lock pop gs cmp div cmp les popf and test mov sti or add mov add mov fdivrs sbb imul xchg nop and hlt sub jp in lcall xor out lds int inc dec testl movsb nop bound adc aas dec mov jp ja mov jae or sbb ret push in or lcall jp add pop jne sub sub pop lret ret and insl rorl ja call sbb cmpsb jecxz clc mov pop movsl lretw dec sub add push test loope pop jp adc mov cmp fwait icebp call dec (bad) in sub adc int or fwait add mov int3 cmc mov aaa adc popa pusha je pop sarb push xchg shlb mov call lds rolb push fcompl cmp lret add dec pop out icebp xor xchg pop dec out arpl notl mov xchg pop mov xchg push stc inc in and sbb insb popa lret push test jp add jmp das or push in out push or mov cli popl clc mov sub mov sub hlt (bad) ja pop fldt cmc cmpsb call (bad) gs xor inc xlat jp adc mov jne mov push lcall loop out dec and add pushf xchg data16 stos mov xchg xchg xor sbb (bad) xor cmp movsl or addr16 dec in mov mov xor push insl out int3 hlt jp inc (bad) jae lods int imul cmp pcmpgtb fnstsw bound lods in mov pop scas xor sbb sti ds sub out jbe int xchg ror fcomps insl addb jne adc in decb icebp cli hlt jno cld aas sub sub adc mov test insb mov mov dec jno jnp pop pop rcrb sub mov jb in test pop in popf out inc es jp push mov cmp adc cmp sti repz xor ja shl push mov jnp pop sti sbb stos in jl mov inc insl ja dec mov mov sub stos mov push clc clc aam push sbb sbb push aam mov cmp sub or cmp cmp out mov je mov out mov pop cmp jbe push stos popa push sahf out mov std jp sub cld movsb dec enter fs stos mov into push popa icebp xor (bad) sbb cwtl mov jle popf mov imul dec dec addr16 sbb outsl je movsl sub leave dec (bad) movsb xchg and adc test (bad) arpl (bad) push cmpsl mov xlat mov adc movsb fstl push pop sbb in sub inc clc lods arpl flds push xchg mov js roll mov cmp arpl jle notl int3 das cmp mov inc mov shlb leave push lret fwait inc xchg push add xchg jae stos loop xor cmp xlat xor cmpsl ljmp fcmovbe rorl fnstsw arpl add int pop aad out mov popa mov xor lret cmpsb dec xchg inc call inc popf jecxz mov cld mov test pop jg cmc imul xor fisubrl dec lcall sbb and (bad) cmp or or ja imul cmp push cmp adc popl xor dec and dec xchg sahf mov jb or inc cld jp mov je xchg and out mov sti mov jns pop jae push cmp mov sbb cli test sbb sar bound inc and ret mov fstps mov jp mov insl int sti xchg aad jb stos iret nop sbbl cmpsb adc jb lret and jno pop cmp jp mov jae jb ret jp cmp jp push mov sarl (bad) lock push sub jne jne dec repnz sahf cmp add aas push push and inc out leave sub push mov ret inc xchg out jnp xor jbe adc int adc pop mov mov idivl aas cmc jbe in xchg jp sbb push jge xchg or (bad) push xor mov mov add aas or lret test jne jmp push mov movsl mov xor daa mov jb loope add jno add jp aad in cmp and je xor addr16 (bad) cmp dec mov push jnp xchg std inc jp dec xchg and ja (bad) ja addb mov je jns jnp (bad) test pop lahf lret (bad) mov popa rolb pop mov aas mov inc cmc mov dec cltd jnp jg jne push out stos pop shll push subl mov jnp adc loope test sub aad jp mov jne add movsb out sbb jns into mov sbb jp insb inc ja in test aam insl mov push sbb cmp insl mov pop mov inc daa jnp xchg mov jae test js lock jle mov sbb sub aas jp daa andl jns mov sbb hlt test imul pop jg jp adc adc sub sub in add jp sti cs xchg sahf shl clc fisubl sub leave xor sbb pcmpeqw jmp sub or cmpsl xchg repnz (bad) xor xchg mov dec mov xchg ds sub xlat (bad) sahf out (bad) pop xchg scas or test cmp sbb mov push adc rorl dec (bad) pop (bad) jp popa lea mov sub in cmp xor in into ret xor xlat adc ret inc pop dec pop jb cli pop pop xchg (bad) int3 test mov out rcl stos and jp ret jecxz lret xchg insl push divl scas pop (bad) jp or sbb cmp lods (bad) call into test out in sub (bad) xor das insl push andb fdivrl jp pop (bad) insb mov cld xorl cmp icebp or gs out sahf pop jp sbb in jp movsb dec daa jg inc lods pop (bad) dec cwtl mov and jge es arpl insb pop xor or divb idivb cwtl push inc dec pop popf in pop lds xchg and dec mov cld loopne lret fdivrs dec scas std sub jp popa jecxz mov ds push cli cmpsb lock icebp jp cmpsl negl jp mov sbb sbb jno leave push outsl in jnp and shll mov (bad) mov jp int3 jbe (bad) cmp into jp sub (bad) fistl jg aaa jp shll xchg dec jp cmp xchg lret iret sbb pop int3 gs fwait jp sub enter mov adc stos rol sub ds dec cmp cmp xchg gs jb outsb fwait int aad mov test fwait xchg jp xchg push das push hlt mov cli arpl aaa sbbl outsl mov fildll xor xlat fdivrl lahf mov sbb jp xchg les jns jmp dec inc jne xor ja fimul sbb (bad) sti aam (bad) jne mov loop stos mov nop adc push xchg shr mov insl inc ret and in xchg fdivrl add jp imul or sahf icebp out pop bound popf sti ja loop add mov cwtl testb xchg cli or ret inc fsts mov sahf xor out and mov jp icebp inc fcoml jmp and movsb cli jne xor cmpsb shlb pop pop adc in pop jnp,pt outsb popl insl add scas jmp xlat and int cs pop js fsubrs mov daa jg jp push je jge popf push or jp leave dec sub and xchg mov inc loopne es adc cli les jbe subl jne (bad) lock add aad addr16 dec mov fstps cltd dec and or (bad) popf add repz sbb xchg jae aas outsl lock pop adc or cmpsl lret int3 fstps add adc sub lret test lret cmp insb mov call xchg in sub lahf mov arpl push add dec dec jae leave pop fnstcw push test cmp cmpsb sub jmp push js xor dec or jne dec or leave movsl cltd inc mov lret cmpsb addb or xor ja xor lock mov movsb or pop mov push je add aas inc fwait cmp addr16 (bad) jnp iret mov push jno jp lods cmp insl pop push dec sub insl jb xor mov icebp jae jecxz or lahf jnp fsts push leave jno xorl sbb ss and mov dec icebp aaa fistpl inc jp mov xlat imul pop mov cwtl sbb push pop sbb icebp add jmp lcall dec hlt adc insl cltd or ja push fnstsw int xchg and dec sarl cmp add cmp xchg imul addl mov pop aas add pop push pop test addb mov sub mov insb les repz dec add jb or adc mov roll jo xor fs jns scas lea sub int jae test aas (bad) jg xchg or dec xor inc sub fbstp loopne fmuls push and sti or dec push (bad) adc jno loope inc loop xchg pusha mov arpl xchg std mov mov movsb pop mov mov jle ja call stos or mov cld cmpsb lea jno sarl inc (bad) or dec lods mov xor sti pop (bad) in xchg lock lea stos sub addr16 cli outsl lds mov xor test pop test adc icebp pop or lret jge jne add sbb movsb push pop push mov loopne dec mov rcrb das lret sub scas (bad) mov mov mov mov nop xchg (bad) decl sbb sub jno repnz mov pop js mov (bad) ja flds ds (bad) ficompl (bad) movsb imul sub outsb xor xor scas push mov sub jp pop shr shll cmp dec or and fisttpll push lds xchg ret (bad) add aam (bad) jmp inc mov sub mov add dec inc popa jmp pop sbb push mov fmull xor test roll sbb mov int cltd pop jae in push push frstor sub jge mul cwtl cmpb xchg loop dec lret cmp sti push pop jbe jae mov jne cmpsb mov adc inc lods stc cmp jp clc cli aam aaa adc imul dec and push es in lods mov mov jp mov adc nop mov mov inc imul mov jnp inc adc and or into cwtl jnp aad stc jno sbb dec pushf mov loopne (bad) loope xor mov sub movsl cmp into mov ja xor push jg fisttp ja lods les or jp sbb mov push add aaa (bad) sbb pop ja das add adc ret mov jbe mov jge sub popf fbld or jp mov and fisubl sahf imull lret inc adc adc jmp outsb xor pop mov xorb lret push xor mov jae imul (bad) mov fmuls arpl (bad) lret lods stc je pop xor iret popf ja mov or je lea mov push sbb popa dec and mov mov mov fdivrs cli xchg add mov adc cmpsl imul jo lcall data16 or xor imul mov dec push pop fwait jp pop lods stos xlat cmp push or dec mov andb jp lods (bad) jnp ljmp cli insl adc mov fdivrp mov (bad) dec mov aas cmpsb movsb nop cli icebp ret popf pop pop mov mov es imul sub arpl push dec outsl repnz cmp adc adc xchg aam jnp jle ds push jecxz xchg cld mov dec cmp xor jp lret pop popw push outsb inc imul scas pop push sti jg lods xchg pop or fnstcw xchg ja cwtl insl cmpl dec push out pop push xchg arpl dec pop xchg jp jecxz repz jp divb add adc cli loop js push imul cmp jne or push cld pusha outsl xchg mov fbld jne jo bound test stc sbb dec repnz out xchg adc loop jp add pop (bad) fld pop (bad) ja jb dec das jge rorl ss xlat stos sub sbb mov fmull cmpsb insl fisubr or clc outsl fwait push (bad) shrl insl pop (bad) sbb or cld cld lahf fnsave jmp push jg fwait outsl cmp pop ret mov add sbb (bad) cmp fwait movsl jae mov sub jg enter inc push push loopne or xchg mov jp mov inc add push add or jnp insb pop loope repnz sahf icebp xchg xor mov adc mov lock decl jl cmp arpl aaa lcall xchg jmp sub jp pop je mov pop adc sub aas stos push push sti cltd popa ret repnz xchg push ja iret movsl lret in in into mov xchg test pop stc mov js insl push pushf clc lcall or pop imulb (bad) xor cmpsl push adc cli inc fstps imul mov sbb loope jp xchg fnstsw ljmp negl out ret rclb and cs cli sub add sub mov mov jp add jg jp sbb test fbld test sub stos dec std jp push xor fwait jp gs add dec jp sub cld jp (bad) jmp addr16 pop (bad) aad mov jae and fwait cli fldt (bad) adc orb in ja push sti and mov xchg mov cmp ret jp aas push in outsb mov ret and mov add aas dec mov scas pop movsb cltd cmp jp daa dec cmpsl aam lods sarb popf xchg aas (bad) icebp imul mov lcall jmp inc sbb dec ljmp xchg cld jp xchg (bad) insl xchg imul mov cli lods js dec xor xor shll jnp sbb mov sub (bad) jbe pop pop sti push lret mov adc enter add jno push test andl mov call jmp cltd jp addr16 xor pop xchg fisttp (bad) cli jmp sbb negl cmp mov pop sbb push pop jl (bad) mov push imul in jmp push jp xchg adc sbb mov pop (bad) dec jae loope xchg aas in int3 outsl fdivrl mov xchg add or adc mov out mov je cli adc (bad) sub fs mov sbb scas out mov das mov jp popa jb dec enter xlat add pop cmp cmp ficoml sarb mov jp lock lods pop lcall xor jecxz mov ja in add and addl and and repnz or movsb (bad) jbe cmp jne outsl cld add test or outsl popa ds imul sbb stos (bad) test popa add cmp icebp pusha inc sbb or mov jmp or int3 ror aas andl sbb or lea test jo push mov cmpsb testb movsb in cltd movsb stos out lea shll jbe jge cmp and movsb rcrb mov movhps mov pusha gs scas dec sub (bad) imul hlt mov stc cmp fnstenv xlat arpl mov jmp mov scas test pop jp or pop sub repnz (bad) jbe jle int xchg inc lcall hlt xchg out aaa ja xchg loopne sahf int3 (bad) and pop pop dec adc sarl and in pop and jb andb movsb aaa mov dec pop movsb cmp add xchg repz mov push push imul in sbb push push stos xchg and pop dec mov sbb inc push testb push pop or (bad) cmpsb jnp stos cwtl dec fcmove jge jae mov xor (bad) pop cld lea push jmp pop in jne es add fbld sbb clc ljmp add fdivrl clc mov or loopne push xchg add (bad) xchg gs lds pusha fs jl jo and mov (bad) hlt stos push and negb call adc out push movsb adc fcompl std insl stc (bad) into or or fisubrl jg dec loopne jecxz mov insb int rcll shl idivl cmp push popf mov stos das (bad) paddw pop (bad) lret sub aad fistpl scas movsl in xlat js fs cwtl xor iret (bad) and repnz sbb mov lret sub popa stos or xchg hlt xor cmpsb in out push ja sub ljmp cli cmp mov pop cmp jns dec movsb (bad) iret jmp loope adc xor das cmpsl pop loopne lret and (bad) jnp mov xor or or cmp jbe push sar jae mov (bad) (bad) jne sti xchg lock mov mov loope mov stc lret les dec add push stos sbb inc mov dec inc sbb stos add sub xor mov (bad) pushf or les mov push fucomp mov add movsb jle cli stos (bad) shl (bad) jne das cmp and jp xorl imul xorl loopne push and jne outsb fcoml jnp pop (bad) (bad) jno cmp mov stos or xor mov or jp cmc dec mov and stos sub adc std stc fstl push lcall les or dec gs je cmp shlb daa stos popa adc jl add inc shr lret in jecxz movsb mov orb repnz adc mov sbb pop jl (bad) mov movsb (bad) xor test add mov (bad) stos das jae lds add inc or mov cmpsb mov pop in incl ja sub ljmp mov pop cli insb out jg addr16 out mov jp push jecxz mov gs cli fs xor stc mov sbb out and lods jo rcll cmp stos inc mov lea and stc loope mov jne jmp (bad) sub imul rcrl pushf dec stos insl push in lret sahf dec fdivrl fdiv dec push mov insl ficom jp mov pop push cli dec in mov mov jl pop movsb jbe stos pop mov adc (bad) dec push sahf popa adc mov pushf mov movsb in mov jnp fisub scas adc movsb int3 sbb out fcoml subl xlat ficompl fsubs aam in push mov push das sbb loop gs sub int movsb cmp in insb dec addr16 sub popa insb cli xchg sbb fdiv in rolb and push sbb je pop xor xchg add into iret int pop stos jg pop dec mov xor jnp or xlat mov popa outsb pop and push dec repnz fs mov shrl mov cmp jp push xor imul jp leave xchg push stos xchg jne pusha out and movsl inc aas mov mov aas into ljmp int mov or in out mov mov enter push and and psubw int aam xor loope js repnz sbb cmp mov (bad) stc xor sbbl dec jmp lcall mov clc mov insl (bad) cmp mov dec or adc sti imul stos jp shlb add jmp dec and inc fistpl shll test or jae xchg mov leave mov (bad) xacquire mov add dec sub add push (bad) les xchg jecxz cmp cld roll in out test or movsl xor dec (bad) stc cmp jp js lods lds (bad) jnp fldt sub sub ja out (bad) mov in cli mov inc pushf xchg and dec sub xor test scas test lret lods add pop jp stc aas cmp xlat sbb inc imul adc fwait mov mov jp jne cwtl cld push fisubl or cmpb push mov jp imul lret ret cmp inc jp mov adc pop aad mov push mov jp (bad) mov shlb aas pop je testb push jge into dec cmpsb mov add mov jp cmp testl cmp cwtl ficompl jne lret mov xor andl jp xor rcrb and jnp mov ret pop sbb xchg mov pop push jp lds adc push ljmp pop sbb xchg pop dec sahf stos enter dec arpl push jp or jle or inc fsubs jp notb cs dec cmpsb lret pop or mov jp jo xchg (bad) pop dec movsb jle jp seto shrb push shrl in jp push je shrl mov flds cli sub cmp or xor out lret pop adc lret adc leave imul adc jns xchg std stc pop add dec dec mov cmp jmp addr16 rclb aaa leave sub imul loope rcrb adc jno loop mov push cli inc mov lret clc into add pop jp pop stc sub dec imul movsb (bad) jp iret push clc mov xor int3 out icebp mov mov jg pop fs movsl or repz fcmovu nop gs sti sub ja cmp push sarb jno out xchg inc push pusha push mov fbld inc movsb sub sti sti mov stos arpl (bad) pop lds mov add loope mov adc xor sub stos and or sub inc sbb addr16 outsb popa aas test int inc out loope arpl int3 fcomps add fisub sbb jns pop sub mov sub cmpsl pop adcb sub dec sub lret adc popa mov out fmuls mov push push outsb (bad) lock push adc mov iret lret stos popf leave ja push push (bad) imulb jp (bad) sub pop roll pop clc ja mov pop ljmp inc adc test dec or test stos mov xchg sbb xor dec fwait lods push andl mov push sbb popa jge outsl adc push dec ret mov dec adc push mov mov cmp outsl and adc add add mov sti push subb shlb je je jb sbb xchg popa iret out test push ljmp xchg js xor or pop ja sub cmp jmp mov add and mov pop or clc mov jmp jb shll out or jle stos movsb dec stc ds sub stc or or mov loop xchg dec outsb mov mov ljmp pop mov push ja pop mov sti (bad) pushf out and mov into mov cmp mov mov sbb ret shr and inc sti (bad) loope imul sub outsb out inc stos mov ss jmp adc imul or or mov mov pop jecxz lret mov stos shrl jnp int3 sbb add movsb sbb dec loope imul mov movsb jae leave xchg addl stos into insl addr16 mov nop jecxz clc pop xchg fsts (bad) fsubrl ds cld add pop ret xchg mov and pop cs push es jp test dec in rorl mov je stos pop in cmp lret xchg outsb inc pop jp incb push sub movsb sbb fstpt std cli mov cmp cld sbb mov mov cmp mov das jl cmc dec jmp jp je test adc sbb xor adc jg dec adc lods mov stos pop jne sbb xlat inc lods stos inc out jne pop pop adc std xor mov xchg inc mov and in cld xlat mov fistpl (bad) xchg fstpt cmp pop dec aas cmp cli fs das mov jp pop aas xlat lret sbb push mov pop cmp pop outsb mov cmp sbb adcl aaa ror xchg mov iret jl xor sub jp gs pop push ds jne xor sbb mov and sarb jle sub imul popa xchg pushf cmc inc imul mov jbe jp icebp andb mov push mov mov cwtl js mov es xchg insl mov aas hlt dec pop ja add xchg and (bad) jp lret add jg dec mov jnp and insl xchg lahf pop insb add repnz mov sbb mov push stos cli mov ss (bad) fmulp sbb imul mov mov ror mov pop jp aas mov popf fidivl ret jp (bad) cs ja push jb test sti jle inc inc (bad) xchg inc cli mov in ret ror in sub mov jge adc jp xor sbb stos sahf (bad) xor and add negb pop jp mov sub mov add mov test jp lock jne push lcall lods (bad) outsl mov jns jp inc xchg sub loope inc jmp or mov cli scas jecxz in sar mov cs mov pop cmp cmp stos xlat jp and sub add pop hlt aaa cli jmp jecxz push push pushf cmp clc fisubl mov insb bound test aas mov mov es ljmp imul (bad) xor daa xchg dec xchg jnp out nop and lcall icebp ror imul pop ss mov and rolb lock test idivl sub mov das ja movsl int xchg push cmp sbb fcom scas xchg mov imul xorl jp sahf pop aad adc push cmpsb sub lcall jg xchg push or push mov sbb mov stc cmpsl mov iret cmp in sub jp rclb daa fstl or cmp jp jnp pop rclb test push or and stos push xor pop sbb adc push scas ja adc jns call imul jb lea neg push lds popa xchg push mov insl pop imul adc push jne mov adc xchg cld cs int3 mov adc push ss jbe fldenv enter das lcall cmp jnp andb rorl mov dec inc sbb push lcall bound dec mov stos pop jmp cmp pop jb xchg sub in mov sub (bad) fidivrl adc push mov pop orb movsb out (bad) jnp pop pop stos sarb pusha out (bad) stos outsb cmp outsl loop and sti pop xchg gs sub ret fistpl (bad) and cli fs arpl push push jmp inc and (bad) (bad) push shrl stos outsl sbb gs sbb xchg enter fcmovnu sti stos out jb sub mov xchg outsb sti mov pop inc sbb popa scas ficompl jmp add mov pop call jne imul add ja gs into inc jae (bad) mov aas ja out pop std je (bad) jmp and mov dec mov xchg jle mov push jne and push push adc out lahf fsubl jne jle leave and (bad) adc jp cmp sub or sahf stos mov int3 jb (bad) cmp jp sahf mov mov test jne add push pop aas and lahf jns lcall jnp pusha insb ja xchg das gs mov and (bad) xorl test sbb ljmp xor jne in into jo cs negb (bad) xor dec push test mov jae add jnp outsb repz cmp icebp jo bound jp fisubrl cs sbb jno insl (bad) popa push repz jp cmp fcomp jne insb mov adc in jns dec dec das mov inc rorb daa mov pop test loope pop mov mov inc jne arpl scas cmc push mov xchg adc nop scas std mov inc jp inc das js mov and fwait jp mov sti mov divl push repnz adc jp sub jb jp dec lds mov sbb test pop aam leave jbe and dec pop cmp ret test js pop inc cli xor jg xor cmp push aaa cmp mov jae out enter iret repnz mov repz and sbb sbb push das imul cli jge adc mov (bad) int3 sbb fsincos jl rcrl test cmp jne xchg add mov in je push push push sbb xor dec lods in jne test (bad) lcall test inc jle push jp xchg test ds jne loope xchg stos enter cli cwtl sbb in mov rcrl mov cmp (bad) bound stos mulb jg jp scas call out cmp stos ja xor mov jbe sbb popa iret pop push stos sahf adc (bad) jp out adc clc testb insb lods adc and movsl jp sbb jbe push jno insl loope or fcomps dec sub aas xchg in (bad) jp jl pmulhw push (bad) jp pop loopne mov push fwait je test (bad) insb int mov gs iret aaa std jg cmp inc mov sbb add rorb sahf aam jne cltd cli xor adc mov jp jmp jne mov ret add shlb push add pushl fcomps je push xor mov or mov jne dec sub cli cmp test inc jbe repz xchg cli aam ds call js sub dec popa inc ja mov cmpsl mov mov xchg sbb xchg mov rcrb lahf mov adc push push in insl jl aas rorl jo mov jp pop jl sub pop adc jbe div jno inc aad lcall out shll fwait ror inc ja add mov jecxz inc jno sti mov (bad) jbe jne inc popf mov sub outsb sub ret pop aas cmp xchg in inc push ljmp sub cmp icebp lret shlb lret lret push sub and push mov push lahf adc mov dec fs lcall ja jmp call imul sub stos push pop xchg insb loopne and push stc jns cmp int mov in push jp js outsb xchg lcall pop testl cmc cmp push xchg and shlb movsl sbb cli stc lret dec outsl imul test jnp fwait jp shll pop mov popa pop push pop push mov in imul aas mov ja mov xchg imul inc sbb adc sbb lret jle inc mov (bad) jmp aad ja push xor cld insl xchg jbe fnop dec mov imul dec ret push xchg out push xchg es pop sub daa les mov cwtl sarb leave jp stos dec cmp stos adc movsb daa cmc insl xchg stos stos ja js add and jnp mov rcl mov hlt stos xor cmp mov addr16 pushf inc std jl (bad) fisttpll xor push in mov jp mov or stos aaa fnop lods pop jp int3 lds jae dec fucomip mov and out hlt icebp pop enter dec in sbb mov mov xchg loopne mov imul jnp leave test daa sarb add flds pop jecxz fdivrs leave cmp push fsubp dec and ret jo cld je stos pop pop mov scas cs dec gs cmp out fstl fisttp xchg jae push (bad) lock mov scas insl push lods stos mov clc loop movsb adc and fs xchg fild jbe test push inc push add sti push (bad) dec jle int or addr16 movsb js and cmp pushf adc movsb pusha cld movsl pop stos sbb xor mov repz cmp inc fs sbb adc stos int inc in jge push popa or or mov mov shr add add fadds cmp outsl or dec mov mov setle or popf ja stos jns into movsb cmc pop push loop mov xor add or inc lock pusha loop mov aas rclb or pop or mov arpl mov adc aam mov push mov (bad) mov loopne pop (bad) inc std sub out jnp pop or add fsin dec push jp stos jmp and jecxz fisubl lea mov repnz dec jp gs or gs mov ja test xchg outsb movsb cmp das add pop push (bad) in mov cmp and push xor test sbbl imul mov sub and dec movsb data16 mov or adc cmc jbe ljmp xchg mov add aad cli xchg cmp inc and adc into iret ss in out or stos add leave xchg mov mov movsb (bad) outsl mov cmp pop inc cli sub insb and cmp cmp test pop push addr16 or sbb jne push test mov int dec cmp mov pushf sbb jp (bad) (bad) movsb into in add lods sbb sub cs pop sub iret push push ds push arpl shlb popa pop add gs stos lret xorb iret int ss sbb pop inc (bad) mov mov rorb sahf and pushf sbb adc cmp (bad) mov jl mov divl addr16 cmpsl insb add rcrb or jp ss jp xchg pop sahf insl fcomps movsl push fisttp ljmp gs and shll dec push lahf fisubl fidivrl mov les movl sub cltd rorl pop (bad) sbb jp in mov ja xchg ja mov js in cmovg pop push xchg dec jp,pt jmp push sti jns or mov sub lahf shll mov call imul push ret jbe xchg dec fwait push jp mov jns jp cmp or pop mov mov insb imul push sub jne call icebp push out mov fnstcw mov mov test cwtl jp xchg lret icebp dec test cld jp dec sub pop out fsts rolb push nop dec scas add jno xor pop jb and cmp mov pop mov jp or push call stc (bad) jno (bad) je movsb xchg fidivr pop cmp xor adc mov imul enter test push xchg fdivl gs insb stos push loopne inc ss pushl mov sbb push (bad) repnz jne das daa xchg push jecxz mov in mov jge push stos add cld jle jp mov jl xchg push popf aad mov push repz dec lock punpckldq mov lea ret mov adc inc adc aas out mov int adcl dec out and sbb jno cli js inc pop dec inc imul outsb mov mov jge test sbb jnp pop fildll jnp adc out gs imul movsl jp inc xor aad scas jne fisttpl std aaa mov push lret cs or lcall imul pushf xlat sub cltd jle jp jecxz jae in jno jp scas aas es mov cmpsl loop jnp mov push fnsave inc jp xor stos lods fdivs stos lods push pushf insl adc ja or leave mov in push out jp popf mov stos push jl imul je add jns insl jmp pop ret sub imul and or mov or cmpsb fisubr push dec popa sub mov inc loope add push adc pop push mov sub std mov popf fistp or inc sbb sbb in mov cmp (bad) cmp sub pusha push add mov push test lahf jnp stos push cmp jp xor inc ja hlt mull mov stc and mov jno rcrl xchg xchg lret inc mov (bad) mov push or mov jae cmp out test mov mov push mov xchg mov pushf pop sub mov dec movsl dec xor cmp xor mov cmpsb stos dec enter (bad) adc aad lods sbb inc dec inc pop lea adc aam mov outsb xchg inc adc les cmp in pop adc cmp dec ficoml sbb mov call push cmpsl (bad) xchg and mov sub out ja out popa vpaddq push popa mov mov fwait sti pop test in mov jne add cmpsb enter adc pusha adc mov (bad) sub loope jp and jle (bad) jne test sti and test mov fstl jnp add lods add sbb outsb dec push stc (bad) add repz jno mov ljmp push imul push adc mov pop cmp out push lds test lock inc jecxz outsb insb loope enter and pushf (bad) or add loope and xchg push jge push stos cmpl fmul jp aaa cld imul into inc jp int test and or pop test rcll leave inc sti adc inc dec jg jno loopne sub cmp mov je xorb mov imul fildl or loope sub jp addb inc xchg push aad shlb jmp jp jmp inc out inc jb int3 fs cmp loop add jns pop aam enter jp cmp insb mov movsl lea mov or loopne push xor jmp cmpl or mov mov and cwtl jb cmpsb jp inc mov sub idivl jg ja sub jp lock in jmp adc mov cli and inc push add into (bad) repnz insb mov or adc or fiaddl adc and push fisubrl out push or lcall repnz loope gs jp mov or lret or sbb push movsb xchg sub (bad) lret jns insl lret imul sahf loopne stos ret mov roll int3 dec push aaa es lret xor in out push in add push decl aaa pop cmpsb xchg jl pop jb push mov outsb dec movsb cmpsl lret idiv push xlat mov cs in xor js cmp xorl sub lret nop cwtl pop adc jbe or ljmp addr16 sub icebp sbb jbe stos ret enter jl sbb dec (bad) fcomps sbb inc pusha pop movsb jae inc stc mov gs mov sbb fidivl jmp repnz jno leave push popf xchg sub mov enter stos dec cmp outsl cmpsb push movsl dec push and jecxz clc xor movsb imul enter ss mov lock and lea sahf inc xlat dec push repz or sub addr16 inc add dec mov sbbl jmp xor sahf dec stos data16 add rcll fidiv dec xorl adc or pop mov mov popa mov jns ja pop inc in or pop jo lods sbb push stos jl cmp fistp out movsb (bad) adc loopne iret std or xchg lods adc rcrb push test gs cmp mov pushf mov stos out ja dec popf stc adcb jns (bad) stos test sbb xchg mov add sbb pop jnp icebp pop xor and xchg hlt pop fildl jl cli mov aam cwtl and mov in in xchg pop in mov lods aad push imul shrb dec mov dec pop or hlt mov stos gs mov movsl arpl stos cli xchg inc ret mov cwtl jle mov hlt (bad) stos jle sbb leave pop out cmpsb (bad) ja push scas fdivl hlt fst lret jp push jge xchg cmpsb int3 out shlb decb out push stc out jp enter push jb movsl cmpl pop in jno inc in mov jnp mov push pop xchg sbb stos jne push and stc pop lods jp push (bad) xor ficom dec mov mov xchg ja stos jp pop pop mov icebp sbb sbb stos mov out cmp clc jmp mov leave lds ret mov imul lcall pop fldl2e nop sti xor sbb mov cmp mov jo jp xchg gs in mov div (bad) cmp stc jp jnp and jecxz cwtl add insl in mov sahf adc jp or loop xchg and out sub (bad) int mov push jne cmp ja xchg inc ret jno mov popa push pusha dec cli out test mov mov insl mov (bad) jo push adc data16 popf stos mov mov das jp dec test or aas adc test or shlb stos mov mov aaa dec inc sub mov sub jecxz icebp ljmp jnp loop sbb imul iret pop dec jae scas dec push pusha push movsb jp lds loop push sbb jnp cmc outsl test mov cli jp fnop push not jp fwait mov dec cmpsb jge pop imul lret pop lcall les mov push ret jbe push fidivl jp loop xor inc lods cwtl fidivl cltd jne mov js mov cmp into cmp insl (bad) neg push fistl and and mov lods push hlt jnp inc push or ret loopne inc test jno sbb xchg pop aam push dec mov xchg leave ja inc pop mov or (bad) cld mov lea cmpsl xchg out jp shlb jmp xchg push jp aad into test inc (bad) jle arpl push outsl push and push or jns cmc shll add sbb sub fwait jp or jnp cmpl mov dec stc call lods jmp adc mov cmp cli sbbl in addl mov jne dec cltd mov daa jp pop push sub jno sub jp dec sub jbe dec dec insl mov push jnp sti incl jae fistpl or jne add push mov cmc mov je lea mov jecxz mov jno or test jp hlt shlb jp out adc sbb dec mov data16 adc or (bad) ja sbb inc inc jp (bad) pop shlb jnp add mov jno cli (bad) jge xchg test sbb mov push psubd push or inc mov dec sarl stc add mov test jp cltd sahf mov xchg insl mov es cmpsb push sub les movsl sbb mov and ja dec mov or xchg jo popa test (bad) jp pushf xor push add rorl popa stc int out push push pop jl popa adc sub dec orl jg jo jle jne sti jns addr16 fldenv jne or mov xchg mov inc lods jp adc ficompl push loopne aaa jnp cmp mov or (bad) pop xlat cmp mov shlb lods inc mov das addr16 jae in cs lcall pop jmp pop lcall jne jl xchg cld loop int fs ficom cmp addr16 mov es sub cmpb mov add xacquire sub outsl loope mov mov or jle mov movsb fwait call cmpsb jp add jns cmp lret ja fmul imul sar dec ljmp in pop sbb inc rcrb std mov fistpll mov insl lea mov and das inc jbe cmp insl ret fucomp lds mov divl add int3 (bad) pop fidivr pop fidivl jne pop std (bad) ss mov out daa jle (bad) icebp mov (bad) dec mov fcomps mov scas insl das out fnsetpm(287 add push or roll jp mov lcall sub mov test add dec xor sub bound add mov ret lock das jnp int aad ljmp and sbb dec cmpsl sub loope cld mov ljmp scas pop lds jno scas push cmp mov arpl (bad) mov jp leave jmp or push sti jno lods (bad) into mov in cwtl jne loope sub lret dec (bad) push arpl and jnp jae push rolb jp mov or popf jg daa test gs push sbb enter mov inc insl add mov outsl jns adc cli std das inc sbb insl cs push aas jp es fwait pop push xlat sub ret jo cwtl dec push mov dec shrb lcall push sub fidivrl iret stos loop dec jmp popa xchg jo sti cli iret jge jp sbb xchg pop jp push push xorb addr16 popa fmull cmp icebp movsl xchg mov adc imul lods cmp fisttpl popa sbb ja xor mov lock or (bad) mov and dec push push inc gs ja shll (bad) xor jp fistpl stos stc clc jp lock pop into xor xchg sbb fidivrl sub or mov adc ljmp sub sti cmp pop jp cmp push and xchg fmull jecxz adc pop push imul rcrl jnp cmc dec ljmp xchg call outsl stos (bad) lods mov (bad) fiaddl ljmp fmuls (bad) add bnd pop aad jecxz popa cmp and sub loope cmp rcrl pop cmpsb lea in jge fstps sub pusha push adc clc gs jnp mov addr16 jge jl je lock add adc insb loopne out push fistp cmpsl jnp fs jns xchg jp mov pop cs dec (bad) mov sub jns gs hlt cmp pop xchg jno mov ljmp andl or js pop jns sbb cld jne fucomp (bad) inc jne mov and add ljmp mov jp add and imul jnp hlt sub mov pop mov jmp out mov sbb pop test lods mov or loop jp aad pusha and mov adc out or sarb jo jne ret dec scas sub adc mov faddl jg push shrl sbb hlt pop adc leave jae pop jp int3 dec sub inc aas jp dec push data16 nop jle cs out jnp (bad) sbb cmp jnp push repnz ja ss cmp insl aaa fdivp or jmp cmpsb push cmp mov jp inc (bad) sarl imul fimul lret cmpsl add cmp lcall lods (bad) stos or jp sbb lock pop daa lret add cmp and sarl inc mov pop imul xchg push mov cmp or in jns pop inc xor cmp aas (bad) cltd jns in inc inc movsb leave popf pop pusha dec jmp xchg daa daa cs popa pop inc out fcompl daa xchg ds out mov je stos dec mov pushf jp mov xor stos xchg call mov sbb lds leave mov shrl test jne test cmp cmp imul sbb inc inc stos mov sbb aaa imul pop mov rolb mov pop cmp adc rcr pusha out sub push push cmp js es sbb jp loope fs push ret jmp cmp insl pop rorb into push mov cmp test in (bad) mov mov lods push xor loopne pop jae dec sarb mov adc pop xchg and jp lahf lea jp (bad) test out push pop nop jb cli mov enter pop xor push or imul mov int sub mov arpl mov mov add imul ss pushf loop mov icebp sub mov cmp adc mov stos repnz mov idivb sbb gs cmp (bad) addr16 inc insb cmp pop (bad) mov rorl cmpsb xchg jmp test hlt and inc xor inc jp mov bound das dec add int insl pop inc jb cli lcall jne loopne lods repnz mov fcompp sub sbb push and mov jns pop dec xchg out sub lret sti mov mov adc sarl fwait cmp pop insb mov (bad) ret add nop cld xor and cmp and push scas sbb stc jae popf inc cli sahf mov jp iret in dec dec test jp rclb popa das jno push jnp (bad) jecxz gs enter mov jne pop sbb adc xchg xchg cmp mov stos xchg jp sbb push test (bad) xor adc les (bad) in cmp sbb stos mov mov lahf and roll pop ret ret mov cltd push loop xchg lcall jbe or fs mov push or mov (bad) mov fldcw in cli aam lcall pop xchg push and not jp and adc jp or leave mov xor movsl into dec cmpsl xchg jge push imull enter jp and push ficom aad ja dec bswap je pusha (bad) xor lahf loope mov inc pop testl out repnz pop jp js nop jae adc mov inc pop leave (bad) fildll cmpsb sbbl out scas dec mov scas mov test insb sub lock cmpsb or sbb sbb mov and cli push movsl push daa dec jnp mov lods push in into jno les bnd xor inc out mov cmc in fdiv cld cmp inc or sbb int ja mov mov icebp inc repz jp add jp repz popf aad and insb dec and and data16 mov ja mov xchg imul inc xchg pop stc xchg sbb push lret sub sbb cwtl sbb test pop push popa fdivs or imul mov jle stc ss mov cli jp loop jae ds int insb loope fimull mov in push jne or mov mov jge jbe add lea test sbb mov hlt pop jnp xor jb (bad) lods call mov fwait sbb aad jnp cmp sti jg mov jp mov mov fldt lcall jp push cmp aad jp mov lds mov mov test daa fwait (bad) arpl cmp mov fwait lret jp add fdivrl scas out push fnstsw gs pop pop rorl mov lea push fwait lahf movsl repz stos add cltd popf push xor fmul call lahf fisubl jnp lret stos sub xor fwait cld das xlat pop rclb mov jo mov and pop pop cli or xchg add jnp jae movsl jp jge ja decl xchg enter out cs dec pop (bad) clc pop outsb xchg mov jl add mov jg or mov xor in dec jl insl icebp mov gs fild jno xchg dec mov push (bad) lcall mov mov push xor je cmp jae cld shl cmpsb and cmp sub loopne fwait lret push adc outsb mov call jp mov pop xchg int3 dec fmul jg fildll mov lret les cmp jae sbb (bad) sbb jp cs lds imul jne cmp ja popa push sub (bad) jnp aad xchg (bad) imul push sbb jns and negl jbe adc out dec mov cmp ljmp dec loop test rorl add dec or hlt pop enter sbb loopne mov iret or or inc xchg jb pusha loopne jl bnd jp or pop in outsl roll jnp sbb je (bad) hlt jge out call and cmp nop push mov pop stos pop jecxz and mov insl dec mov or add repz ljmp mov cmpsl (bad) dec and sbb and mov add add sbb inc push scas mov push mov add popa arpl imul cmp fimull or and push in cmpsb int3 dec popa gs (bad) int inc loopne xchg jp mov cwtl fdivrs pop jmp mov cmc jecxz pushf jp adcl scas sub add xchg cmp jmp dec mov or or inc or fisubrl cmc mov mov push int sub mov jae ljmp mov dec ficompl jp int mov aad jge pop nop mov pop lds cli mov ja or push sub cmpsb or push xchg pop fbstp mov mov xchg mul or xor in inc shrb xchg pop sbb out pop jp dec add in stos xchg jg push jecxz jmp xor repz out jp add pop pop xor dec imul jne push mov mov push ret jae push or lret addr16 into sahf outsl movsb pop (bad) dec dec jns rcll jo pushf shll jp dec outsl xchg cmc insl loopne popa lods sahf sbb repnz js mov inc subl insl enter out bound pop mov jo sti or push sbb gs xlat les movsb nop mov shr insl ljmp jp push lods nop and les inc xchg pop jae stos jne mov xor mov ret mov or mov popf jno push xchg ja int3 pop mov lods pop jp fistpl lock pop (bad) jp xchg pushf rcr aam mov mov cmc decl jp jge cltd out cmp addr16 dec out jp add fisubl jp push pushf stos jp cltd repnz popa inc pop outsl pop mov sti cmp xor mov sbb inc mov insb jp stos js in push fucomi jp rcll add and shlb rorb test int3 pop subl push cwtl add jmp jp mov sbb inc gs push jp popa scas xlat fldl push mov mov andl inc mov imul mov aas ljmp pop sarb leave sti jp and vpunpckhqdq (bad) arpl sti cmp adc addr16 xorl (bad) xchg inc pusha push movsl pop dec les lret xor dec pop dec clc jp int dec ret jnp and outsl (bad) add stc or mov cmp push jp mov sub push xchg in inc jl xchg jp stc cmp push bound mov aas daa jmp sti insl cmp hlt jp rorb xor push xchg (bad) cmp jns jp loopne sti dec jmp dec cld lret stc cld push xor and (bad) mov add xchg sbb (bad) and ja inc xor xchg xchg xchg xchg test adc xchg jp sub hlt leave jp iret sub in xor and mov xor in popa sbb data16 loop ja cmpsb jnp icebp daa lods (bad) pop (bad) out dec pop mov inc and popf cmp mov sti jns movsb sbb dec jno cltd push ret xor leave adc ja movsb dec sub sub loope ret aad and dec hlt jnp scas clc jbe movsb dec mov fnstcw (bad) push call lea xor popf stos xchg dec push push add mov and cld rcrl outsb sbb sub shll push mov (bad) int3 jnp (bad) lret pop adc insb mov push cmp iret ljmp and (bad) data16 jl addr16 and jnp dec movsb jp fdivrs mov pop cmp das jg lcall and ljmp lock stos jmp inc xchg sarl pop mov gs insl xchg rcrl jp mov cmp dec lret out xchg push (bad) hlt cld mov mov push cmp bnd loopne cli ljmp dec xlat mov movsl sbb add das pmaddwd sub mov cmp mov jecxz xor stos or or xchg mov repnz xchg adc jp or pop repz cmp xlat jg sti push popa sbb cmp cmp cmc jl jnp stc sub imul jp aad bound ret out pop push cmpsb cli (bad) rolb pop mov rorl fistpll dec enter push pop (bad) int add pop dec adc mov cli insb insb mov mov out dec in push in mov adc scas jp ss jmp pop popf lret out stc mulb inc fcoml mov mov lcall xor repnz add mov cli clc bound xchg pop sub sbb loop dec bound mov into mov mov jg cltd sbb flds movb sub inc jne lods les adc pop push or insb xchg jnp ficomp mov mov movsl imul mov bound out lock scas jp inc xbegin mov jne and sub adc sbb fistp ljmp cmpsl imul lea push imul xchg (bad) pop (bad) jns xor (bad) xchg sub jp mov sbb stc lods jo sbb mov dec mov mov jp scas lret mov mov cmc repnz movsb les sub jne fidiv gs out fcoml repnz and ret mov jnp sti enter inc outsl sti cmp sbb imul sub mov mov cmp (bad) jp sarl imul pop sti jp ljmp lret mov add lea cmp cld cmp jp inc dec scas dec adc xor dec cld sbb or mov dec cli (bad) jecxz or movsb insl scas xchg gs std push push in sub dec ja dec dec mov jno loopne jo sbb ja scas sti mov push inc insl mov jp xchg and mov jae xorl adc inc jp imul inc leave cltd xchg (bad) jno test xchg or pop jnp lea jns push add (bad) mov dec and clc fcmove mov (bad) jmp stos jae cmp adc jp in inc sub jp sub icebp into add add (bad) xor ret or cltd jnp je (bad) jp sbb icebp loop andl insl inc jge xchg out imul mov arpl cld mov jp inc out imul sbb in iret adc les adc test fwait xchg sub stos addr16 pusha lahf mov jp adc xchg (bad) sbb jge ficom icebp fdiv xor cli cmp ret or popf bound mov mov jg (bad) cmc jp cwtl xchg mov xor sub lods xor add pushf insl pop pop imul adc add rclb xor inc loopne sub dec (bad) iret (bad) sub ja imul leave (bad) jne dec sub push sbb inc cli cmpsl jnp test jp dec pop sub jp imul jp div jns sub (bad) mov rorb testb jp mov jne std jae popa pusha dec and sti in lea jnp aas aaa dec inc cmp movsl bnd sti push push stc mov insl add cmp roll jp push iret dec movsl mov pop pop push stc jns (bad) inc sub pop pop mov xchg data16 shll daa ds cwtl jp outsl fwait cs or pop jp jne xchg mov stos pop aaa test pop jp data16 mov lea add adc jl cmc xor jp mov adc jp sub pusha gs and gs inc iret stos gs xchg jge lea cs pusha lock jle ret inc xchg lds lock xor mov mov ds out enter mov cmp xor (bad) jle mov jmp imul inc std xor mov aas sbb (bad) je or (bad) rep ret cli inc jno pushf jp in push pop shld mov inc xchg mov je add jmp sub mov test cld dec out jnp mov bound ja mov add lcall data16 xchg add fsubrs mov push dec and mov cli sub cld stos lret aas mov leave lds xchg insb (bad) scas in and jp sahf push sbb inc lret push dec das (bad) xor hlt jnp jecxz dec cmpsb jno inc jge fs fdivrs daa imul popa icebp lret stos scas dec in jno mov fnstcw int3 imul and mov sti push ss jp test fstp cmc inc mov dec ja rcrl (bad) cmpsb int3 scas leave sbb mov dec (bad) dec ljmp push sbb mov jl lcall mov loop xchg jb fdiv clc insb sbb adc cmc insl (bad) mov fwait jp sub int mov push outsl mov pop adc aad mov leave nop mov mov jp push mov jg shlb push fldenv idiv movsl jp lcall gs into stos add lds jbe fdivrl dec add wrmsr int jno sbb test mov imul sub gs jmp jp xor (bad) fdivrs cmp sub fdivrp push jp scas lds loop add cltd sub aam je clc loope jp popf push (bad) add insl pushl gs lret adc loope push jp ficomp cmp sbb sarl adc ds mov mov lds mov ja sbb repnz and xor or mov mov pop cmpsb daa inc popa mov mov push sub mov inc xchg or jg pop call call sub jo dec daa (bad) pop mov js mov jp mov icebp ret mov sub hlt (bad) fdivrs and jp sbb lahf sbb gs dec pop mov mov jne mov (bad) js jp push mov jno jns bound dec (bad) test dec lret push jp loopne pop sahf pusha push (bad) jne xor (bad) and jnp or mov xorb jne and pop (bad) adc dec stos dec movsb xchg or adc icebp sbb jp and int insl insb mov add add out push (bad) pop sbb mov xchg mov push mov jmp or mov popf sbb jp insl sub (bad) mov xchg aaa in loope push mov sbb aam xchg dec das (bad) cld shrb jp mov push mov test add in push and outsl xchg adc (bad) cli cltd fistl rorb lds jecxz jp fist or push stos int3 add lret out xor repz or fstpt fwait mov pop pop cmp ja scas push xchg push sti rcrl add xchg bound xchg stos cmp lcall lret push pop push pop jae nop jl xchg xchg cmp mov add shrl imul and inc stos daa pop mov sbb jle and movsb push scas mov fucomi pop inc push xor int add inc fimull gs ret ja addl fxch movsb jno jne xchg cmp pop sbb add loop test or cltd sbb mov popa inc mov stos dec fwait int (bad) fldenv add inc int push aaa sub imul in leave mov cwtl sub jmp cmp jmp cli cmp pop mov (bad) je fldt leave dec inc pop cmc jae int xchg (bad) nop sti ds pop push mov mov dec cmp pop stos test xchg jns jp mov rorb xlat push or fcoml mov fildl dec aad mov test pop jmp stos sub call sub jb cli pusha repz mov push movsl mov push mov movsl inc jb aad push inc stos (bad) and jb and add dec pop inc pop mulb xchg xchg (bad) pop sahf movsb adc jae lcall dec ds (bad) mov lock cmp mov jno pop ret dec dec enterw cmp std mov mov inc movsb test stc out cld lahf or loopne pop shlb xlat mov stos and std xchg aaa adc jns data16 divl jo pop or in fldln2 push and push lahf xchg js push adc pop add inc stos mov jl pusha xor nop fs add pop out rep subl push xor push sti pop or ja imul bound js push xchg xchg out or xchg pop xor ja daa fstpt dec mov cld repnz arpl jl mov dec stos jns push jno dec push movsb sbb daa rcll addr16 loope xchg pop arpl sbbl and adc add arpl (bad) mov cmp fistpl and mov cli stc jmp xor mulb adc push fild inc push add daa cmp or cwtl sub movsl sahf inc es xchg in sbb repz fdiv sbb cmp jecxz (bad) sub loopne ret jne test dec sub mov cltd insl fisubrl or pop cwtl ficoml xor (bad) lret lcall gs mov xor mov jle (bad) incl sahf or xlat fs (bad) bound mov fcoms daa cmp jae sbb roll sbb je les jp ret sbb or and adc jp jg dec pop jnp add pop pop lods cmp (bad) pop repz push lock cwtl fidivrl loop insb inc popf or sti sbb mov push xor xchg scas gs notb xor pop lcall cmpsl jne jno and test jp xor outsl lret movsl dec out arpl fstpt adc jp push mov jp mov add jl ljmp outsb push push (bad) fdivs mov test sahf add jno clc jmp pop enter and stos insl push xlat arpl fldpi sbb test (bad) push aaa mov jne rol mov mov cld (bad) fnstcw add push add jp adc ret dec stos test mov mov and (bad) jp mov pop adc jp cmp mov mov add xchg sahf jp adc pop int3 xor jno loopne stos stos pushf jle jp mov inc icebp rcl fdivrs shrb xor sbb dec mov pop sub mov mov (bad) xchg js sahf sbb pushf lret cltd xchg and or in fmull stc iret mov aad jae jnp jge dec jp pushf dec gs lock cmpsb xchg or (bad) inc test xor in scas sub pop push push mov mov fidivl add shlb lock mov mov xchg pop ds jp outsl dec jg mov clc jp lahf xor cld lock pop pop ficom cmp mov fcomps jns fldl fcompl xchg ljmp pminsw jnp or jno mov cmp aam add xor lock jae pusha add and lahf push add inc (bad) jp daa sarb jp das mov pop add stos inc jne inc mov adc arpl inc insl pop jnp stos icebp dec out mov rolb push stos and sbb jae or inc movsb (bad) fwait pop mov inc dec xor shll cmp adc stos std dec (bad) mov sub sub mov fbld pop push test and mov and lods push scas and out sub mov add outsb jl (bad) ljmp sti mov and aas inc rorl jae dec ljmp adc nop adc int lds stos lds sbb aad out jne jnp pop sbb jno inc sbbl (bad) xchg cli test (bad) testl fcoms sub in stc and inc cmpsb jp pop cmp mov and jp sbb push movsl fidivr stos jp cmp repz lret in lcall lcall and jp cmp movsb (bad) jle lods jae add jmp fstps push jp cmp cmp lcall push add add bound jno jg jle dec or jae (bad) inc lods mov xor outsl jnp inc icebp fwait xchg es mov sub mov sbb lahf xchg jne mov cmp push xchg push jbe jle loop dec sub sbbb push sub stos cmp cmp jae add jo test jns push jp mov int pushf je scas mov aas sar cmp jp dec das out xchg roll cmp jno call sub popa popf jp and jge loopne cmp scas jg add fistp jne mov fnstsw test out pop scas dec and pop push aaa (bad) cmp cli fwait pop lods cmp push scas lods imul mov ljmp or lock (bad) popa dec stos nop pusha mov test out fmul cwtl cli jp dec pop (bad) and pop sahf imul insb push pusha xor jne sbb lahf pop ret and mov mov sub push pop xor (bad) jle push call ret icebp aad jp dec ljmp pop mov mov decl jmp jp push nop gs fsubrp test sub stos jp jmp imul dec imul jb and insl dec mov or insl stc cmp jp xchg ss mov mov out mov xchg out add cli ds add push loop (bad) mov mov loope sbb cmp cli iret mov lods xchg jno dec and insl (bad) and andl xchg push je pop jne (bad) pop aad and sbb lcall ss (bad) in mov pop fcoml scas int3 adc stc cmp mov test popa or xor das inc jae in notb stos lahf mov cwtl in add movsb aaa ljmp ficomp lcall cmp sbb iret and arpl pop push push (bad) jae push inc int loop xor sub xchg cmp push mov cltd gs test xor cltd bnd cli imul push sub jge popa gs aaa push fisttp mov sarb mov out leave test dec xchg pop ljmp jmp pop xor scas mov dec mov xchg and imul mov or mov (bad) xor idivb add sub das mov dec dec mov rorl or cltd push inc or jp loope rcrb mov das loopne sti jp add fwait bound clc mov out jg push sbb out stos shll xorl inc xchg xchg jp lret test test and and jae mov jp cmp pop sti iret push lret push add jp test stos mov jp or and pop cli jb add loope sub insl add decl (bad) jne mov ret (bad) mov out rcrl and sbb ret insl mov sahf iret movsb jne shlb jmp aam stos jno mov add or (bad) push cmp cmp jnp mov mov cli cmp jp pop mov dec lds mov add lret (bad) xchg push sti popf enter out add mov aad jp and inc push pop sbb dec imul xchg mov adc jp mov xrelease mov movl aaa jp and loope cmc std jp (bad) fidiv or pop jnp add xchg cwtl jne mov jp out gs mov test xchg test mov or and pop xlat mov or jp pop jmp pop pop pop jp jl xchg xchg fcomip sarl sub incl and adc js in xchg mov ja lods test mov imul and jle jp or nop sahf fwait jbe add dec fisubl mov cwtl ss xorb sbb sub addr16 aas inc cltd fnstsw mov xor mov jnp in pusha push loopne xchg test xlat popf push sti js out inc pushf jp jge jecxz sbb lahf and jnp (bad) fwait push movsl ja mov mov push subl sbb aaa inc adc push or decl xchg lock add lea dec jp pop sbb mov pop and xchg (bad) xor mov insl mov mov lret sub cli and mov xchg mov loope negb insl stos dec xor je inc jns xor xchg cs pop sti cmc cwtl and push pop adc jp xor out dec or (bad) dec lret (bad) cmp fistp les sbb adc into xchg (bad) pop iret pop mov or add (bad) jne xchg or jp mov lds fistp jp mov xchg ret fcmovnu and call insl les andb lcall mov mov push out mov or (bad) inc xchg dec subl es mov mov add push mov mov popa push add or pop push popf ja test sar push sbb sub cmp pop loopne add mov imul or stos adc fdivrl mov jecxz pop call insl lock movsb repz xor sub sbb mov subb repz sbb stc dec int3 inc inc out rolb mov loope push imul xor out cmp cmpsb jecxz mov mov jb mov push scas std stos (bad) lcall sahf or push push jae mov lret push bound les aas sub jge,pt xor sbb cmpsl dec (bad) movsl cmc stos mov push das cmpb jb out insl stos cld mov inc push loope inc sub scas enter adc repnz movsb mov adc fild inc fstps imul movsl mov push mov (bad) mov mov pusha popa jo int stos movsb push popa add xchg push test shl cmp movsb mov addb fs dec outsl xchg mov ja pop (bad) sbb jg inc mov pop sbb lret sub mov add pop sub mov jno inc icebp or jae vaddsubpd jp jo mov pop xor lret lcall jl pop xor push clc jp lods das cmp icebp imul mov imul sarb int3 jp cmp popf push addr16 and ja dec inc push stos inc sbb dec leave cmp inc xlat (bad) jp hlt mov jns pop jp (bad) or ss pop imul cmp jp fs dec test shlb mov xchg cmpsl addb push jp test mov outsl (bad) ja pusha mov mov (bad) divb adc int3 sub jno cmp popf cmp lds scas ljmp mov cmp pop mov jbe lods jp movsl fstpt and js jp sbb push sub (bad) cli leave ss mov daa mov jp adc pop leave popf adc sub jnp add int3 ja inc jp bound lock gs mov (bad) pop sub rolb pop dec insl add xor das mov jp and mov inc jp sti dec fmuls lcall icebp dec sub cld or clc fnop dec jp int jns mov jp lods adc sub mov sti adc inc repz in (bad) ss cmp lret cmpsb cli inc and mov stc sbb mov aad jl adc jno (bad) sarl mov lret movsl cli xor push imulb and jnp clc jnp loop push jp mov daa js cmp call lods pop jge lods xchg in fistpll mov dec and or sbb stc scas insl test xor rorb rcll mov in (bad) mov jnp popa call add leave stos pop mov jle jnp or xchg mov jnp pop cltd cmp jb sub loope loope cmp or xchg add stos arpl xchg nop jp lods push pushl xor jp sti fcomps jp add mov test pop cmp loope jno xor jp or cs scas (bad) cmc xchg daa ret pop cli aam fwait jg xor mov imulb (bad) cli jbe sbb and scas push mov cwtl rcrl push mov mov in mov fwait imulb mulb jbe ret xchg cs mov cld ljmp int jl call push and jle add adcl push jae je mov fcompl into push sbb f2xm1 sub repz add dec jnp movsb out push ja jb cmp rorb inc lock out jae (bad) push sarl cmp lret fisttpl cmp aas in sub jae leave push ficompl outsl imul ja iret adc jbe hlt mov sti xchg nop (bad) jp mov insl out inc and or xor mov or inc outsl std add xor gs sub dec push sti in adc ljmp loopne (bad) jp xchg jge inc dec mov cmp mov jp ds icebp inc dec dec cltd sbb gs xchg add jp outsl lds pop jp das test dec aas (bad) repnz sarb cmp pushf data16 scas xchg jp dec sub lods and pop jp sbb mov adc insl jp shlb mov cli mov push jno or and push xchg and fdivs (bad) xor dec out add arpl scas (bad) fidivr fidiv faddl int xor pop out mov xchg in mov ficomp aaa or fsubrs scas and fwait fwait imul push negb cmp jp daa cmpsb sub jp fstl cmp push or bswap jno inc xor mov sti jg imul js jno mov out push fwait jle imul (bad) (bad) or push push inc sbb cltd arpl push push mov push sub xor mov (bad) sbb cltd sbbl inc jp cwtl mov xchg push xor mov sub cs or pop pop ljmp pop mov ret jno lods jp lcall jp mov fistpll (bad) adc push xor push fidivr repz je outsb pop rorb or enter lcall rolb adc loop imull cli es pushf sub std aaa mov fstl cli mov fnstcw stc push pusha dec dec sbb cmpsb mov int3 sub mov fnstenv push aad jp add mov gs inc out adc mov test pop fstpl mov add andl sahf addr16 sub add push xchg call inc fistp iret movsl mov mov cwtl jnp xor popa cmp pop mov dec jge lret mov sub sub add insb jp lea or cli cmp inc repz hlt push jns mov stc jnp lcall sbb dec in xchg addr16 in (bad) xor jp fistpl les pop or iret or pop mov jp mov enter sub push adc lods sti ja fist push pop cmp jp mov and xchg xchg xchg jae push pop fwait pop push cmp pusha push and insl cs jp (bad) repnz dec arpl (bad) lock nop and mov mov jns push (bad) cmp inc fldl mov leave push xchg lret sti pop pop pop aas and daa (bad) or push jl xchg jnp sbb pop idivb or jp sub call shld inc sbb ret jle fdivrs xchg div jmp dec subb in fcomps cmc mov cmpsb cmp fisttp mov jp or add mov cmpsl push jp hlt (bad) cmp insb lds in daa push shll add aaa lret clc xorl rorl mov sbb adc pop lret outsb sarb punpckhdq es movsl mov xor cmc fs jge mov dec jp xchg popf test xchg mov xchg sbb repnz enter scas test ds sub jnp dec mov (bad) and ret adc call sbb icebp (bad) dec sub dec push sub sbb adc in cld addr16 jo dec pop xor fnsave sarl cmp mov and dec or (bad) add jp sbb mov mov lret movsl lds out jp dec xchg dec xchg popa inc lock bound and nop mov mov out jp les ja mov inc adc mov decl cmp cmp bound pusha inc clc int3 pop and (bad) pop mov pop and gs dec push mov jno aas dec scas idivl push sbb out (bad) sbb ficom bound sahf aam mov dec stos movl ret lcall jnp pop mov (bad) in xchg movsb jb jp loopne adcl mov rol sbb out jg in es push stos shl jnp push mov dec inc sub add inc idiv fsubl pop push scas inc lock loop mov fist add push jp inc cmp repz sub out jno (bad) shrl push add (bad) loope cmp repz jae outsb inc test les mov (bad) cmp inc pop aad insb stos jp cmp int3 dec stos xchg data16 das lret mov in adc or push mov xchg pusha mov sbb clc lret adc mov out lret ret cmpl cmp je lahf sbb ja fildll mov sub mov dec lds leave stos shll mov pop movsl jp push mov jmp daa push ss mov int3 xchg mov xor fcomip cmp sbb dec test or (bad) movsl inc hlt fwait int lret arpl jp mov push leave sub (bad) scas cmp decl cld out enter and push jae sahf dec jbe lock pop pushf push dec sti and movsl sbb inc pop sahf push cli mov lret hlt fsubl pop xchg jmp les jp push and gs (bad) loop xchg jo cltd cwtl jnp inc sbb mov mov mov in fdivs gs adc inc imul inc jp popf cmp mov fcmovnb imul xchg call pop stos adc aas inc pusha mov jmp outsl add mov xchg sbb stos lcall test fisttpl and add ret pop or stos inc xchg mov dec ficompl aas cmc push ljmp push mov imul push sbb and sub cmp xchg ss (bad) dec cmp sti negb adc sub addl cltd pop xor pop jne outsl roll es clc out dec sub mov cmp mov push and dec pop in cmp jnp int mov jnp test aaa mov es and or mov push int xor push sti pop cltd sbb mov fistpll push lcall push cli mov scas add adc pop mov mov lock daa push fs int3 in jp enter imul es movb push movsb loope cmpsl xchg xor ss jne test inc push and jp pusha xchg jbe aam jp mov sbb push (bad) fsubrl and push jno mov ja fcomp mov push adc xor shlb stos and add imul xchg xlat mov insb jns add rorb fs cmp mov dec out (bad) xchg loopne or mov sbb mov in sub cmp imull jp and pop mov jne sub mov xchg jp rolb add jo,pn in sub mov sub ret scas push mov fwait test jns lret cmpsb push imul (bad) jp ljmp xchg jp (bad) sbb jbe cld inc jp dec imul jp push popa adc sbb adc jge ficompl clc mov das and movsb jne mov pop xchg jnp xchg gs push adc push jl iret movsb daa fild dec jo sbb repz adc sub bound xor push test jl sbb (bad) jp pop mov xchg pop or push push je mov mov jne imul scas mov push imul push mov jne loop or mov movsl test pusha push xchg jecxz lcall pop sbb and sbb lock mov loopne out out (bad) negl inc in scas lds jnp fist jne jmp push sbb ja add bound mov stos enter dec arpl sub jp or cld repz fildll and xchg aam insb jbe jp mov imul sbb push or and and sub cmpsl mov add cs mov push jp add pop rcr pop fdiv pop cmp inc xor aad fidivr arpl ret mov lea sbb pop sbb pop jnp in in mov pop jne inc test lcall xchg cwtl push pop js jp jo pop push iret xchg (bad) mov cld hlt pop xlat sbb mov (bad) jae lea mov jnp jecxz scas dec sub inc jp sbb fisttpll or jmp nop mov inc pop add jp dec or jne fwait push shl lret imul cmpsb xchg inc lods xchg fistpll jns incb incl mov mov adc dec (bad) rcll andb stos mov sar and jne repnz mov xor js outsl xor shlb inc (bad) scas pop mov fcmovnb int lahf mov into add push cmc cli or xchg mov aam dec in mov out movsb cmp out jg or jp fisttpll testb jae jp push je jno insl les sub pop aas jp pusha inc jle sub ja dec push mov lret jne adc xchg inc pop fwait mov xor jb mov insl mov imul das mov jnp sub jp mov rclb popa out gs mov in (bad) xchg in pop inc jecxz lods jp push inc adc dec pop sub mov jge jp sub jp in outsl mov cmp lret sbb fisubrl mov jnp dec fstl dec imul addr16 add pop stos movsb insl fstpt mov nop push divb mov cmc jecxz inc jp hlt lods addr16 xchg push insl (bad) rorb push out bound outsl cmp cmc dec adc adc or sti xor add and nop mov mov (bad) mov sub pop or pop (bad) std jp call add fnstcw dec pop dec push lods xchg (bad) cmpsb scas push mov sbb mov insl lcall out sub push stc jp inc push iret gs (bad) pop insl dec out pop pop outsl jnp lahf (bad) jp sub mov jp jecxz adc stos cmp pop pop mov int faddl cli lods xor lds and or fwait cmp jo loope xor jp mov (bad) fwait sbb into mov push xchg sub adc lahf stos jl (bad) pop lret xchg jmp mov mov (bad) sbb (bad) xchg mov pop enter pop sbb in iret jp push mov mov in mov jno fcom loop mov adc mov jne,pt ja lods dec lret outsb xor pop std aaa mov jl cli ja push test jne add out mov inc in jp jecxz inc repz sub jo mov je xor jnp inc cmp repnz jp mov test das lds sub adc sbb push jp cmpsb test jp cmp lea mov jg gs push mov sbb xchg add icebp jp jb bswap sarb lods mov pop pop popf xchg jp fistp mov adc mov shll int sti nop adc push fsubrs insl lds cmp out gs sub fdivrp pop fsts jg stc xchg add imul cmp sub cmpsb jp mov lds mov inc jp dec adcl lock xor xlat lock fdivs pop stos insl call fdivl mov jge add inc jne mov sbb mov pop lahf mov xchg push fs mov inc orb sub lods call push xor mov arpl aad int movsb jp mov sahf or dec data16 jns dec popa xchg pop adc aas imul jmp out pop or cmpsl cmp or (bad) dec cmp js cli xor push pop adc pop rcrl sub arpl rolb insb push dec xchg out add mov (bad) sub shlb or pop mov (bad) in (bad) pop sbb add jp mov out dec jp sbb movsb cmp and lods mov cmp test pop cwtl sbb mov push adc inc mov lock stos test jp sub xlat or fistpl dec out enter cli dec inc dec push mov push push fnstsw jne popa es sbb mov jle dec jge xor inc push jp adc or add or mov std hlt int gs stc fstpt dec imul adcb ljmp mov xor mov mov loopne mov bound andl inc and pop pop iret imul sbb imul aas mov pop adc pop sbb xor in xchg push jp lods push pop popf ljmp cmp popa (bad) mov dec pop imul mov cmp xchg nop sub daa je jnp shll jnp lea jnp pop mov hlt jbe jge loope js in lret inc xlat mov outsl cmp dec xlat jno fs sti pop pop add popa xchg mov xchg sub xor jle cli jb or cmp and inc scas push out and jmp movsb push pop clc pop int3 jg dec lods cli inc js xor add scas repz and inc sti and xchg jnp mov push pop jne adc (bad) (bad) into pop stos out movsb orl je pop pusha jno (bad) out js subl stos loopne jge mov or into cmp repz andl cmp fcmovnbe sub mov leave push ja scas or or cmp dec ret and lds mov outsb (bad) jg cmpsl (bad) pop push ss pop xor lds dec aam pop pop or xchg ja and and js ja fcmove repz idivb daa shlb arpl jg addr16 in cmp insl iret stc cmp out adc sub int3 clc pop (bad) xor pop sub xchg aad jl imul cld (bad) pop stos loope iret rolb mov add popa mov popf push rcl loop enter sbb push mov insl mov iret mov mov sbb push cltd cmc cmp movsb jle adc es mul and cmp xor inc add xchg je push pop inc (bad) fs sbb sbb in xchg and sub mov (bad) loop in iret sbb pusha lea imul or stos rcll mov aad rorb xchg mov cmp jns fstpt jne push sub sub cli fistpl pop inc jl inc inc xchg push shll xchg repnz mov and pusha pop fwait push push aad imul add xor (bad) out sti in es dec sub shll movsb imul push sbb and shrl stos jl or rcll sbb cwtl jecxz push gs push jno mov dec mov cmpsl je into fistpl (bad) lahf mov inc fs jl pusha xchg test mov mov cwtl jb inc out js mov xor mov popf push int3 repnz cmp nop and dec mov pop rorl adc sub jae,pt jmp movsl fiadd dec push repz sub jp aas cli sub (bad) fsts icebp jns or out dec outsb rol cmp pop pop mov jnp arpl dec ljmp xor aad stos cmp je pop push push push loope aas and push xchg pusha aas push int outsb movsb (bad) inc js ja mov sbb imul add sti push aad mov jo add stos in adc fs push hlt mov pop gs jl mov insl mov (bad) jno adc stos inc outsl (bad) stos jl loope rcr or mulb mov xchg jmp push or cmc cmp clc inc lret dec mov jb dec lret push int mov stos mov hlt and adc or or mov js mov fs dec stos sub xchg movsb sbb inc cwtl imul sbb fnstcw sub stos mov jbe add idivb push fwait dec pop orl mov push cmc scas pop and jp pop add xchg sub push clc push xchg cltd mov test pop shlb push jl out movsb fiaddl sub push loopne jge daa mov ret push or idivb pop bound addl pop dec insl mov dec into push scas dec and in jmp stos popa xchg adc bts push fs out mov mov jne adc xor (bad) mov cmpsb adc xchg shlb mov inc imul pusha sbb movsl ret out mov jge shrb (bad) mov push arpl xor rcrb je jl adc cmp and jnp test mov stos popf ror lds sbb stc andb inc cmp mov movsb test or popa sub enter lock arpl sbb add jle aad push test inc jecxz sti push imul sub mov stos fdivr divl jae bound data16 or mov aad mov xchg bound dec mov inc jp std je xchg dec in jp cmpsl pop sbb cs loope and imul jp icebp subl xchg popf je jge,pt jp mov push and sarl fistp push xchg xor loopne popf sbb lcall cmp mov ss add jmp xor xchg jecxz mov subl aaa mov cmp aam (bad) in push sub xor fwait je jnp movl in rcrl insl xchg es into mov lea pushf mov jg rol add fcoml je lock mov add lods xor pop xchg jae in adc jle mov fistp je jp ret mov mov and mov call flds cmp loop insb (bad) add das test lds addr16 cmpsb rorl dec imul xchg cmpsb jp cmp fidivl nop stos xor addr16 movsb and cli push faddl mov lcall or clc ja xor xor mov jle xchg arpl jp addl cmpb cltd jle dec das and lods add or cmp enter push lock xchg add movups daa mov xor adc xor adc dec icebp sarl pop sub lods cmpsb jp sub add je jne xlat loop imul jp mov pop xchg movsl jp cld je mov imul popa jge rcrb push pop fcmovbe mov pop jae add fimull jp popf jo clc (bad) icebp jns jno push push jno sub add (bad) inc jp pop in negl dec and pop dec aam inc lock jp push sbb (bad) mov jp push mov lret jp lods cmp movsb push sbb xchg ja ljmp pop mov push test mov enter popf aam ret mov pop xstore-rng cmpsl inc clc lcall bound ja stos or test fwait jp lcall jp push jnp inc xlat aas jne int jp pop cwtl sbb or test cmp rcrl js je repnz aas xor arpl ficomp add adc lock inc cli mov and and jp sbb jle jp cmpsb jb mov jmp outsb inc mov mov bound cld sub jl pop jp inc mov mov adc sahf or mov mov gs outsb gs ret loopne add sbb add pop aas or sbb ficomp (bad) out out flds in cmp cmp push mov pop or push packssdw movl out jl daa pop sbb je stos xor sbb xchg cld imull outsl push lcall movsb enter stos je mov movsb call sub jl rorb adc cmp dec cli ds mov popa xor rorb lods test jp andl mov inc inc pop sbb sti add adc jne pop or push inc ret xchg mov (bad) fsqrt pop negb adc mov fisttp sahf add fsubrs fwait push ret jne jg aam stc mov cmp jp cmp fisttpl jge jp push jne pop mov sbb cli mov (bad) das xchg mov pop inc jno pop push pop jns and (bad) cmp pop (bad) push sbb aas lock lcall inc cmp adc icebp cli mov insb imul and dec sub mov xchg jp xor cmp push sub jp sub add jb adc add movsl arpl sub dec imul or jns (bad) sti ficompl and jl pop icebp nop push popa fdivrl mov outsl jno sub adc pop jl or or jl int xchg inc sbb sbb pop (bad) adc mov sub jp push int3 gs pop cmp and fist clc mov stos xor mov push push inc sahf xchg outsl lds sub cltd pop dec sub mov adc gs cmp or inc mov rcr pop rorb sub push sti std fwait push imul js aam stos sbb pop mov jns xchg fldt xchg mov mov adc pop add dec mov gs mov idivb push std int jl sbb pusha push push sub fistpl pop lret mov sbb sbb lea in xor test cltd lcall repz jbe mov test fbld mov jecxz aam sti sub or sbb pop negl cli mov push or idivl loope out (bad) (bad) sub rcrl jnp call inc fidivl std movsb and fcmove adc or jne jbe repnz mov inc divl leave lret mov sbb fdivl xchg stos sbb pop xor lods pop xchg inc mov xlat scas movsl test mov cmc xchg js dec add pop and mov out mov rcrb inc jo inc pop mov xchg (bad) imul rcl cmpsb and mov call fisubl lock xlat mov int3 jo and loope push mov cmpsl lods pop mov sbb cli mov movsl adc movsl mov stc inc aam xchg ror in cli mov sbb fldt (bad) lods jbe xchg movsb (bad) jbe pop pusha dec insl addl int movsl jno (bad) xlat clc add or sbb inc in bound stos outsl mov in (bad) fdivrs in sbb xor mov cmc mov add mov int3 cli cmp mov into shll push push ljmp mov sub sbb scas stos mov and jle les add les gs movsb arpl xchg adc xchg stos xchg stos scas out fstp mov mov imul dec call popf jae mull sub ja fs stos pop cwtl inc inc lds jo inc lods sti ret enter push ja movsb pop bound cwtl push movsb add pushf daa ljmp lret add (bad) mov insl (bad) pop out (bad) js subl add mov sbb dec iret js sub jns adc orl jmp addr16 adc stos outsl or xchg xlat stos push push movsb hlt lods pop sarl xchg mov sub mov mov jp or add out hlt mov cmpsb mov (bad) stos jge xchg nop into sbb leave xor mov fnstcw test push mov aaa mov jp sub sbb gs pusha xchg push adc push cmp test push xor mov cmp jno lcall cmp (bad) xor mov mulb adc xchg jae sbb int push sub lahf fcmovnb insb lret mov jae push movsl mov imul out enter mov jb sbb pop mov jno (bad) insl shll mov loop push stos jno xor inc mov nop push and adc or fs lea fiaddl test test dec mov int3 mov (bad) out outsb xchg cmp nop sbb pop or cmp dec popa or loope ja cmp add add (bad) (bad) negb repz inc stos sub (bad) shl cli mov push outsl int3 ja das sub movsb dec sub xor sub xchg sbb cmp test int3 push scas mov clc inc xor je cld frstor push js jge les adc daa icebp fwait push dec sbb inc or imul pop pop insb popf inc lahf addl xchg lret int3 mov std jbe ror out mov dec jo stos xor pop pop fisubr push rcll add (bad) rol xor and popa mov dec mov push aas ja stos out call (bad) scas xlat pop lret push jecxz fs rcr mov xor push jns sbb (bad) mov cmc aaa dec mov subl test inc loop jl jnp pop push sbb dec push frstor cwtl mov xchg dec jnp stos ja pop mov aad mov pusha js and imul stos decb jae xor pop mov out aaa imul inc pop add mov add mov push cmp das (bad) mov outsl xor pop sub idivb xor iret sti or and xchg xlat mov push addl push push pusha jmp pop aam mov jno aam jle dec xchg dec sbb gs mov fist mov subb test jb lds xchg aad or addr16 push in pop inc jo push lods ja bound xchg dec fs (bad) repz sbb sub push testl cmp ficoml imul cmpsl jbe andl roll das xor mov outsl add in cmp fbld mov arpl cltd jmp pop cli mov rcll cmpsb in sarl jle pop inc stos fldenv loop (bad) xor lret out ja popa sub and mov xor pop sbb outsb push imul leave pop jle push fbld push push push mov jmp and nop sub lcall outsb loop jecxz push popa and cmc bnd shlb cli stos subl leave stos idivl xchg mov sub out and sbb jne into cmc cmp stos xorl adc (bad) int roll fstl jp cmp movsb loope pop mov jp aas pop pop and fs syscall dec pop push sub xlat or adc cld out jecxz mov xchg imul xchg jno or and gs jl and jns xchg loope out and and jmp sti adc jnp decb jne out cmpsl or add xchg mov push inc push sahf jle movsl push lods xor jp arpl lahf pusha add mov cmpsb and mov arpl stc xchg out cli jp adc mov (bad) icebp dec (bad) jb (bad) jp mov incb mov fiaddl or in sub add ja imul mov jge rorb ss mov les pop sbb mov pusha fcmovnbe jb jp pushf (bad) sbb dec idivl insb inc adc call out lds ficompl dec dec sub leave xchg addr16 aas test mov outsb xchg loop sbb stc fidivr mov or dec gs int popf or mov xchg mov pop xchg ret das imul pop das inc out push call cwtl jno sbb movsb mov ja cli mov jg movsl push loopne es and call jp out dec lods cmc pop jg inc movsb xor mov jbe aad or mov stos (bad) jo out out (bad) insb jmp and mov xchg outsl sbb xor cmp inc mov lret insl scas jp (bad) ss push jmp fs xchg or xor pushl mov popf sbb iret cli inc xor sub and movsb cltd push fdivp lea enter imul stos lcall sub jp add cwtl pop push and lcall pop mov jae mov jp mov mov in dec fsub xor sbb arpl sub pop ret into jp sbb lock mov lret (bad) xchg jp sub mov sbb sbb jae les inc mov mov mov mov repnz es jp subl jp sbb jmp fildll cli xor sub push gs fstp mov pop or cmpsb pushf push mov test test leave cld jp ret jbe aad cli mov sub int lea jp dec repz mov test jg push int3 and ret push jno sub (bad) sbb sbb or jp out aas (bad) fldt sub sbb std mov sbb sub sti scas das in les jp lods dec add cli loop jp int3 and xorl xorl sbb sub mov lods cmp or jmp test imul out push lret sbb lcall cmpsb jp inc pop adc cmpsb hlt mov pop sbb dec loope cmp dec jp fistpll sarb lret scas and mulb or mov int add lcall jp popf movsb lock adc ja mov sbbl xchg pop add jb pop cmp push jnp sub fstpt inc pop aam pushl in loop adc fistl cmp inc sbb dec jmp cmp adc (bad) jno cmp add cmp pop push sti mov jg lods add cmp gs cmp jp (bad) in lock jp aam pop dec data16 add cli sub iret and dec mov add idivl push std pop lds (bad) cli pop leave es cmc sub fbld mov or xor lock mov xchg jbe jp jle outsl and cld pop mov lock pop cwtl xor and inc gs mov pop loope lcall arpl dec mov mov jne mov lods sti pop out xor mov mov shrb mov outsl je push mov add jmp js mov test popf jge jl push mov mov mov mov shrl sub or imul stc jnp test or sahf ficompl sub (bad) outsl inc daa cli mov subl cli repnz stos ja bound repnz cltd int3 jp or aad pop nop push insl pop xchg cli (bad) mov pop jp mov or inc jae rcl mov inc lcall jp loopne test adc cli gs xor mov jp out xchg and push cmpsb inc data16 lcall aaa mov jp mov jp push popa adc ret nop sub (bad) push ja int sub hlt mov xchg jmp jp (bad) dec inc xor mov adc mov ret ret push popa xchg (bad) jne lcall icebp popf cltd les mov dec push popa shl mov mov cld xor imul jp mov es push jnp sbb inc fwait jnp lods dec outsb dec out int3 sbb xchg rolb adc (bad) gs mov lahf js fisttpll add das add jp ficom sarl loope mov cli fdivs (bad) xchg fdivrl push in (bad) cli xor js jne ret xchg (bad) xor jp test movsb mov stos mov dec cmpsl sbb leave inc lea mov (bad) std insl ja stos mov hlt adc and pop arpl sub stos xchg test push push cli cld xchg mov and jbe rclb test ss adc shll and adc loopne pop cwtl adc add stos push fbld ja test icebp aas jno lods mov mov leave ret clc sti das movsb push xchg add jbe mov mov lds xor out xor cmp sbb and gs jnp fcomps or stos ss jg jne test mov (bad) les xor into jle mov mov scas popa stos pop and aas int3 call in repnz mov jle mov dec jge mov ljmp scas jp ficomp jp (bad) shlb mov repnz popa daa push jp ret scas test cli jae (bad) out dec sub pusha or mov out fildl lahf mov fs das mov xorl jle sub leave mov in cli jp push sbb lcall mov jecxz cmp add sbb int (bad) jno cltd sub (bad) sub push jno jge nop jle stos repz add dec mov in ret dec sahf xlat jp pop sbb xor iret xchg in add jp pop arpl movsb mov push dec and or lds push push and and (bad) jb outsl out pop (bad) cmp mov shr loope and jp sbb js,pn jle jge jne mov sub addr16 or aaa inc jae hlt sub pushf cli shlb cmp xchg stc sbb sbb (bad) xor inc insl jp lds repz popa fist hlt mov sub sbb cltd lcall xchg testl or jp push cli mov adc cltd jp shll push or or sbb jp pushf dec shr adc aas add (bad) out leave lahf jno bound popa dec cmpsl xchg jnp jnp cmp sahf je out or mov sub mov or ret sub repz add fistpll fwait addr16 iret gs loopne es sbb out or in mov mov pop popa js sbb inc insl (bad) xor pusha repz mov push insb or arpl gs inc lret or shrl out jno mov mov leave push jnp imul movsb fldcw jmp inc cmp jne stos push cmpsb add adc jl test loopne inc mov loopne pop lret cli out movsb mov dec and xchg push xchg mov pusha hlt cmc dec test mov jecxz mov in inc clc fdivl jb add outsb sub mov stos inc cs ds sub add push and sahf fsub mov add insb ja inc xchg es sub pop in lea sub sbb push popf js and dec pop mov mov shrl or std test mov sbb mov sub jmp dec fistl xor stos les movsb fnstenv push fisubl cmc stos fcoml fistp jp inc int dec dec pop cmpsb pusha inc sti xchg mov adc jmp mov decl cmpsb push gs lods dec cmp jnp sbb imul jae fs insl and add or ja das stos je inc (bad) mov test stos push push and xchg pop pop popf xchg (bad) in loop lahf inc adc jnp imul dec sub data16 out xor loope stos (bad) sub push loopne mov jne mov inc mov sti jl ret mov sbb cmp stc push and jo (bad) hlt sub and jnp push arpl int3 mov xor pusha daa cmp pop popa and iret or stos aas jmp mov xchg stc ja cli outsl and lea jno pop jp repnz repz dec lds cli fldt jbe clc mov xchg int pop sub jbe xchg pushf mov pop call add jl push sub clc cmpb cli roll push xor cli inc and push repnz fwait lods cmc xor inc movsl xchg cwtl dec mov pop sbb xor jmp sub pop jae cmp push (bad) repz imul xor bound sbb jp test stos and jge ja push or and cmp lea cld fnstenv ret cmp push mov jp scas add and gs sbb loop fstpt movsb test cmpl jl mov cmc mov fild and rcr xacquire cli ds jge daa mov push push pop mov ja sbb popf enter jnp rorl inc pusha xchg jne lock and mov inc mov jp cld mov in ja insl std leave js out sub add jp xchg adc (bad) mov jp mov aam sbb xor insl inc addr16 in sarb pop call fs push jp xor aam xchg jg jp mov adc int3 movsb pushf jne fcmovnu pop pop push cmpsl pop les inc push movaps mov jp sub mov sub in ret cmp xchg popa jb jb xchg fisubl push enter mov xlat clc pushf adc xchg pushl je jp inc inc sbb fidivr cmp cmp shlb mov aad (bad) fcomps xchg and scas jp push xorl jp icebp mov fscale negl mov fwait into jmp or stos mov or cli sbb xchg bound jnp fldt inc fiadd jl xorl sbb jg jp adc sbb inc stos mov dec cmp mov jp ret adc mov jp inc jb fcoml xor (bad) jae repnz cli push sahf aam jp sbb fwait aas push out cmc (bad) mov daa push cmp popf ja js nop and mov daa push lea lcall ja test xchg mov xchg pcmpgtw jnp (bad) xor push xor ds bnd dec adc fstps fbstp sub outsl ja shrl xchg in dec mov and pop popa rcrl and movsl out lds cs xor adc inc jp jbe insb pop loopne adc jg push and dec shlb jl or mov cltd sbb or rclb pop jne jge pop sub sub sub and test std xlat jnp xchg fucom (bad) jp xchg jno decl test add jp dec scas repz or ret cmp push and push mov rclb inc js (bad) push pop jo fsubs pushf xlat push mov jne test xchg sbb jecxz das cli mov jp aad mov push mov ss loop mov divb inc jno pop andb mov add std pop scas stos jge loopne mov lret inc or sub adc mov das mov add leave jl xor insl add and out fwait es in outsl imul jp (bad) mov out inc pop inc jp cltd pop aad cld dec and jg test cmp inc ja in loop fstps jle movsl (bad) fwait jns test gs popa sbb rolb jnp fild pop ret fidivl pop mov mov lock and outsb inc jo xchg popf sbb pop sarb sub fisub push or fstp jecxz mov fwait mov add jne xor mov xchg dec movsb popf (bad) mov int3 cwtl adc (bad) sbb aam cmpsl xor mov dec mov fisttpll mov push sbb stos pop mov push push jp es lea movsl loope bound inc out mov add outsl xor mov je adc aaa neg mov mov sub push jg lret and lret lea fninit es or cli repz stos fstpl push nop mov sbb mov cmp pop mov add mov add popf mov sub cld xchg jae sub mov xlat inc (bad) mov testb jae dec cmpsb fs mov jns dec sti lods mov add or stos pushf ret out movsb adc mov stos push aaa sbb out ja cmp or int3 cmp cltd pop xchg add xor (bad) jno movsb in mov aam pop push or test inc add push push cwtl outsl jp test std fidivl ss fs inc sbb cmc sub mov pop mov insl push and dec mov shl cmp (bad) fcoms scas or in cmpsl jb xchg setns fldt dec mov jne push imul add stos mov fistpll jne jnp mov call (bad) cwtl lret cli negl adc movsl je pop sbb and inc sub push xchg ja mov xchg es ja dec jg cmp push and (bad) jp ret call imul xchg arpl pop pop je dec iret mov (bad) mov fdivrl xor pop (bad) jl mov pushf popl mov ja test int3 ja out iret jge insb cmp fidiv cmpsb lods jno mov clc jnp arpl rep ret cmpl cltd cmpsl or xchg dec lret andl outsb sub hlt and arpl repz (bad) in cli jno jbe sub mov and cli sbb adc outsb insl in stos ficomp add xchg (bad) cld mulb (bad) xor jbe inc xor imul and outsb jae inc jle out addl imul cwtl pushf sarl in jns enter xchg mov add xchg jle sub loop push bnd movsb ss mov ljmp push stos insl inc ss inc jbe sbb lods and xor gs int inc and hlt movsb hlt lret stos or out xchg movsl pop subb push test sbb mov jecxz mov dec fbstp pop int3 imul imul cld mov sbb jns mov ja movsb jecxz cli jnp ja cmpsl lds mov loopne arpl add push mov sbb xor pop mov mov cmc adc cwtl mov jg es sbb imul cld (bad) repnz js lock rcrl sub movsb add rolb stos (bad) jmp push cmpl mov and incb shlb mov inc push cmpsl (bad) icebp jnp pop pop aaa stos sahf mov adc fild adc ret jecxz push mov jg inc mov les repz sahf fdivrs test sub dec (bad) xor shlb outsb mov sti mov sub or inc arpl fadd push addr16 mov mov mov or (bad) and xchg jo lods aam in and mov (bad) je push sahf xchg movsl mov notl fs (bad) pusha mov pop (bad) mov push or and jmp xchg shll jb jae xchg jecxz fidivr movsl xchg mov sahf enter push pop hlt jp and mov pop aaa or stos mov push cli push int3 movsb daa ljmp sbb jno push xor add imul cmp jg repz es sub jp xor (bad) lcall out cmp ja into jp (bad) mov xor and adc or jmp int3 pop aaa lods xchg mov mov mov add adc ret stc jne jno cld sti fwait pop nop popa and clc pop jnp pop push cmp shl adc pop les sub sbb icebp in pop push leave jmp mov add ret jne cld jae (bad) idivl (bad) jp push adc mov outsb lret inc std cmp cmp andl outsb mov lahf jbe mov mov (bad) fldenv das jge push dec xor cmp bound mov push push (bad) mov test dec bound in cli fs (bad) js jo xchg xor add push rcrb jp das mov aam dec or repnz jno cmp push pop popf and jg or insl xlat fcmovu mov cmp cld jp mov fsubrs fstl pop (bad) enter push sti jp popf lea pop incl pop mov mov push or cmp mov je icebp push xor fistp cmp push ffree sbb jmp sub fnstcw mov dec fwait jg or fwait rcll pop imul mov push fstps sbb mov cmovnp (bad) sub scas je bound sub notb mov rcrl mov pop dec push or jae push dec xor sub xchg test fwait scas adc jns aad hlt mov int3 mov pop lcall pop cmp (bad) ja xchg jmp fbstp mov das ljmp lods inc shll mov lcall call in mov jne andb sub xchg dec add js setne sarl arpl sub (bad) insb lock dec inc ss xor push popa pop aam insl je sub sub insb (bad) pop pop out jne xchg fdivs in js jae jns adc xor mov jp mov jne,pt pop push ds sbb mov jp dec mov loope xchg jb movsb mov dec and inc dec cmp jge icebp jp or add adc (bad) jnp push pop sbb push dec mov add jno cltd movsl push mov stc jp (bad) mov scas add inc daa shlb adc rol mov xor fsubl lahf jp xor xlat daa sub inc dec js idivb cmp mov adc pop (bad) repnz fiadd jle mov xor gs aad fwait movsl pop or sti das lret (bad) in gs arpl jbe mov pusha cld aaa insb idivl imul and (bad) (bad) aad sbb dec stc xor repnz jp dec mov jne inc ret repz out jp insl push fstl arpl mov xor lods stos ja jae (bad) pop mov idivb mov movb pop std push pop add stos push jp push cmc aas xchg or lcall jno loopne popa mov jl sti inc inc add lds cmpsb repz jnp and outsl push insl ret sti mov cmp xchg fist aaa inc outsb or mov movsl lcall (bad) test mov jp inc pop dec test mov add adc leave xchg sbb (bad) idivl in stos sub mov inc mov insl mov stos or sahf pop cld sub add and and test push jle jne dec imul dec or es cmp push cltd mov jp jbe fs (bad) mov pop mov in sbb lock ret jnp addl cli adc lods inc push mov stos test jnp add add inc jb xchg subb je cmp leave cwtl ljmp test stos gs aad pushf mov jmp outsw loope jnp sbb pop mov mov lea pop mov fsubl dec inc (bad) in push dec gs sbb inc xlat shl cmpsb ss mov fdivrl jne aad cli outsl or fstpt mov movsb and js mov gs lret xchg (bad) outsl jbe inc xchg shl add ljmp inc pop push mov inc movsb repnz and fisttpll pop arpl jecxz dec cmpsl sbb cwtl pop xor je stos in test jl inc idivb inc jecxz fisttpl and bound jp pop pop shlb and cmp rcrl cmp sbb (bad) jnp mov add sbb dec cmpsb jp sbb push pop imul (bad) stc cmpsb lods adcl sbb jnp insb adc lcall mov dec test in test pop nop mov inc sbb repnz adc cmp dec rclb jp mov ficompl jne stos xchg pop xchg push lock jp mov or loope std jp insl test inc fisttp jle jae push xor cmp and and jnp jae xchg sub ds stos dec xor jp daa popa adc inc jb sub stos and push xchg xorl out cli sub mov (bad) xor add mov and nop cmpsb push adc dec movsb cmpsl sbb aas lods push sbb dec push ja stos inc shr and add adc sbb cmp stos push aas roll sub dec cvtps2pi ljmp shl mov lcall xchg sub sbb mov inc stos inc dec (bad) stc out outsb je pop push std adc stos add into pop stos stos je jo les jp jne push jp lcall pop pop jecxz js fcomp mov pop dec cltd (bad) lock push adc adc cmp jp sub scas les iret test pop movsb xchg and pop jp inc imul shll pop mov jns lahf dec push push sbb hlt fisubl test clc pop out mov movsb sub stos repz sub xor sbb adc les pop and adc jp jb pop xor sarl scas (bad) xor int fisub mov cmpsb mov loop mov add sub dec iret lahf xor (bad) adc pop sbb in inc fadd js mov pop outsb and cwtl xor push (bad) gs (bad) dec mov push movsb inc pop add and push mov xchg insl or test xchg pop jg out xor subl and ja adc cmpsb xchg (bad) add in mov cli jae sub enter push push mov in mov ljmp jle pop movsb jg insl rorl adc inc (bad) cmp adc jne sar jp mov lock cmp enter out les hlt bound mov jo xchg cs dec mov outsl shll mov mov das cmp mov movsl pop lods lret push rep cwtl xor pop sti (bad) xchg mov movsb gs mov pusha sub inc inc mov and pop je jmp lahf or cwtl movsb pop push mov (bad) (bad) into data16 sbb add and out iret sub stc inc xor cmp jl cmp rolb loope jae movsl sub test lea xchg imulb scas ret mov and loop jae cmp scas add cmpsb (bad) push sti cmp stc sbb or sti add push dec jp add scas mov sub inc xchg jnp mov clc mov mov jnp hlt out (bad) mov dec or stos stos popf imul cmp or and jo ds ja jnp enter jae sbb loop es push push mov adc (bad) aaa adc aas xor mov push bswap dec xchg insb add xchg stos fidivr in sbb pop aas sbb lods push imull xor aam insl (bad) mov mov jno pop inc scas xchg shl movsb jmp bound lock lods rcrl jb mov popa adc fnstsw xor orl mov cld ficom lods add inc inc xor dec or jmp pop adc push mov sbb jp,pt mov mov dec push push and adc xchg and fwait xchg sbb sub fcmovb dec rep test push in lea jne ret cmpsl jp pop jmp inc jp test icebp gs push or dec sarl adc push jp ss sub xchg jno lret sub bound lcall sub jp cltd jo (bad) enter sbb add pop push and out jp sub fs bts shl cmp jp jo (bad) xchg jl jp and leave mov (bad) sarl cmpsl inc cs mov cltd jnp sub dec ja arpl insb popf test jne inc in pop xchg pop iret insl ja andl dec mov (bad) push jp lds inc xor sahf mov std stc jbe or add shlb push (bad) fidivl popf bnd and inc sbb call sub and mov xorl loop sti scas enter das js (bad) jp shrb fcomps (bad) cli scas lods xchg mov dec sub cmc stos cmp fistpll les sarb test clc pop fsubs adc popa or ds jnp mov adc jp test xchg popa mov jmp fwait mov jecxz jg sbbl sbb or jecxz shrl ja out daa jns inc cmp dec and fstpl lds (bad) jle xlat mov pop xchg ret gs xchg ret push stos pop sarl data16 mov mov jp jne ficoml gs cld cs adc xchg or addl rorb sbb shll adc ljmp outsl sbb insl arpl sahf adc jl xchg pushf cmp roll dec fisubr mov stos pop aad popl out xor push jae stos push jno cmp ja int3 out cli ss adc imul cwtl enter jp cld pop aad cwtl pop je rcll jbe rorl jg test mov sbb mov in sub fwait or fs sti xor sbb cld dec stos roll jbe push stos xchg faddl jp scas pop loop ja mov idivl insb cmp popa push movsl push int shrl cltd ds dec movsb daa (bad) jnp pop lahf xchg jp xchg lods fiaddl lock jge sbb iret loop pusha mov adc pop aas jmp mov add jbe mov in outsl mov or icebp and jne notl mov xchg jp mov pop mov inc sub std dec loopne jnp stos inc loopne lret andl das or pop or xchg aas cli push repz out mov insb jle cmc and dec mov xchg pop mov inc pop arpl es out addr16 jp inc jge aam jp mov pop aad adc jp xchg bound adc dec mov or push jp mov inc pushf sbb stc push mov xor cmp jne shlb loop or inc jo aad jp lods stos xor test inc ss in (bad) ja pop dec jmp stos iret jp rcll dec scas mov shl sti push (bad) mov mov push pop dec lock add insl push test inc pop mov mov fidivr inc imul xchg call stc xchg stos pop cmp or dec (bad) adc xchg inc pop lods push rolb xchg jae xchg jb jne movsb pop ret shll loope movsb fstpl mov in leave inc pop jb out jbe mov xchg (bad) cmpsb pop mov je jns xchg movsb add ret xor cwtl add inc stos daa add sarb daa sub mov or into jbe std repnz xchg and sbb xchg dec push xor add je stos mov mov pusha push stos sub (bad) or ja aaa dec repz out cmp sarl or push js or cmp iret pop ljmp test cld sti pop fisubr xor mov pop sub pop sti push ljmp pop shll mov mov jo xchg jp (bad) mov sbb dec fs sti out push lods and (bad) ja sub mov cwtl mov fs jp (bad) les (bad) hlt sub xchg sbb dec pushf cli in dec mov (bad) pop popa aas enter xchg ja into test in cli jo jb adc jne outsb inc and and gs aas int and jnp sub les loope jle inc imul cmpl sbb jp bound mov stos insl and dec sbb (bad) xor pop scas cmp incb and ret mov mov (bad) adc (bad) adc xchg nop jp insl dec dec stos pop jp adc hlt jp movsb (bad) adc icebp rol sbb lea jg mov sub jnp lret push (bad) lods mov cmp or xchg add pop mov add stos in (bad) clc mov imul cli incl pushf adc sbb pop xor fmull cmc stos mov sub aam jne sbb cmp mov mov mul int3 icebp xchg andl jo mov mov adc mov xchg push jl cmp xor dec push push (bad) pop ffreep mov imul es mov or and pop jbe dec lods rclb dec (bad) jno push xchg mov push loope jecxz inc pop cmp stos sbb pop xchg mov out push jnp clc sbb push movsb rorl rsm or neg jecxz cmp lock or out jle (bad) movsb hlt int scas dec push jbe fcomi pop js mov push mov lods jo ret sub or inc sbb movsb cmp rclb fcom (bad) dec jae daa pop cli outsb jmp jp or repnz fisttpl or cld jb leave decb jle and cmp lahf popa or mov mov adc xchg inc add loopne (bad) push mov sbb push push mov inc mov cvtps2pd dec mov or out fwait stos mov stos stos mov xchg das lods call stos fwait stc es mov mov aas je arpl sbb lret mov ret popf pop push adc push jo push mov push sbb jle dec cmc clc cmp in (bad) das cmp bound pop movsl pandn repz jmp rolb mov push jge shll jp dec out lods adc sub push (bad) mov jne scas cmp scas stos sahf push jne fcmovu fdivrs in lea sti push mov jp jns xor and pop cmp imul sbb pusha lahf test fucom int3 mov and mov mov sub out les or jp or gs sarb aam jne daa adc insb (bad) sahf test orb mov jl inc and sbb lahf jns mov and sbb dec or push adc sbb xrelease lea insl xchg or in jns (bad) push aaa js xchg and icebp clc jne arpl fstps mov aad push ss mov jae psubsw push fisubrl jp (bad) jecxz lds outsb inc cmp imul push and jmp loop aaa or js adc sbb lock inc (bad) out mov inc adc ljmp inc jp pushf xchg in push aaa pop lret mov lock mov ss jecxz sub or jp cwtl movsb ret mov psubusb pop aam cmp loop pop rcl mov in std cmp das mov outsb adc cmp pop push jp adc jne test inc fcomps cmp icebp dec lock mov pop ljmp mov in sbb fdivrl nop cmpsl imul daa out lods push pop scas fldt paddb push popa push add push jp inc stc dec aam cli xchg pop lods insl (bad) jb fdivl mov pop cmp fwait sahf idivl xlat cld push xchg jp sub xchg dec leave pop push pop ja,pt lcall insl or xchg sbb and (bad) repz mov int rcll js cs ja jae xor mov (bad) cld add movsl push cmpsl addl sarb add cwtl push xor out inc sbb mov insl cmp test or insb sub jp sub and (bad) les fwait xlat mov jp sub sbb xchg jle (bad) loope sub daa push stos mov xchg push or aas loop fsubl je std je mov shrb pop pushf jmp or push xor jns mov jp movl add add popa fcmovnbe push adc pop mov push pop add in cmpsl jmp pop mov es mov lds push test jp push push adc ljmp cmp insl addr16 or je mov push in xchg jecxz data16 sbb out icebp ja xorb mov lcall jmp pop (bad) out adc sbb es sub call sbb fist mov in test inc (bad) mov xchg or inc cmp xor adc stos rcrl stos stos insl arpl fiaddl test xchg stos push add xchg rolb mov movb add jae ds imul and inc fildl repz aam ljmp mov fidiv and stc (bad) push dec idivl xchg loop addr16 lret sbb outsb xor mov (bad) sbb sbb mov and movsb inc gs das jbe outsb clc mov or pop sbb inc cmpsb in pop cld or cld xor or mov mov das mov repnz hlt xor xchg xchg or fnstenv sub test inc stos popf push pop lds loope push jp jae sub sbb fidivl (bad) mov test fwait test jae add cmpsl out xor pusha fisubrl sbb in push jge cs fsts mov jp sub xchg loope or (bad) mov ss sbb imul inc push daa xchg inc sbb jp dec lods dec jg stos jl imul cmp pop pop fbstp jle adc cli mov pop jp aas adc sub mov fstpl insl loope lahf les adc cmpsb cmpsb jp xchg iret jp or push sti add sub out lds and cmp mov aad add pop mov or pop mov sbb inc insl lods xchg lret je sub jnp or test idivl jp xor gs clc fwait iret dec mov mov xchg sbb jg xchg fidiv sahf xor mov jg jno jp loop mov pop sbb insb les aam mov aad loopne stos add in sub sbb push repnz sbb mov mov jmp push arpl push aaa xchg repnz cmp in jae xchg stos ret mov pop pusha xorl enter xor mov inc sbb mov (bad) and add (bad) push mov push xchg push loope pop jne sarl outsl divl dec pop sahf test mov sti sbb insl fs jo cmp mov cmp pop ficompl mov call jne fcmovne cmp inc cld mov pop mov pop or stc mov jns jp cmp pop lret icebp jp cmpsl (bad) mov je movsb jae ljmp pop cli jle popa and jecxz jp fcomps (bad) push mov add xlat push ret cmp out jp sbb out inc and xchg pushf les aaa mov fcmove test jp mov lcall sub fld (bad) testl jae xor (bad) loope dec mov ja and lret sti loope decl out pop xchg test jmp jp fwait sub push pop jae push ret adc sub jp cmp into xor jp (bad) cmp stc jmp add sub mov jl jae cmp cmc pop jnp cmp cmp adc and add jns data16 dec mov cli adc add call mov vpunpcklwd pusha sbb jb dec mov out pop jae dec push les xchg or loope mov clc mov aad add lcall cmp pop repnz push imul pop clc out (bad) adc cld jp inc ret in adc cli test movsl xor fiadd lock jne add push xchg or xor add cmp cmc sti std lock mov jl cli xor dec fwait adc jb insb pop lret jp pushf lds shrl aad push dec mov lea out jp xor pop cmp cmp pop mov lods (bad) aad push fidivr sbb arpl and mov adc inc mov call adc sbb repz push sub add icebp sbbl les and dec dec lea cmp sub jp repnz (bad) jp jbe jge hlt cmpsb sub sbb das mov cwtl clc jae jg mov or call shll loope lret (bad) jne xchg into sub icebp aaa jns cmpsl repz addl pop fisub lcall xor inc repz sbb xchg pop jp out test lods test xchg out jp inc in daa mov or adc cmp out lea mov imull jp adc fistp or sbb mov mov and rorl leave stos test andl push js (bad) push pop jmp jne mov inc xchg ret mov movsl jnp (bad) daa rcrb movsb sub jp stos test mov hlt xchg fistp iret popf mov cmp inc mov mov add mov and (bad) jb push jp mov jo add sbb pop ja push in inc sarb xchg cmpsb stc jp pusha adc fs xchg adcb pop popa call mov jnp pop sahf lret xchg sub outsl or enter movsb ja cmp pop loope mov (bad) jne mov cltd ljmp fmull dec in pop (bad) fdivrp (bad) repnz and (bad) and mov daa cmp scas push push pop cmp (bad) xor inc add pop js push xor cs jno std jl rcll negl fwait aaa pop out out es dec arpl popf hlt ret push daa mov or popa out fs xor dec and mov xlat and and outsl mov and ret jno in cwtl mov cmp xchg sub pop jb (bad) hlt sbb ja fldcw test jp stc pop sbb movsb (bad) mov das repnz repnz imul pop or jmp sub push fwait push arpl add shrl cmpsl stos jge stc jecxz mov and loop mov mov adc pop mov enter jge clc out push ja jnp jmp movsb mov icebp inc mov dec mov push jae and sub out cwtl scas xchg mov pop movsb loopne (bad) iret mov lret adc cmc xchg jmp lea mov decb cmp xchg dec and or sub std shll jnp cmp sbb shll test pop push stc imul xlat push jp mov add lock cli je jo sbb dec push xchg push fxtract pushf shrb addb jmp lret pushl outsl pop fistp fldenv mov xchg cltd push sbb mov fcomps lods add out mov cli (bad) jmp and repnz dec and cmc mov sbb jecxz push in xchg mov push add pop pop or popa adc movsl dec jl adcb jns dec sbb pop fnsave mov js ret inc mov adc mov jp jns push and or (bad) jae lea pop jp ret mov pop push jp mov cmp jp mov das push ret mov mov lahf hlt ss addr16 sbb ret mov out and imul jg cli ljmp int3 jnp cmp es xchg and dec aas das fistp mov and mov pop stc jnp or iret jp cmpsb lahf push cld push icebp gs jl fisttpl push jp dec push xor jp repnz lret mov cli movsl ja (bad) xchg push sar cmp jle xchg ljmp jae and dec and mov dec aad jp dec cmpsl pusha mov jae adc enter ret jns xor int3 ss xor mov fnsave mov lea fwait sti or in sub mov sub fstps and xlat push int3 aas cwtl fs jge popf jns pop stos dec push jnp push ficompl imul scas ja lret dec mov mov (bad) movsb push stos sub mov in fld xchg std cmpsl cld (bad) dec in lahf push (bad) pop cmpsb sub push jp stos adc or dec pusha xchg outsb movsb or mov push movsb sarb stos rolb push cmp cmp lcall or loopne test sarl cmc stos leave (bad) cmp (bad) jno sahf sub xorb push and mov xorl jo dec and (bad) xchg dec jno in aad xchg pushf mov jle dec mov jp push fistpl lret fidivl std ljmp paddsw test lds mov (bad) aaa mov ja mov lret push fistpll icebp loope jp pop cmc adc jnp mov out (bad) in iret fisttp jnp jle adc pop push cmp pop fcmovb or lcall jp insb inc scas lds cmp jle imulb aam cmp sub xchg fidivl gs loopne lcall (bad) fidivrl insb icebp mov pop jne mov pop cmp cli add and loopne cmp pushf inc das adc cmc jp cltd jns repz add push sarl pop or sarb (bad) cwtl icebp je and xchg lea fcomip jp sbb cmpsl pop xchg xchg (bad) cmp (bad) jns and lret adc fwait iret cmp cmpsl push stos mov fwait jne,pt testb cmp dec lret dec jp sbb ds pop adc sub lret jecxz jp mov jp jns sbb in add mov mov rcrb sahf scas dec push xchg daa pop jp imul and mov sub sbb arpl sbb aam pop mov jp mov out push shll (bad) stos mov inc xchg pop sbb imul icebp dec push pop fwait adc popa push std lret jmp xchg jno adc pop add int jbe fwait (bad) mov addr16 jno lods int3 aam fwait xor imul push adc pop pop push in jnp mov das add xchg fwait imul lods aad jne inc sahf xchg jne jns add movsb sbb mov inc lret cli jg adcl stos push jl sbb xor cmp xor and xor jns fbstp and stos iret or std cmp or (bad) or cwtl mov jno xchg sbb sub mov mov pop jbe push jp (bad) aam call fldl and sub jge mov sub adc mov jp ljmp mov push sbb sub popa jns xchg sti loope sub cmc cmp out adc sub (bad) jg pop loop jp push nop int inc cwtl pop and mov clc push (bad) mov add pop fidiv inc jb mov or mov mov outsl dec jbe dec cmp out (bad) jno and jne fiaddl addr16 or push mov in and xor push jg pop popa and sub in outsl or pop push jne jl in loope stc mov add fcompl and push jp int xor push imul leave out cltd jnp pop lahf sbb jp jl add mov jb cs nop lock or jne or add mov xchg xor mov int3 jp clc scas fidivrl dec xor in ja sbb cmp pop and jnp sti je push insl rcrb cli sti lods inc jp fsubrs fidivr cmp push data16 xor add cmc jb jp test lods (bad) loopne dec popa jmp pop mov cwtl mov xor jae js shll stos push xchg stc jp test gs dec cld jp out jnp or add push jbe scas pop (bad) push sti sbb mov pop nop ds pop jp xlat xchg push int jp xchg ja and mov test insl mov (bad) cmp cli pop flds adc xor iret push lea dec and dec inc jnp cmc mov insl fldt inc (bad) mov in cli das (bad) fcomps mov pop pop insb jp sahf jmp (bad) cmp lahf or loop movsb mov sub not jp adc or ss loope and or add jg mov fcmove (bad) insb dec js cli xchg push int3 cmp cmpl jnp pop aam clc imul xor fucomi jge mov outsl inc divb xchg enter int3 or pop mov jp mov pop push imul fistpll pop adc push jecxz mov cwtl cltd cmp sbb cmp pop into jmp lds sub and cmp jp jno and fstps idivl sti mov test idivl test pop inc loop sarb imul mov ljmp and fstpt jae inc mov add cld popf xchg in add xchg jp imul fs movsb daa dec mov cmp dec sub inc xchg xchg adc pushl pop cmp dec movsb out or test dec inc cmp xlat dec ffree mov jne xor mov xor test inc pop shl arpl jnp and or jno mov cli pushf (bad) xor ja nop test cmp or (bad) jae lock sub sub jg push jne and jo cmpsl and or dec jp,pt aam (bad) push ss cld inc xorl dec adc jns leave (bad) addr16 add dec ljmp int3 in sbb adc sahf js mov dec popa jno mov test lret sub scas cmp or cmc (bad) popa and jp or xor push push das ret jp cmp jnp inc jp outsb or cmpsb dec mov outsl clc js and idivb jbe dec das mov cli mov xchg int popa decl popa cmp push xor pop es ficoml outsl insb dec mov jl mov fisubrl movsb les xchg sarb shr or fnstcw sub out mov lahf stos (bad) mov rcr out je mov jne mov in adc jp or daa and imul call (bad) mov je cltd das add dec test pusha mov adc ja pushf mov mov mov lahf aas mov mov push xor jle jp (bad) (bad) mov mov jp xor adc sub pop push pop test mov out xor je ss jecxz fildll sti stc fisttpl (bad) (bad) fdivrl xchg divb mov out ljmp test out sbb outsb inc fstpl or outsl dec addr16 popf push loope es xchg sbb sar jmp xchg xchg mov (bad) xchg ljmp arpl into ja stos cld cmova (bad) or pop mov sbb ja aas mov xorl lcall sbbl ljmp or cld nop sbb repnz xor or mov jp push pop sbb mov inc adc mov fistl lock sub add hlt aas sub push (bad) mov mov out sbb (bad) fnop xchg cmp inc in adc xchg (bad) or push enter (bad) rcl pop fsts out sbb pop jno xchg add pop dec stos mov mov push inc push loop jp fadd jno mov pop stos aad xchg stos popa jnp and inc (bad) sbb das or pop push add add fstps push fnsave add add adc inc loop push add scas aad iret cli pop imul mov in and push jl mov sbb sbb hlt ja sub lock cmp andl (bad) ja in mov add call pusha aas inc lods sub daa lods sbb fmull mov mov push push stos je push mov dec sub aad push fmull (bad) ljmp (bad) push and movsb psllq ret (bad) push popa mov jg iret jecxz push pop pop aad or mov stos cmpsl mov mov add push arpl jl sub cmp (bad) jne out xor scas jp mov testb mov xchg lea push test dec mov cmc repnz sub sbb test mov mov lds sub jp movsl into int std mov sbb adc nop lcall cli push shll popa push cmc jle jo out inc dec xchg std ja cmp pop leave jp call xchg ret mov push lret daa dec out mov stc lods sub jns jp scas mov jp dec es and jbe out fst mov sbb pop rcrb jp or les push mov or mov insb add jnp stos dec jo lret dec jne enter (bad) pusha mov xor mov mov fnstcw xchg repnz cli sub sbb jno jp mov pushf (bad) jno xlat hlt sub iret xchg js mov jp in outsl imul sbb lret iret scas insl leave jmp lret jnp std jne add lods push cld ss jp insl sub inc in and shlb mov cmp mov or mov jno jno imul ret jp jle add jle jp jg dec xchg add pop jp push cmpb int fmuls ja (bad) fnsave jno add call push cmp pop popa dec enter dec movsb push fisub cmpl (bad) aad dec repnz adc jb jo mov mov sub stos lret js rcrb sub push jmp pop mov pop xorb sbb (bad) sub fsubp ja jl mov mov inc sub stos and mov in pushl stos mov movsb cwtl lds cltd sub cmp dec into not dec cmc or xor adc sbb add cli dec movsb iret xor fcmovu add xor pop sbb into push addb lahf jns add leave pop mov test ret fdivrl (bad) jo leave jbe add (bad) std gs enter loope and or cmc jp negl jp in (bad) adc scas mov arpl sahf outsl js sti cmp clc jnp mov jp in (bad) sbb mov cmp jp mov mov ficomp mov jp mov ret imul test ja sbb mov stos mov xor mov sbb xor mov jne mov sbb lret and pop dec mov pop loope fsubrs out aas adc dec movsb nop cmpsl lahf sbb dec mov jp inc cltd aaa xlat pop dec inc pushf aam jo lods out sarb in inc push in or hlt xchg add pop aam jp jne,pt (bad) punpcklwd rolb repz fs (bad) xor idivb pop mov in addr16 sub jp loopne dec add push stos dec push jbe movsl jne (bad) lahf (bad) call mov pop jmp pop xlat popf pop push dec mov das imul or fsubl gs jae and pop dec mov mov insl dec mov mov sbb pop lcall push xlat bnd faddl in sti lods xor jns lret or pop sbb sub fldcw jp (bad) pop jae inc xor jge push or sub push aas jbe xchg cmpsb lds sbbb loop ds mov jg jae clc cmp xor xchg sbb push pop hlt in and jne jae mov jne dec aas cmp jge mov popa shlb fwait fwait sub push imul cmp mov (bad) and fbld pop xchg jle rcr push mov icebp dec sbb data16 notb ss sub out lea sbb add mov mov sub and and lds inc mov cmp mov ja sbb jnp or jp out sbb push push lea xor push jecxz lock sub fidiv jo dec push lds (bad) fisubl adc mov jae,pt cltd pop dec cmp jno sbb out inc out icebp sbb aas mov add addr16 fidivrl sbb xor and movsl lods into jnp adc aaa fwait xor mov cmpsl sbb cmp (bad) sti repnz cld xchg add xchg outsl and stos imul or mov fcompl push inc mov idivl pop mov cld cmp and (bad) stos loope pop mov shr lds pusha jp mov mov lret out or repz dec jp fimul mov dec or sbb jp jb cmpsb addb or imul lea sahf sbb jne aas cmc mov popa adc lahf xor push popa stos pusha push rorb (bad) arpl in xchg inc pop add imul fnstenv push rcrl popa xchg push xor adc mov fidivl cs rcrb mov sbb jmp and mov jae and lock addr16 mov dec cmpsb in adc xchg sbb test xor dec ficompl sarb scas sbb mov inc ja test je push push cltd xor sbb cmp mov or and pop fiaddl gs jno jnp lret ret pushf (bad) push jnp,pn fist aam dec pop jno xchg adcl icebp iret stos addr16 dec (bad) inc jne xor push pop jns xchg int3 jno test push jae adc popa add insb jae xchg sahf jp das inc xor lahf push dec lds cmpb inc xchg jmp loopne xor xlat insl push stos jle fwait xchg sbb jne mov xchg pushl je mov cmp repnz pop jp les push jae dec in push (bad) sbb icebp inc jne (bad) mov adc jno lret test or ret aaa jge dec fs sar popa imul movsb (bad) and fnstcw sub xorl mov adc sbbl fiadd aam stc clc dec add jp in inc sub je andb sbb outsl dec lea out dec out mov xor sub ja fstps and mov xor mov movsb int3 dec fbstp adc jp jb pop xor js stc xor sbb in popa std cmp enter jns mov ret sub push test jae and mov repz js sub jbe pop push scas mov jl push (bad) out (bad) (bad) lock mov and sbb (bad) ja je and xchg lds out sti inc ret movhps dec sub aad pop jp fwait mov dec sub rorb jecxz push mov jp xor push popa adc orl pop into mov cmpl sub xchg (bad) loop add ja not or jmp mov movsl rcr sbb push jne xchg mov lret leave dec jp outsb jmp xchg je mov jns test push cmp mov inc ss insl pop jb mov pop xor dec dec in stos out push imul push mov fidiv cmp adc ret push sub jae mov jbe jp repz add mov cld mov sub sti sub and fildll xchg jg jb jbe sbb aam mov cli or xchg arpl sbb std mov push lods shlb in mov jnp sbb cwtl mov rcl in add lcall adc sbb pop or sar inc stos (bad) cltd sub sbb inc imul out popa cli mov int sbbl aas jne dec jb push pushf popf jno mov sub xor test call jp loopne cltd (bad) (bad) test das mov nop mov push xchg sbb fist hlt dec jle insl sbb sub fcmovne sarb inc xor adc lods mov fdivrs cli sub loop cmp push fs jns adc pusha inc mov sub jo cmp and cmpsl mov popf dec gs les or jmp ljmp mov and dec clc lock test mov imul cmp into jp inc push xchg outsb cmpsl xchg sahf imul sbb fistpll add xor out repnz push sbb inc sbb xchg jne xchg add sub loope lcall idivb add xchg mov hlt mov sub ret rclb dec and or mov aad jle les mov enter iret je mov mov jge jp mov test test imul mov xchg cmpsb (bad) loope sub movsl pop mov add add inc aad lea push sub mov lods xchg xorb fcomps (bad) (bad) ja push stos push cmp js das int xorl cwtl repz ja (bad) pop jnp cli mov adc xor pop and sub (bad) out or in dec push imul jno pop mov fwait cld lret retw loopne dec mov jp mov dec mov lret cmp lret scas cli clc cmp ret aam fcmovnb aas jae sub and insb jns jnp sbb dec jp outsl js (bad) pop mov jp adc push shlb rorl and or xchg mov inc dec out sub icebp cmpl outsb xchg xor jp cwtl js (bad) in add xor sbb xchg mov sub jle into and imul cwtl ficomp cmp add loop pop and (bad) jne pop pop icebp adc add dec bound sbbl aas test testl cmp xchg jp push xchg fidivr insl sbb fmul adc pop (bad) dec test ss icebp movsb sbb std jb cmpl test fisubrl (bad) jmp imul and push aam jmp insb jnp jns das lret (bad) int3 and pop enter insb mov mov mov out push jbe je clc mov dec or insl sarb arpl push dec call rcrb jp clc stc addr16 and jno pop pop repnz sub (bad) sbb xchg push lcall dec sbb cmp cmp adc cmpsb jp pop xor popa cmp jp out push mov imul cmp pushf mov in mov std push bound mov xchg call stc sub aas fwait jp popa popf mov pop pushf pop enter (bad) fiadd shlb ja out popa icebp repz je nop repnz sub cmp add dec xchg add push xor and jnp shlb jp push pop aas (bad) out mov or jle or sahf sbb (bad) jp frstor in jmp xchg sub movsb jne pop cmp jp dec in addr16 jge fisttpl lahf les add sub adc js ret out jno and dec adc mov lret sbb mov out (bad) add jp mov mov je (bad) push (bad) pop dec cmp jp add pop fnstenv jge xor cmpsb js pushf jb out repz and sbb sahf mov popl jbe xchg sarl daa mov or mov or (bad) jne aad mov ja and cwtl icebp sub pop fwait sbb mov sub jp sub mov pop test or and jne movsl dec gs xchg dec repnz mov sbb push mov jmp mov fsts pusha push stos int jbe scas repnz mov push jmp mov lcall xor pop and mov imul and push jg cmp xor loop stos sbb pop arpl jecxz mov sbb push add gs jne push sbb mov test fwait xchg jl stos sbb fsubrp into mov mov mov sub dec shr loopne pop adc or arpl cmpsl xchg mov lock jb out (bad) shlb xchg cli sub mov scas sarb jno fildll movsb or call cmpl hlt xchg addr16 adc pop scas inc push les mov inc push insl shrb inc fstpt fwait mov je inc xor fs inc lds mov test sbb add fstl mov negb out add mov pop mov dec imul or popa (bad) andl clc jnp popa and lret insb xchg (bad) mov cltd ljmp movsl jp mov test lret leave dec add adc jp in cs jecxz and sbb call outsb (bad) or (bad) (bad) ljmp stos pop dec adc lcall cwtl jnp loop jp outsl lds xchg test cmp inc cwtl mov cmc in ds cmc jnp movl jmp ljmp sub lret dec lahf jne jl neg fnstcw inc jp sbb out inc imul fiaddl push insb cmp push push jp in xlat pop mov sub mov dec clc pop adc xchg inc xchg out movsb and icebp xchg loopew pop (bad) fs call popa or dec imul or dec push jne push rcrb (bad) in jp (bad) jns jnp jp jno pop mov cmp mov enter or adc xchg push bound lea xor xchg (bad) sub mov aaa cmp jp call lds or jbe sub popa mov stos mov (bad) fisttpll and jp adc jp bound inc adc push into dec sarl lea mov test sub int ljmp neg add xor mov xchg js scas outsb insl add stos jo arpl fs pop cmp dec push xor jbe xchg jmp stos test (bad) out fwait dec add push jb sbb mov pop cld loope mov and ss dec repz out and pop clc push leave pop push movsb (bad) or in and jne mov enter push stos and sub iret sar pop movsb imul arpl hlt rclb movsb lds outsb outsl enter xchg mov push fidiv mov fs lock xor push movsl add push adc or je arpl push sub jne pop jo pop pop into je ljmp pop adc push jno add popl mulb pop mov out lret mov cli jmp repnz repz mov addr16 rorl inc arpl mov repz or sub push mov int fisubl pop sbb mov push idivb lahf stos cltd aad adc mov pop scas ret dec inc int sub dec jge sbb stos mov pop pop popf xor insl into out jp fistp xchg into jmp aas cmp arpl (bad) mov and fsubl mov mov repz xchg add jnp (bad) sbb test and rolb insl push in sti hlt int3 cmp jmp mov mov or mov sub adc div lds rcll daa cmpl popf push xlat cli xchg les cli mov (bad) mov mov outsb dec out jbe push mov jle sub loope js or pushf xchg push jp lock mov fidivrl enter push and add pop mov popf test cld and push out jp mov scas jp inc addr16 fmuls in jl orl xchg gs mov cli sbb jp xchg mov pop add loope gs jns add int xchg xor sti (bad) dec pop add sbb jnp clc push jge (bad) shlb add pop cwtl sbb and mov mov xchg arpl out les int3 repz bound (bad) mov mov loope mov sub imul jp mov push push ss lret jmp push stc dec sahf xor jne pop and jp pop adc mov dec mov aas in popa inc das or mov shlb add stos lods lahf cli aaa mov test add adc out dec leave dec popf jbe ret out in (bad) cmpsl test mov cs adc cmp lea movsb push mov fwait shlb adc dec cli jp inc mov out movsb addr16 add ja mov jp pop dec in insb jne push cwtl icebp andl dec aas (bad) ljmp jb das push inc pop loop pop push and jp xchg mov jp sbb test mov cmp or add pop and mov and popa test push out jp pushf repz fwait enter lahf pop mov jle xor jno jne mov (bad) lcall pop pop (bad) xchg xchg jmp fistpll clc out (bad) mov into cmc stc jnp je adc add adc pop cltd clc hlt enter sbb int3 aas sub sbb adc (bad) jo add aas and std mov insl repz sbbb xchg int loopne jnp lds movsl cmp ret xlat scas out int3 dec nop popa jecxz jge inc dec pop xor clc jnp fstps dec xchg jp loop or leave lock mov fcomp test push fistpll mov test cmp cmpsb jg loop push sbb push lcall mov sub and negb mov jg je xchg mov pop sub jno inc cli push adc push pusha imul cmp dec or jnp,pn push xor dec cmp jecxz mov (bad) lcall add add or je pop or cmp sahf dec cmpsl jo and fwait scas ja loop ja mov lods push lds mov xchg jp inc add cmp add sahf mov cli popf mov (bad) aas pop insb xor rorb jne mov sarl adc jge test push leave adc (bad) add test push add (bad) mov (bad) or dec nop jge adc xor clc nop pushf addr16 fldt mov mov movsb or pusha jae xorl or ljmp ror xchg fldenv cmpsl jp std mov js push sbb dec (bad) (bad) gs add mov jbe inc scas sbb clc jns inc cmp cmp dec jb in repz cli mov pop aam mov cmpsb pop data16 std leave push ljmp addr16 mov add cmpsb jp pop sub mov jg jae sbb in dec sub jns xchg jns mov jp xorl shrb sbb jp lea (bad) imul mov push dec jp mov icebp (bad) xor int or cld cmp xor sbb pop push cmpsb xchg xor ret sbb push popa stc mov sbb imul or test jecxz lea (bad) xor inc test jp shrb dec jp das lret (bad) cli mov loopne jne aas jp ret cmpsb cltd pop shll test and sar mov jl imul es idivl push or stos inc in xchg outsb inc fcoml pop pop hlt add pusha lcall and loope sahf jne and hlt dec mov jb pop inc stos mov ret xchg in jp jb sbb adc jno scas add out push loope aam js xchg shlb jp lods add dec inc or pop jp mov jle stc or or out or pop mov lcall cmpl sbb jp mov cmp test fstpl stc fildll mov xor hlt sbb imul xchg jbe mov test jnp push sbb jp jge mov mov stc addr16 push js loope adc mov aad xchg xchg mov pop mov sti je iret or icebp jge fiadd jne std lahf pop cmp mov push pop push jp aam cmpsl adc or sub inc je xchg sub dec and mov or jp push outsl dec bound aad pop stc fst mov sarb push inc xor mov xor pushf dec scas cmp sbb shlb call mov fucomi adc ja js xchg sbb inc ja add mov pop mov insl outsb dec adc dec jno mov dec jmp pop fwait inc daa jns lret test jp sti push mov mov adc lahf jp iret xchg fcomps fwait xor mov mov mov sub and lret cmp ja inc bound mov xchg cmp out popa (bad) cmp sub hlt cmc push imul jmp rclb jp xchg int3 fwait lahf sbb pushf sub ja negl jmp mov jno mov sbb inc outsb cmp out add add call jnp outsl popf dec sbb stos enter xor cmp or int cld gs pop jae and aaa inc jo flds sbb and lret loope pop ja and mov fs xchg and lret add aam jp push or mov xorl jno jns sarl inc jb out jle cmp cmp std in dec lock xor or iret outsl mov jge out shll jnp rol push divb cmp popa inc add mov outsl push dec add enter sub (bad) dec mov or rolb sub lret nop mov jp insl pop dec in pop xchg fbstp fdivl fpatan int shrl sarl jecxz scas mov shlb push imul stos in movsl es cmpsl dec adc or jbe pop add or jno xchg aas (bad) mov jnp xchg sbb cs pop hlt push add mov add call xchg lea cmp lea inc jnp add jae cmp ja hlt out jns shrl (bad) lret scas popf (bad) sub jnp stos ljmp stos mov xor inc jp pop cmp mov xor or in push dec out jg and cmp sub movsl adc pop sbb out (bad) (bad) mov mov lret jp add into mov sarl repnz xor inc das ja lcall mov fwait insl inc in or add add cmp mov pop sbb lock ret aad sbb push cmpsl xlat add insl popa stos imul cwtl sbb in stos xchg push push mov mov out das outsl ret pop dec aaa adc (bad) mov sub gs jne sbb dec ret jae xchg add clc and adc pusha jp movsb movsl mov pop stos xchg mov add sti lcall add icebp enter stc insl lret stc icebp xchg fildl out aad dec or repnz push or (bad) add ds not es mov push das mov test scas int dec lret test movsb mov ja cmpsb (bad) stos mov cs cmp cmp pop jno add mov jnp xchg jp jb or jp fist stc lds inc insb mov jge out xorb into cltd jp push rorb lahf shrl pop fwait sbb dec and jecxz call jp cltd sbb pop pop xor repnz mov stos out lret daa mov out cli or mov mov addl insl loopne mov sbb hlt mov dec xchg add sbb sbb cmp pcmpgtd jp jmp jg jle sbb jne xchg mov xor xor iret sub jge jnp mov dec fbstp or sti xor loope jae or sbb stos daa (bad) and (bad) ds repz xor jns outsl inc leave and cmp jle cmc jg mov xchg jo repnz dec imul je fsubrs enter pop leave sarb divb xlat mov cmc roll mov je or cmp sub mov add mov or sub lahf cmp icebp cmpl pusha cmp mov or xchg ret mov lret aam cmp test cmp jp stos mov lahf mov movsb sbb add divb mov mov nop addr16 ds xor xchg mov push shrb push sub popa xor mov jns gs or ret jp jnp inc push sbb jno and pop fcoms xor pop sbb out aad aas iret in (bad) and andb out mov xchg jnp mov or lods cwtl xlat xchg dec (bad) and adc loop fwait std je inc hlt jne xchg pop jl jbe mov sub test test xor (bad) adc sbb mov daa push movsl jmp xor and test lods je sbb pop dec sub sub movsb mov jp popf xchg xor lock pushf mov pop push cwtl fwait je pop test pop aad lret pushl adc sub pop xor mov ss addr16 jp mov out jp (bad) popf and jle (bad) cmp nop or push jne ss and lds xchg adc inc mov or xchg cmp add out mov aaa (bad) jo aaa mov mov ja shlb xlat sahf mov push jecxz imul push xchg (bad) pop and sbb ret jno repz fldt sbb ds xor add jp xchg jp xor (bad) rorb add dec ficompl sbb incb pop jne dec jg xchg lret popa push cmp popf xchg jno in push repnz jno bound adc fsubp mov jp xorb es insb les xchg inc mov (bad) jo movsb inc jp xchg dec sub jp dec shlb adc (bad) (bad) mov mov repnz call push popa mov lret pop bound hlt push in xchg pop gs repz aam mov ja loop jb pop sbb pop pop jecxz shl adc aaa stos adc and ljmp mov outsl jne sub pop inc repz mov clc sub add adc fstps adc negl in mov sbb add sbb sbb js (bad) mov clc push jle addr16 cwtl inc push jae mov pop stos pop (bad) xchg test cmp test out add mov mov loope mov std arpl jmp push mov adc or sahf mov push stos cld inc inc je xlat sbb xor dec mov mov xor pop aam jl dec jae xchg cmpsl mov jp mov out pop pop add mov gs test and push aaa cmpsb jnp mov mov lcall jp cmpsl movsl es push sub bts sti push ljmp cmp xor mov repnz jae test xchg pusha xchg jb (bad) jp in mov jae lahf hlt sub daa mov or push cmp mov test push or push sub aas xchg push sahf mov mov stc pushf sbb xchg jp dec loopne push loop in push fdivrl sbb push out sub or mov xorb lods adc fnstcw dec push pop jecxz push stc clc ficoml jp inc jbe pop mov jmp push aas fst lds adc jp les insl dec mov ljmp cli push add inc stos jbe lods lret loop cmp mov jecxz sbb and subl jp ret adc jb dec popa addr16 push pop gs jno sbb pop adcb gs dec pusha push hlt push stos sbb dec adc xor sub sub push repnz jp lods add adc jp mov aad imul loop push rcr and daa xchg mov jp sti xor jmp das das pop adc orl xchg insb inc jg rcl fbstp sub jnp inc ja jae aaa jbe and clc and aam pop xchg out lock ficompl int3 jp dec lods out jno scas jae jne xlat (bad) cli push (bad) mov lret add jno call es add mov icebp mov and pop and (bad) jae dec mov fisubr (bad) jecxz adc jp push bound les sbb xchg dec jp (bad) xor addr16 xchg (bad) or jp stos or mov movsl (bad) imul lods adc mov xlat enter call popa sti or xchg popa fsubp loopne jp mov push jle push outsl or jp xlat lods es pop jns push and lcall rorb and sub mov popf sbb push dec dec sub les aam stos iret mov adc push sub out lds push js mov sahf lret sarb test jb cmp mov cmp jno xchg mov cwtl sbb imul mov pop and mulb loope pop xor pop add jle aas stos lcall clc jnp pusha jecxz mov outsb pop dec in mov insl das imul xor arpl push fs lret (bad) inc xchg (bad) sti int int3 subl mov sarl pop aas or pop cmp jae clc inc cli (bad) cli (bad) or addr16 mov jno out pop movsb fs inc xor pop rcr call inc (bad) cmp outsb jne out mov les mov test mov xor stos lock repnz scas mov mov sub xchg aad mov aas outsl pusha mov idivb xchg je leave cli ja push add stos std loope add inc loopne pop mov xor pop les aam add jmp jle xchg fisubr jp test adc fwait mov push xchg fdiv inc push fadd bound jecxz fdivrl mov xchg int3 insl jbe cmp cmp sar cmp popa or (bad) mov (bad) aam jne cmp adc popf dec jmp pop add or push mov sbb sbb mov push lret dec test jbe sar jnp jae out jge sub adc or adc or and jae lods mov inc mov (bad) push out inc or inc dec lea jb jne mov jnp imul dec fstps inc iret cwtl (bad) cmp clc ja sub dec int sub cwtl sub movsb mov in jno push popa jle jnp pusha push push aam gs gs adc dec insb push dec lock xlat or or cmpsb movsb sub sbb fs push push xor inc lock pop pop or (bad) push mov clc cltd daa cmp sbb cmc xorb arpl jmp inc dec inc pop cmp jge hlt sarl insb out pop stos rcll sarl dec out adc scas inc jo dec mov roll lcall pop mov and testb or into jp shrl leave bound orl data16 loop xor fisubrl test insb or jnp (bad) jnp pop xor sub cli and test mov aas or fnsave cmp mov stc sub (bad) fistpll aaa mov test popa sarl and jl jp lods lahf sub les mov mov dec enter push and dec lcall (bad) int lock fild pop xor incl and sbb sti (bad) push cmp cmp xor push dec mov jp and dec scas lret call iret es mov sub add jne cltd xor insb add test sti mov cmp ds stos test jge icebp fnsave push lcall ja loopne xchg jecxz fwait inc jne jns insb movsl int3 dec fwait in and adc mov mov jne add jbe stc fiaddl lret gs jmp fiaddl ss ret mov jp jl hlt (bad) jp cmp pusha mov outsb dec lds fstp (bad) cltd mov cmpsl jnp outsl je sahf mov lret scas mov push mov adc xorl or test imul aam mov push sbb mov jmp mov popf fadds lods add repnz xchg mov das jg loop mov lods xchg ror sub mov push mov aas (bad) jnp (bad) mov adcl inc mov cmp xchg arpl bound mov adc inc xchg jmp out pop lcall adc cld and mov fcoml (bad) stos push sub pusha lods jne xor cmp mov repnz add jo xor (bad) or jg out fs mov cmp movsb in adc sti imul sub sbb in sbb cmpsb push jp xor mov jl xchg pop push pop jge in jp pop pop sbb aas jg fldl jp mov push mov and imul lcall dec imul ljmp je or mov jp sahf dec mov cmp popf push lahf aam out enter scas add jnp add jp (bad) in iret or fmuls cmc xchg lods in xchg fistpll clc pop icebp inc in xor aas dec sub fcomp xchg insl push popa std xlat pop push imul adc mov xchg mov cmp cli and pop jbe les jne sub call mov xchg mov jp jle pop lret addr16 push sub or add jp mov or (bad) je gs cmpl (bad) jns jp rcl es out add mov add popa cmp jne ja mov (bad) rcrl sti sbb lock jle sbb fwait clc mov cmp data16 and (bad) jp push scas mov jg push loopne sbb insl hlt cld out mov jnp push fdivl stc fildl sbb mov ss jmp call xor pop sbb mov (bad) dec gs jle sub and mov jnp pop inc xchg jae shlb mov in loope int bound inc pop mov ret sub stc pop insl movsl push ljmp sub dec in dec daa lret cmp sbb loop xchg mov jp (bad) jb xchg xchg mov ljmp cmp gs cmp das pop mov shlb (bad) push aam and fdivs push xchg adc lods or jae fistp mov jnp mov (bad) insl sub pushf xlat je mov mov pop sbb or out dec stos cs (bad) outsb xchg mov lret sbb sub stc push clc call movsl outsl je dec arpl mov subl jle insl (bad) dec (bad) mov jp pusha push pop sub mov popa in movsb out mov nop ret mov rorb fbstp fninit jp shll push (bad) jp cmp xchg dec in ficomp push and mov sub push or xor imul dec sarb jmp cmp fcompl sti in jae jl cmp cli add cmp mov sbb loop repz xchg enter outsb ljmp cmp pop stc jo add out movsb int3 pop insl mov ficomp ljmp add cwtl xchg (bad) jp ja or imul jp or jp out xchg cmpsl and arpl sbb mov test jp inc jno xchg xor jecxz pop leave jge jae orl cmpsl rcrb inc stos clc push pop push xlat hlt popa std cmp cmc jl pushl int3 xchg pusha inc cmp insb add push popa add div mov push push jg push or pop jae xor jge jp cmpsl adc jp cmp lret dec add fildl jle xchg loop sbb cmp cli and enter jg cmp lods inc sbb test popf neg fs lret aad xchg mov pop gs adc fisubr (bad) mov out dec mov add out xchg jp movsb pop aam pushf jle inc repnz or cltd pop xchg xorb add jp mov pop mov sti or dec and cmp mov ja adc ja cmp lods jp jb pop test jp jmp add jp ret pushf xchg insl (bad) ljmp jbe jnp pop popa and outsb add and lcall push int hlt sub jae inc jb adc sti sbb mov mov mov add jbe xchg call pop mul or mov cmp add mov or aas push jb repnz lods xchg jnp cmpsl dec lods xchg mov rclb lret iret pop dec scas pop jne scas sbb xor cltd xchg inc jns pop sbb sub adc ljmp adc int3 gs push not fisubr (bad) jne cmc inc push movsb cmpl dec sub or adc fldl mov sbb mov mov fistpl and sub ja cmp add sub and and push sahf (bad) ss jae and adcb and iret mov scas cli pop roll imul je leave jmp sub xchg and cwtl sbb and jp aas mov sub std lret aaa stos jae ret (bad) jnp sub test xor push fnstcw push insb jp cmpsl testb mov arpl popa xchg (bad) pop jp mov sti lea jp dec jae and call leave pop fdivl cmp cli xor lds das sbb repz mov xor jp call (bad) and pop push aaa xor jae sub shlb jle cld lcall sbb test cmp or mov push out lds cmp scas add stos test and movsl sub pop cmp cmp repnz clc aam lds xchg inc xchg sub xor lea push mov sub xor bound leave stos xchg mov cmpsb out in (bad) mov xchg lea daa sbb dec rorl mov arpl loopne es inc jne and xchg push clc jl adc or and mov sub scas in and lcall jnp and jnp inc cmc gs cmpl dec (bad) xchg test pop cld mull or data16 into jnp xchg loope das push sbb pop sub mov ja push bound div mov test shl ret fnstenv adc (bad) mov sarl or sub adc jns mov lods lds pop (bad) jne test jp lods pop pop xlat push loopne pusha les mov jp (bad) xor xchg repnz (bad) (bad) fisubl or pop cmp sarb sbb fdivrs aam cmp fcoml out and pop sbb test (bad) jb mov int3 cli or lods aas mov sti xor sub jp adc push lahf mov pushf cltd imul lock cli pop lea push cmpsl mov pop jp int test mov bnd cs or jmp leave lret dec (bad) popa cli mov and movsb int3 cmp mov cli pop mov push pop shl push (bad) jne sbb xchg lahf sbb xchg and xor pop add (bad) scas jnp loope lods (bad) pop pop push xor cmp mov push jl inc mov mov add ds (bad) push data16 mov insl jg mov movsb daa and xchg bound (bad) push inc jns or std jo,pn (bad) or fdivrs cmp popf cmp (bad) mov inc and fmuls xchg int xchg pop imul jno stc mov mov jbe addr16 or pop seta pop int3 sbb stos push dec push mov dec add xchg jp jno dec sub or mov push gs pop lds ficompl (bad) in test std mov jecxz jns xor leave jge jp arpl mov ja mov ret cmp js push sbb cmp add mov cmpsb loop pop ja mov mov pop sbbl std mov jno in cli cmp int3 insl add (bad) cli adcb push ja push xor (bad) cmc arpl loop sarb adc push jbe cmp je cmpsb cmp pop xchg jp or cld repnz outsb adc cmp sbb lahf scas scas sti fwait pop jle repnz adc add jp xchg push ss mov dec in mov insl fwait test add out stos and sbb ljmp lea andl push mov mov lcall xchg add es hlt dec mov inc push fiaddl stos cmp dec jbe lahf xor lret (bad) mov inc jp hlt mov jp enter jnp lcall xchg mov jp dec loopne,pn pop jp das add ror int3 test mov or test out jno cmp or jl lea out xchg jno aam mov pop fcmovu mov cmp lods mov jle sbb rcll fldcw mov xchg je lea cli dec leave jno or xchg lahf pop xor pop and push stos xor mov fwait jns sub inc cmp sbb and stos std xchg loope sbb je jl adc jp idiv insl ret dec dec movsl cld loopne jns mov movsb jne jnp clc (bad) adc push aas sbb push cli push fstpl mov jp int lds jnp cmp push loope (bad) jb std lock sbb into pop jb sub cmp jp repnz sahf (bad) lods ljmp jbe loop shlb xchg cmc adc das sub int hlt rcr jg jl sbb stos scas cld (bad) jp mov jb ret cmp (bad) sarb imul sub jp jle xchg test (bad) (bad) mov fisub dec out cmp popf push pavgw xchg test in push std (bad) addr16 in jp je pop cmp and fcomps xorl mov inc mov adc arpl mov add xor jle jb dec mov inc jo ljmp sarl adc popa cmpb cmp adc jae mov ret bound xor das pop jne sub push add mov movsl dec int jbe sbb outsl jne sbb cmc imul sbb lods lds xchg push (bad) xchg fldt push (bad) pop outsl jns cli add or popf sbb ret cmp mov sbb mov testb xchg (bad) cli mov in insb sarb pop sub cmpsb cmpb imul mov popf jp popa xchg insb or lret addr16 xor dec mov cmp inc adc out popa mov loope sti and or xchg add test add in ret js jp pop mov dec aas and sar in cltd mov je pop pop mov enter shll sahf imul xor cmpb mov sbb hlt pop aam pop sub jp mov loopne jns out stos mov mov push jecxz movsl jp add push hlt (bad) popf popa out or mov scas jp push fbstp loope sbb mov dec push sub sahf jnp inc jge sbb jmp mov int sbb and lret stos jp jg mov jp xchg fcompl jmp add cs je push imul leave test pusha insl fwait mov xor addr16 int mov jne ljmp dec add xlat pushf cmc cmp imul sti ljmp test lds jp (bad) cmp cmp pop jp mov lahf fwait imul mov xor (bad) jle popa sub or adc inc repnz and fs sub adc fsubrs idivl jb movsb mov inc outsb sbb jne ljmp pop cmp and add aaa ret and push add xor loopne mov ja mov mov jno test pop xchg sbb cmpsb push stc sti movsb and push (bad) jg mov outsb sub mov es xchg in pop cmp jbe arpl int jecxz sti fwait das loop shll ss sub jp mov add ja insb adc shlb int xor cmp push shufps xchg xor scas ret data16 cli adc jp movsb insb xchg and jecxz in jp pop je push stos aad mov fs popa imul jbe mov stos cmp mov cmp fdivl xchg pusha out movsb mov jae test push subl (bad) sub inc xor shll popa fildl shll mov test sahf out stos push sbb dec orb sbb dec (bad) inc sarl add out bound faddl mov jp jg adc movsb loopne cmp jno adc xor mov gs fs pop outsb fdivrs (bad) dec jnp add cmp xchg pusha cwtl sbb movsb sub daa sti sti stos out gs ljmp sbb push scas pop cmpsb inc out ljmp dec xor push pusha push sub sti cmpsl outsb lds jbe adc pusha inc bound gs lea movsb fxch mov (bad) ja rep (bad) mov loopne lock shr jp fs stos inc push fnstenv jp lea mov push fisubr push mov cli and icebp sub sbb inc out mov push rclb adc mov movsb sub mov int inc (bad) sub and jae xchg loope and stos xchg decb pop lods add daa lods insb jp enter xchg fwait xor and mov mov movsb int sub pop sahf jp daa mov in (bad) mov test add mov push rcrb jp adc sub xchg mov addr16 sub push cwtl pop imul pop in push popf in popa adc insl (bad) cmc icebp xchg ja jle aaa cltd sbb pop mov push jp fisubl push pop cltd insl lahf jo cmp add enter rorl xor dec in (bad) jle (bad) sub push mov cmp mov aaa and and mov (bad) fsubl adc icebp shr or imul xchg stos or mov mov fs mov imul pop jae lahf jp stc jnp divb xchg gs mov jp xchg mov jp (bad) pop cltd jo and pushf jp add dec jp mov imul push sarl mov enter sbb mov mov dec and int sbb jg pop lcall mov out mov test jp push aaa cmp not mov cmp (bad) lret sar ja hlt ficomp cmp push fld1 pushf fs movsb jae popa scas std outsl mov loope clc cmp pop inc jge fcomi loopne push jp and pop pusha nop or jecxz rorl or fwait mov notl mov push lock sbb (bad) scas mov hlt jecxz rcrl adc push mov ds (bad) fs dec mov dec iret adc jl add jno movsb push insl sti out cmp lock in mov outsl loopne jns mov ja (bad) fs gs mov pushl dec jge stc mov lock xchg jg lods push ja adc sbb push or inc mov dec mov mov cmp push or fldenv roll mov into out sbb sahf outsl repz sbb scas clc aaa cmp pop or lret inc ja scas insl jnp pop and gs repnz push pop ss lea mov cs repz adc pop (bad) xchg push pop arpl repz out pop push push ja mov mov (bad) mov inc mov fisubrl sbb sbb addr16 and push mov sub movsb jl xor jb xor les arpl dec xor mov cmp xor mov enter cmc jne pop sbb jnp pop lcall pop lea jnp pop inc dec stos dec mov ss jno xchg sub jmp repnz cmp add xor push mov stc jne clc scas pop movsl shll jge (bad) cld and sti aam shrb int loope mov xor iret sub or insl and dec lahf add pop mov ret jns call mov inc aam (bad) xor dec mov (bad) dec sbb pusha ss pop fidivr or (bad) xor ja and movsb push pop push pop add aas or gs push pop stc mov sbb or stc cmp leave jne xchg jb stos out mov lods mov dec adc xor mov lcall xorb jae nop push scas ljmp or jnp movsl dec pop imulb push push fidivr mov dec mov xchg jp push sub jp shr pop (bad) jmp and aas jge sbb pop mov mov js xchg lahf dec mov mov cltd fwait popl push xchg insl orb lea cmp jp mov push adc popa add xchg cmp push jo sbb cltd sbb cli dec pop dec daa mov xchg into popf movsb sbb (bad) adc mov fiaddl sarl mov push test mov mov mov xchg mov idivb pop cmp lea shrl pop aaa arpl push sahf sbb adc mov inc dec pop test mov or jle out jo aad xor ret jb jnp insb add and cltd stos test mov lods pop lret or mov imul loope jle scas sarb addr16 cmovg xchg out dec ja bound push adc aas dec xor aaa and mov scas jecxz sub nop aam pop sub mov pop push add cmpsl jp cmp jp mov xchg fnsave (bad) cld or mov (bad) ret popa sub xchg jb push cmp push jp mov jge cmp orl jp leave and arpl cmp lock push fadd add (bad) jne (bad) lcall popf jp push mov fdivp movl cwtl shlb jne lahf xlat pop push clc mov jp (bad) ja fwait (bad) aad gs addr16 push mov adc jns jnp fisubl shrl pop pop xchg xlat jo mov jne fbstp movsb sub or test add pushf cmc sti sahf incl xlat or repnz test mov xchg loop clc jp int3 mov fdivrl popa fidivr jp cs push inc call push (bad) (bad) hlt jl xchg jp aad repnz cmpsb sbb ficompl frstor jp mov adc mov stos or add ret negb xchg jle insl in (bad) mov add dec add popf jp jl push fcomps mov cli pop jbe push jne push call sbb mov inc xor jmp push xchg ja xchg test mov ret sbb push in ret sbb inc cli iret stos and mov mov and xchg xor inc sub dec xchg dec inc stos mov mov add les repz ss gs decb mov (bad) pop out negb cmc (bad) (bad) mov cmp and cmp push mov hlt jbe hlt xchg (bad) adc push jbe stos scas cmpsl jmp stos es sti rcrb mov push add mov sub jp cmp (bad) nop mov ficomp stc ja xor pop lea mov (bad) out add (bad) mov mov mov aad popa clc mov sbb int3 and (bad) xlat or jmp (bad) gs stos sti pusha (bad) aas inc jne lcall push mov (bad) jp and pop ja adc sbb outsb dec and pop aam inc jp loop sbbl push ds das dec pop push repz dec loop ret jp mov inc ja fstl aas sbb stc jg jp jecxz pop ss adc mov dec imul dec pop jp daa addl (bad) les clc jnp push aam mov orl add insl les repz jo dec gs mov (bad) stos jp xor push stos scas idivb aad push sub int3 scas jmp pop mov pop ss cmpsl jg scas sahf or sbb jge xchg stc jp push mov sbb (bad) mov jae test js jp cmove sub (bad) imul sti test or and bound lea dec fldt sbb repnz jg aam sbb jl push fbld adc add or jp imul dec data16 popf mov sbb pop outsl dec (bad) out mov ljmp test movsb mov jp sbb and xchg lret iret xchg add arpl jp and cmp jnp repnz aas out aam inc in or sub and fs (bad) adc cli mov push in pop jnp scas test stos ficoml push scas add in and sbb cmc sbb lahf add shlb fwait cmpsl std jp nop cwtl cltd repnz sbb sti xor imul imul fwait out int3 or loop shll jp cmpl push sbb pop mov mov loope mov jne or adc xchg mov push dec xlat sbb jb leave das test adc popf sub mov push xchg cmc jl inc loopne cmpsl push negl mov popl sbb jae inc nop mov push push scas jns jmp stos sahf mov (bad) lea int inc inc fbld icebp sar (bad) xor js push jp mov add insb int3 in xor pop fdivrs dec and xchg mov xchg fbstp push push jp push xor lcall sbb mov cmp sbb add xor jno inc imul hlt pop sbb push pop pop pop lcall xchg jno xchg or or jmp adc jnp pop push jnp jp pop fidivl cmp jmp jp xlat fdivr ss (bad) adc xor or insl ljmp lea jnp sbb mov stos pop or ja cli inc jae dec xchg outsl fisttp mov fcoml mov cmp cli xor cli mov stc clc add jp in or movsl jne cmpl sbb fimul fsqrt pop push ljmp xor xor pop fcoml jp outsb mov das jp cmpsl (bad) mov mov sahf aam jmp push outsl popf jg push sti cmpl inc jb xor jnp jns stos push fisttpll and les jl lahf ss xchg pusha push jnp popf add add movsb nop clc jmp mov jl sets imul iret fwait dec mov sub pop dec push mov jle les mov daa cmpsb jno cmp add xchg cmp adc movsb xchg xchg inc imul ds movl popa lock xor lock jl loope jns inc stos sbb push outsb mov movsb push mov adc dec lea jnp adc dec imul and xchg jmp push (bad) pop or mov mov xor pop jb out jnp ja test cli dec fs out xchg inc cmp push push iret sbb and xchg sbb fisubrl pop push mov mov pop add add fildll in sbb inc stos sbb (bad) test push and jge sub movsb pop cltd jp cld hlt mov stos jmp jg lcall sti mov aam out add jge add dec out in jg fiadd pusha loopne push sbb or shrb jle and xchg add sbb imul sub out push pop pop in xor xorb mov in and jne dec add rorb movsb ja lods mov (bad) jp inc mov inc jecxz xchg (bad) mov xor sti inc sub das pop push popf (bad) mov or mov xchg pushf pop repz cmpsb xchg jp and xchg dec cmp hlt js pop in iret and jp cwtl jecxz stc fnstcw xchg push xor in ljmp bound jne mov sub sahf fwait mov xchg rcll mov dec xchg iret in jp shl xor psubq and xchg sti and cmp adc aad stos fistpl (bad) addr16 pop push push addr16 iret ljmp or jp pop mov xchg out push sub jp loop dec incb jp sbb fwait (bad) pop dec cmp out lock (bad) sarl add mov pop ret pop adc pop cli pushf xor rclb lods lds fs cwtl jp ret lahf lock jp dec push sub jno mov push xchg es test mov in dec dec out add ja or out imul jbe lea (bad) xor adc push (bad) lahf xchg je lea test mov push adc push sahf adc rorl jmp leave jp cli lods push mov (bad) idivb test xchg shl push jp sbb xchg mov (bad) lret jb jo jbe add inc pop cmp pushf flds jp nop xchg pop adc jp cmpsl or fcomps lret jp xlat bound cmp insl test imul pop loope cmp imul int cmpb sub mov fsincos sbb jo cmpsb sub xchg (bad) xor pop xlat push cmp adc out push cmp movsb aam lcall and roll (bad) ret dec rol lock popa xchg fstpt popa or lods data16 mov sbb and mov ja outsb inc int mov xchg ret inc mov scas lds xchg cld mov jp cmp add cmpsl les aas pushf jp es dec add ljmp cwtl ss or sbb shll ret aas pop jp js inc pop clc push jp or push imull push fimul or mov add push pop pushf les jp lret cs pop and imul in mov push sahf addr16 mov add fst out sbb or inc xor pop sarl shrl sti mov int dec jnp inc test sub mov or mov and sbb dec (bad) int mov add stos in (bad) fwait sbb repz mov push push es dec and mov mov dec jp fcmovbe mov arpl (bad) mov in adc (bad) jp xor pop jmp adc inc cltd sbb jp sbb adc scas mov adcl cwtl add mov mov and rcl pop fidiv cmpsb cmp das out adc mov sub push push jl aam lret pop test pop adc fs hlt in add add cmp xchg shlb mov imul inc gs cli std fnstenv add out hlt mov jp test dec jp mov xchg (bad) fwait insl push push xchg nop jp daa push stc je ja cld stos mov and divl dec mov jl xchg jge (bad) lret mov sti jae xchg arpl mov lds int3 orl mov jp lcall cmp mov scas sub or aas int3 (bad) ds jp lret add add das fwait pop mov sub push mov hlt pop and dec negb incb ret ja xor ss and and scas mov std ffreep jmp jge (bad) jno pop mov xchg mov std rcrl mov dec sub jp sbb les test cmp popa jp pop repnz imul dec push mov gs jp outsl jge fisubl lds pop mov fist shll out shrb daa rorl repz test in outsl mov sbb enter mov dec pop sahf fwait push add imul dec sahf jno call pop aaa jp push mov ja sbb mov jo cs push lock inc icebp roll pop sbb pop jne aaa bound addr16 adc cwtl imul cmp jne jge pushl stc mov mov cli xchg popf xorl cmp shrb or mov test rcrl or sbb jae popf jno mov mov or jp mov std test out push cmp inc mov inc pop sub cli rclb push add cmp in pop jp mov xchg mov mov dec mov (bad) and dec in (bad) (bad) pop dec jnp add jp or arpl test jle mov fs dec mov out jb jp imul mov inc mov shl sub pop sahf jae sub jbe ds outsb out leave jp jnp pop xchg lret in xlat xchg shr or cmc mov push scas dec push fisttpl ja ret mov cmp cld xchg mov sbb xchg push sahf jp xchg bound add dec push lods jne or xchg xor mov push mov dec aad rcrb fcompl jp outsb xchg es lea lock jp mov sub pop mov push stos ja mov cld sti inc imul jp sbb leave push mov loop stos or inc sbb les int3 in movsl and pop or sub jp fcomps ret mov and pop sbb ja gs xor (bad) jo jb pop jbe loope jb ja jnp cwtl push mov inc lret and xor jp outsb mov mov and dec jp xor inc out mov data16 push sarl push imul je rcll lods add xchg mov mov push inc jns cli or cmpsb push in gs pop push jb sub sub pusha push inc xchg jne mov xchg push adc jp pop inc in lock jns jno js pop pop cmp jnp lcall aad mov push ret into daa mov xorb jnp out xchg mov aaa fldt mov mov jae sbb xor jp jmp pop push sbb push mov aad push scas dec int dec pop lea out xchg cmovs dec add push ljmp push sarl pushf mov mov mov and cld jp xchg and cmpsb lods lret add test cmp jmp ss mov outsb (bad) push rcl xchg scas pop ja js sbb mov push pop cmp mov adc sbb xor jp lock cwtl pop stos out outsl cmp pop sbb icebp neg sbb xor sub dec cmpsb mov or cmp mov dec jae cmp or pop lock jle xchg and mov mov adc jne and mov xchg xchg cld jp call mov or push pushf pop xchg sub add adc test jae sbb sub pop sub popa rclb and jne jmp into mov cmc ret cld dec sarb scas fucomip test sbb mov jp popf cli jno mov gs sub lea mov loope jnp mov cltd jp ss outsl shrl lcall aaa jge mov insb ds repnz mov sub test and mov loopne jp cs and (bad) mov clc stc fldt pusha ljmp jg jno loopne push aaa mov mov loop add push cmpsb jmp aam sbbl iret imul and das jg mov push in jnp jno mov lock popa jmp imul mov arpl leave xchg mov jg mov frstor fwait lods ljmp out mov push cmp xchg jnp jns cld cmp fs out mov orl idivl jge std mov jnp imul lcall add ret cmp mov jp or adc loopne jnp adc sbbl push mov jae add push and xor push push test data16 (bad) decl mov aam fs je cltd negb nop add mov sti sbb jp faddp sub pop aas pop sbb mov cmp jb push sbb xchg sti push adc lea lock fs jle aam dec sub stc pop sbb push push sbb push jp add sahf push sub test jp,pt dec loopne int inc (bad) jno inc (bad) xchg jo inc lea xchg jp ret xor or fs sbb mov imul mov adcb mov mov mov mov jp jecxz test clc cmp iret addl enter xor jmp pop test cli mov (bad) xor xlat gs pop mov mov pop pushf sbb mov out dec lret mov sub cmp lods xchg in xor push test or jp (bad) scas mov lods jp adc pop popf imul (bad) dec iret jl mov xor inc fwait lods or mov pop (bad) hlt xchg imul (bad) test adc sbb jge mull cmp bound test cmp jne insl jle hlt jl cli std or jmp stos (bad) shrl cmpsl xorl ljmp clc shl mulps dec cmpsl jp test test or aas xchg inc mov xor clc lret sbb stos and dec lcall cmp push mov sti hlt movsb push rolb out jl push push mov loope push fistl jp sbb enter jae pop mov fstl cmp or stos sub ret mov pop pusha sbb dec in xchg pop movsb cmp js fnstcw cli insb dec repnz mov test test iret cli cltd mov stos add jecxz cmp or je stos fcomps (bad) sti sbb iret fsubr add cltd ljmp jl fisubrl loopne mov lods jnp out adc daa cmp clc xchg jne loopne jecxz xchg sub mov sahf xchg scas jmp inc sarb push pusha push mov add push int3 lds (bad) mov aas icebp in mov out push mov mov adc pop ffreep jb sub jl sbbl (bad) mov in iret push jp cmp dec cwtl xchg mov sbb popa push arpl sbb daa sub js in test (bad) adc data16 and nop xor xor and sub jp dec imul mov ds ja and iret xor idiv mov inc repnz sbb dec insl notb and out inc push pop (bad) imul pop push jb jne aam (bad) mov ss cmpsl push nop scas mov lcall mov inc pop pop lock out sti in (bad) bnd fbld and jno mov inc out daa push mov sbb movsl adc xor jecxz dec loopne jp cmc mov movsl (bad) (bad) pop push and dec stc jo and push sub push mov ficomp sbb xrelease ja inc sbb add out sub ret fldt jmp sub lahf dec imul cli in negl jp fmuls insb xchg (bad) ja mov (bad) dec jb (bad) pushf cmp mov std push push mov mov movsb mov in xlat jne pop lcall outsl sub add test cli jle test imul push test dec cli push mov aas add popa movsb cli push sub dec jae mov pop stos add nop int3 sbb movsb pop sbb cmp mov lock mov cmc (bad) cmpsb repnz cmp dec or push insl stos (bad) mov jo mov js imul les jge jp adc jl ret movsb fisttpl mov sbb mov out je cld addr16 adc loope mov cmp jnp adc je ja stos cmp add sti test jecxz clc insb gs mov test xor icebp orw adc ja cwtl pop jp data16 mov leave test mov jp enter dec out dec mov loope imul lods movsb ret jl xlat xor and dec int fmul cmp mov push lret shrl jb mov push dec dec movl scas iret jg repnz ds mov dec dec cwtl mov imul jns stos xor pavgw ja (bad) call inc scas ja cmp (bad) fistpll xchg insb sbb call mov push bound hlt cmp jp or loope lahf adc jp stos cmp inc jp inc imull cld ja loopne mov dec bound push sbb xchg adc or or jae lds dec in outsl enter lea inc loopne sbb aaa mov outsl cltd jne xlat pop cli pop cmc pop pop sbb adcb mov jb mov jge push es in sti int jmp jbe sbb xchg repnz push cvtpi2ps shr and xchg in fisttpl jmp jl loop leave scas or lret out inc dec cli sbb mov jb inc movsl xchg mov jp cmp imul sti push sbb push sbb sub or sbb mov xor ja popf fprem1 mov daa jp movsl dec leave cmc cmp stc (bad) pop (bad) outsl jl jp xchg insl inc lret sbb (bad) lret xor cmp and mov pop outsl and or jge fnop pop loope sub mov popa mov mov jp lcall jp idiv cmp inc push jne (bad) popf fildll dec ret jp or mov stos jp rorl and xchg mov dec lret (bad) iret ljmp mov je addr16 aad cwtl cltd sbb push int xor push inc and mov jl jno push (bad) jns xor cmp xchg dec lcall rcrb les xorl lods add sbb jle jmp sub add stos test loope or push dec inc aad lods sbb jp jnp pop arpl jp out adc dec cmp push rorl jo es stos das cmp pop sub pop push daa js cmp jnp inc and gs rcr test aaa fwait out movsb pop pop jae insl pop mov mov mov mov insl (bad) mull inc repnz mov lea jp popa imul lods add cli dec and mov xor gs pop stos jnp jno xor ss mov and fdivr jne pusha clc sti mov pop (bad) aaa xchg cmpl push leave loop dec mov inc stos push add xchg ficoml or cmp adc pop rclb popa jne pop fwait fwait int3 xchg mov mul movsb add add sub fild pusha mov popa clc addr16 jl cmp in push int3 test das mov add push cltd adc xchg and fwait loope mov mov jp imul cmp stos cmc jbe idivl jl jne hlt test fmull push sub pop (bad) (bad) jnp std xchg add sub mov jp les mov das in (bad) movsl cwtl jp sub jp jecxz and sub jle jnp shrl bound test stos jle jne cmp pop jl imull dec mov cli cld jle dec xor mov or cwtl les stos iret in aas inc sub ja push xor dec (bad) cli adc add and into push mov mulb jbe push out push mov sbb jno lods sub enter push and xchg and lods lds ficompl xor jae jnp popf stos and shl add nop enter cmp xlat jp inc jb ljmp cmp pop arpl mov push mov clc mov or fwait pop in cld lds adc mov mov xlat sub sub or lock icebp mov fwait jae (bad) jp push in arpl mov pusha das pop adc fldt push sbb in in inc xor pusha sbb js inc (bad) int3 cmpsl or xor sub xchg sub mov stc cld mov imul sbb mov sbb aam inc hlt add dec fimull mov inc pusha fs xor cmpb aaa sti movsb dec mov xchg and jns shrd xor mov mov xor mov xchg and rorl mov lret shll mov shlb cmpsl push (bad) aas (bad) jae cld xor add jne mov pop stos fidivr mov sub xor jp test add push xchg cmpsb jp ret mov or pop in mov fcmovne movsl es lret jp jne stos lods push jne mov pop mov rcrb iret popa lds ret (bad) adc stos add inc dec pop or mov adc out jmp sbb or loope mov hlt pop dec pusha dec pop lea gs ss jecxz std mov mul pop mov jle sti push push sbb sbb (bad) cmc cmp sub pushl jge js mov push jp dec inc xor sbb jne cmp (bad) ficomp pop jp or rolb push sub mov mov mul sub xchg xor enter dec gs popf cmp imul jp mov vrsqrt28ps pop adcl and mov or sbb imul inc loopne jb add movsl lret dec xchg pop daa cmpsb gs xchg data16 dec push imul cmp mov mov dec loope cmp mov cmp outsb aaa push inc mov mov daa rcrb cmp pop test (bad) in inc test (bad) sub add lea fiadd pop xchg sub sub repz sti and push test js aam inc lcall xchg xchg in jp xor int push sarb in das and pop fidiv lahf call enter (bad) cmp pop jnp mov (bad) mov sbb insl rcl les stc int3 test cmp add lcall fcmovbe jp or lea enter mov inc (bad) in jp sbb xchg clc mov ss dec shlb es jg and adc popa dec inc (bad) inc jp movsl push fistp adc inc shll sysret dec stos xchg jp (bad) xor adc cld jne lcall lret adc loop push pop js pop sub lret push bnd je push (bad) push repnz int lds mov out and push dec sub lret sub repz pop lret sub ret push je jae (bad) xchg mov lret adc xchg xor sbb or and cli dec mov fcompl xchg jne jg push pop jge sti mov adc shrb dec xchg xor inc dec add and cmp imul adc daa dec jp cmp and pop sbb lahf jp lock das inc movb ja in movsl cld mov mov nopl push add pop scas inc stos mov stos int mov (bad) cli in mov add jae clc (bad) cmp in cmp xor stos pop dec jl mov jae cld popf mov sub push dec fs mov iret mov and pop add mov and aam jbe movsb fisubrl push subl push gs movd imul inc loope dec (bad) adc test xchg arpl sub mov lret jp stos clc push test lret sbb scas push fs lock lcall jb cmpl into and pushf push sbb mov pop mov cmp jne jge and xchg jp imul mov jnp xlat jp repnz or and fs jle cld xchg jae (bad) jmp shll outsl and jne adc testl xchg cmc sti mov ret fistp jle add mov (bad) sahf pop xchg cmp inc mov inc mov and faddl mov xchg pop scas (bad) out outsl push lret adc dec or jbe stos add adc (bad) arpl ljmp push shrb lock mov adc loop xchg pushf adc mov sbb out insl jns jnp mov inc ss jge call add cmpsb movsl jge loopnew mov jne adc sbb sub gs sbb xchg push ret push mov sub aas aaa (bad) imul cmpsl imul nop jmp mov insl fsubs insb dec sub jp mov pop shlb jp stos jns ficompl jp pop xor jp xor sbb inc and lods (bad) xlat jecxz pop jns cli sbb (bad) jae cmpsb xchg jp pop movsl push or ret aam imul test inc jp loope cmp or push mov cmp inc repz leave push mov test jp and mov jp nop cmpsl jb leave imul mov sbb out stos and repnz popa shll mov jp mul jecxz mov or popf das xchg mov sbb sahf aad inc divl movsl lods pop in xchg cld jp pop sbb push addr16 aas movsb mov adc push (bad) cmp dec shlb jne xchg popa xchg lret adc and and mov pop pop xchg cmp dec pop aad les lods das push cli sbb (bad) and add push cmpsb sbb add arpl sub sti cmc push insb and dec fs stc jae call push int stos and scas lret outsb or ds mov dec mov jg mov mov mov pop mov inc cmp xchg jp repnz (bad) movsb xchg mov andl stos push or aad test xlat das fidivrl fidivr pop cmc arpl (bad) jmp sarb aam cmpsl mov jp push test ret cltd jne jmp das add in out sti test push xor xchg lret adc cmp jge scas sbb repz lods sub jp repnz jl or cmp pop aas sbb jno bound xor sbb jb aas adc or movsb in jg cmpsl mov ret imul fldl sti lcall (bad) push loop pop outsb inc repnz jp fbstp or lock jno mulb jnp (bad) jae pop fsubp scas inc jp push repnz mov in pop mov mov jnp push mov gs das (bad) jge int lds fstl mov fsts and ljmp or ja mov pop fdiv inc (bad) mov xor jnp add jge mov push sbb addr16 add and push mov dec in fmull out jne pop and in jp or inc jb xchg adc repz mov sarb out sub lcall ror xchg push out mov outsl ficompl sahf pop pop loop add lcall mov adc jne in add mov push pop popa andb jp popl gs mov leavew mov mov es and popa imul lcall idivb out cli adc addr16 xor dec scas lds xchg sbb xchg dec sbb movb pop movsl insl lds inc sub das cmpsb shl sar lret or in scas push jmp loope and ja push push pop mov mov js inc popa pop aam mov fnstcw mov pop xchg mov into and test xchg or std xor test mov shll outsl jp leave push jne cwtl test into sub adc jnp cmp sbb cld clc jns movsl out mov negl movsb stos or fcmovnu sbb out mov insb jns sub iret jne jg enter mov dec insl lds ja ljmp adc inc mov jp imul jecxz pop sti bound jp pop (bad) jecxz push xor pop xchg jbe and int cmp ret xor jns jmp and fild data16 insb lds pop jp (bad) (bad) jmp adc mov pop loopne lret cmp pop mov test dec out mov mov or xchg inc (bad) jp (bad) popa adc jmp sbb push jp lock push jnp or fdivs fwait sub call push jmp and mov jl jge jp jle movsl aad test push push jno jns sub pusha gs jae push ret mov jno add jecxz arpl sub lea dec inc mov cmp sub cmp mov mov stc cmpl sub sahf mov insl mov int3 adc je and testl fwait je adc dec fbstp push jecxz cmpsl int3 sub adc xchg mov sbb xor (bad) jne popf aam fcomps cwtl jp jo dec dec clc jp jb mov dec test jp cmp or pop xor or repz insl add jno sbb sahf cli addr16 popa (bad) out dec push xchg ja insb inc ret ja leave jbe jg jge xor xor cmc xchg clc pop loop mov xchg jnp jmp jp insb lahf fwait mov push pop ja cwtl sbb inc cmc decl jne adc add mov jne lret add into cmp addr16 (bad) jnp dec fidivrl rolb jecxz lea mov inc mov xchg pusha (bad) cmp xor iret leave cltd add jl sbb dec das jp arpl (bad) clc cmpl jp push ret lock jp jae add andl ja dec push pop sbb nop jecxz je cli mov and aad stos inc or mov add inc jge test in inc (bad) idivl push lea sar push inc push mov pop popa adc mov cmp subl movsb mov push lods (bad) test sti movsb dec or arpl pop shll dec movsb imul jo jbe mov ret dec cmp ljmp dec cld jbe sbb mov dec sub jmp stos sbb push dec imul movl adc cmp (bad) lock and or dec fwait leave ja mov stos (bad) and jl sbb or lahf jno mov adc ja pop fbld xchg mov sub (bad) insb cmp adc ret gs pushl sub sahf push fwait pushf jp dec add sbb sahf jne xchg mov inc mov lahf ud2 jnp mov jnp add imul rcrl pop dec popa push push es js cli mov scas ds js cmp pop gs sbb pop fldenv mov or inc push add mov inc sub add xchg lret sarl sub xchg push jl xor jp lret aad push sahf xchg or mov (bad) xor lods add in into add jp nop pusha sub or outsb mov fs inc push mov idivl (bad) (bad) adc sub adc xorb jne dec mov mov cmp ja jne inc pusha push popf inc mov aad mov cmpsl jp mov scas xchg lods idivl clc mov sti insl jnp jecxz test pusha xchg xchg inc pusha inc jle push int std js jne mov jns rcl add cli decl jg sub mov xchg mov sub dec je pop sbb add cwtl stos mov add push sar add mov std xchg ret push or aas pop (bad) repz shl add in inc cmp push xchg mov leave les xchg sahf jp stos cmp in inc ja psubusb jnp (bad) sub mov pushf sub jecxz imul inc loop push pop sbb and mov sub ja iret test flds sub push (bad) jle jnp inc dec or inc jae mov sahf call mov push lods (bad) aaa (bad) jle gs ficoml and sub lods in sub jne jne decl shll cmpsl sub int jp jo into aaa shll adc outsl jmp jbe push mov cmpsb sahf dec lret int mov sbb or mov pop jl mov mov dec test and push out imul ljmp pop pop push test (bad) jnp dec fadd imul fwait repnz clc or dec xchg gs pushl fbstp xchg mov jnp add hlt imul cmp cmc das iret sbb add lcall mov int xacquire jp mov mov dec sub push cld cmp sbb jno pop xlat jl mov test cmpsl lods xchg or repnz push les das (bad) (bad) lods ja add ror jbe dec (bad) repz dec push sub ljmp cltd sti lds stos and lcall flds sbb cmpsb cmpb je sbb push data16 pop fs sbb lods aaa cld push rolb rsqrtps ljmp mov cmp out jne dec out xor cli test movsb or (bad) pop jnp sti (bad) js mov pusha loop ja arpl jl xchg das jmp adc or out pusha sub jp jle mov nop jp cmpsl lret inc out cmp std xchg mov (bad) push fisubrl push cwtl fild (bad) fldt and xorl cli sub mov imul sbb cmp dec movsb in into mov mov cmpsl cmp (bad) mov mov mov sub sub push mov bound (bad) scas pop add fisubl jns mov mov push in jp mov mov dec mov dec and popf push lock (bad) or fcomip rcl push imul sbb movsl jp mov mov push in cmp sti pop es sbb cmpl jae aam inc icebp aas adc xchg mov popa sub fcoml jp add mov aas sbb pusha (bad) jo dec add fstps dec loope push sti hlt (bad) loop jge lret scas fisubl fwait jb,pn xchg jb cmpsb jp push cmpb mov jnp mov loope mov lds aaa push movsb aad jbe sub inc stos cs mov lds inc mov pop andb sarb es sbb movsb mov insb (bad) stos and test scas stos std xchg mov xor (bad) mov jo and push jb and mov mov mov (bad) repz mov addr16 adc ret xchg mov sbb iret pop mov cld out jle ds or and cmp stc xor push (bad) cltd sub sbb jg lcall mov xor mov push pop mov loop push sub mov sbb stos pop mov out inc popf push testl arpl pop int jle and int3 (bad) insl loope sahf jecxz fs pop jne fcoml outsb xchg stos fdivrl scas push push pop sahf cmp and mov fcomi jne js daa mov xchg mov imul push xchg fisttpl int mov test xor (bad) loope sti out or mov dec and mov xchg lret stos sub xchg movsb mov arpl stos bound dec stc dec inc xchg push pop dec sbb pop or dec ret mov dec inc or ljmp sarb clc push sub xchg scas lock inc daa pusha push ret lea int jp std enter in lret mov aam or jb xchg sar or pop xchg jle cmp xorb cltd imul cmp das gs fwait test xchg mov jle sarl and push (bad) mov sub jnp,pt mov jb push pop push cmpsb test xchg mov ficoml or dec sti mov aam add jp loope faddp mov mov sahf pop fildl loopne data16 mov or sbb pop mov mov icebp cmp and push sub mov ficom lods movsb jp pop pop xor sbb jp push and adc or and xlat push jp (bad) loopne ljmp mov and movsl jp movsb loope mov (bad) xorl in cmp xchg fdivrs mov popa mov aam cltd fistp stos pop cwtl lret pop jge dec fstpt inc add loop mov cli push clc fsubr jp mov jo jp daa rclb sub mov test aam cli push cltd sbb jnp jecxz xor jno cmpps add jae or ljmp mov fnop or cmp mov es in jno sub pop (bad) repz std sbb sarl cmp add rclb cmpsl add sbb mov sti xor or sbb and jnp out sbb or adc cmp adc rcrb outsb mov mov jp xor xor (bad) jb cli cmp divl lret scas int3 jp jecxz fisttpll ljmp sub loopnew ljmp lods fnop addr16 add imul xor or pop sti ds out jp add jbe jp or mov mov iret pop mov mov jp pop test jp push jle (bad) pop repnz push dec jp addr16 popf xor repnz jp mov mov popa xchg jp pop faddl jp xor es cld icebp jp,pt inc lods (bad) cwtl jg mov adc jp dec arpl mov jp dec sbb dec jmp or jecxz stos test arpl jl ss mov int scas mov pop out loop jno jmp pop mov mov adc sub in inc jno pop scas or fwait icebp pop repz fistpl imul and fistpl push xor xorb xchg mov cmp (bad) imul pop dec sub or push xor ljmp xor frstor xchg mov xor imul punpckhbw cmp addb sbb cmp push jge mov dec (bad) and inc add call dec lock mov shll cld inc mov push scas cmp mov mov lods xor iret leave je movsb dec cmpsb mov test push add test sbb aam xchg dec cmp xor mov mov ret adc inc popa mov xchg test sbb jp jecxz dec lds idivb (bad) fimull jp daa xchg insb and push sbb mov push mov (bad) xor mov cmp push jmp xchg jp and adc (bad) or and (bad) popa fcmovnu fdivs or mov sub neg inc inc mov add in mov or daa aad cmp ss jb mov dec lret scas gs outsl dec inc fcmovb jno int3 daa xorl imul mov adc fwait (bad) or jp fs mov mov popf pop mov cmp bound jp andl mov imul sbb subb pop loope xor push jne (bad) in fsubrs lcall mov das je dec push jp adc insl pop enter add aad xchg jp add or mov ret (bad) jmp xor mov clc sbb jb jp ds stos mov lahf adc pop jne gs shll push mov jg adc flds clc sti xor pop cmp ret stc inc imul int3 add xchg or and test stos or dec push jb xor xor fwait xchg jg cmp push repz out jmp xchg lcall sbb and jnp out jo (bad) lcall add mov in inc insl sbb leave outsl push out stos fldl dec lea mov and inc insb dec aad xchg adc add add jno into leave sbb add stos xor mov int3 lcall cli jg sar xchg pushf ss xchg outsl lcall jne scas mov push jns or icebp repz fs imul lcall lock jle pop fbld (bad) and sbb fcmovnbe aaa add stos adc mov cmpl inc movsb mov cmpl jl sbb push sub mov insb fisubrl pop sub jmp scas insb movsb clc mull jne inc stos aad cmp dec or cmpsb ljmp mov xchg push bound idivb sahf dec mov sub pusha (bad) call mov inc stos (bad) rorb fidivl or orl inc cs je addr16 and mov lret rcll (bad) mov xchg adc sahf dec outsl insb inc es cmc lea push ret xchg lret loope cmp ljmp xor push out xchg shrb sub cmp dec and jno push jecxz mov mov add mov loop leave and incl push movsb jl ja push dec xor xchg out mov imul fistpll pop stos rorl repnz sbb jno mov insl gs (bad) mov sbb dec cmp (bad) sbb out cmp movsb das jmp (bad) push clc jae insl es xor mov mov dec iret push movsb shrl imul sub aad call dec mov pusha cmp (bad) mov stos jle xor arpl push addr16 push arpl pop lods add movsb ds xor jnp je out loopne or mov jle sub dec jo rcrb jmp in mov xchg stos sbb arpl (bad) repnz popa into fsubp add sbb or out imulb lahf test mov lcall pop popa push jae lods leave push divb (bad) icebp cli push out pop aaa pop mov cmp sti nop pusha jne adc (bad) insb fst lahf jp xor push test lahf into movsl xchg shl fwait cmp lret and ljmp push xchg mov sbb (bad) and xorl jp inc mov push popaw dec les lods (bad) leave popf dec ficom push mov jne xchg aad test (bad) in sbb inc mov fmulp sub and or pushf dec js push mov std fisubl jnp mov (bad) repnz dec rsm cli in inc loope jmp nop mov adc les lods dec mov cmp jmp dec cltd jne cli aas sbb mov adc cmp dec mov mov and mov pop jae xchg push sbb shll pop aam dec push add dec push or stc jno mov aaa scas xchg push adc loope stos mov jp in push mov stos xchg jge in jbe nop or aaa out sub jmp lcall dec loopne das (bad) mov stos xor cli pop movsb sbb or int pop pop xor mov out sahf daa mov xor clc mov fnsave je adcl sahf hlt inc mov orw fucom cli clc lods or les orl out cmp es cmp jbe xor andl or pushf sub mov inc or sub sub cld gs add pop repz insb sbb jb aad lea les dec data16 or rcll jae stos or mov xchg sti pop or popa inc int push inc mov cmp mov movsl inc jae int iret jge add pop rcr insl push mov jmp xor movsb push insl lock dec (bad) dec cmp stos call and movsb arpl shr mov gs loop outsb or fisubl xlat stos dec adc add outsb repz dec sub and or aad push add jbe or leave mov pop rcrl mov lods dec xchg test arpl test inc push pop pop mov scas cs imul or icebp push test inc (bad) mov xor push pop in xchg xor das jae and cmpsb push ss sti lods fneni(8087 stos xchg mov push xorb call xor add mov xchg mov xchg aas (bad) in test adc stos imul out cmp popa dec pop test repz leave movsb jg jg loop sbb imul nop sbb jbe pop jl cmpsb dec lods fistpll pop imul hlt outsb outsl stos push mov mov imul push push jns mov enter dec mov adc stos mov xchg pusha ds xor dec insl lret (bad) mov mov (bad) mov jae adc cmp scas (bad) mov xor in fldenv push cli stos fnstcw or pop adc xchg pop dec aad push mov xor outsb mov or dec jae mov test int3 and cli jae ljmp push mov fadds jmp dec inc push lods pop aas (bad) mull aad sbb pop fld or ret jp mov outsl fs lock cmp (bad) dec cli fldenv and mov mov mov dec push stos push mov loop cmp jne and loop jge jnp stos stos pop add push in sub push lret push jno inc imull imul push push adc adc jae add int3 outsb movsb pop xor push xchg adc imul mov dec outsl movsb sub stos je adc js jbe inc out notl inc push es loope xchg in popf xorl jmp shr movsb and call fildll outsl into adc clc inc or movsb jno sti and adc mov sbb fsubl ficompl mov mov into test cmovge rcrb test fcmovne aaa loop add push popa jno mov subb mov and xorl jnp hlt leave sbb jp icebp jle fisubrl lea repz lret mov sub fwait sub push or sti daa push add gs pop cs mov mov shl xchg aad cmp pushf jg xchg sbb sub test xchg push sti (bad) in inc sbb inc add sub insl xchg sbb mov jp add dec xchg int or jnp jp or mov imul test fistpll (bad) mov mov xorl cmpb mov sbb dec inc adc fwait testl lea add lcall out and (bad) (bad) aas cli jne mov int3 ficompl pop pushf push mov cmp gs sbb test ja jp jecxz lea pop fnstsw sahf push loope scas les outsb inc (bad) jp xchg iret xor mov lret rorl mov inc inc jnp mov sub (bad) xchg stos aas jecxz sub jne mov outsl mov fldcw mov (bad) movsb cmp mov xchg or fistp enter addr16 sub jns cli test orl jne roll (bad) or imul arpl or jne push xchg cmp jp mov xchg xchg pop repz rolb mov out jb (bad) sahf push gs mov mov (bad) push inc push fnstcw outsl lret xchg push push and dec sub movsb jno and imul jnp pop stos pop out insl lret xchg add sub shrb cmpsb mov cli jbe xchg sbb into jp pop sub sub cmp jns mov pop popf jae inc cmpsl gs pop xor jp fisubrl mov push pop push mov shlb add xchg jl mov push sahf cmp add dec and out xor test test loope dec jne add test sti push lods lds lods fs cmpsb dec imul daa add mov std test mov mov (bad) xor jp push jg mov push clc int3 jp loop,pn arpl fld1 jle mov push xchg adc dec cmpsl xchg mov mov movl scas mull (bad) cmp mov push cltd jo (bad) cmc aas mov out cltd inc or addr16 lret xorl lds sbb imul add sbb gs adc imul ret sti xchg movsb sbb mov inc dec rcll in dec loopne shlb fmul aam ja clc mov mov push bndstx jp (bad) loope ret inc cmp arpl sbb imul and sub pop rorb (bad) loope jecxz arpl add dec arpl fs adc xchg lods mov dec pop xchg or vshufps stos jb mov stos stc aas pop push mov push iret push mov fsub jle pop jae enter push ja mov push inc xchg andl mov out bound test imul outsl xchg sahf sbb popf or cmp (bad) ss scas (bad) int and adc add loopne mov insl (bad) negb into jge cltd jp pop or mov (bad) lock bnd aam inc in into inc lcall push jp push xchg xor and mov test mov cmp movsb daa mov pop es in rep stos or hlt jp mov test adc ja repz add mov or arpl mov push iret mov test mov jp cltd inc push mov fucomp or jg or inc dec lock push stos lahf sbb mov jne hlt orl dec and pusha xchg adc sbb les sbb inc dec lret xchg das mov cmc cmp cli mov test in jbe arpl popa mov ja and dec mov mov and outsb sbb mov add lock mov push jbe (bad) jb cmp aaa jge pop push xor ja dec xor aad fwait (bad) inc loop cwtl jp push mov xchg arpl mov or (bad) mov adc fcmovnbe mov (bad) insl push mov arpl push ja and pop mov pop dec stos popa push repnz pop add jp inc pop pop mov pop hlt mov add push hlt scas xor mov stos das loope mov sti pop inc cli (bad) fs xchg inc cmp (bad) xrelease insl add pop sub pop out (bad) push dec jbe sub and je aam xor sub out stos ss fs pop dec out jae cmp (bad) xor jge pop int aaa inc stc mov aad ljmp sub and sahf sub je jecxz jle int3 cmpsb arpl es adc enter stos and sti and pop mov and xchg fsubl fwait stos add jne or mov stos ficoml cli jecxz mov mov jne mov adc jne je inc aad push inc jle movsl ljmp inc add insb cmpsb repz cmc stos inc rcrl sub jp pop push icebp mov int3 dec push push mov inc inc pop dec sbb cli push stos and rolb arpl jecxz jne pop fwait std ljmp jp ja mov mov sbb sbb test mov adc adc ljmp stos add xchg cmpsl or push jp outsb push ret lea jp addr16 pop movsl push (bad) lock lret stc out les adc rol je scas push (bad) inc mov pusha aad mov cltd jmp push mov xchg ds outsb mov add mov sbb lcallw jno pop inc nop jp mov fdiv jp inc push ret mov incb sub jb cli mov fiaddl mov or mov sbb xor jnp sub mov cmp xorl jg fiadd xchg in jnp outsl or scas les pop inc insb aaa xorl xchg pop jb cmp rcrb (bad) jge cmp ja push shl dec mov stc (bad) cmpsl in sbb jp or dec leave sub mov push mov fidivr mov or jmp or pop sbb out adc xchg cltd dec xor sbb imul clc ja sahf shl (bad) lcall (bad) repz add cmp scas dec es cmpsb lock leave fistpl or lea mov dec testl pop ja adc fstps jno stos sbb xor mov pop add xor sub cmp pop insb sbb (bad) cli push or cmp pop sarb stc add mov cmp add scas push mov imul pop jb lea repz gs cmp imul test xor in js jecxz in xchg and jmp sub xchg js pop mov xor push or sbb xor add sub fwait xchg or (bad) into push jns jns js stos popa sti in sahf test jp stos test arpl jp add cs sub bnd gs mov je shr cmpsb (bad) jnp pop jb dec movsb imul mov enter push adc aaa pusha jnp xor pop sub nop mov cmpl mov xchg ja or out or mov mov stos outsb dec aaa (bad) out jg push popa mov aaa in cmp stos jo jle out push gs or (bad) int mov ja mov jp push and and jmp arpl inc jno dec cmpsb sub add nop mov jp xor lret xchg xlat cmp sti add and fcmovnu out push out dec movsb dec imul sarl xor push mov and or add cmc sub loopne pop jp xchg ret add jle jnp repz jno push mov adc and shrb pushf sti sub mov lea cs or jp movsb iret test loope inc addr16 pop ja int (bad) or mov ja pusha xchg es inc jp or add jp lcall clc mov or and test cmp repnz ss mov xchg (bad) cli pop jp sbb ljmp cmpsl mov add jp xor mov lea xchg sbb inc (bad) and cld ficom dec add fldenv inc fbstp out movsb (bad) mov imul insb jb mov into sub dec dec jmp jp xor movsb scas test lods test mov std cs daa aas cli subl or lock jp lea or jnp out mov add repz pop push push ret fdivrs js mov xor je aad and lock movsl lret cmpsl cwtl lcall adc stos mov fsub push int xchg jp out loopne (bad) mov add xor sub (bad) jg jo arpl dec mov inc pop pop shlb movsl cwtl add pop je xor push insl ja cmpsl jg push aam xchg (bad) sbb fisttp je push and outsl inc je addr16 inc sub mov (bad) cld push jae pop aad mov jns (bad) jno xchg ljmp jle sub (bad) in jae jae cwtl or (bad) add sahf jb sub roll sbb cmp into test fisttpl jb lcall stos sbb inc dec adc scas and mov hlt xchg push cli rcrl sbb dec jl sbb jnp stos lret mov adc and jno data16 or dec adc dec sbb loope pop fimull lock pop lcall stos iret and or jae push lcall jge movsl jecxz int3 pop sub loopne inc std cmp jp (bad) mov pop pop jne jecxz (bad) lret sub mov mov mov xchg push sbb xchg dec jmp lds outsb les pop into jle out mov scas push movsb std jp push jo cmp mov test jg out cltd sbb xchg outsl pop loopne inc xor (bad) mov mov mov cltd mov inc jae daa mov mov pushf test mov jp (bad) sub (bad) in imul cmp dec mov (bad) dec dec out inc inc rorl in xor and push xchg mov fistl xchg and pop xor cld fwait out push test dec sub sbb imul and je jp xchg xor jle push leave push mov cmp out (bad) mov test jp add fwait das in sarl pop mov cltd fmull in ja mov sbb dec or mov push add xor nop pop pop iret sti fcoms inc cmp test jp xchg push je fs push jp adc or icebp stos sti movsl add dec in jp push add xorl stc dec dec jne insb mov sahf jns in push aas and xchg jmp stc push jp sub mov push cmp push jns lcall shrb mov das mov gs jge or test add ret loope mov lds jp int3 movsb daa bound xchg into jne pop pop push xlat loop aam (bad) xor pop arpl ret lcall xor loop in das loopne cwtl fcomip mov push negb andl popa mov stos push mov push add in jnp je in mov lret xchg ds push cwtl sahf jp int3 in in das imul lock daa dec les mov cmp ja pusha or mov jbe jecxz mov (bad) cvtps2pd push je jae ds cmp push pop sub cli inc daa push xchg jle pop and dec pusha sbb mov and fild lret lea jp mov aaa sub fdivrp xor fiaddl out repz imul and cli cmp enter add add imul mov inc subl fimull mov jp sub cltd fwait jp xchg inc mov cmp gs movsl dec push nop (bad) mov aaa sub push mov jp mov mov and push jbe stos or sub and mov mov push sub jns xchg push jge lds inc enter ss or mov cmp cld mov cli stos adc flds cltd ja mov sbb movsb int jle sti stos xchg (bad) cli pop stos dec sub and movsb mov push cmpsb (bad) fsubl xlat cld lods xchg je push mov js xor mov stos cmp cs icebp out mov lods stos imul (bad) cli jecxz add adcl jbe out pop mov stos shrl fcoms cmp mov gs rorb mov cmp arpl jnp sub stos into sub cli jns mov stos push or and xchg xchg jbe dec push cli or dec pop or out sbb ljmp sbb jnp jge inc pop aam bound mov mov cmpsl mov adc daa lea mov jp dec sub imul cmp adc loope and pusha nop leave jmp fadds or or jp cli inc add popf cmpsl pop xchg insb fisub loopne mov jo mov jns daa (bad) bnd mov add cmp dec std hlt (bad) stos push add jne ss pop adc sbb jno jmp jnp mov incl ret jp pop or mov mov add jmp push pop jbe,pt jp iret jg hlt adc dec or and push hlt fs pop in fwait jl sub or jb cltd xchg nop dec dec push mov pop jge push mov sbb xchg pushf xchg inc jge mov xchg adc les (bad) sub jnp sub shll jp int dec lret add pop sub jne and stc cli push lock aas mov xchg pusha xlat jne es arpl into in mov sbb das ds pop xchg cli xchg jp std mov movsl jg inc dec lret scas jp mov dec jmp add adc mov shll dec out jle stc test mov mov hlt fsubrs jne les and ret out shr (bad) adc bnd lds jae jg cld mov adc pushf xor or add pop (bad) pop repnz jmp fidivrl fnop es iret sub inc rolb cmp rcrl dec xchg movsb decl cwtl push xor pop mov call pop lret aam push sbb jb xor push and ret mov lock jnp clc mov adc cli imul cltd mov jno out lods (bad) mov clc ljmp mov xchg cmpsb jb jnp imul inc repnz icebp fisubl mov out (bad) mov add jne push daa jp dec fcoms idivl lds leave lret clc jp nop adc adc inc cmpsl jne mov fcomps or stc jp pusha adc in mov aam jp,pt pop cwtl sbb xor sbb fwait jecxz sub je int3 cli jne xor (bad) enter sbb dec add add pop sti aad sbb int3 out jbe jo push jp (bad) mov sub int jp or push jle lea data16 dec cmpsb (bad) dec fdivrs pop lods xchg pop iret movsl push or (bad) in or js push pop sti push dec movsl fildll xchg sub je hlt inc fwait hlt or aaa jp sarl xor push push loopne jae jbe fidivl lret call sbb sahf jp adc add jp push mov pop or mov cmp outsl dec pushf xlat sub fnstsw jle pop mov in add icebp ret inc out ja cmpsb inc xor sti jae or jp xorb out mov sahf cltd addr16 in imul loope roll jmp xor xor je jle xadd pop mov fidivl push mov jns and dec or jp (bad) fsubr enter mov push push jp or cmpsl test in push mov adc aad (bad) pop fistpl sarl jle leave jne adc ficom ss jnp aam mov jp add lods in mov or cli pop fcomps jge xor sarl hlt sub mov jnp repz pop mov or xor mov jno mov stos mov je xchg sbb (bad) pushf xchg clc add jae fs add (bad) mov inc mov in inc mov or jp daa mov jp inc xor js pop lds or mov ss push mov add jne jb pop ljmp inc xchg aad xchg leave fincstp and sbb addr16 xchg popf hlt pop and pusha imul fxch sahf sbb sub movsl imul lods inc mov jne mov dec sbb fist sbb adc lock jnp test xor pop shr adc xor (bad) mov ljmp scas lods mov nop jecxz inc jp cmpsb and xchg jns and or aas push gs jp js push mov inc (bad) aam mov fwait push test ss push movsl iret jp in les jno popa stos mov int3 mov cmp jp jge das xchg imul push je lretw imul jno cmp mov sub ds xchg dec lret cmpsl adc mov add cli adc insb jno mov jp fdivs je push inc int3 mov push loope lret cmpsb stos std push pop rorb jp pop sub jmp jne adc mov loop daa jp adcb in test pop sbb xchg xor pusha jns fld pop sbb or jnp mov and mov jp mov stos jbe xor jne inc rcrl (bad) jp pop xor jge sarl mov xchg jp push pop mov in movsb mov inc popa or lods test cmp ret addr16 aaa xor outsl mov mov jp,pt cmp sbb fdivs jp in dec out imul aaa xchg lods repnz imul (bad) pop cwtl jno aam je idiv adc mov inc mov lods aam insl jae jae or bound xchg dec ja add sahf insl pop es inc arpl jmp cmp and inc movl pushf pop push dec movsb jecxz pop es popf mov popa xchg push loope mov push (bad) push mov dec addr16 add dec jp data16 test ljmp sub pop fidiv push repz sti jae or cmpb jp fsub inc mov add pop push pop je je (bad) (bad) xor test jne mov lret popa xchg dec push sub jb add popf lret jne cltd arpl jg jle mov jp jnp (bad) faddl add pusha dec adc repnz inc mov cmpsb int arpl push mov imul mov sahf or or pop lock push mov sbb pop pop jbe sub mov push pop insl push dec pop jg jno (bad) mov mov cli hlt jge jp lock xchg lods in dec stc fcmovnb mov inc jne mov in das cmp cmp shlb lcall pop sbb inc jp in mov popf jp push clc xor sahf mov jp outsb data16 adc pusha adc leave lds cli and orl test scas fimull jle jae ljmp lahf adc cli xor jne pushf imul dec clc imul xor insl (bad) pop (bad) or js cmp mov gs inc push fisttpl inc sub push mov add lea inc sahf xorl sbb lock and xor pop test in sub popf pop ds or lock fsubl xor ja xchg pusha pop sub jbe arpl sbb in movsl test cli jnp inc or pop mov pop xor mov jb js or jp jbe lea mov test push bound sub mov xor rorb sbb sti mov or ror aad cwtl aam popa xor sbb ret cmp push add add popf cltd mov adc pop out and pop mov insl jg fs cli pop mov dec in aad int jp pop pop xor jo lahf jp mov nop fwait and das jae outsl dec pushf arpl (bad) and into (bad) mov jne lcall mov into jp mov mov mov xchg pop scas cmp mov jnp repnz movsb test adc popa cmpsb jecxz scas or jp mov aad jg sarb fstps ss inc es aam sti mov jp test stos or divb js adc add jmp mov sbb movsb mov leave pop fist cmp push pusha ret imul mov ss js lea dec outsb push jno sub xchg mov test xlat arpl fnsave ds push cmp or hlt add cmp xchg mov test and mov dec jp push adc (bad) xabort jp cli and push dec and out ret or mov xor or mov fs arpl xchg jp aam lods push loopne jmp or lret and pop fxch push sub pop aad imul stos xorl ret mov xor jno (bad) sub add pop jecxz mov outsb jge sub inc in loop cli sarl insl mov (bad) push adc arpl popa pushf sbb sbb jne sahf or xor leave mov arpl lcall cmp sub gs mov movsb cmp rol mov leave xor or mov clc rcr (bad) (bad) fldt stos jno repz push nop hlt pop mov popa pop loop jle pop dec lock pusha cwtl jmp mov push cmp dec mov lret enter mov cwtl dec jp cld mov dec imul fwait lret stos outsl arpl imul xchg jae stos loopne adc pop outsl and or jg mov or mov into stos ret push leave stos and add add pop fldt push movsb test daa jp lods cld dec jne,pt pop stos mov mov pop jbe clc jl or pushf daa jne mov gs (bad) leave or shrb int jle js popa addr16 idivl adc imul out (bad) xor je pop (bad) int3 aaa outsl or mov sub ret jns jmp sub insb out sahf mov loope fwait mov mov ss xor clc ja mov pop testl addb pop shrb push jl push jbe int3 xchg jmp hlt fstpt repnz sahf dec or xor mov cld fimul inc and or or imul mov jo pop fsubs dec jl jmp lcall and xchg dec and xchg scas in movsb outsl into jl (bad) or scas pop pop xor pop gs fs mov cmpsl xchg jecxz pusha insl push add in cmpsb adc jne xor outsb ljmp xor movsb data16 pusha sbb push outsl cmp cmpsb daa fimull jae stos mov cli jecxz push pop jp scas jnp adc repz jp aas lds inc mov jne dec stc cmp (bad) mov cwtl jg loop jp je sub cld cmc daa loope cli sahf mov rolb loop test push jl or cmpsb and ljmp testl or pop jns jne (bad) push jno mov insb mov or lock cwtl xchg xchg je cmc (bad) push pusha es outsl enter push or scas or and jmp jno mov ret xchg fcoml aas mov lods out add jp mov pop (bad) call add mov pop dec sahf imul (bad) dec xor mov aam aaa std push (bad) lret cmp movsl pop mov lods and out lret sub into fs mov jae movd mov rclb popa jp mov lcall movb cmp sub bound out jp sbb pop movsb pop push test shl gs popa sarb mov mov movsb frstor mov jne sbb sbb cmp outsb pusha mov outsb fisub xchg stos dec in fdivr mov movsb cli daa dec jmp daa mov rol inc mov mov popa insb je add mov rcrb cmpb inc mov stos repnz jbe dec les daa jmp or and mov xor icebp rcll jecxz sub pop std or or push imul int3 in ds mov sub mov in daa pusha fldt xchg jp ret jecxz movsl out and dec push inc cmp ja and gs cmp in movsb adc add mov loop sbb (bad) repz mov mov jne sbb push sahf in pop es shr jmp (bad) decb inc movsb gs and insl div int mov popa inc out pop aad jne xor pop xlat sbb dec xchg and mov mov dec test xchg dec dec and xchg pop push loopne pusha sub sti pop (bad) mov mov pop xlat nop xchg insl lds mov push mov enter jo adc pop in fs mov mov mov (bad) jne mov iret pop mov lods pop out sahf jp stos pushl dec fimull sbb dec mov mov sahf lods mov jp adc (bad) adc stc mov cmp mov loope sbb mov ret push popa mov mov sub jg and jp fwait addr16 sbb cmp dec push pusha mov mov addr16 dec jbe jae cmp xchg pop sbb cli aam jns jae out in pop jp adc jb and fwait inc outsb (bad) jp adc push xchg mov enter into dec insb ret sbb les jp xor aaa inc enter add mov gs pop stc fisttpll (bad) xor cld inc sbb test insb (bad) jmp call cmc mov inc pop fstpt movsb cmpl rcrb add xor stc bnd popf pop fwait xchg sahf inc adc sub mov fcomps jnp and jb ret iret push jns insl xor pop fcmovne mov arpl jecxz jle jns ret sub fnstcw xor int3 movsl aam xor xchg sbb inc cmp gs or leave mov test xor (bad) push insl fcmovnu pop dec movsb cwtl jnp mov cli mov je sub or lds jp (bad) push scas dec dec adc movsb xor idivb mov mov mov xchg movsl fistpl fstpt rcrb addb (bad) stc (bad) jnp or add (bad) cltd xchg mov outsl add cli cmpsl insl pop ret (bad) cmp imul arpl jp cltd pop fcmovne stos jmp lret or loopne jp fistpll cmp stc fstpt shrb rcrb ds xchg push rcll and pop pop in jbe or imul or lods add xchg xchg xor pop (bad) scas mov sbb sti je jmp dec jp adc sbb pop xchg ret inc es jae push call push (bad) lock jge sbb and aaa adc je rcll sbb std cmp loop xchg push addr16 mov add pop aaa fistpll adc jo fidivrl jp shll (bad) insb add push jge jne das lock inc xor lcall mov lods add pop leave push inc jo loopne loop pusha mov push push push jnp int pop fldcw arpl add adc cmp adc push mov mov pop mov cmp repz push sti insl clc sti inc and cld loope enter jge arpl mov and sub adcl lds movsb addr16 mov and lds in insb arpl mov popa sub ljmp pusha cmp and imull popa push bound and mov xor cmp int3 gs stos test push stc loope adc js movsb adc push fistpl jp stos adc mov mov fptan mov add dec jb jnp scas clc adc popa push mov sbb and movsb cmp dec adc jg insl fnstcw mov (bad) int3 sbb movsb add cltd jl mov test fmul clc orl hlt mov bsf jae idivb cld dec mov (bad) in aad lcall jl xchg mov or cmpsl xchg add shlb andl jnp test cwtl cmp sbb xor in jno jno adc push xor jae inc lock out jnp cmc repnz imul add popa dec inc xor and xor adc test sub push (bad) push sti cmp out push lret mov mov cmpsb xchg movsl loopne inc xchg dec jne es add and (bad) jl jne lret mov sbb into jecxz push mov icebp sahf jg repnz mov jbe shl mov notb pop ret jp xchg push lods cmp rolb call out sbb pop aad xor out xorb aam addr16 (bad) dec sbb rorb pop fwait cmc imul fs movsb ja pusha jne sti (bad) adc mulb dec jp lds sub arpl imul lock and rcrl pop shrb std insl cli mov movsb jge dec mov mov mov loop jp lods std mov inc inc fs xor js and jnp push insb jbe jno mov mov sbb test popa and xchg and jmp scas test mov jge jb xchg sbb lahf or out mov adc jnp dec popf (bad) jp ror jno sub jp (bad) std fist out aas in lds mov cltd fs dec call push in cmpsb jp xor inc loop clc je adc ss jp jmp pop fisubr bound fdivl jp out dec es divl imul lds jnp mov jp xchg or rolb mov dec nop mov add sbb jmp loop sub pop mov pop in jne mov movsb and fidivl xchg insb or ds dec mov ljmp decb and xchg push and sub cmp mov cmp mov mov ja gs adc push mov mov fwait xlat jmp in dec ret sub cmc push jp cmp pop test (bad) pop sub push cli xor inc and insl imul add cmp jo test subl js or xchg and loop cmp jp adcl pop push repz pop ss sbb mov jp popa push xor stos mov and lcall xchg mov call adc mov mov jp mov and sub ds lret pop jp xor mov jmp cmp (bad) push outsl mov fs outsb cmc ds push pop jl add cld dec insl mov sbb (bad) dec jp cmp test movsb mov xchg into ljmp cmp add push cli xor sbb outsl shrl cmp ret push jp jne dec call stos pop mov je sbb jp,pn pop mov inc mov mov divl or jp lea add cmp mov cmp jp jo adc imul jle adc out cli arpl xchg xor jno jp leave sub cli inc jl jg dec repz cmp xor hlt pushf xchg xchg mov add jp dec dec sbb cmp xor lcall fmuls stos jp lretw mov stc dec out cmp imul mov lea testb into stos and jp pop div jmp repz xchg (bad) mov jp hlt xlat lea sub xor mov into daa xor and nop gs jnp push rolb mov mov rclb scas jnp xchg leave mov cld mov imul push clc hlt popf cs pop fwait jns outsb add into push mov pop mov and pop stos xchg jno inc jne imul push cwtl cmp testl cmp xchg pop and leave jp pop and pop sbb mov xchg movsl jns jb jnp mov push fild clc mov in cmpsb fistpl and sub fldt lods loope or popf sbb nop ret stos test out out push loopne mov or in dec mov cmp push xor shll fstps xor jno lahf mov push or movsl hlt pusha xchg push mov cld lret repz (bad) mov jne mov dec sarb bound jp call or push jno sbb xor mov jmp fidivrl dec cmp mov lea imul xor jp pop je roll ret adc push mov push outsl push xor sub mov dec outsl add jbe lock mov outsb test shrl outsl sbb sahf mov mov iret jp jns stc mov xor push mov jb sahf sahf sbb cli pop sarl imul dec xchg sub jg or rclb pop sub lods fistpl test jp out test adc ret xor cmp (bad) stc xor popa or or mov push or xchg jae sbb adc xchg outsb jp push sbb daa jl adc mov adc add jecxz pop repz push cmp repnz push pop dec lahf push xchg aas aad notb shr mov nop mov jl xor out les xchg adc jae mov dec mov adc jl loope aas imul mov jne data16 movsb pop insl sbb or roll arpl loope jnp clc dec xchg lahf shlb xchg jno jno sbb cmc jns mov enter shlb jb fildll pop mov hlt mov fcmovnu (bad) (bad) movntq out jle leave ss stos sti lds pop jne fsubrs jnp jmp es subb (bad) movsb xor sbb add sti push push arpl lret dec jb loop dec addl addr16 imul dec (bad) fildll iret test pop xchg push push daa push jnp je xchg popa jp bound aam mov dec mov mov fdivrs fs and jl inc jno loope int movsl int3 push sbb jnp sarl gs adc lea das lahf (bad) mov cmp in lods inc and xchg dec dec xchg mov std xlat or popa mov cli lods test jnp outsl inc fstpl pop js mov arpl mov pop inc mov dec gs fstpt mov add jne stos negl adc iret mov sbb push cmp jp inc movsb or pop push inc sbb push lea loop mov int push jbe cmp adc das mov pusha (bad) cmpsb jae dec movsb repnz inc jne pop ss out sub mov arpl cmpsl pop mov sti movsb xchg mov imul jge clc push push lods add ja jae movsb sarl xchg aad in push sub sub push sub dec popa jb cmpb incb aas mov cmc out pusha lea dec fidivrl mov pop int xlat mov jmp out and (bad) rcll or push leave xchg lcall sbb cld or sbb jnp gs ret aad push imul outsw (bad) dec mov inc jbe scas dec jle repz out cwtl mov or inc test je fisubr jbe clc cmpl jg rcrl dec xchg negb jmp mov sbb in cwtd cmp cmpsb test daa popa ja cld xor cmp and sbb add jbe sbb adc mov js push pop clc roll pop or cmp pop aaa sub add sbb (bad) fcompl fisttpl cs icebp mov jnp (bad) sti ret push je ss mov lret lods bound inc or mov sahf jmp arpl pop push stos pop das and (bad) ds insl adc in mov je jecxz mov lahf adc (bad) (bad) ja movsb pop pop loop pop cmp stos movsl and add jnp bound or sti pop jo andb mov sti (bad) mov inc stos roll sti (bad) xor nop mov mov mov and fidivrl cmc mov stc push pop mov out pop fwait ljmp in testl aam xor mov lret jmp out push pop gs stos mov in imull nop adc ss jae sti pop leave aad out lock lret lea aas stos sbb scas insb xchg push jl sbb leave push sub (bad) insb add pop or clc xchg sbb jo in test mov xchg xor pop jnp mov add dec insl jge mov sub push faddl addl sbb iret and or orl dec stos pop sub pop inc mov mov inc mov add sub movsb stc loope movsl sub sbb gs sbb lea out inc bnd lea mov jle push inc mov cmc adc mov and jns sti adc bound xchg adc push sti in out xchg stos (bad) (bad) push mov cmp sbb lcall sub jno call push pop jo cmp and stos xor cmpsb and jecxz or fdivrs lods xchg push add sub popa test mov bound (bad) jne dec stos out stc dec sbb pop loopne std fnstsw sbb dec repnz pop repz movb push mov data16 xchg movsb adc jne stos inc repnz jg xchg (bad) mov sbb adc rorl push adc mov mov out inc cmp push js push pop arpl dec pushf add pop jle xchg (bad) sbb cmp ret adc (bad) sub adc mov mov pop mov jo inc jno cmpb fs arpl inc imul xor pop pop insb pop dec fwait jnp pop mov adc jmp jb aad clc mov leave sub fcos and stos inc movsl add or orl aaa mov sub sbb aam shll xchg insb in jge or and pop xchg es inc mov fnsave jbe mov js xchg or pop fnstcw push mov mov (bad) sub insb pcmpgtb lods xchg (bad) es mov aaa jp lock (bad) adc sti jae dec ss dec and sbb sub pop pop sbb pop cmp dec push fldenv cmp stos inc push bound mov mov mov jb mov ret dec add aaa pusha adc loope add iret xor mov (bad) jae mov mov and in inc cwtl ja lcall test addr16 jne pop add and sbb jnp repz fnstcw shll and xchg jle aas ret shll cwtl jp es ret adc mov pushf testl and shrb cmpsb jp fsubrs push ficoml or stos cmp pop xchg and jne push daa mov mov cli xor mov push insl gs push sbb push imul lahf cld sub lcall mov sbb fimull clc out clc jp add mov cmp inc loopne mov ret gs pop jbe aam popa adc inc jo pop repnz shll cli ds clc cli sub fistpll ret adc xchg sbb jno cltd pop fs shrl fisubl and jnp push and icebp jp rclb dec dec inc repz cmp push dec fsubrl mov xor jp and xor fistpll sti aad cmpsb jno or stos sarl mov jp repz inc xchg jne cmp push xchg mov imul dec pop sbb jmp ret cmp shll lock imul lock xchg cmpsb add shll jp mov mov arpl jae lahf pushf scas cmpsl cli mov mov jp pushf in mov loop jp sub mov shlb insl add and sub (bad) imul mov push pop xchg push out jnp ljmp push sahf repz (bad) mov aas lock mov inc rcrl jno and or mov sbb jnp or stos jp fcomps (bad) pop aam gs adc lret xchg mov push adc push movsb sub or and repnz popa jle std movsl xor movsb mov xorl mul or xchg cwtl dec insl cmpl mov sbb inc (bad) mov je mov xchg pop jmp adcl cmpsb (bad) xor or je mov (bad) into cli stos fs mov in test mov popa fisttpl outsl cmp jne mov fimul and mov pop push ljmp aam fs test insl jno andl add dec cmp xchg pushl adc cmpsb xor in test in outsb lahf push fdivl iret imul push sarl inc inc lahf aad stos inc adc jl icebp dec lret clc fs xchg mov jecxz mov aas (bad) fs jecxz and fs fisubrl repnz xchg add sbb sub sub inc xchg frstor sbb inc cmp scas xchg pop in repz and fisubrl sar cmpsb inc pop rolb outsl mov aam std mov push movsb or push das or sub addr16 xorl add inc imul mov pop je int3 scas aaa sbbl sub clc pop lahf pusha cld xchg push mov test mov mov push sub sbb mov jp inc mov add cmp gs jnp fistpl je sbb cli cmp and dec jp jg add fwait clc lea jne push cmpb pop fisubrl imul dec neg loopne jnp or arpl fsts repnz jp test int data16 pop mov mov icebp add mov lds pop sbb xchg push loope cmp and xchg pop jno or mov xchg mov arpl sub cmp push sub lds xchg jnp and cmp sub jne in mov call lcall ficompl (bad) ss roll mov pop sub les pusha fdiv xor jp inc addr16 jmp movsl mov insb sub fwait out add lret pop jp jbe and mov mov push cmpsb ret test sbb mov cmp add das mov xchg dec std jp mov ret lock and adc mov add jp or jmp popa insl je aam lods rol xchg mov jp or push xor jp aad lods xchg jmp aaa imul jbe mov lcall in jnp xchg push into jp (bad) enter lret inc jp dec in push cmpsb push fimul sbb int imul cmpsb add ja xchg sbb jmp cli jp pop xor std dec out sub cmpsl lret inc rcll sahf imul inc insl imul mov enter in cli sub jb and fcmovbe hlt and jb inc ljmp cmpsb xchg insb popa fmull aaa fwait das repz test adc cmc bnd mov push xor inc xchg gs xchg xchg sub mov push scas pop (bad) addr16 jne enter scas arpl jne jne sub jle pop xor adc or (bad) (bad) loope mov push arpl int3 mov insb addr16 mov lock mov fsubrl aas pop sbb jp cmp pop mov adc sub cli imul clc xlat (bad) outsb movsb pop jp lock gs int inc xchg jne xor ljmp (bad) jp dec xlat inc cli or stos xchg cmp pop sbb inc movsl cld mov movb xchg jno mov inc dec mov xchg popa dec sbb cmp mov adc add dec mov repz lret xchg fadds lcall pop pop dec ljmp into loop enter movsl mov mov cmp ljmp mov jle jp xor std aam sbb or mov gs cmp sbb push dec xor push in jge ja pop dec and aas jp es imul stc sub ja ret sti xchg inc and fisubr mov sub mov insl sbb jb jnp mov dec cs loop mov mov mov mov std ss (bad) jb jp push daa jg ja xor mov pushl adc and stc jnp adc push add outsl lret adc push sub mov sbb pop out or cltd dec xchg xchg ds stos add dec mov aaa daa dec mov pusha bound mov pop xchg add mov jp dec (bad) icebp cwtl fsts jo lcall adc int3 jbe test mov jp pop ja mov ret daa push jb cmp mov mov cmc sub jbe cmp (bad) rorb jp adc add sub push mov cld lret aam (bad) dec pop pop dec fs addr16 aaa cmp dec inc mov or cs cmp out pop cltd jnp pop (bad) cmp or movsb scas insl mov push cli (bad) cli mov dec jge jp xchg loop int3 xchg stc sbb sti mov xor mov mov jl aad mov std and in mov push push pop xchg sarl movsb pop add pop mov scas pusha jbe stos roll mov adc mov and dec dec subl pop push mov or into nopl mov ja ret mov jno mov movsl cmp leave ds and sub pop je sub and xor pop std pop daa xchg (bad) int pop jbe repz int3 cmp pop jp test xor or dec mov (bad) or xchg push ja push sbb outsb imul jp adc push mov hlt jp jl pop push movsl psubsw fistp mov jg mov mov xchg stos sbb into xchg dec sbb or out jp std fcoml jp sub push and cmpsl dec cmp jae (bad) lret scas or and ja out cmp ja int ss jo sti sub hlt ja jp movsl int3 add jp insl mov popa (bad) lock jge fidivl (bad) std cmp cmpsb add sahf jae (bad) sub (bad) push mov rcrb mov sub nop aas jmp pop aas push shr mov loope cmc jl lea inc cmc cmp cmp fwait ljmp dec scas sub dec xor lret fs ja (bad) fnstsw lock cmp add out outsb xchg pop jnp mov cvtps2pi xor (bad) movsb mov loop or (bad) pop inc notb push gs sub test jns xchg push adc mov mov nop jo pop cmp xor (bad) xor xchg jno jnp adc insl sbb jg cmp pop pop and jne imul out fwait addr16 add mov das test inc cmc cltd sbb and add push jge jnp sahf js ret mov adc xor stos mull jnp jl jno popa sub or mov ljmp pop pop stc aas dec jnp push mov xor inc inc shll mul xchg (bad) jmp iret sbb cmp sbb int3 pop mov sub dec (bad) mov les fdivs roll or sahf xchg (bad) test leave xchg sub idivb jle dec jp mov bound or jnp (bad) xchg jne test in mov (bad) jno imul outsl insb das push pop push sub out pop pop lock mov mov inc (bad) cmc fucom jbe movsb mov push adc stos jmp fstl jle push enter js stos mov aas adc insl or lods inc ret pop xchg loope dec insb test enter movsb arpl mov xor push fistl fs leave test jnp pop pop jl js jg stos mov enter insl std outsl lods jge clc loopne and (bad) jbe loop mov divb dec inc (bad) mov xchg push stos pop clc imul mov repnz adc stos cwtl and je fcompl lahf xchg jp jno jmp out push mov mov popa jno hlt arpl xlat dec pusha push or dec aaa (bad) lcall or out push cli dec pop inc scas stos push imulb sub aad xchg or jb mov push cmc or in pushl call enter mov add daa (bad) mov push xor sub cmp adc mov clc into xchg out mov mov push xor push loopne (bad) sub jne mov jnp (bad) in or hlt add daa jne or dec je jne lods cmp push ja cmp pop sub lret push or loope imulb in inc sub ret jle jmp (bad) fwait lods jbe push outsb jns dec ror movsb lcall out sub stos mov push mov (bad) fildll cli cld cmp pop ss sti cmp xchg (bad) add sahf (bad) and ds out cmp movsb or ss (bad) pop enter test dec mov cli add icebp sub pop push std int xchg xchg mov mov movsb sbb mov or addr16 adc push xchg inc insb mov dec aad jb ror add sub in push cltd int sbb dec shll pop jle push pop nop mov mov or fldenv xor lret stos adc popa fcomp cwtl dec outsl rorl aad lods inc push imul and jns dec or pop movsb jl ja leave xchg dec in mov or in fucomi mov pop popa sahf xchg xlat jbe ficompl cmp in sbb aad pop dec mov dec clc mov dec add je lea inc call push add cmp push jne mov pop arpl test sti pop bound dec stos test mov testl adc xchg ss jp pop cmp sbb pop mov add xchg mov rclb push in or push popa adc mov sub daa out jnp xchg pmulhw mov fdivr imul add or dec test std pop test push (bad) rolb fs loope jmp inc xor movsb in mov add dec ljmp (bad) int3 ja push mov add jecxz pop pop adcb or cmp mov insl xchg sub adc ja jbe mov leave inc outsb lcall fstpt push call imul movsl jns fdivrl xor mov mov inc mov test cmp rcr jmp and in inc aaa mov bound int lods pop sarb imul cmp sbb jnp bound rcrl loope jge jg outsb movsl sbb enter mov jmp insl push loope cmpsb xor movsb dec sahf repz or mov push dec das fmuls je dec sub pop mov mov sbb jl movsl out aam mov add mov mov xor das mov inc fdivrl lret push or sbb and mov icebp add fs rorb pop mov push cld out jmp and mov jg cs jne add stos add fs loopne stos cmp es daa stos aad xchg cwtl xor repz jb mov fmuls aas fs mov fwait mov mov cmp jne pop fs mov stos mov xor (bad) movsb ss mov shr ja mov pop mov or pop inc hlt pusha sub jmp (bad) ja lds dec mov cmc sub sbb in push sahf xor cli lret xchg inc pop sti adc cwtl or or je mov sbb inc gs pop popa loop and cmp shrb mov movsb stos sbb jmp cmpsl push std ljmp loope xchg pop arpl mov mov inc scas mov push repnz add arpl cmpsb push sbb push jae and jle push fildl jecxz sti stos pop pop inc jne pop ds dec mov in bound mov jns popf aad jae jmp push dec add inc jnp cmp stos cld and sub jae fist push repnz sub mov imul pop xor or xchg jp das cld ja xor adc (bad) xchg adc mov imul xor out imul push jp sub push arpl ret in lds cli cs xchg mov sbb mov inc shll repz loopne das (bad) icebp push jp inc jae xchg and jo stos or mov jp (bad) or adc dec fisttpll add stos inc push sbb mov jp sub jae jge pop dec lcall cmp fdivrl fadd pop lcall or push hlt xor pop dec cld mov jecxz cli out cltd jnp negl xor jmp ja in pop mov aas gs mov adc add jns mov mov push jp es imul sub in jb fwait push neg pushf cmpb data16 xor xor add nop dec jp mov mov jo dec std lods xchg cmp mov in sti icebp sbb jp loope add sahf adc add mov pop or push repnz pop ret sbb sub test inc lcall xor pushf pop addr16 int jo (bad) mov leave stos mov rorl adc sub lret pop jno jp stos cmp xchg jb mov mov mov jp icebp mov ss ret js sub popa xchg mov dec xlat repnz mov dec mov add push daa sarb mov push pop xor jp sub call mov (bad) out arpl pushf cmp lret stc adc mov mov jp iret enter int jp (bad) out inc sub movsb aaa std aam pop in and pop xchg pop mov pop dec cwtl mov jp notl dec push pushf cmc jne incl aas ja ret jp test push xor sub dec nop inc sti leave ss push ret pushf (bad) jne (bad) stos or icebp pop and mov lret (bad) cmp movsb mov ds pop nop add lods movb xor rcl cmp adc push add das sbb fcmovne inc gs outsb lret movsl mov fcomi jge jp lret imull enter pop xor sub mov sahf mov loopne xor adc scas mov lret jne mov (bad) jnp jp pop or or cmpsb mov sbb push outsl repz jo jbe mov mov imul lock enter je test jo mov fisubrl mov pushf stos xchg jecxz outsl mov add popa xchg sbb pop mov xorl and roll sub jp sub mov inc hlt in or (bad) sarb imul pop mov jp rcr lock push inc imul (bad) dec lods jo fmul jp loop mov push jb ret cmp in shrl adc decb cmpb lret ja (bad) jp and sbb push std mov gs (bad) sti mov (bad) mov mov arpl divl leave xchg mov inc mov mov rcrl jae push cli or popa push jp adc mov xchg adc enter in jp scas int3 sbb pop mov mov pop xchg mov pop lret imul dec mov pop sbb xorl xor jno xor cmp mov ss ds es movsb gs and rcrl rcrb mov (bad) dec or mov icebp sub mov test outsb test dec lcall adc rorl lods mov xor and das jl int cs (bad) dec jo push stos push test imul jle sub mov les and rclb insl adc pop inc dec adcb jbe into fwait push cmp push lret les mov mov add iret dec stos sub loop mov jne in (bad) jge sbbl test (bad) fdivp and lods mov mov cmp or dec xchg mov fstpt test adc jp mov mov fwait popf out inc mov sbb push mov sbb out mov (bad) mov lea pushw out icebp jecxz mov sti jo adc push ljmp imul mov jno add add adc imul sub sbb ljmp (bad) loope xchg mov inc mov sub pop scas clc add ficompl add movsb in pop repz inc jl fwait (bad) int3 jo int andl push pop jne and rcr mov in jnp add pop dec mov cmp data16 or insl add cli lods adc cmc aas pop popa adc aaa (bad) mov out jnp pop insl loop jp xchg and jp or add sahf push fcmovu push mov sub inc das or xchg fdivs gs stos test lods sub push lret sarl test push cmp cmp xchg jbe ss dec es mov mov sbb xor adc inc ja sbb push mov (bad) scas jp jns sub add xchg aaa cmp xor shll xchg aad pop scas popa lret push ja cmp cmc sub insl es jo xor ror cltd or and jp fisttp outsb sarb lcall cmp inc sub sbb xchg pop into jnp adc addr16 cld in jp pop or orl pop mov (bad) fisubl jne push enter mov call pop movsb outsl pop cwtl aas mov push cmp std aaa push jp inc mov pop xor lods inc daa mov cli inc cwtl (bad) jp and (bad) fmuls or push sbb jp or mov xchg repnz fcomp aam xchg push clc pcmpgtw lahf add jno pop scas out and cli clc andb mov sti jmp or jp ret mov xchg add in sbb pop pop mov imul nop jp in lret xor in jno orb mov push (bad) lods mov cmpb adc fucomi xlat in sti movsl dec and or mov jp mov dec std (bad) aad jae or or jge (bad) sbb gs inc jnp push pop inc dec jp inc jo pop adc jno arpl ficomp xchg dec push push imul mov adc jnp xor cmp sbb bound lods lds jp push adc popf jne mov push pop dec adc fnstenv jp add pop push mov sbb ja dec stos mov jl jae outsb and (bad) mov fidivl imul mov popa add jno repnz rclb jb add jae mov stc (bad) lock pop pop sbb idivl add sbb dec test lret das jp dec test jns jl (bad) nop sub pop lcall fnstcw pop sub push sub pushf push jp mov adc test lods mov lret jae mov or js test cmp call pop jg (bad) imul les jle jp dec pop adc mov test and xchg (bad) loope cmpsb shll mov pop cmpsl xor repnz mov jecxz xor fldt stc aas divl scas sbb xchg aad adc das stos ja fldln2 pushw int3 in stos sub pop lods jnp lret aaa js (bad) jbe hlt ret pop lock shlb push pop inc scas out sbb jmp jl outsb xchg cmp lahf out jae imul pop popf movsb lea xor je push or pop sub jne test fsubs mov xor mov xchg or inc stos (bad) in (bad) icebp jl jp dec les xchg mov pop (bad) rcl xor mov fiadd sbb push outsl ds mov jp shll xor ret loope lcall into and pop outsl insl je fcmovu fadds hlt jb sbb xchg lret mov push xchg jbe dec sarb mov lret bound and fs mov xchg repz jp adc add lcall dec sti pop push sbb idivl mov jo add mov adc outsb sti jnp pop pop push ret push push jp xor sahf aad das add lret (bad) pushf sub adc jnp pop cmp push add cmc push pop subl dec and sbb xor cmp sbb cmpsl adc fbstp ficomp cmp int (bad) popa repz shrl jp rol inc xor lock idivb pop xor push aad pop mov cmp je add sub outsl cmpsb mov jp roll loop outsl jp cmp fimull add ds pop pop lcall jp push fdivrl pusha je test adc add loop push enter adc stos punpcklbw mov (bad) jnp mov inc pop sti lds outsl cmp jl pop cmp jbe lock (bad) jbe popa jno pop mov sbb fisubrl pop dec pop ja lea pop push jl into shll aam and jp nop xchg fldenv imul dec rorl (bad) enter cs push insb scas mov cmp inc jnp mov and sub sbb ljmp xor and aad dec loop add lret inc push and aam mov shll in jge stos or mov push mov popa int dec repz (bad) int3 sub outsb test sahf cwtl pop jae jecxz movsb mov adc int3 movsb leave xchg icebp cmp or xchg mov inc add inc sbb cmp sub pop pusha mov out inc cmp jle xor outsb (bad) jae movsl jl xchg mov arpl aaa stos in (bad) pop (bad) test cmp push jno sbbb pop insb sbb repnz (bad) imul and fs cs mov push jp inc int jl lock movsb int3 in daa pop out icebp push roll or mov jb and sbb int3 gs push sub and adc cmp stc stc jl cmp icebp push pusha fisubrl fs dec add or mov stos popa jne mov js pop (bad) xchg in jo sbb cmp bound or pop pop jae mov jnp cmp xor je test (bad) mov cmp test arpl sbb dec jmp psrlq jp mov push out dec adcl cltd subl js sub push pusha and mov addr16 jno sub jp cli mov repz mov jns scas dec cli fildll ja ret adcb dec jp jecxz fwait (bad) jne lret out push sbb rorb stc xchg jp cmp cmp pop lods mov in mov add adc pop scas cmp push or and imul push mov inc mov (bad) repnz mov push js outsb outsl jno jecxz push pop ljmp jl aam lock gs xor sbb mov mov sbb add gs fdivs jp cmc icebp movsl fwait popa fstps jns jbe lcall jp dec gs scas stc lea push jp jno inc (bad) jbe pop cmp and inc out or add xchg push pop mov lcall add cmp loopne pop inc xor shrl nop and (bad) xchg mov add jp and addl mov cmp in repnz sbb jae cmp js xchg mov pop inc dec movsb pop jae xchg sub cs add sbb xchg jo jns xchg fs andps xchg daa sbb or mov mul sbb ret aas fstps dec dec push scas push dec rcll jmp fs jl dec int3 aad pusha or outsb cld pop scas movsl fbstp shr sub mov fsubrl addr16 aas cmc mov test lea push outsb sbb add xchg mov scas imul pop and jbe ljmp ret out cld mov jp in outsb push (bad) jns jp ret js or sahf lcall in loopne icebp dec mov enter mov lcall lcall cmpb xor les scas jp paddd jp sbb movsb pop pushf pushl stos bound lea mov ss inc insb inc lods aas movsb (bad) sbb xchg loopne dec and in (bad) jne cmp jge imul xchg aas int3 in push inc aaa ret jmp jg add cmp mov mov outsb call jp xchg and xchg mov dec jno test imul cmpsb dec aad lock pop fwait ljmp xorl xchg orl lods retw leave movsb sub outsl lret jp xor pop mov fcomps pop outsl jbe call jp sbb add adc scas jb jp sbb cld lock dec mov scas sub xor stos push sbb sub mov das bnd lret imul jp xchg xchg popf push mov xor add jp xor or add xchg clc cmp flds je aas jnp das jne adc mov jg sar and mov jno sti pop ljmp nop mov in push test jo popf xor mov lret (bad) xchg loopne jp icebp cltd pop xchg mov scas jp push insb (bad) in sbb out mov jp sbb pop mov inc jno dec out outsb pop jae fwait sarb cmp xor xor jp shrl add sbbl push idiv pop jge pop decb shll cwtl sub mov stos mov push pushf out lret or and adc pop loope jnp scas cmp cmp add add jp dec push cld jmp lcall sub (bad) xor stos jg icebp mov ror pop pop ljmp push xchg dec testb ja pop bound jne jne adc fisubl xchg ja fwait shll add mov insl or mov xchg sub mov push mov in movsl ret mov sub dec jge jae cmpsl xchg sahf jp or mov or cwtl ja adc (bad) sti and pop addb xor or scas loopne mov inc std (bad) icebp es test outsb cmp xchg in fdivrl cmp (bad) dec addr16 jp jge push adc gs pop and or fbstp push mov ss in sbb mov gs sti (bad) mov lock dec sub daa jne fldl imul stc xchg jle das inc dec in loopne test js xchg mov xchg dec sbb sub add add add ja inc (bad) int inc mov and sbb jle jmp xchg add lods fildll pushf cmp es add sbb jb jp sti je lds fisub cmp xchg fnsave push jp nop ret cmc jp fiadd outsb jp lock xchg adc lret jp adc lea stos rclb scas mov mov (bad) out sbb jg insl adcb (bad) jne pushf xor ficoml stc outsl mov movsl ljmp out cmp push inc mov movsb or dec call aam inc (bad) push or jae fcomps adc sar pop sbb jp xchg pushf fldenv cmc imul cli mov and xchg clc dec dec sbb push iret dec adc aad jl sahf or fistp imul xorb jp enter mov repz popa pop lret jge xchg adc jbe sti loope push mov cmp int3 mov mov push loop sahf je test ljmp inc sbb loop cmc sbb mov pop or push xor jae in ret fistpl leave pushf push ss loope xchg and mov sub jmp stos or inc xchg xor add mov and push fisttpll xor jmp pop lcall xor ds add stc cmp adc push lds subl enter mov mov mov xchg shlb inc lds ljmp inc leave jns into decb test fs movsb xor lcall nop roll mov ja jnp xor out jecxz or aad sub rcrb imul scas rcrb orl and inc mov jae add push add jge xchg push cmpsl movsb int (bad) js inc xchg data16 inc call jae ret movaps jp lcall xchg inc xchg imul into ficom add fs cli xchg xchg rorb out test (bad) lods sahf and (bad) mov test and lock std (bad) mov stos mov lahf jns xor jecxz movb das ljmp jne stos push outsb loop mov ja push jbe cmc cmp cmp mov data16 mov (bad) mov es outsb gs pop cwtl jmp jp and in mov arpl dec ficom push sbb mov fnop stc dec js xor adc adc scas add dec movsl hlt add mov iret cli xchg and jp mov jle sbb test cmp les mov adc and mov insl inc inc cmp jp mov lahf jecxz arpl cli jg cmp insl nop int jnp mov or jp mov cltd std jbe push rcll (bad) in into int3 jp xchg and push mov and int3 cmpsb (bad) jnp inc ret pop neg xor loop cmp imul (bad) lods out cmp ja test cmp jnp xchg ja pushf lock (bad) mov daa lcall loope out and mov jg popf mov mov xchg dec enter or xor cmp dec sub ljmp and cmpsl jmp mov stos dec gs or mov pop adc arpl adc add jp and imul repnz sub jae test hlt ret or std lret xchg popa push test mov rorb sub mov lea jge and mov cmp loope xchg jl and jne sbb xchg lods jnp push loopne jae pop lea jp cli add add leave adc mov das mov dec insl xchg int3 jp dec gs out int mov cwtl sbb jle cmp xchg ja sbb out ret xorl or fdiv out push pop mov push lcall gs (bad) jp iret les (bad) jp inc push jbe cmpsl or jae psubsw (bad) (bad) leave fist iret sub and mov mov mov or jp insb dec pushf aam in ss cmp cmp stos jg leave jp imull xchg (bad) jle data16 jp jo lret jp xchg push sub jno loop push fwait dec or jg test dec stos and jp xor in jg push cmp scas xor xor imul out xor insl repz push add iret scas add imul lods pushf nop data16 mov out mov xor xchg xchg mov mov mov fildl push sub pop fdecstp ret je mov pop clc jbe adc add shrl mov xor cs adc xchg push ja stos jmp dec xchg cld (bad) out movsb dec adc nop int3 pop es mov arpl cmp xor arpl int3 mov stos dec push adc and sbb jp adc aas jne sub cmp jnp push leave dec fmuls imul jns jp decb ret popa jp push xchg cwtl lcall cs push in hlt jge mov cmp leave sub dec xlat bound lea add lret out or out sti ret mov cmpsl les and add inc fisttp xor dec jp hlt ds inc cmp mov daa mov jp movsb sub mov push mov jp stos inc (bad) inc in shlb mov mov pop stos dec test pop (bad) mov fnstcw sbbb loope xchg fs xchg int cmpsb leave mov lods cli daa push adc sbb mov popa xchg xchg rcr in adc stos pop outsl pop jnp jb sub repz fwait loopne orb pop int jle stc leave pop ja fidivr sbb arpl out jmp push jne xor (bad) daa mov push pop ja ret mov imul dec jp ss or iret stos adc cld sbb cmc pop jmp jge add sbb push mov ja jns loope hlt xchg pop lods dec sti mov adc js je mov jbe pop mov mov lea adc test loope pop add jo dec out cli roll adc cmp outsl sti adc jp lods enter jg loope hlt mov je test jno dec push dec inc imul or rolb dec sti lret scas cmp jp out clc es jmp jp ret lock lds sbb das (bad) xor jne iret cmp jae stc repnz ficoml inc xor ja dec shlb fild gs aad mov rcrb xor mov dec jecxz sub push jp dec cmp xor cmpsl lcall jp mov jns dec repnz push fnstcw adc inc xchg lcall mov fistpll repz imul adc fidivl inc fucomip data16 cli xchg andb xchg cli xlat pop lahf fisttpl cmp jnp mov ljmp cmp or jle adc push pop popa push cwtl fcmove adc jno ljmp adc jp addr16 mov jp insl jno imul adc jns pop jae lcall mov popa cmp add scas mov and cmp mov cmp pop fisubr jae mov lcall cmp adc pop frstor mov dec jp fs leave adc sub sti push pop mov stc das aas xor jp mov js (bad) cld add mov fwait jp mov mov mov jnp adc repnz cmp das jno sti mov (bad) sbb jle inc pop push mov jns addr16 dec xchg sub ljmp sbb call ds cmpsb sub push pop xor xchg imul out and div jnp jno lds lods cmp xchg jbe andl push jp rcrl mov cld aas popa xor cwtl xchg push jp (bad) mov jecxz pop push lret int3 (bad) jp inc xor popa test jecxz mov mov inc mov xchg mov mov jae pop dec sub je repnz sbb sub mov arpl cmp or mov and test pop jnp,pt mov (bad) roll inc push stos and xorl sbb cwtl imul adc loopne sahf ja xchg adc lret inc lahf jno adc loope inc jp stc insl pop mov sbb js test mov lcall stc js push cwtl jp cmp jno xor push dec jp fisttp xor std and ja jnp mov mov and xchg cwtl jp cmp pop dec and sub jnp mov push or jl aaa inc or push add idivl mov icebp pop les int mov sbb mov and fild cltd std jno ja outsb test mov ja adc es add jmp inc cmpsl dec push jae fdiv icebp stc and test mov adc jp fcoml loope push mov ja xor xor in pushl cld mov mov add xchg push ret xchg jp icebp pop mov or flds stc push inc dec aaa popa mov shll cli clc xchg push int3 (bad) jmp jmp mov jle cmp xchg pop imul mov or gs adc jp adc nop rol xor (bad) cmpsb cli std dec popf jg add mov jno clc loopne adc inc add lds sbb push pop lcall mov sbb loopne loopne mov push rolb shlb push mov ljmp push fcoms out popa movsb xchg dec mov xor sub stos push test dec push jl jge sahf inc arpl daa sbb movsb sub cmp pusha inc inc js popa jno dec lock lea pop jns fild lret sbb cmp mov cli push xchg mov or movsl in mov stos inc addr16 test xor adc aaa jae push test es scas pop sbb mov dec jnp iret xchg in mov insl xorl insb mov mov jmp stos adc pop jp fs lock jmp sbb push fs mov mov (bad) stos pop call (bad) imul stos stos jne fstps stos cmp cmc mov int jnp mov ja pop lods jb jmp dec (bad) lea pusha add movsb xchg sbb pop add or (bad) jne fdivrs fsubl push repz inc jno out mov ror jge lahf fdiv cs std addr16 (bad) in mov cmp xchg jg scas inc or jns call jne ret sub lds cs pop (bad) insb mov jp dec shll or lods push dec out sti fdivrl jne,pt ja popa push or add sbb out mov mov cmpsb xchg fabs mov ja mov gs mov jnp imul xchg insb pusha mov lret sub (bad) jne mov or cmpsb adc fisttpl push cmpsb popf push sbb inc lods push jecxz (bad) cmc cli daa aad mov iret fnsave add hlt shlb ljmp cmpsb mov arpl jp sub mov stos sub cmp cmp popa shlb fcmovu jecxz or inc fsqrt add jne inc cltd stc lcall imul notb lret xchg jae mov jp dec mov jno sbb js jge enter mov imul mov dec sbb test lret dec jp es push jnp fnop push cmp inc lcall into je dec push cltd xchg or je cmp mov jb repnz xor mov adc dec jno insl add loop xchg adc jne fistpll cmp das jp test cmp mov mov je cmp pop lds dec jg das sub into test mov lret test cmpsb mov fcomi test dec repz jns add out xor mov (bad) cmp std jecxz mov std cmp fisubr adc (bad) xor loopne jl xor jno ja,pn sbb lcall (bad) mov imul mov cmp push rcrl cmp lods out test clc sub gs push add mov stc sbb lcall pusha push nop cmpl fsubrs js sub stos inc ds pop pop xchg push xchg in add loope in adc xor pushf cmpsb test rorb int3 dec outsb jmp push loop add dec dec or dec pushf loop mov pop movsb ljmp jle lcall push mov aam sbb inc out add rorl sarl push (bad) dec cwtl bound and rcr sar lods clc loop in stc adc pop adc pop sbb test out lods dec mov loopne sbb imul test pop ja xchg scas push or incb rorb aaa pop pop ret test enter pop sub outsb or out pop mov imul cmp sti js nop icebp jb jnp hlt jl jno sub in sub lcall pop fidivrl add sub bound mov es ficompl adc jno pop hlt pop xor test iret fs mov out loopne pop scas add pop je push jp out stos loopne sbb jne rcr testl mov xchg xchg bound mov xorb cli (bad) cld loope fbstp jne lcall adc lcall in adc insl add sub push dec add dec testb jnp jns stc push inc repz lds jp sub mov xor out jns pop scas test jne stos lods imul push idivb outsb sarb mov or jno and pop scas push jne mov push push sbb fdivrl out and jo ror hlt icebp inc gs lcall pop mov into adc hlt push (bad) mov jnp sbb xor pop sbb sub mov pushl and xor pop enter data16 lret scas int3 fstp sahf sbb or inc cli (bad) fdivs sbb stos leave insl inc dec in cmp pmulhuw mov jl insb cli int add lret xlat cmpl mov fstpt lahf add pop mov fidivr pop stos or scas in sti movsb jno jle xorl test lods fisttpl movsl sti gs (bad) inc sub xchg cmpl cmp and rcll jp pushf push aad jnp jp neg pop sub in movl xchg jb lods fmuls mov nop je cmp inc jecxz add cmp jne inc sub jp out pop mov mov jae cmp mov mov data16 pop jbe inc inc clc push mov in add or leave in scas cmovle jp pop arpl lcall pop sbb andl ds mov inc ljmp test out jp and loope ja sbb sub pop leave mov inc rcrl fs adc sub push xchg jl outsl rolb cmpsb sbb insb stos call push xchg fcom lock pushf sbb rclb mov faddl outsl jl inc inc jmp xchg mov mov mov sbb mov cmp mov push or stos lahf pop ljmp jae pop idiv dec (bad) lods repz jle loope test pusha clc push sti lahf jno xor stos push out call jbe out sti and cld (bad) negl sub pop sbbl insb cmpsl rorb sub sbb jecxz movsb push call mov mov addr16 sbb test iret jae mov repnz add pop je movsb xor sti xchg stos mov lcall sub cmp pop int3 adc int sub insl cli lahf fprem1 inc pusha imul (bad) rcr mov sbb lea insb bswap pusha push fstpt clc dec pop js out push ficom ljmp addr16 jle jecxz (bad) (bad) pop add cmp pop insl aam sti imul les sbb mov inc xchg clc sarb (bad) insl es sahf adc sub (bad) dec push repz repnz out lods mov arpl inc dec mov fcos mov (bad) pop hlt inc add clc mov insb (bad) popf pop arpl movsb cmp mov xor push fldenv sti in ja or imul adc ret push mov movl roll pop imul je and mov jl leave in clc adc jecxz inc push dec adc xchg jle lret movsb xor mov push fistpl lods dec mov sbbl xchg mov aad dec call je movsb out mov out dec les mov inc js pusha and push jnp jmp stos xchg mov xlat add rorl imul loope xor in and scas cmpsb push xor stos mov cmp stc mulb fnop lret clc call push cwtl gs shrb sub or cltd fistl cmp push sub ror cmpsl jnp cmpsl mov out push add imul mov stos mov rcl addr16 jmp lea icebp (bad) ljmp jnp movsb inc loope dec jb pop or cli (bad) mov jae pusha fs cltd movsb clc mov divb lods dec sbbl cmp movsb test divl cld sahf (bad) insb sbb daa mov je arpl adc jne pusha xchg cmp push fidivl sbb stc mov mov push sub xchg xor movsb sbb sbb push pop pop fs jns mov mov or pop dec ficompl inc jb cmp adc test jne js push imul jmp push in cltd jp or fstl cmp mov sub jmp jp scas loop lret outsl aas cld aaa jecxz xchg cmpsl int cli cs cmp xchg push pop xchg mov loop (bad) xchg jp cli repnz pushl mov outsl js lret and inc xor outsb jp mov pop mov cmp ret dec inc cmp mov or mov add xlat jmp push scas or (bad) imull stc mov int adc inc xor mov cmp out (bad) stc mov xchg jp jb push fisub sarb xchg mov dec movsl mov arpl stos (bad) push div add (bad) jnp jmp ss cmp (bad) cmp outsl dec ljmp xchg jne (bad) sahf movzwl in mov push and or pop in xchg rcl mov stos cmpsb and aaa (bad) hlt arpl jns gs dec aas inc pop xchg es adc jecxz ljmp cmp in mov scas lret test add (bad) loop leave sub jl mov loopne xor push lods mov icebp push jp adc loop or into ljmp xor outsl inc ret lock mov aad jnp push hlt push add add fidiv add lcall mov jmp out inc sbb insl jno fcomi or bound and lock test or pusha pop adc fild cli or sbb repz in jl jge lret pop cltd inc cmp pop jle add mov cltd or test (bad) lret leave loop xor xchg cmp (bad) ret or cmpsl adc adc sub outsl inc sbb or movsb push dec stos mov loopne pushf pop jl cmc jae inc xor (bad) icebp cs jecxz stos mov mov inc jne aaa inc mov cmpsl ret mov cld mov jnp daa mov push adc jmp push sbb sahf into dec push aas scas mov and xchg fmull sbb jp xchg xchg mov sarl jl jp dec test jg scas ss lea jne dec sub xchg xchg inc jp xchg mov jp jge insl mov sbb jo xor fistpll rcrl dec jns fdivrl test dec out jnp in jmp lret ret insl add ja push loope mov imul jp bound mov pop sbb call inc adc int mov stc (bad) push lret dec sahf mov testb pop sti jp (bad) push packssdw dec jp push sbbl mov lock cltd add std cmp mov loop push jg xchg outsw loopne adc jae cltd sbb xor stos xorb lods out lret push inc sbb sarl outsb jecxz jp das and out les out jnp je mov and pushf (bad) movsl jp xchg daa cmp sub imul pcmpeqw movsb int dec add sarb jg xchg jbe add and cmpsb jp dec sub push scas mov sub dec imul cltd or iret es xchg sbb dec sub cld jbe dec mov ja mov imul mov into sub idivl jp fistpl mov xor fcomp and add push jle sbb xor mov push cmpsb cli lods (bad) repz in cmp ljmp jg dec jmp jp movsb adc add inc jp rcrb inc sub and movsb xchg hlt jg mov rcrb add sahf gs int push aaa pop (bad) jae (bad) sub jp (bad) sar inc push stos insl mov cmpsb jnp jl push dec pop inc sub add or push (bad) fstpl push stos or mov (bad) pushf iret iret jp flds add (bad) repnz gs aas cmpsb xchg in int rorb jg lea or hlt cmp add mov arpl imul imul ljmp inc ss jp test (bad) mov mov add gs addr16 fs arpl xor xlat jae inc fstl jnp sbb pop jo leave cmp inc iret imul mov xor cwtl sbb sbb aam cmp ja es mov push movsl mov imul outsb mov xchg pop cld data16 jecxz jnp mov adc dec mov fdivr fiadd pop adc add cmp and jp mov xchg adc pushl fstps cmp sbb popa sub int3 data16 lahf and mov cmp lds nop add push cmp add add shrl or loope push jge xor jp cmc mov out mov push hlt (bad) mov dec inc xchg and jae mov icebp push cmp jnp cld xor jp mov mov fidivr rol adc stc mov ret (bad) xor test imulb sbbb pop lods xchg jae add sahf jbe fdivp ljmp cmp fstpt mov adc scas add pop mov js xchg push popa mov jnp out mov aam sahf rcrb sti cs rorl pop add popa inc and pop mov add int xchg sbb lret cmpsl rorl addb leave jns je sbb movsb scas movsl fidivrl mov push mov fs jbe leave sti pushf sub xorl mov jae std jg loop dec test cwtl ljmp gs mov loop mov cld addl dec mov push clc sti and gs movl das sbb and xchg jno mov pop sub dec inc daa insb add cmp imul sti push jo lds fldenv aad (bad) pop cmp jge iret or inc fisttpl jnp stos arpl mov sub aas mov xchg repnz pusha sbb xchg lcall pop clc in out xor and fstpt cmp fiaddl cltd inc stc mov ss leave sub inc mov stos xchg idiv push in pop mov int3 mov push cmc pop mov popf mulb dec pop jnp pop jg stos lret test outsl pusha xchg cld add or dec mov into xor sti call jnp sbb out rcll mov mov push repnz sbb out leave in bnd xlat pusha inc insb test mov push jne lods lret or push movsb fdivp xchg popa xor stos arpl rorb cmc jne imull jl cld ret mov in aad pop inc and in dec int3 pusha dec add in push cli sbb arpl cmp sub mov inc imul mov xchg aas dec je popa add aaa mov add and stc arpl stos dec sub movsb dec cmpsl scas jl fldenv mov sub sahf pop fcmovnb sahf movsb in pop mov roll or mov popa xchg fbstp and in jno lods pop xchg pop imul sbb push and rcrb mov cltd mov aaa pop jle loopne inc repz mov leave test call (bad) xchg pop arpl repz subl gs mov dec fwait (bad) lods test mov or xchg iret mov push movsb insb add sti sub bound cmc mov scas push jbe loopne xchg jno pop pop add pop push mov and pop cli cmp or stos xor fcomp xchg pusha jno fucomip (bad) jns fwait mov ret dec xor push test fstps int3 jnp sarb mov push pop push fmul add jp (bad) cmp and mov and leave mov in repz (bad) add ds (bad) mov push xchg sahf (bad) xor push stos pop xor push adc mov and test and jp push hlt jge add jp or mov xorl jnp adcb jp popf pusha (bad) mov inc aad jg mov xchg stos (bad) jno pop pop aam call sbb jnp push popf pop jne sbb adc icebp fs (bad) push mov cmp pop jp pop adc aad mov hlt xchg cmp jo jmp cmp jae aas mov divb sbb sbb xlat lahf lcall mov popl lds out lret xor xorb inc mov (bad) out xchg inc push loopne jp popa test push insl (bad) and jo sbb fisttpll jo pop xchg push jp lea ja jno (bad) leave insl jl gs jae adc add jne or add push push jp out fwait pop (bad) ja test (bad) repnz in (bad) xorl xchg sbb test out aad popf push lahf sub sbb in fdiv jp (bad) sarb cltd sbb jne (bad) mov (bad) sti dec mov pop out dec cli imul push mov (bad) jp fimull das (bad) icebp dec dec shl ret dec mov fldcw out in ljmp test mov imul fcoml push nop push lcall add cltd inc jo adc inc and pop add or movsb ljmp stos and sbb push mov or movsb adc insb out pop and add pop div iret mov enter sub dec dec (bad) cmpsb into cmp or repnz xor mov popa stos fisub (bad) scas out dec mov repz pop out pop push rorl push repnz inc aas rorl cmpsb cmp test push ret jbe (bad) out repnz sub jbe push jmp rcrl lds pop pusha sbb lods (bad) mov adc sti jl adc mov and jge or cmpsl inc lret adc rcll pop pop sbbl lret xchg add add jl mov inc andl mov push fbld mov repnz (bad) je xlat movsb pop xor xlat ret lret (bad) icebp push sti mov fsubl enter addb addr16 push je mov aam sbbl mov push rcrl inc es sub punpckhwd jno mov cmp lds jle and adc out add fisubrl mov stos sbb xlat sti (bad) test inc jmp push roll imul pop adc pop add cli movsb xor xchg push lret js sbb in push and jae test negl jnp fstpt jnp pop adc scas hlt adc fild pusha sub pop xchg push sub sahf sub hlt adc jns popa pop mov fwait leave rolb mov inc mov cmp adc out mov arpl mov imul mov roll dec testb lahf iret lret stos jge fcmovnu pop sub je movsb xchg dec jp ljmp jae notb add cmpsl lea mov xor pop (bad) jp hlt jl,pt inc mov xchg add stos cmpb dec int3 out out pushf fiadd jp dec cmp mov mov daa xchg pop adc sbb fwait or mov (bad) cmp movsb push jno add aas cli movnti je sbb cmpsl pop andl xor inc stos or cli daa adc out cmp (bad) jg pushf sub int3 scas in dec mov xorb or mov mov js xchg adc cs or and push into mov std (bad) in jae rorb shr fmull dec fild dec cmp add jp es sub shrb movsl jp xchg lock and mov inc and pop cmp pop dec mov and sbbl (bad) jp iret adc sbb xchg je jne jle and xchg movsb sbb psrld loopne aad push sbb add inc ret aas jnp mov jne or popa jae mov jp repnz mov jae and jg leave adc push (bad) xor jg mov leave shll push jo gs ljmp lock rolb xor or sbb sbb clc ret jecxz sub cmp jno imul or movsb inc mov inc stos fisubl sub push inc stc add outsl popf xorl in lret mov xor adc jae scas (bad) xchg xchg sbb movsb cmpsl int3 (bad) popa in jle pop jge jbe push hlt pop (bad) xchg test pop hlt fcmovnu mov jae jp add repnz mov dec movsl pop fnstsw jnp test adc and inc fwait imul mov daa sub leave insb xlat inc ljmp jnp sbb dec popa cmpsl adc cmpsb in pop jp lods add outsl les or mov jns neg fiaddl or push jnp add les jns dec jo inc jbe mull mov cmpsb pop jl out push sbb jp daa or mov sub ds jno pusha or fisttpl pop xor fwait push cwtl aad mov jnp je sbb negb test xchg (bad) fsubl notb js xor pop mov xchg jp icebp inc add mov pop mov rcrl ret sbb nop jp pop xchg push adc push xchg jns jae mul or fwait mov lock and pop cli cwtl push dec mov imul push pushl cli dec fdivrl cli dec pop les cmpb xchg dec ljmp mov mov lea test loopne mov in (bad) jns adc push sbb shl out jp add je data16 xlat das and das push sbb jbe or stos jmp add sbb gs daa pop js push in push leave sti cmp lahf in mov pusha push push pop imul xchg xor push mov stos xlat add mov lods cli mov fistpll xchg jne out frstor push fildl jle pop test inc aaa imul fs sub test outsb fisubrl ja push mov jnp mov mov movsb aad movsl mov sub cmpsl jp mov cmp pusha ret cmpl or and enter data16 (bad) repz popa jb xor sbb sbb xchg pop mov push daa add lea cmp mov or les push imul out and ljmp cltd fdivrs testl cmp cli out out gs jns mov cld cli repz cmc cmpsl xchg mov jne and mov mov push fwait sahf and inc xchg pslld push out fcomps pop push xor push fdivl pop in (bad) jp je fimul jecxz test jp xor test (bad) pushf pop imul lock insl pop xor arpl in pushf jae out cmp mov and add jns jp sub fs jp mov mov sahf or mov inc popf jge cmc cmp shl pop shlb or (bad) int3 out pushl mov adc orb jp in ljmp cld jle loope clc sahf dec mov pop jecxz xchg cmp adcl cli or jo add fildl testl testb pop mov jp inc fistpl ja (bad) mov (bad) xlat mov sub jp std and (bad) sbb jne pop sahf js xchg jge das gs loopne out mov xchg pop in mov xlat sbb cmpl add mov xchg movl add pop mov (bad) dec scas and pop jbe loopne jge mov inc pop call fcoms scas lret xchg popa lods test cmp les sub cmp inc mov pop pop or js mov je or xchg xchg sbb mov lods nop cwtl insb adc jp dec movsb daa jae jno xor fdivrs cmp cmp jg cmp xchg and xor out movsl jp mov mov mov (bad) cmp jp mov jne lock jmp ja lret mov out stos movsb int dec jp fbstp lods icebp cmpsl iret ljmp xchg jo jp sbb fs mov (bad) xchg jp (bad) mov and gs jno mov adc sub movsl xchg dec jne push push fidivr ret mov sti int3 stos jp,pn mov movsb jb mov jp mov ja (bad) lea (bad) fbstp mov pop sbb sub aad inc es mov loope mov lods imul sbb add imul cmp push sti jl ja das push jnp repz out jne mov (bad) xor cmp push adcl jle cmp jp mov clc adc mov inc jp cli call data16 xorl fistpll test enter jbe ja push xchg imul fidivr sti sarb mov stc cmpsb jae pop sbb (bad) insl push popf push push or mov arpl jns pop adc gs jcxz popa mov mov add jp adc lret or jo ja dec jns sub enter sbb or (bad) jno (bad) jg in stc dec hlt imul push mov sbb addr16 decl out sbb cmp jp xchg lret jp xchg xor add pop (bad) lods orl jo and mov push cmc dec aad jae push in dec pop cmpb loopne xchg mov lock jbe repz mov push popf movsb pop jg ss mov in jns sub (bad) ss lret hlt data16 test push push jp imull addb jno fiadd cmp ja adc add repz jbe push cmpsb xlat push push mov in jae inc lods mov sub fisubrl push xchg sbb out fs pop mov xor dec out pop and jae movsb pop mov dec ja mov ljmp fistpl pusha xchg mov push xor fldl jo sbbl roll lahf ljmp sub outsl jle sub mov les popa mov imul adc sbb push sti cld cmp push xchg jp mov lahf movsl js (bad) xor or outsb mov inc (bad) mov or mov arpl and mov les stos and mov out xor cmp add xlat movsb hlt sub sbbb out xchg sub dec jmp cmp or fiaddl xchg adc gs lcall push decb jno mov jmp sbb testl subb sbb into pushf pop push cli ss sti cmp pop pop ret mov jnp jb xchg mov adc mov inc xor popa (bad) fldt jo fcomps inc cmp jp jo into xorb ljmp sub pop fistpll adc jp sbb aam jp scas or ja xor outsb pop jae mov mov or mov ja in push lods loopne jle xchg aas sub jmp xor dec rclb popa mov js sub push inc stos mov and mov cmp loop sub sub ret xchg push pop mov push jno mov out js mov lret nop fstpt mov lock pop push frstor ficomp mov mov loope lea cmp and aaa xchg aad test jp,pt lock test loop enter imul cli adc test and push cmpxchg lret jne sbb enter and add sbb std jp jbe loope cwtl xor jnp repz xchg mov cld (bad) shrl mov call lock stos mov popa std imul jo lcall not xchg in arpl pop jb push loopne stos sahf jb and pop mov xchg cmp cmp mov sbb fidivrl dec xor gs ss iret jmp sbb xor aam leave adcl ds push fdivrl inc mov xor xchg mov pop sub std hlt jp inc lods cs sti mov push loope dec out jp inc in les into mov jp lods test jmp pop inc aaa pop arpl cli inc loope shll cmp and loop jne stos test mov sbb pop ja clc jecxz push aaa mov jmp in call ljmp mov idivl adc xchg or stc insb test inc daa test add insl jne push xor out fcmovu pop fwait jg cmc pmulhw sbb fistp fnstenv je,pt negl adcl aaa nop push sti sub aad pop jno jno sbb mov lret sbb jne inc mov (bad) in ja mov cmc mov js push dec test mov xchg pushf or jp mov and cmp iret into push jmp xorl lea xchg pop cmp (bad) icebp sub iret xchg fmulp dec movsl scas test mov gs dec sbb fistp mov xchg out ljmp xchg mov (bad) cld jne push enter gs insb jns jp aas scas mov xorl inc push out repnz lods int3 cmp adc lret pop mov pushl popf sbb es fcoml mov push movsl xor jp imul rolb xchg mov inc jp adc in xor jge pop adc dec sbb test xchg insb fldt (bad) jnp stos imul cmc lahf pop ret pop mov pop cs mov xchg (bad) pop movntq cltd insl shll inc dec test scas push adcl popa fwait enter repz hlt mov (bad) notl rorl shlb fistp bound xor mov xor negb ret jne pusha adc dec adc inc (bad) sub cmp repz (bad) hlt sub outsb jg push ja loope lahf and xor mov les shl popa cmp adc sub cwtl xchg insl sbb xchg mov pop fidivrl sbb push sti lea pop insb pop jge or jae ds jmp stc jp sub mov push cmp (bad) xchg divl (bad) fcomi xchg push shl bound inc arpl push fistpll popa loopne mov in (bad) jae (bad) int3 lcall push adc call out in xchg xor mov sbb pop jg jp stos sbb or ret mov jmp test iret mov add sbb clc dec arpl mov cmp jp lds icebp shrl pop mov or insl cld cli incl bound dec sub stos lret loop xchg adcl sahf mov daa movl add aaa push mov dec ret adc dec push imul ljmp cmpsl push lods xchg imul adc jbe sbb dec stos sti leave dec pop fs pop fidivr mov outsb outsl inc push pop rcrl pop pop pop lret cmp inc and push mov inc test cs (bad) icebp push call int mov jle mov pop stos insb test xchg ljmp mov push or xor sub stos inc xlat andl pop ljmp dec pusha fisttpll lcall stos mov sbb (bad) xor pusha das or sbb das push loope inc icebp jnp dec aas mov push mov adc (bad) jae cmp and sub loop fsubrp mov bound punpcklbw ss (bad) sbb sbb or jecxz or cmpsb dec cs sbb jp jge inc cld cmc pop ljmp xchg cmp xchg fs gs adc sub sbb inc jg pop cmp sar xchg jnp stos out add mov loope rcrb jnp gs fist popa adc xor test pusha fwait ja dec repz js jp fisubr pop jae out add ret or cmp arpl xor aaa jecxz mov or jne mov cmp js jns push jp pushf pop xchg in scas lods jp hlt cmp push fwait sbb (bad) ja push jno mov cli jmp mov cvttps2pi cmp mov jne xor nop loopne orb es (bad) mov lret fwait bound pop sbb out test jp int xor mov pop repz sub ret call (bad) xor add or ja enter mov cmc pop push mov jle xor or or call and pop adc adcb and xor xchg ret (bad) mov sbb add sbbl repnz inc push adc fs into insl imul sbb cmpsl in pushf adc fwait and jne (bad) sbb in jae arpl jmp mov ror mov lea insb lcall mov fs lds insl dec or popa inc imul pop call sub dec sub fcomp (bad) movsb mov mov cltd lret jne jb or push sti (bad) popf mov adc mov stos mov cs add (bad) push stos addr16 sahf xchg test int rcl ja stos sub int dec out data16 gs inc mov int loopne test jno mov inc and jp rorb dec jp dec sub fdivrl clc out push cmpsb mov std xor fild out mov lock addr16 mov sbb ficompl pop loopne dec mov scas mov lods test movsl cmp push lahf push mov jb dec shlb push sahf jnp (bad) pop sahf jp aas mov jp daa call js outsl dec lahf jbe sub mov inc lock aaa inc pop xchg jp dec outsb xchg popf repnz jp fwait (bad) cmp nop jecxz mov adc inc gs sarl mov ja and repnz xlat lret jp sbb imul popa push rep test in das aaa cld jp in sbb stc daa adc mov sbb lods mov mov out jp inc pop mov mov sub lods jae cmc jp xor jne dec ds jecxz mov loopne stos jp ret cli fdivs (bad) in inc adc out inc jge xor (bad) cs divl addl dec pop mov sub int3 popa jb and jnp pop mov test loopne rorl xor out cwtl lcall mov jp xchg in sbb lret push adc dec jnp mov push mov jge fs cmc std mov out push shll sub stos dec jge jge jp mov inc cmp mov add std push incb sub pushf out mov add or lret jbe xchg es jp adc loopne leave jb jp mov jge jns or push out add jp dec jmp inc xor pop jp (bad) fcompl dec ljmp or (bad) mov mov sahf adc inc imul aad mov mov pop jp clc mov aad pop jp cmpsl pop stc pushf adc test xchg mov ss jp add inc aam scas mov (bad) mov hlt jp mov std mov cs inc push mov (bad) fstl sbb in es pop add push xor repz adc jp xor jne scas rol dec aaa or mov fldenv cld mov mov jp lods mov lods push jecxz inc sub or xor add sbb insl psubw and pop lcall outsb add jp sti jbe sub mov fs ljmp popa ss pop cmp or fstl dec es inc lahf jo fcom loop int3 in jp mov sbb pop (bad) push fdiv push jno jno jle pop push sti outsl xorl mov mov push lea lret mov (bad) ja out jg jo mov cmp test scas push pop sub sub and fnsave mov sub ret sbb add xor inc jp rcrl movsb popf xchg lods jp mov out jp addr16 repnz sbb data16 lods outsb lret loope jp cli inc lea pop int jmp (bad) fwait and rsm inc sub das mov je dec ljmp (bad) sub rclb cmpsb push mov rcrb xor pop nop daa cmp inc sub aam or ljmp sbb repnz dec mov fistl jge jge out arpl ret mov punpcklwd je jns addb repz rclb in icebp stos fwait add xchg dec mov outsl dec cli stos mov mov into pop pusha arpl adcb test (bad) inc sti add (bad) ja pop shll jae mov xchg repnz cmp outsb mov shr adc aaa stc jns xchg dec (bad) fdivrp sub or and cli stos sbb cs or rolb or insl dec dec mov fistp rorb lods mov aas push hlt in (bad) pop jp scas or jno cmp in adc fildll fist and outsl mov add sub sbb inc pop or mov test sub jno (bad) or es lods push or jp cmp mov xchg mov jl sahf (bad) cmp cmp dec xchg fstpl insl xor idivb ret sbb popf add add dec cmp inc lret jl sbb fmull cmp mov jp sbb loope ljmp in (bad) clc shr mov dec (bad) and loopne xchg cmpsb (bad) xor (bad) inc addl pop inc mov jo adc dec repnz cltd and inc fisubl sub pop and mov push dec mov mov xchg (bad) js xchg insl lods mov push loopne loope and lods sbb jno fldenv nop fs xchg lock cmp push sbb clc out inc mov gs call aad sbb add or mov push jbe ret inc decl sbb cmp aas imul dec jp sahf sti bound sbb in mov imul xchg dec sbb jns out int sti sti sbb mov adc push add stos adc push das dec icebp mov stos rcrl (bad) mov fimul out cltd xor push adc (bad) ss imul sbb xor seto mov (bad) cltd in (bad) jnp pop jo jbe fbstp pop mov lods inc in stc sub leave popf fbld and xlat cwtl insl rcrl jae xor scas add inc dec negl dec stos mov cmc cmp mov mov mov movsb or iret dec sbb jge nop icebp xor cld jmp sbb mov push jbe mov aam pop fnstenv xchg mov popa cmp adc mov ret sbb pop je xor jno aam icebp cli out jnp jp mov fsubl cli fdivrs not int3 cmpsb lea mov dec test cmc loopne push add cli stos jp jns jmp pop call jp,pn (bad) xor jno sbb iret imul (bad) (bad) cli sub mov cld xchg pop mov repz ja in outsb pop jae xor mov pop xchg jne les push data16 test add sub pop fcomip das loopne push int test mov ret repz dec in cmpsl sbb fwait push mov lea nop mov (bad) jne popf xchg mov pusha rcrb pushf mov dec and ss cmp fdivrs adc push cmp jae outsb mov jo (bad) mov enter aaa imul sbb stc mov inc jnp fwait mov mov sarb shlb cmc jne popa push test in and out stos das popf push dec mov jmp xchg mov cli inc leave stos push pop aas test test cli rclb cs (bad) cltd mov movb aam jbe jg jmp iret call addr16 daa mov in mov roll repz fisttp mov arpl adc idivl pop xor lcall cmp jp or mov lock ljmp xor dec mov sbb jnp mov test lret jae pop cwtl (bad) ja sbb js mov ljmp jle jnp fistpll cwtl jp ret add push arpl pop adc test leave jnp mov jle jne dec in fs imul or add gs fwait je mov test cmp loop inc jae and sub adc pusha sahf aam mov add icebp sub test mov jp sub mov movsb dec iret lret dec (bad) mov out sub fild popf jp (bad) insl cmp mov das dec pop jp mov adc jp cltd lcall sbb jno ljmp jg jp icebp dec pop hlt sub ljmp repz pop pushf jp push imul ljmp jp push or xchg fdivrl mov pushf iret dec mov fildll pop mov das mov push call imul xorl enter es jp insl out nop and xor adc gs sub push or ds jp test mov cmc cld ficomp jbe sbb sub les aad or jbe fstl lret out jno in sbb adc ja insl jp pop cmp mov xchg and mov loop xchg cmp aaa xchg pusha mov ja mov loopne enter mov sbb adc mov movsl cld shrb push jl push aaa mov (bad) xorl lds fnstsw les addl jne push test push mov sbb mov fsubrl and pop fmuls inc lods add jecxz fstpl push pushf cmp imul ja out je push ss add insl push jo pop add xlat mov push cmpl push (bad) aaa out mov or mov sub sbb mov jp or aaa sub mov cltd sbb cmpsb mov adc add jp fist mov sub lret jp jo sbb (bad) mov jp xor dec jae ret mov repz es mov into (bad) jo and clc cmp xchg ja sahf pop jns adc pop fdivl push pop xchg lods lcall cli push mov cmc cmp loopne loop sbb (bad) jge push stc frstpm(287 mov stos inc mov inc hlt sahf dec cmp mov lods (bad) lods (bad) not push xchg cli mov jl xor loope stos popa fildl inc pop (bad) movsl repnz cmp xchg sti test inc pop push lock pop add pop dec add idivb and xor imul aam sbb xchg mov je jle pop cli in or sbb sbb push (bad) in adc pop mov ja xor pusha sbb into mov cld mov xchg mov sti adc xchg jno sbb insl stos mov jle mov popa pop movsb mov addl ja pop push sbb sbb dec mov andl xor jecxz cld or icebp cld out mov sbb lea movsb sub js stos mov add xor mov jae pop pop stos arpl cmp lods out push pusha jg adc int3 (bad) in lds jno adc xchg cmp sub jecxz mov sub or pop push insb lret mov xchg (bad) idivl xchg je mov cmc cmpsl shrb movl movsb dec loopne repnz lcall dec fs cmp test loop insl std outsb sub stos push adc incl (bad) sbb mov xorl or pop or mov movsl mov add gs pop mov inc mov dec cmpsl push mov add push xlat sbb xchg add movsb (bad) (bad) bound addr16 bound ds push cmp subb mov stos movsl sbbl test jl movsb fcoml inc cmc test aas outsl cmpsb cmp push je (bad) jo imull push movsb int pop ja and sbb and sub jg cmpsl clc stos mov fdivrl leave fwait test or addb pusha cmpsl xchg mov mov mov push sbb mov arpl mov imul add into iret xlat popa jne and cli ret insl or in mov rclb inc mov shlb movsb sub cmp ljmp jmp stos lahf outsl add test gs inc mov test test jg push cmp cmpb bound add add push shll mov mov sbb mov call inc daa ljmp stos ss push ljmp adc dec and fnstcw lods push cli push ljmp int fldcw ds iret push dec imul aas sub push adc jno dec and dec mov ret lret in lock jle jnp add (bad) mov les inc pop sbbl jmp jae fimul addl adc movd iret int push cs mov inc (bad) mov cmp pusha lods push aaa repz lea push lea icebp and push fidivr test jmp push or ret int3 aas sahf mov ja mov sbb das das mov adc ret mov (bad) cmp pop pop mov pop inc shll xchg je xor jecxz cld imul mov fiaddl or xchg jp pop inc jnp loop test jecxz and dec inc cwtl in jne imul popa inc sarl adc inc out add in sbb test leave inc loop pop mov (bad) stos aaa jae xchg (bad) jno mov aaa dec int push in jns mov (bad) jp xchg ficomp lds mov jmp inc fcomp fidiv ljmp in jmp into movsb jp pop lods jne out (bad) in add rcll add je jb stos inc insl cwtl dec leave sbb push xor and lret xchg in jp pop mov push jp mov call fsts and lds out pop maxps pop (bad) (bad) dec push cli sbb ja gs mov push mov mov test out fisubl jno imul cli stos scas lret or push sarl xor jp rclb inc (bad) jecxz sub sahf sbb in cmpsl jp cmp xchg jl cmp jp pop sbb mov gs sub out mov scas inc ja cmpsl sarb mov popf mov inc cs (bad) aaa mov fwait or mulb or daa jno and imul cwtl ja loop push out lret int3 jp and inc pop sub jp insl addr16 xlat jecxz jp lea cmp pusha loop dec insl inc (bad) lods mov mov jp (bad) mov jp lock data16 lds jno xchg pop cltd pop sbb shrl test aam ret fdiv jp js dec inc mov fs inc and rcrb jbe add push pop pop xor sbb pop mov sbb lea cld int3 ds in jg fisubrl pushf in insl sub adc lods lods xchg hlt xlat pushf cmp cmp jnp movsl pop mov insl mov jge sub je mov jno pusha sbb pop lcall xor cmp push add sti jg fisttpl sub or xchg dec mov pop and outsb xor pop sahf push dec lods fwait xchg xchg xchg add pop and popf cwtl cli cmp mov lods cmp push mov sbb (bad) lret dec mov add icebp push movsb dec cmpsl mov mov push rcrl push rorb xchg cmp fdivs cmp or nop test fs mov in daa cli into ljmp xor jle outsb xchg sbb clc mov add xor roll inc cs movsl sub sbb xchg jae dec ja pop push sarb js add fldenv jae push adcb mov arpl popa add mov push movsb ror dec jae aad sub push add out test clc lahf jp add dec sub cli xchg pop adc jp iret jae inc icebp mov jp lret rorl jne or jnp xchg int movsl (bad) jp sahf xlat into stos loopne addr16 mov pushf ja xchg nop mov push inc lret mov mov adc std call cmp jns sbb repz and stos inc out ret adc jns stc sbb outsl or jb sbb cmp (bad) jbe mov ja mov bound (bad) xor xchg push cli sbb lret cmpsl jp insb test jnp or movsb outsl xor cmp stos out je ret mov pop inc es sti adc sbb test je enter gs pop stos je icebp mov mov xor xchg cmpsb fwait popf movsl jne pop enter pop aas sbb insl jb hlt xor sti mov sbb and sahf pop pop mov es jno push pusha lret aas jp lahf jns xchg insl adc add (bad) sarb cmp out cli xchg test jp pop ss pop dec test add sahf adc fiaddl jp pop fistpl cli es mov xor inc jp jne and lods or test xchg imul fistp push mov gs mov xchg jp pop es outsl lds sbb mov jp adc fcoml out stc dec jp (bad) lret (bad) sbb mov movsl mov sbb pop sub xor fcoml daa out cli out jle cmp add lahf movsl mov mov ljmp mov cmp pop test rorb aas insl xchg into jmp jbe outsl lret rep jmp mov inc xor ret sub aam pop push push arpl mov jne or mov popf push ljmp push push push (bad) out sar int3 cmc insb adc fimul jp mov jno imul cwtl jne cmpsb stc inc jb dec les movsl adc das mov lea or ja,pt adc stos jl into jp mov dec enter (bad) jp jae les xor sub int bound add sub mov mov bnd inc shll push dec mov jns (bad) pushf jg adc cmp (bad) outsl (bad) jecxz nop mov cli sti jp ja xchg shlb sub lds setg pop push enter rclb icebp cs scas cmp jmp test das sbb or std mov daa int3 stos cmc out gs ret add lods cmp enter jg jo cs cltd jp mov pop adc mov xlat sti ds ja mov mov push add dec fs jp aad mov jns dec (bad) mov (bad) mov xchg in (bad) cmp jge les ret divb mov mov lea or fcmovu mov xchg loop ljmp push ficoml insl notb xor sub loope je mov (bad) stc and push jae and subl jle sti int rorl test adc push movsl in lea pop jbe pop mov or test cmp lahf cli mov ljmpw sub xchg cmpl ret sub mov or movsb xor rcll pop fidivrl lea mov mov cmpl aad jg sbb ret inc test imul push jmp xchg xchg xchg in lods adc repnz test out in mov fs pop and cmp jno xor mov test into jnp xlat xor cmp vmread fldt add mov loop or sti xchg push fdivl jne daa mov outsb mov xchg gs lret pop sbb jl aaa std inc lods sbb jp or lds jp mov jo lret in jne pop sbb (bad) lea fdiv pusha fs push cmpsl aaa or jge sbb arpl outsl loop movsb xor out add dec cmp pop mov sub stos mov inc dec stos sub adc sub pop je xchg out (bad) cltd push aaa mov mov shlb jae (bad) insl cltd es ds sbb in xchg xchg sti mov sbb fimull fdivs adc movsb adc dec dec ss mov movsb repz rorb adc fdivr addr16 and jp stos add scas jne inc fistpl cmp pop push sbb fs jg push cmp std push int3 xchg cli (bad) clc add xchg rcrl pop jl or (bad) out je lods nop adc data16 mov sub sub ja push jmp sbb imul push movsl xchg scas daa add jg push ror xchg fmuls nop push out into pop xchg pusha inc js mov jle jl push cwtl jnp lea movsb lret inc mov push (bad) dec sbb xchg mov sarl and lods jne lea daa lods pop clc outsl clc add dec bound mov push stos adc mov stos push lods movsl nop sbb aad push repnz or faddl arpl or aam cmp mov icebp shr xor (bad) loop add jne fisub push mov (bad) stos (bad) mov lret jo jp inc xchg (bad) fdivr mov je fisttpl pusha inc (bad) (bad) je lock xchg inc faddl jp sahf aad push scas pop decb jle rcrl cmp jo mov nop pop sbb push pop mov xchg das xchg or aaa push fidivrl jp dec das cmp test sub cmp add sti xchg aam (bad) sbb and icebp jp mov (bad) jmp mov push xchg lret xor sti (bad) jns lea add and notb into fisubl pop inc ljmp add jp lea mov cmp mov js and and es lods lock gs cltd pop ret cmp out and (bad) lock outsl pop or cmp xchg jle sbb or fidiv ret jg push rcll outsl jle mov fisttpl nop mov insb das xor lock lcall jecxz sarb mov sub jl add jno idivl jno jp mov pop in inc jae nop sti mov leave addr16 cmp cmp ja inc lods cmp jno popa inc ret xor aas ja inc mov andl mov jecxz mov inc mov fnsave lahf rorb xchg jge xor and cli pop pop xlat or and icebp incb add xlat sub mov fwait es add nop fs jne pop cmp fldcw jo mov mov ret xchg sub inc push pop push ja pop jbe inc mov jnp sbb add push mov sbb (bad) dec and ret inc ja mov dec xchg add mov call sub ja rclb push daa dec fwait sbb xchg sbb out inc jp jne cld mul (bad) add bound push ja cwtl test jle enter nop cmp adc leave stos cmp or mov repz inc and jne mov adc push (bad) cmpsl mov jp push fcmovbe sub cs mov gs mov fiaddl int3 adc (bad) xchg pop mov std inc rolb test cmpsb fsubrl (bad) or or aas fsubl and mov xchg cmpsb subb decl jp aad fwait sbb and jne inc (bad) push mov mov sub std mov lds xor add adc jp pop mov mov lahf out mov jo lret inc sbb scas mov jle jp mov inc repz jno (bad) call test fidivl mov (bad) sbb out jp pop test xchg pop jne gs popf push addr16 jnp jno shlb fdivrs sbb lahf lock sti sbb jmp (bad) jge leave add mov mov (bad) jne pop push (bad) daa sbb outsb rcrl movsb inc sbb sbb mov js cmp xchg in mov jp fstps mov rcl lea fiadd jecxz stc push xchg pop xchg mov (bad) mov and add fsubl push cmpl cmpsb jp stc js lea rcll pop imul push pop fldcw sbb (bad) mov mov xlat jnp insl pop xor les (bad) jno fnsave fidivrl aas push xor jo add dec aaa mov pop js and jnp dec jmp and mov xchg and cld imul mov and flds sub xchg imul imul rclb and lods add jp mov sbb je dec arpl cli xchg iret xchg add data16 add das jno mov leave scas xor cwtl rolb hlt mov bound movsb sub xor test jo inc fcmovb mov (bad) jne push sub jg clc cmp inc xor jo add mov xchg aad add mov pushf nop xorb rcr cmp por (bad) pushl push (bad) in xchg les loope stos inc xacquire xlat scas mov mov mov ret add jnp adc mov sahf aad fnstsw or and imul in scas gs mov and iret sbb mov imul inc jmp push fcomps pop adc pop or fs cld jp sub pop xchg int3 enter out fnstcw js cmc aaa xchg sahf les dec add add outsl gs sub int push cmp inc cltd pop js xor pop sbb (bad) add loope jnp cwtl sbb pop mov push cmp or and push lea dec add xchg jne and roll sbb out insl movsb iret shlb jmp (bad) mov test imul cli scas mov rorb sarb hlt jae jmp add dec sbb in pop (bad) aad addr16 call popa push fwait stos cmp lcall sub push ja inc cmp test add addr16 push stc jno inc cwtl and push inc adc scas mov arpl add or fidivr out lea jnp,pt sub inc es jno cmp adc (bad) add sbb push dec cmpsl jp subl mulb into mov push jne pop imul jbe je stos int3 mov call jmp jo mov pop or jb jo jae and lret imul mov mov cmp mov jbe imul fildll sbb jp or xchg je jle ja add mov dec loop int jne jl test sbb cmpsb xchg xchg mov sub jp cmp dec xlat jp int rcrb leave test jge pop xchg loop push test sub mov cmp popa cli mov adc dec ljmp xor jne xor mov cmpb scas xchg pop push test jp scas imul (bad) and int pop test aad sahf sbb mov mov lret mov les adc stc cwtl inc mov pop xor or cmp dec out punpckhdq sbbl pop arpl fbstp das pop pusha mov (bad) xor cltd and (bad) ja into dec pusha rcll pop jp pushf div sbbl lret loope mov or hlt pop push mov cmp sbb and fisubl fnstcw cmp sub (bad) xor imul out mov or insl add sar sahf fcoml insl cld mov cmp push mov fidiv mov pop fcmovnu cmc lcall xchg adc sub dec sub xchg cmp sbb xor sti ja sahf sub or sbb (bad) cmp jbe and cli mov push and cmp cmpsl lea into lret mov fdivs test bound ja sbb insb out cmpsb mov sub repnz dec out xchg std mov pop bound iret mov dec mov jp dec mov xchg fstenv jp sbb imull test bound dec add adc aam push ja pop mov leave movsb out in fadds cmp push ja dec add push mov stos sbb or pusha jecxz imul fwait jle movl cwtl add mov mov jp sbb (bad) int inc jp in inc xrelease push jne enter mov mov push dec mov cwtl jl lahf xchg outsb test cli dec (bad) mov out hlt int3 dec inc notl xlat cmp or test xchg or pop lahf add cmp jnp adc popa in cmp ret mov inc or out cli out les scas arpl pop imul mov test mov ja sbb jp adc loop (bad) je cmp roll inc jp and movsb ret lock jno imul mov mov addl jns lahf mov clc lcall xor jp or cmpsl mov mov aad mov cmp stos mov fnstsw push push jl push shrl lock add and hlt popa loopne js aaa lcall fist or jnp stos jo pop jmp push jg lret mov sub sbb add mov and inc iret push lods sub je les jmp pop in out jle scas and sub pop or aam fnstcw jle rcrl dec cmpsb jne or jno call inc popa pop fs xchg mov sbb cmp jmp in cmp xor sarl std xchg iret jg sub add or stos fiadd (bad) push xor ja sub nop mov mov popf adc xlat or sbb cwtl (bad) cmp mov adc mov sbb dec sub jp (bad) mov test jnp es clc sub mov test add in insb sbb mov jp mov inc jno sbb xchg ja lret xor and cmp push and js std int3 xor fwait jg jae mov xchg pushf xor clc jp mov pop lret ds pop fstps iret push cli sbb mov (bad) lock adc dec test jae pop pop adc call dec cld jne test inc mov test stos mov mov push insl xlat and shlb jp mov dec enter pop (bad) add fwait les mov jle inc jae inc ja ret adc jne leave stos std hlt sbb daa sbb ja cmp in daa mov xchg add jp scas subl mov shrb adc dec sbbl stos jl mov jp fcoml jnp sarb jg mov jp (bad) mov mov gs ficompl stc mov jne les add sbb fldenv pop push mov and xor mov jae clc cwtl jp les mov pop popa loopne daa hlt lock inc or (bad) mov dec jge jno push sub jno dec jbe sub sti fnsave xor fisubrl push fs dec adc data16 js ret push inc rorb (bad) cmp xchg sbb push nop insw inc sub add sahf repnz xor cmc ja sub jp dec gs sti (bad) xchg loop mov fimul xor scas sbb loope aad and push mov xor (bad) mov test cs lret jne adc lahf cli gs adc xchg cmp sahf inc jns jp std mov outsl cmp lods xorb lret and mov imul in xchg add mov xor jno ja xor mov cli sarb (bad) nop and pop push pop lea pop jp mov ljmp shll stos in jp pop cmpsb sbb adc cmp aaa cld test sub imul push aam jp sub jge mov jg cmp das clc sub jp addb lea pop cli repz rolb jp jg push cmp sarl adc push xor push stc cmp into jecxz push jmp popa mov cmpb inc jnp cmpsl int mov inc lods jb dec xchg cwtl insb jae push xor jecxz jnp cwtl pop sbb fcmovb mov (bad) mov cli ja sub and outsl dec test sbb stos lods out mov xor cmp jp inc aas repz rol jbe out fidivrl sub sub push aas lahf push ficomp nop adc adc sahf and insl mov (bad) int3 movsl dec sbb cltd (bad) sbb gs xor mov push ds je xorl mov jno mov adc test cmpsb pop mov jp mov jno (bad) das test outsb mov ja loope lods aaa push ficom inc xchg daa insl jb xchg je pop sbb cld je mov jbe in (bad) insl test out mov jnp pusha jnp xchg lahf test lret pusha (bad) cmpsb in (bad) aas lods testb jne dec lret fstl push fcmovb popf insl jno (bad) hlt xchg jnp sbb and pop xchg adc add xlat pop sbb aam mov (bad) pop (bad) jne pop cmpsb cmp push dec mov test enter in je adc cmpsb test (bad) pop jne mov popa jae and sti push jns imul fisubrl adc pop mov push add arpl or pop shll std cli jne dec pop xchg lods push (bad) jp add mov jmp arpl aaa jp mov out sub mov imul push mov (bad) sbb ljmp push fnstcw lret add fldl lods jno mov std stc jp push fst out push cmp and and out pop add jp add pop (bad) and xchg mov cltd jp mov add sub sbb pop cwtl fnstenv inc insb jne cmp mov jp jl insl sbb mov mov cli pop (bad) and sbb test imull jl cmc int xor mov mov sub sub and nop mov stos xchg push stos js loope push and rorb (bad) jne je daa icebp repnz loop xchg fsub divb adc dec mov adc fldenv popf add add (bad) negb sbb (bad) scas (bad) jne jno xchg mov dec outsl jp rep adc sub jp gs loopne les jecxz insl jp jecxz call mov ret lret sub sbbl mov pop pop ljmp mov aas adc jp mov inc or test and mov pop lcall repnz cmpsb lcall js xor scas push mov jbe cmp jp mov js pop in pop mov xor jp push ds pop adc add mov pop or dec push mov clc loope (bad) aad lods xchg jnp xchg mov jmp push lahf gs adc pop or inc ja aad scas sti push (bad) mov xor ret or ljmp movsl jp xor cld and xor sub xchg pushf fwait pop stc iret movsl sub pop sbb rclb jnp insl ja ficompl pushf in cli inc jns movsb call negl push and dec mov jp cltd sbb adc insl mov jnp incl insl push imul out (bad) cli movl pop jne dec cmc mov dec dec xchg (bad) (bad) movsb aam inc xchg addr16 sbb stc xchg int3 mov stos jp dec jb xor push push or loope pop xchg fcomps orl lds movd jle int pop jecxz rcrb xor movsb sti cmp fldenv cmc and ret jp sbb jmp xchg hlt cmp push xchg mov sbb and fbstp mov stos dec std mov aad adc add dec les sbb xchg ja lods dec movsb leave neg jns and js xchg mov jp mov pop in sbb in adc pop xor cmpsb je pushf xchg jnp jl into fldenv xchg mov inc stos jle popa pop adc mov xor lock sbb or mov stc fstpt sarb mov leave push into jp mov popa insl jp sub rorl push dec (bad) int ja push cmp (bad) push mov cltd pop pop fstps out (bad) (bad) lock push lahf (bad) lock cmp jmp jge mov lret add cli mov loopne cmp or jnp,pt out adc sbb into ret arpl fprem mov ficompl (bad) ja aas add xchg ds mov in dec push jbe or clc xor sbb in jmp outsb inc popa es cmc pop pop pop mov xchg and xor sahf xor jp ja fsubs in dec fwait test std mov push cs mov mov test jg and sub les jle in mov jp,pn aam int es mov shlb xchg popa fist nop clc roll loope aaa xchg mov push push int jle xchg (bad) sbbb rolb leave xor movsb xlat inc mov fstl test push arpl (bad) jecxz and xchg in movsb adc jae daa jo stos xchg lea sbb stos sbb leave fs imul jnp push (bad) lock mov pop push jno (bad) sbb fnstcw in mov mov xorb ficom (bad) je adc dec inc cmp jg frstpm(287 jle arpl mov pop mov das pop imul mov (bad) nop int3 in or pop imul cmp aaa mov push aam sub mov dec into cmp add movsb jecxz xchg add jecxz and movsb sbb stos stos and subl pop jnp jmp aas out mov cmpsb sti test dec xor aaa and dec fimul pushf push std dec pop das icebp mov jle and aaa sub insb repnz jb addl je lods jb inc movsb and push fs mov test call imul jl push inc inc cmp in sbb xlat (bad) jmp cld inc outsl jno movsb inc mov dec mov insb roll or and rcll rcll cmpb loopne test inc xchg or lret sbb lret out mov sbb jae mov lods scas mov adc out iret (bad) iret in cs pop sub push sbb stos sub add push sbb add ficompl lret (bad) cld cmpb pop push jbe jnp dec es xor jecxz cwtl dec pop cmc push jmp lret and hlt jo repz mov stos mov or fnop mov mov out add sbb ds xlat outsl mov xor push nop adc dec pop repnz sbb sbb push adcl xorl stos dec mov cmpsb fwait js dec popa loope cwtl cmp sti inc out ret stos jbe xchg es int3 (bad) xlat gs pop ficompl sbb addr16 rep mov addr16 icebp pop je add shrl xor and test add sbb mov mov popa dec imul mov clc pop mov mov fwait (bad) adc lcall xchg clc cmp mov nop testl pusha shlb mov xor jnp or test mov test and shlb xor fwait repnz pop or (bad) mul mov cwtl and imul fwait pop xchg lds xchg cmpsl pushl jno push lcall push loope and sub leave or mov xor push je dec inc adc jmp sbb fs test mov std ja mov jge jp xchg mov jne pop stc xor sti push bound xchg pushf mov mov jmp icebp ror mov std out inc lcall es xchg jp lods les fisttpl sbb pop fnstsw ljmp lds push fisubrl into cmpsb jp inc rcl jne push aas sub fidivrl bound call add jp xor insl imul ljmp bound in inc mov mov add inc jp mov push mov adc inc or xor inc fidivr mov and sbb mov xchg mov lods stos insb lds pop (bad) loopne scas mov adc cmc jp outsb mov movsl cmovns pop lods inc daa or pop mov jp jne dec pusha or sub mov loop xchg pop adc or mov jne gs jl cmc xlat add mov dec pushf push rorb (bad) out in sub jae into js in sub lods fwait imul xchg test sbb and mov inc lds sti mov mov pop cltd inc (bad) mov lcall add pusha inc xor dec (bad) (bad) jle add add ret xor (bad) inc jl mov sbb sub pop add xor daa and mov jnp repz pop pop inc mov xor push stos mov sti mov cmp popa cld xchg out pop jp pop ds cmp movl loopne mov sbb test std inc and jmp (bad) mov pop gs sub cld lea mov rcrb xchg sbb inc (bad) ja push movsb and mov das cmp mov gs outsl jge pop fpatan or pop cmp inc or lret lret mov inc sti std or cli out cmp lret ret mov mov sbb adcb out fstps sbb sahf inc jno test sbb cwtl and leave cmp cmp mov dec pusha iret ret mov fstps scas xor cmpsb jge adc or jg clc (bad) jb stos xchg add mov xchg jnp mov ds jp fcoml nop fwait pop in and add fdivrp mov push inc jnp,pt mov (bad) and mov sbb in pop ret (bad) and jns xchg idivl and mov ds insl ja pusha xor cwtl mov jno test sbb lret inc xchg xchg sbb cmp lock mov adc jp sahf test lret or out xor sub cmp jo adc xor cli popf not mov jp pusha sahf sbb push cmp add enter xor push pop cmp jno push push lcall mov adc mov lret adc mov push or int3 pop sarb insb jl sbb mov test and jp (bad) loop stc clc imul (bad) push int3 cli and mov fstl jl int3 out hlt insb jnp xchg loope add or (bad) aaa xor loopne fisttpl xchg sbb pop sub ljmp mov sub push lock xchg stos jle dec and ds sahf jne loopne pop xchg loop mov inc and push cwtl sub jp adc add ljmp xchg sti aad mov or stos adc xor mov out jae stos mov test fldcw and rol hlt pop stc pop dec movsb sub jecxz pop jb shll sar lods aas jp (bad) daa enter push popa xchg mov sti nop mov adc jge pop insl pop push mov jle cmp lock mov stos aaa dec jmp jl sub mov in in insl sbb shlb fmull mov sbb xor inc shrb or add (bad) push daa ljmp imul jne jb jbe mov in push jae push clc pop (bad) stos fsubrs pop inc jnp out in mov out sbb movsbl dec mov cmc xchg mov lods (bad) jae into je jnp cli lea mov pop rcrl cmp mov pop xchg xor insl pop loope jnp loope popa or into dec lea xorl mov sub cmp xor pop xchg lea lcall inc repnz adc mov cmp jnp push push fs das daa xchg xchg outsl mov leave out cmc imul popf push aas jecxz ss or push xchg mov push out dec push nop jb mov mov and and pop sub fnstcw hlt jle int dec mov jp add cmp jne add cli cli push gs icebp and xorb mov xchg dec test add cs jne xor mov lods xchg je fucomip (bad) push movsb clc fcomps ja mov mov test jmp call (bad) mov ret ja aas sub nop inc ja cli push pushf mov neg mov push sti or or dec lcall aas scas or ror je,pt inc imul cmp sbb dec inc lcall jp arpl xor data16 test cmp call dec xchg mov pop push pop leave push clc jne pop aas xor or pop pop jle jno mov inc mov enter inc in into (bad) jnp mov xchg jp call sbb ja sub and shll inc call push xchg sub sbb mov es sbb ret jnp sub sub pushf gs roll loopne imul add (bad) imul andl mov out xor out pop xor scas jl sbb push test pop mov mov movl sbbl xchg ljmp fcomps std cli popa cmp imul lods cli jp add add sbb daa dec cs pop jne xor mov decl mov arpl sbb jae lods sarl jp out leave addr16 cwtl bound imul js jl jnp push gs lods gs (bad) imul mov xor dec sub and jp sbb jbe scas test divl jnp imul add push outsl stos dec jle jp jge in mov call push repz test adc jg es pop jne addr16 in mov sarb es int xor ja mov cmc xchg fwait inc std dec xlat push stos pop pop jno (bad) jb pop lcall pop dec movsb ja adc xor mov xchg push xor lret sub adc rcll lock xchg lret mov xchg hlt adc jp sub xor jp jge pop adc dec mov out loopne push cmp add in inc sahf test lock or push insl stos sub (bad) jp mov sub push pusha dec jp in mov jno aas xor stos mov push ret cmpsb jne frstor cmpsb jns add jp jne and xor and or jne fs and insl mov cmpsb xlat mov ja mov out cmp push dec and jp scas or fldl imul push aam fwait cmp jnp xchg int (bad) hlt jb lods ja sbb jl inc ficompl add pop sti xchg loope daa jp jge mov pop cltd xor jns cli cld dec jp mov into push jp mov stos ss sub jp mov xor mov lahf (bad) inc jo cmp scas test xchg mov adc push lock lret mov je rcrl xor cmpb outsl jns gs pop fcomps fidivrl cmpsb jl or dec or fild push xlat adc int3 jl pushf xchg ja inc push add stc (bad) and fldcw ret js cmp and clc sub mov shrb stos ljmp sub inc push adc sbb push stos fmull ret int3 jne push fwait push arpl int jnp and (bad) push sti fs mov (bad) mov dec sbb mov add jae les and dec movsb mov enter into push push mov mov inc lock cmc sbb mov orb push jae addr16 jno lds shrb sub ret jp aad popf push mov scas les addl mov adc popaw inc cmpsl pop call imul cli dec fstp fwait mov jnp lds sbb std and fldt pop cli rcrb scas mov arpl jl sbb cmp aad jnp jae mov add push jo test imul cli jecxz xchg das pop dec insb ja xor outsb sbb push xor push push cld mov inc je push jmp stos enter cli jno fisubr jne jle ret aad mov jno sti push pop pop sbb mov test xchg into jp pop ss popa sti stc ljmp and out shr mov ja dec pop cwtl sbb dec xchg pop fnstenv insl mov sub xor fsubrs cmp dec call clc push test adc xor cltd mov xor push inc cli mov fs add fwait cmp jne popa jecxz clc jp push add das mov insl cmp js pushf jnp movsl mov xor push jne xchg or pop test xchg jbe inc imul leave jno or jp mov lock mov outsb add push pop stc hlt ds jnp push mov cmc ret cmc mov in jp xchg inc and jp or or or nop pop jne mov fidiv (bad) jnp movsb or sub fildll cmp mov mov fwait mov jecxz push sub jne outsl push aas xor insb sbb pop call shl ret fxch add mov imul mov xor pop sbb mov mov cwtl mov nop inc pop cmp (bad) push jae fstl inc cmpsb cli mov inc jp stc xchg out inc (bad) xor push sbb xchg bound jp mov fisttp push loop push bound mov stos iret lods pop adc cmp imul lods dec lds push sub mov mov jmp test jno or cltd into mov jp aaa push sbb jp xor fidivrl or flds out lods pop xor jbe jmp inc in fsubrs dec push pop fimull scas push or cmp pop cs or jnp in mov dec jp xor push dec ja pop jns mov sti test dec stos insl (bad) sub adc repz jbe sbb push (bad) movsb mov je xchg int3 adc adc or dec mov adc jnp cmc testl mov inc cmpsb jp lretw push popa mov (bad) sub test notb mov mull fxch cmp (bad) inc cmpb sbb mov mov sub pop jb mov stos inc imul lods cmp pop test lock and (bad) sbb add test imul jno lret mov mov imul sti push pop jle cmc jnp test xchg clc dec inc inc pop push inc sub mov daa jns push fxch and ss push imul push ljmp xchg ret dec pop mov out cld daa out xchg leave adc sbb stos (bad) or mov or enter jo mov les lahf fs stc cld call sbb push jo jp and mov pop pop add addr16 daa outsl iret sub mov dec stos mov pusha jbe fs jl je and leave pop es or pop xchg lret pushf xor scas fildll sbb jnp stos das cwtl pop ss arpl cli and icebp stos inc push test jge jecxz cmp repnz pop fnstsw sub mov jecxz insl xor stos gs leave je movsb stos es jns pop outsb pop jo dec arpl mov and mov nop shrb push push cmp cmp lods cmp add sub popf jp mov faddl insl les pop jp lods das push xor mov repnz jne ja std mov dec cmp add cmpsl testl pop add test test jp inc push add jne sbb testl push lods lcall je sahf je lcall push lods jne andb sti popf mov aad ret aaa fsubs jle fidivr popa xchg inc cmc jp push inc xchg dec and mov mov adcl fdivrl push mov aaa jl (bad) jnp out dec and jp xchg push mov sti movsl mov jp and sbb aam loop in xor imul cmp push mov adc (bad) int and dec sahf xchg dec fwait out ds jne outsb inc (bad) xlat jne insb incb adc dec movsl push cli ds sub dec xor lcall (bad) in sbb test mov jp mov nop popa inc xchg adc es stos hlt jae ss fimul (bad) icebp inc and not jp repz daa xchg jae pushf push aaa dec cli or push adc push mov xor lahf dec cmp jp mov inc adc (bad) loopne or jp (bad) and xchg push pushf jp arpl xor adc and test jp dec out fdivr into pop insl fildl pusha jp sub add ror das jp adc push add mov jnp pop cltd sbb gs clc xor jmp cmpsl cmp aas push in (bad) jnp cmc jbe les xor xor push mov fsubrl add ret icebp xchg mov jae imul rolb mov mov out (bad) das lcall push push or jp sbb pusha jp sub cld jle xor fucomip push jmp repnz int jae imul jp jge loop mov sbb das inc aas cmc fs fldenv repnz lcall cmp pusha movsb push ret stos in or xchg aas pop in adc mov shll shr and cli mov sbb sbb subl inc cmp mov xchg jp leave mov jne jg mov movsb xchg xchg jbe or pusha mov cmpl cmp pop and pop adc iret jp repnz pushf pop adc jecxz inc ja add sbb push mov cmp arpl es mov dec or xor daa jmp sbb out ja mov jmp or arpl loopne lds xchg sub mov ss jp jbe add jae jp fdivp push test adc jne xchg loop mov fcmovne mov xchg mov out mov jbe xchg push mov jp push inc mov adc loope cmpsb cli lcall fdivrl push jp or jle dec push jne inc sbb jnp ja fsubrp cmp xchg jno out lret ss sub mov jge loope cmp xchg cmc shll mov pop arpl or mov sbb test jae inc sti jnp sub pop dec adc jp ds lret jns in jp dec or cmp mov sbb jge sti notb fs mov inc xor sbb (bad) sbb lock cmp inc jmp dec jp mov dec into shl ret in adc mov jae dec adc or test (bad) xchg xlat xchg push insl in les mov jo mov pop lea das dec and mov in mov xor dec and nop jae cmpsb stc push jp xchg mov das cmp adc sbb or je push xchg push cli jo adc push sub insl test ds push shll add loopne clc mov lret and ja lahf pop adc mov jo aaa jp,pt cmp sbb mov xchg fisttpll xor mov scas sbb pop push movsb loope jno sub lock lods dec sub or std pop ja xor arpl repnz (bad) pop into je jp push and cmp int3 jb hlt jg sub pop lcall (bad) push stos lods lock aam aaa cmp or jns jae jns jl divb cmp rcl jbe jmp push xchg dec ret jo out cli outsb dec test movsl jmp test mov jp xor rcrl mov dec mov jb leave push ljmp mov sub fisttpl xchg fdiv jp popf rolb ficompl push xchg call push inc or imul mov inc icebp rcrl push es adc add orl fdivr jp dec and popf jg dec xchg push jns sub jp ret mov inc add fwait popf push mov jae xchg or cwtl clc xor loopew in iret pop jp mov dec stos bndldx cmp int3 mov stos out jp inc stc cmp push xor iret fwait mov xchg pusha pop fstpl adc in rorl sbb frstor fbstp cld inc test (bad) pop popa (bad) sti mov fldt ja mov insl push movsb into xchg jle outsb push adc fistpll stos cs mov mov adc jb movsb xor jecxz daa mov cmpsb pusha cmp jb xor mov xchg aad fist inc loop jbe xchg sbb push jo adc arpl shlb movsb insl data16 js ja fcmovne (bad) xor arpl sub andb or stos sub lret outsl mov mov pusha into lea dec popa cmp mov mov lds movl inc lcall sbb jb cmp jmp movsb sbb xchg jle in inc cld out popa (bad) jno xchg cwtl push outsb cmp mov add outsb sbb movsb ljmp xor aas jge jmp mov dec inc test jmp xlat in in inc inc xorps gs insl lea add gs cmpsb mov dec or lret pop imul sbb push jp jge dec cli aas mov call xchg push inc xor or and mov mov (bad) jg jp insl les mov push stos dec out or ss mov cmp mov jp pusha jns pop xor ja,pt push nop (bad) int dec jp inc aaa in or jl xor gs or icebp add cmpl xlat cs insl shll or mov jbe xchg push nop test cmp sub insb ret cwtl loop enter jnp mov sub or lods lcall jbe inc sbb jbe test popf mov mov mov pop and push enter fprem or jp scas je sti adc jle je repnz or jp stos mov in add pop jo or stos scas shrb sbb sbb push ret pop arpl arpl mov hlt dec outsl mov mov ja rcrb cmp or dec sbb pusha push int3 mov les sbb push stos sub sbb jno inc sahf push mov cmp ret shll pop or rorl sub sbb and cmp mov idiv sbb out mov iret (bad) jp lock dec jo aas imul pop or nop add cltd mov (bad) popa sbb leave mov std (bad) cli mov pop pop inc jne cmc dec rcrl das outsb mov push movsb jp dec dec (bad) xlat mov inc lahf and adc push imul sbb movsb xor (bad) push mov inc xor outsb stos sub mov sahf adc es mov push (bad) std cmp lret xor sub in push sarb (bad) mov or fmuls push stos test inc in out push mov (bad) fistpll cli cmc enter clc mov sbb and fmulp lcall xchg mov xchg push and ja mov shl mov iret in mov jp int3 gs mov push fcmovb mov sbb inc mov je dec arpl sub mov test cmp pop adc jae,pt shlb add mov outsl sbb jecxz out nop mov add jp ss and popf add mov out mov push stos mov lcall arpl nop sbb inc rcrb stos pop or icebp addl mov test stos jmp orl into sarl push fcomip mov xchg fcmovnbe jg xchg add cmp dec mov add xchg fs xchg dec sub leave out rcl mov pop scas cmp cltd pop jp ss xor xchg jp cmpsb push jbe das test dec (bad) pop fcmovnb or jmp out or sub in stos mov out sbb mov pop insb cli in popf rcrl cmp mov pop sbb pop xlat stos add pop cmpb (bad) or out mov xchg cld lret pop cld (bad) (bad) mov (bad) lret push sbb xor movsb cmp (bad) stos (bad) jae sti and notb xchg leave leave repnz call cld sbb add cmp scas pop sbb jle mov dec mov dec cli adc cmp ljmp sti add rcl sarb sub mov nop add sub cmpsb int3 daa adc (bad) jp je xlat hlt push push mov mov aad pop dec enter mov jbe iret stc cli je clc or push lret xor ds sub or pop fcmovu or push idivb mov dec cs test (bad) in shrl test dec jno fwait jle push leave mov daa jp into or or xor ja adc leave and lea lahf ficoml inc add (bad) in xor ret mov ljmp xchg or test and jp inc mov mov loope popf jp mov out add sub fwait repnz fbld stc lret jmp je xchg jno lcall mov roll push mov jnp mov in outsb dec addr16 jae addr16 mov gs ret mov loopne test jnp nop jl js mov dec daa clc adc sub jbe mov ja push iret and int ret sbb push cmp jnp mov mov divl outsl mov icebp inc aam (bad) mov push push test pusha sbb pop jmp adc sbb cld sbb icebp sahf dec int mov mov mov clc (bad) insb movsl xchg push jp dec movsl out (bad) (bad) jp cli inc mov loop xchg inc jb push jnp out jns cli mov popa cli (bad) cmp inc and jge fcomps jb mov or mov push sbb jp adc dec sub and rol jp hlt ret inc das test mov mov mov mov mov cmpsl push scas dec pop fwait (bad) in (bad) rol lods das add (bad) xor cmp (bad) mov sbb fwait rcrb pop jp in gs pop aad dec push sti out sbb mov ss js push cli cmp lret sbb jp inc sub arpl pop pop fs in (bad) mov nop push jae data16 cwtl dec cmp jp pop pop jl fwait mov push and push push jnp cld cwtl dec imul cmp adc std xor xchg adc shrb inc mov jl push sbbl insl dec cmp pop cmp and cmp dec fwait lahf cli and fwait sbb jp xor mov es das adc mov imul dec or mov pusha ss cs out jp icebp push lcall jne dec movsl mov in fwait les push je mov es jp xor sarl adc sub mov sub push out mov call mov sbb daa jno pop mov lods lds jne or ljmp xor inc ret mov push loopne sub xchg mov jae (bad) sbb ficompl mov dec mov in (bad) mov push loope lods push addr16 jecxz xor fs clc dec dec jmp add inc mov out cli es and inc cmp sbb hlt subb or (bad) xor cmc cmp and push add int fistpl rol xor dec bound inc and cmp daa jp jge ja xor dec jne pop xor test (bad) fnsave pop insb mov cmp ss (bad) fidivr pushf arpl hlt std jg xor fwait lret cltd inc pop bound xor mov pop movsb adc jp jbe and aaa jl sbb xchg push dec fisub cmpsb jp sub jp (bad) xor inc mov add pop jp (bad) stos arpl aaa xor jp sti adc cmp rolb xor loop nop jmp pop mov pop pop sbb cltd sbb dec and mov inc gs aam push dec (bad) mov (bad) jno mov jmp sub xchg push imul aas je push insb (bad) call cmp inc cs sub sbb jp imul xchg fcompl repz into movsl cmpsb int gs stc cmp out pop movsb fistp cmp ljmp cmc cld std insl icebp jp imul movsb mov xor sbb lret and pop jae dec std leave jmp lcall imul je lret into fstp mov pop adc ljmp hlt mov loop jl call jp movsl decb jp push pop xchg stos dec cli clc or js inc fnstenv out pop jno jae divl ret mov mov pop fcomps jne push jecxz add scas aaa pop test fildl dec ja mov cli sbb pop aas in and dec and jle and jecxz xchg xchg test mov push ljmp jp fild daa mov mov mov dec aam mov loope push xor (bad) push xchg ja cmpsb sub mov fwait sti mov pop test imul scas push jecxz gs fwait jmp inc in ja je repz jp sbb shll xchg cmc jp pop pushf pop xchg pop adc add jnp lcall out mov cmpsb sub insl imul or jl fiaddl jns xchg sub jle test xchg sti (bad) xlat jp in js jmp push movsb sub or (bad) xor inc jp mov mov lcall je test add sahf stos popa pusha inc cs fildl movsb ficompl mov leave popf imul cmp pop loop xlat dec xchg cli (bad) inc sbb cli inc push stos sbb sub pop mov test mov scas hlt daa stos jne dec ficom add jnp and daa int sbb mov pop inc xchg fst insb idivb je mov mov or mov or imul cmpsl add adc das arpl xchg ficomp pop imul xchg sti cmp inc repz pop imul mov stos mov fild jp push or dec popa xchg push lods inc negb mov (bad) sub inc or pop pop int3 imul frstor sbb sub aas arpl sbb cmp in data16 popa and push mov sub mov jnp adc sbb xor rcll push mov pop cli xor xchg sbb jmp mov push mov sti clc jnp jl and mov sub jp in xchg mov jne sub mov mov jnp out pop cmp rcll lock stc xor les sub push xor pop mov fs movsl dec dec push mov sub cmpsb test loop mov lcall rcrl dec into mov xchg jns xchg sbb mov ret pushf mov xchg ja outsb or fstpt loop sbb cmp imul sub insl add scas call sti sbb pop cmpsl fnstenv cmp cmp js dec jnp push mov lret stos xchg movsl (bad) mov jp jge cmp jp lahf xchg pop sbb mov or mov imul stc adc addr16 pop xor ss xor push and clc mov (bad) bnd aam lods cmp dec jmp (bad) mov jne rsm and cli jge inc mov pop mov testb jne nop imul jl out dec jb cmp jge jp xor aaa fcoms movsb add scas and jle jp inc fisttpll (bad) jae dec cmp jge (bad) fmuls cwtl xorl dec popa in (bad) mov jbe jo imul cmp jne stc push mov add push loopne js test push dec pop xor fs les dec gs fst sub mov outsl mov push jp and mov pop imul mov bound mov jnp cmp cmc xlat jp lret and imul aam scas mov jb insb inc push pop jne enter mov add jp ljmp ja in (bad) and jnp mov jp out xchg pop pop out test in inc pop aam sub add xor inc jp loopne repz jp fadds cmp sbb sbb pop sbb dec shlb bound lahf out xor add sbb jecxz stc imul inc jp mov (bad) das lret enter mov mov pop js insl cmp inc jl repz mov xor sbb shll cmpsb fcomps xchg jnp xor repnz mov sarb push xor xchg jp icebp lret testb dec jl mov pop fistl addr16 lahf and repz lret ja movsb jl mov or cmp js dec jmp gs dec lock stos xchg push sbbl bound fcomps mov (bad) or dec ljmp mull mov jp push cld sub push push dec ljmp jp data16 cld idivl (bad) aaa mov jnp std ljmp cld repnz jp (bad) iret mov push es mov ja lret imul mov jnp daa and pop cwtl into (bad) imul jmp pop stc outsl or mov sub int clc jg jmp xchg imul xchg ret cmpsl fiaddl sahf jnp test jecxz cmp jmp popf push imul daa mov shrl jp popa dec out imul mov push sub leave xchg clc jne inc xchg mov cmc cld jle stos push aas mov jp insl or xchg ja imull cmpsb and xchg mov inc cwtl jp or cmp arpl add out or mov ss dec pushf cmc adc jb test lret hlt sub das lcall cltd int3 and loopne js or (bad) ret mov es lcall mov add ja lahf sbb insb pop mov cmpsb xor fdivs cmpsl xchg aaa add xchg jp test js ret inc icebp jp add movsb or stos (bad) jg mov sbb aaa mov aas fidivl and lds sub arpl test loopne jne jnp jge cmpsl clc sbb ja aad lds enter xchg mov add addr16 cmp das add sub xchg sbb loopne gs sub mov movsb hlt jns ret sub pop xchg loope jbe add in outsl movsb lea addr16 dec add or test iret subl jle sub hlt mov inc pop hlt jno (bad) mov mov cmp mov dec fs dec sarb mov push cmp mov fcoms shlb xlat dec hlt sbb outsl movsl ret (bad) into jno ficompl dec repnz pop ljmp lret pop sbb push push rcrl (bad) stos cld jo andl cmp pusha sbb jle mov sbb out lret inc pushf ljmp repz sbb mov movsb sbb jns arpl arpl xchg incb out dec cmpsl mov mov dec push repz xor mov outsl jae out pop (bad) mov je pop dec lock mov jno subl std inc movsb jno inc stos cmp test jnp pushf pop pop jns in repnz shll aas sub fnstcw inc imul dec xchg je arpl cmp push mov bound js sub sbb ds movsb shrl arpl ljmp lret xor xchg ss jmp adc xlat mov stos adc divb xlat mov or outsl mov out dec mov loope (bad) mov lret ret jl and frstor adc push enter inc xchg outsl inc js adcb sub fwait dec ficoml enter lret dec ficomp popf mov (bad) and lcall mov mov jg cmp sbb jnp mov cmp aad push jae outsb test fldl jge jecxz mov jmp sub adc jp mov jp inc inc and lret mov imull sub nop (bad) lock and cmpsb cli std or loope roll add sbb jp idivb jecxz stc sub adc pop mov xlat mov aas dec in mov imul xchg mov sbb or pop add ds insl test push rclb fwait mov adc aaa pop mov jp sub pusha loop jae inc stos nopl andl js add xchg int3 add jp pop jb push pop cmp cwtl stc cmp and push int sub pushf sbb push divl movb stos enter dec jb ja (bad) xor inc dec push push dec in inc xchg shlb in mov cmp and inc lret dec arpl xor sbb ja cmp mov lds sbb sub jb jne stos pop call pop mov fist mov cltd movsb lds mov mov iret cmc sub push (bad) int fcoml test mov pushf pop push cmp cmpsb adc movsb add (bad) mov jno stos aaa push (bad) dec fcmovnu mov int inc imul inc xchg jle xchg movsl inc addl sub fwait mov fwait inc pop pop stos sbbl inc adc data16 fnsave lea mov pop xchg stos sub rclb cmp pop add test mov test pop mov add and push jl (bad) popa or xchg mov mov insb sbb add sti movsb sahf jnp ret cmp int push pushf enter jmp out outsl jbe mov iret fstpt mov push mov adc xor sub push imul fsubrl push ret icebp adc or push (bad) jno in mov lret mov xchg mov add gs or mov and test or and dec adc dec stc testb lret (bad) and int3 jno fsts mov cmp jns int3 inc mov insb inc fisubr cmp es dec xchg imul cli ja repz sbb inc jnp movsb xchg push pop cmp jb subl sub jp mov stos cmp shlb (bad) sub fidivr push mov mov add cmp push mov (bad) lret sub mov sub fdiv mov pop ret or jmp (bad) mov adc aas je sub jo aad mov pop movb jp fxch push rolb movsb mov mov fwait sbb movsl and arpl jp sbb popf adc inc scas push std aaa mov and dec addr16 and push push clc jb idivb lock jp xchg pusha cwtl pop xor pop and sbb rcrl mov in ja push mov jp fstl adc rorl fcomp mov ret sbb cli dec les push loope ds arpl (bad) icebp cmp sbb int fcoml lret add sub xor add jo mov popf jns add and dec dec lret dec sub iret dec and inc jae (bad) jo pop sbb jp add xor or cmpl movsb dec iret jle test or int push loopne gs push xchg ljmp ds mov ficom sub lds and jno mov pusha enter xchg jp stos fbstp out cmp lret addb xor clc das mov and insl rcr icebp scas push push jbe mov jg push clc addr16 call cmpsl sub jle mov aam jg xchg and jae hlt ss xchg mov movsb call in dec stos clc arpl cmc mov mov fldl loope inc push mov adc fs or adc xchg cmp cs add pop mov dec loop (bad) mov imul push add jmp xchg iret fildl cmp hlt inc leave inc adc pxor dec and arpl lea sub and dec push lods push sub sub mov mov pop insl stos dec dec or mov pusha std ljmp mov xchg sti jmp inc mov int3 mov adc pop jbe mov or test sbb in sbb jne pop movsb testb je pop sbb daa jl in mov sub dec cwtl or (bad) insl lret add jp lods aad (bad) mov sbb pop push push mov xchg inc cmp jno mov mov int jno or lret test imulb das lret jp ds mov xor sbb mov jbe mov xchg lcall adc ret pop sahf jne adc jg sbb mov inc xor jp shlb bnd loop mov jmp cmp incb gs scas mov jno cld mov push xor popf push sub jle shl mov xchg pop lcall (bad) sti jbe push lahf lea or xchg jp inc xor xor jne,pn sbb pop cmp xor fiaddl pop xchg jge ja sbb pop shrd je jmp xor mov jo or std sbb cmp enter add cmp xor sbb fistpl mov popa sub popa jp or loop or pop push cli (bad) jecxz fsts jp sub scas cmp stc call leave into pop adc push pushf mov lret jo jp imul loope push sbb adc or xor mov out pop or test inc negb lods movb out ficom out jp and jbe jo adc add xlat in jle je cmp stos rcll repnz cld (bad) dec xchg xchg jae xchg and fstpt ds inc jbe push inc sbb jg dec sub ret cmp cmp stos nop inc inc pop push jbe out or dec dec stos cmp adc lret sub sub mov pop dec mov mov and cli push imul pop mov add jnp xchg cmpsl push pop mov out or dec push (bad) (bad) mov je repz add das xchg pop pop xor imul out cwtl inc dec stos and cmpsb pusha aas popf mov mov repz icebp (bad) stos daa add sbb nop cmp xchg push cli jl and push mov push cmp in dec mov movsb push jle mov inc ja xchg jbe inc leave mov je jnp mov sar ljmp les add add xchg call stos aas xor (bad) xchg mov lea jae adc or xchg (bad) mov push xchg jnp push jno fldt imul lahf dec inc ja imul cli (bad) push stos (bad) arpl sub aaa fistpl xchg inc dec repz pop xchg mov pop jp arpl push jne aad incl (bad) jp sbb sti mov ret push and inc push out test jns jp and adc xor xchg mov int3 jp test sub xor inc outsb insl lret movsl fdivrl push mov dec das sub das adc push sbb pop jp rcrb mov insb (bad) pop outsl js dec mov jp testb or ljmp add in pop adcb jp hlt rcr aas mov adc cli aas and jp and xor aad mov andb push ds es loope nop sti and es out push and pop pop rcll outsl mov imul cwtl sub lods stos jo mov mov push adc hlt xchg js add jns mov push pop or xor mov jp sub sub push cmp mov clc xorb iret dec jg xchg fdivrl inc loop xor mov inc adc int3 lods cmp out mov jp loopne loope mov mov mov jp mov xlat xchg pop daa lock adc popf hlt jp faddp scas sub jl and sbb add lock cmp sbb jae dec mov adc ja jno out addr16 inc mov cmpsl lods insl scas or dec sbb insb repz jl push or addr16 ss idivb cmpsl rcr mov and jle in dec mov jle jp sub test out aas dec shl sub adc and cmp and iret popa jp jecxz stc nop push ror jp sahf xchg jnp fdivrs aad repz bnd and jb mov popa gs cmp negb jge ss popa jp leave cmp lods je dec pop lahf push push jg mov mov dec jp xor addr16 inc test fildl push jnp jmp jp gs das idivl fisttpll mov push ljmp cmp push loopne aaa pop xorl ret mov sahf fild fnstcw mov insl dec xchg popf fwait pop cli push jmp enter shlb cli xchg adc cmc stos leave cwtl lcall mov cmp inc fstl (bad) mov in cmp hlt aam jmp mov ljmp sub jp outsl inc (bad) cmp lock movsb cmp aam in or sub mov test fs jle jnp add xchg pop clc std add jp out push mov fstpt pop (bad) sub lahf data16 not ret das loopne scas jp push jp ljmp jp rolb mul mov in std push xor notl pop fild mov (bad) jmp jp push lea mov lahf pop jle push cwtl dec adc inc test or xchg adc shr dec ss outsb in insl lds cmp insl nop movsl clc jnp aaa pop sbb add mulb loopne push jne add es xchg sub jg jle les push cltd sbb jnp clc cmp and jp mov mov mov loop add out inc (bad) and std jno mov lods movsb jne or dec jns mov (bad) fsubrs fstps adc push jb fwait adc lcall xchg lds (bad) jp sbb fistpll inc jne js out or jp xchg mov enter sub test outsl dec (bad) fdivrs dec push clc scas mov cmpl sub or add mov (bad) xor iret movsb or jne jmp clc shrb int3 (bad) mov fstpt movsl js testb aas stc jb pop xchg cli loopne pop clc mov jne fcoml xchg in add dec mov cmpsb xchg sub inc push or cld jb imul (bad) shll iret mov out fs sbb adc xor or inc jns fdiv jp sahf movl mov arpl (bad) std je inc cli insb (bad) in adc popf ja repnz mov xchg jp bt lret push repnz shl cmp lods movsl xchg mov cmp jmp dec imul add inc sbb aad push stos sub push cmpsl sub cvtps2pd out int fwait sub imul push fnstsw movsl dec jl push sti pop andb sbb fdivrs inc imul jb mov data16 xor xchg mov outsl jp add fcompl lods add cmp xor and imul push jp mov mov dec ficom inc (bad) cli jno (bad) loop mov in xchg mov pop loopne std add mov add rclb jp pusha out mov mov or mov xchg (bad) jnp lcall sub (bad) (bad) jne xor sbb aam jg pop sti mov push lock sub sbb push inc daa add sbb jmp ja mov loopne xchg test or jp adc arpl gs and mov push jp fmulp sbb and push fcos jp js in sub jp (bad) mov movsb sti aas fcmovnu sbb int and loope mov mov jp out jo push mov (bad) sub jp sub test push jecxz gs inc out pop js push add jae repnz test (bad) int3 mov sbb movsb cmpsb mov dec scas xchg pop jbe lret push push mov sarb inc mov (bad) das cmc imul and aaa jge fwait jo imul scas ret inc adc int and (bad) sub (bad) inc sub mov dec movsb mov sub fs stos call or insb movsb mov xchg mov loop lock stos jp insl addr16 pusha test mov mov adc push jne shrb or dec mov push clc dec or lcall mov fmull push jecxz mov loop pop push push mov dec hlt mov loope mov leave out fcmovnbe jle idivl jbe add leave mov mov push subb lea jmp sub cmp (bad) jne mov cmp push mov stos push stos xlat (bad) jns jmp cmp inc loope and xchg loopw push std push push sbb jb jmp cwtl sub and fdivs out ret stos pushf add sbb pop lcall sub cmp and add cli jle adc loope shr gs mov pop adc pusha lret jp xlat and lock jnp sbb dec push jp neg inc (bad) add push lahf xchg add sti sub push nop imul xorl mov mov add mov ja dec inc jg (bad) lahf inc repnz cmp shrl mov cli movsb pop aas mov pop in mov push jp stc or push (bad) jae xchg ficomp push fdivrs inc andb aas jmp movsb cld jp cltd jnp inc test popa sbb loope jbe pop inc mov add test jae sub jnp pop or xchg (bad) repz loopne stos jbe xchg lret push ss mull mov mov xor in insl push and stos jbe es mov sub push dec sbb in ja out lods lea mov repz push (bad) and push jae cli stos cmp cmpb mov lds or hlt iret pop outsl imul sbb leave and ds jp cmp jp lds sub mov pushl push imul cmp data16 jp mov sbb mov xor inc and jle loope xor mov sarb add cld lret (bad) sub mov pop jnp lcall aad dec pop add jmp mov lock dec push mov fwait push in cmp xor movsl push call jmp dec push mov or jnp cwtl (bad) sarb jns cmp jne scas (bad) repnz fbld xchg ljmp xchg ja lcall int3 and js icebp dec pop cmp stc and jp push xchg popf dec std mov mov mov or jne nop ds mov jp bound fdivs sbb int3 movsb std (bad) jo jp daa ret cmpsl mov fdivs out insb pop sahf daa cmp mov test stc mov loopne in and push jmp push aaa jp and decb adc jge sub orb push (bad) leave ja mov or cmp stc jp pop rorl dec mov mov clc (bad) mov xchg frstor shlb js rclb jnp mov cltd into inc mov xor push mov jno aad mov push fstps adc out ja jp sbb push imul pop jp fdiv cmp clc adc lcall outsb insl sbb mov pop adc xor cmpsb inc sub sbb (bad) ss aam jae mov xor movsl (bad) int3 adc mov scas fcoml mov jp push cmp ret andl push or mov sub mov bound fwait or cwtl xchg call sbb push jno or (bad) adc (bad) insl sbb xchg jp,pn mov pop jge lret in popa fsubs imul jne int in lds test fsts scas mov pushf aam dec xchg fs stc push repnz mov les inc xor (bad) jb sub hlt in pop js in cmpb mov fstpt out inc sti jp xor lea add and pextrw xchg jp or jle inc in cmp and sub jp and jp cwtl mov jo jmp pop ja adc pop jnp mov adc lret jmp sub mov in scas add jnp and push popa (bad) jmp pop jnp fistpl jp (bad) das sbb outsl sbb mov cmp mov mov adc jp jns out sub addr16 jnp and stc movsb inc daa jge add outsb out mov xchg jns jmp pop xor jbe pop test mov loope mov stos mov mov sub aas mov pusha out jae je pop pop fwait inc mov ds in jno nop mov (bad) pushf mov mov cmc out stc pop inc mov jle cli mov stos add pop or sbb in inc and mov add jmp sbb mov push dec mov add je pusha push leave loop divb scas jnp xchg clc test cmp test fcmovnbe push mov sbb jbe sbb pop inc gs imul jae dec lahf or daa mov pop add leave loopne pop cmc pop sbb sti stos testl movsb xor aad imul mov jmp xor pusha mov lahf add stos jns jbe cmp jno dec leave or inc iret dec jecxz (bad) popa dec lods in stos mov mov insl xchg movsb push ret push dec repnz mov dec mov movsb adc and cmp pop inc das mov sub adc in iret fdivr mov mov add rclb outsb stos fidivl bound nop pop clc (bad) stos mov pop jp add cmp out sub lods cmp mov fdivrs or (bad) jp fstpl cli jne jle,pn mov loope enter mull jb in jmp jp jno je push (bad) jne adc aam (bad) jmp gs jp movsb mov dec jp mov pop pop dec mov adc in jae jo mov dec insl lret inc cmp out cmp mov dec fcmovu jp add lods arpl sub lret sbb loop cli in iret or lods cs popa mov insb cmp pop jmp adc jp dec in lea xchg jp and xchg ret sbbl std test jnp jns jae and fisttp push call je jp imul mov dec inc inc in mov mov sahf add xchg sbb add insl push data16 push push popa jmp (bad) jo outsl mov insl and fisubr and pop ror mov and (bad) int fist push fadds xchg ja mov out and lods test ja in rorb lahf xorl jl xchg mov xor xor fsubrl jl jp pusha ss popa rclb add sub imul out lret movsl rolb out (bad) sub call cmpsl in jg fbstp adc jnp fistpl mov cmp jno nop jmp sbb push cmc fnop mov ret jno push sbb mov pusha push test and sti mov xchg pop sbb lahf jle xchg jno xor sahf out jb stos ss add fdivrl or shrl sub pushf icebp fmul outsb xor ja in pop stc aas mov popa popf jmp mov xchg dec inc pop test fcomps rcll jp ja or pop inc dec mov xor xor cmp addr16 stos (bad) jmp pop arpl and mov lret and lret jnp fmuls jmp jp fistp test jp gs add pushf pop mov xor js mov sbb xchg mov mov pop and sbb pop adc pop aas jbe mov cmp fcomps mov in or test cld inc hlt sbb ds pop out leave mov push xor jp popa in pop sti repz test sbb jp in push push inc lock cld (bad) jp aaa imul dec inc insb dec push jp sub cmpsb push stc dec sbb insl pop pop mov (bad) cwtl jo add xor jp jle xlat mov inc sub dec sbb and push (bad) sbb mov jp jle inc mov loopne jp lret call (bad) jne cmc cld stos into inc (bad) stos lcall push push pop daa sbb test les push push rcrb shlb mov stc mov test mov jp cmp ds sub or jp scas add lock test inc sarl dec cmp repnz movsb pop aad and test mov repnz ss push int sbb adc outsb cmp imul xor lahf test jnp js inc insb fistpl pop push shll decl nop lret ja adc xor aam mov push push movsb icebp cld clc lret out cmp (bad) scas dec dec jle jnp jl xchg popa mov (bad) ds rclb push iret mov mov andl call sub gs pop loopne push inc movsb out jmp (bad) in inc fs adc negb or ret movsb push insb and lods inc enter push and stos jne lret movsb imul sub fadds out push pop mov shrb inc adc lret xchg sahf mov jns rorb insb imull pop inc inc adc mov adcl bound test jbe jno jg imul xchg je stos jnp clc and inc sbb dec popa out iret xchg movsb sub and mov arpl pusha pop inc hlt mov add xlat pop scas xchg stos test imul inc mov or mov fwait cmpsl and cmp or movsb push and jp aam popa out in or cmp xlat insb lcall dec fwait inc (bad) jp xchg popf idivb dec xor int3 out fwait pop fildll scas lds push pop ficoml xchg jae xchg mov push xchg sbb add dec shrb daa add popa fiaddl jle mov cwtl dec dec cmp in pusha mov lods mov divl jo jp outsl xor (bad) ret daa imul mov mov add jp mov cmp push mov xlat mov out cli push ret mov call or ret dec test cld and xchg inc jno and lahf adc sub call ljmp cmp sbb xchg jmp inc jno mov subl jno inc mulb call and mov dec mov jp pushf cltd int3 cmpsl and cmp jnp mov (bad) pop jmp nop cld xor mov jae xchg sbb scas sbb test cmp sub addr16 dec mov movsl dec jb inc in es push js js js jne push test iret in pop je fwait sahf jb pop sahf cli inc pusha push mov inc inc pop push jmp cmp fnstcw pop aad ret pop test jae cmp mov jg mov mov pop push insl add out cmp mov (bad) jne in dec mov push insl insl cmp jp jl rcrb cld mov jmp cmp call mov jp push dec jg int push jp jae inc xor lds shrl or jnp scas jnp pop jp nop (bad) sbb pop fistl pop leave andl xchg data16 fimull sahf fwait insl dec and jl jnp cmp dec sub loop jae imul sbb cmp repnz out sbb int iret enter repz cwtl lret sub icebp ljmp into mov adc stos or mov sub cmp xchg or stos cmc xor (bad) xchg adc jne mov sbb stos scas pusha fs dec jne negl leave (bad) push test sbb adc or xlat (bad) insb cmpsb jmp cwtl das cmp pop data16 decl out jno mov add lds ror and test push repnz outsb sbb lea imul fildl pop jp mov lods stos lcall (bad) shlb push adc mov (bad) inc insl repz sbb mov stos adcl data16 or xchg sub pop inc or mov mov test or inc loop sub inc and dec jnp push daa adc push xchg inc sbb std jp xchg insb popa call mov das test adc (bad) push outsl lds jb (bad) fcmovnu pop stos dec xchg jp jle insl arpl or sbb das pop mov insl jmp frstor push jp fldt stc das mov cmp cmp hlt jecxz pop pop call jbe sub pop jp xor lcall pop scas mov aad enter ficompl cmp and ja cmp enter ficompl test out dec movsb inc sub push cwtl sub repnz popa cmpsb mov imul xchg mov xor jle aaa inc or clc imul mov push out insl dec lret add mov ja flds inc cmpsb stos imul xorl mov xchg aad bound lret fucomi imul cli mov ret sub (bad) jecxz fwait sti (bad) inc add das xchg in fisubl mov stos fidivrl sub ret out mov xor ret pop shlb std and cmp (bad) cwtl jp sbb sub jns adc std mov jl jne cmpsl shlb dec (bad) push aam add jp lahf stc mov push ret out js dec mov fstps jo mov add repnz xor jne divb lds add jnp hlt dec ljmp push loopne push pop pop push jecxz jp push and xchg jp aam fisubr pop mov mov xor push (bad) xchg jp adc iret movsb pop adc sub sbb sbb cmp pop cli fcoms sti mov sub cmpsl sbbl cs adc fs sub daa imul xchg insl mov push jne fist fldlg2 fwait fwait (bad) push jp loop xor adc xchg pop int inc ja dec add in and push dec add xchg (bad) test popf dec and mov cmpsl mov or loopne mov gs push test add and xchg mov (bad) lods jp ret cmp lea fcmovne pop mov jecxz movsl xlat jno inc addr16 cltd sbb and xor sub out and jp (bad) mov out jp cmp and (bad) sahf add imul rcrl sbb in mov int3 cwtl pop cmp aad pop mov jp les and mov or jns aad inc test jmp mov jp mov stos in rcll hlt adc dec jmp mov ljmp cli jb jnp mov gs js push jp mov daa add cmp xor dec cmp fidivl adc in imul cmp mov inc dec adc xor gs mov jp mov mov insb sub sbb es icebp mov idivl fcoml mov push loope stc nop cmp lods pop and cli cmp xchg mov bound and pop das pop jae or stos lods imul adc jl fs sti fimull jp pop pop sub dec sbb inc mov fcoml jae xchg push mov xorb fdivrl pop jp add mov stos aad add (bad) adc scas movsl mov and bound mov inc aad stos fsubrl inc nop sub mov push cmpsl mov and and lret push jns and lahf gs arpl push add bound or movsb sub mov arpl and push cld ja fisttpll les loopne pop movsb sbb jl fisub or jno mov insb out push gs mov dec rcrl fdivl repnz mov out (bad) mov loop movsb or test xchg sahf pop divl pop sub jae sbb push add outsb int3 in jmp push stos repz das lds jle xor xchg xchg mov (bad) pusha dec inc jl or les and int3 movsb nop xchg adc pop and cmp or stos mov xchg pop lock mov jnp es cmp sbb outsb push pop popf push pushf insl aam (bad) ficompl inc sbb stc mov or fwait popa call jnp xlat pushf cmc test mov push or cmp dec sub mov add cmp add push jp inc ja jg sub jp inc bnd dec jae mov dec fwait mov stos (bad) mov or add xchg je jp jne gs push out pop fstps int3 pop clc cli (bad) cmc jg cmpl out fistpl fldcw sbb call xlat jnp scas (bad) in stc push cmp cmp rorl imul add cmpsb mov cmpsl xor aam mov daa mov sbb movsb mov adc xchg mov adc movsb adc jp pusha addr16 aas hlt orl insl icebp mov jp jmp dec mov inc cli mov adc mov lret loopne jne int cld inc pushf lods jle inc in push jp cwtl push pop mov decl data16 sbb in push sarb xchg (bad) insl aas fistp jno repz cli pop (bad) jp call dec out jp mov arpl mov mov popa push cmp sbbb pop add cld mov dec imul fistpl dec jp das je lods or or jo mov mov sub or xor jne (bad) jl movsb and sti fsubrl pop jmp dec jp out test mov cmpsb inc xor sub xchg mov in adc pop mov cmp jmp fwait sub add imul inc lcall std jne jp icebp add aad rcrb mov add lods mov maxps cmp cmpl xchg push mov and mov lret xor pop cmp mov insl xchg mov enter pusha cmp jne call mov nop pop insb insb sub fistp dec push cli pop loop pusha xor sar arpl inc jge and orl cmp nop xor imul rcll test pop jne nop dec mov mov lds inc and int and icebp rorl repz aas ja sbb mov movsb sbb or cwtl xchg or cmp int3 inc lods jp rcr in (bad) adc rclb int mov popa xchg jp pop cmp jp movd inc xchg fwait and (bad) cwtl mov (bad) dec sbb cmp test xchg jnp xchg mov mov mov mov (bad) fisubl ret xchg (bad) jp jns into inc data16 jg inc daa inc test ja js cmp sbb or ja inc cli push dec test (bad) lea inc jae je push pop jb xor push dec insl cli outsl stc insb lds jp jl mov xchg sbb pushf jle and jp call sub push sbb lcall and fdivrs pop ficomp lfs jp jmp lds jmp sbb outsb or xor xchg (bad) insl lods mov sbb insl loop push pusha push jb jp loopne and insl inc add flds rorl lret xchg outsb jp repnz inc icebp lret sub ror mov mov mov ficom xor outsb inc jecxz int3 jp (bad) mov mov notb aad jp into cmp push jmp mul push jp imul cmpsl xor negl adc cwtl insl jge outsl cmp jp pop mov mov (bad) jp aas or xor sbb cmc outsb (bad) sbb jp in push and jp or mov jecxz popa sti call fnstcw mov jp cmp xlat jecxz mov dec sub push popf aaa mov outsb push idiv shlb stos push fwait xchg gs mov dec jne (bad) cmp stos movsb sub xchg and mov sbb (bad) xor data16 cli cmpsl pop roll stos ror add jnp movsb flds mov (bad) into push ja lds xorb imul adc gs (bad) xor popa outsb movsb dec jnp cmpsb xchg sub mov pop mov clc jg mov test push sbb (bad) xchg cli sub loop pop cmp sbbb rep cld out jae inc scas push push cmp mov insb (bad) xor fisttp stc sub mov fisubl jge sbb orl push or out test push pusha rcll test outsb push loope cmp gs sbb mov (bad) les jo leave das add mov or dec inc xor inc fnop cld fldt sbb popa pop xchg jnp lahf pop into movsb cmp pushf add mov dec daa add sbb pop xchg jbe push or jne aaa sub jg jge sbbl mov jae jae xchg adc leave nop jp test cmp cmpb mov sahf lds mov mov jp adc inc pop (bad) outsb xor out xor pop mov push or repz fs stos dec pop pop or mov push dec lcall leave push fnsave (bad) xchg call leave dec punpckhdq sbb cmpsb adc xchg xchg push clc je push mov sti or scas push ret xor (bad) mov push les (bad) movsb xor jne ja iret stos hlt inc pop cmp imul jmp lock pop xchg jge imul mov cmp imul dec (bad) xchg inc mov loopne shlb xor mov dec arpl bts push das add mov add daa lcall fcompl es in push in lds inc xor push in nop je outsb dec jns hlt or push jecxz and dec jp insb jnp repnz packssdw push push xchg mov out sbb mov mov pop fwait and (bad) jne inc mov pop dec cs loope jae in test xor sbb mov cli pop and popa sub push mov jp insl (bad) outsb je jl out cmpsb jp push fisttpll xchg sub lods mov les mov pusha add out cltd jmp dec (bad) loopne mov cli fs mov sbb push stc int imul inc sbb push push and out jp adc adc ja push lahf mov mov aas inc pushf xchg fidiv jle mov jp insb fs hlt shll mov pop jo push jb add mov xchg aas lds mov dec jmp mov push (bad) jg jp cld and sub inc inc ret mov (bad) cli fmull dec sub push xchg or mov scas addl ja nop (bad) aam (bad) int icebp add std mov cmpsb imul arpl cli out clc xchg int int pop ja stos lret (bad) mov sub add insb dec jl outsb lcall cmpsl xchg scas mov mov jle jp sbb (bad) out mov (bad) mov inc fwait mov sub pushf (bad) xchg sbb mov jnp cmpsl push adc or inc arpl dec arpl subb lods jne inc jp push sub and (bad) jne xchg pop mov and mov neg insl or xor loope mov lea and fldt imul lcall jp push in nop loope sahf cmp cmpl jmp out jp aam cmp out jp test sub gs sbb js sub test mov cmp xchg inc or (bad) mov or mov push xchg ja mov aaa sbb jne pop pop cltd lahf jo sbb jp xchg (bad) lea js jnp xor lods dec jg mov lock pop xlat leave dec pop xor jmp cli addr16 sbb xchg popa inc jg jno in lea lret pop fidivl iret mov pop jmp xchg sarb xor push jmp xchg repz and lcall fistp inc xchg jp push mov push js jne nop ja inc mov push bound pushf pop or xchg mov jnp jne je fs jp (bad) std loope leave dec in fwait test addl dec movsl ret sti fidivl mov jp bound (bad) push gs jp cmp push adc jp inc xchg and out jne push cmp pop scas mov clc jecxz jns xchg mov jbe loop jp gs call jo sbb jecxz divl cmp pusha jp lock (bad) int3 xor rep into jge pop out jb lock bound insl push (bad) insb dec outsb mov and bound mov nop test xor es test jl jo jp fistp mov jp push clc cmp mov push movl mov mov bound jp jnp cmp cmp xor jecxz outsb je dec cmpl fild inc in into leave xor adc sbb jp je jg imul ja fsubrl cli pop xchg cmp cmp jne cmp jo add lods (bad) repz push add jp pop ficoml push clc jp dec inc xor je jmp jp ds cmp imul sbb arpl sar fistpl ljmp imul xor rclb xlat pop sbb jl lock stc adc sbb sbbl pop push mov into sbb xor mov ret dec mov dec mov sub lcall sarl sar stos sbb xchg insl repz pop or add mov adc out pop push negl xor mov aas sbb mov mov test lret push and lock mov sbb xor aad iret add push xchg jmp (bad) (bad) jae push xchg jb sub sub stos mov lahf dec inc movsb or mov inc ja xor pop push mov jae stos test jnp mov pop mov xor inc aam les add push stos and add mov add mov xchg xchg js (bad) rcrb push pop nop add adc inc pop arpl stos or dec or and jbe movsb inc mov jns jne fs sbb mov or sahf sbb pop mov pop lcall and xchg jne andb fbstp pop sbb push orl jb mov sti lock cmc dec lea pop sbb stos iret inc cmpsl in mov sub loop add and shrb out (bad) jb je xor mov dec (bad) gs lcall mov sbb lds jp jbe xchg rorb gs test mov and mov jb xor xor jns cmp enter jp fldl dec jp adc or test jp dec sub test add je mov ljmp push test cmp mov std outsb jp ficoml dec fs cmp call cltd ficompl dec out mov cmp lods dec stc and jp adc lds add ret jnp lret xchg pop xchg xor into adc lcall scas out and jp jo push es xchg into xchg lcall mov std mov push fcomps mov mov inc cmp sbb sbb inc push loop inc mov mov inc xchg jecxz mov outsl test jmp push jp sub clc lcall call clc mov test cmpsb je je mov loope jb push sbb or xor and add sub or pop ret lock popa push stos jg insl out aas pop or (bad) sarb mov popf cmp ds and mov fwait jp mov pop loope mov sbb jl les (bad) js dec push imul imul lods jp sbb jp sbb mov andl (bad) mov or addr16 roll jp pop xchg stos mov mov dec testl sbb xor inc and pop cmpsb cwtl lahf cmpsl repnz push nop and mov push mov stos bound mov sub jae jp dec sub inc sbb insl int je adc jne aas adc mov sti push imul mov outsb jmp jnp lcall or rolb inc cld jne or test iret sub xchg sarb leave and stos lcall jnp movsb lea jp (bad) mov loope (bad) stos push add add stos into mov jle lret popa dec sub shlb sub ret fmull push mov add push add jp mov sbb ja xchg loop gs mov fnstsw cmpl pushf lods add xchg push jno aad push mov cli sbb dec jae jl lea mov xchg je cli jp sti cmpsb jecxz cmp or lds das xor jp add cltd xor pop rol cmp xor or push shll adc mov call mov adc xchg daa jp or pushf adc insb jp iret shlb jecxz es jp (bad) jg inc repnz arpl sbb int3 movsb daa mov dec je inc outsl jp xor das lock jne mov adc push dec mov jp sub mov jne xor imul lcall jp add xor (bad) out lahf xchg imull inc out mov inc or mov jp out out and jns fdivs add or mov shl xor lahf xchg xlat mov sub pop push jne fimull jg jg xchg lods jp inc pusha leave cmp shlb loopne sub cli out out or ja jl dec cmpsl sbb sub mov jp xor fwait mov pop adcl jp add cmpsl sarl ds mov adc stos mov fnsave std jp out mov lcall or jnp xor sbb ja pop cmp mov adc stc ljmp aad imul daa mov xchg and je imul push lret dec (bad) gs cmp cmpb shl and scas mov imul jle (bad) popa pop sbb jne xor fbstp imul sbb dec clc jnp ror imul cmc xor mov test jl adc jp bound (bad) sub js aad loope push gs (bad) (bad) bound adc jo xchg lahf ficoml lea jbe jnp hlt rcll lods xchg push push mov fsubrs lahf add cli popf (bad) sub mov xor mov sar or lock xchg sahf push daa repz lahf inc icebp addr16 (bad) mov int jmp add lahf jp mov add in mov inc outsl pop cli (bad) mov jno pushl lahf jp or cmc jle sub shll stos mov sub sub lea mov out push mov jae icebp mov or dec jne xor pop or pop stos and inc push and jnp scas (bad) push inc ja or mov stos and mov sbb jnp adc stos lcall jg idiv int rcl mov lea fsubr push clc jnp mov cmpb mov xchg mov mov mov sub add out push mov jne jno cltd mov movsb cmp repz add lret movsb inc mov inc lea (bad) cmpsb cmp js push mov add clc jbe out subb sub or mov enter iret lret cld ljmp and movsb loop xchg aam rcl mov add bound jle (bad) cmp shrb aaa inc push pusha iret movsb jp push adcl out xchg pop ja cmp jno push mov jp ja fsubl xchg ja cmp jl inc stc fwait aad jp out mov push push mov fildll xchg and int jbe or fstpt dec cmpsb arpl cwtl push mov (bad) nop xchg pop add inc and jne sbb pusha mov out mov pop xor cmp add gs add clc rclb pop insb in movb cmp aam xor lcall lods les pop pop jecxz mov hlt xor dec cwtl xchg jp add jo lret data16 jae sub mov pop jno nop xor push sub mov sti cwtl scas shrb stos sbbl jb aas fld test iret (bad) pop idivb iret rcl mov insl push jae popa sahf mov inc fs push test and data16 push pop jp call stos xchg and test arpl sub xlat push add cli mov push test cld es daa sbb pop stos sub roll js fildll icebp add dec gs daa mov fmulp jo cmp jns pop mov pushf xchg lock xor int cli rcrb cmpsb cmc leave mov dec imul jl push sahf xor cs iret imul out int jp jl lods test mov cmp push aaa in (bad) mov pop push mov ds pop jnp lds imul jnp sbb mov inc mov (bad) int (bad) in mov neg jg lcall je test nop popa push popf xchg jl mov mov jmp lahf aaa add loop mov mov sbb jle pop loopne inc sub aaa mov jl mov sub xor les sub rorl ja mov jb jb (bad) jno sbb and aas mov bound push mov (bad) leave stos mov inc jge rorl or mov mov cmpsb cmc push jo enter inc mov jne pop mov jns (bad) out out cmpsl ljmp js cli aad fcmove jg xchg stos addr16 sbb (bad) out mov movl sub movsb rorb stos sub mov add cli stos sarl and jp scas fistpl in leave shlb push or adc arpl mov jp call add jg jp test rolb and mov js daa and pop pop call xchg pushl push aaa xor xor int popa sahf adc ret pop mov inc out insl test adc jle inc jle xor mov mov xchg mov imul mov push or cli aaa xor jle sub sbb cltd aad arpl insl in (bad) nop loopne inc xchg sbb mov int3 sbb ret push jle xchg aam jp ja (bad) into imul adc cmp test dec and or lret (bad) push jmp and jmp jp mov add notl sbb sub js xor cwtl or (bad) cmp dec ret sbb xchg repz (bad) sub xor fcmovne movsb fldl sub daa imul in ds mov fsubs lret xor test xchg pop dec leave add rorb in jne jl sbb fnstsw dec mov and or push or and pop aad mov push inc mov out xchg mov stos xor je jle sti jns in inc push cmp lret mov push pop outsl lret mov imul movsb (bad) out jnp movsl and sbb (bad) lods lret inc jno mov test in mov addr16 cmp mov and push data16 mov sbb xchg std add pusha xor jg mov mov xchg sbb sub es lret dec inc outsl pop inc (bad) jbe cld inc cmp sbb jnp xchg push movsb jno push and nop mov imul xlat cmp insb cmp cmpsl int lods std xor (bad) gs sub or xchg mov dec (bad) dec cmp hlt jp (bad) pop inc in iret inc divb and sbb sub push stos xor mov incb push lret prefetcht2 divl outsb mov rorl inc xor jne popf adc repnz lret pop dec jae inc jns mov jnp jl ret xlat jo fisubl in mov es xchg sub xchg mov pop loop sub inc ficompl out adc adc dec gs outsl stos cmp cmp testb mov fmul (bad) inc out mov aad rorl mov and loop lea jle push jl sbb lret clc xor push fstps mov jecxz cmp or xchg bnd jo mov fcmovnu or jo enter or arpl pop ret mov adc pop mov int jbe lret stc pop leave jnp mov fwait adc movsb (bad) xchg push xor cmp popa jecxz ss in jp in imul aad jnp scas mov popf push inc xchg (bad) cmc jp stos mov pop inc aad jp enter cmp add call and mov sub jae sub scas jmp jbe push add or sbb data16 clc (bad) pop lahf pop inc jp adc add add mov push int3 sti insb pop cltd call fwait jo ss ljmp sahf mov pop cmpsl xor cmp les std jns inc insl dec jns mov inc jp (bad) dec stc push mov sub pop into pop in pop (bad) xchg mov pop dec cmp loopne out loop icebp mov jge gs xchg adc dec xlat push sbb (bad) hlt jp stc cmp mov popf mov jp cmp in xchg gs sub fiaddl cmp mov jecxz icebp jp xor fdivrs (bad) cmp push lret lods cmpsb jp pop idivb test fiaddl adc mov popf lcall stos test mov and xchg or pop push pop fwait add (bad) sti mov hlt ja cmp lea jp cli (bad) int mov ljmp push fstpl cmpsb cli and out jno out mov xor jp pop lock cli pusha shrb sbb push push or fisttp mov jnp cmp adc andb fcom std sbb pop jp xchg jmp stos add in xchg xchg sbb test movsb decl divl sahf js repz hlt mov leave jle daa add jge shlb mov add jp xor adc pushf pop (bad) je mov cmpb ficom jp inc and daa xchg popa jnp jo jne std push xchg cmpl inc cld hlt (bad) add jp dec outsl lahf leave insl adc cmp and push lret add jp negl mov repz push nop shll out ja sbb negl jp xchg sub xor fwait std sub and stc cmpsb push inc mov add test jbe andl cld sub outsb dec (bad) jp (bad) fnstenv xor xor xchg xor cmp and jp adc les jp jnp std repz imul sbb push sbb idivb fadds cmp or mov lahf fidivl popa pop push imul mov mov jns aam dec inc icebp leave mov movl dec in mov jp,pn push mov jns shll inc xor rorl pop cli adc inc pop in lcall jae add clc mov jp pop mov dec popa jo jbe leave jnp aaa inc scas add pop pop xchg cmp insl lcall test movsb scas cmc and mov imul sub mov js sahf sbb fldl dec xchg mov stos adc lods lret lcall push outsb cmpsb call movsb lea cmp pusha sti sbb outsl in hlt jb pop jae jge push mov aad pop mov adc pusha lret push std dec mov sbb loop xchg xor sub js das cmp fs or xchg push inc sub add pop push aad and pusha iret shlb jecxz adc jnp sahf sub jbe (bad) mov scas cli push and and leave ljmp mov sbb dec mov stos fbstp add shrl movsb fisttpl jne mov xchg jnp pusha push (bad) sti cmp mov lret pop inc repnz sbb push movsb lcall shll (bad) mov bound jns adc pop fisubrl mov pop lods (bad) pop pop hlt push jae add xchg xchg movsb add movsb sbb clc ljmp and inc (bad) insl xchg bound lock add sub sbb (bad) push (bad) cmc pop lods mov rep push add stos sahf mov or add pop cwtl sarl pushf bound inc pop scas mul or mov mov adc jb or push jae push mov cmp aam imul out cmpsl das sar cmp sub push mov or sbb (bad) push lcall cmpsb jns xchg fs pop arpl cmpb clc lods mov (bad) pop out gs data16 es push adcl out sub stc lods movsb jp (bad) stos scas shll iret pusha jnp push loope jmp mov adc enter movsb cmc andl jnp repz adc stos pop aas mov ret mov pop cmp into jne (bad) mov sbb push iret cmpsb dec mov push jne movsl das inc cmp sbb adc jb mov jae (bad) jae jnp dec sub pop aaa inc insb inc ja sahf jne xchg mov test jecxz dec lock stos popf or int pop (bad) jo js sbb xor mov imul or fdivrs js adc inc fcoml int3 jnp xchg mov jae (bad) sbb adc adc jp mov daa jb pop jns sub out mov xchg and fstpt push pushf push in je sbb xchg xor sqrtps add sub pop mov icebp or inc adc add jnp cmp insl imul dec cmp inc cmp add push or jl xchg lcall adcl stos cmp loope dec or push mov ss lahf out aad mov cmc mov out or jns shlb jp loopne adc mov shlb mov lea mov pop jne fstps lret inc ja sub mov jle xchg sbb imul pop add mov cwtl sarb sub inc loop xchg ljmp lock dec jne,pn mov push jne cld inc repnz cli js mov cltd sbb add or outsb push xchg adc jl sarl jne stc push out add (bad) mov setl in jno mov (bad) dec iret stos mov jmp (bad) mov repnz jg ret jp xor jp,pn and (bad) lret scas movsl mov and sub leave add jp int sbb jno mov mov cmpsb rorb inc and gs iret stc jnp pop xor jp cltd (bad) std inc jp mov and fcmovnu and jp lods lds scas les xor jmp mov xchg xchg xchg stc leave ljmp out jnp es gs sarl add jp lahf aam movsl ret jbe pop adc (bad) xor mov out in enter lahf mov jp jae das dec mov push cmp or ret jp insb push loopne dec and mov arpl (bad) fstpl xor in mov (bad) mulb sbb pop cmp jp stos and mov in test pop jmp fwait call gs or dec and inc repz call out push test lret jno out ret aad dec dec movsl cltd jp cmc xlat (bad) adc adc jb push jp lcall xchg rol or call cmpsb jp or (bad) lods je (bad) jns pop mov sti mov rol jl js mov or add dec scas jp loope popa into popf sbb sub dec fs out pop adc mov sbb insb pop mov jp ja xor push jnp push and add xor pop sahf cli xor jg adc add adc inc lock and sub in ret int3 jp xchg mov lret jp test nop rclb adc pop mov lds hlt test push lahf xchg ficoml dec mov jae adc (bad) push cmp ja push cmpl mov jp (bad) mov jo sbb push pop mov pop mov cmp push pop cmp (bad) cs les and xchg imul xchg loopne xchg lcall into jp arpl add rcll mov (bad) sbb das mov je sbb xor push iret test dec div cmp add push mov jb push xor stc enter cmp xor jne dec cld cmpsb mov mov leave jp in cmp cmp pop and ss ja stc fstpt (bad) out unpckhps hlt imul arpl push (bad) mov mov push mov xchg jae insl or cmpsb cmp jbe jnp cmpsl idiv jnp add lods mov sbb mov xor data16 mov cltd push (bad) (bad) lea sti leave fcomps (bad) mov cmp popa cld sbb ja es sbb mov popa insb (bad) stos mov sti aam fstpl jp mov xor mulb out shrl xorl fsubrs mov jne in inc (bad) hlt dec mov jp and dec inc add hlt jnp (bad) mov push loopne lods jp fstl sbb xchg loop daa xorl fwait cli xchg jno sti sbb push cmp jp lods mov mov push insl jp pop or jle ja jmp and mov inc jae sarb dec out enter sub xor pop dec js jl fnsave jp sbb hlt aas xchg and ret pop cmpsb daa in pop mov jp repz aas stc mov ja out shll adc fdivr scas mov push lcall xor jecxz xor repnz sbb and psubsw cmp repz addr16 jns jne jb dec jae cmp mov jge sbb cmp jbe insl ror fadds cli cli pop aam pop or arpl mov inc jp loope or scas das cmc mov and mov fidivr inc mov int jnp gs fistpl push out xor outsl push popa push insl mov adc add ljmp jb je cwtl mov fildl sbb movsb dec in dec sbb mov xchg roll lcall mov mov pop pop jl jp pop pop repnz jbe dec xor js lret cmp iret mov les jmp mov pusha movsb sub loope rcll clc fdivs push out bound xor clc inc outsl stos push push xchg jle jno pop pop cmp outsl bswap stos jo push sbb push cmp icebp add stc repnz data16 arpl xchg iret inc mov mov mov pop jae and aam sub arpl lock out xlat and in jp cli js out dec mov dec ficoml dec fisubl enter pop or xchg pop insb into xchg scas mov cmp pusha mov and je pop sbb es lds pop jp pop adc imul popa add pushf pop testb jp inc clc sbb dec jle pushl notl xor call test iret cld inc sub out dec popa stc pop inc xor testb cmp add jnp stos out dec mov lcall push pop sbb fidivrl insb inc pusha sarl jnp fs shlb xchg or call loopne xchg sub jle addr16 lret xchg pop mov sub sub loop insl inc dec arpl cwtl (bad) es test xchg sub inc jg fs mov lcall cwtl adc (bad) mov popa mov repz pop test movsb xchg inc jp stos inc mov mov insb add push sub stos push (bad) mov mov shll gs (bad) aas in cmpsb adc jp xor adc push mov dec mov xchg stos sbb xor (bad) xlat imul mov sub push call pop mov popa scas rolb (bad) stos idivl add sub stos decl sub sbb jge sbb cmp bound jno ljmp dec xchg das aad xor fs rorl shll add cltd add cmp dec gs jnp loop push adc repz xchg mov lock addr16 je stos lret adc push sbb sub outsl dec lods cltd iret pop fiadd xchg dec ficom lret mov sub stos adc fimull xchg adc fs (bad) lods push js je mov lret mov movl (bad) negb loope xchg loope mov stos in pop and lods push inc jne es call shl jp stos aam inc cltd xor adc dec add xor pop outsb out out stc stos adc stc pop ror sub int3 mov sub in adc (bad) adc cmpl mov adc dec mov or or fs cli add and mov push jnp insl (bad) ja mov mov jp sbb adc push stos pop jp xlat jae scas insl test cmpl mov and jp mov cmc push and jo lahf mov push and jne mov pop and sbb and add fwait test dec push in sbb cmp cmp pop loopne dec mov jp dec or mov mov inc jp jb sbb mov fdivrs jnp call test repnz mov sub jp aam test jp in call std push mov add xchg lods cmpsb frstpm(287 call sbb cmc (bad) mov dec jle jne xchg rcrb xor out (bad) fsts xlat cmp sub mov mov sub pop fwait in jp out lods and mov std ja jbe fsubrs or jns loop mov imul add add pushf repz sbb jp jecxz dec into movsb std cwtl jno cmc nop jns pop push inc jb lods pop adc cwtl (bad) xor mov or ret push lods cmp cmp or ficompl and js in stc or xchg jne adc push sub fs add jnp outsl addr16 rcrb jo es dec into xchg pop jp fwait lahf pop aam pop aaa jne adc and stc lcall mov jge jp jne sub lea jns push add insl jp hlt sbb mov sti cmp ret jae push stc popl adc gs out ljmp (bad) iret ficompl pop xor je sub sub lret mov jnp mov dec push lock sub push jp lret sub jp imul popf stc jecxz,pn jp sub jp and dec movsb push xchg add and cmp lea fstl pop aaa fstps shlb fcmovne in movsb fsincos xorl mov mov idivb (bad) cmpsl js push xchg repz aaa jmp jns shrl ja push push fwait leave push mov pop inc test push push jecxz ja pusha clc fiadd push and pop or stc outsb flds stos xlat cmp and sbb arpl pop jb cwtl push out (bad) mov cmp fistpll inc popf movsb lahf add add jb jno add (bad) push (bad) mov loopne sar negb mov sub leave cltd mov mov inc movsb cmp xchg test insl mov (bad) cmp stos mov adc imul cmp push stos cld pop je scas cwtl aad cmpsb hlt and (bad) in mov rcll xor pop jno movsb fbld je push pop stos jno dec mov shlb dec sub xchg adc movb shrb inc jl out in mov jo into out mov pop and loop test and ljmp fdivrs repz sub cmp mov or imul add aas lret pop dec jge jo cli rorb rolb loop bound ret ja fcoml or mov fwait lods xchg iret add fistp mov cmpb add jecxz jp test fisttp scas fidivl sub jecxz test sbb dec xor inc xchg xchg stos jno out jno insb cli inc mov lahf scas imul adc or mov jae or dec pop adc gs repz jne pop jo inc aas cmpsl jg lret insl mov inc sbb hlt push xlat mov dec cmc movsl imul fstpt sbb jnp push ljmp clc mov jnp xor lock push fs nop lea xchg mov stos (bad) ja cmpsb xchg mov push pop sub rcl cmp add fs icebp js (bad) imulb scas int adc cmpsb jno insb out sbb jle jl and and hlt arpl es setae adc sbb sub repz sub mov pop dec imulb xor sub xor int3 addl shlb mov mov jp mov lock jp adc cmp mov js in dec push push mov (bad) or addr16 scas out outsb dec pop in (bad) mov subl inc ja lods add mov cmp mov orl and adc popf cmp inc out int daa ficomp mov jp lea jp dec stc cmp das xor mov dec sti je mov (bad) jae stc jp mov (bad) sbb scas mov insl icebp dec aam mov hlt jne mov sahf mov jne (bad) (bad) xor fwait jle jle pop call xrelease adc push sbb jp in test out (bad) rclb fldenv jno xor enter addr16 repnz arpl push add sbb addr16 jp pop dec xchg cli icebp jecxz enter jb jp cmpsl rorl mov xor jno xor rclb mov or pop enter inc jae daa sbb dec or lcall popa inc mov sbb das arpl xchg cmp ret cld fiadd sbb mov les icebp fcomps repnz inc jne mov and jle repz cli inc loopne scas fs outsl lret decb jmp repz ja sub cmp dec into cmp repz mov testl xchg push scas jp inc fwait mov test jno mov not mov inc jno push jp hlt dec sti xchg (bad) shl jp into das dec mov daa pop push int hlt cli loopne lock pop jl ret push fs and out jp outsl stos jne pop scas lret jp mov ret movsl emms adc mov jbe cmc xchg lock push loope fidivl insl idivb ss mov loope (bad) adc lret and movsl test xor inc sti push lods push pop fsts js mov or leave mov jnp mov out popf insl aad enter loope or and out mov xchg pop push outsl pcmpgtw jle jno mov ss mov add sub pop dec out in rolb sahf mov sub stos push sbb out stc pop pushf shll addl add sti pop fist add iret jne sti push fucom test les jp and scas jp or lds sub cmp in mov cli jne sti imul cmp mov jl (bad) cmpsl jecxz (bad) jp daa push and imul jp pop outsl add cmp call loope push xlat ret add jne push inc push clc les cwtl rol jp ds push xchg sarb mov and movsb sub pop dec mov push cs (bad) jne jg (bad) adc jp sbb popa xchg sbb stos sarl pop pop nop dec inc push inc (bad) mov add mov jno pusha lret idivl (bad) ja cld lods orl std (bad) test and cmp jmp mov mov ret jle,pn mov sub xchg stos cltd jl lret inc lods jp cs std dec xor sbb pop xchg and lcall jp sbb mov loope and xchg fucomip cli pop repnz dec adc je sbb jne push pop mov sbb xchg jp pop adc out ss jne mov xor inc lret subl pushf jp dec pop test loopne sub (bad) mov mov jnp sarl loope lret pop jae rcrb in push ja out cli pop xchg xor ffreep insl mov mov bound (bad) and push inc jp mov dec mov adc xlat fistpl xchg jp jge pushf rcrl xor fst push lret lcall inc mov (bad) jp push shr inc es out pushf xchg push stos xlat sahf dec outsb jp lret pop push cs popf sub int3 jnp leave fistpl jp and (bad) mov sbb or movsl cmpsb (bad) fidivrl jmp scas bound inc insl push loopne sbb fnstsw push aad cmpsb jns jp cmp leave jne cltd dec sub stos pop std jle jp int3 xor mov jp hlt in inc add jae xor xchg daa cwtl lcall lcall jbe jmp or dec pop jmp dec pop (bad) mov test out jp sub lret out inc (bad) stos leave jnp sbb mov push sarb popa scas fldl push mov es cmp shrl (bad) jp add out xchg jecxz push lret (bad) mov imul sbb fdivs dec in repnz add jae mov sarb (bad) jmp dec cs cmp in (bad) jno stos inc fdivs xor insb jnp fwait je cmp jp jo add mov pusha out fildll jge movsl inc int sti dec or cmp xchg lds jne ljmp ja adc or pop iret movsb daa bound push lock xchg rolb mov push mov jg repz cmpsl adc in mov jne cmc push dec ljmp std cli and xor jg push dec sub jp mov adc sbb sti int3 les jbe xor sub push or jne push add stos test pop adc mov cmpsl jp mov sub icebp fnstenv xchg push jp iret xchg clc mov mov jns stos jle mov xor (bad) and outsl aaa sbb mov jp push lock cmp lods ficompl cmp in inc cmp jae push push adc pop call sahf outsb daa lea enter ret into sbb divb or mov ss inc sti test ret loopne (bad) insb test xor js or hlt lahf adc (bad) mov pop mov popa jae xchg add jnp fsubrl imul cmp dec xor add jne jnp pop or lods imul inc insb dec push jp fisttp cmpsl imul jnp lods add jg jnp addr16 fdivrs jae popf sbb mov sbb icebp push jns rclb mov sbb mov jp sub or jb (bad) out inc xchg dec cmp pusha popa jp aad add cmp sbb ja jp pushf push push cmp imul popf xlat fwait pop outsl ret lea jg xchg in js inc jmp fdivr mov mov and pop jno ljmp or and lahf fwait lods jp mov in stos jp lea xor scas cmp dec cmp or mov (bad) xor movsb or sub adc das insl jle jp cmc mov jo mov sbb loop sbb ret inc jne movsl es aaa xor daa dec mov jnp or imul xchg fnstenv mov mov sbb and jne das hlt repz js or xchg push sti push push lods jge jne sub jecxz fs adc ja jae xchg and cli aaa hlt ret lock or push sbb into shl lods (bad) lcall jb loop sarl dec inc sbb pusha nop cli inc gs mov push sti mov jp cmp fimul or push adc (bad) mov in lret xchg cmp xor cli cmp and enter jnp into add jno lahf and popa loopne cmc jle aas and pop push inc xlat jnp sti jl mov push cmpsb lcall lcall cwtl divl lcall fistl jle sbb (bad) ja mov mov dec pop dec mov jp aam pop call arpl aas mov mov adc clc add ucomiss mov pop pop js,pt sub (bad) mov sub lea xor fisttpl dec jne fisubl jbe dec ljmp ja pop sbb cli lods jmp adc xchg fnstenv dec cmpsl inc sub inc push iret pop inc jmp lret rcrl pop ds dec mov mov or repz jnp or jp inc xor jo pop dec mov stc lret ja fwait inc mov mov and std inc push popa cwtl jp imull jg push push icebp (bad) mov jl mov sub lods add ja mov js test aas jp sub cmpsl ret or mov movsb inc jmp lret cmp clc pop (bad) mov push jl dec loope int jecxz add stos cmpsb daa outsb (bad) insb sbb insl cmp pop and pop adc lret xchg adc bound pop (bad) xor lret pop push rorl push or xchg mov add jne fs cmc orl dec lea mov cmp mov inc int mov inc jne mov jg lods fidivl jp icebp leave mov mov cld lods adc mov scas (bad) sub dec fistpl pop stos push in int3 nop pusha sbb cmp mov movsb sub in lcall popa pop add dec test fistpll das jle sub sbb sub xchg (bad) xchg jbe xlat int xchg daa lahf enter lock jns or xchg in sub daa or insb mov sti pop lea cwtl pop js js jle iret aad nop fisttp lcall cmp outsl jbe mov inc add xor sub pop inc daa dec lret pop outsl movsb mov push mov sti scas in jne (bad) lods movsl and int mov pop xchg mov repnz lock cmpsb mov sbb divb pop pushf inc and fdivr fisubl mov mov push lds xor pushf jmp arpl out idiv mov adc scas xor sbb mov stc lods (bad) sarl aad sbb sahf ja repnz or inc xchg jo into stos insl mov jecxz sub mov xchg roll jae in and push add popa mov push jbe mov xor dec xchg pop pop insl push in xchg pop (bad) fbstp mov jg andb dec jl push pop sbb jb jp mov sub aad push test xchg jmp mov outsl (bad) out jp sub dec shll jp cmp mov inc mov (bad) cltd (bad) xchg jp hlt (bad) mov fst pop inc les push cmpsl gs lret sbb jae insl repz lahf add gs jae rolb xchg and cmp fimull jnp imul inc jp xor xlat mov (bad) fidiv (bad) jno sahf icebp mov or push dec popa jp fs dec jle xchg sarb fldenv cli fmuls pop insl push fs popa nop clc jnp sti cmp sub and jp cli stos repnz and adc shlb fcompl aaa loopne out mov cld icebp dec jnp push xchg jb enter sbb ss je popa jbe lock ja aaa mov jne push mov jp out add xlat cs frstor fcoms add popf dec sbb es jnp fiadd fsubr dec (bad) icebp cmp pop xchg or cs in mov xchg stc mov jp push test xchg xorl jp jbe mov dec imul repz xor mov sti ja adc xorl out add xchg les popl or xchg xchg je stos push pop test sarl mov stos mov test jl das (bad) mov je jae gs jmp das fwait incl pop sbb inc or cmp lcall call ljmp sbb xchg iret in sahf pop mov pop sbbl sti jno ss loopew (bad) loop inc (bad) mov (bad) icebp sti sbb inc dec cmp push mov adc push mov xor pop mull ss xchg dec mov (bad) xor cmp scas lock jae adc aaa cmp jbe aad mov cmp (bad) xor jmp dec jnp (bad) jp and leave adc sarl gs ja test insl daa push inc pop dec movsb or and pop mov push jp mov mov jmp jge into add add adc inc jmp out jp arpl pop addr16 cmc sbb pminub lret pop dec mov mov jp mov inc dec xor mov cmc cli jae sahf add gs faddp lret or pop cmp sbb js inc lds dec jnp negl les add push popa and int aad adc dec cmp mov cwtl movsb ljmp xchg fwait dec xor (bad) (bad) sbb jno leave loope add fucom stc jne xorb and stos sub sub ss loope mov data16 in jge adc push loopne jp jo daa jnp (bad) pusha jp es mov sbb jp sbb (bad) enter sub clc jp xor outsl in jne sub repz fwait mov jp adc mov pop dec mov mov and lret pop xor cmp (bad) lock int lahf repz (bad) ret jp lds xor inc xor pop sub outsl push (bad) les cmp arpl daa inc pop or jbe and loope leave jne jo clc fadds cmp ret movsb push in xor imul (bad) cmc or mov and cmp sbb (bad) cwtl (bad) (bad) jp and lea lods add jnp jns jp sub leave call mov mov sub (bad) out jp and dec scas add sbb inc imul push jp jge dec mov dec enter lret sub jg jecxz mov icebp stos mov jp cwtl jbe sbb fwait in jno add push dec jb push sbb dec push (bad) jbe or scas pusha movsb fisttpl xchg inc mov decb aaa movsl jp inc mov jle jp sub jmp push movsb jp and ret mov lret out pop leave stos lahf jp jge mov mov inc lahf sub popf cmp jp push xor mov bnd nop pusha imul lcall lods sbb in movsb inc and mov pop mov adc jae ficomp ret mov popf mov push jp jecxz shl push loop mov setl sub popa roll lahf lea mov mov sub sbb mov mov xchg push decb sbb ja jge sahf jne cld jbe push mov xor cmpsl clc test or call pop xor and aas das sub mov push and push into imul cmp jg loopne je (bad) mov cli insl ljmp mov insl jp into add mov jp iret fxam inc adc pop imul jnp int je mov in adc sbb mov outsl fild xor jnp in jne xor cmc (bad) mov cmp sahf lcall mov bound (bad) shrb movsl mov cmp and mov xor cmp rcrl jl sbb jle stos xchg aas add cmc mov mov jmp xchg sub outsb dec mov xor fwait adc lock iret arpl mov dec cmpsb adc (bad) insb add shrl cltd pop jnp aam sahf iret jp test adc adc add xor repnz xchg (bad) icebp insl jb push call inc das lret loope sub push addr16 mov and sub mov pop jp mov ret shrl xor hlt mov shlb sbb jnp adc pop imul aad inc jp ljmp xchg cmp jo and lods and popa lahf ss jp xor inc sub jp xchg xchg pop mov jmp ds pop (bad) xor lds dec cmpsb jno xchg les sbb inc cmpsl pop cwtl icebp in inc imul jne ss push sbb test aad mov mov push cmp dec pop aaa add mov mov dec in cmp lock sbb inc lods fisttpll (bad) add jp pushf dec hlt ss jae (bad) pop pop mov jp lock sub dec sub int3 cmpsl fwait pop mov shll jne insl push lret jmp jno xlat pop loop sub out jp lods inc insl out xchg cmpsl aam fdivp imul (bad) (bad) test sbb cli dec cmp out cmp mov inc push sti pop jns insb test shll cltd in mov dec pop push inc jnp iret ds loop shr inc and mov inc mov idivl push inc insb cmp clc jbe or jmp jnp dec push dec pop pop pop adc jbe movsb xchg popf mov mov add sbb lret fsubs cmpsb dec stc mov lock mov scas fimul mov mull jbe mov lods mov pop jg je pushf mov pop inc enter xlat push imul (bad) xor pop pop or xorb push sbb dec pop addr16 adc inc shrb push push sub cmpsl and imul out or clc add aad (bad) push sub test scas and jno stos adc pop xchg cmpsl mov jp lret scas mov jp jl in push fimul jp push sbb fidivrl arpl gs cli pop xchg loope jno jmp jp fildll out or or (bad) repnz jp cltd ja cmp mov pop push lods shld pop popf pop xor jnp fmuls (bad) fidivr (bad) fimul or pop cmpsl int3 iret iret jge lods push inc xacquire cs mov imul popa push cli pop inc sbb cs xor mov jp loop loope enter mov test push jnp and push cmp cmp test or mov inc sbb (bad) bound lock lcall or cmpsb push ljmp pop add imul in popa jge push nop je mov repz fmuls pop loope arpl in jmp and and push ja fidivrl icebp js sbb aas jle or or psllq lock sbb xorl ja mov outsl mov jno push jp mov inc insb inc rcll and jns (bad) out xchg in into test cli jp lea jp sub (bad) jno and fwait sbb pop xor cld ret hlt jp rsm inc or add pop cmp repz sbb imul lcall mov pop fs (bad) jp pop push xor (bad) mov dec and jp fmull lods xchg cmp jp insb addr16 mov fnop cmp scas (bad) fldt push rorb loopne mov leave arpl inc movsb adc (bad) jecxz or xchg (bad) mov mov jp jecxz or dec adc jp aad pop xchg fdivrl and mov add ja pushf xchg jl fucomp test sarl cmp into testb push mov arpl iret in mov add repz (bad) in jno mov lcall mov dec jecxz (bad) mov add adc pop out icebp dec sub arpl mov std test popf cltd jb cmpsl or pusha adc xchg and jnp lods test lret loop imul jp and cmp sub pop xchg mov ret shr jp xor push mov jae popf mov subb cmpsb and add pop jp pop mov call pop (bad) jae mov loope sahf popa pop call adc popa icebp and aam int pop sub push sbb push push test ret cld fwait sub outsl jp cmp sub lahf jmp push test (bad) ret fstpt jne cmp cmp mov push mov popa sub xorl pop xchg cmpsl icebp add out adc push ss xchg dec push cmp push mov adc lcall xchg call xorb add jp cs jb lods sbb insl out test ret lock pop out nop aas in pop repz xchg pop add cld jp js or pop ljmp pop sbb cwtl jg jp add xchg repz sbb or push cmp and push xlat gs jp or divb scas push daa adc aaa push jp mov out jp jno dec imul jp (bad) fcmovu mov mov xchg or mov xchg pop cs inc mov es inc mov dec push xchg mov cmp mov ficompl jno mov sti adc mov sbb lock call dec imul cmp xchg repnz pop push sub ja xor out leave push mov outsl jp scas int sub mov cli push jae push add push and jp mov fnstcw inc in and hlt jne lods daa sbb inc aad or pop fs xchg cmp xor push ret sbb je push cmp stc cmp (bad) cld jbe ret jnp pop stc or push sub mov loope lahf add cmp pop or lret adcl call mov or jno leave jp mov pop lcall adc mov je xchg addr16 or js (bad) addr16 or jge imul imul cmpsl daa loop repnz or xchg (bad) sbb sub xor loop and push push cmpsb in pop aad mov js mov sbbl jp push out mov sti (bad) jp jo push enter or js sbb jae mov loop flds add sub ret test inc repnz adc sub mov stos fisubr leave imul ja loop xchg mov es pop xchg out loope jb cmp out jp and push mov xor mov jp popf scas xor sbb sbb mov xchg sbb popa das cwtl sbbl lea je in aas xor mov cmp xchg dec push mov jp cmp xchg sbb and gs icebp add cmp shlb mov cli (bad) fnstcw mov data16 psubd dec loope jnp cmpsl aaa mov jb sbb pop jp or dec js cmpsb mov imul push lock pop push arpl add outsl jecxz or push imul ret lcall push shr and ret sbb inc sub mov arpl das adc mov (bad) in inc testl mov mov mov outsl mov lret fwait scas xchg xchg ja aam jmp pop aaa jge scas sub jnp ljmp imul ljmp iret jae je jle loope sub jecxz mov sahf jp mov cld cmp jae ljmp cmp int sub add js (bad) jns mov orl dec lods loop fildl aaa movsb hlt sub stos xor cli mov negl cli scas dec adc xchg xor mov jge ret loope xor stos arpl cmp lcall pop inc ds mov addr16 pop je movsb push or insl mov mov sub addr16 out sbb jmp (bad) push mov mov stos add popf leave scas cmp mov add (bad) xor xlat inc iret xchg lds sub dec ret and fnstenv aas dec adc xlat mov jl aam jp iret inc xor out fldenv aam sbb xchg cmp pop gs push cmpsl ja inc out mov xchg ja or ja js insl pop sbb cmp xchg adc jecxz lahf fcmove sub gs nop inc mov mov inc xor fs jp dec movsb std cmc int fstpt xchg sbb pop jno lret loope stos jb mov ljmp mov ret sbb rcrb sbb jp aad movl push sahf jp lods lds cmpsl adc sti ds stc pop and out nop inc jb (bad) jp (bad) cmp cmc add mov movsl int sbb lcall (bad) push lods (bad) lds xchg and les in jne insb pop insb cmp xor add jb and gs imul adc (bad) leave jp fcmovnbe frstor mov jno pop fisubrl test (bad) push mov (bad) cli repnz bound cmp mov mov pushf in outsl dec sbb fmuls pop fnstenv imul in xor add imul stos inc popf lea sub fpatan cld aas arpl push sar (bad) xor (bad) jae movsb push cmp push out mov pop addr16 or push xchg cli xchg daa clc aas sbb dec jp int std pop sub aas idivl push xor mov jp es mov xor fidivrl pushf sub arpl cld mov mov xchg jp jge adc dec das or push test fisubr and enter push mov imul or cmc and loop pop or dec scas or sbb jge xor mov mov ja jp xchg push ljmp mov (bad) movsl push pop stos sbb mov outsb call daa adc cmpsl xchg mov inc and inc cmp pop pop jp aam int3 imul insl dec dec xchg outsb mov sub sbb jbe dec imul pop insb je and idivl or scas inc popf ljmp mov insb jmp inc jae jge mov addr16 (bad) cld imul rcrl pop mov fnstcw add iret fs mov mov mov jp inc mov cld int3 and pop mov xchg ret lret xchg daa lcall enter mov mov add sub mov shr fs mov bnd pop movsb int dec enter fsubl mov jp pop inc jge jnp in dec movsb or and xor mov outsb adc movsl (bad) xchg jp fwait add jl dec dec movsb aad dec js cwtl jnp dec mov loope shll dec cmc das mov incb xchg mov shlb adc pop sbb out pushf andb push adc jle (bad) scas ja and rcrb sti sti pop inc negb (bad) adc pop sub mov aad inc xchg jae jno dec enter les inc sub or imul out test sub imul dec rcrb mov dec mov fs stos loopne xchg sbb mov pusha addl fistl enter arpl sahf add data16 loopne les cmp fsubrl add jmp pusha cmp lea sar addr16 xor test push insl mov decl fadds into inc inc iret sbb push inc shlb mov and ljmp sarb (bad) shl mov lods adc jno xlat fsubrs push dec (bad) je xchg ret jae out inc mov pop jp lods add (bad) mov (bad) xor pop clc aaa xchg jnp ret lret adc cmp out pop dec fcompl mov fistpll xor enter fcoml flds sti push xchg cmpsb stos lcall sbb cmp add call fidivl inc mov push add and cwtl add pop pop lea fnsave sbb ja imul movsb mov js jnp fnstcw pop pop pop icebp movsb dec lock cmp xor add mov mov mov jp (bad) out leave (bad) (bad) pop nop mov icebp fsubrl cmp ss das jb push fidivl jp rorl push inc out nop ja js hlt mov sbb pop fwait mov cmp add push inc or ficompl lcall cmp dec jp (bad) ud2 imul inc xor cmpsb std jp xchg xor fdivrl es addr16 mov jge out jp jge fcomps jp in test cmp lcall dec mov (bad) jbe mov mov push push js jle cmp push mov ja imul mov (bad) cli test sub scas mov jl add dec in fdivrs jp,pn pop cmp jne js pop stos fnstsw sub xchg jp shl sbb jp nop jae gs sub jp adc or ljmp inc cltd xchg sbb jp dec push pop jp loop repnz push loope cmp xor movsl sbb div inc cs mov aaa jp data16 daa out xchg sbb aad and shr ds imul sti stos cmp jp mov mov shll inc pop lahf movsb dec sub das xor loop or add mov stc pop add push and jp cmpsl movaps mov std lret jnp cmp aas jae fdivs in jp (bad) shrb sbb push cwtl jp jbe js (bad) jne and out imul jnp in jmp jae (bad) movsb cmp mov je out jae inc je pop into rclb (bad) sbb mov mov stos push out in sar push sbb inc test inc cli stos cmc in repnz pusha sbb jb push mov jne pop push inc jecxz popa stos out gs dec inc mov mov mov addr16 or movsl cld jmp sub leave push ja sti mov jnp (bad) jo and cwtl ja mov jae ficompl sbb dec or mov (bad) ficompl mov out xchg jnp je mov mov push sar inc mov cld xor arpl sub jp push cmc iret outsb test gs fcoml into push sub jns jecxz movsb call and sbb lcall test xor or jp xchg rclb xchg mov pop and jp push add into xorb mov loop inc mov lcall lret scas mov xchg push add jp popf xchg out cmp push mov push inc cli pop adc mov lock sbb dec and cmp dec in lods dec jge jp mov sbb jmp sub jb (bad) mov gs jns add rcr pop jno ret push add es sub cwtl ds mov (bad) pop pop jge jne (bad) sub fildll jb jbe ss sbb (bad) pushf negl jp rcrb into xor ja sbb mov mov jae cmc outsl adc shrl fstps mov lcall daa and repnz dec xchg arpl jne and (bad) jae mov cltd or sub push cwtl sub jns jp scas pop mov inc add mov add out (bad) in push (bad) lock repnz testl push jns mov mov push jne,pt xchg mov in stos jp jl out push leave sbb pop xchg jne mov pushl insl jecxz dec addb inc je pop pop jle aam arpl pop xor stos je inc add pop (bad) stos jbe sub faddl sub and push outsl ss data16 mov pop fsubrs fsubp (bad) fisttpl sti jecxz adc enter inc mov (bad) pop js or pop lods mov movsl mov cmc mov lcall mov xor jp stos scas pushf std xchg stos sub push (bad) or bound outsl adc roll sub lea stos push ja push sub pop inc pop inc sbb mov inc cli jmp adc xor movsb iret outsl jg pop cmp pop or popa add (bad) sub jmp fildll das scas loope clc loope les mov stos or dec stc cmp add sbb imul sbb mov jmp cli jp loop stos insb rclb mov jno (bad) fdiv sub imul cltd aam gs lret inc mov pop sbb in test or pop fisttpll stos mov mov cwtl das push jp lods ljmp int3 dec (bad) push je (bad) fcomps lcall pusha adc jnp xchg into cmp ret adc pop sbb sahf lcall in or ficompl add loopne mulb mov xor in ss imul outsl inc daa mov (bad) je divb inc push gs loopne inc mov sbb inc (bad) repz jmp mov and mov sahf jb jns push pusha stos dec inc out cmpsb sti test cmpb cltd sbb inc aad out and (bad) or je mov sbb (bad) insw pop mov and nop sub movsb pop scas sub dec jbe jno mov mov scas rclb clc je jg rcrl mov sub xchg sbb pop in xchg dec shl nop jnp sub or (bad) mov mov sub test pop jnp push ljmp dec daa mov jmp or push push jp into and insl sarl movsl or mov pop in pop inc lahf test xor pop out mov testl inc aaa dec fimull imul jp xlat stc pop and jmp adc iret mov jp fcompl cmp cmp jp popf sbb push inc cli aas ja mov (bad) (bad) jp gs or loope fistpll loop lock (bad) push ficompl test adc jg lods pop jns in push sbb mov jl iret mov enter pushf cwtl jae ret popf fisttp mov js loope mov fnstsw inc mov into notb adc sti push dec adc fadd inc pop inc fxch lock or sub add scas mov push cmp cli js mov mov loope leave mov lahf or jp loopne mov xchg daa jne and xchg sub lcall xor lock jp bound push pop push cmp mov repnz push in xchg test test sti es and and dec jecxz ss xchg enter mov in (bad) mov jp mov mov or ja xchg and mov test mov loop sahf cs insb mov xchg mov pop cmp cmp idivl (bad) out (bad) hlt inc mov mov ret jp jb add lret jp and ja movsl xchg sbb jmp cld loopne (bad) mull dec (bad) mov mov adc repz lret scas mov mov gs pusha inc push mov jle ss in loopne sub push jb mov sbb cli pop mov cmpl movsb arpl lds clc fiaddl cmp fsts aas pop je cmp xorl and sbb xchg adc imul loope shrb push fild arpl call outsb mov jp nop mov adc aam mov xchg jno xchg pop fstps pop cmp jp (bad) call or mov dec cmp std jp mull scas mov iret das push push in int adc in gs je jae gs and cld jp (bad) sub pop inc enter int3 scas gs sub jne pop add jns or sub (bad) iret inc insl add inc ficoml in jne fcomps adc outsl rolb cmp lock cmp jg loope cmp loop jno add aad in pop jmp (bad) sbb jo adc dec cli lock ljmp mov not push jno jmp test xchg pop mov mov (bad) dec inc mov jp adc sbb push and mov in lea push adc mov cmp jp cltd (bad) cmp mov in sbb dec sbb lret add jp,pn cmpsb (bad) jnp mov pop inc mov lock jp sbb les inc jbe bnd imul (bad) xor or mov xchg clc sub mov jno xor sbb insl xor xor add lea mov jae mov int jno ja jns outsl cltd pop jno in pop pop ret pop cli mov mov mov sub dec xchg lret ret fdivrs gs xlat popf push jp dec les mov xor movsb imul rcll ret jp fwait sub insl addr16 add lock (bad) cmc or and daa mov ss inc mov (bad) sti add push xor loop jo sub and jnp jp (bad) fnstenv sbb add repz insl ficompl mov test mov cs cmp xor inc aaa mov (bad) sti inc mov jecxz sbb mov icebp jnp cltd cmpsl int shll xor mov jnp lahf push lods xorl aas clc xchg sbb adc mov lock cmp test mov imul add pop mov jp cmp shlb sub lods hlt jp loop adc iret sub jbe add jb gs sbb push jo outsl adc mov (bad) cli jno sarb idivl in add inc add cwtl fidivrl xchg dec out jp and push in add inc mov rorb or sub push enter pop cmp mov insl cmpsl ja daa aas cld fcomps mov out mov xchg jmp xchg sbb sub gs in jle sarl repnz cmpsl adc pop fistpl dec and sahf mov xchg pop jbe cmpsl or sti (bad) jge (bad) sti dec inc stos sbb (bad) fisttpl sbb jg dec or stos jns jle stos lcall pop cmpsl cmp mov sti outsb mov cli adc mulb fwait xchg out sbbl fmuls rolb hlt inc push imul pushw jp inc sbb and xchg jp fucomip dec xor fstpt fidiv mov or test sbb sbb jg jno inc or jo xor cmp sub fdivrp into jbe mov pop mov or mov jp or mov bound popf das rorl insl ret mov call add in lods mov fistpll cmp inc ror shr ret sbb gs iret call push mov fbld jno loope out into repz mov xchg and in push ja imulb xchg (bad) jecxz bound adcl imulb cli sub push sbb jnp dec testl js mov lods mov jp xor sarb scas sar push jp or out mov mov mov push mov adc push loopne jbe pop pop jnp dec xor jp lods adc mulb cmp fnstcw fsubr ficompl ret inc test popf jge jae jp or jmp dec iret aad ret cmp ljmp (bad) pop inc push imul je add push sub add ljmp add icebp repz sub push cmp cmp fdivp pop cmp mov push or jge jg lods cli stos (bad) leave xor fsqrt int3 xor out sub in mov arpl jno sbb getsec test mov (bad) lcall inc mov cmp dec lret pop fldt inc jp xlat testb jns add call lods adc gs dec add test (bad) cmp mov hlt out out xor mov imul ret add dec aad lahf xor jl das inc sarl dec adc divl dec sbbb fidivl dec ret pop enter mov mov into cli out cmp sbb or sbb and jae lds fwait rcl cmp notb lret jp das mov pop std jp aam fbld xchg out (bad) mov insl and mov (bad) jo xchg jle mov sbb push imul inc xchg lock fnstcw xor pop sub dec sti or mov cmc push hlt push (bad) repnz into cmp jp push jne xchg push pop enter sarb iret push cli ss jmp pusha in stos jno xchg push inc jp sti cmp jp (bad) mov jp (bad) mov xchg mov lret insb pcmpeqd lock ret pop jp notb (bad) xchg sub jnp jae aad jne ss mov rcll jecxz sub xchg xchg jp add cmpsb push test inc cwtl lock push ja cli movsl dec mov jp in mov mov lahf jo mov and cmp sub jp push fild jne jnp pop jle mov repz push popa or iret cmc jne nop xor imul jne fmull inc hlt dec lret jno push cmpb add jp jne fidivrl getsec adc decb add jp movsb xchg xor arpl popf psllq mov pusha in jp rclb xor xchg cli cmp push mov in jle cmp inc jp mov cmc or cmpb dec or lret test mov (bad) les or cmpsb add sub sbb (bad) ja xchg pusha cmp and mov xor mov sti mov mov mov test mov cli mov fldt pop adc xchg push sti push jp ds sbb xor jp pop loop sbb xchg imul das push dec mov cmp add adc insl les pop and stos jp mov or testl rcll or fwait jnp aam sub out in hlt out pop (bad) mov pop fimul fsubrs in ret adc mov pop call icebp (bad) dec cmp sti aaa jno fisttpl sbb or pop jp cmpsb push inc and js imul add mov sti fistpll inc mov mov jp outsb mov in mov sub sbb fdiv lcall stos lods jae fstp xorl cmp sub enter mov repnz fidivr cvtps2pd fwait ret jp adc aam adc and xchg mov xchg repz test jne out sbb dec subl cmpsl xchg pop pop adc xchg into scas or xchg pop dec imul (bad) dec push lret pop fdivrp or (bad) dec aam add sbb test inc ja fist or cmpsb jp iret insl pop or sub or mov dec mov fs mov shlb icebp les mov sub div or ss es pop pop cmp add cmp jnp pop jno (bad) and sarl scas (bad) jp or dec pop (bad) push std pop movsl fstpt mov pop test mov lret or xor push jne adc jle leave dec enter bound jg lods sub test push ficompl and ljmp and stc repnz push jo lret mov subb jns mov dec sub or jb jp dec fldcw adc enter or sbb stc cli push mov pop in fnstenv mov jmp fidivr and lret jno fcmovnu mov in jl (bad) jae imul daa fdivrp rorl cmp mov gs clc cmpsb or outsb gs dec sbb cltd add adc adc into es sub xchg test xlat pop mov mov fdivrs loope push imul icebp jmp and insl inc test push jmp fisubr jo mov in pop ficomp testl jp mov (bad) repz inc popa jle cmp sti test ret daa jp xchg lret imul (bad) push mov add mov sbb js jp push mov pop in movsl jp mov push mov out mov lods jo sub xor test add sti pushf xchg sbb add jae sbb fucomip pop pop xor jo movsl mov aaa ficom insl test mov fistl add adc scas cvtdq2ps jp dec int3 mov xchg outsl (bad) stc xor jp ret scas divl dec subb hlt cmp insl pop ret jp jmp out push fcmovnbe test jnp movsl mov or loop ja inc pop insb (bad) cmp or xor xor jge dec jp mov adcb cmpsb add mov or mov fwait and and mov es sbb lret adc mov out mov pushf shl daa mov insl ret out push sbb sub (bad) dec fisub shrl clc popa jecxz or mov xchg xchg adc xor xchg xchg insl (bad) or jp dec mov lcall in and sbb xor ficom lods jp mov btr jp enter jecxz jae ror imul sub fidiv ficom mov jp iret or test (bad) (bad) dec pop xchg stos add jmp jnp psubsw jp (bad) jge sub test jp pop arpl xchg stos out adc adc xor jp mov cmp sub mov jmp out (bad) or stos xor jo xchg addr16 sbb je es arpl daa imul das sahf adc lea jge push divl cmpsl out sbb jae jae fist das je jnp std dec or pop add adc sbb insb shrb xor int3 test out hlt insl cmp in cld scas in inc orl leave loop lea jne xor cmc sbb sub btc cmc add mov inc test add jmp pushl popl pushf pushf pushl push pushl ret bswap lahf jmp sbb mov xor push push mov testl pop pusha out clc or and ljmp adc cli inc mov dec stc cli cmp adc pop xchg rclb mov loope adc arpl push sub xor mov insl pop mov jno xchg jo xchg pmullw mov out push divb (bad) mov pushf mov or and imul cmpb je cmp xchg mov (bad) aas push xor xchg jl dec rorb push in xor sbb sub sbb dec mov and aaa (bad) pop inc cmp lahf add stc pop loop pop out jno bound cmpb xchg add ror test stc call iret leave cmc jns aad or test imul nop ret jl mov or movsl stc movsl and fstpl mov ret les inc xor mov sbb icebp mov fmulp sub das (bad) add movsl (bad) cld or push cwtl jno outsb jo mov sbb shrl popf loop sbb stos dec jns and jecxz ljmp inc stc loope in cld dec mov xchg cmpsb iret ljmp dec call xor push in push arpl mov xchg fcomp add jle push repz jnp iret adc rcrb or outsb cmp cltd mov pop mov out test push adc mov (bad) idivl lods or faddl pop loop fistp ljmp pusha pusha lahf lock lea je cmp bt or pushf mov jmp mov mov lret cmp and inc push bswap push or cltd movb pop rolb fwait les std push push dec pop sub pop xchg or push xchg outsb hlt xcrypt-cbc cmpsl xlat mov cmpsl or push cld inc fimul out pop out dec mov mov movsl out pop outsl sbb jp into jne mov cmp jo stos popf es out ret pop lret je xchg sub insl insb xor mov push xchg xchg add rolb aad xchg jmp aaa pop and (bad) sbb pusha pop clc xchg sbb xor cs insb add pusha adc pushf movb push push lea jmp mov push sete setp inc not jmp add inc outsb jae insb jne push insb jbe jb popa arpl add lods pop cli inc push sub cmpsl fidivr in mov mov idivb xor dec adc into ret push scas loop adc pop lahf imul ret dec btc mov fwait and xor xchg pushf push mov jne iret (bad) jo pushf lock ss xchg (bad) sub popa test jne pop inc xchg inc add cmp popf push push dec jae outsl fildl dec xchg adc or shrl ds sbbb jecxz das fildl pop ret int3 js pusha sub jbe pusha add pushf bt mov xor pusha or mov stc cmc cmp mov lea jbe bts sub shr mov not movzbw stc btr add bts btr bsf test mov sbb add call dec inc push inc push dec xor cs insb add jmp call xor ret rorb jne gs nop fildl mov mov adc jecxz pop out subb sub mov std add ret pop jne dec xchg mov cmp xchg or xchg insl (bad) pusha pop adcb cmp xchg fincstp push (bad) and or xor pop mov jl mov lret (bad) mov outsl adc xchg xchg mov xchg lods aam mov adc jns (bad) inc ret jmp incb dec pop jno pop sahf icebp out icebp adc and adcb dec xchg mov inc cmpb inc enter in repnz (bad) pop es dec xchg movsb add add sti fbstp push dec scas pop idiv cmp andl dec std mov adc rcll insl jp sub aaa lret inc jp pop jmp (bad) iret repz out adc push sub ja out lret pop inc pusha jle adc ljmp fs push movsb dec out hlt or add and js popf (bad) dec popa ds das xchg sub imul scas out inc clc cmpsb (bad) loop pshufw jno pop push mov lcall test cld (bad) jl out fisubrl mov mov and pop add dec out into adc mov push jmp fsubs or outsb jno jg jle and out xor (bad) out mov lea mov aas (bad) lea mov xchg inc or xor lods xchg aam adc sbb rcrb popa fbld outsb mov pusha mov nop mov cmp mov fstps movsl push fs test lcall sarl add mov jne rorl dec loop lods scas rcl into hlt stos or ss movsl pusha jp call jno pop push adcl pusha pushl cwtl lea pushf movl movb movw mov pushf mov push pushl ret adc pusha lea jmp cmpsb (bad) faddl cmp fsubs mov mov xchg add pusha mov fild mov push add insl pop dec addr16 adcb pop push push enter inc cwtl adc stos push sbb sub frstor pop out repnz inc (bad) mov leave (bad) dec sub out cwtl out das xor pop dec hlt (bad) jnp xchg fcompl imul sub dec mov inc add loope mov imul les rcrl cmpsl mov push loopne push mov jnp push dec icebp lea pop inc clc cld or xor sti test push mov pop pop mov xchg movzwl pushl lea movsbw pushl mov mov jmp or ja cwtl scas mov fcoms sub pop inc cmp xor cmc cmp clc (bad) stc cmpsb and mov outsb adc dec ljmp inc jbe or fmull jmp arpl jge mov or jecxz je push dec jo or pop loope stos (bad) and imul ficom sbb cmp fldenv pop js dec rcll enter xor inc sub imull test adc jmp jns stos int3 xchg out fmuls cli lds xlat jo and lock int fnstsw xor outsl mov aas pop push inc lcall pop jecxz ror mov mov sub adc decb aas jl stos (bad) mov shr dec and (bad) push icebp ja in (bad) sbb ss xchg mov mov add jmp dec (bad) lcall (bad) jg adc inc js mov addr16 lahf ror cmp mov jno pop test bt mov jmp bswap mov setnp mov bswap movsbw pop not pop not mov pop call pushf call mov cmp test mov pushf test pushf mov pushf lea je cmp stc bt add clc cmp pusha cmc cmp pushf lea jb cmc jmp jmp cmp pushf call shr ror rcr mov test test cmp cmc shl call pushf lea movzwl pushf bswap lea jmp pushf push push mov lea pop pusha push pushl ret add dec gs outsl arpl inc jb jne inc fs gs bound jae repnz pushf call push shrd aam sub mov call ja call call cmp xchg pusha ror btc mov stc call test call cli push sub xor pusha mov ljmp enter add je fs xor fidivl dec jb cmp mov mov jne mov dec add (bad) (bad) jo mov out into xor xchg notl mov or sbb xor inc sub cmp arpl outsl fldl2e (bad) mov xchg mov jg xchg enter jbe jo pop fisttpl movsb inc jge incb inc outsl (bad) loopne xlat enter rep rep imulb (bad) gs (bad) jl and pop or movsl cmp lahf sub cmpsl mov fsub sub push in mov add and call pushf call mov scas pop xchg into and lods xchg movb mov push insl sbbl and jg jne rolb (bad) lods or mov sub outsl pop stos pop cmpsl jg dec rcl or and dec nop in jl mov xor xchg inc mov aam sub cmp pusha add test push cmp ror daa fisubr leave aad cmp push dec push mov in xchg in pop inc mov inc les mov cs loopne push lret xor pop aaa mov push xchg inc pop jno push movsl ljmp fs jb cmp cmp jmp scas or mov fildll add sub in mov div sub push inc pop inc ds aas push outsl push xchg and or sub cli pusha mov sub jecxz xchg jnp cli dec sbb insb test xor ja mov pop outsl adc loopne mov and int3 fcomps shll clc sub fcomps (bad) mull jge push mov jo add cwtl es pop jecxz push mov fbstp stc xor pop scas pusha icebp in add mov cmp (bad) (bad) sbb repnz pop inc mov (bad) mov aad pop sub sar pop cmp mov jmp add lret (bad) jne mov or shlb (bad) rcrl jge mov mov mov fisttpl cmpsl sbb sbb push pop bound dec pusha ret (bad) sub pop ret jg outsb imul mov xor in xchg and xchg icebp aad pop mov aad addb mov sbb mul sti (bad) shl mov arpl mov push shrb fistpll movsb in loop xor dec popa rcrb jl rcl testb mov mov popa inc pop xlat pop and mov push xchg dec mov mov in and inc (bad) fdivr sti sbb addr16 add pop cltd (bad) fcomip lock pusha jno into loop push scas mov inc push popl mov (bad) dec daa pop loopne insl xor cmp mov xor out (bad) xchg dec and scas cmpsb mov jl mov pushf pop gs cmp dec xchg rol sbb sbb repz sub cmc add dec mov pop ss out stos cwtl push xchg pop call decb leave test in sub push cwtl cmp imul test add cmpsl clc sbb js addr16 adc in repnz or cmc test ss je xchg int3 cmpsb cmp adc push daa mov dec lock aam lock lock or cmp fisttpl aam sahf lcall imul xchg insl mov mov xchg mov jno push pop jo xchg add pop adc add add mov add add aam add add add add add sbb add add (bad) repz add add or add sub sbb add add lea add jl and add add jb sbb add sbb add add bound add pop mov add add rclb add add repz add add add sbb add add mov sbb xchg mov sbb jb sbb add add add cmpsb xor adc push clc xor lret fs daa stos mov test stc xor pop add sbb adc (bad) in lock out test or xchg les mov data16 push shrl cli cmp mov mov out or sub push pop sub inc inc test stos lea cmp or xchg or movsb pop push jp push jl icebp nop inc and call cmc jo pop (bad) mov outsl lods insb stos jno sbb and es or pop ret stos xchg addr16 and push mov pusha mov mov mov out clc or scas pusha lcall mov sbb mov sbb rep pop test cs push sub sub (bad) sub jns xchg xchg in lds add cmp ss (bad) mov or or call cmp xchg lods mov (bad) out jg gs shll mov out int push push xor push sarb pushf add jg cmpsb sbb push jno and mov test inc sub mov lods loop,pn shll test pop lret mov mov and mov or adc dec fdivs (bad) scas cmp mov ljmp and ss (bad) scas insl cmpsl cmc push mov lea test sti pop pop mov (bad) sbb dec out mov shlb cmpsb adc notb adc lock xchg stc adcb mov push mov mov add ror pop inc ljmp scas sub (bad) gs mov sbb or xor shr outsl out mov ret decb pop aad movsl fnstenv cwtl popf inc mov pusha fucom sbb imul outsl cmp hlt scas je and stc js je lock mov jmp jg in xchg pop sbb pop adcb add lahf popa jne inc jb push test cli stos pop mov lea inc mov mov jmp push pop pop or cwtl inc xchg outsl mov mov push lahf (bad) sub popa sbb ffree mov adc xchg push adc hlt fstpt cmp aad sbb iret cwtl dec popa cmp adc fdivr scas cmp xchg push pusha test sub test mov adc push mov push adcl xor push push mov sbb inc xor aam stos cmp pop imul mov mov sbb leave sti dec sub (bad) icebp leave clc (bad) jg ja in sarb cmp clc js stos inc clc xchg sahf xchg push fdiv cld xchg xchg inc xor jb fbld jns dec jo push (bad) add mov out ljmp mov sarl pop dec inc pusha mov lcall push sub or pop add inc (bad) out stos je pop pop inc out scas push (bad) or test ss dec mov cmp inc pusha pop imul pop cmp lods sbb std xchg ret repnz or aaa inc xor xchg jle add ljmp loope pop inc inc rcrl mov out mov cltd fs gs sbb test adc inc add jae insb mov out dec mov je pop or pop lcall dec aas ja sub xchg sub pop mov add das mov adc out jle mov pop sbb fcmovbe es adc not test popa in in pop xchg adc icebp popf imul push cwtl inc push in gs dec xchg fidivl jp rcrl movsl mov and pop cs add cmp ljmp xor and ljmp loope je cmc leave push add lds cmp sahf inc (bad) fs pop daa cmpsb fidivl test cs xor (bad) mov lods push sarb decb push cld inc popw outsl inc xlat add pop imul push test rcll test cmp sub xchg call jne leave lods (bad) icebp mov and pop aad mov imul icebp adc ficoml lret mov pop xchg lea adc mov outsl cmp sbb cmp xchg (bad) aad xor and inc xor int ja pushf sahf jbe loopne scas xchg sbb test insl orb adc imul and lea mov std cltd jg dec (bad) or mov add fiaddl ljmp repz dec xchg enter and enter arpl dec cmp xor lea imul daa inc cmp aaa mov lods loope sub mov pop mov arpl sar mov std cmp jl dec xlat dec xlat aad icebp jne or mov cmp xlat pusha bound push jmp ds inc ret fsts cmp dec xchg outsb jle jmp ret and ficomp (bad) (bad) sub lock shld mov (bad) pop mov mov insl int3 mov sbb pushf aad scas cmp add test test flds pushf (bad) in push imul sub mov push pop dec in lea pop ret cltd (bad) and pop and mov cmpsb pushf mov in cwtl outsl popf cmp sarb mov jno cmp pop and sub int3 mov aas int3 xlat dec or sub fldcw pop inc jo jnp ret pop cwtl xor enter popf add push test out pop mov sbb pop shrl rolb aas pop pop pop jne iret pop insb xchg mov push ds or jp sbb pusha push gs das movsb and test pop rcr sbb cltd out arpl icebp nop push pusha in xchg mulb repnz or mov xor inc (bad) movsl daa pop xbegin sbb icebp mov jb cltd adc (bad) and pushf ljmp clc pop loopne and inc in lret pop xchg mov nop inc mov daa push add xchg jp xchg aaa imul pop mov and pop movsb cmp sahf lret push cmp adc test adc inc (bad) lds push push jmp xor nop mov push js mov pop xchg fadd aam inc xchg xchg or xlat sub mov xchg push xchg dec jg sbb add lock and movsb loopne stos test fidivr mov and push mov ret mov cmpsl sbb popa and testb xlat fisttp xchg push mov dec push xchg mov mov xchg fcoml inc ljmp js das xchg push sbb test mov imul sbb (bad) cmp sub std pusha int3 sahf ret enter mov arpl cmp pop mov pop push xor push dec enter sbb adc and xlat into and add outsl stos test notl mov xchg sbb xor xor mov enter jae sub push call js add sub sub cmc jnp lea lock mov repz xchg (bad) xlat xchg inc jge lds gs cmp inc inc sti jg sbb or test in jg mov fmuls and rcll fstl add mov shr cwtl sti adc sbb jge add loopne arpl add push or cld fdiv icebp cwtl test lea and xor call inc das (bad) addr16 push fdivrs pop jge xor sub (bad) lods mov pop sub push aam cmp or mov xchg fimull push mov rcpps jae lahf push mull mov or or sub jmp in xor and out pushl and push push ror int push or cltd xchg movsl subl in lahf adc stos test lds lcall sub mov dec test enter inc pop jp and add call push in push xor (bad) or jg outsb bound insb lahf push add push jmp and arpl aas xchg push fistl scas addr16 (bad) mov mov adc xor pop (bad) push cmp add rcl mov pop pushf mov cmp fldt lcall push add lock adc sub dec jae hlt nop push push sbb cmpsl jmp xchg and mov lret das test xor sub mov fsub in imul push mov jg (bad) sbbl jge and dec nop out or and lret push sub cmp ret push jnp movsw dec mov pop lea inc hlt iret inc pop cs push stos pop mov xchg ret or ret fisttp mov sbb jl inc (bad) sub mov lret push or dec push and arpl jo cwtl lds xchg repnz cld cmp lret xchg adc sahf repnz (bad) aad in shrl mov lods dec cli cmp pop repnz mov add mov mov insl aaa inc sbb jp inc xor jecxz and inc popf call pop (bad) cmpsl outsb xchg aad push js ficompl mov jle aad mov sub ds ror gs push inc mov or dec (bad) fiaddl cmpsb cmc mov int3 pop push adc dec sbb inc and jecxz sub mov mov test addr16 outsl xor scas mov xchg dec or push enter out cs fs inc dec jns into loop mov push ret aad movsb push (bad) jmp ja das fisubl sub mov data16 mov jecxz push push mov insl xchg inc test aaa sub pushl push sbb popa test negb pop je (bad) xlat pop mov out dec push shl pop aaa iret fisubr call xor popa (bad) mov cwtl sbbb daa cmp push jb lods xor nop lcall shrb push xchg mov sub mov jl or and sahf lock dec sar inc push mov inc dec mov or sub cmp int data16 xor loopne add cmp enter lock (bad) xchg pusha enter push cmp dec into jnp movsb sbb js mov pop pop xchg lahf jnp lock pop jne test push push arpl in cli incl fisttpl daa cs adc sbb pop sbb and xchg je movl adc cmpsl das xor cmp mov cld push int pop imull dec xor dec push adc rcrl xchg lret push stos sarb cs mov popf jb inc arpl data16 adc sbb xlat insl imul sub pop loope mov mov and dec mov (bad) adc scas push push andl cwtl xorb jb inc xchg xor add insl out pusha cmp out mov pop xchg jb icebp and fs ret xchg xchg mov push test xchg and (bad) arpl fwait push jmp jbe jo hlt insl mov jo outsb or out and mov mov loop leave sub lock sahf fsubrs xor aas gs mov lret push mov dec xor pop and and inc icebp mov mov xchg fsubrp repz push xchg sti push xor out push stc test fpatan in mov adc out aaa cltd (bad) into sbb cmp jmp addr16 sbbb (bad) cmp test ret and xchg xchg imul pushf mov sbb mov xor lcall outsl pop dec int adc sbb int je pushf movl mov lea jmp push lea jne pusha jmp push push inc push inc dec push cs insb add add lcall pushf call movl movzbw lea pusha pusha movl push mov pushl popl pushf pushf pushl ret clc pushf clc or call jbe xorb push sub repz data16 leave in adc inc icebp dec lds leave adc fldenv inc jge xor std push into push push pop int3 lea scas add pusha inc fist divb test sub shrb movsb out mov ss aad out push dec push out sub rorb icebp push adc and lock arpl loop jle add add movsb mov cmove fild adc push and or push mov jp test xor pop mov and cmpsl dec mov pusha xor fnstsw mov or outsb xor nop iret (bad) sbb ret cmp pusha adc in or (bad) or inc jp mov cmp dec xor or add push mov lods pop test subb inc push pop inc fistpl dec pop mov pop loop pop jo ror rorb aaa cmp imul inc sbb out leave aas pop xor push fwait lods mov mov dec add mov int3 and arpl dec ljmp cmpsb sbb das hlt insb inc mov cmpsl popa std sub xchg dec mov in xchg lds sbb out mov aas and cmc mov ret sbb xchg xchg or mov bnd xor test xchg setne pushl popl lea pop movzbw mov jmp dec outsl push loop xchg jo sub clc (bad) and xor fisubl mov ret push fcompl add cwtl dec jno cmp stos sbb ret fsubr cmp cmpsb pop jo pushf mov out jge adc sbb mov outsb inc inc sbb movsl sahf hlt stos add lret outsb mov mov mov incb fistp or stos and sarb js mov rcll enter mov pop js mov (bad) pop jno xor xchg xchg lods pushf mov movl jmp outsb jb rcrl lods lcall cmpsl cwtl fldenv imul push add inc push sub out int loope xor jmp ljmp xchg inc mov (bad) popf xchg lea (bad) pop lock pop add adc cmp xchg sub pop test sub in dec xor push stos pop mov ja xor test mov cmp (bad) aaa test test rcll pusha xor xchg int3 push jmp pushf call push call movb lea je stc cmp call jmp lea jmp sub push mov xchg fs fldl lods pop out xchg jle dec (bad) icebp int test mov mov mov in or jmp lods lods dec mov fsubr add lcall cld add ret jo push cmp hlt mov xchg sub lds jmp xor dec sti pop hlt xchg cmpsb push aas adcl adc or jne jbe fwait jp xchg (bad) pop mov in das adc mov in stc (bad) fcmovnb (bad) jmp aas xchg (bad) mov das push and pushf test jmp ret (bad) leave sbb mov pop sbb stos (bad) and xor out xor (bad) scas int jp push das std dec dec pop or js xchg hlt sbb sub cmp adc adc cmp test movsb mov sahf xchg cmc xchg repnz je fldt dec invd cs dec pop xchg cmpsl jle mov xlat cmpsb nop (bad) aam aas add xlat fcoml push sahf es push mov stos jl add sbbl add xor inc clc xchg sahf mov inc pop mov into rcll pushf jmp test cmp bt or pushf pusha pushf lea je mov mov call popa enter sub and pop (bad) sti cwtl scas cltd bound loopne push in (bad) ja inc push jbe std jbe ja xchg ljmp sti out nop loopnew pop xchg sub pop bound fsub stos aad fnstenv mov dec rclb enter or sub popa jb jb push xor fadd or lods xchg lahf aam jnp inc pop gs sti add sub (bad) adc pop outsl (bad) mov push pop lahf mov (bad) add daa ja ja push xchg jo fisubr ja mov scas lock xor push mov xchg lds dec sub dec pop jno sub popa out (bad) jnp inc xlat call inc int3 jl jl test xor gs out mov adc stos (bad) shlb scas adc sub inc ret and ficompl push push jle push mov nop aam jne sbb cmp inc push push pop add roll dec in shl sbb les mov hlt das cltd pop testl xchg sbb fistp sar ds xchg pop rorl movswl mov imul or mov xor dec sahf cmpsb add popa out cli mov outsl or jmp push out and sub cmp dec (bad) jecxz pop mov lcall jle std ds lcall flds scas das andl cld jecxz flds xchg out cmc jbe (bad) jge bound cmova xchg jle push hlt fidivl mov mov lea push mov inc fbstp mov mov insb fsubs (bad) xlat in push dec or das mov xchg jmp mov sub sbb push or and pusha pushf push pushl ret push dec inc dec dec xor cs insb add (bad) fcomip sbbl sbb in inc clc repz addb lods lcall cltd fiadd scas dec xchg (bad) push xchg dec sbb mov push (bad) into adc and xor xchg mov push and cltd nop add movsb arpl jl (bad) popa jb mov das iret xor rcrl mov mov or pop sbb adc mov jp xchg mov stos jmp and mov (bad) jo xor out mov fs lret jo jae scas insl repnz xor inc push insb cltd movsl insb mov mov sub mov sub out iret mov dec faddl xchg lods rcrl or jns jl lret aam (bad) aas cmpsl daa pop repnz aas stos int3 test jle sub pop sub dec decb pop sub scas mov fs sbb cmpsl dec xor pusha mov data16 push outsb addl cmpsl ja lahf bound test ret sbb sti mov sbb into paddusw lahf inc mov xchg or xchg (bad) push movsb test or and (bad) mov sub rorb inc test cmp xor insb jno sub push stos add push or jmp int3 jl test cwtl fwait les add cld mov dec icebp add lret faddl fiadd sub fildll stos dec adc outsl add outsl mov fcomps mov or rclb nop cs test dec aaa rcrl cli vsubss sbbb lahf lahf repz pop fdivs mov mov push sub push jge inc bt adcl rcrb push add push out add dec sbb (bad) out dec mov lock sub (bad) sbb std pop add pop sbb mov jno sub pop jo cmc test call movl pushf pushf pushf lea jmp mov jns xchg sub or jl sbb lcall call cli in xchg jl jle ja sub xor dec push sahf mov or es xchg jmp pop lods sub fcoml jae or lock pop sub push pop jb mov add and pop pushf inc cwtl sbb idivl jl les and jbe sub ficoml out lock fsub and jecxz loope mov (bad) repnz decb jno sub mov scas call jmp jmp push pushl pusha lea jb bt cmp pusha pushf jmp mov not call lea je call shlb int rorb mov pushf jb lret xchg sahf mov xor cmp loope adc sbb out js js jae pop and in jne adc mov cmpb bound mov popa out or insb cmp jnp int rorb fs sbb pop cmp pop push sub and std (bad) pushf inc mov int3 xchg lcall and adc push add (bad) adc int3 imul sbb aam adc jle mov add or add pop push dec ljmp push test inc dec lods or scas iret inc sbb sub daa ljmp mov mov jne xchg mov scas rclb or jno mov cmpsb mov movsl repz sahf pop push fisub cmpsb pop mov mov dec out fisubl push pushf imul and lods jae push fildl and xchg jb inc ret sbb cmpsb pop mov ljmp add inc pop sahf pusha jno mov fldl test jp (bad) cmp (bad) leave inc pop mov add lret unpcklps cmpsl aaa xchg mov (bad) sbb (bad) scas xor movsb jnp mov cld (bad) cmp mov xor jmp xor scas and xchg inc jg dec lahf je dec je xchg sub xchg je mov fcomps xchg pop xchg (bad) (bad) lret jl and inc (bad) jbe lcall leave cmp (bad) mov movsb clc push sub inc fstps push loop adc into xor jmp jle jb imul sub inc lock fildl arpl dec xchg insl scas jno sub cmp push and mov pop and mov call add cmpsl cwtl lods add inc clc or push mov fiadd scas lcall inc push insb sbb pop (bad) push in push call mov mov dec push fldl enter sub cmpsb sbb insl push dec push mov mov cmpl call repz cs in push mov stc or dec outsl rorl mov mov jo call imul imul sub in lcall rcl mov jne push pusha and (bad) aas loopne enter je jo (bad) jo,pn in xchg stos pusha sahf push mov xchg or adc cmpl jae mov in xlat lret sahf inc push mov inc ficompl mov (bad) leave (bad) or cmp adc (bad) or call push leave ficompl xor jo mov adc add and jo ljmp ret xor or and jecxz jge jg or nop scas in xchg xor dec mov (bad) stc adc xlat loop adc jno and adc lods rolb js jl push out aaa inc lahf aas cmp mov in and icebp xchg sbbl rorb add in pusha (bad) or xor xor add mov cmpsl pushf pushf addl call orb leave cmp jp xchg mov dec add test js js and cli mov or add jo rclb add or out out mov ja cmp cmc sub popf push repz push push jne mov mov pusha and ss mov mov or into sub dec mov imul in (bad) sbb fldenv jle outsl mov xchg mov xchg shrl cwtl inc scas outsb nop mov aaa das adc mov xchg js mov test jle jb and add and aaa sub shll jge cmpsb loop cmpsl in call sbb xor and mov data16 add fwait add lahf cmp jg mov test mov xor cmpxchg inc jle jg cwtl test cmp (bad) (bad) push pusha mov xchg sub mov mov xor jb (bad) xchg xchg dec inc loop mov outsl xor jl out jl jl mov nop jne scas out pop and cmp and scas nop mov xor inc pop push mov xor inc insl cli loopne xchg adc leave push sbb xchg jmp fnop jle pop (bad) sbb mov cli and sub and movsl sbb cmp sahf and xor pop ja mov mov inc jno and lods jb jbe sahf scas inc sbb fbld fdivrs mov (bad) call and into mov xchg shrb aas dec mov xchg movsl adc cvttps2pi mov repnz bound (bad) mov ret inc (bad) cmp dec ret (bad) or add mov lcall cwtl pop sbb adc inc mov xlat dec (bad) out mov adcb adc inc stc sub adc aam sahf add stc shrl mov out push lea fwait xchg in mov fldl ss cmpsl popa (bad) pop loop out add jae aad mov xchg xor adc mov pop mov push (bad) fcmovb xchg leave cld ret pusha and xchg sarb movsb mov dec repnz mov fistp imul out xor or arpl adc jg jmp push add xchg jne push and cmc cs fsubr pop add jl fcoml bound add jge scas push sbb mov sti bound fbstp lea jo pusha lea je cmp add stc clc cmp push lea jb clc cmp pushf lea jae or mov inc bsf mov sar mov cmp clc xor jmp mov insb shl pop lret rcrl sub icebp (bad) loope sub stc in loope cmc sbb xchg sub dec pop mov adc jecxz sbb mov inc sub pop sub cmp ja out (bad) test jecxz incl (bad) sub push ds rorb xchg inc mov jge adc aam mov stos add test mov mov lret in (bad) mov inc stc leave cmc lods repnz mov repnz xor dec fistpll pop cltd jno pop sub (bad) decl add pushl lea jmp lea call push adc pushf call call xchg pushf movb pushf pushf movl call mov lea ja push mov movzbw pop push pushl ret mov hlt stos adc inc push cmp aaa mov jnp mov cs (bad) jecxz sub lods fwait jg imull loopne ret in mov jg iret ja (bad) pop (bad) pusha scas jo mov jns (bad) test mov ljmp mov push and fsubr inc test sahf fcomip jae xor (bad) jne jbe jecxz and ret dec and jle in cmpl xchg (bad) pusha (bad) mov add (bad) shrb pop scas xor nop push push out jno pop jo mov in aad ds fwait xchg sub je enter sbb or dec jae jo,pn pop inc pop lret sbb push arpl (bad) mov inc pop xor and push pop lcall pusha (bad) adc outsl or cmp sub test adc xchg or push pusha push imul aas pop sbb or bound jno push xor movzbl setle lea pusha xchg setg movl not pop lea movl movl pushl call iret cmp push arpl lea or (bad) and aad (bad) jae mov icebp add shrb sbb push loopne pop aas rorb cmp gs jbe push imul popa jle (bad) faddl mov jae dec inc jg,pt cltd xor rcll push loop mov cli (bad) push sub cwtl inc xor iret cmp jnp gs cmpsb sbb cmp mov into pushf subl das out int mov fwait cmp (bad) pop cmp clc addr16 dec pop cmp mov pusha sbb imul cmpsb sbb jo pop xchg mov inc cwtl sub xchg xor fstpl fistp add pop jmp sub ljmp adcb cmp xor add lahf (bad) and imul xor repnz adc out adc clc or es and adc mov xor iret jne imul stos mov fsubrp div in push fsubrl jge pusha sbb pand jne pushf lahf lahf lea movb setne mov not lea call lea je cmp shld add test sub neg shr rcl mov or test (bad) repz add (bad) testl and add mov jg shr pushf stc cmc cmp call sbb xchg and outsb adc and mov (bad) mov in push mov mov out adc stos xor ja adcb sar lahf jg addr16 push es mov and pop mov push int3 sub shl ficoml fiaddl xchg pop lods and dec or mov (bad) decb sahf cmpsl fnstenv adc fadds pop inc lods pop xchg dec mov jno sbb loope pushf movb lea je jp pushf cmp lea pusha call mov push lea jb stc cmp cmc push cmp jmp rcr fldl jmp jb add and xor test sbb jnp mov xlat aaa out inc daa xchg ljmp fs fidivr push add mov adc repnz test and ja or add push push sub movsb add xchg push and mov mov pushf jae (bad) shl xor scas push lret inc (bad) call ljmp scas out nop ljmp sbb pop pop jg sarl loopne jno sbb mov mov (bad) xor xchg mov jge pop out adc stc out fsubp mov test lock jb data16 call je cwtl insl jle fsubrs mov xor jae mov lods mov jge outsb nop ss movsb push mov xchg and cld inc cmp push inc cmp scas cmp es sbb sub sub cmp cmpl or xor (bad) push pop addr16 test test stos pop xorb mov add add jno sbb push push xchg jb sub nop sarl lret in pop xor and ljmp sub or icebp (bad) mov loope lahf data16 ds fs xor aaa adcb ds lret gs out gs out orl cltd add lea inc mov insl je (bad) and or dec mov pop cli in cs pop in cmp arpl aaa sub aam sahf iret xchg add xor jl mov push (bad) pop lcall inc stos hlt xor das rcrb jne popf mov imul jns pusha sbb and pushl mov pusha movw pushl ret pop pushf push push push jmp lea je cmc sub pushf pushf lea jmp or push pop and int3 leave mov cmp outsl in cmpl out lock imul out in dec add mov jg cmp pop sub mov nop adc xor xchg mov sub jle mov scas out sbb sub inc pop test cli ret and movsb sub lock ret dec arpl xchg stos mov jge mov pop dec test out inc pop movsl cli out out inc xchg push test jo mov lcall push aam fnstsw and scas loope or test mov pop add and rcrb inc jp xchg lret inc lcall cwtl test ds jne mov pop icebp mov popf lahf mov inc cli xchg jbe jbe arpl aaa mov arpl pop out adc clc or push or sub sub mov in dec pop inc xorl in mov (bad) (bad) insl nop xchg dec and aas pusha (bad) jo test mov mov in outsl mov jo loopne roll dec mov xchg ljmp jno jno mov push push mov fnstenv or fucom xor fildl jne add xor insl icebp add pop adc es mov mov mov mov mov lea push mov movb mov mov movw pushl ret lea je call add cmp movzwl btc dec mov push mov call call add push popa je dec popa je push inc add sahf and (bad) jge add fdivrs in sub push pop mov (bad) in cmpl loopne in in aam and cld (bad) sbb (bad) dec unpckhps jnp (bad) fsubs push pop and ret sbb insb sub out (bad) (bad) int mov (bad) imulb dec outsl push xchg mov arpl push out sahf (bad) ret mov xor inc loopne popf loop out dec push dec push (bad) or js js lcall cmp stos je lods test gs icebp jbe push sub pop jno push cmc lcall add test rolb add lea lea sub jmp daa mov repnz adc dec js out outsl lahf jg xor fiadd sub je pop lret xchg jbe push test popa lds add adc rolb sbb cmc and data16 fdivr loopne sbb push and enter jp test (bad) out xlat cwtl adc into sti xorl push js jmp cmp pop and mov xor ret pop rorl dec (bad) mov js add jbe xchg outsb mov mov mov jae pop dec nop in xchg loopne loopne es test and sub dec xor popa pop mov pop mov sti push lret push and pop lods xor sbb jle dec push or int3 xchg pop cmpsl mov aad rclb rep or ss add outsl subb fadds sbb fnstcw aas arpl mov outsb lock outsb scas inc cmp es imul pushf leave cmp enter add sbb pop mov sbb xchg mov sti fimull lahf xor ficompl leave push (bad) cmp adcl lret add out and sub mov mov loop out sub shlb adc fwait inc mov aaa sarl push call stc mov cmp push rclb ja or mov pop sbb inc jnp mov and xchg (bad) mov sbb iret xchg fcmovnb inc push iret dec pusha bound jae mull jle adc (bad) aaa pop xchg pop xchg jae das push daa cmp sub mov arpl pop (bad) int3 push loop push inc cltd int3 mov mov pop push and dec imul mov js push movsl pushf add mov dec push insl roll cmpsb clc (bad) mov popf mov in jno adc mov (bad) and iret ss arpl push insb push shr pop test sbb add mov sarb lods jb bound in int pop (bad) jno stos mov mov cmp pop out (bad) (bad) scas xchg sbbl vcvttps2dq sub cs pusha loope dec cmpsb sbb jnp jecxz cmc ljmp lds sub (bad) aas pop and push sbb mov int3 jno adc nop dec sub pop mov mov sbb xor and push lods repz aas (bad) aas lods jae fwait mov mov add sub add fisubl cs lea sbb cwtl mov cmpl aas popf mov imul xor jl push cmpsb sub sbb jbe cli or add aaa sub lods adc xor outsl inc iret jne pop cwtl into insb lcall and les insl xor ja (bad) fbstp jno adc pop add inc xchg add mov inc mov in inc xchg imul xchg or icebp nop mov push mov or out or xchg outsl push mov fild jnp xor add testl or call inc inc pusha into nop lahf add and in dec xor cld (bad) jmp push mov mov fstp imul lock arpl cmp jmp mov mov push jecxz cltd in cmp sbb mov roll jle negl sti push popa pop inc aas push or (bad) aad out or cli jl push idivl int3 (bad) roll pop jg in cmpsl cwtl inc cmp jnp mov sbb adc sub pop inc popf popa mov pusha adc scas out (bad) shr scas shr xchg add sub cmp pop xchg flds jbe (bad) pop hlt sub icebp dec sub mov adc hlt lret fsubs add and mov in repnz xchg bound cmp mov je mov lods mov imul jno mov sub push outsb stos xor push and jl mov outsb pushf (bad) cld mov int js xchg or dec mov (bad) (bad) movd (bad) jmp outsl rclb jno adc mov jg aas (bad) js fadd or stos in push (bad) xchg sbb xlat jl arpl rorb mov sbb cmp ret fwait add cmp in mov cmpsb test push fst test pop sbb fistpl jbe or sub (bad) scas add pop dec and shrb fwait jnp insb clc popa cld mov daa dec xchg fist mov pop orl jb jnp mov add jns dec hlt jmp push lea xlat stos xor xor xor add fdivrs adc and push dec xor jns jno cvtps2pd inc and pusha push mov pushl ret cwtl std mov out stos lret mov mov ja inc cmp clc sbb scas jo push ja test rorb sbb sbb test cmp xchg lea sbb push loopne rcll fiadd mov pop into hlt int3 out fwait les xchg gs imul loope (bad) jp mov in xchg nop int cmpsb mov push lea imul pop mov mov mov mov fcmovnbe shrb and pop xchg ret sti int3 adc add xor mov jle mov pushf mov cwtl mov lahf jmp pop push imul inc sbb nop xchg pop add or and sub jmp enter stos hlt dec inc cmp adc rcll sub leave adc jle repnz (bad) mov dec pop mov dec lods mov cwtl daa jecxz pusha aas out mov and push sub dec push push pop test pop jbe dec sti inc test sub sahf imul mov cld cmc dec lret cmp inc cwtl popf push into push sub insb push fmuls inc pop pop pop push sub int3 inc imul cmpb rcrl push adc outsl jo dec pop test mov xchg sub cmp pushf neg pushf cmc shr mov jmp call add inc jb popa je push popa insb gs add pusha mov lea je test sub clc stc cmp pushf lea ja clc pushf imul stc push add pushf lea jmp mov sarl cmpsb mov negl nop xchg call jmp fldcw or adc pop xchg mov popf faddp sbb pop add aad mov jns int mov loopne or pop inc sub jl mov (bad) jg lock lods lret xchg movsl stos fsubs clc movups inc sti xchg test xchg jns pop fcomp add pop test jecxz sub jno iret shll dec in and cmpb cmp pushf mov pop ret push mov lock sbb sbb sbb jbe jge pusha or lods mov add test hlt mov jnp cmpsw xchg or sbb sbb loope dec std jp addr16 jae xchg mov xchg dec xchg or in jg sub jns sbb pop rcrl insb sub (bad) mov and hlt dec pop popf add sbb sub cmp adc fistl lcall ljmp dec inc outsb and mov aaa sbb movsb sbb das jle insl cwtl in add pop dec shr push jns in xor and sbb sub pop daa lret jae mov movsl dec (bad) sbb arpl or cmc fnstsw (bad) ror inc fidiv adc loope jo in mov mov cmp loopne fsubs mov jb cmpsb mov mov jb inc std fisttp cmp pushf lret and push fldl2e cmc into adc ret mov inc cmp les movsb adc mov inc aam mov or dec mov pop icebp pop mov and fmulp adc iret and test push xchg mov insl ret xchg xor testb mov and dec stc out cs lret out push out lcall lds mov xchg jle adc or daa cmp sub or mov mov and add outsb xor mov mov sbb push and rorb pop fsubs lahf mov mov jecxz mov mov fnstsw (bad) leave out mov or sbb xor adc stos jmp iret and xchg (bad) fstl lock jge outsl or into jae xchg nop in push das sbb jne xor push dec adc ror fisub push cmp adc cmpsl call dec xchg test outsl mov (bad) sbb pusha dec xor cmp sub adc mov cmp mov jp pushf dec xor mov pop add ds inc aaa sub mov mov (bad) fdivs or push inc push xor cs insb add mov (bad) push inc cmp fbstp les outsb push fwait test ss pop lods xor xor fsubl add jl (bad) call aad cmp cmp and jp mov mov xchg scas cmp push movsl jg movl xchg lret ss addr16 push imul xchg sub (bad) in xchg push nop cltd lds jle jno or gs es mov cmp cmp xor mov cmc lret and xchg stos test out nop dec cmpsl pop test dec mov inc std add test movups sbb fildll and cwtl imul pop mov mov sbb pop xor add push test loopne std and in stos mov xchg fdivs cmpsl adc loop aam adc fmulp xchg lcall mov lcall insl xchg lods cmpsl cwtl jnp sbb cli hlt ret jmp adc pushf imul loop cs repnz cmpsl clc sbb or int in push rol stc test clc test not movb mov cmp pushf neg stc sub jns clc bt cmp setne lea mov pop pusha pushl jmp pushf movb movl jmp pusha jmp lea mov mov mov mov sbb inc add repz pushl lret xlat aaa out rcrl pop jae xchg or jecxz mov xlat cli (bad) icebp mov inc ja adc loope insb push arpl sbb xchg daa mov scas jae cli leave sub jl addr16 repnz (bad) push cmp into aaa mov sahf xchg mov fsubr aad (bad) and pusha or ret int xlat outsl jo int3 (bad) notl jne pop and mov inc sbb pop (bad) dec push dec jbe xchg or ds test aad push jne mov pop adc out stos and mov jl int test mov push and adc mov pop xor aaa sub cltd bound out inc xchg sub mov fnstsw xchg mov or (bad) sti test test bound es fisub sbb jmp cltd add les xchg and xlat pop loopne or or xor mov xchg pusha call pushf mov pushf dec mov inc mov not mov lea jmp pop shrl ret mov add (bad) fldt lret fmuls xchg dec xor mov adc xor das (bad) dec mov shrb xchg scas out icebp pop lds int jnp js mov push fwait lods fs ret add push sbb mov (bad) dec pop jl inc lcall lea or pop or push (bad) nop shll jae insl jno mov out out enter jno jns icebp insl cwtl cmpsb cli cld adc jp out mov inc pop lea jae and fmuls cmpl or sbb aad pop cmpb lds add jl cltd in jmp lea lds adc sbb xchg cwtl mov cmp cmpsb test adc pop les test out sbb and xchg add out xor popf and aam mov das aad sbb lret jo push enter movsl mov adc scas push into add dec outsl popa fs imul add repnz mov movw lea jne call xor cmp repnz mov lea jne bsf mov mov bt movzbl and adc sub bt not mov jmp cmc test pusha pushf jmp push sti cmp test lds je xor sbbb mov cmpsb sbb and je or ret and inc lret xchg sub mov add sbb iret outsl adc mov xchg out sub pop xor push (bad) inc jae (bad) lahf movsb xchg cmpsl cmp pop xchg dec movsl sub test push push mov mov aaa dec add ret (bad) sar test xchg jg and and mov dec jbe pushf jne inc insl inc pop popf xchg push mov mov add and scas std loop ss lds imul mov mov pop fbstp daa scas repnz daa cmp xor and addr16 movl fnstsw icebp add int3 iret shl and iret xchg xchg sub xchg mov and fdiv dec popa in aam push jmp nop cld cmpl add pop xchg cli insb push sub xor jle imul push jb jnp pop sub push in ret inc push ja lahf adc sbb xchg dec ficoml lods push clc push enter cltd mov mov stc gs dec mov dec nop repnz sbb inc pop push jbe pusha add icebp lret push inc push dec cs dec dec add dec adc aam dec adc lea jae push lea jmp pop movzbw movzbw pushf lea jne pop mov pop not mov call pushf sub jmp push pusha jmp dec jo das (bad) lds in pop test in gs sub enter jno mov test (bad) xlat xor xchg xlat call fucomp mov jp xchg xchg lods outsb adc loope cmp sahf lods arpl cmp out sbb lahf out dec mov jno mov enter xor (bad) ficompl pop xchg mov gs in mov add frstor mov xor dec mov int int3 pop add addr16 adc mov call jl jne push or inc pop icebp (bad) into jno add jmp pusha pushf pushf xor call mov inc fdivl loopne and xchg jb or inc jmp push lret je pusha sbb sub les inc or movq sti test dec scas dec ja (bad) enter lock popa push jp iret and sbb stc pop call js sar test dec and push push rcl enter repnz xor cmp pop ret pop lcall dec sahf orl mov test jmp jl jno mov adc out push cs jno add push cmp leave fiaddl cmp decb jnp or pop pop test in jae addr16 arpl dec mov sbb (bad) fs xor jbe xchg mov sbb mov popf cmpsl les loopne push xchg imul out cmp dec cmpsl js out or push js insl cmp mov mov imul xchg int stos sbb das adc inc push dec mov add cmp inc aam test outsl (bad) xor push dec cwtl daa push sub aas scas (bad) push imul cmpl cs and sbb jle imul (bad) iret loopne add pusha cmp aam ret sub fldl2e es dec push dec pop adcl or and pop es dec xchg cmpsl pop data16 and jnp fwait cwtl stos popf mov aad cmpsb mov mov jecxz mov mov inc pop xchg jo ljmp gs or movsl rorb hlt popa jg imul xchg xor push xor daa dec push ret jno add add mov lea ja stc rol stc pushf sub movzbw lea add add sub mov rcl mov pusha jmp call sub cmp repnz pusha pushf pushf jmp push inc push push dec dec dec cs insb add push lods in sbb lods sti cmp pop test call dec sbb into jne je push dec jae xchg xor pop fwait int mov sti xor jmp push pop or xor pop insl outsl (bad) mov adc das (bad) fs cltd sbb das mov inc dec outsb xchg mov icebp mov fidivl aad xor sub xchg (bad) iret in repnz insb cltd pushf mov mov add notb loopne loope push and or cwtl ss add push dec lea jb clc cmp jmp lea jne xchg lea mov dec shr sub and dec sar mov bt pushf cmc sub pusha pushl popl clc pusha cmp jmp outsl insb xor cs insb add pop mov pusha or repz mov pushf mov call jns mov xchg xlat dec pop scas scas (bad) scas pop sahf stos push leave leave adc test int xchg out call cmpsb pop insb cli inc push cbtw mov cmpsl jae jge push movsb xor fistp inc jne mov push stos test icebp add shlb icebp xor sub cmc dec mov xor add dec ret jecxz (bad) jbe out push jg (bad) testb xchg jbe and mov mov iret sahf fldl jl jge in cmp mov repz arpl push jle pop xchg fsubs push xchg std imul sbb hlt sbb aaa adc out lock lods mov xchg movsb jno (bad) pop ss pushf sub mov rep call cmc ror call add add add lods cmpsl scas push add add dec icebp sbb add add or add or add jo sbb mov in add sub add sub add sub add sub add and add add add add add add add pop add add in add in add in add in add in add icebp sbb and sbb inc icebp sbb dec outsb jae popa insb insb add fs gs inc outsl jne je jb gs push je imul gs arpl jb add outsl js inc insb insb add add int sub inc xchg cmp adc or test std sub or mov mov outsw and or bound sbb dec jecxz (bad) sahf cmc push cmpsb jbe icebp loop sub or inc adc dec unpcklps sbb mov pop cmp shrb jge rclb xchg and imul xchg mov (bad) mov rclb jbe sub cli out jmp insb iret push lahf sbb outsb es mov sbb or aam gs outsl xchg scas xchg (bad) cli jle roll adc push or and out sahf mov adc lahf int pop jl int pop (bad) jmp add ret xchg popa sbb stos push push ljmp rolb cmp or mov int3 mov fcmovb lods xchg in leave push (bad) adc push pop push xor push lds outsl add sbb push mov call repz sub insb jno xor push mov inc push rolb (bad) ja out ljmp add into cltd popf dec mov cmp vzeroupper or rorl inc mov addl jbe movb mov adc addr16 push inc mov dec dec xchg ljmp arpl icebp xchg jbe add adc aam pop mov push int3 fist cwtl sub test push and and adc add and iret lods pop push loopne xchg ss insl (bad) push (bad) call inc lahf lds push cli mov stos mov xor mov mov (bad) and mov aas ja dec and es hlt shll push adc popa sub cli pop cmp leave test loope push inc xor cmp mov jg push (bad) inc mull pop and cwtl outsl inc jge std jnp in pop mov out mov cmp or xchg mov sahf test aas into sbb sub jmp lea paddusb pushf adc into (bad) push adc mov inc scas mov xor bound mov jmp and scas mov add cmp lahf out bound or adc pop shrl push idivb mov scas add loop inc xchg and addr16 icebp inc dec scas lods mov mov call loop mov pop xor xchg dec outsb pop mov stc jnp lret mov or lods iret adc ljmp popf or daa push dec or xor lds mov dec pop sbb xor sbb sbb mov adc inc xchg cwtl jecxz xchg or xchg (bad) int3 push adc (bad) test inc mov mov sarb test mov hlt or mov lea or fdivr mov jb aam push sbb js,pt decl sbb inc add mov fist jg js sarl sub inc flds (bad) fcmovne push mov imul cs fsubrs mov or aam mov dec (bad) push fwait movsl push clc (bad) mov stc ljmp push das and mov push and insb or mov inc and test mov or inc xchg popf pop fcoml or aad cmp in je mov mov jle mov cli adc rolb test mov push dec pop push in mov loope sbb fiadd scas dec nop dec leave inc mov (bad) xchg mov push jmp or lock mov movsl mov add fwait xlat inc lret adc (bad) out lcall jmp jno mov mov out fisubr ljmp ret push and cli outsb in cs rolb out lods sub push ret cmp pop psrlq in repz (bad) sbb adc inc call mov aaa and imul mov jge aam daa leave mov mov arpl jl sub add incl push mov xor insl xchg and out inc int push jae and (bad) cmpsl sub mov fisubrl and inc and in dec nop mov rcrl movsl call lahf (bad) mov cmp outsl clc (bad) pop (bad) into outsb dec push pushf aad mov pushf ret mov xchg pop sub bnd push jge ja notb (bad) mov or inc mov and (bad) ficoml mov and (bad) aam stos dec in dec adc les mov jmp push cmp sub imul in loopne aad jge in inc fldt lods dec inc aad and mov and fcompl xor not mov in lea iret inc pop sub xchg jmp addr16 enter xor dec mov pop cli negl inc adc fsubs sbb push push pop cmp push je inc inc arpl lret out pop xchg sahf jge enter xor pushf add mov sub sbb mov fs jecxz cmp mov out push pop adc mov jb mov push daa fist pop ret mov adc xchg inc lds pop add sbb inc mov pop inc scas loopne sbb mov adc push jg adc sub ja dec adc dec iret xchg push inc push jnp dec sahf into fsubl inc jecxz je and hlt addr16 xchg sub jne push pop test add movsb lea push cmp jne inc andl js pop inc addb inc inc outsb test pop cmpsl jns and icebp sbb push push fdivl add inc scas mov xor out daa add mov cpuid add arpl mov pusha js pusha xorl sbb or fsubl pop jg (bad) orl iret cmp or fucomp popa sbb jbe les imul lahf mov lcall adc adc jl imul dec cmpsb pop cld lret mov jmp pop lahf pop negb fs fnstenv (bad) cwtl bound movsl lds jl jmp xor add dec mov mov loope sub xchg vcvttpd2dqy xchg add fimull lds imul (bad) jno xchg jle inc movups mov push mov lcall xor incl mov inc mov cltd outsl add pop mov push int ljmp mov out push jne add sbb test or mov pop cs jmp push call stc das mov fdivrs icebp jmp mov scas ja fcmovne shr jecxz push add out sbb loopne fninit leave add (bad) push mov inc fcompl push jg push inc dec dec std jmp and repz pop mov mov push pop test je hlt sub dec enter adc jl pop sbbb (bad) insl idiv loop stos fs jnp out cmp dec cld mov push cmpsl jb sub lods adc mov mov xchg pop mov jecxz sub gs xchg mov xor adc outsb nop subb das aas add in or dec jae adc lea xorb push mov je xor cmp mov stos rcl leave pop cld inc cld and cmpl lahf rorb pop sub pop lea or ret jle clc mov inc xchg out int pop sub and sub adcl mov pop (bad) stos jp mov sbb imul cs push ja clc es dec jp xchg or mov cmp cmp pop jne sbb mov mov cmp inc push push sbb cmc imul lods mov sbb mov adcl scas lcall (bad) movsb add (bad) out dec ja sarl iret sub cltd cmp xchg or pusha cld adc mov fidivr data16 push sbb cmpb int pushf (bad) xchg push mov mov scas mov xchg cld mov stc icebp mov jl dec mov dec add xchg dec xor loope pop xchg ljmp mov movsb popf es xchg iret popf mov cmp xlat push cmpsl xor movsb jp xlat pushf or xchg mov pop dec fwait cmp push sarb fwait cmp cld lds jmp pop jmp jae adc pop push cmp lds cmp mov dec scas cmp inc pop rcrb ja out mov add xchg lock test leave ret lods sub push pop jl ljmp loop jo jae mov jnp mov out fwait test xchg sub adc (bad) mov jl push sti aaa adc ljmp out xchg fiaddl aaa or fcoms push sbb mov mov imul fs mov inc movsl adc js push or scas stc sub push outsl test mov cli in or (bad) sub cli lcall (bad) outsb mov cmp push bound inc push lods aas mov inc lahf mov mov lds mov sbb sbb out aam lock sti ss mov push mov adcl jno dec fdivl int movsl addl gs lcall add jb imul add insb outsl popa fs gs inc outsl jne je jb gs push je imul arpl outsl js pop insb insb add imul cs insb add cmp test add pushf pushl pusha lea jmp call inc push dec inc inc push xor cs insb add xor cmc lcall sbb popf les adc xchg loope add adc shrl bound mov mov mov imul ret mov xchg nop outsb ret jecxz sub (bad) cmp push ret stc sbb test (bad) mov and inc es xchg or and jl fsubs push sub or ds into push mov xchg pop pop ficomp mov add stos mov sbb cli cmp mov cli aam cmp xchg out adc icebp sub aad mov cltd fimull in pop dec mov xchg push insl scas testl push into icebp lods shrb vpaddw dec ja cmpsl xchg inc mov aaa into fbstp lock jno test adc jl std inc add sarb (bad) fcmovb dec aam hlt pop loopne adc aad int rcl or jae sub inc scas lcall insb repnz mov xchg into test mov or pop sbb inc add jg jmp jne dec testl pop jl insl int3 mov dec push add cmp mov sarb ret (bad) aaa cmp add xchg sarl or out xor and pusha jmp xchg je inc mov push sub (bad) sti dec mov (bad) mov mov cmp and mov les or xor fs xchg mov push lods add aad push cmp mov aas test and push adc cmp lock dec cmp lods mov ret xlat pop int3 and push insb (bad) push outsb leave xchg das (bad) mov jb jmp add movsb xchg sarl or push test inc cmp mov outsb lock dec sahf inc lcall aaa pop and jb pop out mov add inc jb popa je dec outsb jae popa outsb arpl pushf call call push gs flds push pop add pop cmpsb cltd loop cltd lds or mov push add adc mov (bad) jecxz rolb inc mov adc or mov pushf xchg sbb rcrb out cmp lods adc cmp dec pop mov cs add mov fldenv test or and jnp or in push notl dec pop cltd fisubl push or cmpsl sbb or movl js pop lcall jb jno inc push mov in mov je mov sbb inc mov (bad) or jno out sti xchg xor add mov leave imulb and ss fldcw jle jb xchg dec call sub mov lods cmpsl cwtl jnp shr jno outsl scas fwait (bad) (bad) pop wrmsr inc jle (bad) adc pop and aaa addr16 dec lcall out fnstsw es flds xchg lret mov aad stos shrl adc xor pusha mov mov bound test mov and xchg inc jge repz (bad) call pop outsl mov fdivs mov pop sub or sub mov ret mov ret cmp pop stos xor and or js mov mov loop iret xor ror (bad) pop pop sahf cwtl sbb out in sti push and out sub adc mov lahf fisubrl mov jne popa aam mov test lock enter and dec mov pop inc pop jg push imulb outsb scas jno in dec inc xor pop stos sarl mov ds ret scas in fadds sti ja (bad) pop lods idivb leave cwtl inc jl movsl inc xchg into (bad) jbe sub popf inc cltd loopne,pn push cmp sbb jae int3 mov xor das jecxz repz add cld fsts mov (bad) arpl pop fildl and or add push lock jp cli test jg sbb mov ss gs cmp add sarb cmp aaa push out int push cld mov xchg sti push cmp daa aas (bad) fst shll cmpsb mov ds xor jge out repz xlat (bad) sbb imul mov sub push pusha pushl popl clc pusha cmp lea jno ja neg neg sub sbb lea add clc mov stc mov add mov pusha call adc mov pop sub sbb adc or cmp test push or adc xchg sub in aam popa jge pop (bad) xlat cs mov stos int mov pusha lds lcall lret and imul add outsb faddl inc sbbl jmp and rcll cmp insb pop mov push ret cli pushl es push js push scas jo (bad) in mov imulb aaa pop xchg rcrl leave pop loop ret das sysenter push xchg mov insl dec xchg push imul cltd stos jno jmp cmp pop cmp push mov dec mov pop push clc xchg pop ljmp jae and or cld loop xchg jo movsb (bad) test pop dec out imul pop adc or (bad) cld or mov sub mov or dec icebp xor or andl cmp mov cmp jne pusha mov jecxz aas movsb sbb mov rclb adc fcoms jg andb out add fidivr adcl and cmp xchg sbb adc data16 and add push dec pop jno ljmp popl movl pushl pushf push pushl ret mov insl jb movsl cld lcall xchg in (bad) leave adc and aam imul call das xchg addr16 cmpsl ja cwtl push sti in mov mov mov mov add mov mov mov xchg outsl add mov mov fisubrl ret jle cmpsb sbb xchg push shl mov cmpsl in loope add or movsb leave mov pop into imul cld fmull xchg ror push xchg or aaa into jne scas or push ja lds mov jo pop (bad) xchg int3 (bad) fnstenv fisttpl mov ss fsubr (bad) jo ja push add xchg adc scas mov scas and pop out jno jmp lea jae pushf mov cmp inc clc pusha mov add shld mov call test bt or pushf mov lea je call inc mov inc pusha mov pushf pushf lea jmp call call jmp jmp leave test (bad) pop fisubrl jg mov jp pop lock sti (bad) fucomi idivl add mov lods cmpsl (bad) mov aam aam imul fildl xlat test nop loopne,pt sub cmpsb or sub arpl data16 daa (bad) cs inc push sub or inc push stc xor fcomps xor imul lods xchg sbb xchg mov cwtl test mov inc (bad) dec dec xor adc lret inc jmp out sub sub movsl push xchg push dec mov lock xor out repz out fisubr cld leave cmc mov scas icebp inc faddp (bad) call mov int3 shl jno call bts xor jge mov pop xchg pop xchg mov push call in aas pop movsb cmp dec pop outsb mov fwait inc dec add xor in add mov stc adc lock sbb ds stos xor mov lea push add jmp ljmp pop jecxz jmp sub bound dec jo mov aad pop in dec inc xor cmc fsubs enter xchg imulb and cmpsb addr16 bswap xchg test clc daa xor jno out sub adc rorl pop jbe lcall jo rclb inc add ret adc push out xor cmc jl mov mov xor mov sbb xchg inc push mov (bad) idivl pop enter xchg or repz xchg jecxz pop mov add (bad) (bad) dec cli mov or or imul (bad) call cmp dec popf inc cmp lods jb andl icebp out cmpsl pop mov cmp jno out jl test fs je stc xor xchg shrd mov btr rcl (bad) lock movsbl btr call stc stc add push mov pusha movb lea jmp scas jmp fucomp or mov cmp outsb jne xor xor mov push addr16 in add fwait add ss mov ret idivl jle repz cmp add sbb cmpsb cmp pop lret aam ja arpl (bad) fadds fisubr jns repnz mov loope inc and fnstenv insb cmp push cltd out cwtl add rolb jp push push mov lcall and inc dec iret das inc arpl mov ds es insb fild call inc test add adc cwtl dec mov mov in imul push imul addl ds mov or test jecxz mov mov and adc lea jne dec rcrl les add mov fwait mov sbb nop mov push fiaddl cld or or or pop (bad) xor in ret rep pop movzbw jl movsbw pop push pushf lea jmp dec cmp xor lock ja inc mov add adc and xor insb adc scas push mov cmp inc push addr16 mov dec mov rcl mov xor mov rorb dec pop ja dec push mov mov repz nop mov inc (bad) xlat daa cmpsl ja mov xchg xor xchg lods lods mov movups (bad) or cmp ror mov mov pop cmpsb out (bad) movsb fisubl inc loopne mov xor sub test (bad) (bad) jmp mov lea and bt mov bt pushf stc call push mov lcall jle fs add sub mov je mov dec aad add mov insb jb dec imul lret push cltd cs rolb jne adc dec daa (bad) cs xchg or loopne inc mov (bad) imul roll sub xchg es aas inc scas data16 push data16 lods add cmp push addr16 pop js lcall cltd cmpsb and sbb pop add repz shl fstps add pop in (bad) out repnz adc rcll jg cmpsl aaa imul sub fadds sub js sub mov lret insb repz divb outsl scas push popa lea out push gs leave mov pop sbb push mov jb fidivr aaa dec (bad) xor jns cmp lret repz dec mov lea cwtl test pushf subl lods mov mov shrb insb adc fdivs outsb xor sahf mov popf dec aad in ss mov push dec es imul addl lods call loop bound punpckldq bound xor in xchg xor mov cmpsl mov pop sub nop out jne inc add pop insb shlb repnz ds fcomip out adc into pop lcall push xchg test out or adc or jae mov pop cmpsb mov mov sbb les (bad) sbb call (bad) je push mul cmp lock cmp icebp stos aad (bad) jg jecxz xor test bound sub enter iret jo imul dec jne mov jmp out mov and lret shlb mov notl sbb lods fsubrs mov cld or sub adc add insl (bad) mov sbb out and into loope stc fisubrl testb dec pop je inc stos push imulb js test mov sbb dec out jno aam std (bad) push dec adc pop loope stc jp xchg movw push pushl dec stc shl pushf lods pusha sub push ror stc call sub movb pusha mov pushl popl cmc cmp movw pushf lea ja inc sar inc not sub lea inc sete add add rol btr sub mov rol rol rcr rol mov cmp pusha stc jmp push mov clc call and ror xor mov test cmc pushf pushf cmpb pusha call test sahf (bad) lods mov sub les add pusha shrb dec push mov fmull aam leave dec jae jl mov daa sub push sbb inc inc add in mov push shlb loope repnz fwait lods sub or sub sbb xchg test cld xchg jp gs cltd mov inc mov jl cmp adc frstor bound jmp test or jne mov arpl pusha mov cltd mov lods xchg cmpsb pop pushf imul pusha (bad) mov sbb stc jno loopne je addr16 movzwl btc mov movb call test xchg mov add ret or adc add icebp dec bound lcall pop xchg addr16 fcomp add adc daa or and push dec popf xor mov jno xchg pop test sub popa popa pop gs add inc jecxz outsb sbb pop xor ja (bad) cmp gs pop mov iret fbld out das inc jl or into sub add or fiaddl sbb jae mov add fucom mov mov pop fistpll leave jbe jp lret dec sbb inc mov cmp outsb sub push pushf (bad) popa pop mov fs mov cmp shlb loopne sbb mov insb mov mov cmp sbb push daa mov add lods pop iret fstl cmp inc notl fisub mov adc xor push sub std and add incl test jecxz push xchg sub cmp stc es ja fbld and enter adc jmp aas xchg insl jno (bad) (bad) cld cmpsl sbb fisubr test xchg mov insb push lods pop xchg mov les movsb pop shrb xchg pop add movsl rorb (bad) psadbw cld or int3 xor call (bad) sbb mov or idivl jp jno jge (bad) xor jns inc jle dec mov (bad) aaa dec pushf and inc jp mov outsb sbb cs adc cs imul push subl and mov daa loope mov outsl bound cmp mov int3 xchg pop (bad) sti movsb mov sbb add shrl ret movsl shr mov mov test add (bad) push jp scas jno mov pop int push mov aas xchg out mov sahf jo mov or pop and fs inc (bad) jno fstl lret test loopne jle cmp xor adc scas nop popf pop into stc hlt push out xor xor rclb push cmp sub add sub or and pop sar or loope cmc int aam outsl out xbegin sti add or lock inc popf pop into xchg mov mov sti and (bad) and sub aas call jno fldl and js je jb arpl jae adc setno mov cmp pushf cmp bt cmpb pushl jmp test test push push lea je cmc pushf stc clc add movb jmp lea call jmp push jmp bound inc xchg arpl test (bad) dec mov mov loop push mov enter add (bad) outsl imul shlb or (bad) xor mov pop mov xchg mov mov sub (bad) xor jo cmp stos popa popf scas shll xor jl nop mov test (bad) or out xor test cwtl xor shlb ds push mov sbb or sub cmp dec ret cmpsb mov lret push test cmp or cmpsl mov mov sbb xchg mov sbb incb or adc cmpsl push xlat cs nop mov jnp xor jbe repnz xchg sbbb fimul daa mov fsubr cmp jb xchg test mov and cltd sarb jge into fist nop repnz call lock mov dec push mov and push mov pop xchg movl xlat decl inc inc out jg push jae cmp data16 dec mov out push inc xchg pop pop es mov test pop test jno,pt adc push pop inc jl or daa js adc adc addl (bad) int3 mov (bad) fldl mov out in xor je in repnz mov psubd jae data16 cmpsb cmp std loop pushf imul or mov sub js adcb inc lahf dec sub dec xchg lds pop (bad) or (bad) mull stos mov add cmp cmp mov fiaddl inc and push pushl ret adc mov jo sbb rclb in add cmp jl into lock sahf notb imul xchg jmp lock aam test jmp add rcrb aas test (bad) jecxz pop mov pop sahf pop jecxz je sbb sub add dec or stc mov push jb jns orl xor cmp cwtl out popf and test jns xlat inc rcrb movb mov or mov pop xchg mov inc jmp dec jb pop lcall pop xor xchg daa cmp and js mov gs movsl dec mov stos mov stos jle push mov xor movl cli add xchg xor xor or dec cmp mov jae imul rep scas out push aas sbb or or xor out lods mov icebp xor pop stos mov push or loopne js bound cmpl aam xchg mov ret pop cltd test (bad) in enter inc mov push in add mov stos pop jnp lret es cmpsl js add lods stos pop mov dec je imul sbb ljmp es dec aaa jmp sbb xor sbb aam scas lock nop mov and xchg ljmp dec test (bad) aad outsb lahf dec mov mov mov or push fsubs and mov call repnz (bad) inc mov sub cmc sub push enter sub push mov inc sbb fcomps in push pop mov pop pushf movb movb pusha pushl ret add add cmp add add sub xorl je xchg xor xor xchg mov cwtl xor xor xor xor xor xor xor xor xor xor xor xor xor jb pushf xor aam jmp repnz xchg ss or sbb es xor cmp inc aaa ja mov aaa sub cmp pop cmp insl cmp jge mov xchg cmp cmp cmp cmp cmp pusha cmp jno lcall cmp cmp cmp cmp cmp cmp cmp cmp jne xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp fwait cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp and jp lcall ds ds sbb fstpt add add add movsb add add xor pop xor xor xor xor xor xor xor xor jae pushf xor xor xor xor xor mov out dec xor xor xor xor xor dec xor push imul ss adc aaa cmpsl aaa repz sub cmp cmp jae test adc cmp cmp cmp cmp cmp cmp cmp (bad) cmp pop ds movsl ds aas cmpsl aas fdivrl add add add add adc and push xor mov pushf xor xor xor push xor (bad) xor xor xor xor xor xor mov (bad) xor xor xor xor xor xor xor xor xchg xor xorl ss cmp mov aaa sbb cmp cmp push cmp cmp mov mov lds (bad) cmp cmpl ret cmp pop cmp mov and aam gs cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp and inc cmp pop cmp jg test xchg cmp sub aas jg,pt xchg loope,pt idivb push aas pop aas outsb aas je (bad) aas mov nop aas cltd aas ret aas int (bad) aas fstpt add add add pop xor xor cmpsb xor xor xor xor xor xlat xor xor xor xor xor or sbb pop xor xor xor pop xor xor xor xor xor xor aad add mov dec cmp (bad) cmp cmp cmp cmp or and cmp cmp cmp cmp cmp cmpl aas add add add adc mov dec xor pop xor xchg test xor imul xor xor dec xor xor xor xor or xor xor xor xor xor jns mov xor push ss aaa sbb arpl jns mov cmp imul mov adc push cmp cmp ds pop or sbb aas aas jae test aad fistpll in aas add add add and xor fbstp bound xchg xor xor xor xor ret aaa xor dec aaa push je mov cmpsb aaa mov lds sarb cmp cmp cmp push cmp cmp adc and inc ds mov aas pop aas xchg aas mov aas fstpt in in aas hlt aas add add add add or adc sbb inc xor push xor jg xchg lea xchg xor xor xor xor or adc inc xor mov xor xor xor xor xor xor xor xor xor daa xor xor dec xor popa xor xor xor repnz xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor ds push xor lahf xor (bad) xor hlt xor cmp ss cmpsl ss fdivl sub xor xchg aaa movsb aaa (bad) aaa out clc aaa or inc cmp cmp out in cmp cmp push js xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp mov ds ds aas pop aas and das aas ds dec aas push aas bound push je jge mov addb pusha add add xor xor xor xor jb test xor xor xor xor xor xor xor xor xor xor xor xor (bad) xor xor xor xchg cmp mov inc cmp jae jp mov fdivrl out xor cmp cmp add nop add add add xor loop call xor xor xor xor xor xor xor (bad) ss repz adc jae cmpl push cmp jno lret cmp jne lret cmp cmp adc push ds aas add add add add xor pushf xor xor add adc cs xor xor jae xorl or fwait cmpsb ss ss aaa movsl aaa mov sbb add adc add add sbb xor xor xor xor (bad) ss aaa arpl jecxz add sbb mov cmp cmp cmp cmp cmp cmp cmp push cmp jbe jnp mov add add rolb lock add pop xor js xorb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xchg xor imul lea xchg aaa xchg aaa mov aaa xlat aaa call cmp cmp cmpl cmp cmp cmp sub icebp cmp cmp sub pop cmp cmpl or (bad) sub xor aaa cmp cmp cmp outsb cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp xor inc cmp push pushf cmp mov cmp test stos ds aas imul aas add add add call xor xor xor dec xor jo jle xorl xor xor xor xor xor xor xor jle test out cli xor cmp inc xor popf xor xor xor xor xor dec xor pop xor xchg xor xor xor xor xor xor xor mov xor sbb cmp insb cmp fwait cmp cmp cmp ja jge mov cmp cmp cmp cmp cmp cmp cmp test cmp add sbb xor aaa ds ds ds jb,pt xchg ds ds ds les aam fnstsw jecxz repnz aas push aas jl mov aas add add add or add cmp push xor jbe clc xor xor jge xchg nop xor xor xor or pop xor and xor xor outsb xor jp xorl xchg xor xor sbb and xor xor xor xor xor xor xor xor xor xor xor test xor inc ss ss bound imul loopne in ss aaa push aaa pop aaa addr16 jae jp xchg xchg aaa mov add or or adc adc sbb sbb and and sub sub xor inc cmp data16 cmp cmp xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cwtl cmp cmp cmp push fnstcw (bad) push ds add inc aas addr16 mov mov lock int3 add add xor dec xor xor xor mov xor pop xor xor xor xor mov xor xor xor xor xor mov (bad) xor inc ss ss arpl xchg aaa mov aaa and xor cmp cmp cmp mov xchg cmp cmp cmp push cmp loop push cmp cmp cmp cmp cmp cmp cmp jb stos cmp aas ja,pt xchg ds aas adc aas cmpb aas mov mov nop aas xchg aas cwtl aas pushf aas mov aas xlat aas add add int3 add add jle mov xor xor xor outsb xor add xor imul divl add xor lea mov xor xor xor xor xor xor xor out inc ss ss mov ss ja fbstp daa cmp xchg cmp cmp cmp cmp popf cmp cmp cmp push cmp cmp cmp cmp cmp cmp jge xchg mov cmp cmp cmp cmp cmp xor dec cmp xlat cmp jae xchg repnz push aas ja add add mov xor xor xor xor xor xor mov xor xor xorl xorb xor xor xor xor xor xor xor xor mov (bad) (bad) add adc cmp je test mov cmp cmp cmp outsl cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp gs add xor inc ds lods ds ds and xor ds dec aas pop aas movsl aas mov les lret aas in add add add sub add xor push xor xor xor xor inc xor jo mov movsb xor xor xor jae xchg xor xor xor insl xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor ds lea mov sti add sub inc aaa mov cmp cmp cmp jne call cmp test stos cmp cmp cmp cmp cmp cmp cmp cmp cmp sbb daa cmp cmp insl cmp cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sarb cmp stc cmp sbb xor jbe jg scas ds mov aas adc es sub xor aas data16 add add add pusha add add xor xor bound push xor xor xor xor xor fnsave repz add add push cmp mov cmp imul lret cmp cmp cmp xchg ds xor push aas arpl add add add xor insb xor xor xor xor xor xor lret ss ss cmp cmp cmp cmp cmp cmp cmp cmp add jg scas ds aas es sub push aas popf aas test aas fistpll add add add add pop xor xor xor jae (bad) xor xor xor xor xor xor xor xor xor xor jb mov cmpsb xor xor xor xor xor lea xchg xor sbb xor xor xor xor xor xor xor xor xor cmp mov mov xor pop bound fwait lods ss ss dec aaa dec aaa jo jbe enter ljmp cmp ret cmp cmp insl cmp cmp cmp cmp ja mov cmp cmp cmp bound imul cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp pop cmp xchg cmp test mov mov cmp sbb ds cmp jg,pt mov xchg ds sarl jmp repnz ds dec aas push aas pop aas test xlat aas add add add add xor xor xor push xor xor xor xor xor xor xor xor xor xor dec xor xor xchg lods xor (bad) xor xor xor xor xor xor jno sahf xor pop outsl xorl (bad) loope in ss and and sub sub xor inc aaa dec aaa push aaa pop aaa fs outsb aaa jae jl (bad) aaa xchg aaa lods aaa mov mov aaa fbstp jmp cmp cmp arpl jp cmpb cmp cmp cmpb cmp in cmp cmp cmp sub inc cmp cmp cmp cmp cmp inc cmp cmp cltd cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp jp test out ss mov and cmp jge add add add add add xor xor xor xor xor xor xor mov pop mov lcall ss add push aaa push aaa js xchg nop aaa mov out add sub xor cmp cmp (bad) cmp out idivb sbb and cmp imul cmpsb cmp cmp cmp cmp cmp cmp cmp push cmp cmp jae jp cmpl cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp xchg cmp mov cmp sbb sub ds jg,pt repnz aas add add add jge test lahf xor xor xor mov xor stos aaa cmc aaa and insb cmp sarl cmp cmp cmp cmp cmp cmp pop cmp add nop add cmp add push xor xchg cmpsb xor xor xor insl xor xor xor xor xor xor xor fdivrs cmp push cmp mov add mov call xor arpl jb jle lods aaa mov push cmp push jns cmpb cmp cmp cmp cmp cmp je jnp repnz cmp cmp cmp cmp push cmp push cmpl xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp xor cmp push cmp cmp cmp or cmp cmp cmp cmp cmp cmp cmp cmp cmp sarl loopne or cmp dec aas xchg aas int3 aas fidivrl add add add add wrmsr and xor push xor jp (bad) xor xor xor xor jb mov push xor xor ss jl xorb aaa mov mov nop aaa xchg aaa cwtl aaa pushf aaa aad sub aaa cmp test mov mov nop cmp mov cmp fidivr jecxz repnz cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp inc cmp mov rolb clc add add xor xor xor xor outsl xor mov test xor xor xor xor xor xor xor xor xor xor xor xor cmpsl xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor jae xchg push test mov ss ss aaa cmp aaa jo xorl movsl aaa xlat aaa divb or xor cmp cmp cmc cmp cmp cmp cmpl cmp cmp xor imul movsb cmp cmp cmp cmp cmp cmp cmp cmp jge xchg pushf cmp cmp cmp arpl cmp cmp cmp cmp mov sbb ja mov add add xor pusha xor xor jns sahf xor xor xor xor xor (bad) xor xor xor xor xor add adc push cmp cmp cmp cmp cmp cmp loopne add add ret xor xor je xorl cmp or push cmp add add insb add add dec xor xor nop xor mov xor (bad) xor movsl aaa repnz push cmp cmp mov cmp cmp cmp cmp cmp cmp cmp idivb sub xchg aas leave aas loop add add add dec add add xor pop xor xor test lods xor xor xlat xor cmp mov cmp cmp cmpb cmp cmp cmp cmp cmp cmp add add add and add mov aaa fnstenv fnstcw aas cmp cmp ds add cmpl add pop add add xor xor xor inc ss ss es dec aaa xchg aaa mov cmp cmp cmp cmp mov sahf cmp cmp adc push cmp cmp cmp cmp cmp bound cmp cmp cmp add add add nop add add xor xor xor xor xor xor xor jecxz divb insl aaa pushf aaa sti aaa cmp pop cmp cmp cmp cmp cmp cmp cmpb cmp cmp cmc cmp cmp cmp cmp sub aas ds ds mov ds ds ds ds aas adc and sub inc aas push aas push aas outsb aas cmpb aas mov aas sarb add add add add adc sbb pop xor dec xor pop xor xor fnstenv aaa xor xor xor xor xor xor xor xor repz or adc sub xor test cmp cmp cmp cmp cmp cmp cmp ds mov aas xor aas jns aad out aas add add (bad) xor xor xor xor ret xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor dec xor xor xor xor xor xor xor xlat aaa fbstp out aaa dec cmp cmp cmp cmp icebp cmp add add add add xor xor xor xor pop xor iret xor ds ss aaa dec aaa push aaa push aaa pop aaa bound imul jle test mov xchg aaa fwait aaa mov aaa (bad) aaa lds lret aaa aad fidiv jmp cmp cmp dec cmp cmp cmp cmp sub add add add add add sub xor xor sahf xor mov lds mov inc cmp jbe sahf ds push aas add add sbb and sub push xor mov xchg xor loop push xor xor xor xor xor xor xor xor xor dec xor jg lea mov xor xor xor xor xor xor xor mov aaa sbb aaa cmp mov fnstcw sti cmp cmp dec cmp xchg fwait cmp cmp cmp xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp adc dec ds jo,pt cltd ds ds add sahf xor xor repnz xor xor test xor xor xor xor xor fdivl mov ss ss cld sbb and xor xor aaa xchg aaa movsl aaa add cmp cmp test mov cmp cmp cmp cmp cmp dec cmp pop cmp outsl cmp mov stos cmp cmp cmp cmp cmp cmp cmp cmp popf cmp (bad) cmp and daa ds dec ds jo,pt jne jge cmpl ds ds ds movsl lods ds mov sarl fdivrs fidivr loop call ds aas sbb aas cmp cmp aas push aas gs imul aas xchg aas lcall add add xor xor xor xor xor daa xor cmp jae jl mov (bad) ss adc sbb sub gs ja xchg lea and sub aas cmp dec cmp imul cmp mov sarl fdivrl in hlt cmp cmp cmp cmp cmp gs cmp cmp cmp cmp cmp ja,pt mov mov add add xor xor xor xor xor xorb xor xor ss ss ss lcall cmp cmp cmp cmpb cmp cmp cmp adc add scas xor xor insb xor add add add mov add mov (bad) xor xor xor xor pop xor jns lods xor xor xor ret xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor dec xor pop xor fnstenv call xor cld xor push ss ss fbstp pushl lret aaa loop js test cmp cmp and dec ds xor imul mov loopne add add push xor xor xor in xor xor xor xor xor pop xor xor xor (bad) xor adc dec ss (bad) bound test sahf aaa stos aaa loope push cmp mov lret cmp cmp aas add add add push xor xor xor xor jo je js jl xorb mov mov cwtl movsl ss cmp outsl cmp cmp cmp cmp xchg cmp cmp je mov (bad) cmp cmp cmp cmp cmp cmp cmp cmp cmp jge xchg cmp add add add cmp add mov sahf xor xor xor xor push xor xor xor xor xor xor xor xor lods cmp cmp cmp add adc add add cmp cmp cmpl sarl cmp cmp jb test xchg cmp cmp cmp cmp cmp cmp cmp out cmp add add add add add xor xor xor xor xor pop xor lcall xor xor xor xor xor xor xor or jbe cmpb cmp cmp cmp cmp cmp cmp cmp cmp mov add xor add add (bad) xor xor xor mov push cmp inc add mov add scas cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp test stc cmp cmp or das cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp inc aas dec aas push aas add add xor push xor in xor sti xor xor jbe mov xor xor mov movsl cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp loop cli cmp pop ds ds ds sarb out add adc sbb sub cmp pop aas ja add add add xor cli xor xor xor xor xor xor xor xorl in out aaa stc aaa add or cmp cmp cmp inc cmp cmp mov cmp cmp cmp cmp add jo add add (bad) xor xor xor xor xor xor xor ds ds jne,pt jl cmpl ds ds ds ds add add xchg (bad) xor push cmp cmp jno js pop cmp add add add jg mov xor cmp cmp mov add sbb and sub xor stos xor mov test push cmp cmp cmp cmp sarb sbb cs ds ds ds mov mov ds ds ds ds aas mov mov add add add iret aaa aas cmp ja cmpb cmp cmp add inc add add ss ss pushl or sub pop cmp cmp cmp cmp cmp cmp cmp clc cmp push ds ds ds ds ds add add add adc add add or adc add add add cmp add dec xor xor xor xor xor (bad) ss xchg aaa pushf aaa add and jb movsl cmp aaa cmp jle dec cmp cmp add add add push add add (bad) xor xor push cmp pop cmp push cmp jl cmpb cmp cmp cmp cmp cmp cmp cmp sarb out cmp cmp cmp sarl add add add sub cmp aaa cmp aas add add pop add add xor xor xor xor xor xor xor xor dec xor xor xor cmp inc xor xor xor adc aaa lds fdivl push cmp cmp daa cmp cmp cmp cmp cmp ljmp add add cmpsl xor xor xor xor xor xor xor xor xor xor xor xor xor xor pop xor (bad) aas add add je add and xor xor mov ss ss ss and aaa (bad) aaa adc push cmp cmp push mov lock cmp scas cmp cmp cmp cmp mov cmp cmp cmp cmp cmp cmp popf cmp jae mov ds mov mov inc add les add sbb xor xor xor xor (bad) xor xor xor xor nop xor xor jge out inc xor les fnstenv adc and sub xor cmp inc ss ss xorl mov mov ss aaa or aaa das aaa cmp inc aaa push aaa pop aaa insb aaa xorl mov aaa lds (bad) aaa repnz adc sbb sbb cmp pop cmp jno jl mov mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp add push add js add in call xor xor xor xor xor or adc sbb and sub cmp inc xor pop xor xorb xor mov xor nop cmp cmp mov mov mov cmp cmp cmp cmp cmp cmp pusha add xor add hlt xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor xor xor xor xor xor xor xor jo add add add xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor dec xor pop xor fs jo je js jl xorb cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp pop cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sbb xor dec cmp adc sbb sbb and and sub sub xor xor cmp cmp inc ds ds ds ds ds ds ds je,pt js mov mov nop ds ds ds mov ds mov les call ds add nop add or add inc xor dec xor pop xor fs jo je js jl xorb xor cwtl xor movsb xor mov mov mov xor int3 xor fdivs in call xor cld xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc ss ss ss ss ss ss ss ss ss ss js jl xorb mov mov nop ss ss ss mov lods ss mov mov les enter (bad) ss fdivs fdivl loopne in call ss ss ss add add or or adc adc sbb sbb and and sub sub enter sarb aam call mov add enter (bad) ss fdivs fdivl loopne in call ss ss ss add add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc aaa inc aaa dec aaa dec aaa push aaa push aaa pop aaa pop aaa pusha aaa fs jo je js jl xorb aaa mov mov nop aaa xchg aaa cwtl aaa pushf aaa mov aaa lods aaa mov mov mov aaa les enter (bad) aaa aam fdivs fdivl loopne in call aaa hlt aaa clc aaa cld aaa add add add add sbb add cwtl cmp enter loopne in cmp cmp add add add aas cld aas add add add xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor adc cmp dec xor pop xor mov mov xor in call xor and xor xor cmp inc ss ss xorb mov nop ss mov ss ss fdivl hlt ss or sbb sbb and sub inc aaa push aaa push aaa fs push aaa mov pushf aaa mov aaa (bad) aaa aam in call aaa or sbb and xor xor cmp inc cmp push cmp cmp mov cmp cmp cmp cmp cmp cmp adc and and sub sub xor dec cmp cmp cmp test lods cmp loopne lock cmp cmp cmp cmp cmp cmp inc cmp cmp cmp jo cmpb cmp movsb cmp loopne in call cmp cmp cmp sub xor dec cmp cmp cmp cmp sarb aam fdivrs fdivrl in cld cmp adc cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sub mov sarb lock xor push aas insb aas jo nop aas mov sarb lock add add add add add xor xor jo nop xor loopne add and sub dec xor xor xor xor xor xor sub dec xor xor mov les int3 xor xor xor xor xor xor xor xor xor xor and sub cmp inc xor jo js test mov xor xor xor xor and xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor cmp push xor fs mov pushf xor (bad) xor in call xor or sbb and sub xor cmp inc ss ss ss ss ss mov fdivs adc sbb and inc aaa push aaa jo js xorb aaa nop aaa pushf aaa mov aaa fdivs clc aaa add cmp pop cmp push cmp cmp cmp cmp cmp pop cmp mov cwtl cmp cmp cmp cmp cmp cmp adc xor cmp pop cmp mov xchg cmp cmp cmp cmp cmp cmp dec cmp jo js cmpb cmp in sub cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp push cmp enter fdivrl or sbb pusha jo,pt test cwtl movsb lods les sarb lock ds sub dec aas push aas pop aas jl test nop aas mov aas lock clc aas add add add add add xor xor xor mov pushf xor xor xor xor xor xor xor push xor xor nop xor call xor sub dec xor xor xor xor xor xor xor xor xor cmp dec xor jo js xorb xor fdivl lock xor sbb and sub inc xor xor xor xor xor xor xor xor xor xor xor xor xor sub pop xor je xchg xor enter fdivl or adc sbb sub dec ss ss jl test mov xchg mov ss fdivl cld or sub xor add add add jo cwtl xor test lods xor xor (bad) xor xor xor xor xor xor xor xor xor xor xor cmp cmp adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp les enter sarb aam fdivrs fdivrl loopne in call cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp inc cmp dec cmp jo je js jl cmpb mov mov nop ds ds mov loopne add and inc aas fs nop aas mov aas lock hlt aas clc aas cld aas add add add or xchg xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc xor xor xor xor xor xor xor xor xor xor xor xor xor or adc sub pushf xor sbb add mov cmp cmp cmp cmp cmp cmp cmp or rolb add and inc cmp cmp cmp mov cmp cmp cmp cmp cmp cmp cmp cmp add push add add jnp sub dec xor xorl jle int3 xor xor xor xor inc cmp cmp add add push add add add xor xor inc push add add fnsave cmpsb xor lcall cmp cmp cmp mov push push add add adc jl das xor nop xor xor pop xor xor xor aaa lods cmp cmp add add add add add test adc pop xor xor xchg aaa jecxz js repz and add add add add add add push aaa cmpsb aaa or cmp push add add lret cmp cmp cmp cmp push add add add xor xor mov mov cmp cmp cmp cmp cmp idivl add add add dec xor xor xor xchg xor xor inc cmp add mov add add mov rolb and add aaa aaa imul mov (bad) cmp dec ds sbb js add push add add lods xor ss aaa out cmp aas add add push add add inc xor xor xor xor nop xor daa cmp data16 cmpl cmp cmp cmp cmp cmp mov aas add push add add add and cmp dec xor xor xor xor and and dec xor xchg xor xor mov mov (bad) xor or xor xor xor xor xor xor xor xor xor xor xor xor cmp inc xor dec xor mov xor cmp jo mov nop ss fdivl loop sub aaa mov loope inc cmp cmpsl cmp cmp cmp cmp pop cmp jae mov mov cmp cmp cmp cmp loopne (bad) cmp sarb sarb out add sbb and aas dec aas outsl aas cwtl aas test add add add add add xor xor data16 mov loope out repnz xor xor xor xor jns mov test xor xor xor xor adc xor xor xor xor xor xor xor xor xor xor xor xor mov ss movsb ss push aaa adc sbb sub cs inc aaa push aaa pop aaa xorl aaa xchg aaa cwtl aaa sahf aaa movsl aaa stos aaa mov mov aaa (bad) aaa fdivl loope out in aaa lock divb sti aaa push cmp cmp cmp dec cmp pop cmp jbe jl mov test cmp cmp inc cmp test mov sti cmp cmp test xchg ds aas add pop add add xor xor xor xor ja (bad) xor xor xor sub push xor mov xor xor xor adc xor xor xor xor xor xor popf xor sbb imul (bad) xlat ss xor gs movsb cmp cmp cmp cmp ds aas add pop add divl sbb xor cmp inc xor push cmp cmp cmp cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp mov cmp cmp xchg ds fstpt in es addr16 sti aas add add pop add add add xor mov (bad) xor xor xor xor cmc xor xor xor xor xor xor xor xor xor xor xor xor dec xor imul lods xor in pop arpl jl (bad) ss aaa push ret cmp sub inc cmp sarl cmp cmp cmp cmp sub dec cmp imul cmp cmp mov lea sarb add adc sbb sub xor inc ds arpl imul jge lcall ds ds jecxz,pt ljmp aas adc and es push aas push aas push add xor test into xor xor xor sub xor jo (bad) fdivl hlt ss aaa push aaa enter lea lahf cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp adc pushf cmp lods cmp sti cmp cmp cmp inc ds ds ds ds ds lods fnstcw add add add xor (bad) xor xor sub pop xor mov mov cli xor xor xor xor xor xor xor cmp xor xor xor xor xor xor xor xor xor xor xor xor cltd xor loope in xor pop aaa popf aaa sub dec cmp cmp cmp pusha pop add xor xor xor fnsave or sbb xor xor jne jl mov xchg xor call xor js or sub xor xor xor pop ss cmp xchg int3 cmp cmp cmp cmp sahf cmp cmp cmp mov loope repz cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp into ds fidivrl loopne out out ds ds add or adc sbb and sub xor aas dec aas push aas pop aas addr16 js lea cltd aas clc aas add add add imul add xor popa xor xor xor xor xor xor xor xor xor xor jno mov xor xor xor xor xor xor xor sahf xor pusha cmp jno mov pop cmp cmp cmp cmp cmp ds movsb js,pt jge (bad) aas add add xor aas xor mov les int3 xor xor xor xor xor xor xor xor xor xor jge mov xchg xor xor xor xor xor xor xor xor xor xor xor xor xor xor nop pop add add add xor xor xor xor xor xor xor xor xor or les enter add add call cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp xor cmp inc cmp dec cmp pop ds ds sarb aam fdivrs fdivrl loopne in call aas hlt aas clc aas cld aas add add add add add or or adc adc sbb sbb and and aam fdivs fdivl lods xor xor xor xor xor xor xor adc sbb xor xor dec xor xor xor xor xor xor xor xor xor xor xor sbb and xor xor cmp inc xor push xor mov mov mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sbb xor dec xor pusha xor test mov xor pop ss ss enter add or sub inc aaa dec aaa push aaa enter or sub inc cmp cmp test mov test enter hlt cmp cmp cmp pop cmp insb cmp js jl xchg cmp rolb add add add add sbb and cmp mov xor or sbb sub dec ss ss ss ss ss aaa add or adc sbb and sub xor cmp inc cmp cmp cmp cmp cmp movsb cmp les dec cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sbb sbb and and sub sub xor xor inc cmp pop cmp cmp fdivrl call cmp cld cmp cmp pop aas jl movsb aas les enter add pop add add sub dec xor xor or or add push jns add add add cmp out xor xor xchg xor xor mov arpl mov push cmp lret cmp aas add add mov or xorl add add popf xor mov cmp or and add xor insb xor mov cmp jg lock ds ds add add test in dec cmp cmp add add add xor push cmp rorb add add add xor gs lods ds or sbb add push xor cmp cmp cmp mov loope add add or adc add sbb cmp dec cmp pop add or adc add xchg xor xor xor xor pop cmp adc add add dec xor xor xor cmp cmp xchg cmp cmp and add add or add add or adc add es cmp add add add add xor outsl xor xor nop xor xor xor xor xor inc aas add add add add xor xor push xor pusha add add add add xor xchg je push cmp or ja mov add add add clc xor inc aas stos aas fidivr add add add push push xor int divl (bad) aaa (bad) aaa mov cmp nop or sbb add cmp xor stos aaa popa cmp lea lods ds add add sbb fidivl add or cmp add add add lcall xor cmp cmp push cmp cmp cmp add or adc add add xor jge movsb aas add or sbb add ja cld xor loop push aaa cmp xlat cmp add add add out dec xor ss repnz adc dec cmp cmp lock and add xor cmpsb xor xor xorb xor xor xor int stc cmp add or sub add cmp fwait xor xor xor xor xor xor lret xor inc cmp ljmp adc add add pop xor xor xor stos aaa scas cmp cmp cmp cmp cmp or sub add and scas and jno push cmp cmp cmp cmp cmp loopne test mov aas cli aas add or xor add and loop sti xor xor jmp xor xor outsl cmp cmp dec ds fnstsw leave aas in add add add fidivl xor lret xor xor xor cmp pop aaa outsb aaa nop aaa lds cmp scas cmp cmp cmp or pop ds mov add add add add cmp outsl aaa sarb cmc cmp aas add add add mov mov sti cmp and add add add add add cmpsb xor xor aaa xchg cmp cmp add add test pop xor xor xor (bad) xor xor xor or adc add mov lret xor add add out push xor ss ja add add add cli xor jbe lods cmp cmp add rorb and add dec xor xor mov add aas cmp test rorb add add add xor cmp cmp cmpb xor (bad) aas add add or sbb add fnstenv pushf xor aaa call cmp add or sbb add je scas xor mov cmp add add or sbb add lahf xor xor daa cmp cmp sti aas add add or sub add nop xor xor xor fdivs pushl xor xor xor xor xor or jecxz mov cmp and add add add xor loop add xor xor clc or scas cmp cmp cmp mov adc and add add or or add dec ss cmp inc or adc add (bad) divl pop aaa pop aaa dec cmp add add cld xor xor xor fdivl mov jecxz pop cmp cmp cmp ds aas add add add lods xor xor dec aaa pop aaa popa cmp jmp jo add add lea mov xor cmp into cmp cmp cmp cmp cmpb orb xor add lock xor xor ss ss aaa hlt aaa cmp mov or jle lahf cmp cmp movsl aas add add js jo jbe mov xor ss cmp aas add add sbb jp sbb sub xor test xor or inc cmp xor mov mov add add add cmp jne pop cmp cmp rorb cmp add and push xor xor xor xor xor xor xor and aas cmp cmp movsb cmp cmp aas xchg cltd aas lret aas add add or sbb add out xor sarl push cmp cmp cmp cmp add or sub add push xor xor xorb cmp jp fidivr dec cmp cmp cmp cmp lock sbb add out push ss cmp cmp add add or adc add iret xor xor cmp add add or xor add popf xor xor out or fdivrl sub fnstcw push cmp add cmp sahf ds out test sti aas add add or and add jmp xor jle fdivrl outsb ds ja mov add xor and add push xor xor cmp cmp cmp jne add add add add xor sub cmp dec cmp cmp cmp aas add add add add mov and xor inc cmp dec cmp ds add add add add aaa push cmp cmp or and add push xor pop cmp cmp cmp cmp cmp push aas add add out push xor xor xor jo loop add add mov xor (bad) adc dec aaa adc arpl xchg fwait cmp cmp test cmpsb aas add add cwtl xor xor fdivl jnp in cmp mov aas add add mov aaa (bad) jecxz add add or xor add mov pushl pop xor xor xor xor xor das aaa adc out xchg cmp cmp cmp cmp ds ds or sbb add aaa add sbb xchg aaa and push cmp cmp cmp adc add xchg cmp cmp pop cmp cmp ds or adc add bound cmp cmp cmp add or add cmpsl xor xor xor xor pushf xor aaa ss cli cmp cmp add or add xor xor std ss aaa test sub insb ds add or add xor xor xor xor cmp cmp cmp (bad) cmp jne add add or add xchg xor movsb cmp nop add add add add add xor xor xor adc cmp cmp cmp add add add add push xor xchg in add add add add cmp cmp aaa add jo add add push xor xor xor test aaa xorb aaa dec cmp cmp cmp add orb fs cmp cmp add nop or add xor aad and xor les nop aaa mov cmp add mov add sbb mov xor cmp clc cmp std cmp cmp cmp cmp cmp aas add add idivl add add or add pop xor xor ss ss push aaa (bad) aaa mov rorb add cmp sbb inc cmp cmp add loopne add add add xor xor (bad) xor cmp sarl lock add xor cmp cmp cmp add add add add into xor xor cmp aas add push add add add xor ss aaa (bad) aaa imul cmp cmp sarl loope add add push add add add aam xchg lea and add add push add add pusha cmp cmp gs cmp bound stos aas add add add fnsave mov outsl sarb data16 cmp push push add add add xor xor xor xor lret pusha push add add add xor xor xor xor xor aaa into cmp loopne sub add jo add add add (bad) xor xor cmp dec cmp add add add push xor jns xchg xor xor xorl xor mov fnstcw or enter add add add aaa xor int add add dec xor pop cmp cmp cmp cmp add sbb add pop xor aaa fidivrl mov rorb adc add mov mov and push jg,pt add add push add add popa xor xor (bad) xor xor cmp cmp cmp cmp cmp cmp fnstcw add push add add add xor xor xor xor cmp cmp cmp add add push add add add xor ss and dec aaa pop aaa xchg aaa pusha cmp cmp add verr add add xor xor push aaa jne idivl int adc adc add add adc xorl stc cmp ltr add mov test xor add inc cmp aas pop aas add add lldt add cmp nop cmp mov add add add add xor xor xor xor cmp cmp cmp sbb add add add add fdivs movsl lods cmp add pusha verr add add leave xor sub jns jno cmpb cmp jo add add add aaa push cmp add add hlt xor dec xor add add add cmpl sarl cmp cmp cmp mov add add test enter cmp xor xor xor mov cmp cmp loop add add add sub mov xchg cmp or rorb and add sub mov loope add clc aaa arpl aad inc cmp cmp aas add verr add and aas xor xor mov cmp cmp test add add verr add dec xor xor (bad) xor aaa or xchg cmp cmp cmp cmp sarb add lock add add ret xor loope push cmp cmp cmp add add add add outsb xor int3 xor add adc sbb add cmp mov ss aaa mov mov lods cmp call add add inc ss cmp cmp push add adc sbb add mov xor sub cwtl add add add add repnz xor xor or test or test leave add add add add cld xor call xor mov cmp adc add add mov out dec cmp jo add add add xor xor xor mov add adcb and add mov xchg xor xor xor inc ss cmp cmp cmp add add pop xor les cli xor xor add add cmp sub pushf xor xor aaa cmp cmp add add add mov xchg xor ss push cmp add adc and add cmp mov xor xor xor xor nop cmp add add adc sbb add xor push xor xor test iret test enter jbe add adc xor add pop xor xor xor sbb inc xor xor xor xor sub cmp jle add add adc sbb add pop xor xor xor sbb stos cmp add adc sbb add outsl aaa (bad) aaa sbb sub cmp adc add add add xor add xor add adc adc add add mov cmp call clc mov jmp movb movl pushf jmp out int data16 test (bad) icebp into or pushf jg mov jb pop push mov mov push sahf addr16 outsl xlat bswap cwtl es xchg push lret stc (bad) xor or and or daa push adc insl mov sbb mov incb mov (bad) pop test in negl lret push cmpsl into and rcrb lret arpl inc push das andps fwait jecxz cmc sbb pop and xchg pop fcmovnbe leave push icebp sbb mov xor test pop scas mov xchg imul scas jo dec and pop mov cwtl mov add jb cli incb mov cmp shl cmovg dec push jno popl sub push aas or or push add es mov in test (bad) mov xchg mov jg mov adc xchg iret out add fwait add jp xlat in (bad) sbb scas sbbl xor push pushf cmpsl push mov (bad) nop scas rolb mov and insb adc pop inc pop jmp mov mov or adc inc lds fsubr pusha (bad) js dec adc and push sub xchg xchg push sar add inc push jno mov int shrl test (bad) inc and je insb repz das add int3 adc pop addr16 pop lahf jo jecxz mov daa sbb mov cwtl test jmp cmp mov outsl adc movsb add (bad) mov pop cmpsl cmpsb fsubrs push pop push dec lret nop adc lods hlt insb cmp dec adc mov jl bound addb insb xor xchg outsl andb dec mov das push sarb add fs pop repnz js inc out mov push fldenv les in sarb sahf add fnstsw jno lea fs ja sub jmp and mov push sub sub mov mov pop imul aas dec fdivp (bad) sub jbe (bad) sbb lcall mov xchg cwtl xchg (bad) xor out pop pop dec repz dec push popa dec dec movsb aas mov fs mov loopne mov sar lret loop out adc sbb mov jg shlb push movsl cli pop out inc sub xchg xchg movsl mov adc sbb xor cmp jp jnp mov adc mov data16 repnz or and sub mov mov cmc jl and push mov into test mov pop xchg ret inc xchg push push xchg popf fdivrl sarl aad in int3 repnz mov inc dec and sub pop inc fsubr lahf (bad) movsb clc or imul movsb mov cmpsb fldl2e imulb cmp lods fs mov jo (bad) jecxz dec add orl cmp cmp cmp and xor sbb iret xor je and xor out out lods repnz loopne into push dec xor cwtl int stos sbb sub cmp dec les leave mov jno cmp lods sub jae push push push cmp in repz daa cmp call mov js push leave push cmp dec xor aaa mov test xor mov xchg dec pop pusha sahf iret xor inc test push mov scas repnz scas shrb and mov aaa push mov aad push or movsb xlat enter mov pop mov out call jmp or push call push pushl lea jne clc mov stc add test push movl movzwl pushf movzbw rcl bsr mov pusha clc test push add cmp call data16 insl jle (bad) sbb outsb mov fildl cwtl out cwtl rclb jbe test push and pop jo out std dec adc adc and test jbe lcall out in mov and je pop out notb jno bound mov cltd jmp mov rorb or mov mov xchg popl ja test int cmp test or or (bad) jns jb or push fistp add push sbb push push push movsb cmp dec (bad) pop iret lock xor sbb adc into xor jno mov sbbl dec add call mov mov bt pusha cmp jmp pop test mov jp jae shrl bound lcall (bad) fist repz mov adc jnp or cs mov sti in fs sub inc pop mov xor pop je push xchg inc push dec xchg call enter jnp shr push cmpsb cmp sahf test js in shrb shl (bad) sub dec jo bound dec fwait test add (bad) xor cmc dec and push cmpsb cmp xor roll add pop decl (bad) dec pop sub xchg sbb cmp sbb xchg mov mov or cs mov sub daa cwtl jne mov mov pop (bad) aaa cmpsl lret aad decb jno mov shr cmpsb dec add xchg push mov or insl sti fs mov or out xchg or call sbb inc pop fsubr stos adc fwait push repnz inc dec push fbld fisubl clc aad push jae push mov in out arpl mov (bad) clc cmpsl push push out adc xlat call insb fbstp orb and cmp ffree jno leave cmpsl mov jbe adc std mov jge pop add enter xchg push fistp out (bad) je dec ret loopne iret adc stos mov divl in sbb es sbb cmp pop lcall jno mov lods jbe scas das mov (bad) xlat test jmp arpl sbb lcall fs and dec push insl mov in cld bound lds test cmp (bad) dec fiadd dec nop inc add pop push outsl jbe mov ror jne cmc loopne mov sahf add and mov fstps add jmp pusha (bad) mov push test loopne pop jo es out sbb (bad) aad pop fiaddl jno (bad) ds enter lods jb movb andl mov sbb out rcrl pop fldenv lcall push test add mov sbb jge xor cmpsl imull mov mov insl jmp movsl sbb and jb cwtl movsl push scas (bad) pop (bad) lock adc neg adc int3 shr std pushf add sub pop cmp and shl test test xorl jp push or and pop stc fs xor movsb faddl or pop (bad) (bad) jg adc ljmp mov mov mov bound hlt lret aam enter inc adc scas (bad) repz adc sbb and sbb lock sbb add dec fldl fucom push repz adcl xchg je jo lahf mov push xchg or push outsb push rep mov stos in and xor inc stc add ret mov xor imul xor fildl or add stos jmp popf add xchg or clc stc or in aad push rcrb aam into nop mov sub cmp std movsl cmp xor xchg lds cmp jp xchg sub lds push cmp sub fdiv bt mov push call je jbe push add stos push nop stos jnp psubq dec in push or pushf mov call stos xor icebp mov lcall lahf xchg pop cmpl test pop int and scas mov or push in pop in add sbb popf mov pop push jnp jg xor faddp jns lret imul jge loop imul add into adc (bad) xchg jo add into (bad) testl setb pop xchg sbb addr16 test ret popf push mov insl sub add fwait jecxz xchg jnp lods xchg xor or shrl push mov pop popa sarb push fsubr adc fbstp loop mov mov jb mov cld cmp mov sahf rclb xor clc or jp xchg sbb in lock clc cmpsb push xchg pop xchg imul adc cltd jl int3 stos hlt ret mov jb data16 stos jmp cmp inc mov sub jp pushf stc imul (bad) js test icebp adc dec rcrl pop addr16 and pop test xchg push orl jmp ror mov clc cmp xadd sbb mov ror bt inc neg mov cmc bt sub pushf mov push bt repnz pusha lea jne sar test xadd mov pusha movw sub jmp jb je insb das push xchg orl or adc insl (bad) xor pop out pop xchg sti test jmp sbb add lds out or out cmp repnz loope mov fsubl (bad) (bad) in test mov cmp add imul add xor popa fs cld inc into push je mov jecxz in xchg or jmp sarl push lock sub cmpsb js js fs (bad) scas leave xchg ljmp push mov outsl ror mov popf add sub or bnd inc pop pop pop jnp lods jno push mov mov lods mov pop (bad) jnp adc mov jo jns xlat xor pop test xchg xchg lods mov cmp or xor push mov mov jbe into xchg jns rorl jge cs lds (bad) std push xabort gs repz repz pop outsl lret addr16 scas push mov dec xchg or jo,pn inc jle stos hlt add imull push and jbe (bad) (bad) leave sub out shr mov and cmp cmp add (bad) nop cmpxchg enter adc das push cmp test ret cmp push jno mov mov push imul int3 push cmpsl shrb js ret cmp pop (bad) lret xchg push sub push loopne xchg mov lret sti cmp xchg in stos aam pop or mov jge xor pop cmp sahf mov in pop (bad) mov leave sbb sbb sbb mov adc inc orl adc inc loopne aaa test adc (bad) dec mov mov add jecxz pop (bad) add mov cwtl sub pop rcll lahf (bad) sub and lds cs jge mov bound test test into rcrb insb xor pop adc not push lea mov pushf mov lea jmp jp cwtl out in sahf rcl daa sbb and jne frstor outsb mov jge fimull in rcl pop in sbb adc pop lahf mov jg daa push or dec cli test leave aad and adc and lods adc sarb ret aam out das imul dec lock mov aad add sub sti in stos in dec dec pop jmp (bad) and or cmc xor mov out aaa cmpsb pop cltd and frstor sub fnstcw fistpl in mov cmp lret aam jno sbbb cmp add add nop loope flds inc sahf (bad) mov mov jecxz mov and loop push jns mov test shrb outsb fidivrl fisttpll adc hlt adc in insl xor xchg sub jle movsl cmp push arpl daa jp or fnsave outsl xchg push bound in or imul repnz imul jne ret jge test sub sub lods jae arpl inc push mov (bad) dec incl jge repz add xchg xor cwtl (bad) lock adc sub and daa jno mov fisubrl sarb fcmovnb nop scas iret out les lret adc mov mov sbb pusha bound cmpsb ret jne jns pop jecxz mov (bad) sbb dec adc push insb jnp addr16 faddl sahf rcl ss inc rcl int3 fstp sbb cmp jle mov scas sub push lcall psubsb cmpl cli and sub add aaa mov rcl rolb dec js repz or adc mov clc or js aaa dec xor das in mov inc cmc push jno jg or jnp imul (bad) mov dec lock push adc pop xor das jo or aaa incl insb nop js mov gs stos and or test test sahf xchg test movsl cmp in push adc mov cld sbb jb rclb sbb aam fild sbb dec mov enter or dec sahf or sub dec adc push cmpsl arpl push outsb jmp dec push cli gs jmp push nop mov sbb mov add leave pusha push jmp sub btr sub add cmp shrd push mov neg mov mov call or or jp pusha mov push sub ljmp pop xchg test ds dec or sbb shl dec xchg call test out mov or stos imul mov stc (bad) xlat std (bad) (bad) cmp inc mov mov jno jle frstor jae jnp inc std iret xor repz out (bad) cwtl (bad) enter and das adc and aam xchg stos push mov pop push dec es ss mov cli adc pop cltd pop int3 mov mov push idivl add dec push mov dec fcmovnb (bad) fnsave arpl xchg scas xor inc cli cmp and xchg jg lock stos imul mov ja cmpl push iret (bad) enter div jmp jno jle mov lret pop add dec sub stos je loopne,pn data16 mov add xchg adc in arpl or cmpsb jp popl sbb lds (bad) cmc insb add inc in jno imul adc into adc adc fcmovb add (bad) jge pop out aaa dec data16 sbb (bad) sub (bad) iret push loopne mov pop icebp dec pop bound pop cwtl xor adc in shll cmp adc lahf pop pop test popa fldenv mov test mov sbb or (bad) fcmovnb sti push movsb xchg popa cmp out push fsubs mov call das aas loopne mov out or jnp bnd jns xlat inc cs cmp push js cwtl daa cmp out addr16 mov cwtl insl scas xor clc push or or push daa pop addr16 iret das mov cli inc addl cmp dec mov loope shlb add jp sub mov pop lcall lretw insl push xchg adc and (bad) ret lcall push dec push test mov pushf add scas mov loop (bad) cmp pop add gs jmp loop and sub mov ljmp das mov int3 scas mov and push mov test rorb clc push jmp pop sbb cs push add hlt add imul jl push sar mov loope or xor ror mov (bad) sbb ss add icebp dec (bad) jno jnp or add cmp sbb hlt (bad) mov dec xor lock push inc out xor cmp and cld xchg test in mov inc lcall add in mov sub jle rorl push push sbb out ss ret jns inc (bad) aaa mov je dec and fldcw push fs and cmpsl jb,pn pop aad xchg jmp out fwait xchg outsb xchg scas iret scas shlb push (bad) les xchg (bad) repnz and xor sub push lret out rorb cli or jp popf sub mov pushl pusha movl push xchg setno movl bswap call lea jo jne sbb mov cmp call pushf pusha movl jmp pusha push sets lods test pushf lea jb sub jmp xor pop inc ds dec mov fs sub int loope rcll mov mov (bad) fistl das test sub jne stos sahf cmp mov mov jmp push stc subl mov std mov lock mov jne mov jg nop enter and inc cmpb mov shrl cmp (bad) jmp stos xor and jns cmc out mov mov xor mov (bad) pop sub dec push scas es fnstcw movsb sbb fildll popa lcall cmp movsl cltd xor icebp dec push cmp dec dec xchg push leave cmp (bad) or or mov sbb mov (bad) in lock jb mov adc out lret mov fcmovnb aam xchg mov sub dec (bad) adc or movl les mov out stos xor cmpsl popa std jle outsl aaa mov xchg inc popf dec xchg xor jmp adc push cltd out jecxz enter jmp jnp addl jno js shll mov sub test popa add call shr pushl lea je js pushf adc pushf pushf lea jmp test pusha push or pusha lea jne cmc rcl sbb mov bt test or push lea je lea pusha pushf lea lea push jmp pushl repnz lea jp pushf lea jne movsbw setl jmp inc ret push mov lret lds xor or jge jns push jno mov pop mov leave adcb lcall ss fldl in pop out push and mov dec (bad) pop imul pop cwtl cmpsl mov or jge mov mov lcall sub pop xchg loop push or incb jecxz xor push mov out sbb add jo jb (bad) loopne sub repnz pop les ret jnp sbb jb outsl or push lock arpl add fsubp xlat jg popf add jno scas cmp mov fdivrl int js push add call in adc dec je jno ja pop mov mov sub xor xchg sbb fdivrl in stos mov cwtl sarl and push sbb je mov cwtl (bad) pop addb test and xchg lods bound pop popa or in xor xchg dec popf inc cmp int3 jb sbb (bad) sbb pusha mov (bad) lret fdivrl fs push add add sti scas dec pusha xchg inc sbb jno jbe cmpsb popa mov xchg fwait test int fwait mov lock jae (bad) out push mov xor js mov xor scas jecxz shl jecxz ret stos xchg cmp cmp sub dec scas push sub jl sbb dec repnz sub add pop push jb rol test xor fcomi jae out outsl inc cmp push imul iret fisub or or push cwtl (bad) and xchg dec daa clc pop add js je pop shrb push mov (bad) scas shr cmp jno jne loop jge fs jne mov lahf lahf mov pushf pushf pusha lea jmp lea je pushf jmp pop imul out cmp adc scas jo mov fmull jne lret pop inc cmp int3 mov lret lock nop std movsb ror cmp dec dec push gs xor sarl jle jle mov lret jmp insb ja (bad) mov notl add sbb test in mov daa cwtl aam mov jmp hlt lea xchg dec adc lret mov lret jl orb mov sbb jg push daa cmpb mov xchg lock and loop fstpt mov pop loop repz xor aas cmp mov mov rcrb or mov rep pop cmpsl mov outsl scas in xchg es inc sar jb jg (bad) sbb mov imul in repnz clc cmp addr16 push ljmp ljmp testb jg xlat (bad) ret cli (bad) test add cmp cmp adc fsubs xchg or jns sbb cmp inc push rcr inc fdivs mov ror sbb imul ret loop iret and (bad) cmp mov lret pop je push aad sub push dec push dec pop adc xchg lea sbbb mov lahf loopne jmp faddp daa repz std call xchg pop mov sbb arpl push stc push (bad) push iret (bad) mov les xchg lret je adc arpl sarb mov scas fisub test in xchg inc lds cmp mov inc mov mov mov push mov mov push push test jne jmp loopne rorb and lock push dec lea out push inc lods orl fucomp (bad) das pminub xor adc cbtw rcrl jae imul rcll lret fdivl and xchg jo cmp and imul xlat sub jo aad xor adc or sbb enter stc movsl scas xchg push mov frstor jo cmp rorl out nop mov sbb jns mov lock inc (bad) pop xlat dec pop mov adc gs sbb out test mov frstor xchg and std add jnp movups stos std dec push movsb mov imul mov xchg scas pop adc nop out mov lods repz mov sbbb popf mov mov pop jb inc sub add add stc bsr setnp add push bsr aad mov daa das jmp xchg test mov mov pop xor or or sbb push xchg outsb call push loopne push mov mov cmp and jp push adc mov int sub mov nop mov scas aas or adc and mov popa nop into cmp ds or movb pop sar push sub stos adc ror sbb inc push mov ficom fistp inc ret fwait mov mov sbb lret mov fs add (bad) js mov pop test shll lock mov outsb lret mov fcoml and cwtl pop dec jno jno fidivl push leave repz sub add mov jp leave push dec push and test xchg sub movsb pop imul sbb or pop mov or jo or loope mov sub push mov pop and sub test push pop hlt pop mov and add negb cld test and and push pop and clc pushf ret aam ss pop jmp in rcrb xchg or ja js cmp ret sub mov mull mov sbb pop in rorl jo cwtl lods xchg xor cmp lahf push daa xchg pop out vmovapd mov mov add cli dec enter jl pop push clc cmp test fld1 inc add mov js xor cmc outsl iret cmpsl mull std loope rorb push cmp push cmpsb adc push dec or leave jbe arpl push sbb cmp xchg sbb inc inc pushf lods mov inc outsl and lret jmp cmpsl mov cmp add cmp xor dec ja out push pop sbb mov mov dec push adc jno outsl mov cmp sbb push mov push jne fldl push out out scas enter inc sbb testl cmp loop setb push das xchg add fldt out jl hlt in iret mov mov push fadds lods in adc cmpsb cmpsl idivb jne dec pop xor popa inc idivl (bad) mov dec xchg cmc imul xchg jb jge mov jnp mov movsl insb mov lahf cwtl (bad) push call (bad) jno outsl test fsubrs je pusha cmp jmp cmp dec or jmp fwait pop (bad) and or push lock rorl and lea dec pop push cmp xchg dec push add xlat call fistp xor mov jnp lret sahf pop cmp pop pop test mov stos pop lods inc rcl mov sub sbb fbstp jb sarb idivb lds cmp mov int pop mov out hlt push leave aad scas scas sahf loopne mov or ret sti pop in jno outsb out mov ret xor imul iret sbb mov aaa pop xchg outsl jl fninit xlat inc out (bad) movsb mov andl mov test clc and int3 adc aam and cltd jmp push loopne clc or add lea (bad) mov xchg lret fsts sub jno out sub popa ficomp xor insl sarb loope,pn push mov pop jmp repnz pusha ds dec cltd es push cmpsl pop dec mov idivb mov fucomi sub out pop or add mov fist jg,pt mov fiaddl push or add out imul hlt add popa mov inc ljmp add (bad) pminub ja (bad) mov mov loopne movsl (bad) push xchg cld (bad) jge mov bound leave sbb add xor jle xor aam cli xchg xchg (bad) push dec or faddp loope js and cld ret bound das or jno insl sub and push push mov jecxz xchg or mov jb jmp or push test xchg and xor cmp mov mov fsub (bad) xor bound push in mov pusha mov hlt mov mov jl jbe mov aaa jp xor stc insl rolb xchg mov insb adc fs mov stos lods cmp rdmsr xor sbb std add pop jmp stos fsubp or pop inc lcall add gs mov outsb push xchg cmpsl in jbe sub lcall das rcrb lret xchg arpl add sbb pop out stos jno insb push cmp cmp insl mov mov xchg cmpsl xchg clc sahf pop lock jl mov sbb add mov daa jnp in mov mov push adc (bad) sbb jg shrl fadd jne mov scas inc add outsl push iret mov inc mov loope adc hlt lret mov mov add push pop jg mov (bad) mov clc leave add and imul out mov sbb or dec fs ss fistpll leave dec inc push adc fild int mov enter loope,pt xor push aas sbb pop imul (bad) lcall addl jecxz add and rorl pop xlat dec incl lods pop addr16 nop ljmp stos jmp int loopne int jmp aas les in jl or test (bad) inc hlt aam cmp dec std inc int pop add ss xchg sbb into push sub dec lock push imul push out (bad) test push xor popf scas jno push inc mov sub int repz out and movsl out jae mov rorb sbb popf inc xchg pop out test pop xchg lods sarl mov sub loope add test cwtl scas nop push jmp in fistp jecxz push enter jo pop cmp jg push sbb mov call and into adc loop jg xchg repz int3 lcall push mov jl xchg lods mov mov sbb xor mov push rcl mov mov pop mov mov stos aas lahf incl mov jno push popa lcall (bad) (bad) std or (bad) cld mov gs dec pop xor daa pshufw mov xor leave cwtl add add daa pop mov cmpl mov xchg or inc out xor pop data16 sub and adc lret (bad) xchg jmp insb hlt aad adc subl por push pop lcall outsl fisub mov push pop lds test xor cltd and push mov dec xor mov cmp inc push mov std popa jg popa mov adc cmp addr16 ret or mov lahf movsb cli enter hlt imul popa jge jle mov lcall push jle add sub mov arpl jns add outsl flds jl jl push gs mov gs (bad) outsl insb mov iret xor sub xlat jl xchg ret ficomp pop insl push xorb aam int dec adc pop fisub sub dec cltd stos (bad) mov test mov imul daa adc mov out and pop fisubr dec addb cmp (bad) xchg pop push stos movsl or mov mov adc sub jmp jg jnp (bad) cmp jno int3 push out pop adc cmc imul imul push jb jp pop push jbe mov xor adc imul icebp dec or adc (bad) loopne xchg mov lods shl faddl mov pop jno ja (bad) jb ficomp into pop pop and cmp js mov or lahf mov int3 mov aas into xor aaa dec jae mov lcall pop (bad) sti jl dec out inc or inc jo jo aaa jbe lret rcrl sub pop shrl xor dec popf inc (bad) sahf add pop divl jo (bad) loopne mov jo stos cmp xlat cli movsl jp (bad) pop or mov lds pop dec xchg lods lahf mov inc adc fwait mov loope into or mov add xchg mov icebp incb shll inc cltd sub in sbb xchg out jo inc std pop pop pop aas pop aas sahf pusha mov repnz ds rorb in fimul inc cld clc or les das rorl in dec jno addr16 movb mov mov pop add fcom pop cmpsl mov jle push (bad) dec mov sti sub mov (bad) jl xor xor pop cwtl inc sub and leave (bad) mov in lret mov mov dec add sub sub movsl cmpsb incb add (bad) adc adc movsl xchg sub dec dec pop mov in std cmp push jae mov (bad) sub and out lds xchg (bad) inc push push pop jmp dec jo cmpsb js fs xchg mov push push push sub js cmpb sbb adc movl push sub rorb mov in loop (bad) pminub (bad) repnz pop cltd jl xchg cmp adc push jae pop sbb jecxz and insl (bad) mov push data16 xor inc xchg arpl mov (bad) faddl fimul lcall add dec rcl int in and push jmp and mov daa pop mov mov shrb mov loop cmpsl rorb mov jo sbb cmp adc push mov xor imul dec test dec or rclb xchg mov loope inc mov ret add mov (bad) sti add notl jmp lret fimull push pop sbbb mov xchg push mov (bad) or adc outsb push push insb mov std (bad) ds das jo pop movsb jmp decb jo int3 data16 push pop out movsl jp outsb jne jne cwtl es inc lcall pop ja jmp jne data16 cmp push push paddq adc gs inc pop inc adc outsb fldenv mov loop pop and push and inc pop andl test pop cmp mov push or pop ret into aaa js push loopne mov add xchg mov rolb orb insb in or push inc jg sahf dec xchg (bad) outsl out and das xchg sub adc pop cmpsb jmp lcall or pop arpl inc fwait arpl (bad) das fistpll pushf cmpl cmpsl jnp push mov mov out call cmp or stc cmc dec popf mov mov fistpll xchg fsubl cmp mov iret loopne push bound gs mov lcall imul lret btr mov and dec jae mov dec das cli cmp add adc and adc xchg add dec fsubl leave ja sbb orb adc aad mov outsl idivb mov std mov inc jg xchg rorl nop push sub movsb cmp (bad) jl mov mov mov stc jno fs mov shr cmc cmp mov pushf call push lea ja jmp push push mov push pushl pushl ret lea je sete lea call or and mov jmp test repnz (bad) out sub movsl xor movsb mov cli xchg call out inc push jmp stc (bad) push jmp test (bad) sbb movsb jnp test (bad) cwtl sbb lcall jl or loop ss dec adc adc mov mov lret mov lret fadd lods adc iret xabort pop mov mov movsb (bad) cwtl cmpsl mov fcmovnb inc cltd push lret jp inc sbb bound cltd lret setg lea xchg call hlt enter imul js pop sub cs sub pushf (bad) cmp sub add xchg rolb std rcl mov lcall test or xchg sbb cli cltd add pop out xor mov inc popf scas int3 ror ror rcrb push pop inc repz and nop into inc ficom out xor mov in ja pop movsb and jp (bad) push or data16 addl lret (bad) lock (bad) stc fisub mov les jno popa iret sarb pushl lea jne pushf mov jmp movl lea jae push push push jmp add inc gs outsl fs gs imul add push xchg fwait lahf rcrl mov push sbb xor aad mov jns add movsl sbb pop test inc add or mov bswap adc jmp scas xchg movsl dec cmc push mov test ret call jo scas xlat repnz sub aas test outsb xchg dec data16 cmp cmc xor xor jge mov push sub imul movsb sbb addr16 or rorb std icebp cs je jne xchg mov mov jno pusha lock inc lahf inc lds cmpsb lods xchg rorl sbb inc fnstsw sbb shr mov xchg sbb stos push jmp sbb dec jbe pop call adc xor cmp mov and es ret and mov imul or std sub subl std ljmp add mov pop xchg mov clc (bad) mov je mov scas rol fistp in data16 or jmp (bad) mov dec sahf and stc gs mov sub out call jno pusha sub add push mov arpl fildl push adc movsb jnp jnp push test ret pop scas scas adc fdiv popa mov jp mov nop cld outsl ss insl icebp add sub jge mov movb fstps jge jae sbbl jl es into pop (bad) movsl pop push nop out shrb xor sub outsb nop (bad) cld mov gs shr inc lods xor mov adc (bad) out nop (bad) jns mov or loopne jbe push mov bound fwait cli sub dec ljmp punpckhbw adc inc fstpt movsb cmp insb mov fldl cmp xlat cltd or mov push push jg pop xlat sub icebp xor mov pop jno push or push xchg mov cltd outsb pop ret in xchg dec repz and ds js mov out adc and xchg push cmp jnp push cs mov ja xchg jbe pop (bad) xlat adc jle sahf add push arpl xchg repz in adc jnp mov iret or es lea mov jno pop dec inc jmp cmp loop inc (bad) xor fdivrs sub pop les mov imul popf push in xchg sub fs push xchg add inc cmp fsubrs xchg dec call mov mov xor mov test push cmp xor dec pop test dec fs pop lahf mov xchg add cmpsb fmuls rol stc cmp and push hlt push mov stos mov pop xchg int3 (bad) cld in icebp sbb push jmp fdivrs in (bad) (bad) pmovmskb lods adc sub cmpsb cli jno pop sbb mov or cmp push mov lea je clc pushf movb cmp push lea je pushf push pushf cmp pushf lea je pushf lea jmp add inc outsl insl insl popa outsb fs imul addr16 add int3 add add (bad) and add dec sarl mov lods xchg js sbb push ljmp jl je and cmp jge repz out sti movsl xchg lock sbb cmc sub push dec xor imul pop ret add in incb lods dec fldenv adc jb push leave mov jnp pop mov push add mov and mov mov imul popa dec jge pop xchg xor insb in repnz repz xor pop xchg stos lahf rcrb hlt push jmp or sub push sbb (bad) adc sarb loope or daa jno pop in mov and mov and mov lea jmp popa jl dec mov xchg push and jb mov das test clc cmp jle clc inc push ja cld mov push hlt leave out hlt xor adc movsl pushf mov clc lahf add dec popf test (bad) pop mov and test or fs sahf inc test push movsl pop inc cmp lea testl push imul and lcall pop inc jae (bad) cmp loop test aas push pop fiaddl lahf xchg clc pop movb jp jbe add sbb add cli cmp insl push cltd lahf subb or mov mov ja out stc and imul ror outsb adc jno pop cli xchg dec mov call pop std std test xchg insb mov jo dec xchg into ret mov pushf mov pop jge xor cmp sbb jge cltd in or popf and aam pop lds jecxz das adc test jno jno xor inc out inc in xchg push mov push xchg push sub inc test or rorb pop (bad) inc jns cmpsl rorb cs sub sub (bad) repnz dec repnz into aam and (bad) adc sar inc jl fs cmpsb out cmp dec shl mov xchg dec push test add in mov adc xchg ds mov and test ret jae adc lds dec pop xor xor xor mov sub das push mov add in mov pop pop or std add addr16 jg cltd sub in repnz dec jecxz daa mov xchg ljmp sub xor xchg addr16 push in mov pop subl enter (bad) dec push aad jecxz pop lods xchg pop jno pop mov div (bad) pushl push cmp sub sbb or pusha shrb cmp hlt sbb pop inc pop xlat mov gs jp add ret xor pop and out cmp movb jo (bad) lcall (bad) dec mov (bad) fbld cmp xchg xchg fs xor and dec test (bad) mov add xlat mov sub adc ljmp fstpl mov inc mov cmp mov pop or jne push mov xchg mov adc jns add (bad) fcomps jno pop in adc lea call mov movb lea call call lret (bad) fstpl rorl imul arpl or jae push dec mov jecxz lret cmpsb clc dec cmp ja (bad) cmp xchg or (bad) mov daa pop insb sub mov mov (bad) jle cltd fsubr sti push insb cmpsl push add xorb testb mov inc stc cs mov jb push cwtl out lret mov xchg add mov stos mov jmp add test dec dec movsb mov adc mov jmp enter scas cmp mov cmp gs sub stc cmp movl call not pop pushf lea ja pushf call pusha sub pushf push ror push not clc xor call cwtl fldenv xlat loop les cmp dec jb mov in pop mov mov adc xchg push jns cmpsb mov lret or andb jmp (bad) (bad) and sbb movsl lea ljmp jb xchg jb fisub jmp mov leave out iret and pop xchg imul (bad) adc mov fs out or iret outsl cmpb pop mov mov ds push xchg int3 repnz call shll cmp rclb cmp (bad) daa cwtl jle add jo dec pop and cmp aad mov sub mov mov enter rclb (bad) push call add adc add push inc jb gs gs outsl jb add into xor jne ret pop in out cmpsb sbb outsl iret loopne inc or fistp lcall test xchg cmpsb out xor xor push add outsl aam stos paddb orb add xchg in mov rorb xor out pop out and jb lret mov push mov mov and pop outsb xchg push push aas mull fnstsw mov fcomi gs sbb cmp dec into mov pushf movd dec pop cltd lods (bad) adc jbe cmpsb fninit mov sahf xchg cmpsl (bad) test xchg mov jl jno push xchg inc lahf pushl popl mov push pusha pushl ret stc not cmc cmc jmp decl xor ret pop sub ret and push jmp mov xchg mov add fwait ret aam es dec mov stc and mov jmp sahf (bad) enter mov std sub mov inc (bad) pusha add lea cmp (bad) jecxz xor adc cmpsb jnp jo or push mov jl stos imul lcall xchg data16 jae add dec mov mov mov imul out (bad) pop sbb push jge push pop js jp out push pop mov dec das push cmp mov pop push cmp pop push pushf lea jne pushf jmp lea jne ror rcl aam neg xor mov mov rcl shl add dec add add mov bt bt pusha cmp test pusha lea je test cmc bt call push push xor xor fs insb add cmp fmull or push pop mov lock rorl lods out xchg jns inc (bad) mov mov dec adc sbb icebp xor loopne jnp mov aaa addr16 lret adcl outsl xor xchg into (bad) push mov push pop inc (bad) in inc xchg or mov sysenter jmp addr16 pop lret stos pop call andl fsubrl and adc xchg lret xorb and adc lret rcll push je pop pop sub (bad) in mov sbb mov mov sahf shlb or test push push cmp push lea jae xadd mov sub mov adc mov call mov movl push movsl cld (bad) repz push and sub xor jmp sbb call clc ds adc imull cmc mov adc ja jecxz shrl jnp mov fisttp adc mov mov ljmp in popa jp mov mov mov ds aaa dec pop hlt mov loop hlt data16 push mov adc popa mov xchg pop (bad) bound mov mov insl fdivrp jae add std inc data16 out mov (bad) jns dec inc ja cwtl (bad) fcmovu jecxz cld in icebp cmp mov pop pop mov jnp xor das or adc cltd push int and xchg ja mov aaa adc push cmp outsb rcl or fbld js lds ds push stc inc jns jnp mov jmp ficompl add push pop mul cld cmp mov lds scas mov jnp inc mov pushf lret call mov loope out push (bad) dec adc mov push jb mov push call pop adc loop cmp (bad) ja sbb pop fisubl es cmp jg adc xor sbb jle pop outsb jae cli mov mov xor cmp sbb das inc xlat daa hlt pop ljmp aaa xchg mov cmc xor sbb stos cmpsb clc adc sbb inc les dec jecxz pop gs push mov aam adc pop adc inc push dec add cmp scas loopne fbstp xor xor mov stos hlt jp repnz insb ljmp fsubrl mov xchg sub popa popf scas xchg mov dec sbb push addr16 jne cmp push lods out gs mov push add or add mov out (bad) mov adc add jnp pop sbb sbb sbb and xchg scas popf inc mov push gs testb outsl xchg inc jno stos push pop cltd lahf js push sub adc dec cwtl xchg inc cmp sbb mov mov push mov out jno push and push bound (bad) jne fwait jge popf ret inc push bound popa std push jo inc (bad) ss mov mov scas or repz push mov aad das loope incl inc add push xchg pop fisubl stos push mov mov (bad) mov cmc stos test sub sub mov ret aam (bad) pop pop cwtl cmc mov fcomip cmp xor pop and into push popa and gs or pop addl sub sub cld sub jl add adc icebp lea movsl mov adc aas into xor jns mov mov jno push dec inc pop xchg test sarb xchg xor cld jecxz out das rorl shrl mov psllw fbld sahf scas data16 pop push inc lcall (bad) loop (bad) insl add sub andb lcall loop fbstp imul or movsb jnp push push cmp icebp pop fldcw xchg call cmc or mov pushl push and cmp cs divb and sahf inc (bad) xor loope xor into push mov sub aam xchg in cmp daa incl xor rolb pop push jnp jmp aam out sub jae insb sarb js loope xor sbb aad cmpsb dec idiv or (bad) xchg dec mov pop inc jle data16 mov mov mov lahf or fs xchg insb push jo outsb int add or xchg popa test movsb sbb cwtl lods push repnz xlat adc sbb popf mov xchg mov pop cltd popf mov (bad) xor adc cmc mov test das mov mov cmp repz movsb popa imul icebp sahf imul and lea jmp add call add inc gs gs imul rcl xchg jmp xlat call mov andb data16 insb xchg or mov mov cli inc xchg test imul je lock pusha adc in sub xor leave movsl pop test push pushf cmpsl in xor (bad) stc pop arpl mov push ljmp push mov lahf jle mov dec jmp stos add (bad) scas cli add je fildl jmp test jnp test fwait add stc clc inc (bad) aaa and mov mov jo push jae out pop dec cs icebp (bad) cmc jmp sbb rorl mov jl mov clc out ljmp popf xchg test and and add push xor movsb jnp push dec fmuls stc sub ret jmp adc sarl and call xchg dec ret stc inc push (bad) cmp and push dec mov sub mov cmp lret cld movsb pop cmp sbb das jl pushf jb in int3 adc sti cmc xchg or adc xor sub clc rcrb inc addb jne add mov push sub test jno dec adc jge dec lcall fdivs jecxz jge pop xorb cmp sub mov mov add shl add inc push xchg lcall pusha (bad) xor data16 mov xabort test outsl rorb inc mov adc clc or pop mov into sbb push shl jge and mov in push js cwtl mov test mov (bad) mov or push dec push gs pop repz mov mov sti fs xor mov movsl mov cld dec inc outsl or mov stos popf loop push hlt or pop clc data16 pop push insl push (bad) leave push ljmp jl mov sub and dec mov jbe jnp mov icebp ret or loopne adc test xchg pop mov or repnz dec jbe xchg lret adc cmp test and push dec aam popf inc cwtl inc lock out fiaddl push mov cmp inc xchg cmpsl mov push rcrb test pusha (bad) push movl call jne xchg out pop daa push enter pop je (bad) enter and adc pusha pop (bad) jmp pop mov mov shll insb jecxz mov cltd cmp cltd fcmovu icebp cmp jae lods mov jmp and inc push das or xor lcall movl or fsubrp icebp push cmp rcrl jl daa sbb mov jmp xchg sub jle sub cltd in aas popf loop add jle mov push lods add (bad) jbe rol jg jl imul inc (bad) or imul mov inc xchg leave inc add mov add and and mov pop dec sti xchg push mov in aad pop mov in jp cmp adc out ror shr notl pop add sti test scas icebp add shl sbb adc fwait repz cs lcall ret sti dec notb sti out int3 clc mov pop loopne adc test test push leave fidivr sahf stos loop xchg xchg or pop pop inc jns shrb push jo ret pop insl xchg mov sbb fcom xor push outsl fsincos les les lods adc pop jmp jge mov push push stc out (bad) ss or lret jo push or mov loop or or push cmp stos mov (bad) aas cbtw mov movsl andl pop xchg pushf data16 inc xlat add in adc arpl aad in inc mov popa pop inc pusha ds cli gs mov leave mov out cmp loopne cmpsl cmp pusha pop mov bound int in insb stc inc push cmp dec pop xor dec pop jae jl ja fwait lods cmpsl mov cmp push nop mov stc js push mov pop fs mov imul xchg add out or pop pop mov lods or aam fiaddl jno jg int3 shr mov lahf mov cmc mov or sbb call and pop popf enter pop mov or jl fdivr cmp (bad) lods mov repnz mov dec pop ljmp cmp jl mov fcoml in shl (bad) mov mov popf scas xchg sti in arpl (bad) mov mov cmp dec xor imul pusha mov jl arpl jno dec popa cs push pusha lea ja push push call lea jae call mov pushl movb push pushf pushl ret cld sub cli or cmp hlt push stos jae fwait push iret stos (bad) aaa (bad) fsub fninit lret xchg (bad) xlat adc daa pop jnp dec lock in jae dec push adc jp lcall es shrl outsb jg adc rclb (bad) std loope sbb rcll lahf push push popa fst repz inc test jmp inc adc xor in int and test mov or iret stos sarl adc lods dec ja jle scas pop mov gs insb (bad) repnz sub xor fisubrl insb jno dec test mov aaa test mov imul mov mov ljmp daa and es dec push stos push imul insb (bad) cltd es mov xchg sub (bad) inc imul outsb ret jae jnp xchg cmpsl hlt mov iret jle inc cwtl jb scas ffreep sarl inc pop addr16 or or sub push lods roll mov pop xlat xchg and cld arpl lret hlt scas adc std scas imul mov sahf lods mov daa jmp jmp jne jne xor push loop clc inc fwait addl enter mov mov inc jg test cmp pushl pushl stc call hlt jmp ljmp lods jae fwait pop xlat sub stos adc xchg loop dec mov test popf and sahf add cmp or enter iret adc (bad) mov mov cltd (bad) xor mov imul mov inc (bad) adc xchg mov nop lret push and jg insb adc and rorl dec rol sbb sbb imul rol bt mov call int3 movsl fimull test jmp int std dec sbb push in adc test mov cmpsb sbb cmp cmp out imul add cmp sbb or push xchg or mov scas or inc pop test jp fsub lahf mov add bound push push and mov in popa es cmp jb (bad) pop push lcall (bad) mov pop in xlat cmp je and pop pop jae fdivrl mov sbb ret nop scas idivl cmc mov mov outsl out add fildl mov ret loopne or mov insb sarb cmpsl push (bad) cltd sbb inc push jno js faddl fwait add pop insb lret and mov lahf dec out shr cmpsl aaa sbb add addr16 aas (bad) or int3 cmp add sbb or scas dec mov jno movsl clc inc mov std and repz cmp cmpl mov das adc sti or xchg inc cmp xlat mov mov stc add push shl daa cmp push or sbb mov mov cwtl xor cs push mov test sub lret jb inc fwait loope scas xchg mov inc sub and icebp fucomip xchg aad (bad) cmpsb mov call fiaddl aam lock out frstor pop pop jg pushf lods fistp xor push mov or jmp fs jno,pn xchg sub outsl es test and xor xchg mov mov fwait bnd or cmpsb sbb movsb lcall cwtl adc add add insl popf mov stos mov xor mov cmpsb lds push add rcl or sbb sub jo dec pop test icebp (bad) (bad) lret leave cmc fcoml jle adc fs xlat jae in pop mov mov imul lds fcomps adc mov (bad) std sub inc ds addr16 into jle pop mov dec imulb inc test sub dec das xor xor or cltd gs pop inc xchg int3 repz push push mov lea jmp shr mov cmp cmpb call rcr shld mov and jmp sub xor add dec addr16 pop sub mov push cmpsb pop fldt xchg or push loope in mov mov cmpsb adc add in in repnz repnz imul scas inc loopne (bad) fsubr xor pop mov cmp daa pop mov test in rorl test sub push clc (bad) dec pushf push in cmpsb or xchg xchg cld xchg or cmpsl clc test jne in in push push mov test mov xchg jecxz dec jne jno inc mov imul je lcall xchg sarl std jbe cmp fbld mov add or (bad) (bad) enter fcomip sbb and cmp ljmp mov lret nop scas hlt ljmp dec mov push and ja mov arpl in xor xchg inc pop inc pop cmpsb dec ja into and fstps into aam in pop jnp fistpl pop fisubrl jae addl outsb aad xchg and fiaddl lret mov jbe lar mov (bad) mov aas pop jae mov xchg sti mov cmc jmp sbb ret cld mov inc jp sbbl pop inc cmc lcall pop and out (bad) sbb pop xor lahf inc jnp mov sbb arpl jnp cwtl popa jge movsb mov inc push xchg les inc sbb pushf jmp mov mov fldcw jnp push xor js,pn call pop mov xchg dec pop xchg fsts ljmp xchg into pushf or in mov add lea stc sarw add mov push xchg stos xchg or nop or mov fs int call mov add imulb loope mov pop inc add fs jb cmc cmc cmp pushf call pop lret je pop lret xchg jmp mov lret call xor flds sbb adc loop and hlt xbegin icebp insl dec push jl jmp inc sbb (bad) dec xlat push dec (bad) inc xor jne aaa pop sbb push loop insl sti fs popf xor (bad) and and mov pusha in add mov bound aam lds dec inc pop (bad) mov lock or or push inc jp mov gs or or inc push dec xchg dec pop test jno inc aaa pop xor pushl popl push mov pushl ret lea jne pusha xor rcl movsbl bsr dec mov call mov call mov test test pushf push mov pushf lea je cmc cmc sub push movw movb pushf lea jmp jmp sub frstor cmp mov sbb or scas jae sub cmp inc test jnp out and imulb jo xchg ljmp call inc fistpl pop arpl sbb xor inc jl aas add mov addr16 xor mov std iret hlt pop negl inc cmp xor outsl jo or movsb in orl adc or leave sub xchg pop out das mov fld jo inc adc mov push imul jno push mov ret ds pushf je xor sar and cmp imul jae xor in mov xchg or jno aas cli xchg scas nop push lea je jmp add and add dec outsl arpl inc jb gs insl scas (bad) decl test add add lret pushf movsbl setl mov call mov shlb out lods or jae (bad) enter lods push add dec push mov rcl mov sbb cmc push push out inc fwait aaa push stc or cmp jge and js push arpl sbb inc cwtl ljmp lret aad vpsrld cs add or xor sarl inc push sub inc inc jno jbe fldl fisubrl rcr sbb sub cmpl (bad) sub jp lahf cs sbb outsl test das iret jnp jb and fdivl js add pop movzbw lea lahf mov mov pushf lea ja pushf call adc lea pusha pushl pushl jp ret test xchg mov fisttpll mov lahf fadds fistp ffreep xor lret hlt dec fistpll xchg lea sbb sub (bad) lret and addr16 sbb xor mov movsb cmp sub dec xchg cmpsl jb lcall inc jb gs jge inc outsl and aaa and (bad) push mov lock test (bad) or imul xor inc xchg or mov aam sbb sbb mov cmc hlt ljmp xchg enter cmp jp cwtl pop mov pusha mov leave xor neg (bad) sbb dec adc push jo movsb push lods repnz add les (bad) sub xor imul mov add or sbb adc in adc mov shll add mov xlat mov iret sti add sbb cli adc jbe cmp xchg mov (bad) (bad) js test jg cli dec cwtl pop daa and ss fistp clc xchg fiadd fstpt insb jns (bad) js pop adc jg insb xor pop xchg out jno cmp pushf cmp mov push add pushf lea je cmp cmc stc add push pusha pushf pushf lea jmp pusha lea call pusha call lcall stc push popa jns pop out jo shr xchg dec push inc mov or mov inc jbe adc mov add mov loope out push int push aad sbb addr16 (bad) inc mov and fwait mov push gs dec and lock sub cmpsl xlat mov cltd or xor out in fimull ret add fs cmpsl ja adc fild cmp movsl add mov and dec hlt push leave int3 repnz mov in or pop add aad jno cmp movsb cmpb inc and pusha pushf pushf pushl ret adc test into pop or jg xor adc fs push jbe jg push out jp sub jp cmpsl js mov aam fs jmp (bad) in add jbe in xor inc cltd mov or cmp aam in jae insb push xor jge lcall cmp dec test sbb jo cmp inc cmp insl jle pop cmp inc and pop pushf sbb call push dec dec push inc push dec cs insb add jne sub xchg mov psadbw loopne rcr mov lock rcrb and mov add out mov mov scas adc loopne stos ror adc push mov adc mov test dec lds repz sub add dec popf stos lret add popa (bad) jno jge out daa and xchg xchg aas mov sbb mov (bad) idiv faddl fmull aam cmc push call lret pop out (bad) nop movsl lcall jb lahf and adc shrb mov or pop cmp add add xor call add add push sbb add add add and add sbb add add add fcomps add sbb sub add push adc adc sbb xor add sbb cmp add sbb and sbb inc push sbb add add add jecxz add sbb dec push sbb add add add nop sbb push push sbb add add add nop sbb pop push sbb add add add lret inc nop sbb arpl add adc add sbb add add add nop sbb jae sbb add add add test add add sbb add add add sbb fs sbb adcl ficompl sbb add add add add add sbb je sbb xchg push sbb add add add loop add add add add add add and test sbb add add add and mov add cld jne aas mov jmp cmp in xor jb incl add dec notb into int enter mov push inc inc push adc mov sbb xor or push (bad) jecxz shr das adcl add or xor fisubrl (bad) icebp outsl or push es mov iret push ficoml dec mov dec xchg xlat (bad) adc sub sbb dec stos cmc push jns aad mov inc mov lcall push enter ja je mov nop dec push mov jecxz bound mov push sbb and pop inc push mov add jno cmp mov jne add pushf movl push call stos jmp jnp pop rcl and pop xor lds cmp sbb push xor mov pop lahf and outsb mov add in rcl cwtl (bad) fldenv cmp icebp mov repz pop test or fnstenv inc jb fcoms dec imul inc push or data16 mov insb insl dec mov negl sub xor mov push das nop mov add or xlat cmpsl sbb sub loope sbb in ror sarl les adc inc rorl cltd push mov push movsl jno aaa outsl and pop lea ja stc imul bt add push mov pushf lea jmp out icebp sbb and test push cmp mov outsb mov push cmp cmp nop psadbw (bad) dec les push pusha fcomip push cmp cmc sbb push mov push dec fidiv jp jne jecxz pusha push dec xor imul sbb add js inc add dec jecxz gs outsl add cmpsl lret push aaa dec xor outsb out iret mov jmp xchg sarl out mov mov dec aam hlt xor repz sarb add repz xor xor jg jp inc pop addr16 add lock mov pushf adc xor cs pop inc cmp cltd push inc popa popf mov insb (bad) and imul add addr16 mov fimull (bad) das jo mov mov inc push push aad fidivr push xchg sbb (bad) std ret sub and push in int and loope pop fs imul xor movsl nop scas inc mov dec rclb jno add fisttpl shr rcl stc mov call inc push dec je or ja add mov lahf imulb js push fildl xor je sar push in sub pop pop mov pop and jp (bad) cmp aas push xchg stos outsl mov sub mov adc sub lret or jnp fsubp adc jmp lds ret cmpsw adc sbb cli movsl mov jne in lret add adc sti push mov inc test adc ss ret movsb fidivl inc (bad) outsl or test inc pop frstor jg inc jns xchg pop sbb mov imul rcrl int3 xor sub push cld add jecxz pop lods xor sti jno xor lea jb clc call out add in enter popf mov push imul ja push gs fisubr addr16 mov pop stc jle pop add inc mov jmp out fsubs faddl shrb out jnp xchg cli test xor or das jo movl sub ret jl push cmpb adc icebp add push sub cmp jns in sub (bad) and pop sub dec (bad) pushf lods imul mull jmp decl sub add jl or xchg dec stos xor sub scas aaa mov mov lcall mov mov xor loope sahf insb xchg rorl sbbb inc push xor (bad) sub fildl adcl insb cmpsl xor dec cld xchg or lods out nop push mov jnp sti movsb dec mov sub pop and mov sbb aam sbb or and and add fadd push or out fidivl inc cld push rcll xchg js icebp int xor ffree sub pop lret jge je cwtl sub mov mov sarb movsl pusha faddp fcmovnu in jno xor xchg add xor pop sbb inc in xor inc ja add mov mov ss pop stc inc adc inc and mov dec xor mov imul sbb mov (bad) add lahf int3 outsb xor idivl dec popa push dec pop sbb out inc outsl or xchg and inc addr16 (bad) in fwait mov adc pop insl mov out or jo pushf subl imul sub fwait jb jns lods repz xor xor and ja cmp loopew lock mov add push loopne in cwtl insl sub push mov (bad) mov push push mov bound jns mov jne inc xlat call push push mov mov aaa cld push sbb dec pop out outsl mov mov adc imul mov and inc sahf movsl stc or mov fwait and sbb outsb xchg xchg int3 fnop dec jmp fmulp int shr frstor (bad) int and ret xchg sub xchg mov stos aam mov mov test jno xor insb jb and add dec pop mov sbb jo adc or pusha mov adc addr16 cs xor and test cmp popl decl packssdw jg mov out nop mov mov aad stc dec push fs loopne hlt fistl andl (bad) sub fcmovnbe enter pop jns push arpl leave xchg mov fcomps dec (bad) sub jl xchg out mov and and xorl inc aam xchg mov mov jno jecxz push push inc sbb inc xor std or fnsave into and nop (bad) ret bound inc scas nop push jno jp cld ss jg inc cwtl out cli jno xor jne insb movl jmp xlat popf add icebp movsb mov fldcw data16 pop mov lock outsl roll xchg jae xor in jno jbe xlat mov dec repz mov outsb xor lahf mov aaa stos pop fwait inc adc mov add mov mov cld dec test lds xor imul mov adc jle inc jns mov movsl sbb repz (bad) mov xchg imul pop push sub mov in mov xchg jo cltd mov xchg xor pop pop arpl xchg out jno repz xor test movsl adc pop lahf cld add push std cmp imul mov jno xchg lods (bad) popf cltd in shll les frstor ret (bad) int sarb cmp adc stos xor sub inc and fdivr iret je leave mov mov lret insb pop fstl jo test je stos in lods sbb cmp jae ret pop adc dec mov (bad) adc sub jbe or sbb jb ljmp das pop js sbb pushf setne mov stos jmp dec push js push dec push popa sbb stos popf sub sub or int3 adc dec xor dec out jg fisubl movsb ljmp popa ret ss sbb rcl lret and add sub (bad) int int push sbb pop aas xchg int3 bnd fsubr push adc xchg int sub cmpl movd adc cmp jae call fdivp fsubrs dec cmp mov add pop sbb aad ficom lods adc enter jno fidivl pop pusha push cmp jae test movsb jl pop pop mov push mov ja jnp fbstp outsl jo push push sbb fstl inc xchg call lret push call stc addl fistpll cwtl lods or sbb or inc ja das push pop (bad) arpl xchg fninit adc fiaddl leave push fistp dec ret xor push dec pop pop stos pop scas jno sub mov jmp repnz add in and mov xchg pop ror stos aam fdivs cs ja cmp repnz dec pop sarl sub sub cli (bad) pop sbb in cmp cmc adc std cmpl dec clc xor sub pop movsb fwait lods mov push jmp mov pushf bound std (bad) mov int3 xchg out pop pop and andl push jno xchg movsb jg shl mov (bad) adc pop stos lahf mov mov ds out fildl inc scas outsl cmp imul inc pop (bad) lods rolb js mov mov ret add cmp lock cli fs cmp loop test sbb cmp sub test cmc cmp add push pusha lea jne not pushf mov push pushfw popw call (bad) out nop fmuls shl mov mov in dec icebp xor push cmp jmp aas and push ljmp movsb (bad) mov test mov cld in stos loop fisubr push pop lds pusha iret xchg cmp int3 std clc push xchg pop xchg cmp push mov and push out test repnz cli in (bad) xor mov adc imul inc lea push sub in mov daa (bad) das cmp dec cli sbb mov cmp aam sbb lods ja stos xchg mov xor in and popf xchg jnp push or clc adc aad fadd xlat test sub jno sub pop in addr16 int mov mov movb inc jmp outsl dec sub (bad) or sub das pusha pop pusha aas sbbl fisub pop scas sbb pop xor stc add scas daa and jno insl fidivl jmp popf jne cmp jmp sub cmp xchg jl hlt or loopne cmpsl lret test cmc ljmp mov outsb icebp sbb aaa add jge fwait jecxz in or enter shrl push xchg dec pop addr16 sub mov shr mov bt pusha cmp pushl shl jmp cltd insb mov dec popa movsb in aas in cmp cmp lret lods mov cmpsl push sub lret inc ret dec sti push xchg or fisubrl mov jb je out das and pop xchg shr data16 mov push push fiadd jle xor dec push cmp out xchg sti shll mov int3 enter mov (bad) fldenv (bad) cld lods jno fxam es xchg lea adc adc adc lea rorb mov push mov cmp (bad) xadd mov fldcw xchg inc jg (bad) loop push jmp jo xchg lret xor into aaa pop test addr16 sub pusha neg jmp or ss push cwtl mov fildl pop pop and fdivrs outsb mov std adc push pop and dec mov push enter icebp bound out jmp xlat jmp lret roll fisub cmp cmp mov jp lods xor in cmp mov inc repnz ret rcl daa out sub sub insb push nop inc jnp push insl cwtl test ss jae ja xchg ja adc mov fadd cld mov xor sub jo addr16 mov aam pop je cmp or pop imul cmc leave and add dec jae es call adc test xchg enter mov cld ss dec mov ret jb push loope dec add jmp and mov push outsl dec loopne ja mov push lcall pusha mov decb xor dec js aad add inc push out gs outsb jge (bad) xchg adc lret cmp js lahf daa cmp lods fs mov inc dec dec or js jne push stos stos xchg jbe leave push pusha pop xchg jo jno sub jb (bad) decl add mov push call imul xor xorb cmp and and inc mov adc or inc push lea ljmp lret inc mov xor xchg jo aaa js imul ds push or insl jne dec mov loopne andl fwait ret gs jae loopne nop lret mov lea fistp pusha shrb leave push faddl mov std mov mov push sub cs sbb pop mov push push lahf mov pop sub cmp addr16 push aad adc clc data16 decb jmp cmp jno sub mov xor (bad) in cmp scas jbe mov jo dec fistpll mov das int3 xor jle push in hlt mov daa xlat jl push push jae fwait mov xchg stos hlt lret aas mov xor (bad) sbb imul dec adc pop stc (bad) jp jno xchg dec mov or cltd pop das xchg and sub mov inc push gs adc push scas psrad pusha sahf outsl (bad) mov fwait incl scas iret ror (bad) sar add mov mov aas enter lahf adc xor xchg sub out mov ret (bad) mov push dec das push xchg stos fidivrl dec pop ja addr16 cld adc notb push dec xchg cmpsb lret or pusha mov lcall xor mov test (bad) lods adc pop xchg sti pop pop mov mov adc adc cwtl daa jnp mov xchg xchg call push xor xchg xchg xor insb mov cltd in leave negb or negb mov icebp into iret ss das dec adc ja dec jns xchg scas out dec insb jns jmp cmp cmp in ret insb mov test and repnz jbe mov es sub xchg mov add mov mov sar add inc or (bad) repz mov shrd bsr add shl inc xor cmp movl movsbw rol mov stc stc stc cmp pusha lea jbe xor sub rcr adc adc btr mov shl clc mov shld shld add stc adc clc xor shr movzbw btr shl mov push neg movsbw add pusha jmp cmp movsl pop sbb aaa fucom repnz pop loopne add inc lret sub push mov mov imul out cli mov fnsave sbb inc push mov cltd inc mov mov and mov push nop mov out (bad) cwtl stos scas rcr leave or push sbbl ret jge lds jbe (bad) jecxz mov movl and push xchg ljmp dec lock push into push add xchg mov sub or jp dec icebp add adc pop std nop and dec cmpsb jbe xchg lods mov lock xchg dec lret xchg push nop (bad) jno and arpl rcr mov lea pusha jmp iret pop add fnstenv inc cmp mov and or adc (bad) mov stos jle and ss and pusha add mov dec jnp gs lock and cmpl outsb lock dec cmp mov imul pop test into cmp and cld and xor mov scas add sbb and les fisub jo and (bad) (bad) pop mov in sti ret aam mov bound xchg test loop or sub push jae or data16 jae (bad) repz mov enter dec mov sbb cmp push outsb scas and cwtl mov ljmp mov dec (bad) xor mov sub test sahf add inc pop mov adc mov inc push jg rcrl cmp xor and les out push lods mov sbb jp mov jl adc lods shl or push push xchg mov inc fistpll mov sbb xchg push imul add adc or std or jo push sahf pop add sub repz or shrb push fldt roll imul clc sub push pop cmpl loope push ljmp xlat call arpl mov les mov insl in (bad) xor xchg mov cmp add jl popf add cli mov gs jbe iret add cmp cmp lcall repz or stos adc xchg lods ret pop insl outsl xchg inc xchg sti jecxz sub sub push inc jle dec adc mov or cmpsb ret fwait add (bad) rcrl test ds dec adc or stos and inc dec mov jle xchg dec mov fucom repnz lahf es jne mov movsb cli cmp mov push nop out sbb mov xor (bad) and push out push lea jne setb lahf movb cwtl lea bswap push bswap cwtl lea pusha push pusha movl movl pushf mov mov pushf pushf movw pushl ret jne inc ja gs jno imul dec fs push pop xor gs imul gs addr16 ljmp imul pop jecxz push fs fnsave dec xor cmc pop jmp push xlat dec out imul andl push fwait xor xchg and adc jbe cmp jo jb push push aaa and xor push xor xchg cmp inc cmp inc dec push dec jmp adc pop push stc jp iret xchg test lahf scas cltd sti add jne pop jae pop je pop xchg neg or jne push mov (bad) dec cmc je mov add push xchg bound imul pop dec mov cmp sbb je arpl lret imul stc divl mov dec jne bnd jnp imul push cmp or mov lods scas test mov fwait jp xchg xchg xchg lea xchg jp div repz out jmp loope fstp fnstcw aad rcl int leave inc lret (bad) mov xor lcall ja imul jnp jbe test xor xor mov (bad) addr16 jg imul hlt xor je (bad) sti imul aaa push inc fdivs mov inc cmp rcrl xor addr16 inc gs mov cmpsl notb dec jne lret test jg pop into fstpt lds adc aaa and sub cmp xor push xorl rep ret fs push (bad) xor jmp push jmp repz add adc sbb and dec adcb sbb mov arpl push fidivl bnd push add sbb inc pop fs stos scas push mov gs fwait push stos aaa mov or sub push leave (bad) hlt rclb xor jmp push adc and xor push push bound jb adcl repz cs adc fs dec stos push iret inc mov xor jmp push jnp mov jae mov dec pop xchg jne and dec je xor in fwait cmp bound mov sarl fwait push movsl mov xchg ja jmp sub and jae bound cmp inc jnp push mov xor and xchg movsl pop mov lods xchg incl mov or mov xchg stos xor lea xchg mov mov lods loope push add xchg dec test icebp xor mov push and mov mov sub test daa push jmp jg lret bound sub sub jne mov popf fwait sti mov lods repz pusha hlt icebp cltd fwait test call cmp mov push sbb xchg mov xchg fistpl xchg out addr16 sti das xchg and mov mov push xchg lea sbb adc jecxz or xlat in jmp test mov pop bound rorb movsl cltd lahf push pusha or push dec cmp repnz imul or xor push fs jmp or mov ficoml xor jmp push push aaa jb xchg mov sub inc push xchg in push or sub inc bound addr16 imul pusha xchg in mov lods add xor (bad) jbe or cmp sub fwait aaa dec in imul ja or arpl imul inc arpl fcomi pop lret xor dec dec dec addr16 add inc mov inc pop adc loop mov jp lcall cmp cmp jp mov imul xchg dec enter pop insl pop and clc jno repz je pop inc jbe nop lret outsl fdivrs cmp out mov jmp cmc add sub pop mov mov cmp mov icebp xor (bad) mov xchg and das repz cmp mov xacquire nop mov out dec fsubr lods jp call cmp mov out pop cmp lea (bad) jp jmp lret divl add mov lods mov pusha pop ds (bad) js cs bound mov jl xchg (bad) jp sub test nop sub ss in dec cmp insl xlat mov sbb xor jne cmp std addr16 insl orl fstps cmp mov shlb lods inc mov lret dec or xchg cli ficompl jb jmp sub movsl jne sbb or lcall lods int3 push clc into subl mov push mov and (bad) mov repnz push cmp aas push jp add inc sbbl mov in sbb add (bad) imul lcall stos int (bad) adc adcl mov pop outsl (bad) push insb inc dec xor lcall cmpsb jns daa jnp and add sub mov subl js push je cli xchg inc xchg cli and xor jbe dec or enter push imul mov ljmp jno out jb imull inc jp or pop pop adc jp sahf in movl jbe ss pop mov push push sub cmp lds jp sub jno (bad) push fisub jp cli mov out jp ds (bad) leave push add (bad) dec (bad) lods add outsl push jge jnp mov jae mov jnp pop repz sbb roll sar rolb adc or sub sbb dec loop insl arpl imul cmp add and jmp push pop push mov inc hlt mov sub gs and mov repz aas and fcoml push ljmp jno cmp repz adc push js lds cmp icebp ljmp fs stos mov sbb pop mov imul in jno (bad) aaa push xchg lods xlat cmc cmp dec fwait inc imul inc pusha cli pop fistl ljmp pop insb pop imul jecxz mov xor push dec ljmp mov or (bad) aad pop jmp sbb movsb imul cmp add int push mov ljmp ljmp xor mov pop cmp ret pop roll aaa dec repz pop jmp lret dec add rorl pop and out cmp add jp xor xor repnz popa pop jmp xor ja jbe testl jmp xchg pop mov xchg push add jmp ljmpw insl add cli or pop (bad) cmc adc sti in jp pop mov xchg das add jmp mov ljmp jg lcall ret push lahf ljmp pop inc fistp (bad) scas jp aad push ret add xchg xchg adc mov xor xchg je cmc inc mov push (bad) mov addl mov xchg and add jmp dec jmp push jne lea pop jmp sub inc insb pop jmp mov cmp jge std ljmp jmp pop ljmp push inc jp lock jmp mov xor jo (bad) icebp cmp scas jp roll jmp add xor push push ljmp mov xor pop dec (bad) mov or fidiv push inc imul sahf xchg mov pop push jns stc mov sbbl push pop ljmp inc jp push hlt (bad) xor mov jns push test cmp adc jmp mov jns movsb test les add test mov jns sub lods cmp dec jle int3 xchg or push mov faddl jmp push cld (bad) jl test cmp xor mov push stc push rolb jns loopne jmp push inc (bad) rcrb jns cmpb xchg sub push test dec pop mov jns or push sbb jns mov js fldt cmp out imul adc push rcrl in aad xor aaa jae int cmc pop mov jno lret repz rcll ret pop cmp xlat repz jb test dec mov cli insb pop mov jnp inc inc insb push dec push aad dec mov xor ss adc pop arpl fisttpll xchg stos lods xchg mov jp mov lock ret jp mov enter outsb pop xchg movsb fwait sbb aaa gs repz inc sbb data16 jp xchg mov movsl mov sub mov pop (bad) and insb xor pop xchg and inc xor in test and jecxz mov pop mov das rorl insb xor cltd add mov rorl jmp cmp fstps xor lds icebp sub fimull or xor mov lahf push push lcall cltd sub xor lea and int enter mov pushf stos push scas dec mov add cmp xor lea jg jno icebp je mov jae stos cmp lods sub movb lods and jae loope cmc dec popa jmp arpl push loope addr16 cmc xlat jmp pop pop adc pop gs fwait pop push dec xor shrl lods mov stos xchg add in mov ret mov jmp or test imul mov adc add arpl insb cmc lea ret and jecxz mov xchg test lods movsl loope xchg mov imul push adc daa mov in pop pop int jl lods test outsb mov cld in imul xor cltd add popf sub xor mov out insb gs and icebp ret mov or push xor fildll in shll jbe lods add xor sub pop cmc scas and stos shlb cmp repnz outsb jecxz pop jmp xor push jb mov lods or gs xor negl sbb and rcrl adc or addr16 bound rcrl cmp inc cmp imul (bad) xor ret and cltd mov sub push xchg js mov loope sub mov out insb addr16 and fistl out and push addr16 xor repz sub fwait inc lea xchg (bad) hlt add push xor mov xor sub insl xchg and xor sbb rol stos jge mov mov xor xor adc pop xchg sahf mov jmp lods int pop test push add sub push negl gs lods cmp push or insb addr16 xor mov aas (bad) (bad) mov leave cmp fildl mov hlt mov jae out insb (bad) mov das lock lahf dec hlt mov xor out pop adc rol pop pop ret cmp dec stc andl adc lods mov mov jmp fistp pop in clc test negl gs movsl popf test pop imul (bad) out push push sbb xor aad push loope (bad) dec mov xlat xchg stos jmp repz push repz imul jo sbb mov mov in push imul pushf test dec inc xchg mov push fistl sub xor out fnsave aaa fincstp mov negb xor push xlat inc inc pop or or outsl inc in icebp xchg cltd mov mov arpl adc xchg inc arpl xor xor inc sub inc (bad) shll and cmc mov cmp mov movsl addr16 and aas push rcrl shll xor inc and in (bad) cltd fsubrl pop in mov fdivl in sub cmpsb lea push xor push sub cltd ds es popl sub movsl push xchg stos lea out jb xchg ds bound in push movsl lods xchg insb or dec out (bad) cmc mov xchg adc movaps mov xchg add and inc cltd int3 iret cmp into (bad) lcall imul jl mov xchg xchg xor xor lock cmpsl mov sub cmp jb (bad) xor (bad) jnp mov sarb sub es jo jne mov lods lret (bad) mov (bad) out es mov jnp jl jp push test insl add cmp adc bound add jnp jnp add push mov sub outsl repz jp push bound xor mov mov std push sbb test nop dec xchg subb popf jp fstps mov jp clc lock jp push dec cmc xor mov add sti ror xor inc jp mov mov jp imul jp mov pop jae stos ja jbe mov xor dec pop jmp ss pop dec cltd and test mov pop sbb mov or insb jp stc push test sub jp loope or jp push cmp aaa jno stos sub test data16 mov jp adc mov jp in xor sub cmc test jp add loope leave (bad) mov inc cmp cmp (bad) jp inc out cli cmp jp dec or mov and addr16 inc out xor jno inc hlt jns pop sbb jp jne mov jp adc enter dec jp mov in jb add ret cmc loop inc mov jp aam test std sub pop pop mov jp in in push jp in dec or mov es sbb sbb jp insl lcall outsl sub pop xchg fnstcw adc rcrl sbbl and jno out in (bad) xchg ljmp cmp call jp jns xchg mov test shrb outsl pop jp mov cltd mov fwait jo push mov jp (bad) cmp mov imul ljmp imul push pop jp movsl in iret call mov repnz jnp pop (bad) cli mov lcall scas js cmp push dec popa inc pop xchg jp mov popf arpl jno daa sbbl outsb mov mov dec fild cld pushf mov pop fnstenv bnd pop push dec cwtl pop jp mov in lea mov push sti jnp clc xchg mov inc push jp daa jg adc jp mov rcl jp ss mov (bad) jp int mov cmp mov dec adc aaa aas ss add imul lahf lcall sub fs dec ds xchg push jp add mov jp (bad) mov push aas cmp sti sub jp mov notb repnz xorl pop dec ja push cmp xor mov mov jp mov popa cld pop mov sbb cmp inc xchg push inc lds hlt lret pop aam jp inc or jp insb leave (bad) xchg (bad) into lea mov jmp mov cmpsl mov xchg jle jp mov aad jp ss popa adc test and push jp (bad) je (bad) push sbb lcall jl (bad) movsl jp mov cs jp stos pop inc subl ja repnz add mov icebp jbe out or imul sbb aam mov mov xor xchg jp lret pop mov out jp push arpl or imul sub cmp add sbb dec cmp and inc pop push jp imul jecxz (bad) xor es xchg jp idiv mov push lcall (bad) ljmp sbb lea and clc popf pop cmp fcoms pushf mulb jecxz dec clc mov mov pop push jp lods into inc negl or icebp jno push bts cmp int3 push jp inc cld dec inc push inc inc pop pushf or pusha pop and xlat enter jne jp insb lahf jl outsl (bad) inc jp push pop dec add (bad) jp xchg jl mov int out pop ljmp loope dec ffreep scas xchg mov pushl aaa push ret push inc mov (bad) xor (bad) sbb insl xchg cmovo jae dec and rcrl pop test in mov sbb jp xlat inc flds adcb dec adc mov jno inc xchg push xor dec or out sti sub insl lahf jp xchg mov pop jp aas negb dec fistp jp mov mov jp (bad) jmp lods movsl (bad) (bad) mov pop add and sbb push in je insl inc and xor cmp sahf clc sub add push call dec jno int cmp sbb pop (bad) xor cmpsl rorl cwtl rcll mov les adc xor cmp int3 mov pop push es jp xchg lock das and dec cmpsb (bad) jp cmc mov jns bound push sbb div dec jp lret int3 add dec addr16 or inc fnop pop xchg ret in jmp push fstps jp imul lock jp movsb mov mov popf lea outsl push lds mov jp and dec dec fstps imul js jl sub jnp movsb lahf fstpl inc mov sbb scas push jp imul pop mov mov call jp inc loope xchg mov pop out jnp jp pop fbstp xor ljmp jp inc add or mov stos pop shll push xchg add jp sub (bad) xor sub loope (bad) cmpsb std lea cld push dec iret sbbl imul or inc sub (bad) mov rorb mov jae adc xchg xchg pusha clc sbb imul mov mov pop popf clc lahf inc mov jge pop mov pop cli js add ficompl cs pushf push stos xchg jp jle dec int3 inc mov (bad) (bad) push pop lock jp mov loop jp and into sbb push xchg push add mov test mov jp out (bad) mov and fmull sub lock pop insb sbb jp or mov jp jne pop repz das add sbb jp mov imul sti pop mov mov dec pop scas ss jp inc loopne mov adc mov adc xchg fwait in mov (bad) jno push xor cmpsb negb out xchg cmp cmp mov cmp xchg negl push mov jp fdivs mov in enter mov jp lea push adcb jp int dec and sahf imul insb sbb test ret jge sbb lock call mov cmp dec jp ss push dec ja mov jmp push mov lret cltd or sarb push into jb fwait imul clc fistpll jmp add imul or mov inc cmpsl jp ss jbe xchg addl adc dec add jp shl fwait dec inc lods jp jb outsb (bad) clc pop jp adc jp push repz dec sub addr16 mov repnz sbb cli mov mov mov int jp lods xchg dec aaa jp test cmpsl popa jp dec mov jp xor and jb adc sbb shlb das fdiv cmp push in jp mov sbb jp pop cmp into xor cmp cli shrl pushf fisubrl in jp cmpsl xor stos fist test xchg push dec hlt cwtl dec inc jmp adc push loope jne in aam call cmc push adc cli incb push cmp test jp popf jecxz xor fisttpll sbb mov in lds and addl mov cmpsb sub cli leave mov mov pop movsl mov repnz call sarb jl ret mov jnp adc or sbb rorl push das jp mov jno ret gs mov out ja pushf sbb pop xorl mov and nop xor add cltd sahf jecxz xor scas out add mov ljmp jg movsl jbe inc lret pop imul jp jmp in cmp repz (bad) push rorb push pop jno mov imul cmp sbbl rcr mov ret mov jp (bad) or xor inc cld mov inc mov xchg adc jle jp xchg pop (bad) cmp fdivs insb repnz pushf sbb cmp ret pop xor imul cltd pusha cld lret add jmp pop daa test cmpb mov lods sbb daa sub (bad) imul xor pop stos jp daa add xchg fidivl roll (bad) xor mov jp clc adc jge jp das sahf out mov inc jp inc xor (bad) jp mov data16 addr16 add jnp (bad) mov ret int3 xor mov mov dec cli or push xor mov xchg and and sub test and add jge and xchg cld jp sbb aas pop or out (bad) incb jb jp stos imul cmp sbb clc cmc cld mov jnp fisubrl jp movsl xor jp bound call mov pop jp or or add sbb incl jne nop sarb add inc imul cmp mov into add mov mov or jp cltd push xor jp or aam xlat adc mov cmp sub std add gs fnstcw jae inc faddl fwait push int3 jp dec xlat in les jp jl into ljmp cs out add fdivl mov add stc dec cli jne std xor add adc adc inc push sarb in sbb xchg outsb mov xchg bound mov jp in jns jg cwtl test loope jp sub jle jp js xchg lcall cld (bad) or sbb inc popf adc jp lds mov (bad) repnz arpl fxtract cmp mov xor xor imul lcall jp sahf pop popf or lds jp clc imul outsb xchg jp xchg mov jb call mov or lock arpl dec daa cli mov sub lds pop hlt jp (bad) jae ss dec push jp cs test (bad) or (bad) and fidivrl xchg mov jp or femms test ljmp fwait push arpl inc int sbb mov xor or call in ja jp ret je icebp shrb testb jp outsl mov jmp pop jp sub or add xchg xor imul sahf loope mov outsl and out push (bad) adc dec mov (bad) shrd out jecxz push pushl xorl push xchg push xchg int scas jle mov jp cmp or cmpsb outsb ljmp cli dec mov sbb inc ret xchg xchg sub jp insl add jp outsl dec mov mov fsubrp int3 hlt xchg xchg jae inc push iret jmp testb sub jnp fdivrl popf in add ds inc jb mov test jp loope into hlt or (bad) adc push xchg call pop ret sbb test jno inc fwait jno insb cli mov xchg jp stc andb pop sarl adc fist pop push outsl arpl cmp lret and stc mov sbb rclb dec out jecxz push jp iret mov jle sub or cmp or jnp inc (bad) jne mov les std xor jp xchg outsl push cmpsl dec xchg mov data16 hlt add shl test or insl push pop pop jge jp pop mov out popa repnz inc jnp xor mov sets sub xchg fistpl call or and sbb dec cli xor xlat hlt inc mov lods cmp pop add or bnd in xchg ja push inc dec jbe cwtl imul pop push jno das mov in xchg jp out cmp adc or mov inc push ror add arpl mov (bad) call xor jne lret push (bad) test adc pop insl outsb dec push imul xor mov mov daa in or out jle and mov jns jmp lods daa ds mov iret mov jae out int and sbb movsb mov inc push xchg xchg je mov flds mov jne loop xor mov add push pushf imul jae fistpll xchg add xchg xchg dec xor repnz pop (bad) pop jp fistpll adc mov insb cwtl pop mov aad inc popa into daa adc mov jp mov imul or add sub dec test jp outsl sub ljmp movsl pop cmpsl jp loope and xchg jb jp clc mov out add repz movsb dec pop movsl jno inc xchg std int cli cmpsl jns xchg xchg jp iret sub xor cmp xor mov lods dec pop ja mov jp inc (bad) icebp mov lock push movsl sub xor cmp add std jge push xchg ret dec inc xor addr16 sub loope xor jae call cmp mov lds jne enter test sti ror mov mov enter mov xor imul jp or adc mov ljmp pop popf mov mov movsb outsl mov loopne test xor jmp jne jb cmp cmpsl imul add ja pop cmp and daa push push mov pop sub jg in xchg fistpl es jne adc inc cmpsb mov jp adc movsl xchg inc jp xchg clc jo inc lods mov adc test (bad) jne fistl loop cmpsb inc in push mov push lret out pop int3 mov xchg mov cmp dec (bad) xor gs push divb mov fnstcw popa inc mov and jne xor (bad) (bad) test xchg or les xor cltd cmp ja push cs fdivr fidivr test mulb inc inc scas xor lahf lea mov xchg sti mov mov jl cld mov jns dec icebp inc mov adc jne stos nop mov enter in outsl fdivl lret movsl mov pop and aas fstpt sti jnp mov lods xchg clc cltd fidiv mov push sub or and aam pop sub xor xchg sub int3 xor xlat daa ss xor push push stc pushl nop xchg (bad) js out mov jmp inc movb inc popa xchg lea rcrl rclb mov repz xchg daa xor cmp mov push leave jne cli mov pop daa mov jbe ret das icebp jmp (bad) out aad js jp sbb shrl pop in adc adc sbb cmp inc lods pop mov jle mov shrl add jb mov xchg mov cli test nop scas mov add mov mov loop push mov cmc jns cs dec loop xorl (bad) repnz (bad) (bad) sub aas lock sub hlt dec mov ljmp imul ja xchg inc (bad) and dec pop xchg and cmpsb and je mov sub pushf lcall cs scas shr lods sarb cmp cmp adc ret mov out jns popl stos mov add xor cli gs hlt stos jg lock or pop push repnz mov sbb xor pop cmpsb sbb push and out inc sbb xor stos lods ror mov jg cs ds cmp aas (bad) insl sbb jmp repz pop aas clc addr16 stc popa cmp inc add out popa fsubrs and insl sbb and dec jbe (bad) cmpl hlt jns lock or ja mov shrl xor dec hlt iret jp pop dec fbld pushf adc xchg lret addr16 arpl sbb mov and aad scas mov mov ficomp rolb in ret mov sbb in fstpl push pop pusha mov add inc out push sub add lcall dec mov sub out cmp push inc fwait jmp push fimull jnp push sbb sbb sub jp push hlt ret xchg jns jg pop add sti aaa cmc mov out push icebp dec pop test inc fcmovu add (bad) cltd stos xlat pop push test iret fdivl jb (bad) sub mov lods ds mov lret jmp mov adc inc js xchg mov rol sbb pop cld movsl ljmp ljmp in dec push in sbb call push data16 addr16 sahf pop out (bad) enter sbb push out sbb and jmp in add or pushf lds int3 xchg pop push in dec adcb dec mov ja sub or jecxz and cld push shl sarb je loope hlt pop fildl push inc xchg sub fildl ret sbb and cli sbb xchg jmp xor imul mov xchg mov sti inc dec insb push rcl out das aas jg and and fwait scas hlt jmp pop cmpsb pop push fcoms sbb cmp dec xchg pop pop nop repnz jp call pop ret out mov mov fwait (bad) dec outsb nop push nop lahf adc imul popa pop inc leave push daa scas xor add lods hlt cwtl out or pop mov outsl jecxz out mov mov arpl test mov gs ret push scas leave xor fs imul xor mov push lea (bad) repnz add out jo popa sbb cltd cs repnz gs lcall push icebp sub rorb fs jle pusha lea je jmp (bad) adc sbb xchg addr16 xor sub fdivrp cmpl and int or clc es fistp jns dec jne ja xchg adc sbb sbb xchg push (bad) fistl sbb and in fsubl lahf and mov pop aaa mov sbb dec add ret add xor push mov sub or add and movsl sbb cmp jno cli popf repnz mov aam mov mov pop inc sub inc fcoml mov mov sahf and nop into pxor les mov imulb xor pop jecxz fsubr jnp hlt xchg lret and push sub cmp (bad) repnz popa mov ljmp outsl jno stc movsl ljmp dec les iret and jae jp xchg jmp jge sub adc lods repnz into cld and cs mov cld bound lret mov inc push (bad) into test ret fisub sub (bad) (bad) call xchg (bad) cld loop mov jmp fwait jne mov pushf frstor insl cmp sub cs mov sbb idivb shr cmp add cmp test lcall and cmp push pop mov push call or clc add push (bad) mov pusha mov inc dec (bad) dec pushf push movl pushf call mov lea jb pusha pushf pushl ret loope jmp sbb sbb xchg mov sahf rcr dec shrb movsb push mov pushf imul orl mov andb adc and rsm xor push sub clc into jmp (bad) std outsb mov int3 pop pop addr16 adc sbb ret inc insb outsl loopne movl cmc mov dec out int3 daa and dec jno xor mov loop popf mov mov (bad) cmpsl mov cmp enter xor sbbl jae test xchg pop pusha xchg jno dec mov clc mov add jb pshufw push mov xchg xlat enter int3 (bad) and lods in stos xor jnp push dec xchg outsb (bad) outsl jo mov int adc push int adc sub scas rclb or push xor push or cmp lret mov int3 repnz pop rcr imul mov inc lcall pop add out das scas test mov lcall or ds cs data16 mov and out inc xor dec xor sbb stc mov sub or jmp sbb and cmp inc (bad) sbb and fistpll outsl xor hlt aam ficom (bad) fadds stos loope mov (bad) repz xor and fisubl xchg je leave sbb push jmp sub int3 and dec cmpsl jnp (bad) jl mov dec or (bad) pop mov jno push insb popf mov mov xchg sti xchg add mov (bad) icebp add nop dec mov pop add (bad) jae cli inc stos je jno divb sbbl iret scas (bad) jbe jns fild dec dec btr xchg sub lahf and lahf xchg je je mov test shl pop (bad) fadds xchg (bad) pop out pusha push das aas or je sbb cli inc push xor sub mov cmp or addl jp mov jne mov push or dec mov cli pusha mov fldenv pop (bad) testb cmc popf mov mov xchg sti xchg cmp loope jp es sahf pop mov test jg push or jno idiv xchg lock cwtl daa loopne out pop iret xor cltd jne popa popf and cs sub jle bound mov aas loopne shl pop ret add ficompl xchg mov jae push daa (bad) std sub icebp lea and ret nop fwait movsb mov xchg scas sub xor int3 rcr jle mov mov adc lods jae cmpsl inc fcmovnb mov inc pop and ja (bad) (bad) add adc ja pop cmc popf repnz cli or push cs roll insb adc outsb ficompl rorl xchg adc imul add jmp rcll xor es pop sbb cld ret adc ret pop ret ljmp fdivrl mov ret and xor dec repz in push adc inc mov mov xchg lods stos xchg in (bad) repz dec add jno cmc outsl and and sbbl fs jmp jmp movl ror sub bsr mov add clc cmc pushf cmp pushf lea jbe sbb shld sbb inc sub xor sbb bsr jmp out fldcw pop ss bound (bad) cmp and lds push mov mov stos clc mov mov cmpsb sbb and lods repnz fucom psadbw das jo jb in add jnp xorl daa psubq cltd mov mov ljmp xchg lea stc inc dec adc aad adc lods jmp pop stos xchg movsb mov adc mov cmp mov lea mov adc pop mov bswap mov ss sahf add jno repz mov shr mov (bad) rcrb outsb mov push fldenv push mov imul daa xlat or imul mov clc (bad) xlat xor ds lea aaa mov movsl cmpsl or xchg and adc and stc test dec jbe dec mov sbb mov leave xor cmp arpl gs xor and xchg inc out sbb xor inc fistpl dec incb and sbb mov and sub jae and lret add inc push mov mov cmp repnz lcall jp mov inc push dec pop push jno js js lds adc fsubs pop out jno mov sub xor in and add mov push rcl add pop xor xor sbb (bad) iret hlt jmp pop cmpsl push mov fildl push ds aas push xchg (bad) or popa jb shrb shl cmp jg mulb es std cmpsl pop or add fildl pop mov xchg cltd insb rorl sub dec out ljmp es subps mov subl xchg les lea leave mov xchg cld mov inc jl test orl sbb jo jo loop stos adc pop ret sbb cmc jno repz xor aas add adcl sub and rep sub in xor mov xchg or mov aas loopne xor arpl daa das mov dec (bad) popf scas hlt jmp repz ds inc jg scas mov test outsb adcl pop push pop xor rorb xchg cmp call sbb jmp lret enter cmp mov mov in pushf stc (bad) jno (bad) iret movsl mov aaa sub inc stc dec test xchg xor outsl pop movsb popa fisttpll mov stos ss sbb adc icebp in mov jne push mov cmpsb add dec pushl xchg rcrb or in push loopne movsb mov and push pop stos xor outsl adc mov ljmp and out and mov and sub xchg gs out cs or movsl (bad) sub call jae aas add or push es xlat xchg std mov xor sbb fnsave jns inc push pop push subb adc loop (bad) cmpb jb (bad) mov cmp pop lock les scas cmpb lea js pushf pushf lea jne sar sub shl mov mov adc add rcr push inc add mov test test push lea je clc clc stc sub bt stc jmp adc es sti iret xor fs pusha xor jns lods push leave (bad) jmp movsl ficompl mov sahf loopne mov adc xchg in popa sbb jg in and push push rcrl push jnp jmp mov mov int add cmpsl cld ret dec mov fnstenv scas mov cmp outsb inc js daa clc cmpsb clc cmp jmp add fwait add adc call and (bad) loop loope xor cltd cmp adc icebp into fist loope jl xchg and nop push mov aam cmpsb clc or jo,pn push hlt ret cmp sbb (bad) enter mov dec outsl scas mov out imulb outsl orb pushf push sahf mov in xchg std ret out pop in and lahf adc lret cmp mov lcall (bad) mov and ss mov (bad) or xchg jle mov jno lock push dec push outsl dec pusha sub stc ja xor or mov scas das fadds sti arpl xchg imul cmpsl js xchg jmp lret or dec cmpsb add push dec push jo fisubrl out xor idivl pop int inc arpl sub xor test jl or cmpsl xlat sub inc insb mov add and inc or and dec repz (bad) mov jae jmp sahf add lret adc loop dec mov dec xor dec or aaa into jo mov loope mov out xchg in call stc add push pushf movb dec lea jo pushf lea jne jmp pushf mov pushf lea call call test enter jo fldl2t ja xor mov sub repnz shlb and dec push inc pop inc pop nop scas sbb loopne xchg dec call sbb push cmp aaa dec mov mov sti cmp (bad) add cld mov fisttpl mov mov jge pop and popf adc ss fstl adc or lds sahf cltd out out pop add stos jae jmp push mov cmp aaa mov (bad) das je pop inc lock dec (bad) pusha ret (bad) mov rorl xchg or adc sbb sarb (bad) inc pop jo pop in movsb jmp out sbb mov (bad) ljmp sbb xchg cwtl bswap bswap push mov lahf lea pushf call loopne loop and cmpsb add pushf lods (bad) dec or push lcall xchg xor shl std or cltd out push dec pop mov mov sti or jl scas (bad) incl mov lock xor or loope ret pop dec cmp xchg data16 fisub jae xchg xor sbb decl pop inc ficompl jge mov add jecxz mov scas xor inc pop stos cmp inc aaa dec mov stos shl les sub out lahf lahf cs jge sub lret mov mov cld mov packssdw mov adc std lret xlat dec (bad) sub les sub inc xor in xchg stc mov out push call (bad) jb lea or les sub lcall dec push cs sarb sbb inc or (bad) push push dec mov mov cmpsl mov shld xchg xor jge inc es mov jl dec nop push in sub sbb cmp cwtl sahf inc pop outsb mov loope cs push (bad) sbb mov dec adc adc (bad) pop adc mov dec ret test out xchg mov das adc adc and cmpsb fs nop mov xchg xor cmp pop jmp mov mov ret adc mov push movsbw call or stos adc adcb mov jge popf frstor push leave aad xchg or cmp jb ret daa cmp int daa and add or and ja aad or fdivrl mov sti (bad) sti movsb mov sub mov js stc out ja ds push bound icebp sub aas push mov cmc pop push pop aas xchg rclb pop ret jbe add in adc and adc adc dec mov jno ljmp popl movl mov push pushl ret test neg clc add jmp aaa pop inc rorl (bad) xor pop movb test sub sub sahf dec xor ss stos jl push cmp jb mov fs cwtl out push adc test xchg sbb inc fdivrl mov adc cli movsl mov aas pushf int cmp inc sbb pop mov mov sub rorb push jge xchg fwait stos xchg cmpsb fsubs cmp push ds rorl idiv or dec (bad) push jmp push jns pop bound mov push imul cmp jno and mov jno ljmp push mov add dec aad and adc inc sbb mov mov shl cld cmp dec imul cmpl in add xchg cmp psadbw adc lds push push mov xchg or dec xor xchg or mov adc imul insl shlb mov cli ud2 jae in cmp jecxz sbb cwtl add iret xor xchg cmpsb mov mov mov stc loopne movsl jg jns fs insl ror ror flds mov insb test inc (bad) and scas arpl aas out push in cwtl daa mov push pusha movsl in mov xchg xchg enter loopne aad out add push cmp outsl call jge inc ljmp push in and jno call push lea cmc int cmp ds (bad) clc cmpsb cmp shr mov sahf mov pop (bad) mov cmp stos xchg in sbb insb mov aas inc movsb sub test aam inc xchg lock mov leave xor das sub inc adc jecxz inc ljmp cmp add xlat dec pop hlt ret adc rcr mov inc in mov dec cltd insb es jbe fldenv pop aaa add pusha call lcall call ret repnz addr16 or xchg xchg fistpll aad (bad) imul dec jb lret fsub mov imul adc add popa ret and inc push sub stos sub out pop jae lods inc mov lret outsb mov jge insl leave mov mov aad leave insl adc inc jle xchg imul sbb xchg push je jnp andb movsl fisubrl jne jae shlb pop in cltd (bad) scas scas and mov lds imul or js push sbb loop and icebp lea jbe xor iret lock jecxz jno out mov mov and adc pusha pushf push lea jmp adc jnp faddl mov adc (bad) out and cs loopne hlt (bad) cld push lock leave fisubrl adc sbb sub dec adc inc cltd mov nop int mov iret iret cmp out bswap (bad) xchg int adc mov (bad) jne pop popf lahf mov cmpsb mov pop ljmp jl pop rcrb lea sbb or inc cli js xchg cmp jae pop out or packsswb xchg mov pop mov shl pop push dec jne sub and jb jl and rcrb or sub cmp fiaddl jne iret jno out popa jnp scas xor (bad) and (bad) decb inc adc aad lds ss cmp stos mov movsl adc int3 adc cmp and nop outsb scas fisub into loop leave or test xor in les aam pop je dec aaa or or mov test ret push outsb std or push aad in sub sbb sbb (bad) jne mov cs lcall mov ror pop dec jg andb sbb mov dec xchg dec or ret adc dec dec mov pop adc xor sbb jmp fs sbbl lods mov inc imul out adc and imul (bad) cmp push cmp clc jno cs lahf push rep cmc adc or mov jno inc sub or xor add xor in (bad) push mov pop aaa inc pop popf and jge mov hlt (bad) cmp imul das mov ret jns mov or aam int jp mov cmp insb (bad) scas mov add fstps sbb or iret shl mov cmp addr16 push pop inc xchg test mov pushf add outsl mov int3 mov mov sbb in mov jg mov hlt pusha pusha pushl movw lea jmp cwtl movl pusha cwtl lea call cmp or (bad) sbb xor sarb les adc in shrl sbb fcmovbe xor orl mov push pop pop push dec mov subl fildl add mov shrl popa mov out shl push dec iret scas adc pop dec push sti cs jp xchg sub sub mov imul mov ss fs xor nop or pop inc pop push fcoml jl jp sbb mov dec outsl sub sub cmp icebp xor daa dec jae sahf rclb rcll jns popa (bad) xchg pop hlt lret shrl call and pushl std push push dec jo mov int push pop jae ss sbb xlat enter cli mov clc es test sub pushf add xchg pop fs adc mov popf and mov hlt lret fist dec pop jmp xor aam ror icebp movsb sbb daa (bad) xor xchg adc pop push iret rorb sbb hlt stos sub je push push mov pushf add cmp push outsl mov xchg test aad (bad) mov fdivr lcall fmulp in pop fisubl mov and add mov idivl jne mov inc push lea inc push insb mov mov lods sti aaa add clc (bad) (bad) les pop insl jb xor sbb enter pop or jbe mov sbb mov mov leave pop adc pop es push cmpl ftst cmp nop mov hlt pop and pop stc loop fist and mov arpl xchg in shl sbb jmp movsl stc or push lea inc sbb and sbbl inc push (bad) sbb mov sbb mov mov jmp mov dec push cmp sbb mov fdivrs pop or cmp lcall xchg sbb push mov ret fdivp leave fadd pop das push mov xor stos rcll lea mov stc and (bad) adc mov xchg js mov or jecxz sbb (bad) cmp faddp mov scas push mov enter push jns movsb popa jb push mov mov pop loope push push dec dec push mov pop fwait icebp push daa clc (bad) cld adc push mov mov repz (bad) data16 das nop popa movsb mov lds mov int mov xchg jmp into push mov jl jae sbb bound jbe jp call push (bad) shr scas jmp pop pushf pop (bad) push out dec nop adc in push add sbb mov dec cmp stc or cltd and jl mov sbb ja fsub push insl adc ja xchg in mov mov test mov add loope add mov inc lds stos adc cli add dec rcrb jno loope out mov lods mov mov xor js mov dec xchg sub or adc push mov mov decb mov or mov jl add call dec iret sti and adc fprem1 sub xchg outsl rclb push push es sub mov popa movsb mov out pop jno aas clc outsl or daa not inc dec jo jno cmpsb (bad) scas cmp mov xchg push pop loopne in fcompl push jp sahf repz pop jp mov je jns leave push push aaa dec mov cmp test mov and mov icebp scas jne mov cmpb fildl or or xchg xchg cli fnstsw add push and movsb mov push out (bad) sahf sbb fcomi dec ljmp gs cmp pop imul scas dec xchg cs insb jge bound addr16 mov jne mov ja jo popa popa ds and sbb nop outsl jno fbld inc and jle and movb lea jmp jp test fbld fldcw mov ret push mov or and test cmpsb ss cmp and push data16 pop nop push imul test cli or sub jnp pop lcall bound jne push cltd inc lds mov movmskps addl loope pushf stc pushl repnz push lea jl push lea jne movsbw data16 testb btc mov cmp sub sub sub bt mov cmc bt pusha stc sub pusha clc pushl popl test pushf stc cmc cmp jmp jmp fldl pop scas dec jae mov mov pop in sbb in add aam adc clc push leave aad ljmp push jg adcb decb push pop outsb adc inc push push mov out iret loopne lcall (bad) fwait sahf shl loope push mov jp mov xchg repnz cmp gs pop cli mov test and or mov inc push push lods pop cltd sub add bound mov cmp xchg sub push mov or imul rorb das int3 xor and daa cwtl cmp ret xchg out mov mov and pop call arpl rep iret js push stos or jmp cltd jns enter xor jge cltd rcr int stos jmp leave dec int data16 push dec fbld xor dec pop mov sub fsub and push aas bound dec imul mov sub inc cmp fistp sbb xor sbb scas (bad) xor (bad) cmpb xchg fsubl pop fucomp cmpsl adc (bad) lcall test xchg mov pop enter adc add dec ja mov mov mov cmp jmp cmp fbld es es mov inc divb imul jmp iret fadd jne nop rorl adc inc push test rorl test adc aad out call push jae sub jno repnz sbb pop (bad) cmp xor jb jge je push jg ja adc (bad) jmp cmp or add mov and sarb stc dec scas loopew fdivs call or adc aad insl icebp (bad) frstor inc jge jbe xchg out fs and inc jl dec mov pop enter jbe cmp xchg popf call int3 fstl sub fidivrl repz xchg jb pop clc add cld dec loopne in sti into daa and (bad) call test dec mov mull vpcmpeqd xor cmp ds lock xchg add adcl or sub popf mov sub xchg jne inc faddp (bad) aam sbb xchg imul aas (bad) dec rorl xor out adc dec push nop (bad) jno fsubrl pop es es inc jns leave sbb xchg mov cmpb push leave call jne adc addr16 sub int inc push pop and stos lock jg cmp data16 fisubr fwait cmp xchg into setl out bound jle jno push fstp fnstenv jle inc mov mov xor sbb and es pop daa pop push in pop jp bound ficompl cmp aas lahf loopne and lret xchg lahf add dec pop inc lods pop cwtl insl pop cmpsw mov mov push cltd xchg jns cmpsb fs insb xor inc clc xchg movsb cli or fcomi popf xchg sbbl mov xchg daa lods fwait shrb mov inc push mov (bad) push mov fbstp jnp sub cmp and jmp imull inc movsl cmp fsub sbb mov js lock dec adc clc aaa call or sbb and cmpxchg sti (bad) hlt dec adc loope in data16 imul stos leave lock andl fs sbb xchg jno imul xor inc dec xor insb push jo xlat fwait xchg lret sti in in (bad) rclb (bad) (bad) mov sarl sub push sub dec jno fidivl call push push mov sti in repz les ret (bad) sahf addr16 add les lcall xchg fildll adc aas ljmp js mov lret cmp cmp mov mov add aam and xchg mov in pop mov mov and movsb fstpt fxch imul mov popa mov add adc sbb mov (bad) in or inc pop mov sbb adc or cmp test outsl scas stos mov xchg test jno fnstcw dec cld inc xchg mov bt clc data16 mull fiadd dec cld rol bts adc shr data16 (bad) mov lea add lea jmp push pusha movl movb mov movw movl push pusha push lea jmp xor leave ficoml sbb or cmp dec adc in pop test pop js cmp popf mov mov dec mov pop inc mov push inc iret add push sbb and popa out ret lea sbb pop mov pop pop loop push iret dec mov mov pop and push iret movd inc push das insb adc add mov ficompl test mov in mov sahf dec ja test jae xlat lret push pop fldl adc lods cli repz mov dec ret add cmp push jae (bad) pop add jg ret (bad) ss jno fmul ret cmpsl cmp std mov (bad) ja mov repz mov js test mov cwtl jecxz dec xchg jp insl mov push add fldenv sahf add clc es mov sbb adc xor popa aad shl add cmpsb fdivr mov push pusha mov xor jp test shrl adc inc push cmpsb cmp dec xchg test int jns bnd ss inc mov insl xor jle sbb (bad) in mov jb and push pop mov adc push sarb loopne loope out (bad) lret aam int mov mov popf mov and pop xlat fnstenv cmpsb mov sbb sbb pop scas sbb icebp into push and jg je dec xchg jns and xchg dec ljmp pop or or sbb lock jp (bad) dec lret pushf fildl inc mov push push pusha aas push (bad) cs push jecxz shlb (bad) jne or inc outsb out je jno add fldcw mov int inc arpl jle xchg pop push pusha in xchg mov outsl ret inc or mov out and sbb jo xchg scas push lret dec adc pop (bad) fnstenv (bad) jnp mov insb (bad) or movsb popa sbb (bad) jb (bad) sbb sub test sbb and push test mov mov add xor nop mov mov jns xchg cmp scas push movsl dec outsl inc ds xchg inc fwait xlat call push dec scas push mov imul mov fmuls jae mov arpl rcr mov (bad) dec movsb scas shlb in mov sbb lret push xor aaa mov xchg lds push loop adc xchg xor test jno (bad) popa cs pop out and add dec inc pop xor test dec imul outsl fwait arpl pop and inc adc bound cmp imul jns lods cmpsb cltd stos dec (bad) cmc cmp push or (bad) sub xchg cmpsl nop out xor sbb sub mov xor mov int3 divl push or xor mov in adc xor adc loopne aam enter rcrb ret xchg xchg mov outsb adc enter inc inc inc sbb pushf lods dec mov adc pop cli test movsb cmp insl mov or fidiv jmp hlt pop push dec push outsb xor pop aad add leave adc cwtl inc pop or push imul dec push je cmc lret test inc mov popf and cmp les and pop and mov adc push insl jle outsl rclb dec jno daa (bad) or scas or sub insl aam lock mov (bad) out aam daa fadds xchg (bad) int3 xchg add gs xchg push popa cs aas xlat cli daa (bad) into lock pop inc or mov scas iret scas shl std test lea or inc pop and xor dec xor arpl inc jno aam mov mov mov leave repnz sub test movsl and jp in sbb stc jne sub sbb daa xlat mov push mov sub push push data16 shrl lret lret xchg mov scas rcrb xchg cwtl cmp sti mov jle xor add repz ja xchg pop cmp dec push test sub out dec xor popa cmp sub dec pop inc pop bound inc fcmovb fidivrl aam lahf ja enter push jo dec les das mov add (bad) mov lahf orb xor cmpsb aam mov pop push lds pop fisubl cmp xchg mov sub imul inc xchg subl lods xlat xchg addr16 les mov add pop adcl xchg fsubs test popa pop adcl jnp mov addb cmp aas pop and xlat cmpsl (bad) psrad mov jmp out out dec movsl pusha adc xchg stos stos xchg pop (bad) into sarl cmpsb mov add cmp cmp rol int stc jl add cmp jne mov mov sar cwtl outsl pop inc jmp dec jge icebp outsl jl add outsl pushl popa or int3 add imul xor or ficomp das (bad) das mov pop rcr mov popf push arpl xor cs insb add xchg call mov mov imul outsl fisubl mov out notb cmp dec ret pop xchg outsl je and ja ret add mov hlt out rolb inc jl arpl insl pusha lds pop sub arpl cmp sbb scas nop cmp repnz jne mov mov push enter cmpl sbb call and cwtl cmpsb sbb stos jnp push mov cmp dec cmp inc dec xor lahf add fstps ljmp or ss test sbb lea jne movsbw setnp sub rcr mov adc call cmpsl icebp int outsb sub addb sbb dec push mov mov cmp pop lret nop out inc aam mov addr16 (bad) gs nop arpl notb pop imul je or stos ljmp (bad) lret imul add fidiv push dec fs or int3 out sahf loopne iret dec in faddl inc mov test xchg in adc js fcomps in mov movsb push pop loopne lea pop push and mov cmp cmc mov jbe xchg cltd add sbb mov fistl xchg or jno shl stos push dec pushf pusha lea ja cmc imul call sti or mov pop or ja add rcr sub push dec jno imul bnd (bad) mov and sbb pop mov lret imul mov sub or mov cmpsl sbb and cwtl and out inc push (bad) xor adc fbstp inc jb jle xlat daa arpl inc cmp lods pusha insb movsb adc xor cmpsl ja add add fistpl sbb stc (bad) and dec adc mov out popf adc dec pop repnz and fcmovnb jmp xor xor ljmp sarb cmp lods jmp jge xchg loopne enter and loopne fidiv xchg pop out sbb mov fs mov sarl shrb and jp cmc loopne out out pop mov fldl mov xlat jmp lret push mov jne ja xchg in add mov sahf mov xchg test pop cmc mov aad shll rcrl pop sti pusha mov mov jne inc push rol jmp (bad) jmp pop cltd sbb xlat daa pushf inc cmp jo std mov add pop mov lahf aas arpl jle pop iret xchg stc outsl lock push or dec aas (bad) jb gs fnsave cmc mov sub loopne (bad) pop mov sahf jle rcll leave in jmp mov arpl mov push in push push add push sub or jns add mov out cmp fildl dec mov jnp js push mov jl xchg lds pop iret add fistp mov iret xor dec insl repnz lods jb bound ss adc ja jb pop gs inc jnp cwtl jb scas mov jo,pn in xchg sub jp jne push (bad) cli in lret mov and sub popf lods xchg sbb sub daa jno into (bad) mov mov repz inc mov or pop inc pop fs mov data16 pop sub mov fsubrs mov inc push lea lds lods xor movsb mov inc push mov jg test lcall xchg jae pushf mov push in pop pusha mov faddl loop cmpsl xlat inc dec jo shlb leave ljmp add in xchg cltd and jge mov inc mov outsb test lret or adc sti and adc repz js pop mov lock xchg movsb mov mov pop inc adc (bad) jnp and mov stos add push cmp pusha call jmp jbe xchg pop test clc or pop bound insl xor stos aad and push push test cmpl arpl inc push inc popf cmpsb movsl adc imul shl jmp and inc jns (bad) xor or mov xor scas pop pop pusha fnstenv les sub fs fiadd xor addl sbb mov ss or fcompl pop mov inc out mov xchg adc into lcall insl jmp push and (bad) inc jb lods mov fwait (bad) jno int3 jnp mov bt stc test movl push lea je rcl bt sbb mov dec test shld add rol cmp bsf mov call pop ds pop mov or xchg dec inc js inc jp xor push sub sti (bad) maxps movsl sarb jo pop cmp repz aas push (bad) (bad) incb jne cmp sbbl xor xor fildl fisubl lahf mov shrl add mov loopne je aam xor adc pop or mov into sub ss mov insb and ljmp stc outsl mov incl dec jb xchg add dec xor nop aas lcall mov xchg nop scas pop test addl imul sub push mov mov inc ficom bnd dec mov cmpsl imul lret lods mov stos lods shll xorb sahf inc cmp scas stos mov xchg call pushf ret dec push mov jb mov pop aas push inc or in loopne xchg icebp out push (bad) jnp sub test sbb scas adc jno lret fdivl aam fcoml pop das (bad) jnp or jo mov jge iret out inc inc cmp aad ja mov out scas (bad) mov sub pusha out negb xchg lods push aas imul cmc adc inc std jno adc mov fwait mov xchg push mov movsb fistpl jno popf add and sbb and in xor inc int3 push subb fldt push sub loope dec repz xchg std fsub mov cmp pop mov mov inc test mov mov mov test dec jae cmp arpl push loop mov in dec jb dec jmp mov push pop add clc dec jno lret sbb cmpsb pop xlat dec fildl inc (bad) out add sti or adc into dec xchg movsb dec cmc dec test mov xlat push jno pop out notl mov mov push in pop popa cmc mov push push sub push je jno or into test sbb loope insl mov fisubl test pop stc xchg hlt (bad) pusha sahf scas incb jne jnp xchg scas xchg mov pop orl pop xor shrl (bad) mov jo or dec jno stos mull and jg jg cmp pop leave popl jle jbe nop jg push clc cmp sbb mov xchg out mov test jnp inc mov mov and fisub xor shrb mov out xor popf (bad) icebp repz push movsl out pop leave xchg arpl pop iret call inc mov push in and stos sub fstl or mov mov lods repz sarl outsl dec sbb insb repz shrb mov (bad) push xchg or clc cli inc (bad) sbb leave xchg cmp push push inc push dec xor cs insb add inc and ja bt clc not cmc stc xor jmp xchg push int3 iret mov pop push rclb call cwtl inc call push pop cmpsl cmp sbb mov imul fs leave mov pushf daa pushf pop cmpsl pop repz fs push xor mov stos cmc dec pop out mov pop insl xchg out in pop test cli cmpsl lock lcall or adc mov adc add in dec imul cmpl xchg mov and jl sbb mov pop push fildl mov mov stos mov rolb mov cmp cmpl jl cmpb je popa jb pop enter divl popa pop cmp cmp adc fwait or jns mov mov push mov lret clc sub add dec ljmp lcall dec cwtl inc in push add ror (bad) xor sbb pop fs nop xor stos add mov pop push ret inc fwait pop cmp dec pop push cmp mov adc sub (bad) pop (bad) (bad) mov dec in pop cmpsb gs sub inc (bad) mov mov jae inc rcl mov jmp aaa rorl icebp cmc lret ljmp jno (bad) out lahf mov je pushf mov pushf lea jmp sub flds push rol jo lock (bad) in adc in sub gs (bad) ja frstor jbe pusha pop pop adc stc std iret (bad) in sbb inc popf jne stc out out fdivrs aad es jle mov pop sbb adc mov clc or shlb mov iret push sub (bad) mov jnp xor fwait inc pop sub pop push test jne dec push addr16 fcompl notb rcrb das (bad) or jge lahf pushf mov les pushf lods cmp lock inc jl lock nop xor addr16 dec adc sbbl stc gs xorl dec xor xor jecxz insl jecxz mov jecxz push out decl cmp xchg push pop cmp pop sahf mov xor nop outsb add jae push (bad) mov clc push or push or or cmp sub xor jo lock and sbb push leave push stos push or int3 inc mov daa push mov mov push (bad) mov sar es jge cs xor xchg inc cltd inc mov sarl (bad) addr16 push mov cmp pop push pusha lea jae bt test pushf cmp xor push movb pusha call lea je mov mov movsbw mov jmp jmp jmp (bad) mov das jo dec pushf sar push push clc jo addr16 shl cwtl mov icebp lods cmp mov (bad) aas sbb jg aad jnp xchg cmp dec push dec hlt xor insl xor sbb mov jge lahf and jo,pn push lret or push sub mov or (bad) leave stc push test insl lcall cmpsl mov punpckldq mov iret push popa out scas inc fcomip sbb push inc push pop icebp dec cmpsb sbb fistpl leave dec add mov loope loop (bad) dec aam or loop dec xor dec mov das jno (bad) into shr pop into nop ret jl jl int mov jns jle shrl shrl (bad) fnstsw xor pusha mov cs adc xchg lods mov mov incb inc aas and mov std pop pop fwait mov sbb in rcrl and fiaddl inc pop mov (bad) or (bad) fistpl push lods insl cmp inc int dec push in add inc sbb test scas das sbbl sbb and xor ds add push xor outsl sbbb adc sbb mov loope jno les test jg add js cld sbb out lea jmp inc fwait inc jmp cmp fiadd aam sub add stos aam popf sbb push lret fadd (bad) fsub fs movsb mov aad mov and repz das inc cli loope mov lahf xchg lret jne jp inc fbstp and mov and subl add cmpsl daa mov mov out es std scas leave out adc or pop pop (bad) xchg mov test xor hlt mov lret (bad) iret (bad) mov shr push inc cli fwait and outsb xor mov shr (bad) (bad) xor xor mov add cld push dec pop mov xchg dec je mov pop and add (bad) jb (bad) sbb dec sarl inc sbb lds add xor dec adc pop mov into cld ljmp mov dec adc movsb mov dec cltd stos jl jmp pushl dec in pop cmc jle inc cld jo pop add aas sbb push clc daa lods jo xor loopne add push mov js dec repnz ficomp jmp push or hlt (bad) fnsave test adc mov sbb rcrl cwtl test and fucomip dec cmp call sub jecxz mov or sti enter shr lods shll in in add fbstp (bad) cltd rcrb mov (bad) mov sub es imul push mov or inc push stc jge nop nop mov (bad) into lock loope cmp pop jno sar mov jne cwtl push mov push pusha push pushf lea jmp inc ja (bad) pop fisub rorb in icebp mov adc bound or jmp stc (bad) xlat cmp out jbe mov bound addr16 add imul xor adc jl mov inc push xorl pushf sub shl fisttpll pop inc push xor fwait jp xor jns jbe and add fwait arpl push dec lods xchg or sbb (bad) (bad) mov sti ficompl fbld cmp adc push cwtl in scas icebp add xor inc je sahf mov push (bad) leave xchg sahf shrl data16 cmpsb mov pop cmpb movsl mov scas xchg enter dec je nop sub (bad) push dec sahf cmpsb cwtl push call add mov fwait test xchg movsl fldl2e jno shrb lcall orb fwait jl (bad) stc bt cmc sub jnp stc cmc cmp cmp jmp pushf cmp pushf call lea call jg pushf pushf push lea jae dec jmp les mov add aas lods jae mov movsb popa test insl popf popa cmp xchg (bad) mov sahf sar mov lret dec cmc popf add call mov stos out push clc cmpsb fisttpll and flds push adc mov icebp into fist sub inc sbbl clc leave jne sub test (bad) dec incl add pop lret cmp cmpb inc jne and ret mov std loopne mov jne outsb jnp out pop cwtl test cmp jg dec mov nop fsubrl xchg mov les mov adc icebp add out jno scas out sti and push jo inc mov push mov xchg cmpsb sbb jecxz and mov dec outsb inc aas push add lock in mov ljmp and fisttpll in xchg mov xchg mov enter lods mov ja or xchg aam sbb jmp insb dec dec adc out aam roll xchg lret je lahf cltd bound fadd cld dec adc lahf jle inc add cmp (bad) push loop enter mov mov cwtl sub cmpsb pop fcomip jno mov pusha pop mov push push not mov pushf push mov pushf lea movzbw call (bad) pop enter or insb mov sub int add popf inc cmc mov xchg in rcrl inc cltd or sbb mov or cmc mov mov pop xchg test sbb jb scas adc js test scas (bad) addr16 and pop sbb sub dec iret pop mov pop imul loop data16 into add hlt push push mov add sbb out ret (bad) popf scas mov push mov popf loopne xchg imul pop popf clc (bad) mov clc (bad) fcom ljmp xchg movsl and add stc out dec je shrb out dec jnp fsubrp ret int3 shr push mov mov pop jp push sub cmpsb pop mov (bad) pop mov sbb or pop lcall movsb rep mov (bad) rcr gs jge gs repz push adc clc push or jno mov xlat mov scas mov icebp sbb pop inc cmp push enter jge xchg add test xchg lds or ljmp inc pop xor push sti icebp pop les cmp cmpsb mov cmc push outsb push lahf movsb or hlt popf jge cmpl gs fadd aas jb (bad) inc mov jns cmpb (bad) imul jo cmp movsb loopne lods sbb (bad) loope mov or fsubp add or popa (bad) lock push ljmp hlt ljmp and in (bad) jg jno mov add dec adc mov loop ljmp pop pop add push iret stos rcrl push loopne les out scas rcrb mov divl dec pop inc rcrb sti or test or mov mov popa sbb pushf pop or sub lret cmp into shlb test (bad) iret xchg icebp jl sbb dec fiaddl adc mov push sbb call aas sbb (bad) cwtl in push mov xor cmpsl scas nop in pop mov cmp jmp add data16 lock inc jge popa jo,pn aam shrb out push jmp push push and add aaa cmp mov mov inc inc aad scas mov lods cltd movsl mov jae fisttp cli mov jae,pt bound pop push stos imul inc pop scas (bad) or test xchg popl rolb fstl or ja pop mov inc push movw inc mov pusha pushf lea jmp cwtl setns pushf movb bswap lea mov lahf mov cwtl bswap lea pushf movl pushl push jmp jmp lea je push call call (bad) push pop or fsubrl mov cmp fcmovb fldl and (bad) sbb lcall out outsl les (bad) loope cs fisubl dec cld test xor sub flds cmp popa (bad) push and (bad) xor xchg push inc xlat jg pop inc sub popl ret jb frstor nop ret mov and cmp cmc fwait and mov (bad) out movsl cs (bad) iret lock in sub jbe jns xor scas jb jno and pop sbb dec xchg and push sub sub in mov mov ficompl jno mov add pushl cmp movb lea jb stc pusha cmc test cmp pusha lea jae pusha not setg mov bswap pushf movsbw jmp rsm adc mov push sub js jmp out pop add das dec xor push jb add mov pushf lods push out jno rcll push mov xchg jle adc sub jns dec or js push xchg cmp adc cli xorb sarb int push pop repz pop pop add xor fisub movsb or dec pop cmp mov andb jns pushf out jmp push int3 inc xor push loope aam lods sbb sti jbe push or xchg call je sub sbb test decl push xchg iret in cmp mov (bad) loop int pop mov cmp cmc cmp call push imul sbb fmuls sti pxor pop loopne int3 jle (bad) pop adc clc jmp test stc dec xor jmp das inc aas lret imul jle ljmp mov add sub adc int3 mov repz xor inc (bad) repnz cmp xchg pop inc lret lds fisubl dec pop test add dec cmp (bad) movsb ficompl inc (bad) repz mov out inc cli jmp (bad) shl rolb sbb fiaddl dec nop rorl inc lcall lahf and add jle push dec jno dec jo pop sbb mov or xlat movsb andl in lods adc imul fs jno mov repz pusha movl call jmp sub jns imul or or push jb mov cmp dec repnz pop mov inc xchg mov enter stos xlat pushf push or adc push xchg push mov sbb or mov (bad) adc inc mov jbe jbe int3 xor test push mov fadds aaa jae leave test arpl out jbe mov push dec mov cltd pushf ljmp arpl es daa push call pop and imul call or ret cld pop and jno mov lods pop loope inc and lret sbb inc and ljmp dec pushl lea jmp ficoml mov xchg daa sbb outsb add test fwait arpl fs push daa cmp pusha mov lret cli cmpsl iret iret test sahf lods hlt dec inc icebp adc adc rcl sub frstor xor cmp inc and inc jno je xorb (bad) aas pop mov stos or roll xchg ss cbtw insl repnz mov xor pop cltd popf loop or mov (bad) nop (bad) out nop jp pop cmpsb enter in in sub mov mov mov out sti cmp xorb aam dec adc data16 jecxz xchg mov dec je add mov movsl mov or fldt inc mov pop push popa icebp rcl outsl or dec xchg inc cmpsl xchg sub pop imul out enter ja jb pusha pop fcmovnbe lret repnz aam inc add loopne movsl int or or testl shrb sub mov mov test aad stos mov pushf addl cmpsl shrl jns decl push dec xor pop pusha pop inc pop pop xorb push push aad stos jno mov es (bad) pusha lea jae call lahf inc mov pop cwtl (bad) scas sbb shll rorb push pusha cmpl cmpsl cmp fnstenv fcmovnbe lods out ja nop jae cli mov xchg lds jmp aad std (bad) dec pop outsl cmp fsubs xchg push cmc stc inc push insb push cmpsb adc cmp dec cmc jmp sbb sub addr16 mov lret and push xchg push popf mov cmp sub shr sub sbb mov std push std and push sti sbb adc ret and int3 pop test test stos hlt xchg movsb (bad) jp (bad) mov fldl lcall scas jne jnp and and xchg js (bad) sub mov cmpsb xor inc and sbb sbb jmp loope out pop pushl inc mov (bad) decl scas cmp dec mov (bad) loopne loopne fdivrl jno push cmpsb mov repnz jmp mov sub push int3 js test mov jmp pop sbb adc jne mov add cmc or mov xchg test inc in imul cwtl add aam cmp lret inc and popf and cmovb pop fiadd adc cld pop inc (bad) mov pushf xchg mov enter addr16 jae push pop test movsl aad cmc stos sbb jl xlat pop add dec cmc ss mov mov jb mov imul push cmc add pusha movb movw push lea jmp jae mov in sbb sub mov mov cmp sbb jl jo scas out inc aaa mov mov inc out lret or test mov mov imul xchg push inc sbb mov mov sarl popa test cld or jno ds cmp mov mov jbe clc call (bad) or cld pop and fistp sub add xlat pop scas adc inc cmp das scas push jge add mov mov sub push pushf lea je rcl add mov sub bt neg shr adc mov btr add bsf add and mov cmp call (bad) in outsl (bad) pop ret aam cs jp ljmp mov sbb sbb lods adc or repnz rolb cmp sbb xchg jns or cmpsl inc (bad) jge outsl push xchg (bad) jb mov push pop add pop inc push cmp dec not into loop mov lahf cmc push mov decb add dec stos xchg icebp mov stos hlt gs cmp mov iret inc lcall jmp dec sub or jl jb xor sub insb xor imul icebp jno mov insb (bad) outsl cmp call push lock std std xchg xchg imul into mov pushf mov pop std ss or mov in cwtl dec inc dec and aam pop roll shrl test push dec xchg mov cs add xchg in xchg push jbe fs (bad) popf iret mov sbb push arpl jmp sbb dec gs xor inc movsl pop cmpsb mov and push dec ss mov rcrb adc int xchg push lock mov cltd mov loope xchg pop out pop icebp push xor add and sti mov (bad) enter insb xor push (bad) jg add xchg jb pop stc je aad in cs imul cmp sbb jns inc sti nop pop pop fs out int xor add lahf pop pop cmp lea or xor xchg pop mov mov fwait jecxz add pop in sbb mov dec push push add sahf shrl ja xor push cmp inc les ret mov loope push push jnp mov add jmp gs mov push push cmp pusha pop (bad) xchg into movswl mov cld cli lds jp lds sub jl mov jne sub xor gs inc lea and push out mov scas rorb jno mov out mov sub lea jns pushf inc lea jmp clc cmp pushf jmp imul daa pop loopne add sub insb frstor add mov jno jne xchg mov mov dec repz je mov xchg (bad) dec pop imul mov cmpsb sub daa (bad) jns pop sub sbb cmp enter testl leave pusha call sub lock int3 jnp push dec icebp push es daa dec test cmp ss jge rclb mov mov mov pop js mov fadds lds mov in or fistpl repnz xorb mov leave jno scas dec inc fwait add imul aaa cld test jecxz and and repnz xchg sub (bad) push sub inc pop enter jns fdivrs sub icebp jbe sarl and xchg aam inc ljmp xor rorl stos mov daa in fisubl test xchg test pop and pop lcall xchg out cmp int mov jl jl loop cwtl sbb hlt pop lahf or aam mov push pop popf data16 mov jmp cld or mov pop cmpsl cwtl ror std (bad) loopne ss cmpsl fmull pop jle add les cmc dec mov test xchg out fnsave adc aam incb sub mov push ljmp mov pop jg inc outsl das inc jno ds xor jae imul mov pop enter mov xchg popa popf push out mov jbe mov enter sub cmp push push push cmpb pushf fadds add add fdivr (bad) adc fcoms xchg aad packuswb in add fadds addl test fldcw jno lods (bad) cmp js xchg jg je mov fist outsb ficompl jno imulb mov push icebp dec push data16 inc pop roll dec movsb fwait rep (bad) sbb movsb fadd fdivl pop test add enter es jge sub push cmp dec repnz xchg dec les enter pop xchg xchg mov cmp xchg (bad) jge mov pop xchg cmpsl pop inc incb sub lods cltd (bad) loope mov arpl fimull xlat daa cmp xchg sub jecxz mov movsl stc xchg inc cmp push fscale fildl (bad) pop push pop (bad) mov jecxz lret cmp fstpl dec ror rolb iret (bad) enter jno lods cs out jno push lea jae xchg mov not pushf not mov bswap pushf movsbw mov push push movb lea jmp add inc gs outsl fs gs outsb outsw jb popa je outsl outsb add in sbb insb adc arpl ss leave xchg cmpsl xlat call movsb mov lcall in in adc daa pop sbb das dec mov cmp mov dec aaa mov cmp es cld xorl push cld push in push inc pop lock inc div mov scas mov inc push test sbb sub sahf in test testl mov add jecxz test jp out adc icebp jns push mov stos ss xor lret adc stc in (bad) lock inc sarb repz inc mov jno rcll jae test ljmp jns fldl xchg stos test in sbb adc enter cmp mov popa mov pop dec orl push ljmp mov mov push sbb pop mov xor fistp pusha in imul test (bad) xor dec sbb ja test pusha aas add inc pusha jmp jns dec cmp and jmp sub cltd add faddl pop (bad) repnz repnz fadds pop insl push gs add cwtl in rcrb int lret pop stos or stos (bad) incl das out add jg bound imulb mov je push mov rorb movsl jns (bad) jmp mov add scas mov adc dec loopne mov movsb fwait push in out inc push mov mov sub popf sbb jo ret lcall mov rcrl xor dec cmp out lock pop in push adc cmp jb and mov std dec pop and pop cltd test mov in in jb mov std pop add pop es pop lret and xor and mov xor pop stos and out (bad) pushf add or movl or and and xor jbe push pop lret lcall fisub leave xchg jno in stc inc int3 xchg or mov ljmp pop mov fs out inc ja mov (bad) cmp mov addb bound js xchg mov jp jle jae test lock dec cmpsl pop inc pop mov jbe push push nop out push inc std mov push je ret cmp test call xchg push lret jg jo nop mov pop addr16 mov xchg (bad) int stc popa adc mov stos dec cmp cmp aad sbb inc push mov add sbb aam les insl popf popa popf add dec dec mov scas cmp sub add es popl stos xor xor mov (bad) (bad) in movsl fcmovb mov add cs sbb movsl mov mov pop cwtl idivl pop inc lods pop scas xor add cld and inc fyl2x or lock mov imul pop test pusha add pushf movb lea jmp adc dec enter into mov cmp jl dec (bad) jg mov pop popf mov lock in pop outsb xchg jo and sub rorl adc pop push inc (bad) xchg cltd lock pop lret (bad) fildll dec fldenv cli movsb cli movsb mov or out xor cmp mov cld pop xlat or idivb int inc lods xor fisttpll add ret fistpl fsubp xchg inc test adc imul and cltd sub mov pop popw rorb dec aad out out cli in shll loop fucomi jno cmpsl sub jle mov cmp jne dec sti add leave idivb pushf add mov aaa mov lahf pusha fbstp fnstenv es loope mov xchg mov jmp int3 lret xchg out pop xor jge cli mov out mov dec mov (bad) aam mov push test or or int mov mov cltd cmp (bad) pshufw ret fadds sub fiaddl addr16 mov inc jnp push sti orl mov jno cmpsb inc dec push insl aas jge sbb mov and lods (bad) popf push mov push and sbb sub cmpsb clc lcall mov imul fistpl daa xor outsl aad mov xor mov pop shrl push cs xchg xchg dec xor (bad) arpl mov dec jnp pop arpl pop xor sbb sub aad call notb test push ds mov mov push js jnp push and (bad) je aad nop mov jbe test dec pop cmc test (bad) inc fldl xor dec pop and adc mov (bad) std movsb cli cmp pop fdiv or rorb pop cmpsb push jne,pt lea jne not mov bt rcl call neg sub pop sub inc mov test cmc sub call lea ja stc stc add jmp neg mov test mov movsbw mov sar movsbw dec bswap mov sub jae test pushf pusha or call add arpl inc jb popa je inc popa jo jne gs imul lea mov pushf lea jmp jmp clc pushf mov clc cmc add jle test push mov lea je call xlat push in inc fucom fldl2e jnp scas adc fild iret push mov xchg inc clc dec movsl mov xlat xchg mov cmpsl pushf inc nop loope fs dec test fldt cli inc mov sarl notl mov lcall int pop inc cmp (bad) daa js stos inc lock sahf imul or pop inc pop jmp (bad) push sbb xor test pop dec popf and mov fwait jecxz fcomps fadds repnz push ret cmp sub xchg xor and movsb fnsave rep stos mov inc dec sbb or mov addl jno push popa popf faddp cmc or sbb jnp push sub adc xor xor lock push ljmp or dec push cld (bad) icebp xchg push rcrl xor cmc mov sbb xchg sbb inc hlt stos fistp sub out int3 inc fldlg2 (bad) lock lock inc push jnp imul stos nop out pushl mov pushf insb (bad) icebp out mov ljmp xor icebp fwait in shr pop or test cmp inc arpl or jle iret xchg dec sub (bad) mov xchg mov mov and xchg dec jae jg js mov pusha jp,pn mov xchg mov ss test js adc jmp add cmpsl lret jo arpl sbb gs dec mov dec xchg push shrb (bad) jae repnz movsb std mov ret sbb xor (bad) jno mov cmc jmp add xor daa es inc mov hlt push sbbl sub adc aad leave inc mov test pop ret add add inc test xchg call fldl push repz add cmc push es xchg add mov push dec mov pushf ret std mov sub sbb push aaa (bad) outsl jecxz lods pop shrb cs stos aas pushf adc stos sarl les sub and pop and mov not push cmp mov push cmp push setge mov bswap bsr btr mov mov xor adc mov push sub lea pusha movb lods rcl sub not setge ror not setno not dec shr xor sbb pushl ror jmp push jmp lea ja sbb test setg sub rcl adc mov pushf sub add cmc mov shl mov push cmc repnz movb lea jne pushf setge sete call pusha jmp shr sar call and dec faddl jle or add xchg (bad) fisttpl sbb sbb pop imul xor mov (bad) iret rcr roll xor mov jge xchg scas sbb inc push (bad) jne pusha inc adc cmp or fs cmp sbb (bad) imul dec stos cmp cmp dec pusha mov imul daa mov pushf adc lret incl imul cmp jno xchg insb mov mov leave (bad) movsb mov pop mov mov push mov xchg adc ficoml adc scas in fadds std dec movb scas inc mov sarb je inc fadd sti mov jae (bad) push push add icebp jae (bad) mov xor sub cltd packsswb test pop add push mov push jle dec fs out adc push pop aam ds pop sub or add mov pushf pop cmpsb std das xor fisubr js ds xor push cmp or cmpl and (bad) out int push mov aaa fwait sti push ror mov ss and cmpsb mov enter jp,pn call fs fcmovnb jge dec pop lcall or sbb and dec fsubrs scas sub in bound cmp cmp push mov cmp xchg push xchg cmc xchg jecxz jno test call mov test popa jle (bad) xor dec pusha xchg mov (bad) xor cmp fisub aaa into and leave fnop sbb jmp fst cmp mov mov xchg inc xchg sbb add mov mov loopne cmp faddl xor sbb mov fldlg2 shl cmpsb mov aam pop jecxz nop mov and and xchg dec repnz pop es sbb lahf mov pop xchg out sar jmp push jo insb push dec sub adc gs mov icebp or xor adc out popf add sbb lock jg jo mov mul clc jno dec pop fadd jns dec sub jnp addr16 mov scas push jae fdivs repnz xor sbb (bad) or (bad) mov fldenv adc pop jp mov mov fistpll push add mov insl data16 cmp or cmp and imul jno cli and mov cmc lods repnz lret cli les in repnz fwait in jmp and cld inc push jno sahf ror ljmp cs movb pushl ret out and mov jmp (bad) sbb mov mov pop and nop dec gs push jbe fidiv push mov (bad) mov jg jg xchg call xor jg lds imul xchg and lret push ret rcrb arpl jne adc das or adc xor pop xor xor xchg sub cmp adc jb or sbb add push sub dec dec mov rcl jnp cmpsb cmp lea iret jo movsl inc jle jae jno popf dec inc adc jmp lods pop jecxz cmovs dec adc int3 or fwait test mov mov pushf jb jmp jge gs test nop sbb aas dec push lea enter mov aam xor mov (bad) pop pusha mov push pop out test or sbbb outsl nop lods mov gs lea rcll mov sub mov movsb jp dec xchg fcom dec popa rcrb cmp int add cmpsl insb fstpt roll xchg xlat mov mov push inc xchg dec mov sbb adc sbb push ja push nop jne scas scas adc pushf pop xor add das mov insb (bad) jmp jecxz xor dec ss lret xchg and stos mov jecxz jecxz add inc dec xchg ja pop jg pop jnp adc sub xchg in out test shrl (bad) ja adc loop rcll mov (bad) sbb aaa cmpsl jecxz pop mov inc cmp push je pusha lods stos xor lret cmp loop push mov fldenv int3 repnz test pusha and xchg out cmp ret sub dec add mov adc push into xchg pop ljmp and jp inc push push sbb lahf add push sub in mov mov dec pushf mov (bad) cwtl inc jae push mov aam inc fsubs and adc cmp xor pop fwait mov and jno insb shrl mov jp jp adc movsl (bad) mov pushf subl dec xchg xchg lock sbb jb mov cltd lret mov inc ret int pop cmpsb pop ret pop cltd add mov xchg out mov add mov push bound cmc pusha aam leave and xor dec mov icebp les and jb dec mov test cli push sti push hlt out adc sbb and or movsb mov sbb inc cmp cmp lcall or inc sbb jne dec das and xchg push mov nop push nop jg xchg enter call movsb cmpl xor jae sbb and push xchg lods jb test jge cs mov (bad) and fsubrs pop sti mov loopne js arpl inc xchg pop out push int daa sbb and lret hlt xor cltd pop lock push add add call rcl cwtl sub mov sub hlt xor mov jno aad inc negl or sbb fwait adcl pop jl inc jp mov or fwait addr16 and pop lcall lahf (bad) mov inc add arpl jecxz xor lret xchg call cmp pushf add sti or sbb xchg imul xchg sub pop xchg mov shrb and nop ja jle sbb jne jge dec je mov dec mov jae fldcw jl fiaddl int xor mov loope aam inc imul test cltd sub add dec adc (bad) (bad) jns xchg rorl data16 (bad) adc mov icebp add cmp mov lds xor jmp jp mov js rorb push dec pushf jno cltd js push sub ficoml jmp call pop je aas mov push sub cmp jb (bad) enter lock or jb inc mov shlb push xchg test (bad) in rclb fs inc jge in int loop out add cmp sub add sub aas fwait idivl mov rcl in hlt push cmp sub adc out movswl xchg movsl push outsl ret mov ret imul ret xchg enter inc xlat call cltd scas ja je (bad) aas into xor dec push pop cmpsb cli jno cltd add or pop iret xor mov cmc cmp popa movsb mov imul mov adcb pop mov or pop mov pushf inc pop daa sub (bad) and pop loop dec inc cmp dec cld or fsubrp jae mov mov rorb jecxz hlt push push dec dec jb pop inc cmp inc xchg dec insb push test int3 and dec jo mov xlat movsb bound dec outsl add in xor jge outsb add jno xchg cmp fs jne call cmpb mov movl lea jne push btr inc shrd sub cmc neg aam mov ror add push add mov mov call mov mov ror fisttpll sbbl and bound sub mov jae or fistp stos arpl pop pop outsb popa rcll (bad) dec adc adc and inc lds sub nop scas adc mov aam and sub bound adc mov imul in std call mov shl call mov lahf lahf inc js mov mov jmp or daa mov loop ret dec mov leave stc cmpsb sti mov xor pop xchg or cmp jp add xchg lahf test sbb imul stc (bad) enter shrb (bad) clc cmpsb out add push dec pop mov mov or adc popa inc popf inc mov push popa insb rclb iret movmskps outsb aaa ret sbb daa cmp pop (bad) pop popf adc lea (bad) outsl or scas dec xchg push sub mov sub lods shrl les mov mov test scas push (bad) cmp pop jo push mov subl popf jno xchg ja out xor clc bt clc neg movw call (bad) add inc fsubr inc cmp add xchg cwtd cmpsb jl jae data16 and sbbl ljmp push adc push push adc in xor (bad) ja push mov mov outsl out inc pop test push push xchg dec pop ret jnp cli and addr16 adc test adc push xchg jno aaa mov sub ss jno push inc cli icebp xor dec outsb jo lods dec mov lahf mov mov imul sbb int3 or mov xchg ljmp pop xchg jge push or push inc push dec xor cs insb add and pushf pushf pushl ret add push imul jb imul dec popa outsb fs gs add clc rcl movsbw mov sbb test bt (bad) lock inc sub push mov pusha clc cmc push test call mov movl movb mov lea jmp movb lea ja sar sub clc adc add bts mov bsr lea mov mov (bad) lock push test cmc repnz push jmp loope adc out inc (bad) aad cs mov into lock xor push lea bound and inc data16 mov es push fsubs push rep arpl add sbb outsl fwait arpl imul out mov push (bad) jb test and aas ret arpl push lea cmp ss int3 xlat or gs leave in outsl xor mov cwtl loope outsb and jns outsb jae aad mov call mov lahf fildl jae rorb cmpsb mov pop xchg inc dec mov add jmp inc stc pushf orb cmpb dec aad (bad) mov xchg ljmp pusha pop or push outsb std cmpl stos mov fsubs sub in clc push dec out mov jae cmp std add les scas iret out add jle push fs mov pop addr16 jae lods cs (bad) and aas (bad) test in std inc outsl mov mov test dec dec sti inc wrmsr sbb fwait popf jle jae mov aad sbb push fldl sbb fsts into fbstp xchg xor rorb outsl scas mov lods dec (bad) xchg test push cltd or push sub insl xor push sub xchg cs (bad) xor mov sqrtps cmpsl sti in and addr16 cmp mov inc sbb das mov adc lea xchg testb add push jp (bad) enter les jg jl pop mov insb push xchg dec push sub ss and pop xchg loopne xor je outsl fs gs imul add mov cmpsl aaa mov ljmp mov sub sbb rcrb and sub cmp std xor mov dec aaa mov lods in lahf fbld xor (bad) jne jl mov ret sti or pop pushf imul sub mov adc add es xor fildll popa pushf cmp mov cmp lret add add jbe gs int jle xchg adc cmpl ret cwtl out lock shll lret hlt adc imull xchg inc lcall pop movb jno xchg repnz adc pushf lea jae jmp add pushf add rcr sub neg mov jmp rcrb mov ds enter xlat daa (bad) ja sbb push fwait test mov mov mov popf xor push push repz jns (bad) idivl lret cmp mov or test cmpsl cld stc out lret repnz rol add data16 ficom das inc movsb dec (bad) jecxz or scas xchg mov mov inc sbb sub arpl or xor (bad) sti inc fisttpll test push jne popf scas mov add out or mov lds inc mov cmp aad std cmpl ss lcall or cs lock push (bad) daa mov dec jp fisubl lock pop jne xchg or and mov imul mov xor inc pop and mov stos mov bound mov or fcomps sbb popa movsb mov in nop dec cwtl daa cmc push imul lods jno nop push aas data16 call add inc gs jb jns outsb jbe jb outsb insl outsb je insb outsl arpl jmp push mov lea push mov call movl mov pushf pushf jmp jmp push push mov call xchg xchg sbb ret add add add add add aam add add add add add sbb add add (bad) repz add add or add sub sbb add add lea add jl and add add jb sbb add sbb add add bound add pop mov add add rclb add add repz add add add sbb add add mov sbb xchg mov sbb jb sbb add add add fs call push lea jmp repz popa out xchg dec jo les test lock adc fstpt out adc dec dec nop aad lods pop inc repz and shll push loopne or xor sbb and adc stos cmc dec popf mov pop sub in mov seto repnz xchg stos mov mov in xchg xchg fs stos pop cmp je rolb jnp test ja ljmp iret movmskps fnstsw in sarb push call and outsb icebp fisubrl or fwait movsb (bad) mov sbb sti test push fstps mov xchg sub cmp pop mov push pusha movl pushf movl pushf lea jmp push lea ja cmc push push imul cmc add push pusha movw pushf lea jmp call fmull jl das (bad) or sub dec mov ret arpl repz or lds lcall sbb mov dec lock insb xor mov inc sub sahf jns cmp in sti dec into bound mov and mov sbb push sbb adc fcomps scas std es adc movsl pop inc push mov cmpsl inc int3 ja xchg mov fwait ret dec insb cmpsb sub negl aas xchg adc xchg adc dec aam xchg xchg adc test cmp jl insl xchg jae jl mov cmp pop (bad) leave (bad) aam pop sbbl fsubr push pop adc pop inc adc cmp bound pop lea xor popf push dec mov movsl sbb (bad) std adc mov push (bad) mov xorb sbb mov cmpsl push cwtl sti les bound mov mov movb test shll iret cmp imul inc ja mov loope ret push iret adc mov mov xlat addr16 pop popf jno push lahf loopne xchg mov das mov xchg test cld cmp fs sub xchg imul fcompl cwtl shrl (bad) decl push jmp or and dec push (bad) std lcall mov mov std (bad) fs scas adc adc xchg or inc sub sbb push push cwtl insl out (bad) inc dec add xchg std adc add sbb jne mov mov inc push adc and hlt xor lret jmp das test mov ret scas sub push popf es rcrb (bad) fcomps xor and add push frstor and mov into js mov in test std loop cs inc fsubr cmpsb out fwait sbb imulb popa cmc dec nop dec jae mov jecxz fmuls adc pop mov inc clc pushf pushl call pusha movl push movl movb push pushl lea jmp pop shrb push dec xchg movsb add imul in in xchg jmp iret push insb fiaddl mov pop loope push pop mov mov lret xor fsub mull out rolb aam repz cmp pop (bad) xlat rorb push gs aaa sbb pop out cmpsl fcoms int lret push ret out cmp iret push mov stc popa jge mov stos xchg xchg movsb lds and shl mov (bad) aas mov loope mov jmp imulb cmc inc dec push shr addr16 std push fisub sub xchg mov xchg roll and sbb dec mov mov lock lods rol inc push dec das dec pusha sahf loope iret jno mov outsb icebp sti in sbb jl stos push repz dec and ror sar data16 loope xchg lret mov jl xlat xchg sbb pop in add out push pop jmp lret movsb mov rorl nop and add inc sarb fild scas fsubl jb mov mov add cmp paddsb mov sti and or xor add sub jnp lds int inc fildll lods icebp sbb ja sub mov jno mov mov mov pusha push movb push pushl ret call xchg inc cwtl lea movsl mov cli lds inc cli dec scas xchg in pop jg mov and jmp addr16 es cwtl (bad) and leave push mov or cs (bad) je dec push daa or xchg sbb jae fimull popf xorl adcl pop and out or cmpsb or sti sub sub imul mov or mov jl sahf addr16 mov sarb mov xchg imul into xor (bad) mov push push xchg out loope sbb (bad) test es rcr sbb and pop les cmc mov out aas andl pushf sbbl ljmp imul (bad) jg mov test lods pop out cmpsl pop aas add or negb test mov mov pop inc jge (bad) jbe push dec xor push add dec jb mov pop jnp ret and adc cli dec inc and scas adc into test std xor ror stos mov stc test pop pop loope push or mov mov fcoms push and int3 lret loopne shl clc cmpsb mov adc enter call stos adc mov dec pushl cli (bad) aaa push ss dec jg add jecxz outsb jno pop sti arpl xchg adc enter pop xchg out (bad) bt rol mov pushf pushf not mov movw neg test cmp lahf cwtl lea cwtl movsbw lea jo lea pop jmp iret (bad) (bad) add mov or inc mov push inc xor jle sbb cmp aas add mov jl pop into jae add (bad) aas in xor push mov in push dec ss jp add mov lcall xchg loopne mull pop insb orl xor sahf arpl stos mov cmp inc sbb inc adc rcrl add repnz jno lods or fiaddl or push sub rorl pop add adc test dec push popa (bad) jg push bound push xchg pop daa mov cmp lcall lods icebp mov in (bad) mov xchg stos xor pusha (bad) icebp push shr sub rcr test mov push mov or call sbb sbb imul cmp mov push dec lds lods or xor inc push xchg stos mov mov in icebp fistpl inc arpl pop (bad) outsl iret loopne dec pop xor dec xor in negb into sub mov inc sarb pop jno xlat cwtl sbb call jge inc cmp pop shl push shr mov fsubrl adc or mov sbb das cmp add enter cmc jmp inc jl mov cltd jno in xchg movsb jno test popa ds inc pusha jle mov sti aaa push xor mov hlt push aam int3 sbb addr16 adc sti ljmp sbb addr16 inc jl aaa addr16 or mov daa sbb adc in and sub popf add iret loopne jg stos mov lock adc adc outsb pop cmp cmp aad jbe in mov pushf push dec cmpsl adc ret inc (bad) seto push loopne xor ss je insb sub inc pop jne jne xchg jns ja movsl and jecxz das push pusha sbb and daa or or dec xor sbb pop sahf jno test mov push sarl push imul sbb mov rcrl jmp es xor movsb pop outsb clc inc mov imul pushf jg hlt imul xchg xor sub add mov xor xchg int3 xor dec push imul push flds mov inc jle movsb lcall clc rorl pop test cmp test movsb data16 mov xor and xchg push pop jno test lcall jae outsl (bad) loopne pop and or scas xor add repnz sbb icebp or mov lods add outsl inc test inc popa cld and push cmpsb and cld inc test (bad) scas add jo aas xchg ds out repz aaa jge outsl xchg xor sbb aam dec push sbb test or (bad) inc in sbb mov loope (bad) idivl add in add sub xor pop add xlat sub pop adc push test lods xchg fmuls js stos mov push or xor inc mov (bad) int3 roll dec pop out imul gs sub mov push mov and xchg gs xchg add test out lahf fistp imul std mov lods out mov ret std insl insb xor push out mov pop insb dec xchg add dec jae clc fsubr (bad) pop fwait out xchg ds mov repnz mov (bad) mov and xor xlat call arpl push mov (bad) loope mov setae sbb fsubl dec loope cmp test stc out into (bad) cltd stos stc or sbb (bad) decb sbb daa movsb and add or jecxz jae nop (bad) pop push in cmp mov push pop aas dec push xchg stc xchg and clc push add adc mov inc ficom and es mov pop and rcr adc xchg mov mov sahf inc push les mov sub (bad) enter mov ret add and (bad) jno (bad) test test and call call std lret ja jae xchg jnp ja push sub add bound xchg shr ss lgs xlat out out lahf shl adcl out jp and xor sub push adc push dec dec popa outsb mov mov pop inc addb in (bad) dec test aas pop push (bad) and mov pop pop add outsb jo adc push (bad) push (bad) test lods sbb mov (bad) jbe jb mov (bad) arpl (bad) fdivs lods pusha sahf jae mov cmc adc cmp and (bad) dec jno xorl out add cli int xor mov out cmp adc test mov insb jb push std inc rorb aas jb cmp lcall aam es xchg xorb and sti hlt lret dec call sub mov pop addl mov (bad) xor cmpsb std pop incb test loopne jbe dec lods push bound push es movl xor add mov mov mov into adc (bad) xchg dec loope sub cltd in div iret inc sti lcall cmp dec jg xlat mov movsb mov xorb scas pusha pusha pushl inc push call xchg xchg lods repnz lret xchg movsl faddl pusha sbb std test std loop inc jge mov sbb into aaa sbb xor sbb in push rcrl xlat mov repz xor pop mov jmp leavew push shrl test mov loope mov jbe or push arpl jge mov adc (bad) and pusha adc pop scas mov mov push sub lods push lret add out pop inc data16 (bad) (bad) into lock cld sub adc adc dec aaa adc movsb jp in aad jno jg mov arpl addr16 adc ret mov sub hlt out mov adc repz ljmp xor mov lea sub addr16 idivb es pop pop jb scas xor fistpl test sbb stos adc add mov inc rcrb mov lret inc sbb sub add gs jg loopne or dec xor (bad) and movsb das push inc gs lret xchg lret push jg push jge aad movsb in aas push sbb inc lahf lahf je in xchg scas pop pop mov hlt popa jae pop jl in repnz mov cmp (bad) loope (bad) jne stos (bad) out pop or cmpsb adc std loop mov sub dec mov push test sbbb mov outsb std or inc xor and cmp dec jmp fs les and ret jg jae mov es mov shlb push je fild sbb xor clc (bad) xlat cmp stc add pop jle int3 ret fistpl call pushf pushl lea jae cmc stc bt jmp bt test pushf repnz mov lea jne lea movzbw bswap movb movsbl pusha mov jmp pushf push pushl ret add jmp pop xchg sbb clc iret test into inc (bad) repz push lods jb pop lock inc ret mov push mov aaa daa imul push stos push loopne pop xlat call movsb add mov lods mov addl dec fs mov sub push mov cs jnp push lock jge pusha mov jo pop jbe dec leave xchg pop ljmp xchg sub inc dec sub cmp jb movsb fistpl loop push in cmpl ss cmp mov fucom lret jl pop mov cmp push or jno jge or sbb mov mov mov daa in dec enter push push xchg jl dec (bad) jne insl repnz adc test jbe adc popa jb (bad) mov jae xor into jne adc mov into push ljmp mov fldt (bad) nop mov push mov mov (bad) out fldl2e sbb movsb aad popf add or cs repnz push das addr16 lcall hlt mov or pop addr16 and mov jnp movsl ret adc mov mov add fild xchg mov and shrb shrb sbb jl xchg cld mov jb cmp test cmpb pusha pusha call mov movb jmp (bad) adc (bad) ds cmpsb cmp xorl lret jmp inc jns or and cs faddl insb roll fsub mov clc mov rol or into pop xor test cmpsl daa sbb les push push out sub lds cld or decb jno jl mov xchg inc enter les hlt stos hlt iret adc dec dec xor shll jmp mov jp adcl push dec adc scas (bad) fist dec mov push out das push mov popl or repnz pop fwait push sub adc imul adc jg out cmp inc cmp jns and cld (bad) and push pop jne xor adc fs mov xlat or add imul fidivrl jmp scas sarb out adc std stos aam jno jnp nop int mov inc pop lahf mov pusha call das pmulhuw outsl aam cmp inc cli cmp jo repz inc add int push or (bad) jb and cmp sub repnz sbb mov mov mov aam mov int3 add adc or xchg repnz clc test daa dec imul aam fildl mov xchg sbb subl sbb add loope mov movsl jg lcall adc stos bound mov add arpl jp ficomp pushf jmp mov jp int3 sbb js mov and sbb sbb ljmp mov sub inc pop and int3 xor cmpsl idivl aas stos xor cmp addr16 fnstcw rcll adc push fnstsw add sub sub cmc gs jp in into and sbbb mov xchg lods inc fbld fsub lahf mov cmc adc jne rorl loop mov push cwtl lock mov inc ljmp sbb jp jmp ret aas jecxz test aas and xchg xlat das jo arpl imul mov (bad) cld cmp int3 inc push mov rclb fsubp xlat lcall lods int mov jno jns lock mov jmp push addr16 inc pop cmp outsb dec mov mov mov push cmp fnstenv mov xor movsl repnz in repz std loop das mov std (bad) loope jns adc sub (bad) mov dec lods push in stos xchg icebp xor add dec or and dec mov shld pushl shrb mov adc test (bad) rorl and or dec or mov test cltd sub bound pop js push and pusha mov lods call pusha lea jb pusha pushf pushf pushf pushl ret inc jae and jle bound std in popa lds pushf mov in rclb cld add lods repnz fiadd push outsb jg push push cli insb push pop nop pcmpgtb jb (bad) shr add cmp imul frstor insb jge (bad) dec push sub mov ficom add aam add loope lcall repz jle ja (bad) cmp push dec mov int push gs push and jecxz out adc mov fadd fsubrs sub mov lahf adc or repz mov (bad) lods add out inc fnstsw jbe sub sti cmpsb mov int icebp into fcomip mov lock xorb xchg sti sbbl gs xor call or out imul jmp and sti cmpsb loope std loop jb xchg in mov ret cmp mov pop loopne hlt jp mov cmp mov dec pop pop jmp es fs imulb push sbb inc cltd shl jmp xchg les mov adc add jnp pop jg js add inc add inc ret sarb lret pop outsb sbbb or pop jbe scas cmp idivl push inc into jno in or push push dec cltd es cmp xchg test into movsl mov or push test or xor loope loopne andl adc std (bad) icebp inc sbb jle fsubs mov fcoml loop lea gs sbb mov imul xchg imul (bad) or xor adc push call and mov sbb mov push jp cmp ja test mov push push lds fsubrs (bad) int or and push add lret inc push int add (bad) fsubr mov jno jbe pop adc xchg (bad) decl test in dec mov pusha movb cmp call mov jmp jb mov (bad) xor test jnp jb xchg data16 frstor pop enter cwtl xchg mov jecxz sub jecxz mov push push mov cmp adc pop adcb jle jecxz inc fwait mov xchg sbb leave out fcmove xor mov and pop inc cmp xor add pop mov cwtl adc fisubr sbb popa jbe or xchg mov mov jae scas (bad) pop test loop aaa ljmp stc cmpsb sbb add nop cs dec ret pop faddl inc fiadd and roll jno jne pop das push pushf pushf push lea call bt stc sub pushf push mov jmp jl scas int lock sysenter cmp xchg dec xchg sub lods jb jle (bad) test pusha push lods jb bound pop push sub dec inc out fisubl dec pop js mov mov je cld pop ja mov std or stos xor mov fldcw cmc data16 pop sub adc cmp and cmp push add loope out add adc pop loop or addr16 ja das dec jbe pushf lock addb push sarb pop ret ds adc je jno je inc imul pushf call push cmp pusha lea ja stc imul jmp call pop scas nop das jo adcb pop lods jbe insl icebp lea push scas xor jne mov pop loop ror cmp mov (bad) cltd mov loop jmp fs mov mov push mov adc out mov fstpl cmpsl cmp xchg clc push xchg cwtl sub pop adc add ret cmp inc dec into xor (bad) mov lock adc sti in xchg add loop negb fsubrl data16 jb push sub sbb pushf lock popfw sar xchg jns push jne addb movsl mov pop mov xor ret pop enter ljmp xchg dec stos pop push gs jae mull stos xor push push loop ret lea fsub shrb xchg dec and stos fs mov sub sbb enter pop rep mov frstor pusha test sbb cmp nop nop (bad) jecxz cli and xchg add outsb lret fwait inc push lret out dec ss jne icebp push mov fstpt (bad) push or addr16 adc mov or ret adc cs jg xor push js arpl add adc je lcall (bad) mov pushf mov xor dec xor pop push dec fisub jno jb add mov decl imull mov lods shl sahf je sbb inc scas push test ja push dec fwait and insb fwait inc sub and (bad) fcmovb aad mov test sub cld and push push outsl cmp ret scas inc clc (bad) sub mov outsl cmpxchg es xlat test mov scas mov mov js pop push inc pop cmc mov aas lahf mov adc mov dec negb call lods cmpsl cwtl lcall sbb sub xor js jno data16 ret pushf xchg mov adc shl push ror or mov or neg test sub shrd push sar aas movsbw push btc not push movzbl xor mov jmp or and mov pop sbb jae or and icebp into shr xchg cltd xchg cmp jg mov mov je loopne mov push xchg mov mov divb inc fwait sub fsubr dec dec push push xchg mov clc cmc lcall cmp xor aaa xlat inc enter mov mov mov cmpsl mov xor pop mov pop pushf dec jne insb xchg les lcall fistp cmc stc inc push xor je push clc xchg enter sbb jo pop push inc jno jo shl bt add clc push pushf clc cmp pusha call call jmp jmp add add add add fidiv xchg bound scas shlb and jecxz push bound adc das adc addr16 mov ja inc lods shrl pop adc inc jae sahf pusha dec mov push sub add mov pop outsb popa dec jp sbb pop inc cmpsl repz pop pushf lods shl xchg test adc cmp out vpunpckhbw icebp mov mov hlt sub fadds or mov imul mov mov sub push push jne dec jb jno outsl sbb xchg mov aam in or divb out rcl dec push inc push bt add push push rcr cmc not sub jmp mov (bad) xchg cmpsb clc pop xor adc les aaa pop push rolb das lock in fdivrs sub jbe xchg or inc mov mov es mov sbb cmp mov call xor pop push xor jp bound pop xchg sbb pop adc push dec mov mov (bad) je addr16 lock in jno push jg mov xlat pop push dec lods pop lcall pop movb out leave cmc ss inc sub lret add add movsl sbb les push jmp rcr cmc icebp or mov (bad) mov jp mov test xchg std lcall clc push push adc test cld stos adc jns mull cli and jns mov clc or jne or dec addl mov push mov out adc pusha sbb inc fdiv mov jnp push fdivr aas or push dec pushf inc push jno outsb stos in std jmp call or es mov jns lahf rcl adc in jb (bad) rol push push sbb mov inc in pop sbb inc mov xchg mov dec pushf inc cltd xchg push or sarb shrb dec js jg push mov pusha cmpsb enter inc mov mov mov out and in clc push mov pop ret faddl lods and stc mov mov pop add inc out lds jb sbb cmp imul inc mov enter mov jmp fadd mov adc movsb sti (bad) ror and insl fdivl or lcall jbe mov (bad) sbb les pop mov mov loop jo mov aam jne (bad) and je iret stc cmpsb mov pop jmp inc mov mov push sub sub insl (bad) or (bad) dec dec xor mov jb jne lahf loopne in std popa jne mov outsl cli fs mov pop pop jmp in aad mov iret nop jmp push test test insb seto jle jne movsl mov shrb mov insl or mov js jp movsb sbb jne icebp inc divb jl cmp mov rol repz in pop and popf add pop (bad) lds jae add mov mov fwait in add fs insb mov mov cmp pushf pushl pusha lea ja lea push setle mov movsbw xchg mov pop mov pushl call addr16 pop popa aad mov in jecxz pop test dec dec loopne enter outsl dec pop push lcall mov ljmp adc jbe jmp pop or outsl adc repnz and jns mov fsub mull mov scas (bad) dec xchg in scas mov test int3 sbb lds add cwtl push sbb jmp pop aaa (bad) push mov bound xchg ret cld aam stos pushf ret push dec adc ss les inc pop push jg out ds xor cmp adc out ffreep fdivrl int pushf jecxz jno imul dec jae inc adc adc adc sbb adc adc add add add add push adc add add add lea je push cmc setns xor pop not mov shld xadd aad jmp call jmp test mov clc call movb add pushf stc jmp mov mov cmc idiv ja movsb popa pop inc pushf add push mov adc push mov sbb div push push sub rol out adc call cmp xor xor lods xor int3 push loopne xor sbb pop insl daa xchg jmp add into shll int3 pop inc cwtl sahf lret fiadd out or add std mov lahf lcall stos add fldl daa enter dec in (bad) mov pop push inc pop mov fstl mov jge pop lahf xor mov loopne pop pop aaa or sbb sub jo push mov mov and pop push hlt adc adc lds (bad) rcrl sub imul pop shlb xchg enter je pusha iret push daa cmp adc cltd and inc push push sub (bad) sub adc and rcrl xchg or push addr16 mov ja cmp insl out pop mov sub push inc push dec pop xlat sti movsb mov js (bad) stc and and ja push test mov (bad) imull xchg mov sbb inc mov jge jb repz jae test add push pop inc push stc xchg push imulb push xor mov adc mov shr insb repnz adc ss scas push je mov jno imul add dec stos mov pushf pushf lea jmp add das lock mov mov cltd jbe sub and jle (bad) faddl loope push ljmp decb fsubl cli mov xchg inc push sbb push or push lock mov xor adc fstpt or mov push jmp push or imul add sbb (bad) out jo push test push stos push fistp insb ljmp rcll enter ljmp cwtl es jno push call cmp pusha pop pusha and cld dec adc sbb lahf adc scas iret lock adc pop nop cli gs les pop mov cmp inc ss sub push xchg pop insl out sarl repz stos cltd pop (bad) dec fs sbbb sub ficomp and push inc push test lds js popa jo,pn jo sahf push iret xor inc mov mov pop mov faddl or (bad) shl in (bad) ja (bad) gs xchg sete pop fcmovnb mov mov sub aaa push insb push sub inc out jl cmp mov xlat test xchg push mov xchg mov pop addr16 inc and xchg movsl push pusha lea jmp gs imul push into div xchg mov cmpsl cmpsb js rorb mov (bad) fdivl sahf movsl aaa call add push das or pop notl jnp mov pop jnp dec (bad) pop mov xchg cmc push pop jb cs dec mov ss jmp cs sub loop (bad) bound dec cmpsl sbb sahf rorb adc repnz cmp cmp push leave sub jp jae add add (bad) (bad) cmp and mov in mov gs dec inc push dec pop add mov jmp repnz jae jl mov loop into icebp scas pusha mov sbbb outsl ds lret adc pop xchg sub push lds cltd sub and or dec or test push or mov add mov jae movsl pop push cmovnp inc cmp es sub aam in in dec and mov daa mov js add pusha les push jno sbb std loop jmp cmp aaa push mov mov popf push scas arpl mov jmp fsubs jno and add inc cmp cmp xor xchg jle movsb ja jle es je adc mov lcall mov jno aas cmp push and mov iret and mov push addr16 mov inc fld push sub add mov mov jmp xchg xor bound mov mov outsl sub xchg loopne pushl jle xor sbb mov sub mov out lock cld xabort sbb push test fildl dec adc jno gs sahf fadd add mov push enter test or (bad) adc mov mov pop mov popa loop es pop push (bad) and mov imul cwtl mov mov jno cltd (bad) stos push mov push mov cmp js xchg ljmp adc lock mov adc and lret jno out scas add jl mov fucom rorb cs jge les (bad) fidivrl iret test fwait fwait jecxz and inc mov pop add dec and rcrb adc or fidivr out pop inc icebp dec cltd es daa incl sub pop fs or mov dec jbe loope adc aam xor bswap xor sbb fimul cmp ljmp arpl jo dec pop aam push xchg outsl pop ret nop scas ja xchg jmp cmp cmp out mov cs (bad) or ficomp jb lcall pop orb stc (bad) add adc mov ss adc or pop aas bound out and test mov lcall cwtl cli movsl gs stos mov test and (bad) fstl es cmp jg mov into jp dec frstor jne jle (bad) mov xchg xchg cs rolb rolb in (bad) sbb xor push cmp add scas rol mov and inc ret aam insb jge fbld jg xor push pop cmpsl push xchg dec pop pop je aam dec cmc pop loope sbb mov (bad) xchg jb or fcompl xor xchg in jnp or cmpsl idivl xor push loopne push dec iret jo sub mov imul inc pop sbbl enter mov xor jnp xor bound push popa popf fdivp out ljmp mulps adc stc add movsl mov jg ror shlb nop pop jl fucomp mov aam add fucomp cltd aaa xchg jnp aaa out insb jno in sbb mov mov pushf mov and push adc cmp cld mov inc cld pop add pusha sbb loop add sbb test sbb into ret push push dec xlat add pop jno push outsb push dec xor ds dec push sub jno bound xchg insb xor iret xor ljmp add push out cs mov fldenv rolb ret push xchg inc or sarb pop xchg pushf inc (bad) aaa pop in sbb out mov cmpsb in mov dec jns dec xor mov mov sub fmul aad and (bad) dec jbe jp sbb iret sub icebp mov mul repnz std ret push push scas mov aas loopne in cmp dec stos pop imul xchg std jbe pop icebp outsb fadd push push dec dec sarb jns fldenv jbe push mov (bad) (bad) mov sbb jo push xor mov loope gs leave sbb loopne lock imul cmp rcll ja pop test mov aaa negl fdivs popa inc jae xor mov xlat mov inc mov es jecxz push pop ret pusha jecxz insb push push inc sub cwtl ret imul mov and mov and push mov xor (bad) mov mov mov (bad) hlt dec cltd es scas and inc dec xor data16 xchg fucomi jno popa sub add inc insb outsl jae inc insb imul add inc (bad) test gs lock jb cmp mov aam or adc push lods icebp loope,pt ljmp xchg or xor cmp xor notb into fild push outsb adc mov pop pop pushf pushf add in pop loop repnz adc sub in inc adc cmp push aad jp pop xlat dec ja add mov inc adc add aaa jnp ss mov inc or mov fdivrl addl fwait lea popa mov loope stc inc sbb jno,pn bound arpl test sub insb push push cmpsl cmp aad dec in pop std xor xlat mov popf mov add push pop cmpsb out iret adc enter or inc push iret xor test mov mov lcall (bad) jo aam dec in pop (bad) push fildl daa cwtl and aad push jmp cli pop test xchg insl roll inc shll popf sub lds push rorb mov (bad) lds imul in pop rcrl dec mov mov dec xchg fistpll cmp (bad) jno pop inc dec mov ljmp add movb push mov pushf lea jmp bt add sub cmp call neg or push cmc mov bsf push sar push bsr shld bswap bsf push call sar mov test jmp mov call notb push dec (bad) jmp cmpsl mov lock lea inc sbb test mov popa inc aas sarb mov xor addr16 jae xchg mov sub adc mov sub into adc xor loop mov mov adc sbb aaa (bad) mov leave test out aaa test into mov jno rorb cmp out lret out fwait push push iret repnz pop cmp (bad) icebp xchg sbb insb jne icebp mov addr16 jo dec pop cwtl push scas mov add xchg enter je mov mov jmp sbb jno pop sarb arpl outsl xlat sub ret mov stos cmp jg xchg dec push sub adc add inc js inc or dec fist inc mov (bad) inc adc into adc rorb xchg push adcl aad or inc sbb incl xchg lods mov push insb lods movd insb cli inc push jl stos push sbb ret cmp cmp xor lret cmpsb shr push ljmp pop jnp jl push out rol cld cmp std or dec mov mov leave jne jae cmp mov add bound pushf imulb cld jecxz int3 fnsave pop aaa pop lret jae fs jne inc lea rcr sub test not pushf mov dec xor pusha add adc cmp mov stc push push test movb lea je pusha clc pushf sub cmc bt push cmp mov lea ja jmp pusha pusha cmp call call gs xchg xchg sbb rorl push dec std incb lods pop fisubl ret jl and dec imul push push sbb imul aam adc cmpsb or int3 push into (bad) mov sub aad mov shrl (bad) inc jnp dec jbe add fs dec adc fistpll xchg mov gs sbb push lret xchg pop inc fistp pop in fisttpl addl pusha (bad) dec stos pop test dec push cmpsl mov add stc and pop pop outsb and and jg pusha lea ja push imul push call pusha mov call popf sti ret mov cmp data16 pop jo sub cmpb and xor xchg sub sarl clc (bad) insb mov jge mov cwtl pop out mov push mov (bad) push iret and jle (bad) cmp cmpl adc cwtl mull sbb dec bound xor sahf mov cltd gs sbb jecxz dec setbe push push xor clc ds inc push pop jg lea lods push test push cmp call sbb mov pushf bound call adc add push cwtl ss jmp adc frstor les or sbb or loopne test or icebp dec jno,pn test lods mov inc leave push push ret int xchg shl jecxz incl lret xchg stc xchg andl cmp xchg mov or or das inc pop out pop add cmp lds cmpsl or fs outsb stos dec (bad) mov pusha rcrl js mov out jns cmpsl (bad) fucom mov insb mov xorl xor pop cld mov xchg stc xchg in push loopne cmpsl sbb pop lods pop insl push cwtl inc fwait jno pop jns mov jmp lea je cmc sub pushf cmp call add adc bound data16 les mov movsl sbb adc add or jecxz xchg mov xlat les iret adc sbb inc ds pop and aam xlat enter call xchg in add (bad) sub jbe cmpsb jg mov in sub mov (bad) out das jo pop test mov fnstsw adc cmp mov jbe shrb dec cli mov pop sub cwtl pop clc push popa xchg in sti push enter dec je,pn addr16 arpl pop and les imulb ror fninit (bad) sahf loopne std inc mov cmc stc in or lret inc mov in xor jae pop mov loope cwtl (bad) xlat jno pop cmp add mov mov rcr xor mov pusha push cmp jmp movw movl pusha movw pushf lea jmp sub cmc pushl popl pushl pushf cmp stc cmp pushf pushf jmp call scas vpsubsw sbb and xlat sub sbb fsub fadd pop inc clc cmp cs sub mov ljmp out sub jnp outsb and scas adc bound shl iret jne fisubrl add mov insl icebp add jnp push mov inc mov jb bnd add out add pop inc int3 xor enter flds pop ja mov add mov stc sti or xor in mov pop sub pop in mov adc dec xchg lods mov sbb out lock adc imulb js rolb push in (bad) cmp or das dec push xchg (bad) mov dec cmp out dec push arpl mov or mov out push popa stos and sub jge inc hlt out pop imul and dec andb and sub loop mov dec mov jns fwait cmpsb push test adc loope push call in (bad) xor cmp sbbl scas nop loope push lret imul stc dec jno push (bad) leave (bad) jl fldenv xorl sti lea cmp mov jb (bad) fadd mov aam mov loopne xor jl jne jo nop gs fst mov sub cmp jbe cmp inc pop gs (bad) popf lods stc popa aad xchg mov mov insb push out and cmp int lds pop push mov push out adc pop jno xchg int bound mov insl jge inc (bad) loop incl pop mov bound aaa (bad) mov adc add inc xchg dec jo sub sub into xchg or mov icebp adc or sahf pusha jno pop push mov jne pop andl dec fstpt xchg les lock mov shrb and ljmp frstor jo je les neg inc (bad) jnp mov out adc push scas xor adc loopne cmpsb lret sahf mov mov and test (bad) repnz (bad) (bad) sbb inc mov and jl ret or lods pop imul fadds add (bad) aaa scas adc cmp xchg stc jmp lea jne call jmp lea jb clc cmpb push pusha lea jne bsr rol movsbw sub mov stc add push cmc cmp movzwl sub data16 mull movsb out add jp clc add call lea ja xchg pusha push mov movzbw jmp call push call call call or call and dec jae sbb and xor pop mov sarl jecxz das sub aas das lock sub add sub data16 jg jle xchg in cmp enter xor push lcall fsubrp lret cmpl pop and mov cltd out clc push jno or and adcb (bad) rcll (bad) pushf stos stos hlt loope xchg add test jmp xor stos cltd mov lods and int and dec pop sbbl dec loopne and inc xor dec pusha dec stos outsl loopne add pushf popa jle cmpsb cli inc sti fdivl dec mov push shlb fcomps jnp xchg shlb jo dec clc (bad) fcomip cmp push lea mov outsl xchg call and pop lods mov inc push mov (bad) out xchg cmpsb push out fld xlat inc popf mov xchg test ret aam fisubr mov pop sbb lea aas pusha mov mov jmp dec push test xchg mov inc push pop dec push outsl dec ret jl test adc inc int3 push mov mov sub push in mov lret out das nop mov cmp jbe jbe jns xor mov xlat movsl outsl fsin loopne cmp mov nop xor mov mov rolb and xchg pushf lock jmp mov dec xchg jmp ret xor jb lcall xchg push lea jno mov inc insb dec and jae dec push and xor lods in cmpl out xchg ljmp repnz adc pop and mov lret and or addl jno push jo add clc rcl test mov pusha cmc bt test pushf movb call pusha pusha bt stc or jmp push bts pusha stc mov jmp movb not mov not lea jmp jb cwtl lcall push aad stos popf sbbl pop pusha sbb mov shl (bad) mov xchg es dec cld bound clc inc mov mov xchg cld mov push lods push and push lea lods gs test xchg imul pop (bad) ficoml or cmpsb js enter pop daa mov inc pushf (bad) repnz add int mov lret sub jle in xor mov sub adc cwtl mov fsubs sbb aam jb mov adc sbb cwtl (bad) xor pusha pop jno,pn mov pop push call mov sbb push fildl xlat bswap lea pusha jmp and aaa js sub jo (bad) fistpll cmp push insb xor or sub cld push adc pusha adc les mov xchg mov push mov je pop and add cmp lcall and inc out xor and les mov xchg pop subw mov cmp (bad) mov adc (bad) ds inc mov ds dec push dec push push mov aas mov (bad) scas cwtl (bad) cld mov dec aad divb packssdw inc std cwtl es out lock push jno push ret int3 data16 sbb xor dec rorl orl sbb jg xor in and loopne dec stc add fwait pop jmp mov test (bad) aam dec sarl lods popa mov jae and lret cwtl insl jle mov xorb int3 xchg push rcl call lcall xor repz mov mov (bad) iret and loope mov jo stos loope fistp dec add imulb fdivr loope or push sahf and pop push lahf lock adc fucomi out (bad) inc add inc clc shrl pusha lea jmp pushf pusha lea call jmp insb pop stos int pop (bad) xor (bad) jle xor or js xchg or cld cmc adc and xor add adc ja mov leave fwait (bad) fnstenv jmp mov adc lods xchg test in mov wrmsr mov xchg movsl mov mov add test push jns in inc ret jl out sbb daa das adc pop push lods jecxz fimull test clc std ljmp (bad) call ret mov sahf pusha shrb ror sbb (bad) mov dec mov es adc add (bad) xor dec mov xchg call (bad) and cmp jb fcompl je ja pop rcrl in ja xchg sub loope outsb pop xchg mov shrb mov dec pop mov fistp aas cwtl cmpsl (bad) dec pushf imul push mov subl cli and pop push pop jno dec std xchg insl mov sub test lret hlt leave call jb inc xor push inc jp lret and xchg stc ret sbb mov cmpl sarl sbb inc lcall adc and xchg pop inc pop es dec push add or lds pusha mov (bad) fstpl shlb jge push cs in adc push adc mov stos mov leave add cwtl movsb mov push lods xchg int3 (bad) mov sub push outsb daa xchg jmp inc sti mov movsb cmp inc (bad) (bad) rdtsc dec mov xor sbb pop dec xchg stc in xor push sub leave das mov add xor inc pop inc adc frstor xchg lret mov popa loop je enter mov jge sbb outsb push and fsubl jge jle std adcl sbb dec sub mov ret (bad) cltd sbb jmp mov dec (bad) fbstp test call pop cltd dec negl into cmc sbb push cmpsl inc clc aas jo sub repnz nop cs sbb sub imul xchg xlat lret fstpl inc push sub push mov xor dec add aas and jmp inc xor cmpsl lods xchg aam jbe sub ds sahf add popa push dec sarl out mov insb lods in xor out cli clc data16 pop fbstp xchg xchg popa mov ja stos inc jge rcl xor mov cmp push inc ds loope jmp push ret imul imul pop into mov js xorl cwtl (bad) xor sbb or or push xchg cs dec push jno mov outsb push addr16 inc stos jne and out xor int3 fnsave dec and fwait xor inc fucomi cmp sub xchg dec sbbl sub jbe shl xor xlat cmp dec pop xor jne mov scas icebp shr (bad) icebp jp adc or dec push mov (bad) mov mov mov adc faddl inc loop jmp in fadds pop mov adc sbb insb xchg mov cltd addr16 out cld aas inc arpl cmpsl mov sbb cltd pop loope sbb push inc lret xor popf push mov mov (bad) dec outsb push jmp fisubrl negl lahf add imul pop dec and test sahf rorl sub call rorl pop lea pop pusha pushl mov movb jmp stc imul call and bswap jmp lea call push push movb call push fiadd cmp sub mov loop stc adc ror and mov xor fidivl arpl repz xor call mov test jno mov mov mov dec xor xor mov mov shrb mov xor mov test cmp ja ss xor xchg dec aad out lret pop ljmp lret mov mov outsl adc add ret fldt jbe repz xchg fsubrs ret out seto xchg mov into mov (bad) pop pop ret out pop inc sbb cmc call daa fisub pop sbb push pop jno dec fidiv add add inc and repz lea jmp imul jmp pop pop fs sbbb mov add jne jno mov push cltd adc cmpb mov out and push (bad) xor cmp cltd dec jne dec pop push dec mov and cmp inc daa xchg lds mov stc pop mov dec mov and roll push fcmovnb mov sub (bad) test loope aas rorb popf popa and out pop dec push jns jns movsl stc pushf ret sbb jne pop adc mov lahf dec shrl pop add (bad) notl outsl arpl je mov jge jge ds ja daa fsts test cmpsl daa fwait or sahf push or mov sti fbld adc mov mov hlt sub insl cwtl push cwtl test xor mov cli xchg outsb addl or int3 jno pop js jl jmp insl pop mov pushf mov rcrl cmp jo jmp jmp push dec shll xlat out enter stos sbb lret hlt adc pop dec jle ss out aaa daa fwait and lds movsb mov dec stos mov dec (bad) dec pop mull cmp sbb pop mov push mov mov pop cmp mov into idivb or mov inc add lcall jp,pt fistpll pop xchg cmp sub mov mov dec push dec mov cs mov popf mov or cmp mov fbld and in inc arpl jle cwtl jbe scas jo sub jae insb ss push dec dec push xchg pop xchg fimull sub rcrl (bad) mov xor ss push add cmc adc call add or stos cmp dec aad and iret mov sub (bad) cwtl lods scas lock fs sbb repnz (bad) std jg inc add mov lock cld mov cmpsb jl pop xchg xbegin fsubr in int3 mov cmpsb es lahf mov fist cmp mov hlt gs js iret push mov pop mov inc push jns cltd lahf sbbb repnz adc dec pusha adc adcl push scas nop ljmp je movsl inc lcall aad pop jno dec mov dec xlat aas mov cltd jno cld mov pusha in pop push dec in sti adcl les rolb mov mov mov je mov push push call xor or and je,pn cs mov mov jne arpl int3 cs daa sub fucom aas push push adc fnstsw icebp or mov lahf mov lods rolb jo stc repnz daa cmpsb cwtl jmp stc or add jl push adc jmp or cmp jno inc aad and fsubs mov mov cmc call lea je not pushf mov not mov sets movzbw lea push movl pushf call sarl add push xlat sbb sub push lock xor cmpsl insl mov call lahf jp lea (bad) outsl enter movsl sbb xor cld push jne cltd rolb int jp (bad) insb mov out pop add gs sti das test cmp push jp xchg loop clc dec test test ret adc mov cmp sub cmpsl pop xchg movsl (bad) mov jns aaa imul cmp sub pop jp ss (bad) out aas xor inc jnp enter mov jle xchg mov push jp into and sbb xchg dec jbe dec or jnp xchg inc clc and mov out sti cmpl repnz (bad) idivb mov ja pop movsb (bad) repz arpl push out (bad) or and mov mov movsl aas dec xorl sti jb (bad) jbe mov jp mov adc sbb subb arpl imul jp in lods cld ljmp je loope and gs ja jp xchg push les pop adc rcrb loop call jmp sbb xchg or repnz jp das xorl sub cmpsb jmp shl mov push cmp mov (bad) ljmp cmpsb fdivl add int inc leave jp mov outsb dec push adc icebp mov in cmp mov imul sub arpl xor aam (bad) dec ss jno push pop adc stc cmp push shrb fcoml rcll push push or inc cmp idiv inc mov dec sub cmp adc popf scas sahf pop xor dec sub mov cmpsb testb add push lock aas arpl mov int sbb out jae sahf mov mov xchg push es outsl mov js add scas lods jb pop clc jp mov push mov xor push in mov push cmp pop add fsub js push mov sub jo pop test mov arpl je add jecxz,pt adc loopne cmc fcoms pop imul shll jp cmc fwait in jns mov mov je stc lods or scas push shrl lret mov or jp push (bad) mov and pushf (bad) mov or cmp popa fsubrs jle cmp pop not mov sbb mov jp dec sub pop jl cmp ss push pushf mov and jno (bad) jb lret in and inc int fstpt lds jecxz pop sub jp pop jae imul pushl idiv mov lcall sub dec clc divb mov or jp scas out (bad) mov shrl mov jg mov dec and imul push popa cmp cltd ja test jnp incl orb sti xor fwait movsl jne jecxz mov pop jp mov xchg hlt jge in ficompl or lret imul dec pushl push test cmpsl fisubr inc sub hlt repz popf pop xlat enter cmp adc jg inc jle jp dec in pop (bad) movsb imul add dec out mov cmc sub dec cli pop xchg cmp jl pop aas jp jge inc inc fcoms stos or (bad) in mov cmp (bad) imul enter (bad) pop test icebp and jno jnp adc lods inc sahf xchg mov push jmp bound lds jp loop xor add jp fldenv jp lcall sahf jg les stc mov push (bad) iret shl pop jo test pop aaa pop pop das sbb pop jp mov jp jmp jb inc fstl jecxz,pn (bad) jmp or sbb xor daa pop dec mov sub jp out jmp fmuls idivl sti jne (bad) jmp repz push aaa arpl ret stos xchg push in je dec ret ljmp repz sbb sub hlt in fnstenv call dec jae and mov push inc icebp testl or jp lea cwtl ficoml push mov test or or fstl mov cmp mov xchg movsl adc iret stos adc sbb sbb lahf mov cmp fwait cmp and adc mov fmull stos arpl mov cmpl popa fbld jno jne or jae in ja xor jmp lret imul nop mov cmp mov push mov mov add push pop inc ret jne shr sbb addr16 pushl in fpatan adc insl pop jbe sbb pop and (bad) jbe inc ja xchg push test insb jmp sbb stos sub cmc fdivp lods jb gs lods mov xchg fist pop cltd imul pop cltd adc adc xor das sub imull xchg adc out lods test inc sbbl xor mov inc or mov (bad) rcll or lahf push aam pop xor and jb adcl test ljmp lea in stos pop aad repz out xchg push vpsubb (bad) dec inc fisttpl adc adc lret pop movb pop fistl jmp sti and pushf inc popf test xchg cmp and fisttpll jno mov dec test and es jae rep mov jmp lcall mov mov shrl pop dec hlt cmc lea out push and pop lahf imull movsl mov mov pop out lods mov (bad) fimull ds lahf popa stos aam cmp jbe imul cmp out test cmp jbe pop adc sbb lea out repz shrl xchg adc icebp xchg rorl mov rorw add sbb sub inc cmp inc outsb push xlat (bad) jecxz adc pop hlt pop or stos outsb mov imul iret mov (bad) xlat arpl aas ret cmc xchg pop and jne test cmp inc sbb cltd jno in mov jmp inc fs sbb xchg mov (bad) jle loopne mov mov mov cmp int xlat nop in mov cmp cmc push lds nop mov and mov cmc ror arpl jb (bad) mov sbb mov pusha insl xchg imul jmp xor add dec jmp cmp ret outsl dec jp addr16 arpl pop jp push push push push dec dec dec jp inc inc inc inc cmp xor das sub and pop sbb adc wbinvd jp add (bad) stc popa sti cmc div jnp out jmp loope fstp (bad) aad xlat rcl int leave lret lds rol mov mov mov scas test mov fwait xchg pop into cmp xchg mov imul add fs dec pop sbb xchg stos lods xchg push push popf in cmp sub sbb addr16 inc roll inc sub xor push rorl mov insb cmp imul adc push nop lret mov jae repz pushf xchg xchg lahf (bad) std jmp out push dec scas shll popf and push mov sub mov aaa repnz out (bad) je test inc mov cmp cs mov out xchg mov rorl daa arpl xchg enter cmp push sbb fsubp jae pop stos xlat out pop or iret scas popf sbb daa mov lret xchg and lret cmp lcall mov adc cpuid or les lods mov push sbb push mov daa and sub or mov repz addr16 dec xor lcall jecxz lods es ljmp xor fnstsw mov sahf push es jmp xlat xchg mov dec lcall push roll lds pop add daa ljmp xlat cmp or lahf or mov pop (bad) pop dec xor inc cmp jecxz frstpm(287 or clc and jle (bad) sbb cs mov in (bad) fmull adc shlb lods adc push xor xlat movsl cmp insb cli in mov in ret fidivrl stos push mov mov out jae ret in adc mov or movsl pop xchg xchg sub mov jae mov (bad) adc cs int dec or out sub sahf popf push xchg inc pop movsl dec pop pop jae or pushf in sub cltd dec popf sub xchg popf cmp lret and inc xlat xchg inc cli rcll fs inc jb call xchg jecxz cltd and xchg iret mov inc push mov arpl ja gs mov pop and pop or aaa mov dec push loop sti push push pop mov dec push fs push dec aaa fidivrl push inc jge inc push cmp jmp (bad) repnz mov mov (bad) jae jmp push test adc xchg (bad) push pop xor fwait dec fisttpll adc (bad) dec sub mov xlat movsl (bad) mov mov jnp imul ja ss shrl fdivrl das xor in inc aam ss in push dec xor lods pop ss loope out popa sub add jmp pop add pop push xchg push aas icebp push repnz or sbb ret (bad) jmp or sbb pop xchg jbe push xchg insl dec outsb push insb ja add call outsb (bad) aas sub or leave jmp sbb cltd cmp add lahf popf push xchg dec loopne ja pop imul jne cmp sub insb test hlt pop aas ljmp ja jne stos sti xchg jbe ja ja bound jecxz ja mov jne pop jne in or xchg pop ja ja sarl ja push push jne mov sbb ja ja jnp push js cmp jnp jbe jo insb outsb push pusha bound pop push push jp push dec dec dec dec inc inc jp inc cmp cmp xor jp xor sub and jp and sbb adc jp adc or add jp add (bad) clc cli hlt idivb repnz out call loopne (bad) fcomp aam jp ror into enter jp ret mov mov lods scas test movsb cmpsb jp mov xchg xchg jp xchg mov imul dec or (bad) dec jp sbb int fsts shrb mov popf fwait mov cmp mov sbb mov imul lret jns or jg sub cmp rcrl call lods sub test sbb xor xchg cmp sarl iret lods in loopne (bad) mov fdiv movsl std andb lods fimull mov jg mov cmp mov popa lahf (bad) xchg (bad) xlat push movsl pop or sbb mov jnp daa xor lods test lods cmpsl cmp das popf scas gs popa xor out stos xchg subl pop rcr mov fisttpl ss xlat lahf mov mov lea ficompl add aas das mov cmp cmp test mov push ret scas jo mov pop push cs in adc mov xchg out xlat add mov mov mov fwait ror scas fistpl stc popf cmc out xor js dec repz mov xchg push xor (bad) jg push fistp or xchg push adc inc dec in dec push mov jnp sti (bad) (bad) cld push inc insb lods adc mov mov jmp push (bad) cmp scas arpl push gs or test incl sub sbb sub mov jg cmp and cmpl sti adc aaa sbb jmp ud1 jnp arpl dec adc ljmp out xor aad cmp push ljmp dec lea das (bad) test xchg fs mov dec fwait push (bad) into push insl adc movsl push pop mov xchg nop aaa adc jns fistpl dec imul and or loope xor push mov xchg jae pop mov jmp push add sbb sub fs push push out cmp push mov gs outsl xchg push mov mov aaa mov jecxz jmp repz xor push add or sbb and xor xor dec push push jge mov imul (bad) xchg inc mov push lcall aaa mov cli push adc inc jmp push xorl repz (bad) xchg je push or inc jmp push lret aaa sbb push xchg push inc mov repz cmp xor inc mov xor jnp sbb fs lahf adc or push jb stos (bad) sbb test dec mov adc in jg lcall das leave xchg aam test xor mov inc arpl scas mov xor lock fwait lea inc sbb mov lds dec cmp movsl xchg cmp mov test add or cmc pop cld or dec mov cmpsl in inc fldl xchg mov dec pusha lea bound mov pop out fisttpl outsb mov pop popl sub (bad) into inc mov push dec test fisubrl stos push mov adc xor movsb mov mov mov pop xor popf cltd mov push and cltd fmull sub mov pop stc ror inc insb pop repnz inc adc lods loop xor int3 and lea pop and push shlb in adc sti jae push xor mov push xchg mov rolb negl mov mov cmp pop fwait mov dec fbstp push xchg fistpl pop or test shll rol std sub inc mov stc sbb xchg mov rcll xor cmp aas mov xor outsl lods stos xchg xchg jo js or inc lods fwait add repz outsb fcoml (bad) jmp adc jmp push int pop mov jb sbb dec icebp jmp cmpsb arpl jb mov test inc jecxz and dec mov cmpsl mov jmp arpl add add or add mov insb arpl jecxz sbb mov cmp or mov lds sub cmp lret xlat mov push xor outsl imul and and pop inc sub js push cmp pop jnp xchg in fistp xor pop jecxz cmc imul jl not or mov mov sbb imul sub icebp mov insl push or pop mov test mov (bad) hlt ljmp mov shrl jbe inc daa cli mov (bad) imul (bad) ss imul and sbb jmp mov out xlat out lret sbb and adc imul idivl and andl daa sti mov dec jnp jecxz (bad) rcll jns (bad) and mov fcmovnbe ficoml mov fcmovnb imul loop cmp and fnstenv mov imul xor bnd imul imul (bad) ficoml (bad) imul imul pop mov or mov negl sub dec cli imul sbb (bad) arpl pop lret rclb fidivl lret in pop adcl imul xor divl cmp lret imul cmp sti cs repz and mov cmp sarl sti lcall xchg mov cli lcall mov dec rclb xor repnz jmp rcll push xlat lea jb sub sbbl arpl cld imul sbb jg cmp outsl cmc gs and imul lods mov mov xchg mov cmp insl loopne int cltd xchg or sahf daa popf inc xlat leave adc pop std movsl (bad) fwait lea push xor xor sub inc (bad) mov roll jle ficompl or in pop mov jno aaa lret ret xor add adc push ss jb (bad) imul sbb repz xor xor lds lret xorb out (bad) aad cmp test lods ffree inc xor or js daa push cmp pop mov subl dec push sub adc mov arpl push push xor pop push add add add cmp mov lret repz (bad) push inc inc sub popf push test xor push aad stos jmp push ret and lret fimull aaa test mov mov xor push jecxz sbb push push dec mov jecxz or shl testl ja insl out jb add add test or mov sub mov insl push jp adc mov jp xchg push pop je xor jp notl dec xlat aam outsl xor mov jbe cmp test sub jg movsb sub lahf (bad) cmp or sbb and push ss inc cmp dec cmp pop jb or dec jae cmp add dec mov push mov push cmc aad mov push aaa jnp push aad push jp xor pop xlat lcall adc push sbb jbe mov mov fwait xor test xlat xchg scas out xchg jns or test pop mov lret in (bad) mov or fstps dec push mov xchg repnz or lcall mov xchg pop cmpsb mov cli inc pop aad bound xchg cltd mov sub movsl or stos outsl aas cltd scas pushf cmc ret sub xchg fimull pushf add in dec dec cmc xor mov loopne (bad) (bad) hlt hlt out in lcall inc outsb lea pop or jb mov (bad) jmp scas inc shrb mov dec xor xlat jo push dec mov test icebp sub sti (bad) lods adc pop xchg scas add leave xchg push or mov xor push xor xchg adc mov out shr jmp fwait sub pop (bad) inc sub pushf out pop (bad) fs push mov (bad) mov push popf inc rcrb mov es fs (bad) stos sti xchg mov out stos decl sub stc xchg test dec jns in loop dec jno and adc rep movsb test icebp mov xchg push adc adc notb pushf je xlat jmp push adc pop test adc test daa or sbb push div stos fldcw int mov mov getsec (bad) icebp sbbl jle std imul mov ja push xchg popf mov jmp hlt bound jnp lret sub cli cmp jmp ret repnz xor and pop in scas and mov dec xchg inc cmp pop xchg sub xlat add cwtl xchg push loop pop pop jge rorb test (bad) das das cmpsl inc loope cltd (bad) aaa pop push imulb pop sub and mov xchg inc mov loop repz (bad) cmp adc sar inc inc cmp push xchg subl jecxz adc lods aad pop cmp pop dec sub fsubl imul sub xchg out cmc add inc push fldl in aam xchg pop std cmpsl aam ljmp sbb popf xor xchg ret add lods nop mov sub inc pop mov push ljmp sbb test arpl xchg sbb mov adc jle jae sub loopne lret rcll jmp sbb cli out and adcb imul xor push aad jae rcrl int3 call divl sub add out fistl mov cmp sbb and adc mov out push and and repz fcmove lods movsl jbe lret scas pop shrl push imul pop cmp push lea jp fcoml shlb sub repnz pop pushf mov rcrb cltd mov pop inc or add mov mov or rorl xchg movsl jecxz cmpsl fldt adc scas or xlat loopne mov icebp xlat dec inc jno jl insb out pop jo cmp add dec jl pusha iret sarb xchg lcall std popf xor lret ret lret mov dec fild nop push aam aam cmp mov ja out xor (bad) imul nop dec stc or rorb jl sti imul aad in xlat std mov push cld loopne pop fsts sbb dec inc rorl in add mov cltd loope push sbb dec adc lds fnstenv movsl cmpsl out inc pop push mov movsl cmp lahf push inc push push in xlat popf in mov dec sub fcom and sub push rorb aas pop stos sarb mov xor and cmpsb ficom and repnz lods sub adc jo mov lahf in stos jp sbb push sub sub lret adc and rcll inc pushf loope pop hlt xlat popf dec jns dec sbb adc xor xchg pop push xor pop in imul dec ds test stc mov in mov mov mov (bad) rorb insb mov xchg dec loop inc aam add lcall jns push scas fdivrs stos cmp lds std and mov (bad) out cs cmp pushf test imul fisttpll jnp dec mov (bad) repnz mov mov scas xchg les call outsl mov mov sbb adc pop dec mov sbb in sbb lahf sub pop pop sub xchg (bad) pushf mov loopne or in ss mov push and jecxz mov adc aad mov pop inc into xor jmp cmc jg inc fisttpl dec pop and xor or lahf xchg inc (bad) fmul pop add ret or inc jnp in bndstx fcmovnbe data16 inc dec cmp clc in mov stos xchg or dec xchg dec xchg dec outsb bound cltd push inc pop inc mov add sub push lods adc (bad) popf (bad) sub cld scas sbb dec lods sub and iret sbb mov xchg mov pop pusha lock jmp lahf aaa dec aas testl push sti lods fimull std sbb pop ret cmp scas out sub push push xchg rorl loop outsb pop xlat jmp xchg dec mov mov sub add popf ret popl lahf ret mov (bad) (bad) mov cmp gs test mov pop and inc in test push pop movsl scas and jb mov ljmp push aam out ss cmp inc pop dec dec popf xchg mov repz mov scas mov mov push inc popa je mov (bad) test jmp aad or add outsl out (bad) dec fidiv repz xchg std pusha dec das sahf test cmc lret pushf xor gs (bad) push push mov add dec or cmpsb inc lret in fistpll stos sarl arpl dec sub test aam test sti dec mov inc int int std mov adc push imul xor fwait push push je push add sub push sbb arpl rclb inc jb mov or stos push jae jmp push jnp lret repz xchg pop je push ljmp aaa mov xchg pop je push sub jb rcll xor mov repz jnp (bad) adc arpl add fwait repz dec push bound pop xor pop mov aaa repnz aaa (bad) data16 jmp push sub jb xchg adc les xor jmp push arpl push mov fwait push adc aam mov inc xchg fistl xor mov sub mov inc push (bad) insb ja xor jmp push mov jb repz mov cmp mov push lret aaa add jbe adc sub outsl pop sub push call mov stos add rolb sbb jno xchg xor cmp popa jae scas adc (bad) xor and loope xorl xchg repz inc or daa cltd mov or mov xor pop push dec sbb and and clc mov fs push cmp sub pop or push cmpps stc jae cmpsl mov in lret cmp mul cli pop in xor sub (bad) xchg sbb popa inc sbb or cmc popf (bad) mov mov lcall out inc jg pop ja add sub push add shlb rorl pop jbe sub inc mov fwait mov inc push pop gs sub push pop or mov stc cwtl mov adc add fstl xchg lcall ficoml clc sub movsl xor xchg aad jp and pop daa cmp outsl mov out sti push stos jnp imul jge pop mov iret or dec add icebp and imul test add lods lahf lea and mov movsb lahf lea add pop out insl cmpsl pushf jno sti stos ret mov leave call sbb mov nop stc and xchg ret test rolb out lea gs or mov cmp and (bad) gs adc sub push sti dec mov inc xchg leave inc or sub pop sub dec pop push xchg inc dec bnd aaa fcmove sub lahf push mov pop mov or mov mov scas sbb lock shlb out adc fwait mov xchg sub pop jle movsl aas pop sbb cltd gs fwait mov or insb pop (bad) shr add mov jle pop pop fmull push pop push push sub xchg notl adc cmpsl stos and test inc add outsb jb lods das mov sbb xchg in divl imul movsl lahf paddd movsb pop mov pop and dec add cmc mov sahf ror loope test imull rcrl or orl sub push mov jb fneni(8087 (bad) in xor dec push add sbb in lahf push (bad) cmpsl jmp xor xchg inc xchg pop cmovb sbb or fnstcw inc xor movsl movsl inc push and adc out imul out imul pop sarl dec icebp pop ret mov mov pop add push pop mov repz loopne push movsl sti insb sub jmp pop adc addr16 xchg or mov out lret rclb cmp or dec add fwait xor push lods not cmp jge push sub mov std loope test (bad) lret es insb xor sarl iret leavew mov ret mov push icebp jecxz mov inc dec adc (bad) ficompl ret fisttp das or sbb out xor pop inc mov mov or inc pop sbb imul lea sub gs fstpl inc xor leave sub shll dec sub lea and out mov sub cltd lods (bad) stc fcmovnbe loop or push inc pop xchg stc cmpxchg dec js fwait jmp imul and imul iret adc xchg xor lret xchg sbb sbb in cmp mov fldln2 imul cmp lret fucom div stc (bad) jae xlat icebp jmp negl mov cwtl scas (bad) ret dec js inc call popf cmpsb pop lods (bad) xchg cmpsb pop int push jb mov mov ljmp mov andl xchg and movsl (bad) mov mov aas cmp in lea sbb push xchg mov mov push xchg (bad) or push and push (bad) xlat xchg ja scas ss push xchg jmp xlat ficompl push adc push xchg push mov rcll pop push push xor fstpl je push mov repnz stos sbb mov (bad) je xlat iret outsw mov ja test pop add outsl scas xlat jg rorl sub push loopne jo adc add mov cmp int ss imul sub or push push jecxz in sub imul ror mov imul ljmp lods and jmp mov adc outsl mov push mov test add iret movsl or dec xchg out mov xor or jle adc jecxz jecxz dec xlat inc xlat jnp xchg gs testw add cmpl and dec and mov (bad) je ror mov cwtl in cs stos fistpll xlat or fcomp (bad) pop mov dec xchg mov (bad) call ret out push test sbb mov fwait pop pop sub imul imul or and into xor (bad) pop (bad) push pop dec adc or pop (bad) cmp mov xchg push and dec and cmc cwtl sub jnp mov andl jp mov popa inc mov mov dec sub rcr incl xchg jns lods mov inc scas push xchg scas stos decl enter call mov xor inc xlat push dec or push dec sbb jbe lea test jnp icebp xchg test cmc mov pop fs xchg test sub sbb push add std or jns in adc lahf inc in dec shll icebp push stos sahf mov and scas fisttpll adc imull cmp mov add out jge ja sub cmpsl sbbl dec push stos add mov inc pop jb mov mov movsl in dec clc push xlat addb gs jbe dec dec loop jecxz in ret in fidivrl out enter inc into jp (bad) pop inc cmp daa cmp rcl pop dec das and pop daa fistl lock mov push dec xchg movsb fwait in fs push es movsl add repz lea dec dec adc cmpsl arpl popa dec sbb xlat xchg flds mov jecxz and sti fwait movsl add mov ret nop add insb adc cmp in (bad) mov xor fisubrl scas dec pop in fildll rcrl sbb aaa imul imul sti pop repz push push pop fs xor arpl xor insl push je push cmp fstpt jmp sti pop add sbb sbb push inc daa jnp mov inc (bad) hlt add lds fidivrl mov (bad) sbb mov cmp mov push sbb jge mov ret arpl je cmp or inc push jmp inc mov lcall cmc adc adc adc push gs aaa cli imul adc aam inc fnstsw mov jmp push ficompl arpl shr in icebp lcall cmc repz lods frstpm(287 mov jmp fnstenv arpl (bad) push pop pop loope adc mov push jnp push inc pushf push cmp inc pop push xor sub das xor jb or outsb inc mov negb push in push adc jmp pop pushf ja inc xor add enter stos test push ret inc or insb sar push jae and dec cltd pop imul pop push or dec jmp (bad) fwait jb movsl push pop aas (bad) dec xchg and gs (bad) push adc aaa insb (bad) and dec and adc mov xor xchg push mov inc fidivrl gs push or pop jmp movsb or mov insl jbe pop push dec jno jmp stc mov cmc fistpl (bad) dec push xchg mov adc push rcll add sub fisttpl xlat ret out and fcoms mov stos inc push xor cli (bad) jb and sbb ja cmp mov xor test cmp pop push jmp imul or sbb or xchg pusha cmp outsb xlat fist jb (bad) push pop sub push inc std aas pop insb push mov xchg adc dec push mov adc mov enter cmpsl das pop imul (bad) pop push mov imul xor xchg xor andl mov sub push add test pop push ret push (bad) jne and xor fisubrl inc adc mov fwait mov repz xchg mov mov or leave hlt sahf stos fcmovnbe (bad) imul in sti or das inc cmp (bad) mov arpl aas gs arpl call sbb pop fisubl sub call jecxz daa add test push jmp pushf sub mul subl mov mov pop xor fnsave push cmp pop bound pusha shll sbb je ficoml lret jg push push jae adc (bad) push stos add add andl add ret subl xchg lds sub mov testb lods adc out stos cmp testl add (bad) pop pop int3 dec mov xlat gs inc dec insb cmp pop aaa add fisubrl inc pop jecxz xchg jbe adc xchg stos ret ljmp add in stos push (bad) dec dec outsb or or sbb dec outsb push jb shrb cs push mov add aas xor fdivl push and xor sbb fcoml and aaa ljmp push xor aaa test rol push lahf repz gs imul mov pusha (bad) (bad) gs xor fiaddl inc xor in push cmc imul dec mov in xor push mov pop (bad) cmpsb cltd xor cwtl push fmull push cmc ljmp nop pusha les pop xlat mov push movsb dec cmc in pop (bad) sbb pusha mov aaa test xchg repz fnsave cld ds mov push lahf jne inc xchg insl push push in nop xchg xchg pusha scas push movsb dec cmc in pop (bad) sbb pusha mov aaa test fbstp out les inc inc mov pop mov popa pop jbe pop sub xor gs repnz addr16 sti scas loope xor or fdivl push andl xor pop addr16 (bad) inc scas ja repz cmc pusha (bad) mov clc in xchg and xor (bad) in xchg sbb mov aaa test (bad) in xchg sbb test out fcoms aas mov sub (bad) scas cmc test sbb fldenv imul or push in jle push jns mov mov jne in inc add fcoml sbb cs test push in nop xchg xchg pusha scas push movsb dec fcoml mov lahf push push cmpl nop xchg xchg pusha scas push movsb dec popa push jno das dec jae jmp mov xchg pop ds jae daa (bad) push in sub adc and or fstpl in rolb aad push rolb test push mov insl or mov mov push sbb add stos sbb xchg adcl cmp push push jnp in jle push jg (bad) mov clc in jle push andl inc push stos mov mov jne push fs jmp insl xchg subl pop gs test gs cmp mov pop gs test dec pop add test jecxz jae xor insl push lds jnp pusha mov mov dec lret mov adc pusha mov ljmp pusha mov mov dec lret and ja loop dec rcr cmp js mov push test popf inc cmp aas neg sub mov (bad) (bad) je mov (bad) in xchg sbb int3 js pcmpgtw mov sub add push js cltd gs inc xlat cmp cs test mov ljmp pusha mov aaa dec jo mov push inc pop adc addr16 xor in push clc and (bad) je mov (bad) in cmp shlb dec int xor xchg push lahf aaa xor fcomi leave stc popf dec push or xor sub mov mov inc aaa xor dec fwait pop js mov lahf aaa xor icebp icebp xchg xchg inc mov mov cmpsl adc in pop or aas cltd mov fbstp arpl aaa jbe mov loope rol ljmp mov sbb ret (bad) icebp cltd imul mov jge fistl pop ds mov fistl mov cs sarb (bad) in lahf jl out sub cmp dec mov mov shrl loope xchg movsl popa sub rorl xlat xchg sbb or cmp cmp push leave (bad) shrb shll pop sbb aad movsl pop jmp push repnz sbb lock (bad) cmc dec addr16 imul scas std clc inc push push mov and mov sbb pop mov popa loopne xchg fwait sahf in scas ret (bad) loopne mov mov mov dec in ja outsb outsl pop jae or or arpl pop stos sub addr16 sbb imul out aaa imul and out and mov adc out jle (bad) (bad) xchg inc add push fwait dec xchg adc imul clc scas and ficompl ret adc fnsave adc mov into jg repnz (bad) pop popf out inc rcll movsb lods sbb ljmp sarl out mov sti pop fcomip mov mov pop pop or les mov cli mov gs pop mov out cmpsl mov sbb nop mov (bad) insb pop and sub out xor sbb adc lea add test out pop dec pop gs sub test push addr16 xor jnp or adc sbb mov xchg insb sub cs mov mov arpl pop pop or testb and pop jns push int3 insb cwtl sbb mov nop jb add jecxz or (bad) xchg mov decl sub adc push idiv inc push fcmovnb push test and int gs or mov aam (bad) xor jmp out push icebp stos fbld sbb dec mov inc fisttpl pop idivl push test (bad) in movsb pop (bad) xchg cltd stos inc xlat dec ljmp pop mov negl dec int3 (bad) lret rclb sub mov inc (bad) jl xor adc fisttp aad mov lret dec cmp repnz (bad) idivl xor lret div xor pop ficompl cmpsl push daa icebp movsl out dec mov xchg mov pusha push jp (bad) stos stos mov jno in es cmp scas shr pop (bad) icebp (bad) xor mov fmulp rcrb pop aad mov jnp xchg mov jge stc test leave mov inc mov cwtl nop std push xchg divl vcvtsi2sdl gs dec adc insb cmp sbb adc xchg sbb inc loope test jecxz repz les adc mov cltd adc movsl int adc lds inc aaa mov xchg and add fwait adc jae xchg ficoml dec addr16 dec (bad) int xor sbb (bad) insb and dec sti fstp inc add dec and mov cmc frstor insb gs inc sub pop dec or cmc das in sub popf pop cwtl cmpsb mov xlat sub ficompl shrl sbb adc mov lea in and rcrb pop lods mov and adcl or dec and addl mov adc popf jg xor mov rorl das sbb inc xchg xor and fwait or pop sbb (bad) inc sti mov pop cmpsb rolb test popl dec pop bound dec imul adc adc imul sbb push push dec xlat sahf push or push lret add inc add inc sub fnstenv loope mov fisubr (bad) in sbb push rcll cmpl pop mov imul xchg aam push xchg imul sarb xchg into std push jle add stos push in aaa inc mov leave mov sbb sbbl cld aaa fimul ret test jnp and stc push pop sub adcl or loopne call insl test pusha push aaa dec aas (bad) xchg cmp push adc or fsubrp aaa pop into mov push sar or sbb (bad) xchg (bad) popf lea xor xlat lds fild cmpsl push stos out (bad) (bad) mov in add loope in enter lods outsb sbb dec jb mov or mov or sbb in out pop mov mov or in jp stos sub ffree mov dec adc mov and mov jecxz dec imul and (bad) int3 jmp xor pop mov sub push jb incl jmp mov jae test stos xchg and mov adc arpl (bad) js pop dec ftst roll popa out push and xor pop or cwtl cltd mov inc mov pop aaa sti sub push and (bad) loope nop sbb fwait mov mov push xor loope pop push jecxz repnz into scas ret and sbb inc clc xchg insb or inc inc fldenv and scas gs jae sbb pusha sub push push and mov sub mov mov jb das cmp xchg cltd int sbb jno sub dec fldl mov xchg imul scas (bad) (bad) jle xor fist mov mov push fwait out lret push xor inc gs push lods popf push mov lea daa int3 and xor call gs mov in add insb leave sbb or sub dec inc or dec mov and sbb stos mov in rcrb push outsb mov arpl cmp jmp mov push cmp into sub (bad) lods mov inc fisubl jmp inc dec or or sub andl xchg and or out adc in into (bad) fistpl or add sub mov sub mov std out xlat fiadd jbe mov and mulb inc cmp adc add mov sub pop inc add add lret into or sub xor movsb lock rcrl and aaa jo cmc sti fnsave aaa xor adc (bad) add mov pop shrb jbe imul adc inc pop mov repz and repnz cmp lea push cmpsl adc cmc or mov add sbb adc loope mov mov (bad) pop jno std iret decl (bad) lds (bad) fistpl mov xor movsl stos cmp ror mov pusha pop pop mov nop (bad) mov (bad) dec push jo xor stc leave jne xchg shrl cmp mov push dec in clc data16 jne xlat add sub xchg xor fwait mov test mov leave pop psllw mov xor xchg sub dec sub scas and xchg repz ret jbe mov fsubs and ja or into pushf mov mov mov cmc xchg adc je sbb scas test test inc and push sbb mov fs cs adc gs stos in xchg xor adc pop js push pop cmp sub dec or in inc dec (bad) inc out cmp (bad) lret push int jmp mov xor adc xor mov pop andl pop pushf mov in mov cmp dec sub repnz aad ss mov lahf xor fild xchg sbb fwait (bad) xchg sbb repnz mov les add lea xchg cmp push aad add add jl stos jg (bad) pop std add lods (bad) aaa and adc mov fucomp pop ret (bad) sbb or pand notb fisttpl in lods sbb cmp dec inc arpl lea das outsl inc outsl or push or arpl in andb aaa jmp push fisubl out in sub not rolb or push aam xor mov pop leave enter movsb test or movsl adc lds in or xlat pop ss ret fs pop jno pop mull enter rorb pop popf or enter sub repz jge sub xchg mov cmp clc test fistpll js mov jg sti daa xchg xorb dec subl ror push test mov sub pop xchg sbb xchg jbe fildl mov lret stos dec stos push (bad) sub sbb jl mull subl adc jb fs or mov (bad) adc (bad) into cld or jecxz ret dec pushf dec sbb add sub xor (bad) cmc stos mov xchg daa sub pop fwait in sbb movsl jns rcrb (bad) pop stos fisubrl (bad) adc les mov inc and call repz xchg pop shll sub inc cmp push repz popf xlat sahf icebp inc xchg sbb jmp and sbb cmc mov push shl repz sbb mov sub nop push xor daa andl dec mov mov lahf push ficomp stc movsl sbb jg daa push mov movsb and xchg repz mov dec pop lds sub popf lock mov add cmc adc nop xchg ja inc fnsave adc and enter sbb nop xchg and pop adc (bad) dec xlat loope adc es fistpll pop lret fisubl xlat dec jge jmp dec or out mov rcll popf fcmovb push aas (bad) imul sbb push lret (bad) adc lcall inc or add or sbb jmp (bad) dec push mov xchg mov xchg bound sub or pop arpl insb aas or jmp add dec enter xor iret push out inc imull and stos add fldcw fildl lret outsl or mov jl fildll rcll xchg sub pop in sub sti mov in testb push inc pop sbb ret addr16 stos aaa in shl les add mov lcall loope pop test ret arpl lcall cmpsl mov push inc int imul loope xchg xor pop ficompl fisubr sub divl and cld jl pusha mov sub fstpt xlat mov add jecxz and jno in in mov add or and gs movlps inc jns pop mov aad push sar pop fwait inc rol sub mov fxch fisttpll and xchg mov sub adc pusha cmpsl ret movsl les push out mov xchg fs fstpt (bad) loopne popf mov mov jne jne jae ja jno jmp popa jne pop and imul jae jno ja and add clc add xchg fbld jae addr16 popa add pop jne push inc shrl js arpl jl gs loop and and mov repz ret fs xor jmp push (bad) mov notl xor jmp push mov mov push push xlat push (bad) xor jmp push xchg aaa xchg repz out daa jmp push cmpsl aaa cmpsb repz inc fs push (bad) xor jmp push xchg xchg outsl outsb fs push out xor jmp push scas aaa scas repz dec fs push into xor jmp push (bad) aaa mov pop pop fist xor jmp push lahf aaa sahf repz ds jmp push jg jle jne fs push hlt xor aaa mov push push fs aam adc aaa xchg repz in and aaa movsb repz inc lds xor aaa test insl insb fs push in xor aaa lods repz dec fs int3 xor aaa mov pop pop fstl xor aaa pushf repz mov push jge jl push not jne imul push roll repz jmp push repz jmp push pause pusha xor popa push repz pusha xor loope repz xor and repz jmp push repz push repz pusha xor roll shlb add repz jmp push repz imul jmp push repz push repz jmp push repz xor dec push repz pusha xor leave push repz or repz jmp push xrelease jmp push repz pusha xor flds repz jmp push repz jmp push repz pusha xor cmp repz jmp push repz push repz pusha xor jns repz xor xor aaa gs mov sbb fwait jmp push jmp sub stos dec fs push or mov jae repz xor mov rcll xor ljmp repz test (bad) dec scas fist push arpl inc jmp push push aaa addr16 outsl fs push pop xor jmp push push aaa gs inc jno dec aaa gs repz popa xor imul jge outsl jno jmp mov xchg addr16 jmp jmp mov jns fs in push in push push jno xor dec ljmp test ljmp stos loop inc push mov and jne add jmp dec cmp dec mov jns inc xchg jnp inc gs push jno xor outsl inc dec fldenv sbbl and cs std cmp mov (bad) gs pop cmp sub or arpl popf sbb jnp jecxz std lods cmpsl cmc into push inc mov sbb xchg cltd fiadd lock or push xchg mov out or gs cmp pop repz push fs push dec xor cmp and adc fs push (bad) xor aaa xor lock scas cmpsb push enter (bad) cmpsl inc xor lods pop xchg xchg inc xor call lods hlt push test xchg sbb loope mov (bad) mov mov leave pop rorb push (bad) ss ficompl insl inc jae jmp mov mov daa mov push lods cltd rcll push jmp mov mov imul mov and dec outsl add arpl adc lods sub arpl push xchg cmp aas mov addr16 ja xor push inc repnz dec sbb and pop sahf push aad inc inc push popf jnp xchg cmpsl fwait or xor pop push jno xor ret xchg int3 mov dec and push gs adcl imul pop or xchg cmp cmpsl jmp xchg add mov jp movb mov jp call dec mov mov jp mov ret jne push les pop xchg cmp movsl jecxz cmc mov test add (bad) jae loope insb pop (bad) mov xchg sti or into jp add sti test and (bad) ret mov jp vpaddq and les das pop pop mov ljmp xchg adc iret inc dec push fcomps cld add sub insl mov out xor cltd sbb stos lret and mov std sbb cmc ret xchg (bad) jne jp (bad) dec daa pop int3 cwtl fs insb adc cmp outsl sub clc jp adc or mov test pop sub dec jp pop mov pop cmpsl jns jp popf imul push jne ret mov xchg aad fs xchg inc lret lods insb fistpll jo pushf dec outsl stos subl pop jp out les lods (bad) (bad) pusha subl (bad) mov sbb jnp bound gs fstp jno pop xchg jnp xor cmc sub out sbb repnz jp xchg into shlb (bad) les sbb fimull mov repz cmp addr16 sbbl xchg insl fistl pop sti popa (bad) outsb cmp jne or leave adc sarb add mov ficomp jne mov aaa rcr sbb sub call std je jp add cld or jp cli cmp pushf push adc inc arpl adc add sbb (bad) jae jo ret popa mov jp add pop pop sub clc xchg pop mov js push and push inc jne imul (bad) xor stos xchg jne jp imulb mov loopne lods jnp bt test mov jle and movl mov (bad) pop xchg icebp cmp sbb jg jp xor (bad) lret xchg imul cs loope push jmp and lret sbb jno mov cwtl adc int test lahf adc bound jp loopne jo add (bad) jp sub dec mov loop jmp jp aaa sbb insl int add push in sub cld push push (bad) adc jp cmpsl adc sub idivb fcomp or les imul xchg jp mov addr16 imul mov xchg push leave cli jge out clc dec push xchg mov and orl pop jp push pop dec lods or mov shrb divl mov (bad) cmp dec (bad) je das jno mov or scas (bad) jg fwait cmpsl pop js add scas ret popa jne ljmp mov rclb mov in mov cmp enter jae notb jno jp das test fidivrl jmp lahf (bad) jp cmpsl aam ret les popa mov or jp and add jmp inc xchg xchg cld pop data16 cmp shrl xor xor fidivrl and clc test jp adc out bnd jp mov or jno adc arpl mov cwtl ja dec (bad) nop sbb popa dec jno jp mov pop jp sub cmp or sbb stc jp fistpl jmp sti pop or jno pop dec and lock jnp dec jp fucomi lret add xchg leave jp jg ret push mov vmovntps add cmp imul xchg jp dec int3 pop loopne hlt lea xchg lcall call jp out lret push pop pop dec pushf fwait cmpl testb pop bound xlat and inc inc sar jp add pop adc mov (bad) jp repnz jg ret jp lahf and mov push arpl out jge lock fstl jp lahf jns mov cltd stos imul adc push jb stos sub mov lcall movsb es jp inc jnp xchg dec jo clc jp cmp adc lcall push pop pop dec push jnp jns mov xor jp gs ja test cmpsb jnp push adc mov push push aaa fistpl imul imul ja mov cltd stos inc mov enter sti fdivrs fistpl and mov fstps jp xchg xor or mov jo cmpl adc clc jmp sti cmp jnp imul cmp jno js mov pop pop out je mov (bad) fwait ljmp pop add push imul lret aad add inc sub stos aas js mov stos stc mov add clc mov stos push inc jno addr16 loopne push sbb sub dec sti add sub stos jp or ljmp xchg push push es mov jmp cmp (bad) jae xor jp sub ret push js cmp xor stos pop cltd jp push inc fidivl cmpb and add sbb gs (bad) ja loopne xor jmp push aaa cmp jmp aaa xor lcall js mov ljmp push mov push sub ljmp popa jnp add in jp pop je fnstcw jp cmp sbb mov jmp hlt nop sbb jp stc in imul jo mov xchg mov aad fadd adc adc pop inc and xchg (bad) xor jp inc push int3 fsubs sbb jp stos rcll add shr sti out aas jmp jp mov int jmp push roll loop adc jp shr xchg mov or inc mov fnsave pop std dec cli pop dec jp lea push dec call aas cmp mov jmp repnz fiaddl (bad) ja or ret jp shrl addb jo arpl popa (bad) addr16 int3 (bad) jp lcall jp add adc arpl or scas (bad) idivl dec rcll sbb mov mov cltd push mov jp xor icebp jp fisubrl stos cmp jne xchg lcall mov xlat or jp mov bnd jo sti test cli jmp adc inc cmp mov lcall mov jecxz and adc pop ljmp cmc fadds ja pushf push jnp cmp jp mov movsl xor push inc or pop clc imul mov dec xchg int pusha mov addr16 inc jnp mov or sbb insb xchg mov pop jp scas cmp xchg test lret nop cli pop ljmp xor lea fdivrl test xchg addr16 dec jp push add in xchg cli jp stos mov push mov mov fstl pop xchg cltd test aam stos pop pusha mov and ret mov leave jecxz jae into rcl add pop sub pop (bad) icebp scas ljmp fs xchg adc pop pushf cmp mov loop popa pop jnp (bad) popl xchg fiaddl lret jb aas (bad) adc jp daa mov cld or xchg push push ror data16 fist (bad) mov jp flds adc sub jp scas rcl lahf fwait ret mov mov fisttpl mov jne jp jp adc nop les out mov jp dec dec dec pop test addr16 stos (bad) xchg negl mov cmpl ja jns sbb push or pop adc mov mov cmp mov adc jge xchg sti cmp push jg ljmp fwait dec pop push xchg pop mov (bad) loop dec lahf xchg rcrb mov xor stos scas mov mov jp cld lds fisttp (bad) jp adc jp jl jnp fdivrl or mov imul jp clc mov cmp sub call cmp dec stos imul sbb sbb jp mov shrb test dec xchg mov nop or xchg (bad) and (bad) cli push xorl xchg inc or mov jecxz fisub pop add mov mov js dec pusha sbb mov fsubs repnz in lock divb mov (bad) mov pop in movsb xchg sti jnp pop adc stc sarl test sbb pop repnz dec mov xor add lret xor jp mov add inc and jno mov add shrb or (bad) lcall push mov popa pop push mov and imul imul mov inc push (bad) ficompl jno js push mov dec adc sbb dec (bad) dec stc das mov test and lret (bad) mov stos ljmp addl xchg push mov clc mov (bad) jne (bad) pop push lret icebp jne or cmpsb lock jp jae sarb dec jp cwtl iret inc cmp nop add jp adc add or jno (bad) insl and jp inc adc jnp stc dec mov mov dec xchg push dec in rolb cltd mov (bad) outsl jp xor repz jp sub xchg fnstcw stos cmp mov or aam mov test jno or xchg sar pop dec stc pusha je add add popa lret das sbb jnp scas jl sbb inc pop pop inc jg mov cmp mov mov (bad) adc pop imul jge dec xor push mov int3 aas out (bad) sbb insl subb ret movsb mov sti addr16 loopne fsubrp jp mov add imul roll pop inc pop ja cmp jp pop pop sbb mov sti jp in add pop dec pop cmp sbb jp mov stos jmp jno and and jae mov and pop adc ret dec out aad mov jp and outsb dec int3 or inc mov jp inc les stc push (bad) (bad) jp or or add xorl jp pop jns nop lcall (bad) or loope or stos inc in dec cmpsb xchg jp add mov dec test add jae (bad) jp push hlt adc pop adc sub fidiv xchg test cmp dec mov lea lods test addl lcall inc pop mov inc mov cmp in fildl jp sub pop ja cvtps2pi or cmc cmpsb sub jp jp pop roll xor xabort jnp jo outsb andl or fstpt lods jp fnstsw mov (bad) mov adc adc sti mov orl enter push cltd cmpsl push call xchg adc loope mov imul jp fbstp push mov aas data16 cli pop cmpsb ret fcoms xchg ss (bad) xchg sahf imul xor push sbb lods cmp lret aaa jp jo mov inc push jno pop jecxz dec ljmp xorl jb adc std scas sbb jnp ret xchg mov jmp cmpsl mov mov ja sbb mov inc pop cmc loope jno lcall lods outsl jp sub pop sbb loopne xchg lcall repz and (bad) dec jmp jp xchg sbb cmp imul xorb xchg and mov bound fs push mov jnp jns jp and cmp outsl lcall jns sti jge cli pop adc mov add ficompl inc lcall ljmp daa jp sarb sub leave and clc lret push ljmp mov xchg add pop out pop jp call fisttpl jne cmp add lock cmpsb dec fsubr jnp fwait jno addr16 cmp or jnp push pop rcr jp popa push sbb stc aaa mov out jmp sti cmpsl mov jbe in cmp mov scas lret (bad) inc jmp push fwait adc cmpsb mov sti cmp loope jp,pt xlat sarb cltd mov jp test cmp in jo popa xchg imul test lds and fucomi jp sti les inc test daa call mov xchg cmp jp lahf xor adc out cmp out jp jecxz addl mov insl pop (bad) jp and adc dec dec jae sbb or dec and nop insl sbb mov inc dec inc mov pop cmp jnp ret out push loopne (bad) hlt (bad) (bad) dec mov ficoml sub imul and rorl mov ja movsl ja lds test in les loopne andl fs test les and imul or add imul sti (bad) pop fist pop dec sbb aam ret les cwtl loopne lahf or test fcmove jnp hlt jp or mov and lock mov jp jb (bad) mov mov and or imul leave lods (bad) jno (bad) shll ja test jp lds sbb pop outsl push inc pop aas ljmp pop sub movsl pushl push add jne lea jp jnp ss cld jp fdivrs cmp xor mov jp popf pop jg sbb fist cmp xorl dec leave push int stos mov out cmp ss subl jg xchg xchg sub cs jb pop pusha lcall dec sub sbb xor rclb jnp pop inc jp xor inc notb cwtl mov sti aaa lcall fcoms cli and (bad) mov nop adc call jp negb xchg cmp jp cmp add jno mov pop adc imul xlat out iret xchg pop lcall cltd xchg xor jp sub cmp jp daa (bad) ljmp sub jmp stos pop mov cmp add imul jp xchg mov aam insb in mov add xchg push cmpsb jnp cmp jmp pop xor imul jecxz sub cmpl mov jp lret mov mov mov aam loop inc out dec mov imul push inc mov shrb aas pop ds mov sbb jp popa or std (bad) cmp (bad) jp ljmp aas scas lret dec mov cs mov repz sti cmpsb push aas push jnp mov fldt inc mov imul sbb ror insb pop pop jnp jnp push sbb pop sub jp or ss inc jp push imul push sti jmp sbb orl sti stos icebp lcall dec test sti push jp and xchg in mov sti es fcmovnb stos xchg fwait das aas loopne orl cli push jp jp lret cmp jmp push sti xchg lret jno loopne in dec imul sub lock lods jp mov sub cmp mov sbb add jmp ja (bad) ljmp insl cli ret cmp inc inc das dec push cli in shrl iret jp or pop jp mov cli xor in jp vmovhps push ficomp sti jp mov out cmp ljmp pop mov mov sbbl gs or jp mov bnd cmp xlat cmp insl loope rcrl or xlat cmp lcall dec imul imul call dec lcall popa mov std in push xchg jo fisubrl ss mov ficoml inc cmp sub outsb pop jp lret cmp pop dec xchg push loop addr16 sub inc push or cs mov cmp sbb mov jp shr cli mov sarl subl popf jp pop ficompl mov arpl mov ja data16 ss pop lcall pop jp push jnp mov fstpt lret jbe sbb mov jp ljmp in jp leave push sbb sub stos sti mov call in cmp scas cmp jecxz leave (bad) jmp loop jns dec sub (bad) jp orl jp and stos stos (bad) mov push jp xchg neg pop stos push fwait (bad) aam xor pop pop inc imul push sbb stos cmp pop jne lods sbb lret xchg pop mov or imul sub or fcompl out adc pop (bad) gs jp cmovb cmp (bad) xor dec pop cmp hlt jo lods lcall outsl lock fwait lcall test xchg adc std xor mov adc or add ds and mov movsl mov cmc je or adc ret loope xchg cwtl pop orl ja push pop repz add sub mov in pushf and cmp insb sbb lea jp ljmp or stos outsl repz jns xchg add fimul out stc push sub cmp cmpsl pop call pop sarl test js pop mov insb lock pop aam inc jp mov xlat push mov cli loopne cmpb stos inc inc cmp outsl push (bad) sbb mov cmc xor jmp cmc cmp dec sub sahf add sbb push aad popa mov (bad) stc lods icebp test lds jl mov jp loope fstpt jmp jg mov repz jp sub xchg sbb push jo jo and cli dec adc (bad) jp mov aad dec xor or pop mov addl push push fmuls imul cli fs aam pop movsb imul dec xor mov push jne cmc popa cli inc jp push jge int3 icebp adc imul pop std in fistpll (bad) lods inc mov mov xchg (bad) loopne hlt jp shlb xchg (bad) ljmp stos jb loop (bad) arpl cmc jp fnsave pop (bad) sbb sub ret jb ficom outsl bnd in decl cld test add jb inc or enter pop fs jnp cli or cmpl xor (bad) cmpsl jp movsl je push loope jp sahf pop push test xor mov inc jp cmp icebp add xor jmp test cli pop (bad) push cmp or and push dec je jp xchg ds stos fdivl outsl cmpl fist test jp jae inc sub out in (bad) into mov leave in push divl gs sub dec add jp mov fnstcw in xchg xchg jp mov cmp push fs stc push push stos push sub imul ljmp dec je test fildl (bad) es xchg adc imul pop aam loopne jp xchg push or sbb xor repz xchg pop and jnp insb addl push cmpsl add ret fdivrs je cmpsb repnz (bad) or inc cmp cmp cmp mov scas mov jp rcrb inc aas cld xor push dec mov cs cmpsb sbb fs cmp shl mov dec lea mov roll and cmpsb jp xchg stos fisubr push inc jno mov cwtl jnp dec clc pop jp jecxz xchg fwait and and ljmp xchg jb mov cmp jnp sbb push jp hlt test adc xchg jp loop pop les fisubrl aaa scas jle rclb mov inc xchg inc adc mov xor imul test xchg jp pushf mov xchg adc gs and push pop dec push imul jns outsl cs aas jp sbbb push pop push out jp mov test jp cmp jecxz sub pop cmp ja dec pop jnp mov fidiv pop jp sbb int jg cmp jae jnp fnstcw or cmp push stc jmp repz cltd cmpsl int xchg inc lods sub dec cmp jne xchg ficompl sbb (bad) or xor push mov jp dec stos popa adcl sti imul cmp pop jp lock sub btr jp mov cmp cmp dec mov scas arpl pop int mov incl jp pop mov jp jle mov jno pop addb mov fistpll cli fcmovnb fidivl les cmp movsb jp pusha sbbl jp ret (bad) mov jp mov cld fs pop and dec sub lcall xchg jo jp add jp add rcll jb test iret xchg jns scas mov int3 jae movsb loope outsb out jp fcmove sbb and sbb pop pop out mov push adc add ds cmp mov jmp xchg ret imul push mov jp or cmpsb divl sbb xchg push lahf in xchg ja add push and frstor cmp and jnp cmp xlat pop sub pop pop jl sbb (bad) inc pusha sub jp inc mov cwtl and mov xchg mov scas jne (bad) into xor lods (bad) repnz jp rorb dec jp add cli (bad) push xchg scas dec pushf mov stos jp das bound adc cwtl inc mov jnp mov addb dec lods outsl pop add xchg lret jns outsl enter pop jno fimull dec xchg add pop inc push mov sub adc pop idivl pushf std lret pop adc inc adc xor movsl int jp xchg xchg mov cmp fisubr loope rorl das dec pop aas add imul xchg jp dec pushf mov stos inc ja,pn jl adc mov xor cmpl pop add jp fnstsw popf leave mov jp fimull jp iret maskmovq negl popa ret cmp pop enter push insb lret jp mov movsl setnp data16 pop cmp push aam (bad) pop add jg test lret adc icebp lods stc lahf or (bad) mov int js std int3 cmp cmp mov and sahf aad mov push xchg fcmovb sbb int not loopne sbb cli sbb fxch pushf or in mov cld inc fcoms xchg jp call push sahf pop inc fimul dec adc loope dec out push push cmp cmp in dec repnz gs mov icebp xchg or lock ret addr16 sub sti outsb jp sub mov int jp rcll cmp xchg es xchg pop mov scas push aad fdivrs mov (bad) jp (bad) pop mov xor jmp jb fildll divl jp xchg dec and stos add insb test sub push sbb jp shrl sbb or cmp push leave cli adc int3 insl mov lahf stos inc icebp pop jp sar jge or insb aaa cmpb (bad) aad cli fldl2e sbb jp or push fs jo sub or sbb sub pop inc pop pop cmp inc repz pusha jns jp dec stos imul cld mov cmp (bad) dec jnp leave push int out jne pop lcall std or ret imul sbb push jns jp jo adc jg jp or push mov jp mov cli cmp add sti cmpsl pop jmp inc pop add loop ficom mov inc mov lret loopne mov xor inc sahf cmp cmp dec sti jnp or push sarb cmp loopne shrl sarl add jmp xlat in xor jp or mov jp outsl jno in (bad) notl mov dec rol jp daa repnz jp jnp dec stos push mov ret add pop mov mov push (bad) push (bad) and pusha fidivr orl aas popf in das test xor cmp jb aam push imul outsl ja popa jnp jns,pn inc inc pop jne cwtl ret xchg ret mov push rorl dec mov jmp jne pop lods pop mov sarl and fcomi sub jno fnstcw shlb jp mov shl jp or inc mov ret popa mov (bad) and cmc enter cs mov adc add xchg lret jp add jge movsb fmul aam push imul xor mov shr fnop dec push add jnp mov xor nop lods mov jp out xchg aas pop or jno insb and outsl cmp add push repz inc xchg cmp inc clc push hlt pop loope jp std daa jecxz lcall jmp test xor pop enter mov imul ret mov loope cld loopne mul cli jo rorb (bad) add push jp into rolb (bad) bound mov xchg cmp loope adc cs jno sar sarl sub jl ja in jp (bad) popa cmp popa mov jns jnp xor or sbb xor ret jp scas iret xlat int3 or pop jp mov popf cs cmp adc add jp es mov mov shr insb popa or jp xchg outsl (bad) popf rcl gs sbb pop sbb add or mov aad fistpll andl pop cmpsl loop js nop cmp stc fmuls push sbb mov inc sbb jno jo ljmp jp pusha aam mov push fist cli pop dec xor (bad) call pop adc push stos push jl dec adc test mov push movsb pop aam ret push mov aam sahf cs imul cli jns push jnp aad andps inc mov mov and jp pop xchg pop int3 jp jne pop add add xor mov sub cmc ret mov aam xchg jmp jp loop or and pop stc cmc ret jmp imul mov cmp jp cld jo add jle jp jecxz mull inc mov test or stc jb ret test cmc mov inc xchg cltd or mov pop lods add xchg js mov fstl cli ret dec loope out or xor adc imul aam inc stos pop sbb repnz or bound jp and pusha mov out jp and adc call jno es sbb inc insl idivl (bad) push push cli jp jmp (bad) jmp lock and test xchg data16 loop adc mov jp mov aam lods dec or jnp scas xor sub pop or mov mov lcall bound (bad) lret sub shrl jnp stos cmp subb push ja test push loopne xchg fwait movsl xor lahf sub andl ss cmp jp sbb inc lret imul xchg dec outsl mov int cmpsl dec sbb pop imul rolb jno lahf jp ljmp sahf push lea adc xor mov ret push and idivb xor gs iret pmulhw jo xchg push pop or sarl int3 mov decl cmp mov xor push aaa adc popa icebp repnz bound cmp push pop jp in fimull xor sub fs loop inc rclb jnp jo dec cmp cld dec and (bad) fldt cli and shl sbb (bad) jp aaa imul jno cmp pusha adc or jne (bad) pop push sbb mov (bad) stos push jp push in (bad) pop jp xor pop in fild dec jne mov push (bad) push xor xchg mov call pusha add jp loope mov mov mov das imul jp ja aas sbb shrl flds iret (bad) sti out out sbb pop clc (bad) sbb sbb dec lret pop in jp fdivrs stos xorl jbe xchg hlt loopne jp adc sbb xlat mov js mov lcall sbb dec jp xor (bad) mov cli (bad) insb xor pop mov jecxz (bad) jp mov mov dec repnz mov sti xchg les aam mov mov or scas mov mov sti icebp jp and stc les pop ret pushf lds jp pop insl push addl pop data16 jg add mov dec stc fnstsw clc ret jl movsl jp test jle mov pop jp push push arpl jno (bad) jne mov rorb adc std jns cmc jb inc cmp fwait inc pop mov push insb fldt add imul (bad) and jp jle dec inc pusha arpl cmp add stos inc repz pop ljmp sbb icebp pop push push (bad) jbe xor adc jp mov pop mov xchg pop adc dec lcall add stc xchg jp fucomp and shlb jne xchg (bad) xlat cmp mov out sub pop (bad) xor mov jle dec pop jno vunpckhpd mov lea xchg call jecxz sbb dec add dec shlb mul push sbb jbe int3 jp add fidivrl sub lret dec jp push add pop mov fsubl cltd mov sbb fldl pop sti (bad) outsb fcompl push lea bound dec jp mov (bad) ja pop xchg mov mov aam jnp imul jnp mov in faddl add add aaa (bad) ja testb jmp test pop mov stos cmp addr16 test or jp pop xchg es sarb (bad) fidivrl nop int sbb jo push int3 push xor or sbb mov ret or jo mov dec sbb mov clc jp xchg out orl ljmp aam inc jbe mov jp add jnp xchg hlt sti aaa sti add jns sarl cmpsl inc (bad) dec jno mov stos fwait mov fnstcw and cld cmpsl ja in ffree mov pop lret inc xlat popf mov icebp xchg bound jp movsb movsl xor xchg sbb push push (bad) clc jo push jp jnp out cmpsb cmpsl (bad) jp dec cltd pop inc fnstenv and stos int jno jp movsb ffree in aad cmp int mov out pop sbb pop jno pop cmp cmp jmp and add pop xor inc imul cli out push sahf push pop int3 loopne cmp push adc jp icebp pop sbb jp ficom ljmp in clc add jne sub adc imul inc idivb xchg mov (bad) sahf mov adc pop xchg sbb inc test lock fsub add inc mov jp loope mov jp xor sub mov jp decl inc imul mov jns lcall jle repz jp inc daa addr16 mov cmp jnp jo clc and stos lods and inc add jp sub aaa movsb sbb add push and adc scas mov xchg dec jge sub jae push lahf aam mov cmpb sub sbbl scas cmp push data16 jp sbb pusha xchg ss push arpl nop imul sarb sbb insb hlt test ret pop shlb xor cmp ds ret cmc cwtl arpl xchg lret mov bound xchg daa std gs das loope xchg cwtl dec addl mov push dec insb mov inc jp inc cmpsl jb jae xchg jp or outsl ret push lock cmp add jp push jge xchg jp add mov popa pop popf or call mull sbb jp push fimull popf movsb icebp push fsubrp pop gs imul jecxz jae sti add cmp (bad) lods xor cmp adc inc or in jnp push push fwait sub dec jnp jg mov pop adc sub push and mov mov ljmp sbb add mov popa fwait jno cmp add jp inc popl inc inc pop jp push jg adc cmpb (bad) jge xchg lret sti dec lret dec (bad) jo fcoms (bad) (bad) clc jp xchg aaa jno and out subb (bad) test shlb mov loopne pop mov adc push enter test mov jne mov xor jp iret das mov imul push (bad) cmp adc les xor or loope adc push (bad) mov mov std xor fnstsw xchg inc idivl cltd insb jb add test dec xor clc push cwtl pop adc dec and cld xor mov cmc out fwait mov jp jae imul pusha cmp jmp xor ss sub jmp xchg and imul pop dec inc and ret (bad) dec jo inc cmp fisub jnp mov xchg cmp mov sbb xchg jbe cmp jp mov adc test mov stc xchg push jp jno push (bad) mov mov cld lock (bad) ljmp mulb sub xor mov movsb cmp notb jo jp rcl mov bound cs fstpt mov lods icebp jp mov test lea hlt push jcxz aaa repz jp pop outsb dec adc xor sti ss insb ja aam ret pop xchg push and fwait pop mov jge jg jp push ds outsb ret mov mov es out std sub imul jp fldcw dec scas push js jp mov fnstsw jp adc repnz jp cli inc sub jp stos xorb js call aas inc mov add movsb or dec push jp adc push sbb loop lret jmp inc cmc gs out clc xchg sub or mov shll jp mov xor jp pop dec arpl loope dec add mov xor roll cmp (bad) outsl and xor sbb lahf push sub push lret out jle xchg arpl pop outsl jp (bad) (bad) cmpsl add push scas jp xchg or mov xchg pop mov jns add in jnp and and dec jp push sarl idivl out mov es jns cmpsl test inc jno dec pop imul push mov popf xor pop mulb popa clc sti cmp cmpsb jp sbb pop jl je jne (bad) out inc pop dec inc fimull mov imul inc cli (bad) mov jp in scas push adc cld (bad) pop xchg out mov mov iret xor mov mov sub or add adc lcall add xchg push jp inc in mov dec fucomp out (bad) pop add ljmp mov dec mov mov pusha and arpl jno jle ror stos xor jp mov pop jno out pushf push xchg (bad) mov mov xlat fdivrs push sub jp jecxz sbb mov xor inc push pop sbb xor sub lret jp fisttpl cmpsl sbb out fnstsw inc js push aaa scas ret sbb sahf adc jns insl and fidiv insb mov notb inc cmp xor movsl bound push aas or jno jno das add xchg jp mov add jp fstps jne std xor inc stc jg std loopne js or xlat jae mov dec and or (bad) in inc pop mov inc sbb stos inc adc dec les xchg ljmp mov fmull stos dec jp push rolb ja xchg fisubl fidivr ret or jnp mov inc xor es cli or xor or pop fisttp add lcall sti push fdivs jno jne sub test jp in cs mov out jae jecxz pop stos jp xchg dec imul jle or or jnp mov mov test jp dec insl jae sbb pop or repnz xor sti fmull jp addl hlt add movsb pop mov (bad) (bad) xor lcall adc outsb dec mov and push aam fildl jp xor (bad) fmull lret fsubrp aam lret jp xchg into aad cmc dec jmp mov jecxz loop js push fisubr jl,pn jnp pop add (bad) add (bad) lock mov (bad) mov lds pushf jne cltd cmpsl jg leave dec cmp xor cmp jle xchg adc pop fs jp incl mov outsb mov jp orl pop add jne add xchg lret in or outsb inc fcompl pop (bad) jne mov add nop popl lea or push mov in jnp mov jns cmp shrb mov (bad) sbb loopne (bad) ja sub add and icebp jnp mov pop jmp sbb push pop sub jnp sub loope sarl dec test or (bad) cmpsb notl pop fwait pop ret jp out sbb imul cmp pop les jle mov int3 or jp push lret mov jp xchg push movsb mov mov or clc gs sbb sbb adc mov jp sbb roll jp leave jo and push cmp inc (bad) push ljmp leave fmul dec call dec jp mov out aas fadds test pop (bad) jle (bad) mov jp mov repz push cli sub pop cmp clc xchg inc jns ret inc jmp inc jp push ret popa loop jp mov lods mov jge jp inc or push fbld in jno mov pop das fldenv jp or pop inc sub adc add jmp jp int aad in out jp adc sub mov pop adc lahf add jge aas pop insl dec sti push into imul lret bound mov (bad) sarb pop xchg inc mov xchg outsl xchg jp mov out jno cwtl mov mov lea pop push pop sbb into inc loop gs xchg jp cs lock mov and sub pusha scas pop inc and pop pop in jmp mov repz cmp cmc stos jno divb jp and pop (bad) ja cli sbb push inc into jp lret or jg fwait sub jno sbb loope jmp out test dec test adc push mov and inc jp jbe out jle js add xchg inc (bad) jecxz mov jp (bad) aas mov popa lds jno pop das mov mov mov mov syscall jp jno out cli push cltd pop je repz cli aaa ss (bad) jp daa xchg xchg movsb rcrb pop and xor fild jp cmp xchg and dec out (bad) xor jae mov pop ja hlt faddl fdivrp jp push mov lock and jb pop cld adc dec (bad) push fstpt or dec das fwait ja sti jp iret outsb dec xchg ret cmp mov add lcall fiadd aas sbb (bad) lock dec mul mov sub mov out xor daa pop jp or mov xchg dec push insl cli aaa int jp sub imul sarb mov mov mov aas movsl lds add mov push pop dec int xchg pop jp movsb cld (bad) in hlt rcrb pop (bad) (bad) ss clc imul xor jae cmpsl leave push dec cli incl sub mov jne imul add (bad) cmc xchg sub int3 fwait jp fstpt dec sbbl push loope icebp xchg mov cmp dec imul sbb pop mov push mov hlt inc ficompl in sahf mov stos outsb jp out xchg shrb (bad) adc imul sub dec pusha xchg mov std push push pop jp into adcl hlt jo ss lcall pop push add add mov xchg xchg mov mov xor jp addr16 outsl xchg jp imul mov push andl rcrl sbb mov jp mov aas cmp addr16 xor shrb cli jp jo jp cmc je enter mov clc adc xor lcall stos mov sub pop xlat inc inc imul cli aaa aam ljmp lret pop loope fsubl (bad) test xchg cmp mov out jg jp (bad) enter sbb ja lods inc xchg in les scas lea pop push and aad fwait xor mov jp push adc das in call cmp adc push scas je gs fnstcw rclb loop push aaa into xchg jp jns and xchg jae xor imul adc and not dec pop mov jmp movsl mov sbb leave pop (bad) rcrl (bad) stos or sub cmp jecxz ds mov or or push hlt lods xchg cmpl outsb dec lahf sbb in dec test or add or xlat lods dec push aas sti adc cmp outsb xorl mov mov add xchg dec (bad) enter jp sbb mov ja push inc mov cltd iret jp les movsb add push cmpsb inc cmpsb clc jne adc ficom jp andb cli sarl jp mov jb inc xchg mov inc bnd js hlt aad xor push repnz xor fs sahf jb cmp mov jp xchg cmpl lods jp call inc fimul dec pop int3 std cli xlat lock stos btc mov pop adc call loop cmpsb sub add in shr mov inc cli (bad) stos cmc (bad) mov mov in clc call pop inc pop lds jle popf (bad) cltd cmp jp push daa sbb push add sub sub pop addl cltd mov or scas ja stos fs jp adc loopne (bad) in sub mov stos movsl fs fisttpl jnp and popf jp movsl pop (bad) stc arpl sbb iret add jo into subl mov dec or mov jne dec mov jbe jp xchg jnp push sbb adc jg sti dec out cmp lods jp mov inc fdivrl push cmp mov leave jmp dec mov jae adc test push sahf sbb inc jno jne shrl pop (bad) rcl jp dec (bad) cmp inc sarb mov add xchg xchg in push sahf ss push jp cmp aas mov xchg cmpsb jp jns fadds jo icebp nop lock imul das sarl xchg and push movsb ret adcl shr push sahf jge ret das pushf mov jp jle jo data16 jg dec add andl ja add aaa mov lea mov mov pushl mov cmpsl push push jp and out cmp int mov out scas jp ret mov mov jb and mov movsl xchg pop mov test ret pop pop mov mov int3 scas in jbe sbb aaa (bad) ja adc scas arpl mov leave aam xor movsb mov inc dec xchg mov jmp cmp jecxz in and mov in iret int3 inc lods mov cmp (bad) mov dec in mov popa pop sbb pop in in push adc icebp sahf xchg lret lock loopne (bad) adcl dec and sub xor mov lret mov sub outsb test push and pop push out dec and xor test xchg pushf mov or jle mov jmp fsubs es mov sbb add mov arpl call repz adc add and arpl sub sbbb and fwait dec into cmc popw and jle incl ret dec adc inc pop fucomp adc inc mov mov mov gs lea pusha push into movsl xchg pop flds or out xchg mov (bad) or mov push jae stos mov push ror js sbb mov jp jl mov rclb mov pushf sti push ficompl xlat movsb addr16 ss sub ret int3 cmpsl push push push jno repnz xchg cmpsb pop dec xor jne cmp mov out aas in mov jle xchg adc and movsl adc mov shr or outsl movsb xor cmp sti push aam lahf jnp or ja fwait mov jb mov push sti xor or into jge and (bad) push int mov arpl dec leave rcl es xchg push outsb mov (bad) in popf fstp jbe sub and int int xchg xchg in xchg aaa sti leave idivb sahf roll mov rclb add std xchg cmpl mov xchg flds out arpl cld mov add in ljmp lods mov inc (bad) jge inc pop dec pop xchg nop or pop fs mov ja pop inc jl icebp xor movl aaa stos pop fidivl leave aas iret mov (bad) std out jecxz inc xlat repz iret clc adc push cli jle mov xchg mov mulb adc xor movsl sub inc xor sbb xchg mov dec lahf aam hlt add or leave and loope push mov mov xchg mov (bad) xchg lods ja inc push fisttpl sbb add mov mov aas pop lcall push xlat inc jns adc xchg aaa jmp and push pop push and sub fisttp es mov xchg ja cmp push mov mov push arpl push addr16 adc pop inc inc test xchg aaa mov or sti into cmpsb rorl push inc mov inc faddl (bad) sti inc add cmp ret adc adc shll push ret adc cmp xchg mov stos pop (bad) jecxz jecxz pop inc (bad) mov xor sub push jmp xchg fmul (bad) ss adc jmp out and movsl fidivrl cmp jle push lods push fdivl push adc sub notl (bad) xor sbb pushf mov test lret xlat push sub dec cmp mov xchg popf imul cmp jns inc jmp mov js pop enter out push fnop xchg jmp js jge inc rcll stos ret fstpl movsl lret pop in mov divl dec sub in das push ja (bad) jl lea lods leave jecxz push stos lahf stos in out xchg push decl insb cmp xor inc xchg sub push sti fisttpl inc fisttp lds movsl add inc and out pop outsb aaa cmp out add mov (bad) mov (bad) lds cld iret push cli cli mov pop pop sti push jmp pop stc pop xchg or ja jbe call xlat jmp in add xor out lds jbe dec aam jp clc xchg push jb cmpb mov dec jp loop in mov fcoml movsb xchg pop loop sarl mov enter add lret xor inc cmp push push jo pop or imul loop fistl mov das cmp lds (bad) jne adc push nop std fwait aam jecxz fwait je ret aas je mov cmp xlat jmp ret (bad) cmp ljmp pop push xorb lcall std and jmp push ja and sti or cmpl sahf push xchg sti push pop aas repz sub and pop shr mov lret pop stos xor mov insb mov sbbl addps xor icebp pop xchg xor aas aaa add fwait ljmp inc push add sbb (bad) addl ret add mov pushl adc test inc ljmp aas pop jae xor mov jmp xchg or popa adc lret ljmp xchg rorl cmp push lret aaa xor add jecxz mov push xor mov loop fwait aas repz fs push mov dec pop add test ficoml aas je shl fucomi ficompl add pop dec dec loop push add xor xchg aad push pop (bad) rorl or jg fildl inc add jmp lret ljmp (bad) push in xchg movl or inc loop movsb sbb pop jecxz ss sti xor add aam sbb lret iret aam xor aas adc xor gs xor xor xor or aad pop inc mov mov cmp loop ss shl add push fiaddl push xor jecxz inc aaa fldt or ret add mov bnd sub inc lcall jnp and gs sub jp mov mov lcall jmp xchg push ficoml or jecxz jnp jae test fdivl push mov cli ljmp mov cmp std xchg movsb dec and adc push push jp jbe leave push pop sarl test push jecxz cmp cmp pop push lods push out cmp int cmpsl aam jne inc jae sub add fnstsw or lods push loopne imul mov jp stc sbb jno (bad) push sub pop test shll cmpsl daa xchg jae jp mov cmp jne leave inc mov mov inc lahf adc push mov mov scas pop jp (bad) insb mov outsb lret mov jle adc cmp ljmp pop xchg xchg pop fidivr cli or inc insb push fldcw ja mov lret ljmp fcomps popa xchg cmp inc mov sub mov or (bad) jne les clc adc add cld adc and push cli lcall cmpsb (bad) lock cli adc popf dec add pop jne push cmp (bad) jp int jge push repnz xchg push sbbl jl pop push repz mov and pop lods sub xlat mov jne jle scas loop push ja mov icebp dec adc xor xor lcall stc imul repnz iret lods sti xor scas or cmp fcmovb sti dec addr16 stos gs jnp mov je sti insb jl xchg dec fstps stos push mov dec sbb idivl inc jmp cmp imul xchg into loope and sub imul call cmp add cli ljmp fwait (bad) xor mov scas lcall jne fbld std orb gs or loopne or hlt insl jno sti bound aaa or movsb (bad) cmp push pop mov ljmp loope inc repz xlat lret inc and imul push stos push and inc in in ret repnz adcl add jmp mov mov inc jecxz,pn xchg cmp fistpl and push ja mov insl pushf sbb call imul loop in out sti ror cmp sub pop and data16 jae jmp ss cmp lret jmp aad imul adc xchg sbb xor dec jb xchg pop ret push insb movsl mov add fdivr push or negl (bad) lock mul adc inc scas sbb and jae (bad) push xor cmp fnsave shr mov out mov stos adc push push or push inc mov xor sub gs or lcall out in loopne (bad) cmp jae and push outsb inc lret pop add push xor mov loope xlat lret sbb push out cmp pusha lcall ds insb das outsl mov cmp out dec push jmp and cmp pop sub adc pop adc push in ret mov inc outsl jmp xorl or xchg xchg inc rorb jnp sub jne adc cmp jmp mov repnz ljmp inc dec pop and (bad) cmp or jle mov sub or (bad) int3 not stos xlat test pop ja sti mov ret test xchg popa pop fistl or (bad) rclb add push pop add xchg xor xor xor fyl2xp1 imul jne lcall pop jae sbb and loope rep and or ljmp dec pop sti dec subl stc push cli fwait push sub push lcall aam and pop addl add std dec jne cmp sbb sub cli mov inc lret add or jecxz xlat fwait and or sbb or fisubr mov les fucom fistl and xor or stc gs add jmp inc and pop adc fwait sub mov push repnz push sbb or fistl lret mov inc adc sbb insb not fisttp mov xchg adc imul fwait cli fistp (bad) and dec jmp repnz jbe adc mov jne (bad) movsl pusha lret (bad) dec imulb imul sub adc mov lret add icebp mov pop jnp mov xor ljmp testb lds sbb shll xor pop xor pop mov lcall xor inc aad sbb push lret imul dec or fistpl add ljmp jle dec push and mov sbb pop aas or (bad) xlat mov mov pop ljmp xor pop and mov mov add stc xor aas mov (bad) in les imul mov cmc test sarl mov data16 imul leave mov push fisubrl imul xchg xchg imul xor sbb aad (bad) ljmp aas mov bound sub cmp jb xchg sub mov outsl (bad) pop lret pop mov pop ror fwait push mov and or push ljmp and (bad) or mov imul repz imul cld jecxz fcomi call xor les inc add push repnz lcall and mov repz (bad) xor pusha repz iret xchg repz mov adc imul mov fwait jecxz jmp arpl in mov fcmovnbe in adc jle jnp repnz lahf jp loopne mov pusha sarb repnz scas lods aam int jae add xor push mov pop imul xchg pop pop pop ljmp hlt ja mov nop jmp lods sbb or (bad) stos push jne (bad) push data16 cli jg jp in cld mov pusha push stos jp std (bad) lahf jns pop jp pop cwtl fdivrs into jp mov fmull ljmp mov sub pop cmp jmp jp jae push pop cmp mov sbb push test roll dec jmp xchg and out or sub jno (bad) lods cmp inc or cmp sbb cmp pop jb in int fdivrl jnp dec dec and ficom inc mov lods sti inc mov sbb jp (bad) mov xor imul jp cltd fsts jp movl inc adc (bad) (bad) jle fimull std out mov fbstp lret mov or addr16 into imul cli aam sbb xor sahf push iret add adc jp hlt mov add inc xchg pop cltd push aas es push ja jne cmpsl repz mov ljmp push lret stos outsl aas cli scas imul scas xchg test mov imul das push dec aaa pop cmp repz fs push inc xor mov repz xchg ficom xor jmp push mov cmpsl repz daa fs push jae sahf xchg mov gs adc (bad) fistl xor out sub adc repnz sbb into or gs xchg (bad) xchg fs push lret xor jmp push sub push cmp add xor jmp push outsb sbb dec mov mov sti mov ljmp repz ja mov push xchg ljmp push repnz jmp push data16 xchg repz fs xchg sub pop gs fwait mov fidiv add cs fs xchg mov repz pop (bad) gs mov inc adc mov lret adc ljmp repz outsl fs out xor jmp dec divl jb (bad) aaa gs repz sbb jle push hlt gs push xor push repz fs jmp push pop aaa ja mov stos push lret notb cmp xor aaa fcomi repz imul mov push out aaa push repz jg cmpsl xor jmp push sub pop cmp cltd repz push xorl jmp push fbstp das in push divb lcall push aaa dec repz fs repz mov aaa add sub push push xchg xchg jae dec stos push popf lret gs mov xor jmp dec pop push jnp cmpsl xor jmp je ss pop lods jmp stc gs fs in sti and outsl out add inc cmc mov cmpsb xor lods outsl mov push gs fisttp mov repnz das incl push cmp fs out dec repz add xor mov lods ja xor jecxz cmc shl push mov and add xchg ja pop sub out ret jae mov pop ja gs xor ljmp pop lret and jnp gs xor jne jae imul push fs push pop xor xchg push arpl adc dec ja xchg push insl xor add hlt cltd or arpl push add push dec push gs ret push cs xchg outsl push ss repnz cmc jge jp mov out mov sub inc jp xor add jp shrb adc add xchg jae insl lret mov cli ds (bad) sbb or sti aaa mov pop inc pop call inc scas and xchg leave inc mov push jp aas push je lahf popl xchg stos lods fwait or insb jp imul dec js push jne aaa fcoml sti dec aas inc adc sti mov lock cli adc inc xchg or jg adc adc (bad) sti push bound es and fsts jmp jnp,pn je pop push push push (bad) jne out push (bad) adc (bad) imul int3 inc iret test addl ret or pushf gs mov inc cmp pop outsb xchg push mov push pusha jecxz je inc sahf jnp lea jbe cmp arpl sbb out jp and xor inc push push lea popa inc adc stc mov sub jae je dec lret daa enter sub repz cmp std cmpsl bnd cltd xlat xchg jmp mov jp mov outsl adc (bad) iret lcall jo,pn call inc dec das jmp jnp js sub xchg ja jp test or imul mov jp sub jl inc std int icebp int3 lods add sub sub inc cmpsb stc sub push jns mov pop jb adc rcrl cmp mov mov add adc sbb xchg loop xchg mov cmpl fmuls (bad) fwait in jp cmp xorb popl stos hlt jnp lret das inc movl mov jno into jnp add in ljmp mov xor xchg jbe ret jg jp dec add jns mov inc push pop test in sub lods add jns jno mov arpl jne fwait jbe xrelease cli mov mov pop jae sub jbe push jp or int3 jp jle sti mov jmp jp test push pop (bad) jp cwtl cltd jmp stos mov or std out or push inc mov and int3 cli or popf jl push loope and mov inc add xor sbb fstps cmp xchg (bad) cwtl sub in into jp mov mov jne rcrb pusha mov lret jp clc inc fimul mov xchg mov sub leave mov roll pop test bnd push mov loopne call mov or imul jp jns xlat xor cmpsb jp jno inc (bad) push mov (bad) sbb fbstp loop push push cltd clc jp aad loopne pop ret cmp jb divb dec inc jp dec aad wbinvd jecxz jne and lock aam dec sub jp xor and jp push mov adc cld jp dec hlt addl in pop pop add fidivrl sti (bad) enter cmp jmp or cmp loopne pop fldcw xor adc scas (bad) jb push inc iret jge jp dec pop fwait fs mov in xchg pop neg lock (bad) mov mov add jne jbe cmp inc cli stos and adc dec mov mov addr16 dec aaa dec dec jp add jecxz jae pop ret mov mov pop (bad) out add fwait cli jp jno imul ficoml cmp xor sarl jmp arpl add das jp dec inc xor aaa jp repz ja aad mov jle cmp add aad or xor jle jp popf mov adc dec jp or js mov and jae add sbb ficomp into lcall aas sti push mov popa xchg ficom push jnp mov or xchg stc push jns sbb mov jp xor adc nop loopne xor sub lds stos and cli cmpsb push int add mov push scas sahf pop mov movsb (bad) insl jp jle mov jae cmp lock jbe insl into and movsb gs fisttp popa jno addl dec cmp jp add sbb xchg cld mov jp cmp loop adc ret jp or iret jne add xor jp push dec fimull and jno popa ja jnp fistpl jl sbb sbb scas jp insl adc pusha lcall cmp lret pop pop push inc mov xor jp mov aam outsl stos cmp jns mov push mov sbb pop jp xor fadds mov dec add enter xor movsb cmp (bad) sarb xor movsl jo loopne das es in mov pop insb fstl fs push negl dec fwait push inc cld and xor sub inc ja pop and or (bad) je (bad) mov mov mov in xchg dec jp andb lock sbb mov cmp and jno aam push sub je pusha xchg fsubrs jp dec stos jo xchg sarb jle and les jp xchg inc popf add xlat dec jae xor adc sbb sub jp enter (bad) jno int ret nop inc ja fwait inc xor ficompl sbb add addl xchg jp push popa sbb dec stos enter fsubs int3 push jle das jge pusha jp out xlat in cs jp clc and pop mov jp insb xchg fwait mov jp push nop or clc mov fisttp std lahf repz sbb lods stos jae push int cmpsl xor imul pop or cmpsb or (bad) imul ficom popf repnz sub cmp int3 jne xchg (bad) cmc (bad) fwait cmp les (bad) jp out add mov mov cmp jp mov iret out xor mov jnp aad jp test stc popa cmp jb inc imul jne movsl iret mov (bad) cmp mov das out lds cmp popf sbb ret push pop mov jbe insl inc jmp add or mov xchg pusha out loope sarb push test mov jp imul cmpsb ds xor jp pop xlat push inc outsl cs adc add jnp dec jno dec jp lret rcrl jne movsl repz cmpl sub lret mov jp ds adc fucomp jmp lea ror jno out cmpsb sbb pusha dec mov mov call (bad) xlat rorb xor stos jno mov adc icebp jp ret (bad) dec mov sub jae fldenv addr16 push fucomi roll dec mov xchg or jp andb mov inc cli js rcl xor jmp fstpt push sarb inc divl mov push jnp mov cmpb call dec pop out rcr jp movb clc dec jp popf out lock inc daa pop sbb aad push cmp jnp jp loope mov mov xor and add push int3 push xor cmp jno mov cli in push pusha fldt pop push dec xchg loop movsb hlt jmp or xchg rcrl jp and fdiv sbb mov jno imul sbb cmc pushf lcall cmp xchg sbb jp es dec in xchg adc mov mov mov jns jo int3 mov or dec sti dec sub or sti jbe rcll inc or sar jno push mov dec xchg cli push mov mov insl cmp adc in jnp movsb adc lret pop push jp cmc inc sub sbb adc sub es cld sahf push or pop ljmp stc mov sahf xchg cld cmp jp roll loopne xor jne inc pop and addr16 insl jb movq sub pusha cli jp rcrb loopne push jno add testl jp cmp or cmp mov mov cli pop mov in je jp ljmp push imul jo into mov pop xor cmp cmp sarl daa mov push or and fnstcw loopne dec adc dec cmp aad pop adc cmp mov cmpsb jge fwait les mov sti fcmovnb jae mov ja shlb and repnz mov dec mov ficomp push test arpl add ss insb sub mov popa inc test lock mov jp arpl imul in into test add push jno scas rcr xchg xor mov jp push sbb (bad) popf adc jp jbe xchg mov xor fwait jnp inc mov mov pop ret mov and mov ljmp and cmc aas in xchg and ret sarl sbb inc (bad) pop sahf imul cmp push adc fmull (bad) push insl dec lea aaa inc mov gs fdivs xchg inc (bad) sti cli ds jmp sbb insl mov inc push je sbb rorb xlat add scas daa fucomi cmp push dec sbb pop jne add out test jl int mov fdivrs dec decl adc adc push sub sbb fildl call add test loop scas mov inc fnop stos cmpsb adc lods cmpl fidivrl cltd xchg pop dec xlat sub jae pushf jmp ss or add jne xchg sbb hlt add scas lcall insl jne or (bad) mulb mov add ja bound add push imul mov cmp push jo cmp or pushl sbb inc in repz (bad) jne (bad) (bad) lock int loop jl je andl cwtl nop jnp or jmp xlat and jp nop xor std movb xchg loope (bad) pop jno cmpl add add mov jno icebp sub (bad) push xchg jp (bad) mov add mov in add pop sarb sbb pcmpgtb mov pop mov jne xorb or push fstpt int3 out mov sbb cmp dec pop jmp adc imul test ret jp xchg movsl shll mov jnp pop insb jp jmp cs xor mov lods or jnp lcall dec cmp mov sarb ret pop mov cmp mov mov mov pop adc data16 or movsl jp pop dec lock dec test dec mov sbbb idivb xor test mov mov gs cld mov js rorb mov enter out cmpsl imul xchg jp sbbl pop imulb das cmc mov jle pop push jg insl jae pop xchg lds sub inc adc (bad) pop orl nop fnstsw dec or xor adc jp sahf xchg inc mov (bad) cltd mov mov jae inc (bad) xor cs add cmpsb es jp call jne pop xlat negb and xchg inc nop fwait hlt cli test jb lret mov xchg icebp dec add jns sbb sbb mov dec bound dec repz jp mov pusha xchg fwait jl push inc dec jp aas int3 int push insb or sub add aam sub or xchg pop pop xorl popf mov pop jp sbb test test addl rorl inc jp repz xchg lcall mov (bad) inc call push dec cwtl out test sbb adc lret lea lods test inc push jp adc inc xor inc in das mov mov inc xor mov or xchg mov xor mull test mov add stos mov lea inc mov jmp xchg out mov sbb (bad) lahf mov mov dec xchg gs jp cmpsl fnstcw ja (bad) mov mov int fsts cmp in cmp cmp scas adc and nop jnp loop sbb jno mov or sahf bound ljmp int inc xor or cmpsb add jp imul jp daa rcl mov pusha hlt pop cmp or or and lods sub mov jns add inc fbstp bound loopne push jp xor or ja adc (bad) jbe std jno mov ficompl insl jp lods mov push fwait jae jne jno sub cli jl std fdivr popa mov or pop adc das dec adc hlt dec cltd fwait cmp inc pop lcall ja jp pop jmp sbb sub in imul lock pop sbb imul ret lcall and sub lea std xor aaa stc repz idivb pop and xorl pop jge cli push leave jp insb and lods inc hlt ds jp xchg pop lret cltd mov aas repz push popa mov stos dec imul clc or mov test popf stos xchg data16 movsl push gs mov mov inc add in dec aam xchg pop jnp mov out data16 out jne xor pusha repnz jp xchg mov daa pop adc push push jno lret jp cmpsl movsb fnstsw (bad) lea pop pushl adc xlat sbb loope cli jmp fildl hlt dec xchg add out jnp mov sbb dec sub inc mov mov leave lods (bad) imul inc push aaa inc (bad) int3 jp gs or cmp xchg aad pop call jno shrl in push jmp pop lock loope cs xchg imul (bad) enter scas push stos jp xchg jmp stos ja sub and imull out test das sti lods jae (bad) dec and jg fldenv mov jmp jo jno fwait jp in (bad) jne pop sub sbb sti jl cmc xchg fnstsw scas fwait sahf push and sbb pop and xchg imul xor ja pop push jp jge sbb test in dec mov aad ret cmp aam popa rcrb clc mov jp or xor shrl jp aas jno aam lds mov lret test push leave call mov xor or stc inc mov fistpll sbbb jge jp sub mov sbb in inc or cwtl jp mov in jecxz or inc call repz inc (bad) (bad) clc push push inc jp pop jne ss lret dec (bad) jae xor add jp addr16 mov sti out popf mov mov jb mov repnz xlat pop loopne lret add mov mov xchg push pop adc loopne and lret jnp or jp cmpsl (bad) jae (bad) pop mov fwait pop es sub idiv push lahf daa push imul cmc jecxz adc cmp push push pusha fldt or aaa rol jp in ss sbb lret and jnp push fist ds arpl aas mov outsl cli cmp mov outsb sbb icebp inc std add push dec imul rcll mov or xchg aas pop addr16 jnp and push xchg aas sbb pop dec pop jnp add jno push lahf in mov xchg pop popf pop (bad) je ss jo jl xchg in jno cmp loop lds psubsb movsl cmp jp enter jns gs rorl jp mov inc (bad) loope jp pop or push int (bad) jp roll fcoms or push mov push jmp sbb add insl lcall pop fwait sub cld jp pop push xchg (bad) ljmp insl or jno push scas pop inc jns cmp cli sbb adc in ljmp rol insb imul mov mov sbb gs inc add jp fldl lahf and popf fcompl enter aam xor add mov mov dec jp ljmp inc or in mov pop add cmc push aas pop jns jp xlat jae (bad) pop adc adc mov out das mov popf push jbe rcr inc pop or jae cmp pop jp mov sub jp or fwait mov cwtl sti jp mov lret dec mov mov cmc add jp or inc sbb inc pop (bad) mov test push or mov push jns inc jb out sbb jp (bad) sub pop pop lahf gs jb push repnz ss jp outsb inc dec gs in jp stos mov jp mov imul mov cli js sti ficomp jg jne test bound lea jge dec popf (bad) pop jb rorb add lret sbb out orb cmp mov push fidiv jp cmpsl push in icebp jecxz cmp cmp ljmp test ja test mov fidivr add lds xor lret mov sbb inc or mov cs cld subb adc xor xor cs lods outsl push cmp out rcl jne jnp jno jp cltd lock pop mov adcl xchg dec and in (bad) dec jp cmpl pop sub push mov stc cmp jp das cs mov sarl loop mov or movsl push (bad) jb mov push mov jno sbb lea cmp insl popf mov dec pop movsb dec sbb or jno pop cmp xchg cmp cmp jmp pop stc xorl shll jnp xchg bound mov mov xchg jp mov aad jp adc shlb cmp xchg pop jp rclb xor call arpl sahf cltd es sbb jo xor push adc cli (bad) enter lods les fs test ljmp xchg xor shrl cmp mov mov (bad) push or jp xchg mov mov push jb outsb xchg push pushf jle jae jp sub push loop jne mov xor fidivrl lea xor push or and dec pop and bnd int3 push push mov jp out das cmpsl dec or xchg fstpl mov es jp xor test pushl popl cmc cmp jmp cmpl ret lea es or xchg cmp dec push cmpsb mov outsb inc pop mov int3 das hlt pop and jb adc add (bad) aas decl pop mov jbe mov shr mov fidivrl mov cmp jge push (bad) xor adc insb aas xchg mov daa cmpl sbb xor sbb mov mov dec pop dec ja sub scas or jecxz jno sahf add add out mov (bad) and pop mov mov mov adc xchg push push stc xchg jno mov jbe mov rolb pop pop and repz mov adc push or push xchg dec ret add mov xchg inc jl and int aas adcb jmp sub jmp daa (bad) outsl loope xchg sub xor xchg aam mov scas dec out dec and and ljmp flds cltd cmpsb test cmp loopne mov jbe subb mov xchg cmpsl test sub into imul adc movl adc xor cmp inc sbb dec mov cmp lock mov pop cmc xor jp pushf add dec push sub mov cmp inc rcrl enter xor fs jne aam xor ror aas clc aam mov jmp call (bad) ds xchg leave fild (bad) mov mov add cmp xlat cmp outsl out les aam sub cld lods mov pop (bad) sbb pop insb add lret inc (bad) repnz inc pop (bad) sti cmp and scas mov jge pop inc cltd xor xchg rcrl test cmpl sahf cmp sub fs shrl fldt imul ret lret mov ret lods insb mov mov je enter insl icebp rolb mov xor and movsb incl pop out ret aam sub std or cmpsw push mov mov call jmp jbe pop mov imul outsb mov aad cwtl daa cmp cmp xchg dec or movsl (bad) mov test lea popf and jmp out mov shrb call shll (bad) mov inc push test cld mov mov cltd fldenv pushf shr test push pop outsl xor clc lret scas repz adc inc xchg out mov cmp mov push mov inc cmp jl test (bad) roll out xbegin pop mov pushf movw call mov movl pushl push pushf lea jmp jg cltd outsb jno mov mov mov jae imul jg loop mov jno test jge mov dec sub and mov adc cmp sahf loope xchg xchg fidivl out add and lahf lahf mov sbb arpl cmc aas mov pop or xor dec adc loope jp push and gs mov aas jo jnp push xor lcall cld jb bound jge cmp pop test fwait and cmp jae add pop lahf je sub movsb fwait and mov xor push test cwtl sbb dec adc cmp cmpb lds stc inc mov xchg sbbb pop xchg out add mov scas push stos or mov sub mov inc xchg mov fisubrl stos mov (bad) leave jb dec adc aam xchg adc fisubrl imul dec sbb inc pop movsl pusha push imul sbb sahf and (bad) push or push popf (bad) mov sahf cmp ret add std pusha pushf lea jmp push pusha movb lea jmp pushf test cmp push lea ja cmc bt clc imul pushf add push pusha pushf lea jmp jnp (bad) lret data16 cmp mov and fwait and sub pop xchg outsl mov or leave ja jg jg (bad) fsub sub fs addr16 inc aaa sub mov jge mov movsl aad mov jp fstps mov je test in ds adc lcall (bad) scas mov push sub jp dec lock jbe jecxz inc cmp jne pop mov xchg push pop and adc push std mov adc or scas clc push or lock ljmpw sub and shrb sbb lcall leave push js (bad) scas hlt lret stc or stc or popf repz lock aaa (bad) (bad) inc cmc lret les popf (bad) mov out mov sub xchg lods scas lock and add hlt (bad) cld mov dec je mov inc arpl lea shl into (bad) ja pop jae or jp xchg scas mov mov into out mov adc fisttpll inc mov sbb cs xor adc or frndint ds (bad) dec pop int3 jecxz fisub push das jecxz sub cmp lds addr16 or lods add mov out mov ret aas aas into xor mov cmpsb sbb call sbb neg push not cmc pushf mov ror cmp pushf movl pushf sub jmp push or sbb sub xor xchg dec mov out ja mov sub insb adc call xchg adc sti adc pop aaa shrl jg mov mov mov leave inc mov push jg xchg faddl pop es xor and stos ror ss mov into pop push mov imul lahf push mov mov lret popf add jo xor pop pushf xchg clc jo outsl das rorl xor dec stc sub or mov or dec sahf inc sar scas sbb jecxz outsl cld (bad) lret mov nop xchg test (bad) sub sbb fisubl push mov jg mov ret and xchg ror scas pop call add jmp lret mov mov jno fwait and xchg lea ja push bt add clc test or pusha lea je cmp pusha test cmp jmp scas addl sarb mov sub jecxz mov adc mov das adc jmp stos xchg popa movsb add dec adc inc sbb jb stc mov add mov (bad) push test sahf loope mov xchg cmpsb fdiv sub dec mov fwait outsl and xor and iret xor push sub cs lds mov iret dec jb inc jne jl dec pop jg mov lcall into shlb test mov mov push fcompl clc mov or and sti xchg outsl ds imul sbb in lret and cmp es lret jae push pop cmp popf scas lock fild and out jo dec out push mov cli and js imul jno lcall and ja lea pop movzbw xchg pop mov pushf mov not pusha bswap movzbw mov push mov bswap call pusha lea jne jmp sub inc jp push push movsl xchg fxch xlat push repnz lds gs insl inc lds or in dec mov or outsl in (bad) addr16 cltd fs negl sub cmc loopne out and nop push out mov adc adc dec add xchg mov test sbb or mov in xchg push mov cmp and adc in cs add add sub xor sbb iret mov xchg mov mov dec dec xchg js xor jl imul jl mov cld rorb nop scas inc (bad) mov in in sbb jns mov roll or ret add sub push jno cltd mov jg xor add mov rcrl xchg sub xchg mov in inc pop push fcomip mov faddl or jno test pop imulb jl mov test into pop push cmp stos xchg xchg mov cmp or addr16 iret lock roll xchg daa mov inc in xor cmp insb and ds out das sbb adc clc push and xor and xor sbb leave imulb xchg sub mov xor cmpsl cwtl fwait les sbb and lds (bad) int3 and and ret sti leave or sahf inc mov popa pop lds cmp cmp push stos inc lret sub mov mov fsubs test xor outsb jno cwtl popl (bad) (bad) inc and xchg lret pushf mov call hlt (bad) xor bound push push enter test adc (bad) repnz xor adc pop outsb xchg and or sahf roll and ds (bad) push sbb mov jle jne cmp imul addr16 scas iret adc xor pop sar xchg outsb call jmp push fild mov cmp inc inc or dec outsb scas dec nop cltd (bad) arpl loop adc add aaa dec jle les jne leave mov fisttpl and dec xchg imul call mov xchg lds xchg cmp fwait arpl inc js cmp add dec ss add mov pop adc cmpl mov adc test jo fsubl xor pop mov push dec push pop out je int3 movsl xchg mov cli rcr add adc repz sbb add adc mov incl mov ljmp mov push xchg outsb xchg dec incb cmp in mov add cli cmp enter gs sbb jns adc call subl lods jmp ss sbb sub mov pop icebp outsb movq pop insl jno xchg cmpsl call add or inc and jle mov pushf lea jmp pop adc and adc mov ljmp sub outsl xor xor add push push push mov push jp mov dec adc out cmc lret push pop push jno or arpl daa xor aas cmp loop xchg lods xor sub ret in inc inc push rol lea popa out sbb inc ds incb xor xor aaa xchg insl icebp xor movsl std loop xchg jnp mov jbe mov mov sub testb mov sub mov scas push clc inc or fldcw div sub fldcw jno xchg fidivl sub int3 repnz dec in cwtl data16 and (bad) das nop packuswb (bad) dec inc jp mov mov sub lock fs rcrl and sbb jp decb cld pusha out aad push jno jne mov pop data16 cmpsb out mov mov adc ror fild jne inc xor in add (bad) sbb adc test jb fimul out mov dec jno cmpsw pop loope dec push into sbb fimul stos jae mov (bad) outsl adc repz add pop inc mov ret scas iret scas lret xchg jbe xor jo jno xchg jl testl sbbl mov out and int3 adc out jmp or dec jecxz scas scas mov fsub and or mov cmc mov clc mov sbbl divb dec pop stc push cmp lods push loop lock add in mov jecxz sbb and out sub sbb inc xor imul iret (bad) idiv inc sub jecxz mov fmull addr16 (bad) or mov shrb fldl push inc (bad) and outsb push push movl (bad) cwtl out sbb cmc shr mov pop pop jnp js pop xchg pushf repz push ret daa mov sub movsb mov out (bad) jo xchg testl mul cmp adc xchg push mov mov dec adc lret imul aam sarl mov js lods ja add notl jmp xor lods adc gs stc mov lods jmp lret imull pop stc out adc sub mov mov repz (bad) cmp das rorb sub fs repnz mov mov mov scas mov jno xchg jge out bt and cmc pusha add pushl pusha push pushf lea jmp aad xor je pop adc fs jae pusha arpl loop cli stos jmp lock cmp push cmp das and sub pusha xchg jo jno dec std mov out mov repnz mov and pop ret xchg fcmovnbe loopne arpl xlat stos mov jo repnz repz jmp (bad) stc jo clc iret dec push adc pusha lcall and pop or pop leave pop jecxz dec mov fcmovnbe dec dec aad dec (bad) xor xlat inc push stos mov subl mov pop xchg or and and ds insb dec jne aad fbstp dec leave mov arpl sti insl aad js insb cli xchg add aaa pop out imul cli cltd adc daa mov std stos inc hlt js mov xlat (bad) fistl aaa cmc pop cmp or stos pop jnp jnp out dec in lea faddl in mov xor inc xor cmp pop js cli xlat pop cld idiv xchg mov xchg fildl inc shlb iret jae aaa adc aad imul cmp arpl int pop dec pop fildl ficomp out jp pusha outsl and push aad cmpsb call pop addr16 aaa clc (bad) repz sbb dec cld les push out aad mov or sub pop fwait jno inc scas arpl xchg gs fs fucomi sub adc repnz push push inc pop aad push dec pop and fs sub mov outsl cmp sub push ds ljmp jno pusha xor pop rolb aad sar xlat xor stos sbb aaa mov push cmp mov dec push jno lods pop cmp ljmp push outsb stos push aas int leave add dec adc pop stos cli in pop mov jle xor bound dec xchg fstl ret and ret jb jnp imul jo repnz adc rep sarb lahf push in push jne cli pop jb testl cmp repz mov push pop xchg punpckhdq jbe and adc jecxz es clc test cmp test mov pop fldt or cmc sti ljmp lret movsl (bad) xlat and and out inc les lret mov shll in mulb fcmovne pop mov in sub sub mov in jmp mov jbe test popf sbb movb jmp cmp icebp mov pop repnz adcl and insl into lds jno jne xor jnp call outsb mov xchg mov aas mov lret shll leave out sub jae or and cli jmp lret arpl test test leave iret bswap mov sbb lock stos ss push repz test xor xor pop push jbe or mov je arpl sub aad repnz ja mov data16 jbe pop add in xor rorb xlat cwtl add pop ljmp adc stos ficompl lret push fwait stos aad xchg push jge test in iret sub imull sbb bound mov repz stos jmp sub push rorb pusha out stos lea mov dec and xor mov pop push xor scas scas (bad) pop ljmp inc cmp and push mov inc popa push jmp mov lret mov inc das outsb mov inc imul jne pop jae iret jecxz in gs push pusha xchg movsl enter add inc pop push cmc sbb in push sahf pop push dec push jg mov imul adc bound jb insb xchg pop je or dec lcall imul add call sbb int mov push push adc sbb cmp dec ds sub push movsl cmpsb arpl aas add ljmp pop mov inc push push or sub adc or mov repz (bad) lret pop cmp mulb (bad) mov pop test pop arpl push fildl rclb inc push dec sub pop repz hlt dec push fistl xor testb (bad) cli pop stc fldt gs xlat or cmp aad das mov hlt jp scas jo outsl pop adc lret mov jne cmp inc loop jae sub mov (bad) jmp sub add lds mov cmpsl addr16 add add js stos roll mov jmp xchg bound and add bound push ja icebp jb cli pop (bad) push push and xchg loope adc imul fptan fistl daa xor popf (bad) hlt adc aaa data16 lahf adc cmc out fisttpl push lds fs insb decl fist fsts ror outsb and in stos ficoml or xlat outsb adc jne mov aaa add aaa mov icebp mov or mov js jmp sbb and mov daa icebp pop jb jmp sub js rclb repz insl (bad) rolb cmpsb stos mov xor int into mov in xchg mov ljmp daa or pop (bad) ljmp or inc sarl (bad) adc daa pop xor data16 mov add mov lea jno jae mov fwait je test xchg jge gs mov dec movsb incl sub pop notl pusha jb sub imul jge repnz aaa stos cmp imul fcmovnb jg mov jno out test stos mov in call jne stc and push stos dec mov pop sub ljmp iret stos mov cs jns insl adc add stos pop ss fs stos rcrl sub push mov mov jle cs push dec mov pusha dec or sbb lds adc mov bound sub jecxz aaa jmp pusha pop (bad) leave mov jmp dec inc pop cli mov in aaa jmp jecxz fisttpl out loope icebp outsb jne data16 cwtl ffreep sub inc dec sbb pop inc js sbb imul arpl notl adc movsb mov pop and mov imul outsl sti jb lea cmp sbb mov pusha aad pop notl jnp pop push ljmp inc in mov cmp jne jo sbb imul int push mov or cmp cmp xlat stos out add jae jae leave cli add cs push xchg jno dec lock xchg adc int mov inc push (bad) cmp aaa sarl shll iret push arpl jae js sar lret sbbl stos pop mov jle int3 add push mov jg,pt and jns lods mov ret std pop adc jno stc inc fsts (bad) jae push pop pop ret stos push push scas (bad) movsl (bad) lret jl xor jno mov rorb xor push aaa inc pop add in (bad) ja cmp cmp pusha dec call adc inc fistl frstor push inc pop sub sub pop stos out xor inc pop aaa push push adc shll in pop cmpl jg jae iret xchg aam loopne lret add iret ljmp aam mov jmp xor cs push push out lcall mov fldt adc outsl push enter inc shl sub fwait xchg xor mov mov imulb push xor xlat sub jno cmp mov movsb xchg adc addr16 das insb push jae imul and fwait pop testb ficoml push imul cmp inc lds push pusha jle pop pop int mov sarl xlat cltd daa ljmp daa in ret scas push xlat in jge add mov cmp rcrl testl sub andl or xlat xchg pop ss (bad) inc in arpl push sub add sub es dec and or mov test jle mov push stos pop aas sbb xor (bad) shrl mov (bad) movsl js xor stos and adc sub test sbb sbb test negb shll aaa in jge dec push jne mov adc mov cmc pop (bad) gs adc pushf aaa ljmp mov cmc jnp jne dec pusha jmp jnp sub (bad) hlt jmp imul addl outsb shll add jmp mov fildl mov mov inc imul sub mov jne daa add ja cmp gs aad fisub neg mov bound aad xchg (bad) lret push iret and fdivl addr16 lock mov jbe pop stos or in outsl jbe cmp sbb adc fidivl and imul dec dec pop push test ret dec push mov add mov sbb and fistl adc or pop xchg gs ljmp mov jno push fwait inc push (bad) repz std sti push in pop xchg leave or xor fwait sbb out aam insl lret jmp push jmp or xor push aad jnp stos int3 and xor sub out push in cmp ja dec sub adc jmp sbb xchg pop testb push pop sub unpckhps int (bad) aaa sbb (bad) jb jg addr16 je pop push hlt sub negb ds push inc jp adc mov adc mov jo pop push loop add mov shrb jo pusha popa gs mov call fs js mov fldt push pop cmp sbb stos mov lods sbb lret addr16 push nop rclb outsl pop push xchg out dec clc mov out add aam xor cmp clc jecxz mov jno out mov (bad) sub cmc fs xchg cs (bad) dec lahf popa iret imul cmp into (bad) out xlat hlt jns shr jne sbbl ret lea adc push mov pop repnz shll cmp loope aad mov jne scas sbb in mov inc cli jo insl aaa sbb cld ret clc (bad) dec mov dec roll add dec test cmpsl fwait dec pusha add neg cmc jle ja stc sti jmp out push lods (bad) mov mov pusha pop gs test leave call mov add add testb es xor adc fsubs mov push push pop cmc popa pop rorb adc or leave fiadd jle cmp jo mov cmpsl leave aaa mov dec test jno xchg fs cli cmp pop loopne jb add push push pop in aad push fs and jno adc push adc pop stos adc adc ss sbb loopne punpckldq add inc outsl aas scas ret imul gs (bad) lret scas cmp out rcll sbb push mov out mov pop gs push pop mov sbbl inc imul punpcklbw cmc (bad) idivl inc push stos xor aaa fs mov das adc int3 lea roll xor push das ficom loopne test mov in je mov and mov cli pop jb ljmp notl mov and in sti push add adc imul (bad) aam enter pusha in test mov push dec xchg xchg (bad) mov rclb pusha call lahf pop pop dec push in sub push or or nop adc in mov jnp add jnp aad imul iret dec stos fildl nop mov mov pop and pop push push jne push lcall jl dec pushf aad sub add lret sub push aad jno (bad) in lret test addr16 (bad) pop data16 adc (bad) lret xor push inc out or push stos aaa push out push jl and jge ret xchg cmp movsl dec (bad) insl (bad) jbe inc out insl push mov daa cmovge jmp jp dec int iret sbb leave sub jno sub or mov xchg fdivrs cmc aad mov divl sbb xchg in lock in sub fs aad pop cmp leave cmpsl jne cmp fwait test pop imul cmc (bad) sub pop mov stos lods xchg mov idivl push mov xor dec and js (bad) loopne test xchg inc aaa fdivrl jb inc mov push js shr cmp push pusha outsl sub sbb stos (bad) divb out ss pop xlat xchg mov popf or outsb mull sar and gs jno pop xchg sub leave iret mov and and push jb cmp sti jne ret fs pop xchg jp je or fwait add cmpsl ja aam and dec mov test dec (bad) push sar mov loopne xchg push add sbb push sub xor sbb dec jb xchg jbe ss int das xor pop and jmp clc adc dec mov loopne sti cli les push shr imul or ret add ja jns pop push pop jmp fstps fwait in adc leave jmp imul fs dec sahf in fs lss cmp shll out xor and call out sbb lcall xor cli mov pop xor adc pop jmp cwtl outsl mov ja sbb pop xlat repnz jae shrb mov dec lcall gs push sub cmpsl or faddl or pop int aad push push cli xor xlat sbb imul sub gs push add jmp std xor mov out pop popl or roll ja std aas mov mov and xorb jne sahf pop fs in (bad) mov sub sbb jae movsl icebp ja or rorl xor jae and scas xchg sub mov int3 cmpl insl lret hlt mov imul mov push cmp lock inc push lods dec mov add xchg push addr16 sbb inc outsb xchg subl xlat dec sbb fbstp pop mov pop push jne dec adc mov stos pushf js,pt sbb jmp ret jns daa mov out mov rolb roll lret mov xchg in push js sub cmp (bad) and leave sbb dec out shr movsb xchg in mov push mov in lahf sub jae add pop fnstenv mov jg and mov stos xchg lret mov pop sub cwtl lcall sahf pop div mov mov push pop (bad) lret and sub sbb mov xor repz jnp cmpsb add in imul sub leave stos fldcw (bad) inc repz imul push or repz or push push or mov mov sti jg in jne call pop sahf fisubrl aaa inc lcall cmp popf sub repz pcmpgtb ja push xor push dec dec mov inc dec lds cli jae push call test mov cmp mov inc enter lret bound std cltd ffree pop mov inc xchg stos push insb jp jecxz rcrl sub cs xlat outsb andl fs push scas ja daa adc outsb sbb pop ljmp xchg (bad) aad data16 cmp fwait xor inc cmp sub and xchg cmp jg sbb sub xchg movsb jmp iret daa pop add dec stos notb inc add xchg mov push lahf sbb jne jmp sbb sbb out out jecxz test imul jae std shr jno mov sub fucomi mov pop (bad) sbb fildl js inc stos in jle test mov cmpsl out sbb xchg addr16 inc ds sub jmp pop mov (bad) shll repz fldenv dec popf push icebp popa stos clc xor cld inc cld mov incb andl and lods in jmp add xchg mov call aam and push add hlt jle xchg adc mov jae addl mov loope (bad) stos pop push cmpsb mov rcrl fstpt jmp int imul lea stos fidivl mov mov in (bad) jbe lahf ljmp xlat iret inc das idiv repz inc cltd mov pop cmp xor stos lcall mov push fdivl dec mov dec ret push je (bad) jge mov xor mov repz not and imul stos aaa outsb stos hlt pop xor outsb sbb push call jae aaa sahf fucomi loopne and push pusha sub stos jnp loopne int3 repz mov imul dec pop in in mov pop jbe mov inc xor fldt imul aad imul outsl push sbb loope mov pop mov jne push add dec mov lock lea mov cli push add cmp adcb pop mov pop mov push arpl das in mov lahf sbb pop gs dec push mov xchg imul or or dec pop push dec in sub mov dec sbb imul xchg sub aam adc stos js or arpl pop imul mov pusha mov pop fisttpl test push aaa bound js outsl leave push cmp mov add mov lcall inc hlt pusha dec or push pop icebp ds or movsb addr16 gs xchg jmp xchg jae pop jb or sub outsl mov sbb xor (bad) fcoms stos pushf out pop and sub ds cwtl je iret ja add lea stos (bad) cmp out inc sub lock sub sub daa out pop xor aad xor inc fs repz stos into sub cmp jl dec cmp inc aad mov sub ljmp shrb repz push mov stos jb mov aaa inc and fistl test cmp int3 sub xor std ror je jno dec (bad) sti dec test into push aas sti jne repz mulb ja mov repz cs pop andl mov insl or and cmp dec rcrl lret (bad) xor pop iret xlat aad lods mov gs sub repnz xchg sub push ds mov pusha aaa pop mov xchg imul es out imul cmp push int3 pop int3 adc and adc jecxz xchg pushf xchg shl lock gs pop pop (bad) push jae,pt stos add ljmp sub popa stos mov mov adc xorl mov jg arpl nop jmp sti ljmp imul (bad) xor int inc insl pop sbbl imul xchg fldcw setp mov lods pop sub lods pop push clc xchg push mov push (bad) mov inc stc popa xor jb cmp push (bad) push stos adc pop sbb insl ror dec call and addb clc (bad) or lret pop (bad) xor repnz ljmp adc fs push adc jns jl sti add stos cmp xor lret aam into xor (bad) imul pop push repnz lods ljmp xchg lds xchg sbb mov xor push push stos mov and cmp outsl xor sbb adc or mov inc jmp outsl mov push leave pusha std add xchg push jb sub xor pop push mov pop gs jb stos insb pushf imul rol (bad) nop sbb loope hlt iret jecxz in sub push in loope pop repz aad mov dec push aas fcom in in cmp les push out push imul sub in xor dec pusha push stc pop mov mov sbb loope sub pusha lcall push pop gs sbb pop out xchg jmp fistp pop stos stos fnstenv and jle mov sub or pop mov inc or pusha add jbe fistpll pop je,pt loope insl imul imul xlat std arpl out fwait stos aam sub add pop sbb leave pop jne sub inc pushf mov mov popf push test test arpl push push or cmp cld inc cli repnz dec ljmp xor xchg stos sarl mov insl sti adc in xlat inc or std push stos roll arpl leave push movsb cmp cltd arpl xor xchg imul lahf pop test movsl loopne iret repnz adc and mov jge ror stos sub movsb mov xor adc movsb movsb or xchg inc fldenv inc dec mov jmp movsb das cltd jbe je xor push add cwtl pushf aaa jle xor or aad daa stos outsl or sti mov aad adc pop dec or jb push iret jecxz lds xchg imull mov pop mov add xlat mov adc xor iret xlat dec data16 std jne stos fbld div icebp sub sub or push push pop rcr scas daa fs cmp inc mov cmc pop xor int3 ja cs bound push aad xor mov das xchg popa adc xor js leave outsl movsb cmc rcl or push xchg sbb mov roll mov imul stos test pop fist mov pop je sbb and jle scas sub mov cmpsl insl adc pop adc popf aaa jmp stos gs insl inc cmp push lea mov sti push pop push sti mov (bad) imul pop mov xor adcl and dec out roll inc faddl out (bad) cltd andnps out cmc (bad) xchg add pop aad sysexit or iret sbb xchg divl ficoml inc test divl fwait jae cwtl or ror std mov repnz mov fwait or and mov jbe mov aaa fwait ja xchg xlat xchg imul jnp adc mov adc dec shrl mov test pop and das xlat lock or sbb push (bad) inc pop call inc scas mov mov fisttpl push jns mov and lds loop pop sbb inc dec loopne fiaddl in js stos mov out roll xor jecxz pop cli shll and jnp sbb xor cld cmp pusha call bound out mov (bad) xlat je lahf pop scas adc inc out sbb insl stos xchg push and jno dec lods scas (bad) push jbe cmp xor (bad) pusha pop sbb jo addr16 mov adc nop call dec and dec and mov fwait aam xor xchg lcall mov insl shr test movsb test jae cld cmpsb push xchg aad lret sbb pop sub mov mov sbbb and and xlat cvtps2pd es pop popa (bad) call imul aaa push dec negb arpl daa stos je jb dec xor push sahf dec sub and add mov jne sbb jno stos xor imul rorl sarl enter jl test jg out push add xchg add sub (bad) adc test or mov insl outsb pop inc add mov jle jns and stos aad push arpl imul sti (bad) int3 fwait arpl dec adc push pop std or pop push sub fisubrl nop mov dec cmpsb pusha push sti pop stos jns pop stos pusha xor and xor popf stos iret mov pusha lret mov ss sti cmovle add jmp inc nop sbb fs sbb ljmp cmpsl bound add add xlat sub fildll imul pop pop xchg xchg jecxz adc cmp out sbb (bad) jae mov jg pop leave je push and dec adc push and (bad) ss mov cmpsb stc mull push dec out movsl inc pop push (bad) jbe add inc stos ret jge xor das loopne imull loop xor cltd mov push stos jb adc mov add pop stos adc xchg fs xor ficoml push fsubl push inc inc pop and mov push leave (bad) xchg mov inc mov ret sbb pop dec jle jmp inc adc enter cmp cmp mov adc mov xchg pop dec psllq out xor mov push stos hlt das pop dec xor sbb pusha (bad) and notb fld xchg popa jl aaa xchg push into stos mov mov mov cmc jmp push cmp addr16 push stos mov pop add pop insl mov lret add dec bound adc xor out jb jne ret adcb sub push test imul jb loopne lret cmp or ret enter inc cltd ret xchg out add insl jmp stos clc outsb pop dec cmpsb movsl shr (bad) jae fs iret iret adc and add std bound out out mov xchg or jno sbb movb push call mov adc jne adc movsb cmp jmp cmc bound inc add fcmovnu fsubrl or (bad) in inc mov imul int dec xor sub ds and cs ret lds arpl iret add daa loopne sbb es push repz lcall jmp jae mov push stos popf data16 jbe ss shrl mov sbb add arpl mov aaa adc xchg jae (bad) push or cs adc mov inc aas xchg jp jo jb sub cmp jge cmp lea push in cmp test jp adc pusha int3 and ja pop push add dec cmc push divl pushl aas sbb arpl fcomps dec add jnp aas arpl pop inc add divb and mov inc fldenv pusha cmpsb mov sbbl and cmpsl push adc push jp ljmp sbb imul hlt js sahf pop lea leave std cmc cs pop push out hlt test (bad) xor add adc (bad) xchg les ja out pop cmp xor lea or loopne test outsl arpl imul movsb popf sahf push cld inc adc mov les popa jns fs repz stos lcall xor inc ljmp mov imul repnz ror pusha mov fsubs fcmovb xchg and push cmp sbb into icebp mov mov push test es push pop inc insb mov sbbl mov test cmp fsubr xor pop out imul mov dec in mov sub jne ja sub xchg jecxz sbb add movsb fcomip push dec outsl mov mov jg jbe dec lock arpl jg sub xor (bad) enter ss mov mov dec pop int3 popa hlt push push pusha push jo dec lahf ds xchg enter fwait insl stos mov xchg js add cmp cltd mov pop bound je push dec pusha shrl ljmp fcoml push mov adc push cmp out adc lahf fadd ja mov xor add fs fwait add pop inc les mov stos jno enter xor jmp mov stos pop shrb cmp mov js rclb cmp jne fwait mov pop lea loopne dec jg mov mov stos shll ror sub lcall popf dec jno fldenv movsl jmp hlt movsb sbb outsl popf inc ss ja xor push sbb inc lods (bad) sbb xor jnp (bad) cmovns adc push or mov xlat fildl aad mov sbb imul pop rcrl or xchg int andb dec subl push xchg jecxz mov cmp (bad) push sub hlt and pop bound xor jae and lods dec sti ret add popa dec inc pop shlb push stos and cmp (bad) loope nop mov (bad) notb cmp push xor pop push sti fnstenv jnp xor cli push mov mov and es mov jge ss fsubr fisttpl imul add push out cli mov mov xchg loop (bad) sub insl xor cmp adc arpl lea in sbb outsl cmpsb push jne pushf (bad) add addr16 insb addr16 sub push pop cld xchg test arpl and repnz stos adcl mov ljmp hlt xchg les cmp sbb loope addr16 add (bad) loope and cmp out cmp add outsl jb jne dec ret adc adc pop mov pop pop mov mov adc (bad) xor push data16 dec xchg lods fcmovbe push sub out aaa (bad) jae (bad) leave adc sbb repnz xlat xor loop jecxz arpl xchg mov inc cmp test stos jo adc jo ja sub cmpsb push divl shr jno addr16 (bad) sbb fisttpl jb fwait insl mov mov dec shll mov pop push sub and sbb fs daa nop add or add mov clc mov mov (bad) sbb aad push push inc mov (bad) je insl push push iret or cmpsb or ret sub data16 mov addr16 jnp ret nop inc (bad) std or into push mov orl sbb push hlt and jno insl and outsb lock into cmovno jae sbb adc out in in or stos (bad) je jg cmpsl aas pusha fdivp sub push jg xlat rcrl aaa adc in or jnp xchg xlat (bad) imul icebp jb and enter popa gs jbe push mov out aaa push cmpsb jbe sub sub mov orb cmp scas dec adc mov imul scas outsb loope mov pop subl fidivrl nop mov mov sti cmp int scas inc inc or fildl mov imul lock sub dec cmp push mov jmp arpl adc in push leave add jae and pop mov test push xor cmp cli lret pop xor sub psubd call repz push lcall out push sbb push std movsl lods xchg dec sub push test dec popf xchg push dec add sub ds orps jmp jae mov lds out xor shrl add mov mov cwtl xchg (bad) add ss out xor push sub and jmp jne negb test out das pusha hlt lds int hlt sbb fnsave out nop mov mov stos lcall shrb pop int mov fidivrl sarb jg gs ja jno jae gs test pop out (bad) outsl inc (bad) movsb mov push pop mov (bad) xor jle popa inc push (bad) (bad) pop js adc sar push frstor sub call mov in outsl xor mov lahf push fnstcw hlt mov inc in mov loopne xor jmp mov out jae add pop or mov fcmovnu adc jnp test sbb cmp adc jmp daa (bad) setb (bad) ja sub movsb mull mov jae fwait (bad) mov adc xchg pop push jo ds xor xchg jne push dec insb ficompl les lods mov notb and pop pop test lahf mov notb outsb movsb loopne or jp imul push movsb xchg sub push fisttpl imul xchg push or fcmovbe adc inc pop out mov and enter scas les mov fistpl notb cmp fs pop mov push aaa cmc adc imul xchg push iret loope outsb enter push movsb mov xor lret ljmp pop fs shrb pop stos adc adc ljmp cli push lock inc jne pusha out (bad) mov stos insl rclb push or scas je xor jae (bad) sahf jle insb hlt mov adc jnp fcmove jl mov ja push jecxz cmp shrl push movsb repz cltd sbb iret aam jne je xor fldenv push hlt cmc xchg idivl (bad) jne pop sub stos std je test push (bad) jb and jae cli idivb stos mull aaa lods out cmc xor dec mov cmp pop sti movsb push insl sbb aam aam lock sub fdivs in jnp xor (bad) daa test pushf dec mov stos ret (bad) push fildl pop inc lds aas mov adc ficoml das cmc cmp mov mov (bad) dec imull jbe jmp push (bad) cli pusha mov int3 jp sarl xor and int cmp mov dec fs xor push push ss cli sub dec stos dec lods cmpsl adc loopne sti mov fdivl and fsubrs mov add in ja xchg ja gs imul stos mov mov dec and add xor and fimul insl cmpsb fdivrs mov inc dec movsl or mov fistp push imulb (bad) aaa mov sbb mov shlb (bad) fwait out (bad) jmp iret xchg mov stc sub sbb dec stos cmp and outsl cli add in xchg out cli nop fsubrl ret pop lret iret (bad) mov pop xlat (bad) sti int xchg sti jne dec insb xchg and dec jbe bound arpl xchg and aas jl stc fist mov mov jp in jmp test jb mov and lahf pushf sti loope scas dec dec pop (bad) jne unpckhps stos jmp mov scas sbb arpl cmp out ja insb lock mov lret stos inc (bad) test int3 pop iret or sub xchg or aaa push ror jns pop jmp push adc rcrl or jle cmp das mov les arpl push sti dec inc je or mov adc push dec xor rorb fstps jg sbb in xor jg and cmp cmpsl xchg ret and push fucomi sbb vmptrst add arpl inc iret push mov (bad) repz push inc adc mov sbb out push push repz push je dec dec insb pop arpl outsl push daa mov push test adc ss xlat cmp cwtl imul jg aad xor aaa insl imul aad xchg in les cmp lret and mov adc jmp or pusha mov mov sarl xor stos dec in aam icebp imul jne sub shrl add jb hlt jl sub cs jo inc sbb sub out data16 jae (bad) mov lcall (bad) mov add addl jae add and adc in fs int xlat stos lock adc sti sub xchg sbb mulb int cltd cli sbb (bad) hlt sub popa mov mov jl lahf mov cmc fildll imul ret or imul jge push fisttp or ljmp mov push rcll xchg sub sub mov lds fist or arpl aaa fnstenv dec out stos dec dec mov lods xor xor int3 push xchg jmp jmp das movl mov mov cmp loope jne mov xchg pop pop add add jecxz pop jmp mov stc cmp and stc add inc (bad) cmp call hlt orl pop das stos push repnz ja inc in test ficompl xor add imul aad pop and ss scas insb movsl (bad) or popa jo cli idivb mov test xorl xor bound sub sbb inc xor pop add pop or lret dec dec dec imull fdivrs fidivl imul test xor mov daa sti push into jbe pop inc iret pusha dec orb fldenv pop in das inc jb test mov sub movntps jp arpl popa xchg je imul push out dec in into mov cli xlat (bad) dec in (bad) push stos bound xor mov (bad) xor mov stc int les pop movsl dec outsw ret pop cmp sub sbb sbb movsl out out lods xlat pop clc clc mov arpl inc call jae (bad) inc (bad) test gs cmp push xchg outsb dec lea movsb push lds iret (bad) test pop (bad) aas repz sub in and cmp rcrl push mov out rcl fcmovnu sub cld xchg sub pop and push push add inc add sti mov mov jo push add sub lods push movsb pop out mov pop mov sbb mov mov xchg sbb mov mov xor or pop jb je jnp mov xchg add push mov imul add mov add sarl movsb fs inc test lea and shlb stc push aaa or popf fwait pop jbe xor and imul fistl sbb and and add stos xor xlat iret cmp add mov repz sbb fisttpl dec sub jp sbb adc test ljmp cmp add movsl jp aaa inc outsl sti cmp je jp stos dec dec loopne imul jne lret adc jne jno lds push stos cs rorb idiv or sbb lock ljmp adc iret test addr16 or jle cmp jmp fsts das or outsl xor sbb jge cmp arpl or inc imul in imul dec rcrl push leave stos cli inc dec pushf cltd dec pop stos pop jb movsl iret and dec inc jne sarb dec ja aaa jnp add jge fnstsw fadds push hlt mov test fiaddl sti xchg arpl in cmp push pusha and pusha mov insb push in aam mov mov insb dec xor sub jo jae dec iret fwait jno jne push xchg idivb jle xchg mov sbb ja inc and sbb adc dec test xor push ja xor push jno push (bad) je cmpsb xchg push cmp jne xchg insl jge xor mov mov mov negb cmp jne xchg dec push add data16 mov imul test fwait pop rcrl xor mov push sbb mov inc (bad) int cltd jnp js mov xor cmpsl arpl movsl leave ljmp popa mov xchg (bad) scas mov pop int stc rcll xchg xor adc xor aad dec and mov and xlat xor mov xchg in push jne loope sbb push fs fnstcw jp pop stos fdivs rclb enter sub and (bad) inc rorl push clc cmpsl add add imul sahf inc shl iret and pop push mov adc movsl orl jp ja stos pop sahf cmp push cmp repz mov mov js lods lods mov jae out adcb sbb (bad) pusha addb test jnp sarl js cmp pop shrb jmp into dec mov mov inc inc rorb lock iret cmpsl addr16 dec sub xchg fcomip lock dec add inc sub jle xor add lcall push lcall jae jno in fstpt leave xchg inc push inc jbe inc and and push adc jg jo movb cmp push push adc (bad) lcall lods pop cmp or dec ljmp mov cmp shrb mov jl cmpsb mov ja das aad test in adc dec jo mov jle fwait ret cs xor fxch aam adc jb add jb inc push ficom inc mov mov mov in xor in jne xchg jae stos mov and fildl lock mov mov aad repz jns mov negl test push aad inc shrb je fimull ljmp aad in lcall jmp xor cmc gs fistpll (bad) cmp pusha iret sbb movsb push dec push pop gs pop test out dec xchg icebp pop cli sub dec jg sub int out add loop push imul mov sbb in in add test jmp jb cs xchg dec mov pop aam pushf push ja or cltd or inc flds mov rorb mov sub cmc push sbb cmp xor pop cmpsl outsl or pusha push stos ror xor jno dec or (bad) sub (bad) imul lock or andl int3 xor outsb cmp xchg jno push adcb push insl inc jbe mov cmp imul std loop outsl in push add int3 sbb jg ficoml adc xor pop gs fs (bad) lret cmp and jg dec jecxz xorl or push dec pop push cmpsl add imul cmp dec xchg shrl insl add lcall adc cmc arpl pusha aad cmpsl jae jbe xlat stos fstl imul lods push adc lea maxps jle lcall stos in jne jo adc cmp aad sti sub add dec aam adcl add iret fstpt daa pop rcrl and cmc jmp jle out pop fistl sub adc insb dec push outsl mov lahf jae push iret push mov sub sub xchg xor imul movsb rep es dec mov jle xchg aaa pop sub dec jae inc imul adc push add xchg dec push sub and pop mov xchg mov or movsb adc pop inc ds lcall hlt and and mov adc je test cmp xchg ret jmp xchg insb mov and pop leave stos push mov negl inc fcompl cmp icebp dec aaa repnz adc xor and shll adc push scas in iret stos inc fwait stos sub inc repz imul (bad) stos pusha and and push dec pop cmp ja xor out sub scas mov jae inc mov out shrb jb pop jnp pop pop push fstpl pop mov repnz add aad ret mov sbb jg mov fisubrl cmp stos in insl sub xor popa aad and outsb ja sub jo incl mov and xchg (bad) sbb sbb pop arpl push pop cli cmpsl pusha pop add (bad) xchg add dec mov (bad) stos fldenvs xor je bound sti jne xchg push pusha cmp into stos ret cmp in inc xor xchg insl fs arpl sub ficompl mov loope sub ret adcl push mov fistl mov fs hlt pop fidivrl fwait mov dec push or cmpsl js xor xchg jecxz stos adc adc push stc lds enter (bad) mov push repz ficompl add add pop lahf xchg pop cmp imull (bad) jno repz jae mov stos popf jmp mov call pop and push stos xlat push fstpt (bad) test sub stos or mov dec ja jg,pn sbb out lret mov and jne iret mov (bad) (bad) or mov ljmp cli cmpl lock adc adcl outsl pop mov pop jnp and mov mov jno addr16 sbb hlt mov add mov int3 pop pushf sub fildl int jae,pn gs push (bad) aaa push mov push bound mov push loope daa idiv and mov fidivrl test jbe stos pushf clc (bad) xor imul out hlt jae xlat int pop es mov mov jnp add ljmp gs cltd inc inc jbe ja int pop ret aaa or cld repz jmp cltd dec cli add pop mov mov lea add jae imul test jne inc out push sbb gs test mov jno jp dec pop jmp pop stos jle push xor push mov xchg lds icebp and jmp adc repz repnz jb sarl call mov roll and xor addr16 arpl loop mulb out inc leave jbe and inc mov push add xchg pop pop jge xlat stos sbb aas ret andb inc fwait fwait adc mov push jno lret cmc data16 stc push aaa adc pop push (bad) xor inc lcall or and xor imul decb aad adc adc lahf loop push cvtps2pi pop aam pop jb aaa (bad) rcrl stos repnz xchg in shlb push push mov push dec (bad) sub aaa adc movsl jne xchg scas test arpl aad mov (bad) cmp stos out sub pop std jb push outsl xchg imul ss cmp cmp sub or mov xor dec je push adc pop xor xor fsubs cli or inc adc int3 add or into pop or push leave pop sbb iret cmp ret mov push loope mov imul mov nop mov out sub pop sub rcll sub sub cmpsl mov icebp xor stos test dec fldcw lods imul lods rep out sub (bad) scas and dec mov ror jb add dec out mov xchg sbb add mov jmp dec fldt and test fbld xchg push lcall outsl lds add outsb cmc ret imul jl f2xm1 mov fsts xchg in xchg jmp pusha stc test cld jae out push and push xchg dec lea (bad) aam xor inc xchg push lods jge fwait pop inc push gs mov (bad) xor jns nop imull test mov mov addr16 gs aaa das shrb push xchg mov stos sti loope ljmp in xchg fcmove imul mov aaa add out hlt xchg add adc push adc orb dec ljmp (bad) push sti rorl mulb xchg cli repnz fcomi hlt repnz sbb pusha cmpsl stos daa sbb mov and sub dec pop jg add cld mov mov dec cmp dec loopne (bad) cmp adc (bad) cli inc fldt sub xchg or xor fsub adc loope loope mov pop repz sbb daa mov mov shl jge add (bad) sti stc cs or daa aaa sarl mulb jge stos xor pop aam movl movsb xchg pop addl loopne repz cld pop or sub sub (bad) neg adc call (bad) test sti jae push pop push xchg and in pusha cmc pop pop inc into arpl fist xchg loopne push jb push mov fldenv mov insb and xor int mov push bound std fidivrl call stos and cs push call leave stos inc mov addr16 fdivs and test mov or (bad) stos gs sarl sahf pop sub push and jne xor jb adc loop fistl dec push push ja int3 nop push or mov imul in xchg leave cmp test mov notb gs stos and fcmovne fs xchg test pop jo addr16 data16 mov mov rep sub mov insl add xchg sub lock (bad) std dec adc mov cld in push fstpt inc rcrb insl push movsb or xlat ror jb pop push scas sbb arpl mov jnp popl in test push cmp mov (bad) xchg xchg pop push mov outsl mov pusha sbb mov mov push nop in leave shlb mov mov xor xchg jno fistpl sarl xor jns dec int3 out mov pop xchg clc pusha inc mov push xor dec lret in fidivr sub push rorl aas sbb inc xchg repz cmp xchg pop sub loop jle dec in sub fs mov rcl aad or or ja,pn pop stos sbb lahf fistpll mov cmpsb sbbl ret (bad) rcr jnp gs jno xchg jne pop xor sub jb cmpl pop cmc push cmpsl cmp sub pop xor mov stc xchg lock roll repz arpl insb fimul mov jns imul mov inc pop xor out outsl repnz jb push fwait ds jg adc (bad) jge xorl outsl cmc jp lds out mov inc (bad) ja push lock xor xchg adc aam out adc mov mov fistpl daa jg cmp adc testl in jne xchg comiss lods lcall aad jecxz or js jge scas lea add xchg imul test pop (bad) add lea call (bad) arpl hlt push gs (bad) push jle addr16 loopne push jp out pop jge stos xchg fist orl fnstenv mov imul sar (bad) pushl shlb push mov cmp xor sub jo sar sub cmp and rorl daa push adc inc jmp (bad) jnp sbb mov stos lea mov and ljmp in jne pop mov and jb mov dec or jno ret xlat rcll insl mov cmp inc adc sbb push sub gs in popf imul gs xchg test ret loop (bad) cmpsb cmc aas out dec ss cmc hlt mov dec (bad) dec jne sti int pop (bad) mov push mov (bad) stos mov jno or clc loop push sbb gs jo icebp xchg add fildl dec xor fs frstor xor mov outsb adc arpl xchg repnz add (bad) mov fmull in jno pop es sub pop mov cmpsl rorl (bad) insb xor sbb jmp jb les add cmp aas push pop mov gs jae (bad) pop fnop loope mov (bad) dec ss xchg dec fildll in shr out sbb out aad jno pop adc sar lds fwait movsb sbb or pusha in xchg leave sub aad jecxz cltd (bad) sub ss aaa xchg lret add pop in dec dec and fnstsw inc ficomp leave cmp loope movsb cmp sti ds (bad) sbb fisttpl stos mov popa mov pop jb,pt sbb dec (bad) cmp pop dec repz in jne push push add iret push ja jge mov dec bound (bad) cld pop loope gs outsb push fsubrl stos test sbb jns icebp dec fild xor mov xchg cmpsb pusha ret mov ret ficomp (bad) leave cld sbb loope jne mov dec sbb push cld outsl iret and (bad) jmp int3 cmp jbe mov mov inc ljmp xchg or ja add pop jmp jle cmp pop adc js enter lcall andl xor push fsts or js lcall sbb push and cs xor xor add push sub jmp outsl inc mov idivl xchg and xorb sub pop mov mov pop inc cmp sbb and js or pop rcrl cmp sbbl lret jge imul add push adc lock (bad) gs lcall aas fsts shrl scas aas add mov pop pop mov (bad) adc and or iret insl popa mov fbld pop cwtl addr16 jl adc jns xlat aaa xor aaa es jmp inc mov ja leave stos sub xchg jo clc adc mov xchg fs add cmp pop dec or or sbb imul pop ret sbb sbb mov sub push ljmp and ljmp popf lods mov pop mov jg jb imul xor ret loop (bad) call mov jbe jno int scas stos lahf mov mov or and out sti add ds int adc jge insb cmp (bad) aaa sub jg add decl xor mov sti fwait clc adc inc add bound push addr16 dec push cmp out sub push sub mov test push inc fisttpl add dec cld cmp sub lds cmp lret imul sbb sbb divl push cli jo sti jle cmp test push arpl fldenv leave or jecxz inc incb add hlt xchg push iret jg in jo mov mov addr16 das cmp das push loope fcmovu (bad) (bad) imul clc push adc pop pop rcll xchg jp pop inc movl js adc das pop sarl inc mov mov sarl (bad) loope test daa pop call jno and jl pop loope out imul or js cmpsb imul (bad) pop lea mov arpl fs (bad) imul mov dec inc xchg pop jecxz in aad jns mov js push fs fstpt arpl js popa push gs sub aaa sub sub add and mov out pushf fdiv adc movsb jbe push mov aam lock fs daa inc imul push and shrb in leave mov xchg xor cmp gs push je adc ljmp mov aaa jo cmp sarb inc pop mov add jmp pop cmc js lret dec sbb and shrl pop loopne mov xor out jbe or dec mov or gs jecxz aad add (bad) in scas ljmp mov (bad) jle outsl mov outsl adc sbb or das (bad) push inc in fcmovnu cmp or dec mov dec pop jae lea ss mov sbb pop xor lret add (bad) mov outsl mov jae adc sub out mov xchg add inc xchg jno addr16 insb imul xchg fstp outsl or leave xchg xchg fdivrl add xchg sub int3 mov xchg sub ljmp in inc pop insl fmull mov cmp xchg in push add mov cli call push cmpsb mov sub imul je pop bound lret loopne jbe mov or and jns cmpsb pop adc imul dec push and and cmp jne sub pop fcompl xchg sub add notb adc jno ror addr16 ljmp sub ja and add dec loop (bad) fsincos ja js pop (bad) bnd xorl mov xor sub push xor push cmp lcall (bad) in push push in stos mov mov fs negb mov mov je inc iret sub jno fmuls mov push mov pusha dec jne add in mov jae insb mov xor jns int3 cmp sbb dec push imul pop popa cmp notl fs and inc and or subl xchg ss inc push packssdw daa mov pop inc push lret mov ljmp pop sub iret adc fisttp xchg jmp (bad) and xchg rorl fcomi mov fsts inc lock inc in pop cltd lahf imulb dec xlat hlt cmc or dec xor lds popa pop xchg mov call and sti sub ja lret in xlat push push ret push fldcw sbb decb sbb stos jmp test push hlt (bad) pop (bad) add or ds mov movsb arpl scas leave pop je inc mov and leave cld xor xor add push imul icebp mov lret mov jg add jnp ja lock fwait in jmp pop cmp cmp test or sub dec xchg add ja fisubrl testl pusha pop sub call add sarb add adc xorb loopne iret cmp cmovno mov inc in and add mov mov mov adc call fwait outsl aad imul push pop xchg addl push es or aas cmp insl pop test push in mov mov movl bound jmp mov xchg jl mov push mull outsl jg daa add sbb dec pop arpl xchg hlt lcall cltd in inc sbb jns lods cs frstor and push testl stos out or lds jno push pop negl mov je xchg inc mov divb jmp ficomp and aad shll dec mov push xchg inc push mov lock sub fwait pop lods jle dec adc push cmp xor lret and hlt loopne or inc add pusha add pop mov sbb cli fs cmp and sarl roll (bad) mov shlb dec sti and (bad) sbb mov inc xchg add out inc sub sti push mov push ljmp imul sbb loope stos stos ficom push sbb pusha mov add xchg xchg xchg inc push dec mov lret jle sbb negb cmp insb movsb pop or and inc xchg add gs jmp pop adc pop addr16 ja les sbb and (bad) stos int ja mov mov xor aas jno dec dec jb shrl xchg loope dec insl loopne mov adc aas sti mov aaa fisttpl cmc cwtl sti mov fnstsw xor mov aaa popa (bad) lret call inc jns ja push movsb xor jae xchg lds xor (bad) outsl xor fwait bound or ja mov jbe xor and jnp pop push jge push hlt cmp hlt leave sarl popa arpl iret mov movsb sbb jne pop mov lock sbb sub mov fucom mov in dec sub sub and cmc jnp into stos sub cltd lock jns or (bad) nop pop push sbb jne icebp sub pop imul in inc or dec dec sub in ja and pop je jne scas mov mov stos sub jb stos fild sbb loope cmpsb icebp cmp sub orl jne (bad) push fs aam div xor push clc cwtl sub cli fisttpl gs xchg and or push aaa in scas lret or mov into and inc add leave pop mov sbb xchg (bad) fwait lea int jne loope adc pop xor push cmpl mov cmp sub stos mov adc fucomi mov jae push lods pushf xchg fcoml mov or loopne in inc notl sbb inc daa push dec das pop adc scas push gs mov sub pop (bad) xchg push dec vpunpcklqdq cmpsl sti outsl add dec adc shl xor jne adc daa mov cld repz push inc out jnp subl add pop jb push and sub xor hlt mov cmp sahf push dec add jb jnp fs sub lret dec sub jb mov pop xor (bad) divl lahf fimull push push xor cli je adc or lods outsb imul jle ud2 dec xchg clc mov sub hlt pop call dec fmuls jne gs popf push jecxz loope dec xchg fs add insl jo jle or lods mov push fwait xchg pusha in mov lcall sub jl std cmp pop insb mov dec adc outsb lret (bad) hlt (bad) movsb mov repz pusha and (bad) sahf lret pop cmc std lea in pop sbb data16 in stos pop psllw push flds cmp pcmpeqb push insb xchg lcall addr16 lret in std mov jge out pop jp xchg insb in xlat add pop call data16 fcoml iret cmp je in cmp jo mov leave aam lret call ret xchg int3 ds jnp pusha loop xchg mov sub mov cmp and je test mov mov inc scas call xchg imul aad pop aam cmp inc pop lea mov pop inc pop jnp dec jmp out dec lods imull push ja adc jp inc xor sti jno ret stos pusha rcrl mov pop sub pop fisttpll cmp jecxz jno mov jmp test leave movsb jmp cltd push enter test les jmp push push xor fwait movsl or xchg cmp outsl int dec push adc cmp jle repz sub cs sbb mov and cwtl rcrl pop pop mov ja ret fs or jno divl xor addr16 outsl pop jb cmp ret sbb jecxz int pop xchg xor roll push sub cmp testl xlat popa and fwait pop push jae mov jae sub mov sub mov lcall cmp out add movsb jmp dec jno add (bad) adc dec ficoml (bad) (bad) jbe test enter pop dec iret dec dec fisubrl jb push js mov push cmpsb or out dec call leave repnz dec push divb leave push jl inc test inc into hlt stc in pop cmp mov push jb aam fwait xchg leave cmp mov out mov pop ret inc out jae fild icebp pop pop dec test mov and out pop sub jno fsubl sub cmp std mov sub loope xor loopne inc fcmovnbe mov daa stc lods subl xor cli pop mov lcall jno push sarl stos pop add fwait pop fdivrs lcall cmpsb in cmp cs xor rclw push add cmp sub adc icebp arpl sbb jb sti and dec test inc mov scas sbb ret popa sub enter mov push fcoml mov pop jae insb mov (bad) dec in inc sti lock xor cmpb add sbb popf push xorl in xchg add ret mov es or sbb data16 mov call fisttpl (bad) in loopne stos in or mov adc fs add dec xchg cmpl iret inc xchg clc mov or arpl push sti sub je insl add dec xor lahf xchg push adc pop cmp sbb sbb adc hlt sub jl addr16 sub fwait inc mov sub cmp and jno cli sub icebp pop insl arpl aad je sbb dec xor paddb repz lahf loope push cmc cmp add jnp jo sub test inc mov cli jo imul mov or es jg inc loopne movsb jb add idivb or call call pop gs ja jne mov vphsubwd jno push push test scas loopne xchg popa push and jnp iret pop int xchg xlat or ret dec lods or pop sarb ret (bad) notl sub mov jbe pop sub cwtl (bad) jg mov (bad) lahf (bad) push mov sub loope loope out (bad) jb and out and mov stos js jne cmc jae cmp mov ftst dec jle sub cmpb out in (bad) imul xor ss aad cld mov iret sbb mov pop push dec mov testl orl das mov dec fldenv fmuls test repnz stos dec bound adc data16 mov clc out std dec outsl dec lret or add dec stos int3 clc and push mov rcl jnp push sbb in fsubrl push and daa add sub push (bad) cli (bad) insb push sub or add (bad) int (bad) cmp (bad) push adc cmpsl data16 adc push xor xchg push sbb (bad) out or lods sbb push dec jo mov fcmovne call xlat ja add repz loope sbb jmp ja mov ja in in push lcall jbe (bad) (bad) sbb xchg sbb imul dec lods int ficom scas enter subb mov dec and cmp xlat icebp mov dec xchg sbb test fs js xchg daa cld les inc je ljmp mov add jne sbb repz xor arpl mov dec cmpsl pop int3 cmpsl inc push popa repnz mov mov dec pop sub ficompl arpl mov dec in dec cmpsl add out and aas mov adc sarb pop push xchg adc das mov loope mov and pop ja rcr inc daa xlat bound out mov mov dec add adc push mov pushf ret hlt lahf (bad) clc xor jbe fdiv insl jmp (bad) imul xchg sbb cli jg and sub mov cmp xchg aas fs pop in test in lods repnz das fwait xchg dec mov dec and int3 xor cmp fnstcw jno dec cmp (bad) adcl outsl cli cmp xchg dec inc and and cmp movsb inc sbb fist stos jmp xchg arpl or xchg aaa loop and push aad or (bad) popa popl imul add jp inc in sbb dec in stos ret in add in pop xor push xlat adc adc dec push mul sub xchg xchg outsl add mov in lret out adc sub roll mov aam push mov nop mov fadds or js cmp mov insl xor stos cmp dec add mov jmp xchg mov ret push pop (bad) jne dec mov dec je lcall (bad) adc xchg sti sub xor xor lret sti jmp mov cwtl icebp and mov cmp dec es jne call imull (bad) fstpt ret outsb (bad) xor inc arpl mov data16 sbb cltd stos mov fs aaa sbb adc mov push mov roll or cmp pop and push add arpl dec hlt xchg stos frstor mov rclb xor aad sti es push mov (bad) lret (bad) pop stos jae,pt lea pop rcrl cmp outsl add jmp mov insl and stos scas jae scas mov mov add ljmp mov pop add repz push mov notb push sti mov mov jbe insb es pop jnp repnz push aaa push enter out fildll jae xchg and shrb imul jne cmp jnp jecxz insl push inc sbb jno call ljmp pusha xchg je jbe pop fidivr out jp popa push cltd mov adc lock leave mov ja sbb cmp (bad) or testl shrl or ror jne fstl xchg in test inc xor and inc inc je stos cmp cmpsl mov ret dec cmp fwait in sub lret dec (bad) cmp inc mov xlat stos rcrb cmpsl jns push les (bad) out fxch add push stos mov in jne ljmp sub sbb lea icebp jns jmp jmp or ja pop lahf mov jae,pn mov repz add and mov pop ret mov xchg shrl mov rclb jecxz data16 ja mov repz sti dec or hlt xchg adc in test sti cmp add cmpsl mov xchg lea sub out imul jg insl sti xor data16 loope fnop jmp push jmp jno in pop ja cmp mov pusha lds pop fiaddl xorl or sub jo pop lods jb out aaa push mov std repz pop mov dec lock outsl imul cltd sbb jno push and mov or mov jbe sub fisubrl in jmp and fsubrs mov mov loopne cltd icebp mov add mov insb adc fcmovnbe leave cmp outsl out mov std mov insb adc xor data16 push and or dec dec in decb add mov aaa jl push mov xor push test in stc ret test jo push or inc stc lret pusha rclb jno ja sbb enter xchg (bad) pop fnstenv lea insl out xlat push jne pop push mov mov xchg loope push je mov jb js in std inc xchg inc jecxz push insb pop aad pop lods adc (bad) iret mov pop jne insb or lods int or mov fcmovnbe add pop cltd xlat mov cwtl xchg aaa cmp push scas adc inc pop and repz mov add loopne imul das and mov sahf jns cli (bad) jne in add pop xlat fldt mov pusha and leave int pop test inc xlat dec imul insb or mov xor jns add jge jl sbb sub fildll (bad) push ljmp test sub fdivrs lret pop aad stc insb mov aaa push gs ja stos and or out push pop dec mov sahf mov jb xor rep aaa add and fcoms lea outsl outsb icebp mov push je pop lods lea movsl test gs int and sti pop (bad) cmp pop push push ficompl (bad) pop out leave (bad) popf and (bad) xor divb addr16 mov pop push jo jne lea or xchg insl imul (bad) jmp scas scas sub dec pop jno push sub inc inc lods dec cltd dec (bad) jno cli xlat stos push inc sbb push addr16 add push jl insb cmp push mov sbb es into add push push hlt inc and cli mov cmpsl js jno loopne jmp (bad) or arpl mov cmp stos push jae pop or movsb xchg push out repz jl dec cmp arpl test add leave jno addl inc cltd sub arpl jle xchg stos dec arpl push sbb mov xchg out xchg in sub sub stc cltd mov imul inc adc jge lahf dec dec cmovl push ja stos dec sub push pop pop cmp and jno (bad) sub dec xor mov leave mov cmp xchg jmp imul in iret add pop jns push iret sub out pop fs leave mov scas fs sub sbb xor rclb out pop fcoml mov mov and pop lds pop repz bound sub test arpl mov jmp mov fwait out lret fildll fcmovnb call fidiv mov int sbb mov lcall shrl lahf xchg xchg mov xchg mov das jl cmp mov daa ret fildll sbb aad jbe mov int sbb repnz aad dec loop adc adc sbb push sti and cmp out sub aad pop sub jb pop ds add push lock lcall repz (bad) stos mov ds fs mov ds pop insb mov add (bad) jb test gs iret repz xor lods arpl (bad) fsubrl adc jno sbb int cli lods ljmp ljmp lods and push cmp ffreep jmp sbb cmpsl or fldenv pop ds (bad) fcomi ljmp dec (bad) add cmp lcall pop rorb xchg inc or mov inc pop mov out mov jae (bad) insl popf sbb sub or imul or push or pop int cmc xlat (bad) inc (bad) movsb push jno frstor inc jne hlt dec cmpsl aaa stc sbb and mov stc mov add ja jae imul xor xor push dec imul nop jg roll stc pop dec or cld dec out movsb mov rcrl cmpsl (bad) mov data16 dec cli pop push cmpsb xchg iret mov stc push pop jnp pop pop cmp test mull sbb push mov es arpl cmp sub xchg sub nop sbb jae xchg cld int3 hlt jo (bad) (bad) cmp rorb inc popa sahf sub fsubrl xor aas inc lea jnp sti xor outsl mov adc or fwait arpl xchg aaa xor jns sub lea mov ja dec stos fwait out jne push pusha fstpt push mov sub adc sub nop xlat mov lret cld gs (bad) xor out mov add jne cmp and out jg ficom (bad) mov dec ss or xor dec inc cmp in mov cmpl jno aad sbb incl ret rcr notl in adc movsb cwtl rorl xor dec loope or xchg jo jl inc insb cli outsb inc sub pop into jo sub jg pusha in ret cwtl pop add repnz xor addr16 subl jne imul stc adc add mov add push je mov jbe ret mov lea pusha arpl and mov cld cmp aaa inc cld stos mov mov add lret je mov cmpl repz jmp in cmp mov inc jmp and call adc arpl int xlat jno fiadd ds bound pop mov push les ljmp mov add bound jle pop ret or push mov sbb (bad) add mov cmp xor notb sbb (bad) (bad) cltd sub test adc mov out push rcll sbb fstl pop clc nopl roll dec xchg xlat sub inc cmp pop xor push arpl pop rcr jecxz aas test pop dec data16 sarb or mov loope jne add xlat cli push adc pop fcomp pop or imul das cmp push daa add inc push out js xchg or push mov repnz sub stc out mov sub ret out sub xchg jb in fstpt mov inc aad jg xlat and sarl test mov inc pop inc dec insb neg inc dec cmpsl fldt pop mov rorl pop adc jbe cmp mov and dec sti not std int3 mov xlat repnz cmpsb inc push ja,pn out inc int3 mov repz lea int3 lods jno or pop ja jae out mov aam xlat aaa fcoms lock cmp sbb sti or test inc cli jl jmp out jmp (bad) sti in rcrb push notl inc (bad) imul dec lret jmp in iret sbbl aas gs mov cmp cwtl inc in sti mov cmp cmp gs out inc xor in mov cmc pop sbb addr16 clc out cmp imul lret mov pop sbb (bad) dec js fwait push cmc jmp lods popa push ja out xchg push pop fisttpl sub mov inc mov mov stc pop fnsave sbb cmp push pop jb ds pusha jge jbe ret cmp lret lret leave aad lock shll mov dec outsl mov scas pusha jbe mov xchg cmc dec dec sbbl shrw mov fldt push add addr16 stos xlat cs (bad) cmc fidivl out pop sbb jo jge lahf and jns xchg testl std iret cmp xor xchg shll jge cltd imul cltd and movsl outsl ret scas inc or pop mov (bad) cs icebp push mov and xchg adc pop popa fwait inc jo int dec mov sub cltd out (bad) jp mov iret jne add (bad) (bad) mov jmp popa add addr16 cld hlt mov divb inc or adc xor insl aaa ljmp sub pop cwtl lock fs mov jle xchg movsb shrl push mov cmp cwtl mov fstps adc jae cmp mov in mov stos push je movsl cmc in or loopne repz or popa push push and das out les cmp xchg xchg sbb add and pusha jae pop push mov or js fs lock je add ficoml sub les outsb pushf pop xchg add pop sbb rcl cs mov out pop divb push sub cmp imul adc xchg cs dec xor pop push stc scas hlt daa add idivl xor std xchg dec or xor testb sbb fist dec lcall pop xor push sahf push dec (bad) mov xor shlb sub add or pop or stc sub inc pop aaa mov sbb pop je push test mov int jg sbb cmpsb jne pop hlt mov fidiv arpl inc aam inc mov ffree adc pop rolb negb outsl movsb imul mov nop arpl je cli add fsubs outsl pop dec jo pop cmp pop mov mov or push xchg cmp pop jle inc jl cmpsb cld (bad) mov push add jo stc fadds ljmp or sbb aad fs aam (bad) loope inc inc test in je loope in lea add add pushf ret jo jae mov dec lahf aam sbb ljmp popa hlt into jae mov sbb mov mov call scas mov xchg repz hlt inc xor pop in pusha lret int sub jb and fildll rorb xor jmp insb cmp xor sub into popa mov imul outsl daa lods (bad) sbb data16 xor xchg jecxz push push out in loope sti fldenv mov add test aaa xor push pusha pop add xor cltd fwait push pop push movsb xor popa adc arpl jne (bad) repnz pusha mov mov push in je jecxz push lret xchg sbb dec sub pop lea inc and or inc pusha jp mov imul fnop rolb push shr dec out pop cs cmpsb fs cmp push sahf jmp xor or and setno (bad) icebp lea mov repnz (bad) dec xchg std add out in imul icebp stos cmc sbb adc sub je dec add pushf outsl addr16 bound imul test out jne add xchg mov and aas out jmp div in push (bad) notb pop sub cld push imul adc xchg rcl daa out push xor push dec fidivr in arpl jmp jno cmovs clc or ja (bad) cli push dec in imul je test push popf jne out pop sub movsb fcoms jnp inc cmp mov push add sub and cmpsb (bad) cmp push out popf inc out pop jmp repnz mov inc cli dec jne and pop (bad) push cmp mov loopne push (bad) hlt mov pop fs sub mov adc repz fdivrs ret xor mov xor insb int popf aam and hlt xor dec push push cmp xor scas sub xor dec and jnp mov xchg lock cmp shll mov mulb xor dec jbe inc (bad) repnz jns jns push icebp aam push xor mov imul arpl jae ret add dec (bad) (bad) sbb mov push sbb out gs iret stos jle pop (bad) cld mov rclb movsb leave lods push movsb cli cmp dec sub shrl add stc push xchg sbb adc arpl dec std sub popa fs insl lea stc xchg imul push adc clc bnd xor add iret js les xchg (bad) repz inc push js repz fsubs stos loop sbb (bad) xor (bad) and js dec mov cmp fiaddl jmp xchg imul lea stos fwait fwait cmp cmp ljmp jle arpl stos xchg inc cmpsb mov mov incb jge jmp pop xlat repz mov in mov push xchg jns aaa stos cmp or int3 sbb sbb sub (bad) mov sbb dec (bad) shlb into test xor inc dec addr16 cmp repnz stos sti outsl leave pop mov rcrl mov cmp in or gs sbb pop adc xor mov push xlat scas aaa xor xor fwait cmpsb repnz push lock popl jp les push nop sub enter ljmp pop jae test aam pop stos inc pop ja int3 fs pushf sahf das cmp lea test push stos test nop dec jo outsl add mov jecxz popa (bad) outsb xchg outsl fistpll xor jb and stos xor popa dec xlat jns mov sub fcoms xchg mov jae outsl ljmp cmpsl shl (bad) pop adc sbb ss push jbe jns sub gs js ret std lahf cltd repnz jb inc jmp (bad) je dec stos adc cli fildl xlat rcrb and lock jecxz fnsave mov subl stos xlat inc xor lock jb push fs mov sub adc push flds js dec repz add scas pop gs jb push mov mov inc or pop xor dec xor jb lods adc outsl jns out xchg ja pop or mov jg in aas ja (bad) ljmp pop sub cmp call xchg mov cmc push stos pop int jo mov mov fistl paddusw cmp std addl xor sub aad and inc dec pusha xchg lret adc sub push lahf out jne int and mov lret loopne mov cwtl addr16 sti in pop mov push adc adc push fs dec sbb (bad) imul or mov jb jnp pop stos xchg sti cmp pusha out jb mov push arpl pop arpl or gs mov push xor push pop push aaa addr16 pusha iret jae dec adc lret loope push repz dec lcall jo mov or imul leave xor xchg repz movsb add ss outsl pop add xchg mov sbb (bad) sti das sti xchg and es in rorb subl cwtl stc inc (bad) (bad) jnp xchg imul mov ljmp repnz xlat sub xchg fstpt push ljmp sbb xlat fildl nop flds popa leave pusha adc iret les xchg pusha fstpl push mov adc stos mov sub in xchg sub test xchg xor xlat int sub es push pop lds xchg dec pop xchg jecxz xorl dec popa rcll mov jnp test push xchg mov xor shll xchg jle push jle cmp movsb add bound movsb jnp stc nop fimul jmp pop nop rorb rcll ret and push mov lds jb xchg mov scas push inc push and das js jmp icebp pop bound add inc imul sbb ljmp pop cmp jo insl or pop je rep imul ja imul (bad) insb (bad) adc daa pop bound xchg insl (bad) jp mov dec add and lea pop cmc js pop mov push jecxz and jg pusha pop xor inc jae ret pusha in cmpsl sbb push pop dec add dec gs js stos cmp stos add imul cmp aas ss or ja push xchg push sub test push scas rcrl pop ljmp fs push pop sbb cmc pop js pop fbstp js adc je pop push push jmp test in in xchg cmp inc lret jae outsl fildl popa divl (bad) inc jne mov jecxz sub mov jg adcl sbb dec icebp jmp in sub push stos (bad) es clc sub dec mov (bad) mov dec daa adc gs sbb sbb sub stos and push jl dec in stos (bad) sbb mov inc and pop pop adc in sub aam sub or xor push and cmp push lea (bad) lcall jle daa mov mov imul pop dec sub repnz push pop jne and pop mov dec xor test jno sti pop sub pop cld pop pusha jne bound rolb xor clc bound cli imull (bad) fstl clc pop mov xchg inc aaa sbb stos movsb xor sbb imul insb jge sti aad pop testl pop add mov xor addr16 gs repnz dec jg addr16 mov dec or push fnstenv jns pusha nop scas or cmp scas add fistpl xor stos pop pusha or insl repnz fs push cmpsl mov cmpsb aas imul sahf cmpsl arpl js mov test add int dec stos test dec lret dec rolb inc jle inc fcmovbe dec scas cld lcall adc jmp shll in nop pop ja pop outsb lea inc inc mov cli aas jnp push push out dec pop jmp mov cwtl leave shll ja pop scas jb sub push push pop push fstpt jle lods jecxz sbb daa ret jns cwtl pop cld jnp and stos adc sub push stos mov fcompl cmp push hlt and lret sbb gs loope cmp std loop sub fldenv bound jno pop ljmp js sbb stos push jmp cmp sub fistp or ja inc or cli add add out add lods pop daa or cmc stc jne in and mov out je sbb test and push pusha dec push repz push out and sarl loopne push add in stos mov aad xchg add xchg fisubr mov pop mov dec sub sbb and sub lret xor xlat and cmp cltd xor xchg cmp mov mov lret inc dec xchg push dec call cmp insb push xor rcrb push lahf cmc sub loope mov fnsave cmp mov repnz sti cmp mov or imul pop imul in jae lock dec fcompl test aam (bad) ja js enter lret (bad) stos cli int3 pop and mov repz stos clc rcl sbb mov jb inc jo lock mov arpl mov xor xlat stos mov xor jae mov (bad) inc mov pop sar data16 cmpsl xor stos mov jne (bad) popf jg stc nop push push (bad) jns cltd call xor lods push inc inc in int3 out aad fist pushf jmp push test int3 inc mov fldt mov loope pop and push aad xchg sbb adc pop mov gs fwait mov aaa inc inc push inc cmp in int3 (bad) js rolb or pop es mov sbb or std das pop repnz dec bound mov mov jne repz jb sub pop in test and and cmp jle (bad) call sbb push mov fwait dec jo stos std mov sti idivl lcall ret cmp pop dec scas inc cltd lahf addr16 push push lcall mov jbe cmpsl leave adc aad sbb adc (bad) lret inc loop push mov test add repnz dec sub lods arpl inc (bad) loope dec mov das sbb das dec je aam fdivrl mov cmp int inc jne stc mov jb or jmp outsl dec jmp cs dec loope hlt (bad) xor pop stos nop sbb popa push test cmp cmc jmp add pop jno sbb sbb pop push adc sub adc xor xchg fsin test insl repz (bad) ja lea fldt dec dec movsl dec sbb xor push sbb andb xchg mov in sub (bad) lods divl je or sbb jns pop jno ret xor mov ret imul or xchg sub jmp cmp insl test pop xchg mov arpl adc out hlt add outsb bound xchg insb cld loop xor jmp xor mov or insb dec fwait mov inc rcrb sbb imul xor inc mov fs add arpl xchg bound (bad) les test icebp je call jbe mov xor stos cmp push or in jmp xlat js and out mov xor test aaa push inc push movsb mov sub or outsl int js pop inc test push jbe aas push sub xor arpl fsubrl sub lea jnp orl cld stos shll mov sbbb sub loope ljmp in (bad) mov jecxz (bad) adc (bad) mov imul pop aad xor movsl pop push (bad) push lea in dec leave or out add sub sbb add ret call repnz cmp and jne add aad push jbe leave mov lock ss lock mov inc and pop inc aam popa ds and int3 mov sub repnz or lret mov in mov lds movsb jl lahf cmpsl aas pop mov stc jno jecxz jle push lods lods xchg push inc dec jo in lods jg loope xchg ljmp ret push out arpl jecxz ret adc mov fwait pop in ja dec and mov repz add gs xor jae sub mov xor ret lock or mov arpl imul ljmp repnz call addr16 add sbb ss out test rorb ret or sub fwait xchg je out jmp or sub (bad) xor (bad) push (bad) pop fsubr add jb sbb cmp icebp xor xorl mov add aad stos and out adc add out xchg cmp dec bound rclb dec cmp push pop jecxz xchg cmp gs std push jbe pop xor mov arpl shrl (bad) mov adc ret arpl mov lret mov pop mov scas icebp hlt xchg xchg mov stos aaa insb test xchg jmp push scas aaa jmp nop mov push je cmp lcall gs fstpt xchg out jge ss mov loop into std repz and xchg pop cmp xchg sbb repnz mov lret push jno add in fs insl fisttpll cmp and stc mov adc jo cltd dec jle xlat rcll mov (bad) (bad) xor loopne jno gs test pop lcall popa fcoms lds leave lret jb and fcomi and ja sub fcomi sbb out xlat add adc cmp sub dec rcl cmc and pop das ja stos stos movsb mov pop sub fcomps add movsb pop sub pop rol adc jne gs aad (bad) xor pop add inc mov xlat xor jns inc stc mov pop adc imul dec in insl (bad) gs mov or xchg (bad) jne clc (bad) dec outsb aam ljmp imul pop xor (bad) call shrb mov cmp xchg inc decb stos sbb movsb pop mov icebp cmpsl dec popa imul arpl dec cmp shl dec sub sub cmp xchg call jmp outsb or clc xor sub cmp pop pusha add or (bad) mulb push dec sbb pop iret jb dec dec lock pop mov or add shlb fwait xor dec mov (bad) push jnp lock mov ljmp (bad) adc test mov imull ja fstpl dec and iret lea cmp lea jle pop stos and insl jne xchg in iret push and imul test push sub loop and cli or cli aas data16 popa jbe cli sub insb stos push pop or pop adc sahf jecxz iret out sub addr16 fnsave mov pop inc je std fcmovnbe mov ret xor out lods lods cmp fs out sub pusha mov mov inc enter and dec test jle data16 mov dec into add shrl (bad) repz imul fild xor sbb pop stos jge rcrb stc out call jne or jge subl not out push fcmovnbe sbb push push inc sub sub inc sub loopne movsb dec adc jg jmp adc cs xor pop mov cmc sbb mov call pop rcll fadds imul rol lods xchg repnz mov sub aad pusha neg ret jmp push adc lahf leave outsb lret add jb or sbb ss aam or sub sbb rorl insl and jb xchg daa dec dec insb fwait cmpsl sub cltd imul iretw inc xor dec mov mov lea stos jb jmp add outsb mov cltd imull xor sub pop out icebp in ja stos sbb arpl lret (bad) mov xchg jle sbb sbb mov cmp daa icebp roll notl (bad) or adc lret popa push xlat fildl stos inc cmp and and out test cmp push cmp repz pusha adc gs ja daa push add dec (bad) jmp pop clc nop fldcw sub fstl stos fisubrl loopne jp pop mov mov test fpatan arpl into xor mov dec clc ds dec test pop xchg outsl fsubrp (bad) (bad) loope pushf lock xchg xor pop cli jecxz icebp bound jle mov imul adc data16 aas rcll xor xor dec or add pop test mov push mov xlat or dec push stos das xor ljmp pop inc jns fwait mov pop lcall adc repz out in cmpb outsl sbb int jp dec mov inc js test (bad) jno aad call sub dec incl sti lock scas sbb mov xchg movsl scas cmp ds xor ja and test pop aaa roll mov and leave mov dec and sbb shrl ja jmp test repz pop add hlt mov aaa and or scas aad jno (bad) ds stos jae lods mov cmpsl mov mov sub xchg jne aaa mov repnz xor (bad) negb adc repnz shll imul jns cmpsb js add jecxz inc mov fldenv add hlt push jb cmpsb into jbe aad mov sbb sub or gs jl and insl (bad) loopne repnz ja pop and cmp aaa add push and mov and negl dec push xlat int pusha ror cmp add bound (bad) sbb imul dec push fxch sbbl iret xor cli in mov insl jmp pop aas or xchg mov sarl int (bad) negl inc cmc cmp aaa sti insl out loopne cmp jge pop in sbb jb aad loopne pop stos mov repnz xchg adc fistp xor xor loopne cmp imul inc and fnstenv (bad) stos sbb jne and mov xchg pop inc and dec pop (bad) fistl push jp fstl mov or jb xor (bad) cmpsb mov sub mov idivb in sub fbstp ljmp xor xchg and stos adc rcll int3 rcl clc pusha jl into jne mov (bad) sub mov mov xor insl arpl imul lcall fiadd paddusw cmp mov icebp aad jne and popa mov mov cmc int (bad) lret sti imulb lahf loop adc pop fstp aaa nop or xor pusha enter popa fidivrl pop iret cmp mov adc add (bad) dec pop test ret jb insb push and and cmp mov (bad) fidivrl xor fild (bad) xchg popa push mov in xchg xchg xlat sbb sbb xor repz xor ret mov stc imul or ljmp loop in cli xor dec sbb pop lahf jne xchg stos ficoml inc jb xchg stos mov cmp stos sub push imul divb xchg lock stos arpl popa push push pop xor out pop and mov xchg xlat xchg iret push pusha lret stos adc push gs (bad) dec repnz imul (bad) loop mov mov dec jb adc push sbb pop adc or xor (bad) aad mov in add or sbb jnp arpl jo jle mov (bad) imull enter rcll insl iret adc inc dec jae repnz loope or push pop fild movsb loop call push je pop cmp add push sbb imul push and fs movsb cmp stos mov cmp push or in scas lea pop (bad) divl mov xchg mov (bad) jb jno out adc (bad) sti icebp pop (bad) decb adc (bad) adc rorl aas mov jmp imul cmp fldl sbb shlb cmc jbe jne imul sahf fisubl int pop or mov add xor dec inc and mov sbb aad add dec lds cmp hlt lret ficoml repnz jmp fildll mov jp stos aas das cmp mov imul jecxz xor in les out sub mov div sti xor lods ljmp jle fs (bad) xor lcall and cli aam (bad) jl add mov and js xor xor lret cmp aam loopne xchg movsl gs jp xor clc xor mov in (bad) mov repnz stos stc insl pop push repz fdivl pop mov nop neg out enter inc loope cmp jb fcmovne inc xchg dec jne call test shll enter xlat mov stos xor inc lods notl sti mov xchg dec xchg sti sub movsb xchg out shl in and sbb (bad) cmpsb aad imul mov in (bad) pushf leave or lcall adc fldcw pop cmpsl cwtl sub xchg mov pop xor das xor addr16 fldcw call imull ljmp add inc das mov mov repz xchg xchg mov inc pop fnstenv pop ja ss jb mov popa cmp clc mov mov pop loop cmp mov push adc push xchg xchg dec xor stos movsb pop jae out repnz pusha shr sti out mov jmp out movsb xchg lcall stc incl sub xor ror fsubl aaa dec push daa sub lcall mov jl (bad) mov xchg xchg xchg (bad) mov cmp sbb movsb js insb or dec or pop push add call mov or fldt sbb adc hlt mov jle pusha clc mov aad push mov sbb mov into xor shrl adc pusha rcrl jne fs dec repz lds dec fistp out movsl into sub inc push in dec inc leave sahf notb mov int xlat cmp lea xchg mov ja stos push daa out mov gs jb mov xor in mov (bad) shll mov out addr16 jg pusha (bad) bnd pop mov cmpsb inc mov and ret stos jnp inc fbld fisttp dec hlt mov cmp pop outsl sar or fidivrl lea ljmp jmp sti adc sub mov test mov data16 ja out (bad) ficompl mov rcl leave push lea mov push and out je stos jno idiv xor jae lcall jb (bad) (bad) cmp pusha imul mov xor (bad) mov jbe (bad) aad inc cs push popf (bad) aas test shrl xchg lods or mov mov pop xchg and jae push dec leave and enter in push sbb cmpsl scas ja cmp (bad) aad shl cld and pusha mov popa adc cmp jp aaa push push pusha sbb mov out and imulb jae xchg loope mov and xlat js int lret arpl (bad) stos sub loop fcomip adc pop dec ja stos mov or adc cmp mov mov push ret stos cmp jle jge xor sub pusha mov mov test aas push mov sbb shlb fcmove out jg scas dec xor cmc push mov aaa xchg cld iret dec push xor pop mov loopne add leave xor inc js fmuls pop cmp stos xchg out (bad) in cmp decl mov inc jbe or (bad) or inc push leave clc in xchg imul jae dec inc push popa jno lret jne pop outsl stos pop call test imul sub pop test jae add jae sbb jne add (bad) jmp leave xchg push or insl mov dec sbb inc pop xchg xchg xor jae fistpl scas aad and or imul ret aad mov cs gs cli push mov clc out and push dec stos sbbb and jbe imul inc or cmp and sub (bad) mov out lret repz clc mov scas cmp cmp in popf xor rcrl push pop call fildl (bad) (bad) sub mov push repz pusha ret mov cltd fstpt pop (bad) jae dec lret xlat xor scas sub addr16 add pop mov mov fldt das stos je les dec stos mov int3 call int pop repz mov (bad) roll arpl push fwait push xchg ds cs (bad) in decl shl jo xchg mov sti (bad) lds inc and rorl push mov imul sub add outsb mov sub lret out xor je push sub sti rep (bad) xchg jns jae stos add arpl xor lret add fmull cltd jae push mov movsb mov xor sub pop rorb sub jmp icebp adc (bad) leave or jecxz mov bsr pusha int fs arpl xchg mov sbbl jle dec js ret add shrl mov xchg jmp mov mov sub inc xchg push stos ds inc int pop rorl push sub icebp out sub pop mov pop fidiv dec add xchg movsb pop pop mov ja add cmp clc mov mov jecxz lcall or arpl xchg aaa jmp dec xchg repz arpl add lcall aaa stos dec imul pop movsl call dec movsb ljmpw movsb in inc into data16 stos dec mov call cmpsb xor push and jb hlt aam mov jnp imul xchg sbb sub dec adc push fstp lcall leave lea imul (bad) clc add repnz cs mov sahf fbstp cmpsb cmp loopne aad test sbb icebp or ret stos repz stos fwait cmc sub int jb imul js fisttpl pop and add imul mov mov gs xchg pop push sbb dec push leave adc fild rcl or xchg pusha mov push les sbb xor lcall rcrb incl cmp ja push stc test imul or mov jne jae icebp testb jmp add (bad) cmp cmp or out push and leave loop aaa fucom fwait es push mov jno test and fs hlt inc xor inc les sub add xor jge pop in sbb pop shl inc push cmp xor ss ljmp lret in lcall int mov iret stos sarl xchg lret xchg dec jne out stos xlat dec (bad) cvtps2pd gs add movsb test ret cmpsb rolb push (bad) pop sub jecxz dec popa es movsb gs subb jmp mull or xor jno fisubrl lcall mov push in pop cmp ljmp pusha sbb out jl bound out jno or cmpl mov hlt icebp out xor and xchg push jmp movb (bad) loopne mov nop fistl lret jmp mov jno or (bad) leave add sub mov and sbb pusha xor (bad) inc (bad) sbb negl out outsl adc mov mov sti push add not fcmovnbe lds pop inc shll push inc ret jno stos bsf add adc imul mov pushf mov adc int ficom mov scas mov sub ss sti leave cmp mov popa in or push cmp out mov loopne (bad) repnz ret mov cmp jmp push push fs pop hlt loope dec bound (bad) dec xor sbb das pop jnp lret fidivl xor inc lock sbb fldl jecxz mov mov or fstpl in mov in adc jne jge stos dec loopne sbb sarb xlat mov lret fisttpl (bad) in lock loop xor repz in pop cmp lea movsl sar insl and xchg aas pop pop data16 push (bad) aaa roll (bad) leave dec aaa sbb add or in ret outsb xor inc pop out std shl (bad) mov and inc sub lods lcall in in jmp lret push mov sub sbb lds mov ud2 and test mov pop into jp adc sub adc lds xor xor and out mov das repz and hlt adc daa stos fcoms push xlat mov insb (bad) iret mov inc stos push fprem1 imul (bad) arpl dec jle outsb ss adc sbb inc jp jmp jo mov add (bad) scas (bad) js xchg bound ja mov jne fwait xchg push stos xchg (bad) jae inc jne gs mov aas xlat xor daa pop loope cli fsubr mov sahf add mov mov xchg addr16 lea fstpt xor pop pop mov push xor jbe nop push adcl dec inc xor mov xor mov xor mov xor imull lds or fist mov or push adc outsb movsb mov xor mov push mov pop sub mov aaa cmp xor addr16 repz shll or fcompl and or inc lods (bad) lret cmp xlat add mov sbb inc cmp push faddl pop mov gs cmp cltd cmp int lods push add add mov ja outsb sub cld lahf push jne test pop lret xor xchg push dec scas cmp push sub inc push aaa dec sti nop dec sbb add xor inc je sub imul sub loope fldt xor xlat and push cmpsl (bad) mov xchg sub insl sub mov or imul inc in xchg pop sbb add xor inc aaa sbb cs dec (bad) popf stc lea sub add lea cmp push popa adc sbb mov loop shr cmp and repz adc repz cmp xchg sahf cmpsl sbb enter in outsb xchg mov xlat adc loop int (bad) mov adc mov icebp cmp aad movsb in lret add sbb push fs jb pusha shr int (bad) cltd pop fwait xchg mov mov movsl sub lret std add inc aad xor push (bad) or stos jb sbb cli sub out hlt cmpsb ja add and sbb mov jb ljmp jl mov pop xor add imul mov iret cld sub lahf lds popf xchg xor cmp dec mov test push cmp (bad) enter cmpsb fstpt jb xchg dec or mov dec sbb imul rcll ja adc faddl negl imul xchg (bad) jae pop mov nop dec sub fisubl arpl xchg ss or lcall jmp sbb stos or jg pop imul adc and lret cmp jp lds cli imul cmp int3 pop jbe mov clc mov adc and add sarb mov andl pop pop add dec xchg adc in or pop dec add mov cmp (bad) jge sub add cmpsl addr16 ss pop jns xchg xor aaa call mov jne mov int mov out xchg jge dec fistl adcb xchg (bad) les mov sbb aad pop inc jae inc sbb mov ret jns clc rorl push xor fisubrl lods leave pop repnz inc jns sbb fisttpl cmp or dec cld shrb daa mov rcrl int jns sbb inc sbb lods test ds imul ljmp jae out imul lea push mov insl cmpsb adc lds mov jnp fiadd (bad) (bad) iret inc fwait sbb or lcall stos aam push ret das mov jle vmread pop xorl jae dec into in xlat push stos mov iret push cmp into jbe sbb xor and mov lahf movsb mull js rclb sub xor push popf sub sbb dec sub sub pop aaa jg cmc mov insl hlt fstps mov out jb mov sbb iret xor aam int3 add inc cmp jbe add out push fs mov jle (bad) sub or or out and out and sahf in xchg out subl test xchg push mov insl out and aad into cmp inc jl add sar sub ret xchg mov aad push xlat js mov xchg stos popa or test jae sti enter aam pushl mov sub aaa sub je das sub mov jns inc xor push and in imul mov or insb pop dec ljmp adc sbb (bad) iret push setl nop mov movsb imul jmp in adc dec mov ja insb icebp xor dec mov (bad) jmp pop and test sub mov sbb imulb stos adc out mov repnz ds xor ret out lods push xlat rcll cli lods xchg xor push (bad) fs mov xadd sub outsb xor ss mov add inc addr16 push out jne lcall add mov aaa jecxz mov ljmp add push sbb mull movsb lods scas lods leave fcomps pop dec jne cld into xchg lds jbe push xchg popa arpl cmpsl jae insl insb repnz xor dec jecxz aad mov xor cmpsb jb xchg lds arpl pop leave fwait imul imul pop push xlat jb fdivs dec xor sub push add push notl arpl jo mov out mov mov bound mov in cmc bound cmpsl aaa push pop mov cmpsl das dec in cmp mov ljmp add adc das in gs lahf movsl gs inc sub ljmp mov ret pop stos test and adc lods and les roll mov pop fwait dec cwtl pop ficomp stos hlt push hlt jle pusha mov repz loopne stos jns or cmpsl xchg (bad) dec push push mov (bad) mov and inc cwtl in cmpsl cmpsb xchg pop mov (bad) mov ror lcall xor sbb arpl popa dec dec fldcw jo mov loop stos (bad) mov pop pop adc ret pushf xchg daa dec inc or cmp pop xchg xchg push div pop and je iret push xchg cmp sub and mov mov in sub pushf aaa xchg aaa idivl insl fbld stos shl sbb ja adc xor jl xor mov mov clc rcl fiaddl inc or in lds fidivl arpl ds sahf pusha xchg and add adc ja out int3 outsl push cmp decb dec and jmp loope and icebp jb and out es pop inc jle,pn fs cmp inc jmp inc in in pop pop mov daa jno pop adc xor mov and not push add jmp cmovle je sub movsb cmp aad or lods sub mov add pop pop push test movsb jp xor xchg adc or jne adc js (bad) stos adc aaa xchg fnstsw aam sbb (bad) jno jne adcl jecxz mov jne inc pusha fbld xor sub insb enter adc jae leave loop push dec push sub mov jo sub sub into int call sbb pop stc stos mov jl cs rcl out mov decb and and sub icebp lea (bad) pop pop fucomi xchg insl dec dec push dec jecxz pop nop cmp cmp mov and and xlat mov (bad) add adc sub ret pop add mov stc cs popa iret fs mov xlat movsb xchg repnz movsb push gs pop push push lods ret dec dec mov cmp test cmp pop insb test lahf out aas call ljmp neg ljmp mov dec ljmp or inc pusha pop xchg shrl pop jge dec pop xlat cmp jb insb cmp mov push jo ss jae lea jae add dec fs lahf stos mov jb (bad) loope mov fnstsw fcmovne dec (bad) ja mov add mov lea xchg lods adc adcb xor mov stos and inc and fsubrs das lea sarl xor pop stos cmpsl sbb and xor lret or aad jb lahf stos lock (bad) (bad) aad cmp test in stos or out adc and out dec adc or call stos dec sub movsb out aam and addr16 jp cmp in dec mov jo sub cwtl dec stos mov mov sahf imul lods shrl and mov jmp xor sub cli sbb jno (bad) pushf fdivl addr16 fsubrl mov push test int sbb pop jb cmp divps xor fist sub loop jbe dec fs push lea push ds sbb mov jg cltd xchg lea js xor sub pusha rorl gs test pop pop pop mov add sub cwtl mov mov cmp fs push mov xor sub scas jl and sbb test xchg add jmp mov xor sub pop out jmp adc xchg mov xchg (bad) stos lods lea jno cmp jb push pop out pop test push in mov fisubl outsl (bad) je iret adc xor sub mov sahf jbe out (bad) push sub xor add mov outsb mov idiv (bad) jae jnp stos orl xchg int3 call mov xchg xchg dec stos into add ds aas sbb insb nop inc gs int push mov sahf dec pop mov xchg les lcall mov pushl and mov stos (bad) sbb or ds and adc rorb or sbb jb mov cld push push add repz pop push aam lret push jmp push sub pop std out cmp cmp pop (bad) xor fs dec dec aaa jmpw mov aas ljmp mov imul js push cmc lea jp jno push (bad) outsl xor aaa cld xor clc xchg movsb jge outsl mov imul cmp fnstenv scas push cli jno sub dec int3 jb (bad) sbb loopne cmpsl out shlb stc mov xor aaa incb dec xchg daa mov js stos fbld mov ja outsb gs pop lds sti call sbb dec adc stos sbb dec push mov (bad) mov or mov cmc mov das cmc mov and mov pop in pop scas inc cmp xorl inc pop stc out xor aad pop out iret xlat inc jl mov in jbe (bad) mov push push xlat enter enter (bad) add imul jg jnp dec pop shrb dec sti cmp jmp ret sub fldt stos cmp pushf or mov (bad) imul das inc gs lret movsl iret xchg sbb mov xor or xchg mov int jecxz fisubl mov test ret mov (bad) xchg (bad) cmc outsl cmc jmp je pop push lock pop pop in icebp dec data16 fs scas push push fcmovne dec int jo xchg sub inc je or adc stos push add xor jp pusha lret jo jae xchg pop pop xchg fildll jmp or mov xor or dec aaa jg dec mov jno sbb aad or xor pushf enter popa xlat fbstp (bad) hlt cmp aaa add pop (bad) mov rorb adc add push mov lret lret fwait mov sbb add rcrl xor dec nop xchg cli (bad) call repz xchg int sub inc call mov pmuludq jle lds add and in xchg iret pop mov mov btc sub imul dec imul push into mov gs cmpsb xor rcrb pop cmpsb jge mov push (bad) mov mov sub push add loop std repz xchg mov stos mov in cld int3 inc cmpsl hlt mov sahf xor mull mov cs clc xlat push sti cmpsl pop jp aaa sbb cmp ljmp jl sahf in arpl or pop mov (bad) repz mov aam jmp out sbb mov shrl add sub ljmp cmp stos fdivp imul mov pop pusha dec push xor push ss jns cli dec leave bound xlat xor pop lret int cmp pop pop mov sbb leave gs bnd stos mov jb add push add mulb push int3 add jb inc imul scas xchg movsl ret and mov ljmp or aad pop push repz jge xchg add add sub bound push xchg ds lahf ss and aaa lret es dec out js aam mov aaa mov stos lea push ja movsb into jle and mov mov fisttp sbb mov sbb fwait inc outsl imul adc jo jl pop mov add aad adc and rolb test sbb push pop add sahf jle shl out in mov jb (bad) adc push sbb lea inc jb ret mov sbb mov arpl outsb lahf push dec fwait cmp ja lock inc dec cli xor mov pop (bad) mov jg out push (bad) mov jnp imul xor xchg fcmovnbe dec gs aad jno std mov lcall mov sti mov add imul popa pop add je and mov push mov inc adc mov and push sbb pop cmc arpl (bad) xchg movsl sub fs inc inc iret jo fmuls mov enter mov mov xlat or cmp ret and xor (bad) js jnp pusha aad jae mov icebp cmpsb jnp jle xchg inc shrl sub cmp imul not stos cmp lcall clc call movsb mov (bad) pop pop jmp xchg les jp (bad) add out insl jge je cmpsl jno outsb popa aam jns and scas call add mov rcr cwtl jo mov lahf sub (bad) aam and call clc fisttpll or xor les fwait imul adc jg xlat jmp test fcmovu mov mov aad mov call push fbstp mov push es sahf test jl mov adc inc jg sub and push and sbb sbb js push sti (bad) aam js sub fnsave arpl ja inc push push (bad) mov js push arpl lret mov push stos in fdivrl pop jno hlt mov ja push push lea mov sbb mov or mov cmp jno jae fldcw pop lea (bad) and and sbb fwait or mov popa jo pop mov outsb sbb outsl pop mov cld mov lret sti jbe ljmp lock pop sbb pop lds lds dec imul cmc push bound fistl test xor mov inc pop lea mov xchg pop jb bound push stc cli mov mov notl fbstp imul mov leave arpl je ja jae addr16 adc pop mov mov jae pop fldt idivb mov mov cli arpl call dec test push fcmovnbe cwtl daa add in aaa lea cmc stos jns mov mov mov in (bad) rcrl je xchg lods mov and xor mov insl fcmovbe pop (bad) loope ja scas fs hlt fmul jmp xor cltd and mov mov es push in out (bad) and in fucomi out dec push (bad) sbb pusha cld rorl clc sti lcall adc adc sub adc je ja insl repz or pop mov pop and adc outsb int3 xor out rcrl pop gs stos dec push cs mov arpl fs movsl jno xchg idivl sub ret into dec push dec nop ljmp popa and ds sub push mov dec or sbbl jmp cmp popf sbb xor addr16 popa inc out inc imul (bad) pop pusha hlt outsl iret stos loopne mov fldenv repz dec mov jb,pn jns dec xchg sbb inc mov mov hlt movsl mov iret jnp add add dec int stos and test xlat leave or push mov stos stos in push sbb call cmp int3 mov imul dec mov add push push dec sti ds aad inc cmp fiaddl mov cmpsl aaa in je mov lods dec xlat cli dec outsb (bad) xor clc aad sub (bad) fcoms add mov enter call or lods or flds lea sub aad pop xor inc cmc rcll aas leave xchg fwait stc stc fldenv jb fistl addr16 mov aad mov roll arpl sbb or aas dec xchg pop fs nop cmp int data16 ss or sahf in ja ja in mov push or pop push iret fistpl jae and ret xor xlat incb nop sti mov fucomi sub (bad) int push dec dec mov das stos xor lret xor fsubrl push cmp push add mov sub push jb cmpsb or fisubl idiv push push sarl jnp push cmc (bad) lahf loop add js mov mov push call outsl aas lret jo dec lea pop push imul fwait rolb ja mov mov mov push out pop arpl icebp rcr mov fs mov dec xor push push rcll mov aaa mov stc mov stos cmpsl fldl push loope pop sbb lret cmpsl scas mov subl mov dec std push sbb sub test jmp xchg sub shlb outsl daa (bad) out push sub fcmovnbe xlat jb dec pop jne inc lea add frstor iret outsb sbb push sarl push lock dec jmp stos nop cld mov pop xchg fmul adc in mov jecxz jnp mov mov xlat outsb les xor inc adc orl or dec in xor jne popa (bad) mov rcrl sub or fildl or stos out lret mov jne test in jl push rorl mov push ret push sub fucomi outsb mov jne fs mov dec stos jecxz rcr loopne push mov push ljmp pop jbe insb insb xor stc cmpsl dec or mov ficompl les xchg xchg in push adc and mov arpl jnp lds push pop adc das arpl dec lcall push mov aas xchg pop iret inc cmpsb sbb jne and (bad) and out cmp push fiadd aad push bound pop out or pop sub mov sub arpl inc arpl imul (bad) cmp icebp jmp push jo addr16 jnp xchg fsub push push mov pop mov mov addr16 push cmp into add in cmp and stos cmp (bad) insl nop pop pop fdivr out xor xchg cmp sub fdiv aam push inc leave fstpt in push cmp and push dec mov addr16 mov dec mov mov mov pop int pop jne xlat outsl rcll lods aad sar adc mov pop clc jg lods xor stos popa movb push icebp cld pop insb xchg inc ss adc push inc loop scas adc xchg push push sbb sahf dec jmp in dec sbb ds movsb cmp mov cld jl repnz in cmp cli imul gs mov push repz dec add adc fdivrp sbb pop imul repz mov arpl xchg mov xor stos shrb insb fstpl popa cli pusha push imul repnz out scas jl jecxz or sub xlat adc imul dec repz pusha mov xorl test jo cmp mov or jg pusha push adc out pop mov hlt ja jns pusha jl js inc and inc push addr16 xor lcall sahf push cmpsb inc xchg sub jmp jb jecxz pop (bad) imul leave sub mov cs jae xchg lahf jmp pop (bad) pop addr16 nop pop push ljmp jnp pusha lret rorb add rorl popf mov test in pop add je jae push cltd jno push lea (bad) stos push ljmp xchg mov push pop dec lea aas jne iret mov jge pop inc ja in cmc mov enter sarb out mov fs dec inc test mov leave cmpsl jno cmpsl (bad) out dec outsb pop insb enter or stos mov add add push or add (bad) es ljmp or fs xchg in xchg (bad) divb and sub clc call fistpll icebp jge push push stos sbb outsb push cmp sub imul adc out fisttpl in stos add adc mov daa fildl adc dec push push es dec xchg xor lock idiv cli cmpsb adc add gs mov insb inc xchg inc out inc cld inc addl bound int3 loope jmp pop pop mov rcrb pop add xchg adc sub jnp (bad) lcall call or incb outsl ret outsl (bad) add bound jg (bad) repnz mov into (bad) in mov push mov icebp stos jb and cmp aaa mov sub (bad) mov push inc adc mov mov lcall push subl imul lods rol jno out adc and mov cmp inc push push js sub dec push (bad) pop jle pop mov dec clc nop push jb cs push pusha cmp insb stos jb std popa stos pop pop xchg jns pop js and xchg pop mov test arpl fsts and sub mov pop fs adc nop fsubrs aam adc and mulb scas je stos sub (bad) dec sbb jno inc cmp outsb stos imul cmpsb sub push jbe xlat mov add gs imul add push stos inc push cmc dec sbb mov xchg insb sar stos lock dec int lcall popa outsb dec cmp inc mov rcll cmp pop adc jae pusha sbb orl cmpsl movsl insl stos sbb bound fbld inc loop xchg push pop lea add dec aam push int3 xor pop cmp pop pop out push stos cmpsb ss push add arpl ds push and leave es (bad) int loope or or pop add sbb push and dec nop jb sbb dec call iret pop ja push fstpt sub arpl mov lods pop js repz sbb or js pop dec xchg dec (bad) cmc adc bound insb and push sub inc popf mov push dec repz sbb fsub ja adc lods and sbb iret adcl pop sub dec clc mov add mov (bad) (bad) lea jns mov stos loopne pop push dec xchg mov xchg adc add cmp (bad) in call adc sbb mov stos mov add sahf mov push or dec and in lea jo jb jmp movsb mov pop sub and jle inc outsl mov xor pop mov dec mov jne jecxz cmc rcl jno insl pop xchg mov lret (bad) popa insb lcall sarb pop aad gs xlat imul clc adc adc jnp stos sbb rcll out jl ret jns cmp clc psubw dec jb xor jb cmpsl shlb jbe push and inc out jno push push cmp js or sahf int3 mov pop inc inc jg inc rcll and mov dec shr xor fsubr push and ret push icebp mov jl gs fstpt jbe mov push inc (bad) out dec das adc nop xchg dec xadd sub inc or mov xchg insl je add (bad) mov lret mov pcmpeqb or outsl xchg push push stos xlat adc pop lret decb call inc stos int3 mov les cmp (bad) dec stos sub mov insl sub data16 cmp sti mov or arpl add aam lret cmpsl sahf cld push adc loopne pop pop and std xchg pusha shr dec mov testb inc idiv lock mov lds es (bad) outsb leave lcall jle sti jmp pop in lods pop sub sub testb lea adc sti repnz add fcmovu dec rdpmc stos sub out inc sbb dec pop (bad) sahf pop cmp bswap mov fs mov mov sub jne mov cmp fwait xor jno xor adc xchg movsb (bad) sbb mov stos aad sbb pop imul and mov sbb nop call xor (bad) sti outsb ljmp dec (bad) jno idivb negl sbb repz loop mov mov (bad) xchg sbbl iret std inc xchg adc repnz ljmp insl les iret lret ret imul gs pop mov mov pop cmp push jcxz out adc lret push add xor das mov jnp adc stos fistp or and ficompl stc mov int jbe lret sub push jecxz push and push mov lock insb (bad) imul jg ljmp addr16 push add dec dec mov pusha push inc loop gs sti repnz popa and rorl push stos mov movsl js rolb out lea xchg cmc or push jecxz add jle xor testb imul arpl rcl pop sbb sub inc in jecxz sbb xor rep push mov jne fstl mov insb gs leave jne ds arpl sbb pop into add icebp lds pop cmp out dec iret pop repnz in pop xor stos js mov xchg cmc mov aaa dec add xor dec mov mov jp shrl sbb (bad) mov jbe rcr push (bad) inc pushf (bad) xchg cmp icebp stc sti xchg mov pop insb sub stos xor inc loopne mov mov pop lds aam jg idiv stc lret push xor mov push xchg hlt call cwtl scas sbb sub into pop sahf into xchg out push pop jp dec mov jbe imulb mov fildll xor imul lock daa sub or cmp es sbb stos (bad) or push pop xor xchg ljmp mov add mov daa leave addr16 (bad) or and int3 jns (bad) cmc lock and mov icebp cmp or stc fbstp adc dec xchg add pop push fwait into pop inc or mov dec adc roll jl outsl cmp imul inc mov scas push je push mov and movl nop clc pushf add fdivrl push jo stos push out (bad) mov cmpsl inc test stos cs mov cmc pop aaa movsb or sahf loopne add mov lcall push mov mov pop and mov dec xchg jo ret or sbb iret adc pusha adc stos pop lret add fnsave adc xor mov xchg pusha dec shl push mov cld jno fldcw leave mov cwtl fistl inc mov test pop xor addr16 (bad) aas mov and push stos stos enter (bad) fistl push cmp lock dec push cmp inc sub rorb sub pop inc test dec cmp gs rolb int jb fs jge nop push mov or and js add in dec mov sti dec push outsb dec ss xor loopne inc (bad) push push stos sub mov loope nop imulb in pop cmp test jnp sub fs daa jle adc add jb insl sbbb and ret cmc in sti imul imul fcomps push fwait fwait pop sti jne lea xor pushf roll lahf mov lcall outsl movsb les out pop jmp testl repz lods cmp jle push jb daa sbb lcall dec out xlat push mov ret rcl xchg xor pop test aaa mov and mov in mov enter stos cs xchg xlat inc insl jns add repz jle dec mov movsb rorl xchg das out fs inc add or movsb mov aas fistl mov arpl roll rcll (bad) mov sub mov jecxz test leave jnp xor imull jmp in (bad) out arpl pop pushf push xlat jge push movsb cmpsb sbb ja xchg fistl pop inc push inc dec insb pop inc push cmp ss and lea push pop aaa dec xor subl sbb movsb and rcrl jmp addr16 movsb (bad) jne xor sbb notl repz or pop ljmp cli sub arpl pop mov pop xor xor vpunpcklwd mov xchg loop neg ljmp aad sub xchg fstl lcall pop idivl data16 insb xchg push mov mov push sub leave mov add inc (bad) mov push xor repz or pop fistpl jmp cmc dec pop or movsl pop ret xlat fisttpl arpl push stos adc push mov or sub fbld push stos adc leave dec dec in cmp cwtl andl sbb stos or jo fcoms movnti sub pop xor (bad) mov jnp (bad) add popa in push pop lea mov insb cmp push sub iret cmp (bad) cmp dec test xchg jae xor cmc test sbb mov loope (bad) pop pop pop sbb shrb daa test jae aad pop and dec xor (bad) mov cmp sbb ljmp mov cmpsb mov jge mov aam js jl pusha pop icebp jno int3 hlt gs mov data16 xor out mov jl bound push push int add push mov dec jae mov adc pop mov out jno push lods fbld addr16 jae adc xor adc push (bad) out dec (bad) mov inc (bad) leave add push rcrl repnz mov ja stos ja lea lods out sahf adc jne inc xchg int3 outsl adc in insl mov stos sbb stos imul push jnp movsb adc loopne into xchg bound mov imul stos mov hlt stos push lahf movsb mov fcomi mov stos out add push int sub pop imul pop aas jb insl cmp cmp push adc aad sbb int cmpl add stc push nop out cmp and mov pusha adc fsubrl das pop mov dec sbb repnz mov push les lock hlt or xchg bound bound lds cmc mov jl aaa pop dec mov xor out or inc dec jns or insl jne jne sub push push dec push mov sti dec ljmp mov test in push hlt cmpsb pop movsl pop (bad) mov (bad) or frstor pop mov addr16 xor imul cltd (bad) push dec addps jnp das insl idivb and push and stos repnz loope pop mov jb cmp dec fldt sbb jmp jae paddsw add add loop push cmp inc add and push mov dec lcall enter pop arpl pop dec into xchg adc pop lret jle push jle gs int (bad) clc pop data16 arpl mov fimul push cmp cmc dec mov bts (bad) sub mov test inc jnp jns pop je xchg icebp jle leave cmp jae push jne cmp aad bound pop outsl pop push repnz rclb es sti sbb push sub and pop stos push sub mov cwtl and and push add outsl sbb jmp leave int jne jbe ja dec gs and negl jl cwtl movsl (bad) rorl test js xor push add mov cmpsl (bad) in pop pop insb mov push mov hlt aad push lret shrb push jb push and jne push and (bad) imul aas push bound jno loope jle sbb push pop bound dec mov fwait xchg fidivr sub mov (bad) sub and mov cld cs pop ja push lods arpl gs scas movsl fs adc xor sub mov (bad) mov popa hlt and mov rorb mov dec clc or cmp pop cpuid dec ss pop in stc xchg packssdw fnsave xor sbb lahf push bound xor movsl adc pushf stos xchg call cmp and outsb pop xchg push fistl jge xor out sbb daa or xchg adc mov stc jbe repnz loope push jno dec hlt xor push add sub fstpt mov ficomp add mov loop arpl cmp aaa pop ficoml fimull xor sbb mov jbe dec mov cwtl outsb stos cli pop jle xor xchg xchg gs jne push push push imul sbb and mov clc adc jae imul mov pop scas testb adc in xor ja ss test js xchg movsb push in (bad) mov mov jb lahf lret mov aad jnp sub jae jns add ljmp jne jae push (bad) jle xor push lcall std lds pop cmp stc (bad) sarl ja sbb sub push push scas mov push xlat ss fmull jecxz data16 or enter mov je sub xchg jl xchg shlb (bad) cmp sbb cmpsb push or inc arpl sub dec cmp (bad) add push pop loopne js push stos repnz inc ja xorl or lret adc sbb sub xor fs mov lea nop mov popa pusha aam jno pop add clc cmc idivb (bad) inc xor cmp into ljmp in lcall xor xchg xchg sub mov movsl sub push stos rcll inc data16 (bad) ror sbb add mov cmp jnp add fwait gs pop adc mov dec ret mov jmp int in aad clc jne inc (bad) repz popa divl mov jbe,pn and push stos sub mov cmpsl cmp dec fmull or jbe rcr or sub jge cmpsb push rcll dec out (bad) xor xor je cmp jl jecxz sub gs rorb push cmp cmp xchg lods push iret add or stos mov xchg les sbbl imul ja arpl pop jae lods push inc out sbb cmp fcoml and insb cmp call xchg ficom mov push icebp dec divl lock or jle mov ja adc (bad) fsts in imul push dec mov add jge fs cmpsb pop jg sbb dec rolb cmp data16 adc jp mov inc sub push ss sub push shlb dec mov pusha sub fs ljmp jecxz cmp mov fstl mov addr16 cmc add enter adc jne or shll in jb xor fistpll fildl push leave notb xlat (bad) loopne (bad) rep adc js dec sub hlt jno aad ret (bad) mov adc stos push cmpsb jb cmpsb push xchg daa pushl frstor mov xlat dec fidivl jb std xchg push jmp sbbl cli ja xor mov fisubl lret lock out jno jae jge sub iret fistl lea adc idiv (bad) dec dec xchg pop mov mov and pop lcall mov adc jnp cltd jae mov popl (bad) cmp add pusha js jp out gs stos shl add jbe xchg addr16 jmp xchg je enter or int3 mov inc jnp inc xor insb fs dec mov push mov lock sub hlt xor sub pusha mov pop sbb int3 xchg mov xchg (bad) into mov (bad) xor mov pop xlat leave xchg pop stos lretw mov or lea (bad) rcrl in fisttp sbb mov cltd fstpt imul push insb push dec pop xor jne outsb sub cmpsb mov pop sbb mov std xchg aas mov push (bad) xchg lea jmp or pop stos (bad) mov sub pop inc cmp (bad) jnp mov push jp pushf in jp les arpl mov cmp (bad) test jecxz stos (bad) adc jb jo mov cmc jle pop xchg cmp imul sub sub icebp xor push out inc cmp mov jbe mov into push inc stos popa outsb jne daa mov or fist nop and pusha out pop sbb sbb loopne mov outsl and lret xlat sti mov jecxz popa add imul movsl (bad) and jmp push dec inc fisubr xchg repnz arpl pusha dec sbb leave fisttpl ja mov arpl andl rcr inc pop ss push cmc xchg es popw xor sub fwait movsb (bad) push xchg pusha aad xchg dec mov mov mov push jae mov cmp push imul aas pop pusha sti add mulb scas aaa mov addr16 pusha add pop adc inc je mov jle ret scas sub dec rcll hlt dec shll mov insb jae data16 mov not xlat sbb pop xchg jb (bad) imull subl mov ror inc cmc scas sbb push sub leave inc or jp call push pusha aas mov dec sarl pop popf fadds clc popl cmp (bad) (bad) popa sbb pop (bad) mov push and mov inc bound out dec (bad) jge push fisttpl xchg add sub loop jo ss das add mov push sub pusha out (bad) test mov popf cmp sbb xchg pop fstp xchg cmpsb xor xor (bad) repz mov adcb mov stos push mov mov push and aad idivb adc pop sti pusha into stos int (bad) add jbe cmpsl addr16 stc adc jne arpl and stos aam fwait jg movsl sti mov mov imul push pop pop and lds lea cmp pop mov mov sub mov inc sub lods aad mov mov and (bad) sub adc ss jmp shrb roll pop mov xchg mov mov and pop or inc out cmp xor push push cmp aam imul bound inc adc ret inc xor (bad) dec in and jmp dec stos sbb movsb add (bad) loopne jae dec sub fsubr repz mov add or lds stc psadbw into cltd pop push cmp cmpsl xor jmp test cwtl push xchg jne pop sbb or fucomi adc or in loopne and xchg (bad) sarb sub insl lret (bad) lds pop movsb xchg jns jae insb fstpt push xchg jae xchg mov jle enter sti push xor sar rcl jb lret sub enter push or pop pop aad (bad) xlat xchg xlat cmc jl xchg push jmp pop movsb int3 (bad) or inc inc mov (bad) arpl in sahf cmp xchg es imul adcl and mov imul sbb cli and jg or (bad) js sub adc insl jae xchg mov dec into int3 pop jbe push adc iret xchg jnp pop sub mov dec cmp pop push push xchg xor cmpsl leave scas test mov mov and pop xor (bad) push mov sbb call xchg jle adc das in jl and (bad) dec xor popa arpl sbb sbb sub mov xorl lret mov sbb cmp lcall inc leave stos adc sub rcrl sbb test push pop xor mov or into mov ficoml mov enter flds dec ficoml pop adc push jbe mov les icebp add jg xchg jbe pushf inc push inc pop jns pusha xchg mov stc fs pop fistp cmp test das dec lret dec push stos imul aam and fstpl mov roll loop cmpsl int3 xchg inc sub fisubl xor dec sub out stc add sub imulb jno mov xor inc pop sub int lcall movsl and pop pop lods rcll mov divb inc and movsb inc push lret pop inc icebp es in jae stos sbb stos lret popa xlat stos and (bad) lock sbb and pop es jb mov pusha or in cmpsl push enter call loopne (bad) xor rcrl mov mov cmp or pop jae jle and push fist lock les gs cs xor mov pop dec call jbe jmp jg or out mov jne clc into ds xchg aam mov cmp sub sarb fisubl in aad loopne orb xor sub scas fnstcw adc adc inc enter mov (bad) lds repz dec enter sub imull scas lret call aas cmpsb push lcall push movsb adc mov adc stos jbe pusha imull icebp repz mov push push pop jg mov into push sub jo mov out mov and repz xchg xor gs or sub or outsl xlat mov cmp ss stos push clc sub sub repz add ljmp fimull mov dec adc shrl mov sub (bad) out jo loopne cmpsb scas add add cmp xor es pop inc push push jae (bad) out sub sub cmpsb mov jmp ljmp stos mov in mov imul and ja lcall dec fistpl xchg subl jmp shr lcall loop xor icebp mov sbb out lods rorl and rcrb ror mov ds (bad) push jmp icebp out mov mov fwait or int sub out mov sbb jne sub (bad) dec jmp mov mov scas pusha jmp adc cmp pop lahf jae out xor adc inc hlt dec ret xchg aas pop mov insl rcl pop cwtl mov int mov gs xor push arpl (bad) adc out jae ja sbb inc jne imul jnp push mov pop (bad) in (bad) lcall mov mov iret jne movsb nop push add aaa repz mov dec lea adc (bad) fmul push push jno in shll jb add insb jno testl sar inc mov xor fcmove jae jo imul imul xchg cmpsl jne (bad) xor out cmp subl daa adc flds imul cmp int adc (bad) xchg in xchg cmp adc jae imul push xor dec lds jg jne mov movsl sub iret ja mov outsb mov mov js xor mov call sub (bad) cmp idivb js cmp ret out arpl jb cmpsb jl pop inc jns pop pusha test push insb (bad) jg (bad) pop jp stos imul scas sti jno cmc add sbbl stos test lds (bad) into pop xlat (bad) sarb jmp ss jo push mov stc insl clc push add mov test pop or jmp je inc dec daa pop je idivl xor frstor jecxz aas pop addr16 jne,pt add cltd xchg mov jmp sti test dec fsubs add (bad) jae add mov and daa push enter sub push pop (bad) lods lret or fistpll ret xor jge roll lret cltd jo mov jae adc mov hlt pop shr fnstsw ja lock mov sti sub repnz push jo arpl add lods cmp daa rorl enter mov push fprem1 jb cmp lcall sub jne loop lret rcl or mov xchg and push shrb adc outsl adc mov jne xchg adc inc imull mov sbb (bad) negl (bad) repnz ja call jecxz cmpsl sub sub out inc into mov lret daa dec inc xor lock cmp pop test gs outsl test stos fs mov sarb inc push pop xor je aad xor dec push (bad) hlt cmpsl jbe orb pop sub jecxz xchg jge mov test lret lret sarb cs dec dec (bad) dec mov scas xor sbb pop jb push xor sbb imul mov push movsl daa mov jl aam push add xchg xor jge xor xor aaa add lea (bad) adc mov jns pop addr16 and or sub jmp inc jb or or cmc and xor (bad) roll jp xlat (bad) stos add jmp push imul pop adc inc mov out adc iret or int nop int3 lods mov adc hlt ret (bad) aad (bad) adc mov arpl or push stc mov jmp sub fldcw dec push leave or pop and lahf nop push inc sbb out ret or or sbb repnz stos mov clc adc lret gs sti ja stos fwait jbe fnop push imulb dec jno loop fwait add jne out xchg pop or pop or cmp lret cmp inc mov fnstcw sbb push movsb mov fwait das shrl sub jnp fisttp xor sub xchg pop jmp push insl imul mov in cmpl jno inc dec enter sub xchg inc cmp data16 cmp stos push sub push nop stos (bad) dec pop and dec stos push add gs jp mov in (bad) and jnp fcmovnu sti mov in aam push popf clc mov call popa sub push iret pop lret call jnp bound xlat imul mov pop inc push and insl repnz jne push jl sbb push xchg jo call sub arpl imul ffreep aad stos imull aaa popa scas mov pop sbb xchg push bound adc add andl outsb cmp dec jnp mov lret (bad) lahf jecxz (bad) fdivrl xlat pop mov lock mov pop jecxz push aaa mov mov push push mov jne and jne shr adc inc mov lret loope sahf fcmovnb in movsb xlat mov dec dec or shrb add mov insb test mov add stc push stos lcall fistp xchg arpl outsl mov imul lcall dec movsb inc cmp daa lcall (bad) fcomi mov stos lcall (bad) pop mov cmp mov sti pop inc cmp mov pushf pop mov stos rcr push sti mov mov add jl sti aad lret xor add jmp ja add push (bad) mov push imul bnd mov xlat cmp insl mov stc movb fwait ljmp jne stc xor pop (bad) or inc aaa adc pusha xchg push xchg cltd mov cmp test rorb dec push rcrb imul sub inc stos sub or gs pop (bad) push popl arpl mov cli nop sub loope lea sarl sbb scas xchg leave mov mov shrb sbbl lds push (bad) out test js mov fwait sti popf (bad) dec cwtl shr pop cwtl jne fcmove sti jnp jo mov mov arpl cmp dec js mov push push pusha cmc jae lret dec or movsl shrb inc lods fwait sbb mov jmp imul addr16 push pop jbe out (bad) jb jnp cmc sar insb or je imul jo mov gs int sub push fprem1 dec jo ja lea shrl mov add (bad) inc ss jne mov cmp cmp inc movsb mov inc not pushf jecxz rol inc test cmp and ss dec cmp rep pop xor xchg repz jns pop sub jp lods cmpxchg dec pop imul pop adc pop jge cmp (bad) cmpsl shl aad test jno jno cwtl shlb (bad) ljmp and ja ja (bad) fisub notb aam bound lock xchg hlt add icebp inc xchg add imul mov aad aam popa in sub adc pop insb cs shll arpl adc ja push jae lea xchg xchg add cmp arpl movsb outsl push jae icebp jno mov pop push dec mov sub sbb fstps negb leave mov pop js and mov rcrl mov pop imul (bad) icebp add insb stos fildll push fsts js ja inc pop push jle (bad) mov dec cmp pop jecxz jl fstpt ja xorb outsl fabs lea mov mov jns insb push jmp mov xchg push jae iret push addr16 in sbb hlt dec fwait dec outsl rorl mov mov popa push mov in outsl int mov push pusha neg adc jle rcpps dec scas fisttpl mov aaa arpl ljmp mov inc or or pop mov fwait outsl in pop movsb lock sbb insl dec jge leave mov lea out arpl xchg rcrb jne dec sbb pop push push sbb dec xor (bad) in in aas jns jbe pushl iret jae push mov rcll sub (bad) roll lea (bad) push ret sub adc xchg fidivrl push (bad) in pop divl jb mov inc jb das add not pop mov cld and sbb jg popa pop adc lret into and dec fistpl push dec mov repnz xlat or push stos mov popa jb jns pop imul jb fsubs fbstp fs movsb je test xchg std sahf inc subl (bad) mov mov pand sub leave pop jb divb cmp addr16 sarl push cmp and std fsts cwtl adc cmpsl insb mov jnp jo cmp lea mov outsl jge sbb pop test pop jno xchg jne icebp jae and jo mov add pop dec pop outsb fnstcw out pop pushf outsl pop (bad) icebp std sbb mov sahf pop (bad) pop xor push test imul push cmp jg inc and movsb adc imul hlt icebp mov lret ja pop push or jb (bad) xor sti adc xor xor out arpl mov rcrl xorl jle inc mov outsb sti (bad) mov sti loope outsb sti sti movsb outsb sti inc pushf outsb xchg ja inc imul jno lds mov pop (bad) and in dec flds sub iret imul dec dec mov xor dec sub cmp cmc adc mov push jno jg leave movsb outsb dec cmp call divb cmp fstpt jne cs inc jmp sbb mov jg es flds pop mov jo sti push clc push mov jo loope fmull ljmp adc jne sbb sub and adc xchg mov or mov cwtl out inc jg add fidiv mov fcom dec cmp pop mov rcll xor mov or pusha fucomi jle and daa push jmp (bad) (bad) leave cmp add or pop outsb mov pusha fwait jmp aam mov push rcrl inc xor dec daa cmovp add lods mov mov adc ja cmpsl mov ficoml xor mov mov cmp fdivs mov jo adc in jnp sahf pusha fldpi call pop leave bndstx negl push pop dec aad pop jmp xchg cmp fs push mov mov add dec pop insb clc mov dec push dec jecxz outsb dec clc pop push gs cmp cmp mov add dec fwait cmp insl insl mov mov pop (bad) (bad) js movsb mov mov jl lock pop mov or push dec push cmpsl jae dec lahf ljmp cmp xor inc sbb out movsb push scas fstps js in mov mov lds ret (bad) dec mov mov or loopne adc sbb mov xor sti mov aaa dec mov outsl repnz aaa dec in je mov push xor jmp gs dec das pop call jnp pop dec pop movsb fsubp mov aas leave stos aaa push insb mov lock aam mov gs insl ljmp inc bound testl sub xchg xor mov outsb jno ljmp pop sbb or imulb jb jne xchg add es bound (bad) sti stos fdivl dec ljmp lea push je out inc fxam outsb cmp loope ljmp pushf pop in push jbe fs push dec or in mov jo sub inc sbb hlt and push xchg mov sti pop scas cltd rcr add xor and insl insb lcall sbb aad sti lea pushf icebp in stos cmp dec jo ljmp xchg insl adc fs push sub fisttpl js add dec adc loopne lcall mov (bad) mov jno hlt mov sbb js fist cmp add aam push mov orl xchg movsl jle jl dec adc xchg sbb js lds xchg loope mov (bad) jb popa pop sbb pop dec pop data16 (bad) jno inc icebp xor push bound jg pop shrl or jb xlat pop lret into push push je mov adc push psubusw icebp push cmpsl jno jns movsl cld rorb or daa or rorb mov mov loop sti jo add dec jns jbe ja movb iret sti rolb push addr16 in scas in out addr16 test iret imul stos jmp cmp add aas (bad) push lods pushf test (bad) ljmp out out mov in std and pushl ss (bad) xlat ret jecxz sbb (bad) cmc fisttpl inc jb negl aaa cmp mov cld popf std push inc rep jg sbb or lods pop loopne cmp xlat js repnz in inc stos (bad) mov outsl lock push jg mov or push add and lock xor rcll pop pop or adc mov (bad) cmp inc dec sti push inc cmc xchg mov shrl mov pop add in test (bad) (bad) add adc (bad) sub aam or lock into push pop pusha mov fs sti push lea je pop jae ljmp lods imul in (bad) jae adc loope push pusha iret jge test lea icebp push or sub movsb jle dec sub inc xor leave cmovnp pop xor mov inc inc xchg js push xlat stc daa clc adcl movsb xor out stos push mov (bad) jmp sub jmp data16 cmc stos inc lcall arpl fimul dec loop scas sub push mov mov jnp cmp xchg mov and pop xchg dec (bad) imul push jnp inc adc and rcrb (bad) xchg pop push loop test add pop cli jmp ja push jg xlat cli or (bad) int mov xchg hlt or xchg out int3 mov mov mov add jge pop test outsl sahf push jg xchg mull push je loope in cmc xchg mov (bad) repnz xchg pop incb addb (bad) dec sbb ror jb mov ss and lret mov ljmp sahf push push push out or pop inc scas add ret push bound in stos push push call in add imul test xchg scas jo or stos fisttp and imul push mov stos cltd push mov cmpsb xchg pop inc xor icebp sbb imul sub or (bad) loop in test mov sbb and fs bound xchg push mov push jge sahf push or xchg inc hlt pop leave cmpsl mov jne int push mov (bad) pop sbb dec xor loop jmp cltd cmp in sub adc iret das pusha outsb mov inc das arpl mov int push jnp pusha iret mov push lea out arpl in xchg imul iret ja scas jne fildll xchg jmp jg in arpl fcoml inc pop inc out jae or addr16 outsb xchg jb (bad) fnstcw aas jbe mov arpl pop sbb xchg popa mov pop lods fs xchg enter pop mov push imul testl popa xchg popa jmp mov orl fnstsw or cmc pop nop test adc dec or aad mov push call cli pop mov cmc das stos mov sti fs cltd xchg adc and (bad) insl sti es dec cmc fnstcw jno jp and pop sbb rcll movsb mov popf cmpsl sbb shrl dec add outsl xchg and imul insl popa adc shr jb jno adc popa hlt inc mov dec cmp sahf gs mov jmp addr16 movsb sbb dec das xchg pushf mov adc jl pop mov fwait jae xchg pop pop (bad) fadds loope mov fimul jmp nop mov sbb mov pop cld shlb fdivrl cmp pop insl popf xchg inc dec aaa sbb fs sbb mov repz sbb hlt ds in dec insl jg jo dec jbe fs mov arpl pusha outsl fwait add test sub popf and in mov ret dec xor jb cmp add and (bad) xlat (bad) mov insb push jnp dec sub mov aam and (bad) jae es or ds pop movsb test add notb fwait adc mov mov mov fwait push sbb out fdivs inc ja xor xorb dec jbe and inc ja ljmp sbb bnd push pop scas and lods push nop xchg roll dec dec add xchg and cmp sub inc out push push sub pop adc lock jecxz sub mov movb mov (bad) sti lret mulb insb xlat int xchg push shr and aad sbb xchg mov xchg push aam mov js std mov repz in jb loope out dec out (bad) or jb jmp adc jno sub or sbb pop outsl cltd ja imul jmp jg jmp out insl dec lahf ret in test fnstsw mov push push xchg xchg dec pop inc and jmp jne jle test fldl in mov jge out mov and push jmp (bad) jne or ja stos mov sub lret mov dec push add loop in jmp and aad mov icebp pop pop insb sahf bound lret add mov (bad) ja jge mov pop sti divb cmp addr16 mov fsubr add xor jb add subb or adc outsb add ss test or mov inc sbb sbb hlt jp jno jg xchg or mov (bad) mov inc cli sub rorl pusha iret and add test mov js js ljmp mov outsl xchg outsb or imul fcomp (bad) pop push mov arpl lock stos loope pop xor xchg add pop jmp jno cli ja fmuls pop or push fmull pop xchg inc jge dec cli (bad) das mov and outsb sbb lock lock add or cmpsb fdivrs fild sub les jae sub popa stos (bad) lea dec js dec xor fwait nop movsb int cs jno popa repnz xchg aaa pusha mov lea inc and add pop pusha lds mov inc fs xor and ds pop xor arpl sub (bad) sbb dec sub dec inc ret push scas cmp inc xor sbb inc pop fisubl mov inc in cli int3 stos loop or js xchg andl mov xchg or dec scas mov push gs xor cmp movsl dec push out and sbb dec hlt test pop popa xchg pop push (bad) je jmp mov fwait mov lret leave mov ja mov jne hlt scas inc loop cmp not fisttpl stos jmp fs mov dec dec aaa sub inc lock lds pop pop nop push and (bad) cs fidivrl xchg (bad) mov push imul out mov cmp xor loope insb inc imul into into js push in stos or and push daa and sbb sbbl sub xchg mov repnz ret pop into push inc sub insl sbb push sbb xor jb lret jl xchg sub jmp (bad) push loope push cmpsl cmp xor ds out sarl inc addr16 stos leave sysexit pop dec je jne cmp inc jmp dec lods xor inc (bad) arpl mov cmp add dec rcrl (bad) js cmp ja imul cmc pusha xchg lea mov aaa sub gs dec popa and push not dec fistpll xchg xor inc jecxz lret in sub and cmp inc mov lret gs jns aam popa sarb push mov ljmp add xor cmpsl or mov push mov sbb aaa ffreep je stos push cli stc mov jns inc push sub jle std and or adc sti push ljmp dec repz jmp std pop out sbb pop jnp jne dec adc ljmp aaa cltd gs push lock and pop push cmp cmc mov jp sti jno add orl mov shll std fidiv add cli push pusha or movsb sub scas jne inc xor adc in jbe push xor sbb xchg out int3 loop clc shlb mov dec cmpsl mov in enter lret clc repz xchg cmp xchg dec daa jb imul jmp out jnp repnz cld hlt or cmpsb stos cli mov sub dec jmp call sub mov pop leave dec repz mov andb xchg inc add ret cli jg mov jmp add xchg movsb fbld xor jno test dec jae jl es es mov cltd mov ja mov add pop out xchg ret lcall pop xchg ds sbb xor cmp mov shr repnz mov cmp pop cmp aam data16 mov xor (bad) hlt cmpsb pop sbb xor inc sti outsl repz xor adc fwait add ja sub insl pop jnp sarl jne or xorl lods pop push cmp cmp fldenv pop call jge cmp aaa jnp rcl and push jge adc xor arpl mov jecxz pop sbb ret stos lcall mov dec icebp pop and outsb push cmp cmp push pop out ret dec push and stos int3 lock push fisttp and push out push and dec jae adc push pop imul push (bad) adc and imul push mov dec and and fidiv sbb or mov addr16 jmp xor out pop sub jae xchg roll (bad) ja xchg push (bad) inc sub xchg out pop push nop out jecxz sti imul mov xlat dec stos or mov jle scas (bad) xchg stos mov sub adc ss cmp out out or xchg fsubs fs stos and adc mov sbb jnp sti jne mov mov add pop push gs cmc inc add int and shll inc addl int and xor imul int ret (bad) cld outsl stos (bad) popf scas push add setle dec lret fcoml xorl mov add push enter add xchg ret jecxz xchg ja mov xor pop dec loopne insb test lods lahf dec mov jmp iret in leave jle ss jmp ret out inc dec mov shr lcall mov fwait mov ret xlat sbb cmp leave xchg stos jl inc xor not fbstp and or sub loop dec out idivl outsl pop lock pop mulb in and mov and ja stos (bad) fwait test xor aaa out or repnz mov cmp cmpsb lret add data16 pusha dec int lds fistp aaa inc cltd push inc mov mov jg sub fisttpll adc lahf mov out jmp jbe xchg jne xor mulb lret fwait scas les popa jbe call fs and call insb push inc pop stc jae iret sub push sbb jmp and jo in lret pop sub mov cmp add pop lods fiaddl idivl cli imul nop stos fimull jmp add lea movsl mov mov pop fs in add cmp jge bound cmp pop jnp movsb imul cmpsl imul pusha fcoms into sbb pop aaa (bad) lods mov and stos out pop sub imul (bad) xor cmc jg shl mov lea lcall mov ja sbb mov mov add xchg ljmp add gs xchg xor out jecxz xor xor loope and repz xor jp (bad) outsl dec int3 adc lcall lea jmp sub ljmp arpl inc dec arpl push shr pop xor jecxz xor sbb jo shll cmp jge in popa stos mov sbb stos adc imul lods mov call stos sti test stos jmp pop and inc ljmp mov pop lret add push mov or (bad) mov sbb pop cwtl ljmp jmp adc mov sbb in xor (bad) sbb jle inc out adc sti cmpsb push xchg outsb (bad) mov inc (bad) push pop (bad) jbe mov (bad) mov jns subb pop (bad) ja add jg imull pop xor cmp ljmp clc stos js sub in mov stc jne stc dec pop daa (bad) es mov fsubl (bad) ss fiaddl movsl (bad) and inc in test push inc mov leave push (bad) and add nop xchg imul sbb push xor mov pushf repz andb pop aaa gs or js nop adcl jmp arpl fildl cmpsl and jne stos adc pop out mov rorl dec push mov xor cmpsb pushf sbb xor sbb dec jae call sub divb fs jl inc paddw add sub xchg mov xlat and sbb push ret cmp pop fs xlat jmp (bad) jbe pop fildl imul xor loopw decl xchg mov popa xor or pusha pushf mulb insb dec sub int3 in shl mov adc pop pop sbb insl mov popf pop aad outsl mov sbb das dec jle jecxz sub fisub rcrl fisttpl xchg out cwtl push fadds jns push push insl data16 mov mov pop pop push gs cwtl rep add mov bnd imul jle dec inc adc jl ficompl aaa add jae and out sahf adc repz dec lods pop jg (bad) popa push or ljmp mov inc jo jl fsts popa pop sbb pop pop cmpl jle out inc scas call loope loop imul sbb push pop and adc push jne sahf aam sub ja clc lahf jnp rorl mov pop dec jnp mov push jae xor mov jmp movsl xchg aad push mov mov or mov movsb sbb (bad) rolb sbb cwtl aas lea pop das sub xor push xor int pop mov out shr jno aad imul mov sahf fmull jae inc lret sbb add pop ljmpw jecxz xlat sub dec and outsb push ret je adc les js lods inc inc sub inc jmp jno leave push sahf repz mov movsb lret (bad) mov dec mov mov out in adc jl fiadd ficompl xor lods push in cmp cli mov jle,pt popf arpl mov push sbb out test in clc push jne jo jg aaa hlt je and iret jecxz (bad) lahf pop xchg xchg imul dec rol out adc add out roll out addr16 fistpll ja data16 mov fs out xchg inc jno pop push aas stos mov xor lret xchg pop sub jmp push xorb pop stos xlat pushf imul out lret arpl stos arpl mov test push inc cmpsb negl aad dec cmp and arpl gs popf into xor pusha xor cmc fistpll ror hlt xlat mov aaa push in dec adc mull inc push mov out sub cmp rcll pop xor shrl cwtl daa sbb insb das bound rcl lds push jb imul xor adc mov mov fistpl (bad) loopne aaa lods int aaa out arpl and ret mov repz inc je cmp adc fistp stos inc rol imul xor addr16 bound push pusha push leave mov repz fs stc jne mov push lock inc mov inc or mov push (bad) repnz (bad) jmp (bad) add cmc imul stc mov mov fsubrl arpl lea jl imul bound inc insl mov inc mov mov std movsl and (bad) out pop push adc cmp rcl xlat or xlat jo imul and sbb lds hlt mov (bad) int leave ret (bad) imul xorb dec xchg addr16 push and cltd dec dec ja movsb addr16 mov jg sbb mov cmpsl out xor jne sahf sub inc mov scas jmp sub int3 imul and cmp stos pop loop inc and or jbe sbb (bad) insl (bad) popf fcmovu sub sub sub stos loop popf mov fwait pop inc lret lret jmp adc aas and es sbb xor jecxz mov out dec mov mov jae or lea (bad) adc xchg and xchg aaa dec iret out pop cmp inc lcall or js xchg pop daa push pop sarl and sti and sahf fild daa and stos or sub in push pop popa stos adc add mov stos fldt push (bad) or sbb sbbb imul mov push pop push jle es cli (bad) outsl fiaddl (bad) std pusha lods cmc (bad) js scas jge add xchg inc push imul and mov lock lret rcr jle push sub add sub jb xlat movsb sub push push pop add pop dec std add push sub mov pop push pop in and insb sub and push xor pop adc fnstsw xchg fcompl pop cmp push mov adcb jl or insl mov in fistl cltd adc ja rcrl adc pop pop fsubrl (bad) neg and insl push push les xlat dec add nop ljmp popa fs pop loopne vpacksswb adc int inc arpl mov icebp jecxz sbb stos xor data16 rcrb cwtl inc mov aad outsl mov jae sbb imul je mov stc iret cmp push aaa add jbe jg insb cwtl fcomps push ja mov mov xchg cmp aas inc mov inc jo lods insb adc sbb repnz or cmp jb xchg pop xor sub xchg iret dec xor push gs cmp repz pop mov imul pushf jmp rep xchg jne pop xor sti jmp leave cmp dec loopne pop adc outsl loope nop sub xor out dec pop xor dec xor mov loope xchg xchg dec sti mov sbb push call push repz add cs les jge cmp arpl jg jb iret push sarl imul push mov sbb into in and call mov movsb imul imul and les mov stos cmp repnz cmpsl push push scas mov xor xorl loope jae add imul in jae mov jb,pt imul lea or sti push pop and stos lret fcomi adc add in cli sbb out push rcrb mull dec and mov iret jne sub jno push aad arpl cld into fildll adc inc popa stos push in dec mov sub fldt inc cmp cli and out pushf adc leave xchg mov xor loopne aad or loop or mov jnp fldl fisttpl jbe jo jl pop push mov imul cmp pushf adc xor adc dec xchg sbb mov sub xor test sarb dec rcll in std cmp call xlat sbb push fs fimul push pushf icebp aas pop cmpsl (bad) int mov outsb mov mov push arpl insb stos push dec int popf mov int imul adc push arpl add mov jb arpl pop lcall andb iret inc and notl pop ja shrb push jne adc sbb jp repz or sub dec mov loopne loop cld xchg sbb insb push lret ret leave lods xchg (bad) lock cmp mov stc lods jp inc mov jbe jl rcrl mov (bad) cmc or popa jmp push aad sub xchg shlb ret cmp lea cmpsb push mov imul xorl jle movsl jnp lea (bad) ss ja adc mov sbb ja jp aaa out lods pop stos xchg out es out mov ja mov mov pop xchg inc inc xor mov cmp and mov adc stc mov cmpsb push sbb es adc arpl out mov imul shrl push push sub xchg xchg jb mov dec jnp pop shlb rcl (bad) mov lcall (bad) xor fist xor stc aas arpl inc in ss popa dec or push (bad) in fisubrl in test inc xor push jge loopne mov fisttp outsl imul stos jae stos enter mov shlb mov pop pop push fcmovnbe int3 adc popf sub or rep jmp lret gs fistp pop jnp fist stos push fs mov jmp jmp adc push subl add jo xchg sub xlat in inc jle fisttpll sarw or scas (bad) loope adc adc addr16 pop lods push (bad) mov jno (bad) repz arpl xchg xchg lds lea jb int mov push inc in push stos stos jno xchg ja aas mov ja sbb int3 push ljmp xchg sub dec and mov daa lahf fidivl sub and jg add dec das xor jge ffreep aad int in add bound inc lcall pop (bad) push add std dec insl sub int3 je xchg (bad) inc adc cmp jle leave clc mov clc les sbb popa (bad) leave lods push mov jo mov ds jae dec bound add jge (bad) movsl jp,pn xor cmc pop lret js aad loopne iret dec jo pop add jb (bad) insl pop pushf or leave shll jns mov jle inc mov push js xchg incl dec rol cmp mov loope loope mov sub mov dec mov xor iret and add aas aam lock fisubrl mov add (bad) push and insl sbb push jle pop pop and mov imul mov sti add aad pop push pop push push cwtl (bad) sbb inc sbbl es mov mov mov imul mov es or (bad) adc pop (bad) repnz rcrb lret cwtl sbb push pop sbb scas mov hlt pop push or inc lret iret fwait loop cmp cmp jg jmp dec mov inc sbb ret add xchg daa repnz cli jae or or lea ja movsl ds ljmp popa and mov dec mov cli push cmc jae aaa hlt jae popa cli leave push fwait ret popa lahf dec cmpsl pop sbb xlat dec jae test mov in dec mov pop inc push cmp decl loop iret xor rorb (bad) std xchg add mov mov and jmp xchg xor fdivs push adc testl jne push (bad) mov repnz mov and stos lock mov stos out cmp in movb dec ret stos cmp pop (bad) mov rcll jb test pop mov (bad) in push clc push jl (bad) sbb pop cmp dec mov clc push negl out pushf loop jae insl xchg mov or dec add mov and mov iret push out in xlat lcall roll enter xor incl lcall jns div xor sbb adc test adc data16 inc inc dec mov sbb pop stos mov outsb sub jecxz jbe fyl2x es add inc inc sbb clc mov iret fucomi imul add or push in in mov mov fiadd mov test ljmp push sub xor xlat divl gs scas xchg mov and (bad) imul mov push jbe pop leave jb rorb cmp sbb test int pop mov cld insl jbe sarl aam (bad) int hlt inc scas icebp jnp sbb mov hlt lock mov push adc iret mov pop pop clc (bad) outsl dec sti push pushf cmp add fcmovbe dec stos sub jg out lods cmp add dec incb ficompl imul adc cltd in mov (bad) leave aaa stos jno (bad) loope push pop mov pop (bad) repz pop sbb and dec fnstenv jle ja sbb push xor div leave jecxz cmpl cmpsl xchg cmp mov pusha xlat std push cmc hlt xor push sub cmp xchg jmp out subl enter call out negl (bad) mov dec jle sub fnstsw (bad) cwtl pop bnd mov lock or mov xchg lea pusha lock sbb fisubrl cmp lret leave bound push fidivrl cmp mov in sbb pop push pop mov pop addr16 jne test ja mov jae insl mov xchg imul push arpl pop mov mov jecxz jo out pop out insb mov push pusha pop jle sti dec jno out cli pop jmp mov xchg add fwait loope pop xchg adc sbb push test in jp movsl gs lret xchg jno mov mov mov push outsl jns fidivr pop dec aad in fstpt sbb push mov ret dec jp imul js xchg inc xchg pop (bad) xor xorb movsb jl and jle inc (bad) in aaa fs jmp inc or mov dec clc mov sbb (bad) hlt sbb sahf or fs dec add addr16 ja pop aas sub xor or rcrl jo add dec ljmp and xchg jns mov je cmp stos or push js aam (bad) arpl (bad) sbb shll out xchg lea js inc or sub leave mov std fnstenv inc jmp repz call jmp cmp es and push jecxz or push sbb add push sti les or sub pop (bad) aad inc pop ss mov arpl imul xchg jmp or lcall jmp cmp dec jmp hlt (bad) push lahf mov cmp scas dec inc cmp jmp mov xor dec mov cwtl xchg jo or fwait adc cmp leave pop pop add inc add push out aad xchg (bad) add mov stos push sti and je faddl sub pop add jno mov and scas jmp sbb sbb adc stos stos pop nop xchg sahf push push sub (bad) ucomiss bound je mov in dec dec push decl mov xchg test push pop sub aam cmpsb xchg (bad) mov fistp pop add cmp xor fwait xchg (bad) repz jl mov arpl sarb in (bad) (bad) fs in ja popf (bad) xchg aad lret scas mov add lods dec pusha mov iret mov pusha pop stc (bad) addr16 insb addl cmp jmp outsb sub jae (bad) mov loopne jp jo imul mov lret je mov (bad) insl mov outsl popa ljmp jnp cmp insb pop (bad) lret imul and aam jnp addr16 stos stos sti adc and icebp push jge repz stos in pop repz hlt stc fsts push loop push jmp cli movsl push pop subl push fucomi aad and pop cld lock in sbb dec xor xchg adc pop add dec out sbb mov mov jae jbe dec jb pop in pop js popf xchg ja insl divb mov mov jne cmp arpl xor push leave bound arpl xchg push lock mov add xor mov fs (bad) push dec jle push pop and push cs loopne mov idivb push xchg ds je rorb mov mov fildl push aam push jecxz aad testl repnz lret aad xor xor adc das cmp cld cmp mov mov adc stos repz xchg jno gs push xchg push leave pop (bad) ja xlat adc into stos mov outsb cmp xor (bad) hlt push sub mov mov inc sbb pop pop inc push pop pop lcall push outsb pop mov (bad) jae imul mov mov je jo cli and out insl movsl cltd fwait outsb lahf cs lds and xorb mov pop ds jle fild rorb je outsl jne push jno aad movsl jns stos and pop push mov sbb sbb arpl ja out dec add jae and divl int add scas in fdivrs pop cld lcall js push xchg push pop icebp (bad) jne lds ror inc data16 aas cmc pop and ja add sbb gs insl out adc imul bound inc jbe add xchg push mov push (bad) ja pop pop jle test int3 and mov inc sub and addr16 pop daa push jb jnp and (bad) fidivl jmp fildl in (bad) mov int3 (bad) iret insl jmp ja in mov (bad) mov xor pushf push call adc xchg mov test xchg inc mov jg dec movsb dec mov jle cld loop cmp popf divl je add xchg mov push arpl aad aaa rorl lahf mov outsl mov nop arpl popa cmc jle pop ja in xchg pop jae (bad) cld jbe out sub bswap push movsl xchg jno jmp pusha ret incl and jno and jae arpl sahf aaa sbb rorb add icebp jbe push gs or inc and repnz bnd jbe imul lret lds lahf outsl mov jne cmp mov xor jno cmp add fistpll adc ja inc mov sarb (bad) jecxz mov outsl xchg jb jo mov pop repnz std shll int3 xchg hlt nop arpl popf xchg sbb xor fwait ror push sbb jo push or ret (bad) jo fisubrl sub mov add pop jbe loope and sbb xor sti xor aam hlt and lods inc daa xchg fcoml (bad) idivl gs mov xchg add inc push repz leave arpl roll vpor arpl push test icebp cmp test sbb test (bad) ss andb je push imul inc dec pop push adc xor out in pop mov aaa iret push and xlat cmp dec pop mov inc mov add xchg pop movsl mov mov cli shll xor and popa jo jae out push and aad xchg xchg push aaa (bad) pop cld lcall add and dec xchg and (bad) daa ja pop fs pop call int pop mov sbb das std inc mov push (bad) xor xor (bad) push sbbb out in xchg add (bad) mov xor addr16 push adc lds popa or mov cmp mulb inc iret rol aas rcll cmp stc das (bad) lea jbe rcrb mov mov stc adc sti push jle add stos cmp lret add xor jmp jbe dec dec ficompl data16 loope adc in leave aaa and das inc ja jno jae jbe cli cld aam push push push mov jae pop scas or fisttpl fs push ret jbe add lock mov xlat je mov mov out aas jns (bad) mov outsb or hlt mov roll mov add lret ret pusha push and addl jo xor push jne std pusha mov adc repz xor xor pop das push or xor iret loope xchg icebp jae js lret (bad) dec insb inc mov pop pop inc inc call shl adc (bad) imul xlat mov push data16 xor ds fs add adc aaa sbb aas push push add sub ret aaa (bad) dec aad push pop jnp and add jno mov (bad) repz aam rcl push dec popf adc aad int add gs inc stos addr16 movsb stos insb repz fstpt arpl cwtl mov cltd jae cmp add (bad) imul pop jecxz push push lea mov mov aad push leave or setp lret sti rol xor jno sti cmp and xor (bad) or lds sub mov scas and add mov (bad) iret fwait add mov mov cmpsb (bad) or ljmp pop ja mov push or pop in and cmp fwait adc add loop ret stos ds ret insl pop adcl push ret adc push fcompl rcll outsb ss in mov sbb inc fs push addr16 fmull cli jle xor add xor mov lea cmp lods jb mov daa mov shrb imul mov je imul pop sub ja mov fdivrl lods jno push int movd add cltd mov xor mov xlat xchg (bad) daa movsb jge inc pop jmp pusha (bad) imul cmpsb push pop dec test in lock icebp push ficoml adc negb inc shll add loope jp xor insl ljmp sbb jns fwait xor arpl sub mov xor jae cltd mov adc outsl sbb push or push xlat inc imul scas mov sub lock jmp jae cmpsl sti stos dec ljmp mov and cmp cmpsl imul adc leave xchg xor stos or push mull (bad) cmc pusha sub ss sbb pop push or mov push inc adc stos (bad) mov jo sbb sub push cmp sbb mov fs dec push bound (bad) jo mov dec push add and (bad) mov jmp jo and cld ret gs push test or cmpsl jle pop xor testl lock jne add or clc sahf outsl loope add mov loop jnp nop sbb cmp mov outsl pop sbb jne (bad) mov jo daa ret push xor popa negb dec jecxz xchg loope jl jmp fildl xchg jne movsb jno dec jne pop push sub jno jbe hlt stos lcall out sar push or loope jbe insl pop cmp mov cli movsb roll fldl2t xorl push ja push cmc dec (bad) dec dec sub xchg insl push popf jl (bad) push fwait dec repnz mov insb cmpsl rorl fbstp jae ljmp pop mov les inc in ljmp lret aaa lods jg loop and add lds sub inc cmp xchg and push imul pop notb in mov dec aad mov inc aas int3 out (bad) push stc mov push xchg popa sbb fcmovu out mov push repz ficoml dec lea dec cmp xchg imul mov es jno jb (bad) ror mov inc data16 xchg movsb pop mov xchg (bad) xlat cmp movsl gs mov test xchg dec adc ficom and or and jmp mov mov dec pop xor pop sub push sarl cmpsl jno jecxz jno aad inc enter icebp xor cmp jl push dec lcall fdiv scas les adc pusha xor daa in jae cs movsb xchg add stos xchg xor jae push (bad) test jae sub dec cmp ljmp addr16 jns (bad) pushf loop add dec add sti pop xchg daa push pop cmc sahf mov dec dec mov arpl les dec jne dec int mov or jae mov nop popa imul mov mov mov jae das aaa mov insl mov ja adc bound daa push jns nop jns push mov sahf movsb xchg adc jl hlt ja add jp mov sarl scas xchg fsubl and cmp das push xor jge xlat inc or xchg inc mov int jae dec or mov je cmp test and dec (bad) outsl dec out xchg xchg mov mov jno inc xor les inc sbb sub sarl stos push mov test and mov jmp pop std pop and fidivl pop das out sub imul sti mov inc push jno mov cmp dec push jg push jbe ja pop jae push sahf mov iret cmp pop cmp cmp cld icebp dec xor jne sbb sub lret aad push sarb fmuls (bad) fs pop xor mov xchg cmp push outsb jnp jecxz xor jmp push stos ret popa cmp ja aad pop cmpsl inc in scas rolb cwtl adc ljmp or fistl lds fsts push jge dec lahf clc pop jle or push jecxz aad push xchg xchg xor cmp sbb pop and pusha jne mov fsubrp lret mov dec xchg jae mov dec in xchg push add out and inc cmp lods rcrl out js dec es dec gs cmc and cmpsl lds mov xor xchg pop sbb jo movsb jno push adc jmp es movsb mov mov xchg push jno fs cmp dec jne ret sbb adc or xchg scas jl sarl and dec out adc arpl jl movsb ss adc dec mov pop lock movsb sub sti aaa lcall in repz xlat movsb not sub mov mov into cs pusha (bad) stos std inc (bad) in inc or cmpsb mov jo dec lea xchg mov mov push adc out vpavgb xchg dec add sbb dec cmp fimull pusha jno cmp stos adc pop arpl mov fbld out icebp aad ds (bad) icebp dec jmp push jbe ljmp imul ds aas out rorb adc dec fldt mov pusha cmp xlat sti out stos test roll fildll inc sub inc xor cmp loopne inc sub and movsb lods mov lret mov test cmpsb imul sbb sub xchg jnp nop je push adc in gs test jl jae mov fstps inc mov jae dec (bad) cmp in test scas or test pop jge loope lret jne iret repnz dec orb fcmovnu sbb int mov aaa movsb and imul out out clc popa add test sti mov mov fs jge popa push add xor (bad) mov gs inc add insl push pop cmp pop jbe and lds push clc imulb and mov xchg cmpsl ret (bad) leave movsb push jmp lret push mov fistpl mov sub or push ljmp mov daa add push aaa out cmc fbstp push inc je mov in push add cltd inc dec movsb or and dec into jmp or and aad add sbb push out lret sbb test test pop pop push add loopne mov xchg aam gs xor push shl push jae ljmp out jb cmc mov lret or lret sub mov mov sub insl sub bound jo mov inc cmp fildll test push movsb stos sub lea xor jae mov push xchg data16 sub jb inc imul push sub test iret add ret lcall (bad) mov cmp jecxz dec outsb repz in movsl mov in mov stos imul or arpl adc push xor mov ja inc push imul daa pop xchg jb arpl cmp jl inc fildll (bad) fdivrl adc out adc and add sti xchg mov into push test in jae ret jne cmc out add and aas daa lods pop outsb mov scas jmp and xchg and notb pop dec jae cs rolb push repnz adc in sti cli gs cmp jmp mull fs cmp in imul cli popa pop insb lea mov push pop pop mov fildll in idivb (bad) out and sbb cmpsl jle dec pop pusha jmp jae pop or lods and add pop or inc fisttpll mov xlat das mov arpl stos daa in xchg xor std imul dec pop xor add loope pop add movsb mov js imul movzwl push cwtl mov xchg jne pop dec mov mov mov repz mov test xchg push jnp add mov and add out pusha mov lods test leave (bad) xchg dec mov enter add test in jecxz mov outsb enter in (bad) xor sub rorb decl cmpsl int sti ljmp cmpsl popa xchg dec sbb add fsubp inc out dec fst (bad) sahf or data16 jae pop movsb xor mov pop lea movsl jl jb cmp fidiv (bad) movsl insl dec test loopne (bad) jbe lock push loopne lret rcrl mov dec repz jnp inc out clc loope imul imulb sbb arpl loope lahf loopne fwait inc (bad) lahf xlat rolb test mov cmp sbb popa mov cmp xchg mov and jbe jno mov out jnp xlat inc fdiv add pusha and xchg mov popf mov movsl push aas xchg xchg arpl fisubl jne cmp cmc fisttpll aas movsl sub jmp ja in out mov mov pop lds mov mov int3 sub add sbb xor arpl fcomi dec push jmp subl jne mov xchg gs mov ljmp and notb sbbl pop adc xor inc push je jno negl jmp imul imul shrb js (bad) dec jg jb call mov xchg jecxz leave int3 inc rcrl rcl xchg lret xchg mov cmp push jmp sub vsqrtss add cmpsb fs clc int3 jb jno out jns inc loop adc mov mov (bad) icebp stos inc push mov sarl mov add xchg push push flds dec sub or cmpsb sub sbb arpl sub jecxz fisubl lock sti sbb cmp bnd and push call ja insl stos cmp cli pusha mov xor stos pop lret adc add jle sbb xchg xchg fcomps mov insl stos hlt imul inc jle dec sti pop pop loopne (bad) in jns sub sarl sbb lcall out stos (bad) iret loopne mov push lahf movsl shrl mov or mov sahf fs xor shl dec (bad) lds push push nop sub cld and xor pop push pop (bad) ja jmp in push xlat jmp (bad) xchg pop das cld dec into sbb sti pop bound imul arpl jb int aas mov ja cmc pop (bad) jb cmp fwait sbb push mov dec sti sbb fcmovb jp mov (bad) (bad) mov fisttpll insb rcl mov sub and imul int icebp mov dec (bad) sub jl lea mov cmc lds daa (bad) xchg addr16 jl enter (bad) fstp cmp popf stos sbb lret jo dec lret popa jg push movsb hlt repz push mov mov iret aad cmc out iret gs dec add aam sti and xor add sbbl int int3 in push and mov jne loope adc xor repz outsb cmp mov add xor pushf fwait call stos popa xor inc pop sti push lds xor stos cmp aad bound jae dec push daa mov les std pop scas sub cmc and jecxz mov push fstps lea aas (bad) outsb xchg or fiadd mov fistpl arpl into arpl pop inc sub gs mov mov fs divb jmp inc jno daa inc mov js pop push pusha mov push mov adc inc push dec fistl divb jb jecxz add push jbe ret fistl xchg push xor sub out adc or push repnz adc out (bad) aaa lret loopne popa jl add jge push sub imul stos les mov fs mov (bad) inc ret dec sbb sub nop sbb (bad) jnp pop (bad) xchg pusha (bad) (bad) mov jns cmp adc adc jno xchg cwtl cmp (bad) outsl rclb mov clc jnp shrb inc jg mull add pop push outsb pop cmc jno pop insl xchg mov mov push cmp and lret out aaa jno mov inc adc fbld mov xchg jp jno cmp jo (bad) jmp pusha nop bswap push fwait out (bad) sbb pop and sbb mov pop int3 cmc popa add out ficoml mov lea sbb sar adc mov and inc or push pop std jecxz push outsl sub push adc repz xchg (bad) mov movsb jg pop lcall fs insb aaa cmc cmp sti mov add mov sbb mov push repz fnstcw xlat dec pushf call rcr daa jb xor push mov out cmp sbb and fdivrs cmp add xchg and popa push imul jno mov cmc and jmp mov cli pop push or cmp (bad) mov fwait in fadd cmp fisttpl pop xor push or int and jae adc and movsb xchg out lahf xor (bad) mov adc sbb jle aam fs mov bound push ret into and mov popa add leave mov daa lock rclb rcrb outsl hlt xchg imul mov inc fsts xchg dec sbbb in add mov xor (bad) or pop inc data16 (bad) adc add mov icebp push arpl push stos gs dec sahf hlt cmc sbb fldenv xor ja call jmp insb in xchg jmp fnop adc lea aaa ret adc int3 add sub pop and clc pop and jmp jb scas add fstps mov insb sbb dec sub popa dec jae inc inc aam adc pop lret xchg arpl or loope mov inc pop jb push push stos sti jb icebp je loope mov jae push fcmovne xchg aaa in pop fisttpl (bad) push mov cmp xchg out adc push xchg adc cltd stos lea stos and add call sbb inc adcb repnz pop sub mov sub mov pop in stos xor daa xor adc repnz xlat sbb aad dec scas jae cmpsb dec xor jne je xlat sbb xchg scas mov add je int imul (bad) test adc add rcr loope adc lea pop mov imul mov cli and push cmp gs dec jb xchg adc imul pop push sub cli stos adc sti pop fs lret or loope pop es or gs adc sub add and imul jae xchg pop (bad) push mov test lock in adc or ss inc add out pushf xor stos mov jne push push sbb std add jmp out adc fs push cwtl dec stos aam push inc lods adc fidivrl sti addb dec rol sbb mov popf jmp popa pop mov xor in adc dec cmp push xor sub fistl lds sbb das scas scas sub dec add and adc mov mov jnp sbb jae lea inc sti pop dec cmp sbb jg fdivl mov mov pop xor out outsl pop sub dec push mov jmp (bad) stc dec scas and sbb adc mov pcmpgtb shl sbb sub jge pop pusha adc adc sti negb or imul scas add xchg push lea inc push outsl fldt mov jne test adc jbe lea sub mov push daa push xchg ret jno in jg jmp sarl pop xor pop push pop mov cmp fidivl aad or in les inc and int3 (bad) xchg stos stos lods inc sub popa add enter push push arpl inc add outsb icebp repz fildl dec pop and push inc popf inc jmp pop or jmp adc std in pop and and mov or jno test or pop and ret push cmp dec inc mov add jg andl mov mov fldl2e jns jo sub adc test enter xchg adc mov push add fisub push xchg xchg pop das shll ja into sub push jne xor push adc push insb in mov push sub adc lock pop adc add das push imul and cli xchg mov arpl psraw mov push sarl repnz mov fs sarl mov pop mulb (bad) (bad) arpl ret jae sub sbb jae cltd imul fisttp call cmp pop dec add jecxz add aam je jo ja cmc movsl lea jl dec sahf mov sti inc cmp ljmp dec enter mov scas push push push jae jno outsl mov jns repz sti mov cld js mov int iret out (bad) inc daa push repz mov out push mov test jnp jo jne in add aam mov jmp lcall out add shrl repz sub lock jmp sbb lret movsl jnp (bad) jo fsubrl fs shrb ds push call in dec loopne clts jp push cmp pop pushf push fs neg xchg cmp arpl sbb sti dec stos mov push pop addr16 (bad) daa stc aas jge lret jl insl in shll imul push add out arpl outsl pop js push mov lock popa nop jbe ja outsb mov outsb frstor mov jecxz loopne jecxz add arpl sub dec xorb test jne cwtl (bad) sbb jp jg push test xchg scas dec jmp push inc cmpsl jne (bad) dec jo stos leave stos jo popa pop jo in jne bound outsl imulb sbb push (bad) lock addr16 hlt pop adc cwtl mul cmp inc hlt jnp arpl jae insl pop push out adc ja jle push aas push rclb and sbb aam jo icebp stos les lcall mov inc sub ja call sti cmpsb arpl pop dec pop fldcw mov sbb pusha les imul imul addb mov mov imul icebp fs ficoml int3 (bad) scas test call notl aam xor mov into mulb dec jo or pop jnp dec add mov jmp fistl inc dec dec lea gs push add push dec stos insb xchg dec xor outsl push push imul insl push pop insb adc mov sub lahf mov leave xlat (bad) clc xchg sbb push push scas xchg push and stos pop jo es sub cmp sub aaa in inc cmpsl aam jno pop xor push cwtl imul hlt fdivl jge enter aad test outsl add (bad) addr16 fildll jge stos sub mov pop adc xchg push jo into cmp test pop push sub and dec imul xor (bad) aad in adc daa out xchg sahf pop jecxz lcall or push mov xor push fistl fsubs sbb jb sbb sub jno mov xchg jg pop inc pop icebp adc xor out or enter bound shll rorl hlt or inc sub jmp ljmp inc mov in gs (bad) or mov sub popf cmp das js xchg adc inc xchg and out loopne pop (bad) and dec push mov jno bound jo pop jg imul jl push xlat adc push gs xchg pop pop dec lea jl and (bad) hlt js pop fimul js or pop adcb pop or xchg xchg nop add movsb iret jle xor mov add xor cmpsl bnd out inc xor mov jg ja dec xchg mov mov jno imul and xchg sub dec jae mov subb sbb in pop push xor in bound iret pop cmp push jnp push in dec add es or fisttpl xor mov pop push repz movsl push pop xor dec mov xor aaa mov jmp les lahf or jae jno sbb (bad) sti imull lds mov dec divl ss add cmpsl cmp loop inc dec popa jg xchg lret je js mov daa xor jle and jecxz es push sub sbb (bad) or xor push mov adc fistp push dec inc out mov pop xchg (bad) jnp repnz test jg jae adc movsl or xlat push or bswap add inc pop (bad) and jmp push mov dec sahf jl lcall mov test cmp inc lods xor sub xor jae xor sbb mov lods mov pusha sarl js or mov dec fisub push sbb out out mulb pop imul fildll (bad) sub stos arpl das cld test inc or lahf and cmp aad mov ja imul loop cmc nop xchg pop sbb mov sbb jb mov into and sbb cmp mov push pushf jbe aam imul pusha out icebp jae mov inc adcb push mov jle dec movsb sub push mov adc pop jmp jae aaa fbstp fmuls pop outsb (bad) iret cmp adc fbld pop adc push pop jmp mov adc daa mov push stos jnp mov sbb addr16 push stos and leave jae outsb stos negb out fs aaa out test pop cmp pop cmpsb jo xor pop dec xor out (bad) int3 repz cmp push mov (bad) pop int3 xlat xor dec lahf loop fistpl fwait bound and into stos fistp int outsb sbb sub xor arpl pop pop ficoml pop insb sub jg inc sub sub leave (bad) cs add pop jnp ror add add enter push pushf fs pop add sbb mov inc (bad) dec sarl push ja in cld sub add ljmp cmp js (bad) js sti dec push xchg outsl fdivrs inc pusha and mov movsb lea lods (bad) mov jne push add sahf shl (bad) and jbe jg sbb and xchg jae fxch add mov mov sti inc pushf pusha ret and push leave push or xchg sub fisubr pusha inc cld loopne jae push push jge sub and cld cmp sub mov shrl (bad) stos cmp data16 xor mov (bad) and lcall inc (bad) jno loopne popa fnsave mov xchg mov jmp sbb les push dec sub fstps fs ja in enter cwtl fs inc fldcw pusha add adc and sub ja or lods push repz mov add fwait test pushf mov rclb cmc lods xchg push pusha push sbb add jbe lock (bad) rclb ja test in xchg sbb hlt jae adc xchg stos jmp fisubl jo sbb out in repz and daa lret fdivrl mov pop das mov fisttpl or (bad) push or push pop xor addr16 shll bound insl mov adc add jno arpl push arpl lea ja mov daa pop int3 (bad) (bad) mov and sbb popl lea sahf ja add mov mov in cmpsl inc in adc leave jns lahf jo sub shll (bad) pop jne in cmpsb dec fwait test (bad) dec ljmp mov pop fistp inc pusha pop call push sub sbb outsl and push jbe aam (bad) inc pop in (bad) mov or insb jae xchg dec mov dec xor jno and lea (bad) sbb add (bad) sbb movsb cmpsb or push and xor pop push xchg loope xor ret ret je jo jne repnz wbinvd sbb push mov enter stos stos inc or leave adc cli pop adc shlb imull cmc (bad) or lods dec (bad) mov mov loopne push lret and ljmp pop out (bad) fidivrl stos or sbbl mov outsb jl fwait (bad) mov leave cmp jb push sbb jno pop leave iret clc jae imul clc in push js push aad and cmp jns mov notb cld sahf je mov add xchg xchg mov xor iret inc xor sub fbld fisttpl jb jecxz xchg inc add arpl fcmovnbe imul pop lcall or adcl mov call jge into mov clc flds test imul xchg inc cmpsb adc cwtl sarl cmp decl push fistl jl pop pusha out xchg xchg cmp mov sar push out fwait (bad) pop insb shll sbbb dec cmp repz jmp js cwtl push gs icebp pop pop dec pop sbb or cmp aad icebp fisttpl mulb (bad) fmull xor push leave jmp js mov pop or mov pop mov pop (bad) jbe test fmull int3 xlat je mov add aaa xor ror fimul fnstenv adc push imul addr16 ss out jns jne scas xor cmp ds arpl (bad) dec jb lea inc stos stc xorl fadd cmp bound test loope fcompl scas jae cltd insl pop clc in addr16 icebp add push pop jg mull sbb ss inc inc int xchg lcall cli pop imul gs mov jmp out scas sbb inc stos mov sbb mov push out ljmp stos sbb push or aaa jmp dec inc je fcomi cmpsl pop int3 lods pop sub inc lret rclb (bad) inc test insb jp lods pop sbb push fs repz imul jno and shl in mov xlat test sbb add iret xchg sahf mov inc and repz lcallw cmp inc mov stos lcall dec dec jae jg cwtl stos adc push sbb inc xchg mov add jg movsb rcrl sub dec xchg push xchg mov (bad) divb pop xor pop inc arpl pusha push pop push lds jecxz cmc aam fdivr iret mov mov sub and ja mov mov xchg popa sbb add pop stos lock inc push jns cmc vmulss cltd nop sar fmulp mov dec dec pop popa and div push cwtl ljmp (bad) andb jle,pt pop sub push sub imul std fstpt push or mov and daa stos sbb into aad and ljmp push int xor mov enter sahf (bad) (bad) movsb fucomip cmpsb xor mov imul push pop xor (bad) int ret les (bad) ret sbb gs and in stos push pop mov mov fwait pop jecxz ror es pop xor iret pop sub pop xlat push cmp lods insl imul inc mov sbb test push pusha pop inc mov repz (bad) jmp fs jmp add and cmp in and xor push adc cmp push test push jge cmp mov sub mov leave (bad) jne pushf jg pusha add ljmp mov push push push leave sbb andl rcll sub jecxz sub jg push adc js (bad) (bad) jno mov stc xchg icebp push jb andl sahf js stos out dec pop sub inc sahf sbb xchg aad cltd push mov imul push inc adc cmp adc xor outsl sub iret sub jbe aad ret push dec ret pop jnp jnp or sti addr16 orl xchg lea lock cvtdq2ps sarl mov add xor scas jp cmp cmp dec stos pusha mov cmp xchg pop sar jne add leave push movsl bnd out jae bound addr16 daa sbb out jns sarb xor subl pop js push jb xchg dec stos mov ljmp out repz ds or outsl insb fdivs xlat push es xor push fidivrl cmp cmpsl push push dec mov dec popa aad fnop cmp out jno mov data16 (bad) pop (bad) pop push aad aad in sbb xchg out stos mov pop lock mov lea fildll jg pop sahf jb in mov ficompl (bad) aam cmpsb pop nop mov pop sbb jnp js mov shr orl jae cwtl cli bound fdivs jno push inc std push daa xchg dec dec dec fisubl enter xchg jge out jnp repnz or adc js iretw jne xchg addr16 jae push push pop pop daa out inc xchg fsubs lock in pop jecxz imul test push inc add jmp xchg addr16 jp jne jo out ja bound lret sti jo xor push dec pop and imul out sbb pop stos mov pop pop inc es push sbb in mov (bad) leave stos test jnp cmp mov ja jg mov mov and xchg push pop and (bad) jne push pop cmc out add incl movsb sub sub sti or xor pop dec fistp xor in (bad) jno cwtl rcrl sub sti jmp cmp cmpsl sbb or stos std js push mov aas cmpsl daa dec push sbb xor addr16 int3 test push andb push push mov repz mov dec jnp gs dec xchg push xchg adc xor push push xor mov clc dec mov xor push jo cmp sub inc inc lahf fisttpll cli mov bound cld xchg ss xlat aaa fcompl stos popa psllw fcmovne push push fbstp lock inc mov test add cmp xor inc xchg and sti sahf repz decb xchg and ljmp loope out sub jnp xlat stos push rcll inc jmp add cmp jbe imul inc les mov adc arpl cli test pop jnp adc mov pop loope mov jae lock ss data16 jle inc fdivr aad add push pop movq push sbb idivl inc push push push push gs lret fisttp push pop lcall jne addl sbb mov and test sahf inc sahf push push outsl pop aam das or jae stos imul insb loopne (bad) fisttp xor jb jne mov pop and jmp (bad) push mov cmp push insb repz imull pop jae ja je dec test stos dec lret mov out fwait inc xlat dec int3 repz jle adc mov in pop and pop out jge sbb jae add push sbb mov in imul mov (bad) sbb mov cmc adc gs jae arpl mov and and push inc push dec pop adc and fcomps xchg mov cmp fstpl fucomip xchg pop inc daa std and jb jle sub push sub mov (bad) inc out xchg push cmp or aaa clc mov jle cmp jae fistp enter int dec ljmp mov xchg ffreep mov imul enter arpl xor iret mov dec leave dec cmp xor lods cli xchg pop dec add pusha fsubrs dec sbb hlt imul inc mov xor insl or xchg xchg jne xchg fs mov jbe xchg movsl rcl mov mov push sub xlat jl mov pop stos adc mov push jmp and ja loopne fcmovne xlat mov stos and pop xchg pop mov xchg imul pop lock mov stos xor pop xor cmc imul push or push adc fmuls xacquire adc fnstcw add sbbl mov pusha cmp pop rorb loope xchg and jb push dec pop jns in arpl mov cmpsl mov jae push mov (bad) mov or xchg (bad) mov sub xchg add mov add data16 or dec iret loope fidivrl std imulb add fcoml and rclb inc mov pop enter stc repz mov ljmp and (bad) movsl das push rcrl add adc enter mov jae cmpsb lret clc (bad) lods notb pushf xor sti ret push (bad) pusha jo mov adc mov pop or sbb repnz ret shr dec test sbb (bad) sbb fcmove hlt mov lret repnz jns cli fistpl lcall scas push fldt fisub faddl testb jns pop pushf push je cmp mov pop sub (bad) incl (bad) test lock add inc sbb fwait push sub jg mov mov add or dec gs mov lahf aad (bad) cmc pusha jne jno and inc nop inc pusha in push mulb mov je andl jecxz xchg leave inc mov int fbstp sub lahf push setle xor pusha sub push cmp cltd or adc gs push ss fs mov mov mov mov aaa fild jge es cmp jno and (bad) nop test inc push jae aas sbb inc leave scas xor call sub inc stos dec mov sbb adc ret push ja stos sub mov out pop shll add push jns xor push and sar fmull xchg mov aad aaa pop push dec pop jge pop xchg jl mov cld jae out jb push test adc mov vmovd ficoml fs cmp mov adcb retw pop sbb inc adc ja inc test add sbb mov je pop sub push insl ret js cmp arpl ja lock popf pop gs test into add stos cld xor mov (bad) js cmpsb pop jecxz jle sbb (bad) fidivl inc xchg icebp (bad) xchg mov cmp out mov iret daa xchg repz push mov lahf mov lcall mov imul icebp push ja enter int3 mov imul repz add cmc add cmp hlt scas outsl jnp std (bad) out sbb std leave push adc loopne andl jo mov cmc ljmp ret push popa jge jno hlt mov push notb mov sub ja jae xchg int jne jge and aas stc xor lea sbb push data16 fsubrs dec scas (bad) mulb cmp jae jmp xchg rorl leave pop mov test mov ds out jp insl loope mov stos sub adc add in adc pop mov int frstor dec xor imul dec adc and jno iret pop push pop aam mov in iret mov jg dec mov or sbb mov sbb (bad) int sbb fldenv mov or icebp adc push mov mov movsl ret lock add sbbl bound jne mov leave clc add js,pt fild pop push jnp xor cmpsb push or (bad) iret ljmp loopne mov mov jmp ljmp add or testl bound sahf add in iret js idivb adc jne add push push cwtl mov add jle xor sub xchg pusha jle,pt push sub ja aad (bad) xor (bad) divb mov addr16 daa or iret pop fwait and sahf fistl leave xlat icebp cmp mov ret iret xlat and or iret mov and aaa gs stos mov into in (bad) leave lods sahf je outsl jp xchg arpl aad fidivl fidivr cmp adc and stos mov sub xchg lods iret fwait jae lea lcall stos pop mov fidivrl jns xchg jne pop add cmpsl sub and sbb out lock mov jbe add mov mov mov sbb push fs arpl outsl js repz push xchg fwait and stos pop or and jo push sbb cmp cmp fidivrl sar push icebp pop daa imul add jae stos (bad) je fucomi (bad) (bad) xchg aad (bad) ficompl into icebp imul arpl mov sub sub frndint push add xor or aaa and cmp xchg push jecxz dec (bad) imul gs jecxz (bad) and sub xor aas sti stos outsl es cmp jg cmp aad cmp push cmpsl nop mov sub scas rorl mov mov lret outsl pop lahf push jg pop adc adc imull sbb lret jne fldt (bad) push (bad) test daa (bad) out pop pop mov stos inc mov mov or ss mov fwait adc je rorl xchg cmp jb cld (bad) cmp jle fnstsw sbb icebp pop sub ret cmp into or imul dec add pop aam cmpsl ja insb in mov push pop add andl xor inc (bad) mov ja fisubl lods sub cmp lods mov (bad) pop jge mov movl xor cmpsl xor das js jecxz in xor mov fs stos pop arpl mov fucomi pop mov dec jns mov sub pop push js mov out cmp mov pop arpl add movl outsl imul mov js push ljmp int hlt push sti and in setae jmp mov jg push inc outsl push mov jbe xor arpl xchg jb test push mov cmp xchg movsl scas ja outsl into popf xor cmp movsb pusha mov push or inc sahf dec insl xchg cmp cwtl push pop xchg or fiaddl pop mov lods inc cli (bad) jecxz mov stos fwait dec scas mov test cmpsl jne stc call sbb enter add arpl jo xor mov sbb cli mov (bad) jo iret sub (bad) stc data16 (bad) mull (bad) xor mov jne sbb sub xchg add ljmp and pop psubsw jno jno in ret stos xor out mov mov flds inc adc out pop sbb mov adc pusha bound xchg jno ret hlt cmc lock and sbb xor aaa scas stc xor push pop cmpsl push mov inc mov (bad) outsb arpl xor dec pop adc lcall jmp rorl loop daa loop jp mov mov mov pop xchg pop or adc shlb pusha in cmp fcomi pushf stos das ss lret insb pop shr jb test je add inc or popa sti shrb push adc pop mov inc dec push mov or lea stos leave int push cmpsl jle xor fldt rcrl jmp xor inc ds cli xchg sub inc aam rorb std xor mov sti lahf fdiv pop xorl cmp ljmp movsb in test add xlat fidivl stos test add lea repz test jnp (bad) xchg aam add dec mov insl add insb mov lea push jecxz hlt test jno pop jmp or sti xor stos std sub cmp loopne cltd or xor xor pop daa fcmovnbe test cmp nop sbb fimull (bad) xor (bad) mov (bad) jb into mov xor sbb cli mov push lds cltd jo sbb and jmp sti test jbe mov or adc mov call scas in (bad) out push sub pop sub and pop and into scas out leave xchg pop push ljmp cmpsl icebp ss aaa adc repnz jnp push lods roll lods mov xor faddl dec mov out mov gs (bad) jnp mov and adc sbb repz in lock push stos outsl mov (bad) pop ja xchg imul out mov mov sbb push rcll pop mov idiv push sahf mov movsb imulb mov cmp jbe inc add mov lret and pop (bad) ja pop pop cmp lea stos (bad) aad or add add add cmp sbb xor jae sbb outsl mov loopne mov or jae sub (bad) jo pop push and lcall andl (bad) pop or adc das or xchg ja jo fwait jl mov add mov aad jp pavgw sti mov sub jne mov sbb sbb and imul stos cmpsb jmp jge lods insb imul push pop dec cmc repz xlat int push push out fnstenv push enter addr16 pop and lret inc xor (bad) push rcl xor jae sub sbb arpl push dec jecxz lret test in or fisttpl mov movsl inc add xor pop bound fs stos outsl mov cld cmp dec xchg inc shl cmp pop pop aas fiaddl mov sub fstpt jb mov dec inc fidivrl add xchg repz popf fistl dec dec leave jo add ret ja push cmp xlat gs je xchg cmc jno in addr16 divl mov jmp add sbb or sbb cmpsl in sti lea push sti je cmp imul push jmp cltd jno out inc shrl or cli mov dec movsl je stos loop out jno dec outsw add loopne xor mov add mov jne jl rolb push insb push popa andb inc jp dec pop outsb cmp and orl sub jg push je sbb push adc mov mov imul stc movsb pop cmpsl daa pusha lock dec cmp stos push push push push xchg testl sub cmp lds daa stc inc inc and iret dec xor lds mov pop int jp cmp arpl mov sbb inc cmp inc (bad) jmp sub stos jge out divl cmpsl dec mov and out mov lea jg mov leave push test aad jns xor inc and xor ss in pop int3 dec stos jno adc push jl xor cmc dec and das inc sub xor mov mov mov incb xor pop rcll push divb (bad) mov jb stos inc jno cmpsl stos fsubr push sub daa stos xchg aam vpavgw inc arpl leave mov arpl aaa scas cmc lret pop movsb fldt movsb mov push xor les dec daa push call popa and cmp dec fildl push push call xchg and lea mov jns and in or sbb push (bad) jne lock cmc sbb or dec insb lea cmp xchg mov lahf fs sub jae pop cmp js cmp outsl jno (bad) lcall (bad) jae icebp outsb push xchg ret xchg and mov js out arpl cmpsl adc mov inc je stc and mov pop ret xor xlat iret pop add or lods imul jl push insb push sub ret mov push cmpb xchg xchg pop jmp pushf pop push mov faddp or mov cmpsl pop lds hlt pop adc push gs (bad) outsl or stos cmp mov mov push stos mov mov dec xchg mov dec push jge adc push jb adc mov insb stos les fs into aaa pop add inc sub in xchg and mov cltd lret adc jb jmp js std push ja xor lods mov xchg pop adc (bad) dec stos and xor icebp pop pop sbb lcall adc pop imul xlat jge mov xor fs test pop xor pop cmc sbb push iret dec fwait stos dec cmp mov xchg outsl xor sbb popa insl cmpsl dec lret ret das mov test push jle cmp lods (bad) and cmp cmp imul test int jmp lret or dec (bad) dec test hlt ffreep call and fwait and out sti fwait dec ret mov orl adc jge cmp pop xchg sbb push adc imul mov or xor stos sub jmp scas out loope jnp jnp xchg popl stos test mov and inc xor cwtl movsl call jp add cmp int data16 mov fildl inc or pop stos push icebp push add icebp shl int mov fcmovb pop insb sub xchg pop aas stos sub jne pop popf push lds xchg jecxz xor xchg lods loop leave in arpl dec lret jnp jno out fimull xor sti jne fild std adc je push cld ret cmp out fist movsb or dec cmp mov xchg jp xchg and xor ja sub push cmp out cmp repnz aad pop pop cli stc pop ljmp clc push mov xor mov lock ss mov jmp sbb adc dec call fistpl pusha das adc insb push pop xor popa xor jns sub inc sub push bound jb adcl jne pop mov aam (bad) aaa push stos movsb push mov movsb push xchg pop push aaa mov jae ljmp shr xor stos sub jbe push ss arpl outsb push data16 push es sbb pop xchg mov fiaddl xor pop jl dec (bad) xchg jecxz jb mov cmpsl clc and lcall pop fcmovnbe outsb aaa jecxz scas mov and jno stc mov mov pop push dec rcl xor mov or sbbb sub sahf add mov pop ret or push dec xor jmp push sbb icebp and inc dec jecxz dec pusha xor push push repz pusha xor arpl repz jae in lods mov ret pop pop mov xchg xor pop adc push shll pop leave push push lods popf add enter or imul jns test lcall sbb loope aaa jecxz mov repnz push dec leave adc popa out mov cmpsb xor mov gs cli adc loope in fdivr loope push push iret and notl lea ja (bad) cs test test mov pop stos mov rcll mov xor xor add push rcl dec mov fsts icebp mov das mov roll popf push mov or leave (bad) dec arpl stos xlat test push push sbb pop dec aaa pop lcall add mov add mov movsb adc mov cmp mov imul pop (bad) movsb push scas and mov shr mov leave sbb jae bswap inc mov jo ja xor pop clc lods cmp faddl outsl out and dec in mov mov out xor mov hlt dec stos and loope pop bound icebp lock mov in mov rcll xchg je addr16 cld xor mov jle movsl mov rclb (bad) sbb sarb adc retw dec aas mov pop lods xchg js add pop loopne xchg mov dec icebp lea push dec jp hlt mov jno xor pop jp inc mov iret pop pop aaa sti lea and pusha addr16 clc adc xchg call jae mov xchg mov mov inc mov arpl ja ljmp addr16 imul (bad) imull mov add inc xor imulb mov xor iret mov clc cwtl stos shll (bad) sub pop and xor in adc shrl out je jp sahf pusha (bad) hlt xchg jne pop orl pop dec jmp out ja inc mov jbe addr16 jle jle xor hlt jle jecxz xor push (bad) mov xor mov (bad) mov stos xlat andl mov mov popa iret fwait add fisubr lds aad jae psrad mov pusha mov negl mov mov enter outsb pop lds cld xor jecxz clc push push outsb mov add cmp xchg jmp mov jle mov clc push nop ret mov cltd aaa stos in xor addr16 rclb ss jbe mov sbb cmc pop arpl push lret fistl mov insl movsb push mov test fcmovnbe xlat push insb ljmp pop xchg outsb movsb roll clc mov repnz xchg divl rep cmp xchg sarl jbe jp mov fwait nop icebp adc outsl out leave inc (bad) stos lcall xor outsl (bad) cmc (bad) mov mov jl lock add fnstsw into pop gs js add mov arpl sub fiadd adc aad lret dec popa outsl aam xor jne leave jnp sti jns mov loope sub push jg fnsave mov ljmp inc out or lea aaa out jmp movsb xchg push sbb arpl jb xor dec ja inc xor mov pop ds cmpsl mov and imul fidivrl xchg mov (bad) insl push or std repz add in mov mov jne imul in fisub pop or cmc add imul data16 lock popa jnp or dec test add pop xchg scas movsb fwait ljmp or loope push iret inc gs leave jg add cmpsb push pop and sbb ret and lds cmp test pusha aaa out pushl movsb mov enter notb ja ror es xor push xchg push fsubl dec and jecxz in stos adc outsl push fild xchg leave sub jno xchg push imul dec orl and jmp int3 fs sub sub cmpsb sub jmp loopne mov mov (bad) add cmc sbb fstl rcr repnz pop xor lock in add mov out mov or dec dec inc stos xor cli ja mov adc cmpb in subl stos push xchg out mov or or cld in add cli jae lock fildl pushl imul and arpl lret pop shrl je and imul sbb jbe push xor pop and sub lret sub cmp push cmp mov sub outsl or or pop pop mulb outsl aaa pop addr16 nop mov lock mov pop jg lcall sub xor mov jno popf dec xchg js loopne xor jmp movsb xchg js push push push outsl xlat das popa stos add push fmul popa adc outsl xchg ss mov cmc lcall insl lock push mov sub xchg pop xchg mov movsl imul nop xchg push not jne les adc xchg or fbld or sbb push inc dec enter cmp (bad) clc sub arpl cmc sarb adcb sub fs mov dec jne gs push pop mov stos jbe dec jne pop mov push icebp dec clc insb (bad) into pop scas mov pop push pop pop push lret mov add outsl sti cmp les mov xor push add and daa xchg fcompl aas mov mov mov mov cmp and aam mov out cmp out rcll inc adc pop iret and mov outsl sub in ja lcall or xchg insb out mov cwtl jmp enter loop ret rcrl gs movsb ffree fdivp pop xchg in aas mov inc fs insb or fldenv mov rcrl rcpps int xchg add xchg bound mov xor xor xor push pushf repz add xchg sbb lret in pop shl jg mov std pop pop loopne jg ds std and xlat mov lods das int push stos jb sub mov xor lret jae divb pop mov (bad) out inc jne fimul mov loopne cmpsb adc (bad) ja ljmp mov in insb sahf clc add or mov js cmc jnp mov stos or lods ds jb xor push cmpsb pop repz mov mov ljmp xchg push iret mov scas mov push fwait stos and jae aaa mov lret xchg xor les sub dec stos pop frndint add dec add scas cmc mov mov pusha mov pop inc lcall sti in data16 push jne lret pop in popf popf push mov fcoms mov mov iret mov addr16 add adc jno xchg jecxz movsb repz inc sub push imul push and pop mov setae sub cmpl jmp push outsl insl shlb sbb push imul dec stos flds inc sub sub add and inc into jg jecxz cmp dec jae iret stos xchg cmc or cmp (bad) loopne mov adc cmpsb sub test mov stos mov mov mov mov ljmp mov sbb iret jo or aad gs xor in dec imul hlt sbb jp xlat pop aad lea data16 jo repnz pop das mov pop imul popa jo outsl jae out sti xchg mulb sti js in movsb out push dec jle xchg add fldpi pop push (bad) xchg or jb pushf cld cmpsl push pop data16 push pop loopne cmp out cmc add xchg cwtl push sahf outsb (bad) fildl push gs xchg popa cmpsl imul aas loopne arpl cmpsb xchg jmp (bad) or insb addr16 adc mov sbb dec push cmp push jge cmp xchg (bad) fldt daa test pcmpgtb ret cmp cmp dec mov inc mov mov movsb (bad) and mov stos sub (bad) roll cmpsb pop pusha imul sbb xchg sbb stos adc inc (bad) out pop fstpl mov aas or cwtl inc sub out dec movsb jbe ficoml jae jo rcll push lock mov stc movsb mov sbb pop add cmc loope leave adc lcall add jnp or dec pop (bad) push xor cmp mov pop leave stos fmuls (bad) and (bad) lret cmpsl imul int add pop test or in arpl dec lods jecxz in mov adc and cs xor ljmp sbb push (bad) divb stos icebp mov sub push (bad) jo imul loope pop out outsb cmp fldt in push cmpsl and in outsl push push into sub idiv nop mov xor jnp push lods into out mov cmc or and pop call cmp lret call or sub cmpsb jl mov mov xor dec fidivr pop fistl dec negl cmp xor bound sbb icebp xor jnp push in imul jmp fldt push lea jae cmp xchg and insb mov dec or mov sub sub gs cli push push and mov lret es popa repz fisub mov jge out mull jbe stos (bad) push sbb push dec int3 pop jnp fild xor popf dec dec lods arpl cmc lods pop inc loope mov aad mov and jecxz loope pusha lds data16 push gs clc xor scas sbb sub inc aaa cmp shrb js lods mov fcompl mov out fucom dec cwtl mov inc in mov pusha lea stos mov cmp xchg insl dec test arpl pop mov aas movsl jg sub idivb mov test lcall mov mov dec mov jg xchg cmp sub dec push jne in mov in test dec mov in hlt pop push cmp aam xchg aaa (bad) cmp ja rorl cmp subl mul mov sub push mov jmp pop cli push sub insb push xchg gs sub sub xchg ret movsb insl cmpsl jnp xchg xor popf shll jge or fs outsl pop cld mov insb adc lcall loop add stos les push movsw ret and arpl jnp sbb or jbe push add popa loope adc (bad) jmp popf push out push xor imul sub mov hlt adc aaa sub inc iret shrl xor repz jecxz jl fistp in jg inc les push fs ret mov pop push cwtl push (bad) (bad) repz mov xor bound mov xchg (bad) div outsl jnp into scas mov inc jb mov cmp (bad) bound lret cmp movsl sbb data16 lea pop or push xor pushl pushl repnz movsb inc lcall out addr16 por or jle dec cmp sti sbb movsb (bad) arpl jae push adc xor sbb inc ja pusha push xchg daa mov lods jo jns aaa push ljmp xlat mov dec arpl insb mov out repz arpl stc or stos push adc leave das pop push stos ljmp aad pop ss xchg int stos int3 repz (bad) dec addr16 insl insb into imul sub mov dec pop jbe sbb pop data16 cmp push sti data16 jge jne mov add add add jmp pop repnz sub adc fcomip mov xor jb movsl imul cltd imul lea repz repz imul xor ret insb pop mov pop rorl jmp fisub sub pop fidivl xor jmp icebp xor sub xor imul inc jb ja xchg (bad) sarl push divb jecxz pop cmc int3 pop adc xor imul idivb test inc or iret loopne mov sbb adc ficomp cmp pusha into mov mov and addr16 jae sti inc popa xor (bad) xor addr16 pusha outsl cmp inc movsb loop addr16 push jno or and dec push jne (bad) mov iret movsl iret jne sbb jmp inc outsb insb xchg sub jbe scas xchg ljmp dec mov lret add negl jns int3 gs and fistpl bnd mov scas aam sub push or xchg mov jnp popl jnp movsb xlat dec pushf push mov dec xor clc lods lods negb push pop or movsl xchg addl lahf cmp pop lahf pop insb test daa mov jnp idiv ljmp insl push mov aas jae mov stos add lahf or mov int idiv mov scas ljmp imul fbstp movsb ljmp xchg fs lahf addr16 aad mov mov scas es leave jae sbb bsf xchg push or into mov add arpl loop outsl hlt and mov sub add (bad) sub je scas xor cmc arpl ror mov xor or jecxz push xchg dec push fwait pusha lret addr16 test cwtl inc pop add jnp pusha pop lods push jb test in mov stos inc dec (bad) repz pop and (bad) jbe or sub fisubrl lcall mov push and iret dec xor push inc lds sti movsb dec jg sub sbb push mov shll nop cmc adcl mov push stos xchg popa jb and and popa imul fucomip xor sub add ljmp xor aad arpl push sbb dec icebp int3 aaa loop ja xor mov push loopne je jle sti dec das dec test insb popa push sti push ss insb inc hlt ret pusha jae dec jno cmpsl adc addr16 dec dec push lret inc sub into and rcrl pusha xchg and (bad) lahf cmpl jb inc jo dec mov loope dec mov call rcrl and mov xchg (bad) sbb xlat fcmovne shrl xor sbb xor mov inc jno xlat push aas fbld and out mov std jmp aaa mov xor sbb leave jl ja cmp jne sti arpl imul pusha push and sub mov ja sti (bad) mull sub xlat pop repz mov and dec and pop jg sti arpl push bound mov out and lds adc mov sub ds sbb fldcw cld dec pop xor jne jns scas out rcrl push les sbb sbb stos cmpsb lea imul jb xor sub cld stos and pop loopne sbb (bad) pushl xor notb xchg repnz popa dec data16 iret outsl cmp gs cmpsl fmuls scas in pop mov xchg cs dec adc imull cmp incb lcall mov cmpsl jmp daa mov in dec xor and dec adcl repnz and push xchg mov or out or jnp stos popf in les sub sub pusha pop mov jno push imul insl data16 add lods jb loop pop xor push imul adc jl sti mov add adc sahf xlat outsb xor dec (bad) sbb mov jp sub (bad) push jecxz pop mov lock inc sub mov sbb scas test mov dec adc mov cmp imul insb repnz cli dec sbb push pop push xchg sub call es push sbb jae mov (bad) out aaa lods fstpl sub sub stos call add cld jae or jmp sbb jo pop sar out movsl dec arpl mov lds cmp sub jmp cltd sbb scas sahf mov dec (bad) fs pop mov sarl mov jl aas mov sbb cmp cmp loop sbb dec mov cmp or jnp pop cmc mov fcoml ss lods repz or mov mov outsl fiaddl arpl stos loopne or sahf adc daa sub lods mov into mov jle pop sub mov hlt xchg data16 or ja fiaddl push stc pop cltd in add sub in aam mov sbb jo sub push mov cmp and pop mov and cmp cltd cmp push dec jno imul stos mov mov outsb js pushf or cmp aad push mov enter mov or aaa cmp xor jo xchg sarl push ss xor pop and add insl push and data16 pusha or mov (bad) xor mov jnp call cmp fistl push xchg xchg and mov cmp mov dec stos sbb lret pop cmp xchg and loopne inc sbb add repnz sub dec lds adc jg ja sub push jae icebp mov mov shrl aaa lahf push pop cmpsl insl jo xchg aad out jmp enter stos out popa sbb sub mov fwait cmpsl rcrl fcmovne xor pop xor add push xchg add push std imul data16 sahf push or or insl pop bound jp jne (bad) rcr jb int out dec pop cmp sub lds add sbb xor call pop push mov ja lea lock xor adc outsl cmp xchg xlat js push stos testl adc push stos int ja fs and cmp dec sbb push sbb xlat add test es xor arpl pop adc (bad) xrelease aaa inc xorl ret ss imul loope push push cmpsl fs in jle push adc adc sbb xor icebp cmc jbe cmp jnp addr16 iret popa push out (bad) hlt subl imul xchg xchg jmp repnz add jmp sub repnz push call hlt xlat imul ja sub add add lea fistl ret and lods aaa mov cltd adc fdiv jmp jo fs push add mov and jno and cli push jo inc jne out jne scas fs pusha aad jno cmp icebp jb loop pop aaa je cld and (bad) jmp xchg mov (bad) pop movsl jne mov cmp frstor lea (bad) icebp enter jb dec loop or push jne stos mov rorb push fsubs sub outsl cli clc mov fs int push or lcall hlt shrl add cmp mov testl mov (bad) mov and addr16 and mov adc push sub and popa daa mov add int xor xor or jae dec jae dec in rcll xor mov fwait adc xchg sbb mov sarl xchg (bad) fidivrl sbb cmp pop nop loop fcmovu sti xchg pop push inc insl jnp inc (bad) stc push pop inc push pusha jo jg mull inc and mov lock pop stos mov dec ljmp js inc lahf mov into jae inc pop movsb push push mov cmp inc stos lret idiv shrb mov insl pop add scas xchg nop mov pop mov ret mov popa cwtl xchg xor pop mov sbb adc sbb (bad) push mov rol arpl mov cld push xchg andl cmp and shll jge pop mov xor (bad) xchg ficom xchg jmp rolb cmp push mov cmpsb (bad) or out insl push dec adc cmc or (bad) cld push pop jecxz pusha nop pop mov outsl inc stos cmpsl test sbb sarb ret sub js cld jno imul in ss clc or pop outsl jo mov pop inc idivl pop std fwait cli dec or js jo dec sbb divl jle adc sarl leave and push sub push iret decb (bad) out fstps cmp add shrb out imul out add outsb mov gs lea jno insb cmp mov pop sub sbb pop sbb jp or in dec js dec fildl sub dec mov xor das push mov adc aas sbb call lret xchg xor or rcrb pusha stos jne (bad) js dec push mov insl out sti repnz add shrb or popa leave jmp mov les ja sbb and iret pop push (bad) jl pusha jmp stos sub mov push aaa xchg jle test das jb mov mov or dec (bad) out sbb outsl iret cmpsl push mov mov out jge pusha data16 cmpsl jae mov int3 mov mov dec aas das iret fisttpl inc imulb inc mov add lret mov fs pop inc cmp imul test mov jle push in sbb (bad) (bad) push inc push jae hlt xchg dec push aas imul out std mov ja adc pop mov fnstsw std loope mov jg mov test rorb (bad) pop jle add lcall mov inc mov mov aad (bad) je arpl sub or mov imul cmc jne sbb aaa arpl sbb jmp jno and xchg jle inc cmp in xchg dec je dec xor and hlt movsb push in jl fs dec call add fldt test mov adc sbb insl ljmp into mov add mov mov and (bad) rep push jo mov mov rolb mov mov mov and mov nop xor adc sar push outsl out in sbb dec xchg aad popa sbbl cld jp fcoms arpl stos (bad) in daa jge insl jg aaa pop push push pusha inc fidivrl inc test int roll sbb test subb pop in mov jle outsb push movsb repz movsb pop lcall push xchg enter arpl dec cli loope jns jmp pushf (bad) fisubr xor jo add stos and data16 repz je mov popf mov push ljmp ja stos mov leave mov int in pop xor outsl dec das cmp inc sbb mov stc add stos adc stos xlat cmovns push daa dec push sub mov add test imul out ja repz jno shll jb icebp push leave arpl stos mov movsb movsl inc sub sbb fldl mov adc (bad) jbe shl mov sbb fs imul xchg push fildll dec sub cmp lret mov add dec inc fs jle std ljmp dec push outsl jae out (bad) stc push jg decl xorps mov mov mov ss jo cmpsb inc insb and jmp es push add dec out adc sbb divb mov jbe roll mov mov insb stc sbbb fisub pop xchg fnstenv pop mov dec jae call lcall out clc jp mov nop les dec movsb mov in out sbb in divb pop test leave out mov rorb mov adc sti jns fcompl mov push popa pop xlat jmp icebp pop dec lcall push jae cld push add inc in push jl and mov pushf add pushf pop daa sbb xchg movsb shll sub cmp sti lods jo mov sbb shr nop movsb fstpt jge mov lret outsb cmp xchg (bad) addr16 int3 in negl dec (bad) gs outsl adc mov cmpsb cli or (bad) mov add nop clc pop (bad) xchg dec mov gs (bad) push and je in cmp insb lret sbb add and mov dec and jb and stos jecxz inc push je arpl jg push dec cmp std (bad) rcrl fcmovnbe cmc test je or mov enter pop ja cmp or dec imull in addr16 fwait cmpsb push push stos repnz and sti sahf mov (bad) cld push or mov push mov mov scas outsl rcll push fptan cmp push loop imulb mov imul arpl stos push push testb xchg cwtl fcoml mov push push clc mov and mov sub mov into cmc gs je pop mov pop xchg mov mov lods inc pop test bound cmp and fisttpl mov je mov cmpsl or xchg fistp int adc jbe fild dec pop and in out adc mov in mov mov stos xchg in jno add add in or dec je push mov inc jae (bad) imul pop adc mov dec (bad) cs aaa push mov movsb sti (bad) pusha rorl fsubl xlat xchg fidiv and xor mov sub lret jl mov fwait pop (bad) jle xchg add test xchg (bad) pop pop mov inc ret adc popa in jo jmp jmp pusha icebp dec fisttpl pop pop aaa rep mov push leave mov lock cmc fsubrl cld adc adc ljmp stos dec (bad) mov outsl pop ja stos dec jecxz xor call pop inc int outsl aaa and sti dec sub negb int push shll push mov mov aam ret mov xchg fs xor pop shr fnstsw in dec add mov sub mov adc mov (bad) xchg cmp bound mov stos pushf xor ret stos mov push cmp xchg cmp pop pop ja pop pop clc sub xor fbld cmc or cmp cmpb sti fbld outsl in jno sti cmp (bad) xor adc sbb ja pop fildl add xchg fdivl leave scas add pop lahf push stos cmp dec xlat jae adc lock daa jnp mov mov add mov ss cmp inc sbb jo insl inc cmp pop push mov dec xchg adc cmc mov aam fmuls pop adc cmp inc sbb pop imul add xchg (bad) cld push mov xorl imul sbb mov ret inc popf dec leave in (bad) data16 push mov imul adc repz ja std pusha mov cmp add pusha push push xchg stos std inc cmp data16 out jae fild pop and jb mov sbb js lret xlat jae pop fistp aaa sub fcoml nop icebp daa or dec fnstenv jnp jae mov je sbb stos addr16 icebp dec aad cmp lds mov xchg mov leave xor arpl adc mov sub jae mov pop dec imul stos sbb mov push mov jne call icebp jo jno bound mov mov out je rcll clc push loop je push fs push sarl iret mulb es adcl xchg add xchg mov js stos add (bad) pop sub lods sub je mov loope inc mov or (bad) out push push and fs ret inc gs repz sbb leave sbbb jae adc lock jg in cmpsl cltd add mov pop popf out (bad) cmc add dec cmpsl into cli mov scas (bad) repz inc in jae mov mov xor cli xor aam data16 es pop pop push ss push jo ljmp int push inc cmpsl nop arpl in push dec clc dec or dec mov out out xchg loope cld xorb jne sub aas shl push jbe (bad) mov (bad) mov outsl (bad) sub xchg loope sbb stos push dec jbe dec (bad) xchg and subl loopne test sbb rcrl mov repz es insb fadds aaa orl push (bad) ds fldt lahf fsubrl rcll xchg or aaa into adc or js aaa and insl sbb dec mov aas ret (bad) js cmp sub mov push cld lret repnz outsb jbe mov sti sub mov (bad) xor mov stos sbb xor mov pushf idivl pusha cld add aad sbb xchg aaa push jmp (bad) (bad) jmp jno stc lock dec mov pop imul jecxz cmp lcall inc cmpb cli mov jg test popl popa cmp and mov arpl fdivrp imul mov or (bad) rcll fbstp lods shrl sbb jne,pn pop insb stos xchg and insl stc addr16 insl push imul (bad) sub push insl aaa ret sti cli mov insb sahf leave out (bad) insb push cmp cmp xor push ljmp dec and sti fistpl cmp cmpsl cmp xlat stos mov icebp (bad) jne push mov adc inc push jnp mov loope sub pop stos add adc leave cmp add xor xor sub or in test jnp outsl cmp ss testl imul push push xchg mov imul jmp pop cmp arpl je pop jb cmc cmp mov cmp push inc inc mov pushl pop (bad) aad mov arpl gs pop mov add fcoms negl out test sti mov inc sbb dec mov xor fwait push imul xchg imul pop xchg and pop cmp xor xor out sbb jle push shld inc fwait lods jo adc pop je xor es ret cmc hlt push xor sub pop cltd xchg and xchg sub (bad) xlat aam jno inc lock inc jl push add jne cmp jle (bad) aas call sbb insb negl repnz loope test add rorb add jnp xor sub sub popa mov movsb dec push mov cmp mov loope mov std (bad) neg imul and xor and aaa or mov out push rcrl jp jo sbb lcall stos jl pop xchg push int movsb inc stos push jbe call or sti jl iret sub xchg imul push or ss in pop enter not mov xchg repnz repnz jge sub insb dec pop lea in out sbb out push daa xchg call popa pop mov pop adc das inc push mov xchg scas and jle adc add add or ja mov sbb in push add cmpsb mov adc insb xchg movsb pusha call imul sub fsubl xor push (bad) scas pusha adc lcall xchg arpl fstl pop jmp popa jno jae addr16 (bad) mov mov sbb cmc insl icebp aas add jmp imul jns setge sbb shrl cmpsb lcall push sti mov stos adc rcll (bad) repnz xor push sbbl pop das pop out aas ret mov xchg adcl outsb sbb jbe (bad) jne stos int3 push sub out fs jl sbb or out or xchg lds or mov dec inc ret stos jne lcall pusha jge vmovntpd dec inc inc fs scas or pop jge enter fwait test mov sub stos aaa shlb xor (bad) popa xor arpl xlat and xchg stos or icebp addr16 mov dec sti mov insl sti jge data16 dec inc push xchg xor movsb inc notb adc xchg mov or pop scas js push je stos dec cwtl imul xor mov cld push cmp enter ja sbb int xor cmp pmulhw cmp lods mov pushf mov adc repz shlb cli sbb xor outsb adc inc adc es and (bad) nop outsl insb cwtl mov pop push push (bad) or push push imul je orl inc jo (bad) dec cmpsl sbb pop repnz push jo sub (bad) sbb (bad) xor faddl adc jp mov jbe dec xlat xorl sarl ror lahf jno std dec je and sub and mov push inc or sbb cltd add push pop shrd je sub xor jg inc sbb fisttpl in dec ja cli adc inc repnz sbb dec aaa repz repz push gs push push and fnsave int3 xchg inc push outsb movsb jb imul and pop dec sysenter or xlat shrb adc pop jg in ljmp insb popa xor push es xchg mov aad imul sarl iret mov arpl add lds mov sbb adc sub sahf dec lahf cmp sub insl fwait bound dec sbb (bad) lret sti sub enter or jae jo testl test outsb fs bound popa cmp jmp jo out mov and jb (bad) mov sub xchg andl (bad) aas mov addr16 adc mov lret leave mov test adc (bad) xchg jbe cli pop sub mov xor aad shr xchg cmp fisttpl add pop stos pusha pop imul fidivl pop inc insl xor pop cmp dec sbb movsb xchg mov imul jo add ds leave out pop fsubl jnp call lods shrl push insl outsl fwait out outsb ljmp jne rep sub lods aaa jp (bad) stos clc jae fisubr loope pushl nop (bad) or jge jg sbb mov and stos add dec cmpsb (bad) (bad) sub cwtl and cmp mov stos dec es sub mov testl fisttp pusha pop imul pop cld popf push int3 in jg inc mov mov sub dec or adc jne jle cwtl cmp stos inc adc imul hlt scas std add sbb inc cltd scas out xor push in out ljmp adc out cmp sti push push push bnd jmp (bad) dec ret in sub cmpb and out sub stos push cmp (bad) xor cmp xor push mov push xchg jl arpl xchg and std sbb jnp lods arpl xchg lods push daa addb push sub fsubs clc xor fsubr int3 dec loopne mov les sub sbb mov push and into xchg cmovae cmpsl xor les mov mov mov dec aaa sbb stos pushf or loopne gs out push sub (bad) stos out mov icebp push imul (bad) fs imul mov adc aaa sti mov mov jecxz mov adc dec pop push icebp or clc out xor jmp cld lret sbbl add cmpsb fs stos add (bad) repnz push sti mov in xchg out and sti stc mov gs into push xor sbb push pop sbb gs sbb mov push mov pop sub push ja stos adc jo (bad) enter out and (bad) fnsetpm(287 outsl insb push sbb inc sbb pop pop incb mov ja mov push mov inc jle jnp fnsave repz arpl sbb daa not push dec cltd or das add mov shrb ljmp fidivl mov aas leave cmp testl in mov pop das pop cmp scas mov push xor sub insl cmp jp call outsl jo fisttpll les and jmp push xor mov (bad) fistl push xor daa das xlat sbb jnp mov mov stos lret and imul push pop out addr16 cmp fstpt jo (bad) cmp scas repz pusha xlat adc addr16 inc pop loopne arpl xchg mov xchg imul popa mov cmp loope jnp jl sbb scas hlt ja add push xchg inc and mov sub (bad) xor in xor repnz cmp xchg jno sub sbb cmp int pop xchg sbb jno mov sub (bad) movsb outsb imul jne std jbe ja in je test aas mov jl (bad) das stos push and mov ss mov jo mov cmp cmp out jno (bad) lret push pop pop rorb bound mov mov pop (bad) mov cmp dec (bad) out loope hlt push clc mov jne aam or fldcw add loop repnz jns sub xor cmp rolb loopne jne cli int3 sub sub addr16 or push jg movsb flds push mov (bad) imul leave fs push js jmp sbb (bad) mov push js,pn imull sbbl push mov mov mov lock push mulb das mov test and lds aas int or in outsl lea daa push dec and arpl xor add ret lret int push stos mov movsb sahf gs ffree ds adc into addr16 hlt and pusha fcmovb lahf xchg lcall je pop cmc cmp adc xchg ret fidivl cltd fnstcw stos xchg aad add sbb cmpsb loopne and sbb push out xchg add mov (bad) jecxz pop or fstpl repz ret pop dec cmc or cmp pop lods mov popa cmpsb cmp stos sub std pop aad push aam adc popw push or pop movsb outsl xor scas add sub (bad) xor ja mov addl mov (bad) stc lcall adc mov pop imul mov cmp imul cld adc imul push xchg (bad) jno inc lret pop and cmp inc pop data16 xlat jae gs dec ljmp sub xor daa aam xchg mov insl (bad) jne lea (bad) hlt push ret sub add xchg push arpl mov cmpsl jae push add stos inc add stos je shrb xlat stc movl and or call push add and jmp aad popf lea (bad) jae pop pop pop jge mov adc mov xchg mov ss xor dec lcall xchg or jae in and (bad) push inc xchg mov cmp repz cmp pop outsb lahf stos (bad) and (bad) ret lcall outsb xchg in (bad) les or or lock adc push imul movsl insb ffreep hlt sarb and inc (bad) xor cld shr rorl stos mov data16 rcr movsb out ret imul mov adc sub xor rcrb mov and mov fs push imul les jecxz,pn xchg mov inc nop xchg sbb arpl jg sub cmpl hlt xchg es loopne aam in mov pop dec cli and js aam mov shll xchg mov dec repnz add (bad) dec popa int jecxz addr16 dec cmp inc (bad) sub lret (bad) xor pop mov sarl stos int or jmp jno mov sbb mov pop mov jecxz fidivrl jo inc jle xchg (bad) sbb mov addr16 inc stos addr16 pop rcll jg or gs push nop xchg (bad) jae sti insl aas (bad) (bad) sub sbb es (bad) push mov jb xor xchg xor rcrb fwait push lahf leave mov xor cmp sahf dec into xchg (bad) divb stos jns mov xor jae fsubrl ret jns mov xchg loope stos (bad) xchg ljmp call or stos and sub rolb icebp mov orl aad jmp (bad) stos dec iret push mov mov (bad) jae js ret fs xchg push icebp into cmp arpl mov mov push jae and and shl pop fs lea sbb (bad) int3 or loope xchg push push movsl jb sbb int test stos fs pop push sub xor bound (bad) push sbb lea fwait imul sub lock sahf gs adc push cltd mov xchg and outsl jno jno lea ja and xor test out adc in mov mov jno test pop data16 iret xor fbstp push inc lea repnz imul js aad cmp cmc (bad) pop lea lss cmp pop sti scas mov cmp push jle jl push (bad) out loopne ret in sub mov xor add sbb lods dec mov cltd mov popa iret cmp sbb imul leave dec mov fstps repz fwait adc jmp clc andb push jnp in sbb push and mov mov inc fwait mov push add jmp cmp dec int3 and dec fistp in mov stos scas xchg gs push sbb jmp cmp inc mov addr16 pusha divb arpl shrl lds inc xor cmp inc jb (bad) movsb jno stos sahf fnstenv gs hlt xor jp push add lods jl insb mov jo inc arpl movsl pop stos imul adc fldenv sbb jb push jnp popa sub jnp push add sub jg out int3 mov jmp mov cmpsb mov sbb adc in or in rcrb inc sarl lret mov add pop test mov test movsb mov cmc ja inc and jno mov pavgw mov lods pop xchg inc aas aam jo jne push sub push inc ja mov test scas mov pop xor ficomp fs xor lods dec push adc cmpsb dec jo push scas mov imul (bad) fild pop push sbb push out inc mov push sbb mov call lret loope xor ss stc xchg aas push sarb aaa xchg xchg je pop loop cmp mov (bad) xlat shl arpl aam stos insb fldcw insl mull (bad) add es repnz add cmp cmpsl sysenter or cld sub push pusha jmp push int3 lds and shlb out jae inc fs xor insl xchg je sub lret aas cs inc int3 in sar stc xchg add add (bad) cmp xchg (bad) ss gs jo jp pop std fwait bound cmc xor sti or sbb dec ljmp sub divl in lock or xchg aam or arpl rcl leave pop shrb cmpsb jnp jg iret in nop inc out jae xchg xor or fucomi add jge and sar jne cmp add in test stos pop lds xor adc inc mov jb adc add pop out jp or daa cmpsl pop fistl fsubrs inc cmpl imul sub fidiv lret rorl or sub lock pop push sbb add sbb lea jle (bad) lret jnp insl pop xchg sbb (bad) ficoml mov xchg dec add add (bad) xor mov jmp mov aad pop xchg jecxz jb xchg insl sti and stos xchg stos adc or mov mov mov dec stos add dec sub mov adc xor or xchg xlat rolb clc mov pop dec fldt ja xor pop outsb xor aaa xor lods sub imul dec nop add icebp stos (bad) jno push xchg dec dec loope negb lcall mov imul lret add loope mov mov inc (bad) cld js add lret push aaa push lds pop xchg add mov loope adc icebp mov sbb loopne fcmovbe in xchg add mov aaa mov sbb loop sbb movsb sti add insl fcmovnbe stos xor stos pop xor aas push gs bound sub pop stos mov lret xorl ss aam and and mov jne jbe test or int mov pop ds (bad) in enter xor mov out stos fs (bad) push sub jg mov mov push (bad) cmpsb lods pop sub ret mov aas mov outsb pop push popf mov xor ljmp insl loope dec dec lret pop aaa stos adc dec xor jb pop pop add dec jnp icebp lea (bad) mov jne stos test jb lret or shll fs and and sbb adc out movsb icebp inc sub popa (bad) lock inc pusha je jo mov insb (bad) add xchg and xor test mov sbb aaa pop push jo jecxz loop,pt mov mov int3 push xor sbb jb mov jecxz fs jne and (bad) (bad) movsl mov mov popa sti push stos (bad) sub cmp xchg and bound mov push or div or jbe xchg push cmpsl outsl roll cmp test mov jae cmp sbb iret divb mov imul mov movsb out jle fdivr (bad) insb pop jmp xor fild into aas (bad) leave jb fwait jle lods pop pop stos dec xlat sub jg kmovd pop inc xor xor sub sbb mov mov jno in jmp adc sbb jmp rorb in mov insb cli insl xchg xchg xchg pop push xchg xor aaa inc mov lds inc fmuls lret dec pusha lock pop jmp pop cmc outsl mov icebp jmp push fisubrl cmp inc stos inc aad xchg arpl pusha lods icebp mov lcall cmpsb inc sub xor adc repz jno jp jp push addr16 cmpsl insb cmp push xor lahf inc je adc popf xchg pushf dec clc aam push lcall push jae jae add test fistp addr16 sti jg fildl adc pop test jb (bad) xor insl or sub sbb (bad) mov and dec dec imul cmp pusha lea push mov fwait (bad) jns out xlat lds bound sub pop ljmp (bad) fucomi daa sti jno mov pushf stos shrb cmp add clc insl mov divl fs aad imul and and das sub xlat lods nop in push push (bad) cmp out dec pushw cmp inc stos jb mov dec cmp adc mov inc push repz jae push mov jbe jle jmp jo bound adc ljmp push imul jo jecxz std jmp jmp mov mov jae or jns int mov jecxz sub cmp adc (bad) popl and ja movsb push jl and fsubrp inc dec call mov xchg xor lock (bad) push jbe or mov mov das arpl mov stos mov into push inc (bad) loope mov fs aaa inc xchg or mov stos (bad) inc incb sub aam das ljmp sbb loope lds aas and rorb jo out arpl idivl icebp xchg lret jb lea clc movnti cmp stos sbb jns leave shrl test xchg ret pop mov inc push push std sub cmpb or jno jnp sub psubsw movsl pop xor inc adc icebp movsb in mov stos xor mov mov sbb jb dec pop jg sahf call xchg inc nop std jno inc push mov xchg clc repnz pop out mov loop insl or cmp bound mov test iret in mov mov xor aas cld jecxz test mov pop lea xchg push xchg dec and jns inc stos scas mov push mov cmp mov out inc in cmpsb adc jo les add mov ss movsl mov xchg sarl mov mov pop pusha mov adc pop push adc sahf aaa nop (bad) fist xor in pop inc out in adc leave pop inc inc sti mov shlb insl cmc out movsb ljmp cmc aaa int3 ljmp dec jle fsts mov jb add xor aas outsb bound fildll fwait pop mov mov push insl push mov ret sub add jb mov nop inc cmpsl mov xchg call push mov loope fmuls adc jge dec push das pop in stos cs lods in outsl fs pop sbb dec jb and jmp sbb mov ret jg fs stc jg fsubs es mov xor arpl xchg inc fs pop stos je xor push and dec arpl mov stos mov dec mov aam arpl push arpl les hlt mov scas fwait cwtl mov push adc stos in push jle mov add sub jae push xchg jge loope insb fnstenv add je stc (bad) lret xor xchg je dec sbb adc insb jnp xchg or push mov movsb inc (bad) mov shrl fs stos xchg rorl ja mov sub call jle insl mov and (bad) in (bad) imul pop int ja xlat aad in out stc rclb gs inc and aaa ficomp orl mov test xor cmpsl test xchg dec inc pop iret pop push push mov adc mov xor stc pop sbb stos jp je mov mov dec and or int ret leave js cmp fs fistl imul test shrl (bad) jmp inc jge sti iret dec xorl popa into hlt test or fidivrl gs insb sub mov sbb sub arpl (bad) mov (bad) into into es bound push icebp cmpsl cmpl xchg cld ja stc imul fimull shll push repnz inc imul push or cmp sub loopne lock xchg mov scas outsl xchg and out jl pop or xchg rcrl int mov sub push imul (bad) fwait out mov sub insl insb fstpl and sub xor pop dec and addl psraw pusha (bad) jno xor sbb (bad) call push fildll inc push mov ds pop dec inc sar push mov int3 adc aaa adc enter push pop add jo stos popa push dec insl mov idiv dec dec jle scas add cmpsb lcall cmp jg popa movsb in xchg mov push dec cmpsl adc dec mov pushf adc lods mov mov pop in imul lcall add icebp outsl add sub add arpl cmpsb loope push js xchg or push xlat push in pop fdivl sbb ja insb mov pop mov dec scas scas ret int3 mov das cld push leave stos push jmp popa inc fs call lds outsb jle sti jne out mov addr16 cltd hlt xlat stos cmp cmp outsl stos movb lret lock jecxz repnz lds (bad) divb jg sub dec sbb push mov mov mov jge ret mov fcmovnu call aam cld sbb dec lods push jmp mov dec stos repz dec sbb push pop sbb mov ljmp imul lret push les popa xor adc or outsl data16 fdivrl outsb insl outsw out insb (bad) mov shrl arpl adc arpl pusha nop lock mov stos and (bad) fnop in enter stos dec xchg es pop xor ljmp lea shrl outsb dec or jne movsl lret push mov inc inc cltd (bad) ret ljmp mov daa lret outsl icebp lds (bad) mov fcomi aaa xorl cmp xchg aas pusha and dec ror cmpsb push leave insl aam fisubrl jbe fbstp push in arpl xchg fwait addr16 ljmp insl jecxz push pushf scas dec movsb push and push jne test ja or mov xchg add add popf jb adc mov push ret outsb aaa mov leave lea cltd xchg fnsave jmp lret lea mov dec add sub rcrl mov adc bound daa dec test mov pop fisubrl push daa lock pop mov (bad) aaa repz js dec mov sbb push push lds pop mov mov jmp repz or sub xchg jns and jl popa cmp cmp mov jecxz addb out mov movsb subl repz mov pop pop insb pop stos leave (bad) and dec pop inc arpl pusha (bad) pushf (bad) xchg pop aaa cmp insb in dec cld mov jb popa push cltd pop inc xchg insl jb mov dec jae cmpsl mov lret add dec loope and inc inc test ret xor subl lret and jne fisubrl mov sbbb adc inc adc (bad) jo lods sbb and mov pop lea mov cld jmp in add das dec xchg push dec push mov dec repz scas data16 data16 push rcrl jae mov xor sbb push pop leave xor xchg ljmp mov xchg jb lea in jae jnp mov dec fildl xor test push xchg mov bound jb je lret out xchg lcall cmpsl mov pop mov jno and gs and xchg test out pop jb ror int in jne in dec mov imul or jae jno push les xor jmp jmp and xlat (bad) idivl stos decb imul test test pop mov mov and sub cmpsl icebp xchg mov xor inc cmp cld test push rolb cmp cmp sbb pop pusha dec imul insb adc xchg (bad) xchg and mov in (bad) repz jmp or stos popa jnp,pt mov mov pushl jmp xchg mov mov jg lock jne cmp pusha mov adc aaa push xor jno jno jbe ror aad adc addr16 lea add pop divb lea insl sbbl cmp push adc add (bad) mov dec hlt test jecxz cmp adc sub ret sub pushfw ja pop (bad) bnd shll cmp sub push push out mov ljmp (bad) cs stc push je and ja push pop stos inc sbb pop mov outsb ja lods mov pusha mov fsubs push jno cmp in ret in push pusha sub push push xchg adc add in shll push das in loope cli and movsb pop insl pop and jnp enter lea scas xchg cld lock in ret mov shrl jnp mov jne out in test movsb ds inc xor lret add xchg popf pop jnp jecxz xorb aam imul bound data16 call xor xchg fisubl pop push cmp adc mov hlt fcompl insl ret jmp dec stos imul (bad) adc loope xor pop mov cmp fcmovu inc call xor out mov mov push xchg adc movsb mov xchg pop adc fbld push jne inc push lret mov lret negb dec test xchg inc outsl jnp mov jecxz les jecxz sbb adc fs das push mov outsl inc xchg call jmp add subb jns and sbb movsb imul lret addr16 lcall mov stos mov out popa push out add push mov sbb adc stos mov idivl add out and xor add sub inc sbb cld xchg lret movsb loopne cmp int xchg cld sbb pop notl sbbl mov nop aas and sub jns hlt sahf inc cmp or mov shll movzwl add arpl push pop pop and add add pop xor sub test xchg add int mov daa mov dec xchg mov push jg stos and sbb lds pusha popa jp icebp fiaddl push in push into inc loop or iret or movsb movsl xor cmp (bad) pop pusha inc inc mov ljmp add mov fimull repnz es divl mov or addr16 hlt test daa sub cmp push mov loope pop cmp xchg insb stos (bad) mov sub icebp cltd mov sbbl ja mov push aaa sub mov jp jne das lea add pop (bad) fcomip xor outsl xor test leave (bad) ljmp jno addr16 cmc lahf xchg ss sbb dec xchg mov loopne pop lods add iret clc repnz sub lock sbb mov bound jmp sbb add sub push pop jnp ret ss sbb negl lods sub and and lret jb add xchg mov iret jb inc adc adc popa rorl mov dec pop adc pop arpl mov inc dec loopne (bad) fs mov scas push pop xchg ss adc in lcall adc loope in (bad) in xchg shrb andb (bad) out jne push mov add inc clc rcrb cld in jae xchg lods mov stos sub loope jns imul (bad) or mov adc (bad) mov mov loope and mov push gs stos jnp mov stos jae loope (bad) or outsl shrl sbb insl leave add pop cmp inc stos jmp or loope outsl pop repz sti sub (bad) mov inc imul jbe pusha ljmp stos xchg mov mov xor stos mov iretw push imul lea xlat or mov andl push stos pop cmp lea icebp test mov pop js cmpsl xchg adc mov arpl jo sbb jp data16 push sbb inc scas add ss sub pop imul subb cmpsb dec pop push jl sbb (bad) fstpt and dec inc cmp cmpsl cmp dec stos xor push ss or mov add movsl mov dec je jnp mov (bad) arpl jbe leave jne test jae adc mov shrb (bad) lea imul repz out jo arpl and cmpsb dec lock or sbb cwtl rcll stos jp shrb (bad) mov add aaa rcrb adc popa push sar push sarb mov (bad) in xchg sbb mov push rolb mov enter int3 pop repnz mov push mov aaa xchg addr16 cmp into ficom test (bad) in xchg dec vminss sbb jg mov xor aaa sbb icebp mov jae mov lret clc cmc lds ja mov es add test pop rcrb sbb ds dec ret pusha sti dec stos aas mov cmp movsl xchg pop int3 pop jb cwtl dec push sbb test ret sbb popa iret or inc jne dec rcrl mov xchg call icebp push js dec rep aam out mov int3 inc imul jbe push mov (bad) aad shll push dec mov mov aad inc loopne pop mov inc stos cmc xor adc roll xor push imul ret or fld xor pop and data16 call pusha popa pop js jae sbb push mov jmp lret dec mov sti sahf sbb pop aaa sub jle jg repz hlt push inc stos hlt (bad) sbb jo lods jmp xchg movsb jge dec sarl scas add mov into call add ret fildll mov jmp repz jecxz push not push stos inc push std jns mov scas jns fild cmp sub lret jl add or ja rcr lods jle lret jmp jae xchg inc adc cli fdiv mov cld xchg (bad) aad in or sar out xchg lea sbb cmpsl icebp dec aaa dec mov nop aam push frstor add inc insb add adc movsl jg imul leave add mov pop lahf sti jae (bad) jne insb dec jle pushf and gs sub jns (bad) and jno mov jae cli lock xchg aas addr16 xchg or outsb mov jle push imul pop icebp jne mov insl repz fldt cmp icebp in arpl push das sti xor je ja sub xor push (bad) xor jno das addr16 mov aad enter das adc popa add mov orl popf dec sub mov push imul outsl xor test adc (bad) stc xchg adc mov imul mov xchg lcall or jo ret data16 inc inc stos sbb loop or xor cmc mov movsb push cmp ljmp xchg rorb cltd ret out jno mov popf js adc pop push (bad) arpl push stc shrl shrb dec pushf dec xlat aas stos and repz gs outsl imul pop xor sbb jecxz or (bad) in in cmp sub stc iret fbld jae icebp and add out mov dec aam (bad) data16 lods loope scas cmp data16 mov je lods jmp or fwait push negl xor loope popa mov icebp movsb outsb inc adcl jne mov push outsb adcb sti jnp fwait pop js mov jecxz adc fs cmp out stos push dec lahf xchg pop and cmc jno jae lret div jae adc (bad) mov outsb dec ja gs les inc pop adc inc jno addr16 das pop and push hlt ret ret in xor (bad) cmp adc and cmpsl mov mov insl leave stos movsl sub (bad) hlt test add repnz mov lcall (bad) cmp cmp mov pop inc jno push dec jecxz sbb mov scas jo dec data16 clc test or test fs xor ja scas fs enter fsubrp xchg popa pop jle mov ja add cmpsb icebp push shlb xor push jb jo xor das push mov mov andb bound jge,pn mov pop mov daa jl ja test sub adc and add inc fiadd dec gs push cli data16 xor rclb push bnd scas pusha insb sub shlb cmpsl sbb pop jbe xor dec inc sbb pop xchg sub xchg xorb cmc rep sub aad fwait add out push rcl daa sub dec mov fs aaa pop cmp lock fbld ljmp xor jg push test inc pop mov xor inc cmc fnstsw cltd inc dec scas add xchg adc xchg pop stos repz lea jecxz inc aas sbb pushf test cmp lahf mov cmpsl imul clc dec inc daa pop cmp pop jo and lret enter out lea (bad) daa xor mov outsl cld iret div mov jae stos cmp or push push les popf sbb jmp pop orl cmpsb cmpsl jae je sub and lret bound hlt (bad) loopne not adc out xchg cld stos jmp cvtps2pi xchg bound and lods (bad) test add push call pop fs pop cmc stos cmp out sub sub mov insl adc insl xchg stos mov xchg mov cmp add aad xchg rorl pop iret mov arpl pop mov imulb ret bound xchg aaa jns lock out insb sub (bad) xchg imul xchg idivb mov or mov dec mov mov or subl push pop or (bad) pop lea jnp cmp cmp or js out test sbb movsb loop add jae add imul mov inc fisubrl xchg pushf jmp push in push popa cltd jne or mov out ret and das (bad) mov mov jb jae lcall call in pushf dec push in addr16 not clc push lea icebp xor imul test add sbb mov stos (bad) lock mov data16 adc or mulb lret pop jae pop sahf or popf adc fmull add (bad) ret jb cmp inc cmc or adc push cmp test ja fs lock ret dec lea jge xchg and and call loope adc pushf stc xchg out subl (bad) ja pop jae jo (bad) ss cmp dec ret sti push and leave iret cmc cmc in addr16 jmp mov push mov fldl xor movsb jne jbe pop idivb lret add mov scas add ja pop sbb sub jl iret ja lock mov xor out jae js clc notl pop aas out (bad) adc (bad) jo xchg (bad) fnsave (bad) stos pop aad aaa cs icebp add push jmp push dec mov push cmpsb push or insl mov (bad) gs stc sbb lods jae or fsubrl stos ffreep xchg dec data16 gs xchg mov cmc xchg add int3 xlat and cwtl je push addr16 xchg jae add cmpsl dec fldt gs jmp xchg ljmp mov push jne pop popa xor shrl fistp daa insb xor cmp fdivl arpl je mov ret jg (bad) push adc out dec jo mov pop pop je lahf std push push divl mov imul std pop repz jbe pop adc outsb imul std push repz std or ja pop jae std adc imul test push xor imul jae ror xchg sbb leave and add pop push imul xchg pop sub cltd xchg and mov cmp leave clc pop fildll enter push insb and outsl mov xor iret cmp stos rcll pop inc adc das or outsl aas sub lcall pop sahf jnp push pop stos pop dec subl fs outsl mov xor mov (bad) (bad) lret out pop push jmp popa lcall cmp cmp and sub xor mov push pop (bad) mov jmp in jmp sub jg fsub jae xorb stos test stc pusha xchg push enter aam (bad) aad fdivr outsb lock addr16 push ds stos sarb out pushf jb lds sarb mov push cmp mov and inc stos daa stos jp,pt jb insl or push loop cli fs arpl pop outsb sub out dec sub pop add sub lcall mov and outsl xchg inc and and test int sub aas pop cmpsb lea inc pop vfnmsub231pd cmp repz and mov jne movsl push fnstsw xchg test pop pop jo arpl dec mov xchg fs ja rcll jo jae jne nop test stos xchg scas and dec out je inc and mov arpl iret adc jb jne sti iret sub or cmpsb popa jnp fs dec js xchg ret scas (bad) jmp adc mov adc clc pop imul test cmp jno sti inc je jno (bad) push push stos fildll pop pop fwait pop dec cmp mov ja add lods cltd scas inc xlat add (bad) mov (bad) xchg pop xor fldt fldcw scas mov mov loope or sti das mov stos lret aaa cmp sub xchg lds mov cmc out xor bound in sbb arpl mov mov in pop es mov or xorl xchg push add cmpsb mov push xchg cld jae mov (bad) or xchg mov push jb xor (bad) xor push jle sbb loop dec iret push loope popa push repz fbld push jp pop dec imul push nop mov adc arpl mov sub aam in aam lret outsl in xchg mov in repz scas arpl xchg pop add mov lds adc js jae imul mov insb jbe push stos mov cmc arpl fwait hlt sub jnp xor jae mov push push gs mov jg cs insl lea outsl push mov out iret push sub movsb das mov jo jne mov lods idivl out mov ret in push xchg jno mov push stc daa inc xchg sub mov and int3 sub jnp fs sahf xlat test pusha push mov dec push sub mov inc sub fidivl cmpsb xchg je int push mov std (bad) and int push jg or pop movb js les push out movsl incb xor mov pop push pop jmp add scas sbb mov add cmp cwtl cld cmpsl imul fwait mov xchg es sarb (bad) xlat xchg ljmp test add ss adc out and push push inc jno in std aad sbb or (bad) out (bad) add sbb (bad) bnd das ljmp lret push dec mov push jg int3 push ret ljmp dec mov xchg in add jmp cmp ljmp daa cld int3 (bad) cwtl xchg push daa or (bad) inc cmp (bad) int int3 mov daa adc daa add push or cmp sub bound xor mov in inc add pop out stos (bad) push jge jl xor push add daa sbbb pop cmp mov btr sub jno adc push mov daa lds repnz (bad) mov dec repnz jle jmp xor rolb xchg (bad) lds add add adc sbb cmp (bad) dec nop mov push cmp and icebp and repnz sub fsubr xchg xor sub pop sub pop push xchg dec std repnz jmp mov pop jo sub ljmp cmp cltd pop mov lock sub ljmp dec mov dec ret (bad) repnz subl cmp clc lock inc cmp mov xchg (bad) aam addr16 cmpsb xor push add nop xchg mov xchg (bad) in xchg in pop int (bad) mov and icebp mov dec cmp mov cmp jb pop pusha pop sbb mov fisubl push xchg pop gs (bad) int mov mov (bad) mov imul ja xor jmp dec xor mov std fiaddl mov jle sbb lds sub pop test inc imul aaa dec (bad) aad imul (bad) pop es mov sbb sub jnp pop mov enter jl and mov mov fsts cmc jae stos enter repnz sbb jo push pop (bad) movsl push and mov nop xchg inc jge inc push cmpl clc lret cmpl sbb not cli push xor push dec or pop paddw daa out adc cmp mov push int3 sub dec into daa jb cmp (bad) push sub lods mov add cmp or lahf lods mov mov xor pop loope push mov jle jns cli in cmp fidivl pop pusha repnz push xchg jno hlt lds cli xchg jae lock loope insb insb andb mov sbb xor sub test out pop cmpsb fisttp jno dec sti adc xchg (bad) insl mov shll cmc dec jno addr16 stos out dec mov popa push fs outsl ret mov stos pop xor mov and mov (bad) ss inc jb cli hlt movsl mov fbld wrmsr pusha cld xor inc pusha lea and outsb cmp test ja stos pusha push outsl sub inc inc outsb repz fwait mov emms dec dec stos insl ss cmpsb rcll inc stos mov xor imul mov sub jb stos pop adc imul mov aaa sub cmp fs mov mov xchg pop rcrb dec mov add clc hlt and nop nop sti pop inc or pop fwait gs (bad) popa mov rcrb sbb int xchg or fwait stos ret int jg mov fs fisub push add xchg stos lret mov xchg inc mov scas cmpsl dec stos ljmp sub xchg jge ret gs outsb mov jmp push and (bad) outsl lret sti pop sbb pusha adc ss into sbb cmp (bad) jbe and pop mov lcall out pop or outsb hlt jg mov gs dec mov push popa mov addr16 sti insl ret es int int sub dec pop mov xor mov shr es cmp dec adc sub lret mov lock dec sahf iret and cmp jb insl jno into dec divl sbb sub xchg mov shll sub xchg mov int pop test scas lahf insl pusha push je or mov dec loope adc xchg js pop insl addr16 jp cli nop mov or sub fdivrs into addr16 mov in cmp ljmp sub dec repz inc xor jl or loope mov sbb fidivrl adc aam cmp sahf ret pop mov xor jno push pop jbe subl test lods test jge sub jmp push stos jbe push inc fist or add adc add hlt je fucomi sub lea jne gs jge xchg lods lea sbb mov pop or push ror arpl or sub add add push cmpb add add shll jecxz fbld test stos pop mull cmp mov mov gs js fs fldt sub mov imul pusha sti xor stos cmp push daa lea sbb sti in out jbe cli inc xchg iret dec daa mov cmp mov pop jnp adc scas jle arpl (bad) outsb rclb stos or pop pop and lods repnz mov lcall inc outsl jbe jg (bad) mov lea or sti imul jae jnp and xor sbb mov icebp push inc fldt jne fsts in sbb add or mov cmp xchg mov jb inc leave aaa mov dec jg cmc int adc or arpl hlt xchg or fs sti lea mov sbb test ja arpl inc push scas jno push fwait adc in leave cmpsb push add jns fist sahf hlt icebp dec std test pop lea pop rcll push loope jecxz div insl ljmp (bad) imulb xchg fildll mov mov add mov imul sti in lcall pusha pop jmp cmp mov imul xchg push je cwtl pop dec jae xchg pop sub call dec sbb sub jl cmp mov sub ja jnp xchg lret imul fist std dec cmp dec pusha mov fbstp stos in outsl lea daa mov jmp (bad) push fcmovu js icebp xchg xchg mov fwait and or cli stc xor xchg (bad) and dec inc arpl jns stc stos popf test movups mov pusha adc pop mov jbe lods jae fs jnp test repz xchg jg sbb xor stos in sub int push sbb aaa adcl sti pop rsm push test ficoml enter dec push mov mov data16 ja cmp jbe push fnstsw push jmp inc push jg hlt or sub xor cmpsl mov hlt inc int3 and lea pop jecxz out aam xchg fldcw iret bound movsb sbb pop loopne out sub loop into movsb (bad) in mov push pusha call stos push fbld add test adc add imul cmpsb xchg js sub clc xchg jmp lret xor adc frstor imul xor aas cli ja repz inc ret xor pop pop sti das aaa cmp sti jae pusha push pop lea dec insl jle mov sahf jno out insl mov and pop lds (bad) xchg push lret or add lret dec out xor sub inc add jnp inc sub insb test outsb in lahf aad (bad) pop cmp jae and insl add pop fdivr out sub hlt cmpsl aas adc pop insb jmp or movsb push xchg leave inc aaa popa dec mov pop popa sbb loop push push and pop jno mov stos cmp in mov xchg cmpsl sub insl je add lret in push mov pop push movsl js aas jae push inc insb adc out sbb cmp insb pop jns movsb imul cmpsb std loop lea bnd dec out sahf loope jno mov orl leave out in (bad) sub add jl jns ljmp inc pop dec outsb push je roll dec rcr divb std dec sahf or dec sub pop add pop enter cli cmpsl jne imul fnstsw mov sbb pushl fisttp cli mov jae mov addr16 sub imul mov lea (bad) in jg mov lret loope dec hlt xor push add cli xor cmp cmp mulps inc nop jp movsb cmpb mov cmpsl pop imulb (bad) jbe stos adc jmp imull jg and int mov mov xchg jmp lods into notl pop and xor mov xchg insb push sub mov pop (bad) jns xchg aaa jb xchg stos mov in sub fcomps cltd popl cmpsb sub jnp mov xchg sub repz or pushf movl lret xchg push es stos sub xor xchg dec ds (bad) mov loope jp cmc add dec mov rcll into movsb lret clc cmp mov das and rcrl insb mov fldcw pop movsb push inc sbb stos loop dec mov add push sbb cmp bnd aaa or push gs add mov and inc xor jne iret cld scas mov movsb into push dec mov pop sarb jp mov test scas popa out in or fsub xchg push pop xchg arpl mov push mov mov pop dec mov cmp sub mov std cmp xor js push jmp xchg jb test mov adc xchg andl jmp mov (bad) icebp andl mov imul fiadd addr16 adc mov mov jle (bad) fistpll push inc lcall sbb test and sub (bad) dec in push repz jge xchg jo imul sub imul xchg cwtl xlat cmp in pop mov ret sahf hlt add js aas inc lahf jle mov dec xlat pop and sub dec sahf dec pop sub int fs icebp jae or std adc cmp outsl adc push in (bad) add jno fsubs in pop inc pop mov ljmp out xchg pop push cmp inc mov es nop mulb cli out pop je lea stos push sub fistp xchg in mov add scas mov movsb dec xchg jle mov or pop insl sub mov cmp xrelease adc fldt xlat fisubr outsb stos push icebp in imul cmp in sub mov out sbb adc sbb inc add (bad) adc adc andb pop outsl add pop (bad) sbb fwait adc subl dec dec es push fistl in jecxz mov or pop sub (bad) test jae fcomip xor arpl xlat faddl ffree imul addr16 lods pusha imul int fildl lds js lea fxch inc mov inc inc jge dec decl push repz pop pop inc testl jns add add mov xor xlat insb in xchg mov push push stc push cmp stos and call out jns cmpsl jne cmp loope hlt popf adc repnz and ret insb push movswl (bad) jle mov inc lcall (bad) mov rolb repnz add lret sbb fildl out jae pop adc sbb push dec xchg mov sub pop ss xor arpl ss push in jecxz pusha dec pop push xor mov xor xchg sbb push pop inc sub and push and cwtl push stos and sub push and sub pop sti sbb insb push and adc mov push inc and sbb jg cmp div xor xor sar jo sub pop sti repz jmp imulb mov imul jno jge out push mov loope lret lret ja push jmp (bad) xor pop mov xchg mov fldcw insb pop sti stos or ljmp sti fwait pop insb (bad) call push mov imul aas inc xorl addr16 cmp dec ss outsb jb dec stc sub pop icebp push sti repz aaa and icebp pop xor push inc icebp xor ljmp mull arpl cmp jecxz xor cmp dec mov xor fildl adcb outsb icebp gs cmp mov lods outsb mov in or cmp jecxz cli mov repnz arpl insb push pop ljmp add and mov (bad) out inc dec or insb push sbb lret sub mov fstpt (bad) mov pop dec mov sbb lock mov sub pop icebp (bad) xor lcall lock fiadd addr16 pop (bad) ljmp imul push push bnd aaa in xor jne out push mov jb jne loope shl dec xor adc push inc mov xor inc into push inc sub stos shll or push mov pop add mov xor dec jmp add push dec adc std push xor pop or call repnz add stc data16 mov or outsb div data16 aad arpl insb push lods ljmp mov insb push or (bad) mov push loope mov aad pop test pop adc inc cmp dec mov out mov adc aaa inc fisubl inc add hlt scas shl fsubrs jno cmp lock sub jb adc xchg inc push xor mov imul cmp imul mov repz fcomps imul mov imul or fadds imul mov gs repz stc jb jecxz xchg sti in movsb and rcll test ret mov arpl mov hlt and mov xor xor mov test jo cwtl sub (bad) mov push popf pop bound mov aaa leave inc push imul (bad) dec xor btr aaa and imul imull xor addr16 sub aaa repnz xchg arpl jb movsb xor adc or in popa lret push xor mov push inc pop mov jb jo rcrb ljmp mov mov leave xor push jne cmc pop jae btr and (bad) cmp push and push imul dec pop (bad) std push repz pop cmp arpl jb (bad) xor and in pop sbb arpl jb sbb add inc pop sti push pop arpl jb jo jmp mov adc xor xor lret pop in ret repz mov dec mov jo cmp push clc xchg imul mov sbb xchg add test mov fsubrs std std leave pop jmp add mov and xchg fsubrl pusha andb aad dec sbb cmp mov addr16 decb out mov (bad) jnp add (bad) je out push xlat sbb or repnz cltd mov jae xchg mov or xor dec pushf push leave push jno lcall (bad) dec fsubs and ror (bad) mov jbe movsb lods push sbb jl pop push lret mov ss pusha dec dec cmpsl push (bad) cmpb nop sub iret shl mov or (bad) mov fs cld into sbb mov lcall xlat in adc in daa jb dec adc stos sbb call cmpsl pop push and (bad) cmp inc div jae pop mov inc pop xchg cmp pop push mov pop add push xchg ret sbb icebp adc sub xchg fistpl sbbl inc in mov sbb xchg movsb jns cmp sbb das mov sbb jne pop push adc mov lods xor adc repz add ljmp cmc je scas xchg push out clc push jne (bad) mov mov out push jb into and jmp nop sub dec es fcompl pop adc and pop push mov xor in fstl (bad) adc jbe xor or ljmp jae xchg push adc xchg add or (bad) sti xor pop out in or fidivl or xor push sub sti push lret repnz xchg push push mov jecxz sahf mov mov jo xchg dec jb inc jb ja fisub push pop jno add mov or mov adc fldenv pop push out int3 and and scas into mov outsb arpl adc shrb les push addr16 cli imul dec and ja push in dec sub cmp dec dec and jge push popf push ljmp sub inc jb and repz les pop pop jecxz daa je addr16 xor and sub sbb (bad) je pop ja push jmp shrl mov or xlat cmp push sbb push and push out loopne adc xchg cmp push repnz and jecxz push sbb aad dec icebp or imul or or psllw negb rol jl push ret sub idiv mov dec into sub mov enter gs in in loope adc inc insb pop sbb sti lds mov jne mov insl lea jmp add and imul mov mov imull inc mov or stos mov mov lret mov mov lods addl add pop jb jl or dec ret mov subl sbb xchg add test cmp mov imul aad adc mov es cmp xchg pop or ret mov xor push mov mov es mov pop arpl jl xor outsl mov arpl jecxz cld cmc adc addr16 shlb into (bad) cmp in push out mov push jbe inc sub mov fisubl jp leave xor (bad) jae outsl mov mov inc and inc mov sub mov sub in lret push scas sti ds jne push jge adc cs dec jmp out mov nop outsl or stos mov mov stos sti clc sub dec xchg outsl je jne sbb bound xchg (bad) mov jae jb insl loope xchg pusha sti out and pop sub sbb mov into jp jne pop pop cmpl sbb pop jecxz sbb arpl imul cwtl movsl add adc cmp jbe inc sbb int add mov ja jmp xor dec div and lret push call sbb pop mov sub iret fdivs loopne push loopne aaa pop xor cmc sub xchg cli lahf xchg popa or adc insb movl leave cmc or pop and nop insl xorl adc pop and (bad) sub fcomi push (bad) mov rcrl mov sub fisubl pop mov loopne xchg lds subl xlat shld inc negl pminsw dec ret pop (bad) or dec jge loop dec inc aaa jno imul sub clc test fidivl mov (bad) cld cli xor add mov arpl mov xchg jge test mov jb ja (bad) push sti repz push stos stc lea xchg mov mov loope sub jnp jns xchg dec mov ja fwait aaa aaa in imul stos enter mov stos add jmp xor insl mov ret arpl mov fwait cmp scas dec aad jo inc pop xchg pop lods jbe jmp test sub cmp shll push xor addl insl push inc popa mov pushf mov mov popa pop cli pop jp jne repnz add sti shrl outsb les mov cld push cmp ss dec addr16 outsb push addr16 lea fnstcw jmp inc mov (bad) adcb lods sti push and in lcall jno pop add int aad leave ret jno repz imul mov (bad) xchg push sub push cmp mov jno mov fldl repnz cmp (bad) jmp test outsl cmp (bad) xchg xor mov mov cli or ljmp dec imul sbb adc in addl aad and cmp lcall mov iret or loope or rsm sbb loope test repnz lret out iret mov mov imul add movl jnp insb jl aaa lcall stos imul jb inc xor shr mov ja sub ficompl dec mov loopne leave jne ja clc repnz sahf (bad) (bad) jmp aas loop sbb ret into mov out fcomps sbb pop test ret sbb rorb jno or insl std movsb fwait jle test jmp fadds jg inc test mov fnstcw sbb jle lods repz add add mov adc push lret jg xor add xor out and adc aad or jg mov popa pop or adc insl dec jae mov in imul es sub (bad) xlat jne frstor hlt jg jae clc push and out sub pop mov pop pop hlt arpl add clc xor cmpl xchg or sbb inc (bad) adc ficomp js mov jg jns clc jnp sub sti int3 stos (bad) xor dec xorl pop adc lret and in dec ret push push mov (bad) xlat pushf mov lahf push sti mov ja and pop mov imul xchg adcl add subb dec pop aad loopne insl stos push and jne pop or sahf xchg and imul pop or aad outsb imul popa xor out jae xor sbb xor lret dec dec mov (bad) mov or stos fild ret pop xchg outsb mov cmpsb xchg or ret adc and lcall scas out imul negl imul jge sbb pop mov mov cmpsb mov rcll jne fidivl fs icebp int add (bad) pop pop pop pushf push xchg jns (bad) outsl inc aaa pop add push ljmp add sbb dec sti push pop daa push in mov out sub jmp mull hlt mov push lock mov push xchg dec sub jg aam push (bad) fisttpll clc push push stos push out jg enter jns push dec cmp ret jb icebp push sub push and loope xchg mov sahf daa and daa xor xchg and mov push subl aas mov ljmp pop loop ljmp sub stos cmp mov add daa scas imul mov rclb bsf xchg jge add loopne addl jae xchg ds shr cmpl xchg stos mov stos popf dec and and xchg mov sub push (bad) mov cld ja mov notb mov cs jecxz xchg in pop cltd test fisubrl xor dec mov insb imul mov out jb cltd (bad) fwait ror orl xchg add jno out (bad) mov jnp dec divl cli sbb xorb aaa push xor loop mov test sbb cmp and ja popf dec out aad mov dec int pop dec add popa sbb push xor jmp push push gs aaa repz cmp popa pop push cmc aaa push imul es je inc cld out sbb movsl pop mov push imul movsb sub xor (bad) or adc dec sub and sbbl aam fisubrl jle add or push pop ficompl mov addr16 and xchg outsl fildll mov jg mov shll push and xor lret icebp loope data16 movsb push dec mov mov push imul es js inc stos rorl outsl adc xor mov lea (bad) mov cwtl inc and lahf repnz sub aam faddl jns inc push scas mov (bad) ja notb leave xchg cs cmp pop testl hlt les inc jno test rolb mov push leave out mov jnp cmc lahf or (bad) jg aam mov pop inc (bad) sti mov addl jbe stos out pop gs pop pop xchg mov loope pop jb pop stos sub push ja and ljmp gs cmc ss and sbb aas and push jo and and arpl fs fildl hlt stos ja mov cmp sbb adc aad in int loope int3 sub push mov pop jbe (bad) mov in int mov xchg xor inc add pop into stos mov push jbe imul add xchg into push aad in ja shl jno call aam inc push cmpsb cmp xor push addr16 int je xor sbb or gs jns push aaa push (bad) cmc icebp pop xor xchg clc fisttpl and fildll sub cmp mov outsl ja (bad) fisttpl cmpsl xor inc inc inc faddp movsl ja ja aas adcl add imul stos dec jl push jne scas and pusha scas fwait or mov xor movsl out (bad) fldt adc sub dec mull sbb or push addr16 push jg fs mov mov xchg sbb test inc or sub cmp frstor push pop pop iret shll lods insl jle jge xor movsl inc lret int3 sub fcoms in inc and (bad) jb push fsubs jmp add or cld aaa shrb xor ret cmp insb pop addr16 repnz jo mov xchg rclb adc iret xchg push jl addr16 jae (bad) xchg jmp dec pop inc push mov xor sub cmpsb sbb (bad) pop add dec pop lods mov xchg insl push insl lret mov dec (bad) stos mov jno cmp arpl std andb aam push add mov imul add sti pop dec pop mov andb sbb dec mov sbb xor cmpsl imul rclb fnstenv mov imul gs dec int jae shll xorl sbb test sarl iret jle cmp push stos mov mov fistpl add leave cmpsl arpl stos pop xchg nop fs mov xchg add jb xlat inc pusha out xor imul lret adc mov push stos iret adc mov push cmc mov ljmp in dec outsl roll push jb rorl jbe jnp subb lcall or loopne je pop and data16 arpl ljmp iret hlt int3 ljmp add jp mov lods or fstpt push pop push in rclb int3 dec (bad) adc ja sbb lds inc dec add imul fisttpl sub dec adc cmp jecxz pop or or and cmpsl in mov inc mov cmpsl loopnew jo jnp rcrl and sbb movsb in ficomp jbe aaa fmuls push insl jmp and imul arpl lret cmp movsb pop jae popa sbb adc subl and and lock js out and out adc sub mov mov pop pop add mov fidivl out pusha cmp add leave dec (bad) (bad) out xor iret out jb outsl movsb popa ljmp test arpl inc or (bad) mov mov (bad) dec push mov shrl push repnz arpl mov push out pop mov mov pop pop add bound icebp pop cmp imul (bad) mov adc iret xor xchg insb mov mov pop push push divl push test or (bad) out out jo dec movsb out ljmp in dec dec pusha sub push aaa pop dec xchg outsb nop dec lret subb (bad) dec push ret inc push notl and push inc imul jge and lea insb bnd jmp push divl and add and out and jg test cwtl fs jo cld push jmp pop mov or mov xchg aad xchg movsl dec xchg test cmp jb notb cmpsl enter or jmp push divl xor cmc stos fcoml push rcr ret cwtl ljmp add (bad) in cmpsb (bad) dec push aas push push (bad) jo dec jp pop fcmovnbe mov popa repnz jle pushf pop pop add xor in sahf (bad) dec push dec push push shrl or pop add (bad) in xchg (bad) dec push sbb xchg insb mov mov pop push push cmp arpl out jl mov inc cmpsb sbb add in mov cmp lods ljmp mov test xchg andb push mov subl inc rcll lea push pusha jl sub repz jmp push sarl inc jns jae dec mov and test push pop repz loop lea dec movsb inc arpl ds mov lea or cld mov dec bound cmp in (bad) push addr16 xchg sub push xchg push push in mov xchg pop cmpb pusha fstp adc push ficom popa ljmp imul pop push cwtl add cmp in adc mov mov xchg push nop pop fwait sub mov movsb popa in xchg popf pop push mov or push push out mov xchg xchg test repnz mov inc mov (bad) mov and xchg fmull jecxz xor int3 jmp xchg int xor (bad) in jb push jge mov int pop xchg sub ljmp xchg jg repz sub rolb fldt scas test subl inc test xchg xchg cld mov repnz mov cmpsb pop fwait sub mov xchg jg js xor aam (bad) push sahf imul (bad) movsl in cmp sbb xchg sarb pop xor aam arpl dec push jmp cmp mov mov push push ret (bad) cltd adc mov xchg lods cmp cmp (bad) in test cmp mov pop sub mov in jp mov inc icebp push scas push jle sub lds mov (bad) sbb (bad) jae movsb mov and mov xor test sbb xchg mov imul mov (bad) stos inc data16 lods inc mov (bad) mov or cmp shlb imul or stos push pop movsb xchg insb push xchg mov fstl nop pop xor aam arpl pusha lods xchg fcom imul xchg cwtl imul divl push xchg imul add xchg pop call xchg stos push xor xchg push pop fstps into mov or dec test cmp fldcw xchg mov push xchg inc icebp push arpl rorb jb sub movsb mov int (bad) inc or mov jmp cli repz inc cmc fdivrp iret push cmp adc out xor jno fistpll out inc push xor xor in lea and addr16 xchg out cmp fistpll lock mov jnp add clc stc repnz jmp or jo repz jae imull push pop push and mov pop xchg add xchg repz pushf sti jne repz or pop in xor pop inc mov xchg sbb arpl pop out js aam sub imul pushw ss aaa xchg dec mov mov inc mov shrl push push cld mov cmpsl jae jle mov pop lret sbb jp jo mov leave xchg in push push jg pop or mov nop call jns adc dec push (bad) out pop adc (bad) jbe push les xor sbb repz xor out repnz xchg sbbb in mov adc adc add leave les movsl sub fisttpl orl andl xchg xchg lret jne inc jb add mov ljmp sbb ljmp jae in mov and sub dec xor mov xchg js mov mov jb inc inc mov dec jg sarb pop mov cs cli (bad) inc out rdpmc (bad) and stos popa lea mov lock jns popa (bad) in movsb std jmp pop lret jl and jb call jae cli leave into stos ljmp je adc insb pop dec ljmp lods mov push sbb adc repz jnp jmp lock xchg in fisttpl push mov sbb in repz cmc ret inc jmp xchg in xchg outsl mov mov clc negb pop jae je adc bound cmp cmc aaa (bad) (bad) sahf mov inc inc pop inc xor mov movsb push mov (bad) pop pop out push cmpsl xchg dec add sub dec lahf or xor out pushf cld xlat (bad) or jg (bad) and and ja lea jecxz push adc jns mov sahf (bad) cmp jb and outsb nop (bad) not sti out iret repnz rorb int std (bad) (bad) les in sbb pop push outsb movb fcmovu dec mov (bad) repnz add loope pop xchg and aaa sub mov or arpl orb push fnstcw sub lea jb mov mov mov (bad) fistpl pop repz push lret movsb mov loopne add out movsb sub int jl xor push mov mov xor repz in ja data16 repz cmp loope sarb cmp push add rcrl jno out push xor fdivr fdivp imul jle fdivl sub add scas pop cwtl cli aad push or sbb stos imul data16 pop insl pop cmp repz aaa fistl imul jmp fidivl or (bad) data16 gs mov adc adc inc movups hlt das cmpsb ja arpl jae out mov xchg div xchg lret sti outsl lret (bad) jo pop and pushf cmp pop stos mov jae cmc out hlt mov loope sub jmp push (bad) stos jo sti and pop lret outsl xor lock and imul rol leave repz sahf dec aas mov fs (bad) (bad) jae ja dec xlat xlat js push int outsb add ret stos scas fist xor sbb push push lcall in jns lret xor sbb cmpsl mov xor push outsb sti xor dec xchg mov outsb loop dec pusha mov fnstenv jnp cld dec dec roll clc in mov andl loopne xchg mov pop ja and and cmpsb inc cmp popa mov rorb mov sti mov fwait aam scas add (bad) cmpsl ljmp mov sahf movsb outsb cmp or insl lea ficoml loop sub test jne cld add cwtl xchg mov inc mov sti gs jb lcall (bad) xchg addr16 (bad) jmp xor lcall dec and movb in and pop cmp fcoms stos int sub pop or sbb rcrb xor jl decl cmc jl fxch pop push test jae mov jecxz mov andb jnp div jne das push ja aas push (bad) das std jnp add adc cmp push mov jbe cmpsl jp mov jns pop sub std pushl lea sub push mov test xor mov or js imul (bad) xor decb cld sbb sub mov mov movsb sub (bad) clc push dec add stos mov rcrl jl inc inc jg lahf push stos jmp add pushf adc push (bad) or mov lds and out sar out or bound jb mov in sub sbb and je or mov mov jecxz dec mov mov (bad) ficom jl imul sbb dec lds lret pop sub dec inc (bad) mov add cmp cmp cmp sahf mov out pop push xlat fs pushf pusha sub jbe stos sbb in mov push push push enter cmp add (bad) push adc inc dec sbb inc cmp pop xor xchg jp ret xchg int3 call cmp test stos lret inc shll repnz mov push push sti cmp xchg add pop mov rclb pop pop mov push lret mov jecxz daa aas pop lods sub fistl test pop pop xchg xor cltd xchg lcall stc push pop imul imul mov and hlt gs push mov pop gs or add xchg xchg mov fs lea out mov in (bad) jge mov xor pop hlt mov adc aas jle hlt cmc fiadd mov imul dec aam mov test out in popa cli jne out outsl sbb dec pusha flds gs insl jnp leave mov mov adc mov insl sbb cli mov in xchg dec push jae fsubrl hlt stos xchg xchg add enter pushl movsl pop (bad) enter outsl jl sbb jo xchg es xchg outsl push iret jb mov mov cmp dec xor pop fiaddl xor pop dec pop ficompl mov shr push dec outsl je mov pop dec arpl imul push mov rclb imul faddl mov icebp call lods push cwtl outsl test push fisub fs mov gs jae aam out cmc sub xchg adc imul arpl gs xchg pop or add push fbstp dec pop icebp pop push enter adc cltd push in jne mov dec loope mov mov test jecxz ljmp data16 repnz (bad) jge ja cmc adc push cmp or addr16 imul push cmc mov ja scas mov out xchg mov jae aam rorl fndisi(8087 add xchg ja les hlt sarl mov stos jnp call jae (bad) faddl cli cmp rcrl ja stos rorb outsb cmpsl aaa xchg scas call stos sbb push push loop mov inc inc addr16 pop sub jecxz scas (bad) mov sub daa (bad) test rorl cvtpi2ps xor fwait jbe or imul mov in scas or dec mov repz mull jo sti cs stos pop xchg imul js lods mov imul insl leave aad inc jmp xchg shrl xchg xchg pop in push xchg jle inc xchg cmpsl mov pop dec and data16 sbb jmp loope sbb xchg jae pop adc pop pop pop push add jno jle push stos daa xchg gs sti notl jo jns pop test insl lea leave add cmpsl (bad) jne in xchg mov xchg (bad) ljmp repz stc jmp fwait sbb subl push mov cmp jae or lcall lds pop sbb sub inc mov cmp jmp loopne mov movsl stos and (bad) sub popa test xchg cs int3 add roll sbb cmpsl arpl pop loop stos push out sub rolb or lods sahf aaa xor xchg and jo sub pop and iret push adc (bad) cmpsl pop mov mov jle jge sub sub sbb insl in mov movsb jmp jae sub cmp enter pushf push in xchg jb sbb sub or add push (bad) xor aaa cmpl sbb popf out xor (bad) sbb cltd mov jo popa jmp inc adc push lock aaa pop jbe std cmp cmp jecxz loope out ficompl pop push push enter mov jge jae mov ficompl mov lcall mov mov fistp sbb sub std stos xor cmp mov in jo push ljmp xor data16 mov sub stos or mov sub out mov xchg mov hlt sti push xlat jb ljmp nop fnsave mov outsl mov popa push dec mov adc das idivb mov xor rcrl mov outsl mov mov and mov int3 das adc sub jge hlt push sbb call jbe mov loopne push aad jle mov xchg arpl inc aaa stos mov data16 imulb mov dec call les shll iret arpl stos jmp (bad) mov and packssdw cmc bound xchg es into stos fstps neg out dec lds xchg ljmp sbb rsqrtps xor fistl sbb mov iret push call xchg pop pop out jns dec pop into sbb inc sub fcoms xrelease repnz stc cmp stos lods rcll xor fs xor (bad) xor data16 fidivr leave stos and or aad sub outsl insb es mov fucomip cmp lock mov scas mov test dec addr16 push xor mov pop mov mov adc mov xor cmpsl dec push jmp fcompl (bad) sub dec inc out mov sub sbb cmpsb aas xchg mov xor mov sbb fs test mov out out xchg inc sbb lods je inc leave mov pop aad mov fisttpl mov arpl cmp mov pop push xlat je mov les in jno mov lret hlt push rclb (bad) aas pop daa jo push sub mov pop xor lods xchg (bad) dec stos mov movsl scas fistpll dec dec sub mov out pop ret addb and lret sbb xor mov test cmpsl call (bad) lds jnp dec imul fs cmp or mov icebp jae xchg nop or mov cmpsl arpl cwtl repz (bad) lock mov sub xchg mov stc (bad) jo stos fwait xor test add xor andl sti mov std nop aaa adc pop inc sbb pushf sub inc fs add pushl pop sub into xchg dec dec inc sub add mov jmp lock or stc out inc (bad) mov jno push pop dec and dec lock rorb mov push push sub lea push mov or shr sub push ftst adc mov fstps loope push push or rorl sti dec leave and repnz sbb push jo sti ror xchg shll popa shrl jne scas jge clc movsl stc sbb pop in cmpsl ja out mov fbld pop out add mov cmpsb inc aas xchg lock fs (bad) stos pop loope add (bad) mov roll stc pusha loope arpl fwait and cmp dec push jb mov xchg arpl cmpsl jle outsl inc lret movsb cmp sbb (bad) xor leave dec cmp lret pop ljmp movsl jnp bound mov mov adc or jle idivl push pusha outsb sub sbb add stos inc inc xchg mov in (bad) in aad inc (bad) cmp sahf stos pop add das fistpl hlt cltd dec cmp pop into stos jne mov jo and in popf ret clc test adc cltd fdiv insb pop clc adc data16 dec jg insl (bad) imul hlt xor jo sub pop and mov (bad) out sub adc les pop arpl sub ret mov push repnz js and inc ljmp xchg fxch js mov leave mov or pop cmp (bad) lcall xor push mov add sti mov or push fs cld aaa jmp fistpll cli jae leave icebp mov jle xorl call sub fwait adcb push jmp and gs jae int3 add in outsb fs cmp mov (bad) xlat sub mov hlt pop or insb mov (bad) rcll xchg (bad) mov je jns or pusha aas std js pop jg xchg jge dec out sub pop xchg shll jmp lcall repz ja pop insb xchg xor (bad) dec fcmovne dec outsl xor es pop je subl stos fbld cli inc jo mov mov cmpsb mov xchg inc mov jae mov jge jns jne push sub jge mov or and push inc add lea test jo mov pop jl sub hlt jno dec insl pop jge xor in xchg sub aad and (bad) xor lcall sbb jo mov lea or fbld jo jae mov and andl pop shrl imulb popa in out ja in push pop leave jne js jle arpl (bad) jne into cmp jne jo jae mov add (bad) stc add pop jne imul jg add cs mov push jbe (bad) mov pop leave ljmp mov stc out jbe cltd pop mov stos arpl call mov stos and stos mov fist xor iret ret xlat pop lcall out mov lcall fisubrl mov xor iret pop sbb adc sti out daa push mov ljmp push jnp adc add push xor mov dec mov scas aas push imul jbe push jae push sbb repz inc pop loop lret ret arpl pop xlat inc repz add fidivr ret outsl mov and mov outsl stos inc mov jmp push call pop daa pop or add cli insb xchg stos cs push ja imul lea je dec sti rcll mov cli jo jno xchg and ljmp fwait push mov dec lods out jnp push lds dec jg outsb icebp push outsb test cmp (bad) push loope enter imull pop arpl pop mov aad sbb pop push jne push fiaddl jno push subl xor xor movsb mov jb jp add lock dec addr16 push arpl pop inc in jbe add push xor push xchg push leave ljmp and sub pop and loopne xor ret fsub mov add dec not add mov xor jmp adc aaa imul movsl repz and ret sub insl mov stos imul jg lock push (bad) das mov ljmp inc sbb jbe call fs fildl daa pop inc or jns bound sbb lea ret stos jmp adc repz aaa or stos and imul push sbbb aad add popa push insl or out xchg call sti in nop cmpsb xor mov pop pop cmc add push jg xchg dec jne jne dec cmp cltd das das scas addr16 in or js add stos pop pop cmp pop in pop outsb nop je leave mov jmp call daa sti mull (bad) dec idiv outsl pop fs inc inc jbe inc scas ljmp outsb and dec jb jne cmp arpl ljmp (bad) stos xchg (bad) mov pop stos aaa pop add ret call je stc test pusha roll outsl stos pop ret cmp mov xchg mov xchg mov and push outsb ficompl out mov push arpl mov shl pop push aam pop jne jo stos (bad) jae dec lcall arpl divl lea (bad) mov repnz push imul adc es imul dec fidivl add cmp mov iret and in outsb add jmp xor jnp fistp loop rcll add lods mov add (bad) (bad) adc out adc fwait sub roll dec (bad) imul add push or roll fistl push aad (bad) insb inc std push push mov jecxz mov fcmovnb sti lret pop ficompl das arpl mov mov enter stos pop scas push je dec in ja dec adc adc xorps cmc pop pop or adc not cli xor jmp sub push dec mov mov cmc sbb inc cmc pop mov push mov pop sub fs iret add cmp mull loop clc aad push loopne mov and jl shr (bad) inc lret aad cmp push outsb call xlat mov (bad) cld repz jne adc (bad) push insl xor int xor aaa lcall pop dec or ja (bad) arpl mov pop cmp stos sub dec push cli sti fistl jle xor iret push xchg pop sbb sub inc mov mov arpl jno gs push aad mov jns lods stos sub leave cwtl shld fwait movsb aaa pop push iret (bad) iret gs add jns fistl mov push mov or inc aas addl out dec lret push insb jns and (bad) mov ret xchg ret adc cmp mov arpl jae scas adc mov pop sub xor inc int or inc int3 push sub pop jnp xchg sub lods dec fcmovne xlat adc aam in cli pop out test jmp cmp fwait das jno gs imul xchg movsb ficoml aad jo fwait mov mov sbb mov cmpsl mov (bad) scas jecxz dec xor add jns jnp mov in ljmp push push lret mov in ds inc lret push sub enter mov cmp stos jbe cmpsl mov cmp out jnp jnp sbb jne jg pop in popf minps mov (bad) cmc aad aam insb adc jne in add lock add fiadd imul and jno rorl jmp xchg push insb repz cmp fcmovnbe push add jo inc fs (bad) xor insl sbb pop sbb or pop mov or imul jb pop arpl sti sub push cltd and jnp pop xchg imul push pop je push call pop iret mov xchg ret jmp jne push jecxz lea repz call cmp push or push jno push adc jmp (bad) jne jno fsubs std (bad) mulb jns mov lds sbb gs dec test daa and in insb xchg or pop aad and push mov lea test mov push leave mov jb add jmp imul cmp shll fisubrl pop insb cmpsb fsubrs or mov xchg push xor addr16 add daa loopne inc mov iret test (bad) lods sbb pop jp pop add out mov xchg aad aaa pop jno pop sbb aad mov das fsubrs fisubl pop jp push out jno in cmp popa mov cmp insl hlt mov daa adc sub (bad) xor push hlt mov or orl bnd std sbb cmc cmp push hlt inc xchg dec and ljmp sub jne and push sub dec inc lcall xor mov out sti mov xchg fpatan pop sbb xor adc xchg and fwait sub or mov xchg inc insl pop inc jmp (bad) xor xor cmpsl xlat jbe sub jmp mull jno pop jae out push daa xchg ds sub hlt mov and and (bad) pop cmp sub insb scas aad ficomp ljmp add jle mov jle pop jns add iret mov js jmp xlat add pop jmp sti scas out adc inc stos xor outsl enter sub fistp mov insb sbb out or out mov xlat (bad) je adc fs xchg outsl and fldt mov (bad) mov inc push inc xchg (bad) xor pop mov xchg jmp stc sub icebp test add pop jb fdivrs mov mov loope stos std ss insb test pusha jg aad mov push sub aaa add sbb roll dec shr mov (bad) xchg test (bad) shrl fsub out sti or jge hlt movsl pop dec mov les cmp mov outsb fnstenv loopne jae xlat xchg dec xchg push pushf or inc push mov aam push adc imul xor jno push mov push jecxz jbe sarl imul jp xchg jno jno leave add out xchg insl shr push jge sub xor jb xchg std cmc adc dec dec sbb frstor jns fiaddl (bad) (bad) fnstsw aaa adc dec imul push push leave lds xchg mov cmpsl dec stos fstpl xchg push test fimul jg lock test and and mov aad jne xchg mov aas in imul pop sub xchg mov dec cmp mov fs cmp movsb in fistl pop add stos das jae cmp jecxz pop pcmpeqd hlt pop daa xchg movsb lret (bad) jae jne and sti jnp pop jae push js lea sub mov (bad) xchg lds daa xchg pop test mov arpl inc sub add iret xor xor xlat sarb push fcomip xchg and cmp call jl cmc jg outsb xchg scas sub mov insb sub int3 add outsl and repnz dec cmp push (bad) fs add leave sub cs repnz mov push int jb rcll xchg mov sub add sbb push out pusha pop jne mov sahf repz xlat xchg aaa clc sbb jne pusha leave sbb out jmp jns repz out rep bound fnstenv sub dec aam cmp mov incb mov das pusha (bad) ret movsl rcrl mov jecxz out call adc mov pusha js dec push or pop cmpsl rcrb inc popf or add outsb xor pusha inc stos les adc pusha jmp add lahf insb fsubr push ficomp fcmovnu dec repz mov in negl sti stc mov dec aaa lret in (bad) mov (bad) popa sbb xchg xchg bnd xchg movd pop dec xor outsl sbb jae xchg imul arpl mov push fimull sti (bad) mov cmp cmp cli xorl fidivrl sbb repnz or sti cmp fild pop mov je stos fcomi jno mov addl ret pop int popa xlat mov aad jmp add mov xchg cmp sbb cmp popf call inc jp movsl cli dec ret repnz inc and jecxz outsb inc (bad) sub xor mov loop push fwait js sbb mov xchg sti arpl mov rcr loop dec pop xor xchg add sbb andb cmpsl push out roll inc xchg punpckldq test pop addr16 sub dec xor in fistl dec subl mov arpl outsb sub sub fmul add scas add movsl ss insl sbb xor pop push rorl dec lret ja dec jo jp aam call dec insb sub stos (bad) ja out stos cmp mov mov icebp jg inc and dec movsl int cmovb lret (bad) in cmpsl sbb test adc jae add xchg pop hlt mov stos xor idivl jae in push push arpl ftst mov xchg nop sbb xchg xchg cmpsb arpl xor repz cmpsb ja ret outsb stos fs insl sbb stc mov lret ljmp mov pop fwait jnp and and in std lods inc lds test pop xchg dec xchg pop outsl push fstpt xchg pop test int cmp mov inc lea daa or out jo aaa aas popa jle insl xor pop ljmp stos pop fsubl icebp sbb jg ss cld and add push fwait inc cmp sbb arpl insb stos mov mov mov add repz clc mov test jo pop repz imul mov les add addr16 inc jg repnz cmp (bad) (bad) xor cmp loope inc dec aas inc add pushf or cmp icebp imul (bad) sti dec leave imul mov (bad) mov jbe xor push stos arpl lret adc mov pop jbe stos (bad) pop jb stos aad pop xorl outsl push push add (bad) imul mov insb inc imul ds push xlat add dec pop jmp ljmp mov (bad) and fs add pop xchg popa or mov xor call mov sti xchg in fs push add subl movsl sub je or xor mull jo hlt mov jnp or dec dec int3 push pop mov cmp repnz pop dec fsubrp call mov vpmulhw push or (bad) lods cmpsb or pop pop out (bad) aad dec call data16 ljmp adc mov imul sahf (bad) notl pop pop sub cmpsb cli pop cmp cltd fistl imul dec and mov (bad) push mov add leave mov xchg test arpl jb mov dec mov and leave xor in sub (bad) and ljmp xlat mov ja mov mov ficoml (bad) and rcr add xlat insl fwait (bad) sbb dec stos lret outsl pop (bad) lahf inc xor arpl jle cmp fs pushf add cwtl sbbl aad aad out repz aam pop lret pop dec fwait jno fstpt jne das jmp jg test inc (bad) clc mov jl jg pop dec adc jb dec (bad) lds fiadd sbb sarb in out icebp pop xchg cmp in inc bound movsl loope xor jae push or dec adc cmc subb out divb mov push ret hlt inc push xchg lods fidivl cwtl outsb mov pop insb movsl dec xor arpl je rcll hlt push inc mov shl call aad pop push adc cmc sub in and push gs mov inc je xlat push push sbb icebp sub push popa mov inc into add repz cmp add inc or loop pop sub dec pop push fs inc out ret mov pusha stos movsl (bad) icebp jae mov jl xchg nop pop in jbe stos loopne sub jmp mov xor mov dec out in jle in clc dec adc daa stos jo sbbl imul xor enter (bad) ss push mov xchg (bad) sbb ds cmp js fs lods out mov sbb icebp push lcall xor sbb pop push fcomi sbb lea pop icebp outsl arpl (bad) cmp lret sbb or popa iret xchg push inc (bad) jne sbb mov imul dec adc clc and not push lods jae pop cli mov in sbb gs mov iret xchg mov dec (bad) dec mov inc loopne nop sbb loopne push loop inc cmp adc test (bad) bound xor sbb jno pop rep js mov pop sub sbb hlt cmp cmp mov sbb sbb pop adc leave ret pop insb sarb pop inc or jne xlat fcmovnbe jo cmp call in dec loope or jns sub mov dec aad mov sbb cmp or push push jns push fs xchg sub pop repz imul std dec xlat daa int cmp inc (bad) repnz insl out pop out dec sub xchg sub fwait js out out dec mov xchg in add insl xchg inc rorl push jne push sbbl adc or mov ret mov xchg out cli xchg fistl (bad) cmp mov (bad) mov ja push inc jae,pn fwait adc sbb sti add dec inc cmc out mov sbb and xchg lahf pop out jg aaa pop fcomip stos cwtl and mov lret jmp cmp lcall imul in mov aad cmp fs movsl fs add jp add push stos mov jmp push gs push mov sub sbb adc shll jne xchg add push out aad mov xor lock pop sbb jnp sbb ss xor outsb bound dec lods mov add test sbb scas int inc stc mov insl push orl fildl xchg hlt cmc jbe jne jnp push sti xchg add pop push (bad) push pop adc out jmp sub add stos xchg insl mov adc sti cmp xchg adc add loopne out pop arpl in sub (bad) lcall test iret adc sub ss (bad) add xchg mov iret jmp sub div push mov rolb adc cli shll xor add add sti mov std inc scas cmp push jo jae out sbb mov jge out push aaa pop int bound faddl repnz mov frstor fwait cmp and js fsub push jl jecxz dec jo dec ret jbe mov xor lock ud1 mov pop mov dec mov pop add jbe scas aas mov imul xchg mov bound push xchg ret lret movsb cltd dec sti (bad) add mov bound xor adc cmc fadd jne aad pop clc gs ret sbb sub and es sub sbb mov pop jl je fs in xor cli add xchg pusha sti out (bad) (bad) gs xchg jg repz mov xchg mov sti dec xor push jo jecxz mov test jmp iret insb bound cmp and dec add insl xor testl fldl pop pop mov loop adc ja lcall pop pop cs cmc push js dec mov in sub stos (bad) push or jg xlat xor sub insb loop push loope sbb xor jno sbb (bad) jbe inc mov outsl xchg inc dec outsl push shrl sbbl jae sti push add or mov stc cli stos scas int fs pop xor in bound fs out jmp push (bad) (bad) pop sti fbld pop xor fsub push ja (bad) (bad) push je mov in pop dec pop xor fwait repz test aaa inc outsl in mov push dec pop push mov cmp xchg pop sbb or ret fnstenv dec sbb dec stos adc fcmovb cmp adc roll es inc ljmp add stos fsts xchg mov sbb cmp add jno (bad) (bad) out mov cltd imul lock and imul mov enter jg (bad) mov adc dec push adc jae cli shrl sub imul in cmpsl arpl mov mov dec pop add xor repnz push mov sbb jnp mov out mov fs jo jnp jmp mov cwtl add sub fldt inc sub imul jno cs lea das cmp int3 movb mov push xchg dec adc lret dec iret fsts stos (bad) cmp lret add jnp mov hlt test and (bad) out jbe pop rorl jnp inc push pop fwait xor pop xchg sub dec cwtl adc in dec pop fidivl js test daa (bad) mov jmp orl in insl lcall inc add add sub (bad) leave push in int mov (bad) rcrl jmp sti or jmp cmp sbb mov jns (bad) jmp dec pusha outsl fisub in (bad) rorl (bad) sti repnz cmp pop jno mov or pop les sub jmp subb and test pop in call ret xchg (bad) sub jb jmp in fdivrs pop fwait testb push iret pop pop mov sbb dec cmp das sub push xor sub mov dec sti sub movsl jl fsub daa (bad) popa add push inc jmp stos hlt insl idivb pop aam pop jnp les sbb enter loope (bad) sub xor ja sbb jno and out icebp dec and daa mov stc insl mov add inc sti iret icebp in cmp add fnstenv add iret adc andl push mov pop inc ds and (bad) and shl stos testb insl push push or (bad) inc fisttp addl cmpsl push jmp mov loope xor (bad) leave jbe je int3 dec jae xchg add (bad) out jg jbe das std xchg sbb (bad) jbe les mov push xlat out inc fwait sub imul out mov fldt sbb and dec mov mov sarl loop jb or or lcall jmp xor push xor icebp jae idivb or imul sub aaa lahf push insl push sub ja mov rolb mov pop cmpb add cmpsl jle pop push adcl dec inc pop pusha sub or mov lods bound xorl dec add andl ja,pt jns cmp fwait lcall ja mov in push leave test fwait mov sar inc and outsb mov shrl xor cmp ljmp nop and sbb push (bad) fbstp dec std cmp or fnstenv mov (bad) xchg icebp push adc fnstenv dec gs lods clc pop mov dec lea pusha dec out push cmp and jne imul fsubl mov jge pop (bad) (bad) push fwait notl xlat xchg loope jne cmpsl imul or jne mov mov subl enter test mov movsl inc and mov popa jg test jnp push icebp xchg jmp aas fucomp loope bound mov mov mov imul jmp loop or insl xchg lods or and imul int pop dec add xlat lea out movsb dec jo dec pop jg cmp pop out push push mov pop cli aad test inc add pop push mov mov insl mov aam jb and lcall push jge out outsl daa mov mov int3 outsl adc movsb jmp sub xchg inc push pop (bad) inc negl push cmc into movsl jbe pop std add pop pop bound adc icebp jg cmp repz cs dec std jb jle dec loope sti pop dec cltd iret imul or cltd aaa (bad) sahf jae jne ljmp lods jae mov dec imul pusha leave cmp (bad) sbb dec mov pop mov or int3 push xor xor adc or imul dec fmull mov nop sub (bad) xchg adc out dec xor insl cmp xchg (bad) pop xchg mov inc sbb dec lret fnsave outsl out xchg or pop ja pop addps (bad) mov insl mov push test aad rorl (bad) in push jae pop and stos jns mov mov loope sbb jl adc inc test jmp (bad) ljmp icebp fs in mov sub dec adc fs in pop add cwtl or in add dec cmc sarb push xchg arpl add jle add sub fdivrp jmp (bad) out dec out pop roll xchg add dec sarl pusha ss xchg notl divl ret add out push sub mov xor out stos xor mov cmpsl shrl cmp mov lret stos xor inc and aas mov (bad) cmpsb mov mov sub jb xor pop imul push xchg loop out idivl mov in iret dec push fisubrl test cmp (bad) fstpl out inc cmp adc rcrb or (bad) cmpsb push add lea mov pusha dec push xor pop xchg cs or and fisubl shll clc in mov jmp addr16 sahf adc pop outsl rolb je dec xorl mov test fcompl sub mov ret jae adc push mov in outsb arpl push repz mov outsb dec sahf adc (bad) xor popa jne pop mov inc in popa (bad) rorl add cmp inc fsubp insl fldt cld out repz and aad push mov mov mov cmpsl and push pop mov int ds inc rol jg in fsubrp test loopne and in xchg popa stos jae xchg fistpl in jmp ror or outsl sti xchg mov lret xor icebp sub nop adc jne hlt fidivrl pop cld sarb pop nop jmp call loope mov in ds xchg mov jp into jns dec jp hlt cmc je adc je jo js jmp pusha mov repz fsub ljmp mov push pop push out pop arpl movsl jo loope adc push xchg cwtl in cmp jae push lahf adcl jne stos jge scas sbb push pop clc (bad) out daa jb dec pop (bad) pop popa imul rolb out loop addr16 cld aaa push push cmp inc sub jle or jmp add sbb jnp sbbl popa (bad) jmp xor jle pop mov jmp aaa insl notl fstpt and pop push insl mov dec pop sub push mov in test jns push jmp jge imul pop rclb rcrb insb cld ja aad data16 aas dec arpl ja (bad) dec jmp fcmovbe int sbb insl push addr16 push idiv add (bad) mov jno je push pop and pop outsb ret data16 add cli sbb loope mov inc pop pop loope out out mov sub in mov es xchg pop and imul cld lret xchg stc cmp push (bad) les repz push in or lcall loope xor mov jbe mov mov (bad) ds inc daa addr16 int3 lahf inc mov out dec xlat fistl xor imul inc sub mov mov test jl pop pushf cmp imul cmp inc mov inc popa test movsl pop jmp cmp fstl adc dec sti dec leave push and test mov sbb movsb cmp push aaa das jae inc outsl add xor cmpsl push imul dec dec (bad) adc ficoml sub int imul fs jecxz loop or movsl ret aad dec jmp xor adc sarl and (bad) not stos (bad) xchg scas pop ja jecxz add fstpt xor mov and sbb pop xor fcompl xchg push xor sub sbb in outsl cmp push xchg test ret outsl jecxz sti ja jae imul repz test sarl outsl or repnz lret stos mov push fnstcw adc mov jmp adc xor xchg sub sbb jne fist lock lods jge nop pop cmp mov repz mov shrb bound jge inc popa jns incb mov lock stos jno jne mov pop sarb xor je lods adc (bad) ficompl push stos adc fcmovbe mov jb out cmp mov sub push test and das js lret or push sub cmp sub inc fldl or pushf lret popa mov push js pop pop push outsl lock xor push (bad) (bad) arpl or push jnp pushf test xchg push pop mov xchg push push jle and cmp pop sub mov aam jmp jg xor std aad pop jg stos add gs xchg dec pop sbb xchg aad xchg pop das or imul mov xchg mov ljmp in cmp scas mov aad or sub lods int sbbl sti shrl sub jl jne mov outsb cmp xchg push push and push lea insb mov out jg pop fbstp push dec add cwtl xor fs or into dec pop cmp pop (bad) jo adc (bad) and adc pusha divl push jo ds xchg push pop jns cmpsb pop jb jmp jp idivl jae jae push sbb cmp into sub pop int pushf (bad) jnp scas adc stos xchg push sub lods jecxz (bad) dec push push push data16 std rolb or shll mov mov aam push outsl lods sub jmp dec into inc push adc jg and adc bound jmp daa sub lods jmp sbb inc ja loope xchg popa push inc dec inc push shrb jb jmp mov js adc ja mov add xor ret dec sbb pop sarb (bad) in jg daa jecxz jg iret jmp aaa push mov mov loop ret mov or call aaa es lea add lcall div movsb push xchg dec test sub movsl aam jns sbb insl jmp xor pop rclb xor (bad) jp lcall das mov scas inc jne sti mov xor adc iret (bad) mov and sub pop test call jno push jge rcll pop or repnz jl pop jns push sti xor aaa shll ja or leave xor imul out add push out push std sti fildll lods jp jb push aad xor add dec clc inc mov (bad) outsb dec dec sub and scas bound jnp sbb popf fldt test shrb enterw push insb mov sbb mov pop or std ljmp or into in xlat adc push push push or push xor fisttpl cltd dec in cmpsl mov cmp and pop out je pop xchg xchg dec fdivr ja leave and jb jg jb mov xlat stos sub shr notb lcall popa push push cmp sub lret (bad) mov (bad) sarb adc stos add outsl jmp jg add sbb mov (bad) cmp mov mov int3 dec or push cmpsb push movsb cmp sbb std fwait imulb roll bound lods test popf (bad) lock insl out inc inc into into sub (bad) ret jns dec (bad) jnp imul push aas icebp mov xchg in pop adc gs aam addb xor arpl push hlt sbb call stos push mov push test repz movsb scas dec loop decl and jne add dec sbb pop (bad) (bad) cmp lret cmc pop (bad) mov addr16 out xor add and sbb mov jp mov or out push inc test cld xor sub lcall daa and enter push popa pop mov lret add leave push (bad) xchg ljmp and sbb lea lret fbld push stos or pusha popa iret stos sahf mov xlat inc cmp dec push xchg lret mov (bad) loopne,pt lods jmp (bad) in pop sbb push mov out xor jle imul daa cli push outsb cmp lea outsb gs xor jmp sub pop dec repnz sub xor add lahf adc stos xchg add sar subl fwait es imul leave add pop icebp xor sti fimul mov add xchg addr16 adcl xchg insl orb outsl cmp push scas scas cmpl mov add xor xlat test inc dec pop pop jecxz loope je jo repz xchg inc xchg add push xor outsl (bad) out les neg js pop inc or jae inc inc loop js push scas insb push cmp jecxz cmp rorl popa mov (bad) mov lret sub xchg imul jne insl lret inc jae add scas jbe mov mov sbb dec pop or das cmp gs mov dec mov ljmp sbb pop jb sub pop mov imul xor lock add sbbl sbb xor jmp jne and fs mov or stc div jae hlt pop or push jp hlt pop rorb cmp jmp mov in std xor (bad) (bad) push icebp sahf sbb pop cmp lcall xchg xchg sbb repz insb xor rep out pextrw aaa mov xor fildl xchg jmp push imul cmp or pop arpl pop outsb jecxz pop jmp sub push inc lcall mov scas loope stos mov xorb hlt js mov mov sbb or pop add sbbl inc addr16 ja (bad) hlt jo aaa dec sarl je xchg das sbbl mov xchg inc adc push mov ja mov add pushf iret cmpsl jbe rcrl dec xchg jnp dec xchg jl mov loope fidivl jnp jb jmp dec dec jecxz out repz push idivl insb in sbb pop dec int sub dec imul sahf fcmovnu pop cmp mov loopne dec das jmp pop int lock fstpl xor (bad) mov jno clc mov inc jo jnp dec push pop lds inc lret jae ja imul fs pop fs arpl outsl pop dec test arpl push jmp inc sub int xor pop sbb adc or add dec (bad) idiv ljmp mov and insb cld mul ret negl int mov popa xor xchg insb pop mov or test pop fistp in mov pop add fmull dec out into ds fildll jb aas dec inc aam xchg gs gs xchg xchg cmp testb xchg push lret dec add jno add subl jmp scas fs xchg hlt js xchg jle adc jae setle pop cmp test in cmc out xorb push (bad) pop push in inc imul pop outsb cmpsl mov lcall imul push inc add xor fst adc leave or ss sbb mov scas jno out pop lret jge cmp cwtl xor dec push push (bad) adc js jno jae mov push arpl adcl cli insl out repz xor push inc test pop dec aam adc js ljmp dec pop and sbb cmp imul adc or add pop xor push ret xorb arpl ret test mov stos insb repnz (bad) xor or inc lcall push lcall pop pop les mov int3 dec push mov cmp push and xor repnz xchg repnz jmp fiaddl inc pop shrb aaa sub ret push cmp mov jae dec stos insb nop mov lcall (bad) jl dec xchg loopne stos mov mov push les cmp arpl or jmp hlt stos mov imul mov jmp aam popf imul mov std arpl orb jnp test push sbb fs add call pop scas mov and xchg adc (bad) dec int dec jmp pop imul jno test dec imul in push cmp inc inc jae sbb mov cmp pop xor push sti sub and lcall mov or adc mov out ds sbb clc mov ljmp push jno pusha mov (bad) mov add adc sub (bad) into and inc leave xlat insb stos (bad) sub cmp push subl mov push sub test fisttpll pop jo inc shl jg roll pop aaa aas jecxz cmp ds pop push and lret or pop jmp jno xlat jae lock xchg imul mov pop xchg maxps dec ror in push and sub outsb in sbb clc push fwait stos adc cmp fcmovne sbb movsl popf pop sbb inc mov shrb pop ret insb mov sub dec pop rorl jb xlat mov push call mov aaa dec push add xchg dec sub ret jne test idivl (bad) mov addr16 in (bad) or dec (bad) mov dec add pop sub hlt arpl dec dec loop aad (bad) jne data16 lahf jle or rcll out sub int push enter adc notl adc pop ret shlb lcall jnp rcrl push out add fcmovb xor ret insl mov cmp or test sar in jmp outsb push ss sti sahf gs fstps jmp add push cmp xor push lret mov out cmp data16 (bad) cmp push ja leave sub pop stos lea je icebp inc mov lret xchg sbb sti fbstp jb xchg out in push mov sbb mov mov iret icebp jb sbb mov stos ret xor xlat stos inc jl rcll jmp lcall imul int push xor jae jmp cmc jbe leave imul sbb pop ljmp push outsl add mov lret in mov outsl add in cmp push sub dec cli dec cmp jmp or sub cmc pop xor jnp jne (bad) jae add push fisubl out dec and loop data16 cmpsb popl lds mov push push dec call inc mov stos mov (bad) inc push sbb push rorl inc mov add pop cmpsb adc mov cli outsb adc (bad) aam pop dec jae negl mov jns add hlt mov jno fs fldenv (bad) push adc stc sbb push cld add lea adc mov push jae mov aaa das stos shrl divl xchg cmp sbb vpslld repz jno dec rol lods fs jo xchg pop arpl stos sarl sarb add xchg nop push flds iret pop add rcll sahf aas cld insl xor sub push xor stc imul (bad) xor jge add test call mov sbb mov lea xor bound data16 fwait (bad) lock leave cmp mov cmpl out adc lods das scas cmp mov mov add mov add inc and dec cmp int3 imul push cli xor xchg jno and ret inc out cltd push (bad) daa pop fsubp out orl (bad) add imul enter fwait add das inc xchg mov gs iret pop in int3 adc pop jno jge sbbb out lahf add (bad) xor insl add fldlg2 roll pop mov stos fdivrs adc in inc fstl add call mulb stc push sub fbstp or cmp daa stos and ficom and xchg and dec inc int cmp insl lcall xorb ret cmp cmc mov inc or mov cmp ss cwtl pusha and add cmpsl ljmp fnop adc lea icebp cwtl (bad) xor (bad) dec push sbb pop frstor jge cmc pmaddwd lea mov jns pop ljmp bound jecxz pop clc mov push lods leave sbb rcrb mov test xor jno aad outsl leave jg in cmp mov jae lds adc jg lahf js enter (bad) aas stc test adc (bad) cs out aad sub mov xlat mov push pop xchg outsb jl in js jmp jnp into pushf imul aam push imul or lea xchg adc not movsl repnz add neg add cmpb xlat pop cmp pop (bad) into (bad) cmpsb xor in fistl mov push imul add test adc (bad) sti rclb dec push sbb jae push jne fmull or jle out imul xor enter movsb aad cwtl mov xchg push jne ja aas out leave push stc mov rcrb int arpl icebp sbb es add lret sbb dec rcr ljmp negl inc cltd es ja popa hlt (bad) xlat arpl iret pmullw or stos gs pop cmp sub cli sbb mov add fcmovnb add pop mov jge push jae movsb aad fs mov movsb adc dec dec sti insl rcl ja daa (bad) mov iret es lret cmp pop (bad) sti jne push mov aad in fdiv xchg pop push lahf dec dec push lods cmp jecxz fisubr jge xchg inc cmp fimull in dec adc jne arpl inc arpl fwait mov jbe daa std jge sub adc out pop mov pop push add push fs (bad) sub stos dec aad xchg insb jne dec and pop xchg bound lds lret arpl push ja aas es xor push cli xlat ficompl aam sub jg pop int3 sbb adc sub insl repz sbb int dec outsb pop inc jb test clc jmp ss xor (bad) lods ds pop push xor sbb pop test mov in stos xor sahf int inc push inc repnz scas jns (bad) arpl iret push frstor out cmc (bad) in and adc push addr16 push imul ja pop (bad) mov xchg ret mov scas push xchg push lret dec jle push mov fwait sub aad mov mov jecxz mov scas jae hlt mov mulb (bad) fisub sar xor lea mov mov inc dec cmpsl jmp adc cli popf adc insb mov aas jmp test (bad) push (bad) and movsb fistl scas jmp iret outsb xor outsb push dec or imul (bad) mov fistpl fnsave push lds fstl and push pop xlat enter cmp add ss and inc push pop push jmp jns xchg (bad) bound push stos aaa (bad) pop insl mov stos and push js add sbb mov leave cmpsl adc in pop gs mov sbb into pop jb sbb pop out adc adc dec in mov inc clc popf negb mov dec pop jo test sub sbb jg jbe ljmp fprem1 das jo adc sbb mov cmp pop int3 sti mov aas cmp mov sarl add (bad) in popl inc iret jge int sbb inc mov sub outsb iret idivl push mov negb mov inc mov stc dec mov inc pop aaa inc add push js sti in clc pop adc xor cmpsl lock sti loop shll mov dec mov pop jmp repz stc dec imul sub xor leave stos popa cmp gs into ljmp push rclb xor loope cmpsb imul cmp je push (bad) out dec inc adc (bad) fucomi pop arpl mov scas sbb mov cmp push jo pop jb add or adc and or cmp jecxz xlat (bad) out out mov cmp test push or jecxz es dec mov je std and fcoms xor loope mov jecxz cmc scas repz cmpsb popl pop cld sbb inc pushf pusha test pop mov pop gs in push sbb test imul mov jno mov in lods outsl aad stos test inc pusha jmp insl fidiv pop fidiv or hlt subb pop push test push xlat sub ss or out xor mov inc adc pop aaa popf sub je push pop lret and daa pop stos mov rcr fwait sbb adc sti push movsl mov xchg std inc inc mov and dec in add test mov popf mov leave jne (bad) xchg pop and inc xor adc dec xor xor (bad) xorb out jl dec addb mov jo aas pop leave push ss pop jno leave outsl xlat cmp cmp jp aaa bound imul dec arpl add outsb imul mov push out popa and (bad) out sub je stos insl mov ja int mov pop sub (bad) gs jle cmpb (bad) imul sbb xlat jne push add pusha jle sbb repz inc push (bad) mov push adc jno sbb push ficoml sbb dec imul in mov out dec inc insb mov iret insl and mov in test and in or or cmc ret sub loopne (bad) (bad) adc je adc sub dec pop (bad) pushf xor mov lret sbb test in mov mov mov jge mov insb bound mov inc cmp rcll les jno cmp jno call rolb pcmpeqw adc test ficomp aaa arpl mov xlat pop sub jmp dec roll push cmp aas mov ficomp daa or aaa jno add mov dec jge repz gs pop xchg outsl add pop push fstpt push pop sub inc mulb lea sbb in fs add dec lea xor loopne or (bad) repnz sub clc push jne imul jb jns mov mov push add cld inc sbb xchg outsb inc xchg shll icebp pusha ret sbb or fucomip add xchg fdivl jns xchg repz lret inc xor ljmp imul dec aaa ficoml in mov arpl arpl das test jbe push popf cmp or js popf inc jnp cmpsb mov inc (bad) pop dec fisttp imul or outsb add xchg icebp icebp inc mov add dec icebp inc jbe or scas pop inc ds in pop mov pop and xchg jnp mov andl dec insl mov test (bad) jnp add jns ja in jle pop jmp icebp xor xor mov les into sbb mov mov imul aaa dec jmp sub jnp leave sahf fs cmp adc jl jbe stos fidivl fnstenv inc lods pop jle out add sub icebp out xor cmp dec ss inc imul imul push cmp dec pop mov dec adc lea dec and lock jnp,pt addr16 lds (bad) pop push enter mov dec dec sar sub sub xorb jg lea push dec stc mov out outsb rclb mov pop int aam js sbb movsl xor dec je cs (bad) hlt shrl xor ret das push outsb fs in je push mov push or xor fisubl sub mov cmp out in aam div add insb rcrb (bad) (bad) xchg lods dec xor xchg add push jns add daa dec jmp dec rcrb jp movsl cmp cmp shl cmp mov mov pop js mov add adcl fdivrs call insb (bad) jmp in dec idivb xor pop lea (bad) (bad) fldt aad push cmpsb push dec bound or rcrb push addr16 and lock push loopne mov inc stos cli inc hlt mov pop inc jmp popf inc fidivrl jge or cmp cmp mov jns call test fstps outsb mov jno outsl in cli mov jmp mov fs xor mov daa xor ljmp movsb fistp pop add leave (bad) mov (bad) (bad) pop mul (bad) add adc adc add sbb pusha sub (bad) xor and enter je pop je jmp xchg or pop cmp sti and sbb lock ffreep adc or and and ret arpl (bad) cmc jne add xchg mov mov push cli mov push jnp fs mov stc cwtl gs dec jbe pop (bad) xchg cmp (bad) jne jno repz cmp sbb jp add mov sub pushl cs daa xor fstpt mull clc sti jmp pop popf xchg out insl sub lret mov push popa jge add jb nop (bad) cmp jno les ss iret neg sahf bound add xor cmpsl and stc test mov iret (bad) (bad) (bad) rcll lock out cmc push outsb mov aad stos dec (bad) outsl test dec xchg mov adc je cmc push sti imul repz adcl inc jae push int3 inc movsb sub out loop jmp ljmpw jge call sbb or pop adc je (bad) jmp mov cmp pop mov ljmp sub cs adc fs mov pop jae jl test fs pushf xor ja pop sbb add sti xor cmp cmpsb pop jb sbbb fdivs inc lds sub into fscale fs pop insb js dec push or or ret mov push loope xor into pop jmp mov sbb rorl xor add xchg add and jmp jnp jmp add adc push lods mov iret mov add popa popa test aaa pop ja sarl stos rolb cmp fs cld mov sbb pop pop inc (bad) pop jb jecxz pop push out jns test inc adc jne push std adc stos xor push aaa (bad) sub push pop push stos mov aaa jecxz nop push dec das mov shll (bad) xchg jb repz (bad) ljmp push out push fildl adc push ds js mov push dec ret push inc cmp stc aam fldenv dec aam cmp pop pop (bad) fs cwtl iret mov (bad) dec pxor cld fbld cli lret in out jge test add mov push or sbb or push add and xor imul pop jne sub icebp jmp sub (bad) xlat mov clc adc mov cmp cmp add into mov sti lret mov jae mov fs jno or pop mov mov rorl pop xchg or arpl inc in and mull test mov push xor xchg pusha and lcall pop jmp rcrb flds fimull mov data16 dec leave jl jne mov and loop (bad) jg test nop xchg loope movsb fdivrl or inc jbe xchg ret and mov setp push divl mov stos sub cmp idivl shrb mov mov sub or movsl sarb lret inc daa jae inc popa xorb subb repnz add loopne hlt xlat dec test sbb retw and in incl mov les adc out push jl out stos inc adc les imulb sub push mov jae gs fadds adc outsb xor popa sbb mov mov push int je pop bound outsb cmp stos pop add pop pop pop push xchg push inc stc inc je icebp adc sbb (bad) (bad) and jp cmp mov scas (bad) sub push sti sub push cmc imul das jge add jnp mov jb cmp or fstpt xchg sarb sub dec jbe jo sti push (bad) idiv stos and cmpsl outsb mov push outsb adc cmp fs sti mov imul fs je ja jp jo jae fistp test pop ror gs pusha adc cli add pop pop lcall inc adc cmp lahf imul in (bad) negl fwait jg cs repz xor sub dec lock pusha inc or xor jecxz lcall pop mov gs pop sub push jmp inc sbb add jecxz js pop lret fbstp mov (bad) jle arpl addr16 adcl ss and dec cmpsb xchg adc ljmp scas dec sub mov jmp lret enter xor xor xor mov dec ja pop push jg ljmp cmp cmp xlat sar sub ljmp lock imul jecxz sti push ret mov sub (bad) je or out xor lock bound sti pop shrl jecxz rcll fisubl or mov out pop lret aaa pop push lock ja jae aaa mov inc stos arpl mov jae shr fwait cwtl addr16 outsb ljmp dec inc mov and and pop insb cmpsb (bad) decb sub jle xchg mov pop sbb inc and ljmp cmp pop xchg jb adc out clc push xor sahf cmp repnz sbb jb mov inc call mov fstpl add repnz lret pop jb fisub jae int mov sub add jecxz push push mov stos fcomps mov inc imul jecxz push sub push ljmp imul lods stos cwtl mov jecxz xor bound dec sti hlt mov push push mov roll dec and loop xor fwait arpl mov and (bad) jl mov dec push (bad) sub dec mov mov test pop pop imull sti add push mov sti mov mov (bad) pop pop cmp pop mov mov inc stos gs arpl addr16 jnp idivb mov push in mov xchg (bad) mov mov das and mov out push mov inc dec adc push in add jmp ret push dec cmpsb jo in daa ret cmpsb cmp ljmp mov stos mov out gs pop test mov mov mov fxch je mov lret ret xchg pop fs gs (bad) cmc sti dec pop jnp test mov mov mov jle xor bound lahf fidivrl xchg mov sti dec in dec or jae mov aaa inc cmp or popf das mov push jmp (bad) mov (bad) inc xchg and iret and repnz pop lcall mov mov xchg cmp insl add nop cmp sbb shrl jne xchg pop fldenv push add in fbld and (bad) mov cmp mov cmc adc mov dec lret mov push mov lret lds jae dec das add or cmp push scas jno es cltd xorl xor jae mov cmc nop ja inc lret add sarl push data16 ret mov or mov pusha arpl (bad) iret sbb adc (bad) or fs fwait mov mov push outsl in mov (bad) je jge xor stos pop add cmp sti movsb pop repz repnz aam icebp adc pop (bad) adc call pop nop xor stos in inc ret push inc lcall fadds cwtl push je bswap pop iret outsl fnstenv iret in loop add fisubrl inc pop adc dec shl (bad) js xor outsb call jge xchg dec pusha dec fisttpl lret pop or adc push neg ss repz jmp popa sti fisubr cmp jns scas xchg push adc mov scas inc mov mov js dec xlat outsl push inc push adc popa movzwl pop inc (bad) xor mov out mov (bad) jl scas out ja adc out stos xor xchg mov add cmp sbb xchg in pop out mov mov cli clc mov push pop xchg fildll mov jle addr16 insl add cmp lods fnstsw mov push scas xchg jmp sbb add jecxz (bad) outsb aas jb stc or and int loopne outsl stos adc dec push cmp jg fldt mov fstpl (bad) sti xchg lea scas push pusha daa es lcall fbstp push cmp and push in idivb movsb cwtl hlt xor jmp push pop mov int dec test pop pop pusha fcoms xor pushf (bad) push mov (bad) cmc (bad) sub stos jo lods jae dec aad or ljmp fcmovne scas out imul (bad) sub stos cltd adc in mov sbb inc inc xchg inc cmp push aas mov dec sub pop popa mov mov gs add subl push pusha nop xchg xchg jae lahf mov stos dec adc or lcall fcmovnb outsl mov sub lea xchg sub push int xor stos mov mov pop sbb loopne test mov jp call movsb leave lods xor insb xchg call sbb mov xchg mov pop lcall hlt (bad) cmp jge int3 xor mov outsl ja insl int3 imul cmpsl sub jne fsubs or dec dec es inc out pop jae xlat icebp xor fnstcw pop dec sub cli out daa dec stos test fmull pop push mov sahf or push or jg cltd (bad) cmp xor pop push stos cmp ja stos and mov xchg dec cli mov lahf jnp hlt outsl pop (bad) xchg mov add xor idivl adc insl pop xchg mov movsl call xorl gs cmc dec adc push ret mov jge pop pop dec xchg dec fs jno xor insb das stos clc pop xor push sub enter push adc outsb in movsb mov fbstp dec xchg (bad) in cmpsl add shll insl inc sbb lahf sti jae or cli out jno pop dec jnp je cmp push inc xchg push pop xor xor dec out incl jae arpl push pop ret lock mull and daa je iret sbb incb xchg mov cmp test bound sbb dec xlat lods xchg sub xlat lcall jo cmc and or and pop andb pop inc and xor add pop ss popf add adc gs add les fldenv fsubl outsl repnz pop ret fwait (bad) cmp jo push cmp fstl sti ret sub mov cmp sarb mov cmc push es je add or and cmpsl jae aad adc xor fwait repz sub push pusha and outsb gs dec pop mov inc sbb sub sti or (bad) and sti repz push in jg push mov loop out jne ret pop js icebp stos fwait xchg aas lret out jnp fcoml bound test fs xor aaa xchg mov (bad) bound or push dec push insl pop incb mov lods cltd push mov push inc fdivr push ja dec push ss jg popa pop fsts mov mov add xchg dec adc pushf rol cli shl jg cmc jg add rorb ficoml iret bound lods mov adc (bad) pop sbb push push fs cmp nop cmc push mov sub sub fs add add push sub ret xor and cmpsb gs dec (bad) divl jg adc adc imul jge loop dec repz dec mov stos cmc leave sub and jl mov inc in cmp pop sbb int mov data16 pusha pop jb es or imul movd or pop push lock (bad) sub cli cmp xchg sub rcrb mul cmc fldt js mov lds or sub sub (bad) sbb loopne inc jge ds fwait dec jb xchg jmp stos mov jmp fcoml pop sbb mov scas jns push jae insb jbe in cwtl push andl mov mov fwait push stos rcll xchg mov jb mov cmp jb and fcomi loopne sub mov and inc push stos (bad) out pop inc gs mov mov and das sub push lods pusha xor mov xchg popf fsts ljmpw xor daa xchg mov inc mov cld lcall iret push ja out jle jmp xchg cmp lea pusha push inc addb sub enter mov inc jnp aaa mov push inc sbb add in or cmc mov mov jge lock cmp jno dec or stos inc mov or test stos dec movsl (bad) (bad) movl xor out xor out imul js jno push jmp das jno cltd ret mov and jle js xchg sub (bad) ljmp dec sbb sub push in jge es in push insb stos setb scas jbe add cmp push dec sbb sub jl (bad) push inc cmp dec and xchg leave mov xchg test rcrl mov sub fwait mov mull push shll xchg add xlat sbb sbb jno lcall inc cmp addr16 add dec pusha cld mov (bad) mov icebp sbb fcoml cmpsb sub (bad) mov cmp in addr16 xor dec andl cli jnp pop pusha pop cli clc arpl add mov das pop aas cmp lret push mov mov and push outsl push stc jmp movsl push out dec mov stos sbb repz cmp enter mov js jmp mov cmp lahf adc popa inc cmpsl int dec xlat shrb vpavgw fs imulb push mov and jle dec sbb imul ret cli fdivrl jg cld ljmp push pop sbb mov icebp outsl mov andb pop cmc mov dec loop fcmovne adc push shll and neg gs sbb sti xor add jbe mov rorb cmc lcall add pop mov mov xchg jmp add lock fsts xchg stos jg dec xchg and rcrl lret xor jg les mov push mov lods inc stos mov js mov out mov enter repz mov lret sbb push push loope push xor (bad) bound mov push sbb adc push sub fisubl jbe push push imul stos pushf jmp rorl inc (bad) adc inc push mov lods sub mov xchg jb sbb sub (bad) xor int3 push push add out pop push xor cld das iret xor push and sti xor decl and shl mov pop gs adc subl loop fiaddl mov push push sbb jle testl inc pusha cmpl sub pop cltd mov jb fiaddl shrb cmp mov (bad) test jecxz mov lods jp add xchg inc je out flds push cli pop xor add ja addr16 cmp inc push cltd xchg cmc pop jae cmp and mov mov rorl lea xchg outsb or inc (bad) cmc inc pop rcll xlat add test lds (bad) insl pop xlat imul cmp iret jecxz inc neg into mov cmp dec es dec inc pop stc and leave loope push insb dec insl jno xor dec xchg pop inc data16 jno mov inc adcl jnp mov xlat sbb ljmp dec pop icebp mov xchg dec sbb aaa jge jle gs mov mov std sub jle adc lods add xor es add shrl mov setae jmp pop movsb cmc ds jp mov jnp add stc popl outsl jnp or lea leave icebp pop sarb and repz (bad) rolb pop repz xchg shll mov dec shl loop push push stos enter cltd push fstpt mov es in sub sarb shlb fnstcw pop test std mov int3 jmp lcall outsb sbb stos sbb mov mov pop and push inc out push pop jle pop add lret scas outsl mov daa xchg rcrb jnp (bad) xor xchg adcl mov sahf add mov aas les pusha arpl xchg enter icebp pusha jns fisubrl mov (bad) and dec push lret pop fisubl fcomi dec lea (bad) sub in or jae rcl lods popa adc test test add mov and and rorb stc je test jne vxorps ja or jnp sub mov lea or push jecxz ret cmp xor into aas notb push imul rcr sub lds mov jno outsl sti pusha xchg scas fs add cmc push out mov xorb mov fldl sub in xchg pop fwait pop mov cwtd xchg push mov aad push ljmpw sti sbb mov add jnp lods add addr16 inc jno pusha (bad) test sbb pop lret jbe jp dec pop inc rorl sti imull sub daa jbe les mov xchg inc push xor jge mov sub insl imul adc push dec jl stos ja addb pop insl mov ds adc divb mov out je sti fildl (bad) push cmp add and notl in loope cmpsb int (bad) sbb xor stos pop loope cmc call mov (bad) lock push dec out add arpl jg or (bad) adc lds pop mov jecxz jae mov dec xchg aas or fistpl sbb jo sbb cmpl in stc jge imul stc cmc gs data16 sub out push imul inc jno inc lcall loopne mov mov jae out imul pop fbstp pop jno jno outsl adc pop xor sbb jae test jne sbb inc cmpsl or xchg pop cmp mov jno addr16 insl fninit ret jne jp jnp sbb pop cmc adc jmp scas (bad) mov jle in movsb movsl test enter lods mov mov popf mov mov inc jmp inc mov imul js xchg jae movsl pop pop arpl push insb adcl dec mov lock rep cwtl lcall push out jge push loope loopne dec insb mov push imul cmp idivl jno sub push sub addr16 push jmp mov rcrb mov xchg pop call mov inc iret push div into (bad) aaa jmp loopne jl aam xor pop jmp jg sbb xchg adc push pop push jmp add fs cmp stos sub lods mov lcall je pop (bad) add pop xor or cwtl xor ljmp jae hlt pop movsb push push js mov xor out mov pop insb push push mov inc pusha fwait push or cmp push pop mov leave stos xor xchg push push inc push jnp loopne jb (bad) aad dec js cmc mov inc jnp sbb out and mov sbb jle xor jae push mull xchg sub mov dec jle jnp mov mov fwait or sti loop movsb add push popa daa ljmp pop (bad) (bad) push xabort int test sub lcall jbe popa hlt lea mov or rcr inc pop sbb mov pusha loopne adc adc inc arpl add sub (bad) push push ret xchg ss dec in add mov insb sbb or xchg or jo pusha leave jae adc clc adc je cmp stos rolb scas jmp imul inc mov lock out popf (bad) sarb test pop pop test add out (bad) or mov push pop adc xchg icebp push mov pop adc xchg jge xor addr16 push or jmp sahf add jns imul mov sub mov xor cmpsl sbb fcmovnbe out dec mov fs icebp dec negb adc imul push sub and jp lds mov jae add xchg xor push lret xchg xor js daa pusha jle ds cli (bad) xor cmc jno int xchg inc ror lcall sbb (bad) jl lret les sarb aas jns insl mov (bad) (bad) push loope dec das idivl imul add ds sub dec jbe pop push dec daa std je xchg pop mov nop mov in les out jae stos movsl in insb gs mov lret loope xor xchg sub sub pop (bad) adc dec sbb sbb xchg stc pop pop jno imul mov dec jns iret aas sti repnz (bad) sub mov shll lds inc cmp pop out aaa hlt aad xor sub dec fisub fs repz das mov add cmpsb pusha imulb stos inc iret jecxz leave dec enter push popf mov add add or in out das push xchg dec jbe mov jmp xorl push mov loope add stc xchg push lret pop movsl jge call inc mov sbb cli fsubrs mov std jle div push ljmp sbb imul dec into in xor jb xchg dec pusha call stos sub lret push dec aas pop add dec test (bad) in inc and es xchg lret ret aad and push sbb lret cmpsb pop das inc hlt pop imul xor imul add jne jns ficomp jns dec inc jne lds in fs scas cmp xor xchg testl lods xchg mov (bad) scas sub leave mov jle push outsl add xchg aas addr16 int3 inc pop cmpsb sbb push sbb dec pop sub imul (bad) xor iret stos xchg adc jge mov dec fsubs jne stos insl xchg je mov fdivp cwtl cmc mov rcll iret ret and sbb pop pop js bound jnp and int3 iret (bad) cmp fisubr push stos mov xchg or stc jbe xchg add push cli test test mov push sbb movsb fwait xchg mov jle gs nop inc (bad) push pushf fistp inc cmpsb xor jns pop xchg leave pop sub std std and loope mov jp out xchg lods shrl xor loope sbb xor stos sti cmp xor push (bad) xor push or (bad) push (bad) enter icebp jecxz inc test sub leave fstl jo out sahf jp xor mov sbb pop fs stos pop sti cmc dec cmc gs xchg lods cs sub add pop jge stc imul adc lret into sbb movsb lret leave ds lret mov dec arpl sbb mov cmp and jae push jae stos ss jnp jno mov inc (bad) jae (bad) mov mov pop sub pop cs xor push push movsl gs clc xchg lds dec xchg add fucomi ret cmc lahf sub out mov ja outsl add jg mov pop stos xor jbe jg lret jmp fimull dec dec inc popaw (bad) je in int3 icebp jp sbb pop push sti out adc inc jp mov add dec xor or sahf (bad) fist mov loope xlat test adc pushf dec cs arpl cmc outsl popa or mov jp mov leave jge jnp jb gs cmp push (bad) sub stos sti push add jo gs mov sahf xor (bad) add lea out (bad) ljmp fdivp jns push fbstp out mov out dec adc int mov adc jno les cmp pop (bad) jbe je mov subl fcomps sbb mov sbb push das sbb ret adc aaa js icebp mov jb jnp (bad) fisubl (bad) sub scas pusha stos adc sub fs mov (bad) jno clc jecxz jae mov pop cmp repz mov dec or aam push mov int jg pushf (bad) aam ja dec jmp pop mov xor add fs cmp xorl pusha (bad) push stos sarb lds mov lret shrl or xor push movsb (bad) aaa (bad) icebp xchg xor push add inc arpl push (bad) mov cli mov pop jno jnp sti xchg dec pop addr16 xorl shlb cs cmp stos dec imul movsb adc inc cmp xchg je (bad) lcall pop xchg je fwait aaa mov outsl fwait loop adc imull mov and gs mul repz insl xchg add mov mov pop cmpsb sub stc movsb fdivrs pop jo js (bad) and push mov jg sahf fidiv or arpl aas jnp jge in mov sti dec sbb xor call mov dec jno xchg or sbb into sub jle cmpsl pop ja movsb add nop js dec lock fwait in mov pop out repnz adc and sbb xchg mov test xchg lret (bad) (bad) (bad) aam bound xchg jae out xchg fisubrl mov push and adc adc cmp xchg jnp outsb adc mov mov dec mov or mov out push ljmp insb ror push clc lahf aam jg stc add push repz imul mov sti pusha repnz stos (bad) mov fcos mov bound sub jge pop es cmp daa add mov sub xchg jmp adc jnp mov fstps xor (bad) push insb adc mov xchg dec notl and mov gs xor popf push push adc ja lods ljmp mov add inc scas arpl xor cmp inc inc mov std popl sahf jmp pop int ror (bad) or pop stc and stos ss push into test push ret loope fldpi pop adc xlat fbstp push icebp inc dec stc mov (bad) shrb aad jp clc xor inc dec sub shl popa mov je xor mov pop pusha outsl data16 imul sbb sub cmc adc in fstpt (bad) and gs mov mov lcall mov dec push mov sbb ss lds outsb and popa rolb imul (bad) pop cmc xchg in jg mov sbb lods push mov mov stos push std sub dec scas mov lahf enter in jnp xchg shll mov mov xchg sti aam aam pushl mov xor hlt add ret sub fcmove cmp js xor push mov cmp stos les int xchg (bad) xchg jge xlat int sbb cmc pop mov daa push aam icebp jbe mov icebp pushl xchg jbe jg es test aad sbb and jne add adc pop cmovno loopne int push cmp inc sub ret pop adc mov jno xchg cmpsl (bad) leave mov mov jle (bad) fmul and mov xor jge push mov or jl sub or scas and xchg xor push adc or lds (bad) and cmp xor jle dec fdivs sub and iret mov call (bad) dec cmpl int3 jnp push sti mov inc in jb jbe sar sarb pop cmp xchg js aam mov xchg xacquire (bad) dec imul cmp in xchg movsb xchg andb mov add repz xchg cmc and mov int pop sub mov addr16 dec les (bad) cmp arpl je movsl cmp stc arpl mov (bad) cmc inc je jne push fsubrs dec pusha add adc movsb jno jno xchg push les sbb imul cmp movsb push xor iret pop xor sub pusha sbb fnstcw je ja jo cmp int3 fisubl or je xlat jnp mov insl out out dec negl cmpsl cmp inc lds sar sarb jns fldcw in xchg ja sti js mov (bad) insb mov out mov arpl jb nop addr16 dec inc lahf lds rcl (bad) je test je fnstenv mov lcall jecxz stos pusha add mov xchg aaa mov pop mov das aaa cmp cmc add repz imul pusha xor addr16 (bad) loopnew fisubrl popa cmp jno xor mov dec jge pop push push and add and inc xchg jne icebp xor xchg insl pusha ljmp jge sub xchg dec mov sbb push and rcrb mov push cmp in lds mov ds imul into test test dec cmp and pusha insl mov pop push adc fidiv (bad) lock cmc sahf and popa (bad) lret mov lcall aaa cmpl adc (bad) and push add xorl fs dec aaa fildl mov shlb sub adc pusha xor sbb iret addr16 in ficoml cltd aad lret leave ret jo xchg fist fs shrl scas pusha out adc scas ja jo mov inc push out add addr16 jae fs jb pop fs cmp sbb sub push xchg jne pop int fidivl jle dec jno jmp fsubr test mov xchg loop addw int3 bound mov cld cltd and daa (bad) mov dec inc add and in iret add xchg xor and push add aam jl pusha cmp sub jg push je fistp xor into jge sbbl fdivs iret fisubr repz dec int3 rclb cmc enter je popa sub push aaa sub leave inc (bad) mov ljmp push popa xlat imul jo sti mov fucom jle pusha lds scas mov lea sub loop mov aad push cmp pop xor int3 repz (bad) xor dec es mov mov xor xor orl in dec mov push arpl mov xor and push bound dec arpl ljmp sti inc sbb add dec stos inc sbb dec sub leave mov sahf xchg sbb ja cmp imul jae pop lea xchg mov sbb test push xchg pop addr16 jnp jmp jnp push imul mov gs xchg jne mulb jp (bad) cli jo and pop dec jns or pop stc jmp jnp bound jp xor push add push sub (bad) and pusha jae push adc add ss lcall sbb in jg stc and je cmpsl outsl mov int3 jb cmp fldcw aad jecxz jo mov and test cmp lea mov xor adc jmp pushf (bad) jne lock jmp sbb jge (bad) jmp stos push push pop xor inc test outsl xor das mov pop cmp int3 arpl xor jno mov add repnz lahf pusha cmpsb push movsb sahf je pop out cmc push and lods jno cmpsl movsb dec leave and aaa cmp pop sub adc arpl dec dec imul pop and push jb test adc or and sbb in clc es pop xchg jmp js repnz add inc std adc and arpl jno cmpsl dec lret add jnp imul dec xor xor mov cmpsl addr16 icebp sub jl (bad) incb xor jp lcall rcr or lret xorb xor xlat dec pop pop mov xchg ljmp fnstcw xor xchg lahf dec jbe lea rorb mov inc cmp out repnz sub das push cmp pop pop dec jae pop and std inc mov push sbb fmuls (bad) roll insl and notb test jge jnp pop popf push pop and mov mov and push mov mov fdivl xchg stc jg int3 cmp div inc mov inc jne adc scas ja jno pop pusha nop lock xchg xorl loopne loop lods fidiv ds outsl mov and gs fiadd sahf xor mov sub or mov mov pop in add out jo cld ljmp jl pop jecxz daa loope out (bad) cmpsb stc pop insl fimul pop repnz (bad) sbb push jp into lea cmc mov loop repnz dec add addr16 popa inc int3 fisub out lea dec add into outsb push pop mov dec dec bound xor lret sub insl sub out cmp inc or xlat pop rep test outsb pop arpl pusha imul outsl xchg lods xor jne pusha leave (bad) pop adc xor jae lcall mov xchg jno js scas xchg jmp or add call sub jg cmp hlt int3 cli and mov jge xchg int add lret rcl lods adc into jno mov mov add lea push lods jns insl and test pusha mov jno mov jbe xchg repnz push inc cmp fcom popf xor mov mov stos outsb cmp fs (bad) lea insl scas aas mov daa mov (bad) push fcmovnu aam mov or fcmove jle push (bad) push inc imul imul adc addr16 leave in into es sti push outsl cltd in in in out mov ljmp imul pop push mov into popa lds repnz mov int decb out fstp xor hlt push (bad) js lahf jmp insb pop insl inc add jmp push fwait and daa cmc jl stos outsb sbb mov or sti icebp pop mov push jae push mov ja pop push jne xor sbb push in scas bound addr16 push cmc out lcall (bad) cmp sahf pop jae sti aas ljmp cmp add push push pop cmp das push inc push ret add imul jns push insl inc fisubrl iret loope mov cmpsb mov rolb ds loop ljmp stc bound sti xchg outsl out icebp arpl mov andl popa or sub sub push lods jbe fnstsw push (bad) cmc or cmp mov call xchg insl hlt stc sti movsb popa imul pop fidivrl scas and jnp jmp mov cmp repz insl inc mov loopne push add xchg or movsb adc rcrb pop out aaa pop jae stos adc cmp cmpsl jne insb inc imul jb insl addr16 and push inc lds popa movsb mov out sbb repz ss imul insb dec icebp lock fstl jb arpl xlat fbstp scas jo mov jae mov xor pusha sub cmpsb jae scas lock mov pop dec fdiv insb rolb jo xor adc hlt xorb mov xor mov add xor mov adc ja out jnp adc lcall pusha aam sub cmp jnp sub aaa xor sub dec idivl mov into mov sub scas push repz push ja jle pop xchg xchg mov lcall jp movsb (bad) jne insl aad ja push divl movsb and fdivp adc sti imul add fistpl xchg adc cmp aaa cli xchg mov (bad) stos jno je dec cmp mov push sbb xor lods dec addr16 mov iret hlt push sbb mov andl hlt cmp sti outsl pop fs push sbb lods jg sbb scas and cmc cli fidiv je popl mov mov jnp pop (bad) jecxz iret (bad) inc (bad) (bad) jnp jno hlt movsb cmp and ja cmp imulb lds out fnsave push into dec mov ret mov lcall jnp mov outsb mov xchg sahf or jle xchg out (bad) jae jle xlat pop jle dec mov sbb adc pop test xchg inc adc mov fldl lret aaa xchg pop sti arpl es mov jmp xchg fldl jle push sbb xor cmp xor sbb adc lcall adc xor fwait adc cli jmp pop or gs ja les lret je dec stos ljmp gs iret add xchg popa jge in mov je jno das cmp push movl jbe sub bound loop stos push movsb mov aas movsl cwtl jb out out sub pop push movsl pop addr16 gs (bad) outsb jg mov in lret cmc sarb xor jb xor pop dec idivl mov (bad) out stos mov push outsl inc pop jbe movsl cwtl cmp inc push out inc jb (bad) jmp repz push sti sub inc pop cmc or imul imul repnz pusha (bad) lds out loopne sub out std in sahf mov sbb jge cwtl xor repz sbb out xchg lcall (bad) in cmp divl mov cmpsb or (bad) mov mov dec jne scas inc mov adc xchg sbb push fisttp jns cltd inc insb into cmp gs pop cltd call movsb out add lock jg cmpsl ss sahf pop xchg je jle (bad) int3 das imul push mov aam mov popa push sbb pop sub fs fs in fs mov movsl jg jmp movsl imul sete pusha jns mov out sub lock inc (bad) jae cmp sub xchg or xchg cmp cmp pop lea cmp arpl (bad) sti or sahf push fnstcw and gs scas pop push pop jge jecxz or ljmp or push popf jl pop jne gs mov jmp sbb fucomi pop push lret sbb arpl add rcr mov xor loop in in es push mov mov jno jnp or aam lcall dec dec mov sbb mov mov and ja or mov jnp add jno out jno loope outsl rclb jae icebp das fwait jae jno lret sub push jb repz push mov mov push sbb (bad) addr16 mov pop pop fcompl iret fdivs cmp sti insb fidivr idivb jnp xchg pop cwtl cmp (bad) (bad) sti sti movsb pop xor push cmc mov pop jmp sbb jo jae inc sub pop ja pop pop jne cmp sti popa ja loopne or popa xor iret (bad) js (bad) faddl or je add xchg popa aam fwait int or push xchg mov insl jae inc stos repz mov mov xor xor jae (bad) pop xchg xor cmp imul adc inc inc (bad) lock jb mov data16 lods clc xor jl xor addr16 stos push insl cmp fsubr inc loopne divl mov dec add jno jno aam (bad) je lods dec cmp imul sbb lea pop pop in in mov dec xchg scas push inc insl inc les jo mov xor push out pusha repnz loope sbb push cmp outsl je xor popa jnp pop push (bad) cmp xor clc xor push xchg xor sarb movsb lret dec jne push popa enter mov mov xor pop xchg test (bad) jmp xor ss imul das jge arpl xchg outsl fidivl mulb int3 and stos imul mov and mov lock adc inc dec arpl icebp lret (bad) mov stos out jg pop pop repnz popf cmp mov or imul imul in int3 push mov cli test push mov inc fisubr hlt jae addr16 ret push pop pop jne add add jecxz pop xor jecxz cmp inc out sti cli mov jmp cwtl push mov imul lock sbb pop inc aad in pop sub aam add cmp into popa psadbw mov sbb cwtl aaa fcmovu lret adc fisubr fcoms insl jo in fcmovb mov push aam insb jmp xor sub dec rcl pop and ficom and lock xor pop pop fmul mov add addr16 dec sub out pop cmp jb out pop xchg arpl pop and gs repz lcall or push mov ret repz in in imul cmp xchg jp in pop rolb mov loop mov sbb sbb cwtl pop jp inc sti loope (bad) call cli sub hlt mov popa shl lret jmp mov ror gs repnz imul inc pop insb mov cmpsb push scas jg xchg sub lods repz stos dec nop or call cmc add (bad) jne dec ljmp ficompl in sub in mov insl or sub inc and fsubrs nop push (bad) idivb mov xchg lea sub sub (bad) sub hlt mov into sbb push add imul insl sbb inc push pop cmp dec xchg stos sub sub in pop xor mov les mov add das jmp lods jecxz es jno ss inc push push xor shrl mov lods xor (bad) adc fadds out xor push ficomp pop ror jbe (bad) xor lods sub (bad) sub mov dec negl mov es mov (bad) sub ss pusha xchg mov cltd mov xchg xchg mov cwtl movsl addr16 cmpsb pshufw ret mov aaa lea mov mov (bad) lock outsb jle mov jmp sbb shrb daa addr16 imul leave fstps leave popa std pop leave xchg iret aad sbb call std loope mov int and hlt std mov mov cmpsb lods (bad) addr16 sub adc mov inc hlt mov mov loopne loop jb xrelease outsb jmp push xor shlb push push aaa pop mull dec inc push popa aaa pop repz mov jne jbe movsb mov js fldt stc lcall stos (bad) pushaw insl or icebp jno movsb mov or jo dec mov sahf adc negl sbbl inc mov pop dec repz push inc fwait data16 imul popa xor popa subl mov or leave inc stc push xor pop in aas cli xor data16 or push aaa cmp mov ja aaa fisub fidivl pop or aaa sub mov pop push xchg dec sti jb ljmp jmp je icebp or xor repz lret repz add sub cmp (bad) push push xor imul loope fstps xchg addr16 push iret xor sub out popa dec ret (bad) mov push stc (bad) ja xor aaa ficompl sbb fcmovu iret xor sti aad ja das pop loope jnp call mov xor jp test jmp insl xor (bad) imul fucomi addr16 fwait icebp jb mov or (bad) je iret mov add xor imul daa cmpsl cli rorb sti add int3 gs jns push repnz cmpsb push push (bad) fdiv lcall arpl es imul pop or loop pop int repz jb inc in cmpsl push and ljmp jmp jmp jb das and fcoms and mov add (bad) mov ret sbb pusha or and adc jecxz jbe mov imul aad std rol jmp in mov sti ret imull adc cmp dec cmpsb push icebp sub xor imul fldt out mov pop insb mov jae ja xchg xchg inc lcall cwtl adc (bad) sti icebp addr16 daa sbb mov mov push loope xlat and or fisubrl fimull sub out pop inc lods sub jecxz dec push pop adc lock ljmp inc sbb ja fstp aad (bad) pop loop xor and bnd sub fistp aaa fcomi pop sbb nop mov subb insb pop cmp lcall fidiv sbb mov shrb jecxz xor ret rcrl imul in cmp (bad) cmc sti add jns imul arpl icebp outsl out icebp push xor pop shl out and lcall div movsb inc add aaa mov aaa cmp in jno fimull push mov mov insl adc sub es stc ljmp (bad) fisubl mov (bad) imul iret dec pop stos fistl mov (bad) mov fiaddl pop out jmp add rorl movsb jmp imul pop xchg mov pop stos pop pop mov in mov fbld jmp xchg mov sub aaa mov in shll sub divb mov fucomi rcll mov movsl testl sbb fldpi mov hlt movsb lods mov xchg nop jl popa (bad) push sub or adc jno pushf mov pop adc cmp adc lds arpl (bad) pop cmp push clc sub cmp ja rcrb xor mov mov lods pop or push stos sbb imul pop leave xor aaa cmp cmp ja mov adc mov adc in ret je (bad) je call and push sub insl add mov xchg pop jnp bound xlat orl pop loopne pop rcll lret ja mov cmpsl pop stos push loopne sbb lret xor push imul xor dec xor jne xor push daa in repnz mull adc mov sti and cmp pop dec mov outsb jne xlat sub mov cli out sub jb cs mov insb cmc addr16 sbb stc and pop sub out mov pop inc push jns mov sub xlat imul movsb or imul inc imul push repz push mov xchg out (bad) shll test sub and push cmp pop (bad) dec mov mov sbb jl arpl inc jnp lock or mov imul xor jae jb pop inc adc pop dec lods jns aam pop iret out aad in outsb scas cmpsb fadd stos jl xchg add xor push ret je lret leave sti push fxch cmpsb dec out cmp sar jmp loop push jb shr push loop lret pusha sti repnz outsl sub push fidivl jg xchg cmpsl pop inc dec push or sub mov enter add mov xchg imul and add and lds push mov test imul addr16 fcmovnu daa push icebp imul lea add jle cmp mov cmp sub out lret add imulb push repnz int xlat (bad) jmp pop cmp (bad) (bad) lret push movl loop (bad) jb inc pop or dec push mov inc jp imul ljmp fwait dec rcl mov sub sbb repz mov or mov jmp repz stos outsb push push in shrl repz push sti pop cmc sbb lcall push insl fist push rol iret faddl push dec fisttp lret sub aas outsl jge fs mull add sbb ja and fldt repz in gs repnz push cli pop xor mov dec rcrl add loopne add lcall (bad) ds mov hlt leave push jo hlt jp pop mov pop jns jb or out sub add jb cli pushw sbb imul jge das stos mov cmp xor jnp stos adc dec pop imul sbb jle xor cmp dec sbb in mov pop outsl xor xchg push sub popa xor mov push stos mov popf popf jno lcall aas jnp pop jmp std add ret dec sbbl xor cmp imull stos push sbb sub std sub sbb cli aaa lret data16 push loop mov push adc repz (bad) divl inc inc add shrb dec jns stos dec dec push outsb jb ret repz fwait inc mov jb mov sub cli test mov pop mov pop jg xor xor xchg cmp shr out xor add mov pop jno or jo in je imul jp lea inc mov pusha jb scas fs data16 jb (bad) in xlat cmp push ss aam cmp sub cwtl jp jle xchg cwtl mov xor gs push add addr16 lock imul movsb cli scas pop xorb iret stos inc out and dec dec lahf into pusha adc xor cmp xlat xlat in mov cli fcoms sub movsb sub jb sub repnz xchg adc dec popa sbb jnp mov pushl int cmp movsb cmpsb mov pop sub lods stc lcall push (bad) leave fbstp cmp push mov dec push ret imul cmp mov arpl xor std push dec pop in xor xlat mov outsl lret in leave xor mov lcall inc xor mov ljmp in and popa jmp leave icebp sub or or sub popa inc rcr xor xchg inc mov xor adc test dec ret cs add sbb test sahf inc mov pop push stos mov les int3 jb sub pushf mov int3 jle mov xor dec (bad) push mov ljmp dec pop cmp pop inc lret les mov mov lea ja xor sub call add inc gs outsl fs gs popa outsb fs gs add test inc pop sub loop xlat jno jo pushf incl dec push mov insl xchg jbe xor stc pop in fsubrp jbe ficoml push in out (bad) insl adc cmc loope rcrl adcb sbb push jo cs dec jp test clc fsubr add sub in mov sbb xor stc movsl fidivl lret jg rcr xor fs cmp js pop inc pushf repz daa xlat loop (bad) xor in adc or scas mov mov push sub cmp sub push dec mov push push cwtl test xchg xchg adc iret loopne fidiv push mov cmc jl,pn add in sub push out ds sub jle mov lods popa lock je cmp stc mov fbld push icebp mov fcmovbe (bad) fdivrs sub addr16 xor sub or jno cmp cmpsl push or add jne (bad) shl mov es scas pop test insl cli les mov push out insb adc or inc hlt fwait xchg outsb rcrl xor fadds sbb jge adc sarb test addr16 clc aaa call pop inc movsl cmp dec jmp lcall cmpsb sub data16 das inc sbbl scas out arpl sbb and and rorl pushf lods insl jb dec repz mov enter loope (bad) jne js rcrl mov pop loope or jns sbb (bad) jns divb sub enter incb sub mov cmp movsb cmp push lahf sbbw pop popa push cmpl inc or stc cmpb push lea jne mov btc inc rcr mov clc call push sbb jmp out pop test inc scas push je adc ret loopne mull aas hlt imul lcall leave push xchg dec adc jmp shrb mov (bad) (bad) xor popf and mov mov mov mov jle fdivrs mov inc sub and mov ds gs push sbb sub xor lcall cmp dec add addl stc shrb dec das outsl adc std lret push bound inc mov (bad) enter mov daa (bad) xor lret cmp inc jl movsb cmp push mov mov xor cmp fwait mov mov inc jno push lods hlt out adc sub push push bound out test mov jle jl out sti loopne jae cmp lds repz sarb lock mov jae fildll push mov inc sbb xor sub mov fldl push mov movsb (bad) fmulp (bad) stos xor imul cmpsl push mov mov xor inc loop mov pop inc arpl int inc push dec inc dec xor cs insb add pop in cmp lds sbbl cld or push cmp outsl out inc fbstp mov pop cwtl (bad) fwait sbb sysenter aad or icebp cmp xor pop iret xchg xchg lret in popf loop mov inc cwtl (bad) test aad sbb ret sbb sub sbb jp jne cli sub xchg xchg outsb pop ret ja scas out movsl fstps mov mov mov movsb mov jno inc sub data16 je xor (bad) xor pusha scas jo pushf xchg enter jno mov repnz jne sbb dec pop fdivrl pusha ucomiss sub outsb jno dec jne in push ficompl fldenv pop mul adc ss rcrl and jl or push insb outsb jno push faddl xchg adc inc cmc lcall lea jne jmp cmp inc int3 push loopne outsl movsl cld out mov iret adc sub xchg test pushf scas lock lret rclb lods xchg pop add (bad) jecxz mov jnp in or pushf mov shrb lret fmull xor pop mov jmp lret push xchg fwait aas xor fucomip pop xchg mov je pop mov add scas (bad) push pop incl xor les sub jae lcall lock or movsl cmp outsl xor aad lods xchg pusha ficomp push mov fidivr sbb lods test out mov repz shl fimull iret mov aas ror out push pop cwtl insl push imul rol push hlt push lret clc push add iret and dec push dec push push ja hlt lret pop mov fadd pusha pop mov xor sbb stos mov pop pop (bad) es pop ja pop dec mov mov inc out mov mov sbb cmp popa and jb ds pop and pop loope loope jne in jg jg int adc and or inc jge pop and scas push test lods cmp popf jno ds das lcall jmp jmp lea ret or push call inc xor jb bound xchg mov shrl (bad) call out jo nop ret jl pop xchg lods pop mov inc pop push mov in inc test cli cmpsl fisubl clc cmp jae rcr sbb add ds dec jge fs lret test mov cmc test cmp cmp ret mov arpl mov cmp push loope outsb mov add leave push clc fistp push in add into in fldenv icebp int cmpsb mov bound lahf and push lret pop cmp imul pop imul jge popf ret cmp cs dec ja in jae imul jnp aad fucomi arpl in aam pop adc mov or pop push push jne cli xor (bad) mov mov dec lock mov mov push sub mov insb xor and jp iret sarb pop and outsb xchg and push dec add (bad) mov add sahf subl and inc cmpl lods loop push xchg mov push pop lds jl aam aam (bad) decl pslld arpl pushf push mov gs popa sbb jbe sarb (bad) movsl call leave outsb adc mov mov push dec and mov pop stos fwait xlat pop or subl sub div fstp xchg mov pushf lods movd push mov andl sbb cmp out (bad) divb jnp push sub cld scas dec scas ret je jno push pusha aas push adc xchg enter xor inc fdivl mov movsb imul in jnp imul sub cmp mov mov pusha movl jmp pushf pusha movl pusha jmp mov pop lods mov jns and mov cli inc or sbb mov jae ss mov cmc imul int aam fadd ja cmp mov out pop mov insb xor inc push push incb sbb add loopne cmpsl sahf repnz pop add call jmp jbe lcall testl sbb std mov lcall pop mov xchg test inc push insb push mov (bad) fnstenv adc scas sbbl (bad) movsb sbb jle jg mov jno cmp enter pusha movb lea ja pushf add lea ror adc cmp shl mov cmc stc jmp push sub sub pushf call sub cmc sbb lea jmp jg mov movsl pop lcall insl repnz ret sbb hlt push bound (bad) mov push jp push insb push or sbbb (bad) imul or push cmp xor in jno ss sbb rcl sbb cmpsb push jge mov adc mov test cmp imull les ror cmpsl fadds xorl adc xor ljmp pop inc out fwait push mov loopne xor rorl mov sbb cmp cmp mov mov pushl push movb mov call pusha pusha push push movl jmp insb rcrb xchg js lret mov jne fldl2e xchg sub jb cmp ret mov sti push cmp or mov mov rcrl push sbb or or pop cwtl (bad) ja ss test xor sbb gs push (bad) es cmp jg inc push ja (bad) sti or mov mov movsb adc mov imul stos cmp add mov stc sbb add aad idivb adc sbb ds mov jno cmp and xor shrb sub out mov mov and pusha mov sti push in fcompl gs (bad) lods xor dec mov data16 xor sbb xor mov xor ljmp cld mov (bad) sbb imul faddl out gs jno mov test sub pop and pop (bad) call add mov adc lcall inc mull mov pop sub push mov push push das mov ret dec or and aas and pop and cmp pop cmp (bad) dec cmc out das fadds pop pop mov sbb adc test clc sub sti imulb adc test adc cmp sahf movsb outsl fsubs inc lahf and fs dec adc push cmpsb xlat cmpsl mov pop repnz xchg stos lahf pop jo mov jae pop fbld dec negl iret dec push (bad) popf adc cld iret lcall fs mov xlat or pop scas hlt jmp icebp scas mov adc and flds shl sub inc ret aas loopne fstps and cltd out pop pop jno cmp (bad) fistpl ret pop insb (bad) std jl push out test mov or out xchg xlat daa xlat pop pop (bad) pop cmp push or (bad) inc cmp mov clc or call inc (bad) and popa aad aam xor pop adc icebp jecxz bound jns mov fisub push or dec mov sub outsl sub push cs loope fsubrl add pop (bad) xchg pop in cmp jl in movsl add out sub int3 inc cld fiadd push shl (bad) xchg insl lods fldt mov insb xchg js mov and mov cmp inc jbe repz pusha pop xchg outsl out rorl cwtl jno aaa sub aas push inc cmp leave mov sub or dec add lfs pop sub gs popf xchg das int3 xor jg,pt leave or add hlt push movsl xor adc dec push mov test popf stos movsb mov xbegin std inc (bad) sbb cmp in xchg shl mov lds xlat out or mov push pop xchg into mov adc xor dec pop inc cltd cwtl inc daa jae sub fistpll adc push sbb push mov mov mov sahf hlt stos xchg ror mov cmc leave sbb cwtl inc cwtl mov pop stos mov lea inc cwtl push int3 pop test lods out nop jle repnz inc clc sbb das adc sbb xor out cmp inc push out push popa mov out (bad) dec pop lds lea add push sbb and jno dec mov outsl xlat cwtl daa jecxz pushf xor mov insl sub mov in and sbb cltd adc dec call mov test stc data16 xchg mov or mov cmpb arpl jp mov data16 cmp add pop xor lcall dec inc (bad) push movl ror cmp or fldt or push outsb jne and js fdivr ret add sbb out xchg ret (bad) imul and call lock and or ss and daa or iret and mov adc call leave xor stc pop in call mov (bad) sub call sbb repz arpl scas jno pusha decl repz cmc les push test sub std or sbbb add dec jp jl call pop aas inc out pop les add pop xor mov mov fidivr in data16 fadds push mov add or hlt scas xor or adc mov jecxz (bad) ret (bad) sub dec dec push xchg and lods jns jp negl jg or in mov and pop (bad) imul ret sbb sarb jp punpckldq daa cli mov sub xchg pop in je ss int insb cltd fidivrl inc aaa adc icebp std sub adc fldt and icebp inc add lret fdivl insl test dec outsb xchg out in mull or or mov and push pop imull adc enter mov hlt adc jl sbb popf add jge aas push mov (bad) mov add icebp xchg leave or loopne mov fnstenv mov mov loop fucomp (bad) out pop pushf inc sbbb lea mov jnp data16 or stc jno loop in sarl jecxz call xor pop add jle mov mov jge xchg jmp jnp outsb jnp lea mov aad push or jp outsb and lret adc mov jno shl mov aaa adc repz je fldl pushf add nop iret loopne push das ljmp or push inc not (bad) (bad) ss mov fiaddl dec icebp into test insl test dec sahf and sti sub test mov ret in adc fucom lret add cmpsl mov orl sub jp mov in test inc js insl enter mov adc ja jo dec inc pop call xor test or dec dec adc sbb arpl cmpl xchg dec xor or aad dec loope mov insb dec xchg leave mov pushf int3 push push xor scas cltd xchg inc sbb and dec mov sub jl pushf add inc pop xor xchg or push push lcall out xor push imul in xor xchg mov rorl ds in lods xchg jp dec inc out push pop sub loop cld jecxz clc dec mov or mov mov pop jo aaa pop add repnz mov lds cmp jae pushf dec jne push mov lea xor mov push js push pop div push push frstor mov outsb icebp (bad) fldl mov out insl aad pop mov jge push or jb add test in popf (bad) adc cmp mov lcall xor push mov xor or mov cmp sarl push lods pop imul repz leave or jb and inc std jp mov ret push push inc cmp cmp cwtl lcall movq jo pop imul aaa js mov adc cltd inc cmpb in mov or stos jae push outsb xor inc repnz (bad) mov insb and lea je call lea pushf pushl pusha mov movzbw pop pushl popl cwtl mov not movzbl setge movl jmp test stc pushf sub jmp or and dec shlb repz inc fwait jecxz adc clc out aaa shrl sub mov enter jo arpl mov jmp js ficomp nop mov jp xchg in outsb xor or hlt dec dec aaa jecxz mov jecxz call add jns sahf add in sbb jno lds cwtl adc aad aaa je xchg xor rcrl loop dec popa jbe iret mov cmp negb add push orb adc pop pop mov jmp lahf movsb cli das das xchg or inc pop inc push jno xor pushl lea jne pushf sbb shld cmp mov bswap bt sub cmc xor bt lea bt test jmp movsbw ror mov push and bt push pushf add pusha pushf movb lea jmp cmp cmp pushf pushf lea jae call movl push lea jg pushf movl pushf pushf lea jmp sub pop aas pop mov in popa push pop cwtl fisubrl sbb mov aad xchg jb in jno push add pusha sbb stos mov xchg stos xor stc or mov (bad) mov mov lock mov pop jp push dec mov dec push dec nop mov add push mov mov lea aam movsl mov arpl push and in std lock cmpsl adc push in dec stc test (bad) inc xchg stos mov js xchg push pop sbb and adc addb les test add testl dec aam cmp (bad) mov int3 shrb pop negb and lods dec or (bad) xor add pusha cmp lea js cmp pushf lea jle push lea ja push add sub cmp stc pushf or pushf lea je jmp pushf mov setae jmp lea jne inc bswap mov cmp stc jns or pusha pushf call mov (bad) (bad) das pop ja (bad) adc sbb dec cmpsb xchg or xor popf push icebp cld cmpl in scas mov adc mov lcall fs dec xchg mov adc cmpsl cwtl test xchg aad lret mov movsb fidivrl pop mov mov es mov (bad) testb enter and or (bad) cmp sahf lret jge jp xchg nop and inc cmp popa cmp fwait out pop lds fimul cmpsb cmp sub fildl jno sub add dec jae inc outsb jne gs je dec outsl outsl outsb push gs imul das mov movsl cli std out repnz cmc pop and or cltd gs adc sbb aam lret xchg aam add js push sti cld mov jnp add arpl cmp fs arpl xchg in sub mov pusha lcall dec pop mov jne jne inc sub add push das jo push (bad) (bad) lea push in and cmp call xchg inc xchg inc pop imul outsl adc mov stc rcrb xor xor jnp mov xchg faddl xchg or sub mov test in rcll adc nop test nop mov pop mov sub add fsubrs cmc popf add enter stc or insb jge mov sahf test fstl ds or stos je addr16 inc rolb mov cmpsl sbb test and adc add bound inc (bad) jl jl lods out popf rcrl jne xor sbb or daa aaa outsl outsl inc js mov sahf add pusha sahf pushf loop pop sub push movsb sub xor xchg mov popf mov jbe stos ror stc out xlat call jp aas cmp neg cmp cmp add stc bt call bt bt test push mov pushl jmp scas jp inc mov push mov push jno jno mov movsb lcall repnz scas cwtl inc fldt out mov cmc cmp and adc iret rep add adc aaa fbstp shll mov pop fsts cs dec pushf inc push push adc mov loope daa test cmpsb leave or mov xchg std mov push push push ret mov imul inc jbe or xchg out sub xchg sub push mov pop sub lcall gs cmp aaa (bad) scas lcall arpl addb pop imul std icebp cs add nop dec adc or adc fadds pop adc dec imul aam mov addr16 dec pop mov inc push insl aad pop into xchg stos popf test xchg fdivrs and test xchg dec rcrl repnz sti xchg cmp sbb sbb jge mov adc jp inc push scas js jp add mov sbb jo outsb lock pop rclb cmpb sti and jne xchg or cli mull ss push test data16 and or add jae and jno sub fs dec out stos adc clc jae adcb jmp daa cmp icebp ljmp sbb insl jb ret pop fwait push (bad) jb inc xchg insb jb test xchg stos adc cmpsb cmp hlt cmpsl clc addr16 test inc mov xor inc mov cmp mov jae pop rcrl mov rolb lods xor (bad) lret mov mov xchg imul adc out mov cmp dec xchg and pop aas add popf mov sbb pop sub add popa insb inc insb insb outsl arpl jmp cmpsl pop shll sub push outsb pusha call jb sbb mov shr sbb push sub aam xor es jo shrb ja stos mov faddl xchg pop sarb and mov sarl mov in std adc pop or or pop pop xor sbb ljmp jle imul je mov jns inc jno xchg lea jge sarl mov mov mov or or aad pop jecxz hlt loope,pt pushf sub jno sub xchg dec add cmp cltd movsl (bad) jae xchg push xor jne cltd fiadd es ljmp xchg dec (bad) pop cltd repz je mov ret adc mov pop add or add cmpsb pop popa jge dec mov inc sbb aad pop daa sarl and mov lods in shrl mov pusha jle or push fnsave mov (bad) mov inc stc data16 icebp in sbb mov imul push inc ret loop cmp mov in adc in sub scas rorb cmpsb mov repz push dec adc jno daa mov cmpsl xchg xor icebp sub mov pop pop (bad) mov jne sub lock cmpsb nop out aam stc (bad) and fwait sub jnp aaa addr16 bound loope inc cld lea and cmpsl out icebp inc imul fdivrs dec in push push xchg fisub and rclb (bad) hlt mov xor push pop pop pushf das (bad) testl sub sbb jmp push mov fadds dec jno adc sbb add pop lods xor jno daa inc dec adc sub in std and out add pop push mov aad adc add lcall xchg push lods xlat xchg cld ret and (bad) mov xchg jae mov rorl push fbld and aaa (bad) jecxz daa popa xor icebp cmp mov je int fwait pusha sahf xchg scas push sub sbb in test pop mov scas sbb push stos mov sbb lds lea mov pop xchg ret dec ror mov daa ljmp add call pusha movw adc call jns (bad) dec das push mov aas roll mov add sbb cmp jmp mov xchg or nop sub inc pop cli mov sub repnz subl push sbb add cs mov inc fsubr mov push xchg mov movsb lcall pop les pop loop jmp or inc cmp mov cmpsb pop mov jns jb fsub daa sub scas or mov fwait sar fwait add mov dec shl pop fsubrl or adc jne outsb mov stos js cmpsb and scas out or (bad) loopne inc xlat call or sub push push imul jno pop and push pushl call out cld lret mov jbe sahf repnz aam dec xor cmp mov aas (bad) aaa aaa call pop pop jge xchg (bad) or push xchg popa repz or mov adc pop daa jb add pop sarb ljmp aaa pop cmp je sub nop dec mov dec xchg dec push jb call jno xchg rcl cli cld (bad) hlt push aaa ljmp shll jg jne pop cmp push mov cmpsl cmp inc test jmp mov or pop inc cltd stos adc dec fistpll mov cmp push das push mov clc cmp or int3 in dec inc or mov jb jb add xor fistp jmp add (bad) sbb icebp sub int je,pt cmp mov mov pop ficom movsl jne dec (bad) jnp shll xchg or cld arpl pop add cmp (bad) xchg pusha mov cmpsl xchg jle push adc mov xchg stos pop stos mov push xchg jb sub mov add dec xchg scas sub pop insl push repz out pop xor cmpsb movsl inc cli xchg xchg lret ret inc xchg (bad) xchg xor call lods (bad) mov add in mov jp mov jns test in jae pop adc fwait loop sbb xor push xchg jno and test pusha test cmp mov lea jg jne push push jmp push ds (bad) cmp lcall (bad) and pop lods xor add fbstp sub push movsl das (bad) jle outsb dec push gs or (bad) fildl cltd add jne cmp push xchg inc and jo adc sub add cmp mov rcll xor dec jmp cmp ret imul push cmp leave sub lock cmpsl insl sbb pop xchg mov add lock push push jp mov mov sets (bad) pop mov adc in inc sub dec pop gs xor insb xor push faddl dec add xchg jle push mov mov out sub and dec ja fs inc xor lret pop adc sub fildl ja jae cmp scas push fild push dec push push cmp cmpsb lds or inc sub pop data16 insb xor int aad push mov and (bad) aas push push dec dec xchg mov mov pop icebp inc adc mov jo jecxz inc inc (bad) stos (bad) stc gs or mov mov mov pop outsl pop loopne dec jbe add sbb dec pop inc pushf push outsl mov popl inc cmc dec les jl cmp adc mov pushf lods jno and jg lea je cmp test call sub cmp cmp pushf pushf lea jne pusha lea ja stc pusha imul jmp jmp lea je clc cmp cmp jmp pushf lea jne pusha inc pusha inc push push pushf pushf lea jmp mul stc mov rcrl (bad) dec xchg aad movsl cltd jno lret lods push in inc sbb cmp or shll sbb push mov fld (bad) inc cwtl inc fwait xchg mov loope jle call mov cmpsb lcall mov mov sbb xchg lret fdiv push sahf inc iret dec stos xchg jmp arpl outsl scas cld push sbb and pop xlat dec pushf ret in popf adc icebp int test xlat daa mov push popa movq cmpsb fsub mov and mov or and xchg ret cmc leave aad shrb sub aad lds inc xor fs ret cwtl test xchg in sahf shr mov inc out xchg outsl push fs inc pop loope fidivr push stc push add dec mov popf test shrl insb mov ja adc cmp xchg inc pushf and (bad) mov mov js or adc fdivp jne jo int3 out nop pop outsb xor cmp mov xchg mov push dec faddl movsl subl add jmp bound jno and lea bt test or pushf lea je jmp jmp mov push pusha pushl ret pushf add cmc cmp lea jp pushf lea jb jmp jecxz stc sbb inc (bad) nop iret cwtl or jle incl xor push mov jo test cli in repnz sbb imul in and cmp inc dec and cmpsb (bad) (bad) adcb fldl pop ret xchg aad out mov mov imul cli mov mov xchg movsl inc add (bad) (bad) cmp sbb or call sahf mov pop pop nop repz (bad) pusha mov pop aas sbb ljmp push dec lea dec xor rcl and or pop and jp roll (bad) enter mov aam add mov mov mov jnp ret fucomi sbb cs mov xlat jo pop xchg lahf inc mov mov mov push sub dec xor jnp mov test test jno push pusha das lcall les cmp neg cld pushf pushw popfw push inc call mov ret cmp adc sti inc lcall mov or int cli and aaa (bad) or and mov out inc pushf outsb nop push mov rcrb dec xchg out jo fs cmp popf scas hlt jmp cmp pop push sub inc add mov or sti arpl inc popa fisub dec dec outsl pop iret mov stos sbb mov inc fsubr shr or mov pop dec lods scas aad aam daa cmp and dec mov inc (bad) mov adc clc cmpsl cbtw fnstenv sbb sahf (bad) enter ja sub and aam mov mov mov test sbb adc xor subl xor ljmp inc pop inc pop mov cltd xchg test jmp fs divl adc dec sbb lcall xor (bad) xchg mov adc cmp xchg cmpsb ret fmull out rcl addr16 dec loope cld dec enter fadds mov push cmpsb ret inc xor add lcall jne or add rep mull add call fistl pop jl addr16 jmp nop sub xor nop nop (bad) mov push sub sbb popf and outsb mov inc sbb mov seto sbb insb push inc cmp sbb sbb sbb outsl fstps (bad) jb shr and dec outsb nop fsubp insl mov mov bound (bad) movsb pop movsb adc stos jmp rcll mov pop ret fcmovnb pop pushf mov stos xor add adc imul sbb leave in xchg dec mov fcmovb push pop out insb outsb sbb or aam jno mov (bad) mov imul aas pop jo stc inc cld cmc adc adcl pop movsb pop test enter jg add in ljmp js mov rorb pop sbb dec xor mov pusha jmp cmp mov aam in jo sbb je or sbb repnz (bad) jns arpl cs mov hlt pop jbe mov cwtl inc fwait cwtl dec rorl sub lret repz pop cs popa lahf and lahf mov nop sbb inc fstp sub daa fsubrl movsb xchg or sbb jecxz ret fdivp mov inc lret dec outsb lods xor and jnp aam cmp (bad) rorl push (bad) sbb pop adc dec out lcall adc dec not sub adc xchg sub add sub jno sbb push inc es cmp ret sti lods les dec and push (bad) jbe push add lcall mov aas cmp jb xor xchg and or push sbb daa jno hlt xor jl out pop mov xor repnz dec push add jae lds dec lret out cmp push fbld pop mov push lods cmpsl cltd out mov cs psubq sub push or and adc mov mov jl mov addr16 cmp pop cwtl insl xor in push mov dec xlat fnstsw or sar jmp jno sbb ja scas rcl jmp pop cmpsl js adc in cs outsl scas out pop stos adc push pop cmpl pop fadds sti inc test inc std ja lcall pop je rclb repnz jne xchg mov test rcll xchg xchg enter mov cs cmp cmp add nop push adc push aas mov cmp stc or jnp loopne (bad) cli add lahf nop (bad) lcall jmp test sbb (bad) lods jmp adc jno sbb mov cltd add mov lahf mov fcomps jecxz test mov sahf addl sbb jnp jb sub test adc cmp int3 lret enter pop out inc icebp ljmp push (bad) jne or mov jo outsb scas or outsl xor push xchg bound or cmpsb pusha add test xchg lock sub pushf stos add je cmp cld push dec addr16 fsubrs ret xchg push sbb sbb mov (bad) in into or mov cmp call jmp push inc jnp (bad) pop test or xor incb and adc sub ss adc pop mov test push mov and or sahf daa mov test lret push add cmpsb clc rorb and push jmp inc lahf mov xchg inc fsubl (bad) xlat pop repnz dec sub aaa dec dec jo fsubr adc jnp xchg jns or in sub xchg data16 xor mov js pop fistp adc outsb les insb push dec xchg push (bad) xor iret iret push call pop sbb mov push inc push dec cs insb add roll pop mov decl pop sbb jne mov inc sbb mov jp push or (bad) mov pop test movsb std incb push mov js mov mov (bad) call test xor inc outsb xchg aad sbb rcrb sub sbb in loop mov repz add push data16 (bad) rcll push test rcrb or jb xchg nop scas push fsubs push pop inc jns js sbb rorl cs sbb out imul fsubr rorl inc fist push xchg jno pop push xlat shrd mov push pushf test pushf cmpb call movb pushf not pushl bswap mov pusha pushf cwtl lea jmp push lea ja setp setns inc pushf inc inc sub not (bad) repz jecxz xchg clc movsbw mov neg mov pushf jmp orb test loop xchg add add mov xchg xchg imul (bad) cli and jge jb xor dec push push int3 xor lret or ljmp adc or add cmp sub js lea in popf repnz imulb orl jmp repnz dec in fstpt xchg cmp ds jno adc lods rorl jle into add pop lods in pusha out sbb sar mov lea xchg cs sarl xchg (bad) xlat (bad) xlat sbb out or add xchg jns pop pop jg lahf inc js mov or push or test in xchg fwait (bad) jbe mov push call int3 push leave fimull xor jg push jnp cli inc into nop (bad) cwtl jb scas popa std ds aaa jne and aad adc lret stos push out mov movsb sub stc shll jecxz mov sbb mov ret (bad) cwtl cmp fcompl push bound sub test fs xchg dec jns gs xbegin xor imul mov jmp test das mov mov mov mov and dec test adc jmp (bad) iret rcrb and andl dec stos adc adc xchg or roll fdivs fnsave fsubrs gs mov lcall cld sub push repnz inc rcr and jbe sbb sbb cs cmp cmp inc inc cmp push jg cs pop lahf mov dec ja mov movl in pandn jo pop loopne pop popf arpl out jns insl (bad) mov jae fwait sub pop xchg arpl fwait cmp fld nop scas ret loope xor arpl xor sbb out lock (bad) jno adc nop ja cmp mov push decb dec or sbbl mov jge mov cmp pop pusha ret call sbb lds cmp or stos or test cmp xchg orl and xchg outsl andb data16 mov or xor push lods sub and mov push xchg mov jle test insl jle test loopne (bad) pop mov movsl in or int lret fmull loop js xlat (bad) fsubr aad out and mov fisubl in jno adc int3 pop cmpsb cmp inc jb and cs and clc push cltd rcr aad add cmp imul pop mov xchg or aas push jmp cmp jmp insl jle into fisttp jge inc fwait lret je aad and js insb jno fisttp aaa pop mov add std adc dec loope jl movsl mov push push fldenv dec jmp add imul jae arpl add insl adc nop das nop (bad) sbb daa mov orl fs adc jno pop adc fs jne pushf inc movb inc push mov pushf lea jmp daa fiadd mov aaa ret jp,pt jae cmp dec icebp cmpsb dec stos add iret iret shr shr mov adc inc sti (bad) fldt pop ret sub arpl hlt sub cmp pusha pop pusha sbbl cmp jl rclb psadbw or rorb push mov (bad) mov pop je xor sbb pop clc dec insl nop ds cmp lea cmp out fnstsw xor and jle mov add pusha (bad) dec xor das outsl aaa cmpsl aas adcb std or inc fwait jno adc cmp push mov push dec pop incb adc adc jmp cmpsb stc fdivrs inc (bad) and data16 sbb loop xor addr16 or jo adc mov jne aad push rcll inc mov and mov aaa js pop imul push cmp mov sbb iret scas add cmp inc insb test jmp outsl xor mov add addps insb fwait inc jle xor movsl push test aaa pop scas dec push insb stos mov (bad) jno pop cmpsl dec mov ret jnp mov lds (bad) pop adc lret add fmuls mov sti incl mov stos loope ja pop in mov inc push adc fadds sti ret repz pop xchg outsl (bad) das nop mov cs jmp and movsb sub ret pop mov mov das sbb and sbb pop in imul mov cmp jmp out js lea xchg mov inc insl mov outsb pushf push jg iret adc pop iret loope xchg or jbe and jne push ret pop adc insb push or and sbb push or loope add daa fildl rorb mov pop adc aam add mov out push jae jle sbb pop mov pop loop ss mov jmp shr iret stos rcrl rcll bound inc pop aad mov pop or test insl lds xchg jmp lahf adcb jno jo ret jnp pop sub pushf xchg lods scas aam loop nop xchg cmpsl pop pop sub push nop xchg mov and sahf int xor into xlat (bad) fsubr aad adc ja push mov lea lds lcall stos jae dec repnz ficomp xor push out test pop (bad) and jnp pushf pushl push mov lea jmp push movl mov movb jmp or cmc push mov xchg mov ret loopne mov or mov cld repnz mov ds inc jns or jne test ret xchg js fildl std push cmc adc push scas add push mov in pop mov pop (bad) int les shlb test std popa jl xlat and mov and jmp mov (bad) das push cmp lcall jno movaps push mov pushf pusha lea jmp add push gs jne jb push popa insb jne inc add test lds add and mov bt or jmp call push pushf lea jae clc bt cmp jmp cmpsl out mov dec or mov les and or lahf inc adcl xchg jmp sbb add sbb and ss or mov pop jecxz psubq je sti jecxz rcll lret hlt stos ss insb rol mov push test movsl stc or jnp sub js sbb (bad) xor dec repnz mov xchg outsb (bad) cld ret mov aad add add lock stc cmp jg jmp jne mov or (bad) cmpsl aaa nop dec xchg mov imul jno push xor arpl xchg fdivrp jmp fs jb pushf cmp test pusha cmpb movb pushf lea jne shl pusha pushf mov cmp cmp add pushf pushf pushf movzwl shr not rcl mov cmp mov cmp stc add cmc clc movb cmc mov jmp movb lea jae push mov movw pusha mov movzbl pusha jmp inc in jb cmpsb cld loop mov push das test fwait stc inc sub mov cmpsl imul shrl and mov mov add push adc leave xchg cmpsb cld mov rorl push xchg mov xchg lret fnstcw jg xor js jg or into push xchg movsl (bad) test sbb in pop fisubl jnp adc jecxz sub xor jne pusha jno dec pop out xchg loop shl mov pusha inc cmp jb and sahf lds fildl daa pop cmp xchg dec in mov pusha das push mov in inc dec out mov es xchg mov add mov xor lds call int3 cmp sub sbb inc and mov pop out nop call scas pop and cmp mov push mov mov mov pop into cmp inc lret aad cmpsl push mov pop das mov subl test imul xor pop jae pop imul das mov (bad) mov (bad) dec sub cmp xor mov (bad) mov imul ja inc mov rolb (bad) adc xorl sub bound pop sub or mov inc pop sbbl dec es mov push push sbb icebp pop jnp push nop cld sbb cmp shrb test xchg fbld sar mov pop and ss inc fcoml hlt mov xor or icebp mov pop adc mov outsb push popf test sbb loope out jge stos andnps push lret mov shll sub scas iret jle xor notl int3 ss in and scas mov push ja mov push mov test out movsl stc stos adc lock jnp adc jnp push adc out sbb movsl cli enter fldt or aam jno and inc push lods pusha movsl and cs mov mov sbb and xchg and in fldenv sub mov adc add sub and test cli and add out out adc in (bad) jno or jns mov mov add test dec mov jne popa test fsub jnp sbb imul in ret fldt xor add jbe (bad) loopne sbb cli fs jns dec mov cld dec adc sub nop mov imulb pop sbb adc mov and shll mov ret jl pushf lods cwtl sbb ds pop push and dec pop cmp pusha mov (bad) nop or loopne mov push mov or or movl and add bts mov cmc mov pusha mov call test pushl pusha push lea je cmp pusha add pusha test cmp call cmp pushf call stc rcr das movzww stc clc bt jmp pushl test call test add mov movb pushl lea jmp pusha lea jne pusha sar xorb lea not movzbw call cmp xor push jmp pusha mov movw jmp push push mov push movb pushf lea jmp mov pushf mov pushf push pushl ret mov push pushf popl pushf mov jmp pushl popl mov mov lea jmp add jmp mov jmp pusha mov pushf push pushf lea jmp inc sub mov test pushf push test sub cmc clc push shl pusha push call shrd bts pusha movzbl movb bt add not sub bts ror inc inc adc and pusha add pop movsbw inc movsbw mov jmp clc and jmp push ror lea pop dec pusha rol xor or bswap lea shr call mov pushl jmp mov movsbw mov mov movw call clc sub mov pushf jmp rol shr test dec mov bt add push lea jmp not cmp add clc lea jno add jmp bswap mov pushf mov mov pushl call pusha movb pushf popl call bts call mov pushl mov push pushl pushf popl push call pusha lea cpuid pushf sub pusha cmpl movb pushf call lea lea jo rol sub call xchg pushf clc bt xor jmp shrd dec mov cmp clc cmc jmp pushf pushf jmp pusha jmp mov mov pushf mov pushf pushf lea jmp rcr ror mov pusha push pushl stc sub stc add push pushf popl push jmp pushl mov pushf pushf pushf popl push push pushf pushl popl push lea jmp mov push pushf pushf lea jmp add add jmp movb not stc cmp add stc test movb call pusha mov test pushf call (bad) icebp add cltd rorb xlat or mov mov jmp add jmp mov pusha pushf push pushf lea jmp inc btr cmp mov jmp sub jmp stc cmp mov add clc call mov call mov pusha movb lea jmp call lea jne clc (bad) repz xorb pusha setbe movsbw bswap mov push push pushl movb lea jmp push pushf jmp jmp pushf mov mov lea jmp movzbl bt test add pushf jmp pushf popl jmp mov push pushl lea jmp movb push jmp pushf pushf popl call pushf popl call shld push mov mov jmp push mov mov push pushl pusha pushf pushl ret pushf mov bt rol xchg push movsbw bswap push pushl popl btr xchg stc push not rcr rcr rcl mov mov call dec rol mov call call jmp jmp pusha push push movb sub pushf call mov dec call pusha mov jmp stc clc clc sub stc bt xchg pusha mov cmc jmp mov mov pushf pushf lea jmp call setbe shl mov cmp jmp mov pusha pushf popl bswap mov bswap pusha mov lea lea jmp mov jmp lahf shrd shld mov cmp sub push pusha pusha call test shl cmp cmp bt shr bt clc bt cmc or cmc jmp add add rol mov xor bt ror mov cmp sub pusha movb cmc shr pusha pushl call jmp clc rdtsc stc sub push mov jmp bt not mov stc xor stc test clc cwtl pushl jmp rol neg mov shl inc stc pushf add call mov inc pushf pushf decl push pusha call mov call pushf pushf mov push push mov push pushf push pushf popl pushf jmp jmp jmp call xchg pushf xor pusha ror stc bt pushf lea cmc push clc cmc xor call cmp add cmc call push sub jne bswap cmp clc cmp pushf add cmc cmp cmp push add cmp sub call clc pusha jmp mov push call mov push pusha mov lea jmp jmp pushl pusha pushl pushf popl jmp lea aad mov jmp cld push push jmp jmp movw stc lea pushf jmp inc neg mov and or stc mov push bt add call mov movw mov call sar pushf or mov add bsr add push sete inc ror xor mov jmp mov pusha jmp pusha mov mov pushf lea jmp sub pusha lea jne jmp call xor pusha pushl push xchg push movl mov call shrd rol pop sub neg and popf bswap pushf mov pushf mov pushl ret pusha jmp stc cmp jmp movzbl test add pushf dec pushf pushf ror cmp bt clc neg pusha jmp jmp rol mov seto stc jmp push pushf lea ja sub mov cwtl shrd shrd lea lea jmp push mov pusha pushf popl movb push push pushl pushl popl push push movw push lea jmp mov mov movb pushf push mov lea jmp mov pushf popl call pusha pusha not mov movb mov pushf lea jmp call dec push movb lea js inc push pushf call push bt add pushf jmp push jmp jmp bt push mov stc cmc cmc mov sub pushf pushl pushl call pushl popl movw pushf lea jmp stc clc ror stc sub jae xor test pusha stc lea mov not stc clc bt xor pushf call pushf mov mov pushl push lea jmp shr jmp pushf lea jmp bt mov cmc pushf not cmp pushf cmp not pushf sub pushl mov jmp bts sub call pusha pushf popl call mov call adc mov call pushl popl mov mov pusha pushl lea jmp jmp pusha mul call add pushf pushf popl pushf pushl popl pushf pushl lea jmp movw jmp lea jg push pushl popl pusha lea jmp movsbw pushf mov jmp clc mov pusha call call pushf popl pushf pushf mov pushl popl mov lea jmp pusha pusha pushl popl mov lea jmp add jnp add sbb add loop add imul mov je add scas sbb add adc add jae add mov add les add int add lcall add daa pop add popf sbb movsl push add add sbb add popf sbb loope add adc sbb add aas push add push push add jo add mov add popf sbb out add fstpl add add sbb add je add lahf push add adc push add popf sbb daa pop add inc push add fstpl add int add lcall add outsl sbb add int add loop add test add jnp add rcrb add out add les add arpl add jae add jge add dec sbb loop add hlt sbb xor add hlt sbb loop add jo add sbb push add cmp add adc add adc push add scas sbb add loopne add (bad) sbb add popf sbb dec sbb dec sbb jge add loope add movsl push add outsl sbb add loop add jae add lcall add movsb sbb add je add push sbb ret add add sbb add mov add outsl sbb add jae add les add daa pop add loope add dec sbb fcomps add hlt sbb je add test add loope add test add call sbb and sbb loop sbb mov imul mov aas push add xor add cmp pop add scas sbb add fcomps add pop sbb add sbbl loop sbb sub add int add xchg sbb lcall add (bad) sbb add inc push add adc sbb add ret (bad) fcomps add xor add lahf push add cmp push add jnp add sub add lcall add fstpl add fcomps add fstpl add jnp add popf sbb xor add aas sbb add outsl sbb add fcomps add outsl sbb add je add imul mov pop sbb add fcomps add loopne add cmp add aas sbb add imul (bad) jae add loopne add sbb sbb int add aas push add add sbb and push add scas sbb add out add push sbb add aas sbb add jae add pop sbb add je add add sbb scas sbb add aas push add out add xor add movsl push add jo add daa pop add sbb push add aaa sbb add call pop add xchg sbb test add xlat sbb add xor add cs add sbb push add dec sbb les add jo add jo add loopne add xlat sbb add jnp add jae add rcrb add lahf push add (bad) sbb add imul mov sbb add loopne add les add outsl sbb add push sbb add je add loop cmp sub pushf pushf pushf pushf mov mov lea jmp mov pushf lea jmp mov jmp bswap bswap neg call call cmc mov btr movsbw mov stc pusha push add call call pushl popl pushl lea jmp pusha pushf cmp pusha pushf jmp mov pushl popl mov pushf pushl lea jmp call jmp call mov dec push movb push push lea jmp xor clc add clc cmp mov sub push mov mov lea jmp jmp pushf push add mov call jmp call cmc sub bt push shr movw mov push mov jmp shl setb jmp mov mov movw mov lea jmp lea jne movsbw clc mov call pushf call bts mov push test pusha call pushl popl mov movw lea jmp ror neg sub shl adc xor (bad) (bad) mov pusha test dec jmp setns movzbl pusha mov bt rol test add pusha mov mov mov mov push pushl ret pushl mov push mov jmp mov call sub btr jl mov push adc mov stc add movw jmp push pushl popl mov pushl lea jmp call pushf sub push push call mov sbb bsr add add shrd cmp bswap shl mov pusha shrd sub bswap not adc ror shl bts neg pushl cmp shrd xor call pushf pushf pushl popl pushl lea jmp pusha mov mov jmp imul jmp pushf mov pushf push lea jmp rcr setns sar mov add ror mov add jmp pushl call mov mov cwtl setbe mov pushf push divl call shl jmp pushf pusha mov movb pushf popl mov pushf push movb pushl popl push lea jmp cbtw call mov pusha push mov pushf lea jmp sub add mov (bad) repnz mov jmp push mov call movsbw mov jmp push push mov pushf pushf pusha lea jmp jmp pushl popl push mov push lea jmp push pushl mov lea lea movzbw bswap push repz popl bts push rcr call call push pushf mov pushf pushl call stc add bt shrd push call lea jne test sub pusha push call movzbw pop sbb movzbl cmp clc and xor add pusha adc sub movsbw movsbw rcl ror lea jmp mov pushl lea jmp shl lahf not mov (bad) repnz xor mov (bad) icebp shl test or mov stc jmp cmp aad mov adc adc daa mov jmp push pushf movw idivl call jmp bts mov sub daa sbb aam mov cmp sub push cmc pusha stc imul call pushl popl mov lea jmp movzbl btr not not call jmp cmp add movb pushf jmp call dec shr inc add not dec add rcl (bad) mulb push add add pusha mov pushf movb push lea jmp mov pusha lea jmp daa daa mov call (bad) testb mov cmp setp movzbw mov test add pusha pushl mov pushf mov movb push lea jmp call jmp imul pushf pusha mov mov jmp pushl pushf pushl popl push push push lea jmp jmp cmc pusha ror cmp cmc xor call test not jmp add mov clc call pusha mov movb lea jmp pushf lea jnp push pusha pushl push lea jmp adc mov bt push bt sub clc pushf add movl call bt mov cmc stc bt neg mov clc cmc not pushf not stc pusha clc cmp and push jmp movzbw add sbb mov pusha jmp jmp pusha mov mov movl lea jmp rol movzbl setle btr mov push cmc rol cmp sub jg push add jmp pushf pusha call movb pushl mov movl mov mov push pushl pusha pushf pushl ret clc lea jno and stc jne cmp jmp call xor rol sbb clc mov mov setns add pushf ror cmc ror shr call push lea pusha jmp bswap mov pushf pop mov pushf mov jmp pushf mov pusha push push pushf lea jmp add movsbw push inc dec jmp pushf pushl inc stc xor jmp jmp push pusha pushf pushl popl mov stc cmc add cld bt stc pushl popf pushf push lea jmp mov pusha mov pushf pushf pushl lea jmp pushf lea jne pusha call mov pushf jmp lea jnp pushf push pushl push pushl pushl popl pushl lea jmp call mov push pushf add call jmp bswap not ror xor (bad) icebp shl add shld sar shr shr movzbl mov lea jmp pushf mov push pusha movb pushf lea jmp daa pop rol xadd pop bsr rdtsc pop xadd not pop bsf dec pop shl jmp cwtl cmc sub jmp inc stc clc call cmc mov cmp xor pusha mov bt cmp pusha sub pushf mov shr jmp pushl popl movl movw lea jmp pushl popl pushf pushl lea jmp mov shr clc shl mov call pushf jmp jmp jmp pusha mov push pusha lea jmp dec shl mov push pusha mov add pushf jmp pushf push pusha mov inc jmp pushf jmp push call dec cmc pushf stc add pushf add jne clc stc mov clc sub jo mov push pushf pushf lea jmp bswap cmc bt popf pushf pop jmp pushl pushl jmp adc mov pushf stc clc cmc sub call dec mov jmp mov pushf clc call cmc neg mov stc clc add pusha add jmp movb mov movw movl pushl pushl lea jmp pushf push lea je jmp call pop inc or and add adc btc pushf mov cmc cmp sub call movb movb pushf popl movb call bswap aas bsr mov rcr not pusha mov pushf stc mov mov add jmp neg inc movb not push dec (bad) repnz ret bswap call not jmp call call pushf bswap movsbl bswap mov pushf movsbw lahf movsbw mov jmp mov movw mov pushf lea jmp bt btr cmp mov sar rol clc rcl mov bsf or bsf or mov bt sub push mov call not and not stc dec dec sub jmp pushf mov pushf pusha lea jmp sub call mov pushl popl movb pushf pushf movb lea jmp movb stc sub call mov pushl jmp stc add clc cmp stc add jmp mov pushf pushl jmp call mov pusha pusha lea jmp das cwtl sub bsr and clc ror lea jmp jmp mov mov pusha push push lea jmp mov cmc shrd call mov pushl pusha jmp jmp (bad) lock loope (bad) (bad) pushl popf movb movb mov lea jmp pop pushf pushl ret call pushf bt add pushf call bts mov pushf call pushl popl pushf pushf pushf lea jmp lea pushl pushf mov mov std bswap bswap mov movb jmp mov push mov jmp mov pusha push pushf mov lea jmp cmc stc mov stc stc sub pushf mov pusha pusha push lea jmp push test sub stc mul call lea jbe pushf call pushl popl push movb movw push lea jmp movb mov pushf pushf popl movb call movsbw push call sbb lea cmp cmp jmp push mov movb lea jmp pushf pushf mov pushl push pushf lea jmp pushf rep bswap rol neg cld mov pop shl std pop mov stc movb call mov pushf popl mov pushl popl pushl pushf mov lea jmp jmp mov pushf jmp pusha call jmp bt sub pusha shl pushf call bt clc or call pushf pushl jmp add pusha call jmp jmp mov jmp shld notl shl mov bt cmp cmc sub push cmp mov pushf and call push btr push btr mov movzbw push jmp pushf mov sar mov pushf neg sub js cld pop jmp add lea jle mov push lea jmp pushf popl jmp jmp push bswap clc add cmp add cmc bt sub stc ror jmp push mov mov lea jmp mov pushf movb pushf mov lea jmp cmp xor test lea pusha bt not pusha xor mov bt push sub call mov mov push pushf movb pushf lea jmp lea jne bswap ror xorb movsbw movsbw pop push push push lea jmp pushf mov pusha movl pushf pushl ret pushl mov movb lea jmp rcl mov clc not btr dec add bsf btc sub or mov call call mov pushl push pusha mov pushl pushf movb lea jmp pushf mov push lea jmp movsbw shrd pusha or mov sar test inc mov bt mov sub cmc pushf call mov cmp cmc sub pushf pushf mov pushf lea jmp push jmp rdtsc mov sar and or mov cmc jle bt pushf sub jmp pusha mov pushl movb pusha lea jmp aas xor mov test add call mov call rcl rcl mov rcl pop das not jmp pushf mov mov jmp lea push pushf lea jmp call div mov mov pushf movl mov pusha pushf popl jmp bt lea mov pushf mov pusha stc clc add pushf jmp and movw pushf mov jmp stc xor call push mov movb pushf lea jmp pushf not bt add test clc push test sub jmp mov movb pusha lea jmp jmp add add lock add addl mov or add out add add or add push xor add (bad) xor add sub add imul add ss adc add cmp add jo add stos aaa add jmp add sub add imul add cmp push cmp pop cmp mov add lret cmp or add cmp add popf cmp lret cmp clc cmp and add dec cmp jnp add mov cmp or add add cmpb enter add add pop cmp add (bad) cmp add popa ds xchg ds mov add sarb add adc add imul add fdivrs add or add add push inc add rolb add inc add dec inc add mov inc add xor add add mov inc add jno add roll sbb pop inc add roll inc add pop inc add mov add and jp and jnp and jl and jge and 