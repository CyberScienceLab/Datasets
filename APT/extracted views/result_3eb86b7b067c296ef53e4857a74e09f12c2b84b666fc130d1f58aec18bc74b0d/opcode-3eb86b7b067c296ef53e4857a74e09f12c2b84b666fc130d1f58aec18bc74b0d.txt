sbb add cld cwtl add xor dec and pop push aad xchg xor outsl jns push test cmp pusha arpl or add dec cmp js dec fimull pop push and push mov aad jae gs inc jge sbb xchg pop push add jp es jne cmpsb daa add sbb push xor inc cmpsb mov xchg mov fldt dec out or sbb cltd push mov or push push loop (bad) pop das jns mov add mov inc sub push jnp addr16 leave add fwait dec (bad) mov mov (bad) inc mov xor fwait daa jle into dec pop xor sbb cmpsb dec pop xchg xor idivl (bad) scas xor xchg or jg sub pop sub adc iret xor out mov sub movsl icebp add push inc adc jns sub inc mov out cmp leave dec push cli (bad) jecxz dec inc mov xchg repnz rcll mov stos mov jns nop loopne add in int3 jmp cld (bad) lea je push jge and lret push jo out out iret roll inc stc int push iret dec in imul lock lret test dec stc push xchg inc jp inc dec movsb xor xchg sbb and xchg stos pop movb sub pusha enter dec cmp in lret out adc dec pop jecxz cs lods jp data16 std enter xor cwtl repnz and or sbbl clc cli aam int cmp mov cld je add jb (bad) lahf mov fsubrl lock add sub shlb mov cli jb xor mov aad int lcall cmp jmp lret pop jp (bad) sub jmp mov push aam and icebp sub fild xchg lods lcall lods jne mov ss jp sbb inc cmpsb pushf fs adc aas out ret push scas sub pop sub aas ficoml push pop (bad) cmpsl cmp jnp jbe es out loop xchg mov loope sbb xchg scas aas and push push lock and mov pop xchg push daa jnp movsb inc int3 fcomi jecxz fistp sahf mov push aad xor std pusha lock inc inc jae jae push out fsub adc push inc in out jb cwtl lods dec bound lds push or mov inc mov mov push push mov push mov pop pop mov adc jno aad in add ret es jle push pop ds dec mov lods (bad) in xchg dec sbb fcoml ss jo aad cli int3 pop mov or ljmp frstor ljmp pop inc in mov jnp xchg test pop repnz repz jo dec xor leave ljmp push sub sub pop test lahf sub addl and mov pop rcrl mov jae cmp cmp hlt outsb int3 cmpsl test mov adc sti lcall sarl mov ljmp xlat into fucom mov and mov or inc aad sbb adc sbb scas cmp mov pushf test pop popw sub lcall adc (bad) fst mov shr xor sbb pop lods popa or mov add imul mov ja xor xchg inc out mov lcall subl and jns mov cli test add das rolb (bad) push sti adc xchg imul xchg fxch inc pop out pop cmp mov fiadd into loopne (bad) in inc lock shrb push scas out test and inc popl sbb mov jae xchg lock xor js jo in cmc scas cmpsl movsb jle jbe out mov jle push dec mov in push xchg popf leave mov push cmpsl jge incb pusha lea mov call xor movsb mov in and fnstenv mov or fistl mov pop shl adc addr16 adc lock xchg fidivr bound test mov arpl insl xchg inc movsb sbb test es mov push je adc dec and mov fsub scas fcompl or and push or push mov jmp add add push add in mov and inc xchg pop fistp outsl mov rol insb push stos sbb mov sahf sub jne inc add push sub mov arpl inc and xchg subb jle loopew xchg mov lea mov (bad) fildl lahf hlt loope mov xchg movsl adc movsl xor adc cmp loope xlat fsubs adc clc fdivr xchg arpl add pop cmp lods mov repnz add adc xchg inc xor lcall rcl mov pop adc adc cmp std sub jae jp mov clc add add cli dec xor mov sub mov sub int3 stos and ret adc inc in adc mov dec pop sahf insl mov pop ret mov sbb inc and mov or cmp js je dec daa jns push add xchg movsl xor mov (bad) mov and jb loopne jecxz jge push out es xlat je sahf or fwait mov adc adc aas cmpsb mov and adc xor in cmpsl inc pop mov inc sahf mov mov rcll addr16 loope aas cwtl mov mov push xor and adc dec inc and notl fildll push sbb das mov or mov pop lcall shl jns push leave mov movsl je jge xorl xor jp jmp pop push fs inc addr16 inc xor dec mov pop push sbb testb pavgb (bad) jmp lcall lret push stos xor dec mov jo pop rcrl or or rclb jno mov imul cmp xor lret fimull and mov inc fldenv sbb jno fidiv or addr16 adc dec push cmp (bad) enter jmp mov xchg stos inc jb ret xor add jns add gs xor pop inc mov adc hlt dec xchg test hlt pop and (bad) mov aad jns les (bad) out popa std pusha jecxz dec ds js lods or or xchg ror out add inc out loopne inc mov test test xor fcoms out add cli cmp sub push scas (bad) test and cmpsb push inc inc orl js xor jb lock dec pop push shrl inc pop dec jge stos jmp add dec fistpl adc fwait (bad) jo cmp mov in and inc mov adc lcall pop mov stc xchg sub pop in fsubrs (bad) sbb cmpsl sbbl mov loope loopne les jp push jae jb clc je rorl out mov fsts repz test ja lahf inc mov inc pushf scas xorl and in push xor loopne popa inc stos testb (bad) cmc sbb mov jmp loop push aaa loopne test enter and out (bad) jns jp icebp fistl arpl cs xor or mov push lds mov cli push inc cmp mov das movsl pusha or adc daa or xchg sbb (bad) hlt xor test arpl sti outsb fwait (bad) into cmp aas jp (bad) (bad) cmc call std stos and cmpsb lock xor jp scas in sahf push outsb stc sub iret out mov movsb std ljmp adcl insb inc mov pusha dec pop (bad) mov and sbb xor ss sub mov pop jnp mov xchg pop pop call stos mov pop sbb jg mov pop jae push add mov mov cmc out int rorl cmpl push lds xchg dec sarl mov xor push daa cmp in lods lret imul fist lahf inc mov out jge ljmp data16 (bad) push fnstsw rolb dec out xor jns cmp cmpsb scas ljmp hlt xchg ret and call lock jns es or lcall mov cwtl mov cmpsb insb jp popa clc xchg cmp or es jle aad adc or iret lock ret mov xor sbb je jle idivl jne jle out push push push movsb add sub adc fxam mov inc push insb pop cmp aaa push (bad) lret notl push roll mov mov out mov cmp icebp or lock mov test xchg jle mov cmpsb xchg mov (bad) icebp adc mov fmull idivl adc outsb pushf call jg mov cmpsb test pop pushf push hlt in or stos inc and (bad) xor in mov gs (bad) and adc sarb aam (bad) nop or cmp xchg daa xchg push cmpsb pop jmp jecxz xor imul sarb fdivrs movsl stos jno push mov mov aad pop in jmp pop mov div data16 or lock pop add mov mov sub add inc cli pop or mov pop cld push and cmp push dec fs xchg mov jns cmp cmp movsb icebp shrb or int3 xchg (bad) fidivr stc lods push dec xor ret pop jb stc das mov loopw sbb add adc mov std popa sub fimull sub sub clc pusha cltd jbe sub and loopne pop scas cmc xor push cwtl cmpsb pop sbb cmp cli cmpsl add sbb add fidiv xchg push test shrb imull inc lock fsubs in (bad) cld sub pusha dec adc inc dec div push je cmp xchg popa in scas cli push mov sbb addr16 inc insl sub sbb xor int cmp cwtl ret inc lods test outsl pop add sub sub push insl pushf push ljmp push hlt popa fnstsw bound inc jp addl mov shrb fild sbb loope mov or xchg lock sub in sub fadd rcll mov rcrl (bad) hlt inc enter cmp insl ror and jmp int lret divb repnz or xor dec mov rorl mov test xchg (bad) repz fs daa sbb (bad) sub fimul cmp orps mov and cmp adc xor fstpl enter adc inc imul push push mov add push dec in enter or or sbb mov jne out leave push jl rcr notl cmc rorl and xor mov lcall cmp xor pusha inc stos jg in leave xor cmc lds in stos pop jbe cmp lret xlat jb push jge push iret mov push lea ror cltd in mov mov add pop dec mov fistl es sbbb inc add xor int je cmp jne js pop push out mov test xor dec dec call push mov jo jo std sub and mov gs mov aas or les imul hlt cmp rol cmp dec stos add cmp xor clc cwtl sub scas mov mov fimul insl dec repz push (bad) jne rcr sbb mov push pop pusha cmc leave push imul xor lahf movsl or xchg jbe ds inc fxch or out in and jae push pop push idiv out add mov xchg fwait mov stos inc adc fbstp sahf mov ret mov and push shl pop xchg xchg icebp inc stos xchg or test mov pop loope or xchg inc ljmp inc inc sub sbb out sbb push sti and push scas repz mov dec out test xor jb loopne lods sub mov push mov sbb cmovne sbb insb lret jne pop add cmp and add movsb out aad push mov dec jns jmp mov add push push inc (bad) shll idivb cmp and ds arpl std fcomps jno loop and (bad) into or cltd test insb loop ds mov fcmovnu xor jmp hlt cmp js test imul out cmc insl ret aaa pop fsubl add lcall (bad) repz dec stos xchg adc jns pop sub jle cmp adc mov mov fstp outsl sbb call mov fcmovnbe or enter xor pop neg addr16 xchg lds pop lahf push and lret movsl popa in add mov mov and and fwait cmc stos and push ffree call dec seta or xchg xchg sub iret push lahf pop out push leave (bad) jnp jo,pt lock lock mov ja dec xor inc fldcw lea jnp add and iret popa jg scas mov cs cmp xchg scas sub sbb xchg push push test and adcb add dec add inc xchg js sbb sbbl repnz push outsb xchg sti (bad) sbb cwtl int3 inc jns bound (bad) repz xor mov sub lds mov (bad) cmp add testb push fldl xor mov mov pusha xchg mov jmp jb mov adc mov pop push hlt aad or mov pushf xchg xor enter sub jmp stos adc ficompl pop xchg and pusha cmp jns je out and int out repz mov mov or mov outsb mov clc xchg pusha in sbb mov mov jo out movsl (bad) dec pop ds (bad) call out lea je cmp int3 ljmp aas test inc clc cmp dec cs ds and seta dec test fldenv mov push xor (bad) ss mov movsb (bad) adc loope inc jb int pop inc push movsl les bound xchg mov cmpsb icebp lock insl sbb lret mov mov out je cmp ljmp rcl addr16 das or add rolb hlt sbb lods les sub sbb add pop jge xor jns bound jecxz ret data16 xor pop cli push sub movsl cmp or lcall fucomip inc cmp mov ja je (bad) xor pusha push push add xor inc fsubrp sbb and mov push mov jno mull inc loop mov stc fs jns push into pop xchg fisub in mov scas imul aaa sub and inc (bad) sub (bad) pop clc fwait ret cmp outsb cmp sub sbb or lea out (bad) test push aas sti jle aad int outsl movsb add mov jbe inc scas and dec dec dec mov insl push in cmp or and pop cld and and xchg iret add outsb cmc bound inc inc mov or in jne jnp sub or inc bound ljmp adc xchg ret xlat in repz push sti fsub (bad) sub pop test loop (bad) (bad) dec dec jmp (bad) aam aam loope mov dec mov mov push je and push inc loopne add and or dec add movsb lds repz ret stos or ljmp insl mov mov adc jecxz adc push subl wbinvd lret aad enter pop arpl loope lods inc mov bound iret outsb xor divb lcall outsl gs xor push xchg dec test adc faddp mov cmpsl test add push dec mov mov push clc ds lock pop pop xor push (bad) or mov lods (bad) aas scas (bad) dec shrl mov mov insb jp xor xchg pop pop call pop stos sub xchg mov stos lret (bad) test cmp push mov mov or adc popa sbb out cwtl jle js push xchg es cmpsb mov dec add push jmp mov sub inc sbb jecxz push mov dec mov ljmp and dec insl sbb aam add movsl cmp (bad) not fs xchg jge pop pop mov cld xlat sub pop dec sbb or fldl lcall push add idivb ljmp mov add out push test adc cmpsb pop mov cwtl dec pop jecxz or sub or mov outsb or (bad) popa stos xor cmp push push jo mov and dec xor mov fildl push jb insb ret test jle imul lea mov or push enter xchg lret pop cli sbbl out test pop jge (bad) jecxz,pn lcall imul push mov xchg dec leave push lds cmp lods jne out leave jl add insb jmp mov jle pop jge mov push lret xchg rorb pusha add sbb mov pop fldcw adc fisttp pushf sub stos or dec inc movsb and movsb daa xchg mov shr mov pop fmuls xchg xchg popa add mov adc dec add mov lods clc cmp mov cmp aad in or sbb stos add mov test out ljmp pop xchg cmp jg jmp adc dec mov aam xchg pop dec lds push xchg push insl arpl lds and inc jg mov leave add mov xor and arpl xchg (bad) cs pop imul pop mov cmpsl imul (bad) sbb and std mov mov movsl dec mov mov in shll mov cld mov lds cmpsl mov fistp sub push sbb daa bts pop (bad) std ror call (bad) jge vaddsd pop pusha cld xor push jmp mov mov (bad) inc mov mov mov je dec gs incb xorb cwtl shrl sub in or and mov (bad) jns fsubs mov push jno lock lret leave jb pop xor addr16 aad adc mov iret sbb mov xor popf add dec lods and imul cmc inc adc mov add jle ljmp ret mov dec push movsb in cmpsl sbb (bad) jle pop sub pop fwait movsb sbb cmpsb jle add xor movsl cmp (bad) jb fs jno aad sbb movsl mov (bad) pushf cmovbe rcll in cmpsb mov call gs dec mov xchg lahf push lret lds dec mov mov and nop pop mov lcall mov pop or adc mov pop icebp or sahf movl cmp mov mov adc pop imul push insl xor add jg popf shrb iret dec imul aaa push dec int3 lret mov adc idivb stos mov xchg icebp out jp adc cltd lret xor mov jge int jnp clc or rcr sbb adc lret aam mov (bad) into pop inc outsb (bad) mov loop push jnp pop adc push jae ja int3 and dec or push jb mov fcomp dec push mov repz fsubl icebp sahf cmp leave and test (bad) enter jl jnp jnp fnstsw or add mov icebp in scas or scas jl nop test fistp lds jne cmp xchg push sti pop and mov push jo aam add xchg es cltd push sbb into fwait xchg add popa dec cmp out jmp jp xchg gs es jae rcr mov sbb lds mov fiadd cwtl mov (bad) cmp ss cltd inc sti hlt daa data16 jecxz cld and shrl lods pop dec lods andl adc movsb mov push cs push mov sub xchg xchg sub (bad) push hlt dec scas mov pusha movsl push imul dec jns push outsl push fidivl mov or mov jb xchg insb push pusha add sub mov int3 addr16 test jno jo test mov jne pop bound jbe (bad) pushf jle sarl out rolb adc mov xchg pop test loop sbb adc hlt movsl dec jecxz subl adc in andl lock pop jbe aad dec xor stos loop pop xchg test or mov sbb in push mov in and and push int3 mov fisttpll out push push dec nop and ss xor push sub jae aad mov (bad) sahf fs add push mov lods xchg pusha pushf (bad) divl movsl loop jns sbb xchg das ss and xchg mov leave scas dec dec and or imul xchg ja sub mov test or xor add test out pop lret orl loop test movsb mov inc adc xor clc outsl fldenv pusha test dec mov cli (bad) lret mov adc sbb pop mov dec mov sub lahf adc and mov sub inc (bad) into sub rcll jmp xchg ss mov pop jb fsubr mov push inc jbe fnclex mov jecxz fisubrl inc or adc fsubp inc inc stc in shlb cmp fmull mov out nop inc sbb jne insl enter cvtdq2ps aaa into pusha xchg lods movsl mov inc mov jae iret (bad) cmp push mov lret adc sbb ljmp dec aam cs aaa mov cwtl (bad) mov fs xor leave mov jbe jmp stos or daa cmp (bad) subl pop mov lock mov icebp cmp cwtl imul sbb pop jl adc inc inc inc and cmp call stc in xlat xchg out adc sbb or jmp cmp in sub sbb push add adc dec rorb out mov aas dec lahf rorl and jge das addr16 sbb xor xchg mov cmp hlt xchg mov inc insb lods sub cs stos (bad) cmpsl int aas bound or into (bad) loop lods inc cmp cmp jp jb inc sub and jecxz aam popa xchg stc cs movsl pop hlt push in push push xchg inc dec inc sbb out orl pop pusha jle mov jg push jbe out xor adc cmp outsb pop scas push cmp aaa ljmp dec xlat adcl imul loopne mov adc scas cmp je fs cli sub ljmp in push push fnstsw mov sbb push mov aas sbb movl icebp test (bad) lret fdivrl mov xorl pop adc pop lret mov sub pop daa mov out mov test (bad) mov nopl (bad) int out or push loopne cmp sbb add jl jle les fdivr pop shlb sub cmp stos loopne or cmc in fsubrp or or orl add lret and mov fwait test into mov ljmp and push add dec xlat jge xchg aas inc scas les mov testb test (bad) mov xor int3 mov (bad) (bad) fiaddl mov mov bound mov lds pop sbb mov lret push insb xchg fdivrp shrb cmpsb js mov (bad) push mov inc int xlat push pop lods mov mov cltd subb push stos mov inc inc fsub sub adc pop xchg pop in in test sti jp mov adc xchg inc scas sahf xor ljmp cmpsl mov jmp or adc icebp imul das dec es mull inc fcmovu ss jmp stos add jecxz je xor pop addr16 mov jmp insl inc lea fcmovnu pop pop jbe rorb fcoml lock dec push pop aas fstps stc (bad) out mov cmc and jl mov dec inc inc jb cmp cmpl inc or test fisubrl cmp or or jp ds lds adc xor and cmp jne ds outsb pmaddwd (bad) not rorb jg cmp cli cmpsl mov outsl sbb (bad) fdivl outsb in push aam (bad) das inc inc xchg and sti xchg ja (bad) push out mov or mov movsl add mov inc (bad) push imul into lret fsqrt mov xchg jle nop add cmp test xorl mov xor or idivb xor jo add jle push ss lret icebp push stos cmpl int lahf push mov xor or (bad) sar inc jg popf dec sbb fs jnp push fcmovnu in fwait dec push dec (bad) xor sub sub dec adc in mov and adc insl js ret mov xchg popf jno rcr in cli push jg mov cld mov mov test ljmp and iret push in mov pop repnz cmp rcrl push cmp xchg ret das cmpsl xor add mov shlb fsubl xor dec push lods dec lock mov jbe add test cmp pop adc fnop or push mov mov leave cmc jg idivb pushf push push xchg push mov xchg call leave loopne sub lret mov (bad) out push ds fwait add imul sub add bound mov mov pop repz mov sub adcb mov mov sub jb xchg push jae std ret xchg pop push leave adc cli push dec push sbb push in add pop test int cmp leave pushf scas dec push or int3 xor xchg adc arpl (bad) mov mov ljmp pop xchg (bad) mov mov mov negl inc pop lahf sbb mov dec or shll into push ds sarb adc insl sti adc or lret inc lock fsubl cmp addr16 mov out mov mov or jbe cmp sbb and xor add push cli or pop pop mov dec stos dec jae aam aaa sub push mov lret pop int3 or jnp into dec adc punpckhdq cli scas lea cmp jnp jbe test lret dec sub ret push pushf sahf (bad) mov inc jecxz mov cmp push xchg mov xchg (bad) cli and inc cmp xor mov (bad) (bad) icebp lcall loope dec scas repz in (bad) pop mov inc push repz add ret popf or fsubs xor (bad) les (bad) repnz imul data16 and sub iret scas push mov outsl pop mov sbb aad iret (bad) jg pop and jne insb sbb xor sbb fisttpl push push ja stc jnp and push push pusha jne ss inc movsl pushf stos fs push out fs enter aaa jmp data16 or push and pop jne loop sbb jmp xchg je jne sti aam inc mov pop cmpsl pop insb lds add mov (bad) fcompl jle sub cmp sub shrd fsts lods dec fsubrs pop adc jecxz inc out jne or mov mov sbb movsb (bad) and (bad) pushf (bad) test push mov and mov fistpll les and cwtl add popf sub inc inc xchg mov push jo lea mov in xchg inc mov repz push pop mov cmp pop movsl xchg sbb push add xchg push inc pop movsl sbb aam outsl popf aam cmpsl call and adc pop std outsb ret push cli xchg mov fcmovnb add cmp lods xchg ret mov push sub das (bad) inc sbb out out pop (bad) leave add mov lahf add call push push sub adc push cmp push (bad) mov xor lcall or shr das outsl cmp cmp jl jp xchg repz jg call psrlw scas mov push fidivrl or ljmp loopne or stos cmp inc or lret lods fisttp xor adc inc imul lock fstl mov dec adc call xchg in add int add shrl cwtl pop sarb push push test add mov dec mov xor add xchg movsb sbb xchg add inc loop dec or pop adc les inc cmpl stos int es iret mov and pop roll dec xor pop aas enter repnz xchg (bad) (bad) xchg aaa cld mov or in dec jnp push and lahf popa and lret inc ret mov adc lret push pop call loop push test mov mov mov mov out or sbb cmpsb add outsl xor jge jg jno push test (bad) insl jns aas pop in inc jno mov xor dec adc out stos lock inc inc or or shrl or pinsrw les (bad) outsb loopne push push xchg cmc cmpsb pop sub xchg jecxz jg sbb lahf push out insl ds shrl jb mov mov fstpt or and pop push fistpll adcl test jp sbb punpckldq cwtl sbb xchg jp jecxz hlt dec mov pop loop mov cmpsl sti imul pop js enter push insb sub jbe xchg xor mov aad gs inc test sbb inc aad js imul adc jae add test adc popa inc sub or dec push int3 xchg cld pop or ja mov call xor sbb in out add push aaa js dec xchg sarb fwait and and bound ja push xchg xor push fcmovnbe insb dec xchg daa and imul sub stos nop jae and daa pop dec or sbb fidivl addl subl cwtl jae ja ja nop out (bad) shrb sub jmp mov lds and daa mov cmp xchg inc xlat out cli adc into or insl xor ljmp addl xor mov imul repnz mov ja scas (bad) mov fnsave pop dec movb cmc out or adc add (bad) jg pop fscale xor pushf test call xchg lds mov xor jnp add pop stc ja dec sub or mov les scas hlt dec adc push lret mov outsb jb lods mov xchg jecxz sarb push (bad) into jmp ss cli push call xor mov call push mov jae cld faddl lret stos ss rcr adc push rcll xor sub mov ds pop out push mov push inc sbb fisubr cmc inc shrl (bad) mov jb xrelease cmp cmpsb push push test or addr16 ljmp rcrl nop mov xchg psubb jno ja sbb sub add and or mov loopne stos loope xor pop imul (bad) icebp pusha inc jp pop dec xlat (bad) mov scas add xchg jecxz ret popa or test nop sbbl (bad) enter sbb lret scas out jg repnz sub jg,pn and hlt and es popf dec or pop jg mov out ja (bad) and mov xchg pop enter inc data16 xor dec mov imul xlat dec leave mov (bad) stc xchg loope (bad) cmc sbb addb js mov mov ss sub mov into mov in jl lret jp gs xor in xor push jnp mov test fbld xorb movsl negb xchg mov movsl enter cli outsb aad lret jbe sbb vpinsrw outsl outsl sub push and sub test test int clc xchg push insb fmul or data16 pop mov xchg pop fldenv enter nop (bad) xchg jg cmp mov insl dec push rcl push loopne push in sbb js leave es xchg dec sahf call movl nop (bad) mov dec add adc inc xor sub mov or xlat das test or les fs mov mov xchg arpl or (bad) loopne pop mov adc cltd outsl xchg ljmp nop sub sub mov push cmpsl pop jnp dec and add (bad) adc jb popa sub cmp mov lea repz jno (bad) mov xchg push add shrb out arpl jnp lcall minps inc outsl pusha jnp pushf aad mov adc mov out hlt lods out lahf mov fistpll pop sbb add xchg xor (bad) mov add (bad) add popa cwtl je or mov mov in sub cmp aam mov mov pop push lahf pop cmc xchg xor mov cmc and mov mov xor aam push cmp inc in adc ja sub cwtl loop cmpb aaa mov fwait insl test mov cs mov lret insl sbb divl in jecxz or dec arpl daa pop add ljmp jno loop sbb mov cld adc out cmc jmp cmp cmpsb (bad) xor sub je mov jne pop int3 loopne hlt adc adc lahf sub out orl loope adc sub cmp lahf and mov adc mov lret test rclb push movsl (bad) cmp inc in (bad) mov ljmp mov xor mov pushf adc jmp cmp jne test jl popf repz loop mov lret (bad) jmp out or mov cmp fnstsw out xorl in inc adc dec xor cmp lock and shrb dec xchg jle out shrb push or cmp adc movsb (bad) addr16 insl push mov pop jbe pusha fcompl rorl add mov mov xor xor fsubl outsb pop cmc out xor pop lods push nop pop fsubrp jle rcl jp cmpsb into call cli add popa enter jbe clc cwtl add push dec int inc push je pop inc xchg sbb cmp mov mov cs test cmpsl sbb cmp or or mov add push das inc pop add sarb xchg sahf dec mov jecxz out xchg stos xchg int3 addr16 out ljmp (bad) imul mov mov lods inc call or push sub data16 push mov mov out inc cmp push push (bad) jmp xchg clc xor pmovmskb mov ss sbb pusha std test sbb push sahf movzbl test jl dec in outsl sahf cltd dec fstl pop mov fcompl pop stos dec xor sbb mov out (bad) pop dec mov sub push mov lods test cld lods inc test popf jo notl dec call mov jno iret jge cmpsl es stos outsl gs adc jns add pop pusha out or mov or out mov dec and dec (bad) mov sub cmpsl xchg xor (bad) mov sub jb daa mov add and jnp leave lahf pusha mov sti sub rcll pop push jno (bad) lret mov addr16 mov cmpsb fwait push fmul ja sbb ljmp insl mov (bad) cwtl repz mov push jle (bad) mov xchg mov leave jg lds xor xchg aam call mov ss mov addr16 jbe icebp int3 pop cmp dec mov ljmp pop mov inc cmp xchg inc pop dec cmpsl adc (bad) ja (bad) lods or inc outsl push stc imul adc xchg orl iret cmc lcall sahf add out adc jns (bad) xlat aam mov fnstsw jae es mov xchg data16 and les lret pop movsl enter cs into sbb jp xchg ss ret in cmp test lds ficomp shll inc mov aad std pop test leave push dec bnd jne and add xor sar jge stos and imul xchg test lds sub imul inc sub mov mov loope cmpl push sti ljmp sbb xor cld or lods repz sub cli test and push jnp pop mov (bad) jns out imul inc mov fwait addr16 test mov cmpsb and and sbb (bad) xor adc pushf aad fsubl or cs test lret cld jecxz stos lret pop inc push inc call lahf mov (bad) hlt sarl int dec or imull pop inc pusha addr16 add fcompl add jle ret cld in push push call mov sbb cmpsb test pushf lock sbb nop push sub or (bad) rorb (bad) scas pop pop (bad) xor ret lods mov in gs xchg fistl pusha push or jl jmp das add or mov ja sbb pop into cmc (bad) mov js and fdivrl inc lods mov xchg ja inc out (bad) out enter dec xor or insb enter js sub inc test int3 push insb cld pop mov fdivr xor adc ffreep rcll imul pop sub add push jmp cmp sbb cmp insl xor popf xchg loopne orl mov xchg scas movsl add sahf scas aam sbb (bad) cmp rcrb adc sbb sub into incl int3 cmp mov sub in fist push cwtl jle into pop ja (bad) mov test daa push cli shl jnp repnz in push inc and in ljmp stos seto push sbb mov dec jg cmp stos dec sbb inc cmpl lock in pop mov jg,pn push cltd data16 xchg out dec ret aam mov jne lahf mov imul pop fwait scas insl jmp adc lret ficoml dec jno mov rcl push imul pop sarb lret into mov push xchg mov sbb push popf incl les push scas es mov mov jbe pop js xchg gs mov scas cmc in sbb (bad) incb adc xchg (bad) jmp xchg es mov sub mov stc nop inc sahf clc and scas ja lods jae xlat dec inc push xor xor pusha push jle pop int xchg andl adc pop fldt imul xchg or xchg dec dec (bad) arpl dec cli xchg pop push aas sti pop jge or sbb xlat in mov out fldt ss and cmpsl cmp dec jecxz mov push and and mov pop jae aaa in sub inc int push out jge and ret int dec dec and sbb adc fwait mov mov leave rolb in pop xchg adc and loop gs aam sbb andl sbb out sub data16 cli cmp sbb negb push ret pushf pop and jge cmp lock mov mov hlt jge push push sarl adc aaa add and mov mov sub fdivr jae mov lcall jmp dec cli cmc add loope and fdivr and incb sub inc sbb sarl mov inc pop push (bad) aad inc xchg shl inc cs mov ss lret push stos pop lahf sub lea movsbl jge xchg in shlb hlt jle sbb mov iret (bad) push call std jp push mov fwait sub shl inc das ret fcmovbe inc lret (bad) cmpsl and (bad) int3 sub stos sbb pop leave outsl addr16 xor or mov mov add mov mov paddb inc add das cmp fisttp icebp imul imul loopne push insb or mov push pusha ret lahf mov dec xorb sub cwtl jl xchg (bad) cmp adc push cmp ja jno enter adc mov inc lret mov pop pop lcall push (bad) movsb push fcomps mov and addl xor aas add jp jp cltd stos out mov mov insb inc stc int cmp in insb es xchg jo mov adcl (bad) jle pop hlt (bad) outsb lret add int3 pop and loopne cmc xchg adc cmp push mov jne shlb addr16 es pop xchg idivb push fstl cltd leave icebp stc push dec dec dec sbb std sub jne mov jae insl and or jle loop and lcall sbb test cwtl push jo rcr pop add cmpsb pop xor xor cmpsl pop pusha sbb roll xchg rolb cltd sbb divb test pop add popf jp sub jp mov mov aad dec cmpsl fist icebp adc aad ret jmp stos out and add mov add out test std ficom jne pop call icebp aas fmulp test jge and out jb cld sbb adc dec pop mov push pop ljmp cvtps2pd mov iret and fiaddl ret and jns xchg imul or xor adcl mov lods mov mov test cmp inc (bad) xchg fisttp inc (bad) roll dec cmp arpl (bad) out fdivrp xor fsubrs adc stos pop pop rcr jae jae sbb test (bad) jns outsl popf cmp fucomip leave shrl push push inc cld aad mov inc (bad) into jmp sub jl cmp ds push cmp add imul lret fcoml sub xor mov sbb and jno xchg (bad) or jns push pop outsl mov mov push mov cmp dec movswl add repnz fisttpl and mov (bad) repnz mov int xor xchg pushf je (bad) mov imul jae out popf fcmovne aas mov sub repnz pop add inc rol push (bad) mov fist cmp fmull inc fs mov call outsb ficompl cmp aas sbb lods out ja xor mov jl mov lret sub cmp (bad) add cmp scas test cli repnz dec lahf pop insl inc jnp push adc divb and in repz xchg (bad) test add sub lock loope je and pop xchg mov jecxz push pop roll bound dec dec call dec fwait push insb mov and mov pop pusha (bad) dec dec mov lods xor or lods rcr mov pop dec mov cs add leave test mov xor stos cmp cmp cltd jns push test lret jns movsl inc sub (bad) dec add lahf sub mov xor jmp out dec out cmpsb repnz (bad) call pusha in sbb adc fstps outsl jle das cmp daa ljmp xor sarl fidiv xchg sbb sub xchg xchg jne or xchg mov dec add push nop or out cmp xchg sub jle imulb jno hlt mov lds daa sarl cmp or and jne dec sbb fdivrl add stc pushf sbb jb xorl push fmull sar jmp iret in imulb push jg push (bad) xor outsl ret enter dec xchg lret push or cmpsl addr16 aaa sub loop or ret lods enter add sbb ljmp repz mov outsl inc jecxz and pop shl popa mov push xor jl sub enter sarl push leave aad pop shrl mov jne leave or cld mov dec out mov movsl dec aas mov and aas rorb mov mov sub out push (bad) aam jno out clc call (bad) fsubrl aas sahf or push mov out iret pop sub dec stos shll dec xchg clc mov adc xchg xchg cmp clc cwtl js pop das push mov xor negl adc lods cmc jno dec gs rcrl jne or stos jns mov les pop cli (bad) loop jb cmc inc mov jge pop jbe pop jo mov (bad) mov mov dec out fmulp sbb jp cmp sbb adc pop lea fldl sbb push mov inc mov fcmovne push mov ficoml sub clc ljmp test ret leave push mov mov mov pushl push repnz daa (bad) push ds fs pop mov and insb mov fcompl add ja xchg xchg sbb mov xor jmp jl xchg jb inc mov aaa fwait (bad) push bound jno xchg sbb or push cltd push mov xor mov mov je pop or shlb xchg sub mov ret ret ret cmp mov xor stc int jp les scas or sti mov push sbb inc ja add test mov lds aas pmulhw shrb rolb fbld lods mov push dec js int or mov and fist or jb cmp fisub rolb rorl (bad) jge mov lcall jg repnz push stc jno decb imul cmp mov insl mov nop sbb jl in lcall pop dec (bad) jge add or jbe mov outsl adc pop imul mov fdivr jbe push and sbb xor out mov pop ss pushf (bad) bound test jo int mov xorb add sti push mov ret loope sarb sub cmp aam int3 imull mov std pop dec sti fild cwtl pop mov mov adc push pop lret mov popf enter lret pushf jne mov push push pop or icebp mov ss mov fsts stos push outsb repnz hlt jae repnz xchg jmp imul inc cmp dec sbb push add xorl push xchg push sbb imul adc push pushf or (bad) nop mov adc into push sub daa lahf cltd scas cmp out lods jecxz xchg sti sti xchg and mov add cs xor scas mov or lret ja bound (bad) btc stos aas in pop cld mov mov pop (bad) pop add adc dec test scas lcall sub pop pop negl paddw jbe aas cltd dec lret scas or add inc notb mov cmp ficoml outsb bound ljmp lahf mov movsl push fisubl sti in popa stos lea test sub loope lods mov mov cmpsl jo mov in (bad) jbe sbb pop inc mov jo mov add pop loope fs iret push adcl jno andl adc cmp cld jl inc ret les int cmp stos xor sbb aam jge sbbl sbb (bad) fidivrl xchg sbb dec sub inc inc xchg (bad) gs xlat icebp sub or sbb leave dec jecxz add xchg xor mov mov inc jb clc rcrb or sub stos adc test ljmp add cmp and cmp iret pop pop in fmulp adc std out lahf add cmp cmpsl mov (bad) (bad) cli inc or out mov mov adc leave scas pop lods lea lret sub in push jmp cs enter insb int3 adc ljmp jmp ds mov pushl cld (bad) xlat insb (bad) stos (bad) imul arpl pusha jae xor outsl fcmovne inc xchg jmp in push les lock fidiv adc (bad) sub sbb test lds (bad) mov fnsave cmp in (bad) sub push xchg mov jae push (bad) in jne enter test inc ds inc out stc loope mov cmp les les adc add mov insl aaa jmp jl pusha jno and xor dec test and push loopne fldl mov sbb ret (bad) mov jg mov inc gs shlb adc xor cs js and or popa jne int dec lret or inc jp cli add or cwtl mov pushf sbb mov not std cmp aaa scas out cwtl xchg adc mov pop or stc notb jmp addr16 xchg les pop mov jle or push inc cmp test test mov jns inc out test push out pop xchg call nop pop dec out sbbb cmp addr16 int jecxz das jae pusha mov popf lock lret add add add xchg scas ror cmp std and es lea jae mov out mov pop movsb pop iret inc xor les arpl cli sub lahf in mov pusha adc repnz and mov lock decb push lods cmp xlat subb jp dec nop repnz dec dec pop ss call in sahf jnp sbb das imul (bad) push scas mov mov xor dec add jbe fistp enter repz mov aaa and pop test xor cwtl iret push data16 mov mov aas (bad) fcom test xor (bad) sub imulb rolb inc fisttpl cmpsl lcall lret adc outsl mov adc bound lret test mov jnp mov test ficoml add pop jmp adc mov popl sub in testl pop ror add jnp insb fisubr push add push pop push push adc xchg stos nop lahf ret mov dec xor lods movsl pop lea popf xchg add ret cld add inc jp mov das pop js xor pop cli pop pop inc fcoms push add mov outsb aas mov lea dec xor (bad) out cmp sbb sub ds mov jg mov sbb adc out mov cltd or imulb xor jb cmp loope add add pop xchg loopne call test xchg shrb adc stos mov pop out fldt arpl jg outsb inc imul pop dec xchg cmpsb mov jb push daa rolb mul sub pop lods mov pop (bad) cmp xchg outsl xor sbb xchg inc std loop addr16 movsl div daa adc xor xor dec cmpsl dec pop ret imul add mov push test add xchg mov mov pop dec scas xchg xor repz add inc ficoml lea std sub movsb jl hlt push mov pushl scas ljmp pushf cmpsb out mov jno xor or lods jg jg mov ds adc sarl movb jne inc mov pop mov cmp add jne add cmp icebp les loopne movl xor mov add mov ja inc inc (bad) loope je pop push pop push fstpt xorl dec (bad) pop jns and mov adc mov mov mov sbb mov or and insl mov insl cli insl nop (bad) jecxz dec xor mov (bad) cmp inc lcall xor add and cmc sbb movsb pop cmp dec add iret inc push xor mov in adc push fist fcmovne push adc dec dec imul (bad) outsl mov push icebp in jne test add adc xorb js hlt inc lods cmpsl rol out lods fildl rorb xor dec sub fcompl push data16 lods (bad) in test jp push dec push movsl adc adc pop rclb test popa xor push dec cmp ret lahf imul dec cmpsl mov inc xchg sbb pop push mov lcall xchg das cmp pop adc and pop cmpsl mov lds insb jnp outsl mov inc sbb sub in int3 mov push (bad) sti fdivrl addr16 jno in and cmp fsubrp and loop cwtl fcompl mov sbb add adc add pop dec cs test inc ljmp cmp xchg hlt jae mov jecxz adc or mov das mov mov mov push mov ret fist inc sub jp mov outsb lea fimul test pop mov jns push sbbl adc jge and add mov jb mov xchg adc pop sti xor iret popa outsb rclb mov inc (bad) jecxz jns test lock push push lcall neg adc imul fnstenv lret stc push pusha outsb pop js pop or inc popa sbb addl mul xlat fdivp sbb fstpt imul lret jp cmp mov movl nop into pop push lds pop pop pop enter or pop adc push push mov into movsl out mov sbb xchg push or jge push in fbld popa xor or xor mov lea mov push cmp lods stc dec out adc or imul fisub test cli or mov xchg test push enter popa jp sti dec inc dec fmul and cmp (bad) jae adc xor or cmc fisubrl mov push cmp hlt outsl popa jb xor push aaa push mov lret pop and push push cmp ret dec subl outsb sbb mov sahf and xorl cmp jae sbbb outsb cmp mov popa and test outsl xor sbb mov xor pop cmp mov mov or pushf shl mov cmpsb mov int3 lret push in xlat std lahf int3 mov mov jae popf jl pop sbb mov scas lds jnp jo push add jbe data16 (bad) mov xchg gs ffree call cwtl or pop sub push pop jnp cmp test cmpsb inc xchg mov imul cmp scas dec xchg pop fcoml jnp (bad) es add mov or in pop and push or pusha xchg inc dec rclb fs push jp sahf sub adc insb or insb jmp stos mov pusha movsb pavgw sbbl adc pop (bad) lret fildl daa loop in pop popf jmp movsb xchg xchg xchg leave jbe outsb pop test sub mov pop mov addr16 scas mov xlat add mov and leave push cmp adc gs xlat dec lcall scas cld je sub dec orb mov inc cmp (bad) loope lock cmp lret and cmp aas cld adc cltd mov addr16 aaa orl pop into loop xchg insl test cmp arpl jl pop lahf jp cmpsb cmpsb pop or jb data16 rorl ficomp lea sbb inc outsb dec sub mov rorl inc mov lcall and and xchg rcr add sbb sbb mov cltd clc mov xor mov xchg je out push aad (bad) stos xor cmp adc int add sub inc ret pop push fyl2x ja bound fiaddl cwtl das ret (bad) and mov insb pop adc ja mov outsb cmp xchg loopne fnstsw shlb lcall mov sub iret push lock mov aas outsb inc pop (bad) xor dec sub sub mov pop mov cmp and sub mov lds faddl movsl outsl repz fcomps mov dec and (bad) lret jbe mov enter adc ss rorb nop xchg (bad) mov popf jle stos sti xor (bad) mov fcompl sbb lods test pop jnp cltd test and mov dec and pop pop add clc popf xchg testl mov in or lcall fwait jne push mov hlt cmpsl and inc nop mov jno out testb push mov xlat xchg push pop jb mov add or out jle imul nop repz mov idivb inc jecxz imul pop mov adc aam lds sarb cmp cltd out cli insb (bad) sbb cmpsl xchg insb sarb pop sbb mov and jns (bad) movsb aad lods ljmp sub jp xlat je mov inc mov mov fs fist ljmp jle push mov push add mov fwait movsl mov dec xchg mov pop mov mov mov mov mov mov clc das nop xchg mov adcb sub xor cmp in mov add insl cmpsl adc jl jo in aaa fcomp mov dec rcrl adc hlt bound lods jns sub add or daa aas push mov adc xor sub (bad) shr dec mov jle cmpsb ja jg mov bound fildl mov (bad) push xchg outsb jp inc stos mov inc ficompl jnp stc and and fnstsw xchg cltd in and popa jne sti repnz dec pop jg xor or (bad) or out inc and xchg sbb or pop sub cmp mov add jecxz test adc stc cmpsl jnp dec ss adc lods test stc or xor cld pop icebp push (bad) aaa add clc jle dec push push inc jmp jb mov dec loope adc mov mov lds cwtl mov inc out dec pop mov lret adc repnz outsb movsl sti push pop cmp dec fstps test mov incb shrl fs cmp push add adc add cmp ret xchg cmp pop in mov inc cmpsb ljmp mov lds andb imulb mov mov inc out push int cld pop jecxz test outsl je lret pop xchg hlt adc outsl loop cltd mov add (bad) in xchg pusha jle in cmpsl mov mov scas xchg jge push dec scas ja adc mov inc jns add add mov in pop sub cs xchg mov push in sbb mov inc add adc int3 ret in jo (bad) push gs pushf or enter push cmp fidivl push xchg aam es pop cltd xchg (bad) (bad) ja dec push into or mov rcrl jnp inc dec (bad) push inc xor push in pop fwait inc mov xor add test mov popl fidivr pop push push fistpl fildll mov mov push sbb les xor in loope sub sbb xchg in xor in pcmpeqb jecxz push cli inc push ljmp pop shrb dec push inc call aaa xor (bad) mull push push lcall mov out cmp pop addl pop xchg imull dec lahf mov fldenv loop add fnstcw adc lods pushf inc mov iret es icebp mov adc cmp fs andnps scas pop cmpsb gs push lcall cmp icebp cmp mov pop hlt (bad) fist imul call inc addr16 addr16 int3 mov stos cmp pop inc jg rcll adc dec insb idivb iret inc outsl jnp adc hlt xor inc fdivl pop sarl xor push jbe imul mov mov inc addb xchg or lock xor jmp add fsubrs inc adc adc bound ja out fwait movb jns adc push cmp imul call imulb or lock enter les pop sub xchg inc int es push xor cltd cmpsl fs dec adc pusha fld mov add shrl out test setle outsl dec (bad) mov ljmp icebp (bad) pop pop push in loop stc adc rclb popf inc or addr16 in mov inc jb fildl xor pushf ja dec cmp addr16 cmc xlat leave imul sti mov stc add icebp add insb lret sarl adc aaa xlat push push xchg shrb mov jbe adc and loop loope mov pop repz mov jo inc mov mov cmp lock jp scas imul and pop or sbb dec sub pop push fwait in xor imul and stos mov cmp enter mov inc (bad) stc loopne pop mov ss cmp mov and pusha in pop fcomi ficompl sub adc loop mov shrb xor jmp jno stc pop sbb rorl adc and sarb je pop in or daa in cmpsl push add xchg sub pop cmp pop pop cmpsb mov add sub adc dec bound sbb adc xorl adc pop xchg inc pop mov or lds movsb xchg mov inc gs popf and mov inc adc lahf xorl lea mov out mov lods aad sub rolb mov xor push add jmp push add add insb pop pusha andl and das or loopne xchg mov lds (bad) ficomp pop hlt fadd mov nop xchg (bad) out (bad) mov cmp inc mov lahf fcomps jp (bad) pop lahf mov jmp pop add sbb scas xchg gs sarb pushf jp sbb inc loopne push pop mov pop stos ljmp repz cmp fimul (bad) sbbl hlt sbbb dec jno push jns jbe in test and jl jns mov mov hlt outsl mov cwtl orl je out push in bound fsubl ss sub cmp repz push cmp std hlt in ret stos icebp aam mov mov call jae,pt cmpsb sbbl movsb lcall mov dec sub xchg je jge pop loopne es jae mov pop push ret add fist xor jecxz ljmp repnz popa lock lea sub (bad) enter mov push out xchg int pop leave ret js es (bad) xor rol loope push sub cltd arpl dec enter mov mov lret fistpll xchg mov into adc sbb imul adc shrl pop data16 ret jp cwtl sub out xchg subl fild mov mov cld pop stc (bad) movsb dec arpl or push pop push daa rcrl test cmp pop adc ljmp mov repnz pop ss lods test sbbl push mov adc pop jle dec and iret dec xor jns pop mov mov xchg sbb in repz insl aam jae into sbb xchg pop psubd mov mov stc je clc jmp andl out cmp push inc dec cmp lcall jp fstpl js sub dec jle bound repz outsb mov mov mov mov add xor neg push imul adc cmp pop clc fs sbb inc cmp push mov xchg scas sbb and dec icebp jno scas push dec xor pop das fdivrl xchg fs lea mov cmp rorb inc sub and ret push pop into lret in into arpl jb mov daa scas mov fbstp cmp or push daa in jg (bad) cmpsb xor sub xor sub arpl ret mov orb and js sub (bad) enter cs sahf setae dec and out test in aas push out pusha mov neg vmwrite mov lea movsb mov cmp ja pop into fwait sbb mov rorb or out insl ret inc inc sub iret pop pop xchg stos loopne popf or mov pop mov mov aaa mov sub xor adc bound loope aaa mov frstor popa insb sub movsb sub xchg ds add aad shl dec jbe pusha jb xor je lock add sub push (bad) out ret jo adc pop fnstenvs int3 pop cmpsl pop lret ret (bad) dec in clc inc fucomp push mov pop adc popa nop adc adc mov pop mov adc xor rcll je inc iret test mov sub or pop (bad) mov dec popa mov dec mov leave lds xchg nop xchg andl aam xchg addl mov aad movsb lcall mov nop in jp push push or fwait in xchg mov sub pop adc xor cmpsl loopne icebp mov fcoml or sbb or mov adc mov sub jne sbb ret stc js mov xorl xchg push clc mov adc pop adc es iret sahf je orl rcl ret pop inc mov xchg pop push push add les int3 mov idivl lret (bad) mov (bad) (bad) adc sti mov pop fwait mov pusha mov push (bad) iret inc imul outsb out or (bad) (bad) dec mov fisttpl push or push push and pop outsb adc movsb and add sahf mov test fsubrl (bad) jb in jae inc out jo mov test sub sbb mov inc (bad) stc xchg jecxz sbb sbb mov lea jno stos adc aaa mov xchg mov stos das push cltd fimull js mov (bad) xor movsb xchg push push mov push fwait or push push inc dec cmp or adc or pusha pop rolb pop popa mov scas mov movsl shrb scas mov pop sbb lods jo sbb test and repz mov pop sbb out insl inc or mov (bad) mov adc rcll pop sub out adc inc aas mov pop or mov repnz scas lcall out sbb xorl lods orb pop jo sarb iret (bad) pop lock push fdivs in sti clc test lcall ret xchg test or pop xor pop sub jne (bad) scas pop inc sbb popa (bad) cmc push mov cmp push cmp xchg ret dec pop aad fidiv xor xlat shlb pop pop cmp in jno xor push inc in mov mov adc jno and not js arpl (bad) cmc cli add cmp fisttp popf sub mov jmp cs xchg add lret xor mov push rcl loop cwtl nop jg push add xor xchg stc jmp jg add and xchg mov pusha loope ficomp sti xchg fnstsw jle in push stos mov ret inc or data16 sti aas frstor and mov stos xor pop adc mov xorb mov fmull (bad) fistp js xor add sub div jmp aam jae and xchg pop std test xchg sbb cltd lcall outsl add push roll and mov sub sub mov shll cmp mov test aam fstpl sub mov cwtl dec add dec outsb inc mov icebp daa xlat ret mov les mov jno xchg ss jecxz dec jns add xchg bound je and dec inc mov mov mov (bad) (bad) in popf arpl or mov scas int3 cmp cmpsb cmp adcl jbe lahf add fnstcw push (bad) push jmp push or ret jnp adc lods add push rol sub in aam stos add cs daa test sbb add and out push cmc fdivs lahf pop ljmp xor mov sub adc xchg push mov mov ret and lahf mov lock mov movsb mov divl adc pop movsl scas push cs sbb call xchg mov fisubrl adc add mov repnz ret inc push sbb ret mov push jge mov xchg mov ja sbb insb add push mov imul pop adc in push mov (bad) jns xchg les sub (bad) inc or adc loopne out outsl cmpl or xchg es mov xor cmp sarl mov stos in push leave pop or jb sbb sbb jne das movsb xchg dec or movsl lret push sbb add cld popf jae ret mov addr16 dec cmp dec mov outsb mov mov mov jae inc pusha enter xchg fmull stos inc repnz jl cmp fild test fnsave (bad) outsb cmp mov fildl mov jnp orl in hlt in lock ds shrl orl inc xor les out inc pop cmp lcall pop sbb jne ret leave aas mov pmullw and mov lret jle std mov mov int3 xchg mov pop aad fimull lret dec push and movsl jb lret pop imul jmp (bad) pmulhw and pop mov in or movsl das jp movsl xchg pop mov jae sbb mov pop push testb mov push mov cmc inc outsl loop clc add xchg push (bad) movsb and (bad) insl xor test and inc or stos (bad) movsl cltd test stos jg adc jmp xchg xchg nop nop fisttpl sbbl jbe xchg add test pop mov ror push or or movsl inc cld fldenv test add je addr16 or les int3 scas mov pop push mov or sbb ret or fwait or (bad) adc mov fistp fistp ds sub loope mov add jne mov dec adc mov dec stos mov mov mov and sub sbb repnz leave mov inc hlt inc cmpsb and (bad) repz mov lea icebp mov inc ss push call adc cltd inc data16 xchg ds out push jge pop mov mov loopne fsubrs jge inc inc out add mov icebp jno dec mov stos and xor adc (bad) std aaa push mov pop leave les loopne push imul into aaa dec mov xlat xor mov mov adc add push adc dec popf pop (bad) jb fmuls popf leave cmpsl inc enter push cmp inc aad adc lods stos pop outsb mov das inc scas xchg pop sub es cmp push shrl and gs jbe mov popf mov loopne scas imul mov cmp adc clc int push insl jae lea loope (bad) roll inc cmp mov das mov adc addr16 xlat xor arpl lods shlb lahf divl xor xchg mov jmp daa cmp fwait cmpb les test leave sub xchg clc outsl mov scas add (bad) (bad) xor adc outsb (bad) mov scas xchg push and call adc xor popf push mov mov int3 loope (bad) pushf lret enter (bad) mov mov jmp insb mov cwtl aam push scas movsb jl aas call addr16 rorb mov push icebp cld sub mov mov (bad) ja sbb (bad) icebp data16 add dec addr16 mov adc (bad) popf aam add aam loope mov push or cli test jp sti mov test test or mov xor xchg int3 call xchg sub push fidivl xchg add mov js mov adc mov sbb fs add mov inc inc fldt xchg int3 inc adc loop cmp pop xlat mov orb pop out pop gs mov sbb and ja test movsl jno and sub in out aas cmp cwtl mov lret stos les cmpsb mov or (bad) shll mov dec xor dec jae test movups cld sub stos mov cs xchg xchg arpl out fdivrl stos (bad) or (bad) jo ja lock movsl and or or popf mov dec mov rcll int data16 or sbb cmp repz imul fyl2x popa add jge push dec scas sbbl insb test jne shll pop std xchg fcompl or pop adc popa sbb jg mov data16 lcall xchg xchg jnp mov sub in outsl imul outsl lret test popf fwait movsl push xor sub stc pop imul fildl mov daa mov in enter mov mov imul cld pop adc aam jmp out cltd push cmpsl std mov test or cli js mov cs dec hlt mov xchg negl pop jo ret in mov mov sbb sbb enter rorl or pop sti fcompp jg jmp mov daa xchg rcrb out xor cmp lds cwtl dec xchg xchg (bad) aad mov outsb inc push push (bad) dec in (bad) pushf and rcrb leave mov iret pop bound test mov loopne jne push mov rol inc lods imul pop jno (bad) sti and clts xchg aam dec adc inc into pop cmc int fwait mov sbb lret insl pop std ss insb shrb aad fild inc stc cs cwtl push scas mov push inc mov dec test xchg outsb jno xor andb fisubl mov cmp or out jp rorl fcoms loope mov add mov ljmp orl push xor mov mov or roll sahf pop lds aaa bnd sub cmp cwtl jle jecxz adc xchg pop sub xchg or sub fistl je jae stos or (bad) faddl test fmuls fdivs inc aam xchg lock gs (bad) sahf xchg nop xchg vmovdqa stos xor pusha mov xor add adc cmpsb pop (bad) outsb mov jae (bad) mov int3 mov test sti jbe mov push jb leave cmc test ljmp dec les frstor test push xlat shlb or dec imul fbstp jl pop pop mov jge call test loop cmp inc jp pop or push in movsl call adc movsb sub mov jmp in movsl psubq (bad) in sti iret ja mov xchg push fwait or jge dec inc ss xchg orl xchg fnstenv lods inc mov and test mov mov sub sub mov (bad) mov xor std fcmovu fdivr sbb cmpsl mov add movsl pop test in or mov les movsl pushf or jns jecxz in mov pop data16 xlat cmp mov inc sub ficompl (bad) mov pop push pop setbe adc cmc (bad) xchg (bad) fcos fcom stos mov or mov xchg xor scas xor adc rorb jmp sti (bad) jp sub sub jmp and repnz mov sub fnop clc in cmp xlat or cmpsl cld mov dec into push jnp adc push imul inc sbb xor cs dec mov lods xchg lock push dec lods aas cmpsl sub fcoms pop push sub fdivrl dec insl ljmp sub fildll out movsl lahf stos dec push (bad) xchg xchg scas mov jp sbb enter cmp inc and test or pop xor push push push mov out or shrb pop movsb subl push sub jl scas out fisubrl or cmp mov push es mov das incl fdivs xchg xor push jg xlat jae stos outsl pushf scas lods cmp xchg mov sbb add jge add cmp dec sbb dec jnp test jle jbe or sbb pop or movsb dec xchg jecxz cmp mov xchg xor icebp addr16 cmpsb fwait (bad) lea jle mov and sub cld out mov xlat (bad) push je inc xor inc test ss cmc jmp inc orl sbb push daa les xchg icebp popf jbe jnp fadd std movsl (bad) aam pusha test add movsl js or popf xchg js fsubrp pop mov (bad) out xchg sti xchg test fs pop ds ret add mov sbb fxch lods xor push mov loop xor pop cmp jo xor jp mov sub fisubrl pop push inc cmp movsb das fs fmuls pushl pop add cmpsl popa mov aad popa mov fsts in push xchg test fidivr shr jbe insb add adc loopne enter mov insl mov and popa push adc stc movsb insl scas fisttp cld addr16 jecxz dec sub aad test push jecxz mov aam sbb dec add inc popa inc jnp sti insb dec jle cmpb jne adc xchg dec dec (bad) sarb pop out dec lret mov leave je and out int pop sbb push inc out out xchg mov cmp sub cli pop test ljmp jno xchg aad jmp cmpsl in int inc mov je jae mov out jmp into lcall push mov xchg movsb insb sub sbb aaa xor add mov sbb mov fidivr push dec adc mov insb fsubp cltd push adc inc xor jns or push push push (bad) pusha loopne lods mov push add cmc js movsb out and shl fs mov stos push inc sub popa or xchg shr ret stc scas sarb loope adc jno cs fwait outsb iret inc inc push and andl pop inc pop xchg jmp fwait (bad) xor out push sbb lods sbb mov imul jp mov pop (bad) xor xor les test cli jno and jge lea popf cs icebp cld mov lahf fs out (bad) push or mov outsb addr16 leave xor mov cmpl cmp or inc outsl cltd sbb ja clc shr cmp arpl jg inc jmp dec jns imul rcr mov rcrb cld insl jmp dec in mov ljmp aad pop fadds push idivl push repnz jg rcl xor and jl jne jns insl cld push ds shrb adc xorb nop popl mov (bad) aaa xchg pushw add jg test sbb pop and xor add push push data16 mov lcall fucomi lods ja jo outsb xor mov push jnp jns jne sbb gs ficompl pusha in int stos add cmp and xor jecxz xor mov adc and nop pop xlat jbe lcall cmp push cwtl mov push movl es inc mov adc mov out (bad) push sbb push cmpsl aad fmul out cltd andl push xchg fs mov lret fidivr jecxz mov outsl lea xor sbb imul add add clc aam decb jo adc mov cld (bad) sub mov stc popa dec sub cmp es call jae outsb in xchg and jge mov js pop in xchg pop add fidiv scas sahf push mov (bad) (bad) jbe cltd sbb out xchg fistl (bad) jle mov mov mov int lcall lcall popf mov mov leave lock xor hlt out cmp fsubr out mov je rol ds inc and cltd int lcall ja insb mov mov lock lods iret dec inc dec in es inc insl or cli adc jno dec mov lcall mov int3 nop push sub mov imul push pop test xor sub outsb cltd movb xor sbb sub pop mov adc jo sub das hlt mov jo andl shr adc stc pop mov insb jae mov int (bad) or jnp rcll out popa out jg pop fcmovu popa dec push dec idivl enter (bad) sbb (bad) and pop jnp push (bad) fidiv adc idivl mov and popf xor (bad) xchg lcall mov push in (bad) out scas out sbb cmp push mov rcrb xchg adc dec scas cmpsl and xlat mov sbb gs inc xlat in mov add adcb cmp and pusha or xor add mov mov xchg jl in aas jno xchg fidivr add mov rcr addr16 or mov pop cwtl xchg adc mov mov sbb xchg fldcw mov fucomip (bad) hlt jg std xor icebp orb fsubs inc iret jl and out mov bound clc std jl push imul dec mov adc scas lret inc fcoms fdivrs in bound call data16 aad stos fimull inc orb nop push cmp fwait out mov xor push mov repnz cmpsb sub lds insb (bad) jecxz fwait sbbl push cltd (bad) xor cmp mov dec hlt push inc andl insl pop inc ss sahf mov inc pop aam mov or roll sub loopne adc jg jns or and add inc ret loope adc loop out outsl (bad) push mov sar in shrl and sub or lahf cmp xchg idiv and and js add pop jnp,pn sub mov cli dec add out adc push test xor cmp mov mov push add sbb xor popa pop mov out sub jge mov jge,pt lods mov jecxz nop (bad) fdivrl push push in js aad jo jle push lcall mov int (bad) jae fist jae pop mov aam adc xchg pop sub mov pop lods lock adc lcall nop dec adc add mov lret sbb pop inc sub jg pusha fildll pop or rclb stos cltd (bad) add into xchg fnsave lret adc mov enter mov push cmpsb rep gs sub push cmpsb enter repnz inc xchg inc xor arpl sbb (bad) ja lret gs inc dec pop xchg lock sarl mov inc negl js pop dec int jg addr16 jne push movsl (bad) or cmova outsb or xorb (bad) jmp (bad) arpl imul jo pusha jb push mov mov hlt rol je pop inc dec mov inc and pop lret cmpsl adc push fidivl push sahf push sub xchg mov (bad) repnz subb cltd inc lcall insl stos out xor pop out inc fsubr inc jp pop cld jmp sti or pop inc test addr16 and mov nop jmp shrb mov out or roll inc or (bad) test mov sub mov add and in dec negb sbb and inc dec (bad) dec fld loop loopne loopne,pn xchg xor push addb pop fmulp das push cmc inc sub xchg xchg stos mov cli mov gs push inc push adc jmp and bound mov pop movsb push out cltd jbe inc inc cmp and les lcall inc (bad) push stos call cmpl jno in add jecxz lret inc aad mov decb jge mov push negl mov jg push xchg scas inc (bad) mov push fcomp xor ss fcomps flds scas inc sbb inc pop aaa mov cmp loope or pushf or push test aad adc xchg add dec cmp mov mov cmp (bad) sub fistpl inc push mov insb int3 or add sbb fwait lds iret mov dec xchg mov cmp push fcompl jg or cmp (bad) mov cltd xor add add in adcb sete les loope xchg pop sar mov iret sbb cli mov jo cmp xchg or lods cmp in mov mov call scas repnz adc enter movsl ja arpl add leave xchg in lods mov aam pusha sbb outsb mov pop adc push push adc pop (bad) dec dec pusha loope push cmp lods xor loopne mov fsubl mov scas push aaa jg (bad) lahf in fwait out jo in and xor sbb adc rcrl movsl cli cltd or xchg rorl adc fnstsw add mov pop or hlt stc mov mov pop rep addr16 xor (bad) pop adc fimul pusha mov cmp mov push fisttpl ljmp and test in push lret stos repz (bad) or punpcklbw jo mov loope sbb or mov (bad) cwtl loope ss icebp lods loope (bad) hlt fstl adc orb enter pop sbb fldenv dec jns cmp jbe mov (bad) jne fsts and inc dec xor pop movsl lods ja ds mov push xchg in mov add nop inc insb cmpl outsl cmpsb add pop sahf jnp or std cmpsb xor movb and add and cmp clc adc dec push push aaa in fistpll popw and mov mov inc es cmpl add and movsb mov sub lcall aad sbb mov and enter jmp and (bad) pusha xchg lds jbe mov sbb aas mov clc fbld cs test mov arpl mov mov jmp test xor test out lock add dec xor or adc dec jne pop stos enter lret popa jl cli lods and in xchg xor in shll adc (bad) xor cld shlb fs jp sbb mov mov mov int mov insb xchg lds adc xchg inc (bad) xrstor cmp mov (bad) sub mov mov aas scas into lock in xor mov sahf cltd in int3 ficom lods kmovb cmp call sub mov add cltd clc push jno loope stos xor lahf mov or icebp frstpm(287 mov jno dec rorl xor mov xor ss loopne (bad) div sub int3 mov shlb je xor imul test cmp imul stc fsubrs cmpsl xor lods out mov cmpsb mov pop test lods mov daa imul push add jo call mov int3 into into sahf mov cmp sub lods bound in dec xchg inc pop nop xorb mov aad imul (bad) (bad) adc mov movsb inc (bad) icebp jo pop or daa xchg in arpl out fisttpl inc jge aas loop mov jmp jmp rcrl icebp pop push pop fidivl xchg leave cli cmpsl stos aam mov bound mov jmp dec adc call xor outsb outsl (bad) popf dec sbbb xchg mov mov xor sbb dec out jle or stos inc or cwtl bound xor sub imul mov sahf jb popf movsl xchg call push nop out scas xchg outsl pop (bad) and inc test jno daa jns std pop and push inc out mov out in jne jle outsb fcoml insl inc jg xchg aaa out adc (bad) dec mov sub sub call stc adc xchg or lret lods xchg push or int mov push pop ljmp inc test sbb sbb and imul fadds movsl jl pop adc mov dec pmuludq sbb cmc pop movsl sbb mov and pop inc push mov jno jge xorl mov sub repnz jge push jbe sets ja jo into pop jns inc sub test aas mov dec xchg sbb icebp dec sbb dec sbb cltd loop sbb push aaa add mov xchg cld jecxz push dec inc mov flds popa jp mov shr xchg scas popf and add push mov cmp add jecxz push mov dec adc cmp aas in mov adc repz push push fcompl cwtl lock cli dec movsl lods sti sub adc stc (bad) xor jbe mov mov bound push sbb pop call push bound inc popa sub int3 cltd loopne outsb int cmpsb sbb inc dec jb enter out add call jo sbb mov lds add jmp add clc (bad) rol jle xchg sub ss sti jae cmp jns or sub int hlt jbe push popf into outsl xor or adc cltd xor add inc lods inc mov pop aaa mov test outsb lret dec adc mov (bad) sti mov out lods inc push addr16 fs shl ffree nop loop hlt in test mov cwtl repz add or out (bad) lahf pop adc ljmp sar xlat fwait outsl shlb ds hlt pop jg inc mov icebp test sbb sub inc jns nop and sbb xchg dec mov fistpl mov out inc push mov rcr adc pop mov mov and and and push and mov push or sti sbb sub movnti imul or add mov pop push int3 and xor xor or and insb fdivs shlb adc stos popf and cmc fiaddl sti push inc pop pop out rcrb lds test dec (bad) xor pusha push lahf push cli adc loope mov pop pop je jg mov ja push out or cmp add cmp dec lea fidiv pop imull test sbb stos mov mov icebp sar push cmpsb xchg pop push scas rorl pop xor rorl sbb pop insb and mov mov jae test jae sti sub popf int3 mov dec jmp push adc insb pop mov jbe addr16 (bad) push sbb pop jbe mov xchg add mov add in je stos hlt ror push push and sbb mov mov ret jne sub dec ljmp mov call hlt inc sub cmp enter fwait cmp test (bad) cmp mov aad lds mov lret out and arpl les pop sbb fnop ss insb mov mov xchg clc ret mov rorl loope pop jp jecxz push inc idiv mov inc push pop jl jbe sbb fistpl int pop test adc cmp mov outsl in lods iret lods pop pop stos fwait mov ret push icebp or sub xorl push outsb aam fcoml mov mov movsb jge pop aas dec les incl xchg cvttps2pi ds inc lret jp pusha ret mov inc out and jle sti or scas hlt mov int3 dec imul incb js jb push gs movsl inc push sub jecxz xchg dec loop popa mov add test fnsave push (bad) mov pop mov cli or roll pusha dec divb push test jns xor xchg out xor xchg lret (bad) daa adc fldenv pop push jecxz repnz mov lahf xor push pop xor pop les lcall lods je cli inc movsb ss mov lock jge adc inc (bad) jg lret repz int3 xchg hlt outsl lock pop je and int jecxz outsl cld pop pop lods das xchg xor je lea imul rcrl or push jl pop xor dec mov xchg mov out mov cmp mov jg sti adc xchg clc dec sti push mov mov subb pop pop int rorl sbb jp lds jns jns lods dec adc aam jbe lcall (bad) sbb ret ja insl and jg ficomp int3 dec mov nop loop cmpsb in fiaddl (bad) into addl stos cmpsl jnp mov pop xchg lret push push and dec test call or dec mov mov sub pop or sbb mov fptan xor sarl ljmp fwait inc repz push aad ds xor in scas push jmp (bad) jno fdivrp cwtl xor stc out fsts inc xchg cmp sub and mov stc ljmp popf jbe push mov mov or into inc rolb jmp push cs stos jl push mov stc or fcmovbe popa test push (bad) pop jge popf mov das jge xor adc push popf loop push cmp lods out sarl jmp dec dec ficomp shll dec xor je jl into cwtl jl sahf add cmp inc sub push sub dec push mov jg push push cmp jecxz rcrb sub cwtl jmp mov mov sub xorb cmp outsb cwtl fsubl pop inc xchg mov es cmp dec cmp inc dec push in stos cmp imul cmp imul (bad) push adc xlat lcall aaa aaa cmp adc or xchg jo cli push jno sahf push pop das loop mov scas inc adc mov xlat jle inc cmc xchg adc push call dec addl push push lahf pop aaa inc pop inc jecxz push xor pop add (bad) shr jno dec xchg and lods test xor popa (bad) les lret scas loopne cmpsl mov imul mull gs adc (bad) cmp shr stos jnp push mov (bad) int3 xchg cmpsl lcall jg loop push push xlat sbb bound inc pop push cmp pushf loopne jle fs fs cli fildll jl push std (bad) out stos pop sbb or jb xor pop push test call push jno addl push push je cwtl fcompl mov arpl push mov jno test cmp stos mov je je or out jge cmp push int3 daa jae pop outsl adc dec and xorl ss aam sub lock xor ret pusha bound mov lea dec sbb sbb pop and stc jp pop lods pop add ret push mov and mov xchg mov imul xor loop inc leave lret outsl jle fwait mov lcall sub xchg add nop adc or scas and sarb stos leave jp out or addl (bad) test pushf and (bad) adc pcmpeqb mov cmp scas jle and jnp mov sbb sub sahf divb push jecxz pop sub ret inc push sti aaa mov in mov scas test scas sarb dec clc in mov push loopne pushf cmpsl push add xlat push out inc into addr16 dec adc mull sbb es dec push fldt cld inc fcomps mov test lds sub cmpsb mov in sub mov sbb (bad) sti enter ds push gs dec adc into cwtl stc fisttp push jecxz dec fiadd dec aas roll insb popa xor enter sarb cltd jns add inc movb inc clc inc lds sub sub xchg pop ljmp iret push lahf and lahf (bad) aaa or inc lret push dec insl pushf lock push mov or push mov mov jno xchg inc jl cs add loope mov int sbb iret jecxz enter or (bad) adc jno out push and (bad) dec aaa adc lods stos es push sub lret andl add lea or ljmp andl jb in loopne int3 dec pop addr16 test lods mov mov imul pop mov loopne in mov out pop mov mov jbe cmp stc insl or inc dec sub sbb push add pop loope ljmp cli adc fsubrl lret movb out xor dec aad push dec cmp out fs mov hlt jge mov out jns int3 cs pop cmp hlt mov push adc mov hlt std fbstp gs dec sbb out je jmp cwtl (bad) mov lods xor xchg adc pop sub push gs sbb jecxz cwtl pop push add out test cmpsl fcomip data16 mov popa dec iret insb sbb inc outsl gs adc movsl adc pushf lock popf and test fdivp or leave bound fsubrl cmpsb pop add pop inc loope fstl out mov mov pop and movsb jne inc dec shll loope insl inc cmpsl cs ss pop jnp dec fimul pop inc (bad) push das push cmp mov das push mov sti adc adc xor ss out into addr16 aad add mov into sbb (bad) repz cmpsb imul jmp sub arpl xchg xor jo pop sarb fwait (bad) cmp xor rorb push pop jp pop xchg gs fcmovnb adc aaa push (bad) stos add pop add rcl out sbb test std push or stos push in ja js pop dec (bad) aaa int3 andl scas cmp (bad) push scas xor xor add fsts ss aas inc cmc mov sub bound dec mov das jmp sbb addr16 push dec push out sbb mov fstpt mov adc insb (bad) sbb xchg ret pop jp mov sahf test dec fidivl mov sbb mov jl jg and popl rcl loopne adc out pop xchg jno jge mov and dec pop mov test jae sahf mov mov movsb xlat insl fiaddl jecxz lret dec cmp inc mov push inc fidiv orl in mov xorl dec cs aad mov fdivs cmp loope leave mov dec scas cltd in inc jle pushf xchg jmp sbb xchg push outsb push mov aam mov in fwait or mov lods mov sti cmp iret cmpsl jp pop fiadd pop sti ficoml loope mov jmp jae lahf push adc (bad) and jge das dec xchg in enter (bad) dec in adcl or ficom test or roll orb hlt daa pusha xchg pop aad mov dec sbb jnp pop (bad) jbe push dec jne add or sbb in test (bad) mov insl hlt add out adc or es add mov cmpsb icebp dec cld inc nop lret (bad) cli pop in rclb in push jno mov outsb adc mov mov and mov lret repz setl sbb stos mov push ret fistpl fcoml test fs mov into js fwait int3 mov sahf fildl arpl push mov jp pop pop xchg aas (bad) loopne icebp xchg ja mov mov leave lods pop jecxz ret mov mov (bad) jns pushf fnstcw push mov dec mov stc cmc fdivrp lds mov xchg jg dec dec jecxz lds adc iret mov pop mov cmpsb repz jb lds fisubr test mov and aam jl inc mov scas add insl add inc jno mov (bad) xchg enter adc negl mov insl es insb fistpl add and push jg icebp inc stos jne rolb cmpsb imul loope and fmuls iret sub push mov mov pop imul xor scas imul das xchg push out testb adc aad jecxz pop sbb test icebp mov imul sub adc xchg pop xchg cmpsl jo xor adc loope mov push orl xor mov adc lock xchg dec (bad) stos out inc mov sbb pop xchg add popa dec pop sub mov fcoms repnz stos (bad) or repnz fwait jg and jb (bad) movsl test cmp push nop repz xor rol aas jo fsubl push ret (bad) push fidiv ret insl (bad) cli loope je repnz add adc push loopne push add lahf push pop lahf jge mov mov cmp cwtl aad mov or mov (bad) cwtl jl (bad) idivl dec inc and lret pusha lds (bad) adc out daa push out lret into adc (bad) mov imul push inc add gs enter inc add fstpl pop jbe xchg xor ret pop push mov push enter pop addr16 cmp insl pop mov dec and sbb cmp and or (bad) ds sub out int jb dec std push fdivl movsl insl icebp pop mov sbb mov negl push mul adc test mov ret imul cmp (bad) cmpsl xor push lret lods std cs in pop test push in fmull push and popf sub sbb loopne fs jbe sub and test cmp inc cmp movsb adc add or ds jge movsb imul cltd dec push rorb adc or hlt push cmp jne fist (bad) dec sub repz sbb or add mov hlt inc inc xor sub in or outsl mov sarl clc mov insb cltd aam jp mov stos loop pop push lock or and xor jo pop pop add add out cmc sbb outsl sbb push dec ret dec js sbb orb imul mov fidivr cmp cmp shr mov push adc jbe dec jnp shrb insl stos sbb fildl inc mov (bad) je jg mov fmuls ret or add jg movsl addr16 push cmpsl addl int cld push leave cmc (bad) push mov aad in cltd (bad) jno pop cmp push cs mov adc and popf push jecxz sub adc outsl ja lods lret int dec xchg iret enter add cmp or dec push jecxz lea push notb dec repz test pop fs aam icebp mov push mov in cmp sahf outsb sbb adc and in ds pop mov xchg imul add lock jo cmp test in adc push ja pop push adc pop jno sti lock sti push mov ret loop bound stos push out lret mov cmp adc adc iret scas dec mov icebp pop cmp push loop adc jno sbb out add adc xchg mov sbb stos (bad) xor sarb adc aam gs mov dec cmp mov fldenv jo xchg adcl jl pop std inc out test out out fwait push mov int mov ret inc mov fildll push push js orb mov fisubl popa test push push push pop push in pushf jmp and sti push pop mov out clc idivb and aam xchg pop leave cwtl and data16 inc shlb inc or stc mov lret cmp lds into mov jecxz mov int dec lods xor or pop push add les add jbe xchg mov imul ja dec rorl mov sbb jns ss dec push fild mov add inc adcb out mov (bad) icebp fldcw popf lods enter addr16 push sub inc push mov mov mov jb cmc stos inc sub sbb jmp mov movsb inc mov pop call dec mov sub movsb mov lods jne scas fdivr pop cmp cmp xchg aad adc ret inc pop ds inc xor cs sahf adc ret fwait stos mov mov push pusha adcl mov outsb mov pop rolb pop mov mov lret rorb outsb mov adc add mov push les rorl sbb out mov in adc sub and aad sbb jne push icebp int and scas clc addr16 push das fcoms mov inc inc test sbb inc pop and xchg leave inc lahf add xchg fildll inc inc adc jecxz cmp int sbb loopne (bad) imulb les mov in or mov inc daa ds pop fcomi add push push jle sbb cli sbb push mov pop aaa sbb or scas (bad) dec cmp dec in xlat cmp ss xchg ret jbe jg (bad) push fs xor insl or inc push cmp popa sbb sub test mov pop (bad) mov adc out dec enter fisttpll cmp mov shlb lahf or adcb sbb in dec pop sti inc inc or test sbb mov add out (bad) push mov ss lods add mov dec int sti mov push aam js xchg and fwait dec stc inc pop cmp push xor mov mov repz vaddps add leave jns mov inc sbb pop sub dec and jnp cmp mov cmp jb loopne out mov mov inc repz cmp ja sbb pop mov push lea mov ret fsubs inc mov fs xor pop cmp xor test shlb jns and mov or dec div flds repnz pop pop jne inc mov mov and jmp fstps ja mov shl dec cs push int3 jo (bad) aam (bad) dec fucompp test push and pop mov xor sub sbb ret ljmp fiadd insl fs xchg adc imul scas sbb push add jne ret xchg jmp adc and fildl sarl (bad) jb,pn mov movsb cmp subb push adc or lock cmp xor popl jp jl and inc outsl scas fsubp inc hlt lcall jns jno mov and fs popa dec pop xor xor mov iret test push jmp pop insb call pop push (bad) addr16 int3 dec dec mov fwait das push (bad) jbe adc vmread xlat jl aad cmpsl push mov sarb imul arpl sahf and add outsl pop sbb (bad) jbe sub arpl fstpt loop lret movsl mov lret mov mov jecxz hlt mov cli lods fwait bound cli xchg pop scas xor aaa in scas scas shll sub jecxz fild mov jecxz sub pop mov xchg add ret std fldt jns ja lahf push scas xchg aad cmpsb jmp ss sbb xor dec aas pop cmp or or sub or xchg push inc mov jp pushl scas cmc mov add icebp ss call mov imul jne add stc mov movsb je add loopne lea jmp outsl sti orl lds shld and mov pop shrb out xorl dec (bad) lret push clc mov adc push mov roll (bad) pop outsb push ret mov pop push xchg mov jno dec dec lods arpl add cmp insl adc aad xchg sbb movsb mov jb cli xor inc xor ret cmp cmp test adc mov pop loope daa adc mov les std add jecxz mov push shlb aas (bad) arpl mov push xchg cmp xor push sbb jne adc leave jle cmpsl xchg dec dec push arpl mov mov push clc stc pop outsl int3 in jbe outsb (bad) dec orb pop mov fsubl mov mov and xor bound xlat jle into loop xchg mov sahf or (bad) mov mov fisubl pop hlt cmc roll sbb pop sti es pop (bad) mov xchg popf add push out lods popa inc xor addr16 lahf pop inc push insl not pop sbb push adc fwait repnz std pop lahf push adc in xchg jns orb sub (bad) push ljmp inc sub mov gs dec ret ror add roll sub stc jb xchg shlb cli inc lds enter jmp jnp std sub movsl xchg les mov cmp fldenv outsb adc jae jbe xor mov jno inc mov ret mov xor lock push rorb cmpsl xchg repz sub inc dec shl dec int pop fild mov loop adc notl cs aam and push inc jo rcrb stos mov sub mov addr16 subl jl roll cmp adc mov sub mov (bad) jecxz icebp je stos (bad) insb jg loop out outsb xor out imul out test dec popa fiaddl mov shlb fadd cmp mov andl lahf jmp stos fildl xchg adc call jg outsl ja pop sub scas xor in add push jb cmp inc call and mov hlt and lahf cmp or (bad) arpl adc push jnp ss fs mov in cmp dec or mov addr16 add ja and ret mov dec mov cmp push mov jns lret push add mov push int3 dec cmp lret and (bad) test inc (bad) mov adc dec dec cmc stos cmpsl mov jmp and shrb out sbb call adc xor add and push push iret cmpsl xchg push xlat sub out (bad) lret dec sbb dec shrb adcl loopne xchg sbbl call mov sub imul cmpsb je add fs push std mov iret pushf push add xor call xor add and and sbb mov repnz push add mov mov jae sbb test mov or pop cmp leave int3 push es imul push cli dec jne add push xchg inc add loope xchg adc sbb sbb jmp xchg jg outsl pop add pop pop rcll loop js push add push movsb lret fnstsw movsb out in mov (bad) cmovp cmpsb adc mov lret xchg mov or sbb adc mov mov (bad) xor sbb cmc shlb test inc xchg jmp dec dec pop and cmp add imulb js mov push lds adc movsl scas dec lcall paddusb in nop cli andl test imul cwtl pop xor movsb test arpl adc xchg xchg dec negb xor ljmp shrl and mov movsl sbb in push cmpsl jno mov pop lods jecxz mov xchg lret cltd push aas push pop dec outsb push xchg dec sbb and xchg mov mov addr16 cmc and bnd push xchg hlt inc inc divb out pop (bad) je add iret fwait mov inc roll cmp leave test fnstcw dec push hlt mov add ja add jnp nop bound shll mov mov out push and adc dec scas add and int3 rol pop pop into jge call dec mov xchg cmp and popa jb and or jge fwait stos adc int std xlat xchg fdivl movsb mov cmc dec in icebp dec add jmp push movsl or stos cmp mov in out jae lret xlat mov insl lds fwait leave xchg push lock jl cmc add dec mov (bad) mov or jb sbb mov adc or dec mov stos mov aam cwtl fdivl xchg test mov and iret mov mov cmp (bad) fadds cltd push sub and in cs insb popa sbb rep cmp stos out out cmp inc mov fisttp imul stc in jno icebp or mov mov out xchg scas cs inc add arpl jmp stos cmp lahf dec adcb sub push fwait and inc mov outsl test adc inc fsubrp jl test stos (bad) into popf mov dec cmp lods sti dec fwait lock push cmpsl xchg mov les out loopne jle shlb lcall mov inc mov inc cmp addb addr16 lahf mov xor lods std add adc and aas sub inc dec in inc ljmp ljmp xor ss cmp or cmpsl push sbb orl mov lods enter or xchg icebp lds ds pushf xor dec xor mov (bad) lret test pushf jmp dec mov cmp ss sub add push fsubp dec xchg cwtl (bad) xor sbb mov loop push enter sbb jecxz mov add and gs xchg fcoml sub mov aam fldcw mov xchg xor (bad) or pop (bad) mov outsb mov push push mov sub mov cwtl sub (bad) rcrl sub lea lea cwtl xchg test lods int3 arpl das in cmp ds sbb cld dec lea cld sub (bad) pusha fwait mov xor sub insl movsl stos (bad) jno cmpsl imul lret mov repnz cmc push and pop add pop repnz mov fcoms mov loop mov jbe push mov pop jg rcr sub adc scas daa cld dec das mov push hlt dec and (bad) or sbb push aam dec movsb aad int mov and inc sahf mov jns stos icebp cs roll sbb flds add aam movsl mov sub mov dec jnp insl je in add ja (bad) cmp add cmp cmp iret or int3 sarb shrl jb dec ljmp shrb add xchg (bad) loopne (bad) int3 jb fimul jo (bad) sbb xor push mov jp pop pusha (bad) lret (bad) ljmp lret rcrb scas pop inc sti lahf cwtl (bad) ss mov subl sub mov and jo (bad) adc stos adc rol add (bad) pop test mov pop push vpunpckhqdq mov out ret inc jmp or and push je or push xchg adc lahf mov jb sub lcall cs jg jmp mov ror je xor scas adc jne ss adc iret mov outsw enter xor mov in stos jge fcmovb pop xchg out leave push xchg and mov xchg cmp adc jmp leave dec std or inc adc mov das out sub mov and fidivr push jne pop iret js pop add repnz pop test cmpsl movsl jo jmp adc int sub sub test xchg fisttpll xchg mov les mov pushf add pop sti mov call pop or fstl (bad) adc pop sub mov (bad) inc jnp and xchg addr16 mov inc mov xchg jo sub cmc adc aam jecxz (bad) testl aaa lcall sbbl inc cwtl push rorb les fcomps xor ljmp js pusha sub loopne cwtl outsb (bad) jno xchg jo mov jb jmp pushf sbb sbb push shll mov or loope mov sbb mov ret adc ljmp icebp push jo adc cmp xchg push mov pop xlat dec jp mov or inc inc cwtl lock hlt and ficom test fist scas ljmp divps test xlat sbb (bad) mov insl adc sbb pop add in xchg insb pop imul pop lods sub cmc jns xor dec push inc sbb movl pop js out mov cmp xlat movsl jno scas add jnp pop pop sub add lahf pop rol xor xor dec mov cmpsb sbb popf cmp push (bad) xor imul test sbb mov xor sub and aad loopne hlt mov outsl scas mov mov mov inc stc cmp pusha fwait subl in cmp mov std imull sub push sub adc aaa (bad) mov je in xchg cmp loop int3 test imul ret aas cltd mov lock jmp fdivrs cmpsb xchg or sbb testl mov sti mov std and xlat inc pop sbb push es adc fsubp jns and (bad) or (bad) push movsb and sahf adc xchg call xchg lahf or cmp pop adc add ror int3 mov (bad) (bad) or jge jge sub push pop iret jo and out dec out movl (bad) in scas or ljmp loope shlb rolb add movsl cmp je mov repz aad xor (bad) mov push jge scas add ret mov xor aad testb fmulp or dec std xchg pop mov movsb vpunpcklqdq sbb mov mov push (bad) pop mov pop fidivrl push dec daa xchg notl (bad) jne adc jmp outsl pop push push jno jge loop pop lahf mov repnz sbb sarb pop or test xchg in lret sahf repz or int fisubrl mov mov sbb push or cld push mov mov int3 mov mov pop xlat xchg cli loopne (bad) popa jmp mov in fucom cmp fnstenv push dec out fadds cmp adc data16 dec or jns cli add sub mov test jmp xchg hlt loope sti dec mov cmpsl icebp jne or mov sub mov outsl mov outsl nop jl pop push aas cmovge sti int3 pop pop mov imul enter dec fcomps rcll (bad) jmp jne jmp sbb cmpsb scas push xlat mov stos stos (bad) inc mov xchg ds sub mov dec inc jb (bad) movsb test sbb pop int3 add push inc fs push int3 sub inc xlat push sahf adc push adc ret mov sub hlt lods int3 in lods inc (bad) add sbb cwtl xor ret push mov push negl push repz or fsub js popf ffree push test insb frndint add out mov or ficom pop pop mov or dec cmp add adc call insb jg movsb movsb adc mov push fisubl mov or cmp jg dec dec push inc mov lds gs cmpsb inc and cld sub out repnz clc lcall repz cli mov push mov aam pop cmpsb ss neg mov cmp pop push add scas es mov hlt (bad) mov cwtl cmp jb sbb push pop into mov inc pop enter mov mov (bad) arpl pop xorl or imul nop inc jns push adc das rcr sub and (bad) cmp dec mov push xor rcrb in ret mov leave cwtl lahf inc jo aad popa adc push popf std adc xchg nop lock ret mov dec (bad) or fdivs mov ss jecxz push jmp dec adc or cmp mov lods cwtl push xchg xchg bswap cmp (bad) clc (bad) fidivr cmp fimull jecxz aad push mov add and ret lods ljmp sbb add push addr16 bound roll lea jno sti dec pop adc ss or popf ss insl push mov or (bad) jmp lcall dec jl mov xchg loope js pushf enter adc sbb stos jecxz (bad) jg jo data16 jl es ret leave mulb je jo or mov aaa ljmp (bad) or test (bad) sub and in rsqrtps mov lods outsb jo xor jle xchg push sbb sub fiadd or xchg test mov adc push dec sarb push xor dec sbb stos cli imul or outsl hlt mov add cmp inc lahf and in stos pop fdiv sahf test stos in inc test fnstsw js sbb push mov inc inc out iret xchg adcl add cmpsl xlat movl loop cmp cltd dec cmp movsl cli gs dec test lret mov adc jb pop pop xlat inc mulb pop loop icebp pop xchg fwait xchg clc sbb cld sub mov out popa divl cltd add and fsubrs xor mov mov xlat sbb dec mov dec movsl loop out rorl xor inc pop inc xor stos in shrl aam sub mov dec mov and push sbb dec pop push pusha out jl les xchg push iret push bound dec pusha mulb imul cmc xchg dec rcll sbb mov add add mov fldenv flds xchg fwait test inc push sub mov adc dec jb (bad) sti push xchg or dec push insl cmpsb add xchg es clc sub mov (bad) (bad) push lods (bad) nop out or push push sub inc adc daa jo stos ljmp pusha aam lret popa xchg (bad) mov push into jo push dec sub mov jg jns push adc aam lods aad mov fmul cmp aad pop push cmp jo imul inc dec or xor dec xor test dec jb inc ret inc add daa scas and xor mov jno xor shrb stos icebp add sub int inc lock cli lahf sub xor jae xchg data16 loope addr16 add push fistl xlat setns enter inc inc imul call lea movsb lds or mov leave subb xchg fucom jbe pop sbb (bad) rclb les xor xchg mov jnp push cld (bad) xor and es test in rol out pop sti push cmc jbe testb jmp (bad) mov mov push scas dec xchg dec adc xchg int3 mov cmp cmpsb int jo lea xchg bound push mov push pop add add dec test (bad) std sbb xlat inc std lods inc mov pop sbb dec xor or out mov movsl mov fstpl in push cli jae addr16 mov (bad) loopne sti aad jbe adc cmp mov ret jle mov fmull popf lret (bad) fistl xchg sbb dec inc xchg pop data16 sbb fbstp pop add adc inc aad xchg data16 insb je insl push imul ss xor and jno sub ret and decb insb xor cmp mov mov fmul movb test scas xchg lahf (bad) push or cmc dec add idivl push cli add push mov movsb jmp jecxz nop enter sbb into cmp inc push mov sub mov inc xchg fsubs pop iret push xor add xchg out imul sahf pusha dec mov dec (bad) scas lods or in xchg (bad) stos pop push push test adc push in mov adc push or push and clc mov inc cmpsl cwtl aas jle,pt jge mov and pop mov or lds and cmp jb sub mov (bad) scas imul xor pop mov out loopne push add inc (bad) out xchg pop outsb es sub icebp xchg loop jge mov adc bound je add pop cmp cmc ds sbb sarl mov push test inc inc pop mov stos dec and mov out mov scas fiaddl push adc pop pop aad jle mov sub pop in push jmp movsb lea pop fldenv pop (bad) sbb mov cmp mov movsb push jo,pn mov pushf incl push pop ljmp pop in into mov outsl test stos mov sub sub arpl imul dec jb imul mov jmp enter sbb jmp shl push push pusha xchg jbe enter sbb inc cmp insb andl push sub lock inc push push sbb mov inc lods outsb mov clc pop je les adc mov out mov xor mov (bad) sbb mov lods sbb xor test cmp ds sbb lahf or in push test dec pop (bad) cmpsb out ss mov fdivrp cmp cltd push sub fsts xor (bad) aaa sarb mov xchg or mov enter dec ffree (bad) jnp inc outsl (bad) cs inc into jbe mov sahf stos push fucomi int3 push imul pop pop lahf in xor dec jge push ds cli and xchg fwait push inc in das cli aas movb es xchg jo jbe shrb lcall test mov lret xchg aam mov lods test sub mov rclb loope adc into dec ljmp stc loope dec shr add add jo xor dec adc and jl pop stos push int fwait add (bad) adc popf sbb ja cmp mov xor jp,pt sbb aam cmp (bad) adc pop jl cmp pop and pop push dec pop add (bad) loopne cltd inc cmp or out rcr std insb lock xorb stc test cmp pop loop (bad) movsb cltd ljmp ss xor ret fwait xor lea dec dec loopne cld pop cltd enter aas add call cmp lea or lock fcoml pop mov mov sub les jl popa jg inc test cld std dec cmpsl aad lock sub push pop sbb shrl jge xlat adc je or pop or push and cli stos js cmp mov fnop mov dec xor stos pop and fdivl shrl popl pop cmp mov jmp mov xchg into inc push stos xchg outsb ss jl rclb fcoml es mov lahf cmp mov (bad) ror sbb test mov ljmp add out dec test jne xlat xchg and adc lea fbld insb shll negl repz jns sbb jecxz sti decl shrl xchg insl shr nop das mov mov sbb rcl dec xchg inc jge ljmp int3 mov cmp cmpsb bound push cmp jne mov fsubrs sbb or mov int3 adc jno mov push push insb push pop jbe cmp cmp mov cmc lret jbe xchg je xor cmp mov aam pusha pop (bad) push aaa add addb imul out movsl mov (bad) pop aad push nop mov xchg mov in push or pop cld sub pop pop mov scas aas adc jmp sub or xchg lret pop (bad) mov push sub (bad) cs push shll dec xchg mov xor fidivrl or gs das jecxz fldcw mov loopne jle mov pavgb cwtl lret or repz aas popf mov jo or dec sub add out movsb test sbb sub xchg sbb push mov sbb stos inc aaa jae mov xchg jno mov inc sbb xlat test xchg cs out xor inc aam fwait out out mov imul movsl xchg mov mov xor lret xor les pop jge (bad) inc jb mov out inc lds sub pop mov sahf dec ja movsl xchg pop mov cmpsl out in shr lea fwait (bad) daa rcrb cli or popf xor rol jne inc repz sbb mov insl pop sti mov imul je scas rcl es jg bound and repnz les cmp int mov test jecxz and pop xor pusha xor pop jl mov xchg ret movsl mov xchg daa (bad) xchg pop mov or jge jns sub and stos ss addl push (bad) xchg xchg into lods pop repz (bad) cli daa cmp jle leave andl and pop movsl inc imul xor test cmp and test pop lods or fldcw mov in adc dec (bad) or dec cmp xor (bad) sahf and sbb loopne dec int3 adc (bad) (bad) repz inc ret cmc xor xor dec pop sbb mov push or das fimull adc dec add notb hlt test mov or repnz adc mov push sub lds scas jo sbbb push aam inc jp ljmp addl or xchg (bad) adc stc movsl xchg jno cmp mov adc lret loopne lret mov shll lods pushf rcrl pop dec ret pop aaa push (bad) call loope jmp push repnz cmp cmp pop xlat dec ja (bad) aaa dec test das aad int3 (bad) ja dec jg adc enter int ret dec mov push aam or inc jbe cmp push cmp (bad) sbb rolb jle cmpsb aaa and test dec cli cmc mov loop mov nop or hlt cmp icebp dec pop bound cmpsb pusha fcompl xor add test test loopne out dec and sbb add stc pop fnstsw add or sbb fs dec sbb inc mov and jecxz jg jmp test (bad) sub inc jp cwtl xchg pop popf mov jle subl and out arpl pop test popf cli push ret and out pop int cli xchg lret jmp aad outsl push fwait push jns xchg (bad) jmp sbb test adc inc out adc pop sub jle neg jo test xlat scas insl js je fsubr cmc push xchg aaa add sbb dec mov jb pop jnp std fisubl mov stos pop cmpsb or mov cld jp fdivp sbb hlt add push mov int in inc sub push jle gs fisubr test ja or mov sub jne in movsb mov and xchg imul push jo pop hlt or cmp xchg outsl mov or mov movsl repnz std decb pop or jns test cmp and and mov cltd xchg push xchg inc aas shll in pop sbb dec clc mov lock pop std xchg ljmp (bad) into mov mov mov push xchg ficom std push test imul add cmp add sbb lods dec repnz ret mov push or shrb (bad) fdivl add mov (bad) lock sahf test lret xchg jnp xor imul in mov in mov dec and std pand mov cmpsl adc add mov lock daa shll aaa jns inc ds ret mov and jb sbb hlt or lcall cs jle push sub and bound jb mov xorl mov sub mov lahf pop add sbb inc rorl jg shl sbb push rcll push inc push aam mov loopne inc mov fimul imul pop inc or enter not push (bad) aaa ss adc sahf pop or sub movsl sti and jno test sbb xchg dec pop pop es inc xchg sbb fwait sarb int inc jge rol fsubr xor pop or xchg pop or hlt and xor ret pop pop pop mov dec call adc ss imul inc (bad) fnstsw mov pop sar sbb add int3 pop lods ret pop out adc (bad) sbb aaa jmp jmp (bad) jbe test (bad) lahf cmp pop mov mov or push push andl addl lret adc fs mov jp and (bad) out pop mov pop xorb lods sub adc enter imul xchg mov mov repz dec (bad) and cs xor jle sub movsb test fcmovu add pop leave adc mov and loopne dec stos dec std loop dec scas adc xchg or std lret bound mov cmpl dec push xchg dec and inc stos lods and daa mov (bad) jb adc pushf in nop pop lods mov ret inc jmp push leave ret push sub mov or or in outsl addl mov scas (bad) imul es (bad) loopne push jno stos clc push push lds adc imul test sbb pop mov add divb and lods xor data16 inc lahf xchg out int3 pop call ficompl jecxz (bad) mov sub mov and adc mov and cmp int dec xchg scas push (bad) (bad) mov pop adcb mov sbb out inc push push aam or test ss or (bad) mov ficomp push lods xor imul sub xchg das in xchg dec movaps sub fwait and call cmp mov sarb test mov (bad) loope push subl test xor mov pushf idiv xchg ret or add fmul push cmp (bad) add fnstsw xor mov jmp adc cmpsb or js adc dec xchg cmp lahf sbb fs ss pop pop aaa adc sarl cmp aas lret dec fistl and movl push pop fstl mov cmp xchg sub mov cwtl inc xor test outsl sub call leave loopne mov xor xor js dec sahf sub sub add inc mov pop cld (bad) je inc int3 jp xor inc lret ret mov ss scas ret mov and insb (bad) hlt mov cmc pop aaa jne jmp in stc mov cmpsl movsl inc jno adc out lret mov (bad) (bad) cmpsl jne jl and ret jmp xor sub adc dec scas cmp cmp imul std push cmp fnstsw push pop mov les sub mov fwait loope repz mov fsubl fildll jae mov (bad) arpl stc xchg or mov add (bad) out mov pop cltd test and inc and add push or decl ja pop clc push cli mov les fdivl mov mov int xchg push enter andl adc and ret adc mov sub and sarb jbe movsl xor dec clc sub inc jmp push out fimull int mov daa sti mov or loopne movsl sarl stc mov adc sbb pop pop loope jo xchg mov fldl fucomip jbe push cmpsl data16 jg stc divb add pop inc popa enter insb (bad) jl repnz mov dec push xchg int3 mov jne xor jae outsl testl push test ret add (bad) mov cld inc sbb inc mov add adc push popl and std mov mov lods pop aaa das (bad) popa sahf loop sbb fnstsw js mov pop or push sub rorl scas (bad) lock test lahf popf aas mov shr cwtl cmpsb (bad) cwtl xor ja sbb dec fs out xor push jo inc addr16 sti push insl mov push into jno test stos cli ss mov call push mov repnz mov (bad) notb js cltd orb (bad) pop mov ds mov lcall jg push sti icebp loope aaa jge jbe lock (bad) push and nop icebp test adcl stos out out xor inc dec jno sub stc cltd daa xchg jnp in mov pop or inc sbb jp ljmp mov into sub lcall jle jo mov test into jno daa bnd add push add cmp out dec pushf dec xor pop mov xchg or dec and icebp adc and pop mov dec loop (bad) mov adc or dec out leave xchg into push dec mov xor jo popa lea mov pminsw jp (bad) in (bad) jp mov popa cs pop enter insb imul loope mov ret xorb jmp cmp mov mov repz dec or and movsb inc cmpsl (bad) repz or and lea les in and outsb pop push fstpt lcall (bad) push pop mov (bad) lods mov mov shl repz je dec dec sbb ja jmp ret pop aaa mov mov (bad) and ss add push mov push je sarl mov pop shrb aam mov or pusha scas sar js fisub mov mov add mov mov jle imul inc imull fsub adc lock out std sub out push lret mov push xor leave adc rorb push in cli pop mov push das popl outsl inc lea xlat mov mov dec es popf lret insl sar andl ljmp (bad) adc jns and int3 mov popa dec cmpsb mov xor fisttp jbe mov and into xlat xchg mov jns sbb aam jns pop lea push mov repz or test cmpsl xchg es adc imul mov cmp ret test add outsb aad popa lret fldenv cmp lcall cmp pop add popf (bad) in outsl and mov fimul popa mov sub adc int3 push cltd sbbl or fwait bound dec hlt mov push push (bad) rol into and sbb cmp nop out xor push inc pop pop mov out jge pop in fsubs movsb sub je (bad) xor mov sub mov xor pop inc mov inc mov sub sti into (bad) bound lds outsb mov test push inc inc adc scas es xchg shll frstor inc fisub push pop data16 jge pushf lds orb or push mov dec push subb movsb mov lret aas jmp mov arpl popa gs in fsubrs icebp add xchg xor adc out cmp jb push jb inc sbb push jbe xor push and mov inc fadds lock ret rclb imul lea jo movd outsb jl jo mov push xchg jmp push nop cmp lock and cmovae mov das mov xor jg push fsubrs sahf lods arpl jnp shrb ja xchg jns fwait adc lret popf cmpsb jl test sbb cwtl sahf gs cmp es xor inc xchg out mov sbb push pop sub (bad) out cwtl mov fistl xchg cwtl xor out nop mov mov jbe (bad) sbb mov mov jecxz add pop dec loop in fmul add xlat imul mov lahf enter mov repz jno,pn shrl subl pusha push or inc jecxz mov add mov adc sub fildll xlat sahf push (bad) pop inc and iret mov shrl ficomp and icebp pop fidivl dec push xor jns adc jge cmp xchg imulb push add adc push add leave getsec popa mov adc pop cmp xchg or aaa dec pushl mov je sbb sub (bad) clc insl xor sbb sbb push pusha pop outsl or inc sbb adc push adc mov and mov push fwait stos int3 (bad) push stos loop sti gs xor jp out jle xchg mov push xor das fsts test adc adc in lds cmp and std testb mov push pushf std push loope mov jb push ja andb int cvtps2pd test orb and xchg cmpl or and sub data16 adc jl je adc stc dec jg inc bound add push add ljmp out lcall lods sbb iret scas aaa dec stos sub repnz scas loop fistpl xchg xchg xor cmp popa je sub fwait adc sti and in jnp pop inc out das hlt cmp and (bad) out lret add adc inc and cmc lahf xchg popf pusha xor mov addr16 fwait xchg cs loop or push fwait jno adc (bad) (bad) jmp ljmp sbbl aaa les (bad) dec adc fisub jle dec adc popf xchg cmp leave mov mov call lret xlat shrb sbb mov and inc stc fwait xor mov popf dec test (bad) in dec mov test sub push xchg mov and lods xchg test pop nop xor jno jne jp add mov mov pop sti test outsl hlt fistpl es fstl sahf push ret jp shrb imul mov outsb cmc nop in jns sub rcr cmp pop cltd cmp insb lret ret loopne loopne sbb rcrl add jo sahf adc mov je lock fisub movsl addr16 (bad) xor adc pop je push push inc rcrb xchg cmp (bad) fnstsw jae loope jae mov enter jnp jns or or push add daa sub std aas adc or jmp ja cmp or pop mov adc sbb inc pop xor imul inc add (bad) imul int xchg xchg jge pop (bad) fisubl in lods add cmpb dec packssdw inc add pop sub leave mov xlat xchg push mov dec addr16 or push push pop lret mov xor or nop mov mov mov adc sahf cmp sbbb pop sub ds outsl inc or loopne aaa loop lret out es xor out aad sub inc lahf lds cltd pop loopne inc cmp imul fwait push and mov sbb and popa (bad) cmc das cmc and mov call mov sub adc das cltd pop xor repnz push adc div mov pop out xchg cwtl leave das mull jne hlt setae lods mov ret stos pop mov sbb popa dec dec pop sbb mov in mov int3 js xchg out out lea into insl inc in push (bad) sti rorb les (bad) adc (bad) sub lahf push and xchg in cld sbb ja faddl in (bad) shlb cmp cmp popf pop clc jnp sub adc (bad) out xchg or dec fiaddl mov xor cltd fwait push jecxz pop push pusha lret rcr repz jne cmp stos add fsubs cltd or inc (bad) sbb xor (bad) or int sbb mov dec xchg or push arpl (bad) mov (bad) insl ja shlb inc or outsb loop or or lea mov xchg jne sti mov cltd lcall and add dec out or pop clc mov daa mov lds (bad) int3 push xor out scas xchg xchg push mov and push mov sti stos in fidivr jo sti cmc movsb push (bad) cltd insb cs xchg jo popa and jge loope sub lcall xchg sub mov sahf sub movsl stos xabort aas add mov enter in jb inc push lods push loopne mov dec es in cltd add push int mov shll jmp mov enter xchg xchg mov cmpsl cwtl iret push cli xor movsb gs sub es add ss jmp inc inc pop test mov icebp pop cmc xchg jl pushf push je push xchg and outsb cld cwtl jae dec lahf int dec cmp inc jnp sub fidivl stos xchg xchg xchg mov pop mov std imul ret scas adc test inc cld xchg mov imul or call add jg mov dec inc jae ss lock imull stos leave push lahf std in xchg sub cmp test mov cmc sbb sub sub sub push sub test inc inc jecxz (bad) cld les scas pop das cmp fs outsl out dec jbe data16 aad leave mov lds out jg addr16 orb inc ja test jmp add orl movsb inc pushf mov ret inc xchg movsl inc pushf or shrb dec pop fistl ja fdiv (bad) bound cmp icebp cmp fwait and fistpll or inc sub les mov cmpsl pop mov in call bound add inc inc daa and xor mov mov js mov xlat dec add add shlb jne repnz jae sbb pop push xchg lcall insl mov addr16 pop cld dec stc aad mov xor out (bad) and mov cltd push ret fs jns push sub and and add mov lods call aaa mov add stos out jmp dec pushf jg xor lods jno lods clc sbb (bad) fisubl aad hlt adc cli pop push add out jo leave loopne imul pop adc push ret (bad) and lock data16 int mov push in pop pop sbb cwtl leave sub in adc ds js andl jae mov dec and lret lea sbb push pop (bad) stc xor xor das or mov movsl rorl push or mov leave add mov std imul je mov jb test popa mov jns mov sbb or dec sub push mov lds add xchg lods fndisi(8087 inc inc test mov icebp stos mov ret xor xchg lcall inc out test jge adc cmpsl mov fbld mov std (bad) pop mov mov dec sub pop lret push (bad) xor sub das jo dec push xchg fmuls cmp push jne pop push jno hlt fmul or inc fcoml in sub cmc adc adcl cs imul push cmp loopne outsb fidivl mov inc push push add jecxz and push call jp sub xor sbb testl cwtl mov lock in sbb aaa jbe xor int lret and mov xor add or (bad) insl je inc push jle mov or pop or inc in inc test pop inc fildll mov in add repz orl (bad) and int xchg (bad) imul mov sub inc arpl test int mov lock popa hlt inc cmpsb test inc scas cld adc rcrl cmc jl add mov outsb loope repnz leave addl insb jecxz fnop neg mov int sub push pop jecxz jge hlt sbb ljmp std pop cltd daa idivl fimull and adc in cmpsl sbb pop sub jnp in xor mov xor and push push mov sub mov cwtl cld inc and push ror inc scas rclb out scas neg mov push (bad) mov and int3 rol dec mov sarl arpl or jg xchg push out jo dec mov decb scas rcl popf fwait cmpsb push test movsl sti cli (bad) stos mov repz mov add xchg divb lock test mov ret jb or sbb negl cltd xor add jbe add les inc das dec and jle xchg cmpsl or cmp add xchg fwait add (bad) inc add xchg jg rcrb arpl xchg icebp je pop jp xchg mov or fisttpl pop cmpsl loop mov cmc fiaddl sub mov lea and mov cli out test adc dec mov add dec xchg hlt mov push popa and leave repz fsubl movsb mov push xchg in and out jae push (bad) or sar stos sbb mov dec cmp loope cmpsl pop jne xor mov insb xchg test and xor dec cmp jno or add stos or (bad) mov xchg fmull adc mov jmp aam in adc jge or lret push shlb dec test gs aaa add push mov add stos mov call lea hlt push sbb dec sbb lret xor nop and cmpsb imul pop (bad) call fisubrl out (bad) sbb (bad) fstpt or sahf cld mov inc cli cmc sbb xchg mov mov add scas xlat stos test adc push inc ret (bad) or and mov jg adc and cli jmp faddp pushf jecxz leave ds adc pop inc cs mulb jle jp xor iret jg shll mov sub mov shr stos push mov and lret mov jge stc je lret call dec push inc xchg lods push cvtdq2ps js call sbb jo push out cwtl in shrb pusha and sti addr16 xchg mov in cmp inc sbb mov jb cmp cltd lret ljmp ja mov lahf and or pop out mov inc ss and mov pushf add push jl orl xchg add xor cmpsb lods (bad) fucomi jg add imul jae hlt push popa push push pmaddwd (bad) adc fnstenv bound imul sbb pop cli and lods clc fidivl adc add sub lcall (bad) jns mov fstp es xchg mov out scas adc cmp test data16 inc mov mov out dec mov (bad) insl rclb xlat jno movsb pushf rorl lods test mov push mov adc push repz adc repnz mov sbb out pop ljmp les notb xchg mov gs sarl mov adc (bad) lock call push xor aam sbb xor fs sub and jecxz add jle,pt sbb and inc lret loop fadds pop sbb outsb in mov inc lahf inc stc add add xlat sets push insb push jg pop (bad) mov pop push cmp mov lret int3 je stc sub call mov bound push sbb (bad) pop (bad) push dec xchg std xchg lcall cmp pop push inc cli and icebp stos and movsl add bound and (bad) xor add push dec test lcall ret enter jp mov cs xor popw movsb lods nop dec cld cmp sub inc test inc mov ds stos pop sub int adc inc mov pop xor ds push and xchg inc mov and mov jae cmc fst pop and xchg and call push mov ret pop jne xchg inc bound loope test sub mov mov mov aad stos sbb add outsb adc push outsb mov insl xchg imul xchg pop aaa lds cld ror dec sti dec mov (bad) mov pushl or xchg add push xor cmpsb push out out pop push lods adc lock sub jb jb icebp mov mov xchg xlat loopne outsb cmpsb and push movsb setae cmpsb dec out popf push add adc ds push adc adc ss cwtl repz sbb adc cmp insb mov scas ss jmp push cmp xor adc jae int3 sbb cmp subl jmp push fistp lret imul cmc xlat test and add lods ja push xchg out sub daa pusha stc xchg sahf or jl mov shrb pop sbb (bad) cli or leave push rcl dec adc inc fisubl stos xor and or sub mov mov movsb dec pop enter mov fs incb lea into into mov sbb (bad) pop dec adc add mov out cmp aad push inc mov jb cmp mov inc jnp mov mov stos xchg mov xchg sbbl ss add ja adc jb dec test mov mov mov sub xchg and jecxz cmpsb sub aad test punpckhwd ljmp dec push sbb sub loope clc xchg lret and add dec ljmp in pop and jo clc dec and pop es shr hlt cmp adc scas xchg push movsl push (bad) xchg invd mov add mov dec movsl hlt in inc lret test stc into mov pop cmp lods imul xchg (bad) jb (bad) adc pop sub das or (bad) in ret push dec mov pop (bad) loope ljmp xchg rcll or in mov pop sbb jb mov int (bad) mov or rorl mov add lret iret pop jecxz popf mov into sub inc stc and leave leave sub push add jl,pt bound add roll sbb incb in lcall or imul sbb leave fcompl pushf cmp mov adc mov outsl sbb ret dec sub mov sti rcrb mov mov je jle insl rclb xchg shl xchg loop mov (bad) (bad) leave out xor (bad) adc lea icebp ret fucom test mull jo je out or jmp cmp sahf sub sub ljmp push fidivr mov test movsb cmp fbld xchg (bad) iret (bad) push inc (bad) iret fwait sub lds jmp push aaa sub iret ja insl xor mov pusha xor jbe repnz mov xlat pop out fldcw mov mov mov int in icebp shrb arpl push cs leave sub dec iret jnp push dec jmp ret adc decl pop mov fcompl push arpl ss add mov in movsl incl push aaa hlt pop cmp (bad) movsb addr16 clc pushf movsl in loope iret mov bound add sbb jecxz or rcrb dec sub test jb leave in cs inc (bad) ret fs or jp sub imul pop fbstp ret daa fmul cmpsb pop xlat dec mov pop (bad) mov stc jno es push and cmp push addl jnp cs sub int repz enter adc jbe jl xor pusha adc jg xchg ss insl and adc jae push je out mov call mov add xchg lock sub xchg movsb mov testl pop in data16 and mov pop sbb cmpsl mov cwtl or or sub cmp rclb (bad) push cmc pop mov jle addr16 sub mov clc adc sub and jb stc (bad) daa mov (bad) in sarb and add in push pop ljmp xor std (bad) jmp add xor loop adc in scas hlt cmpsb popa dec ret (bad) cmp fdivs sub imul pushf mov pop inc subl aam ja lahf rcr inc mov addl lret mov or push sbb aas int sar lods in sbb rclb xchg rcrl lret push out xchg mov mov and xor les stos pop mov push sub pusha imul mov insl cmpsl push popa das repnz or inc jne jle push xchg xchg mov fldt popa jle jnp test iret and movsl mov cmp loopne or pop out fisubl mov iret inc cmpsb stos mov shr add lock in pusha or mov out xchg pop imul popa mov dec mov jae sub test xchg pop or add or adc aad ret stos dec mov push and xor cmp inc ljmp sub pop dec add xchg lds test in sbb add xchg jne inc inc mov (bad) (bad) stc std andb pusha cmp js andnps dec movsb ja pop jo sbb adc aaa call lret mov into es std out sbb (bad) stc pop out and imul out movsl dec mov ja cmc ss xchg (bad) adc sti jnp (bad) mov repnz adc outsb xlat pop sbb push sahf enter lret jb rep cmp push xor pop call fisub xor add push or fstpl sbb fstpt cwtl jp cmp xchg loop mov sub cmp mov pop cmp push jg mov enter pop arpl fisttp mov or (bad) mov push cmpsb dec testl (bad) xor sbb movsl pop repz push pop push test ficompl mov fwait pop or push and cmp divb cwtl or pop fild adc jne in fstps pop cli push addr16 jo (bad) xchg (bad) mov pop inc pop mov imul clc in inc (bad) xor push popa addr16 lcall out in fild mov leave outsl into xchg push xchg (bad) leave rcrl dec mov (bad) sahf cmpsl push pusha int3 sbb and aaa dec sbb inc (bad) lods adc (bad) xor repnz jnp xacquire imul dec aaa les pop lahf xchg inc lret inc mov (bad) ret or jbe rcll lods and orl dec sti (bad) xor mov mov scas sub and mov cs push cmp cmp and fdivrl sbb xchg jbe out test mov pop inc mov pushf in mov cmp (bad) cmc cmc push cli test lcall test or dec xor jecxz loopne int3 clc lock add xlat mov add mov push nop mov pop xchg pop and cmp lds out xor fmulp addr16 lds (bad) enter mov push mov cmpsb loope mov pop mov (bad) arpl fimull mov sbb je mov loopne lahf pop mov divl dec movsb sub and (bad) cmp adc lea sahf jbe pop daa push and lds sti dec in daa push int jg je imul clc sub call faddl js pushf sbb add xor mov (bad) mov jg shlb sub iret fistp (bad) rcl adc cmpsb movsl fisubl lret enter cwtl sub push (bad) lret inc cld push jecxz xchg sub add lock xchg cltd mov in adc scas sbb inc shrb mov and movsb pop subl jns cmp inc pop jb ljmp cs addb imul sti and jbe mov or clc mov mov jl add push jecxz mov cmpsl call ljmp mov ljmp ret inc mov mov sub pop and xchg jns ljmp mov mov and xor sbb nop mov mov mov pop mov imul fwait pop push subl aas imul sub inc sub test xor enter scas test pushf shrb and ret inc cld popa js xor sub adc sub loopne (bad) in lock movsl aam in jmp sub int3 xor mov jecxz mov shr dec test mov lcall (bad) loopne jns daa dec jno je out in sbb or out stc add jg int3 rorl mov movsb lret push xchg fmuls sahf mov (bad) lods adc cmp out xor sbb loop or add dec out adc and ss mov adc popf push imul test loopne mov fidivrl mov xlat xchg fidiv jns xchg insb test lods call (bad) daa pop xor push add (bad) mov test xchg xchg mov xchg xchg stos sarl jns andl pop xor jl std mov dec jecxz lret pop sti adc sub push sarb insb fadds adc adc jo test or cmc mov cmpb push std push cmp mov (bad) inc xchg push popf movaps mov cmpsb das mov and xchg sbb dec icebp jle push daa pop fisttp loopne mov xchg push int ss sbb ret lods addr16 lock sub imul sub (bad) aas test xchg bound mov gs jge jmp (bad) incb imull mov jg inc push enter (bad) or mov iret jg (bad) loope dec xchg adc xchg mov dec sbb mov out adc sbb and cli mov cs loope fldl aam jecxz in ficomp lock inc push leave cmp push pop xorl dec cmpsl adc push stc sub scas fmull mov dec mov cmpsb scas or into ffreep and xchg out mov cmp leave or dec adc gs test jle push xchg call movsl dec and out enter in jl in add adc cld pop arpl add xor (bad) and sar push popa sbb xor nop dec fisttpll or jl xor and in cmp pop lods int3 mov inc cmp sub out pop push inc jge fcom inc sbb hlt xor roll or jge mov sub dec fldl shrl pop (bad) jae movsl and xchg mov pop std or popa cmp dec dec ss pop lods popa fiadd pop adc xchg adc fs mov jbe push jg mov push aad std int3 mov inc mov out ret adc cmp and fdivs das repnz push ja decb jl mov xchg xor inc adc lods push inc sub movsb inc js addl test cmpsl outsl mov stos addr16 dec fs xchg inc mov cmp mov inc cmpsl fidivr jbe pop adc jge mov rol mov sub dec pushf std cmp (bad) (bad) jae cmpsl sub rcrl sbbl je loop,pn xchg ja addb dec clc (bad) cli mov inc js jns cmc fstpt rcl imul mov lret lret mov addr16 cltd xchg imul xor mov shrd movb popa stc movsb fwait sub or xchg pusha loop repnz mov inc jb popf cmp sub push cmp sub jg dec add pop fwait pop fsubs in int das aas xor test xor in mov jecxz cmp xchg test cs lods pop (bad) popa cmp cld xor inc adc lret in sbb cmpsl mov pop mov jl in mov or scas push fbstp stos imul cmp aad pop pop in dec push xor dec cwtl lods cmp sub jnp sub fistpll jge pop mov insb jge jle loopne insb xchg or push aam sarb lds adc sub pop adc lods hlt jg inc lret ficom outsl or xorb cmc sub aad and dec mov inc and mov rcrb xchg int jmp mov imul lock lahf insl stos in pop mov sub mov inc movsl rorb sbb mulb or clc out std cltd mov push cs pusha jnp or into mov ljmp mov push xchg xor xchg pop lret jbe daa mov shll loopne cs add pop jge leave and xor xchg and mov adc jmp in cmpsl lret push add and cmp mov ljmp enter imul rcrl insb inc push repz and (bad) aas jo cmp addb popa (bad) cli xlat dec nop xorl fiaddl and nop xor aaa add sbbl inc enter pop (bad) scas sti cld mov sub andb mov (bad) fmull dec jae sub pop cmp insl inc fwait dec pop jno pop outsb orl sub ja punpckhdq clc cmpl cmp (bad) cmc sub push imul add inc ret mov test cmpsb mov iret cmp fs imul mov les je xchg or dec mov lods sub leave and mov and lret mov aas std das jae je (bad) mov fistl shrb and mov icebp fsubr add mov in lds xor scas out xor inc adc lock jo daa push int lods mov push shrl rorb loopne stos pop repnz daa mov pop mov xor or push push vmulpd aas jp pop ret add pop js jg ror out xor lds push (bad) push dec out sti or push pushl int jge lcall stos aas das outsl mov mov pop cltd aam lock or sbb inc push xor icebp or leave or jmp pusha ds dec adc mov hlt inc push cld push outsl es push add push loopne xor push idiv pop or (bad) inc and push or fucomi cmp mov pop adc lock add ljmp pushf jo sbb mov data16 inc ja dec pop inc xchg (bad) pushf jle and and xchg jge inc setg push mov aas test addr16 jnp repnz shrl push cmp and pop pop rcrb popa xchg adc rcll in pop ja and add mov out mov jl xchg repnz mov cmc rcrb adc jb sarb mov fidivr adcl adc mov cld cmp rcll mov cmp xor sbb add sbb faddp mov mov cmc into adc and xchg daa dec inc push ret shlb std hlt in scas mov dec jl pop (bad) push mov leave dec ret ret cmpsb push mov push pop in mov out add and imul (bad) movb lea out out and (bad) (bad) mov mov (bad) and mov xchg lea pop or add mov adc sarl cmc cmp inc xor ss cwtl inc mov mov or cwtl push movsb in sub icebp adc pushf ds mov inc lea (bad) cmp push add scas cmp sub icebp popa xchg xchg pushf add leave pusha push jne ret jb (bad) je xchg inc sub mov aad int pop mov shlb inc sti add into sub test or cmpsl sub jg clc jmp xor ret negb mov push mov cltd push iret (bad) adc jle cmpsl pop jle sub nop add (bad) jbe inc or sub cwtl enter faddl mov jmp test sti dec mov push push (bad) fs xor push lret lret aad mov addl das pop hlt ds int xor inc iret loope add mov mov outsb std leave lcall test push push mov fsubrl scas outsl sbb arpl imul mov data16 sbb test icebp sub xor xor icebp cld lahf dec push jecxz xchg cwtl imul pop dec das ror or xchg push in in lret nop aam lret push lods daa jno add xchg ljmp fildll dec mov (bad) push mov push or iret inc add lret andl mov push stos test mov sbb xchg leave adc push mov frstpm(287 mov addr16 out or jne sub divl add loopne mov fldt (bad) aam movsb cwtl pusha inc arpl mov pop push out cld xor push xchg push outsl dec push lcall decb (bad) pop pushf sub adc sahf xchg popa adc imul mov es into fdivs mov xchg cmp aam pushf hlt sbb mov fs pop (bad) icebp jnp std fstps xchg loope xchg outsb adc push inc test rclb or outsb outsb ja fstl scas dec xchg jns xor pop jnp mov sub fwait neg mov inc repz mov daa jle stos sbb cmp push lret push adc mov scas mov mov je xchg aad lcall hlt jo sub push push call or dec inc cld pop xor push int or sbb add jmp repz popa fstps lret test iret into xchg xchg gs cmp jl jno jecxz mov ja leave pop daa movsl out gs icebp pop cltd mov and mov adc in out jns and addr16 xchg cmp sub push mov lock jno pop push mov daa jle mov mov mov inc iret sub pop sbb (bad) sbb push xor mov outsl xchg push out daa call daa cs out stos mov mov inc and repnz push andb xor add (bad) aaa fsubr cmp das cli cwtl jl push push dec lcall push sbb movsb push add rclb xor jnp mov dec inc aaa mov xchg push inc jne popf andl lcall sbb add sub daa adc fld out sbb aam xchg push idiv lds movsb dec jge sbb xchg aas dec aaa jmp (bad) (bad) sbb jp insl js lds popa sbb add stc mov mov out rcrl jg push sbb sbb mov dec dec scas xor hlt scas imul pop dec das push mov pop sbb push (bad) fld mov scas fildll fwait insl push xchg out sub sarb clc and xlat dec adc xchg and sub inc cmp lea mov jae mov jle pop sub ja and sub lret pop sbb call jno jno mov insb iret xor xor cmpb push xchg jnp (bad) sbb mov mov jl xor daa mov idivl int dec in (bad) ljmp cmp push bound (bad) fcmovbe mov (bad) xchg mov outsl mov lods push mov bound ljmp idivl cli sbb sbb cmp mov mov cs (bad) je lods pusha fbld addr16 rol inc push jae fstps mov std push mov pop xchg mov stos sub pop stc in imul pop fisubl mov jno lret movsl scas cmp xchg sub (bad) in fmul cmp int fnsetpm(287 and inc push sub mov imul pop inc add or dec lahf pop or sbb jbe incb lcall add js add call mov fstp jbe in cmpsl stos movsl xchg push lods pushf insb mov (bad) push push test xchg or sbb dec ljmp das fwait clc adc hlt sub push loope xor jno ss mov ss xor int jmp aad or xchg cmp push sbbl cwtl xor (bad) cmpsb (bad) xrelease mov dec push loope pop mov lret xor jne popa mov cwtl mov cli mov lahf aad sbb cli jp aaa sbb mov cli insb mov cmp ret push stos xchg mov xchg stos mov es arpl pop lds scas ljmp ret xor xchg mov aad xor pop mov mov xor leave mov lahf xchg pop lret faddl xchg mov mov and push decl (bad) clc cmp push sbb jne aad adc arpl out jge int3 cmc imul push fcomp push add js das gs cmp jmp (bad) icebp rolb or or (bad) (bad) xlat cmp dec mov xchg and js js pop jne xor jg int sub out (bad) or mov add dec adc (bad) or popa nop push dec jbe sub push daa outsb xor add xchg mov push jge xchg lea and mov xor mov pop pop adc in sub jecxz popa lret (bad) movhps jle adc inc dec sbb dec iret js je mov les stos mul dec testb cwtl sub outsl push sbb lahf mov call xchg sub aad stc adc mov jne in daa js push es mov ret movsl lods push xchg iret rcll mov (bad) xlat pop inc enter push sub (bad) mov test xchg hlt mov ret pop mov ds and js shll jl jp cmp cmpsb lock mov fs sub mov stc in lea jle jmp push outsl mov sbb leave in dec push jne push inc lods sahf je jno (bad) and out (bad) dec add int fistpll stos test imul jno rcll xor push ds pop cmp scas js lock adc mov add pop outsl and xchg nop inc push (bad) lret enter test ret cmp xchg adc icebp inc out sub sub ljmp pop sub jnp sbb leave sbb dec push out xor pop mov cmc xchg xor and cmp jno jnp push dec xchg mov xor or mov mov (bad) loope and cmp les lock pop mov push push int3 leave repnz pop jnp jp int and jns and (bad) jl or mov dec pop test cmp (bad) rolb arpl pxor es clc add out clc inc xlat sub mov les call xlat xchg pop pop xchg inc inc mov popf lret in push mov xor cli adc (bad) mov pop cmp sbb and xchg (bad) call pop add movsl dec pop xor bound and and test add cmpsb sub stos rcl fsubs addl in mov lcall dec add mov test or nop dec mov outsb sbb pop sub dec xchg dec pusha bound xor shrb sbb into pop or mov (bad) ret jns mov lods int fmul adc push pop mov xchg lret cmpsl adc fbld jo adc cld (bad) pushf jp xchg push adc ret cwtl dec mov test loope nop pop iret outsl shl sbb push inc mov jo or (bad) gs pop movsl sub xor movsl jno sbb clc cmc jg mov add pusha lds push push jmp imul (bad) mov stos loop loop dec and (bad) adc sub roll push sbb mov jp add in out dec push and jp test cmpsb imul dec repnz insb xor sti stc jmp sub and fildll xchg mov ret enter dec aad negb xchg out (bad) fnsave outsl cltd sbb sub jmp sbb adc fwait and es push call fs and xchg jno lods pushf xor fidivr push adc sarb enter xchg and inc sbb mov or and test fbstp mov iret loope xor bound or push rcrb push jg mov test (bad) daa xor daa (bad) nop gs mov ljmp jmp mov negl js dec xchg cvtpi2ps aaa call in popf lret inc pop xor jle fldt pop inc dec jns dec adc into xchg int3 push inc bound add jnp ss push cmp jo scas js sbb rcll xchg dec sub addr16 pop sahf add dec or adc out shrb outsb push cmp mov dec in jg and das adc dec mov int3 and jmp xor pop lcall cwtl out (bad) std dec test in aas cmp mov mov adc out jmp outsl (bad) dec cmp add xchg or mov ljmp pop mov jnp adc out pop out jno es mov sbb pushfw (bad) int3 jnp jo daa mov jg lret push add iret rcll fiaddl mov mov jp sub and cmp mov cmp jae stos cmpsl jae adc js dec pop inc xor sti rclb sub fist scas inc outsl xchg lds lcall jp fstl jbe jg mov jg push xchg stc jb inc mov cli pushf sbb or mov lahf xor out mov jo test mov shrl rcrl into mov sti and xor xchg inc sub fistl jae mov adc andl scas es pop mov sbb out or and pop sbb sub mov mov jbe cld fwait and push mov addr16 push inc xchg sbb push out push xchg add push cs mov inc int3 adc xchg mov mov inc fcmovb sub lahf aad lcall fmuls nop bnd je mov jmp and or sub aas and mov stc fdivl jno icebp mov mov xchg cwtl pop rcll sub mov jae mov int3 addr16 xorl test aad loop jbe iret cltd lcall out and mov sub mov movsbl je sub arpl adc xchg clc mull incl rorl add (bad) hlt ds inc push jbe or jne mov jb xor arpl mov mov call pusha or imul xor pop adc stos ret (bad) mov push mov addr16 inc mov mov shll inc mov pop jle xchg xchg inc (bad) (bad) dec jo shlb xor clc test add sbb into xrelease and loope xchg jb (bad) dec and sub in dec lds stc adc out push gs jno scas jo inc dec adc or pop in jg ficoml in out add (bad) and pop (bad) mov adc jae adc xchg xor cli fcompl aad xchg inc ret (bad) int cwtl aaa xchg dec fisub lea imul pop xchg mov pop and mov mov mov mov stc cmp add scas mov and outsl dec cmc bound pop cmpsb cwtl jmp decl pop inc (bad) pop adc xor cmpsl and and (bad) mov push loopne js ret xchg (bad) xchg cmpsl cmpsl scas dec sbbl hlt cltd cld subl fsubl es xor adc fsubl aam sbb inc pop cmp add mov aam sarb lret pop cmpsb (bad) insl nop daa out cmpl aaa (bad) gs inc out sti xor push or dec call cld int inc xchg mov ja push fld cmpsb data16 pop insl leave sbb dec jb ror push jecxz (bad) or mov and aaa jl (bad) mov movsb push dec das mov sbb mov iret (bad) lret push scas js outsb dec lret clc mulw popa aaa push xor xchg jl dec fld jb push shlb push cmp adc add or jae popa repnz roll mov (bad) sti jns xchg or loop hlt inc push mov sbb dec mov out popa sbb sbb sbb int3 clc pop mov movl mov out and mov insl push arpl insb jg arpl sbb xchg sbb jne jnp sbb push inc cmpsl rorb add shll ja jge pop mov jo aam sub outsl loop push cmp int frstor imul mov enter out add pop inc pop push and mov inc sbb xlat mov arpl inc add adc addr16 inc sub jecxz lret fwait les mov iret xchg cld dec les addl icebp adc scas push rcrl xlat dec and outsb clc ljmp or pop pop fwait (bad) add (bad) pop adc push repz or dec pop iret je lods scas jne push mov repz sub push pop pop stos in add jns cltd xchg dec imul sbb push xchg sub (bad) ficom adc and mov dec clc out popf leave enter testl xchg popa aas mov mov or popf xor push add push out loop ljmp lahf pop add (bad) fiaddl and xor (bad) ficoml xor insl cmc nop aaa xchg xchg scas int3 loopne xchg mov xchg test mov mov jns mov movsl jp mov loop cmp lods jp mov repnz incb pop insb mov xchg push sbb jno xchg adc mov lret (bad) mov popf and or loop fisub dec mov jbe jnp cwtl fist pop pop cmpsl jg test sar lret pop mov std dec mov ja cld movsb xor jl lcall popa adc sub lea pop xchg pop testl mov hlt (bad) xchg xchg pop pop or iret mov lret (bad) and subb adc or (bad) xchg leave mov and cmc sahf call fbld dec or cli xor xor xchg loop aam adc jge sti int3 repz lods xchg shlb movsb jl adc enter mov dec mov dec stos repnz test mov inc fcoms cwtl cmpsb (bad) fidivr ret cmp test mov pop (bad) pop pop cld jmp outsl out mov and rorb lea or aam dec and lods ja lea je jns mov insl push mov jo xchg insb subl in or mov not mov sahf movsb push jecxz out mov arpl int3 pop pop sarl or test jl (bad) dec mov stos or and (bad) loop sub lahf icebp hlt and jno jae cld repz mov jecxz or sbb neg je xchg (bad) roll loop (bad) aam jmp sub rcrb xor call nop mov inc aam lahf push out jl ja aaa inc jp test arpl repnz cmp outsl insb dec xchg mov xchg pop shrb xchg mov scas lock ds out mov pop or movsl in sbb mov push pop push push xor inc push (bad) leave jle xor sub or mov pop pop adc and popa data16 jecxz dec sub pop in pop outsl pop or aad fxch or add dec mov push out movsb frstor ffreep push stc fidivrl xchg or aaa movb push pop dec dec fwait jmp inc loop inc cmpsl or fwait cmp jne adc mov dec jle mov imul push pop jno sarl jg jecxz hlt in stos jns test mov jecxz add push roll push bnd xor xor rcl and imul pop (bad) hlt pusha push arpl scas sub pop stc xchg jl adc inc (bad) lahf or out mov jne fistpl pop clc add ret test into in ret mov adc and add xor jecxz jb in cmp sub loope inc lods pop outsl mov cli aaa dec sbb push test insl cmp add dec cmc (bad) jecxz int3 imul or xor pop sti mov mov xor aas jne negl nop pop or (bad) (bad) sarb clc or cmpl lea dec or mulb cs fldt sub mov pop mov test test sub jnp adc cltd push clc loopne js push or xchg aad test mov sbb leave push xchg movsl jbe dec in test push out cmpsb dec repz scas mov push or hlt add cltd mov gs jne call push cmp les jle or cmp js in test jno call stos int3 mov and xor xor push jbe out jbe sub lret addr16 fsubrl scas mov xor mov in push ljmp push sbb adc out in call les movsb lea push cmpl dec sub inc popa dec add loopne mov nop mov std inc xabort cmp dec addb xchg jl test popf out xchg or cmpsl add push outsl or fld1 inc cmc pop add mov push imul rcll repnz adcl and aaa fildl add push gs jnp mov movsl fimull je sbb cmpsb incb xor insb jp or fild mov xor xchg mov outsl sbb pusha jecxz mov adc push loop or pop cwtl andl loop dec shlb mov pop sbb sbb jle push mov jne push add (bad) sub aam loopne and sahf add repz hlt sub mov cld push jge mov outsl test (bad) mov sub (bad) test stc dec mov add mov dec les pop dec add pop adc xchg icebp sbb arpl push into adc into adc int gs jno cmp data16 ja imul test pop stc dec push cmp dec pop sub cmp mov fwait dec fiaddl enter cli movhps ljmp xchg pop xchg adc sti sbb xor sbb in fs and sub jg mov fnop jg icebp je jne rol std xchg xor std cmpsb push das in sar push jg iret subl cmpsb inc sar jg mov pusha pop pop mov pop xchg (bad) hlt pop jecxz fstpl mov je test sti mov xchg jns gs pushf pop or test in imul fwait inc cmc orl cmp xchg mov clc mov dec add aam popf cmp popf sub sbb scas push pop dec les fbstp add cmp ret jge rolb xchg lret add jecxz mov add add push or sub mov in push xchg dec outsb or daa mov (bad) fimul xchg mov stos fdivl js mov lock icebp lgs mov das mov dec cmp mov mov popf (bad) mov jl xchg scas fisttpll dec mov ja pop addr16 sar test pop pop jo sbb (bad) jno pop jecxz nop (bad) mov cmp outsb mov inc inc jb xchg mov inc mov les pop (bad) xor adc aad stos dec lret into (bad) sub mov push pop sbb cmp test fldenv inc or hlt addr16 mov cmpsl loopne xchg dec pusha add popf aad iret hlt mov cmp pop popa or cli aas ljmp sub add loop sub sbb insb loope push or inc repz fmuls pushf fsubs fisttp nop mov popa iret sbb out leave and (bad) fstpt jb inc cltd mov popf jg pop lcall hlt fisttpll cmp test es xor movsb js jp aas cltd xor addl std imul rol pop push scas pop int3 xchg in outsl pop out and imulb dec aas (bad) stos pushf jecxz aaa daa push fwait imul or cs jae jb adc loop adc (bad) loop sbb fstenv xchg addb lods push aas xor nop (bad) dec in (bad) (bad) lock stos inc sub push insb test push cwtl pop cli cltd popf call enter sbb add jne add cmp xor sti xor fiadd enter call xchg mov or mov mov (bad) aaa vmovdqu data16 and lcall je sub mov xchg sub mov (bad) stos setnp subl mov loop leave (bad) adc pop fbld inc sub mov jp push into movb and aaa int ds xchg shll lods xor imull or and sbb or xchg adc (bad) jbe inc push repnz mov mov add mov fwait repz enter das mov mov aas clc loopne jmp push idivl fstpl push sub outsb mov sub mov fs sbb and paddb test lods outsl and pop cli add ljmp call fstl inc pop dec lret add fisubl add outsb jl rol add cld push fcom subb sbb cmpsb mov mov lods xchg in xchg insb ss cmp cmp out mov dec cmp fs or cmovp scas test adc lock dec imul loopne mov inc xor xor or (bad) adc add push shlb (bad) mov outsl sbb mov sbb insl out std mov sub mov add loop push mov pop fsubl les mov (bad) inc ret jmp test and jmp stos in ss adc movsb daa mov and pop ljmp (bad) ficomp outsl fistp insb repnz sub pop lds sar mov mov gs inc add mov sahf fcoml es mov mov dec outsl pop imul arpl xor and stc daa (bad) xor test popa add std leave arpl mov xor jne cmp inc mov or xor sbb in mov ds (bad) mov cmp je add dec add xor jbe stos out fldenv xlat pushf xchg lods add movsb incl test dec sti dec stc in cmp adc pop cli stc push outsl cmp inc cs dec xchg adcl test pop adc addb and in and or in je in cmpl je aas movsl in adc dec lods ficom cmpsb dec arpl (bad) mov add mov pop stos or push shr pop aas add xor in inc (bad) pop dec stos pop js in push in aaa pop sbb or enter mov lods iret lods in ss leave idiv adc icebp xchg icebp aam dec out je lcall mov sti jg cs xchg stos jno mov xor aas repz push packsswb mov js arpl sbb dec mov ljmp (bad) sub lahf jns out out leave (bad) adc xor dec push mov out mov mov ja adc (bad) fcomp jae nop jp mov lds pushf popf dec outsb cmp inc jl dec mov push mov push and cltd insb loop xchg sbb pop and fbstp jbe jbe sub ljmp nop enter (bad) fs iret pop lds loope fisttp cwtl dec inc xchg hlt (bad) push das mov ss cltd add add cmpsl in dec sbb movsb dec movsb enter nop popf xor xchg cmp inc mov call adc cli int3 mov mov scas sub xchg das xlat xchg sahf cld jmp cs pushaw mov inc lods dec sbb inc stos dec and outsb subl faddp dec leave and mov push jae (bad) out push push jns cmp mov inc nop xorl int3 and jb fwait mov dec pusha or repz push and fldl bound outsl lods xchg lds out out cmp dec dec nop dec push pushf or repnz or (bad) (bad) jmp adc and ret inc das cltd lcall outsb arpl aas add bound jb repz jne jns rcr xor loopne cmp fstl pop and mov dec sub jns push push js orb mov pop mov scas call ss cmp shr cmc iret xchg fsts xor inc in aaa enter test xchg push push adc (bad) repnz sbb je mov xchg and es pushf xchg pop jo xor inc inc repnz into xchg and push jp (bad) mov jge dec stos xor jl sbb sub mov ds out xchg sub dec cmp xor cmp push outsb repnz lea test dec hlt adc imul gs sbb pop jbe (bad) push push das mov xlat inc xor adc mov jmp inc xlat dec or hlt jge mov lret je mov mov outsl inc cmp push fnop ds repz inc stos (bad) stos (bad) push mov ficom sbb xorl hlt outsl leave iret outsl or stos testb push sarb cs je xor sarl pop mov ret leave or ret jae movsl clc test inc in push jnp loop sarl hlt xchg stos lcall mov arpl lret sub loop cmp push les loopne ds lock mov rcll scas xchg sahf cmpsb push mov (bad) pop or in fnop insl inc sbb inc mov lods movsl lret xor (bad) cmc mov pop es mov (bad) sbb mov inc cmc das pop lret add or pushf enter out shll push mov int inc gs mov negb aas in add xorl shl cmpsb mov call imull stos pop adc jmp fwait xchg inc jmp or test xchg in lret inc mov lods pop mov lods lock pusha add fmul push mov sub add ds mov iret int3 push xchg cmpsl sbb dec or dec out fidiv inc addb imul jmp add jmp jb mov push jp (bad) sbb add (bad) out cmpsb push cmp cmp pop xchg xchg loopne xor push inc in inc fsts mov mov xor mov pop mov dec jno out or or dec inc lods std enter cwtl (bad) in mov loope sbb sub xor cmp out into xor pop hlt ret dec adc outsl xor ret negl inc dec in mov or xor rol push mov pop icebp jmp rcrl ss (bad) call mov scas add jmp fidivl lcall jp mov push cwtl cs fisub inc mov adc adc and mov loop cmc mov dec repnz mov cmp jge hlt push loope mov into iret aam sarb lods cmp ror fwait aam push int3 popf inc mov flds inc int3 jae sub mov push adc outsl add pop js dec cs je sbb (bad) cli xorb dec mov dec xchg rorb adc ja or repz stos ja sbb clc adc (bad) push mov inc sub jecxz cmpb jns jae mov orl stos xor outsl add xor loopne pop push pop adc xchg imul sbb popf pop je jle mov rorl inc xchg in fwait fs add jp mov mov (bad) (bad) dec fldl mov in xchg sti insl xchg or std out xchg or out scas jg ficompl inc leave cmp adc test fwait call jge xchg inc test pop jo not push sbb fimull int leave inc je out adc testl out cmp add icebp repnz pop dec push push sub dec pop xor xor mov rorb push clc f2xm1 add push dec test xchg loopne mov cmpsl dec pop int3 sbb mov xchg cli lret pusha lret nop adc dec push mov and push jne ficomp jo data16 mov stos dec sahf dec pop negb int3 xor fcompl int nop jne hlt jge sbb pop pop sbb push mov and and cmc movhps sbbl jg movsl add stos mov xchg lea mov outsb push mov sub or mov in dec pusha add mov cld add push push fsubs add movsb pop fdivrs (bad) fcompl sbb mov mov jl xor popa xor aam sbb popf lock xchg add pusha mov lea push mov lea xor push cmp jne inc inc push push push add push push push add push push movl nop nop nop nop nop push push push push sub mov movl movb mov lea mov mov movzbl mov shl mov dec mov movzbl shl dec mov mov movzbl movl movl movl mov mov movl movl movl movl movzbl add shl lea cmp jae mov movw add loop mov xor movl mov add mov xor cmp je movzbl shl inc inc or cmp jle mov cmp jae mov and mov mov shl mov add cmpl lea ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub mov sar mov lea movzbl mov mov and mov shl mov sub sar add imul cmpl lea mov jle mov sub mov movzbl mov shll mov lea mov and cmpl lea mov lea ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub mov sar cmpl lea mov je jmp sub sub mov lea shr sub cmpl mov je cmp jle jmp cmp jg lea mov add cmpl ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub mov sar lea mov jmp sub sub mov lea shr sub mov jmp mov mov mov mov mov inc cmpl mov jg movl jmp cmpl jg subl jmp subl jmp mov sub mov sub mov shr sub cmp mov mov lea mov ja cmp je movzbl shl shl inc or mov mov shr mov movzwl imul cmp jae mov mov sub mov sar mov lea mov mov mov mov mov mov mov xor cmpl setg add lea mov jmp mov sub sub mov shr mov sub cmp mov ja cmp je movzbl shl shl inc or mov mov shr mov movzwl imul cmp jae mov mov sub movl mov sar lea mov mov mov mov shl add cmp lea ja cmp je movzbl shl shl inc or mov mov shr movzwl imul cmp jae sub sarl mov mov cmpl lea mov je xor cmpl mov mov setg lea mov mov sub mov mov mov inc mov jmp sub sub mov shr sub mov jmp mov sub shr mov sub sub cmp mov ja cmp je movzbl shl shl inc or mov mov shr mov movzwl imul cmp jae mov mov sub mov sar lea mov mov jmp mov sub sub mov shr sub mov cmp mov ja cmp je movzbl shl shl inc or mov mov shr mov movzwl imul cmp jae mov mov sub mov sar lea mov mov jmp mov sub sub mov shr sub mov mov mov mov mov mov mov mov mov mov xor cmpl mov setg add lea mov cmp ja cmp je movzbl shl shl inc or mov mov shr movzwl imul cmp jae mov mov sub shll sar movl lea mov mov lea mov jmp sub sub mov shr sub cmp mov ja cmp je movzbl shl shl inc or mov mov shr movzwl imul cmp jae mov mov sub shll sar movl lea mov mov lea mov movl jmp sub sub mov mov shr movl sub movl mov add mov mov mov mov lea mov add cmpl ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub sar lea mov mov jmp sub sub mov shr sub mov lea mov dec mov jne mov mov shl sub add cmpl mov jg addl cmp mov jle mov mov shl movl lea mov mov lea mov add cmpl ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub sar lea mov mov jmp sub sub mov shr sub lea mov mov dec mov jne lea cmp mov jle mov mov sar and lea or cmp mov jg mov shl add mov lea sub add mov jmp lea cmpl ja cmp je shll movzbl shl inc or shrl add cmp jb sub or dec jne mov shl mov add movl mov movl mov mov add mov add cmpl ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub sar lea mov mov jmp sub sub mov shr sub mov mov mov inc or mov shll dec mov jne mov inc mov je mov mov add cmp ja mov mov sub add lea mov inc mov mov inc incl dec je mov cmp jb jmp mov cmp jb cmpl ja cmp mov je jmp mov jmp inc sub xor mov mov mov mov mov add pop pop pop pop add add xor lea mov push cmp jne mov xor pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add movsb xor inc adc add add add add add add add add sub add mov add add add addb add add add add add add or add add js add mov add add add addb add add addb add inc add addb add push add add add add add add add add add add add nop add add add add add add add add add add add add mov add add in add add add add add add add loopne add test add test add in add add add add add add add or add xor add in add add add add add add add xor add fcompl add in add add add add add add add pop add add add test add in add add add add add add add addb add dec add test add in add add add add add add add test add mov add add add add add add add add add fadds add add add add add add add add add add add lock add add jbe add in add add add add add add add sbb add mov add add in add add add add add add add inc add addb add add add add add add add add add pop add add pop add jl add in add add add push add add add add add add add add addb addb add add addb add addb add incl add add add incl incl add incl incl (bad) incl add (bad) incl stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos ja ja ja ja ja ja ja ja js mov mov mov jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo ja ja ja ja ja ja ja jo mov mov mov inc inc inc inc inc inc inc inc add add jo inc inc inc inc inc inc inc inc inc dec orb inc inc inc inc inc inc inc inc dec orb inc inc inc inc inc inc inc inc inc inc inc inc inc jo mov mov mov ja ja ja ja ja ja jo stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos push in add add add add add add add add add addb addb add add addb add addb add incl add add add incl incl add incl incl (bad) incl add (bad) incl stos stos stos stos stos stos stos stos ja ja ja ja js (bad) (bad) (bad) (bad) pushl (bad) (bad) (bad) (bad) (bad) pushl (bad) (bad) (bad) (bad) (bad) pushl (bad) (bad) (bad) (bad) (bad) pushl (bad) (bad) (bad) (bad) (bad) pushl (bad) (bad) (bad) (bad) (bad) pushl (bad) (bad) (bad) (bad) (bad) pushl ja ja ja jo inc inc inc lock inc inc inc inc inc inc jo mov jo ja ja ja ja stos stos stos stos stos stos stos js add sub add xor add pusha add add add add mov jnp xchg add add add push daa add dec and cmpsl push and cmpsl push and add push add inc add and stos push and test and test and xchg imul mov push add pop and lods pop and mov pop sbb mov sbb mov sbb mov sbb add pusha sbb mov adc les add fs mov insb or lret imul leave imul add imul add mov mov bound add je add jae add pop add stos pop add mov jb add jbe add jo add jno add outsl or (bad) jo add js add outsb or mov ja add outsl adc (bad) je add jns add jge add mov enter ljmp add movsb push add mov addl (bad) jno add arpl add arpl add je add jne add je add jb add push add add mov pop add stos pop add stos pop add fnstenv add jbe add je add jne add je add add stos pop add fnstenv add jne add jbe add jne add jno add outsb add lret add jbe add ja add jne add jbe add jne add ja add jbe add ja add ja add jbe add ja add js add js add jns add jp add jp add jp add jnp add jns add ja add (bad) sbb les ret add nop daa add nop sub jmp sub jmp sub in xchg sub add xchg cs xchg xor in xchg xor in xchg xor in xchg xor in xchg xor in xchg xor fisttpl add cwtl aaa add lcall in cltd cmp in lcall in pushf ds pushf cmp add popf aas add sahf inc add lahf inc add lahf inc add mov dec add mov push add test movl in (bad) incl lock incl hlt (bad) incl clc (bad) incl stc (bad) incl cli (bad) incl sti (bad) incl cld (bad) incl std (bad) incl (bad) (bad) incl inc jo add mov (bad) (bad) incl jae jae jo jo imul add pusha add pop add pop add pop add pop add pop add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add add add add add add add add add add add add add add add add add add add add push add mov add or or add add add add add add add add add add add add add add add add add add or mov stos lods stos stos stos stos test test lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods stos stos cmpsl or stos lods lods lods lods lods stos stos lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods pop mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods adc lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods stos movsbl lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods sbb lods lods lods lods scas scas lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods pop mov scas lods scas scas scas lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods adc mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods scas sbb mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods scas sbb mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods scas and mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov and mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov and mov lods lods mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov mov mov lods mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov mov mov lods mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov mov mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov mov mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov lods mov lods mov mov mov mov mov mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov es mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov aas mov mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov cmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb inc mov xor xor pop pop insl pop insl insl xor xor xor pop pop pop xor pop pop xor mov pop das push cs xor xor push push xor das pop push push xor xor xor xor xor pop push cs dec inc das inc inc xor adc push xor push push popa jbe cmp jl jge jno outsl addr16 pushw dec dec (bad) jnp dec jo mov inc xorl mov xchg xchg xchg popf pushf fwait lcall cltd cltd xchg mov test xchg xchg sub mov jns dec dec dec dec dec dec push bound jb jb js js js js jb imul dec dec dec dec push jne je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add pop add (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add cmc add sub add and add inc add add add add xchg add add pop push dec add dec and mov dec and cmpsb push sub movsb push sub js xor jle xor ja xor ja xor jb add xor mov add add dec add dec and movsb dec and mov dec and mov dec xor jo add dec add insb inc add xchg jae (bad) xchg jp mov inc add mov aaa add xchg jno lret add dec add pop add inc add lahf inc add lahf inc add lahf inc add sahf inc add mov insb add outsb add xchg jae pop push dec add dec add cmpsb dec add movsb dec add (bad) jae add jb add jo add pushf push rorb add lcall pop push dec add dec add mov add ja add jbe add sahf push add imul add jnp add jp add js add mov data16 insl add shrl add insb add shrl add outsb add shrl add outsb add iret push add insl add lret imul (bad) jno add jge add jg add xchg add mov add xchg aaa add popf aas add mov cmp in inc add mov bound out arpl loop bound loopne bound iret outsl add mov jno add jb add js add jg add orl jecxz or add jp add jnp add jp add jne add adcb faddl push add adcl add (bad) pop add sbbl faddl sbb fldl add test add test in mov add xchg add nop and fldl es xchg daa add xchg sub lock sub out xchg sub add xchg das add xchg das add cltd xor lock xor cmc sahf xor add lcall lock aaa add fwait cmp lock cmp lock cmp add lea add cmpsl push add scas jo test sahf add pop add shrb add iret mov fmul mov fmul mov (bad) int add (bad) mov fcmovbe mov add sarb add sarl add fadd add (bad) add (bad) incl stc (bad) incl cli (bad) incl sti (bad) incl cld (bad) incl std (bad) incl (bad) (bad) incl cs add (bad) incl addb add pusha add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov or or or or or or or or or sbb es adc push adc adc push add add add add add add adc adc mov sbb mov mov mov scas mov mov mov mov mov mov mov mov mov mov adc mov mov mov mov mov mov mov mov mov mov mov mov mov adc mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov and mov scas scas mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov mov mov mov mov mov mov mov mov mov aas and mov mov mov mov mov mov mov mov mov mov mov mov mov ds mov mov mov mov mov mov mov mov mov mov mov mov mov cmp mov scas mov scas scas mov mov mov mov mov mov mov mov mov mov cmp mov inc mov mov mov mov mov mov mov mov mov mov mov mov mov mov inc mov inc mov scas mov mov mov mov mov mov mov mov mov mov mov mov inc inc mov dec mov scas scas scas mov mov mov mov mov mov mov mov mov scas scas mov dec inc mov dec mov scas scas scas mov mov mov mov mov scas mov mov mov mov scas mov dec xor mov mov mov mov mov mov mov scas mov mov mov mov mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov mov mov mov mov mov mov mov mov mov xor test cmpsl cmpsl cmpsb cmpsl cmpsl cmpsl cmpsl test test cmpsb cmpsb test mov mov mov dec xor sub sub sub sub sub sub sub sub sub dec and inc mov push push push push push push imul push pop push push push imul das mov imul xchg nop cltd mov mov nop test insl popf mov xchg jns jle addl jno outsl outsb pushf mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec std add sub add adc add and add add or jl push add cmc repz dec xor mov push aas add xor xchg pop cmp test add mov add mov inc add mov repnz inc add gs add mov popf add ret pushf add mov or mov arpl mov arpl add jae add js add xchg add mov repnz test scas xchg js in and out es nop sub out sub out sub out sub out sub add xchg das add xchg xor jecxz xor in ss lcall out leave add fnop add cmc repnz fidivrl add fst add fmul add fcmove add loopne add fst add (bad) std add (bad) incb cld (bad) incb cli (bad) incl sti (bad) incl cld (bad) incl std (bad) incl (bad) (bad) incl (bad) (bad) incl xchg xchg xchg add jg jle jle jge jge push push push push push push push push push push push push push push push push push dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec add pop pop pop pop pop pop pop add push dec or adc cmp adc adc adc add or dec dec dec inc inc inc inc inc inc inc inc dec dec or dec inc inc inc inc inc inc inc inc inc inc inc inc or pop dec inc inc inc inc inc inc inc inc inc inc inc inc cmovg dec inc inc inc inc inc inc inc inc inc inc inc inc push dec sbb inc inc inc inc inc inc inc inc inc inc inc adc inc inc inc inc inc inc inc inc inc inc inc adc sbb dec dec dec dec dec dec dec dec dec dec dec adc inc ds aaa cmp cmp cmp daa and sbb sbb and add dec ss xor sub sub push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push (bad) pushl mov add mov add mov add mov add mov add mov add mov pushl mov add add add add add add add add and add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add cmpsl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add mov push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa call push daa jmp push daa jmp push daa incl add cmpsl add add mov push jmp daa jmp jmp jmp daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa incl add cmpsl add add movsl push es (bad) cld out clc (bad) (bad) (bad) clc (bad) (bad) (bad) clc (bad) (bad) (bad) stc (bad) (bad) (bad) clc (bad) (bad) (bad) clc (bad) (bad) (bad) clc (bad) (bad) (bad) clc (bad) (bad) (bad) in (bad) (bad) push (bad) (bad) push (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) push (bad) (bad) (bad) clc (bad) (bad) (bad) (bad) cld out movsl push incl add cmpsl add add cmpsl push and (bad) clc (bad) (bad) (bad) clc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) clc (bad) (bad) (bad) clc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) jmp add cmpsl add add test and stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) ljmp add cmpsl add add stos push and cli (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) clc (bad) (bad) ljmp add cmpsl add add lods push and cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) ljmp add cmpsl add add scas pop pop (bad) sti (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) sti (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) ljmp add cmpsl add add mov push (bad) sti (bad) (bad) (bad) sti (bad) (bad) (bad) sti (bad) (bad) (bad) stc (bad) (bad) (bad) sti (bad) (bad) (bad) sti (bad) (bad) (bad) sti (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) pushl add cmpsl add add mov sbb (bad) sti (bad) (bad) (bad) sti (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) sti (bad) (bad) pushl add cmpsl add add mov sbb cld (bad) (bad) (bad) sti (bad) (bad) (bad) cld (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) sti (bad) (bad) pushl add cmpsl add add mov (bad) (bad) (bad) cld (bad) (bad) (bad) std (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) sti (bad) (bad) (bad) mov add cmpsl add add mov (bad) (bad) (bad) std (bad) (bad) (bad) std (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) std (bad) (bad) (bad) mov add cmpsl add add mov (bad) (bad) (bad) std (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) std (bad) (bad) (bad) mov add cmpsl add add mov (bad) (bad) (bad) std (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) std (bad) (bad) (bad) mov add cmpsl add add mov (bad) (bad) (bad) std (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) std (bad) (bad) (bad) mov add cmpsl add add mov (bad) (bad) (bad) std (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) std (bad) (bad) (bad) mov add cmpsl add add mov (bad) (bad) (bad) std (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) std (bad) (bad) (bad) mov add cmpsl add add mov (bad) (bad) (bad) std (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) std (bad) (bad) (bad) mov add cmpsl add add mov (bad) (bad) (bad) std (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) std (bad) (bad) (bad) mov add cmpsl add add mov (bad) (bad) (bad) std (bad) (bad) (bad) std (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) std (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov add cmpsl add add shlb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc fs add add les (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc addr16 add add les (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc addr16 add add les (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc addr16 add add (bad) push (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc imul test enter (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec imul lods add add lret imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec imul add add int or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec insb or pop pop pop scas add add iret outsb or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec outsb or pop pop pop scas add add shrb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jo call pop pop scas add add aam push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jno call pop pop scas add add (bad) jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call ja call add sbb mov add lods pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add lods pop add mov add decl or add add mov data16 mov arpl (bad) mov arpl (bad) mov arpl (bad) mov bound (bad) mov bound (bad) mov arpl (bad) mov bound (bad) mov arpl (bad) mov arpl (bad) mov bound (bad) mov bound (bad) mov bound (bad) mov bound (bad) mov arpl (bad) mov arpl (bad) mov bound inc outsl adc (bad) mov mov bound dec jns dec jge (bad) mov gs jno mov xchg imul (bad) je incl add test add sbb push dec outsb add aam add fdivs (bad) fnstenv fnstenv (bad) fnstenv fdivs (bad) fnstenv (bad) fnstenv (bad) fnstenv (bad) fidivrl (bad) fidivrl (bad) fidivrl (bad) fidivrl (bad) fnstcw (bad) fidivrl (bad) fdivs (bad) fnstenv (bad) fnstenv (bad) fdivs (bad) fdivs (bad) fdivs (bad) fdivs (bad) fdivs (bad) fdivs (bad) fdivs (bad) fnstenv fdivs fnstenv (bad) fnstenv (bad) fdivs (bad) fnstenv (bad) fnstenv (bad) ljmp (bad) fldl or in movsb push (bad) stc mov add jnp xchg incl jecxz arpl dec (bad) xor int3 ja incl add xchg add add lret call jns jmp mov pop (bad) in lahf inc (bad) out lahf inc (bad) out mov dec (bad) out lahf inc (bad) in lcall out mov ss in xchg xor in cwtl cmp in popf aas (bad) out popf inc (bad) in pushf cmp (bad) in pushf ds in pushf cmp (bad) in pushf cmp (bad) in pushf cmp (bad) in pushf cmp (bad) jmp sub in xchg xor in xchg xor jmp sub (bad) ljmp (bad) jmp sub in xchg xor in xchg sub (bad) in xchg xor in cwtl aaa (bad) in lcall fisttp xor (bad) jno incl add dec add add fnsave xor jno call jbe (bad) fdivrs call js call jbe call jae call jae call jae call jae call jae call jae call je call je call je call jne call jne call jne call jne call jne call ja call ja call ja call ja call ja call ja call ja call ja call jne call jne call jne call je call jae call jae call jae call jae call jae call jae call jae call jae call jae call je (bad) fdivs (bad) fnstcw call jbe pushl add pop (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add add add add add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add sub add add add add add add add and add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add push xchg inc and cmp lock lock lock lock lock lock lock lock lock lock lock lock lock lock icebp cmpl icebp cmpl icebp cmpl icebp cmpl icebp cmpl icebp cmpl icebp cmpl icebp cmpl icebp cmpl icebp cmpl icebp cmpl icebp cmpl icebp imul add mov push sub movsb dec and mov dec and mov dec and mov dec and mov dec and mov dec and mov dec and mov dec and mov dec and mov dec and mov dec and mov dec and mov dec and mov push sub movsb dec and sbb add xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli (bad) (bad) push (bad) (bad) (bad) sti (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) (bad) (bad) (bad) (bad) dec xchg jae and add sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc xchg jp sbb add push (bad) (bad) cld (bad) (bad) (bad) cld (bad) (bad) (bad) sti (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cld (bad) (bad) (bad) (bad) (bad) (bad) dec xchg jae sbb add imul (bad) std (bad) (bad) (bad) cli (bad) (bad) (bad) stc (bad) (bad) (bad) sti (bad) (bad) (bad) sti (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) (bad) (bad) (bad) dec xchg jb sbb add insb ss (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti (bad) (bad) (bad) cld (bad) (bad) (bad) cld (bad) (bad) (bad) sti (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) (bad) (bad) (bad) dec xchg jno sbb add outsb xor (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) (bad) (bad) (bad) dec xchg outsb lcall or mov add sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) (bad) (bad) (bad) call cltd insl lcall or mov add sub jo (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) (bad) (bad) (bad) call lcall add add ret jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) (bad) (bad) (bad) call fwait imul or mov add and jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) (bad) (bad) (bad) call fwait imul push add (bad) jae (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) (bad) (bad) (bad) call pushf push adc add leave jbe (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli (bad) (bad) (bad) stc (bad) (bad) (bad) sti (bad) (bad) (bad) cld (bad) (bad) (bad) cld (bad) (bad) (bad) sti (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cld (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstps add lret ja (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) cld (bad) (bad) (bad) cld (bad) (bad) (bad) sti (bad) (bad) (bad) sti (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fistpl add int daa (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) frstor add sarb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) std (bad) (bad) (bad) sti (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fbld add sarb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) stc (bad) (bad) (bad) sti (bad) (bad) (bad) stc (bad) (bad) (bad) sti (bad) (bad) (bad) (bad) (bad) (bad) jmp mov add xlat jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) std (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov add fiadd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp test add aam sbb (bad) into (bad) fcmovbe mov (bad) (bad) mov (bad) fcmovbe mov (bad) fcmovbe mov (bad) fcmovbe mov (bad) (bad) mov (bad) (bad) mov (bad) fcmovbe mov (bad) fcmovbe mov (bad) (bad) mov call int (bad) (bad) mov fmul mov fmul mov fst mov jecxz stos (bad) (bad) ret call lea call adc scas add add mov add test inc add lahf inc add lahf inc add lahf inc add lahf inc add lahf inc add lahf inc add lahf inc add lahf inc add lahf inc add lahf inc add mov inc add lahf inc add lahf inc add lahf inc add lahf inc add lahf inc add sahf inc add movsb dec add stos push add popf inc add cmpsb dec add cmpsb dec add mov dec push jmp pop add push push push scas add add data16 lret imul shrb call imul shrl call outsb add shrl call insl add (bad) jno call jb call jb call jno call outsb add shrl dec insl add iret insl add shrl shrl call outsl add iret outsl add iret imul push stos (bad) dec push (bad) in mov inc lcall std (bad) jle xchg iret outsl add pop pop pop movsl add add int add fisttpl push push popf cmp push popf aas push fwait aaa push cwtl xor icebp lahf aas (bad) out xchg das (bad) out xchg das push fwait cmp lock aaa (bad) out lcall lock out xchg es xchg sub in xchg daa (bad) in mov push xchg sub lock xor in nop and repnz xor cmc sahf xor inc mov aad cmp fnstcw lcall push add add or aad or faddl (bad) fstpt (bad) fstpt (bad) fstpt (bad) fstpt (bad) fstpt fstpt (bad) fstpt (bad) fdivrl fdivrl (bad) fdivrl (bad) fdivrl (bad) fstpt repnz repnz repnz fidivrl repnz repnz jae repnz jae repnz repnz je repnz loope add out add in add int3 insl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add adc add adc add adc add adc add adc add adc add adc add adc add adc add adc add adc add adc add adc add adc add or add adc add imul add add add add add add add add add add add add add add dec lahf dec es addl addl (bad) inc and addl addl addl addl addl addl addl jg and xchg out push sub iret add add mov cli cli cmc repz stc cmc repnz clc cmc repnz cmc repnz stc cmc repnz stc cmc repnz stc cmc repnz stc cmc repnz stc cmc repnz stc cmc repnz stc cmc repnz cli cmc repz stc cmc repnz sub add add mov icebp (bad) (bad) (bad) (bad) std (bad) (bad) (bad) std (bad) (bad) (bad) cld (bad) (bad) (bad) cld (bad) (bad) (bad) cld (bad) (bad) (bad) cld (bad) (bad) (bad) cld (bad) (bad) (bad) cld (bad) (bad) (bad) cld (bad) (bad) (bad) cld (bad) (bad) (bad) std (bad) (bad) (bad) (bad) (bad) (bad) pushl sub add add mov icebp (bad) (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) std (bad) (bad) pushl fildl add jo mov icebp (bad) (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) std (bad) (bad) pushl daa fildl add jo mov (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) cld (bad) (bad) (bad) jp fildl add jo mov (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) (bad) (bad) std (bad) jge and jo mov (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) sti (bad) (bad) (bad) (bad) (bad) std incl add jo rclb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add jo mov icebp in xlat jmp fmul jmp fst jmp fnop jmp fnop jmp fst jmp fnop jmp fnop jmp fnop jmp fcmove jmp fcmove jmp fcmovne (bad) in fidivrl fiaddl add jo arpl clc mov arpl (bad) mov fs (bad) mov bound (bad) mov arpl enter lret pushl push push lcall add push (bad) jns shl sub in push jmp xchg jmp mov jmp xchg jmp mov jmp test loop adc in sbb out sbb loope and lret jg out mov add or add add add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call add add add and add add call add adc add add sub add add xor add add or test add add and add add or test add add adc add add or push add xor add add add add and add add add add adc add add add add or push inc pusha add add add pop add xor add add add add and add add add add adc add add add add add add add add and sub add add xor add add and test add add add add add add adc add add add add pop add add jl xor add push add pop add inc add push add dec add pop add dec add dec add add add add add add add mov add push add mov aas add add add add add add add fiaddl add add push add add outsb add inc add insb add dec add data16 add mov add add xor xor xor cmp xor xor inc add add add add add outsl add jo popa add jns dec add insl add add add dec add arpl jb outsl add outsl add je and inc add jb jo outsl add popa add add outsb add add add add imul inc add jae arpl jb imul imul add add push add outsb add add jae and dec add add outsb add add jae add and dec add je add data16 arpl add add outsl add je add add add add imul push add jb jae imul add add add add add add add add add add add add add add add add add add add outsb add add outsb add insb add popa add add add add outsl add push add add js add add add add popa add add jo jns jb imul je add test add arpl jb outsl add outsl add je and inc add jb jo outsl add popa add add outsb add add add insb add add imul je jae and jb add add jbe add add add sbb add dec add imul outsb add insb add imul outsb add insl add add dec add add outsb add dec add add js add add dec add add jb outsl add add je dec add insl add add add dec add arpl jb outsl add outsl add je scas add add imul outsl add jae scas add add jo add popa add add add add jns jae je add add add inc add add add jb outsl add add je push add jb jae imul add add add add add add add add add add add add add add add add add popa add inc add insb add dec add data16 add add and add add push add popa add jae insb add je imul add add or add add add bound shlb stc bound fsubl add add in add push arpl sbb add sub add cmp add dec arpl pop arpl add add data16 add add push add addb add dec inc push dec inc dec xor cs dec dec add inc push xor cs insb add xor xor fs insb add dec outsl popa fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add dec gs popa addr16 outsl js add pop add repz out add add add inc dec fisttpl inc adc cld mov in dec adc inc inc mov add ret xlat mov int ja mov mov xor lds jns add and add orl lods mov rorl icebp (bad) enter fwait jne pop mov jecxz out cmp loop xchg adc jne push fwait push or (bad) sbb mov mov (bad) std sbbl pop jae pop lds mov gs pop xchg lods mov mov pop js,pn hlt and mov rcll (bad) daa xchg fisubl push popf fnclex cmp push jne clc sub sbb add aas sub aad dec outsl fiaddl popf mov roll fisubrl insl movsl push jp inc add dec mov xchg inc out lds (bad) mov mov das sti arpl cltd xor lcall (bad) xor cltd jge mov add popl daa adc data16 or les (bad) xor dec sub push add (bad) call xor sub xor fs movb cmp xchg inc push fldlg2 mov int3 out outsb addl adc add into cmp (bad) and test inc xor mov out aaa push das cld test mov mov sbb or andps inc scas or lcall outsb mov pop xchg jo push arpl push ret mov xchg lret sbb insl or xchg int3 and dec jp fstpt nop popf outsb ja push mov repz popf pop scas cmp fldz test mov mov aas mov rep outsb mov aaa mov fldenv jge pop ret sahf xor adc cmp dec push mov sub (bad) in xor mov or xchg loop mov fs add aas and (bad) shlb dec mov dec ljmp ret inc cmpsl rcl mov and pop add add ljmp push inc mov cmp adc ja je and cs mov sbb jae ss dec inc xchg jne (bad) add clc shll sbb std sbb cli aaa mov mov jb adc xchg cmp arpl lret mov mov js addr16 fsubs enter js ret push popf sub testb stos pop xchg call mov loop jns dec cltd icebp imul lods mov cltd push inc sub mov xchg xor and je pop mov fsubl popf ss negl icebp outsl out inc jo fstl cmc insl divb hlt mov movsl les cmpsl mov xchg and clc or js aad dec insb sbb jbe out sbb cmp pop mov shl push push (bad) push popa imul cmc scas dec push ss adc xor dec mov dec mov cltd out popa ja inc fisubl inc ds faddp enter leave and xchg and fwait and nop push push leave sub add in mov mov fnstcw bound stos idivl std jmp dec repnz dec mov adc cltd (bad) (bad) pushf pop leave jmp jne dec lods je cmp push push out push sub ret mov and pop and mov xlat test cmp enter inc adcl jle js (bad) fistl mov adc jmp xchg mov lds and xchg mov movsb shlb loop test fdivrl xchg ret in in in xor out cmp mov cmpsl sti (bad) scas xlat (bad) in cltd ret xor aad pop jl jnp sub push or jb js pop xor mov and mov pop jb jl sbb js mov jae mov adc sbb lahf shrl xchg lock jmp lock repz scas call rcr xor icebp inc loope gs mov cmp xchg test adc stos ret mov xlat shlb insb loope jle adc mov iret mov xlat cmc xchg les imul mov mov jb jo fsubrs dec sbb test push pop out lds (bad) lock jo popf or (bad) push bound mov repnz xchg jp cmpsb out in push mov mov inc mov mov shr and inc fdivs dec mov xor push cld pop fbstp xchg ss mov jnp imul leave imul pop sarl je negb in push into push add repnz (bad) das lret mov loop rolb cmc lods cmc callw sub les xchg xchg push jmp pop pop imul pop xchg jne cmpsb test mov in pop mov adc repz mov (bad) xor mov inc icebp (bad) cmp mov inc jg lret mov and dec xor fnstcw jno xor ret cmpsb pop or mov add lods ss fucom aas xchg sbb ljmp inc in sub scas cs (bad) jge cmp mov stos out ficomp add mov sub movsb iret fimul mov movsb pop or daa jb int fs mov mov mov popa dec mov mov push cmp push rcrb aam and scas dec mov cmpsb jge in cltd or (bad) jne daa fisttpll and push xchg insl inc inc cwtl mulb aaa lods scas cmp std adc mov sbb pop push add xchg faddl or pop cmc cmpsb fistpll (bad) scas dec mov mov xchg xor out push imul jno int fidivr sbb inc int aad cmpsl xchg push scas push sbb lahf lods jp sti sub jle dec pop fimull out pop (bad) stos fdivl ret cmc xor sti lea (bad) jo pop xor ss std xchg loope push lods gs mov push loop jb test rcrb push ljmp adcl aas dec call xor and xchg ret out data16 les aam xor (bad) rorb cmp repnz add and adc xchg jmp sbb mov dec rcr jns aad sub jge or adc popa dec xchg aad subb mov addl loop cmp icebp sbb pop in adcb sbb cltd (bad) mov and pusha in loop push inc sbb insl dec cmp mov cmp arpl rep mov pop dec mov stos ret xchg stos movsb and push mov push jmp sahf push inc je outsb outsb icebp fistp andb fistpl mov mov xor inc xchg loop xor lahf mov push and push out loopne repz mov mov pop adc push lods dec es jmp dec stos int3 xchg std jne pop dec or ror xorb sbb dec xor ss shlb adc fldenv and inc outsl lret orl movl cmpsb int pop call arpl pushf insb pop arpl scas pop jnp mov add mov (bad) xchg stc inc aam lods call adc iret ja stos js mov inc lret fldenv dec negb inc mov xchg add mov mov sub stc pushf push push sbb insb fadds dec outsb mov nop pop (bad) fdivrs cmp cmc data16 frstor fcmovnb psubsb dec mov mov pop inc sbb or jg aas dec pop addr16 (bad) ret orl jno or leave roll dec jno shll pop (bad) int add xchg mov xchg and mov int3 jae daa mov lods sbb mov repnz add shrb xor dec sbb pop lea bound cmp sbb (bad) xor jecxz int3 sbb ret lds sbb lea cmp insl adc add pop fimull add xchg sarb inc xchg insb cwtl (bad) jo (bad) push push xchg es pop jo out ja sub fsubl inc es push mov xor push cmpsb cltd aaa inc repz xchg rolb popf and nop ret or int3 scas pop cmp test imul (bad) jae das xchg loope and leave in inc pop dec inc leave xor sub aas mov imul jge bound adc daa int3 push push or cmp bound fisttpl outsb cmp insl aad cltd dec ss mov inc xchg sbb mov xor cmp out scas jae push int fnstcw cmp push and pop add mov or in pusha sub insb cmp leave mov jp (bad) or mov inc sbb ds pop nop pusha lahf lds mov js push mov or jno scas ficoml xchg enter inc sbb jecxz lds or or cmp mov cmp inc lock std xor (bad) cwtl inc popf xor push incl sbb mov test test sub movsl test int3 into inc (bad) shrl adc or mov mov adc pusha add push lods push cmpl cmp push xchg insb test popa enter sbb incb push shrl btl mov mov rcrb jb xchg inc mov jnp popa ss movsl pop sub inc cmp dec push notl xchg icebp dec mov jg stos dec push jne or fimul dec sbb lods loope sbb in xchg cwtl lcall or mov sti divb cmp aaa sbb jno,pt jne lock push std and insl aad out mov lret hlt mov test adcl pop in clc hlt cmc and test mov lock xchg (bad) sbb (bad) pop popf sahf in sahf jecxz out add jecxz pop (bad) fistl jo call addl xor pop lahf enter pushf arpl into inc cmc push fldcw test fisub shll ss jge pusha lahf lcall ds imulb popa out xor out movsb dec add add fdivrl dec adc and sbb dec orb jnp jns jecxz sti mov xchg xor lret cld jns push cmp in ja sub int3 iret push out cs test fidivr fimul add mov aas cmp mov (bad) mov int mov mov pop sub jg sahf lahf jecxz in cmp cld jmp int fisttp mulb dec dec or (bad) aam xlat fstpl dec push pop pop xchg inc xor aaa loop xorl popf test repnz ficomp push xchg pop cmp dec lret int jl repnz inc sbb cmp icebp sbb icebp das pop adc lods mov int cmp push jmp and ja ret sbbl cmp pop jmp enter (bad) fistl mov fildl mov jb add jmp add dec jns (bad) lcall push addr16 lret adc ss jno lds (bad) arpl (bad) mov bound push fnstsw jle or and or imul lods lahf insb jnp fwait sbb lcall lahf adc xchg mov xor test cmp je scas mov in fcoml (bad) sub xchg jne lret mov xor jo test in rcr push orb adc fsts mov sbb gs inc xor or aaa imul mov xchg int addr16 ja mov scas add shlb push and jbe mov push jnp sub sarl gs cld int xor test mov xor int3 mov faddp add jae (bad) fldcw out inc push enter cmp push loopne outsb sbb mov adc test sbb adc outsb (bad) push jnp rcrl insl push adc insl pop jnp dec fs (bad) sub adc imul test sbb jl pop in sbb mov jge imull dec sti xor adc sahf neg clc inc and mov and mov push mov mov pop insb sub xchg gs fcoml dec and pop pushf inc mov mov xchg stos test mov lods or push test fldt mov ja popa sbb int int3 (bad) cltd popf sbb aas sahf cmpsb jle inc add cmpsb push pop and add mov movsl outsb sub jno pop leave mov mov lods cmp or jmp out (bad) jnp fnstenv dec sub fdivs dec movsb jns enter adc jb lea adc xor scas sub scas pop mov jp push dec scas rolb inc fildll jg jae in ds aam scas dec mov movsb push scas pop popf sub jl xchg (bad) scas ds push dec test clc add addl adc xor dec xor inc ficomp adc xor inc (bad) aad and (bad) mov dec push pop jo fadds pusha mov out xor sub jns popa clc fdivl mov jo xor mov sbb movsb or iret xor fstps call cmp test mov scas es mov add repnz arpl es lds bound mov mov fistp (bad) mov rol pop add insb in loop mov cmp cmp out add addl aas sub add mov (bad) jbe cld push test fsubs pop and dec repnz mov aaa stos je repnz mov leave aas sbbl leave es bound int3 add pop mov mov xor adc push and sbb flds add int3 mov pop xchg cltd jnp imul addr16 je pop ficom (bad) xlat js rcrb mov in (bad) clc push cmp rorb aam mov jl stos mov hlt add test and ja cwtl lret call nop imul xchg add pop les xchg sbb adc jg jo test or push cmp pop adc and pop mov fistl xchg sub and mov jge enter and dec out cmp addr16 cltd imul ds imul jle push jb ret or xchg sahf rcll push fstps fdivp dec cli ja popa lea add (bad) mov inc addr16 pop movups jnp sbb mov adc or xor mov insb push icebp pop int mov push pop fdivl push sbbl push (bad) mov movsl pop lret xor rclb xor cmp into aad mov jle inc subb mov mov mov in jne outsl call nop xor fnstsw into inc fwait cmovg dec fnstenv cltd cltd mov mov rclb xchg iret les mov and pop xchg pop or sbb or rcl (bad) mov hlt fwait pop ljmp lods and push movsb in sbb inc mov mov into arpl add aam inc pop mov push pop in cmpsl in (bad) in fcmovnb stos scas mov js (bad) dec push scas xchg pop gs sub std push dec stos lret cmp push in sub pop and xor call (bad) sub cli jae sub inc lods inc jae inc jbe popf xlat lcall push lock mov mov pop mov add ret addb roll loope mov cmpl ret iret rorb imul js add sub lret jmp je add xchg sub adc es xchg mov out pop and addl xor scas leave xor loopne xchg mov loope add idivb dec (bad) int les bound scas daa addl (bad) jbe in xlat sbb mov push push arpl leave es add push mov xchg test mov inc repnz lods jmp ljmp outsl cltd cmp pop jns inc mov adc mov hlt imul xor test add dec hlt xor arpl iret add xchg adc outsb iret imul cmpsb in pusha jae pop jle sbb (bad) cld or data16 adc cld bound decl mov and dec xor push int3 jl pop into pop aam leave in xor test clc loope sub cmp arpl subl xorl shll jl and sbb stc push push out bnd pop add sub push fildll push shll hlt sbb flds or sbb jbe mov inc push and cmp scas subl lock rolb mov dec sbb push adc xor cmc js mov fild iret js fsubs jmp push push adc or movsb push sub popa cmp leave stos adc outsl sahf xor jns fs xchg adc mov loop sbb adc int fbld clc out ret ret pop pushf mov rolb fiadd imul xlat xor adc sub adc xchg div ret push movsb inc jb rcrl imul in ds icebp rcrl call jo pop cmpsl daa cmp popa cli mov arpl pop outsb cwtl push push mov jae dec push lock inc pop sub je xchg lret jl cmp mov cmpl push punpcklwd mov fnstsw mov lahf jmp (bad) jecxz sahf bound xchg pop mov (bad) fcompl insl dec and popf cld cltd mov stos js mov test es jae xchg jbe sub push push inc repz movsb (bad) ljmp sub inc out jge pop push jbe mov popf inc mov dec add lea cmp call fcompl scas jo fist idiv inc or and test movsl in psrld lret cltd iret nop outsl or lods or mov out call movsl out cmp jo call dec mov mov test aad xor lock jp ds arpl fmul fsub mov jne and (bad) cmp std cmpsb sbb add icebp cwtl jne or cmp in nop mov mov mov mov in inc (bad) in out cmp mov jns adc xor dec ja dec ljmp seto push addr16 test stos dec lcall mov mov jb mov mov std ljmp (bad) mov push mov fldcw mov sbb dec movsb icebp sarl push xor into data16 and xchg mov xlat xor add repnz pop xchg xor lock adc idivb sarb decl or mull das xchg int3 inc pop popa inc sahf pop push cwtl mov sbb pop dec je push inc adc sahf mov sbb mov out jecxz xchg hlt clc flds (bad) repz ss inc mov hlt out icebp out mov mov outsl dec sbb scas aas inc cmpsl jl cmpsl sbb gs or pop jge dec and xchg repz dec fdivrl ret fs (bad) lret cltd mov push mov pop pop (bad) std fldl jb lods lret call enter mov (bad) sbb scas jbe sub push jbe jecxz aas cmpl outsb lret push mov out jne jp (bad) repnz fs jp js mov fstpl xor push fsubrs or pushf stc push jo in out loop fwait cltd sar ds shl mov mov pusha mov dec inc jge out lods pop jno dec or repnz inc mov (bad) push repz jb inc in cmp repz scas bound leave push mov lds lds imul pop (bad) or pop sbb rclb mov push fisttpll inc adc inc rolb lods stos push sbb ds or sub push mov sub movsb repz jbe pop mov (bad) push cli aam hlt sub jb mov loope dec pop cmc mov jbe out xor dec add cli add dec mov arpl test pop es test inc lret or pop add mov mov cs fisttp stc lea notl out adc push mov push ret repz les lea out ret repz lahf adc lock leave gs jae mov fmuls (bad) das imul push pop mov lods push icebp imul add into (bad) dec push ds in jge mov jp push (bad) dec push inc test jne mov sub rclb inc or cmp push dec jae pop mov cmp and and mov dec pop (bad) mov jnp fcmovu outsl aaa push rclb rorb add popa xchg mov mov shr push loope sbb lret fsubrs enter or sbb pop sar fdivl outsl in (bad) movsl stc pop xchg and sbb push or rol jne shlb adc jmp add and add ror xor sbb and pop aaa jb cmp test mov rorl add call int cmp mov or lahf aas aas mov daa inc or mov (bad) jmp insl mov test subl cmp stos popa push lret ljmp xchg lock and test push push arpl mov mov lods faddl lret dec sbb pusha mov mov scas mov scas mov (bad) (bad) push std mov cmp push xchg mov jl js xor fs ss push lea loopne cmp in in lock and cwtl cmp dec test inc nop hlt sbb dec push imul jne lock add pop (bad) jae pop mov jp mov sub iret rclb or test dec lock mov mov jns out adc sarb inc out xchg aam dec sbb test inc jge addr16 out lahf cld in andb cmpsb (bad) loop cmp add (bad) pop or xchg and and or stos xchg lcall add movsl aas mov sbb (bad) int pop imul adc jbe js outsl iret adc in out jmp imul fs push jnp std popf std (bad) in jmp fisubr mov cmc aad mov call lock test (bad) fsubs in push mov in adc jb int fs outsl pop in jmp xchg xchg lret in sbb daa push add dec xchg call mov pop shrl cmp inc rclb cs or xchg and test add out repz add rorb dec jno test jne mov sbb mov dec out rcrb xor scas jmp or std ss fbstp cmc int out push and cmpb imul inc add jmp cwtl ljmp push ja (bad) or insb rorl and cs sahf sub mov (bad) jecxz push aas fwait jge,pt xadd add or dec clc fistp rorb inc xchg je cmp ffree adc repnz daa mov fld (bad) pop std push inc into repnz ljmp loop (bad) in je jae lods movsl inc loope add (bad) (bad) test in fcoml xor pop inc js xchg mov je popf jae mov add lds (bad) cmp jl stc les sub orb xchg xor cmp mov aaa cmp test and push sbb or dec push cmp out cli push subl mov sarb (bad) (bad) push bound arpl subl and push stos lahf sti out lods pop enter psllw test mov xchg sbbb pop arpl outsb cmpsb sahf mov (bad) lock sti xorl je (bad) and mov std mov ja adc mov fistl fwait pop sahf sbb cs lock mov rcr and cmp (bad) fsubs cli ss pop push mov dec incl push adc insb push shrb jg int3 push rcrl jl sub nop not add jmp fwait div outsb fildll mov dec ret lcall jo in and in sarl jg aaa mov clc jno,pn bound xchg mov and mov and adc and rcl (bad) pop ret sbb jbe,pt push fstpl out daa mov jnp inc rcll push mov hlt push mov fwait rcr pop call dec popa push sbb pop loopnew push sub sbb xchg push ds sti (bad) cs dec hlt repz jns mov (bad) push in jl (bad) std add js int stc pop sbb sahf fs cs rolb mov pop push or xchg xor mov xor xchg fisttpll lods aam stos loopne cmc cmpsb ja das pop out sbb cli cmp decl aas mov and das punpckhbw xor fucomip int3 sti jge cmp lahf dec out adc stc xchg lahf in inc dec xchg xchg mov mov inc (bad) in and jmp xor and inc push cmp sub nop mov adc xchg mov push mov and add push inc mov shl adc sub out pop xor stos and call dec push rorb je mov (bad) lock int cld cmp push aaa cld add xchg int3 mov jnp lcall mov xchg int xor out mov mov pop mov hlt inc jp jnp mov roll and lds aaa shl cmc outsl repnz mov dec (bad) sbb jg and aas das je (bad) sub vpminub cs jne ja and stos dec jae cmp insb pop mov mov daa xchg adc (bad) fildl iret add sub cmp mov adc push sbb test dec or xchg cltd fdivrl adc xor adc xor fsts rcr cmp adc push aad jnp jp test jne add mov popf lods pop in pop sbb dec mov sbb lock xchg xchg int3 add outsl adc data16 sub mov mov sbb gs mov insl push pop shrl sub gs pop jbe cs add add pop jne and iret sub push cmpsl pop icebp xchg into push sub sub mov and flds mov rcrb addr16 ljmp ret cs insl leave sbb pop dec out adc or push inc inc stc ljmp sub dec xchg mov sbb in es sbb inc ljmp ss push push jns je adc push push lret dec inc dec pop cmp cli jg cltd (bad) loop mov or aas shlb inc xchg push into arpl jno test sub popf inc xchg into jecxz data16 mov loop or pop xchg add or divl (bad) mov icebp int3 push (bad) lcall je mov xchg data16 faddl mov mov dec pop xchg add and push fadd (bad) outsb adc pop bound mov mov fcompl in test rcll int call sbb xchg mov or popf (bad) dec cmp xor rorl inc inc mov adc cmpsl cmp mov add cmp sbb imul and (bad) int stos loop push pop jecxz test fwait pop (bad) rcrl js pop dec ret xchg push gs jne insl fnsave fidiv mov loopne jl jo in ja jle sbb repnz loope js ds mov add test cmp daa loopne pushf pop mov into scas divb les mov in sub (bad) cmpsb fnstenv (bad) mov lock (bad) jbe popf bound popf arpl fldenv imul (bad) mov xor in xor jbe scas cmp dec jl mov jge or stc ret (bad) fdivrs std cld xchg xchg mov daa inc inc xchg lock bound outsl loopne mov push jmp push insb std or jns (bad) shr xchg daa negb mov pop loope int3 ret sbbl scas aas repz add shrl (bad) lock fsts xchg add clc mov sbb jl (bad) into pop inc push clc mov (bad) rcr notb mov lock or xchg dec dec mov lret mov dec test lods xor jl cmp sub dec and sbb test icebp js jecxz mov inc push lock outsl adc pop xchg aad dec outsl fiaddl popf mov shl adc push fimull hlt les push push push aas push cmp inc out lds (bad) mov mov mov arpl cltd xor aaa imul mov mov test sbb jno clc adc pop lock subb mov mov xorl hlt or or insb add xchg or xor jns add push push push bnd and insb into test xchg adc fs jbe inc pushf push out aaa iret test cmp pop mov jmp das cli test daa dec cwtl (bad) (bad) hlt inc xchg sarb nop sub je jl adc or xor sbb mov hlt mov and pop in js push jae movsl test and xor sub mov dec lret jns xchg fstpl mov test mov fnstsw xor push scas sarl out pop push (bad) stos push and fldt mov mull iret adc hlt or sub mov sub sar scas sub subb dec sbb addl lods aas xor aas and jns lds fstpt or aam (bad) xor push cmp in test pop repz and add add out add jmp rcrb cmp test (bad) test test and sub sub (bad) test adc in xchg dec ret ss push xor cmpsb dec imul cmp call sti out xchg and mov push jo xor cmp or stos int cmp popa mov cmp jl mov (bad) jnp pop xlat mov push loope cmpsl or pop aas mov sbb or outsl fwait out cmp and (bad) (bad) fisubl push push push js mov arpl jb xor sbb jno lds arpl (bad) cltd mov adc dec aas sub adc mov jbe cwtl pop out in dec cmpsb movsl mov adc jo xchg fdivs and push lods push movsb cmpsb js int stc ja inc adc fstp in xchg or mov jmp and inc dec adc or xorl in sbb fcomip sub pop aad loop (bad) pop cmp icebp cmp jp cli clc stos mov iret jle js mov jg adc arpl push mov pop mov pop loop or mov (bad) jp pop sbb xor lock or xor xchg push jg loopne inc sbbb xor pusha sub mov repz pop dec shl inc sub jl sub mov mov add dec dec pop ret in inc inc adc xchg push ficomp xor test imul push (bad) jae push int3 cwtl xchg (bad) dec and pushf sbb dec fstpt xchg lcall or xchg call cmpsl cmp dec ds push xchg shr dec xor loop dec pop inc mov mov shr jne lods sub push call sub xchg aam mov cs cld fisttpll jne mul (bad) loope pop sahf xchg push push clc sub gs lods or cltd imulb pop and adc test (bad) cmpsb gs jl cmp inc jle and xor dec xor test pop je push shrl sbb in xchg jmp mov inc mov scas mov lods mov rcrb rcll xchg xchg lds adc jl sbb mov push mov icebp pop movsl mov jo xchg aad jle in dec lret stos ds test (bad) xor enter (bad) xor mov jns jle mov push dec jl fs mov add push lcall mov xor mov jo xor scas repnz add adc outsb adc adc xchg out hlt (bad) jecxz stos sub pop sub aaa xchg int3 push loop bound mov adc pop sub mov ret sbb movsb add jmp lret repz sub stc jo xchg iret fdivrs dec sbb js xor sub xchg jl dec xchg mov loopne dec push (bad) sub ljmp outsb mov pop pusha xchg cmp popf in mov out pop inc sbb cmp sub mov xchg sub repz dec out repnz sti (bad) or das mov sarb imulb gs sbb add dec sti fimul cmp (bad) fmull dec icebp (bad) gs and inc and xchg enter ret adc inc lret sahf or lret jmp adc dec xor mov xchg mov cmp test mov mov (bad) enter sbb popa in lret xchg mov mov mov add sub test sbb adc adc mov test push paddsb mov add test sbb push (bad) xchg js iret loopne cmp sub icebp sbb (bad) or das loope mov test fistpll inc mov mov push loopne in (bad) push mov jmp lcall out loop faddl (bad) sub xor lea adc jp imull mov xchg jo push loopne jl (bad) loope pop pop repnz popf leave out mov cmp (bad) (bad) jo xlat cld mov cmp (bad) movsl sub xchg mov mov push jo into rcrl or (bad) idivb mov out std cmc xchg cltd dec mov iret stc hlt mov jo outsl loop mov outsl lahf jg in out pop out jo pop loopne mov sbb imul sub test pop out (bad) fnsave xlat dec imul loope cmp inc ret push mov pop pop and jb mov adc jae repz pop xchg push xchg jnp in je mov jae push cli sub stos sub jge cmp add stc sbb fcmovb pop dec jo leave jne sbb add sarb mov mov cmpsb (bad) mov push sbb mov mov js sbb hlt andb inc lret jb jb push push cmp cmpsl push icebp and push in orl in dec mov sub ljmp cmpb adc sahf out xlat scas sti mov mov inc lahf imul and sbb inc insb rcl adc xor jb insb out shrl out rcll lods mov dec js pop decb xor xchg enter and or lea scas sub bound adc and mov mov vunpcklps hlt movb mov lret test xor dec push cmpsb jns jno dec js pop cwtl pop pop test or into pop adc or popl int3 jb xchg lock jo cltd into mov iret or in fwait and cld gs xor mov and adc daa jbe fldln2 fmuls mov adc fimull (bad) jmp test inc adc jno dec cmp jmp pop push pop jle push pop pop fnstenv push fisttpll mov sbb mov paddusb enter repz cmp inc mov fidivl mov cmc movsb adc xchg pop jl je hlt gs push repnz bound jle mov adc hlt lcall sti mov mov push in mov pop mov xchg cwtl (bad) hlt adc push lea outsb mov mov repnz fs mov pusha cmp lods daa jb pop mov ret mov push and (bad) cmp fbld pop push test ret test dec add test push sbb or aam sbb dec mov xor jns cld movsb fcomi xor mov xchg or mov mov sti shrb movsl fidivl pusha and (bad) or lret lods dec fisubrl clc adc ret inc xor inc or out out daa lock (bad) outsb mov andl daa arpl push cmpps daa jecxz xor jmp lods fiaddl inc or shlb movsb iret xchg jnp adc out mov ja js aaa daa enter sub fnstsw inc sbb rorb (bad) sti adc rcll pop adc push daa cwtl call mov ja or adc nop mov sarl push hlt out and les cmp jb nop mull (bad) in sub or ljmp fidiv mov mov into lea std fwait xlat outsb mov jbe push out push dec clc ljmp (bad) ds (bad) xchg mov dec in xor dec test xchg lea push xor pop mov inc push hlt xchg jmp clc xor repnz push mov adc aad test push xchg aad xchg pop push stos and inc (bad) push sahf dec (bad) cmp mov inc prefetch or frstor rcr push push sub pop pusha fs fcomps mov test cmp in aam jno clc in aad dec aad inc or movl in mov sub xor fcomp inc mov popa stos jp dec iret and adc test add dec pop push and (bad) mov sti iret cmp fsts push cld inc or jg mov inc push rcr (bad) xchg jmp test (bad) xor lret mov imul out jae cwtl (bad) xor or mov clc push cmp mov cli or aam insb mov rorl fisubl mov out push inc sar repz and xchg cli outsb sub mov popf not pop sti mov xchg int3 xchg rcll push movsb (bad) cmp decl xchg push pop inc std mov dec inc negl imul add mov push ss inc cmp mov clc add or pop call inc int push and mov or test jo or inc mov mov shll mov mov (bad) cli sub pop xor jmp jnp xchg dec cs pushf sub repnz dec js push std prefetchw jns aas sub arpl adc pop rcrl ljmp sub enter popa push les xor or sub sub out das adc dec fidivrl xchg loope jle fdivs inc cmpsb in or fs clc fld1 mov std sbb lods insl sbb add mov dec call and mov xchg and fildll xchg mov ret mov ss cmp or out xlat mov leave mov leave add xchg inc fcompl adc xchg fiadd add movsb and push stos cmp int add lcall adc mov std lret stos cmp adc push icebp sbb outsl mov fs dec or data16 and in insl pop fistl outsl rclb stos xor dec mov sbb ficomp jno mov mov push adc inc adc stos test leave pop mov mov cli (bad) jno lds cmp cwtl addr16 xor pop (bad) in stos or push outsb iret xchg cmp push mov aaa sbb cmpsl adc xor sbb fisubl ds and mov fwait inc test xchg jecxz fldcw icebp sub push inc jg xchg fidivrl lahf adc dec pop mov into jns xor mov push stos fsubrl jb xor nop adc loop jl pusha xorl push inc in cltd pop loopne inc mov bound lcall xchg out test mov daa mov lods mov and cmp call or popf sbb xchg jno add inc gs lock jmp mov sub repnz dec mov cmpsl test adc leave movsl cmp aaa (bad) bound (bad) pusha pop xchg mov outsl xchg pop xor cmp cli cmp mov sub test mov adc adc or (bad) adc xchg xchg jo ljmp xchg fmull push pop (bad) or dec mov aaa mov mov mov inc movsb rolb out movsl (bad) pop dec (bad) sbb xor incl push cltd or cmp lret in xchg add in push stos lahf inc dec xor mov mov mull cmpsb xchg add cmp mov (bad) enter xor das ljmp cmovl cmp (bad) adc mov or adc fimul sbb xor or movsl sub aaa and (bad) xchg jb loop push insb push mov xlat xlat flds and int jno cmp mov (bad) mov pop cmp inc cs sub fs (bad) xchg xchg bound cmp jp jg test and sbb or cmc sbb imul fcomp mov out vcomiss cmp lods aas loope stc adc outsb pop cmp mov sarb pop andl cwtl loopne lcall and (bad) adc (bad) repnz (bad) or vrsqrtss dec aad test push jecxz jle xor outsb mov adc push pop movsl aas lret shll mov decb in addr16 test test dec jns rcr ja enter xchg add lods jl sarb pop mov xchg xchg sahf mov (bad) loope cmp movsb jecxz (bad) stos mov xchg mov pop lea les inc out (bad) daa and lret mov insl dec je mov out jle jecxz xchg lahf xchg cltd inc cmc sub jnp ficom cli mov sub lret imul in call pop and mov (bad) push std or mov add enter lods dec fcoms setge cmp sub mov mov mov cmp cs ja mov addr16 pop dec icebp adc test fs add pusha xorl cwtl push and push lcall or pop sbb test orl ss rorl aaa lods sti cmp add mov (bad) push mov or stc aas leave stos dec mov testb (bad) jne js xchg dec jbe notl out sti inc cld (bad) pop push hlt ljmp addr16 (bad) hlt out cmp xchg orb mov in inc rcrl lret lods sbb jmp mov mov sub dec and mov hlt push xor movsb notb idivl outsl lock pop cmpsb mov adc cmpsb sub xor pop aam iret lock jmp subl (bad) ja or or jne lahf in mov and jns mov mov test loop xor inc dec test nop les stos push mov js cmp pop jae loope add pushf inc sub (bad) loop add sti imul pop cmp std sbb lods (bad) xor jecxz dec outsl xor icebp inc push stc mov in (bad) iret ret pop jbe scas int bound mov cmpsb inc jge rcrb insb fisttp popa mov mov xlat jne pushf loop scas dec sti in aaa lret ret pop xchg inc mov inc pop push cmp xchg mov mov pop lret sbb movsb cmp jmp pop out and mov sbbl xor stc or into inc insb lods adc and mov pop pusha mov ds cmpsb push call adc scas scas mov das out mov fiaddl cmp jnp or add jg les cld mov pusha and push jns stc add (bad) cmp shll (bad) lret mov sbb push mov enter xor push fsts fnstcw cmp mov mov add mov (bad) xor out lds and in mov cmp push xchg daa add xchg std inc add adc cwtl sti jl or jnp outsl mov mov lock subb mov or cmpsb push adc (bad) sarb pushf inc push cltd push push push movsl lret jo jge and dec add mov rorb jmp add pop add fist sbb mov add lods xchg xorl push incl fcoms push je out (bad) jp int3 clc mov xor dec aas jbe and out outsl sahf pop addr16 mov mov mov adc adc pop enter cmpsl call out outsl pop out cld int3 in cs out out and daa dec xchg cmp popf into push ja inc mov xchg mov cmp (bad) jbe mov mov push mov cli incb fwait out es xchg xor jl push mov sub iret int3 add push rcll ljmp mov ficompl jmp pop fildll cmp jp inc mov (bad) lret mov xor mov ja hlt into xor ds adc cmp (bad) cmp sbb cmp pop in das xor es jge ja je das jp mov push inc cmc lods cmpsb ljmp cs aaa test mov dec popf jmp dec lahf mov pusha lock add mull std out imul jo loopne pop sub dec hlt hlt sbb cwtl mov inc mov pop and adc sahf les jno aaa mov sub stos xchg adc stos call sub jne inc int push loop mov loopne enter (bad) cmp loope sub ljmp fldt sub or dec sbb mull jmp dec pop gs mov mov sub push movsb adc pushf mov lahf ja les sti cmp add push stos jle (bad) or lock mov cmpsl xchg stc jns pusha jns ja inc push sarb je and sbb rcll add xchg inc fistp jne inc sbb das push ret or or jp jo lock adc fnsave loop dec cmc jecxz fwait xchg push mov (bad) outsl xchg dec pop sbb xor add loop popa add into enter jns (bad) cmp xchg or xor dec repz dec fsqrt aam lret or cli mov cmp push shlb cmp inc mov cltd mov jle or test and mov outsb or inc gs cli dec clc add jg outsb mov fmull (bad) mov mov inc aam int3 hlt sbb push add pushf fiadd int3 xchg push sbb mov jnp in sbb jecxz out xchg (bad) push out jge or pop xchg das add (bad) repz cmovo mov inc cmp and jmp mov cmp xchg and (bad) adc add out pop fsub and std std cmpsb fldt iret (bad) push dec adc fnstsw lds ret mov (bad) fidivr movsl dec sbb outsb aam std cli incb and lret xor sub call push inc out jmp lcall dec mov into push mov sbb lds out loope mov test xchg fs mov out testl add (bad) pop ljmp or repz push cmp mov (bad) fdivrs enter and or lods cmp clc push popa es push test inc cmc cmp repz (bad) jl mov hlt mov js aad dec outsl fiaddl popf xor push pop movsl lods aam dec pop mov rcll stos stos cli jno mov sub lret js or sub xchg std xor int3 sbb lret scas (bad) xor fnstsw addr16 ds pop adc jnp jmp add add insl adcb adc call test int3 xor test add sbbb add stos add cltd ret adc cmp add jo ret xor or test inc add nop mov mov cmp mov addr16 mov enter pop mov jno mov (bad) pop clc pop jmp mov outsb ja (bad) (bad) icebp jno xchg out out push sub add inc pop bound or (bad) xor push mov mov lahf jmp push scas sbb jb pop jecxz push movsl add out push dec pop xchg int mov xchg lcall loope test std into mov std shrl jmp popa outsl xor pop dec cmpsb stos pusha and xchg pop les popf scas aaa into stc in cli sti test loop jp test xor lahf rol pop mov xchg mov test vcvttps2dq and cltd jo sbb or (bad) sub pop push sbb mov jno into daa jne jo mov adc jne mov add adc jb add addb xchg out mov in mov adc xchg inc insl nop or insl xchg adc xchg add scas ds xchg in outsb insb mov push lcall dec mov xchg dec jo pop sti mov jmp aam popa stos push cmpsb cmp lcall sbb adc add std loop ret mov popl in xlat jno mov fs inc jmp jo push test insl jb lret jb pop fwait jge push outsb mov call adc movsl push in in in (bad) hlt lcall ljmp cmp cltd jle dec sub rep loope jle iret imul add std outsl mov rcrl test aam (bad) sti or js mov inc adc (bad) jns mov push lret loopne and stos stos adc push inc xchg sub pop push and mov imul fbstp shlb lea popf out fwait xlat mov sbb xchg cld inc loope or push adc adc sbb push daa mov xchg js add scas sub sbb mov pop test mov js push push pop push lahf sub (bad) mov pop push add push ret cmp sbb test add jmp cmpsb jle push imul mov (bad) sahf jo cmc out xor inc lods icebp lods jne add push dec subl jg dec ret ret in or dec cmpsl insl aaa sahf mov js test loopne mov scas hlt adc cmp rclb test fsubr mov xor fs push or xlat (bad) and (bad) fwait dec test stos adc mov xor sti sub jae cli popa in cmc jp adc out cmpsl jmp into pop mov je inc scas rcr out pop mov imul inc mov out lds mov or data16 mov or push in xor xchg jb das hlt xchg nop outsb sahf or mov push mov pusha gs pop std jno,pt fcompl push fisub popa into fcoml sub pop shrb cmp mov stos xchg jmp jne or cwtl mov pop test jg mov and aad xor loope jno inc pop imul decl cmp repnz (bad) push lret arpl popf sub add pusha mov repz mov mov scas test test mov inc sbb sub mov add in jmp pop pop in shll cltd mov (bad) mov push push fdivrs icebp cld push cmp insb sub das mov lock push adc push mov stos sub in jb cwtl and mov imulb push and dec div rol xor mull into out imul outsl pushf xchg dec pushf cmpl sub jmp push xchg mov fs sub fldl sub pop in (bad) adcl push outsl sub mov out fwait stos bound aas sub xor pop mov sbb mov fnstsw xchg xor xchg jno cmp in mov cmp les icebp xlat push jbe enter repnz mov and mov sub or mov adc cmpl ds rcll nop mov sbb or (bad) jnp out cmp call jle ret push mov xchg mov cmp insb (bad) pusha outsb mov in fwait xor jae out call cli lock loope aas jae insb data16 out mov pop out xchg cwtl fcmovne lretw pusha xor sub test rdtsc mov sub add sbb sbb pop xchg fild into push out arpl and xchg mov fmull jnp arpl icebp lahf xor or mov ja ds addr16 xchg cltd pop cwtl mov add fs or pusha out jae (bad) dec mov arpl das rcl movsb jecxz je iret fcompl mov daa pop cltd cmp xchg iret shrl cmp into pop mov or mov xor xor (bad) fmul adc inc mov xor mov pop btr push mov xlat movsb xchg or mov ja popf dec xor add int into clc jno repz jecxz fmul fwait int3 cmp pop push jns and cld xor stos aam sub sbb push mov xchg dec into xor xchg dec in fild mov jae mov xchg je cmp cltd movsb lret sub mov xchg es xchg mov movsb dec je fmul or jge pop shlw sbb (bad) xor dec cmc mov stos jmp dec xor je (bad) dec loop sbbl mov cmp icebp pop insb push fwait popa pushf cwtl jbe int xor xor mov fbstp ss cmp je mov jae sahf inc inc das push pop dec mov jg jp aad in fisubrl icebp inc stc cmp repz jns,pn mov xchg cltd dec cmp pusha arpl fiaddl icebp lcall xor cs cmp adc push pop cmp test pusha xchg adc lea pop nop test insb daa xchg fsts cmp cwtl xchg fcomi popa xor ret sahf es out push add add xchg jmp pop fbstp testl ds dec xchg lret dec repz ret in jo jl mov rcrb add xor test mov imul enter inc dec mov mov pop ficoml xchg jg xor or cmc out (bad) fwait out out jb add xor repnz fisubr and push adcb leave push mov or mov push mov dec cltd into in je nop test sub add and shrb aaa out sub insb fisttpll imul (bad) mov icebp ret dec (bad) call scas jg lcall aas cltd dec lret jb fsubr (bad) fistpll icebp out push dec push add enter mov addl jb ss fucompp mov mov out fdivrl jl mov mov mov mov sbb or pop pusha push xor jae scas rcrl call xorb push sbb aam fidivr xchg enter clc aaa (bad) mov int push sub outsb mov mov adcl and mov insb es movsl (bad) imul and hlt test pop mov sbb out mov sbb aaa sbb (bad) cmp cltd push ret adc inc aam fisttpll ljmp dec xor sub inc into adcl add ds bound cmp fcomi dec xor clc cmpb dec pop sub lret mov ljmp cmp nop add xor divb and mov mov jecxz push mov mov adc push add loopne bound jge adc fidivr jge cmp repz xor ljmp aam in sbb cmpsb mov xchg push cmpsl mov cmpb (bad) je insb daa xchg xchg jecxz aas cltd cltd push mov xor loopne lods call das sub push pushf jo mov loope fadd adc or and data16 mov (bad) aad fsubs dec shrb xor ret sub pop je inc or pop mov adcl mov pop lret xor enter jbe and ret mov cmp pop int cmp addr16 iret mov and cmpsb (bad) cli ja push mov ss add movsl mov inc pop push mov add cmp (bad) or pusha pop repnz movb cmp pop add jnp,pn sub fs jns inc imul and or ss loopne dec addr16 mov push xchg lods jecxz in sub fadd mov mov mov test mov sub out mov pop lret mul test mov and jno mov or mov ss dec hlt cmp icebp or repnz sub xor xchg sub fisttpl jbe fmulp loope push push outsl mov add outsl lret push icebp adc lock inc stos rcrl push mov sub jmp push pop xchg xchg mov paddd adc in and das pop sub int push mov mov rorb jne xor repnz icebp (bad) and xchg adc push adc sbb aaa adc sub sbb inc push aaa mov lea jne mov and and pop dec and stos pop out je mov cmc cmp mov fimull sub mov popa cmpsb cmp cltd mov loopne or mov or dec cmp popf roll rcr cmpsl adc adc popa mov (bad) sbb sub mov mov mov jno add lods xlat jmp jg out pop mov lcall pop test dec jbe outsb call sbb popa xor jp pusha fldl and dec push in aaa cmp mov es call mov dec adc sub hlt mov cmp push fistpll dec aaa dec mov into cmc xor rol fnsave or add jo out pop or in jecxz add and iret (bad) dec add lods dec loop adc and ret jecxz add sub (bad) ror push pusha (bad) push or push (bad) xor pop cmp cmc out cmpb push (bad) repz jno sub aas adc hlt or insb test scas jmp or fwait sbb jo out xor mov pop mov dec jb imul sbb push jo in lock cli call call (bad) or jbe arpl push pushf xchg call test out rcrb xchg pop mov mov ret (bad) pop inc nop jge xchg pushf or mov or fild mov inc movsb xchg jb loop imul (bad) into dec pop mov into pop fwait mov cmp or mov jno jo pop daa mov jo sub jecxz mov mov (bad) xor adc and pop mov push int3 xchg ret fsubrl bound rolb fs sub push scas imul sub dec sbb jmp cmpsl and andl dec loop int3 add adc jecxz jo push mov pop fisub jnp mov shlb aaa cmp cmp inc into xor stc (bad) cltd (bad) jle jnp ret mov insb dec mov push je clc (bad) jb call sbb adc out test rorl divb push add push jle mov clc leave iret or stos push xchg lods mulb aaa fdivr dec jp inc sub mov repnz mov mov (bad) dec mov out fild movsl sbb shll mov pushf rolb jmp pusha adc pop mov nop lds push fwait pop dec push jb lods popf dec (bad) mov pushw mov mov or loopne and movsl pop and rcll mov pop sub adc mov jg mov ja sub mov or out jp dec and sbb lret cmp push push fild cmp pop ret add nop (bad) inc ljmp push pop and jns lcall xchg xor sbb xchg ds popa in leave gs push jp and dec scas adc mov and mov inc imul popa lahf or lea sub xchg in sub xchg sub mov pop pop out mul insb inc mov (bad) push (bad) repz cmp dec cmp daa aad dec lods and or mov movhps orl fnstcw cmpsl cmp test push mov mov les cltd sahf adc test mov mov in sahf ret ret pop lret mov outsl mov rclb cmp jge adc xor cmpsb icebp (bad) or cmp pop lock push xchg mov clc push mov sbb adc xchg imul adc mov loop jo mov mov jne imul xchg push lret cmpsl cmp xchg jle or xor jbe lret insl fbstp shr (bad) negl sbb inc shrb mov scas inc or inc push mov cmp rol repnz adc lahf fs mov push sarl adcw sti mov sub sti xor decb inc xchg push call stos and push test push cmp insl pop cwtl lods dec js push push push loop ljmp mov (bad) hlt push or mov lahf pop cmp lock mov xchg pop push icebp mov sbb jne jl bswap inc pop dec bnd and shr mov loop push mov je cmp add xchg ljmp js fldenv stc mov inc inc dec daa (bad) bound jg mov or add sbb (bad) (bad) pop outsl je (bad) mov adc xor mov jp dec sub inc mov add pop insl test cwtl mov cmp in in (bad) scas mov mov jp mov (bad) mov lock mov fcompl shl dec fiaddl dec negl in jmp (bad) xchg nop xor icebp cmc or cli ja scas inc add push mov jmp push or pushf jae outsl sub mov xchg out xor xchg jp inc sbb jnp add or lea fs and jne jo addl mov loop faddl pushf les push pop sbb sub shlb ljmp sub sti dec xchg jl movsb push push mov (bad) popf fimul pop je (bad) int (bad) lahf jecxz lret rol out xchg insl mov xor xorb mov lea es sub xchg push xchg pop stc jo fcmove je sahf inc outsb xchg movsl jmp stos cmpsl jp (bad) (bad) push adc aam aas (bad) mov jl add jne mov scas (bad) test mov jmp dec out inc in pop stos (bad) mov adc sbb inc cmovp mov mov or out loopne mov imul jecxz or enter add pop outsb dec ret frstor mov or pusha movsl sbb pop adc insb push dec or scas frstor sti fstps xor incl jbe cltd mov inc inc dec in jo jl hlt and loopne mov sbb sub (bad) mov inc scas sar pop leave addl flds out sub lcall ja cmpsl jo,pt scas stos sbb test scas das das test add adc sub xor inc fld add jmp stos sub or inc push mov mov test inc mov lock cltd pop loopne xchg lock pop xor dec dec jno dec ss cmp push or mov mov inc or dec mov inc iret lds pop stc add jl push push nop and inc xchg adc and pop add mov mov mov jb in sub adc and insl mov xchg into inc push outsl test shr fadd fwait push pop ja ja mov jae call inc adc xor ja adc jo divl mov sub (bad) jbe push xor dec in and mov adc fwait ja imulb or jno push mov rcrb dec jne sub and cmp add ljmp mov icebp xchg rclb ds mov data16 mov bound mov push or addr16 cmp mov push mov adc cmp sbb (bad) icebp sub andb cmp nop icebp dec dec out dec sbb mov sub xor push xchg jns outsb (bad) sbb dec xchg jnp fs ret outsb and fldenv add mov jle ja xchg and je les inc mov insl call jge inc hlt jp dec in push shrl jp pushf jne repnz xlat dec loopne aad js mov add in sub icebp dec mov aad push mov rcl pop inc (bad) rolb pop mov aam inc pop test sarl sub aas adc mov icebp mov fisubr out cmpsb mov sbb loop pop xor cmp lcall in dec es inc pop push xor sub orl loopne sbb and outsl sar dec cmp lret cmpsb dec xorb daa div (bad) movsl in cmp aad lods popa mov cld loop outsb je xor or jg stos pusha xor xchg pop and popa test pop je sbb or cmpsb fstps ret sub and mull data16 and popa dec repz mov clc lret insl test pop ds jecxz std mov xchg push int iret cmc xchg (bad) mov cs jo lret (bad) sbb xchg hlt iret push mov add mov jns xor outsb push (bad) push test fmuls loop and sbb push aam inc dec popa push jne dec out add pop push lcall add push mov push out add mov (bad) push add xchg add mov xchg jp testl mov dec and movsl inc insl add and jg in fild leave and mov imul xor pop and out push cmp dec je cmp movsl mov jg push adc imul dec lds mov xor aaa sbb aam jno push fwait nop lds stc lods imul enter and mov mov ss and push mov enter mull inc cmpsl mov hlt push mov push imul inc sub hlt bound pop and imul add nop cwtl adc test enter jmp in (bad) (bad) daa faddp jecxz cmp mov lret sub push adc loop notl lret dec mov cmc test xchg push mov popa sub add cltd push pop shr lock pop adc shll sub movsb lds in data16 icebp cltd sbb pop push jmp daa (bad) cmp dec movsl adc sarl lods lahf fs jmp push mov rol jb jno inc sti rcrl pop push ds cmp inc outsb push imul sbb push int3 jbe out lahf push (bad) cmc or jno xchg xchg incb mov sub push push and fsubrl ja jae dec xor jnp jle sub push fbld xchg lods notb in pop hlt daa fs in shr stos mov mov mov jnp outsb repnz fstpl leave push xchg out daa mov xor ja cmp push add pop fldenv ds add mov fcom mull popa lods in xchg xchg pop ret adc pop push adc xor (bad) lods push pop add cmpsb cmpsl fldcw xchg lahf gs or enter xchg fisttpl cld xchg shr test int3 sub cltd mov movsl cmp adc test sub add pop leave push gs cmp mov cmpsb arpl mov or and sahf sub std sub inc push nop dec xor icebp rcrl pop test sub adc cmp movsb bound das sub aam push je jae push cmp (bad) cltd movsl fldl lahf mov cmpsb cwtl push (bad) leave hlt test xchg jmp cwtl xor sub ror cltd xchg mov mov scas jge add test into in and (bad) int inc (bad) jne sbb cs ret (bad) mov imul cmpsb cwtl mov or lcall scas push in jp push mov inc iret inc cmpsb (bad) insl mov mov ret dec in enter aam dec insb and sub jbe pop jae out stos dec lods jne dec sti dec jno outsb es sub mov sarb rcl mov bound clc pop movsb fldl pop hlt push cmpsb cmp das bound sbb in out cld mov mov insb lods lahf lods or sub ret test jle jnp cmp inc add push mov mov inc cld arpl push test inc mov cmpsb sbb inc sub push dec sub jo jns cmp mov pop lret jo fldt push or mov push clc pushf and sub mov (bad) adc popf inc icebp sbb sub xchg repnz xchg mov inc mov xor jo pop cmp xchg cmp std les adc cmp lock xchg or inc (bad) popa push jmp in mov js mov outsl std stos add arpl in xlat adc mov add dec pop and adc and push addr16 mov movsl cmp sbb loop,pt or repz arpl push fsubrl in repz fmul jne lret xor add push les jb mov sahf jmp mov sti mov (bad) (bad) or das dec ja aam in push jle add jecxz out jge xchg push ficom out mov xorl jg or insb popa rcrl dec inc lcall lods pop (bad) dec pop cmpsb adc lcall aaa mov imull cmp addl or jo ja je or and test leave leave iret mov adc mov inc sti test xchg add xchg xor lahf dec mov adc and xor pop push xchg je sar inc cmp dec out mov sbb stos sbb mov cmp xchg push ret dec fidivrl je xchg test or add incb mov or push fbld sbb adc fidivr aam xchg mov sbb adc mov sub xchg int mov push in cmpsl sub jmp xchg scas add in or inc mov out daa (bad) (bad) push addr16 scas arpl js adc int (bad) jo push popa add clc jo pop outsb arpl repnz stc and mov lds fs imul push das out cmp dec (bad) push jg add or pop aam inc ffreep add add test sub or fmuls mov das jne xchg jbe daa sub inc (bad) inc jg mov pop addr16 inc shrb adc cmpsb das jmp (bad) lods aas (bad) mov iret jmp xor mov cmc lcall pop pop jl loope jbe push push inc pop popf rcll lret mov mov jns mov sti mov mov cmpsl and lret clc cltd adc lret xor and in push xchg or sub xor cld add mov push out lock js (bad) sbb push in pop (bad) xor std mov dec sub pop adc push pushf cmpsl dec daa and lds pop push push add ret jp dec mov xchg mov leave sbb and test mov fmull jo out dec outsb fs frstor xor jg dec movsl push scas or scas adc fldt xchg inc jns mov push sbb xchg sbb push sub jo inc (bad) pxor xor xchg incl js in pop dec mov out incl sub hlt inc jbe xchg popf cwtl sbb xor jbe dec mov dec sub add lret stc mov int ja mov push push mov movsl inc sbbl inc andl rolb cmp (bad) out xor and fldcw lods add lcall imul fwait xchg sar in mov pop sub mov jle clc shrl pop push mov out dec fcompl (bad) mov scas mov xor les push sub mov cmp callw ds aas and pop loope or lahf pop (bad) jle pop adc sti les movsb sahf pop lds adc lods nop push jno push mov mov (bad) lea icebp xchg and lahf ss popf (bad) ret lahf pop or (bad) add leave add mov les in outsb jge mov pusha outsb lcall aas data16 push icebp mov jg ss and inc fwait xchg ja fidivr (bad) std loopne inc mov adc xchg xchg daa in lea cmp push lahf mov mov aaa aas pop mov gs jp nop rcrb add stc or or ret lea (bad) sub jno or push push test mov cmp cmp xor mov fidiv (bad) mov adc ficom fwait inc lods dec cltd mov in mov pop xchg enter pop out add fisttpl imul in roll or jno or mov outsb aam jge push ret jo cmp in sub jae scas jnp hlt cmc popf test mov dec fdivl mov push pushl repz test fistp jmp imul cwtl lret xchg pop mov inc cmp pop outsl rorb mov fistp je lods sti pop sbb mov (bad) je cmp fs xchg cmc lea cli pushf mov cmp pop xor repnz or mov dec divl mov scas rcll aad out insl scas pop outsl pop js mov gs loopne dec sbb cmpsl addr16 push rol notl and jp inc out popf cmpsl inc sbb leave or fstpl mov add adc cmpl fucomi push xor test pop sbb fistl insl mov mov fwait mov mov lods xor sbb lock jp shr (bad) push mov rclb xchg or mov data16 or and mov outsl mov shll insl mov mov cli add push mov and clc leave xor sub mov and inc dec out inc jmp std xlat movsb xlat ljmp jb in xor cmp adc (bad) xlat pop cmp xchg pop and xor insb insl outsl mov or sahf add sub mov push fisttpll mov ss in and out mov scas data16 dec (bad) lea pop pop movsb aad (bad) sub xchg arpl repnz ret mov inc xchg or or sub and outsb jne aad sbb rcl call jl cld mov andl mov (bad) aaa fisttpll cmc add and or ds xor jb mov sbb push sub sbb cmp pushf sti out cmp jl std sbb fldl cmp ficomp arpl shr mov mov push loop dec sti js cld stos push pop pop aaa or movsl (bad) cmpsl pop cmp test mov arpl inc and xor cmp or ret sub mov sbb xchg xchg cltd je nop movsb xchg pop mov inc (bad) and leave xchg inc dec inc in dec adc mov lret adc sub cmp daa pop pop daa push push sbb (bad) mov js je mov cmc xchg sub or sarl jg jb insl lds je jo (bad) popf dec and lcall int3 out mov data16 mov mov mov hlt cmp push pop mov popf shlb push xchg sub xchg in (bad) pop nop cmp and movsb outsb inc std loop in sub sub push jge pop xchg imul in lods sarl adc push lret mov leave loop cltd push icebp in in js inc les push mov ja push add hlt pusha or lret fcompl imul add roll inc adc fstl bound nop imul inc int3 cwtl mov push and ljmp inc aaa push test cmpsl cmp sbb adc mov jb xor lods outsb pop imul sahf pop aas push push enter insl jno pop es pop jmp dec lds aad dec mov (bad) hlt fisttpl jl jbe sub sub cmpsb push pop aaa pop inc xor or push ja in fildl inc pushf push in rol test mov push mov adc push cmpsb push (bad) or outsl xchg es fsubrs sahf mov mov cmpb and adcl mov xchg shll nop sbb xor mov inc (bad) or in push and sbb pop xor push sarl ja sbb (bad) (bad) inc sbb (bad) cmp and pop inc test aad es stc dec ds into xchg test jo clc jne lods popa push lret fstps adc jl push mov add xor cltd jb sub call (bad) mov inc mov jae outsb out lcall std into je add popa lea xor pop mov mov popa dec rol cs mov pop sbb repnz dec aam in jl mov imul ret mov rorb cs adc or pushf rcrb jg test jecxz mov repnz xlat ds sarl fmuls jmp fcmovnu adc inc mov rolb fldenv ret inc ds xchg mov call mov xor xchg adc sbb cmp lcall les les inc cld push test inc push dec mov jnp enter les lahf enter adc inc iret ret gs cmp add mov sbb add push inc add adc aam loop outsl adc loope dec xor out sti inc jns mov and aad inc inc mov out in mov jo mov push rcll add int3 das leave mov pop lret push enter mov movsb dec notl mov mov and test cmp ficoml and fnop mov adc adc xchg test cli (bad) fldenv (bad) sub cltd clc mov ljmp fdivl (bad) sbb data16 push (bad) ret arpl aam leave or dec ja int3 jns mov jb mov push repnz lret push inc push add cmpsl orb push ds addr16 aas movsb xchg (bad) mov lahf gs or push add ds xlat push sub incl pop outsb cwtl jns mov jno movsl push stc pop in pop xchg mov jno pushf pop push mov pop mov cmp out mov (bad) mov movsb pop cltd nop mov mov mov out daa lods push jne bnd mov xchg dec inc pop ret lea mov and jo adc fsubs or or mov cmp xor and jae movsl mov lret ret call and lcall pop mov xchg out mov cmpsl pop div pusha push mov sub fwait mov mov mov scas push lds outsl rorb push mov sbb fsubrs pop out add (bad) sbb (bad) sbb (bad) jo or scas sahf dec popf push and nop inc xor outsb adc push testl mov es push push inc pushf scas mov mov into shrl jmp repnz imul or dec jnp adc mov xchg lret pop insb cs test push cmpsl sbb jle notb sar insb subl ljmp hlt mov cmpsb inc cmp fnsave ds pop mov fisub or mov pop and cmp ja iret imul sub pop adc jl jne jl adc pop push inc mov fsubrl sbb jnp fsubrl ljmp lods (bad) xor xor push or inc or js xlat ljmp add xchg sbb xchg dec popa cmp inc xor xchg jg mov or lea mov adc inc loop push cmp scas (bad) lahf add ss adcb adc jge stc push pop imul lods (bad) repnz notb jne std lret das popf jns mov pop jge jge mov lahf cwtl clc hlt jmp aad ret pmaxub mov fisub daa lea or mov mov sarb out movsb push dec jne aas es cld or adc adc pushf or les jp mov and loope jae sub add pop push (bad) std jno (bad) jle int3 and scas xor add mov cmp orl (bad) push popa jns cs in ja (bad) inc add adc cwtl stos mov mov cmp dec sbb sub mov test pop bnd dec cmpsl sub cmc das fcmovnb cmp imul cmpsl lea dec sub cld call xor jbe hlt int or fisubrl jb mov push jb std fisubl int cmp insl das dec bound stos fiadd mov push cmp xchg xchg jnp xor mov push rcl pop jge fsub shr push out (bad) sbb in xchg jae ret push mov jb lock jno test shlb popf inc cmpsb and test xor jbe mov cmpsl imul mov mov lahf push cltd jl xchg push aas pop mov adc push iret mov pop call xlat (bad) add dec mov hlt pop or cmp add pop inc (bad) dec sbb mov mov cmc mov adc dec jb leave das aad fs pop jne enter into repz test mov fbld mov loop data16 add xor fistpl xchg jmp shll in push push data16 mov int3 bound lret cmpsb cwtl aad pusha into cmp mov ss (bad) adc sarl nop cwtl mov jo inc lret mov sahf lds scas mov out fimul pushf fisubrl sbb push sbbb mov or or mov jns (bad) ja popf into pop xlat vunpckhps mov out mov cmp (bad) push lods jl fistpll jge and and ja (bad) mov imul mov inc out and jo ret ret dec push push mov cmpb pop and movsb xchg mov jo mov and not push stc mov dec jmp stos rcrb lods nop ja outsb dec lahf and in scas xchg jp retw (bad) shlb shll mov scas cmp (bad) sub dec das outsb pushf inc sbb scas add xor add pop aam int sbb ret lds insb out mov insl dec sub dec pop test mov adc rcr cmpsb mov xchg mov call xor xor aas pop pop repz pushf ret into mov jb xchg (bad) (bad) arpl inc mov push xor test fs out ds inc call push mov (bad) jge push cltd sbb stc sti es fcoml into (bad) mov adc adc dec or sbb mov add je sub and jb add inc mov mov and and add xor inc (bad) mov lea jo adc call ficomp mov lock pop jae jle fwait push or js icebp xor hlt mov adc mov xchg out jb and xlat lods std movsl cmp stos adc adc ja add push xor inc inc ljmp fimull movnti clc jno aad dec leave push xchg imul arpl fbld push pop sbb shll in aaa mov outsb cmp push mov jmp sub (bad) and arpl out sub dec test insl or scas imul push arpl xchg mov xchg push fist ret mov je out jl sbb icebp mov xabort mov mov adc cmc xchg pop xor popf add inc pop std mov inc mov scas rorb popf add out mov mov mov enter sbb xchg movsb ret sub xchg sbb leave add add cwtl lret adc xor dec mov xor cli sbb mov mov (bad) aas es imul cmc cmp (bad) out movsl xor cltd pop testb cmp test lcall xchg loopne lret cmp sub rsqrtps push inc adc pop sub push std xor in das rorb cmpsb lods jg add jmp inc fsubl mov xor out outsl fwait ss movsb adc pop add push das adc xchg and dec hlt data16 mov sbb das rorl sub lret daa lods push sub sbb or imul xor xchg or push (bad) outsb pushf std sub (bad) or jg rcrl sub xchg int psubd mov inc sbb cmp orl adc push shr xchg dec int3 jnp inc push sub xchg push push addr16 daa vxorps mov adc jns std mov xchg fistpll and mov jne test mov subl clc inc insl xchg jge bound outsb sbb ret inc loopne jecxz out adc repnz lret out arpl and lret push and jge mov or add pop repnz iret dec (bad) neg (bad) dec xor or inc in mov jnp in push pop mov mov pop into xchg bound dec and or xor xchg fst in pusha dec pop inc in cmpsl and cmc sti adc cltd aas mov push mov xchg nop or sub pusha fnstcw xchg repnz pop dec push out mov jmp fs mov mov push out mov ljmp stos shr leave xchg jge push push ljmp lods data16 fnop or cmpsl icebp cmc or sahf ret xlat xor fcoms enter push mov cwtl mov fstps jmp scas test mov stos xchg out out out iret sbb je aaa inc lahf sub lea xor xor push cmp loop jecxz out inc adc sbb scas xchg dec jle lret cmpsb dec jle (bad) sub es cmp sub mov dec cmp xchg jge scas mov push mov imul mov jge leavew inc mov jg andl fstps jb popf mov fstpl inc ss loopne mov xchg out arpl mov xchg xchg lds push out daa loopne out xchg push iret (bad) mov fisttpl and adc mov fmul inc and mov add test cmpsl into adc outsb pop xchg and cmp nop ret cmp mov popf adc in add push insl cmpl push mov and stos nop lcall lods mov add pop or stc fwait xchg std inc dec sub insl dec int3 add mov push js cmpsl jmp push leave jnp lea nop pop push add pushf rcrb xchg adc loopne pop test loop fadds pop insl ss repz sbb fs enter sbb rorb sbb inc dec cmp and push leave pop mov movsl in pop mov insb mov dec push fnstenv or orl jbe insl aas xor mov fs insl pop mov fnstcw (bad) in pop xchg scas jo fwait and lret push xlat loope cmpsl cmp andl pop pop mov xchg jl stos push mov or std sub mov dec push mov mov lock stos adc jnp nop xchg push bound mov addl test add push and clc and cmp mov aam es jmp mov xchg fldcw das add stc test xorb pop push cmp out inc dec cwtl or lahf inc enter nop dec or aad and mov mov test add or outsl cld xchg mov je cli jecxz insb cmpl and (bad) jnp popf insl or jbe and std shl lahf fildl mov stos pop aaa (bad) outsb idivb jecxz imulb ds jns xor sti mov movzwl mov jo test push in ss xrelease mov pop mov cmc repnz jecxz push fs cmpsl mov out mov lret dec push mov outsl into lret fnstenv hlt outsl ss pushf mov mov inc sti out lahf sub pushf lods sar lods add jg xor xchg cmp xchg xchg cmp daa enter pop mov xchg xor popw insb add lods ret (bad) fs addr16 mov xor cltd xor les int3 inc fs cwtl (bad) jne call clc lret clc lcall mov ret mov sub cmp push cmp dec repz pop mov cwtl cli xchg int adc cltd sbb jno fwait jns or push inc lret lods fnstsw dec jbe or or leave pop inc je push bnd mov (bad) dec cmpsl stos sub test in aas adc mov out lcall jge cmp dec mov pop fldenv out pop (bad) xchg xor jmp outsb shlb cmc cmp pop mov cmp lds popa in and pop sub adc jb (bad) icebp mov xor out dec gs fs hlt loop ss int aad mov fwait (bad) jns test xor in pop ds sti inc (bad) repnz data16 or cs mov xor aaa jb adc insl in lds adc sub lds mov roll mov test call lret into push out jae mov and push push sub xchg lret or pushl jo (bad) rcr test cmpsb ljmp add jo lret add out mov call xor (bad) (bad) jns cmp aam stc scas clc aaa dec cltd lcall cmp call call leave cmp ret mov pop (bad) cmp or lods inc (bad) sub loop js pop pushf in sti out aad imul xor xchg gs gs dec dec mov cmp mov (bad) and jns mov cmp jecxz push xchg enter and or push dec mov pop aam cmp xchg lahf bound test out mov test cmp push xchg pushf mov in jbe jecxz or divl (bad) cmc fisttp push std xchg out int mov das dec xor (bad) (bad) and dec stos inc jne bnd int3 gs lret pop xor (bad) dec idivl adc or aam scas jp mov jg sbb xor fisttpl jns inc xor xor adc pop pop jge lock and test sbb push aas xorl pop push sbb xor (bad) pop xor mov or insb push pop gs pop subl or pop mov dec dec outsl enter lods mov xlat js call call leave pop adc insl and rol (bad) leave or mov fwait and andl xchg negl ljmp add push and (bad) (bad) or int pop (bad) out pusha notl mov cmp outsl sub popa pop and addr16 loope and maskmovq notl stc adc std xchg js cs repnz rolb lods roll loop fs cmp sub dec dec inc jl jnp movsl jg test cmp cmp repz std xchg clc cld js add push fstps xor adc pop mov sti imul pop insb in (bad) jp mov pop push sbb (bad) nop push xchg out cmp adc push jmp test pop mov fistp movsb and mov push xchg sbb std pusha lds icebp sbb xor and popa cmp aaa repnz xor dec push popf (bad) ret pusha loopne mov mov loope test dec mov leave sbb stos cwtl mov bound cwtl lret mov inc xchg mov sahf xchg mov ret pop jg push pop in outsb imul in jns mov movsl dec mov mov jns jp (bad) pop cmp outsl mov add lret xchg or nop sub jae pop sbb add enter enter inc inc scas bound inc xchg lds roll sbb cmpsb je adc inc adc fs add xor sub dec cmp push (bad) dec rcpps push aad aas mov lea adc loope ficoml (bad) clc mov jnp rolb mov sti cli test (bad) pop jae mov inc mov jne cmp push xlat dec scas dec push lahf xchg pop and or sbb cltd xchg dec add daa loopne mov and mov and lcall mov add mov pushf in cmp push cmpsb jb cmp jae (bad) mov mov xchg mov aaa adc xchg pusha cmp sbb jg add cmp mov pop pop xor test sub pop pop and mov (bad) mov addr16 mov callw mov fisttpll sbb fisubrl scas xor mov cmpsb jg sub pop mov pushl adc es rolb xchg test fwait mov int xchg cmp rcr sbb xor pop or dec movsb lea es mov and mov aam popf xchg lds fmuls mov fisttpll insl mov test mov sbb jnp outsl jo test xor pop dec daa cmp enter out in lods and pop cmpsb es inc sbb push lret jle movsl mov (bad) pop shrl sbb mov lds ss lock aam movsb aas sub lds cmp mov jge sbb das jge mov (bad) push dec lret sbb lea je and jb ret dec ljmp push jo add xchg jp or xchg dec loopne push sub stos cltd pushf test sbb ja add stos xchg adc cwtl xchg imul lock pop jnp les sub adc cli cld mov pop jnp (bad) call out cmpsl pmaxub outsl lahf push scas stos mov cltd push add cs insl and icebp call repnz jnp mov pushf push jmp adc outsl (bad) or clc cmp lock lea ds (bad) je insb ljmp push (bad) lds xchg inc stos (bad) fbstp imul fnstcw jb hlt popa mov stos pop enter ljmp jo sahf adc sbb lds push xchg jo sbbl popa pop ret jne xor scas into cmp jb jo cmp cwtl aas xchg xlat pop sub xchg ret ljmp mov (bad) (bad) mov pushf (bad) dec clc sbb sbb push jp je jle mov js js mov xor jbe mov add nop dec mov arpl and push cmp push sub mov xchg xchg leave jno inc sti (bad) mov sarl lea cmp mov stc test mov inc scas xor adc adc xchg jns das mov cwtl sub scas inc repz jbe fcoms repz mov push and or int3 push fimul sbb test or out loop mov add incb cmp mov cmp fistpl inc in jno (bad) mov loope leave and aad cmp xor (bad) cltd xchg je std and xor cmp xor jge mov pushf dec std mov mov dec je daa pop jl pop push out jge dec mov lahf ret aaa cld jp mov push loopne pop adc add inc daa sbb push fsubs add add pushf mov or xor xchg dec dec cld into mov mov call mov or mov rol xchg sbb mov mov outsb mov xlat fsubrl jbe cmpsl (bad) xor negb mov testb call in mov je push jns pop sti shll adc cmp add cmpsb enter and nop inc rorb loop,pt fcompl ljmp mov test lret ljmp out and test inc lahf cmp xrelease or and fsubrl in jb ret push int3 pop aaa mulb daa pop xchg jg test dec enter xor arpl or cmp lods xchg sbb jg push loopne sbb (bad) repnz cwtl jle jg push leave arpl adc shlb or lods out mov mov cmp jae and movsl push inc leave ds mov jo les pmulhuw movsb lret mov (bad) imul mov popf sti mov adc mov popf sbb mov sbb push xchg shlb push lods cmp mov jo mov mov test scas mov sub ret test and mov cmpsb push inc sahf dec enter mov fs cmp xcrypt-cbc cmpsl push je (bad) jecxz mov xchg inc pushf (bad) mov xor xorb (bad) hlt cmp hlt nop push push push lret orl pop mov jae repnz mov imul cmpsb mov pop dec adc fldt lret dec mov inc mov ret add fidivrl xlat adc xor mov inc push add subl inc cmp push pop fnsave sub mulb leave xchg pop test jle aaa fldenv fs pop nop jg lret cs fldenv push fistpll mov addr16 push in sub cmpsb mov jnp out and (bad) jne adc adc pop push mov pop adc mov fcoml fmull inc lods lahf adc push adc mov dec push aaa jns push clc cmp into mov sbb jle clc add adc and sbb dec dec push insb add test push cli icebp hlt jne pop andl insl (bad) pop daa test adc add sub xchg lds das repz loope ret loope inc sahf push out add jl mov sub nop mov jno jg add cmp ljmp xor popf pop out fisubr push xchg mov repnz jl or xchg pop (bad) negb bound les flds adcl jne push mov mov scas push icebp cwtl fwait sub mov mov mov test pusha fidivl outsb test dec xlat repnz lret jno mov jmp sub lods xchg movsl mov sub pop scas sbb ds cmp movsl sbb mov stos mov xchg aaa movsl mov push mov mov gs mov xorl mov sbb repnz arpl stc rcr imul jmp lret cmpsl fs fisub rorb ret ret mov sbb jnp mov movb sbb imul inc inc mov lods (bad) jne cmpsb out (bad) (bad) fnsave jmp das call mov sub (bad) mov pop push adc sub out inc add inc loope (bad) scas addr16 fadds ljmp mov jl xlat xchg sub cwtl aas sub mov test sbb imul lret or add imul shlb (bad) hlt inc xor movsl xor mov xorl push lods shrb pushf jg fidivr adc outsl mov fs int3 subb sub cli ds mov dec jl repnz inc or inc pop or movl rclb insb push jns mov pop sub adc adc and mov xchg inc (bad) mov jge jae and cld fistl outsb inc aaa sub data16 pop jmp inc es loop mull adc in enter mov inc jp jne scas pushf test push fstps lea mov push jg mov ss hlt fidiv cmp (bad) jo rcr mov out out and into cmp xor les cmp fwait cmp leave addr16 xchg add jae add loop std sub adc lods jnp rclb lock cli dec cltd js sub pop sub inc popf ret iret stos jbe repz aad insb cmc movb dec push js mov ljmp shrb xchg adc xor xchg testb ljmp rcr test push rcl cs jmp and cmp or cmp int3 adc mov sub shl inc imul int3 push pop lcall inc popa cwtl pop ljmp jne mov in mov cltd mov not sbb stos imul mov mov stos imul push mov lea stos aas (bad) movsb ds std jl sub lods or mov js int3 outsl leave nop idivl cmpxchg lods test clc sbb and push fs std mulb es cltd jo jo mov mov (bad) cmpsb lds les adc pushf sbb popa xlat (bad) and jnp xor mov lods mov sarl (bad) mov pop imulb add mov mov sub stc xchg dec mov mov cmp mov pop leave sbb and rcrl xor mov test pop cmp scas addl out lahf push insl hlt test and xor ja ljmp add xor lods jl push imul xor or inc push add fs xor les push (bad) out out add inc add mov dec mov mov and loop (bad) mov sbb (bad) bound out outsb fstpt test fxch fwait mov fcmovbe je or stc aas popa adc push ret xor jp das jecxz dec cltd sti fisttpl lahf or ret testb nop cli fsts xchg sub fs jbe (bad) in repz jae (bad) pop arpl sarl pushf ljmp aas rclb in adc in decb loope mov pop and popa xor or pop mov cmp das shlb rorb ljmp fidivr repz decl dec iret adc ja jge add (bad) test das or pop mov int and (bad) jno int3 mov push push xchg shr int sti add sbbb mov adc mov and sbb add ljmp call and inc jnp maskmovq add insb lcall mov mov test das push test mov dec mov pop lods ret test xchg pop add cmpsb push cmp xchg ds cwtl mov xchg popa loope in addr16 imul fs popa jae (bad) loopne je sbb mov or adc cs fadd push mov push xor xor ljmp and fadds mov ja or push push xchg mov cmp test insl sub dec push and xchg into loope or inc (bad) fnstcw out xchg lods xchg inc xchg lea out cli mov push add add movsb ret imul dec imul daa pop push adc ss add xor add and outsl mov out repnz pop or lahf pop add cmp lds (bad) (bad) jo jns adc lea push lea inc jns jp test insl push sub push test std mov adc push test sub test jb fmuls or jmp and aad mov xor out (bad) and leave pop inc jne or fistl ficoml mov (bad) xor cmc lea cli xchg les sub dec mov push mov dec mov clc push ss aam and sbb sub cmpsl mov fldl lea adc xor dec ja mov push out sbb cld pop adc or (bad) (bad) cmp ja xchg jns std lret sbb mov das sub push push inc cmp out dec push jno sbb pop push sbb mov cld lock lret fdivp std fisubrl pop push in fs test push jno lcall loop xchg mov test rolb out xchg bound (bad) loope xlat or pusha adc (bad) faddl adc adc nop mov and xchg int3 jno shrb xchg jnp push cmp out cwtl pop (bad) mov rclb and in xchg sbb fsubrl cwtl or pop std fcmovnbe inc shld imul sub out add mov cli inc repnz mov cmp das xor (bad) loop adc (bad) lret (bad) out (bad) fdivrl hlt cmp jno mov adc fidivr inc xchg adc (bad) aaa ljmp imul mov (bad) jne inc inc adc add rol (bad) mov dec arpl inc and cli enter sbb sbb (bad) mov bound rorl xor repz daa loope repnz scas cmp mov sub stos inc add cwtl loopne inc les jg test stos mov leave inc cmp mov push mov adc cltd ljmp dec pop in insb paddq sub jecxz xchg pusha sbb dec dec idivl mov mov iret dec jp test das dec pop fucomp push cltd jmp mov and leave push sbb out and mov frstor mov loop sbb js xchg mov mov and inc gs mov call fistl mov divb out and nop imul or mov add mov push ret outsl (bad) (bad) repz test sbb rolb xchg sahf rorl shl ret stos cmp push inc and rorl sub or dec sbb or mov mov pop bnd push inc mov stos adc fdivrs loop ret sub les adc ss cmp andb mov mov dec and sbb sarl cltd sbb jne fstpl pop pop lds rclb popa fldl mov push and or xchg inc repnz xor shll pop dec cmp incb or mov push xor cmp loopne or pushl ljmp mov xchg sbb sub daa int3 push out push xor sbb out fsubrl dec loop and mov stc jno (bad) cli and stc and in pop aaa je jecxz xchg fs mov sbb xor fnop arpl mov iret jno movsb cmp popf push outsl add jbe fcoml xchg cmp dec xchg jl aad cmp std lcall jns mov outsl xchg xchg xor or inc mov bound call adc aam data16 add pop xchg sahf sbb (bad) mov mov lret sbbb out and dec mov dec adc mov pop mov inc icebp ret dec jge xor test cmpsb js cltd jns jbe jmp bswap outsl jbe lock jge dec pop push mov xor jo mov and mov (bad) test shrl (bad) leave add fadds insl cmp das mov loopne cwtl setns clc aam and jae push and subl cmp (bad) pusha outsb cwtl out lea inc addr16 push pusha inc fdivrl enter insb jo notl cli sti mov sub gs ss (bad) into and push test push repz mov dec mov add pop cwtl sbb (bad) xlat cmp mov xchg dec jns mov inc jo dec dec dec jle (bad) adc lods (bad) xor pop fimull cmp hlt imul pop popa aas mov xchg cmc mov mov incb dec mov add popw inc lods pop test jne sub jae movl fdivrl ljmp sbb out loop gs pop mov mov xor xchg sub jl std sbbl fild lcall adc adc jge in sub xchg mov stos jp mov jecxz iret scas out jmp xor pop and mov mov mov fnstenv and cmc inc cmpsb adc cmpsl mov or mov mov cmc sub in push mov mov sub adc sti mov and test cmp cld adc imul pop imul (bad) enter push xchg divb sti clc push cmp and scas aad xchg (bad) push imull pop divl or xchg or popa addl std cmp rorl mov loop adc js dec add add pop and int dec insb sbb jbe out sbb xchg mov xchg in aad es push mov (bad) xchg sub xchg in lcall mov fs pop ret dec push inc cs (bad) add add and add enter (bad) pusha addl fdivrl dec stc pavgb inc dec dec xlat jmp push push scas fdivrp fisubr lahf inc cli mov adc pop bound push popf jecxz sub or sub ds adc sub dec hlt rclb pop jmp das out mov xor or stos inc push dec pop sbb push mov push les push clc add xor cld and cmp cld popa cli cmp cld arpl xor cld push cli mov out (bad) out test loop bound enter push enter sub mov adc enter ljmp out enter lds int3 lahf adc dec icebp cwtl test cs push jl xchg nop inc mov stos and loope dec enter int3 sahf (bad) fldl fcompl lahf push repnz in inc ds movsb and repz sahf push repnz xor icebp sbbb cmp arpl and imul mov pop fmuls pop shll inc stos and shr dec pop and mov xor imul inc mov cld aam out out ret movsl test inc mov leave xor lods frstor loop (bad) mov mov test cmpsb icebp inc mov cwtl fcoms dec sarb dec cmpsl test push xchg and es push push and bound xchg dec loopne add lahf cmp jae sub or jge mov xchg test mov or loope adcl or loope mov xchg mov pusha iret jns xchg scas (bad) mov popa mov rolb out ljmp inc fstl popa pusha mov mov xlat out pop jle pop std ljmp jecxz mov xchg and lods aam or outsl bound or sub rorl das dec popf lahf outsb xor cs js fwait repnz jns lea lock pop pop pop push sub ret popf rolb jg (bad) faddl xchg test and iret jmp and in in call imul andl and mov or mov ja and lds lods fcomp lcall lahf mov (bad) scas mov push stos add mov mov ds add mov imul mov hlt add cli adc xchg out fdivrl into xlat rcrb jae lcall mov xor flds imul je fcoml inc lcall mov pop stos popf sub (bad) (bad) idivb gs or lcall xor aad or jns mov imul push and dec dec mov push inc in jnp xor aas and xor clc push add leave mov mov jl push je rcrb sub cmp loop mov mov inc xor (bad) push mov cmpsb pop clc in cli jns xor pop lahf pusha adc mov (bad) mov mov les mov ss sbb pop fcoms daa stc mov mov dec repz jmp adc pop mov shrd pop and out adc fsubr aam loopne into mov mov and (bad) sbb jbe push pop mov mov pop ret sub inc mov jbe,pt gs pop inc xor fimull cmpsl lret pop push outsb fldcw push jae loopne fisttpll mov or fwait sub xor popf out lock mov daa jmp hlt mov sbb cmp mov sbb (bad) lods push hlt nop fs dec stos mov push das hlt popf mov and addr16 mov jmp test xchg mov out mov inc fisubr (bad) in movsl sbb cmpsl xchg cmpsl sbb push sahf pop arpl mov mov arpl and dec cmpsl sbb push imul xor push adc dec cmp push in mov pop icebp outsl int3 repz fcoml sarb sub push fs cmp jbe cmc int leave dec outsl inc mov or cmp lahf dec daa and mov and pop mov stos jecxz lahf sti (bad) iret imul out lods dec sarb jns movsb sub pop xor mov test sub pushf inc movb movsb cltd xchg push fs out std sti adc or int stos xor ljmp or dec ficompl test and jp call sar imull popa mov mov add es mov es flds loopne,pn jno mov movsl or jle pop push in jecxz stos xchg clc (bad) stos std addb ja mov mov inc gs bound inc mov xor jno add es mov imul sub daa push sub ret out rorl (bad) lea jnp into dec or test lods dec es push jge int movsb gs test sub adc push xor popl mov pop imul adc mov xchg fwait outsb or xor inc inc ret bound icebp bound inc lret pop jae lods and cmp mov mov ss pop es sbb notb hlt and push enter lea adcl push dec ljmp jno xor test pop into cmp xchg mov add lcall outsb fs sbb bound test add lods iret lcall leave mov cwtl cltd stc fisub pop mov lret mov push push adc out mov dec shrb cmp fs ret adc cmpsb leave pop imul sub clc insl imulb cltd cmpsb push (bad) mov pop mov shll or subb popa inc js adc inc repz ret fwait pcmpgtb nop aad rol mov adc sub (bad) int3 dec imul adc push mov jp xchg into or lds sbb fimul dec mov dec jb jnp inc sub pop sbb add mov xchg roll pop pusha (bad) insb test adc adc loopne lock jno xchg cmp sub sub jae hlt pop in data16 dec pop mov jnp mov mov mov pushf mov dec add and sbb inc imul push ljmp mov sahf push test test rol es dec mov and pop xchg nop test in xchg xchg rcrb push ds shlb push (bad) into sub jge xchg add adc gs testb xchg lret xor jnp adc sub adc je xorl mov xor mov mov in fadds cmp sub test adcl xchg mov push (bad) xor or add jae fldenv push or dec mov ljmp jp mov lods sub push mov inc ss imul mov pop fisttpl test outsb aam xchg mov jmp data16 fcoms lock push inc ret jno divl imul xchg jmp daa mov insl xor push shl sbbl enter cmp jp push sbb dec mov cmc and push cltd adc adc xor and pop ret xchg lret mov xchg out xor xchg mov pop xchg sbb push mull push mov nopl inc daa push pop cmp repz mov or scas rcll stos lea pop mov ret pop cwtl and mov aaa fmuls fwait pusha lcall xor int cmc mov je lods mov add addr16 push aas cmp lcall gs adc xor cld js xchg cmpsb inc inc ljmp repnz (bad) sub mov je shrl sahf inc and (bad) movsb inc mov sbb sbb out add jmp cltd movsl insl cs lods out fbld xchg jle adc in adc xor loopne cltd (bad) mov sbb dec hlt into and and lods sbb push test lcall sub in sahf fisttpll test fidiv leave dec nopl mov nop ja or jecxz nop pop sub add flds ja rcrl jnp xchg cwtl inc xor bound jno aas push cmp (bad) mov inc push or int pusha inc sbb xlat repz call (bad) mov jmp pushf divl repz dec mov adc rcrb aaa jbe scas int3 mov (bad) cmc xchg aad push pop jns jl pop (bad) faddl mov shll aas int adc out cmp mov jp insl stos ss outsl jae mov pop jg scas imul sub out push dec jnp adc (bad) int cmp dec sti mov into adc sub (bad) cmp subl cmp imul xchg aas inc xchg mov pop loopne addl jge inc cmp add (bad) into sub pop mov test in rcl int cmp in cmpsl daa sbb loop push and cmp lds or mov stc mov adc jo or ja mov push add (bad) or icebp pushf cmp pop and adc pusha inc jl lds push xchg push mov sub lea pop aad imul hlt xlat push in inc jns sbb xor bound mov pop or inc out sub adc push inc outsb jp push cmp dec or cmpsb mov lods adc jle mov arpl in lods movsl jg movsb jbe jmp jae mov xorb into dec stos pop sub push aaa push or xchg lret and (bad) cmpsb sub bound jp mov cmp outsl (bad) cmp stos icebp test mov gs test mov and jnp and test ret sahf adc sarb ss inc or ja daa fucomi jp decl and stos scas mov xchg (bad) gs jp mov imul divl cmpsb daa push insb loop mov sub dec jle fidivr clc mov jl test adc es sbb sbb mov fld (bad) mov popf ja sti imul inc dec pop jp pop or popf out push out hlt bswap cmp or enter inc pop icebp cmp push cltd clc adcb add nop aam xor inc xlat cmpsl adc (bad) aam mov mov popa fs and pop mov mov in add lock gs pushfw out jmp dec inc fisubl xor adc cmp roll xlat jl sub roll sub inc pop js inc xchg push sbb clc imul push mov cwtl jg mov dec in inc jne stc iret sbb pop jg out pop jne (bad) scas adc in cmc sbb mov adc notb (bad) sbb cmp mov leave jo pushf adc xchg lods cmpsl lahf pop jl xlat push ljmp dec push data16 cmp (bad) addr16 hlt xchg (bad) or push push pop arpl imul mov and inc jg jbe cld les fstpl pop popf ss jmp pop addr16 jmp xchg fildll lret mull jae call out mov xchg and loop imul test test mov cmp lds mov push adc fist sbb xchg jg bound and bound dec mov inc mov and mov push in sbb cmp bound in sbb cmp out push and (bad) lret dec push adc push mov lock sbbb mov ret scas ds adc adc xchg les jo pmulhw subb leave mov pusha xchg or clc pop pop js (bad) imull dec mov fwait outsl mov add pop imul xchg cs or mov xchg (bad) xchg (bad) loope pop fisubl cli jo mov aas ds mov outsb adc cmp js adc and inc daa cmp int push jne jne xchg mov comiss js adc subb mov imul clc iret clc sub cwtl popa pop pop cld mov cmpsl ds aas leave hlt jb outsb xor add sub mov aas inc sbb cmp outsb shl push jbe js and fucomp mov sbb in testb sub xrelease sbb addl shll in div push ss jno jbe jno insb push jo inc sbb popf fisub and xchg cmp xchg cltd fidivr leave sub xchg test repnz and popf pop ficomp fstpl add push xor pop mov cld push sbb sbb sub iret push push push adc je iret in lds sbb add cmp sbb cmc inc cmp or cmp lret lock loopne lock push mov cs push inc adc cwtl lahf sbb sbb push xor mov jae pusha aam xchg out mov test sbb insb cmp sub movb inc jp inc cwtl stos nop jmp imul inc mov sub stos dec push lahf push in aam stc xchg and test or push (bad) addr16 mov jg repz jge adc (bad) adc fstpl enter popa aas jle out jmp das jle sbb pop lahf rcl jge jl sbb (bad) lods xchg mov fistpl adc add jg and mov inc and pop add loope adc adc mov cmpsb fmull imul std jmp ret xchg and push sti lock cmp add and mov xor jmp dec je jg mov aaa int3 xchg hlt rcr sahf jmp fildl jecxz adc sub inc mov pop inc out dec sub pop add cs or stos hlt in lea aad loop xchg jp incl pop lahf in push mov ss (bad) xor cld xor mov lea jnp inc mov scas or dec in mov xor or push mov outsb lock rcrb add adc shrl (bad) cli push negb cmpsb jne std sarb lret xor mov out or aas (bad) dec sar imul js xchg popf in lea in xchg lret in jge cwtl or pop les js in das stc fisub pop std mov out aad adc in cs jmp fbstp mov lahf scas xor repnz sbb pop jb das mov sbb ret test cmpb sub and inc jno add push aas shl dec fdivrl inc add loop inc xchg pop cmc fisub idivb call push pop mov inc loope sbb ja lds mov push (bad) pmuludq es jg push mov icebp (bad) push cmp pop aam ds iret sbb je pushf jge test xor or mov mov stc adc in sbb cld or insl inc popa inc sub subl mov movsl xor pop sbbl pop dec push mov pop in ret xor sbbb mov call adc mov mov inc xchg jle lahf (bad) out and fist sbb push fcomp adc movsl jns (bad) mov inc or pop ds jp ja cwtl sbb pop mov sbb btr mov mov add scas leave jne or add mov je cli int3 push or or int3 or jno lods mov push mov sahf cld add insb mov push stos iret sub fsubrs dec lods or pop out push aam cli cmp fnsave mov (bad) mov iret movsb ror shrb inc mov mov or in sbb sbb sti aam (bad) mov jl lds test push std test ficomp aas jp aad neg jge imulb clc cmp lods test movsl daa cmp hlt test sarl inc je sbb (bad) sbb rorb repnz inc mov testl divb ds int ja divl mov and fisub int ja (bad) dec jecxz push outsb cltd adc jnp cld lret push fwait lds fstps adc and inc pop btc aas inc subb jg (bad) fcompl push mov sub xor in adc pop mov (bad) std pop mov fidivrl (bad) jne cltd pop sub mov incb mov dec pop aas adc push mov or pusha dec lret ror jbe fstps push add mov and cmp dec push test xchg xchg (bad) stc loop jb push sub mov out sahf cltd in dec dec sbb mov dec imul out xlat out out scas fwait sub out cli xchg pop mov cmp mov sbb mov lret and dec insb xchg stc cmp cmp stos mov mov pop mov inc mov sub arpl xlat popf or in inc push dec daa lea dec sbb pushf add xchg cli sahf rorl pushf sbb pop loop push (bad) imul leave xor mov jle dec cmp or jp popf jbe xchg dec adc stc cmp lret mov lds insl cmpsl sbb xor scas lahf cmp les dec cmpsb popa xor in scas int3 xlat imul popf jmp add mov mov cmp ret movsl sbb test in pusha pop jge xor cmp jp cmp mov dec inc (bad) in add je out mov cs jp sbb or xchg xor xor movsl (bad) imul xchg lcall call cmp mov inc rcl push out rcrb test call mov xor jl jns rolb aaa jb outsb das sbb iret ja lds fimull cmp xlat pop imul adc xchg mov jge or rorl mov sar fdiv xchg and mov loopne int mov push jnp data16 icebp adc jmp shll sbb ljmp imul pushl (bad) sarl pop int3 and push adc add sub mov je cmp push (bad) adc mov (bad) test (bad) mov lods daa icebp push scas test lods ffreep (bad) movsl popf (bad) divl sub inc dec xchg jne fptan ret rorb lods out mov pusha mov sub cwtl cmc stos xlat pop fs in cld ljmp xor xchg mov push mov mov les movsb (bad) and (bad) cmpsb (bad) and cld outsb ss add ljmp arpl and inc out jp jnp pop xor icebp mov mov jle ja xor mov pusha fs test sub aas and inc lods aad cmp push dec popa dec data16 pushf aam dec pop pop jo push cld (bad) rcr movsb cmp fwait pop orl or sbb or fs cli or mov lea and xchg test xchg test mov repz jbe das sahf add xor dec sub jg fs xchg xchg stos lret not dec dec lret aad sti fs fnstcw insb pop sbb les fisubrl push (bad) and cmp hlt lcall push push enter adc rorb and push lock dec xorl fist cltd sbb sub enter (bad) jno lret pop outsb fidivl cmpsl jecxz repz ret cmpl push dec mov rorb std ficom dec iret clc jmp out push jge pop loope mov in mov imul jecxz clc xchg fs xchg movsb xor push inc scas cwtl pop call cmp jge and xchg mov and jecxz xchg pop pop das mov sahf popa sbb daa mov mov shrb mov rorb aaa dec sti cmp or testl adc sbb (bad) arpl (bad) in clc jns,pn mov stos or xor jp test add mov out push insl or sub mov push sub (bad) sub add pop addr16 pop rdmsr or pop adc sysret push rcrb add cwtl xchg inc sbb sub xchg fstl jne fdivrp outsb in xchg sub ret inc jnp lahf pop ret xchg daa test in sbb pushf jbe and mov adc scas out sar ljmp add leave or pop mov test insb sbb add sub testl mov dec sub lock mov push xlat sbb imul imul mov test (bad) icebp scas sub cmpsb xchg xchg mov ret cmpsb pop cmp mov outsl xchg or test lds ret push jno test push jae dec js mov mov pop mov or sbb fwait in sbb popf loopne and mov push xor push sahf add lret lods or sub jbe jbe popf cmp push es mov inc call movsb add outsb cmpsl movsb movsl and in jle (bad) aad xor arpl mov adc cmpsb xchg inc and and inc and jp cmpsl sbbl rolb and cmp add cwtl xchg jb cli jp insl mov jmp pop ja sbb cmp push fcoml or xchg pop pop and xchg insl fs bound (bad) jbe and andb push dec inc loopne sbb fdivl movsb hlt jnp fcoml adc xchg stos pop les lret inc push shll add xor pop aas sbb push and (bad) insl mov sbb (bad) dec bound and jp stc xor jae mov lret (bad) fsubl xchg sbb jno out mov dec lahf fistpll mov sub shll lret mov inc jae inc push cwtl pop stos jb scas mov mov hlt arpl xor inc in xchg lds and mov mov in xchg lds outsl mov arpl add mov cli popa push repnz fwait test adc lds push (bad) lock movb cmpl xor test sub out inc das mov out mov scas mov push pushf adc push arpl add cs sahf push xor pop mov ljmp and notl mov mov les adc sbb fbld inc icebp add cmc or dec xor pop das mov xchg loopne or pop movb sbb dec or xchg mov sub cmp in mov mov pmaxsw mov aam rcrb lds popf sbb or fs repnz fidivrl movsl push imul mov mov mov mov lahf repz pop jl stc xchg pop mov or rcrb pop pop mov aaa clc call aam mov (bad) daa sub imul mov mov xchg insb xchg (bad) dec dec jae sub mov xorl mov fisubrl test mov push jg pop rcrl outsb jne sahf sub dec and mov pop pop mov sub lea xchg insl pop inc push jecxz stc sbb dec mov dec xchg dec jmp xchg or ljmp pop xchg aas loop dec mov fild ja cmpsb fs out or adc mov stos pushf push in sahf cmpsb sub iret test sub sub cs scas lcall (bad) mov sahf cmpsb adc sbbl dec mov inc fwait daa fnstcw push or les push icebp subb movsl mov jae loopne mov push cwtl pop mov lahf pop popw (bad) sbb ja ret in cmp cmc adc das test adc mov pop sbb mov cs je repnz test sub mov daa mov dec xchg out loope iret nop or pushf mov jne bound aam in popf xchg sarb lock mov sbb icebp notb adc mov jo jne push pop add jl inc gs dec (bad) mov outsl push fs xor rorl f2xm1 shll sbb paddq mov inc push dec and jae push (bad) out popw loopne inc xchg les int push xchg jecxz mov cld or jnp lea mov push cmp arpl mov xchg popa repz test ja roll and (bad) in mov ss (bad) sub xchg cmp lahf or fiaddl mov mov or cmp int bound xchg outsl mov mov addr16 push test mov pushf (bad) push jnp ret (bad) xchg lods cli iret rclb mov clc mov ffree jp lods sub inc jle push outsl vorpd loopne dec xchg cmp cmp popa pushf test xorl jo mov lods ret dec mov and mov ds in and stos mov fwait sub fcmovnu pop cmp xor cmpsl icebp adc cli and push bound jo aad leave and popw push sbb sub xor mov aas into xchg addr16 mov pop push sbb imul sarl cmc gs lret sub and add mov mov add xchg push sub jmp adc jle mov bnd push leave test aas sti push lret pop lock mov bound shrb gs add xchg cmp shll sbb in fwait leave icebp xchg out jp stc test fcmovnu sbb cmpsb dec dec fcmovu push andb cwtl xchg fsubs pop cld (bad) or insb xor push pop push pop adc pop push std cmp push mov add testb testb or or lahf call out cmp sbb mov mov lds (bad) fisub mov pop or das jb pop and dec repz repz cmp movl pushf icebp (bad) out push cmc mov dec mov adc mov adc sti sub lret sub scas mov jns in loope cmp addr16 add nop pop imul and addr16 into adc or hlt stos push cmp cmpsl pop enter dec xchg lret cmp (bad) popa sti adc mov xchg cmp and jg or push loop xchg test push xchg les mov cmp sbb lods adc adc movsl dec mov std out or sbb (bad) out xchg adc int ljmp push popa pushf cli pop mov xchg faddl rcrl lea pop sbb addr16 (bad) mov (bad) jno push add in jecxz cli mov adc jbe jo stos notb pop stc push loope or sbbl out pop leave adcl (bad) cmpsl mov fs and sbb (bad) push sbb mov add mov mov xchg inc push es lods cmp push fisttpll lds sbb pop mov xor sub mov add mov sbb dec fidivl test push xchg add jno push fildl cmpsb xchg mov jbe or or fcmovbe mov sub jno or and or xor push cmp jmpw lret xchg (bad) jp shll mov jae addr16 scas pop call cs xchg repz leave inc and dec popa push inc dec in pop cmp ss sub mov xor out mov daa inc mov push jae popf mov aaa (bad) nop pop cmp std cmp sbb add mov mov mov outsl inc roll clc inc cmp adc leave fwait or xor cmp inc mov pop into ljmp out inc cmp into xor mov incl adc (bad) or lea push mov sbb pusha cli aas inc mov pop mov js adc mov jmp pushf cmpsb fistpll or dec add (bad) pop xchg fs clc mov xchg (bad) push ret pop add ljmp lock loope loope test dec repnz inc mov leave mov jp sub dec (bad) iret jl shrb mov jb lret pop push leave lods xchg int push adc jb jno pop jae pushf (bad) xchg xchg dec sub (bad) sbb mov xor inc xor rcrb addr16 mov movsl in jb mov mov jle mov add enter adc cs xor pushf sti cmp jae mov leave fimul nop (bad) repnz cld xor inc inc testl jnp movb aas rorl std or xchg sahf adc push sbb xor bound iret or inc push es ret sti fiadd cld adc dec fsubrl out rol mov jl add lea jmp std insl cmp (bad) lret add test add fs cmpb add cwtl (bad) dec iret pand lret mov xchg jbe mov sbb sub fildl push xor sbb cltd lcall leave sub (bad) mov int3 xchg xchg nop mov push sub sub dec imul shrl divl test jno fisubrl mov jno (bad) xchg lock cmp ljmp stos in mov pop lret add aaa cmc aad popa shl and pusha mov lods test mov imul mov insb loop add push cmp mov mov jno jle loopne add push or dec adc dec add and or pop cmpsl andb ss jl fldcw sarb mov icebp test sbb inc enter jg les (bad) push js xchg fbld out clc clc mov xchg popf mov jg mov das test pop lret or enter mov daa in or jo xchg test add cli imull sbb mov cwtl xchg int3 lods push xor addb jecxz or sub mov push xchg mov in and and pop push leave outsl (bad) push mov lret xchg mov repnz inc adc jp fs dec adc (bad) xchg addr16 or fwait mov popf mov dec dec decb jbe xor ss lods lahf nop gs xor sbb jle int mov mov pop mov ret push ja inc xchg ret call mov sbbl mov mov mov pop push pop jnp in aaa fdivrs loop adc in ja or add xchg mov pusha sub mov scas outsb jg call sbb testl push clc jge popa mov test jg mov pop mov out pop inc xor inc jne,pn xchg nop rorl bnd push aam icebp fisubrl dec scas insb dec push cmp push fs and sub out outsl cmc adc xchg dec lock repnz xlat out push cli test roll or mov mov or push scas test sbb popf js cli push mov mov jp add pop test cmc pushf xchg pop in add in add push lds mov (bad) cmc mov push inc xor or mov xchg sub test xor (bad) dec or (bad) cmpsl popa sbb test les sti scas out mov adc xchg fdiv pop push sbb xor outsl mov insb xlat adc aad in adc loopne clc test xor sahf or dec mov fmuls aam xchg pop mov addb dec jbe cmp jne sbb sbb adc out stos movsb push push add xchg sbb or cmp dec outsb scas bound in mov xor data16 sub xor fcmovne cwtl idiv js iret out push sub push lret lret and sbb xchg jne,pt stos mov cmovs es idivl in ja push pop ret out pusha es pop scas ret inc (bad) ds and xchg or imul sbb imul cmp pusha xchg jno pusha push fwait in jmp icebp fs out sub pusha mov dec cmp pop dec aad xor ret dec xchg adc and rcrb cmc mov sbb sbb mov mov into xor nop or mov lcall xchg sti sbb aas and adc sti and add ljmp stc cmp jecxz divl js inc cs in mov (bad) mov pop mov popa cmp sbb test mov arpl int jecxz in jae xor and mov aas adc outsl push xlat xchg and sub std push sarb lods xchg push inc rcr mov mov clc push int3 sbb popf adc xchg ss jns inc push sub test aad shrl hlt mov inc push jl sti pop jnp testl dec popa enter xor shll push ja sti pop jnp cmpl or lock adc loop pop and cmp lret imul push pop xor jno sub daa out or pop int3 dec fnsave cmp (bad) mov add ljmp js xchg in repnz enter mov and inc xchg mov fdivrl dec ret in into mov mov xor cld inc lock lret push movsb adc push dec xchg and ret jae int3 push xor (bad) pushf loop ror es in cmp adc dec pop cs fnop or cmp (bad) or dec movsl cmpsl fnstenv movb std jnp icebp andl popa cmp ja loope add cmp test loope (bad) pop pusha fsubs sub xchg push fcompl lret stc dec popf cmp mov dec and movsl mov je (bad) lret xorl pop and and push push sub in lret loopne dec jae clc movsb push mov xchg xlat inc int (bad) cltd mov cmp stos dec nop pop movsl pop negb pop mov xchg xchg push addr16 or push inc xchg jae int repz push aaa pop or lods sbb stos icebp not outsl mov jl int lret out mov dec arpl fistl jmpw jbe in cmp loop loop dec jecxz outsl loopne mov pop out inc lock add pop out xchg ds cmpsb pushf xchg fstps (bad) dec sub shl arpl vmread pop mov add sub adc and stos gs cmp test clc push scas ds sbb ljmp pusha and popa dec int3 (bad) jne mov add add mov movsb mov or add (bad) push and jl lods bound push add idiv add outsb dec pop js mov (bad) adc pop (bad) add (bad) xchg inc inc mov mov push and dec and mov mov xchg in sub add loopne inc cmp ds nop decl and out flds or push push cmp frstor divl test mov fisttp stos ja add loopne jmp je jbe ja flds loop js push or loopne inc push pop mov push and loopne inc rolb or cld push and loopne inc rolb mov pop pop flds cmp jb fs or pop nop xchg inc pop push stc xor cld cmp stos and sbb and pop add or insl nop dec and (bad) pop push stc add jnp aas add pop notb lock in or xchg pop inc in rolb rol push rol (bad) rol mov lock add mov lds out loope sub add jl leave and loop push mov mov test lock and and add fs push mov dec nop inc stc and dec xchg movsl jp cld popa addr16 cld out out les mov pop cmpsb fisubrl mov movsl sti ret pop and sbb dec enter mov lret jno imul scas or sahf fsubrl daa pop sbb adc cmp jle aam call inc popf in bound or insl es jmp dec jno push repnz (bad) xchg xchg inc je int3 push aad daa xchg mov xchg inc adc pop jns mov or mov push iret xor jo stc lret xor in lret xor mov inc inc aas fdiv push dec dec xchg or sarl mov mov ljmp xchg lods cltd mov mov push and movsb leave and xor inc sub jge dec inc (bad) adc push mov push shrb out call iret sub adc jp ja inc xor and adc jb (bad) ficomp mov sti daa (bad) imul imul aas xlat movsb stos sti cld lds das dec jns mov movsl decb push jg fwait xor lds out pop js sarb test xor fstl les cmovno cld push test push or jl sbb test mov and (bad) shlb out pushf sbb or mov dec es ljmp mov sbb pop mov adc sbb jnp popa mov in sub or push insl jle lods add in cmp sahf outsb jnp,pt in dec outsl outsl adc mov add fcmove push data16 jmp std outsb jle inc das rcrl cmp jae dec movsl in push test stos push stos jle iret imull loop cltd add adc jmp call data16 mov sbb cs icebp push (bad) mov outsl jle mov repz int pop sti sbb out adc xor test loope mov push fldenv dec jmp pop mov push movsl movsb xchg xchg jb lds fstpt cmp cmp imull rcr les movsb clc xor (bad) jbe into mov inc out sub jp jl inc jno jl dec sti call (bad) mov inc pop push adc js aas cmp mov pop lahf xor sub sbb imul popl out ffreep mov jns sbb mulb push mov sarl loop cmpsl loop das pop or dec dec call into push sbb and in repz sbb push pop xor or (bad) in push xchg cmp in add xor mov shrl mov subl inc xor jno adc testl jle imul and arpl js jecxz pop sub and adcb jo cmc inc imul jp imul inc jb adc movsb xchg mov data16 dec fmul adc sti xchg mov inc add enter in cmp xor lds lods scas repz scas (bad) mov xchg leave in mov mov aas ret ljmp xchg dec sub leave add xchg std ret aam cmpsl test cli fistpl mov push push adc mov lea inc movsb cs xor inc push push xor pop (bad) out sbb xchg pop gs lds loopw and mov out pop or (bad) sar cmp jo fbstp jecxz cmc nop pop sub popa inc mov jns pop push pop ficompl add jbe (bad) xor jge xchg xor or push xor dec inc std sub cmp push dec add pop jl iret adc imul gs aaa mov jl (bad) iret xchg push sbb adc fisubr nop mov sub lods sub js xor jno xlat out addl inc mov test cmpsl mov ljmp aas test pushf or add add in pushf inc imul sarl mov divl mov insb faddp js clc dec jle js pop into clc stc and roll xchg xor lods lods adc jle pmullw inc dec mov mov pop lock add mulb jno lds frstor mov xor mov aad mov mov das push and inc push and leave rol stc popf push shrl push js test xchg xor sbb popa sbb mov mov loope sti mov clc arpl test fucomi or fsubrs cmp test lcall mov mov adc adc pop loop into and lahf inc stos scas cmp test int (bad) fstp or mov pop and js pusha ret lock imul hlt cltd test ret cmp fldenv aam xchg mov push pop outsl inc xor mov mov (bad) xor xchg scas repnz arpl cltd scas out jp mov mov lods int3 adc fadds xor xlat push fistp jno arpl notb pop pop dec jbe gs out out jp push in lcall inc adc scas jns popa popf ret jnp jnp das stos push mov and inc lret test sub jnp test mov int push push jae stos popa lods stos cwtl imul mov jae jb sbb frstor sbbl in lret out testl in mov xor imul mov mov inc fnstsw notl ss mov fcmovne inc mov lahf push aaa outsl xor jmp mov and fcmove push divl inc adc fs pusha inc mov cmp and xchg and mov pushf into add inc mov jmp ficomp mov leave or cmp mov int3 imul out (bad) fcom dec loop pop (bad) data16 repz gs dec sbb sub arpl pop xchg cwtl data16 pop jmp lods xchg mov adc push or and aad or popa jo or cmpsb jp popw mov push out js mov cmpsb push pop cmpsl mov in dec cmpsb push roll (bad) push jno dec jl aaa jmp add and imul cmp sub (bad) push lds cmpsb data16 xchg sub jp fnsave lahf sahf dec pop xor push xor xor dec pop in jns int dec dec ret loope aam lcall dec movsl outsl xchg outsb jbe mov dec push aad push in ljmp mov in cld popf dec js mov mov (bad) imul mov sti sub cmpsb xchg mov arpl adc daa push pop (bad) cmp or addr16 fistpl sbb movsb rclb mov xchg mov xchg sbb inc pop mov dec xor jecxz dec inc xchg imul mov mov lcall push or jne push mov dec or xchg sbb mov push hlt push imul scas mov jo outsb mov fs jb fs adc or mov mov xchg add xor xchg jmp push xchg jmp cmp jne cmp imul pop mov dec xchg xchg (bad) cmpsb fwait pop shrl dec push test adc popf loopne xor in push sbb pop mov adc and gs pop push dec cltd dec bound (bad) leave cmp mov push jecxz popf mov inc mov adc std xor xchg cs pop adc xchg inc cltd dec insl arpl sub xor test mov push adc dec je sbb scas mov sub mov mov dec mov out js in cmp mov rcl mov idiv inc insb dec sbb sbb fwait xchg cmp cmp adc (bad) jb outsl rorb in or adc jg popf out xchg mov cmp adc dec xchg inc (bad) push mov inc jne gs jl repz xchg pop xchg repnz xchg jl mov shl adc fwait push pop fisub pushf mov mov mov pop ss jp in xor js jno or mov ss imul test sub arpl mov jecxz dec idivl rorb pushf cs pop pop push pop push cmp fldenv (bad) stc mov sub in fcomip xlat pop jg int sub outsl mov stos ljmp aaa int3 or data16 sti ret cmp int aaa jg ret xchg jl clc leave cmpsl lahf sub mov lret in push inc mov call aad in sbb fs cmc mov pop cmc arpl ljmp pop pop jmp add inc pop insb test sbb (bad) in test sbb cmp jle add loope sbb and mov jno or test sbb rcrb out add jo scas rclb xlat loope faddl push faddl rolb (bad) loope cld push jg push pop xchg jno mulb outsb les sbb (bad) out les jnp add sarl cmp xchg xor shll jl add icebp and ret push iret loop cmp pop lock lret js scas loop mov jno outsl loope mov faddp pop clc adc loope jl cmp lods pop lahf cli test and push (bad) xor inc mov (bad) and (bad) ds jbe push inc pop lahf popf int out (bad) xor mov test sub cmp into out icebp daa pop and js int ja sbb pop jmp add mov aaa insb inc or cmp push lods cwtl xchg and fs push jecxz and add fdivs pushf sahf nop out fimul ds (bad) lahf das rolb sub out inc mov fptan fwait stc int dec pushf int3 jmp div aaa aaa (bad) sbb inc mov movsb test adc inc (bad) lods and sbb loope xchg test inc and test adc fwait push cmp inc mov pop adc inc pop adc pop call push imul loop push mov lds mov subb not mov push dec (bad) mov fcmovu aaa cmpsb sbb push ja leave data16 hlt test das mov lret add ffree pop sarb movsl xor dec sbb ret loopne jg imul mov jecxz mov in sbb out aam sbb mov and pop mov lds adc pop stc mov mov shrl xlat sub and jle (bad) loope shl xor int (bad) cmp and jbe mov xchg mov sub enter inc outsb jnp leave (bad) or xchg adc dec push pop mov test jp fwait cmpsl bound int xor xchg dec (bad) inc aad inc and inc cmp out ljmp sarb rcr rcl test rcrl rcll insl outsl (bad) femms inc mov add fldl push pop std inc sub movb dec sub xor mov cmpsb lret push push ror or pop add mov xchg push daa outsl bound xor push pop test dec sbb jne (bad) fwait or pop mov imul test je rclb lcall imul loop aam pop fwait lret js push or mul mov pop sbb xchg and push jno loop mov cld test xor mov (bad) les xor sub mov fdivrl jb xlat push enter push std and inc (bad) mov jb arpl dec insl aaa je subb leave xchg mov adc xchg sbb call test imul movsl mov fimul mov pop push popa fisub pop lock mov adc jg or rclb adc popa enter (bad) xchg rcl cs test xchg push cmovae daa mov call insb pop dec mov mov jmp push insl sub or jle sbb and xor jecxz or mov icebp in xor push leave push gs pop out ljmp (bad) lret push lods pop jne lods sahf cmpsb fistpl out ljmp pop jl aas lock (bad) (bad) mov mov xchg (bad) imul imul cli (bad) jp insb in (bad) lahf js test cmpsl in (bad) xor outsb fbstp sbb cs cld or stos and xchg xchg test xchg mov cmp mov pop lock (bad) xor add ret jl,pt pop ret xor pusha das in cmp add ret or pusha push mov xor push daa loopne pushf (bad) (bad) jo into (bad) stc (bad) push cmp out add xor xchg loope mov clc sbb subb sub sbb clc push jle pop loope cwtl sbbl sub push mov cmpsb (bad) scas dec into mov insb aas cmp push mov in xor ret push jbe sbb jbe popf data16 sub (bad) into mov in and jbe jge dec fbstp jb pop jl cwtl sbb jno mov arpl data16 adc hlt pop test scas push jb xchg int3 insb enter (bad) jmp push jae stos fidivr fdivr add dec xchg js mov imul push ficompl mov ljmp lods xchg and jbe pop jb xbegin les cmpsl gs ja xor cs dec enter add add add addl es push daa mov push jbe mov (bad) cli jp cli (bad) pop lahf jnp xchg mov jl mov popf mov inc ret es xor bound mov stos divl gs dec mov xchg or mov push hlt ljmp out mov push fwait mov ret divl in in insb orl jle push cwtl outsl mov add pop xchg cwtl xor nop pop add add pushf sbb or lretw cmp xchg or mov push sbb mov sarb or pop mov out imul xor (bad) in cltd test mov pop sub stos cmp aad das mov test push mov mov pushf fs aam adc pusha or aad cmc push inc mov js jle movl fs bswap dec sbb loope xchg cmpsl push and lods pop imul cmp sbb mov xchg push dec test incl pusha subb insb cmovge adcl (bad) sbb rolb push push fcompl out enter inc jle xor fcompl mov out bound mov pop lret icebp push xchg sbb add xchg loop adc lods bound or fcmovb push push push lret xchg cmpb movsb (bad) insl push fcmove sub sti adc sbb cmp aas addl mov inc imul jns inc or shlb jno gs push mov pushf inc pusha adc mov cwtl cmpsb fs (bad) mov lcall daa cmp or push mov insb shll dec test inc cmpsl push aam adc push jp mov jl pop adc push sbb mov cmp setge mov out cmp in clc mov fidivr jge hlt sti fcompl cltd pop iret into out fnsave fdivrl jb xchg fmull das jg jmp jle cld outsl jg sti pop (bad) lock aas std stc das jg icebp movsl mov pop std out (bad) std lahf sub mov (bad) aad cmp icebp int jge cmp std ficom inc movq jecxz jg shll div add in fdivr test add testb and mov jmp fadds dec js jbe sti xchg mov inc or push cmovb in hlt (bad) fild and xchg aam stos (bad) mov xor xchg mov iret popf mov (bad) test add push add or movsb test leave push int test or dec mov jae pop and aad rcll popa sub inc mov pop hlt mov adcl mov ffree mov scas mov fnstenv popf mov inc xchg push mov rclb xchg sbb adc (bad) out ljmp jb rep jae movsl rcll nop mov loope pusha mov mov nop inc aam pop mov pop pcmpeqd in sbb mov in adc es dec push stos adc js cmpsl cmpsb es fdivrl aaa jne aam jae lods mov and adc scas pop cwtl xchg mov (bad) xor mov add shrl mov push xor xchg in cli ss aad call sbb (bad) aad mov fcmovnbe nop inc cmpsl movsb rcr inc cmpsb orl and or mov cmp mov cmp and fs rorl xchg (bad) into mov sbb movsb mov push test jb xor loope mov in pop cmpsl xor pop pop or cmp enter cmpsb adc (bad) mov loope les das rep test jle mov push in enter or rcrl inc jnp pop in pop pop inc out or ret lret scas add adc lea scas sbb inc addr16 jmp pop test inc mov fnsave js scas and cld dec jb xor stc jmp push out test pop hlt pop out lea scas adc lcall sub aam jnp cld (bad) test lahf push add mov mov jmp xor dec lea xor mov xor push dec je sub int xchg mov enter xchg in or or and mov repz adc loop in inc rcll jecxz movsl arpl test pop dec add jl jns push dec lods out jmp int clc scas sbb mov dec in idivb int pushf add push (bad) out jae gs gs xor or dec lret mov pushf shrl in bound lock push cmp scas pop (bad) lods mov add add push sbb mov inc mov mov repz dec xlat aad repz mov mov fstpl cmpl push ds rcll mov and sbb testb test ljmp adc fistp (bad) cmc and sbb inc cmpb and and jmp push inc adc push mov cmp cltd sarl imul cmp add push pop aam ja inc imul popf mov ficoml int3 mov out jl sub ds scas cmpsl insb in (bad) out mov int3 push or sbb pop jns (bad) pop adc mov pop cmp push mov test (bad) pusha pushf add inc fnstsw sahf ljmp dec add mov mov push sub jmp int3 popa push repnz popf stos test pop push mov jns (bad) sbb mov mov stc inc push (bad) mov adc iret test std cltd mov pop adc fidivl inc sti into jo ss dec inc popa sbb push jl lods (bad) xor pop repz pushf mov mov dec mov outsl std add mov jne pop jns adc cmp xor adc int3 fwait or mov pop adc ficoml adc inc xchg popa jbe mov fsubr and imulb lea gs pop and mov cmp adc pop mov xchg divl arpl mov mov xchg mov mov mov lcall lods lret sar dec shrl dec jp repnz sarb addps rorl leave adc jmp cld sti or pushf xchg mov lods aad ret and mov pop outsl outsb sub cmpsl mov std pop lods stos test iret sbb xor in popf int3 jnp repnz scas leave mov xor (bad) outsb out adc ja loopne inc cld mov cmp pop lret mov pushf aas test sbb cld mov inc cwtl pop packsswb inc sbb sub test xchg cmpsl adc dec cmp pop adc (bad) lcall mov mov inc inc (bad) rcl pop adcb (bad) in cmp (bad) push imul sbb mov fsubrl stos ljmp mov mov gs push rcll adc xchg xchg cmpsl or xlat sbb inc (bad) mov (bad) mov test frstor fsubrl fisubr test mov sbb in cwtl dec xor lock fstl push movsl and ret in pop or mov sub xchg push (bad) and rorl aad loop xchg ficom jp xlat xchg add mov pop add push cmc pop loop mov cmp aad lret push call loopne test lods mov nop sub adc rcrb or ds sub into sbb cld fadd mov sub or (bad) mov call cs fwait inc push xchg leave ja into mov insl or aam xor push pop aas (bad) xchg sbb (bad) loopne imul sbb inc cmp cs out mov lds jb mov fcoms nop xchg cmp pop pop sub mov mov pop test int inc outsl jnp scas imulb hlt adc push (bad) fistpl (bad) sbb movsb icebp dec das pop movsb adc dec mov (bad) nop lret mov sub mov push sahf mov in stos mov movsb mov stc scas (bad) or mov push push mov aad jecxz push add bound ss int dec add pop les test lea mov cmpsb (bad) hlt fwait popf mov sub add lods cmp dec js and pop sahf das loop in mov dec mov and ds hlt gs mov arpl pusha jb dec imul jns iret and xlat cld mov sti ret or call cs aad es xchg inc sbb ss and push fs scas mov les hlt ret ficompl lods xchg test mov push test sub or ja das xchg cmpsl lret dec (bad) aaa cmp push inc and sub fisttpl aas stos push sub xor (bad) sub mov js sub pop fs jnp jmp pushl inc push push aad orl mov mov jg mov jns lods ljmp fidivrl pop mov push sub sub add je jb xchg lret mov rcll mov sub mov push sub inc inc cmp or adc mov or xchg enter ds xchg inc mov xor jbe dec mov aaa andl jl decl xlat popf insb xor cmp inc adc sub shrl bound push inc bound (bad) add and mov cmp rol sub icebp in dec imul hlt in (bad) or adc les mov inc and pop or incl js int stc push pop inc adc in insb lods movsl mov or xor pop imul rclb or (bad) das orl add bound fcmovnbe mov push stos push in inc inc insl aad pop jle pop jecxz push out js rcrl (bad) push popf aaa repz jge jae push sbb and in lods or data16 and xor cwtl push xchg sbb or and ljmp out mov sbb xchg insl fsubl push jnp popa inc mov sub lret inc and xorl cmpsb loope jb push lret jb cmp insl dec into inc jle pop les mov dec jge pop or fcompl mov or jae dec fstp push ret push pop xchg xchg mov fsubrp fiaddl stos inc mov lcall adc jecxz out xchg fistpll sbb lea dec mov push lds sub out sub aad in roll mov out add cs sub and jae int3 insl add pop popa cmp aam push or call ljmp fmuls cmc aaa sub jno cwtl sub mov sbb fsubl pusha test (bad) adc inc push mov movsb push and faddp pop add (bad) ss dec mov jp lret push test pop pop push pop mov push fcmovu jnp mov push xchg aam pop lods pop xchg xchg jns pop std sub pop fisttpl icebp xchg adc leave aad (bad) dec pop pop xacquire add mov or je scas or test sbb and and pushf movsl pop fstl and dec adc adc sub icebp fild pop add into addr16 inc xor sub and into cwtl mov out sbb push mov mov (bad) push add or sbbb or mov in pop or inc shll jb xchg test dec inc sahf sbbb shlb (bad) dec loope ret lea xchg aad lcall and popf jae ja outsb lcall shlb out jge add xchg xor pop jl push movsb enter lret mov push pop xor inc repz rolb sbb rolb xchg call shl dec sub sahf inc lcall fs lret ja adc lods or mov push add pop jbe mov pop (bad) aas mov fsubl stc es ret xchg inc or outsl push jne xchg es inc insl jne repnz js jecxz lret sbb repnz pop scas sbb sbb dec inc xor jecxz sti (bad) mov lods loopne jecxz loopne cmpsb sub sbb je or stos test push lret jecxz jno lods cmpsb sub mov outsl iret and fs sub push fucom int3 int3 lret int xchg mov (bad) pop push clc push rol (bad) cmp (bad) fsub dec cmp push mov jmp push push pop push pop push pop push pop mov pop mov insb jg outsb (bad) into cli pop mov loope push pop insl insb fcmovbe cld lcall pop pop std outsl mov cmc jbe sbb mov fnsave sbb jle mov sahf idivl call (bad) ds mov daa add adc sub and fs mov and leave sub sbb dec into nop mov sbb pushf pushf daa pop enter cs lret fs dec nop dec xor cmc scas out pop and xchg cltd aas jle dec lahf and xor mov out nop jmp sub dec outsb xchg jns pop decl sbb dec jle add adc push arpl sbb cmp call hlt cmp loopne dec iret (bad) mov pushf ds iret rorl cli cmp cmp push je pop mov jge pop cmpsb mov sub xchg mov std sahf incb scas sbb es hlt inc mov jmp fwait cwtl dec dec fcompl jae mov js and (bad) lods cmp fwait pop lods aam jle push test pop (bad) mov push pop es jmp pop bound leave outsl dec xchg push fildl lea mov or mov fs adc fcmove push jmp lahf in fnstcw or and mov pop xchg push pop stos rcrb scas jns in stos pop ljmp push adc sub test jp jecxz icebp enter xchg loope dec pop mov push jae stc (bad) sti int lea lods cld int loope mov xchg movsb ficoml xchg mov mov push xor push push mov inc ret xorl nop nop ljmp push pop push cmp adc pop adc sub repnz push dec loope loop push mov sbb inc das and cs clc lcall shrl xchg rcr lods cmpsl cmp stos push repz mov push cmpsb cli loop cmp pop mov arpl sahf jo arpl je test adc ja (bad) popf xor push xchg aam not js cli inc (bad) imul jl xor or (bad) (bad) pop sbb inc adc sbb outsb pop jne leave popa aas test cmp mov xchg cmp push ljmp fmuls (bad) fistpl sbb out jnp jmp es in mov cmp or sub test rorb insl fs loopne sub sub sbb test lds jne sbb or inc cmc or mov call call scas stos or inc js push mov add xor or fsin dec add enter lret jne pop in mov mov subb cli roll inc xor push xchg pop xor mov jnp cld push push fwait pop mov push xchg cmp fimull pop leave sub mov push adc jb xchg xchg mov cmp cmc sub loopne rcll lret ja push fmuls (bad) ss mov pop xchg leave (bad) mov dec mov adc mov mov lret outsb and (bad) mov loop mov mov sti out mov ds pop mov cmc mov leave adc (bad) lret add mov scas insb push push out cmp pushf pop adc inc pop jno std and pushl out out xchg pop or lcall adc cmp adc sahf push int sbb into repz jle repz mov jp mov xchg mov shl test (bad) push fbld pushf mov mov mov pop ss jp in xor jle jno or mov or xor lcall mov test or loop cmp fidivl shl idivb dec dec lret lret push cs mov aad (bad) push lods jle cli leave cmpsl sahf imulb sahf jg lods inc xchg pop jle push push pop push pop jl (bad) or pop (bad) cli xchg aaa mov fstpt jnp insb jl in ja ss imul mov idiv incb lods xchg pminub cld sub mov push push mov inc cmpsl fdivp dec and fs addr16 aas out cmp mov jge lahf fs add dec mov and nop xchg in sbb ret in sbb mov mov dec (bad) leave add and in mov in cmp cmp cli enter es jne add jbe fsubl in (bad) lret cmp cmp cli leave insl repz mov in xor sahf fstpl sti insb mov sarl lahf push cwtl ja arpl inc dec cwtl jecxz movsb cmp call mov sbb out jns into outsb rorb mov pop fnstenv push jmp int out mov int cli xchg cmp rcrb or jp (bad) rcr call cmpsb neg das hlt ds popa (bad) dec clc test and push (bad) xor push mov (bad) and inc pop mov add pop and lcall in jb dec aad sahf jb inc in adc fcmove push divl inc adc fs pusha inc mov dec xchg inc or roll xor push jno popf in xor out cmp in hlt fidivr mov pop push jbe ds add fnstsw int3 imul out and decl out dec icebp out mov sub dec pop rcrl push push cwtl loope popf dec xchg adc pop jmp lods xchg mov xor rorl inc xchg push ja mov cs sti cwtl loope mov xchg adc clc or ss xchg adc roll ret hlt or repz es jmp add test lods and cmp push dec pusha dec xchg or addl ljmp enter cmp outsb fs jecxz push dec pop fnstenv ret int dec or test inc sub ficoml lret dec fiadd adc insl push dec lods fildll adc xchg push daa in cmpb cmp xor inc sbb ds push cwtl sbb mov test dec mov aam mov pop pop and dec (bad) popf lods push adc cmp (bad) jo sub sub pop icebp cmp fldenv and jno mov mov sub movsb xchg rolb in xchg lods pop nop cmp inc scas test and jne inc and cmp or or push ret and xor mov rcrb lcall mov or repnz sbb mov inc jle mov xor aas or bound cs inc pop push leave arpl fwait inc lock xlat and enter (bad) xor mov mov jp dec jl fs dec xchg ja stos xor (bad) push and cltd ret movsl xor loope push fs jp out mov lret daa mov adc sbb lds mov imul mov push adc xchg jne xor pop stos sbb data16 xchg xchg push push outsb arpl in pop xor dec pop and outsb (bad) jo out lcall (bad) xchg mov and dec arpl xchg ss (bad) negl mov data16 and das mov mov xchg xchg mov xchg loopne and mov aad or xor jg popf out xchg lcall ret adc dec xchg (bad) push mov std jne gs bound lock loope dec jns xchg fmulp cmp and dec fidiv mov inc sub mov dec push insb sar xchg push push xchg mov inc fsts dec sub fwait mov rcrb ds cmp movsb cld fs fwait lds xchg sub mov clc sbb inc cltd js bnd cmp cmc stc dec lret lret inc mov push pop lods push negl jmp mov fucomi mov sti pop jl push test bound (bad) jecxz xchg cmpsl dec lea sti fs cmpsl xor fwait cmp pushf mov mov pop fdivs repnz mov cli std psllw mov test fstpt int3 into lahf push jmp sub mov iret repnz inc dec pop add inc pop lods test push rolb fwait popa or mov jbe dec fadds test pop push rolb xchg or rorb cmpsl loope pushf test push rolb xchg loope pop test sbb add test pop push rolb (bad) loope cmp addr16 loope pop cmpl scas (bad) or data16 (bad) sbb outsb faddl movl popa cmp inc icebp sbb (bad) adc dec loope cmp addr16 sbb (bad) or das loope mov pop (bad) sbb outsl loope mov faddp pop clc adc loope jl dec icebp sbb cmovp adc sub adc jecxz inc sahf xchg cmovp movsb repnz push inc pop lahf sahf iret movsl data16 xor mov ficoml stos push push jl out pop int3 cmc daa outsl mov js int imul sahf int3 xchg or sbbl xor mov mov test test fcoms test je and push inc dec add push or push fistpll pop repnz cld or es jecxz hlt je ljmp push aad xchg leave lahf (bad) out xor lea cwtl mov mov ret adc inc (bad) and sti push rolb das and cmp test push addr16 and aad or popa jo or popw mov adc push mov repz mov daa push or and and or fwait hlt jb pop inc sbb pop arpl in mov mov rclb cmpsb sbb push outsl mov shll sub cli hlt je sbb test int test cli bound loope mov insl inc inc pop std cmpsb rcl mov sub sub dec jl jne xchg rorl inc push mov mov adc in cld pop xchg mov enter imul mov stc xor aam scas push inc (bad) shrb std loop cmp adcl movsb push loop fnop js aam add push popa xchg (bad) sahf push cmp sbb push and imul (bad) adc fs daa adc sbb inc and fldcw stos or add rol mov push mov pop xchg scas test rolb push xor je jno cmp daa lods test xor test jbe pop add in push xor (bad) (bad) fdivr dec add inc call mov and test mov aam fwait dec and and dec test inc and mov cmp (bad) jg test fidivr fimull and ret leave test and sbb (bad) mov mov cmp cmc sub jo mov dec imul adc sub fs lds sub pop in cltd sub dec mov dec imul pushf mov loop imul pop sti out mov ds pushf mov clc mov leave jae mov rcrl inc sub push dec bound fldcw fcompl cmp add orl mov test imul cmpsb xchg dec inc iret and stos lock xor lret and or cmp or in cmp xlat aas jl out pcmpeqw ret mov pop loop stc push repnz loop (bad) lea push pop mov and sbb (bad) in loope jmp inc xchg or fildl and arpl dec insb in push rorl fs mov stos cld push add stos jno mov bound out adc into add mov cs pushf cs fwait pop push pop push cmp outsb leave mov idivb mov ljmp out stc pop xchg clc pop jl in add dec sub stos pop pop mov inc jne in stos pop pop std (bad) lcall mov fidivr jae xchg xchg push jecxz out outsl fst adc mov pop sub mov in lahf les leave push (bad) cmpsl inc lcall sbb stos scas pop aaa fcmovnb jp das jmp mov push fsubs sbb fnstcw mov or cmp push mov in sub popa (bad) fdivs lret or popf bound popf fwait call arpl daa jp daa jp mov in and xchg jecxz ljmp mov in push mov in xchg sbb pusha adc out (bad) xor xorl ret adc or jo mov sub loopne pushf xorl or roll jl push pusha sbb ret or or jle fcomi or or cs push mul ds mov fldcw cltd mov cmp lcall fistp scas std inc lods cs mov dec (bad) ljmp aam imul mov sub push aad jne icebp fcmovb push ljmp mov dec mov and or dec sub js int ja sbb pop jmp nop xor mov sub bound les into ja sti mov cmpsl adc cmpsl cmp (bad) je lock int3 in cmpsl fdivr adc test mov popa cwtl inc jo out mov mov push das cmpl (bad) mov movsb fcoms xchg dec adc xchg data16 int push inc push xchg sub jo or sub jo test push cmp jmp sub es cmp push sbb jmp sub lock jo movsl sbb leave or mov sub add or push jl fwait or in push push push adc add lods sub cmp lea mov dec aaa xor jo fdivrs xchg jmp jl xor sub xchg fnstcw mov sarl xchg into cmp loopne in (bad) loope xlat fs mov or adc mov insb inc sbbl adc or iret dec test out loop repz or sbb push xor (bad) xchg sub mov mov int movsl das adc push test and mov dec ljmp fidivr xor xchg and xchg xchg dec out mov sahf pusha out ficompl sub sub push clc or inc clc mov je or je (bad) lcall mov imul fmuls jb push dec movsl mov jg repz sub ds rorb pop mov adc sub ss fs int cmp xchg loope into or inc mov dec pop fldt inc jo pusha add cmpps push add xchg jno jecxz lods in dec cmp sub cmpsb leave les ds in inc jo xor insb lret mov fdivrl out jl mov and dec sbb xchg ss out sti or xor adc mov sbb xchg int lret (bad) or xor add jg call imul push cmp data16 pop adc xchg add pop inc rol mov adc jmp (bad) popa daa cmp jl sbb jbe xchg xchg cmp test cmpsl jnp ds and push lods mov pop ficomp push cmp jb jnp out pop (bad) xor and pop mov sbb movsl repz push or jle sbb orb xor addr16 ret cmp mov (bad) jle push and jbe loope mov arpl dec jmp mov jmp outsl mov or jae jecxz mov jbe sbb mov ja outsl fistpll xchg call mov fildl sti shl push jle and addr16 push xor neg jecxz (bad) lea sahf dec ds push ljmp in ss dec es lret pop sahf aad mov mov pop cmp loop pop leave and sbb xor xchg arpl cmp inc dec xchg push in cltd daa addr16 pushf daa pop enter jns mov xchg aaa enter jb mov xchg lret in aas jle lods repnz sub fs push lds inc das push vaddsubps sub and xor test aas mov xchg je jle mov jmp add xchg incb lahf jmp push sbb mov lea jno test cmp ss xor pop jecxz jno mov clc (bad) cmp fnstsw popa clc push inc mov xlat test cltd adc xchg cli lea push and popa arpl pop pop add enter sbb loope mov scas and lahf pushf sub js gs fldt inc adc inc pop and xchg cmpsl jge nop adc or or adcb cs and icebp outsb imul mov nop jle pop ret (bad) lock xor lcall addr16 mov add mov daa add inc dec sbbb adc jo and aaa and pop xlat sub cld add sub mov outsb adc push sbb pop imul xor mov lahf bound mov lods aas and mov fisubrl pop xchg mov loopne pop xlat push dec add mov mov xor cmp ja pop in pop push in cmpl or (bad) jecxz dec cmc xor or (bad) out cmpsl in xor ret div mov test add clc xchg aam sbb jnp clc inc out sbb fsubl jp lahf shrl mov dec imul xchg fs or inc test lds jl ja pause shll inc int3 adc mov stos mov mov cltd and inc mov int (bad) jae arpl imul inc xchg mov sub dec scas mov jb cmpsl hlt add mov cmp jns jecxz sub mov push jmp jno inc mov cld rcll add cmp test sbb bnd gs aas mov add and std mov push (bad) jo sarl jl cmp ss repnz test stos outsl mov fnstcw mov or mov lahf insb rcr dec xorl cmova jns std or dec jne push bound cmp pop pop jne (bad) popa push xchg inc imul fst sub nop nop (bad) insb pop mov call hlt js in push cltd sub adc test inc pushf mov mov mov mov scas cld sahf jg sbb push das dec push inc jl sbb and je adc neg in pop lods outsb mov pop lea dec mov mov aas ret lods mov inc lcall pushf int je dec aam nop inc jne adc aad mov in fisttp dec and int jmp lahf rcrl sbb lods sbb mov test jecxz mov fwait test or jb add mov aas cmc pop jns (bad) shrb ds shrl fnstcw clc mov outsl adc cld and outsb loop jp pop sub pop ficoml or mov sbb std or adc dec sbb xor test popf xor lcall loopne (bad) nop lcall mov xchg pop or popa pop push mov sub test add add nop mov test xchg mov mov xchg scas cs test push shl mov dec push (bad) xor or into int dec or or adc sahf out fistp ja mov dec push rcl push loope ljmp inc vsqrtps mov cmp pop push je jecxz mov xchg adc test fcom mov loop jns jns je test xchg repz xchg mov cmp pop and and push and push xor sub jno xor push dec imul jo dec jbe arpl xchg data16 and pop dec inc xchg outsb push and pop aad pusha xor pusha xor test pop cmpsl add lcall aad pop mov scas mov insl imul push pop adc jecxz stos inc push dec cwtl xchg stos add and jmp fcoml xchg mov pop aad scas lret loopne or lret cs int clc lcall jl outsb pop inc and mov adc mov into aas gs stc repz mov add add cmpsl mov rclb dec bound sub sti repnz fdivl subl push dec shrb movsl and dec fldt lds fildl test out dec rorb in sub sub pop adc imul fstl mov into mov inc add imul xor pop inc fcom xchg les (bad) jae mov pop mov add sti cmp jb sbb shlb push call shl dec sub insb sub loope mov dec js sbb ja push (bad) idivl iret jg or adc in (bad) xchg xchg jmp and lds and push (bad) jbe dec cmc (bad) mov cltd fcmovnb adc mov sbb lret (bad) or mov push mov xchg mov cmp addr16 adc mov movl jns test adc adc loopne push cmp mov jb cmp (bad) aaa mov leave rclb jl leave rclb xchg cmp aad cmp xchg sti pop jle aad add scas xlat scas pop mov lea shl sub fcomip jbe cmp mov sar jb stc orl out imul daa xchg dec xchg mov stos (bad) hlt into iret loop fs jmp and gs mov int rorb enter push enter push xchg outsl leave adc or arpl daa fist inc dec xchg xor sub and jae cmp inc mov in sbb out mov jb dec cwtl xchg fsubrs jbe mov xchg jnp daa cmp sbb neg dec imulb xor in stos jns cmp (bad) popa push mov fiaddl sarb inc pop jmp mov bound je push addr16 or cmp push (bad) xor sub mov cltd sahf mov ret das mov jp pop mov and jp (bad) rcr insb xchg fisub sarb push mov jp decb rorb incb mov cmpsb jns jp das push ljmp mov in pop xor inc and push jns cmp and fstpt inc es fisubrl pop xlat sbb imul repz pop and lahf lahf mov aad iret (bad) rclb sahf xlat xchg inc addl fadds pop push xor sbb mulb xor pusha mov and cwtl notb adcl std arpl movsl out ljmp xor popl jbe or xlat js aas jo clc adc pop andb mov sahf or pusha popa xorl aam pop fdivs inc aaa or cmp or xor inc fidivrl xchg push ss jb adc test inc sbb out push pop pop fstpt mov cmpl adc aam and fiaddl std lods dec clc sti jbe push adc stos and jle aad test and lret leave rorb pop in mov leave and and inc sub add pop fistl es inc push mov je jmp mov out hlt andl std fisub sahf ds cmp pop pop mov xchg pop (bad) jecxz pop ja in (bad) push fcompp xchg int xor adc repz or mov jmp jge ret and push mov xchg out cmp lds js push lcall std push loope jo xor xor cmpsb popf insl jecxz mov dec mov inc inc daa xor mov and ja jg inc sahf out mov lahf xchg push (bad) (bad) stc sarl ds cmpsl (bad) xchg fild push push sbb fwait mov add faddl rorl dec add push movsl mov cs loopne adc loope jae push dec scas stos xor push cmp push sub mov out es sub out inc faddl fldt mov dec jp fcoms cwtl fcmovnb adc aad gs mov mov inc jmp push cmpsl sbb mov addr16 je pop imulb and lds jbe ret (bad) mov jno and leave pushf dec add xor jg scas or cmp sub inc sarl cmp orl (bad) mov in js aad pop push sbb adc push nop inc inc push leave xchg push xor pusha and (bad) and and sub cltd pop sbb pusha sbb sti and dec jle pop jecxz cld test sahf cmp ret cs dec xchg fstl jg mov outsl popl push jl hlt jnp aas jne inc sub cmp pop (bad) fucom jp les inc pop popa push test sbb out test adc int push enter js mov (bad) mov sub popa and fwait add xchg mov add lret (bad) push lods mov sbb fcoms repz cmp xchg je bound test and nop popaw xchg insb cmp jne jge lret jle dec xor (bad) push sbb int ret push lods dec jg push push push fstpl int3 outsb sar or mov add rcl rorb iret dec cld mov cmp lret xor (bad) hlt cwtl (bad) or inc js icebp jecxz xchg repz pop pop rcr stc inc (bad) pushf jg leave xchg mov mul jecxz daa negl mov push mov jbe fnstsw aaa ja pop outsl clc lods rolb push mov cmp dec rorb rol inc mov cmpsb jb or out dec sbb arpl mov pop imul lea xor adc jle sti cmp call int3 mov sub cmp dec enter sub addb dec stos popf xchg in push mov xlat xor fwait les movsb insl pop inc popf rcr icebp xor movsb sti xor mov gs movsb gs and or xchg dec lcall out scas int3 cmpsb jns dec movzbl and sbb jg cs shr cs and cmpsb cmp jmp cwtl cmpsl inc lds mov iret xor mov mov int shl mov pop movsl loop (bad) xchg cli sbb xor orl ja and pop add adc lock inc cmp outsb jmp sub stos jmp jns mov (bad) push xchg push mov mov fs repnz cmp sti (bad) (bad) out (bad) fstpl bound inc xor dec pusha and xchg jle xchg es fsubs mov imul and (bad) or lcall in push mov (bad) lds inc cs xchg lahf ret shll ja out push cmpsb jg fincstp jecxz jl mov adc (bad) or xor inc or jecxz loopne mov pop (bad) repz cmp mov mov cmp push loop or out pop jecxz,pt xchg insl push xchg inc leave add mov xor push xchg into loop (bad) jae cmc adc pop push inc and inc jmp ret sti xchg mov pop and (bad) xor in xchg pusha add es test jo and scas sbb push fstl (bad) xchg cmp xchg mov xor add or and pushf mov dec aas jbe mov xchg rorb sbb jns imul pop out xchg dec pushf subb dec in dec js lea jp lret (bad) dec push push ror fcompl push shrb nop dec dec mov into or xchg sub shlb insl dec and mov leave sub jb push pop arpl inc cmp std pop adc imul push cmp pop cmpsl nop xchg stos clc ret xor jo and sub gs ljmp das loop popf fstpl mov test jae out ljmp pop push pop jl repnz orl or scas cmp rcrl inc in push test jno adc js gs push out lret jnp and pop sbb xlat (bad) push adc mov pop mov jno adc push out popa cmp pop mov xor (bad) dec (bad) ja outsl pop lods jmp and mov ljmp lret fcom testb push scas ss adc pusha adc dec cmc in inc (bad) ss ss sbb stos add or lods in or xlat cmp push insb xor adc in fmul insb jns pop cmpsb ljmp ret fucomp repz and dec xor (bad) cmp mov sbb push (bad) mov cmp mov cmp sbb lcall xchg jl adc mov lea add adc mov dec loopne pop xor (bad) clc out lret mov and xlat lock mov nop daa call push outsb mov imul (bad) in cmp stos sub adc inc repnz push sub add call jns iret in mov outsb pop push jmp (bad) pop stc pop pusha pop xchg test jl dec lds imul (bad) mov les fwait push (bad) mov sub cmp dec jg mov push xlat divb xor mov insb scas mov andl (bad) pop cli push cmc push rorl xchg call data16 mov (bad) push push and movsb push les and xor and xor xchg mov sbb imul fldenv fistpll xor mov arpl gs subb in movsb bswap xchg pushf lea sub scas pop cltd mov lods leave sbb aad dec jg clc pop stos and push mov ret jle cmp mov mov pop xor sbb sti sub mov sbb data16 stc and and notl add pop insl inc and (bad) gs outsb cmp es rcl push or jecxz loop mov inc mov fcoml cmp jmp daa sti int (bad) int3 daa lret ds and push (bad) sub pop mov cs rclb mov pop inc push xor push xchg in enter adc lods push and and arpl ficoml cltd cmp mov (bad) outsb leave popl nop aas into out mov addr16 sahf jne add sub and xchg lret cmc popf mov add cli dec or mov mov jb sbb cltd mov cmpsl cmp push cld xchg add sbb ss addr16 icebp cmp leave adcl js std mov leave clc js fbld (bad) xor jl jns scas mov cmp das idivl or dec jle clc mov or div add fmull push jo mov push add jbe scas (bad) add or adc adc std mov (bad) sub jo push nop test js inc mov test xor adc dec push andb mov cmp or in in push cmp mov cmpsb int3 cld sbb pop (bad) mov call add je mov loope mov adc cltd mov dec fwait push hlt mov fdivl lock dec adc add jo sti out mov imul mov pop xor mov cmp mov into sub jl xchg lret clc pusha sub lret jns aad push rep imul and and add pusha push pop dec cmc jae lea mov lcall xchg (bad) jo dec pop loop pop push jb repnz out dec movsb loope icebp test add ret (bad) xor inc xchg addb add stos idivb add add cmpsb in dec jp imul fisttp movsl xor lock shrl stos in jnp push mov sbb ret lret mov lcall xlat scas in lea icebp call xchg insl and mov lret push popf jnp lds test outsb lock pop mov pop out mov jg ds xchg sti mov in leave or push mov add js lds insb sbb jns jnp cmp xchg mov lods mov mov lret mov sub push dec inc xchg jb mov out sahf jbe and and push imul xchg aam or xor or cmpsl add pop std fnstsw adc xor xchg xchg pushf pop cmp lea jbe addr16 mov adc lock push hlt or int jne pop xor and scas adc xchg les je lock mov fcoml testl cs rorl loope icebp loop test push stos push fistp pop pop pop clc push sbb outsl pcmpeqw adc cmp test inc xchg or insl sbb dec jle mov in jbe dec (bad) dec adc sbb pop dec sub repz add aas neg aad adc imul insl unpcklps mov jno ds icebp sti imul dec shrl hlt in dec mov out stc test cmp sub lods push mov mov je inc popf push stos mov mov adc iret pop (bad) into mov dec lahf jp test aam ror mov mov inc dec lahf icebp pop cmp loop pop aas jb cmp xor xor addr16 mov std lea rcl mov or shrb sub adc sarb mov mov add mov sub sub loop mov outsb inc addr16 mov add adc mull (bad) and mov mov jb test pop lea in cmpsl (bad) imul js push cmp mov pop push sar pop test dec lea xchg xchg hlt out nop mov lock push xlat adc cmp ja sub adc mov repnz lock mov xchg sub out sub push jns js test aas inc xor xchg lds mov jne inc xchg movl cmp cmc scas push pop testb cmp fistpl jmp and hlt fsubl scas aad clc jae cmp rorl pop ljmp dec frstor imul xor cmp das dec aaa pop mov push jp in leave jb call mov dec loopne shrb cmp or das pop jmp sahf sbb int3 js data16 mov cwtl xchg sbb (bad) mov sbb mov pop lds movsl lret test sbb pop sub mov sub movsl pop inc incb dec cld xor jp adc mov pop aas and xchg sub mov cmpsl cmpl ret into mov hlt jnp cmpsl cmp push xchg mov aad rcll push cld and or ret or lock xor movb and mov mov ret push xchg (bad) pop sub mov test call out sub jp mov mov pop pop xchg movsl jmp add cmpsl cmpsb pusha mov inc or scas out cmpsb lret add mov push sbb pop pop or loop sbb jl cwtl je (bad) or inc xor ret inc (bad) loope adc into inc arpl arpl call or pop push mov bound lods leave lock and mov loope cmp js adc inc das or aaa add cld fistp dec cmpsl mov mov add dec shrb push and cmp and ret dec (bad) gs aaa push xchg ja mov mov push jno sub dec test push xchg jecxz ljmp mov mov or cli mov ja inc js scas inc jge mov test test es inc add imul add dec adc movsl jecxz jp sub push adc jl cmc push inc cmpsl inc (bad) mov jmp (bad) xor pushf (bad) or movsl arpl or in inc mov sbb push arpl mov rcrb fimull je sbb mov js inc dec ja mov ss pop stos xchg push sbb std mov push ret xor loop aaa pop sbb aad dec and add lea cld es mov lea cmp lret lcall inc sbb sbb or mov and lea rclb int3 dec dec pop pop pop bound outsb mov into lahf xchg xchg jecxz jecxz push icebp adc lds imul lea mov data16 or stos mov mov push pop xchg rclb dec bound les push inc faddl add or (bad) xor mov push popf push (bad) nop sbbl jp nop mov mov insl addr16 int or pusha cmp mov int3 jno dec out mov and enter addr16 ljmp dec mov int3 pushf xchg arpl cs popf out xor loope adcb in add push ret outsb dec or loop addr16 xor inc mov and addl mov dec pop fiaddl xbegin mov mov movsb adc push andl sub cmpb daa dec stos stos pop push inc pusha push mov arpl or int add inc popf insl loope dec sub sbb nop sub lcall icebp xlat fstp nop movb je jle mov add and push fdivp cmp push add pop aad scas imul xor and dec imul dec mov xchg stos (bad) pop ljmp push mov and fs das sub les or jo and adc push fsubrl or inc insl cmpb fistp xchg lods leave sub dec ret loope pop xor xchg adc push mov int (bad) sbb loop pop enter lcall mov jb (bad) jmp iret ret sub mov ljmp lcall in je jecxz push cmp inc pop aaa lds insb shrl pop test es imull push cmpsb and inc insb mov mov outsb pusha popf or stc mov dec and jns mov ljmp (bad) outsb xlat pop ret stc mov inc test inc addr16 mov xchg cli imul jbe or jne mov movb mov mov and cmp or adc dec adc (bad) mov ret test adc popf ljmp lahf xor cs mov and fnop and nop movsb cmp test xchg dec xchg test mov out fs jb mov scas sub fadds cmp sub dec outsl movsb xor popf mov ljmp dec ret inc pop lret sub pop inc xchg lods pop (bad) dec (bad) adc xchg and popf cmp stos pop mov hlt xor (bad) pop xchg cli jbe dec xchg mov cli loopne je dec in cmp sbb js fldcw (bad) in add addl dec push lcall sub pushf dec rclb out or or out add loop popa jae out inc mov cli scas or (bad) stos mov loope (bad) cmpl test div inc mov dec in arpl cmpsl ss add push xlat sbb mov sbb mov call pushf push sub (bad) mov mov sbb jno jbe push adc mov mov scas pushf add add or push repnz test shlb or (bad) scas sbb (bad) insl cmp neg insl enter cmp sub clc mov sbb jo test xchg jmp dec cmp xchg jno ss cmpsb repnz sbb sbb mov enter adc fnstenv je mov cmp xor adc jl fcompl cmpsb add push add adc rcrl sub pop sti mov jmp imul inc out outsl jb insb xchg sti jns jge in ljmp (bad) xchg sub addr16 inc xor iret cmpsl xchg sbb adc adc dec push xchg xor nop int cmp in pop cmp dec adcb push stc jecxz icebp ljmp inc jle jge fsubrs sti repz mov and es adc fabs outsb loopne mov les xor fnstsw sarl rcrb (bad) insb outsb pop repnz mov lods hlt rcrl aaa insb outsb rorl (bad) mov mov add and inc out aas xor xchg xchg mov movb fwait les dec out imul call and push movsl xchg dec addl adc pushf fwait cwtl and add inc cld lock fwait pop push outsb shll add (bad) (bad) dec out dec jo inc dec sub mov push call jne cmp adc and and and nop jb cmp jne or les xchg jno mov push sbb jne xor jno dec xchg popf or imul push dec xor cltd lock inc sbb lahf and dec lahf and mov les (bad) idivb movsl or inc flds mov xor inc add mov std and ljmp insl pop add jmp inc ds xchg cmp es lea xchg rclb ret or add xchg xor add inc pop inc pop mov or push jg int mov aam in sub inc cs dec mov bound stos fsubs jb sub insb jnp pop out data16 movsb mov popa add pop xchg in test adc and sub mov popa cld mov in sbb into sbb pop push clc jmp aas xchg mov cmp or mov idiv jle cmp in jo (bad) cs sbb fmuls inc jo out ljmp xor cs fsubrl push leave add add jle ljmp add or int das dec ret dec pop iret cs push insb lahf xor dec add mov in pushf jae sub add jle or push push xor xlat sub (bad) dec icebp cltd in pusha enter cmpsb pop movsb mov ja sbb scas aas and xchg dec aaa movsb cmpsl dec outsb movsl mov repz pop lret xor cmp xor into in push lods cmp in sbb sbbl scas mov iret (bad) jl lahf repz movsl popa jecxz mov cmp rol (bad) xor mov xor in popa pop mov mov jle mov lret test push or arpl or or inc adc aad mov mov add and sbb adc add scas sar mov into mov sub pop jl jp int leave pop repnz push pop (bad) in flds adc pop repnz mov or repnz sub fadd pushf inc rcr jle inc cli pop icebp repnz repz leave cmp push lret dec shlb and fldl jp inc mov out xchg adc mov xchg in xor dec jns out dec int3 pushf jmp jae jns (bad) fldcw mov add mov adc arpl adc out mov int3 xchg sbb fildl fwait jno popa xchg xchg push jmp add xor rep push cmp call jle mov jbe loope sbb dec cmpl dec push mov (bad) xor add inc into or mov mov repnz and inc pusha fs pusha mov popa xchg test test sub add pop cmpsl insb dec add sti mov inc repz enter adc cmp std shll xchg stc xor out fidivr ljmp fstpt jg cmc mov jns,pt add xchg imul loop cmpsl aas add jae add inc jae (bad) ss inc dec sbb ljmp (bad) lock dec insl in mov inc das push dec fnop jae test aaa arpl lcall and adc xor sub push or pop jg pop cld pop movsl lea dec dec xchg lret pop loop nop popf ds pop pop rcr cmp stos sub cmpb (bad) xor fsubl jl jl fildll or stos push test mov movsl call sbb daa inc inc dec xlat aam push ret lret xor push xchg push add call cmpsb repnz mov stos std nop xor rorb cli mov or inc (bad) insb (bad) mov sub pop dec ljmp test shll sub imul adc inc push out inc xor into es iret jo in pop lret mov mov pop outsb dec xor lret dec pop push out rcll mov js dec push jge add or or add icebp and mov inc jb inc shll and pop ret inc icebp mov (bad) aam sbb fldcw xor or adc inc or jae (bad) repz es xor je push scas push stos add aaa or mov jae inc into neg mov out nop test mov add out cmp and add sub jae mov jno mov cmp ret rclb pushf xchg jae,pn lock pop aas idivb (bad) mov xor jno xchg dec adc or add (bad) dec aaa mov pop dec shrl fstps add js rolb int lcall inc cmp loope in cld sarl xchg mov es movlps or (bad) and (bad) mov jl push jb adc sub or adc sub icebp fsubrs jl sbb jl xor sub fild sub cmp loope mov adc sbb scas sbb rclb pop js daa insl mov aas fwait cmp fwait lret xchg and mov ret adc dec pop mov sub fcoml cli cmp into lcall pop adc push loopne jecxz clc (bad) in or mov add aad xchg (bad) in std lahf push out shrl dec or jmp insb in inc js hlt addl add push sub jmp push inc jge (bad) xor push fdivrp (bad) (bad) enter stc and mov cmp mov xor mull lret fdiv adc pop popa mov inc mov xor xor or aad fwait decb call gs pop daa pop jmp cmp clc mov adcl fidivr in xchg sbb outsl push rcll mov push je pop fadd fistpll outsb in movsb orl xor leave or add push fild dec adc stos cwtl xchg push mov mov std shlb sub hlt push sbb int push cwtl xor ficom cmpsb dec jmp dec pop xchg push inc stc aas xchg das inc sub fwait add mov pop mov pop fadd add jge dec jns sbb mov jns push (bad) repz daa cmp push or sub add add jne sub stc sbb test in or mov adc push ss stos xchg lods std lock adc mov cmp push adc xchg jmp push stos arpl lea out cmpl lock mov call pop dec (bad) mov xchg inc inc inc je jmp sar addr16 in cmp jnp fildl pusha loopne imul (bad) push lds lods jnp shl dec rorb out sub (bad) loop pop add cmp stc stos xor fsubs je (bad) (bad) jmp dec cmp mov subb and cmp inc inc xor jg xchg pop jb dec insb mov xor pusha pop sbb cld pop into dec xchg cmpsl add mov aas ss mov stc sub ss popa cmp dec jmp push pusha (bad) and jns xchg arpl pop bswap pop movsl xchg in rcl js maxps pop or push out addr16 (bad) ja subb pop setae mov scas mov mov call je xchg pop jb mov addr16 push lret xor dec sbb xchg or (bad) int3 (bad) fsts add fist adc xor cwtl mov xchg adcl cmp leave out mov jo imul pop into out test dec lret imul lret lret push mov xor lahf jecxz pop test cmp adc stos and fs outsb scas sub outsb xchg icebp imul cld fwait mov xor cwtl add in jae or aad jmp adc inc iret jmp (bad) in dec pop arpl and fcmovnb xchg shrb imul stos inc xchg adc push orb into fbstp hlt adcl lcall pop xor aaa inc out inc sub cld popa dec loopne les (bad) jo adc std xchg xor jae outsl cltd xchg les lret add loopne (bad) jno push gs adc push sti push iret fsub add mov dec imul push dec fwait outsl mov push clc pop out movsb scas jne cmpsl jl and and (bad) xchg lods shrb sar push jle add lods xor bound fwait inc test pushf aam dec push loop sub pop pop pop cmc std xlat ss bnd mov inc cmp lods xchg adc mov xor add out pop pushf xchg sbb mov in dec leave jp cmp lods repz repnz sbb xor repz es fsubrs xor sarb into fcomps icebp out nop cmc inc sub cmp rclb (bad) out xchg pop sbb arpl lcall xor xor cwtl push mov sbb pop mov or in pop xchg repnz imul pusha cmp icebp in push ljmp hlt jb pop inc aaa xchg push fdivl add popa lods lds (bad) sbb jg pop shrb sub sbb out xchg sbb testb rcrl loop int push jb mov test rolb add and lahf pop and cmpsb in ja inc inc jp int mov iret cmpsl inc fistpl xchg sahf xlat sahf lds jl insl sbb icebp imul ja out gs into mov jge mov lds int3 and sub into and je dec xchg jle push insl sbb test pop out popa fdiv aas enter sbbl lret lock push dec xchg and fldcw popf (bad) call mov clc addr16 mov outsl test sti stos clc hlt lods dec add push imul (bad) push xor inc cmp gs xchg xor pcmpeqd fldcw adc fiadd mov mov sbb mov pop mov push push cltd xchg imul push mov and push xchg adc (bad) pop nop sbb dec aad push push (bad) mov insb fndisi(8087 iret pop in into cmpsl jle js sbb daa bound mov pop sbb aad mov sbb inc cmp pop lds jb pop fcompl popa xlat popa pop and xchg rolb mov insb adc scas xchg mov dec in xchg jb cmp jne cmc ss jmp cmp leave addr16 jp loop sbb incl fldt adc or loopne sub or inc pushl jg cltd pop add sbb fdivrs pop fcomps xchg (bad) or mov repz jge jmp movsl mov fild or inc dec fcomi daa pop and adc nop xor xchg addl in repnz push pop mov daa sub cltd mov sub mov das push cmp sub mov jbe ljmp cmp daa push jg adc pushf sub rolb jecxz nop lahf push rolb mov and pushf xchg inc pop lret or repz addr16 sub cmpsl cmc adc xchg ficomp mov aas mov (bad) iret adc es sub push add lret cmp sbb in mov les sbb fcomi add sbb rcll (bad) sbb jb cli fwait add gs push mov inc (bad) lret xchg xchg shl jmp inc cmpsb mov loop aam lods mov inc sbb sub cltd test jl and aaa mov sbb fstpl xchg out icebp popa jecxz mov sbb in test pop xor xor sub test dec test mov mov xor sbb push loopne scas add inc inc cmp divb testb jmp inc add xor out imull push push jg mov aad addr16 mov mov inc movsb rclb pusha jle (bad) ljmp inc je gs or out mov jecxz fcmove int or pop cmc xchg (bad) sbb test mov sbb enter pop fsts mov (bad) (bad) popa jmp jmp aas mov fidivl (bad) adc (bad) jb cmp inc test jg movsb mov dec jecxz dec ljmp push xor mov inc addl push ljmp in mov mov (bad) inc bsr fdivrs into movsb mov fmuls addr16 sti imul jnp mov icebp imul add mov mov imul les mov mov mov negb mov cmpsb nop xor mov add cmp inc testl mov stc insb sti mov out gs push loopne mov adc mov mov test ret test out call loop and adc rcr inc mov scas add cmp out jp jno test cmp test pop loopne jmp (bad) mov sbb adc cli fimull and popf and lea nop outsb fidivl push mov mov xlat pop rcl clc insl lcall (bad) mov in in insl decb push add ds fild add lahf jl daa jg stos sbb cmc out jmp jl cmp push jle gs cli mov imul imul sbb leave add push fimull pop movmskps mov fsubl lret and outsb scas movsl xchg mov rcrl test sub push cld lret negb ds xor popa jmp je test aad xor mov push sbb std subl rolb movsl jbe lret and mov pop stc sub jnp mov scas xchg mov movsb fs inc sahf int mov fdiv jg stc dec shrl jb inc push out (bad) jmp mov lret int3 mov sub pop insl adc pop or or stos and cld cmp dec or mov mov ja fincstp repz sbb aaa mov (bad) mov and rcrb (bad) dec inc pop test gs jb incb in add test pop (bad) pop pop sarl stos or in pusha push lds sahf es (bad) adc and out bound mov aam (bad) mov push sti pop dec cmp adc in aaa lds mov sbb jmp scas cs loope (bad) mov mul dec mov adc mov mov mov pop jl cmpsl daa jae mov outsb inc gs ds movsl lds jp loopne imul ljmp fdivl push insl out mov mov xchg (bad) mov test inc jae js jns and jg push orl xor rcrl xchg es test and test dec and lods int3 ret loop imul inc mov iret mov aad in out xchg btcl cmpsb jmp adc mov pusha outsl cmp scas pop mov out mov call mov mov lret push in lret xlat scas pop jg popa das (bad) loop and xchg xchg jne,pn jle lea fisubl dec push out sub dec into pop into cltd fidivl pop insl shll loop gs sahf inc sub inc push in out imul mov bound inc lret push cmp es movsb mov add pop cmpsb and addr16 cmp xchg push daa dec xor jns pop pop cmp aam jl sub push frstor hlt add out clc loope ds (bad) test imul mov aas mov jno jg rorl bound add out add cmp or inc push stos inc test and mov aam inc adcl sarl nop push (bad) scas repnz sbb or push je sub sub clc pop dec out lcall out push add add sti popf das negb bound int and adc xchg inc mov mov insb into popf xchg push sahf jo cmpsl adc fwait push dec sbb xorb push inc in jge icebp roll xchg jae nop xor repnz mov mov add cmp out std in xchg pop popa in adc incb pop adc aas repz adc loop mov loop add je mov push shrb sub ret xor jno sub jne out pop fs mov xchg fadds out dec mov fsub mov xor popf bound icebp cmp cmpsb leave jb or mov jne aas xor mov loope enter adc jg mov lods rcrl and inc imul inc sbb in and mov xor fwait mov stos icebp aad lcall sbb mov jne scas cmpsb stos scas lahf fmuls xor push push mov dec fwait add (bad) jno and es inc das dec ljmp xchg mov gs fildll sbb mov sbb cmp jnp mov (bad) in xchg leave testb ret cltd movl out scas call or cmp popa insl aas int jo pop fnstenv add fcmovbe xchg popa jmp sub mov (bad) and leave push jne cmp mov rcl pusha jns fs jno mov pop cmpb add pop or mov fs in mov add lret jle xor pop daa stos (bad) dec and inc pop dec cwtl cs out test dec mov sub push inc idiv push adc and mov sbb xor dec andl ds fwait cmpsl sbb test adc imull int3 loop test aam mov xchg sbb mov cmp xchg (bad) movsb push jp mov add (bad) arpl cli dec shl xor adc adc adc (bad) fild hlt lahf repz push cs sub cmp imul xorl jg pop test jnp loop dec stos fdivs jecxz xlat xchg and pop jae imul outsb dec add sub xchg mov (bad) sbb std cmp imul cli rcl es cltd js xor fisttp sbb mov fisttpll aas rolb mov lahf jl (bad) popa loopne or xchg xchg in xchg ret (bad) or xchg cltd mov sarb dec nop loop loopne call cs inc push repz mov bound xchg add inc popa adc mov xor cmpsb cmc lods jmp xchg test arpl cli inc dec dec fisubr jp nop out adc xchg dec xor mov pushf push aaa cmp repnz ljmp dec orl enter and add mov repnz ret in out out mov adc je mov in push shll xchg mov (bad) mov mov xor test cmp sub and fwait jle jmp cmp and (bad) dec xchg imul addr16 cmp cwtl sbb mov push sub aaa inc insb js xor push arpl fbld mov dec cmp lds ljmp push inc fdivs or adc clc pop jbe js rcl ds pop jne dec pushf addr16 clc loope das ror in or or sub sbb jl clc dec icebp clc aas je push jmp push mov mov sbb mov push es mov dec jno and sbb add mov add or sbb jno or mov xchg pop cld out fbld pop lret jae mov (bad) (bad) call jecxz gs cmp mov pop sbb xor inc outsb icebp fsts adc sub sbb cmpsl mov mov cwtl push rcl sub inc push adc sbb and addl pop xor or mov push bound leave arpl or (bad) call adc insl stc sbb cmp test xor hlt adc push repnz nop cmp add or jo mov xor xor mov fdiv push (bad) push mov jl xor adc shll fwait mov jecxz or call push lret xlat push call into dec mov cltd (bad) aas fidivrl lea sub pop ret loop,pt rcrl (bad) or push fs dec or sub out adc mov jg mul adc adc fdivr mov imul imul pinsrw test and inc xchg orb roll ja jb dec cs aad ficoml fcompl rorl sahf mov cmp adc out rcl enter jmp cmpsb xchg out xchg (bad) in into xchg mov push mov sbb inc push add push mov into pusha pop insb mov incl nop scas cmp aaa insl push jg xor pop add ficoml push ljmp pop cli ficom mov push jmp sbb adc mov in mov test adc adc nop frstor or lods push sbb fstps push sub sbb popf fstpl ret adc stos jl lahf ret cmpsl lock hlt jl int3 jb aas test outsl cli dec ja jae rcr (bad) mov or (bad) push pop inc dec mov lods inc pushf mov xchg movsb sub dec push inc jo jbe mov out lods and fisttpl and xor adc loop test inc es les popf sub (bad) int fisttpl mov mov fisttp push mov cmp pop es es mov adc dec cmp loop icebp sbb addr16 mov and adc js les icebp add and movl mov inc cmp pushf pop jno clc jns das adc push les push and and das loop jno inc xchg clc mov mov sub or pop and clc cmpsb mov mov pop pop mov gs faddl xchg jg add nop (bad) pop (bad) imul cmpl jmp sbb outsb das (bad) pop jns movsl push fcmove outsb mov inc leave mov lret mov rcrb dec sbb mov ja pop push add sarb push pop scas ss (bad) das pop mov fmull sub push cwtl sub pop xor je cwtl pusha push repnz dec enter mov push fs (bad) rorb popa jo pushf push sub jmp out imul pop inc ja pop and mov jge and sub nop fsubl mov sub inc int xchg push orb xor and mov cld xchg stos push mov jle fcom data16 ret psrlq mov stos cmp sub sahf cwtl sub (bad) in hlt gs popf sub daa (bad) out cmpsl addr16 popa mov pop fcomi stos mov mov test out lods dec mov pop lea inc cmp xorl inc (bad) xchg clc out pusha call mov push out neg xorl rcrw jo mov push cs outsb dec xchg lret cmp push fisubr jno shlb rcl sub xor mov fucomp sub ret pop pop sbb sbb popf test push daa shrl shrl stc (bad) fistl xchg mov jb ja inc xchg mov (bad) push and sarb inc pop dec out lds xor sahf or enter movsb mov cwtl mov ljmp ja xor orl daa mov xor mov sub dec push int3 push jnp and cmp ror lea in call outsb insb aad cmp (bad) pop mov insl daa push sbb es (bad) dec mov in sbb push (bad) jmp mov and xchg int3 push mov mov xchg pop push cli jnp mov jmp xchg loop cltd clc xchg mov mov insb fidivr mov ljmp push es sub daa adc aad xchg pop mov arpl (bad) fs (bad) xchg lret inc mov xor out push and pop and inc inc pop add add jbe movb push sbb mov cli add mov push push inc fist inc push cli mov repz nop add (bad) mov arpl add or sbb inc arpl add add or hlt sbb dec fdiv xchg jns push lcall push or push mov and cmpsl xor xor nop fnstcw dec stos mov adc outsl xchg pop sub xor int3 pop insb xchg je shrl mov daa xchg sub (bad) imul out lods mov dec je push xor jb sub mov dec hlt in push mov mov jne pop aad xor add add or inc mov mov adcb shll shlb outsb adc fldl outsl adc fcomi mov ss (bad) adc mov cmp out int lahf cld lahf cmp es lahf lods std repz mov push aad xor mov push ja push push mov ljmp cmc pop dec or or or movsl jo xor (bad) push xchg mov adc and and adc sub fisubr es cmc jns dec cmpsb cmc jns cwtl insb shl in bound fs lahf ja leave push jge inc dec outsb shl popf bound leave cs inc (bad) fsubrl es ljmp sub rep ret and out orl and pop mov jnp test outsl in pop push mov ret mov (bad) or pop sahf (bad) call mov bound jo (bad) jp mov push cmp bound jo (bad) in loope mov mov ja addr16 cwtl fsubrl outsb loope adc dec push or cwtl fsubrl pushf in (bad) (bad) ret es or cwtl fsubrl pushf mov jbe leave sti test and invd ja jo or sub sbb ffree mov jnp jo or mov in jge fst add sub sub popa loope js xor adc push mov push add daa cmpsb popa jmp jo adc jle add sbb jg loope and std jae pushl sub cmp es adc inc xor cmp jae dec push pop into std (bad) popa loope and pop adc adc stc push call dec sahf adc andl jo adc dec sahf push into stos (bad) in jo mov xor jns dec sahf movsl dec js es jo (bad) fsubrl dec add repz mov lahf mov std (bad) push add and repz sbb into mov jbe or test loopne xchg jo push sti adc cmp cmp sarl sub pop jl,pn test mov or jmp rorb jl arpl js dec loopne pop andl xor pop or ds ds and out jp adc cmp test ja ret jns xor in loope fidivrl push in enter dec ds jns cmpsb in push js mov sbbb daa cmpsl popa imul and xor daa icebp dec out insb sbbl xor pop scas or mov mov into xchg mov or stos outsb jge mov push cmp cmc imul test es xlat jmp popf jo shrl into xchg outsb sub jecxz push xlat mov test sub dec rcll lcall iret into fwait push push cmp mov push shrl pushf inc fnstsw sbb xchg add sub ljmp lods gs xor pushf jmp mov lcall sahf pop xor mov fidiv sub test ret mov das pushf aaa adc xlat test daa out sbb and flds xchg jne pop test fsts mov jbe ljmp into xchg scas mov or xlat dec jle pop cmp pop packuswb dec push enter pushf pop sub imul mov jl lret xchg lock clc pop jo (bad) mov out cmc push fmul jmp adc into fxam pop xchg jl jo lcall jmp ret mov fcomp mov sub jne loop adc clc outsl sub andl iret push cmpsb stos inc sbb xor push dec mov mov loop loopne sbb xchg int sar pop push xchg sbb icebp cmp (bad) icebp and sbb je inc (bad) mov repz cmpsl jecxz sbb inc ret rcl test add xor jb xor mov das cmp or rorl jg loopne mov lock ja pop adc dec loop clc fldcw ret xor adc pop cmp loope adc cwtl dec outsl ret iret push lret or cmp add mov jo sbb loope adc clc sbb (bad) fwait push or cmpsl (bad) push mov jecxz cli fcomp test add xlat (bad) fldcw jmp pop test enter in sub and cmp pop clc outsl cwtl cmpsb or fbstp ficom movsb clc rorb mov dec pop pushl jl mov popf inc (bad) cmp mov mov fdivrl shll cmp and ud1 nopl xchg sub dec das adc xchg cmpsl stos lret roll cmp sbb inc lock jl mov push dec xchg (bad) sbb imul or lock movsl jno pop jecxz aam stos arpl mov lock lds cmpsl xchg fwait and push jno jbe pop cmp xchg dec loopne inc outsl sub nop xor js movsl addr16 jns pusha push add push pusha xchg insl loope adc andl mov sub push and cmp out and outsb jl or cmp jae push add add cmp lcall mov or xlat add push scas test dec inc mov (bad) mov popa cld push (bad) mov jb push imul js js jecxz lret into icebp aaa loopne in mov cmpb insb push add jmp mov lea xchg xchg pop (bad) pop mov push daa fmull sbb mov ja cmc sbb scas jo sub pop add aas sbbl imul pop sub mov aaa and lcall sub xor jns stos fistl and xchg insb xor xor cmp stos jno push sub or push aas add rorb pop adc jns lods fs jl js test add xchg mov ds aam add dec xchg dec and data16 addl inc adc lcall push fdivl rcl jno mov inc mov lods adc cmpsl xchg and loopne nop imul dec cmp jecxz adc mov xchg jmp or cmpl mov iret out push leave aaa xor adc in imul jbe jg (bad) out icebp adc pop subb add lds mov repz mov pop rcr ds mov sub and in xlat rcl or sub fsubrl cmpsl xchg mov add enter jbe push push inc add pop scas ret mov xchg ds inc adc jns loop sbb jno out cmp in jno xchg add mov ret mov jb jmp clc jl dec subb jne decb mov jecxz aad push cmp stc clc xor pop scas xchg mov int cmpsl out (bad) (bad) jo movsl adc mov pop sar pop aam pop (bad) xchg dec jo cmpl jp fisttpll jbe js or dec sub add sbb xchg ret cli jns aaa ja psubw int test sar add xchg mov icebp cmp fiaddl mov push add sub lret jecxz xor mov push inc popa sbb cmp add inc in mov cli (bad) pop sbb mov ds (bad) adc sub cs nop sub mov out das das and mov jecxz xor lds mov jb xchg sbb inc cmpsb mov iret mov mov (bad) sub xlat fsts sbb jmp dec inc jbe sbb lret jo movsl adc data16 mull sbb mov adc xchg add and ret jnp (bad) fldl (bad) lahf sbb enter mov fildll data16 cs jmp mov cmpsl test xorb jl out mov loop sbb xor fwait addr16 xor fisttp in mov sbb push xor mov ss inc sub imul ja into jmp add xchg jle or cli xchg jge mov xor xchg lret or adc fwait popa lock daa and pop sahf out call shrb inc mov inc mov push jns xor fidivrl jno sbb mov xlat imul fiaddl testl in lcall mov rcll mov cli add sbb inc mov loop addb roll mov out inc push insb sbb or and movsb loope scas stc mov mov pop addr16 ljmp call pushf (bad) sbb ffreep mov or mov add fstps addr16 jo (bad) mov cmovbe popf fwait (bad) iret roll stos push fdivrl and mov test push add (bad) sar xor jnp leave cmp ljmp add nop addb orb data16 mov cmp das mov in jmp push xchg cmp dec loop sahf mov cmp or adc out lret negl fsub sub cmp scas ret rcl sub sbb push mov jb mov adc sbb add dec add shlb jnp cmpsl in xchg jmp mov lahf fwait shlb fsubrl std fwait inc mov sbb inc lds sub and inc (bad) jo fidivrl inc push dec and fldl (bad) insl popa mov xchg popa rep and or in movsl dec add dec jo mov adc push aam and bound mov in inc test inc pop inc clc inc mov ret loope outsl gs lcall sarb mov xchg pop or gs xorl icebp dec stc mov sbb js mov add js stc inc adc nop call out adc inc inc jns loope mov cmc cmp push push mov add fcompl pop addl and pop lock inc pop dec aad or push mov dec ds sbb imul iret push cli jmp clc cltd dec cmpb test add fcomps ret stos add mov pop incb lods mov sub adc notl aas out popa sbb xor into inc addr16 mov scas lock cmpsb leave mov jb icebp pop ret xor sbb mov stc fdivs jbe es pop hlt pop pop xor inc sbb jp push cmpsb outsl sub or test and arpl sub xchg jl mov or pop adc clc pop (bad) cmpsl rorl xchg dec repz inc jp xchg push div adc lret (bad) clc sbb inc leave or jp lret jne cmp jge pop mov in dec jge mov add mov mov pop sub fs and fstp mov inc orl adc aas jp int3 aaa cmc mov jmp xor xlat jle ds popf pop mov outsb das repnz sti mov aad push pop or cld andb (bad) xchg jne lret xchg inc aam cmpsb xchg out jo ja xchg orb (bad) data16 pusha push mov stos pop sti js stos repz stos sub fsubr outsb sbb stos stc push push sbb daa or cmc loopne adc inc js ret push xlat jg lods adc sahf sbbl dec insl mov mov inc les gs gs dec adc insb mov cmp mov inc subl dec cmp push sub andl xchg and iret clc mov dec loop or repz sub imul fcoml and shll and mov arpl mov cld pop int pop int3 lahf cmp jbe notl push dec lods push push hlt lds adc cli roll dec in dec pop push out jae (bad) dec sar insb shrl adcl dec mov test dec nop dec iret in test imul push sbb pop mov inc flds daa mov (bad) shrl dec stos andl cmc sub sbb out and outsl mov jno js idiv es sahf aaa inc imul movsl mov sbb pop fstl lock rcrb jg pop mov pop mov push mov push pop (bad) out jnp cmp cmp loopne fmull in adc (bad) mov clc sub cmpsb adc sub and push mov push jge aaa addl loop dec enter shrb shrl pop insb dec cmp fidiv movsb adc push lcall pop inc insl mov rcrb sub jge add frstor jne pop sbb imul mov add cli leave mov cmp stos arpl xlat pop inc jecxz addr16 push adc stos aad sub mov imul lret xchg out mov int3 mov inc in pusha or cmp stc lds pushf (bad) push inc and xchg lret push stos (bad) pop lods das sub xchg frstor jg pop icebp add pop add loope rclb or mov jno xchg mov insl add xchg ss addb sbb test cmp mov sbb or lock test sub sti movsl push jle jns mov sub mov sbb fwait push notl cmpsb mov adc adcl mov cmp test mov cltd jb icebp jle imul fwait xor lods js mov lcall xchg mov jmp lret add or or sbb pop pop daa sbb leave pop mov lea adc pop jnp mov mov stos pop mov aas cli call mov hlt mov (bad) push add push sarb jne jae fdivrs (bad) sbb dec out xchg fdivs js fwait mov mov xchg in lds pop jp aad rcll and inc and or rolb (bad) in inc and mov rclb data16 adc inc (bad) jecxz fisubr loop pop test in and (bad) jnp out aaa imul rcrb cmp add mov inc fldenv mov mov jne lea lcall call mov mov popa mov jp xchg ret or xchg xchg jecxz mov dec std lahf pop inc mov sbb xchg cltd (bad) mov push cmpsb xchg mov cltd addr16 mul push inc and xchg jnp jg mov setge xchg xchg rcl cltd sub adc xchg int popa out mov out int clc outsb cmp xlat inc sbb (bad) pushf and mov insb clc xlat ljmp js aam jbe scas jle mov ljmp xor lea and (bad) inc jmp out sub add loop fildll pop rorl mov (bad) fsubrs inc mov sbb push dec lahf fsubs aad jb mov mov cmp imul sub cmpsb pushf jno xchg sub fiadd push test sti push lret faddl test push leave fidiv js push mov add push fwait mov fcomp xor aas repnz adc add or addr16 bound cltd mov movl movsl xor int repz or stos mov sub jmp ds lea aas clc loopne paddsw dec jae mov jecxz popl incl icebp (bad) lock or ss hlt call (bad) sahf es jecxz scas out dec sahf mov cs pop jge jg hlt leave rorl mov cli jnp fisubr dec enter mov stos stc lcall xchg cmp cli pop cmp dec add hlt test or and int mov or aas insl fnstcw adc fldt sbb fsubrl gs lods ja jge aam adc iret inc mov cltd maxps jo dec (bad) and shrb es push mov cmp push dec and dec add add sub sbb or imul add sbb push inc push xorb pop sbb outsb jl push (bad) sbb push add andl and or inc stos shrl ja stos je fistpll sub aam adc ljmp aam sarb xchg push out add movsl sub jo popa cmp sahf adc (bad) xchg or (bad) (bad) mov add mov mov pop int xchg xor add pop scas xor dec cmp loopne xchg popa outsb fcmovb jg and fwait in push add fidivr cmp jmp dec xor sti inc cmp lahf push repz adc mov inc fnstenv paddd pop xorl add fs mov adcl sbb rcrb mov cld out jg ja mov xchg xbegin adc inc add xor sbb outsl mov lods adc and sub sbb rolb orl add movsb test std nop mov (bad) mov test mov dec pop sbb xor int (bad) and mov inc test cmp repnz int cmpsb test stc and fsubrl add into xchg mov mov inc iret xchg adc (bad) jo in mov and xor cmovle out mov nop daa or add (bad) mov testl add adc jmp add xchg cmp add loop movsl jge mov jbe movsl dec scas push inc push push outsl mov mov xor test decb xor cld adc lahf jg in popf repnz dec or repz sarb sbb std arpl mov sbb adc dec pop je or xchg add rorl inc aam pop outsl (bad) sub xchg xor clc cwtl or (bad) jno jl out cmp dec fbld sbb inc mov mov sti and adc push xor pop jbe dec movsl (bad) fild popf std pop lods in fisub (bad) ss dec stos (bad) mov mov push (bad) into or xchg jp mov sbb xor stos inc enter xor andl push (bad) adc add mov les adc mov pop jmp push in sbb mov xor cmpsb push leave dec in xlat inc into dec stos mov cmc cmc sub daa lds sub icebp push mov xor daa int xchg ret adc and adc pop out or mov jo jmp inc lods and push jb sub rolb dec jbe push pushf daa and or jb lds setnp cld cwtl popa xor xor outsl mov mov in adc imul pop mov add das adc les and dec (bad) imul pop lods sbb sbb mov push and iret jo xchg cli mov inc pop dec dec fstpl mov stc pop in push adc popa sub vmovupd sub push inc sbb dec inc popf sub pusha dec iret test jae jmp add mov call cmpsl cmp and ret repnz shr lds xor and xor xchg sbb cltd call scas xchg lods and mov and mov xor int3 enter loopne add (bad) pushf jg and ljmp es mov shl xor sub inc fldcw pop std sub xchg mov inc mov add movsb mov pop ret lea dec fwait push in rcll mov dec xchg mov rcr movsb cmp mov jne fnclex ficom mov xchg mov sub mov or in psubusw les sbb sti or clc jle adc fsubl dec add adc daa xor test in mov and fdivs cmpb lods daa or mov push test cmp sbb test mov and mov and movsb sbb js call sub mov call in mov mov jnp or test add and xor icebp in pop jb inc xor movsb rcll pop hlt ds je fsubs pop mov cmp fs negl cmp cltd test jle and repnz rcr mov inc addr16 imul jmp cltd outsb dec cmpsl rcrl fcmovnbe leave dec inc cmpsb cmp lahf sti mov fnstsw adc icebp add xor push inc cmp (bad) ficoml (bad) bound mov sbb xor fimull mov fsubp lods fbstp pop mov enter xchg (bad) and outsl daa (bad) loopne fcmovb xchg pop cs cmp mov sub lret xchg shrl gs ja mov test test out lods lahf shll dec pop outsl jb dec lea aad std sbb mov cmp xchg shlb dec (bad) fmull (bad) mov mov pop dec xchg inc mov in or cmp out push jg dec aaa inc (bad) js into push test adc push and pop dec icebp popf lret lret movsb add push mov cmp xor sti or jp gs arpl hlt jge sbb rcrl xchg sub rcrb (bad) outsl mov jns lods xchg cmc push sbb mov scas lea inc and imul stos fnsave ror sbb ja xchg inc test adc aaa loop pushfw or jo ja ljmp out lahf and add out repnz leave addr16 mov popf or lea stos lret lock dec xchg dec or dec ss adc push test es xchg popa xchg lret adc lret cmp lea mov xchg sub jne sub lret or xchg mov stos test sub fs popa xchg xchg dec popf (bad) mov dec adc pop sbb rcrl pop fsubs jno mov xchg fs xor xor data16 pop sub std es in mov and jle mov pop fsubp cmp imul sub int shlb nop call (bad) rcrb arpl imul mov add test jp jo (bad) fdivr sti cmp adc (bad) lea in dec jb int3 pop inc sub xor lret push outsl into adc mov and cmp sub push (bad) cli xchg fs ss roll cmpsb out xchg int3 cmpsb fildl subb (bad) cld mov jae cmpsl xor xchg push cmp cmpsb in mov jae dec or mov sti inc jmp jno xlat and xchg mov sub int into fbld or inc dec mov mov mov fisubr pushf mov xchg shll mov shrl sahf mov lahf rclb add mov icebp fwait jno cld pop xchg mov adc add lret inc lods mov mov xor dec mov pop (bad) push fsubrl dec mov mov imul jmp lret (bad) dec jg push movsl xor movsb jmp fwait dec (bad) xchg pop cltd bound leave in fcmovne inc xorl xchg xchg incb enter out jecxz decl test cs xor xchg in enter mov (bad) pop pop sub mov pop cmp mov mov icebp pop mov xchg (bad) in xor pop dec enter or dec add sbb mov xchg cwtl scas inc add jo stos nop and push repz rcrb das cmp jnp add insb sub dec mov adc sub push aas sbb sub add or imul add bound sbb (bad) xor cmp or in fsubrl push add addr16 stc insb xchg cmp in push divl lods push test (bad) mov lret fmuls cmc mov xor aad lcall dec xchg sbb into stos int3 pop ljmp ljmp xlat fs idivl mov fstps fstps inc mov xchg sbb and out sbb adc in hlt mov (bad) xlat mov test adc (bad) push popf pop xchg mov shll dec push mov (bad) jmp and imul sub repnz mov mov pop push inc negb push sub push inc (bad) sahf xor dec ror (bad) js ljmp les sub sbb xor rorl in lcall insb dec sahf mov clc int3 aam lods adc (bad) cmc mov inc es cmp mov and adc xor (bad) xor test negb (bad) fcmovnu js sbb daa popl push insb mov iret dec push mov xchg in push int pushf cld add xchg dec sub mov outsb insb pusha arpl dec cmp in (bad) sub out popa adc les jge loope inc test outsl stc xorl cmp dec or or popf adc sub sub inc sbb lret inc pop sahf (bad) mov sbb add or repnz popa popf push (bad) adc sbb cmp jae cltd mov arpl jno mov leave dec xrelease sub mov cs mov cmpsl inc or jle cmp lcall mov addb loope lods and pop mov outsb pop add ljmp mov imul js dec or leave dec inc mov inc nop mov cmp xor mov out lds add test xchg xchg jg xchg mov pop cmp or sub xor jns push (bad) mov cmpsb (bad) push push add adc sub pop popf jo stos test xchg test (bad) and (bad) or adc pop cmp test inc in mov adc and into jle jmp and insl fcom jbe scas shlb sbb xor int3 ret jg cld sbb addr16 pop fs or dec fidivrl push orps das push cmpsb stos int mov inc adc pop or push and push pop data16 je mov outsl test cmp mov test loope and repnz les cmp pop mov insl xchg xor movsl (bad) lds push xor outsb mov iret fstps adc xchg mov dec push in dec pop stc and shll and sahf or ss and (bad) xorl pop dec outsl mov iret mov pop mov mov jg dec mov sbb jge loopne xor std mov mov jo jbe and pop test mov pop jbe sub push mov (bad) cmp clc xor loop dec ficom pushf xchg iret jnp js xchg push jecxz mov xchg pop push pop xchg rol or test sub imul xchg and adc dec mov repnz lds lea mov adc pop add lret lahf adc adcl cld mov mov insl fimull ret lret push and rcll fidivr or orb mov das sub cmp or dec or in add xlat add mov movsb xchg (bad) insb sbb xor mov sbb pop movb sub jae pop fisub mov mov sub pop and adc aaa fs jmp .byte dec sbb add cld cwtl add xor dec and pop push aad xchg xor outsl jns push test cmp pusha arpl or add dec cmp js dec fimull pop push and push mov aad jae gs inc jge sbb xchg pop push add jp es jne cmpsb daa add sbb push xor inc cmpsb mov xchg mov fldt dec out or sbb cltd push mov or push push loop (bad) pop das jns mov add mov inc sub push jnp addr16 leave add fwait dec (bad) mov mov (bad) inc mov xor fwait daa jle into dec pop xor sbb cmpsb dec pop xchg xor idivl (bad) scas xor xchg or jg sub pop sub adc iret xor out mov sub movsl icebp add push inc adc jns sub inc mov out cmp leave dec push cli (bad) jecxz dec inc mov xchg repnz rcll mov stos mov jns nop loopne add in int3 jmp cld (bad) lea je push jge and lret push jo out out iret roll inc stc int push iret dec in imul lock lret test dec stc push xchg inc jp inc dec movsb xor xchg sbb and xchg stos pop movb sub pusha enter dec cmp in lret out adc dec pop jecxz cs lods jp data16 std enter xor cwtl repnz and or sbbl clc cli aam int cmp mov cld je add jb (bad) lahf mov fsubrl lock add sub shlb mov cli jb xor mov aad int lcall cmp jmp lret pop jp (bad) sub jmp mov push aam and icebp sub fild xchg lods lcall lods jne mov ss jp sbb inc cmpsb pushf fs adc aas out ret push scas sub pop sub aas ficoml push pop (bad) cmpsl cmp jnp jbe es out loop xchg mov loope sbb xchg scas aas and push push lock and mov pop xchg push daa jnp movsb inc int3 fcomi jecxz fistp sahf mov push aad xor std pusha lock inc inc jae jae push out fsub adc push inc in out jb cwtl lods dec bound lds push or mov inc mov mov push push mov push mov pop pop mov adc jno aad in add ret es jle push pop ds dec mov lods (bad) in xchg dec sbb fcoml ss jo aad cli int3 pop mov or ljmp frstor ljmp pop inc in mov jnp xchg test pop repnz repz jo dec xor leave ljmp push sub sub pop test lahf sub addl and mov pop rcrl mov jae cmp cmp hlt outsb int3 cmpsl test mov adc sti lcall sarl mov ljmp xlat into fucom mov and mov or inc aad sbb adc sbb scas cmp mov pushf test pop popw sub lcall adc (bad) fst mov shr xor sbb pop lods popa or mov add imul mov ja xor xchg inc out mov lcall subl and jns mov cli test add das rolb (bad) push sti adc xchg imul xchg fxch inc pop out pop cmp mov fiadd into loopne (bad) in inc lock shrb push scas out test and inc popl sbb mov jae xchg lock xor js jo in cmc scas cmpsl movsb jle jbe out mov jle push dec mov in push xchg popf leave mov push cmpsl jge incb pusha lea mov call xor movsb mov in and fnstenv mov or fistl mov pop shl adc addr16 adc lock xchg fidivr bound test mov arpl insl xchg inc movsb sbb test es mov push je adc dec and mov fsub scas fcompl or and push or push mov jmp add add push add in mov and inc xchg pop fistp outsl mov rol insb push stos sbb mov sahf sub jne inc add push sub mov arpl inc and xchg subb jle loopew xchg mov lea mov (bad) fildl lahf hlt loope mov xchg movsl adc movsl xor adc cmp loope xlat fsubs adc clc fdivr xchg arpl add pop cmp lods mov repnz add adc xchg inc xor lcall rcl mov pop adc adc cmp std sub jae jp mov clc add add cli dec xor mov sub mov sub int3 stos and ret adc inc in adc mov dec pop sahf insl mov pop ret mov sbb inc and mov or cmp js je dec daa jns push add xchg movsl xor mov (bad) mov and jb loopne jecxz jge push out es xlat je sahf or fwait mov adc adc aas cmpsb mov and adc xor in cmpsl inc pop mov inc sahf mov mov rcll addr16 loope aas cwtl mov mov push xor and adc dec inc and notl fildll push sbb das mov or mov pop lcall shl jns push leave mov movsl je jge xorl xor jp jmp pop push fs inc addr16 inc xor dec mov pop push sbb testb pavgb (bad) jmp lcall lret push stos xor dec mov jo pop rcrl or or rclb jno mov imul cmp xor lret fimull and mov inc fldenv sbb jno fidiv or addr16 adc dec push cmp (bad) enter jmp mov xchg stos inc jb ret xor add jns add gs xor pop inc mov adc hlt dec xchg test hlt pop and (bad) mov aad jns les (bad) out popa std pusha jecxz dec ds js lods or or xchg ror out add inc out loopne inc mov test test xor fcoms out add cli cmp sub push scas (bad) test and cmpsb push inc inc orl js xor jb lock dec pop push shrl inc pop dec jge stos jmp add dec fistpl adc fwait (bad) jo cmp mov in and inc mov adc lcall pop mov stc xchg sub pop in fsubrs (bad) sbb cmpsl sbbl mov loope loopne les jp push jae jb clc je rorl out mov fsts repz test ja lahf inc mov inc pushf scas xorl and in push xor loopne popa inc stos testb (bad) cmc sbb mov jmp loop push aaa loopne test enter and out (bad) jns jp icebp fistl arpl cs xor or mov push lds mov cli push inc cmp mov das movsl pusha or adc daa or xchg sbb (bad) hlt xor test arpl sti outsb fwait (bad) into cmp aas jp (bad) (bad) cmc call std stos and cmpsb lock xor jp scas in sahf push outsb stc sub iret out mov movsb std ljmp adcl insb inc mov pusha dec pop (bad) mov and sbb xor ss sub mov pop jnp mov xchg pop pop call stos mov pop sbb jg mov pop jae push add mov mov cmc out int rorl cmpl push lds xchg dec sarl mov xor push daa cmp in lods lret imul fist lahf inc mov out jge ljmp data16 (bad) push fnstsw rolb dec out xor jns cmp cmpsb scas ljmp hlt xchg ret and call lock jns es or lcall mov cwtl mov cmpsb insb jp popa clc xchg cmp or es jle aad adc or iret lock ret mov xor sbb je jle idivl jne jle out push push push movsb add sub adc fxam mov inc push insb pop cmp aaa push (bad) lret notl push roll mov mov out mov cmp icebp or lock mov test xchg jle mov cmpsb xchg mov (bad) icebp adc mov fmull idivl adc outsb pushf call jg mov cmpsb test pop pushf push hlt in or stos inc and (bad) xor in mov gs (bad) and adc sarb aam (bad) nop or cmp xchg daa xchg push cmpsb pop jmp jecxz xor imul sarb fdivrs movsl stos jno push mov mov aad pop in jmp pop mov div data16 or lock pop add mov mov sub add inc cli pop or mov pop cld push and cmp push dec fs xchg mov jns cmp cmp movsb icebp shrb or int3 xchg (bad) fidivr stc lods push dec xor ret pop jb stc das mov loopw sbb add adc mov std popa sub fimull sub sub clc pusha cltd jbe sub and loopne pop scas cmc xor push cwtl cmpsb pop sbb cmp cli cmpsl add sbb add fidiv xchg push test shrb imull inc lock fsubs in (bad) cld sub pusha dec adc inc dec div push je cmp xchg popa in scas cli push mov sbb addr16 inc insl sub sbb xor int cmp cwtl ret inc lods test outsl pop add sub sub push insl pushf push ljmp push hlt popa fnstsw bound inc jp addl mov shrb fild sbb loope mov or xchg lock sub in sub fadd rcll mov rcrl (bad) hlt inc enter cmp insl ror and jmp int lret divb repnz or xor dec mov rorl mov test xchg (bad) repz fs daa sbb (bad) sub fimul cmp orps mov and cmp adc xor fstpl enter adc inc imul push push mov add push dec in enter or or sbb mov jne out leave push jl rcr notl cmc rorl and xor mov lcall cmp xor pusha inc stos jg in leave xor cmc lds in stos pop jbe cmp lret xlat jb push jge push iret mov push lea ror cltd in mov mov add pop dec mov fistl es sbbb inc add xor int je cmp jne js pop push out mov test xor dec dec call push mov jo jo std sub and mov gs mov aas or les imul hlt cmp rol cmp dec stos add cmp xor clc cwtl sub scas mov mov fimul insl dec repz push (bad) jne rcr sbb mov push pop pusha cmc leave push imul xor lahf movsl or xchg jbe ds inc fxch or out in and jae push pop push idiv out add mov xchg fwait mov stos inc adc fbstp sahf mov ret mov and push shl pop xchg xchg icebp inc stos xchg or test mov pop loope or xchg inc ljmp inc inc sub sbb out sbb push sti and push scas repz mov dec out test xor jb loopne lods sub mov push mov sbb cmovne sbb insb lret jne pop add cmp and add movsb out aad push mov dec jns jmp mov add push push inc (bad) shll idivb cmp and ds arpl std fcomps jno loop and (bad) into or cltd test insb loop ds mov fcmovnu xor jmp hlt cmp js test imul out cmc insl ret aaa pop fsubl add lcall (bad) repz dec stos xchg adc jns pop sub jle cmp adc mov mov fstp outsl sbb call mov fcmovnbe or enter xor pop neg addr16 xchg lds pop lahf push and lret movsl popa in add mov mov and and fwait cmc stos and push ffree call dec seta or xchg xchg sub iret push lahf pop out push leave (bad) jnp jo,pt lock lock mov ja dec xor inc fldcw lea jnp add and iret popa jg scas mov cs cmp xchg scas sub sbb xchg push push test and adcb add dec add inc xchg js sbb sbbl repnz push outsb xchg sti (bad) sbb cwtl int3 inc jns bound (bad) repz xor mov sub lds mov (bad) cmp add testb push fldl xor mov mov pusha xchg mov jmp jb mov adc mov pop push hlt aad or mov pushf xchg xor enter sub jmp stos adc ficompl pop xchg and pusha cmp jns je out and int out repz mov mov or mov outsb mov clc xchg pusha in sbb mov mov jo out movsl (bad) dec pop ds (bad) call out lea je cmp int3 ljmp aas test inc clc cmp dec cs ds and seta dec test fldenv mov push xor (bad) ss mov movsb (bad) adc loope inc jb int pop inc push movsl les bound xchg mov cmpsb icebp lock insl sbb lret mov mov out je cmp ljmp rcl addr16 das or add rolb hlt sbb lods les sub sbb add pop jge xor jns bound jecxz ret data16 xor pop cli push sub movsl cmp or lcall fucomip inc cmp mov ja je (bad) xor pusha push push add xor inc fsubrp sbb and mov push mov jno mull inc loop mov stc fs jns push into pop xchg fisub in mov scas imul aaa sub and inc (bad) sub (bad) pop clc fwait ret cmp outsb cmp sub sbb or lea out (bad) test push aas sti jle aad int outsl movsb add mov jbe inc scas and dec dec dec mov insl push in cmp or and pop cld and and xchg iret add outsb cmc bound inc inc mov or in jne jnp sub or inc bound ljmp adc xchg ret xlat in repz push sti fsub (bad) sub pop test loop (bad) (bad) dec dec jmp (bad) aam aam loope mov dec mov mov push je and push inc loopne add and or dec add movsb lds repz ret stos or ljmp insl mov mov adc jecxz adc push subl wbinvd lret aad enter pop arpl loope lods inc mov bound iret outsb xor divb lcall outsl gs xor push xchg dec test adc faddp mov cmpsl test add push dec mov mov push clc ds lock pop pop xor push (bad) or mov lods (bad) aas scas (bad) dec shrl mov mov insb jp xor xchg pop pop call pop stos sub xchg mov stos lret (bad) test cmp push mov mov or adc popa sbb out cwtl jle js push xchg es cmpsb mov dec add push jmp mov sub inc sbb jecxz push mov dec mov ljmp and dec insl sbb aam add movsl cmp (bad) not fs xchg jge pop pop mov cld xlat sub pop dec sbb or fldl lcall push add idivb ljmp mov add out push test adc cmpsb pop mov cwtl dec pop jecxz or sub or mov outsb or (bad) popa stos xor cmp push push jo mov and dec xor mov fildl push jb insb ret test jle imul lea mov or push enter xchg lret pop cli sbbl out test pop jge (bad) jecxz,pn lcall imul push mov xchg dec leave push lds cmp lods jne out leave jl add insb jmp mov jle pop jge mov push lret xchg rorb pusha add sbb mov pop fldcw adc fisttp pushf sub stos or dec inc movsb and movsb daa xchg mov shr mov pop fmuls xchg xchg popa add mov adc dec add mov lods clc cmp mov cmp aad in or sbb stos add mov test out ljmp pop xchg cmp jg jmp adc dec mov aam xchg pop dec lds push xchg push insl arpl lds and inc jg mov leave add mov xor and arpl xchg (bad) cs pop imul pop mov cmpsl imul (bad) sbb and std mov mov movsl dec mov mov in shll mov cld mov lds cmpsl mov fistp sub push sbb daa bts pop (bad) std ror call (bad) jge vaddsd pop pusha cld xor push jmp mov mov (bad) inc mov mov mov je dec gs incb xorb cwtl shrl sub in or and mov (bad) jns fsubs mov push jno lock lret leave jb pop xor addr16 aad adc mov iret sbb mov xor popf add dec lods and imul cmc inc adc mov add jle ljmp ret mov dec push movsb in cmpsl sbb (bad) jle pop sub pop fwait movsb sbb cmpsb jle add xor movsl cmp (bad) jb fs jno aad sbb movsl mov (bad) pushf cmovbe rcll in cmpsb mov call gs dec mov xchg lahf push lret lds dec mov mov and nop pop mov lcall mov pop or adc mov pop icebp or sahf movl cmp mov mov adc pop imul push insl xor add jg popf shrb iret dec imul aaa push dec int3 lret mov adc idivb stos mov xchg icebp out jp adc cltd lret xor mov jge int jnp clc or rcr sbb adc lret aam mov (bad) into pop inc outsb (bad) mov loop push jnp pop adc push jae ja int3 and dec or push jb mov fcomp dec push mov repz fsubl icebp sahf cmp leave and test (bad) enter jl jnp jnp fnstsw or add mov icebp in scas or scas jl nop test fistp lds jne cmp xchg push sti pop and mov push jo aam add xchg es cltd push sbb into fwait xchg add popa dec cmp out jmp jp xchg gs es jae rcr mov sbb lds mov fiadd cwtl mov (bad) cmp ss cltd inc sti hlt daa data16 jecxz cld and shrl lods pop dec lods andl adc movsb mov push cs push mov sub xchg xchg sub (bad) push hlt dec scas mov pusha movsl push imul dec jns push outsl push fidivl mov or mov jb xchg insb push pusha add sub mov int3 addr16 test jno jo test mov jne pop bound jbe (bad) pushf jle sarl out rolb adc mov xchg pop test loop sbb adc hlt movsl dec jecxz subl adc in andl lock pop jbe aad dec xor stos loop pop xchg test or mov sbb in push mov in and and push int3 mov fisttpll out push push dec nop and ss xor push sub jae aad mov (bad) sahf fs add push mov lods xchg pusha pushf (bad) divl movsl loop jns sbb xchg das ss and xchg mov leave scas dec dec and or imul xchg ja sub mov test or xor add test out pop lret orl loop test movsb mov inc adc xor clc outsl fldenv pusha test dec mov cli (bad) lret mov adc sbb pop mov dec mov sub lahf adc and mov sub inc (bad) into sub rcll jmp xchg ss mov pop jb fsubr mov push inc jbe fnclex mov jecxz fisubrl inc or adc fsubp inc inc stc in shlb cmp fmull mov out nop inc sbb jne insl enter cvtdq2ps aaa into pusha xchg lods movsl mov inc mov jae iret (bad) cmp push mov lret adc sbb ljmp dec aam cs aaa mov cwtl (bad) mov fs xor leave mov jbe jmp stos or daa cmp (bad) subl pop mov lock mov icebp cmp cwtl imul sbb pop jl adc inc inc inc and cmp call stc in xlat xchg out adc sbb or jmp cmp in sub sbb push add adc dec rorb out mov aas dec lahf rorl and jge das addr16 sbb xor xchg mov cmp hlt xchg mov inc insb lods sub cs stos (bad) cmpsl int aas bound or into (bad) loop lods inc cmp cmp jp jb inc sub and jecxz aam popa xchg stc cs movsl pop hlt push in push push xchg inc dec inc sbb out orl pop pusha jle mov jg push jbe out xor adc cmp outsb pop scas push cmp aaa ljmp dec xlat adcl imul loopne mov adc scas cmp je fs cli sub ljmp in push push fnstsw mov sbb push mov aas sbb movl icebp test (bad) lret fdivrl mov xorl pop adc pop lret mov sub pop daa mov out mov test (bad) mov nopl (bad) int out or push loopne cmp sbb add jl jle les fdivr pop shlb sub cmp stos loopne or cmc in fsubrp or or orl add lret and mov fwait test into mov ljmp and push add dec xlat jge xchg aas inc scas les mov testb test (bad) mov xor int3 mov (bad) (bad) fiaddl mov mov bound mov lds pop sbb mov lret push insb xchg fdivrp shrb cmpsb js mov (bad) push mov inc int xlat push pop lods mov mov cltd subb push stos mov inc inc fsub sub adc pop xchg pop in in test sti jp mov adc xchg inc scas sahf xor ljmp cmpsl mov jmp or adc icebp imul das dec es mull inc fcmovu ss jmp stos add jecxz je xor pop addr16 mov jmp insl inc lea fcmovnu pop pop jbe rorb fcoml lock dec push pop aas fstps stc (bad) out mov cmc and jl mov dec inc inc jb cmp cmpl inc or test fisubrl cmp or or jp ds lds adc xor and cmp jne ds outsb pmaddwd (bad) not rorb jg cmp cli cmpsl mov outsl sbb (bad) fdivl outsb in push aam (bad) das inc inc xchg and sti xchg ja (bad) push out mov or mov movsl add mov inc (bad) push imul into lret fsqrt mov xchg jle nop add cmp test xorl mov xor or idivb xor jo add jle push ss lret icebp push stos cmpl int lahf push mov xor or (bad) sar inc jg popf dec sbb fs jnp push fcmovnu in fwait dec push dec (bad) xor sub sub dec adc in mov and adc insl js ret mov xchg popf jno rcr in cli push jg mov cld mov mov test ljmp and iret push in mov pop repnz cmp rcrl push cmp xchg ret das cmpsl xor add mov shlb fsubl xor dec push lods dec lock mov jbe add test cmp pop adc fnop or push mov mov leave cmc jg idivb pushf push push xchg push mov xchg call leave loopne sub lret mov (bad) out push ds fwait add imul sub add bound mov mov pop repz mov sub adcb mov mov sub jb xchg push jae std ret xchg pop push leave adc cli push dec push sbb push in add pop test int cmp leave pushf scas dec push or int3 xor xchg adc arpl (bad) mov mov ljmp pop xchg (bad) mov mov mov negl inc pop lahf sbb mov dec or shll into push ds sarb adc insl sti adc or lret inc lock fsubl cmp addr16 mov out mov mov or jbe cmp sbb and xor add push cli or pop pop mov dec stos dec jae aam aaa sub push mov lret pop int3 or jnp into dec adc punpckhdq cli scas lea cmp jnp jbe test lret dec sub ret push pushf sahf (bad) mov inc jecxz mov cmp push xchg mov xchg (bad) cli and inc cmp xor mov (bad) (bad) icebp lcall loope dec scas repz in (bad) pop mov inc push repz add ret popf or fsubs xor (bad) les (bad) repnz imul data16 and sub iret scas push mov outsl pop mov sbb aad iret (bad) jg pop and jne insb sbb xor sbb fisttpl push push ja stc jnp and push push pusha jne ss inc movsl pushf stos fs push out fs enter aaa jmp data16 or push and pop jne loop sbb jmp xchg je jne sti aam inc mov pop cmpsl pop insb lds add mov (bad) fcompl jle sub cmp sub shrd fsts lods dec fsubrs pop adc jecxz inc out jne or mov mov sbb movsb (bad) and (bad) pushf (bad) test push mov and mov fistpll les and cwtl add popf sub inc inc xchg mov push jo lea mov in xchg inc mov repz push pop mov cmp pop movsl xchg sbb push add xchg push inc pop movsl sbb aam outsl popf aam cmpsl call and adc pop std outsb ret push cli xchg mov fcmovnb add cmp lods xchg ret mov push sub das (bad) inc sbb out out pop (bad) leave add mov lahf add call push push sub adc push cmp push (bad) mov xor lcall or shr das outsl cmp cmp jl jp xchg repz jg call psrlw scas mov push fidivrl or ljmp loopne or stos cmp inc or lret lods fisttp xor adc inc imul lock fstl mov dec adc call xchg in add int add shrl cwtl pop sarb push push test add mov dec mov xor add xchg movsb sbb xchg add inc loop dec or pop adc les inc cmpl stos int es iret mov and pop roll dec xor pop aas enter repnz xchg (bad) (bad) xchg aaa cld mov or in dec jnp push and lahf popa and lret inc ret mov adc lret push pop call loop push test mov mov mov mov out or sbb cmpsb add outsl xor jge jg jno push test (bad) insl jns aas pop in inc jno mov xor dec adc out stos lock inc inc or or shrl or pinsrw les (bad) outsb loopne push push xchg cmc cmpsb pop sub xchg jecxz jg sbb lahf push out insl ds shrl jb mov mov fstpt or and pop push fistpll adcl test jp sbb punpckldq cwtl sbb xchg jp jecxz hlt dec mov pop loop mov cmpsl sti imul pop js enter push insb sub jbe xchg xor mov aad gs inc test sbb inc aad js imul adc jae add test adc popa inc sub or dec push int3 xchg cld pop or ja mov call xor sbb in out add push aaa js dec xchg sarb fwait and and bound ja push xchg xor push fcmovnbe insb dec xchg daa and imul sub stos nop jae and daa pop dec or sbb fidivl addl subl cwtl jae ja ja nop out (bad) shrb sub jmp mov lds and daa mov cmp xchg inc xlat out cli adc into or insl xor ljmp addl xor mov imul repnz mov ja scas (bad) mov fnsave pop dec movb cmc out or adc add (bad) jg pop fscale xor pushf test call xchg lds mov xor jnp add pop stc ja dec sub or mov les scas hlt dec adc push lret mov outsb jb lods mov xchg jecxz sarb push (bad) into jmp ss cli push call xor mov call push mov jae cld faddl lret stos ss rcr adc push rcll xor sub mov ds pop out push mov push inc sbb fisubr cmc inc shrl (bad) mov jb xrelease cmp cmpsb push push test or addr16 ljmp rcrl nop mov xchg psubb jno ja sbb sub add and or mov loopne stos loope xor pop imul (bad) icebp pusha inc jp pop dec xlat (bad) mov scas add xchg jecxz ret popa or test nop sbbl (bad) enter sbb lret scas out jg repnz sub jg,pn and hlt and es popf dec or pop jg mov out ja (bad) and mov xchg pop enter inc data16 xor dec mov imul xlat dec leave mov (bad) stc xchg loope (bad) cmc sbb addb js mov mov ss sub mov into mov in jl lret jp gs xor in xor push jnp mov test fbld xorb movsl negb xchg mov movsl enter cli outsb aad lret jbe sbb vpinsrw outsl outsl sub push and sub test test int clc xchg push insb fmul or data16 pop mov xchg pop fldenv enter nop (bad) xchg jg cmp mov insl dec push rcl push loopne push in sbb js leave es xchg dec sahf call movl nop (bad) mov dec add adc inc xor sub mov or xlat das test or les fs mov mov xchg arpl or (bad) loopne pop mov adc cltd outsl xchg ljmp nop sub sub mov push cmpsl pop jnp dec and add (bad) adc jb popa sub cmp mov lea repz jno (bad) mov xchg push add shrb out arpl jnp lcall minps inc outsl pusha jnp pushf aad mov adc mov out hlt lods out lahf mov fistpll pop sbb add xchg xor (bad) mov add (bad) add popa cwtl je or mov mov in sub cmp aam mov mov pop push lahf pop cmc xchg xor mov cmc and mov mov xor aam push cmp inc in adc ja sub cwtl loop cmpb aaa mov fwait insl test mov cs mov lret insl sbb divl in jecxz or dec arpl daa pop add ljmp jno loop sbb mov cld adc out cmc jmp cmp cmpsb (bad) xor sub je mov jne pop int3 loopne hlt adc adc lahf sub out orl loope adc sub cmp lahf and mov adc mov lret test rclb push movsl (bad) cmp inc in (bad) mov ljmp mov xor mov pushf adc jmp cmp jne test jl popf repz loop mov lret (bad) jmp out or mov cmp fnstsw out xorl in inc adc dec xor cmp lock and shrb dec xchg jle out shrb push or cmp adc movsb (bad) addr16 insl push mov pop jbe pusha fcompl rorl add mov mov xor xor fsubl outsb pop cmc out xor pop lods push nop pop fsubrp jle rcl jp cmpsb into call cli add popa enter jbe clc cwtl add push dec int inc push je pop inc xchg sbb cmp mov mov cs test cmpsl sbb cmp or or mov add push das inc pop add sarb xchg sahf dec mov jecxz out xchg stos xchg int3 addr16 out ljmp (bad) imul mov mov lods inc call or push sub data16 push mov mov out inc cmp push push (bad) jmp xchg clc xor pmovmskb mov ss sbb pusha std test sbb push sahf movzbl test jl dec in outsl sahf cltd dec fstl pop mov fcompl pop stos dec xor sbb mov out (bad) pop dec mov sub push mov lods test cld lods inc test popf jo notl dec call mov jno iret jge cmpsl es stos outsl gs adc jns add pop pusha out or mov or out mov dec and dec (bad) mov sub cmpsl xchg xor (bad) mov sub jb daa mov add and jnp leave lahf pusha mov sti sub rcll pop push jno (bad) lret mov addr16 mov cmpsb fwait push fmul ja sbb ljmp insl mov (bad) cwtl repz mov push jle (bad) mov xchg mov leave jg lds xor xchg aam call mov ss mov addr16 jbe icebp int3 pop cmp dec mov ljmp pop mov inc cmp xchg inc pop dec cmpsl adc (bad) ja (bad) lods or inc outsl push stc imul adc xchg orl iret cmc lcall sahf add out adc jns (bad) xlat aam mov fnstsw jae es mov xchg data16 and les lret pop movsl enter cs into sbb jp xchg ss ret in cmp test lds ficomp shll inc mov aad std pop test leave push dec bnd jne and add xor sar jge stos and imul xchg test lds sub imul inc sub mov mov loope cmpl push sti ljmp sbb xor cld or lods repz sub cli test and push jnp pop mov (bad) jns out imul inc mov fwait addr16 test mov cmpsb and and sbb (bad) xor adc pushf aad fsubl or cs test lret cld jecxz stos lret pop inc push inc call lahf mov (bad) hlt sarl int dec or imull pop inc pusha addr16 add fcompl add jle ret cld in push push call mov sbb cmpsb test pushf lock sbb nop push sub or (bad) rorb (bad) scas pop pop (bad) xor ret lods mov in gs xchg fistl pusha push or jl jmp das add or mov ja sbb pop into cmc (bad) mov js and fdivrl inc lods mov xchg ja inc out (bad) out enter dec xor or insb enter js sub inc test int3 push insb cld pop mov fdivr xor adc ffreep rcll imul pop sub add push jmp cmp sbb cmp insl xor popf xchg loopne orl mov xchg scas movsl add sahf scas aam sbb (bad) cmp rcrb adc sbb sub into incl int3 cmp mov sub in fist push cwtl jle into pop ja (bad) mov test daa push cli shl jnp repnz in push inc and in ljmp stos seto push sbb mov dec jg cmp stos dec sbb inc cmpl lock in pop mov jg,pn push cltd data16 xchg out dec ret aam mov jne lahf mov imul pop fwait scas insl jmp adc lret ficoml dec jno mov rcl push imul pop sarb lret into mov push xchg mov sbb push popf incl les push scas es mov mov jbe pop js xchg gs mov scas cmc in sbb (bad) incb adc xchg (bad) jmp xchg es mov sub mov stc nop inc sahf clc and scas ja lods jae xlat dec inc push xor xor pusha push jle pop int xchg andl adc pop fldt imul xchg or xchg dec dec (bad) arpl dec cli xchg pop push aas sti pop jge or sbb xlat in mov out fldt ss and cmpsl cmp dec jecxz mov push and and mov pop jae aaa in sub inc int push out jge and ret int dec dec and sbb adc fwait mov mov leave rolb in pop xchg adc and loop gs aam sbb andl sbb out sub data16 cli cmp sbb negb push ret pushf pop and jge cmp lock mov mov hlt jge push push sarl adc aaa add and mov mov sub fdivr jae mov lcall jmp dec cli cmc add loope and fdivr and incb sub inc sbb sarl mov inc pop push (bad) aad inc xchg shl inc cs mov ss lret push stos pop lahf sub lea movsbl jge xchg in shlb hlt jle sbb mov iret (bad) push call std jp push mov fwait sub shl inc das ret fcmovbe inc lret (bad) cmpsl and (bad) int3 sub stos sbb pop leave outsl addr16 xor or mov mov add mov mov paddb inc add das cmp fisttp icebp imul imul loopne push insb or mov push pusha ret lahf mov dec xorb sub cwtl jl xchg (bad) cmp adc push cmp ja jno enter adc mov inc lret mov pop pop lcall push (bad) movsb push fcomps mov and addl xor aas add jp jp cltd stos out mov mov insb inc stc int cmp in insb es xchg jo mov adcl (bad) jle pop hlt (bad) outsb lret add int3 pop and loopne cmc xchg adc cmp push mov jne shlb addr16 es pop xchg idivb push fstl cltd leave icebp stc push dec dec dec sbb std sub jne mov jae insl and or jle loop and lcall sbb test cwtl push jo rcr pop add cmpsb pop xor xor cmpsl pop pusha sbb roll xchg rolb cltd sbb divb test pop add popf jp sub jp mov mov aad dec cmpsl fist icebp adc aad ret jmp stos out and add mov add out test std ficom jne pop call icebp aas fmulp test jge and out jb cld sbb adc dec pop mov push pop ljmp cvtps2pd mov iret and fiaddl ret and jns xchg imul or xor adcl mov lods mov mov test cmp inc (bad) xchg fisttp inc (bad) roll dec cmp arpl (bad) out fdivrp xor fsubrs adc stos pop pop rcr jae jae sbb test (bad) jns outsl popf cmp fucomip leave shrl push push inc cld aad mov inc (bad) into jmp sub jl cmp ds push cmp add imul lret fcoml sub xor mov sbb and jno xchg (bad) or jns push pop outsl mov mov push mov cmp dec movswl add repnz fisttpl and mov (bad) repnz mov int xor xchg pushf je (bad) mov imul jae out popf fcmovne aas mov sub repnz pop add inc rol push (bad) mov fist cmp fmull inc fs mov call outsb ficompl cmp aas sbb lods out ja xor mov jl mov lret sub cmp (bad) add cmp scas test cli repnz dec lahf pop insl inc jnp push adc divb and in repz xchg (bad) test add sub lock loope je and pop xchg mov jecxz push pop roll bound dec dec call dec fwait push insb mov and mov pop pusha (bad) dec dec mov lods xor or lods rcr mov pop dec mov cs add leave test mov xor stos cmp cmp cltd jns push test lret jns movsl inc sub (bad) dec add lahf sub mov xor jmp out dec out cmpsb repnz (bad) call pusha in sbb adc fstps outsl jle das cmp daa ljmp xor sarl fidiv xchg sbb sub xchg xchg jne or xchg mov dec add push nop or out cmp xchg sub jle imulb jno hlt mov lds daa sarl cmp or and jne dec sbb fdivrl add stc pushf sbb jb xorl push fmull sar jmp iret in imulb push jg push (bad) xor outsl ret enter dec xchg lret push or cmpsl addr16 aaa sub loop or ret lods enter add sbb ljmp repz mov outsl inc jecxz and pop shl popa mov push xor jl sub enter sarl push leave aad pop shrl mov jne leave or cld mov dec out mov movsl dec aas mov and aas rorb mov mov sub out push (bad) aam jno out clc call (bad) fsubrl aas sahf or push mov out iret pop sub dec stos shll dec xchg clc mov adc xchg xchg cmp clc cwtl js pop das push mov xor negl adc lods cmc jno dec gs rcrl jne or stos jns mov les pop cli (bad) loop jb cmc inc mov jge pop jbe pop jo mov (bad) mov mov dec out fmulp sbb jp cmp sbb adc pop lea fldl sbb push mov inc mov fcmovne push mov ficoml sub clc ljmp test ret leave push mov mov mov pushl push repnz daa (bad) push ds fs pop mov and insb mov fcompl add ja xchg xchg sbb mov xor jmp jl xchg jb inc mov aaa fwait (bad) push bound jno xchg sbb or push cltd push mov xor mov mov je pop or shlb xchg sub mov ret ret ret cmp mov xor stc int jp les scas or sti mov push sbb inc ja add test mov lds aas pmulhw shrb rolb fbld lods mov push dec js int or mov and fist or jb cmp fisub rolb rorl (bad) jge mov lcall jg repnz push stc jno decb imul cmp mov insl mov nop sbb jl in lcall pop dec (bad) jge add or jbe mov outsl adc pop imul mov fdivr jbe push and sbb xor out mov pop ss pushf (bad) bound test jo int mov xorb add sti push mov ret loope sarb sub cmp aam int3 imull mov std pop dec sti fild cwtl pop mov mov adc push pop lret mov popf enter lret pushf jne mov push push pop or icebp mov ss mov fsts stos push outsb repnz hlt jae repnz xchg jmp imul inc cmp dec sbb push add xorl push xchg push sbb imul adc push pushf or (bad) nop mov adc into push sub daa lahf cltd scas cmp out lods jecxz xchg sti sti xchg and mov add cs xor scas mov or lret ja bound (bad) btc stos aas in pop cld mov mov pop (bad) pop add adc dec test scas lcall sub pop pop negl paddw jbe aas cltd dec lret scas or add inc notb mov cmp ficoml outsb bound ljmp lahf mov movsl push fisubl sti in popa stos lea test sub loope lods mov mov cmpsl jo mov in (bad) jbe sbb pop inc mov jo mov add pop loope fs iret push adcl jno andl adc cmp cld jl inc ret les int cmp stos xor sbb aam jge sbbl sbb (bad) fidivrl xchg sbb dec sub inc inc xchg (bad) gs xlat icebp sub or sbb leave dec jecxz add xchg xor mov mov inc jb clc rcrb or sub stos adc test ljmp add cmp and cmp iret pop pop in fmulp adc std out lahf add cmp cmpsl mov (bad) (bad) cli inc or out mov mov adc leave scas pop lods lea lret sub in push jmp cs enter insb int3 adc ljmp jmp ds mov pushl cld (bad) xlat insb (bad) stos (bad) imul arpl pusha jae xor outsl fcmovne inc xchg jmp in push les lock fidiv adc (bad) sub sbb test lds (bad) mov fnsave cmp in (bad) sub push xchg mov jae push (bad) in jne enter test inc ds inc out stc loope mov cmp les les adc add mov insl aaa jmp jl pusha jno and xor dec test and push loopne fldl mov sbb ret (bad) mov jg mov inc gs shlb adc xor cs js and or popa jne int dec lret or inc jp cli add or cwtl mov pushf sbb mov not std cmp aaa scas out cwtl xchg adc mov pop or stc notb jmp addr16 xchg les pop mov jle or push inc cmp test test mov jns inc out test push out pop xchg call nop pop dec out sbbb cmp addr16 int jecxz das jae pusha mov popf lock lret add add add xchg scas ror cmp std and es lea jae mov out mov pop movsb pop iret inc xor les arpl cli sub lahf in mov pusha adc repnz and mov lock decb push lods cmp xlat subb jp dec nop repnz dec dec pop ss call in sahf jnp sbb das imul (bad) push scas mov mov xor dec add jbe fistp enter repz mov aaa and pop test xor cwtl iret push data16 mov mov aas (bad) fcom test xor (bad) sub imulb rolb inc fisttpl cmpsl lcall lret adc outsl mov adc bound lret test mov jnp mov test ficoml add pop jmp adc mov popl sub in testl pop ror add jnp insb fisubr push add push pop push push adc xchg stos nop lahf ret mov dec xor lods movsl pop lea popf xchg add ret cld add inc jp mov das pop js xor pop cli pop pop inc fcoms push add mov outsb aas mov lea dec xor (bad) out cmp sbb sub ds mov jg mov sbb adc out mov cltd or imulb xor jb cmp loope add add pop xchg loopne call test xchg shrb adc stos mov pop out fldt arpl jg outsb inc imul pop dec xchg cmpsb mov jb push daa rolb mul sub pop lods mov pop (bad) cmp xchg outsl xor sbb xchg inc std loop addr16 movsl div daa adc xor xor dec cmpsl dec pop ret imul add mov push test add xchg mov mov pop dec scas xchg xor repz add inc ficoml lea std sub movsb jl hlt push mov pushl scas ljmp pushf cmpsb out mov jno xor or lods jg jg mov ds adc sarl movb jne inc mov pop mov cmp add jne add cmp icebp les loopne movl xor mov add mov ja inc inc (bad) loope je pop push pop push fstpt xorl dec (bad) pop jns and mov adc mov mov mov sbb mov or and insl mov insl cli insl nop (bad) jecxz dec xor mov (bad) cmp inc lcall xor add and cmc sbb movsb pop cmp dec add iret inc push xor mov in adc push fist fcmovne push adc dec dec imul (bad) outsl mov push icebp in jne test add adc xorb js hlt inc lods cmpsl rol out lods fildl rorb xor dec sub fcompl push data16 lods (bad) in test jp push dec push movsl adc adc pop rclb test popa xor push dec cmp ret lahf imul dec cmpsl mov inc xchg sbb pop push mov lcall xchg das cmp pop adc and pop cmpsl mov lds insb jnp outsl mov inc sbb sub in int3 mov push (bad) sti fdivrl addr16 jno in and cmp fsubrp and loop cwtl fcompl mov sbb add adc add pop dec cs test inc ljmp cmp xchg hlt jae mov jecxz adc or mov das mov mov mov push mov ret fist inc sub jp mov outsb lea fimul test pop mov jns push sbbl adc jge and add mov jb mov xchg adc pop sti xor iret popa outsb rclb mov inc (bad) jecxz jns test lock push push lcall neg adc imul fnstenv lret stc push pusha outsb pop js pop or inc popa sbb addl mul xlat fdivp sbb fstpt imul lret jp cmp mov movl nop into pop push lds pop pop pop enter or pop adc push push mov into movsl out mov sbb xchg push or jge push in fbld popa xor or xor mov lea mov push cmp lods stc dec out adc or imul fisub test cli or mov xchg test push enter popa jp sti dec inc dec fmul and cmp (bad) jae adc xor or cmc fisubrl mov push cmp hlt outsl popa jb xor push aaa push mov lret pop and push push cmp ret dec subl outsb sbb mov sahf and xorl cmp jae sbbb outsb cmp mov popa and test outsl xor sbb mov xor pop cmp mov mov or pushf shl mov cmpsb mov int3 lret push in xlat std lahf int3 mov mov jae popf jl pop sbb mov scas lds jnp jo push add jbe data16 (bad) mov xchg gs ffree call cwtl or pop sub push pop jnp cmp test cmpsb inc xchg mov imul cmp scas dec xchg pop fcoml jnp (bad) es add mov or in pop and push or pusha xchg inc dec rclb fs push jp sahf sub adc insb or insb jmp stos mov pusha movsb pavgw sbbl adc pop (bad) lret fildl daa loop in pop popf jmp movsb xchg xchg xchg leave jbe outsb pop test sub mov pop mov addr16 scas mov xlat add mov and leave push cmp adc gs xlat dec lcall scas cld je sub dec orb mov inc cmp (bad) loope lock cmp lret and cmp aas cld adc cltd mov addr16 aaa orl pop into loop xchg insl test cmp arpl jl pop lahf jp cmpsb cmpsb pop or jb data16 rorl ficomp lea sbb inc outsb dec sub mov rorl inc mov lcall and and xchg rcr add sbb sbb mov cltd clc mov xor mov xchg je out push aad (bad) stos xor cmp adc int add sub inc ret pop push fyl2x ja bound fiaddl cwtl das ret (bad) and mov insb pop adc ja mov outsb cmp xchg loopne fnstsw shlb lcall mov sub iret push lock mov aas outsb inc pop (bad) xor dec sub sub mov pop mov cmp and sub mov lds faddl movsl outsl repz fcomps mov dec and (bad) lret jbe mov enter adc ss rorb nop xchg (bad) mov popf jle stos sti xor (bad) mov fcompl sbb lods test pop jnp cltd test and mov dec and pop pop add clc popf xchg testl mov in or lcall fwait jne push mov hlt cmpsl and inc nop mov jno out testb push mov xlat xchg push pop jb mov add or out jle imul nop repz mov idivb inc jecxz imul pop mov adc aam lds sarb cmp cltd out cli insb (bad) sbb cmpsl xchg insb sarb pop sbb mov and jns (bad) movsb aad lods ljmp sub jp xlat je mov inc mov mov fs fist ljmp jle push mov push add mov fwait movsl mov dec xchg mov pop mov mov mov mov mov mov clc das nop xchg mov adcb sub xor cmp in mov add insl cmpsl adc jl jo in aaa fcomp mov dec rcrl adc hlt bound lods jns sub add or daa aas push mov adc xor sub (bad) shr dec mov jle cmpsb ja jg mov bound fildl mov (bad) push xchg outsb jp inc stos mov inc ficompl jnp stc and and fnstsw xchg cltd in and popa jne sti repnz dec pop jg xor or (bad) or out inc and xchg sbb or pop sub cmp mov add jecxz test adc stc cmpsl jnp dec ss adc lods test stc or xor cld pop icebp push (bad) aaa add clc jle dec push push inc jmp jb mov dec loope adc mov mov lds cwtl mov inc out dec pop mov lret adc repnz outsb movsl sti push pop cmp dec fstps test mov incb shrl fs cmp push add adc add cmp ret xchg cmp pop in mov inc cmpsb ljmp mov lds andb imulb mov mov inc out push int cld pop jecxz test outsl je lret pop xchg hlt adc outsl loop cltd mov add (bad) in xchg pusha jle in cmpsl mov mov scas xchg jge push dec scas ja adc mov inc jns add add mov in pop sub cs xchg mov push in sbb mov inc add adc int3 ret in jo (bad) push gs pushf or enter push cmp fidivl push xchg aam es pop cltd xchg (bad) (bad) ja dec push into or mov rcrl jnp inc dec (bad) push inc xor push in pop fwait inc mov xor add test mov popl fidivr pop push push fistpl fildll mov mov push sbb les xor in loope sub sbb xchg in xor in pcmpeqb jecxz push cli inc push ljmp pop shrb dec push inc call aaa xor (bad) mull push push lcall mov out cmp pop addl pop xchg imull dec lahf mov fldenv loop add fnstcw adc lods pushf inc mov iret es icebp mov adc cmp fs andnps scas pop cmpsb gs push lcall cmp icebp cmp mov pop hlt (bad) fist imul call inc addr16 addr16 int3 mov stos cmp pop inc jg rcll adc dec insb idivb iret inc outsl jnp adc hlt xor inc fdivl pop sarl xor push jbe imul mov mov inc addb xchg or lock xor jmp add fsubrs inc adc adc bound ja out fwait movb jns adc push cmp imul call imulb or lock enter les pop sub xchg inc int es push xor cltd cmpsl fs dec adc pusha fld mov add shrl out test setle outsl dec (bad) mov ljmp icebp (bad) pop pop push in loop stc adc rclb popf inc or addr16 in mov inc jb fildl xor pushf ja dec cmp addr16 cmc xlat leave imul sti mov stc add icebp add insb lret sarl adc aaa xlat push push xchg shrb mov jbe adc and loop loope mov pop repz mov jo inc mov mov cmp lock jp scas imul and pop or sbb dec sub pop push fwait in xor imul and stos mov cmp enter mov inc (bad) stc loopne pop mov ss cmp mov and pusha in pop fcomi ficompl sub adc loop mov shrb xor jmp jno stc pop sbb rorl adc and sarb je pop in or daa in cmpsl push add xchg sub pop cmp pop pop cmpsb mov add sub adc dec bound sbb adc xorl adc pop xchg inc pop mov or lds movsb xchg mov inc gs popf and mov inc adc lahf xorl lea mov out mov lods aad sub rolb mov xor push add jmp push add add insb pop pusha andl and das or loopne xchg mov lds (bad) ficomp pop hlt fadd mov nop xchg (bad) out (bad) mov cmp inc mov lahf fcomps jp (bad) pop lahf mov jmp pop add sbb scas xchg gs sarb pushf jp sbb inc loopne push pop mov pop stos ljmp repz cmp fimul (bad) sbbl hlt sbbb dec jno push jns jbe in test and jl jns mov mov hlt outsl mov cwtl orl je out push in bound fsubl ss sub cmp repz push cmp std hlt in ret stos icebp aam mov mov call jae,pt cmpsb sbbl movsb lcall mov dec sub xchg je jge pop loopne es jae mov pop push ret add fist xor jecxz ljmp repnz popa lock lea sub (bad) enter mov push out xchg int pop leave ret js es (bad) xor rol loope push sub cltd arpl dec enter mov mov lret fistpll xchg mov into adc sbb imul adc shrl pop data16 ret jp cwtl sub out xchg subl fild mov mov cld pop stc (bad) movsb dec arpl or push pop push daa rcrl test cmp pop adc ljmp mov repnz pop ss lods test sbbl push mov adc pop jle dec and iret dec xor jns pop mov mov xchg sbb in repz insl aam jae into sbb xchg pop psubd mov mov stc je clc jmp andl out cmp push inc dec cmp lcall jp fstpl js sub dec jle bound repz outsb mov mov mov mov add xor neg push imul adc cmp pop clc fs sbb inc cmp push mov xchg scas sbb and dec icebp jno scas push dec xor pop das fdivrl xchg fs lea mov cmp rorb inc sub and ret push pop into lret in into arpl jb mov daa scas mov fbstp cmp or push daa in jg (bad) cmpsb xor sub xor sub arpl ret mov orb and js sub (bad) enter cs sahf setae dec and out test in aas push out pusha mov neg vmwrite mov lea movsb mov cmp ja pop into fwait sbb mov rorb or out insl ret inc inc sub iret pop pop xchg stos loopne popf or mov pop mov mov aaa mov sub xor adc bound loope aaa mov frstor popa insb sub movsb sub xchg ds add aad shl dec jbe pusha jb xor je lock add sub push (bad) out ret jo adc pop fnstenvs int3 pop cmpsl pop lret ret (bad) dec in clc inc fucomp push mov pop adc popa nop adc adc mov pop mov adc xor rcll je inc iret test mov sub or pop (bad) mov dec popa mov dec mov leave lds xchg nop xchg andl aam xchg addl mov aad movsb lcall mov nop in jp push push or fwait in xchg mov sub pop adc xor cmpsl loopne icebp mov fcoml or sbb or mov adc mov sub jne sbb ret stc js mov xorl xchg push clc mov adc pop adc es iret sahf je orl rcl ret pop inc mov xchg pop push push add les int3 mov idivl lret (bad) mov (bad) (bad) adc sti mov pop fwait mov pusha mov push (bad) iret inc imul outsb out or (bad) (bad) dec mov fisttpl push or push push and pop outsb adc movsb and add sahf mov test fsubrl (bad) jb in jae inc out jo mov test sub sbb mov inc (bad) stc xchg jecxz sbb sbb mov lea jno stos adc aaa mov xchg mov stos das push cltd fimull js mov (bad) xor movsb xchg push push mov push fwait or push push inc dec cmp or adc or pusha pop rolb pop popa mov scas mov movsl shrb scas mov pop sbb lods jo sbb test and repz mov pop sbb out insl inc or mov (bad) mov adc rcll pop sub out adc inc aas mov pop or mov repnz scas lcall out sbb xorl lods orb pop jo sarb iret (bad) pop lock push fdivs in sti clc test lcall ret xchg test or pop xor pop sub jne (bad) scas pop inc sbb popa (bad) cmc push mov cmp push cmp xchg ret dec pop aad fidiv xor xlat shlb pop pop cmp in jno xor push inc in mov mov adc jno and not js arpl (bad) cmc cli add cmp fisttp popf sub mov jmp cs xchg add lret xor mov push rcl loop cwtl nop jg push add xor xchg stc jmp jg add and xchg mov pusha loope ficomp sti xchg fnstsw jle in push stos mov ret inc or data16 sti aas frstor and mov stos xor pop adc mov xorb mov fmull (bad) fistp js xor add sub div jmp aam jae and xchg pop std test xchg sbb cltd lcall outsl add push roll and mov sub sub mov shll cmp mov test aam fstpl sub mov cwtl dec add dec outsb inc mov icebp daa xlat ret mov les mov jno xchg ss jecxz dec jns add xchg bound je and dec inc mov mov mov (bad) (bad) in popf arpl or mov scas int3 cmp cmpsb cmp adcl jbe lahf add fnstcw push (bad) push jmp push or ret jnp adc lods add push rol sub in aam stos add cs daa test sbb add and out push cmc fdivs lahf pop ljmp xor mov sub adc xchg push mov mov ret and lahf mov lock mov movsb mov divl adc pop movsl scas push cs sbb call xchg mov fisubrl adc add mov repnz ret inc push sbb ret mov push jge mov xchg mov ja sbb insb add push mov imul pop adc in push mov (bad) jns xchg les sub (bad) inc or adc loopne out outsl cmpl or xchg es mov xor cmp sarl mov stos in push leave pop or jb sbb sbb jne das movsb xchg dec or movsl lret push sbb add cld popf jae ret mov addr16 dec cmp dec mov outsb mov mov mov jae inc pusha enter xchg fmull stos inc repnz jl cmp fild test fnsave (bad) outsb cmp mov fildl mov jnp orl in hlt in lock ds shrl orl inc xor les out inc pop cmp lcall pop sbb jne ret leave aas mov pmullw and mov lret jle std mov mov int3 xchg mov pop aad fimull lret dec push and movsl jb lret pop imul jmp (bad) pmulhw and pop mov in or movsl das jp movsl xchg pop mov jae sbb mov pop push testb mov push mov cmc inc outsl loop clc add xchg push (bad) movsb and (bad) insl xor test and inc or stos (bad) movsl cltd test stos jg adc jmp xchg xchg nop nop fisttpl sbbl jbe xchg add test pop mov ror push or or movsl inc cld fldenv test add je addr16 or les int3 scas mov pop push mov or sbb ret or fwait or (bad) adc mov fistp fistp ds sub loope mov add jne mov dec adc mov dec stos mov mov mov and sub sbb repnz leave mov inc hlt inc cmpsb and (bad) repz mov lea icebp mov inc ss push call adc cltd inc data16 xchg ds out push jge pop mov mov loopne fsubrs jge inc inc out add mov icebp jno dec mov stos and xor adc (bad) std aaa push mov pop leave les loopne push imul into aaa dec mov xlat xor mov mov adc add push adc dec popf pop (bad) jb fmuls popf leave cmpsl inc enter push cmp inc aad adc lods stos pop outsb mov das inc scas xchg pop sub es cmp push shrl and gs jbe mov popf mov loopne scas imul mov cmp adc clc int push insl jae lea loope (bad) roll inc cmp mov das mov adc addr16 xlat xor arpl lods shlb lahf divl xor xchg mov jmp daa cmp fwait cmpb les test leave sub xchg clc outsl mov scas add (bad) (bad) xor adc outsb (bad) mov scas xchg push and call adc xor popf push mov mov int3 loope (bad) pushf lret enter (bad) mov mov jmp insb mov cwtl aam push scas movsb jl aas call addr16 rorb mov push icebp cld sub mov mov (bad) ja sbb (bad) icebp data16 add dec addr16 mov adc (bad) popf aam add aam loope mov push or cli test jp sti mov test test or mov xor xchg int3 call xchg sub push fidivl xchg add mov js mov adc mov sbb fs add mov inc inc fldt xchg int3 inc adc loop cmp pop xlat mov orb pop out pop gs mov sbb and ja test movsl jno and sub in out aas cmp cwtl mov lret stos les cmpsb mov or (bad) shll mov dec xor dec jae test movups cld sub stos mov cs xchg xchg arpl out fdivrl stos (bad) or (bad) jo ja lock movsl and or or popf mov dec mov rcll int data16 or sbb cmp repz imul fyl2x popa add jge push dec scas sbbl insb test jne shll pop std xchg fcompl or pop adc popa sbb jg mov data16 lcall xchg xchg jnp mov sub in outsl imul outsl lret test popf fwait movsl push xor sub stc pop imul fildl mov daa mov in enter mov mov imul cld pop adc aam jmp out cltd push cmpsl std mov test or cli js mov cs dec hlt mov xchg negl pop jo ret in mov mov sbb sbb enter rorl or pop sti fcompp jg jmp mov daa xchg rcrb out xor cmp lds cwtl dec xchg xchg (bad) aad mov outsb inc push push (bad) dec in (bad) pushf and rcrb leave mov iret pop bound test mov loopne jne push mov rol inc lods imul pop jno (bad) sti and clts xchg aam dec adc inc into pop cmc int fwait mov sbb lret insl pop std ss insb shrb aad fild inc stc cs cwtl push scas mov push inc mov dec test xchg outsb jno xor andb fisubl mov cmp or out jp rorl fcoms loope mov add mov ljmp orl push xor mov mov or roll sahf pop lds aaa bnd sub cmp cwtl jle jecxz adc xchg pop sub xchg or sub fistl je jae stos or (bad) faddl test fmuls fdivs inc aam xchg lock gs (bad) sahf xchg nop xchg vmovdqa stos xor pusha mov xor add adc cmpsb pop (bad) outsb mov jae (bad) mov int3 mov test sti jbe mov push jb leave cmc test ljmp dec les frstor test push xlat shlb or dec imul fbstp jl pop pop mov jge call test loop cmp inc jp pop or push in movsl call adc movsb sub mov jmp in movsl psubq (bad) in sti iret ja mov xchg push fwait or jge dec inc ss xchg orl xchg fnstenv lods inc mov and test mov mov sub sub mov (bad) mov xor std fcmovu fdivr sbb cmpsl mov add movsl pop test in or mov les movsl pushf or jns jecxz in mov pop data16 xlat cmp mov inc sub ficompl (bad) mov pop push pop setbe adc cmc (bad) xchg (bad) fcos fcom stos mov or mov xchg xor scas xor adc rorb jmp sti (bad) jp sub sub jmp and repnz mov sub fnop clc in cmp xlat or cmpsl cld mov dec into push jnp adc push imul inc sbb xor cs dec mov lods xchg lock push dec lods aas cmpsl sub fcoms pop push sub fdivrl dec insl ljmp sub fildll out movsl lahf stos dec push (bad) xchg xchg scas mov jp sbb enter cmp inc and test or pop xor push push push mov out or shrb pop movsb subl push sub jl scas out fisubrl or cmp mov push es mov das incl fdivs xchg xor push jg xlat jae stos outsl pushf scas lods cmp xchg mov sbb add jge add cmp dec sbb dec jnp test jle jbe or sbb pop or movsb dec xchg jecxz cmp mov xchg xor icebp addr16 cmpsb fwait (bad) lea jle mov and sub cld out mov xlat (bad) push je inc xor inc test ss cmc jmp inc orl sbb push daa les xchg icebp popf jbe jnp fadd std movsl (bad) aam pusha test add movsl js or popf xchg js fsubrp pop mov (bad) out xchg sti xchg test fs pop ds ret add mov sbb fxch lods xor push mov loop xor pop cmp jo xor jp mov sub fisubrl pop push inc cmp movsb das fs fmuls pushl pop add cmpsl popa mov aad popa mov fsts in push xchg test fidivr shr jbe insb add adc loopne enter mov insl mov and popa push adc stc movsb insl scas fisttp cld addr16 jecxz dec sub aad test push jecxz mov aam sbb dec add inc popa inc jnp sti insb dec jle cmpb jne adc xchg dec dec (bad) sarb pop out dec lret mov leave je and out int pop sbb push inc out out xchg mov cmp sub cli pop test ljmp jno xchg aad jmp cmpsl in int inc mov je jae mov out jmp into lcall push mov xchg movsb insb sub sbb aaa xor add mov sbb mov fidivr push dec adc mov insb fsubp cltd push adc inc xor jns or push push push (bad) pusha loopne lods mov push add cmc js movsb out and shl fs mov stos push inc sub popa or xchg shr ret stc scas sarb loope adc jno cs fwait outsb iret inc inc push and andl pop inc pop xchg jmp fwait (bad) xor out push sbb lods sbb mov imul jp mov pop (bad) xor xor les test cli jno and jge lea popf cs icebp cld mov lahf fs out (bad) push or mov outsb addr16 leave xor mov cmpl cmp or inc outsl cltd sbb ja clc shr cmp arpl jg inc jmp dec jns imul rcr mov rcrb cld insl jmp dec in mov ljmp aad pop fadds push idivl push repnz jg rcl xor and jl jne jns insl cld push ds shrb adc xorb nop popl mov (bad) aaa xchg pushw add jg test sbb pop and xor add push push data16 mov lcall fucomi lods ja jo outsb xor mov push jnp jns jne sbb gs ficompl pusha in int stos add cmp and xor jecxz xor mov adc and nop pop xlat jbe lcall cmp push cwtl mov push movl es inc mov adc mov out (bad) push sbb push cmpsl aad fmul out cltd andl push xchg fs mov lret fidivr jecxz mov outsl lea xor sbb imul add add clc aam decb jo adc mov cld (bad) sub mov stc popa dec sub cmp es call jae outsb in xchg and jge mov js pop in xchg pop add fidiv scas sahf push mov (bad) (bad) jbe cltd sbb out xchg fistl (bad) jle mov mov mov int lcall lcall popf mov mov leave lock xor hlt out cmp fsubr out mov je rol ds inc and cltd int lcall ja insb mov mov lock lods iret dec inc dec in es inc insl or cli adc jno dec mov lcall mov int3 nop push sub mov imul push pop test xor sub outsb cltd movb xor sbb sub pop mov adc jo sub das hlt mov jo andl shr adc stc pop mov insb jae mov int (bad) or jnp rcll out popa out jg pop fcmovu popa dec push dec idivl enter (bad) sbb (bad) and pop jnp push (bad) fidiv adc idivl mov and popf xor (bad) xchg lcall mov push in (bad) out scas out sbb cmp push mov rcrb xchg adc dec scas cmpsl and xlat mov sbb gs inc xlat in mov add adcb cmp and pusha or xor add mov mov xchg jl in aas jno xchg fidivr add mov rcr addr16 or mov pop cwtl xchg adc mov mov sbb xchg fldcw mov fucomip (bad) hlt jg std xor icebp orb fsubs inc iret jl and out mov bound clc std jl push imul dec mov adc scas lret inc fcoms fdivrs in bound call data16 aad stos fimull inc orb nop push cmp fwait out mov xor push mov repnz cmpsb sub lds insb (bad) jecxz fwait sbbl push cltd (bad) xor cmp mov dec hlt push inc andl insl pop inc ss sahf mov inc pop aam mov or roll sub loopne adc jg jns or and add inc ret loope adc loop out outsl (bad) push mov sar in shrl and sub or lahf cmp xchg idiv and and js add pop jnp,pn sub mov cli dec add out adc push test xor cmp mov mov push add sbb xor popa pop mov out sub jge mov jge,pt lods mov jecxz nop (bad) fdivrl push push in js aad jo jle push lcall mov int (bad) jae fist jae pop mov aam adc xchg pop sub mov pop lods lock adc lcall nop dec adc add mov lret sbb pop inc sub jg pusha fildll pop or rclb stos cltd (bad) add into xchg fnsave lret adc mov enter mov push cmpsb rep gs sub push cmpsb enter repnz inc xchg inc xor arpl sbb (bad) ja lret gs inc dec pop xchg lock sarl mov inc negl js pop dec int jg addr16 jne push movsl (bad) or cmova outsb or xorb (bad) jmp (bad) arpl imul jo pusha jb push mov mov hlt rol je pop inc dec mov inc and pop lret cmpsl adc push fidivl push sahf push sub xchg mov (bad) repnz subb cltd inc lcall insl stos out xor pop out inc fsubr inc jp pop cld jmp sti or pop inc test addr16 and mov nop jmp shrb mov out or roll inc or (bad) test mov sub mov add and in dec negb sbb and inc dec (bad) dec fld loop loopne loopne,pn xchg xor push addb pop fmulp das push cmc inc sub xchg xchg stos mov cli mov gs push inc push adc jmp and bound mov pop movsb push out cltd jbe inc inc cmp and les lcall inc (bad) push stos call cmpl jno in add jecxz lret inc aad mov decb jge mov push negl mov jg push xchg scas inc (bad) mov push fcomp xor ss fcomps flds scas inc sbb inc pop aaa mov cmp loope or pushf or push test aad adc xchg add dec cmp mov mov cmp (bad) sub fistpl inc push mov insb int3 or add sbb fwait lds iret mov dec xchg mov cmp push fcompl jg or cmp (bad) mov cltd xor add add in adcb sete les loope xchg pop sar mov iret sbb cli mov jo cmp xchg or lods cmp in mov mov call scas repnz adc enter movsl ja arpl add leave xchg in lods mov aam pusha sbb outsb mov pop adc push push adc pop (bad) dec dec pusha loope push cmp lods xor loopne mov fsubl mov scas push aaa jg (bad) lahf in fwait out jo in and xor sbb adc rcrl movsl cli cltd or xchg rorl adc fnstsw add mov pop or hlt stc mov mov pop rep addr16 xor (bad) pop adc fimul pusha mov cmp mov push fisttpl ljmp and test in push lret stos repz (bad) or punpcklbw jo mov loope sbb or mov (bad) cwtl loope ss icebp lods loope (bad) hlt fstl adc orb enter pop sbb fldenv dec jns cmp jbe mov (bad) jne fsts and inc dec xor pop movsl lods ja ds mov push xchg in mov add nop inc insb cmpl outsl cmpsb add pop sahf jnp or std cmpsb xor movb and add and cmp clc adc dec push push aaa in fistpll popw and mov mov inc es cmpl add and movsb mov sub lcall aad sbb mov and enter jmp and (bad) pusha xchg lds jbe mov sbb aas mov clc fbld cs test mov arpl mov mov jmp test xor test out lock add dec xor or adc dec jne pop stos enter lret popa jl cli lods and in xchg xor in shll adc (bad) xor cld shlb fs jp sbb mov mov mov int mov insb xchg lds adc xchg inc (bad) xrstor cmp mov (bad) sub mov mov aas scas into lock in xor mov sahf cltd in int3 ficom lods kmovb cmp call sub mov add cltd clc push jno loope stos xor lahf mov or icebp frstpm(287 mov jno dec rorl xor mov xor ss loopne (bad) div sub int3 mov shlb je xor imul test cmp imul stc fsubrs cmpsl xor lods out mov cmpsb mov pop test lods mov daa imul push add jo call mov int3 into into sahf mov cmp sub lods bound in dec xchg inc pop nop xorb mov aad imul (bad) (bad) adc mov movsb inc (bad) icebp jo pop or daa xchg in arpl out fisttpl inc jge aas loop mov jmp jmp rcrl icebp pop push pop fidivl xchg leave cli cmpsl stos aam mov bound mov jmp dec adc call xor outsb outsl (bad) popf dec sbbb xchg mov mov xor sbb dec out jle or stos inc or cwtl bound xor sub imul mov sahf jb popf movsl xchg call push nop out scas xchg outsl pop (bad) and inc test jno daa jns std pop and push inc out mov out in jne jle outsb fcoml insl inc jg xchg aaa out adc (bad) dec mov sub sub call stc adc xchg or lret lods xchg push or int mov push pop ljmp inc test sbb sbb and imul fadds movsl jl pop adc mov dec pmuludq sbb cmc pop movsl sbb mov and pop inc push mov jno jge xorl mov sub repnz jge push jbe sets ja jo into pop jns inc sub test aas mov dec xchg sbb icebp dec sbb dec sbb cltd loop sbb push aaa add mov xchg cld jecxz push dec inc mov flds popa jp mov shr xchg scas popf and add push mov cmp add jecxz push mov dec adc cmp aas in mov adc repz push push fcompl cwtl lock cli dec movsl lods sti sub adc stc (bad) xor jbe mov mov bound push sbb pop call push bound inc popa sub int3 cltd loopne outsb int cmpsb sbb inc dec jb enter out add call jo sbb mov lds add jmp add clc (bad) rol jle xchg sub ss sti jae cmp jns or sub int hlt jbe push popf into outsl xor or adc cltd xor add inc lods inc mov pop aaa mov test outsb lret dec adc mov (bad) sti mov out lods inc push addr16 fs shl ffree nop loop hlt in test mov cwtl repz add or out (bad) lahf pop adc ljmp sar xlat fwait outsl shlb ds hlt pop jg inc mov icebp test sbb sub inc jns nop and sbb xchg dec mov fistpl mov out inc push mov rcr adc pop mov mov and and and push and mov push or sti sbb sub movnti imul or add mov pop push int3 and xor xor or and insb fdivs shlb adc stos popf and cmc fiaddl sti push inc pop pop out rcrb lds test dec (bad) xor pusha push lahf push cli adc loope mov pop pop je jg mov ja push out or cmp add cmp dec lea fidiv pop imull test sbb stos mov mov icebp sar push cmpsb xchg pop push scas rorl pop xor rorl sbb pop insb and mov mov jae test jae sti sub popf int3 mov dec jmp push adc insb pop mov jbe addr16 (bad) push sbb pop jbe mov xchg add mov add in je stos hlt ror push push and sbb mov mov ret jne sub dec ljmp mov call hlt inc sub cmp enter fwait cmp test (bad) cmp mov aad lds mov lret out and arpl les pop sbb fnop ss insb mov mov xchg clc ret mov rorl loope pop jp jecxz push inc idiv mov inc push pop jl jbe sbb fistpl int pop test adc cmp mov outsl in lods iret lods pop pop stos fwait mov ret push icebp or sub xorl push outsb aam fcoml mov mov movsb jge pop aas dec les incl xchg cvttps2pi ds inc lret jp pusha ret mov inc out and jle sti or scas hlt mov int3 dec imul incb js jb push gs movsl inc push sub jecxz xchg dec loop popa mov add test fnsave push (bad) mov pop mov cli or roll pusha dec divb push test jns xor xchg out xor xchg lret (bad) daa adc fldenv pop push jecxz repnz mov lahf xor push pop xor pop les lcall lods je cli inc movsb ss mov lock jge adc inc (bad) jg lret repz int3 xchg hlt outsl lock pop je and int jecxz outsl cld pop pop lods das xchg xor je lea imul rcrl or push jl pop xor dec mov xchg mov out mov cmp mov jg sti adc xchg clc dec sti push mov mov subb pop pop int rorl sbb jp lds jns jns lods dec adc aam jbe lcall (bad) sbb ret ja insl and jg ficomp int3 dec mov nop loop cmpsb in fiaddl (bad) into addl stos cmpsl jnp mov pop xchg lret push push and dec test call or dec mov mov sub pop or sbb mov fptan xor sarl ljmp fwait inc repz push aad ds xor in scas push jmp (bad) jno fdivrp cwtl xor stc out fsts inc xchg cmp sub and mov stc ljmp popf jbe push mov mov or into inc rolb jmp push cs stos jl push mov stc or fcmovbe popa test push (bad) pop jge popf mov das jge xor adc push popf loop push cmp lods out sarl jmp dec dec ficomp shll dec xor je jl into cwtl jl sahf add cmp inc sub push sub dec push mov jg push push cmp jecxz rcrb sub cwtl jmp mov mov sub xorb cmp outsb cwtl fsubl pop inc xchg mov es cmp dec cmp inc dec push in stos cmp imul cmp imul (bad) push adc xlat lcall aaa aaa cmp adc or xchg jo cli push jno sahf push pop das loop mov scas inc adc mov xlat jle inc cmc xchg adc push call dec addl push push lahf pop aaa inc pop inc jecxz push xor pop add (bad) shr jno dec xchg and lods test xor popa (bad) les lret scas loopne cmpsl mov imul mull gs adc (bad) cmp shr stos jnp push mov (bad) int3 xchg cmpsl lcall jg loop push push xlat sbb bound inc pop push cmp pushf loopne jle fs fs cli fildll jl push std (bad) out stos pop sbb or jb xor pop push test call push jno addl push push je cwtl fcompl mov arpl push mov jno test cmp stos mov je je or out jge cmp push int3 daa jae pop outsl adc dec and xorl ss aam sub lock xor ret pusha bound mov lea dec sbb sbb pop and stc jp pop lods pop add ret push mov and mov xchg mov imul xor loop inc leave lret outsl jle fwait mov lcall sub xchg add nop adc or scas and sarb stos leave jp out or addl (bad) test pushf and (bad) adc pcmpeqb mov cmp scas jle and jnp mov sbb sub sahf divb push jecxz pop sub ret inc push sti aaa mov in mov scas test scas sarb dec clc in mov push loopne pushf cmpsl push add xlat push out inc into addr16 dec adc mull sbb es dec push fldt cld inc fcomps mov test lds sub cmpsb mov in sub mov sbb (bad) sti enter ds push gs dec adc into cwtl stc fisttp push jecxz dec fiadd dec aas roll insb popa xor enter sarb cltd jns add inc movb inc clc inc lds sub sub xchg pop ljmp iret push lahf and lahf (bad) aaa or inc lret push dec insl pushf lock push mov or push mov mov jno xchg inc jl cs add loope mov int sbb iret jecxz enter or (bad) adc jno out push and (bad) dec aaa adc lods stos es push sub lret andl add lea or ljmp andl jb in loopne int3 dec pop addr16 test lods mov mov imul pop mov loopne in mov out pop mov mov jbe cmp stc insl or inc dec sub sbb push add pop loope ljmp cli adc fsubrl lret movb out xor dec aad push dec cmp out fs mov hlt jge mov out jns int3 cs pop cmp hlt mov push adc mov hlt std fbstp gs dec sbb out je jmp cwtl (bad) mov lods xor xchg adc pop sub push gs sbb jecxz cwtl pop push add out test cmpsl fcomip data16 mov popa dec iret insb sbb inc outsl gs adc movsl adc pushf lock popf and test fdivp or leave bound fsubrl cmpsb pop add pop inc loope fstl out mov mov pop and movsb jne inc dec shll loope insl inc cmpsl cs ss pop jnp dec fimul pop inc (bad) push das push cmp mov das push mov sti adc adc xor ss out into addr16 aad add mov into sbb (bad) repz cmpsb imul jmp sub arpl xchg xor jo pop sarb fwait (bad) cmp xor rorb push pop jp pop xchg gs fcmovnb adc aaa push (bad) stos add pop add rcl out sbb test std push or stos push in ja js pop dec (bad) aaa int3 andl scas cmp (bad) push scas xor xor add fsts ss aas inc cmc mov sub bound dec mov das jmp sbb addr16 push dec push out sbb mov fstpt mov adc insb (bad) sbb xchg ret pop jp mov sahf test dec fidivl mov sbb mov jl jg and popl rcl loopne adc out pop xchg jno jge mov and dec pop mov test jae sahf mov mov movsb xlat insl fiaddl jecxz lret dec cmp inc mov push inc fidiv orl in mov xorl dec cs aad mov fdivs cmp loope leave mov dec scas cltd in inc jle pushf xchg jmp sbb xchg push outsb push mov aam mov in fwait or mov lods mov sti cmp iret cmpsl jp pop fiadd pop sti ficoml loope mov jmp jae lahf push adc (bad) and jge das dec xchg in enter (bad) dec in adcl or ficom test or roll orb hlt daa pusha xchg pop aad mov dec sbb jnp pop (bad) jbe push dec jne add or sbb in test (bad) mov insl hlt add out adc or es add mov cmpsb icebp dec cld inc nop lret (bad) cli pop in rclb in push jno mov outsb adc mov mov and mov lret repz setl sbb stos mov push ret fistpl fcoml test fs mov into js fwait int3 mov sahf fildl arpl push mov jp pop pop xchg aas (bad) loopne icebp xchg ja mov mov leave lods pop jecxz ret mov mov (bad) jns pushf fnstcw push mov dec mov stc cmc fdivrp lds mov xchg jg dec dec jecxz lds adc iret mov pop mov cmpsb repz jb lds fisubr test mov and aam jl inc mov scas add insl add inc jno mov (bad) xchg enter adc negl mov insl es insb fistpl add and push jg icebp inc stos jne rolb cmpsb imul loope and fmuls iret sub push mov mov pop imul xor scas imul das xchg push out testb adc aad jecxz pop sbb test icebp mov imul sub adc xchg pop xchg cmpsl jo xor adc loope mov push orl xor mov adc lock xchg dec (bad) stos out inc mov sbb pop xchg add popa dec pop sub mov fcoms repnz stos (bad) or repnz fwait jg and jb (bad) movsl test cmp push nop repz xor rol aas jo fsubl push ret (bad) push fidiv ret insl (bad) cli loope je repnz add adc push loopne push add lahf push pop lahf jge mov mov cmp cwtl aad mov or mov (bad) cwtl jl (bad) idivl dec inc and lret pusha lds (bad) adc out daa push out lret into adc (bad) mov imul push inc add gs enter inc add fstpl pop jbe xchg xor ret pop push mov push enter pop addr16 cmp insl pop mov dec and sbb cmp and or (bad) ds sub out int jb dec std push fdivl movsl insl icebp pop mov sbb mov negl push mul adc test mov ret imul cmp (bad) cmpsl xor push lret lods std cs in pop test push in fmull push and popf sub sbb loopne fs jbe sub and test cmp inc cmp movsb adc add or ds jge movsb imul cltd dec push rorb adc or hlt push cmp jne fist (bad) dec sub repz sbb or add mov hlt inc inc xor sub in or outsl mov sarl clc mov insb cltd aam jp mov stos loop pop push lock or and xor jo pop pop add add out cmc sbb outsl sbb push dec ret dec js sbb orb imul mov fidivr cmp cmp shr mov push adc jbe dec jnp shrb insl stos sbb fildl inc mov (bad) je jg mov fmuls ret or add jg movsl addr16 push cmpsl addl int cld push leave cmc (bad) push mov aad in cltd (bad) jno pop cmp push cs mov adc and popf push jecxz sub adc outsl ja lods lret int dec xchg iret enter add cmp or dec push jecxz lea push notb dec repz test pop fs aam icebp mov push mov in cmp sahf outsb sbb adc and in ds pop mov xchg imul add lock jo cmp test in adc push ja pop push adc pop jno sti lock sti push mov ret loop bound stos push out lret mov cmp adc adc iret scas dec mov icebp pop cmp push loop adc jno sbb out add adc xchg mov sbb stos (bad) xor sarb adc aam gs mov dec cmp mov fldenv jo xchg adcl jl pop std inc out test out out fwait push mov int mov ret inc mov fildll push push js orb mov fisubl popa test push push push pop push in pushf jmp and sti push pop mov out clc idivb and aam xchg pop leave cwtl and data16 inc shlb inc or stc mov lret cmp lds into mov jecxz mov int dec lods xor or pop push add les add jbe xchg mov imul ja dec rorl mov sbb jns ss dec push fild mov add inc adcb out mov (bad) icebp fldcw popf lods enter addr16 push sub inc push mov mov mov jb cmc stos inc sub sbb jmp mov movsb inc mov pop call dec mov sub movsb mov lods jne scas fdivr pop cmp cmp xchg aad adc ret inc pop ds inc xor cs sahf adc ret fwait stos mov mov push pusha adcl mov outsb mov pop rolb pop mov mov lret rorb outsb mov adc add mov push les rorl sbb out mov in adc sub and aad sbb jne push icebp int and scas clc addr16 push das fcoms mov inc inc test sbb inc pop and xchg leave inc lahf add xchg fildll inc inc adc jecxz cmp int sbb loopne (bad) imulb les mov in or mov inc daa ds pop fcomi add push push jle sbb cli sbb push mov pop aaa sbb or scas (bad) dec cmp dec in xlat cmp ss xchg ret jbe jg (bad) push fs xor insl or inc push cmp popa sbb sub test mov pop (bad) mov adc out dec enter fisttpll cmp mov shlb lahf or adcb sbb in dec pop sti inc inc or test sbb mov add out (bad) push mov ss lods add mov dec int sti mov push aam js xchg and fwait dec stc inc pop cmp push xor mov mov repz vaddps add leave jns mov inc sbb pop sub dec and jnp cmp mov cmp jb loopne out mov mov inc repz cmp ja sbb pop mov push lea mov ret fsubs inc mov fs xor pop cmp xor test shlb jns and mov or dec div flds repnz pop pop jne inc mov mov and jmp fstps ja mov shl dec cs push int3 jo (bad) aam (bad) dec fucompp test push and pop mov xor sub sbb ret ljmp fiadd insl fs xchg adc imul scas sbb push add jne ret xchg jmp adc and fildl sarl (bad) jb,pn mov movsb cmp subb push adc or lock cmp xor popl jp jl and inc outsl scas fsubp inc hlt lcall jns jno mov and fs popa dec pop xor xor mov iret test push jmp pop insb call pop push (bad) addr16 int3 dec dec mov fwait das push (bad) jbe adc vmread xlat jl aad cmpsl push mov sarb imul arpl sahf and add outsl pop sbb (bad) jbe sub arpl fstpt loop lret movsl mov lret mov mov jecxz hlt mov cli lods fwait bound cli xchg pop scas xor aaa in scas scas shll sub jecxz fild mov jecxz sub pop mov xchg add ret std fldt jns ja lahf push scas xchg aad cmpsb jmp ss sbb xor dec aas pop cmp or or sub or xchg push inc mov jp pushl scas cmc mov add icebp ss call mov imul jne add stc mov movsb je add loopne lea jmp outsl sti orl lds shld and mov pop shrb out xorl dec (bad) lret push clc mov adc push mov roll (bad) pop outsb push ret mov pop push xchg mov jno dec dec lods arpl add cmp insl adc aad xchg sbb movsb mov jb cli xor inc xor ret cmp cmp test adc mov pop loope daa adc mov les std add jecxz mov push shlb aas (bad) arpl mov push xchg cmp xor push sbb jne adc leave jle cmpsl xchg dec dec push arpl mov mov push clc stc pop outsl int3 in jbe outsb (bad) dec orb pop mov fsubl mov mov and xor bound xlat jle into loop xchg mov sahf or (bad) mov mov fisubl pop hlt cmc roll sbb pop sti es pop (bad) mov xchg popf add push out lods popa inc xor addr16 lahf pop inc push insl not pop sbb push adc fwait repnz std pop lahf push adc in xchg jns orb sub (bad) push ljmp inc sub mov gs dec ret ror add roll sub stc jb xchg shlb cli inc lds enter jmp jnp std sub movsl xchg les mov cmp fldenv outsb adc jae jbe xor mov jno inc mov ret mov xor lock push rorb cmpsl xchg repz sub inc dec shl dec int pop fild mov loop adc notl cs aam and push inc jo rcrb stos mov sub mov addr16 subl jl roll cmp adc mov sub mov (bad) jecxz icebp je stos (bad) insb jg loop out outsb xor out imul out test dec popa fiaddl mov shlb fadd cmp mov andl lahf jmp stos fildl xchg adc call jg outsl ja pop sub scas xor in add push jb cmp inc call and mov hlt and lahf cmp or (bad) arpl adc push jnp ss fs mov in cmp dec or mov addr16 add ja and ret mov dec mov cmp push mov jns lret push add mov push int3 dec cmp lret and (bad) test inc (bad) mov adc dec dec cmc stos cmpsl mov jmp and shrb out sbb call adc xor add and push push iret cmpsl xchg push xlat sub out (bad) lret dec sbb dec shrb adcl loopne xchg sbbl call mov sub imul cmpsb je add fs push std mov iret pushf push add xor call xor add and and sbb mov repnz push add mov mov jae sbb test mov or pop cmp leave int3 push es imul push cli dec jne add push xchg inc add loope xchg adc sbb sbb jmp xchg jg outsl pop add pop pop rcll loop js push add push movsb lret fnstsw movsb out in mov (bad) cmovp cmpsb adc mov lret xchg mov or sbb adc mov mov (bad) xor sbb cmc shlb test inc xchg jmp dec dec pop and cmp add imulb js mov push lds adc movsl scas dec lcall paddusb in nop cli andl test imul cwtl pop xor movsb test arpl adc xchg xchg dec negb xor ljmp shrl and mov movsl sbb in push cmpsl jno mov pop lods jecxz mov xchg lret cltd push aas push pop dec outsb push xchg dec sbb and xchg mov mov addr16 cmc and bnd push xchg hlt inc inc divb out pop (bad) je add iret fwait mov inc roll cmp leave test fnstcw dec push hlt mov add ja add jnp nop bound shll mov mov out push and adc dec scas add and int3 rol pop pop into jge call dec mov xchg cmp and popa jb and or jge fwait stos adc int std xlat xchg fdivl movsb mov cmc dec in icebp dec add jmp push movsl or stos cmp mov in out jae lret xlat mov insl lds fwait leave xchg push lock jl cmc add dec mov (bad) mov or jb sbb mov adc or dec mov stos mov aam cwtl fdivl xchg test mov and iret mov mov cmp (bad) fadds cltd push sub and in cs insb popa sbb rep cmp stos out out cmp inc mov fisttp imul stc in jno icebp or mov mov out xchg scas cs inc add arpl jmp stos cmp lahf dec adcb sub push fwait and inc mov outsl test adc inc fsubrp jl test stos (bad) into popf mov dec cmp lods sti dec fwait lock push cmpsl xchg mov les out loopne jle shlb lcall mov inc mov inc cmp addb addr16 lahf mov xor lods std add adc and aas sub inc dec in inc ljmp ljmp xor ss cmp or cmpsl push sbb orl mov lods enter or xchg icebp lds ds pushf xor dec xor mov (bad) lret test pushf jmp dec mov cmp ss sub add push fsubp dec xchg cwtl (bad) xor sbb mov loop push enter sbb jecxz mov add and gs xchg fcoml sub mov aam fldcw mov xchg xor (bad) or pop (bad) mov outsb mov push push mov sub mov cwtl sub (bad) rcrl sub lea lea cwtl xchg test lods int3 arpl das in cmp ds sbb cld dec lea cld sub (bad) pusha fwait mov xor sub insl movsl stos (bad) jno cmpsl imul lret mov repnz cmc push and pop add pop repnz mov fcoms mov loop mov jbe push mov pop jg rcr sub adc scas daa cld dec das mov push hlt dec and (bad) or sbb push aam dec movsb aad int mov and inc sahf mov jns stos icebp cs roll sbb flds add aam movsl mov sub mov dec jnp insl je in add ja (bad) cmp add cmp cmp iret or int3 sarb shrl jb dec ljmp shrb add xchg (bad) loopne (bad) int3 jb fimul jo (bad) sbb xor push mov jp pop pusha (bad) lret (bad) ljmp lret rcrb scas pop inc sti lahf cwtl (bad) ss mov subl sub mov and jo (bad) adc stos adc rol add (bad) pop test mov pop push vpunpckhqdq mov out ret inc jmp or and push je or push xchg adc lahf mov jb sub lcall cs jg jmp mov ror je xor scas adc jne ss adc iret mov outsw enter xor mov in stos jge fcmovb pop xchg out leave push xchg and mov xchg cmp adc jmp leave dec std or inc adc mov das out sub mov and fidivr push jne pop iret js pop add repnz pop test cmpsl movsl jo jmp adc int sub sub test xchg fisttpll xchg mov les mov pushf add pop sti mov call pop or fstl (bad) adc pop sub mov (bad) inc jnp and xchg addr16 mov inc mov xchg jo sub cmc adc aam jecxz (bad) testl aaa lcall sbbl inc cwtl push rorb les fcomps xor ljmp js pusha sub loopne cwtl outsb (bad) jno xchg jo mov jb jmp pushf sbb sbb push shll mov or loope mov sbb mov ret adc ljmp icebp push jo adc cmp xchg push mov pop xlat dec jp mov or inc inc cwtl lock hlt and ficom test fist scas ljmp divps test xlat sbb (bad) mov insl adc sbb pop add in xchg insb pop imul pop lods sub cmc jns xor dec push inc sbb movl pop js out mov cmp xlat movsl jno scas add jnp pop pop sub add lahf pop rol xor xor dec mov cmpsb sbb popf cmp push (bad) xor imul test sbb mov xor sub and aad loopne hlt mov outsl scas mov mov mov inc stc cmp pusha fwait subl in cmp mov std imull sub push sub adc aaa (bad) mov je in xchg cmp loop int3 test imul ret aas cltd mov lock jmp fdivrs cmpsb xchg or sbb testl mov sti mov std and xlat inc pop sbb push es adc fsubp jns and (bad) or (bad) push movsb and sahf adc xchg call xchg lahf or cmp pop adc add ror int3 mov (bad) (bad) or jge jge sub push pop iret jo and out dec out movl (bad) in scas or ljmp loope shlb rolb add movsl cmp je mov repz aad xor (bad) mov push jge scas add ret mov xor aad testb fmulp or dec std xchg pop mov movsb vpunpcklqdq sbb mov mov push (bad) pop mov pop fidivrl push dec daa xchg notl (bad) jne adc jmp outsl pop push push jno jge loop pop lahf mov repnz sbb sarb pop or test xchg in lret sahf repz or int fisubrl mov mov sbb push or cld push mov mov int3 mov mov pop xlat xchg cli loopne (bad) popa jmp mov in fucom cmp fnstenv push dec out fadds cmp adc data16 dec or jns cli add sub mov test jmp xchg hlt loope sti dec mov cmpsl icebp jne or mov sub mov outsl mov outsl nop jl pop push aas cmovge sti int3 pop pop mov imul enter dec fcomps rcll (bad) jmp jne jmp sbb cmpsb scas push xlat mov stos stos (bad) inc mov xchg ds sub mov dec inc jb (bad) movsb test sbb pop int3 add push inc fs push int3 sub inc xlat push sahf adc push adc ret mov sub hlt lods int3 in lods inc (bad) add sbb cwtl xor ret push mov push negl push repz or fsub js popf ffree push test insb frndint add out mov or ficom pop pop mov or dec cmp add adc call insb jg movsb movsb adc mov push fisubl mov or cmp jg dec dec push inc mov lds gs cmpsb inc and cld sub out repnz clc lcall repz cli mov push mov aam pop cmpsb ss neg mov cmp pop push add scas es mov hlt (bad) mov cwtl cmp jb sbb push pop into mov inc pop enter mov mov (bad) arpl pop xorl or imul nop inc jns push adc das rcr sub and (bad) cmp dec mov push xor rcrb in ret mov leave cwtl lahf inc jo aad popa adc push popf std adc xchg nop lock ret mov dec (bad) or fdivs mov ss jecxz push jmp dec adc or cmp mov lods cwtl push xchg xchg bswap cmp (bad) clc (bad) fidivr cmp fimull jecxz aad push mov add and ret lods ljmp sbb add push addr16 bound roll lea jno sti dec pop adc ss or popf ss insl push mov or (bad) jmp lcall dec jl mov xchg loope js pushf enter adc sbb stos jecxz (bad) jg jo data16 jl es ret leave mulb je jo or mov aaa ljmp (bad) or test (bad) sub and in rsqrtps mov lods outsb jo xor jle xchg push sbb sub fiadd or xchg test mov adc push dec sarb push xor dec sbb stos cli imul or outsl hlt mov add cmp inc lahf and in stos pop fdiv sahf test stos in inc test fnstsw js sbb push mov inc inc out iret xchg adcl add cmpsl xlat movl loop cmp cltd dec cmp movsl cli gs dec test lret mov adc jb pop pop xlat inc mulb pop loop icebp pop xchg fwait xchg clc sbb cld sub mov out popa divl cltd add and fsubrs xor mov mov xlat sbb dec mov dec movsl loop out rorl xor inc pop inc xor stos in shrl aam sub mov dec mov and push sbb dec pop push pusha out jl les xchg push iret push bound dec pusha mulb imul cmc xchg dec rcll sbb mov add add mov fldenv flds xchg fwait test inc push sub mov adc dec jb (bad) sti push xchg or dec push insl cmpsb add xchg es clc sub mov (bad) (bad) push lods (bad) nop out or push push sub inc adc daa jo stos ljmp pusha aam lret popa xchg (bad) mov push into jo push dec sub mov jg jns push adc aam lods aad mov fmul cmp aad pop push cmp jo imul inc dec or xor dec xor test dec jb inc ret inc add daa scas and xor mov jno xor shrb stos icebp add sub int inc lock cli lahf sub xor jae xchg data16 loope addr16 add push fistl xlat setns enter inc inc imul call lea movsb lds or mov leave subb xchg fucom jbe pop sbb (bad) rclb les xor xchg mov jnp push cld (bad) xor and es test in rol out pop sti push cmc jbe testb jmp (bad) mov mov push scas dec xchg dec adc xchg int3 mov cmp cmpsb int jo lea xchg bound push mov push pop add add dec test (bad) std sbb xlat inc std lods inc mov pop sbb dec xor or out mov movsl mov fstpl in push cli jae addr16 mov (bad) loopne sti aad jbe adc cmp mov ret jle mov fmull popf lret (bad) fistl xchg sbb dec inc xchg pop data16 sbb fbstp pop add adc inc aad xchg data16 insb je insl push imul ss xor and jno sub ret and decb insb xor cmp mov mov fmul movb test scas xchg lahf (bad) push or cmc dec add idivl push cli add push mov movsb jmp jecxz nop enter sbb into cmp inc push mov sub mov inc xchg fsubs pop iret push xor add xchg out imul sahf pusha dec mov dec (bad) scas lods or in xchg (bad) stos pop push push test adc push in mov adc push or push and clc mov inc cmpsl cwtl aas jle,pt jge mov and pop mov or lds and cmp jb sub mov (bad) scas imul xor pop mov out loopne push add inc (bad) out xchg pop outsb es sub icebp xchg loop jge mov adc bound je add pop cmp cmc ds sbb sarl mov push test inc inc pop mov stos dec and mov out mov scas fiaddl push adc pop pop aad jle mov sub pop in push jmp movsb lea pop fldenv pop (bad) sbb mov cmp mov movsb push jo,pn mov pushf incl push pop ljmp pop in into mov outsl test stos mov sub sub arpl imul dec jb imul mov jmp enter sbb jmp shl push push pusha xchg jbe enter sbb inc cmp insb andl push sub lock inc push push sbb mov inc lods outsb mov clc pop je les adc mov out mov xor mov (bad) sbb mov lods sbb xor test cmp ds sbb lahf or in push test dec pop (bad) cmpsb out ss mov fdivrp cmp cltd push sub fsts xor (bad) aaa sarb mov xchg or mov enter dec ffree (bad) jnp inc outsl (bad) cs inc into jbe mov sahf stos push fucomi int3 push imul pop pop lahf in xor dec jge push ds cli and xchg fwait push inc in das cli aas movb es xchg jo jbe shrb lcall test mov lret xchg aam mov lods test sub mov rclb loope adc into dec ljmp stc loope dec shr add add jo xor dec adc and jl pop stos push int fwait add (bad) adc popf sbb ja cmp mov xor jp,pt sbb aam cmp (bad) adc pop jl cmp pop and pop push dec pop add (bad) loopne cltd inc cmp or out rcr std insb lock xorb stc test cmp pop loop (bad) movsb cltd ljmp ss xor ret fwait xor lea dec dec loopne cld pop cltd enter aas add call cmp lea or lock fcoml pop mov mov sub les jl popa jg inc test cld std dec cmpsl aad lock sub push pop sbb shrl jge xlat adc je or pop or push and cli stos js cmp mov fnop mov dec xor stos pop and fdivl shrl popl pop cmp mov jmp mov xchg into inc push stos xchg outsb ss jl rclb fcoml es mov lahf cmp mov (bad) ror sbb test mov ljmp add out dec test jne xlat xchg and adc lea fbld insb shll negl repz jns sbb jecxz sti decl shrl xchg insl shr nop das mov mov sbb rcl dec xchg inc jge ljmp int3 mov cmp cmpsb bound push cmp jne mov fsubrs sbb or mov int3 adc jno mov push push insb push pop jbe cmp cmp mov cmc lret jbe xchg je xor cmp mov aam pusha pop (bad) push aaa add addb imul out movsl mov (bad) pop aad push nop mov xchg mov in push or pop cld sub pop pop mov scas aas adc jmp sub or xchg lret pop (bad) mov push sub (bad) cs push shll dec xchg mov xor fidivrl or gs das jecxz fldcw mov loopne jle mov pavgb cwtl lret or repz aas popf mov jo or dec sub add out movsb test sbb sub xchg sbb push mov sbb stos inc aaa jae mov xchg jno mov inc sbb xlat test xchg cs out xor inc aam fwait out out mov imul movsl xchg mov mov xor lret xor les pop jge (bad) inc jb mov out inc lds sub pop mov sahf dec ja movsl xchg pop mov cmpsl out in shr lea fwait (bad) daa rcrb cli or popf xor rol jne inc repz sbb mov insl pop sti mov imul je scas rcl es jg bound and repnz les cmp int mov test jecxz and pop xor pusha xor pop jl mov xchg ret movsl mov xchg daa (bad) xchg pop mov or jge jns sub and stos ss addl push (bad) xchg xchg into lods pop repz (bad) cli daa cmp jle leave andl and pop movsl inc imul xor test cmp and test pop lods or fldcw mov in adc dec (bad) or dec cmp xor (bad) sahf and sbb loopne dec int3 adc (bad) (bad) repz inc ret cmc xor xor dec pop sbb mov push or das fimull adc dec add notb hlt test mov or repnz adc mov push sub lds scas jo sbbb push aam inc jp ljmp addl or xchg (bad) adc stc movsl xchg jno cmp mov adc lret loopne lret mov shll lods pushf rcrl pop dec ret pop aaa push (bad) call loope jmp push repnz cmp cmp pop xlat dec ja (bad) aaa dec test das aad int3 (bad) ja dec jg adc enter int ret dec mov push aam or inc jbe cmp push cmp (bad) sbb rolb jle cmpsb aaa and test dec cli cmc mov loop mov nop or hlt cmp icebp dec pop bound cmpsb pusha fcompl xor add test test loopne out dec and sbb add stc pop fnstsw add or sbb fs dec sbb inc mov and jecxz jg jmp test (bad) sub inc jp cwtl xchg pop popf mov jle subl and out arpl pop test popf cli push ret and out pop int cli xchg lret jmp aad outsl push fwait push jns xchg (bad) jmp sbb test adc inc out adc pop sub jle neg jo test xlat scas insl js je fsubr cmc push xchg aaa add sbb dec mov jb pop jnp std fisubl mov stos pop cmpsb or mov cld jp fdivp sbb hlt add push mov int in inc sub push jle gs fisubr test ja or mov sub jne in movsb mov and xchg imul push jo pop hlt or cmp xchg outsl mov or mov movsl repnz std decb pop or jns test cmp and and mov cltd xchg push xchg inc aas shll in pop sbb dec clc mov lock pop std xchg ljmp (bad) into mov mov mov push xchg ficom std push test imul add cmp add sbb lods dec repnz ret mov push or shrb (bad) fdivl add mov (bad) lock sahf test lret xchg jnp xor imul in mov in mov dec and std pand mov cmpsl adc add mov lock daa shll aaa jns inc ds ret mov and jb sbb hlt or lcall cs jle push sub and bound jb mov xorl mov sub mov lahf pop add sbb inc rorl jg shl sbb push rcll push inc push aam mov loopne inc mov fimul imul pop inc or enter not push (bad) aaa ss adc sahf pop or sub movsl sti and jno test sbb xchg dec pop pop es inc xchg sbb fwait sarb int inc jge rol fsubr xor pop or xchg pop or hlt and xor ret pop pop pop mov dec call adc ss imul inc (bad) fnstsw mov pop sar sbb add int3 pop lods ret pop out adc (bad) sbb aaa jmp jmp (bad) jbe test (bad) lahf cmp pop mov mov or push push andl addl lret adc fs mov jp and (bad) out pop mov pop xorb lods sub adc enter imul xchg mov mov repz dec (bad) and cs xor jle sub movsb test fcmovu add pop leave adc mov and loopne dec stos dec std loop dec scas adc xchg or std lret bound mov cmpl dec push xchg dec and inc stos lods and daa mov (bad) jb adc pushf in nop pop lods mov ret inc jmp push leave ret push sub mov or or in outsl addl mov scas (bad) imul es (bad) loopne push jno stos clc push push lds adc imul test sbb pop mov add divb and lods xor data16 inc lahf xchg out int3 pop call ficompl jecxz (bad) mov sub mov and adc mov and cmp int dec xchg scas push (bad) (bad) mov pop adcb mov sbb out inc push push aam or test ss or (bad) mov ficomp push lods xor imul sub xchg das in xchg dec movaps sub fwait and call cmp mov sarb test mov (bad) loope push subl test xor mov pushf idiv xchg ret or add fmul push cmp (bad) add fnstsw xor mov jmp adc cmpsb or js adc dec xchg cmp lahf sbb fs ss pop pop aaa adc sarl cmp aas lret dec fistl and movl push pop fstl mov cmp xchg sub mov cwtl inc xor test outsl sub call leave loopne mov xor xor js dec sahf sub sub add inc mov pop cld (bad) je inc int3 jp xor inc lret ret mov ss scas ret mov and insb (bad) hlt mov cmc pop aaa jne jmp in stc mov cmpsl movsl inc jno adc out lret mov (bad) (bad) cmpsl jne jl and ret jmp xor sub adc dec scas cmp cmp imul std push cmp fnstsw push pop mov les sub mov fwait loope repz mov fsubl fildll jae mov (bad) arpl stc xchg or mov add (bad) out mov pop cltd test and inc and add push or decl ja pop clc push cli mov les fdivl mov mov int xchg push enter andl adc and ret adc mov sub and sarb jbe movsl xor dec clc sub inc jmp push out fimull int mov daa sti mov or loopne movsl sarl stc mov adc sbb pop pop loope jo xchg mov fldl fucomip jbe push cmpsl data16 jg stc divb add pop inc popa enter insb (bad) jl repnz mov dec push xchg int3 mov jne xor jae outsl testl push test ret add (bad) mov cld inc sbb inc mov add adc push popl and std mov mov lods pop aaa das (bad) popa sahf loop sbb fnstsw js mov pop or push sub rorl scas (bad) lock test lahf popf aas mov shr cwtl cmpsb (bad) cwtl xor ja sbb dec fs out xor push jo inc addr16 sti push insl mov push into jno test stos cli ss mov call push mov repnz mov (bad) notb js cltd orb (bad) pop mov ds mov lcall jg push sti icebp loope aaa jge jbe lock (bad) push and nop icebp test adcl stos out out xor inc dec jno sub stc cltd daa xchg jnp in mov pop or inc sbb jp ljmp mov into sub lcall jle jo mov test into jno daa bnd add push add cmp out dec pushf dec xor pop mov xchg or dec and icebp adc and pop mov dec loop (bad) mov adc or dec out leave xchg into push dec mov xor jo popa lea mov pminsw jp (bad) in (bad) jp mov popa cs pop enter insb imul loope mov ret xorb jmp cmp mov mov repz dec or and movsb inc cmpsl (bad) repz or and lea les in and outsb pop push fstpt lcall (bad) push pop mov (bad) lods mov mov shl repz je dec dec sbb ja jmp ret pop aaa mov mov (bad) and ss add push mov push je sarl mov pop shrb aam mov or pusha scas sar js fisub mov mov add mov mov jle imul inc imull fsub adc lock out std sub out push lret mov push xor leave adc rorb push in cli pop mov push das popl outsl inc lea xlat mov mov dec es popf lret insl sar andl ljmp (bad) adc jns and int3 mov popa dec cmpsb mov xor fisttp jbe mov and into xlat xchg mov jns sbb aam jns pop lea push mov repz or test cmpsl xchg es adc imul mov cmp ret test add outsb aad popa lret fldenv cmp lcall cmp pop add popf (bad) in outsl and mov fimul popa mov sub adc int3 push cltd sbbl or fwait bound dec hlt mov push push (bad) rol into and sbb cmp nop out xor push inc pop pop mov out jge pop in fsubs movsb sub je (bad) xor mov sub mov xor pop inc mov inc mov sub sti into (bad) bound lds outsb mov test push inc inc adc scas es xchg shll frstor inc fisub push pop data16 jge pushf lds orb or push mov dec push subb movsb mov lret aas jmp mov arpl popa gs in fsubrs icebp add xchg xor adc out cmp jb push jb inc sbb push jbe xor push and mov inc fadds lock ret rclb imul lea jo movd outsb jl jo mov push xchg jmp push nop cmp lock and cmovae mov das mov xor jg push fsubrs sahf lods arpl jnp shrb ja xchg jns fwait adc lret popf cmpsb jl test sbb cwtl sahf gs cmp es xor inc xchg out mov sbb push pop sub (bad) out cwtl mov fistl xchg cwtl xor out nop mov mov jbe (bad) sbb mov mov jecxz add pop dec loop in fmul add xlat imul mov lahf enter mov repz jno,pn shrl subl pusha push or inc jecxz mov add mov adc sub fildll xlat sahf push (bad) pop inc and iret mov shrl ficomp and icebp pop fidivl dec push xor jns adc jge cmp xchg imulb push add adc push add leave getsec popa mov adc pop cmp xchg or aaa dec pushl mov je sbb sub (bad) clc insl xor sbb sbb push pusha pop outsl or inc sbb adc push adc mov and mov push fwait stos int3 (bad) push stos loop sti gs xor jp out jle xchg mov push xor das fsts test adc adc in lds cmp and std testb mov push pushf std push loope mov jb push ja andb int cvtps2pd test orb and xchg cmpl or and sub data16 adc jl je adc stc dec jg inc bound add push add ljmp out lcall lods sbb iret scas aaa dec stos sub repnz scas loop fistpl xchg xchg xor cmp popa je sub fwait adc sti and in jnp pop inc out das hlt cmp and (bad) out lret add adc inc and cmc lahf xchg popf pusha xor mov addr16 fwait xchg cs loop or push fwait jno adc (bad) (bad) jmp ljmp sbbl aaa les (bad) dec adc fisub jle dec adc popf xchg cmp leave mov mov call lret xlat shrb sbb mov and inc stc fwait xor mov popf dec test (bad) in dec mov test sub push xchg mov and lods xchg test pop nop xor jno jne jp add mov mov pop sti test outsl hlt fistpl es fstl sahf push ret jp shrb imul mov outsb cmc nop in jns sub rcr cmp pop cltd cmp insb lret ret loopne loopne sbb rcrl add jo sahf adc mov je lock fisub movsl addr16 (bad) xor adc pop je push push inc rcrb xchg cmp (bad) fnstsw jae loope jae mov enter jnp jns or or push add daa sub std aas adc or jmp ja cmp or pop mov adc sbb inc pop xor imul inc add (bad) imul int xchg xchg jge pop (bad) fisubl in lods add cmpb dec packssdw inc add pop sub leave mov xlat xchg push mov dec addr16 or push push pop lret mov xor or nop mov mov mov adc sahf cmp sbbb pop sub ds outsl inc or loopne aaa loop lret out es xor out aad sub inc lahf lds cltd pop loopne inc cmp imul fwait push and mov sbb and popa (bad) cmc das cmc and mov call mov sub adc das cltd pop xor repnz push adc div mov pop out xchg cwtl leave das mull jne hlt setae lods mov ret stos pop mov sbb popa dec dec pop sbb mov in mov int3 js xchg out out lea into insl inc in push (bad) sti rorb les (bad) adc (bad) sub lahf push and xchg in cld sbb ja faddl in (bad) shlb cmp cmp popf pop clc jnp sub adc (bad) out xchg or dec fiaddl mov xor cltd fwait push jecxz pop push pusha lret rcr repz jne cmp stos add fsubs cltd or inc (bad) sbb xor (bad) or int sbb mov dec xchg or push arpl (bad) mov (bad) insl ja shlb inc or outsb loop or or lea mov xchg jne sti mov cltd lcall and add dec out or pop clc mov daa mov lds (bad) int3 push xor out scas xchg xchg push mov and push mov sti stos in fidivr jo sti cmc movsb push (bad) cltd insb cs xchg jo popa and jge loope sub lcall xchg sub mov sahf sub movsl stos xabort aas add mov enter in jb inc push lods push loopne mov dec es in cltd add push int mov shll jmp mov enter xchg xchg mov cmpsl cwtl iret push cli xor movsb gs sub es add ss jmp inc inc pop test mov icebp pop cmc xchg jl pushf push je push xchg and outsb cld cwtl jae dec lahf int dec cmp inc jnp sub fidivl stos xchg xchg xchg mov pop mov std imul ret scas adc test inc cld xchg mov imul or call add jg mov dec inc jae ss lock imull stos leave push lahf std in xchg sub cmp test mov cmc sbb sub sub sub push sub test inc inc jecxz (bad) cld les scas pop das cmp fs outsl out dec jbe data16 aad leave mov lds out jg addr16 orb inc ja test jmp add orl movsb inc pushf mov ret inc xchg movsl inc pushf or shrb dec pop fistl ja fdiv (bad) bound cmp icebp cmp fwait and fistpll or inc sub les mov cmpsl pop mov in call bound add inc inc daa and xor mov mov js mov xlat dec add add shlb jne repnz jae sbb pop push xchg lcall insl mov addr16 pop cld dec stc aad mov xor out (bad) and mov cltd push ret fs jns push sub and and add mov lods call aaa mov add stos out jmp dec pushf jg xor lods jno lods clc sbb (bad) fisubl aad hlt adc cli pop push add out jo leave loopne imul pop adc push ret (bad) and lock data16 int mov push in pop pop sbb cwtl leave sub in adc ds js andl jae mov dec and lret lea sbb push pop (bad) stc xor xor das or mov movsl rorl push or mov leave add mov std imul je mov jb test popa mov jns mov sbb or dec sub push mov lds add xchg lods fndisi(8087 inc inc test mov icebp stos mov ret xor xchg lcall inc out test jge adc cmpsl mov fbld mov std (bad) pop mov mov dec sub pop lret push (bad) xor sub das jo dec push xchg fmuls cmp push jne pop push jno hlt fmul or inc fcoml in sub cmc adc adcl cs imul push cmp loopne outsb fidivl mov inc push push add jecxz and push call jp sub xor sbb testl cwtl mov lock in sbb aaa jbe xor int lret and mov xor add or (bad) insl je inc push jle mov or pop or inc in inc test pop inc fildll mov in add repz orl (bad) and int xchg (bad) imul mov sub inc arpl test int mov lock popa hlt inc cmpsb test inc scas cld adc rcrl cmc jl add mov outsb loope repnz leave addl insb jecxz fnop neg mov int sub push pop jecxz jge hlt sbb ljmp std pop cltd daa idivl fimull and adc in cmpsl sbb pop sub jnp in xor mov xor and push push mov sub mov cwtl cld inc and push ror inc scas rclb out scas neg mov push (bad) mov and int3 rol dec mov sarl arpl or jg xchg push out jo dec mov decb scas rcl popf fwait cmpsb push test movsl sti cli (bad) stos mov repz mov add xchg divb lock test mov ret jb or sbb negl cltd xor add jbe add les inc das dec and jle xchg cmpsl or cmp add xchg fwait add (bad) inc add xchg jg rcrb arpl xchg icebp je pop jp xchg mov or fisttpl pop cmpsl loop mov cmc fiaddl sub mov lea and mov cli out test adc dec mov add dec xchg hlt mov push popa and leave repz fsubl movsb mov push xchg in and out jae push (bad) or sar stos sbb mov dec cmp loope cmpsl pop jne xor mov insb xchg test and xor dec cmp jno or add stos or (bad) mov xchg fmull adc mov jmp aam in adc jge or lret push shlb dec test gs aaa add push mov add stos mov call lea hlt push sbb dec sbb lret xor nop and cmpsb imul pop (bad) call fisubrl out (bad) sbb (bad) fstpt or sahf cld mov inc cli cmc sbb xchg mov mov add scas xlat stos test adc push inc ret (bad) or and mov jg adc and cli jmp faddp pushf jecxz leave ds adc pop inc cs mulb jle jp xor iret jg shll mov sub mov shr stos push mov and lret mov jge stc je lret call dec push inc xchg lods push cvtdq2ps js call sbb jo push out cwtl in shrb pusha and sti addr16 xchg mov in cmp inc sbb mov jb cmp cltd lret ljmp ja mov lahf and or pop out mov inc ss and mov pushf add push jl orl xchg add xor cmpsb lods (bad) fucomi jg add imul jae hlt push popa push push pmaddwd (bad) adc fnstenv bound imul sbb pop cli and lods clc fidivl adc add sub lcall (bad) jns mov fstp es xchg mov out scas adc cmp test data16 inc mov mov out dec mov (bad) insl rclb xlat jno movsb pushf rorl lods test mov push mov adc push repz adc repnz mov sbb out pop ljmp les notb xchg mov gs sarl mov adc (bad) lock call push xor aam sbb xor fs sub and jecxz add jle,pt sbb and inc lret loop fadds pop sbb outsb in mov inc lahf inc stc add add xlat sets push insb push jg pop (bad) mov pop push cmp mov lret int3 je stc sub call mov bound push sbb (bad) pop (bad) push dec xchg std xchg lcall cmp pop push inc cli and icebp stos and movsl add bound and (bad) xor add push dec test lcall ret enter jp mov cs xor popw movsb lods nop dec cld cmp sub inc test inc mov ds stos pop sub int adc inc mov pop xor ds push and xchg inc mov and mov jae cmc fst pop and xchg and call push mov ret pop jne xchg inc bound loope test sub mov mov mov aad stos sbb add outsb adc push outsb mov insl xchg imul xchg pop aaa lds cld ror dec sti dec mov (bad) mov pushl or xchg add push xor cmpsb push out out pop push lods adc lock sub jb jb icebp mov mov xchg xlat loopne outsb cmpsb and push movsb setae cmpsb dec out popf push add adc ds push adc adc ss cwtl repz sbb adc cmp insb mov scas ss jmp push cmp xor adc jae int3 sbb cmp subl jmp push fistp lret imul cmc xlat test and add lods ja push xchg out sub daa pusha stc xchg sahf or jl mov shrb pop sbb (bad) cli or leave push rcl dec adc inc fisubl stos xor and or sub mov mov movsb dec pop enter mov fs incb lea into into mov sbb (bad) pop dec adc add mov out cmp aad push inc mov jb cmp mov inc jnp mov mov stos xchg mov xchg sbbl ss add ja adc jb dec test mov mov mov sub xchg and jecxz cmpsb sub aad test punpckhwd ljmp dec push sbb sub loope clc xchg lret and add dec ljmp in pop and jo clc dec and pop es shr hlt cmp adc scas xchg push movsl push (bad) xchg invd mov add mov dec movsl hlt in inc lret test stc into mov pop cmp lods imul xchg (bad) jb (bad) adc pop sub das or (bad) in ret push dec mov pop (bad) loope ljmp xchg rcll or in mov pop sbb jb mov int (bad) mov or rorl mov add lret iret pop jecxz popf mov into sub inc stc and leave leave sub push add jl,pt bound add roll sbb incb in lcall or imul sbb leave fcompl pushf cmp mov adc mov outsl sbb ret dec sub mov sti rcrb mov mov je jle insl rclb xchg shl xchg loop mov (bad) (bad) leave out xor (bad) adc lea icebp ret fucom test mull jo je out or jmp cmp sahf sub sub ljmp push fidivr mov test movsb cmp fbld xchg (bad) iret (bad) push inc (bad) iret fwait sub lds jmp push aaa sub iret ja insl xor mov pusha xor jbe repnz mov xlat pop out fldcw mov mov mov int in icebp shrb arpl push cs leave sub dec iret jnp push dec jmp ret adc decl pop mov fcompl push arpl ss add mov in movsl incl push aaa hlt pop cmp (bad) movsb addr16 clc pushf movsl in loope iret mov bound add sbb jecxz or rcrb dec sub test jb leave in cs inc (bad) ret fs or jp sub imul pop fbstp ret daa fmul cmpsb pop xlat dec mov pop (bad) mov stc jno es push and cmp push addl jnp cs sub int repz enter adc jbe jl xor pusha adc jg xchg ss insl and adc jae push je out mov call mov add xchg lock sub xchg movsb mov testl pop in data16 and mov pop sbb cmpsl mov cwtl or or sub cmp rclb (bad) push cmc pop mov jle addr16 sub mov clc adc sub and jb stc (bad) daa mov (bad) in sarb and add in push pop ljmp xor std (bad) jmp add xor loop adc in scas hlt cmpsb popa dec ret (bad) cmp fdivs sub imul pushf mov pop inc subl aam ja lahf rcr inc mov addl lret mov or push sbb aas int sar lods in sbb rclb xchg rcrl lret push out xchg mov mov and xor les stos pop mov push sub pusha imul mov insl cmpsl push popa das repnz or inc jne jle push xchg xchg mov fldt popa jle jnp test iret and movsl mov cmp loopne or pop out fisubl mov iret inc cmpsb stos mov shr add lock in pusha or mov out xchg pop imul popa mov dec mov jae sub test xchg pop or add or adc aad ret stos dec mov push and xor cmp inc ljmp sub pop dec add xchg lds test in sbb add xchg jne inc inc mov (bad) (bad) stc std andb pusha cmp js andnps dec movsb ja pop jo sbb adc aaa call lret mov into es std out sbb (bad) stc pop out and imul out movsl dec mov ja cmc ss xchg (bad) adc sti jnp (bad) mov repnz adc outsb xlat pop sbb push sahf enter lret jb rep cmp push xor pop call fisub xor add push or fstpl sbb fstpt cwtl jp cmp xchg loop mov sub cmp mov pop cmp push jg mov enter pop arpl fisttp mov or (bad) mov push cmpsb dec testl (bad) xor sbb movsl pop repz push pop push test ficompl mov fwait pop or push and cmp divb cwtl or pop fild adc jne in fstps pop cli push addr16 jo (bad) xchg (bad) mov pop inc pop mov imul clc in inc (bad) xor push popa addr16 lcall out in fild mov leave outsl into xchg push xchg (bad) leave rcrl dec mov (bad) sahf cmpsl push pusha int3 sbb and aaa dec sbb inc (bad) lods adc (bad) xor repnz jnp xacquire imul dec aaa les pop lahf xchg inc lret inc mov (bad) ret or jbe rcll lods and orl dec sti (bad) xor mov mov scas sub and mov cs push cmp cmp and fdivrl sbb xchg jbe out test mov pop inc mov pushf in mov cmp (bad) cmc cmc push cli test lcall test or dec xor jecxz loopne int3 clc lock add xlat mov add mov push nop mov pop xchg pop and cmp lds out xor fmulp addr16 lds (bad) enter mov push mov cmpsb loope mov pop mov (bad) arpl fimull mov sbb je mov loopne lahf pop mov divl dec movsb sub and (bad) cmp adc lea sahf jbe pop daa push and lds sti dec in daa push int jg je imul clc sub call faddl js pushf sbb add xor mov (bad) mov jg shlb sub iret fistp (bad) rcl adc cmpsb movsl fisubl lret enter cwtl sub push (bad) lret inc cld push jecxz xchg sub add lock xchg cltd mov in adc scas sbb inc shrb mov and movsb pop subl jns cmp inc pop jb ljmp cs addb imul sti and jbe mov or clc mov mov jl add push jecxz mov cmpsl call ljmp mov ljmp ret inc mov mov sub pop and xchg jns ljmp mov mov and xor sbb nop mov mov mov pop mov imul fwait pop push subl aas imul sub inc sub test xor enter scas test pushf shrb and ret inc cld popa js xor sub adc sub loopne (bad) in lock movsl aam in jmp sub int3 xor mov jecxz mov shr dec test mov lcall (bad) loopne jns daa dec jno je out in sbb or out stc add jg int3 rorl mov movsb lret push xchg fmuls sahf mov (bad) lods adc cmp out xor sbb loop or add dec out adc and ss mov adc popf push imul test loopne mov fidivrl mov xlat xchg fidiv jns xchg insb test lods call (bad) daa pop xor push add (bad) mov test xchg xchg mov xchg xchg stos sarl jns andl pop xor jl std mov dec jecxz lret pop sti adc sub push sarb insb fadds adc adc jo test or cmc mov cmpb push std push cmp mov (bad) inc xchg push popf movaps mov cmpsb das mov and xchg sbb dec icebp jle push daa pop fisttp loopne mov xchg push int ss sbb ret lods addr16 lock sub imul sub (bad) aas test xchg bound mov gs jge jmp (bad) incb imull mov jg inc push enter (bad) or mov iret jg (bad) loope dec xchg adc xchg mov dec sbb mov out adc sbb and cli mov cs loope fldl aam jecxz in ficomp lock inc push leave cmp push pop xorl dec cmpsl adc push stc sub scas fmull mov dec mov cmpsb scas or into ffreep and xchg out mov cmp leave or dec adc gs test jle push xchg call movsl dec and out enter in jl in add adc cld pop arpl add xor (bad) and sar push popa sbb xor nop dec fisttpll or jl xor and in cmp pop lods int3 mov inc cmp sub out pop push inc jge fcom inc sbb hlt xor roll or jge mov sub dec fldl shrl pop (bad) jae movsl and xchg mov pop std or popa cmp dec dec ss pop lods popa fiadd pop adc xchg adc fs mov jbe push jg mov push aad std int3 mov inc mov out ret adc cmp and fdivs das repnz push ja decb jl mov xchg xor inc adc lods push inc sub movsb inc js addl test cmpsl outsl mov stos addr16 dec fs xchg inc mov cmp mov inc cmpsl fidivr jbe pop adc jge mov rol mov sub dec pushf std cmp (bad) (bad) jae cmpsl sub rcrl sbbl je loop,pn xchg ja addb dec clc (bad) cli mov inc js jns cmc fstpt rcl imul mov lret lret mov addr16 cltd xchg imul xor mov shrd movb popa stc movsb fwait sub or xchg pusha loop repnz mov inc jb popf cmp sub push cmp sub jg dec add pop fwait pop fsubs in int das aas xor test xor in mov jecxz cmp xchg test cs lods pop (bad) popa cmp cld xor inc adc lret in sbb cmpsl mov pop mov jl in mov or scas push fbstp stos imul cmp aad pop pop in dec push xor dec cwtl lods cmp sub jnp sub fistpll jge pop mov insb jge jle loopne insb xchg or push aam sarb lds adc sub pop adc lods hlt jg inc lret ficom outsl or xorb cmc sub aad and dec mov inc and mov rcrb xchg int jmp mov imul lock lahf insl stos in pop mov sub mov inc movsl rorb sbb mulb or clc out std cltd mov push cs pusha jnp or into mov ljmp mov push xchg xor xchg pop lret jbe daa mov shll loopne cs add pop jge leave and xor xchg and mov adc jmp in cmpsl lret push add and cmp mov ljmp enter imul rcrl insb inc push repz and (bad) aas jo cmp addb popa (bad) cli xlat dec nop xorl fiaddl and nop xor aaa add sbbl inc enter pop (bad) scas sti cld mov sub andb mov (bad) fmull dec jae sub pop cmp insl inc fwait dec pop jno pop outsb orl sub ja punpckhdq clc cmpl cmp (bad) cmc sub push imul add inc ret mov test cmpsb mov iret cmp fs imul mov les je xchg or dec mov lods sub leave and mov and lret mov aas std das jae je (bad) mov fistl shrb and mov icebp fsubr add mov in lds xor scas out xor inc adc lock jo daa push int lods mov push shrl rorb loopne stos pop repnz daa mov pop mov xor or push push vmulpd aas jp pop ret add pop js jg ror out xor lds push (bad) push dec out sti or push pushl int jge lcall stos aas das outsl mov mov pop cltd aam lock or sbb inc push xor icebp or leave or jmp pusha ds dec adc mov hlt inc push cld push outsl es push add push loopne xor push idiv pop or (bad) inc and push or fucomi cmp mov pop adc lock add ljmp pushf jo sbb mov data16 inc ja dec pop inc xchg (bad) pushf jle and and xchg jge inc setg push mov aas test addr16 jnp repnz shrl push cmp and pop pop rcrb popa xchg adc rcll in pop ja and add mov out mov jl xchg repnz mov cmc rcrb adc jb sarb mov fidivr adcl adc mov cld cmp rcll mov cmp xor sbb add sbb faddp mov mov cmc into adc and xchg daa dec inc push ret shlb std hlt in scas mov dec jl pop (bad) push mov leave dec ret ret cmpsb push mov push pop in mov out add and imul (bad) movb lea out out and (bad) (bad) mov mov (bad) and mov xchg lea pop or add mov adc sarl cmc cmp inc xor ss cwtl inc mov mov or cwtl push movsb in sub icebp adc pushf ds mov inc lea (bad) cmp push add scas cmp sub icebp popa xchg xchg pushf add leave pusha push jne ret jb (bad) je xchg inc sub mov aad int pop mov shlb inc sti add into sub test or cmpsl sub jg clc jmp xor ret negb mov push mov cltd push iret (bad) adc jle cmpsl pop jle sub nop add (bad) jbe inc or sub cwtl enter faddl mov jmp test sti dec mov push push (bad) fs xor push lret lret aad mov addl das pop hlt ds int xor inc iret loope add mov mov outsb std leave lcall test push push mov fsubrl scas outsl sbb arpl imul mov data16 sbb test icebp sub xor xor icebp cld lahf dec push jecxz xchg cwtl imul pop dec das ror or xchg push in in lret nop aam lret push lods daa jno add xchg ljmp fildll dec mov (bad) push mov push or iret inc add lret andl mov push stos test mov sbb xchg leave adc push mov frstpm(287 mov addr16 out or jne sub divl add loopne mov fldt (bad) aam movsb cwtl pusha inc arpl mov pop push out cld xor push xchg push outsl dec push lcall decb (bad) pop pushf sub adc sahf xchg popa adc imul mov es into fdivs mov xchg cmp aam pushf hlt sbb mov fs pop (bad) icebp jnp std fstps xchg loope xchg outsb adc push inc test rclb or outsb outsb ja fstl scas dec xchg jns xor pop jnp mov sub fwait neg mov inc repz mov daa jle stos sbb cmp push lret push adc mov scas mov mov je xchg aad lcall hlt jo sub push push call or dec inc cld pop xor push int or sbb add jmp repz popa fstps lret test iret into xchg xchg gs cmp jl jno jecxz mov ja leave pop daa movsl out gs icebp pop cltd mov and mov adc in out jns and addr16 xchg cmp sub push mov lock jno pop push mov daa jle mov mov mov inc iret sub pop sbb (bad) sbb push xor mov outsl xchg push out daa call daa cs out stos mov mov inc and repnz push andb xor add (bad) aaa fsubr cmp das cli cwtl jl push push dec lcall push sbb movsb push add rclb xor jnp mov dec inc aaa mov xchg push inc jne popf andl lcall sbb add sub daa adc fld out sbb aam xchg push idiv lds movsb dec jge sbb xchg aas dec aaa jmp (bad) (bad) sbb jp insl js lds popa sbb add stc mov mov out rcrl jg push sbb sbb mov dec dec scas xor hlt scas imul pop dec das push mov pop sbb push (bad) fld mov scas fildll fwait insl push xchg out sub sarb clc and xlat dec adc xchg and sub inc cmp lea mov jae mov jle pop sub ja and sub lret pop sbb call jno jno mov insb iret xor xor cmpb push xchg jnp (bad) sbb mov mov jl xor daa mov idivl int dec in (bad) ljmp cmp push bound (bad) fcmovbe mov (bad) xchg mov outsl mov lods push mov bound ljmp idivl cli sbb sbb cmp mov mov cs (bad) je lods pusha fbld addr16 rol inc push jae fstps mov std push mov pop xchg mov stos sub pop stc in imul pop fisubl mov jno lret movsl scas cmp xchg sub (bad) in fmul cmp int fnsetpm(287 and inc push sub mov imul pop inc add or dec lahf pop or sbb jbe incb lcall add js add call mov fstp jbe in cmpsl stos movsl xchg push lods pushf insb mov (bad) push push test xchg or sbb dec ljmp das fwait clc adc hlt sub push loope xor jno ss mov ss xor int jmp aad or xchg cmp push sbbl cwtl xor (bad) cmpsb (bad) xrelease mov dec push loope pop mov lret xor jne popa mov cwtl mov cli mov lahf aad sbb cli jp aaa sbb mov cli insb mov cmp ret push stos xchg mov xchg stos mov es arpl pop lds scas ljmp ret xor xchg mov aad xor pop mov mov xor leave mov lahf xchg pop lret faddl xchg mov mov and push decl (bad) clc cmp push sbb jne aad adc arpl out jge int3 cmc imul push fcomp push add js das gs cmp jmp (bad) icebp rolb or or (bad) (bad) xlat cmp dec mov xchg and js js pop jne xor jg int sub out (bad) or mov add dec adc (bad) or popa nop push dec jbe sub push daa outsb xor add xchg mov push jge xchg lea and mov xor mov pop pop adc in sub jecxz popa lret (bad) movhps jle adc inc dec sbb dec iret js je mov les stos mul dec testb cwtl sub outsl push sbb lahf mov call xchg sub aad stc adc mov jne in daa js push es mov ret movsl lods push xchg iret rcll mov (bad) xlat pop inc enter push sub (bad) mov test xchg hlt mov ret pop mov ds and js shll jl jp cmp cmpsb lock mov fs sub mov stc in lea jle jmp push outsl mov sbb leave in dec push jne push inc lods sahf je jno (bad) and out (bad) dec add int fistpll stos test imul jno rcll xor push ds pop cmp scas js lock adc mov add pop outsl and xchg nop inc push (bad) lret enter test ret cmp xchg adc icebp inc out sub sub ljmp pop sub jnp sbb leave sbb dec push out xor pop mov cmc xchg xor and cmp jno jnp push dec xchg mov xor or mov mov (bad) loope and cmp les lock pop mov push push int3 leave repnz pop jnp jp int and jns and (bad) jl or mov dec pop test cmp (bad) rolb arpl pxor es clc add out clc inc xlat sub mov les call xlat xchg pop pop xchg inc inc mov popf lret in push mov xor cli adc (bad) mov pop cmp sbb and xchg (bad) call pop add movsl dec pop xor bound and and test add cmpsb sub stos rcl fsubs addl in mov lcall dec add mov test or nop dec mov outsb sbb pop sub dec xchg dec pusha bound xor shrb sbb into pop or mov (bad) ret jns mov lods int fmul adc push pop mov xchg lret cmpsl adc fbld jo adc cld (bad) pushf jp xchg push adc ret cwtl dec mov test loope nop pop iret outsl shl sbb push inc mov jo or (bad) gs pop movsl sub xor movsl jno sbb clc cmc jg mov add pusha lds push push jmp imul (bad) mov stos loop loop dec and (bad) adc sub roll push sbb mov jp add in out dec push and jp test cmpsb imul dec repnz insb xor sti stc jmp sub and fildll xchg mov ret enter dec aad negb xchg out (bad) fnsave outsl cltd sbb sub jmp sbb adc fwait and es push call fs and xchg jno lods pushf xor fidivr push adc sarb enter xchg and inc sbb mov or and test fbstp mov iret loope xor bound or push rcrb push jg mov test (bad) daa xor daa (bad) nop gs mov ljmp jmp mov negl js dec xchg cvtpi2ps aaa call in popf lret inc pop xor jle fldt pop inc dec jns dec adc into xchg int3 push inc bound add jnp ss push cmp jo scas js sbb rcll xchg dec sub addr16 pop sahf add dec or adc out shrb outsb push cmp mov dec in jg and das adc dec mov int3 and jmp xor pop lcall cwtl out (bad) std dec test in aas cmp mov mov adc out jmp outsl (bad) dec cmp add xchg or mov ljmp pop mov jnp adc out pop out jno es mov sbb pushfw (bad) int3 jnp jo daa mov jg lret push add iret rcll fiaddl mov mov jp sub and cmp mov cmp jae stos cmpsl jae adc js dec pop inc xor sti rclb sub fist scas inc outsl xchg lds lcall jp fstl jbe jg mov jg push xchg stc jb inc mov cli pushf sbb or mov lahf xor out mov jo test mov shrl rcrl into mov sti and xor xchg inc sub fistl jae mov adc andl scas es pop mov sbb out or and pop sbb sub mov mov jbe cld fwait and push mov addr16 push inc xchg sbb push out push xchg add push cs mov inc int3 adc xchg mov mov inc fcmovb sub lahf aad lcall fmuls nop bnd je mov jmp and or sub aas and mov stc fdivl jno icebp mov mov xchg cwtl pop rcll sub mov jae mov int3 addr16 xorl test aad loop jbe iret cltd lcall out and mov sub mov movsbl je sub arpl adc xchg clc mull incl rorl add (bad) hlt ds inc push jbe or jne mov jb xor arpl mov mov call pusha or imul xor pop adc stos ret (bad) mov push mov addr16 inc mov mov shll inc mov pop jle xchg xchg inc (bad) (bad) dec jo shlb xor clc test add sbb into xrelease and loope xchg jb (bad) dec and sub in dec lds stc adc out push gs jno scas jo inc dec adc or pop in jg ficoml in out add (bad) and pop (bad) mov adc jae adc xchg xor cli fcompl aad xchg inc ret (bad) int cwtl aaa xchg dec fisub lea imul pop xchg mov pop and mov mov mov mov stc cmp add scas mov and outsl dec cmc bound pop cmpsb cwtl jmp decl pop inc (bad) pop adc xor cmpsl and and (bad) mov push loopne js ret xchg (bad) xchg cmpsl cmpsl scas dec sbbl hlt cltd cld subl fsubl es xor adc fsubl aam sbb inc pop cmp add mov aam sarb lret pop cmpsb (bad) insl nop daa out cmpl aaa (bad) gs inc out sti xor push or dec call cld int inc xchg mov ja push fld cmpsb data16 pop insl leave sbb dec jb ror push jecxz (bad) or mov and aaa jl (bad) mov movsb push dec das mov sbb mov iret (bad) lret push scas js outsb dec lret clc mulw popa aaa push xor xchg jl dec fld jb push shlb push cmp adc add or jae popa repnz roll mov (bad) sti jns xchg or loop hlt inc push mov sbb dec mov out popa sbb sbb sbb int3 clc pop mov movl mov out and mov insl push arpl insb jg arpl sbb xchg sbb jne jnp sbb push inc cmpsl rorb add shll ja jge pop mov jo aam sub outsl loop push cmp int frstor imul mov enter out add pop inc pop push and mov inc sbb xlat mov arpl inc add adc addr16 inc sub jecxz lret fwait les mov iret xchg cld dec les addl icebp adc scas push rcrl xlat dec and outsb clc ljmp or pop pop fwait (bad) add (bad) pop adc push repz or dec pop iret je lods scas jne push mov repz sub push pop pop stos in add jns cltd xchg dec imul sbb push xchg sub (bad) ficom adc and mov dec clc out popf leave enter testl xchg popa aas mov mov or popf xor push add push out loop ljmp lahf pop add (bad) fiaddl and xor (bad) ficoml xor insl cmc nop aaa xchg xchg scas int3 loopne xchg mov xchg test mov mov jns mov movsl jp mov loop cmp lods jp mov repnz incb pop insb mov xchg push sbb jno xchg adc mov lret (bad) mov popf and or loop fisub dec mov jbe jnp cwtl fist pop pop cmpsl jg test sar lret pop mov std dec mov ja cld movsb xor jl lcall popa adc sub lea pop xchg pop testl mov hlt (bad) xchg xchg pop pop or iret mov lret (bad) and subb adc or (bad) xchg leave mov and cmc sahf call fbld dec or cli xor xor xchg loop aam adc jge sti int3 repz lods xchg shlb movsb jl adc enter mov dec mov dec stos repnz test mov inc fcoms cwtl cmpsb (bad) fidivr ret cmp test mov pop (bad) pop pop cld jmp outsl out mov and rorb lea or aam dec and lods ja lea je jns mov insl push mov jo xchg insb subl in or mov not mov sahf movsb push jecxz out mov arpl int3 pop pop sarl or test jl (bad) dec mov stos or and (bad) loop sub lahf icebp hlt and jno jae cld repz mov jecxz or sbb neg je xchg (bad) roll loop (bad) aam jmp sub rcrb xor call nop mov inc aam lahf push out jl ja aaa inc jp test arpl repnz cmp outsl insb dec xchg mov xchg pop shrb xchg mov scas lock ds out mov pop or movsl in sbb mov push pop push push xor inc push (bad) leave jle xor sub or mov pop pop adc and popa data16 jecxz dec sub pop in pop outsl pop or aad fxch or add dec mov push out movsb frstor ffreep push stc fidivrl xchg or aaa movb push pop dec dec fwait jmp inc loop inc cmpsl or fwait cmp jne adc mov dec jle mov imul push pop jno sarl jg jecxz hlt in stos jns test mov jecxz add push roll push bnd xor xor rcl and imul pop (bad) hlt pusha push arpl scas sub pop stc xchg jl adc inc (bad) lahf or out mov jne fistpl pop clc add ret test into in ret mov adc and add xor jecxz jb in cmp sub loope inc lods pop outsl mov cli aaa dec sbb push test insl cmp add dec cmc (bad) jecxz int3 imul or xor pop sti mov mov xor aas jne negl nop pop or (bad) (bad) sarb clc or cmpl lea dec or mulb cs fldt sub mov pop mov test test sub jnp adc cltd push clc loopne js push or xchg aad test mov sbb leave push xchg movsl jbe dec in test push out cmpsb dec repz scas mov push or hlt add cltd mov gs jne call push cmp les jle or cmp js in test jno call stos int3 mov and xor xor push jbe out jbe sub lret addr16 fsubrl scas mov xor mov in push ljmp push sbb adc out in call les movsb lea push cmpl dec sub inc popa dec add loopne mov nop mov std inc xabort cmp dec addb xchg jl test popf out xchg or cmpsl add push outsl or fld1 inc cmc pop add mov push imul rcll repnz adcl and aaa fildl add push gs jnp mov movsl fimull je sbb cmpsb incb xor insb jp or fild mov xor xchg mov outsl sbb pusha jecxz mov adc push loop or pop cwtl andl loop dec shlb mov pop sbb sbb jle push mov jne push add (bad) sub aam loopne and sahf add repz hlt sub mov cld push jge mov outsl test (bad) mov sub (bad) test stc dec mov add mov dec les pop dec add pop adc xchg icebp sbb arpl push into adc into adc int gs jno cmp data16 ja imul test pop stc dec push cmp dec pop sub cmp mov fwait dec fiaddl enter cli movhps ljmp xchg pop xchg adc sti sbb xor sbb in fs and sub jg mov fnop jg icebp je jne rol std xchg xor std cmpsb push das in sar push jg iret subl cmpsb inc sar jg mov pusha pop pop mov pop xchg (bad) hlt pop jecxz fstpl mov je test sti mov xchg jns gs pushf pop or test in imul fwait inc cmc orl cmp xchg mov clc mov dec add aam popf cmp popf sub sbb scas push pop dec les fbstp add cmp ret jge rolb xchg lret add jecxz mov add add push or sub mov in push xchg dec outsb or daa mov (bad) fimul xchg mov stos fdivl js mov lock icebp lgs mov das mov dec cmp mov mov popf (bad) mov jl xchg scas fisttpll dec mov ja pop addr16 sar test pop pop jo sbb (bad) jno pop jecxz nop (bad) mov cmp outsb mov inc inc jb xchg mov inc mov les pop (bad) xor adc aad stos dec lret into (bad) sub mov push pop sbb cmp test fldenv inc or hlt addr16 mov cmpsl loopne xchg dec pusha add popf aad iret hlt mov cmp pop popa or cli aas ljmp sub add loop sub sbb insb loope push or inc repz fmuls pushf fsubs fisttp nop mov popa iret sbb out leave and (bad) fstpt jb inc cltd mov popf jg pop lcall hlt fisttpll cmp test es xor movsb js jp aas cltd xor addl std imul rol pop push scas pop int3 xchg in outsl pop out and imulb dec aas (bad) stos pushf jecxz aaa daa push fwait imul or cs jae jb adc loop adc (bad) loop sbb fstenv xchg addb lods push aas xor nop (bad) dec in (bad) (bad) lock stos inc sub push insb test push cwtl pop cli cltd popf call enter sbb add jne add cmp xor sti xor fiadd enter call xchg mov or mov mov (bad) aaa vmovdqu data16 and lcall je sub mov xchg sub mov (bad) stos setnp subl mov loop leave (bad) adc pop fbld inc sub mov jp push into movb and aaa int ds xchg shll lods xor imull or and sbb or xchg adc (bad) jbe inc push repnz mov mov add mov fwait repz enter das mov mov aas clc loopne jmp push idivl fstpl push sub outsb mov sub mov fs sbb and paddb test lods outsl and pop cli add ljmp call fstl inc pop dec lret add fisubl add outsb jl rol add cld push fcom subb sbb cmpsb mov mov lods xchg in xchg insb ss cmp cmp out mov dec cmp fs or cmovp scas test adc lock dec imul loopne mov inc xor xor or (bad) adc add push shlb (bad) mov outsl sbb mov sbb insl out std mov sub mov add loop push mov pop fsubl les mov (bad) inc ret jmp test and jmp stos in ss adc movsb daa mov and pop ljmp (bad) ficomp outsl fistp insb repnz sub pop lds sar mov mov gs inc add mov sahf fcoml es mov mov dec outsl pop imul arpl xor and stc daa (bad) xor test popa add std leave arpl mov xor jne cmp inc mov or xor sbb in mov ds (bad) mov cmp je add dec add xor jbe stos out fldenv xlat pushf xchg lods add movsb incl test dec sti dec stc in cmp adc pop cli stc push outsl cmp inc cs dec xchg adcl test pop adc addb and in and or in je in cmpl je aas movsl in adc dec lods ficom cmpsb dec arpl (bad) mov add mov pop stos or push shr pop aas add xor in inc (bad) pop dec stos pop js in push in aaa pop sbb or enter mov lods iret lods in ss leave idiv adc icebp xchg icebp aam dec out je lcall mov sti jg cs xchg stos jno mov xor aas repz push packsswb mov js arpl sbb dec mov ljmp (bad) sub lahf jns out out leave (bad) adc xor dec push mov out mov mov ja adc (bad) fcomp jae nop jp mov lds pushf popf dec outsb cmp inc jl dec mov push mov push and cltd insb loop xchg sbb pop and fbstp jbe jbe sub ljmp nop enter (bad) fs iret pop lds loope fisttp cwtl dec inc xchg hlt (bad) push das mov ss cltd add add cmpsl in dec sbb movsb dec movsb enter nop popf xor xchg cmp inc mov call adc cli int3 mov mov scas sub xchg das xlat xchg sahf cld jmp cs pushaw mov inc lods dec sbb inc stos dec and outsb subl faddp dec leave and mov push jae (bad) out push push jns cmp mov inc nop xorl int3 and jb fwait mov dec pusha or repz push and fldl bound outsl lods xchg lds out out cmp dec dec nop dec push pushf or repnz or (bad) (bad) jmp adc and ret inc das cltd lcall outsb arpl aas add bound jb repz jne jns rcr xor loopne cmp fstl pop and mov dec sub jns push push js orb mov pop mov scas call ss cmp shr cmc iret xchg fsts xor inc in aaa enter test xchg push push adc (bad) repnz sbb je mov xchg and es pushf xchg pop jo xor inc inc repnz into xchg and push jp (bad) mov jge dec stos xor jl sbb sub mov ds out xchg sub dec cmp xor cmp push outsb repnz lea test dec hlt adc imul gs sbb pop jbe (bad) push push das mov xlat inc xor adc mov jmp inc xlat dec or hlt jge mov lret je mov mov outsl inc cmp push fnop ds repz inc stos (bad) stos (bad) push mov ficom sbb xorl hlt outsl leave iret outsl or stos testb push sarb cs je xor sarl pop mov ret leave or ret jae movsl clc test inc in push jnp loop sarl hlt xchg stos lcall mov arpl lret sub loop cmp push les loopne ds lock mov rcll scas xchg sahf cmpsb push mov (bad) pop or in fnop insl inc sbb inc mov lods movsl lret xor (bad) cmc mov pop es mov (bad) sbb mov inc cmc das pop lret add or pushf enter out shll push mov int inc gs mov negb aas in add xorl shl cmpsb mov call imull stos pop adc jmp fwait xchg inc jmp or test xchg in lret inc mov lods pop mov lods lock pusha add fmul push mov sub add ds mov iret int3 push xchg cmpsl sbb dec or dec out fidiv inc addb imul jmp add jmp jb mov push jp (bad) sbb add (bad) out cmpsb push cmp cmp pop xchg xchg loopne xor push inc in inc fsts mov mov xor mov pop mov dec jno out or or dec inc lods std enter cwtl (bad) in mov loope sbb sub xor cmp out into xor pop hlt ret dec adc outsl xor ret negl inc dec in mov or xor rol push mov pop icebp jmp rcrl ss (bad) call mov scas add jmp fidivl lcall jp mov push cwtl cs fisub inc mov adc adc and mov loop cmc mov dec repnz mov cmp jge hlt push loope mov into iret aam sarb lods cmp ror fwait aam push int3 popf inc mov flds inc int3 jae sub mov push adc outsl add pop js dec cs je sbb (bad) cli xorb dec mov dec xchg rorb adc ja or repz stos ja sbb clc adc (bad) push mov inc sub jecxz cmpb jns jae mov orl stos xor outsl add xor loopne pop push pop adc xchg imul sbb popf pop je jle mov rorl inc xchg in fwait fs add jp mov mov (bad) (bad) dec fldl mov in xchg sti insl xchg or std out xchg or out scas jg ficompl inc leave cmp adc test fwait call jge xchg inc test pop jo not push sbb fimull int leave inc je out adc testl out cmp add icebp repnz pop dec push push sub dec pop xor xor mov rorb push clc f2xm1 add push dec test xchg loopne mov cmpsl dec pop int3 sbb mov xchg cli lret pusha lret nop adc dec push mov and push jne ficomp jo data16 mov stos dec sahf dec pop negb int3 xor fcompl int nop jne hlt jge sbb pop pop sbb push mov and and cmc movhps sbbl jg movsl add stos mov xchg lea mov outsb push mov sub or mov in dec pusha add mov cld add push push fsubs add movsb pop fdivrs (bad) fcompl sbb mov mov jl xor popa xor aam sbb popf lock xchg add pusha mov lea push mov lea xor push cmp jne inc inc push push push add push push push add push push movl nop nop nop nop nop push push push push sub mov movl movb mov lea mov mov movzbl mov shl mov dec mov movzbl shl dec mov mov movzbl movl movl movl mov mov movl movl movl movl movzbl add shl lea cmp jae mov movw add loop mov xor movl mov add mov xor cmp je movzbl shl inc inc or cmp jle mov cmp jae mov and mov mov shl mov add cmpl lea ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub mov sar mov lea movzbl mov mov and mov shl mov sub sar add imul cmpl lea mov jle mov sub mov movzbl mov shll mov lea mov and cmpl lea mov lea ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub mov sar cmpl lea mov je jmp sub sub mov lea shr sub cmpl mov je cmp jle jmp cmp jg lea mov add cmpl ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub mov sar lea mov jmp sub sub mov lea shr sub mov jmp mov mov mov mov mov inc cmpl mov jg movl jmp cmpl jg subl jmp subl jmp mov sub mov sub mov shr sub cmp mov mov lea mov ja cmp je movzbl shl shl inc or mov mov shr mov movzwl imul cmp jae mov mov sub mov sar mov lea mov mov mov mov mov mov mov xor cmpl setg add lea mov jmp mov sub sub mov shr mov sub cmp mov ja cmp je movzbl shl shl inc or mov mov shr mov movzwl imul cmp jae mov mov sub movl mov sar lea mov mov mov mov shl add cmp lea ja cmp je movzbl shl shl inc or mov mov shr movzwl imul cmp jae sub sarl mov mov cmpl lea mov je xor cmpl mov mov setg lea mov mov sub mov mov mov inc mov jmp sub sub mov shr sub mov jmp mov sub shr mov sub sub cmp mov ja cmp je movzbl shl shl inc or mov mov shr mov movzwl imul cmp jae mov mov sub mov sar lea mov mov jmp mov sub sub mov shr sub mov cmp mov ja cmp je movzbl shl shl inc or mov mov shr mov movzwl imul cmp jae mov mov sub mov sar lea mov mov jmp mov sub sub mov shr sub mov mov mov mov mov mov mov mov mov mov xor cmpl mov setg add lea mov cmp ja cmp je movzbl shl shl inc or mov mov shr movzwl imul cmp jae mov mov sub shll sar movl lea mov mov lea mov jmp sub sub mov shr sub cmp mov ja cmp je movzbl shl shl inc or mov mov shr movzwl imul cmp jae mov mov sub shll sar movl lea mov mov lea mov movl jmp sub sub mov mov shr movl sub movl mov add mov mov mov mov lea mov add cmpl ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub sar lea mov mov jmp sub sub mov shr sub mov lea mov dec mov jne mov mov shl sub add cmpl mov jg addl cmp mov jle mov mov shl movl lea mov mov lea mov add cmpl ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub sar lea mov mov jmp sub sub mov shr sub lea mov mov dec mov jne lea cmp mov jle mov mov sar and lea or cmp mov jg mov shl add mov lea sub add mov jmp lea cmpl ja cmp je shll movzbl shl inc or shrl add cmp jb sub or dec jne mov shl mov add movl mov movl mov mov add mov add cmpl ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub sar lea mov mov jmp sub sub mov shr sub mov mov mov inc or mov shll dec mov jne mov inc mov je mov mov add cmp ja mov mov sub add lea mov inc mov mov inc incl dec je mov cmp jb jmp mov cmp jb cmpl ja cmp mov je jmp mov jmp inc sub xor mov mov mov mov mov add pop pop pop pop add add xor lea mov push cmp jne mov xor pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add movsb xor inc adc add 