xor pop mov sbb sbb iret cmp shrl loop or adc cmp rcll ja lret jns lock cli and adc push xor fnop ljmp out add out imul push mov wrmsr mov jbe and (bad) mov jno xchg pop (bad) cli jle cmp cmpb aas pop mov mov out fs leave mov sub dec xor popa sbb test into jecxz out dec push inc cmp push aam sbb and out lcall mov dec aas mov arpl fadds inc pop andl inc cmc mov test out fucomp pop loopne test hlt test pop and mov or mov or pop lahf and test push sub push js sbb repz sub adc inc pop cmc or stos data16 mov adc fnsave inc faddp ficom into aas jl ljmp in iret es into aam mov mov dec pop add sub lock jle popa fadds arpl ljmp mov test jmp rcrl xchg fnstsw cmp aad mov mov scas push (bad) ljmp iret (bad) outsl inc or es xchg loopne mov pop inc in push into dec dec fdivrs and mov jb stos sub stos add jb leave loop sahf xchg into sbb test lahf (bad) inc sti aad scas mov and aas pop (bad) cli insb rolb jo sbb cmp lret fldt cmp add push int jb ret pcmpgtb jb fs cmp in enter ss rcrl cmp (bad) lret out aad dec push mov out scas jmp rcrb inc cli in mov sbb push xchg xor or cli push or adc lret stos sti test mov fwait adc push pushf pop cltd xchg nop xorb sub divb jl call out push push enter jb sub js xlat clc insl scas jle jmp adcl cmp stos andb jecxz lcall mov idivb and pop lret test cmpsl mov jmp or adc mulb push add addr16 cmp in xor lds pop sub cmp (bad) fcoms int fdivrl jl jo add mov fs mov push push xchg push std and lods xchg stc xor sub imul jb das sub and lea leave jns out loop insl dec (bad) mov jo pop inc xchg jmp inc movsl mov sub loop sbb (bad) ljmp push and scas je pop fdivrl sub xor in xor mov push pop cltd cmp stos adc mov mov and scas and fwait mov clc cs xor jno int fild stc aam sbb adc sub pop cmpl xor out jg push fld and lock sub rol test in mov push hlt divb sti mov mov cltd test push pushf dec inc xchg (bad) aam mov and push mov mov adc in mov xchg mov xor sub push sub lcall ds popa mov (bad) mov mov push js jbe mov cmp cmp subb inc mov jecxz loope sbb sbb out or shl scas int3 adc mov fimull jnp inc mov mov fnsave push or iret jno fisub xchg jnp aad cmp int out mov add xlat scas or out lods stos (bad) out mov jae and sbb dec jmp xchg loop int3 jns jb cmp loopne fidivr sbb cmp (bad) adc dec and pop inc push lcall repnz sbb and mov and aad inc (bad) repz cli xor mov dec sub push add adcb ja cltd dec jmp je and ret das in or push popf pop push ss pop and lcall insl jae push ja sub inc jae pop mov mov cmp or cmp xchg pop push repnz or sbb ret sbb test jne pop and xchg inc jae ds int3 sbb std adc cmp pop pop lret or shl cmp sbb pop mov dec (bad) sbb pop xchg lahf out call call arpl mov ret sub lods and jno aaa xchg loop cmp cli mov mov movsl sbb enter cmp jge testb pop lcall mov lahf xchg test jae adcb or push mov aas jnp cld jno test sti mov fdivs sbb pop mov cmpsb ja popf mov mov js jmp pop jmp dec xor stos lds xchg sbb movups jge mov cli in jbe xor shll in incl iret mov mov outsb sub xor into add call movb scas dec dec push jns (bad) enter adc test push (bad) shlb scas stos jecxz lret cmp inc mov stc daa out dec lcall jno repz jp hlt in lods pop mov es lods rolb or mov sub test adc jnp cmp mov push in push add xor and stos push jo fwait sahf cmp xchg xor lret lea lret mov push mov cmpb leave loop insb aaa ss stos lods dec data16 sahf sub ljmp fisub mov xchg jge xchg repz mov ret push orb mov or mov lcall lcall dec stos and cmp in daa lock lds add xor imul add scas cld stos das adc mov sbb adc lods sub rcl es dec cmpsb sub cmp cmp outsb mov add pop nop adc mov or jno pop test add adc cmpsb (bad) out mov stos sub in out inc cmp sub mov leave in in out mov notb dec js outsl imulb pop ret pop imul push iret aam xchg sahf mov xor pop fmuls das sti (bad) test iret fcompl push sbb outsl fsubl adc add int3 ss vphaddubd mov xlat xorb (bad) into mov and adc (bad) int3 js pop ljmp adc icebp orb loopne or xor jno nop orl loopne and nop xchg insb mov sar cltd ljmp push lea jae arpl mov rol mov xchg mov pop sub push les hlt js cmp inc jge (bad) cmp fld jae or or iret sar inc jl push adc add pop mov sub add cli adc divb sub jbe loop (bad) or jae inc jns sbb xchg leave pop decl cltd sahf sub rep outsb imul stc daa stos mov jbe sub dec push roll fs cmp or (bad) movsb push xor sahf out stos jne test cwtl push popf inc ret mov xor xorb mov repnz or or mov inc xor dec fmull das push in out add lretw movsl and fistp sub xchg jecxz adc (bad) mov sub dec out push std insb cmpsb mov cmpb jmp repnz dec push enter push xchg imul decl adc lea sbb xor sbb jp andl dec inc xorb and and test xchg push push sbbl and fnsave mov or mov fwait xchg loopne xchg sub sub cmp in xchg std sub xchg cmp mov mov andl sbb cli xchg (bad) sub fistl dec cs jp xor pusha add icebp negl mov pop pop fbld mov repz jo mov lods xchg movd jp ja rol cmc scas push out (bad) xor sbb cs lods rcr addl lock test or mov mov fidivl adc (bad) scas cmp xor idiv in call lret mov inc mov push jne mov or mov cmp cmc mov ret rcrb cmpsb sarb es bound sbb dec ja test pusha push sub and int out dec adc pushf xor scas pop xor mov adc cltd test and mov mov xlat cmp sbb rcl sub into xchg cli xchg push inc clc addr16 and mov jae or sbb iret aaa aas sub mov jg test inc inc sub cmp (bad) inc mov loopne mov inc mov add cmc mov lock xchg nop dec loop add jbe pop gs test ret mulb mov insb mov pop sub cs xlat arpl and (bad) and cmc addr16 (bad) or or or in cwtl cs sarl inc jae sub outsl (bad) gs push pop mov stos xchg ljmp cmovae stc inc js pop addr16 (bad) lock cmp loope ja push dec mov fwait mov jo push (bad) ds add rcr xor jl pop loop push xor mov js (bad) nop add xor out jnp lods loop or push mov mov or popf push mov mull into out inc icebp loop mov jb (bad) pop lret (bad) and push loop test cmp adc dec xor (bad) std aad ja push pop lcall push adc clc jo mov inc mov lret mov aam adcb enter test and repnz js les mov repz test jb stos sbbl mov xchg sbb movb sbb fildl inc sub mov pushf adc das das and int xor dec mov aam pushf xor cmp popa mov mov test lds and lds dec test out xchg in pusha clc dec jmp push lds leave mov stos jecxz jns pusha xchg xor in mov jg push aas negb outsl push pop push cmp mov jle clc dec xor js xchg xor xchg sbb and lcall xchg mov pop or pop imul pop cmc mov mov adc mov sti push repz jp sub je add jp add or push dec adc pop push pop jae xor lock add sbbl cmp jmp outsl shrb cmpsl imul (bad) jns mov scas ljmp mov mov nop dec clc sbb pop dec clc xor (bad) xchg mov push dec ret (bad) jnp test push in xlat xchg sbb sbb in push repz mov mov (bad) xlat mov std xor push add pop (bad) dec mov por cmp das mov into lods mov push mov xchg pusha mov jo dec push ss mov pop mov shlb hlt scas cld lods das fs sub cmp lods inc or mov pop sub dec jb (bad) xor int3 sbb (bad) xor call fs into dec rorl lahf mov dec loopne (bad) shlb rclb sub inc mov inc pusha aad imul mov pop or mov xorl not (bad) test push adc mov bound xchg out push test pop movzwl cmp rclb sbb (bad) xchg (bad) xor sub mov je idivl xchg pop xchg pop inc push push pop cltd xor xchg mov push mov adc daa xchg or sarb inc sub mov adc jg sub enter das mov cmp das jl jno mov (bad) icebp mov insb add fstp push pop adc lds and ret stos lret xchg clc jb call push incb les jl mov loope push mov fldt hlt jnp (bad) std xor xchg xor xchg imul popa adc and dec mov or add mov mov imul jne fcmovne pop mov sbb aam sub sysexit (bad) icebp push add jl je in xchg test cmp (bad) sbbb adc sub jle jae sub les mov push adc jne,pt fldt adc fisttpl inc ficompl mov mov jno sbb xchg dec xor mov pop loope inc lods js cmpsb sub fs mov push test cmp mov std jge fstl in call in lock lahf or inc push mov movsb out pop jp test les mull push xor stc inc push mov rol mov xchg aaa inc push shll test fucomip mov andb sti cmp loopne sub sub mov mov mov stos test aaa sub add data16 xor es rcl testb jb pop add xchg and insb xchg icebp mov mov sahf and xchg push inc push cmc cmpsb jmp mov loope push pop cmp in negb leave push ud2 adc jge sbb adc mov pop push lods lret fwait out mov int push xor and push dec fist pop nop pop pop addr16 ljmp dec add out stos shrl lds int cmc ss stos lds hlt imul mov sub ja in (bad) pushf in fldcw aaa lahf push inc dec adc inc inc mov mov outsb xchg int and lods jmp pop sbb sub hlt cmp hlt mov addl mov push mov and dec lods or inc xchg jne mov jbe and nop pop scas lret jmp and test sbb pop jns (bad) popa jnp lods or roll (bad) xor (bad) cltd (bad) aas mov mov mov jl xchg outsl pop pop stos mov (bad) shl dec rorb shlb lcall mov sti jp and or out jp rorl add shrb pop sbb in loop mov arpl outsl mov fistp inc or push inc pop outsl xchg mov pop adc (bad) fdivl sti mov mov lods ljmp cld out and loope imul loop dec dec jmp loop jg cwtl fcoml xchg sbb xor pusha outsb add push lods mov (bad) mov dec mov cmp dec (bad) lcall aad lahf (bad) jmp dec sahf inc into cmp lret mov shll leave inc pushf sub push inc shrb xor xchg cltd cmc xchg jecxz add pop sub mov or mov cmp fidivr (bad) fisubl fwait pop cmp cmp xor lea dec xchg aas cmp imul std mov pop cmpsl mov sbb push inc outsl std rclb mov jmp outsb aam imul inc fldcw xchg mov shll mov inc (bad) ja jns pushf xchg jnp shrb jns jne in (bad) cmp push sbbl jb mov xor xor push pop scas xchg repnz outsl jo out mov adc jmp inc test in ss jl shl (bad) leave jns inc and (bad) or dec clc (bad) mov sti sbb add out sbbl mov sti inc inc cmp aad nop mov imul (bad) mov sub xchg rclb fsubrs xchg lret jecxz adc cli bound shrl pop xor or adc xchg stc inc cltd jle stos mov inc inc imul dec pop scas je add sbbb sbb mov adc dec pop leave divl mov push xchg call sbb jae jnp mov and jg lds mov std mov movsl push inc movsb push mov mov adc dec ret mov pop cmp sub xchg aam js daa mov ds mov xchg jmp push (bad) mov sub fldt jns insb std insl xchg ja pop push fs dec lcall xchg (bad) lds push ss mov punpcklwd lcall ljmp push cs xchg (bad) jo and fcmovb movsb test je hlt jecxz das les shr sub sub xor dec mov cltd xchg dec mov icebp and jnp mov pushf add ret mov scas sub icebp mov mov lcall lahf push (bad) fnstsw into add in mov and cmp cmpsl daa (bad) pushf xchg or cmpb or add push mov int3 lret mov aam pop lret pop int dec sub cmp and adc popf and and in dec mov pop ret xchg lret sbb inc lods test dec popa pop sarl cmp xor stos sbb xchg xor sbb mov dec sti movl dec imulb into gs test daa xchg sub (bad) outsb cmc xor pop cs rcrl inc stos mov xchg pop inc or pop std testl inc xchg xchg mov pop imul mov add int imul jbe and dec mov in jo add adc sub leave lds pushf lods inc lcall out mov inc sbb cmpsl in lcall add inc jb pop adcb adc stos mov rcrl movsb mov mov dec push jecxz aam sub add sbb out loopne inc (bad) mov test sub repnz pop das jo mov enter mov lods fisubl addb jnp mov stos jo mov or (bad) jge nop out add push inc sub cmp ss xchg push add mov push mov insb imul dec adcl pop inc (bad) out push (bad) mov and mov std cmp iret ja cmp or fstpt divb call les (bad) (bad) add std fcmovnu xor je out add out fwait mov push pop fstpt fnstsw in pcmpeqb mov loopne cltd sub jl adc test into push push leave lods in (bad) push cmpsl push and clc xor loopne in pop out arpl cs inc push pop push adc add or pop and dec sahf or enter dec notb inc mov add dec (bad) mov (bad) jno jl cmp or inc js cmpsb icebp bnd mov pop cs adc cld jno pop xchg dec mov push popf gs add outsl addr16 popa mov push pop cmp push mov shrl cmp sarb imul mov jge pop test loop mov cli sti inc mov sbb jl push xchg push sub les push (bad) mov icebp sub es xchg stc cmp xchg pusha iret popf mov add (bad) jl or mov rcrl fnop push jb xchg mul or xchg out sub (bad) out xor lahf fdivl rcrl sub fsub imul stos cmc mov shll sbb xor lock flds fwait adc (bad) (bad) cmp cmpsb ret js cmpsb adc mov push sbb cwtl xchg and je outsb push cltd rcr out scas out in xor mov bound iret dec imul xlat sub jg sbb inc sbb jp xchg test and aam rcl push cmp sub mov mov sbb lcall xchg jp xor test jne cmp sbb mov inc dec mov adc imul (bad) data16 addr16 jns pop and jne push (bad) mov xchg pop loopne xchg (bad) sub inc xor cmp mov add xchg ljmp (bad) xchg lods (bad) mov push insb or pop fist xor in add add push out ja xor sub leave fnop js iret pop mov sarb pop mov clc or inc popf shrb aaa add js mov mov repnz sub or cwtl and xchg test sbb movsb mov jnp cwtl cmp mov add mov icebp (bad) lock push (bad) xchg lret inc ror or les test jp je dec loopne and push or dec stos aad (bad) or test sbb mov clc dec ss xchg cmp arpl cmp fwait jle iret jne mov jne ss pop and outsl not add (bad) jbe sahf jle mov (bad) cmp mov ja xor pop adc pushf add inc mov in add ret xchg aad sarl inc pop in mov sub popa xchg add xor pop pop add ds xchg adc rcll inc aam (bad) jg out adc mov jb xchg inc sbb mov mov fistp xchg mov popf daa cmc imul adc pop ret cld data16 mov xor mov sub fcoms fs scas adc xor jnp (bad) mov (bad) psubusw mov enter out aaa xchg stc mov jmp in xor ret cltd sarb test pop or jmp imul jo adc pop xor pop clc jbe sub enter js push fnsave sarl cltd and in clc xor add pop popf xchg bound lea push outsl inc dec stc mov push xor (bad) idiv mov ficom clc rcrb cmp cmp push gs imul mov daa gs or into xchg and pop out int mov popf jl rorb notl out pop jns sahf xor mov outsl inc adc adc iret adc test inc or test std xor jp jb mov sub (bad) mov mov xlat ljmp jne repnz shll daa es push addl mov jo dec mov jne inc mov movsb jnp mov (bad) in jne xor jg ret aas sbb mov mov push xchg fwait in adc loop push push xlat adc inc out adc jl inc (bad) cmc sbb into ja arpl pop pop (bad) jbe imul mov xchg je sub pop popf mov mov dec or jo jle mov arpl insl mov fcompp fwait xor push jl cmpsl mov call hlt (bad) or bound jnp (bad) mov xchg adc inc xor add int xchg xchg rcr ficomp sub adc (bad) (bad) loope (bad) subl pusha call pushf ljmp (bad) or fwait movsl and stc lret fwait fwait and jmp xor jns,pn je sub fwait leave stos jae aas inc mov lret xchg fmul jge test mov xor push cmp xorb shll xor lahf jbe fs xchg mov mov or imul out mov icebp fbstp aaa or sub test fist inc rorl scas fsts jno push mov mov xchg mov inc cmp inc lret les loope push mov mov lock clc dec in inc xchg xor cmc push or cmp add inc insl mov adc push and and (bad) lock cld (bad) xorb test push (bad) popa lret sub push sub pop cltd sbb jno movsl xor xor push inc mov mov jne lock sbb (bad) ja push xchg sbb jno mov cmp (bad) std push dec jg pop xor sub xchg (bad) jne sub das mov jae jmp cmp and call sbb sbb hlt xchg imul dec push shl stc ja test and cld ds mov ja (bad) xchg pop sbb xor fs sahf movsl test mov in test bound (bad) jge sub jp push in add pop inc add mov or or mov sbb mov iret xchg nop adc cmp xchg inc push ret sbb add and divb rcrb (bad) sar jg or adc jb sbb xchg xor mov cli add push push lea ss iret ljmp lods inc adc push mov push and (bad) imul jbe lea xor inc repnz repnz jp xchg or dec punpckldq mov jne push adc xchg or pop in jge outsl popa dec in rcl call mov cmpsb popf and cmp loope cmpsl mov (bad) mov loop in xchg sbbl mov jmp je mov jle push insb hlt push xchg repz or lods sbb sahf xor comiss stos ret push mov mov mov pop sub cld xlat push add leave pop jno outsb add xchg cltd js imul imul mov sub lea subl outsl sahf repz loop notb cld jle xchg lcall cmp ss and lret sbb jg mov dec mov loopne mov pop repnz sub dec push inc mov inc daa fimul add sbb ja popf add xor mov jo jge fucomi sub mov inc pusha push xchg push xchg data16 cmp lock (bad) ds jo adc xchg sub call mov xor jge (bad) or mov cmp and insl pop loop or (bad) pop pushf flds xor dec clc inc roll and xor das repnz inc sti in fstl push and cmp je adc (bad) repz add scas jp cmpsb lret xchg jb into test movsb mov (bad) adc cmp out (bad) adc movsb subl sub inc daa xchg xorb jne ret loop cmp in outsb pop xchg movsb (bad) and fcmovnb sbb test popf cmc lea std aam movsb push inc push (bad) dec movsb addr16 inc cmp enter lret xchg dec pop mov cmp out mov andl sub mov aas mov maxps sbb into lods xchg (bad) clc mov lret fldcw mov pusha jg enter ficom je push (bad) mov aas push push (bad) and push aaa sub rorb mov iret mov stos xor fcmovnu mov pop mov dec xor lods loopne pop mov adc idivl inc pushf inc daa lcall and xchg pop jnp dec jle bound popa add (bad) aad test adc insl mov push or cmp mull daa out sahf lea (bad) aad icebp mov cs sbb insl jmp mov imul push sub stos testb cmc iret fprem add outsl in popa add push int pop testl mov loope adc xor mov mov cmp jl or popf push jo ja push roll fistp rcl pop push lahf ja add clc adc icebp inc inc add dec push sbb cs push insl xchg mov adc stc cld negl mov dec jge aad inc inc jb jne jg mov inc xor and inc xchg adc lret inc inc adc stos out sbb add cwtl aaa rcrb mov daa cmp aaa into popa std and (bad) xor cmp daa lret in (bad) lret pop popa mov jns repnz ficomp nop cmpl outsb inc jo iret lock pop add bound in outsl add pop negl jo ljmp mov inc cmp and pop (bad) (bad) mov and inc jecxz movsl mov out push jne cmpsl add je fisttp rolb pop and push dec sahf jno aaa (bad) decl outsb sub and aad arpl push dec mov gs push ds pop cld fcoml outsl stc sub jnp aad lret (bad) jne mov cmpsl cs sub rcrl lods jmp cld test test repz sbb lods jno ret dec xor div inc les jne mov cmp and mov loop stos mov mov xchg dec cld dec sub xor dec mov push dec mov inc mov insl pop inc in mov loope test (bad) mov ret inc ljmp fdivrs xchg inc xor add push xlat pop (bad) in push ret subb shll push xor pop adc pusha into rorb or out test lods (bad) add sbb and xor (bad) lret int dec div repnz lods mov outsb inc mov jne cwtl push xor push xchg cmp jbe icebp scas xor scas and fdivrl out push (bad) jbe sahf loope adc cli aad aam adc cmp push mov jbe cwtl sbb lock sbb add js inc xor add pop int3 arpl cmp hlt mov sbb fdivr adc lret mov lret and movsl xchg adc jle mov jo jae clc mov lock add daa or sbb callw xchg mov xchg xlat xchg lea jle mov cmpsb mov jmp pop cmp movsl pushf sar out lods test js mov or and cmp lock and or push jecxz (bad) mov notb fisttpll inc repz fs or loopne (bad) mov scas out pop dec add inc stos adc fiaddl daa call das sbb push pop inc xor mov mov rol mov mov jno (bad) in lea mov sbb ret xchg lahf add sahf pop xor shll or scas jmp out inc mov xchg (bad) sbb aaa daa mov mov pop fidivr fidivrl rcrb mov (bad) int jmp pop inc in pop sbb jo int clc shl ret rol and arpl gs hlt and jnp push jae jnp mov mov adc repz aaa dec imul jne push scas lods mov push (bad) or fcoms xchg loop xor jecxz daa jb daa test aad cmpl sarb sbbb aas sbb dec adc jmp mov mov out sub (bad) jecxz jmp pop jbe and inc jno movsb add in push jne adc addr16 add mov pavgb adc gs in test rcrl xchg xor and (bad) mov (bad) (bad) lcall aam mov and je push sbb gs repz or test jne or (bad) xor push add or movsl add xchg test push int3 jns repz jne subl das xchg movsb in push rcrl sbb (bad) rorb pop test aad pop rcll add insb pop xchg cld stos test jns daa mov stos cld push and cmpsl add lods mov call dec jl inc and in push or jns mov pop (bad) push aaa gs jmp jns jmp loope dec test or fiadd punpckhbw cs jne imul jmp fwait lcall imul push xchg xchg xchg lds jmp sbbb aas sti test cli xchg sarl add or ljmp leave or sbbb cmp je fdiv je icebp repnz daa jo fcomps stos lods jns movsl or mov mov sub comiss ds aas scas push lods mov lahf add fdivrp xor jle cltd adc cmp fdivrl out mov xchg ss mov dec sbb int3 cmp inc lret dec icebp ja or hlt sti test cmp out sub cmp scas cmp xor mov dec xchg pop mov test (bad) cmp mov fs adc popa mov add negl or sti insb pop into and repz pop dec push mov sbb jno sbb mov push fist fdivrs loop pop scas fcom add ja lea lods fwait imull out inc dec cmp mov mov mov and daa cld sahf cmpl or xchg repz loope,pt imul adc inc pop mov les fdivl mov sbb pusha rorb inc call sbb pop orb (bad) out ds out repz adc movsl mov dec dec dec repnz aam add push mov out mov imul xchg in or cs inc fucomip fwait mov jnp dec fiaddl pcmpeqb in jnp aad jnp fist push mov mov mov push mov cmp dec clc xchg adc test nop and fsubrs sub pushf inc je (bad) xchg adc cltd xor dec cmc and adc xor inc lahf or in dec daa std std outsb mov adc loop movsb cmpsl pusha je or rclb dec xor out shl push ja ljmp dec jmp push mov add fildl je addr16 mov inc sub jmp ss push push pop xlat inc fldl2e or dec aam push ds xchg push inc xor and xor mov ret push arpl push fucom test xchg adc sbb xor push push mov pop cmc dec add jno mov mov or ds push dec out int sarl dec cmp adc sub les inc (bad) xor and pop xchg test (bad) lret scas mov add and inc outsb cwtl mov jl dec pusha shlb dec xor dec cmpsb das mov mov cmpsb lds int fsubrl adc mov mov aam loope dec fidivrl out dec xor (bad) int sbb call lcall cmp and jne cmp cmp les pop xchg ss adc jl mov out push test adc lcall pop add aaa je adc test rcr lods add sub jo adc adc lods dec dec dec out xchg ds stos std sbb ljmp mov mov sub movsl pop mov insl xchg in je int or cltd push rcr pusha sub inc jo add jno les inc sbb xchg push pusha pop inc sub aam insb ret dec push xor ja xor and jge xor sub xor iret ret sbb arpl sub xchg pop pop or cmp out cmp push pop daa mov nop push fwait and inc je inc cmc call js int or mov sub cmp xlat sbb popf outsl dec sub enter push cmpsl subb and dec mov xchg and pushf xchg std addr16 out mov inc mov cs mov xchg shll xchg jae mov loope push shlb pop nop pop in (bad) pusha popa cmp dec out jmp insb push mov sbb xor ret (bad) mov push sub pslld ficompl cmp test lods push sub or adc fdivl movsb out pop push stos mov xor lret std scas imul fs psllw xlat pop dec out int3 iret add repz icebp in sub fwait push dec mov jne pop sahf push xor pop lret into negb cli xchg pop adcb xor lock imul ljmp pop daa dec in out mov adc adc dec out (bad) popf mov and push inc (bad) or sub mov in lds push addr16 clc mov rcll divb in or mov (bad) cmp xchg sahf xorl mov inc push daa dec hlt fisttp pusha repnz cmpsb xlat dec push push push int mov insl pop push mov push (bad) fwait das xlat inc lahf lret pop xlat in int3 xor fdivr (bad) mov ds lods frstpm(287 mov nop fsts push and scas sbb cmpsl ffree inc mov fwait icebp sbb popf push or inc movsl insl call je adc test dec mov imul xchg in je push dec and push (bad) mov scas call cmp in and ret fcmovnu in pushf insl mov xlat arpl test xlat mov lret inc cmp movsb pop or and lcall sub addr16 mov test out test mov lock jg lahf (bad) push rorl cmpsb xor xor mov push cmp or pop addr16 add mov mov (bad) incb mov movb jge loop cltd xchg stos (bad) dec mov xlat xlat imull pop cmp dec mov js lret cs xchg xchg lock fwait (bad) jp mov inc mov divb inc xchg push xor (bad) xor mov jg imull mov mov sahf out ljmp fstps ja sbb pop mov pop mov mov cmp in icebp add imul pop adc clc addl (bad) pop dec xlat clc or lret xchg sub insb fmuls cmp fmul cmpsl jns fwait in stos rclb sahf cmpsl xchg lods das dec out mov or add mov in mov cmp fwait das xor and pushl pop or mov (bad) dec mov iret add cld rorl out mov pop lds xchg push dec ja ljmp push mov jecxz (bad) push inc mov pop (bad) mov rcrl mov (bad) pop mov mov cmpsb cmp pop push jl pushf or xor popf pop jge xor aad sar mov data16 or xor negl mov fwait call xchg lds fcompl xchg dec cmp out sbb imul cld push mov mov iret std jno nop sarb mov cli xchg cwtl sub sbb xor fwait push mov xor stos mov xor push frstor leave jbe roll jns xchg xchg sbb insl xor nop lods inc sub dec and std aad hlt (bad) push out cmc and stos test sub or pop add and xchg (bad) hlt repnz int3 add les xchg push hlt (bad) mov add adc (bad) mov xchg pushf jmp adc out mov mov shrl adc pop sbb cmp push inc inc jnp xchg fnstsw xchg pop and inc mov sub xor jno cmp xlat mov pop (bad) lods inc lods ljmp inc xchg fist push jp jbe insb and clc push movsb shl mov sbb jo fimul dec push test jl movsl jg xor pop in mov xor fsts jp xlat hlt mov imul fimull xor sub jo psubsw push movzwl xor dec iret test adc xor push inc popa (bad) les into pop adc js test in lret mov lds shr and cmpl pop xor jecxz leave sahf mov mov out pop pop dec lret xchg pop pop sub and sbb sahf xor sbb push loop cld enter out in pop xlat push pop ds mov sub mov lods and loop mov and icebp push add mov add inc fwait imul adc imul in test jp sar and loop lock (bad) fcomi int3 inc loop jns xlat inc iret enter add and and push and sub inc fiaddl pop pop lret out push sbb aad pop stos pop xor ds ljmp jmp pop cmp dec adc test out das call pop sub inc sub lret orl test test cwtl and (bad) aad shlb and int3 (bad) cmpsl dec jg and fnsave mov push in inc data16 les in pop scas imul sub std push (bad) dec nop push push mov icebp cmp inc fbstp push mov ja lret sbbl enter mov jecxz nop inc inc out outsb ss pop jle icebp jnp jae push mov aaa and arpl sbb jne xchg mov mov cmp sti mov inc inc or imul lods jle loop fwait mov (bad) negb mov aaa repz dec sbb xchg shl cltd and movsb fdivrs mull mov jle std arpl ds popa cmp test mov in ja insl jbe mov movsl (bad) imul jge xchg push cwtl sub test mov xor jns push iret rol sub lock inc ja xchg int3 fabs dec add jecxz mov mov shr xor adc inc faddl scas cmp push mov xor jl call or push test mov es ljmp je jg pop xchg jne pusha pop lea pop dec out sbb es lret mov fistpll jo ficompl inc (bad) lock pop repz jb pop mov mov xor int cltd sbb fimul scas jb lock hlt xor insb fdivrl pop scas adc cmpsb push clc repnz out rolb rolb adc mov ficomp add mov inc cmp pop push gs repz test ljmp inc cmp fisub or xlat cmp xchg cwtl (bad) sub dec scas and aas adc adc xchg scas mov mov jne lahf mov push js and shrl sbb inc (bad) ss xchg inc inc lods pop add repnz cmp into and (bad) push aam inc fstpl adc xchg mov test sub sti or push sub cmc push add sbb cli dec push aad push pop adc sub cmp sar pop cmp lret xchg add mov leave sahf mov pop mov pop mov ljmp into (bad) cmpsb push sarb pop mov cmp (bad) cmc fsubrs or push aam test fstl adc or sub les cmp adc in aam es pop (bad) loope sbb aas push addl jnp shr into daa repnz aaa or mov mov fidivr adc pop pop (bad) push xor mov jge and xor rcrl pop sub and dec and int3 xchg shll xchg sub insl lcall leave jae testb xchg cmp into outsl xor fs leave dec push mov sbbl popf or add (bad) mov pop test adc jb cmpsl and xor dec mov mov mov test dec adcl inc (bad) pop and lahf imull dec xlat xor pop mov pop aam scas jo dec sbb mov pop fs cs fiaddl sti adc cmp (bad) and daa lea rcrb adc xchg arpl popf fsin push lock shrl test pop arpl pop jb ds sub (bad) sbb fsubl mov lea mov divb or dec sbb popa push iret push cmp lret sbb xor dec lock jae jbe or mov adc lods pop icebp cmp push shlb rcl imul imul shl orl jmp pop orl in outsl sahf in pop mov cli movsb push dec xor mov clc and or inc imulb dec adcb adc dec sub aaa cmp test movsl jo outsb add xor lret sbb mov (bad) iret pusha xor mov cmp (bad) aam movsl mov xor add and aas mov push mov mov push in xchg gs dec xchg or in out mov ds popf data16 dec or cmpsb pop outsb push mov xchg jb xchg push dec dec cmp shll xchg movsb mov pop aad das mov sbb add xchg or pop add sbb cmp jbe hlt das (bad) jmp xlat adc gs fidivr jno mov insl xchg mov imul aas lods repz mov mov push mov push or cmp adc enter push popf call pushf dec flds pop cltd aad stos or fsubl subl push notb ret dec xchg pop push repz int3 pop inc pop pop pop imul mov sbb cmp lea cmc xor (bad) stc sbb pop cmp adcl mov xchg xchg (bad) je xor mov stos lock xor mov push les xlat scas scas out ret xor add and loopne sub out inc lods test xchg out pop lret add fcmovnu push aam jl push mull push test jecxz cmpsl mov fstps jmp jo lods fisubr adc divb inc jnp push pop fs mov dec or lcall adc xor jns push pusha sbb lds add stc and jge cmc cltd push roll repnz (bad) repnz lods push fstpl cltd jno stos mov xchg xorl scas mov dec int xchg adc je xor push push push in out mov cmc sub repz ss fisubrl add mov lods mov xchg (bad) fstpt fwait jno inc into inc les pusha push sub mov leave flds push cmp rcr outsb xor test popf imul (bad) mull ss mov add mul loope (bad) mov test mov dec push mov movsb scas pop push mov push xor bound popa lods mov inc shr cltd repnz sub jmp fildll mov and inc and cwtl jmp and imul pop mov push inc cmp fidiv add loopne mov hlt aad push cmp dec ja lods call push mov or mov push (bad) dec int cmpsb push xor sub xor xor ss add push inc jno sti pushf mov clc loopne and icebp fsubs adc xchg push or add dec add jb sbb rorb or inc rorl xor pop popf dec out movsl bnd inc stos in inc dec dec xor sub jmp in xor fnstsw (bad) ja cmp das sub push ja adc inc push rolb rcll fs ss pop sub inc fldl aas push jbe jbe mov fimull jmp arpl insl rcrl arpl mov ficompl fistpll push adc (bad) int3 or push sub es add fcompl cwtl gs cmp cmp into fild ror mov shrb mov lea ret or rcll mov add ficoml (bad) (bad) xor cwtl lret add jne outsb test jp dec mov add lahf int aam xor popa mov std fiaddl data16 (bad) xchg sbb cld out mov mov inc xchg js rdmsr test push mov pop out add (bad) jge adc mov mov inc mov adc xlat jno push loop pushf fisttpl add (bad) repnz and mov push adc and xchg int3 lods adc and xor scas pop cs imul and cmp cmp fistl mov not push out mov inc and jle hlt mov and shll (bad) lods mov sbb iret jae xchg bswap mov sahf je loop test test pop sbb subb xchg cmc jne dec push loopne mov or and pusha pop sbb sahf jns jmp push mov movsb out dec lea aas mov push xadd and cmp xchg mov mov jmp clc xchg int3 out xor dec pop std jge push xor je add cmpl test xchg pop push insb jae xchg insl lcall out sub adc adc in sub gs mov push aad pop push pop cmp fsts or jbe xchg rorl aaa ret cmc pop xchg sahf mov imul repnz inc test adc xchg cmp push or stos pop mov mov loopne mov mov mov jmp dec icebp dec (bad) cmp cmpsb dec aaa in pop xchg xor jae dec mov test mov fcoml fs je xor xchg mov inc stos mov push mov and xchg sub inc mov xlat (bad) push xor (bad) jle icebp lahf dec loop sub enter xor xor inc cmp mov mov imul push aad sub arpl mov in in rclb test push mov outsl cmp call and loope cmp push loop inc mov sub pop rcrl aad (bad) mov pop cli pop sbb in jecxz dec xchg in and fldenv dec or inc cltd mov ljmp repz cmp mov fstpl shr cmp mov aaa loope fsubp jno outsl (bad) in pop push outsl push sub cld mov pop inc dec lods loop in push (bad) lods dec xchg mov ret daa jb fidivr and xor push lods adcl test sbb pop mov sbb jp ret dec pop mov stos into and sub (bad) jae sub jnp (bad) jg xchg movb cltd andl cwtl cltd jmp inc cwtl or push cltd jl cs gs std dec mov push shrl movsl jns mov jmp lods rorw adc icebp cmp aam cwtl pop test dec mov frstor es out and jb xor mov scas dec mov std icebp out jae icebp in arpl mov movsb adc inc mull js lock dec (bad) xchg icebp scas sbb push icebp incb xor mov iret shl bound popf mov mov lods loopne rolb rorb pushw inc or add (bad) xchg pop xchg or lods movsl xor stc dec pop stc pop fimull xchg pushf outsb mov mov pop xchg sbb gs jb mov mov adc xchg cmp aam inc pop adc push sbb (bad) xor pop aas das sbb ficomp cmpsb fcompl std fwait ja (bad) dec loope dec push mov xor pop push inc push pusha out (bad) into add jb cmpsb cltd fisttp sahf stc (bad) addl shlb imul (bad) repnz lahf push mov add ss pusha mov mov (bad) jecxz jl add je add rcr mov popl xlat push cmp mov aaa add dec outsl loop pop sbb roll out fbstp sub pusha je (bad) into lea lods js mov imul xchg imul jno cmp xchg xchg ja mov scas mov fldenv add (bad) aad and lock push aad jb cmp (bad) jo adc in out in sbb mov xor mov xchg cld neg dec or clc and jns (bad) sbb das int push mov addr16 jp push dec stc scas addl push addl xor icebp add xchg push sbb iret stc cmp sti inc mov inc adc hlt std outsb mov out push inc inc adc std loopne add out or mov fistp cmp pop and ret adc lahf dec push jne enter xchg arpl cmp insl daa shrb pop mov inc movb pop mov ljmp inc push js iret push mov std push rcl jg lds (bad) mov jo sbb fcompl int ror cwtl iret loopne shrl mov or lcall add adc pushf sub aam xlat adc dec jb cmp cmc dec fisttpl cmpsb dec mulb mov imul and aam sub jns mov maxps sbb scas inc mov jno cmp sbb sbb popa (bad) xor pop mov push adc rcl cmp xor rcr push cmp imul cmpsb add cmp sbb cmp stos ljmp add mov mov lahf sbb sti ret pop push or jp mov sub in jnp xchg cmp aam cld add xchg fwait lcall inc sar cmp (bad) dec pop pop xchg test sbb fst jnp aaa adc pop xor stos mov sub mov cli sbb and icebp fimull jle jmpw mov leave arpl pop les cwtl jo sub pop sub mov ret dec rcl test xor xchg int mov inc mov je jmp cmp xlat mov in std punpckhwd xchg in nop xchg lret jmp or sahf gs enter push or jae sub movsl les negb mov lds insl or std xor push xchg push jmpw xchg xchg push aas add idivb mov insb aas (bad) popl std movsb je lods div (bad) in push mov pop xchg cld icebp (bad) sub fstps or outsl rolb inc pop pop mov gs xor push push jle push dec xchg xchg mov or ljmp inc leave mov cmp sar cmp jge jl or inc mov jmp ret mov pop gs mov add stos loopne daa pop and subb pop dec sbb sbb out lods mov test mov mov and xor and popa pop lock out (bad) fisubl adc popa inc push cmp mov cmp (bad) test stos pop movsb add and test cmp mov mov sbb sub jle loop xchg xor lret and iret pop cmc out mov lcall mov pop adc enter xchg and adc mov aas fistpl mov (bad) lods ret lahf pop or mov sbb xchg sbbl leave ret cltd insb out sub inc nop dec mov fidivl popa mov mov push std push out mov add lods shll mov push (bad) inc jmp add movsl dec je xor out je int3 sub adc sar push data16 outsl cmp (bad) xor test rorl sar fcomp mov mov adc pusha cmp inc xchg lahf sbb cmp add in pusha lock xchg pop arpl push into lret dec sarb fnstenv icebp ljmp pop inc leave std push cmp pop push test jb int popa xchg dec mov cmp jbe mov jp fs jg inc fs lahf out xchg adc dec cmp je aad cltd inc jl outsl shrl das and test cmpsb xchg movb xor shrb mov gs cmp dec pop les jne jp stos int3 mov bound xchg mov lods (bad) xor (bad) xor inc divb xor pop pop ljmp (bad) or mov fsubl (bad) cmc mov or inc adc fcoml imull fistpll mov arpl jns sbb faddp pop mov daa aad mov cmpb dec es and cmpsb mov into hlt in out repnz mov jle pop lock push pusha nop mov test pop fcomps roll icebp mov adc sub xrelease fnstenv out jge (bad) imulb fist stos leave test and push fildl insb arpl pop inc or or in jne cltd std and fsubr adc mov push mov rol mov icebp in pop lcall out jmp gs cmp in fisubr rdpmc cmp xor xchg xor fbstp sbbl cmp adc (bad) (bad) jae push inc or sub sub sbb pop mov in ror movsb popf sub sub mov xor fsubs repz inc cmp imul aas and lea mov mov lcall jno pop xor jl cmpsl xchg and and dec addb mov outsl orl pop repz inc pushf in fcoms mov lds or ret pop push in test int3 and out and jns lods movsb dec (bad) icebp rcrl leave lea dec adcl inc dec punpckldq inc jmp pop inc cwtl lods sbb shr mov jge insb adc loop rcrb push (bad) mov test mov in adc call cli mov cld fsts clc mov or out jmp mov int3 int3 fprem1 xlat shr mov mov mov out mov gs test ficompl ret mov push std (bad) adc jmp jb cld (bad) xor mov xchg hlt pop in mov dec jge jae or and sti test cmc push lret adc push imul gs and lret mov cmp aam jns mov jle push lods jnp pop loopne jo mov popa mov in jg cmp js xor cwtl fs ret dec mov sub ret lea bswap push inc (bad) addr16 xor xor lods and or movsb (bad) pop jl or pop jl ret mov aad and (bad) ljmp repz repnz xlat jp test fwait addr16 fsubs and jp inc lea dec sarl imul outsl add inc popf and jnp leave sbb mov int jle adc mov sbb pop push jnp inc ss hlt stos pop rcl rcrl dec std sbb clc cwtl aaa in nop mov jmp repnz rorl scas lahf add xchg mov (bad) (bad) pop test inc fwait and or xchg bound sub sub mov add ret lock (bad) lret mov xor cld sbb add or dec jle ret (bad) sahf pop (bad) xor (bad) ret ffreep and mov imulb lcall nop xchg out lea push mov jns lods mov sti or shll mov sub lods (bad) loopne in mov insl mov sahf or movsl pop fs cmpsl in leave jae cmp dec repnz cli insb and enter xor inc pop ds rep lods adc decl lea test xchg xor out or je jp fistl test inc mov jno (bad) icebp push fsts jb in sbb out xchg loopne xchg adc into and and mov fucomi dec aaa inc prefetch shrl xor lcall jb cmp lret aam bound cmpsb jmp dec scas call cmp push xchg lahf into and fmuls mov mov jb imul mov xchg cs lret arpl incb loop jl leave clc fs movsb inc (bad) aaa push fdivs xchg sbb xlat lret push (bad) xchg jle inc arpl push mov fbld inc movsl cmpb aaa mov popf push adc mov data16 das cmpsb sub scas fisub or xchg jnp loopne jl mov xlat insl xor fs add add sbb sub fiaddl jecxz pop or jne sbb out xchg dec sar int3 push clc or outsl iret aam adc xor into fstl mov mov (bad) xchg cwtl mov dec addb stos add jmp push jne mov jno add jg add loope pop sti leave test cmpsb inc sbb pop pop xchg stos out fadd sub sbb in xlat and call bound sbb inc push lea and sub out dec fwait dec imulb lock cmpsb lods jmp hlt cmp adc xor popa aad lret movups add prefetchwt1 and xchg rorl movsl enter mov int3 add push mov pop or push sub push imul ss out jo enter repz in dec es or xor inc (bad) gs push xor xchg pushf inc push fcom dec mov cs push sbb stos dec mov adc mov push in and inc cmc mov pop or adc movsb cltd aaa xor add mov mov leave adc popf aaa aad dec rcrb mov jecxz je shrl push out inc xor imul push lods (bad) mov inc loope sub mov inc fadd das lahf mov rol sti xlat int3 cli shrb and jmp in (bad) rcrb xor adc lret nop mov jp inc (bad) icebp fldcw pop fmuls ret in xchg test loopne pop test xchg sbb lret mov or cmp jp fwait js sub xchg insl daa jmp xor cmp insb rclb ds cmpsl inc sbb pop inc ljmp std jmp test pusha fnstsw movsb and lea xor cmpsl hlt dec in inc jmp in data16 adc xchg cmp xchg sub cmpb dec and divb mov nop je stos push aas fsubl lahf aas adc push push adc mov mov sub jmp pop jmp jge test jne jle sub int3 push inc pop out jae aaa enter xor cwtl aad cli jmp cmp mov lock jle or lret xchg jle sbb es push fsincos ljmp ja dec sbb pop ds mov add enter add scas xor push add js ret mov xor pop push ror jbe mov mov js inc fwait mov addl jns inc add inc leave pop push jmp mov cmp ret jbe cld or inc dec cmc inc cltd xchg test popa push cmpsb xchg pop ds cmpsb jmp cmpsb adc adc mov imul add cmp jmp cmpsb int and add or imul roll dec or sbb mov jno ds sahf rcl cld popa fistpl xlat std or rorb popa pop xchg mov add icebp push adc lock dec xchg insb imul or leave jl je leave cmp mov pop ficoml int3 in out xor mov adc xchg mov in scas push push or test (bad) (bad) jp in mov and or mov in jnp mov lds pusha cmp xchg xchg pop and sahf cld or sbb mov jl scas nop or inc in xor ljmp aaa std idiv push (bad) aaa mov fcoml add lds aad insl sub ret add dec repz mov mov push pop mov gs dec in test shlb mov in push or imul sub mov out jecxz mov fs popl cmpsl lcall pop fsts pop pop sub das adc sbb out sarl js sub and clc xor push fs adc jg or add sub inc push mov xchg popf pop rolb and rolb mull jp pop xlat (bad) mov lea fisttpll cmp jge dec addr16 hlt pop fs aad push insb mov aam loopne push push mov mov cmp out cs push inc aaa sbb rorl popf orb and dec push mov inc aam xor out dec pop (bad) loopne sti es clc push xchg std pusha mov lock xchg cs jne pushf (bad) (bad) inc mov lahf adc outsl cli push adc jne mov (bad) jle pop or imul or sbb in inc xchg cmpsb jno sub fdivs stc and jo notb mov and sahf or dec movsb into iret mov mov lock pushf and lahf sbb mov ret or gs cmp xchg lods outsl jmp or insb rcll jmp jg imul mov je sbb xor xchg add mov mov pop xchg push cmpl pop es fnstsw pop out pop test imul sbbl lcallw mov call mov sub sbb fiadd ret sbb cmp shlb dec sbb inc sub popa mov mov fdivrl add or mov mov xorl imul pop and and or cmp repz jmp cmpsb cli ds pusha cmp adc pop dec add or test leave stos repnz popf pop loopne push aam std nop push and pop subl pop mov aad inc imul fsubrl sub nop add loope (bad) pop movsl pop sarb arpl insb xlat sub inc in js dec test (bad) js loopne rcll xchg sahf cmp cltd fcoml xchg (bad) mov cs mov (bad) jb push mov imul je in cmp xchg pop mov arpl sbb xchg in mov test lds lock pop dec cmp mov sbb int adc sahf adc jne lock popf je clc push or inc dec outsb pop or movsl lds mov (bad) enter scas push jbe pop xchg or fsubr inc imul xor jae popl pop add cwtl jb xchg sbb jecxz cmp dec mov notb sbb lea popf mov movsl ljmp adc (bad) xor pop cmp cmp add ss add push xchg jmp xchg stos mov dec notl xchg mov outsl sub nop pusha cmp and add push sbb mov lea cmp lods jne mov sahf adc pop fstp xchg jb sbb scas pop mov add xchg in add out loop repz (bad) in pusha jbe fld enter ret pushf inc outsb jge adc pusha pop das push stos (bad) fyl2xp1 pop lods ret mov jg inc mov mov dec add dec lock sti mov into jmp xor xchg or push jge mov sub cmp mov inc in insl pop gs test enter ja mov xor inc dec push cmc les lds insb cmp pop adc frstor pop out add loop andl pop cmc stos rcr cmp mov cmp icebp jecxz sbb test adc insl outsb sbb add lock (bad) out aas sub mov fwait lret movsb mov cs scas adc xchg out push jge jle (bad) enter xchg pavgb push push dec inc fidivl and or xlat dec jbe popf mov push out jl repnz (bad) jg cmc or dec pop (bad) push xchg outsl in mov and mov adc jp mov scas fadd sahf inc mov sti or or jbe pop sbb push addl popf cli xor jnp xor and pop inc imul dec test sub mov jmp sahf loop push add xor cli iret mov clc ljmp xor insl dec repnz push mov pop push cltd push jno inc (bad) call int pop sbb mov rcll mov pop jno xor mov xchg sub add rol daa xor adc jp add pop insb addr16 scas mov sti xor mov inc out and test dec sbb mov inc jecxz mov mov push (bad) addr16 sbb xlat sub xor stc sub lcall imul sub lea iret cli hlt jnp push js or sub ret insb sbb jg rolb iret push sbb adc xlat mov cmc and xor call movsb bound jecxz sbb std push stc stos fdivl (bad) sti stos lea imul std rcl jg pop stos pusha push out lret out xchg inc fs lcall mov jp pushf adc and sbb (bad) xor jne movsb (bad) out mov pop sub fdivrl in jo push call cmp addr16 xchg test rcl aam fwait push shll fcoms dec fnsave pop cmp push lods inc sbb and ja pop insb and cmpsl mov dec repnz repz or xor jmp sub pop sub or divl or imul jae mov scas (bad) cmp dec xor push inc insl mov mov xor into mov lahf mov ljmp cld das inc lahf stos inc fimull ret mov in ret daa xchg not jae pop or gs mov icebp aas bound dec (bad) repnz cmp cmp push adc mov fs jmp ja fnstcw aaa (bad) cltd decl orb mov je xchg mov movsl mov mov or aad inc cmp lahf outsl call xchg or in cmp push sbbl mov push pop in call insl or jmp and pop lahf push in out (bad) test xchg fist xchg (bad) mov add out jp pop push addr16 mov jge cs dec bound xchg ljmp cmpl sarl jnp xor add loope mov ja and int3 into les jmp pop imul push and pop or lret idivl jae push (bad) in pop cmp add xchg popl cltd pop xchg sbb add inc cmpsb dec ds insl aas dec xchg dec adc pop mov pop (bad) (bad) pushf ds fistl test insb and xor adcl lods inc xor mov (bad) movups push stos cmp xchg lds sbb push mov addr16 jle or cmp inc sub cmpsl xchg sbb pop test inc lock in mov xor loope popa push adc stc cmp cwtl mov sbb in aas movsb sahf ret (bad) xor clc xor or loopne cmp cmp dec or xor jb dec (bad) add add mov and push push or sbb add sbb push (bad) popf or mov ret psrld push aaa rorl xchg idivb pop jmp nop add mov inc fdivr sub sub xor xor mov inc xor stos mov lcall xor fwait sbb mov mov (bad) xchg insl pop cmp xor sub out mov and orb imulb push in js adc cs mov jl adcl jmp mov test xor mov lods pop nop daa jo sub xchg push push fcomps idivb scas add arpl jbe aaa mov stos pop dec stos pop data16 sub adc in cmp push sbb xchg mov mov sbb popf imul mov or dec out imul repz and lods sub out xor jae and iret mov mov cmp andl aaa stc dec add sub cmp (bad) mov scas hlt inc imul and sub bound adc loop fildl loopne jo push inc cmp fwait sahf aaa (bad) mov je popf scas inc xchg aam les sbb cld fsubr hlt mov cli test jp or or cmp push pop pop lods pop idivl out mov loope icebp sbb mull sbb mov mov js fisubr and ret popa out lcall cmp pop popf fldcw rorl and mov mov ja,pt fsubrs sahf movb mov mov (bad) mov fbld popf insl mov sub (bad) add ret xlat je sarl cmpsl stc pop pop ja and push jb dec int jecxz add sub outsb adc xchg push add mov out cmp push iret or pop mov mov popf dec pop dec loop sbb xchg push xor adc mov dec mov adc cld jg mov jae pop frstor out xchg sub cs cld mov mov cld sbb push jp roll fwait loope jg inc push fldl ljmp or inc add test cmp neg outsl and pop les outsb or xor cmpsb imul imul imul push pop jle mov outsb jb out pop cmp jbe repz lret xor dec lret pop pop mov push insb xor test out dec cltd cmp repnz or (bad) (bad) xor adc leave int3 mov mov mov xchg xor fstps lods movsl mov (bad) sub dec call es (bad) mov dec je dec or inc lret inc cwtl mov sbb lret jp sub sbb fbld lea arpl nop jno sbb stos insb jns mov dec aaa nop mov hlt mov decb pop pop xchg call mov cmc jge popa out outsl inc xchg mov je loope sbb xlat inc fimul imul pop (bad) cmpsb rclb test xchg loop jae arpl mov dec xlat ss imul jmp pop cmp add jnp add adc mov jmp popa stos aad aaa mov imul test pop mov repz enter sbb adc into aam push in cmp fwait cmpsb jmp (bad) cmpsb adc push repnz xor jecxz es aad sahf jae cmp roll xchg xor dec jp and arpl or out movsb or loop movsl add (bad) pop add ljmp pop icebp jle dec and or lahf pop ret cmp sbb bound and fstps push mov xchg mov add std mov push (bad) xor pop lret pop sub jae (bad) xor push jo mov test inc lods sahf imul repnz jge adc (bad) cmc mov sbb jae mov xchg xchg nop cmp jmp jmp dec sbb jmp (bad) lock or sub jnp in enter adc sarb xchg mov and fs xchg xor lret mov xchg repz orb lcall add lds fimull jle roll adc in fwait cmpsl or test bound mov mov fwait test js lds inc inc dec adc les cmpsb (bad) fdivs cli lret orb dec and mov outsb clc cmpsl lret cmp stos fidivl mov push cmpsl xor (bad) test adc pop mov pop clc push push and add jge in adc lret pop mov js xor mov test into (bad) out dec in xchg stos lret dec xchg cli xchg sbb mov in fcmovnb inc add and aas imul pop adc jge jge scas pop aam pop ror cli (bad) jne fistpl jo sub jns lret add std mov xor ljmp and and mov cmp adc dec sbb test enter bound add add int sbb fldenv cwtl test stos setge fisttpl sub daa mov adc inc pop loop data16 lea push and arpl in das hlt pop or jge fadd fldl rcl bnd xor pop outsb movsb add in adc mov mov sbbl cs mov mov mov ljmp cwtl scas jbe,pn loope mov test addr16 xor sub push pop scas lea fsubl call mov iret out xchg jle jne fsubr test inc jnp jge (bad) sub xor es lock add bnd in loope gs sbb add fiaddl mov ret push or sbb mov sub (bad) fucomi lahf sub nop inc mov inc xor jl int3 mov push jg jge clc push push mov cmp mov mov outsb jo dec test aaa out fmul jp lods lea or loop sbbl sti out push das cmp sub dec pop ficoml jl sbb sar stos jbe add inc adc xchg les lret or mov cmp icebp add popa inc aaa add jge repnz push mov push (bad) cmpb or call pop loop in pop gs xchg andb pop ss cld adc ret or iret aaa inc stos sub pop mov loope add aad (bad) jns jmp cwtl adc mov cmp and fcmovnbe xchg push or daa aad outsl jae jnp,pt daa insb into cmp loopne sub pop lret repz js xchg adc xor cs out fcmovne ljmp out je mov mov xor pusha inc or aad (bad) cwtl pop std mov stc insb cs inc lds call mov cmp mov loope (bad) hlt bound adc insb mulb pusha push (bad) cmp xor cmpsl xchg xlat adc arpl mov insb or mov in loopne mov icebp dec ds (bad) fwait jo push mov sbb sahf int jno gs ds pusha fidivrl or jb and xchg ja,pn (bad) div fisubrl sbb adc (bad) ds inc lcall jnp jmp adc sub outsl add mov loope scas in (bad) dec div repz xor inc int lods pop je inc pop push jo or repnz movsb xchg gs jnp sbb pop push mov call jne icebp sahf mov lods movsb adc fwait xchg mov (bad) xor mov aas int3 push pop mov lds push aam jne pop das popa pop add sbb cmp loop sub or mov push inc sbb jmp imul repz (bad) xchg adc js enter jmp sub adc adc mov jecxz out jmp pop ficomp xchg jle (bad) ret into cmp cmp push cmpsl xchg ret insb pop jmp mov xor out mov or icebp mov hlt movsl adc fwait xlat ret adc shll inc inc fmul dec push jne and or popw lea stos add fnstcw call xchg xor ja pop les sub pop rcll orl popa mov xchg sub dec dec aaa (bad) push inc in and inc cwtl sysret sub test scas dec add inc push mov (bad) lret cmp iret cmp mov and mov cmc sub mov lea jnp hlt movsb out add add cmpb loop (bad) sbb push push in leave or lret mov subl sbb les mov push xchg cmp cmpsb nop jno xchg lea and pushf xchg out xchg pop jmp push test test sbb fidiv mov cmp and cmp iret test sub inc push xor outsl inc mov or cmp js ja popa jp,pt xor mov and es les mov adc or mov mov das xlat movsl sub cmc insl dec pushf inc idivl dec or stos dec sbb sbb lock es push jle movsl mov mov mov cmp cmp bound jne mov sub jl call xchg sub mov pop adc (bad) and scas inc adc out insl ficomp inc jo lret cmpsl imul int3 inc xchg (bad) or insl dec out mov adc jb push push and (bad) jecxz adc pop pusha or shrl pop mov cli std inc xor gs mov jbe dec jge dec inc jle repz sbb leave pop dec fwait pop xchg inc adc test cmpsb out repz in jnp,pn or (bad) nop mov push push rolb rcr aad dec sbb lds pusha mov dec or jbe decl mov mov (bad) bswap int lods stos sbb pop out fwait mov decb mov push pop movsb jecxz outsl arpl and into or sub pop pop sarb popa add imul xchg pop mov in into rorb xchg shl dec sbbl lea ss (bad) mov (bad) mov bound pop clc pop std (bad) sti stos cmp mov and xor es dec sahf fdivrl js xchg mov xchg loop ret adc add xchg test push pop je sub movsb jb sub addb pop imul nop sahf insb mov mov pusha das std or add lcall das adc xchg and xchg and fstl (bad) push push push xchg push pop mov repnz inc jae fisttpll iret daa inc (bad) aaa stc add (bad) jmp push ret or xchg mov sbb cltd pop xchg ja mov pusha imul mov mov std loop lods jge dec mov add push sbb mov stc mov jge dec xchg push jnp xor cmp fsubrl in and mov push out dec cmp cmp in cmpsl cwtl inc (bad) fidiv sti xor jecxz movhps inc ljmp pop mov pusha mov mov pop out jge dec xlat stos popf fs mov shl adc push add mov rorl mov mov or or shrl mov mov xchg lcall hlt push inc dec scas mov pop jns ljmp loope mov ds movsb lret insl fistpl (bad) ja jne das push adc out (bad) jg sarl jge insb cmp add sub fucomp fildll lock fwait push les mov (bad) iret pop mov jns fimul sar les mov xlat jo (bad) stos or xchg mov mov aad pop iret cmp adc dec xlat in cld stos fimul neg adc and ret mov adc mov xor addr16 mov jne xor lea mov jmp in xchg inc les add dec pop and xchg es shrl in dec xchg mov (bad) jb jns dec ss leave and or stc aaa (bad) jnp xchg or iret cmpsl mov in mov (bad) mov fisttp out mov pop lds and pop (bad) dec and jle (bad) jne out test adc xor inc aad call mul iret stos rcll add xchg add xchg jmp pushw aas (bad) lods out pop dec mov imul jg inc adc cmp adc sti test call add movb jno pop out btr jle sbb mov sbb mov fcompl sub idivb mov xlat lods mov (bad) or lods sub or insl xor mov cmp cmp std dec jns xchg sub int3 rol mov in gs mov add xchg iret jp push sarb push jns push jg or pop rclb dec test aam in add jg ljmp and cmp scas hlt push or sbb sub pop sets loop cltd fldenv and int out rclb xchg adc mov xor cmc aas jp repnz push (bad) sub pushf mov int3 sub je add gs xchg jo aad inc mov sbb pop dec into imul jle mov jae lods ret jns popf jecxz jmp xor push movsl or push scas nop loopne sbb mov mov pop popf std and adc mov xchg (bad) or jne xchg mov sbb sub sub and and dec popf sub insb push inc das or sbb cltd hlt jnp notl sbb imul movsl mov int fsubl (bad) ja (bad) xchg std cli arpl sbb adc (bad) jo jnp test mov ret stos repnz inc mov mov lds nop cmp jecxz mov add loop rcrb ret mov in inc push nop call jl xchg addr16 add cltd scas enter aaa push adc push or lret fwait mov or add (bad) fsubs inc dec decb (bad) in jae add sub subl sub sbb iret popf lods mov mov mov div add push cmpsb dec das repnz cmc insb add sahf adc mov testb repnz pop loop pop mov test and js shlb pop xchg rorb (bad) or push xchg cmp mov dec dec rol jae or jecxz mov jmp xchg dec push cli jl scas lret push (bad) leave hlt insl (bad) mov in test std rol clc jae test or sub lcallw call push pop shll out (bad) (bad) bound mov push xor pop data16 aam ret lds ss jge xchg in popa aas lahf fsubr fmull rcr repz push in ret leave jg cmp inc iret popf adc add pop nop loop int3 out push fidiv ret out ja ljmp call mov mov adc mov mov dec cmp dec leave fisttp sub jg pushl mov adc pop mov adc cmpsb mov push out or adc push int js cld (bad) mov inc adc stos lret sbb pop fs insb clc add ret xor rorb fisubrl ret imul push dec add in pop ja dec mov jle pusha in sahf mov mov mov cmp icebp lahf pop movsl cmp or pushf or or and out mov inc jb bound rorb shrb push (bad) xor insl ret pusha mov lahf in jmp cwtl cmp and loopne icebp pop cmp sbb cmpsb add lods pop pushf pop dec cld sub (bad) or and in sub or iret in stc lock das or mov dec adc or stc push pop mov sbb in mov inc cmp pop addl and fsub xor daa xor cs cld pop xchg push adc push mov xor sub xor (bad) mov sbb mov inc push mov and and enter xor pushf (bad) divl push adc sub sub divl or dec daa dec inc cltd pop subl es mov movl aaa movl pop mov adc addl aad aam push mov insb (bad) lea push js mov mov add dec into int3 fsubp cmp adc repz jl mov sbb or inc subl push mov js push pop push lcall mov jne push (bad) cli adc and jmp push jne fstpl dec out xchg push fisttp fldcw xchg pop jmp xchg (bad) jmp jo outsl push gs and xchg les jmp gs push fwait fwait out sub jnp jmp aam es scas inc lea stos sbb mov in or sbb adc cmpsl es sbb ds cmp lahf and flds nop add adc cmpsb cmpsb fdivs insl mov (bad) popf les inc (bad) andps cmpsb inc cld sub ds arpl push out stc mov fwait testb pusha add gs ret sbb popa loopne pop addl sbb (bad) ret inc mov insl cmpsb jmp imul pop test pop mov sbb fbstp mov or sub arpl pop pop fildll xchg sti or es jae sbb pop inc mov (bad) jne add cmp (bad) mov jle popa jbe adc aad dec hlt fsubs loope jnp call call sbb add daa into sbb sub loope jo pusha out jmp dec outsl cmovp test and fs out sbbl mov aad pop stos into sbb cmp mov cmp leave push (bad) mov ret mov add ja movsl xadd daa mov dec call cwtl lods int3 repnz int out (bad) mov clc jb (bad) sbb jmp dec mov fwait out pop jno dec xchg pop addr16 repz insl pop push repnz (bad) in lods sbb es xor inc jbe jb inc int inc aam mov fwait mov and aas out in out push (bad) xchg xchg popa and clc or les dec out es pop add cmp push aas decl cmp xchg mov out (bad) ss or jp adc stc inc and jle aam add scas mov test dec pop pop into pop fidivl xlat pop rclb outsl fistpll es pop in pop pusha push iret nop push sub xchg aam jno loop jmp out shrb inc fsubr scas xchg pop ja and add mov fsts pusha mov insl (bad) loop cs hlt dec jl mov sub mov and (bad) call ss push inc mov loopne ja cld je sbb mov lods push inc sub sbb push pop imul in repnz and jge out test pop movsl adc mov daa hlt mov and fmul cmp mov push push push xor cmp and push cli mov aad and push sub mov aas xor imul rcll loope xor cmp inc (bad) stos aaa xor mov (bad) cmp xchg jle pop inc inc adc int mov lods jb cli adc dec dec aaa int3 fdivs xchg cmp inc negl (bad) iret lahf sti xchg pop sub mov bound pusha mov sbb popf fwait lods aad add xor and or dec jmp fwait and cmp popf mov repz aas cmc out add iret orb dec clc add pop adc xchg mov fs dec fisttpll loop push push ret mov and jne add cmpsl pusha mov add (bad) (bad) dec ss pop loop test push repnz out jmp scas fnop shll and inc shr sub fistl mov ss fisub nop push push sbb stos mov cmp xor outsb cltd pop sarb out xchg (bad) out jmp das xor popf cmp out ljmp xchg stc pusha daa cwtl cwtl fcmovu jl sbb jb aad xchg jno xor mov fistpll add sbb in outsb push inc dec xchg inc push push int pushf adc dec (bad) pop stc add xor loope mov jge mov pop inc stos push xchg and jg cmp mov jne push repnz loope push jecxz sub pushf lcall xchg scas cltd push pop ret lea add mov out push fnsave insb insl jle js movsb ret pushf jecxz push addr16 cmpsb dec adc adc sbb rcrb inc out loop mov stc xchg adc jecxz xlat mov pop (bad) rcll mov stos adc ds int3 (bad) pop jae jmp sbbb mov push cmp call xor add jae push dec push mov lcall cmp test int3 and push js gs xchg sub popa mov xor ret mov push push lea jmp mov cmc push in xchg in dec inc and leave dec inc jmp pop adc arpl jp and ret xor add cwtl or mov arpl stc mov fwait xor jmp (bad) dec sub test repnz cmc xor ficomp push push iret mov pushf xor adc add dec ss in jbe push xchg cmp push pop dec mov push jle xchg lods arpl dec loop ds (bad) lea mov in sahf test fild pop ds sbb xchg sub nop push push push add cltd cmp shlb push xchg sti call nop insl repz movsb cmp test dec cmp mov sti sub sbb js mov loope xchg and iret jbe mov sahf inc scas sbb jle test repnz cmp int3 insl mov js cmp mov dec (bad) jg repz cld cmc outsl test dec inc (bad) ljmp and call lret repz movsl (bad) lea lret aad push stos scas push sbb add mov dec inc leave inc in sti inc sub cs int pop add mov cltd mov add test (bad) push sbb adc sub out pop or cmpsl adc mov dec mov dec adc and enter ret movsb pop lods xor lahf stos cwtl jne stos addr16 fwait pop jmp push (bad) jns mov dec pop mov js pop mov mov mov (bad) stc cli lcall mov cli lock out mov inc cmp adc outsl gs pusha xchg (bad) aaa insb loopne push mov and pop cmpsl sub pop fcmovnu pop int lahf stos pop jnp mov mov cmp inc and pop lock xor mov adc es sub pusha (bad) sar aad xchg ds mov dec jg adcl cltd push and jb outsl out outsl push outsl and and stos xor outsl insb inc frstor mov test adc push scas packssdw push jo lcall mov rcrl lock and pop fwait cmp popf or imul (bad) pop sbb cltd loopne test in push test add mov add data16 fstps in xchg xor pusha dec arpl mov movsl scas adc xchg xchg jl (bad) ds les sbb into decb in call inc pop les sub dec pop xor sar sub push popf clc sbbb popf cli or decb addr16 dec pop mov or adc movsl (bad) sarb mov inc sbb ret mov sub neg test jl mov push outsb dec imul nop cmp test xor inc out push sbb sti xor hlt mov dec mov sti mov imul jae adc jp notl push mov cmpsl adc sub cmp mov adc xor out push fisubr es cli cli inc jno cmc ljmp and mov dec js pop inc and es and pusha repnz test add inc jle inc fcomp clc pop sti or ljmp cmp cmp dec lods mov lods inc xor dec in push mov stc push inc push pop mov int3 push pusha addr16 pop outsb popf xor dec pop pop xlat (bad) sbb loope pop sbb cmpsl stos int3 mov out dec daa pop push divl mov in dec sahf push mov dec sub jmp into mov cltd pusha or dec daa iret out jge cmp adc vunpckhps (bad) xchg adc sbbl iret int3 repnz es jne (bad) mov sub sti and ja mov mov fsubrs fstpl push sbb (bad) and subl dec jg sahf push and aad cmp fistl hlt pop mov dec push cmp aas imul shrl ds mov mov in and iret sbb aas ret push lcall popf nop inc loop add stos mov jnp jo ljmp sbbl cmc sbb ja pop test sub sub call (bad) lods rorb or test enter loop and in push jmp pop lcall dec mov or and ja iret iret jmp mov add pop outsl notl pop xor jmp adc jg mov cltd adc movsl jno cmp cmp sbb add xchg in push inc fistl mov add fbld lret aam sub mov dec sub movsl mov mov mov jnp rcrb pop dec sub mov jne pop sbbb xchg cwtl jae in cs das fiaddl xchg cmp push push jg mov jg inc fidivr xor hlt adc test cli sbb mov pop ror ds ljmp push lock add lret fcoml push xchg imul test fcmovb andl adc sbb lcall fdiv push loopne out inc testl adc fsub cmp lret jns add jbe push fiadd mov imul aas leave adc sbb scas xchg mov and xchg fadd jo mov lcall mov cmp jns inc (bad) sbb aaa sub aad add cmpsl addr16 fdivs mov imulb xchg adc and add dec mov std loopne pop and mov dec sub enter mov mov mov cmp and loop fistpll and out add sbb mov inc inc sbb lock inc dec mov mov pop push lahf int3 cwtl pop mov stc dec cltd psrld aad rolb loop mov ret scas sub sub jne sbb jae std sahf orl pop std repnz push jne push sbb pop xchg xchg xor sar pop sarl mov jbe rcrb mov mov or enter ja sbb negb jae xchg cmc mov stc jmp fwait lods lahf jmp jb aad test xchg lock fcomps cmpsb ret xor adc stos sbb and dec loope pop insl inc lea push sbb insl out scas pop movsl nop sbb movzbl dec pop ljmp add and in out mov adc sbb push sti xor test and jnp cmc rolb cmp icebp inc inc push cmp dec jno test and push (bad) or fist add pop fwait test inc jmp sar inc sti fldenv mov sahf sub mov lcall sbb lods add nop movsb sar and xchg lea sub mov pushf adc ror pop mov jbe mov sub cmp jl (bad) adc jl out xchg lahf add mov mov sub jno xor mov push mov inc test mov call adc lret ret add movsl js icebp nop aam insb push add out mov dec je push dec xchg ljmp sub or arpl jns cmp test xor dec pop adc hlt cmp lods and popl js lock sar xchg mov dec sbb mov xchg push jb jmp aas fidivl nop es lahf pop mov (bad) mov hlt dec dec xor popf pop mov call (bad) ss lods jbe pop cmpl pop imul push jae mov ret adc dec sub mov les ffreep es mov mov bound adc leave pop and out ljmp popf sbb pop fbstp in mov lock imul xor je mov add dec int3 test dec pop adc lds or pop enter fxtract jbe cmp fstps jno push dec push xor add sbb push (bad) mov bound mov lea adc mov jl add pusha fcmovbe mov rolb (bad) orl (bad) pop push (bad) data16 jno pop mov testb popf pop sbb adc lcall mov add lods sbb jl mov (bad) sub jle mov imul inc out nop xlat in scas pop dec test jp and lods js inc test std and xor lods mov xor sbb mov xor or push in sahf sbb inc aad dec mov es test inc lea dec cmpsl rorb xchg push and popa mov lahf addl enter shrl or fsts adc clc jno sub or sub test iret pop ss pop out test or inc xchg pop fsubrp cmc out lcall dec push outsb pop cmp or push (bad) lods fsubl inc dec cmp (bad) movsl ljmp fstl movsl xchg dec sub inc push repz sub repnz xchg dec adcb dec stc push adc xchg lods iret dec jae and psubsw call insb sub adc fnstenv or loopne idivl inc mov mov xchg arpl iret mov orl mov add jg inc push xchg daa leave sub ss rclb mov sbb mov inc arpl and (bad) sarl add mov or call sahf sbb pop (bad) dec mov xchg jno jp adc dec cmc sub incl (bad) (bad) push out outsl sahf pop mov mov lock mov pushl adc loop out cli xlat xor aaa imull or int3 jmp push call ljmp jecxz (bad) xor (bad) dec jle push cmc jmp xchg or or push mov sti test push ret pop loopne mov lock push mov sysret (bad) mov adc xchg dec scas (bad) jno test in mov test mov aam add ret sub pop and sahf adc jo inc lret lods push lock std dec roll xlat lcall jnp adc inc andb mov test inc xchg mov xchg out stos ljmp ret pop in xor test xchg mov xor arpl sbb paddsw mov aas out or cmp inc orb xchg lret cltd jns mov xchg mov sbb js call lret in call inc jbe mov mov mov enter mov loop fild lods test inc inc mov ss std xchg cmpsl outsb fsub cmp or insl inc sti les mov das xchg mov dec sti imul rclb cltd loopne add ret lods pop daa mov test mov dec out jb or mov push sbb out xchg ret jg outsb adc and imul fwait mov idivb inc mov push cli adc jmp push rorb dec jb inc xchg xchg out xchg sarl in sbb fsubl inc (bad) out mov xlat xor stos (bad) mov nop movsb adc stos sahf push sub adc lods and je mov inc stos je xchg dec out add push cmp jbe in pop mov lock mov sti push xchg sub pop mov in xchg out mov in push mov lahf mov test mov loope popf xlat jbe pop mov jl mov (bad) cmc push xchg mov cmp jbe mov ret mov dec aaa pop jle xchg stos test mov mov fsubrs push xchg push data16 mov lods das mov cwtl daa test ffreep cmpsb mov fistl sbb pop jo out cmp xchg aad into shrb sub (bad) rolb cmc ljmp push les inc inc cwtl aad pusha aam jle pop mov inc push mov mov push les mov inc lds and data16 out sub fistl xor out lcall shlb cmp imul push cli into adc mov aad xor xchg mov (bad) in pop dec js orl pop mov xor dec push fisubrl rol popa ljmp cltd inc add cmp rcr mov ja add mov popa and lds daa jne ret orb cltd daa cwtl mov jnp inc mov lret movsl inc mov dec leave and push pop popa and paddb ja mov lods fldt cwtl xchg inc xchg iret and test xchg push jbe mov outsb jb pop or xchg stc gs les (bad) icebp mov sub lock int3 xchg imul xchg popa cmp jno scas jno mov mov or mov dec sub je push popa mov adc or xchg jb inc sbb repnz push aad and lret call fs out adc dec push loop pop rcrb mov push nop sarb cmp dec pop adc push aam jo mull mov or ret inc jbe ficom add mov sub pushf ja cld out mov ret sti inc ficoml inc xchg sbb sbb out (bad) or pop and clc xchg stos push mov sbb jecxz test or lea (bad) push sti aad pop jl lods dec js ds and sbb jecxz cmp jmp mov mov push xor mov loop cmpsl push xchg xchg icebp jmp (bad) les jmp mov insl xlat ret xchg sub popf mov test roll push mov xchg aas or stos int3 scas jb lds fcomip sbb adc pop test or andb dec (bad) test inc xor fdivr data16 lds shrb andl icebp xchg sbb or pop or in push xchg bound sbb in insb mov in pusha mov mov ljmp push push mov ja pop frstor cmpsl pop push or shl ja test cmp rcrb mov mov ret and gs adc jp xor mov scas mov sub in gs or outsb push subb dec adc js or leave loope ds mov movsl ljmp (bad) arpl sub fcompl dec mov lahf dec xchg aas in cmp and stos je fstp inc dec pop pop dec fxch mov (bad) fmul jnp pop (bad) push cmp dec cs dec adcl or cmpsl jg xchg cld fistpll clc dec inc xchg adc imul add lds pop push hlt sub adc push push mov jmp and sub (bad) enter sub mov or aad leave add fdivl jne lock inc aam xor call inc mov gs xor syscall jle jmp add iret mov roll xor adc (bad) movsb icebp xchg test jl cmp ret dec xchg mov jb outsl sub mov imul sbb dec dec pop call aas mov pop mov dec scas push loop enter sbb mov mov xor movsl or push pushf pop pop sub stos inc and or inc cmp in stc fdecstp push dec dec xchg xorb xor inc mov pop (bad) movsb sub std dec cmp and or lock jle sbbl (bad) clc pop xchg ret mov pop inc xchg mov popf mov hlt or (bad) scas mov scas fnstenv outsl fbld in jno and lret clc loop aas jne xor dec inc lret (bad) lods push lods adc repz out aaa (bad) movsb mov push xchg adc leave mul cmp iret jg test mov movsl fs cmp (bad) enter shrb xor (bad) cltd mov sub loop push insb sub dec mov jmp out fbld mov (bad) mov cmc andl push adc jne rclb stc popf (bad) fs insb xchg lock inc jecxz roll bound xchg add faddl popf sbb mov (bad) je push dec sbb icebp and jns add jg hlt jno ja movsl (bad) fcmovb cmpsl ss xor cmpsl mov adc push add iret loop (bad) not push call add add rcrl mov (bad) cltd mov and push (bad) lods iret dec pop pop cmp push test (bad) mov lods and xchg push aaa popf das movsb push in (bad) (bad) sbb lods lret mov push cmp jae push pop je mov addr16 xchg mov sbb fnop or lock add pusha sahf cmp dec int3 lods push (bad) icebp pop mov push inc dec mov (bad) mov repz movsb sbb push dec stc loop ss cmp movd insb jae inc jecxz jns movsb mov pop mov (bad) mov adc inc outsl in and dec adc push or ret sbbb lods nop lods arpl push cli adcl stos aas pusha fwait sarb iret xchg xchg fucomi test mov cs int3 add mov cmp mov mov out cmp out (bad) sti imul pop jle xchg push dec or push test cmp in push pop lcall repz imull add xchg out push ss call pop inc shrl sbb inc inc scas xchg ds loope pop cwtl push jnp icebp add and int pop (bad) mov pop stos inc push lea mov iret add sub scas mov jb sarb stos push int3 lea and jmp flds jl aas inc pop (bad) jg xor pop (bad) adc imul es inc inc cltd dec gs es pop les jecxz lods sub cmpxchg8b repnz pop out mov jp cmp rcr cwtl movsb clc je pop mov push lods push push (bad) adc int ss mov inc popf (bad) insl inc cmp (bad) jno repnz mov jmp sbb movsb aaa cmp into adc stc outsl push xchg inc adc jl and int xchg (bad) inc lock ljmp pop lahf (bad) jmp pop pop adc stos in cmp out dec adc sahf iret xor loope xor mov xchg mov push movaps cmp push (bad) das (bad) ficom and jo pop push adc pop test lods hlt lret sysret xchg cmp lock es hlt xor lods mov fwait mov cmp and rcll lret cmp mov mov adc nop add idivl aad dec push sbb aas sbb shlb iret mov pop xor clc cli or cmp dec jecxz push fcoml js adc push loop lods lret cmp jne inc jle xchg das out inc adc roll push fbld subl pop xor nop out fstl hlt and ret jp sub and cmp outsb inc xchg jecxz xchg dec mov int mov pop or inc lret iret sbb and es daa aad lods jo dec dec (bad) test pop (bad) jp jo,pt cmp (bad) cmp mov mov data16 inc push out jg icebp iret aaa cmp adc data16 cmpsb push cmpsb popa push xchg pop sub mov mov in mov mov sar xor xchg xor jne lcall mov dec repnz lcall mov push mov push into jmp or cwtl dec movsl sub or xor sbb and lock iret hlt and mov bswap cmp cmp fsubl outsl adc shlb push mov cwtl cmp cmp dec fld outsb je movsl xchg lds sbb add jnp pop movsb popa jbe dec mov mov push cltd lock dec stc jo xor shrl and jne sti js test mov popf adc sahf icebp stc aad push int sub imul pusha sub in movb fwait push int cmp mov pop cmpsl iret je outsl stos addr16 cmp pusha jmp sbb xor (bad) cld dec lret addr16 mov fnsave in pop out rcrl cmp push iret xchg cli clc pushf test push mov sbb (bad) sbb (bad) dec pusha mul int das lods pop mov mov push sbb in lret cmpb mov dec mov mov push jge (bad) aaa add mov daa lret not add mov imul xchg cmp bnd inc ljmp gs lea loop imul es inc (bad) xchg movsl popa mov push adc push and pop push arpl dec or adc aam jecxz data16 dec adc push fnstcw push sahf mov cmp mov add out sahf (bad) js popf push stos movsb and push sub cs icebp incb push or mov mov sub shrl roll je add arpl mov jge push inc xor imul or lods sarl pusha lret mov lret mov mov and inc push sbb insl cwtl mov add xlat cs mov mov out inc fstps shll pop fmull lods jo jmp sbb jg shll push sbb aad xlat push pusha lods (bad) fdivl xor xchg stc mov es push dec hlt sbb ret push xor jp inc mov imul sbb jae cld les in lods and mov cltd daa orl jg or mov iret push xchg ret ja nop jmp sub int jno int3 addb loope mov clc out aaa data16 ret jns xor dec add mov jo xor popa mov mov and imul fwait pop push cmp xchg int3 inc cmc mov cmp or or (bad) sti imul out mov xchg leave sarl addr16 adc adc or (bad) adc outsl aaa jge cwtl cmpsl mov mov sbb movsb outsl xchg cmpsl sbb jne outsb rorb sub ss int3 lahf mov sahf mov push aad xchg sub jo xlat mov pop lahf xor aad cmpsb and xor mov jl dec fwait inc cmp shlb cmp mov pop xchg push inc (bad) icebp push lds loope test lret es jp rsqrtps cmp sbb stc pop (bad) imul push test cld sahf dec inc push or or adc pop push adc or xor scas arpl mov inc sub xlat iret mov pop (bad) push out xchg das xchg xchg sbb mov out jo cmp or (bad) cmpsb sti sbb fcmovb jns cmpsl movsl adc rcrl cltd dec daa lock mov ret call mov mov lahf and add add inc scas sbb cmp and pop cmc out mov repz aam adc xchg ljmp pop cltd cmpb sbb vucomiss dec mov cltd clc inc jnp lret out xchg fadds fnstcw jo icebp xor scas push push jp dec and popa aad aas (bad) loop sub fs sti dec fisttp jp (bad) aas pop int3 lods jl mov dec xchg dec sub (bad) jmp adc fnop mov mov stos or mov bound aas or dec inc ret sarl and and addl pusha test or adc pop in mov outsl fcomps jp add retw imul ds mull mov fistl xor repz nop mov jo aaa out or lcall xor mov out rol add fnstenv bound pop mov mov sar mov xchg bswap imul sbb mov outsb push sbb mov add push jge les and jge adc sbb pop push sbb lds jge dec ljmp mov stos mov test push xor aaa sbb cmpl test insl dec lods cs outsb cmpsl cld xchg push mov jp pop cmp enter cld jle push inc sub lahf mov lds jnp mov cmpsb add divb bound sbb or loope mov out xor test (bad) rcll cmp leave jbe jmp lds jbe mov sti bound and push (bad) push cld std push mov pop jns fsubrl sub mov das mov cmp pop pushf xor push pop int out cmpsb inc pushl mov rorl and call cwtl jmp daa mov dec pop and les sbb sbb pmullw dec (bad) pop push cmp imulb pop dec jnp jg sub mov divb lret add ret push lcall dec push dec push in jns rcr push rolb and lods rorl jl int pop and jo mov sub lea loopne enter inc lret in mov add test sub jmp test jnp out lret cmp fadds leave sahf fcompl aas fmuls xchg or ss mov pop or jmp sub jl xor push and add mov push add stc cmpsb loop scas outsl push dec mov imul mov xor cmpsl cmp aaa in inc push mov pop xchg xlat aaa (bad) pop mov lcall js pop pop jno push xchg jo setp or xor jnp push adc repnz cmc aaa mov jno pop jb icebp xor pop imul pop push (bad) je sub push xchg jb je xor jp push or sbb test cmc (bad) xor inc sti xor pop loop lret xchg out and xor mov repnz std inc dec into sbb jl into je repz out addr16 enter das dec call movzwl jecxz popa lds mov divb icebp mov mov cmp or pushf sub mov js negl enter push lret in (bad) js mov adc push popf clc cmp lcall test out hlt jg inc into cmc fidivl xchg fistpl pop stc or fild fs mov popf xor mov jp adc roll andl mov mov arpl in push add pop verw imul push lcall cmp xchg xchg outsb test jnp jle jg loop or shl pop (bad) xor inc adc fs sbb in out and push dec add dec fildll mov and jae push jb xor push mov gs movzwl adc push out sub mov sub (bad) (bad) adc out (bad) test jl xor xor (bad) stos cs push popf mov lock mov xor ss imul mov pop cmpsb jae and rolb jns lahf inc movsb int3 popa outsb lret (bad) enter mov outsb push fdivrl popf mov mov insl xchg xor sub push mov (bad) ja lcall add pop jl mov shr pop pop cmc mov xor fcomps daa adc push int rcll pop mov add xlat fdivs mov aaa cs jno fsubrl add inc ja add cs adc negl loopne or dec mov int stc ret jae repnz sub add js jge push (bad) fdivrl (bad) fstpl dec call stc and outsb imul xor int bound (bad) jno pop sbb (bad) dec rclb adcl dec ret in les test cmp rorl or cmp sbb into aaa in mov xor push xor dec cmp rcrl dec xchg daa inc cmp jb add cli in push frstor test out mov jnp cli xchg mov ljmp je enter push js sbb cmp sbb add xor pushf lds arpl cli (bad) das flds cmp mov in repz leave pop inc inc (bad) notb push mov fwait cltd mov jne dec cs out je push xchg fdivrs jle mov jb cmpsl sbb cmp fidivr adc inc mov movsl push push jb jp mov lea lds jne shrl add cltd adc jmp ss movsl sarb sub imul mov fisub jl fs loopne jns nop sub or insl std dec jne pop sub sub mov frstor xchg add lock fcoms adc or pop mov inc nop sbb adc int3 mov ja push inc cmpsb xchg cmp inc and push cmpsl push scas sbb cmp int sbb add (bad) std and mov hlt (bad) divl mov mov popa je clc cmc cwtl call pop sbb ja pop mov in xchg mov dec jns sub or sbb jb xchg sbb or jnp stos xchg leave sti mov inc vpminub nop or test fdivs push test imul scas test stos div adcb mov xchg out dec jns les cmc out jle das push pop (bad) mov test add dec jno ja insl adc sub push mov add or and fildl sbb (bad) and fimul bound popf mov (bad) jnp popa sbb add clc (bad) int mov movq test jb xchg inc adc pop outsl test pop adc jb cmp push repz enter jg cli (bad) movsb push sbb xor mov std in inc lcall cmpsl (bad) mov daa cwtl orl gs pop bound addr16 or adc pop inc adc pop or xchg xlat cs xchg (bad) mov lods adc mov xor movsb in cltd out dec push mov pop leave repnz popa adc jae stc cltd or sar jbe test js leave psubsb lods or pop clc lds push orl fs or jge or mov stc lds mov mov test loope dec xchg js xor push imul (bad) (bad) xorb inc jo mov daa adc mov lcall xor ja scas loopne add sbb mov insl cmp cltd or repz mov test jo (bad) insb call ret imul pop sub das sbb lahf xchg into add add adc cmpsb mov gs adc out mov mov les (bad) push jbe mov xchg pop mov and xchg mov enter xchg jne les pusha mov aam sub aad call sub xchg push mov js out mov dec add mov (bad) mov outsl xchg daa cmpb dec xchg ja xchg insb jmp dec mov lcall add int into fwait scas inc sbb mov or out add rorb mov fisubr push dec jo shlb sbb jo paddw bound or sub std lods dec mov mov aaa cmpsl pop xor lret (bad) fdiv testl xchg ds pop add outsl pop lods dec jmp adc push (bad) sti add cli mov cmpsb mov mov push pop imul push scas in sub mov xor lret rorl testl jle aas sahf in addr16 inc pop xchg adc inc mov inc and bound xchg jecxz add enter push push lahf imul add fsubrl pop jle jo jae mov push out sbb jae nop daa pushf or and out jo mov sbb out xchg in xor das sahf insb pop mov xchg orl mov inc roll das jge jg push sbb and outsb pop cmpsb sbb or mov or mov mov movsl popf out sub loopne movsb ja call (bad) (bad) mov lock add add push add mov dec jb add (bad) mov scas mul ret imul pop push ret repnz mov sub rcl lahf loop jno pop (bad) gs inc cwtl outsb mov push push popa int lock xor lea ja pop lahf dec sahf jmp sahf movsb lods pop repz fisubr push mov ret dec nop (bad) inc out cld pop test or std hlt lret ss cli sub (bad) xor ss xchg mov inc out sbb repz daa sbb aaa dec insl xor sub and cmpsb mov dec push pop xor push mov xor (bad) (bad) (bad) loopne push clc insl in out leave mov nop sbb sti sub add jae adc sbb dec add outsb inc jmp sub jge ja sbb xchg ss (bad) cmp push arpl xchg pop (bad) and mov add hlt inc into shll adc push cmp data16 add mov dec sub or sub leave mov adc jg (bad) inc scas jmp cmp mov lahf imul dec fbstp push cmp cltd and scas xchg add in mov adc (bad) in clc cmp popf scas hlt xor mov jge jecxz repnz xchg stos sub mov xchg add stos and cmp movsl (bad) jg mulb mov out dec dec adc push or jae fist lret xchg xchg out in mov mov fiaddl cmc sahf ficom out xor inc test outsl and jo xchg icebp cmp add (bad) pop mov ret (bad) ss out xor or and add lret xchg xor jne mov xchg inc or mov cltd cltd addr16 dec and adc cmp and lahf ds roll push (bad) testb data16 xchg repz or fidivl (bad) arpl dec lcall mov ljmp fmul or dec jo popf mov push lret test es js or loope hlt xor stos aas daa sbb sbb mov pop xor je push fstl sarb fs adc xchg out xor aam mov cwtl adc mov fldl in pop ljmp lds popf pop in imul mov ror mov fldenv in mov das les lcall cmp loopne lret repz or lret dec push pop loopne insb outsl std mov mov lea jg jo pop mov xor jg mov adc dec mov cmp xchg pop mov movsb imul mov rclb sub loop mov mov nop mov hlt cmpsb loop and xchg das addr16 xchg adc test mov sub dec and adc fistl sbb dec out or aam sahf or pop lock (bad) sub std fisubr das dec fwait das decb insb pop sti push (bad) and sub mov outsb rcl pop ja movsl cmp and or jmp (bad) fs jb mov jg gs adc add xor (bad) pop lcall and adc dec xchg pop test inc fwait xor adc call jae dec push jecxz push or sub movsb out sbb cmp (bad) ja add inc mov (bad) cld jp aad pop pop sbb and nop (bad) shlb dec push and pusha lret xchg xchg xor mov jg aas fdivs mov jle inc scas lcall adc add mov lods aam (bad) cmp (bad) rclb jge pop and xchg push cmpsl xchg (bad) ja cmp bound rep popa clc popa sbb dec dec stos dec cmp insl subb push repnz imul scas (bad) fcoms in sti adc daa test popf fist xor lods sbb dec xchg lods imul mov into out xchg mov mov push sub mov jl inc cltd in mov pusha push and es xchg lcall enter mov rorb into jno add rcrl jns pop dec std js push xchg mov fstpt xchg out dec jnp iret and cmpsl inc out es dec int add sahf lea adc hlt scas adc das push loop xchg mov adc pop jmp push pop jae jno inc xlat stos repz xchg mov or ja ss pop fwait mov xchg cmp mov divl mov nop mov loop out adc cmp push xchg add sbb imul das adc adc inc fimull jo lahf add std test add jne xor (bad) adc das pop mov push gs pop push daa inc dec dec insb pushf add add jmp push inc fcmovnu ja lcall jecxz daa sti dec xchg mov mov repnz pusha rcrl int3 es sbb jp aaa cwtl mov push jns dec mov or data16 cmpsl lcall (bad) out sarl lods leave je push and pop cmc lods xchg jecxz push insl (bad) xor (bad) and pop in lahf push pop cmp push dec movsb and movsb pop mov xor je and xor jno scas inc mov add or mov adc ffreep ss mov inc mov mov ja movsb scas xchg bound js dec (bad) in jns test mov jne xchg loope outsl mov or xchg jle stc add jo ret add sbb js pop sti mov lret push jbe scas push inc (bad) (bad) scas or scas xlat ja dec arpl sbbl push and nop xchg ret (bad) ljmp js inc mov fsub pop dec cmpsb lcall xor mov cld lea ret int insb pop fwait sub mov stos cmpsb and xor js xchg arpl adc cvtpi2ps add jmp das mov scas call mov dec in add inc inc adc inc enter gs int inc xor jp lcall jbe movb or cmp adcl xor ret in jmp or sub push loopne cmp mov fisubrl push xchg add repz lds repz aad inc mov cmp sbb test cltd mov push push shrl lock ret xor and pusha mov outsl pop ror cmc lods mov cmp ljmp popf mov jge shl popf (bad) jb mov out mov pop or adc into popa mov sub mull push add push fiaddl xor mov and mov mov jnp pop repnz fist cmc addb je xor into cmpsl cmp clc mov mov push mov mov mov jae mov sahf mov dec dec mov js cmpsl ds sbb dec dec out inc and sub gs popf lods pop cmp das sarb mov sub lcall jmp mov and jno into mov hlt sub adc shrl mov pop jmp dec dec add sub sbb in testb in popf aas push out lods jmp outsl mov cmp pusha jl lock fisttpll mov jge sbb sub insl repnz sarb mov les or dec adc inc inc pop addr16 in cmp loop cwtl mov pop (bad) push cmp sbb xchg imul mov cmp xor fldcw xchg mov or dec dec outsl enter pop negl loop adc inc outsb pop jle xorl mov push xchg shrl roll aad dec (bad) mov int3 cmpsl mov dec xchg adc xchg pushf xchg add lahf repnz push imul add xchg push xor mov pop ret inc popf pop sub dec lods adc rclb mov ret dec and inc and lret push pop or test pop addr16 jl iret sahf dec orb cli mov icebp call xchg rolb xchg (bad) icebp mov (bad) repnz cmp pop fcomps test pop adc ja movb decl or notb fstpl js sbb hlt (bad) xchg imul negb aad mov in mov (bad) jb movsl aaa fistl in stos fdivr repnz jle xchg (bad) cltd jg imul push bound inc fsub sbb (bad) (bad) loope pop push adc scas mov sbb leave cmp cmc xlat mov je (bad) out sub leave outsl mov xlat int3 push mov outsl or push and repz (bad) sub inc xor ja sahf test loope fwait and add hlt flds cmp (bad) call in imul sahf in pop push stos cmp inc addr16 mov (bad) hlt (bad) fwait inc faddp xor out mov shld fs jno dec dec mov sahf dec or mov push or fwait gs jns jnp loope rorl popa loopne cmp test add add mov jecxz test test hlt loopne rorl out adc ljmp push ds (bad) ret adc inc movsl (bad) adc push xchg adc ret or xor xlat in mov jg and dec jno pop adcb clc mov xchg mov imul bound loop mov sub inc push in jl adc add push fstpl or xor lods fs test jno push clc fcoms mov mov cmp or pop (bad) bound add icebp lods sbb mov jno mov add pusha (bad) pop loope sub cmc pusha repnz addr16 dec lret push (bad) mov sarl (bad) mov in adc add iret inc sbb or sub out mov cld inc les adc mov cmp mov sub and push arpl pusha dec push (bad) sub aad mov mov mov insl add leave test push mov xchg scas gs mov add mov out out pop sub call sbb cmp xor (bad) jnp gs daa jg flds lcall mov mov mov out (bad) std inc push and lahf or (bad) ds js mov cmp pop jmp pop adc jmp fisttpl sbb aas xchg pop jno jp fdivs and syscall sti orl std jl jp or into fwait std add push neg (bad) xchg inc xchg lahf jne aad sub pop push ljmp inc fwait add fidivrl adc out lock and cli push rolb pop addr16 aaa dec adc sub das push jno scas imul je stc test inc or das sub push cmpl mov out lea jle or mov mov imul add jno inc jmp inc hlt popf cmp or dec mov popf cmpsl fdivp jne mov loop push test mov mov cmpsb clc sbb fidivl (bad) push push cmpsb loop pop sub lock pop add fstl stos xor push loopne scas mov fwait cmp aam dec dec scas ret jnp or jbe lock scas xchg and bound lock jg lds adc and add sbb mov cmpsb add sahf inc sub add lods pop icebp movsl dec adc mov out rcr out mov adc cs fistpl add xchg xchg sub in jecxz or cwtl mov and iret movzwl sub jg iret fs dec push jmp xor out mov pop jle jecxz mov sbb in push cmp dec inc jnp xor movsb xchg ss repz mov (bad) mov jmp insl jge lds les pop jle add lods repz sbb int3 int3 stos pusha push cmp fstl xor aaa inc daa lcall js push aad cs sub lods or call (bad) and in cmpsb xor sbb repnz (bad) ds sub inc popa js xchg adc sub mov push jecxz jmp aas test fiadd mov push repz xchg pop aas aam stos fidiv jo (bad) pop xchg sbb scas add sbb and jo (bad) pusha cltd fisubrl and inc cmp mov aaa adc scas pop es ljmp repnz xorl mov inc test loop and and ret ljmp sbb mov ja jmp jne loopne hlt mov sub mov aaa sbb dec or push out mov jle cli movsl xchg add cmpsl out sahf call icebp and pop lods enter dec rcrl daa sahf mov jae jecxz push addr16 repz sub push mov popf jge js test lret dec lcall or jb ret xchg outsb inc inc lods imul inc fcomp test mov sbb scas stos pop mov dec (bad) push dec cmp cli insl test push xchg das lahf stos daa icebp add mov stos int3 mov out (bad) jo rcl pop out in lods mov adc inc test stc pop gs ja pop pop and mov jbe pushf lods int xchg mov xchg hlt push mov (bad) movsb out shrb xchg and xchg pop je xchg add lods loope imul push iret loopne mov push rcrl lret (bad) wrmsr gs shlb pop jnp push (bad) sti aas push icebp fdivrs mov sub jne sti ds cmpb xadd adc cmp mov scas mov fcmovu in call test ficomp ret mov loop mov dec lahf pusha xchg ss dec add mov push (bad) mov cltd inc or push arpl jp dec ljmp mov sahf je push cs add stc mov inc in jmp sub push lods adc popa gs outsl mov movb call in andl sub dec and jl adcl aaa push test popa push mov lahf mov lea je push xchg and pop push inc mov fcompl loope out nop push xchg cmp sub out add dec gs (bad) jle lret mov je pop aas jp pop xchg in lock pop dec sahf or call mov jmp inc sbb pop loopw push mov push dec insb imul sarl or cmp fnsave xchg mov mov mov sub pop scas pop fwait push repnz sub loop mov stc cmpsb mov mov and nop in fcmovnu mov push dec (bad) aaa inc je stos sti daa ds aas jge sbb jl roll dec popa sbb cmpsb xchg adc jns stc cltd aaa xor cltd iret pushf scas jmp pusha ja sbb ss sahf and fsubrl dec pop jl sub hlt xchg mov sbb dec sar mov inc dec jg aaa adc jnp and in push mov fbld and in or adcb dec call pop xor add jmp aam pushf push sub mov jae lret jecxz and mov lcall add in lahf icebp sbb jbe push cli out mov mov xchg xchg xchg and pushf mov call repz (bad) (bad) sbb sbb cmp jo mov (bad) js lahf int popf ja cmp push fdivrp or hlt stos push call mov (bad) cmp stos and imul adc adc add sti lods fldenv mov sbb push xchg mov scas ror ror outsl sar outsl mov cwtl push cmc xchg jae inc test out mov mov psrad cmova test xchg das mov repnz repnz inc pop out (bad) push rcrl dec das std loop aam test iret cwtl or das dec jge mul loope leave fsubrs jmp push scas test cmp sbb jle ret adc cmpsl fisttp fwait add fwait lods sub or xchg xchg dec hlt fdivs xor cltd ja cmpsl cmp rorb xor jno lret xchg jae cmp repnz xor ret or add gs lahf iret xor pop push adc xchg test popf xor xchg xor inc enter dec push lods pushf or int data16 popf fldcw out sub sub dec cwtl aam jecxz mov inc sub xchg push mov mov adc add ds jns pop insb aas mov cli pushf fnstenv pop xchg sub push pusha pop idivb mov lahf push xchg add sub ss outsb les fdiv stos in popf popf enter pop jb pop push mov fwait arpl push rclb rcrl xor inc aaa xchg lret cmp repz and outsl jo pop sub stc mov sbb pushf pop mov dec dec jl jb insb mov arpl leave or fcoml push sbb ss xor mov adc test enter sbb ret cmc aam stc in rclb jbe inc divb scas adc nop pop adc lods ret sahf pushf ds aaa sbb pop movl and retw dec (bad) xor cmc icebp les mov jnp xor sarl insb in pop jp mov add mov addr16 xchg dec movb aaa pop sbb pop and mov jmp mov mov or rcll cld xlat (bad) scas out adc lock or jnp lods adc jae rolb cmpb movsl cli inc jns push pop xchg xchg cmpsl cld xchg fsubrs or push or push ret ffree (bad) push lret jns xchg xchg adc sahf fdivl ljmp pop pop fcoml mov andnps (bad) repnz lahf and xchg fcmovbe dec shrb fild pushf fsubs pop sub lock adc dec nop lret jl add rcrb bound mov push icebp ret cmc data16 call fidivr icebp jmp movsb inc out pop ss cwtl add or xchg push xchg fstpl movl adc xchg jl sbb (bad) or in iret xchg sbb mov push add xchg int3 dec repnz aaa ret push adc fwait pop pop xlat (bad) mov cltd iret xchg and dec loope lret push mov pop mov (bad) sub (bad) int fwait push xchg jns pop sub lock es jbe cli rcll lods and and push and in test aaa dec sbb (bad) es ret mov call cmpb shrl adc push push aad push fdivrp cmp arpl or fcmove adc xchg mov dec or xchg rcrl imul cmpsl mov jge mov fwait mull lea pop inc test test add leave adc mov (bad) xchg mov pop lods add mov mov mov sub jns sub jb pop daa push dec mov je mov divl mov xor jp sar mov lret movsb add add push out loop call aad fcmovnbe outsl fucomp repz pop into (bad) mov roll rorb sahf dec stc sub pop cmp pop fidiv lahf add jae fldcw out imul mov test sbb daa andl repz fdivs mov leave inc cltd and pop repnz ds sbb mov pop cltd cmp xchg mov je inc fimull out push push or jno push rcrl inc fwait add push xchg pop daa sub in jnp nop les fsts aad inc jae cmp wrmsr mov and mov xchg stos inc sub enter shll popf cmp pop arpl add or xchg mov lods cwtl add loopne mov es xor mov xchg jle mov cs lret cltd inc mull or pop imul push sbb pop pop add jmp cmpsb pop out push fstps dec lds (bad) adc out test add jg test ljmp jno xchg pusha pusha xchg push ss call mov push insl cwtl cmp rolb insb out xor and int scas out inc mov fcmove adc jae sub push gs pop dec ja rorb inc dec pushf and loope xchg mov mov dec popa (bad) hlt shlb jb pop dec test jbe sub insb outsl shll mov mov sub call (bad) dec into out xchg xor mov jge das pusha ja cmpsl or mov pop pop sbb (bad) ljmp aaa sbb or ret jmp push cmc call ss add negb fldt jne lahf nop pop fistp jl cmp inc stos out sbb xor jne mov xor pushf cwtl mov mov pop ljmpw cli mov add xor lods sbb in cmp sub sbb repz mov and stc rcrb rcll xor out lods jae inc cmp cmpsb jmp jbe,pt cmp (bad) je movsl insb clc dec pop cmpl call insb je lock push popf mov ja sbb add dec pushf nop xor imul mov adc dec push cmpsb xchg cli push arpl lret sbb test cmc pop fwait jge data16 (bad) jne mov xor test mov push adc mov sahf into lock sub gs shll les cltd cmpsl jp and test iret sub mov repnz mov sti mov cmp (bad) in stc daa es push fwait xor mov inc ljmp mov fsubl sahf movsl pop test mov divb dec and (bad) aad and scas push (bad) pop pop lret rep movsb or push ret xorl xchg push or fmuls cmp ret lcall das mov pop shrb jmp or rolb mov mov jge pop push mov xchg lock sub and mov enter aad in sub push fucomi and insl sub xchg sbb cmc fnstenv adc pushf icebp xor insb (bad) xchg daa rclb out sahf icebp adc mov stos cmp fisubrl sub and push icebp mov mov (bad) jecxz inc repz out cmpsb ret sahf in adc inc iret mov xchg jno jecxz pop cmpsl dec rorb inc sbb or push sbb aaa les (bad) inc cmc cmp or test adc (bad) or imul loope in sbb xor push inc and xchg jge out (bad) out test cmp icebp adc sub jne (bad) int inc loope leave inc or pop addl out int3 push int3 jge mov insb fwait cmp data16 xor (bad) fincstp test aaa push cmpsl mov pop vmread xor cmp cmp jb rcrb imul cli and ja addr16 and insl divl pop out push outsb push icebp cltd inc outsb adc pop repz cmp add daa xchg jae inc xor bound sub cwtl inc fist jbe pavgb cmp mov dec arpl jl cmp js mov mov mov pusha cltd ljmp cs xor fstp push fcomip sbb inc sub hlt xchg inc fildll aam cmp aad stc mov jmp (bad) lcall sbb (bad) mov cmpsw pop add and in jle fs scas out jmp mov out cwtl sarb (bad) out movsb mov sub int3 dec push mov mov addr16 in pop push lcall nop sbb inc fisttp pop pop mov xor ljmp ret push sub movl or imull pushf pusha mov and fisub mov test movsl movsl cmp std test and in gs data16 popf imul cmp (bad) lret lods icebp gs inc dec loopne lods sub and clc or lret das xor popa ficompl dec jmp testb mov psadbw adc jg mov fs inc sub push pop movsb add rolb push cmpsl (bad) jl mov loope lcall mov test (bad) fstpt cld mov or push inc push mov je jae mov pusha mov push icebp leave in enter fidiv rcrb push or jg mov pop xorb jnp clc inc ljmp add cli mov jno and aam pcmpeqb ljmp arpl in loope adc pop mov idiv test xor arpl or cs mov inc scas test ss jo int3 sahf ret add int3 xchg gs lea cmpsl xchg rcrb fmul and es and ss insb and movsl cmp in fisub pop mov scas sbb (bad) out out mov inc daa xor mov jno andb hlt lahf ficompl xor shll clc sub sub imul push mov pop imul out mov dec test js and sbb js dec xchg push (bad) push add loope cltd (bad) cmp adc push pushf (bad) ficomp insb pushfw inc out xchg mov rclb mov xchg or lret push or les das push mov mov mov iret mov loop in jle fwait mul mov dec mov lds (bad) repnz insl adc mov or sti adc repz mov leave call rorb mov shlb or xor cltd push scas inc ret roll mov dec ret adcb insl rcll jne jns cld fildll push push pop sbb push jg clc pop mov sbb les sar adc loop,pt cmp dec push aam inc aas fmuls js adcb push jnp rorl dec mov cs js hlt std call xchg insb xor mov xchg popf sub into cs xchg movsl test mov mov (bad) stos and sub mov jl jmp frstor pop daa mov jl add xchg inc sub test sbb push dec jns nop adc xchg and and push ss inc in adc add mov lfs dec (bad) decb or scas fs inc neg dec mov mov les sbb (bad) mov in aam inc jg dec push rcr orl mov push mov or sub int daa and jo sbb or jecxz dec inc cs and mov pop xor fstpl je lea in fstl push jmp push push push push movsb ret dec lret jmp rclb sub mov mov (bad) xchg addl adc aam xor pop fs sbb pushf pop pop xor xor push push mov insl push adc js mov adc les (bad) xor mov int3 xor roll stos outsl push or cmp inc das lahf xchg push or xchg into fnstenv dec mov inc add mov cld jmp jle push jns fidivrl adc rclb icebp mov imulb in daa sbb cwtl pop loope outsb and (bad) mov gs (bad) sub jae (bad) (bad) loope pop mov jg pop ret daa clc or fisttpl jle cli add outsb mov mov dec or idiv iret push fildl mov leave es dec xchg rcrl out stos cld pop sahf aam movsb sbb sbb test test dec jle push pusha ja xchg insl adc lcall in inc ds push adc js adc incl mov mov and inc jp mov aad sub outsb notl outsl dec jb xor sahf cwtl int fwait ja div mov (bad) lds push iret adc repz push ss rep repz cs jns mov ret or push es cmc cwtl imul push mov lret stc mov sbb cltd xor test (bad) lret and pop jb mov add mov push sbb add push sub jns mov sarb fist stc ret ljmp cmp xor mov out xor xchg rorl xor aas and adc sbb and scas push (bad) call mov cmp mov adc or cwtl sub push inc push xor bound fidivrl xor cmp imul pop adc jno push inc loop lahf jbe mov bound push in pushf adcb and xor aad dec popa outsb pop xchg repnz sbb add dec mov test sarb jae adc sub cmp cmp adc xor push movsl cmp sub mov movsb call add pop xchg push jo inc sbb and push cwtl add lahf out int movsl sti idivl stc clc sti lods cmp jno push scas popf aas sub mov push sbb cmp xchg sbb aam and cli mov jp enter mov lods jnp add or xor dec sub pop inc dec mov push cmp jno lret in int aas push stos stos outsb fsubrs in inc in hlt dec and icebp lock xor pop pop int jmp pop mov mov nop stos aaa fs ret (bad) ret repnz xchg bound popf loop in fldcw lcall out xchg jns jmp es imul adc fwait sarb movsb xchg (bad) sarb pusha addr16 dec ss out add (bad) (bad) jb push insb dec push movsl pushf xlat mov outsl xchg sahf jmp cwtl and fistp xor fsubs (bad) mov idivl lea push daa js in stos (bad) pop fbstp cs out fimul lea (bad) imul push inc push jl ffreep rcrl and push loop aad xorl jl mov jo mov pop push shrl pop xor jbe adc mov aam mov rcl nop repnz cli scas pop outsl adc jb sbb insl jne lret jp dec pop sti (bad) aam dec push dec sub mov out sub ljmp dec in bound jl ret cltd or sbb (bad) sub movsl jb mov push push stos mov mov adc pop mov xor mov xchg scas das stos sarw daa daa daa out or in aam jno push sbb str aaa jecxz xor dec loopne pop mov das (bad) mov mov imul imul push lock push mov mov ret lods add outsb fdivr (bad) jae bound data16 ficompl pop and (bad) lret insl xor nop (bad) cli add (bad) or xor negl outsl cmpsb pop sahf call lods je and es mov lods outsb dec leave int xor xchg scas cmp repz clc jne shrb or fldenv inc pop es pop mov test out idivl pop jle cmp fs shrl adc jnp outsb xor and subl repnz push push and mov pop cwtl lcall mov andl cmc mov and movsb pop ss cmc pop pop jae mov stos inc jb fldcw xor pop lcall out sbb add ficoml nop rcl cltd sbb lock dec popf or add enter ja push fs mov lods lock cmp xchg out pop ret jmp sahf rclb dec mov mov lods mov sbb sbb pop jmp add adc repnz pusha xor push pop xchg and mov arpl in jl movsl mov push loope loopne xchg cmp pop jmp data16 enter adc cmp xchg mov (bad) in sbb mov movsb xchg and fmuls sbb inc sbb ret cmp mov push mov inc dec jno add (bad) int xchg push cld mov inc xchg jo push adc addr16 xor cmp dec push jbe xor (bad) mov lcall xchg xchg sub add sbb ret icebp ret loopne sarb shrd outsl push (bad) stos jbe lea in lcall mov stos cltd cltd clc jbe sub ret jge nop cmc mov xor push movsb cmp xchg lcall ret jb insl add xor iret call cmp pop movsb pop cltd jle jns icebp fstpt add xor adc lret cmpsl add mov popf or pop inc push leave lock lret loop pop lock mov push test xchg test (bad) and into sbb add addb sbb add jno outsb adc xor (bad) xor mov (bad) and inc and lods pop pop sub pop clc sbb adc adc or push push out in test sahf sub gs js mov jne int3 push push xor xor or ds mov dec clc xchg fcmovu sbb xlat scas pop dec icebp hlt dec mov in nop iret and jns das cmp adc leave add fnstcw insl mov push dec mov (bad) cld scas mov mov loope insb out or add dec mov mov (bad) test aaa mov or bound jb mov fsubs push inc in mov nop lods xlat aas stos (bad) mov enter stos sub pop out and scas mov lret and adc imul jge iret pop lods hlt mov jg fsubl add aas pop mov push lods cmp mov mov push in divb cwtl mov add cmp add push push leave (bad) cld xor pop cmc dec push sbb je mov pop or ret scas into mov insb cwtl leave and jo inc rolb loope ss leave icebp out pusha bound cs insb (bad) loope fcmovnb bound add stc sahf in or or cli pop jge sub movsb push jne cs xor add cmp push dec ds xor addr16 popa stc es jbe rcl sti xchg sahf mov lods mov jmp cmc sub shrb add adc dec push movl test adc dec push pop jnp in push inc das notb mov daa divb and push (bad) dec ret inc xchg pushf inc jge adc xchg outsb sar mov xor adc dec xor cmp in lods into cld out inc addr16 inc (bad) jne loopne lcall pop sub sbb stos sti mov xor mov dec jno in jnp pop lds dec pop rcrb (bad) movsb enter push mov pop inc jne fs push cmp mov cmpsb xchg aaa cs jo push aad xchg mov daa test incl pop mov mov inc lahf ljmp cmpsl js jno loopne popf push mov or pop in jle mov push leave mov cmpl mov adc (bad) mov sahf addr16 leave jno add push adc xchg adcl mov (bad) and adc jnp ja jne insb sub inc jnp sub daa add lods mov inc cmp sbb and (bad) addr16 mov mov lret pop mov lret xchg fstl jp push mov push andb jecxz insb sub fidivr lea cld jle lahf pop fcoms jno push xchg adc (bad) push nopl xchg inc fidivl mov dec xor cmp add stos je or sbb cld jp aam mov jne push cwtl jb sarl sbb scas mov (bad) jmp push jbe aad mov inc jge jno repz lcall fisttpll ds (bad) mov mov jo push and jmp cltd mov lret aaa sbb movsb push ja dec or push mov sub inc aam pop jecxz mov or or fwait stos jmp and sub int xchg sahf push pop and clc into push pop (bad) mov mov (bad) jbe dec ficoml shlb sub movsb popf lods gs sub insl xor loopne mov fsubrs ret xchg adcl mov sub dec lahf or out jbe push sub ja test mov sub test pusha lods push mov ficompl adc roll shlb jge jecxz movsb ss fs or push dec je mov int aam insb aaa jae pop jmp dec loope mov movsb loopne outsb shll pop lret and (bad) stos inc (bad) pop xor pop pusha push inc (bad) imul add push popa cmp ss mulb push dec fsts adc cs mov adc mov push mov xchg dec dec mov sub jo out xchg lea arpl add sub clc dec xor push ds fwait cmp loop lock dec mov or sbb sbb dec xchg xor (bad) xor movl iret adc xchg call (bad) mov mov dec (bad) or sub cmp out stos out xor lods ret dec adc add lcall les mov pop in in and xorl and jge movsl cmpsb mov clc xchg adc adc (bad) lret mov and mov bound mov xor icebp into cmp jp,pt in (bad) sahf shr imul or jns pop pop jne test mov leave into jp mov add inc pop push dec popa push push sbbl cmpsl inc aad jo cltd sub mov jp stos sbb sbb aaa add add lea fdivrl pop push out adc test (bad) jg test pop es data16 mov sarb (bad) inc scas push ret stos pushf jbe cmp cli xchg mov pop arpl jl rorl jp jno mov cmp arpl cmp dec add lea pop xchg scas (bad) iret xchg arpl and nop pop mov std pop pop es push leave mov sbb (bad) out inc push dec pop xchg outsb xor mov mov aam adc dec cwtl cmpsl jmp mov (bad) jne in xor icebp pusha daa jp lcall gs aam sbb fadds pop jecxz and xor aad addr16 pop mov imul mov jp dec or divb push cmp xchg push jae adc fisub and pop mov cmp jge mov flds test adc cmp and movsb es pop cld mov (bad) arpl pop call cmc jge cmc mov push rcrl lock add insb stc jp (bad) sbb or xor mov ret aam test inc repnz ss (bad) mov gs jle mov aad cltd lock (bad) out ret mov add sbb add cmpsl jnp sbb adc dec les stc sar nop xchg ss add xchg or pop inc pop push jne xor into pop negl aaa adcb mov out mov cs sbb test jle cmp inc and pop rorb icebp test or jne roll push add push pushf fmuls mov pushf mov push push cmp or xchg push jle and add stos hlt lea lods mov ja ret pop in bound pop loope xchg mov adc rcll popa (bad) mov dec sbb pop sub sbb leave push pop (bad) fnstsw (bad) jno jl pop pop jmp pop mov stc xor mov notb aam es popa inc fild fsubrl xchg pop xchg cmp bound lea mov dec push jae mov cmc ja test dec cli jg inc aad sti pop sbb pop push loope into cltd and js stos adc jmp mov fisubr xchg fisttp mov jb add mov std aad (bad) hlt mov jns jp pop das sub or orl xchg mov push mov or adc (bad) repnz lret pop push mov inc jns sahf fnstenv loopne dec insb push pop in sti je fisub movsl ret in loop or xchg cmp xchg pop xor (bad) mov repnz jmp jae lock ss test in loop pop sbb adc cmp inc sub mov push inc fs cltd in repz add fwait xchg movsl aaa ret loope idivb or xchg jmp sbb jnp int aas pop push fcomp sarb aas mov mov sbb mov fwait leave xchg fcoml xor dec jne jmp ficompl cmp jno xlat mov daa mov mov xchg leave push lods sarl fdivr adc sti xor cmp xor push and adc in or addr16 (bad) mov sar gs inc out sahf fwait jnp cmpsl call (bad) jne sub pop add xlat mov aad gs mov adcb or loop push mov and xchg sahf dec jecxz outsl sbb enter mov cmp cmp inc and clc lahf or pop icebp or aas repz (bad) xchg jo cmpsb or in and int3 insl jne push jle out dec sbbl daa (bad) cmc repnz ja popf or ja add xlat mov fdivrs adc (bad) xor outsb insl dec call sbb fs mov mov jp adc cmp out dec push mov outsb or inc cmpsb mov jecxz jbe jbe or imul clc and cmpsl fs aaa int3 iret addr16 mov mov sbb int or aas arpl leave test bt jnp xchg int3 push bound js sbb (bad) mov imul (bad) in mov clc rol fisubl sbb out push jne aaa adc es mov aad dec imul push sub dec cmp fnstsw rorl dec adc movsl push insl sbbl dec push or (bad) testl xor fwait mov dec mov cmp in aam popf xchg adc les fwait stos xor jae aas xlat popf aam sahf adc outsl jns jmp xor scas cwtl jl cmpsl andb and js add into push push fdivrs insl cmp aad pop in fstps cmp outsl aad lods int out (bad) repnz negl adc jp popa xor fdiv push jae and jne jl jl jecxz (bad) (bad) fldl and add sbb jmp push dec es movsb push insb (bad) and push (bad) (bad) pop aad in and xchg mov and lds test push enter lods add pop mov mov int3 fisub xor mov std into nop test repnz push lods jbe dec dec add and push lcall jns loope jmp ja popf xor xchg jae jmp fnstcw test mov rcrb jmp (bad) rorl xor ja test ljmp sbb nop push adc push cmp imul push adc cmp cli push gs xor ret andl push into test dec jnp fldcw lock or je push xor rcr adcl lcall push gs sahf fldl push xchg andl adc inc jbe jg and lret dec (bad) mov (bad) cmpsb stc push dec rcrl outsb cmp in (bad) insb js sub or mov xchg jge gs jo mov cltd (bad) mov dec xchg lcall insb xchg jmp sbb add insb adc dec ret push cwtl push out xchg mov sbb rorb test cs cld sbb mov pop loop cli or pop js pusha addr16 dec outsl stc mov cwtl sub jo lods les jne fildl fsubs push pop adc xchg dec and js dec add jmp fs and lods fmuls mov push add cmp jmp sub push popa leave out sub (bad) jp aad stc add mov mov popf mov mov mov jmp out add lea or popl dec int cs jno out fisub or lock cwtl imul sbb or and xchg mov shr sub outsb sti cmp push dec cld ljmp ret bound in jne mov ja sub test dec fsts cwtl icebp add and inc scas rol cmp cs cltd inc and pop add notb add or lds movsb jmp xorb out les adc inc rcrl xchg sub inc idivl or xor mov div enter inc sbb shrb stos mov (bad) outsb and xchg add int jns (bad) dec xor les mov cmc test cmp cs jo jo inc test xor in aam push mov cmp mov nop push out add jecxz xor cmp push cmpsl push mov jbe xor cmp notl adc and (bad) sbb sbb loop orb dec into ret shlb push mov sbb jmp dec lods dec jl cld (bad) pop dec int int cmp sbbl lock les sbb scas outsb jg push inc out lahf shll add pop clc es lcall add inc push call or cld mov decb orl push loopne cmpsb mov cli add mov in call add imul jecxz sti jbe jns adc dec mov mov iret pop add dec fbld js inc jns jnp add adc addb pop mov mov gs cltd int push mov scas lahf outsl nop sub push xchg (bad) repnz sbb arpl sbb add jl (bad) in mov push or imulb bnd pusha or js (bad) adc jns std leave cld mov cmp ja out divl mov jp dec lret popa adcl rcll lock orb and pop cmp add mov movsb and inc dec mov ret shrb bound dec sbb push mov inc ficomp and mov stc mov jne daa inc popa jle lcall cmp gs std lock sti into xchg fs push inc call pop stos (bad) fidivrl sahf test pop movsb pusha out mov loop pop hlt dec stc sarb push mov dec or jno and xchg ficoml sbb (bad) lods sbb push stc inc es mov inc repnz int or pop adc jbe or roll jns data16 hlt dec inc mov adc lods mov xchg inc cmp mov int3 inc rolb rclb call dec mov dec aas out adc data16 sbb pop push adc adc cltd and ljmp int3 sub (bad) jne dec xchg mov inc lods mov aaa out inc push or in sbb inc outsl add stc sar xlat fwait or clc adc mov jbe inc dec jb adc int3 pop sub dec or cld fwait idivb fsts mov add lret jb clc mov push jno es gs das or imul jl psllw inc jb lcall test push fnstenv jp jp movsl out fnstcw mov adc repz loope jbe sbb orl in add adc (bad) jmp and in cmpsl (bad) push js jae xor cltd add adc pop pop cwtl js and (bad) jbe ds ja mov push cli xchg mov sbb sub jae dec pushf push and (bad) cld out sbb out stos arpl push daa enter lods pop pop xchg mov dec mov lods in insl xchg lcall and andb jbe pushf dec in adc addr16 push pop jne and pusha insb divb mov fucom mov xlat negl test xor int3 rol xchg call ret push cmp fimull fsubr dec movsb jne movsb into and jp enter cmp dec pop aaa cmp (bad) cmp leave js pop push inc rcll icebp in (bad) jl rcrb rorb pop sahf stc fisubrl sahf push add andl js xchg push cmp rcr (bad) ss adc loopne push dec daa jecxz inc iret cmpsb (bad) iret pop in xor (bad) pop mov xor push jno es xchg addb push push sahf aam (bad) stos pop cmpsb outsb xchg xchg aam and xchg push mov rcrb xor cltd xchg fnstcw xor loop push jnp rclb or jl push jno ljmp push add pop dec add pop pop jle sub mov lds ljmp push sbb sub ret mov iret pop sbb and fsubrp add xchg inc ret (bad) fwait outsb sub rcll mov ss icebp ljmp xchg in dec dec xchg inc je scas int fs jnp cmp pop or ss enter pusha (bad) sbb mov xchg cmp adc xlat jp jns int3 cmc shlb cmpsb add (bad) loop shlb dec leave or (bad) mov pusha pop enter cmp test bound rcrl and cmpl or call push loopne xchg and (bad) aam fistpl imull sub mov adc pop dec scas div xor pop push rcr leave xchg add adc nop leave in arpl mov shlb inc inc scas mov mov mov or pushf push rep fdivrp clc arpl jl jnp bound lcall lock dec lods scas incl mov iret pop inc aam xor cmp loopne push xchg sbb mov xchg mov mov and mov pop cli lcall jns add sbb mov pop adc pusha (bad) loop inc daa jge test fxch push xchg push stos sbb aaa and mov add stos push jbe in adcb outsb test pop aam push cmpsb lea jnp add (bad) (bad) mov inc sti mov sbb or mov cmp imul mov sahf push xchg je pusha and mov or repz adc pop ss pop push aam xchg push dec or ja mov jnp or addl xchg sub mov inc sbb flds movsl inc adc mov icebp sub cs mov mov pop jmp daa adc aam inc call (bad) and dec pop push push push push popa and fdivrl in mov call or loope push sub pop sub mov pushf std insb adc stc and xor ss dec push pop in cmpb push psraw out test sbb (bad) popf das jne pushf fstl nop (bad) mov dec pushf out or rcrb xchg sbb and pushf clc in out xchg or mov (bad) out mov sti lods cmp xorl fmul and push out outsb aad les out rcr mov mov mov leave fs imul subl popf sbb test nop mov loopne mov and movsb hlt xchg jae inc cmc sub ret fidivrl leave push pop mov pop jb mov dec fdivp fistpl ret fmulp cmp push push xor daa shrl sbb ffree cmp ja fwait cwtl bound xor movsl aaa and sbb pop dec xchg iret or dec loop push mov push outsl int3 lock sbb ret cmp in in fisttp cmp lret mov dec out dec fsub gs mov xchg addr16 push test xchg sbb int3 or sbb add dec pushf lahf xchg scas xchg sti cmp mov (bad) aad fnstsw divl and dec lods (bad) xor push test push aam jg fwait ljmp insl roll addr16 imul insb mov out insl lret adc sbb dec push stos fwait inc xor pop gs push jno popa adc and pusha aas subl int stc and mov addr16 jo jb ret dec ficoml fildll sub fstl mov je sbb jne in lods push xchg sub add mov jg pop (bad) push in stc loop xchg pop fistp out inc jno imul (bad) cmpsl leave and pop lret ret xor (bad) lret lret mov mov or aad lahf stos cmp in push imul adc loope mov dec push xor inc mov push jae push and aas fdivr lea data16 mov addl xor inc pop sub jae mov mov or pop dec out (bad) jb add xchg mov push jl movsb sbb aas mov pop mov or (bad) push add (bad) mov xchg and xchg dec stos xchg icebp scas daa das push loope stc sbb dec or ss cli fldcw and stos mov jb cwtl sub fimul int mov ss and or dec dec lcall insb xchg cmp mov xchg adc repz inc dec mov dec daa sbb ds call xlat stc cmc sub xchg mov add enter push into sbb mov adc pusha xchg mov sub aad roll fbstp out mov mov (bad) xchg jecxz test cmpsl ds cmp sbb pop std xor test and mov repz adc dec jne or movsb sbb mov cmp lahf neg inc mov out std (bad) and jl mov xor mov repnz and pop adc je inc inc imul js xchg pop and stos test xor lahf lahf leave cs pop push add mov dec mov clc testb pop outsb lcall lcall lahf pushf (bad) push dec stc or xchg push dec inc pop fbstp mov mov dec or dec scas scas testl xchg mov jle sub and sub sub (bad) std lahf inc xchg push xchg fwait jmp scas dec xchg inc push out icebp aaa mov pop mov sub or mov test push in (bad) or xor fwait mov enter inc mov or adc xlat sahf cmpsl lret jne pop xor leave xor cmpl int3 adc and mov jl jb pushf jbe ss (bad) jnp out pop sub js xchg push sbb sarb adc sub or mov pushf dec lahf sub or dec adcl lcall mov or lcall pop jl push sub mov push cmp fstp jmp jmp nop xor int sub mov and cld in not jmp adc iret mov out popa js cltd in insb dec push ret cmp pop sub xchg lods outsl out pop push ficomp sbb sbb addr16 push mov aaa cmp mov insl sbb pushf in add gs stos test scas rcll sub outsl mov enter mov test push ljmp mov xchg jmp adc xchg xor jns dec incl iret mov mov sub mov pop xor (bad) sbb jp pop xor popf jns xor (bad) push fs test xor loop mov test call insl cmpsb es stc stos testb dec in mov mov mov in shrb mov jp arpl shrl pop sub cmp clc xchg inc mov adc and jp sbb push mov ja icebp (bad) fs add rcll push mov arpl add nop xchg add add mov jo cmp popa mov push je pop sbb leave jno jo fwait lret ljmp scas xchg mov pushf cmp sbb ljmp dec pop mov and stc push call push lcall push add dec cmc dec mov push jmp sub outsl std xchg jns lcall or fstps mov dec bswap shr jae jo xorb push sbb push push pop mov sbb stos and push pop mul cmp inc or sbb das (bad) pushf add nop jno hlt xchg pushf xchg ljmp pop in jns pop inc push fcmovne xchg xchg ljmp sahf pop cmp push out xor adc adc (bad) pop dec loope icebp mov xchg sbb not sti pop or inc fildll aas mov insl sub insl movsl dec not cmc jmp dec mov leave pop add or outsl call fs and cli adc inc fs push pop xchg pop int3 rol inc clc fldcw and aad mov lcall or cld decl ljmp orl idivb add movsl lahf fiaddl lea pop ret mov insb xchg mov inc cltd out jg push sub fdivrs xchg mov leave sub push in push ja sub nop out mov xor sub imul mov jle gs test mov cwtl ds sbb sub xchg xor mov jle (bad) loope (bad) dec sbb nop popf decl and pop inc push in lods inc or test xlat xchg add jmp in dec ja dec inc cmp push aam cmpsl stos pop mov dec stc sbb pusha repz into or xor fs lcall leave cmp push cmpsb icebp (bad) fcoms mov scas cmp sub push or mov in ljmp pop fld call ret pop inc inc mov les fbstp mov sbb pop inc pop push ja (bad) sub mov and dec sub xchg mov aam mov loop jne lods xchg je and push outsb inc mov mov push mov mov lock cmp push (bad) icebp push inc imul xchg inc arpl stos nop sahf mov dec jnp ret jo mulb cmp iret mov sbb xlat pop lods inc xor imul jecxz push sub les xchg out fildl (bad) in mov xor andb sbb xor inc mov inc imul ret mov mov scas xor push jg xchg lcall cmovge repnz mov add popf or fistl mov jmp divb imul pop jnp cmpsl mov add push mov jne loope adc arpl stos inc loope push leave mov cld add loop inc iret mov push mov out cs lods mov lea jo cmp fs fstps push mov inc in movsb das test testl sub jb idiv add mov es jp,pt sub fsts push add pop mov clc pop js xchg popa or (bad) lret mov imul cmp sahf xchg mov xchg pop insb push ljmp cmpsl leave mov jecxz jp mov sahf mov push push loopne push push push and cs punpckhwd test fnstcw in mov sahf insl insb aaa lret pop jecxz sub sbb and movsl mov in inc pop or and int3 cwtl cmp outsb lods xchg shl push cmp mov cmp mov popf add outsl stc xchg inc je sbb mov pop callw cs or push ret sub in mov mov or pop enter xchg leave aas sbb dec aam sbb mov int3 xchg jno mov mov jg fisubrl pop shrb mov cltd sub and cmp lock stos jb and dec sbb (bad) bound sub ja xchg sti in (bad) mov js adc inc sahf fcmovb pop sub sbb test cmp cmc adc pop xchg (bad) add cwtl addb mov or gs xchg dec hlt mov dec das nop xchg adc xor rclb aad inc xor pop addr16 pop push movsb push adc sub cld xchg fidivr push xchg insb in cmp addr16 xchg xchg jo jg add in xchg sub sub (bad) fbstp push jno (bad) cmc xchg sbbl (bad) les jg in or inc pop xor adc arpl xor mov mov push ror sub dec fmull sahf xor aaa xor cmpsl mov xchg das loope movsl loopne jl dec sti aas in pusha jnp,pt fucomp mov addr16 lret out sbbl dec sub mov fild add mov push cltd sub out je sub shrb (bad) ljmp idivb daa mov inc cmc xchg xchg push not pop jo push mov xchg push ljmp xchg xchg add icebp sbb test pop imul xor sub cli fistpll cmpsl or adc imul insl pop shrb pop test insl cmp int sbb pop jecxz mov push loopne loop mov outsb ret or add push sti jns hlt sbb iret iret ds mov clc push fcomps add inc mov pop add jae out xchg push xlat in iret pop dec loopne inc xchg adc push jb push fldt sbb mov jle xchg inc mov mov xor fs jle dec test test ret ds mov ret int3 pushl jbe lock lcall inc repz add ss ja ret sub dec push xchg jnp loop in pop cmpsl arpl sub jmp mov jb xchg add aad jl jno ss or jmp aad push pop mov pop repnz dec inc mov xor stos mov lds and mov adc sub outsb xchg movsl push popa sub in mov or rcr mov (bad) or add cmpsl and out lret jne inc gs rclb xor in xor pop sub pop pop push test pop sbb jmp dec (bad) into push lods (bad) mov sub mov cwtl repz iret jbe jb je xchg int3 add leave xchg push cwtl shll clc pop push popf in addr16 imul test jmp rorb nop es and enter cmp push push rcr mov stc rcr or fidivrl pop jo fildl mov and leave sub fiaddl cmp jae cmc xor iret xor fildl (bad) out push pop loope push jno adc daa out dec inc lock js mov mov cwtl cmp xchg lret sub mov mov cmp inc (bad) cmp jp fs sarl cmovle cmpsl mov pusha cmpsb push pop xchg repz cli (bad) sbb mov fldenv mov dec xor icebp (bad) jbe mov sub adc add lret and sub or lret cmc movsl adc stos mov das mov nop jmp add mov pop ret dec mov out lods aad stc jnp xchg aad cwtl movsb cmpsb inc push mov out fisubl xor xor inc (bad) sbb pusha adc xor mov shlb push (bad) xor pop or jbe and leave xchg (bad) in pop test xchg loop jle lahf mov (bad) mov dec cltd push popf push mov clc repz scas pop in mov push jg inc pop data16 js inc iret mov push call sub popa sub les ss lods sub xor jnp sbb jmp out cltd adc xchg into and xchg (bad) out test rorl mov sbb (bad) clc aaa fisttpll push lods jne inc (bad) sbb mov push sub mov int3 sbb add mov mov sbb incl hlt mov mov les rorl xchg mov and out shrl loope pop out add imul xor in mov aad push imul mov inc movsl das (bad) mov stos fisubr mov cmp adc pop popf and jl fwait outsl xor pushf xor cmp idivl inc sar rcrb mov xchg jle in nop and (bad) ljmp dec popa push dec test hlt pop xchg mov jecxz insl jle ret hlt jno fistpll (bad) arpl ret xorl ret xchg mov invd sbb mov fadd mov mov lahf mov cmp cmp pushf inc pop inc add aam inc jae mov out bndldx xor mov aaa out sbb hlt xchg and jmp cmc pusha xor in cmpsb in mov (bad) inc out adc add dec push divl movsl (bad) mov adc adc fcomps sbb mov push stos enter testb mov mov jno jg test std mov (bad) decb enter mov fwait push jge push imul movsl cmpl xchg shll sbb pop call lret mov test nop push cmpsl xor pop (bad) fildll mov mov gs jl dec add les call lock call push mov lods cmp mov mov sarl cs ret jl jb push (bad) pop inc loope fwait daa push xchg popf push (bad) mov (bad) je xor xor add xchg add imul bound mov (bad) jbe fcoml adc nop push out mov daa push push sbb sub lcall cld mov xchg lods mov sarl jge test in das inc dec push jg mov repz mov pop jbe mov pop pushf cs std mov fisubl and popa add mov cmp out aas sub pushf mov push pop in cwtl bound inc jmp sbb inc out in cli fwait fwait dec lahf jg loope in lret lahf pop adc repz add push xchg stos push mov pop popfw in mov push push lea sub sub xchg push mov sub mov dec adc fwait push lods mov fwait push (bad) cmp jp inc mov mov inc pop jne xchg jnp xor sub sbb push push push push scas mov aam leave (bad) icebp cs hlt cmp jns adc ja mov call loope xor xor (bad) xchg mov add push xor cmp loop jge fdivrp inc jle sbb call cmp je and mov push lahf bound icebp mov dec or mov dec pop push cltd ficom clc int es xchg jne adc in bound sbb popf call fwait pop and ret jno sub pop cmp out test cwtl push sti lret mov cmp imul arpl jecxz pop mov shl sbb jae cli mov outsl stos and scas xchg gs push aaa lea repnz insb jnp mov test fwait push sub sub xor jno outsl cld lea mov jmp cli or lahf xchg outsb sub cmp (bad) and hlt pop flds stos fistpll ret in (bad) xor std push sti mov sbb inc out imul ret add in push jg aad pop leave cli cmpsl push enter out in out (bad) vpaddq sti add add faddp push movsb lds pop jg test adc or into pop rorb sub popa mov gs fldcw repz xor inc (bad) adc inc aad nop bound mov or sub xor push mov fbld jecxz dec sub lods sub sbb mov pop je dec stos jle movsb jp enter clc xchg pop sbb push inc mov leave sbb int3 bound push pop adc ficom rorl jmp adc pop andl (bad) adc loope test test adc popa inc adc test stc loopne jnp imul in or ret pusha mov add sti jbe inc lahf xor imul sbb xor push loope repnz rcrl and mov aad mov (bad) jo xor pusha xchg ret inc cmpsl add test ficompl enter push das aas jp (bad) mov adc xchg lds mov cmpb cmpsb jg dec or es sub outsb pop mov xlat xchg inc shrb jecxz aad icebp lea lea jns (bad) mov xor bound loopne add cmp push jae push mov inc lock cmc lcall jmp inc push popa incb ljmp inc popa cwtl popf scas in mov fiaddl push xor or inc xor insb fdivrl add addl sub pop (bad) xor ret pop pop push es aam sbb faddl popa iret test andb xchg test ret jne xor jg dec sub not jg divl xchg mov cmp popa lret xlat hlt jl iret out adc cmp fisttpl dec add mov add mov lods pop mov xlat adc into jb fldenv xchg or mov movsl or (bad) jbe mov jmp ja dec out push xor xor mov and ret pop insl out mov movsl andl mov push adc and fnstenv ret mov mov ret push cmpsl dec mov inc stos add call mov push pop xor (bad) pop fiadd push (bad) adc sub test cmpsb jne pop popa mov sub mov and add mov das sub adc fild lock xchg inc xor in pop and push cmp dec cmc jns push ret xchg scas vpor mov (bad) mov fistpll sbbl sub out lret ret inc in rcrb cmpsl and cld jle xchg mov stos push cmpsl inc inc into or mov in push add aaa outsb pop ret mov jno push pop dec add or dec xchg rclb dec int push xchg loop icebp jne pop (bad) mov jge fildll inc daa cmp fisubrl cmp jge pop jns pop pusha cwtl ret mov das inc loop aam rcrl js sbb shll out movsl loope pop xchg sbb addb cltd mov cmpxchg lods add out mov test pop in aaa or push mov jnp add push dec jae fstpl sti add dec cmp sti xor cmp repz mov fwait add fadds jmp test xchg in and xor jmp aas pop pop std pushf pop mov fcomp push mov add popf dec in xchg adc mov or les sbb xchg loopne and popa popa pop pop mov out lea icebp dec aad adc push push in inc mov jp in inc xchg adc adcl ss jle inc jmp jl (bad) mov mov lret or inc cmp mov stc enter cmpsl es dec fisubrl ds mov dec imul sub dec in clc jle mov xor jnp loope aas sub sahf push and adc cmpsb sub aam gs std push pop hlt jbe nop mov rclb mov out shrb mov or fs jae xchg shl enter enter sub dec pop jl xor mov sbb leave inc movsb fwait mov pop cwtl insb add mov neg add mov mov and lods mov mov cmp sbb lea dec (bad) or xchg bound and jnp pop jmp inc jno xchg push int shlb mov ds (bad) xor test inc jmp ret mov int3 xchg sub inc imul enter mov mov stos sar addr16 or cmc push xor fldenv pop jno cmc shrl (bad) push fs xchg pop (bad) outsl loop lock jae inc sbb sbb pop repnz call jnp jb addr16 loope bnd or mov cmp aam sti shll addr16 pop loope cwtl pushf shlb jbe fmuls ss mov lock xchg jl lea das in cmp or mov repz push push sarb cmpsl lahf and fldl inc neg cli xchg and insb in pop mov sbb ret xchg mov lea pop popf movsl (bad) xchg int movsl aaa psrld fcomp jg xor adc test je cs movsb xchg dec pop adc nop and aaa idivb cwtl in ds sub stos imul mov cmp xor xlat mov (bad) mov xchg pop notl push rcrb inc rorb mov iret icebp push loope aad ds icebp add orl ret cmp lahf ljmp sbb push lods fimul dec rclb pop or mov push sar cld jmp lea aam jae loop setp in mov sub jo lea and (bad) mov mov add cmp std cmpsl jbe mov pop subps pop or mov mov push jecxz fsubrs pop (bad) repnz add cmpsl mov adc adc mov lock push or push mov mov mov push shrl iret mov pop adc jge jg cmpsb push (bad) xchg int3 cmp mov mov inc (bad) outsl ficoml push cli mov ret (bad) and decl mov adc mov out test stos sub jne sub repnz pop inc nop mov dec or push inc jmp dec cltd sarb in and add mov and adc lds aaa ds (bad) pushl dec cmp mov inc inc inc lret (bad) sub jo push and mov scas hlt xor dec lods mov sub outsb mov movsl mov xor scas test sbb pop push cli push sbb aaa movsl or and pop jb inc (bad) mov ljmp into push ljmp adc mov fistl ss sbb mov shll daa (bad) jmp cmp or fstp std push push push je mov add mov mov mov movsb cwtl daa outsl sub add (bad) (bad) (bad) clc mov lea prefetch and mov mov mov cld adc lret dec jne sarb into mov add add cmp dec (bad) movsb pop aad or or dec out bound mov repz mov mov mov cli out push fiaddl aas xchg clc mov aas cmp inc cli lahf or push (bad) fnstsw mov push push push mov mov sbb jg jb mov pop mov fnstsw push add push adcl imul popf loope add out clc ret dec (bad) push ja and fsub (bad) jns and xchg sub inc sub rcr lcall mov cmpsb daa out sarl mov mov (bad) popf stc xchg xlat or sbb sbb hlt out pop or mov imul in sbb push push lods and sub lret stos (bad) addr16 loopne shl stc (bad) mov inc minps aam lea in push dec cmpsb repz xchg movsl rol rcrb add inc loop jb setge sub xor xchg iret lods cmp xlat pop movb mov cwtl pusha or (bad) insl (bad) mov push xlat aas jmp and jno (bad) leave and fisubrl xor sub dec (bad) dec in in cmp dec and std and hlt iret fnstenv enter imul xor push idivl pop das jmp mov adc loopne adc lcall (bad) cmp jg xchg lret subl imul add adc sbb cmpl jno cli dec aas imul dec fs outsl sbb sub xor fistpll loop jle je fcomps jl jge mov mov push std fistpll ja sub xor fdivr xor sahf pop ret or inc or xlat xor xchg mov push pop add mov sbb sbb mov sarl js je xchg sub rcll mov ja insb icebp inc in addl mov mov and pop mov cwtl clc add mov ffreep sarl rcrl fadd cmp enter je mov dec fisubr push loopne (bad) es incb scas adc xchg mov jnp scas xchg stc pop sub leave int3 leave adc fist jb test sbb cmpsb cmp mov loope out adc sub pushf std jb arpl sub test or divb ret mov jle jle mov mov push mov ja jmp push mov jl sti sarl pop pop (bad) pop ret mov mov sbb cmpsl mov lds inc pop push insl int3 daa mov xchg sub mov push dec and lods and cmp mov arpl fs int3 jns in call jmp cmpsl in test mov insl jecxz ficoml push pop adc ja iret in in ret mov sbb jno jne mov movntq icebp scas mov push popf int aaa gs mov xchg pop into or or pop adc popf fistpl jge popa sbb std push cmp into jo hlt push push mov pop cmp mov mov mov out lret mov repz fiadd or ds cmp lock dec test xor jnp test repz inc xchg add stc sub or stc out jmp jge push or roll arpl mov or jae inc sbb std push stos cmpsl jnp pop adcl mov (bad) (bad) rolb addr16 pusha adc jae outsl enter push dec lret jle jmp sbb mov dec mov or dec cwtl mov and lods jbe (bad) stos aaa in movsl arpl mov mov test cmp jmp setg ror je add cmpsl sbb or or pop fwait clc fild addr16 cltd ss sti sub mov int3 adc mov mov repnz dec inc push cmc push xor jno adc inc cs dec dec push sti dec adc sub nop les adc dec jg mov dec dec sbb xor dec mov cmp cld dec mov nop mov add mov (bad) dec inc inc mov cli dec (bad) xchg rcrb imul xor and xlat leave into (bad) int in mull mov loopne pop push and cmc add cs sbb xchg not adc cmc xor bound sub ret sahf xor mov aad inc add push js or ret (bad) fcomps out or mov xchg jbe scas jge sbbl aaa xchg and (bad) decb cs xchg scas sub sbb stos out (bad) repnz frstor mov stos lods jnp fimull test pushf int3 call test cli add aad cmp jecxz xchg fbld lods clc dec and data16 sub in lret and loope rcrl in fimull aam loopne jo test loopne push test add xchg (bad) into mov cmpsb fdivl xor sbb inc in adc push pop jne jns pop mov xor jle repnz (bad) (bad) test orl ja jnp xchg and (bad) or test inc push jg cltd add imul cs es fidivl lock lahf mov and mov sbb add jmp cmpb rcrl notl enter pop (bad) repnz adc push sub cmpsl mov div rorb or stos pop jg xchg jnp dec cmc lahf mov out inc mov add mov lods fmul (bad) mov cwtl adc inc lret out add xchg fdivl xor ja,pn test push (bad) pop cmpsb pop movsl mov scas jnp push and jp mov mov mov and sub adc mov rcr std mov inc mov lret pop and notl loop inc insl jmp push push jp cmc lea scas inc pop add adcl push lds outsb popf adc dec xor or test adc push fstp ja or xchg cmp lods clc pop imulb jae jne push push lods push cmp sahf shr jl mov (bad) jp cs jg leave (bad) or ljmp jne lret mov stos imul xchg mov ds push sub xor dec bound push loop in sbb dec scas repz xor add jg sub adc imul and outsb nop pop lea daa xor mov push sbb and mov imul shrb aam sarl data16 dec pop rol dec (bad) xor cmp mov and and sbb pop adc mov js add jnp mov das inc loope or sahf ficoml in xor mov inc adc setbe mov (bad) xor pop push sbb jp cmp jp jnp jecxz enter adc inc inc dec push shrb je pushl (bad) sarb mov cmp fnstsw aam push repz push mov ret inc push mov pusha sbb movsl daa xor dec repnz addr16 call das outsl js fwait mov pop out pop icebp inc scas xchg jo pop in sbb les fcomps lock arpl scas jbe sbb fisttp jge mov ja and imul decl imul fimul pop dec loope (bad) rorl jmp inc push sub insb push and xchg es in sub mov stos sub outsb cmp push jl (bad) mov sarl xchg inc and cwtl xor rol mov test add fs mov cmpsb clc mov or stos test fsubl mov jp cltd lods pop inc aad (bad) sarl out arpl sub adc cmp jne in stos lret (bad) mov lcall (bad) fwait in inc dec pop xchg test jbe pop or (bad) sub fdivrl pusha outsb xchg or add push push or mov xor dec test xchg jno,pn fnsave (bad) mov and cmpsl mov cwtl es in pop or notb sub cld into xchg jbe pop pop loopne and arpl std pop xor out mov sub int3 mov (bad) (bad) js sub inc jno ja mov in mov lds jle adc sub js mov pop cmp push mov addl jmp pop add sbb fmuls rcr repz mov rcll jae sub aas and and add int3 incl sahf rolb xchg adc orl xorl xor hlt or les pop dec jecxz int push fdivl dec push or add and mov out jmp mov mov xor push pop aaa aad rcrb pop add add jl cwtl and sbb push push in mov stos inc out cmp into mov loopne xchg into lods fisub push lds idivb popa ficompl mov jg sbb or inc push jge mov rcrb ja inc and idivb (bad) pushf loope cmpsb xchg pusha ror or add xchg mov ret or mov dec loope mov inc add jno push ret mov dec call outsl repnz cmp mov imul add jns cmc hlt out ficompl mov mov xchg sbb das and cmc pop jle push sub xchg stos xchg out imul movsb ds pop jp (bad) push cld aam sub push pop sub (bad) popf fldenv inc leave sub clc and in inc inc cmp push scas fsubp or cmp mov mov add adc sub cmpsb iret fwait outsb sub fbld jmp out push pusha and inc cmp sbb mov out in popf lock push or or inc popa das lcall inc std outsb outsb in inc and repz jle sub (bad) lret mov fisttpll dec cmp leave mov mov cmp mov add jge adc imul insl loope (bad) jp gs pushf out jg movsb lahf add sbbb cmp cmc push lods or xchg lret mov xchg push es push push jno call sub movsl mov jmp cli adc insb notl shll jge jmp inc mov out movsl push stos (bad) or stos test test xchg add xchg or (bad) dec std adc insl pop mov arpl dec dec adc sahf insl push or enter mov sub adc inc (bad) cwtl jnp dec das xchg test aam jnp std adc pop and pop push insl xchg loopne push ficompl jne stos cmpsl fimull xor xchg pushf repnz dec xor dec loopne nop sbb test imul xlat insl fistp mov out pop sti push sbb cmp lds pop popa or stos cwtl cmp sub lcall xor sbb cs xchg je loopne divl mov test call push lds pushf and loop repz inc fs push out push push cmpsb fisubrl jmp xchg adc pop pop test rcrl cmp enter addr16 sbb or add lods inc inc lods movsb insb xor xchg leave icebp xchg xchg push hlt sbb js pop popa xchg sub pop or imul or loope mov pop movsb cmp mov mov test lods xchg cmp dec lds bswap mov fsubrs sub in sbb inc lret lds stos xchg and mov inc or jp test xor or fisubrl test mov or je mov mov call adc mov (bad) lahf and mov insb fild iret xchg ljmp adc lods push (bad) and cwtl mov outsb sub lds popf mov pop icebp cli sub outsb insb jno mov mov ror xor fiaddl out push cmp pop popa cmc imull mov inc je js push int3 mov test clc fisttpl add cli xchg in data16 push jo idivl loop fbld inc dec cmpsl xchg sbb mov sub mov add sbb popa orb test dec insb dec lahf pop sub pop stos jae pop jnp inc (bad) or loopne inc mov add sahf stos pop push jmp outsb or sbb jns jge hlt xchg pop jo mov adc mov sbb idivb ret mov xor and push shrb test sahf pop (bad) adcb out cmp mov mov adc insb push mov jmp ljmp inc es adc hlt aas das repnz jl ror cmc lods jg xchg cmpl push pop push mov push and mov xchg add push sub sub push push out cli inc lret ss inc mov jb,pn push test sub shl or or pushw cmpsb mov dec (bad) out fs dec jg stc add icebp dec jae push jae hlt add mov pop fwait dec mov mov popf and adc mov jns es pop sbb push push inc loop inc test je sahf mov xor stos mov pop in lret mov adc out stos mov lret (bad) push xchg push adc push das mov xchg dec rorl jmp adc jmp inc movsb mov fsin dec xor (bad) inc stos inc fcomps cld mov add testb pop push fidivrl cmc cmp loop dec inc jg fisub adc sbb mov aam (bad) aas cmp mov fcoms cmp mov or (bad) dec pop fadd push or shrl jno addb mov fidivrl xchg mov gs lretw in mov sub std adc mov in jl mov aad mov pop mov or add pop add les lret imul pop imull movsl fistpl fadds jp push jecxz aas inc jnp aas iret (bad) cltd (bad) stc xor daa pop out xor sub mov enter jbe insb xlat arpl sub loop mov inc in nop sub fsub mov ret mov outsl jecxz or jg ret adcl in mov insb cmc add enter xor loope insb cmp pushf dec mov aaa stos out adc push cli mov pop into scas js mov mov jae mov (bad) xor sbb mov lret cld adc inc into add test icebp subb leave je addr16 insb sbb ret jmp out cmpsl test icebp jl out (bad) divl sbbl movsl shr mov (bad) jb sbb cmpsb pusha or jp fcmovne outsb sahf int3 jmp test (bad) je sub fisttpl push (bad) jne xchg test jne adc scas or dec pop push xchg jecxz enter daa iret or pop pushf mov xchg hlt cltd stc insl fwait or adc fwait in add ret movb out sahf out data16 jne cmp test or pop jge xchg int iret loopne mov mov add (bad) loope sbb mov mov add xlat clc pop int3 lds ljmp aad ss addr16 push ss imul inc insb pop jne test scas xchg pop je addr16 jmp pop add or mov xor les popf rcr (bad) cmc jle daa pop adc cmp (bad) repnz andl cli sub xchg leave and xor outsb pop jp xchg pop mov push stc inc test sub scas pop add inc xchg pop ljmp imul cmc sub inc (bad) setbe imul sahf xchg and (bad) xchg sbb push int3 scas je sbb imul shlb aad in fdivr cmp test pop pushf xchg adc add adc add aam xchg jae fst inc data16 insw lcall movsb pop xchg push cmp or sarb popa stos add in es stos in adc rcll mov hlt fildll call subl sub push clc adc lea test fistpl les add push mov mov pop jecxz out jecxz sub sbb push sbb out or mov inc jmp lcall and xchg dec cmpsl or iret into jl inc jmp mov fisub mov push pandn pop enter sub or icebp lcall dec jne cmpsb (bad) xor and (bad) add aad enter adc or stos out out (bad) adc dec repz sbb out movsb mov dec mov in or lahf repnz sub lods mov es push sbb mov test mov mov enter sbb pop xchg adc mov in add or pop mov mov mov cmp sub aam cmp xchg push ljmp lret test js sahf inc (bad) (bad) es popl je cwtl enter js cmpsl ljmp pop aad mov mov loopne jge je insl adc sub mov add jmp pushf arpl lahf test in stos mov and (bad) mov sub add xchg std sti ds xchg pop ds add lods inc xchg xchg loopne ret sbb xchg fistpl pop add xchg sbb movsl or xchg pusha or push pop nop lock loopne loop jb cmpsl and and xor jmp pop fs sub or rcrl mov inc (bad) addr16 insl into inc and sarl and mov xor imul push inc push inc cmc popa mov imul push inc sub in ds (bad) pop cmp aas push adc xchg cs xor pop and dec scas out push mov or movsl xchg test xchg into (bad) cmc insb clc mov ret jae insb jge addr16 add mov mov and mov les or pop in jg int3 mov aaa push cmp (bad) je dec xchg jbe cld icebp int mov mov imul outsl popa (bad) cmp sar xor shrb loopne lcall dec mov add lret sarb std and push loopne test and push gs jmp pop out pop xor jnp mov mov xor dec pusha xor push jecxz hlt jle mov mov push cmc adc pop stos mov je test add inc sub and pop jb pop outsb inc cltd fisub add jbe ds icebp mov cmp adc daa push sbb adc hlt aaa pop aas pop ficompl dec jne xchg pop rcrb outsb hlt sbb aad lret mov add ret repnz lds imul movl mov adc cmpsl and dec js add jmp ljmp inc cmp push xchg lahf fdivl fidivl insl scas shlb sbb cwtl hlt loopne scas sbb mov ja je outsb xchg gs cmpsb sub in jle call mov icebp adc adc loopne je popa xor addr16 bound call or cmp sub lret ja cmp shll loop sub xor aaa iret sbbl jae cmc clc push call hlt aaa aad loopne repnz loop std xor sub loop xor push pop sub (bad) xchg lahf fcmovnu fwait jbe sub or outsl adc pushf xchg loopne sub and sti repz sbb jecxz hlt repz fstp js cs fistpll scas add pop xchg int3 mov in mov incb push adc out jne fs lds add out xchg int dec aas scas fldt lcall jmp cltd sub aam repnz mov leave jecxz jmp shl xchg inc sbb mov idivb lret jg mov icebp pop daa fmull packssdw movsl jl cld pop add mul pop andl loopne xor cli push pop fadds mov pop add cli inc inc das or data16 sarb ficom in cld or pop mov push neg mov pop or mov int3 or repz jns aaa (bad) push inc push dec adc fistpl xlat and mov loopne,pn cs and push dec mov push shrb sbb cmp mov repnz cltd fbstp mov mov mov bound jno leave and inc add cmc iret inc es sarb repnz jno mov sub fnstsw fldl sbb sub mov popl mov mov mov je les addr16 push dec push pop mov inc pop mov cmpsb cwtl mov mov mov in popa add push cmc int lock ret sub std mov lahf jmp xor mov mov fmul pop mov xchg clc and mov cltd mov xchg aas sub xchg ja nop cmp cmp ret fildll insb fwait mov mov outsb sbb mov sub pop leave add inc mov cmp inc sub xor add xor push adc cld ror xchg mov mov fnstenv dec mov sbb fsub out inc xor inc popf xchg enter fisttpll ret jnp outsl xchg rorl fstl add fdivl jns cmpsb cmp sbb hlt mov inc ret gs fnstenv jnp xor push je xlat les in xchg (bad) jo test cli sbbl mov jbe addr16 dec mov dec leave (bad) mov stc ftst mov jmp scas push jmp mov les popf dec lea push ja pop aaa jae repnz mov sbb in icebp idivb std nop ds fildl jp inc xchg mov pop xor mov add inc (bad) cmpsl enter xor mov mov cmp int3 dec xchg cmpsb jl ljmp sahf cmp movsl mov scas (bad) cli and pusha inc sub mov pop mov sbb jbe sub xchg or push inc pop jmp pusha xchg xchg xlat and (bad) call push mov xor lcall fimul int3 lock adc fnop mov jg mov dec dec repnz xor aam leave movb jg mov adcb call mov jnp,pn (bad) das add and sub jne adc insb jmp dec popfw leave pushf insl and aam loop mov sbb add inc sbb xchg pop lods add stos and push in sbb (bad) stc mov loop mov out and adc xchg sub mov aas xchg sar popf aad xor sahf push sarb pop sub mov test jb cmp lcall push das jne popf fwait jbe mov sti jae cmc test and enter sbb push fadd xor sahf mov in das test pop xor mov loope mov nop jmp lret sub push pop int3 or notl dec loopne (bad) in or push dec fwait mov test jnp test popa imul cmp cmp pop push cmp xchg gs jmp inc cli insb pop push and push in push push dec cmpsl imul jp mov mov lods xchg mov repz cmc xchg notb add push iret sub add loopne arpl insb cmp mov cmp dec out dec aaa into je push dec sbb push popf adcl mov xor mov xchg cs stc fs jp push mov push xchg xor iret inc jne (bad) icebp push in pop lods inc add dec cmp add jp xor xchg mov aaa sbb (bad) data16 jnp loop pop adc adc sbb and mov pop lcall sub test daa scas mov xchg jecxz popf es mov xchg push lahf mov mov fisubl inc js test icebp mov pop pusha sti sbb inc xchg mov test hlt push leave out dec sahf jecxz test cmp inc jb cmpsl dec xchg xor pop mov out lahf dec daa in add xchg push stc add pop mov jecxz imul cmp gs dec es jl pop cs (bad) loop inc mov mov add and mov mov mov inc mov cli cmp push adc je sbb (bad) mov stos ficom pop scas sti adc cli aam pop mov and insl jbe inc insb sub xchg add jb mov inc jne inc pop sbb inc aas (bad) sti add cltd sbb cmp cld enter xor lods stos and dec fs push pop push pop pop mov jnp dec inc pop xchg push and xchg xchg mov enter mov outsb pop idivb mov ret jo js xchg xorl adc sub dec nop push jle push into loopne xor sbb and (bad) xor xchg xor fwait addl pop stc and int3 jo (bad) mov xchg subl mov sbb (bad) and (bad) xor mov test add adc in je js imulb insb inc inc dec addr16 paddw fnstenv xor inc pop ja push das test jecxz dec mov loop (bad) in fdivl mov sti mov jo orb cwtl xor lahf int pop and mov je add cmpsl rdpmc cmc mov sti mov adc add cmp xchg add mov jnp inc in mov dec repz cwtl and dec inc andb aas inc add int jg xchg push add inc out dec sub aad sbb inc das ljmp in mov sbb inc jge and pop xor jae (bad) mov pop cmp add mov insb jecxz push mov mov shlb sbb push mov int loope,pt add iret ror push adc dec out fdivs and in das (bad) into mov (bad) xchg jp out cmp push dec push jne into xor les or (bad) rcll imul adc jne push in fsubs ljmp xor mov sbb adc fs jns dec dec sti cmp push mov xor pop xchg inc jp mov int3 dec push addr16 mov xor and jl inc gs or mov in bound jl push (bad) jp in push stos jbe pushf xchg fwait add xlat mov sti lcall enter in into icebp sub xor bound push or loopne out mov aad ja pop and cmp fdivl jns stc cwtl cmp adc out xor jl mov jno or lahf ja add sbb cmp mov stos ror ja lret nop call (bad) jbe and dec and (bad) aam push jb fs xchg cmp sub popf mov push fcmovne (bad) pop adc imul xor fstps sub pop popl mov xchg jbe imulb and in add xchg (bad) inc repz lea adc aaa push sbb jge,pn or lods sub daa mov xchg test (bad) stc jp push xor cmp repnz cmp xchg jg dec sbb or dec inc xchg test add cmp test lods ss push mov pop test add aam fstpl sbb cmpsl sbb test loope je xchg mov pop lahf outsl mov cs adc jae push imul dec sub lock inc int movsb xchg sahf mov es lret sti xchg jge push (bad) divl cltd sbb pop fs add push cmpsb adc pushf int3 xor out into push arpl add sbb add test iret push pushl insb loop lret or into mov or movsb mov adc icebp sbb fildl aas pop pop jp jo mov cs adc outsb mov lahf xchg cmp int rorl xchg (bad) dec mov loope mov scas scas mov mov out pop arpl mov xchg adc imul mov mov mov rcl aad sbb jae sub jne clc in das jb (bad) ljmp or push rclb fimull ret js mov hlt test xor aad sti jg,pt bound das xchg stos fist leave pop jno or mov repnz stos mov nop push into adc out pop ljmp out pop push xor jae stc movb fnstcw roll or sbb insb pop push xor ror jmp insb jl add dec xor jmp (bad) mov add mov aam mov push icebp cmp jae mov ss aam dec mov push ljmp outsb aaa fwait pop cli out icebp std jle mov mov xchg mov adc je mov jns mov aaa hlt movsb cmp das mov mov xor pop in lds lret sub pop pop adc sar vorps jmp out popf jmp rorl (bad) mov outsb daa imul mov ret or add inc test sti rclb inc mov test frstor push sbb int sbb inc stos lcall dec int3 outsl inc pusha icebp adc lea cwtl test mov mov cmpsl mov pusha cmp xchg sbb sub cmp or ja or mov (bad) and outsb rcrl adc (bad) aaa pop dec mov inc sti cld scas icebp xor in out stc subb sbb mov inc popf jnp lahf inc popf cmp push ja icebp mov mov xchg cmp fcoms sbb jae sub sbb stc (bad) mov xor inc loopne fistpll test aaa mov pusha dec jp outsl daa lea std scas xor stc xor imul xchg scas jb mov bnd or cli es jmp cs sub xchg js ss mov jmp cmp or test xlat mov mov and pushf mov arpl dec sub and fstpl lret dec push sbbb xchg arpl jmp fnsave mov mov add pop mov mov dec ficompl jg rcl sar cltd sbb cmc stc xchg mov cwtl adc out push scas cmpsb clc xor fist fist bnd lret xorl (bad) lret push (bad) mov mov jl pop cld scas push sbb test mov lds inc adc loop lret sarl inc inc push ficomp test mov insb sub and inc cmp sarb insb fdivl pop imul jge loopne das aad das les call and push addl xchg adc pop pop inc adc (bad) int sub dec xchg sbb (bad) out mov add mov mov pop xchg push adc inc cmpsb pop sahf or add and mov jge sti or mov ss jl stc scas pushf in test jmp scas addl sbb addr16 jl mov loop fs ret pop imul adc fld jb xor adc push fucom lea fwait call xor push xchg jg roll jbe jae jns cmpsb pusha jmp pop loop cmp mov and jbe mov daa push mov subb sahf jge pop and mov sbb mov jl dec jp fldcw (bad) push mov lock stc xor sbbl push pop mov sbb pusha cmp push mulb dec or cmpsb xor loopne shrb add mov test push dec xor xorl sbb xchg cs lret xchg jo stos and shr lds test push pop mov out iret push inc xchg mov sbb push in mov out mov add and jmp dec xchg sahf mov cmpb pop rcrl pop lea mov cltd call je xor cli pusha push jae imul out mov dec gs mov loope xchg repz push into sub out in outsl fmuls and insl and push hlt cli xchg imul or xor jg pop add lock dec (bad) fadds gs cmp or dec repz mov mov iret test fcomps stc jecxz fs sbb jns lahf test sbb push jns jmp call jno iret fs cmpsb push push dec roll push add cmp repnz clc lahf jns xor lret mov loope adc popf (bad) xor pusha sub gs and scas sbb mov int3 sbb dec loopne jb xchg push (bad) mov pop imul dec mov (bad) inc inc ret int3 into pop push mov pushf cmpsl and xchg and std ja scas call lea adc jecxz pusha dec cmp fnop pushf xorb stos leave int lahf or xchg mov hlt ja mov jno sbb lea ret cmp shll inc pop mov push mov int inc (bad) lcall or dec leave add add adc fwait (bad) sbb jge dec jp gs cmp push mov dec push rorb cmpsl fstpl call adcb lahf pop jmp and icebp int (bad) pop outsl popf jo pop inc mov into in and pop subb push xor imul fistpl popf mov or in and adc mov xchg xor push stos inc fimul sbb push mov inc repz test add cld rorl fcmovb outsl push ret test mov pop xchg arpl mov aad popf push jne or out add repnz insb xchg test in xchg dec mov jbe lcall fstps mov cmp and in sarl xchg sbb fpatan mov push inc fiaddl or adcl jns ja and pop xchg pushf fistl inc pop flds push mov stos cmpsb fstps push cmp or fidivr lcall sbb sahf repnz add nop test cmp sti ljmp mov sub lock int3 (bad) fwait and add xor lock xchg fcoms adc into cmp jmp or lea ret adc add add dec inc out fisttp shrl add adc into fildll aad dec xor loopne sbb mov test adc fcompl (bad) les mov push push push adc mov in xlat jmp mov pop daa sbbb dec cmp push sbb stos iret adc add pop sub in sbb mov or shr jle sub (bad) out adc fsubs das inc push jp inc (bad) (bad) and cmpsb mov lea dec jno pop lcall push je fiaddl fisubrl xlat lods sbb out pop in movsl int3 faddl jns and lret and mov repnz xor or mov sub xor push add std cmpl lock mov adc jle or xchg mov movsb lahf fs mov ss mov in jg rolb cltd push in sbb push das mov fsubs pushf dec xor or xchg (bad) push movsl loop pop out imul leave es jnp adc mov scas lahf ret or bound subl sub insb cltd in ret insl sbb and hlt pop mov jmp cltd mov stos or (bad) js jo dec loope movsl jb ds (bad) ljmp xchg insb push xor mov mov adc into or bound sub lods sahf jp jg loop enter rolb mov jo add lock hlt sbb ja or lret jg cmpsl mov pop dec in mov pop (bad) and pushf or pop addl orl pop mov fwait movsb adc imul jle jle test xchg js mov cld push pop dec xchg dec mov jmp mov cmp xchg in dec cmp add and in adc jle lods stos pop or rorl dec jno mov out or adc mov cmp xchg sbb mov test fisubl push jecxz (bad) je jmp mov dec adc dec invd mov outsb out popa add dec stos (bad) iret fldcw ljmp cmp mov and movsb subl sbb stos and sub push push sbb or sub push out (bad) sti push or cmp mov (bad) or mov mov ss cmpsl sar int fcoml mov and sbb ljmp cld mov push das mov jo add loop cmc rorb jl adc imul arpl add pop inc in pop xlat xor cwtl jno pusha mov mov outsl jbe xor xchg repnz and jb cmp fstpt rcrl sub sbb lea mov fimull mov (bad) pop mov sbb dec sbb or adc pop cmp and push imul pop mov inc mov dec mov jp jle movsb mov hlt mov stc loope adc fimul insl and clc mov js jns xchg popf jo jmp rol (bad) in adc adc fld sbb in mov movsl push jmp mov scas xor insl pushf aad ds jns shrl outsl adc in pop sahf inc addr16 inc sbb lds and push jmp or sbb mov or sarl jg ret pusha outsl inc mov jb or add push mov xchg cmpsl aad loop sbb jp ja jno push or pop stos mov in pop arpl adc pop rcrb ljmp cmc enter fisubr cld jge dec lret fidivr pop lret shlb jbe out push (bad) xor leave psrad in add stos inc inc and pop jl ds ljmp inc jp in (bad) ret out pop dec int mov (bad) mov js jns in push sub test shl push arpl int3 inc and sub les sahf out jae loopne movsb stos sub dec or mov lea inc insl out insb fs adc mov xchg pop inc aam imulb (bad) es jl outsb pop inc mov jg jmp mov sub pop outsl rcrl add test das or push icebp and dec rorl or out sub js adc lahf test outsl add out inc jg push adc invd fsubrl dec cmp push dec xchg inc es bound inc std fstl pushf mov xchg insl mov (bad) sarb cltd xchg je (bad) stc sub mov lret xor mov lock in in mov dec outsb inc test dec dec xlat sbb and popa in ss int3 fnsave lret push lods mov xchg popa xchg inc xchg mov sahf cld insl out into sahf ficom xor (bad) dec movsl sub popa roll pop cwtl lahf push int3 stos mov icebp pop xlat aam lret cmp dec in xor push cmp add sub or mov cld scas xor push lcall mov or hlt add mov fisub xchg and outsl pusha rcl or push ss mov loop loopne ret mov push or int inc cmp mov sbb push jg cmc lds push addr16 out xchg ds stc ljmp cltd mulb and int daa mov cmp das iret mov mov pop push repz out jge push dec mov imul mov adc pusha xor mov mov std push lret add mov inc js push out (bad) inc push adc push ss push enter int3 xchg jmp sub pop xchg cmp pop loope mov daa xchg mov loope xchg movsb and into add movsb push adc rcl xor dec ja aas iret jp push adc out sbb in jbe jecxz ljmp cmp push scas iret jno lret inc xchg mov xchg and cmc imul mov xor arpl ja jns dec mov lds je shl sahf arpl and mov xchg sar jmp (bad) cmp lret shrl dec jle fnsave adc or push push fnop lods clc (bad) enter lea in out int mov in jecxz push stos aas mov pusha ja cmp add jecxz add pop hlt mov call dec and xchg mov dec imul daa mov rcrb pop xor dec inc mov fwait pop lods stos adc std (bad) icebp inc xchg inc rclb sub pushf aas or pop test ret fild mov outsb lret jnp sub ret aad insb daa fstsw xchg in leave movsb int3 repnz (bad) push cld stos push (bad) lret pusha inc cmp fcompl sbb or mov pop insl bound int sti leave std mov or mov or aaa xor in nop popa or icebp cmpsl int3 nop adc (bad) aas push testb cmp rorb pusha scas or xchg or inc pop push mov pop test mov ss (bad) xchg sbb loope lret test push ljmp sbb lds inc xor xchg (bad) ja pop roll cmp mov xchg fnsetpm(287 orl or sub mov pop enter sub cltd stos push stos inc scas or pop aas ljmp aaa fimull and sub add icebp dec jl js test scas aam add data16 jnp cmp mov mov xor sbb mov imul outsl enter add iret mov xchg loopne out jo mov cmp sub jnp (bad) sbb das (bad) fwait push insl jl inc outsb cmp xchg test xor dec (bad) pop mov cs (bad) insl xchg pop cmp cmp xchg pop in aaa adc iret mov mov adc xlat icebp incl and stc repnz dec and push fucomi test sti loopne xchg inc outsl sbb adc jno cmp in jo jbe or (bad) cltd daa pop jns mov shrb ljmp mov jmp pop (bad) fwait (bad) jno fcoml sbb cld xchg inc fstl xchg jae pop cmp faddl inc push test xchg dec ja loope fisttpll or push sbb (bad) aas xabort xchg mov jmp xchg sub adc inc lcall or test js xlat pop xchg or (bad) xchg popf sub jno lret inc cwtl addl cmp loope lock mov (bad) mov xchg ljmp push mov push add aas ljmp inc or test std sub stos mov (bad) cmp test scas inc mov ds fdivl jl xchg hlt mov pop mov shlb cltd push out int push shrb nop sahf dec punpcklbw sub jns mov leave jge (bad) jo into daa mov or aaa out testb or cwtl je into jbe ret test lods cmp fnsave sbb add insl addr16 inc add aas xchg (bad) in fisttp lcall inc scas int3 repnz outsl lods mov bound adc movsl jp into enter inc fmulp (bad) ljmp adc movsl repnz jg push test mov fadds pusha pop add mov std movsl add or rorl jbe in mov stc cmpb negl jmp jo lret xchg add xchg xchg sbb test sub cmpsl or in sbbb xor cmpsl or loope add cmpsl sub cmp cmp inc nop xchg ljmp out out flds pop int3 mov daa leave xchg int3 cwtl shrl pop movsb fisubrl aaa ljmp pop (bad) (bad) jl stc enter and mov jmp mov pop mov mov aad mov stc dec mov xchg push push call aaa sbb xorl in mov jae mov aaa pop push dec xor enter pop mov fwait mov add sub nop pushf inc aaa test aam pop pop int adc data16 fisub lds rcrl push mov mov ror inc out inc stc pop divl lcall jg inc xchg out insb (bad) adc icebp shlb jo push mulb pop xchg dec lods movsl pop ret test sbbb fcompl movsl pusha ds dec xor sar testl xlat mov lret fadds mov inc rcrb hlt mov inc (bad) fsubrs add push rcrl mov xchg jo and je out lods and imul or and xor test mov xlat mov mov addr16 mov rcr push adc lds pop shrl fcompl (bad) je sbb mov out cmp fistpll das ss in sahf or xchg repnz mov inc imul sub cld mov (bad) int3 sarb cmc jo lea movsb inc push js cmp loopne fildl jbe pop jbe push xchg popa fldt sti adc hlt mov push mov push mov adc (bad) jno sarb ret aas push pop jo (bad) mov js fs jo mov or mov scas test xor jle cld dec add fisttpl in je popf fidivl adc test xor loopne pushf in add movsb (bad) sub je (bad) out in repnz adcb mov mov pop jbe pop data16 out dec mov cmp add js mov pop das jp mov add mov mov mov push and (bad) in cmp jge jnp jnp adc sbb mov std mov in xor rsqrtps push aam push (bad) (bad) mov (bad) mov adc je test add mov aas xchg pop cmpsl je xchg fcompp sahf out pop cltd jp xor bound add orl into pop mov pusha js mov and pop outsl add enter jmp les in push mov adc ds stos and push std rcll outsl andl imull std mov ret int3 push or sbb or sub (bad) in sub test inc adc out and push repnz movsl fstpl in call push cmc out mov or inc (bad) mov xchg das mov adc fwait pop mov adc idivl mov pop mov mov ljmp ds popf cmp adc cmp fcmovnbe (bad) repz aad dec mov mov xor or das cmp jle out pop (bad) stc lods mov xorl and adc not dec mov xchg sub (bad) mov call pop stc lods ss jnp jb or mov mov and lret in fwait or adc sbb aad test or and or adc mov (bad) mov cmc leave (bad) push aas dec or cmp mov (bad) repz push loopne shr test aas int3 sub dec out lock pop push or and mov pop icebp add sbb enter leave ljmp xchg sub and or xchg xor inc lcall (bad) xor pop rol push push sub or mov scas or mov sub or inc and mov adc aam push cmc mov mov cmp pop push aam movsb jp clc mov xor dec out xchg mov cmpsl add xchg arpl out or std jae popa fcomp sbb lret mov or ret mov and adc daa lret mov mov iret xchg push lock sub (bad) jmp and push in js dec cld mov iret or lret xchg pop mov scas cmp outsb adc ja outsl add xor lods fnop es xchg push mov aaa jle repnz pop sarl push mov mov xor mov scas arpl pusha shrl inc loop and or lea mov pop mov push loopne cmp dec jg popf pop leave push xor cmp outsb xchg xchg sbb sbb inc cld enter mov hlt fmuls xor cmp pop adc pop pushf neg xor sub lea negl jle imulb xchg (bad) cwtl dec push mov sub out scas fiaddl xchg adc (bad) add xchg sbb push bound into dec jle mov lds aad cmp loopne in mov jne (bad) mull nop addl ja adc push cmp mov adc test (bad) mov bound inc cmp aam mov ret sub ss ljmp sbb ljmp ss in add ret pop lret test cmpsb sti (bad) xchg dec xchg icebp hlt jb sub (bad) (bad) or mov and push push out or add jnp and fwait call jg cmc jge jl and sar scas scas inc fdivr mov sub adc stos xlat add nop mov mov cmpsl add inc jo rcrl test ret mov cmp repnz in mov cmc inc fimull sbb or lods aas xchg push hlt ret ss pop xor and (bad) push enter jns sub (bad) mov lock mov lods xchg cs pop daa jecxz clc cwtl sub cwtl jecxz (bad) xor inc fsts xchg movsl adc (bad) cli jle dec in inc dec (bad) push test push (bad) pop push call inc pop mov fstps sbb and scas cwtl pusha addr16 aad or (bad) sahf leave dec mov xchg pop (bad) xlat sbb stc fsts adc mov mov jl or or pavgb pop dec mov int3 push (bad) xor (bad) push sbb dec adc lahf adc jo lods loop insl (bad) xor imul and push sbb imul in fnstsw iret pop mov and (bad) lods in in mov adc (bad) xor and je sub les (bad) xor std pop cs lret jle inc xchg aad mov sarb mov add xor ficomp xor mov or ja mov ret int3 xorl addr16 std enter stos ffreep jo stos (bad) jo jl int or and jecxz int stc push cmc cltd sub ljmp add mov xor add lock pop inc xchg jge push andl xchg add sub or mull mov xchg into push cltd (bad) in dec lods pop rclb nop dec adc in sub ret sub inc cmp ds push xchg inc lahf int dec pop encls cmp xchg or popa fsubrl repnz leave das sbb xchg xchg call xlat lret mov stc add and add pusha imul sar sub subb inc add pop add stos test jg pop loope out (bad) movl popf insb lock adc out test divb std clc cmpl dec popf loope (bad) outsb lods inc stc aaa sub pop xchg mov inc cmp mov in xor aam or adc (bad) xchg add jne jne or jg add ds push add scas mov push test je dec sbb dec mov in jecxz addl push pop jge outsl xchg or fsubrl aas push push lret add xorb mov scas mov fstl popf shl pop sub or lret lcall idivl mov orb (bad) (bad) fimull mov adcl jne pop jmp movsl in lock leave dec jg push mov mov (bad) call add xchg and cmp jecxz outsl jne jg push xor dec sarb mul mov in mov in sub mov jo or dec pop mov adc dec inc sbb sub inc arpl cmp mov add lcall xor sub xchg imul lods dec fs movl test add mov add (bad) incb imul xor sbb sub lahf pusha in pop dec dec mov (bad) lock cmc cmp jecxz add jmp das push fisttpll xchg pushf push arpl mov xchg push adc nop mov into into cwtl aad fdivs sbb mov sbb addr16 pushaw mov test scas xor mov cmp xor xchg mov loope (bad) xor loopne jge and inc mov (bad) lock and stc mov ret mov dec (bad) cs xchg add mov sahf and cmp frstor repnz call mov mov lods cmp or jae jnp or jecxz add xchg fsubrs cmp outsb hlt fstpt push sahf pop xorps mov mov jb fxtract push mov pop aam out std pop cmpsb push cmpsl outsb and jp xchg (bad) das repz push insl mov std fstpl das cmp clc and pop enter adc sbb pop lahf push andl mov cwtl adc push enter mov inc loopne out or (bad) or cvttps2pi sbb pop jmp gs and inc adcl (bad) hlt lcall out jge cmp mov add leave cmp xchg or and sub call xchg je int3 fbstp inc les dec lods sbb sbb xor xor sarl loopne mov inc jp int sub fisubr stos mov jnp ret les jmp (bad) mov jne jp push popf aad adc (bad) dec inc xchg pop xchg pop push push push inc fdivrs mov cmp jle fnstsw mov mov adc je iret imul sub insb imul and cwtl jne lcall push push imul bound pushf scas daa and jecxz js icebp aaa leave jno xor orb or into pop dec push popf and lods lock hlt add inc outsb push movsl inc ror (bad) jbe insb push pop jno add xchg sbb sub pop test je rol aad mov sbb in call mov (bad) (bad) cltd and cmc add add ror ja xlat por orb jmp and pop andl dec fldcw mov jl push repz xor adc pop test ds in sarl jb mov clc ljmp ljmp imul rorl fmuls bound out or ja sti inc je repnz rolb adc mov in sbb jbe jnp pop scas and cmp cmp push or mov (bad) push jp fisub add pop ror pop dec cmp fdivr adc xor repnz jecxz pop adc ret push dec (bad) test loopne into pop movsl jae xchg xchg nop mov sub mov sbb cmp or jno cmc adc mov xchg repnz pop mov andl inc jp jmp shrl cmpsl lcall stos cmc test jl push cmp mov xor pop mov enter out pusha or mov fimull test sar push fnsave js xor sbb cmpsb sbb roll push cmpsl mov dec jb mov fwait inc leave pusha ja inc jle scas scas mov mov rorb out loope cmp lea setl push mov jmp push sti cmpsl hlt imul mov (bad) mov and ret push dec and dec lret pop adc lods andb jbe adc mov and inc flds push repz mov shrb mov aad cmc popa andb cmovs addl repnz add scas arpl jecxz cli push imulb jbe xchg xorb jecxz and jp cmpsl stos repnz jp xor jmp push test mov les and in lds rcrl jnp jecxz inc mov cmpsl inc push mov stos sbb test out jne sbb das (bad) sub mov or push negb pop in adc decl test mov xchg lods jmp in aam xchg fs imul insl pop pop mov js xchg repnz push push neg xor (bad) pusha pop and mov mov ret jl xor adc lds adc or fistpl nop lods dec sahf xor pop or (bad) rolb stos lcall push xchg jbe out push mov scas mov add jge mov cli (bad) (bad) jbe pop xchg repz mov (bad) loope xchg add lods add adc pop fnstcw cmp mov in inc push xchg stos int3 xor gs jle in push (bad) jns dec std dec pop and jne imul out add mov je pop in shrl addl fstpl fwait cmpsb rorl sub xchg in jae inc decl mov sarl out inc pop mov push repnz adc cwtl cmpsl adc popf ss out imul and push or pop pop add adc dec push lahf ficomp push xchg mov sub dec add iret xchg jmp mov pop mov (bad) xchg fwait push mov shrb imul sbb fcoml jns sarl or dec inc out nop (bad) sbb (bad) cmp (bad) inc out stos ds cmc mov mov push xchg repnz insl add outsb addr16 lahf rep add inc es and movsl inc scas pop jge mov push push ror ret pop and dec cmpsb out lods (bad) push negb sahf adc xlat xchg pop mov fcoms das adc arpl xor fcmovbe dec inc pop jno,pn jmp fstpt pop ret inc popf icebp xchg ret or test (bad) mov add pop xorl dec push or sbb dec cld sub (bad) pop add gs mov subb xor lds inc ficomp sbb in mov adcl test int3 cs fisttp jb pop jnp and or cmp jb gs mov inc mov pop (bad) dec xlat mov push lods in and decb leave and aad div sub fdivl xchg pushf xor mov fcoml (bad) (bad) lret rorl stos and lods fildl push nop lcall push inc and leave xchg rcrl mov idivl inc push jbe push jne pushf ss add add sub cmpsl popf lods in mov repnz sub mov xor xor pop xchg in push fsubl xor xchg inc add lret inc push adc loop mul inc inc imul (bad) jmp or scas das dec cltd adc (bad) fistpll nop push sbb fcompl mov jae gs pop push fiaddl jae sub and sub add jae mov imul pop xor dec mov pop pop mov xor inc aas arpl mov in repz adc push enter and jmp add jbe scas xchg clc and and add pusha mov xor daa xor fnstenv fdiv insb (bad) pop es push xor fwait or and out les push add jnp add mov cmpsl into mov push dec cmpsb adc mov cmp fstps add rclb loop test mov lret and (bad) into cmp daa lods pop lock cmpsl (bad) enter xchg push test mov sub jecxz jb jmp lds push lock test or cs ja adc dec movsb mov jns jno call movsb loop xlat mov (bad) jae mov jmp ret roll and das roll xchg movsl dec jo dec xor and fs rol mov cmp in and aad popf pop sbb call pop push test ds dec dec and jno xor movsl les movsb mov pop jl stc or xor outsl cmpb pop ret jecxz leave outsb mov jg dec cmp imul xor and sbb out xor cld push push movsb mov add sti cmc bound inc jo enter iret xchg std test in jae icebp push cwtl cmp mov loop (bad) adc mov loope arpl (bad) andb imul pop leave in mov sahf cs js mov or or xor pop mov and fstps xchg mov subl mov mov js sbb mov rclb fdivrl jmp xor test popa xchg fs or stc jmp add lock jl lcall xchg addr16 pop mov xor cli sbb cmp adc jle sub dec or popa popl mov sub cmp scas dec mov inc es and int3 pushl xchg sbb fdivl xor push mov stc hlt hlt shrb cmp mov shlb aad stos cmp shrb ficompl adc or movlps jns int or push mov jo push adc jbe jae xor cmp js cmp or push into mov push inc pop push inc dec in adc add xor pop loop inc loopne xchg out inc scas idivl cmp xor xor daa fwait loope mov jle mov cld pop xor cmpsb cmp jl jp (bad) outsb jae sahf jp jno enter loop xor shrl cmpsl adcl cmp mov int imul xchg push (bad) ss sbb lods push data16 rol (bad) leave fisubrl loop dec mov push es stc xchg in js (bad) out test sub mov or fwait scas xchg outsb push inc add inc aad inc loope or (bad) jp inc sub dec and mov mov sarb dec sti mov (bad) adc inc jecxz out mov pop (bad) fcomi and inc pop mov jo push dec sbb inc push or mov sbb jae lock rorb popa hlt jnp movsb test cmp cltd or addl inc lods xchg inc adc pop scas dec jne outsl lods imul push int3 pop pop out repz mov push jle sub xchg lret xor push xchg scas (bad) out stos (bad) pop addr16 or sub mov shrl es xor fs scas aas pop adc mov sbb sbb mov dec (bad) fisubrl sahf push mov loopne jno xchg push mov and (bad) sub mov bound ror and ja and outsb mov jp mov xlat movsl scas cmpsb fdivl pop hlt and in out jmp std gs lahf push mov lock fldenv pop cmc cwtl inc lock cmp xchg fwait lock mov inc and or iret mov addb leave cmp mov test jecxz orl jb clc cs stos (bad) rorb push xchg and cwtl jmp xor lahf dec shrb push dec xchg call push xchg add in jae enter orl xor xchg addr16 ror sbb lret push xor add sbb sub dec and mov dec sbb lahf or js dec fidivrl add mov hlt jo gs fisubrl mov jmp ljmp repnz into cmc rcrb mov lods pop mov mov fs jle push cwtl pop jp mov lods fcoml and xchg das int3 insl adc jle and insl popl lea orb lret or int jle mov or pop test ror jne cltd push mov ficom sti mov je ds push cwtl fmuls sahf insl insb insl xchg sbb adc inc scas mov mov cmp cmpsl fist mov sub (bad) mov std hlt mov jb jno mov in das jp enter cmp cwtl add push cltd addr16 fwait or mov cltd mov fisttp decb mov lods ss outsl clc out or mov xchg and (bad) pop xchg dec aaa jae mov cmp jno pusha inc lret insl loopne lds add cld xlat insb stos stos fdivl xchg adc repz jg jno,pn xor movb bound inc dec out sub pop push sbb and mov push xor icebp push jecxz aas fistp mov mov xor mov mov in in insl mov mov rorb aas pop fwait ja leave lret ffree lcall or mov mov dec fstl sub dec inc inc cld push jns in insb cltd std stos call decl repz xchg popa out inc mov jb movsl cltd fwait mov add adc inc or cmp xor dec je pop mov or clc sbb scas pop stos test cmp std imull daa shl mov repnz or push outsb mov aad stc int adc cmp and jmp jo shrl xchg into (bad) orl fsubs jg gs dec test pusha push js imul fnstcw or (bad) inc rorb pop or mov into rorl (bad) sub daa xor je fcmovnu std aas daa mov les cs lds inc adc int jnp scas sbb (bad) push jle jns jo pop cltd popf fiaddl stc xchg dec int es jno add jns cwtl loop vaddss stos dec js sub jg pusha cld sbb add mov adc cmp fild movsl scas shlb cmp jle or dec in shrl data16 int3 sub movsl lret xchg es repz cs inc scas and sub mov sbb xor dec mov cmp mov mov scas into in xchg cs push call jb out (bad) or iret lods add loopne lds mov jb popa add adcl imul stos cmpsb (bad) mov jp imul test inc sub test add mov (bad) xorb call and and mov add imul push sarb fidivrl das and xchg hlt xor neg jnp lahf add (bad) (bad) mov mov jb or and pop sub mov int lods ret push jecxz je jnp dec mov inc xchg pop fbld call inc push push push test push cmpsb enter and add leave (bad) clc cmp packuswb inc add jmp jae jns fisub push xchg aaa ja movsl jb imul jbe push aas aam out pop push sub pushf nop adc cmp data16 roll (bad) xchg add cmp xor shrl cmp dec out fldpi mov popa mov jle gs sub mov ret or mov pop and inc sbb ret ficompl or cmc mov jnp sarl or pop (bad) jp cmpsl and ficoml lea sbb sub push jnp std adc sbb sbb aam int add sbb dec adc push pop mov lods ja lea add jle lock mov and dec fistl in add cmpsb and xlat mov mov lahf shl xor fcmove cmp stos jns pop mov pop inc iret sub leave mov dec push add (bad) sti mov jp pop xchg adc out mov adc push enter push and xor push stos sahf mov sub test test sbb mov add sbb leave es leave clc pop mov cmpsl movsl dec arpl mov push xchg mov fidivl fdiv sub enter in cmp aas sbb adc (bad) leave lcall sbbl xchg pop xchg lods jb mov sub pop push mov loope je xchg (bad) ja scas lea jnp into mov and push pop bound (bad) je sub nop cmp cwtl frstor jnp xor or xchg push clc int3 icebp xchg sahf cmc push je aas icebp and repnz ror int3 mov adc dec out adc sub outsl dec sub push sbb js iret jmp aas enter loopne aad jle sti mov adc je dec (bad) mov pusha xor xor xchg mull scas mov mov mov sbb and int3 loopne insb roll loopne repnz cvtps2pi dec (bad) push add push (bad) std dec xor sahf loope sub fs mov dec mov inc test (bad) mov aad in repnz fidiv mov inc test cmc xchg xor dec push jmp jns outsb lods push xchg popfw cmp out add or cwtl out out xor (bad) in cli adc inc and sbb cmpsb inc es mov sub sbb call adc sarb fwait push out sbb out fstps sbb push mov mov or jae mov add xchg orl stos dec jno ljmp or lds mov mov out mov in cmp pop pop xor sbb cs das push and sti in pop sbb stc add jnp jnp sub xchg inc rclb mov jae xchg xchg aaa aas jl je xchg scas hlt (bad) rcll enter es mov test imul mov jecxz imull mov (bad) aam mov popa jle adc jns push mov stos mov lods mov (bad) fidiv ljmp mov out pop icebp insl enter jbe pop jle lock cmp sbb int3 xchg xor sbb aas out roll mov or xor cltd cmpsl aam cmp cmp iret call dec xchg (bad) dec leave mov jne loopne xor test xchg aam push orl mov loopne mov mov inc push mov inc sub lds cmp sbb jmp dec in lcall das ret insb outsb les (bad) lea shrl stos into stc sub aam xchg fwait push lcall ss lods lods jmp fwait jle in mov push dec xor mov scas add jns or incl lods fbld jg pslld insb rcrl call mov cld arpl xchg jl mov xor and sbbb aad lock mov or call ret frstor mov lds mov xor out (bad) xor (bad) outsb mov mov pop outsb push inc dec xor add subl mov and jmp mov adc mov jbe dec (bad) add fstpt cmpsb idivb adc mov mov (bad) in ss mov fistl jb mov cmp mov in (bad) jge mov jecxz ud1 (bad) pop dec fidivrl pushf lcall pushf cmp sbb aas xchg and ja or andb fcomi imull cmc mov xor xlat out dec (bad) fwait push jb dec std cld sbb (bad) xor arpl popl adc sarb negb sbb sub mov pop pusha lcall pop sar (bad) insl popa pop push cmpsb outsl and and mov ja imul insb mov push fsts fsqrt into dec (bad) xchg lods sbb jg lcall lock fcmove aas rorl mov sbb jge dec in mov and stos push mov out pop pop adc in pop cld mov inc pop addb xchg hlt add xor sub js stos xor call sub dec addr16 dec pop andl hlt stc pushf rclb mov mov (bad) loope lcall cli je insb test test pop jge xchg js push fincstp sub or and xor cwtl push shrl loope int cltd ss mov ret mov mov dec cmp mov xchg pop xchg jbe cmp fwait pop xchg dec and sub adc jle iret add insb flds shr clc and (bad) jno aad arpl inc mov push push xor fwait add nop stos out add xor fdivr arpl jns sub inc cmp xlat push aas ss arpl das loopne out cld inc lds push test add and je popf fmull mov dec xor jnp paddusb dec (bad) aad xor sub jbe enter xor sar dec inc insl (bad) mov pushf and dec dec jge ja adc jae leave mov fdivs or call imulb fistp inc xchg aas jmp inc adc sarl mov xchg insb sbb pop loop js repz sub dec and sbb jecxz jmp outsb dec mov pop arpl xor adc inc add addr16 call ljmp imul dec cmp dec or popa pusha push imul hlt push add mov divl inc add leave movsb cmp std stos imul or add lods cmc mov xchg movsl nop loope ret addr16 inc mov int3 mov pusha out rolb jmp insb cmpsl ret jbe jmp mov add sub popf nop lret jb inc mov and cmp leave pop (bad) fs xor mov sahf ja pusha mov movsb stos mov push mov out cmp cmpsl movsb in movsb sub rorl imull push es pop sub mov int3 fs fsubs out inc cmc pushf sbb mov mov out ror xchg mov mov and rcl mov push adc push testl rcl decb das mov movsl mov add xchg jns and movsb in cli cmpsb cmp test in movsl popf cmpsl mov mov test cli data16 push push ds rol std xchg sub xlat ljmp popf and call pop popf movsl push fcmovne jae mov lds pop cmp sbb lea cli jns jmp pop popf faddl push out fs push dec inc push xchg mov rclb mov fnstcw fnstenv xchg test (bad) mov insb movsb jl xlat mov jle or (bad) cmp inc jp mov sbb repz (bad) pop and sbb test xlat cmp in dec push mov rcll or jnp decl hlt (bad) jmp repz dec dec ret add and or outsl add loop movsl pop push lds add push cmc fstpt and mov xchg rcr and xor xor (bad) sarl loop push les sub imull frstor std jl mov dec mov push add push or lret or fistpll adcl flds or out (bad) scas jns sub ss ja inc rcr test add jle,pt in test pop xchg and xchg popa jae inc add or call cli scas add mov push jmp jns fcoms push out in sub xchg sub icebp xchg push push mov mov adc mov sub mov add rcr push pop jne aam repnz imul bound mov lds cmc xchg inc lods (bad) fsubrl inc fisubr jl and mov mov lcall mov sub es mov aad (bad) xor mov sub mov pop sbb cmp add loop dec es adc jle daa outsb nop pop pop sbb push fistpl repz add fcmovnbe dec mov ret lds push inc mov lods out mov jge test add xor push and movsl sub iret aaa in scas inc popf mov dec pop lods mov rcll mov jl gs xor pop mov cmp pop (bad) mov int3 xor push ffree jg inc dec imulb jae inc cltd mov jbe addr16 jns int jo adc pop cmp cmp cwtl mov mov arpl sub std xor in and dec dec (bad) repz je data16 mov jae mov pop push and (bad) mov daa dec icebp lahf cmc iret ds rcl test mov mov mov push jne mov (bad) push jbe or xor inc aam (bad) sbb hlt sbb lret pushf (bad) (bad) fucomi jmp sub sub pop mov mov xlat loope lahf xchg pushf (bad) stc sub andl loope or adc ret fdivrs pop mov test push std rorl into out sti lds stc imul dec mov xor leave lock jo add pop shrb rol xchg movsb out fsub mov rorb inc mov enter test das clc lahf pop sbb scas and jmp inc pushf mov pop test xchg jno jbe out dec mov rcrl inc cmp mov jo push pop pop sbb jnp push scas adc cli jo out jmp or not dec movsl fstpl rolb lds inc inc adc mov xor mov cmp cmp iret loopne or dec movl iret cmpb iret inc xor movaps cwtl insb roll adc (bad) bsr pop jmp fwait adc mov mov mov jae pop popf jae dec loop inc popa lods push rorb outsb mov lock aam jbe jge enter xor ret lahf sub xchg xchg jbe xor in mov test sti adc cmp or mov mov push test cmc xor jns ret add or rcll ret xchg lods mov popa sbb mov jmp cmp push add fstps lds addr16 leave je pop sahf pushf mov insb fildll cli or (bad) jns push es sbb inc es mov insl inc sub test mov push pop lds dec or aad in leave xlat push inc popa jp orl hlt sbb lds out mov inc imul mov mov sub cmc in cmp dec arpl and out popa pop or jmp loope mulb adc data16 gs adc adc xchg xchg hlt (bad) jnp fisub jbe push xchg mov pop push mov lahf shl xchg cli pop push (bad) sarl out cmpb mov fsubrp sbb outsb inc lods cltd sahf in mov je and lret xlat and lret (bad) pusha dec shlb and jb mov mov movsb and cli sub aad cs (bad) or imul orl iret adcl ja je add push xchg or sbb mov dec fisttp inc mov add repz mov movsl mov cmp (bad) pushw lds cmp or fcompl sub jnp pop sub cwtl dec imul arpl call outsl ficom mov scas sti jp icebp movsl rcrb sbb jo fs jl jmp test jns bound aas lcall jecxz popf add mov sbb sarb cmp xor cmp inc ds xchg pushf mov js out adc leave pop and xor btc rol add movsb fcoml dec mov jge popa xchg jb (bad) and add (bad) xor jne out ss jb and pop mov dec push inc sbb pop fdivs int3 mov in and cmp xchg mov pop mov lcall mull push sbb pop sub rolb rdmsr shll mov clc jae push jle lods xor adc xor maskmovq notl pop lahf adc cmp or xlat push jns or push xchg ss loope push aam mov jmp ret and lods sub in cmpsb jecxz push xchg sbb sbb mov popa mov (bad) ficompl push enter aad xchg loopne sbb (bad) inc or push (bad) aam mov test (bad) jecxz sub jmp (bad) dec test sbb (bad) dec jg push lods mov xchg and pop xchg dec mov scas mov test cmpsb out jl jecxz imul adc sbb daa sbb mov push sahf int3 and sahf or pusha je movsl jbe scas and jb pop pop add aaa mov test jmp mov jl inc push imul cmp push (bad) loope ret jbe xlat xor ret cmp cli call sbb enter inc nop into sub ljmp (bad) repnz aam fildl dec add inc push dec pushf cwtl push mov bnd imul dec outsb xor and pop pushf (bad) jmp fwait adc lret (bad) fbld aaa dec out roll loope dec push dec flds xor (bad) sahf and push lcall mov cmp rol test aam push imul (bad) divl sbb push leave mov xchg fsubl pop lahf in and mov inc jne mov lods ja fnstenv lods xor int3 mov pusha subb mov test mov (bad) jns out stc out mov adc cmp jae mov in push push fwait fs inc mov xor insb xchg jnp pop xlat mov in adc fbstp pushf inc aam movsl inc cli rclb inc in dec out outsb xor repz push mov mov (bad) jne aam testb mov dec in cli jecxz sahf sbb jle popf enter jecxz mov inc push xor mov rcr outsl mov push jecxz aaa mov or pop (bad) mov out add push mov inc xlat clc dec pop das ret testb sub inc mov loop test sbb mov jno flds mov in fdivrp jne or sbb int loope loope movsl fsubl lods stc scas lret mov shrb mov into pushf push jae jo testl shl push imul dec dec cmp add sbb rolb in sbb (bad) jge xor mov ss push outsl cmp ficomp mov orl pop ficom sbb xchg das push cmc std inc outsb test test cltd (bad) jmp xchg fsubs mov push pop or sar cwtl leave mov mov xor push cwtl dec lahf mov and xchg dec inc or push out adc mov jp sbb dec dec mov cmpl rcrb jo push pop cld lret jge xor jmp cmpsl sbb ret mov mov xchg mov outsl dec push loope repz aaa ljmp push hlt mov mov data16 dec adc mov adc push dec rorl and negl xlat cmp mov xchg bnd sahf xchg and repnz out ds dec cmp add xchg mov or or les out cli aam add lahf pop arpl xchg daa xchg inc imul icebp orl xor out fisttp xchg mov dec fcmovbe or cltd aaa ljmp fildll and inc inc mov mov xchg jno cs jbe push xor stos in mov jo lods loope mov xor inc lret sbb add stos addr16 and pop fwait test leave inc and fistpll xchg or aaa mov out pop xor mov aaa cmp fldenv mov cli xor cmp fxch stos pushf mov scas jmp jae das dec and enter dec pop insb subb clc pop ds push movsl push mov int3 subl bound jg pop scas jl jne ja pop inc push xchg mov fcmovnbe lods (bad) fstpl cmpsl inc mov sbb and cmc icebp xchg push push dec and je adc and cli es pop xor enter imul movsb pusha and jg pop sbb add cltd stos and and pop cld pop pushf adc and xchg ljmp (bad) outsb ds jl int push sub out xchg fwait lods ss xchg ljmp data16 push pop loope xchg adc mov (bad) inc ret (bad) (bad) iret mov jne pusha dec pushf jne (bad) outsb daa add dec (bad) lock fmull sahf movsb test adc push mov xchg daa sar cmp lret add mov ss adc inc sbb enter es xor stc out xlat jbe xchg jecxz mov or loope mov cmp dec jae lea ss dec imul (bad) or mov jns jle jne cld push fnsave push cmp ja int dec ja mov jl (bad) lret idivb jp adc mov pusha sub inc sbb leave enter dec ds adc push and mov dec push aad outsl int inc cltd xor inc fldenv dec push repnz popf pop mov femms cwtl lret mov int and sub addb inc dec jmp jecxz ja cmp cmovp stos repz adc cmp imul sbb fnstcw lods and jge cmp xor mov inc fiadd faddl arpl inc in xor jge cmpsb push inc fs cmpsb xor or push or xor clc cwtl mov ds in inc icebp lret adcb push rcll mov sbb dec arpl js adcl dec (bad) testl test push mov jcxz movsb dec cmc xor lods xor add popa push pop cmpsl cmpsb rcrb or mov and mov test dec pop sub in inc push (bad) hlt cmp sti in sub mov loopne xor or pop lcall (bad) stos (bad) xor dec xchg test pop sbb ret aaa js jno xchg outsb cld fs mov loopne je (bad) push iret fbstp jno js ss fsubl es scas and (bad) pop lods aaa movsb sub adcb jg sti sub sub repz jae push pop push inc fstpl cmp fldcw add xchg rorb int fist (bad) mov out xchg (bad) sarl addr16 iret mov dec pop jnp push and cmpsb fcomps repz sbbl test in jnp jns mov iret lret add imul sub mov mov aad andb inc out aad mov or dec mov sarl aam jmp inc iret ljmp sub xor lods rep mov ss pop or push dec arpl es ja leave add jle cmpsb scas mov jnp cmp or and sbb test jbe test (bad) cmp push mov mov push ret js loope repz shrl pop stos movsb pusha pop pop xor add cmpsl dec and pusha pop or subb stos in pop xchg sbb push je arpl dec dec jb sarb push out retw push pop out (bad) int add xor out add or cmp mov xchg in int3 cmp lea pop adc mov icebp inc cwtl inc adc outsb into mov out popf cmp mov (bad) jle lods push push cmp and (bad) and test pop jle and stc or (bad) mov sub js pop dec mov ret sub sub mov insb mov imul mov dec add jmp outsb aas je and push xchg sti sbb xchg pop bound jo aaa mov mov sbb push (bad) push fcomi sub fcmovb mov jmp xchg movsl repnz test push insl out insl add in jge pusha mov cwtl pop jns push jbe pushf out outsb inc jecxz xchg mov repnz pop into je cmpsb mov insb dec sbb sbb add pop popa std and (bad) je fisub setp aaa mov or (bad) pop (bad) mov mov stos jne xor je sub pop or add arpl pop adc cmp mov jecxz test movl dec add hlt mov sub pusha aam mov into inc lea rcr cltd test fcmovne mov das jb dec frstor jo sub push addr16 lods movsb inc shlb test jmp push fidiv (bad) out jmp or dec jno into push jecxz ret pushf push jge in cmpsl stc fbld je add test mov xchg std scas stc inc imul dec loopne cs and and sub std adc xor cmc push js adc mov or test jo push ss fist inc divl data16 popa dec fildl push fcompl mov ljmp sbb (bad) sbb in xchg (bad) jae and add cwtl pop js into pop pop inc cmc int3 shr int3 mov and sbb fcmovnb loopne testb outsl pop sti (bad) cltd ss rcrb adc aas es test and sbb xchg int3 push xchg insb popf push xor das jnp mov jmp xor inc mov cli xchg addl push mov fldcw cmp jecxz cwtl int3 in rcrl mov mov adc dec xor push imul jl add int pop push pop mov test and dec pop cmpsl cwtl cld pop out jb out leave mov pop movsl ret jo in jl fnstcw mov cs in mov and hlt out sub cmp ja or add daa mov imul push lret cld mov sarl call in repz xchg mov data16 into add clc mov iret or ja out adc and pop inc out or cmpsb int3 pushf xor roll fadd mov insl scas jns inc xchg add outsl ret push int3 cmp or xlat inc js mov jl cmp xchg (bad) jne sbb outsb nop sub inc lret icebp lea add xor cmpsb dec fisubrl xor fcomps insl loopne sbb push mov inc mov sahf push sub insb lods xor fbld mov fcompl sbb sub (bad) xchg xor into jns cmp lret xchg or push lds adc mov mov (bad) das outsl adc sbb push adcl lods (bad) aas pusha jns psubd adc xchg leave (bad) mov inc xor in or sub push and and (bad) clc cli inc mov arpl loop test loope ror pop and imul mov push mov test je (bad) sub xor jmp in adc push pop arpl ret ret cmp daa loop fsts inc mov or inc imul jg cmpsb dec les mov cli ljmp cld xor sbb and dec pushf ss mov jbe jg insl adc dec dec mov loopne sti pop outsb sub cmp mov mov jecxz push mov in int mov xor mov popa sbb mov lods cmp push gs jle es push jnp into fnstcw scas mov aaa jne test sbb mov mov (bad) pop movsl mov mov pop pop fsubrl (bad) jle loop mov es push jne lds jl movsb and stc xchg sub xchg sti insb xor dec fldt mov jecxz loope fistl out cs rorl aas cmp fstpt inc push scas push daa loopne jle sbb lahf mov dec pop fwait repnz cmp or xor loopne gs cltd cmpsb decb and hlt popf inc out or xchg in push call pop and jnp scas or bound mov hlt stos sbb out jle pushf (bad) cwtl pop sub and inc movsl adc mov inc (bad) sbb push lock stos and idivb mov dec fs jo add fstpl stos mov mov sub lods daa pop xor xlat and adc sbb adc mov jmp cmp inc xchg (bad) out (bad) (bad) sahf and dec pusha xchg inc inc int pop js inc push cli xor std cmp cmp xchg cwtl xchg mov cli dec call daa out jmp or cwtl and xor nop clc sub lods pushf cltd mov mov test jns or mov lahf je lcall xchg (bad) imulb loope xlat xor pop fnstenv pop pop imul sbb cmp repnz jg je mov fstps mov mov jo inc dec add mulb (bad) and push inc jns jl xor mov jge js test mov pop outsb sub mov pop jecxz jg je cmpsb dec shlb movsb fldenv sbb xchg pop jp mov fist arpl mov fwait shrl mov and jbe adc rolb je mov in (bad) enter cwtl enter fsts mov cmpsb js xor cmpsb mov lods mov sbb mov push mov mov aad pusha cmpb (bad) push sbb adc push xor sbb subb gs je xchg xor jle test xor fld inc and int3 adc addb out ss mov sahf mov jge jle das inc dec ss adc lds out and in loope out ljmp pop scas xor (bad) int3 mov jns mov pop xor inc lret stc mov inc push inc xchg or faddl mov out or nop icebp xchg dec add xor mov and test push cmpsl lret add xor pop addr16 cmpsl adc shrl mov mov lods outsb mov xchg push out clc ja push sarl pop dec cmc pusha mov xchg (bad) xor sarb push fisubr scas fildll insl test (bad) call push outsl pop sbb dec enter jo xchg in sarl mov sbb mov pop sbb loop fwait fs nop leave aad cltd (bad) mov popa lret clc lret (bad) jle fdivrp iret int3 inc adc (bad) lcall push (bad) into int movsl popf and cld xchg notl mov sub test mov in mov and in xorl outsl xor cmp mov call mov arpl mov fdivl xchg fnstenv loope jmp popf push fs jns or popf pop insb aas mov test and mov into cwtl push add stc cmpsb xchg mov xlat je enter dec leave je cmp adc rol cwtl in add pop lahf fdivs sbb cmp jo and lcall (bad) mov lret xchg inc test xlat je sub mov outsb mov cmc sub lock icebp dec adc in xchg pusha cmp insb (bad) and xor and jbe pop xor scas sbb aam leave (bad) mov mov or rolb pop test mov adc sahf call insl mov dec mov xchg push and ret sbb popf add int insl xor ret push call or pop (bad) jo insl pushf scas jl dec jl out lods lea jb shrb aaa ret push loopne cltd pop fmul mov push aad mov cltd pop push cmc xchg xchg mov adc sbb cmp mov fcompl xchg sti das push dec div call ja ds xor adc out icebp (bad) mov push test les cmpsb pop cmc or adc inc cmp mov test insl adcb insl pusha cmp mov xchg jae xchg push xchg loop mov add icebp loopne mov and lods sub ss sbb aaa insl mov sub dec cs mov push xlat dec ja hlt pop test fwait aaa out ret cmpsl sbb mov pop in cs inc inc enter pushf inc or xor dec lret cmp cmp dec cltd js arpl in out mov inc cwtl divb xchg or xchg dec push push (bad) jecxz,pt mov sbb dec repnz push cmp sti icebp or xchg popa add adc mov sub rorl lds pop inc adc (bad) ja adc mov les mov rorb mov movsb add mov bound and inc int3 cli xchg test mov pop push and cmp aam and movsb gs mov imul dec add or lods test insb add xchg repz cmp xor jno rolb pusha dec push in mov or add jge adc xchg frstor inc push sbb scas call jnp fimul arpl (bad) mov mov outsb aad stos pusha movsl fstl mov lea ficom lahf lret out push dec stos fidiv mov cmp and sbb cs push inc movsb mov lods (bad) call jl rcrl (bad) movsl mov cmp dec xchg mov add (bad) adc fwait ss mov sbb mov aad cmp inc jmp jns daa pop pushf pushf mov out ljmp je xchg pop mov xchg fstpt push imul adc (bad) inc inc clc dec xchg push adc popl test jge mov mov push imul sbb mov add lods cmc mov push ret mov int3 movsb hlt add not sbb add insb push mov and push in into pop and xlat ret xchg pop pop int3 shr jbe les sahf pop aam lret enter cwtl mov rorl lret jnp scas nop push les in (bad) outsl lds push cmp pop push jmp jle push xchg push test lahf inc mov scas mov subb (bad) pusha js xchg test loope incb aaa xor push push xor repz call xchg pushf dec ja imul ficom negb test jae push dec pop fs push scas into cli adc add jno cmpsb js clc divb add adc ficoml movsb and adc adc xor or jae or jp ja (bad) mov cmpsb test ret lods dec dec in dec fs lret inc xor mov or mov xor adc shr int leavew stos jae es and ja push dec mov mov stc out stos and (bad) mov cmp mov ds aam std stos push mov (bad) pop push jae scas addr16 sbb popf (bad) stc inc pop fidivl out xchg addr16 imul stos and js cmp out int3 jns jg (bad) push adc cltd call push ljmp bound pusha xor cmpb mov adc push stos in in jge jge sti pop outsl lock dec adc adc hlt mov lods sbb push imul js mov mov (bad) leave idiv mulb ret sti pop (bad) outsb scas rorl testl mov clc sub loop push push loope clc cld mov inc out sub cmp hlt call xchg test ret and addr16 xchg lahf fs repnz mov gs jne (bad) adc sub int3 loop and hlt inc pop cld pop shll ljmp lods cmpsl mov insl ss sahf inc mov xor pop cmpsl mov xchg or lahf pop pop loope pop je and in insb add ficoml xchg mov dec stos cltd xchg or push adc hlt mov push xchg mov cmc into popf lods imul pop std popa add out inc pop mov jle lret in ss or mov dec mov les mov mul sub out push jge jo iret mov (bad) (bad) repnz mov lret imul adc pusha mov fimull push dec xchg and push shlb cs ja data16 stc dec add dec (bad) jbe shrl stos sti jmp mov mov pop nop out inc push test int jnp mulb je sbb xor int sub dec movl ss jg dec cwtl mov jp jae mov mov pop push xor cmp (bad) loopne stos dec sub rcll sub cmp inc lahf jl into dec pop mov or lea aaa adc stos sbb test push cmp nop fimul inc adc cmp add mov mov movsl adc xor or scas adc sbb sbbl xor sbb scas dec and adc xchg xor out stos adc setp or push cmpsb test imul mov or (bad) nop loop roll push enter out adc ja cmp (bad) stc lret cmp mov mov cwtl dec adc pop (bad) mov cwtl ret lahf lahf or (bad) daa mov xlat xchg cld adc lea inc add leave nop mov inc mov ds push dec cltd or mov mov dec cmp and mov cli (bad) adc cmp in inc mov pop jp and sub les fldl fldl pop divb jl and inc add pop ret loopne dec ret jle and std add sub imul test notb mov sbb pop in les mov std repz fwait mov push inc or dec icebp je scas cmp xchg ret mov mov orl in jge fcoms dec dec sub cld into jb stos pusha pushf dec outsl js mov add sub push mov mov pop sbb movsl jnp xchg pop jb ficom mov mov push xor std push add and mov or aam pop push mov mov dec pop mov inc mov mov or inc ret repnz pop adc lret jg (bad) dec pusha icebp (bad) (bad) out cs repz mov add ja and jb xchg std mov lcall in dec mov scas out pop (bad) (bad) ja pushf mov out fsubrs les shlb inc cs ja clc push push repnz or mov (bad) dec lea and scas sti jmp mov pop jae or jle insb jp mov mov cmpsl scas mov out arpl jle mov jbe cmp mov lret nop ret sbb mov fistp cmpsb mov aad inc and loopne sbb adc mov add icebp add faddl gs inc jle adc lcall popf add rorl adc adc mov inc mov sub je (bad) int pmulhw int out sub jecxz pop dec push jnp out adc sub jae xlat mov iret mov loop xor and mov and xor dec cmpsl ret cmpsl test ljmp xor dec jno out jge cmp sub pop (bad) mov jno mov cmp mov cli xchg inc xchg lods popa pop lods mov cmp add cs pop dec xchg fs push repnz push (bad) movsb push ljmp mov jae cmp pusha adc and clc sub lds loope sbb (bad) je sub aas (bad) test addb mov sahf ret mov mov lahf inc jle cmp (bad) fiaddl ret insb fs loop fwait mov sahf mov dec arpl push fcoms xchg cmp jecxz xchg cmp mov cmpsl or sub and pop nop push ss leave stos mov fsubs xchg dec pusha imul and clc (bad) outsb pop loop jae ss pop sub cmp insl or pop jno push lds aaa mov imul or jne gs add inc jle das daa jecxz in pusha int3 push add test (bad) cmpsl fcom mov sbb (bad) xchg inc mov sbb xor pushf ljmp lcall sub push inc in dec outsl mov jne ret inc in mov movsl mov cmp divb push push mull stc push (bad) fnsave push lcall lds mov ficom sbbb negb lods xchg push inc xchg pop xor sbb fnstcw rcrl out in jbe and scas jbe dec inc add push ret jl xchg and outsb lret adc adc cmp leave add cmp leave xchg dec xor cwtl pop cmpsb loopne scas adc push pop mov sbb flds fwait fs mov into jb add xchg xchg inc pop push inc scas or lods xchg mov addr16 inc jmp dec lock or repz pop mov pop mov and xor in ror movsb and (bad) lret dec mov and push fcompl inc data16 sbb (bad) dec ja cmpsl ds or aaa in cmp daa cmp mov add xchg inc or ret clc lret shrb xchg mov xorb mov xor xchg jnp iret jno jmp cmpb cwtl std push lods xlat aas inc mov andl clc mov sbb ss cld mov cmc pushf aam push mov ja sbb push jo mov (bad) mull lods out out leave adc adc xchg jbe mov pushf jl xchg xchg or (bad) mov loopne pop mov pop ror pop mov das xor mov mov dec hlt push in or sbb (bad) mov lods stos mov xchg sub rcr (bad) mov mov repnz fdiv mov push jmp cs fcmovu out outsl fisub push iret mov subl or std mov shrb cld and sbb fwait ret cltd ds adc outsl aas sbb sarl loop rorb sbb loopne,pt xchg out pop addr16 sbb adc outsb and add insb pop lea xchg push jle xchg inc dec jae (bad) call fsubs and (bad) jp test test cmpsl (bad) jne movsb ljmp mov out inc or cld push xchg ljmp jnp adc test sbb jecxz icebp mov gs repz add pop lcall or lret or xlat fist gs pushf out js jmp vmovaps pop sub fldl jbe repnz mov ss test fwait sbb adc jo xor aaa add push aad sahf into repnz mov mov jge adc or pop sub add add dec mov mov (bad) test inc jl sub iret lds das aas lods push pusha jae adc (bad) jo pushf sbb mov push mov (bad) push fstl test xchg je or mov (bad) push out xor cmp jns or (bad) mov sub add icebp pop xor loopne aad ds js cld jns gs les xchg fcompl out (bad) mov xor arpl (bad) mov fs xchg push icebp xor repz (bad) push push je int mov dec dec addr16 aam dec into inc int xchg fxch adc pushf add push cmp xchg int3 sbb pop sbb adc xchg sahf and pusha and ud1 repz add mov pop xlat pop gs outsl neg jp aas mov mov mov lret int3 flds hlt scas and push mov cli mov jns pop es stos mov shr dec leave test in cmp push pop rclb into push sbb (bad) aas xchg (bad) dec shl jle cld mov sbb (bad) sub xchg gs jbe loope in add inc jmp mov mov pushf (bad) mov dec adc or mov (bad) sub xchg sub imul subl xor fcomi fisttp in gs jl data16 ja lcall idiv ss je cld mov fmuls in int mov inc cmc and push mov mov js hlt das cmp fmulp pop push dec jecxz mov sub jae and mov push adc push pop jbe in mov ja int3 dec or add mov in inc ja test js xchg pusha (bad) in scas jnp xor sbb sbb cmpsl fidivrl int3 jp outsb outsl (bad) and mov xor pushf pop shl lods cmpsb push enter inc fidivrl movsl dec aaa jne fnsave sub sub cmpsb ret arpl scas pop mov mov and inc gs sub pop jge dec xor (bad) cltd dec sub cmpsb sbb adc inc mov cmpsl mov push les or mov orl mov adcl stc mov or lea mov pop mov xlat mov das (bad) dec pushf shll out loope cltd stos test in push nop jge mov cmc push pop cli scas and fdivr imul mov sbb rcll cmp jno lret push mov test jle jnp lahf or mov les sarb mov pop dec popa add xor loope xlat inc push push or cmp aaa add js cmp pushf cmp cwtl pop jle pop insl lods xor in std insb push jne rol add xchg bound idivb in mov mov jo add xor push fdivl mov loopne mov insl add push push or mov cltd (bad) mov enter dec push jecxz sahf inc shlb xor shrl (bad) xor push mov in leave scas add fs mov fcomip xor jbe lods ret enter mov ss es test mov aad adc xchg xchg ficoml imul pushf push xchg imul ret lret jg movsb pop lahf ds adc stos jl outsb mov add sub ret outsb mov pusha jp pop mov pop xchg adcb test mov shlb xlat ret sub mov (bad) dec push fwait stos sub test loope push or mov adc xor add push leave mov jmp dec scas (bad) ljmp adc fistl (bad) jae outsl pop (bad) pop movsb push xlat sbb mov in push mov mov mov ret xchg and dec push stos push xchg mov xchg xor mov stos or sti adc js jp mov inc fdivrs imul cmp add rcrl int3 mov xor arpl rolb repnz in and inc adc sbb imulb sbb jnp dec sub loopne xchg pop sbb dec add (bad) shll ljmp adc sub mov and loope pop sub and add jbe loopne mov inc adc fisttpll test inc fs imulb incb mov sub es and icebp das and insl mov (bad) ds (bad) jnp sbb push (bad) lock cmp and xchg mov cmp cli inc insb or repz push jmp jg push mov (bad) cmp xor pop (bad) out adc push sti lea add xor mov mov adc sahf push jns mov pop mov inc out fildll push mov jno mov rcll cmovbe xor dec out push bound sbb sarb push hlt inc push ret xchg inc jno out xor (bad) or aaa jecxz pop mov ds aam or adc jg inc (bad) fsub cs mov dec insl aas jne movsl and dec ret sub sub xor rcrl fst loopne inc sti pushf call jle sti fwait mov ljmp iret es mov loopne imulb fbld add dec cmp stc xchg jo daa xor ret jp xchg cli fs sbbl sub int3 jge fadd mov push jg inc loop aas in ret pushf stos dec int3 or push adc sub outsl adc or and adc movsb clc xchg jle add cmpsl inc (bad) sub sub push fs cmpsl aam popf repnz leave int3 inc in push ret jns xor rcrl gs ja (bad) in jp loope mov (bad) sbb mov addr16 fiaddl cs cs sbb hlt mov sbb xor mov sbb mov sub push arpl mov pushf aad push test xchg or pop and push sub mov sub dec adc mov aad xchg sbb scas subb or fwait ljmp (bad) in sbbb popf repz in add fucomip repnz cmp lret cli inc (bad) and xor jae rorl or faddl inc mov rorb cmp pandn jle cltd aaa (bad) out mov int3 mov sbbl dec and adc dec test adc les cmpsb test jle mov ror mov and sub xor dec jg mov jle sub test lret sub arpl jp mov cmpsb popa pop orl test mov jbe cwtl inc cmp dec daa xor insl and pop pop add and xor test mov add and xchg jne aam scas iret dec mov les adc cs xabort leave (bad) pop jp rcrb sarb mov jmp jmp jo push imul inc mov xchg imul sbb dec fstpt int jnp push cmp (bad) mov and xchg arpl lea xlat in aam push pushf repnz rol mov cmpxchg add add mov mov xchg cmp test lret push ja std mov push pop int3 pop xchg mov inc or imul std stc adc adc mov inc rcl into andb andl mov inc cmc (bad) jle xchg inc insb jmp ret rorl punpcklwd ss out int inc jb ja mov sbb dec push inc xor xchg stos xchg sub xor dec jecxz leave inc xchg xlat xor loope push (bad) pop xchg cwtl test xchg je adc js repnz dec xchg cwtl adc xchg fnstenv in cltd das inc roll in ljmp and jecxz lcall xchg adc push stos add push jnp movl sti int3 loopne test sarb aad pop lret mov cwtl lds orl jle mov push xor mov jnp pushf ret jo jmp xor lcall xor mov xchg mov inc inc lret popf outsb roll shrb mov rcll jo test sbb into cmp je clc pop mov and mov adc imul cmpsl lea test lret rolb lods jl in cs mov repnz push les cmpb adc les (bad) cmc sbb cmp mov xor sub aam push test adc jg xchg pop adc (bad) dec sar inc sub imul jae mov cli into shr test (bad) arpl sub adc jbe lret aad cmp jge js xorl adc dec mov pop sub pop push cli ffreep adc cmpsl mov jecxz mov hlt jnp imul popf test mov repnz or js pop jbe into mov sbb inc rolb inc pop and int3 ds adc adc repnz (bad) xchg jb cmpsb sbb xchg and cmp daa addl incl popa jnp mov push lods stos jne inc das pop pop sub or jecxz inc push arpl fisubr xchg and (bad) (bad) pushf cmp mov xchg shl lret sahf or adc ljmp mov repz iret cmpsb mov sahf in pop stc add dec xlat xor mov or popf enter mov pop dec ja sbb and das (bad) sbbl jno sbb les popa push sub or out sbb shll les dec pop divb push jle push das test add aam sub movsb scas push push pop xchg inc dec cmpsl jns rcl test jb movsl les (bad) xor add in int lcall lret daa and cmc pop pop (bad) push jb push add test std cmp mov dec idivl and xor xchg pop repnz mov mov inc (bad) ss invd repnz mov pop das sub ja and xor and inc mov in jl mov pop push xchg repnz stc dec sarl push inc xor jmp sub cmp mov push sar mov clc push and cmp mulb daa js out call xchg add stos xor int adc outsb add jae addr16 es mov or mov out rol enter jo sarl mov cmc sarl xor mov aas sub negl jb loope inc cmp lahf out repz pop jo push cmp sub cs xor mov mov ljmp out mov movb jl sub je clc dec inc push mov aad icebp push sbb in mov mov push fisubrl dec sub or outsl inc test outsb dec adc or xor int3 fmul addr16 mov insb data16 sbb rol iret (bad) jmp enter mov mov mov data16 jnp ds sub in mov jmp (bad) and and outsb jns mov jnp add lcall dec movsl mov out out (bad) xlat (bad) mov jp (bad) les lcall xchg adc mov adcb rolb add orb sarl mov mov dec or or xchg pop mov pop adc mov dec sbb ljmp dec dec je or dec xchg jecxz adc dec enter es enter inc ljmp pop loope stos shr in jo mov add jg scas adc add iret jecxz stos mov movsl aas test xor cmpb mov mov dec adc cmp mov cmc push pop sbb jo js cs pop mov cli xor out xchg dec mov out pop jp mov pop stos dec xor std mov pop loop push mov std dec xor (bad) fst fnstenv mov lds jbe cmp rorb add (bad) add nop fwait xor push adc leave sub loop add fcom xchg push push (bad) cmc sub jnp mov movsl (bad) lret push jp rcrl and push push or xchg or lret shrb ljmp pusha test cmpsb and lcall inc cmpsl xor bound mov stc outsb push or add out dec or jne cmp and test jmp xor scas lock mov lods ljmp push lcall add dec and fbld pop lods (bad) xorb and out aas push xor fimull ss mov test pop pop cwtl dec aam cli gs gs sub jns lea lds push add add lcall imulb push mov sbb std scas jmp iret fldenv sar imul out xchg cmp fst test dec or (bad) cld pop inc pop fucomp bound inc cmp add ljmp cmp add xor scas xchg shlb int3 lods jnp subl inc add and fnsave add jle sub int mov daa call or shrl outsl or xchg lahf sub scas xchg xor (bad) or sahf les les jno lmsw pop push scas mov (bad) (bad) sarl arpl aad mov xchg push mov je test inc fsubl pop arpl popf les mov push fisttp pop imul rolb push lods dec jmp daa push xchg insb mov xchg xchg jae movsb (bad) xchg jo insb or je cmp mov test (bad) and mov icebp arpl and pusha jne pop lds cmp xchg pop pop mov inc add push sbb aas rorb adc bound mov aas cmpsl mov (bad) mov shlb mov int3 pop and mov sbb mov aam inc mov std int jl aas mov mov adc stc add inc test (bad) mov or dec out cmpsl sub xchg (bad) jae pushf mov popf aad es outsb (bad) das in (bad) into fwait jle and sub and pop ja dec inc movsl push cld dec aad or int nop mov push imul aad xor scas fisubr (bad) imulb test sub ret lahf xchg jb sbb mov cmp jae cli frstor pushf adc aas shll xlat outsb int3 aas push (bad) cli xchg out call mov fistpl (bad) xchg jo mov das sahf mov and je jge (bad) leave dec push les jno cli adc (bad) sbb mov push mov out adc in mov mov js xchg repz inc shrb addr16 cmp cmp jae cltd movups add cli stc leave dec or rclb movsb shlb mov inc add pop mov mov andl mov call std mov mov mov adc jo fnop jecxz cld (bad) cld pop push scas xchg dec orl cmp outsl mov or pushf cmp xor repnz jg push (bad) cmc inc or ja push in sbb dec dec mov (bad) mov mov icebp fisub mull xchg dec inc bound push add rclb jp aad clc dec pop dec pop push sbb and int3 clc cmp loope cmpsb fadds ds pop test pop xchg (bad) dec lret mov jns adc jge jp (bad) jno in lods or das xchg ljmp ds pop std inc insb mov inc test mov mov xor divb pop cmp adc mov out popf sbb sub loope jle adc fldenv lea bound addr16 push mov cmp lods inc scas rclb sub mov cmp js push dec (bad) xor daa xorl mov subl jnp jo clc shll frstor adc sub push arpl sub add xor add xchg aaa cli cltd fisubl xlat mov mov insl jmp (bad) xchg cmp js lcall and insl push aam mov push sub adc (bad) or subl xchg pop std daa cmp push xor jo adc gs es (bad) push test pop xor xchg in notb (bad) xchg lea sub (bad) lock push push pop decb or loopne xorb inc out call in rcr cmp mov aam push dec rclb and cli sbb add push enter test bound dec xchg and xchg push fnsave dec mov dec insb jg mov or sbb ret jp movsb movsb ret add bound sbb aaa mov jmp ja pop mov mov jnp inc fcompl push rorl inc dec inc mov in clc push dec mov xor xor or subl ljmp les cmp daa and cmp pop xchg mov mov push xchg arpl int cli fistl out and push pop jne xchg icebp jecxz and pop push cmp roll pusha pop mov jno stos pusha xchg imul xor test xchg pop test test jmp cmp dec pop test pop xchg mov push loope shll mov imul mov jge mov pop loopne test mov in rorb dec push mov mov cmp push cltd xchg mov loope (bad) xor outsb popa adcb adc out mov sbb cmpsb icebp sub jae push mov lods jns pop and bound pop push fmull lea cs fdiv in stos in imull sahf jb arpl in mov daa data16 sbb mov jns (bad) iret shr adc out xchg ret inc imul (bad) sub mov (bad) xor in lods call leave jnp les xor movsb addr16 pop xchg cld (bad) movb ret dec and sbb xor sub xchg push jbe in fcom in lret clc and and stos adc mov lahf insb push lret jge mov aad jnp jbe xor aad pop es sbb outsl add cltd (bad) mov push jmp (bad) test out insb stos adc xchg dec inc or mov jns jmp xor popa ja in or sub insb cmpsl mov jecxz (bad) stos mull fs aas (bad) es lret sub dec incb or cmp in ja inc mov repz mov add in lret js insb outsb and fwait mov sub or add sub push xchg cld inc daa pop push test in inc loop dec pop mov nop lret std push lods add inc push pop div xchg dec lcall mov xchg adc outsb jg addb cs mov fnstsw fsubrl dec push out (bad) lock icebp cmp inc cmpsb fwait mov aad call add push lea sub xchg lcall push adc adc dec mov pop sahf jmp xchg aas rcll lcall cmpsl pop out pop nop mov lds cmp test lret imulb mov cmp add shlb pop mov cs cmc mov push ja push movsl xor jno in adc imul or xor lea (bad) push pop or bound movsb nop (bad) dec js xlat cmp inc sbb and cwtl adc aas lahf fcoml push fisttpl scas sub sub cmp xor push dec xchg pushf sbb mov mov subl (bad) jbe fwait enter or gs jmp inc pop xchg mov pop cmpsb cmpsb loop sbb ljmp out push inc mov bound sub add add mov pop out cmc outsl add adc ret xor inc rcrb rolb movl sbb jno add iret mov cmp sbb and add dec cmp loope jle clc cmp pusha adc xchg test xchg call je jmp (bad) es cs xor inc push push push add push loop imul and imul orl test (bad) inc jne and (bad) xor iret fwait in movsb loop int mulb andl insl dec daa or xor mov leave lret push js cs push inc adc stos fcmovb (bad) mov mov add js xchg clc call idivl sbb ljmp movsl inc mov rorb rcrb lods arpl mov outsl sbb xor loop lahf xor lret mov xchg bound popa mov sti jmp daa int3 pop xor (bad) iret leave in int push xchg (bad) mov stc or sub orl mov stc mov sbb sbb or scas cmp out faddl xchg sub ret push adc push add dec mov push insb dec test push push pop pusha sti aas ja loop sub (bad) (bad) shr flds push outsl pushl in fiadd mov jo (bad) testl les pop sub jmp mov mov stc ja inc pop or and mov jl xor popf xor addr16 (bad) mov orl mov adc fstl popf (bad) push loop lret xchg scas pusha fwait mov push jo (bad) ja jl mov mov adc incb adc bnd and adc cwtl lods (bad) dec sbb mov jns scas std mov xor xor fistpl adc adc sub sbb lods adc lcall and fs pop sbb andb movsb mov pop and daa cmpsl adc cmp lret in pop call fsubrs fcoml stc push dec dec sub imul mov jbe push and sub xchg adc or pop mov pushf std xchg jbe in jle ja das jmp push nop popa lock and leave pushf and sub dec or and push cmp out stos inc sub fisubr adc jle cmp lds jg pandn (bad) mov hlt mov mov jae pop (bad) nop and sbb add push add add nop mov icebp bound pop ret inc imul mov cmpsb loopne lock pop inc fbld out add stos lock cli les push mov pop add lods push jne popf popf sbb pop adc sub xor loopne out (bad) lea out adc out movsb lods daa mov ss push mov in adc insb mov shr cmp clc stos fnsave in sti cmp fs cmpsl (bad) (bad) hlt jnp lods jno jl call and out hlt (bad) nop xchg ds mov fidivrl js inc out pushl das jns adc pop jns jg ret mov dec inc rcrl lods jl fs pusha or sub aam push add fsqrt inc (bad) hlt enter xor mov cmp mov fstl stos pop push nop xor outsb (bad) adc mov add popa xor scas scas out test daa fistpl imul (bad) inc push push pop dec sub jecxz or pusha testl pop in push mov cmp scas stc popf add out pop mov call mov int3 hlt in pop jne test xor pop addr16 xchg xor jnp lcall push mov jp jmp loopne xchg adc inc rcll maxps or inc hlt (bad) rcrl jecxz cltd jl scas mov mov nop cwtl je jl xor lock lea (bad) inc clc mov add xchg add jmp push mov (bad) xchg pushl ljmp out testb and adc in xor or xchg jge in xlat jge cmpsl mov ficoml movsb out pusha add xor push mov loopne stc jnp negl rcrb mov cmp push int3 or or fwait dec add pop fs mov mov movsl ja mov adc jne leave je mov inc jo addps jl fimul sbb or sarb xchg push adc ds add jbe push imulb shrb stos mov movsb cmp mov mov into adc popf sbb cmp push jb adc stos sub adc ffreep pop push cmp jle fdivs xlat (bad) dec pop xchg and inc (bad) out xor sub icebp test in scas push adc je mov add adc (bad) xor push test jg aaa pushw or fmulp movsb mov pop and outsb jnp dec andl mov call mov roll push sub hlt arpl mov jecxz inc (bad) adc dec or icebp mov sbb xor in repz xor and inc inc lcall sbb jp loope clc push mov and ficoml mov cmc sbb and aaa pushf xchg enter sbbl out xchg sbb fwait imul add push (bad) aam int pop nop lret jl aas repz or and xor mov ja rcl xorl xchg add adc sbb jmp stos xorb and movl or mov jecxz cltd fidiv jecxz pop lret fsubl fisttp push dec stc dec and aad lea (bad) mov js jge stos out jbe push push push xor lcall std and fsqrt (bad) jmp sbb movsl mov mov lock cmp and loop pop es clc or clc imul cmpl sub std xchg inc fbstp mov fsubr sub mov out sub xor (bad) or ja cmpsl (bad) fcmovnbe inc jo xchg jge movsl ficom xor enter movsb sub xchg jae dec add mov in push enter add shrb fisttpl fcom cmpb mov xor stc sahf sbb xor fs mov fs ret pop sub lods cmp pop aaa imul mov sbb pushf jbe push pop (bad) sarl ljmp mov mov int3 sarb mov ficom cmp mov mov mov push pop xor movsl mov decb test daa sbb fnsave ret lret (bad) lea push out (bad) sbb test xchg xchg push mov adc pop test (bad) icebp negb rcrl and or inc in lods jmp int3 ret and sbb outsb xor jl xchg lahf (bad) ss xor adc lea push mov loop sbb (bad) aam xchg pusha add mov ss cmp scas xchg outsb xchg and mov cmp movsb pop fstl mov fcompl push adc data16 xor sub mov sub das cmp sub xor pop (bad) sub mov push sbb jns jecxz ficoml pop (bad) mov and push int cli (bad) popf ds addl mov rolb mov sbb insl xchg in sub and jae gs jl cmpl mov popf in cmc xor mov mov in aam sub int3 in xorb adc cmp lret adc pop xor stos jne sbb or inc lretw inc or out push (bad) arpl bound or loope add scas adc nop lahf and clc push inc push iret pop aaa dec dec test push cmpl in fs and mov push std bound dec outsb mov sbb add pop push iret jge xchg repz sub or jmp xchg popa sti and push sbbl sbb cli rclb xlat sbb daa push pop push push testl popa ja divl add aas lods (bad) lods test jmp adc clc inc cmp lcall cld add in push adc jb iret movsb sbb xchg lret sub lret in or push or iret sbbb push mov cld in sub and in lds repnz sbb (bad) xchg xor iret push aaa insl enter and into adc ds push lret imul cmc mov stos into ret mov mov and lahf adc or sbb sub inc jl mov dec jl inc push cltd (bad) ss cmpsb adc mov or pop cltd sahf sub pop (bad) push sub mov dec lret hlt (bad) movsb xlat insl xor inc out inc lahf jnp mov pusha in pop cltd cwtl cltd stc sub push (bad) test lock jne push scas aas mov jnp cmp inc jecxz mov and dec mov imul sub mov mov jg (bad) xor add outsl inc lret ret cltd pushf nop pop push adc fcmovne lds pop jmp nop aaa jb rcll lahf in mov mov pop xchg push jne fadd out cwtl pushl nop in or pop jmp mov add or aad mov rcl add daa loope inc add dec jae out inc cmpsl or pop into divb (bad) aad and adc add lock mov icebp mov cmp lahf xchg mov mov dec or (bad) jg sbb sub inc mov sbb pushf idivb or mov jne std sbb push (bad) push aad cwtl dec xchg lods sbb jnp sti es mov shrl or jle fs or ficompl lret insb xlat sbb (bad) pop mov pop push mov mov out lock loopne or jnp sub test push cmpsl mov sbb out cmp mov (bad) (bad) mov ds movsb (bad) xchg pop jp sbb add js dec cmp dec shr mov cmp mul stos stos inc je cwtl ss (bad) aaa xor insl adc ja xchg xor out in rcl or sub xor xchg add loopne add xor stos mov cmp rolb maskmovq adc out aad stc dec arpl sar inc xor mov popf inc rolb xchg test imul mov cltd pcmpeqw jle jle mov jp inc enter loopne inc inc repz sbb push insb dec mov fstl sbb sbb test jo push loop pop push push and or test push jno push sub add adc pusha xor mov add popf mov rep sub inc xchg rcl cmp xlat or je shl inc mov xor mov jo mov jp inc xchg mov in xor add xor fldt into and fdivs mov fisubrl popf mov cmpsb mov arpl cmpsl in pop cltd adc daa js push sbb les jbe sbb mov xchg test imul enter pop mov adc add popa fimull les loopne xor out fs jmp inc cmp (bad) jb fnstenv addl call js dec push movsl hlt adc sub rcl push sub jp cwtl popa pop push inc repnz cmp div adc cs pop and mov push sub aaa pop or sub ret inc repnz push xor (bad) (bad) inc xchg mov sub iret int3 (bad) sub push cwtl mov call out lock push scas fidiv rorl andl xchg out push lock and jns fdiv or add adc into xchg ds mov int xchg scas xor into push mov pop popa or into adc pop inc mov test lods es outsb xor sub pop scas mov dec cmp idiv das dec xchg lret and mov xchg out adc arpl or nop jb cld push mov jle aad enter scas sahf bnd adc cmp pusha pop push mov sbb cld leavew movsl inc mov jae jl sbb in pop mov push sbb mov mov popf jge bound jae daa sub inc pusha cs rcr loopne addr16 mov dec js xor xor inc rsm sbb jmp test ja lret pop fstps xlat clc pop out push cli mov mov add divl xor test mov data16 push push cmpsl test notb lods insb xchg pop rorl fstl jge jnp mov (bad) sbb lahf mov out insl stos into jmp out ja sbb or adc add cmp ja inc loopne xor mov out jae mov dec clc inc ss sub lret add or jb loop pop cwtl sbb es bound mov hlt xorl xor push jno push cli (bad) (bad) dec cmp and pop in xchg ret lock bound pushf push stos sbb sahf lds in push or std inc addr16 int3 adc cmpsb out add loop (bad) repnz dec cmp push or and and or stc or in test dec (bad) iret sbb arpl mov or ja repz shlb mov xor scas lods pop inc testb sti jnp pop insb push addr16 adc repnz inc inc mov jb mov movsl mov stos js pop inc jecxz nop test jns cmp test xor enter pop xchg xchg pop xor inc dec je sub push xchg ficompl jne and inc ret push lcall xor add sbb es mov aas add mov icebp cmp mov (bad) nop into (bad) (bad) mov inc mov cmp lret adc insl xchg pmullw adc sarb mov shrb stc (bad) mov lcall ds insl bound jecxz pop jle sbb sahf push mov pop fs xor loop scas xchg or mov jecxz (bad) inc pop mov aad inc xchg stos or mov xchg sub dec and ficom add mov cmp aam cmpsb push pop inc push lock pop mov jnp mov jl pop fdivl sahf and enter mov mov (bad) aam bound and adc lods stc cmp ds pop (bad) aaa jbe pop (bad) fcoms mov xchg jns pop jl inc and mov pop leave nop setp scas inc mov xchg ficomp mov rorl push mov push fbstp jecxz call mov dec iret int3 ret (bad) aas jo mov (bad) negb arpl lock lock ficomp lds int3 aam jge movsl cwtl mov gs sbb adcl and jo mov jl pop pop mov or or aaa in rcr sti es cmpsl call fwait mov (bad) rorl or cmp add loopne dec popf fisttp popa sub push mov ljmp inc push test in sbb xor cmpsl jmp adc std or loop movsl dec jl push (bad) jno xchg mov inc scas jl lods xchg fcomi mov stos cltd inc out and jae cwtl jl mov adc lds and xchg jnp,pt fs pop and lret and jno push gs mov sbb fmuls scas pop out divb fsts pop in test int3 into (bad) or in and frstor fstl cltd add push fsubrl hlt orb icebp arpl gs mov and icebp add xor cmp je add stc sub inc ss sbb lcall popf xchg mov sub adc mov mov and sub xchg jg and jecxz call iret test push inc pusha mov aam mov mov icebp jge mov sub mov insl int and aaa pop push mov adc jmp ljmp dec pop jp or pop sbb js jp rcrl push inc fs aaa cltd jp pop mov push ds gs mov out addl mov push int3 pop add ja,pt or cmova push aas and shr mov xchg push push std (bad) jmp mov mov push sub sub fisubl mov out ss sub jo sub gs and arpl inc (bad) mov pop mov adc fnsave or loope outsb fdivrl jbe adc or (bad) push out pop in pop clc (bad) or sbb inc (bad) int dec (bad) mov cs cmp or lds cmp ljmp fldt dec sbb and lcall out mov pop xor mov aam cwtl cmc insb (bad) xor adc mov imul clc mov (bad) adc inc mov repnz pop (bad) sub jne das int mov mov in or mov pop dec and cmp sbb cmc mov data16 mov push and adc imul jl dec ds imul mov jge pop std sbb adc and les pop cli dec imul pop mov popa mov lods not mov ret cmp xchg inc xor and out cmp cmp ret cmp add aam pop pop fnsave dec pop or popf shl and lahf mov rolb subb push test movsb add lea mov lahf pop loope dec loope sbb (bad) jns jge clc fldcw loop pop (bad) or or jl mov push fadds das mov jbe dec popa lahf adc ds cs fild jp outsl xchg push aam mov mov add jecxz out sub lods das pop (bad) pop mov mov cmc call jmp andl inc and ds aam in add xchg repz jmp mov lock add jecxz inc inc or xchg sbb mov cmc das enter mov jp sub mov insl mov adc xchg adc sub xor mov lds jns or ss clc and leave jg in scas outsb dec pop mov push mov mov mov scas int outsl loop cmp clc sahf mov dec and stos push xchg enter adc call dec or lret sbb rcr dec arpl popf xor pop sbb push push add pop xchg outsl inc dec and (bad) leave jmp inc jb repz sbb add jg push mov xchg sub stc ret leave push nop sub int insb inc and bound loope,pt dec mov je cmp (bad) inc shlb jp stc movsl jbe xchg adc mov jle fdivs mov cmc lcall aad andb pushf mov mov mov lahf xchg addb scas sqrtps or mov (bad) arpl arpl adc lods arpl stc mov outsb and add les sub xchg gs mov pop sbb dec push loope,pt out ret xchg lret sub inc (bad) cwtl adc inc add pop ss cmp and fdivl std push sub xchg adc ffree fstps jno das je addl inc rol mov sbb cli stos dec mov mov jg incl adc jnp dec cmpsb lret jp pop mov imul mov pop sbb xor xchg jg fs andl lds adc dec cmpsl aam stos sub sbb dec inc and and (bad) jle cltd mov (bad) push add fistpll rorb jge sti icebp add cltd imul push fisubl cmp hlt (bad) ljmp rolb out lahf jecxz cmp aas popf add or inc inc or icebp popa cmp inc mov fisubl lds clc repnz fbld out div inc dec (bad) and dec repz int inc mov (bad) pop and cmp or cmp aas push push pushl mov ja imul pop fmuls jo subl inc inc js mov pop js jo dec xor sub adc xchg (bad) mov lret aam das cmp and push repnz push leave mov out mov mov mov push pushf ror mov xchg xor adc pop fisttp gs in (bad) enter clc (bad) cmp pop mov jmp sbb xchg enter call and shrb adc fs push and push cli pop sbb push call and sbb xchg popa cli or mov mov sub in sub jne add ss movsb xchg cmp jge sbb pop adc mov jo,pn popa xor xchg push mov dec cmpl mov jp loope lcall lcall or ljmp jb mov int (bad) mov adc (bad) and xchg jne push pop aaa std pop out pop mov loop fldenv dec mov mov data16 repz (bad) xor pushf lds sarl sbb adc mov pop fwait ss and or jecxz sbb xchg adc push xor jl out pop and push mov mov inc loop sbb cmp push imul inc push adc inc das push dec test stos sub mov add cwtl sub and (bad) (bad) data16 cmp scas mov test test push lret and or push pop imulb xchg cmp loop cmp xchg adc lahf cmc xor in mov mov lods and out imul icebp in adc push mov popa lds push incl notl pop and out pop idivl dec pop (bad) insb xchg or sub jp pop mov push or push rolb fstl mov mov cmpsl fsub loop shlb fwait (bad) pop dec or mov push scas sbb aas cltd add icebp pop sbbl add push sub inc sahf fcomip cmp out lods xchg push arpl add pop push lret insb jo hlt aam and adc jne pop xor xlat dec insl ss sti sub fstl jbe ds xlat aam pusha xchg call ljmp insl je inc ffreep das pop fistpl lret push (bad) movsb insb stos jo adc fisubr jae sbb pop adc repz daa out rcrl add dec int mov and jecxz jae xchg fbld arpl or ret fucomp xlat das fwait cs push xchg sti ds dec out aam (bad) and adcb ss adc jno pop int3 dec lds js in mov insb out imul clc mov mov add mov xor (bad) push mov or and (bad) pop jno cli sub cmc aas vpand call imul cli lea dec int lret mov jg adc xor inc pop mov aaa sar sahf ja add pop aam jecxz fs repnz and mov cmp sbb rcrb jno lret mov test cmpsb push fsubrl daa and outsb sub sbb ds xor xchg fwait scas pusha ret sub cltd cmp lock jmp pop ds movsl cmp lods inc imul sbb movsb push out orb xlat mov xchg xchg mov inc push stos repnz pop pop popa cmpsb (bad) pushf clc mov data16 pop sarb aas cmc add test push int pop dec jnp jg pop mov push cmp jg test in fsubr sbb jno push stos fdivrl mov mov fdivrl out das loop pop adc ss mov jb adc jae mov bound test fstl daa push jle out xchg mov sbb mov jecxz push xorb jb hlt shr cmp repz aad sbb jmp mov jb test (bad) fbld cli (bad) mov (bad) (bad) cli divb mov popa call jg jmp mov test pop cs sti fdivl test push insl int3 (bad) imul (bad) jae movsb cmc sbb imul rorb loopne xlat mov and es clc movsb mov popa mov aas std in call dec nop inc pop int3 push (bad) mov pop lret jnp fdivrl (bad) jae xchg nop jmp call es add popa mov push stos lock (bad) cmp inc or jecxz jmp inc enter push push jp je int3 cmpsl inc fld cmp adc enter sti adc xchg rcr lods pop cli lock bound shll scas in pop inc pop mov rolb jne dec insb sub pop (bad) push cmp inc push inc fistp pop pop adc insb dec ja pop push notl mov xchg push cmp mov mov aam les nop inc (bad) mov and lahf out ror cmpsl mov aaa sbb and sbb aam fs dec jge addr16 mov leave ss xlat outsb cmp or jns mov jns lea into popa mov test mov inc mov inc mov cwtl scas fwait push (bad) (bad) mov jecxz aam loope or js and fadd mov sub dec xchg cmc push push scas scas inc lret icebp loope inc daa xchg gs dec push cmp movsb jno jl jmp (bad) or push xchg out pushf arpl push inc stc repnz mov sub hlt bound std sti fisttpl adc roll negl inc jb pop xchg push js or jae sbb push test adc pop sub inc fcmovb loopne mov (bad) and add mov shlb lea adc cld lds push sub pop iret ret enter (bad) jo xchg mov into mov inc fisub jnp mov cs and vmovapd (bad) mov das adc cmp add cmp push sahf mov jne or (bad) push pop popf jno (bad) out adc int cmp int3 inc cmp insl orl inc into jne pushl mov pop and xchg mov (bad) repnz aad cltd mov rorl (bad) jo dec and push data16 loop test gs xor test cs nop cmp cld pop out rorb mov pop fwait stc xor (bad) sub fsub movsl dec add jp adcl xor dec int3 xor push scas mov (bad) push jo add or cs les jge stos xor adc mov xchg roll adcb inc or jo aaa leave ds jnp bound or or repz push jge arpl adc in adc xchg dec aad mov stc fwait es push push pop inc iret and dec cmp sahf jmp dec inc scas dec mov movsb iret push pop into (bad) adc mov cwtl cwtl inc mov fcomip mov push dec mov jmp pop insb in push out insl fstpl je std pusha out jns cmpsb pop fdivrl or inc js cld mov jbe mov jbe pop cmp mov add inc pop inc xchg lea sbb in (bad) mull sub (bad) je pop add idivl (bad) push bound sahf mov adc push fs pop out push sub jb jns dec dec inc enter xchg pop mov lds int3 loop aam pop les je (bad) inc add jae lahf add movsb push arpl cltd (bad) cmp (bad) dec mov jno jns pusha push (bad) rcll dec cmpsl jge pop fldcw mov loopne lods insl add ss sub pop aad pushl aad dec in lret enter and popf sub (bad) xlat sub fldlg2 nop xchg idivb xchg push dec sbb push in cmpsb cmpsl call push rcrb movsl and mov (bad) dec leave ror sbb stc iret add xor stc data16 insb test pusha cltd xchg aad and mov mov daa dec cmpsb sbb test repz sub repnz jne movsl mov mov jecxz sub and (bad) aad push notl or push adc jb cltd mov repz mov mov mov mov mov push jg and xchg popf cli imul scas push dec xlat and cld sub loopne (bad) pushf jns data16 leave inc insl aam loopne out jge push bswap push sbb es inc andl int sbb adc andps jb jae int push aam push inc xor inc (bad) mov scas aad dec add rcll xor dec cmp adc call (bad) or xchg cmp and ret mov aas or ret movsb icebp dec jg andl stos in sahf pop roll enter push subb or sbb adc lds test daa stos mov mov out dec sbb sbb inc bswap cmp add imul and inc scas mov sarb stc enter dec cli gs in sub jae movsl das mov pop sub push je cwtl pop divl adc sub adc (bad) into push nop inc mov xor sti sub stos cmc add insb dec addr16 (bad) dec (bad) lret jo ss cli sarl mov shll mov cld push cmpb loope adc repz push mov stc insb test arpl test dec and cmpsb inc inc mov test sbbl std ret jbe dec dec sbb pop sub xchg sarl push int3 xchg ds outsl pop cli in lahf inc pop mov out or cmpsl xchg pop das stos sub xchg cmp fmull test lods stos push in and in push imul daa in pop xchg (bad) mov in mov mov xchg dec jge sbb addr16 xor mov pop popa cs or testl xorb scas mov in pop jmp dec (bad) in and insb out fadd pop jg cltd mov pop jbe dec sbb fbld sbb mov rcrb jnp mov hlt fbstp test dec test dec adc inc insl imul fsubrs mov or jno mov hlt xchg ljmp mov hlt and jno push xlat ja mov dec (bad) notb mov and jle scas push decb stc into push pop push (bad) sbb loope ljmp mov sbb cli shrl stos push es fwait adc in sub adc sub enter pop push mov push in rclb in xchg (bad) pop dec daa aad cmp das pop push imul movsb (bad) jge xchg pop push out xchg aas in mov aad pop fs stc mov movsl inc (bad) vsubps pop cld push insb rcll loopne push mov xchg and dec and ret scas in jmp ret outsl jo scas jecxz mov stos inc pop arpl sub adc out scas int3 inc sub dec add lret xchg jns sbb adc adc and rcl and (bad) scas dec mov dec test push push fwait lods mov push pop add stos pop sub nop nop push fs and test sub sbb test jmp lock hlt push insb outsb and pop push out mov idiv sahf pop scas xor xchg clc push mov ficompl xchg push mov adc xchg stos dec add addr16 (bad) pop stos xchg enter in lock subl xorl sbb out cmp dec scas dec leave flds jae xor mov shlb orl cmp mov call xchg xlat cmp lea jg add shrb jp dec sbb ja jne (bad) cld mov stos xlat xor ret call mov jb test xor mov mov push mov mov (bad) and ret mov ljmp mov jecxz sbb inc les mov shl int3 sbb ret jp push xchg push andl lret cmpb jle push and pop mov dec cmc mov jmp movsb sbbl lret sbb orl xlat push or fdivl jbe cmpsb flds xorl (bad) icebp sahf mov pop addr16 jb fnstsw mov test xchg roll sar bswap mov test pop mov aad add movsl mulb or hlt cmp imul and aas xchg xchg adc mov and adc shll jnp in cmp pop sbb sbb mov dec dec inc cli test arpl lods mov scas pop mov mov mov sarl ret cli cld jmp sbb stos imul add cltd in mov sbb sub shrl mov dec mov movsb lock add xchg sub inc fsubl inc test das mov push sti (bad) xor jmp movsl dec push push push pop inc add pop dec cli jmp dec aas mov jl lea test test aaa inc leave cmp bound daa sti icebp cwtl inc and push (bad) clc push outsb lock std cmp jnp popf loopne dec mov ficomp scas adc das cmpsb seto fistpl adc in pop xor enter or dec pop int3 cmpsl pop aad daa pop mov mov popa sub xchg mov lds sub xchg dec push mov clc lcall out and in pop fst push xchg fiaddl xor mov mov push jnp lods jnp mov hlt fidivl pop dec push imul sub ja or int3 push inc and xor mov cwtl xor and jmp mov mov mov mov or sbb sbb cli int stc cmp cmp adc mov jmp fsubl cmpsb sbb pop add test ret (bad) sub push data16 fidivrl xchg mov or cmc stc jl and inc xor cmpsl cwtl sbb mov cmp dec add xchg fbld pop repz scas pop adc xchg cld push scas lret push adc xor insl cmp adc jp xor push mov insb movsl adc jp int3 mov dec dec jl rclb lcall aas pop push int3 mov leave gs std cmpsl fs inc int imul test or mov pop out jmp mov adc or ret or cmc imul shrl adc mov data16 ljmp out out jnp hlt insb mov add xor mov and fs test add add fisttp loope test push mov or (bad) neg jo je outsb mov jge test dec icebp fdivr fistpl xchg sub adc orb lahf ror mov (bad) lret cmp stos gs adc fs push sub pop mov add pop mov lea jp aam push std inc jmp push push dec cld jns sti and aaa clc mov (bad) (bad) xchg jb mov jb mov sub add inc add sub (bad) (bad) das sahf movsl jne (bad) xor test data16 add ret test jo stos cli loope adc (bad) mov xchg les mov and mov (bad) adc shlb dec ficom popl les xchg mov xlat mov test jp fst push xorl fs xor sbb mov or ss and gs (bad) mov clc xchg inc lret push dec and stc rclb fistl lahf push jl inc push int cmp sbb cmp stos adc scas adc cmp ret rcrb push ret mov enter mov iret jbe fimul arpl in sbb in popf or inc or outsl mov mov daa xlat or adc cli dec sbbb sub dec dec or enter sbb dec inc xor mov testb xchg inc (bad) push stos jae xchg stos aas inc mov push add add pop xor pop xchg pop (bad) sub movsb pop loope push cltd (bad) sub movsl cmpsb dec add sbb pop push xchg scas icebp mov push adc lea pop add jne ds cmpsl add jmp xor addr16 dec add fadd jnp jmp mov mov mov (bad) jl inc jmp pop hlt cmp xchg dec icebp dec xchg fisttp in (bad) je aad and or je scas cld pop ficompl jae lods push push and inc repnz mov or popa lcall rol popa test inc inc mov sub cmp xchg inc pop jl lret sbb mov mov stos repz pop cmp std (bad) cli mov add push mov cmp mov jl xchg adc jo into push jmp mov inc xchg push mov mov sbb fisubl xchg movaps mov shl xchg and mov je mov cmp xchg fildl xchg bound cmpsb ja mov jle popa loop dec mov nop rcrb ret cmp xchg mov add add mov test mov jbe pop arpl push out adc out jb sahf nop pop mov clc scas ja repz js and scas inc aaa push stc add ja and fsubs pop (bad) jno sti test jge jb pop add xchg mov mov cmpsl and adc inc lret sbb xor jge jns jbe (bad) lds nop imul aam scas pop xchg enter lea out push jmp scas shlb rol jns sub pop sar mov or add push sub push outsb adc orl pop mov fbstp mov jp mov push push cmp (bad) or leave jb xchg mov int shrb mov or sub orl repnz fwait inc pusha std arpl xchg daa in outsl cmp jmp mov push icebp jge mov rcrl aas mov xor loope push test fwait rcr pop pop xor ss loop (bad) mov inc je xchg inc fisubl mov aaa bound mov sbb mov push push or sub int3 adc dec push setbe pop aam sub mov jp jg lods xchg dec imul pop xor test mov test (bad) repz loope in dec insb jmp in or add pop dec test sbb aad ds xor and xchg jo mov mov sti or sbb pop test pop aad jnp push aaa rcl pop ret (bad) jl stos mov or ja (bad) sarl mov xor cmpsb test xlat shll mov lods addr16 mov inc inc scas ret push (bad) in std push ds sub roll (bad) jo pushf int3 or push mov push (bad) test inc pop ret mov pop shll mov imul sarl pop dec mov push es repz jecxz je jb add sbb scas je xor (bad) jnp jae out ds add dec dec mov or dec lcall xor cs enter dec jle push das xchg cs daa add cmpsl add xor push push (bad) (bad) mov (bad) aaa mov repz (bad) aaa mov xor ficompl push sub jg mov scas movsb dec mov pop lret in and jge and pop popf xor stc jmp dec or scas stc sbb fidivl jns sbb les test jmp xchg rcrb sti pop inc adc repnz lret and ljmp fdivp aaa aas mov fs mov dec aam aas (bad) in hlt mov xchg mov push (bad) fs fnstsw nop adc xchg xor cmpsb mov mov out and sbb jmp fnop mov cmp inc loop imul pop mov lock hlt mov sahf jecxz ftst jb mov fdiv push imul jmp sbb push mov jne push test out repnz push and jne push test push push adcb sub pop inc stos cld inc rolb pop push hlt imul out (bad) mov inc pop std divb xchg ss push and mov sub js xor repnz fcomip movl xchg mov insb cmpl xor dec movsb es dec les data16 scas lret dec dec jecxz and adc cmp rcrb sub jnp ljmp stos xchg push dec es and das xchg mov mov or mov test je pop test jmp push decb dec aas xor aas dec mov jnp (bad) jnp out mov mov dec cmpsl mov mov xor sub pop xchg cmp mov test test jno unpckhps lock jnp and pushf fcompl nopl lods mov stos (bad) (bad) adc aad test cmpsb les sub push (bad) ljmp aad decl xor mov test (bad) jb stc jp in sbb push mov mov add jp sbb or ds jno mov imul clc xchg frndint cmp div add (bad) aad pop test mov inc push mov mov xlat push and repz mov adc scas stos pop or das pop xor sti mov mov ss movsl sbb clc out ss sbb faddl outsb adc dec mov fiaddl mov stc adc shll inc cli mov mov sbb inc jno addr16 or rcrl popf sti ret pop jb icebp add shl ja into pop inc lret and (bad) es stos fwait int (bad) in and jmp pop pop cmp sbb insl movsl adc aam push fs hlt mov rolb leave sub sarb rclb fsubrs insb mov (bad) pop or jno jmp imul dec mov jg mov inc in push pusha sbb inc ljmp jp lcall push jo pop cli add mov in xchg (bad) in xor xorl (bad) sbb mov push (bad) fwait mov pop adc es stos lods mov mov xor popf mov mov repz pop and sbb fisttpl xor adc xor cmpsb insb insb mov mov inc ds push movsb dec mov and movsl or fidivr lahf das cs or or dec sub push fs and jnp sub mov cld mov mov adc jmp inc pop sbb inc adc jae leave lods ret mov ret dec pop sbb rcr in rclb xor adc xchg inc xor stos jbe les repnz enter add movsl fistp pop popf jb popa lock int cmc xchg sbb mov and mov push das and dec pop cli sbb push xchg aaa xchg aas ret jg sub adc loope and outsl lods mov inc sub out cmpsb pop xchg je sub sub or nop mov mov hlt dec pop cmp sub sub (bad) out sub mov fwait pop jns lahf pop mov pop sahf mov xchg sub cmpl sahf mov sbb mov ss cmpsb in dec in inc fsubrs stos inc iret xchg cmp movsl repz outsl arpl jmp xchg push pop addr16 out mov inc push loop das test mov jge fs pop xor mov popa addb out xchg xor lods movsl mov adc xor dec cmp inc sub push xor sbb lcall cmp dec jno mov je pmaxsw jne outsb jecxz add outsl loopne sub jmp add aam outsb orl rorl arpl and xor jecxz mov in test inc call sub dec mov bound xor lcall jp (bad) jmp pop (bad) jbe add pop inc mov mov inc (bad) ja xor jmp or pop ret fldl push test cmp xor mov push xchg mov xchg das jb insb lea sub shll pop aad and dec incl mov ret adc test jae jecxz fnstcw add mov adcb mov loopne fmuls leave add inc (bad) jb,pt (bad) mov jnp jae push fwait sbb sbb add mov test cmp cs xor push (bad) lret mov or rorl and sbb cltd and sbb incl outsl and stos fstpt aaa in lods dec loopne in sbb aaa push push add jbe lret push inc mov ds rclb stos push xchg mov negb xor xchg jae loop mov xchg adcb sahf fsubrs xchg inc mov and iret dec aad pcmpgtw sub outsl stos and std dec lret inc jge rcl arpl out cld and das stc push int3 sti fs mov out xchg int fidiv jmp adc lret pop xchg and pop xchg adc xchg or inc add sbb cmp jb scas mov in sub inc or ss out and xor int3 sti sbb ret dec sub outsl scas out jne popf sbb xor xchg popa pop adc inc iret jge (bad) dec sbb out ljmp (bad) jl ror fisttpll (bad) adc icebp out dec jnp pop int out pop push xor aam jbe sahf pop insb and dec mov jle cmpsb loopne mov mov dec pop push dec or sahf push call es movsb pop sbb or push icebp dec jp daa push stc movsl add out ret xor and pop scas cmpsb mov dec arpl (bad) mov push jg mov ficompl popf push xchg mov push xorl sbbb cmp adc inc mov (bad) test sub or sbb dec xchg add arpl jl mov shl nop cwtl mov add jle xor sbb jb popf sub fist hlt mov jecxz fsubs push out mov push and mov lahf add mov mov aas xchg hlt mov popa rcrb and cli lcall dec repnz dec stos cmp rorb scas jmp bnd cmp cmpsb cmpsb faddl in mov out add jns add stos jecxz cwtl in inc shrl mov call daa add mov insb lea mov das xor fwait sti dec jmp jg pop dec jl jmp subl cmp pushf into addr16 mov ljmp (bad) sub int3 xchg push (bad) pushl mov cmpb loop cwtl fildll push xchg (bad) je ffreep mov push add aad incb sti cmp dec adc sub inc pop aam mov mov addl popa push inc js mov add xchg insl add jns imul or das dec xchg mov js stc roll les ss sub outsb pop xchg cwtl xor push rcrl js clc jecxz cmp adc jae repnz push inc mov fldl push addb xor fwait sub int3 dec xchg jne cld jne pop je sub jmp int ss mov ja mov fwait insl lods sub ja imull push in fmul cmpb in adc outsb ret dec sub xor pusha lds jne xor cmc add in fcmovu jmp idiv insb push mov cmp or jecxz sub popa lods sahf push call imul add cmp dec jbe cmp pop mov aas cwtl xchg into xchg mov xor in cltd push dec int mov xlat stos and hlt loop ss and movsl pop pop jg jns sub pushf fwait lds (bad) xchg aas ljmp dec call add ds ss cltd mov movsl mov pop mov out and pop dec sysenter cmp and into push popa cmp scas (bad) adc adc imul push cmpsb lods add (bad) call xor out dec dec leave jl mov fstp sub shll lret fdivrl mov xor lods jge popa and lcall sbb mov loopne jbe pop lods bound ror (bad) in inc push adc outsl mov repz or add pop push jo sub int dec inc outsb imul ja pop fs jmp in sahf mov add out jns xor sbb cmp in cmovbe lahf into mov adc sbb insl mov in ljmp and mov insb movl into insl xorb add cmp iret jno jle jns lret push mov adc loop bound push and fwait push lods ds repnz and sti sbb loop add mulps ret sbb test cmpsl jns push jl push mov fcompl add sbb and jnp add mov call mov cmpsl inc mov pop push and jg jp push (bad) push jo fcmovnbe imul sub les dec sarb cmp loopne fidivl loopne push pop xchg jp fstl and and popa (bad) jl adc data16 fcompl popa imul or test adc bound ja xor and loopne dec adc dec jb or push mov cmp aad outsl mov cmp sub fmuls pop dec lock cld or lds aaa scas inc cmpsb stos push mov xchg js and cmpsb test aam bound lret and xor adc aas mov fisub push jb jl and and enter cmpl pop jnp test push lret ret sbb scas add and movb mov ret inc or xchg out xor daa sub push push cmp xor lock repz sub sti sub in popa or cs addr16 les or test mov dec push outsb mov fldenv ds call movsl or pop loope (bad) jg adc adc divb dec xchg dec in scas negl or scas pusha test or ror xchg pusha (bad) jne inc xor jbe or (bad) fidiv daa jno popf loopne (bad) sub mov mov inc aad fisubl imul iret mov cltd cmp repnz repz pop xchg dec mov pop stc out xlat cli scas push mov popa mov add inc in int3 shrb scas dec gs sub pop mov and aad mov cmpsl add iret repz push push fldt fisttp push orb add test mov outsl mov add pop fidivl or loop jmp ffree notb sub or pop or mov sbb adc jae out jo fsubrs lods mov mov and xchg push mov andl (bad) iret shrl out sub cmp aaa iret mov js sub mov sbb add popa leave or in push shll mov xor rorb sarl clc cmp mov inc addr16 or mov push cmp orl or icebp scas inc into subb push hlt (bad) popa daa mov aam mov arpl cwtl pop sub aaa jno or (bad) xor lcall jb cld cltd mov mov cltd fild push ja mov pushf test enter test arpl jb push aas mov rol inc lcall test add mov negl faddl mov mov roll sub fdivl mov cs and sub shrb out fadds rcll repz cmp dec fsubrs call (bad) ficomp adc sbb pop lret inc push jg test outsb push (bad) xor testl out push dec jg xor daa clc insl ds insb mov mov cmpl inc cmp in dec mov jns lock aaa add ret aas adc or aad scas outsl rcl or pushf jae sbb pusha mov clc dec jae es ss cli jmp jmp (bad) add and xor lods dec jne mov ja popa lea adc loop xor (bad) in push push sub das or add inc jno jbe jo lea cmp icebp cmp iret sub sub imulb or in sub popf push (bad) dec sbb cmpl aad mov outsb icebp push inc mov lods in push xchg mov les icebp mov imul pop leave lcall add rcl mov sbb dec (bad) rclb push lret mov icebp xor jae push and inc jge cmp push push repnz jbe jnp mov adc popa adc mov mov fldt outsl jno imul push imul push xchg cld pop sub lea aaa adcl test cmp clc repnz stos in in pop leave js ja push and insl rcr cmp mov repz in mov mov push xor cmc cs shr lahf inc (bad) sub inc dec fcmovne loop mov mov negb jl push daa in adc or fisttpll sub inc adc sbb add ror or test dec outsb mov gs bound mov mov mov std and clc and sub pop fsubrs cmpsl inc loopne dec dec sub mov or dec and mov push inc cmp mov int3 movsb pop inc jo sbb ret cwtl jecxz aad xor or add add jp pop jns (bad) lcall in cwtl xchg into bound les (bad) jae leave mov mov xor adc stos cmp mov ljmp mov mov outsb xchg add and shll rcrl cmp mov xor xchg cmp fs inc notl jne dec stos push inc jns or sar xchg push jae inc mov loopne rcrl adc sbb push in shll xchg loop push cmp fucomi scas popf (bad) fcomps stc mov fucomp sub dec mov sub or in (bad) loop xchg jnp test mov or sbb fcmovu dec incb daa stos pop xchg nop (bad) xchg and cmp mov es inc jg rorl inc push out push dec cmp scas mov pushf jp (bad) in and lea pop push and jg scas aaa loop out inc imul cmp cltd pop adc aad fbstp sub and call fcomps ret pop sub mov rorl fldl2e inc xchg addl mov in enter sbb push test pop imul out jmp (bad) and pop xchg inc dec add test cmp insl lea aad mov push jmp fiaddl pop daa adc mov loopne sub cmp mov mov loop lcall cltd (bad) scas rcrl loope adc lret out jle sahf stos push shll dec xor xchg aad add sbb rol adc xchg ret pop (bad) mov mov mov repz cs sub imul push test call dec lahf cmpsl jl xchg inc mov xor inc std mov loop inc pop mov ror and leave aam (bad) test (bad) sahf cmpsl test xchg xchg in sub adc loopne pop push hlt clc xor sub addl out dec lock out mov xchg lea stos into mov cmc int xor fdivr call frstor cwtl xchg mov outsl mov popa outsl xorl mov mov sub (bad) lock mov aas mov mov subl into mov es das sub adc cld sahf notl mov jns pop jo fsubr cmpsl jmp push xchg lock sub fidivrl nop jg mov cli push mov jns insl ja xchg lahf mov jbe pop pop adc dec push out jne pop inc inc lods jns mov jge mov ret jb mov mov inc xor idivl cmp xor in and push dec test mov mov ret inc or push sbb push leave dec (bad) inc inc (bad) in adc daa sbb int inc xchg cmc adc arpl test pcmpeqw mov int3 jl int es sub pushf xor sub leave ds stos cmp inc inc mov cli outsl sbb je leave jle and cmp outsb add pusha in rcrb sbb xchg pop out dec jbe movsb stos faddl add mov out push mov arpl std insb nop xorl cmp out xor cmc jb cmp test jp add imul (bad) push push sahf push aas out std mov jl repz adc aas pushf inc and xchg cmpsb (bad) outsl je leave je jnp mov arpl mov scas dec mov inc or mov pusha in mov pop xchg int cltd pop add jbe outsb and push ficoml sbbl pop push inc lret les push mov jg xchg lret int3 add rcll pop pop jmp sbb pop push sbbb cld mov lahf (bad) stc ljmp fiaddl hlt scas pop and xchg sub loopne into mov leave mov xor loop sub add xor jnp push push dec out cltd pop and loope rcr push push fild sub sub cmp shrb shrl cld xchg mov mov push jle xchg mov mov das mov test xor ss out outsl frstpm(287 or jnp pop sub add enter inc mov dec (bad) aaa flds jp negl cmp sub into cmp addr16 xchg stos (bad) ret push mov inc mov add dec in pop push pop jae enter popa sub fcoml lock mov or arpl fldl pop xor arpl dec inc cmp daa add repnz lret outsb addr16 xchg cli (bad) ljmp orb (bad) push negb (bad) xor adc sahf inc push lcall mov cvttps2pi int test pop (bad) xchg sbbl pop sub xchg mov in or (bad) jns dec call (bad) fcoms ds inc popa pop outsb or push cmp into xchg inc xchg inc aaa mov popf push ret (bad) pop dec mov jne jl test or add insb fistpll test push imul (bad) jle icebp pop stc add loopne xchg rcrb jo xchg insb mov mov lods sahf fmull xchg adc inc xor inc (bad) xor jg ljmp fistpll mov in or sub add mov adc int3 (bad) xchg push cmp in fldenv fucom int3 dec sahf xchg loope dec push bound push sub cmp mov cmp lods xchg fstpt cld dec aas mov and iret fcmovnu xor sub add jp cwtl add iret addr16 cmc and and and hlt fimul ror (bad) cmp scas pop inc add leave add fnstsw jl jmp lods loope lahf (bad) mov repz fmulp mov rorb std inc fnclex cmp scas inc dec dec add jecxz inc movsl or adc sti (bad) mov movsb in add mov data16 insb mov shrb fbld mov pop (bad) cmp jne sub and gs pusha or icebp mov fistpl cmc dec xor idivl jmp mov aam sub lret (bad) (bad) out nop and and subb lret es xor stos fdivrl js adcb outsb adc (bad) ljmp addr16 or scas scas nop pop (bad) test pop iret repz repnz jne (bad) mov mov loop mov sbb mov shrl scas les mov mov es aad aam mov inc or sub cmc sti push and loopne ret pop fs loop in (bad) inc xlat jbe std xor pop ret js adc pusha mov xchg or out push lcall sbb mov lcall aaa mov enter or mov and jle lods pop (bad) sbb push sbb dec es xchg dec add cmp sbb adc xchg fldl dec dec mov or xor push jmp inc sti std pop iret in cmpsb leave xlat dec xor roll pop loope push pop adc dec adc lock mov sub mov jnp loopne xchg js ss cli add fild xor int push xor ss mov adc xchg mov xchg out inc mov (bad) insl rclb xchg sub in test pop mov aad xor dec or int mov cmpb outsb sbb sbb cltd mov push test jmp sbb mov xchg (bad) and enter mov in jne jnp xchg pop loop fstpt fcomps dec and in add lds lods imul fbstp lods cltd (bad) or pop pop sbb daa rclb pop inc cli xlat das pop mov push in int3 lcall popf insl and gs stos cmp jae pusha psubw in stos xor cmpl es dec sar popa int inc or pop push idivl pop les js dec mov push sahf jle and mov stc insl cmp cli mov or insl pop gs jo enter mov pop add sub dec aaa je repnz pop ljmp jne pop or les (bad) push and jle xor sub repz aam imul push cmp jg loope inc jecxz push ret inc mov ds dec aaa (bad) leave mov test out add push fbld mov adc lds enter cmpsb push sbb cmp hlt addb sbb gs xchg dec ret adc ret cs and pop mov xlat in out push in leave pop cmp stos dec test mov ficom xor xchg es (bad) cmp push adcl adc or jne push out (bad) out mov mov lods shrb cmp cmp or add push push mov ja mov loopne mov xorb in mov mov call fisubl outsb shr loop sbb scas mov xchg adc jp aas cmpsl xchg dec (bad) insb adc shlb or xchg insb mov insl fcoms cmpsb into mov (bad) or out jecxz lock lds add roll pop push mull cmpsl cmp xor test sub inc hlt into push xchg aas into mov cmp xchg add mov fildll or (bad) dec mov sbb inc mov jbe jns mov cmpsb aas or xorl fist jb popf (bad) or adc or inc sbb push mov and adc mov add bound jno call inc pop xor fs dec xchg mov and lock and xor repz test pop repz and inc sbb mov push pop mov flds movsb out (bad) ret mov mov or aam arpl mov (bad) arpl mov jge xchg dec jp popf add jnp cmp inc out movsl jbe or mov pop push icebp mov and xchg enter sbb dec insl sbb cmp lret lahf add pop mov and stos inc inc fstpl lret cwtl addl sti sbb fldenv sti fsubrs test pop push cmp cmpsb pusha add addr16 push orl sub jnp pop pop (bad) js in js faddl (bad) pop orl in in dec jg add xor je lret cmpsl (bad) test bound xchg loopne xor in mov dec lcall ja jle inc lahf lahf imul dec loope fcompl and mov mov mov mov std call inc iret mov mov mov and dec imul jno roll ret dec dec inc pop inc mov out int3 sbb daa mov jmp es inc and cmpsb iret fcoms jb xchg cmp stos xor fisttp dec adc cld imul pop dec (bad) data16 addr16 rcr subl popa ret cs pop imul mov mov pop xchg loop nop jns and mov shll cs or insl dec (bad) xor add insb insb sbb xor bound mov add mov cltd sahf dec pop xchg scas sub hlt lret inc test scas sar add mov inc outsb fs (bad) mul leave jne sub push lret nop fldenv stc mov rcr pop lcall inc inc fsubrs test rorl ljmp push sub mov pop push (bad) int repnz cs mov inc insl mov fwait js scas out mov les mov ror cmp mov idivb (bad) mov aam pusha inc add jb push xor test push and into inc getsec lods ret lea lret aaa data16 lods incb sbb (bad) je pop xlat movsb rolb inc dec or and es out pop jecxz (bad) sub mov pop movsl cmpsb mov xchg cmp bound shr or int3 push adc sarl les dec xor pop pop xor pusha or negb mov cmpl or sti ds clc dec mov testl outsl fiadd std pop mov add xor outsb rcr and lds cltd dec (bad) cs xlat mov stos sahf sub lret or shl fstps pop mov cmpsb mov in lahf jbe and mov xor fadd jns movsl out mov fwait push leave mov dec mov mov ret leave into pop dec push cld stos mov and lahf jo fist cmp sahf mov and pop fs mov daa push xchg xchg lds mov mov mov or nopl cli pop popf popa adc sub and adcb cwtl ret scas sub dec enter (bad) sti adc jp xchg cmp lret (bad) xor push sbb (bad) and add iret clc (bad) in adc call test cmp pop ror or loop cld mov sarl pop outsl ljmp shll roll mov ja push xor fs cmp aaa cltd popa push adc mov sbb cs adc (bad) aad dec xchg popa int3 fildll push es adc in adc imul rorl jno cmp push fnsave sbb jne mov adc lock (bad) dec cmp adc andb out mov repz icebp push jl test stos repnz test xor xlat frstor (bad) mov rcll pop int push aas mov ret enter inc xlat int3 cmp push xchg mov ret adc pop addr16 mov jge mov dec jge addb imul mov add mul repz mov or insl bound mov out cld aad lcall xor fsubr jl xchg loope xor jo ret aam mov out mov movsb push or ljmp add adc sldt bound clc mov out jmp out add mov xor xchg and cmpsl and cmpsl addr16 test js xor xchg dec arpl dec icebp lds data16 rcr sahf mull enter jle and scas fimul ja cmp inc mov imul push xor fidivl mov aas iret mov lret pop adc leave (bad) scas ds add push inc rcl mov adc mov sub sub dec or out lea call push and and sub push in aaa push jne (bad) dec loope sahf mov cmp fmul cmp mov sub pop mov nop inc and in sti punpckhbw stc int3 (bad) add mov mov mov add and or pop ss lods inc inc sub sahf rcl clc fmul sub out push dec out int jne (bad) dec std mov sbb (bad) sub mov int inc inc fistp sbb mov push push pop out sbb push cmp add mov loop sub fidiv pusha push adc push pop enter sbb dec outsb or mov fcom mov and call shrl rcrl jne jge lahf or dec (bad) sub (bad) ret pop cmp je jo loop jno jmp jle pop jg lahf hlt ljmp es push lahf cmp mov push jmp add add adc cwtl ret cli shr mov xchg cltd and outsb xor lcall pop adc (bad) (bad) mov mov scas mov pop in dec (bad) dec (bad) sbb pop dec mov imul rolb sub sbb push fstpl jp insl ffreep notl mov nop lcall (bad) enter dec and xchg xor mov xor mov dec cld sub inc into int imul mov xchg jecxz dec sub test jl sbb in pop aad or cld (bad) xor dec xor aaa push cmovnp fcomps xchg mov push dec js push int movsl imul jge aam loop sbb jae jg sub movsl iret dec sub test add push call insl ret movsl sahf xchg add clc dec bound mov or adc clc jbe add pushf add inc mov pop pop add movsl sbb leave rorl jnp pop sub fisttp in cltd jne call adc iret in xchg jns cld mov jae into clc push push sbb dec and push ja inc sbb sub jo aas fldl or sub jmp cmp xchg cmp and (bad) sub jo sarl int3 push or rcll es add or rcrb xchg cwtl out insl sub cmp push sub xor dec sarb xchg les mov push sbb adc sbb rcll pop cli iret push (bad) out push dec push push lret addb test jno inc mov test inc sub xor ja xor fnsave lea push xchg outsl testb stc cmp repnz lds mov and and hlt dec xchg inc add das pop int3 shll in ret add xlat (bad) mov lods cmc jnp sbb cwtl fwait add lds lods lret mov adc jno ds popf stc sub inc popa outsb pop mov fcmovb pop pushf sub add fnsave adc xchg push pop jnp leave std aas mov cli cwtl arpl inc xor call mov not cmp dec mov js ja cmp add (bad) mov aaa pop pop and test pop add andl ficompl cmp push ficom jnp ss mov cltd stos xor adc in daa test adc inc and or add lods xchg jno pop inc mov ljmp and rep lcall sbb rdmsr dec into fildll icebp pop ret xchg add adc or cmp cmp xchg in (bad) lret mov popf push adc lds or ja jp mov add fildll (bad) out (bad) xchg jnp ret js,pt mov sbb cmp cmp gs inc adc outsb adc mov fmull ljmp xchg inc and mov ss cmp pushf dec xchg adc jae dec pop sub fisubl in adc sbb push (bad) xlat sbb (bad) in sub ret mov ja aas jle cmp and jecxz inc mov test (bad) dec mov rorw es adc mov dec mov mov sbb push cli (bad) scas xor and ret pop cmp mov fstpl mov adc dec pusha lcall into sub ds mov or fs xchg cmpsb ret test dec xchg inc stc out bound jecxz aaa arpl rolb cwtl and push jne xor fidivr hlt mov sbb ret fnstenv inc movsl sar jo cmp out cmp out out ljmp xor aas jnp mov ljmp or and add call and cmpsb add or mov repz ret imul je repz sti or jecxz stc sbb and mov mov mov push add mov inc xchg icebp sbb ljmp or orb dec push fiaddl sbb test xor mov mov cmp loop mov push and jbe lret mov ror jmp in dec sbb out inc out mov xchg fiaddl mov lret jbe test aaa dec je pop cmp cmp orb jge xchg rcrb lcall fldcw cmpsb imul cmp dec jge pop xorl not mov inc mov ret xchg mov mov sbb pop dec fnsave gs push pusha add lea dec outsl icebp mov pushf dec pop adc pop and (bad) leave sub mov adc loop scas jmp mov mov sbb jne jl sub pop js (bad) idivl and mov pushf xor andb lret mov out icebp cs xor insb in sahf pop loop aam or shrb mov jg cs xchg adc mov fldcw pushf sbb mov xor inc fildll fwait sub into loopne cli push negb movl pushf jle mov jmp mov adc mov mov popl cld add mov pop mov je dec popa push cmc cs dec jecxz sti sar jb lfs aaa xlat mov mov cli fild xor (bad) xor mov pop imul dec (bad) (bad) pop lods add pop je es int shrb outsl fstp int nop pop jbe leave add jns outsb push jb dec das ljmp std pop hlt adc adc sbb or sbb ds (bad) mov dec inc imul dec push mov outsl cmpsl xor and lods xor push jnp ja mov mov xor fucom pop fist fsubrs loope test hlt jne mov ljmp addr16 inc xchg push xchg pop jb leave or dec ja cmp add xchg daa or inc pop cwtl stos je cmp ja outsl shrb xchg jns andl or mov xchg push cmp outsl cmp mov mov out orl aaa push sbb fwait js jns xchg adc addr16 pop sbb xchg test inc jo sbb xchg fbld leave in mov xchg mov movsb push jo adc mov popf mov cwtl xor cmp movsl xchg aam out pop mov data16 (bad) test das push and dec xor sub xor ret jns sub cmp xchg in pop fwait je mov sbb inc imul mov xchg fist sub sarl aas jle sbb mov dec mov popa pop pop mov int3 cmp and jp pop lahf mov sti or repnz adc mov mov inc xlat and mov scas shll fisttpll pop (bad) push pusha inc adc add pop jnp xor into jge mov or push insl rep repz inc imul mov (bad) fcomps jmp or mov shr inc int3 push push fisubl add stos mov xchg mov dec pushf dec mov mov xchg cld cmp adc or push mov faddl push xchg cmp or es pop int3 aam push ljmp (bad) cltd pushf lods stc add imul mov insl pop scas mov jmp xchg lahf das mulb insl push mov xlat pop (bad) sub mov loope mov int3 jne (bad) push sti aas fcmovnu es or push insb inc std sbb mov cmc xor sbb push mov (bad) imulb dec (bad) push les mov lds mov into mov cmp aaa das aad push shlb mov ret jo lds pop push cmpsl enter dec xchg mov push clc lods cli xchg xlat pop test ret mov pop dec inc add push or mov test nop push dec and leave push imul xchg lahf push and or ds loopne push cmp int and (bad) jae mov lea fimull jnp adc sahf xor sbb sub sbb cmpsb push test lods ljmp cmp xchg mov sbb sbb push scas xor sub (bad) aas mov ret rorl jecxz cmp sub inc xchg sub mov cmp in cmp mov call rcll scas adc data16 cmp mov xchg adc daa mov adc testl sub dec or outsl into mov cld stos mov jo fnstcw or (bad) sbb stc mov lcall lcall add and cmp mov stc fildl sub out cmp cmp fucompp enter and fstps push dec dec in xchg js test hlt mov fcompl ret dec mov cltd lcall int cli scas ljmp lret mov mov dec mov sti inc das mov ja dec stos lea or mov scas xchg in inc cmp (bad) push mov jp insl mov dec or cmp cmovo repz cli movsb (bad) enter pop xchg adc (bad) jnp out mov test push repz adc and mov push (bad) xlat repz mov push xchg xchg dec cltd and jb (bad) (bad) ret sbb sahf push mov push push mov inc stos repz and push inc fidiv pop (bad) xlat fs sub mov cmp push je popa and fstl xor and faddl sbbl and mov frstor inc in mov mov sti out call in lret xchg lcall nop (bad) divb jp (bad) fdivrs xchg stc add movsl and cmpsl push dec popa imul enter outsb jo pop cli imul xlat out dec mov jp or and jae bound cmpsl push mov nop dec icebp lock jb cmc daa aad sub loope outsb jbe mov je pop mov lock and and push std add jno mov adc pop ud2 cmpsl mov dec xor jge xchg ret push inc into jns adc movl jecxz jge inc clc sbb outsl inc or inc xchg pusha aad rcrb xchg xor add scas mov mov jns and sub inc stc stc push ret ja dec data16 mov fstl es or xor add mov (bad) es xor lcall pop mov lret xor sti add pop jae mov fldenv frstor fucomi out xchg push and insl mov sub xchg movsb in push or stos add in mov je push sbb pop sbb icebp loopne imul sbbl pusha pop (bad) out jo (bad) icebp mov (bad) shrl rcrb and xchg cmpsl sub mov sub insb inc xchg mov outsl add into rcll decb rcrb jo out adc test ljmp mov loopne gs (bad) or sbb ret incb sarl fnstcw push xchg rclb sub fimul xchg rol ficoml jo fisttpll xchg mov int sbb xchg repnz daa pop pop sub fistpl mov shll jl stos mov push ja mov xor movsb sbb ret mov xor mul out cmc incb outsl fmul xchg js cltd pop mov aad (bad) and add dec (bad) xor rcll lret sbb fidiv cmp dec cmp inc sbb cmp std cltd adc aad add pop cmpsl mov movsb popf pop sti ss lock mov adc pop rcll stos mov sarl xor arpl inc (bad) jae cmp sbb mov cmp shrb maxps imul xchg addl and xchg imulb stos fwait loopne lahf pop je fisub dec mov test inc mov into xchg pop push dec shl lret sbb or test dec aas test movsl adc push testl mov mov std cld (bad) testb push in cmpl cs xchg sub (bad) jns stos (bad) jns test sub (bad) je xor subb (bad) pop pop jl out leave test adc les pop xlat aam outsl push sub xor sbb mov lret mov outsl mov (bad) push cmp sbb and cmp fstl pusha mov jmp inc mov sbb neg scas in insb jbe jecxz mov add or fsubrs jbe jg sbb pushf ret test inc pmovmskb pop jb cmpsl cld pop xchg out (bad) fucomi pop xchg (bad) xchg mov sub xor dec out jg jnp rcll bound cli das (bad) xchg imul or cwtl mov adc sbb push insl mov jmp pusha push (bad) jnp leave js cmpsl movsb fnsave ffree movsb or scas lahf push imul mov push lcall xor outsb rorb jg std xlat jp dec adc jne movsl addr16 fistp add es xchg fadd mov cld cmp mov dec leave adc and mov loop sahf jmp jne ss inc jnp ds popa inc mov nop xchg jmp xor faddl push stos push xor mov repz nop sti sti mov xor test jns ljmp sbbl mov out addr16 xchg cmpsl imul or negl fwait xchg dec lods xlat jb xor sahf sti inc les push pusha jle push xorb ljmp fldt imul mov hlt xchg mov jns scas cmp aaa repz fild leave push sub sti repnz jmp cwtl dec test or xlat mov pop mov sti pop lods sbb lcall mov or mov adc jmp mov and jnp dec ja lea xchg and pop ja pop daa adc mov ja aaa std test jl dec outsb inc push out adc arpl and inc jmp pusha xchg mov shll mov cmp leave push pop test xor add cs adc (bad) cltd mov ficomp les jp or and push cmp sub push sti sub test bound inc ret push lea add push outsb outsb test ds ret and pop in inc and fistl push sbb jo cmp bswap loopne aam cwtl loope dec jecxz data16 ret push jmp push cmp lods jae xor (bad) and mov inc jb pop divl fwait cwtl lahf lods xchg sar mov xchg call xchg mov jbe outsl faddl sub insl decb dec add mov imul push xor jl adc rorl mov push out hlt stc aad fidivr (bad) repz pop popf cwtl outsb cltd xor sub inc xor lods push mov mov fisub (bad) ret adc sbb out inc or and inc mov sbb call mov mov rcrb (bad) aaa aam push or jae dec lcall cmpsb pop xchg mov sbb cwtl daa fwait cmp xchg mov aam (bad) leave adc inc xor (bad) mov jecxz fcompl add jns loopne jns push pushf sbb add test jb cmp or mov or je sti sbb repz outsb cmp xchg fdivp cmpsl (bad) rcrb mov jb mov mov fs add xor insb int mov jae adc lret push test cmp cmp fdivp gs xchg mov cli ss mov adc mov push xchg pop in aaa jno test add cli cltd sub (bad) std push addb cmp xchg jge iret shrb inc std push icebp and rol mov mov mov jbe cmp mov jle outsb fucomi (bad) xlat or cmpsb mov xchg sbb jne add cmpsb test rcl jp (bad) jno movsl mov call jb pushf (bad) lret dec add add adc add mov dec and dec xchg pop (bad) cltd (bad) in sbbl mov sub add rorb test mov push or bound pop int xrelease push enter in lods adc subl rorb das (bad) xor (bad) sub test xchg xor mov push jle pushf stos mov roll iret add jne mov dec mov (bad) push ja mov add outsl adc rorb push sub rcr pop in and jecxz jno sti or insb in xchg mov adc jbe cwtl insl sbb jne je inc or sti mov aam shlb scas mov orl aam scas mov aaa int3 gs sbb cs pop cmp sarb rorb lock mov xchg js mov enter popf movsl jae xchg pop jl cmp pop loopne mov xorb pop test (bad) loope cmp push addl pop xchg mov out outsb test lds int in out (bad) xor imulb int cld push adc inc outsl ficomp pop int3 jbe cmp push outsb cmp pop insl bound push cmpsb mov xchg or orb mov cs iret xchg lea and cmp fcmove std dec mov pop jb aaa inc dec or scas sti or add jns repnz or jge sbb jl push pop cmp movsl sahf jp lods adc repz mov pop xchg lds cmp sub (bad) out and add mov push das xchg push orl push imul mov pop testb and push or idivb pop push les and dec mov adc cld or enter or ja fcomi iret add lea mov movsl mov adc outsb and cmp fsubrl repz outsb mov and stc jmp outsb xchg pop mov add sti inc les xor adc push mov xor pushf mov cld mov and (bad) mov cmp mov in fidiv addb jno out ljmp xorb add or cmp (bad) cltd inc repnz mov pop loope mov pop jle repz in sub and sub pop test xchg mov inc lret push jae clc sub xchg movsb xor daa (bad) repz clc dec or std (bad) adc pop (bad) hlt ljmp sub int int adc addl or out jecxz rcl sbb or sbb jmp mov pop lds jg cmp push in mov mov mov xchg add cmp loop dec push test mov xor lods test insl sub imul test sub inc movsl lods pop enter push flds movb or adc mov les aam stos mov mov pop (bad) scas xor jmp test enter mov add and dec inc stos test fwait mov dec mov dec cmp (bad) ljmp push lret cltd test mov push fwait push arpl rorl dec vpextrw lds and xchg rcrb pop cli cltd out jge mov xor lock adc lds xchg jle dec dec idivb fmull hlt or addr16 add or pop and in sbb jmp xor jne imul test and gs mov fstpl dec xchg dec sub inc lcall (bad) mov and mov cmp shrl jnp idivb and aaa xchg sarb aaa mov xchg gs pop mov sbb jo cli sbb sbb xor sub xchg jo stos addl fdecstp arpl out (bad) out dec add xor mov (bad) jb sbb movsb pop enter pop dec sub fs cli sbbl rol jmp and mov lahf ficoml fstpl xor ret stc lods shr and push cld mov pusha call (bad) (bad) std cmp clc jnp dec jnp adc daa mov loop aam sub jo inc push cmp pop cmpsl lea je stos mov adc es and mov (bad) rcrl test jns adc cmp sub fidiv mov jo jg outsl sub lds mov pop lcall mov sbb nop and mov inc adc loope lret ret ret popa ss daa jmp insl aad fbstp adc inc sahf enter jb insb sub mov cmp cmpsb and jge dec or inc mov rcll shl cmp testl add dec (bad) dec jnp shr adc leave sub add adc lahf iret arpl frstor scas inc popf push nop sub and pop lock gs psubw mov xor lcall add and addl jb mov or cmp hlt dec jbe lahf xchg jge repnz mov aad sub cs lods adc mov push mov pop sar mov movsb fldenv push mov std push and push pop xchg mov mov dec cmp xchg cmp inc and and or outsl inc lahf jle add and xor mov lret dec dec lea jae xchg pop xor xor repz int lock es rolb push push movl fmulp les pop mov xor or sub les and add outsb cmp lret les addr16 popf push jns mov loop scas inc mov mov cmp fdivl add nop xor jae shrb mov cmp push (bad) inc push icebp jae cmp cwtl sarb cli repnz fidivrl sbb xorl lcall and js,pn lock cld fldenv cmp dec fnstenv in movsl enter adc es daa in out cli mov pop cmc push mov movsb hlt lret mov (bad) fnstenv adc dec fidivrl sub adc push or movsb out fisttpl adc out repz shl inc mov dec mov dec push aaa mov popf jmp loop xchg push push mov inc sub fdivs mov iret out lahf out inc divl mov and pop xchg les imul (bad) rorb inc cltd push and push pop pop (bad) mov mov popf cs mov stos les pop jno pop in mov test scas mov add fiaddl aas rcrl cmp sub imul xchg mov push and (bad) test push or adc lret bound xor aas sub and sbb pusha xchg sti lahf rcrl cmpsb and or nop dec xlat in jbe xor cbtw fadd cmp fist icebp cld pop or inc dec je inc jb push jl or mov faddp out insb fs xor ja cmp jmp inc pop mov and test sub jo ss adcl mov (bad) repnz sbb cmpsb mov leave dec into out mov mov pop in pop mov dec loopne xchg dec cltd inc pusha and movsb call sarb bound or movsb sub or enter cmpsl fxch add fdivs fdivl inc pop mov add lds push and pop mov data16 out dec rorl leave movsb js pop fsubrl inc enter mov (bad) mov roll or (bad) pop jge scas push dec push sub xchg xchg inc fimul lahf test jl sub jle xor outsl jo cmpsl cmc pop test pushf xchg test xchg cmp sub aas (bad) aas dec or mov xchg push negb das jmp push lods cwtl mov push add stos mov pop inc sub mov cmp push mov or and lock loopne sar daa in iret nop movsl rcr mov fisttpl imul ja sahf out or add mov xchg cli dec mov popa xchg xor and in repnz mov dec (bad) lcall dec cltd fistpll mov cmp xchg and add les sub push add inc cmpsb fs mov xchg fsubrs adc outsl pop ficompl add sub leave daa cmpsl push imull or dec jne stc lcall inc mov sub lcall outsb je add das and dec jge sub movsl faddl add dec insb idivl or dec xchg ret xor adc cwtl mov sbb call rorl popa inc insl jae (bad) mov imul data16 aaa popl and sub mov fmull mov cmp cmpsl stos cmp push aaa pop add adc mov es xchg mov popa dec xor mov xor icebp dec inc call inc lods jl and ss imul ljmp and call cmp cmp insb or inc test mulb push pop mov jbe mov aam (bad) lcall inc or adc cli (bad) cld xchg and lods (bad) and mov or repnz sub and sbb xchg and outsb fwait mov mov clc insl pop lods sbb mov dec popl daa repnz stos lods mov js fisubl fs test mov sbb or fs sahf les sub rorb popf outsl js or rol or add out in add clc lret mov aad mov dec mov xor stos divl stos add adc nop insb adc cld mov call sub jo cli adc arpl pop (bad) jns push dec fistp cmp dec jl sbb pop pop fwait decb stc xchg xchg insb fisub jg pop mov aad push mov dec in or jmp sub aam mov hlt clc int3 xchg std negl shll inc mov in lods int3 (bad) jae int push push jg sbb ret mov or or sahf xor and push xchg inc xor sub aam daa mov jmp add push sub shlb shr in dec out fcompl scas cmp cmpsl std pop cmp push push adc daa add inc loope outsb xchg sbb call and sub mov mov cmpsl sub pushf mov jno push fistpll mov iret mov fcmovu pop mov jg nop mov mov popa into mov sbb arpl sahf das jge cmp mov out loope lods xchg (bad) lods movsb xor gs push mov mov mov daa imul aas push pop int3 and (bad) sub pop jno ss sbb xor in pop or jp push ds inc fisttpll subl clc in xor mov ret in push adc adc mov lods test (bad) mov pop loop out hlt loope push dec push push pop and add and test push leave add jns insl lds sarb xchg pop ss fimull add sub xchg mov xor or and mov bsr inc rclb jae lret and lods mov mov sub pop sub dec fs les mov push stos cmp jl and insb sarl and cli pop inc pop and sbb push mov mov dec xchg aas sbb into (bad) sbb into ficom add inc fcoml mov (bad) std jnp mov test push push push add rorl sub fcmove in lods cmp scas mov roll jne je clc sub out icebp inc xor imul rcrb adcl cmc and cmp shlb sbb xchg push daa lahf fstps jbe in loopne xchg lock fistpll cmp xchg cmp pop jmp mov (bad) pop pusha sbbl ja cltd out stos sbb call (bad) imul inc cltd mov jae cmp mov mov and jae stos lock sarb inc mov cmpsb int js nop lods jge fsts jbe idivl (bad) mov pushf test dec jns in fistl outsl push repz mov (bad) dec pop (bad) add mulb mov mov lods mov sbb (bad) mov mov jmp cmp repnz or jns xchg mov mov pop inc add and jb fldcw pop mov (bad) hlt pop in hlt sub xchg fwait jmp pop push jp or add and mov std mov aas insb (bad) push (bad) mov inc test sbb inc add cmp cmc xchg mov mov sbb cmp add or insb push or pop sbbl inc pop pop imul or pop jns leave ret adc pop jo cwtl iret adc rcl fiadd psubusw fwait add cmp nop (bad) popf (bad) lock (bad) sarl xchg mov into (bad) or (bad) sbb insl mov insb cmpsb sub sbbl mov imulb push je pop adc clc rclb mulb fdivrp lods inc repnz dec sub fcoms mov mov int3 cld xchg cs (bad) dec push out mov push arpl push cmp incb push movsb aas lea fsubrl shlb (bad) out das daa or jg lcall and cmc (bad) dec inc push jp aam mov sbbl push cmp mov cs ffree out push and out rorb inc mov pop add jl inc cmpsb dec aad repz fldlg2 dec (bad) cltd shlb adc dec xor xchg pop fsubl mov enter mov or sbb push out addl into in (bad) in lock rolb imul lods cltd call outsb jg mov add insb sub lcall xor pop mov pop shll xor sub pop js inc stc jo fcomps mov fsub fdivl mov xlat (bad) xor xor dec (bad) jno cmp ret jl (bad) loope cmp mov pop mov fcoml sbb rol fmuls add pushf sbb push jle mov outsb divb cltd ret xor xor lret sbb sbb mov test cwtl ja pop pop pop adc mov (bad) in popf mov (bad) pop aaa aad outsl cmp dec push add add stc ljmp xchg xchg in dec (bad) mov das movsb cmp idiv xchg add jmp dec jge jl adc inc dec mov out jne repnz mov fsubl jnp push decl mov outsb iret popa xchg add stos mov out jle popa cs mov xor push into and je and add add dec clc cmpsb rorb iret (bad) adc dec outsl add and cmp xor xor mov xchg add push in clc pusha jl mov dec or scas pop jo ret repz xor push pop push adc mov adc inc xor scas xchg mov loop add repz sti xchg mov addr16 iret mov mov outsb dec jecxz lret popf or xchg xchg lods mov cltd inc loopne (bad) in xlat fadds orl (bad) ja icebp aas outsb sti jecxz pusha repz dec lret xchg jg and xchg cmp cmp stos sub mov aam mov sub icebp sub in fucomi sbb mov mov das cmpsb loop scas fildl outsl xchg lods addr16 push aas or insb xor mov test sbbl mov mov movsl loope mov mov out (bad) jmp xor sub inc rcrl sbb shlb je scas jp inc data16 mov sub imul ror in call dec push sub mov fcompl ljmp jl sbb sbb and scas xorl pop ftst das jge lods mov push push jp das pop lahf xchg jle fcompl or mov sbb daa dec mov adc shll lahf (bad) sub rcrl (bad) mov push out cld adc stos in fs add mov clc out test lret imul and outsl sahf dec jae in add inc lahf sarl push mov aaa push jno cs out dec (bad) jge push mov popa mov cmp xchg in arpl and and out cmp pop (bad) cwtl (bad) jae mov add aas (bad) mov in xorl cli jae adc sbb inc xchg sub pusha fimull out (bad) pop aas jb or int3 aam lret loopne xor ss jne xchg mov aas mov imul outsl ret xchg mov inc ljmp arpl push xchg (bad) idivl repz cmpsl addr16 icebp jg pcmpeqb mov dec jbe xchg jno or repz decb inc mov pusha mov jge sarb add loopne int bnd add push enter adc lods inc inc nop std jle icebp lods mov add and mov in pushf std inc push mov aas mov inc inc and and xchg cld pop les cmpl cmp adc xchg push mov xor out mov push in mov icebp repz push inc xor jle jb cld pop subl lds and pop jp loop jo fs pop cli lock cs sbb sar fwait jo mov sub mov mov mov xchg outsb mov inc sbb loop mov ficomp pop in jmp xchg loopne (bad) or fistpll sbb xor or add (bad) jle dec xlat jl cmp stos mov in sbb icebp lea lret aad mov push addl stc pop loopne,pt mov jae outsb es xchg sub inc push ljmp icebp pop fisttp dec repnz inc scas push mov cmc mov sti push in pop repnz (bad) mov push jle jo out insb xchg test jo clc out lods jmp cmp cmc mov js imul das pop mov or sub movsl (bad) sbb gs or popf jge daa push fisttpl cwtl xor push jl cmp popa mov mov fs push ds mov fimull aam mov add sub inc sbb sub cmp and push in fwait pop ret test pop rcrl mov lods sub shrb cmpsb iret cwtl rcr out mov add imul push mov add or idiv and push (bad) repnz imul mov sbb aad and dec out adc push push or sub add addr16 pop lahf scas loop push jecxz (bad) mov in dec cmp js popf sub fwait lds mov add push add aam ret mov pop or dec fsubs int mov xchg and test cs mov push push int dec xor jp or lods lock jecxz,pt sbb lods cli aaa mov add adc ja cs cmpb adc push loope gs dec pop xlat mov cs daa lods push imul je or loope int3 leave sub xchg pop imul cltd mov cmp repnz sub lods jle lcall inc or arpl jae cmp test pop pop and mov (bad) dec fnstcw add test dec out fisttp in mov out out mov out aad subl sbb xchg add cli or (bad) sbb cld or mov in iret fsubr test inc mull gs pop cmp adc xor sub xor jae push loope outsb inc aaa popa mov ret xchg mov imull pop jecxz sbb sbb repnz and inc mov or inc sub rorb aad mov and inc jg push inc les or xor outsb (bad) idivb aas xchg inc jp movsb lods push int3 mov cmp cld jno cwtl cmp (bad) xor inc mov (bad) adc adc stc push push cwtl pop sub pop adc (bad) scas movsl imul sbb xlat mov lahf push mov dec jno mov sbb cwtl inc into mov inc inc out je out cmpsb jae (bad) or stc sbb arpl rcr pop inc fsubrs mov pop push das adcl hlt mov pop (bad) fwait xchg jo xchg shlb into jmp pushf mov and xor adc inc das add jnp fmuls loop fsubp jae jne jmp loop (bad) mov imul sub inc sub insl push pushf mov lcall lea ficom mov mov xchg idiv arpl sbb test subl mov lahf sub adc test rcr mov sti or out (bad) fcmovne mov xor call sub in mov mov jnp popa mov mov lahf mov daa push push jecxz inc cmp in lock pop cltd mov lret xchg xor pop mov add call or dec xchg mov lock call lcall subl ret jmp mov xor les sub cwtl cs dec xchg aas xor adc jl out fcmovb fwait xchg daa in stos (bad) jg mov mov repnz jl push mov push test xchg pop repz divb test loop sub xor popf out je fucomip xchg cwtl pop clc lret not pop rcll out or xchg push into mov aas pop add dec jp dec rep outsb adc mov mov xchg in scas sti cltd dec decl ljmp gs in repz rolb push xchg mov cmp xchg negl sub ss mov push ret mov dec add xchg xorl mov ficom (bad) push mov jecxz sub loope insb pop push jo adc in outsb fld out movsb lret scas pusha rcrl nop add or ss loope daa shld xchg jno fs cli cmpsb fsubs iret inc mov popf leave mov sub (bad) pusha fs mov popf out icebp mov add subl ss pop push ss addr16 jno add push pop fwait and cmc inc ljmp xor mov cmp jno inc je add pop call into ds (bad) repz inc sub and inc lods clc daa shrb je in popa fwait test sub pushf mov test inc popf add fs sub jmp arpl aad adc jbe (bad) ljmp daa add (bad) in cmpsl sbb cmp idivb paddw mov lock xor pop fisttp xor sarl addr16 adc bound and sbb mov pop cli (bad) mov push dec int3 fimull imul or ret fsubr pop insb movsb (bad) (bad) pop rcrb imul jae aas xchg in cmp pop sti adc xchg push dec push mov cmp xor xor xchg insb push sub cmc sub lods push mov push and add and mov jns dec dec in mov sub add jnp pop fnop push sbb rorb adc fwait add mov adc clc mov pop loope adc or mov aad push (bad) push jle mov sbb mov iret insl jg sarb test rorl cs ss inc mov push jge push and fisubrl sub push xchg lret mov cmp and sub xchg mov lret sub xchg add fdivl cli rorl and scas xchg and adc mov xlat mov xchg lods movsl in rorb lds push mov cmp repnz dec jb adc int3 lret jno mov je movsb sahf sub push sub pop outsb sub pop and mov test and inc pushf xor jb xor mov mov push pop mov sub mov adc cmpsl call cmp icebp cltd das es push (bad) xor jp repz pop lock shrl insl or lcall enter jnp xchg jg cmp inc mov pushf rclb out mov sbb (bad) lcall scas mov fsubrl mov imul mov insb clc add or adc jo push xor ficomp incl int3 ljmp popa jp arpl xor imul inc push call (bad) dec repnz inc xor add xchg push dec cwtl pop jecxz push mov pop lea xor mov jne iret jnp les mov mov mov lods rclb jmp push xchg sbb sbb mov pop jnp stos mov mov fdivrl mov inc sbb pusha dec jge jae cmp or (bad) icebp cmpsb adc repz add loopne mull (bad) std shrl je addl sahf ficompl jge add pop (bad) je fcomps arpl adc pop sub fisttpl pop xor dec xor cmp cmp lods jmp inc add les lods sbb and imul sti xor daa test mov fwait lret pusha inc js xor xchg int3 inc addr16 sub dec cmc xchg out fcmove pop add xor das mov scas je nop or xlat add test jmp push push lds mov pop lahf mov and jl outsl add dec cmpsl enter jp mov mov (bad) and loopne dec js in push insb xor xor jmp lea loope sub mov xchg repz into int in jo jmp (bad) fiadd hlt lret dec aaa fcompl shl lret sbb dec mov enter sub push outsb lcall sbb ja movsl sbb xchg mov jle stos inc fmuls and xor xor int pop mov std test xchg out mov aas mov push movsb lods mov rclb jnp dec jg mov and adc xchg push loop fnsave push push je xchg mov out cmc in repz xchg lret push (bad) loopne idiv or or add fwait rol (bad) lcall dec cs popl add aam push or mov xor dec xor mov inc test out rorl sub xchg jns icebp repz in or jb ss inc sti stc scas movsb push xchg push movsb sbb (bad) dec and cmc sahf xchg adc xchg test pop repz inc sbb sub add into add pop xchg push sub out into xor add ret mov cmp adc out aaa add lahf fs les push push in jmp lret cli xchg ljmp jo push jb jmp movsl (bad) jne push xor out cmp dec nop or push out dec sti jge mov fmull lods inc enter aam cli adc sbb cmp cs xor push sub sbb adc outsb mov xor cmp fistpll xchg xor cltd xor jl adc enter imul lcall xchg dec cmp cltd push jmp push adc xchg pop test hlt sbb mov xor pop xor and mov xchg insb (bad) scas mov pop push push and sti push sub ja or xor (bad) xor mov and dec stos aad imul cli xor cmp pop rcll jno jnp sub fdiv loopne jo cld rclb jne mov jmp mov jmp sbb mov push mov (bad) or insl xchg or sbb inc jg xlat mov into and addr16 and fdivr and mov adc lcall or mov push pop inc sti jmp mov jmp pop call in push movsl (bad) mov jge outsb or dec aas (bad) faddl sbb mov jbe les inc mov stos sarl pop or add dec add push jnp pop mov adc mov dec adc repnz and inc jmp pop mov mov pop push and adc (bad) mov jbe mov (bad) jl int ret (bad) mov aam leave (bad) xchg xchg lcall (bad) mov nop pop cmpsl dec sti loope fs nop shl rol and int3 mov mov sbb pop (bad) out dec testb xchg or imul jmp sub fiadd fnstcw (bad) jbe cmpsl clc ret mov add loop int jne jmp and and add and sub (bad) aas push or call cmpsb gs sub das sbb lods jp ljmp and and or mov sbb (bad) jnp (bad) mov fist lret sbb fsubs dec pop push mov fistp scas add sub out cs xchg add test sub fs mov mov movsl mov lock loopne cmp loopne or mov fisttpl movsb mov cmpsb loop push add xchg roll rcl (bad) dec lods adcb lds adcb les pop jb dec and aad jl jbe lret in xchg push and enter out aaa jle imul add jne mov and fwait jmp out or aam aas jecxz pop mov mov jecxz or cmp lds cmp mov xor cs pop xor jnp cmc mov push fstl hlt mov (bad) cmc xchg sub xor repz lahf aam sar aas mov fdivl push leave pop mov sbb sub xlat bound cltd in aad jne mov dec mov popf mov push andl or xor mov fcoms xor cmpsl jmp fstpl int3 mov sub stos fsubrl pop fistp mov or dec lds jbe imul stos jl mov sti and ds mov aad jno ds inc out out ret les scas cmpsb or and arpl fdivrs hlt xchg sarb iret sti jmp in xor and in lcall ja std add lret int mov (bad) pop shr mov andl in and jmp add (bad) loope mov rorl into pop add lock ljmp popa xchg addr16 ja sbb sub rcrl bswap fs fwait xchg adc out in adc xchg in push lahf bound data16 mov cmp stos iret sbb mov andl sbb mov enter push push insb pushf in cmp out ja jp sub loope dec aas cmpsl cmpsb sbb push fdivl add iret cmp stc mov flds ds sbb xchg pop lds aam fsubrs mov ja inc inc mov mov or sub test mov and sarb ljmp mov (bad) insl add sti jp inc in je jne add lret or jno (bad) fimul pop mov inc cwtl in jmp repz mov jo out pop (bad) jl jns jg bnd push push pop jnp inc in test shlb mov mov cwtl xchg cmpsl paddq xorb cmp dec test jp jg rol es jno mov lret mov iret fnstcw jle cltd cltd in push push and jl jbe clc mov mov mov sub cltd push fimull jle inc loopne xchg ss ret push scas fsubrp cwtl into in dec or and test jo sub mov mov rclb lcall inc sub push inc mov add pop xor cmp stc pop inc outsl daa mov jp jmp in leave je out shrl out xor jge or insl adc adc test fiadd in push not jecxz inc cmp xchg jg loope inc (bad) xchg pop sub ret mov fs adc inc lret loope fdiv out insl sub mov insb sahf push dec aaa inc push mov adc push ljmp xchg mov jge sbb jo lret ljmp (bad) inc adc test out sti jg lock js jae mov jns cmp add mov xchg fimul xor mov and movsb sub mov adc outsl mov pop (bad) cli inc jnp sub add repnz mov push add push mov mov push lcall je jnp mov and and call sub aaa cs mov pusha loope mov push in in jmp out (bad) cmp pusha xchg mov aad shlb dec mov jp sti test fucomp jnp sbb mov push out stos and add das cmp add and push shll inc push daa cwtl cmp mov sub icebp hlt call or cmp pusha lahf lods leave xchg ljmp subl aad fidivrl inc lea (bad) xchg cltd pop xchg rolb stos mov ficom dec mov shr or test data16 cld inc push cmp fwait cmp sbb pop inc fcomip loopne lods loope test subb lods cmp cmp xor loopne mov dec add push nop pop loope rorb lods (bad) jae hlt std loope pop ds loop xchg inc out jae lgs mov (bad) stc rcrb (bad) jo jb jne stos add sbb fbld add dec cmp mov mov cmp out loop fmul push lea mov pop xor pop (bad) popa imul pop cwtl cmp dec pop xlat mov test inc ljmp jg jb add insb (bad) push insb sti xchg fldt pop inc cltd mov int3 xchg insb and sarb int3 push inc lahf pop pop inc enter mov xor mov cmc mov fisttpll fcmovnbe notb xchg aas xor pop xor add inc add dec xchg repz test pusha fimull or cmp push pop fidivr fdivl data16 pop out add sbbb daa dec xchg jnp int fsubrs xor mov xchg bound cmp xchg out push ja mov mov dec or push cs in (bad) xor cmc dec jle cltd repz std dec cmpsl fmuls ficomp scas mov (bad) in or push imul jne add sbb cmp es dec pop stos call xlat xor pop jmp jns je sbb loopne imul pop jbe jbe jl dec mov mov fisttpl sub ja inc and pop dec js clc shlb js mov leave jo (bad) push mov mov dec jae mov xchg cltd das out cli cmc xlat and into in xlat mov sub sbb jecxz andw mov cs xchg adcb addr16 add pop mov xchg mov daa mov jmp xchg dec mov nop out inc pushf or ja mov push test xchg push sti pushf or adcl xor jmp fistl test sbb test push fcoml test push xchg mov mov nop xchg movsb ret ret inc cli popa popa mov mull xchg jmp xchg inc push add or aas xchg scas lds inc (bad) xchg push lock in popf sub jecxz ljmp in roll xchg aaa or mov movsl orl out and cli pop dec mov sti push xchg jbe push fsubr or roll fisubrl and mov push pop fs jecxz cmp push dec jbe jnp pop jb out or inc addr16 addr16 movsb sub loopne adc xorl in pop push mov xchg pop or mov xchg lds jbe and jp jbe jnp jl or jae xor repnz add rorb imul push push pop (bad) icebp or and iret lret cmp sti (bad) aad icebp mov mov xor aad (bad) imul repnz dec mov arpl inc hlt pop jp dec ss mov lcall loopne xchg xchg cmp adc mov test ljmp ljmp fidiv cmp sbb and push hlt sub xor mov lea insb leave lock sbb fcoml mov loope xor adc lds lcall scas xchg mov (bad) fcmove js nop std jb push es xor in sub dec fisttpll addr16 adc insl or adc rol dec aad sbb testl pop inc scas fs pop cs jbe icebp pop dec idivl adc outsl movsl mov pop mov outsl sbb outsl xor sahf cmpsl inc mov dec scas in jns sbb lahf jbe push nop push lods mov or cs mov and push imul inc mov shlb in sbb loop (bad) sub cwtl push in adc ret xor inc inc out dec loopne cmp rcrl xor inc pop push repnz mov aas xchg ret mov mov imul push loopne js leave data16 jp in adc test aas jns (bad) loop lods icebp aaa mov inc std lods pop push outsb popa fwait push mov and push scas (bad) jae es push push mov insb ljmp lods in test (bad) or push and clc fimull (bad) mov sub decl add xor mov push cmp imul sbb jbe (bad) cmc aaa fimull push loop ljmp (bad) xor jae dec sub shll sbb es cmp cmp xchg mov xchg xor ja xor jge mov nop push cli sti ja out das leave mov icebp inc inc xlat pop push mov jb xor sbb fwait xchg pop imul mov insl cmp sahf daa iret jb inc iret shrl addr16 jb outsb lcall sub and xchg xor or fsts out xor push lods int adc push mov jl lods push add cmpsb mov negl bound and mov pop inc sbb mov adc sbb sub test add xchg jge or leave imul fstpl inc shll aam lock out adc inc xor (bad) sub int pop push ret loope (bad) movsb push ss lret xlat rclb mov idivl mov stc add (bad) fnsetpm(287 lcall aam xchg cli (bad) aaa inc inc dec imul int3 push cli movzwl jg mov sahf lock xorl rorb mov add fwait and inc mov rcrl inc xchg std jne xchg mov jno push mov adc int push ljmp es nop mov cmp sbb dec mov inc fwait and cld jge adc pop leave out imul ret repnz pop movsb inc mov push aad sub es adc jbe in lret cmp or inc iret inc mov push sub cmp mov cmp mov mov lret mov fs xchg sbb aas addr16 sub imul xor inc repnz mov out (bad) or push js enter xchg pop dec inc jp iret lcall (bad) jae daa mov xchg jp add js jae mov mov xlat jge rorl xor inc mov and push int out inc and jb incb fwait int3 push pop adc out or rorb adc jno mov dec cmpsl aaa xchg mov call fwait daa jmp xchg in push cli cmp dec out jnp jmp jno sbb push cld mov (bad) fs jae sbb adc jl test repz mov xchg adc mov push stos repnz lea adcb in daa jo (bad) aad push or fidivr cmpsb jge (bad) sbb lret mov clc inc sbb (bad) and dec xchg add int3 sarb dec stc repnz fcom cmp cmp stos adc cltd jbe mov sbb push (bad) adc sbbl xor push lea sub mov shrb jbe and stos andb or roll in ret (bad) cmc mov xor or cld int jns jb sub (bad) js dec or ret out xchg pop fiadd in sbb outsb push xchg hlt insb xchg or aam rcrb insb sbb rorb dec cli pop sbb adc xchg pusha mov loope jnp test lds gs push (bad) fisttpll sar cmp (bad) mov in sarl clc inc mov adc inc and aad mov aad mov pop inc fldl nop mov add leave or add jae inc sahf or bound movl dec pop cmp mov out shll sahf cmp imul stos loop jmp aas aad out cmp popl mov xor xor xchg mov aam (bad) insl fmuls pop bound jmp pop lret lahf sbb mov inc jnp test fnsave call gs loop xchg es xchg and cmpsb insl pop (bad) xchg cmp pop imul ja ljmp movsb leave add popa scas sub push dec push mov inc jno xor lret mov sub setge pop (bad) sahf or ss popf mov lcall push gs lahf popf and popa mov cmc xor ljmp insb (bad) (bad) loope sbb jb cli add adc shll sub cmp pop dec mov jg jle inc push mov dec cmpsb jge cmp imul push mov les xor pop and sahf nop xor push jbe sbb and cmp (bad) push sub mov jns adc fdivp lds std cmpsl lea inc inc or pop cmpsb sub fcmovne aam movsb dec adc pop fldl push or cmp jns das adc fisttpll (bad) fbld xchg imul in inc and ja sbb push lods divb mov cld and jl hlt les data16 inc mov inc xchg xchg iret xlat sbbl push xchg xchg (bad) lret and dec js xor inc out aad sbb inc stc out mov inc push (bad) mov sbb hlt xor cmp add iret jle push dec pop xchg xchg jge push push jle mov pushf movsl dec pop sti cmp xorps data16 cmpb daa pop fsubrl ret inc mov xchg and scas ss jl pop insl adc push cli pop mov loope add mov stc xor test inc js inc aam mov xchg cmpsb or push and lods stos xchg inc xor cmc mov mov subl loop ds in xchg pop and mov jmp sbb std or push xchg in mov and inc lods push inc inc inc cmpsb jno or mov jae mov xchg adc std fadds cmp inc push lock imul sbb jns clc xlat cwtl fdivrs inc pop jb cld es ds (bad) roll or out popa aas test inc mov sarb lcall push sub ja aas mov jnp dec ret test scas negb add push mov mov jb bound movsl lea pop popa aad shlb jp dec pop in das (bad) xor fdivrl and mov mov mov adc jge out sbb cs ds adc lret ds cmp push jo imul sub xor and ss dec xorl push or xor lods push lahf sub lods pop mov mov stc mov clc call mov pop jb lods adcl mov bound je lahf (bad) fisubr push cmpsb or (bad) hlt mov push (bad) std jecxz mov cs push adc sbb popf mov popf jl push add jl fldenv inc ret ja in sub cs idiv shrl cmp pop iret std cwtl cmp push cmp cmp sbb out stos fildl arpl or popf mov mov jp sub xor mov sbb nop pop add fucom sub push bound pop sub rolb xor int add jns dec clc mov sub popa test push rorb nop (bad) mov inc and ljmp xor cmp enter xchg inc mov or stos or cmp push subl jg jns add mov sub imul pop (bad) mov jne test mov or jb fwait mov cmpsl lahf scas aam outsl mov pop fisttp jecxz out mov push stc dec mov int jle sub inc lcall push out mov add pop mov data16 (bad) loop push repnz xchg outsb aad jbe out js sbb mov lea add stc daa repz inc lods jns lods aam loope ja stos scas jmp xchg fldenv mov test xchg push daa jns and push and inc xor cmp outsl pop cltd fidiv jl jg xchg adc sub sbb xor sub or sub insl lods fild lcall and push movsb jo jmp scas adc inc daa adc lods push cmpsl dec jg icebp imulb test xor add (bad) call cmpl cltd pop addl push dec push int dec jp mov push xchg out fnsave jno int fcoms fwait mov xchg xchg push test add aaa add outsb dec xor fisttpll and or (bad) push jnp nop adc inc xchg add lods gs xor das pop rep mov cli pop (bad) xchg mov jnp cmp mov test movb dec jno ljmp jb dec push fist fwait insl xor jle adc mov xchg sbb hlt jmp inc jl ret into cs mov and mull jne ss dec jge fildll adc inc pop pop xchg or das js call repz cmp repnz pop pop leave in mov cmp je jo outsb je rorb sub pop jecxz aam push jmp cmpsb inc insb (bad) fdivl or mov adc pop in ss or mov xchg aam pop movsl xor jp aaa (bad) push adc xor mov mov js fist pop fild das popa mov mov loopne xor ret js imul mov ss mov cmp xchg mov (bad) data16 jnp (bad) insl test sub mov add nop int3 xor in xor les (bad) cmp imul outsb and jecxz inc push dec ret mov or add dec test sar lods add mov int fsin cmp and aaa fsub fildl hlt sub aad movsl test pop or mov and cmp pop or cmp sub outsl insb dec dec sbb (bad) sub add test pusha shrb push sbb imul sbb inc sbb cltd adc rcll sti push rclb and sub sbb divb inc pop cmp xor (bad) jbe xchg jb cld mov outsb mov cmovs js mov push test insl into (bad) or xchg outsl dec (bad) sbb (bad) ja cmp pushl (bad) lods xchg cmp and ret insb lcall add das jmp cmp adc je bound push xchg loope insl inc sahf stc jle ja xorb call jno cli push xlat cmp or mov dec mov mov aas mov (bad) stc cmp push push hlt mov push fs dec js outsb and jmp fsts or int negb or pusha out push inc test push push decl insb arpl loopne push jne repz fstps nop add or aad daa jge lcall xchg xchg sub in jne cmp sub pop fadd push cmp push jp xor xchg jg les mov pop sbb popf inc ds xchg enter shrb fldl xchg sbb sbb repnz mov sahf out (bad) imul adc xlat mov out xchg sbb dec pop jne pop push js jne (bad) dec cwtl int3 (bad) dec push dec sti orl stc or lock ficomp cmc rorb pop lcall cld jnp xchg (bad) outsb lret cmc mov sub jno and add adc push ret mov outsb (bad) ja sbb add mov (bad) inc pushf xchg fdivp adc adc (bad) popf sub adc lcall test jmp xor add stos int mov outsl jge xor xchg insb push jg mov mov mov push mov adc mov fs std adc fisttp scas jg pop jb das jne adc push jb mov test add (bad) fnsetpm(287 (bad) in cmp xchg daa bound gs (bad) enter pop imul cs out jp sahf stc imul stos iret repz arpl or int or bswap outsb mov jge out enter sti cmp sbbl xchg add pop push roll movsb (bad) mov xrelease (bad) cli sub jbe or out inc (bad) shlb ret mov pop leave cmc push es or bound adc idiv andb pop mov mov das ljmp mov in xor or (bad) pop push fdivrs mov sbb xor jl fs in sub ficompl out mov fucomp xchg dec cmpb dec out cli dec dec pusha xchg sarl inc cli lea and and xchg sbb mov adc outsb xchg insl iret jmp xchg aad lds cmp mov jge push iret sub jle sbb mov jge push sarl pop (bad) jne shl jns arpl dec (bad) xor sub insl xor mov ds mov aaa add jbe push test push mov daa push sti outsb test push scas lods and xor mov in incl lods popa mov mov dec iret mov mov jbe repnz cltd and sbb xchg out imul test rolb cmpl inc cmpsb ja aad jae xlat ret adcl jge jo fisttpll inc and enter clc js (bad) insl sahf add std scas cwtl shlb mov mov out add jge cmp jmp inc das lock int3 push (bad) into sub pop aad pop and lcall dec shl sbb and cmc sub xchg aas ds loope mul dec add inc in mov push mov mov cli mov cmpsl mov stc (bad) xor inc ljmp or jmp add jecxz repz jmp aam flds inc inc or mov mov sbb jle test lcall mov push pop pushf mov push or test mov repz push or cltd mov stc and add push pusha sub (bad) add ficomp cmpsb insl lock ja push rcl xchg inc cwtl out in cmp mov pop cltd repnz cmp hlt pushf cmpsb jnp das push fwait push in jo sbb nop (bad) jp pop mov xchg imul xor jmp xchg popf mov mov arpl inc mov out aad lock aad or mov push test xchg cmp (bad) inc add repz push mov jo jl (bad) fs mov and mov sub bound ficomp (bad) jge cmp jg mov pusha test js xchg mov fidivrl icebp jb stos or push loopne adc cwtl pop inc outsl xchg cmp movsb std xchg add out jg cmp ret push cmp stc or int (bad) xor fsts divb jnp mov movsb sub lahf mov push push ss xchg mov repnz jmp push jg in int3 rcrb pop test lea jo (bad) mov popf inc inc push cmp pushf cltd inc gs in in aas adc icebp pop dec pop (bad) imul push cmp jmp call stos lret mov loop lahf rolb fdivrl adc iret ja cmp and imul gs xor sbb cmpsl inc sbb in faddp dec adc sub push ret push jle (bad) dec sti loope mov sub mov ret jno inc cmpsl sub adc and data16 or js mov jo and loope leave int3 xor rorl fwait aam xor sar insl adc jle les dec ret out dec mov inc push mov pop into xor call insl lcall jle xor mov bound push inc xchg addr16 jge test jns ret (bad) stc dec sub fwait cli and xchg in movsl je int3 xchg testb aas cmp sbb xor inc xchg sbb pop loopne lahf shrl divb mov loopne push jnp mov repnz (bad) mov int3 lahf jl stc stc imul inc sub push sbb push xchg jb jecxz mov push sub jecxz iret xchg xchg dec stc sub in adc adc out xor xchg mov addl sub mov outsb (bad) int3 and mov nop insb adc mov bound icebp pop (bad) in xchg lahf pusha mov mov (bad) js cmc sbb imul pop cmp add mov loop cmpsl js adc jae daa push (bad) mov mov (bad) cmp sub stc in cmpsb nop scas ret insb stc jp test fadds or hlt (bad) js dec mov xchg in loopne,pt aad and rolb and cwtl add lret movsl or in jb jno dec insb adc int3 mov aaa inc xor xor fsubrl ja adc xchg cmpsb xchg mov out push push jnp adc jo std stc or and jg imul scas data16 or outsb mov inc mov mov push adc shll stos sahf cmp int3 xlat test sub mov lock inc xchg lahf dec (bad) sub xor sti fisttpl or add xchg inc pop jns loop jnp stos out lahf fmuls mov js cmp jns xchg xor sbb repnz cmp pop aad loop xchg push andl push push shrb mov fidivrl xchg sbb xchg mov push cmp into inc call movsb push and in es push sbb lahf (bad) data16 (bad) mov sub cs orl cli xchg leave out (bad) loopne pop cwtl xchg outsb test call js call fisubl sbb and es cmpsl popa sub sub rcrb (bad) popa push ljmp imul xlat pop dec fildl int dec cmp inc sbb xor cmpsb in pusha sub inc mov xchg aaa jbe dec pop icebp add jge js aas pop into hlt (bad) mov out jmp ja jle jg or or repz test and mov xor add into cltd inc dec (bad) jo unpckhps push lock jns fcomps adc insb push aad scas (bad) sti or lcall aam cltd loop mov jns push insb pop push (bad) ja cmp cmc sub mov mov stos icebp loopne pop ss cmc xchg (bad) pop jb mov popa jno xchg subb xor adc or out jl mov and nop stos add pop (bad) js dec sbb jp add jmp jmp outsl cmp mov scas add (bad) popf add popa adc fistp sarb pop jns mov aas lret arpl insl (bad) cltd sub mov fcoms mov push lret jp movsl xchg xchg mov sbb mov push push add sbb test mov inc (bad) lcall jae lods and outsl xchg lds arpl popa stos xchg mov jg jbe mov inc lahf leave cmpsb mov jo mov pop jne clc scas pushf mov jmp fsubp clc scas mov aaa xor clc adc (bad) std pop mov mov stos hlt push cmpsb insb lret xchg ror dec test mov jmp xor xchg cli dec add mov fistp mov mov cmp xchg or jno jne sub sar mov pop fwait ja arpl push (bad) sub add inc loop jle aam daa insl (bad) iret mov push ffree dec mov mov pushf dec sti leave dec mov scas in (bad) loope add pop sub cld pop fidivrl in sti inc je push outsl xor imul cmpb enter xchg mov cwtl xchg daa jns push and cmp push pop push push or xchg and mov add push jp fwait dec xor sbb inc into addr16 jmp lret testl sti cmpsb movb xor test cmpsb push cmpsb mov daa push dec into jns in xor jmp daa or mov xchg gs (bad) pop idivl je scas add add in test add adc push out xchg mov lea stc and ret loope or sbb xor mov (bad) in addr16 orl mov (bad) xchg jl add add mov mov aad movsl lret mov add popf push (bad) pop and or add or ficom mov adc fwait push loop stc mov jecxz imul fmuls mov dec cli xchg or divl push pushf stos outsb add dec rol mov or or mov xchg jmp cmp je jns imul mov push mov push pushf mov leave or pop or mov xlat andl mov xchg iret or dec adc mov outsb sub or stos test imul add nop pop adc scas notb out pop iret jg jecxz add pop (bad) mov adc (bad) sahf cwtl test push movsl lds in lods outsb cmc insb (bad) or inc add xor sbb mov arpl sarl js mov aad imull fwait sbb aad dec enter or (bad) jns loope mov cmp out push adc pop sub test daa iret jo lret mov popa sub in pushf imul cmp scas arpl and shl dec and dec das xchg subb mov (bad) push xor mul (bad) fadds add lods cltd aaa mov imul into repnz cmp insl fistl or mov xchg jno aaa and xchg cld incl or add cld (bad) jnp jmp decb dec jne push aam xchg bound (bad) ja fwait pushf sub out clc ljmp andl sti or in mov push mov out lcall rcrl loope push in and enter push adc test sub jle (bad) push jle and jecxz push pop pop inc cld mov jmp lret (bad) dec scas out sti aam clc sahf xchg lock test es lea ret mull sahf test fs cltd out mov mov scas jno test pop pushf adc mov (bad) ds ror mov sbb dec jo jae cmp sti mov popf inc in cmpl mov rcl inc pop in fnsave add xchg jns addr16 ficompl pop sub or pop (bad) icebp iret xchg idivl out adc mov fmul add pop jo pop idivl and jbe dec xchg mov mov repz in pop or iret (bad) (bad) mov push movq mov sub jl push pop mov hlt out push and mov push xlat add mov int repz lret push shlb hlt cmc push xor lods int3 out add jecxz nop cmp in outsb bound (bad) fild data16 jns das add xchg cmpsl ja fsub lahf fs insb lahf lds scas scas inc rorl fwait push aad sbb inc hlt mov sbb pop jne push movsl xchg or pop cmp (bad) or ds dec xor pop push pop cmpsl mulb push add pop dec scas mov push data16 xor in xchg lods adc mov pop mov add bound pop push xchg push imul xor jae pop gs jb pusha sahf icebp loop sub test stos (bad) mov iret sti pop mov mov repz ret mov sub (bad) je jae nop mov testb (bad) sub sahf (bad) mov loop xchg and sbb sub fcomps push inc jmp cmpsl scas lahf std outsl pop ss adc hlt test jp lret mov jge xchg (bad) dec dec push xor clc test idivl cltd (bad) add mov mov ss insb daa xchg fmuls cmp loop int3 test mov add sub add dec mov sbb ja xchg pop sahf inc scas aaa sbb sbb mov fcoms sbb jp fiadd mov addr16 sub test dec or (bad) mov sbb std sarb jmp popf cs dec icebp leave push je mov xor sahf mov out les xor mov cmpsl (bad) loopne mov (bad) std out sbb adc mull sub xor aaa sbb mov inc mov lahf lea xor pop sub pop cmp cmp pop dec pop inc imul outsl xor test (bad) insb adc or (bad) lock fstps insl (bad) in adc jo lahf aas adc adc (bad) lods je orb mov jecxz pop addr16 outsl sti adc fdivrl pop (bad) mov jge inc ljmp lods push cmp sub popa mov mov push es cltd outsb stos jg neg push and fmuls test lods xchg (bad) mov leave and mov xchg push jmp mov (bad) fstl popa jp mov lock int mov dec add inc dec adc in loope push jg sbb push xchg cltd loope imul popa aaa test cmp fldenv pop xchg dec xor adc iret and fnclex arpl ja test mov xor mull or cmpsb rolb mov lock cwtl das push pop cld jge pop mov out int3 leave mov std imul xchg (bad) mov pop sti mov dec xlat push dec inc and call rorb lret xor pop mov lahf ja jmp js (bad) push cmpsb (bad) sbb cld mov xchg mov add pop pop pusha push pop clc fs popf lret push xor or mov test fs jae or sar call (bad) ja sarb inc cmpsl (bad) repnz sub xchg push xchg dec das mov in mov gs popf mov xor and mov mov push cmpsl int xor std sahf jb jbe imul out scas add movsl push xor (bad) pop adc pop xor data16 jno jp sbb gs sbb mov test cli jb pushf mov add push arpl sub movsl es push es nop inc mov lcall aam xor cmc cli rclb mov div cmp mov sbbb (bad) push pop or mov dec mov stos inc fistl outsl movsb fwait xor mov mov jl fmuls (bad) lds into push sbb pusha mov mov (bad) fidivrl xchg push mov and push or xor inc arpl sub lock aaa aas dec (bad) hlt popf and mov inc inc adc ss xor or add inc mov push lret outsb push (bad) stos loope (bad) loop negb push push xchg xchg test cmp cwtl lret imul adc pop pop mov fcomps int scas xchg in pop iret adc minss iret lret adc (bad) movsb pop fnstenv into stos sub xchg imul mov and popa jbe scas es fwait jp cs jg out xchg push pop pop push (bad) movsl dec sub inc (bad) mov push xor lock in iret jge push mov push pop mov pop xor outsb adc jle jmp lahf std enter out mov loop push lock in and repz fsubr ret and (bad) xlat int3 and in hlt inc or inc lret mov jns outsb clc jl movaps aaa and pushf icebp pusha ja mov lahf out xchg mov daa jecxz inc mov clc pop push sbb or rcrl fimul jae (bad) in test stc lock sub xchg push dec imul aam cmp inc lret int3 enter sub or xorl xor jns sub mov pop sbb push cmovge lret out cmp jo cmp sub xchg out pop cmp test nop jp inc sbb cwtl push mov mov nop in lea ret jg push xchg xor stos jo (bad) out data16 push inc rorl in dec pop and xchg mov dec mov jmp lahf std xchg xrelease push pop cmp adc clc inc push push push add in xchg mov gs mov sbb int3 (bad) cmp cwtl pop gs pop aaa jnp (bad) out scas add cmp ret dec clc add xchg and aad lods pushf mov cmp pop cmp xor mov and and fstl fsubrs addl mov loopne in mov test lahf into aas aaa mov mov xor adc lock mov push rolb test jnp cltd lret xor stc stc cmp in iret jle mov push pop mov ja mov dec jno xchg push out mov rcr aad or push lods fidivl test std or or std das fs or adc adcl xchg sbb jb or scas test add popl inc push idivb fcmovnu cmp mov jno sbb cs sarb in jb mov mov sahf pusha or sarl push and and fiadd xchg test mov stos cli mov xor or loope enter mov xlat pop out sbb cmp fs (bad) mulb add pop xor xor cmc jmp fldt push mov sbbb test sbb push les inc dec mov mov call push data16 inc add fstpt ret dec jns jno add std shrb xchg stc idivl lret fildl mov data16 leave pop add fdivr pop loopne mov inc out or xchg sti cmp fld cmp and aas ret or lret jnp sub cmp jg ljmp sub out mov sbb pop pop or cmc inc lret xchg sub hlt fdivrs test sbb pop mov inc sub das or push cmp pop sti lahf in sbb mov pop out stc lea pusha xchg xchg into xchg imull jg add test popf xchg cvtdq2ps data16 mov sub and aas icebp mov add mov pop into mov mov sbb jne lret mov jg int add mov cmpsb int mov mov cmpsl dec lods (bad) sub outsl movsb sbb pop inc xor or cmp out dec test jns xchg rclb nop pop dec aad scas push movsl add and idivl pop dec insb sub cmpsl sbb out jae gs push hlt enter lahf clc push ds push lret add push (bad) cmc push lcall push pop (bad) xchg (bad) jbe cmpsb xchg lds fnstenv or sahf movsb negl pop push xchg dec rorl dec ds and lcall inc pop (bad) lret aas jbe ror pop leave mov out loopne enter inc adc mov pushf push add nopl ss add push jo int3 insb les mov icebp je cwtl loope pop cmpsl shll ljmp stos jnp or cmpsl add mov scas sbb sahf xor mov push xchg xor mov mov out jle inc icebp in in and jmp (bad) iret jp rorl or add xor mov mov mov popa std mov dec jp dec int3 scas inc ret jmp inc jmp cmp jno and std mov bound pop fs and lods stc vandnps sub insb out adcb cmp (bad) and jno inc nop in (bad) call std cld imul (bad) mov pop jmp loope in fs pop jo xor or and add imul xlat mov or fwait andb loope adc (bad) rol fadd add repz or mov push pop mov mov rorb data16 adc inc or das mov pop cwtl fsubp mov and aam or or clc push pusha jle addr16 leave or (bad) jl outsb pop leave xchg pop enter fcoml and xor mov fdivl sub (bad) arpl add mov pop sbb xor sbb fsubrs sahf std es js or xchg out inc push loope stc adc rolb imul stos jecxz and cmp (bad) xor dec sti sti jmp jl sub adc mov cmp loop mov (bad) add add and or stos jo subl sarl outsb xchg scas sbb popl fs lcall fbstp push leave dec fnstsw loop push pop push fs fisttp in cmpb xor std ret mov inc push add (bad) add pushf sub insl aad fisub cld dec sbb (bad) lcall repnz movsl out fsubrp hlt dec in (bad) jb add scas (bad) in xchg repnz and jnp mov cmp ds stos dec xor js and imul loopne and push (bad) lods out jecxz lahf and sub jbe or aad lret dec aas dec mov mov mov (bad) imul sahf jno cmpsl pop inc mov inc xor (bad) fxch cs or repnz aad into imul sbb jo dec sbb fbld je leave mov test jecxz sub popa pusha push xor lock pop mov out dec out leave fstpl ljmp scas xchg push adc jb pop add inc fstps mov sbb mov in pop flds dec (bad) out or cmpsl ss push pushf out xchg (bad) xlat xor adc dec sub (bad) lea adc test mov and imul cmp out pop in clts jl cs sbb int das xor test push loopne fwait push insl outsb add dec jge or int3 cmp loop dec mov ss inc adc pop (bad) mov out mov pop mov cmc mov lods out jmp out cmp and mov lods aaa and dec mov mov ret dec mov in push outsb xchg jecxz or test cs inc or fstl sub (bad) pop bt hlt push movsl cmp jb bound stos lea inc sbb cs lcall ficompl stos in lret mov out cli sbb push inc shl std (bad) push pushf out xlat mov stc add inc pop xor and imul gs aas mov arpl or pmaxub test pop hlt mov pusha xchg shl in xchg fcomp mov pop and das xor out lods add mov je xor jl cmp add cs push icebp dec roll (bad) mov mov mov jne sub xchg aaa sbb call shll cmc mov cmpsl mov daa mov xchg iret xchg sub sub ljmp or jl and pop loope push cld ret ds rcrl outsb lret or pop push push popa push xchg into fwait push mov fmull rcrb jbe insl add mov add imul fs xchg (bad) mov mov js,pn xchg pop and pop pop mov nop xor xchg test fcompl jns jno sbb mov xchg cmp xor lret jbe jmp xchg sbb das clc into (bad) movsl clc arpl dec test mov fwait xchg repnz adc fimul aaa into nop push sar mov int push ds dec dec (bad) mov test int3 adcl or push ss push push push fmulp and rcr fbld sbb jmp fildl xchg lods cmp jge outsb lret xor les je inc mov stc loopne or mull lea leave adc test mov dec xchg test arpl push cmp fucom test mov outsl mov das pop jecxz push mov icebp int3 mov pop mov mov push sub stos sub call jns stos or fwait stos jmp jno push or bt cmp push iret push movb dec (bad) test cmp push fldt mov and mov xchg mov sahf ret jno mov rolb mov mov mov push lcall scas repnz lahf pop sub test push mov fnstenv jg push stos and inc fist cmp dec pop sbb mov testl stc jge cmp and loop nop into xor and notl sbb popf inc xchg mov jo sub xchg xchg xor adc stc ljmp mov push add (bad) loop cmpsl sbb sub aam jg mov test fldt sub push inc fsubrs bswap (bad) fcomps pop test inc xchg (bad) iret faddl or and jge test (bad) or test or fidivr mov xchg fmuls mov bound xor xchg insb push lcall or hlt mov popa test mov mov sub mov adc ja mov xchg (bad) sarb adc jno adc xchg adc pop roll jmp adc add adc inc fnstsw xlat andl sub xor (bad) test fdiv jns cmp sub or mov ljmp lock xchg insl das leave bound xchg jge mov jl hlt js lahf int inc jge cld nop sahf aam jno mov jae sahf adc cli jmp or and and (bad) mov or test pusha in mov xchg js mov or sbb cmp (bad) pop lret scas test or fisttp addb repnz pusha int sarl or sahf sub cmp in jg out and xor cltd rcl enter jbe push or or aas testl push mov inc jp jg popa les mov iret jb arpl mov hlt jo das (bad) je xchg stc or lods aaa dec add ljmp enter data16 pop or cmc mov bound bswap fsubl mov xor push (bad) mov aad jle jns xor jecxz fdivrs outsl cmp fs lret pop mov xchg repz sub (bad) sahf clc leave or fsts test aaa dec movsl mov jl in add ja movsb or add push push std loopne sub xlat pop lret xchg (bad) cli stos xor js (bad) mov sbb fstpt repz mov pop jae (bad) inc mov mov lea push inc inc into sbb cmp testl xchg test cmp cmc insb xchg jg cmc cmp sub enter and pop in insl jp sub cmp inc add (bad) mov lret xchg push fs mov xor stos add fbld out shlb js rol (bad) movsb std xchg mov sub adc (bad) mov xchg (bad) and test mov popf mov lds out dec stos jl xchg jne bound jns sti cmp mov jbe cwtl mov push adc and dec shl jne jecxz les arpl cs sti add leave aaa test jb and adc mov sub sarb add and xchg hlt pop mov repnz cmp fsub mov lods cmp pop jle and sub jl hlt add or sarb ret test dec cld and sub sbb sbb dec and and test mov movl push sarl mov call imul sub stc jbe xor ja ljmp loop add fmull in stc out addb das mov and xlat add mov adc gs inc cmpsb mov mov pop hlt or cmp decb jns pusha and fwait pop js out iret lret add xor adc push cltd outsb aad jb push mov jbe sti js jne sarl adc sub js mov jmp les or fs xor jg add aas outsl notl (bad) xor movsb sbb stos repnz gs cmp or sbb adc cmc inc dec mov or sbb mov (bad) stc movsb lock mov fwait push sub or aam inc pushf xchg fidivrl addl pop outsl and cltd jp lcall ds push movsb aaa les clc cs cmp fsubs enter aam add test adc push outsb fbld adc jecxz adc fidivl add cmp loope std aaa lcall cmp movsb jbe or push or jmp xchg cs loopne xchg aaa rorb jmp sub test cmp loop inc adc lahf push and pop cmp cmpsb mov push xor out pop dec fsubp lods lret mov sub std push mov (bad) mov xor push incb adc lcall pop jae lcall pushf sbb or std xlat loopne cs das loop cwtl xor inc fcmovnb loop shll xor pop add jl adc mov jnp add enter rcll mov lea movsl or sbb inc adc cmc pop sub or iret outsl sarl xor leave jns cmpsb dec jo cmp xchg outsl cltd cltd test into lock ds mov ficomp adc shrb push xor mov repnz sbb pop sub test loope movsb adc xchg imul sub lds ret pop (bad) loopne mov and pop or jbe std xchg dec scas repnz fbstp addl leave dec test pop jbe aas dec cli js aas daa in icebp dec das cmp lret rcrl jl jae add int shll cmp je popl or gs sti sbbl mov out dec and push mov cli (bad) push aas jo movsb adc ds mov lds pop adc ja pop subl or push lock stos or fstps pop jmp cmp scas jbe rolb (bad) mov cmp push test inc in stc (bad) xchg cmp daa pop mov add lcall jge insl fcomps sahf dec ljmp in cmp data16 jno hlt (bad) into xor push jle mov mov pop cwtl or add lock add mov mov and add sbb outsl sbb or dec add test push xor sti xchg xchg push fs cmp inc mov xor or into enter popf adc fwait into push pop cmp jle dec jbe je aad mov lock fidiv mov ds inc testb fild ret mov mov cld xor sbb mov pop inc jle sbb dec push dec je jecxz cld and shrl pop mov xchg push cmp aam pop cli jle inc lcall xchg xchg ja pop roll stos jg in xlat xchg jg aad das (bad) and repnz cmpsb imul push fbstp or fisubrl push push dec jne jle mov add mov test ljmp add jmp loop fs adc ss test xchg mov and add outsl jmp jl pushw dec les daa mov pop popa call xor mov gs cmpsl ljmp loopne outsb out and lcall sub (bad) in dec repz cmp scas pop popa sub dec pusha push ret ret xchg (bad) (bad) je xchg mov xor cmc test jnp add stos mov and lods loop sti aam jp fidivl mov mov xor xchg adc pop mov test ss mov mov cld xchg cmp lahf dec push sbb mov xchg cmp daa push mov mov ret inc fnsave xor and pusha push lea push pop dec (bad) adc mov xchg jb jo sub add pop add jbe add fwait scas mov test unpcklps jo sbb push and jns (bad) dec xchg inc fs jo mov dec pop (bad) dec out popf mov push pop push data16 mov inc shr pop sub pop ja mov sub arpl sbb ret mov inc pop dec add dec push jns or negl ds enter sub divl outsb mov adc repz sub imul mov int3 int3 daa nop dec dec push inc dec push fdivl lahf mov dec adc pop mov mov jge das jg inc push dec add push fdivl sahf mov test adc repnz sub xchg and lock loop ss cmp and loope inc cli clc call lods mov mov jns xor push push cmpsl jp (bad) std xchg mov dec and mov jl cmp push pop insl jl mov add inc ljmp dec (bad) push ret mov arpl mov or cmp sub ror adc xchg out mov jae xchg loop mov aaa call jno push sub xor xchg push sbb xchg dec xchg pop inc out push out add stc jg addr16 out lcall scas cwtl pushf xor mov testl dec pop sahf icebp mov aad cmp (bad) lods push inc das inc loop ljmp mov mov jmp mov in xchg js jmp fsubrl inc insl int in xchg xchg lcall pusha mov daa sbb lea adc lret push (bad) pop and add (bad) jno sub sar add mov xchg mov loopne and cmpsl or inc inc or mov xchg or cmp mov push (bad) inc es push cmp sti or adc gs (bad) cmc or andl das push mov (bad) jle push sub dec gs nop mov mov sub pop andb pop pop xor jmp cli cld in push pop mov jb add mov sbb xchg xchg dec fisubr mov xor imul xor jl lods push xlat sarl call xor lock mov cmp add jp lahf xchg fidiv xor out in mov cmp inc inc fild notb shrb mov adc cmpsb jge int lock fstl in pop jns cmpsl add pop jb test mov jl in cltd aad xchg xorl jnp mov mov jns pop add and sub mov sub outsl add popf mov into pop test add jns cli mov ja insb pop xor enter imul cmp (bad) jecxz cs fnstcw mov (bad) cli testl addl aad fwait test push (bad) cmp mov sbb repnz mov je mov pop insl xor cltd pop push sub divb fld1 adc mov inc mov mov fnstcw in sbb mov bound enter mov push repnz cmc cli scas and (bad) jle mov cltd and pushl (bad) mov popf hlt stc in loope xor xchg imul mov add push movb xchg (bad) mulb (bad) jae bound inc xor lret data16 test in movsb push repnz inc jne mov add insl xchg mov arpl xchg mov dec cmp sbb sub test and sti (bad) divl lcall inc push ret jmp out xor sar movsl or inc jno cmpsb mov adc subl ja popa je add mov ss push pop push or inc and out imul jo xlat cmp addl and or fs sub or adc loope js cs adc (bad) pusha adc push xchg sbb roll stos loop or jne add shlb xchg mov dec push (bad) repz mov (bad) jno cmpl push test cmc imul (bad) hlt cli fstpt jne sahf xor push cmovge std nop xchg inc addr16 adc loop jl mov pop pushw mov xchg ret sbb mov sub sbb rep loop dec jp pop xlat mov nop xchg pop lock cmp lods insb ljmp xchg add inc add sahf and lcall das add cmpsl add push jne test cltd xchg dec pop in cltd xor add arpl jge (bad) jne sub jo adc stc and sbb push mov add scas shl daa clc sub repz dec inc sub (bad) push hlt lahf int3 pop jge pop dec pop scas scas (bad) cmc mov mov jl (bad) jbe add xchg dec (bad) addr16 cmpsb jp daa sbb std push sarb fcoml (bad) jmp cmp inc adcl adc test mov push rolb jno add dec lock std fistp cmpsb dec pop or call mull add iret jge dec sub xchg push mov push inc dec add inc int jbe into mov xchg (bad) clc or xor push js jno lods popa vcvttpd2dq loop sbb in daa dec jb loopne mov ds imulb inc cmp and int3 and lahf mov or mov cmp sbb pop lock popa mov mov test outsl into (bad) sub dec mov dec inc lods in ret daa popf mov push cwtl fs popa popf push jbe dec mov lcall loop dec inc sahf rclb jbe jg add hlt mov sbb cmpsb call add cmp int daa cmp pusha and stos mov push mov or ss fdivrp sub daa out es dec out push mov out aaa and mov enter loopne xchg mov push add xor sbb pop lock adc mov pushf test cmc fstpl lods push popa rcrb jo cltd pop gs push jecxz insl pop and fistp sysret and mov xor xlat cli fwait jne loopne mov inc scas (bad) push xor add icebp push sbb clc leave xchg in xchg mov test pop sbb cmpsb mov icebp adc jbe out movsl push xchg lcall inc outsl scas lea mov sub jno xchg je ljmp icebp push cs je xor loopne and adc xor inc mov or mov jo dec dec xchg adc jb sub and std rcrl jp and mov dec in int3 outsb dec test add addr16 cmovge adc push cmpsb mov and sti pop xchg pushf or lods pop shlb loopne xchg test dec enter pusha mov add shll lret jbe imul mov insb sti add sbb xor (bad) xor sti popa popf ljmp pop rcrl mov jnp sarb std add lods pop (bad) adc cmp ja rclb insb popa push cmp jmp fsub es push cmpb fnstsw imul cmpsb (bad) xor popa mov jae or ds sbb cld arpl dec cmpsb cltd jne push push loope pop push pop push std pop repnz scas mov insl and (bad) stc push inc push js std mov rcll adc sbb clc and icebp add pop loop xchg mov lahf push push out pop pop pop ja mov jp push cmp xchg mov ja mov rorb xor cld jl sbb or sub lea in adc outsb ljmp fdivs daa sub scas test push or js movsb mov fwait dec sti dec decl and cwtl (bad) cmc or loope imul idivb int push mov jg scas scas out push adc js imul adc int in lea adc pop jle lret push cmp stos lea pop loop in adc push sahf jmp aaa and mov std inc repz push adc fsubrl test cltd or cltd mov inc daa lret rcrb outsl jno out std sbbl loopne push popf push cmpsl inc xchg lods repz ret mov mov aam gs scas inc test arpl mov scas das pop repnz mov jo xor dec sbb (bad) inc mov jbe lret lods or ljmp or in out imul jmp mov adc ret jg js sahf dec sti rcrl cli xchg out fwait mov xchg push mov push dec js inc sub lods test or in std imul sub inc add xchg mov dec adc inc sub dec dec pop add jb fcmovu jecxz sbb ljmp dec push mov xchg add cmp and lock cmp push mov pop push cli pop ret mov pop sub arpl fnsave or cmp push lea sub cmp and cld outsl loopne jbe inc or inc mov inc and pop (bad) mov imul data16 dec dec push xlat jg imul mov sub mov sbb or jno movsb add dec repz insb push push ret lcall and imul outsl inc xor mov push xor pop stc cmp mov push aam int3 loope and jne mov and fist inc stc ret adcb sub (bad) xchg dec cmp sti sbb mov dec pusha mov cwtl inc push xchg rcrl in pushf popf test and xchg in inc jb push test or aaa mov outsb in push and clc stos sub xor jg cld iret cwtl stos (bad) adc and xor cmp daa mov xor push int aas mov leave mov bound cmp mov je adc movsl cmp xchg call es adc ljmp (bad) pop scas mov xor mov lcall push xchg adc ds push jg mov mov mov aas push mull cmp pop scas mov rcrl xor and cs ret ds aaa inc fidiv sbb inc sbb out add pop xor mov inc std in test jp,pt es mov imul mov jl mov jb (bad) and push dec out xlat pusha xlat out xlat jp push aas xchg nop lods jl pop aam mov popf cwtl or inc xor jmp js cmp arpl clc mov push (bad) pop dec and cmpsb dec icebp ja cmp rcrb bnd and push cmp xchg mov jbe add jo xchg push or incb aad lahf sbb xchg cmp xor test dec pushf xchg push (bad) mov subl pusha mov insl sub pop mov sbb mov mov sahf popa jne mov jge xor mov push jno pop jmp mov ror xlat xor add sbb mov lods jb popa cltd push punpcklwd jp nop dec xor aas mov mov and xor out arpl (bad) jecxz mov pop aad mov cmp std aas pop inc jge inc insb xor mull mov test lahf fstpt shrl xchg enter lds inc outsl jmp mov (bad) cs pop test bound pop jne mov or sbb mov out fs icebp xor mov lea or xor cltd sbb (bad) jge call add push inc daa popl push mov pop push mov adc xor inc mov pop xchg jno imul xchg jo test xchg push push pop lods test xchg ret repz mov test pushf shlb outsb push fild inc mov dec inc rorl add push xchg (bad) icebp sub lods inc sti pop pop cmc sbb scas mov mov sub pop push mov or push shl adc xor nop cmpsb test push jecxz or repz enter ljmp andb aam cld fndisi(8087 dec test divb sbbb pushf lea cmc dec ds xlat bound fidiv push sub mov push mov xor dec push dec into les pop jg sub call iret pusha out push insl lea (bad) (bad) pushf iret xor sahf push movsl int3 loop or sbb mov jp imul adc arpl push cltd loopne jle loopne push xchg insl in push (bad) mov ja cmc mov inc pop adc mov xor pop pop adc and (bad) pop add fcomps cmpsb dec push add or mov pop data16 jle sub in add push or lods inc mov mov jbe lcall xor mov iret mov cwtl in out insl adc mov jle scas pushf (bad) in mov icebp inc add movsl xchg scas cmp and push rcll stos inc sar dec add loope sub int3 sbb fisttpl xor mov push loop and sub data16 lahf cmpsb lods lcall mov xor jb dec dec cmp (bad) notl lods faddl and not data16 in mov loop pop (bad) cmp sub or push out xchg push aas faddl xor sbb js inc mov mov subl insl pop pop sbbl out cs repnz cmpsl jl adc xor cmp pushf xchg xor push or dec inc out xchg sub jg in ret push push lods in pop push aaa daa jge int3 pop jg mov aam fcmovne or stos pop cltd xchg push je mov push in lea and lds mov imul (bad) push xchg rsqrtps daa push aad inc mov int3 inc subl lret stos iret popa inc ljmp lods mov lods inc xchg xchg and movsl call stos jge or jecxz imul push cwtl vpunpckhdq xchg out mov lock inc ret sbb xabort les ss add popa push push dec dec push cmc mov jp out (bad) adc or cmp ret mov push jo ljmp fs lds out out adc dec arpl fwait or int3 shrb sub aaa adc xchg loope repz jmp or in pushf cld arpl in es mov aam dec out pop in push test pop add fildll xchg or inc jmp int3 aas (bad) sbb std adcl jns mov jnp add pop xchg xchg ret fsts xor cltd or leave call stos test push out cltd push xchg push mov out xorb ror mov pop (bad) leave call pushf mov hlt fs mov and lock sti push flds std pop fnop xchg or jmp or xchg push dec push rcl adc sub cltd ret lret jns loop dec xor xchg hlt push or jl imul clc lahf stos in std stos (bad) fidivrl cmpsb stos jmp orl xchg xor addr16 jge pop stos lret (bad) mov pop jmp fisubl shrl push mov add cmp movsl cld xchg jnp inc pop cld lahf hlt stos stos sbb sti sahf inc and lock xchg insl insb out xchg cmpl cmp push sub pop jmp in xchg pop pop (bad) xor pop mov inc vminsd add stc rcrl mov dec xchg cmp dec mov addl mov jecxz xchg pop mov (bad) negb pop add add push inc pop cld add pop xor popf jne and pop sub pop jb test out idivb lea test lahf out push mov add adc adc mov sarb lds and and sbb adc or sub test dec xchg nop clc sahf lock add mov icebp push or dec xchg mov ss pushf pop or pop push sub mov sbb std das (bad) les fildll xor test mov sti and sahf xchg ret push jle aad insb jno iret incb iret adc (bad) int sub sub xlat lock xchg mov imul lea inc jns clc movsl adc mov scas shr pop mov (bad) push mov fidivr xor xchg subb push adc mov bound ss dec push mov (bad) push xchg inc and sbb mov and insl push outsb ss mov (bad) xchg sarb popf mov and lods pop jae xor pop mov (bad) ja stc mov sub jl lds daa jge (bad) sub ret or jbe cs scas (bad) push fldt adcb pop (bad) popa jno daa inc notb mov pop xchg loop jae push bound ds enter fwait mov mov xchg mov stc popf aam fsubl xchg mov push test mov scas push cmp addr16 or mov test int3 add outsb push jnp ljmp movsb movsb gs jmp mov inc lods int3 ror mov or and mov sub jne lods and pop xor sbb inc xor lahf jb nop outsl push dec jl lret mov inc sbb pusha mov sidtl cmpsl out xchg xor es lods jb jo and stos inc mov add imul in pop nopl sub les or or pop xchg ret fldt scas leave aas dec les mov call jnp and (bad) xor inc and cmpsl pop xchg sahf sbb in cwtl jo jl loop adcl je jl inc (bad) and (bad) fs xor idivb add (bad) fcmovnbe mov es adc sbb in xor movsb adc mov pop and ret xchg lods xchg xchg sub sbb add pop push in roll pop push cmp subl push mov sahf out dec fwait scas dec push mov clc inc stos ds hlt lahf add bound lahf add je sub cmp mov jmp pop out xor je scas xor fild pushf popa fmull fcoms shl sub push out pop xchg dec mov jo ja mov es subb inc xor out dec lock sahf jg sti add lods cmpsb mov lea jl pop push mov dec dec out or cmpsb out popa inc call mov push cmp mov inc mov add xchg call mov jno cbtw lea out cmp dec arpl xor lret popa and rclb subb subb dec jb das loope jp adc sbb pushf int out add or xor scas xor jl jno call sarl mov jno mov jl orl dec rcll in lahf hlt out cli iret push jne sub add xor xor out add insl mov xorl movsb aam or call (bad) cmc in (bad) das mov jg sbb jne pusha and jo imulb sbb xor inc (bad) scas pop xchg rcrl pop sbb daa mov popf fdivrl lods (bad) sahf pop and dec lret mov nop xor pop jge in push sbb fldenv je and (bad) mov aad mov xor outsl jnp mov shrb iret add scas inc and mov xchg xchg iret fmuls int fbstp jp add dec push aad stos mov mov adc push decl xchg (bad) jmp insb dec xchg mov xchg xor cmp cmp jg jmp test js dec cmpsl dec add xchg je lods lret dec mov xchg xlat inc rorb inc test outsb in out inc lds das (bad) xchg or pop jle sarl stc inc lahf aas out jg mov jne es sti lea daa lahf push popa mov jns xlat or ja xor out subb inc push or push (bad) dec or sbb push aad fimul inc pop ds (bad) add cwtl dec insb lea and xchg clc clc arpl movsb mov loop jae cmp ja mov sbb ret jg test repz imul pusha xchg adc jle out dec pop ja repz xchg mov mov sbb decl insl pushf (bad) hlt xchg fs cmp mov add (bad) dec or sarl push push push jae (bad) mov movl leave mov icebp call adcl lahf lods jg mov icebp mov mov mov push fdiv xor push out inc mov rclb adc repz push dec mov pop push dec xchg jge push out jb int js pop cmp data16 cmpsl jbe jmp dec mov or mov sahf arpl or or jl xchg cmp dec iret out sub repnz adc cmp and and mov (bad) pusha jge popf xchg in add out clc rcrl sbb push jg push mov pop mov pop xor (bad) dec push pop orl std and sar mov xor cmpsl jg imul loope inc rcrb stos jb sub rcll in mov iret sahf lea push std dec rolb (bad) loope dec aas jl add xchg mov frstor popf and jnp repnz cli mov sbb (bad) int3 cmp (bad) mov lds fisubrl ret jp push fwait call dec xchg jb add jl sti ret or jle mov sbb push sbb rcll sbb enter sahf sub mov mov pop dec mov (bad) mov adc gs mov push stos aad out mov in mov out pop jmp popf mov in aad mov test aad nop and sbb xchg pop repnz or std add pop ss dec cmp adc in pop mov int push push lahf push out push out mov lods out int pop fsubs cmp js or xchg pop shlb mov jg in insb out es inc out mov jb popf icebp xchg xor push sub and adc cmp in imul xor adc dec jl gs (bad) repnz pop aad lret lock imul sbb or lods inc and and adc jmp adc in shll hlt sahf sub stos jg ror ret lods sti rorb in jo xor sarl and xlat insl jne xor xor add cli sub arpl cmp cmpsl adc jbe jmp loope lcall popf add pop sub or (bad) call mov pusha jae push ret (bad) sbb adc adc pop test jecxz in enter outsb xlat mov scas fwait mov sahf mov mov xchg daa neg ret ret push out push and loop call inc das test movsb cmpsb jns jge pusha js add mov xorl loopne cmp sbb out fidivl sub mov fidiv mov jecxz jg in dec mov sar ljmp fdivl ret or js add pop gs mov and inc jge test cmpsl lcall jmp push (bad) mov pusha repz loope push mull fxch push shrb test iret fcomip shrb jecxz rorb xor cmp call xor mov fimull jl adc sub lcall (bad) out mov cmpsl xchg popf shll stos add loop stc divl sub pop shr dec jg xor movd inc fs outsl sub sar movsl push not popf clc mov mov mov mov xchg pop mov les cmpsl stos (bad) push adcb fs mov movsb out adc push stos and jmp out int fisubl in hlt xor sbb push subl shlb jecxz scas pop mov dec outsb fwait dec dec iret sbb outsl ss cmp in dec sbb addr16 hlt in arpl mov in lret dec or sbb jns inc cmp rolb pop inc adc push pusha push adc sub aam sar rcrl fst ret add jle mov nop leave js pop leave fmull sub xchg add cld push pushf pop and lret loopne sub sbb aaa cmp pop and test fcmovb cmp dec iret pop pop insl adc cli or mov sbb and lret mov mov out fwait cmc addr16 jp cmp clc adc cmp or jb and xchg jbe rol or int3 arpl or add enter sub inc repnz cmp mov dec or scas int3 sub pop int3 xchg add into sub cmpsl (bad) mov sbb das fidivr mov jecxz jge inc insb add jge sbb push mov sbb xor dec mov cltd sbb das or fnsetpm(287 xchg lret aaa xor lret jecxz sbb roll push pop test adc adc add repnz dec and leave insl lods in dec imul push lret sbb mov push mov mov mov cli cli push imul push pusha daa cmp cmp test mov call inc in cmc gs pop enter xchg pusha and enter pop test sarl jbe ret imul jl fldenv or or xchg push lea mov test add adc lock ret lods loopne je dec cmpsb into aaa sbb cltd pop mov aaa cmp flds xchg stos stc scas mov aad test adc stos jnp ja rorl imul out imul jecxz xchg jo je cwtl sbb dec lods iret loop movsl incl mov cli jne mov pop sbb fs adc fcom lea (bad) sub subb or mov ds fwait out mov addr16 push xor xor pop xor jnp push js in repz sarl push ljmp test out hlt xchg adc adc mov mov int sub outsb ficom xchg bnd rcll adc sahf lret xor aad (bad) mov out sbb rorl add or sbb stos out fwait cmp stc lods dec fs aad mov jo cmp lcall push xchg mov stos jp push lahf aad mov inc (bad) xchg mov fistpl int adc dec xor mov into out fs push cmc lds mov mov xchg push push fmull inc inc xlat mov xor jb pop popa stos or jnp les jmp lods dec ret lret mov out es mov mov dec lret pop mov cmp fcompl xchg test das addl jmp mov scas xchg jns ja out fisubl mov loope dec jbe mov out clc dec shrl xor fmulp mov sbb repnz fnstsw (bad) arpl lcall jmp iret cs out dec push arpl cltd pusha in add ret (bad) test xchg or lcall mov out mov sub cmpsb add imul movl cmc cmp push dec push adc das mov pop int icebp mov call fild popa inc int dec or (bad) dec mov jle fs jmp lret cld xlat (bad) idivb gs in fldcw cmpl mov xor js test imul push out xor (bad) loopne add mov cmp cmp stc testl repz out inc add fmul add adc add pop (bad) std jns dec xchg scas mov and cli and movsl repz or mov cmp bound jmp mov adc jns in popf in rclb pop in add push daa loope arpl push scas add and je pop sbb mov rolb pop push cmc add sbbl add inc mov xchg dec xchg jns mov mov xchg push jecxz pop pop test repnz lret lret rclb daa and or push mov fnstcw mov jg test lock mov fiadd js add mov pop int3 mov scas xchg cmpsb cmp and stc xchg lcall adc lcall pop mov (bad) lock jp fcmovbe sub inc fsubr mov (bad) cmp xor adc (bad) rorb test mov lds jo dec xor cmp jmp jb or iret sbb and fsubp dec icebp test outsl push pusha push in sbb and fs lock sub pop sub and outsl mov cmp push mov lret push jbe mov out xchg cmp add xor imul inc pushf loopne push out repz adc jg jmp lret dec fisubrl cs push div jmp jle (bad) lahf add adcb mov xchg jecxz mov in dec mov xchg adc clc cmp repnz fsubrl (bad) ret enter inc (bad) fbstp es and insl jo cs pop call mov sahf jns push lahf inc sub sub mov xlat pop cwtl ret jp repz in jne sbb cmp adc xor inc scas popl icebp fwait mov in adc (bad) imull sahf imul stos jmp sbb fdivrs lret xor pop dec loope dec jp xor xchg sbb lret mov add pushf aam xchg mov rcrb sub sbb das cs jo jmp out mov push pop dec push lahf ret cmc out fnstsw mov (bad) mov pop in inc nop out mov adc jbe lods xor stos jno lret fldt or lahf icebp lods icebp inc mov scas fmul cmpsl mov dec adc sub xchg jecxz sub dec mov push imul or jae adc pop ret push sbb push and mov sar dec fcoml aas jecxz insl xchg ret cld repnz cltd sub push adc jo xchg popa pop (bad) pop jmp pop mov sbb add sub sbb lahf imul (bad) aaa cmpsl test fmulp fdivl js xchg int lock add jl or xor push lods pusha add out int3 adc pop adc es cmpsb jl mov arpl out and mov sub add fldenv (bad) fild push and out lods and dec mov out ljmp mov adc and movsl lahf dec insl dec dec enter adc and mov push jb enter movsl and push (bad) gs push scas aaa fsubl inc dec cld and cmp sbb sar xlat jnp popf in movsl push or pop cmp or inc in cmc and arpl dec repnz inc adc inc jg iret bswap cld push cltd (bad) add int cltd cmp mov lock das lds sbb int3 push pop cmc inc stos mov push aas push iret ret fldl imul sbb lock pop lds mov push and cmp lods mov movsb push add jnp pusha test daa cmp lcall loopne push sub add cmp pop lea push nop sub add inc mov stos test int (bad) enter les fs dec movsl add or arpl inc xchg sub mov (bad) adc lods jecxz push mov movsl jno adc int xor pop (bad) cld jecxz ret jo cmp imul aad repnz out xchg enter pushf dec cmp sub je xor fidivrl sub std stos sbb push mov adc out push dec and out xor sbb push mov xchg pusha (bad) sub mov mov jnp rcll out nop addr16 (bad) loop sbb es adc loop mov nop mov out fwait sub clc in pushf fistp inc pop xor cltd or lcall cmp dec test mov fwait mov les cwtl ljmp sub sub jmp lock out ror iret loopne rcrb call pop sub sbb xchg xchg sub adc dec shrb repnz insb sti mov or sub dec js add xor out test hlt lea lcall cmp lahf stos clc jb loop dec mov mov aam sub cli adc jb test add inc adc or add loope subl jo add or xorb mov xor push xlat fisubl push js sbbl (bad) sti aam negl jp sub push (bad) cmpsb xchg je arpl lods xor mov lods (bad) jno jecxz,pn rorb int mov xchg ljmp mov iret cmpl sbb data16 pop jecxz repz jl and addl ret into cmp add (bad) cltd aam push pop add repnz adc push addr16 inc in int adcb mov sbbb jp int daa push mov mov push pushf cs sub stc cs out mov add (bad) jo daa or (bad) jb mov push arpl jecxz pop fadds sahf push cmp dec push mov lahf test scas pop test xchg aam scas jae sbb outsl jg fadd daa jb pushf jmp jmp scas outsb inc ds add mov cmovbe insl in add mov and dec inc nop cltd test test push add ja adc incb or jecxz aaa into incl mov cmpsl clc enter xchg sbb mov mov test or and stos jbe sub jns and sti rcrl (bad) mov aas mov xor dec add sbb insl adc mov dec mov cmp mov jno orl mov inc jbe mov in add add pop clc jg cli std dec scas std mov mov (bad) enter sub adcb push test movsl cmpsl imul or sbb cmp fisubl push iret mov push movsl lock add subb in stos mov ljmp leave xor test sbb and gs dec cmp xor sbb test fsts pop int3 test (bad) mov push add cltd jmp pop add jae mov dec and and pop pushf dec sbb test stos push and data16 popa and lock jecxz fisubr lcall iret jmp sub scas xor mov loopne shrb inc addr16 mov and push xor dec pop jnp sub sarb test and or xchg mov jno int mov fcmovnbe pushf xor mov out sbb push xchg daa rcll cwtl (bad) out mov push es lods push in in cmpsb jecxz pop jecxz mov jnp out push das neg in pop popa jo dec inc mov ja (bad) pop add rcrb fildl or (bad) jbe mov dec in jecxz or mov add test (bad) mov cmp push adc dec push stos stc jg pop and out mov std inc (bad) lds loopne test sbb cmp jb mov or xchg xchg int iret xor pop xchg mov mov mov xor les xor push push push cld mov pop cwtl add dec in push frstor (bad) mov loop nop fnclex cmpsb fpatan outsb (bad) jns jl push cmp test pop ret dec sbb cmc and or push and mov jae das js sub mov es std data16 jmp sub (bad) add mov test lock rcl bound ds xchg in mov mov in fcmovne push stos jno cmpsb inc inc outsl mov jmp add (bad) es jmp sbbl dec aaa push popf push mov pop decb popa xor pop sarb adc pop mov into jl dec inc das xchg scas xor jp cmpsl insl rolb aaa push out sub dec pop repnz aad repnz loopne push imulb repnz outsb xchg stc lds popf jns cld xor stc jns mov aas das mov flds pop (bad) sbb mov cmp cmp ja mov dec jmp lahf dec mov notb mov jmp repnz test push xor clc imul mov cmp jmp pushf mov shrb (bad) mov dec push push fucomp push mov inc push popa sbb adc inc xchg dec pop mov (bad) pop xlat je scas cmpl out or sbb (bad) cltd leave xor lahf mov adc jns aaa push stc popf mov xchg clc inc sub stos push fstl xor (bad) push pop mov add sbb xchg lret stos cmc aad lahf sbb fstpt pop popf lret sub outsb adc leave adc cmp clc test push adc mov adc fildll cmp fmull cmp sbb dec and xorl pushf movups mov jne lods gs scas cmp fcoml aam dec ss mov (bad) loopne addl jns sbb fstp dec sub sbb in jnp add scas fistl lret mov nop dec rcrb mov or test mov xlat pop (bad) xchg and mov push sub inc (bad) lea imul daa adc fldenv hlt imul mov push rorl cltd adc mov loope jb xor sti leave aam mov mov add pushf addr16 inc cs push lret clc sbb insb out add mov cld add dec xchg jns xchg pop and ret in fstpt xchg xchg xchg clc push inc push (bad) scas pop push jle mov sbb sbb rorb stos (bad) mov (bad) loope adc ds mov lret pop jno mov sub (bad) sbb addl outsb in in xor mov test lock jbe lds cli das pop dec pop pop or jmp fnsave jb inc (bad) mov or xchg xlat dec insb lds push pushfw fs fcomps mov and push add popf mov ss sub mov pop xchg jmp das or push (bad) (bad) hlt cli hlt pop mov sub das (bad) jmp out in sbb mov rcrb punpcklbw sbb dec jmp loop call jmp jne push push or aas ljmp cli daa movl outsb (bad) lock rcrl lds or aam shr in stc push dec mov stos or push inc cltd icebp push icebp fprem sub and fbld jns push inc cmp (bad) imulb push sbb leave mov sbb lods xchg sub jbe repnz ret stc adcb lea data16 jge mov xchg or arpl jno insb rcll test rep loopne jne insl in jns test lock add jmp pop or add adcl lcall dec jae in cs push ja jge aad fild jmp mov jp or sbb mov call pop xor mov (bad) cmp jo mov cmc xchg xor mov divl js rcll cwtl jbe loop add mov orl rorl adc out adc and aaa cmp leave inc cmpsb (bad) hlt pop push dec lods jnp xchg dec xlat cmpsb lcall pop mov push (bad) fildl and hlt push in ja jno push mov js out fs ret inc mov lds push imul imull sbb add outsb imul mov mov je sub dec sbb or addr16 movl iret xchg mov out sub movsb js xor mov jae mov divb fisttpll rclb fisttpl cmpsl ja pop adc je push jae jbe je jbe out div inc push lahf jge (bad) call ds push fwait push or mov mov in pop add dec mov mov stc rolb ss jae lret cmpb mov jnp adc movsl inc iret mov ret in or (bad) adc push das dec jbe sub insb and pop insl gs sahf jnp icebp push aaa adc jno inc jl jae negb jl movb (bad) or int3 lods lea sub sub mov xlat xchg scas fmuls jle jg rorb das add mov xor cmp addb inc sbb jb insb out fistpll push ret test aas push add nop mov (bad) fbstp jp ja fs jmp cmc jno xor pop cmp aaa mov dec ss push shl sbb (bad) adc fcomip stos das xor dec cltd mov mov and inc cs add pop ret mov js (bad) mov push out cmp jae mov or fbld sub jge call inc (bad) ss pop iret call lahf dec push adc aaa and pushf or and pusha adc push jmp sub ret mov out cmpsl dec fsubl fstp sub arpl lahf ss fcmove lea jp inc cmp mov push cltd jge adc mov pop ljmp ret std pop jnp sarb and xor lds jg jb mov (bad) es gs sub mov mov push xchg daa mov mov add imul push shll gs movsl cltd in sbb iret mov and mov mov aad jmp int3 sarl sbb in jle push cmc sarb out pop fcoml clc loopne sbb repnz xor movsb ss ficomp mov hlt aaa imul lea sbb je popa push dec sar cmp in lods pop push dec xchg cwtl test mov insl sbb and test mov jle jne pushf cmp mov into pop (bad) daa mov ss push sti in scas mov nop notl add aam in cs sub xor jge icebp inc sub pop inc mov enter jne rcrl mov mov cmpsl mov jnp xchg add out dec pop mov cmc call inc loope imul xchg sbb or jge cmp adc popa enter lea arpl pop cmp xchg pop outsl jne sub jno imul lcall lahf xchg xchg fwait aas jno sub cmpsl movl dec push or icebp dec add (bad) pop fwait push aad pop push mov or test push jecxz jns dec int lret cmp test sbb sbbb int3 insl lods sbb pop pop inc rclb (bad) xchg lds test stos mov insb lret add xchg mov cmp mov in and rol js (bad) stc pop mov push push sub xor outsl mov push xor clc and mulb cmpb (bad) cmc outsl xchg repz cs sub into sbb pop sub jae mov hlt aaa adc add int into movsb fdivrl mov inc lret fcomps aaa popa in ljmp mov movsb push into mov adc (bad) cs add pop clc es mov xchg decb lock ss pusha fwait ds repz divb (bad) mov mov mov or xchg rorl int or push ffree xor fcmovnb movsb sub cld jmp mov mov pop sbb lods sbb inc fwait push rcrl jae into js cmc mov cmpsb jp xor mov test lea sub cld xchg ret sbb cmp push call add es dec dec out push enter fcompl xor jno and jbe test sbb sub ret mov mov xor sbb (bad) movsb fsubl adcb sub cmp mov ss jecxz addr16 jne fs push aas mov mov or cmp or fwait pop fistpll jmp or push fild xchg std dec arpl mov jge repnz mov test pop popf lds test hlt jnp popf imul mov sbb fcoms je mov fstps push add clc jmp scas sbb shrl neg insl mov fidivr or ds add and mov mov or sub jge outsb out dec sbb lret pop es add lret and movsl rcrl sbb push mov mov add in pop mov pusha cmc cli (bad) out bnd nop pop and jnp sub push mov fimul scas stos push xor pop sbb imul mov imul mov pop adc rcll dec leave xor jg movsl sub jg out jae or (bad) xor vmovsd push adc nop or xor xchg sbb cmp flds mov ds adc fldenv mov imul bound xchg push lea lahf es mov rcl movsl cli into out sti lea mov push out leave iret lods scas cs in and dec in loopne mov sahf leave sahf stc es mov mov jbe mov loop lcall test (bad) test std or lods xor cwtl lea shlb int3 jp rcll lods mov mov xchg loopne mov jmp fisttp xchg jl iret ss push or cmp (bad) push push leave dec test outsb outsl ret sub mov pop ret add leave sub pop std insb inc jnp mov movsb addl (bad) mov push faddl push ret imul xchg mov testl mov stc mov push (bad) mov cmp or mov jns mov in data16 mov dec cwtl fadds in sub xlat outsl add xchg int3 int pushf out iret or add add fs cmp or (bad) mov mov shl push dec fst stos lcall into pop fmull mov add mov pop pop fsubp lods push scas repz or (bad) cs insb scas mov out test hlt (bad) pop sbb rcr push inc out popa je test ror scas and dec jbe inc jg call cs bound jecxz sbb pop ja adc pop lock inc cwtl stos sub mov mov decb loope inc fs dec mov jmp lahf daa in add lods aas loopne ljmp mov cli sti mov sbb rol pop sbb data16 mov adc dec mov push test add inc or repnz es clc sbb mov test cld outsl divl or pop cmpsb adc mov mov mov jecxz jnp das add mov loop dec xchg shrl sbb push repnz pop stos cmpsb hlt rorl lret dec fs xchg les fcomps into jecxz and lds int mov in fidivl (bad) xor bound leave and in sbb into mov (bad) hlt mov sbb fcomps jbe sub mov xor dec lods movsb sbbb and lret push out push dec addr16 lods xchg scas aas pop cli fisttpl mov arpl mov sub mov arpl and hlt imul hlt mov setno dec test push cltd sbb rorl pop or (bad) dec int push xchg inc outsl and rcrb movsl pop mov fnstcw add push call fwait dec dec adc imul add (bad) jne mov and pop call lds loop pop sbb xor sahf (bad) add mov jno (bad) icebp cld (bad) adc (bad) ficomp pop sbb je popf and sbb push je scas cmp and gs enter arpl ss push sub ja push out mov pop js sub cmpsb imul sub mov out lods and sub push xchg das test insl dec xlat iret sysenter int xor pop sub ret enter imul add add in movsb mov sub scas xchg push and mov mov (bad) cmp jne outsb xor mov fadd outsl dec xchg rcrb dec imul cwtl xor ss push ret imul mov lahf jo movsb shrl rdmsr mov dec adc pop add pop push pop lods sbb pop subl bound pop and sarl cmpsl mov outsb pop iret aam leave inc jg push jne xor sub jb sub (bad) hlt outsb jecxz js les in jp cmp (bad) pop pop outsl es sbb mov ja jnp (bad) xlat mov sbb popf (bad) out jmp and inc jle cmpsl add add cltd cmp inc lock pop lret cltd xlat rcrl out dec ss scas outsb fnop add call out or jbe add sbb mov sbb cmp test or fsts mov cltd and outsl jbe loop popf sub mov outsl (bad) sub sti insl loopne sbb js call imul gs mov or jnp mov inc mov in dec ja dec push dec addl lea adc icebp add jbe enter jge xchg add mov jmp lcall and push clc push xchg ficoml (bad) iret jbe test cmp pop jle jle jge jo cmp mov mov scas jae cwtl fcmovnb xor shlb out into lahf xor mov mov pop inc daa xchg inc mov add add fcoml jge fwait mov (bad) stc xorl jne or popf mov xacquire sbb (bad) in in ror das adcb adc mov lret and mov outsl push mov mov loopne shlb sub sub adc push mov imul sbb je jle lahf adc add out inc data16 fisttpll scas cmp nop lcall (bad) cs mov mov enter jmp adc pop fwait test and stc les (bad) iret lahf pop repz je jle xchg das mov sbb fxch mov jnp loop les jnp xchg cltd imul pop lock popf mov push sti mov xor adc inc xchg lods and dec or xor pop add shrl mov mov jge push sub add or mov push clc (bad) imul mov sbb cmp pop push out push orl mov xor mov xchg ror ret lret ret xchg test dec loop sub in shlb add arpl loop add pop lods and xchg test jo cwtl xchg test mov jp sbb sub pop dec aaa cli out inc popf arpl in in ljmp rcll mov mov and je nop xchg or aad (bad) jae jl iret (bad) gs cwtl out or xorb das and cli ljmp test stc pop jge test inc dec or out add icebp sbb mov cmp ds pop pop fcomps jb dec jae add jnp gs jecxz cmp cmp insl mov bound dec mov add ret push clc inc mov xor dec sbb jmp shll cltd add pushl outsb hlt arpl loope mov fsubs adc mov mov sub shlb aad dec ret mov mov dec jecxz mov mov jbe fcmovu and sti movsb cmp lods xor addr16 xchg cli mov jle cmp fwait aad push or ret aas and ljmp or jle arpl bound adc push repz cmp repz out sti pop out inc cmp fcoms stos sbb je jb mov (bad) mov push sub in fcmovbe or jnp or lods push xchg (bad) imul jp mov call ret popf add test cld scas and add ja dec jbe mov jno insl cmpsl mov xchg rol bound mov int pusha out data16 imul and aam adc xor sbb movsl pop mov sub lahf xchg pop jmp std (bad) fiadd cmp (bad) flds sbb loope test ds push xchg ljmp mov int3 bound fcoms or sbb push and jae pop (bad) inc mov (bad) mov repnz inc mov cmpsl in jmp (bad) into es fwait xor pop cmp iret cmp aam jp cmpsl xchg mov pop jecxz cmpsb push jmp dec (bad) fist fisub je push mov xchg stc push loope out xchg jl enter add push ss pop rolb mov addr16 sbb bswap pop mov xchg inc mulb subl lods push sahf xchg test popf cmpsl stos lcall lods xchg (bad) cld dec into jmp mov icebp pop and adc out test sbb push sbbl les pop stos aad jnp rcrb dec sbb jne mov xchg ja ret jmp rorl inc cwtl testl sbb jp pop sahf xchg aam in jo andl (bad) adc pusha add sub call cwtl clc cli in push stos or into inc ret mov mov ret jl adc addr16 or cmp ret dec pop bound mov loop ss mov sbb mov mov stos aam ja ret push mov mov mov adc pop leave out popf rcrl test (bad) arpl popa mov pop movsb pop mov pop rclb mov cmp mov sbb iret cmp adc inc inc mov dec or mov push aam dec (bad) or mov dec pop fwait bound fisub dec les pop sub es data16 lret dec mov xchg jbe ret into movsl imul dec enter aaa mov pushf pop loope pop int (bad) inc jge fisttpl enter mull shr and addr16 mov cwtl call jp sbb clc ret enter push mov xchg pop das push xchg add sbb cmp jmp mov pop sub orl loope mov test pop jnp roll insl daa movsb clc cli sub aam les (bad) xlat pop sbb not inc lea push mov subl sub incl sbb adc push test icebp cli test push movsb shlb xchg cs jb call adc cmp or lea xchg hlt sub fucomi dec push hlt lcall push adc xor fsubl fist enter mov pusha js mov pop and sub enter (bad) pusha test push mov jbe add mov cmpsb mov xchg hlt xchg call mov xchg push insb sbb adc out loop sbb imul je and cmpsl daa aad out ds pop aaa xlat lods imul or cmpsl push push aam or jns sbbl jmp mov sub insl inc push cwtl shll jns scas jb scas fsub call divb and (bad) mov lahf sahf dec outsb loopne mull push cmp mov mov mov (bad) jmp sub xor aaa rorl and scas adc and adc sub sbb xor in inc insl dec leave loop inc mov push scas sub loope outsb cmp flds mov in jmp xorb cmc js loopne push test jb inc lahf repz xor inc scas or jl pop mov out dec stos cmpsl xor imul int3 and (bad) scas add mov aad (bad) aas int or pop sub cmpsb out lock arpl mov popf pop fiadd fwait sbb jb cmp rcll add clc rorb xchg loope xchg push lret jge xchg out fsubrl jno call js cmp mov jno stos mov add xor daa jg or xor mov jae or push sub ds shl hlt xchg cmp mov in imulb das div pop adc daa cwtl or test popf cmp xchg cmp inc jg frstor lds jnp cltd rcl test imul mov (bad) xor xchg pop push call jns mov pop loop imul es sar cmp pop in cwtl cmp push lahf jb sbb adc mov jne scas and cld push xor add out leave fwait push sahf and loopne sbb in xor and jmp sbb ret ljmp mov and lods negb popa jnp aam jl cwtl (bad) aaa mov cwtl adc arpl sbb rcrl rorl aam sub cld or push aad jp rcrb in xor popf push push or fsubr ret adc sbb xor inc lods mov out mov dec in add lods sbb aad ljmp popf test jmp or pop and xchg (bad) mov adc ret popa xlat outsl push lods push inc rcl lcall pop je sub adc pop pop lea and push lds rcrl pop mov jnp nop imulb cmc lods inc pop (bad) xchg leave or push dec ja add sbb test or or test sbb in test int inc into mov pop add dec jge or pop divb add fwait and mov sub popa inc fwait push mov or nop js sub popf testl mov sbb cmp pop sbb sbb xchg fidivl pop xchg iret jae jb insl pop jmp outsb inc (bad) scas push push lds insb dec cmp xchg pop sub or in lock lcall jb popl xor lods cmp or jne fcoml ss adc scas stos call cmp push push or jge and push cmp lea xchg pop mov dec aam sti sub push (bad) lahf repnz (bad) mov sbb les xchg sub cmp inc jae bound or rcrl scas loop sub hlt sub lods fiadd inc mov mov ret test jae fldenv rcrl dec pop dec dec rclb and cli repnz push sahf cmp mov div call and sub jmp jo loopne cmp sbbl xchg loop mov pop adc js inc aad mov sub in push pop pusha sti mov jns cli cmp add (bad) cmp sub aas add jb sub push xchg aam stos test addr16 xor add lahf push mov inc xor ret scas or sbb loop call sub loope mov sub push push xlat jae imul enter sub daa dec mov dec sbb dec lock xor xchg add es pop daa adc insb mov je dec gs test sarb xor repnz or mov lret iret popa inc repnz lahf cwtl or (bad) js pop sar inc (bad) call ljmp in dec imul std fcmovnbe adc mov fcoml dec jmp sahf xor pop cmc lock pop loope jno push xchg inc push and add jae aaa sahf enter mov sbbb xchg shrb mov stos bound xchg clc jo imul jae gs test pop sahf pop xchg jge xchg call call xor inc jg lret repz mov int3 js test pop jge xchg mov movsb sbb cmp aaa push pop (bad) cmp jmp lret cs xchg jnp je dec jp pop pop and jno mov rorb ficompl gs push pop xor mov imul jp (bad) cs xchg mov int hlt push sbb jp in mov jle insb and mov pop rcrb jo scas mov lods xchg fildll fstl push test or jno push and push mov comiss dec and push sub sub ljmp std out call insl scas cli (bad) cld jo cld aam sub sti xchg add stos fsts sbb jbe cmpsb and jl jg (bad) jle cmp into scas imul mov pop cs aam shll mov inc je cmp push jg xchg and std insb add mov dec cmp cmc add pushf cmp add out cmp loope mov movsl jmp dec daa fidivrl (bad) out and jl inc pop pop (bad) mov je inc imul and add mov pushw shlb lcall mov int3 enter sub rolb aaa xchg leave inc inc dec in lcall xchg fistpll sbb cwtl je (bad) outsb or sahf push xor gs sub subl jnp push jge mov cmpsl sbb out andl popf pop shrl (bad) icebp cmpsb rcll and jle or test fdivrs inc ljmp (bad) cli or push fs mov lds nop outsb and jg test pop adc in pop and sbb jbe lret outsl xchg mov add cmp cltd cmc sub insb mov out jge iret and adc outsb and gs sbb test mov inc movsb mov adc sar pop les sbb and cmpsb push repz jle mov and fstp xchg dec lds dec cli push xchg lods xchg xchg sbb xchg loopne xchg jmp add fisttp mov push inc dec sahf pop cltd cld or ja dec cmpsb mov test add mov push aas sbb std insb addl mov xchg inc scas or add pop add cli xchg push jbe cmp xor pushf jae sbb (bad) cmp push das sub inc call jb push (bad) into int xchg testl jo mov les sbb rcrl pop hlt mov cmp mov ret cli rol outsl adc cmp fistl lret push out jne inc in mov push xlat clc dec xchg pop bound repz fidivl insb add lahf daa jmp or cli dec enter push inc or ret mov enter cmp stos imul fist daa call push (bad) lret lods cmp or ljmp mov xchg decb push clc push sub mov sbb xchg dec sbb das or mul fstpt add out sahf mov mov mov movsl and and dec sub inc cmp jl aaa push adc data16 xchg aaa lods jb inc ror hlt adc inc call bound jne inc daa call outsl repz mov outsl daa jb fidivr jno cmp mov andl jmp nop inc mov jmp push cmp imul sub and mov mov (bad) add dec xchg push rorb (bad) js jb cmp test out push fucomip aad testb loope sub or pop or cmpsl xchg mov sbb ljmp mov mov movhps cs xor imul xchg push cmp lahf call outsl scas or sub test lods adc cmpsb jle int3 (bad) mov vrcpps (bad) mov imul inc push out xor in xlat loop pop jo inc std popf adcl fbstp arpl (bad) ffreep out lods and mov incl fsub mov ja push out (bad) cmp push and mov popa cltd sbb mov mov adc movsb pop mov xchg push xor sub rol test jg in (bad) cld loopne andb push push out es push mov (bad) xor jg xchg mov daa clc ret aad cwtl daa xchg leave lahf inc (bad) mov xor sub repnz subl cmp and scas aam add jmp and add arpl mov jnp (bad) fdivrs cmp in out or scas or push mov daa sahf test (bad) lds loopne mov push hlt xchg jns pusha into daa mov aam nop push idiv sub loop out ret jb icebp xor xor repz mov cwtl mov data16 mov push push in into mov int3 int3 jno lock loopne xchg enter dec mov push lret inc mov cmp and cmp lret cmc dec ficom rclb mull mov mov and mov adc rcll movsl movsb mov test adc xchg fsubrl (bad) cmc add loopne ret sub inc and dec in cltd int3 out ret add push push stos clc je test cmp imulb vcvtss2si or adc (bad) or es nop dec in aam push and (bad) cli fisubl sbbl and ret push data16 push fcoml leave sub ret mov in mov mov jnp xchg inc and xor xchg scas add mov xchg mov es cld sub pushw mov push cmc out cld lods mov pop aam pop dec imul inc mov push add nop jecxz hlt bswap push jmp sub pop jo imul inc test aas ret jb cmpsl and hlt sarb and pop lock jae mov dec mov movsb fbld aam lcall cmp stos xor xchg sub les outsl jbe stc mov lahf fidivrl (bad) mov xchg pushf (bad) mov jno daa push rcrl imul dec fistp dec outsb push addr16 xchg lret adc adc roll pop ror mov jb rcrl sahf mov pushf dec dec cld cld xchg pop inc sbb pop or mov add push je inc xor and pop cmp inc dec push test shrb or (bad) ljmp xchg sbb inc scas out in and jae popf adc mov cmp cmp lods cmp (bad) stos enter jbe pop rcr arpl mov icebp insb mov mov dec add dec enter cmp mov push leave fnstsw xor out mov push jns add xchg sti (bad) adc push aas xor aas pop mov xchg movsl aad fldt and in mul cmp xlat push push pop xor sbb orl push adc pop loopne iret call out iret sub sti add dec mul pandn jmp sub repz xor sahf jno inc test int icebp dec lods sbb xchg xchg test lds dec jecxz xchg fstpl lock or jno pop repnz insb fdivrl push pop out rcr jo (bad) gs xchg ja scas pushf fcoms fs ret imul out ror cmp xchg pop dec repz repz aad push outsb jbe sar lahf gs mov insb mov hlt xor pop xor fwait imul outsl inc jno popa lea push lea cld xchg xchg dec (bad) and lea pop ret xchg jmp (bad) adc cmp icebp ds jo jmp jb push mov (bad) mov in mov loopne push dec cmp lret mov mov rclb clc cmp fwait inc pop cmp adcb pop fldcw inc test bound hlt test sub dec cmp mov push scas pop nop xchg sbb dec pushf mov cld pop xor mov rcl clc test (bad) push mov inc scas inc sub movswl mov or in sti movsb add sbbl jno int3 pop cmp je mov int test cmp rolb jl test add pop or jp mov fxch and mov dec ret outsb jo cmp daa dec jbe lods push ficoml pop fistl adc out repnz mov cli rolb sub add out fldenv mov lods pop sbb jo mov std pusha std and sbbb pop outsl adc fistp jge cltd or mov in std (bad) mov mov popa fcompl stos cmp jnp loop jae xor into adc popa cmpsb pop ret sarb nop fimul sub (bad) out fs repnz add mov pop add popf out fnsave cmp push popl push rcrb sahf loope adc lods gs das shlb sbb lcall addr16 xchg jl cs insl mov pop aam fimul mov test jo loopne push ljmp in lea ret push lods jmp insl mov fmulp pop mov addb in jmp nop out (bad) idiv in sub push aas incl lret std cli sub test dec cmp lods sbb xor cmpsb test popa outsl leave ret mov data16 xchg arpl gs (bad) lret int3 fstl cmc addr16 push sbb xor shrl ret sub fnop mov cmpsb sbb addb push test or pusha inc xor mov xchg into jbe sub adc ret out (bad) xchg and test dec ficoml stos mov lods into mov pop inc shlb or mov cmp aam rolb nop or ds fistpll push lods data16 xor and xchg sub and or (bad) dec popa scas jmp fadds mov pop jns dec add je push fiadd adc sub adcl icebp (bad) sub or xor stc push jnp les nop daa jmp pop or xor xchg stc repnz adc inc inc ror mov mov add lods mov or dec sbb (bad) test and lea inc sub mov push and nop call paddusb jne pop push cltd push stos (bad) int3 insl jp cmp hlt call movsl sbb inc loope and inc sbb push jno or inc cmc repnz hlt (bad) bound or aam mov dec insl call inc int movsb arpl out loop (bad) insb cmp lods dec lods jge pushf mov jl nop dec loop jp sbb or cs jle in sbb xchg dec addl sarb xchg std popa add xchg mov pop cltd aam les ljmp add gs dec xchg dec add lds outsl call mov lahf sbb iret and out mov sarb push in dec test push addl and rolb push (bad) mov xor jb out adc push repz lods cmpsl bswap das dec add jnp faddl int3 push mov pop outsb aam rclb mov outsl loopne jp cmp and adc dec movsl jne push cwtl cld pop sahf xchg mov fxch mov insl leave push mov and mov fcmovnb jns fsts or sub inc subb addr16 sub xchg cmc mov mov fnstcw dec insl xlat mov mov or in in or aas inc adc jbe cmc dec and test adc sub (bad) sbb xor mov sub mov negl or ret mov shll add mov adc cmpsb jmp xchg fcomps dec ss into xchg (bad) xor movl xchg add loop icebp pop (bad) inc and int3 (bad) mov cmp or mov int3 outsb loope push adc jbe inc xor jne adcl xchg mov movsl fmulp test out nop lahf and js dec out cld mov ret xchg sub bound xchg jbe push mov out pushf mov or outsb std shlb data16 mov cwtl or popa (bad) xor and and pop push mov mov idivl or (bad) imull loop dec pusha xor mov repz hlt mov das xor (bad) mov or xchg stc jge jl repnz lea push sbb dec mov fisubr sbb int3 cmp xchg (bad) aas mov imul and or or push arpl sub inc adc cs pop es xor pop mov sub (bad) ret aaa sahf mov (bad) call jbe orb ret xor xchg mov loope int jg or negl imul das xchg adc aaa movb inc add inc mov icebp pushf cwtl pop push mov outsb inc stos adc leave gs pushf mov sub and dec repz mov add pop rcll mov (bad) rcrb mov inc push das pop (bad) test jae xlat idiv les xchg popfw mov test cltd iret mov shll xor inc adc dec ret dec jae dec mov insl inc sbb stos inc in jne pop (bad) cmc jnp outsb int popf adc jns mov stos inc and jg fistp out xchg push pop mov cmp stc test xchg fnstenv jae ret jmp sub inc jmp pop sbb lcall mov cmpsb xor (bad) insb jmp and adc hlt mov iret xlat addr16 rcrl not pop sbb inc mov xor push mov repnz push adc js addr16 iret sbb xchg daa aas in sbb gs sbb cmpsl xchg xchg pusha ja lds mov rep xor cmp cld stc ret push lahf xlat lds adc les std in pop inc dec stos xchg cmpsl cmpsb arpl lret jb pop dec sbb sarl adc sbb sub lock das cld push mov push inc lods adc pusha xchg call ljmp sub imul push std add adc push mov rorb rcrl cmc sbb mov adc adc xlat xchg je nop mov add frstor aam push test xchg fwait cmc mov push loop dec ljmp shrl sub js and jge iret jb scas dec add dec cmpsl and or pusha sbb dec xchg mov fnstcw jmp xlat lds push inc sti cmp jecxz mov nop inc ja sub cwtl fwait (bad) (bad) push aam test pop mov sbb sub out or cs or lods and mov adc lret xchg mov mov cmp or in jmp (bad) dec fisubl jle aad sub fstps jns jp shll mov push testl adc add inc lret out push inc add or jmp jge repnz ja mov imul mov leave (bad) xor jo jp xchg add jo popf out lret or test jmp push xor sub pop mov sbb push xor shlb push (bad) mov aad adc sub je mov push jmp test cmpsl or cmpsb push xchg movl in or ds xlat jbe mov into pop jo scas testb mov shlb lcall push pop jg fsubr aad xor movsl mov lods andl push scas sbbb xor sub adc int cli mov test jns jg lcall or out jp cmpsb sbb fs cmp inc loopne push bound stos mov stos popf xor sub and pop adc test movsb repz xorb jge jnp ds inc fsubl mov inc inc out lds in adc push das mov mov adc push dec push xchg dec lea or ja jl xchg js xor xor or pop aaa mov mov iret fst gs xor cld int out pop mov push orb sbb mov mov mov xchg pop or scas and nop aas rorl pop lods (bad) and test xor sti sbb mov pop pop sti fwait sbb leave mov stc jae sub lods sub inc call xchg lds addr16 aad mov jecxz and push mov sub cwtl iret dec sbb or jecxz lods mov stos or xchg xchg lea or test lock mov fiadd sti (bad) xor rcll (bad) mov test lret or sub (bad) xchg bound aam movsl pop sti cmp adc das dec sahf inc cmp and jno in addr16 xlat cltd xor dec or jmp rclb pop icebp aad call sub rcll scas pop cmc xchg cmc lds sbbl in xchg inc icebp adc pop push or push cli sub subl ret sbb insb mov sub push lahf mov sti sbb dec pop in mov mov jno cmp lahf adc out (bad) cmp (bad) xorb mov iret and scas cmp insb xchg push adc aam xchg ficompl adc out in imul push or xchg loope add or pop dec int3 xor (bad) (bad) lcall ret sti dec or andnps xor sub push sar or daa mov dec mov cwtl repz loope (bad) fistl call dec fwait inc xchg sbb xchg arpl pop adc bound and adc loopne popf test out sbb sbb jge mov and jo ficoml out pop sbb es mov adc pop std mov push movsb push sub xchg or (bad) or clc std push mov addb xor adc push cmp or ss jb or mov (bad) jg movb or rcrl mov xchg iret sub loop sbb or jnp test push out xchg test mov aaa sbb mov adc sbb call lcall xchg popf mov mov lea or insb mov mov dec enter scas sbb xor mov hlt xchg pop jp inc fs inc adc mov shrb int dec fsubrl sahf pop sbb out cmp add sarb addl add fist mov cmpsb pop jmp ret test cld fldl out mov stos test enter fcompl mov icebp int3 xchg imul les test imul data16 clc out adcl jg aas adc jecxz (bad) xchg adc fisubrl dec mov and mov loope jmp ja push out (bad) cltd fwait or xchg imul iret or add push mov test fwait jge jge inc ret movl movsl popf xchg call xchg pusha nop stc and jg out pusha loope hlt inc xchg lods stos je xchg cmp mulb or jae cmp mov dec (bad) leave pop cld lods mov sub in ror in push xor sbb dec inc lods test insb leave test enter insb test mov pop dec mov popf repz cmp cld mov pushf fild jae ret mov in (bad) imul imul test xor mov jbe dec mov sbb pusha cmpsb ret add mov and es movsl sub repz xor jge loop int3 jno enter (bad) push mov es sti xor std add dec dec mov mov sub cmp lahf jne mov dec jnp lea cmpsb arpl xor inc repnz ds or in cltd pop cmc test rorl jbe popa mov stos jg pop mov cmpsb stos pop lahf adc repz idiv or mov cld (bad) xor or cwtl or sub into popa xchg push inc addr16 add adc sbb jp pop mov call test xchg push repnz mov sarl divb aam outsb adc flds in sbb ja mov js sbb in lfs jne popf mov pop cmc sub cs (bad) js push stos push cmp mov add push or lods movsb scas dec insl lock loop cli and adc and add and (bad) jae jle ss frstor push aas mov (bad) xchg jns subl cwtl test (bad) fdivl testl popa mov outsb not int mov inc enter (bad) push or mov stos inc ficom pop add div lods pop and dec adc jl dec dec or hlt mov sub push push inc sub and jbe jne mov test pop lcall xchg and mov cwtl fistp pop ss sbb pop lret dec cmp mov jbe imul jl mulb je ja icebp push (bad) jle leave out icebp push or xlat xchg test inc or lcall and int3 je (bad) sbb jo xor push add sbb pushf insl inc xchg jl xor cmpsb dec pop lods inc mov pop mov lret ds stos jp push mov es pop or in nop add fmuls ret xchg jge sub call push add aaa mov aaa mov fistpl push push and inc ljmp enter jecxz jo jbe repnz out iret cmp in inc jns insb jmp adc xchg ds popf loope rorl cltd dec out loope inc adc mov fadd call pop inc les sub push outsb pusha sbb sub and into leave ja push sub fiadd jbe push rorl rcr pop xchg lock xor sbb pop dec mov ja imul adc out lds xor mov insl adc pop cmp int xchg xchg out je or mov mov outsl dec lds pop dec stos lahf jge cmp pop jo jg leave out or sub sbb ss lahf push aaa jp sti pop sbb movsl adc push mov enter mov in sarb mov fnstcw test push lock nop and inc inc ss ja push stos jmp leave adc xlat mov inc mov (bad) jge xchg mov ja xor stos fs adc mov addr16 add in lcall dec popa int3 mov lahf ficoml dec pusha outsb lcall fs mov jno xchg mov and test dec xlat mov loope inc jb out xor jns in push out in cwtl cld push mov or lret mov pop or lock mov mov jns stos dec cmp mov cmc shlb ljmp mov xchg sbb aas movsl jae inc pop repz clc sti mov sbb push jle mov outsb cld frstor mov or add dec xchg rorb jae orb sbb push jbe cmpsb movsb sbb pop pop test push add xchg jmp pop jo dec jle sti fmul iret mov adc les (bad) insb cmp fmul inc push aad push dec push and rcl mov (bad) repz mov js lret xchg mov les lods movsb push push inc adc imul mov out push je inc push (bad) push (bad) xlat add sub and jmp ss adc sahf cmpsl mov js dec outsl rolb out gs inc dec loopne jl jmp out ds data16 push jg dec sub mov (bad) pop mov jbe sarl test mov inc test sub scas cmp push mov jne lods test mov imul pop fnsave mov gs pop cmp jne test xor test (bad) pop inc adc or pop jae rcll (bad) jp mov dec adc xor into mov pop inc xchg xchg jne jp fs mov (bad) pop mov dec pop inc mov repz insb gs jno out inc xor insl mov lods hlt test dec inc or lods lods push pop fidivr addl jnp fisub mov adcl gs mov mov lods fldl mov or push in jns mov mov add movsl pop dec popf (bad) popf jnp imul push xchg xor fsubs xchg and push aas dec std xchg jo sar test jg dec test test rcll mov pop xor mov cmp fild xchg mov cmc mov test mov test movsl sub or in push or mov mov iret mov cmp test cli cmp cmpsl dec popa fstpt jg popf pop inc pop (bad) fs lods pop (bad) adc loope and (bad) mov fimull inc or cmc push and mov add inc inc es pop mov in int or stos lret sbb imul cld out rcrl rcll mov xor or call imul repz inc stos in xor out lods fildl xchg xor scas push inc or jl pop dec mov jbe iret aaa movntps inc push lods jp inc fstpt and xchg or or mov ja sub xchg dec mov add in dec lods (bad) jmp test xor push into push test inc push adc sahf (bad) jne fildl bound popa inc mov mov iret shrb mov ret std sub pop pop lret or mov jb (bad) ret sysenter outsl jo mov fs aaa (bad) jecxz int mov push outsl pop fs movsl ljmp mov mull lret in mov adc jecxz stos xor push mov add sbb ss add xchg aas or cs test lret repnz mov outsl mov mov mov (bad) popl pop mov adc pop lahf cli cld je test push xchg push cpuid into mov push hlt mov popf repz (bad) xor add xor fidivl out shrl dec fsubrl jecxz or or in scas or jp push fisttp hlt in pop dec mov adc pop out push imul (bad) adc in pop jecxz and mov add in mov jge jno fld1 and add mov lahf rcrb jl out pop xchg das imul cmpsb cs ds cwtl add xor sbb (bad) aas loope mov (bad) std mov jle and sub pop jp movsl jmp push mov fsubrs add out fist mov or jb pop mov mov mov (bad) repz andl aad and in sbb inc je push enter shrl xchg pusha ss cmp mov pusha adc shll add lret mov inc sbb lock jo adc push addr16 lock or cs and xor mov sbb int loop push pop out and js adc jmp cmpb (bad) stc addr16 ljmp loope mov outsl in (bad) popf xor xchg test push sbb xor imull fimull pop xor jbe add stos subl pop mov pinsrw out in addr16 in push adc xchg jbe ljmp mov xchg test pop push fimull inc sub cli arpl inc loope mov jp popa (bad) mov aad in mov mov cwtl add test int add outsl push cmpsl cs jmp aaa xor outsl xor loop sti xchg xorl jbe mov xor imull mov lock mov mov add into rcll cmp pop xchg enter xchg mov andb sahf fldcw push int stos push mov movsb fimul out pop (bad) (bad) sub leave leave loopne xor or clc mov mov push out mov mov push movsl jle cmc mov lret nop aaa mov dec mov lea mov test ss notb mov cmpsl xchg out xchg xor cmpsb js and sbb sub xchg (bad) testb jmp dec cmc and dec sbb pop cltd in insl mov or test (bad) jae sub aaa push out (bad) mulb mov movsb mov cs mov test insl xchg dec and fisttpll test test lods (bad) roll enter mov cwtl gs cltd aad dec sub push add sbb push addr16 jnp xor add data16 xlat cltd stc push rcll int shl xchg stos xchg lds and mov loope out mov sub je fbld xchg jbe pop cmpsb (bad) std fimul enter adc jbe stos pop js cmpsb xchg (bad) cld mov xchg subb pushf mov (bad) incl mov cmp cmp and cmp xor push mov adc insb adc lahf pop and inc (bad) lods jge xchg daa loope lea sahf lea xchg pop pop bound scas movsl aam pop lds loop mov push mov mov sub andl jl jbe sbb mov orb imul mov xor outsl cmp xchg lods bound push xor pusha pop mov dec adc or mov push inc in cmpl (bad) push es xchg cmc shrl repnz inc jb or and test cmpsb ja pop outsl xchg push inc iret into ja or or (bad) sbb vmovapd sti mov js (bad) sar cli mov call push or xchg cltd jae and adc mov pop pop in and mov xchg mov mov pop sbb and loope pop mov xor mov gs xchg test inc mov nop inc dec adc jnp nop fidivr xchg inc pop push das jg es mov and test cmpsb cs mov jae xlat push (bad) shr mov cwtl out cwtl sbb adc push in inc lods mulps mov pop sbb clc jle jle add cmp push fimull xor cwtl mov (bad) dec add mov fwait pop push flds push push jb mulb add jge add lods in stos sub xor (bad) mov pop cmp hlt cmp jmp or fbld cmp jb aaa xor test lock jnp sti xchg js iret add mov inc jnp out es stc sub mov sub mov lock mov mov push mov adc mov add add lret or test sbb add data16 mov shll sub (bad) cmp mov sbb fyl2x xorl ds or popf xchg sub adc push insb (bad) mov (bad) jmp in xchg std cmp movsb movsb ss lds ljmp rclb sahf add mov fs mov addr16 pusha mov mov add inc rclb inc sub jbe mov dec mov dec popa in ret popf push xchg jns add jg push add pop test push dec insb xor add mov test clc cld xchg sahf jne push lock lock mov shr xor shll fs cltd inc or pop movsb xor jne jge stc cmpsb pop mov sbb insb cltd hlt mov movnti sbb jg mov repz xchg (bad) mov jns dec jge pop inc adc out or jge push mov jbe cmp lcall jnp push test fidiv inc or lods inc movsb ficomp sbbb test pop repnz div cmpsl jg mov and cmp dec mov xlat adc jae inc cwtl fsubr jmp cmp and clc push mov sub arpl test cld outsb sti push xchg test xchg jo sbb dec cmp adc adc push lods ja xor mov aaa cmp xor lea imul in cmp pop dec add jnp mov push dec (bad) data16 dec xchg jecxz (bad) ds mov xchg dec and notb add std (bad) jbe jmp jae push sbb loop inc adc xchg out in xchg or out push pop mov and mov and pop or stos bound xor push jb sti lea shrl xor push outsl ja jnp clc imull mov in les pusha (bad) jmp aam in ljmp insb lods mov inc stc xor into mov pop cs sbb jg jae push jb dec cmc xchg push or pop icebp or add mov xor pop mov add scas xchg (bad) in cld int3 xor inc adc inc and cmp decl jnp in adc and mov mov (bad) push jb mov mov mov imul lret fisubrl stos out mov ljmp add mov mov movsb pop fucomi ss jl lds mov jecxz lds xor mov pop cmp cwtl or pop aam lret push shr sbb mov sub and sbb loop sbb pop dec mov repnz pushf mov (bad) and ds sbb xlat pop sbb lods mov pop xchg mov ljmp clc pushf inc push add les imul scas (bad) mov lds mov lret loopne push pusha mov aaa adc push jnp push clc in lock fwait or xchg adc das add cltd xor cwtl andl push (bad) enter fisub xchg push dec aam sti sahf mov loopne aaa dec (bad) out nop rorl jg aam ret out xchg xchg pop xor in xchg sub jne int3 and iret cmpsb test gs sbb es xchg mov lods jmp jle addr16 sbb push sub xor xchg sbb dec (bad) push shl xchg (bad) js jo nop roll jl xchg xor cs setle lods xor xchg fbstp cmp xchg in das adc push inc icebp mov test paddw out fnstsw shll hlt xchg lcall mov mov xchg xchg inc repnz add mov out out sbb aad mov dec sub ds mov es movsb mov scas fnstcw xchg pop cmc mov jl cmpsl lcall movb cwtl pop mov mov pop xlat mov popl xchg insb dec pop sbb jge xor leave es repz dec jne sbb adc adc sbb xor imul movsl in xor push sub or stos adc mov imul inc push push fs das push xor popf outsb test inc and out push mov into cmc iret mov fstpl adc sbb stos pushf test and mov js in pushf jge pop pop sbb daa cmp jg scas dec (bad) and dec repz mov inc pop sbb lcall call (bad) insb lock test xchg fdivrl ret ss inc loop jno imul insb in and add ret mov inc cmpsl inc in pop stos push push or mov test in imul lock imul mov jge frstor mov jne push push sbb enter out fistp mov in cmp fdivl mov add fisubr dec mov xchg push incb cmpsl mov add add mov jbe fnstsw pop jbe aad das stos ret clc aad pop pop xchg add aas loope jbe cmp enter fbstp ja sarb cmpsb aad ror outsl push pop stc fistp lcall mov into xor fcoms fisttp xchg inc mov xor loope out add and adc iret adc call pushf or ljmp ficom pop pop sti cmp mov nop xchg adc int (bad) test out dec pop popf pop aaa (bad) push mov (bad) jl aam aaa push gs fs dec adc lret adc mov imul out das sub pop icebp es pop repnz pop (bad) in mov and xor mov rol lock aad out aam ror cmp mov mov or test mov stos push push push add lret sub push outsl ficoml xchg jmp in scas std int aaa into and aaa sbb xchg cmp inc sbb or ror fsubrs sar test jmp (bad) pushf or loop cs out xchg dec (bad) mov (bad) fnop addps lcall ss inc lods cmpsb xchg fistp sbb test (bad) push (bad) int mov and xchg stc sahf cmc icebp ss cmc std cld mov jne mov sub mov mov fmul push push fldt xor insl xor cmp js cmc sbb mov or js (bad) int3 pop xchg pop sbbb cmp or xor xchg dec sub mov xchg and dec lea mov (bad) gs cwtl inc mov imul in sub xor push stos js inc mov pop push xchg sub push pop pop jp in xor (bad) mov lcall test cld (bad) xor ret dec lods or mov icebp (bad) sub mov jle jp pop xor sbb mov mov dec sbb stos lock cmc int and push xchg push cmp sbb outsb cmp js xor jo scas jp enter dec and nop push xor push scas test in and ss xchg aad lret fdiv sbb pop sub pop mov cltd adc scas aad dec jo je ret xor and idiv mov rep xor pop clc dec mov pop sbbb mov (bad) pop xchg mov or mov xchg push sti fisttpll repz into pop sbb sarl nop add sbb in or push add addr16 daa pop jne jl and xchg xlat dec jnp add mov fs das jo mov jbe adc fistpl push addr16 pushf inc insb mov addr16 jmp fwait sbb adc inc adc mov mov adc es ljmp inc jns idivb aam jecxz pop repz (bad) and jl mov movsl and test push push mov cltd das cmpsl lret loope jo and cltd ljmp jne jmp (bad) jbe mov (bad) scas xchg pop jmp es out test xchg fwait mov sub jecxz fnstsw pusha xchg div lds mov inc (bad) cmp (bad) aaa leave push jge push jg dec test dec into push add daa into sub scas idivl jg xor mov push mov es fucom addr16 daa cmp fucomi sbb or jmp out jl mov test xlat or sti dec shlb mov cmpl ljmp rorl shr repnz fimul sbb xchg mov push (bad) repnz cmpl sbb pop dec ret jno xlat pop ja aam int loopne fadds repnz (bad) sub stos xor cmpsb ret jg imul mov sbb push cmp jmp dec addl mov push scas daa scas test out cwtl lcall mov int ljmp inc xchg rclb test (bad) ljmp jecxz xor (bad) jbe out sbbl mov mov into inc in shrl sbb fcoml mov jbe adc js pop inc fsubrl scas fsubl aad ja mov ds mov xchg icebp test stc stos and jns mov arpl mov add sbb cs (bad) adc xor neg lret ljmp mov in inc xchg pavgw cmp (bad) mov test push add cmpl mov movsb daa adc sub or movsb dec jmp scas jmp dec ss aam daa daa sbb leave fldcw jne ss jmp (bad) add sub jae sub ss dec or (bad) add loopne ljmp cmp mov into jae ss sti mov imul js fnstenv cmc mov cltd hlt (bad) shll fwait lea jl lret daa jo lea stc xor gs push lea sub in dec xchg inc mov (bad) and lret sub mov dec aaa icebp sub adc int3 outsl dec stc mov pop pushf pop call cmp add es push ljmp ljmp (bad) jg xchg jle sub pop (bad) lret mov sar xor (bad) xor xor outsl rcrl or cmpsl loop mov test in les sub roll and xchg mov es add xchg xchg jl or pop imul ljmp imul jbe mov pand dec clc out mov test sbb mov mov imul and fcomip push inc fsub in jo push sub lret or test decb jl pop pusha in adc sub out mov or daa push js add into mov mov out jmp sub rcrl divl fildl es xchg dec (bad) (bad) mov pop rcrb mov sbb jp ljmp dec jbe rorl sub out adcl rol in mov dec add push les stc in fdivl imul cmp lods mov xchg shlb cwtl (bad) stc call jp popa loop in jmp orl pop and pop pop popa insl mov clc movhps xor jmp mov addl cltd call mov mov sbb cmp add out popa sbb adc jne,pt clc adc leave std xor jbe pop lock push fcmovne xchg and es arpl mov sub outsl add pop jno ljmp data16 imul ret lock adc dec pop sbb addr16 push int (bad) pop (bad) cwtl pusha insb insl loopne mov in adc jns jecxz std dec lods orl insl popa stos pop (bad) fisubr icebp jge aas in or (bad) jno ds js aaa sbb ja xor dec xchg sbb jne es pop lods ljmp mov cld imul bound push cmp movntq mov outsl or jae,pn mov (bad) mov cmp je and test xlat xchg mov out inc es mov jl mov and test cmc xchg push jp gs hlt out jl cmp rcr cmp in test sub test movsb or rolb jnp sbb xchg sub adc dec popl mov int3 xchg je mov sub inc mov hlt cld jae dec movsl mov aad push decb fldl fwait mov mov stos jae push xor popa add mov call imul pop shrl mov daa and (bad) or stos sub (bad) pop es dec movsl jns mov xcrypt-cfb cmpsl gs sbbl fwait xchg or mov adc (bad) enter std pop dec push cmp push ret scas (bad) adc jae mov in sbbb aas jp xchg pop jne cmp sbb and movsl imul adc in pop fsubr push idivl (bad) popa lcall jmp (bad) shl and mov test mov inc popa pop xchg cli add loop sbb data16 mov dec push ficomp jp enter add dec jmp mov xchg (bad) mov loopne sti in jnp ret cmp or and enter cli mov (bad) lret xor scas xor sbb rolb cli dec inc insb nop cld cld adc xchg push (bad) add mov (bad) leave sbb test rcl add bnd sbb sbb and ljmp jg jne and mov outsl ficompl mov mov mov or add std sbb xchg inc mov dec jl push jbe and xor insb pushf sbb sbb xor adc lahf jg or mov xchg mov mov sbb icebp cli call test jg iret add (bad) adc in aas adc mov xchg mov push fwait daa jmp mov fsubl xchg call lret insb scas cli sarb sub (bad) dec in dec mov jne in fwait mov fucomip int3 xchg adc push (bad) mov dec xor pushf xor mov icebp cmc xchg mov popa push sbb inc ror xchg jbe dec fstpt mov jno mov push or fdivl test loope jle aaa jecxz divb adc sub je jns stos sub lds int3 mov int3 lea mov (bad) pop loopne clc sub faddp or xchg sub stos adc mov sbb cwtl cmp mov adc sbb xchg dec js fstl repnz aaa rolb aam mov cli fs (bad) (bad) jp js outsl loope out icebp imul cmp dec bound jno repnz jg divb jo mov cs pop ror push sub in (bad) (bad) insl aam mov fcoms (bad) add (bad) sbb or inc fnstsw popa stos mov aaa pop lcall push call lock jmp xchg and push pop not lcall sbb call mov mov jge sarl jb stos sbb int3 mov mov outsl (bad) aad (bad) mov mov cmpl jge dec je dec fisubl fdivs repnz and xchg add (bad) dec shrl xor mov xchg cmp push jmp pop dec ja push popf xlat mov mov xchg inc frstor lea or lret loopne shlb sbb fimul adcb add mov add (bad) pushf or mov fimull xchg outsb ds inc mov mov push and fistpl and pop mov mov jp aad or xchg or mov cld (bad) xor (bad) jecxz cmp xchg sbb or push pop xchg movsb ja pop and (bad) mov scas jmp nop jg dec dec dec mov fidivr and push cltd enter inc mov mov rclb pop jnp pop iret dec popa ficomp ds (bad) cld lret cmp push dec mov push (bad) xor sbb inc cmp xlat jne sahf add and test negb mov xlat sbb cmp ja pop jns fwait mov vmaxpd lock push das nop adc clc pushf xchg pop aas cmc jmp sub mov (bad) lea es adc mov sub mov movsb xor xor cmp (bad) stos ret ljmp push xchg dec adc in repnz mov jl call jb adc xchg (bad) mov (bad) (bad) cmp mov inc not repnz mov jbe (bad) cmp shll mov movsl or sbb nop inc jle mov or cmp aas pop add or mov repz xchg xor stos sbb imul popa dec jno sub mov mov mov xlat pop jnp cmpsl loop dec adc into mov clc or pop dec outsb insb enter inc repz imul fnstsw mov in cld sarb ss push sub sub mov cmp inc (bad) inc or adc in loopne or push scas das (bad) and xchg add mov jo lahf sar popa jae leave outsl add in xchg push (bad) (bad) int pop or enter call outsb xchg imul (bad) (bad) add xlat jmp push divl xchg add pop jle fdivrs xlat and dec jno out mov cmp sub std out pop ljmp xchg adc test stos jmp orb mov outsb adc les mov pop aaa pop sub dec jb adc xchg pusha stos cli sbb mov add lods pop sub jo push ss aaa dec lahf mov cmpsl leave jb invd jle inc rorb and push addr16 enter jp lds jle add mov gs arpl mov dec rcrl scas push test hlt lret xchg lods pop inc sbb out push adc movsb jmp mov add and enter and lea mov enter push fs mov das icebp lahf aas out inc jne stc fs inc push and jle sahf stos test (bad) mov or pop stos incl daa (bad) pop test dec loope and xchg mov out lea mov and cli sub jmp bound (bad) xlat enter loopne sbb daa jbe dec cmp mov or testl std add int insl pusha in mov inc repz imul inc popf sub xchg sub mulb push popa sub mov mov imul stc nop dec es mov out add call xchg xor jb add cmpsl mov data16 xor push sbb jle (bad) loop mov mov mov or dec adc dec stos ret xchg xlat cmpsb mov in das or push addr16 das adc xorl mov ljmp and adc ja xchg inc and xchg mov jp cmp pop ret std je cld lock jle sbb stos inc xor xchg stos push dec daa lods enter inc rclb adc mov les fbld stos outsb fmull test mov dec xchg jo cmp adc jl fucomip js sub mov popf addl mov lret scas imul nop jg inc pop fs lret int lds pop notb movsl pop pop jmp jo and lcall mov lds (bad) push sub mov les ds sub and cli mov lods cmp inc shl and or pop or mov push adc sub stos (bad) pop push stc in fucomp clc pop insl subl ss cli sub std cltd push mov popa (bad) ljmp push jne mov push es or mov or in lcall cmpl lahf cmp cmp movsl mov imul dec outsb mov out adc ss jne xor into test in insl cld mov or js cmp shlb hlt out lods (bad) xchg mov jnp mul je lock fisttpll cmp xchg sbb gs mov fldcw cmp cmp sub cmp inc sub sbb mov insl pushf es in adc and fisub push and scas sub inc mov stos mov in cwtl data16 cmp aad popf push popa loope icebp push es pop std insl mov test jne or addr16 jb sti pop dec testl fld jp shll outsl dec pop cmp lods mov push out dec lock mov push addr16 mov xor movsl iret cmpsl sub xor push add std push mov push scas inc sub dec mov mov sbb dec cmc push lods dec call int jae insb sbb icebp negl mov call jb out iret xchg sub negb fucompp jo ret (bad) sti sbb je cmp push xlat in xchg pop xor pop mov mov test inc mov and fdivrs aas packuswb ss xchg daa lahf fisubr cmp sbbl mov les cld and dec or jmp imul pop dec jmp and inc jle adc xchg mov dec pop ret push sub je sahf cmp leave mov shlb pop lods xchg lret ja dec adc test add sbb sti inc into and pushl mov xchg lcall jo iret mov cld xchg fnstenv jmp dec add mov cmp inc push sbb ret jne fs lock mov outsb mov bswap adc fadd push out shlb les cmp fldl rorb outsb movsb jmp cmc je,pt mov rol outsl xor addr16 dec xor lret popl or inc out stos mov out not enter push fisubrl test jbe adc popa hlt pop mov jl xchg push mov popa fwait adc gs dec mov inc adc xlat fildll ret fsubrl mov mov adc mov mov adc xor push xchg or (bad) mov cmp femms imul fisttpl add leave ss arpl mov xchg sbbb icebp and outsb cmc sub out jmp loop mov mov lahf jnp ja in fnstsw inc push adc into loopne jmp ret jmp (bad) mov cmc (bad) xor add sub or jmp sub imul sti mov fldl or cmpsl enter sbb push push ljmp pop push fidivr adc ljmp xor mov xchg cmp fist (bad) fwait sti in lcall adc pushf adc xor pop add cmp js jo jl andb bound add or lods xchg outsl fsubl dec inc dec ljmp and int3 mov inc push loope adc cmp mov cmp xor xchg dec or jmp fisttpll mov push (bad) daa mov das xchg int arpl cs mov sub testb paddsb jae ds bound mov addr16 ret jns (bad) fnstsw repz pop push inc xor ja pop jg notb clc clc clc sbb mov mov xchg lret fwait andb pop cs fwait cmp mov imul js sub nop (bad) popf inc aas movsb pop sub or gs mov int sti jl xchg ss aaa fnstenv inc lods adc dec repnz sbbb jmp test ljmp loope push sub mov xlat lret lds and cmp cmp scas pop jns repnz mov mov jmp sarb xorl scas push sti insb jge sbb mov cmp movsl xlat add mov push or adc pop push bound ret sbb iret xchg sub jb add jecxz dec (bad) xchg hlt mov addr16 call push aam dec call pushf shrl inc add pop hlt adc pop insb jle (bad) mov jmp sbb push or sbb (bad) sub ror adc or call clc cmpsb fmull dec xchg out xchg jne cmp out push test inc test push test cmpsb xor out inc or xor lods or xchg mov or inc add lahf daa rcll lret ds cmpsb pop pop mov or sbb dec xchg sahf into and dec bswap nop and cwtl mov lds ljmp xor xchg adc pop inc insl cmp or inc mov movsb xor mov aam cmp xchg xchg jns add mov fcmovnb std sbb es adc clc shrl shlb sbb dec lea in imul inc test pop fisttp rcrl jbe add inc push test lea repnz lods lods inc lock dec adc jl in inc cmp cmp fimul jns push pushf ja sbb mov popa xor add pextrw lcall stos or ljmp ret test leave pop out dec push inc mov cld xor cmpsl jns push mov push sbb inc stos mov xlat or fwait jp xchg lret xchg jo aam jmp aaa jbe fisttpll stos jle cmp cli into loop mov fs std mov adc xchg adc mov xchg popl andps and mov test cmp ret mov je push and or jg mov enter lds sub fcomi (bad) and addl outsl popa add decl sub test cmp push clc inc xor pop stos cwtl rcrl popa repnz popf cmp bound dec sub sbb and mov dec cmpsl or inc in lahf sbb popf and out jmp fs xor and daa movsb mov shl call jbe mov jmp xchg stos gs mov dec mov fcomi mov sub popl dec fs imul loope daa mov add sarb pop sahf or push lea xchg cmp dec jae xchg xor lds in fistl fnstcw and adc lahf pop pop mov mov xor dec dec and or xchg test fnsave enter xor dec push out sbb call xchg shll push sbb repnz ret push or adc sahf neg imul mov pop or test xchg inc (bad) neg (bad) xor aaa addr16 mov pop ja jae ret ss xor cs lahf lret push mov cmp jo pminub cs das sti mov jnp inc out mov insl mov es in addr16 mov test xchg adcl cwtl adc outsl sti jae aaa stos pusha or lcall mov and ljmp scas ficom xchg fdivl jge stos test cmp mov scas lods add sub je mov pop aad mov jg icebp jo cmp sbb cs mov scas add mov mov imul mul lock xor push (bad) push out call mov pop sbb aaa loop mov inc xor fdiv sub inc loopne sbb je ret pop pop lret jns stos fadd (bad) (bad) dec mov outsl loop xor jbe jno rcrb insb lods das (bad) inc jo mov loope mov shlb lods xor test mov adc (bad) add mull or cmp push inc fs cmp push inc xchg test cmp loopne subl je loope cmp pusha int lret and adc fdivs jo lahf es xor sub and xchg test das jmp mov and push jae fwait xchg (bad) push pusha add or popf jne push (bad) push jmp dec loop pop (bad) (bad) dec pop dec lea in ljmp idivb lds pushf push insl cmpl dec push daa cs mov loop lds aam adc (bad) mov add out out or mov sub and and jo,pn cmp inc add push dec clc mov jmp jbe fs pusha leave and icebp sub in jmp orl (bad) rcl xor aad pop (bad) into jp jp add push repz push sub xchg daa adc (bad) repz popa pushf mov (bad) jle push lods push add fistpl pop outsb adc and push xchg fs push je repz ds test dec xlat mov mov (bad) add pop adc imul mov inc lea sub dec jnp (bad) mov or pop jns cli xchg scas orl cmp inc gs addl shlb es lcall dec sbb in aam xlat sbb pop sti xchg and gs push mov fcoms fwait (bad) lock data16 mov xlat xchg inc mov lcall aam dec jne leave sbb call inc sub or push stos test mov mov dec sub pop dec ret fisubr das (bad) jp sarb mov xor and inc icebp (bad) xor pop mov push aam dec daa loop fst test sub enter or test add sub dec daa xor das jo push dec std fcmovnb push lcall dec (bad) push cmpsb fisttpll push lock dec inc into mov mov shll or mov and dec in cld push adc mov outsb and test jns pop movsl inc stos and subl xchg add inc faddp loope mov imul es leave stos fwait push push ja xor rcl push pop push inc push int3 dec stos sbbl sti pusha xor loop jge pop mov add leave or lret ss inc adc loop fimull arpl ss into (bad) imul jmp nop stc lcall orl out mov adc cmp cmp xchg push pop xchg inc idiv xchg sar rsm pop subl (bad) rorb push mov sub xchg cltd jne fwait test dec push push jno rolb pop outsb enter sub scas mov daa daa push (bad) aas or fistp push ficoml fwait cld xor popf inc mov int daa lock mov ret dec (bad) mov jge pusha ss fnop mov lea (bad) mov push push jo or js sbbl inc sbb mov out adc shl sub popf rcrb xchg clc add int3 shrb lret sarb jmp jns scas cmp push pop push loop inc sub aad sub fcmovnu and jg cmp sbb or adc cmp and pop sub ja lcall (bad) hlt pushf jbe xor jl inc fs call add xchg adc cwtl (bad) iret dec xor faddl mov mov jge jo dec mov push pop fstpt (bad) sbb dec add dec popw lret sub inc das aam or loop out mov and testb icebp mov test cmp hlt gs repnz dec push cmpsl xchg (bad) int ja cld popa mov sbb push and xor insl in mov in or mov and jle,pn mov rcll or (bad) sub shl or or movsb loope sarb adc lods jl repz cmpsl jb stos push xchg mov sarb push mov (bad) jmp inc xor leave jo cmp mov sbb (bad) or je (bad) sti imul aad (bad) sahf rcr movl nop fimul pop lret xor loope jmp jmp sbb sub add or cmpsb push add adcl pminsw fisub inc int3 pop adc fwait lds test dec mov and (bad) xor stos daa add les xchg dec mov mov jo (bad) jb sub or push or mov scas pop cwtl vucomisd xor addr16 sbb push jl pusha scas call cltd leave jg and fisttp outsl pop cld sbb cmp enterw (bad) lea or mov add js inc outsl xor xor movsb pop dec dec fdivr adcl fs fdivs jle sbb xchg imulb lods or sbb stos clc xor jnp mov sbb lods and jb jmp or mov mov fwait mov push les adc jo pop xchg xchg push vpackssdw (bad) xor mov ret lds repnz dec pcmpeqd scas mov ds or mov stc pop fcompl or xchg das push out fisubr adcb inc dec popa add out outsb sub in pusha in inc mov pop js mov adc fcoml nop push cmc jnp jo dec dec int loop push mov lcall mov push sub jne push test sub adc cmp sub (bad) cmp popa (bad) add sub jno xlat pop addr16 xchg repz loopne add mov inc lcall cmc aam jg mov inc rcr cmp ljmp jmp inc mov cmpsl loopne,pn xor mov mov cmp in call sub int sarl mov ja mov xchg inc jl addr16 movsb push loop nop scas mov subl fsts or scas aam or fistp lcall sub mov nop into sbb lods imul fstpt in (bad) inc dec mov adc lods in and and (bad) stos movsl pop pop xchg push js movsl push int3 mov inc out insl fildll pop fmul int xchg mov rcrb repz mov in hlt mov pop stos push ficoml mov incb stos cs (bad) call (bad) js mov movsl xchg movsl test (bad) out mov loope repz lret pop dec in ret add divb mov adc in jmp jbe fsts fstps adc sub xor mov sub (bad) (bad) or (bad) fisttp das std mov mov push mov xchg or cmpsl fidivl iret lock ja sub psrlq push pop inc sbb adc lock adc jmp fnstenv inc jnp cmpsb call or pop jno pushf lahf test xor stos je jae fmuls (bad) dec call repnz mov cmp xor mov rolb or mov jecxz cmpsl sbb je adc mov or mov pushf and bound jecxz inc in lods pop repz sbb int cmovo dec push xor sbb push sbb pop hlt sub bound xor lret pop rcl aas test test rcl aas fidiv adc outsb loope (bad) jmp mov dec movb and jae xchg inc out inc mov scas nop std mov cltd mov jmp inc mov cmp cli sbb ret adc lock popa add dec or aas stos mov mov jmp dec cmp push notl adc pop sbb cltd int3 push add rclb dec in lahf jmp icebp or sbb mov das adc mov pop rorl ror dec imul js push das push inc pushf push inc push or sub and cmp sub and clc insb sub into mov lret roll cmpsl (bad) xor inc lret mov out push sbb aam movsl outsb test nop gs (bad) jae mov inc mov mov mov scas in (bad) in pop es push out test xchg push push imul mov lcall int jecxz sbb mov fwait dec jecxz inc outsl xlat pop loop leave mov inc jno dec and add push inc setg push jns xchg pop out scas xchg add mov test in adc xor push stc call (bad) jbe dec cmpps sbb ja push sbbl cltd mov mov movsb and mov popa ficompl fdivs and jo aaa scas push cmp aam sbb imulb arpl pushf mov pop insl ds (bad) insb (bad) in fistl (bad) mov in fisubrl dec jnp neg in and sbb cli dec in add push cmp push nop ja pop outsb out cmp fldt mov (bad) xchg lret dec test push daa and xchg add and pop jne xor inc push xlat ss jp (bad) sbb addb andl pop mov fstps pop xchg sbb and push rcrb mov pusha ficoml xchg jle mov or test add addr16 fisub test and out ret xchg (bad) mov es sub push sbb imul mov dec jle sub sarb loope (bad) xor (bad) jmp sub mov adc push cmp mov insl pusha pop leave sbb jg cmp stc push cmp push test cmp or xor lds fidiv stc (bad) sub lock in fcomp stos jns test fwait jne mov dec adcl xchg fcmovu sub das imul js push mov fwait out leave push bound test in movb mov aad pop rorl mov pop mov xchg into (bad) dec lock jbe add jae pop aas imul add es add repz lods pop sbb adc inc jmp push mov cwtl mov repnz shrl push fcompl notl lret or stc mov repz sbb xor mov sbb iret pop xor nop dec adc mov fldcw xchg mov jle ret xchg popf jo fsubrl leave jecxz xor push mov mov fmuls dec lods shlb or nop push nop or inc xchg bnd push mov sbb in add aam and jp xor rclb in adc jns mov push dec jmp fxch push imul add mov out addr16 sub inc pushf xchg pop jnp sarb mov mov jecxz fidivr and repz mov loope sbb fwait dec push xor gs je,pt cld cmp and (bad) or push adc imul jmp add push std xor lcall dec push mov push push sub or dec (bad) in nop and push iret inc int3 mov fldl adc movd in add fwait rcr xor sub dec rorl mov sub push adc xorl mov outsb xchg imulb int3 arpl cmpsb mov xor (bad) lock pop dec test add pop inc jge sbb arpl lahf ficoml xlat add fstpt stos and lds xor pop adc mov sub dec mov add jge,pn das mov jno inc (bad) push dec outsl call (bad) push dec les cmc dec dec loop,pt rolb pusha xlat lock test mov setns cli test sahf xchg (bad) (bad) and (bad) popf imul add pop mov popa in imul sub sbb out lods in aam xchg scas xlat dec pusha sub pushf sbb adc add jp rcrb cmp rorb mov std ret and lcall pop dec imul imul mov in push pushf xor push sub mov mov arpl mov aaa jp add fsubs loopne ret lret shlb ds sub aaa cmp (bad) icebp (bad) test sbb les push add lock or loope outsb dec aaa push push mov inc add xor sbb push sbb jae adc sbb lea ss mov lock inc mov out inc pop pop mov mov jns jno imul shrl ret bound xor push sbb pushf and push push sbb and test push insl dec push dec xor cmp mov cmpsl dec xchg mov pop (bad) test bound pop and fisttpl sub adc outsb inc mov pop sbb rclb sub sarl out xchg vcvtsi2sdl adc dec jg mov add cmp loop rcl outsl cmpsl into sbb xchg add je nop and mov mov inc jnp adc imul scas in (bad) outsl popa mov mov mov mov add cmpl fwait enter mov dec popa add sar in jle pop mov mov dec (bad) adc xchg orb dec and xor jecxz dec mov arpl xor lock cwtl dec in sub add je sbb sub ja popf popf jle loopne roll lods push add adc or daa mov xor jl and inc sbb ja sub cli sub inc xchg stc enter sbb mov pop push stos cmp or and js xchg loop bound lcall mov or fstpt add adc xchg mov ljmp jecxz fcmovnb bound push mov fiadd fcoms mov aas sbb ss pusha loopne mov push pop jb inc stos cmp fwait cmpsl cmp jns xor xchg lea and adc pop xor test pop adc mov pop ret sahf (bad) cli dec movsb push sbb jbe fstpl lcall aaa push xor shlb push bound out cld idivb jnp loope xchg push pop orl add jle movsl add ss fcompl lods fisttpll mov outsl (bad) repz das adc scas outsl adc add pop loopne mov fbstp push stos xchg pop push mov xchg rorb rcl cmpsb (bad) lret or push xlat pop incb divb mov adc cmp jmp ljmp rol mov inc iret add jb adc into dec or leave (bad) xchg add unpckhps out and cs add push sbb push sub sub add mov pmaxub cltd shl push jge push or test add add push jo sbb inc stos push stc out mov pushf jbe xchg les push sbb jno mov outsl push or mov mov stos xchg mov xchg negl adc les sub stos repnz pop mov or jecxz,pn (bad) cmc in inc lods je ficoml leave pop xor cld repz add jb shrb push ret adc push ss sbb dec pop cmpsl jbe sti int3 fadd or lahf adc adc xchg pop mov out loop in or sbb movsb pusha stc sub int push fidivl imul cli mov and into mov loopne inc cmp adc leave push pushf movsl pop stos inc ljmp adc sub jle loop push adc xor shrl (bad) pop out dec int3 in adc xchg sub xchg lock and pop lds pop int push push sbb sahf fldenv sbb push rorl int3 jno insl rcr mov popf mov dec jmp pop and je sub sbb mov fs clc out add in and in dec jb mov std cmp stos mov dec in push (bad) mov adc loopne add jp push repz sbb sti or xchg ret (bad) sbb xor jecxz jle push cld push push rcll cmp push enter scas xchg es add into out xchg adcl icebp ds enter sub add inc or inc adc ds cwtl pop sub frstor loope loop scas mov outsw mulb sbb sub ret mov inc add out dec mov cmp add xor aad add add mov lahf cli repz sbb ds fnop adc mov cmpsb push adc mov cld insb jae in and mov inc loopne and int3 pop divb iret sbbl sbb pop jo jno mov jl div jnp imul in dec lods sub ficoml loopne cmp shrl mov in fwait cmp test cmp cmp mov cmc ret pop mov aas inc or push jecxz mov or mov jno and aaa pusha lret sbb push in lods mov dec fs mov sbb inc xchg inc pop xchg mov (bad) jp rcrb dec xor aad mov clc inc mov test inc mov pop mov outsl pusha cmpsl lcall inc pop aaa push stos add pop xchg jns (bad) mov bound push aam pop add cmp cwtl insl lods pop adc inc xchg dec pop or js loopne xchg adc stos xchg ret cmpsb push pusha push imul repnz adc mov cli xchg cmp sbb mov (bad) xor icebp jp out stos mov rcr popa mov and sbb ret sub xchg loope emms ss xchg and push (bad) fcomp es (bad) mov inc add enter xor out mov stc inc or divb dec add push pushf sbb dec pop outsb nop mov cltd fs out cmpsl dec cmpsl mov push (bad) jmp aaa in jne imul sub or call sti inc push add addr16 mov fstpt out sub mov dec jae cli shrl jp ss xor adc std (bad) subb clc mov popf jbe fwait jg xlat sub or add btr test cmp fimull out lcall push xchg mov dec sbb adc or cmp imul outsl ret push mov pop test mov adc and dec int3 bound push dec cmp popa mov push dec popf lods inc scas fsts popf xchg and jge setnp (bad) mov test sbb es jecxz into (bad) (bad) or xchg push cltd loope mov loopne notb mov or in ret push (bad) dec pop or popf cld lret cmc mov ret aam and mov push pop leave mov std in fwait mov and pusha popa repnz dec flds test movl imul ss xor leave fsub mov dec cmp adc adc loopne mov sarl pop add sbb mov push mov int3 inc es inc jl dec jae mov jp loop xchg push cmc or test pop cs cwtl (bad) fstp js out cld fcoml outsl or mov push xor push mull out adc ja test loopne xchg inc imul xor cltd pop sbb push xor shrl pop dec cmp mov jg loop add mov xlat jno ss or pushw sbb push rcrb lret xchg loop dec popf hlt (bad) jno xchg test pop nop das mov insl pop inc adcl and (bad) iret pop jnp mov jne cmp outsb and loop int pop xor and scas push mov (bad) dec insl mov sub lret mov js pop or rcr aad in xlat dec test cwtl adc mov ja inc inc es jae mov xchg add adc mov (bad) jle test jae xchg lods imul xchg xchg xchg dec dec mov sarb add ljmp arpl adc sbb add insl ljmp jo and sub adc mov mov aam loop mov or pop stc jp adc lods out inc add jno jmp cmpsb les jecxz or inc and stos (bad) jmp mov mov lret mov popf or in (bad) out (bad) add cmp test mov in ds adc hlt (bad) bound movsl mov (bad) mov xchg out jg popf cli testb pop test mov dec (bad) push ret adc cmp in mov jno lret pop sub sub in mov iret pop rcrl fistp loopne sbb push mov or push cmp (bad) cld popf (bad) int outsl iret dec adc loope or nop pushf rcrl dec inc in out mov pop jp and push mov ljmp (bad) fdivr inc aad inc les push dec cmp (bad) or sbb cwtl cmp pop add sbb sbb popa cmpsl jnp int cmp mov outsb imul movsb mov faddl je rcll (bad) push push xor jb stc in dec inc cmp (bad) push rclb dec lret (bad) mov inc jae xor clc jne or xchg cmp jmp pusha mov fiaddl sahf mov push in adc and cmp loope rcll push xchg mov (bad) cmp out out pop push das jno xor es cmpsl loope sbb jne aad (bad) sbb int cli sbb mov adc jecxz fldcw or push outsl pusha inc jp and cld data16 or and push mov out fisubrl pop fdivrl andl push mov xchg and ja pop inc add ret or pop out icebp xchg data16 sahf cwtl cli (bad) jg out insl js cmp pop imul sbb and ljmp or dec and xor dec pop and pop mov mov lcall ljmp cli mov xchg pop mov cmp mov (bad) cmpsb rolb sub frstor and loope sahf repz (bad) into jecxz fstps mov push xchg and jg jo loopne test add fwait mov xchg and xor sub call cmpsl push sub (bad) mov jbe icebp outsb stos movsb jno cld cmp fnsave dec adc cwtl enter adc sbb lods lret ja pop sarl ret sbb inc test pop aad jo mov cmpsb mov or dec sbb adc gs ds out add lock xchg insb ljmp fwait cld sbb pop dec pop ficoml cltd pop shlb xor xor and jbe mov push (bad) xchg rolb xchg ja sub data16 cmp sub or call push pop faddl rcl push clc pop lret (bad) mov jle out repnz pop popl sarb fnstcw xchg notb pop sub pop out xor mov decl add mov ret jle adc cmp dec cwtl mov xchg loop inc xor rorl cmp jns xchg inc mov push dec mov lods fbld or dec jo frstor pop cs pusha pop push dec add (bad) insb mov addr16 ss xor add rcrb add pop jo add dec ret loop les imul and mov cmp mov (bad) popa aas cmp int pop push cmp mov repz adc inc or mov rclb xchg push ja and jp and call imul shrb mov loop imull xchg xchg fs fsubs mov cmp cmp mov push outsb mov shlb mov xchg repz jne add in sbb add xchg test lds jns push sbb aam cld pop je mov orb dec out dec pushf outsl xchg dec xor lcall sbb lret imul add daa push xor cwtl xchg push or and pusha cmp mov stos add jnp cld dec jg push lds in mov push adc clc fimull faddp cs (bad) ss sbb ret in (bad) mov add out adc (bad) push and add mov ret jnp sub arpl dec jecxz xchg or in jmp jl sarb fiadd dec das sbb dec add xor dec test (bad) cwtl cmp dec mov sarb mov clc mov mov xchg adc mov sub cmp ss xchg jae pop sbb (bad) jne pop sahf push xchg xchg call fsts faddl sub cmpsl mov mov dec js out lea inc and je mov scas and and or std cltd popf ret add loop into adc test popa pop cmp and mov pop or push push mov xchg inc jge outsl (bad) adc ss leave adc cli (bad) (bad) in xchg arpl sub shr cmpsb ljmp test popa in rcrb ret push arpl in movw mov aam and pop (bad) and shrl push ret ss xor test cmpsb lods repnz inc iret sub stc popl stc pop daa jle popa ss and test mov nop es decl cli pop add inc dec jg xor push icebp in xchg fwait push fldt je pop add jmp aad or xor int sub les mov push fisttp pop xlat stc push jb cmp sub jb popf dec pop or add lods push fcmovne mov cmp (bad) push push jb or inc popa fwait fwait pop rcrl stos and or in scas mov fiadd pop pop jnp (bad) fimull (bad) repnz roll mov cmp mov sbb inc out add inc fnstenv stc xorl lret cmp cld xchg aam enter pop cwtl aam mov sbb inc fisubrl insl lods dec dec imul shll lock inc push orl roll sahf sub rorb or cmc shr dec adc in (bad) faddl jnp rcrl outsl cmc out or enter mov mov vmovsldup pop pop aas (bad) ja push cmp jno mov mov enter mov push jb icebp push xor push es inc xchg imul xchg mov jecxz cmc into xlat add mov xchg daa mov cli or icebp adc sbb imul aaa ss inc cmp lods mov (bad) imul cli and (bad) shll lret jecxz mov imul icebp dec xor dec mov inc sub cmp mov sub cmp xor in mov or cli js (bad) mov stc ret cmpsl repz or in imul sub push aam movsl sub les lahf in std daa lds loop pop (bad) dec incb adc mov add xchg outsl cmp loopne scas pushf xchg js and prefetcht0 fnstcw xchg cmpb dec and pusha pop clc cmc pop mov mov aad dec mov mov cmp sbb shrl and and ja jae mov push test out jnp loopne push (bad) dec dec dec and scas sbb jg loopne fiadd push sub in ds lret and shrl imul mov js daa shll fidivr sahf fwait sub cmp fst jmp inc mov xor int addr16 pop mov stos cmp cmp xchg add mov add dec notl int mov insl in test daa add inc movsl or (bad) fcomps ror mov jo or aas jb mov loopne add das test jno ja inc fiadd jo in add hlt sti cmp iret aaa jbe pop jo insl jo cmp and (bad) lcall mov imul sub out or pop mov inc scas mov inc scas push adc and imull in dec xor mov cmc and push ret add (bad) dec mov fld (bad) test sub mov push add outsb mov mov push jmp fs cmp in mov test push xor (bad) (bad) repnz and ficoml repnz jl fucomi jg ljmp jmp lods arpl call jge mov aaa inc or pop xlat loop je shrb xor lret js mov push into les push lods dec icebp movsb mov add fdivr sahf cmp (bad) aad loopne jae adc mov pop cmpb jle pop and iret outsl lcall out sbb or jp xchg out outsl pop sub mov int push sbb stos ss test mov js out jecxz arpl xchg mov js and daa pop lcall movsl inc mov lods stos sti (bad) mov das sti orl inc mov xchg xor pusha je sbb scas push add mov test push push in insl aad mov sbb add or mov ret and lock std cmc pop iret repnz inc mov pop inc pushf (bad) shlb and jl inc lock orl jnp js leave fwait mov outsb and jmp or daa inc sbb addr16 pop mov and loopne push gs js adc push lock fidivrl aaa pop pop aaa aaa call fs mov mov out cmp cmpsb cmpsl and loop xor add call and push push mov addb lahf push push mov sahf jae repnz cmpsb pop mov push jp fnstenv mov int push xchg mov fcomp (bad) icebp push out and leave js mov sub push in xor xchg dec push int cwtl ljmp cwtl push (bad) fadd mull stc stos sbb insb pop add push jns pushl jo icebp add push icebp bound lock rcr ficoml std sbb jbe or cld inc fs rcr jg out mov add into dec adcl sub and lods mov mov stc lcall and enter jp fisttpl xor cmpsb adc ficompl cli mov fs push pop push loop xchg push repnz test xchg fcmovnb dec cmp push push idivb call fisubl cmpsb and movsl ljmp mov repnz xchg imul lahf mov sahf sbb mov mov pop and xlat addr16 rcl lock or adc mov pop movsl xor dec cmc xor loop push pop sub (bad) das std pop dec cmpsl cmp add mov mov loop or jecxz fist jecxz add cmp cmp add pop repnz xchg gs mov pop aaa pop cltd test push data16 mov gs jb jg out mov xor (bad) les movsl lcall inc repz stos mov cs rolb mov ret jb sarb mov xor pop xchg sub cmp xchg push js push cwtl lret pop loopne loop xchg push in jg adc push je sbb inc (bad) mov lret (bad) dec and arpl fsqrt push adc jo (bad) stc or or sub out xor cmpsl aad pop xchg js stos push nop dec ljmp sub int3 data16 pop sbb and jl mov mov and les jb in push bound jnp push mov rorb outsl adc rorb clc or xor andl xchg mov inc mov bound out cmc inc test shr mov into mov and orl cmp in cmpsl repnz arpl or cwtl (bad) clc cli pop cmp out stc enter sub jecxz cltd sub pcmpeqd pop mov loop cld push ljmp mov or clc sbb lret jg js mov mov mov aam or test jno cld out mov xchg xchg enter push sbb jno cmp push push icebp mov inc pop cmpsb outsl xor mov mov push push repnz mov sub mov mov aaa and rdmsr mov sub jns aam sbb adc ljmp mov pop push mov xchg sbb (bad) mov out add push xor xchg xchg outsb das roll sahf mov mov .byte dec add add add add xor add add add add push mov add call add add xor add add add add sub add push and add add and add or add orb add testb add and add or add adcb add or add sub add add sub add xor add add adc add add sub push add or or push outsl adc add push xor add or cmp add add or adc add sub add or or cmp dec loopne and and adc loopne add sbb add adc and or fs popa lret or leave jnp push adc push adc cmp pop and dec adc and dec pop adc adc and imul sub pop dec sub adc sbb sbb dec loopne adc pop dec sub adc sbb sbb dec sbb sub adc or sub pop dec sub adc sbb sbb dec loopne adc adc sbb sbb dec sbb push adc sub adc adc and dec popa adc pop adc adc pop pop adc adc adc adc adc adc adc adc pop pop adc adc adc aaa rclb pop push rcrl pop pop adc adc pop pop adc adc or inc (bad) (bad) lcall adc adc adc adc inc adc adc or adc sahf adc sbb pop sbb adc adc sbb pop sbb adc sbb sbb adc adc pop or pop adc adc pop adc adc adc mov or push xchg pop adc or push adc push xchg pop or or or add push adc or add pop adc push adc push xchg adc adc or sbb adc adc adc or and adc adc or or or pop sahf adc adc or pop or adc adc xchg and and or or xchg adc sahf adc adc xchg and sahf adc adc xchg and (bad) lcall adc adc or or or xchg popa sahf adc adc xchg and stos repnz sahf adc adc xchg and pop adc adc adc xchg adc xchg and and or adc xchg and sahf adc ss adc xchg and (bad) (bad) lcall sbb or adc xchg adc add push adc xchg pop arpl adc adc or adc adc or adc or xchg adc sbb and inc push and adc xchg ror pop adc adc push xchg adc sahf adc adc xchg adc adc adc xchg and mov adc adc xchg adc setne rolb pop pusha sahf adc movups setne aas mov adc movups setne adc loop pusha sahf adc adc xchg adc xchg popa sahf adc or lcall adc adc or ss sahf adc xchg and (bad) (bad) lcall adc pop or and (bad) lcall adc adc adc xchg and pop adc adc and add add adc push sahf adc pop ret adc push xchg pop jp pop adc adc or adc adc or xchg pop pop fs adc and mov popa pop sahf adc or xchg adc pusha sahf adc or adc adc xchg popa sahf adc adc xchg pop aam pop adc adc or cld pop adc adc and adc adc or pop sahf adc adc sahf adc adc xchg adc xchg popa data16 adc adc xchg adc or pop or or or xchg pop sahf adc or or or add adc or or or xchg and scas cld pop pusha sahf adc movups setne mov push add adc adc xchg and sahf adc adc xchg and lcall pop or or or xchg popa sahf adc movups setne push and pusha sahf adc adc xchg adc adc or push adc push adc push xchg adc xchg popa sahf adc or or or or or or or and fldt or or or or adc cs adc adc and xor adc sahf adc adc xchg and iret cs pusha sahf adc xchg pop mov or xchg pop sub adc or xchg and xor adc sahf adc or or or adc sahf adc and or adc adc or pop ljmp sbb or xchg adc and cmpb sahf adc adc or adc adc xchg pop or adc or or or int3 popa sahf adc xchg pop push pop adc adc adc or adc adc and loopne pop popa sahf adc xchg pop ljmp or or pop cld pop pop adc adc xchg pop jmp adc adc xchg pop out pop pop adc adc pop bound adc or xchg adc adc adc or adc adc adc xchg adc adc adc xchg pop bound pop adc sbb adc adc xchg sbb adc push xchg pop sti pop pop adc adc pop adc push sahf adc adc xchg pop adc adc adc sahf adc xchg pop bound push adc pop rcrb adc pop cvtps2pd pop adc or sbb pop or pop adc pop rcrb sbb or adc xchg adc xchg popa sahf adc adc xchg pop icebp pop pop adc adc xchg pop or adc sbb push adc adc or pop adc adc adc xchg adc adc adc xchg pop loope pop adc adc adc xchg adc adc adc or setne bound pop adc adc xchg pop xor adc adc adc or pop adc adc adc or pop adc adc adc setne bound pop adc adc setne out pop pop adc adc adc setne or adc adc xchg adc xchg popa data16 adc xchg pop ret adc push sahf adc or or movups sahf adc xchg pop ljmp xchg pop or or xchg pop sbb sbb sbb or xchg pop negb adc adc adc xchg sbb adc adc push adc push xchg and pop jmp pop sahf adc adc or adc adc pop adc adc adc push xchg pop adc adc adc or sbb adc xchg pop repnz pop adc pop push xchg sbb adc sbb adc adc adc setne adc adc pop or or adc xchg adc adc adc xchg and data16 adc adc or pop adc adc push xchg pop sti pop pop adc adc movups setne pcmpgtb pop push xchg adc adc adc sahf adc push adc sahf adc adc xchg adc xchg popa sahf adc or sbb xchg and pop adc adc xchg adc adc xchg and mov push adc xchg pop or sbb or push adc push xchg and adc and fisub adc adc xchg and inc adc or or or or xchg popa sahf adc adc xchg adc or push pop pusha sahf adc and adc adc push adc push xchg adc or and sahf adc or or or and adc sbb or xchg pop adc pop or or or adc and pusha sahf adc or or or lods pop sahf adc adc xchg adc pusha sahf adc or or or (bad) xor pop pusha sahf adc movups setne adc pop movups setne or sahf pop inc adc adc or push sbb push adc sub add push adc adc adc add push sub xor add add add add adc pop inc xor sub or or sub push pop maxps pop maxps xchg add sbb add and sub pop pop or pop pop or add iret sub add add pusha or orb add add add add outsl jb js dec popa imul jb gs insb add add dec inc add add add add adc add jbe xor xor or mov add or add and add sldt inc sbb add push je imul add add pushf add add push push add add add inc push dec inc add add pop add and outsl bound add hlt das add adc add and dec inc add add add add add and jb outsb addr16 add add xor add add and outsl bound add or add add add and push add add add inc add mov add cli and add add add add adc add pop add add add add add pop add add add add add add add add add add add add add add add pop add add add add add add add add add add add add add add add pop add add add add push scas std add add add add add add (bad) jg add add add add add add add add add add add add add add add add testl enter add add add add add add add add add add add or add add or add add add add add or add add or add add or add add or sbb leave or imul inc adc adc push add mov add adc adc add adc adc add adc adc adc add add add add add add jbe push add add add add add add add adc add add adc add add adc add add adc adc add add add add add add add adc push add adc add add adc add add adc adc add adc adc add adc add add add add adc cs inc adc dec adc pop adc nop adc mov enter movhps push enter inc push add add add add add push lock push add pop lahf push push add add add add add jg adc lcall pop test push add pop add add add add add add add add add add add add add add and add adc add adc xchg add add add add add add add or add add or add add or add add add add add sub add or add add add add add pop add add adc add rorl adc inc add add add push pop add add add add xchg push add add add add add add pop add add adc add (bad) sldt pop add add adc add dec adc add sbb dec add add add adc add sbb dec add add add add test add add lods add add test add or mov adc mov xlat add add pop movsb add add add xor add or add add add loop sbb xor pop or add add or add add add pop adc xor push mov xor aaa (bad) add add add add add or add add add add add add add addb add xchg add add mov add add add add add add add add xor add add add add xor add add add add add add adc mov add add add adc mov add add add add add cmp add add add add add add add add adc out add add sarb add add adc repz add loopne add add adc or data16 add cmp add add add add add hlt cmp adc sbb jnp add and add add adc inc add inc add add adc dec add inc add add adc push add xor add add add add inc add add xchg add add add xchg inc add add les jg mov add clc inc add add addl add sbb add add add add xor add add add add add add les jg mov add mov add add addl add push xor add add add add dec add add adc xchg push mov dec add add adc les rolb add dec add add adc mov add add add xchg mov sub add aam add add xchg add or add add dec add add addl add xchg add add add add add add mov add sub add add addl add cmp add add xchg add add add mov add add adc repz add in add add adc mov add add add add add add add add add movsl xor add add add lods xor add add add mov add add test add add add xor add add add fnsave add add add push add add hlt push add add adc scas add add dec push add add adc fmuls add inc push add add adc jmp add add add adc lock add add add add add or add rcrb add adc or add lods pop add add adc (bad) jae add in xor add add add add add add sbb add add add add add add adc rolb add xor add add add sbb add add adc mov add add add adc or int3 add hlt add add adc adc flds add mov add add add add mov add add or js add add adc inc or push add add incl add dec imul add or add dec push add add add adc xchg mov sub add and xchg sbb add add inc xor xchg sbb add add push xor xchg sbb add add add add xchg xchg xchg xor leave add add add add add add add add add add add jge and outsl adc adc adc adc adc adc add add add add add adc add add add add add and roll adc add add add add add lret adc add add adc add add adc add add adc add add adc add add adc mov sub or mov sub roll ss jg sub inc add mov jmp add add add sub sub mov in sbb mov in cltd add add add add add add adc lret adc rcll loopne cmp adc sti adc add jo or mov cld add xor jg adc mov cld add dec push xchg lea xchg add sub xor outsl push scas add mov jns mov movl iret push repnz mov xchg add pop or pop and add adc xor push add pop aaa push xor xor dec push cmp mov sub sbb mov sub sbb mov xchg push pop add add pop mov pop mov cmp loopne ret add pop aam imul xchg add adc or incl cmp push sbb pop roll ss adc pop add add sub push add add add sbb add add movsl add add mov add add add add add add add add add add dec add sbb and push add add add add add jg jg add add add add add adc add sldt add int3 add adc add rolb add adc add fadds add adc xchg xlat add add add add add add add add add add add add add add add inc add jbe cltd add roll adc daa push ds dec push enter jmp adc pop pop xor or add or add or push test add lea sbb add das add add add add add add add add add add test add add add and add add and add add add adc lock add lock add adc add add (bad) and cs jp cmp xor imul sbb mov ror inc adc pop cld xchg repz pop popf jo add fildl or (bad) jne mov jge icebp jo rorl insl cld cwtl lock enter push jmp inc cld adc popf loope ret push lret sahf mov jmp jno xor leave cmc fisttp lods pop rcll rcll outsb push dec push push pop (bad) mov mov add add adc add add jg add add add add add add add add add add add add add add add testl add add sbb add add add add add add add add add add add add add add add or str add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add jmp add add dec add add add add jmp add add push add add add add jmp add add imul add add add lsl add add jmp add add insl add add add add (bad) or add add jmp add add jno jmp add add jno lsl add add jmp add add jae lsl add add jmp add add jge jmp add add jg jmp add add addl add test jmp add add test lsl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add jl imul add add push jle insb add addb push push add push add push js cmp add add add mov add add add add add add add add add add add adc or add add add add add add add adc dec add add add add add add add add add add add add add add add sub add add inc arpl popa insb imul cmp outsl fs gs arpl outsl jb loop mov orb scas loop lods loop lods loop lods loop test subb mov subl stos loop scas loop stos loop stos loop lods loop (bad) loop mov orb mov subb mov subb scas loop mov subl scas loop mov subl imul jb je arpl gs gs xor cs insb add subl lods loop scas loop scas loop lods loop scas loop lods loop scas loop stos loop lods loop (bad) loop stos loop mov orb mov subb mov xorl mov orb lods loop mov subb loop stos loop (bad) loop (bad) loop lods loop test orb stos loop scas loop lods loop test orb stos loop stos loop stos loop test subl loop stos loop stos loop (bad) loop stos loop mov subl mov subl scas loop test orb stos loop mov subb test sbbb subb (bad) loop scas loop lods loop test subb stos loop (bad) loop lods loop lods loop mov subl stos loop test orb loop lods loop test subb mov subl loop lods loop stos loop lods loop scas loop test insl jae outsl jb imul arpl jns je insl add subl scas loop scas loop (bad) loop scas loop stos loop scas loop lods loop lods loop mov xorl stos loop lods loop stos loop mov orb mov subl loop lods loop stos loop stos loop (bad) loop stos loop lods loop (bad) loop scas loop lods loop scas loop lods loop (bad) loop (bad) loop lcall arpl add (bad) mov add (bad) mov loope movsb add jae gs cs imul inc outsl jb jae inc jne outsl push arpl gs outsl fs and add (bad) mov loope lods add jae gs cs jb ja outsb add jp add (bad) mov add (bad) test (bad) movsl add (bad) test (bad) test inc jbe fs arpl push jns je insl cs arpl imul arpl loope test (bad) mov outsb je loope test (bad) mov loope test (bad) mov je outsl insb add outsb je outsl insb inc outsl insb insb arpl outsb add orb (bad) loop (bad) loop stos loop stos loop mov orb lods loop mov subl mov orb loop mov orb stos loop lods loop stos loop stos loop mov subl mov subb mov subb test subl outsl jb add subl scas loop stos loop lods loop lods loop lods loop stos loop stos loop stos loop stos loop mov subl mov subb lods loop scas loop stos loop mov subb stos loop (bad) loop mov subl lods loop lods loop (bad) loop stos loop scas loop stos loop stos loop lcall stos loop stos loop scas loop lods loop (bad) loop stos loop stos loop test orb (bad) loop test orb (bad) loop scas loop stos loop mov subb stos loop (bad) loop scas loop mov subl loop mov subl stos loop scas loop lods loop mov sbbb je imul jae gs cs outsl insl jo outsb outsb je outsl fs add orb lods loop test subl loop (bad) loop mov subb stos loop scas loop stos loop scas loop (bad) loop mov subb loop lods loop mov orb mov subb loop stos loop lods loop lods loop lods loop lods loop mov subl push imul imul addr16 subl scas loop lods loop lods loop (bad) loop lods loop lods loop mov subl (bad) loop (bad) loop stos loop mov subb scas loop mov orb scas loop (bad) loop stos loop mov subl lods loop scas loop mov subb loop lods loop lods loop stos loop lcall stos loop mov subl stos loop lods loop mov subl loop lods loop stos loop scas loop mov orb mov subl (bad) loop test subb stos loop scas loop lods loop scas loop stos loop stos loop scas loop mov subl lcall jb inc outsl js loope test loope mov inc jae gs bound push jns je insl cs gs arpl outsb add orb stos loop scas loop scas loop stos loop stos loop scas loop stos loop stos loop lods loop (bad) loop stos loop mov subl stos loop stos loop mov subb loop scas loop stos loop stos loop (bad) loop lods loop scas loop mov subl mov orb scas loop lods loop mov sbbb subl loop mov orb scas loop scas loop stos loop mov subl mov subb test subl loop mov orb mov subl stos loop lods loop mov subl scas loop lcall mov orb scas loop stos loop stos loop mov subb mov subb mov subb lods loop stos loop (bad) loop (bad) loop lods loop mov subl mov subb lods loop (bad) loop (bad) loop (bad) loop mov subb stos loop mov subl jns add jb inc insb outsl jae fs jbe outsb je jb jae inc jbe outsb je jb jae loop lods loop lods loop mov subb scas loop test subb scas loop mov subb scas loop stos loop lods loop lods loop (bad) loop scas loop lods loop test subb stos loop stos loop lods loop stos loop scas loop lods loop lods loop lods loop mov subb (bad) loop lods loop lcall je insb gs subl stos loop lods loop (bad) loop scas loop (bad) loop mov subl stos loop scas loop (bad) loop stos loop stos loop stos loop stos loop mov orb scas loop (bad) loop stos loop lods loop stos loop scas loop (bad) loop test subl mov orb stos loop lcall mov subl lods loop mov subl scas loop lods loop lods loop scas loop lods loop stos loop (bad) loop mov orb (bad) loop (bad) loop scas loop scas loop stos loop mov subb mov orb loop scas loop mov subl stos loop (bad) loop lcall scas loop scas loop mov subl loop scas loop stos loop mov subb scas loop mov subl stos loop lods loop stos loop test xorl stos loop mov subb loop (bad) loop mov orb mov subb lcall stos loop scas loop mov subb loop scas loop mov subl (bad) loop stos loop mov subl mov subb scas loop scas loop mov orb lods loop lods loop mov subl scas loop scas loop mov xorl stos loop lcall jb gs popa outsb popa addr16 push jns je insl cs gs jne arpl add insb je jb dec outsb outsw add jae gs cs insb outsl bound imul add jb jns loop mov orb scas loop (bad) loop (bad) loop lods loop scas loop stos loop (bad) loop mov subb loop stos loop test orb loop mov xorl stos loop stos loop scas loop mov orb mov orb mov subl lods loop lcall scas loop lods loop mov subl (bad) loop stos loop scas loop mov subb (bad) loop lods loop (bad) loop (bad) loop stos loop mov subl stos loop stos loop (bad) loop scas loop mov subl loop lods loop stos loop lods loop scas loop scas loop lods loop stos loop (bad) loop lcall mov loope test inc jo inc outsl insl popa imul (bad) movsb add (bad) mov and xor loope mov push imul mov loope mov loop test subl stos loop scas loop test subl lods loop test subb scas loop test orb (bad) loop mov orb scas loop mov xorl mov subl lods loop lods loop lods loop (bad) loop lcall scas loop mov subb mov subb (bad) loop mov subl (bad) loop stos loop lods loop mov subl lods loop stos loop test subl scas loop stos loop lods loop lods loop (bad) loop stos loop scas loop stos loop lods loop lods loop mov orb gs insb jbe inc jbe outsb je jb jae push gs imul add jae gs cs outsl outsb imul je outsl outsb add (bad) test (bad) mov loope test (bad) mov loope test (bad) movsb add xorl mov subl mov orb scas loop lods loop lods loop stos loop lods loop scas loop lods loop stos loop lods loop stos loop scas loop scas loop (bad) loop mov orb mov subb scas loop (bad) loop stos loop stos loop (bad) loop scas loop mov subl lcall push jns gs subb stos loop mov orb scas loop scas loop mov orb test subb stos loop mov orb mov subb scas loop (bad) loop mov subb stos loop mov subb scas loop mov subb loop mov subl gs imul outsl push popa insb imul gs imul insb imul push gs imul add je inc gs jne je inc gs jne je loop stos loop (bad) loop scas loop stos loop mov subb lods loop lods loop stos loop scas loop mov subb mov subl loop stos loop mov subb lods loop (bad) loop mov subb loop lods loop stos loop stos loop test orb scas loop mov subb inc inc inc xor xor cmp xor xor xor aaa cmp inc inc inc inc inc inc inc xor xor inc inc cmp xor inc cmp aaa aaa cmp inc xor inc inc xor inc inc ss xor inc cmp xor cmp add subb mov subl mov subl mov subl lods loop test subl scas loop stos loop stos loop stos loop (bad) loop mov orb mov orb loop (bad) loop scas loop lods loop lods loop lods loop test loop mov subb (bad) loop lods loop stos loop scas loop lods loop scas loop lods loop lods loop stos loop lods loop scas loop scas loop scas loop mov subl test orb loop stos loop stos loop stos loop stos loop scas loop scas loop stos loop lods loop mov subb mov sbbb subl scas loop stos loop lods loop stos loop stos loop lods loop (bad) loop scas loop stos loop mov subb test subb mov subb stos loop mov subl scas loop stos loop mov xorl mov subb scas loop lods loop lcall lods loop lods loop (bad) loop scas loop mov subb stos loop test orb mov orb stos loop lods loop lods loop lods loop mov subl mov xorl mov subl scas loop stos loop lods loop mov orb stos loop lcall insb imul insl bound imul outsl outsb inc je jb bound add insl push imul je jb bound add jae gs cs jne je insl gs outsb je jb jo gs imul imul jne add outsb je insl gs outsl insl jo je bound imul bound add jae gs cs jne je insl gs outsl insl jo insb gs gs imul jo jb jae dec insb fs jae inc je jb bound add insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add jae insl bound imul imul jae gs bound outsl jo jb addr16 jb bound add outsb je imul je outsl insb add outsb outsl insl add jb outsb add insl outsl jb push je gs insl add jae gs cs dec add add popa add je outsl fs popa jae add jb popa insl add inc push push inc je jb bound add outsb gs je fs outsl fs je jb bound add jae gs cs outsl fs outsl insl cs outsl insl jo insb gs inc imul jae bound je jb bound add imul jae bound je je add cmp gs sub sub gs jne arpl jb,pn jae jne arpl add je add outsb je insl gs gs jo jb add imul inc jb popa jns push jne je insl gs imul fs add je xor inc gs jns gs jb insl dec popa outsb fs add outsb je insl gs jns gs popa outsb fs add je dec outsl fs add fs add je inc jne insb jns jne insb imul insl add je dec outsb addr16 add je inc push dec popa jb push gs dec dec push push inc dec inc inc add je je add pop inc js insb imul outsb je xor pop push jns add outsb imul je insl cs push imul gs addr16 inc jne jb outsb je outsl insl popa imul insb jbe inc jbe outsb je popa outsb fs gs popa fs push gs jne arpl gs insb jbe add imul arpl imul bound imul jns gs push gs outsl insl jo je bound gs push outsb fs outsb addr16 gs jne je jae je inc jne outsl push arpl gs outsl fs js add je inc insb imul add je dec popa insl add jb popa jns addr16 inc jbe fs arpl jae je dec outsl arpl imul pop push popa bound outsl jo dec inc outsl insb insb arpl outsb add jae gs cs outsl insb insb arpl outsb jae addr16 inc outsl outsb je outsl insb jae inc outsl outsb jae insb add imul dec inc imul insb add jne jo jb dec outsb imul add insl jo outsb outsb je gs jne arpl popa outsb popa addr16 inc imul inc fs je bound arpl arpl add je dec arpl add je push je jb push outsl jae je outsl outsb add jb push je jb push outsl jae je outsl outsb add je push gs add fs outsb imul gs popa jns jne add je js arpl imul insl bound inc insb outsl jae add add je inc outsb je jns outsl imul push outsw add jb inc insb outsl jae fs jbe outsb je popa outsb fs gs popa fs inc outsl jb inc insb outsl jae add outsb je popa outsb fs gs popa fs dec outsl popa add outsb add outsb arpl add jae outsb fs popa jns jne add je inc outsl arpl addr16 inc jae gs bound inc push push gs popa insb imul push jns je insl cs jne je insl gs gs popa insb imul add jb outsb addr16 jne insb fs push jns je insl cs gs add jo outsb add je imul imul arpl jns push jns je insl cs arpl imul popa je add je popa je add je inc jne outsl push arpl gs imul outsb jae jae je dec insl popa add jbe imul inc jne je insl inc je jb bound gs jb jbe fs dec inc outsl outsb jbe jb imul jb push push gs bound arpl imul jb pusha xor push jns je insl cs outsl insb insb arpl outsb jae inc outsb gs arpl inc gs popa je push je gs insl add jae gs cs dec cs outsl insl jo gs imul jo gs imul add je dec je insl add je dec popa insl add outsb je imul push jns arpl outsl outsb imul outsb jbe jb add jns add imul add je push imul dec popa outsb imul jae jne arpl popa insl gs jae je push popa bound fs add add and outsl and and and insl and imul and and and outsb and and and and jo push push sub jo sub push and and and and and and dec cmp arpl cmp add add sub add add add add add add xor xor arpl sub add add add arpl bound arpl xor arpl add add add loop fcomps imul pop mov add or add sbb or or add or wbinvd sbb pop push sbb mov push add add sbb and add or add add add or add push add or add adc add or add mov pop jg aad cmp adc add push add or add push add add add adc add add adc add adc add or adc add push add adc add push add or or add adc add sbb and add add add push adc push add adc add add add add sub push add push add adc adc add add add xor and add xor push push add add or adc add push add cmp or adc add sub add adc add adc push adc add add sbb add adc inc add inc push add push add add dec add or add push add add or add add add push or add push add dec add or add push add add add add add or adc inc add adc add adc add sbb push or adc add adc add push push add add adc add sub push add add add add add add or add or add add or or add push add add push or add add add add adc add push add or add sbb or adc add push add or add adc add adc or adc push adc push adc push adc push sbb add or add xor xor xor xor add add add and data16 bound xor xor xor xor cmp popa cmp sub cmp xor aaa popa xor add push add add push add push jb jo outsl outsb inc js gs imul ja add add add add or add or add add or arpl popa insb imul adc jo jb addr16 and xor xor add add push inc add xor jae gs cs gs jne arpl cs outsl outsl insb jae push je outsl outsb insb jns jns gs gs jne arpl jne insb fs xor xor add and add subb add add pop add dec dec imul je push imul jne imul outsl jb cs gs imul imul gs imul insb gs imul popa je jb xor xor add add add inc adc push add add or or or or or wbinvd or or or or add adc add lds and push add add add add or add sbb add add lidtl add add add or pop push or or sbb pop or adc or or add dec add sbb and add sbb pop or or or sbb or pop pop or or or add add or or or push add or pop add sbb or or or or or or or or or push add or sbb or or and sbb add add adc adc adc or and adc or or test or push add add push add add or push sbb xor or and add adcb add cmp sub adcb or sbb add sub or or adc adc add sbb add push and add cmp and add cmp pop add or pop add cmp or push or or add adc or or or or or sbb or or add adc adc push pop add or adc and adc or sbb and add addl add add and push or push or or pop or or or sbb and add cmp add sub adc adc add adc add pop adc or adc or sbb inc or or sbb push and adc or adc or pop push or or sbb or or or push add sbb pop push or or and add dec push and add adcb or or sbb sbb adc and sbbl sbb sbb andl or or or or add push add dec pop adc push push push or adc sbb and add add sbbb or adc adc adc adc and add add add add pop pop or or sbb add adc push or push or sbb add or sbbl sbb adc add sbb and or add add or push or or pop pop or or sbb and sbb or or sbb or add push add mov or dec mov and fcomi js add add inc add into lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add push gs cs jb ja outsb addr16 imul jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs push inc inc push inc inc nop mov adc cwtl mov adc lcall mov adc sahf mov adc sarb adc fdivrs adc fidivrl adc fdivrl adc fidivr adc lock adc clc mov adc cli mov adc cld mov adc (bad) mov adc mov mov adc xchg rcr mov test in test in test in test in test in test in test in test in test in add add cmc add add add add add jo add cltd add add add add add add add in add lds add out add add add pushf add add add xchg add add add add add movsl add add add add xor add scas add add add add add add add sub add or add fild add add add int add cmpsb push add into add add add add push add pop push add xor add popl add and add add add add add add add add add add add xor cmp xor cmp popa add cmp xor sub add cmp sub add add xor cmp xor cmp popa add cmp xor sub add cmp sub add add xor cmp xor cmp popa add cmp xor sub add cmp sub add add add add and add add add add data16 add add add cmp sub add add add add and add add add add data16 add add add cmp sub add add add dec add and add add add add data16 add add add cmp sub add add add add add add add add data16 add add add cmp sub add add ljmp cmp xor cmp popa add cmp xor sub add cmp sub add add add add add add add data16 add add add cmp sub add add add fwait add and add add add add data16 add add add cmp sub add add add add and add add add add data16 add add add cmp sub add add add ret and add add add add data16 add add add cmp sub add add add add and cmp xor cmp popa add cmp xor sub add cmp sub add add jmp add add add add data16 add add add cmp sub add add add add and add add add add data16 add add add cmp sub add add add adc add add add add add data16 add add add cmp sub add add add add and add add add add data16 add add add cmp sub add add add aaa add and add add add add data16 add add add cmp sub add add dec dec add and add add add add data16 add add add cmp sub add add add add add add add data16 add add add cmp sub add add add add and add add add add data16 add add add cmp sub add add add xor cmp xor cmp popa add cmp xor sub add cmp sub add add add xor cmp xor cmp popa add cmp xor sub add cmp sub add add add xor cmp xor cmp popa add cmp xor sub add cmp sub add add rolb and add add add add data16 add add add cmp sub add add add xor cmp xor cmp popa add cmp xor sub add cmp sub add add add out add add add add add data16 add add add cmp sub add add add xor cmp xor cmp popa add cmp xor sub add cmp sub add add add push add and add add add add data16 add add add cmp sub add add fwait and add add add add add data16 add add add cmp sub add add add add add add add data16 add add add cmp sub add add add xor cmp xor cmp popa add cmp xor sub add cmp sub add add add pop add and add add add add data16 add add add cmp sub add add add xor cmp xor cmp popa add cmp xor sub add cmp sub add add add addl and cmp xor cmp popa add cmp xor sub add cmp sub add xchg add add add add data16 add add add cmp sub add xor add add add add add data16 add add add cmp sub add xor jp add and add add add add data16 add add add cmp sub add xor cmc rolb add xor cmp xor cmp popa add cmp xor sub add cmp sub add add xor cmp xor cmp popa add cmp xor sub add cmp sub add add xor cmp xor cmp popa add cmp xor sub add cmp sub add add add add xor cmp xor cmp popa add cmp xor sub add cmp sub add add add and cmp xor cmp popa add cmp xor sub add cmp sub add add sub add sub add inc add add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoms add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb rorl ja repz out jb out xor insb (bad) insb cmp xor cli aam (bad) sti jle xlat repz add sahf fildll pop hlt inc test aaa mov lods lret sbb stos aad mov negl idiv push mov cmp or mov add inc xchg xor xor push dec jl xor push idivl cwtl mov cltd stos and sarb stos and mov adc ss adc add xor scas stc mov out imul and movsl popa or fcomip jmp mov test ja dec in sub and dec (bad) ficompl and adc movsl jecxz xor xor jl xchg jnp and pop fadd jne mov nop adc lcallw fwait lds mov sub fsubl inc addr16 movl loopne lock daa es aas ret aaa inc xchg test push movsl lock pop mov mov ss cld and adc jle pop cmp sub push mov icebp cs dec idivl ds xchg jns push inc imul sub or mov push inc xchg pop (bad) add sbb fmull sbb inc jae je adc enter xor push sub jle jmp sbb xchg cld stos dec mov sbb jne lcall loop cmp sbbl mov cli loopne push imul pushf je popf or dec (bad) jle test daa inc adc and cmpsl outsl js xor pop mov fptan cwtl lahf aam push and inc and out loope push mov pop jg (bad) fcomps popf shrl shlb call rcrl scas loop lods leave sbb ljmp addb cld and pop mov pushf jo cmpsl add push fnstenv push notl push jg ds pop mov out mov enter loop pop fdivs int3 mov gs pop lds pop or add rorl lret inc push xchg cmpsb scas cld xchg (bad) cmp inc mov js scas mov cmp jae jmp adc xchg cs rorb cmpsl push sub sub jae sbb jle movsb outsl test cltd je adc add xor jecxz mov add (bad) std subb ss int (bad) comiss mov icebp test adc ds sbb dec and ret add jo fsts cmp mov scas and xchg add repz cmc or mov scas push repz out push xor mov das arpl in inc lcall mov mov mov push lods loope push outsb inc push sub jge loope fsubrs add push nop imul jns jmp out add lret dec adc stos cmp ss dec lods dec dec subl adc mov jge mov aas outsl add inc add (bad) fwait sbb aam mov ds adc adc or test and ljmp stc xchg xlat pop shr mov mov push pop push (bad) in inc cmp out push sbb jmp pop mov xchg push or inc sbb or fwait xchg divb inc (bad) leave jae in call mov xchg jno jno mov call into add push sarl push jmp das cmp out jno fs iret mov or mov out je out rorb xlat rcll or mov or and push into pop insl cmp cmp std cmp popa xor or mov sub mov mov test mov mov xchg sub jo imul inc mov xchg pop push nop orb cmpsb xchg ficomp xor jns fldcw xchg stos dec dec stc mov or adc notl mov pop pop inc sbb pop xor stos aam fsubrl mov cmpsb and nopl ja xchg dec xchg test mov lock mov lock inc xor lods mov enter pop xor outsl out pop xor or idiv bound scas repz mov in lret arpl mov cmp (bad) adcl addl out xor cld jo ds jle xchg jne pop mov xor adc xrelease sub popf add pop fs sub inc xchg xlat inc jge lock (bad) cmp adc sbb int xchg pop mov ja pop jno popf rcll imul push push js jmpw xchg add in loope cmpb inc out pushl jae pop pop sahf test inc insl jnp and aam xchg ds lret pusha mov stos xor mov test hlt mov inc (bad) jno das mov add adc inc fldl cmp sub scas rol xor jb cli sbb ja int3 inc pop jg add cltd fwait xlat mov mov daa jg push xlat xor mov into lret and sub cmpl mov insl inc mov xchg dec cs into loop cmc outsl int sub mov (bad) pop fsubrs (bad) sub dec or imul out iret mov add cmp adc nop (bad) jno adc dec mov cmpsb std cld lods ja scas inc movsb inc fstpl jo push orl fidivr inc cmp out (bad) push push mov xchg out aaa lods imul outsl mov adc push cld adc sub xchg adc xchg xor xchg mov and jl (bad) jno push gs sbb (bad) int3 decb mov ljmp mov mov jbe loopne jb stos mov adc mov adc (bad) loope inc mov in sub xor std cmp or flds repnz sbb (bad) pop call cmpsl pop out push xchg xchg insb push mov ret je or cmp idivb dec mov and (bad) ret insl add (bad) cmp sub movsl cmp mov sub fwait pop or lahf sbb cmp pop jne dec fisubrl insl adc gs push hlt (bad) data16 mov (bad) mov fadd push push insb movsb arpl cmp loop popf enter pop pop fldt stc mull jecxz pusha sbb sub adc mov fnstcw outsb pop flds add and out bound or scas in xor dec test sbb mov in out and xchg cmc (bad) cmp frstor outsb sub xor fdivl in dec orl cmp mov notb cs lcall sbb (bad) and stos jnp call dec push leave bound lea xchg pop repz inc scas mov mov mov pop push mov frstor cld xor xlat js mov loop jae mov int3 and lods in imul adc xchg push cld pop lock mov add mov push mov sbb xchg movsl cltd dec pop xlat fmuls sub mov jmp xor xchg les daa adc pusha pop (bad) sbb pop push loop (bad) mov movb stos push (bad) sbb dec cmp push lret sbb pop daa jno adc push or jo mov aad push jmp clc xchg sub jb cwtl psrlw ja push xor cld pop sti sbb rcrb into pop add fwait pop pop fistpl ds imul xchg jnp add jp inc dec adcb mov icebp inc xchg push cmpsl pop sbb push fwait and (bad) fildll add insb repnz repnz sub xor pop mov ret mov xor testb in incb fsubs jp,pn jge int lret imul inc cmp popf sub lret push stos and jl sbb push mov ret fdivrl cwtl outsl mov adc imul and adc inc sarb sub scas jns pop imul (bad) pushf push aam scas loopne popf js pop cli je test mov sub movsb cmp pop pop dec xchg lahf mov insb or push inc stos push sbbl stos mov pop dec xor push pushf fldcw std dec jmp or add xchg ljmp xchg repnz lcallw loopne mov sarb sub jbe jle cmc ret jl out dec mov lret jbe push sub xor (bad) cmpsb xchg mov nop aas dec jno adc js mov add xchg mov cmc lock out cmp in aam stos out jns clc scas dec loop cmpsl pushf movsb inc std jno arpl stc pop add pop or push mov dec out adc xlat mov sbb push (bad) adc xchg scas pop xchg dec xchg pop mov daa sbb cmp xchg xchg or ljmp dec mov mov push add jmp dec sti push test inc inc xor loop test sbb in mov stc dec jno mov movsb mov adc and and pusha (bad) (bad) repnz push sbb in mov rcr sahf mov fsubl mov cmp clc mov into xchg sti inc jmp es jmp cmc xchg mov stc lods jmp sbb sbb sarb adc jo dec test jp movsb ja pop gs sahf ds mov jge stc jge movsb data16 sub movsl dec fstps cs cmp jno cld xor dec xchg das test jne fidiv cmp pop adc or test int3 int3 fdivrs ficom xor in scas jecxz mov mov clc dec ret jle cmp fidiv push (bad) xor ds mov push inc adc notb lock leave loope adc cltd mov add ja pushf inc jl pop sbb loope shrb test dec fsubrl daa inc xchg int in push iret inc loopne hlt sti sarb pop jne shlb mov int jmp incb jnp lret stc mov imul add pop jbe arpl call or xchg scas or popa addr16 push mov repnz push xchg jp pop mov cmpl inc js jg mov and lock mov data16 cltd jb xchg mov out repz insl out in xor sbb (bad) sahf lods mov in fwait dec cltd popf (bad) lock or push (bad) ficompl adc and inc cmp xlat cmp pop mov cmp or push push mov mov or sbb pop mov into xchg sub and stos add or mov imul lods je pusha loop std xor xor xchg mull jg shlb inc or and adc iret sub nop xor inc cld rolb inc popf jle repz imul inc pop and dec stos repnz cmp ljmp into outsl add call cmp or add rcrl dec pop les sub into add hlt loope xchg out daa shl xchg cmc add cmpsw je add scas xor xor repnz dec and sbb xor out lods insl ja,pn and push sbb ds stos leave lret (bad) es pop pop mov (bad) loopne jne push or jmp jae pop jb push and divb xor pop mov arpl push cmp enter ss lcall jbe fbstp roll cvtpi2ps mov bound xchg cli loope in push add leave add fcmovnb inc push cmp or add pushf or es out js xchg fcomip mov sbb inc sbb or das inc pop xor lret lea popf repz aad addr16 xor mov jmp (bad) aas jno ja pop ret div sarb xchg jp mov add movsl cmpsb push cwtl jae,pn (bad) mov andb int3 jae sar mov mov rorb mov (bad) stos jl daa ret cmp mov jecxz inc pop xchg dec loope sbbl xchg mov or inc scas dec mov jecxz dec cmc sbb imul mov or dec out lret jo mov (bad) dec cmp repz aad xor pop mov arpl in cmp cltd adc (bad) dec mov mov (bad) fwait dec bound mov shlb stos clc movsb push mov push adc aam mov sbb (bad) jne out xlat mov adc loope or xchg cmpsb and pop inc hlt ja out mov out es sahf pop nop mov sbb mov aad negl cs pop jl fldt jge iret stos lea test iret push lcall inc or and push xchg ds scas mov out outsb (bad) sub cmpsl jnp dec ljmp or dec jne imul insb xchg insl and mov ss push imul popa std pop inc xor pop and add cmpsb adc pop ss adc fcompl ss push xor xor jecxz inc ret repz fs hlt mov fild out in jns scas add imul lods (bad) mov and inc mov arpl mov test xlat xchg cmp aaa and mov sub sub jp outsb rorb push scas ss inc pop or add dec xchg ficomp jge cmpsl rclb jp sub xchg cmpsl clc jmp inc mov rcr rol test ja stc cmpb cmpsb xchg and cs dec ljmp xchg scas hlt sahf mov push iret lcall shrl xchg imul (bad) lret icebp icebp pop inc mov mov cwtl dec adc adc std push mov cld (bad) ss or jne leave and sub ja jnp inc dec pop dec or sbb pop or jnp in fnstenv jnp in fnstenv sti incl add pop arpl jno and add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb ret (bad) icebp shrl cwtl sahf scas arpl push push xchg adc hlt mov into mov arpl je ja xor sbb (bad) jecxz push cld ds add out mov repnz enter mov jecxz flds cmc sti xor nop out xchg mov shrb mov imul push shrb icebp pop outsb or daa pop mov in adc pushf cmc or rcll mov cltd xchg nop mov add (bad) mov dec out push repnz pusha cld adc jae jle xrelease pop dec ret jae sbb jmp push push mov mov jecxz pop sub ret inc rorl jmp push inc mov push push shlb (bad) bound sub arpl loope loope cmp leave jmp or and test fcoms loope cld pop das fdivs adc repz cmp test pop lods (bad) and int or mov subl imul or xchg mov xor imul iret rol jno inc push jmp je popf rclb lcall jp imul xchg cmp xchg test adc (bad) mov rcl xchg push sti inc sbb cmp or loop pop lret sub addr16 loop fisttpl push sbb outsl sbb dec xchg outsl mov jns leave inc loope mov mov int fistl sbb and jbe mov and push (bad) mov clc mov loop lcall dec inc imul fsub (bad) mov fsubs dec sbb mov xchg std mov loop add xchg std loopne jno sub or mov repz xorl out mov mov add jge push popf mov test and test stos out xor imul inc ret ljmp fnop (bad) xor and je jle dec inc add (bad) jl icebp stos jns mov shl call hlt xor cmp nop fwait adc mov lds movsl dec mov rorb mov pop icebp mov aam fcomp pop cltd mov fidiv pop jne out lea mov rorb push or bound lds lret lcall cmp test cmp mov xchg mov lret iret add pop lods daa notb mov rolb jecxz mov out pop in cmp xchg pushf mov jecxz aad pusha daa sbb jl pmaddwd add pop in dec aas cmp (bad) xchg arpl jg jg mov shrb icebp cmp lock jle sub rcll stos iret std ds pop out xor out inc cli fistp mov arpl jecxz push sub icebp inc sub xchg ss mov test lods loopne int3 add xchg push cli in sbb cmp mov xchg int3 xchg arpl cltd js sub push jmp mov cmp sarl xor mov std pop cmpsb imul mov ds loope loopne out xchg fldl push and mov das mov push cmpsl seta nop aas add lcall ret and sub cltd repz fwait pop clc pusha js mov mov pop imul or jbe and daa pop inc mov rcll outsl aas fnsave jecxz,pn repz pop push in inc sbb cmpsb into in lods aad jno jbe jae push fisttpll xchg (bad) adc aaa cld mov jbe scas pushf push dec xorl repnz jge mov (bad) in mov jae test add lret add dec sbb cmp (bad) shl cwtl xchg pushl outsb pop fidivl lods jmp mov lcall jnp dec rcr mov out dec pop xchg xor push ds int and inc test xchg pop mov dec push xchg xchg popa es and or xor fsubr fmuls inc xchg adc testl int fucom push rcrl phsubw out (bad) pop jo xchg es call gs jno pop lods mov xor cmc push add jb push push jno inc adc cpuid (bad) lea gs add cli inc jns enter push fs sbb adc jnp js int mov or nop xchg sub and and jle rorb lock cli lea stos int or mov mov scas mov lods sub gs das frstor dec ja pop dec pop insl push scas test pop push lods enter or inc dec mov cmp out mov sarl mov jl mov xor cld or mov (bad) xchg gs jg xor fwait (bad) dec mov sub inc inc ds cmp aad into std pop jg aas dec aam xchg out or sbb inc sub push lcall jmp jg out dec sub out cld (bad) fadds jmp push mov pop aaa imull sub cld popa mov xchg inc int3 iret movsb ja xchg xlat adc jnp push and shrl add popf mov lcall or rolb or lea cmp stos repnz push cli push int3 aas push (bad) addl dec dec pop and or jmp cli push fildll sub std or popf push sbb fbstp cmpl mov mov jbe sub or lret add dec sub jno adc jl pop js or nop pop lcall jle lcall push inc mov (bad) sub aam notl jne jb lods add or fsub pushf dec mov mov push jne push mov push sbb push pop inc sbb out cmp imul or sbb test sub or jg (bad) stos loope test xchg mov (bad) hlt mov mov push divb and cmp inc hlt cmp fdivr adc inc mov lcall adc mov dec in sub popa (bad) scas fnstcw rcl les cmc lods jnp loope xchg into xor mov mov in mov jl (bad) shrb in adc mov xchg adcl mov dec cmpsb xor and fildll gs es pop ret rcrl imul jne in mov adcl push push sbb clc mov push ss mov outsb into mov jecxz ret dec jno imul fwait mov jns push gs mov cmp test or cmpsl add sahf mov mov cmpsl (bad) pusha mov dec rorl pop cmp stos mov add pop jmp cmp aad std nop and or inc arpl or loopne scas ret and in out (bad) jo push jl aad xchg mov in sbb jg movsl sbb mov mov aaa dec hlt push iret and int3 cmp or add or cmpsl pusha add dec xor pop fldenv repnz pusha aas gs mov arpl in and jo jne aam xchg mov out sub pop mov cwtl xchg mov inc test scas out and xor mov or das stos out (bad) gs cli dec cmp imul push or xchg mov jo aad popa pop pop repz ret (bad) xchg fistpll jmp xor inc sub mov aam hlt fwait add xchg into xchg adc sbb pop push add fcmovu aas adc roll stos outsl loop sub or mov inc push sbb cmp dec mov xchg mov adc std jge aad sbb inc and or xor jnp stc shr mov insl jecxz cmp test pop lods mov pop iret int3 les (bad) test inc xor lods mov jne xchg lret das dec xchg imull sbb std mov and jns cmp and mov ljmp loope and pop sub fmull pushf pushf inc push enter das inc std dec push push fwait sub out xchg adc subb in into add push inc fcomps or mov push fsubr test loop xchg cmpsb cmp popl ja js pop popa jge inc mov jp test or (bad) xor mov and lret push repz xor mov or jb icebp push sub dec inc inc iret jne xor jnp lock sub cmp je dec xor ds add dec clc ja out xor push mov add cmp jg sti or call or lcall lret popa btr das (bad) mov enter inc aas movsb hlt scas or sub xchg pop fwait aaa push das pop dec jno cmc jle out dec lods in fs inc je mov bound xor add push jp xchg mov in mov pop cmp ljmp mov loop adc arpl mov fisubl out int cld add mov jl push pop enter add and (bad) out lock in or add das xchg scas fldl xchg pushl (bad) inc jo jl or mov or cltd addr16 inc and lods test or das or cmpsb mov lret leave lret mov mov jecxz pop push cmc pushf cmpsl jl mov xorl add loope and flds adc jmp mov or mov outsl cmp dec cmp test xorl xchg cmp pop mov sti inc dec stos mov xchg dec jbe movsb test je fs or ret (bad) mov pop sbb jno pop pop inc xor mov xor xchg addl lret add out push mov es test test js xor sbb push cld pop imul mov adc jp fldpi jl aad jnp inc mov test (bad) jecxz dec test xchg sbb fwait push je inc stc hlt test std mov stos xchg mov sarl out inc scas push mov inc mov xchg sub std dec sub cld adc out inc sar aam fbld inc lods icebp push adc dec jns cmp xor pusha (bad) and out and dec shrb lock inc js out sbb loope stos adc mov mov daa dec dec jno pop cld cmpsl cmp jb mov enter (bad) push cmp mov inc dec mov push lods outsl f2xm1 fdivrs les bound push (bad) or xchg enter xchg xchg cld push push in jge push mov lds fildl inc in add clc fcmovnbe fcompl add sbb lcall xor lcall sub adc add lcall push fstpt xor mov inc (bad) outsl or jge xchg (bad) push aaa mov cmp rcll sbb mov sbb mov push cmp (bad) cmp lcall xor mov cmp xchg add and push mov adc fldcw shlb pop into mov inc xlat sub cwtl daa repnz fcoml mov ret cmp popf xor or sub movsb push test add add mov cmpsb popa adc mov cltd sahf mov das outsb in jge test adc cltd lret (bad) mov add push cmp or push cli sbb inc outsl (bad) je push sub sbb pusha dec repnz mov and out xchg cmp dec ds jle jns sub mov xor xlat incl (bad) xor iret pop mov scas std std rep mov xchg add ds and xchg cmp cmp pmulhuw inc or outsb out testb shlb mov rcr fcmovb inc addr16 ret loope push cmp imul mov jp sarl xchg popa add ret xor mov fdivr mulb dec jno and cwtl mov clc xor lahf lret adc push xchg sub pop imulb xchg adc and lcall daa cmp add mov add jae and out jp and dec scas push inc movl out subb or jge data16 push mov mov in dec sub mov sbb out sbb int fidivr das mov adcb in inc and scas jecxz insl cli repz shll push sub push jo mov add xchg mov pop jecxz cltd imul addr16 jg std pusha stos sub sub lea jne out jle mov fistl hlt sahf cmpb sti rcll mov (bad) xchg pop gs mov fyl2xp1 mov cs push push push shrb inc cmp jg out jl jb movsb loopne repnz cwtl xchg inc test jl xchg sub adc xchg mov rcrl add pop dec and inc cmp and ss adc xor or nop enter mov pop mov xchg pusha lret sub sbb aaa inc or xor enter mov jb jp icebp push xchg cmpl pop movsl jno cli xchg mov jno pop or push inc push push push fistpl push jle aad leave bndldx in mov ds popf test xchg leave adc add adcl mov rolb cmpsb cmp and dec and cmp pop lea push scas push sbb cmp sub outsl cwtl fisub xor ds (bad) (bad) push lea xor in pop or faddl clc mov mov push pop xchg (bad) push (bad) cmp bound das mov cmc mov rorl mov mov and mov pop lods mov jo inc (bad) (bad) jb or mov repnz leave icebp xor push pop cli jl inc lcall test jo sub cmp (bad) mov lcall (bad) arpl mov push repz dec test arpl out add xor outsb push aaa (bad) insl aad je pop movsb iret xor sbb inc decl imul fnstenv jnp in fnstenv jnp mov hlt rcl adc outsl in add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficom add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc div loope cwtl je push dec dec or shlb cmpsb xchg xchg outsb movsb dec ret mov and sbb pushf out (bad) ret mull pop add or call and popa inc xchg dec out std imul sub xchg cmp data16 das lret icebp aaa add enter sbb sub aam jp pop jecxz sbb mov in sub stos cmc push or cmp imulb lds test push and aaa push arpl std fcompl movsb mov cmp xor idivl mov adc test (bad) mov and jno xor sub and jecxz push push cmp mov outsb mov (bad) mov imul loope or sub xchg xchg pop mov das (bad) data16 xor push push mov sbb pop lcall mov inc mov xchg lock aam (bad) loopne jecxz push (bad) decl pushf ficompl xchg mov dec jmp xchg pop daa add xor (bad) (bad) push cmpsb adc bound push lcall sbb push pop ds cmpsb bound daa (bad) fstpl jae mov mov clc dec stc mov sbb sub dec cmp inc mov mov fist (bad) pop xchg nop gs scas cli or cmp (bad) loopne cmc rol cmp cmp subb xchg (bad) and aam xchg ret add cmpsb dec xchg insb mov repz add add loope jne jg push mov jae jg push dec lea repz hlt call popa cmp outsl mov add lods jae cmp inc xchg addr16 sarl cmp pusha stos out xor in inc test mov gs cmp cmpsb loopne fwait mov mov pushf lock xchg cmpsb cmp pop jb inc jno dec inc sub repnz pop xchg jb mov mov xor jge std lods jmp xchg out dec cmpsl je in xor into (bad) out jno inc sbb lcall mov xchg fnstsw jno dec ret mov stos sub in rorb popf pop pushf jmp xor pop test add js stos jns cli and in jl nop jecxz daa push mov push enter xchg cs add mov sbb and pop dec xor shll cmpsl pop aas xchg ss fsubrs xor aas inc add mov cmp push xchg out pop mov stos pusha sub mov jo sub lods lods popa pop repz std js cmpsl (bad) loop xchg sbb push addr16 add mov adc xchg (bad) fcoms jno mov lods inc addr16 pop push fistp jmp sbb lahf pop add jecxz adc push jmp inc rcrl inc aam iret je mov loopne idivl bound scas mov jb push loop jge adc or xor fistp add addl lds mov push xchg cld pop jecxz test push lea nop jle mov scas call dec lret cmp pop cli in jae call outsl inc bound ret dec call test das xor adc rorl mov adc and inc stos inc icebp mov repnz xchg adc sub enter dec data16 xor rol xchg imul sbb sub push xor cmpsb jnp adc loop fildll in inc xlat inc pop ret mov fidivr out pop mov and ret cld and mov stc mov stos adc test mov push adc mov out les mov outsb push aaa ret aaa in pop push ljmp ret jge adc jmp add fs hlt mov rorl cs inc movsl jns adc iret movsl jns dec or pushf jnp sub xor inc fwait cmp popa push adc inc testl inc in into add pop scas btc hlt mov xlat pop or lret repnz or das jmp lock mov mov lahf int add rol jp sub lret xor jle icebp addr16 jo push outsl sub sub cmpsl sub mov aas insl movsl pop int add cld lds sahf add mov xchg push arpl call fisttpll add and jae fmull xor int imul popf add adc out out cmp notl in cmp repnz inc jmp dec xchg jecxz stc and pusha aad adc js mov sub daa xchg add sbb xchg imul add das and adc ret std in stos xchg orl cmp hlt aas lock dec sub inc vsqrtsd mov ja xlat (bad) mov inc lcall or sti cltd cmpl int push adc xchg clc pop mov and cld fs pop (bad) dec adc jmp cli pusha mov in ret pop out fsubl inc inc xor xor inc popf (bad) popa call inc (bad) fs xchg add (bad) cwtl cld test or fidivr popl data16 fisub mov scas scas mov ljmp sahf inc loop cmp pop adc lret jne cmp dec aad cmp sti arpl mov fild cmp notl and cs xchg cltd cmc jecxz push pop mov out iret lods dec cli std fisubrl jnp mov xchg xchg xchg push test mov inc outsb popf shll cmpsl jl xor cmpsl (bad) inc or jecxz push adc popf or xor aam ds adc push loopne mov cs enter sbb jo insb int3 icebp cmp push sbb dec lods (bad) (bad) sahf imul fmulp xchg (bad) xchg or std sbb pop sub push out int3 mov add push inc shll aam aad mov and leave popa mov inc (bad) jo cmp lahf cmp inc sub xor xchg and sub adc xorb jb cmp or out aaa lock lea xor lcall inc xor sahf ret shrl aam addb ds jns rcr or pop and mov out (bad) loope mov leave ror xchg aad hlt xor mov js jmp xchg sbb out pop iret inc (bad) sbb fmuls push mov gs push out jg xor jns jl xchg cs (bad) jecxz push imul roll pusha mov (bad) sahf push fsts aad cmc aam sub push inc push addps mov sarb cs mov std sbb in gs adc aam dec arpl inc mov out cmp mov test lcall mov daa inc lcall std popf mov mov test test push or mov pusha lret jb call sub loopne mov aam scas pop xchg jae (bad) sbb cmp cmp (bad) sahf jmp bound or insb sub ficomp cmp xchg xlat lds sarb mov xchg dec rcrl sub sbb push enter pop add mov xor mov sbb jae or sbb es ficompl jmp pushf mov sub push andb or pop xor aam je jp (bad) cmp dec icebp cmp or cmp dec mov dec in loop jnp jo testb cmpsb add or jae int xor pop mov loopne jbe jb test out ret hlt enter mov inc rep subl call pop out push (bad) aaa mov lahf xchg outsb ficom mov (bad) fidivl sahf dec ds (bad) dec mov jl pop push pop pop sbb mov ds mov or sarl nop push sbb mov push jnp cmp in add int xchg inc sbb cwtl lea push test push aas icebp mov xor jbe jo push dec negl mov jae,pn xchg jmp push xchg (bad) xchg pop (bad) or fistpll test mov mov mov mov std push jbe mov sbb xchg data16 sti adc jbe cmp ds outsl popa out and jle xchg adc fisttpl dec rorl jecxz sbb divl and fnstcw mov (bad) lcall rclb icebp mov xor add pop cld lret xchg cmp or cmp sub dec test imul inc popf mov mov scas addr16 mov cmp nop (bad) test pop mov rcll inc cmp jno int push dec mov loopne mov sub lcall inc push scas lret xchg and mov fisubrl inc xchg push xor xchg pop push pop into mov rcrl mov cmpl into pop sbb or negb adc scas mov inc mov lret mov cltd add aas inc adc mov dec lret pop add sub mov leave scas adc sub adc pop lea jns sti pop out adc pop adc inc insb adc jo add xchg sub jecxz lods es sub jno xor out jg fcoml xchg mov mov call push jo dec add mov mov adc (bad) cli movsl pop cmp lock pop dec popf movsl bound add aas dec test push (bad) push xlat mov in cmp or or cld fs add je pusha pop (bad) pxor cmp (bad) rorl std jns sbb jg dec cmp mov lret lret fcmovb rclb imul or jbe xchg fdivs jle mov aad (bad) std inc mov dec std mov decb sub jl add xchg add push sub fdivl dec dec imul outsb testl cmc inc jecxz mov insl pop mov lret imul mov leave ficomp sbb cmp gs cmp xchg popf mov jg sub leave mov xchg mov push sbb enter movsl add lahf pusha (bad) push (bad) sub or iret (bad) mov sbb out push xchg gs test cmp push mov xor xor or inc cmpsb (bad) ja flds in sub sahf dec mov lds mov push (bad) cltd jl pop xchg outsb loop loop les (bad) fisttpl cs mov ret mov xchg in jbe enter and out adc ret in mov into ja (bad) stos cli leave test jae,pn dec fs sarl mov insb movhps sub aad (bad) jns adc add sbb nop and xchg dec jb daa aam fucomi xchg xchg dec jecxz mov add movsb push std rcr sbb jg test dec faddp dec pop xchg xor xchg and pop push push js sbb and lret adc stc mov xabort push popa pop repz in test lcall jp out adc stos dec xchg dec dec ficom jle adc aaa ljmp jle xor fs xchg lret icebp insb (bad) repz (bad) sbb xor xchg pop iret mov outsb xchg dec dec (bad) mov cwtl cmp mov idivw dec push lods nop scas aas push sti add xchg jecxz jns push lea cmpsb add pop stos jl into mov int pop scas mov mov push xchg push out sub or xchg (bad) je adc int dec (bad) in stos addb jecxz pop sub test xor mov sub popf adc jecxz xor (bad) mov sub cld outsl push loop,pn xchg fildll mov (bad) sbb (bad) dec mov clc sti faddl test adc out imull cmp je lock xor into sub jl mov es in daa jle mov (bad) daa icebp pop dec pop and ror (bad) repnz pop ds mov lds dec mov jnp das xchg sbb jo (bad) imul sbb cmp adc mov out nop arpl jne imul mov jne sbbl rclb mov repnz mov lcall mov lret faddl (bad) ret rcll dec mov or sbb pop neg (bad) subl rcrl xchg adc sbb lcall sbb pop jae mov jno pop sub popf sbbl ss jno popa fs adc icebp ret andl cmc fimul scas clc push and (bad) jno mov aam enter xchg imul add push js jl test lret inc xchg mov push cmp push mov or std and (bad) (bad) fisttpll xchg mov cmc xor call enter lods mov jge cmc in fcomi divl loope mov outsl int3 andl scas pop or sub dec xchg fs bound xor movsb popa adc pop add inc int pusha cmp adc insb jno and add aas flds popa fucom (bad) stc mov sub xor cmp cmp pop stc sti (bad) rorb jle aam cmp in fsts mov out mov pop into add (bad) sahf xchg adc (bad) cmc mov aaa mov fdivrl or test pop dec jbe lds push in scas adc jb dec insb ds sub dec cmp pop insl call and mov (bad) dec xchg fimull fildll dec push (bad) popf inc jae fild add push mov (bad) or dec or iret rorb or stos xor (bad) dec stos mov cmc rcrb jne fldcw not pop icebp jmp insl enter pop (bad) sbb scas lea shufps in mov imul cmp pop inc sbb in lds xor insl in dec xchg push pushl xor jg gs sub popf sbb testl mov pop push xchg fcomi lods ss push mov shrb jg pop sub pop sbb cmpsl xchg inc pop bt add xor adc in ss sub mov fistl jle cltd jge nop cwtl xchg dec lock (bad) push cmp mov jp call add add add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aad add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop xchg or frstor sbb or add aaa dec xchg xchg frstor or inc jmp ja fsub fidivr or in sar add mov movsb push xchg rorl in ss and scas push mov (bad) shrb fsubrs jmp sub inc hlt mov push pop fist movsl push mov imulb xchg test jae cmpsb (bad) and into mov fimul (bad) xor xchg jg jno (bad) inc cmp cmp jge (bad) movsl (bad) arpl out sbb rcrb push and xchg xlat jl dec (bad) out or stc faddp scas ret push inc push fcmovnu xor into mov insl or popf pusha sbb push les mov add fs shr (bad) mov xor gs (bad) repz (bad) cmp adc push jae xor movsl and fildl loope andl push adc insb pop mov in and cli ds test (bad) jno lcall lahf repnz xor sbb stos pop repz xchg fldl aaa xchg sbb push js or jecxz addr16 into les fs jl in cmp xor xchg gs (bad) dec mov test add leave (bad) mov mov in push sub mov (bad) push inc (bad) mov aaa mov ss das xchg clc cmp subps fcoms mov pop and sub incl rcr pusha (bad) test cmp inc or mov icebp push clc lahf je jp add out fisttp movsl push mov adc enter jecxz push jl enter and div arpl mov pop adc aam xchg (bad) jmp lock mov icebp add mov je jmp ret popf lods pusha pop iret cmc mov sbbb jbe es xlat pop imul out imul jnp lcall popa mov pusha sub icebp pop hlt or mov mov fsts fwait loopne leave loope das push xchg jl test sub stos lcall or xor sub movsb leave cmc mov and movsb mulb xchg pop or std mov xchg cltd sub mov je lds cmpsb ds int3 xor jb (bad) mov bswap into add sti push adc add cmp test adc push (bad) das jb std push jns (bad) out cmp pusha jae ja fmulp pop xchg xor (bad) xor leave scas int3 ror inc or sub in into das pop fcoms mov xchg shrb xor inc cmp add lret ds cmp pusha lds dec xchg shrb pop mov lahf mov and out lock xchg int3 lods cld lret lods sti jno add adc aas jmp icebp les iret pop icebp lret and test insl pop or rcll adc xor inc cmp in imul ret or int3 into dec insb push mov cmp mov notb xchg clc pop pop mov dec nop jmp mov dec aad jbe fnop add adc or imul (bad) fldl stc mov pop inc das mov inc rcl add int xchg je mov ficom mov (bad) (bad) cmp push jns dec inc push mov iret xchg cmp mov ja cmpsl mov loop js (bad) into (bad) sub (bad) mov mov dec push jnp rcll add jns outsb movsl add fs inc stos (bad) imul jge fstps aad jnp cmp mov iret sub int3 sbb cmp rcrl push test add nop xor cmp add clc mov out arpl pushf iret xor mov insl scas sub dec add sarl jecxz or and gs push (bad) xlat mov fwait imul mov jns mov add addl es out movsb test mov fistl (bad) pop xor mov ret rolb and lea xchg push dec lahf fwait xchg jl push icebp sbb mov jl jge sbb in mov test scas cmc test dec mov jno rcll mov and ja pop and xlat lods in push lods mov cli fwait pop jnp pop mov arpl popf adc cli push lods and sti pop pop fwait iret mov dec inc mov fild inc test xor jno divl (bad) les adc xchg mov pop pop mov add rol movsl and mov inc fucomip dec adc sub jge xlat int adcl lds in mov call mul pop out jb rclb fstps in inc cmc into inc inc mov std ja mov add jl pop adc mov xor push push ss mov stos das fs mov mov xchg decb lock out xlat (bad) cld pop sub mov gs push xchg aam lcall push call rcrb mov push inc mov into sub (bad) es cmpsb dec lret sti popf dec (bad) out sub sub mov cmpsl scas lret jne sub push xchg sub sub ljmp out inc push cmpsb inc ror fnstsw iret mov xor (bad) int3 xchg adc dec loope fsubr add outsl mov popa push push dec ret mov inc icebp scas xor inc ret in pushf mov stc or jl inc push and pop inc mov daa ret push repnz cmpsb js inc cs cmp mov mov ja adc inc test cld adc daa push aad dec mov (bad) add fnsave or addl adc cmp movsb cmp and js test pop jbe pop aad fcmovb lret ljmp adcl jecxz mov mov ljmp cmc dec jno fcomps dec adc sub test mov sbb es lods sub ss jp adc add and mov jle rorb fistpll cmc dec rcll lret (bad) mov stos add stos mov insl in xchg and mov pop scas mov in and dec inc fucomip das bound pop adc mov aam sub sbb xor clc sub xlat sub xchg test iret fild pop mov and (bad) loopne xchg xchg fwait or jno inc out cmpsb push loopne adcl loopne inc jmp mov mov and jne daa enter test push fnsave add out push sub inc movsb pop stos (bad) cmpsl test fsubs add xchg jbe imulb add cmp jno or push out shrl lods int in inc movsb cs mov mov push out jb je pop push push adc (bad) lret incl (bad) ret fisubr cltd mov xor xchg xor (bad) ljmp into xor sub or aad push sti aad push not in mov shrl in cmp add pop faddl add and dec push mov cmpsb gs cwtl add outsb xchg dec adc cmpsb mov enter mov ss insb int sbb lods sarl loopne sbbb lcall loope sub lock mov push pushf loope jae outsl mov rcrl dec adc mul add aaa cltd mov add add imul add ror sbb push in es int mov adc sbb pop gs jbe mov out jge out jmp ret xor stos leave gs add mov jbe sub inc xchg data16 push psllw add sti into push fs sub (bad) (bad) aam std daa test inc add fisubr dec divb adc imul (bad) push mov test rorb sub cli sti adcl mov dec push or push sbb or stos xor test add pushl pop push hlt pop fcmovnu dec and (bad) movzbl outsb fcompl int mov das pop mov arpl jns adc (bad) repnz sbb cmpsl pslld decl mov (bad) mov pop into pop jb sahf lods push push fdivl push outsb ficompl test sub orl cmp (bad) xchg push lret push (bad) lds sbb ljmp dec (bad) and dec roll hlt fwait or test cld sub idiv push mov (bad) mov cmp or aas xchg pop out arpl das xadd lcall xlat push dec push cmpsb adc inc inc and pop insb adc sbb or jns mov and gs xchg gs cmp lret xor out (bad) jle (bad) enter xchg pop push dec pop mov sub xor push add int or inc push data16 lods xchg adc inc dec nop sub inc out dec imul stc xchg mov ret inc arpl inc mov or push mov call dec adc sub sbb cli inc xlat mov (bad) mov inc mov out flds mov mov popa jmp leave stc sti sub stc dec adc aad (bad) mov cmp insb push lods icebp pop imulb or mov xlat mov sub (bad) xchg es shr jmp jns cld inc jl adc das incb (bad) repnz loope jnp sub dec xchg nop or std mov adc and dec aas ss push inc loopne mov pop jp rolb int3 cmp push sbb orb test pop ljmp in dec aam dec (bad) mov pusha and push jle (bad) cmp icebp (bad) jb xchg std imul adc fisubrl mov xchg mov loope mov mov addr16 adc bound pop jns lret lret add int mov rorl ficoml fmulp (bad) aas aaa fucomip cmp fadds aam das mov push pop add or data16 mov sub jp es sbb xor aad data16 sarl mov sbb xchg or js pop mov xor mov imul lret jge add add pusha rcr es sbb mov push xor gs enter sub jl imul dec pop (bad) pusha lods outsl sahf xchg aaa scas mov div or roll push bnd sahf jl lods call cmp insl stc in dec fist daa push (bad) cld out push mov (bad) pusha jbe int fst pusha dec xor sbb xchg adc in sysenter sub out dec lcall mov rolb cli sarb push push push mov dec test mov and ja icebp test in enter sbb and xor pop es cmp pop ss xor pop jno cs push ss scas in aas imul fsubrl cltd push adc cmp sub xlat dec das leave cmpl aaa sub outsb cltd mov mov ljmp in loopne ficomp ljmp jecxz mov dec push aam xor and mov push cmp icebp sti out ret push add xchg cmc lcall out cmp and mov out movsb stc out and dec mov push jnp sub mov and das ror (bad) fwait test adc loop dec mov pop out jle ret in iret bound out mov push lret jp mov pop lret loope xchg adc or out inc aam jp ss mov xchg inc int3 nop pop jb jnp in mov mov adc sti or mov pop jg push dec jg jbe lcall lret and fsubr movsl push sub outsb hlt insl jne ss cmp fwait dec xchg mov je xchg movsl insb or push pop in cmc call fs andl icebp fistpl repz adc rcl mov push rcrl jbe pop fs jbe xchg lods pop push out nop loopne ror mov stos in xchg movsb cmp out xchg mov lods bnd out push sub (bad) fistpl xlat jle rcrl test cmc pop fs into rcrb int repz std arpl sti cli (bad) and add cmp cli fist pop push push pop and imul add rorl sahf nop mov xchg and inc fs adc push mov fisttpll adc xor movsb sub adc imul arpl inc inc aaa ja mov jo sub mov inc lret mov dec ljmp cmp das aam or fistp pop adc dec jp add (bad) jae sar xor bound push xor into dec movl pop fdivrs mov imul hlt repnz xchg push ja dec pushf mov mov sub arpl dec xchg cmpsb xor and mov jns mov std cmpsb add and shr sti mov jmp lods and stos popa pop and pop adc out pushf or or jae mov cmpsb std mov es movsl sub xchg ret add stos lret pop fnstsw scas rorb sub mov cmp sbb lds pop nop in pop ss mov push jmp cli xor mov or inc mov cltd ja int loope pop add mov loop popf pop sub jns mov sub and or fdivr gs sbb ret aas andl mov cmpsb jp aaa (bad) pop aaa and lods mov or push xchg cs push sti in push and mov and movsl xchg ljmp pop mov aas pop sub push jbe or insl pop sbbb js or (bad) scas mov in in mov shr mov loopne fstp iret pop in jb push pop mov pop aad and jbe add pop int int rcl test push les inc fdivrp test jecxz mov enter lock xchg xchg int wrmsr repz fcomip decl cmp repnz xchg daa dec sahf cmp repnz xchg daa (bad) jg sar insb xchg or adc mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add rcll add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc add xchg (bad) xor popa je mov dec imull push adc inc lea sbb mov fstp jge jnp jecxz push jecxz add cmp ret sbb xor xchg xchg daa jl push and xor or cmpl mov les xchg xor xchg mov and fs push push jle xchg sarl sub in out in (bad) jae arpl in add repz sub in popf fadds bound xchg mov popa movb fwait test rcrl orl (bad) aas ret or adcl and push outsb jle mov mov cwtl popf add shlb mov test fsubrl and out std mov arpl xchg dec cmp hlt xor lods out fstl xor jmp dec dec mov xchg sahf mov adc mov dec cmp xchg fstpl mov shrl mov mov in js inc imul xlat xor ljmp int pop lds cmp in or in ret out mov adc (bad) mov lahf add test xorb jp pop ljmp call sbb inc popf push (bad) repz sub cltd cmp movsl xor dec mov mov lret or dec mov push fcoml xor lds and (bad) jnp pop dec lret fcmovnu and dec or xor insl lock fcmovnbe ret into int3 pop jg into or mov adc xor stc outsb push test (bad) mov push in cwtl sahf jecxz arpl sbb in movsb jge pop and gs and jmp insl out mov imul cmp jle es daa iret fs call mov sub (bad) xlat repnz (bad) dec mov inc pop ljmp dec mov xchg ja pop scas in cwtl and daa mov mov in je jecxz hlt xchg mov test sbbl daa or mov and jge aas push cld inc or push mov pop xor lock jo mov in popf testb (bad) or dec fsubr test add aas cwtl cmp dec inc imul scas add inc inc jecxz inc iret lret out xor jl (bad) mov daa stc and xchg dec lcall jg or adc js lret (bad) aam or stc or add pop mov repz sti jge movsb add jnp dec fsts add imul jecxz and jae jp gs sahf insl mov mov push cmp inc mov push push call (bad) rcll (bad) xor inc fs cwtl xchg inc push inc sub es cmp push je popf leave call call in sub (bad) sbb jne mov mov mov std test mov lret imulb call push in repz je mov xlat push lahf jbe out xchg loop fisttpll dec and std std push pop mov and aaa or (bad) loop sub ss mov sub jmp fdivrs mov lret xlat lret std dec shlb ret mov mov cmp cwtl adc jae sub stc rcrl xchg cmc movsb js fistpll push jge pop sbb jecxz insl into dec and fwait and add outsb inc (bad) rorb adc (bad) push pop mov call add mov ljmp mov out xchg pop add lds or mov sub in cwtl loope xchg dec push mov and sub mov dec out adc daa test stos cwtl shrl not push mov mov mov xchg lret mov nop mov and pop adc mov rolb cmpsb xchg xchg andl xchg cmp mov pop jae jo pushf adc inc fstl push cmp test push in lret adc mov dec into stos jne aas and daa xor sbb repz call out popf jmp arpl int3 lret pop rclb cmp cmpsl xchg pop je mov in test jge adc add imul add jno in outsb jns dec lret cmp decl mov scas mov mov inc fdivr lds cwtl movsl push mov std xchg repz cltd sub or push fisubl fadds out push cmp jno testb mov jae mov jmp xor in add int3 xchg sub mov cmp sub sbb cwtl fidiv adc (bad) stc bound sub inc dec fldt ss inc mov fyl2x ret sub in leave (bad) (bad) (bad) push mov mov cltd jns mov in fsubrs outsl mov fnstsw mov sahf or into cmp sbb mov mov cmp dec stos or arpl xchg fucomip jo out sub (bad) xor mov adc invd inc sbb and dec idivl xor hlt data16 lret pop insl movsl mov xchg hlt jne push xchg sub fnop stos rolb mov or dec or xchg lods test sub cmp sub jg pop pop outsl lds (bad) jb loope cmp mov aaa rcrb xchg add mov (bad) popf repnz pop jmp sahf or sti in test jae,pn fisubrl aaa in dec int mov pop dec stos jecxz cltd add pop out cmpsl sub or rcrb icebp in out outsl (bad) jge addb lret pusha xchg adc sbb out xchg mov add clc hlt xchg or xchg or xchg (bad) jl or sbb sahf mov cmp hlt ret push add inc sbb outsl cmp cmp nop jmp jb cmc mov lret aas xor mov mov jp jae mov and roll or repz in stos mov add cmp repnz js xchg mov mov mov ds inc jnp mov (bad) xchg adc pusha test repz cmp test cmp sub mov stc cmp or xchg xchg mov mov dec call mov aaa aaa mov insl neg add or jo cmc mov sub inc add (bad) out imul push mov mov dec inc pop mov or pop fidivrl cmpsb addr16 sub dec fidivl xchg aaa outsl sub sahf roll outsb push sbb test lahf (bad) fisttpl sub dec stos (bad) fdivrl popf out add inc pop dec sub in dec (bad) or loope jmp inc jb push cld rorl dec cmc or call js stos push adc fimull jmp (bad) cmp xchg push pop xlat popf fsubl in pop pop cmpsl mov out mov lret loop mov or ret mov int jle mov push cmp mov icebp sbb (bad) fstps jp sbb xchg in push das mov es adc mov (bad) pop jb mov push or jl aam cmpsb cld mov cmp lahf outsl sti add jmp lahf into xor imul push call lods pop or repnz (bad) in jmp push mov dec leave mov jg cmp or sbb xchg repz pusha inc jecxz sahf sarl mov shr les inc cwtl loope jmp lock lods dec fnop je sub add insl cvtps2pd mov sahf push inc loope iret in cmpsb aam ror lahf fwait out sar xor or mov das xchg dec push mov ljmp aas std das test je xchg push adc sub add les cli psubq test or xchg lea imul dec ror add sub lds push sbb inc sti mov mov xchg adc mov popl ja movsl sub xchg int loop (bad) js jecxz or sbb or push rcll push cmpsb cmpsb insl sub (bad) mov sub jb jle inc inc in push pop (bad) leave or loope fist jb add cmp adc sub adc pop sub popf mov mov lret mov sbb mov ficomp dec adc jg dec nop repz (bad) ds xchg in add aaa testb test test in push xchg pop cmp (bad) lret insb lahf sbb insb fiaddl sbb (bad) stc mov fnstcw jae mov jo test loopne cmpsl jns xor repz sbb adc fmuls or rcll mov mov pop (bad) icebp aam hlt mov push push or mov (bad) mov inc sbbb into call stos int3 pusha stos jg inc pusha pop mov add clc xchg mov (bad) jno add sarl mov iret mov xchg or and mov mov popa cmp pop popf xchg (bad) mov push inc data16 ljmp rep xor and cmc add and in add stos inc in (bad) push dec pusha cmp aaa pop psrlq or scas hlt ja or mov xchg or iret sbb mov adc adc push das fnstcw loopne jo xor push mov push xchg stos shrb inc fsubr das and or cwtl mov dec adc in outsb mov xor or add pop cmc push xchg or or aas test mov (bad) or mov push inc cmp inc out and or cmp cmc mov mov push sub pop mov inc push cmc hlt inc cwtl mov mov xchg popf add (bad) pop mov ja fidivl roll push fwait and xor out xchg (bad) insl or (bad) jge dec xor sbb nop or jne xor push mov jecxz mov pop stos mov mov xor (bad) mov mov push jecxz movsb pop insb adc popf xor in addl add cmc hlt or adc and dec mov ja jbe cli pop xchg int xor ds sub pop movsb inc sbb popa inc xor std addr16 stos lcall mov rorl xor out mov inc rclb inc icebp inc pop cmpsl out popf test sti dec icebp jmp pop lea mov out push cwtl mov test ljmp cwtl in pop adc out mov int adc mov jns jmp fsubrl cmpsb sbb add scas fmul jae jmp push pop enter xchg gs adc lock adc aad inc fnstsw push test inc ljmp mov xlat push adc sbb popa mov jno movsb mov cmp pop adc idivl pop or mov dec push aad jl std fwait lret dec add in add cwtl out in insb fdivl fnstenv loope negl mov das and sub push int3 mov lds (bad) fsts add movsb sbb sar fcmovne jbe das pop mov xor popf and (bad) adc xchg in dec jp into test pop andb jle lahf and xlat enter mov adc fmull stos fcmovb sbb mov xchg cmpsl and add (bad) iret mov add test xor inc mov xchg rcrl push push add inc out jne stos loopne or inc cmpsb loopne add sbb cmpsl jnp movsl loope leave fdivrs (bad) mov push imul (bad) push cli mov in (bad) dec icebp into (bad) loopne out pop popf pushf sbb jmp stos xor push pop iret nop stos mov pop mov loopne dec pop sbb loopne dec aad mov cwtl je cmp xorl mov popf mov add sbb rcr push lods imul ficompl add scas mov ljmp fildl fldt jl push les xor fisttp cld int3 (bad) testb test dec loope fildll cmpsl inc jo push mov jl daa xchg push (bad) jle jg test push mov mov int adc pop jp jle sub imul and inc lods jb push mov xor pop das pop inc xlat mov pusha rcrl lahf and movsb or lds cmpl loopne dec sub dec xchg cli pop lock inc jne pusha mov popf scas xor mov or sbb pop (bad) rclb mov mov mov in mov mov fs mov adc rorb sub (bad) or sbb (bad) sbb xchg cltd xor lods stos insl int call mov inc and fnstenv mov push and les jno ficomp mov mov jecxz dec ja arpl decb lock inc rcrl xor dec (bad) mov aas jecxz addr16 mov sub ret add cwtl cs mov adc adc in push inc adc test dec ja or cmp mov std pusha xor dec jno aam fwait data16 cmp add pop jg outsl sbb (bad) pop out jae lds adc and sub inc push xor mov and jmp (bad) (bad) call ret mov mov aad pop movsb test mov jae in fidivrl dec in push mov rcll mov pop pop fldt gs push xchg xchg loope inc out stos dec dec insb xor pop (bad) sub jp aas push cs in jecxz pop leave mov push frstor sub lahf jns jae int3 jg leave and and into addb (bad) dec jo and xor loope pop addl jecxz das ss add or imul adc fidivrl (bad) mov clc int3 sti sub test inc inc or insb mov sub in mov aam les inc ja ret and cmp ss dec les iret push add sub xor add cmp mov sahf xor push (bad) jbe aad mov adc fsubs mov lea push mov inc sub popf sub int push ljmp xchg mov jmp call dec fisubl jecxz lahf add jo lret cld pop or jp ljmp jp ljmp cli incl add pop (bad) jle (bad) outsb or add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fistl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push and pavgb icebp xchg outsb jecxz rcrl push outsl jne xor je negl mov cltd fcmovbe sbb iret idiv stc aaa ds jg xrelease add jo push jo add mov dec pop xchg adc dec adc and dec pop mov jecxz test aas lret inc xchg jne orl fs add ficom pop xor mov add js insb addr16 cmpsb ja push jb cmp adc and mov ljmp scas sahf push dec or (bad) (bad) data16 repz fisttpll mov xor (bad) dec adc push imull jp xor pop push enter dec insl lcall ret mov das dec sbb cld inc jnp sar xor mov shll mov jns xor rclb adc dec imul negl adc outsb adc jns in push std popa mov cmp or daa cmpxchg dec pusha fistl xchg cmc cmc lret sub xchg mov stos repnz aas dec test scas or mov sahf fcom xor inc mov mov ret cmp fs lods push in xor mov lret sbbb mov pop jmp mov mov popa jnp xchg push out pop cmc jp add add loope repz lcall dec pop idiv dec jmp ret gs sbb dec mov loop pusha je and cmc dec pushf sbb mov add push add sbb jmp sub sti movsb rcll aam inc mov lahf inc mov xor push (bad) jmp jl sub hlt pop dec xchg rorb cld insl daa in shrb mov pop ret pop push clc cmp (bad) and push out or mov mov fsts push adc jne fcoml cmp xchg cmpsb dec pop je loop or sub cmp out insl test je,pn das dec inc inc xor xchg push mov xor inc arpl pop push (bad) dec mov inc stos push ror fcmovnu aad adc lcall js jb popa int3 inc (bad) cld inc mov xchg mov ret jbe or pop pop and insl fnstsw and push cmp cmp push rolb xchg in sbb stos daa fs sahf loopne pushf imul sub pop dec repnz pop js imul idivl sub jg pop xor xchg and hlt popl or mov leave sbb push pop xor popf or push jnp mov mov xor adc inc mov mov mov outsl pushf dec sub or icebp (bad) insb mov push sbbl (bad) fs sbb not add cmp daa adc popa lcall jnp gs mul add sahf and jbe out pop and add jns (bad) jne jno,pt loope loop int3 and fbld jp sub xor mov cmp cli adc add add pop adc jle mov subb call shrl shlb mov icebp push push add (bad) lock (bad) mov lret or mov insl jns sub sbb mov add inc in mov cmpsl sbb clc cmpsb adc pop ds pop dec mov xor shll adcl and xor fldcw adc xchg leave in mov mov mov fwait sbb ret ret mov cmpsl fdivrl add cmpsl fmulp ds mov push adcl lods inc js adc les push nop jnp imul cmpsl pop cs xchg ret jmp lds xorl xor pop mov push insb ret push mov std xchg mov push jae cld mov adc push setb popf push jge mov (bad) mov outsb out jne pop loop sti call div cmp xchg xchg cmp shll outsb sbb mov cwtl sahf rorb mov push sub inc into sbb out ret aam cs dec ret pushf pushf pop daa jp fcoms mov pop mov loopne hlt inc xor or jg,pt xchg lds loope xchg sub mov xchg pop push add mov cmp mov stc movsb out cmc scas add add cmpsl dec push dec jae fdivl inc fdivl push jmp mov (bad) pop outsb (bad) pop pop jge in push aad gs push or xor les jns out mov adc mov xchg dec lock cli mov push repz dec aad mov push mov out in xor push sub sbb add or adc shlb inc inc fnstenv adc cs xchg mov xor scas dec jnp rcll mov outsl hlt jae sub lods int test (bad) or ret dec outsl xchg mov loopne add in lock jmp scas fidivrl cld loop or cli repnz fisubr push (bad) fidivl lds or adc mov jae adc enter cld dec push mov out adc push test and (bad) push cmp popw mov xor pop bound mov cmpl rorl jns xlat xor jmp mov in or lret cmc xor xor int js dec xchg dec bound (bad) std call sub jle dec jns test pop es loop ficoml mov pushf push das mov enter je sbb call inc pop ds into jl int rol (bad) adc int3 call lods jno ljmp and xchg cmp cmp std das test popa and aaa test jle xlat mov lcall pop (bad) int3 bswap sbb (bad) mov jo lret pop ja xor push or jmp or xor addr16 arpl mov jbe jno sar push imul inc ret std jecxz xor xor (bad) out inc push mov iret (bad) gs xchg (bad) sub test int sub cmpsl jmp pushf sub sbb add mov push mov repz imul fdiv sub or out push stos xor pop negl test xchg and out adc aad hlt (bad) jno (bad) mov cmpsl xchg jns jg push pop mov push out out das ss jne sub pop lea out or pusha sbb (bad) mov add or jg shlb xchg (bad) aam iret ds movb mov fnop xor xor push and das cwtl ljmp mov rcrl mov pop js cmp inc imul xchg mov xor mov mov nop sub sbb fnstenv and jns add imul mov xor inc xchg add xor cmp mov ret pop inc jge cld jl movsl add aad mov jo insb mov aad xchg dec in jbe pop loopne repnz sahf xchg and jmp xorl cmp lahf out jae repz (bad) push xchg jb cmp mov xlat adc cmc dec cwtl or outsl fnstcw popf cmp jo fwait arpl xchg push aaa lds (bad) call inc adc cmpsb movsl lret imul lcall out inc test gs sub fmul and pop xchg sbb jle ret push mov xchg orl jae add dec sbb repz sbb js push mov xor jecxz adc add cmp pop lahf pop adc xchg aas pop cmpsb das in cmp std add jbe sub xor adc jne cmp (bad) hlt (bad) stos fwait sbb or pop lret jl in outsl fmuls xchg push pushaw adc mov jae dec mov in or mov stc jmp mov std ljmp in dec (bad) (bad) jle (bad) xlat out stos jge out cwtl cltd adc lcall and lock push jmp test mov mov loopne loopne push test pop insb aas jmp inc es repz xor lahf outsb sbb or pop mov ret lcall or and jecxz dec mov arpl sub fsts sub repz repz lahf test scas xchg (bad) xor mov push aad (bad) sti mov jno sbb mov cli out (bad) cltd (bad) mov mov xor jl mov adc add xchg mov out enter std sarb loopne cmpsl das stos jbe pushf pop shrl (bad) xchg fadds jnp lods cwtl scas das push (bad) sub out jl gs out mov xchg imul sub sbb mov and stc repnz mov popl push cli cld pop (bad) mov imul and int3 push pushf pop fsubr lret (bad) in add in pop cltd in jle loope push clc dec add push sahf pushf mov jp jbe psubsw and cs push mov testb aas movsb movsb lahf jns lods test sahf lea in dec in jge mov push jns sub xor out outsl sahf dec cld mov ret out lahf insl les sub sub cmp sbb adc aad fcmovu aam ret call xchg lahf inc mov in (bad) push mov hlt cld call sub in mov mov icebp test cmpsb rcrl movsl (bad) mov aas jg push lods in sbb inc loop mov mov popa jl xor rorl pusha shrb pop mov clc push jae,pn cmp push lds test lock lods test ret ror repz xchg mov add or cld outsl aam cltd ret or mov sbb mov inc jno hlt imul mov movsb adcl inc inc jbe fyl2x es stos decl (bad) insb jbe and loop fdecstp movsl enter inc inc mov addr16 add lret nop mov mov lea (bad) hlt hlt stos jae repnz jno sub ja cmp jg jecxz out inc pop or inc loope mov aaa (bad) sub pop and inc dec cmp inc pop fwait mov mov ja cmp out ret lahf sbb mov imul lods or jo push sub aas adc scas fcoml push shll xor shlb xchg cmc jns pop scas stc daa (bad) cmp xor cs mov push loop outsl dec fadds push cwtl in sub pop pushf lods pop sub dec insb nop inc sub test decb mov clc mulb dec inc imul xor pop aaa adc adcl mov inc dec xor (bad) enter sbb push fisub lock mov sbb pop mov and (bad) out xor lcallw insl jnp bound push test sbb ss jmp jns pop call cwtl icebp call shr dec mov stos mov or xchg sbb in lret pop iret aaa add jo xorl addr16 or pushf sub in mov frstor sahf idivb push xchg movsl std or icebp lahf and cli sbbl sbb loopne data16 push mov fwait pop pop xchg ja nop arpl aad aad xor scas jle cs jecxz and into sub pop pop out inc lock stos sar clc push cltd adc (bad) xor and mov sub add ljmp js iret sub cmpsb icebp popf add stos mov jle xlat adc sub pusha test mov sbb or jecxz,pt pushf psrld add addr16 lea push jno jbe das inc cmp and lcall sbb pop adc loopne inc dec jo les cli or xor nop decl repz (bad) jns arpl sub loop sbb into movsb negl in fldcw and pop int rcr cmpb dec das ror lds aas fldlg2 pop std dec jp push push (bad) and out mov lret inc add sub mov jb dec andl cmp push icebp outsl std mov cwtl adc cmp xchg push or dec sbb idivl cmp movsb outsl in inc jns fisubl dec pop shll push sbb arpl pop jecxz and scas sbb xchg inc mov ds cmp xchg mov (bad) pusha ja jno xchg mov ret adc cmpsl cmp jp add mov clc je lock (bad) adc lcall fs (bad) sub xchg test fstpl inc dec xchg arpl sbbl lds xor imul cmp flds ss mov fisttpl add or mov stc or les out fdivs outsl mov sbb xchg mov pop imul int jb mov mov repz mov call loope inc inc mov (bad) pusha loop loope xchg (bad) pop or jb or repz xchg inc mov loop push std (bad) sub and mov mov in xor aad jno sub mov (bad) (bad) cltd push adc (bad) and or sub push movsl rorl popa repz outsb jbe bound pop (bad) popa jmp xor pop addr16 mov in divl pop stc das fs jns push ds leave pushf mov add in imul js or adc (bad) lret push add mov xor xchg ret cmc mov testb dec loop pop sbb fmull rcrb or call jne xchg aas and xchg xchg fiadd pop xor xchg je cmp xor xlat (bad) lcall inc pop ja fs mov add xchg sbb fdivrp cmp mov sub jb sahf xor mov pushf fsts sbb pop xlat pop pop imulb push push xchg mov inc mov push mov jmp loopne inc push test fsubrp (bad) out sbb call push cmp mov jp jg add movntq loope mov add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fstl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push inc adc mov or movsb dec push movsl movsb pop jb test (bad) mov adc and and rcl popf ret sti fidivr stc jo add inc xchg out xor loopne adc icebp sub je push mov push or in in enter test nop das cld rcrl pop push push ret dec inc or je iret pop mov push outsl add push test pop out jo jp mov cwtl jns jo imul cmpsb jge outsb std pop mov imul addr16 scas sbb subl xlat out std stos fwait (bad) and mov add adc popf cmp test lret nop cmpsl jne movsb pop jae movsl sub mov icebp (bad) jnp pusha inc in inc xchg cmp mov jbe dec popa js fwait cmp and outsb pusha xchg scas imul pop repnz jg sbb lret sbb mov sbb mov dec into mov pop xchg sub mov dec cld enter in adc push xor imul push sbb lods mov jne inc cs push mov jbe dec mov aad loop sbb sti clc xchg jo push arpl stos jb mov and cmp add mov movsl es jo mov mov add mov frstor rcrl add pushf mov mov mov int3 cs pop lds sar and nop fwait into xor int jecxz jp push lods das (bad) push dec xor ja cld push sbb (bad) das sub cmpsl fdiv scas aaa inc std sbb outsl cs cmp test mov ljmp add (bad) push sbb mov inc or mov popf inc iret or les inc aad jbe dec out pop (bad) jg sti sbb mov (bad) sub inc push mov sbb dec sbb out mov push push dec test lods mov jno in movsb mov mov xchg fdivs push sbb fwait pusha gs pusha mov jns jl (bad) cli jno mov jne je std (bad) dec adc inc popa jne into adc lods adc orl popl push xchg in and jg cmp mov (bad) jecxz push in popf inc mov push rcll dec lock dec cli out adc xchg lcall fisub into arpl mov cmp pushf loopne xlat pop jns jne and jo cmpb dec push mov ljmp xchg int3 cmp xchg inc add leave cltd imulb adc sub add dec mov adc jmp loop mov dec xchg ss repz scas (bad) fnsave mov adc add outsb lret outsl mov mov mov xlat mov ret mov xor mov push mov xorl stc ret ds dec dec insl inc and xlat je fnop repz pop dec xchg add sub sbb xchg outsb lcall fcoms in mov jp xchg mov daa xchg les dec mov jo lret (bad) lock aaa push fs fwait outsb adc inc stos sub push jb pop jmp es push add lock dec pushf dec sub (bad) test jecxz out adc push add daa mov out mov int3 dec ss out (bad) mov loopne pop add or movsl sub inc ja push inc or dec insl pusha repnz pop cmp pushf jge push fdivl fldenv (bad) loop rcrb sub repz subl mov out jae xor loop add push imul inc fimull lahf clc enter test lret and cmp adc cmp stc (bad) push push mov shl mov in jg pop or popf mov aas loopne fistpl inc adcl aaa roll imul push iret in xor in inc mov rcr sbb or pop xor cli insl js xchg test mov shrb cltd push jmp jg in xchg in scas daa ss test adc mov xchg fadd cli je mov xor lea aas (bad) (bad) popa xchg pop push or sbb aaa repz mov push sbb pop dec push mov mulb cmc xchg xlat (bad) (bad) push es in dec jae mov repnz xchg dec adc adc ret movsb xor mov push mov cmp mov (bad) fnstsw fwait push ss mov ss inc dec and pop xlat out mul push sub (bad) or cs and jno xchg int3 or stos cmc jecxz push outsl xor out jp sbbl pop out movsl in mov cmpsb cmp cmpsl (bad) pop in cmc jo sti cmp cld repz or adc xor cmc xor int inc and iret aas sbb ficompl test popa repnz jae adc push add push sub cmp jg (bad) xlat adc cmp jge xchg dec scas sarl or sbb sbb mov mov cmp xchg cmp mov adc cli cmp mov frstor bound pop jnp dec push aam pop xor cmc inc mull aaa hlt cmp dec adc mov movsb subl and lret loop fstps xchg jbe jae movsb enter mov mov cmpsb inc insl (bad) aaa rcr hlt call pop xacquire jnp outsb xchg xor sbb inc dec std pop pop fwait (bad) cmp outsl sbb cmpsl repnz fstl adc fstpl popa xor inc xor push out movsb mov sub jb xchg adc rclb cli (bad) ret push pop push out lahf fcmovne or andnps leave xchg xchg sub mov daa pop imulb xor cli mov repz (bad) addr16 xchg sbb fidivl test jb enter fdivs or add mov dec and jae (bad) xchg mov pushf movq cwtl fcomps pop std jne sti jb iret mov cmp adc (bad) mov sbb pusha sub into and lock mov stos push pop mov loopne xchg (bad) cli (bad) mov push pop nop jns es pop into mov aad jmp jmp (bad) mov repz push hlt scas cli (bad) jge pop jg pop test je mov les mov and aas xchg sbb pop or ss pop jge inc sub repnz push mov inc sbb lret jecxz (bad) iret mov mov loopne and leave inc add dec inc fnstsw int movsb test cmpsl lds or pop cli aam lods jns pushf addl lea (bad) xchg jbe jns sbb mov ret or (bad) jo push mov mov dec pop add clc or dec jmp inc add mov sub mov popf sbb xchg pop shrl in ljmpw mov decl mov testl orl sub mov in inc mov adc aaa xchg jecxz pop dec push stc cmpsb adc adc test loopne adc mov leave movsl add adc adc mov pop mov icebp and xchg dec sbb mov bswap (bad) jns fwait push jo push push sub mov mov das push rclb lock call add in mov xor mov stos sbb add aad clc icebp inc inc fisub mov pop xlat shrb sub mov repnz test lock test dec arpl ret mov pop mov frstor cld sbb mov fsubs int imull jno add pushf sarl pop xor xor cmpsl adc (bad) icebp lds cmc pop mov xor mov jbe mov and gs jo mov int3 pop sbb fcoml movsb mov sarb rolb mov mov xchg cmp xor int arpl sub fwait jecxz rcll dec jp inc jg lahf mov shrl add addr16 lods mov pop xlat stc icebp pop icebp cli mov or push call push shll xchg cmc and aaa pop or insl imul dec ja (bad) in rorb out mov cmp lahf cmp xor leave mov cltd orps cmc pop adc inc dec jns push dec inc jo or lds adc xor dec call mov (bad) in adc repz or sbb into add adc pop jg cmp pushl mov or mov negb xor js mov inc xor push xchg or iret mov sbb (bad) push cmpl icebp dec jno outsl jnp pop mov mov cltd movb and adc fsts test xchg cli (bad) mov addl jg movsb ds stos pop lea out aas and icebp (bad) arpl xor sbb repz jno fmul das mov es fstps push rcl adc cld cwtl sub sbb (bad) mov cli (bad) xor jo int3 add pop in movsb popf frstor fwait sbb adc in outsb and into (bad) sbb ja rorb out mov sub pushf push sub pushf imul (bad) shrb test addr16 lds stos roll aaa fild ds mov ja jno add (bad) mov movb sbbl pop aam cmpsl push aas or mov jb adc fsub add cvtdq2ps icebp insl inc jmp cmc cmpsl (bad) sbb out pop xor jb xchg shrl in adc xchg mov stos arpl movsb pop loopne les sbb (bad) jp push (bad) repz cmp test mov into cmp push sbb hlt jo pusha stos pop sahf test jp rcll fstpl xor lahf aaa xor adc icebp mov fidivrl adc int or pop enter stos mov stos mov add lds fistl cld xor mov push das xlat push std mov (bad) mov xor out lret mov cli sub and jne and in outsb adc ss (bad) mov fldenv mov sbb scas popl pop ljmp cmp dec (bad) repz mov pop es mov clc dec ss adc cmp inc clc sbb add jle sub sbb sarb mov adc sub hlt xchg adcb mul leave mov jno xor jmp sbb cld push addr16 or int3 fmuls jge (bad) jge mov sbb cmc sub stos sub inc out push and nop pop xchg adc jp mov sbb fnstcw pop sbb jl mov mov scas cli addr16 int or out out jg ficom ret mov stc hlt xchg lock mov sbb mov cld sub data16 lcall (bad) mov xor inc push insb repnz lret loop js lock add sub sbb jns jmp xor loop and stc jmp dec stos out pop arpl mov outsb jle xchg es out rorl lods pusha int3 cmc xchg sub (bad) push inc mov lds push in sub sbb cld das out rcll cmc pop leave adc sbb (bad) hlt daa push push loop and xchg sub inc fwait movb add cmpsl push jbe test ljmp or cmp mov or adc push pop ret adc cmp hlt xchg mov jo dec je and xchg jbe sahf xchg mov mov fcmovb (bad) in jge sbb sub pop mov fldenv (bad) or or push inc roll sahf outsb sti pop cld dec pop xor popa dec rcrl popa (bad) adc or cmp sbbb ret xchg xor push aas lret lahf push lods daa notl ret in enter and insl adc imul inc xlat movsl mov or jge sbb and adc ret test mul mov push pop (bad) test sbb arpl test sbb iret decl push jmp cmpsl push sub loopne xchg adc inc pop out jp pop add dec int3 lret insl adc sub adc mov push push adc ror mov inc loope jmp je pop scas mov lods ds in rorl imul or sbb mov jnp imul mov cli push adc shr loopne jo (bad) es in jecxz jp (bad) mov xor xor pushf sub mov fnstsw ret jmp push jmp jb movsb pop push lea hlt sub pop push fwait add fiaddl sub sub stc fsubrl mov ds or dec or shlb scas in xor ret sbb dec stos aaa lahf das cmp push push inc xchg mov push lds les fs hlt addr16 jge sbb mov imul ljmp pop lds repnz mov jo mov popa mov bound mov mov inc (bad) fwait adc inc jns pop inc pop dec nop shrl sub and sub stos lret shll clc sbb mov mov sbb dec push shll sbb jns jmp or nop jno bound inc ljmp sbb inc and mov scas jmp sub pop in mov jmp add xlat xchg mov or insb scas in shrl int push div mov rcll jg xor xor add rclb std cmp cld lds loop sbb repz stos mov xchg mov sbb jno jne adc pop jp xlat adc jb pop xchg add push loope pop cld push fild push ds jne enter cmc xchg mov jecxz adc jmp iret fsubp xor jne cmp rol pop and xor push movsl mov test aaa jbe cmpsl outsl aad cmpsl call inc xor hlt mov jne mov pusha or pop fidiv xor jns xor outsb jecxz repnz sub pop scas pop xor add fstps push in push lcall sti pushf int3 iret dec sbb test inc imul mov inc pushl cli lahf scas fwait lock test std push jnp add cmp add jecxz cmp out fidivr mov jnp out std out add incb push mov cmc mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fsts add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push inc xchg add or inc inc inc lcall push add adc xchg out out xchg shll push dec cmp loope or mov add cmp (bad) jo cld in adc cmp sub sub fs (bad) jmp (bad) dec sub jne jbe js jno adc xchg in pop std push imul aaa (bad) push insl mov and jecxz,pt ret enter (bad) clc mov ds dec aam insl push xchg iret (bad) movl inc adc xor jmp mov xchg add xor inc push loop pop out add dec notl push std mov inc pop jge ret cmp aam push lods idiv les adc fsubr push jecxz mov add xor mov popf mov mov jo sbb adc test into shrl xchg inc and (bad) paddb mov popf jg lods cmpsl mov sub push out je out in mov pop pop js out test xchg (bad) dec stos je inc xor and mov cmpsb imul sbb xlat imul sub jb jge xchg lds and xchg das pop fimul int jle lret mov bound sarl push dec adc clc stc iret cltd in mov imul xchg dec popa (bad) jb jecxz out (bad) xor cmpl push iret stos push lock pop inc and in sbb push xlat clc out pop cmp cmpl mov fnstcw sbb jo shl cmpsb icebp and sbb xchg mov jb,pt enter add jp mov cmp mov fistpl fdivl icebp mov arpl orb add dec lods ret mov (bad) rclb sarb xchg add cwtl inc pop inc in pop push mov lea jo or sub ret addl push sti and loopne fsubrs cmp stos inc cmc pop call sub jge addr16 dec inc pop xchg pop repnz push inc stc adc loope xor jle jge or fstpt repnz cmp in out inc test cmp les mov mov dec adc push cltd dec cmpsb rcrb ror jmp call lea mov fcom lahf jnp or xchg lahf cltd push imul xchg cmp jb aas jae gs rcrb cmp test adc adc adc xor cmp mov inc arpl (bad) xor or mov xchg push xchg jg incl movsb loope icebp dec enter sti push cmp xchg mov cld arpl hlt in bound sarb and mov out jne mov test mov inc inc shrl dec movl mov wrmsr pop pop or aas mov push xor sbb movsl incb and out or dec popa popf int push outsl xor js pop ror xchg push jl fsubrp call xchg fs (bad) adc inc ljmp pop fstl jb mov xchg in movsl pop popa (bad) mov decl cmp jl dec sbb xor mov lret lock int3 or aad (bad) js xchg lock stos das push push pushf sahf sub push icebp sti mov movsl imul mov cmc out mulb or fsincos sbb jg jl jmp jle (bad) pop sbbb jl cmp cmp push orl scas dec inc outsb mov add mov icebp xchg js jno movsb adc vpaddusw mov insb dec pop rcrl xchg dec push xor push clc xchg mov mov sbb enter jp pinsrw clc sarl stc out rclb stc push cmpl imul lret mov mov ret push int3 clc jp inc inc mov cmp lahf jae jnp ret cmp test sbb (bad) scas mov cmp data16 mov xchg into xchg dec div into jno orl sbb (bad) push and push sbb es and xlat aas jbe pop aaa shrb bound pop int inc mov inc pop cmpsl dec call out push fiaddl jl sbb push dec js dec fidivrl xchg adc dec add sub cld mov mov rclb push divl icebp pop jmp (bad) nop cmp dec xor adc dec adc pop and ljmp pop das je mov fsubs loop rcll aam adc in xor pushf lea inc (bad) mov push jge popa mov (bad) or cmp lret jl inc imul or cmp push icebp xchg sarl mov mov dec xchg mov mov sbb (bad) mov shlb sahf (bad) adc icebp mov jae pop cmp mov (bad) sti mov outsb int inc mov repnz and cmpsb cld and cmpsl dec add pop test sub or mov pop je (bad) fsubrp jb push add adc enter out (bad) insl leave stc adc add scas pop jo cmp xlat popf adc xchg nop cmp pop fstl and nop clc pop dec inc sub aaa lahf je fistpl mov xor std outsb fsubrs add sbb dec (bad) mov (bad) stc test and lods mov aad mov mov lahf mov add push mov cmp dec fsts out iret cmpxchg mov fisubr je jno mov pop add dec dec movsb outsl xor aas scas shrl push sti mov mov dec add cmp dec inc loop je jne outsb push loopne out notl xchg or loop inc inc daa shrl or out dec scas cmp stos sbb push xchg fcom pop pop cmp jmp inc sub aam jns and (bad) add xchg icebp xor and out and inc inc insl inc sbb cmpsl pop cmp xor jne adc lahf addr16 (bad) sbb loopne ljmp imul inc ficompl sbb push jge or lods lock enter jns jmp lret push out pop mov push test leave fwait aam inc mov in pushf std rclb (bad) add stc mov aad mov mov adc cmp pop mov iret lock out cmp pushf xor rol sub push xchg push sub fs dec aam dec pop out sub and inc sbb vpmullw adc sub adc add adc jbe,pt stos aad jno pop dec xchg add cwtl aad cmp enter inc sti inc lret mov fimul jno sbb and dec jno or in sbb mov test dec xchg jno push scas es jge and sahf pop cmpsl pop in icebp iret mov imul (bad) adc out gs cmp mov mov outsb push jge stos in aad mov mov dec pop lcall jbe iret mov sbb ja mov dec dec mov pop aaa mov ja loop idivl lods pusha mov jns jo mov mov mov loop fstp test and pop xor jge inc or mov dec shll cmp rcrl orl (bad) nop cmp imul fwait loopne insb out sub xchg or fildll push daa adc mov stc mov (bad) xor cs xchg xchg jmp xor and (bad) add into loop rcrb mov insl mov inc int3 out lds fdivrs icebp clc lea cmp out mov inc jmp xchg cmp xor mov pop data16 or lock ror sbb xchg dec call pop test pop test jg dec sub rcll rcrl inc iret rep repnz mov in dec ja inc ret push pop (bad) popf push ret cwtl scas pop aaa or je out and push gs cwtl adc clc xchg dec mov dec jae cmp push pop and jno push in insb push lds xchg fimull mov mov push clc lock sbb adc sbb imul stos rorl cmpsb push or fnsave (bad) pusha (bad) jp out fsubrl jns movntq lahf sub jnp (bad) lock in aad or mov mov adc inc xchg clc idivb xchg out movsl rcl or and push dec inc popf mov mov out iret rolb roll mov push sbb outsb cli inc mov inc xchg pop inc call and lret dec dec (bad) loop pop push add sti mov jnp addr16 sahf pushf clc test sub cltd lret and sub xchg jo sbb mov pop mov (bad) rol xlat rcrl mov pop jnp out dec adc dec sub xor cs cld out add idivl adc mov sarb sbb mov leave bound dec add out sar lods push fs push push test and pop pusha mov inc or push cmpsb nop aam pop sub mov arpl pop push mov xchg mov pop and mov sub inc fldl (bad) mov ljmp or sbb xor and add inc sbb cltd sbb add inc (bad) popa scas outsl (bad) mov dec or stc cmpsl lods lds movsl sbbl ficom push jg icebp push (bad) rcl out xor mov adc add pop jns xchg mov push adc cmp push pop adc xchg cmp push push icebp jns cmpsl dec idiv or lret adc mov pop popf daa push test mov (bad) push mov cmp or ret rclb mov fwait or lds test jmp lea shrb and pusha push mov movsl in enter pop scas xchg pop fistp inc push mov aas jns hlt mov das lcall (bad) fldt xor test mov ret (bad) xor (bad) ljmp adc xchg xchg mov (bad) or sbb nop cld mov enter dec dec mov adc ret test xor lahf test pop mov les fsubrp (bad) shl in (bad) jecxz stc loope lock dec enter push lahf push and stc jne cmp pop add popf sub rcl shl mov orl pop cmpsl les add sub jmp inc xchg sbb mov dec mov stos ficompl loopne movsl std push push lea (bad) test mov mov push notb inc repnz out or ljmp divl ljmp pusha adc rcll movsb js jb pop inc movsb cs mov int and int3 cmp inc and and sub xor addr16 fsubrs lods push iret or stc jns adc in and push insl mov mov pmulhw daa leave lcall xor (bad) dec dec mov sbb fwait in imul ljmp xchg popf out inc cmp sub mov scas cltd lahf push fnop test inc (bad) sub push arpl pusha adc fs push mov mov data16 ret jo fsubs push insl mov jae xchg dec xor xor xchg push dec xor adc or fisubl sbb sbb sbb movsb or sbb out mov std cltd cmp pop mov cld cmp mov inc jmp sbb cmp pop sbbb adc or jae pusha leave fdivrl imul inc (bad) xchg add and repz imul xchg xor xor js jge mov movsb push dec sub ja push jmp ljmp cmp adc push scas or incl test sub or lea lds jmp aad insl inc dec sub stos inc (bad) clc ds pusha cmpsl cmpsb push push out xor sti dec xchg cli in lods and xchg lods movl mov out inc pop inc cs xchg mov mov jns inc shlb push aaa nop push and inc hlt shrl or sub push pop aad cwtl (bad) repz test leave lea adc mov fildl pusha mov xchg popf cmc pop rclb jmp push ret xor repnz sub mov (bad) imul cld fsubs mov inc rcrl mov (bad) out lea loopne add cltd sub inc (bad) xchg je xor mull dec imull aam mov (bad) cld gs sub (bad) dec xchg aam aam mov mov loop in push add xchg arpl adc lock dec push mov lret mov lret jecxz mov (bad) mov xchg xchg (bad) xor data16 lock cmp xchg (bad) pusha jne xchg mov push std movsl popa pop sub (bad) bound mov sti daa pop pop mov xor movsl mov fucomip aad (bad) mov push pop dec push fcoml mov (bad) cmp out ja sahf adc mov sbb nop addr16 push data16 lret push jge pop jecxz mov pusha push iret sahf adc in ret jg jmp sti pop push int and mov mov (bad) in mov stos mov jge roll (bad) out sub adc (bad) jge (bad) mov push loope inc leave sti sahf lock sub shrb outsb mov es lret not adc mov adc ret imul lcall enter lods js push fidivl das rol push push mov xor ret in sub lahf ljmp pop mov loope rcrb and (bad) cmp fwait cltd in lods stos xor aad ljmp les jge pop call out jge,pt add fucomi cmc dec fisttpl jge pop jl es lret xor pushf add jo jl cld add rcll aad dec or lret add cmp pop or fisubr inc adc inc ret mov fwait or pop mov jecxz or inc xor int3 lods push into add jb ret or dec jecxz (bad) xorl insb pop addl sub (bad) pop push insb out mov jnp repnz fucomip mov (bad) (bad) movsl lds xchg stos outsl adc cmp jns enter in (bad) aad or dec addr16 add fwait (bad) lock sbb dec aaa jns pop push jne movb jmp sbb sbb js loopne addl push cmp lock addl (bad) ja sarb dec clc sub test add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push pop adc add (bad) cmc rcr and cmp ja and lea ja out sbb inc mov pop sbb ja imul add test dec ret bnd cmp push jge insl stos mov push add jl xor mov repz loopne repnz (bad) aam jmp cli mov add xor test aam vpavgb sbb mov jmp outsb loop cmp (bad) add stos in xchg ljmp xchg mov pop push shrl ljmp inc add fcompl pop aaa loope sbb xchg pop mov roll repnz xor addr16 mov sub cmpsl inc jl sahf and int xchg xor je jge mov (bad) adc mov sbb jno mov mov std xchg (bad) mov mov and sub push mov pop fcompl inc add cmp enter cmp jl mov cmp push pop je cmp hlt sti mov mov nop mov mov xchg outsl in scas testb cli mov cmc adc mov pop mov jmp stos inc out inc add mov ret mov out jnp cmpl lret mov out rcrb cmp dec push test jmp mov int dec cmp adc mov jp xchg xchg test push daa pusha sbb sahf ret sti rcrb insb or xchg mov inc dec adc xchg jp lods mov add fwait mov lret enter mov dec into add out mov rcrb sti and xchg sbb (bad) rol movl or mov ss shr ss out popa out sub jo out xchg (bad) fsts les sub or adc cmpsb push stc pop jp,pt pop sbb jge and adc movsb jo inc arpl cmpsb arpl je adc push mov xchg mov lock call mov mov inc push je mov jmp fwait jb,pn push xchg jge cmpsl test xchg inc iret mov jae aam fsubp jne movsl ljmp leave push (bad) je dec (bad) imul or and mov xor jmp cwtl out xchg add mov lret test into insl push mov or mov push std hlt nop pop mov imul pop xchg push xor mov les ljmp sub jmp fstps fimul mov dec gs adc repnz push mov (bad) jns (bad) mov cmpsl decb int3 fnstsw ds pop bound jmp jmpw (bad) mov jmp mov xor xor xor pushf nop cs xchg loop je int mov scas pop inc ja mov or shrb imul ss jmp (bad) mov xchg cmp daa pop xchg sbb mov inc fucomp (bad) xor imul fstps mov cmpsl xchg mov sbb cwtl cld mov mov bound (bad) ret rcrl cmc jo lcall mov mov xor xlat inc lahf mov fdivrp iret scas (bad) sbb cld fdivrs ljmp cmpsl mov xchg xor add and push sub mov (bad) in xchg ja lcall cmp mov loop mov sub sub xlat addr16 hlt fimull mov shr jl mov out bound test iret mov sbb mov jp,pn lods jmp les jecxz (bad) clc add dec xchg rolb test hlt mov lods mov adc add push nop xchg xor loopne mov inc enter (bad) repnz (bad) out cltd pop mov or leave stos inc cmp cmpsl dec out inc cmp sahf pop dec mov lret (bad) (bad) (bad) cwtl xchg bound imul ljmp out outsl xor ljmp sbb sbb mov ret js xchg cli pop addr16 push hlt dec shlb or rorb mov and (bad) dec mov inc lret inc cmp mov push lea adc leave cld (bad) xchg mov aas xchg in mov sarb mov add add jb test ds mov mov shrb mov out lds popa mov (bad) call fmuls mov and popf or into das pop imul and push push push jle ret pusha je jb cmpsl (bad) pop add sub jae push clc test inc push xor jbe out xchg push movsb mov jmp aaa int3 aad int xor not int3 inc mov push xchg fmul leave dec aaa mov fistp sub lods rorl sti addr16 xor pop fs addr16 std and into pop adcl enter bswap stc mov sub dec fs int3 ds mov xchg cs pusha loopne sbbb inc vpxor insl pop dec push add repz clc std dec and or pop mov cmp dec popf outsb xor in sahf fisubr mov inc lock adcl fiaddl push es xor int jae pop xchg test ljmp dec addr16 xlat dec stos negl iret aad jge mov pop out popa arpl dec aad jle mov popa push scas push jae data16 nop jns,pn fwait mov std ret dec hlt mov loopne das lret cld and xor mov mov sbb jg dec sbb js pop jmp push lea or push xor in mov pop push push jmp pop popf out jmp adc dec xchg sbb sbb cmp lret cmc in mov dec popf adc (bad) ficoml ja lret aas inc fnstcw idivb pushf mov mov rcll inc xchg xchg ret sbb cmp test clc mov jne,pn insb mov or nop cmp dec popa loope xor adc jo data16 (bad) xchg pop mov aam add jb (bad) ror test in arpl cld adc cmp and fsubrs pushf pushf add ret push stos mov out sub ljmp inc hlt rorl cmp push or mov pop and jp sbb push inc (bad) cmc push out stos sub repz fildl mov dec fnstenv sbb or (bad) sti cmpl cs out in int3 stos mov mov mulb add sti jae iret inc test jl xor mov (bad) pop loop and in push popa sub clc mov mov adc aad xchg sub dec cmp push jo sub pop push pusha push fs fsubs push adc andb xorl std leave cmp lret and or mov sbbl (bad) jl xchg leave sti adc mov inc jle mov nop cmp data16 lcall fwait iret jbe sbb test or or inc stos dec cltd ss push sbb lds call add int3 push (bad) loope pop add push xchg arpl in std push mov fsubrs xor cmp pop sti stc and mov stos leave jp (bad) aaa xchg jge xor inc outsb sahf lods ja and and inc ljmp push sub cmp repz mov sub add and dec fnstcw mov repz inc stos fdivrl cltd cmp aaa mov lds jbe inc iret das sti (bad) fldl xchg sub (bad) cwtl mov lret and in addr16 test adc in xchg lds ja lods sub cmp dec mov in or cmp cwtl xchg sbb test push cmp jge mov stos xor xchg fnop sbb out hlt mov fs data16 xlat xchg das pop dec mov outsb addb push pop fwait out ljmp out push (bad) data16 roll push in pop fimull sub fcoms jl push sahf adc pusha cli push cli cmp mov adc push mov xor mov test lcall arpl mov mov outsl loopne mov (bad) je mov or (bad) push jb arpl add jge jp loope and aas mov mov mov lahf sub stc in jmp addr16 inc cltd cld xchg lcall into test sbb xor add add imull mov sbb xchg and xor xor mov jae push loopne int in cmp inc dec lock jl push and sbb jno pushf test imul cs lds cli (bad) repnz roll adc fistl leave fadds aas sub int3 sarl mov stos or nop (bad) xchg out add in outsb mov push lret cmp push inc push or (bad) fbld clc add lahf pushf pushf pusha mov addr16 adc pop push mov or push dec insl int das sti pusha ret ljmp push mov jle aaa push mov imul jns xor mov gs jmp insb push fstp shrb out xchg sub cmpl jb popf jp and inc setne cwtl dec xor inc cmpsb jl shrl adc or mov xchg xchg enter flds int aam loop iret das sbb ss cmp insb adc jle (bad) push js mov push xor xor xchg icebp mov ljmp push je fucomip dec mov pop xor mov jle xlat shrw lcall je jae cmp mov insl ja,pn ljmp popf sbb or nop jecxz cli mov cld (bad) mov mov (bad) dec adc sub fwait inc and or jnp cmp (bad) push push repz adc cmp and adc roll sbb insl or mov fcmovnbe popf xchg data16 aad (bad) inc bound pop fbld iret cmp cmc lar sbb test xor loop outsl pop lahf repnz idiv std les cmp ja inc push aam sub dec mov xchg sub xchg movsb mov pushf aad addr16 push arpl scas xchg jl repnz jae js jg (bad) jmp js mov inc pusha jmp pop cmp pop adc jmp or ret mov decb out dec in in sbb xchg pusha cmc fwait lret mov je mov xor adc pop mov and fisub lret push jmp push fwait mov popa call inc xchg (bad) (bad) mov into sub into push scas movsb mov aaa jle ljmp xlat xchg lods (bad) cmp and fildll push jno push repz ret icebp and out ss icebp jmp or icebp das iret jns adc cmp mov or cmp stc jbe out es mov (bad) cmp (bad) icebp mov xor push jae xor push mov (bad) xchg push bound lods aad cwtl fwait aad outsl jle iret adcl xor xor xorb bound or and cmpl sbb out int3 cltd outsb sarl dec or cli (bad) mov and test mov sti push adc orl fldl sub fcompl lds loopne dec scas xlat into (bad) loopne jno mov jg adc xor inc sbb jne mov add jp xlat pop lock inc scas lock inc ficompl xor test lahf out ret (bad) pop sti and cwtl es dec dec sti or enter test cmp mov popf sar inc push jmp sbb xchg iret sbb insb jae in popf push lods lret in rorb test repnz sbb and inc dec mov jecxz cmp push btc mov cmp xor repnz mov xchg ljmp ret dec sbb movsb mov outsl mov icebp dec mov fdivl or aaa call out push sbb sbb ja shrl iret sbb pushf pushf ret mov (bad) push dec dec fsubs movsl cmc push in add insl add cwtl gs in mov lods fimul iret jbe push gs test jmp mov ret in and dec mov lods mov inc dec xor cli push or rorb mov (bad) dec pextrw fidiv je fistpll lret lahf jns fisttp push jo sub pushf mov aaa xchg rcrb sahf dec pushf gs hlt push and out add pop or push mov enter cmp data16 fsubrs arpl icebp pop xchg imul mov xchg push in in xchg sbb sbb daa sub push movsb popl hlt sub mov fdivrl test mov pop dec xor mov xor fldcw inc push arpl insl jne adc sbb leave in mov pusha in fstpl xor (bad) mov mov idivb xchg push sub mov or xchg and or jae sbb aas in pop movsb xchg loopne enter out sub sbb loope fwait addl jnp,pn outsb xor add add (bad) cmp mov sub xchg stos adc out ljmp iret out pushf inc iret stos xchg nop xlat sub sahf push jp mov fsts lds push push mov jmp divb cmp rcll mov mov dec jae dec inc xor ror pop add adc addr16 add sarb pop adc and pop jnp (bad) mov subb jae mov adc pushf pop ja sbb popa jle or mov jp int add movsb sbb or push ss pop pop push and loope imul push jo xor hlt loop mov das pop mov mov das pop mov verr jg into ljmp add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push and jecxz icebp mov xchg jne pushf nop popf int loope mov fs in inc mov fstp jnp cmp or sbb mov lahf out rep cmp jg sti repz pop add add jg sub pop cwtl scas pop push inc sub adc cmpsl ds dec je jle addl fild enter dec lret xchg mov mov and xchg movsl sahf js add inc xor (bad) fistpll sbb das lret sub cmc and push mov sub lret jecxz rclb cmp out test inc popf dec xchg xchg enter lret clc in out pop xchg mov ret out and (bad) jg jl xchg mov dec clc ja hlt (bad) gs js sbb cld and fs (bad) cmp xorl stos out inc rorb stos popf cmp fsubr sub fs (bad) in (bad) cs cmp or iret push jb xor add dec jmp xchg fild daa mov mov dec push adc aam sbb leave les mov movsb neg cmp inc pop mov ljmp les sub loope in flds xlat jg (bad) jne imul or mov scas stc jae cmp push adc sbb in mov cmp pop mov ss jae nop outsb or sbb setb sbb inc fadds fdivr lret clc dec insb xor jle push sbb sahf enter mov adc movsl push fnstsw imul lret mov and jo data16 jo lcall lods fdiv aaa lahf cmp dec fsubp inc sub (bad) adc inc inc jecxz (bad) xchg xchg xchg push adc sarl dec xor or loope cmpsl loope and inc mov mov push icebp inc (bad) lret movb sahf or (bad) mov adc mov push mov mulb das push add xchg ljmp stos dec aaa mov cmp push in mov pop sbb ljmp mov cmc cmp push aaa icebp (bad) ja mov fnsave aaa imul bound rcll and or mov push popa popf sub daa lea xor fs adc (bad) sbb sti mov push in adc xor out xor mov pop ret or lret mov fldl cmc mov xchg push adc mov push xor jnp loope mov mov pop mov add jecxz cmpsb popa dec and ret pop cmpsb adc orl flds push pop adc je jp pop dec icebp pop pop push es xlat jp dec outsl pop decl out (bad) inc sbb orl cmp or loopne test inc (bad) fsubrs lcall out mov push inc push xchg mov lret pavgw les dec je pop je repnz push aas push and icebp scas or or out insl xor in sbb cmpsb fidivrl push xchg sub test xor jnp bound mov sub iret cmp mov lock mov inc adc jns pop movsl fstp ret les push xchg push cltd fmulp mov rcl cwtl loope into lahf xchg xor push fnstsw add loopne xchg js fstpt shl cmp or fnstenv xchg or or jecxz mov xor lretw scas sub outsb movsb ficom inc jmp in lods call out mov jae int3 pop sbbl lods lret mov mov fldcw mov adc rorb jo jnp (bad) mov inc enter pop lahf add xlat inc (bad) std add cmpsl fidivl adc lods pop stos popa out aas cld lret xor xchg push jmp pop inc and push jnp movsb jne push pop mov xor ljmp xchg test jp adc std adc out mov xchg sub lods and popa push lock test mov push xchg cli pop (bad) jl inc fimull fldenv into lea adc mov jecxz daa popa sbb movsl cli adc out jp mov jl mov ss lcall (bad) loopne or fs xchg add jge lea sbb cmp (bad) lds add mov pusha push shlb lds (bad) popf xchg inc sahf mov out stos out xor mov xchg (bad) out in mov push cmp dec fadd sub adc pop dec mov lods dec xor push fdivrs aam cli pushf jo dec stos leave jg arpl sbb mov pop ror mov test rcr stos or (bad) mov notb cmp stc sahf ljmp lret jnp ja popf (bad) cs jge xchg pop pusha sub adc mov lock cmp or jb fs imul les loope pop mov cld (bad) rclb int3 fbld arpl mov mov pop pop ficoml jno cmp inc inc cli loopne mov mov in dec pop mov sub push incb mov cli fdivr int3 lahf sti adc test (bad) mov mov ret fildl sti bndldx loopne jge jg xchg (bad) test or inc mov in sahf je mov fiadd pusha jge,pt inc adc xchg inc jno loop cltd repz jbe or or xchg out mov mov sub rolb push inc xchg jbe lods mov in push pop scas arpl mov pop clc jmp push dec lds push in pop xchg xchg ret cli loope adc (bad) scas dec repnz mov (bad) push popf cmp sbb adcl dec (bad) idiv fs iret cmp xchg mov (bad) je push jg fldcw or insb mull iret sub ficom data16 sti or mov jb and jge xchg cmpl lahf mov jmp outsl outsb mov pusha cmp scas fcmovbe sbb cld xchg or lock fnstcw xchg lahf int jne in scas ret sub mov test outsl and shl int jl outsb in push jns pop mov jno dec (bad) ss inc outsb inc out xchg lea idivl and mov andb dec inc jl jecxz xor sub into dec sbb lret pusha aaa jb in rcll push push popa or push fwait call out dec into ret push lods fsub mov ja popa outsb repnz (bad) loop es (bad) push ds repz movsb ret add add ja inc sbb push popa imul sbbl mov outsb aaa xlat push xchg repz fucomi push mov push in call push mov adc ja sub je gs add push xor fiaddl xor fld outsb pop (bad) adc xchg mov cmpsb movsl in movsl movsb jnp xchg fidivl cmp mov aaa insl fnsave in lds data16 (bad) xchg out rorl xchg cmp imul int ja pop pop js xchg test sbb ja xor mov call cmp fdivp adc or daa cmp enter cmp add push mov mov inc mov les je pop pop sub jb imul leave cwtl neg fsubl sub jle pushf clc test rclb sbb out mov add pop mov xlat mov add test rcr hlt mov in fidiv cwtl mov shr (bad) in adc fs inc fimul and test loopne jp repz gs sbb push adc dec mov adc xor negb mov nop scas lahf cmp pop cli insb dec mov ret gs inc pop fildll mov push daa outsl dec dec mov mov fwait push lods add sti jo leave jecxz fwait inc lcall mov repz xor mov andl fcomps fild push bnd xchg cmc jmp test inc pushl popf mov scas jnp call fstpt mov mov outsb mov jp adc mov test add xchg cmpsb test (bad) int3 mov stos out cmpl cld sti fld mov mov insl sbb xchg dec sbb pop bound mov cmp in jle loop in sarb cmc jbe sub out in mov mov mov adc cltd xor push pop sbb das ret ds dec sbb test cwtl xor sub inc mov xabort pop loop sbb xchg mov leave pusha and out jge repnz xor sar lahf sub sbb rorl cld adc in or xor cmp push in dec jne clc lret cli or mov jecxz sub inc call and pop pusha rorl es inc push or outsl lods (bad) insl movsl jns aas mov jecxz mov (bad) mov fist aas xor popa push divl addl iret add fnop dec jnp and aad add and enter sarb sub adcb inc stc adc dec add (bad) aas loop data16 lret aad int and stos dec mov outsl pop adc dec inc sti out sbb es push pop scas jns rcrb and mov out loop push xor push jle jmp mov js push pushl mov xchg pop pop dec mov in pop sub mov jbe addr16 pop (bad) stos call roll jge mov sbb inc out aam mov pop mov sarb and add bswap cmp pushf rcll mov rclb popa add push sub mov in std mov or lods or shrb movsl mov in pop test mov fsts scas fdivs sbb aas mov mov fist notb push shrb lock or pop jg pop and xchg mov or (bad) xor gs imul outsb fwait mov fisubrl aam (bad) dec and mov inc jmp (bad) adc (bad) xor out sbb ljmp sbb fs insb add fdivl mov loopne addr16 imul or pavgb mov loop loope push data16 jns inc inc daa push mov inc inc xor jl and lcall inc xlat call bound sti xchg mov ss stos repz rcll insb rolb push pusha scas pop in fsubs cmpsl decl (bad) push decl (bad) shlb add mov mov mov cmc addl cmc mov mov xor movsl adc mov dec dec jae push ds cmp jle test sbb mov aas ss mov dec pop insl jecxz movsl push adc test out sahf out out mov (bad) xor fmul mov dec enter in xchg jnp loopne dec sub loope enter mov or dec pop mov inc pop cmpl scas es xor outsl inc subl adc fxch out out inc adc inc or cmp jp in out mov xchg js movsb jnp leave or jg xchg aam adc add and aad push into or aad mov cli adc jne xchg pop mov iret mov ss pop je outsl cli xchg mov jl pop cli aaa lods (bad) out jbe pop (bad) push jp cmpb xchg aam imul pop fs mov mov cld adc xchg cmp fnsave in insl inc jb insb mov aaa lods dec movsb jl loope mov cmp scas rcr sub lret gs outsb dec adc ds into cmp repz dec outsb pop enter dec or jae je lahf cwtl xor lods les icebp mov mov jne bound je cmp and fdivr addr16 daa mov xor out inc es push sub xchg jae mov sbb fsubrs push (bad) mov xchg inc pop sub push lret repnz test dec dec das sbb pop cmp (bad) leave roll lret and adc std dec adc lods mov adc jle sbb leave and inc mull pushf pop sbb fidivrl mov push int stc outsl (bad) mov ss ficomp addl scas lcall fwait inc xchg hlt das sbb dec addr16 (bad) ljmp adc xor ja mov lret stos mov das push mov in out rorb pop pop jne arpl mov ficompl addr16 cmp jbe out mov or cmpsb mov packsswb push cmpsl and loop xchg inc popf stc xchg push push pop mov stc arpl dec add or add (bad) mov push add push dec out ffreep icebp adc push add jne and test cmp sahf xchg inc lock fidivrl cltd mov jb cmp or cmp xor je xchg rcl cli cs out push repz push cmp flds cmp inc insl pushf jecxz ret lret addr16 pop adc cmc out roll decb add pop (bad) cmpsl push jne pop or insl fldt movsl lock shlb test push cli sub adc subl cmp mov cmp test test add or mov mov dec xor stos cmp cld fsubrl stc frstor xor pushf mov push mov clc pop rolb and jl scas stc mov push sub push dec ret outsb pop sbb push dec (bad) jno test cmc dec outsb add loope cmpsb insb mov jp jp mov (bad) iret loopne out mov in popf pop ret lea fwait add dec inc in scas in mov mov pop (bad) mov divl fwait xorl dec jae insl loope mov cli bound mov dec in jnp jmp mov addr16 sbb sbb dec outsb (bad) pop xchg xor int sub mov push fs jae fbld jbe jle shrl aaa cmp cmp push add mov or fsubl xchg es xchg popaw subl xchg pop xlat mov dec jle dec rcll in pushf mov push inc cli test or int3 add das cmp icebp xchg inc inc and mov and test sub loopne addl push cmp lock addl push cmp lock pop add jg out loop sbb cltd add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fistl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb sar ret jmp dec xor ljmp push rorl mov jmp (bad) jmp std sahf jg icebp (bad) daa ds xlat pop add ds fsincos idivl aam in imul out or mov adc and test in outsl mov sbb mov aam xchg popf lods xorl out xlat sbb imul add pushl inc repz and sbb lds lcall out scas fcoml sbb scas insb xchg mov add lret mov adc jp jecxz and (bad) jb imul add jo leave loopne ja stos mov jg push cmp sti sub sub mov stos sub pop (bad) mov es rol fstl jp,pt aas mov sub jns add jnp push xlat (bad) jbe and cmp std lcall repnz mul push or mov enter test dec cmp imul jns fsubrl pop loop sbb fs rcrl cld repz jne pop add jne jo cmp mov test out jge or stc (bad) incl sub dec cwtl pop jae cmc int inc lods pop je sub dec and stos rcrl movsl mov cmp pop ds pop jo mov jp notl lret lock jbe mov icebp and jne and out xchg scas shl push mov cmpsb enter fs icebp push roll mov and (bad) sahf imul xorl ja in xlat clc out dec push pop inc lcall in into (bad) jmp (bad) leave push xchg rcr and (bad) fistpl ja mov dec add gs sbbb sub (bad) out pop (bad) cltd sbb mov fwait sbb bound adc ss sub dec popa (bad) add push inc aaa fbstp sbb cli xchg or sub inc push add xor jbe (bad) mov mov adc scas lea xor jae sub cld (bad) repz dec gs cmp jno sysret adc je clc sbb xchg cmpsb iret fisttpl adc aad andl sub push pushf lcall and dec (bad) dec sahf scas aam xchg cmpsl dec movsl test mov outsb xor jo cli jne fldenv fsubrs xchg dec jae jmp into loopne adc jno xchg fimul es dec inc sub jp lods pop ds loop sti sbb jno adc mov jl cmp test pop das push fisub jnp mov inc test clc jnp loop push mov mov mov mov jmp mov pop push mov jl and sti jo cmpsb call xchg lcall cltd mov mov test inc sarl insb jb mov mov popa cmc push test imul arpl (bad) hlt push pop scas pop mov or pop pop fildll xor dec lahf lds (bad) push or dec push cs (bad) mov stos sbb nop lock incb pop sub pop cmp loopne xor sub jmp mov fcomp aam jmp inc xor dec push mov gs in jne mov icebp or movsl insb loope fcompl in test and mov gs enter sub xchg pop jge xor sbb in movsl add in mov je pop xchg inc pop mov or loopne (bad) lret and sub sub push dec int3 and mov mov das sarl jecxz cmpsb xorl push jae xchg xlat lock jns dec es or pop pop jne fcomip lahf add daa ror shrl stos aaa fstpt (bad) js subb cli jmp mov dec es aad push out dec dec push dec cmp add jl (bad) xlat sbb adc fcmovu inc lcall adc ja mov pop jp (bad) mov xor or ret cs or (bad) out insb leave xchg add mov sti repnz push push sahf sbb lods (bad) das fisub sbb rolb adc push mov fldt add divb dec mov test loop sub dec es push cmp xor mov xchg aaa clc and lret out mov test dec jecxz jne mov pusha stos js sti es lahf lcall fnstcw popa jno jmp xlat push sub sti lods fsubrs inc hlt xor jle ret mov fwait mov push and fistl in push push fwait xchg stos test aaa jl push jmp aam jne inc pop negl pop push sbb enter loopne pop scas add or int insb add sbb cmp mov inc xchg adc adc bound push out insl mov pop (bad) add inc inc (bad) iret xor add mov (bad) test lret fcomps push add cmp rol lock test cmp mov ds bound (bad) add inc rcl (bad) mov cmp fwait or (bad) jl test shll and hlt data16 (bad) arpl test pop pusha inc ret or jmp aas jb push pusha lcall cltd push sbb inc mov inc mov add repz add test dec push cmc cli or inc lock xchg mov mov jg push je divb sub inc jb xor sarl jg xor lods xchg ror ss or sub adc rcrl jp fdivrs xor push (bad) popf iret cmp dec mov ja jno (bad) cmp scas xchg and fwait arpl sub pop pop sbb rolb xor sarl inc cmp (bad) fistpl mov cmp push pop pop cld xor xchg pop je jne aam pop std mov lret sub (bad) cmpsb pop arpl push dec clc jecxz call (bad) sbb cltd sahf or mov add outsb jnp into cli inc mov mov pushf loope pushf push sbb fcmovb fdivrs int popf or imul cld sbb aaa dec xlat inc aad and ljmp mov mov or push sbb add jecxz mov nop push push ret insl cmp pop cmp inc sarb mov mov adc les jns lret out in scas test and mov jp aaa test clc addr16 inc adcl addl xchg mov xchg cmpsl outsl cld aaa lods and add lods bound daa cmp xor fnstcw cmp xlat inc imull inc pop out jle inc out (bad) sub inc test cli fldenv inc out cwtl leave or xchg das sbb lds xlat fstl and loope imul pushf repnz jae mov pop lods rcll mov loope fsubs repnz mov push inc sbb inc adc cld imul sbb int push lods mov ss mov addr16 (bad) xor and push (bad) ljmp in rcrb push jo mov inc mov jo cmpsb mov cmpsl (bad) addr16 mov clc shrl test mov xchg mov mov jb xchg pop and add lret pop xlat and aaa data16 inc or (bad) jbe xor shl lret xchg and lods jae inc push jge jb mov cmpsb push sub js pushf hlt and out into sarb xchg out mov push stos idivl xor adc push shrb mov (bad) xchg xchg xor inc sahf roll push loop dec fs or and out pop notb aas mov movsb scas (bad) scas cmp cltd loop jbe and stc js push lods scas andb std jo push xchg int3 push lret adc aad jp imul jb or data16 out outsb xor and popl add adc xor push clc mov sub arpl ret mov out dec mov jecxz xor icebp inc stos rorb or rcl mov ret es stos push pop sbb push imul notl pop adc xchg fwait sbbl lods push push jno ss pop ret or xchg mov jne movsl mov in push cmpsl movsl mov test out xchg aaa popf insb movsl ds adc cmpsb cwtl repnz add push cmpsl nop dec mov outsb adc hlt mov out mov dec xor add or mov out sti mov out dec or rcrb jge dec outsl scas jno push fidiv (bad) (bad) test push fstp and xchg pop push imul mov mov cmpsb imul fwait mov out xor jge iret add lds repnz xor aaa cmc jp hlt data16 adc pop sbb sbb sub inc pop mov lods push adc add popf xor push pop mov cmc sub xchg jg jl flds sub movl or jns or ret xor mov test xor and icebp cmp rcrb xchg xor outsb test dec aad adc jns rol xchg (bad) dec repnz inc sbb lds adc mov mov pop jg ja fiaddl mov cld dec push hlt push (bad) mov ret mov pusha rorb (bad) cmp outsl aas les js sarb mov call movsl or addr16 aaa shl out data16 ljmp jge cmpsl imul mov mov aaa pop stos or inc out sbb mov mov aam xlat cwtl mov push stc xchg add outsb lock sub pop in call mov dec das lret out fwait scas jge (bad) mov cs pop inc mov push adc add mov mov xorb fldt and inc cs subl ficom inc dec jbe in adc and scas jo lcall cli xor xchg test dec insl inc shll or out repz aas pop inc sbb rcll data16 cmp lods jmp addl pop out ds pushl mov pop sub data16 ss rorl sub cli call negl stc leave jb sub ljmp jp push lahf hlt data16 ja mov cmp or std aaa xchg mov cmp mov jle pop (bad) icebp pop fbld es test int3 mov push mov and gs clc adc iret movsl cmp sub mov inc and adc test lahf xlat repz mov inc xor sarl sbb (bad) lds test mov dec dec and rcrl jle les dec rorl or or jnp cmp or ja mov or and arpl cmpsb mov push adc scas sub push scas movsl ljmp mov or xchg fbld inc mov out jmp cmp xsaves adc scas sahf lods out cmp dec (bad) test mov mov adc popa addr16 mov sub jmp mov xchg sbbl jbe sbb es pop dec gs movsl or jl loop xor or in data16 ret xchg jne cmpb fwait sbb pop fs add add push adc cmp and cmp imul pop je inc mov (bad) pop mov (bad) int3 jmp sti xchg pushf scas mov rorb mov push ja cmpsl cmp jecxz mov (bad) and dec cld xor pop movsb mov inc dec dec lock pop dec push pop call cwtl dec hlt jb jne jae mov push mov (bad) insl call das imul jbe pop dec cltd cmp push mov fidivrl fldt and outsl and add jnp int3 sub pop xchg sub ror mov mov push movsb mov jge mulb dec (bad) and or loop sbb andb sub icebp mov xor call aam pop enter je push xor or mov xlat repnz fwait xor jno push in pop mov pop pop aas push sbb mov out jmp push sub repz aaa je mov xchg mov inc or push cs mov cs leave dec stos clc sub test sbb inc mov xorl mov roll sbb test and and leave es mov mov xlat (bad) int aam test inc mov lods repz mov loopne mov sbb jl,pt scas and enter mov jmp dec sbb (bad) scas inc mov mov push addr16 sbb dec jb dec cwtl lret inc xchg pop cmpsl insb jae je jecxz sub push jp (bad) mov sub mov aad out sub shr jbe xor inc or mov mov in mull fcmovne push lods push fisubr iret dec jp addr16 push repz jp fmulp out xor lret add jbe lahf test ret adc push inc (bad) dec jae and fcmovu arpl ljmp xor cmp fwait cli (bad) mov repnz mov cwtl dec jge ljmp pop (bad) jle stos add (bad) aas mov fmuls sarb cmpb and cltd aas xchg fiaddl mov cmp and int and mov mov ljmp sbb insl or jp loopne addr16 push mov mov in jg int hlt mov inc imul mov push mov jmp inc clc popa repnz lods mov ret jnp xor test leave popf ja or cmp daa cld xchg xchg das ss cmp mov mov push fidivr push cli sbb arpl dec (bad) lods xlat add xchg adc fstpt lock jnp in dec lcall jmp ret mov imul mov loope sbb std jle lods xor lahf lock in cvtps2pi cmp out dec fadds cs mov aam shll or cmpsb mov aaa shll xchg inc mov jbe addr16 scas lcall js loop mov das pop mov mov das (bad) out add incb mov adc adc add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb sar rcrl cmpsl xchg xor fnstsw xor jae aaa cmp jne jecxz (bad) jmp cld jle mov lahf xlat pop add cmp inc pop (bad) (bad) repnz jnp lea mov fdivl cwtl jecxz scas imul (bad) mov pop jno dec lods cmp dec sbb (bad) arpl mov mov sbb jmp fnsave push shlb test mov pop jmp fwait into stc pop sub xor test mov ja sbbl ss cmp xor lcall ja mov insb and test clc outsl mov jb xchg out nop fsubrs cmc cmp dec mov mov mov xor cmpl js add clc xlat dec pop jns sub and jecxz sub xor push imul and fs dec std jns push pavgw pushf nop mov out ret mov iret inc inc and jns imul jo (bad) dec in adc (bad) xor dec fistp das call movsl push and and cwtl and inc out dec into xchg out xorl (bad) ljmp (bad) ficom push add in (bad) fisub popf mov inc xchg test xchg in (bad) hlt lods cs das cld in (bad) ss loop cs cli idiv sti lods adc ja mov pop ret out icebp cmp daa or jno mov rclb add cmp mov pop nop das mov push mov arpl and pop call cmp cli movl out iret inc outsb (bad) push lea cmc ffreep subb mov xchg add scas sbb sub pushf cld std cmp dec mov mov imul or repnz icebp stos (bad) lods arpl push ljmp inc dec jl sbb sub push ficoml mov in mov mov test mov adc push mulb push into push mov fadds fsubrs mov dec add push incl cld (bad) xor cli or mov push fstpt xchg inc dec fs lret int3 in (bad) pop and push popa test mov rolb loop sub ljmp (bad) fwait sub add vmovmskpd das (bad) xchg mov imulb lock push sbb test std adc xchg adc imul sub pusha cli sub repnz mov xor test sahf shlb mov insl fdivp cmpsb pop sub pop movsb dec pop stc int3 repnz orl enter lock test lods jns outsb aad and jnp icebp fyl2xp1 mov mov nop stos dec pop ja mov add cli in (bad) fild xchg mov cmp mov dec fmull jo mov mov xchg in das pop pop loopne andl sbb mov pop sub sbb xchg rclb mov mov (bad) fwait push mov and repnz add xchg cmovo outsl sbb mov mov mov imul cmpsl jne imul and out inc mov enter pop (bad) insb fs (bad) iret pop or jno cmp outsb xchg into int3 test imul push in or test subl nop pushf dec mov psrld out add jl mov test jge arpl dec mov psubb sub add fchs je sub lahf es cmc dec xchg adc mov cmp or (bad) mov jle or aam movsb clc notb cmpsb pop call cld xchg insb mov int or lea cmp mov lret xchg cmp (bad) loope fldt adc cmp push aam sbb adc sbb mov sbb push (bad) ljmp xor sub push imul jno and das inc and mov sbb jae pop js jnp jbe or inc xlat inc aaa and xor fwait sahf fsubrs push nop cmpsb aad insb mov jne inc loop mov push movaps loop (bad) jbe in out lods fisubrl dec loop pop xor pop xlat sbb imul adc adc imul pop (bad) out pop push push shrl cwtl ss insb push mov push loopne (bad) and je movsl ja add lahf addr16 ljmp mov sbb in inc aas sub adc pop mov mov in scas jmp into pop mov xchg mov lahf push bound out (bad) incb shrb cld stos mov js ret out in dec test sbb into adc loopne dec mov fcompp sbb test (bad) aaa add int3 pop jp inc pusha or outsl ror lods sbb xchg loope loop call push xor in pop nop daa fwait push sbb sbb mov lcall out sub divb enter jmp popa pop repz push dec xlat jae,pn add mov mov inc bound call fist outsb (bad) pop ljmp and bound pusha bound (bad) jae sahf in lods loope,pn addr16 cmp mov or mov subb xor fldl jo ja jo or ss adc popf ja in xchg out mov imul push insl cwtl in clc lret inc scas mov or ljmp shlb movsb push leave push ret pop pop or fisubrl imul push push push push repnz ds (bad) xor popf xchg inc push pop cld jae mov insb outsl push push idivl mov pop cmc cmp and jb js jb xchg cmp dec inc fimul test add faddl add outsl add jp inc push cmp jecxz leave (bad) mov adc ja cld rcrl pushf xchg rcrb mov sub repnz out pop cli lods jne cmp leave pop sti sbb inc add out mov push arpl faddl pop (bad) popf and inc (bad) jb mov xorl jl xorb and cmpsl push xchg out (bad) cmp addr16 std aad sbb ss xor sbb cwtl mov mov adc push jb fstpl sub int jb cmp ret pop test pop leave push loope sub out pop pop push scas dec add (bad) xor leave into imul mov xchg es sahf mull xchg push xchg mov push xchg adc pop repz loope add adc dec and cmp (bad) mov stc add leave clc jnp pop cmc mov fnstenv scas (bad) aam sbb rcrb or sbb bound inc mov add push xor and mov pop cmpsb mov add (bad) or and lods lods fldl cmpsb lcall and pop lods in jp sbb and mov and push and mov add push scas out test push jns bound es pop loope cmp mov rcll xor nop xchg nop xor push push sbb cmpsb adc test sahf sub cmpsl imul popa (bad) iret in cwtl inc pop je (bad) dec out xchg dec cmpsb xor jl scas scas push sbb sahf push sbb xchg negl jo ljmp fidivl lcall adc roll shll push dec jnp addr16 jle ss xor test loop xor fnop cs push mov dec dec (bad) xchg cmp pop js addr16 xchg in repnz mov pop jno dec pop mov rclb orl adc or repz rcl nop rorl cmpsb aas sbb test (bad) jp,pn mov mov push (bad) into adc or mov and aad mov int aaa fsubs sbb push xchg jle (bad) shrb loopne cmp pop jo fdiv test push and jne cs jg sbb mov lds and xchg dec fwait inc and (bad) lret clc fsubrp ret dec test and addr16 ficoml xor daa push jns shrl aam sub enter data16 test mov arpl cmpsb sahf jmp out repnz dec into jle mov or mov inc rcrb pop je pop jae and xchg xchg jecxz mov mov xlat add cwtl pop jns cmpsb out dec mov and mov pop sahf movsl pusha adc xor jmp add xor (bad) cmp imul lock mov enter in out mov inc adc shll xor mov leave dec aam jne cmpsl repz je fwait lock lret ss ss aam jle loop test jge pop cltd push sub aaa adc cmc pop cmc test (bad) push das push add mov cmpsl imul aad cmpsb and test push mov int xor dec ret add mov pop sti stos jecxz lret jb lods imul jg jmp mulb insl stos xchg xchg and cmp mov inc and test aam test jl sub push mov ljmp lahf push int3 pop pop mov pop jg loope sti adc xlat fdivrs pop mov inc leave sarl inc fisub dec mov es and cmp push mov fldt jmp adc xchg mov loop mov dec popf divl push lret inc xor insb mov jge fdivrl test adc xor into mov jge mov dec push push (bad) and dec bound loop jbe pop pop roll repnz aas int3 arpl addr16 lock lods icebp mov mov data16 test jns rcrb pop jle inc out push adc mov push pop mov mov xor out fs repz jo clc lcall imul adc mov or mull xchg dec mov inc aam mov push in xor jmp or cs js dec (bad) data16 andl test gs mull mov in insl lcall pop pop dec popa pop sbb sbb stos xor jbe add es push mov imul xchg cmp dec pop gs in shlb add cmc sub inc sub scas xor test mov cmpsb imul loopne cmovg bound loope or mov imul sbb jp cmp aad push repz lods adc fwait add mov dec push inc cltd push je icebp ljmp sbb mov or dec pushf mov and push mov cmp (bad) repz lret inc outsb xor aad or dec adc or loope push push mov ja aaa stos bound push dec imul dec sahf movsl neg lahf pop cmc xor jl pop mov out aaa xor cwtl sbb and push aaa mov xor inc adc in sub xorl lcall add ret mov call jle (bad) sahf (bad) dec pop sub aad and mov int3 ret xor xor sbb test out jle jne imul mov and sub lcall jle jg or test mov or sbb mov cwtl (bad) adc mov imul cmpsl pop jnp pop mov mov and jge inc movsb ret popl sbb mov (bad) fidivrl mov dec stos shr add mov dec in ljmp pop cmp aaa lods jo pop out mov xchg mov add dec mov inc or dec mov xchg mov sub mov mov (bad) aad push cld jl pusha mov fldt ss cld pop arpl fldenv nop sbb mov pop sbb or pop sarl push mov gs jmp loop sub mov mov jns (bad) mov add inc cs inc aas jg sub mov cltd sti jmp mov jge outsl je jno test push dec adc fwait mov adc mov leave imul cmp add pop (bad) test aaa pushf sti adc daa adc loop xchg stc imul sub imul cli mov mov mov mov jecxz out add sti out and inc (bad) jecxz mov pop aaa sarl fwait in adc cs mov mov inc push daa and mov mov or js (bad) sbb xor lret js push sbb mov lahf push xchg rcrl cmp mov lcall stos jo pushf pop and sub movsl (bad) aaa sbb cmp ljmp (bad) cmp sub call call adc and mov jge push inc int sbb dec ja incl (bad) mov frstor lret daa mov jns sub scas pop jmp ja,pn mov inc and inc push dec fldenv popf adc clc mov sbb loop inc xchg cmp faddp das gs cmpsl inc pusha mov mov pop xor dec push mov xor stos push in cs notb mov inc (bad) (bad) pop sbb cmp bound mov loop lret pop scas jmp jne sbb and clc in arpl mov (bad) vpcmpgtd test inc cmpl insb add cmpsb hlt mov or cltd ds out sub pushl pop lock or cli push add sbb xchg out or fsubl lea lods jno dec (bad) jmp or daa mov add cmpsl sti push addb sub icebp gs repnz iret mov (bad) inc mov dec xchg fidiv lret cmp jl daa mov fwait cltd xorl mov push inc sti jno or jg add outsb mov cli adc mov cmp ret int mov mov loope lea pop or sub icebp outsb scas flds (bad) out xchg bound movsb in jecxz lret inc pop fisttpll pop xchg or adc dec stos lret les sbb xor mov rolb pop or sub mov movsl push xchg inc aas rorl sub mov jl sbb movb pop stos test sbb mov popa pop fmuls xchg mov ds sarb xchg and jle inc cld out sbb loop mov das pop mov mov das pop mov add aas jecxz sbb cmp add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push and jecxz icebp xchg ror je dec ja push rcr jge je jae cmpsb cltd ds jne (bad) cmp insb jb lcall out js jns add xor call mov movsl fnstsw mov mov pushf icebp test mov dec jecxz mov setg adc xor and push sbbl in cmp add inc and xor jo loop aad fnstsw or imul fcmovnbe popa mov outsl gs sbbl or add mov scas adc pop (bad) aad outsb push loope icebp xchg xchg and scas test mov pop lret mov add xchg xchg jns ljmp inc inc xor jmp std push mov xor pop mov push arpl push pusha cld xchg add (bad) lods (bad) cmpsb or in mov mov imul mov mov mov call xchg mov fistp gs pop lcall gs add arpl adc sub fwait dec fistpl pop int3 lahf push add or mov fsubs xor push mov pop push mov je or pop cltd jp out out out adc adc mov xor cmp cltd mov cmpsb sbb mov je call pop adc imul add mov add or adc ret cld push call shrl and add imul sub or mov (bad) rclb loop mov xchg sub rep daa xchg or mov test pop pop popa mov add mov cli mov add ror lret jecxz movsl and ljmp push lods daa lods cmp (bad) in pop mov inc and push das push ror (bad) mov loopne hlt inc int3 jns faddp mov xor mov jle push cmp iret out mov nop ffree jo je jle cmp xor xchg scas stc in das fnstcw std mov inc xor cmc ss push (bad) in fwait ja dec (bad) movsb daa lret push push roll in ret aaa (bad) lea cld pushf push xchg pop mov ret cmpsl sub sbb mov and mov je and (bad) je xor or shl xchg imul add pop cmc imul cmp jno jnp mov shr jne js lock and rcr mov xor out xchg sti call nop ret ret and mov push mov faddl addw scas les mov push adc mull or popl mov dec or daa ss inc lds mov js ja xchg jl or addl push dec ja popa test leave xchg xlat mov xor xor mov jmp fwait xor mov and fsubrs xchg rolb je cmp roll rorb mul lret mul sbb push mov rcrl pushf push mov mov or or mov popf pop ret mov cmc jb sti add xchg insl pop (bad) sbb add xchg insb andl in mov out in test cmp xor nop sbb lds mov lahf (bad) cld aaa inc mov cmc push sbb rolb inc (bad) (bad) pop push xchg lcall inc notb cmc cli mov xor adc or push xchg jb dec dec inc sub mov lods ret ja aaa dec xchg into pop or lock int3 insl sti mov cmp ds ret leave jno bound fistpl (bad) daa cmpsl enter mov or pop sti xchg and cmp js push pushf fstp iret push ret clc pop inc dec sub popa incb shlb lahf iret jmp push lock test pop cli das pop mov mov clc cmp mov imul jmp and pop (bad) mov or in je,pt mov inc das sub pusha mov jge jae mov xchg shrb adc dec xor add mov xor mov xchg sbb mov cld jne les jb (bad) jmp pushf je pop inc jmp hlt push mov push (bad) ds xchg sar in inc xor cmp dec fld jo add adc pop daa (bad) sub scas fistpll jno into out or push or and aas mov inc sub lea xor fnstenv cmpsb nop or push lock and movsb insb fmulp xchg movsb aas mov mov jmp (bad) mov flds gs mov jp dec out mov pop test fsubl test mov xchg jle inc shrb adc adc or cmp mov hlt adc mov pop ss mov add (bad) push cmc daa (bad) pop and sub fistpl jecxz jecxz repnz push loopne test dec enter movsb das lcall add icebp dec (bad) push cmp cli and mov add sbb push int mov xchg mov jns adc mov incb int3 mov (bad) scas in aaa js adc in mov mov (bad) lahf test push or aas repnz arpl push movsb movsl xor (bad) leave sub out test push rclb rclb ja stos xlat push ja (bad) mov sub popa lret xchg mov into or pusha lock test (bad) mov mov adc push adc (bad) push mov push insl inc push test jle test add popa popa xor fildll lds test jp cmp into push mov pop ljmp cmp push lock stc jge into fwait iret lcall aad inc mull xchg sub dec jp imul xor enter adc xor and jae cwtl dec cmc and adc dec out sbb in xchg pop dec imul pop cs dec fcompl lret or aaa lods pop (bad) out loopne sub in pop sbb add adc mov and pop popf outsb mov sbb dec fistl icebp ret lcallw pushf mov dec inc lea insb dec sbb mov or gs cmc arpl hlt sub and lret in pop aaa mov aad js cmp mov xchg dec in sbb pusha adc es dec cltd mov mov lods adc xchg inc outsl mov cmp sbb jbe test xor xor es (bad) lahf adcb arpl insl mov stos into pop dec movsl fsub inc xor mov (bad) dec mov jmp add inc mov sarl lret paddq int add int imul mov mov in sbb xor das leave xchg fnstenv lds (bad) sbb mov shll inc (bad) add pop xchg outsb sbb pop into data16 dec xchg mov mov pop lea out and sbb jecxz lcall cld jge xchg (bad) adc pop lahf cmp push sub ja adc add lock or fwait dec jle imul mov out int3 loopne in pop push daa stc in push xchg xchg dec push xor arpl js adc and cmp and sub mov test rclb in lahf xor lret push inc aas fs adc gs fucomi test inc mov cmp (bad) (bad) les call inc inc leave or mov sti fnstenv (bad) out arpl cs pop fwait add sbb icebp les scas test mov add test fs idivl call cs dec test xchg xor dec mov (bad) incb adc jp pop pop pop stc push add in pop leave mov ret mov out mov in cmp jno cs pop aad inc mov dec cmp fisubrl fisttpl xor add xor adc cmp imul jmp sub sbb (bad) ja dec pop (bad) mov jns imul adc dec adc dec and nop lds mov icebp mov mov xchg inc pushf sub loope mov lea cmp mov add pop fnop sbb xchg sbb cmp cmp dec and cmp cmp ret scas mov and cli xchg ret test lret popa xor mov dec xchg jo mov (bad) sahf mov xchg fildl cwtl test ljmp lret xchg outsl inc or cli pop push inc sbb sub (bad) dec xchg outsl xchg mov pusha or and or jge sub adc mov jns jne ficomp aaa ja xor jle or xor pop push pop sub test xor sahf (bad) adc hlt pusha xlat jo sbb out xchg mov ja lahf popf dec xor inc ja pop cmp movsl aas mov mov dec arpl jne dec jle or pop ja inc cld cld cmc cwtl push cmc shr mov jge cmpsl cmpl or les jnp (bad) jb stos mov icebp lea or test js xor push xor push or les cmp ss jne pop adc lods stc sbb sub jg xor je mov push cli leave sub dec outsb lcall push jb test jbe test jo aas inc adc adc pop inc mov lret sub jl inc xchg and nop aas dec mov test (bad) rolb pop cmp dec (bad) mov ja push divl (bad) and jge mov iret mov adc add stc push sub lds jl inc xchg xchg xchg cmp lds out cmp ficoml cmc push in mov rorb lret out stc adc mov arpl in mov pop xor mov mov iret push push in or dec mull xlat daa out call scas les cmc inc fldt add push jle cmp ja in sbb mov daa mov pusha add notl cmp xor and cwtl ret and jg arpl pop xchg pop cmpl push mov and jp push ds call into repz inc (bad) (bad) out rolb push stos (bad) aas cmpps cwtl cwtl push scas addr16 xlat adc cmp lock cmpsb xchg shrb insb rcl jl,pt loopne pop xchg pop mov push push ss jns in pop loope adc fwait xor outsb fldlg2 jne shl negb out aas sub stos aas xor in dec lahf aas inc sbb inc loop mov dec fcompl push je xor idiv jp mov sarl xor into sub cltd jle lea fwait in dec ja in popa xchg loopne inc addb mov les add mov scas repnz push repnz or mov inc rcrl xchg dec pop (bad) into sub add xchg lret clc and and sub shr popa xor adcl fwait xchg cmp mov (bad) lcall inc cmc pop scas push scas mov add mov or mov aaa push (bad) negb fstps inc lds xor pushf lods subl outsl aas cmp jge imul mov imul jg xchg jo test int push rcrl mov pushf push mov nop rclb stos out pop dec (bad) aas gs pop pop jle jns lds in fwait lods test in ja xchg dec outsb push sbb repz stos popa (bad) push in pusha (bad) pop mov jae dec iret xor xor inc push or out cltd test mov and xor xor or mov lods sbb jmp test cmp clc pop jno jnp arpl lea mov pop inc sbb push jge mov rolb stos or inc mov mov mov dec sahf mov pop mov xchg stos jb dec xor (bad) aaa es scas out aad sbb repz xchg ljmp loop sub or mov adc mov sub sub mov fnstsw sti addr16 insb movsl gs scas xlat pop xchg or fstps mov xor add hlt xchg xor sub push cmpsw pop mov sbb sub pop psubq dec xchg into dec iret adc in push sahf xchg mov bound or pop adcl xchg daa xchg cmpsl iret js lods data16 sbb cmpsb scas out dec sti repz aam xor in jbe,pt pop push cmpsl jecxz sarb out or lods and mov aaa xchg cmp (bad) dec jns movl push jnp xor dec pushf addr16 mov xchg lret cmpl mov dec in adc lods lods mov lcall or (bad) jmp nop push or xchg imul sti jbe dec rep jg cltd sbb mov fisttp sbb nop fwait pop jg push fbstp sub cld dec sbb mov sti push iret test xor fxch lcall flds test roll shr push fistpll test cmc cwtl cld out push pop pop fstl out fld lea and push add (bad) jae dec repnz imul xchg cmp and (bad) lea xchg xor subb ldmxcsr mov js clc dec fucomip lds popa xor lds mov fiadd adc jo scas loopne push push neg mov lret (bad) gs aad jnp (bad) cmp loopne pusha mov xchg repnz mov xchg inc es ret push (bad) outsb xor bound insb imul test leave xor int3 hlt mov lahf in cmp push nop jecxz dec dec lea mov mov rcll sbb repz jne inc xor lcall cwtl or loopne fistpll pop pop ljmp std das aas lods mov lahf cli stos sbb jne rcl movsb into fcoms xchg movsl rolb and das mull cmpsb mov imul pop mulb or pop pop sub sbb sub cmp lds js loop mov das pop mov decl add aas fcomps cli mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fist add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push and jecxz icebp adc jne jno dec popf cmp xor xor insb dec sahf sbb ja out insb cwtl out int mov ss mov (bad) sti cld sbb loope add andb adc jg in movsl pop pusha ja cmp jbe (bad) in outsl lcall (bad) mov aam repz mov out dec dec sub pop jl adc xor dec mov mov adc cs int3 lock mov ret mov in ja les lods out lea in inc cmp in imul and or mov sbbl mov sbb mov pop movsl inc dec sbb mov mov scas adc push faddp movsb jle pushl pusha and (bad) aas lods cmpsb push cmp inc xor popa rcrb in rorb pop mov dec xchg cmpsb sub and xlat lret outsb addr16 je jp mov pop adc and add movsb mov inc out int3 mov shr cmp mov mov mov enter movsb ffree test jae rorl roll mov adc pop push out repnz push repz mov jge inc ficomp out sub pop std cmpsb das inc in es loopne (bad) fsubrs pop repnz arpl mov mov idivb in adc stos hlt fdivr (bad) (bad) (bad) xlat pop mov call sbb inc or rcrl inc in mov xor or int dec pop icebp out out jmp xchg into adc xor outsb dec xchg xor outsb mov insb std inc xorl leave sti addr16 lods jmp and xor ret jo int3 sbb iret pop adc cmp add mov stc mov xchg fst aad aaa (bad) fstl or inc fs loop cld (bad) cmp bound (bad) xor sub jo or mov es daa imul pop and sub ljmp stos mov imul push aaa (bad) mov xor xor or cmp je rorl jle and and fidivr or cmp nop sub push insb cli and scas mov dec daa cmp out add jbe pop popf popl add daa repz dec push push fstpt jg neg (bad) repnz loope into ret mov aaa sbbl and int push out shl (bad) mov pop leave xchg scas (bad) jmp cmp mov pop scas xchg loop or int3 mov xor mov into testb mov mov fsts fldl adc imul inc pop fiadd data16 jb int3 pop fcoml je mov shrb inc pop lods cli lcall mov in lock out fnstsw mov sarl cmp mov jle orl and pop test mov or mov adc jmp (bad) loope push insl sbb ficomp imul icebp mov jge leave mov sti sub mov pop xchg rolb fwait je out adc pcmpeqd in inc out jns js (bad) (bad) mov lret dec roll xchg (bad) fcompl dec xchg xchg js in mov mov (bad) pop add push jne mov call (bad) pushf aam outsl dec xchg xor movaps mov jae jg mov push and mov rcr lcall xchg jp mov mov jg outsb test push mov and inc sub dec cmp call sub jns jne and add aam inc je cli push and sbb aam xchg xchg fcmovbe out lods push fisttpl mov in sbb mov lea push adc data16 xchg pushl xor jle cmp mov dec add sbb sub scas idivl cmp jmp or xchg push out in shll mov sub mov (bad) arpl mov les out lock (bad) jo mov lahf lret sub pop xchg fdivrs mov mov nop sub xor cltd sub mov adc outsl popa js add in add mov es imul fidivl inc int xor cmp xor dec dec add std mov push stos incb gs xor lds jbe sbb or add push fnop jl xor or push clc xchg sbb fldenv jmp call repz mov sub push mov pop les es mov pop mov loop pop (bad) add (bad) mov add fidivrl std lods and hlt or int or fild jle lods push xchg jns mov mov dec pop pop mov cltd pop mov inc out xchg pop loop and sbb jg cmp xchg and mov mov xor loop out xchg sub dec push (bad) icebp in mull mov push sbb add outsl notl test test pop mov cld shrb bound inc test call mov jb repz xor pop popf add iret lcall adc pop lret fdiv jp jo clc xchg leave in mov dec (bad) (bad) push mov call mov mov ficoml ss das scas js sbb sbb scas xchg pop xchg add mov sti rcl inc stos jmp fcmovb pop repz mov pop push push out fsubp sbb test inc iret pop and add cmp and dec or nop or repz mov or mov into push es jb xlat jge leave pop fcomp sub mov sub push outsb mov cwtl sbb (bad) or lock or jns dec scas mov jb insl fisubl adc mov jb mov dec xlat or mov clc (bad) lahf fnstenv xor add aam sahf mov sub xor push adc sub cmp sbb jmp mov dec pushf jl js sahf jns int3 mov xchg add sbb sahf pushf and jg xor jo jno int jbe (bad) sar and pop cmp push je fsubl aas movsb pop push outsl push dec lock out jp mov xorb jbe or dec int3 mov dec gs mov (bad) mov inc or jnp clc or stos and fisttp and dec jne adcl dec int fidiv (bad) and loope mov cli (bad) aaa les sub fmull xorps (bad) jno popf imul flds loop pop adc cmp in mov pcmpeqd mov and jb sub sub mov or inc dec push sbb jno adcl add push repz mov xor mov mov loop sahf mov add cli std sbb int pop pop pop dec mov outsl sti cli jle gs xor xchg daa pop pushf mov cmp mov mov push insb xlat imul nop mov jmp mov push mov (bad) dec sub pop push ret mov xchg andl pop lret jbe sub jg out mov mov dec fwait mov cli pop ja jns mov inc mov mov mov jle mov out xchg insl dec inc xor stos lds subb insb xor insb adc mov sarl mov mov or lcall stos push es repz rcr or cli fsubrl aad je jge jecxz sbb pop lahf cmp stos or data16 rcr out dec push mulb dec gs dec jb,pt inc jge push inc (bad) mov push xchg sbb fsub (bad) mov mov data16 jne loop dec sbb dec mov xchg mov sarb pop ss mov sti out xor enter sub jae adc divb cmp gs scas xchg arpl testl cmpxchg sub std add imul nop gs aam faddl push loope pop in and movsl pushf sbb pushf (bad) dec outsb add push xchg stos aas mov or adc mov (bad) jo mov movsl (bad) xor mov push sbb mov int adc pop jge addb (bad) test mov cmp popf mov add jnp cmp mov pop addb jae adc xchg insb mov shl rolb sub idivl mov imul fist aas fucom xorb lds mov or (bad) or push jae dec into mov enter xchg jecxz cmp fs out jae add fimull adc mov das movsb js,pn cmp mov mov cmp push pop push loopne and fcmovnu pop mov jno sbb (bad) cmpsl inc push cli pop cmp cmp cmp push pop xor stos icebp or aad push mov lahf (bad) mov ficoml xchg aad lods cli jno (bad) pop mov (bad) or cli insl pop mov movsl mov or lock and sarb bound movsl mov fimul repnz imul fwait sub xchg aaa inc adc or hlt loopne aad push cmpsl sub or jnp pusha xchg jge std test mov cs xchg cmp inc and inc jl decb imul push adc and jbe stos aam aaa rcrl iret cmc or push or cmp movsl std push pop fdivr pop in xchg xor roll mov scas and je (bad) scas add add push adc dec jle leave cmc and andl aas fdivs out inc aad and (bad) xchg psubusb xchg dec mov xchg daa ss lods dec into int3 in or jbe cmp lea mov inc mov stos int cmpsl xor in dec test lcall ret les pop sbb mov mov inc push xor out push je imul xor inc dec cmc in das lret mov aaa mov cmc leave mov adc arpl (bad) aaa mov cmp dec int push cwtl repz xchg arpl xchg sahf adc bound icebp mov jecxz int sahf inc mov mov sti and stos mov sbb xchg xor jbe cld jmp lds mov stos das push sub or (bad) pop ds bound imul bound mov xchg repz xchg jae repz clc mov mov clc mov sbb jnp into pop lret jae jmp xchg cmpl dec (bad) hlt mov inc inc sbb push pusha fidivrl lret mov in test pusha test movsb jo add fnsetpm(287 pop xchg ficomp xchg mov mov repnz jle dec and mov jmp mov pop push int xchg gs xchg fsubrl adc sti mov pop mov int ja insb sti (bad) out pop push cmp mov iret jl (bad) cmp and lods cmpsl inc cmp xor ja popf mov xchg pop dec bt add or je and scas fsubrp jl jb cld lret sub outsl shr cmp jl daa ficomp repnz xor (bad) mov popf dec sbb xor push xchg pop mov int3 cmp mov iret push add push lds pop or clc lods mov mov test in bound data16 mov push adc dec lods cld jne decl das push ds lds mov or jno or xor jg sbb es pop mov stos cld into imul xchg mov mov hlt mov mov leave mov ret sbb movsb jle push jp popf mov es aad data16 loopne jmp xchg rcll aaa and imul (bad) int cmpsl pop not aas push out sbb add ljmp and add test or cs shlb in ja ss mov (bad) sahf sub sub (bad) lds xor fs mov repz sub aad (bad) stos and push cltd jb xchg clc dec bound xchg cmc pop mov sbb cwtl jbe daa sub add cltd sub pushf push jae insb push add sub jmp mov cmp pop mov lds stc cmp mov fcmovbe jno pusha push and es or int3 pop mov or call and test rol scas dec xchg stos xor cs das pop ds cmpsb cmp sbb out xchg (bad) lock pop jmp pop into mov mov xchg mov push (bad) dec ljmp movsb jg xorl sbb xor jae sarl and out jg cltd addr16 data16 cmpsb sbb jnp add addb mov jnp sub in jge cmp xlat xchg es inc fwait sbb and movsb xor movsb out push ljmp mov xor mov sub pop je,pn jl jnp cmovle sarb popa inc cmc movsl insl icebp pop push gs lds mov push xchg or mov sub pop int3 lea popf fsubrl dec dec jle sub or or xchg add mov dec cwtl call jo inc les in popf call pusha jecxz mov jbe cmp jp fstl ljmp jmp mov (bad) fldt stos fs mov xor mov inc inc or sti pop lea into lock in mov fcoms fsubrs (bad) ljmp (bad) mov scas pop mov jge sub or insl sbb lret or movsb (bad) dec pop mov sbb enter int3 fistpll lods cwtl shl pushf fs pop hlt sbb pop daa addr16 pop stos lock push xlat lods aas negl adc sahf out outsb inc (bad) and fld outsb (bad) je or (bad) mov sbb push fbld (bad) cmc aam mov test hlt jp (bad) mov mov imul and negb testb int3 sbb jmp pop or push not jns stos shlb hlt sbb rorl push cld ret scas in sub jnp cmp mov jp call push cmp cld pop adc xchg jle add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficom add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push and jecxz icebp mov push inc and inc outsl jno dec mov mov and sbb mov sahf and push mulb jnp fnstcw cmp xor jbe js fcomip fistpll incb mov adc adc xchg pop mov int insb xor push out and jno pop aam pop dec icebp sub pop in adc cwtl jae and pop push mov adc xor add push insl xor push xchg jb (bad) mov cmpsl jl push mov or cwtl mov dec sbb inc sbb jge push leave jp mov popf xor and and mov addr16 jmp push std enter push mov mov (bad) jge pop sub inc cmpsb mov dec shl test pop sti sti sarl pushf pop cmp nop lcall cmpsb pop sub pop movsl adc jmp inc jo popa cmp xchg aas xchg loopne jo gs rorb loopne popa xchg mov daa or xlat xor (bad) fildll cmp pop sub or fildl test xchg jno or or inc loope and jnp pop push repnz jmp dec xor (bad) xor movsl movsl (bad) js shrb mov xchg pop test in fldcw push scas add dec scas and iret popa inc or pop jle mov stc jb xchg xchg inc pop push and jne xchg mov mov or adc (bad) mov popa mov mov pop cmp arpl pop push fmuls scas jo xchg or ljmp jmp in mov not fbstp mov stos loop aas lret (bad) aaa fnsave adc imul xchg push in repnz je mov icebp lcall test rcl mov pop les sub roll cmp jecxz pusha xchg add push dec inc add loopne,pt xor fmuls inc stos push enter cmp xchg dec js push adc into test sub (bad) sub xchg mov cmp push aaa dec (bad) xor mov icebp jmp xchg cmp and les (bad) add (bad) mov (bad) mov xchg and sub scas ljmp mov lods mov call ds lret fcmovnbe sbb addr16 and loopne sub jns in lods jno scas xchg test xchg je xchg mov imul and dec mov push insb push push and mov cmp sbbl gs xchg decl imul gs cmp mov sbb push mov cmp jp mulb repz nop xchg sbb mov stos inc cmpb ret xchg sbbl das lods or fs and pop mov fdivrp xchg xchg mov nop push je sub push pop ret stos xchg lods cmpsl push dec xor push call xchg sub ficompl aaa xorl in jl iret xor mov push ret cmp gs data16 rclb es outsl xchg sbb in and sti adc std mov xchg repz sub insb fwait (bad) repz ljmp ljmp rcr cmc pop cmp inc jle dec lods sub mov inc aam outsl icebp jns in jl in into adc jle and dec xchg mov cmc cltd stos cmp pop cmp push cmp or leave out and outsl popa jge rol jmp and sahf inc xchg ljmp inc jbe pop hlt jnp xchg (bad) je mov imul inc fistpll dec pop leave gs xchg inc sub dec stos shrb cmpsb fsubrl jae divl xor cmc cmpsb pusha shll dec adc fist test stc test nop ss cwtl fs and cltd push loope fild aam or (bad) push cmp stos and cmp jp inc push mov inc push xor pop (bad) rcl leave movsl imul hlt xorl popa push repz or btc mov inc jno xor xchg out les ror pop xchg les test pop subl push mov mov fnop xor lahf or leave or fsubs fs fild enter ret ja sub lret xor in and dec das rcrb xor and jno adc out fstpl inc les jmp js cmpsl in mulb movsl xor pop aad pop enter jae iret (bad) outsl out sub imul or testl mov push roll lock neg es xchg aaa ja jb mov push sbb sbb (bad) dec mov ret push bound push inc pop sub and dec sbb add push jbe push cld push (bad) stc imul test mov aad push jo pop and (bad) xor loop addr16 dec (bad) clc inc ret subl call push mov adc mov push jnp mov sbb mov test data16 call test xor repz inc push inc pop call jae xchg iret pop sub inc aad lcall addr16 push shl push or jmp repz es int mov das jne jg dec rcrl repz bound ss mov fs out inc jae adc (bad) jo xlat push dec pop lock fnstcw stos aad mov daa ljmp mov mov cmpsl and insb fisttpll adc pop jns cmp loope es mov xor push lret loope fcmovbe pop popf cmp push or jne push in not adc dec mov cld push sahf pop into (bad) cmp daa jge lcall movsl add (bad) jb dec adc aas jecxz mov pop fmuls push pop fmull jne insb mov mov push cli mov cltd je ljmp rcrb mov ds repz push out xor test push outsl mov movsl jle jae adc pop push xor dec loopne dec jnp sub push mov out cmpsb inc add sub mov out cld cmp cld stos movsb cmpsl and sub sub aas cmp xchg adc ss ret sbbl test jns pop xor cmc jmp (bad) mov cs (bad) jae mov mov js popf add fstpt imul aad or add in or fildll push lret push jnp and sub xor jge xchg hlt and sbb dec mov aam leave loope mov (bad) mov stos (bad) xor mov cld sbb in jnp xor dec nop lret push hlt mov inc pop enter sbb push and pushf cmp test (bad) cmp pop clc or push stc and push test mov push push mov aam fprem1 test inc ret (bad) scas add frstor lods setns xor dec cs push dec and movsl lods in inc adc mov jle jo lds sbb adc daa dec jo mov sbb sub and cltd xor sub repz cmc cmc cmp push loope and lret and xor mov xchg add push bound sti pop xchg mov mov pop popa div push aad int inc inc adcl (bad) daa jle push iret adc aam data16 xchg jecxz in iret cmp stos js jmp subb mov test fwait sub jecxz dec sub clc enter mov pop sbb inc outsl jmp mov in inc mov in movl jmp push cli lea push cmpl dec lcall nop fimul orl lret lds sub cmp int3 dec fcomip cmp pop enter xor pushf or xchg jle lret add js xchg pushf ror sahf jne jo pusha pop (bad) mov xchg inc testb popf push inc cmpsb in cmp mov sub fisubrl mov pop int3 into jmp inc dec int and outsl pop je mov or mov add mov fs leave aas pop inc mov push in mov push cmp add in mov rcrl insl gs imul and mov loop mov test repnz pop mov scas jle (bad) push dec jae loopne add cli es jp jge xchg xor js adc insb xor jle call mov stos addb ret std lods dec adc fs or popa sti mov leave or and fcmovnbe lahf shll mov fsubs mov xchg push js cmp scas pop divl imul fwait xlat jae cs dec lret scas stc iret sbb test push insb imul popf add xchg pop scas dec mov fs xchg xchg data16 fcomip xchg icebp rorl jno and lret xchg adc cld sub push pop cwtl mov adc lea xchg enter sub sub and sbb popf mov push stc jg or dec test mov in ljmp movsl and (bad) in hlt inc sub hlt stos imul jmp xchg adc cmp push imul lds fstl ja pop scas xor jns xchg lods in out mov lods scas dec jne jno aaa shrl mov jmp retw inc mov cmpsb pop leave int cmpsb pop std gs and xor loopne movsb lcall cmp inc pop cmp mov adc (bad) popf mov and fsub stos adc decb push mov (bad) in xchg lods dec sub push notb je in jl add cmp cmp mov dec addr16 and cmp push dec out push ffree rcrl dec lcall add sahf in sub mov lret repz push adc jmp add cmp jns xor mov xchg aas in fistp xchg lods push rorl sub mov adc push sub loopne popf out lock imul bound xlat dec aas and jns shlb sbb outsb mov rolb cmpsb repz sbb jb fisub dec or sahf sub scas add mov dec mov addr16 loopne icebp je scas mov clc xchg adc iret test dec mov dec in cwtl js sbb fsubl inc xlat aas push push adc mov (bad) mov fstp in xlat xchg test xchg aas lcall clc xor cmp inc xchg cld scas fwait rorl lcall lret fidivrl daa xchg (bad) mov mov pop mov jns pop sbb ficoml mov gs xorl xchg mov fs shrb fldcw pop pop sub pop xor pop nop adc push cmpsb ds xor add pop lret adc aam lea and cmpsl mov js fstp xlat push sub lret mov sub pop iret hlt sbb in pop push xchg mov add xor sub jmp repnz je push xchg in sub lea fbstp mov mov xchg ss mov push js push outsl or (bad) jbe lds cmpsb pop and rorl sbb lea sbb sbb imul lea push add mov icebp imull jle xor push xor xor adc xor push fstpt dec imul stc inc lea repnz ja cmp sti jl lock (bad) aaa lret incb cld mov xchg adc inc addr16 gs sbb jp mov lcall adc cli stos (bad) aaa leave test pop xchg jp std jns das in jmp ljmp sbb xor cmpsl in xor lea jl lea dec xorb test leave (bad) jmp in xor pop test mov add (bad) imul and movsl pop adc stos sub jmp and ljmp mov stos pop insb bound bound sarb or sub out in jnp pop out testl mov ja mov in sub push (bad) mov es (bad) aad jbe mov or mov and inc dec clc ja fidiv inc insb out movsl (bad) dec cmpsb pop xor lret ss add and cmp test push mov xchg out (bad) jae ja icebp pop mov pop fadd fcmovnbe mov fisubr pop jmp jecxz fwait sub leave push test js sub out pusha daa adc cmp subl jl ret or xchg into lock in aaa and and mov adc lahf call roll mov add dec lea sub pusha stc cmp scas pop and movsb jae sbb pop mov mov mov aaa xchg lds icebp cmp push jl icebp cmp push xor shl insb add repnz mov mov out sbbl and mov rcl popf leave mov loopne xchg das (bad) sbb hlt or add push sti xchg js dec and icebp add gs stos int3 mov adc push inc jecxz (bad) push mov enter xor push ljmp enter cmpsb bound dec ja inc sbb out adc test rcl addl loope lcall pop clc lea sbb jg pusha mov fsubrs jne stc mov in mov cmc pop ds jmp cwtl jmp popa aam inc adc mov add fs iret (bad) (bad) clc or mov data16 insb je push and fiadd into and dec loop shrb hlt mov jno lods mov test lds cmp jae popa cmp ret xlat pop push ret push (bad) pop and fistl call jge rclb pop js popa in aaa xchg inc adc test mov int3 inc mov pop or dec scas jns addr16 dec or xchg sbb mov xchg jbe add ja mov notb daa and lea xor in pushf mov mov sbb ret lds xor cmp and out fnstsw jnp out fnstsw jnp (bad) ja add add cmp jp add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoms add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc add push rcrb and cmpsl mov push nop sbb rorl dec jmp je mov jmp xchg and divl add push clc pop (bad) repz sub out call scas rclb push repz out outsl in cwtl push fst (bad) xchg xor mov ret sub cmpsb (bad) mov leave push hlt inc (bad) repz xor jno mov jmp imul dec jge inc cwtl dec cmp imul outsl mov out lea or repnz mov shrb (bad) stos pop dec aad pop mov jmp hlt cmpsl fadds mov subb fildl push jle jns pop test sbb pop mov mov (bad) push cltd (bad) int and test (bad) cli sbb sub shrl jle fldcw lret adc sub jle leave scas lds in lods add adc mov lret push lods addb dec push xchg scas or push scas inc pop movsl jnp fisttpl shrl cwtl das fbstp push packssdw sbb pop mov and pop and mov add in (bad) out arpl xorl mov hlt ljmp testl js push push adc mov in xor mov aad jno in pop (bad) dec mov cmc jp xchg sbb inc or outsl cmpsl cltd push mov (bad) out punpckldq adc pop lods sub int3 sub sbb fs js loopne push dec jbe dec aaa sahf and fistp int aaa jecxz dec push arpl mov pop pop mov inc leave inc cltd mov stos jge lock inc mov in lds mov mov inc add outsl repnz js insb outsl add lcall xchg mov and cwtl sbb dec pop mov mov dec jbe cli sbb mov loope jno gs xchg jl test mov xchg andb mov mov cmp sub xchg jns sti (bad) mov or mov push pop lods xchg cld and jp dec std mov push adc push mov cmpsl psllq aam loope or std cmpsb sub stos into jae pop cmc lcall jo stos fldcw adc dec sub pop js dec jle and sbb aam sbb xor push push and sub lea icebp mov add (bad) or lods or push dec mov cmp xchg ss mov cmp aad xor imul fidivl (bad) adc sbb out insb push lods fmulp out sbb mov stc push mov (bad) inc and es pusha add mov mov rorb mov inc jge ret popa jp lock aad inc fsubs or les cmc mov sbb ret adc (bad) iret ljmp lea rcll loopne jge mov cmp mov decb rcll adcl ret pop iret in push (bad) fiadd mov mov fcoml pop and aam arpl pop data16 push stos por mov push or mov je sub jae jne outsl jae sbb mov mov outsl add out pop fwait loope (bad) jno cwtl ret cmp scas sub fdivrs in dec inc inc (bad) gs out js (bad) push push mov je sarl cvtps2pd pop cmp dec jg lahf xchg and repz sub xorb xchg inc jg lods enter aaa or mov in pop mov cmc lcall sub loope clc iret mov push outsl stc xor loopne stos mov pop pop movsl ljmp mov fucom (bad) and xchg ds cmp push push adc adc dec sub repnz fild mov sahf inc je (bad) mov or or rorb mov ss loop enter leave pushf jnp hlt dec daa jae popa fdivrl sbb add cmp push dec sbb test jp adc fs cli push cmp push out mov jne jg adc or pop mov fucom add std fs sub sub aaa insl push cwtl les daa mov cmp stos ja stc sub ret in adc mov (bad) lods or aas mov js push (bad) pop xor gs lcall stc dec outsb add adc or xchg cmp or and xchg (bad) dec mov pop clc jb lret push mulb arpl mov dec jns insl mov mov xor stos add mov das roll xchg mov lods test (bad) std jbe mov dec mov sbb dec cmc iret ss dec addb fnsave (bad) xchg mov orb sar std pusha shll mov lcall test and movsb inc outsb cli pop jns test movsb cmp dec xchg jae jmp into loop ds mov ret push in and adc jns ljmp mov jecxz xor pop gs out and jns push push pop (bad) fildll stc or sbb popa push inc inc add sbb lock out mov in cli pop mov addr16 sbb sar jbe jae call lds gs addl xor mov stos (bad) ret sub lds lods jns add negb dec inc (bad) xor push sbb xor adc pop mov mov cmp nop ja in test ret ficompl xor test arpl or mov cmp mull lods ljmp scas aaa mov dec xchg adc fdivl movsb movsb in cmp ljmp jmp js pop mov repz add loopne pop idiv jns cs test lea xor add xchg (bad) adc sbb in inc lret fcmovne aad stos loope in push pushl (bad) ja pusha stos sbb pop iret jmp inc mov or arpl aam outsb shr jmp rclb stos std add (bad) mov ja sub or ds mov call cltd daa je loop imul out cmp mov sub push push adc ja into hlt sub or jnp and ja jmp clc popl test fcoml pop punpckhbw (bad) cld dec push pop xchg aas push clc popf stos test addr16 xor (bad) mov ds (bad) jecxz call sub cmp xchg loope dec ds sub pop and jno add mov popf xchg inc mov (bad) in inc shr add pop cld cmc adc xchg std call test push mov aam fdivrs cmp cmp push cmp sbb pop pusha and sti xchg mov cwtl inc test dec punpcklwd iret mov fstps sub (bad) jnp sti mov lods sub nop mov cmp aad outsb (bad) mov stc push inc lret xchg cld scas xchg lret movsb std cmc jns sub xlat push mov cltd xor sub sub jl psubusb cmp xchg pushf arpl adc shrb popf iret lret test repz insl sub pop fdivrs addl mov and mov jmp push mov out inc int mov frstpm(287 scas and dec and jne push and cs (bad) xlat mov (bad) mov mov jns mov das cmp (bad) notl dec dec adc cmp int inc ret subl lock xlat mov loope aas js dec jp sbb mov push mov mov pop mov daa fadd and mov or addr16 das daa xchg xor add rorl push mov xor push and loopne mov fidivr int fsts cmp lret insb in in jne (bad) and add ja inc push sub xchg xchg cli push aaa outsb xchg jb ret loopne adc and mov ret js mov fmul js rcl lods out inc push jne mov sti test and mov aad pop sbb pop arpl push push cmpsl inc ret xor cmpsl in xchg jp in fbld inc mov mov lea out into mov jno xchg mov xchg fsubl cmpsl (bad) into push pop test add push data16 ficompl stc xor inc mov call push mov (bad) sbb push mov push cmp and leave jae in in push mov inc cmpsb mov push mov dec lods sub pushf mov xor das jnp sahf repnz jae mov pusha leave mov mov movl gs ds out leave cmc loopne cltd add add xorl jnp ds push xor (bad) daa fimull insb stc out mov inc lret jb pop dec insl sahf outsl pop mov push jo mov add add je (bad) xor leave mov dec lock clc pop xlat push clc (bad) xor cmpsb (bad) outsb je xchg or push fdivl lds fsubrl cltd divb bound loope add mov js sub std lret sub out movsb xor pop lods inc add (bad) and cli mov push jne sbb dec adc and daa fadds jnp loope xchg sub cmp loopne js inc (bad) pop ljmp mov pop xor pop pop outsb divb push mov fisub out pop outsl jne and pop push ficomp in std jno mov ret and pop daa jl pop dec mov or (bad) rorl add rcrl add or std sbb xlat mov cmpsl je bound ja pushf movsl rcrb enter jne rorb sarb mov test das xchg fcmovnb pop scas dec xchg adc movsb iret adc cmp sub fcomi mov (bad) in ficompl sub loope loope sub (bad) popl scas mov rep mov xor jg movsl lret adc push sbb aad inc push fcomps push cli xchg inc xor jno cltd imul sbb sahf sbb (bad) test sbb (bad) in les push (bad) es and stos and call add push inc adc xor pop movsb in inc cltd scas ljmp pop or out dec jb or not mov pop cmpsb insb cs xchg mov out and loop lods push dec sbb mov pop xor lds sub cmpsb xchg pushf xchg (bad) xor and cld ja test xor push scas or cs shlb jne fadds aad ljmp jmp fiaddl leave lret in cmp mov mov scas das jb sti fs out push (bad) xchg mov push inc call jmp mov ds adc dec xchg sbb sub (bad) imul jno xchg jne popa sub imul and test push dec and xor lods mov lods pop aas andl mov jbe int3 in xor loope mov push jmp xchg pop fimul lds subl push adc push in push mov lret pop mov pop mov test xor jae or add es push cmp xchg test (bad) mov mov shlb or adc xchg mov addr16 loopne xor or mov mov mov push mov pop xor aad mov sub (bad) lock movsl ss cmp lcall cld dec dec cmp cmp inc ds xchg pop fisub insb mov mov pop adc inc (bad) fwait cmp test sub add or scas movsb movsb cmp les push cmp les push outsb mov dec mov mov iret popf ljmp daa cmpsl vpacksswb (bad) fisub and jle inc jge loopne pop out cmpsl sub mov clc jb repz and adc shrl or inc adc mov xchg push dec cld inc xchg scas mov es and adc add fnstenv xor mov aam sub (bad) fucomi sbb sbbl cwtl xchg daa fsubs and cmp ss mov mov xchg push sub inc testb arpl (bad) cmp out inc jnp fdivrl jle je mov push (bad) adc push xchg pop stos inc jno mov pop hlt popf add imul mov cmp add cmp mov inc inc dec jbe sbb in xor dec mov scas lods or pop scas dec out or dec daa lds add (bad) es cmp push ja inc mov xor cmp push (bad) sub adc mov cmp xchg mov and inc mov loope mov mov sbb jge dec js cmp jae add cmc mov mov dec cmp or lock ss (bad) mov arpl (bad) add cli adc out adc test pop loopne mov mov mov xchg sbbl enter jns andb call imul xor fldcw outsb test andl lcall lock nop mov in pop imul mov add xchg pop sarb mov pop out cs add xorb (bad) rcrb inc push xchg xor sub jb inc cmp or pop push outsl mov out pushf fldl stc lock out jge xor push inc mov mov inc mov into adc pop sbb and jg pop cwtl and mov sbb and cltd adc insl mov push sbb out out dec (bad) pusha lods je es jnp stc movsb push mov xchg mov cmc mov int fistp mov mov adc inc (bad) fwait ljmp pop xor inc gs or fistpll xor jno lcall out dec or inc jns lret pop movsb mov mov lcall sbb lret add adc push inc orl pop jp mov test es lcall fmull jmp mov and icebp inc test sbb pop jle xor enter shrb (bad) das xchg fnstenv jnp in fnstenv incl add je fwait insb jle add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas fisttpll xchg jns mov push fwait data16 jo dec dec aaa rcr jge orl mov divl xlat mov rcrb dec (bad) adc push lea push rcll xchg jge movsl or inc repz cmp je mov jbe xor (bad) mov (bad) out clc jne cltd fiadd (bad) adc mov pop lcall push mov push sbb leave cmp cmp mov in jb jmp les cmp mov fdivs xchg jae fadds add int3 adc inc adc dec mov push test push shrl push dec push movsl jmp out scas xor inc mov ret addl sub in xchg add jae movsb xor xor mov sub pop ds fwait cli jno not pop (bad) jns mov outsl or loopne test stos xlat adc std cltd insb call lcall movsl mov xor insb daa dec inc mov xchg cmc scas loop enter adc mov dec mov jle leave mov cmpsl push fcompl aam lret inc daa push jle aas xor fucomi push divl cld inc negb pop popa xor test bound mov js mov in pushf lcall cwtl mov cmp insl mov jge push ljmp movsb cmpsl (bad) repz aam fnsave sarb cmp mov jae mov pop xlat dec xor nop push adc cmpsb pusha movsb nop push and cmc push fisub into outsl and push repz es shrb test data16 push mov fcoml fwait fs inc dec js or jecxz je je mov aaa fdivrl aas mov mov les in dec jl sub mov pop mov sub sbb adc or popa inc or cs xor lret mov cmp pop jecxz jnp and add fwait jns loopne movsl ret jae dec adc mov test pop test (bad) sbb cmpsl or mov push xor cmp sub inc inc aad jmp adc xchg or lods fwait push sbb cmpsb mov loope cmp pop mov pop mov lcall sbb test inc aas push pop mov mov jae inc mov pop aaa push rcrb jb out mov jo call hlt cmc add add xlat push xor push aad pop xchg lea stos inc scas gs (bad) notl outsl add (bad) push hlt mov add or xor mov dec dec int mov icebp mov clc inc das add cltd rorl in mul std aas negb mov add inc inc dec mov cltd subl inc ds inc popf rolb mov mov dec mov icebp icebp sub or rorb nop fs scas mov mov add and xor pushf sbb imul or or inc nop inc les cmpsb dec lret enter test mov lock sub pop xchg or add inc adc fist out push mov cmp loopne je ret aam aam outsl mov outsb inc out sub imul je pop fwait adc clc cmpsb dec cmp pop xchg pop or dec jp movsl lahf push xlat jmp sahf test stc loope mov stc mov (bad) dec fdivl clc fist cmpsb jl cmp loope sti adc fadds lret push lods add fmull add aad mov shl ds (bad) cmp int aad inc pop outsl pop dec adc repnz hlt out sbb sbb pusha xor int sbb inc add or shlb xor jae add sbb lock cmp (bad) iret rorl lret lds mov fistp mov pop sahf mov icebp outsb push jb sub jne cmp pop mov jae scas lahf (bad) addr16 int3 cs sub mov clc cmp addr16 lahf lahf scas push add lods push sub sub jno outsb inc adc mov xchg imul adc and add cmp out mov imul clc mov mov out sub leave aam jge dec sub push add mov pop stos jmp mov bound (bad) mov push inc sbb pop dec xor inc jge jge ret cmp shr scas cmp cld sub ds or xor or push adc sti sbb pop imul mov popf call rclb daa mov jecxz in push cmpsl fs or cmc mov repz adc mov lcall out pop jl inc cmp stos aam jno (bad) pop and roll sbb inc icebp ret ljmp push imul insl mov test dec dec and xchg mov rclb push push int3 jecxz cmpsl repnz and ss adc enter sub ds sbb mov inc inc std inc jl in outsl movsl mov or lret jno cwtl ljmp enter std mov ds clc ss stos daa add push lods cmp js xchg rcrb mov jecxz fstps and xor shlb mov mov out jbe lods scas xor popa ja or daa out mov sbb mov fdivl push push jo add adc jecxz jne notb in data16 jnp loopne loopne adc xor inc pop adc fdivrl mov in cwtl insb sub fdivl dec sbb lcall (bad) hlt jge in sbb scas hlt in and pcmpeqb pop cwtl add xchg inc ret jmp mov (bad) and ss (bad) imul xchg sahf mov push dec pop iret (bad) leave sub daa ss mov cs pop outsl add out jle insb xchg pop loopne popf outsb incb mov faddp aam mov cmp dec push push push and mov mov xor (bad) jmp jbe (bad) rol test sahf mov imul pop sahf (bad) pop sub sub inc scas nop or mov cmp (bad) mov xor ljmp xchg aas xchg popf (bad) (bad) cs (bad) sbb lcall push jne and popf cmpsl cmpsl (bad) inc bound mov pusha cmp ljmp push pop pusha mov mov push push pop xor fdivrs movzwl xor push mov sarl adc xchg lret daa and nop leave pop std sub fldl inc and mov lret push mov mov xor jmp aam add js or mov adc or shl xchg jae clc sub cmpsl push push (bad) sti addl sbb (bad) clc dec add inc or shlb (bad) repz sahf in mov dec dec repnz mov add leave and adc xchg xor (bad) je addr16 mov std leave lea mov mov fcmovb add and arpl enter cmp js mov mov mov dec xor loop arpl inc pop sub das pop sbb pop dec insb xchg and jle sub mov cmp mov mov xor pop cs movsl popf xlat lret sahf imul sarb call xchg mov mov or cmpsl int3 (bad) cmp in lcall or jl sbbb mov test xor loope fcmovnb jbe mov cmp pop pop out stos jge adc fwait dec (bad) (bad) punpckhdq jae fcompl mov or inc sti dec lcall je mov xchg ret add lea dec sbb gs mov loopne test xchg (bad) lret inc xlat cwtl cmpsb in loop inc insl into loope lock sub jge mov add pop or pushf icebp out push sbb dec mov (bad) hlt pop je sahf fadds ss fwait imul sbb xor popf and jno adc adc adc push mov and sbb ljmp ret push sbb adc icebp mov not jbe in fld (bad) cli mov jl mov ss jns xor out test jle pop mov pop enter pop call fcompl cmpsl gs pop lods jle cmpl pop pop sub jmp mov sbb fstl jnp xor add push lcall pop or std dec push xor mov ja or inc dec lods mov (bad) bnd mov rcrb push pop fsts insl or (bad) mov xchg addr16 sbb sub inc jns das push outsb mov int3 ja psubd or (bad) enter sbb pop xchg mov cmp push int3 hlt pop cld aas (bad) lock test mov or popa and outsl rcrl jp xor rcl adc xchg hlt cmp inc push mov call call repz test clc nop std adcl popf lret out adc imul jne jle and cmp (bad) mov xor loope cmpsl xlat pop aam out jo push movsb lcall jg push cltd nop movsl hlt out aas pop dec inc scas mov inc int xchg inc jnp pop out cmp inc and mov cli push rorl push cmc sbb sbb xchg lea das adc push jns xor jnp or pop jg stos jb inc push pop cld xchg inc jp sti dec not cmp popa cld jmp mov gs frndint imul sub xchg xchg dec pop sbb xchg dec pop cmp mov movsb cmp clc cmc lods jne ss (bad) negl lret ja push xchg (bad) ss push enterw loop pusha and negb dec or cmpsl rorb inc xchg sahf jb inc mov (bad) (bad) aas andl mov mov mov xor call repnz clc jecxz loop (bad) jmp xchg hlt mov fwait sub push ds loopne mov mov mov inc bound sahf enter pop or jbe push pop push and out inc int3 sahf aad scas mov xor mov or jp imul cltd es xchg mov ljmp dec imul or nop popf mov adc loop test pop lods js imull fldenv xor push mov add mov or out scas add pmaddwd test lods dec mov or or enter xchg inc nop call ds dec sar pop into jle shlb jb outsl daa jae clc (bad) and jle data16 push pop mov int3 das add pop mov mov ja int3 sbb gs or in push arpl loope mov mov fdivr dec mov pop pop inc mov movsb fidivr in sub (bad) jnp rcrb rorb cmp iret fstpt xchg movsl or xchg fs (bad) lods (bad) hlt stc (bad) mov icebp push pushf inc xchg lds les jne mov pop pop mov cs mov fidivl jae sbb xor js jo mov xchg sbb inc js call loopne or stc fistp ficomp idiv les in mov mov rcl ret (bad) mov push push push imul jg pop aaa mov and inc aam push sbb aas fwait les in clc xchg jbe jno cwtl scas or cmp in sub xor loopne inc add out jns dec add and push adc jb or cmp (bad) mov lock xchg jae cs cmpl je insb cmp (bad) or mov adc out test inc insl rolb idivb adc aad xchg cmp scas lret mov rcll and lcall inc fwait jb mov ja aaa mov mov mov sbb (bad) int push stc ret cmp pushaw xchg mov movsb pop jl sbb pop call out movsb mov test outsl (bad) and mov movsb inc mov sub mov inc mov repz arpl insb (bad) pop add dec adc xchg lods pop (bad) rolb mov dec adc fdiv and xor inc fcmovnbe repnz and iret sbb loopne inc sahf sub push lcall std sbb int lea push mov cmp push jne pop adc je iret gs fs test cltd test pusha mov adc repnz mov pop jno xchg hlt inc repnz or mov addr16 lcall pop les jo and aas sbb clc out lock dec cmp int3 cld lcall inc and mov jno divl mov loope cmp xchg pop xor mov lods outsl (bad) movsl cmp (bad) jnp fnstcw insb cmp enter idivl push xchg xlat icebp xor imul clc outsb sbb (bad) fstl push dec push lds into adc mov inc lcall insb push dec (bad) cmp push das mov jge lods jge mov xchg out pop arpl arpl xchg xchg sbb cwtl in dec in hlt insb fimul shll mov mov jns mov inc or mov or outsb lods insb xchg add int3 mov cmpsb (bad) cmp adc push sti je idivl repnz jbe sbb push mov lods iret or call outsl test insb pushl cmp ret js ficom fsubs xchg and (bad) pop das popa cmp pop mov in add xor and lret push std xchg icebp rclb mov popa cmp (bad) mov mov jnp or mov xchg mov cmc xorl daa sbb jg nop div push (bad) inc xor (bad) sbb mov fildl mov push mov mov jp cmp dec sbb sub insb jno fild push adc pushf cmc jmp push add stc mov inc loop mov push cmp or aaa lret lcall xchg push jl jne,pt cmp xchg mov (bad) stc out xchg out (bad) xor jns pop cmc or fisttpl mov (bad) cmc cmpsb jmp sbb cmp hlt test shrb inc lock sbb adc mov lret loop ljmp or push (bad) pusha push adc enter mov lods das or cs mov int aad stos or or mov dec jno dec gs rorb cmp jg hlt loop mov das pop mov mov das pop mov (bad) clc pop das pop adc add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fsts add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb fucomi ret les cmp out jmp cmp jbe cmpsl ss pushf jmp adc daa ja std mov pop jecxz add incb (bad) xchg mov inc push int icebp dec mov ret push mov rcrb push adc mov out int imul push test leave jmp lret dec and dec add loope pop cmp fxch cmp sub rol xchg iret int3 lahf (bad) mov shll int3 add lcall push iret pop dec adc push int enter mov test ljmp mov stos rorl popa iret dec imul dec stos insb aaa or push scas aad and int ret rorl mov mov inc repnz cmp push hlt mov mov pusha cmp lret inc push push frstor out popa int3 pop add (bad) mov js cmp dec in push cwtl test lcall push jb mov insb cmp stos jae mov mov fcoml subb lds adc cli add add mov jg imul sub ss cmp repz stos in test sub cmpsb in sbb mov xchg arpl popa (bad) mov cmp sbb jo ds push push ror push add cmp and push jle insb out add push std les push lahf cmpsl add movsb cmp leave aas push cld mov pusha cmp sbb sbbl popf xchg jl scas cmp clc roll dec lcall stc iret icebp test push test jle pusha mov or inc sub icebp xchg int sub div mov mov pop lds inc shrl stc imul hlt fwait xchg push xor dec sarl mul sub fisub xchg mov ja,pn (bad) popa imul mull inc mov jg ficomp aas scas loopne subl adc sti ret lods popa dec cltd mov repnz jne dec mov fist or xchg out jb mov jge push aaa mov jge stos xor cmp push mov mov adc (bad) cmp push imul std rorb lods fwait dec pop loop lcall inc (bad) into xchg out (bad) add fucom daa ss ret sahf fucomp mov cli mov sub push (bad) movb jnp out mov sbb mov xchg add lret aad push mov add or mov imull cmp mov leave shl test xchg mov push fsub jle test push movsl loope mov fs push sahf mov outsb rorb xor stos shll cli inc jmp adc icebp and ror dec data16 push push or inc inc je loop push add stc mov fisttpll xor stc sar adc xchg data16 aad pop mov fnstsw mov cli rol sub mov imul mov aad mov aaa dec adc jl mov mov pusha xchg mov mov (bad) hlt push fstpt jecxz jg jle in jns daa pop cmp hlt cmc cmp push pop jnp adc push xor adc (bad) add ss sbb or add sub pop pop add sbb push sbb push (bad) movl aad jno cmp sub mov xchg fstpl sub fwait add mov scas fildll xlat clc xchg fs out scas adc loope cltd and add jmp loope repz mov aas pusha notl adc add lret insl sbb inc repnz xor and fldl and mov xlat push pushf jge or cmpsl sbb push stos aaa ds (bad) sub fdivrl and pop and insl leave imul dec push gs xchg pop scas jbe mov cld dec imul (bad) (bad) scas xor call sarl sbb ss push gs or mov movl stos push in fnop rcrl sahf cmp adc incb lahf popl (bad) sar aas loopew mov out js xor or loopne aam or adc subl xor les pushf pop aaa lcall (bad) incl js dec xchg mov pop sbb aaa out scas push pop das test or movsl fsubl jo faddl ds addr16 fistp cmp push and test addr16 xor push pop and jno add xchg xlat pop (bad) lcall push scas stos mov jg mov cmp sahf mov sahf inc add test sbb lcall xlat jmp test jns or dec notb nop ret out repnz cwtl lock in lahf lds push inc std rcll into mov jb gs adc or mov ret icebp daa jg and and popa (bad) (bad) cmp (bad) xchg aas mov movsl mov ja sbb insl pop dec jl test xchg mov jmp in sub mov jg mov pusha in aaa arpl adc mov jecxz in fisttpll sahf and decl insl add jne sbb sbb mov adc leave sub test in xchg cltd sbbb xor mov sbb nop cltd mov mov jns jp rorb insl ds insb (bad) (bad) add (bad) (bad) insl lock cmpsb mov and jns pop (bad) cli (bad) out pushf aas jp fldl push pop or or jnp out rcrb nop inc pushf inc out push mov sub loopne xchg jg loope push sti mov cmp xchg inc cs pop divb and and pop mov mov mov xchg clc mov repz cmp sbb cmp in jns scas dec (bad) mov loope aad add (bad) ljmp inc fxch test mov lds loop out mov repnz iret pushf jmp push ret stos mov push cmp cmp pusha scas das cs jge or into rcll subl mov nop lret cmp or push xlat shrb gs add fwait sti lods mov sbb jnp cli push aaa or lahf add pushf xchg jecxz dec xor sbb iret (bad) lahf pop fldt xchg (bad) push roll aam mov out imul mov sbb shrl out mov mov lret pop popa stos or cwtl sbb outsb mov hlt cmc push push mov int xchg inc pop addr16 daa cmp icebp aaa adc int3 and cltd cs push push pop stos inc sub fsubrl test push xchg push xchg xor cmpsl popf int xor ss fsubs int mov out mov aas lcall mov outsb cwtl rcr scas dec mov cltd call mov je sahf sti xor out or add (bad) ror xor loopne (bad) (bad) outsl add stos frstor js mov test jmp fs fstps iret pop jns ss jl stc push ljmp outsb out mov jl mov call rdpmc mov sbb xchg imul out pushf fdiv iret lret stos ffree mov sub jne cli sbb negl loop stc pop inc pop push sbb sti das sbb or scas mov xchg xchg (bad) push fwait popa hlt jno subl icebp push cmp cmp gs cmp jle xor add and xor pushl xor fcmovbe inc std inc outsl xor (bad) or roll pop movlps inc loope pushf lahf push pop sub (bad) sahf xor lea clc push test pop push shrl outsl xchg push shll dec je je imul (bad) into jp cmp or mov (bad) in jb pusha and sub jo sub mov fwait push xor lea out dec out dec dec pop lea rcrb movsb sbb sbb fidivl loop jl xchg ret mov cmpsl jns cltd test in pop jecxz stos jl iret int adc sub leave fdivrl jns (bad) jo and sysret mov lretw in jecxz jle mov sub movsl push loope ss mov sub (bad) imul decb pop (bad) out mov icebp adc push push jl clc addr16 xor cmpsl (bad) das add jnp xchg mov or shll fdivrl int scas dec fidivrl inc ja xchg ficompl cltd sub (bad) sbb and in sbb dec sti lods jo mov daa outsl fmuls lods sub loop outsb idivb sub or ror fdivrl pop imulb push out dec push push lds mov lahf jp insl pop add test shr ror jg mull push dec pop into outsl sub mov cs dec in mov repz mov scas push xor stos outsb cmc lea fdiv enter test dec mov push mov mov rcrl add cmp ljmp xchg push cli in mov out (bad) fcoms adc fsubrs fcmovnbe out adc in sub jbe xchg (bad) xlat jbe fcompl outsl adc fnsave fcomi movsb fisttpl or inc mov leave arpl push add pop test cmp xor ret lods movsb xchg inc gs jae jne inc (bad) push repz data16 stos add call aaa pop ret jle loopne dec jno pop dec std mov movsl (bad) dec addr16 or sub fildll or xor jno lods repnz pop fnop cmpsl xchg pop pop dec inc mov (bad) mov inc sbb in fcomi loope push dec xchg sarb add repz cmp sbb out dec (bad) lcall mov sub jecxz cmp push popf sti mov sub aas (bad) jle jb pop sti mov movsl rep push and dec xor add push ljmp arpl jnp rcrb cli jmp icebp cwtl inc dec ljmp into mov xchg mov jmp stos xchg mov sub adc in pop mov and ret mov pop push dec nop (bad) or pusha insl aas push out pusha push push dec out mov sbb mov cld (bad) xor cwtl stos out sbb cmpsl push fild fsubrs movb lea xorl xchg or pusha enter cld shrl push repnz inc lret or mov icebp xchg xchg and lods dec jge add mov into into fmuls enter cltd cmp add and in push mov enter mov and adc leave pop aam in dec std mov add dec enter mov mov mov jecxz adc aam daa xchg stos (bad) xor icebp aam shrb in enter mov ret sub mov (bad) loop mov stos fistpl xchg stc add inc xor lahf sbb lret or es nop mov xchg hlt mov pop jbe mov dec mov mov nop cmp rcll movsl stos pop aas sub add dec xchg mov add mov cli or mov push ffree leave pop add mov xor insb adc jb popf or xchg mov mov fdivrl mov fs fistl (bad) scas repnz insb xchg or xor pop pop push lahf out insb and jmp cmpsl lock mov xor jecxz insl scas jno lcall jne pop cmpsb mov insb pop mov imul cmp outsb sbb xchg pop leave mov and and leave fildll (bad) lret jle aad dec mov mov aas mov mov push push and jl pushw ret mov std (bad) fiadd jl pop fdivp xor inc iret adc rolb mov inc mov sarl cmp iret popl (bad) xchg pop test sbb sar push cmpsl push out daa inc inc (bad) fstps loopne,pn dec loop pop cmc ret mov lock cmp sub (bad) inc xchg (bad) mov xchg insb fildl and out icebp fcmovbe das adc dec addr16 popa dec out cwtl pop add or jl in lods add lcall pop ss dec rcll arpl pop inc jecxz in add ja and test push test dec adc pop hlt int mov pop popa inc scas push hlt pop add xchg jmp jbe jne mov out rcll cmpsl push inc call xor icebp (bad) xlat int pop mov jecxz mov sbb mov mov sub and xor inc and pop mov bound cmpsl (bad) repnz test or jecxz jae popf push mov mov inc and inc inc push cmp dec popa mov jbe adc xor inc or add in jmp adc cmp bound sbb fdivr sbb rolb icebp inc cmp cli inc mov xor fisub stos rcrl ret mov cwtl roll push mov fmuls pop int3 adc cli stc aam ja adc sar and test push dec adc push xchg pop mov sub in push es stos stos push out mov outsb pop lret popf pop aad pop (bad) ja,pn popl cmpb cmp stc aam pop mov adc lock pusha in mov pop ret mov pop std arpl push jne xor sbb adc cmp ds xor mov gs aaa scas add nop test sbb sub jbe lds jp popa xchg mov mov cmp fmuls add ljmp xor fstps adc lcall push jle cmp fst test cmp dec icebp jge mov loopne aam addr16 inc push iret dec in mov negl add lods add das (bad) lds and inc and xchg xchg shll add gs jecxz ljmp adc adc inc fcomp lcall jg xlat lret add das xchg cmp lock addl push cmp lock addl push cld incl add paddusb inc roll add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb add lock shrl es ja je ja ja (bad) hlt cwtl cwtl jmp (bad) xor arpl ja leave loope fdivrp sbb jmp add cld jae jg cwtl (bad) mov pop outsb lret lcall mov cmc lea loopne cli sub adc inc (bad) sahf mov mov gs mov repz jbe pushf loopne out jns fdivrs dec xor aaa push orl xchg into jp adc stos out mov into mov mov cmc mov pop dec arpl pushf fucompp fldenv pop push (bad) lea loopne jle pop icebp loop xchg rcrl inc jge sbb and xchg repnz or inc lods inc xor cltd sarl inc test out iret jbe ljmp jl inc mov cmp dec sub pop dec (bad) xor shlb lcall jmp stos push mov sub and pushf and je push jnp enter dec dec in inc pop (bad) and mov adc xor mov fcomi (bad) push xlat (bad) ficompl push popf mov (bad) fsts faddl pop sbb cli cltd dec movsl sarl fbld mov int3 mov or push out jmp stos and adc jmp pop fsubr lret xchg aad sarb insb inc xchg out mov mov mov (bad) pushf lea cmp adc (bad) in fsubr ret sbb pop call popf ret rol ja and je arpl xchg xchg mov scas sbbl mov (bad) cmp mov (bad) jo,pt mov xchg mov loope inc lea push test fisubrl mov dec mov lret inc adc pop out or fcmovbe cmp pop jle ja insl aam ds mov sbbl leave sti out mov push cli int3 xor jmp and pusha cmpl lea pop and mov xlat das notb aam test mov jge or int pop mov mov dec dec mov (bad) je cmp mov or dec fwait mov sbb enter add lahf (bad) inc or inc loope fwait addr16 or std imul add cmp mov and hlt ret sahf push cld jle sub test iret pop dec jnp outsb (bad) xor jg adc lock sub (bad) cmp call xchg pop mov addr16 pop (bad) jg dec (bad) lock adcb (bad) jecxz dec jo mov mov (bad) sbb dec add sub rclb iret lcall xor (bad) cld arpl sub lahf iret les push mov mov mov int jecxz loope dec cs dec in push ljmp sbb xchg nop push inc and icebp ds mov lock and push sahf lock xchg and jge or repz lret and xchg inc movsl xor xchg movsb iret jb fistpll cmp jb adc or push sarl or add test out enter sbb jp adc dec inc push cwtl jg mov jns cltd or or add adc push mov int3 fnstcw (bad) imul xchg fsub jo adc lock arpl (bad) fmul pop in lcall aad popa add inc dec gs push sub sbb push cmp jb loopne (bad) out lods mov jnp mov (bad) je cltd mov mov xor and leave hlt xor adcb pop in dec adcb (bad) jae inc mov ljmp mov dec fbld jp and jge mov roll aam subl push sub into cld in jnp (bad) mov inc insl aam push dec (bad) daa xor rcrb movsb inc mov fistp addr16 cmp fidivl ror and mov mov xor jb ss test mov xchg xor push fisub add mull dec dec addl xchg jnp pop and mov mov lods mov inc jbe aam movsb xchg ljmp pop into roll lret push and mov das adc cli push push xor inc push or out xor ljmp cmp xchg lock sub rcrb inc shrb dec ret push inc aam push fs insb pop fcmovnb or push push mov popa out cwtl xchg sub xchg xchg test pushf outsl shrb test fmuls (bad) ficoml xlat jno push jnp sahf mov bound repz (bad) fcomip cmc and dec gs cmp (bad) lret jb pop cs sub pop scas mov add clc adc fsubrp bound ficompl lret test mov loope jl fmulp and xchg or (bad) mov cmpsb mov in add fnstenv (bad) or icebp lods dec xchg jne xchg (bad) (bad) (bad) repz push loop enter pop jno xchg lods mov movsl insb in in (bad) ja ds mov jo sub pop adc js mov jnp in repz jmp mov mov loop jmp (bad) stos mov mov aaa sbb clc clc fsubs xor cmp dec aam mov push cmp hlt or mov lds out xor sub (bad) mov mov push arpl inc outsb xchg in pusha cli orb lea xchg add outsl jge push je in aas pop icebp push ds fld mov sar (bad) mov fcmovnbe in or repz js inc popf xchg ret fdivrs mov xchg les xchg mov dec cmc stc in lret insl rclb mov outsb cmc int3 aam (bad) push popa std dec xor aad dec es hlt mov les rcrl pop movlps xchg pusha mov sbb lcall jb sub xor loopne mov sbb or adc fsubs sbb nop in jb fimul imul hlt jmp push cmpsl and jnp xchg sbb daa jmp aad xor mov fstp pop (bad) cmp pop inc les jge cli out mov insl imul sbb and jae leave jnp add (bad) dec fstps sub adc mov xchg sar addl adc test scas stos iret imul je xor xchg fdivs pop mov cld dec ss sahf sahf cmp fldcw dec pop xchg push sub lea xchg add imul mov out xchg inc les dec sar test mov cmp lock psubd aaa push add sub lds das les mov cwtl mov mov outsl imul aaa adc mov cmp outsb xchg or xchg jge cmp adc scas in out mov cmpsb out mov in push rorl out mov adc (bad) cmp lods fcom pop fcmovb out cmpsl or cli les dec or out xor add lcall loop inc push shrl push and fwait pop mov mov int sub cltd test xor add lret les ret and fsubrs cld jnp dec sub mov pop mov jae lock es dec xor dec stos push mov movsb call (bad) push dec cltd xor idivl cmp jl aad sbb sbb (bad) sub mov mov cld hlt arpl pop call repnz mov test add jmp pop fild pop jmp fwait popa ss mov sbb push lahf out jge pop lock (bad) imul dec fistpll out jg gs pop int in icebp mov add push stc mov xor inc cmp sbb sub ja pop lds mov push inc test adc sub xchg stc lea mull lds add aad sub jne adc test out aaa aaa mov cmpsb or cmpsb (bad) bound mov mov sbb push fmuls cmp inc sub leave lcall jnp sbb clc push les das leavew pop add mov lods test mov je fistpll push xchg loop in cmp cmpsl in insl fwait (bad) push jbe (bad) aas cmc loop adc dec iret mov jle jae add rorb fcomp xorl test fmuls (bad) loope pop cwtl cmp andb int3 xor and push xchg push testl jg loope fs in addr16 addr16 int pop movsb jmp xchg jge fimull adc or test dec sarl sub cmpl gs leave hlt sahf xchg and sub push xor dec hlt inc roll adc and cmp push xor icebp mov adc sub push scas and shrl test inc lods out leave mov add sub sbb push insl ds ljmp push cltd xor out movsl push js or or sahf ficompl pop test or mov push xchg lret std and mov out cli xchg les arpl dec dec fisttp insb loop hlt pop js or sbb fdivl cmp test jle pop imul adc sbb add fisubl repnz cmp jno dec test pop cmp jp mov sub mov jg or sbb pop xlat daa sub dec add in (bad) (bad) pushf jno cmp mov and jle int3 cmp mov mov stc push sbb mov and add js scas in movsl loopne mov inc pop adc int or or xor sbb mov jae adc xor cmpsl jo and call pop dec fs cmp push lret (bad) mov popf cld jbe inc (bad) mov push add jle (bad) repnz mov cmp in jg sbb lock push rorl faddp ret mov cmp fnstenv inc or pop leave das mov test lcall push adc jae pop xor cmp mov or bound sbb xor rcrb mov (bad) lock imul shr rcrl iret mov push test xor jecxz in ds pop repnz sub mov pop xchg cmc xchg out scas out inc lock jb test (bad) mov nop xor push cmp or and pop sti push arpl cwtl add shll mov dec xchg jb xchg pop pop inc adc mov (bad) in mov shl push xchg (bad) cltd mov and inc in pop sbbb dec icebp in fidiv lea rorl movsl mov push push ss fldcw out stc (bad) ja jp cmpsl mov (bad) jg,pt jle dec enter gs out mov in push pop xor mov orl pop test scas aam loop cmpsb fmul mov jge gs jns mov adc ljmp fildll dec outsl sbb mov cmp stos (bad) mov in jae xor pop sbb jnp icebp aas mov cmp aas jnp jle mov imul dec iret mov add sub ficompl xchg add mull push dec enter out iret mov mov andb adc decl push jle sub inc xor add fwait shr lods test test movsb cmpsl lret stos mov adc jle cmp and in pushf popa inc push lret pop (bad) dec fstpl pop jo pushf and sahf enter outsl into lret mov xchg int3 inc cmp pop xchg jmp pushf jge rcrb pop mov push mov jl fs xchg jbe movsb inc js or inc sbb dec popa mov cwtl xor jo cmp cli jne das mov pop sbb lret add add (bad) scas mov fildll movsb cmp and sub sti ret out into mov cltd sub lea and into adc mov das jo imulb mov jae mov in push outsb lcall adc faddl dec lods mov mov mov jp inc xor pop out jns mov stos jns xchg (bad) mov and or adc mov inc in push xchg lds inc xor mov add ja inc xchg mov mov and (bad) dec aas cwtl push movsl (bad) test mov sbb test add (bad) loopne and leave mov movsb xor mov nop pop incb loop ret mov adc jl frstor xchg dec pop or xlat and dec dec cwtl push loop aam cli hlt sahf push mov and or shrb pusha mov and jno enter nop decl in mov dec cmc shr out fcmove testb aad pushf xor sbb pop and outsb mov std repz xor and popa xchg mov and push inc test xchg add mov cmpsl xor push out movsl and fcomps test js das jecxz bound mov xchg loope cwtl dec pusha cmpsl and lods pop andl mov mov inc (bad) mov mov loop (bad) mov roll fld repz mov xchg fldcw (bad) xor aaa outsl and pop sub icebp or inc cmp jge enter jle pop jp mov aas pop aas mov xor or push or inc out sqrtps xchg xorl les fs imul sbb xor je inc mov mov xor test adc inc out jg jle mov ret dec fildl mov sbb sub inc mov jle cmpsl int3 (bad) ss scas mov pop sahf lods pushf sbb cltd das (bad) dec (bad) jle mov ret movsl ljmp (bad) mov outsb or in lcall fisttp ds jg clc push insb add in scas in hlt jmp cli (bad) pop dec cmp sbb insl decl mov stos push scas pop mov stos push (bad) aas add add or inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push aas fmull rolb lahf lea ss xchg jae cmpsl (bad) xor dec mov out into jmp rcr rcr xor cmpsl jecxz ja data16 cmp (bad) out lret clc add (bad) sub mov mov (bad) jns jge shrl mov es mov mov xor pop pop (bad) lods push stos insl pop dec sub push xlat push cmp adc fninit lods insb pushf mov adc pop rol sar daa ret neg mov leave insl dec aad cmpsb mov xor test test arpl nop pop in dec les (bad) imul xor cmp int and mov mov sahf xchg aas out mov (bad) mov jns repnz push jnp inc outsl jb rcrl test lds stc jle fs lods inc fstpl cmp pop xor insb push shr mov aas jl inc cmp ds dec test or pop sbb imul call adc cmp scas hlt pop ja lds inc adc xchg sbbl jmp inc pop rcll mov cld adc imulb sbb mov js (bad) pushf inc sbb mov adc into out mov aas sbb jnp lods loop enter dec jo roll pop or sub jl mov outsl sbb dec fnstcw gs adc push testb or fisttp fisub xor pop js repnz out popa int3 test mov (bad) mov stc inc jne rcll or fimull xor jp aaa (bad) adc lcall enter (bad) jp mov pop jl imul push int xor pop pop divb (bad) arpl mov (bad) pop mov int rcrb fwait inc add add mov ljmp (bad) fnstcw leave push maxps and es mov sbb stc iret cli popf loop dec scas cwtl rolb inc mov mull test mov popf lret inc (bad) icebp inc jecxz jg das dec sub push xchg cmp out out adc in push xchg lods out and mov mov mov call shrb (bad) clc inc jne das es mov xchg mov jb fcoml fsubrl jnp lea addr16 jmp data16 jge ret mov out mov fmulp mov movsl push sub mov into xchg jg lret pushf push dec stc dec mov jmp lfs roll ret xchg (bad) mov inc sub cmp push shrl xchg sbb dec xchg fs mov mov ss push pop xchg in pop mov lods mov lcall test ja mov cmp inc (bad) mov inc and lods jno sti ljmp dec jnp out out jne mov (bad) rorb xchg push pop addr16 cmp sub adc xor push sbb test out and (bad) ds int3 mov adcl loopne push repz jnp addr16 mov stos js xlat xchg jbe cmp cmpsb or ret loop inc mov sbb je andb jp xlat inc jle cmpsb pop movsl dec jno ficoml adc popa test jnp pusha inc jg pop fwait daa sub mov stos mov (bad) stos or pushf xor ret cmc xchg pop lock scas bound enter or (bad) mov popf mov push jns add (bad) jnp je repnz idivb mov xchg jecxz pop popf cmp repz mov dec sbb pop mov push mov lds xor sub pop es xor sbb icebp fwait xchg repz and mov insb pop adc push (bad) push aaa call mov xchg jne add adc cli fsubl push (bad) cwtl lsl test test aad (bad) cmp and lock pop lret inc mov (bad) aad cwtl pop cmp pop adc lahf adc xchg pop (bad) xor xor adc insb pop insb cmp mov fdivrs cs add out push dec fwait dec fwait movsl aam orl movsb adc in cltd xor aam ret addb pop shlb mov cli and xor test inc and gs call xlat loopne (bad) pop outsb mov add dec sbb sbb int cmp mov jnp or shrb loop push cltd pop rcr cli int3 lock xor push mov xlat push aaa dec add inc jbe push cmp jmp push test xor jle mov lea push cwtl mov pushf push sti mov xchg and add mov jl bound mov dec pop lods sub push push adcl fdivrl cmp rcrl ja (bad) jge data16 lea sbb aaa es xchg sar pop insb pop jns and jmp adc loop mov loope arpl sub movsb iret mov or cmpsl pop push subl cmp xchg inc cwtl or xchg sbb movsb pop push xor dec es xor add sub cmp pop out out pop and inc cmp mov dec cwtl cmp pop jns xor int sub in jl iret or xchg fidiv mov push (bad) fidiv in dec scas loopne iret jo lods pop in mov arpl mov and das sbb mov sub stos cli xlat mov cs inc push stc lods push stos xchg dec push cmp imull enter fwait hlt mov cmp xchg or lret jge ljmp aad jmp pop mov inc pop inc add iret xor mov lods add mov pop xor add into cmpsl notl mov out sahf sti pop add das outsl mov aad cli push mov jp movsl enter ja not test mov push lock lock aas ror push dec (bad) ljmp lret leave push mov push leave sbb (bad) add in sahf cmp je xlat xor cltd jl fs imul xlat inc add sbb push cmp dec jns int lds std sub xor out push and in stc add lret (bad) cmc sar arpl cmpsb rorl and dec or push mov fcmovnbe inc ret push test mov pop icebp out lahf (bad) insb xchg negb mov and lods sub or ret sbb pusha cmp sbb and sub jns scas mov sub (bad) leave hlt fs inc inc and cmc pushf xchg ds iret popl insb dec sbb pop aas rcrb movsb sbb popa pop jne mov xchg sub (bad) push ljmp (bad) push jo sub push dec jg sbb ficoml daa mov jl lds sbb (bad) mov testb inc scas jge stos int gs mov call test and popf mov ss xchg popl add jno jecxz add bound mov xchg xchg rorl fstpt fs and mov lock xor push out out inc fwait test push and jge pop fninit iret (bad) push jmp les (bad) fwait lods loope push popa lret jg sub sbb rcrl out rol mov ja xor das cmp stos es xor jno movsl in jae push fdivrs fisubr sbb scas inc pop or adc lret push xchg movsb aam pop mov iret lcall and mov repz fistl int xor ret out inc pop pop push and add rorb and push outsl pushf pop mov mov pop sti xchg das (bad) mov (bad) out or cli mov mov cmpsl loope repz repnz leave ret push pop movsl mov lea insb movb popl pusha and xchg push jb ljmp adc xchg out adc lahf mov into jmp loope stos sbb outsl ret inc nop cli push addl lret xor adc push or out in les stos adc lock inc cmp popa sbb mov fistp sbb push dec flds xor sub in ja fidivrl push cmp ljmp test out or fisubr stc or lock pushf or (bad) push fsubr xor loope cmpl in push ret jne int3 xor movsb add js dec jmp mov cli xchg push insb in jecxz xchg xor sub dec jge sub repz xchg icebp jns mov dec mov xor inc les push pop (bad) mov pop mov adc ret sbb cwtl mov xor dec dec sbb gs fistp xor sarb out xor aas (bad) mov jb imul xlat pop ret pop out jbe arpl stos sbb lret shll dec lea push mov ret gs inc cwtl ja adc jg shrb hlt movsb std jbe sub fcoml push call push pop add imul lret sub pop lea mov cmp into dec sub mov dec bound lods dec sbb fwait mov fldl mov imul jmp addr16 cmpsb push push jne fs sbb push inc (bad) mov (bad) (bad) icebp or cmc lret bnd cwtl mov dec (bad) out ljmp addr16 std cwtl pushf xor out dec adc ret ret out les cmc inc in mov cltd jnp xchg and aaa sub jo mov push movsl pop fsubrs add pop fwait mov test ret test cmp aad in decb jns mov nop (bad) je insl lcall dec movsl aas and dec push iret (bad) aad aad aas imul out push repz xor cmp shl mov rcr insb or cmp xchg lcall xchg mov aad hlt stos inc outsl and add data16 divl or lds test out sahf cmp in cld scas cmp jge mov push movsl test stos sahf mov scas mov push fdivrl mov test jge movsl les inc add sub jno cmp (bad) cld mov (bad) mov xchg jo pop addr16 fistpl fs test cmp mov in adc popa (bad) xchg shrb mov sbb fiadd add jnp push daa (bad) mov cwtl add shrb cmp mov xchg sub mov in (bad) in dec movsl xchg sub inc mov sahf cmpsb pop mov push lret shrb loopne es sbb and sbb mov mov (bad) xor dec push inc shrb pop pop (bad) mov sub jge cmp push mov mov dec sub mov xchg pop cmp aam sub and mov push rol ficom inc cmp popf mov ljmp or pop repnz fwait xchg cmp cmp aas aam das sub mov cmpsb fsubl mov jne xchg jns push push jno mov sub scas inc pop mov and not xchg jno xchg pop frstor scas cs dec jo mov fwait into lods clc hlt in push loop das daa xor aam mov add pop shlb lret fildl bound mov ss fadds (bad) inc mov enter mov mov pop outsl repnz mov outsb mov sub mov (bad) lods push mov addr16 jecxz xchg dec scas ret test (bad) sub cli xor sbb (bad) dec scas (bad) cmp add pop adc add cld out jmp test push or cmpsb push in cmp idivb push pusha test (bad) pop loop gs iret stos sub clc pop insb xchg adc mov in cmp pushf adc iret movsb or inc sahf add cld sub jno fwait mov xchg mov jge jmp pop cmpsb cwtl fs sbb in movsb enter dec hlt clc (bad) mov pop dec and addr16 adcl mov icebp mov (bad) sub push push inc dec test iret ds jnp ja icebp fnstcw mov jbe test nop pop push xchg out fnsave xchg ret cwtl fdivr movsb xchg inc dec adc inc cwtl movsb adc test sub dec in sub cmpsl inc dec xchg mov xchg loopne call cmp (bad) (bad) (bad) mov add mov (bad) frstor xchg ljmp push test add or in movsl jecxz cmc stos aad (bad) js dec dec push jo xchg mov js or (bad) cli pop sti (bad) loop arpl inc loope jb repz subl and test lds sbb sbb roll enter xchg outsb xchg xlat dec pushf in pop (bad) jnp adc in je add ja std icebp inc mov arpl lods sub mov out and xchg sbb iret and shrb push sub test aad notl add dec adc mov movsl mov mov stos push dec mov out dec mov sub push xchg add out pop lea pop ss test fcoms and adc dec xor test push icebp into out push dec dec addr16 adc nop and jl pop repz cmpsb aad push mov dec je cmp test pop arpl inc cmc and and sub cmp lret pop mov mov lret rolb cmp adc jge push xchg mov xchg fs jg push rcr lea or sti lds dec (bad) mov dec aad xchg lret cwtl out xor arpl insl mov mov mov (bad) dec xlat sub lret pop pop out ljmp add jns movsb scas pop mov or jp test push add jbe sar outsb loop add (bad) push inc mov xor inc mov mov insl inc stos xor and mov lock test xor (bad) bound mov cmp (bad) scas sub xchg les jae outsl insb mov gs lock push gs stos pop cmp scas adcb ret fsts je xor fwait test pop pop test jge sub gs mov arpl jb pop addr16 js jnp std pop or jnp in fnstenv jnp in fnstenv sti incl add pop pop and xchg sub pop cmc add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aad add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb ret dec repz cmpsb cmpsb mov (bad) xor dec negl aaa cmpsl mov jae mov scas out cmp add add and fcompl repnz jbe andl jp jmp in fmuls or repnz mov sbb mov sbb or ret jnp xchg shll xor pushf jl mov mov xchg jae xchg and pop incl stos mov pop sub (bad) imul adc cmp adc mov aas jl jns push mov cmpsl xchg aad pop push xchg sub test xor push xchg mov inc dec xchg xor (bad) in pushf jo outsl sbb (bad) mov sbb push int xchg fcom xlat adc xchg xor cmp arpl addl sub sub jno cmp into lods out (bad) movsb adc and xchg orl mov stc dec sbb adc push je (bad) loope pop and cmp sbb mov call pop loop stc sbb xor mov mov inc frstor jae int cmp fidivrl push imul cld loopne outsb (bad) lret arpl ficoml or mov mov jae int3 aas mov mov js into cwtl mov jo jnp inc (bad) pop add adc mov jns mov xchg jns sub (bad) xchg mov jmp gs cmp std add enter push sub push sbb nopl aas pop xorl adc add pop mov icebp in lods test inc cmp add popf add arpl pusha call and push dec pop inc in xorps cmp imul fstl imul insb fxch lods (bad) mov pop mov fcomps or cli xchg dec stc sub mov push jo sahf xor loopne pop jecxz lret hlt scas dec (bad) push (bad) mov inc daa pop adc add and cmpb clc daa jp inc adc rcl push inc (bad) int (bad) (bad) or movsb dec ss cmpsl ret lods pop xor mov cmp mov xlat test adc mov mov out jp icebp adc rorl rcl (bad) sub (bad) jecxz fsubr lea cmp mov adc jb inc adc mov mov mov les loope mov xchg (bad) push and (bad) repnz out out and fmull mov sub push ja add mov or dec (bad) hlt sbbl push jmp add inc sub push (bad) (bad) jo inc test mov cmp stos cs ret aad dec sub sub in adc push lock sahf fcmovu pop imul xchg dec pop jbe xchg sbb outsl xlat andl mov xchg (bad) xor pushf test ss jae add pop xlat fsubp inc out mov movsb mov sbb data16 addr16 pop loope addr16 cmp test (bad) cmpsb sub daa sarl nop int3 das inc int mov shrl mov xchg push cld rolb aam aas mov lods mov fbld mov gs out lcall test fs inc inc dec push out fs jae lret jle mov pop lahf ljmp pop icebp jo jns cmp stos out sbb (bad) push arpl fldenv xor fsubs ret les or (bad) rcr push test push jae out or adc sub xchg sarb ror xchg insl out out xor std mov les inc insl je leave das cmp jg push add pop lods aam enter mov sbb jnp xchg push sbb sub inc xor das (bad) sbb push push clc not adc xor sub pop mov hlt cli xor pause ljmp lods xchg jnp lea mov (bad) jge int3 (bad) std push test mov dec jl jge mov xchg out lahf lea push xchg ds pushf ror in mov in add iret mov mov inc mov fisubr rclb and mul les adc fsubs lock cmc in inc pushf gs int3 mov mov iret je movsl pop lret popf rolb es bound push (bad) sbb loopne rolb movsl pop jle mov jle insb sti mov mov mov icebp inc sahf ficom hlt out xchg sbbl mov dec sub xchg sahf fmull std out cmp cmp xchg ror cmp leave jnp add dec cwtl aad sti call and ds pop sahf dec sub popf (bad) dec in addr16 fist mov dec mov mov cwtl mov insb test aad jmp outsb (bad) fisub pop mov pop out arpl sub sbb xor adc mov (bad) out int stos mov stos out out shrl or lods inc jbe xchg loopne add (bad) sub jno dec in ds bsr sbb mov and in call insl arpl iret sahf mov mov xor out mov andb clc xchg pusha popa jmp (bad) mov jge mov arpl nop lods xchg inc rol adc xchg loope sub push xor test xchg ss xchg inc push rcl addr16 fdivs xor addr16 cmpsl dec lret xchg mov loope adc stc das sbb pop movl es notb ss xor mov mov lahf data16 cmp faddl inc xchg test add add xor cmc or jmp lcall leave or jns das les push addr16 fcmovbe and add sti test mov mov std out inc movsb aad or xor test jae push cmp in push push mov xchg mov adcl sbb insl dec push adc jno repz jp mov outsl jo or pop imul test aaa push je xchg jle mov fcoms sub fnop sub fmulp adc lret (bad) mov nop pop (bad) lock (bad) decb jo outsl rclb dec mov test iret ljmp cltd shr push in scas scas loope push inc mov mov sarb mov push or push call jl jl ret test dec fwait or pop jecxz js cltd movb out and sub xchg pop aas arpl (bad) popl sub mov inc dec repnz sub ljmp inc jnp sbbb push stos jp and aad dec outsl pop dec jle loopne add shrb ds js dec inc inc xor dec cmp stos iret stos mov mov lock pop xchg xchg cmp dec adc mov push (bad) add jae push fidivl push sbb mov add pop and stos jb mov (bad) add push dec push jecxz xchg sub xor push jns mov insl (bad) xlat pop div pop add push roll stc pop out mov lock out jne cmpsb ret xlat xor jmp xchg xor xchg addr16 pop pop sbb (bad) xor cmp and dec loop sub stos add outsb add or or cs jecxz adc dec (bad) insb mov sub cmp sti and sub out test (bad) jo pop scas shl mov sti mov popa mov pop fs xor inc sub or push (bad) push mov mov lret out pop xchg lcall cmpsb fwait cmp les ljmp mov aam ja lds imul (bad) into ds mov es jge cmc adcl rcr add out jle js call lea add scas pop cs (bad) cmp and pop pop mov cmp mov jbe cmpsl or (bad) xor sub mov dec test out ss inc xlat jbe xor gs daa test sub push or pop jl fwait xchg sarb sbb scas jae add jae stos and jecxz mov popf jbe jmp mov and pop inc jnp popa dec cmp fs loopne bswap mov inc mov sub repnz xor pop loopne fidivrl xlat pop push out mov pop mov add jae mov inc aas sub aaa or adc stos inc popa mov dec xor out ret lea scas (bad) lds push (bad) adc inc lahf clc xor je (bad) pop cld fadds jmp in cmp jno test push stc and aaa into aam push icebp xor aam ret inc jb dec js sbb cmpsl adc dec rorl idivb aad aam mov mov aam sub mov or jge icebp push (bad) ja sarl jg mov push mov out arpl sbb fs in cmp icebp loope mov sahf mov jmp cmp and push (bad) jmp and or iret push nop inc mov je sub int inc and inc lods cmp push call cmp xchg sub mov notb mov inc pop pop jge iret cltd mov faddl ja (bad) (bad) lret cmp xchg inc xor adc fdivrp stos daa mov mov rorb (bad) mov insb jl push inc mov cmp ret lods lahf bound out jb loopne (bad) in cmp mov std stos mov dec jle pop cmpsb test loope into cmpsl xchg add pop es (bad) mov jmp cmp push in lcall call adc cmp mov repz fildl jg dec mov enter out or mov cmp repnz or sbb arpl into movsb pushf xchg pop enter nop addb imul ret lcall mov push outsb xor xchg rcrb inc jg in jmp cmp jp jle arpl jae cmpsb pushf and sbb frstor xor and jnp mov add (bad) jno icebp ljmp cmp inc in lods stos insb push push mov aaa es shlb adc popf jg test sub lahf xlat xor sbb insl divl ja pop cmpsb cmp xchg pop dec mov inc jb loopne mov pop push xchg sbb push sub leave mov jns js sub imul jp cmp dec mov or push fbld mov push mov push movsl mov add mov mov es cmpsb or push imul mov test and sbb adc cmp pop sarb xchg int3 lahf adc mov xlat and sub (bad) (bad) bound jae mov pop cli push jns adcb pop icebp test das in loopne adc lahf fwait ja ret mov (bad) mov xchg cld insl dec (bad) stos dec sbb sub inc or xchg xchg mov cs xchg xchg (bad) cmp xor dec xor (bad) pop roll jp push in mov cs jl mov test movsb lods sub fsubr out in jle xchg and rcl adc inc js xor cmp pop cwtl cmp int ret lcall xchg mov or aam sub xchg seta and mov adc aad jnp repz push jle pop imul adc add cwtl mov push mov pop sub out add fwait cld (bad) aam lods loop loop neg das icebp xor jnp and jmp mull inc fisubrl xlat fstl or decb rcrb les jmp jp lds add std cmpsb bound cld xor orb lods cmp inc aam sbb push aaa sub inc in je push popf lods mov imul push mov mov mov into cmp xchg cmpsb imul push cld push add lret hlt (bad) imul xor loop sub jmp je call mov fidiv out mov (bad) push or cmp nop inc adc imul iret xchg jp dec mov cld scas mov fwait call (bad) lret xchg in sbb push xor lds dec xchg insl cmc ss xchg adc xor std pop pop inc in push add dec pusha push sahf push jmp arpl sbb or add in in jb popf stos pop bound lock sahf notb test xor and repz out lahf mov cmpsl pop mov pushf jnp (bad) ja shlb cmp mov inc inc or test pusha sbb out push add add popa inc fiaddl ss shr mov add mov clc loope insl movsl test call (bad) mov or lods daa ret repnz jnp mov adc adc jecxz mov (bad) cmc outsb adc pop push cmp or shrb or sub out enter bound sub mov mov std out adc push loope addr16 js repz jl sub jb popf push fwait arpl out xor jl xor inc movsb sub lock jae xor cltd (bad) (bad) popf xchg or cwtl push inc (bad) hlt mulb (bad) cmp xchg aaa shlb loopne mov and xchg and push adc popa ljmp xchg pop aaa dec and ss addl or stc jb mov in jae aam jge xor adc xor or out push (bad) mov add cs pop xchg push insl sub xchg stc jp mov mov mov outsl imul outsb stos adc mov push pop mov inc sbb loop push lds pop dec and ror pop (bad) mov ds mov jno outsb (bad) cmp pop dec stc jge test adc out xor pop js or or ret or clc mov jns push leave pop cmpsl push cmp xor test nop adcb andl sbb cmp xor add adc or pop mov in pop pop int pop (bad) xor dec mov adc jecxz inc icebp adc cmpsl push pop jbe pop repnz push jbe fnsave aam cmp fndisi(8087 add insl ret push loopne and jle int3 cmovno repz or sti jmp int aaa outsl fidivr aaa outsl fidivr pop add incl mov into mov dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoms add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push inc adc xor xchg je and movsl mov dec and call push inc mov fdiv aaa push iret scas js sldt popf add pop cmp sbb pop jne dec mov add jae cwtl xor mov dec sti sub pop in dec outsl mov lods sbb inc incl out sbb cmp mov aaa or mov int lea movsl scas leave out iret int3 (bad) or test loope mov dec adc sbb insl loopne jo ffree mov out pop out add push pop popf lret mov sub (bad) jecxz pop lds sbb and inc dec mov fsubrl lcall test sub lds testb or xchg cmp sub lods mov nopl outsb dec inc mov loop gs push push lea inc mov push mov (bad) cmp cltd sub es cmp insl out push push (bad) (bad) jl idiv fwait repz cmp cltd repz nop cmpsl xchg adc popf lret adc outsl ja scas jne sbb ss dec cmp and int3 mov inc and fistpl pop (bad) repnz jb push and (bad) mov imul and xor pop lcall cld pop push adc mov subl ret add andb inc push push (bad) mov dec mov sahf (bad) sub fbld push mov stos lock sub divb outsb inc arpl mov ljmp add adc int3 imul jge dec fstl inc add (bad) mov js sbb pop inc or cmp push xchg iret (bad) mov lret std mov lods mov fnstsw push lcall mov daa push dec sub sbb xor pop aaa subl adc testl xchg mov cmp scas nop mov icebp add push lods inc cmc sbbl imul dec mov push cmp fild mov sarl inc bound mov pusha cwtl cmp (bad) add daa xor sub cmc mov pop sub arpl fcmovne cmp jbe out push psllw sbb inc cmpsl pop pop lret inc lret pusha push push jns jae xchg (bad) inc addl xchg mov lcall mov int3 gs cltd (bad) enter mov pop or or push clc and dec mov or (bad) lea jbe out jl (bad) dec std icebp scas cmp scas (bad) in cmc sub xchg test into cs mov (bad) sub mov jnp or push jno inc fisub dec pop and cmp jbe popa loopne enter fnsave and jp cmp data16 mov jbe ficomp mov lcall sub mov sub xchg and inc cli mov int3 je les dec mov sub xchg lock scas jl jge mov mov adc popa aad sbb xor push lock adc pop pop push mov dec xchg pop or jge lods mov inc jmp cmp pop push (bad) ljmp std push cli dec dec js fst bound aam mov pushf ljmp dec mov cmc fcompl in jbe ds add movsl pop sub sti (bad) into loopne sahf mov rolb push movsl push imulb imul nop orl pop adc mov outsl xchg add mov inc rcrl pop or cmpsl pusha jmp stos mov sub das popf push xchg and mov lldt dec les stos sub or test cmp push push cmp xchg xlat ljmp dec rorb cmp std dec pusha mov push mov call lahf rcrb push dec fldenv gs xchg cs scas adc xor leave les inc dec iret out bound insb jno cwtl std bound jp daa dec frstor or ja es add jle xor imul out addr16 and imul mov sbb aam jge push pop mov cld stos ds std lods (bad) cmc sbb lea jle fdivs xchg pop inc and mov cmp push mov jno (bad) je js test insl ss ffree int3 cmpsb imul jns jle repz xchg clc xchg xchg jmp int3 cmpb dec fcompl inc popf stc mov andb ret or outsl lods inc movsl (bad) mov cmp test clc add push aaa loop dec in daa mov or scas inc loopne adc pusha xor and inc sub cld int jb gs sub sub movsb dec test sbb mov cltd mov (bad) push je arpl sti (bad) mov test cmc sti xchg aad mov fwait jo cmp ds xchg fucompp loope sub das push outsl mov dec fwait mov test mov scas xlat (bad) cwtl addr16 cmp xchg or out jb lods scas sbb cmp lock xchg or mov fist clc stos push jp inc jno inc xchg mov fcomps add jle lock cmp out jg xchg pop movsb inc adc cmp outsb test mov pop push cmp stos subb fnstcw cwtl ret jbe mov xor popf xchg enter mov push xor or inc adc stc gs mov andl into dec clc mov inc cmpsl mov pop sti mov push clc pushf push in es (bad) test mov cmp xchg inc dec push push (bad) shrl stos xchg cmc add jnp insb mov and inc shlb icebp mov jns or test repz and fwait jg push movb stos cmp push (bad) aas inc in push mov dec add xchg sub and imul push push in aaa and adc addl mov cwtl inc hlt cli jb dec mov out pop mov ss cld scas les jne dec pop out push je aaa (bad) loope je cmp stos fwait loop push cwtl fisttpl pop and mov loop insb stos cwtl sub ja out jbe out es mov scas mov fsubp scas sub xor cmp inc push fisttp and jno int adc stc dec (bad) dec adc movsl arpl (bad) out enter mov inc xchg subb enter dec mov ret loop ja or xchg and out test out (bad) jmp mov mov in ljmp into cltd fcoml adc je xchg das push sbb ljmp (bad) fdivl and pop jmp or jns push cmp aaa (bad) mov lcall in xor xor mov in xor lcall jmp mov mov dec xchg xchg lock xor bound add scas xchg push test pop pop xadd pop mov pop gs adc test lock adc in je mov mov push rclb cs mov ljmp mov xchg (bad) test sbb scas push pop jnp aad jmp call shr jl xchg mov scas (bad) (bad) push shlb xchg mov andl add lahf mov jns xor pop into test xor pop add mov mov mov ja jle adc push fdivl hlt push add in push sub scas jp lods cmp inc jns mov lods cld cmpsl mov xor repz and out aad aas jge std push push imul loope es scas dec (bad) sub in in ret loope adc sub (bad) inc rorl jmp dec movsl roll xor ret mov rcrl xchg shr sbb sub mov sub jo out out inc sub push xchg int3 adc cltd dec or (bad) rcl mov mov (bad) je mov fbstp mov (bad) xor (bad) adcb or cmp bound pop add (bad) adc fldcw xor inc jb (bad) (bad) xchg les inc and jp std jle mov gs jle dec push jmp xchg imul fcoms incb jmp mov pushf std cmp pushf daa dec in mov pop inc cltd cmpl mov std pop stc sub sbb cmpsb sub (bad) and and xchg popa imull bound fldl (bad) sbb jg movsl add fs lret push xor inc test jns sub repz and rep jg movsb and cmc sarb aaa xchg aad pop pop inc pop call mov add lahf orb ljmp cld fstpt aam xor lcall scas shll cmp mov dec pop or inc andl loope lods pop lods int3 mov mov jge fidivl rorb inc add pushf lcall xor popf repnz sub sub jecxz iret leave enter or jmp fsub xor loope in push cmpsl jl jge daa inc mov push mov dec clc xchg adc mov out xchg jg sarb fdivl push lock cmp add std addr16 xor repnz je daa insb cs in lcall cmp rolb daa popf outsb lock inc pop sbb or fcmovnbe jo ss add jns push adc in aam pop add push repnz push in test fdivp and cmp movsb daa jl add xor dec enter push or mov and das push pusha pushf fstpl jecxz inc frstor and or insb push pop push je insl push lret clc insb notl adc js cld sbb dec jge adc sbb jg xchg jae outsb mov fldenv test ret imul loop cmpsl and add jmp hlt ret in icebp test fwait shlb les pop shrl out test iret mov cmp jmp dec ret cmp pop fmull jo negb mov sub rcrl adc icebp cmp sbb cmc mov adc inc outsl loop adc js cli mov bound repz in sub xor lcall out mov push outsb out pop cmp cmp and xchg aas scas pop pusha jmp mov dec jbe and sub call add cmc out daa mov cmp into adc xor out stos outsl cmp loop enter inc cltd sub dec mov push sbbl repnz mov test int push ret and daa xchg mov mov mov cli out rcrl sbb and pop mov cltd in pop daa add xor xchg push ret leave adcl pop orb cmc mov adc test xor outsl dec xor lods (bad) add std mov mov insb mov and sub popf cmc sub xor inc test mov rclb insb xchg sarb (bad) sbb xchg movzwl shl leave push dec push sbb das outsl and jbe mov insb cmp cmp out out mov mov pop xchg leave xchg dec int sub stc stos ret repnz lods test push repz fisttpl add xchg mov xor daa push xlat enter inc lcall int3 mov stos mov mov mov or loop pushf jo movl xchg iret data16 jae arpl (bad) jbe in xchg mov sub dec push call mov pop pop aad mov push fist cs dec push incl cmp pop or pop push cli jmp pop aas cmp lods imul rolb sub lea add or xchg test inc cmpl iret imul sub xchg mov push cwtl data16 jl mov sahf arpl mov xor decl fs pop or adc mov xchg test (bad) notb or fcmovnu sbb gs iret add jg sbb mov jns fdivrp mov test repz sub sub test (bad) enter inc fbld dec jge inc pushf xor add jns inc les sbb fdivrl fldcw and and imul mov xlat shrl jmp addr16 cwtl push push dec jae decl divl sbbl lods mov cmp hlt xchg mov mov mov mov arpl out roll xchg push sub aad cmp xchg into and cmc adc movsl adc jecxz out jmp add aas xor xor xchg lret fdivp sbb inc mov (bad) mov (bad) mov in inc add xor cmp scas pop inc inc jns inc push fiadd loope sti std add ss ja xor or outsb push rcr arpl test mov setae loop cmp jne inc add push (bad) cmpsb push test ja cs fbld je cmc or mov xchg sub imul outsl dec jae push xchg fistl dec icebp push ds fs and and mov sarb test lods xchg loop jecxz pushf or or add jl push cmp sub jge leave jb popf xchg lret xchg and dec std jno rolb (bad) or int add in test add int3 repz (bad) mov fwait cmc je sbb outsb scas out adc and ss add lahf jmp mov repnz sbb ss or lods mov sbb insl leave push cmp mov insb inc mov cmc js lcall in cwtl sarl lods dec pop cwtl cmpsb cmp loop sarl sahf popf mov mov mov (bad) (bad) and dec das sbb arpl push jge pop rolb add popf idiv negl jp loop mov das pop mov mov das pop mov add aas sbb call ja add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoms add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas fmull rolb lahf cltd scas (bad) xor xor out sbb jmp fnsave je aaa push ret je push cmpsl imul iret out faddp jecxz xor cld scas cwtl pushf cli cmpl pop xor sti xchg push inc jno lret loopne dec je je daa inc adc and push add mov dec fsubl int scas gs (bad) jge cld xchg jmp mov fcomip repz jno mov cmp cmp jmp sub repnz js popf mov stos ret jge fcos and jbe dec and jae push out sbb push xchg dec xor data16 out adc push xchg pop push jecxz ret jo sti push popf int jne fisubrl ss loopne outsb xor sbb leave mov (bad) sub mov pop in orl icebp test xchg push stos paddb cmpsb mov ret popa jge addl push dec pop pop pop sub ja or out mov sub mov test imul pop add stc jae jne mov in jb popa imul pop cmp jl adc mov movsb repz xor inc mov mov adc shrb popa xchg jl mov ret int cmp jmp outsl das xchg adc frstor mov fmuls xchg inc jl leave push loopne pop sbb test in mov (bad) (bad) outsb adc je adc mov or xor inc nop pop dec lret mov dec je pop es adc mov addr16 fstpl jmp jmp adc inc inc adc pop xchg jle daa push lods mov cltd push mov jae outsb lret ret daa mov mov mov idivl fcomi ret cmp stc mov pop add imul hlt and cmc dec loope ds cmp data16 (bad) pop and sub pop adc lret pop xchg push pop popa out (bad) pop rolb loope sbb sbb push jae lcall push negb pop mov jns and xor or (bad) adc mov pushf bound (bad) aad (bad) fistl nop in push mov pusha mov adc mov fstpt adc into dec xchg fs push mov (bad) pop inc std outsl mov lds movsb or (bad) leave test mov push xlat mov dec jo hlt sub add outsl outsl sub bt loop adc or dec push dec js add jbe test xor pop stos mov mov jno dec xor inc sti repz lods pop cltd mov mov or adc dec cmp arpl inc xchg imul jb and subl cltd xchg repnz pop sub add fcomi lcall ds push cmpsb mov mov xor mov xor jge inc and mov inc mov mov mov mov jmp dec push nop pusha rdpmc repnz in in add jl cs sbb mov lret icebp jb jo (bad) (bad) fimull dec cld mov push xorl lret pop cmp mov pusha test jl jg fildll lods aas test test bound test sbb mov inc inc adc jp xchg fldcw dec lcall rclb scas dec xlat mov and pop pop scas pushf and gs fstpl lock mov sar cmp sbb (bad) scas pusha mov addr16 sub mov es mov mov outsb test inc and mov mov lret jb add inc jle xchg fstpt and xor in mov pushf jbe push pusha push movsb sub ret lock inc pop or inc add inc testb xchg cmp call (bad) out sbb in xor fistp and dec xchg leave ret mov in rcrl mov inc sbb or test adc (bad) inc push jne push mov cmpsl inc add jmp js mov out inc dec mul sbb movsb jp dec sub fcom dec sbb push sbb je jmp mov cmp push scas (bad) daa xor or push push pop pushf in pop pop sti lods inc dec dec cmp push or jp jp mov insl aad lock ficom sbb and fs (bad) std lea adc and cmp sbb pop loopne in cltd xor rclb adc in rcll and lahf add daa dec mov push push xor pop (bad) (bad) jno adc adc mull stc inc btc repnz xchg insb lods add decl (bad) cmp insl dec (bad) scas and cli aad xchg test sub shl fsubp dec push mov push adc aam mov sub push add cmp cli xchg push and nop idivb cmp sbb sbb arpl xchg sub sbb jo fiaddl repnz es mov push mov loop arpl xchg sahf mov adc sub std (bad) arpl ljmp das clc icebp stc fist iret cmpsb sbb and lea push test in add jge (bad) aam lret fwait das addl mov mov mov (bad) jnp push xchg pop adc pop fdivs add xor bound sbb inc shrl mov cmp sub cmp mov add xor pop les mov (bad) scas cmp out (bad) ja sbb outsb frstor mov popa popl (bad) inc mov enter cmp xchg xor lret pusha negl pop addr16 outsl xor lahf inc xor push enter jg pop mov mov push rcrl (bad) sub or sub mov jb mov dec xor mov cmpsl lock fiaddl int3 mov ret das sbb jmp arpl enter (bad) call mov sbb cmp push andb outsl adc lcall xchg xlat leave jns jl mov xchg call ljmp sub imul inc rcl test outsl mov add mov push (bad) cmpsl adc sub inc sbb push mov out or sti mov xchg loope xlat sub push fwait repz jp ret (bad) mov xchg in in sub dec enter pusha push rcr sti add mov cmc and (bad) sbb and out mov mov cmpsl aam xchg dec arpl mov push sbb or xchg adc inc lcall inc jp push aam div imul iret int3 sbb stc lret nop outsb add aam outsl mov outsl movl int stos sbb hlt rclb sbb rorl aad mov add shlb dec push sub pop push jge jno ficom dec sub jns (bad) and loope into leave inc mov loope jmp cltd push jmp lret xchg arpl mov popa pushf inc iret jecxz cmc xor arpl jge fisub ficomp jg orl jg cmp and jp ja push js dec js addr16 xchg and sahf pop mov (bad) cltd js cmp dec lods int3 push cmc xchg mov cmp cwtl sbb dec mov das dec sti add popf cmp negl lea das push pop insb mov mov and mov mov inc popf bound gs popa hlt jge dec push icebp mov loope aaa adc adc and xchg loop sub dec xlat sbb insl xchg pop mov jl (bad) mov push out int lds push push pop mov cwtl (bad) xchg cmp scas jno add dec ss lret xor push jg or and cltd mov push xchg or fs xor fndisi(8087 fldenv pop dec jae pusha pop imul jp pop leave lods push sub inc in les mov dec mov in bound xchg fstpt sub loope fld in xor ja sbb cltd inc sbb sub insb xor lahf pop inc jb pushf (bad) (bad) scas arpl and shrb mov inc fisub ret adc movsl enter stos bound mov pop xor jo cli dec mov sbb enter mov stc pop ret or push mov std cmp lods push in dec jae dec inc add repz jb div cltd cltd inc popf jg mov cltd jne sbb mov mov xchg repz mov aaa sub pop cs addl and push lds or adc inc and test xlat stos pandn mov or int (bad) sbb dec idivl pop pop iret sub add jl xor rcl insl inc mul pushl mov out mov fldcw ds inc nop pop dec jg pushf in mov jns sbb in data16 cmpsl jbe sarb inc call or in jnp imul insb pushf sub int cmc data16 jle shrl cmp call mov mov push test scas aam adc push insb pusha addr16 xor inc (bad) push cwtl mov std orl and enter mov (bad) push (bad) pop aas dec jne in or movsl test sbb insl and clc jb xchg insl cli inc jg ficompl pop push fstpl popf out lock inc jno insl sahf icebp ret lret fidiv stos out sbbl sbb sub icebp xchg jle (bad) or out das call push or sti cli xor jg imul sbb sarb lock jl inc rolb cli lret mov shrd push dec dec xchg and sahf and cmpsb imul enter and adc jbe jns divps cmp enter fistpl fisubl inc and fnstcw (bad) cmp pop pop pop bound stos (bad) in out fcmovu sar imul negb in mov push ret out push subl and out sbb (bad) push xor jno xchg out sbb mov and jmp outsb adc sti stos jae ret mov fs fisttpll rclb lods inc jge sbb cmpsb mov in xor add popf adc pop imul push lcall sti sub sbb cmp andb clc mov fldt mov (bad) daa jb jno sahf insb in mov fwait pushf dec adc pop cmp mov iret xor mov insb xor jecxz outsb enter dec int3 dec loopne ret push lahf aas push or sahf sbbl nop cmp cmpsb aam repz jl lods inc in addr16 pop and xor rcr aad mov push imul dec repz call (bad) (bad) mov sub (bad) mov mov xor xor push rolb mov lock cmp push aas (bad) xchg mov rcl fwait or rolb push sbb pop pop dec cmp add push pop cltd rorl mov inc lock cmpsb jnp pop cmp pop sahf mov (bad) xor xor sub cs sub cli nop jge fmuls push scas and loope sub mov daa dec pop jmp loope mov or sub insl jge mov jbe pop or lcall out jo or shrl pop jno dec jmp mov call mov ja fwait ret ficom cltd adc pop sub hlt jo iret dec jnp,pt mov dec jg fxch xchg jle mov cmp add aam popf lock sub into mov mov mov cmp pop add mov call (bad) cmpsb lea jl push shr push insb sub call or jne xchg jbe sub fiaddl out xchg jp (bad) ret fisub jno mov xor decl sbb pop je push daa pop mov pop data16 insl out xchg aam scas xchg clc add into fiadd aaa ds push xchg outsl lods insb aad push mov sub cmc or mov notl lret push (bad) cmc pop iret xchg cmc xor sti jno inc je fnstenv cmpl and and or dec lods stc mov outsl xchg inc loop pop mov lea lock xchg xor call nop mov mov add mov mov fnop (bad) sub nop xlat inc out fistpl loopne jle jae inc fisub push cmpsl and rcrb mov sbb sub sbb (bad) pop icebp sti dec push imull jecxz inc lret adc addr16 xchg push pusha add dec out lret add xchg xor mov mov push pop je mov repnz je xor aas pop nop add xchg gs pop imul mov or jb repz adc (bad) push nop insb rcrl (bad) jle shll jge aad imul fist xchg add sbb lods mov inc push lds sahf pop mov jae or adc mov test clc rolb (bad) call mov xor popf adc fdivrl pop lret in into testl pop add cltd mov orb sub xor mov nop push adc mov cmp sbbb iret (bad) je int dec pop cmp and je into mov sbb inc xchg loope adc sar xchg out fisubr popa js push clc lret dec je mov sbb stos int3 dec xor (bad) jbe pop xor divb test lock mov pop jno lods mov or dec mov test (bad) jns mov adc aas jl push xlat mov in jnp das je ftst popf adc xor cmc jns gs cmp repz ds mov push mov pop sti sar mov add mov and (bad) je cmpsb faddl lcall stos scas mov (bad) or pop pop inc and lret push mov inc inc adc cltd jno or sahf cmp lods leave in mov (bad) enter or mov xor ret js fisttp insl test aaa nop cmp in jns fcomi jb inc aad test dec add pop push mov jecxz cmpsb push pusha and loope mov dec pop iret aas mov mov int adc aas xor xchg cltd aam dec xor sbb rclb jns in xchg daa dec sahf cmp repnz xchg (bad) aas add jg mov adc lds add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fstl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb jecxz icebp (bad) jne mov adc rcr cmp hlt imul fsubl arpl dec out std jl inc (bad) rep js fidivr mov sar xchg cmp mov (bad) and mov sbb cld cs cmp ds lahf stos ljmp jge nop cmp dec popa ljmp scas (bad) pop push data16 inc fdivrp imul xchg test movsb (bad) in adc cs jbe out aaa and sbb pop pop adc xor addr16 movsb jecxz stc cmp popf mov sub cmp inc mov out icebp dec push addl in fdivr jmp xor mov loope sub leave cmpsb aaa mov gs push es mov sub mov add xor push push ja mov int xor and lahf mov data16 mov mov sahf pop fwait and push dec outsl sub clc inc les repz mov sahf in repz push aad stc mov pop lock ss pop mov js,pt xchg sar arpl mov cmp negl movsl xor push inc (bad) in (bad) std lea and sbb sub jg push xor jmp stos into or push fnstenv rcrl lods jmp ret frstor mov sbb adc popa out jbe ds loope sub mov xchg sbb mov push mov mov cmp cmpb out test mov test xor xor xchg enter outsb das mov sub cmp push (bad) cli dec dec mov cmp loopne mov loopne sub pop (bad) nop test out test mov iret rclb es sbb cmp jo sub dec out sahf push push mov icebp mov mov lret cli and ljmp pop out cwtl sub fmull and sub mov movsl das xor xchg (bad) imull adc mov dec cmpsb imull mov mov gs lret mov aaa xchg out lret sbb jb std inc sub in mov in jnp iret cmp cmp mov xor mov push jp out jge mov add jne not adc icebp mov push stos rol jnp or jns mov leave or mov fisubr pop cli inc pop and or sub jb pop mov sub inc cltd xor cmpsb arpl add add mov dec or fwait scas mov fnclex (bad) sbb pop push push imul clc outsl fldt scas lret sbbl adc fs sub repz inc into xchg (bad) or movsl cwtl pop add mov arpl adc mov (bad) sbb sub insb sti arpl (bad) cmpsl push jmp and mov mov and in iret inc mov bound hlt pop add push in loop (bad) cmp push popa out leave sbb jno xchg xor fdivs push mov or pop sub push fwait scas mov scas push aam divl jge adc mov xor add adc lea fwait gs movb xchg dec sbb mov nop mov mov jle dec hlt sub repz mov add push fwait mov aas test push je aad ret pop dec fcomi push stos adc mov cli leave cld int3 movsl int xor jo xchg ret pop mov sahf sti xor testl ss and out aad pop lods ljmp sub cmp push xchg sub sub xlat mov shr pop imul pop dec int3 jae subb mov push push add fsubr cmp out or pop jnp sbb fldl sub lea inc mov rcrb adc out andb jmp and cmp rep shrl push scas stos movsl sub adc xor mov mov (bad) data16 (bad) xchg push mov cmp push iret xchg cmc not sbb mov push mov test and (bad) jmp int adc aad aad mov jae clc loopne das pop ret lcall rclb mov movsl mov orb mov stc jbe fdivs int3 sarl in mov in arpl cmp xor je mov inc jp lahf mov cltd fidivl fiadd bound jno sub mov push icebp mov movsl mov nop cmc jp mov (bad) push fmulp test scas and cmp adc mov sbb repz movsl popf std clc arpl push xchg xchg mov lea pop jno xchg enter (bad) xchg xchg std lret in scas mov sub inc dec mov xchg rcr lcall xchg scas sbb jmp and jle lock scas sti aad mov sbb push idivb lea lods pop mov mov or adc mov inc pop sub cmp jno jns cli push jg daa mov addr16 mov (bad) out lcall dec ud1 stc dec fs add dec hlt lahf in stos cmpsl sbb mov int3 hlt cmc fwait ljmp aas cmp xor cs cmp nop inc insb loopne mov arpl in push cld lea test scas out test jnp call or mov mov push test scas mov fcomip xor push dec cmp inc cmp inc in pop mov imul mov lahf jle loop std inc outsb ss in pop add iret or sub cmp in cmc sub dec (bad) add pop mov mov (bad) cli shl pop jge scas rdmsr mov cmp in hlt out sub xor mov mov cli dec rcrl shlw sbb xchg int3 jns fidivrl and lods lock negb mov xor mov add outsb mov imul std push mov dec je in fmull in or (bad) mov jb bound (bad) fs push imul push fbld xchg div movsl (bad) leave int3 sub hlt sub xchg xor pop jo mov loope push daa ss pop push test cmp xchg lcall out cltd jp jg mov out mov mov xchg cmc clc in dec sub sub pop clc sbb push mov js dec arpl pop ret inc xchg shll mov dec inc repz xchg clc jmp in loopne pop inc dec fldt pop sahf add mov js ds loop or cmp xchg push add adc jmp add sub (bad) sub mov xchg ljmp cmp scas adcl xchg xchg js cmpsl or xor mov or mov add or stc add mov icebp rorb insb adc scas popa mov into jecxz dec xor xor pop in repnz mov je loope add test pop lods and cmp cmp std jnp xchg or aaa (bad) ss cld jecxz pop cmp add mov call rorb mov push mov xchg jp lahf pop rol xchg ss sbb nop fisttp addl out loopne pop and ret sbb dec insb push pushf xor rolb ss (bad) and jbe or pop mov sub mov mov (bad) dec (bad) stos cmc adc jb cltd xchg mov in (bad) adc test (bad) fisub out push inc nop push scas cmp sbb xorl sbb mov imul movsl aaa xchg mov jae and inc xchg mov js or outsb dec lcall stos inc sbb mov pop mov les add (bad) insl es xchg cld fidivl out push add push inc pop mov sbb cmc ja pusha ficompl es sub aaa inc inc (bad) test inc and lods ds cmc sahf xchg imul jbe xor gs popa movsl fstl cld inc out dec fcompl push test loope shlb cltd test cmp or inc sbb test pop jp inc and frstor gs das arpl sbb mov pusha push adc int3 fs (bad) lret cmp shlb jp aas lea out inc stos pop jns fwait mov xchg int3 dec add int inc addr16 scas sub and cmpsb fdivs push xor push sbb arpl pop xchg dec (bad) mov jle xchg sub roll xor loopne iret iret clc sub pop sub xor sbb add sbb jle and pop adc loope mov sbb stos subl clc cmp adc bound icebp add mov ja mov pop mov xchg leave jno inc rcr sub mov mov mov xchg shr pushf jae cmc stos dec das scas das gs pop and lods repz dec lret inc in stos add stos jb mov push mov dec icebp cmpsb sbb ret (bad) jmp daa jmp jecxz jo pop clc aas xchg cli pop addr16 sahf dec xchg adc jne sub lahf pop and pop cmpsl aam pop inc push repz lock bound lds xor pusha fcoml ja and stc sbb pop lock lcall cmp pop add xchg (bad) je out fcoml inc sub mov lret cmp lods xor adc (bad) mov mov je (bad) or add insb dec jg pop dec lret pop fadds iret mov sbb cmp cmc dec pushl addr16 or cli fnstenv jb repz inc xchg (bad) adcl gs stos sahf dec test lea pop out adc int3 lahf push pop sub decb sub cld gs fwait pop xchg sub in dec call roll inc cmp sub inc inc in fwait popf (bad) mov sahf rol push cmp enter xchg aas mov pop push sbb mov cld jb mov (bad) hlt mov or jg,pn test push pop xchg cmp cmp xor and adc mov (bad) cld fbld sub mov shl mov cmpsb cmp in cmp jno std xchg inc das in mov shlb adc add mov icebp and shll ljmp mov imul repnz add dec loopne mov xor lret push (bad) or aam shr sbb cmp xchg divb sbb psubusw mov jmp xchg scas or sbb mov scas xlat hlt pusha cwtl mov inc mov push mov add in loope pop pusha add out mov movsl pop popa cltd and push les fisub (bad) jg mov lea clc outsl pcmpeqw stc in xor lods mov adc sub imul and sbb dec mov dec leave scas sub cmp mov leave xor xchg je or or into (bad) mov sub mov in lret push negl xchg cmp push rolb stc sbb dec cmp imull imul mov inc sbb leave mov cmp scas (bad) sahf data16 inc lcall push stc movsb movsb add jne mov pushf mov (bad) dec pop sti jmp dec aam fsubrl jno xlat lds rclb jno push dec scas data16 repnz inc or xchg jecxz and inc xchg dec inc jg and stos imull enter cmp jo xchg jbe shlb jne sub cmp int cmp dec dec mov mov lret pop js (bad) in add stos arpl cmp push and ds jns adc mov mov xchg or sahf cmpsb jnp int mov pop nop cmp fimull cmpsl outsb dec cltd out dec sar sti ret pop in popa sub cmp cmpsb jb push test cmc jbe,pt std and orl rorl push dec rorb cwtl mov (bad) mov push mov xchg mov cmp shl mov hlt repz ljmp pop mov sub pop cmp mov nop ja scas icebp cmc ss jbe subl xchg or std and pop xchg mov dec or out mov pop cs addl imul xchg inc int3 out push rcl add mov push cmovbe and fiadd mov test data16 ljmp mov mov inc add rol mov mov lahf jle jl js jl pushf and stc aam movsl or push inc xor push loop test bound stos ljmp adc inc mov sbb fistpl ffree sub ja out nop mov adc pop jmp mov xor mov popf fldl loop int sti jg or lds cmp gs into push inc rorl mov movsb and leave insb add iretw xchg jns cmpsb hlt jle cs repz fistl and cwtl mov test pop or bound jno adc sub xchg into call stos repz or lahf shrb jno mov ss push jl cmc insb xor loopne xchg and inc jae lahf xchg (bad) (bad) or inc je xchg aam sub mov ljmp and adc jnp dec fucom lret ud2 mov mov test inc pop push in or jmp push loop xchg insl mov mov xor mov mov push push push flds popf fs or dec aam pusha jno fisttpl call aad test adc xlat scas sti push jmp aad clc lea cmp fbstp xchg je ss pop pop call fucomi fcoml jp mov ret mov insl loope clc inc idiv cmp test (bad) loope push icebp icebp aaa movsb push mov (bad) push fsubs sub je idivb outsl or sbb pop cmp push mov push repnz insl outsb mov cmp pop call pop fdivrp negl jp call push cmp mov jp mov push cmc faddp (bad) sub add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fistl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb ret (bad) icebp fwait cmp xchg dec popf cmp je rcr xor sbb dec xor jnp mov outsb mov fwait js idiv aaa push fistpll add cmp xchg mov inc mov stos test pop inc (bad) sbb xchg mov cmc imul test adc es or pusha adc mov movsl cmc lret daa notb mov inc pushf repz jmp xor and cmc lahf sbb push jnp mov out and movsl fimul mov xlat in push xor nop fdiv test je movsb jnp sub mov mov cmpsl out ja (bad) xchg xor into idivb stos lea es loop call push adc rcrb out test or cmpsb sub mov and fldenv jg stos scas push or mov push mov out dec push sub push sbb lock and popf scas pushl repnz mov and mov (bad) add push push mov push xor in mov mov or imul cmp mov xchg mov and (bad) iret stos popa mov dec inc lret add repnz sti rorl xchg add out jns sub stos js les xor xchg jle add sbbl sbb cli pop add adc aad sbb pop into sbb mov pop fstpt xor cmp cmpsb call scas (bad) xor enter sub push dec in cmp and icebp cs jb sub out push rolb jp iret sti int3 push pushf sbb pop dec xor dec mov dec shrb shlb dec popf cmpsb push sbb insb pop sarl stc mov push pop pushf ljmp jo pusha pop aam adc imul (bad) fwait aad push mov out xchg add lcall push pushf sti js add int3 mov orb xchg into ss iret hlt pop add stos lahf icebp cli dec (bad) cmc jns into ret loop mov mov enter add and (bad) mov and test loope test xchg jp jle mov aas arpl add adc sbb in dec push mov mov outsb outsl mov pop mov push popa dec je xchg aam les test mov push movsb mov repnz xchg sbb inc test ret (bad) mov fistpll hlt icebp inc fldl popl enter pop sub or pop fcmovne jecxz push add mov mov mov je ret cwtl popa push jo pop mov xacquire lods mov addl sub gs push pop dec sarb out in jle cli sbb aaa int3 test jge mov push xlat (bad) jg ret lods imulb enter fs mov xor test xor insb adc stc aaa frstor fs jmp jno push sub cmc stos xor cli gs jmp pop and dec push add inc jge jns cmp fmuls inc jecxz and cmp pop sub xor push sbb jp and bound out pop fdiv lret call insl fwait push xor sub or test or mov mov mov and pop adc xchg push push mov mov sbb add aas movsl pop insl fst (bad) (bad) (bad) iret into les push icebp mov inc dec outsl mov pop rorb or push out std mov xchg insb mov lods xchg pusha add lods mov inc push pop in cli inc add fisttpl jge out loopne inc (bad) mov in hlt into inc pop cmp xor popa mov sbb repz insl sahf loopne jnp les ss cwtl xchg jns movl bt cmp ret xor popa fldcw lahf in insb les mov dec outsl loope xlat fsub adcl mov xlat mov add clc push insl mov rcrl push insl lahf xor mov js daa and es js sbb outsb mov mov aad fcoml push popf mov pop add out lods movb mov sbb jp push rdpmc adc outsb les pop cld mov jne sbb sbb fnstcw pop or aad add popfw xchg in outsb lret push jae,pt push lcall fstl inc dec add mov fbld mov stos jmp in movsb jns aad push dec and pop sbb lods dec ret mov dec mov fdivrs pop jno pop (bad) adc xchg sbb cli pop adc or ja bound and loopne and sub dec fistpl xor repz jb pop ficom cvtpi2ps adc (bad) aas sarl and dec adc and lea daa (bad) xor ja xchg pusha inc into push or ljmp or arpl (bad) xchg jmp (bad) fcoml cmp pop sub imul sbb das pushf loopne cmpsb loop int3 push (bad) mov adc cld cmp jb (bad) outsl sbb jecxz pop or inc lods jg stc cmp clc pop cltd bound sub out arpl sub js pop lahf sbb out dec mov mov dec cmpl xchg ss int3 jmp scas (bad) out inc push cltd mov cwtl dec lahf push push inc dec jmp jecxz mov or add push fldenv jle rcl sbb (bad) in cmpsb sbb sub js clc push les ss icebp dec fdivl popf mov aaa dec sahf pop inc adc xchg lret mov decb xchg push (bad) arpl ret xor sbb jns lahf fisubr lock sub mov jae movsl idivl and mov xchg imul jecxz out push pop xor jle xchg jle push out dec and pushf adc push mov orb pop xchg dec sbb ret mov mov fldcw push dec leave dec jge imul mov mov enter shrb mov sbb add out inc sub jb (bad) out shrl jae adcl mov pusha inc sub adc es shr das mov in jp jo cmp dec out fisubrl dec (bad) mov sbb sub and test xchg lret add xor adc mov fnstsw sub (bad) rcrl mov and xchg (bad) push jnp lret (bad) fadds push test dec out mov (bad) xor cli push push insb bound cmp pop mov (bad) pop cltd mov (bad) add icebp inc (bad) and xchg ja xor and jl or pop xor cli push pop imul out jo jmp inc xchg push fmul add lock push and mov pop std inc (bad) mov (bad) clc inc aaa pop lods xchg sub sti (bad) mov cmp fisttp mov andl and (bad) xor fisttp mov xchg mov (bad) add jnp lods call gs xchg imul andl ljmp dec sub sub xchg clc cs popa rcr dec push sub dec pop or es pop rorl pop or jne mov dec xchg mov jle pop mov test icebp (bad) aam ret stos dec les push jl or xchg mov sahf btr outsb cmp xor cmpsb (bad) outsb push mov and enter mov aad fcomps cmp in fnstenv push stos jl pop pop jmp jnp jge sbb ficompl dec mov movsl insl (bad) enter lret in cmp notb insb cli mov jae cmp leave dec sub xchg repz xchg lret ljmp (bad) xchg lds imul sarb cltd lcall psubsb add fdivs fisubr adc cmp mov xchg in insb fisubr lret leave icebp (bad) sub data16 push cmpsl push dec clc mov js daa push in arpl outsb and and xchg fild add out mov push movsl jle inc sub leave adc out mov mov fstpl adc mov imul cld out fbld roll jle fldt mov (bad) cld sti xchg cld inc push es cmpsl imul push fnstenv arpl pop rorb lret xchg adc pop sbb mov push dec or test lods int3 push ret ja mov aas sub sub lock push popa test in mov mov popf inc lock or xchg inc rcll push push hlt fcmovnu xchg (bad) iret and pop xchg out lret adc int adc add (bad) movsb repnz es push js gs fprem1 mov pop dec and sub or push push mov loopne jmp add jns or lock insb xor mov push lea sub cli rcl pop adc xchg in (bad) iret push sub outsl jle and jb rcrl lea xchg pusha call add push lret cltd orl push in xchg insb cmpsb jmp fisub jl xor sahf in sub inc dec jmp int3 lods ss push in rclb jns out jo ss jbe sub xor push sarl xor fwait adc lret outsb aaa (bad) jle mov rorl or add sbb je fsubrl icebp push icebp jg (bad) icebp fwait stos cmpsb dec mov in ljmp xchg fdivrl lods or or sub xchg test pop mov pop pop (bad) pop das fmull aad mov in in dec mov mov pop ret stos fwait lcall or xchg mov test inc imul cmp pop fwait pushf mov fsts fwait popf xor mov scas dec stos mov mov pop xor insl cmp push push xor repz fwait leave int imul mov push xorl adcl sbb dec dec gs jb sub pop sub xchg adc mov pop xchg push and or fildll std adc add not movsb aas stos jbe enter icebp dec pop enter (bad) push test scas lcall and ror loop loop mov loopne sbb add loopne fnsave inc arpl mov inc dec xor sub in jl and mov and add dec das clc dec jnp repz in or sbb jbe idiv imul insl cmp jae cmp cmpsl rcr mov xor inc xchg pop addr16 mov fs and sbb push lcall cmp in add hlt ds adc and std leave fadds pop pop sbb jmp stc mov adc gs sarl fcmovnb sti hlt or lea aas jb pop mov mov jmp cmp call cld cmc call fdivl hlt cmpsb mov cwtl push mov sbb int3 mov mov lock pushf mov sbb sub fsubs sub es ret sub jge mov cmpsl inc add scas cli sub xor ja xchg xchg roll cli sub mov test aam mov adc insl lods pop xor xlat xor add das (bad) icebp push das ljmp loope push cmc add lret (bad) adc sahf cmp and (bad) xor cwtl outsl or xchg jb sbb dec adc add (bad) (bad) shl pop inc das movsb scas (bad) cmc jge (bad) out xchg inc dec addr16 cltd shr ss mov xor pop (bad) mov jmp fbstp add pop stc leave test xor movsb adcl js call jmp fidivl mov (bad) aas insl sti mov int push add adc mov int3 (bad) xor or rcr and add xchg dec stos leave jmp sbb inc mov cmpsl and cmpsb loope lahf xchg mov sbb cmc fwait loopne outsb adc test cli fist iret push pop pop mov lock pusha sahf hlt bound cld cs pop sbb and xchg pop je xor test sbb insb dec or jae jecxz shll mov bound jno iret in push xchg sahf (bad) cmp mov sbb addl testb ja pop jnp sub cwtl adc xchg sbb sub insl daa or push push push je push jb dec jb jbe stos adc mov fbstp push sarb in orb xchg inc inc ja gs pop mov xlat icebp jl inc je mov sub out xchg xchg inc mov jle sbb jns aaa lock movsl jg cli fbld ficoml sbb sbb adc sub (bad) jne fidiv ds mov xorl sub daa rcrl jnp fnsave mov and jns or sub mov cs popf fwait xor xchg push push xchg xor loope push sbb mov xchg jmp loop std jle sbb mov mov jbe inc sub (bad) mov cmpsb or cltd jecxz sub or daa adc dec inc mov pop repz mov loop jecxz jl xchg fmull (bad) dec lds push ret lahf ds xor adc sub mov clc dec and popf pop cs fndisi(8087 lock fisubl adc xlat mov inc xchg cmp push cmp and adc insb cld divl aaa xchg aas xlat mov sbb ret sbb rorl jge in cli int3 imul cli mov cltd fs mov mov inc mov push iret push insb pop mov push pop sub cltd imul cltd sub xchg pop in sbb or popa pop js sub and popa mov add and jg jmp into push inc cwtl arpl js sub arpl cs or cmp pop and out sbb (bad) dec push les enter sub sbb lcall lea push into dec (bad) in pop out fsubrl push out xchg cmpsb push jne fwait aaa lret int scas add imul or lcall scas (bad) je (bad) xchg push push xlat xor inc inc in push jno pop mov or push adc xchg movsb jp hlt cmp adc push aas push ror and leave xchg daa dec sahf cmp repnz xchg daa dec sahf cmp repnz decl add incl sub fistp add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push and jecxz icebp rcl in je dec dec xor sahf xor sbb fstpl aaa int xchg pushf sbb dec lahf idiv jge (bad) xlat out js jp add push sar push push jp xor stos dec add pop out jmp mov xchg test mov sbb xchg je cmp lea stos adc std adc test lret fmull and (bad) mov fmull repz les xor xchg cmp in (bad) mulb shrb mov int popf cmp clc sub int aam data16 cltd cmp jmp and aas cmc adc enter in cmc cmp pop inc jle iret push mov pop daa add add mov adc je mov mov jb adc adc lods pop jbe cmc ja pop fcomps ret stos iret in sbb push mov popf and mov ret lcall cmpsl push jno pop aas pop cmp sbb insl pop inc sar sub jge xchg ds arpl mov push pusha cli in sub stos icebp pop iret xchg mov iret sub dec call icebp jmp (bad) cli and lahf out sbb and cmpsb add mov repnz mov lret shll test add pop dec jle jnp mov mov push lea in mov (bad) mov xor popa xchg mov cmp push mov lea mov inc mov add dec daa xchg (bad) cmpsb repnz inc bound and in test movsl nop insl dec push gs sbb imul in xchg mov and fs mov cmp in out lock hlt mov out hlt jno pop scas push xor fldcw adc jecxz lods sbb and rorb jp cltd add pushf or and and xchg push les lods adc scas and movsl add not bound mov les (bad) adc outsb mov sub bound xchg jae cmpsb test mov jns fsubrl (bad) out (bad) xor dec mov or dec adcl iret lahf cmpsl and xor icebp pop jl es jge push pop xchg dec andl repz mov repnz lods into stos das (bad) fistp xchg addl or lret lods pop (bad) mov sub out mov stc jge idiv pusha add insb movsb inc mov mov ret lret addr16 or aas add jg add xchg mov jae notl mov sub mov dec xor pop test mov popa push insl mov sbb sbb mov call sub lahf nop adc xor fistpll es ds repnz insb sub mov mov and pop loopne push dec sbb xchg sub into inc xor jle movsl mov mov pusha sbb or xchg adc arpl lret es mov lods sub xor movsl dec outsl movsb xor xchg cmp outsl xor js test xchg jecxz jl shll sti hlt aas fidivl imul repnz popf adc jmp leave adc scas inc xor dec mov outsb lahf pop add cmpsl rcl and sub sbb out pushf cmp xor aaa cmp stos xchg fnstsw jmp jo test pusha in fnop jp or cwtl enter push push xchg sub int (bad) (bad) jp imul adc sbb xchg sbb or idiv clc or cli jnp shlb xor xor mov shrd xor aaa adc scas jl popa and mov sti rorb cs pop or mov or cmp push outsb mov lea mov std data16 dec lcall fadd sbb pusha or mov mov in jno pop jbe popf cltd in movsb int add and dec cmpsl fdivp das and dec xchg pop jo in jnp aaa fsts xchg sub stos out scas mov add inc leave jge jmp push lods or push and mov shlb inc inc mov daa fisubl movsl outsb lea mov (bad) test sti mov lods lea imul ret ss cmp adc push pusha in loope inc (bad) aas and cmc inc dec popf push sub mov lock dec adc stos cmp mov dec lcall push fld popa push call pusha je sub cmp aad add xlat or and inc sbb xor enter xchg and xacquire and sbb aaa jle ficom adc enter pop dec jae sbb stos lret sbb pop mov in push jno popa sub jge sub sti push mov iret inc inc dec mov daa inc add mov imul xor lock cmp xor mov ret (bad) (bad) fcomps mov xor popf push xchg scas ret insb dec roll adc js dec repz push cwtl loope lcall test pop xchg dec lea mov sbb sbbl cwtl pop (bad) push fidiv addr16 test jle dec sbb inc jmp jp or pusha fcompl adc jnp loopne frstor sbb sub adc movsl mov test lds mov call rclb data16 adc int ss sbb inc (bad) xor aas cmp mov xor mov imul test jmp jg cld xchg out pop cmp mov (bad) mov dec lahf add xchg movsb push mov jno out ds in mov fld popa inc lock push (bad) aad shll inc xor sbb lret xor (bad) pop cmpsl dec stos push aam sub adc fsubrs xchg imul mov sbb mov and mov cli ljmp sbb and repnz jne sbb sub int scas xchg ds xor out popa push sbb sub jl fcompp popa daa stc call aas pop out or fstpl pushf or (bad) cmp sub lcall cmp mov pusha ja cltd sub cmp fbstp fwait out cmc pop inc sbb mov xchg xchg and cmp mov push mov and repz lods mov addr16 scas xchg cltd aam loope sbb test jmp xchg xor fdivrs push dec jg arpl rcll sbb and sbb xor clc rorb jb mov and push sbb (bad) mov xchg cmp push cmp (bad) scas test (bad) push and ret push lahf lret shrb adc add movsl aad xlat in stos lods outsl mov (bad) mov sbb dec push sti mov mov xlat add shrl aad mov xchg gs lock push test xchg jo (bad) dec jno lea lods inc and lahf sbb aam rcrl mov inc sub data16 (bad) mov rorb std add push movsl mov lcall inc sbb cmp inc aad sbb jl jmp or fimull lahf movsb xchg ret stos data16 stos mov cmp xor pop mov jb mov dec sbb dec gs nop xor aaa leave pop jge adcl out adc jbe xor test notl jns insb lock dec insl dec iret (bad) fildll fst sub lret add insl ret movsb test stos xlat sub ret jle pushf adc daa and std dec pop pop push cs cmpl mov adc mov jp jp pop inc xor and mov loop mov pop loopne popa mov mov adc lahf jae,pn imul popf (bad) jbe inc int jo stos leave mov gs rorl out icebp cmp leave movsb cs imul inc or les jo mov js int3 mov cld sub sbb inc fisub rorb sub js add mov mov lods roll push out out cmc xor arpl sbb jb add int (bad) xor insb cli sub cld mov add pop fidivrl call scas push dec cld mov or or pushf mov shlb ficomp bound pop mov lock xchg jle cmpsb xor pop sub imul out shlb sbb lcall daa push lahf xor jmp enter adc xor xchg rcll jge out pop mov movsb add jle dec mov stc dec pushw xchg shll or sub push les inc scas test test fcomps leave fstps cmp gs fsqrt not xchg rcrl xor leave adc jmp das bound sub shll push jnp sub jmp in popa aas fs dec jb stos adc and sbb pop jae out insl std repz lods jle addr16 inc xor pop movsl push das jge iret pushf adc int pop mov call and adc rcrb add pop sub sti mov movsb repnz xchg insl xchg andl lcall es cmpsb mov (bad) adc sub loope test mov mov pop and jecxz pop mov das repz int push mov xchg leave outsb mov out dec xor ret pop xchg inc xchg and or clc pop xchg ds je push roll sub mov xchg cmp mov jno mov fisubr jecxz push xchg lahf mov ret add mov and jns jns bound push push push pop jge pop xchg push repz pusha daa inc adc ret aam fxch jge xchg outsb cmp aas jg xchg add cs je sarb pop (bad) sbb lods aaa cmp mov add lods fistpl dec test mov jb inc les and mov data16 pop int xor inc (bad) mov jbe (bad) notl gs idivl fcoms lahf lea fisttpll in fidiv xchg jmp test in lret outsb adc sbb aad cmpsb pop inc pop add fildll cli push sub mov sub (bad) jae outsb ljmp out stc out data16 mov fdivs mov frstor movsl adc gs pop aad pop jl jmp pop and std sbbb addr16 push popa arpl js rcr icebp in mov sbb push iret inc adc andl faddl aas jb sbb sbb imul leave nop (bad) push pop lock mov dec inc sbb movsl push sub push add cmc fildll inc mov cld cmp jne cmpsb mov mov push decl inc hlt xchg xor jno aaa stos gs push pop mov add test stc lods add mov mov add dec ds inc call pop lock stos into das (bad) fimull push ja jp xor ss out shll outsl cmp cs shll jns push sbb aam inc push jb out sbb add mov mov pop mov mov jmp stc test sbb jmpw out outsb stos (bad) mov or push (bad) lods outsl sub enter and mov daa push mov mov aaa es mov jb fs rcr mov xor loope push jg iret jb inc cmpsb into scas adc cmp cmp dec ret hlt sub jl jne das mov mov lods imul out mov aaa addr16 sti and (bad) add jle inc int insl loopne mov mov fdivs pop xor adc das outsl inc sarb cmp cld pop fdivrl ljmp stc icebp sbbl mov mov es xchg (bad) fcmovne pop loop lret fild xlat mov push test push fs mov sub rorb mov adc daa sub pusha xor lcall int3 xchg and pop orl dec sbb push jg (bad) mov push xor cmpsl aam add cmpsb scas popf out cmc push scas sbb or add orb enter in cmp xchg out pand mov addr16 in push jae push cmc xchg mov mov (bad) lret mov cwtl cld push ret jbe and inc fwait inc (bad) loope or and sahf repz mov xor cmpb or fst cmp mov mov cmp push jl lahf test lock cmp enter xchg dec pop aaa (bad) pop xchg push push std xorb test test push popf ja fidivr (bad) mov lret pop pop cmpsl dec ret mov insb pop xor mov sub cmp clc and push inc lea insl aad scas ret in jmp and lock sbb mov movsl jno sub pop cmp repz int sbb pop dec sti cmp cltd imul jg lahf adc xchg aad mov inc fisttpl jle dec pop daa lods in xchg inc fucomi fldt aaa pop (bad) xor aaa xlat fsts (bad) mov test xor push hlt xchg add lret popf mov cwtl (bad) cli mov add repz add pop test (bad) mov lods mov jp jmp inc ja push mov arpl cmc adc stos (bad) xor or outsl fdivrp pop jge pop cmp and mov clc and subb aam sbb sbb pusha xchg sar mov or and push xor lea fcompl mov sbb imul mov mov cltd adc psllq lods jo and outsl mov outsl lret hlt mov fwait and pop insb mov mov popf jecxz ret cmp ds fnstsw push das cli out sbb in xchg daa dec sahf cmp repnz xchg daa dec sahf cmp repnz insl jmp mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc add sub mov (bad) xchg test mov jb inc pop dec mov xor inc dec dec dec ja or jnp jecxz push jecxz add aad xor popf mov push lret jle and daa or dec popf jecxz fsts sub mov clc push out lds mov fnsave jmp loope clc or idivl and loop or into pop movsb subl loope sti sbb test mov mov dec repnz call cwtl xchg popa dec or jb fmull mov cmc sub or push ss ret enter jle hlt lahf push xchg roll push pop push add popf fisubr add pop cmp mov mov fdivrs (bad) ja fstpt nop xchg jge sub lcall mov ja fwait ja push insb or ret sti or inc in popa or cmc repz lahf xchg jp pop imul mov repz and sbb stos add jae pop ss ss mov (bad) pop movsl in adcl loope out imul pop out fwait inc test and mov nop adc cli jne adc inc cmc movsl adc jae test add and add addr16 mov out adc out push inc lret pushl adcl mov push aad sub popa mov cmpsl cmp cmpsl sbb popf notb popa adc cmp cmpsl adc ret (bad) cmc (bad) repnz imul into aam aad add push xchg leave jp aaa pop sbb xor gs jecxz inc jg or movsb adc gs pop push inc insb mov add mov insb sub sbb dec xchg xor movsb xchg push sahf cmp sub mov inc fs push lcall push lock das insl jno adcl jmp enter scas out sub mov jp outsb outsl fucom pusha jno or jnp pop ds cmp mov mov mov dec mov cwtl and mov scas inc mov fnstenv add lods movsl cld ret leave bound lret inc xor push xchg dec shll cli mov sbb dec (bad) je xchg test mov das int3 cmpsl pushl inc or lret jae imul (bad) xchg adcl or lock mull imul jbe inc cltd js aaa cmp sub jle pop scas cmp dec jo pop or ret lock adc mov cmp test testb pop xchg sbb clc sbb faddl dec int push sbb es push das ja test pop popf out inc inc lea mov stos adc mov and test outsb pop pop and loope cmp jge jle (bad) jbe push jmp test imulb add loop test add pop xchg call insl mov ds in (bad) mov jno lret test xlat dec enter lcall fildll sub push adc sbb mov out outsl stc xor or sub aad mov add aad arpl dec ss jmp cmp mov cwtl ja (bad) insb xor and xchg dec jge xchg addl loopne pop xor jno push mov sahf xor popa inc sub dec out jle jge and movsb and test and push cwtl es iret je arpl or jg mov lods push jnp mov pop xlat loop xchg jno pop inc mov dec mov fmuls loop inc lock mov addr16 pop aad mov inc cmpsl jb pop adc mov xchg xchg or cmpsb sarl inc cmp pop push mov repz jbe int stos adc leave pop dec test cmc dec add ret mov push inc sbb add repnz cmp and insl fs xchg lods jp xor adc and lret rolb loope dec adc mov dec fcomip push inc (bad) lods push clc es pop xchg adc stos loopne gs out scas (bad) fdivl lods lahf (bad) dec xlat mov loop cmp mov add das xor or jmp les cld pop dec pop lea jbe mov dec movb dec inc sub jb jmp pop mov push dec icebp (bad) mov imul (bad) pop ljmp adc bound cmp scas mov mov lds lcall cwtl dec rcrl mov out add mov dec pusha push pop call scas int fld (bad) pop push push mov mov addr16 gs mov cs daa push xchg and sbb or fstl sbbl es fs int3 cmc loope adc pop dec mov sub xchg mov cmc sbb (bad) into xor or rcll cmp xchg (bad) mov cmp enter sbb push icebp ffree mov dec aam les das cli ds dec cmp push xchg (bad) sub sbb cwtl cwtl jae inc jb cmpsl push (bad) fbld fcoms in decl push leave jl enter cmp sub iret jmp xchg cld adc mov mov adc addr16 inc enter mov (bad) (bad) push mov jbe dec sti jmp int outsb lcall out fimull fwait subb cld add mov lret lods inc sub push mov mov cmp movsl loopne cmp xchg call arpl cmp xchg call sub cmpsl xor pop sbb mov cmpl sbb xchg jne jg nop fsubrs mov push inc mov pop mov movsl pop cmp inc xchg fadd push sbb test mov xlat loope mov loope dec imul ficompl cli jae add cmc pop in lcall das xchg mov sub jecxz fmuls sbb je add pop add jecxz mov enter jo inc xchg clc sti lods in mov bswap lcall (bad) sbb xor test lret jp adc outsl dec mov sbb int xchg cmp ret mov mov mov sbb imul (bad) sub imul mov sti (bad) cltd mov mov ljmp aad (bad) mov sub (bad) scas xchg mov xchg xchg pop dec out mov and adc cmpsl scas sbb (bad) in dec mov push sub and imul inc sub mov add aaa inc std cmp sarl sbb pusha fldt fucomip cld push jp (bad) mov jecxz mov inc xor add pop sahf mov push out cmpsb add mov push out les fistpll rcl aad cmp dec xchg movsl enter push xor sub ret fsts mov inc cmp inc mov mov add int mov sbb sub cmp xchg or inc xchg mov add jmp enter push xchg (bad) (bad) es pop fs pusha sub sbb arpl mov cmp fidivrl push adc nop xor xchg imul jmp arpl lahf xchg scas adcl rol dec cld sti les in mov jae dec subl bound cld out xchg fisubr aas (bad) insb push (bad) mov (bad) leave add mov ljmp push pop xorl test stos ret adc leave xchg pop ja jmp inc ljmp gs loopne scas cmp imul ret jp pop adc push fsts scas mov cmp dec repz dec mov fwait add cmp push mov jb imul test adc pusha aam or bound sbb mov lods scas lods mov test adc pop xor (bad) int pop xor out sub lahf cmp pop cmp and js test jne jmp pop cmc xchg call add (bad) and adc hlt xchg sub inc sbb add jmp mov enter stc mov sub std mov repnz cwtl cmpsb icebp mov add jb jno xchg js mov push in mov sti add mov data16 push mov mov imul ret jmp (bad) stc and cmp sbb sar xlat sub arpl push pop jbe sub pop insb pop roll popa scas xor fstpt push sub and push mov mov jbe in push dec and push movsl dec (bad) int repz incl scas dec clc pusha push out ja popa xchg xlat mov repnz mov dec or rep inc aas pop jae lahf sbb adc test mov das mov in sbb mov (bad) pop cmc ds lahf pop xor mov inc jge or shrb into insl xchg inc jmp sarb cs cmp dec and pop mov mov push push std sub mov mov mov jg mov icebp daa icebp mov fdivl pop push sar or and int int stos mov sbbb xchg and dec cmp sub loop pop jno mov jl popf and sbb sbb cmp repz push push inc movsl xlat mov sti in fisubl daa out xor adc add sahf pop in outsl in jno insb arpl xor mov push mov int3 inc push (bad) repz sub rcll and push ljmp clc add adc or popa movsl cmp push jl sub pop ljmp jno aad sub pushf push inc addr16 movsb inc dec or sbb add add or cmpsb insl (bad) mov mov xchg mov push add ds ljmp pop pop (bad) adc clc and lcall sbb stc in dec jmp inc (bad) sbb ret dec pushf dec mov cmp xlat cmc (bad) sbb adc pop xchg rcrl ret sbb and xor lret mov repz xchg cs mov fdivl mov lea mov jle xor sbb inc inc (bad) mov push (bad) cmp loop fcoms aad adc sbb outsl test xor push movsb inc jge push xor test es (bad) je pop xlat insl dec pusha or adc add mov sbb pop adcl scas in and adc jmp das push clc sbb stc (bad) mov (bad) mov inc cmp xor xor addr16 push lea mov divl push mov mov orb cltd cwtl test pop scas sbb outsl sub ret arpl mov mov scas into into loop mov leave adc mov ficom pop and dec std mov mov dec pop call mov int3 mov mov pop cmp je and mov aas sbb jp mov (bad) jp clc pop xor fnop out nop in dec push stos test cwtl mov pop test stos popa sub cmp sahf lock mov sbb in push push ret jno js loope jl push test shrb fadds or ds xchg aas outsl fisttp jo jp lcall pop push movsl xor gs loope stos adc std test decb mov ror scas leave stos inc pop jno loope xchg add xchg jecxz rorl (bad) cwtl push js pop roll hlt (bad) fs je adc dec push loop cmp (bad) icebp jnp aaa push cmpsb jb xchg inc repz cmpsb xchg pop mov push jns stos imul jl (bad) je xchg lret pushf push loope or (bad) imul mov cld in mov mov push aad loopne,pn imul jmp in iret scas and jl fcoml push jnp data16 sbb and mov popf jo dec (bad) push lods call shrb pop (bad) sbb dec push jnp cmp or cmp adc repz inc sarb js pop in fidivl mov fnstsw xor fcompl popa mov xor mov repz repz mov add mov or xadd mov mov add mov (bad) cmp icebp sbb popf ds xor jp cwtl in xchg mov xchg fwait mov adc sub jge ret fisubrl call adc clc mov cltd dec xor jp inc (bad) xchg stos push pop xchg orl test cmp lods stos lods int3 adc daa (bad) aaa into adc cltd mov test cmp xor cwtl adc outsl loopne shr xchg mov jl mov movsb jl adc pop lock adc jbe int hlt test mov sub xchg loopne clc sbb inc divl push fcmovnu sbb test out stos cwtl loopne loop mov dec popf adc pop cwtl pop sub dec dec scas sub mov lea mov mov negl mov push xchg mov std push and push and repnz xor out push movhps and sub imul fildll jle xchg cmp sarl push jle fisttpl jno mov ss int jno dec cwtl (bad) ljmp sbb divb lret daa push xchg add jle out mov (bad) out (bad) cmc or dec jmp test out ret shr mov push inc loope stc into ds outsl (bad) repz dec dec jecxz int3 jbe sar lds pop jmp leave and mov out and enter sbb sub outsl test inc mov jae pop aad and pop pop push xchg mov fnstsw xchg pop call int3 xor out cmp ja int3 dec data16 out test test mov popa iret (bad) and rcrl push and and and ds divb mov and push push jl stc mov shll jp call push cmp add aas or mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push aas sbb rolb ror jmp cmp mov cwtl arpl push mov mov (bad) jle xlat repz add sub shrl add sbb cwtl (bad) sbb adc adc popf dec or sub cmp jne iret out and (bad) sbb mov push flds mov sahf inc or mov mov adc and movsb push (bad) (bad) lock jg,pt lods push jno in les pop mov push inc test sub repnz sahf push popf frstor cmp movsl mov mov xor lahf pop test sbb mov jl rcrb repnz call inc shrl nop sub mov sbb mov mov out in cld inc (bad) push cmp push ss mov push daa sbb js ds std test add pop cli fst mov ficom call stos jno into imul xchg cltd mov cmp (bad) out lret enter pop and (bad) xor int aaa sbb cmp test push jmp std and enter inc push sbb mov and cld sti ds inc in rcrl ljmp int3 push dec pushf or bound out mov push fimul jg add push dec call xor add (bad) insl cmp stos scas mov dec sbb inc stos fwait mov mov call inc cli icebp inc mov ror jb les popa pop dec xchg lahf cmc sub int3 jns mov cmp pop adc xchg push stos push mov nop lea cwtl xchg cmp jo sarb movzwl jecxz xor insl mov cmp icebp sahf mov repnz cli (bad) mov add cltd sbb lret jl sub ret cmp mov loop cli push cmp mov jmp mov leave insb xor enter loopne sti mov stc xchg std mov pop cmp inc test iret stos popf clc into mov mov fmull sbbl adc cmp xlat das aam cmp cmp in cmp push sbb (bad) aad out in (bad) rcl fs xchg (bad) jmp test decl (bad) inc (bad) fldt movswl jmp not mov fisttpl sti fldz gs xor (bad) (bad) (bad) lret (bad) fldt sbb mov cmp xchg imul insl jbe lea bound xor outsb addr16 sub insb push dec test mov fcomps xor jo call push mov enter xor je call movsl xchg inc ficomp add mov xor pop inc movsl mov xchg loop arpl aaa loop je fdiv (bad) dec mov aaa push (bad) sub (bad) pop fs popf sbb movb add jge lahf mov push in and and xor and mov (bad) xchg push jns hlt adcl push add daa mov ljmp mov jl mov inc push fsubr mov cltd (bad) jno mov aad sub add cmp inc int insb mov daa inc jbe (bad) sub and daa mov aaa cmc mov leave add push mov shlb ret xchg and xlat popa pusha sbb adc enter out mov hlt inc inc xchg cltd outsb into sub xchg outsl add jno aam dec pop mov loop popf insl ljmp pusha out rcrb and fistl mov sbb les lret adc ret jp xchg sbb loopne jmp push inc mulb stos stos aam xchg inc rcrb cmp cmpsb decb nop push cld (bad) mov push fwait les mov sbb inc dec sub icebp cmp jge inc push scas adc (bad) ja xchg jns popa movsl (bad) cwtl push sub cmp fs jo xchg stos loopne fs xor mov xor fs sbb adc rorl inc fiaddl vmovhps ficom adc push push mov icebp leave or mov fcompl cmp faddl add sbb push or dec cmp data16 mov push sub cmp scas or add insl push inc mov test sub and movsl lock ds mov sbb ret xor pop das cmpsb push dec mov add dec (bad) cmpsb sub leave test xor xchg (bad) hlt dec loopne mov sub sub mov add push push int xchg jle or stos mov xor stos adc lahf mov mov inc fisttp cltd add adc dec fnstsw push push add leave mov aad neg fdivl insl dec test pop dec fdivl jmp cmp out cmp test ljmp aad xchg push jp adc sti xor mov enter push call fistpl lcall pop cld lods bound jg pusha or stc insl sub xor iret fsubr call mov decl arpl daa notl cmp movsl in mov jmp das or fidivr adc jae push (bad) ret mov in rolb jae imul cld subb mov jnp loop imul (bad) out mov outsb out sbb add std mov cmpsl imul fcomi and pop out mov sub or xor mov scas inc pop push int cmp mov mov or rcrb popf sarl xchg pop fldl (bad) add inc xor inc (bad) rcll dec lock mov inc in sbb pop outsb mov test cmpsl insl push xor popf mov pop int3 and xor jo (bad) into loope dec shlb push int3 add cmpsb mov jle mov jl lcall add addr16 inc mov and push adc mov jl adc mov inc out cmp (bad) mov pop dec push lds es sub jbe insl jg push push xorb jle aaa adcl stos leave xor popf pop loopne sub lahf or mov in cmpsl or pusha sarb insl insl xor pop push cmp shl mov fisttp add mov pop iret int dec mov mov xor stc iret jle test stos out cwtl and leave xchg inc cmc cmp cld or ret loop and insb cmp rorb imul int3 shr fidivl mov cltd ljmp dec xchg mov shlb sub in jbe jo lret into ss mov ljmp and pop fwait add pop adc adc or ror xor leave addr16 ljmp and insb lret sahf and fidivrl or mov movb sub or pusha sbb sti push fwait imul push cmpsl fnstenv mov pushf push mulb pop push shr xchg addr16 (bad) (bad) mov das jbe lcall push (bad) xor adc into push adc and outsl mov and cmc pushf mov xor lock xor mov out mov outsl es jge xor add cltd rolb jp add movntps loopne sti jle push xchg mov mov push adc daa sub idivb ljmp xor (bad) cmpsl push hlt (bad) sub out push sahf arpl jp cmp cmc lcall sahf mov addr16 pusha sbb adc (bad) pop outsl fs pop mov sub pop mov inc loop (bad) std mov xchg xchg push out sbbl push sbb in cmp mov fdivrp xchg mov pushf xchg or mov aam dec xchg jg nop mov cmp or push cmp pop dec or das inc mov test push movsb xchg daa ja cmc repz pop cli inc es (bad) aaa mov xor sbb mov fldt addr16 dec jns adc rcll lret jnp jns pushf xor xor push push leave notl jae jge and test inc jne xchg cld lds jae inc sub aad lret mov lret mov push fsubl jl clc (bad) cld fnop sti scas (bad) rep sbb xchg cld adc pop or cmp pop pop daa mov loopne cltd pop stc lds divl imul sub jp mov inc push gs jnp jge or cmpsb addl mov repz dec inc mov mov sbb push xor jg pop sbb cmp and or bound jmp jno inc fdivrp popa outsl cmp (bad) mov into imul pop sub mov pop mov stc decb cld arpl xor cwtl mov in jmp test mov adc fmul xchg addr16 cli mov xchg pop push shl mov push lea scas scas and dec pop jl addr16 dec movl push nop outsl (bad) rcrl dec enter shrl fnop lds xor pusha adc sub in fstpt popf inc les out and jns cmp addr16 rolb outsl xlat clc jnp fist scas add push inc jle stc mov xlat iret jg jg dec aad xchg loopne add (bad) push xchg adc sub mov fadds dec sbb insb mov (bad) jb movl inc add (bad) fiaddl jb,pt jge cld cltd jno xchg rcll mov xor add popa and cltd pop cmp clc stos scas aas push pop mov and xor bound fisttpl jae stc push int3 stc pusha adc dec xchg mov xchg ret jle xor xlat out fadds pop pop ds inc bound mov stc aam int3 adc mov loop dec sub pop xor sub push popa push xchg int3 test mov ds sub add push fwait push das mov mov dec mov bound dec lret jp movsb movsl sub jnp cmpsb loope aas xchg and cmpsb jbe mov inc call call sbb mov and xchg fs addr16 pop movsl xchg in sub push mov xorl jmp dec inc scas lds mov push push ret and sbb add pop lret in adc fcoml xlat arpl pop mov xor mov jne cmc jne mov sbb xchg mov fisubl mov scas xor add mov push and sbb mov ret jbe into push (bad) mov lret inc aam inc (bad) aad xchg pushf sbb test fidivrl aas cs and pusha addr16 fnop inc inc cwtl loop jge cmpsl (bad) out mov test leave xchg aas jp jg rcll into lods mov ficompl jge xchg loop add fwait xor out jp sub sub inc push jmp mov xor push lods (bad) cmp sub jns mov div dec fwait sbb xor xchg mov popa jg jns dec (bad) std xchg testb movsl arpl cs mov push pushf xchg fdivr xchg popf push pop daa cmpsl inc xchg les lret loopne cmpsb push shl pop dec mov nop lret pop in clc cmpl or popf (bad) es push jnp jecxz lds cmp mov mov xchg pop test xchg xor jle sbb imul clc divb sub (bad) xorl test pop add mov out pop test push push cli test outsl aam xor xor fisub cli dec push inc fs in ret and (bad) (bad) lods lcall insb lods add aas and stos ret inc mov mov push xchg jbe fimul pushf ud1 sbb aas jge lock push xor fwait sahf mul mov push mov lds test xor cltd push inc or (bad) je aad push jle lahf sbb and iret es pop mov mov (bad) (bad) in rclb adc ds jbe and je cs std cmp cmp jae and mov insl and fldenv jmp (bad) icebp dec hlt (bad) xor movsb mov push mov add cwtl push pop test lods push imul scas mov lcall mov pusha and addr16 push shr adc jle sub fcoms xchg adc mov pop xor mov sbb stos mov xchg jle push cmp fs dec mov fwait push ss add scas xchg or inc or lock push std cmp repz pop das adc test pop mov (bad) jae and out fiadd shrl dec jnp ja dec push (bad) mov arpl or iret stos jne in pop cmp pusha mov push ljmp mov mov (bad) mov mov fimull pop arpl mov into or mov push inc repnz adc (bad) jbe test lods pop add aas and mov add mov divl sub mov and pop pushf pop fbld clc cmp mov mov stc cmp jne jbe xchg hlt int3 and push inc pusha in lret (bad) mov adc fnop cltd cmp adc mov xchg pushl iret imul sahf pop inc arpl into lahf sbb inc inc and xchg jge jb aaa fcmovu and jns and xchg inc cmp dec cmpsb mov pop rcl das fbstp jno shrl divl daa cs call mov jb cmp out fcmovu andb scas push add leave jp pop rcl ficom xchg movl imul (bad) push test jne cmp popa mov addb pop std dec rorb in repnz push ret aam imul xchg pusha and leave pop xor icebp test fnstcw adc hlt push xor jbe mov or push xchg push mov push mov je jo and cmp shl or or jne pop lret aam addr16 mov les mov aas jle adc add fdivr mov jp ljmp jp ljmp add add daa idivl (bad) popf out add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb ret (bad) icebp (bad) outsb push dec fwait ss cmp cmpsl fwait rcrl (bad) jmp negl cmpsb xchg js idiv aaa push fistpll add cmp lcall mov test out jo gs sbb ret mull or sub push dec rorl mov rcl sbb outsl pop jnp loop xlat aam cmp lds (bad) pop xchg pusha xor cmp mov aad mov insb lcall out jp in into mov popa pop addr16 fmull sbb adc push clc lahf mov arpl sub mov mov stc es imul mov lock pushf ljmp mov jbe cs adc loopne addb mov bound push repnz jns nop stc jbe jno inc jno push mov and adc and lret push scas push xchg mov jmp mov inc jl (bad) (bad) iret sbb repnz adc fnsave int clc inc inc mov test lods imulb pop (bad) ret jl pop jnp jg imul xor sub dec and cmp push xor push daa lret out jns or das push xchg test (bad) mov mov insl cli mov lods mov lds sbb or and popa sub dec fisubl jns push call (bad) (bad) cmp icebp cld push es outsb aaa insl sarb sahf sub aaa data16 vpmaxub xorb pop cmp mov je mov lret xchg inc sub pop add inc xlat add mov in sbb addr16 jno or xlat pop adc push gs rcrl lcall jl xchg scas stos inc cs leave or cmp mov xor jmp xor pop adc pushf fstpt pop jmp shrb fistpll cmp (bad) jae mov mov in mov pop mov xor rcr fsub movnti push lock mov lea mov sub adc mov mov js mov jl push mov inc mov dec mov loop les inc xchg gs or xchg jge pop (bad) movsl sti loopne pop iret xchg xor roll lods call imul inc push add inc xchg jg scas cmp daa idivb test sarl add xor pop push lods leave and and cmp imul call int3 sub adc cmpsl jg lds xor add pcmpeqw ror dec sbb popf shr (bad) push bound xor popa icebp stos clc hlt imul icebp (bad) push and int3 cld mov jmp jl ret add push xlat xor push stos das cmp stos mov xchg aaa cmpsb bound and call aaa pop jns fisttpl (bad) cmpb popf mov or lret adc mov xor fdivrp (bad) cld fiadd sub jmp fs jns repnz inc lods jmp push daa fcoms insb xor mov xor fwait pop or mov mov mov lds mov cmp popa insl mov mov xlat xchg (bad) aaa dec push lds jne add les xor aad call movsb lods sub jnp pusha in sub jmp jp and xchg int3 xchg lock cmp cld insb in pushf imul out or stos sub mov lret test jns outsl xor dec loopne stos iret pop pop movl (bad) test sbb push out out sbb arpl dec call jns mov push and pop jecxz lcall xor scas loopne loop negl shrl cli (bad) (bad) jo setbe adc and inc dec push das icebp (bad) mov std fs adc js or fisubrl sarb dec mov pop dec out push add insb pxor mov mov shlb mov lea (bad) jge sarb mov popa pop out mov inc mov repz in cmpsb in test nop pop mov cmp pop ljmp mov push mov loope pop dec and sub pop xchg pop (bad) test mov aad fwait ja lahf insl adc mov inc (bad) and pusha sub pop fs int3 cli nop xchg jmp std dec ja push add dec ret xchg mov out lds insb adcl pusha mov fnsave fbld bound std (bad) scas cwtl pop sbb in mov hlt cs mov nop outsl adc cmp mov cld ja in stos mov leave in cld lea jae cmp inc dec push and xor inc incl or pop in fwait adc xchg dec leave data16 movsb inc xchg jge mov lcall push and jae jle (bad) fdivrs bound jp push push test and push jno (bad) aaa push push xlat mov into (bad) or clc and (bad) jnp sbb lcall xor hlt (bad) pop sbb (bad) mull insb adc add inc ficomp inc cli (bad) movsl decl mov test mov test push push call xor or adc ret repz mov sar sbb shrl fs push push pop dec cbtw lahf fwait nop (bad) jmp inc xorl mov into push cmpsb push push je add je (bad) (bad) pop imul add int data16 in pop push xor xor sbb test test push (bad) test imul lods pusha xchg xchg sarb and jg lahf int3 add mov stos das scas (bad) in xchg jecxz xchg popf push insl or sub add xchg (bad) xchg enter pop pop add xlat test push aam xchg (bad) loopne and or and insb and test or aam jg jbe test aad cmpb ljmp push pop xchg adc adc push and iret les pushl (bad) enter cwtl push inc pop (bad) jmp outsb push (bad) and outsl (bad) out hlt fisttpll add or movsb or dec iret pop pusha cmpps or and add ror push loope clc sub loopne fwait arpl int and fisttp addr16 mov jecxz mov adc pop mov add mov cmp mov jno jno das or mov out cmp jae aas fcomip and insb mov push xor mov or push (bad) dec fisttp outsb mov or ja (bad) sub push fmuls sub fldcw adc call int add (bad) ror push push ja dec push in pop cmpb mov pop add dec dec ss (bad) fs arpl jnp imul and xchg cld fadds xlat nop pop xor cmc out cmpsl mov fwait xchg and fnstsw jmp data16 cmc pop mov pop push inc xor jnp aad (bad) int inc jo (bad) pop xchg push loope push jl xchg fwait xor fadds pop dec ss in or movsl scas movsb mov jle or test aam mov lea std imulb or xor xchg sbb push mov mov push mov es dec jb pop dec out lret int xchg sub std mov jl lea push stos add fcoms xchg push or mov (bad) stos jns sbb dec pop xor hlt inc ss sbb sub jmp push mov cmp scas or pop xchg mov xchg xchg lahf cltd sub (bad) fldl nop es frstor jno push mov shll out dec insb add aaa add mov cmpsb lcall cmpxchg jg jp iret lret or xor add ja dec lea nop int3 inc fs dec push jae pushf adc cli fdivrl mov inc mov outsb (bad) dec lds jle lcall sbb push cltd popa popa push pop out cmpsb je push test daa pop jmp icebp sub out pop inc subb sbb cmp ljmp add std sbb add sbb loop lretw pop mov cmp mov pop mov js fimull adc (bad) xchg xchg jge cmpsb jns lret (bad) sbb cli ss and mov movsb or cli fcomps shlb icebp inc dec sbb (bad) aaa clc push data16 fbld xchg mov ss cltd add and (bad) movsl (bad) adc xlat int3 push and dec push pop xor enter dec lret adc scas dec shr int3 mov add adc rorb cmpsl lea out fnstcw mov push jle mov jle jno inc dec add push and shrb mov outsb mov roll hlt orb add mov gs pop mov sbb adc xchg push gs outsb sbb (bad) jg mov pop sbbb add pusha cltd add insb inc sbb (bad) mov lret bound ljmp test jle and aam shrl (bad) das aas jg xchg xchg iret mov (bad) or fs aaa pop push es xchg repz mov mov inc xchg and xchg aad cmp jne (bad) xor dec push mov (bad) bound push fs shlb sbb movsl mov fidivr pop sbb stos adc (bad) xchg out loopne xchg xchg repz movsb push ja sbb pop adc lock dec (bad) lods imul (bad) lahf ret std pop lods outsl js cld icebp scas xor push xor adc mov popf xor dec jecxz pop pop mov jle bound test movsb dec adc mov add dec mov and jp test stos test push mov mov test in sub mov das daa cli sub ret inc ret test dec lahf enter pop inc (bad) in adc scas xor rorl movsl inc mov adc mov scas cmp or ss sbb jnp repz divb insb fnstsw jecxz lret xchg imul mov mov bound jp ljmp push stos outsl xor (bad) and insl push mov inc xor or pusha inc dec mov cmp sub je pop insl jl pop cltd pop mov in fisttpl push movsl xchg xchg add mov mov adc cmpb in loopne push mov cmp frstor notb bound outsb bound and cmp ds sbb jns mov cmp push and mov cmc jp inc add adc loope jne nop imul cmp push and push jnp sub stc std aas inc (bad) mov or mov sbb imul pop pop mov adc mov mov and adc push ret or roll addr16 jbe (bad) dec cmp adc out gs xor cmpsb cmpl insb insb push negb adc hlt and or xlat xor inc adc sbb xor add dec adcl sub and imul sbb loop out pop movsb jo mov out shlb adc push sbb out xor pusha sahf adc arpl inc repnz outsl int3 insl mov xor push sbb sbb mov dec test sarb mov jno clc test sbb fstps cmp scas and (bad) nop (bad) pop mov pop xor mov loopne ret adc fwait aad jmp outsl popa xchg lret adc in cld (bad) xor xor jae stos adc lahf mov mov push popf xchg popa incl mov cmp insb adc mov inc and and cmp mov jecxz repnz out dec lret lahf push mov add test cltd out ds jno cmp into dec repnz cmc pusha jle loopne pushl clc inc sbbl dec out sahf adc pop repz fchs pop (bad) jnp push sbb fstpt inc dec inc pop cmc inc mov aas xchg das jne,pt rcrb lahf pushf fcoml cli fldt insb shlb ds js xchg mov cmp push add pushf addr16 add push xchg fdivr xchg mov sub mov out fs fisttpll je dec or icebp repz cmc into jmp jo or mov or and call scas loopne mov xor mov fistp aad mov lea sub divb insb jb test aad xchg out sbb fwait xchg dec mov mov mov mov out lods movsb inc xchg or xor sti and divb sbb in inc pop xchg cmpsl and sub jp cmc jg fucompp lcall fcmovbe add and adc pusha mov icebp ja aam ljmp pop xor sub mov aam imul adc das loop dec les leave les sub sub mov (bad) out pop nop xor mov xchg and xchg roll repz adc mov mov frstor lret stos (bad) call inc lods xchg addl mov outsb out imul lcall fldcw xor jo xlat repz xchg sbb lcall sub adc lret mov ljmp test or aam cmp insl adc jno lcall (bad) sub push pusha (bad) lods mov xchg mov add pop ja imul jle ret sbbl push jecxz push push xchg cmpsl mov xchg lret mov pop cmp ffree mov lret test (bad) mov popf enter mov push cmp mov ret dec jns inc xor jl gs inc sti xchg mov inc push in fsubp out shlb test subl mov mov cmp push pushf daa (bad) out fmuls arpl ret loope outsb push push mov scas lods movsb add repnz or ja cmp mov jp call push cmp cld pop mov jmp fwait sbb add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb rcr cmpsb dec fwait out cmp lcall jnp mov arpl popa cwtl cmp out jge (bad) jmp sbb add or pop mov push in roll aaa test aaa test in jp jmp mov lods mov xor lahf or fs dec push sbb mov xchg fstl test push sbb bound adc mov mov adc push xchg or std shrl push pop mov ds pop test int adc add push enter sbb imul add sbb iret je fwait cltd stc and (bad) push or push lret movsb cli jle dec add cs jmp arpl les jb xor dec pop ds xchg jae jp ja xlat inc leave les loope jl outsl sub adc mov cmp jns lahf les pop js mov nop push jbe dec lods cmp mov movsl imul pop rcrl sub mov pop sub js in or loope out rorl roll push scas inc mov cmpsb hlt xchg add movsb inc inc shlb jecxz jno in fistpl jmp xlat outsl adc jo pop xchg stos loopne out cld xchg pop rorl inc loop and adc data16 dec aas mov call adc ficoml cmp mov push cmpsl insb jecxz mov jb push mov aaa xchg movsl arpl loope ljmp xor insl jb out loope rorl cli int mov cmp mov sub mov xchg cmpsl cmp inc dec out int3 cmc call enter icebp decl xor inc (bad) mov loop or adc cmpsb xor pop push rcl loopne xchg cmp mov aam in sub jns pop cmc scas dec and sahf fldenv ja sub gs mov ss push scas inc (bad) adc addl xchg loop cli inc fsubl dec mov int3 rep dec ficompl test mov stc notl test adc jne sbbb adc js mov sbb loopne add push in mov orl out aam and pop aam dec aam mov xchg push sbb (bad) jnp and imulb push push insb leave lahf cmp push sub sub inc cmp insl movsb rcrb jecxz loope mov xchg aam sbb jae cltd sbb adc cmc inc xchg sbb jmp sub rol or into add sub shll inc inc inc or addb imul (bad) lret mov in aam std dec hlt aaa mov and mov mov iret repz scas cmp or dec fmul mov cmp dec loope push lods jl mov jae xor lret int3 inc push push roll es pop popa (bad) ficompl inc adc test popa add jge aas lods lret mov and clc cmp cs aas add mov jbe adc bound mov (bad) sbb lahf shll sbb outsl int3 cli sbb data16 test popf ljmp into and fsubrp push dec push or jbe lret sbb cld xchg out cmc mov mov xchg sub cmpsb pop mov mov or mov fildll xlat repz adc popf mov movsb push shll xor jg lods test stos xor mov mov pop xchg xchg insb push sub cmp adc pop fcmovb jno das push fs adc pop ss push add fnstcw sub xchg dec xchg rolb push or icebp ljmp push dec jl inc (bad) in adc (bad) sub xchg fiadd insb hlt xchg jl mov pop add dec cs mov mov sub xor (bad) icebp cli das in mov push popf pop mov fsubl fcoms je cmc je xchg lods (bad) ret and sbb xchg test add inc arpl push sahf mov movsl sbb ljmp sahf out into or sub loope (bad) movsl das insl jb jnp xchg std mov fucomi es (bad) leave mov jae rcll mov jnp cmpsl and push test leave push sbb out sar dec jno adc aam cld sbbb pop es scas bound pop push inc std test mov data16 push sbb rcl clc xor jge iret mov jb sub push int3 insl inc test fisubrl adc in je push jmp push jne icebp push sbb cmp mov jb xor test sub mov fstpl pop push cmp sub cmp dec or cmc insl js mov add pushl cmc xor push fnstenv daa cmpsl or push inc mov xor std or test (bad) adc repnz sbb mov lret push jg popl decl out clc call ja sub aam push jbe (bad) xchg inc test mov dec dec notb decb pop js mov dec cmp (bad) mov inc push mov push xlat lock cs adc ds pop xchg test idivl fnstcw mov push pop pop lds out sbb stos (bad) mov js xchg xor pop inc jle sbb cwtl enter dec cmpl std mov push icebp jl sarb sub inc mulb push dec add int divl roll ficoml xchg insb inc aaa push test or rcrl dec adc jmp rcrl mov loopne push dec int3 cmp cmc and imul call xor push insb rolb xchg imulb and iret rol outsl xchg push xchg push sbb sarl (bad) sarl outsl stc int outsl fabs add xchg ljmp testl cwtl and xor fs dec fs jmp out jns xlat aaa xor jg mov jp repz mov test inc cwtl add push out call inc push in bound jge sub push (bad) negl mov rolb cmc adc lret push mov or loopne mov add test clc push add jmp sbb jmp xchg lcall pop bound jae xor (bad) xchg (bad) out test xor ja sub mov adc aad outsb mov jno imul in lahf pop cmpsl es mov (bad) (bad) or (bad) pop das aaa mov and fistl (bad) and sbb sub pop out jns movsl (bad) jecxz test dec es lds adc (bad) hlt add xlat mov and sbb test mov ss xor cmp jge sub mov les xor xor jae sub fildl test leave mov shll inc sahf (bad) (bad) mov inc xor loopne xor cltd xor pushf or dec shl loopne test xchg jg xchg mov adc and cmp cmp mulb das xchg and hlt insl test or sub shll lcall popf adc test idiv add sbbl dec sub xlat sbb add incw lret pushf or cmpsb adc mov sub daa cmp dec jbe inc frndint push dec out xor scas add or push mov or das inc fidivr loop xor loop xor faddp std xor sub pop orl mov mov xchg cmp mov test or xor (bad) data16 jo lret xchg test sub pop mov fsave hlt (bad) xchg pop mov xlat (bad) fs xchg xor std scas sbb or dec jns jbe pop loopne xchg xchg imul std cmc mov mov mov adc cmc in lea fmuls push sub and std test add in xchg (bad) sahf mov xchg push fnop clc ljmp in pop (bad) mov nop push loop sbb loope pop sbb lods sub xchg mov mov adc hlt psraw mov iret mov insl lea or mov push lods ret in repnz xchg sbb jns cmpsb fistpll leave ds repnz aad mov sbb ret pop xchg cmp inc ljmp std ret bound loopne add push in mov dec push pop stc lea mov aam (bad) repnz xchg aas dec (bad) negl sub sbb cs xor cmpsb mov shrl xor push cs clc pop or xlat jle mov pushl lods xor gs test push out pop (bad) loop sahf push pop xchg popa in cs test lds jb pop dec and or fstpl or sahf mov mov out out (bad) out or hlt xor out dec sar push push into les push repnz insl daa xor inc in fwait addr16 imul outsb sub xor (bad) mov push in cmc mov xor movss dec iret xchg ret (bad) pop in imul and lea cmp add or jnp lods or jge mov test add push xchg xchg inc dec lret pop (bad) sar mov sarb mov test sbb out xor pop lcall sbb jns and cwtl cltd (bad) cmp and dec dec movsb inc in int3 sbb push xchg mov xchg gs cmp clc lret xor lcall mov cmpsb mov pop push sahf and jo fdivrs cmp xchg js addl push jb jbe int3 hlt adc sub (bad) hlt cmpsb cmc (bad) call decl jg mul stos stos and mov lret enter and pop aas pop ror dec mov dec addl mov add and mov (bad) push push gs cmp dec repnz and adc push cmpl out sub lock push stc sub mov lock sub mov lods push lret rolw (bad) dec and imulb lcall out push and sbb dec dec pop sub imul leave or xor lret jno push iret movsl sbb xor inc add jnp lods adc aaa test push xor push loop aad mov mov pushf (bad) (bad) out xchg aam daa cmp outsb sbb dec sub inc fildl adc pop cld pop ror repnz bound and cmp pop xchg jno xchg lods dec (bad) jo lret aaa jo sub dec ret outsl or mov mov loopne jg dec and into cld mov adc (bad) aad sub test mov jmp fwait sub pushf sbb cmpsl add xchg mov adc jg mov push dec xor std (bad) or (bad) out shlb add insb (bad) out cmpsb inc in xor and cmp out jp sub fistl rcl push movzwl mov inc sub jne into cmp cld lret ds fldcw call gs std jp mov adc lds xor insl add mov sbb hlt (bad) testb xchg and push mov fnstcw jmp fadds xchg sub mov popa lock aam and pop aad roll lcall (bad) repz add xchg and jge insb jno pop cmc pusha push lret xor cmp out dec adcl cmp out fsubrl hlt lods jno pop repz clc popa rclb inc mov push mov stc ja or push jl sub add xlat frstor mov pop call hlt dec mov in test outsb (bad) inc insl and jbe movsl push or inc cmc dec mov pop shrl fdivl sbb inc cmp daa shlb int mov cmp scas add imul inc push jge (bad) loope daa int arpl int3 and and jecxz push push cmpsl push pop repz sbb mov mov icebp sbb mov sbb mov lods icebp rep xchg dec xor add inc or mov push cltd cltd insl stos adc sti pop fsts sti jmp or fbstp mov push fisubr push fild test orl cli pop xor sbb mov (bad) divb mov (bad) cli in lods mov cmp (bad) sbb in js sahf mov sub andb push pop mov movl loop mov xchg ja cmpb pop lods xchg lcall jbe jp cmp stos adc push mov xorl insb cmpsl inc jge and push les xchg adc (bad) fdivrl (bad) adc push js test ret pop ss cmpsb subl jmp and push mov jge mov mov in cld in (bad) dec ljmp (bad) je cld loopne jo xchg xlat js mov jg add nop add insb repz jae push mulb pushf cmp pop cmp push pop clc cmpl lcall repnz aas jmp pop xor mov les jae es sbb sub jl sub or jg dec fdivl stc xchg (bad) cld xchg jge js ljmp lods fadds sbbl jg,pt clc jae xchg xorl and jl nop jnp mov jne ret jae inc inc xor mov jmp sub scas jnp addr16 push enter les out jmp aad outsl mov jle pop fucomp daa imull in adc int3 lcall mov pop xor add or pop cwtl (bad) (bad) jmp in cs (bad) or sub stos pop pop or imul pop addl push pushf inc jbe adc cmp in fcoms pop sub int3 js sahf into mov xor aam sub (bad) jge mov call jmp or subb shlb jb pop (bad) pop loope and pop lock sub push mov pop fcomi mov les (bad) nop push mov mov dec icebp insb mov loopne sti clc sbb inc addr16 pop stc xor xorl sbb or add pop or js loop mov das pop mov mov das pop mov clc pop sbb out xor fistl add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push aas sbb rolb xchg rcr fnsave jae sarl dec fwait scas jmp jp popa push ret leave loope dec (bad) ss lahf jbe aam jnp scas icebp jp movb nop lahf add xchg xor xorl xchg mov loopne stos inc ficom cmpsb scas jo or push aas test mov shrl and push pushl (bad) mov addr16 sbb or adc push cmpsb (bad) repz push movsb mov lea (bad) jmp enter (bad) or mov lods adc adc into daa pop and or daa sbb lret decl adc mov mov fcmovnu mov movntps xchg dec out adc push cmp cmp cmpsl cmp xor dec push fs xchg dec cwtl lcall push out rcrl push les loope mov (bad) out sbb jne adc jns shll adc push adc hlt xchg add ror push cli jb shlb xchg idivb scas pop mov gs jge inc xchg jg imul inc dec (bad) pop out stos mov cmpsb sub jnp bound es icebp idivl xchg push mov mov sub mov test lock inc in xchg xchg scas test ss sbb fstpt lret outsb rcrb xor and repnz dec lret jmp out mov or cmp adc aas (bad) imul push lcall mov fildl stos cmpsl adc push pop jle mov mov or cmpsl int3 dec imul rcll dec ret std dec cs inc (bad) test sti sub mov dec enter out stos push pop xor mov mov mov pusha aas jp push jg into cmp (bad) jge cmc shrl test loope insb shr fsub lahf xor shll scas lock aas adc fcomp mov test xor fwait pusha jmp inc mov xor and mov out jge imul out scas pop int3 aaa mov xor and cld xchg dec orb psrlw xchg dec cmp hlt or out repnz sti mov mov cmp xor loope xchg jle leave es fisub aaa sub clc lret jno cmp (bad) neg mov sbb inc mov iret xchg add repnz pop jbe enter loop cmp push test fidivr xchg mov push xchg cli mov jg das ds jl dec and loop xchg push sahf (bad) int sub int mov or adc dec dec ret jg sbb in jmp mov out test mov pop iret lods cmp dec fdivl xchg scas push cmpsl mov js xchg cld movl (bad) clc fistp js in dec xor xor xchg bound mov mov in sub leave inc mov (bad) mov out stos pop popf cs loope ret dec pop jle (bad) adc shrb sbb or fdivl (bad) clc inc in test mov xchg negl pusha push mov push mov gs xchg stc fisubrl mov out dec xor dec cmp les mov xlat cvtpi2ps push movlhps aad out je decl movsb insl test mov add and xor shrl stos add adc pop stc bound setne je or jecxz xchg js inc xchg cmc cltd outsl push lret lea call in imul movsb xor dec mov xor add test mov ja lods loopne pop mov or pop cmpl lods mov orb dec cmp sbb sbb jb cmc push xchg divl push ret shlb sahf and mov mov xchg push adc adc dec push mov mov mov jns cmpsl stc mov dec pop jg out loopne es bnd ret scas fdiv mov sarb das xor push cmpsb xor and xor mov jne out pop pop mov xchg fsubrl push iret and pop test add cwtl ds outsl or push pop pop cmpsb xor out inc mov cwtl inc pop fcoms js (bad) or pop push (bad) jno shll hlt int3 push inc jmp jnp sahf adc outsl out mov sub pop les inc xchg lock xor insl cwtl add mov aaa or jbe lods dec mov inc cmp insb pop lods gs push lret lret out mov ja adc pop loopne push adc xor inc hlt jl push cs imul pop pop cld mov (bad) rolb jo jae movsb inc mov jle pop arpl (bad) out adc inc dec clc iret dec jmp cmp xlat push adc out nop lds and fisub imul (bad) fwait lret movsb stc fisub shll add je fistl inc in cltd jne push cmp clc out dec cmpl (bad) fsubrl or stos pmaddwd mov jmp repz jg add repz jmp add xchg dec sub call mov fwait scas jb repz lret mov hlt stc in add mov shrl stos sub mov or xchg jbe mov pop ja cli sub icebp sub loop cs out pop jecxz xor push sub mov mov jge sbb adc mov rolb jae push ficompl out aaa add das xchg out popw cmp mov nop lds loopne xchg pop adc fistp popa aas inc mov or xchg xor cmpl in inc out das jae lods mov pop leave movsl mov (bad) aaa lret inc jmp mov (bad) add push mov orl dec jecxz cmp or xchg ficomp jbe std inc and xchg movsb pop rorb hlt sbb in jp xor cli fnop sub pop cmc push pop and mov jge lcall mov xor cmp mov loopne in mov int3 (bad) loop cmp scas mov dec enter sub data16 mov mov ret jp fadd adcl cli xchg inc xor adc mov stos mov mov ja sbb cmp (bad) jns or bound shr fstp push jne lcall lcall lcall xchg jno pop inc xchg or xor sub jp (bad) int3 mov insl movsb lcall les sahf sarl cmc inc push push scas pop cmp fldl2t out arpl sti cmp sarb imul or mov fxch cmpsl adc add imul jae ret call ss add pop ss mov (bad) ss sub daa sbb mov push gs sbb stos decl stc sbb popf es notl hlt sbb adc es adc lea push leave sub push imul into in loope rcrl iret out lods push and je popl ja out push xchg out out in mov ja mov adc dec sbb das cld insl sub and xchg lahf (bad) cmp inc jne fild rcll or push into xchg sbb mov jne testb (bad) aad mov arpl pusha cld xchg pop fmul or in lods pop jge rorl (bad) cltd ret (bad) mov mov orb xchg and ja leave std das add movsb mov sbb (bad) ja or dec jmp mov aas xchg imul push xlat enter cli mov gs js xor add bound add xor mov push mov adc inc incb aam mov add test (bad) pusha stc cltd fnstcw daa jecxz (bad) rorl nop mov add ja ret push sti inc bnd iret ret xchg xor jbe xchg xchg xchg or inc fistp cmp out outsb and jae jle mov jge das cwtl lods and push pushl into and ss cmpsl inc and inc jae ret enter stos adc mov xchg pop out inc popa stos push test dec mov movsl aam xchg outsl adc push popa inc popf clc inc xor jmp in outsl fistpll cmp pop push xlat mov (bad) inc aad fistp insb loopne mov xchg jbe jae pusha dec repz pop mov sub push mov sti jg mov insb div xchg lods pop notl push jb mov xchg dec inc pop out int data16 hlt pop int3 fcoml or ret mov test xor pop inc scas sub and and mov dec movsl arpl lods flds cmp imul in lcall (bad) mov jnp cmp mov or div sti adc adcl xor mov add mov xchg call dec dec xor lods mov out mov sub sbb inc adc push mov test adc add xchg jl xor sbb ret dec das outsl add addr16 js repnz add jns cmpsl daa sti rcll sbb mov nop dec xchg inc std jge inc push push mov std scas aaa cwtl (bad) cmc cmpsb aaa jnp fild aaa ljmp mulb dec fcmovu pop clc rcrl mov lahf (bad) sbb (bad) imull mov pop xor bound add hlt in hlt popf xchg pop inc mov pushf push mov ficompl jbe or xchg mov out xchg inc leave xor push hlt mov rcrl pop pop or lods add add adc xchg rcr lret lock sbb aad lea stos in andb mov int cmp push jecxz jg fildll jb leave sub pusha cld outsb sub adc (bad) jb jbe test ja outsl pop xchg and dec inc jbe lods xchg test shrb lds lock inc cmpsl fldt nop ss dec mov push aas inc xchg and xchg mov xchg push int sub insl xor or dec aam sub ljmp or inc out xor jno lcall dec sub mov rcr add nop pusha jmp push popf movsl cmpl rcll inc outsl mov jmp adc ss cs lock dec xor mov cmpsb or pop (bad) jle je sti push test imul push mov add mov das cld xor movsl push bswap adc pop mov test frstor pushf mov push push aas jl in hlt scas mov xor mov fsubrl cmp lss push shll cmp push xchg fmuls loope scas mov or scas out add xchg rcrb imul out (bad) iret mov stos das in outsl insl xchg lods leave add xor add pop xor lds loopne inc leave adc dec mov sbb addl daa or mov mov push mov sarl mov sbb pop orl popf mov xchg mov sti stos sub xlat mov or jecxz lea mov leave loop jnp mov addl xlat pop lcall xchg enter subl cmpsl (bad) stos in repnz jno jnp add sbb xchg cmp xor mov sbb push push or subl or je shlb fidivl sbb rcrl sahf es inc test test int lods sub xor push arpl push or out aaa lret xchg pop xchg xchg popa xchg sbb in xchg les fidivr addl in push jae loopne mov test repz sub lods or cld addr16 and xchg add pop push sbb popf iret out cmp jns imul aad xchg push jb faddl jl push gs sti mov cmpsl or mov imul pop xor clc imul sbb pop jle hlt add rorb decb jne mov mov or adc cmpsb fsubp xor enter inc lock std sub daa xor jl and push stc sbb adc jno sub mov sbb dec movsb clc negb lret lds xchg jno adcl fistpll in and in mov add sbb sub push (bad) insl and or icebp popa push int3 mov popa loop sbb or mov loope lcall lahf movsl pop add ja cs mov add jnp mov lods pop js sahf sbb outsl negb rorl or lods lods add icebp and mov aas ret lods dec sbb aas inc dec stos jno sbb xor cmp daa dec jae mov mov stos dec jge sub ja jns mov sbb adc clc int dec jnp dec dec mov xchg (bad) lock scas scas pop mov movsb sarl out ljmp pop incb mov arpl pop dec lock mov xchg leave jne push mov mov cld cltd pop (bad) repnz adc scas sahf aaa les pop lret stos ljmp fcompl ret and sbb inc in mov mov bound cltd push (bad) mov clc hlt lret mov sbb mov add pop popa lods adc dec es ja popf inc mov jbe lret outsl pop add jae leave aam mov nop rcll jne cs aam cmp jne xlat adc pop lods mov mov cltd add fnstcw daa mov inc stos lcall cmp arpl dec popf cmpsb mov push es push dec pop icebp pushf xor imul adc xchg fstl mov pop sub cmp out insb mov inc mov fbld xor andb xchg push dec xchg or and cmpsb jne (bad) mov movsb test out imul outsb jbe loop in insb stos popa mov jl sub mov jg clc imul fs mov adc xchg in fld aaa mov in jnp pop xchg das sub mov aad stc push std (bad) in push sub mov stos (bad) sbb jns rol inc int3 mov or outsl jbe fs or sub dec (bad) cmc inc aad testl loop mov xchg inc pop adc mov push ret test les addr16 addl rcrb pop cli decl cmp repnz xchg daa dec sahf cmp repnz xchg daa (bad) jg add add leave and add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fistl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb rcrl cmp cmp xor cmpsl mov (bad) xor cltd scas mov fistpl lcall mov add call pop pop imulb lea pusha cmp daa sbb inc (bad) (bad) push out push mov jecxz aam pop insb fiadd jns xchg out cli cmp push pop and ficoml mov xchg sbb cli dec bound xlat je xchg and inc sbb add mov push mov cmc int mov mov ret in jl mov pushf icebp (bad) cmp lcall sub (bad) jno or sub push push sti jo addr16 sbb jno or add in add inc xor in roll jne sub pop pop jne loope mov pop fldt test pop inc mov insb in xor push jns lret inc aas out jno imul inc add pop mov ja mov sub movsb mov ret inc out and or push into xor fadds dec rorb sbb imul dec and addr16 lret pushf mov cmc out loopne or xchg add rolb cmp mov stos rclb inc fidivl mov jg sar daa mov scas push aam jns test jp cltd clc sti sub sbb lea lahf inc popa push and jle mov mov repnz pop jo xlat orb (bad) xchg pop mov or sbb fldl2t adc mov bnd ljmp addl pop (bad) xor push popf loopne hlt sub rcrl inc lret aaa push xor mov outsb out test fsubl or mov xchg mov mov mov pop ret mov outsb stos mov cmp dec pop je aas movsb arpl push mov dec ret addr16 call jg (bad) dec push bound mov adc mov aas ficom xlat cmp stos xchg sub add cmp mov push lock out sbb cld xchg cli xchg jae fcmovne add dec lahf leave sti enter jns lret sbb out lods mov scas or bnd pop nop das stos cmp mov push mov add repz fsub mov mov in imul out (bad) add cmp adc jbe cmp cltd mov cmpsb adc fstps mov (bad) jp add fdivs fwait mov bound cli fldl jle jl add mov stos loop sub push and push pop push mov stos fstl lods cmp or into imul int3 daa arpl cmc rolb je mov (bad) mov popf out mov push mov sbb sub insl push out cwtl rorb xchg outsl daa mov pop cmpsl and cmp push lret lea outsb ljmp pop mov mov (bad) jl adc (bad) adc mov xor sahf cli fist jp dec jle pushf pop sti xor push sbb jne ret and and leave icebp cmp pop gs mov xor push jbe movsl dec daa mov test subl std jg xchg sbb mov aaa dec mov lds and jb in cwtl into das mov lret (bad) cli aas mov dec or pop lea fisttp dec lock xchg data16 sahf scas gs push popa push sti or inc lret dec outsl in mov jge imul pop js inc ret pop mov xlat loop inc (bad) mov rcrl fstl push add lods (bad) jecxz test and and pop daa (bad) repz jle adc fnstcw cmp enter inc stos (bad) je push pop nop loopne ja jo mov cmp pop xchg push inc or je lods jmp push mov movb jns lea gs mov es sbb lret cmp mov xchg loop xchg or dec jns test fwait inc xchg adc sub test pop cmp cmp mov mov dec test aas iret imul repz clc xlat mov pop frstor hlt mov out jno stc pop and xor fwait xor adc jmp mov push mov in pop sub das jmp mov pusha mov xchg jnp imul adc mov inc add push xor add jl imul jp es pop outsl pop std dec dec nop stc (bad) sbb (bad) mov sub dec (bad) mov icebp or test iret and dec add mov cld mov mov xor cmp inc std out int mov push sbb loopne mov xchg add fwait lcall lret jg popf mov mov fidivr pop test xchg test les outsl call mov bound xor jb daa or push imul sbb (bad) es loope dec ljmp (bad) lock imul jo daa ja push (bad) mov or add mov lcall mov repz mov fsubrl (bad) lea out repnz adc fs stos lds and push jns ljmp and dec and je (bad) daa inc fs jno sbb sarl pop shrb sbb jg adc lcall (bad) mov cld scas insl fcomps pop in mov mov (bad) mov lds scas cmp arpl arpl jo movsb sub fisttpll xchg ret neg jns loopne xlat out imul ja ja insb inc and js aad mov outsb cmc mov inc mov test stos cmp fstpl enter repnz ljmp leave sahf inc mov push sbb in xchg dec or mov lods mov scas mov or xor icebp pop add xchg cs xchg int3 xchg sti push mov push xor ds pop fs leave insb popf leave adc adc lahf cwtl sub in cmpl or divb cmpsb test jnp xor xchg inc pand mov and mov std adc fs cltd je xchg (bad) pop (bad) dec inc aaa pop fnstsw mov and xchg and iret dec pop in leave jge lea mov add sub popa cs aas test and aas stos pop push fmuls mov icebp cmp sbb jl and mov add pusha push lret add sbb test mov mov dec cmp cli push add call subl (bad) mov aas xchg and jg or scas pop fcom mov sbb pop stos pushf scas or fs fyl2xp1 fidiv mov orl or daa push or (bad) pusha pusha push (bad) pop mov sub xor int3 add mov icebp pop cli pop mull xor into push fdivp mov imul int3 cmp (bad) or xchg or xor cmc mov cltd mov rcr mov test push hlt add sub cmp dec cmpl and (bad) jmp stos and and dec insl fstpl cwtl xchg jmp test xor mov shr mov (bad) in or pop (bad) cmp std aam xor std push in jle (bad) jge pop int3 lea insb mov sub cmc stc jae stos iret sub test inc outsl xor outsb fld into lods xor insl pop push ds (bad) jecxz popf dec fwait imul mov scas movsl cld mov mov (bad) mov mov jle jecxz aam cmp in jp mov jmp mov ret or mov jnp int jns in loopne clc ljmp xlat scas ds stos dec jb cltd jmp jl mov jp dec popl cmp inc inc std out ja and loop lea sarb movq lds cmp or cmpsb test icebp fistl in int add call xlat adc adc push movsb pop bound call arpl add ss xor pop mov jmp lret aam xchg sti mov add mov jg cmp jge xchg loope fsub mulb sub mov xor je pop adc mov clc insb movsl or scas add notl cmpsl mov hlt xchg push lods test mov push sub into leave add das movsb sahf jle lret cmp les mov incb mov pop fist pushw inc lahf adc dec pop enter jno push je lahf pop (bad) loopne int3 mov into push mov push cwtl push jnp sub (bad) (bad) das xor lds or bound mov mov sub xor mov push aam pop repz push cmpsl mov sbb push sbb out sub pop jbe out lahf sub das add xchg fistpl sbb sub sub cld pushf mov jo test adc mov sub push push test stos xlat mov jne adc xchg push mov dec xchg mov lret (bad) test dec cmp push mov ds sti adc loope sti inc flds fstps outsb pop or nop xor in cmp push mov fildl stos add aam sbb in iret out outsl ds cmpsl xchg lret and add sbb or shrb sbb loop mov mov jno inc lds test idiv push fild test add out stc leave push push lods dec bound mov movsb hlt add inc lods jb test fs inc mov in sub add mov fstps arpl or adc cmp lock rol test mov sub xchg mov adc cs lret gs pop or adc fwait or jb cwtl xchg stc fmul mov mov shr loop sbb jmp outsb pusha dec jae stc push push dec xchg iret push (bad) js repz and dec push ret xchg fldenv inc xchg out data16 mov sti bound rcr or mov xchg (bad) pusha sub sbb push call lcall inc mov sub fldt cmp push aaa sahf mov test pushf cli cltd jae call movsb xchg cmp ljmp call imul scas xchg push rcll jo dec pslld sub dec fwait stc mov sub cwtl ss imul inc jmp sub push fwait sub mov jns adc (bad) in out add fdivp mov sub mov mov in cwtl stos or sbb fs out jae out maskmovq idivl mov dec das mov orl adc add jb fiaddl nop test rcrl shrl push cmp mov mov sahf or and dec push hlt (bad) jbe adc lods xchg xlat bound mov pop lea cli scas adc in dec jns insb bound xor lds pop popf je dec outsb sahf push test mov dec shrb jge std add hlt adc mov jge pop popf sbb pop sbbb (bad) in je lock or sbb dec jb mov pop loopne outsb adc and xor push repnz inc repz (bad) dec xor xchg aaa adc add insb or loop imul out xchg rorl mov mov test pushf lret cmpsb (bad) out sbb in loopne inc push xchg movsb lods in data16 dec arpl fcoms xor inc test call sub sub sahf frstor (bad) ja imul test popa arpl xchg pop lods xchg cmp mov jge push dec mov xchg jbe mov fadd or out xor mov sbb std lahf push in rorl jno ds adc ds fbstp lods sbb pop (bad) fcomip mov push dec and pop cmp mov cmp jbe ret inc mov cmp jbe push jmp lods cwtl insb or sub jb ret in stc jb jne dec lds mov ffreep popf (bad) gs jnp,pt mov jo fs jb rcll into and loopne xor sub sub in add ljmp scas jg sub inc adc ljmp or insb test imul inc and je sub inc xchg push sub movsl jno repnz (bad) cmc ficomp fnstcw outsl fsts sarb scas push pop inc bound dec pop push int clc mov movsb lea xchg movsl jns nop loope sub repz popf mov lret jns pop xor inc mov shrl pop mov dec xchg inc fidivl fcoml add push (bad) cld sbb cmp inc lret rclb adc push out popa pop xchg adc std push in sahf fsts push or mov (bad) mov inc cltd aad int3 push lea xlat (bad) fcomi pop movsl or insb into jne outsb mov (bad) mov and in push cmp push add ss addr16 movups mov test jbe jno sar push inc fwait mov sbb popa xchg leave stos cli out fs stc cld jmp dec test out mov jbe sbb xorb jle push fs sahf movb jb xor jge stc sbb sbb movsl sub pop insl push push sub lds jns jns push pop leave and sbb mov test add fiaddl std testl fiadd movsl fmuls cvtps2pi nop or (bad) in je in fidivrl ds pop cmp adc (bad) push sbb sub mov xor sub pop jp sub push mov mov push fdivrp pop add bound sti pop (bad) pop push jmp add jp mov cld jl pop mov jo jb xchg adc insl or loope mov ret xor ret xchg inc and fxch fadd and ds mov test int inc cmp xor jp aam mov bound clc or les sti jg hlt call push cmp mov jp call jg mov in jmp add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fsts add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb rorl xor je dec int3 je je fwait out jbe jp cltd out sbb push aaa jge int jno sti cld jne mov xlat js pop jecxz add add stos push pushf fiadd stos cltd jecxz sbb pop add pop popf ret mov jle aam iret es jecxz lret dec adc in dec sbb test jb dec push movsl adc test push inc add out cltd test cmp jp (bad) cli mov sub and mov push mov scas inc and lret xor stos das jno inc xor inc ss dec daa je pop test jmp (bad) add adc fwait mov mov mov adc mov and scas push push into sub pop rclb int3 imul push or mov mov mov or or cmp dec lcall repnz mov insb jb push repnz stc movsb jle dec mov dec jl cmc xor testl movsb pop inc push in or nop xchg cli add les mov les pushl and test jnp adc out jbe and mov mov sub or or inc fyl2xp1 sbb xchg jnp sbb dec loopne nop xchg fcomi cmp shlb add stos jns mov cmpsl push ret leave cmp adc arpl imul adc and aas out clc inc (bad) call xor and dec push cmpsl mov (bad) test dec xchg insl push mov mov xchg mov adc ljmp jo shll lds or rorl (bad) into repnz inc sub popa push ds push xchg nop add xchg outsl pushf push (bad) sub (bad) jno shrb inc pop pop lods test jmp mov xlat ret jmp hlt movsb (bad) mov daa shll mov mov push mov jno push add mov push (bad) cmp push and inc out cmp in movsl and dec mov (bad) dec pop jg pop and nop mov mov cmp fnstsw mulb movsl mov push pop icebp loop mov notl jne pop pop in push arpl dec mov mov fst jmp sub adc or mov jns in ljmp sbb cmpsl in aas fsin inc and xchg lea std jp dec jmp adc call cli push mov fcompl shrb repz inc sub out movsb iret in sbb lea inc scas inc outsl xchg mov and popl pusha pop stc popf arpl or lods cs sbb scas sbb dec add scas gs mov push or sbb nop aam jp jge mov jb pushf sti call adc xchg push cli jns ss lds (bad) xchg ja (bad) jno or jge sbb in gs jge cmp aas adc xorl shrd arpl les dec sbb xchg ficom mov in mov ds mov shl jmp push enter add cld cmp mov xchg cs call cld inc mov imul (bad) rclb in mov pop fnop mov loope add sub sub jns pop aam mov cmp jns mov out in int mov clc or movsb push mov push fstp fsubrs sub adc sahf inc into rorb and sub inc sub stos cmp mov pop inc test jne clc mov push sub gs xlat lods pop push fmull fwait out adc ds mov jg rcrb xchg push aaa scas loop das pop pushf cli insb push out mov ret xchg loope in iret ss xor rolb loope test (bad) loope arpl ret in (bad) and mov daa add scas int es mov mov cld loope xor xchg insl mov test cmc mov xor lock (bad) xchg jns js cmp (bad) mov out in popa push push pusha cltd mov iret xor sbb cmp sub out inc hlt adcl jg stos adc xchg ljmp ljmp in push cmpb adc sub or xor stos and cmp cmp jnp and jnp mov xlat loopne xchg jg xor xchg inc stos jecxz or push repz std and ficoml shld cltd sub loope xchg push sub inc add cmpsb cmpsl lods push mov lods aas adc pop inc (bad) pop mov jp or dec jecxz mov push jge pop idivb xlat jge pop push fsubrp movsl xchg mov and inc mov adc inc xchg add sbb cli (bad) int3 push dec movsb scas nop dec jb add pop push cmp pop sbb xchg ja push rcrl adc push pop inc les mov scas mov std out jb das jecxz jb aaa cmpsl in xor imul notl dec xadd sub (bad) iret lret mov pushf popa adc outsb cmp pop cmp (bad) repz es bound jno imul sub sub mov mov cmp mov and sub pushl add sub in xchg sbb pop jp bound cmpb dec sub jl loope sub pop adc repnz sbb xor out dec (bad) aas mov arpl lret xchg mov arpl jg mov cmp xchg adc movsb xor cmc cmpsb mov int3 in xchg xchg scas stos rclb adc jle ds aaa sti inc rorb aad rorl int xor and sub es mov dec mov iret movsl push enter jecxz je mov scas inc loop fcmovu popf pop inc fscale scas movsb xchg std stos xchg je mov lret leave inc std add cmp mov pop pop inc push jb fistl push lods dec sub xchg insb jge jo push int3 rcl les and mov xor push shrl or xchg lods jns cwtl jmp movsb push leave ret (bad) mov fsubs out add jae xor pop ss jnp xor push rcr out jbe mov cmp ret or test dec enter pop push ds and dec (bad) fbstp sub push in xchg sahf loop ljmp rorb jmp mov push (bad) fcomps jo aam lods dec das jo sbb xor pop dec cmp test popf xchg push push inc sub pop fs jns mov movsb imulb and test inc js adc aaa gs sti and in fcoms sahf dec mov jg pop in sti lret aaa xor jb sub mov outsb mov fdivl xchg and pop sti xchg xchg cmp sbb nop cmp dec pop adc mov xor cmc adc mov dec or mov out mov sar jl loopne adc rcrl mov push push into inc jmp mov arpl jo adc neg vmovaps or gs out gs sbb pop pop ret cmp (bad) (bad) rcl outsl repnz imul lret cmp aad nop sbb movsb std test push outsl dec cltd sbb push mov (bad) push xor inc pop mov push ss cwtl adc or cmp jb lods add decb insl adc jns cmpsl pop and jl popf (bad) repz ret or fistl ret sarl sarl sub push jge orb sub push js pop fimull fwait xor lock loop xor dec xor jl lcall out mov mov pop pusha xchg fsubrs or jbe dec mov roll jge hlt arpl test sbb mov inc jo ficom inc icebp or push lea roll insb jmp mov mov arpl sub lret jle xchg xor fcomip rcr push icebp or fwait cwtl adc jle fstps out xchg xchg xor cmp fwait mov xchg mov add mov or test call mov push pop mov lret add mov vmptrst das xor sbb loope test pop xlat xchg nop or adc sbb dec sbbb mov xchg orl mov jmp and arpl cmp xor mov sahf rcrb mov enter rclb iret push xchg fimull inc cmpsb psrlw push jb inc insl scas jmp adc (bad) cmc add mov lahf (bad) mov adc xchg xchg sbb mov mov out add lea adc sahf std inc roll fstl aam cld cmc cmpb push test (bad) dec sub jp add arpl fimull mov arpl push (bad) mov push mov jo addr16 data16 repnz (bad) mov cmp mov decb push dec inc inc out adc jb movsb jmp and int3 loopne mov into dec jno mov scas mov cmp push and aam stc ja outsl ret push insb icebp xchg xchg nop pop pop fdivrp push lock push mov lret repz sbb jp xchg subb xor cmp jmp imul cs pop dec sbb rcrl addl adc pop mov mov out outsb cld mov jecxz imul ja xchg jge lahf or ffree push fimull aaa test adc addr16 adc xchg cltd arpl mov fistp fistpl repnz ljmp fstl shll mov mov xchg lea inc push out les jne or push xchg or enter sbb jnp stos inc std scas jb addr16 dec gs js test seta jp lods out scas aam add ds xor xchg mov dec cmp aaa sub fldl ja dec fisubrl dec and xor fwait nop push mov out movsl and imul insb cmp xor notl and call movsl or xchg data16 gs mov jecxz lods push inc notl jnp jp cmp mov push mov movsb pusha loopne mov sbb and les fidivl outsb inc ja lahf jle ja popa mov jg (bad) or movsl bound xchg and rclb adc jbe cld pop inc add andl mov dec addr16 mov pop xor loop imul dec scas leave les lea fwait or mov dec js ss arpl xchg aas loopne xor insb xchg mov xor out fldenv and push xchg mov cmpsl (bad) loope add cli insl and xchg xchg sti cmc out sahf xorb jp std inc hlt fadd dec dec mov sub adc and (bad) lods add jnp jb aas xchg cmc (bad) xor shll sbb shrb aam sbb aam push dec rolb push or xchg ljmp mov icebp adc testl xorl into lods (bad) or cmp inc int lret mov mov xor push sbb pusha xchg imul inc mov jecxz or test clc jbe,pt add inc loop repnz mov mov cld mov xchg fs dec sbb push jl test add jl ret jmp pop sub sub sbb popf pop xlat clc mov mov fiaddl xchg xchg sar arpl xlat ds add cmp pop add fsts cltd dec inc gs inc pop push or pop popf sbb xor clc daa mov lock icebp or stos lods sub loope in xor lret (bad) mov push jb loope sbb scas mov inc clc movsl pushf xor mov sbb cwtl pop lods fist mov fwait push dec leave fdivs dec jg iret mov std hlt ja xchg repnz stc mov sbb inc adc inc mov mov rcl mov imul arpl and mov adc xor and iret dec mov andl (bad) or aas xor add test pop fildll xor mov andb pop js ficomp scas ds into out xor (bad) lret sbb (bad) cmp lea push mov cmp imul jle bound cld xchg mov pusha cmc pop mov out rdpmc xorl push lods in bound outsl repz sub and fucomi bt nop xor loopne iret mov mov mov les je add adc test inc leave mov scas jo jbe iret rcrl dec out jge mov push inc mov mov mov mov out push and test pop mov fnstsw jb jl loop cmpl xor sbbl push add or cmp lds pop repnz shl push jmp pusha mov sahf xor or sbb inc jo test dec jns sbb jno fmull out mov addl lahf mov jns dec imul jno and ds pop adc add (bad) outsl or push dec jae,pt fs add adc push arpl movsl sub xor and jmp add cmp mov shrb mov out out es add xor loopne push pusha pop jmp mov inc lcall mov xrelease xor out lret cmp shlb ficoml mov mov mov (bad) lds movsb inc stos lea pop or dec dec jle cmpsl jne mull pop jo inc dec cs cmpsb loope jns das popf dec fldl push mov or jp add xor in fnstenv jnp in fnstenv jnp in decl add jg jae add jle sub add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc add testl xchg mov dec dec aaa or popf mov int lcall nop outsb inc enter sbb pushf out add cmp das (bad) adc in jne int lock popa lret sub xor push fnstcw or repnz pop cmp xlat jnp subb jle test int cmpsb sub (bad) mov in push (bad) hlt pop pop mov loopne fyl2x rclb enter mov mov pop xchg adc addr16 out dec mov stos cmp xchg mov dec push dec mov sub sub push lcall scas lds subb (bad) fnstcw scas cmc push insl stos outsb dec scas push (bad) jmp lar sub push push adc mov cmp sarl adc jecxz push add jle aas jne mov shrl push test cld sub mov inc stc inc lcall outsl sub cmp call sbb pop pushl sbb pop (bad) mov sarl int3 sub rcll cmp adc jae les clc lret (bad) (bad) cmc pushw adc adc rorb sub (bad) inc xor inc movsl xchg es test iret call pushf cmp pop push xor cmp sub movsl and popf adc (bad) sub adc sbb add inc out xor jne xchg dec xchg jbe sti movsb pop jle fwait inc (bad) dec bswap mov inc int3 dec sti mov rorb iret jo push fwait mov gs xchg out adc dec addl sbb push jmp jne cwtl test and dec xor pop lahf scas mov xchg in ret and idivb ja push cmp push inc stos dec cmp data16 cmp cmp jne mov cli mov sti std xor cmpsb mov adc scas in out clc pop push (bad) mov xchg repnz sub jecxz dec mov mov sarb inc in call js daa call or mov testl aas pop push lea mov xlat in popa inc mov movsb sub mov dec xchg xlat lret and push sub imul mov dec imulb bound mov sbb cli ljmp sub icebp hlt mov repnz jae jno addl fimull sbb (bad) xor insl sbb dec mov mov outsb sar mov lea inc cmc sbb add pop out leave xor sub jmp inc push or repnz out cs and je push push push cmpsl (bad) rorb sahf cmp daa push imul and in lods dec adc (bad) xor sbb push (bad) addl jbe mov jb addr16 or cmp jg inc aas mov arpl mov jp jbe xchg xchg pop repz push pop mov lret and mov test and sbb lea lret pop adc insl cmpsb test loope stos push cmc pusha add lock (bad) adc sub aaa push push gs mov sbb mov cmp dec out aad mov sub sbb xlat out or push (bad) sahf fwait scas cmp dec lahf inc jae jnp mov mov mov cmp xor xor sub shll and jg (bad) clc ljmp fs push aaa scas ljmp dec cmp mov jo int push mov mov lock daa mov rorb pop test sub inc clc jle nop jl ljmp das cmp outsb dec aam jae pop push loopne push cs stos cs dec xor hlt sub enter adc pop lds (bad) and sub mov fnstcw xchg lcall mov jecxz ss sbb fisubl cli ret and or add stos push dec jnp pop and lcall int push push jl mov jp sbb mov xchg fild flds lea dec decb add dec lret lret or gs scas xor loopne mov sbb xor cmp xlat addr16 add xchg mov cmc (bad) mov push test fnsave lea movsb jb sbb sar xor (bad) ds add (bad) xor pop mov inc (bad) (bad) ss push iret cbtw movsb jl (bad) div es push mov out sub int sti mov in pop rorl adc das aad rolb mov fnstenv ss test jp cmp add aad mov adc ret outsb mov dec ds ret fsts mov jp fist cmp inc loope sub aam mov repz mov adc int3 and xchg or aas mov fcmovnu repnz (bad) arpl dec pop std lock lcall in dec sbb jbe pop dec or ljmp (bad) xor daa jae add inc adc xlat cmp cmpsl push jle nop jecxz push mov push cltd mov xchg movsb (bad) jmp pop push or (bad) jae ja add aam or jne in pop pop stc test in xchg arpl daa mov call jl daa xor mov mov pusha push leave cmp xchg xor fs or cmp or dec aas pop sti pop hlt push mov shr loopne mov (bad) sbb pop add cmp imul mov mov push inc push jmp shrl in mov mov cmpsl (bad) xor sar pushf xor int loopne sbb lret test jno add inc mov insb mov mov and dec push (bad) iret mov adc mov mov push je adc or fstpt in cmp addb mov subl or jp xor test cmp pop dec adc mov jl mov mov xchg sbb xor pop mov cld test mov cmp and leave imul sub addr16 and adc sub cmc lret mov into fmuls (bad) or sbb cmp xchg inc sbb testl lret in test push cmp jb mov andb outsb jnp je or subb inc push jg ja cmp jns fwait test sbb dec js fdivs inc xor push sbb cmp (bad) mov pop aas sbb jo pop push push jo lcall daa lea pop xchg pusha icebp scas inc mov sub add and loopw (bad) hlt enter xchg xor add sbb js dec xchg les jo jnp ret sbb lret push mov lds mov push and sbb stos mov lds xchg sub mov cld sarb inc idiv xor inc fwait sti imul fwait adc daa movb cmp test and fistp out pop sbb rcr or or sub les daa xchg jg jg repz rol xchg dec insb mov or mov gs std mov icebp adc call pop (bad) mov xchg dec inc dec (bad) inc sub xor jb rcrl xor mov cmp mov (bad) xchg xor adc xchg pop pop movsb jmp pop push stos aad cmc adc xchg pop and out nop je int xor dec stc pushf jno (bad) jns adc add adcl enter call nop int xor sbb test lods cmp push fcom ss aad movsl inc fdivl (bad) xlat pop adc mov shrl repz add sub cld les jge lret xor rorb fdivrs in pavgw pop pushf and sbb es xor xchg movsl iret sbbb push cmp push adc mov lock and push sbb mov cmp stos sbb adc xchg mov push dec dec outsb call (bad) mov into stos incb jmp push or (bad) xor lods dec leave jl int3 (bad) and data16 and mov xor loopne in dec pop jnp xor jg push mov mov pop push mov lods mov (bad) hlt lods jmp hlt sbb arpl xchg dec clc xchg (bad) or mov jb outsl ret xor (bad) (bad) pop movsb mov cwtl or xchg cmpsl sbb sub aas cmp dec pop or (bad) xchg aas mov cli push adc scas frstor adc sub (bad) mov and icebp outsl adc mov xchg decb int xchg jge mov sub ss outsb daa jg lea sti dec or daa sbb xchg jge and lods adc push (bad) dec xor cmp hlt xchg push xlat jp pop int xchg adc (bad) fcomp add push fidiv jnp fdivr lods imul push shrl lahf jecxz inc lods stc push adc push (bad) inc repnz adc and or pop dec xchg sbb mov jge pop fisubr lods pushf push scas (bad) jae push sbb adc xchg push jl aas cmpsb sub jle and pop jnp je je fbstp aaa movsl in iret les adc cmp mov (bad) loopne ret jo sbb sahf mov rorl dec imul iret movsl cmp into mov iret imul and lret sahf cmp ret fwait sub hlt movsb mov pop and daa xchg repnz mov xchg mov lret hlt aam lret aam pop jl push scas and movsl (bad) mov inc push out xchg add rclb movsb rolb mov js stc jl std jge jmp enter pop jmp cmpsl movsb ss cmpsl lcall adc dec stos aad into add add movsb jne pop xchg in adc mov bound out push push nop in pop aas test fidivr out pusha xchg mov aam push cmpsb sub cmp fwait popf xchg add adcl xlat mov mov imul pop out stc or ds push cmpsb cltd inc cmpxchg and loope popf out cmp mov idiv addr16 dec xlat popf jge fmuls mov test negb mov mov iret sub (bad) test cmp and stos (bad) out les adc mov fmul insb cmpsl push divb xchg pop dec dec xor jecxz xor cmpsb adc mov test fnstsw push popf mov iret cmpsb ljmp push pop pop or add or es pop shrl and fisttp ds inc or cmp rcrb mov jl jl mov outsb push (bad) cli fidiv stc pop stos dec lahf cmp insb jne cmp in xchg inc add (bad) mov jmp xlat dec mov pop sbb loop and leave dec xchg jg sbb or dec popa (bad) out gs xor or jbe cmc bound out cmc aam stos push jmp inc ja and hlt (bad) notl mov xlat mov pop aad adc cmp jmp mov das jmp mov jecxz pop gs sbb insb out mov push test fldl loop pop mov sbb fbstp lret lahf int3 nop pop cltd and into jae ss pop lret and popa cmp in mov stos jae shrl ss push xlat lea insl mov add push adc hlt out daa call pushf inc or push outsl mov mov sahf sbb sub or das inc lea roll mov adc lds mov popf in dec or push ss hlt dec es sbb stc ss bnd dec adc icebp ljmp (bad) xor shrb es imul sub outsb push mov mov dec rcl jecxz mov pop xor mov aam negl bound and inc pop xchg mov ret push pusha mov mov lcall and add jg mov insb lea repnz (bad) mov (bad) popa loopne test push repnz dec ret shr mov into cmp mov mov aad shrl lret push adc hlt add mov scas mov sbb sti adc daa inc mov lret xchg xchg movsl setp or sarb rcrl jl and cmp xchg add cld cmp pop int3 cmp arpl sbb and xchg mov aas xlat push jo imul dec fadd mov pop inc int mov push arpl or mov mov fcomi repz dec repnz (bad) jmp adc out mov std lret aaa push xchg or or mov imul lret jmp mov jae dec xor push sbb cmp es mov sarl hlt bound gs pop sbb mov mov enter jl pop jecxz mov orl add in jecxz insl cmp mov aad inc pop inc shlb idivb mov sub (bad) pop adc jnp in mov call dec mov sub insl pop div mov lret mov clc outsl test add mov insl ja and in cli mov xchg jae lds jmp (bad) mov add cmpsl scas pop inc test ficomp cwtl dec adc fmul inc add dec xor push xor hlt addr16 movb mov add jmp xlat mov mov pop jmp aas (bad) mov jae xchg pop pop and (bad) cmp adc popf popa mov addl dec lea int sbb (bad) push lods lods (bad) lods cli add push out movsb push mov pusha icebp in mov test pop ja mov and cmpl cwtl sub imul sub loope nop jp add xchg pusha sahf add cs fs bound lret inc mov movsb (bad) (bad) or std inc aaa sti mov mov das and stos shlb jle repnz fistl sbb mov xchg (bad) in aaa stos dec repnz movsb push cmp push or (bad) rcrb push shrb fucomip pushl mov mov das pop mov mov das pop mov clc pop popa popl mov inc cmp add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoms add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb sar aaa mov dec (bad) popa lcall (bad) fwait mov (bad) ss sbb rcll es out lcall pop jecxz jl pop add add pop xchg cld fstp pop rcr lret popf xchg clc pop loopne pop xchg mov insl jmp jl mov ret jo inc loope es out scas jl xor sti push mov xchg stos jp out mov sbb mov jp out gs (bad) or dec movsb push xchg adcl out sti push subb iret add notl fistp out push xchg push pop jecxz in data16 imul (bad) add and imul lcall xor fwait daa loopne repz testb adc add gs pop orl sbb icebp sbb das jo outsb or mov mov add (bad) xor dec mov xlat dec pop pop sub cmpl ds or cmc leave add jns (bad) mov push sti jl in test sti xchg je xor dec movsl movsb mov dec in push push sarb outsl xchg push xor push (bad) into push cmpsb cmp cmp je gs xchg push jge hlt push aaa (bad) and push and in ja or scas pop fs int test adc (bad) hlt pop mov lahf cwtl hlt xchg adc add loopne mov jae xlat jmp int cmc popf pushl mov sub mov repnz mov cmpxchg push add stos outsl inc jmp or jle (bad) adc push cli test push push push je loopne (bad) fistp lahf (bad) sbb icebp mov arpl js add jae adc in cmpsl mov loop lds pushf movsb test mov or lea push xchg out and loop sbb xchg clc and (bad) push sahf jp lea mov loopne and outsb fdivrl xchg jne pop mov sbb and mov rcl sbb loopne fwait stos inc outsb cmpsl pop jo sub test cmp sub call push aaa mov fwait push (bad) (bad) dec adc or mov repnz lcall loope (bad) push push mov movsl pop xchg pop jb mov mov je int xchg rorl imul ret sub test clc ret adc cmp push xchg sub inc imul pop push add scas loopne gs aas rclb xchg loope ljmp lea sub jmp inc adc push add xor popa mov push sub es and enter cmp add (bad) dec pop push repz pop decl repz repz out std or xchg lea arpl insb sbb fcmovbe mov es xor leave gs gs inc xchg mov data16 loopne hlt mov mov jne icebp imul jg pop dec dec fdivl pop jne mov sbb pop cs in push pop cwtl inc xor adc mov das and add push (bad) jbe (bad) lods mov test lret and pop mov mov ficompl pop mov inc out xchg out lods jmp fimul (bad) negb scas xchg fidivrl jno jge arpl sbb jle in mov icebp (bad) and sti fisttp loope push fnstenv and in push mov pop sahf jbe call or scas idivl cld pop das cmp fnstcw push pop lret mov rcrb xor dec jmp lahf shlb xor out into or dec ret xchg add mov out sub sbb xor dec jmp add loop ret jg rol lret insb stc inc imul mov ds mov imul cmp es xchg add movsb xor jge outsl pop sbb daa int3 into ljmp xchg fdivs jge fsub lahf sti mov mov out add push (bad) sub pop dec (bad) sub bound pop les mov pusha hlt pop testb out dec cwtl sahf and std inc or jmp orl mov and add sub out add ja out stc loope sbb mov pop lret jne mov inc int3 lods cmp subl lahf arpl add lods pop out fmuls lahf sahf add or push dec push fs push fyl2xp1 pop negb sbb enter stc push addr16 inc push sub xor mov pop rcr push pop jl outsl xchg pop clc dec and loope out xor ljmp pusha dec lea mov cs lock or clc pop mov mov mov cmpsl lods adc adc loopne or test out push mov cmpsb mov pop cmp sub jo xchg int cli andl jge xchg jp stos call icebp pop lret pop loop repz push sarb adc repnz dec and or adc out (bad) (bad) lret and imul push cmp pop mov sahf imul mov pop shrb aas (bad) push lock and sbb gs popa fimull fcomi mov gs clc sub js fldt xchg push xor in push dec repz jb popf fsubs jbe lahf test adc cs sbb outsl xchg fcom mov fmuls das out xchg dec imul mov movsb int3 and pop jo mov xchg icebp stos ds pusha rcl push in nop add adc sub mov movsl sbb adc cli dec dec ljmp (bad) out push divps adc gs xchg xor sub mov pop cmp or nop mov jge mov and push or mov idiv xor xor lods (bad) cmc mov add xchg pusha das mov cmp lods out jbe pusha sub jge negl mov (bad) je (bad) test jmp ja leave push and xor in adc jb xchg fs pop fsubrs icebp add add xor out subl xchg movsl rcr enter iret ljmp jo mov cmp cmp repnz cmpsl mov icebp repz push pop sub iret aas movsb push sub sbb cltd xchg (bad) push add push mov jmp ficompl aas movb imul mov mov dec pop fwait nop xchg mov pop or adc in arpl out in cmpsl sbb (bad) mov loope mov pushf sti sub xor mov jge aam xchg xor mov pusha inc jne fnstsw scas sub into xchg dec inc cmp repnz out ljmp lcall enter (bad) cmp mov sbb mov aas push sbb jg dec in inc ret imul dec enter pop or sbb out mov inc pusha in adc and pop cmp mov test out or inc movsb jp outsl xchg into xchg (bad) insl mov mov lock pop sarb fwait aam (bad) cli dec xor push int pop xchg xchg cwtl jne outsb jbe daa dec inc addr16 pop and xchg xor clc xchg mov aaa lahf lods inc stc inc (bad) push and lcall pop lret imul adc arpl cmpsb and push scas cmp pusha jnp cmpsl jb jnp pop arpl test dec xor adc or aas jnp cmc mul into push pop inc push sahf add aas je out adc mov repnz loop jmp pop jmpw sbb rcrl aam mov bound mov jle pop insl jmp mov push adc push mov mov pop xchg push fdivrs or aaa clc lcall jns repnz dec jne push ror popf mov or and dec pop loope pop daa int3 in push repz lods sbb pop ja cmc push je sbb outsb mov stos add push jmp cmp lret jmp lahf jmp in add cli fwait xchg fmull (bad) mov (bad) dec sbb aaa incb rcrl and repnz or mov ljmp mov leave sti aaa dec jo xor adc xor push mov and insb scas xor xor fisttpll adc daa add popa data16 test outsb adc xchg testl (bad) mov imul fidivrl incb daa lods and mov sar mov int dec cmpsb in cmp adc cmp mov mov adc jmp push lock cmpsb dec jne (bad) adc je xor int repnz repnz xchg xchg rorb jge fisttp (bad) lret stos sub pop int3 scas mov aad xlat ss or (bad) sub xchg cmp jbe (bad) xor imul lds ss loope test push sarb dec (bad) mov cmpsl ret cmc setns add and jne and into pop sbb sbb outsb cmpsb and dec out mov inc in pushf push rcr mov test nopl xchg and je jno dec xlat shll pop or pop pop int lods mov and pop mov xor jns lock sahf add addr16 hlt jne popa (bad) shr (bad) xlat out sbb jnp mov insl ret scas xchg sbb loopne jmp int3 and sti addr16 dec or mov shrd ret cmp cmp fmulp mov mov dec pushf sbb lods cli or sbb push adc sbb outsb push iret xor cmp mov lds inc call scas sbb fildll mov mov popf lcall outsl icebp push or mov jmp in jecxz sti imul sbb (bad) (bad) negb jmp inc mov sbb push int3 push dec inc (bad) dec loope jl (bad) pop and ljmp stos ds iret xchg or mov aaa push dec mov adc repz std add daa or adc je scas mov push movsb outsl inc push sbb iret inc (bad) loop cmp (bad) in xor stos (bad) xor push (bad) int bsf mov ds jl cs rcl fcomip jae fstl int mov sbb movsb mov out sbb out loope repz rol or pop mov mov sbb jnp (bad) (bad) xor inc loope jecxz pop test test inc add lret cmpsb mov cmp mov aas daa inc inc jecxz clc (bad) jae and fisttp pop jne sbb shlb mov xchg xor jae ret in out sbb pop movsl (bad) es xlat jmp lods and movsl imul adc and push arpl int pop pusha nop mov and jp ja jbe or sbb (bad) cmpsl cmp js mov in out js dec es and test sbb and ret push ljmp jecxz pop xchg lret (bad) pop jg dec pop sub pop mov dec js inc fadds lret in add push cmpsl inc ljmp int add call fdiv push shrl mov sbb sbb lods fcoms and jp push sbb outsl lea cs lea les aas gs ret (bad) in cmc push leave ret xchg and xlat addr16 std lret push mov jno mov and mov mov cmp adc dec aad negl or sbb nop cmp (bad) add in push sbb jge push add pop mov mov sub pop in aaa mov imul sbb jecxz or jl ja les jne outsb fsubrp lret fldl adc sbb aas or enter mov (bad) push sti hlt int sub jp ljmp sub xchg lret dec out and or mov mov movsl mov iret cmp push mov imul mov hlt cmp inc pop mov sub mulb or and jo pop clc sub xchg mov test mov jnp in jno test cmp movsl pop mov inc clc pushf and mov es (bad) (bad) mov push push mov fmulp pop inc lahf and lret push pop push in mov mov inc dec mov inc inc jg or leave lahf sbb imul inc stc push add sub cmpps xor jnp jg xchg in ror jp sbb les xor lds mov and adc inc cltd mov jmp adc jp popa xchg sbb mov jecxz jb cmp mov mov mov enter scas js loop pop leave inc notb je into icebp sub sub add mov lret pop repz cli mov ret outsl push das and out pop adc in insl imul (bad) fs outsb es gs and push cs leave xchg (bad) sub push or or in pop test insl fdivp add nop and inc fisttp sti rorb inc (bad) aaa addr16 adc push mov rcr ljmp (bad) cld fcoms lock pushf popa out mov mov mov or dec and int3 (bad) xor adc dec push cmp ja jg popf mov das jns cltd push jnp push inc (bad) and leave lahf xor cmp inc pop jge aas sti lds test xchg mov xor sbbl push pop dec lods ret and mov out push cmp mov add push addr16 pushf xlat lret repnz adc and mov and xor enter xchg aad test in jb lret and xor xchg adc repnz lcall pop lahf cld dec dec inc sbb imul fisubrl xchg addr16 mov inc inc lret scas out scas jge jb cli js jbe mov pop shrb xor leave mov nop cmp cmp in cli (bad) lret ja leave mov ja xor mov repnz inc xchg xchg adc std push lret xchg push lock mov test aaa pushf gs mov jmp stos inc or lcall imul mov cmp mov xor cmpsl adc push lds jle pop or mov jnp out fnstsw jnp out (bad) incl add pop test push xchg add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc add sarl lea mov ja inc movsb imul cmp jmp and sarb (bad) jno add dec sar dec loopne cli or xchg inc scas inc scas in pop andl xchg pop jge cmp pop je cmp cmp cmp ja (bad) (bad) leave mov xor int xor into cmp mov add or movsl out scas cld popf scas out (bad) jge cwtl adc or mov ljmp sbb adc xchg push jne sahf mov ret (bad) (bad) dec fldenv xchg mov inc out test popa jecxz pop pusha ljmp lcall cmc popf es sbb (bad) outsb or cmp test mov aaa les and iret cmp dec test mov dec in jecxz xchg push cmp leave daa pushf mov insl data16 push test nop sbb stos pop (bad) adc das jmp shr xchg out xchg push cmp ja mov xor and dec idivl cmp sub push lret mov and jae jmp fidivrl dec sub or test sbb decb (bad) dec imul sub scas mov sub pop sub or arpl pop lahf into aaa push inc pushf sbb pusha lcall xchg rcr hlt arpl sbb mov sub icebp into insb jp fsubl mov divb xor sub push sarb jae fs daa and xchg mov xor stos scas push push cmp imul (bad) fwait hlt sbb arpl cs mov into (bad) aaa mov sub stc insl pop test xchg xor mov push sub fidiv ror into sbb mov fnstenv jb shr andl je fisubl sbb sub test bound das int dec inc popa jmp scas jmp mov shll mov cwtl inc pop mov arpl cmp dec lcall loop cmp aam push sub sti jne mov negb aam pop sub shlb dec jbe xor xlat outsl ss xchg sbb jge es stos adc lcall addb push rorb popl mov pop add adc push in aas pop outsl int xor add mov lods push adc lods (bad) cmp xchg jg fildll pop je sbb ja and xchg dec cltd xchg pop sarb pop inc add mov pusha and lds aam xchg pop xchg inc adc ja cmpsl and dec dec and sbb dec fiaddl lahf sti mov fdivrl jne inc stos aas fidiv jns hlt cmp push movsb in popf lret jb dec inc xor and sbb fistpll dec int adc pop xor push dec and (bad) clc gs xchg test adc xlat pop dec pop popf or inc (bad) push lods sbb mov adc xchg xchg inc ss jbe cmp fimull lock cli lcall clc in bound mov jmp jecxz push jle pop out lcall or (bad) hlt es inc stos xchg inc push cmp loop insl xor aad xor inc lahf or loopne stos pop (bad) pop fistpl sub fldl2e stos mov jle cmp inc sub jne fisubrl sahf push addr16 cwtl fnstenv mov aas pop pop stos fsubl shlb sbb out add mov xchg sub fdivrs roll sbb mov lahf push cmc js test sub leave mov xchg xor and xchg sbb push in push sbb dec cmp xlat fcomp xor mov je push pop ret cwtl xor cmp push jbe sbb pop sti and and (bad) loopne cmp (bad) xchg bndstx mov lahf sbb sbb jbe jl xchg dec fcomps out mov mov int out lods fisub mov sub movsl push add aam sarb sub jg xlat xchg push jno (bad) mov sbb imulb in sbb cmp mov test cmp movsb sub loop jmp pop jns cld in jl arpl js sahf xchg popa or (bad) mov arpl test or inc and push rol hlt nop call inc cmc xchg int jb fwait add lock test xchg jg pop int3 dec ljmp inc sub or mov push xor inc addl sbb and in cwtl and in test in ftst fucomp into or lahf and push out inc pop inc (bad) out sbb pop jae int3 sbb pop mov lahf scas ret jp pop xor jg lret jl or cmc insb sbb pop shrb dec jns cmpb dec adc lcall or mov jae jmp or mov insb jl xchg cmc xlat mov out pop push int3 cmc test push pop sti int in in scas sbb scas pop (bad) jmp pop lock push inc les dec js cmp test push movsb std jns jnp adc pop (bad) mov push sbb imul adc hlt xor xchg push sub pop icebp mov add shrl add add mov jno cmp outsb cli (bad) mov rolb fisubrl ja mov in daa aad cmpsl add (bad) in adc xchg mov aam cmp cmpb lea push or dec shrb cmp xorl mov scas pop scas icebp sbb (bad) pushf mov sbb inc pop dec sbb rcl js test sub xchg scas cmpsb pushf or enter out int3 lcall cli aad mov sarl mov dec nop (bad) in dec mov rolb xchg lret out in aas or mov xor movsl pop mov out pop repnz mov push and xchg or imul adc pop mov mov mov pop fucomip add lret stos xor pop push push add pop shrl gs cltd cmp sbb gs push (bad) daa xchg mov push adc stos js mov lock insl insb jmp test mov push cmp jg cmpsl mull clc xor or sub sub (bad) lret ja adc add ja add adc mov dec jecxz jmp pop scas mov das movsb jb cli stos das push dec loope push jne xchg loopne fldt dec lea fisttpll sbb fdivr fwait (bad) xor mov cmp fiadd or mov jmp cmp push cmp cmpsl adc push push xchg outsl adc (bad) (bad) push sbb lret or add xor fstpl xchg (bad) les int3 fidivl pop and sbb add jns je push xchg adc add lock stos loopne das pop sbb cltd decl mov push push test arpl scas cs add jecxz mov dec add push pop ljmp iret xchg jp bound (bad) xchg cmp sub inc lods std cmpsl scas (bad) adc in push jo pusha pop addl (bad) pop inc adc mov push (bad) int3 xchg mov movsb (bad) stc mov xlat pop mov sbb in stc lea mov test push dec orl mov xor add (bad) es out jnp ret sub scas inc rcll xchg cld pop cmpsb jnp jno loop clc in (bad) out das test sub scas hlt repnz mov sub (bad) out cs xor xor dec cs outsb add pop jae mov sti cmc fstpl jnp (bad) mov daa add and fstpl or fstp hlt cmpsb je addr16 sbbl mov pop mov add xor call pop fistpl fldt ret (bad) popa insb in push mov clc mov push lea mov test jae ret adc pop cli add test loop dec push je call (bad) das into pop imul or aas xor add xchg or std inc mov and jne jne sub pop sti pop (bad) add ss and fild adc adc rcrb sub lock pusha call mov (bad) mov fcomip dec dec repz fdivr sub in addl loope outsb xchg add movsl mov inc fdivl push jmp mov push mov xchg aam int arpl pop inc aam jp in ljmp clc mov mov push adc dec clc mov addl xor movsb cmp shrb int dec leave mov (bad) lds cmp cltd sti push cmc push cmp int3 pop ds adc aad decb push mov icebp mov adc mov push mov mov aad xchg sbb jbe out js pushf fildl dec lods push jg adc jmp xchg (bad) inc js jecxz imul or shlb test pushf std test (bad) pop popa rcrb pop dec aas adc into cs or or mov jmp aas dec cmp gs and adc inc pop adc in xchg jmp lret scas xchg lods or or dec ror fmuls out int mov out and fstpl ret ja loope stos lret dec pop fildll push fdivrs sahf fist jb jecxz (bad) dec test mov sub mov mov sbb jns stos mov mov push sahf pop push xor lea cli arpl in mov popa jns test cmp mov or jbe lret or imul fnstenv inc sub jmp sbb loop pop pop inc aad xor pop ljmp in (bad) jp lret mov inc push (bad) flds test in cs popf test test jg dec ficomp add cs or jecxz mov jecxz in fild push sbb pop sti xchg push xorl cli pop jecxz xor addb sub in pop rorl repz sbb clc xchg aam xchg sub xor jl mov jp sub (bad) loopne,pn dec or int3 rol daa mov xor cld (bad) mov jmp stos fsubrl sbb jle cmp jl sub adc cmp ret popa dec pop adcl jl or mov in mov daa jl (bad) sub data16 mov xchg xchg (bad) and fmulp or in sahf fiaddl sbb jl dec dec lds loop ret jmp mov popa (bad) pop test pop out sub mov in pop dec (bad) mov push aad push push cwtl xor mov push aad cltd and xchg or dec pop xchg dec (bad) cmp sbb cmp stc mov mov inc in xor sbb cmc lea or lcall xchg mov pop push mov cmp dec lahf cmp lds dec mov std sub mov pushf out fldenv movsl stos (bad) cmc mov xlat pop cmp jbe incl pop in lods outsb mov subl and mov in or mov cmpsb int3 dec add adc enter push outsb stos and (bad) xor out ja call test push adc pop hlt cltd adc or xchg mov divl cmp pushf mov mov stos lahf mov sahf sbb iret pop gs fwait mov pop popf repz dec pop mov fs pop (bad) std jo outsb addr16 push mov or repz out lahf insl inc jb je sbb inc clc push inc lock mov xor pushf push xchg mov stos popa mov xchg loope popf fcmovbe xchg out push push mov mov stc jg fistp lods std sub sub push pop subb inc or imulb int3 out fadds lods call mov mov pop mov lahf or adc js jmp and out mov xchg hlt aaa sbb roll fs ljmp movsb pop sub and mov iret mov insl out add mov stc rcr dec dec fsubrs pop enter inc test fbstp jle maskmovq imull cmc xchg loope mov mov sarb mov cmp jle ljmp sbb push dec stos pop je ss pusha push inc (bad) movsl lcall cmp insb fldl dec data16 jge push fucom push aaa mov shr xchg jno add (bad) jo cmc push cmp outsb call mov sub jo hlt lea iret jns ljmp mov or rcll cmp shll mov pop pop xor fwait mov add and pop dec dec pop (bad) dec xchg mov sub mov cmp xchg xor or jbe shll jmp dec subl (bad) push int3 lods inc cltd add jp jb rcrb gs jmp jp inc addr16 cwtl adc orl in pop cs xor or cli ror cmpsb sub sahf in mov (bad) cmp dec or pop or arpl ja adc jle or insb (bad) or xchg lret lock inc in adc mov push rorl dec jbe insb in fldenv mov lret loop repnz neg imul push test sub cmp sti or cmc xor iret aaa call dec add (bad) repnz fsubrl mov ret fldl jg ss jno mov (bad) pop cmp cwtl out jecxz mov rorb mov mov push rcr lret inc mov cld xchg shlb lds addr16 shrl clc add xor mov je dec aad or mov mov fsubp sub mov test xchg cmp pop xor les (bad) loopne xor dec test pop mov push xchg pop mov mov pop vpaddd scas cld lods mov bnd ljmp jp mov mov das pop mov mov das pop mov mov aas add or add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoms add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb xor ja fnstsw pop mov push xchg mov cmp xlat hlt je or cwtl negb fildll add nop sahf add xlat aas gs sub popf pop add pop mov outsl jbe xor mov dec and jmp xor xchg mov xchg clc lret pop adc lahf lds (bad) add mov outsb loop sub push xor je test loope data16 bound in (bad) dec call call push or dec ljmp mov xor push std lods mov adc shll push (bad) aad sub jns cwtl mov mov inc xchg lahf in outsb arpl xor and testb adc mov xchg push shrb xchg mov sbb add in sahf adc and out out cli xor scas or popa movsb jmp push testb in arpl xor pop loop das adc repz mov clc fstl mov mov fwait or cmpsb ret data16 xchg or ljmp cwtl dec xchg cmp jecxz add inc cmp mov movsl cltd fstpl push push lock mov adc shrb mov or lahf ret cmpsb gs mov sub aam sbb mov pop (bad) (bad) imul (bad) je insl xor adc adc cs imul icebp mov cmp xchg add repnz fadd pusha pusha push cli sbb add cmp popf icebp cmp sahf test sbb out push ret mov mov rcr sub sbb and jle pop in jnp cmp das push mov dec mov (bad) mov xchg mov inc adc inc out mov or mov inc mov mov imul push repnz mov push das and xor adc add data16 add adc push xchg mov xchg sub or imul adc outsl mov adc aas adc test outsl jno fcoms test cmp and ljmp hlt push bound sbb iret in aad sahf inc aaa jnp int inc mov xor mov jg cwtl dec pop out xor movsl lcall xor lds adc xor repnz dec jo push in (bad) sti imul out mov jo,pt incl add cmp push dec fmuls mov cmpsb push inc jbe jmp ret xchg bound sarb icebp mov mov mov out shl addl and cld int3 enter (bad) idivb pop jge lahf roll add jmp push push mov xchg jg xor xchg jge mov fisttp cmp mov sbb inc lahf ficomp scas mov out mov xchg stos xor add cs rcl push mov out mov ss addr16 sub lods mov and and cmp out pop (bad) int3 mov js loop loope sarb pop or ljmp fnstcw scas data16 mov mov inc das cli add mov (bad) mov pop in jle aad testb dec das push xor mov cmc pushf fcomps mov (bad) xor loopne femms mov jno cltd cli repnz mov sti repnz dec dec enter repnz imul and mov mov mov add push test inc (bad) movsb jne lret add pop jmp mov pop int3 mov push mov (bad) imul ret ljmp lcall ret jle or fwait ljmp inc aas aam loop movsb loope dec push jg fucom or clc push ret shll xchg lcall jnp pop pop xchg dec in xor lods sbb push jecxz jecxz out icebp in sbb loope mov add mov inc insb in lret push mov mov movsl outsb (bad) dec xchg push bound push hlt stos adc gs inc lahf pop pop out cmc mov not in inc insl lcall dec pop popf ficoml sbb mov mov dec cld fisttpll jb pop or leave add mov dec cmp (bad) lret lods dec mov xchg push pop stos xchg jge adc jo jle inc out jl add es sahf lcall and inc mov push fildll lahf cltd repnz push mov loopne xchg loope (bad) pop jle pop cmp mov adc fisttp outsb loopne jge in xchg pop dec pop xchg inc push add fidivrl sub iret push and in sbb pop pop mov movsl in push fmull pop and lock xor lcall addl fs add insb mov pop mov sbb pop dec ljmp cmp mov outsl in in pop lds fnsave fist cld pusha and scas jb loopne mov add jp xor inc insb inc roll inc xorl sbbl dec and or xor inc lahf sti sbb pop sbb popa dec mov sub mov jo (bad) inc cmp scas insl rep sub mov dec pop and or mov lret add cmp and data16 mov out out mul fist insb cs push into imul xor push add inc xchg or jae dec pop call faddl add test jp xchg leave into xchg or pop dec test and ljmp pop xchg mov fwait xor jno cmp xor fs push add test into xor dec mov aaa jb gs outsb inc out in pop push fwait push jg adc popf mov sbb repnz adc inc mov mov or in pop push jmp mov mov xor xlat icebp imul jg lahf mov jae lods and loopne push mov add mov aad loopne ret fcoml xchg inc data16 xchg rcl jg inc mov jo mov and pushf add adc cmpsl call (bad) fcmove mov out push push pop and adc pop addr16 leave arpl in jbe mov add movsb jae in pop mov lret movsl cli add xor xor push bound ret aaa push and push cmp lret dec lret sub int lret sahf mov fucomi fs flds dec popa ret divl pop add por add scas mov mov sti xchg mov xchg aas xchg push lcall (bad) fistpll sub lods loop ds or iret mov xor mov or dec sub pop xor fnsave and push clc mov outsl jo mov cld imul sbbl jno in xor inc jns jl adc and les or pushf jno (bad) loopne push outsb mov push cmp stos imul or out ret pop xor and or xchg dec lret cs imul ret xlat xchg and mov cmp leave or inc jg adc and inc inc cld inc popa mov mov xchg cmp out or les mov fnop push loop loopne cmp add and push (bad) into iret push int3 pusha sti mov adc fisttp push xchg jne cmp push cmp mov out and sub push sarl adc xchg mov mov fisttp rorb inc pop lret push cwtl mov aaa adc sar xlat mov out jnp xor jle jns pop bound mov inc mov jecxz addr16 fidivr je int jo pop sarl ss mov int3 xchg adc dec xor test mov outsl cmp mov ljmp je lods icebp jo mov scas std in cmp js inc ljmp adc xlat les stc pop and xchg jmp ljmp fnsave in test (bad) ficom cwtd adc mov cltd sub cwtl out jnp lods nop push pop pusha jmp dec (bad) rorl push jle push pop aad add in int xor out or ret jo mov ss inc inc adc push pop leave rcrb xor ss mov nop cmp fcmovu imul xlat pop sub or and cs jb mov pop ljmp iret push repnz cli xchg out add and push add insl pop add (bad) xchg inc in sti test frstor (bad) pop and ret flds (bad) mov xchg pop test (bad) fwait sti pop sti sub into push add fildl cmp jg xlat pop movsb movl mov ja notb lcall ret (bad) push aam or add mov inc das ficom cltd pushf mov adc mov sbb sahf push fucomp mov test lods loope insl (bad) (bad) add scas fidivr xchg jg mov sub inc inc shr arpl ffreep outsl into (bad) js inc cltd xchg or jg pop cmp push push std int3 test mov push mov (bad) out jae fnstenv xor call loope xchg arpl outsl push pop stc sub nop rcrl fild int out sub lret jmp and mov jle mov mov lret push xchg inc mov lds and bound jg in push and movsl xlat lds push jae jb and push mov aaa int3 rep sub sarl scas test cmp dec jb cli ja or (bad) fisttpll push jecxz ss mov test sub lock mov mov push push stos mov and out xor aam lret cmp popa lret setbe adc stos jg sub pop iret clc sub add mov pop mov flds jnp loope inc loope mov mov inc scas (bad) cmpsl xchg mov push dec and xchg sub insl pop jae sbb scas or in xchg jae icebp push add ret imul lods (bad) push scas mov pushf jp loopne xor je dec mov loope push inc enter mov nop xor test jo int3 cmc push fistp pop pop add aas mov xchg in sub push mov leave xor push shll popa popa inc jnp jns add or sub jl mov (bad) jbe cli xchg sbb cmp and sub int3 jo add sbb test xor mov (bad) hlt and jl or fiadd pop adc out inc mov or xor (bad) sbb sahf mov inc mov lea mov mov or inc mov scas aaa push jbe xor cmp dec (bad) aaa mov test mov bound aad pop inc ds iret addl cwtl pop sti loop mov mov gs xchg je lret pop or push mov jmp icebp ret sub fdivrs mov fs cs mov cmp xor fcom mov and fwait mov lods mov dec jle jp pushf mov movsb cmc mov in sarl add xorl jnp das mov fwait cltd movsl into in sahf mov ss push sbb xchg lds mov das sahf outsl push aaa scas sub or push (bad) js ds cmp lods sbb push adc shll add sbb xchg outsb mov pushf push mov js xchg aas push push xor sar call pop rol lods loope push lahf xchg loope pop jno adc jae add fiadd mov or shrl mov push push leave pop push lods scas mov leave fisubr jg sbb ds adc cld outsb lods lret mov adc sbb mov jp xchg (bad) pop inc cmp shlb outsl scas sbb xchg sub les rcrl inc nop insl (bad) adc into aas pop jb mov or in push je fisttpll and in sti or test jmp push lods aad push icebp xchg adc sahf mov xor andl mov inc mov bound jae test cmpsb mov and xchg icebp fdivrl orl scas lock fstl leave push imull pushf sub pop nop cli jle fmull fcomps jns hlt mov out adc mov inc sbb mov cmpsl pusha les bswap (bad) push mov mov mov sbb insl dec std jmp push lea stc pop (bad) es test sbb sbb mov jl jbe,pn inc jno out pop sbbl test je in into push mov adcl repz iret cs mov mov sahf (bad) outsb popl jmp jl xor prefetcht2 mov pop and and jbe int3 inc jmp ss and iret ret lea sti jl mov push sbb xor cs daa lea in into xor loopne mov ljmp icebp fildll xor xchg iret in mov xchg cmp push push xlat ret aam lcall (bad) or pusha and scas xchg in ja addr16 movsl jg rcl add push insb pop jecxz jne jns pop lcall or jb xchg pop or inc leave push mov pop jns push add cltd movsb (bad) or rcrl push pop cli ret push jge cwtl mov jo inc xor pop insb xor sub jnp int and ds arpl push xchg loopne scas clc pop mov orl sub int3 pop xchg inc fidiv into mov movb adc mov (bad) dec or cs sti idivl adc mov mov scas jl inc rclb jns in xchg daa dec sahf cmp repnz xchg (bad) aas add loope dec rcll add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add outsl or add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add or inc inc push push aas rorl add lock int3 sub out test xchg insb pop fwait lock out pop push or in cmp jb jae push or push xchg lods cwtl (bad) and or pop icebp push add js mov mov push cli roll sub insb stc sub insb out mov lret sub push sbb jg popf out (bad) mov pop aad pop pop inc scas cli leave push jno clc in fnop out (bad) icebp push xchg sub das cmpsb dec xchg dec aam loopne mov adc adc fst sbb aad stos lahf xchg and int3 imul test stos mov pushf ss dec xchg adc mov and fistpll inc pop pop mov ss xchg sbb pusha ret (bad) std mov jb xor and (bad) sub addr16 ds in test push jnp cld push insl cltd jmp out aad rol adc test lods mov xchg jbe or mov test jg clc xchg cli int jmp popf lret pushf mov cmp pop pop mov insl js jmp jo xchg adc cmp popa ja xor test rorl inc je mov and cmp aaa pop jmp mov push fdiv mov mov and lahf pop repz jge enter xlat cmp jmp imul into xor dec mov popa cmc or lret push mov inc jae fwait xchg negb jle mov test fdivr test jns stos aas (bad) cmp fcomps jb xor inc (bad) popf mov enter adc pop fwait cld mov push cli test dec in je repnz pop outsb mov std dec xor and jae into fisttpl sub cltd xchg mov mov pop push js jp shr cmpsl (bad) fwait dec mov leave jmp (bad) (bad) enter jl cmp lret fwait lret jp mov push xchg in lods jmp lds popf xor test add cmpsb dec and cltd dec mov out dec bnd push mov arpl xchg (bad) nop (bad) repz idivb cs cli pop das sub movsb sub cld push and sarb jmp lret push lods lret (bad) xor push loop popf in fucomi in popl fnop addr16 or xor test dec out mov or repz jbe push xchg jmp jp mov das jecxz sti mov pop cli jmp jns cmp out stos mov test jbe push dec sar hlt jp ds add mov fucomip insl adc stc xor jns fwait mov and ds std out jnp jae gs adc gs pop es or inc pop cmpsl push in sbb repz sub cmp int lods ror push popa mov rcl cmc or (bad) (bad) push fwait mov adc cld rcrl stos sub ret aas adc dec outsl clc imul mov push sub lea xchg insb cmp leave loop and hlt pop mov cmpsl inc fld sub push xor out mov mov push imul sahf xchg sub mov ds fnsave sbb cmp lahf aas jne aaa stos cli arpl push stos insb push pop jae push push dec adc fwait mov adc xchg dec call xor mov outsl mov and inc xor adc jnp aas xchg mov decl cmpsb mov js pop pusha stos add repz call xor icebp cmp div push pop (bad) jge cli in jnp out push fldenv xchg loop imul xor test pop stos cltd out cmp je hlt push fmul adc jg adc pop pop cmp push or sub sub aad repnz xchg imul mov adc cmp into push cld adc push lock fild jno xchg and and and aas repnz ja mov sub outsl jge mov out mov fwait into jbe push cmp and or idiv xchg in sub cmc push mov xor xor pushf (bad) mov loope sbb push imul xor push out nop std fild cmp sbb pop add cmpsl inc pop sahf cmp jle jle sub sub gs dec (bad) out cmp or sti popa sahf stc dec es cmc mov incb and enter inc pushf andl jecxz xchg ret or xchg fs adc daa xchg mov jns jbe out int and jge jbe cmp pop insb jns ja cli shl test mov (bad) lahf (bad) or mov cltd dec xchg stos xchg fisttpl jb pop mov loop fadd mov mov lds in insb and dec sti mov fnstcw and xchg xor ljmp cmp cmpsl inc xor ljmp dec scas push add jg cwtl (bad) daa pop fdiv repz (bad) xchg xchg stos xchg dec stos mov xlat ljmp cld punpcklbw (bad) xor jmp outsl arpl out movsb movsl jg rcrb subl loope jl add loopne adc hlt pop scas lcall call popf adc cmpsb jb mov pusha ficom or dec out popa jns daa inc add stos in jmp call mov stos mov xor push loope outsl pop pop sbb shl aam jbe lahf (bad) icebp or adc in sub ret push test movsb movsl mov xor repz fisubr cmp dec lock pop aad fldl mov mov and push fst cmc mov std jmp dec pop jmp out jns add add movsl jmp test adc push jmp lock cmc (bad) jns out out inc or mov jg pop in imul cld push jb xor addr16 outsl mov push ret ljmp movsb jnp jl sbb fisubr sahf xchg inc dec imul loop cwtl lea mov nop adc sub aas inc out icebp inc in stos fcmovb aam pop or xor jae or cld arpl in fdivrl pop iret iret popa sbbl jecxz or cmpsl jno add arpl and inc notb cmp dec scas lahf xchg popf test out push movsb pop jmp jl sbb sub flds or fdivrs mov jge mov gs mov icebp daa ljmp jno fdivs adc enter mov ja dec or sbb in scas jb in sbb clc jp arpl sub dec mov cmp clc in lock mov xlat fmuls pop (bad) xor aad jb test cli jle fcomps subb xchg and nop aad inc inc push mov stos push mov nop cmpsb or adc sub rorl sbb ret add (bad) insb loop mov out mov fwait xor in or outsl jnp cli mov adc repnz mov aas push adc or addl addl addl push add add lods cmp push add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fistl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb add lock pushf cltd sbb es jae lcall dec ja insb repnz imul (bad) pop jecxz add pop jg add lea ljmp lahf xchg sub ficom mov dec ja dec xlat std mov loope addr16 stc mov xor inc add mov xchg stos movsl dec cli lds aad xchg frstor mov pop jb or mov outsb jle (bad) cli xor inc fadds leave movsb mov and out or xor jnp xchg inc arpl sbb sbb outsl (bad) ss pusha xchg test addl fiadd inc inc cmp pop xchg mov or mov sti sbb ljmp loop mov sbb inc cmovae sbb adc xchg mov add jl pop dec outsb jg mov adc and hlt loope dec mov pusha jns out shl jbe int3 pop xor push loope xchg loopne mov shll mov adc dec pop xor ret jmp int3 in push xchg (bad) mov ret (bad) push stos fsubrs cld add and and and mov in xchg add jmp add std cli pop aad adc cmp pop pop iret push scas and cmpsl push cmp mov xchg test xchg pop int3 in jmp dec fnstcw stos fcoms cli lods pop inc shlb mov sbb xor fwait imul into stc daa mov jle jne lcall dec inc xlat mov pop test in (bad) iret jnp int int pop mov fdivl or mov nop jno xchg pop inc pop dec out stc lock inc add aad cli push push or mov push mov jmp push mov dec dec mov dec cltd cli sti mov sbb cmp push cmpsb popa push xchg pop or and inc bswap jno pop iret sti sbb fs mov sbb and lods xlat fimull dec cli arpl jne adc lods xchg lock (bad) cmp adc std jnp roll dec dec imul adc cld cltd jmp mov inc bswap daa fstpt dec pop adc js add cmpsb addb repnz popa int3 out hlt loope int3 mov sahf je jns mov or movsl daa lea mov mov sti push sub inc data16 jno add push ret jmp mov jge jle test addb shl iret adc sbb scas outsb scas push push aam fldenv or lds (bad) fdivp sbb and repz decl push lods clc mov lods (bad) dec or sub mov scas and hlt pop jnp xor ljmp clc aam cmp and dec xchg mov inc xor jns jns sub adc bound mov mov hlt stos test ss adcl or sub mov mov cmp je sbbl movsb rcrb hlt ret mov xchg mov sbb mov popa mov push mov shrl les lcall test jmp outsb test xchg sub inc loopne sbb test mov add lret dec das and xchg inc cmp aaa gs adc out push rorl lea adc dec ja add adc jp push jne ja ss xor cltd or push jnp sarl icebp jbe cmp or adc dec mov pop add mov cmp jg fwait mov movb (bad) in push rclb cltd cld dec inc mov sbbl outsb mov loop push mov xchg mov mov cli cmp stc stos jle push xor addr16 shlb jle inc jns mov and xchg mov js sbb shll and cld pushf (bad) jno js inc xor out xchg popl sbb or test xchg pop daa int mov cmp (bad) bound xor mov pop jnp mov scas pop fcomps mov jmp cmpsb or dec mov pop mov nop jl push lcall popf ficom popf jl pop out jle sbb mov dec pop push sub aad in (bad) jecxz push pop (bad) mov test scas dec dec or aaa daa add and xchg pop hlt idiv xchg loope push add push outsb mov jecxz je sub pop mov out mov jmp mov fcmovu ds mov iret cmp sbb lock sub aas xor imul fiadd mov xchg cmp lods movsb push cmp jmp sub int3 or push push push jo repz cmp mov in repz test pop idivl dec test jns dec xchg cmp ret add and add pop cmp cmp and shll jae cmp add ja in sahf add mov lods loope (bad) cmc popf rolb in shr and xchg push ficoml mov fsubs mov xchg pop dec aaa clc mov jge aas cmp inc mov rcrl (bad) addr16 gs popf pop mov std dec sti push sub cs adc inc cs mov xchg cmpsl sub scas xchg inc cmp add cmp mov mov jns dec ds xchg bound aaa dec imul dec xchg push cs sub jl sub lahf subb out out cwtl cmovl sub inc xor mov fnstenv ret jmp push lds subl dec sti scas mov aam movsl inc movntps lcall or push adc mov fdivl mov mov jg out pushf iret cmpsb dec insb test xor lahf mov push fs ret pop out pop lahf pop mov cmpsl inc lret out pop adc cmpsb aam inc adc xchg setne repz pop aad dec dec loopne xchg xchg xchg jno (bad) negl xor mov adc push xor cmp and sub pop jb aad inc lea push mov mov dec jne sbb out mov test pop dec xor (bad) pcmpgtw push dec ret insb add insb cli addr16 mov out arpl pop pop outsb cmp out out mov mov jmp xchg lods clc test nop mov fwait lahf dec imul sbb push push adc pop ror sub cmc cmp (bad) mov inc pop mov pop adc outsb mov mov xchg and icebp roll add andb xchg std imulb and sub sbb stc adc push out leave inc adc ljmp and mov rcll enter (bad) cs pfcmpgt shlb lahf movsb mov mov mov out out mov sahf sub and xchg ror adc pop pop sub jmp mov pushf outsl inc test lods scas cmp inc xchg insl cltd loope pop jo push jbe imul jno jbe xlat fist mov mov lahf jge mov mov inc shr lods mov xor adc cmc loopne sub js sti cmpsb push sti ss imul inc push xor inc xor and jno int3 (bad) sub push cwtl repnz add xor pop or loopne out xor push cmp dec jge sbb push mov (bad) je enter add lcall dec adc out repz push (bad) pop adc xchg adc cltd stc pushf lahf andl pop or push pop cmpl jge inc mov mov push fs push outsb outsl mov in add mov and cs cwtl jb mov stc lret popl pop js add dec push or mov mov jmp es in stos out cltd dec test xor sti sbb mov in add lods ret out mov push ret sub inc xchg xor faddl lods cmc pop pop or mov jne (bad) sbb push rclb xchg xchg cmp das cmp mov lcall sti rorl daa out jns jo push (bad) mov pop nop shll mov mov imul mov imul mov pop or orl (bad) cmc cli and and add sbb mov das bnd popf cmpsl pop and jae cmp shll shr jmp jne fisubl jo das sahf lcall sti mov imul mov in shlb mov xor dec mov lods fimul and jmp test or xchg sub jl pop movsb fs movsl xchg loopne je enter in repz mov cs gs push lods inc mov bound shrl push push scas rcr inc push (bad) fldcw sub cmp cmp (bad) nop pop xchg cmp stos clc pop (bad) rclb adc das pushf lret mov fidivrl inc adc push das stos mov jno jns mov out xorb sbb mov sbb push inc add fidivr pop pop mov jbe int and mov loope,pn mov xchg (bad) sub mov cmpsb inc xor daa repnz xlat js mov jns push pop test mov test dec add sub xor or sub or mov lcall push jbe rep bnd cld std inc mov and fcoms test or pop fidivl out repnz mov loop leave mov aad fs js jo aad push sbb stos arpl roll dec mov sub (bad) (bad) xor push jl,pn push push mov es cmp pop cmp jle scas stc test in es push xor fs cmc mov xchg push or scas int ret sub (bad) repz or ror ljmp lea push call dec push dec repnz push xchg jbe in mov pop js lods js dec jae scas mov sbb pop daa out pusha test out inc mov xchg out mov mov in adc clc adc push ret mov aas pop sbb inc out and in insb sub sub mov mov sahf jmp dec xor jb push ds cmp (bad) or and fcmovbe mov xchg mov and jae lods loopne jb dec xor rcll and xchg jo sbb adc out jmp icebp (bad) push dec pop mov test push jae push and rolb adc iret mov add cmp mov sub push shlb xchg mov fildll mov push pop aam adc fwait rorb daa and aad sub jae popf jns inc inc push adc mov je stos sbb (bad) popf sbb xchg pop xor xchg cmp and in divl in cld fistpl pop outsb aaa inc jmp xorl cmp ret and ret cmc addl (bad) js sub cltd dec xor lock mov je mov int aaa jecxz mov mov cmc pushf sbb jmp out loope sbb push cld clc cmpsl rclb sti sbb (bad) or sbb int3 stc pop hlt inc addb cwtl aas pop (bad) mov cli fcompl cmp push lret xchg mov sarb subb lds push jae mov faddl dec mov sbb push vshufps test (bad) cmpsb ja mov insl adc push lahf fstl pop dec mov std outsl fadd xor (bad) sub lods les add imul add jle cmp cltd jmp into mov and push loopne fwait shrl inc test fisttpl int data16 std fpatan pop xlat xor inc mov fsub push sub sbb (bad) xorl leave inc (bad) sti sahf rcr fdivs jg and mov test pushf or add imul mov (bad) adc lods aaa test cs lods lea jmp out scas jecxz xlat cmp clc cs pop cmpsb aam jns cmp mov lds movsl js xchg in push mov add pop dec push mov sbb in clc rcll jae dec xchg ja rorb add enter cmc add ret pop clc cmp mov gs or dec and fisttpl push mov sbb xchg fwait es dec mov jo push iret aam xchg jae dec test xor sahf pusha jae lods jb aam ss imul fnop cmp rorl jge and xor arpl cli (bad) cmp cmp popf fstpt inc call mov xchg iretw cwtl push fimul (bad) or and or dec or push lock repz lock scas mov and xor es sahf out test cld push push pop dec adc cwtl mov arpl and sbb dec jmp imul sub or aam into jp js mov inc dec addl mov loop push stc push or xor and or mov dec lret sti sti sub inc xchg or jno pop sbb imull mov data16 sbb or je out add push inc stos iret lock inc ret cld fwait lcall rorb addb push sar or mov sarb sbb iret jne ds call xchg add jle xchg fldt pusha inc and or lods (bad) xor xchg or jns dec ljmp popa into sbb ja std int lea mov adc push push jge test dec jo jo pop mov push mov lret sub rcr or dec sub shlb lret fwait jl sub fs adc loopne in push inc (bad) lock and hlt jb mov sbb sti dec out cmc mov shll jp call push cmp add psraw loopne push xlat inc add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fsts add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc mov shrl outsb xchg xchg adc (bad) je call je xchg nop out cs mov jne out cld (bad) ret std daa sahf jmp add (bad) xor call cmp push mov inc push mov pop leave add xchg xor mov adc push loop push ds xchg ss xchg lods repnz dec sub aaa out int3 loope movsb pop lds in push push cmp jge daa xor jno sahf loop xor ljmp xchg mov lods popf add cwtl loope push fldl push jnp jp sbb add xchg and xor pop cmp imul mov je popf add scas dec mov mov or inc cmp sub fistpll or mov loop movb add ret sub call hlt sub xchg (bad) dec xchg call mov (bad) leave test mov jge and push inc shlb das xchg sub sbb scas mov fnsave xlat sbbl push or scas and dec (bad) xchg push lret idivb pusha mov leave aaa pop sbb push push shlb and adc and add movsb xor bound in aaa xor add mov xor je ljmp pop mov jnp add aas cli bound cmp push fdivl stos loope and sub mov xchg or xchg cld cmpl cs ja or pmulhw mov fwait movsl mov mov pop inc jbe icebp xchg sub ret push test xchg push pop mov push mov movl int mov sub iret ret iret adc push mov xchg pop inc xchg lods dec jle mov push shlb leave (bad) mov jecxz xchg xor ss and xchg push cmpsl sarb cs shll (bad) lods mov lock add mov inc dec inc lcall daa out inc push pop inc and mov iret adc pop stos adc cmpl inc fldenv pop adc xchg arpl cmp aas sub sub adc in jge repz cmpsl rorl push arpl sub out popa xor inc push addl (bad) je ljmp mov mov cmp call insb (bad) push xchg adc lret mov mov insl push cmpsb mov fwait addr16 imul loope je sub hlt movsl dec pushf in dec mov aaa dec xchg enter push mulb sti cld fsubr mov andb arpl push ja outsb mov xor pushf in stos mov inc xor dec mov mov shl cmpsl into sub jns (bad) inc scas das sub daa cli fs lret stos cs repz imul xor push sub pop xchg rcr mov in mov arpl test das and sbb in fwait in scas mov jmp (bad) fsts xchg out pop (bad) mov hlt adc cmpl dec ret xchg stos je jp addr16 mov xor inc add xor sub ret inc repnz bound stos test cmp inc imul add test stc push (bad) repnz mov cmp mov mov out push pop out scas jae es scas cmpsl jne jns int add xchg fisubrl (bad) mov push out or in imul pop repz jmp loopne mov cmp loopne pushf repnz adc loope ja mov (bad) out xor fnop fadds jnp sbb gs pop fmulp or hlt aas popa insb (bad) je leave stos sbb outsb pushf enter lea fimul sbb cmpsl pop adc js setb add push scas adc xchg push mov fstps dec andl fnstcw insb (bad) aaa sbb inc loop and pop cmc daa test ds repnz or and mov xor sub sbb lods daa imul pop dec fdivl add and movsl cltd and lods arpl rclb cmp mov int test xchg stos pop out cmp loope dec mulb mov sbb test push jmp push mov pop mov and pop dec jo sahf subl cmpsb or outsl adc ret xchg icebp repnz movsb xchg fs jp pop adc adc in lret dec mov jg xchg in mov add mov or ja iret test js rclb mov push pop push xlat dec std sbb inc mov lahf sub data16 loope mov xchg fs setl jmp push cmp loope outsl ja push cmp mov ljmp notl (bad) insb adc sub sub xchg ds repnz lahf fidivrl jmp and jg pop outsl es mov (bad) stc clc mov cs fcmovb fmuls movsl or inc insl mov jp inc fdivp ja pushf xchg lea cltd scas push lds cmp in mov imul mov cmp mov add scas arpl xchg in (bad) ds sbb leave add popa aad jb dec cli in cwtl mov pop in daa add movsl mov xchg xchg cwtl mov adc imull aam push into cmp jbe rcl in sub popa push stos clc addr16 mov cli and (bad) mov add aad mov jne fdivr sub lock xchg or inc pop cs xchg shrl xchg imul sub cld mov add scas (bad) xor cmp popl jno cmp test ret sahf xor fidiv aad int cs mov sbb push pop pop xchg pop cmc gs dec les dec sub xchg sti dec push (bad) popf jb add mov das xor cli (bad) int (bad) ja or cmp xlat inc dec mov loop mov nop cmpsb test dec push repnz jmp rolb add cmp out out hlt sub test push sub xchg jg jmp dec fnstsw jnp (bad) lods jb mov mov in cs iret fidivr sti stos pop jne sub dec stc cmp movsl bnd mov adc sub or (bad) jmp dec rorl mov aad pop insl add aas mov insb and (bad) mov sub stos fcmovnu jmp fmul rcr jne push mov push int pop pop in pop pop jo cmp jb jne fmuls fbld movsl enter xor cmp jae and jg or jge test mov subl shll popf mov mov out xor xlat jge das shl mov push push loopne and inc lret add stc fstp das divl adc xor sub leave xchg xchg sub adc jmp iret xlat aad das lahf adc pop arpl outsl push and push arpl mov mov lcall sbb fimull or (bad) rorl fstl add pop jmp ja inc cli dec pushf cmpsb mov pop pop lcall bound (bad) aaa (bad) xorl lcall push addl mov frstor jbe push sub js mov loopne addpd jmp mov mov xor sbb jno dec sub push jp imul repnz pop mov dec xlat test and cli mov fs aas jae dec or mov sbb adc test les mov pop pusha xchg push or stos inc xchg fcmovnu fsubr leave jle lret jb mov in sbb mov movsl mov cmpsl lock add lods test mov ljmp fs outsb and js divb jns out jno arpl incb push sahf icebp shll push or pop lods lods das mov add add mov je (bad) push das mov orps jle je sbb xor fmulp dec fisubr pop (bad) jbe sti jno push add enter arpl and ja mov repz mov inc inc stos adc adc and int and xor lea icebp pop mov mov enter ss subl mov inc pop (bad) push movsb and dec sbb bound sbb lock aas mov outsl mov sbb inc int3 mov xchg in jae loope sti cmp fsubrs movsl loopne mov push pop in sbb mov fsub dec mov and mov mov xchg jl ret dec cli ret sbb inc and icebp mov inc loop dec jle xor fildl (bad) xor jmp aas fdivp adc mov cli aas fwait loopne cmpsl negl imul das ss cmp loop cmp sub jle inc xrelease lds and jb push (bad) outsb (bad) subl adc jl or dec (bad) fistpll les inc cmp or sub lcall mov pop sbb rcrb fcomi pop dec inc in dec sti xor imul mov icebp fwait (bad) shlb add mov scas and scas out out mov cld pop (bad) xor xlat inc xor adc mov jns xchg xchg sahf push enter imul and lods (bad) adc les and mov push jge push cmp je lods (bad) popa aaa push (bad) loop xchg fdivs test mov and repnz fsts jo subl ret loope scas andl cmp (bad) (bad) jp lret cmp test aas mov sar out in (bad) lock jl shll cmp sub jno cmp add popa stc ja mov sub int3 test cs cmp adc push xchg in int3 popa mov push pop lods test and cmpsl pop pop pop adc sbb dec dec mov xchg dec dec fiaddl sbb fdivrl push cltd jp pop mov jmp fnop cli mov push jnp dec es aaa adc repz inc and xor xor imul mov mov dec jge int fwait clc or mov stos pop rorl sahf mov shl lahf mov lea adc push mov cmp pop fcmovnu sbb mov aam xchg fwait pop xchg sub rclb popa out jge sub jb movsl mov sbb (bad) lds add or or jns push loop inc enter inc or jbe mov mov mov lret ja gs jg leave jno jae inc scas jp,pn js je push jnp xlat xchg xchg dec pop aas inc mov mov xor and or sub jecxz leave js sbb and push lock aas xor and ss xchg sbb ljmp dec (bad) mov cmpsb insl ret mov lds xchg cmp cltd pushf loop das call lods (bad) ljmp lahf out dec dec pushf or adc or sub dec sub les rcll mov (bad) sti mov cltd jle repnz stc enter mov fiaddl add xlat clc push xchg ds sarb cmp add pop push mov dec add dec jmp xor mov (bad) fdiv xor jb sub or jmp sbb in and pop cmc sbb push mov add enter mov ljmp (bad) jb aad imul sbb into outsl testb jo mov call cltd pop push push insl jae xchg add imul mov sahf jbe ret out lret loope into xchg ljmp pushl sbb (bad) xor sbb xor loopne and test dec inc and push xchg (bad) cmp loopne or mov lds mov pop icebp pop jge inc inc repz mov pushl xchg test negl sbb or and in cmpsl sub divb (bad) pop xor xchg pop lods dec movsl or inc fnop lods ds loop mov loopne mov sub mov fsts (bad) cld fidivrl (bad) cmc lods push xchg mov (bad) cwtl das cmp jae cmp sarb jmp sub pop les inc pop in (bad) repz cltd inc mov push movups xor stos cmp pop lret es ret sbb dec adc ljmp (bad) call clc lds jecxz cmp push mov test pop lret xor out pushf insl dec jo xchg jge fs dec mov ficomp sub hlt dec mov mov lock xchg inc loopne (bad) fsubl lea xchg shlb xor inc pusha icebp sbb or mov rcrb jb lahf or sarl mov sbb (bad) ret negb push arpl ret popf jge icebp mov aam sahf push ss js sub xchg jne fldcw in inc jl inc cli push pminub repz xchg add sbb jo mov sub jg mov push fs ret mov js push lea clc in jbe jo nop mov cmp jno mov mov or push data16 push cli adcl mov inc jp add jmp out mov pushf mov inc mov scas in mov mov mov and push in (bad) inc loop shlb xor adc dec pop movsb dec xchg stos (bad) data16 cmp add mov ss push mov xchg ret or jno (bad) and adc (bad) mov jno xchg pop cld loopne add xlat or out mov sahf into and dec sti jbe push adc arpl sbb cmp hlt xchg shrb pop je and in xchg cmc mov daa lcall and outsl rclb (bad) sbb dec sbb (bad) test test mov xor or or imul into aaa jl xchg mov (bad) sub (bad) (bad) mov dec inc mov jecxz jmp mov (bad) std mov push int3 cmc add jecxz fdivrp sbb jp ljmp jp ljmp add incb push sub push or add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas fmull rolb lahf sahf lcall je ss cmp mov dec dec dec movlps jns mov dec ja je sbb stc cmp fstpt pop (bad) pop add mov push sbb sahf (bad) xchg pusha lahf in ficompl pop and ret adc cmp dec (bad) in jecxz and daa (bad) xor test mov mov dec (bad) stos jne jmp fwait aaa int3 fldcw mov sub inc inc fistpl scas and fwait mov cmp dec movsl xor or in xchg sub andl xchg into imul cmp xchg insb in xor loope push lret xchg pop (bad) jecxz gs gs xchg cmp imul outsl mov pop xchg sub aam loope sti out xchg cmpsl mov fnstenv push aas clc jnp fsubrs xor pop std xor out imul push jne stc or xchg andb movsl cmpsl sahf adc ds xlat jne lock out popf cmc gs xor scas mov mov rcpps push jno jmp js nop jecxz loop mov sub loopne pop lcall cli xchg repnz dec dec pusha lahf cs in imulb je fisubr add xchg push mov lea cmc push jmp fbld mov xchg xchg dec (bad) aam mov push ror push stos lds jb (bad) pop adc arpl stos xchg cmp push mov pop shlb push jecxz sub loop push adc pop jle gs jle mov mov jb icebp or gs mov xor insl sub sbb xor sub lods bound iret in xchg les add mov jb gs push outsb add leave jnp (bad) sub stos into mov mov test sahf aad movb mov imul or xchg pop fwait xchg (bad) repnz dec mov xchg dec jl mov popa repz push lret lret (bad) rcll mov cmp xor arpl int fnstsw and les inc imul or loope mov clc out ss push and in dec daa add mov push xchg sbb dec xor adc or lods lds loope (bad) cld cli (bad) jb stos mov push lcall mov and jmp mov pushf push mov sahf push enter ja lock int (bad) or xchg or mov lock adc cltd cmp fs cwtl scas mov hlt and mov jl jbe mov cmc cmp scas cmp dec lods pop popf pop adc (bad) inc jns lea sbb pop jg scas movsb cld pop rcr lret jne les ljmp enter lock jmp in lods jo iret fxtract imul mov cltd or jg sbb ljmp push lret mov icebp jne mov xchg push mov xor loopne jl int3 lds fs mov mov scas repnz shr lock and cmc push jb test mov xchg jmp (bad) adc test (bad) mov lcall cmp mov insl and mov adcl out dec fildll fildll and xchg xchg jnp mov mov frstor gs mov lret test popl mov addr16 int xor mov or repnz inc mov sbb mov imul jl add mov cmp pop js imul pop pop bnd jbe mov dec sbb or mov (bad) decb push push and sub inc rorb pop stos push or dec add in adc ffree or mov push fistp aaa mov or pop clc sub sahf test jle lea xor ds cltd scas fsubr pop les mov jbe push inc xchg nop jbe mov jnp push cmp and test adcl push jae int3 jecxz into out lea jnp iret and fs lahf fstps mov dec addr16 mov icebp repnz pusha and mov stc nop sahf jb ret int das iret daa jns sbb mov (bad) rcrb into and push cmp fmul lcall mov repz mov lods fbstp or stos jae ss xor mov jl xchg repnz xor js cmp mov enter mov iret mul adc jns sub push add cltd or jbe xor mov xlat fstpt dec push inc inc mov hlt sbb stos icebp pop imul xor clc pop xchg push dec enter dec mov je orl push adc sbb push jp jmp in in mov ss push cmpsb ret enter call leave mov or call nop jl dec inc add dec add pop mov push pop out aam sub nop shll dec out pop add scas stc sbb repnz jbe pop cli test out sbb (bad) mov fisttp inc lret mov fisub inc jle pop xchg sbb fwait lahf cwtl or aas jnp movsl mov adc ret aas mov loope pop jmp shl jl addr16 fistl dec pop repnz cmpsb enter pop lods (bad) xlat int cmpsb repz imul outsb loop insb lods dec out cmp adc adc (bad) and mov sub inc mov stos xchg pushf (bad) ljmp je jno mov into fbstp and inc add stos (bad) loope mov adc insl lds in mov pop stc icebp (bad) fdivp scas jge incl xchg notb fcmovnbe sbb and cld inc jnp and or pop sub jne mov (bad) es lcall add xor xor cwtl movsb cli fwait inc in fwait jg clc add fild inc mov push (bad) inc cs mov push pop or or push dec inc cmp fbstp dec (bad) add (bad) clc sub lret (bad) pushf inc jle (bad) mulb test js je movsb pop mov (bad) scas in loop or decl aad (bad) ljmp neg lret jle mov enter shrl or je jmp jge dec aam dec mov jo in dec rol sub inc pop pop (bad) ja xchg mov and jecxz stos lds dec cmp fdivs lods insl push in popf adc adc xchg imul sbb movsl aaa jne dec popa pop adc (bad) mov mov add nop sti cmpsl dec movsl xchg bound mov iret lret sbb popf int loopne jmp and mov sahf enter paddusb bound xor pop mov jns push xchg or mov outsl repnz je add xor xchg dec mov jo inc out imul mov cmp gs jge inc scas divb test out (bad) xor fsubs (bad) sub (bad) mov mull int3 fisubrl inc or adc push fs or pusha into cmpsl and jmp and ret outsl subl jbe stc xor sbb pop ljmp cli mov aad add inc add inc xchg stos push out and mov or xlat or lock cli test (bad) pop xor test outsl pop outsb lods adc movsb mov loopne iret out fnstenv mov addl lcall ret push mov clc lea xor ss and rclb lcall repz movsb outsb in neg push mov mov lretw aad fisttp outsb into push repz xchg or adc js aas dec mov mov mov outsb lock cli jb dec push jnp fs adc xchg daa mov mov add jbe out pand inc int3 sbb sahf jo rolb aas inc adcl mov icebp cmpl mov pop inc sub push jge jnp iret xchg sti xor lods (bad) test push cmpl cmp xor or dec adc pop in inc clc movsb adc add jb adc (bad) test sahf scas cmp inc cwtl pop inc jge pop pushl cmp inc xor sub das cli lea cli xchg cmp scas pop pop push cmpsb mov xlat mov icebp pop test add push cmpsb mov xchg (bad) pop mov imul push std outsl or xor out stos rcrl addr16 cld jmp sub pop int3 loope andb push dec push cmp shrl cltd imul push jne lret outsl shr mov xor icebp mov rcrl test imul rcr dec dec mov dec mov daa push inc iret leave mov push pop lods aas pop xchg mov xchg repz cmp les add mov adcb les mov arpl push inc cmp mov (bad) push jecxz sti in leave sub mov and add rcrl movsb jmp push pop mull xchg cli fdivrl adc mov inc jmp push lcall mov lahf cmp push inc dec or mov clc rorl sti lret mov popa ret mov movsl fdivs mov push xlat mov lcall or sub cmpsb mov xor add (bad) int3 sbb and (bad) (bad) mov ret clc cmp inc clc ja lods mov sub dec jnp push inc dec das or add sub sbb mov std ja,pt insl mov sbb cmpsl ret jle ds and push lock out mov mov std push xchg mov jbe icebp jb subl push fisttpll rcrl jns,pn (bad) dec add inc ja repnz mov iret imul mov paddq sub mov fsubrp sub (bad) jecxz fs mov in xchg popa sarl in xchg mov ss stc test lods mov or pop pop mov push mov mov cmp push xchg push mov cld sub mov mov pop jnp lods jecxz stc inc mov xor sub inc aad mov xor jp push lock insl ss test ljmp mov and lock repz mov pop push jae sub (bad) lock cmp mov ret lock andl das xchg out test mov adc xor cwtl and push mov xor loopne mov push (bad) test jle fwait fs push movsb pop inc arpl pop dec adc sbb bound lods daa out push addl in imul push pop pop jge inc (bad) cmp inc fs cli sahf in popf mov iret cltd pop sub xchg cmpsb or (bad) std sbb dec xlat lcall mov xchg dec mov cmp add es stc dec sti (bad) mov dec lods jns ja adcl and sbb iret push test add dec insl mov adc push outsb pop jmp lret jns cmp and add ds repz fbstp and shr sti insl negb int outsl inc push repz add mov mov cli mov fstpl or push mov popa and xchg xchg aam or xchg push pop xor js sbb mov mov lahf sub push mov rcr (bad) pushf add xchg notb push addr16 aaa (bad) mov sub mov mov scas cli and sub fmulp pop movsl xchg jnp sbb popf push inc sarl push repz lds pop mov aam push pop jb mov or mov add mov cltd xchg or push js sarl ficomp aas xor lcall and xlat adc lods ror cmpsl add push nop jo push cmp cltd pop rorb jge std ljmp nop xor pop or jae ds js aas sub mov inc pop ss lahf cmovb std dec mov fisubl stos les mov mov jge stos jo out cmc pop sahf pop mov pop xchg ret pop dec popf pusha (bad) sbb push inc dec bound outsl push add movsb jp adc pop jl adc mov sbb out out jp or (bad) xchg and inc push xchg lods xchg test int lods and add sbb cmp jb dec push jecxz stos ss lret call mov lds and int xchg in imul pop adc pop pop add jmp or and test cmp pushf shll cltd push out (bad) stc cltd jno mov scas sbb imul arpl push push pop cmp loope shrb flds fistpll lahf (bad) call sub sub (bad) adc insl xor enter xor stos xor pop mov add fcoms inc into enter pop shrb mov leave in mov cmc fnstcw test jge ret lcall push out test push dec test sbb lods push push mov sbb cmpsl data16 lret inc out rolb outsl rol xchg jae jmp xchg xchg lds lods and xor ds inc lods mov dec dec test in jno bound mov and divb gs push in fsub aas sti mov inc mov sub testl jne adc sub push test mov dec popa movb mov and add cmp je gs iret mov xchg sub jb sub mov mov xchg out in inc or or inc into cwtl lods das inc adc xchg push inc data16 das out mov mov or inc loope mov adc out jae sbb (bad) lods cmpsb ds in sti and push push js aaa xchg adc lcall sti and icebp add sbb das and in ret imul adc sub add hlt bnd roll lock addl push cmp lock lcall add aas or es add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push aas sbb rolb shll cld jne xlat mov xor xchg fsubr out out leave mov jno imul sarl je dec (bad) jo std mov pop jecxz add push ret pop int3 in mov jae push jno dec sarb int lahf or sbb daa (bad) mov push movsl in xor int3 out ljmp int3 xchg or xor jbe cltd push (bad) out repnz dec inc dec push imul lea insl (bad) mov ret outsb call xchg pop out rcrl add or sub mov test test arpl xchg and outsb mov jp xor nop pop inc xchg sbb ljmp mov (bad) sub (bad) roll xor stos loope mov or pop ds (bad) adc test sbb xchg in stos and jl push mov mov dec icebp lcall mov das ret (bad) jno inc out mov decb mov mov pusha in mov mov push (bad) xor out jg dec lds (bad) loope out rcll pop int3 addr16 fs xor jo ss jbe test or push pop ret scas aas pop nop cmpsl add movsb push test stc out mov lods enter imul les xchg rorb jo adc add sub mov ret out add loopne cmpl fidiv int dec xchg pop sbb push jmp push push (bad) sbb lret scas pusha cld scas jg cmp scas pop mov jle lret mov scas aam mov xchg iret test push movsl cmc xchg mov je mov sbb movsb fdiv mov sub mov stos mov pop mov sbbb fs popa loope add test sbb xchg scas push mov (bad) mul lock pop or insl sti xchg test mov dec xchg push iret pop xchg and loope lds sbb cmp dec in cli stc push jecxz sub das repz into gs sbb loope adc xor int loope sbb inc rcrl adc ds xlat inc mov std enter daa in ret mov cwtl fwait xor cmc sub cmpsl xor mov mov cmpsb pushf clc pop push nop inc sbb cmpsb imul xor or stc dec xor add hlt inc test mov sqrtps lods (bad) loope ss push mov (bad) cmp xchg (bad) adc xchg mov mov jmp idivl or mov stos fidivr push add push inc sbb mov imul adc inc es jnp push outsb je push ljmp pop fdiv push push ja sarb gs xor out repz imul cmp leave fiaddl mov hlt mov clc inc fwait (bad) adc ficom jmp dec ss stos xrelease (bad) cmc and insb outsb sbb sbb mov dec imul mov lock movb sub dec jns push subb xchg loope test gs dec or repz lret loop jecxz cmp decb xor ss mov rorb mov jg mov (bad) (bad) movsl or sbb xor in sub rol or lods jae cmp fcomps sub inc insb xchg sti and pop xor ret lods and inc add push xor mov jns aam test inc and stos ja add es push inc scas jne sbb inc pop inc (bad) jle jmp imul (bad) repz (bad) add dec divps sub xor push mov outsb sbb xchg push iret nop lcall aam jecxz call jp scas pop ret fdivp mov xor leave fscale xlat pop hlt scas pusha cli xchg dec xchg cmp rcrb and les (bad) push mov push sarl jae xor test repnz pusha dec inc call aam cltd push out pusha sub out sbb out fwait pushf xchg inc mov push xchg sub aad stos mov cmc stos shrb js mov negl jo cmp push or in in cld cmp add data16 je aas lret lret cmpsl push test clc xor (bad) xlat jl push int3 push or inc add pop clc xor push xchg jae (bad) (bad) push or pop mov lds mov add mov out cs std sbb or notb jge xor add fidivr add or jne nop mov movsb dec pop rol cmp out sbb cmpsl ret pop dec insl ljmp in ss dec out push push imul inc push xor std dec icebp repnz ljmp idivl scas jo cs ss (bad) mov jl mov ficomp cmpsl std ja sbbb movsl in stos pop cmp inc mov std jno pop add stos cwtl pop int3 jl cmp or mov push jp fiaddl out inc xchg bound xchg inc iret xor js loop dec jnp mov xchg jnp loop dec sbb fisubrl cwtl adc (bad) popf bnd sub cld ror add ja imul push jns mov ret and movsl test push frstor outsl fistpll xor fs cltd dec mov add nop adc dec jle push push inc mov aam pusha jecxz jo enter xor mov (bad) ljmp pop stos jmp mov cmpsl jp fsubl mov push mov or sub lods mov out adc push push scas sbb pop aas pop (bad) imul inc in cmpl and sahf call sarb cmove icebp mov fisub fsub pop in adc sbb push scas loopne or das push lods popa push test sbb pop xchg inc sbb add out jmp int mov inc jne sub mov (bad) pop ljmp push fldenvs leave adc xchg cmc data16 push adc stos lret pop pop (bad) adc mov dec xor pop xchg outsl inc push xchg into pop or cli sbb mov inc aad cli icebp mov popf jecxz pop sub and push test mov pusha mov pop inc push call mov mov mov fild or jnp (bad) repnz xchg pop shlb dec pop dec jae ds popa fisubr sahf adc test sbb in mov or cld and dec cmp push loop adc iret fbstp jno into out adc ret and push inc ja inc scas xchg mov inc jmp mov push popf add aas and lret int scas mov add in cmpsb sbb js scas ror pushf jnp mov cmp push mov test cmp push or stos stc jbe xor pop mov xchg cmp stos mov and repnz fisttpll aad mov xlat adc das push sub in mov adc std sahf dec push inc dec pop push sub mov inc mov stos push fwait sub pop fnstsw fwait push sbb xchg subl dec cs int fwait je push sarb jge cmp bound fmuls sub jg mov decb dec mov pshufw or fistp push xor daa mov mov xchg aas out mov in xchg jo movsb lock adc les adc dec rcrl daa push xchg pop sbb dec mov push (bad) xor jo and shrb out mov rclb cmp inc rcl les adc insl xchg inc jg mov (bad) add (bad) test (bad) mov rolb ds pop fnsave insl das jl add xor stc sub dec stos jle xchg repz sub jb out out and adc mov icebp imul aam dec or roll xor aam mov inc (bad) mov jge std xchg cld mov inc push rclb ficompl scas (bad) jbe mov popf or jl cmpsb push xor cmp mov mov or (bad) cmp pop and xor das sub pop xchg sbb inc or jg xchg fisubl and pmulhw lods rorl or pop aam pusha pop fsubs inc fs iret sub adc jl gs outsl popa orl jno in cltd int3 lds mov data16 fadd xor mov stc (bad) jb dec xchg hlt ja dec fisub cmp lret cs push cmp xor gs into adc stos cltd test roll mov loop push rolb jecxz push adc leave inc mov (bad) imul cmp (bad) mov pop icebp roll pop nop xchg inc lahf cltd push dec aaa popl test fcompl or adc imul and mov incb dec adc adc push cld lods std popf push cld or ds out add or stos pop aaa push and nop hlt out jne mov mov sar cmpsl mov adc xlat sbb sahf loope pushf lret (bad) adc outsl cmc pop pop xchg xchg outsb pop loopne fwait inc and insb adc or negl icebp lds sbb mov das push call (bad) cmc dec icebp inc push xchg cs lret fcoms lret jne jle sbb lahf ja cmp bound inc cmc lea cmp movsb mov out insb cmp sbb ljmp shrb lahf pop rorb js cmp pop and mov popl and xchg pusha insl aas and adc stos mov arpl mov mov xor pop fldcw adc and mov shr out or sbb sub stos lahf lahf sub xor sahf and hlt inc ja int cmpl out int3 enter add mov mov xchg and mov mov push (bad) cmp dec pop mov xchg mov (bad) in movsl outsl add stos mov inc jbe lcall xlat mov mov sub ljmp mov cld push pop add inc (bad) mov sub mov and mov adc sub roll xchg add sub mov outsb xor or jg scas jp push inc mov inc test jns add insl pop mov in pop into pop rorl xlat (bad) and push push aam push sub mov aad jmp jns pop out dec leave fs jb xchg aad jnp (bad) xor pop adc and scas mov outsb dec push leave sub mov jmp and inc adc mov es xor xchg fimul lret mov cmp fsubrs ret xchg fs add pop call clc add cmp sahf sarl sub out cmpsb nop jae mov add and lds test (bad) or rorl sahf sub or sahf insb mov mov (bad) mov dec ret sti inc movsb dec push mov push push push insl and mov cwtl dec cmp jbe mov xlat mov pop cmpsl push leave mov inc push push out sbb sub mov xchg add push cltd sbb mov xor test add mov add jnp (bad) cmp lahf mov or jmp cmpsb xchg scas cmp callw into dec dec pop jle les and lods sbb (bad) je cmpsb in pop xor jecxz or cmpsl js and (bad) xchg inc mov test fdivr arpl movsb xchg mov add or jmp arpl in cli mov jns inc mov push mov or loop adcl imul mov arpl mov jbe mov cwtl dec adc sub aaa mov pop pusha jmp repnz fldt xor stos jge mov pop adc dec outsl icebp out repz (bad) adc gs xchg cmpsl sub stos adc push jp test ficoml dec lcall sub lea jecxz adc pop and xchg lea sbb jb mov xor xchg xchg xor (bad) xor and push xchg adc test jle lods mov mov out repz ljmp jl into ret fwait (bad) push jo inc (bad) jecxz or pop sub idivl adc dec fcoml adc adc push repnz ret cltd scas inc jp sbbl add sub jae xor push mov push push addl je push rcl jnp int3 jecxz push add (bad) dec stos stos jns mov out cld mov (bad) out push xchg ljmp faddp cmp fidiv xchg daa mov negb add sbb mov shrb mov xor push les loop,pn idiv cmp faddp cmp mov movsb sahf sbb pushf (bad) insb dec clc sbb push jg sbb mov (bad) and dec into loop xchg adc stos push or sub ja mov adcb adc fsincos fstpt adc mov in into and xor xor fimul adc sbb xor mov daa and insl sub xor inc outsb adc pop rcll daa in pusha inc out and imul xor fidivl mov bnd dec inc test mov ds ds aaa xor inc mov icebp (bad) xchg outsb mov into inc or inc std ss pop (bad) adc pusha push fwait sub fidivl pop les icebp xlat aaa mov jbe dec out int mov jmp mov andb (bad) mov mov fidivl cmpsb cmp adc sub leave jge cltd lods aam in test jb sbb aaa add add inc mov sbb test sub das out icebp xchg xchg fisttp out (bad) stc cmpl xchg inc les mov push outsl clc xchg in sbb inc out add inc loop add cwtl push daa scas mov inc scas adc add cwtl and xchg jl adc cld inc adc arpl jmp cmpb mov icebp repz sub imul dec cs jmp fadd push lock subb out inc (bad) mov iret sahf cmp mov iret sahf cmp mov aas add (bad) jns lret pop (bad) add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb (bad) mov dec fnsave push cmpsl mov aam jbe decb aam or pushf mov mov je xor idivl mov add xchg inc cmp push aas push add mov rorl mov insb adc setno pop rolb jp add mov sub or popa iret and push das push push sub insb insb push loopne cmp cmp pusha add lahf xorl test jbe ljmp cmp jae cmpsb xchg repz mov stc jmp push cltd loope cmp popf arpl xchg xchg test mov nop or mov mov pop dec sub adc js (bad) adc sbb out imul mov imull (bad) mov xchg insb sahf adc rcrl ja adc movb testb mov and mov in lds inc mov sub mov icebp outsl pushf rcrb mov push pop scas bound inc test lcall mov (bad) mov pop pop ret sub (bad) xor dec test or jmp cmpsl push cmp push or jecxz pushl mov cwtl ja xlat fwait cmpsb cmpsb pop rcl sti aaa add mov jle je into inc in sbb pop fwait loope fnop popf sub in out ss std daa or sbb push sbbl test mov push cli pop mov mov imul jmp xor divb dec jp pop lahf or aam loopne cltd mov push sbb push movsb orl add sbb inc pop adc aaa xchg stc mov insl dec mov icebp (bad) in adc das xchg testb jo push and in cmp add mov mov jge popf ljmp movsb sahf push mov xchg add (bad) cmp push cmp inc fstl jl xchg aaa das cld int3 leave dec jbe push xchg push or sub lret push arpl jbe mov or dec jne js nop scas cmp dec lret xor push dec jo mov xor jne mov lock xchg xchg pop in pushf pop mov pop sti aad jge dec push int3 enter (bad) jae test jns cmp aad test leave and cmpsl mov cmc (bad) lock inc (bad) aam dec mov add lcall addr16 pop lea xchg lret ret popa jb cmp xor repz (bad) dec jbe,pn push (bad) fidiv push nop mov mov (bad) jl mov xor push adc lods xor sub (bad) mov dec ljmp or sub dec in xor adc outsl es cmpl ficomp loop and cs sahf push outsl lea mov rorl sub sub stc clc lea xlat xor aas adc test sahf cmp or push push xchg out rol mov and lcall pop or add xchg lret xor loop aad and hlt mov lods add stos sbb cs adc xchg loop pop mov rcll imul inc repnz hlt les lcall (bad) aaa add adc jbe sahf xchg (bad) cltd into xchg jb in cmpl sbb pop (bad) cmp jnp ja lcall and nop enter jne ret fwait das (bad) (bad) in cmc mov sbb lcall push sbb fistpl (bad) push jae insb inc xor outsl push daa cmp mov nop pop xchg mov push pop jl adc (bad) imul add into cmp jg scas in aaa add jle std fsubr ret aaa dec popf bnd fcomp cvtps2pd mov inc pop sbb scas xchg jne xor or dec pusha popa and add icebp xor add pop and out mov fiaddl xchg jle jge pop ljmp sbbb cmp sbb jmp push jnp sbb cmc mov mov scas xor test mov lret rclb ljmp in cmc ss sub push jl mov pop (bad) in mulb cmp mov in or fidivl enter xchg ss add adc ja hlt sbb inc pop push (bad) pop pop addr16 aam mov adc test mov aaa push mov push mov mov aad stos bound xor sbb fildl shlb inc fcompl dec test adc cmp cld mov scas adc in mov insl (bad) mov out lret imulb scas loop sti dec mov in call and (bad) pop dec fcmovne insb jge lret jge mov dec inc fs add inc xor xorb bound sub movsl (bad) insb sbb push or jp imul mov xchg adc jnp in lahf hlt mov outsl lods (bad) mov jp and cltd dec insb jne inc sar pushf lock jbe ss insb xchg stos pop insb xchg inc sbb mov mov fimul int push mov mov dec inc stos push fdivl addr16 jno cs jmp adc loop dec jg inc scas repnz xchg add popa negl (bad) rclb cmp jecxz push roll xor icebp aaa push popf xchg adc push mov fimul std shrl sub and add sbb xchg rclb mov pushf outsl sarb jp rcrb xchg (bad) cmp roll rol test ret aas pop aaa push daa adc psubb lock stos clc shl mov and repz inc test jge decb mov mov and out mov xchg mov mov jbe mov into inc or mov leave popf and cmp imul xchg xor jns lea sub stos push lret mov cmp outsl nop scas jge push int3 mov jb stc inc mov jg inc lods (bad) add mov sub or push mov sbb enter outsl js or das movsb sub hlt jmp or imul imul cmp sbb daa cli (bad) xor cmp outsl lret outsb daa movsb push aaa jnp cmp std in (bad) and mov cmp lcall mov xor jp test mov into cld mov icebp test cmpsl lret inc cmpsb sbb es stc fldl jge cmp mov movsl lcall cwtl popa and or das pop aad sbb xor mov mov push xchg leave push sbbl pop mov pop sbb cmp xchg mov aaa ds pop fldl fisubrl add repnz xlat aad jg inc adc dec incl pop sbb inc add sbb test xor ja or mov xor test jecxz push (bad) fildll out jbe mov inc pop push mov dec inc mov jle push mov (bad) push push jmp outsb mov inc movl lahf mov pop jl rcll xor in es pop add aas pop and mov inc clc jp jge dec iret test push or sub pusha mov dec arpl adc scas fldcw (bad) mov stc cmp stc pop jno dec or inc cld add jle xchg lods xor xchg in jb push inc dec int3 stos je jnp and into aad popa stos mov inc adc cmp sub or and mov leave cmpsl xchg js xchg fprem1 sub or cmp bound or inc and cmc cmc imul xor and cmc inc stc mov add loop pandn bound push lock fcomi stc jns cmc pop loopne mov aas ds dec call int3 test pop cmp daa xor push add jnp mov test adc pop (bad) int3 test push leave (bad) cmc sub cmpsl sub jb cmp std adc out mov clc (bad) repnz or push jecxz xchg into push es in outsl bound out jge je stos mov enter jne,pt and mov push icebp lahf lahf mov fnstcw push jmp rorl ds inc stos aaa adc mov sbb xor adc add mov adc imul hlt mov or dec xchg adc das xchg fmull int3 out scas jmp adc aaa stc pop ja jbe fistpll mov stc xchg mov or leave lods inc test add mov pop cltd inc jno ds (bad) fs lret dec add dec lret stc js mov in xchg sub cwtl sbb sbb sbb and mulb xchg push sarl jne push mov cwtl jge in jo jne jecxz mov jne add fcomp add fwait fs outsb cwtl xlat sub mov or cmpsl aaa add and ja and shll pop push in aam std incb dec mov (bad) lret cmp jo js add xor cmp sub sub fs test lret xor aad rcl andl lds sub cmc out test ret dec lods inc stc (bad) loope mov adc popl lods mov fwait jp sti dec cltd jl aas xchg setp pop pop scas jge adc lcall popf aas jb and hlt sarl push jns push mov ja push loopne cmc jp enter jecxz aas in imul ljmp (bad) add add inc (bad) in mov mov fstpl sub push insl sbb je pop das ds lahf (bad) or sarb (bad) mov (bad) push jb mov imul scas add fucomip cmp ret pop stc mov movsl xor fisubrl dec mov fild push push into xor mov jb popl dec aas xor push popa sub mov sti xchg sbb in (bad) jge ss mov mov jmp in roll scas mov add jo or mov rclb jp int3 or daa (bad) dec mov adc lds add push ds mov push mov (bad) js shr pop enter imul stc mov xor neg popa loopne xlat push pop ficoml out icebp ss sub or mov daa fs fs xor sub outsb mov jmp jo xchg jg jo push imul push mov test int in jbe int3 mov add xchg in jne and add add or arpl jns push incb dec fidivr push (bad) outsb imul icebp xchg adc xor or mov fistpll roll hlt lds push jecxz sbb push lds movsl stos aam subl bound shlb dec cmpsb or push inc sub adc sub jo clc pop in push jmp cmp jecxz aaa sahf add ds jne inc pushf fisubl jge cli adc iret or push imul loopne push out imul call cmp aaa xor pop int3 jns sub push sarb lock test inc dec test aaa cmpsb inc addr16 daa jo ret call sbb sarb xchg xor xor mov pusha lret sbb xor loopne push mov push xchg sysexit dec (bad) push mov mov push imul adc cmp add movsl clc popa je push adc xlat movsb sbb mov int jl adc lahf imul push mov (bad) dec xor ss ljmp stos das mov fistpll xchg mov pusha fcomps dec jne,pt ret insb mov cmp sub and xor (bad) cmp mov push clc jnp outsb popa imul mov shll imul cmp sbb push in (bad) mov lds es leave push fwait ja ret test cmp pop dec fidivl fs in test daa (bad) pop jp cltd iret ja xchg test rcr das in cmp dec sbb ja inc inc and movsb (bad) mov inc sbbl sbb insl out mov add inc or dec jmp gs push and int mov negb xabort cmp stos push or test js mov jp jg pop scas imul sub adc icebp (bad) sbb pop cmpsb mov xchg daa iret call ficomp stos fildl jg cs or xchg repnz mov pusha and cmp cmp ljmp loop xor mov insb test mov cmpsl xor dec movsl xchg xorl (bad) mov out mov push stc add inc je lock xor (bad) ja ds and inc sub ss stc or jno (bad) imul mov lea or aas inc jl jbe test or fild mov popa dec pop push or fsubrs pop mov test inc or mov lods inc loopne pop push jg fstps (bad) and stos and cmp std mov and roll scas jge adc and hlt cmp int sub jg mov xchg test push pushf cmp xchg mov cli (bad) imul popf mov jl and and test mov jecxz push add aam pop pusha mov jp mov sbb and xchg mov jb fcoml inc push mov dec fwait or xor das jo in in cmp sbb fcomps pop test (bad) cmp inc ret aas add xor movsb or and mov bound out inc test pop sti movsl aaa inc pop mov enterw mov pop mov loopne xor sti jmp jecxz sti xor cld and inc les clc (bad) cltd xchg adc imul loop pop push xchg cmpsb stos push sub arpl dec mov pop out jb out and rcr ret add pop or mov jnp out fnstsw jnp out (bad) incl add pop mov pop loop add add dec inc dec inc scas inc pusha (bad) or orb add add and 